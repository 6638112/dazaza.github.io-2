[{"category": "", "categoryclass": "", "imagename": "36f340fcf36bf88bcd5a4d8a702eb064.jpg", "infoid": 1017007, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u624b\u673a\u6210\u763e\u662f\u4eba\u7c7b\u5386\u53f2\u4e0a\u6700\u5927\u7684\u975e\u836f\u7269\u6210\u763e\u4e4b\u4e00\u3002\u7814\u7a76\u8868\u660e\uff0c\u8fc7\u5ea6\u4f7f\u7528\u624b\u673a\u4e0e\u62d6\u5ef6\u3001\u81ea\u6740\u3001\u7834\u574f\u7761\u7720\u3001\u5ffd\u89c6\u98df\u7269\u548c\u6c34\u3001\u5934\u75db\u3001\u5de5\u4f5c\u6548\u7387\u4f4e\u4e0b\u3001\u4eba\u9645\u5173\u7cfb\u4e0d\u7a33\u5b9a\u3001\u8eab\u4f53\u5065\u5eb7\u4e0d\u4f73(\u773c\u775b\u75b2\u52b3\u3001\u8eab\u4f53\u75bc\u75db\u3001\u59ff\u52bf\u3001\u624b\u75b2\u52b3)\u548c\u7cbe\u795e\u5065\u5eb7\u4e0d\u826f(\u6291\u90c1\u3001\u7126\u8651\u3001\u538b\u529b)\u6709\u5173\u3002\u8fd9\u4e9b\u95ee\u9898\u53ef\u80fd\u662f\u624b\u673a\u6210\u763e\u7684\u539f\u56e0\uff0c\u4e5f\u53ef\u80fd\u662f\u7ed3\u679c\u3002\n\u90a3\u4e48\uff0c\u5728\u4e00\u4e2a\u5982\u6b64\u70ed\u7231\u4e92\u8054\u7f51\u7684\u4e16\u754c\u91cc\uff0c\u6211\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u89e3\u51b3\u624b\u673a\u6210\u763e\u95ee\u9898\u5462\uff1f\u6bd5\u7adf\uff0c\u5b83\u5e2e\u52a9\u8001\u5e74\u4eba\u4fdd\u6301\u72ec\u7acb\uff0c\u6ee1\u8db3\u6211\u4eec\u7684\u793e\u4f1a\u9700\u6c42\uff0c\u8ba9\u6211\u4eec\u4ece\u538b\u529b\u4e2d\u5f97\u5230\u5b89\u6170\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u5b66\u4e60(\u5171\u540c\u7684\u5174\u8da3\u5c0f\u7ec4\uff0c\u4eb2\u548c\u529b\u7a7a\u95f4)\u3002\n\u5c0f\u7a8d\u95e8\uff1a\u5f53\u4f60\u5728\u9762\u5bf9\u9762\u7684\u8c08\u8bdd\u4e2d\u611f\u5230\u65e0\u804a\uff0c\u6216\u8005\u4e0d\u60f3\u548c\u522b\u4eba\u4e92\u52a8\u65f6\uff0c\u4f60\u4f1a\u6162\u6162\u5f00\u59cb\u4f7f\u7528\u624b\u673a\uff0c\u628a\u6ce8\u610f\u529b\u4ece\u5bf9\u65b9\u8eab\u4e0a\u8f6c\u79fb\u5f00\u5417\uff1f\u51b7\u843d\u522b\u4eba\u800c\u4e0d\u7406\u776c\u4f60\u7684\u624b\u673a\u88ab\u79f0\u4e3a\u6020\u6162(\u7535\u8bdd+\u51b7\u843d)\uff0c\u8fd9\u662f\u4eba\u9645\u5173\u7cfb\u4e2d\u5e38\u89c1\u7684\u62b1\u6028\u3002\u5439\u5618\u4f60\u7684\u4f34\u4fa3\u88ab\u79f0\u4e3aPphubing\u6216Partner Pubing\uff0c\u7814\u7a76\u627f\u8ba4\uff0c\u8fd9\u4f1a\u6076\u5316\u5173\u7cfb\u6ee1\u610f\u5ea6\u548c\u751f\u6d3b\u6ee1\u610f\u5ea6\uff0c\u8fd8\u53ef\u80fd\u52a0\u5267\u6291\u90c1\u3002\n\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f\u624b\u673a\u4e0a\u763e\uff0c\u4ec0\u4e48\u662f\u8fc7\u5ea6\u4f7f\u7528\u624b\u673a\u3002\u624b\u673a\u6210\u763e\u6216\u5f3a\u8feb\u6027\u624b\u673a\u4f7f\u7528\u4f34\u968f\u800c\u6765\u7684\u662f\u7f51\u763e\u548c\u793e\u4ea4\u5a92\u4f53\u6210\u763e\u3002\u5fc3\u7406\u5b66\u5bb6\u4e5f\u79f0\u5176\u4e3a\u201c\u6709\u95ee\u9898\u7684\u624b\u673a\u4f7f\u7528\u201d\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u804c\u4f4d\uff0c\u6211\u4eec\u5c06\u628a\u4ed6\u4eec\u653e\u5728\u4e00\u8d77\u8003\u8651\u3002\u624b\u673a\u662f\u4f1a\u517b\u6210\u4e60\u60ef\u7684--\u4e00\u65e6\u4f60\u8d70\u8fdb\u90a3\u4e2a\u5154\u5b50\u6d1e\uff0c\u4f60\u5c31\u4f1a\u7528\u5f97\u8d8a\u6765\u8d8a\u591a\u3002\u5c31\u50cf\u6bd2\u54c1\u4e00\u6837\uff0c\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u6c89\u8ff7\u4e8e\u624b\u673a\u6216\u624b\u673a\u4e0a\u7684\u6d3b\u52a8\uff0c\u4ece\u800c\u5bfc\u81f4\u4e0a\u763e\u3002\u6709\u5931\u63a7\u7684\u8650\u5f85\u3001\u60c5\u7eea\u7684\u53d8\u5316\u3001\u8fc7\u5ea6\u7684\u4f7f\u7528\u6b32\u671b\u3001\u4e0d\u80fd\u4f7f\u7528\u624b\u673a\u65f6\u7684\u6613\u6012\u3001\u6124\u6012\u7b49\u62bd\u79bb\u884c\u4e3a\uff0c\u5bf9\u8eb2\u907f\u624b\u673a\u7684\u5bb9\u5fcd\u5ea6\u4f4e\uff0c\u624b\u673a\u4ee5\u8d1f\u9762\u7684\u65b9\u5f0f\u5e72\u6270\u751f\u6d3b\u3002\n\u4e25\u683c\u5730\u8bf4\uff0c\u4e0a\u763e\u662f\u201c\u5931\u53bb\u63a7\u5236\uff0c\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\uff0c\u5bb9\u5fcd\uff0c\u9700\u8981\u9010\u6e10\u589e\u52a0\u7684\u65f6\u95f4\u548c\u5949\u732e\uff0c\u5e76\u4e25\u91cd\u5e72\u6270\u65e5\u5e38\u751f\u6d3b(Echeburua\u7b49\u4eba\uff0c2009\u5e74)\u3002\u201d\u624b\u673a\u3001\u57fa\u4e8e\u4e92\u8054\u7f51\u7684\u6d3b\u52a8\uff0c\u4ee5\u53ca\u4efb\u4f55\u4e0e\u6b64\u76f8\u5173\u7684\u6280\u672f\uff0c\u90fd\u53ef\u80fd\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4e0a\u763e(\u5c3d\u7ba1\u8bb8\u591a\u4eba\u4e0d\u540c\u610f)\u3002\u6709\u65f6\uff0c\u624b\u673a\u6210\u763e\u8005\u9700\u8981\u5728\u533b\u9662\u5eb7\u590d\u3002\n\u4eba\u4eec\u6c89\u8ff7\u4e8e\u624b\u673a\u5f80\u5f80\u662f\u56e0\u4e3a\u4ed6\u4eec\u60f3\u9003\u907f\u73b0\u5b9e\uff0c\u83b7\u5f97\u793e\u4f1a\u62a5\u5e94\uff0c\u5e94\u5bf9\u793e\u4ea4\u7126\u8651\u548c\u81ea\u5c0a\u5e26\u6765\u7684\u538b\u529b\uff0c\u8ffd\u968f\u81ea\u5df1\u5bf9\u793e\u4f1a\u8ba4\u53ef\u3001\u70b9\u8d5e\u548c\u5176\u4ed6\u7c7b\u578b\u5956\u52b1\u7684\u8d2a\u5a6a\uff0c\u6216\u8005\u73a9\u5956\u52b1\u6e38\u620f\u3002\u6e90\u6e90\u4e0d\u65ad\u7684\u6570\u5b57\u5956\u52b1\u548c\u4fe1\u606f\u4f1a\u8ba9\u4eba\u4e0a\u763e\uff0c\u65e5\u5e38\u7684\u56f0\u96be\u4f1a\u628a\u4eba\u63a8\u5411\u4e0a\u763e\u3002\n\u7535\u8bdd\u4f7f\u7528\u6ca1\u6709\u6bcf\u4e2a\u4eba\u90fd\u540c\u610f\u7684\u5206\u754c\u70b9\uff0c\u4f46\u8fd9\u91cc\u6709\u4e00\u4e9b\u6307\u6807\u3002\n\u4f60\u8fde\u7eed\u51e0\u4e2a\u5c0f\u65f6\u5728\u624b\u673a\u4e0a\u73a9\u6e38\u620f\uff0c\u6d4f\u89c8\u793e\u4ea4\u5a92\u4f53\uff0c\u6253\u5f00\u548c\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\uff0c\u7ed9\u522b\u4eba\u53d1\u77ed\u4fe1\u9080\u8bf7\u804a\u5929\uff0c\u7b49\u7b49\u3002\n\u4f60\u7ecf\u5e38\u62ff\u8d77\u7535\u8bdd\uff0c\u6ca1\u6709\u4efb\u4f55\u76ee\u7684\u6765\u68c0\u67e5\u901a\u77e5\uff0c\u6216\u8005\u770b\u770b\u4f60\u7684\u793e\u4ea4\u9988\u9001\u662f\u5426\u6709\u4ec0\u4e48\u53d8\u5316\u3002\n\u4f60\u7684\u7ebf\u4e0a\u548c\u7ebf\u4e0b\u884c\u4e3a\u53d8\u5f97\u66f4\u52a0\u4e00\u4f53\u5316\uff0c\u4f60\u4e0d\u77e5\u9053\u4f60\u5728\u6570\u5b57\u73b0\u5b9e\u6216\u7269\u8d28\u73b0\u5b9e\u4e2d\u505a\u4e86\u4ec0\u4e48\u3002\n\u5982\u679c\u60a8\u7684\u624b\u673a\u6ca1\u7535\u6216\u7535\u91cf\u4e0d\u8db3\u3001\u8d85\u51fa\u8986\u76d6\u8303\u56f4\u6216\u6570\u636e/\u5e73\u8861\u4e0d\u8db3\uff0c\u60a8\u5c31\u4f1a\u53d8\u5f97\u7126\u8e81\u4e0d\u5b89\u3002\n\u4f60\u628a\u4f60\u7684\u624b\u673a\u5f53\u4f5c\u5b89\u5168\u6bef\uff0c\u6ca1\u6709\u5b83\u4f60\u5728\u793e\u4ea4\u805a\u4f1a\u4e0a\u4f1a\u611f\u5230\u4e0d\u8212\u670d\u3002\n\u4f60\u7684\u65e5\u5e38\u6d3b\u52a8\u9000\u5c45\u6b21\u8981\u5730\u4f4d\uff0c\u4eba\u9645\u5173\u7cfb\u7d27\u5f20\uff0c\u4f60\u4e0d\u80fd\u96c6\u4e2d\u7cbe\u529b\uff0c\u4e0d\u80fd\u81f4\u529b\u4e8e\u751f\u6d3b\u4e2d\u91cd\u8981\u7684\u4e8b\u60c5\u3002\n\u73a9\u51e0\u4e2a\u5c0f\u65f6\u7684\u4f7f\u547d\u53ec\u5524\u6216\u7edd\u5730\u6c42\u751f\uff0c\u793e\u4ea4\u6d3b\u52a8\u51e0\u4e4e\u6ca1\u6709\u8bda\u5b9e\u7684\u6c9f\u901a\u3002\n\u793e\u4ea4\u9700\u6c42\u5f97\u4e0d\u5230\u6ee1\u8db3(\u6027\u4eb2\u5bc6\u3001\u4eb2\u5bc6\u53cb\u8c0a\u3001\u8eab\u4f53\u63a5\u89e6\u7b49)\u3002\u800c\u5728\u7ebf\u66ff\u4ee3\u54c1\u88ab\u7528\u6765\u5f25\u8865\u7cdf\u7cd5\u7684\u793e\u4f1a\u5065\u5eb7\u72b6\u51b5(\u804a\u5929\u673a\u5668\u4eba\u3001\u56de\u97f3\u5ba4\u3001\u8272\u60c5\u3001\u793e\u4ea4\u6e38\u620f\u3001\u865a\u62df\u73b0\u5b9e\u793e\u4ea4\u6e38\u620f\uff0c\u5982\u7b2c\u4e8c\u4eba\u751f\u3001\u5361\u901a\u5173\u7cfb)\u3002\n\u65e0\u6cd5\u5728\u7ebf\u4e0b\u4e16\u754c\u4e2d\u611f\u53d7\u5230\u6109\u60a6\u548c\u5174\u594b\uff0c\u4f46\u8fc7\u5ea6\u7684\u60c5\u7eea\u4e0e\u5728\u7ebf\u5956\u52b1\u6709\u5173\uff0c\u5982\u8d4c\u535a\u3001\u70b9\u8d5e\u3001\u5206\u4eab\u3001\u8ffd\u968f\u8005\u3001\u6027\u77ed\u4fe1\u3001\u624b\u6deb\u8272\u60c5\u7b49\u3002\n\u6839\u636e2019\u5e74\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u5e73\u5747\u6bcf\u4e2a\u4eba\u6bcf\u5929\u82b1\u5728\u624b\u673a\u4e0a\u7684\u65f6\u95f4\u7ea6\u4e3a3.5\u4e2a\u5c0f\u65f6\uff0c\u5176\u4e2d\u6392\u540d\u524d20%\u7684\u4eba\u6bcf\u5929\u82b1\u8d39\u7684\u65f6\u95f4\u8d85\u8fc74.5\u4e2a\u5c0f\u65f6\u3002\u9694\u79bb\u589e\u52a0\u4e86\u8fd9\u4e9b\u6570\u5b57-\u8bb8\u591a\u7528\u6237\u62a5\u544a\u6bcf\u5929\u8d85\u8fc78\u5c0f\u65f6\u3002\n2019\u5e74\u7684\u62a5\u544a\u8fd8\u8868\u793a\uff0c70%\u7684\u7535\u8bdd\u4f7f\u7528\u65f6\u95f4\u4e0d\u52302\u5206\u949f\uff0c50%\u7684\u7535\u8bdd\u63a5\u542c\u53d1\u751f\u5728\u4e0a\u6b21\u63a5\u542c\u540e\u76843\u5206\u949f\u5185\u3002\n\u53e6\u4e00\u4efd2019\u5e74\u62a5\u544a(2018\u5e74\u6570\u636e)\u79f0\uff0c\u81f3\u5c11\u670933\u4ebf\u4eba\u901a\u8fc7\u624b\u673a\u4f7f\u7528\u4e92\u8054\u7f51\u548c\u793e\u4ea4\u5a92\u4f53\u3002\nComScore\u76842019\u5e74\u5168\u7403\u79fb\u52a8\u72b6\u51b5\u62a5\u544a\u79f0\uff0c\u7f8e\u56fd70%\u7684\u6570\u5b57\u5a92\u4f53\u53c2\u4e0e\u662f\u901a\u8fc7\u667a\u80fd\u624b\u673a\u8fdb\u884c\u7684\u3002\u56e0\u6b64\uff0c\u7535\u89c6\u3001\u6e38\u620f\u3001\u7b14\u8bb0\u672c\u7535\u8111\u3001\u6e38\u620f\u673a\u3001\u5f71\u9662\u7b49\u90fd\u88ab\u6324\u8fdb\u4e86\u5269\u4f59\u7684\u5fae\u4e0d\u8db3\u9053\u768430%\u3002\n\u624b\u673a\u6210\u763e\u4e0e\u7126\u8651\u5bc6\u5207\u76f8\u5173\uff0c\u800c\u7126\u8651\u5f80\u5f80\u4f1a\u964d\u4f4e\u4e0e\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4eba\u4ea4\u5f80\u7684\u52a8\u529b\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u91cd\u65b0\u4e0e\u7ebf\u4e0b\u4e16\u754c\u7684\u4eba\u4eec\u8054\u7cfb\u662f\u4e00\u4e2a\u63d0\u9ad8\u751f\u6d3b\u8d28\u91cf\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7531\u4e8e\u4e0a\u763e\u5bfc\u81f4\u7684\u4e0d\u5fc5\u8981\u7684\u52a8\u529b\u4e0b\u964d\u4f7f\u5f97\u7ef4\u6301\u793e\u4f1a\u5065\u5eb7\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u624b\u673a\u6210\u763e\u4f1a\u5bfc\u81f4\u65e5\u5e38\u751f\u6d3b\u4e2d\u8ba4\u77e5\u80fd\u529b\u4e0b\u964d\u3002\u8fd9\u610f\u5473\u7740\u6ce8\u610f\u529b\u5dee\u3001\u8bb0\u5fc6\u529b\u5dee\u3001\u63a8\u7406\u80fd\u529b\u5dee\u3001\u51b3\u7b56\u80fd\u529b\u5dee\u7b49\u7b49\u3002\u5176\u4e2d\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u5c31\u662f\u7761\u7720\u7684\u4f5c\u7528\u3002\u4e0a\u763e\u4f1a\u6270\u4e71\u7761\u7720\uff0c\u7761\u7720\u4f1a\u6076\u5316\u8ba4\u77e5\u80fd\u529b\u3002\u7136\u800c\uff0c\u81ea\u6211\u8c03\u8282(\u4e2a\u4eba\u63a7\u5236\u3001\u5bf9\u5065\u5eb7\u9009\u62e9\u7684\u627f\u8bfa\u3001\u5bb9\u5fcd\u8d1f\u9762\u60c5\u7eea)\u53ef\u4ee5\u62b5\u6d88\u6210\u763e\u7684\u8d1f\u9762\u5f71\u54cd\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u514b\u670d\u5b83\u3002\n\u4e00\u4e2a\u4e0d\u5065\u5168\u7684\u5bb6\u5ead\u53ef\u80fd\u4f1a\u628a\u5b69\u5b50\u63a8\u5165\u6bd2\u763e\uff0c\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u793e\u4ea4\u7126\u8651\u3002\u7834\u788e\u7684\u5bb6\u5ead\u6216\u4e0d\u5065\u5eb7\u7684\u7236\u6bcd\u517b\u80b2\u65b9\u5f0f\uff0c\u5982\u5ffd\u89c6\u6216\u8fc7\u5ea6\u63a7\u5236\uff0c\u5f80\u5f80\u4f1a\u963b\u788d\u60c5\u7eea\u6210\u957f\u3002\u5b69\u5b50\u4eec\u53ef\u80fd\u65e0\u6cd5\u5b66\u4f1a\u5982\u4f55\u5728\u793e\u4ea4\u73af\u5883\u4e2d\u4e3e\u6b62\u5f97\u4f53\u3002\u53ef\u80fd\u4f1a\u5bb3\u6015\u5632\u7b11\u3001\u53cd\u5bf9\u3001\u5931\u671b\u7b49\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u4e00\u79cd\u9690\u7ea6\u53ef\u89c1\u7684\u4fe1\u5ff5\uff0c\u6bd4\u5982\u201c\u6211\u4e0d\u591f\u597d\u201d\u6216\u201c\u6211\u662f\u4e2a\u574f\u5b69\u5b50\u201d\uff0c\u8fd9\u4f1a\u7ed9\u5b69\u5b50\u5e26\u6765\u538b\u529b\u3002\u8fd9\u4e9b\u6050\u60e7\u6216\u60f3\u6cd5\u8f6c\u79fb\u5230\u73b0\u5b9e\u4e16\u754c\uff0c\u5b69\u5b50\u4eec\u901a\u8fc7\u9000\u56de\u624b\u673a\u6765\u5e94\u5bf9\u7531\u6b64\u5f15\u53d1\u7684\u793e\u4ea4\u7126\u8651-\u5728\u90a3\u91cc\uff0c\u5e7b\u60f3\u7684\u6570\u5b57\u4e16\u754c\u5c06\u4ed6\u4eec\u4ece\u73b0\u5b9e\u751f\u6d3b\u4e2d\u62ef\u6551\u51fa\u6765\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6b63\u5ff5--\u610f\u8bc6\u5230\u81ea\u5df1\u7684\u884c\u4e3a\uff0c\u4ee5\u89c2\u5bdf\u8005\u7684\u8eab\u4efd\u6d3b\u5728\u5f53\u4e0b--\u53ef\u4ee5\u51cf\u5c11\u624b\u673a\u6210\u763e\u7684\u8d1f\u9762\u5f71\u54cd\u3002\n\u6f5c\u5728\u7684\u7cbe\u795e\u5065\u5eb7\u72b6\u51b5\u53cc\u76f8\u60c5\u611f\u969c\u788d\u3001\u6291\u90c1\u3001\u7126\u8651\u548c\u4f9d\u604b\u95ee\u9898\u4f1a\u589e\u52a0\u624b\u673a\u6210\u763e\u7684\u98ce\u9669\u3002\u800c\u6539\u5584\u5fc3\u7406\u5065\u5eb7\u53ef\u4ee5\u5bf9\u6297\u6210\u763e\u3002\n\u5728\u4e00\u5929\u4e2d\u7684\u7279\u5b9a\u65f6\u95f4\u6bb5\uff0c\u5728\u56fa\u5b9a\u7684\u6bcf\u65e5\u9650\u5236\u5185\u7ed9\u81ea\u5df1\u7559\u51fa\u5c3d\u53ef\u80fd\u591a\u7684\u65f6\u95f4\u3002\u53ea\u8981\u4f60\u80fd\u5148\u5c55\u793a\u4e00\u4e9b\u6210\u679c\u3002\u968f\u673a\u901a\u77e5\u548c\u968f\u673a\u4f53\u9a8c\u4f1a\u8ba9\u4f60\u7cbe\u51c6\u5730\u68c0\u67e5\u624b\u673a\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u968f\u673a\u7684\u3002\u4e0d\u53ef\u9884\u6d4b\u7684\u901a\u77e5\u548c\u884c\u52a8\u53f7\u53ec\u5f88\u96be\u9884\u6599\uff0c\u6240\u4ee5\u5927\u8111\u901a\u8fc7\u4e0d\u65ad\u4ea7\u751f\u62ff\u8d77\u7535\u8bdd\u67e5\u770b\u7684\u51b2\u52a8\u6765\u6700\u5927\u5316\u5176\u6f5c\u5728\u7684\u5956\u52b1(\u611f\u89c9\u5f88\u68d2)\u3002\u5b89\u6392\u4e00\u4e2a\u5c0f\u65f6\u4f7f\u7528\u4f60\u7684\u624b\u673a\uff0c\u6216\u8005\u6bcf45\u5206\u949f\u68c0\u67e5\u4e00\u6b21\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u56de\u62a5\u5c06\u5f88\u96be\u9884\u6d4b\uff0c\u4f46\u5b83\u4eec\u4f1a\u5728\u5df2\u77e5\u7684\u65f6\u95f4\u53d1\u751f\uff0c\u4f60\u7684\u5927\u8111\u4f1a\u53d1\u73b0\uff0c\u4e0e\u5b8c\u5168\u653e\u5f03\u624b\u673a\u76f8\u6bd4\uff0c\u8c03\u6574\u8d77\u6765\u66f4\u5bb9\u6613\u3002\n\u4e60\u60ef\u662f\u5f88\u96be\u6539\u6389\u7684\uff0c\u56e0\u4e3a\u4f60\u5927\u8111\u4e2d\u7684\u795e\u7ecf\u5143\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u50f5\u786c\u5730\u6fc0\u53d1\u3002\u4e00\u65e6\u4e00\u4e2a\u52a8\u4f5c\u91cd\u590d\u8db3\u591f\u591a\uff0c\u795e\u7ecf\u56de\u8def\u5c31\u4f1a\u53d8\u5f97\u6709\u6548\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f1a\u81ea\u52a8\u6307\u6325\u548c\u53e3\u8ff0\u884c\u4e3a\u3002\u53cd\u5236\u4ed6\u4eec\u7684\u503e\u5411\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u91cd\u590d\u6b21\u6570\u8d8a\u591a\uff0c\u8fd9\u4e9b\u795e\u7ecf\u5143\u5c31\u8d8a\u7a33\u5b9a\u3002\u8fd9\u4e9b\u795e\u7ecf\u56de\u8def\u4ee5\u4e00\u79cd\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u89e6\u53d1\uff0c\u5b83\u4eec\u51e0\u4e4e\u4e0d\u9700\u8981\u5916\u90e8\u63a8\u52a8\u5c31\u80fd\u81ea\u52a8\u89e6\u53d1\u3002\u5bf9\u4e8e\u4e60\u60ef\u6027\u884c\u4e3a\u7684\u5f00\u59cb\uff0c\u4f60\u53ef\u80fd\u77e5\u4e4b\u751a\u5c11\uff0c\u751a\u81f3\u4e00\u65e0\u6240\u77e5\u3002\u7136\u800c\uff0c\u6253\u7834\u4e60\u60ef\u610f\u5473\u7740\u4f60\u5fc5\u987b\u6539\u53d8\u8fd9\u4e9b\u795e\u7ecf\u5143\u7684\u884c\u4e3a\u65b9\u5f0f\uff0c\u552f\u4e00\u7684\u65b9\u6cd5\u5c31\u662f\u786e\u4fdd\u795e\u7ecf\u56de\u8def\u7684\u6539\u53d8\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u6539\u53d83\u4ef6\u4e8b\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\n\u8fd9\u4e2a\u4e60\u60ef\u53d1\u751f\u7684\u80cc\u666f--\u786e\u5b9a\u4f60\u8fdb\u5165\u624b\u673a\u65f6\u7684\u5fc3\u60c5--\u4f7f\u7528\u9ed1\u6d1e\uff0c\u505a\u4e00\u9879\u6539\u53d8\u60c5\u7eea\u7684\u6d3b\u52a8\u3002\u4e0e\u5176\u5750\u7740\u6eda\u52a8\uff0c\u4e0d\u5982\u5f00\u59cb\u6e05\u7406\u6216\u5f00\u59cb\u5de5\u4f5c\uff0c\u5076\u5c14\u6253\u4e2a\u7535\u8bdd\u4f11\u606f\u4e00\u4e0b\u3002\n\u6253\u65ad\u542f\u52a8\u4e60\u60ef\u7684\u89e6\u53d1\u56e0\u7d20--\u627e\u51fa\u89e6\u53d1\u56e0\u7d20\uff0c\u7136\u540e\u7acb\u5373\u5206\u6563\u81ea\u5df1\u7684\u6ce8\u610f\u529b\uff0c\u6362\u4e2a\u623f\u95f4\uff0c\u53bb\u6d17\u6fa1\u7b49\u7b49\u3002\n\u5173\u4e8e\u8fd9\u4e2a\u4e60\u60ef\u7684\u53e3\u5934\u53d9\u8ff0-\u6539\u53d8\u4f60\u5173\u4e8e\u624b\u673a\u6210\u763e\u7684\u81ea\u6211\u8c08\u8bdd\u3002\u4f8b\u5982\uff0c\u5c06\u201c\u6211\u9700\u8981\u4f7f\u7528\u6211\u7684\u624b\u673a\uff0c\u6211\u73b0\u5728\u5c31\u60f3\u8981\u4f7f\u7528\u5b83\u201d\u6539\u4e3a\u201c\u6211\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u7b56\u7565\uff0c\u4ee5\u6709\u9650\u7684\u65b9\u5f0f\u4f7f\u7528\u6211\u7684\u624b\u673a\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u6c89\u8ff7\u4e8e\u624b\u673a\uff0c\u800c\u4e14\u4ecd\u7136\u5f88\u4eab\u53d7\u5b83\u3002\u201d\n\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6709\u5199\u5b8c\u7535\u5b50\u90ae\u4ef6\u540e\u9a6c\u4e0a\u76ef\u7740\u624b\u673a\u7684\u4e60\u60ef\uff0c\u53ef\u4ee5\u901a\u8fc7\u8eab\u4f53\u4f38\u5c55\u6765\u6539\u53d8\u4e0a\u4e0b\u6587\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u53d1\u9001\u7136\u540e\u7acb\u5373\u5173\u673a\u6765\u4e2d\u65ad\u89e6\u53d1\u3002\u901a\u8fc7\u544a\u8bc9\u81ea\u5df1\u8fd9\u6837\u7684\u8bdd\u6765\u6539\u53d8\u53d9\u4e8b\u65b9\u5f0f\uff0c\u6bd4\u5982\u201c\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u5e76\u4e0d\u662f\u6211\u5de5\u4f5c\u7684\u7ed3\u675f\uff0c\u6211\u53ef\u4ee5\u5f00\u59cb\u53e6\u4e00\u9879\u4efb\u52a1\uff0c\u7136\u540e\u5728Instagram\u4e0a\u7ee7\u7eed\u3002\u201d\u5373\u4f7f\u8fd9\u53ea\u4f1a\u8ba9\u4f60\u7684\u624b\u673a\u4f7f\u7528\u5ef6\u8fdf\u51e0\u5206\u949f\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u8fdb\u6b65\u3002\n\u8fde\u7eed\u7684\u77ed\u65f6\u95f4\u95f4\u9694\u7535\u8bdd\u68c0\u67e5\u53ef\u80fd\u4e0e\u60a8\u9884\u671f\u7684\u7535\u8bdd\u4f7f\u7528\u60c5\u51b5\u6709\u5f88\u5927\u5173\u7cfb\u3002\u53cd\u7701\u5e76\u95ee\u95ee\u81ea\u5df1\uff0c\u4f60\u671f\u5f85\u7684\u4f1a\u662f\u4ec0\u4e48--\u8fd9\u662f\u4e00\u6b21\u6709\u76ca\u7684\u7ecf\u5386\u5417\uff1f\u8fd9\u662f\u4e00\u79cd\u793e\u4f1a\u4e92\u52a8\u5417\uff1f\u4f60\u5728\u7b49\u4eba\u6765\u627e\u4f60\u5417\uff1f\u4f60\u662f\u60f3\u8981\u4e00\u4e9b\u6fc0\u52a8\u4eba\u5fc3\u7684\u6539\u53d8\u5417\uff1f\u60a8\u662f\u5426\u5e0c\u671b\u6536\u5230\u5927\u91cf\u901a\u77e5\uff0c\u4f46\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u901a\u77e5\uff1f\u8fd9\u4e9b\u95ee\u9898\u5c06\u5e2e\u52a9\u4f60\u5f04\u6e05\u695a\u4f60\u7684\u624b\u673a\u5728\u8865\u507f\u54ea\u4e9b\u5fc3\u7406\u9700\u6c42--\u4e5f\u8bb8\u662f\u5f52\u5c5e\u611f\u6216\u793e\u4f1a\u8ba4\u540c\u611f\u7684\u9700\u6c42\uff0c\u6216\u8005\u662f\u611f\u89c9\u88ab\u6e34\u671b\u7684\u9700\u6c42\u3002\u8bd5\u7740\u4ee5\u66f4\u5065\u5eb7\u7684\u65b9\u5f0f\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u3002\u901a\u5e38\uff0c\u4e0e\u4eba\u9762\u5bf9\u9762\u7684\u4e92\u52a8\u548c\u505a\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u6d3b\u52a8\u5c31\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u3002\n\u7528\u8bb0\u4e8b\u672c+\u94a2\u7b14\u5217\u51fa10\u4e2a\u91cd\u8981\u7684\u5f85\u529e\u4e8b\u9879\u6765\u4ee3\u66ff\u4f60\u7684\u7b2c\u4e00\u4e2a\u4e60\u60ef\u7684\u7535\u8bdd\u4f8b\u7a0b\u3002\u5982\u679c\u8981\u505a\u7684\u4e8b\u60c5\u5bf9\u4f60\u6765\u8bf4\u592a\u4e4f\u5473\u4e86\uff0c\u90a3\u5c31\u75285\u53e5\u80af\u5b9a\u7684\u8bdd\u6765\u4ee3\u66ff\u5b83\u3002\u5982\u679c\u60a8\u5728\u5f00\u59cb\u4efb\u52a1\u4e4b\u524d\u6216\u51c6\u5907\u4e4b\u540e\u4e0d\u4e45\u5c31\u5148\u82b1\u65f6\u95f4\u5728\u624b\u673a\u4e0a\uff0c\u8fd9\u662f\u975e\u5e38\u7406\u60f3\u7684\u3002\n\u5982\u679c\u5b58\u5728\u89e6\u53d1\u4f7f\u7528\u7684\u7279\u5b9a\u5185\u5bb9\uff0c\u8bf7\u5220\u9664\u5e94\u7528\u7a0b\u5e8f\u3002\u4f60\u4e5f\u53ef\u4ee5\u628a\u624b\u673a\u653e\u5728\u4e00\u8fb9\u3002\u5982\u679c\u5220\u9664\u592a\u591a\uff0c\u60a8\u53ef\u4ee5\u5173\u95ed\u901a\u77e5\u3002\u5982\u679c\u8fd9\u8ba9\u4f60\u975e\u5e38\u4e0d\u8212\u670d\uff0c\u90a3\u4e48\u4f60\u7684\u624b\u673a\u4f7f\u7528\u5f88\u53ef\u80fd\u8868\u660e\u4f60\u7684\u793e\u4ea4\u548c\u4e2a\u4eba\u751f\u6d3b\u4e2d\u7684\u7f3a\u70b9\u3002\u4f60\u7684\u751f\u7406\u548c\u5fc3\u7406\u9700\u6c42\u53ef\u80fd\u5f97\u4e0d\u5230\u6ee1\u8db3\uff0c\u5728\u793e\u4ea4\u573a\u5408\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u65e0\u80fd\u4e3a\u529b\u3002\u4f46\u8fd9\u4e9b\u60c5\u51b5\u90fd\u662f\u4e3a\u4e86\u6ee1\u8db3\u4f60\u7684\u793e\u4ea4\u9700\u6c42\u3002\u6240\u4ee5\uff0c\u6162\u6162\u5f00\u59cb\uff0c\u4e3a\u4f60\u7684\u624b\u673a\u4f7f\u7528\u4fdd\u7559\u4e00\u4e2a\u76ee\u7684\u3002\u82b1\u4f60\u7684\u7cbe\u529b\u53bb\u6ee1\u8db3\u4f60\u5728\u7269\u8d28\u4e16\u754c\u4e2d\u7684\u9700\u8981\u3002\n\u5c06\u4f60\u7684\u667a\u80fd\u624b\u673a\u6d3b\u52a8\u5206\u6210\u4e0d\u540c\u7684\u7c7b\u522b\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u7559\u51fa2-5\u5206\u949f\u7684\u65f6\u95f4\u3002\u5728\u8d77\u5e8a\u540e\u81f3\u5c111\u4e2a\u591a\u5c0f\u65f6\uff0c\u7761\u89c9\u524d1\u4e2a\u591a\u5c0f\u65f6\u8fd9\u6837\u505a\u3002\u8fd9\u5c06\u5e2e\u52a9\u60a8\u5728\u7761\u7720\u5f00\u59cb\u548c\u9192\u6765\u65f6\u65ad\u5f00\u7535\u8bdd\u8fde\u63a5\u3002\u5728\u6b64\u671f\u95f4\uff0c\u4f60\u53ef\u4ee5\u505a\u4e00\u9879\u4ee4\u4eba\u6ee1\u610f\u7684\u586b\u5145\u6d3b\u52a8(\u4ee5\u66f4\u5065\u5eb7\u7684\u65b9\u5f0f\u670d\u52a1\u4e8e\u4f60\u7684\u5927\u8111\u5956\u52b1\u7cfb\u7edf)\u3002\u5ffd\u7565\u6240\u6709\u6ca1\u6709\u610f\u4e49\u7684\u6d3b\u52a8\uff0c\u53ea\u505a\u524d\u4e24\u4e2a\u6d3b\u52a8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u67e5\u770b\u7279\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684Instagram\u66f4\u65b0\uff0c\u8bf7\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5ffd\u7565\u6eda\u52a8\u3002\u5982\u679c\u4f60\u60f3\u548c\u67d0\u4eba\u8fdb\u884cSnapchat\uff0c\u90a3\u5c31\u53bb\u505a\u5427\u3002\u6682\u4e14\u4e0d\u63d0\u5728IG\u4e0a\u8f6c\u53d1\u8fd9\u4e9b\u5feb\u7167\u3002\nReddit\u3001Instagram\u3001Facebook\u548cYouTube\u53ef\u80fd\u6b63\u5728\u586b\u8865\u4f60\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u793e\u4ea4\u7f3a\u9677\uff0c\u6bd4\u5982\u5b64\u72ec\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u628a\u81ea\u5df1\u6295\u5165\u5230\u4e00\u573a\u5bcc\u6709\u6210\u6548\u7684\u793e\u4ea4\u667a\u529b\u6e38\u620f\u4e2d(\u5982\u4f55\u4e0e\u65b0\u7684\u4eba\u6253\u4ea4\u9053\uff0c\u5982\u4f55\u53d1\u8d77\u5bf9\u8bdd\uff0c\u7b49\u7b49)\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u589e\u52a0\u6709\u610f\u4e49\u7684\u793e\u4ea4\u4e92\u52a8\u7684\u6570\u91cf\u3002\u82b1\u65f6\u95f4\u548c\u6234\u7740\u8033\u673a\u7684\u4eba\u901a\u7535\u8bdd\uff0c\u6216\u8005\u5f53\u9762\u89c1\u9762\u3002\u8bd5\u7740\u4ee5\u4e00\u79cd\u4f60\u89c9\u5f97\u4f60\u7684\u793e\u4ea4\u9700\u6c42\u5f97\u5230\u6ee1\u8db3\u7684\u65b9\u5f0f\u6765\u5ea6\u8fc7\u4e00\u6bb5\u7f8e\u597d\u7684\u65f6\u5149\u3002\u907f\u514d\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u6ee1\u8db3\u4f60\u6240\u6709\u7684\u793e\u4ea4\u9700\u6c42\u3002\u793e\u4ea4\u5a92\u4f53\u4f7f\u7528\u548c\u5fc3\u7406\u5065\u5eb7\u6709\u7740\u590d\u6742\u7684\u5173\u7cfb\uff0c\u4f60\u53ef\u80fd\u60f3\u5728\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u3002\u793e\u4f1a\u652f\u6301\u662f\u5bf9\u6297\u4e0a\u763e\u7684\u4e00\u79cd\u9632\u5fa1\u624b\u6bb5\u3002\n\u4f60\u53ef\u80fd\u9700\u8981\u88ab\u52a8\u7684\u611f\u89c9\u523a\u6fc0\u3002\u4f60\u53ef\u4ee5\u7ed9\u4f60\u7684\u5927\u8111\u4e00\u4e2a\u66f4\u597d\u3001\u66f4\u4e30\u5bcc\u7684\u66ff\u4ee3\u54c1\uff0c\u6bd4\u5982\u5b66\u4e60\u4e00\u9879\u65b0\u6280\u80fd\u3001\u793e\u4ea4\u3001\u5065\u5eb7\u6e38\u620f\u3001\u8fd0\u52a8\u3001\u7ea6\u4f1a\u3001\u7f8e\u5bb9\u3001\u505a\u996d\u3001\u9605\u8bfb\u7b49\u7b49\u3002\u5982\u679c\u4f60\u5fc5\u987b\u4f7f\u7528\u624b\u673a\uff0c\u9700\u8981\u989d\u5916\u7684\u5206\u5fc3\uff0c\u90a3\u5c31\u6539\u53d8\u624b\u673a\u6d3b\u52a8\u7684\u7c7b\u578b\u3002\u4e5f\u8bb8\u56fd\u9645\u8c61\u68cb\u6216\u6570\u72ec\u7684\u80cc\u666f\u6e38\u620f\u53ef\u4ee5\u63d0\u4f9b\u8fd9\u79cd\u523a\u6fc0\u3002\u5373\u4f7f\u662f\u601d\u60f3\u65e5\u8bb0\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9(\u4ee5\u65e5\u8bb0\u7684\u5f62\u5f0f\u5199\u4e0b\u4f60\u7684\u60f3\u6cd5)\u3002\u8fd9\u5c06\u786e\u4fdd\u4f60\u5f97\u5230\u523a\u6fc0/\u5206\u5fc3\uff0c\u800c\u4e14\u4e0d\u4f1a\u6210\u4e3a\u4e00\u79cd\u9002\u5f97\u5176\u53cd\u7684\u4e60\u60ef\u3002\n\u6bcf\u5f53\u4f60\u548c\u670b\u53cb\u51fa\u53bb\u73a9\uff0c\u800c\u4e14\u90fd\u8868\u73b0\u51fa\u8fc7\u5ea6\u4f7f\u7528\u624b\u673a\u7684\u65f6\u5019\uff0c\u5728\u4f60\u7684\u624b\u673a\u4e0a\u8bbe\u4e00\u4e2a\u95f9\u949f\uff0c\u5e76\u9075\u5b88\u5173\u673a\u7684\u4e60\u60ef\u3002\u60a8\u53ef\u4ee5\u4ece15\u5206\u949f\u5f00\u59cb\uff0c\u4ee5\u540e\u518d\u589e\u52a0\u3002\u53ea\u9700\u5c06\u624b\u673a\u9762\u671d\u4e0b\u653e\u5728\u684c\u5b50\u4e0a\u5373\u53ef\u3002\u901a\u8fc7\u8bb0\u8d26\u6216\u9075\u5b88\u201c\u8c01\u5148\u62ff\u8d77\u7535\u8bdd\uff0c\u5c31\u7ed9\u4e00\u4e2a\u4eba\u4e70\u5496\u5561\u201d\u4e4b\u7c7b\u7684\u6761\u4ef6\uff0c\u8ba9\u5b83\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u3002\n\u4e0a\u763e\u5e94\u8be5\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u6cbb\u7597\uff0c\u6240\u4ee5\u8981\u6ce8\u610fHEPAS--\u5065\u5eb7\u7684\u996e\u98df\u3001\u4f53\u529b\u6d3b\u52a8\u548c\u9ad8\u8d28\u91cf\u7684\u7761\u7720\u3002\u522b\u5fd8\u4e86\u559d\u6c34\uff0c\u4fdd\u6301\u4e2a\u4eba\u536b\u751f\u3002\u627e\u51fa\u5e76\u5bf9\u6297\u8425\u517b\u7f3a\u4e4f\uff0c\u5982B12\uff0c\u7ef4\u751f\u7d20D\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u4f1a\u5f71\u54cd\u8bb0\u5fc6\u548c\u6291\u90c1\u3002\u5bf9\u4ed8\u6bd2\u763e\u610f\u5473\u7740\u52aa\u529b\u63d0\u9ad8\u751f\u6d3b\u8d28\u91cf\u3002\n\u563f!\u3002\u611f\u8c22\u60a8\u7684\u9605\u8bfb\uff0c\u5e0c\u671b\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\u3002\u6211\u8fd0\u884c\u201c\u4eca\u65e5\u8ba4\u77e5\u201d\u662f\u4e3a\u4e86\u63cf\u7ed8\u4e00\u5e45\u5fc3\u7406\u5b66\u7684\u6574\u4f53\u56fe\u666f\u3002\u6bcf\u7bc7\u6587\u7ae0\u90fd\u7ecf\u5e38\u66f4\u65b0\u65b0\u7684\u7814\u7a76\u6210\u679c\u3002\n\u6211\u662f\u6765\u81ea\u5370\u5ea6\u6d66\u90a3\u7684\u5e94\u7528\u5fc3\u7406\u5b66\u5bb6\u3002\u559c\u6b22\u79d1\u5e7b\u3001\u6050\u6016\u5a92\u4f53\uff1b\u559c\u6b22\u6447\u6eda\u3001\u91d1\u5c5e\u3001\u5408\u6210\u6ce2\u548c\u6d41\u884c\u97f3\u4e50\uff1b\u4e0d\u4f1a\u5439\u53e3\u54e8\uff1b\u4f1a\u5f39\u5409\u4ed6\u3002", "note_en": "Phone addiction is one of the  biggest non-drug addiction in human history.  Studies show that  excessive phone use is linked to  procrastination,  suicide,  spoilt sleep,  food and water neglect,  headaches,  lower productivity,  unstable relationships, poor physical health ( eye strain, body-aches,  posture,  hand strain), and poor mental health ( depression,   anxiety, stress). These problems can be both causes and effects of phone addiction.\n  So what can be done about phone addiction in a world that  loves the internet so much? After all, it helps  older people stay independent,  gratifies our social needs, comforts us from stress, and  helps us learn (common interest groups, affinity spaces).\n Trivia: When you are bored in face-to-face conversations or don\u2019t want to interact with others, do you slowly start using your phone and divert your attention away from the person? Snubbing another person in favor of your phone is called  phubbing (phone + snubbing) and it is a  common complaint in relationships.  Phubbing your partner is called Pphubbing or Partner phubbing and research acknowledges that it worsens relationship satisfaction, life satisfaction, and could also add to depression.\n   Let\u2019s first understand what is phone addiction and what counts as excessive phone use. Phone addiction or compulsive phone use goes along-side internet addiction and social media addiction. Psychologists also call it \u201cproblematic phone use.\u201d For this post, we will consider them together. Cell-phones are habit-forming \u2013 once you go down that rabbit hole, you use more and more. Like drugs, one can get hooked to a phone or an activity on the phone that leads to addiction. There is abuse without control, changes in mood, excessive desire to use, withdrawals like irritability and anger when you can\u2019t use the phone, low tolerance to avoid the phone, and the phone interferes with life in a negative way.\n Strictly speaking, addiction is \u201cthe loss of control, the establishment of a dependent relationship, tolerance, the need for progressively more time and dedication, and severe interference with daily life (Echeburua et al., 2009).\u201d Phones, internet-based activities, and any technology for that matter can become an addiction in the truest sense (even though many disagree). And sometimes, phone addicts need to be rehabilitated in a hospital.\n People often get addicted to the phone because they want to  escape from reality,  gain social karma,  cope with stress caused by social anxiety and self-esteem,  follow their greed for social validation,  likes,  and other types of rewards, or  play rewarding games. The constant flow of digital rewards and information can  pull a person into addiction and day-to-day difficulties can  push a person toward addiction.\n   There is no cut-off point for phone use which everyone agrees to but here are some indicators.\n You spend continuous hours on the phone to play games, scroll through social media, open and close apps, text people to invite a chat, etc.\n You frequently pick up the phone without any aim to check for notifications or see if something has changed in your social feeds.\n Your online and offline behavior gets more integrated and you don\u2019t know what you did in the digital reality or the material reality.\n You get restless if your phone is dead or has low-battery, is out-of-coverage, or low on data/balance.\n You treat your phone as a security blanket without which you get uncomfortable in social gatherings.\n Your day-to-day activities take a backseat, relationships are strained, and you can\u2019t focus and commit to the important things in your life.\n  Playing Call of Duty or PubG for hours and social activities contain little to no honest communication\n  Social needs are not met (sexual intimacy, close friendship, physical touch, etc.) and online alternatives are used to compensate for poor social health (Chatbots, echo-chambers, porn, social gaming, virtual reality social games like second life, camming relationships).\n Inability to feel pleasure and excitement in the offline world but excessive emotions are tied to online rewards like gambling, likes, shares, followers, sexting, masturbation to porn, etc.\n  According to a 2019 report, the average person spends about 3.5 hours on their phone in a day with the top 20% of people spending more than 4.5 hours a day.  The quarantine has increased these numbers \u2013 many users report over 8 hours a day.\n The 2019 report also says that 70% of all phone use lasts lesser than 2 minutes and 50% of all phone pick-ups occur within 3 minutes of the previous pick-up.\n Another 2019 report (2018 data) says at least 3.3 billion people use the internet and social media from their phones.\n Comscore\u2019s 2019 Global state of mobile report says 70% of all digital media engagement in the US happens from a smartphone. So TV, games, laptops, gaming consoles, theatres, etc. are all squeezed into the tiny remainder of 30%.\n  Phone addiction goes  hand in hand with anxiety and that anxiety often lowers the motivation to engage with people in real life. This is a huge problem because re-connecting with people in the offline world is a solution that improves the quality of life. The unnecessary drop in motivation because of addiction makes it that much harder to maintain social health.\n  Phone addiction can  cause poor cognitive performance in day-to-day life. That means poor attention, poor memory, poor reasoning skills, bad decision making, etc. One of the main reasons is the role of sleep. Addiction can disturb sleep and sleep worsens cognitive performance. However, self-regulation (personal control, commitment to healthy choices, tolerating negative emotions) can counter the negative effects of addiction and that can help you overcome it.\n A dysfunctional family can push children into addiction and one reason is social anxiety. A broken family or unhealthy parenting like neglect or excessive control can often hamper emotional growth. Children might fail to learn how to behave in social settings. There may be a fear of ridicule, disapproval, disappointment, etc. or simply a looming belief like \u201cI am not good enough\u201d or \u201cI am a bad child\u201d that creates pressure on children. These fears or thoughts transfer into the real-world and children cope with the social anxiety it causes by withdrawing into their phones \u2013 where the fantasy digital world rescues them from their real life. Fortunately, mindfulness \u2013 being aware of your actions and living in the moment as an observer \u2013 can reduce the negative impact of phone addiction.\n  Underlying mental health conditions bipolar disorder, depression, anxiety, and attachment issues can  increase the risk of phone addiction. And improving mental health can  counter addiction.\n    Grant yourself as much time as you want within a fixed daily limit at a specific hour of the day. As long as you can first demonstrate some output. Random notifications and random experiences are potent in pulling you to check your phone precisely because they are random. Unpredictable notifications and call-to-actions are hard to anticipate so the brain maximizes their potential reward (feeling great) by constantly creating the urge to pick up the phone and check. Schedule an hour to commit to your phone or make it a rule to check it every 45 minutes. That way, the rewards will be hard to anticipate but they will occur at a known time and your brain will find it easier to adjust than completely abandoning your phone.\n   Habits are hard to break because neurons in your brain rigidly fire a certain way. Once an action is repeated enough, neural circuits become efficient. They then direct and dictate behavior automatically. Countering their tendencies becomes harder. Higher the repetitions, the more stable those neurons get. These neural circuits fire in a predictable way and they fire automatically with almost no external push. You may have little to no awareness about the start of habitual actions. However, breaking a habit means you have to change how those neurons behave and the only way to do that is to ensure a change in the neural circuit. You can do that by changing 3 things:\n The context in which the habit occurs \u2013 Identify how your mood is when you get into the phone-use black hole and do an activity that changes the mood. Instead of sitting and scrolling, start cleaning up or begin work, and occasionally take a phone break.\n Interrupting the trigger that kick-starts the habit \u2013 Identify the triggers and immediately distract yourself, change the room, go for a bath, etc.\n The verbal narrative about that habit \u2013 Change your self-talk about phone addiction. For example, change \u201cI need to use my phone, I want to do that right now\u201d to \u201cI can use a strategy to use my phone in a limited way so I don\u2019t stay an addict and still enjoy it.\u201d\n For example \u2013 If you have a habit of staring at your phone right after writing an email,\u00a0 change the context\u00a0by doing a physical stretch.\u00a0 Interrupt the trigger\u00a0by clicking send and then switching off your phone immediately. And\u00a0 change the narrative\u00a0by telling yourself something like \u201c The email was not the end of my work, I can start another task and then go on Instagram.\u201d Even if this just delays your phone use by a few minutes, it\u2019s progress.\n  Continuous short-interval phone checking may have a lot to do with what you are expecting out of phone usage. It would help to introspect and ask yourself what you expect \u2013 is it a rewarding experience? is it a social interaction? are you waiting for some to approach you? are you wishing for some exciting change? do you want a flood of notifications but not getting any? These questions will help you figure out what  psychological needs your phone is compensating for \u2013 maybe it\u2019s the need for belongingness or social approval or a need to feel desired. Try to satisfy those needs in healthier ways. Usually, interacting with people in person and doing some meaningful activity satisfy those needs.\n  Replace your first habitual phone routine with something else like using a notepad + pen to list 10 important to-dos. If to-do stuff is too bland for you, replace it with 5  affirmations. This is ideal if you first spend time on your phone before you begin your task or shortly after preparing.\n  Delete apps if there is something particular that triggers usage. You could also keep your phone away. You could turn off notifications if deleting is too much. If this makes you very uncomfortable, your phone use is most likely indicates shortcomings in your social and personal life. Your physical and psychological needs could be unsatisfied and you may feel powerless in social situations. But those situations are required to fulfill your social needs. So start slow and keep a purpose for your phone use. Spend your energy to satisfy your needs in the material world.\n   Break-down your smartphone activity into categories and dedicate 2-5 minutes to each category. Do this at least 1+ hour after waking up and 1+ hour before sleeping. This will help you disconnect the phone-link with sleep onset and waking. In between, you can do a filler activity which is gratifying (serving your brain\u2019s reward system in a healthier way). Ignore all pointless activities and just do the top 2 activities. For example, if you want to check Instagram updates for a particular profile, do that. Ignore the scrolling. If you want to Snapchat with someone, just do that. Leave aside reposting those snaps on IG.\n  Reddit, Instagram, Facebook, and Youtube could be fulfilling a social deficit you have in real life, such as loneliness. If that is the case, you could engage yourself in a social mental play that is productive (how you can approach new people, initiate conversations, etc.) If possible, you could increase the amount of meaningful social interactions you have. Spend time with a person talking on the phone with headphones or meet in person. Try to have a good time in a way you feel your social needs are met. Avoid satisfying  all your social needs on social media. Social media use and mental health have a complex relationship, you might want to\u00a0 learn more about that here. Social support is a defense against addiction.\n  You might have a need for passive sensory stimulation. You could give your brain a better, richer replacement like learning a new skill, socializing, healthy gaming, sports, dating, grooming, cooking, reading, etc. If you must use your phone and need that additional distraction, change the type of phone activity. Perhaps a background game of chess or sudoku can provide that stimulation. Even thought-journaling can help (writing down your thoughts in a diary form). That\u2019ll ensure you get your stimulation/distraction and it doesn\u2019t become a counterproductive habit.\n  Whenever you are hanging out with your friends and all show excessive phone use, put an alarm on your phone and observe a phone-down routine. You can start with 15 minutes and increase it later. Simply keep your phones facing down on a table. Make it fun by keeping a tally or conditions like \u201cwhoever picks up the phone first, buys one person a coffee.\u201d\n  Addiction should always be treated holistically, so work on HEPAS \u2013  Healthy eating,  Physical activity, and a good quality  Sleep. Don\u2019t forget to drink water and maintain personal hygiene. Identify and counter nutritional deficiencies like B12, Vitamin D too as they both affect memory and depression. Coping with addiction means working on the quality of life.\n Hey! Thank you for reading; hope you enjoyed the article. I run Cognition Today to paint a holistic picture of psychology. Each article is frequently updated with new research findings.\n I\u2019m an applied psychologist from Pune, India. Love sci-fi, horror media; Love rock, metal, synthwave, and pop music; can\u2019t whistle; can play the guitar.", "posttime": "2020-08-08 20:59:47", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u624b\u673a,\u75bc\u75db,health", "title": "\u7814\u7a76\u8868\u660e\uff0c\u8fc7\u5ea6\u4f7f\u7528\u624b\u673a\u4e0e\u62d6\u5ef6\u3001\u81ea\u6740\u3001\u7834\u574f\u7761\u7720\u3001\u5ffd\u89c6\u98df\u7269\u548c\u6c34\u3001\u5934\u75db\u3001\u5de5\u4f5c\u6548\u7387\u4f4e\u4e0b\u3001\u4eba\u9645\u5173\u7cfb\u4e0d\u7a33\u5b9a\u3001\u8eab\u4f53\u5065\u5eb7\u4e0d\u4f73(\u773c\u775b\u75b2\u52b3\u3001\u8eab\u4f53\u75bc\u75db\u3001\u59ff\u52bf\u3001\u624b\u75b2\u52b3)\u548c\u7cbe\u795e\u5065\u5eb7\u4e0d\u826f(\u6291\u90c1\u3001\u7126\u8651\u3001\u538b\u529b)\u6709\u5173\u3002", "title_en": "Studies show that excessive phone use is linked to procrastination, suicide, spoilt sleep, food and water neglect, headaches, lower productivity, unstable relationships, poor physical health (eye strain, body-aches, posture, hand strain), and poor mental health (depression, anxiety, stress).", "transed": 1, "url": "https://cognitiontoday.com/2020/08/phone-addiction-coping-solutions-research-statistics/", "via": "", "real_tags": ["\u624b\u673a", "\u75bc\u75db", "health"]}, {"category": "", "categoryclass": "", "imagename": "3bd9f41af8c09abb973dfb0dc79370e7.png", "infoid": 1017005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u8f6c\u5411\u641c\u7d22\u5f15\u64ce\u6765\u83b7\u53d6\u6709\u5173\u65b0\u51a0\u80ba\u708e\u7684\u4fe1\u606f\uff0c\u4e86\u89e3\u7528\u6237\u4e3a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u63a5\u89e6\u5230\u5783\u573e\u65b0\u95fb\u5185\u5bb9\u662f\u5f88\u91cd\u8981\u7684\u3002\u5728\u8fd9\u4efd\u5907\u5fd8\u5f55\u4e2d\uff0c\u6211\u4eec\u8003\u5bdf\u4e86\u641c\u7d22\u5f15\u64ce\u53ca\u5176\u4f18\u5316\u8fc7\u7a0b\u5728\u5f15\u5bfc\u6d41\u91cf\u6d41\u5411\u5173\u4e8e\u65b0\u51a0\u80ba\u708e\u7684\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u65b9\u9762\u7684\u4f5c\u7528\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u7f51\u7ad9\u5982\u4f55\u53cd\u8fc7\u6765\u901a\u8fc7\u6570\u5b57\u5e7f\u544a\u5c06\u6d41\u91cf\u8d27\u5e01\u5316\u3002\u6211\u4eec\u95ee\uff1a\n\u4e13\u4e1a\u65b0\u95fb\u6765\u6e90\u7684\u641c\u7d22\u5f15\u64ce\u4f18\u5316\u7b56\u7565\u4e0e\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u6765\u6e90\u7684\u641c\u7d22\u5f15\u64ce\u4f18\u5316\u7b56\u7565\u76f8\u6bd4\u5982\u4f55\uff1f\n\u7b2c\u4e09\u65b9\u7f51\u7ad9\u662f\u5982\u4f55\u901a\u8fc7\u53cd\u5411\u94fe\u63a5\u63d0\u5347\u65b0\u51a0\u80ba\u708e\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u7684\u7f51\u7edc\u53e3\u7891\u7684\uff1f\n\u5404\u5927\u5e7f\u544a\u5e73\u53f0\u5982\u4f55\u4ee5\u53ca\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5c06\u56f4\u7ed5\u65b0\u51a0\u80ba\u708e\u7684\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u8d27\u5e01\u5316\uff1f\n\u901a\u8fc7\u6bd4\u8f83\u4e13\u4e1a\u548c\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u6765\u6e90\uff0c\u6211\u4eec\u7684\u5206\u6790\u662f\u4ece830\u4e2a\u62a5\u9053\u65b0\u51a0\u80ba\u708e\u7684\u65b0\u95fb\u548c\u4fe1\u606f\u6765\u6e90\u4e2d\u62bd\u6837\u8c03\u67e5\u5f97\u51fa\u7684\u3002\u6211\u4eec\u56de\u987e\u4e86\u5173\u952e\u641c\u7d22\u5f15\u64ce\u4f18\u5316(SEO)\u6307\u6807\uff0c\u5c06\u5176\u4f5c\u4e3a\u8bc4\u4f30\u7f51\u7ad9\u5728\u7ebf\u58f0\u8a89\u53ca\u5176\u5bf9\u5e7f\u544a\u7684\u4f9d\u8d56\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u6211\u4eec\u53d1\u73b0\uff1a\n\u9876\u7ea7\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u6765\u6e90\u5b9e\u73b0\u4e86\u975e\u5e38\u5173\u952e\u7684SEO\u56e0\u7d20\uff0c\u5728\u641c\u7d22\u548c\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u4f20\u64ad\u7565\u6709\u4f18\u5316\u3002\n\u4e3b\u8981\u7684\u9ad8\u4fe1\u8a89\u3001\u9ad8\u4fe1\u4efb\u5ea6\u7684\u7f51\u7ad9\u65e0\u610f\u4e2d\u52a9\u957f\u4e86\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\uff0c\u63d0\u5347\u4e86\u5b83\u4eec\u7684\u5728\u7ebf\u58f0\u8a89\u548c\u77e5\u540d\u5ea6\u3002\n\u7edd\u5927\u591a\u6570\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u9886\u57df\u4f9d\u8d56\u4e8e\u4e3b\u8981\u7684\u5e7f\u544a\u5e73\u53f0\u5c06\u5176\u9875\u9762\u8d27\u5e01\u5316\uff0c61%\u7684\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u6765\u6e90\u4f7f\u7528\u8c37\u6b4c\u5e7f\u544a\u3002\n\u827e\u7c73\u4e3d\u00b7\u6cf0\u52d2\uff0c\u4e3d\u838e-\u739b\u4e3d\u4e9a\u00b7\u8bfa\u5fb7\u7279\uff0c\u53f2\u9edb\u897f\u00b7\u970d\u592b\u66fc\u548c\u83f2\u5229\u666e\u00b7N\u00b7\u970d\u534e\u5fb7\u3002\u300a\u8ddf\u7740\u94b1\u8d70\uff1a\u7f51\u7edc\u5e7f\u544a\u751f\u6001\u7cfb\u7edf\u5982\u4f55\u8d44\u52a9\u65b0\u51a0\u80ba\u708e\u5783\u573e\u65b0\u95fb\u548c\u865a\u5047\u4fe1\u606f\u300b\u3002\u5de5\u4f5c\u6587\u4ef62020.1\u3002\u725b\u6d25\uff0c\u82f1\u56fd\uff1a\u8ba1\u7b97\u5ba3\u4f20\u9879\u76ee\u3002Comprop.oii.ox.ac.uk", "note_en": "As people around the world turn towards search engines to access information about COVID-19, it is important to understand why and how users are being exposed to junk news content. In this memo, we examine the role of search engines and their optimization processes in directing traffic towards junk news &amp; disinformation about COVID-19, and how these sites, in turn, monetize that traffic through digital advertising. We ask:\n How do the search engine optimization strategies of professional news sources compare to those of junk news &amp; disinformation sources?\n In what way do third party sites boost the online reputation of junk news and disinformation on COVID-19 through backlinks?\n How and to what extent do major advertising platforms monetize junk news &amp; disinformation around COVID-19?\n Comparing professional versus junk news &amp; disinformation sources, our analysis draws from a sample of 830 sources of news and information that are reporting on COVID-19. We review key search engine optimization (SEO) metrics, as a means of assessing sites\u2019 online reputation, and their reliance on advertising. We find that:\n The top junk news &amp; disinformation sources achieve outstandingly high key SEO factors and are slightly better optimised for distribution on search and social media.\n Major high-prestige, high-trust sites inadvertently boost junks news &amp; disinformation promoting their online reputation and visibility.\n The overwhelming majority of junk news &amp; disinformation domains rely on major advertising platforms to monetize their pages and 61 percent of junk news &amp; disinformation sources used Google ads.\n   Emily Taylor, Lisa-Maria Neudert, Stacie Hoffmann &amp; Philip N. Howard. \u201cFollow the Money: How the Online Advertising Ecosystem Funds COVID-19 Junk News and Disinformation.\u201d Working Paper 2020.1. Oxford, UK: Project on Computational Propaganda.  comprop.oii.ox.ac.uk", "posttime": "2020-08-08 20:57:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,\u8d44\u52a9,finances,\u4fe1\u606f", "title": "\u8c37\u6b4c\u8d44\u52a9\u5047\u65b0\u95fb\u751f\u6001\u7cfb\u7edf", "title_en": "Google finances Fake News ecosystem", "transed": 1, "url": "https://comprop.oii.ox.ac.uk/research/covid19-disinfo-seo/", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u8d44\u52a9", "finances", "\u4fe1\u606f"]}, {"category": "", "categoryclass": "", "imagename": "118a9b86e5bcc98ebb6766a2ec9dcfd7.png", "infoid": 1017004, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u7684\u6280\u672f\u7684\u6027\u8d28\u5df2\u7ecf\u4ece\u4e3b\u8981\u57fa\u4e8e\u542f\u53d1\u5f0f\u7b97\u6cd5\u548c\u5c11\u91cf\u6570\u636e\u7684\u56fa\u5b9a\u6d41\u6c34\u7ebf\u7b97\u6cd5\u8f6c\u53d8\u4e3a\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u80fd\u529b\u548c\u5927\u91cf\u6570\u636e\u7684\u8d44\u6e90\u5bc6\u96c6\u578b\u901a\u7528\u6a21\u578b\u3002\u8fd9\u79cd\u8f6c\u53d8\u5728\u91ca\u653e\u65b0\u529f\u80fd\u7684\u540c\u65f6\uff0c\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u7f3a\u70b9\u3002\n\u5728\u7814\u7a76\u5c42\u9762\u4e0a\u5b8c\u6210\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u96f6\u6563\u7684\uff0c\u56e0\u4e3a\u6839\u636e\u597d\u7814\u7a76\u7684\u672c\u8d28\uff0c\u7814\u7a76\u4eba\u5458\u5728\u8ba1\u5212\u4ed6\u4eec\u7684\u5b9e\u9a8c\u65f6\uff0c\u9700\u8981\u4e00\u6b21\u4e13\u6ce8\u4e8e\u4e00\u4e2a\u65b9\u9762\u3002\u867d\u7136\u6709\u5173\u4e8e\u7edf\u4e00\u6280\u672f\u3001\u8bc4\u4f30\u7684\u96be\u5ea6\u4ee5\u53ca\u5bf9\u4ec0\u4e48\u662f\u65b0\u8d21\u732e\u7684\u8981\u6c42\u5982\u6b64\u4e25\u683c\u7684\u8bba\u6587\uff0c\u4f46\u8fd9\u4e9b\u8bba\u6587\u5f88\u5c11\uff0c\u800c\u4e14\u76f8\u53bb\u751a\u8fdc\u3002\u8fd9\u4e9b\u4f5c\u54c1\u5927\u591a\u6765\u81ea\u975e\u5b66\u672f\u5021\u8bae\uff0c\u5982Fast.ai\u3002\n\u7814\u7a76\u7684\u76ee\u7684\u662f\u63d0\u51fa\u5e76\u9a8c\u8bc1\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u65b0\u65b9\u6cd5\u3002\u56e0\u4e3a\u8fd9\u662f\u4ed6\u4eec\u7684\u6700\u7ec8\u76ee\u6807\uff0c\u6240\u4ee5\u91cd\u70b9\u653e\u5728\u7ed3\u679c\u548c\u53d1\u8868\u7684\u8bba\u6587\u4e0a\uff0c\u800c\u4e0d\u662f\u7528\u6765\u8fd0\u884c\u8fd9\u4e9b\u5b9e\u9a8c\u7684\u4ee3\u7801\u3002\u5373\u4f7f\u4ee3\u7801\u516c\u5f00\u53ef\u7528\uff0c\u901a\u5e38\u4e5f\u5f88\u96be\u6269\u5c55\u3001\u4f18\u5316\u6216\u4e0e\u5176\u4ed6\u4ee3\u7801\u7247\u6bb5\u96c6\u6210\u3002\n\u5546\u4e1a\u5316\u7684API\u53ef\u80fd\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u6613\u4e8e\u4f7f\u7528\u548c\u96c6\u6210\u3002\u7136\u800c\uff0c\u5b83\u4eec\u5e26\u6765\u4e86\u53e6\u4e00\u7ec4\u95ee\u9898\u3002\n\u9996\u5148\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\uff0c\u4ee3\u7801\u662f\u4e0d\u53ef\u5ba1\u8ba1\u7684\u3002\u56e0\u4e3a\u5b83\u4eec\u662f\u5546\u4e1a\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u4ee3\u7801\u4e0d\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u60a8\u4e0d\u80fd\u786e\u5b9a\u4ee3\u7801\u5728\u505a\u4ec0\u4e48\u3002\u4f60\u53ef\u4ee5\u4fe1\u4efb\u4e0e\u4f60\u5171\u4e8b\u7684\u516c\u53f8\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u8fd8\u4e0d\u591f\u3002\u53e6\u5916\uff0c\u80fd\u591f\u68c0\u67e5\u6b63\u5728\u6267\u884c\u7684\u64cd\u4f5c\u603b\u662f\u5f88\u597d\u7684\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u5b83\u4eec\u901a\u5e38\u662f\u4e91\u89e3\u51b3\u65b9\u6848\uff0c\u60a8\u5fc5\u987b\u4e0e\u5b83\u4eec\u5171\u4eab\u60a8\u7684\u6570\u636e\u3002\u8fd9\u5bf9\u4e00\u4e9b\u516c\u53f8\u6765\u8bf4\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u6570\u636e\u53ef\u80fd\u6709\u4e9b\u654f\u611f\u3002\n\u4e00\u4e9b\u5927\u540d\u9f0e\u9f0e\u7684\u516c\u53f8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5f88\u597d\u7684\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u53ef\u80fd\u4f1a\u5f88\u597d\u5730\u89e3\u51b3\u4e00\u4e9b\u95ee\u9898\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u4eec\u6700\u597d\u7684\u6b3e\u5f0f\u4ecd\u7136\u662f\u95ed\u95e8\u9020\u8f66\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4f7f\u7528\u7684\u6280\u672f\u53ef\u80fd\u662f\u672a\u77e5\u7684\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528\u4e9a\u9a6c\u900aRekognition\u6216Google Vision AI\uff0c\u4f46\u4f60\u4e0d\u77e5\u9053\u5f15\u64ce\u76d6\u4e0b\u9762\u662f\u4ec0\u4e48\u3002\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4e86\u89e3\u5728\u54ea\u4e9b\u60c5\u51b5\u4e0b\u89e3\u51b3\u65b9\u6848\u4f1a\u5931\u8d25\uff0c\u6216\u8005\u5728\u54ea\u4e9b\u60c5\u51b5\u4e0b\u5b58\u5728\u504f\u5dee\u3002\n\u6211\u4eec\u76f8\u4fe1\uff0c\u6709\u4e00\u4e2a\u5730\u65b9\u7684\u5f00\u653e\u6e90\u7801\u5021\u8bae\u7684\u91cd\u70b9\u662f\u89e3\u51b3\u4e0a\u8ff0\u51e0\u70b9\u3002\n\u4e00\u4e2a\u5f00\u6e90\u7684\u4eba\u7c7b\u611f\u77e5\u5e93\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u4e3a\u5c01\u95ed\u7684\u65b9\u6cd5\u63d0\u4f9b\u5f00\u653e\u7684\u3001\u53ef\u5ba1\u8ba1\u7684\u548c\u9ad8\u6027\u80fd\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u53ef\u4ee5\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u6216\u8bbe\u5907\u4e0a\u8fd0\u884c\u5e76\u9002\u5e94\u5176\u6240\u5904\u73af\u5883\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u6d4b\u8bd5(\u6ca1\u6709\u5806\u79ef\u6210\u672c)\u3001\u7406\u89e3\u5e76\u6839\u636e\u9700\u8981\u4fee\u6539\u7684\u4ee3\u7801\u3002\n\u6211\u4eec\u529b\u6c42\u4ee3\u7801\u6613\u4e8e\u96c6\u6210\u548c\u7406\u89e3\u3002\u867d\u7136\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u4f46\u5e76\u4e0d\u662f\u4e13\u95e8\u9488\u5bf9\u7814\u7a76\u4eba\u5458\u7684\u3002\u6211\u4eec\u5e0c\u671b\u8ba9\u4efb\u4f55\u4f1a\u7f16\u7a0b\u7684\u4eba\u90fd\u80fd\u8bbf\u95ee\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u5e76\u4f7f\u4ed6\u4eec\u80fd\u591f\u521b\u5efa\u521b\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4eba\u7c7b\u5728\u5efa\u9020\u8fc7\u7a0b\u4e2d\u7262\u8bb0\u4ee5\u4e0b\u6307\u5bfc\u539f\u5219\uff1a\n\u91cd\u70b9\u662f\u6210\u4e3a\u4e00\u4e2a\u751f\u4ea7\u7ea7\u7684\u56fe\u4e66\u9986\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u73a9\u5177\u9879\u76ee\u3002\u53ea\u6709\u5176\u6027\u80fd\u53ef\u4ee5\u8bc4\u4f30\u5e76\u4e14\u5177\u6709\u5408\u7406(\u548c\u53ef\u77e5\u7684)\u8ba1\u7b97\u548c\u5185\u5b58\u8981\u6c42\u7684\u6a21\u578b\u624d\u4f1a\u88ab\u5305\u62ec\u5728\u5185\u3002\n\u6211\u4eec\u53ef\u4ee5\u505a\u6211\u4eec\u81ea\u5df1\u7684\u76f8\u518c\u521b\u5efa\u8005\uff0c\u5c06\u76f8\u540c\u4eba\u7269\u7684\u7167\u7247\u5206\u7ec4\u3002\u8fd9\u662f\u6240\u6709\u4e91\u63d0\u4f9b\u5546(\u5982Google Photos\u548cApple Photos)\u90fd\u4f1a\u505a\u7684\u7528\u4f8b\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\u5e76\u4e13\u6ce8\u4e8e\u4eba\u65cf\uff0c\u8ba9\u6211\u4eec\u6765\u505a\u8fd9\u4e2a\u95ee\u9898\u7684\u6838\u5fc3\uff1a\u627e\u51fa\u6709\u4eba\u5728\u573a\u7684\u7167\u7247\u3002\n\u5bfc\u5165clickfrom pathlib\u4ecescipy.spatial.Distance\u4eceterran.face\u5bfc\u5165cosine.face\u5bfc\u5165Extract_Feature\uff0cfaceDetectionfrom terran.io\u5bfc\u5165open_image\uff0cResolve_ImagesFrom terran.vis\u5bfc\u5165display_image\uff0cvis_faces\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u5355\u51fb\u521b\u5efa\u4e00\u4e2a\u5c0f\u578bCLI\u5de5\u5177(\u6211\u4eec\u559c\u6b22\u5355\u51fb-\u5f3a\u70c8\u63a8\u8350)\u3002\u6211\u4eec\u5c06\u4f7f\u7528pathlib\u6765\u5904\u7406\u8def\u5f84\u548c\u5230scipy\u7684\u8ddd\u79bb\u5ea6\u91cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u4eceTerran\u7684\u6a21\u5757\u4e2d\u5f15\u5165\u4e86\u4e00\u4e9b\u529f\u80fd\uff1a\u4eceFace\uff0c\u6838\u5fc3\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u6d4b\u4eba\u8138\u548c\u63d0\u53d6\u7279\u5f81\uff1b\u4eceio\uff0c\u5b9e\u7528\u51fd\u6570\uff0c\u7528\u4e8e\u89e3\u6790\u8def\u5f84\u548c\u6253\u5f00\u56fe\u50cf\uff1b\u4eceVis\uff0c\u4e00\u4e9b\u53ef\u89c6\u5316\u529f\u80fd(\u5728\u5904\u7406\u56fe\u50cf\u65f6\u975e\u5e38\u91cd\u8981\u548c\u6709\u7528\uff01)\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u4eceterran.vis\u5bfc\u5165\u4e86\u4e00\u4e9b\u53ef\u89c6\u5316\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u5904\u7406\u56fe\u50cf\u65f6\u975e\u5e38\u91cd\u8981\u548c\u6709\u7528\uff01\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6765\u5904\u7406\u67e5\u627e\u4eba\u6240\u5728\u4f4d\u7f6e\u7684\u7167\u7247\u7684\u95ee\u9898\u3002\u4f60\u4f1a\u770b\u5230\u548c\u4eba\u65cf\u5728\u4e00\u8d77\u662f\u591a\u4e48\u5bb9\u6613\uff01\n@click.command(name=&#39\uff1bmatch-dir&#39\uff1b)@click.argument(&#39\uff1breference&#39\uff1b)@click.argument(&#39\uff1bimage-dir&#39\uff1b)@click.option(&#39\uff1b--batch-size&#39\uff1b\uff0cTYPE=INT\uff0cdefault=1)@click.option(&#39\uff1b--threshold&#39\uff1b\uff0cTYPE=FLOAT\uff0c\u9ed8\u8ba4\u503c=0.5)@CLICK.OPTION(&#39\uff1b--\u663e\u793a&#39\uff1b\uff0cis_flag=True\uff0c\u9ed8\u8ba4\u503c=false)def MATCH_DIRECTORY(reference\uff0cimage_dir\uff0cBatch_size\uff0cThreshold\uff0cDisplay)\uff1areference=open_image(Reference)faces_in_reference=face_Detection(Reference)if len(Faces_In_Reference)\uff01=1\uff1aclick.echo(&#39\uff1b\u53c2\u8003\u56fe\u50cf\u5fc5\u987b\u6b63\u597d\u6709\u4e00\u4e2a\u9762\u3002&#39\uff1b)return ref_Feature=Extract_Feature(reference\uff0cfaces_in_reference[0])\n\u6211\u4eec\u7684\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2a\u5f15\u7528\u56fe\u50cf\u548c\u4e00\u4e2a\u6211\u4eec\u5e94\u8be5\u626b\u63cf\u7167\u7247\u7684\u76ee\u5f55\u3002\u7136\u540e\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u6b65\u662f\u4ece\u6211\u4eec\u7684\u53c2\u8003\u56fe\u50cf\u4e2d\u63d0\u53d6\u4e00\u7ec4\u4ee3\u8868\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u4eba\u7684\u7279\u5f81\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u8981\u626b\u63cf\u7684\u6240\u6709\u56fe\u50cf\u7684\u8def\u5f84\uff1a\n\u6b64Terran\u51fd\u6570\u6210\u6279\u63d0\u4f9b\u8def\u5f84\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u5b83\u4eec(\u5982\u679c\u9700\u8981)\u3002\n\u56e0\u6b64\uff0c\u5269\u4e0b\u7684\u552f\u4e00\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5f20\u56fe\u50cf\uff0c\u6253\u5f00\u5b83\uff0c\u68c0\u6d4b\u4eba\u8138\uff0c\u83b7\u53d6\u7279\u5f81\uff0c\u5e76\u5c06\u5176\u4e0e\u6211\u4eec\u7684\u53c2\u8003\u56fe\u50cf\u8fdb\u884c\u6bd4\u8f83\u3002\u5bf9\u4ed8\u4eba\u65cf\u5c31\u591f\u7b80\u5355\u7684\u4e86\uff01\n\u5bf9\u4e8e\u8def\u5f84\u4e2d\u7684\u6279\u5904\u7406\u8def\u5f84\uff1a#\u6253\u5f00\u5b83\u4eecBatch_Image=list(map(open_image\uff0cBatch_path))#\u68c0\u6d4bFaces_per_image=face_Detection(Batch_Image)#\u83b7\u53d6\u8def\u5f84\u3001\u56fe\u50cf\u3001\u9762\u3001zip\u4e2d\u7684\u8981\u7d20(Batch_path\uff0cBatch_Image\uff0cFaces_per_image)\u7684Feature_per_image=Extract_Feature(Batch_Image\uff0cFaces_per_image)\uff1a\u5bf9\u4e8eface\uff0czip\u4e2d\u7684\u8981\u7d20(faces\uff0cFeature)\uff1a#\u5c06\u6bcf\u4e2a\u7279\u5f81\u4e0e\u6211\u4eec\u7684\u53c2\u8003\u7279\u5f81\u7f6e\u4fe1\u5ea6=cosine(ref_Feature\uff0cFeature)\u8fdb\u884c\u6bd4\u8f83#\u5982\u679c\u5339\u914d\uff0c\u5219\u6253\u5370/\u663e\u793a\uff01\u5982\u679c\u7f6e\u4fe1\u5ea6&lt\uff1b\u9608\u503c\uff1aclick.echo(f&#39\uff1b{path}\uff0c\u7f6e\u4fe1\u5ea6={\u7f6e\u4fe1\u5ea6\uff1a.2f}&#39\uff1b)\u5982\u679cDISPLAY\uff1aDISPLAY_IMAGE(VIS_Faces(image\uff0cface))\u3002\n\u5bfc\u5165clickfrom pathlib\u4ecescipy.spatial.Distance\u5bfc\u5165coinefrom terran.face\u5bfc\u5165Extract_Feature\uff0cfaceDetectionfrom terran.io\u5bfc\u5165OPEN_IMAGE\uff0cResolve_ImagesFrom Terran.vis\u5bfc\u5165DISPLAY_IMAGE\uff0cvis_faces@click.command(name=&#39\uff1bmatch-dir&#39\uff1b)@click.argument(&#39\uff1breference&#39\uff1b)@click.argument(&#39\uff1bimage-dir&#39\uff1b)@click.option(&#39\uff1b--batch-size&#39\uff1b\uff0cTYPE=INT\uff0c\u9ed8\u8ba4\u503c=1)@CLICK.OPTION(&#39\uff1b--Threshold&#39\uff1b\uff0cTYPE=FLOAT\uff0cdefault=0.5)@click.option(&#39\uff1b--display&#39\uff1b\uff0cIS_FLAG=TRUE\uff0c\u9ed8\u8ba4\u503c=FALSE)def MATCH_DIRECTORY(REFERENCE\uff0cIMAGE_DIR\uff0cBATCH_SIZE\uff0cTHRESHOLD\uff0cDISPLAY)\uff1aREFERENCE=OPEN_IMAGE(REFACE)Faces_In_Reference=Face_Detect(Reference)if len(Faces_In_Reference)\uff01=1\uff1aclick.echo(&#39\uff1b\u53c2\u8003\u56fe\u50cf\u5fc5\u987b\u6b63\u597d\u6709\u4e00\u4e2a\u9762\u3002&#39\uff1b)\u5bf9\u4e8e\u8def\u5f84\u4e2d\u7684Batch_PATHS\uff0c\u8fd4\u56deref_Feature=Extract_Feature(Reference\uff0cfaces_in_reference[0])PATHS=Resolve_Images(path(Image_Dir).expanduser()\uff0cBatch_size=Batch_Size)\uff1aBatch_Images=list(map(open_image\uff0cBatch_path))faces_per_image=\u4eba\u8138\u68c0\u6d4b(Batch_Image)Feature_per_image=zip\u4e2d\u7684\u8def\u5f84\u3001\u56fe\u50cf\u3001\u9762\u3001\u8981\u7d20\u7684Extract_Feature(Batch_Image\uff0cFaces_per_image\u3002FEATURES_PER_IMAGE)\uff1a\u5bf9\u4e8eFace\uff0c\u538b\u7f29\u4e2d\u7684FEATURES(Faces\uff0cFeature)\uff1a\u5982\u679c\u7f6e\u4fe1\u5ea6&lt\uff0c\u5219\u7f6e\u4fe1\u5ea6=\u4f59\u5f26(ref_Feature\uff0cFeature)\uff1b\u9608\u503c\uff1aclick.echo(f&#39\uff1b{path}\uff0c\u7f6e\u4fe1\u5ea6={\u7f6e\u4fe1\u5ea6\uff1a.2F}&#39\uff1b)if display\uff1adisplay_image(vis_faces(image\uff0cface))if__name__==&#39\uff1b__main__&#39\uff1b\uff1aMATCH_DIRECTORY()\u3002\n\u53ea\u9700\u51e0\u884c\u4ee3\u7801\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u68c0\u67e5\u60a8\u6240\u5448\u73b0\u7684\u56fe\u50cf\uff01\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u4e0a\u4f20\u5230\u4efb\u4f55\u5730\u65b9\uff0c\u5e76\u8c03\u6574\u53c2\u6570\u4ee5\u9002\u5408\u60a8\u7684\u60c5\u51b5(\u770b\u770bThreshold)\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u6211\u4eec\u7684Github\u4e2d\u770b\u4e00\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u7136\u540e\u5230\u4eba\u65cf\u7684\u5176\u4ed6\u5730\u65b9\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u76ee\u524d\uff0c\u4eba\u65cf\u5df2\u7ecf\u6709\u4e86\u4eba\u8138\u68c0\u6d4b\u3001\u4eba\u8138\u8bc6\u522b\u548c\u59ff\u52bf\u4f30\u8ba1\u7684\u6a21\u578b\u3002\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u521b\u5efa\u51e0\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982\u4f7f\u7528\u8eab\u4f53\u624b\u52bf\u63a7\u5236\u60a8\u7684\u8ba1\u7b97\u673a\uff0c\u6216\u8005\u6839\u636e\u8138\u90e8\u662f\u5426\u5b58\u5728\u6765\u66f4\u6539\u663e\u793a\u5185\u5bb9\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528Terran\u4f5c\u4e3a\u4e00\u4e2a\u754c\u9762\uff0c\u4e0e\u4f60\u7684\u8eab\u4f53\u548c\u4f60\u7684\u8ba1\u7b97\u673a\u4ea4\u4e92\uff0c\u4ee5\u53ca\u4eba\u4eec\u53ef\u4ee5\u60f3\u5230\u7684\u5176\u4ed6\u51e0\u4e2a\u60f3\u6cd5\u3002\n\u9488\u5bf9\u8fd9\u4e9b\u76f8\u540c\u7684\u95ee\u9898\u6dfb\u52a0\u66f4\u591a\u578b\u53f7\uff0c\u4f46\u66f4\u8f7b\u91cf\u7ea7\uff0c\u4ee5\u9632\u60a8\u9700\u8981\u5728\u5c0f\u578b\u8bbe\u5907\u4e0a\u8fd0\u884c\u3002\n\u867d\u7136\u8fd9\u662f\u6211\u4eec\u76ee\u524d\u7684\u8def\u7ebf\u56fe\uff0c\u8bf7\u968f\u65f6\u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2a\u95ee\u9898\uff0c\u544a\u8bc9\u6211\u4eec\u60a8\u662f\u5426\u60f3\u8981\u6211\u4eec\u5728\u4ec0\u4e48\u65b9\u9762\u7279\u522b\u52aa\u529b\u3002\n\u8bf7\u968f\u65f6\u4f7f\u7528\uff0c\u5e76\u544a\u8bc9\u6211\u4eec\u60a8\u7684\u60f3\u6cd5\uff01\u5f53\u7136\uff0c\u5982\u679c\u60a8\u7528\u5b83\u6784\u5efa\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u8bf7\u4e0e\u6211\u4eec\u5206\u4eab\uff01", "note_en": "Computer vision has seen tremendous change in the last decade. Along this journey, the nature of the techniques used has shifted from fixed-pipeline algorithms based mostly in heuristics and little data to resource-intensive general-purpose models that require both heavy computing power and a lot of data. This shift, while unlocking new capabilities, presents some drawbacks.\n Most of the work done at the research level is fragmented because researchers, by the very nature of good research, need to focus on one aspect at a time when planning their experiments. And while there are papers on unifying techniques, the difficulty to evaluate, and the requirements on what a novel contribution is being so stringent, these are few and apart. Most of these works come from non-academic initiatives such as  fast.ai.\n The objective of research is to present and validate a novel approach to a problem. Being that their end goal, the focus is on results and the published paper, not on the code used to run those experiments. Even when code is made publicly available, more often than not, it tends to be hard to extend, optimize, or integrate with other pieces of code.\n Commercially available APIs may solve this issue since they are usually easy to use and integrate. However, they come with another set of problems.\n First and foremost, code is not auditable. Since they are commercial solutions, code is not open source, so you cannot be certain what the code is doing. You may trust the company you are working with, but that may not be enough for other stakeholders. Plus, it is always nice to be able to check what is being done. Also, since they are usually cloud solutions, you have to share your data with them. This is a no-go for some companies, since the data may be somewhat sensitive.\n There are some great services by some big-name companies, which may work fine for some set of problems. Nevertheless, their &#34;best&#34; models remain behind closed door. In addition to this, the technique that it is used may be unknown. While you can easily use Amazon Rekognition or Google Vision AI, you can&#39;t know what&#39;s under the hood. This may be fine for some scenarios, but for other cases you may need to have a sense of in which cases the solution fails, or which biases it has.\n We believe that there&#39;s a place for an open-source initiative focusing on addressing the abovepoints.\n    An open-source human perception library. We focus on providing open, auditable, and performant alternatives to closed approaches. Solutions that can run on your computer or device and that will adapt to the environment that it&#39;s in. But most importantly, code that you can test (without piling-up costs), understand and modify to your needs.\n We strive for code that is easy to integrate and understand. While it is open-source, it is not specifically targeted for researchers. We want to make computer vision accessible to anyone who can code, and enable them to create innovative applications. To achieve this, Terran was built with these guiding principles in mind:\n  The focus is on being a production-grade library, not a toy project. Only models whose performance can be assessed and with reasonable (and knowable) computational and memory requirements will be included.\n    We could do our own image album creator grouping photos of the same people. That&#39;s a use case that all cloud providers (such as Google Photos and Apple Photos) do. For the sake of keeping it simple and focusing on Terran, lets do the core of this problem: finding on which photos someone is present.\n  import clickfrom pathlib import Pathfrom scipy.spatial.distance import cosinefrom terran.face import extract_features, face_detectionfrom terran.io import open_image, resolve_imagesfrom terran.vis import display_image, vis_faces\n We will use  click to create a small CLI tool (we love click \u2014 highly recommended). We will use  pathlib to handle paths and a measure of distance from  scipy. Finally, we import some functions from Terran&#39;s modules: from face, core functions to detect faces and extract features; from io, utility functions to resolve paths and open images; from vis, some visualization functions (extremely important and useful when working with images!).\n and finally, from  terran.vis, we import some visualization functions that are extremely important and useful when working with images!\n Now we will create a function that deals with the problem of finding the photos where a person is present. You&#39;ll see how easy it is with Terran!\n @click.command(name=&#39;match-dir&#39;)@click.argument(&#39;reference&#39;)@click.argument(&#39;image-dir&#39;)@click.option(&#39;--batch-size&#39;, type=int, default=1)@click.option(&#39;--threshold&#39;, type=float, default=0.5)@click.option(&#39;--display&#39;, is_flag=True, default=False)def match_directory(reference, image_dir, batch_size, threshold, display): reference = open_image(reference) faces_in_reference = face_detection(reference) if len(faces_in_reference) != 1: click.echo(&#39;Reference image must have exactly one face.&#39;) return ref_feature = extract_features(reference, faces_in_reference[0])\n Our function takes in two arguments: a reference image and a directory where we should scan the photos. Then, our first step is to get a set of features out of our reference image that represents the person we are looking for.\n Then, we get the paths to all of the images that we will be scanning:\n  This Terran function gives paths in batches, so you can process them in parallel (if needed).\n So the only thing remaining to do is, for each image, open it, detect the faces, get the features, and compare it with our reference image. Easy enough with Terran!\n for batch_paths in paths: # Open them batch_images = list(map(open_image, batch_paths)) # Detect the faces faces_per_image = face_detection(batch_images) # Get the features features_per_image = extract_features(batch_images, faces_per_image) for path, image, faces, features in zip( batch_paths, batch_images, faces_per_image, features_per_image ): for face, feature in zip(faces, features): # Compare each feature with our reference feature confidence = cosine(ref_feature, feature) # If it is a match print it / display it! if confidence &lt; threshold: click.echo(f&#39;{path}, confidence = {confidence:.2f}&#39;) if display: display_image(vis_faces(image, face))\n  import clickfrom pathlib import Pathfrom scipy.spatial.distance import cosinefrom terran.face import extract_features, face_detectionfrom terran.io import open_image, resolve_imagesfrom terran.vis import display_image, vis_faces@click.command(name=&#39;match-dir&#39;)@click.argument(&#39;reference&#39;)@click.argument(&#39;image-dir&#39;)@click.option(&#39;--batch-size&#39;, type=int, default=1)@click.option(&#39;--threshold&#39;, type=float, default=0.5)@click.option(&#39;--display&#39;, is_flag=True, default=False)def match_directory(reference, image_dir, batch_size, threshold, display): reference = open_image(reference) faces_in_reference = face_detection(reference) if len(faces_in_reference) != 1: click.echo(&#39;Reference image must have exactly one face.&#39;) return ref_feature = extract_features(reference, faces_in_reference[0]) paths = resolve_images( Path(image_dir).expanduser(), batch_size=batch_size ) for batch_paths in paths: batch_images = list(map(open_image, batch_paths)) faces_per_image = face_detection(batch_images) features_per_image = extract_features(batch_images, faces_per_image) for path, image, faces, features in zip( batch_paths, batch_images, faces_per_image, features_per_image ): for face, feature in zip(faces, features): confidence = cosine(ref_feature, feature) if confidence &lt; threshold: click.echo(f&#39;{path}, confidence = {confidence:.2f}&#39;) if display: display_image(vis_faces(image, face))if __name__ == &#39;__main__&#39;: match_directory()\n With just a few lines of code, you can easily check in which images you are present! From your computer, not needing to upload them anywhere, and tweaking the parameters to fit your case (take a look at threshold). You can also take a look at this example in our  Github, and to the rest of Terran and see how it works.\n Right now, Terran has models for Face Detection, Face Recognition, and Pose Estimation. We think that several applications can be created using these features, like controlling your computer with body gestures or changing what gets displayed depending on the presence of a face or not. You can use Terran as an interface to interact to your computer with your body, among several other ideas that one could think of.\n  Add more models for these same problems, but that are more lightweight, in case you need it to run on a small device.\n While this is our current roadmap, feel free to create an issue on github to tell us if you&#39;d like us to work on anything in particular.\n Please feel free to use it and tell us what you think! And of course, if you build something using it, share it with us!", "posttime": "2020-08-08 20:57:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u7c7b,human,image", "title": "\u4eba\u65cf\uff1a\u4eba\u7c7b\u611f\u77e5\u56fe\u4e66\u9986", "title_en": "Terran: A Human Perception Library", "transed": 1, "url": "https://pento.ai/blog/introducing-terran", "via": "", "real_tags": ["\u4eba\u7c7b", "human", "image"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1017003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2018\u5e748\u6708\u66f4\u65b0\uff1aXoroshiro128+PractRand\u5931\u8d25\u975e\u5e38\u4e25\u91cd\u3002\u81ea\u4ece\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u4ee5\u6765\uff0c\u5b83\u7684\u4f5c\u8005\u5df2\u7ecf\u7528xoshiro256**\u53d6\u4ee3\u4e86\u5b83\u3002\u5b83\u5177\u6709\u57fa\u672c\u76f8\u540c\u7684\u6027\u80fd\uff0c\u4f46\u5177\u6709\u66f4\u597d\u7684\u7edf\u8ba1\u7279\u6027\u3002Xoshiro256**\u73b0\u5728\u662f\u6211\u9996\u9009\u7684PRNG\u3002\n\u6211\u7ecf\u5e38\u4f7f\u7528\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668(PRNG)\u3002\u5b83\u4eec\u662f\u8bb8\u591a\u7b97\u6cd5\u548c\u8fc7\u7a0b\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u7ec4\u6210\u90e8\u5206\u3002\n\u8499\u7279\u5361\u7f57\u6a21\u62df\uff0c\u5176\u4e2dPRNG\u7528\u4e8e\u8ba1\u7b97\u96be\u4ee5\u6216\u4e0d\u53ef\u80fd\u89e3\u6790\u89e3\u51b3\u7684\u95ee\u9898\u7684\u6570\u503c\u4f30\u8ba1\u3002\n\u8499\u7279\u5361\u7f57\u6811\u641c\u7d22\u4eba\u5de5\u667a\u80fd\uff0c\u5176\u4e2d\u5927\u91cf\u7684\u535a\u5f08\u968f\u673a\u8fdb\u884c\uff0c\u4ee5\u5bfb\u627e\u6700\u4f18\u7684\u8d70\u6cd5\u3002\u8fd9\u662f\u6700\u540e\u4e00\u9879\u7684\u5177\u4f53\u5e94\u7528\u3002\n\u9057\u4f20\u7b97\u6cd5\uff0c\u5176\u4e2dPRNG\u521b\u5efa\u521d\u59cb\u79cd\u7fa4\uff0c\u7136\u540e\u6307\u5bfc\u6240\u9009\u89e3\u51b3\u65b9\u6848\u7684\u7a81\u53d8\u548c\u80b2\u79cd\u3002\n\u5bc6\u7801\u5b66\uff0c\u5176\u4e2d\u52a0\u5bc6\u5b89\u5168\u7684PRNG(CSPRNG)\u4ea7\u751f\u7684\u8f93\u51fa\u5bf9\u4e8e\u77e5\u9053\u7279\u5b9a\u79d8\u5bc6\u7684\u6536\u4ef6\u4eba\u662f\u53ef\u9884\u6d4b\u7684\uff0c\u4f46\u5bf9\u5176\u4ed6\u4efb\u4f55\u4eba\u90fd\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u8fd9\u7bc7\u6587\u7ae0\u53ea\u6d89\u53ca\u666e\u901a\u7684PRNG\u3002\n\u5bf9\u4e8e\u524d\u4e09\u4e2a\u201c\u6a21\u62df\u201d\u7528\u9014\uff0c\u6709\u4e24\u4e2a\u4e3b\u8981\u56e0\u7d20\u9a71\u52a8PRNG\u7684\u9009\u62e9\u3002\u8fd9\u4e9b\u56e0\u7d20\u53ef\u80fd\u5f7c\u6b64\u4e0d\u4e00\u81f4\uff1a\nPRNG\u5e94\u8be5\u975e\u5e38\u5feb\u3002\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u82b1\u65f6\u95f4\u8fd0\u884c\u5b9e\u9645\u7684\u7b97\u6cd5\uff0c\u800c\u4e0d\u662f\u751f\u6210\u968f\u673a\u6570\u3002\nPRNG\u4ea7\u51fa\u5e94\u5177\u6709\u7a33\u5065\u7684\u7edf\u8ba1\u8d28\u91cf\u3002\u4f4d\u5e94\u8be5\u770b\u8d77\u6765\u662f\u72ec\u7acb\u7684\uff0c\u5e76\u4e14\u8f93\u51fa\u5e94\u8be5\u7d27\u5bc6\u9075\u5faa\u6240\u9700\u7684\u5206\u5e03\u3002\u4f4e\u8d28\u91cf\u7684\u8f93\u51fa\u4f1a\u5bf9\u4f7f\u7528\u5b83\u7684\u7b97\u6cd5\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002\u540c\u6837\u91cd\u8981\u7684\u8fd8\u6709\u5982\u4f55\u4f7f\u7528\u5b83\uff0c\u4f46\u672c\u6587\u5c06\u53ea\u5173\u6ce8\u751f\u6210\u4f4d\u3002\n\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u4f8b\u5982\u5728\u5bc6\u7801\u5b66\u6216\u5728\u7ebf\u8d4c\u535a\u4e2d\uff0c\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u89c2\u5bdf\u8005\u65e0\u6cd5\u4ece\u5176\u8f93\u51fa\u4e2d\u4e86\u89e3\u5230\u5173\u4e8ePRNG\u5185\u90e8\u72b6\u6001\u7684\u4efb\u4f55\u6709\u610f\u4e49\u7684\u4fe1\u606f\u3002\u5bf9\u4e8e\u6211\u5173\u5fc3\u7684\u4e09\u4e2a\u6a21\u62df\u6848\u4f8b\uff0c\u8fd9\u4e0d\u662f\u95ee\u9898\u3002\u53ea\u6709\u901f\u5ea6\u548c\u8d28\u91cf\u5c5e\u6027\u624d\u91cd\u8981\u3002\n\u6839\u636e\u7f16\u7a0b\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u5404\u79cd\u6807\u51c6\u5e93\u4e2d\u7684PRNG\u53ef\u80fd\u8d28\u91cf\u4e0d\u4f73\u3002\u5b83\u4eec\u6bd4\u9700\u8981\u7684\u901f\u5ea6\u6162\uff0c\u6216\u8005\u8d28\u91cf\u6bd4\u8981\u6c42\u7684\u5dee\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f8b\u5982C\u4e2d\u7684rand()\uff0c\u6ca1\u6709\u6307\u5b9a\u7b97\u6cd5\uff0c\u9664\u4e86\u7410\u788e\u7684\u793a\u4f8b\u4e4b\u5916\uff0c\u60a8\u4e0d\u80fd\u4f9d\u8d56\u5b83\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u548c\u884c\u4e3a\u662f\u6307\u5b9a\u7684\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u505a\u5f97\u66f4\u597d\u3002\n\u6211\u66f4\u559c\u6b22BYOPRNG\uff1a\u5e26\u4e0a\u60a8\u81ea\u5df1\u7684\u4f2a\u968f\u673aNumberGenerator\u3002\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u83b7\u5f97\u53ef\u9760\u7684\u3001\u76f8\u540c\u7684\u8f93\u51fa\u3002\u6b64\u5916\uff0c\u5728C\u548cC++\u7684\u60c5\u51b5\u4e0b-\u5982\u679c\u4f60\u505a\u5f97\u6b63\u786e\u7684\u8bdd-\u901a\u8fc7\u5c06PRNG\u5d4c\u5165\u5230\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u5b83\u5c06\u88ab\u5185\u8054\u548c\u5c55\u5f00\uff0c\u4f7f\u5f97\u5b83\u6bd4\u7f13\u6162\u5730\u8c03\u7528\u52a8\u6001\u5e93\u8981\u9ad8\u6548\u5f97\u591a\u3002\n\u4e00\u4e2a\u5feb\u901f\u7684PRNG\u5c06\u4f1a\u5f88\u5c0f\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u524d\u5d4c\u5165\u7ec4\u4ef6\uff0c\u6bd4\u5982\u8bf4\uff0c\u5934\u5e93\u3002\u8fd9\u5c31\u53ea\u5269\u4e0b\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\u4e86\uff0c\u201cPRNG\u80fd\u4e0d\u80fd\u5c0f\u800c\u6709\u9ad8\u8d28\u91cf\u7684\u4ea7\u51fa\uff1f\u201d\u572821\u4e16\u7eaa\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u662f\u80af\u5b9a\u7684\u201c\u662f\u7684\uff01\u201d\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4e3b\u8981\u53bb\u7684\u5730\u65b9\u662fxorShift*\u3002\u51fd\u6570\u7684\u4e3b\u4f53\u662f6\u884cC\uff0c\u5b83\u7684\u6574\u4e2a\u72b6\u6001\u662f\u4e00\u4e2a64\u4f4d\u6574\u6570\uff0c\u76f4\u63a5\u64ad\u79cd\u3002\u7136\u800c\uff0c\u8fd9\u91cc\u6709\u8bb8\u591a\u9009\u62e9\uff0c\u5305\u62ecXorShift\u7684\u5176\u4ed6\u53d8\u4f53\u3002\u6211\u600e\u4e48\u77e5\u9053\u54ea\u4e00\u4e2a\u662f\u6700\u597d\u7684\u5462\uff1f\u552f\u4e00\u77e5\u9053\u7684\u65b9\u6cd5\u662f\u6d4b\u8bd5\u5b83\uff0c\u56e0\u6b64\u6211\u768464\u4f4dPRNG\u67aa\u6218\uff1a\n\u5f53\u7136\uff0c\u8fd8\u6709\u5176\u4ed6\u7c7b\u4f3c\u7684\u67aa\u6218\uff0c\u4f46\u5b83\u4eec\u90fd\u9057\u6f0f\u4e86\u4e00\u4e9b\u6211\u60f3\u8861\u91cf\u7684\u4e1c\u897f\u3002\u6211\u8fd8\u60f3\u5728\u4e00\u4e2a\u975e\u5e38\u63a5\u8fd1\u6211\u81ea\u5df1\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9bPRNG\u7684\u73af\u5883\u4e2d\u8fdb\u884c\u6d4b\u8bd5\u3002\n\u5728\u8be6\u7ec6\u4ecb\u7ecd\u57fa\u51c6\u6d4b\u8bd5\u548c\u6bcf\u4e2a\u751f\u6210\u5668\u4e4b\u524d\uff0c\u4e0b\u9762\u662f\u7ed3\u679c\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u5728\u8fd0\u884cLinux4.9.0\u7684i7-6700(Skylake)\u4e0a\u8fd0\u884c\u3002\n\u901f\u5ea6(MB/s)\u6545\u969c\u5f31GCC-6.3.0 clang-3.8.1---baseline X X 15000 13100 Bowfish cbc16 0 1 169 Blowfish cbc4 0 5725 676 Bowfish ctr16 1 3 187 184 Blowfish ctr4 1 5890 1000mt64 1 7 1700 1970pcg64 0 4 4150 3290rc4 0 5366 185spcg64 0 8 5140 4960xoroshiro128+0 8100 7720xor\u3002\n\u660e\u663e\u7684\u8d62\u5bb6\u662fxoroshiro128+\uff0c\u5b83\u7684\u51fd\u6570\u4f53\u53ea\u67097\u884cC\u4ee3\u7801\uff0c\u663e\u7136\u662f\u6700\u5feb\u7684\uff0c\u800c\u4e14\u8f93\u51fa\u6ca1\u6709\u89c2\u5bdf\u5230\u7edf\u8ba1\u6545\u969c\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u6545\u4e8b\u7684\u5168\u90e8\u3002\u4e0eXoroshiro128+\u76f8\u6bd4\uff0c\u5176\u4ed6PRNG\u4e2d\u7684\u4e00\u5bf9\u5177\u6709\u4f7f\u5b83\u4eec\u66f4\u9002\u5408\u7684\u4f18\u52bf\u3002\u5728\u4e0b\u9762\u7684\u8ba8\u8bba\u4e2d\uff0c\u6211\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e9b\u5185\u5bb9\u3002\n\u4e4b\u6240\u4ee5\u9009\u62e9GCC\u548c\u560e\u560e\u8fd9\u4e24\u4e2a\u7248\u672c\uff0c\u662f\u56e0\u4e3a\u8fd9\u662fDebian9\u201c\u4f38\u5c55\u201d\u4e2d\u53ef\u7528\u7684\u6700\u65b0\u7248\u672c\u3002\u5982\u679c\u60a8\u60f3\u5c1d\u8bd5\u4e0d\u540c\u7684\u7248\u672c\uff0c\u81ea\u5df1\u6784\u5efa\u548c\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u5f88\u5bb9\u6613\u3002\n\u5728\u901f\u5ea6\u57fa\u51c6\u4e2d\uff0c\u521d\u59cb\u5316PRNG\uff0c\u8bbe\u7f6e1\u79d2\u62a5\u8b66(1)\uff0c\u7136\u540ePRNG\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u4e00\u904d\u53c8\u4e00\u904d\u5730\u586b\u514564\u4f4d\u672a\u7b7e\u540d\u7f16\u7801\u5668\u7684\u5927\u578b\u6613\u5931\u6027\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u62a5\u8b66\u7740\u706b\u3002\u5199\u5165\u7684\u5185\u5b58\u91cf\u4ee5PRNG\u7684\u901f\u5ea6\u8861\u91cf\u3002\n\u57fa\u7ebf\u201cPRNG\u201d\u5c06\u96f6\u5199\u5165\u7f13\u51b2\u533a\u3002\u8fd9\u4ee3\u8868\u4e86PRNG\u4e0d\u80fd\u8d85\u8fc7\u7684\u7edd\u5bf9\u901f\u5ea6\u9650\u5236\u3002\n\u5c06\u7f13\u51b2\u533a\u8bbe\u7f6e\u4e3a\u6613\u5931\u6027\u7684\u76ee\u7684\u662f\u8feb\u4f7f\u7f16\u8bd1\u5668\u771f\u6b63\u5730\u201c\u6d88\u8017\u201d\u6574\u4e2a\u8f93\u51fa\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u800d\u4e00\u4e9b\u5351\u9119\u7684\u4f0e\u4fe9\uff0c\u8ba9\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u5c11\u5730\u505a\u5de5\u4f5c\u3002\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u7f16\u5199(2)Buffer\uff0c\u4f46\u662f\u6211\u5f53\u7136\u4e0d\u60f3\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5f15\u5165\u4e0d\u5fc5\u8981\u7684I/O\u3002\n\u5728Linux\u4e0a\uff0cSIGALRM\u5728\u4e24\u6b21\u8fd0\u884c\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u975e\u5e38\u9002\u5408\u8fd9\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u3002\u4e3a\u4e86\u89e3\u51b3\u4efb\u4f55\u8fdb\u7a0b\u8c03\u5ea6\u7684\u7f3a\u9677\uff0c\u57fa\u51c6\u8fd0\u884c\u4e868\u6b21\uff0c\u5e76\u4e14\u53ea\u4fdd\u7559\u4e86\u6700\u5feb\u7684\u65f6\u95f4\u3002\nSIGALRM\u5904\u7406\u7a0b\u5e8f\u8bbe\u7f6e\u4e00\u4e2a\u544a\u8bc9\u751f\u6210\u5668\u505c\u6b62\u7684\u6613\u5931\u6027\u5168\u5c40\u53d8\u91cf\u3002PRNG\u8c03\u7528\u88ab\u5c55\u5f008\u6b21\uff0c\u4ee5\u907f\u514d\u8b66\u62a5\u68c0\u67e5\u4e25\u91cd\u5f71\u54cd\u57fa\u51c6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u4ee3\u7801\u4e2d\u5c06Unroll\u66f4\u6539\u4e3a1(\u5373\u201cdo\u2018tunroll\u201d)\u6765\u4eb2\u81ea\u67e5\u770b\u6548\u679c\u3002\u5c55\u5f00\u8d85\u8fc78\u6b21\u5bf9\u6211\u7684\u6d4b\u8bd5\u6ca1\u6709\u660e\u663e\u7684\u5f71\u54cd\u3002\n\u7531\u4e8ePRNG\u662f\u5185\u8054\u7684\uff0c\u8fd9\u79cd\u5c55\u5f00\u4f7f\u65e0\u57fa\u51c6\u6210\u4e3a\u73b0\u5b9e\uff0c\u5e76\u5728\u7ed3\u679c\u4e2d\u663e\u793a\u51fa\u6765\u3002\u4f7f\u7528Volatile\u4f5c\u4e3a\u7f13\u51b2\u533a\u6709\u52a9\u4e8e\u62b5\u6d88\u8fd9\u79cd\u5f71\u54cd\u5e76\u91cd\u65b0\u8ba1\u7b97\u7ed3\u679c\u3002\u8fd9\u662f\u4e00\u4e2a\u6a21\u7cca\u7684\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5b83\uff0c\u4f46\u6211\u4e5f\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e3a\u4e86\u6d4b\u91cf\u6bcf\u4e2aPRNG\u7684\u7edf\u8ba1\u8d28\u91cf-\u4e3b\u8981\u662f\u4f5c\u4e3a\u5065\u5168\u6027\u68c0\u67e5-\u539f\u59cb\u4e8c\u8fdb\u5236\u8f93\u51fa\u901a\u8fc7DieHard 3.31.1\u8fd0\u884c\uff1a\n\u8fd9\u79cd\u7edf\u8ba1\u5206\u6790\u6ca1\u6709\u65f6\u5e8f\u7279\u5f81\uff0c\u7ed3\u679c\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u5e94\u8be5\u662f\u76f8\u540c\u7684\u3002\u60a8\u53ea\u9700\u91cd\u65b0\u8c03\u6574\u5355\u5143\uff0c\u5373\u53ef\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684DieHard\u6216\u4e0d\u540c\u7684\u5206\u6790\u5de5\u5177\u8fdb\u884c\u6d4b\u8bd5\u3002\n\u6ca1\u6709\u591a\u5c11\u4fe1\u606f\u53ef\u4ee5\u4ece\u8fd9\u90e8\u5206\u67aa\u6218\u4e2d\u6536\u96c6\u5230\uff0c\u4f46\u5927\u90e8\u5206\u90fd\u8bc1\u5b9e\u4e86\u6240\u6709\u8fd9\u4e9bPRNG\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u7528\u4e8e\u6a21\u62df\u76ee\u7684\u3002\u75b2\u8f6f\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u975e\u5e38\u91cd\u8981\uff0c\u53ea\u5bf9\u6253\u7834\u5173\u7cfb\u6709\u7528\u3002\u5373\u4f7f\u662f\u771f\u6b63\u7684RNG\u4e5f\u4f1a\u5f97\u5230\u4e00\u4e9bWEAK\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\uff0cx86RDRAND\u6307\u4ee4(\u6ca1\u6709\u5305\u542b\u5728\u5b9e\u9645\u7684\u67aa\u6218\u4e2d)\u5f97\u5230\u4e867\u4e2a\u5f31\u7ed3\u679c\u3002\n\u5931\u8d25\u7684\u7ed3\u679c\u66f4\u91cd\u8981\uff0c\u4f46\u4e00\u6b21\u5931\u8d25\u5e76\u4e0d\u610f\u5473\u7740\u4ec0\u4e48\u3002\u6ca1\u6709\u6545\u969c\u7684PRNG\u5e94\u8be5\u4f18\u5148\u4e8e\u5176\u4ed6\u76f8\u7b49\u7684\u6709\u6545\u969c\u7684PRNG\u3002\n\u8bda\u7136\uff0c\u201c64\u4f4dPRNG\u201d\u7684\u5b9a\u4e49\u76f8\u5f53\u6a21\u7cca\u3002\u6211\u7684\u9ad8\u6027\u80fd\u76ee\u6807\u90fd\u662f64\u4f4d\u5e73\u53f0\uff0c\u6240\u4ee5\u6700\u9ad8\u7684PRNG\u541e\u5410\u91cf\u5c06\u6784\u5efa\u572864\u4f4d\u64cd\u4f5c\u4e0a(\u5982\u679c\u4e0d\u662f\u66f4\u5e7f\u7684\u8bdd)\u3002\u6700\u521d\u7684\u8ba1\u5212\u662f\u4e13\u6ce8\u4e8e\u4ece64\u4f4d\u64cd\u4f5c\u6784\u5efa\u7684PRNG\u3002\n\u597d\u5947\u5fc3\u8ba9\u6211\u4e0d\u77e5\u6240\u63aa\uff0c\u6240\u4ee5\u6211\u52a0\u5165\u4e86\u4e00\u4e9b\u4e0d\u4f7f\u7528\u4efb\u4f5564\u4f4d\u64cd\u4f5c\u7684PRNG\u3002\u6211\u53ea\u60f3\u770b\u770b\u5b83\u4eec\u662f\u600e\u4e48\u5806\u79ef\u8d77\u6765\u7684\u3002\n\u6211\u7f16\u5199Blowfish\u5b9e\u73b0\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u8bc4\u4f30\u5176\u6027\u80fd\u548c\u7edf\u8ba1\u8d28\u91cf\uff0c\u56e0\u6b64\u6211\u5f88\u81ea\u7136\u5730\u5c06\u5176\u5305\u62ec\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u3002\u5b83\u53ea\u4f7f\u752832\u4f4d\u52a0\u6cd5\u548c32\u4f4dXOR\u3002\u5b83\u6709\u4e00\u4e2a64\u4f4d\u7684\u5757\u5927\u5c0f\uff0c\u6240\u4ee5\u5b83\u81ea\u7136\u4f1a\u4ea7\u751f\u4e00\u4e2a64\u4f4d\u7684\u6574\u6570\u3002\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u5c5e\u6027\u7ec4\u5408\u6210\u56db\u4e2a\u53d8\u91cf\uff1a\u8f6e\u6570\u548c\u5757\u6a21\u5f0f\u3002\n\u6cb3\u8c5a\u901a\u5e38\u4f7f\u752816\u53d1\u5b50\u5f39\u3002\u8fd9\u4f7f\u5f97\u5b83\u6bd4\u975e\u52a0\u5bc6PRNG\u6162\u5f97\u591a\uff0c\u4f46\u7ed9\u4e86\u5b83\u4e00\u4e2a\u5b89\u5168\u88d5\u5ea6\u3002\u6211\u4e0d\u5728\u4e4e\u5b89\u5168\u8fb9\u9645\uff0c\u6240\u4ee5\u6211\u52a0\u4e86\u4e00\u4e2a4\u8f6e\u53d8\u79cd\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u5b83\u7684\u901f\u5ea6\u5927\u7ea6\u5feb\u4e86\u56db\u500d\u3002\n\u6211\u6d4b\u8bd5\u7684\u53e6\u4e00\u4e2a\u529f\u80fd\u662f\u5757\u6a21\u5f0f\uff1a\u5bc6\u7801\u5757\u94fe\u63a5(CBC)\u4e0e\u8ba1\u6570\u5668(CTR)\u6a21\u5f0f\u3002\u5728CBC\u6a21\u5f0f\u4e0b\uff0c\u5b83\u5c06\u96f6\u52a0\u5bc6\u4e3a\u660e\u6587\u3002\u8fd9\u4ec5\u4ec5\u610f\u5473\u7740\u5b83\u5728\u52a0\u5bc6\u5176\u6700\u540e\u4e00\u6b21\u8f93\u51fa\u3002\u5bc6\u6587\u662fPRNG\u7684\u8f93\u51fa\u3002\n\u5728CTR\u6a21\u5f0f\u4e0b\uff0cPRNG\u6b63\u5728\u52a0\u5bc6\u4e00\u4e2a64\u4f4d\u8ba1\u6570\u5668\u3002\u5b83\u6bd416\u8f6e\u7684CBC\u5feb11%\uff0c\u6bd44\u8f6e\u7684\u5feb23%\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5c55\u5f00\u751f\u6210\u5faa\u73af\u3002\n\u5728CBC\u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u8f93\u51fa\u90fd\u4f9d\u8d56\u4e8e\u524d\u4e00\u4e2a\u8f93\u51fa\uff0c\u4f46\u5728CTR\u6a21\u5f0f\u4e0b\uff0c\u6240\u6709\u5757\u90fd\u662f\u72ec\u7acb\u7684\u3002\u5728\u524d\u4e00\u6b21\u8f93\u51fa\u5b8c\u6210\u4e4b\u524d\uff0c\u53ef\u4ee5\u5f00\u59cb\u4e0b\u4e00\u6b21\u8f93\u51fa\u7684\u5de5\u4f5c\u3002X86\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u65e0\u5e8f\u6267\u884c\u6765\u5b9e\u73b0\u8bb8\u591a\u6027\u80fd\u6536\u76ca\uff1a\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u53ef\u80fd\u4e0e\u5b83\u4eec\u5728\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u53ef\u89c2\u5bdf\u6548\u679c\u901a\u5e38\u5fc5\u987b\u6b63\u786e\u6392\u5e8f\u3002\u6253\u7834\u6307\u4ee4\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u5141\u8bb8\u5b8c\u5168\u6267\u884c\u65e0\u5e8f\u6267\u884c\u3002\u5b83\u8fd8\u5728\u6307\u4ee4\u8c03\u5ea6\u4e2d\u7ed9\u4e88\u7f16\u8bd1\u5668\u66f4\u5927\u7684\u81ea\u7531\u5ea6\uff0c\u5c3d\u7ba1\u4e0d\u80fd\u5c06\u6613\u5931\u6027\u8bbf\u95ee\u5f7c\u6b64\u91cd\u65b0\u6392\u5e8f(\u56e0\u6b64\u53ef\u4ee5\u5e2e\u52a9\u91cd\u65b0\u5faa\u73af\u57fa\u51c6)\u3002\n\u4ece\u7edf\u8ba1\u4e0a\u770b\uff0c4\u8f6e\u5bc6\u7801\u5e76\u4e0d\u6bd416\u8f6e\u5bc6\u7801\u5dee\u591a\u5c11\u3002\u5c3d\u7ba1Xoroshiro128+\u5728\u4e0d\u727a\u7272\u8d28\u91cf\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6bd4Xoroshiro128+\u5feb9\u500d\u4ee5\u4e0a\uff0c\u4f46\u51fa\u4e8e\u6a21\u62df\u76ee\u7684\uff0c4\u8f6e\u5bc6\u7801\u5df2\u7ecf\u5b8c\u5168\u8db3\u591f\u4e86\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cCTR\u6a21\u5f0f\u57284\u8f6e(Dab_Fultree2)\u548c16\u8f6e(Dab_Fultree)\u53d8\u4f53\u4e2d\u90fd\u6709\u4e00\u4e2a\u6545\u969c\u3002\u81f3\u5c11\u5bf9\u4e8eBlowfish\u6765\u8bf4\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\u8ba9CTR\u6a21\u5f0f\u6bd4CBCmode\u66f4\u4e0d\u9002\u5408\u4f5c\u4e3aPRNG\u5462\uff1f\n\u6700\u540e\uff0cBlowfish\u901f\u5ea6\u592a\u6162\uff0c\u592a\u590d\u6742\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u6a21\u62dfPRNG\u3002\u8fd9\u5b8c\u5168\u662f\u610f\u6599\u4e4b\u4e2d\u7684\uff0c\u4f46\u770b\u770b\u5b83\u662f\u5982\u4f55\u5806\u53e0\u8d77\u6765\u7684\uff0c\u8fd9\u662f\u5f88\u6709\u8da3\u7684\u3002\n\u4ece\u6765\u6ca1\u6709\u4eba\u56e0\u4e3a\u9009\u62e9\u6885\u68ee\u00b7\u7279\u7ef4\u65af\u7279\u800c\u88ab\u89e3\u96c7\u3002\u8fd9\u662f\u6a21\u62df\u7684\u7ecf\u5178\u9009\u62e9\uff0c\u81f3\u4eca\u4ecd\u88ab\u63a8\u8350\u4f7f\u7528\u3002\u7136\u800c\uff0cMersenne Twister\u6700\u597d\u7684\u65e5\u5b50\u5df2\u7ecf\u8fc7\u53bb\u4e86\u3002\u6211\u6d4b\u8bd5\u4e8664\u4f4d\u53d8\u4f53MT19937-64\uff0c\u6709\u56db\u4e2a\u95ee\u9898\uff1a\n\u5b83\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u72b6\u6001\uff1a2500\u5b57\u8282\u3002\u4e0eXoroshiro128+\u768416\u5b57\u8282\u76f8\u6bd4\u3002\n\u5947\u602a\u7684\u662f\uff0c\u6211\u7528Clang\u5b9e\u73b0\u7684\u901f\u5ea6\u6bd4\u7528GCC\u5feb16%\u3002\u56e0\u4e3a\u6885\u68ee\u00b7\u7279\u7ef4\u65af\u7279\u5e76\u4e0d\u662f\u8ba4\u771f\u7684\u53c2\u9009\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u82b1\u65f6\u95f4\u53bb\u6316\u6398\u5176\u4e2d\u7684\u539f\u56e0\u3002\n\u201c\u7f6e\u6362\u4e00\u81f4\u751f\u6210\u5668\u201d(PCG)\u80cc\u540e\u6709\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u5386\u53f2\uff0c\u7279\u522b\u662f\u5b83\u7684\u8bba\u6587\u6709\u4e9b\u4e0d\u540c\u5bfb\u5e38\uff0c\u56e0\u4e3a\u7bc7\u5e45\u8fc7\u957f(58\u9875)\u548c\u975e\u6b63\u5f0f\u98ce\u683c\u800c\u6709\u4e89\u8bae\u3002\u5b83\u4e0eXorShift\u548cXoroshiro128+\u7ade\u4e89\u6fc0\u70c8\u3002\u6211\u771f\u7684\u5f88\u60f3\u770b\u770b\u5b83\u662f\u5982\u4f55\u5806\u79ef\u8d77\u6765\u7684\u3002\nPCG\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u53d1\u751f\u5668(LCG)\uff0c\u5b83\u4e0d\u8f93\u51fa\u6700\u4f4e\u7684\u6bd4\u7279(\u8d28\u91cf\u592a\u5dee)\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u7f6e\u6362\u6b65\u9aa4\u6765\u5f25\u8865LCG\u7684\u5176\u4ed6\u5f31\u70b9\u3002\u6211\u5728\u6211\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5305\u542b\u4e86\u4e24\u4e2a\u53d8\u4f53\uff1a\u5b98\u65b9PCG\u548c\u5e26\u6709\u7b80\u5355\u6392\u5217\u6b65\u9aa4\u7684\u201c\u7b80\u5316\u201dPCG(SPCG)\u3002SPCG\u53ea\u662f\u8bba\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b2c\u4e00\u4e2aPCG(34\u9875\uff01)\u3002\nUint32_t spcg32(uint64_t s[1]){uint64_t m=0x9b60933458e17d7d\uff1buint64_t a=0xd737232eeccdf7ed\uff1b*s=*s*m+a\uff1bint shift=29-(*s&gt\uff1b&gt\uff1b61)\uff1breturn*s&gt\uff1b&gt\uff1bShift\uff1b}\u3002\n\u5e26\u6709\u6a21\u4e58\u548c\u52a0\u6cd5\u7684\u7b2c\u4e09\u884c\u662fLCG\u3002\u4f4d\u79fb\u4f4d\u662f\u6392\u5217\u3002\u6b64PCG\u4f7f\u7528\u7ed3\u679c\u7684\u6700\u9ad8\u6709\u6548\u4e09\u4f4d\u6765\u786e\u5b9a\u8f93\u51fa\u54ea32\u4f4d\u3002\u8fd9\u662fPCG\u7684\u65b0\u5947\u7ec4\u6210\u90e8\u5206\u3002\n\u8fd9\u4e24\u4e2a\u5e38\u91cf\u5b8c\u5168\u662f\u6211\u81ea\u5df1\u8bbe\u8ba1\u7684\u3002\u5b83\u662f\u4f7f\u7528Emacs\u7684M-x calc\u751f\u6210\u7684\u4e24\u4e2a64\u4f4dPrime\uff1a264^k r k n k k p p k p\u3002\n\u89c1\u9b3c\uff0c\u8fd9\u592a\u7b80\u5355\u4e86\uff0c\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8bb0\u4f4f\u5b83\uff0c\u5e76\u6839\u636e\u9700\u8981\u4ece\u5934\u5f00\u59cb\u7f16\u7801\u3002\u8981\u70b9\uff1a\u8fd9\u662fPCG\u5728\u67d0\u79cd\u60c5\u51b5\u4e0b\u6bd4Xoroshiro128+\u66f4\u597d\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5728\u7d27\u8981\u5173\u5934\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528Emacst\u751f\u6210\u51e0\u4e2a\u7d20\u6570\uff0c\u7136\u540e\u6839\u636e\u5185\u5b58\u7f16\u5199\u5176\u4f59\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u53c2\u52a0\u7f16\u7801\u6bd4\u8d5b\uff0c\u8bf7\u6ce8\u610f\u3002\n\u4e0d\u8fc7\uff0c\u60a8\u53ef\u80fd\u4e5f\u6ce8\u610f\u5230\uff0c\u5c3d\u7ba1PCG\u4f7f\u752864\u4f4d\u8fd0\u7b97\uff0c\u4f46\u5b83\u53ea\u751f\u621032\u4f4d\u6574\u6570\u3002\u8981\u6b63\u786e\u751f\u621064\u4f4d\u7684\u503c\uff0c\u6211\u4eec\u9700\u8981128\u4f4d\u7684\u64cd\u4f5c\uff0c\u8fd9\u9700\u8981\u5728\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u52a0\u500d\u8fd0\u884c\u4e24\u4e2aPRNG\uff0c\u5c3d\u7ba1\u5dde\u5927\u5c0f\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u4f46\u662f\u7531\u4e8ePRNG\u4e4b\u95f4\u6ca1\u6709\u4ea4\u4e92\uff0c\u6240\u4ee5\u5468\u671f\u4e0d\u4f1a\u53d8\u5f97\u66f4\u957f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u5f97\u5230\u4e86\u4e00\u4e9b\u56de\u62a5\u3002\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7\u7684\u65e0\u5e8f\u6267\u884c\u5417\uff1f\u9664\u4e86\u6700\u540e\u4e00\u6b65\u5408\u5e76\u4ed6\u4eec\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u4e24\u4e2aPRG\u662f\u72ec\u7acb\u7684\uff0c\u52a0\u500d\u4e0d\u5e94\u8be5\u5b8c\u5168\u51cf\u534a\u6027\u80fd\uff0c\u7279\u522b\u662f\u5728\u57fa\u51c6\u5faa\u73af\u5c55\u5f00\u4e1a\u52a1\u7684\u60c5\u51b5\u4e0b\u3002\nUint64_t spcg64(uint64_t s[2]){uint64_t m=0x9b60933458e17d7d\uff1buint64_t a0=0xd737232eeccdf7ed\uff1buint64_t a1=0x8b260b70b8e98891\uff1buint64_t p0=s[0]\uff1buint64_t p1=s[1]\uff1bs[0]=p\u300261)\uff1buint64_t HIGH=P0&gt\uff1b&gt\uff1bR0\uff1buint32_t Low=p1&gt\uff1b&gt\uff1bR1\uff1bRETURN(HIGH&lt\uff1b&lt\uff1b32)|Low\uff1b}\u3002\n\u201c\u5168\u201d\u76c8\u79d1\u6bd4\u201c\u7b80\u5316\u201d\u76c8\u79d1\u6162\u4e8625%(GCC)\u523050%(\u7830\u7830)\uff0c\u4f46\u5b83\u786e\u5b9e\u5c06WEAK\u7ed3\u679c\u51cf\u534a\u3002\n\u5728\u8fd9\u79cd64\u4f4d\u5f62\u5f0f\u4e2d\uff0c\u4e24\u8005\u90fd\u6bd4xoroshiro128+\u6162\u5f97\u591a\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u81ea\u5df1\u4e00\u6b21\u53ea\u9700\u898132\u4f4d(\u603b\u662f\u4e22\u5f0364\u4f4dPRNG\u4e2d\u7684\u9ad832\u4f4d)\uff0c32\u4f4dPCG\u6bd4\u4f7f\u7528xoroshiro128+\u5e76\u4e22\u5f03\u4e00\u534a\u7684\u8f93\u51fa\u8981\u5feb\u5f97\u591a\u3002\n\u8fd9\u662f\u53e6\u4e00\u4e2aCSPRNG\uff0c\u6211\u5f88\u597d\u5947\u5b83\u662f\u5982\u4f55\u5806\u53e0\u8d77\u6765\u7684\u3002\u5b83\u53ea\u4f7f\u75288\u4f4d\u8fd0\u7b97\uff0c\u5e76\u4e14\u6bcf\u6b21\u751f\u6210\u4e00\u4e2a\u5b57\u8282\u768464\u4f4d\u6574\u6570\u3002\u5b83\u662f\u572816\u8f6e\u6cb3\u8c5a\u4e4b\u540e\u6700\u6162\u7684\uff0c\u901a\u5e38\u4f5c\u4e3a\u6a21\u62dfPRNG\u6ca1\u6709\u7528\u5904\u3002\n\u5728\u8fd9\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cxoroshiro128+\u663e\u7136\u662f\u8d62\u5bb6\uff0c\u800c\u4e14\u5b83\u4f3c\u4e4e\u662f\u53ef\u7528\u7684\u6700\u597d\u768464\u4f4d\u6a21\u62dfPRNG\u3002\u5982\u679c\u60a8\u9700\u8981\u5feb\u901f\u3001\u9ad8\u8d28\u91cf\u7684PRNG\uff0c\u53ea\u9700\u5c06\u4ee5\u4e0b11\u884c\u4ee3\u7801\u653e\u5165C\u6216C++\u7a0b\u5e8f\uff1a\nUint64_t xoroshiro128plus(uint64_t s[2]){uint64_t s0=s[0]\uff1buint64_t s1=s[1]\uff1buint64_t result=s0+s1\uff1bs1^=s0\uff1bs[0]=((s0&lt\uff1b&lt\uff1b&lt\uff1b9))^s1^(s1&lt\uff1b&lt\uff1b14)\uff1bs[\u300236)|(S1&&gt;\uff1b&gt\uff1b28)\uff1b\u8fd4\u56de\u7ed3\u679c\uff1b}\n\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u8b66\u544a\uff1a16\u5b57\u8282\u7684\u72b6\u6001\u5fc5\u987b\u662f\u79cd\u5b50\u826f\u597d\u7684\u3002\u62e5\u6709\u5927\u91cf\u96f6\u5b57\u8282\u5c06\u5bfc\u81f4\u7cdf\u7cd5\u7684\u521d\u59cb\u8f93\u51fa\uff0c\u76f4\u5230\u751f\u6210\u5668\u5c06\u5176\u5168\u90e8\u6df7\u5408\u3002\u5168\u90e8\u4e3a\u96f6\u5b57\u8282\u5c06\u5b8c\u5168\u7834\u574f\u751f\u6210\u5668\u3002\u6bd4\u65b9\u8bf4\uff0c\u5982\u679c\u4f60\u8981\u4eceunix\u65f6\u4ee3\u5f00\u59cb\u64ad\u79cd\uff0c\u90a3\u4e48\u5c31\u752816\u4e2a\u9759\u6001\u968f\u673a\u5b57\u8282\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002\n\u8fd9\u4e9b\u751f\u6210\u5668\u662f\u5bc6\u5207\u76f8\u5173\u7684\uff0c\u5c31\u50cf\u6211\u8bf4\u7684\uff0cxorShift 64*\u662f\u6211\u591a\u5e74\u6765\u4e00\u76f4\u4f7f\u7528\u7684\u3002\u770b\u8d77\u6765\u662f\u65f6\u5019\u8ba9\u5b83\u9000\u5f79\u4e86\u3002\nUint64_t xorshit64star(uint64_t s[1]){uint64_t x=s[0]\uff1bx^=x&gt\uff1b&gt\uff1b12\uff1bx^=x&lt\uff1b&lt\uff1b25\uff1bx^=x&gt\uff1b&gt\uff1b27\uff1bs[0]=x\uff1breturn x*UINT64_C(0x2545f4914f6cdd1d)\uff1b}\u3002\n\u7136\u800c\uff0c\u4e0exoroshiro128+\u548cxorshit128+\u4e0d\u540c\u7684\u662f\uff0cxorshit64*\u53ef\u4ee5\u5bb9\u5fcd\u5f31\u79cd\u5b50\uff0c\u53ea\u8981\u5b83\u4e0d\u662f\u5b57\u9762\u4e0a\u7684\u96f6\u3002\u96f6\u4e5f\u4f1a\u7834\u574f\u8fd9\u53f0\u53d1\u7535\u673a\u3002\n\u5982\u679c\u4e0d\u662fXoroshiro128+\uff0c\u90a3\u4e48XorShift 128+\u5c06\u662f\u57fa\u51c6\u6d4b\u8bd5\u7684\u83b7\u80dc\u8005\uff0c\u4e5f\u662f\u6211\u6700\u559c\u6b22\u7684\u65b0\u9009\u62e9\u3002\nUint64_t xorshift t128plus(uint64_t s[2]){uint64_t x=s[0]\uff1buint64_t y=s[1]\uff1bs[0]=y\uff1bx^=x&lt\uff1b&lt\uff1b23\uff1bs[1]=x^y^(x&gt\uff1b&gt\uff1b17)^(y&gt\uff1b&gt\uff1b26)\uff1breturn s[1]+y\uff1b}\u3002\n\u8fd9\u5f88\u50cfXoroshiro128+\uff0c\u5305\u62ec\u9700\u8981\u64ad\u597d\u79cd\u5b50\uff0c\u4f46\u5b83\u7684\u901f\u5ea6\u592a\u6162\u4e86\uff0c\u4ee5\u81f3\u4e8e\u4f1a\u8f93\u6389\u6bd4\u8d5b\u3002\u6ca1\u6709\u7406\u7531\u4f7f\u7528xororShift 128+\u800c\u4e0d\u662fxoroshiro128+\u3002\n\u4e0d\u8fc7\uff0c\u4e0d\u540c\u5e73\u53f0\u4e4b\u95f4\u7684\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d1\u751f\u91cd\u5927\u53d8\u5316\u3002\u8fd9\u662f\u4e00\u67b6ARM Cortex-A53\u7684\u67aa\u51fb\u753b\u9762\uff1a\n\u901f\u5ea6(MB/s)GCC-5.4.0 clang-3.8.0--baseline 2560 2400 blowfish cbc16 36.5 45.4 blowfish cbc4 135 173 blowfish ctr16 36.4 45.2 blowfish ctr4 133 168mt64 207 254 pcg64980 712rc4 96.6 44.0spcg64 1021 948xoroshiro128+2560 1570xort128+2560 1520xorShift 64*13601080\u3002\nLLVM\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\u8fd8\u4e0d\u662f\u5f88\u6210\u719f\uff0c\u4f46\u662f\u6709\u4e86GCC\uff0cxoroshiro128+\u548cxorShift 128+\u90fd\u8fbe\u5230\u4e86\u57fa\u7ebf\uff01\u770b\u6765\u8bb0\u5fc6\u624d\u662f\u74f6\u9888\u3002\n\u6240\u4ee5\u4e0d\u4e00\u5b9a\u8981\u76f8\u4fe1\u6211\u7684\u8bdd\u3002\u4f60\u53ef\u4ee5\u5728\u4f60\u81ea\u5df1\u7684\u73af\u5883\u4e2d\u8fdb\u884c\u8fd9\u573a\u67aa\u6218-\u4e5f\u8bb8\u751a\u81f3\u53ef\u4ee5\u6254\u8fdb\u66f4\u591a\u7684PRNG-\u6765\u627e\u51fa\u9002\u5408\u4f60\u81ea\u5df1\u7684\u60c5\u51b5\u3002\n\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u6709\u4ec0\u4e48\u8bc4\u8bba\u5417\uff1f\u901a\u8fc7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3~Skeeto/public-inbox@lists.sr.ht[\u90ae\u4ef6\u5217\u8868\u793c\u4eea]\u5f00\u59cb\u6211\u7684\u516c\u5171\u6536\u4ef6\u7bb1\u4e2d\u7684\u8ba8\u8bba\uff0c\u6216\u67e5\u770b\u73b0\u6709\u8ba8\u8bba\u3002", "note_en": "August 2018 Update:  xoroshiro128+ fails  PractRand verybadly. Since this article was published, its authors have supplanted itwith  xoshiro256**. It has essentially the same performance, butbetter statistical properties. xoshiro256** is now my preferred PRNG.\n I use pseudo-random number generators (PRNGs) a whole lot. They\u2019re anessential component in lots of algorithms and processes.\n Monte Carlo simulations, where PRNGs are used to  computenumeric estimates for problems that are difficult or impossibleto solve analytically.\n  Monte Carlo tree search AI, where massive numbers of gamesare played out randomly in search of an optimal move. This is aspecific application of the last item.\n  Genetic algorithms, where a PRNG creates the initialpopulation, and then later guides in mutation and breeding of selectedsolutions.\n  Cryptography, where a cryptographically-secure PRNGs(CSPRNGs) produce output that is predictable for recipients who knowa particular secret, but not for anyone else. This article is onlyconcerned with plain PRNGs.\n For the first three \u201csimulation\u201d uses, there are two primary factorsthat drive the selection of a PRNG. These factors can be at odds witheach other:\n The PRNG should be  very fast. The application should spend itstime running the actual algorithms, not generating random numbers.\n  PRNG output should have robust statistical qualities. Bits shouldappear to be independent and the output should closely follow thedesired distribution. Poor quality output will negatively effectthe algorithms using it. Also just as important is  how you useit, but this article will focus only on generating bits.\n In other situations, such as in cryptography or online gambling,another important property is that an observer can\u2019t learn anythingmeaningful about the PRNG\u2019s internal state from its output. For thethree simulation cases I care about, this is not a concern. Only speedand quality properties matter.\n Depending on the programming language, the PRNGs found in variousstandard libraries may be of dubious quality. They\u2019re slower than theyneed to be, or have poorer quality than required. In some cases, suchas  rand() in C, the algorithm isn\u2019t specified, and you can\u2019t rely onit for anything outside of trivial examples. In other cases thealgorithm and behavior  is specified, but you could easily do betteryourself.\n My preference is to BYOPRNG:  Bring Your Own Pseudo-random NumberGenerator. You get reliable, identical output everywhere. Also, inthe case of C and C++ \u2014 and if you do it right \u2014 by embedding the PRNGin your project, it will get inlined and unrolled, making it far moreefficient than a  slow call into a dynamic library.\n A fast PRNG is going to be small, making it a great candidate forembedding as, say, a header library. That leaves just one importantquestion, \u201cCan the PRNG be small  and have high quality output?\u201d Inthe 21st century, the answer to this question is an emphatic \u201cyes!\u201d\n For the past few years my main go to for a drop-in PRNG has been xorshift*. The body of the function is 6 lines of C, and itsentire state is a 64-bit integer, directly seeded. However, there are anumber of choices here, including other variants of Xorshift. How do Iknow which one is best? The only way to know is to test it, hence my64-bit PRNG shootout:\n  Sure, there  are other such shootouts, but they\u2019re all missingsomething I want to measure. I also want to test in an environment veryclose to how I\u2019d use these PRNGs myself.\n  Before getting into the details of the benchmark and each generator,here are the results. These tests were run on an i7-6700 (Skylake)running Linux 4.9.0.\n Speed (MB/s)PRNG FAIL WEAK gcc-6.3.0 clang-3.8.1------------------------------------------------baseline X X 15000 13100blowfishcbc16 0 1 169 157blowfishcbc4 0 5 725 676blowfishctr16 1 3 187 184blowfishctr4 1 5 890 1000mt64 1 7 1700 1970pcg64 0 4 4150 3290rc4 0 5 366 185spcg64 0 8 5140 4960xoroshiro128+ 0 6 8100 7720xorshift128+ 0 2 7660 6530xorshift64* 0 3 4990 5060\n   The clear winner is  xoroshiro128+, with a function body ofjust 7 lines of C. It\u2019s clearly the fastest, and the output had noobserved statistical failures. However, that\u2019s not the whole story. Acouple of the other PRNGS have advantages that situationally makesthem better suited than xoroshiro128+. I\u2019ll go over these in thediscussion below.\n These two versions of GCC and Clang were chosen because these are thelatest available in Debian 9 \u201cStretch.\u201d It\u2019s easy to build and run thebenchmark yourself if you want to try a different version.\n  In the speed benchmark, the PRNG is initialized, a 1-second  alarm(1)is set, then the PRNG fills a large  volatile buffer of 64-bit unsignedintegers again and again as quickly as possible until the alarm fires.The amount of memory written is measured as the PRNG\u2019s speed.\n The baseline \u201cPRNG\u201d writes zeros into the buffer. This represents theabsolute speed limit that no PRNG can exceed.\n The purpose for making the buffer  volatile is to force the entireoutput to actually be \u201cconsumed\u201d as far as the compiler is concerned.Otherwise the compiler plays nasty tricks to make the program do aslittle work as possible. Another way to deal with this would be to write(2) buffer, but of course I didn\u2019t want to introduceunnecessary I/O into a benchmark.\n On Linux, SIGALRM was impressively consistent between runs, meaning itwas perfectly suitable for this benchmark. To account for any processscheduling wonkiness, the bench mark was run 8 times and only thefastest time was kept.\n The SIGALRM handler sets a  volatile global variable that tells thegenerator to stop. The PRNG call was unrolled 8 times to avoid thealarm check from significantly impacting the benchmark. You can seethe effect for yourself by changing  UNROLL to 1 (i.e. \u201cdon\u2019tunroll\u201d) in the code. Unrolling beyond 8 times had no measurableeffect to my tests.\n Due to the PRNGs being inlined, this unrolling makes the benchmarkless realistic, and it shows in the results. Using  volatile for thebuffer helped to counter this effect and reground the results. This isa fuzzy problem, and there\u2019s not really any way to avoid it, but Iwill also discuss this below.\n  To measure the statistical quality of each PRNG \u2014 mostly as a sanitycheck \u2014 the raw binary output was run through  dieharder 3.31.1:\n  This statistical analysis has no timing characteristics and theresults should be the same everywhere. You would only need to re-runit to test with a different version of dieharder, or a differentanalysis tool.\n There\u2019s not much information to glean from this part of the shootout.It mostly confirms that all of these PRNGs would work fine forsimulation purposes. The WEAK results are not very significant and isonly useful for breaking ties. Even a true RNG will get some WEAKresults. For example, the  x86 RDRAND instruction (notincluded in actual shootout) got 7 WEAK results in my tests.\n The FAIL results are more significant, but a single failure doesn\u2019tmean much. A non-failing PRNG should be preferred to an otherwiseequal PRNG with a failure.\n  Admittedly the definition for \u201c64-bit PRNG\u201d is rather vague. My highperformance targets are all 64-bit platforms, so the highest PRNGthroughput will be built on 64-bit operations ( if not wider).The original plan was to focus on PRNGs built from 64-bit operations.\n Curiosity got the best of me, so I included some PRNGs that don\u2019t use any 64-bit operations. I just wanted to see how they stacked up.\n  One of the reasons I  wrote a Blowfish implementation was toevaluate its performance and statistical qualities, so naturally Iincluded it in the benchmark. It only uses 32-bit addition and 32-bitXOR. It has a 64-bit block size, so it\u2019s naturally producing a 64-bitinteger. There are two different properties that combine to make fourvariants in the benchmark: number of rounds and block mode.\n Blowfish normally uses 16 rounds. This makes it a lot slower than anon-cryptographic PRNG but gives it a  security margin. I don\u2019t careabout the security margin, so I included a 4-round variant. Atexpected, it\u2019s about four times faster.\n The other feature I tested is the block mode:  Cipher BlockChaining (CBC) versus  Counter (CTR) mode. In CBC mode itencrypts zeros as plaintext. This just means it\u2019s encrypting its lastoutput. The ciphertext is the PRNG\u2019s output.\n In CTR mode the PRNG is encrypting a 64-bit counter. It\u2019s 11% fasterthan CBC in the 16-round variant and 23% faster in the 4-round variant.The reason is simple, and it\u2019s in part an artifact of unrolling thegeneration loop in the benchmark.\n In CBC mode, each output depends on the previous, but in CTR mode allblocks are independent. Work can begin on the next output before theprevious output is complete. The x86 architecture uses out-of-orderexecution to achieve many of its performance gains: Instructions maybe executed in a different order than they appear in the program,though their observable effects must  generally be orderedcorrectly. Breaking dependencies between instructions allowsout-of-order execution to be fully exercised. It also gives thecompiler more freedom in instruction scheduling, though the  volatileaccesses cannot be reordered with respect to each other (hence ithelping to reground the benchmark).\n Statistically, the 4-round cipher was not significantly worse than the16-round cipher. For simulation purposes the 4-round cipher would beperfectly sufficient, though xoroshiro128+ is still more than 9 timesfaster without sacrificing quality.\n On the other hand, CTR mode had a single failure in both the 4-round(dab_filltree2) and 16-round (dab_filltree) variants. At least forBlowfish, is there something that makes CTR mode less suitable than CBCmode as a PRNG?\n In the end Blowfish is too slow and too complicated to serve as asimulation PRNG. This was entirely expected, but it\u2019s interesting to seehow it stacks up.\n  Nobody ever got fired for choosing  Mersenne Twister. It\u2019s theclassical choice for simulations, and is still usually recommended tothis day. However, Mersenne Twister\u2019s best days are behind it. Itested the 64-bit variant, MT19937-64, and there are four problems:\n It\u2019s got a large state: 2,500 bytes. Versus xoroshiro128+\u2019s 16 bytes.\n Curiously my implementation is 16% faster with Clang than GCC. SinceMersenne Twister isn\u2019t seriously in the running, I didn\u2019t take time todig into why.\n   The  Permuted Congruential Generator (PCG) has some reallyinteresting history behind it, particularly with its somewhat  unusualpaper, controversial for both its excessive length (58 pages)and informal style. It\u2019s in close competition with Xorshift andxoroshiro128+. I was really interested in seeing how it stacked up.\n PCG is really just a Linear Congruential Generator (LCG) that doesn\u2019toutput the lowest bits (too poor quality), and has an extrapermutation step to make up for the LCG\u2019s other weaknesses. I includedtwo variants in my benchmark: the official PCG and a \u201csimplified\u201d PCG(sPCG) with a simple permutation step. sPCG is just the first PCGpresented in the paper (34 pages in!).\n  uint32_t spcg32 ( uint64_t  s [ 1 ]) {  uint64_t  m  =  0x9b60933458e17d7d ;  uint64_t  a  =  0xd737232eeccdf7ed ;  * s  =  * s  *  m  +  a ;  int  shift  =  29  -  ( * s  &gt;&gt;  61 );  return  * s  &gt;&gt;  shift ; }\n The third line with the modular multiplication and addition is theLCG. The bit shift is the permutation. This PCG uses the mostsignificant three bits of the result to determine which 32 bits tooutput. That\u2019s  the novel component of PCG.\n The two constants are entirely my own devising. It\u2019s two 64-bit primesgenerated using Emacs\u2019  M-x calc:  2 64 ^ k r k n k p k p k p.\n Heck, that\u2019s so simple that I could easily memorize this and code itfrom scratch on demand. Key takeaway: This is  one way that PCG issituationally better than xoroshiro128+. In a pinch I could use Emacsto generate a couple of primes and code the rest from memory. If youparticipate in coding competitions, take note.\n However, you probably also noticed PCG only generates 32-bit integersdespite using 64-bit operations. To properly generate a 64-bit valuewe\u2019d need 128-bit operations, which would need to be implemented insoftware.\n Instead, I doubled up on everything to run two PRNGs in parallel.Despite the doubling in state size, the period doesn\u2019t get any largersince the PRNGs don\u2019t interact with each other. We get something inreturn, though. Remember what I said about out-of-order execution?Except for the last step combining their results, since the two PRNGsare independent, doubling up shouldn\u2019t  quite halve the performance,particularly with the benchmark loop unrolling business.\n  uint64_t spcg64 ( uint64_t  s [ 2 ]) {  uint64_t  m  =  0x9b60933458e17d7d ;  uint64_t  a0  =  0xd737232eeccdf7ed ;  uint64_t  a1  =  0x8b260b70b8e98891 ;  uint64_t  p0  =  s [ 0 ];  uint64_t  p1  =  s [ 1 ];  s [ 0 ]  =  p0  *  m  +  a0 ;  s [ 1 ]  =  p1  *  m  +  a1 ;  int  r0  =  29  -  ( p0  &gt;&gt;  61 );  int  r1  =  29  -  ( p1  &gt;&gt;  61 );  uint64_t  high  =  p0  &gt;&gt;  r0 ;  uint32_t  low  =  p1  &gt;&gt;  r1 ;  return  ( high  &lt;&lt;  32 )  |  low ; }\n The \u201cfull\u201d PCG has some extra shifts that makes it 25% (GCC) to 50%(Clang) slower than the \u201csimplified\u201d PCG, but it does halve the WEAKresults.\n In this 64-bit form, both are significantly slower than xoroshiro128+.However, if you find yourself only needing 32 bits at a time (alwaysthrowing away the high 32 bits from a 64-bit PRNG), 32-bit PCG isfaster than using xoroshiro128+ and throwing away half its output.\n  This is another CSPRNG where I was curious how it would stack up. Itonly uses 8-bit operations, and it generates a 64-bit integer one byteat a time. It\u2019s the slowest after 16-round Blowfish and generally notuseful as a simulation PRNG.\n  xoroshiro128+ is the obvious winner in this benchmark and it seems to bethe best 64-bit simulation PRNG available. If you need a fast, qualityPRNG, just drop these 11 lines into your C or C++ program:\n uint64_t xoroshiro128plus ( uint64_t  s [ 2 ]) {  uint64_t  s0  =  s [ 0 ];  uint64_t  s1  =  s [ 1 ];  uint64_t  result  =  s0  +  s1 ;  s1  ^=  s0 ;  s [ 0 ]  =  (( s0  &lt;&lt;  55 )  |  ( s0  &gt;&gt;  9 ))  ^  s1  ^  ( s1  &lt;&lt;  14 );  s [ 1 ]  =  ( s1  &lt;&lt;  36 )  |  ( s1  &gt;&gt;  28 );  return  result ; }\n There\u2019s one important caveat:  That 16-byte state must bewell-seeded. Having lots of zero bytes will lead  terrible initialoutput until the generator mixes it all up. Having all zero bytes willcompletely break the generator. If you\u2019re going to seed from, say, theunix epoch, then XOR it with 16 static random bytes.\n  These generators are closely related and, like I said, xorshift64* waswhat I used for years. Looks like it\u2019s time to retire it.\n uint64_t xorshift64star ( uint64_t  s [ 1 ]) {  uint64_t  x  =  s [ 0 ];  x  ^=  x  &gt;&gt;  12 ;  x  ^=  x  &lt;&lt;  25 ;  x  ^=  x  &gt;&gt;  27 ;  s [ 0 ]  =  x ;  return  x  *  UINT64_C ( 0x2545f4914f6cdd1d ); }\n However, unlike both xoroshiro128+ and xorshift128+, xorshift64* willtolerate weak seeding so long as it\u2019s not literally zero. Zero will alsobreak this generator.\n If it weren\u2019t for xoroshiro128+, then xorshift128+ would have been thewinner of the benchmark and my new favorite choice.\n uint64_t xorshift128plus ( uint64_t  s [ 2 ]) {  uint64_t  x  =  s [ 0 ];  uint64_t  y  =  s [ 1 ];  s [ 0 ]  =  y ;  x  ^=  x  &lt;&lt;  23 ;  s [ 1 ]  =  x  ^  y  ^  ( x  &gt;&gt;  17 )  ^  ( y  &gt;&gt;  26 );  return  s [ 1 ]  +  y ; }\n It\u2019s a lot like xoroshiro128+, including the need to be well-seeded,but it\u2019s just slow enough to lose out. There\u2019s no reason to usexorshift128+ instead of xoroshiro128+.\n    Things can change significantly between platforms, though. Here\u2019s theshootout on a ARM Cortex-A53:\n Speed (MB/s)PRNG gcc-5.4.0 clang-3.8.0------------------------------------baseline 2560 2400blowfishcbc16 36.5 45.4blowfishcbc4 135 173blowfishctr16 36.4 45.2blowfishctr4 133 168mt64 207 254pcg64 980 712rc4 96.6 44.0spcg64 1021 948xoroshiro128+ 2560 1570xorshift128+ 2560 1520xorshift64* 1360 1080\n LLVM is not as mature on this platform, but, with GCC, bothxoroshiro128+ and xorshift128+ matched the baseline! It seems memoryis the bottleneck.\n So don\u2019t necessarily take my word for it. You can run this shootout inyour own environment \u2014 perhaps even tossing in more PRNGs \u2014 to findwhat\u2019s appropriate for your own situation.\n      Have a comment on this article? Start a discussion in my  public inbox by sending an email to   ~skeeto/public-inbox@lists.sr.ht    [ mailing list etiquette] , or see  existing discussions.", "posttime": "2020-08-08 20:56:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u62df,simulation,prng", "title": "\u5bfb\u627e\u6700\u4f73\u768464\u4f4d\u6a21\u62dfPRNG", "title_en": "Finding the Best 64-bit Simulation PRNG", "transed": 1, "url": "https://nullprogram.com/blog/2017/09/21/", "via": "", "real_tags": ["\u6a21\u62df", "prng"]}, {"category": "", "categoryclass": "", "imagename": "c78885689e35bff938824620a0414855.jpeg", "infoid": 1017000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Lsyncd-\u6587\u4ef6\u76d1\u89c6\u5668\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u8fdb\u7a0b\u6765\u540c\u6b65\u66f4\u6539(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3arsync)\u3002\nEggdrop-\u4e16\u754c\u4e0a\u6700\u6d41\u884c\u7684\u5f00\u6e90IRC\u673a\u5668\u4eba\uff0c\u4e13\u4e3a\u7075\u6d3b\u6027\u548c\u6613\u7528\u6027\u800c\u8bbe\u8ba1\u3002\nCobbler-Cobbler\u662f\u4e00\u6b3eLinux\u5b89\u88c5\u670d\u52a1\u5668\uff0c\u5141\u8bb8\u5feb\u901f\u8bbe\u7f6e\u7f51\u7edc\u5b89\u88c5\u73af\u5883\u3002\nOpenShift Origin-\u7531Red Hat\u5f00\u53d1\u7684\u4e0b\u4e00\u4ee3\u5e94\u7528\u7a0b\u5e8f\u6258\u7ba1\u5e73\u53f0OpenShift\u7684\u4e0a\u6e38\u5f00\u6e90\u3002\nForeman-Foreman\u662f\u9488\u5bf9\u7269\u7406\u548c\u865a\u62df\u670d\u52a1\u5668\u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u7ba1\u7406\u5de5\u5177\u3002\u798f\u65af\u3002\nTerraForm-Terraform\u5141\u8bb8\u60a8\u5c06\u57fa\u7840\u8bbe\u65bd\u4f5c\u4e3a\u4ee3\u7801\u8fdb\u884c\u5b9e\u8df5\uff0c\u901a\u5e38\u7528\u4e8eAWS/GCE\u3002\nBOSH-IaaS\u7f16\u6392\u5e73\u53f0\u6700\u521d\u662f\u4e3a\u90e8\u7f72\u548c\u7ba1\u7406Cloud Foundry PaaS\u800c\u7f16\u5199\u7684\uff0c\u4f46\u4e5f\u9002\u7528\u4e8e\u901a\u7528\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\nDoozerd-doozer\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u7528\u7684\u3001\u5b8c\u5168\u4e00\u81f4\u7684\u5b58\u50a8\uff0c\u7528\u4e8e\u5b58\u50a8\u5c11\u91cf\u6781\u5176\u91cd\u8981\u7684\u6570\u636e\u3002\nJuJu-\u4e91\u7f16\u6392\u5de5\u5177\uff0c\u5c06\u670d\u52a1\u4f5c\u4e3aCharms\u3001YAML\u914d\u7f6e\u548c\u90e8\u7f72\u811a\u672c\u5305\u8fdb\u884c\u7ba1\u7406\u3002\n\u9634\u4e91-\u8de8\u4e0d\u540c\u7684\u4e91\u63d0\u4f9b\u5546\u90e8\u7f72\u865a\u62df\u673a\uff0c\u5e76\u901a\u8fc7SSH\u5728\u4efb\u610f\u6216\u6240\u6709\u4e91\u63d0\u4f9b\u5546\u4e4b\u95f4\u5e76\u884c\u8fd0\u884c\u547d\u4ee4\u548c\u811a\u672c\u3002\nZooKeeper-ZooKeeper\u662f\u4e00\u4e2a\u96c6\u4e2d\u670d\u52a1\uff0c\u7528\u4e8e\u7ef4\u62a4\u914d\u7f6e\u4fe1\u606f\u3001\u547d\u540d\u3001\u63d0\u4f9b\u5206\u5e03\u5f0f\u540c\u6b65\u548c\u63d0\u4f9b\u7ec4\u670d\u52a1\u3002\nGit\u9644\u4ef6\u52a9\u624b-\u5728\u60a8\u7684\u6bcf\u53f0OSX\u548cLinux\u8ba1\u7b97\u673a\u3001Android\u8bbe\u5907\u3001\u53ef\u79fb\u52a8\u9a71\u52a8\u5668\u3001NAS\u8bbe\u5907\u548c\u4e91\u670d\u52a1\u4e0a\u90fd\u6709\u4e00\u4e2a\u540c\u6b65\u6587\u4ef6\u5939\u3002\nOwnCloud-\u901a\u8fc7Web\u3001\u60a8\u7684\u8ba1\u7b97\u673a\u6216\u79fb\u52a8\u8bbe\u5907\u63d0\u4f9b\u5bf9\u60a8\u7684\u6587\u4ef6\u7684\u901a\u7528\u8bbf\u95ee\u3002\nSparkleShare-\u63d0\u4f9b\u4e91\u5b58\u50a8\u548c\u6587\u4ef6\u540c\u6b65\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f7f\u7528Git\u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\u3002\nGERRIT-\u57fa\u4e8eGit\u7248\u672c\u63a7\u5236\uff0c\u5b83\u4fbf\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5ba1\u67e5\u5bf9\u6e90\u4ee3\u7801\u7684\u4fee\u6539\uff0c\u5e76\u6279\u51c6\u6216\u62d2\u7edd\u8fd9\u4e9b\u4fee\u6539\u3002\nPhabricator-\u7531Facebook\u6784\u5efa\u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177\uff0c\u7531Wikimedia\u3001FB\u3001Dropbox\u7b49\u4f7f\u7528\u3002\u5e26\u6709\u96c6\u6210\u7684wiki\u3001bug\u8ddf\u8e2a\u5668\u3001VC\u96c6\u6210\u548c\u540d\u4e3aArcanist\u7684CLI\u5de5\u5177\u3002\nCitadel/UX-\u6e90\u81eaCitadel\u7cfb\u5217\u7a0b\u5e8f\u7684\u534f\u4f5c\u5957\u4ef6(\u6d88\u606f\u4f20\u9012\u548c\u7fa4\u4ef6)\u3002\nHorde\u7fa4\u4ef6-\u57fa\u4e8ePHP\u7684\u534f\u4f5c\u8f6f\u4ef6\u5957\u4ef6\uff0c\u5305\u62ec\u7535\u5b50\u90ae\u4ef6\u3001\u65e5\u5386\u3001\u7ef4\u57fa\u3001\u65f6\u95f4\u8ddf\u8e2a\u548c\u6587\u4ef6\u7ba1\u7406\u3002\nClusto-\u5e2e\u52a9\u60a8\u8ddf\u8e2a\u5e93\u5b58\u3001\u4f4d\u7f6e\u3001\u8fde\u63a5\u65b9\u5f0f\uff0c\u5e76\u63d0\u4f9b\u7528\u4e8e\u4e0e\u57fa\u7840\u67b6\u6784\u5143\u7d20\u4ea4\u4e92\u7684\u62bd\u8c61\u754c\u9762\u3002\nRalph-\u9002\u7528\u4e8e\u5927\u578b\u6570\u636e\u4e2d\u5fc3\u548c\u5c0f\u578bLAN\u7f51\u7edc\u7684\u8d44\u4ea7\u7ba1\u7406\u3001DCIM\u548cCMDB\u7cfb\u7edf\u3002\n\u6728\u5076-\u5b83\u662f\u7528Ruby\u7f16\u5199\u7684\uff0c\u4f7f\u7528Puppet\u7684\u58f0\u660e\u6027\u8bed\u8a00\u6216Ruby DSL\u3002\nGitLab CI-\u57fa\u4e8eRuby\u3002\u4ed6\u4eec\u8fd8\u63d0\u4f9b\u7ba1\u7406git\u5b58\u50a8\u5e93\u7684GitLab\u3002\nCapstrano-\u901a\u8fc7SSH(\u57fa\u4e8eRAKE)\u5c06\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u3001\u987a\u5e8f\u6216\u4f5c\u4e3a\u6eda\u52a8\u96c6\u90e8\u7f72\u5230\u4efb\u610f\u6570\u91cf\u7684\u673a\u5668\u4e0a\u3002\nFabric-Python\u5e93\u548cCLI\u5de5\u5177\uff0c\u7528\u4e8e\u7b80\u5316SSH\u5728\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u6216\u7cfb\u7edf\u7ba1\u7406\u4efb\u52a1\u4e2d\u7684\u4f7f\u7528\u3002\nDrathe.net-\u4ece\u63cf\u8ff0\u5e03\u5c40\u3001\u5e03\u5c40\u548c\u56fe\u6807\u7684\u6587\u672c\u6587\u4ef6\u52a8\u6001\u7ed8\u5236\u7f51\u7edc\u56fe\u3002\nLustre-\u4e00\u79cd\u5e76\u884c\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u5e38\u7528\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4\u8ba1\u7b97\u3002\nPowerDNS-\u5177\u6709\u5404\u79cd\u6570\u636e\u5b58\u50a8\u540e\u7aef\u548c\u8d1f\u8f7d\u5e73\u8861\u529f\u80fd\u7684DNS\u670d\u52a1\u5668\u3002\n\u652f\u6301IntellijIDEA\u7684\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684IDE\uff0c\u7528Java\u7f16\u5199\uff0c\u5b83\u6709\u5f88\u591a\u63d2\u4ef6\u3002\n\u673a\u67b6\u8868-\u6570\u636e\u4e2d\u5fc3\u548c\u670d\u52a1\u5668\u673a\u623f\u8d44\u4ea7\u7ba1\u7406\uff0c\u5982\u6587\u6863\u786c\u4ef6\u8d44\u4ea7\u3001\u7f51\u7edc\u5730\u5740\u3001\u673a\u67b6\u7a7a\u95f4\u3001\u7f51\u7edc\u914d\u7f6e\u3002\nRalph-\u9002\u7528\u4e8e\u5927\u578b\u6570\u636e\u4e2d\u5fc3\u548c\u5c0f\u578bLAN\u7f51\u7edc\u7684\u8d44\u4ea7\u7ba1\u7406\u3001DCIM\u548cCMDB\u7cfb\u7edf\u3002\n\u878d\u5408\u76ee\u5f55-\u57fa\u4e8eOpenLDAP\u6539\u8fdb\u670d\u52a1\u548c\u516c\u53f8\u76ee\u5f55\u7684\u7ba1\u7406\u3002\nElasticSearch-\u57fa\u4e8eLucene\u7684\u6587\u6863\u5b58\u50a8\uff0c\u4e3b\u8981\u7528\u4e8e\u65e5\u5fd7\u7d22\u5f15\u3001\u5b58\u50a8\u548c\u5206\u6790\u3002\nCyrus IMAP/POP3-\u8ba1\u5212\u5728\u5bc6\u5c01\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\uff0c\u666e\u901a\u7528\u6237\u4e0d\u5141\u8bb8\u767b\u5f55\u3002\nMailCatcher-Ruby gem\uff0c\u5b83\u90e8\u7f72\u4e86\u4e00\u4e2a\u7b80\u5355\u7684SMTP MTA\u7f51\u5173\uff0c\u53ef\u4ee5\u63a5\u53d7\u6240\u6709\u90ae\u4ef6\u5e76\u663e\u793a\u5728Web\u754c\u9762\u4e0a\u3002\u5bf9\u8c03\u8bd5\u6216\u5f00\u53d1\u5f88\u6709\u7528\u3002\nMail-in-a-Box-\u501f\u52a9\u8fd9\u6b3e\u6613\u4e8e\u90e8\u7f72\u7684\u76d2\u88c5\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u91cd\u65b0\u63a7\u5236\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u3002\nNaemon-\u57fa\u4e8eNagios4\u5185\u6838\u7684\u7f51\u7edc\u76d1\u63a7\u5de5\u5177\uff0c\u5177\u6709\u6027\u80fd\u589e\u5f3a\u548c\u65b0\u529f\u80fd\u3002\nOpsview-\u57fa\u4e8eNagios 4\u7684Opsview Core\u975e\u5e38\u9002\u5408\u5c0f\u578bIT\u548c\u6d4b\u8bd5\u73af\u5883\u3002\nDash-\u4e0d\u518d\u7ef4\u62a4-Ruby gem\uff0c\u5141\u8bb8\u5feb\u901f\u5f00\u53d1\u7edf\u8ba1\u4eea\u8868\u677f\u3002\u5168HTML5\u65b9\u6cd5\u5141\u8bb8\u5728\u6570\u636e\u4e2d\u5fc3\u6216\u4f1a\u8bae\u5ba4\u8fdb\u884c\u5927\u5c4f\u5e55\u663e\u793a\u3002\nSmsing-Ruby\u5b9d\u77f3\uff0c\u652f\u6301\u5feb\u901f\u7edf\u8ba1\u4eea\u8868\u677f\u5f00\u53d1\u3002\u5168HTML5\u65b9\u6cd5\u5141\u8bb8\u5728\u6570\u636e\u4e2d\u5fc3\u6216\u4f1a\u8bae\u5ba4\u8fdb\u884c\u5927\u5c4f\u5e55\u663e\u793a\u3002\u51b2\u950b\u9677\u9635\u7684\u53c9\u5b50\u3002\nGanglia-\u57fa\u4e8eRRD\u7684\u9ad8\u6027\u80fd\u3001\u53ef\u6269\u5c55\u7684\u670d\u52a1\u5668\u7f51\u683c\u548c/\u6216\u7fa4\u96c6\u76d1\u63a7\u3002\u4f7f\u7528\u5355\u4e00\u6536\u96c6\u8fc7\u7a0b\u4e0e\u77f3\u58a8\u517c\u5bb9\u3002\nPacketBeat-\u6355\u83b7\u7f51\u7edc\u6d41\u91cf\u5e76\u5c06\u5176\u663e\u793a\u5728\u81ea\u5b9a\u4e49Kibana\u4eea\u8868\u677f\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u770b\u3002\nRRDtool-\u5f00\u6e90\u884c\u4e1a\u6807\u51c6\uff0c\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u9ad8\u6027\u80fd\u6570\u636e\u8bb0\u5f55\u548c\u7ed8\u56fe\u7cfb\u7edf\u3002\nNOC\u9879\u76ee-\u9762\u5411ISP\u3001\u670d\u52a1\u548c\u5185\u5bb9\u63d0\u4f9b\u5546\u7684\u53ef\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u548c\u5f00\u6e90\u7684OSS\u7cfb\u7edf\u3002\nOXIZED-\u901a\u8fc7Web\u754c\u9762\u548cGIT\u5b58\u50a8\u5b9e\u73b0\u7f51\u7edc\u8bbe\u5907\u914d\u7f6e\u76d1\u63a7\u7684\u73b0\u4ee3\u65b9\u5f0f\u3002\n\u57fa\u4e8eHypertable-C++\u7684\u7c7b\u4f3c\u4e8eBigtable\u7684DBMS\uff0c\u901a\u8fc7Thrift\u8fdb\u884c\u901a\u4fe1\uff0c\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf(\u5982Hadoop)\u4e0a\u8fd0\u884c\u3002\nActiveMQ-\u4e00\u4e2a\u7528Java\u7f16\u5199\u7684\u5f00\u6e90\u6d88\u606f\u4ee3\u7406\uff0c\u5e26\u6709\u5b8c\u6574\u7684JMS\u5ba2\u6237\u7aef\u3002\nGalera-Galera Cluster for MySQL\u662f\u4e00\u6b3e\u6613\u4e8e\u4f7f\u7528\u7684\u9ad8\u53ef\u7528\u6027\u89e3\u51b3\u65b9\u6848\uff0c\u5177\u6709\u9ad8\u7cfb\u7edf\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u3001\u65e0\u6570\u636e\u4e22\u5931\u548c\u672a\u6765\u589e\u957f\u7684\u53ef\u6269\u5c55\u6027\u3002\nBlackbox-\u5b89\u5168\u5730\u5c06\u79d8\u5bc6\u5b58\u50a8\u5728Git/Mercurial\u4e2d\u3002\u63d0\u4f9b\u81ea\u52a8\u52a0\u5bc6\u5bc6\u7801\u7b49\u673a\u5bc6\u7684\u5de5\u5177\u3002\nKippo-\u4e00\u4e2a\u4e2d\u7b49\u4ea4\u4e92\u7684SSH\u871c\u7f50\uff0c\u4e3b\u8981\u7528\u4f5c\u5177\u6709\u53ef\u914d\u7f6e\u6587\u4ef6\u7cfb\u7edf\u6c99\u7bb1\u7684\u72ec\u7acbSSH\u5b88\u62a4\u8fdb\u7a0b\u3002\nOSSEC-OSSEC\u662f\u4e00\u4e2aHIDS\uff0c\u53ef\u4ee5\u6267\u884c\u65e5\u5fd7\u5206\u6790\u3001FIM\u3001rootkit\u68c0\u6d4b\u7b49\u3002\nSnort-Snort\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u6e90\u7f51\u7edc\u5165\u4fb5\u9632\u5fa1\u7cfb\u7edf(NIPS)\u548c\u7f51\u7edc\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf(NIDS)\uff0c\u7531Martin Roesch\u4e8e1998\u5e74\u521b\u5efa\u3002\nSpamAssassin-\u91c7\u7528\u591a\u79cd\u68c0\u6d4b\u6280\u672f\u7684\u529f\u80fd\u5f3a\u5927\u4e14\u5e7f\u53d7\u6b22\u8fce\u7684\u7535\u5b50\u90ae\u4ef6\u8fc7\u6ee4\u5668\u3002\nBounCA-BounCA\u662f\u4e00\u79cd\u4e2a\u4ebaSSL/\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u5bc6\u94a5\u7ba1\u7406\u5de5\u5177\u3002\u901a\u8fc7\u6d4f\u89c8\u5668\u521b\u5efa\u81ea\u7b7e\u540dSSL\u8bc1\u4e66\u3002(\u6e90\u4ee3\u7801)Apache Python\u3002\nDoozerd-Doozer\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u7528\u7684\u3001\u5b8c\u5168\u4e00\u81f4\u7684\u5b58\u50a8\uff0c\u7528\u4e8e\u5b58\u50a8\u5c11\u91cf\u6781\u5176\u91cd\u8981\u7684\u6570\u636e\u3002\nZooKeeper-ZooKeeper\u662f\u4e00\u4e2a\u96c6\u4e2d\u670d\u52a1\uff0c\u7528\u4e8e\u7ef4\u62a4\u914d\u7f6e\u4fe1\u606f\u3001\u547d\u540d\u3001\u63d0\u4f9b\u5206\u5e03\u5f0f\u540c\u6b65\u548c\u63d0\u4f9b\u7ec4\u670d\u52a1\u3002\nBitnami-\u4e3aWeb\u5e94\u7528\u7a0b\u5e8f\u3001\u5f00\u53d1\u5806\u6808\u4ee5\u53ca\u865a\u62df\u8bbe\u5907\u751f\u4ea7\u5f00\u6e90\u5b89\u88c5\u7a0b\u5e8f\u6216\u8f6f\u4ef6\u5305\u3002\nDocker-\u4f9b\u5f00\u53d1\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u6784\u5efa\u3001\u53d1\u5e03\u548c\u8fd0\u884c\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u653e\u5e73\u53f0\u3002\nDSH-Dancer\u7684shell/\u5206\u5e03\u5f0fshell\u5305\u88c5\u7a0b\u5e8f\uff0c\u7528\u4e8e\u4ece\u4e00\u4e2a\u547d\u4ee4\u884c\u6267\u884c\u591a\u4e2a\u8fdc\u7a0bshell\u547d\u4ee4\u3002\nSSH Power Tool-\u65e0\u9700\u4f7f\u7528\u9884\u5171\u4eab\u5bc6\u94a5\u5373\u53ef\u540c\u65f6\u6267\u884c\u547d\u4ee4\u5e76\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u591a\u4e2a\u670d\u52a1\u5668\u3002\n\u6253\u5f00Web Analytics-\u4f7f\u7528JS\u3001PHP\u6216REST API\u5c06Web\u5206\u6790\u6dfb\u52a0\u5230\u7f51\u7ad9\u3002\nBugzilla-\u6700\u521d\u7531Mozilla\u9879\u76ee\u5f00\u53d1\u548c\u4f7f\u7528\u7684\u901a\u7528\u9519\u8bef\u8ddf\u8e2a\u5668\u548c\u6d4b\u8bd5\u5de5\u5177\u3002\nOTRS-\u6545\u969c\u7968\u8bc1\u7cfb\u7edf\uff0c\u7528\u4e8e\u5411\u4f20\u5165\u67e5\u8be2\u5206\u914d\u7968\u8bc1\u5e76\u8ddf\u8e2a\u8fdb\u4e00\u6b65\u7684\u901a\u4fe1\u3002\nMitmproxy-\u4e00\u79cd\u7528\u4e8e\u62e6\u622a\u3001\u67e5\u770b\u548c\u4fee\u6539\u7f51\u7edc\u6d41\u91cf\u7684Python\u5de5\u5177\u3002\u5728\u89e3\u51b3\u67d0\u4e9b\u95ee\u9898\u65b9\u9762\u5177\u6709\u65e0\u53ef\u4f30\u91cf\u7684\u4ef7\u503c\u3002\nSysdigg-\u4ece\u6b63\u5728\u8fd0\u884c\u7684Linux\u5b9e\u4f8b\u6355\u83b7\u7cfb\u7edf\u72b6\u6001\u548c\u6d3b\u52a8\uff0c\u7136\u540e\u4fdd\u5b58\u3001\u8fc7\u6ee4\u548c\u5206\u6790\u3002\nTAIGA-\u57fa\u4e8e\u770b\u677f\u548cScrum\u65b9\u6cd5\u7684\u654f\u6377\u3001\u514d\u8d39\u3001\u5f00\u6e90\u7684\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002\nGit-\u5f3a\u8c03\u901f\u5ea6\u7684\u5206\u5e03\u5f0f\u4fee\u8ba2\u63a7\u5236\u548c\u6e90\u4ee3\u7801\u7ba1\u7406(SCM)\u3002\nGaneti-\u57fa\u4e8eKVM\u548cXen\u6784\u5efa\u7684\u7fa4\u96c6\u865a\u62df\u670d\u52a1\u5668\u7ba1\u7406\u8f6f\u4ef6\u5de5\u5177\u3002\n\u6253\u5305\u7a0b\u5e8f-\u7528\u4e8e\u4ece\u5355\u4e2a\u6e90\u914d\u7f6e\u4e3a\u591a\u4e2a\u5e73\u53f0\u521b\u5efa\u76f8\u540c\u673a\u5668\u6620\u50cf\u7684\u5de5\u5177\u3002\nXEN-\u9002\u7528\u4e8e32/64\u4f4d\u82f1\u7279\u5c14/AMD(IA 64)\u548cPowerPC 970\u4f53\u7cfb\u7ed3\u6784\u7684\u865a\u62df\u673a\u76d1\u89c6\u5668\u3002\nUWSGI-uWSGI\u9879\u76ee\u65e8\u5728\u5f00\u53d1\u7528\u4e8e\u6784\u5efa\u6258\u7ba1\u670d\u52a1\u7684\u5b8c\u6574\u5806\u6808\u3002\nHAProxy-\u57fa\u4e8e\u8f6f\u4ef6\u7684\u8d1f\u8f7d\u5e73\u8861\u3001SSL\u5378\u8f7d\u548c\u6027\u80fd\u4f18\u5316\u3001\u538b\u7f29\u548c\u5e38\u89c4Web\u8def\u7531\u3002\nTraefik-Tr\u00e6f HTTPk\u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\u026a\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u65e8\u5728\u8f7b\u677e\u90e8\u7f72\u5fae\u670d\u52a1\u3002\nMoinMoin-\u4e00\u4e2a\u9ad8\u7ea7\u7684\u3001\u6613\u4e8e\u4f7f\u7528\u7684\u3001\u53ef\u6269\u5c55\u7684WikiEngine\uff0c\u62e5\u6709\u4e00\u4e2a\u5e9e\u5927\u7684\u7528\u6237\u793e\u533a\u3002\n[\u901a\u8fc7\u4e00\u4e2a\u6708\u7684\u5348\u9910\u5b66\u4e60\u601d\u79d1\u7f51\u7edc\u7ba1\u7406](https://www.manning.com/books/learn-cisco-network-administration-in-a-month-of-lunches)-\u4e13\u4e3a\u9700\u8981\u5b66\u4e60\u5982\u4f55\u7ba1\u7406\u601d\u79d1\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u7cfb\u7edf\u7ba1\u7406\u5458\u8bbe\u8ba1\u7684\u6559\u7a0b\u3002\nLinux\u547d\u4ee4\u884c-William Shotts\u7684\u4e00\u672c\u5173\u4e8eLinux\u547d\u4ee4\u884c\u7684\u4e66\u3002\nThe Phoenix Project\uff1a\u4e00\u672c\u5173\u4e8eIT\u3001DevOps\u548c\u5e2e\u52a9\u60a8\u7684\u4e1a\u52a1\u53d6\u80dc\u7684\u5c0f\u8bf4-DevOps\u6280\u672f\u5982\u4f55\u89e3\u51b3IT\u7ec4\u7ec7\u4e2d\u53d1\u751f\u7684\u95ee\u9898\u3002\n\u7cfb\u7edf\u548c\u7f51\u7edc\u7ba1\u7406\u5b9e\u8df5-\u7b2c\u4e00\u7248\u548c\u7b2c\u4e8c\u7248\u4ecb\u7ecd\u4e86\u72ec\u7acb\u4e8e\u7279\u5b9a\u5e73\u53f0\u6216\u6280\u672f\u7684\u7cfb\u7edf\u548c\u7f51\u7edc\u7ba1\u7406\u6700\u4f73\u5b9e\u8df5\u3002\n\u53ef\u89c6\u5316\u64cd\u4f5c\u624b\u518c\uff1a\u57284\u4e2a\u5b9e\u9645\u548c\u53ef\u5ba1\u6838\u7684\u6b65\u9aa4\u4e2d\u5b9e\u65bdITIL-\u662f\u4e00\u79cd\u65e8\u5728\u5feb\u901f\u5b9e\u65bd\u63a7\u5236\u548c\u8fc7\u7a0b\u6539\u8fdb\u7684\u65b9\u6cd5\u8bba\u3002\n\u4fdd\u62a4DevOps-\u4e00\u672c\u5173\u4e8eDevOps\u5b89\u5168\u6280\u672f\u7684\u4e66\uff0c\u5b83\u56de\u987e\u4e86\u5728\u4fdd\u62a4Web\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u57fa\u7840\u8bbe\u65bd\u65f6\u4f7f\u7528\u7684\u6700\u5148\u8fdb\u7684\u5b9e\u8df5\u3002\n\u9ed1\u5ba2\u670d\u52a1\u5668-\u9762\u5411\u9700\u8981\u4e86\u89e3\u670d\u52a1\u5668\u7684\u7a0b\u5e8f\u5458\u7684\u65f6\u4e8b\u901a\u8baf\u3002\nDevOpsLinks-\u4e00\u4e2a\u7531DevOps\u3001sysadmin\u548camp\uff1b\u5f00\u53d1\u4eba\u5458\u7ec4\u6210\u7684\u793e\u533a\uff0c\u63d0\u4f9b\u6bcf\u5468\u65f6\u4e8b\u901a\u8baf\u548c\u56e2\u961f\u804a\u5929\u3002\n\u8f6f\u4ef6\u96c6\u5408-Red Hat\u8f6f\u4ef6\u96c6\u5408\u7684\u793e\u533a\u7248\u672c\u3002\u63d0\u4f9b\u7528\u4e8eCentOS/Science Linux 6.x\u7684Ruby\u3001Python\u7b49\u66f4\u65b0\u5305\u3002\n\u8fd0\u8425\u5b66\u9662-\u5168\u9762\u7684\u8bfe\u7a0b\uff0c\u5c06\u5e2e\u52a9\u60a8\u5b66\u4e60\u6210\u4e3a\u4e00\u540d\u8fd0\u8425\u5de5\u7a0b\u5e08\u3002\n\u6570\u5b57\u6d77\u6d0b\u6559\u7a0b(Digital Ocean Tutorials)--\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e9e\u5927\u7684\u8d44\u6e90\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4e86\u89e3\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3001\u5de5\u5177\u751a\u81f3\u7cfb\u7edf\u7ba1\u7406\u4e3b\u9898\u7684\u57fa\u7840\u77e5\u8bc6\u3002", "note_en": "Lsyncd - File Monitor which spawns a process to synchronize the changes (rsync by default).\n        Eggdrop - The world&#39;s most popular Open Source IRC bot, designed for flexibility and ease of use.\n     Cobbler - Cobbler is a Linux installation server that allows for rapid setup of network installation environments.\n    Openshift Origin - Open source upstream of OpenShift, the next generation application hosting platform developed by Red Hat.\n  The Foreman - Foreman is a complete lifecycle management tool for physical and virtual servers. FOSS.\n  Terraform - Terraform allows you to practice infrastructure as code and is commonly used for AWS/GCE.\n  BOSH - IaaS orchestration platform originally written for deploying and managing Cloud Foundry PaaS, but also useful for general purpose distributed systems.\n    doozerd - Doozer is a highly-available, completely consistent store for small amounts of extremely important data.\n  Juju - Cloud orchestration tool which manages services as charms, YAML configuration and deployment script bundles.\n  Overcast - Deploy VMs across different cloud providers, and run commands and scripts across any or all of them in parallel via SSH.\n     zookeeper - ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.\n  git-annex assistant - A synchronised folder on each of your OSX and Linux computers, Android devices, removable drives, NAS appliances, and cloud services.\n  ownCloud - Provides universal access to your files via the web, your computer or your mobile devices.\n  SparkleShare - Provides cloud storage and file synchronization services. By default, it uses Git as a storage backend.\n   Gerrit - Based on the Git version control, it facilitates software developers to review modifications to the source code and approve or reject those changes.\n Phabricator - Code review tool build by facebook and used by WikiMedia, FB, dropbox etc. Comes with an integrated wiki, bug tracker, VC integration and a CLI tool called arcanist.\n   Citadel/UX - Collaboration suite (messaging and groupware) that is descended from the Citadel family of programs.\n  Horde Groupware - PHP based collaborative software suite that includes email, calendars, wikis, time tracking and file management.\n   Clusto - Helps you keep track of your inventory, where it is, how it&#39;s connected, and provides an abstracted interface for interacting with the elements of the infrastructure.\n    Ralph - Asset management, DCIM and CMDB system for large Data Centers as well as smaller LAN networks.\n   Puppet - It&#39;s written in Ruby and uses Puppet&#39;s declarative language or a Ruby DSL.\n   GitLab CI - Based off of ruby. They also provide GitLab, which manages git repositories.\n      Capistrano - Deploy your application to any number of machines simultaneously, in sequence or as a rolling set via SSH (rake based).\n Fabric - Python library and cli tool for streamlining the use of SSH for application deployment or systems administration tasks.\n   drawthe.net - Draws network diagrams dynamically from a text file describing the placement, layout and icons.\n   Lustre - A type of parallel distributed file system, generally used for large-scale cluster computing.\n   PowerDNS - DNS server with a variety of data storage back-ends and load balancing features.\n   IntellijIDEA - Capable and ergonomic IDE, written in Java, It has a lot of plug-ins.\n   RackTables - Datacenter and server room asset management like document hardware assets, network addresses, space in racks, networks configuration.\n Ralph - Asset management, DCIM and CMDB system for large Data Centers as well as smaller LAN networks.\n   Fusion Directory - Improve the Management of the services and the company directory based on OpenLDAP.\n     Elasticsearch - A Lucene Based Document store mainly used for log indexing, storage and analysis.\n   Cyrus IMAP/POP3 - Intended to be run on sealed servers, where normal users are not permitted to log in.\n  MailCatcher - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development.\n  Mail-in-a-Box - Take back control of your email with this easy-to-deploy mail server in a box.\n          Naemon - Network monitoring tool based on the Nagios 4 core with performance enhancements and new features.\n    Opsview - Based on Nagios 4, Opsview Core is ideal for small IT and test environments.\n       dashing -  No Longer Maintained - Ruby gem that allows for rapid statistical dashboard development. An all HTML5 approach allows for big screen displays in data centers or conference rooms.\n Smashing - Ruby gem that allows for rapid statistical dashboard development. An all HTML5 approach allows for big screen displays in data centers or conference rooms. Fork of Dashing.\n    Ganglia - High performance, scalable RRD based monitoring for grids and/or clusters of servers. Compatible with Graphite using a single collection process.\n       Packetbeat - Captures network traffic and displays it in a custom Kibana dashboard for easy viewing.\n  RRDtool - Open source industry standard, high performance data logging and graphing system for time series data.\n   NOC Project - Scalable, high-performance and open-source  OSS system for ISP, service and content providers.\n  Oxidized - A modern take on network device configuration monitoring with web interface and GIT storage.\n      Hypertable - C++ based BigTable-like DBMS, communicates through Thrift and runs either as stand-alone or on distributed FS such as Hadoop.\n           ActiveMQ - An open source message broker written in Java together with a full JMS client.\n     Galera - Galera Cluster for MySQL is an easy-to-use high-availability solution with high system up-time, no data loss, and scalability for future growth.\n   Blackbox - Safely store secrets in Git/Mercurial. Provides tooling to automatically encrypt secrets like passwords.\n     Kippo - A medium-interaction SSH honeypot, mostly used as a standalone SSH daemon with a configurable Filesystem sandbox.\n OSSEC - OSSEC is a HIDS that performs log analysis, FIM, rootkit detection, and much more.\n   Snort - Snort is a free and open source network intrusion prevention system (NIPS) and network intrusion detection system (NIDS) created by Martin Roesch in 1998.\n SpamAssassin - A powerful and popular email spam filter employing a variety of detection technique.\n BounCA - BounCA is a personal SSL / Certificate Authority Key management tool. Create self-signed SSL certificates via your browser. ( Source Code)  Apache  Python\n  Doozerd - Doozer is a highly-available, completely consistent store for small amounts of extremely important data.\n ZooKeeper - ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.\n   Bitnami - Produces open source installers or software packages for web applications and development stacks as well as virtual appliances.\n Docker - Open platform for developers and sysadmins to build, ship, and run distributed applications.\n   DSH - Dancer&#39;s shell / distributed shell - Wrapper for executing multiple remote shell commands from one command line.\n    SSH Power Tool - Execute commands and upload files to many servers simultaneously without using pre-shared keys.\n   Open Web Analytics - Add web analytics to websites using JS, PHP or REST APIs.\n     Bugzilla - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project.\n     OTRS - Trouble ticket system for assigning tickets to incoming queries and tracking further communications.\n   mitmproxy - A Python tool used for intercepting, viewing and modifying network traffic. Invaluable in troubleshooting certain problems.\n Sysdig - Capture system state and activity from a running Linux instance, then save, filter and analyze.\n     Taiga - Agile, Free, Open Source Project Management Tool based on the Kanban and Scrum methods.\n   Git - Distributed revision control and source code management (SCM) with an emphasis on speed.\n   Ganeti - Cluster virtual server management software tool built on top of KVM and Xen.\n    Packer - A tool for creating identical machine images for multiple platforms from a single source configuration.\n     Xen - Virtual machine monitor for 32/64 bit Intel / AMD (IA 64) and PowerPC 970 architectures.\n      uWSGI - The uWSGI project aims at developing a full stack for building hosting services.\n  HAProxy - Software based load Balancing, SSL offloading and performance optimization, compression, and general web routing.\n  Traefik - Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease.\n      MoinMoin - An advanced, easy to use and extensible WikiEngine with a large community of users.\n       [Learn Cisco Network Administration in a Month of Lunches] ( https://www.manning.com/books/learn-cisco-network-administration-in-a-month-of-lunches) - A tutorial designed for sysadmins who need to learn how to administer Cisco switches and routers.\n The Linux Command Line - A book about the Linux command line by William Shotts.\n The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win - How DevOps techniques can fix the problems that happen in IT organizations.\n The Practice of System and Network Administration - The first and second editions describes the best practices of system and network administration, independent of specific platforms or technologies.\n The Visible Ops Handbook: Implementing ITIL in 4 Practical and Auditable Steps - Is a methodology designed to jumpstart implementation of controls and process improvement.\n  Securing DevOps - A book on Security techniques for DevOps that reviews state of the art practices used in securing web applications and their infrastructure.\n  Servers for Hackers - Newsletter for programmers who find themselves needing to know their way around a server.\n DevOpsLinks - A community of DevOps, SysAdmin &amp; Developers with a weekly newsletter and a team chat.\n     Software Collections - Community Release of  Red Hat Software Collections. Provides updated packages of Ruby, Python, etc. for CentOS/Scientific Linux 6.x.\n   Ops School - Comprehensive program that will help you learn to be an operations engineer.\n Digital Ocean Tutorials - A surprisingly vast resource for getting the basics of certain applications, tools, or even systems administration topics.", "posttime": "2020-08-08 20:54:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,sysadmin,\u7528\u4e8e", "title": "Awawed-sysadmin\uff1a\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u5f00\u6e90sysadmin\u8d44\u6e90\u7684\u7cbe\u9009\u5217\u8868", "title_en": "Awesome-sysadmin: A curated list of amazingly open source sysadmin resources", "transed": 1, "url": "https://github.com/kahun/awesome-sysadmin", "via": "", "real_tags": ["\u5f00\u6e90", "sysadmin", "\u7528\u4e8e"]}, {"category": "", "categoryclass": "", "imagename": "3ae966b4a205b392744b0bfc8b5d7cef.jpg", "infoid": 1016999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6cd5\u533b\u5206\u6790\u8868\u660e\uff0c\u6700\u8fd1\u7684\u4ee5\u592a\u7ecf\u5178\u533a\u5757\u94fe\u91cd\u7ec4\u662f\u4e00\u6b21\u7cbe\u5fc3\u7b56\u5212\u7684\u6076\u610f\u653b\u51fb\u3002\n\u6700\u8fd1\u4e00\u6b21\u5f71\u54cdEtherum Classic(ETC)\u768451%\u7684\u653b\u51fb\u88ab\u8ba4\u4e3a\u5bfc\u81f4\u4ef7\u503c\u7ea6560\u4e07\u7f8e\u5143\u7684\u52a0\u5bc6\u8d27\u5e01\u88ab\u91cd\u590d\u82b1\u8d39\u3002\n8\u67085\u65e5\uff0c\u533a\u5757\u94fe\u53d6\u8bc1\u516c\u53f8Bitquery\u7684Aleksey Studnev\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u62ab\u9732\u4e86\u4e8b\u4ef6\u7684\u8303\u56f4\uff0cBitquery\u4f30\u8ba1\u653b\u51fb\u8005\u5e26\u8d70\u4e86807260\u7b49\u3002\n\u62a5\u544a\u4f30\u8ba1\uff0c\u8fd9\u540d\u9ed1\u5ba2\u7684\u52aa\u529b\u83b7\u5f97\u4e86\u8d85\u8fc72800%\u7684\u56de\u62a5\uff0c\u4ed6\u82b1\u8d39\u4e86\u5927\u7ea617.5\u4e2a\u6bd4\u7279\u5e01(BTC)\uff0c\u4ef7\u503c19.2\u4e07\u7f8e\u5143\uff0c\u4eceNicehash\u90a3\u91cc\u79df\u7528\u4e86\u6563\u5217\u80fd\u529b\u6765\u6267\u884c\u653b\u51fb\u3002\n\u8fd9\u4efd\u62a5\u544a\u4e0e\u6700\u521d\u7684\u7406\u8bba\u76f8\u77db\u76fe\uff0c\u8fd9\u4e9b\u7406\u8bba\u8ba4\u4e3a\u533a\u5757\u94fe\u91cd\u7ec4\u53ef\u80fd\u4e0d\u662f\u6545\u610f\u7684\u3002\n\u653b\u51fb\u53d1\u751f\u57287\u670831\u65e5\u81f38\u67081\u65e5\u4e4b\u95f4\uff0c\u7136\u800c\uff0c\u7531\u4e8e\u590d\u6742\u7684\u89c4\u5212\u548c\u5bf9\u4ee5\u592a\u7ecf\u5178\u534f\u8bae\u7684\u4e86\u89e3\uff0c\u6709\u51e0\u5929\u6ca1\u6709\u68c0\u6d4b\u5230\u653b\u51fb\u3002\u9ed1\u5ba2\u901a\u8fc7\u4ece\u5176\u63a7\u5236\u7684\u5151\u6362\u94b1\u5305\u4e2d\u8f6c\u79fbETC\uff0c\u7136\u540e\u518d\u5c06\u5176\u8f6c\u56de\u6765\uff0c\u4ece\u800c\u5f00\u59cb\u4e86\u653b\u51fb\u3002\n\u5728\u4eceNicehash\u63d0\u4f9b\u5546\u201cdaggerhashimoto\u201d\u90a3\u91cc\u79df\u7528\u6563\u5217\u80fd\u529b\u4ee5\u83b7\u5f97\u5bf9Etherum Classic\u7684\u5927\u90e8\u5206\u6563\u5217\u80fd\u529b\u7684\u63a7\u5236\u6743\u540e\uff0c\u653b\u51fb\u8005\u80fd\u591f\u5728\u56db\u5929\u5185\u6316\u63984280\u4e2a\u533a\u5757\u3002\u7136\u540e\uff0c\u653b\u51fb\u8005\u521b\u5efa\u79c1\u4eba\u4e8b\u52a1\uff0c\u5c06ETC\u53d1\u9001\u5230\u5176\u63a7\u5236\u4e0b\u7684\u94b1\u5305\uff0c\u7136\u540e\u5c06\u5305\u542b\u8f6c\u8d26\u7684\u5757\u5e7f\u64ad\u5230\u4ed6\u4eec\u7684\u94b1\u5305\uff0c\u4ee5\u91cd\u7ec4\u533a\u5757\u94fe\u3002\n\u9ed1\u5ba2\u5728\u672a\u7ecf\u91cd\u7ec4\u7684\u94fe\u6761\u4e0a\u6267\u884c\u7531\u9ed1\u5ba2\u63a7\u5236\u7684\u4ea4\u6613\u6240\u548c\u94b1\u5305\u4e4b\u95f4\u7684\u4ea4\u6613\u82b1\u8d39\u4e86\u8d85\u8fc712\u4e2a\u5c0f\u65f6\uff0c\u521b\u9020\u4e86\u673a\u4f1a\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u65e8\u5728\u907f\u514d\u88ab\u53d1\u73b0\u7684\u5c0f\u64cd\u4f5c\uff0c\u5c06\u88ab\u76d7\u8d44\u91d1\u4ece\u4ea4\u6613\u6240\u8f6c\u6362\u8fc7\u6765\u3002\n\u5728\u8fd9\u8d77\u4e8b\u4ef6\u4e2d\uff0c\u670911\u7b14\u6076\u610f\u4ea4\u6613\u6765\u81ea\u4e8e\u5728\u653b\u51fb\u8fc7\u7a0b\u4e2d\u63d2\u5165\u5230\u4ee5\u592a\u533a\u5757\u94fe\u4e2d\u7684\u5355\u4e2a\u5730\u5740\uff0c\u4f7f\u5f97\u8d85\u8fc780.7\u4e07\u7b14ETC\u88ab\u91cd\u590d\u82b1\u8d39\u3002\nBitquery\u8ba4\u4e3a\uff0c\u94b1\u5305\u53ef\u80fd\u6258\u7ba1\u5728OKEx\u6216\u4ea4\u6613\u6240\u7684\u9644\u5c5e\u516c\u53f8\u4e2d-\u533a\u5757\u94fe\u60c5\u62a5\u516c\u53f8Anchain\u4e5f\u6301\u6709\u8fd9\u4e00\u6000\u7591\u3002", "note_en": "Forensic analysis suggests the recent Ethereum Classic blockchain reorganization was a carefully orchestrated malicious attack.\n   A  recent 51% attack that impacted Ethereum Classic (ETC) is believed to have resulted in approximately $5.6 million worth of the cryptocurrency being double-spent.\n A report  published by Aleksey Studnev of blockchain forensics firm Bitquery on August 5 has revealed the extent of the incident, with Bitquery estimating that the attacker made off with 807,260 ETC.\n The report estimates the  hacker reaped more than a 2,800% return for his efforts, having spent roughly 17.5 Bitcoins ( BTC) worth $192,000 on renting hash power from Nicehash to execute the attack.\n The report contradicts initial theories suggesting that the blockchain reorganization may not have been intentional.\n  The attack took place between July 31 and August 1, however, was not detected for several days as a result of intricate planning and knowledge of the Ethereum Classic protocol. The hacker began the attack by transferring ETC from an exchange wallet under its control, and then back again.\n After renting hash power from Nicehash provider \u2018daggerhashimoto\u2019 to gain command over the majority of Ethereum Classic\u2019s hash power, the attacker was able to mine 4,280 blocks over four days. The attacker then created private transactions that sent ETC to wallets under its control, before broadcasting the blocks containing transfers to their wallets to reorganize the blockchain.\n More than 12 hours was spent executing transactions between exchanges and wallets controlled by the hacker over a non-reorganized chain, creating opportunities to convert the stolen funds from the exchanges over a series of small operations designed to avoid detection.\n  The incident saw 11 malicious transactions originating from a single address inserted into the Ethereum blockchain over the attack, allowing more than 807,000 ETC to be double-spent.\n Bitquery believes that the wallet may be hosted on either OKEx or one of the exchange\u2019s affiliated companies \u2014 a suspicion also held by blockchain intelligence firm Anchain.", "posttime": "2020-08-08 20:29:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bfc\u81f4,attack,\u653b\u51fb", "title": "51%\u7684\u653b\u51fb\u5bfc\u81f4Etherum Classic\u635f\u5931\u8d85\u8fc7500\u4e07\u7f8e\u5143", "title_en": "51% Attack Bleeds More Than $5M from Ethereum Classic", "transed": 1, "url": "https://cointelegraph.com/news/51-attack-bleeds-more-than-5m-from-ethereum-classic", "via": "", "real_tags": ["\u5bfc\u81f4", "attack", "\u653b\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "d806d68934dd2d8f794201993c6ab983.jpg", "infoid": 1016998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "10\u6708\u4efd\uff0c\u8fc8\u514b\u5c14\u00b7\u65af\u6cf0\u5c14\u5728LinkedIn\u4e0a\u6536\u5230\u4e86\u4e00\u6761\u5947\u602a\u7684\u4fe1\u606f\u3002\u4e00\u4e2a\u5b8c\u5168\u964c\u751f\u7684\u4eba\u5931\u53bb\u4e86\u4ed6\u7684\u6bd4\u7279\u5e01\u79c1\u94a5-\u5e76\u5e0c\u671b\u7559\u4e0b\u6765\u5e2e\u52a9\u627e\u56de\u4ed6\u768430\u4e07\u7f8e\u5143\u3002\n\u6b63\u5982\u65af\u6cf0\u5c14\u6240\u8bf4\uff0c\u8fd9\u4e2a\u5bb6\u4f19\u627e\u5230\u4e86\u8fd9\u4f4d\u524d\u8c37\u6b4c\u5b89\u5168\u5de5\u7a0b\u5e08\uff0c\u8fd9\u5e76\u4e0d\u5b8c\u5168\u4ee4\u4eba\u60ca\u8bb6\u300219\u5e74\u524d\uff0cStay\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4e00\u79cd\u7834\u89e3\u52a0\u5bc6zip\u6587\u4ef6\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u7537\u4eba\u57282016\u5e741\u6708\u8d2d\u4e70\u4e86\u4ef7\u503c\u7ea61\u4e07\u7f8e\u5143\u7684\u6bd4\u7279\u5e01\uff0c\u65e9\u5728\u6bd4\u7279\u5e01\u7e41\u8363\u4e4b\u524d\u3002\u4ed6\u52a0\u5bc6\u4e86\u538b\u7f29\u6587\u4ef6\u4e2d\u7684\u79c1\u94a5\uff0c\u5fd8\u8bb0\u4e86\u5bc6\u7801\u3002\u4ed6\u5e0c\u671b\u7559\u4e0b\u6765\u80fd\u5e2e\u4ed6\u7834\u95e8\u800c\u5165\u3002\n\u5728\u672c\u5468\u7684Defcon\u5b89\u5168\u4f1a\u8bae\u4e0a\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\uff0cStay\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u968f\u540e\u53d1\u751f\u7684\u53f2\u8bd7\u822c\u7684\u5c1d\u8bd5\u3002\nZip\u662f\u4e00\u79cd\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u7528\u4e8e\u65e0\u635f\u538b\u7f29\u5927\u6587\u4ef6\uff0c\u6bd4\u5982\u53ef\u4ee5\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5bb9\u7eb3\u60a8\u7684\u7761\u888b\u7684\u5c0f\u62c9\u7ef3\u888b\u5b50\u3002\u4f17\u6240\u5468\u77e5\uff0cZIP\u7684\u8bb8\u591a\u5b9e\u73b0\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u4ee5\u81f3\u4e8e\u7f8e\u56fd\u4fc4\u52d2\u5188\u5dde\u53c2\u8bae\u5458\u7f57\u6069\u00b7\u6000\u767b(Ron Wyden)\u53bb\u5e74\u590f\u5929\u547c\u5401\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u6240(National Institute Of Standards And Technology)\u8c03\u67e5\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u6210\u529f\u627e\u5230\u5bc6\u7801\uff0c\u6211\u4f1a\u611f\u8c22\u4f60\u7684\uff0c\u90a3\u5bb6\u4f19\u7528\u7b11\u8138\u5199\u9053\u3002\u7ecf\u8fc7\u521d\u6b65\u5206\u6790\uff0cStay\u4f30\u8ba1\u4ed6\u9700\u8981\u6536\u53d610\u4e07\u7f8e\u5143\u624d\u80fd\u7834\u89e3\u6587\u4ef6\u3002\u90a3\u5bb6\u4f19\u63a5\u53d7\u4e86\u4ea4\u6613\u3002\u6bd5\u7adf\uff0c\u4ed6\u4ecd\u7136\u4f1a\u8d5a\u5f97\u76c6\u6ee1\u94b5\u6ee1\u3002\n\u8fd9\u662f\u6211\u8fd9\u51e0\u5e74\u6765\u73a9\u5f97\u6700\u5f00\u5fc3\u7684\u4e00\u6b21\u3002\u73b0\u5728\u662f\u533a\u5757\u94fe\u8f6f\u4ef6\u5f00\u53d1\u516c\u53f8Pyrofex\u7684\u9996\u5e2d\u6280\u672f\u5b98\u7684\u65af\u6cf0\u5c14\u8bf4\uff0c\u6bcf\u5929\u65e9\u4e0a\uff0c\u6211\u90fd\u5f88\u5174\u594b\u5730\u53bb\u4e0a\u73ed\u5e76\u4e0e\u8fd9\u4e2a\u95ee\u9898\u640f\u6597\u3002Zip\u5bc6\u7801\u662f\u51e0\u5341\u5e74\u524d\u7531\u4e00\u4f4d\u4e1a\u4f59\u5bc6\u7801\u5b66\u5bb6\u8bbe\u8ba1\u7684--\u5b83\u80fd\u5982\u6b64\u51fa\u8272\u5730\u4fdd\u5b58\u4e0b\u6765\uff0c\u8fd9\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u4e00\u4e9bZip\u6587\u4ef6\u53ef\u4ee5\u7528\u73b0\u6210\u7684\u5de5\u5177\u8f7b\u6613\u7834\u89e3\uff0c\u4f46\u8fd9\u4e2a\u5bb6\u4f19\u5c31\u6ca1\u90a3\u4e48\u5e78\u8fd0\u4e86\u3002\n\u8fd9\u5c31\u662f\u8fd9\u4ef6\u4f5c\u54c1\u6807\u4ef7\u5982\u6b64\u4e4b\u9ad8\u7684\u90e8\u5206\u539f\u56e0\u3002\u65b0\u4e00\u4ee3\u7684\u538b\u7f29\u7a0b\u5e8f\u4f7f\u7528\u6210\u719f\u548c\u5f3a\u5927\u7684\u52a0\u5bc6\u6807\u51c6AES\uff0c\u4f46\u8fc7\u65f6\u7684\u7248\u672c-\u5982Guy&#39\uff1b\u7684\u6848\u4f8b\u4e2d\u4f7f\u7528\u7684\u7248\u672c-\u4f7f\u7528\u7684\u662fZip2.0 Legacy\u52a0\u5bc6\uff0c\u8fd9\u5f80\u5f80\u662f\u53ef\u4ee5\u88ab\u7834\u89e3\u7684\u3002\u7136\u800c\uff0c\u96be\u5ea6\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u5bc6\u7801\u5b66\u5bb6\u9a6c\u4fee\u00b7\u683c\u6797\u8bf4\uff0c\u8bf4\u4ec0\u4e48\u4e1c\u897f\u574f\u4e86\u662f\u4e00\u56de\u4e8b\uff0c\u4f46\u5b9e\u9645\u4e0a\u6253\u7834\u5b83\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e00\u56de\u4e8b\u3002\n\u65af\u6cf0\u5c14\u53ea\u6709\u51e0\u6761\u7ebf\u7d22\u53ef\u4ee5\u544a\u8bc9\u4ed6\u7684\u65b9\u6cd5\u3002\u7531\u4e8e\u8fd9\u4e2a\u5bb6\u4f19\u4ecd\u7136\u6709\u4ed6\u7528\u6765\u5236\u4f5c\u548c\u52a0\u5bc6\u538b\u7f29\u6587\u4ef6\u7684\u7b14\u8bb0\u672c\u7535\u8111-\u8fd9\u4e5f\u662f\u6bd4\u7279\u5e01\u5b9e\u9645\u4e0a\u662f\u4ed6\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u6807-\u7559\u4e0b\u6765\u81f3\u5c11\u77e5\u9053\u54ea\u4e2a\u538b\u7f29\u7a0b\u5e8f\u52a0\u5bc6\u4e86\u6587\u4ef6\uff0c\u5b83\u8fd0\u884c\u7684\u662f\u4ec0\u4e48\u7248\u672c\u3002\u4ed6\u8fd8\u6709\u521b\u5efa\u6587\u4ef6\u7684\u65f6\u95f4\u6233\uff0cInfo-ZIP\u8f6f\u4ef6\u4f7f\u7528\u8be5\u65f6\u95f4\u6233\u901a\u77e5\u5176\u52a0\u5bc6\u65b9\u6848\u3002\u4ece\u5e9e\u5927\u7684\u5bc6\u7801\u548c\u52a0\u5bc6\u5bc6\u94a5\u6c60\u4e2d\uff0cStay\u80fd\u591f\u5c06\u5176\u8303\u56f4\u7f29\u5c0f\u5230\u51e0\u5341\u4ebf\u91cf\u7ea7\u3002\n\u8981\u53d1\u52a8\u5982\u6b64\u89c4\u6a21\u7684\u653b\u51fb\uff0c\u9700\u8981\u79df\u7528\u4e91\u56fe\u5f62\u5904\u7406\u5355\u5143\u3002Stay\u5229\u7528Pyrofex\u9996\u5e2d\u6267\u884c\u5b98\u7eb3\u4ec0\u00b7\u798f\u65af\u7279(Nash Foster)\u5b9e\u73b0\u5bc6\u7801\u5206\u6790\u4ee3\u7801\uff0c\u5e76\u5728NVIDIA Tesla\u901a\u7528GPU\u4e0a\u8fd0\u884c\u3002\u968f\u7740\u4ed6\u4eec\u6df1\u5165\u5230\u9879\u76ee\u4e2d\uff0cStay\u80fd\u591f\u6539\u8fdb\u653b\u51fb\u5e76\u51cf\u5c11\u4ea7\u751f\u7ed3\u679c\u6240\u9700\u7684\u65f6\u95f4\u3002\n\u798f\u65af\u7279\u5728\u63a5\u53d7\u201c\u8fde\u7ebf\u201d\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u6211\u4eec\u6700\u521d\u7684\u9884\u671f\u662f\uff0c\u6211\u4eec\u4f1a\u505a\u51e0\u4e2a\u6708\u7684\u5de5\u7a0b\u8bbe\u8ba1\uff0c\u7136\u540e\u653b\u51fb\u5fc5\u987b\u6301\u7eed\u51e0\u4e2a\u6708\u624d\u80fd\u6210\u529f\u3002\u8fc8\u514b\u6700\u7ec8\u80fd\u591f\u505a\u66f4\u6709\u6548\u7684\u5bc6\u7801\u5206\u6790\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u82b1\u4e86\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5f00\u53d1\u653b\u51fb\uff0c\u4f46\u968f\u540e\u53ea\u9700\u8981\u8fd0\u884c\u5927\u7ea6\u4e00\u5468\u3002\u8fd9\u4e3a\u4ed6\u5728\u57fa\u7840\u8bbe\u65bd\u6210\u672c\u4e0a\u8282\u7701\u4e86\u4e00\u5927\u7b14\u94b1\u3002\u5341\u5e74\u524d\uff0c\u5982\u679c\u4e0d\u5efa\u9020\u7279\u6b8a\u7528\u9014\u7684\u786c\u4ef6\uff0c\u5c31\u4e0d\u53ef\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u4e14\u6210\u672c\u53ef\u80fd\u4f1a\u8d85\u8fc7\u4ed6\u7684\u6bd4\u7279\u5e01\u7684\u4ef7\u503c\u3002\n\u7136\u800c\uff0c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u6240\u6709\u8fd9\u4e9bGPU\u8fd0\u7b97\u662f\u5426\u771f\u7684\u4f1a\u594f\u6548\u3002\u5728\u5bf9\u8fd9\u4e2a\u95ee\u9898\u53cd\u590d\u7814\u7a76\u4e86\u51e0\u4e2a\u6708\u540e\uff0cStay\u7ec8\u4e8e\u51c6\u5907\u597d\u5c1d\u8bd5\u4e86\u3002\u8fd9\u5bb6\u4f19\u6ca1\u6709\u7ed9\u4ed6\u6574\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c\u4ed6\u5f88\u53ef\u80fd\u4e0d\u76f8\u4fe1\uff0c\u5982\u679c\u4ed6\u4eec\u771f\u7684\u8bbe\u6cd5\u7834\u89e3\u4e86\u5bc6\u94a5\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u7a83\u53d6\u4ed6\u7684\u52a0\u5bc6\u8d27\u5e01\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u7531\u4e8e\u5728zip\u6587\u4ef6\u4e2d\u5b9e\u73b0\u52a0\u5bc6\u7684\u65b9\u5f0f\uff0c\u4ed6\u80fd\u591f\u53ea\u63d0\u4f9bStay\u548cFoster\u52a0\u5bc6\u7684\u6807\u9898\u6216\u5173\u4e8e\u8be5\u6587\u4ef6\u7684\u4fe1\u606f\u6ce8\u91ca\uff0c\u800c\u65e0\u9700\u5171\u4eab\u5176\u5b9e\u9645\u5185\u5bb9\u3002\u5230\u4e862\u6708\u4efd\uff0c\u4e5f\u5c31\u662f\u5728LinkedIn\u53d1\u51fa\u7b2c\u4e00\u6761\u6d88\u606f\u56db\u4e2a\u6708\u540e\uff0c\u4ed6\u4eec\u628a\u4e00\u5207\u90fd\u6392\u597d\u4e86\u961f\uff0c\u5f00\u59cb\u4e86\u653b\u51fb\u3002\n\u5b83\u8fd0\u884c\u4e8610\u5929-\u4f46\u5931\u8d25\u4e86\u3002\u65af\u6cf0\u5c14\u540e\u6765\u5199\u9053\uff0c\u4ed6\u5fc3\u788e\u4e86\u3002\n\u4ed6\u8bf4\uff1a\u6211\u4eec\u4ee5\u524d\u6709\u8fc7\u5f88\u591a\u6f0f\u6d1e\uff0c\u4f46\u6211\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884c\u7684\u6d4b\u8bd5\u90fd\u8fd0\u884c\u5f97\u5f88\u597d\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u90a3\u4e00\u5b9a\u662f\u4e00\u4e2a\u5fae\u5999\u7684\u6f0f\u6d1e\uff0c\u6211\u62c5\u5fc3\u6211\u4eec\u8981\u82b1\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u627e\u5230\u5b83\u3002\u8fd9\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\uff0c\u6574\u4e2a2\u6708\u4efd\uff0c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u90fd\u5728\u4e0b\u8dcc\uff0c\u538b\u7f29\u6587\u4ef6\u5185\u5bb9\u7684\u4ef7\u503c\u4e5f\u968f\u4e4b\u800c\u6765\u3002\u90a3\u5bb6\u4f19\u5750\u7acb\u4e0d\u5b89\u3002\n\u7ee7\u7eed\u68b3\u7406\u4ed6\u7684\u653b\u51fb\uff0c\u62c5\u5fc3\u4e00\u4e9b\u6a21\u7cca\u7684\u3001\u4e0d\u6b63\u786e\u7684\u5047\u8bbe\u6216\u9690\u85cf\u7684\u6f0f\u6d1e\u3002\u4ed6\u5f88\u5feb\u5c31\u6709\u4e86\u4e00\u4e2a\u65b0\u7684\u60f3\u6cd5\uff0c\u90a3\u5c31\u662f\u5c1d\u8bd5\u5c06\u54ea\u4e2a\u6570\u5b57\u6216\u79cd\u5b50\u4f5c\u4e3a\u5bc6\u7801\u65b9\u6848\u4e2d\u4f7f\u7528\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u8d77\u70b9\u3002\u8be5\u7537\u5b50\u8fd8\u68b3\u7406\u4e86\u6d4b\u8bd5\u6570\u636e\uff0c\u5e76\u6ce8\u610f\u5230\u5982\u679cGPU\u5728\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u65f6\u6ca1\u6709\u5904\u7406\u6b63\u786e\u7684\u5bc6\u7801\uff0c\u5219\u4f1a\u53d1\u751f\u9519\u8bef\u3002Stay\u548cFoster\u4fee\u590d\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\u3002\u968f\u7740\u5bf9\u88ad\u51fb\u7684\u4e24\u6b21\u4fee\u8ba2\u90fd\u5230\u4f4d\uff0c\u4ed6\u4eec\u51c6\u5907\u518d\u6b21\u5c1d\u8bd5\u3002\n&#34\uff1b\u7830\uff01\u798f\u65af\u7279\u8bf4\uff0c\u51fa\u6765\u7684\u662f\u4e00\u5806\u6bd4\u7279\u5e01\u3002\u65af\u6cf0\u5c14\u8865\u5145\u9053\uff0c\u8fd9\u8ba9\u6211\u677e\u4e86\u4e00\u53e3\u6c14\u3002\n\u798f\u65af\u7279\u8bf4\uff0c\u6700\u7ec8\uff0c\u53d1\u52a8\u653b\u51fb\u7684\u57fa\u7840\u8bbe\u65bd\u6210\u672c\u4e3a6000\u81f37000\u7f8e\u5143\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u6700\u521d\u4f30\u8ba1\u7684\u5927\u7ea610\u4e07\u7f8e\u5143\u3002\u8fd9\u540d\u7537\u5b50\u652f\u4ed8\u4e86\u5927\u7ea6\u539f\u4ef7\u7684\u56db\u5206\u4e4b\u4e00\u3002\n\u798f\u65af\u7279\u8bf4\uff0c\u4ed6\u5f97\u5230\u4e86\u4e00\u4efd\u5438\u70df\u534f\u8bae\u3002\u50cf\u8fd9\u6837\u7684\u9879\u76ee\u662f\u5b8c\u5168\u4e0d\u5bfb\u5e38\u7684\u3002\u5982\u679c\u4ed6\u7684\u5177\u4f53\u60c5\u51b5\u6709\u6240\u4e0d\u540c\uff0c\u5982\u679c\u4ed6\u4f7f\u7528\u7684\u662f\u7a0d\u5fae\u66f4\u65b0\u4e00\u70b9\u7684Zip\u7248\u672c\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4f46\u5728\u8fd9\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u3002\nStay\u8bf4\uff0c\u81ea\u4ece\u4ed6\u57284\u6708\u4efd\u53d1\u8868\u4e86\u5bf9\u8be5\u9879\u76ee\u7684\u6280\u672f\u63cf\u8ff0\u4ee5\u6765\uff0c\u5df2\u7ecf\u6709\u5f88\u591a\u4eba\u8054\u7cfb\u4e86\u4ed6\uff0c\u8981\u6c42\u4ed6\u5e2e\u52a9\u4ed6\u4eec\u627e\u56de\u6bd4\u7279\u5e01\u94b1\u5305\u7684\u5bc6\u7801\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u56f0\u5883\u3002\u751a\u81f3\u8fde\u8fde\u7ebf\u672c\u8eab\u90fd\u611f\u89c9\u5230\u4e86\u90a3\u79cd\u75db\u82e6\u3002\u4f46Zip\u653b\u51fb\u4e0e\u52a0\u5bc6\u8d27\u5e01\u94b1\u5305\u65e0\u5173\uff0c\u52a0\u5bc6\u8d27\u5e01\u94b1\u5305\u5076\u5c14\u53ef\u80fd\u5b58\u5728\u53ef\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684\u7f3a\u9677\uff0c\u4f46\u4f7f\u7528\u4e86\u5f3a\u5927\u7684\u73b0\u4ee3\u52a0\u5bc6\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0cZip\u5982\u6b64\u65e0\u5904\u4e0d\u5728\u7684\u4e8b\u5b9e\u610f\u5473\u7740Stay\u548cFoster\u7684\u7814\u7a76\u786e\u5b9e\u6709\u66f4\u5927\u7684\u610f\u4e49\u3002\n\u4ece\u5bc6\u7801\u5c0f\u63d0\u7434\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u771f\u7684\u5f88\u9177\uff0c\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u00b7\u683c\u6797\u8bf4\u3002\u8fd9\u662f\u5bf9\u5351\u9119\u8ba1\u5212\u7684\u53e4\u8001\u653b\u51fb\u4e4b\u4e00\uff0c\u6ca1\u6709\u4eba\u4f1a\u60f3\u5230\u5b83\u662f\u76f8\u5173\u7684\u3002\u4f46\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u8fd9\u4ef6\u574f\u4e8b\u4ecd\u7136\u65e0\u5904\u4e0d\u5728\uff0c\u6240\u4ee5\u5b83\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u76f8\u5173\u7684\u3002\u6700\u540e\u6709\u4e00\u5927\u5806\u94b1\uff0c\u8fd9\u771f\u662f\u592a\u68d2\u4e86\u3002&#34\uff1b", "note_en": "In October, Michael Stay got a weird message on LinkedIn. A total stranger had lost access to his bitcoin private keys\u2014and wanted Stay&#39;s help getting his $300,000 back.\n It wasn&#39;t a total surprise that The Guy, as Stay calls him, had found the former Google security engineer. Nineteen years ago, Stay published  a paper detailing a technique for breaking into encrypted zip files. The Guy had bought around $10,000 worth of bitcoin in January 2016, well before the boom. He had encrypted the private keys in a zip file and had forgotten the password. He was hoping Stay could help him break in.\n In a talk at the Defcon security conference this week,  Stay details the epic attempt that ensued.\n Zip is a popular file format used for &#34;lossless&#34; compression of large files, like the little drawstring sack that can somehow contain your sleeping bag. Many implementations of zip are known to be insecure, to the point that US senator Ron Wyden of Oregon  called on the National Institute of Standards and Technology last summer to investigate the issue. &#34;If we find the password successfully, I will thank you,&#34; The Guy wrote with a smiley face. After an initial analysis, Stay estimated that he would need to charge $100,000 to break into the file. The Guy took the deal. After all, he&#39;d still be turning quite the profit.\n &#34;It&#39;s the most fun I&#39;ve had in ages. Every morning I was excited to get to work and wrestle with the problem,&#34; says Stay, who today is the chief technology officer of the blockchain software development firm Pyrofex. &#34;The zip cipher was designed decades ago by an amateur cryptographer\u2014the fact that it has held up so well is remarkable.&#34; But while some zip files can be cracked easily with off-the-shelf tools, The Guy wasn&#39;t so lucky.\n That&#39;s partly why the work was priced so high. Newer generations of zip programs use the established and robust cryptographic standard AES, but outdated versions\u2014like the one used in The Guy&#39;s case\u2014use Zip 2.0 Legacy encryption that can often be cracked. The degree of difficulty depends on how it&#39;s implemented, though. &#34;It\u2019s one thing to say something is broken, but actually breaking it is a whole different ball of wax,&#34; says Johns Hopkins University cryptographer Matthew Green.\n Stay had only a few clues to go on to inform his approach. Since The Guy still had the laptop he had used to make and encrypt the zip file\u2014also a decent indicator that the bitcoin was actually his to begin with\u2014Stay at least knew which zip program had encrypted the file and what version it ran. He also had the time stamp of when the file was created, which the Info-ZIP software uses to inform its cryptography scheme. From a massive pool of passwords and encryption keys, Stay was able to narrow it down to something on the order of quintillions.\n To run an attack of that scale would require renting cloud graphics-processing units. Stay tapped Pyrofex CEO Nash Foster to implement the cryptanalysis code and run it on Nvidia Tesla general-purpose GPUs. As they got deeper into the project, Stay was able to refine the attack and reduce how long it would need to run to produce results.\n &#34;Our initial expectation was we would do engineering for a couple of months, and then the attack would have to run for several months to succeed,&#34; Foster told WIRED. &#34;Mike ended up being able to do a more effective job with the cryptanalysis, so we spent more time developing the attack but then only needed to run it for about a week. That saved the guy a lot of money on infrastructure costs. Ten years ago there would have been no way to do this without building special-purpose hardware, and the cost probably would have exceeded the value of his bitcoin.&#34;\n The question still remained, though, whether all that GPU-crunching would actually work. After months of hammering on the problem, Stay was finally ready to try. The Guy hadn&#39;t given the entire zip file to Stay and Foster; he likely didn&#39;t trust that they wouldn&#39;t steal his cryptocurrency if they did manage to crack the keys. Instead, because of how encryption is implemented in zip files, he was able to just give Stay and Foster the encrypted &#34;headers,&#34; or informational notes about the file, without sharing its actual content. By February, four months after that first LinkedIn message, they queued it all up and started the attack.\n It ran for 10 days\u2014and failed. Stay later  wrote that he was &#34;heartbroken.&#34;\n &#34;We&#39;d had lots of bugs before, but the tests I ran on my laptop all worked perfectly,&#34; he says now. &#34;If it was a bug, it had to be a subtle one, and I worried that it would take us a long time to find.&#34; It didn&#39;t help that throughout February, bitcoin&#39;s price was dropping, and the value of the zip file&#39;s contents with it. The Guy was antsy.\n Stay combed through his attack, worried about some obscure, incorrect assumption or a hidden bug. He soon struck on a new idea about which number, or &#34;seed,&#34; to try as the starting point for the random number generator used in the cryptographic scheme. The Guy combed the test data as well and noticed an error that occurred if the GPU didn&#39;t process the correct password on the first attempt. Stay and Foster fixed the bug. With both of these revisions to the attack in place, they were ready to try again.\n &#34;Poof! Out came a bunch of Bitcoin,&#34; Foster says. &#34;It was such a relief,&#34; Stay adds.\n In the end, the infrastructure costs to run the attack were $6,000 to $7,000 instead of the roughly $100,000 they had originally estimated, Foster says. The Guy paid about a quarter of the original price tag.\n &#34;He got a smoking deal,&#34; Foster says. &#34;Projects like this are just completely unusual. If the details of his situation had been different, if he had used a slightly more recent version of zip, it would have been impossible. But in this particular case there was something we could do.&#34;\n Stay says that since publishing his technical account of the project in April, a number of people have reached out, asking him to help them recover the passwords to their Bitcoin wallets. Unfortunately, it&#39;s a  common plight. Even WIRED itself  feels that pain. But the zip attack has nothing to do with cryptocurrency wallets, which can occasionally have  hackable flaws but are made with strong, modern encryption.\n Still, the fact that zip is so ubiquitous means that Stay and Foster&#39;s research does have larger implications.\n &#34;It\u2019s really cool from a crypto fiddling perspective,&#34; Johns Hopkins&#39; Green says. &#34;It\u2019s one of these ancient attacks on a crummy scheme, and nobody would have thought about it being relevant. But believe it or not, this bad stuff is still out there everywhere, so it\u2019s actually really relevant. And the fact that there\u2019s a pile of money at the end of it is really great.&#34;", "posttime": "2020-08-08 20:04:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6bd4\u7279\u5e01,zip,\u52a0\u5bc6", "title": "\u5bfb\u6c42\u4ece\u4e00\u4e2a\u65e7\u7684ZIP\u6587\u4ef6\u4e2d\u89e3\u653e30\u4e07\u7f8e\u5143\u7684\u6bd4\u7279\u5e01", "title_en": "The quest to liberate $300,000 of bitcoin from an old ZIP file", "transed": 1, "url": "https://arstechnica.com/information-technology/2020/08/the-quest-to-liberate-300000-of-bitcoin-from-an-old-zip-file/", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "zip", "\u52a0\u5bc6"]}, {"category": "", "categoryclass": "", "imagename": "851388b4b660e4b9d7a6096c2c4b473b.jpg", "infoid": 1016997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u5173\u66f4\u591a\u6f14\u8bb2\u548c\u67e5\u770b\u76f8\u5e94\u5e7b\u706f\u7247\u7684\u4fe1\u606f\uff0c\u8bf7\u8f6c\u5230scaledml.org\uff0c\u9009\u62e9[\u5a92\u4f53\u6863\u6848]\u3002\u5728\u7b2c\u4e94\u5c4a\u5e74\u5ea6\u53ef\u7f29\u653e\u673a\u5668\u5b66\u4e60\u5927\u4f1a\u4e0a\u53d1\u8868\u3002", "note_en": "For more talks and to view corresponding slides, go to scaledml.org, select [media archive]. Presented at the 5th Annual Scaled Machine Learning Conference 2...", "posttime": "2020-08-08 20:03:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,\u9a7e\u9a76,karpathy,\u9009\u62e9", "title": "\u5b89\u5fb7\u70c8\u00b7\u5361\u5e15\u897f-\u5168\u81ea\u52a8\u9a7e\u9a76\u7684\u4eba\u5de5\u667a\u80fd[\u89c6\u9891]", "title_en": "Andrej Karpathy \u2013 AI for Full-Self Driving [video]", "transed": 1, "url": "https://youtu.be/hx7BXih7zx8", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u9a7e\u9a76", "karpathy", "\u9009\u62e9"]}, {"category": "", "categoryclass": "", "imagename": "1379863371b5ce2f5fd9a92ed15f6938.jpg", "infoid": 1016996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0e\u51c6\u5907\u7406\u79d1\u8003\u8bd5\u7684\u9ad8\u4e2d\u751f\u4ea4\u8c08\uff0c\u4f60\u53ef\u80fd\u4f1a\u542c\u5230\u4e24\u4ef6\u4e8b\uff1a\u4ed6\u4eec\u5bb3\u6015\u7269\u7406\uff0c\u5bf9\u751f\u7269\u5b66\u76f8\u5bf9\u6ee1\u610f\u3002\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e0e\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u7684\u89c2\u70b9\u76f8\u53cd\u3002\u79d1\u5b66\u7684\u65f6\u4ee3\u7cbe\u795e\u662f\u7269\u7406\u5f88\u5bb9\u6613\u3002\u5b83\u7684\u7b80\u5355\u6027\u6765\u81ea\u4e8e\u521b\u9020\u6c34\u6676\u7406\u8bba\u7684\u80fd\u529b\uff0c\u8fd9\u4e9b\u6c34\u6676\u7406\u8bba\u5bf9\u4ece\u4e9a\u539f\u5b50\u7c92\u5b50\u7684\u5b58\u5728\u5230\u5149\u7ebf\u5982\u4f55\u7ed5\u8fc7\u6052\u661f\u7684\u4e00\u5207\u90fd\u5177\u6709\u5f88\u5f3a\u7684\u9884\u6d4b\u6027\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u751f\u7269\u5b66\u5219\u5f88\u96be\u63d0\u70bc\u6210\u4f18\u96c5\u7684\u5b9a\u7406\u548c\u6570\u5b66\u65b9\u7a0b\u5f0f\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4e00\u4e9b\u8457\u540d\u7684\u601d\u60f3\u5bb6\u8ba4\u4e3a\u7ec6\u80de\u548c\u68ee\u6797\u6bd4\u9065\u8fdc\u548c\u96be\u4ee5\u89c2\u5bdf\u7684\u9ed1\u6d1e\u66f4\u96be\u7406\u89e3\u3002\n\u4f46\u662f\uff0c\u4e5f\u8bb8\u6ca1\u6709\u8f7b\u677e\u6216\u8270\u96be\u7684\u7eaa\u5f8b\u8fd9\u56de\u4e8b\u3002\u4e5f\u8bb8\u53ea\u6709\u7b80\u5355\u548c\u56f0\u96be\u7684\u95ee\u9898\u3002\u751f\u7269\u5b66\u4e4b\u6240\u4ee5\u770b\u8d77\u6765\u8fd9\u4e48\u96be\uff0c\u53ea\u662f\u56e0\u4e3a\u5b83\u88ab\u4e00\u7cfb\u5217\u975e\u5e38\u96be\u7684\u95ee\u9898\u6240\u5b9a\u4e49\u3002\u7269\u7406\u5b66\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u53ea\u662f\u56e0\u4e3a\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u5bcc\u6709\u6d1e\u5bdf\u529b\u7684\u601d\u60f3\u5bb6\u4eec\u7684\u52aa\u529b\u4ea7\u751f\u4e86\u4e00\u7cfb\u5217\u53ef\u4ee5\u56de\u7b54\u7684\u95ee\u9898\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u751f\u7269\u5b66\u4e4b\u6240\u4ee5\u5982\u6b64\u5177\u6709\u6311\u6218\u6027\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u79bb\u5b83\u5f88\u8fd1\u3002\u95ee\u95ee\u81ea\u5df1\uff1a\u8c01\u201c\u66f4\u5bb9\u6613\u7406\u89e3\u201d--\u662f\u604b\u4eba\u8fd8\u662f\u540c\u4e8b\uff1f\u6211\u4eec\u4e0e\u751f\u7269\u5b66--\u4ee5\u53ca\u5fc3\u7406\u5b66\u548c\u793e\u4f1a\u79d1\u5b66--\u7684\u4eb2\u5bc6\u5173\u7cfb\uff0c\u4fc3\u4f7f\u6211\u4eec\u7528\u5df2\u7ecf\u638c\u63e1\u7684\u6df1\u539a\u77e5\u8bc6\u6765\u5ba1\u95ee\u8fd9\u4e9b\u73b0\u8c61\u3002\u6211\u4eec\u4f1a\u95ee\u975e\u5e38\u8be6\u7ec6\u7684\u95ee\u9898\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u5bf9\u770b\u4f3c\u795e\u79d8\u6216\u77db\u76fe\u7684\u7b54\u6848\u611f\u5230\u60ca\u8bb6\u3002\n\u5728\u7a7f\u8fc7\u68ee\u6797\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u89c2\u5bdf\u5230\u67ab\u6811\u4e0a\u4e0d\u5bfb\u5e38\u7684\u53f6\u5b50\u5f62\u72b6\u3002\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6811\u53f6\u6709\u88c2\u7247\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4eec\u5728\u79cb\u5929\u53d8\u7ea2\uff0c\u6811\u53f6\u51cb\u843d\u7269\u4e2d\u751f\u6d3b\u7740\u4ec0\u4e48\u6606\u866b\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u5206\u89e3\u548c\u5582\u517b\u571f\u58e4\u7684\u3002\u8fd9\u4e9b\u95ee\u9898\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u5c3d\u7ba1\u6211\u4eec\u95ee\u5f97\u5f88\u81ea\u7136\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u51b0\u51b7\u6d69\u701a\u7684\u592a\u7a7a\u771f\u7a7a\u548c\u770b\u4e0d\u89c1\u7684\u5c0f\u5938\u514b\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u5982\u6b64\u964c\u751f\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u611f\u5230\u81ea\u8c6a--\u81f3\u5c11\u5728\u5f00\u59cb\u65f6--\u8bf4\u51fa\u5173\u4e8e\u8fd9\u4e9b\u5b9e\u4f53\u7684\u6700\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u5373\u4f7f\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u5b83\u4eec\u7684\u5b58\u5728\u3002\n\u4eb2\u5bc6\u5173\u7cfb\u6709\u65f6\u4e5f\u4f1a\u51cf\u6162\u6211\u4eec\u5bf9\u7269\u7406\u7684\u7406\u89e3\u3002\u884c\u661f\u5982\u4f55\u8fd0\u52a8\u7684\u95ee\u9898\u662f\u4eba\u7c7b\u6700\u53e4\u8001\u7684\u56f0\u6270\u4e4b\u4e00\uff0c\u5e76\u8d2f\u7a7f\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u795e\u8bdd\u4e2d\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u4eec\u4eba\u7c7b\u7684\u81ea\u6211\u9676\u9189\uff0c\u957f\u671f\u5b58\u5728\u7684\u672c\u8f6e\u7406\u8bba\u9519\u8bef\u5730\u5c06\u5730\u7403\u653e\u5728\u5b87\u5b99\u7684\u4e2d\u5fc3-\u8fd9\u4e2a\u9519\u8bef\u6301\u7eed\u4e86\u5927\u7ea62000\u5e74\u3002\u5f53\u8fd9\u4e2a\u95ee\u9898\u88ab\u62bd\u8c61\u4e3a\u725b\u987f\u7269\u7406\u5b66\u4e2d\u7684\u529b\u3001\u8d28\u91cf\u548c\u91cd\u529b\u95ee\u9898\u65f6\uff0c\u884c\u661f\u8fd0\u52a8\u53d8\u5f97\u66f4\u5bb9\u6613\u9884\u6d4b\u548c\u7406\u89e3\u3002\n\u5bf9\u4e8e\u7269\u7406\u5b66\u5bb6\u6765\u8bf4\uff0c\u4ecd\u7136\u6709\u5f88\u591a\u68d8\u624b\u7684\u95ee\u9898\u9700\u8981\u7ea0\u7ed3\u3002\u5982\u679c\u7269\u7406\u5b66\u5c06\u5176\u58f0\u8a89\u5bc4\u6258\u5728\u9884\u6d4b\u4e0b\u4e00\u6b21\u53ef\u80fd\u5e72\u6270\u5730\u7403\u7535\u4fe1\u7684\u592a\u9633\u8000\u6591\u4e0a\uff0c\u5b83\u5c06\u88ab\u89c6\u4e3a\u4e00\u95e8\u66f4\u590d\u6742\u3001\u66f4\u56f0\u96be\u7684\u5b66\u79d1\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5bf9\u4ea7\u751f\u592a\u9633\u8868\u9762\u52a8\u6001\u7684\u8bb8\u591a\u673a\u5236\u8fdb\u884c\u5efa\u6a21-\u6240\u6709\u6d89\u53ca\u5230\u7684\u5f15\u529b\u3001\u7535\u78c1\u3001\u70ed\u548c\u6838\u8fc7\u7a0b-\u662f\u6781\u5176\u68d8\u624b\u7684\u3002\u81f3\u4e8e\u884c\u661f\u8fd0\u52a8\uff0c\u5982\u679c\u6211\u4eec\u8ba4\u8bc6\u5230\u592a\u9633\u7684\u5de8\u5927\u4f7f\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u5176\u4ed6\u5929\u4f53\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u884c\u661f\u7684\u8fd0\u884c\u8f68\u8ff9\u6709\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u4e86\u89e3\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u5173\u6ce8\u8fd9\u4e9b\u7ec6\u8282\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u4e0d\u80fd\u51c6\u786e\u5730\u9884\u6d4b\u4e09\u4e2a\u8d28\u91cf\u76f8\u7b49\u7684\u7269\u4f53\u7684\u8fd0\u52a8\u3002\u540c\u6837\uff0c\u5728\u6df7\u6c8c\u7406\u8bba\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u6211\u4eec\u53ea\u80fd\u7c97\u7565\u5730\u731c\u6d4b\u8fd0\u52a8\u8026\u5408\u5728\u4e00\u8d77\u7684\u4e24\u4e2a\u6446\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u80af\u5b9a\u5730\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u949f\u6446\u90fd\u4f1a\u5728\u54ea\u91cc\u3002\n\u4e5f\u8bb8\u6211\u4eec\u5bf9\u751f\u7269\u5b66\u7684\u8981\u6c42\u592a\u96be\u4e86\u3002\u6211\u4eec\u5982\u4f55\u62ef\u6551\u4e00\u4e2a\u4eba\u7684\u751f\u547d\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u53ea\u84dd\u9e26\u6bd4\u53e6\u4e00\u53ea\u7a0d\u5fae\u9ed1\u4e00\u4e9b\uff1f\u4f46\u662f\uff0c\u4ec5\u4ec5\u56e0\u4e3a\u6211\u4eec\u5bf9\u751f\u7269\u5b66\u7684\u8981\u6c42\u66f4\u9ad8\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u4e0d\u80fd\u63d0\u51fa\u7a0d\u5fae\u7b80\u5355\u4e00\u70b9\u7684\u95ee\u9898\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5229\u7528\u201c\u7b80\u5355\u201d\u7684\u7269\u7406\u539f\u7406\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u5982\u4f55\u627e\u5230\u8fd9\u4e9b\u95ee\u9898\u3002\u7269\u7406\u5b66\u5bb6\u7279\u522b\u64c5\u957f\u5bfb\u627e\u666e\u904d\u5b58\u5728\u7684\u5927\u89c4\u6a21\u73b0\u8c61\uff0c\u8fd9\u4e9b\u73b0\u8c61\u9002\u7528\u4e8e\u591a\u4e2a\u7cfb\u7edf\uff0c\u5f88\u53ef\u80fd\u662f\u7b80\u5355\u7684\u5171\u4eab\u673a\u5236\u7684\u7ed3\u679c\u3002\n\u4ee5\u751f\u7269\u7f29\u653e\u7684\u60f3\u6cd5\u4e3a\u4f8b\u3002\u8fd9\u4e00\u6982\u5ff5\u6e90\u4e8e\u65e9\u671f\u7684\u89c2\u5bdf\uff0c\u5373\u54fa\u4e73\u52a8\u7269\u7684\u4ee3\u8c22\u7387\u901a\u8fc7\u5e42\u5f8b\u53ef\u9884\u6d4b\u5730\u975e\u7ebf\u6027\u5730\u4f9d\u8d56\u4e8e\u8eab\u4f53\u5927\u5c0f\u3002\u5e42\u5f8b\u662f\u4e00\u79cd\u6570\u5b66\u5173\u7cfb\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u968f\u7740\u7cfb\u7edf\u5927\u5c0f\u6309\u6570\u91cf\u7ea7(\u5373\u67d0\u4e2a\u6570\u5b57\u7684\u500d\u6570\uff0c\u901a\u5e38\u4e3a10)\u589e\u52a0\uff0c\u4e00\u4e2a\u7279\u5f81\u4f1a\u53d1\u751f\u591a\u5927\u7a0b\u5ea6\u7684\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u5f53\u4e00\u79cd\u751f\u7269\u7684\u4f53\u91cd\u589e\u52a01000\u500d\u65f6\uff0c\u751f\u7269\u6bd4\u4f8b\u539f\u7406\u51c6\u786e\u5730\u9884\u6d4b\u4e86\u5b83\u7684\u4ee3\u8c22\u7387\u5c06\u589e\u52a0100\u500d\u3002\n\u4f46\u662f\uff0c\u540c\u6837\u7684\u6570\u5b66\u600e\u4e48\u53ef\u80fd\u9002\u7528\u4e8e\u50cf\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u7684\u5f15\u529b\u548c\u8de8\u8d8a\u4e0d\u540c\u6816\u606f\u5730\u7684\u6df7\u4e71\u7684\u7269\u79cd\u5f62\u6210\u8fc7\u7a0b\u8fd9\u6837\u7b80\u5355\u7684\u4e8b\u60c5\u5462\uff1f\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u5e42\u5f8b\u6307\u5411\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u8fd0\u884c\u7684\u5171\u4eab\u673a\u5236\u548c\u5bf9\u79f0\u6027\u3002\u5728\u751f\u7269\u5b66\u65b9\u9762\uff0c\u6211\u4eec\u81ea\u5df1\u4ee5\u53ca\u6770\u5f17\u91cc\u00b7B\u00b7\u97e6\u65af\u7279(Geoffrey B West)\u3001\u8a79\u59c6\u65af\u00b7H\u00b7\u5e03\u6717(James H Brown)\u548c\u5e03\u83b1\u6069\u00b7J\u00b7\u6069\u594e\u65af\u7279(Brian J Enquist)\u7684\u7814\u7a76\u8868\u660e\uff0c\u8d77\u4f5c\u7528\u7684\u57fa\u672c\u673a\u5236\u662f\u8840\u7ba1\u7f51\u7edc\u7ed3\u6784\u548c\u6d41\u52a8\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8840\u7ba1\u5f80\u5f80\u80fd\u591f\u6709\u6548\u5730\u8de8\u8d8a\u8eab\u4f53\uff0c\u5411\u751f\u7269\u7684\u6240\u6709\u7ec6\u80de\u8f93\u9001\u8d44\u6e90\uff0c\u540c\u65f6\u51cf\u8f7b\u5fc3\u810f\u7684\u538b\u529b\u3002\u8fd9\u4e00\u7b80\u5355\u7684\u6d1e\u5bdf\u529b\u50ac\u751f\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u6210\u529f\u7406\u8bba\uff0c\u8fd9\u4e9b\u7406\u8bba\u4f7f\u7528\u4f18\u5316\u7684\u751f\u7269\u7ed3\u6784\u7684\u60f3\u6cd5\u6765\u9884\u6d4b\u8bf8\u5982\u68ee\u6797\u4e2d\u6811\u6728\u7684\u5206\u5e03\u3001\u6211\u4eec\u9700\u8981\u7761\u7720\u591a\u957f\u65f6\u95f4\u3001\u80bf\u7624\u7684\u751f\u957f\u901f\u5ea6\u3001\u7ec6\u83cc\u7684\u6700\u5927\u548c\u6700\u5c0f\u5c3a\u5bf8\u4ee5\u53ca\u4efb\u4f55\u73af\u5883\u4e2d\u53ef\u80fd\u7684\u6700\u9ad8\u6811\u6728\u7b49\u73b0\u8c61\u3002\n\u7136\u800c\uff0c\u751f\u7269\u5b66\u4e5f\u4f1a\u4ea7\u751f\u81ea\u5df1\u72ec\u7279\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6b63\u5982\u6211\u4eec\u5728\u5723\u8fbe\u83f2\u7814\u7a76\u6240\u7684\u540c\u4e8b\u6770\u897f\u5361\u00b7\u5f17\u62c9\u514b\u548c\u5927\u536b\u00b7\u514b\u62c9\u8003\u5c14\u6240\u5c55\u793a\u7684\u90a3\u6837\uff0c\u4ee3\u7406\u4eba(\u5982\u7075\u957f\u7c7b\u52a8\u7269\u3001\u795e\u7ecf\u5143\u548c\u9ecf\u6db2\u9709\u83cc)\u7684\u4fe1\u606f\u5904\u7406\u548c\u51b3\u7b56\u80fd\u529b\u5bfc\u81f4\u4e86\u4e0d\u540c\u4e8e\u7eaf\u7269\u7406\u7cfb\u7edf\u7684\u72ec\u7279\u7c7b\u578b\u7684\u53cd\u9988\u3001\u9002\u5e94\u6027\u548c\u56e0\u679c\u5173\u7cfb\u3002\u751f\u7269\u7cfb\u7edf\u7684\u989d\u5916\u590d\u6742\u6027\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u53d7\u7269\u7406\u5b66\u542f\u53d1\u7684\u89c2\u70b9(\u5982\u4fe1\u606f\u8bba)\u6765\u89e3\u91ca\uff0c\u8fd8\u6709\u5f85\u89c2\u5bdf\u3002\u4e5f\u8bb8\u751f\u7269\u5b66\u548c\u590d\u6742\u7cfb\u7edf\u7684\u7814\u7a76\u603b\u6709\u4e00\u5929\u4f1a\u8fdb\u6b65\u5230\u96be\u4ee5\u514b\u670d\u7684\u96be\u9898\uff0c\u6216\u8005\u5bf9\u8fd9\u4e9b\u95ee\u9898\u8fdb\u884c\u7cbe\u5f69\u7684\u91cd\u5851\u5c06\u5bfc\u81f4\u6d88\u9664\u5f53\u524d\u7684\u6311\u6218\u3002\u8fd9\u53ef\u80fd\u4f1a\u663e\u793a\u51fa\u4e00\u6761\u901a\u5411\u66f4\u7b80\u5355\u7b54\u6848\u7684\u9053\u8def\uff0c\u5c31\u50cf\u67e5\u5c14\u65af\u00b7\u8fbe\u5c14\u6587(Charles Darwin)\u901a\u8fc7\u4ece\u81ea\u7136\u9009\u62e9\u548c\u53d8\u5f02\u7684\u89d2\u5ea6\u91cd\u65b0\u9610\u8ff0\u5173\u4e8e\u751f\u547d\u7684\u8d77\u6e90\u548c\u591a\u6837\u6027\u7684\u95ee\u9898\u6240\u505a\u7684\u90a3\u6837\u3002\n\u7269\u7406\u5b66\u5bb6\u83f2\u5229\u666e\u00b7\u5b89\u5fb7\u68ee(Philip Anderson)\u5728\u4ed6\u7684\u6587\u7ae0\u201c\u66f4\u591a\u5c31\u662f\u4e0d\u540c\u7684\u201d(More Is Different)(1972)\u4e2d\u5f3a\u8c03\u4e86\u8bd5\u56fe\u5c06\u4e00\u5207\u51cf\u5c11\u5230\u6700\u5fae\u89c2\u6c34\u5e73\u7684\u5371\u9669\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4e13\u6ce8\u4e8e\u5728\u4e0d\u540c\u5c3a\u5ea6\u7684\u81ea\u7136\u73b0\u8c61\u4e2d\u53d1\u751f\u7684\u590d\u6742\u6027\u7684\u8dc3\u5347-\u4f8b\u5982\u4ece\u91cf\u5b50\u529b\u5b66\u8f6c\u5411\u5316\u5b66\u3002\u7136\u800c\uff0c\u8bfb\u8005\u7ecf\u5e38\u5ffd\u89c6\u4ed6\u7684\u8bba\u70b9\uff0c\u5373\u6709\u6548\u7684\u7406\u8bba\u5e94\u8be5\u4f9d\u8d56\u4e8e\u89e3\u91ca\u7cfb\u7edf\u6f5c\u5728\u673a\u5236\u7684\u79ef\u6728-\u5373\u4f7f\u8fd9\u4e9b\u79ef\u6728\u662f\u76f8\u5bf9\u8f83\u5927\u6216\u4e2d\u7b49\u5927\u5c0f\u7684\u5b9e\u4f53\u3002\n\u57fa\u4e8e\u540e\u4e00\u79cd\u89c2\u70b9\uff0c\u6211\u4eec\u7684\u8bba\u70b9\u662f\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u9ed1\u6d1e\u662f\u5426\u6bd4\u68ee\u6797\u7b80\u5355\u3002\u76f4\u5230\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u89e3\u91ca\u68ee\u6797\u5b58\u5728\u7684\u666e\u904d\u6709\u6548\u7684\u7406\u8bba\uff0c\u6216\u8005\u76f4\u5230\u6211\u4eec\u80fd\u89c2\u5bdf\u5230\u9ed1\u6d1e\u574d\u584c\u548c\u84b8\u53d1\u7684\u6700\u8be6\u7ec6\u7684\u52a8\u529b\u5b66\uff0c\u6211\u4eec\u624d\u80fd\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u4e0d\u5f7b\u5e95\u5b9a\u4e49\u6211\u4eec\u5411\u6bcf\u4e2a\u7cfb\u7edf\u63d0\u51fa\u7684\u95ee\u9898\u7c7b\u578b\uff0c\u5c31\u4e0d\u80fd\u505a\u51fa\u76f8\u5bf9\u590d\u6742\u7684\u58f0\u660e\u3002\u5728\u67d0\u4e9b\u7c7b\u578b\u7684\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u7684\u77e5\u8bc6\u53ef\u80fd\u4f1a\u53d7\u5230\u51b2\u51fb\uff0c\u4f46\u66f4\u591a\u7684\u65f6\u5019\u662f\u5173\u4e8e\u6211\u4eec\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u5173\u4e8e\u7cfb\u7edf\u672c\u8eab\u3002\n\u6240\u4ee5\u7269\u7406\u53ef\u4ee5\u5f88\u96be\uff0c\u751f\u7269\u53ef\u4ee5\u5f88\u5bb9\u6613\u3002\u96be\u5ea6\u7684\u7a0b\u5ea6\u66f4\u591a\u5730\u53d6\u51b3\u4e8e\u88ab\u95ee\u5230\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u73b0\u573a\u60c5\u51b5\u3002\u5728\u590d\u6742\u7cfb\u7edf\u79d1\u5b66\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u89c6\u89d2\u4e4b\u95f4\u7684\u4ea4\u754c\u5904\u5f80\u5f80\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u8fdb\u6b65\u3002\u524d\u8fdb\u7684\u4e00\u6761\u8def\u662f\u5148\u89e3\u51b3\u7b80\u5355\u7684\u95ee\u9898\uff0c\u7136\u540e\u7528\u6211\u4eec\u7684\u7b54\u6848\u8bd5\u56fe\u627e\u5230\u5bf9\u66f4\u8be6\u7ec6\u7684\u95ee\u9898\u548c\u7406\u8bba\u6709\u5e2e\u52a9\u7684\u539f\u5219\u3002\u901a\u8fc7\u4ece\u7b80\u5355\u7684\u95ee\u9898\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u6162\u6162\u5730\u201c\u79ef\u7d2f\u201d\u5230\u56f0\u96be\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u3002\u6216\u8005\uff0c\u5728\u76f8\u53cd\u7684\u65b9\u5411\u4e0a\uff0c\u89c2\u5bdf\u4e0d\u540c\u5b66\u79d1\u73b0\u8c61\u7684\u5947\u602a\u76f8\u4f3c\u6027\uff0c\u53ef\u80fd\u4f1a\u4f7f\u6211\u4eec\u503e\u5411\u4e8e\u5bfb\u627e\u5168\u65b0\u7684\u673a\u5236\u548c\u539f\u7406\u3002\u8fd9\u6709\u65f6\u9700\u8981\u4e00\u4e2a\u4e0d\u90a3\u4e48\u8be6\u7ec6\u3001\u66f4\u62bd\u8c61\u7684\u89c6\u89d2--\u6211\u4eec\u7684\u540c\u4e8b\u7ea6\u7ff0\u00b7\u7c73\u52d2(John Miller)\u5728\u4ed6\u7684\u4e66\u201c\u7c97\u7565\u770b\u5f85\u6574\u4f53\u201d(2016)\u4e2d\u5f15\u7528\u4e86\u8bfa\u8d1d\u5c14\u5956\u83b7\u5f97\u8005\u7269\u7406\u5b66\u5bb6\u9ed8\u91cc\u00b7\u76d6\u5c14-\u66fc(Murray Gell-Mann)\u7684\u8bdd\u3002\u8fd9\u4e9b\u7c97\u7cd9\u7684\u5916\u8868--\u88ab\u7269\u7406\u5b66\u7684\u9065\u8fdc\u6240\u903c\u8feb\uff0c\u88ab\u751f\u7269\u5b66\u7684\u4eb2\u5bc6\u6027\u6240\u63a9\u76d6--\u5728\u672a\u6765\u7684\u51e0\u5e74\u91cc\u5e94\u8be5\u4f1a\u5728\u79d1\u5b66\u4e0a\u4ea7\u751f\u66f4\u6df1\u523b\u7684\u6d1e\u5bdf\u529b\u548c\u7b80\u5355\u5316\u3002", "note_en": "Talk to high-school students preparing for their science exams, and you\u2019ll probably hear two things: that they\u2019re scared of physics, and relatively comfortable with biology. Strangely, this is contrary to the view of most researchers. The scientific zeitgeist is that physics is easy. Its simplicity comes from an ability to create crystalline theories that are powerfully predictive, for everything from the existence of subatomic particles to how light bends around stars. Biology, on the other hand, is much harder to distil into elegant theorems and mathematical equations. For this reason, some eminent thinkers have  argued that cells and forests are harder to understand than distant and difficult-to-observe black holes.\n But perhaps there is no such thing as an easy or hard discipline. Maybe there are only easy and hard questions. Biology only  seems so hard because it has been defined by a set of very hard questions. Physics only  seems easy because centuries of effort by deeply insightful thinkers have produced a set of answerable questions.\n What makes biology so challenging, ironically, is our closeness to it. Ask yourself: who is \u2018easier\u2019 to understand \u2013 a romantic crush or a work colleague? Our intimacy with biology \u2013 as well as to psychology and social science \u2013 has led us to interrogate these phenomena with profound knowledge already in hand. We ask very detailed questions, and then we\u2019re surprised by the seemingly mysterious or contradictory answers.\n On a walk through the forest, we might observe the unusual shapes of the foliage on a maple tree. That might lead us to wonder why the leaves have lobes, why they turn red in autumn, what insects live in the leaf litter, and how they decompose and feed the soil. These questions are deceptively complex, despite the naturalness with which we ask them. By contrast, the cold vast vacuum of space and the unseeable smallness of quarks are so foreign to us that we are proud \u2013 at least initially \u2013 to say the simplest things about these entities, even just to show that they exist.\n Intimacy has sometimes slowed our understanding in physics, too. The question of how the planets move is one of humanity\u2019s oldest obsessions, and runs through many different mythologies. Yet thanks to our species\u2019 self-absorption, the longstanding theory of epicycles wrongly placed the Earth at the centre of the Universe \u2013 a mistake that persisted for around 2,000 years. When the question was abstracted to matters of force, mass and gravity in Newtonian physics, planetary motion became much easier to predict and understand.\n There are still plenty of hard questions for physicists to puzzle over. If physics pinned its reputation on predicting the next solar flare that could interfere with telecommunications on Earth, it would be viewed as a much more complicated and difficult discipline. Why? Because modelling the many mechanisms that produce the dynamics of the Sun\u2019s surface \u2013 all of the gravitational, electromagnetic, thermal and nuclear processes involved \u2013 is fiendishly tricky. As for planetary motion, we can get a good-enough picture of a planet\u2019s trajectory by recognising that the massiveness of our Sun allows us to ignore the influence of other heavenly bodies. But if we really wanted to attend to these details, we\u2019d soon find that we can\u2019t precisely predict the motion of three bodies of equal mass. Similarly, with chaos theory, we learned that we can make only rough guesses about the specific position of two pendulums whose motion is coupled together. We cannot, however, say with certainty where either pendulum will ever be.\n Perhaps the questions that we have demanded of biology are just too hard. How do we save an individual human life? Why is this bluejay slightly darker than the other? But just because we demand more from biology doesn\u2019t mean we can\u2019t pose slightly easier questions. In fact, drawing on \u2018easy\u2019 physics can help us figure out how to  find those questions. Physicists are particularly good at looking for pervasive, large-scale phenomena that apply across multiple systems and that are likely the result of simple, shared mechanisms.\n Take the idea of  biological scaling. This concept stems from early observations that a mammal\u2019s metabolic rate depends predictably and nonlinearly on body size via a  power law. A power law is a mathematical relationship that tells us how much a feature changes as the size of the system increases by orders of magnitude (that is, by multiples of a certain number, usually 10). So when a creature\u2019s body mass increases by 1,000-fold, the principles of biological scaling accurately predict that its metabolic rate will increase 100-fold.\n But how can the same mathematics apply to something as simple as the gravitational pull between two objects and the messy process of speciation across diverse habitats? In physics, power laws point to shared mechanisms and symmetries that operate across all scales. In biology, our own  research \u2013 as well as  that of Geoffrey B West, James H Brown, and Brian J Enquist \u2013 shows that the fundamental mechanism at work is the structure and flow of vascular networks. It turns out that blood vessels tend to efficiently span the body and deliver resources to all of a creature\u2019s cells while reducing the strain on the heart. This simple insight has given birth to a growing batch of successful theories that use the idea of an optimised biological structure to predict phenomena such as the distribution of  trees in a forest, how long we need to  sleep, the rate of growth of a  tumour, the largest and smallest  sizes of bacteria, and  the tallest possible tree in any environment.\n However, biology can also give rise to its own unique questions. For example, as our colleagues  Jessica Flack and  David Krakauer at the Santa Fe Institute have shown, the information-processing and decision-making capabilities of agents (such as primates, neurons and slime moulds) lead to unique types of feedback, adaptability and causation that differ from purely physical systems. It remains to be seen if the additional complexities of biological systems can be explained by expanding on physics-inspired perspectives such as information theory. It might be that the study of biology and complex systems in general will progress one day to insurmountably hard questions \u2013 or that a brilliant recasting of the questions will lead to the elimination of current challenges. This might show a path to easier answers, as Charles Darwin did by reformulating questions about the origins and diversity of life in terms of natural selection and variation.\n  In his  article \u2018More Is Different\u2019 (1972), the physicist Philip Anderson highlighted the dangers of attempting to reduce everything to the most microscopic level. He focused instead on jumps in complexity that occur at various scales of natural phenomena \u2013 such as moving from quantum mechanics to chemistry. However, readers often overlook his argument that effective theories should rest on building blocks that explain the underlying mechanisms of a system \u2013 even if those building blocks are relatively large or medium-sized entities.\n Building on this latter perspective, our argument is that we  don\u2019t know if black holes are simpler than forests. We  can\u2019t know, until we have a general effective theory that explains the existence of forests or until we can observe the most detailed dynamics of black-hole collapse and evaporation. A statement of relative complexity cannot be made without thoroughly defining the type of questions we are asking for each system. There are probably certain types of enquiries where our knowledge will hit a hard edge, but more often that\u2019s about questions we\u2019re posing than about the systems themselves.\n So physics  can be hard, and biology  can be easy. The degree of difficulty depends more on what questions are being asked than on the field. Within complex-systems science, great advances are often made at the interface between these two perspectives. One path forward is to solve the easy questions first, and then use our answers to try to find principles that are helpful when it comes to more detailed questions and theories. It\u2019s possible that by starting with the easy questions, we can slowly \u2018build up\u2019 to the hard ones. Or, in the opposite direction, observing the strange similarity of phenomena across disciplines might incline us to search for brand new mechanisms and principles. This will sometimes demand a less detailed, more abstract perspective \u2013 what our colleague John Miller, quoting the Nobel prizewinning physicist Murray Gell-Mann, discusses in his book  A Crude Look at the Whole (2016). These crude looks \u2013 forced by the remoteness of physics, and obscured by the intimacy of biology \u2013 should yield many more deep insights and simplifications in science in the years to come.", "posttime": "2020-08-08 19:37:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4f1a,hits", "title": "\u5f53\u79d1\u5b66\u8fbe\u5230\u6781\u9650\u65f6\uff0c\u5b66\u4f1a\u63d0\u51fa\u4e0d\u540c\u7684\u95ee\u9898", "title_en": "When science hits a limit, learn to ask different questions", "transed": 1, "url": "https://sinapticas.com/2020/08/07/when-science-hits-a-limit-learn-to-ask-different-questions/", "via": "", "real_tags": ["\u5b66\u4f1a", "hits"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016994, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6709\u4e00\u4e2a\u5177\u6709c\u4e2a\u670d\u52a1\u5668\u7684\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u53ea\u80fd\u5904\u7406\u5355\u4e2a\u5e76\u53d1\u8bf7\u6c42\uff0c\u5e76\u4e14\u6ca1\u6709\u5185\u90e8\u961f\u5217\u3002\u670d\u52a1\u5668\u4f4d\u4e8e\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u540e\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u5305\u542b\u65e0\u9650\u961f\u5217\u3002\u4e0d\u9650\u6570\u91cf\u7684\u5ba2\u6237\u7aef\u5e73\u5747\u6bcf\u79d2\u5411\u8d1f\u8f7d\u5747\u8861\u63d0\u4f9bc*0.8\u4e2a\u8bf7\u6c42\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528c\u7ebf\u6027\u589e\u52a0\u63d0\u4f9b\u7684\u8d1f\u8f7d\uff0c\u4ee5\u4fdd\u6301\u6bcf\u53f0\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u6052\u5b9a\u3002\u4e00\u65e6\u8bf7\u6c42\u5230\u8fbe\u670d\u52a1\u5668\uff0c\u5e73\u5747\u9700\u8981\u4e00\u79d2\u949f\u6765\u5904\u7406\u3002\u5ba2\u6237\u7aef\u89c2\u5bdf\u5230\u7684\u5e73\u5747\u8bf7\u6c42\u65f6\u95f4\u5982\u4f55\u968fc\u53d8\u5316\uff1f\n\u9009\u9879A\u662f\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u8fc5\u901f\u51cf\u5c11\uff0c\u968f\u7740c\u7684\u589e\u52a0\u9010\u6e10\u63a5\u8fd1\u4e00\u79d2(\u6362\u53e5\u8bdd\u8bf4\uff0c\u6392\u961f\u65f6\u95f4\u63a5\u8fd1\u4e8e\u96f6)\u3002\u9009\u9879B\u662f\u6052\u5b9a\u7684\u3002\u9009\u9879C\u662f\u7ebf\u6027\u6539\u8fdb\uff0c\u800cD\u662f\u5ef6\u8fdf\u7684\u7ebf\u6027\u964d\u4f4e\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u60a8\u8ba4\u4e3a\u5ef6\u8fdf\u5c06\u9075\u5faa\u54ea\u6761\u66f2\u7ebf\uff1f\n\u7a0d\u5fae\u5206\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u5c06\u6709\u52a9\u4e8e\u627e\u51fa\u54ea\u4e00\u4e2a\u662f\u6b63\u786e\u7684\u7b54\u6848\u3002\u9996\u5148\u662f\u540d\u5b57\u3002\u5728\u6392\u961f\u8bba\u7684\u672f\u8bed\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2aM/M/c\u6392\u961f\u7cfb\u7edf\uff1a\u6cca\u677e\u5230\u8fbe\u8fc7\u7a0b\u3001\u6307\u6570\u5206\u5e03\u7684\u5ba2\u6237\u670d\u52a1\u65f6\u95f4\u548cc\u4e2a\u540e\u7aef\u670d\u52a1\u5668\u3002\u5728\u7535\u4fe1\u4e1a\u52a1\u5de5\u7a0b\u4e2d\uff0c\u5b83\u6307\u7684\u662fErlang\u7684\u5ef6\u8fdf\u7cfb\u7edf(\u6216\u8005\uff0c\u56e0\u4e3a\u672f\u8bed\u6709\u8da3\uff0c\u53ebM/M/n)\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6392\u961f\u8bba\u7684\u4e00\u4e2a\u7ecf\u5178\u7ed3\u679c\u6765\u5206\u6790\u8fd9\u4e2a\u7cfb\u7edf\uff1aErlang\u7684C\u516c\u5f0fE2\uff0cn(A)\uff0c\u8be5\u516c\u5f0f\u6839\u636e\u670d\u52a1\u5668\u6570\u91cf(n\u53c8\u79f0\u4e3ac)\u548c\u63d0\u4f9b\u7684\u6d41\u91cfA\u8ba1\u7b97\u8fdb\u5165\u961f\u5217(\u800c\u4e0d\u662f\u7acb\u5373\u5904\u7406)\u7684\u5ba2\u6237\u8bf7\u6c42\u7684\u6982\u7387\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7535\u4fe1\u4e1a\u52a1\u5de5\u7a0b\u624b\u518c\u7684\u7b2c194\u9875\u3002\u4ee5\u4e0b\u662f\u66f2\u7ebf\u7684\u57fa\u672c\u5f62\u72b6(\u4f7f\u7528\u6211\u4eec\u76f8\u540c\u7684\u53c2\u6570)\uff1a\n\u6cbf\u7740\u84dd\u7ebf\u8d70\u5230\u9971\u548c\u70b9\u7684\u4e00\u534a\uff0c\u57282.5 RPS\u63d0\u4f9b\u7684\u8d1f\u8f7d\u4e0b\uff0c\u770b\u770b\u6982\u7387\u662f\u5982\u4f55\u572813%\u5de6\u53f3\u7684\u3002\u73b0\u5728\u8bf7\u770b\u9971\u548c\u70b9\u7684\u4e00\u534a\u5904\u7684\u7d2b\u8272\u7ebf\u6761\uff0c\u53735 RPS\u3002\u53ea\u67093.6%\u3002\u56e0\u6b64\uff0c\u5728\u8d1f\u8f7d\u51cf\u534a\u7684\u60c5\u51b5\u4e0b\uff0c5\u53f0\u670d\u52a1\u5668\u7684\u7cfb\u7edf\u65e0\u9700\u6392\u961f\u5373\u53ef\u5904\u740687%\u7684\u6d41\u91cf\uff0c\u5728\u53cc\u500d\u8d1f\u8f7d\u548c\u53cc\u500d\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u65e0\u9700\u6392\u961f\u5373\u53ef\u5904\u740696.4%\u7684\u6d41\u91cf\u3002\u8fd9\u610f\u5473\u7740\u53ea\u67093.6%\u7684\u4eba\u770b\u5230\u4efb\u4f55\u989d\u5916\u7684\u5ef6\u8fdf\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e00\u6539\u5584\u5b9e\u9645\u4e0a\u662f\u6e10\u8fd1\u63a5\u8fd11\u7684\u3002\u63a8\u7279\u6c11\u610f\u8c03\u67e5\u7684\u6b63\u786e\u7b54\u6848\u662fA\u3002\n\u4f7f\u7528\u5e73\u5747\u6570\u6765\u8861\u91cf\u6f5c\u4f0f\u671f\u662f\u6709\u4e89\u8bae\u7684(\u5c3d\u7ba1\u6216\u8bb8\u5b83\u4e0d\u5e94\u8be5\u5982\u6b64)\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u4e89\u8bae\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u767e\u5206\u4f4d\u6570\u662f\u5426\u4ee5\u540c\u6837\u7684\u901f\u5ea6\u6539\u5584\u3002\u5728\u5c01\u95ed\u7684\u5f62\u5f0f\u4e0b\u505a\u8fd9\u4ef6\u4e8b\u6709\u70b9\u590d\u6742\uff0c\u4f46\u8fd9\u4e2a\u7cfb\u7edf\u8d85\u7ea7\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u8499\u7279\u5361\u7f57\u6a21\u62df\u628a\u5b83\u4eec\u753b\u51fa\u6765\u3002\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u5b8c\u5168\u662f\u4e2a\u597d\u6d88\u606f\u3002\u4e2d\u4f4d\u6570(P50)\u5f88\u597d\u5730\u9075\u5faa\u5e73\u5747\u7ebf\uff0c\u9ad8\u767e\u5206\u4f4d\u6570(\u7b2c99\u548c99.9\u4e2a\u767e\u5206\u4f4d\u6570)\u5f62\u72b6\u76f8\u4f3c\u3002\u6ca1\u6709\u9690\u85cf\u7684\u95ee\u9898\u3002\n\u5bf9\u4e8e\u4e91\u8ba1\u7b97\u548c\u670d\u52a1\u7ecf\u6d4e\u6765\u8bf4\uff0c\u8fd9\u4e5f\u662f\u4e2a\u597d\u6d88\u606f\u3002\u4f7f\u7528\u8f83\u5927\u7684c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u76f8\u540c\u5229\u7528\u7387\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u66f4\u597d\u7684\u5ef6\u8fdf\uff0c\u6216\u8005\u5728\u76f8\u540c\u5ef6\u8fdf\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u66f4\u597d\u7684\u5229\u7528\u7387\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u5728\u76f8\u540c\u7684\u6bcf\u53f0\u670d\u52a1\u5668\u541e\u5410\u91cf\u4e0b\u5b9e\u73b0\u7684\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u5bf9\u5927\u578b\u670d\u52a1\u6765\u8bf4\u662f\u4e2a\u597d\u6d88\u606f\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u597d\u5904\u90fd\u53d1\u751f\u5728\u76f8\u5bf9\u8f83\u5c0f\u7684c\u3002\u968f\u7740c\u7684\u589e\u52a0\uff0c\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e0e\u89c4\u6a21\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u76f8\u5173\u7684\u95ee\u9898\u4f1a\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u8fd9\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\u6709\u4e00\u4e9b\u5408\u7406\u7684\u540e\u7eed\u95ee\u9898\u3002\u5bf9\u4e8e\u6211\u4eec\u968f\u610f\u9009\u62e9\u76840.8\uff0c\u7ed3\u679c\u7a33\u5065\u5417\uff1f\u662f\u7684\uff0c\u5b83\u4eec\u662f1\u3002\u5bf9\u4e8e\u5178\u578b\u7684\u670d\u52a1\uff0c\u6cca\u677e\u5230\u8fbe\u548c\u6307\u6570\u670d\u52a1\u65f6\u95f4\u7684M/M/c\u5047\u8bbe\u662f\u5426\u5408\u7406\uff1f\u6211\u8981\u8bf4\u5b83\u4eec\u662f\u5408\u7406\u7684\uff0c\u5c3d\u7ba1\u662f\u9519\u8bef\u7684\u3002\u6307\u6570\u670d\u52a1\u65f6\u95f4\u5c24\u5176\u9519\u8bef\uff1a\u73b0\u5b9e\u7684\u670d\u52a1\u5f80\u5f80\u66f4\u50cf\u662f\u5bf9\u6570\u6b63\u6001\u5206\u5e03\u3002\u8fd9\u53ef\u80fd\u65e0\u5173\u7d27\u8981\u3002\u6709\u5173\u8fd9\u4e00\u70b9\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u4e0b\u6b21\u518d\u8bf4\u5427\u3002\n\u66f4\u65b0\uff1aDan Ports\u7528\u4e00\u4e2a\u8ff7\u4eba\u7684Twitter\u5e16\u5b50\u56de\u5e94\u4e86\u6211\u7684\u5e16\u5b50\uff0c\u8be5\u5e16\u5b50\u6307\u5411\u4e86SoCC&#39\uff1b14\u7684\u5c3e\u90e8\u5ef6\u8fdf\u7684\u786c\u4ef6\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7ea7\u6765\u6e90\uff0c\u8be5\u5e16\u5b50\u7814\u7a76\u4e86\u8fd9\u79cd\u5f71\u54cd\u5728\u91ce\u5916\u7684\u60c5\u51b5\u3002\n\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u3002\u4e00\u65e6\u5e73\u5747\u5230\u8fbe\u7387\u8d85\u8fc7\u7cfb\u7edf\u5b8c\u6210\u8bf7\u6c42\u7684\u80fd\u529b\uff0c\u961f\u5217\u5c31\u4f1a\u65e0\u9650\u5236\u5730\u589e\u957f\uff0c\u7b49\u5f85\u65f6\u95f4\u5c31\u4f1a\u53d8\u5f97\u65e0\u9650\u957f\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u8bf7\u6c42\u8d1f\u8f7d\u8d85\u8fc7c\u65f6\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u66f4\u4e00\u822c\u5730\uff0c\u8981\u4f7f\u6b64\u7cfb\u7edf\u7a33\u5b9a\uff0c\u03bb/c\u03bc\u5fc5\u987b\u5c0f\u4e8e1\uff0c\u5176\u4e2d\u03bb\u662f\u5e73\u5747\u5230\u8fbe\u7387\uff0c\u03bc\u662f\u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42\u6240\u7528\u7684\u5e73\u5747\u65f6\u95f4\u3002", "note_en": "I have a system with  c servers, each of which can only handle a single concurrent request, and has no internal queuing. The servers sit behind a load balancer, which contains an infinite queue. An unlimited number of clients offer  c * 0.8 requests per second to the load balancer on average. In other words, we increase the offered load linearly with  c to keep the per-server load constant. Once a request arrives at a server, it takes one second to process, on average. How does the client-observed mean request time vary with  c?\n  Option A is that the mean latency decreases quickly, asymptotically approaching one second as  c increases (in other words, the time spent in queue approaches zero). Option B is constant. Option C is a linear improvement, and D is a linear degradation in latency. Which curve do you, intuitively, think that the latency will follow?\n  Breaking down the problem a bit will help figure out which is the right answer. First, names. In the terminology of queue theory, this is an  M/M/c queuing system: Poisson arrival process, exponentially distributed client service time, and  c backend servers. In teletraffic engineering, it&#39;s  Erlang&#39;s delay system (or, because terminology is fun, M/M/n). We can use a classic result of queuing theory to analyze this system: Erlang&#39;s C formula  E 2,n(A), which calculates the probability that an incoming customer request is enqueued (rather than handled immediately), based on the number of servers ( n aka  c), and the offered traffic  A. For the details, see page 194 of the  Teletraffic Engineering Handbook. Here&#39;s the basic shape of the curve (using our same parameters):\n  Follow the blue line up to half the saturation point, at 2.5 rps offered load, and see how the probability is around 13%. Now look at the purple line at half its saturation point, at 5 rps. Just 3.6%. So at half load the 5-server system is handling 87% of traffic without queuing, with double the load and double the servers, we handle 96.4% without queuing. Which means only 3.6% see any additional latency.\n It turns out this improvement is, indeed, asymptotically approaching 1. The right answer to the Twitter poll is A.\n Using the mean to measure latency is controversial (although  perhaps it shouldn&#39;t be). To avoid that controversy, we need to know whether the percentiles get better at the same rate. Doing that in closed form is somewhat complicated, but this system is super simple, so we can plot them out using a Monte-Carlo simulation. The results look like this:\n  That&#39;s entirely good news. The median (p50) follows the mean line nicely, and the high percentiles (99 th and 99.9 th) have a similar shape. No hidden problems.\n It&#39;s also good news for cloud and service economics. With larger  c we get better latency at the same utilization, or better utilization for the same latency, all at the same per-server throughput. That&#39;s not good news only for giant services, because most of this goodness happens at relatively modest  c. There are few problems related to scale and distributed systems that get easier as  c increases. This is one of them.\n There are some reasonable follow-up questions. Are the results robust to our arbitrary choice of 0.8? Yes, they are  1. Are the M/M/c assumptions of Poisson arrivals and exponential service time reasonable for typical services? I&#39;d say they are reasonable, albeit wrong. Exponential service time is especially wrong: realistic services tend to be something more like log-normal. It may not matter. More on that another time.\n Update: Dan Ports responded to my thread with a fascinating  Twitter thread pointing to  Tales of the Tail: Hardware, OS, and Application-level Sources of Tail Latency from SoCC&#39;14 which looks at this effect in the wild.\n  Up to a point. As soon as the mean arrival rate exceeds the system&#39;s ability to complete requests, the queue grows without bound and latency goes to infinity. In our case, that happens when the request load exceeds  c. More generally, for this system to be stable  \u03bb/c\u03bc must be less than 1, where  \u03bb is the mean arrival rate, and  \u03bc is the mean time taken for a server to process a request.", "posttime": "2020-08-08 18:48:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d1f\u8f7d\u5e73\u8861,economics,\u670d\u52a1\u5668", "title": "\u8d1f\u8f7d\u5e73\u8861\u7cfb\u7edf\u7684\u60ca\u4eba\u7ecf\u6d4e\u6027", "title_en": "Surprising Economics of Load-Balanced Systems", "transed": 1, "url": "http://brooker.co.za/blog/2020/08/06/erlang.html", "via": "", "real_tags": ["\u8d1f\u8f7d\u5e73\u8861", "economics", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "88158c4ac86616583a36b0183427692c.jpg", "infoid": 1016993, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u548c\u8c37\u6b4c\u5df2\u7ecf\u544a\u8bc9\u5458\u5de5\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5728\u5bb6\u5de5\u4f5c\u52302021\u5e74\u590f\u5929\u3002\nAtlassian\u672c\u5468\u901a\u77e5\u5176\u8fd15000\u540d\u5458\u5de5\uff0c\u5b83\u5c06\u91c7\u53d6\u8fdb\u4e00\u6b65\u63aa\u65bd\uff0c\u4e0d\u8ba9\u4ed6\u4eec\u56de\u5230\u529e\u516c\u5ba4\u3002\n\u8f6f\u4ef6\u516c\u53f8Atlassian\u5e76\u6ca1\u6709\u642c\u8d70\u5b83\u7684\u529e\u516c\u5ba4\u3002\u5b83\u53ea\u662f\u544a\u8bc9\u5458\u5de5\uff0c\u4ed6\u4eec\u4e0d\u5fc5\u56de\u5230\u81ea\u5df1\u7684\u5c97\u4f4d\u4e0a\u3002\n\u8fd9\u662f\u4e00\u4e2a\u5927\u80c6\u7684\u9009\u62e9\uff0c\u5373\u4f7f\u662f\u5728\u51e0\u4e4e\u53ef\u4ee5\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u8fd0\u8425\u7684\u79d1\u6280\u516c\u53f8\u4e2d\u4e5f\u662f\u5982\u6b64\u3002Facebook\u548c\u8c37\u6b4c\u5219\u6ca1\u6709\u90a3\u4e48\u6fc0\u70c8\u3002\u4e24\u4eba\u90fd\u544a\u8bc9\u5de5\u4eba\uff0c\u4ed6\u4eec\u5c06\u80fd\u591f\u5728\u5bb6\u4e2d\u5de5\u4f5c\u52302021\u5e74\u590f\u5929\u3002\n\u9664\u4e86\u89e3\u653e\u73b0\u6709\u5458\u5de5\u5916\uff0c\u65b0\u65b9\u6cd5\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u516c\u53f8\u5728\u4e0e\u5176\u4ed6\u5927\u516c\u53f8\u7ade\u4e89\u65f6\u901a\u5e38\u5fc5\u987b\u6177\u6168\u652f\u4ed8\u7684\u4e3b\u8981\u9886\u57df\u4ee5\u5916\u7684\u62db\u8058\u3002\n\u8be5\u516c\u53f8\u5728\u5468\u4e09\u53d1\u5e03\u7684\u4e00\u7bc7\u5185\u90e8\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u6211\u4eec\u5c06\u5bfb\u627e\u4ee4\u4eba\u60ca\u53f9\u7684\u3001\u591a\u6837\u5316\u7684\u4eba\u624d\uff0c\u4e0d\u53d7\u6211\u4eec\u529e\u516c\u5ba4\u5b9e\u9645\u8db3\u8ff9\u7684\u9650\u5236\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u5728\u5168\u7403\u4e2d\u5fc3\u4e89\u593a\u4eba\u624d\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u4e3a\u90a3\u4e9b\u6211\u4eec\u4ee5\u524d\u65e0\u6cd5\u5230\u8fbe\u7684\u5730\u65b9\u7684\u4eba\u521b\u9020\u673a\u4f1a\u3002\nAtlassian\u7684\u4ea7\u54c1\u5e2e\u52a9\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u548c\u5176\u4ed6\u4eba\u8ddf\u8e2a\u4ee3\u7801\u3001\u9879\u76ee\u3001\u95ee\u9898\u548c\u5176\u4ed6\u5de5\u4f5c\u3002\u4e9a\u7279\u5170\u5927\u7684\u7ade\u4e89\u5bf9\u624b\u4e4b\u4e00\uff0c\u79c1\u4eba\u6240\u6709\u7684GitLab\uff0c\u5c3d\u7ba1\u5df2\u7ecf\u53d1\u5c55\u52301000\u591a\u4eba\uff0c\u4f46\u4ece\u672a\u62e5\u6709\u8fc7\u529e\u516c\u5ba4\u3002\n\u5b83\u7684\u6240\u6709\u5730\u70b9\uff0c\u5305\u62ec\u6fb3\u5927\u5229\u4e9a\u6089\u5c3c\u7684\u603b\u90e8\uff0c\u4ee5\u53ca\u65e7\u91d1\u5c71\u3001\u963f\u59c6\u65af\u7279\u4e39\u3001\u5370\u5ea6\u3001\u65e5\u672c\u3001\u83f2\u5f8b\u5bbe\u548c\u571f\u8033\u5176\u7684\u5730\u70b9\u90fd\u5c06\u7ee7\u7eed\u8425\u4e1a\uff0c\u8be5\u516c\u53f8\u9884\u8ba1\u5c06\u5bf9\u5b83\u4eec\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u4fbf\u80fd\u591f\u6709\u6548\u5229\u7528\u3002\u5982\u679c\u5458\u5de5\u60f3\u8981\u4f7f\u7528\uff0c\u6b22\u8fce\u4ed6\u4eec\u56de\u5230\u529e\u516c\u5ba4\u3002\n\u4e9a\u7279\u5170\u5927\u8ba1\u5212\u7684\u4e00\u4e9b\u7ec6\u8282\u5c1a\u672a\u6572\u5b9a\u3002\u8fd9\u4f4d\u77e5\u60c5\u4eba\u58eb\u8868\u793a\uff0c\u8be5\u516c\u53f8\u5c1a\u672a\u51b3\u5b9a\u642c\u8fc1\u5230\u5176\u4ed6\u5730\u533a\u7684\u5458\u5de5\u7684\u85aa\u916c\u53ef\u80fd\u4f1a\u5982\u4f55\u53d8\u5316\uff0c\u4e5f\u6ca1\u6709\u8ba1\u7b97\u51fa\u5728\u6bcf\u4e2a\u65f6\u533a\u5de5\u4f5c\u7684\u5408\u9002\u4eba\u6570\uff0c\u4ee5\u786e\u4fdd\u8db3\u591f\u591a\u7684\u91cd\u53e0\u3002\n\u6839\u636e\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0cAtlassian\u5c06\u8861\u91cf\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u4eba\u82b1\u5728\u5de5\u4f5c\u4e0a\u7684\u5c0f\u65f6\u6570\u3002", "note_en": "Facebook and Google have told employees they can work from home through the summer of 2021.\n Atlassian informed its nearly 5,000 employees this week that it&#39;s going further by not asking them to come back to offices.\n Software company  Atlassian\u00a0isn&#39;t getting rid of its offices. It&#39;s just telling employees they don&#39;t have to return to them.\n It&#39;s a bold choice, even among technology companies that can operate virtually as the coronavirus pandemic rolls on.  Facebook and  Google have been less drastic.  Both told workers they would be able to keep working from home through the summer of 2021.\n  Besides freeing up current employees, the new approach could help with hiring outside major areas where the company would ordinarily have to pay generously while competing with other major companies.\n &#34;We will seek out amazing, diverse talent unbounded by the physical footprint of our offices,&#34; the company said in an internal blog post published on Wednesday. &#34;We will continue to compete for talent in the global hubs, and we will be able to create opportunities for those in places we would have previously not been able to reach.&#34;\n Atlassian&#39;s products help software developers and others keep track of code, projects, issues and other work. One of Atlassian&#39;s competitors, privately held GitLab,  has never had an office despite having grown past 1,000 people.\n  All of its locations, including its headquarters in Sydney, Australia, as well as locations in San Francisco, Amsterdam, India, Japan, the Philippines and Turkey, will remain open, and the company expects to adjust them so they can be used efficiently. Employees will be welcome to return to the offices should they want to use them.\n  Some details of Atlassian&#39;s plan have yet to be finalized. The company hasn&#39;t decided how compensation might change for employees who relocate to other regions, nor has it figured out the right number of people to work in each time zone to ensure a sufficient amount of overlap, the person said.\n Atlassian will measure outcomes, rather than the number of hours each person spends working, according to the blog post.", "posttime": "2020-08-08 18:23:55", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u544a\u8bc9,tells", "title": "Atlassian\u544a\u8bc9\u5458\u5de5\u4ed6\u4eec\u53ef\u4ee5\u6c38\u8fdc\u5728\u5bb6\u5de5\u4f5c", "title_en": "Atlassian Tells Employees They Can Work From Home Forever", "transed": 1, "url": "https://www.cnbc.com/2020/08/07/atlassian-tells-employees-they-can-work-from-home-indefinitely.html", "via": "", "real_tags": ["\u544a\u8bc9", "tells"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u4ee5\u641c\u7d22\u7d22\u5c3cVaio UX\u5fae\u578bPC\u662f\u4e00\u6b3e\u8d85\u79fb\u52a8\u4fbf\u643a\u5f0f\u8ba1\u7b97\u673a(UMPC)\uff0c\u4e8e2006\u5e74\u9996\u6b21\u4e0a\u5e02\u3002\u5b83\u91cd\u7ea6490-544\u514b(1.20-1.27\u78c5)\uff0c\u914d\u6709\u6ed1\u51fa\u5f0fQWERTY\u952e\u76d8\u3001\u89e6\u6478\u5c4f\u3001\u82f1\u7279\u5c14\u9177\u777f2\u5355\u6838\u5904\u7406\u5668\u3001\u84dd\u7259\u3001Wi-Fi\u548cWWAN\u3002\u5c3d\u7ba1\u6ca1\u6709\u6b63\u5f0f\u58f0\u660e\uff0c\u751a\u81f3\u7d22\u5c3c\u6697\u793aUX\u662f\u4e00\u4e2a\u65b0\u65b9\u5411\u7684\u4e3e\u63aa\uff0c\u800c\u4e0d\u662f\u8fd9\u79cd\u8d8b\u52bf\u7684\u5177\u4f53\u5ef6\u7eed\uff0c\u4f46\u7d22\u5c3cUX\u88ab\u4e00\u4e9b\u4eba(\u8c01\uff1f)\u731c\u6d4b\u3002\u6210\u4e3a\u5e7f\u53d7\u6b22\u8fce\u7684\u7d22\u5c3cU\u7cfb\u5217\u7684\u6700\u65b0\u578b\u53f7\u3002\u7136\u800c\uff0c\u5173\u4e8eUX\u662f\u5426\u662f\u771f\u6b63\u7684\u5fae\u578bPC\u4ecd\u5b58\u5728\u4e89\u8bae\u3002\n\n\u6ce8\uff1a\u65e5\u672c\u673a\u578b\u5305\u62ec533\u5146\u8d6b\u5185\u5b58\uff0c\u5c11\u6570\u5e02\u573a(\u6b27\u6d32\u3001\u6fb3\u5927\u5229\u4e9a\u7b49)\u4e5f\u662f\u5982\u6b64\u3002\u6a21\u7279\u4eec\u3002\u7f8e\u56fd\u7684\u6ca1\u6709533\u5146\u8d6b\uff0c\u4f46\u901f\u5ea6\u8f83\u6162\u7684\u662f400\u5146\u8d6b\u3002\n\u82f1\u7279\u5c14\u56fe\u5f62\u5a92\u4f53\u52a0\u901f\u5668950\u56fe\u5f62\u5361(128 MB(128 MB)\u5171\u4eabRAM)-\u6709\u4e9b\u6709256 MB\u3002\n\u7ea6\u7ff0\u00b7\u5eb7\u7eb3\u5728\u201c\u7ec8\u7ed3\u8005\u6551\u8d4e\u201d\u4e2d\u4f7f\u7528\u4e86\u4e00\u6b3e\u9ed1\u8272\u7684Vaio UX\u3002\u5b83\u88ab\u7528\u6765\u4fb5\u5165\u6c7d\u8f66\u7ec8\u7ed3\u8005\uff0c\u8ffd\u8e2a\u51ef\u5c14\u00b7\u91cc\u65af\u88ab\u56da\u7981\u5728\u5929\u7f51\u7684\u7262\u623f\u3002\n\u6000\u514b\u91cc\u592b\u00b7\u8ba9(Wyclef Jean)\u7684\u6b4c\u66f2\u201c\u6700\u751c\u7f8e\u7684\u5973\u5b69\u201d(Dollar Bill)\u7684\u97f3\u4e50\u5f55\u50cf\u5e26\u4e2d\u51fa\u73b0\u4e86\u4e00\u53f0Vaio UX\u3002UX\u5411Wyclef Jean\u4f20\u8fbe\u4e86\u8fd9\u6837\u7684\u4fe1\u606f\uff1a\u4ed6\u5fc5\u987b\u5c06\u8fd9\u4f4d\u6700\u751c\u7f8e\u7684\u5973\u5b69\u4ece\u88ab\u9a71\u9010\u5230\u4e00\u4e2a\u654c\u5bf9\u56fd\u5bb6\u4e2d\u89e3\u6551\u51fa\u6765\u3002\n\u53ef\u4ee5\u770b\u5230\u7f57\u5fb7\u5c3c\u00b7\u9ea6\u51ef\u5728\u201c\u661f\u9645\u4e4b\u95e8\u4e9a\u7279\u5170\u8482\u65af\u201d\u7684\u51e0\u96c6\u4e2d\u4f7f\u7528\u4e86\u4e00\u96c6\uff0c\u4ed6\u4e5f\u4f7f\u7528\u4e86OQO UMPC\u3002\n\u57282008\u5e74\u7684\u7535\u5f71\u201c\u91cf\u5b50\u5371\u673a\u201d\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u6bd4\u5c14\u00b7\u5766\u7eb3\u6b63\u5728\u4f7f\u7528\u7d22\u5c3cVaio UX\u3002\nR\u00b7\u51ef\u5229(R.Kelly)\u4e3b\u6f14\u4e9a\u745f\uff1aR\u00b7\u51ef\u5229(R.Kelly)\u5728\u770b\u4e9a\u745f\u5728\u7d22\u5c3cVGN-UX 390\u4e0a\u64ad\u653e\u7684\u4e00\u4f4d\u5973\u58eb\u7684\u5e7b\u706f\u7247\u3002[1][1]\u3002\n\u5728\u7535\u89c6\u8282\u76ee\u201c24\u5c0f\u65f6\u201d\u7684\u4e00\u96c6(\u4e00\u5c0f\u65f6)\u4e2d\uff0cVaio UX\u88ab\u7528\u4f5c\u884c\u674e\u7bb1\u6838\u6b66\u5668\u6b66\u88c5\u88c5\u7f6e\u3002\n\u83b1\u5229\u00b7\u666e\u5c14\u5728\u201c\u56fd\u5bb6\u5b9d\u85cf\u201d\u4e2d\u4f7f\u7528\u4e86Vaio UX\uff0c\u540c\u65f6\u6355\u6349\u5230\u4e86\u72ec\u7acb\u5ba3\u8a00\u7684\u5b89\u5168\u6444\u50cf\u5934\u6d41\uff0c\u5e76\u5728\u201c\u56fd\u5bb6\u5b9d\u85cf2\u201d\u4e2d\u6f5c\u5165\u4e86\u767d\u91d1\u6c49\u5bab\u3002\n\u5728\u201c\u7c89\u7ea2\u8c792\u201d\u4e2d\uff0c\u5f53\u68a6\u4e4b\u961f\u6b63\u5728\u8c03\u67e5\u88ab\u76d7\u7684\u7c89\u7ea2\u8c79\u94bb\u77f3\u7684\u72af\u7f6a\u73b0\u573a\u65f6\uff0c\u8d24\u6cbb\u4f7f\u7528\u4e86\u4e00\u53f0\u7d22\u5c3cVaio UX\u3002", "note_en": "Jump to navigation  Jump to search  The  Sony  Vaio UX Micro PC is an Ultra-Mobile Portable Computer ( UMPC) first marketed in 2006. It weighs around 490\u2013544 g (1.20\u20131.27  lb), and has a slide-out  QWERTY keyboard, touchscreen,  Intel Core 2 Solo processor,  Bluetooth,  Wi-Fi, and  WWAN. Though not officially stated as such, and even to a point implied by Sony that the UX is a move in a new direction and not a specific continuation of such, the Sony UX is speculated by some [   who?] to be the newest model in the popular  Sony U-series. However, there is still debate over whether UX is a genuine Micro PC or not.\n \n NOTE\u00a0: Japanese models include 533\u00a0MHz memory and so do the minority markets ( Europe, Australia etc. ) models. The US ones do not have 533\u00a0MHz but slower 400\u00a0MHz.\n  Intel Graphics Media Accelerator 950 Graphics Card (128 MB (128  MB) Shared RAM) - some have 256 MB\n  A black Vaio UX was used by  John Connor in   Terminator Salvation. It was used to hack mototerminator, track the cell Kyle Reese was being held captive in at Skynet.\n A Vaio UX is featured in the music video for the song &#34; Sweetest Girl (Dollar Bill)&#34; by  Wyclef Jean. The UX delivers the message to  Wyclef Jean that he must rescue the &#34;sweetest girl&#34; from  deportation to a hostile  country.\n Rodney McKay can be seen using one in several episodes of   Stargate Atlantis, he&#39;s also used  OQO UMPCs.\n Bill Tanner can be seen using a Sony Vaio UX in the 2008 motion picture   Quantum of Solace.\n &#34;Same Girl&#34; by R. Kelly featuring Usher: R. Kelly looks at Usher&#39;s slideshow of the a lady on what appears to be the Sony VGN-UX 390.  [1] [1]\n A Vaio UX is used as  suitcase nuke arming device in one episode (hour) of the television show   24.\n  Riley Poole used a Vaio UX in   National Treasure while capturing the security camera stream of the declaration of independence and to infiltrate Buckingham Palace in   National Treasure 2.\n In  The Pink Panther 2, Kenji uses a Sony Vaio UX when the Dream Team is investigating the crime scene of the stolen Pink Panther diamond.", "posttime": "2020-08-08 16:23:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "vaio,\u7d22\u5c3c", "title": "\u7d22\u5c3cVaio UX\u5fae\u578bPC(2006)", "title_en": "Sony Vaio UX Micro PC (2006)", "transed": 1, "url": "https://en.wikipedia.org/wiki/Sony_Vaio_UX_Micro_PC", "via": "", "real_tags": ["vaio", "\u7d22\u5c3c"]}, {"category": "", "categoryclass": "", "imagename": "e2482f7f4fb2d2b1bc14793c29c6ba31.png", "infoid": 1016988, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e4b\u524d\u62ab\u9732\u7684\u51e0\u79cd\u9488\u5bf9\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6295\u673a\u6027\u6267\u884c\u653b\u51fb(\u5982Meltdown\u548cFo)\u80cc\u540e\u7684\u6839\u672c\u539f\u56e0\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e4b\u524d\u62ab\u9732\u7684\u51e0\u79cd\u9488\u5bf9\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6295\u673a\u6027\u6267\u884c\u653b\u51fb(\u5982Meltdown\u548cPrehadow)\u80cc\u540e\u7684\u6839\u672c\u539f\u56e0\u88ab\u9519\u8bef\u5730\u5f52\u56e0\u4e8e\u201c\u9884\u53d6\u6548\u5e94\u201d\uff0c\u5bfc\u81f4\u786c\u4ef6\u4f9b\u5e94\u5546\u53d1\u5e03\u4e86\u4e0d\u5b8c\u6574\u7684\u7f13\u89e3\u548c\u5bf9\u7b56\u3002\n\u683c\u62c9\u8328\u7406\u5de5\u5927\u5b66(Graz University Of Technology)\u548cCISPA Helmholtz\u4fe1\u606f\u5b89\u5168\u4e2d\u5fc3(CISPA Helmholtz Center For Information Security)\u7684\u4e00\u7ec4\u5b66\u8005\u4e0e\u9ed1\u5ba2\u65b0\u95fb\u5206\u4eab\u4e86\u4ed6\u4eec\u7684\u53d1\u73b0\uff0c\u6700\u7ec8\u63ed\u793a\u4e86\u5185\u6838\u5730\u5740\u6700\u521d\u88ab\u7f13\u5b58\u7684\u786e\u5207\u539f\u56e0\uff0c\u5e76\u63d0\u51fa\u4e86\u51e0\u79cd\u5229\u7528\u4e4b\u524d\u672a\u77e5\u7684\u6f5c\u5728\u95ee\u9898\u7684\u65b0\u653b\u51fb\uff0c\u4f7f\u653b\u51fb\u8005\u80fd\u591f\u55c5\u63a2\u51fa\u654f\u611f\u6570\u636e\u3002\n\u8fd9\u9879\u65b0\u7684\u7814\u7a76\u89e3\u91ca\u8bf4\uff0c\u5fae\u4f53\u7cfb\u7ed3\u6784\u653b\u51fb\u5b9e\u9645\u4e0a\u662f\u7531\u5185\u6838\u4e2d\u7528\u6237\u7a7a\u95f4\u5bc4\u5b58\u5668\u7684\u6295\u673a\u6027\u53d6\u6d88\u5f15\u7528\u5f15\u8d77\u7684\uff0c\u8fd9\u4e0d\u4ec5\u5f71\u54cd\u4e86\u91c7\u7528\u6700\u65b0\u786c\u4ef6\u7f13\u89e3\u7684\u6700\u65b0Intel CPU\uff0c\u8fd8\u5f71\u54cd\u4e86ARM\u3001IBM\u548cAMD\u7684\u51e0\u4e2a\u73b0\u4ee3\u5904\u7406\u5668-\u4ee5\u524d\u88ab\u8ba4\u4e3a\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\n\u7814\u7a76\u4eba\u5458\u544a\u8bc9\u201c\u9ed1\u5ba2\u65b0\u95fb\u201d\uff1a\u201c\u6211\u4eec\u53d1\u73b0\uff0c\u8fc7\u53bb4\u5e74\u91cc\uff0c\u51e0\u7bc7\u5b66\u672f\u8bba\u6587\u4e2d\u62a5\u9053\u7684\u5f71\u54cd\u6ca1\u6709\u88ab\u6b63\u786e\u7406\u89e3\uff0c\u5bfc\u81f4\u4e86\u5bf9\u5bf9\u7b56\u7684\u9519\u8bef\u5047\u8bbe\u3002\u201d\n\u201c\u8fd9\u79cd\u9884\u53d6\u6548\u5e94\u5b9e\u9645\u4e0a\u4e0e\u8f6f\u4ef6\u9884\u53d6\u6307\u4ee4\u6216\u7531\u4e8e\u5185\u5b58\u8bbf\u95ee\u9020\u6210\u7684\u786c\u4ef6\u9884\u53d6\u6548\u5e94\u65e0\u5173\uff0c\u800c\u662f\u7531\u5185\u6838\u4e2d\u7528\u6237\u7a7a\u95f4\u5bc4\u5b58\u5668\u7684\u63a8\u6d4b\u6027\u53d6\u6d88\u5f15\u7528\u5f15\u8d77\u7684\u3002\u201d\n\u9664\u4e86\u5206\u6790\u9884\u53d6\u6548\u5e94\u7684\u5b9e\u9645\u6839\u672c\u539f\u56e0\u5916\uff0c\u7814\u7a76\u7684\u5176\u4ed6\u4e00\u4e9b\u91cd\u8981\u53d1\u73b0\u5305\u62ec\uff1a\n\u53d1\u73b0\u51e0\u4e2a\u5229\u7528\u6839\u672c\u539f\u56e0\u7684\u65b0\u653b\u51fb\uff0c\u5305\u62ec\u66f4\u53d7\u9650\u4e0a\u4e0b\u6587\u4e2d\u7684\u5730\u5740\u8f6c\u6362\u653b\u51fb\u3001\u7279\u5b9a\u65b9\u6848\u4e2d\u5bc4\u5b58\u5668\u503c\u7684\u76f4\u63a5\u6cc4\u6f0f\u4ee5\u53ca\u9488\u5bf9\u975eL1\u6570\u636e\u7684\u7aef\u5230\u7aef\u524d\u77bb\u5229\u7528\u3002\n\u4e00\u79cd\u65b0\u7684\u8de8\u6838\u5fc3\u9690\u853d\u901a\u9053\u653b\u51fb\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u5728\u4e0d\u4f9d\u8d56\u5171\u4eab\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u89c2\u5bdf\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740(\u6216\u503c)\u7684\u7f13\u5b58\u3002\nSPECTE\u201c\u9884\u53d6\u201d\u5c0f\u5de5\u5177\u53ef\u76f4\u63a5\u6cc4\u6f0f\u5b9e\u9645\u6570\u636e\uff0c\u8fd9\u4e0d\u4ec5\u4f7fZombieLoad\u653b\u51fb\u5728\u82f1\u7279\u5c14CPU\u4e0a\u9ad8\u6548\u5730\u4ece\u5185\u90e8\u7f13\u51b2\u533a\u6216\u5185\u5b58\u4e2d\u6cc4\u6f0f\u654f\u611f\u6570\u636e\uff0c\u800c\u4e14\u8fd8\u4f1a\u5f71\u54cd\u975e\u82f1\u7279\u5c14CPU\u3002\n\u6295\u673a\u6027\u7684\u53d6\u6d88\u5f15\u7528\u95ee\u9898-\u5728\u67d0\u4e9b\u653b\u51fb\u4e2d\uff0c\u5982Rowhammer\u3001\u7f13\u5b58\u653b\u51fb\u548c\u620f\u5267\u6027\u653b\u51fb-\u53ef\u80fd\u4f1a\u8ba9\u653b\u51fb\u8005\u6062\u590dJavaScript\u53d8\u91cf\u7684\u7269\u7406\u5730\u5740\uff0c\u5e76\u901a\u8fc7Web\u6d4f\u89c8\u5668\u8fdc\u7a0b\u77ac\u65f6\u6267\u884c\u6765\u6cc4\u9732\u4fe1\u606f\u3002\n\u6b64\u5916\uff0c\u7814\u7a76\u4eba\u5458\u8fd8\u8bc1\u660e\uff0c\u5373\u4f7f\u542f\u7528\u4e86\u5efa\u8bae\u7684\u7f13\u89e3\u63aa\u65bd\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u82f1\u7279\u5c14CPU\u4e0a\u7684\u524d\u5146\u6f0f\u6d1e\u3002\u8fd9\u662f\u56e0\u4e3a\u653b\u51fb\u53ef\u4ee5\u5b89\u88c5\u5728\u5305\u542b\u201c\u9884\u53d6\u201d\u5c0f\u5de5\u5177\u7684\u5185\u6838\u7248\u672c\u4e0a\u672a\u9a7b\u7559\u5728\u4e00\u7ea7\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u4e0a\u3002\n\u8fd9\u80cc\u540e\u7684\u60f3\u6cd5\u662f\u76f4\u622a\u4e86\u5f53\u7684\u3002\u7cfb\u7edf\u8f6f\u4ef6\u4f9d\u9760CPU\u7684\u5730\u5740\u8f6c\u6362\u673a\u5236\u5b9e\u73b0\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u9694\u79bb\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5176\u5916\u90e8\u7684\u4efb\u610f\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\n\u56e0\u6b64\uff0c\u5730\u5740\u8f6c\u6362\u5145\u5f53\u5c06\u7531\u7a0b\u5e8f\u4f7f\u7528\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u4e2d\u95f4\u5c42\u3002\n\u865a\u62df\u5730\u5740\u7a7a\u95f4\u8fd8\u5305\u62ec\u4e00\u4e2a\u5185\u6838\u5730\u5740\u7a7a\u95f4\u6765\u5bb9\u7eb3Linux\u5185\u6838\u7ebf\u7a0b\uff0c\u4ece\u800c\u4f7f\u5f97\u5e95\u5c42\u786c\u4ef6\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u5904\u7406\u6765\u81ea\u7528\u6237\u7ebf\u7a0b\u7684\u7279\u6743\u6307\u4ee4\u3002\n\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u540d\u4e3a\u5185\u6838\u9875\u8868\u9694\u79bb(KPTI\u6216Kaiser)\u7684\u6280\u672f\u4fdd\u62a4\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u514d\u53d7\u9884\u53d6\u4fa7\u901a\u9053\u653b\u51fb\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5b83\u4e0d\u80fd\u4fdd\u8bc1\u5b8c\u5168\u9632\u6b62\u5730\u5740\u8f6c\u6362\u653b\u51fb\uff0c\u5373\u653b\u51fb\u8005\u8bd5\u56fe\u68c0\u67e5\u4e24\u4e2a\u4e0d\u540c\u7684\u865a\u62df\u5730\u5740\u662f\u5426\u6620\u5c04\u5230\u76f8\u540c\u7684\u7269\u7406\u5730\u5740\u3002KPTI\u6216Kaiser\u5b9e\u65bd\u4e25\u683c\u7684\u5185\u6838\u548c\u7528\u6237\u7a7a\u95f4\u9694\u79bb\uff0c\u4ee5\u4fbf\u786c\u4ef6\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\u4e0d\u4f1a\u6301\u6709\u4efb\u4f55\u6709\u5173\u5185\u6838\u5730\u5740\u7684\u4fe1\u606f\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u201c\u5730\u5740\u8f6c\u6362\u653b\u51fb\u5141\u8bb8\u975e\u7279\u6743\u5e94\u7528\u7a0b\u5e8f\u5c06\u4efb\u610f\u5185\u6838\u5730\u5740\u63d0\u53d6\u5230\u7f13\u5b58\u4e2d\uff0c\u4ece\u800c\u572864\u4f4dLinux\u7cfb\u7edf\u4e0a\u5c06\u865a\u62df\u5730\u5740\u89e3\u6790\u4e3a\u7269\u7406\u5730\u5740\u3002\u201d\n\u867d\u7136\u6700\u521d\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\u653b\u51fb\u4e0e\u9884\u53d6\u6307\u4ee4\u6709\u5173\uff0c\u4f46\u65b0\u7684\u53d1\u73b0\u8bc1\u660e\u4e86\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u4ece\u800c\u9a8c\u8bc1\u4e86Kaiser\u4e0d\u662f\u9488\u5bf9\u5185\u6838\u9694\u79bb\u7684\u5fae\u4f53\u7cfb\u7ed3\u6784\u4fa7\u901a\u9053\u653b\u51fb\u7684\u8db3\u591f\u5bf9\u7b56\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u5229\u7528Spectre-BTB-SA-IP(\u5206\u652f\u76ee\u6807\u7f13\u51b2\u533a\uff0c\u76f8\u540c\u5730\u5740\uff0c\u5c31\u5730)\u5c0f\u5de5\u5177\u5bfc\u81f4\u4fe1\u606f\u6cc4\u6f0f\uff0c\u4ece\u800c\u5bfc\u81f4\u6295\u673a\u6027\u6267\u884c\uff0c\u5e76\u901a\u8fc7\u7ed5\u8fc7\u5f53\u524d\u7684L1TF\u7f13\u89e3\u8fdb\u4e00\u6b65\u6267\u884c\u7194\u65ad\u548c\u9884\u5146(L1\u7ec8\u7aef\u6545\u969c)\u653b\u51fb\u3002\nSPECTE-BTB-SA-IP\u662fSpectre\u6f0f\u6d1e\u7684\u53d8\u4f53\uff0c\u5b83\u5229\u7528\u5206\u652f\u76ee\u6807\u7f13\u51b2\u533a-CPU\u4e2d\u7528\u4e8e\u5206\u652f\u9884\u6d4b\u7684\u7c7b\u4f3c\u9ad8\u901f\u7f13\u5b58\u7684\u7ec4\u4ef6-\u5728\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u548c\u76f8\u540c\u7684\u5206\u652f\u4f4d\u7f6e\u5185\u6267\u884c\u653b\u51fb\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff1a\u201c\u540c\u6837\u7684\u9884\u53d6\u6548\u5e94\u4e5f\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u9884\u53d6\u3002\u201d\u201c\u5982\u679cL3\u7f13\u5b58\u4e2d\u5b58\u5728\u673a\u5bc6\uff0c\u5e76\u4e14\u76f4\u63a5\u7269\u7406\u6620\u5c04\u5730\u5740\u5728\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5185\u6838\u4e2d\u5df2\u89e3\u9664\u9650\u5236\uff0c\u5219\u53ef\u4ee5\u5c06\u6570\u636e\u63d0\u53d6\u5230L1\u4e2d\u3002\u5982\u679c\u7981\u7528\u4e86\u4e0d\u76f8\u5173\u7684Spectre-BTB\u7f13\u89e3\uff0c\u5219\u5373\u4f7f\u542f\u7528\u4e86\u524d\u5f71\u7f13\u89e3\uff0c\u4e5f\u4f1a\u91cd\u65b0\u542f\u7528\u524d\u5f71\u3002\u201c\u3002\n\u201c\u7ed3\u679c\u662f\uff0c\u5982\u679c\u53ea\u7981\u7528Spectre-v2\u7f13\u89e3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u542f\u7528\u6240\u6709\u7f13\u89e3\u7684\u60c5\u51b5\u4e0b\u5bf9\u9488\u5bf9\u524d\u5146\u6253\u8865\u4e01\u7684\u8f83\u65e7\u5185\u6838\u8fdb\u884c\u524d\u5146\u653b\u51fb\uff0c\u5e76\u5bf9\u5b8c\u5168\u6253\u8865\u4e01\u7684\u5185\u6838\u8fdb\u884c\u524d\u5146\u653b\u51fb\u3002\u201d\n\u4e3a\u4e86\u7a81\u51fa\u4fa7\u901a\u9053\u653b\u51fb\u7684\u5f71\u54cd\uff0c\u7814\u7a76\u4eba\u5458\u5efa\u7acb\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7f13\u5b58\u7684\u9690\u853d\u901a\u9053\uff0c\u8be5\u901a\u9053\u5c06\u8fd0\u884c\u5728Intel Core i7-6500U CPU\u4e0a\u7684\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6570\u636e\u6e17\u900f\u5230\u53e6\u4e00\u4e2a\u9690\u853d\u8fdb\u7a0b\uff0c\u5b9e\u73b0\u4e8610\u4f4d/\u79d2\u7684\u4f20\u8f93\u901f\u7387\uff0c\u5c06\u603b\u8ba1128\u5b57\u8282\u7684\u6570\u636e\u4ece\u53d1\u9001\u65b9\u8f6c\u53d1\u5230\u63a5\u6536\u65b9\u8fdb\u7a0b\u3002\u6b64\u5916\uff0c\u7814\u7a76\u4eba\u5458\u8fd8\u900f\u9732\uff0c\u4f7f\u7528\u63a8\u6d4b\u6027\u5730\u89e3\u9664\u5f15\u7528\u7684\u5bc4\u5b58\u5668(\u79f0\u4e3a\u201c\u53d6\u6d88\u5f15\u7528\u9677\u9631\u201d)\uff0c\u53ef\u4ee5\u572815\u5206\u949f\u5185\u4eceIntel CPU\u7684SGX\u98de\u5730\u6cc4\u6f0f\u5bc4\u5b58\u5668\u5185\u5bb9\uff0c\u4ece\u800c\u6062\u590d\u5b58\u50a8\u572864\u4f4d\u5bc4\u5b58\u5668\u4e2d\u768432\u4f4d\u503c\u3002\n\u6700\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528JavaScript\u8fdc\u7a0b\u5b89\u88c5\u201c\u67d0\u4e9b\u653b\u51fb\u201d\uff0c\u5e76\u201c\u4f7f\u7528WebAssembly\u5728JavaScript\u4e2d\u4f7f\u7528\u653b\u51fb\u8005\u63a7\u5236\u7684\u503c\u586b\u514564\u4f4d\u5bc4\u5b58\u5668\u201d\u3002\n\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e9b\u653b\u51fb\uff0c\u5efa\u8bae\u5f53\u524d\u7684CPU\u542f\u7528Spectre-BTB\u7f13\u89e3\uff0c\u5305\u62ecretpoline(\u201creturn trampoline\u201d\u7684\u7f29\u5199)\uff0c\u5b83\u65e8\u5728\u901a\u8fc7\u5c06\u95f4\u63a5\u5206\u652f\u4e0e\u6295\u673a\u6027\u6267\u884c\u9694\u79bb\u6765\u9632\u6b62\u5206\u652f\u76ee\u6807\u6ce8\u5165\u3002", "note_en": "It turns out that the root cause behind several previously disclosed speculative execution attacks against modern processors, such as Meltdown and Fo\n  It turns out that the root cause behind several previously disclosed speculative execution attacks against modern processors, such as  Meltdown and  Foreshadow, was misattributed to \u2018prefetching effect,\u2019 resulting in hardware vendors releasing incomplete mitigations and countermeasures.\n Sharing its findings with The Hacker News, a group of academics from the Graz University of Technology and CISPA Helmholtz Center for Information Security finally revealed the exact reason behind why the kernel addresses are cached in the first place, as well as presented several new attacks that exploit the previously unidentified underlying issue, allowing attackers to sniff out sensitive data.\n The  new research explains microarchitectural attacks were actually caused by speculative dereferencing of user-space registers in the kernel, which not just impacts the most recent Intel CPUs with the latest hardware mitigations, but also several modern processors from ARM, IBM, and AMD \u2014 previously believed to be unaffected.\n  \u201cWe discovered that effects reported in several academic papers over the past 4 years were not correctly understood, leading to incorrect assumptions on countermeasures,\u201d the researchers told The Hacker News.\n \u201cThis  prefetching effect is actually unrelated to software prefetch instructions or hardware prefetching effects due to memory accesses and instead is caused by speculative dereferencing of user-space registers in the kernel.\u201d\n Besides analyzing the actual root cause of the prefetching effect, some other key findings from the research are:\n Discovery of several new attacks exploiting the underlying root cause, including an address-translation attack in more restricted contexts, direct leakage of register values in specific scenarios, and an end-to-end Foreshadow exploit targeting non-L1 data.\n A novel cross-core covert channel attack that, in some instances, could let attackers observe caching of the address (or value) stored in a register without relying on shared memory.\n Spectre \u2018prefetch\u2019 gadgets can directly leak actual data, which not only makes  ZombieLoad attack efficient on Intel CPUs to leak sensitive data from internal buffers or memory but also impact non-Intel CPUs.\n The speculative dereferencing issue \u2014 in certain attacks like  Rowhammer, cache attacks, and DRAMA \u2014 could let attackers recover the physical addresses of JavaScript variables and exfiltrate information via  transient execution remotely via a web browser.\n Additionally, researchers also demonstrated that the Foreshadow vulnerability on Intel CPUs could be exploited even when the recommended mitigations are enabled. This is made possible due to the fact the attack can be mounted on data not residing in L1 cache on kernel versions containing \u2018prefetch\u2019 gadgets.\n  The idea behind this is straight-forward. System software relies on the CPU\u2019s address translation mechanism to implement isolation among different processes. Each process has its own virtual memory space and cannot access arbitrary physical memory addresses outside of it.\n  Address translation, thus, acts as an intermediate layer that maps the virtual address space, which is used by a program, to the physical address to a physical address.\n The virtual address space also includes a kernel address space to house Linux kernel threads, thus making it easy for the underlying hardware to handle privileged instructions from user threads in kernel mode.\n While operating system kernels can be secured against prefetch side-channel attacks via a technique called kernel page-table isolation ( KPTI or  KAISER) \u2014 which enforces a strict kernel and userspace isolation such that the hardware does not hold any information about kernel addresses while running in user mode \u2014 the researchers found that it does not guarantee full protection from address-translation attacks, where an attacker tries to check if two different virtual addresses map to the same physical address.\n Put differently, the \u201caddress-translation attack allows unprivileged applications to fetch arbitrary kernel addresses into the cache and thus resolve virtual to physical addresses on 64-bit Linux systems.\u201d\n While the original line of thought was that such attacks were related to prefetch instructions, the new finding proves otherwise, thereby validating that KAISER isn\u2019t an adequate countermeasure against microarchitectural side-channel attacks on kernel isolation.\n Instead, it exploits a Spectre-BTB-SA-IP (Branch Target Buffer, same address, in-place) gadget to cause information leakage, causing speculative execution, and further carry out Meltdown and Foreshadow (L1 Terminal Fault) attacks by bypassing current L1TF mitigations.\n Spectre-BTB-SA-IP is a variant of  Spectre vulnerability that exploits the Branch Target Buffer \u2014 a cache-like component in CPUs that\u2019s used for branch prediction \u2014 to perform attacks within the same address space and the same branch location.\n \u201cThe same prefetching effect can be used to perform Foreshadow,\u201d the researchers said. \u201cIf a secret is present in the L3 cache and the direct-physical map address is derefenced in the hypervisor kernel, data can be fetched into the L1. This reenables Foreshadow even with Foreshadow mitigations enabled if the unrelated Spectre-BTB mitigations are disabled.\u201d\n \u201cThe consequence is that we are able to mount a Foreshadow attack on older kernels patched against Foreshadow with all mitigations enabled and on a fully patched kernel if only Spectre-v2 mitigations are disabled.\u201d\n  To highlight the impact of the side-channel attacks, the researchers established a cache-based covert channel that exfiltrated data from a process running on an Intel Core i7-6500U CPU to another stealthy process, achieving a transmission rate of 10 bit/s to relay a total of 128 bytes from the sender to the receiver process. Furthermore, the researchers disclosed that it\u2019s possible to leak register contents from an SGX enclave of Intel CPUs using a register that\u2019s speculatively dereferenced (called \u201cDereference Trap\u201d), using it to recover a 32-bit value stored in a 64-bit register within 15 minutes.\n Lastly, \u2018certain attacks\u2019 can now be mounted remotely using JavaScript in a web browser, and \u201cfill 64-bit registers with an attacker-controlled value in JavaScript by using WebAssembly.\u201d\n To mitigate these attacks, it\u2019s recommended that current CPUs enable Spectre-BTB mitigations, including  retpoline (short for \u201creturn trampoline\u201d), which aims to  prevent branch-target-injection by isolating  indirect branches from speculative execution.", "posttime": "2020-08-08 15:34:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,\u901a\u9053,arm,\u653b\u51fb", "title": "\u82f1\u7279\u5c14\u3001ARM\u3001IBM\u3001AMD\u5904\u7406\u5668\u6613\u53d7\u65b0\u7684\u4fa7\u901a\u9053\u653b\u51fb", "title_en": "Intel, ARM, IBM, AMD Processors Vulnerable to New Side-Channel Attacks", "transed": 1, "url": "https://modernnetsec.io/intel-arm-ibm-amd-processors-vulnerable-to-new-side-channel-attacks/", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u901a\u9053", "arm", "\u653b\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "3d1547d1c25f96f895150393ec552bed.jpg", "infoid": 1016987, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bcf\u4e2a\u4eba\u90fd\u719f\u6089\u7269\u8054\u7f51(\u7269\u8054\u7f51)\u7684\u6982\u5ff5\uff0c\u4f46\u6709\u591a\u5c11\u4eba\u542c\u8bf4\u8fc7\u667a\u80fd\u706f\u6ce1\u5462\uff1f\u53ea\u9700\u4f7f\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6216\u6570\u5b57\u5bb6\u5ead\u52a9\u624b\uff0c\u60a8\u5c31\u53ef\u4ee5\u63a7\u5236\u5bb6\u91cc\u7684\u706f\u5149\uff0c\u751a\u81f3\u53ef\u4ee5\u6821\u51c6\u6bcf\u4e2a\u706f\u6ce1\u7684\u989c\u8272\u3002\u667a\u80fd\u706f\u6ce1\u7684\u7ba1\u7406\u662f\u901a\u8fc7WiFi\u751a\u81f3ZigBee(\u4e00\u79cd\u4f4e\u5e26\u5bbd\u65e0\u7ebf\u7535\u534f\u8bae)\u6765\u5b8c\u6210\u7684\u3002\n\u51e0\u5e74\u524d\uff0c\u4e00\u7ec4\u5b66\u672f\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u4ed6\u4eec\u5982\u4f55\u63a5\u7ba1\u548c\u63a7\u5236\u667a\u80fd\u706f\u6ce1\uff0c\u4ee5\u53ca\u8fd9\u53cd\u8fc7\u6765\u5982\u4f55\u8ba9\u4ed6\u4eec\u521b\u9020\u51fa\u53ef\u4ee5\u8513\u5ef6\u5230\u6574\u4e2a\u73b0\u4ee3\u57ce\u5e02\u7684\u8fde\u9501\u53cd\u5e94\u3002\u4ed6\u4eec\u7684\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff1a\u9664\u4e86\u5f15\u53d1\u505c\u7535(\u53ef\u80fd\u8fd8\u4f1a\u5f15\u53d1\u51e0\u6b21\u766b\u75eb\u53d1\u4f5c)\u5916\uff0c\u8fd9\u4e9b\u706f\u6ce1\u662f\u5426\u4f1a\u5bf9\u6211\u4eec\u7684\u7f51\u7edc\u5b89\u5168\u6784\u6210\u4e25\u91cd\u5a01\u80c1\uff1f\u653b\u51fb\u8005\u80fd\u5426\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f25\u5408\u7269\u7406\u7269\u8054\u7f51\u7f51\u7edc(\u706f\u6ce1)\u4e0e\u66f4\u5177\u5438\u5f15\u529b\u7684\u76ee\u6807(\u5982\u6211\u4eec\u5bb6\u5ead\u3001\u529e\u516c\u5ba4\u751a\u81f3\u667a\u80fd\u57ce\u5e02\u4e2d\u7684\u8ba1\u7b97\u673a\u7f51\u7edc)\u4e4b\u95f4\u7684\u5dee\u8ddd\uff1f\n\u7ee7\u7eed\u4e4b\u524d\u7684\u7814\u7a76\uff0c\u6211\u4eec\u76f4\u63a5\u8fdb\u5165\u6838\u5fc3\uff1a\u667a\u80fd\u96c6\u7ebf\u5668\uff0c\u5b83\u5145\u5f53IP\u7f51\u7edc\u548cZigBee\u7f51\u7edc\u4e4b\u95f4\u7684\u6865\u6881\u3002\u901a\u8fc7\u4f2a\u88c5\u6210\u5408\u6cd5\u7684ZigBee\u706f\u6ce1\uff0c\u6211\u4eec\u80fd\u591f\u5229\u7528\u6211\u4eec\u5728\u7f51\u6865\u4e2d\u53d1\u73b0\u7684\u6f0f\u6d1e\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u8fdc\u7a0b\u7a7a\u4e2dZigBee\u6f0f\u6d1e\u6e17\u900f\u5230\u5229\u6da6\u4e30\u539a\u7684IP\u7f51\u7edc\u3002\n\u8fd9\u9879\u7814\u7a76\u662f\u5728\u7279\u62c9\u7ef4\u592b\u5927\u5b66Check Point\u4fe1\u606f\u5b89\u5168\u7814\u7a76\u6240(CPIIS)\u7684\u5e2e\u52a9\u4e0b\u5b8c\u6210\u7684\u3002\n\u5728\u6211\u4eec\u5b8c\u6210\u4e86\u524d\u9762\u7684\u7814\u7a76\u4e4b\u540e(\u6bd4\u5982Cheese\uff1aHow I Ransomwared Your DSLR Camera)\uff0c\u6211\u4eec\u51b3\u5b9a\u6269\u5c55\u6211\u4eec\u7684\u8c03\u8bd5\u5668(Scout)\u6765\u652f\u6301\u5176\u4ed6\u67b6\u6784\uff0c\u6bd4\u5982MIPS\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5f00\u59cb\u7814\u7a76MIPS\uff0c\u6211\u5728Twitter\u4e0a\u8be2\u95ee\u4e86\u4e00\u4e2a\u597d\u7684MIPS\u76ee\u6807\u7684\u5efa\u8bae\uff0c\u4ee5\u8fdb\u884c\u6f0f\u6d1e\u7814\u7a76\u3002\n\u5c31\u50cf\u5927\u591a\u6570\u60c5\u51b5\u4e00\u6837\uff0c\u4eba\u4eec\u7684\u53cd\u5e94\u662f\u4e00\u4e9b\u6709\u5e0c\u671b\u7684\u7ebf\u7d22\uff0c\u5176\u4e2d\u6700\u6709\u5e0c\u671b\u7684\u662f\u6211\u7684\u4e00\u4f4d\u8001\u540c\u4e8bEYAL RONEN(@eyalr0)\uff0c\u4ed6\u73b0\u5728CPIIS(\u5c0f\u4e16\u754c\uff0c\u4e0d\u662f\u5417\uff1f)\u62c5\u4efb\u7814\u7a76\u804c\u4f4d\u3002\u57c3\u4e9a\u5c14\u00b7\u7f57\u5b81\u5efa\u8bae\u6211\u7ee7\u7eed\u4ed6\u5bf9\u667a\u80fd\u706f\u6ce1\u7684\u7814\u7a76(\u53c2\u89c1\u4e0b\u4e00\u8282\u7684\u201c\u524d\u671f\u5de5\u4f5c\u201d)\u3002\u5728\u4ed6\u4eec\u6700\u521d\u7684\u7814\u7a76\u4e2d\uff0c\u4ed6\u7684\u56e2\u961f\u53ea\u80fd\u81ea\u5df1\u63a7\u5236\u706f\u6ce1\u3002\u4ed6\u8ba4\u4e3a\u6709\u53ef\u80fd\u5229\u7528ZigBee\u7f51\u7edc\u4e2d\u7684\u8fd9\u4e00\u5730\u4f4d\uff0c\u5bf9\u8fde\u63a5ZigBee\u7f51\u7edc\u548cIP\u7f51\u7edc\u7684\u7f51\u6865\u8fdb\u884c\u653b\u51fb\u3002\u672c\u8d28\u4e0a\uff0c\u8fd9\u79cd\u65b0\u7684\u653b\u51fb\u8f7d\u4f53\u4f7f\u653b\u51fb\u8005\u80fd\u591f\u4f7f\u7528\u7a7a\u4e2d\u653b\u51fb\u4eceZigBee\u7f51\u7edc\u6e17\u900f\u5230IP\u7f51\u7edc\u3002\n\u5728IoT Go Nuclear\uff1aCreating a ZigBee Chain Reaction\u4e2d\uff0c\u7531EYAL RONEN(@eyalr0)\u3001Colin O\u2018Flynn(@colinoflynn)\u548cAdi Shamir\u9886\u5bfc\u7684\u7814\u7a76\u56e2\u961f\u5206\u6790\u4e86ZigBee\u667a\u80fd\u706f\u6ce1\u7684\u5b89\u5168\u65b9\u9762\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u4ed6\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u98de\u5229\u6d66\u8272\u6865\u548c\u706f\u6ce1\u4e0a\uff0c\u5c55\u793a\u4e86\u4e00\u7cfb\u5217\u7684\u529f\u7ee9\uff1a\n\u653b\u51fb\u8005\u53ef\u4ee5\u8fdc\u7a0b\u4ece\u7ed9\u5b9a\u7684zigbee\u7f51\u7edc\u201c\u7a83\u53d6\u201d\u4e00\u4e2a\u706f\u6ce1\uff0c\u5e76\u5f3a\u8feb\u5b83\u52a0\u5165\u4ed6\u4eec\u7684\u7f51\u7edc(\u4f7f\u7528\u65e0\u4eba\u673a\u6218\u4e89\u6f14\u793a--\u4ece400m\u9ad8\u7a7a\u98de\u884c)\uff1ahttps://www.youtube.com/watch?v=Ed1OjAuRARU\n\u7531\u4e8e\u5b9e\u73b0\u7f3a\u9677\uff0c\u5373\u4f7f\u662f\u666e\u901a\u7684\u706f\u6ce1\u4e5f\u53ef\u7528\u4e8e\u90e8\u7f72\u6b64\u7c7b\u653b\u51fb\uff0c\u5e76\u4ece\u76f8\u90bb\u7684ZigBee\u7f51\u7edc\u201c\u7a83\u53d6\u201d\u706f\u6ce1\u3002\n\u4e0e\u76ee\u6807\u706f\u6ce1\u5171\u4eab\u540c\u4e00ZigBee\u7f51\u7edc\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u5411\u8be5\u706f\u6ce1\u53d1\u9001\u6076\u610f\u56fa\u4ef6\u66f4\u65b0\uff0c\u4ece\u800c\u5b8c\u5168\u63a7\u5236\u8be5\u706f\u6ce1\u3002\n\u901a\u8fc7\u5c06\u8fd93\u79cd\u5df2\u6f14\u793a\u7684\u653b\u51fb\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u901a\u8fc7\u63a7\u5236\u667a\u80fd\u57ce\u5e02\u4e2d\u9009\u5b9a\u7684\u706f\u6ce1\u5b50\u96c6\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5f15\u53d1\u7c7b\u4f3c\u6838\u5b50\u53cd\u5e94\u7684\u8fde\u9501\u53cd\u5e94\uff0c\u6700\u7ec8\u53ef\u80fd\u63a7\u5236\u57ce\u5e02\u4e2d\u7684\u6240\u6709\u706f\u6ce1\u3002\n\u7531\u4e8e\u653b\u51fb\u7684\u6027\u8d28\uff0c\u4f9b\u5e94\u5546\u53ea\u80fd\u963b\u6b62\u7b2c\u4e8c\u6b21\u653b\u51fb\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u80fd\u529b\uff1a\n\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8fd1\u8ddd\u79bb(400\u7c73)\u7684ZigBee\u7f51\u7edc\u4e2d\u201c\u5077\u201d\u4e00\u4e2a\u706f\u6ce1\u3002\n\u66f4\u65b0\u90a3\u4e2a\u706f\u6ce1\u7684\u56fa\u4ef6\uff0c\u7136\u540e\u7528\u5b83\u6765\u53d1\u52a8\u4e0b\u4e00\u9636\u6bb5\u7684\u653b\u51fb\u3002\n\u5728\u5f97\u5230\u4ed6\u4eec\u6700\u521d\u7814\u7a76\u7684\u8be6\u7ec6\u89e3\u91ca\uff0c\u5e76\u914d\u5907\u4e86\u57c3\u4e9a\u5c14\u00b7R\u4ece\u4ed6\u4eec\u5b9e\u9a8c\u5ba4\u62a2\u6551\u51fa\u6765\u7684\u98de\u5229\u6d66\u8272\u6865\u540e\uff0c\u6211\u4eec\u51c6\u5907\u5f00\u59cb\u8fd9\u9879\u6709\u524d\u9014\u7684\u65b0\u7814\u7a76\u3002\n\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u8bf4\u6cd5\uff0c\u201cZigBee\u662f\u4e00\u79cd\u57fa\u4e8eIEEE802.15.4\u7684\u89c4\u8303\uff0c\u7528\u4e8e\u521b\u5efa\u2026\u7684\u4e00\u5957\u9ad8\u7ea7\u901a\u4fe1\u534f\u8bae\u3002\u4f4e\u529f\u7387\u3001\u4f4e\u6570\u636e\u901f\u7387\u548c\u8fd1\u8ddd\u79bb\u65e0\u7ebf\u81ea\u7ec4\u7ec7\u7f51\u7edc\u3002\u201c\u3002\u4e0d\u8981\u4e0eIEEE802.15.4(WiFi)\u6df7\u6dc6\uff0c\u6839\u636e\u5f00\u653e\u7cfb\u7edf\u4e92\u8fde\u6a21\u578b\uff0cIEEE802.15.4\u662f\u57fa\u4e8e\u65e0\u7ebf\u7684\u7f51\u7edc\u534f\u8bae\u7684\u6280\u672f\u6807\u51c6\uff0c\u5b83\u5145\u5f53ZigBee\u7f51\u7edc\u5806\u6808\u76841-2\u5c42\u3002\n\u4ec5\u4e3a\u4e86\u4e86\u89e3\u8fd9\u79cd\u4f4e\u6570\u636e\u901f\u7387\u534f\u8bae\uff0cIEEE 802.15.4\u7684\u5e95\u5c42MAC\u5c42\u4e2d\u5e27\u7684\u6700\u5927\u4f20\u8f93\u5355\u4f4d(MTU)\u4e3a127\u5b57\u8282\u3002\u8fd9\u610f\u5473\u7740\u9664\u975e\u4f7f\u7528\u5206\u6bb5\uff0c\u5426\u5219ZigBee\u7f51\u7edc\u5806\u6808\u7684\u6d88\u606f\u5927\u5c0f\u975e\u5e38\u6709\u9650\u3002\u5e0c\u671b\u8fd9\u4e2a\u9650\u5236\u4e0d\u4f1a\u592a\u591a\u5730\u9650\u5236\u6211\u4eec\u5728ZigBee\u5b9e\u73b0\u4e2d\u53d1\u73b0\u6f0f\u6d1e\uff0c\u5e76\u5728\u4ee5\u540e\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u3002\n\u5728\u72ed\u7a84\u7684\u65e0\u7ebf\u7f51\u7edc\u5c42\u4e4b\u4e0a\uff0cZigBee\u5b9a\u4e49\u4e86\u5b8c\u6574\u7684\u7f51\u7edc\u5c42\u5806\u6808\uff0c\u5982\u53d6\u81eaZigBee\u89c4\u8303(\u8f83\u65e7\u7248\u672c)\u7684\u4e0b\u56fe\u6240\u793a\uff1a\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7f51\u7edc\u5806\u6808\u5927\u81f4\u5206\u4e3a4\u5c42(\u6309\u5347\u5e8f\u6392\u5217)\uff1a\n\u5e94\u7528\u5c42(ZDP/ZCL/\u7b49)-\u903b\u8f91\u5e94\u7528\u5c42\uff0c\u53d6\u51b3\u4e8e\u4f20\u5165\u7684\u6d88\u606f(\u591a\u5c42\u540c\u65f6\u5b58\u5728)\u3002\n\u5bf9\u4e8e\u719f\u6089SNMP\u534f\u8bae\u7684\u4eba\u6765\u8bf4\uff0cZCL\u770b\u8d77\u6765\u50cf\u662f\u540c\u4e00\u903b\u8f91\u63a5\u53e3\u7684\u4e0d\u540c\u7f16\u7801\u3002ZCL\u5c42\u5141\u8bb8\u8bbe\u5907\u67e5\u8be2(READ_ATTRIBUTE)\u548c\u8bbe\u7f6e(WRITE_ATTRIBUTE)\u914d\u7f6e\u503c(\u7fa4\u96c6)\u7684\u96c6\u5408\uff0c\u8fd9\u6700\u7ec8\u5141\u8bb8\u64cd\u4f5c\u5458(\u6865\u63a5\u5668)\u63a7\u5236\u706f\u6ce1\u3002\u4f8b\u5982\uff0c\u989c\u8272\u63a7\u5236\u7fa4\u96c6\u7684\u5c5e\u6027\u5305\u62ec\uff1a\n\u6b64\u793a\u4f8b\u8fd8\u8868\u660e\uff0c\u8fd9\u4e9b\u4e0d\u662f\u666e\u901a\u7684\u767d\u8272/\u9ec4\u8272\u706f\u6ce1\u3002\u8fd9\u4e9b\u667a\u80fd\u706f\u6ce1\u652f\u6301\u591a\u79cd\u989c\u8272\uff0c\u53ef\u4ee5\u4f7f\u7528(RGB)\u8c03\u8272\u677f\u8fdb\u884c\u63a7\u5236\u3002\n\u6211\u4eec\u8fd9\u9879\u7814\u7a76\u7684\u76ee\u6807\u662f\u98de\u5229\u6d66\u8272\u8c03\u7cfb\u5217\u4ea7\u54c1\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u98de\u5229\u6d66\u8272\u8c03\u6865\u3002\u9644\u6ce8\uff1a\u8272\u8c03\u7cfb\u5217\u4ea7\u54c1\u8d77\u6e90\u4e8e\u98de\u5229\u6d66\u7684\u98de\u5229\u6d66\u7167\u660e\u90e8\u95e8\uff0c\u73b0\u5728\u662f\u7b2c\u4e09\u5bb6\u540d\u4e3aSignify\u7684\u516c\u53f8\u7684\u54c1\u724c\u3002\n\u867d\u7136\u201c\u667a\u80fd\u201d\u7167\u660e\u89e3\u51b3\u65b9\u6848\u5728\u4ee5\u8272\u5217\u8fd8\u4e0d\u90a3\u4e48\u53d7\u6b22\u8fce\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u5728\u8bb8\u591a\u5176\u4ed6\u56fd\u5bb6\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u4f8b\u5982\uff0c2018\u5e74\u7684\u8fd9\u7bc7\u6587\u7ae0\u79f0\uff0c\u98de\u5229\u6d66\u8272\u8c03\u5360\u636e\u4e86\u82f1\u56fd\u667a\u80fd\u7167\u660e\u5e02\u573a31%\u7684\u4efd\u989d\uff0c\u6709\u8d85\u8fc743\u4e07\u4e2a\u5bb6\u5ead\u4f7f\u7528\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u4eec\u5411\u6211\u4eec\u516c\u53f8\u7684\u4e00\u4e9b\u526f\u603b\u88c1\u4ecb\u7ecd\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u65f6\uff0c\u4ed6\u4eec\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4eec\u623f\u5b50\u91cc\u6240\u6709\u7684\u706f\u90fd\u662f\u98de\u5229\u6d66\u8272\u8c03\u54c1\u724c\u7684\u3002\n\u4e0b\u56fe\u6458\u81ea\u539f\u59cb\u7814\u7a76\u8bba\u6587\uff0c\u663e\u793a\u4e86\u4f7f\u7528\u6b64\u4ea7\u54c1\u7684\u5bb6\u5ead\u6216\u529e\u516c\u5ba4\u7684\u7f51\u7edc\u67b6\u6784\uff1a\nZLL\u662fZigBee Light Link\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0cZigBee Light Link\u662fZigBee\u7f51\u7edc\u5806\u6808\u7684\u5b9a\u5236\u5c42\uff0c\u4e13\u6ce8\u4e8e\u7167\u660e\u8bbe\u5907\uff1a\u706f\u6ce1\u548c\u63a7\u5236\u706f\u6ce1\u7684\u7f51\u6865\u3002\n\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709ZigBee\u8bbe\u5907\uff1a\u706f\u6ce1\u3001\u5f00\u5173\u548c\u7535\u6865\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u5728\u201c\u5e38\u89c4\u201d\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u6709IP\u8bbe\u5907\uff1a\u6211\u4eec\u7684\u624b\u673a\u3001\u8def\u7531\u5668\uff0c\u8fd8\u6709\u7f51\u6865\u3002\u6839\u636e\u4ed6\u7684\u540d\u5b57\u63a8\u65ad\uff0c\u7f51\u6865\u662f\u4e24\u4e2a\u7f51\u7edc\u4e2d\u552f\u4e00\u5b58\u5728\u7684\u8bbe\u5907\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u6211\u4eec\u4ece\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u7684\u547d\u4ee4\u8f6c\u6362\u4e3aZigBee\u65e0\u7ebf\u7535\u6d88\u606f\uff0c\u7136\u540e\u53d1\u9001\u5230\u706f\u6ce1\u3002\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u6865\u4f7f\u7528\u7684\u662fMIPS CPU(\u8fd9\u5c31\u662f\u6211\u4eec\u6700\u521d\u9009\u62e9\u5b83\u7684\u539f\u56e0)\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b83\u7684\u67b6\u6784\u66f4\u52a0\u590d\u6742\u3002\u5728\u56fe3\u4e2d\uff0c\u6211\u4eec\u663e\u793a\u4e86\u4ece\u5851\u6599\u5916\u58f3\u4e2d\u63d0\u53d6\u540e\u7684\u6865\u63a5\u677f(2.0\u578b\u53f7)\uff1a\n\u5de6\u8fb9\u7528\u7ea2\u8272\u6807\u8bb0\uff0c\u662f\u5b9e\u73b0ZigBee\u5806\u6808\u8f83\u4f4e\u5c42\u7684Atmel CPU(ATSAMR21E18E)\u3002\n\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u5c06Atmel CPU\u79f0\u4e3a\u8c03\u5236\u89e3\u8c03\u5668\u3002\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u4e3bCPU\u5378\u8f7d\u4e86\u4ec5\u5728\u8be5\u5904\u7406\u5668\u4e0a\u6267\u884c\u7684\u4f4e\u7ea7ZigBee\u7f51\u7edc\u4efb\u52a1\u7684\u5904\u7406\u3002\u8fd9\u610f\u5473\u7740\u7269\u7406\u5c42\u548cNWK\u5c42\u90fd\u7531\u8c03\u5236\u89e3\u8c03\u5668\u5904\u7406\uff0c\u800c\u8c03\u5236\u89e3\u8c03\u5668\u53ef\u80fd\u4f1a\u5411\u4e3bCPU\u67e5\u8be2\u6240\u9700\u7684\u914d\u7f6e\u503c\u3002\n\u4ee4\u6211\u4eec\u60ca\u8bb6\u7684\u662f\uff0c\u4e3bCPU\u8fd0\u884c\u7684\u662fLinux\u5185\u6838\uff0c\u800c\u4e0d\u662f\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f53\u6211\u4eec\u5fc5\u987b\u63d0\u53d6\u56fa\u4ef6\u5e76\u8c03\u8bd5\u8d1f\u8d23\u7f51\u6865\u6838\u5fc3\u903b\u8f91\u7684\u4e3b\u8fdb\u7a0b\u65f6\uff0c\u8fd9\u88ab\u8bc1\u660e\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\nColin O\u2018Flynn(@colinoflynn)\u5728\u4ed6\u7684\u7f51\u7ad9\u4e0a\u4ecb\u7ecd\u4e86\u5982\u4f55\u8fde\u63a5\u5230\u66b4\u9732\u7684\u4e32\u53e3\u5e76\u83b7\u5f97\u4e3b\u677f\u4e0a\u7684root\u6743\u9650\u3002\u5bf9\u4e8e\u4efb\u4f55\u4e0e\u5d4c\u5165\u5f0fLinux\u8bbe\u5907\u6253\u4ea4\u9053\uff0c\u7279\u522b\u662fU-Boot\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u672c\u5f88\u68d2\u7684\u6307\u5357\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u6ca1\u6709\u5fc5\u8981\u7684\u8bbe\u5907\u8fde\u63a5\u5230\u4e32\u884c\u63a5\u53e3\uff0c\u8fd9\u662f\u6211\u5728\u591a\u6b21\u672a\u80fd\u91cd\u73b0\u79d1\u6797\u7684\u7ed3\u679c\u540e\u53d1\u73b0\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u54a8\u8be2\u4e86\u6211\u7684\u5c0f\u5f1f\u5f1f\uff0c\u4ed6\u5e2e\u6211\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u5e76\u544a\u8bc9\u6211\u9700\u8981\u8ba2\u8d2d\u54ea\u4e9b\u4e32\u884c\u7535\u7f06\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f00\u59cb\u5bf9\u6211\u4eceEYAL R\u90a3\u91cc\u6536\u5230\u7684\u65e7\u56fa\u4ef6\u7248\u672c(\u4ece2016\u5e74\u5f00\u59cb)\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\uff0c\u5f53\u65f6\u6211\u6b63\u5728\u7b49\u5f85\u7535\u62a5\u7684\u5230\u8fbe\u3002\n\u4e3bCPU\u4e2d\u7684\u6838\u5fc3\u8fdb\u7a0b\u662fipbridge\u8fdb\u7a0b\u3002\u57fa\u672c\u4fa6\u5bdf\u663e\u793a\uff0c\u8fd9\u662fELF\u76ee\u6807\u7684\u5178\u578b\u6848\u4f8b\uff1a\n\u8fd9\u662f\u6211\u4eec\u5728\u5904\u7406\u8fd0\u884cLinux\u7684\u76ee\u6807\u65f6\u7ecf\u5e38\u770b\u5230\u7684\u4e00\u79cd\u6df7\u5408\u72b6\u6001\u3002\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u542f\u7528\u4e00\u4e9b\u5b89\u5168\u529f\u80fd\uff0c\u901a\u5e38\u4f9b\u5e94\u5546\u4e0d\u4f1a\u4e3b\u52a8\u542f\u7528\u5176\u4ed6\u529f\u80fd\uff0c\u5982PIE(\u72ec\u7acb\u4e8e\u4f4d\u7f6e\u7684\u53ef\u6267\u884c\u6587\u4ef6)\u751a\u81f3\u5806\u6808\u91d1\u4e1d\u96c0\u3002\u4ece\u6211\u4eec\u4f5c\u4e3a\u653b\u51fb\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u653b\u51fb\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9bASLR(\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316)\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u653b\u51fb\u4e2d\u4f7f\u7528\u4e00\u4e9b\u56fa\u5b9a\u7684\u5df2\u77e5\u5185\u5b58\u5730\u5740\u3002\n\u5728\u5f00\u59cb\u5bf9\u8be5\u8fc7\u7a0b\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u53cd\u6c47\u7f16\u7a0b\u5e8f\u5f88\u96be\u533a\u5206MIPS\u548cMips16\u4ee3\u7801\u6bb5(\u7c7b\u4f3c\u4e8eARM\u56fa\u4ef6\u4e2d\u7684ARM\u548cThumb)\u3002\u8fd9\u662f\u6d4b\u8bd5\u7ad6\u8d77\u5927\u62c7\u6307(\u6700\u521d\u53ea\u5728Intel\u548cARM\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0a\u6d4b\u8bd5)\u662f\u5426\u4e5f\u80fd\u5728\u6211\u4eec\u7684Mips\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u4ea7\u751f\u6539\u8fdb\u7684\u5206\u6790\u7684\u597d\u65f6\u673a\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\u5e78\u8fd0\u7684\u662f\uff0c\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff1a\u6700\u521d\u6211\u4eec\u67092525\u4e2a\u51fd\u6570\uff0c\u6267\u884c\u4e4b\u540e\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u66f4\u5e72\u51c0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5176\u4e2d\u67093478\u4e2a\u6807\u8bb0\u7684\u51fd\u6570\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5f00\u59cb\u9006\u5411\u5de5\u7a0b\u6211\u4eec\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u624b\u52a8\u6539\u8fdbIDA Pro\u7684\u5206\u6790\u3002\n\u5728\u6211\u4eec\u5f00\u59cb\u9006\u5411\u5de5\u7a0b\u9636\u6bb5\u540e\uff0c\u6211\u4eec\u7acb\u5373\u770b\u5230\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\u3002\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6211\u4eec\u4f3c\u4e4e\u5e0c\u671b\u6211\u4eec\u7684\u6d88\u606f\u4ee5\u6587\u672c\u5f62\u5f0f\u5230\u8fbe\uff1f\uff01\n\u5728\u56fe4\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5e0c\u671b\u5728\u4f20\u5165\u6d88\u606f\u4e2d\u627e\u5230\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8def\u7531\u6211\u4eec\u7684\u6d88\u606f\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\uff0c\u6bd4\u5982\u6211\u4eec\u547d\u540d\u4e3aei_zcl_main_handler\u7684\u51fd\u6570\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u518d\u6b21\u68c0\u67e5\u4e86ZigBee\u7684\u89c4\u683c\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u534f\u8bae\u5e94\u8be5\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u800c\u4e14\u5e26\u5bbd\u975e\u5e38\u4f4e\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u7a0b\u5e8f\u8ba4\u4e3a\u5b83\u5e94\u8be5\u63a5\u6536\u957f\u5b57\u7b26\u4e32\u5462\uff1f\n\u5728\u518d\u6b21\u9605\u8bfb\u4e86\u57c3\u4e9a\u5c14\u00b7R\u548c\u79d1\u6797\u7684\u7ed3\u8bba\u540e\uff0c\u5b83\u7a81\u7136\u53d8\u5f97\u6e05\u6670\u8d77\u6765\u3002\u8c03\u5236\u89e3\u8c03\u5668\u8fd8\u6709\u4e00\u4e2a\u6211\u4eec\u6700\u521d\u5ffd\u7565\u7684\u989d\u5916\u4f5c\u7528\uff1a\u5b83\u5c06\u4e8c\u8fdb\u5236\u6d88\u606f\u8f6c\u6362\u4e3a\u6587\u672c\u8868\u793a\u5f62\u5f0f\uff0c\u7136\u540e\u901a\u8fc7USB\u8f6c\u4e32\u884c\u63a5\u53e3\u53d1\u9001\u5b83\u4eec\u3002\u8fd9\u6837\uff0c\u4e3bCPU\u4ece\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6620\u5c04\u4e3a\u6587\u4ef6\u7684\u4e32\u884c\u8bbe\u5907\u8bfb\u53d6\u6613\u4e8e\u5904\u7406\u7684\u6587\u672c\u6d88\u606f\u3002\nColin\u53d1\u73b0\u4e86\u706f\u6ce1\u4f7f\u7528Atmel BitCloud SDK\u7684\u8bc1\u636e\uff0c\u8be5SDK\u73b0\u5728\u662f\u5c01\u95ed\u6e90\u4ee3\u7801\u7684\uff0c\u5fc5\u987b\u4eceAtmel\u8d2d\u4e70\u3002\u56e0\u6b64\uff0c\u5047\u8bbe\u76f8\u540c\u7684\u8f6f\u4ef6\u5806\u6808\u4e5f\u7528\u4f5c\u7f51\u6865\u4e2d\u8c03\u5236\u89e3\u8c03\u5668CPU\u7684\u201c\u89e3\u7801\u5668\u201d\u5c42\u662f\u6709\u610f\u4e49\u7684\uff1a\n\u8fd9\u6837\uff0c\u4e3bCPU\u53ea\u9700\u8981\u719f\u6089ZigBee\u5806\u6808\u7684\u903b\u8f91\u65b9\u9762\uff0c\u800c\u4e0d\u9700\u8981\u5b9e\u73b0\u590d\u6742\u7684\u89e3\u7801\u548c\u89e3\u6790\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5df2\u7ecf\u5305\u542b\u5728\u968fAtmel\u8c03\u5236\u89e3\u8c03\u5668\u63d0\u4f9b\u7684\u5806\u6808\u4e2d\u3002\n\u4ece\u5b89\u5168\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u9009\u62e9\u6709\u5176\u5229\u5f0a\u3002\u5c31\u6211\u4eec\u800c\u8a00\uff0c\u5b83\u6709\u5de8\u5927\u7684\u5f71\u54cd\u3002\u6211\u4eec\u53ea\u6709ipbridge\u8fdb\u7a0b\u7684\u56fa\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7f16\u8bd1\u5e76\u653e\u7f6e\u5728\u6865\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8fdc\u7a0bgdbserver\u8fdb\u884c\u8c03\u8bd5\u3002\u8c03\u5236\u89e3\u8c03\u5668\u7684\u56fa\u4ef6\u662f\u52a0\u5bc6\u7684\uff0c\u8981\u91cd\u65b0\u521b\u5efa\u539f\u59cb\u7814\u7a76\u4e2d\u7684\u6b65\u9aa4\u4ee5\u63d0\u53d6\u6b64\u5bc6\u94a5(\u4f7f\u7528\u529f\u7387\u5206\u6790\u653b\u51fb)\u5e76\u89e3\u5bc6\u8c03\u5236\u89e3\u8c03\u5668\u7684\u56fa\u4ef6\u5e76\u975e\u6613\u4e8b\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u80fd\u5c06\u8c03\u5236\u89e3\u8c03\u5668\u89c6\u4e3a\u6267\u884c\u5927\u91cf\u89e3\u6790\u7684\u9ed1\u76d2\uff0c\u751a\u81f3\u53ef\u80fd\u5305\u542b\u51e0\u4e2a\u72b6\u6001\u673a\u3002\u6211\u4eec\u4eceGitHub\u4e0a\u53d1\u73b0\u7684\u90e8\u5206\u4ee3\u7801\u7248\u672c(\u4e5f\u5c31\u662f\u51e0\u5e74\u524d\u7684\u7248\u672c)\u4e2d\u5f97\u5230\u4e86\u4e00\u4e9b\u63d0\u793a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u53ea\u662f\u4e00\u4e2a\u9ed1\u5323\u5b50\uff0c\u5982\u679c\u4ed6\u4eec\u8981\u6c42\u6211\u4eec\u53d1\u9001\u683c\u5f0f\u9519\u8bef\u7684\u6d88\u606f\uff0c\u5b83\u5c31\u53ef\u4ee5\u963b\u6b62\u6211\u4eec\u7684\u4e00\u4e9b\u653b\u51fb\u5c1d\u8bd5\u3002\n\u8fd9\u9879\u7814\u7a76\u6ca1\u6709\u4ec0\u4e48\u662f\u5bb9\u6613\u7684\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u662f\u5728\u6211\u4eec\u7684\u6e05\u5355\u4e0a\u589e\u52a0\u4e86\u8fd9\u4e2a\u65b0\u7684\u969c\u788d\uff0c\u5e76\u7ee7\u7eed\u4e0b\u53bb\u3002\n\u73b0\u5728\u6211\u4eec\u4e86\u89e3\u4e86\u8c03\u5236\u89e3\u8c03\u5668\u5411\u4e32\u884c\u8bbe\u5907\u53d1\u9001\u6587\u672c\u6d88\u606f\u7684\u539f\u56e0\uff0c\u6211\u4eec\u8ddf\u8e2a\u4e86\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u6d88\u606f\u6d41\uff0c\u5e76\u5f00\u59cb\u5728\u6bcf\u4e2a\u4e0d\u540c\u7684\u5904\u7406\u7a0b\u5e8f\u4e2d\u67e5\u627e\u6f0f\u6d1e\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u91cd\u70b9\u653e\u5728ZCL\u5904\u7406\u7a0b\u5e8f\u4e0a\uff0c\u56e0\u4e3a\u5b83\u652f\u6301\u5bf9\u5404\u79cd\u6570\u636e\u7c7b\u578b\u5c5e\u6027\u7684\u8bfb/\u5199\u64cd\u4f5c\uff1a\n\u6b63\u5982\u60a8\u53ef\u80fd\u4e86\u89e3\u7684\u90a3\u6837\uff0c\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e2d\u5904\u7406\u53ef\u53d8\u957f\u5ea6\u5b57\u6bb5\u80af\u5b9a\u4f1a\u5bfc\u81f4\u6f0f\u6d1e\u3002\u56fe5\u663e\u793a\u4e86\u5904\u7406\u6b64\u60c5\u51b5\u7684\u6c47\u7f16\u4ee3\u7801\uff1a\n\u6ce8\u610f\uff1a\u8bf7\u8bb0\u4f4f\uff0cMIPS\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u5ef6\u8fdf\u69fd\uff0c\u56e0\u6b64\u5728\u8c03\u7528malloc()\u65f6\uff0c\u503c0x2B\u4f5c\u4e3a\u6307\u4ee4\u4e2d\u5ef6\u8fdf\u69fd\u5185\u7684\u53c2\u6570\u4f20\u9012\uff1ali=$a0\uff0c0x2B\u3002\u5bf9\u4e8e\u4efb\u4f55\u7b2c\u4e00\u6b21\u9605\u8bfbMIPS\u6c47\u7f16\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4eba\u6709\u70b9\u56f0\u60d1\u3002\n\u6211\u4eec\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u653b\u51fb\u8005\u53ef\u4ee5\u5bf9READ_ATTRIBUTE\u6d88\u606f\u53d1\u9001\u6076\u610f\u54cd\u5e94\uff0c\u8be5\u6d88\u606f\u5305\u542b\u5927\u4e8e\u56fa\u5b9a\u5927\u5c0f43\u5b57\u8282(0x2B)\u7684\u683c\u5f0f\u9519\u8bef\u7684\u5b57\u8282\u6570\u7ec4\u3002\u8fd9\u4f1a\u89e6\u53d1\u57fa\u4e8e\u5806\u7684\u53d7\u63a7\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u6ca1\u6709\u4efb\u4f55\u5b57\u8282\u9650\u5236\u3002\n\u7531\u4e8eZCL\u662fZigBee\u5806\u6808\u4e2d\u76f8\u5bf9\u8f83\u9ad8\u7684\u5c42\uff0c\u6211\u4eec\u53ea\u80fd\u53d1\u9001\u6700\u591a70\u5b57\u8282\u7684\u6570\u7ec4\u3002\u5426\u5219\uff0c\u6211\u4eec\u7684\u6d88\u606f\u5c06\u5927\u4e8e\u7f51\u7edc\u9650\u5236\u3002\n\u72b6\u6001\u673a\u68c0\u67e5\u53ef\u80fd\u4f1a\u5f3a\u5236\u6211\u4eec\u4ec5\u4f7f\u7528\u6b63\u786e\u7684\u8bf7\u6c42\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u54cd\u5e94\u3002\n\u8fd9\u5e76\u4e0d\u662f\u6700\u5bb9\u6613\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u6f0f\u6d1e\u3002\n\u5728\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u673a\uff0c\u6211\u4eec\u7684\u4e32\u884c\u7535\u7f06\u7ec8\u4e8e\u5230\u8fbe\uff0c\u6211\u4eec\u7acb\u5373\u5f00\u59cb\u68c0\u67e5\u662f\u5426\u786e\u5b9e\u53d1\u73b0\u4e86\u6f0f\u6d1e\u3002\u6211\u4eec\u7f16\u8bd1\u4e86\u4e00\u4e2agdbserver\u5e76\u5c06\u5176\u653e\u5728\u6865\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0c\u73b0\u5728\u9047\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u969c\u788d\uff1a\u6211\u4eec\u6ca1\u6709\u7528\u6765\u53d1\u9001\u653b\u51fb\u7684\u53d1\u5c04\u5668\u3002\u5728\u4e0e\u57c3\u4e9a\u5c14\u00b7R\u518d\u6b21\u5546\u8bae\u540e\uff0c\u6211\u4eec\u8d2d\u4e70\u4e86\u706f\u6ce1CPU\u7684\u8bc4\u4f30\u677f\uff0c\u4e0e\u4ed6\u7684\u56e2\u961f\u5728\u4ed6\u4eec\u7684\u7814\u7a76\u4e2d\u6240\u505a\u7684\u5b8c\u5168\u4e00\u6837\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u9ed1\u5ba2\u653b\u51fb\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u9a8c\u8bc1\u8be5\u6f0f\u6d1e\u7684\u5b58\u5728\uff0c\u5373\u4f7f\u4e0d\u9700\u8981\u901a\u8fc7\u7a7a\u4e2d\u4f20\u8f93\u65e0\u7ebf\u7535\u6d88\u606f(\u5e0c\u671b\u8c03\u5236\u89e3\u8c03\u5668\u7a0d\u540e\u4e0d\u4f1a\u963b\u6b62\u6211\u4eec)\u3002Ipbridge\u8fdb\u7a0b\u652f\u6301\u8c03\u8bd5\u6d4b\u8bd5\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u901a\u8fc7\u8fde\u63a5\u5230\u8fdb\u7a0b\u4f7f\u7528\u8c03\u8bd5\u7ebf\u7a0b\u4fa6\u542c\u7684\u4e24\u4e2a\u547d\u540d\u7ba1\u9053\u6765\u6fc0\u6d3b\uff1a/tmp/ipbridge geio_in\u548c/tmp/ipbridge geio_out\u3002\u867d\u7136\u8fd9\u4e9b\u8c03\u8bd5\u529f\u80fd\u6ca1\u6709\u771f\u6b63\u7684\u5e2e\u52a9\uff0c\u4f46\u6211\u4eec\u4fee\u8865\u4e86\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4ee5\u4fbf\u901a\u8fc7\u8fd9\u4e9b\u7ba1\u9053\u5230\u8fbe\u7684\u6d88\u606f\u88ab\u6dfb\u52a0\u5230\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u662f\u4ece\u8c03\u5236\u89e3\u8c03\u5668\u672c\u8eab\u5230\u8fbe\u7684\u4e00\u6837\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u5c0f\u7684\u4e8c\u8fdb\u5236\u8865\u4e01\uff0c\u6211\u4eec\u80fd\u591f\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u8fdb\u7a0b\uff0c\u8be5\u8fdb\u7a0b\u8fde\u63a5\u5230\u547d\u540d\u7ba1\u9053\u5e76\u53d1\u9001(\u6587\u672c)\u6d88\u606f\uff0c\u76ee\u7684\u662f\u653b\u51fb\u6613\u53d7\u653b\u51fb\u7684\u4ee3\u7801\u51fd\u6570\u3002\u7ecf\u8fc7\u53cd\u590d\u8bd5\u9a8c\uff0c\u5e76\u4f7f\u7528\u6211\u4eec\u7684\u8c03\u8bd5\u5668\uff0c\u6211\u4eec\u80fd\u591f\u89e6\u53d1\u8be5\u6f0f\u6d1e\u5e76\u8bc1\u660e\u5b83\u7684\u5b58\u5728\u3002\u552f\u4e00\u7684\u8b66\u544a\u662f\u8c03\u5236\u89e3\u8c03\u5668\u4ecd\u7136\u53ef\u4ee5\u963b\u6b62\u5b83\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u901a\u8fc7\u65e0\u7ebf\u7535\u4f20\u8f93\u653b\u51fb\u3002\n\u5728\u7b49\u5f85\u6211\u4eec\u7684\u53d1\u5c04\u5668\u65f6\uff0c\u6211\u4eec\u5168\u5957\u7684\u98de\u5229\u6d66\u8272\u8c03\u5165\u95e8\u5957\u4ef6\u9001\u6765\u4e86\u4e00\u4e2a\u5168\u65b0\u76842.1\u578b\u53f7\u6865\u67b6\u548c3\u4e2a\u706f\u6ce1\u3002\u8fd9\u770b\u8d77\u6765\u662f\u4ece\u7f51\u6865\u63d0\u53d6\u65b0\u56fa\u4ef6\u7684\u5408\u9002\u65f6\u673a\uff0c\u540c\u65f6\u5c062.0\u7f51\u6865\u66f4\u65b0\u4e3a\u6700\u65b0\u56fa\u4ef6\u3002\u6bd5\u7adf\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4ece2016\u5e74\u5f00\u59cb\u4ece\u4e8b\u56fa\u4ef6\u5de5\u4f5c\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\u5173\u4e8e\u65b0\u56fa\u4ef6\uff0c\u6211\u4eec\u9996\u5148\u6ce8\u610f\u5230\u7684\u662f\u5b83\u7684\u5927\u5c0f\u3002\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0cipbridge ELF\u6587\u4ef6\u4ece1221KB\u589e\u52a0\u52303227KB\u3002\u5728IDA Pro\u4e2d\u6253\u5f00\u5b83\u5411\u6211\u4eec\u5c55\u793a\u4e86\u4e3b\u8981\u7684\u4e0d\u540c\u4e4b\u5904\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f(\u610f\u5916\u7684\uff1f)\u3002\u9644\u5e26\u8c03\u8bd5\u7b26\u53f7\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6d88\u606f\uff0c\u53ef\u4ee5\u771f\u6b63\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u9006\u5411\u5de5\u7a0b\u7684\u5c1d\u8bd5\u3002\u56fe6\u663e\u793a\u4e86\u5176\u4e2d\u4e00\u4e9b\u7b26\u53f7\uff1a\n\u4f7f\u7528\u8fd9\u4e2a\u65b0\u53d1\u73b0\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u6700\u521d\u7684\u53cd\u5411\u5de5\u7a0b\u662f\u76f8\u5bf9\u51c6\u786e\u7684\uff0c\u6613\u53d7\u653b\u51fb\u51fd\u6570\u7684\u540d\u79f0\u539f\u6765\u662f\uff1aSmartlink_utils_ReadAttributeValue\u3002\n\u5728\u5206\u6790\u65b0\u56fa\u4ef6\u7248\u672c\u4e2d\u6613\u53d7\u653b\u51fb\u7684\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u4ee4\u4eba\u4e0d\u5feb\u7684\u60ca\u559c\u3002\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5217\u8868\u5df2\u66f4\u65b0\uff0c\u73b0\u5728\u4f9b\u5e94\u5546\u652f\u6301\u5b57\u7b26\u4e32(0x42)\u800c\u4e0d\u662f\u5b57\u8282\u6570\u7ec4(0x48)\u3002\u867d\u7136\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4ecd\u7136\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u5206\u914d\u73b0\u5728\u5df2\u66f4\u6539\u4e3a\u66f4\u9002\u5408\u4ee5NULL\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff1a\n\u4e0d\u518d\u4f7f\u7528\u56fa\u5b9a\u7684\u5806\u7f13\u51b2\u533a\uff0c\u5e76\u4e14\u5bf9\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u7684\u66f4\u6539\u521a\u521a\u5173\u95ed\u4e86\u6211\u4eec\u7684\u6f0f\u6d1e\u3002\u662f\u65f6\u5019\u53bb\u627e\u65b0\u7684\u4e86\u3002\n\u6211\u4eec\u628aZCL\u6a21\u5757\u653e\u5728\u4e00\u8fb9\uff0c\u6700\u7ec8\u627e\u5230\u4e86\u5230ZDP\u6a21\u5757\u7684\u65b9\u6cd5\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u627e\u5230\u4e86\u8fdb\u5165LQI(\u94fe\u8def\u8d28\u91cf\u6307\u793a\u5668)\u7ba1\u7406\u54cd\u5e94\u7684\u5904\u7406\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u6d88\u606f\u662f\u8d1f\u8d23\u90bb\u5c45\u53d1\u73b0\u7684\u6a21\u5757\u7684\u4e00\u90e8\u5206\u3002\u7f51\u6865\u5b9a\u671f\u5411\u706f\u6ce1\u67e5\u8be2\u5176\u5728ZigBee\u7f51\u7edc\u4e2d\u7684\u5df2\u77e5\u90bb\u5c45\u3002\u867d\u7136\u540d\u79f0\u6697\u793a\u6d88\u606f\u4fa7\u91cd\u4e8e\u65e0\u7ebf\u7535\u4f20\u8f93\u7684\u8d28\u91cf\uff0c\u4f46\u6d88\u606f\u7ed3\u6784\u5b9e\u9645\u4e0a\u4fa7\u91cd\u4e8e\u6bcf\u4e2a\u90bb\u5c45\u7684\u5168\u5957\u7f51\u7edc\u5730\u5740\u3002\n8\u5b57\u8282\u6269\u5c55\u5730\u5740\uff1a\u5168\u7403\u552f\u4e00\u7684\u7f51\u7edc\u5730\u5740(\u7c7b\u4f3c\u4e8e\u4ee5\u592a\u7f51MAC\u5730\u5740)\u3002\n2\u5b57\u8282-\u7f51\u7edc\u5730\u5740\uff1a\u5728\u5f53\u524dZigBee\u7f51\u7edc\u4e2d\u672c\u5730\u552f\u4e00\u7684\u77ed\u7f51\u7edc\u5730\u5740\u3002\n2\u5b57\u8282-PAN ID\uff1a\u4e2a\u4eba\u533a\u57df\u7f51\u7edc\u6807\u8bc6\u7b26\uff0c\u672c\u5730ZigBee\u7f51\u7edc\u7684\u6807\u8bc6\u7b26\u3002\n\u7531\u4e8e\u53cc\u65b9\u9700\u8981\u76f8\u4e92\u544a\u77e5\u53ef\u53d8\u6570\u91cf\u7684\u90bb\u5c45\uff0c\u5176\u53ef\u4ee5\u5728IPBridge\u5168\u5c40\u90bb\u5c45\u9635\u5217\u4e2d\u5305\u62ec\u6700\u591a0x41\u4e2a\u53d7\u652f\u6301\u7684\u8bb0\u5f55\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6d88\u606f\u5305\u62ec\u5206\u6bb5\u683c\u5f0f\u3002\u5728\u6bcf\u4e2a\u54cd\u5e94\u4e2d\uff0c\u706f\u6ce1\u544a\u8bc9\u7f51\u6865\u5b83\u5f53\u524d\u6b63\u5728\u7528\u53ef\u80fd\u7684S\u4e2a\u8bb0\u5f55\u4e2d\u7684L\u4e2a\u8bb0\u5f55(\u4ece\u504f\u79fb\u91cfX\u5230\u504f\u79fb\u91cfX+L-1)\u8fdb\u884c\u5e94\u7b54\u3002\n\u60a8\u53ef\u80fd\u8fd8\u8bb0\u5f97\uff0cZigBee\u5806\u6808\u4e2d\u7684\u6d88\u606f\u5927\u5c0f\u76f8\u5f53\u5c0f\uff0c\u56e0\u6b64\u5728\u6bcf\u6761\u6d88\u606f\u4e2d\u4f7f\u7528\u5982\u6b64\u591a\u7684\u7d22\u5f15\uff0c\u5e76\u5206\u522b\u53d1\u9001\u591a\u676116\u5b57\u8282\u7684\u8bb0\u5f55\uff0c\u786e\u5b9e\u9650\u5236\u4e86\u6bcf\u6761\u6d88\u606f\u4e2d\u53ef\u4ee5\u5305\u542b\u7684\u8bb0\u5f55\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u5f00\u53d1\u4eba\u5458\u5c06\u4f20\u5165\u8bb0\u5f55\u5b58\u50a8\u5728\u5806\u6808\u4e2d\u7684\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u53ef\u5bb9\u7eb36\u6761\u8bb0\u5f55\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u9002\u5f53\u7684\u68c0\u67e5\u6765\u786e\u4fdd\u4f20\u5165\u7684\u957f\u5ea6\u5b57\u6bb5\u786e\u5b9e\u8db3\u591f\u5c0f\uff0c\u4ece\u800c\u5bfc\u81f4\u6f5c\u5728\u7684\u57fa\u4e8e\u5806\u6808\u7684\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\n\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u6211\u4eec\u8ba1\u5212\u5982\u4f55\u4f20\u8f93\u5982\u6b64\u201c\u5e9e\u5927\u201d\u7684\u6d88\u606f\u5e76\u4f7f\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\u7531\u4e8e\u65e0\u7ebf\u7535\u5bf9\u6d88\u606f\u5927\u5c0f\u7684\u7269\u7406\u9650\u5236\uff0c\u6211\u4eec\u552f\u4e00\u7684\u5e0c\u671b\u662f\u627e\u5230\u8c03\u5236\u89e3\u8c03\u5668\u4e2d\u7684\u6f0f\u6d1e\uff0c\u7136\u540e\u5229\u7528\u8fd9\u79cd\u57fa\u4e8e\u5806\u6808\u7684\u6ea2\u51fa\u4ece\u8c03\u5236\u89e3\u8c03\u5668\u8df3\u5230\u4e3bCPU\u3002\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u6211\u4eec\u521a\u521a\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u4e5f\u53ea\u80fd\u5728\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u56fa\u4ef6\u7684\u989d\u5916CPU\u4e2d\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6f0f\u6d1e\u6765\u5229\u7528\u5b83\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8ba1\u5212\uff0c\u4f46\u5728\u6ca1\u6709\u5176\u4ed6\u2026\u7684\u60c5\u51b5\u4e0b\u3002\n\u5728\u5f00\u59cb\u8fd9\u6837\u5927\u80c6\u7684\u884c\u52a8\u4e4b\u524d\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u6211\u4eec\u7684\u9ed1\u5ba2\u6ce8\u5165\u6570\u636e\u5305\uff0c\u5e76\u8bd5\u56fe\u89e6\u53d1\u57fa\u4e8e\u5806\u6808\u7684\u53ef\u63a7\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u4ee5\u68c0\u67e5\u6b64\u65b0\u6f0f\u6d1e\u7684\u53ef\u5229\u7528\u6027\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5806\u6808\u4e0a\u7684\u8fd4\u56de\u5730\u5740\u6b63\u597d\u4f4d\u4e8e\u6ea2\u51fa\u65f6\u6211\u4eec\u65e0\u6cd5\u5b8c\u5168\u63a7\u5236\u7684\u504f\u79fb\u91cf\u4e2d\u3002\u6211\u4eec\u7684\u6ea2\u51fa\u662f\u901a\u8fc7\u89e3\u6790\u4f20\u5165\u5b57\u6bb5\u5e76\u5c06\u5b83\u4eec\u653e\u5728\u672c\u5730\u7ed3\u6784\u4e2d\u53d1\u751f\u7684\u3002\u539f\u6765\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u503c0x00000004\u6ea2\u51fa\u8fd4\u56de\u5730\u5740\u3002\n\u7ed3\u8bba\uff1a\u4e0d\u53ef\u5f00\u53d1\u3002\u81f3\u5c11\u8fd9\u7701\u53bb\u4e86\u6211\u4eec\u5c1d\u8bd5\u548c\u5bfb\u627e\u6f0f\u6d1e\u7684\u9700\u8981\u3002\n.", "note_en": "Everyone is familiar with the concept of IoT, the Internet of Things, but how many have heard of smart lightbulbs? You can control the light in your house, and even calibrate the color of each lightbulb, just by using a mobile app or your digital home assistant. The smart lightbulb management is done over WiFi or even ZigBee, a low bandwidth radio protocol.\n A few years ago, a team of academic researchers showed how they can take over and control smart lightbulbs, and how this in turn allows them to create a chain reaction that can spread throughout a modern city. Their research brought up an interesting question: aside from triggering a blackout (and maybe a few epilepsy seizures), could these lightbulbs pose a serious risk to our network security? Could attackers somehow bridge the gap between the physical IoT network (the lightbulbs) and even more appealing targets, such as the computer network in our homes, offices or even our smart cities?\n  Continuing from where the previous research left off, we go right to the core: the smart hub that acts as a bridge between the IP network and the ZigBee network. By masquerading as a legitimate ZigBee lightbulb, we were able to exploit vulnerabilities we found in the bridge, which enabled us to infiltrate the lucrative IP network using a  remote over-the-air ZigBee exploit.\n   This research was done with the help of the  Check Point Institute for Information Security (CPIIS) in  Tel Aviv University.\n  After we finished our previous research ( Say Cheese: How I Ransomwared Your DSLR Camera) we decided to extend our debugger ( Scout) to support additional architectures such as MIPS. As the best way to do so is to start researching MIPS, I asked on Twitter for suggestions of a good MIPS target for a vulnerability research.\n As is mostly the case, people responded with a few promising leads, and the most promising one was from an old colleague of mine: Eyal Ronen ( @eyalr0), who is now in a research position at the  CPIIS (Small world, isn\u2019t it?). Eyal Ronen suggested I continue his research on smart lightbulbs (See \u201cPrior Work\u201d in the next section). In their original research, his group was only able to take control of the lightbulbs themselves. He believed it might be possible to leverage this position in the ZigBee network to deploy an attack against the bridge that connects the ZigBee network to the IP network. In essence, this new attack vector enables an attacker to infiltrate the IP network from the ZigBee network, using an over-the-air attack.\n  In  IoT Goes Nuclear: Creating a ZigBee Chain Reaction, a team of researchers led by Eyal Ronen ( @eyalr0), Colin O\u2019Flynn ( @colinoflynn) and Adi Shamir, analyzed the security aspects of ZigBee smart lightbulbs. More specifically, they focused on the  Philips Hue bridge and lightbulbs, showing a series of exploits:\n Attackers can remotely \u201csteal\u201d a lightbulb from a given ZigBee network, and force it to join their network (demonstrated using a drone war-flying from 400 meters):  https://www.youtube.com/watch?v=Ed1OjAuRARU\n Due to an implementation flaw, even a regular lightbulb can be used to deploy this type of attack and \u201csteal\u201d lightbulbs from adjacent ZigBee networks.\n Attackers that share the same ZigBee network with a target lightbulb can send a malicious firmware update to the lightbulb, thus taking complete control over it.\n By combining these 3 demonstrated attacks, the researchers argued that by taking control of a chosen subset of lightbulbs in a smart city, they could trigger a nuclear-like chain reaction that could eventually take control of  all the lightbulbs in the city.\n Due to the nature of the attacks, the vendor was only able to block the second attack, thus leaving us with the capabilities to:\n \u201cSteal\u201d a lightbulb from a given ZigBee network in close proximity (400 meters).\n Update the firmware of that lightbulb, and use it to launch the next phase of our attack.\n After receiving a detailed explanation of their original research, and armed with a Philips Hue Bridge that Eyal R. managed to salvage from their lab, we were ready to begin this promising new research.\n  According to Wikipedia, \u201c ZigBee is an IEEE 802.15.4-based specification for a suite of high-level communication protocols used to create \u2026 low-power, low data rate, and close proximity wireless ad hoc networks.\u201d Not to be confused with IEEE 802.11 (WiFi), according to the OSI model,  IEEE 802.15.4 is the technical standard for the radio-based network protocol which acts as layers 1-2 of the ZigBee network stack.\n Just to get a sense of this low data-rate protocol, the maximal transmission unit (MTU) for a frame in the underlying MAC layer of IEEE 802.15.4 is  127 bytes. This means that unless fragmentation is used, the messages of the ZigBee network stack are very limited in size. Hopefully, this limitation won\u2019t restrict us too much in finding, and later on exploiting, vulnerabilities in the ZigBee implementation.\n On top of the narrow radio network layer, ZigBee defines a full stack of network layers, as can be seen in this figure taken from (an older version of) the  ZigBee specs:\n  In short, we can roughly divide the network stack into 4 layers (in ascending order):\n Application Layer (ZDP / ZCL / etc.) \u2013 The logical applicative layer, depending on the incoming message (multiple layers are present at the same time).\n   For those of you who are familiar with the  SNMP protocol, ZCL looks like a different encoding of the same logical interface. The ZCL layer allows devices to query ( READ_ATTRIBUTE) and set ( WRITE_ATTRIBUTE) a collection of configuration values (clusters), which ultimately allows the operator (the bridge) to control the lightbulbs. For example, attributes for the Color Control cluster include:\n  This example also shows that these are not ordinary white/yellow lightbulbs. These smart lightbulbs support a wide range of colors, which can be controlled using an (RGB) color palette.\n  Our target for this research is the  Philips Hue line of products, and more specifically, the  Philips Hue Bridge. As a side note: the Hue line of products originated in the Philips-Lighting division of Philips\u00a0 and is now branded under a third company called  Signify.\n While \u201csmart\u201d lighting solutions aren\u2019t that popular yet in Israel, we found this isn\u2019t the case in many other countries. For instance,  this article from 2018 states that Philips Hue dominates 31% percent of the smart lighting market share in the UK, used by over 430,000 households. In fact, when we presented our research results to some of the VPs in our company, they told us that all the lights in their house are from the Philips Hue brand.\n The following graphic, taken from the original research paper, shows the network architecture for a home or office that uses this product:\n  ZLL is an acronym for  ZigBee  Light  Link, which is a customization layer to the ZigBee network stack that focuses on light devices: both the lightbulbs and the bridge that controls them.\n On the one hand, we have the ZigBee devices: lightbulbs, switch and the bridge. And on the other hand, we have the IP devices in the \u201cregular\u201d computer network: our mobile phone, a router and again, the bridge. As is inferred by his name, the bridge is the only device that is present in both networks, and its role is to translate the commands we send from the mobile app into ZigBee radio messages that are then sent to the lightbulbs.\n  We already knew that the bridge uses a MIPS CPU (that\u2019s why we originally chose it), but it turns out that its architecture is even more complex. In Figure 3, we show the board of the bridge (2.0 model) after we extracted it from the plastic case:\n  On the left, marked in  red, is an Atmel CPU ( ATSAMR21E18E) that implements the lower layers of the ZigBee stack.\n From this point on, we refer to the Atmel CPU as the  modem. This is mainly because the main CPU offloads the handling of low level ZigBee network tasks to be performed solely on this processor. This means that both the physical layer and the NWK layer are handled by the modem, which in turn might query the main CPU for needed configuration values.\n To our surprise, the main CPU runs a Linux kernel and not a real-time-operating-system. This turned out to be quite useful when we had to extract the firmware and debug the main process responsible for the core logic of the bridge.\n On his  website, Colin O\u2019Flynn ( @colinoflynn) describes how to connect to the exposed serial port and gain root privileges on the board. This is a great guide to anyone who deals with embedded Linux devices, and specifically deals with the U-Boot bootloader. Unfortunately, I didn\u2019t have the necessary equipment to connect to the serial interface, which I discovered after I repeatedly failed to reproduce Colin\u2019s results. Fortunately, I consulted my little brother who helped me out and told me which  serial cables I needed to order. And so, we started reverse engineering the old firmware version (from 2016) I received from Eyal R. while I waited for the cables to arrive.\n  The core process in the main CPU is the  ipbridge process. A basic recon shows it is a classic case of an ELF target:\n  This is a somewhat mixed state that we often see when dealing with targets running Linux. The operating system enables some security features by default, and usually the vendor doesn\u2019t try to actively enable additional features such as PIE (Position Independent Executable) or even stack canaries. From our perspective as attackers, the exploitation won\u2019t be easy as there is some ASLR (Address Space Layout Randomization) in place, but it is still possible because there are some fixed known memory addresses we can use in our exploit.\n Before we started reverse engineering the process, we noticed that the disassembler had trouble distinguishing between Mips and Mips16 code sections (similar to the Arm and Thumb case in an ARM firmware). This was a good time to test if  Thumbs Up, originally tested only on Intel and Arm binaries, also produces improved analysis in our Mips binary. Luckily for us, it worked quite well: initially we had 2525 functions, and after the execution we had a cleaner binary with 3478 marked functions. Now we started reverse engineering our binary without a need to manually improve IDA Pro\u2019s analysis.\n Immediately after we started the reverse engineering phase, we saw something odd. For some reason, it looks like we expect our messages to arrive in a textual form?!\n  In Figure 4, we can see the list of strings we expect to find in the incoming message. Each string routes our message to a specific handler function, such as the function we named  EI_zcl_main_handler. At this point, we checked the ZigBee specs again, as it made no sense. The protocol should be binary, and with a really low bandwidth, why does our program think it should receive long strings?\n After reading the conclusions from Eyal R. and Colin once more, it suddenly came clear. The modem has an additional role that we initially ignored: it translates the binary messages to a textual representation, and then sends them through a USB-to-Serial interface. This way the main CPU reads the easy to handle textual messages from a serial device that is mapped as a file in the operating system.\n Colin found evidence that the lightbulbs use the  Atmel BitCloud SDK, which is now closed source and must be purchased from Atmel. Therefore, it makes sense to assume that the same software stack is also used as a \u201cdecoder\u201d layer in the modem CPU in the bridge:\n  This way, the main CPU only needs to be familiar with logical aspects of the ZigBee stack, but doesn\u2019t need to implement complicated decoding and parsing features that are already included in the stack that is shipped with the Atmel modem.\n From a security perspective, this design choice has its pros and cons. As far as we are concerned, it has a massive implication. We only have the firmware for the  ipbridge process, which we can also debug using a remote gdbserver we compiled and placed on the bridge\u2019s file system. The firmware for the modem is encrypted and it will not be easy to recreate the steps from the original research to extract this key (using a power analysis attack) and decrypt the modem\u2019s firmware.\n This means that we can only treat the modem as a black box that performs a lot of parsing, and maybe even holds a few state machines. We have a few hints from the partial code version that is found on GitHub (that is a few years old), but for all intents and purposes it is simply a black box that can block some of our attack attempts if they demand we send malformed messages.\n Nothing about this research is going to be easy, and so, we just add this new obstacle to our list and continue on.\n  Now that we understood why the modem sends us textual messages into a serial device, we tracked down the flow of the messages between the different threads, and started looking for vulnerabilities in each of the different handlers. Our efforts focused on the ZCL handler, as it supports read/write operations on a wide variety of data type attributes:\n  As you can probably understand, handling variable length fields in an embedded device is a sure recipe for vulnerabilities. Figure 5 shows the assembly code that handles this case:\n  Note: Bear in mind that the MIPS architecture uses a  delay slot , so on the call to  malloc(), the value 0x2B is passed as an argument inside the delay slot in the instruction:  li\u00a0\u00a0 $a0, 0x2B. This can be a bit confusing for anyone reading MIPS assembly for the first time.\n What did we find? An attacker could send a malicious response for a  READ_ATTRIBUTE message, containing a malformed byte array that is bigger than the fixed size of 43 bytes (0x2B). This triggers a  controlled heap-based buffer overflow, without any byte restrictions.\n  As ZCL is a relatively high layer in the ZigBee stack, we can only afford to send an array of up to 70 bytes. Otherwise, our message will be bigger than the network restrictions.\n  A state machine check might enforce that we only respond with the correct requested data type.\n This is not exactly the easiest vulnerability to exploit, but it\u2019s a serious vulnerability nevertheless.\n In an instance of good timing, our serial cables finally arrived and we immediately started checking if we had indeed found a vulnerability. We compiled a gdbserver and placed it on the bridge\u2019s file system, and now encountered a new obstacle: we don\u2019t have a transmitter with which to send our attack. After another consult with Eyal R., we bought the  evaluation board of the lightbulb\u2019s CPU, exactly as his team did in their research.\n Meanwhile, we found a hack that allowed us to verify the existence of this vulnerability even without transmitting a radio message over the air (hoping that the modem won\u2019t block us later on). The  ipbridge process supports a debug testing mode that is activated by connecting to two named pipes that the process listens on using a debug thread:  /tmp/ipbridgeio_in and  /tmp/ipbridgeio_out. While these debug capabilities aren\u2019t really helpful, we patched the binary so that messages that arrive through these pipes are added to the message queue as if they arrived from the modem itself.\n Using this small binary patch, we were able to create our own process that connects to the named pipes and sends (textual) messages aiming to hit the vulnerable code function. After some trial and error, and using our debugger, we were able to trigger the vulnerability and prove it exists. The only caveat is that the modem can still block it, and this requires us to transmit the attack over radio.\n While waiting for our transmitter, our full Philips Hue starter kit arrived with a brand new 2.1 model bridge and 3 lightbulbs. This looked like the right time to extract the new firmware from the bridge, together with updating the 2.0 bridge to the latest firmware. After all, up until now we worked on firmware from 2016, and things might have changed in the meantime.\n  The first thing we noticed about the new firmware is its size. For some reason, the  ipbridge ELF file grew from 1221KB to 3227KB. Opening it in IDA Pro showed us the main difference: the binary was (accidentally?) shipped with debug symbols. This is great news that can really help us in our reverse engineering attempts. Figure 6 shows some of these symbols:\n  Using this new discovery, we learned that our initial reverse engineering was relatively accurate, and the name of the vulnerable function turned out to be:  SMARTLINK_UTILS_ReadAttributeValue.\n When analyzing the vulnerable function in the new firmware version, we had an unpleasant surprise. The list of supported data types was updated, and now the vendor supports character strings (0x42)  instead of byte arrays (0x48). Although strings are still variable in length, the allocation now changed to be more appropriate to null terminated strings:\n  A fixed heap buffer is no longer used, and this change of supported data types just  closed our vulnerability. Time to search for a new one.\n  We put the ZCL module aside and eventually found our way to the ZDP module, more specifically, to the handler of incoming LQI (Link Quality Indicator) management responses. These messages are part of a module that is responsible for neighbor discovery. Periodically, the bridge queries the lightbulbs for their known neighbors in the ZigBee network. While the name suggests that the messages are focused on the quality of the radio transmission, the message structure is actually focused on the full set of network addresses for each neighbor.\n  8 bytes \u2013 Extended address: Globally unique network address (similar to the Ethernet MAC address).\n 2 bytes \u2013 Network address: Short network address that is locally unique in the current ZigBee network.\n 2 bytes \u2013 PAN Id: Personal Area Network Identifier, the identifier of the local ZigBee network.\n As both parties need to tell each other about a variable number of neighbors, which can include up to 0x41 supported records in the  ipbridge global neighbor array, these messages include a fragmentation format. In each response, the lightbulb tells the bridge that it is currently answering with  L records, from offset  X to offset  X + L - 1, out of possible  S records.\n As you may recall, the message sizes in the ZigBee stack are quite small, so using so many indices in each message, and sending multiple records of 16 bytes each, really limits the number of records that can be included in each message. As a result, the developers store the incoming records on the stack in an array that can hold up to 6 records. However, there are no checks in place to make sure that the incoming length field is indeed small enough, leading to a  potential stack-based buffer overflow.\n You might wonder how we are planning to transmit such a \u201chuge\u201d message and overflow the buffer. Due to the physical limitation on the message sizes over radio, our only hope is to find a vulnerability in the modem, and then use this stack-based overflow to hop from the modem and into the main CPU. This means that even if we just found a vulnerability, it could only be exploited using an additional vulnerability in an additional CPU for which we don\u2019t even have the firmware. Not exactly a great plan, but in the absence of anything else\u2026\n Before starting such a daring move, we once again used our hack to inject packets, and tried to trigger a controlled stack-based buffer overflow to check the exploitability of this new vulnerability. Unfortunately, the return address on the stack lies exactly in an offset that we don\u2019t fully control when overflowing. Our overflow occurs by parsing incoming fields and placing them in a local struct. It turns out that we can only overflow the return address with the value  0x00000004.\n Verdict: Not exploitable. At least this saved us the need to try and look for vulnerabilities\n......", "posttime": "2020-08-08 15:33:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6076\u610f,network,\u706f\u6ce1", "title": "\u4f7f\u7528\u6076\u610fZigBee\u706f\u6ce1\u6e17\u900f\u7f51\u7edc", "title_en": "Infiltrating the network using a malicious ZigBee lightbulb", "transed": 1, "url": "https://research.checkpoint.com/2020/dont-be-silly-its-only-a-lightbulb/", "via": "", "real_tags": ["\u6076\u610f", "network", "\u706f\u6ce1"]}, {"category": "", "categoryclass": "", "imagename": "8e5183524a4a0446696a89084e40d81d.jpg", "infoid": 1016986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u201c\u4fe1\u606f\u81ea\u7531\u6cd5\u201d\u83b7\u5f97\u7684\u6587\u4ef6\u663e\u793a\uff0c\u53bb\u5e749\u6708\u8fde\u7eed\u4e24\u4e2a\u665a\u4e0a\uff0c\u4e00\u4e9b\u5c0f\u578b\u65e0\u4eba\u673a\u5728\u5e15\u6d1b\u7ef4\u5fb7\u6838\u7535\u7ad9\u7684\u7981\u533a\u98de\u884c\u3002\u5b89\u5168\u90e8\u961f\u5728\u4e00\u65c1\u89c2\u770b\uff0c\u4f46\u663e\u7136\u65e0\u52a9\u4e8e\u91c7\u53d6\u884c\u52a8\uff0c\u56e0\u4e3a\u65e0\u4eba\u673a\u5728\u6d88\u5931\u5728\u591c\u8272\u4e2d\u4e4b\u524d\u8fdb\u884c\u4e86\u5165\u4fb5\u3002\u8fd9\u4e00\u4e8b\u4ef6\u7684\u7ec6\u8282\u4e3a\u4ed6\u4eec\u5230\u5e95\u5728\u505a\u4ec0\u4e48\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ebf\u7d22\uff0c\u4f46\u662f\u8c01\u9001\u6765\u7684\u4ecd\u7136\u662f\u4e00\u4e2a\u8c1c\u3002\n\u9053\u683c\u62c9\u65af\u00b7D\u00b7\u7ea6\u7ff0\u900a(Douglas D.Johnson)\u4ee3\u8868UAP\u7814\u7a76\u79d1\u5b66\u8054\u76df(SCU)\u5229\u7528\u201c\u4fe1\u606f\u81ea\u7531\u6cd5\u201d(FOIA)\u4ece\u6838\u7ba1\u7406\u59d4\u5458\u4f1a\u83b7\u5f97\u4e86\u4e8b\u4ef6\u7684\u7ec6\u8282\u3002SCU\u7684\u4e3b\u8981\u5174\u8da3\u5728\u4e8e\u53cd\u5e38\u7684\u822a\u7a7a\u73b0\u8c61\uff0c\u4e5f\u5c31\u662f\u5176\u4ed6\u4eba\u6240\u8bf4\u7684\u4e0d\u660e\u98de\u884c\u7269\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u98de\u884c\u7269\u4f53\u5f88\u5bb9\u6613\u88ab\u8bc6\u522b\u4e3a\u65e0\u4eba\u673a\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u786e\u5207\u4efb\u52a1\u548c\u6765\u6e90\u5c1a\u4e0d\u6e05\u695a\u3002\u7ea6\u7ff0\u900a\u5c06\u4fe1\u606f\u4f20\u9012\u7ed9\u6218\u533a\uff0c\u6218\u533a\u7ed9\u51fa\u4e86\u8be6\u7ec6\u7684\u8bf4\u660e\u3002\n\u5e15\u6d1b\u7ef4\u5fb7\u6838\u7535\u7ad9\u662f\u7f8e\u56fd\u6700\u5927\u7684\u6838\u7535\u7ad9\uff0c\u53d1\u7535\u91cf\u8d85\u8fc73\u5343\u5146\u74e6\uff0c\u5360\u4e9a\u5229\u6851\u90a3\u5dde\u603b\u53d1\u7535\u91cf\u768435%\u3002\u5b83\u4e3a\u51e4\u51f0\u57ce\u548c\u56fe\u68ee\u4ee5\u53ca\u5723\u5730\u4e9a\u54e5\u548c\u6d1b\u6749\u77f6\u4f9b\u7535\u3002\u5b83\u662f\u91cd\u8981\u7684\u6218\u7565\u57fa\u7840\u8bbe\u65bd\uff1b\u57282003\u5e74\u4f0a\u62c9\u514b\u6218\u4e89\u671f\u95f4\uff0c\u56fd\u6c11\u8b66\u536b\u961f\u88ab\u90e8\u7f72\u5230\u5e15\u6d1b\u7ef4\u5fb7\uff0c\u4ee5\u9632\u5fa1\u53ef\u80fd\u7684\u6050\u6016\u5a01\u80c1\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e0e\u5176\u4ed6\u6838\u8bbe\u65bd\u4e00\u6837\uff0c\u5b83\u7531\u6b66\u88c5\u4fdd\u5b89\u4eba\u5458\u4fdd\u62a4\u3002\n9\u670829\u65e5\u665a\u4e0a\uff0c\u6b66\u88c5\u8b66\u536b\u3001\u5927\u95e8\u3001\u6805\u680f\u548c\u8def\u969c\u90fd\u6d3e\u4e0d\u4e0a\u7528\u573a.\u3002\u6839\u636e\u5b98\u65b9\u62a5\u9053\uff1a\n\u201c\u8b66\u5b98\u6ce8\u610f\u5230\u51e0\u67b6\u65e0\u4eba\u673a(5\u67b6\u62166\u67b6)\u98de\u8d8a\u73b0\u573a\u3002\u65e0\u4eba\u9a7e\u9a76\u98de\u673a\u5728\u4fdd\u62a4\u533a\u5185\u5916\u76843\u4e2a\u5355\u4f4d\u7684\u573a\u5730\u4e0a\u7a7a\u76d8\u65cb\u3002\u65e0\u4eba\u673a\u6709\u7ea2\u8272\u548c\u767d\u8272\u7684\u95ea\u5149\u6743[\u539f\u6587\u5982\u6b64]\uff0c\u4f30\u8ba1\u5728\u73b0\u573a\u4e0a\u7a7a200\u5230300\u82f1\u5c3a(\u539f\u6587\u5982\u6b64)\u3002\u636e\u62a5\u9053\uff0c\u65e0\u4eba\u673a\u5728\u63a5\u8fd1\u73b0\u573a\u65f6\u6253\u5f00\u4e86\u805a\u5149\u706f\uff0c\u800c\u5728\u8fdb\u5165\u5b89\u5168\u6240\u6709\u8005\u63a7\u5236\u533a\u65f6\uff0c\u65e0\u4eba\u673a\u5173\u95ed\u4e86\u805a\u5149\u706f\u3002\u65e0\u4eba\u673a\u5728\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f420\u70b950\u5206\u9996\u6b21\u88ab\u53d1\u73b0\uff0c\u622a\u81f3\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f421\u70b947\u5206\uff0c\u65e0\u4eba\u673a\u4ecd\u5728\u73b0\u573a\u4e0a\u7a7a\u3002\u5b89\u5168\u59ff\u52bf\u662f\u6b63\u5e38\u7684\uff0c\u5f53\u6ce8\u610f\u5230\u65e0\u4eba\u673a\u65f6\uff0c\u5b89\u5168\u59ff\u52bf\u5c31\u53d8\u6210\u4e86\u62ac\u9ad8\u3002\u201c\u3002\n\u65e0\u4eba\u673a\u4e8e22\uff1a30\u8d77\u98de\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u6b21\u88ab\u53d1\u73b080\u5206\u949f\u540e\u3002\u5b89\u5168\u5b98\u5458\u4f30\u8ba1\u5b83\u4eec\u7684\u76f4\u5f84\u8d85\u8fc7\u4e24\u82f1\u5c3a\u3002\u8fd9\u8868\u660e\u5b83\u4eec\u4e0d\u4ec5\u4ec5\u662f\u50cf\u6d41\u884c\u7684DJI\u5e7b\u5f71\u90a3\u6837\u7684\u6d88\u8d39\u65e0\u4eba\u673a\uff0c\u5b83\u7684\u98de\u884c\u7eed\u822a\u65f6\u95f4\u7ea6\u4e3a\u534a\u5c0f\u65f6\uff0c\u76f4\u5f84\u7ea6\u4e00\u82f1\u5c3a\uff0c\u800c\u662f\u4e00\u79cd\u66f4\u5927\u3001\u66f4\u6709\u80fd\u529b\u7684\u65e0\u4eba\u673a\u3002\u6d1b\u514b\u5e0c\u5fb7\u00b7\u9a6c\u4e01\u516c\u53f8\u7684Indago\u662f\u4e00\u67b6\u519b\u7528\u7ea7\u522b\u7684\u56db\u8f74\u98de\u884c\u5668\uff0c\u6700\u8fd1\u5356\u7ed9\u4e86\u745e\u58eb\u519b\u961f\uff0c\u98de\u884c\u8010\u529b\u7ea6\u4e3a70\u5206\u949f\uff0c\u76f4\u5f84\u8d85\u8fc72\u82f1\u5c3a\u3002\u6bcf\u67b6\u6700\u4f4e\u51e0\u5343\u7f8e\u5143\uff0c\u6bd4\u51e0\u767e\u7f8e\u5143\u7684\u6d88\u8d39\u65e0\u4eba\u673a\u8981\u5c11\u5f97\u591a\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u8868\u660e\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6076\u4f5c\u5267\u3002\n\u201c\u89c2\u5bdf\u5230\u56db(4)\u67b6\u65e0\u4eba\u673a\u4ece\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f420\uff1a51\u5f00\u59cb\u98de\u884c\uff0c\u4e00\u76f4\u6301\u7eed\u5230\u672c\u62a5\u544a\u6240\u8ff0\u65f6\u95f4(\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f421\uff1a13)\u3002\u6b63\u5982\u6628\u665a\u53d1\u751f\u7684\u90a3\u6837\uff0c\u65e0\u4eba\u673a\u6b63\u5728\u6240\u6709\u8005\u63a7\u5236\u533a\u3001\u5b89\u5168\u6240\u6709\u8005\u63a7\u5236\u533a\u548c\u4fdd\u62a4\u533a\u5185\u3001\u7ecf\u8fc7\u548c\u5468\u56f4\u98de\u884c\u3002\u6b64\u5916\uff0c\u5c31\u50cf\u6628\u665a\u4e00\u6837\uff0c\u65e0\u4eba\u673a\u88ab\u63cf\u8ff0\u4e3a\u4f53\u79ef\u5f88\u5927\uff0c\u6709\u7ea2\u8272\u548c\u767d\u8272\u7684\u95ea\u5149\u706f\u3002\u201c\u3002\n\u9a6c\u91cc\u79d1\u5e15\u53bf\u7684\u5f53\u5730\u8b66\u5bdf\u88ab\u6d3e\u5f80\u5bfb\u627e\u65e0\u4eba\u673a\u64cd\u4f5c\u5458\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\u636e\u62a5\u9053\uff0c\u8be5\u5730\u70b9\u5c06\u63a5\u6536\u65e0\u4eba\u673a\u63a2\u6d4b\u8bbe\u5907\uff0c\u4f46\u4e0d\u4f1a\u63a5\u6536\u53cd\u65e0\u4eba\u673a\u5e72\u6270\u5668\u6216\u5176\u4ed6\u53ef\u80fd\u963b\u6b62\u6b64\u7c7b\u5165\u4fb5\u7684\u9632\u5fa1\u8bbe\u5907\u3002\n\u5c3d\u7ba1\u53d1\u751f\u4e86\u8fd9\u8d77\u4e8b\u4ef6\uff0c\u4f46\u4e24\u4e2a\u6708\u540e\uff0cNRC\u51b3\u5b9a\u4e0d\u8981\u6c42\u5728\u6838\u7535\u7ad9\u5b89\u88c5\u65e0\u4eba\u673a\u9632\u5fa1\u7cfb\u7edf\uff0c\u58f0\u79f0\u5c0f\u578b\u65e0\u4eba\u673a\u4e0d\u80fd\u7834\u574f\u53cd\u5e94\u5806\u6216\u7a83\u53d6\u6838\u6750\u6599\u3002\u8fd9\u4e9b\u5730\u70b9\u5f88\u6709\u53ef\u80fd\u4ecd\u7136\u5bb9\u6613\u53d7\u5230\u65e0\u4eba\u673a\u98de\u8d8a\u7684\u5f71\u54cd\u3002\n\u8fd9\u6837\u7684\u65e0\u4eba\u673a\u771f\u7684\u5bf9\u6838\u8bbe\u65bd\u6784\u6210\u5a01\u80c1\u5417\uff1f\u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u56e0\u4e3a\u53cd\u5e94\u5806\u6709\u4e24\u5230\u4e09\u82f1\u5c3a\u539a\u7684\u6df7\u51dd\u571f\u4fdd\u62a4\uff0c\u80fd\u591f\u627f\u53d7\u5c0f\u578b\u5ba2\u673a\u7684\u649e\u51fb-\u6851\u8fea\u4e9a\u5b9e\u9a8c\u5ba4\u5b9e\u9645\u4e0a\u8fdb\u884c\u4e86\u4e00\u6b21\u5168\u9762\u7684\u6d4b\u8bd5\u6765\u8bc1\u660e\u8fd9\u4e00\u70b9-\u5c0f\u578b\u65e0\u4eba\u673a\u6ca1\u6709\u4ec0\u4e48\u597d\u5bb3\u6015\u7684\u3002\u7136\u800c\uff0c\u65e0\u4eba\u673a\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528\u66b4\u529b\u624b\u6bb5\uff0c\u800c\u662f\u4f1a\u5229\u7528\u5b83\u4eec\u6253\u51fb\u7cbe\u786e\u76ee\u6807\u7684\u80fd\u529b\u6765\u6253\u51fb\u63a7\u5236\u7cfb\u7edf\u548c\u5931\u8d25\u7684\u4fdd\u9669\u7bb1\u3002\u867d\u7136\u8fd9\u4e0d\u592a\u53ef\u80fd\u5bfc\u81f4\u5207\u5c14\u8bfa\u8d1d\u5229\u4e8b\u6545\uff0c\u4f46\u5b83\u5f88\u53ef\u80fd\u4f1a\u5173\u95ed\u6838\u7535\u7ad9\uff0c\u4e00\u4e0b\u5b50\u5207\u65ad\u4e9a\u5229\u6851\u90a3\u5dde35%\u7684\u7535\u529b\u3002\u53bb\u5e74\u5bf9Abqaiq\u8bbe\u65bd\u7684\u6210\u529f\u88ad\u51fb\uff0c\u5927\u7ea620\u67b6\u8f66\u5e93\u5efa\u9020\u7684\u65e0\u4eba\u673a\u6467\u6bc1\u4e86\u6c99\u7279\u963f\u62c9\u4f2f\u4e00\u4e2a\u6212\u5907\u68ee\u4e25\u7684\u77f3\u6cb9\u8bbe\u65bd\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u8b66\u949f\uff0c\u8ba9\u4eba\u8b66\u9192\uff0c\u8fd9\u79cd\u65e0\u4eba\u9a7e\u9a76\u7684\u7cbe\u786e\u6253\u51fb\u4e0d\u518d\u53ea\u662f\u56fd\u5bb6\u884c\u4e3a\u8005\u7684\u4e13\u5c5e\u3002\n\u4e0d\u8fc7\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65e0\u4eba\u673a\u663e\u7136\u4e0d\u662f\u5728\u653b\u51fb\u3002\u5982\u679c\u53ea\u662f\u4e3a\u4e86\u6d4b\u8bd5\u9632\u5fa1\u7cfb\u7edf\uff0c\u4e3a\u4ec0\u4e48\u8981\u6d3e\u51e0\u67b6\u65e0\u4eba\u673a\u800c\u4e0d\u662f\u4e00\u67b6\u5462\uff1f\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5927\u578b\u5546\u7528\u65e0\u4eba\u673a\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u6027\u6d88\u8d39\u673a\u578b\uff1f\u4e3a\u4ec0\u4e48\u8981\u82b1\u8fd9\u4e48\u957f\u65f6\u95f4\u5462\uff1f\n\u6700\u660e\u663e\u7684\u7b54\u6848\u662f\uff0c\u65e0\u4eba\u673a\u5728\u6536\u96c6\u60c5\u62a5\uff0c\u4f7f\u7528\u7684\u76f8\u673a\u6216\u5176\u4ed6\u6d4b\u91cf\u8bbe\u5907\u5bf9\u6d88\u8d39\u8005\u56db\u8f74\u98de\u884c\u5668\u6765\u8bf4\u592a\u5927\u4e86\u3002\u6d4b\u91cf\u5458\u4f7f\u7528\u88c5\u6709\u6fc0\u5149\u96f7\u8fbe(LiDAR)\u7684\u65e0\u4eba\u673a\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u5149\u7ebf\u7684\u96f7\u8fbe\uff0c\u4ee5\u51e0\u5398\u7c73\u7684\u7cbe\u5ea6\u6784\u5efa\u51c6\u786e\u7684\u5efa\u7b51\u7269\u548c\u666f\u89c2\u7684\u4e09\u7ef4\u56fe\u7247\u3002\u5176\u4ed6\u4eba\u4f7f\u7528\u57fa\u4e8e\u65e0\u4eba\u673a\u7684\u6444\u5f71\u6d4b\u91cf\uff0c\u8fd9\u662f\u4e00\u79cd\u5c06\u5927\u91cf\u4e8c\u7ef4\u56fe\u50cf\u5173\u8054\u6210\u5168\u4e09\u7ef4\u56fe\u50cf\u7684\u6280\u672f\u3002\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u90fd\u9700\u8981\u6bd4\u76f4\u622a\u4e86\u5f53\u7684\u7acb\u4ea4\u6865\u957f\u5f97\u591a\u7684\u65f6\u95f4\uff0c\u8fd9\u53ef\u80fd\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u90a3\u91cc\u5b58\u5728\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u3002\n\u4e00\u652f\u7531\u51e0\u67b6\u65e0\u4eba\u673a\u7ec4\u6210\u7684\u673a\u961f\u53ef\u80fd\u4f1a\u88ab\u6d3e\u53bb\u4e00\u6b21\u8c03\u67e5\u6574\u4e2a\u5730\u70b9\u3002\u7136\u800c\uff0c\u5728\u7b2c\u4e00\u4e2a\u665a\u4e0a\u53d6\u5f97\u6210\u529f\u540e\uff0c\u65e0\u4eba\u673a\u64cd\u4f5c\u5458\u53ef\u80fd\u4f1a\u5fcd\u4e0d\u4f4f\u518d\u6b21\u56de\u53bb\u8986\u76d6\u4ed6\u4eec\u53ef\u80fd\u9057\u6f0f\u7684\u4efb\u4f55\u533a\u57df\u6216\u83b7\u5f97\u66f4\u591a\u7ec6\u8282\u3002\u8fd9\u53ef\u80fd\u5df2\u7ecf\u6536\u96c6\u4e86\u4ed6\u4eec\u9700\u8981\u7684\u4e00\u5207\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u518d\u6267\u884c\u7b2c\u4e09\u6b21\u4efb\u52a1\u3002\n\u8fd9\u8868\u660e\uff0c\u5165\u4fb5\u8005\u9664\u4e86\u786e\u5b9a\u5e15\u6d1b\u7ef4\u5fb7\u7f3a\u4e4f\u6709\u6548\u7684\u65e0\u4eba\u673a\u9632\u5fa1\u7cfb\u7edf\u5916\uff0c\u73b0\u5728\u53ef\u80fd\u62e5\u6709\u8be5\u8bbe\u65bd\u7684\u975e\u5e38\u8be6\u7ec6\u7684\u5730\u56fe\uff0c\u663e\u793a\u6bcf\u4e2a\u9600\u95e8\u3001\u7ba1\u9053\u3001\u5f00\u5173\u548c\u63a7\u5236\u7684\u786e\u5207\u4f4d\u7f6e\u3002\u4e5f\u8bb8\u4ed6\u4eec\u53ea\u662f\u60f3\u5728\u6697\u7f51\u4e0a\u628a\u8fd9\u4e9b\u4e1c\u897f\u5356\u7ed9\u4efb\u4f55\u613f\u610f\u4ed8\u94b1\u7684\u4eba\u3002\u6216\u8bb8\u4ed6\u4eec\u5fc3\u91cc\u6709\u522b\u7684\u60f3\u6cd5\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u8fd9\u90fd\u662f\u4e00\u4e2a\u4ee4\u4eba\u9707\u60ca\u7684\u5c55\u793a\uff0c\u8868\u660e\u65e0\u4eba\u673a\u5165\u4fb5\u8005\u73b0\u5728\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u968f\u65f6\u968f\u5730\u53bb\u4efb\u4f55\u4ed6\u4eec\u60f3\u53bb\u7684\u5730\u65b9\u3002\n\u5728\u6211\u7684\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u67e5\u770b\uff0c\u6216\u8005\u5728\u8fd9\u91cc\u67e5\u770b\u6211\u7684\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\u3002", "note_en": "Documents gained under the Freedom of Information Act show how a number of small drones flew around a restricted area at Palo Verde Nuclear Power Plant on two successive nights last September. Security forces watched, but were apparently helpless to act as the drones carried out their incursions before disappearing into the night. Details of the event gives some clues as to just what they were doing, but who sent them remains a mystery.\n  Details of the events were obtained from the Nuclear Regulatory Commission by  Douglas D. Johnson on behalf of the  Scientific Coalition for UAP Studies (SCU) using the Freedom of Information Act (FOIA). The SCU\u2019s main interest is in anomalous aerospace phenomena, what other people term UFOs. In this case though the flying objects were easily identifiable as drones, although their exact mission and origin are unknown. Johnson passed the information to  The War Zone who give a detailed account.\n    Palo Verde Nuclear Power Plant is the largest in the U.S., producing over three gigawatts, 35% of Arizona&#39;s total power capacity. It supplies electricity to Phoenix and Tucson, as well as San Diego and Los Angeles. It is a critical piece of strategic infrastructure; during the 2003 Iraq War, National Guard troops were  deployed to Palo Verde to defend against a possible terrorist threat. In normal times, as with other nuclear installations, it is protected by armed security guards.\n    The armed guards, gates, fences and barriers were useless on the night of September 29 th. According to the official report:\n   \u201cOfficer noticed several drones (5 or 6) flying over the site. The drones are circling the 3 unit site inside and outside the Protected Area. The drones have flashing red and white rights [sic] and are estimated to be 200 to 300 hundred [sic] feet above the site. It was reported the drones had spotlights on while approaching the site that they turned off when they entered the Security Owner Controlled Area. Drones were first noticed at 20:50 MST and are still over the site as of 21:47 MST. Security Posture was normal, which was changed to elevated when the drones were noticed.\u201d\n  The drones departed at 22:30, eighty minutes after they were first spotted. The security officers estimated that they were over two feet in diameter. This indicates that they were not simply consumer drones like the popular  DJI Phantom, which have a flight endurance of about half an hour and is about a foot across, but something larger and more capable. The  Lockheed Martin Indago, a military-grade quadcopter  recently sold to the Swiss Army, has a flight endurance of about seventy minutes and is more than two feet across. At several thousand dollars apiece minimum, these are far less expendable than consumer drones costing a few hundred. All of which suggests this was not just a prank.\n      \u201cFour (4) drones were observed flying beginning at 20:51 MST and continuing through the time of this report (21:13 MST). As occurred last night, the drones are flying in, through, and around the owner-controlled area, the security owner-controlled area, and the protected area. Also, as last night, the drones are described as large with red and white flashing lights.\u201d\n  Local police from Maricopa County were dispatched to find the drone operators, but with no success. The site is reportedly due to receive drone detection gear, but not counter-drone jammers or other defensive equipment that might stop such incursions.\n  Despite this incident, two months later the NRC decided  not to require drone defenses at nuclear plants, asserting that small drones could not damage a reactor or steal nuclear material. It is highly likely that such sites are still vulnerable to drone overflights.\n  Are such drones a genuine threat to nuclear facilities? Many argue that because reactors are protected by two to three feet of concrete, able to withstand the impact of a small airliner \u2013 Sandia Laboratories actually  carried out a full-scale test to prove this \u2013 small drones are nothing to fear. However, drones would probably not go for a brute-force approach, but would use their ability to strike pinpoint targets to hit control systems and failsafes. While this would be unlikely to cause a Chernobyl, it might well shut the plant down, taking out 35% of Arizona\u2019s electricity at a stroke. The successful  attack on the Abqaiq facility last year, in which about twenty garage-built drones knocked out a heavily-defended oil facility in Saudi Arabia, should be a wakeup call that such unmanned precision strikes are not just the preserve of state actors any more.\n  In this case though the drones were clearly not attacking. If it was simply to test the defenses, why send several drones rather than one? Why use big commercial drones rather than disposable consumer models? Why spend so long?\n  The most obvious answer is that the drones were gathering intelligence, using cameras or other surveying gear too large for a consumer quadcopter. Surveyors  use drones fitted with LiDAR, light-based radar, to build accurate three-dimensional pictures of buildings and landscapes with an accuracy of a few centimeters. Others use  drone-based photogrammetry, a technique which correlates a large number of two-dimensional images into a full three-dimensional one. Either process requires much longer than a straightforward flyover, which may explain why there were there for so long.\n  A fleet of several drones could have been sent to survey the entire site in one hit. However, after their success on the first night, the drone operators may have been tempted to go back again to cover any areas they might have missed or get more detail. This may have gathered all they needed, so there was no need for a third mission.\n  This suggests that the intruders, as well as establishing that Palo Verde lacks effective drone defenses, may now have highly detailed maps of the facility, showing the exact location of every valve, pipe, switch and control. Perhaps they simply aim to sell these on the dark web to anyone who will pay. Or perhaps they have something else in mind. Either way, it is an alarming demonstration of how easily drone intruders can now go anywhere anytime they wish.\n Follow me on\u00a0 Twitter.\u00a0 Check out\u00a0my\u00a0 website\u00a0or\u00a0some of my other work\u00a0 here.", "posttime": "2020-08-08 15:08:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u76d1\u89c6,drone,\u65e0\u4eba\u673a", "title": "\u53bb\u5e74\u79cb\u5929\uff0c\u4e00\u4e2a\u65e0\u4eba\u673a\u7fa4\u76d1\u89c6\u4e86\u7f8e\u56fd\u6700\u5927\u7684\u6838\u53cd\u5e94\u5806--\u4e24\u6b21", "title_en": "Last Fall a Drone Swarm Surveilled America's Largest Nuclear Reactor -- Twice", "transed": 1, "url": "https://www.forbes.com/sites/davidhambling/2020/07/30/drone-swarm-invaded-palo-verde-nuclear-power-plant/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u76d1\u89c6", "drone", "\u65e0\u4eba\u673a"]}]
[{"category": "", "categoryclass": "", "imagename": "6f7470eb09f9d1ff0625520d190f418a.jpg", "infoid": 1066683, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81eaIphone\u7684\u9ece\u660e\u4ee5\u6765\uff0c\u667a\u80fd\u624b\u673a\u4e2d\u7684\u8bb8\u591a\u667a\u80fd\u90fd\u6765\u81ea\u5176\u4ed6\u5730\u65b9\uff1a\u4f5c\u4e3a\u4e91\u79f0\u4e3a\u4e91\u7684\u4f01\u4e1a\u8ba1\u7b97\u673a\u3002\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u5411\u7528\u6237\u6570\u636eCloudWard\u53d1\u9001\u4e86\u7528\u4e8e\u8f6c\u5f55\u8bed\u97f3\u6216\u5efa\u8bae\u6d88\u606f\u56de\u590d\u7684\u6709\u7528\u4efb\u52a1\u3002\u73b0\u5728Apple\u548cGoogle\u8bf4\u667a\u80fd\u624b\u673a\u8db3\u591f\u806a\u660e\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u50cf\u8fd9\u4e9b\u4e00\u6837\u7684\u91cd\u8981\u548c\u654f\u611f\u200b\u200b\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u3002\n \u5728\u672c\u6708\u7684Apple\u7684WWDC\u6d3b\u52a8\u4e2d\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u865a\u62df\u52a9\u7406Siri\u5c06\u5728\u6700\u8fd1\u548c\u672a\u6765\u7684iPhone\u548ciPad\u4e2d\u4ee5\u67d0\u79cd\u8bed\u8a00\u8fdb\u884c\u6316\u6398\u800c\u4e0d\u4f1a\u653b\u51fb\u4e91\u3002\u5728\u4e0a\u4e2a\u6708\u5728\u81ea\u5df1\u7684I / O\u5f00\u53d1\u8005\u6d3b\u52a8\u4e2d\uff0c\u8c37\u6b4c\u8868\u793a\uff0c\u6700\u65b0\u7248\u672c\u7684Android\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u529f\u80fd\uff0c\u4e13\u95e8\u7528\u4e8e\u5b89\u5168\uff0c\u5728\u8bbe\u5907\u4e0a\u5904\u7406\u654f\u611f\u6570\u636e\uff0c\u79f0\u4e3a\u79c1\u6709\u8ba1\u7b97\u6838\u5fc3\u3002\u5176\u521d\u59cb\u7528\u9014\u5305\u62ec\u4e3a\u5176\u79fb\u52a8\u952e\u76d8\u5185\u7f6e\u7684\u516c\u53f8\u667a\u80fd\u56de\u590d\u529f\u80fd\u7684\u7248\u672c\u4f9b\u7535\uff0c\u53ef\u4ee5\u5efa\u8bae\u5bf9\u4f20\u5165\u6d88\u606f\u7684\u56de\u5e94\u3002\n Apple\u548cGoogle\u5747\u8bf4\u660e\u8bbe\u5907\u5b66\u4e60\u63d0\u4f9b\u66f4\u591a\u9690\u79c1\u548cSnappier\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u4f20\u8f93\u4e2a\u4eba\u6570\u636e\u524a\u51cf\u66dd\u5149\u7684\u98ce\u9669\uff0c\u5e76\u8282\u7701\u7b49\u5f85\u6570\u636e\u7684\u65f6\u95f4\u6765\u904d\u5386\u4e92\u8054\u7f51\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4fdd\u6301\u6570\u636e\u7684\u6570\u636e\u4e0e\u79d1\u6280\u5de8\u5934\u7684\u957f\u671f\u5174\u8da3\u5bf9\u9f50\uff0c\u4f7f\u6d88\u8d39\u8005\u7ed1\u5b9a\u5230\u751f\u6001\u7cfb\u7edf\u4e2d\u3002\u542c\u5230\u4ed6\u4eec\u7684\u6570\u636e\u7684\u4eba\u53ef\u4ee5\u66f4\u79c1\u4e0b\u5904\u7406\u53ef\u80fd\u4f1a\u66f4\u613f\u610f\u540c\u610f\u5206\u4eab\u66f4\u591a\u6570\u636e\u3002\n \u7ecf\u8fc7\u591a\u5e74\u7684\u6280\u672f\u6765\u200b\u200b\u9650\u5236\u4ed6\u4eec\u7684\u4e91\u53ef\u4ee5\u201c\u770b\u5230\u201d\uff0c\u516c\u53f8\u6700\u8fd1\u63a8\u5e7f\u7684\u8bbe\u5907\u5b66\u4e60\u4fc3\u8fdb\u4e86\u4fc3\u8fdb\u7684\u5185\u90e8\u673a\u5668\u5b66\u4e60\u3002\n 2014\u5e74\uff0c\u8c37\u6b4c\u5f00\u59cb\u901a\u8fc7\u79f0\u4e3a\u5dee\u5206\u9690\u79c1\u7684\u6280\u672f\u5f00\u59cb\u6536\u96c6\u6709\u5173Chrome\u6d4f\u89c8\u5668\u4f7f\u7528\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u8fd9\u589e\u52a0\u4e86\u566a\u58f0\u4ee5\u9650\u5236\u8fd9\u4e9b\u6837\u672c\u63ed\u793a\u4e86\u5bf9\u4e2a\u4eba\u7684\u6837\u672c\u7684\u65b9\u5f0f\u6536\u83b7\u7684\u6570\u636e\u3002 Apple\u4f7f\u7528\u4e86\u4ece\u624b\u673a\u6536\u96c6\u7684\u6570\u636e\u4e0a\u7684\u6280\u672f\u901a\u77e5Emoji\u548c\u952e\u5165\u9884\u6d4b\u548cWeb\u6d4f\u89c8\u6570\u636e\u3002\n    \u6700\u8fd1\uff0c\u4e24\u5bb6\u516c\u53f8\u90fd\u91c7\u7528\u4e86\u4e00\u79cd\u79f0\u4e3a\u8054\u5408\u5b66\u4e60\u7684\u6280\u672f\u3002\u5b83\u5141\u8bb8\u66f4\u65b0\u57fa\u4e8e\u4e91\u7684\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff0c\u800c\u4e0d\u4f1a\u5728\u539f\u59cb\u6570\u636e\u4e2d\u6316\u6398;\u76f8\u53cd\uff0c\u5404\u4e2a\u8bbe\u5907\u5728\u672c\u5730\u5904\u7406\u6570\u636e\u5e76\u4ec5\u5171\u4eab\u6d88\u5316\u7684\u66f4\u65b0\u3002\u4e0e\u5dee\u522b\u9690\u79c1\u4e00\u6837\uff0c\u516c\u53f8\u5df2\u7ecf\u5728\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u8054\u5408\u5b66\u4e60\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002\u8c37\u6b4c\u4f7f\u7528\u8be5\u6280\u672f\u4f7f\u5176\u79fb\u52a8\u8f93\u5165\u9884\u6d4b\u4e0e\u8bed\u8a00\u8d8b\u52bf\u6700\u65b0; Apple\u5df2\u53d1\u8868\u5173\u4e8e\u4f7f\u7528\u5b83\u6765\u66f4\u65b0\u8bed\u97f3\u8bc6\u522b\u6a21\u578b\u7684\u7814\u7a76\u3002\n \u54e5\u4f26\u6bd4\u4e9a\u52a9\u7406\u6559\u6388\u7684Rachel Cummings\u66fe\u5728\u82f9\u679c\u9690\u79c1\u54a8\u8be2\u8fc7\uff0c\u8bf4\u5feb\u901f\u8f6c\u79fb\u5230\u624b\u673a\u4e0a\u7684\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u4e00\u76f4\u5728\u9192\u76ee\u3002 \u201c\u770b\u5230\u4ece\u7b2c\u4e00\u4e2a\u6982\u5ff5\u7684\u4e1c\u897f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u5728\u8fd9\u4e48\u5c11\u5e74\u4ee5\u89c4\u6a21\u90e8\u7f72\u5728\u89c4\u6a21\u4e2d\uff0c\u201d\u5979\u8bf4\u3002 \n\u8fd9\u4e00\u8fdb\u5c55\u4e0d\u4ec5\u9700\u8981\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u8fdb\u6b65\uff0c\u800c\u4e14\u9700\u8981\u5bf9\u516c\u53f8\u627f\u62c5\u6d88\u8d39\u8005\u6240\u62e5\u6709\u7684\u8bbe\u5907\u7684\u5904\u7406\u6570\u636e\u7684\u5b9e\u9645\u6311\u6218\u3002\u8c37\u6b4c\u8868\u793a\uff0c\u5176\u8054\u90a6\u5b66\u4e60\u7cfb\u7edf\u4ec5\u5728\u63d2\u5165\uff0c\u7a7a\u95f2\u548c\u81ea\u7531\u4e92\u8054\u7f51\u8fde\u63a5\u65f6\u53ea\u80fd\u8f7b\u62cd\u7528\u6237\u7684\u8bbe\u5907\u3002\u901a\u8fc7\u79fb\u52a8\u5904\u7406\u5668\u7684\u529f\u7387\u7684\u6539\u8fdb\uff0c\u90e8\u5206\u542f\u7528\u4e86\u8be5\u6280\u672f\u3002\n \u5141\u8bb8\u79fb\u52a8\u786c\u4ef6\u4e5f\u4e3a\u8c37\u6b4c2019\u5e74\u5ba3\u5e03\u4e3a\u50cf\u7d20\u8bbe\u5907\u4e0a\u7684\u865a\u62df\u52a9\u624b\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u5c06\u662f\u5b8c\u5168\u7684\u8bbe\u5907\uff0c\u4ece\u4e91\u7684\u62d0\u6756\u4e2d\u6ca1\u6709\u3002\u672c\u6708\u5728WWDC\u5ba3\u5e03\u7684Siri\u65b0\u7684On-Device\u8bed\u97f3\u8bc6\u522b\uff0c\u5c06\u4f7f\u7528\u201c\u795e\u7ecf\u53d1\u52a8\u673a\u201d\uff0c\u8be5\u516c\u53f8\u6dfb\u52a0\u5230\u5176\u79fb\u52a8\u5904\u7406\u5668\u7535\u6e90\u673a\u5b66\u4e60\u7b97\u6cd5\u4e2d\u3002\n \u6280\u672f\u58ee\u4e3e\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u5b83\u662f\u6709\u610f\u4e49\u7684\uff0c\u6709\u610f\u4e49\u5730\u6539\u53d8\u7528\u6237\u4e0e\u79d1\u6280\u5de8\u5934\u7684\u5173\u7cfb\u3002\n Apple\u7684WWDC\u7684\u6f14\u793a\u8005\u8868\u793a\uff0cSiri\u7684\u65b0\u8bbe\u8ba1\u662f\u4e00\u4e2a\u201c\u9690\u79c1\u6743\u7684\u91cd\u5927\u66f4\u65b0\u201d\uff0c\u89e3\u51b3\u4e86\u4e0e\u610f\u5916\u4f20\u8f93\u97f3\u9891\u5230\u4e91\u7684\u98ce\u9669\uff0c\u5e76\u8868\u793a\u662f\u7528\u6237\u5bf9\u8bed\u97f3\u52a9\u7406\u7684\u6700\u5927\u9690\u79c1\u95ee\u9898\u3002\u4e00\u4e9bSIRI\u547d\u4ee4 - \u4f8b\u5982\u8bbe\u7f6e\u5b9a\u65f6\u5668 - \u53ef\u4ee5\u5728\u672c\u5730\u8bc6\u522b\uff0c\u5236\u4f5c\u5feb\u901f\u54cd\u5e94\u3002\u7136\u800c\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u6982\u8ff0\u7684\u547d\u4ee4\u6982\u8ff0\u4e86\u5305\u62ec\u610f\u5916\u5f55\u97f3 - \u5c06\u88ab\u53d1\u9001\u5230Apple\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u89e3\u7801\u548c\u56de\u590d\u3002 SIRI\u8bed\u97f3\u8f6c\u5f55\u4ecd\u5c06\u662f\u57fa\u4e8e\u4e91\u7684\u4e3b\u9875\u667a\u80fd\u626c\u58f0\u5668\uff0c\u901a\u5e38\u5b89\u88c5\u5728\u5367\u5ba4\u548c\u53a8\u623f\uff0c\u5176\u4e2d\u610f\u5916\u5f55\u97f3\u53ef\u4ee5\u66f4\u591a\u5730\u8ba8\u8bba\u3002\n    \u8c37\u6b4c\u8fd8\u5c06\u8bbe\u5907\u4e0a\u7684\u6570\u636e\u5904\u7406\u4fc3\u8fdb\u4e3a\u9690\u79c1\u83b7\u80dc\uff0c\u5e76\u53d1\u51fa\u4fe1\u53f7\uff0c\u5b83\u5c06\u6269\u5927\u5b9e\u8df5\u3002\u8be5\u516c\u53f8\u5e0c\u671b\u4e09\u661f\u7b49\u5408\u4f5c\u4f19\u4f34\u4f7f\u7528\u5176Android\u64cd\u4f5c\u7cfb\u7edf\u91c7\u7528\u65b0\u7684\u9690\u79c1\u8ba1\u7b97\u6838\u5fc3\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u4f9d\u8d56\u654f\u611f\u6570\u636e\u7684\u529f\u80fd\u3002\n \u8c37\u6b4c\u8fd8\u5bf9\u6d4f\u89c8\u6570\u636e\u8fdb\u884c\u4e86\u672c\u5730\u5206\u6790\uff0c\u8be5\u6570\u636e\u7684\u63d0\u8bae\u91cd\u5851\u5728\u7ebf\u5e7f\u544a\u76ee\u6807\uff0c\u79f0\u4e3aFloc\u5e76\u58f0\u79f0\u66f4\u79c1\u5bc6\u3002\u5b66\u8005\u548c\u4e00\u4e9b\u7ade\u4e89\u5bf9\u624b\u79d1\u6280\u516c\u53f8\u8868\u793a\uff0c\u8be5\u8bbe\u8ba1\u53ef\u80fd\u4f1a\u5e2e\u52a9\u8c37\u6b4c\u5de9\u56fa\u5176\u5bf9\u5728\u7ebf\u5e7f\u544a\u7684\u4e3b\u5bfc\u5730\u4f4d\uff0c\u4f7f\u5176\u4ed6\u516c\u53f8\u66f4\u52a0\u56f0\u96be\u3002\n \u4f26\u6566\u5927\u5b66\u5b66\u9662\u7684\u6570\u5b57\u6743\u5229\u8bb2\u5e08Michael Veale\u8868\u793a\uff0c\u8bbe\u5907\u4e0a\u7684\u6570\u636e\u5904\u7406\u53ef\u80fd\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u4f46\u8865\u5145\u8bf4\uff0cTech\u516c\u53f8\u63a8\u5e7f\u7684\u65b9\u5f0f\u663e\u793a\u5b83\u4eec\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9\u4eba\u4eec\u4f9d\u8d56\u4e8e\u5229\u6da6\u4e30\u539a\u7684\u6570\u5b57\u751f\u6001\u7cfb\u7edf\u7684\u613f\u671b\u3002 \n\u201c\u9690\u79c1\u4e0e\u4fdd\u6301\u6570\u636e\u4fdd\u5bc6\u60c5\u51b5\u6df7\u6dc6\uff0c\u4f46\u5b83\u4e5f\u662f\u9650\u5236\u529b\u91cf\uff0c\u201dVeale\u8bf4\u3002 \u201c\u5982\u679c\u60a8\u662f\u4e00\u5bb6\u5927\u578b\u6280\u672f\u516c\u53f8\uff0c\u5e76\u4ec5\u4ec5\u53ef\u4ee5\u6839\u636e\u6570\u636e\u7684\u673a\u5bc6\u6027\u6765\u91cd\u65b0\u4fdd\u5bc6\uff0c\u8fd9\u5141\u8bb8\u60a8\u7ee7\u7eed\u6b63\u5e38\u4e1a\u52a1\u5e76\u4e3a\u60a8\u63d0\u4f9b\u64cd\u4f5c\u3002\u201d\n \u8c37\u6b4c\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u8be5\u516c\u53f8\u201c\u5728\u5404\u5730\u7684\u9690\u79c1\u5185\u90e8\u5efa\u7acb\u4e86\u201d\uff0c\u5e76\u4e14\u53d1\u9001\u5230\u5904\u7406\u7684\u79c1\u6709\u8ba1\u7b97\u6838\u5fc3\u7684\u6570\u636e\u201c\u9700\u8981\u4e0e\u7528\u6237\u503c\u76f8\u5173\u8054\u3002\u201d Apple\u6ca1\u6709\u56de\u590d\u8bc4\u8bba\u8bf7\u6c42\u3002\n Columbia\u7684Cummings\u8868\u793a\uff0c\u65b0\u7684\u9690\u79c1\u6280\u5de7\u548c\u516c\u53f8\u5e02\u573a\u7684\u65b9\u5f0f\u589e\u52a0\u4e86\u6570\u5b57\u751f\u6d3b\u6743\u8861\u7684\u590d\u6742\u6027\u3002\u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u5df2\u6210\u4e3a\u66f4\u5e7f\u6cdb\u7684\u90e8\u7f72\uff0c\u79d1\u6280\u516c\u53f8\u5df2\u7ecf\u7a33\u6b65\u6269\u5c55\u4e86\u4ed6\u4eec\u6536\u96c6\u548c\u5206\u6790\u7684\u6570\u636e\u8303\u56f4\u3002\u6709\u8bc1\u636e\u8bc1\u660e\u4e00\u4e9b\u6d88\u8d39\u8005\u8bef\u89e3\u4e86\u79d1\u6280\u5de8\u5934\u7684\u9690\u79c1\u4fdd\u62a4\u3002\n \u6ce2\u58eb\u987f\u5927\u5b66\u7684Cummings\u548c\u5408\u4f5c\u8005\u5373\u5c06\u5230\u6765\u7684\u8c03\u67e5\u7814\u7a76\u548cMax Planck Institute\u8868\u660e\uff0c\u4ece\u79d1\u6280\u516c\u53f8\uff0c\u5a92\u4f53\u548c\u5b66\u8005\u7ed8\u5236\u5230675\u540d\u7f8e\u56fd\u4eba\u7684\u5dee\u522b\u9690\u79c1\u7684\u63cf\u8ff0\u3002\u542c\u5230\u8fd9\u9879\u6280\u672f\u8ba9\u4eba\u4eec\u5927\u7ea6\u662f\u62a5\u544a\u7684\u53ef\u80fd\u6027\uff0c\u4ed6\u4eec\u613f\u610f\u5206\u4eab\u6570\u636e\u3002\u4f46\u6709\u8bc1\u636e\u8868\u660e\u5dee\u5f02\u9690\u79c1\u7684\u63cf\u8ff0\uff06\uff0339;\u798f\u5229\u4e5f\u9f13\u52b1\u4e86\u4e0d\u5207\u5b9e\u9645\u7684\u671f\u671b\u3002\u4e94\u5206\u4e4b\u4e00\u7684\u53d7\u8bbf\u8005\u9884\u8ba1\u4ed6\u4eec\u7684\u6570\u636e\u88ab\u4fdd\u62a4\u514d\u53d7\u6267\u6cd5\u641c\u67e5\uff0c\u5dee\u5f02\u9690\u79c1\u4e0d\u8d77\u4f5c\u7528\u3002 Apple\u548cGoogle\u5173\u4e8e\u8bbe\u5907\u4e0a\u6570\u636e\u5904\u7406\u7684\u6700\u65b0\u5ba3\u8a00\u53ef\u80fd\u4f1a\u4e3a\u8bef\u89e3\u5e26\u6765\u65b0\u7684\u673a\u4f1a\u3002 ", "note_en": "Since the dawn of the  iPhone, many of the smarts in smartphones have come from elsewhere: the corporate computers known as the  cloud. Mobile apps sent user data cloudward for useful tasks like transcribing speech or suggesting message replies. Now  Apple and  Google say  smartphones are smart enough to do some crucial and sensitive  machine learning tasks like those on their own.\n At Apple\u2019s WWDC event  this month, the company said its virtual assistant  Siri will transcribe speech without tapping the cloud in some languages on recent and future iPhones and iPads. During its own  I/O developer event last month, Google said the latest version of its  Android operating system has a feature dedicated to secure, on-device processing of sensitive data, called the Private Compute Core. Its initial uses include powering the version of the company\u2019s Smart Reply feature built into its mobile keyboard that can suggest responses to incoming messages.\n Apple and Google both say on-device machine learning offers more privacy and snappier apps. Not transmitting personal data cuts the risk of exposure and saves time spent waiting for data to traverse the internet. At the same time, keeping data on devices aligns with the tech giants\u2019 long-term interest in keeping consumers bound into their ecosystems. People that hear their data can be processed more privately might become more willing to agree to share more data.\n The companies\u2019 recent promotion of on-device machine learning comes after years of work on technology to constrain the data their clouds can \u201csee.\u201d\n In 2014, Google started gathering some data on Chrome browser usage  through a technique called differential privacy, which adds noise to harvested data in ways that restrict what those samples reveal about individuals. Apple has used the technique on data gathered from phones to inform emoji and typing predictions and for web browsing data.\n    More recently, both companies have adopted a technology called  federated learning. It allows a cloud-based machine learning system to be updated without scooping in raw data; instead, individual devices process data locally and share only digested updates. As with differential privacy, the companies have discussed using federated learning only in limited cases. Google has used the technique to keep its mobile typing predictions up to date with language trends; Apple has published research on using it to  update speech recognition models.\n Rachel Cummings, an assistant professor at Columbia who has previously consulted on privacy for Apple, says the rapid shift to do some machine learning on phones has been striking. \u201cIt\u2019s incredibly rare to see something going from the first conception to being deployed at scale in so few years,\u201d she says.\n That progress has required not just advances in computer science but for companies to take on the practical challenges of processing data on devices owned by consumers. Google has said that its federated learning system only taps users\u2019 devices when they are plugged in, idle, and on a free internet connection. The technique was enabled in part by improvements in the power of mobile processors.\n Beefier mobile hardware also contributed to Google\u2019s  2019 announcement that voice recognition for its virtual assistant on Pixel devices would be wholly on-device, free from the crutch of the cloud. Apple\u2019s new on-device voice recognition for Siri, announced at WWDC this month, will use the \u201cneural engine\u201d the company  added to its mobile processorsto power up machine learning algorithms.\n The technical feats are impressive. It\u2019s debatable how much they will meaningfully change users\u2019 relationship with tech giants.\n Presenters at Apple\u2019s WWDC said Siri\u2019s new design was a \u201cmajor update to privacy\u201d that addressed the risk associated with accidentally transmitting audio to the cloud, saying that was users\u2019 largest privacy concern about  voice assistants. Some Siri commands\u2014such as setting timers\u2014can be recognized wholly locally, making for a speedy response. Yet in many cases transcribed commands to Siri\u2014presumably including from accidental recordings\u2014will be sent to Apple servers for software to decode and respond. Siri voice transcription will still be cloud-based for HomePod smart speakers commonly installed in bedrooms and kitchens, where accidental recording can be more concerning.\n    Google also promotes on-device data processing as a privacy win and has signaled it will expand the practice. The company expects partners such as Samsung that use its Android operating system to adopt the new Privacy Compute Core and use it for features that rely on sensitive data.\n Google has also made local analysis of browsing data a feature of its proposal for  reinventing online ad targeting, dubbed FLoC and claimed to be more private. Academics and some rival tech companies have said the design is likely to help Google consolidate its dominance of online ads by making targeting more difficult for other companies.\n Michael Veale, a lecturer in digital rights at University College London, says on-device data processing can be a good thing but adds that the way tech companies promote it shows they are primarily motivated by a desire to keep people tied into lucrative digital ecosystems.\n \u201cPrivacy gets confused with keeping data confidential, but it\u2019s also about limiting power,\u201d says Veale. \u201cIf you\u2019re a big tech company and manage to reframe privacy as only confidentiality of data, that allows you to continue business as normal and gives you license to operate.\u201d\n A Google spokesperson said the company \u201cbuilds for privacy everywhere computing happens\u201d and that data sent to the Private Compute Core for processing \u201cneeds to be tied to user value.\u201d Apple did not respond to a request for comment.\n Cummings of Columbia says new privacy techniques and the way companies market them add complexity to the trade-offs of digital life. Over recent years, as machine learning has become more widely deployed, tech companies have steadily expanded the range of data they collect and analyze. There is evidence some consumers misunderstand the privacy protections trumpeted by tech giants.\n A forthcoming survey study from Cummings and collaborators at Boston University and the Max Planck Institute showed descriptions of differential privacy drawn from tech companies, media, and academics to 675 Americans. Hearing about the technique made people about twice as likely to report they would be willing to share data. But there was evidence that descriptions of differential privacy&#39;s benefits also encouraged unrealistic expectations. One-fifth of respondents expected their data to be protected against law enforcement searches, something differential privacy does not do. Apple\u2019s and Google\u2019s latest proclamations about on-device data processing may bring new opportunities for misunderstandings.", "posttime": "2021-06-18 19:47:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,apple,\u6570\u636e", "title": "Apple\u548cGoogle\u7684AI\u5deb\u672f\u627f\u8bfa\u4ee5\u8d39\u7528\u4e3a\u9690\u79c1 ", "title_en": "Apple and Google\u2019s AI wizardry promises privacy\u2014at a cost", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/06/apple-and-googles-ai-wizardry-promises-privacy-at-a-cost/", "via": "", "real_tags": ["google", "apple", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "5ca542c9740fe68d556e9f97e0d109a8.png", "infoid": 1066682, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u5f00\u653e\u4e86\u4e00\u7cfb\u5217C ++\u5e93\uff0c\u7528\u4e8e\u5728\u73b0\u4ee3\u5e94\u7528\u4e2d\u5b9e\u73b0\u5168\u540c\u6027\u604b\u52a0\u5bc6\uff08FHE\uff09\u3002\n \u5b8c\u5168\u540c\u6027\u604b\u52a0\u5bc6\u6216\u7b80\u5355\u7684\u540c\u6027\u604b\u52a0\u5bc6\u662f\u4e00\u79cd\u6570\u636e\u52a0\u5bc6\u5f62\u5f0f\uff0c\u5141\u8bb8\u7528\u6237/\u5e94\u7528\u7a0b\u5e8f\u5728\u52a0\u5bc6\u6570\u636e\u4e0a\u6267\u884c\u6570\u5b66\u8ba1\u7b97\u800c\u4e0d\u9996\u5148\u89e3\u5bc6\uff0c\u4fdd\u6301\u6570\u636e\u7684\u9690\u79c1\u5b8c\u597d\u65e0\u635f\u3002\n \u867d\u7136\u81ea1978\u5e74\u4ee5\u6765\uff0c\u540c\u6027\u604b\u52a0\u5bc6\u7684\u6982\u5ff5\u5df2\u7ecf\u5b58\u5728\u4e8e1978\u5e74\u4ee5\u6765\uff0c\u4f46\u5728\u7406\u8bba\u5c42\u7ea7\u9996\u6b21\u63cf\u8ff0\u7684\u65f6\u5019\uff0c\u57282009\u5e74\u9996\u6b21\u5728\u5b9e\u8df5\u4e2d\u5b9e\u65bd\u65f6\uff0c\u7531\u4e8e\u5176\u590d\u6742\u6027\uff0c\u5148\u8fdb\u7684\u52a0\u5bc6\u6280\u672f\uff0c\u5b83\u5c1a\u672a\u5728\u8f6f\u4ef6\u4e2d\u5e7f\u6cdb\u91c7\u7528\u3002\u7f3a\u4e4f\u5f00\u6e90\u4ee3\u7801\u548c\u516c\u5171\u6587\u6863\u3002\n  FHE\u5141\u8bb8\u8f6f\u4ef6\u4f9b\u5e94\u5546\u5728\u4e0d\u5171\u4eab\u52a0\u5bc6\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u52a0\u5bc6/\u89e3\u5bc6\u5bc6\u94a5\uff0c\u4e0e\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u6216\u516c\u5f00\u6258\u7ba1\u7684Web\u670d\u52a1\u5668\u7b49\u4e0d\u503c\u5f97\u4fe1\u8d56\u7684\u7cfb\u7edf\uff0c\u5176\u4e2d\u952e\u53ef\u4ee5\u88ab\u7a83\u53d6\u6216\u88ab\u6076\u610f\u8f6f\u4ef6\u6216\u6076\u610f\u4eba\u5de5\u64cd\u4f5c\u5458\u62e6\u622a\u3002\n FHE\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5728\u540c\u65f6\u4fdd\u6301\u6570\u636e\u5b89\u5168\uff0c\u52a0\u5bc6\u548c\u79c1\u6709\uff0c\u8c37\u6b4c\u5e0c\u671b\u5f00\u53d1\u4eba\u5458\u5c06\u4f7f\u7528\u5176FHE\u5e93\u4f5c\u4e3a\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91c7\u7528\u8fd9\u79cd\u65b0\u578b\u52a0\u5bc6\u6280\u672f\u7684\u7b2c\u4e00\u6b65\u3002\n  \u4f46\u8c37\u6b4c\u4e0d\u662f\u7b2c\u4e00\u4e2a\u53d1\u5e03\u7528\u4e8e\u5b9e\u65bdFHE\u7684\u514d\u8d39\u5de5\u5177\u7684\u4e3b\u8981\u6280\u672f\u5de8\u4eba\u3002\n \u7b2c\u4e00\u4e2a\u662fIBM\uff0c\u5b83\u4e8e6\u670820\u65e5\u53d1\u5e03\u7684\u5f00\u6e90\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u5728iOS\u548cMacOS\u4e0a\u5b9e\u73b0FHE\uff0c\u7136\u540e\u662fAndroid\u548cLinux\u7684\u7c7b\u4f3c\u5de5\u5177\u3002\u5f53\u516c\u53f8\u4e8e2020\u5e7412\u6708\u63a8\u51fa\u5176\u5b89\u5168\u540c\u6001\u52a0\u5bc6\u670d\u52a1\u65f6\uff0cIBM\u7684\u521d\u59cb\u5de5\u4f5c\u51e0\u4e2a\u6708\u540e\u51e0\u4e2a\u6708\u3002 \n\u4f46\u5176\u4ed6\u79d1\u6280\u5de8\u5934\u8fd8\u91c7\u53d6\u4e86\u7814\u7a76\u548c\u91c7\u7528FHE\u8fdb\u5165\u5176\u5e94\u7528\u7684\u6b65\u9aa4\u3002\n \u4f8b\u5982\uff0c\u82f1\u7279\u5c14\u5f00\u59cb\u53bb\u5e74\u5f00\u59cb\u7814\u7a76\u91c7\u7528FHE\u624d\u80fd\u52a0\u5f3a\u5176\u673a\u5bc6\u8ba1\u7b97\u4ea7\u54c1\u3002\u5176\u521d\u59cb\u7814\u7a76\u5728\u4eca\u5e743\u6708\u4efd\u7b7e\u7f72\u4e86\u4e0e\u7f8e\u56fd\u56fd\u9632\u9ad8\u7ea7\u7814\u7a76\u9879\u76ee\u7f72\uff08DARPA\uff09\u7b7e\u7f72\u4e86\u534f\u8bae\uff0c\u4ee5\u4e0e\u7f8e\u56fd\u519b\u4e8b\u7814\u7a76\u673a\u6784\u548c\u5fae\u8f6f\u4e00\u8d77\u5f00\u53d1\u65b0\u7684FHE\u6280\u672f\u3002\n Microsoft\u5305\u542b\u5728DARPA\u9879\u76ee\u4e2d\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u662fFHE\u6700\u65e9\u7684\u91c7\u7528\u8005\u4e4b\u4e00\uff0c\u5b83\u76ee\u524d\u7528\u4e8e\u5904\u7406\u5176\u8fb9\u7f18\u6d4f\u89c8\u5668\u4e2d\u7684\u5bc6\u7801\uff0c\u8be5\u516c\u53f8\u8fd8\u5305\u542b\u5728ElectionGuard\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u6295\u7968\u673a\u8f6f\u4ef6\u5957\u4ef6\u5b83\u4e8e2019\u5e747\u6708\u91ca\u653e\u3002\n \u5c3d\u7ba1\u5982\u6b64\uff0c\u5c3d\u7ba1\u6765\u81ea\u4e16\u754c\u4e0a\u4e00\u4e9b\u6700\u5927\u7684\u6280\u672f\u516c\u53f8\u7684\u65e9\u671f\u6b65\u9aa4\u548c\u652f\u6301\uff0c\u4f46FHE\u4ecd\u5904\u4e8e\u5176\u521d\u671f\uff0c\u65e0\u8bba\u662f\u4e00\u9879\u6807\u51c6\u548c\u901a\u8fc7\uff0c\u8fd8\u8981\u5728\u6280\u672f\u8fdb\u5165\u8fd9\u4e00\u5929\u4e4b\u524d\u82b1\u8d39\u81f3\u5c11\u51e0\u5e74 - \u65e5\u671f\u5e94\u7528\u548c\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u3002 ", "note_en": "Google has open-sourced a collection of C++ libraries for implementing Fully Homomorphic Encryption (FHE) in modern applications.\n Fully homomorphic encryption, or simply\u00a0 homomorphic encryption, is a form of data encryption that allows users/applications to perform mathematical computations on encrypted data without decrypting it first, keeping the data\u2019s privacy intact.\n While the concept of homomorphic encryption has been around since 1978, when it was first described at a theoretical level, and 2009, when it was first implemented in practice, it has not been broadly adopted in software due to its complexity, advanced cryptography techniques, and lack of open-source code and public documentation.\n  FHE allows software vendors to work on encrypted data without sharing the encryption/decryption keys with untrustworthy systems such as client-side apps or publicly-hosted web servers, where the keys could be stolen or intercepted by malware or malicious human operators.\n FHE allows developers to keep data secure, encrypted, and private, all at the same time, and Google hopes that developers will use its\u00a0 FHE libraries\u00a0as the first step into adopting this new type of encryption technology within their applications.\n  But Google is not the first major tech giant to release free tools for implementing FHE.\n The first was IBM, which released\u00a0 in June 2020\u00a0open-source toolkits for implementing FHE on\u00a0 iOS\u00a0and\u00a0 macOS, later followed by similar tools for\u00a0 Android\u00a0and\u00a0 Linux. IBM\u2019s initial work paid dividends a few months later when the company launched its\u00a0 Security Homomorphic Encryption Services\u00a0in December 2020.\n But other tech giants have also taken steps towards researching and adopting FHE into their applications.\n For example,\u00a0 Intel\u00a0began last year researching the possibility of adopting FHE to bolster its confidential computing offerings. Its initial research yielded results this year when, in March, the company\u00a0 signed an agreement\u00a0with the US Defense Advanced Research Projects Agency (DARPA) to work on developing new FHE-based technologies together with the US military research agency and Microsoft.\n Microsoft was included in the DARPA project because the company has been\u00a0 one of the earliest adopters of FHE, which it currently uses to\u00a0 handle passwords in its Edge browser, and which the company has also\u00a0 included in ElectionGuard, an open-source voting machine software kit it released back in July 2019.\n Nevertheless, despite these early steps and support from some of the world\u2019s largest tech firms, FHE is still in its infancy, both\u00a0 as a standard\u00a0and in terms of adoption, and it will take at least a few more years before the technology makes into day-to-day apps and enterprise applications.", "posttime": "2021-06-18 19:41:02", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u52a0\u5bc6,open,fhe", "title": "Google\u5f00\u653e\u6e90\u5b8c\u5168\u540c\u6027\u604b\u52a0\u5bc6\uff08FHE\uff09\u5de5\u5177\u5305 ", "title_en": "Google Open-Sources Fully Homomorphic Encryption (FHE) Toolkit", "transed": 1, "url": "https://therecord.media/google-open-sources-fully-homomorphic-encryption-fhe-toolkit/", "via": "", "real_tags": ["google", "\u52a0\u5bc6", "open", "fhe"]}, {"category": "", "categoryclass": "", "imagename": "f0a6fbd47b803ac88ec1ae5aa6b3d342.png", "infoid": 1066681, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6b64\u5e16\u5b50\u4e2d\uff0c\u6211\u4eec\u603b\u7ed3\u4e86Hasta\u5982\u4f55\u4f7f\u7528SQL Server\u4f5c\u4e3a\u6570\u636e\u6e90\u3002  \u4ee5\u4e0b\u662f\u51e0\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u8f7b\u677e\u5c1d\u8bd5\u4f7f\u7528SQL Server\uff1a  \u8fd0\u884c\u5f3a\u5927\u7684\u67e5\u8be2\uff0c\u652f\u6301\u5d4c\u5957\u8fc7\u6ee4\uff0c\u6392\u5e8f\u548cSQL Server\u7c7b\u578b\uff0c\u5982GIS\u3002  \u521b\u5efa\u7c92\u5ea6\u6a21\u578b\u7ea7RLS\u6837\u5f0f\u6388\u6743\u89c4\u5219\uff0c\u4ee5\u4fdd\u62a4\u5185\u90e8\u6216\u5916\u90e8\u6d88\u8d39\u8005\u7684GraphQL API\u3002  Hasura\u5c06GraphQL\u67e5\u8be2\u7f16\u8bd1\u4e3a\u5355\u4e2aSQL\u67e5\u8be2\uff0c\u5305\u62ec\u8c13\u8bcd\u6388\u6743\u89c4\u5219\u7684\u8c13\u8bcd\uff0c\u9632\u6b62\u5178\u578b\u7684n + 1\u95ee\u9898\u83b7\u53d6\u6570\u636e\u3002  Hasura\u8fd8\u4f7f\u7528JSON\u805a\u5408\u6765\u907f\u514d\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u7b1b\u5361\u5c14\u4ea7\u54c1\uff0c\u5e76\u907f\u514d\u4e0d\u5fc5\u8981\u7684Ser / de\u5f00\u9500\u3002  \u6269\u5c55GraphQL API\u5e76\u901a\u8fc7\u4f5c\u4e3aREST\u6216GraphQL API\u6dfb\u52a0\u81ea\u5df1\u7684\u89e3\u538b\u5668\u6765\u6dfb\u52a0\u4efb\u4f55\u8bed\u8a00\u6216\u6846\u67b6\u7684\u81ea\u5b9a\u4e49\u4e1a\u52a1\u903b\u8f91 \n\u4e91\u6216\u6700\u7ec8\u7528\u6237\u7f51/\u79fb\u52a8\u5e94\u7528\u4e2d\u7684\u73b0\u4ee3\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u901a\u8fc7HTTP\u7684\u7075\u6d3b\u6027\u548c\u5b89\u5168\u7684API\u6765\u8bbf\u95ee\u6570\u636e\n \u4f7f\u7528Hasura\u77ac\u95f4\u83b7\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u6784\u5efa\u548c\u7ef4\u62a4API\u670d\u52a1\u5668\n    Hasura\u670d\u52a1\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u60a8\u53ef\u4ee5\u52a8\u6001\u914d\u7f6e\u5176\u5143\u6570\u636e\u3002\u901a\u8fc7\u4f7f\u7528UI\u6216\u4f7f\u7528API\u200b\u200b\u547c\u53eb\u6216\u4f7f\u7528Git Repo\u4e2d\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u6b64\u914d\u7f6e\uff0c\u4ee5\u4e0eCI / CD\u7ba1\u9053\u96c6\u6210\u3002\n \u5143\u6570\u636e\u5c06\u8fde\u63a5\u914d\u7f6e\u6355\u83b7\u5230\u4e0a\u6e38\u6570\u636e\u6e90\uff0c\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5b83\u4eec\u7684\u6388\u6743\u7b56\u7565.PASURA\u751f\u6210GraphQL\u67b6\u6784\u5e76\u5448\u73b0\u53ef\u4ee5\u6d88\u8017\u7684GraphQL API\u3002\n HASURA\u5c06\u901a\u8fc7HTTP\u547c\u53eb\u4f20\u5165\u7684GraphQL API\u547c\u53eb\uff0c\u7136\u540e\u5c06\u5176\u7f16\u8bd1\u5230T-SQL\u67e5\u8be2\u4e2d\uff0c\u5305\u62ec\u5177\u6709\u8c13\u8bcd\u4fef\u51b2\u7684\u6388\u6743\u7b56\u7565\u3002\n  \u7531\u4e8e\u5176\u7f16\u8bd1\u5668\uff0c\u7c7b\u4f3c\u7684\u67b6\u6784Hasura\u53ef\u4ee5\u5b8c\u5168\u907f\u514dn + 1\u4e2a\u95ee\u9898\u3002\u5b83\u53ef\u4ee5\u79ef\u6781\u5f25\u8865\uff0c\u5e76\u53d1\u51fa\u5bf9\u4e0a\u6e38\u6570\u636e\u6e90\u7684\u6700\u5c0f\u6b21\u6570\u3002\n   Hasura\u800c\u4e0d\u662f\u89e3\u6790GraphQL\u67e5\u8be2\u7247\uff0cHasura\u5c1d\u8bd5\u5c06\u67e5\u8be2\u7684\u90e8\u5206\u7f16\u8bd1\u4e3a\u5355\u4e2a\u6570\u636e\u6e90\uff0c\u8fdb\u5165umstread\u6e90\u53ef\u4ee5\u7406\u89e3\u7684\u5355\u4e2a\u67e5\u8be2 - \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cSQL Server\u7684SQL\u67e5\u8be2\u3002 \n\u5f53\u5904\u7406\u6388\u6743\u89c4\u5219\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u7f16\u8bd1\u6210\u4e0e\u6570\u636e\u83b7\u53d6\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u5bf9\u6570\u636e\u6e90\u8fdb\u884c\u591a\u4e2a\u8bf7\u6c42\u3002\n  Hasura\u5728\u6570\u636e\u5e93\u4e2d\u8fd0\u884cJSON\u805a\u5408\u3002\u4e0e\u8fde\u63a5\u8fd4\u56de\u7b1b\u5361\u5c14\u4ea7\u54c1\u7684\u8fde\u63a5\u76f8\u6bd4\uff0c\u8fd9\u53ef\u4ee5\u9632\u6b62\u5e8f\u5217\u5316/\u89e3\u9664\u7ea7\u5316\u5f00\u9500\u5e76\u4ece\u6570\u636e\u5e93\u4e2d\u4f20\u8f93\u66f4\u5927\u7684\u6570\u636e\u3002\n  Hasura\u8fd8\u6267\u884c\u8fde\u63a5\u6c60\uff0c\u56e0\u4e3a\u5b83\u4f5c\u4e3a\u670d\u52a1\u8fd0\u884c\uff0c\u5e76\u4e14\u8fd8\u4f1a\u81ea\u52a8\u5229\u7528\u51c6\u5907\u7684\u8bed\u53e5\u3002\n \u8fd9\u5141\u8bb8\u6574\u4e2aGraphQL +\u6570\u636e\u83b7\u53d6\u67e5\u8be2\u548c\u89c4\u5212\u8fc7\u7a0b\u5c3d\u53ef\u80fd\u9ad8\u6548\uff0c\u56e0\u4e3a\u53ea\u5904\u7406\u53d8\u91cf\uff08\u53c2\u6570\u6216\u4f1a\u8bdd\u53d8\u91cf\uff09\u5e76\u4e14\u5df2\u7ecf\u5904\u7406\u4e86\u4e0d\u540c\u5c42\u7684\u67e5\u8be2\u5e76\u8ba1\u5212\u3002\n  HASURA\u5728\u8868\u683c\u548c\u89c6\u56fe\u4e0a\u751f\u6210GraphQL API  - \u652f\u6301\u5373\u5c06\u63a8\u51fa\u5b58\u50a8\u8fc7\u7a0b\u548c\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u5e95\u5c42\u6570\u636e\u6a21\u578b\u7684\u6f14\u53d8\u800c\u4e0d\u5f71\u54cd\u751f\u6210\u7684GraphQL API\u3002\n  \u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u9650\u5236\u5bf9\u7279\u5b9a\u5b9e\u4f53\uff08\u6216\u884c\uff09\u53ca\u5176\u5b57\u6bb5\uff08\u5217\uff09\u8bbf\u95ee\u6743\u9650\u7684\u6388\u6743\u89c4\u5219\u3002\u8fd9\u4e9b\u6388\u6743\u89c4\u5219\u5c06\u5177\u6709API\u8bf7\u6c42\u7684\u4f1a\u8bdd\u5c5e\u6027\u8bbf\u95ee\u7684\u6570\u636e\u7684\u5c5e\u6027\u7ec4\u5408\u3002\n Hasura\u53ef\u4ee5\u4eceJWT\u7d22\u8d54\u6216\u6765\u81eaWebhook\u4e2d\u63d0\u53d6\u4f1a\u8bdd\u4fe1\u606f\u3002\u8fd9\u5141\u8bb8Hasura\u76f4\u63a5\u63a5\u53d7\u6700\u7ec8\u7528\u6237API\u8c03\u7528\u5e76\u5b89\u5168\u5730\u5904\u7406\u5b83\u4eec\u3002\u9605\u8bfb\u6587\u6863\u6709\u5173\u5176\u5de5\u4f5c\u539f\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002 \n\u4ee5\u4e0b\u662f\u53ef\u4ee5\u4f7f\u7528Hasura\u5b9e\u73b0\u7684\u6388\u6743\u89c4\u5219\u7c7b\u578b\u7684\u4e00\u4e9b\u793a\u4f8b\uff1a\n  \uff03\u5141\u8bb8\u8bbf\u95ee\u97f3\u4e50\u66f2\u76ee\uff0c\u5982\u679c\u66f2\u76ee\u548c\uff0339; s album\uff06\uff0339; sartist_id\u662f\u5f53\u524d\u7684\u7528\u6237\u89d2\u8272\uff1a\u7528\u6237\u8868\uff1atracks.album.Artist_ID = session.user_id\n  \u8fd9\u5141\u8bb8Hasura\u7528\u6237\u4e3a\uff06\uff0339\u521b\u5efa\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u89d2\u8272\u6216\u8303\u56f4\u7684\u7279\u5b9a\u5b50\u56fe;\u516c\u5171\uff06\uff0339;\u8303\u56f4\uff0c\u5141\u8bb8\u8bbf\u95eeID\u548c\u7528\u6237\u540d\u5b57\u6bb5\u89d2\u8272\uff1aPublic\u8868\uff1aProfile Permission\uff1a\u5b57\u6bb5\uff1a[ID\uff0c\u7528\u6237\u540d]\uff03\u4e3a\uff06\uff0339;\u79c1\u4eba\uff06\uff0339;\u8303\u56f4\uff0c\u5141\u8bb8\u8bbf\u95ee\u6240\u6709\u5b57\u6bb5\uff0c\u4f46\u4ec5\u5f53\u4f1a\u8bdd\u7528\u6237\u662f\u8be5\u6570\u636e\u89d2\u8272\u7684\u6240\u6709\u8005\uff1a\u79c1\u6709\u8868\uff1a\u914d\u7f6e\u6587\u4ef6\u6743\u9650\uff1a\u5b57\u6bb5\uff1a[ID\uff0c\u7528\u6237\u540d\uff0c\u7535\u5b50\u90ae\u4ef6]\u89c4\u5219\uff1aprofile.id = session.user_id\n  \u6bd4\u8f83\u5217\u503c\u5141\u8bb8\u901a\u8fc7\u5728\u6570\u636e\u5e93\u7684\u53e6\u4e00\u90e8\u5206\u4e2d\u7684\u52a8\u6001\u53d8\u5316\u7684\u503c\u6765\u63a7\u5236\u8bbf\u95ee\u6743\u9650\n \u8fd9\u4f7f\u5f97\uff06\uff0334\u7684\u5efa\u6a21\u4e1c\u897f;\u8bbf\u95ee\u5c42\u548c\uff0334;\u5728\u8ba2\u9605\u8ba1\u5212\u4e2d\uff0c\u6216\u4ece\u52a8\u6001ACL\u8868\u7684\u67e5\u627e\u975e\u5e38\u7b80\u5355\n  Hasura\u64b0\u5199\u4f7f\u7528A\uff06\uff0334\u4fdd\u7559\u884c\u548c\u73b0\u573a\u7ea7\u522b\u8bbf\u95ee\u7684\u89d2\u8272;\u57fa\u4e8e\u5355\u5143\u683c\u7684\u65e0\u6548\uff06\uff0334;\u5408\u5e76\u7b97\u6cd5\n \u8fd9\u5141\u8bb8Hasura\u7528\u6237\u8f7b\u677e\u5730\u5c06\u4e0d\u540c\u6570\u636e\u6a21\u578b\u7684\u6240\u6709\u6743\u548c\u53ef\u89c1\u6027\u8fdb\u884c\u89c4\u8303\u3002 \n\u793a\u4f8b\uff1a\u5141\u8bb8\u7528\u6237\u83b7\u53d6\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u4f46\u53ea\u6709\u4e00\u4e9bareN\uff06\uff0339; t\u4ed6\u4eec\u7684\u6587\u4ef61\u79c1\u6709\uff1a\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u81ea\u5df1\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u8be5\u6570\u636e\u7684\u6240\u6709\u5b57\u6bb5\uff1a[ID\uff0c\u7535\u5b50\u90ae\u4ef6\uff0c\u7528\u6237\u540d]\uff03\u89d2\u82722\u516c\u5171\uff1a\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u4efb\u4f55\u4eba\u548c\uff0339; s\u7684\u6570\u636e\uff0c\u4f46\u53ea\u6709ID\u548c\u7528\u6237\u540d\uff03\u89d2\u82723 =\u89d2\u82721 +\u89d2\u82722\u7528\u6237\uff1a[\u516c\u5171\uff0c\u79c1\u6709]\uff03\u73b0\u5728\u53ef\u4ee5\u5b89\u5168\u5730\u5206\u914d\u7ed9\u6240\u6709\u8bb0\u5f55\u7684\u7528\u6237\u89d2\u8272-in\u7528\u6237\n     \u5982\u679c\u60a8\uff06\uff0339; d\u559c\u6b22\u67e5\u770bHasura + SQL Server\u5982\u4f55\u4e3a\u60a8\u7684\u56e2\u961f\u5de5\u4f5c\u901a\u8fc7\u6211\u4eec\u7684\u7f51\u7ad9\u8054\u7cfb\u6211\u4eec\u3002\n      \uff037074\u7a81\u53d8\uff1a\u5728GraphQL API\u4e0a\u8fd0\u884cInserts\uff0c\u66f4\u65b0\uff0c\u5220\u9664\uff0c\u5b58\u50a8\u8fc7\u7a0b\u548c\u4ea4\u6613\n \uff037075\u4e8b\u4ef6\u89e6\u53d1\u5668\uff1a\u89e6\u53d1\u5177\u6709\u539f\u5b50\u6355\u83b7\u7684HTTP Webhook\uff0c\u5e76\u4e14\u81f3\u5c11\u5728\u6570\u636e\u5e93\u5185\u66f4\u6539\u6570\u636e\u65f6\u4fdd\u8bc1\uff08\u9605\u8bfb\u66f4\u591a\uff09\n \uff037076\u8fdc\u7a0b\u52a0\u5165\uff1a\u5c06SQL Server\u4e2d\u7684\u578b\u53f7\u8fde\u63a5\u5230\u6765\u81ea\u5176\u4ed6API\u670d\u52a1\u7684\u6a21\u578b\uff08GraphQL\u6216REST\uff09\n \u8bf7\u4f7f\u7528\u8986\u76d6/\u8ba2\u9605\u4e0a\u8ff0\u95ee\u9898\u4ee5\u4fdd\u6301\u66f4\u65b0\uff01\u6211\u4eec\u4f30\u8ba17\u6708/ 8\u67082021\u5e747\u6708/ 8\u6708\u7684\u589e\u91cf\u53d1\u5e03\u53ef\u4ee5\u901a\u8fc7\u589e\u91cf\u53d1\u5e03\u3002 ", "note_en": "In this post we summarize how Hasura works with  SQL Server as a data source.\n  Here are a few ways you can easily try Hasura with SQL Server in just a few minutes:\n       Run powerful queries with support for nested filtering, sorting and SQL Server types like GIS.\n   Create granular model-level RLS style authorization rules to secure the GraphQL API for internal or external consumers.\n      Hasura compiles the GraphQL query to a single SQL query, including a predicate push-down of authorization rules, preventing typical N+1 problems while fetching data.\n Hasura also uses JSON aggregations to avoid fetching a cartesian product from the database and avoids unnecessary Ser/De overhead.\n                 Extend the GraphQL API and add custom business logic in any language or framework by adding your own resolvers as REST or GraphQL APIs\n  Modern workloads in the cloud or end-user web/mobile apps need a flexible and secure API over HTTP to access data\n Use Hasura to to get a data API instantly, instead of having to build and maintain an API server\n    Once the Hasura service starts running, you can dynamically configure its metadata. This configuration is achieved through using a UI, or using an API call, or using code in a git repo to integrate with your CI/CD pipeline.\n The metadata captures connection configuration to upstream data sources, relationships between models, and their authorization policies.Using this, Hasura generates a GraphQL schema and presents a GraphQL API that can be consumed.\n Hasura takes incoming GraphQL API calls over HTTP and then compiles that into a T-SQL query, including authorization policies with a predicate push-down.\n  Because of its compiler-like architecture Hasura can avoid N+1 issues entirely. It can memoize aggressively, and issue the minimal number of hits to upstream data sources.\n   Instead of resolving a GraphQL query piece by piece, Hasura tries to compile parts of the query to a single data source, into a single query that an upstread source can understand - in this case, a SQL query for SQL Server.\n This is especially impactful when dealing with authorization rules since they can be compiled into the same query as the data fetch instead of having to make multiple requests to the data source.\n  Hasura runs the JSON aggregation in the database. This prevents serialisation/deserialisation overhead and transfers much lesser data over the wire from the database as compared to a join which returns a cartesian product.\n  Hasura also performs connection pooling, since it runs as a service, and also leverages prepared statements automatically.\n This allows the entire GraphQL + data fetch querying and planning process to be as efficient as possible since only variables (parameters or session variables) are processed and the queries at different layers have already been processed and planned.\n  Hasura generates a GraphQL API on tables and views - with support for stored procedures and functions coming soon. This allows evolution of the underlying data model without affecting the generated GraphQL API.\n  Users can add authorization rules that restrict access to particular entities (or rows) and their fields (columns). These authorization rules combine properties of the data that is being accessed with properties of the session of an API request.\n Hasura can extract session information from JWT claims or from a webhook. This allows Hasura to accept end-user API calls directly and process them securely.  Read the docs for more information on how it works.\n Here are a few examples of types of authorization rules that can be implemented with Hasura:\n  # Allow access to a music track if the track&#39;s album&#39;s artist_id is the current user role:  user table:  tracks permission:  tracks.album.artist_id = session.user_id\n  This allows Hasura users to create specific subgraphs for particular application roles or scopes # For &#39;public&#39; scope, allow access only to the id and username fields role:  public table:  profile permission:  fields:  [id, username]  # For the &#39;private&#39; scope, allow access to all fields, but only if the session user is the owner of that data role:  private table:  profile permission:  fields:  [id, username, email]  rule:  profile.id = session.user_id\n  Comparing column values allows access to be controlled by a dynamically changing value in another part of the database\n This makes modelling things like &#34;access tiers&#34; in a subscription plan, or a lookup from a dynamic ACL table very simple\n  Hasura composes roles preserving row and field level access using a &#34;cell based nullification&#34; merge algorithm\n This allows Hasura users to specifcy different levels of ownership and visibility on the same data models easily\n Example: Allow a user to fetch all the fields of their own profile, but only some data for profiles that aren&#39;t theirs # Role 1 private:  user can access their own data, and all fields of that data: [id, email, username]  # Role 2 public:  user can access anyone&#39;s data, but only id and username  # Role3 = Role1 + Role 2 user:  [public, private]  # the user role can now safely be assigned to all logged-in users\n     If you&#39;d like to see how Hasura + SQL server can work for your team  contact us via our website.\n      #7074 Mutations: Run inserts, updates, deletes, stored procedures and transactions securely on SQL Server over a GraphQL API\n #7075 Event triggers: Trigger HTTP webhooks with atomic capture and atleast once guarantee whenever data changes inside the database  (read more)\n #7076 Remote Joins: Join models in SQL Server to models from other API services (GraphQL or REST)\n Please do upvote / subscribe to the issues above to stay updated! We estimate these to be available over incremental releases in July/Aug 2021.", "posttime": "2021-06-18 19:40:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "graphql,sql,realtime,api", "title": "\u5373\u65f6\u5b9e\u65f6GraphQL\u4e0eSQL Server\u7684\u5185\u7f6e\u6388\u6743 ", "title_en": "Instant realtime GraphQL with built-in authorization for SQL Server", "transed": 1, "url": "https://github.com/hasura/graphql-engine/blob/master/architecture/sql-server.md", "via": "", "real_tags": ["graphql", "sql", "realtime", "api"]}, {"category": "", "categoryclass": "", "imagename": "20f7cc581ee120e937806f5a83f1cd3d.png", "infoid": 1066680, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u663e\u7136\u6709\u5f88\u591a\u8c08\u8bba\uff0c\u6211\u4eec\u6700\u8fd1\u8c08\u5230\u4e86\u6e38\u620f\u66f4\u6539\uff0c\u6216\u8005\u8ba1\u5212\u505a\uff0c\u4f46\u6211\u4eec\u4e0d\u60f3\u5206\u4eab\u4efb\u4f55\u4e00\u4e2a\u3002\n  \u7136\u800c\uff0c\u76ee\u524d\u5bf9\u6211\u4eec\u6765\u8bf4\u975e\u5e38\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u6ca1\u6709\u900f\u9732\u4efb\u4f55\u5177\u4f53\u4fee\u6539\u6e38\u620f\u5206\u4eab\u3002\u4eca\u5929\uff06\uff0339; S Post\u5c06\u662f\u975e\u5e38\u6280\u672f\u6027\u7684\uff0c\u4e0e\u7f16\u7a0b\u76f8\u5173\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u521a\u521a\u6765\u5230\u6e38\u620f\u65b0\u95fb\uff0c\u60a8\u53ef\u4ee5\u5b89\u5168\u5730\u8df3\u8fc7\u8fd9\u4e00\u70b9\u3002\n    \u73b0\u5728\uff0c\u53ea\u6709\u5f00\u53d1\u4eba\u5458\u5728\u8fd9\u91cc\uff0c\u6211\u53ef\u4ee5\u5206\u4eab\u6211\u5bf9\u9c8d\u52c3\u53d4\u53d4\u7684\u65b0\u53d1\u73b0\u4ee5\u53ca\u4ed6\u5bf9\u4e00\u4e9b\u4e0e\u7f16\u7a0b\u9879\u76ee\u7ba1\u7406\u76f8\u5173\u7684\u4e00\u4e9b\u57fa\u672c\u539f\u5219\u7684\u975e\u5e38\u597d\u7684\u89e3\u91ca\uff0c\u4ee5\u53ca\u66f4\u591a\u3002\u5982\u679c\u4f60\u624b\u4e0a\u67098.5\u4e2a\u514d\u8d39\u7684\u65f6\u95f4\uff0c\u6211\u5c31\u4f1a\u63d0\u51fa\u4f60\u770b\u5b83\uff0c\u56e0\u4e3a\u4f1a\u6709\u4e00\u4e9b\u5f15\u7528\u4ed6\u5728\u4ee5\u540e\u7684\u63d0\u5230\u3002\n  \u6211\u7684\u4e00\u822c\u601d\u60f3\u662f\uff0c\u6211\u4eec\u4fdd\u6301\u4ee3\u7801\u7684\u8d28\u91cf\u975e\u5e38\u9ad8\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5408\u7406\u7684\u5de5\u4f5c\u65b9\u6cd5\u3002\u4f46\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u8bb8\u591a\u5730\u65b9\u7684\u9009\u62e9\u6027\u76f2\u76ee\u7684\u53d7\u5bb3\u8005\u3002\u6709\u8da3\u7684\u662f\uff0c\u4e00\u4e9b\u788e\u7247\u4ee3\u7801\u5728\u59cb\u4e8e\u5f00\u59cb\uff0c\u5728\u6574\u4e2a\u5e74\u4efd\u90fd\u975e\u5e38\u597d\uff0c\u5373\u4f7f\u5b83\u6269\u5927\u4e86\u5f88\u591a......\u800c\u4e00\u4e9b\u4ee3\u7801\u624d\u4f1a\u53d8\u5f97\u5de8\u5927\u6076\u5316\u3002\n    \u4ec0\u4e48\u662f\u8721\u57fa\u91d1\u4f1a\uff0c\u4e0e\u60a8\u53ef\u80fd\u4f1a\u95ee\u7684\u7f16\u7a0b\u6709\u5173\u5982\u4f55\uff1f\u6211\u7684\u7956\u7236\u662f\u4e00\u4e2a\u975e\u5e38\u70ed\u60c5\u7684\u871c\u8702\u5b88\u62a4\u8005\u3002\u6211\u7684\u7ae5\u5e74\u5728\u6211\u4eec\u7684\u82b1\u56ed\u91cc\u5ea6\u8fc7\uff0c\u5728\u90a3\u91cc\u4f60\u5fc5\u987b\u5c0f\u5fc3\u4f60\u5728\u54ea\u91cc\uff0c\u4f60\u5750\u4e0b\u7684\u5730\u65b9\uff0c\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u7559\u4e0b\u4efb\u4f55\u751c\u871c\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u4f60\u4f1a\u5f88\u5feb\u627e\u5230\u4e00\u5927\u5757\u871c\u8702\u3002\u6211\u4e0d\u5f97\u4e0d\u5e2e\u52a9\u4ed6\u5e76\u4e0d\u65f6\u4e86\u89e3\u871c\u8702\uff0c\u6211\u771f\u8bda\u5730\u8ba8\u538c\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u6211\u6c38\u8fdc\u4e0d\u4f1a\u62e5\u6709\u81ea\u5df1\u7684\u871c\u8702\u3002\u4f46\u4ed6\u5bf9\u4e86\u4e00\u4ef6\u4e8b\uff0c\u4f60\u5b66\u5230\u7684\u4e00\u5207\u90fd\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5bf9\u4f60\u6709\u7528\u3002\n  \u4e00\u4e2a\u4f60\u8eab\u8fb9\u7684\u871c\u8702\uff0c\u4f5c\u4e1a\u7684\u662f\uff0c\u8702\u871c\u662f\u7531\u871c\u8702\u5e26\u8d70\u7684\u65f6\u5019\uff0c\u4f60\u628a\u8702\u5de2\u8721\u7684\u57fa\u7840\u4e0a\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\n    \u5b83\u7684\u4e3b\u8981\u529f\u80fd\u662f\u871c\u8702\u5747\u5300\u5730\u5efa\u7acb\u74f7\u7816\uff0c\u5e76\u4e14\u9075\u5faa\u5df2\u7ecf\u5b58\u5728\u7684\u4f18\u5316\u7ed3\u6784\u662f\u81ea\u7136\u7684\u3002\u8fd9\u6b63\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u5177\u6709\u826f\u597d\u548c\u53ef\u6269\u5c55\u8bbe\u8ba1\u7684\u4ee3\u7801\u53d1\u751f\u7684\u4e8b\u60c5\u3002 \n\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u4e00\u4e2a\u4ee3\u7801\u6709\u4e00\u4e2a\u61d2\u60f0\u7684\u539f\u521b\u8bbe\u8ba1\uff0c\u6216\u8005\u4ece\u672a\u9884\u6599\u5230\u590d\u6742\u6027\u4e2d\u7684\u590d\u6742\u6027\uff0c\u5e76\u4e14\u6bcf\u4e2a\u53d8\u5316\u90fd\u53ea\u662f\u4e71\u4e03\u516b\u7cdf\u7684\u4e00\u4e2a\u5c11\u91cf\u8865\u5145\u3002\u6700\u7ec8\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef\u4e86\u8fd9\u4e00\u90e8\u5206\u4ee3\u7801\u7684\u60f3\u6cd5\u53ea\u662f\u5730\u72f1\uff0c\u800c\u4e14\u5236\u4f5c\u5c0f\u7684\u53d8\u5316\u5f88\u70e6\u4eba\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u662f\uff06\uff0339; t\u5c31\u50cf\u4ee3\u7801\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u53ef\u80fd\u5c11\u7684\u65f6\u95f4\u4e0e\u5b83\u4e00\u8d77\u5de5\u4f5c\u3002\u7ed3\u679c\u662f\uff0c\u95ee\u9898\u6b63\u5728\u7f13\u6162\u5faa\u73af\u5931\u63a7\u3002\n  \u5f53\u6211\u62ff\u8d70\u53d4\u53d4\u9c8d\u52c3\u773c\u955c\u5e76\u5f00\u59cb\u73af\u987e\u56db\u5468\u65f6\uff0c\u6211\u5f88\u5feb\u5c31\u786e\u5b9a\u4e86\u8fd9\u6837\u7684\u51e0\u4e2a\u6709\u95ee\u9898\u7684\u5730\u65b9\u3002\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5de7\u5408\uff0c\u8fd9\u4e9b\u5730\u65b9\u6b63\u5728\u6d88\u9664\u4e00\u4e2a\u4e0d\u6210\u6bd4\u4f8b\u7684\u5927\u91cf\u5f00\u53d1\u65f6\u95f4\uff0c\u4e0d\u4ec5\u662f\u56e0\u4e3a\u6539\u53d8\u5f88\u96be\uff0c\u800c\u4e14\u56e0\u4e3a\u5b83\u4eec\u5145\u6ee1\u4e86\u56de\u5f52\u9519\u8bef\uff0c\u5e76\u4e14\u901a\u5e38\u662f\u6c38\u65e0\u6b62\u5883\u7684\u95ee\u9898\u6765\u6e90\u3002\n  \u8fd9\u662f\u62e5\u6709\u4e00\u5bb6\u516c\u53f8\u7684\u7f8e\u4e3d\u4e8b\u7269\uff0c\u8be5\u516c\u53f8\u5728\u80a1\u7968\u5e02\u573a\u4e0aand\uff0339; t\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6709\u4e00\u5bb6\u516c\u53f8\u6bcf\u5b63\u5ea6\u6162\u6162\u6162\uff0c\u7136\u540e\u4f60\u5bf9\u80a1\u4e1c\u9762\u5bf9\u9648\u8ff0\uff0c\u5373\u89e3\u51b3\u5b83\u7684\u65b9\u5f0f\uff0c\u662f\u4e3a\u56db\u5206\u4e4b\u4e00\u6216\u4e24\u4e2a\uff0c\u91cd\u6784\u4ee3\u7801\u505a\u51fa\u7edd\u5bf9\u6ca1\u6709\u65b0\u529f\u80fd\uff0c\u5b66\u4e60\u65b0\u65b9\u6cd5\u7b49\u7b49\u3002\u6000\u7591\u80a1\u4e1c\u5c06\u5141\u8bb8\u8fd9\u4e00\u70b9\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u80a1\u4e1c\uff0c\u6211\u4eec\u4e86\u89e3\u8fd9\u9879\u6295\u8d44\u7684\u91cd\u8981\u610f\u4e49\u3002\u4e0d\u4ec5\u5728\u9879\u76ee\u4e2d\uff0c\u800c\u4e14\u8fd8\u5728\u6211\u4eec\u7684\u6280\u80fd\u548c\u77e5\u8bc6\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u4e0b\u6b21\u505a\u5f97\u66f4\u597d\u3002\n      \u5982\u679c\u6709\u76f8\u540c\u6570\u91cf\u7684\u4eba\u4ece\u5f00\u59cb\u5b8c\u6210\u5de5\u4f5c\uff0c\u90a3\u4e48\u5b83\u770b\u8d77\u6765\u5f88\u5408\u7406\uff0c\u4f46\u5b83\u4e0d\u662f\u3002\u8fd9\u53ea\u662f\u6211\u7684\u5f00\u59cb\uff0c\u73b0\u5728\u67099\u4e2a\u7a0b\u5e8f\u5458\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u6e38\u620f\u6765\u89e3\u91ca\u8d8a\u6765\u8d8a\u591a\u7684\u4e92\u8054\u673a\u5236\uff0c\u8fd9\u66f4\u96be\u4ee5\u7ef4\u6301\u3002\u6216\u8005\u5b83\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u4ee3\u7801\u7684\u5bc6\u5ea6\u63d0\u9ad8\u4e86\u5982\u6b64\u5927\u3002\u8fd9\u4e24\u4e2a\u90fd\u6ca1\u6709\u8db3\u591f\u7684\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6709\u66f4\u591a\u7a0b\u5e8f\u5458\u5e76\u5bfc\u81f4\u66f4\u5feb\u7684\u5f00\u53d1\u3002\n  \u8fd9\u8868\u660e\u9c8d\u52c3\u53d4\u53d4\u63cf\u8ff0\u4e86\u4e0e\u6211\u4eec\u76f8\u5173\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u5b9e\u9645\u4e0a\u662f\u6539\u5584\u6211\u4eec\u53d1\u5c55\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4ec5\u7f29\u653e\u4eba\u6570\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e00\u4e2a\u6f02\u4eae\u7684\u5e72\u51c0\u57fa\u7840\uff0c\u90a3\u4e48\u62db\u8058\u65b0\u7a0b\u5e8f\u5458\u5e76\u8ba9\u4ed6\u4eec\u52a0\u5feb\u4ee3\u7801\u5373\u53ef\u66f4\u5feb\u3002\n  \u73b0\u5728\u8ba9\u6211\u89e3\u91ca\u6211\u4eec\u6240\u62e5\u6709\u7684\u95ee\u9898\u7684\u4e00\u4e9b\u5178\u578b\u4f8b\u5b50\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u4fee\u590d\u5b83\u4eec\uff1a\n    \u6211\u4eec\u5bf9GUI\u8fdb\u884c\u4e86\u5f88\u591a\u5173\u4e8eGUI\uff08\u4f8b\u5982FFF-216\uff09\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u4ece\u7528\u6237\u548c\u7a0b\u5e8f\u5458\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u4eec\u5982\u4f55\u8fed\u4ee3\u5730\u63d0\u51fa\u4e86\u6211\u4eec\u53d1\u73b0\u7684\u680f\u3002\u6765\u81eaFFF\u548c\u7f16\u7801\u7684\u5171\u540c\u5916\u5e26\u662f\uff0c\u6211\u4eec\u603b\u662f\u4f4e\u4f30\u4e86\u590d\u6742\u7684GUI\u903b\u8f91/\u6837\u5f0f/\u5e03\u5c40\u7b49\u3002\u8fd9\u610f\u5473\u7740\u6539\u5584GUI\u5199\u7684\u65b9\u5f0f\u5177\u6709\u5927\u7684\u6f5c\u5728\u6536\u76ca\u3002 \n\u6211\u4eec\u5bf9GUI\u5bf9\u8c61\u7684\u7ed3\u6784\u548c\u5e03\u5c40\u81ea0.17\u66f4\u65b0\u4ee5\u6765\u7684\u65b9\u5f0f\u611f\u5230\u6ee1\u610f\u3002\u4f46\u662f\uff0c\u7801\u5934\uff0c\u5b83\u4ecd\u7136\u611f\u89c9\u6bd4\u5b83\u5e94\u8be5\u66f4\u52a0\u6109\u5feb\u3002\u4e3b\u8981\u95ee\u9898\u662f\u60a8\u9700\u8981\u89e6\u6478\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u4ea4\u4e92\u5143\u7d20\u6240\u9700\u7684\u5730\u65b9\u3002\u8ba9\u6211\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u6309\u94ae\uff0c\u7528\u4e8e\u5728\u5730\u56fe\u751f\u6210\u7a97\u53e3\u4e2d\u91cd\u7f6e\u9884\u8bbe\u3002\n          \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8986\u76d6MapGeneratorClass\u4e2dActionListener\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4fa6\u542c\u5355\u51fb\u64cd\u4f5c\u3002\n  \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u5982\u679c\u6211\u4eec\u8003\u8651\u7684\u5143\u7d20/\u5426\u5219\u6211\u4eec\u4f1a\u8fdb\u884c\u5b9e\u9645\u903b\u8f91\r void mapgeneratorgui :: onmouseclick\uff08const agui :: mousevent\uff06amp;\u6d3b\u52a8\uff09\r{\r if\uff08event.getsourceWidget\uff08\uff09==\uff06amp; this-\uff06gt; resetPreesetButton\uff09\r this-\u548cgt; onresetsettings\uff08\uff09;\r \u5426\u5219if\uff08event.getSourceWidget\uff08\uff09==\uff06amp; this-\uff06gt; randomizeseedbutton\uff09\r this-\uff06gt; randomizeeed\uff08\uff09;\r ......\n\r\u8fd9\u662f\u4e00\u4e2a\u5e26\u6709\u4e00\u4e2a\u7b80\u5355\u52a8\u4f5c\u7684\u4e00\u4e2a\u6309\u94ae\u7684\u6837\u677f\u592a\u591a\u3002\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u6ce8\u518c\u4e86ActionListeners\u7684500\u591a\u4e2a\u5730\u65b9\uff0c\u6240\u4ee5\u60f3\u8c61\u81a8\u80c0\u7684\u6570\u91cf\u3002\n  \u6211\u4eec\u6709\u70b9\u6ce8\u610f\u5230\uff0c\u5f53\u6211\u4eec\u4f7f\u7528lambdas\u6765\u4fe1\u53f7\u56de\u8c03\u548c\u7c7b\u4f3c\u7684\u4e1c\u897f\u65f6\uff0c\u5b83\u5f80\u5f80\u66f4\u4ee4\u4eba\u6109\u5feb\u3002\u90a3\u4e48\u5982\u679c\u6211\u4eec\u505a\u5230\u4e86\u8fd9\u6837\u7684\u4e3b\u8981\u65b9\u5f0f\uff0c\u90a3\u4e48\u505a\u4ec0\u4e48\uff1f\n  \u6211\u4eec\u51b3\u5b9a\u5b8c\u5168\u91cd\u5199\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u6240\u4ee5\u800c\u4e0d\u662f\u4ece\u4e8b\u4ef6\u6355\u83b7\u529f\u80fd\u6dfb\u52a0\u4fa6\u542c\u5668\u548c\u8fc7\u6ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff1a\n    \u8fd9\u5df2\u7ecf\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6539\u8fdb\uff0c\u56e0\u4e3a\u6dfb\u52a0\u548c\u7ef4\u62a4\u65b0\u7684\u903b\u8f91\u53ea\u9700\u8981\u60a8\u67e5\u770b\u4e00\u4e2a\u5730\u65b9\u800c\u4e0d\u662f\u51e0\u4e2a\u5730\u65b9\uff0c\u5e76\u4e14\u5b83\u901a\u5e38\u66f4\u53ef\u8bfb\uff0c\u66f4\u5bb9\u6613\u6613\u4e8e\u9519\u8bef\u3002 \n\u7531\u4e8e\u6211\u4eec\u4e0d\u9700\u8981\u4fdd\u6301\u6307\u9488\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u4ece\u8bfe\u5802\u4e0a\u5220\u9664\u5b83\u7684\u5b9a\u4e49\uff0c\u5e76\u5728\u6b64\u65f6\u5c1a\u7684\u8bb8\u591a\u5730\u65b9\u533f\u540d\u4f7f\u5b83\u6210\u4e3a\uff1a\n  \u91cd\u5199\u6240\u6709GUI\u5185\u90e8\u4eba\u5458\uff08\u518d\u6b21\uff09\u662f\u4e00\u9879\u91cd\u8981\u4efb\u52a1\uff0c\u4f46\u6700\u7ec8\u5b83\u771f\u7684\u5f88\u503c\u5f97\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u548c\uff0339; T\u60f3\u8c61\u6211\u4eec\u5982\u4f55\u7ad9\u5f97\u80fd\u591f\u52aa\u529b\u505a\u65e7\u7684\u65b9\u5f0f\u3002\u5b83\u4e5f\u5bfc\u81f4\u4e86\u6570\u5343\u884c\u4ee3\u7801\u88ab\u5220\u9664\u3002\n      \u5f53\u60a8\u5c1d\u8bd5\u5236\u4f5c\u4ee3\u7801\u6e05\u6d01\u5242\u65f6\uff0c\u6709\u51e0\u4e2a\u4e3b\u8981\u76ee\u6807\u53ef\u4ee5\u8ffd\u6c42\u3002\u5220\u9664\u4ee3\u7801\u590d\u5236\u662f\u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u5927\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4ee3\u7801isn\uff06\uff0339; t\u7ed3\u6784\u826f\u597d\u65f6\uff0c\u51fd\u6570\u592a\u957f\uff0c\u51fd\u6570\u592a\u957f\uff0c\u6216\u8005\u540d\u5b57\u662f\u5947\u602a\u7684\uff0c\u4f46\u5982\u679c\u4f60\u67095\u4e2a\u7248\u672c\u7684\u540c\u4e00\u5806\u4ee3\u7801\uff0c\u90a3\u4e48\u8fd9\u91cc\u6709\u7565\u6709\u53d8\u5316\uff0c\u5b83\u662f\u6700\u7cdf\u7cd5\u7684\u517d\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u65f6\u95f4\u7684\u95ee\u9898\uff0c\u76f4\u5230\u9519\u8bef\u4fee\u6b63/\u66f4\u6539\u4ec5\u9002\u7528\u4e8e\u67d0\u4e9b\u53d8\u4f53\uff0c\u5e76\u4e14\u5b83\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e0d\u90a3\u4e48\u660e\u663e\uff0c\u662f\u5426\u6709\u53d8\u4f53\u4e4b\u95f4\u7684\u5dee\u5f02\u662f\u610f\u56fe\u6216\u95f4\u63a5\u7684\u3002\n  \u624b\u52a8\u6784\u5efa\u903b\u8f91\u662f\u4e00\u4e2a\u602a\u7269\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u652f\u6301\u7684\u6240\u6709\u4e1c\u897f\uff1a\n    \u7136\u540e\uff0c\u6240\u6709\u8fd9\u4e9b\u903b\u8f91\u90fd\u9700\u8981\u4e58\u4ee52\uff08\u5f53\u60a8\u61d2\u60f0\u548c\u590d\u5236\u7c98\u8d34\u65f6\uff09\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u6b63\u5e38\u7684\u5efa\u7b51\u548c\u5e7d\u7075\u5927\u697c\u3002\n  \u7136\u540e\uff0c\u60a8\u5c06\u6574\u4e2a\u4ee3\u7801\u4e58\u4ee52\u500d\u518d\u6b21\u618e\u6076\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u4eec\u8fd8\u9700\u8981\u5728\u5ef6\u8fdf\u9690\u85cf\u6a21\u5f0f\u4e0b\u6267\u884c\u6240\u6709\u8fd9\u4e9b\u903b\u8f91\u3002\u542c\u8d77\u6765\u5f88\u7cdf\u7cd5\uff0c\u4f46\u5b83\u662f\uff06\uff0339; t\u6240\u6709\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u903b\u8f91\u5728\u6574\u4e2a\u5386\u53f2\u4e0a\u4e0d\u65ad\u5730\u4fee\u8865\u5e76\u89e6\u53ca\u4e86\u4e0d\u540c\u7684\u4eba\uff0c\u4ee3\u7801\u7684\u6838\u5fc3\u662f\u4e00\u79cd\u75af\u72c2\u7684\u957f\u65b9\u6cd5\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u53d4\u53d4\u63d0\u5230\u7684\u5730\u5e73\u7ebf\u9c8d\u52c3\u3002\n  \u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u9700\u8981\u6539\u53d8\u5173\u4e8e\u8fd9\u4e2a\u4ee3\u7801\u7684\u4e8b\u60c5\uff0c\u7279\u522b\u662f\u5f53\u4f60\u8003\u8651\u65f6\uff0c\u4ee3\u7801\u81ea\u7136\u6709\u8bb8\u591a\u89d2\u843d\u7684\u9519\u8bef\uff0c\u6216\u4ec5\u5728\u4ee3\u7801\u7684\u67d0\u4e9b\u53d8\u4f53\u4e2d\u56fa\u5b9a\u3002\u8fd9\u662f\u61d2\u60f0\u7684\u957f\u671f\u8bbe\u8ba1\u5982\u4f55\u5bfc\u81f4\u751f\u4ea7\u529b\u5dee\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002 \n\u957f\u8bdd\u77ed\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u50cf\u6211\u7684\u4e1a\u4f59\u7231\u597d\u8005\u7684\u4fa7\u9762\u9879\u76ee\u624d\u4f1a\u5b8c\u6210\uff0c\u4f46\u6700\u7ec8\uff0c\u6240\u6709\u91cd\u590d\u90fd\u662f\u5408\u5e76\u7684\uff0c\u4ee3\u7801\u7ed3\u6784\u5f88\u597d\u5e76\u8fdb\u884c\u4e86\u5b8c\u5168\u6d4b\u8bd5\u3002\u7ba1\u7406\u4ee3\u7801\u9700\u8981\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u76f8\u6bd4\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u56e0\u4e3a\u8bfb\u8005\u4e0d\u9700\u8981\u8bfb\u53d6\u4e00\u5806\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u83b7\u5f97\u5927\u56fe\u7247\u5e76\u80fd\u591f\u6539\u53d8\u4efb\u4f55\u4e1c\u897f\u3002\n  \u8fd9\u8ba9\u6211\u60f3\u8d77\u4e86\u7c7b\u4f3c\u79cd\u7c7b\u7684\u91cd\u6784\uff1a\uff06\uff0334;\u4e00\u65e6\u6211\u4eec\u5b8c\u6210\u4e86\u8fd9\u4e00\u70b9\uff0c\u5b83\u5c31\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u4e50\u4e8e\u5c06\u4e1c\u897f\u6dfb\u52a0\u5230\u8fd9\u4e2a\u4ee3\u7801\u3002\uff06\uff0334; isn\uff06\uff0339;\u5b83\u7f8e\u4e3d\u5417\uff1f\u5b83\u4e0d\u4ec5\u66f4\u6709\u6548\u548c\u66f4\u5c11\u7684\u8d8a\u91ce\u8f66\uff0c\u4e0e\u4e4b\u5de5\u4f5c\u4e5f\u662f\u66f4\u6709\u4e50\u8da3\u7684\uff0c\u5e76\u4e14\u5728\u4e0d\u7ba1\u5176\u4ed6\u65b9\u9762\uff0c\u5f80\u5f80\u66f4\u5feb\u5730\u52aa\u529b\u5de5\u4f5c\u3002\n      \u4e0d\uff0c\u6211\u4eec\u663e\u7136\u6ca1\u6709\u81ea\u52a8\u6d4b\u8bd5\u5230\u8fbe\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86\u51e0\u6b21\uff08FFF-29\uff0cFFF-288\u7b49\uff09\u3002\u6211\u4eec\u8bd5\u56fe\u8fde\u7eed\u63d0\u9ad8\u6d4b\u8bd5\u6240\u6db5\u76d6\u7684\u4ee3\u7801\u533a\u57df\uff0c\u8fd9\u5bfc\u81f4\u6211\u4eec\u6db5\u76d6\u53e6\u4e00\u4e2a\u5730\u533aGUI\u3002\u8fd9\u4e0e\u91cd\u590d\u4f4e\u4f30\u4e86GUI\u9700\u6c42\u7684\u4f4e\u4f30\u4e86\u4f4e\u4f30\u4e86\u3002\u5b83\u6839\u672c\u6ca1\u6709\u6d4b\u8bd5\u662f\u8fd9\u79cd\u4f4e\u4f30\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u53d1\u751f\u4e86\u591a\u5c11\u6b21\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u4e00\u4e2a\u91ca\u653e\uff0c\u5b83\u53ea\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u5b83\u53ea\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6d4b\u8bd5\u4e86\u611a\u8822\u7684\u7b80\u5355\u800c\u5d29\u6e83\u4e86\u3002\u6309\u94ae\u3002\u6700\u540e\uff0c\u5b83\u8bc1\u660e\u5e76\u4e0d\u96be\u4ee5\u81ea\u52a8\u5316GUI\u6d4b\u8bd5\u3002\r\r \u6211\u4eec\u53ea\u9700\u4f7f\u7528GUI\u521b\u5efa\u6d4b\u8bd5\u73af\u5883\uff08\u5373\u4f7f\u5728\u6ca1\u6709\u56fe\u5f62\u7684\u6d4b\u8bd5\u65f6\uff0c\u5373\u4f7f\u6d4b\u8bd5\uff09\u3002\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e9b\u5e2e\u52a9\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5e0c\u671b\u5149\u6807\u79fb\u52a8\uff0c\u6216\u8005\u6211\u4eec\u60f3\u8981\u70b9\u51fb\u7684\u5185\u5bb9\uff1a\n    \u7136\u540e\uff0c\u70b9\u51fb\u65b9\u6cd5\u8c03\u7528\u8f93\u5165\u7684\u4f4e\u7ea7\u522b\u4e8b\u4ef6\uff0c\u56e0\u6b64\u6d4b\u8bd5\u6240\u6709\u4e8b\u4ef6\u5904\u7406\u548cGUI\u903b\u8f91\u7684\u6240\u6709\u5c42\u3002\u8fd9\u662f\u7aef\u5230\u7aef\u6d4b\u8bd5\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u4e89\u8bae\u7684\u4e3b\u9898\uff0c\u56e0\u4e3a\u4e00\u4e9b\uff06\uff0334;\u5b66\u6821\uff06\uff0334;\u8003\u8bd5\u65b9\u6cd5\u8bf4\uff0c\u6240\u6709\u5e94\u8be5\u5355\u72ec\u6d4b\u8bd5\u4e00\u5207\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u7406\u8bba\u4e0a\u53ea\u80fd\u6d4b\u8bd5\uff0c\u9996\u5148\u5355\u51fb\u6309\u94ae\uff0c\u4ece\u800c\u521b\u5efa\u8981\u5904\u7406\u7684\u8f93\u5165\uff0c\u7136\u540e\uff0c\u5bf9\u8f93\u5165\u5de5\u4f5c\u7684\u72ec\u7acb\u6d4b\u8bd5\u5de5\u4f5c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u559c\u6b22\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f46\u6211\u771f\u7684\u5f88\u559c\u6b22\uff0c\u6211\u53ef\u4ee5\u53ea\u7528\u51e0\u884c\u4ee3\u7801\u6e17\u900f\u6240\u6709\u7684\u903b\u8f91\u5c42\u3002 \uff08\u5728\u6d4b\u8bd5\u4f9d\u8d56\u6027\u90e8\u5206\u4e2d\u66f4\u591a\uff09\n      \u6211\u5fc5\u987b\u627f\u8ba4\uff0c\u6211\u6ca1\u6709\u77e5\u9053TDD\u771f\u7684\u662f\u4ec0\u4e48\u76f4\u5230\u6700\u8fd1\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e9b\u5e9f\u8bdd\uff0c\u56e0\u4e3a\u5b83\u5bf9\u67d0\u4e9b\u529f\u80fd\u7684\u6240\u6709\u6d4b\u8bd5\uff08\u6ca1\u6709\u5c1d\u8bd5\u5b83\u6216\u751a\u81f3\u7f16\u8bd1\u5b83\uff09\u6765\u8bf4\uff0c\u5b83\u542c\u8d77\u6765\u975e\u5e38\u4e0d\u5207\u5b9e\u65e0\u4e8e\u5e76\u4e14\u4e0d\u5207\u5b9e\u9645\uff0c\u7136\u540e\u5c1d\u8bd5\u5b9e\u73b0\u6ee1\u8db3\u5b83\u7684\u4e1c\u897f\u3002\n  \u4f46\u8fd9\u4e0d\u662fTDD\uff0c\u5b83\u5fc5\u987b\u5728A\uff06\uff0334\u4e2d\u5411\u6211\u5c55\u793a;\u5bf9\u4e8e\u5047\u4eba\uff06\uff0334;\u8ba9\u6211\u610f\u8bc6\u5230\u6211\u6709\u591a\u9519\u4e86\u3002\n  TDD\u5b9e\u9645\u4e0a\u662f\u5ef6\u957f\u6d4b\u8bd5\u4e4b\u95f4\u7684\u6052\u5b9a\u5feb\u901f\u65cb\u8f6c\uff0c\u5e76\u4f7f\u5b83\u4eec\u6301\u7eed\u901a\u8fc7\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u6d4b\u8bd5\u65f6\uff0c\u60a8\u5c06\u7f16\u5199\u4ee3\u7801\u4ee5\u540c\u65f6\u57fa\u672c\u6ee1\u8db3\u5b83\u4eec\u3002\u8fd9\u5141\u8bb8\u60a8\u7acb\u5373\u6d4b\u8bd5\u60a8\u6240\u5199\u7684\u5185\u5bb9\uff0c\u4e3b\u8981\u4f7f\u7528\u6d4b\u8bd5\u4f5c\u4e3a\u4ee3\u7801\u5e94\u786e\u8ba4\u7684\u6307\u4ee4\uff0c\u8fd9\u6307\u51fa\u4e86\u601d\u60f3\u8fc7\u7a0b\uff0c\u4f7f\u60a8\u8003\u8651\u60a8\u6240\u5728\u4f4d\u7f6e\uff0c\u5e76\u7f16\u5199\u66f4\u5177\u7ed3\u6784\u5316\u548c\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u4ece\u4e00\u5f00\u59cb\u5c31\u3002 \n\u6240\u4ee5\u4e4b\u540e\uff06\uff0334; aha\uff06\uff0334;\u5b9e\u73b0TDD\u7684\u65f6\u523b\u771f\u7684\uff0c\u6211\u5f00\u59cb\u662f\u5373\u65f6\u7c89\u4e1d\u3002\u6211\u73b0\u5728\u6b63\u5728\u52aa\u529b\u5c3d\u91cf\u52aa\u529b\uff0c\u5c3d\u53ef\u80fd\u5730\u9075\u5faaTDD\u65b9\u6cd5\uff0c\u5e76\u5f3a\u8feb\u5b83\u5728\u56e2\u961f\u4e2d\u7684\u5176\u4ed6\u4eba\u3002\u5b83\u611f\u89c9\u901f\u5ea6\u6162\uff0c\u5373\u4f7f\u662f\u6070\u5230\u597d\u5904\u7684\u7b80\u5355\u903b\u8f91\u4e5f\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u6d4b\u8bd5\u5df2\u7ecf\u8bc1\u660e\u4e86\u6211\u5df2\u7ecf\u591a\u6b21\u8bc1\u660e\u4e86\u6211\uff0c\u5e76\u963b\u6b62\u4e86\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u8ba8\u538c\u4f4e\u7ea7\u8c03\u8bd5\u4f1a\u8bdd\u3002\n          \u5982\u679c\u6d4b\u8bd5\u5e94\u8be5\u771f\u6b63\u72ec\u7acb\uff0c\u6d4b\u8bd5C\uff0c\u5e94\u8be5\u6709\u4e00\u4e9bA\u548cB\u7684\u6a21\u578b\uff0c\u56e0\u6b64C\u7684\u6d4b\u8bd5\u4e0e\u7cfb\u7edfA + B\u72ec\u7acb\u5de5\u4f5c\u3002\u5171\u8bc6\u4f3c\u4e4e\u662f\uff0c\u8fd9\u5bfc\u81f4\u66f4\u72ec\u7acb\u7684\u8bbe\u8ba1\u7b49\u3002\n  \u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u5f88\u591a\u60c5\u51b5\uff0c\u4f46\u6211\u76f8\u4fe1\u968f\u65f6\u968f\u5730\u8bd5\u56fe\u5b9e\u73b0\u8fd9\u79cd\u65b9\u6cd5\u662f\u63a5\u8fd1\u4e0d\u53ef\u80fd\u7684\uff0c\u5b83\u4f1a\u5bfc\u81f4\u5f88\u591a\u6742\u4e71\u548c\u6211\uff06\uff0339; m\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u6709\u95ee\u9898\u7684\u6742\u4e71\u3002\n  \u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u8bf4\u6211\u4eec\u5bf9\u5730\u56fe\u4e0a\u6b63\u786e\u8fde\u63a5\u7684\u7535\u6781\u6d4b\u8bd5\u3002\u4f46\u662f\u5f53\u6211\u4e0d\u77e5\u9053\u5730\u56fe\u4e0a\u641c\u7d22\u5730\u56fe\u4e0a\u7684\u5b9e\u4f53\u6b63\u5e38\u5de5\u4f5c\u65f6\uff0c\u6211\u5f88\u96be\u6d4b\u8bd5\u5b83\u3002\n  \u6211\u7684\u7ed3\u8bba\u662f\uff0c\u53ea\u8981\u4f9d\u8d56\u4e8e\u4f9d\u8d56\u6027\u4e5f\u5728\u6d4b\u8bd5\u4e2d\uff0c\u5c31\u5177\u6709\u8fd9\u6837\u7684\u4f9d\u8d56\u6027\uff0c\u4f46\u662f\u5f53\u4f60\u6253\u7834\u67d0\u4e9b\u4e1c\u897f\u5e76\u4e14\u5f88\u591a\u6d4b\u8bd5\u5f00\u59cb\u5931\u8d25\u65f6\uff0c\u95ee\u9898\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5f53\u4f60\u505a\u5c0f\u7684\u6539\u53d8\u65f6\uff0c\u662f/\u5426\u7684\u6d4b\u8bd5\u662f\u8db3\u591f\u7684\uff0c\u4f46\u5b83\u59cb\u7ec8\u662f\u4e00\u4e2a\u9009\u62e9\uff0c\u7279\u522b\u662f\u5f53\u4f60\u91cd\u6784\u4e00\u4e9b\u5185\u90e8\u7ed3\u6784\u65f6\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u6709\u70b9\u671f\u5f85\u6253\u7834\u5f88\u591a\u4e1c\u897f\uff0c\u800c\u4f60\u4e00\u65e6\u5b83\u518d\u6b21\u7f16\u8bd1\uff0c\u9700\u8981\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u9010\u6b65\u4fee\u590d\u5b83\u4eec\u3002\n  \u5982\u679c\u6d4b\u8bd5\u6ca1\u6709\u4efb\u4f55\u7279\u6b8a\u7684\u7ed3\u6784\uff0c\u90a3\u4e48\u5c40\u52bf\u5728100\u6d4b\u8bd5\u65f6\u90fd\u662f\u975e\u5e38\u4e0d\u5e78\u7684\uff0c\u4f60\u5269\u4e0b\u7684\u5c31\u662f\u5c1d\u8bd5\u534a\u968f\u673a\u9009\u62e9\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u7136\u540e\u5f00\u59cb\u8c03\u8bd5\u5b83\u3002\u4f46\u662f\uff0c\u5f53\u4e00\u4e9b\u590d\u6742\u7684\u6d4b\u8bd5\u6848\u4ef6\u5728\u4e2d\u95f4\u5931\u8d25\u65f6\uff0c\u5b83\u771f\u7684\u8bef\u5bfc\u4e86\uff0c\u4f60\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u8c03\u8bd5\u5b83\uff0c\u53ea\u662f\u610f\u8bc6\u5230\u5b83\u662f\u5bfc\u81f4\u5931\u8d25\u7684\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u4f4e\u7ea7\u9519\u8bef\u3002\n  \u76ee\u6807\u5f88\u5bb9\u6613\uff0c\u6211\u5e0c\u671b\u5f97\u5230\u6211\u6539\u53d8\u7684\u6700\u7b80\u5355\u7684\u5931\u8d25\u60c5\u51b5\u3002 \n\u4e3a\u6b64\uff0c\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u4f9d\u8d56\u7cfb\u7edf\u3002\u6d4b\u8bd5\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6267\u884c\u5e76\u5217\u51fa\uff0c\u5373\u5f53\u60a8\u8981\u8c03\u8bd5\u5e76\u68c0\u67e5\u6d4b\u8bd5\u65f6\uff0c\u60a8\u5c31\u77e5\u9053\u5176\u6240\u6709\u4f9d\u8d56\u9879\u5df2\u7ecf\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u8bd5\u56fe\u641c\u7d22\u5176\u4ed6\u4eba\u4e5f\u4f7f\u7528\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5982\u4f55\u505a\u5230\uff0c\u800c\u4e14\u6211\u60ca\u5947\u5730\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e1c\u897f\u3002\n      \u5728\u91cd\u6784\u9b3c/\u771f\u6746\u8fde\u63a5\u903b\u8f91\u7684\u91cd\u590d\u65f6\uff0c\u6211\u5efa\u7acb\u5e76\u4f7f\u7528\u4e86\u8fd9\u79cd\u7ed3\u6784\uff0c\u5b83\u80af\u5b9a\u4f1a\u52a0\u901f\u4f7f\u5b83\u6b63\u5e38\u5de5\u4f5c\u7684\u8fc7\u7a0b\uff0c\u6211\u81ea\u4fe1\u5730\u786e\u4fe1\u8fd9\u662f\u5bf9\u6211\u4eec\u7684\u7ed3\u6784\u6d4b\u8bd5\u7684\u65b9\u5f0f\u53ef\u9884\u89c1\u7684\u672a\u6765\u3002\u4e0d\u4ec5\u5b83\u4f7f\u6d4b\u8bd5\u7ed3\u679c\u66f4\u6709\u7528\uff0c\u4f46\u5b83\u8feb\u4f7f\u6211\u4eec\u5c06\u6d4b\u8bd5\u5957\u4ef6\u5206\u6210\u66f4\u5c0f\u7684\u4e13\u4e1a\u5355\u4f4d\uff0c\u8fd9\u4e5f\u5f88\u6709\u5e2e\u52a9\u3002\n      \u5f53Boskid\u52a0\u5165\u56e2\u961f\u4f5c\u4e3aQA Guy\u65f6\uff0c\u4ed6\u7684\u4e3b\u8981\u89d2\u8272\u4e4b\u4e00\u662f\u786e\u4fdd\u5728\u5b9e\u9645\u4fee\u590d\u4e4b\u524d\u9996\u5148\u901a\u8fc7\u6d4b\u8bd5\u9996\u6b21\u88ab\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u901a\u5e38\u6539\u5584\u6211\u4eec\u7684\u4ee3\u7801\u6d4b\u8bd5\u8986\u76d6\u3002\u8fd9\u4f7f\u5f97\u91ca\u653e\u66f4\u6709\u4fe1\u5fc3\uff0c\u6211\u4eec\u7684\u56de\u5f52\u9519\u8bef\u8f83\u5c11\uff0c\u76f4\u63a5\u8f6c\u5316\u4e3a\u957f\u671f\u6548\u7387\u3002\u6211\u5f3a\u70c8\u8ba4\u4e3a\uff0c\u8fd9\u6e05\u695a\u5730\u8868\u660e\u5e76\u652f\u6301\u9c8d\u52c3\u53d4\u53d4\u6240\u8bf4\u7684\u8bdd\u3002\u4f7f\u7528\u6d4b\u8bd5\u611f\u89c9\u8f83\u6162\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u66f4\u5feb\u7684\u3002\n  \u6d4b\u8bd5\u8986\u76d6\u8303\u56f4\u662f\u5f53\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff08\u901a\u5e38\u610f\u5473\u7740\u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u6d4b\u8bd5\uff09\u65f6\u6267\u884c\u4ee3\u7801\u7684\u90e8\u5206\u7684\u6307\u793a\u7b26\u3002\u6211\u4ece\u672a\u4f7f\u7528\u8fc7\u4e00\u4e2a\u5de5\u5177\u4ee5\u8861\u91cf\u6d4b\u8bd5\u8986\u76d6\uff0c\u4f46\u7531\u4e8e\u5b83\u662f\u9c8d\u52c3\u53d4\u53d4\u7684\u4e00\u4e2a\u8c08\u8bdd\u4e4b\u4e00\uff0c\u6211\u8bd5\u56fe\u7b2c\u4e00\u6b21\u4f7f\u7528\u5b83\u3002\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u4ec5\u9002\u7528\u4e8eWindows\u7684\u5de5\u5177\uff0c\u4f46\u9700\u8981\u6700\u5c11\u7684\u8bbe\u7f6e\u91cf\uff0c\u5b83\u662fOpenCPPCoverage\uff0c\u5b83\u63d0\u4f9b\u4e86\u5982\u6b64\uff1a\n    \u5b83\u7acb\u5373\u53ef\u89c1\uff0c\u5373\u5728\u6d4b\u8bd5\u4e2d\u90fd\u4e0d\u4f1a\u89e6\u53d1\u4e24\u4e2a\u6761\u4ef6\u547d\u4ee4\u3002\u5b83\u57fa\u672c\u4e0a\u610f\u5473\u7740\u4ee3\u7801\u53ea\u662f\u6d4b\u8bd5\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u88ab\u8986\u76d6\uff0c\u6216\u5b83\uff06\uff0339; s\u6b7b\u4ee3\u7801\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u88ab\u5220\u9664\u3002\u6211\u975e\u5e38\u81ea\u4fe1\uff08\u518d\u6b21\uff09\uff0c\u4f7f\u7528\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7f16\u5199\u6e05\u6d01\u9ad8\u8d28\u91cf\u4ee3\u7801\u3002\n        \u5982\u679c\u4f60\u88ab\u8fd9\u4e00\u70b9\u79fb\u52a8\uff0c\u5982\u679c\u4f60\u8bfb\u5230\u8fd9\u4e00\u70b9\u7684\u60c5\u7eea\u662f\uff0c\uff06\uff0334;\u6211\u5e0c\u671b\u6211\u7684\u8001\u677f\u6709\u8fd9\u4e9b\u4f18\u5148\u4e8b\u9879\uff06\uff0334;\u8003\u8651\u5728\u6b66\u5668\u7533\u8bf7\u5de5\u4f5c\uff01 ", "note_en": "We obviously have a lot to talk about when it comes to the game changes we recently did, or plan to do, but we don&#39;t want to share any of it yet.\n  Yet, there is currently a topic very relevant to us and we can share it without revealing any specific changes to the game. Today&#39;s post will be quite technical and related to programming, so if you just came for the game news, you can safely skip this one.\n    Now that there are only developers here, I can share my new discovery of Uncle Bob and his  really nice explanation of some of the fundamental principles related to programming project management, and more. If you have 8.5 free hours on your hands, I propose you watch it, as there will be some references to what he mentions later on.\n  My general thought was, that we maintain the quality of the code to be quite high, and we have a reasonably good work methodology. But we were the victims of selective blindness in many places actually. It is interesting, how some pieces code were just good from start and stayed pretty good throughout all the years, even when it was expanded a lot... and some of the code just deteriorated heavily.\n    What is a wax foundation and how is it related to programming you might ask? My grandfather was a very enthusiastic bee-keeper. My childhood was spent in our garden, where you had to be careful where you step, where you sit down, and you could never leave anything sweet just laying around, because you would find a big pile of bees on top of it quite soon. I had to help him and learn about the bees from time to time, which I honestly hated, because I knew that I will never have any bees of my own. But he was right about one thing, everything you learn will be useful to you in one way or another.\n  One of the jobs you do around bees, is that when the honey is taken away from the bees, you put the wax foundation in the hive, which looks like this:\n    Its primary function is that the bees build their tiles evenly and quite fast, as it is just natural to follow the optimised structure that is already there. And this is exactly what happens with code that has a good and expandable design from the start.\n  On the other hand, there is code that either had a lazy original design, or it was never expected to grow so much in complexity, and each of the changes were just a small addition to the mess. Eventually we got used to the idea that this part of the code is just hell, and that making small changes is annoying. This implies that we just don&#39;t like this part of the code, and we want to spend as little time as possible working with it. And the result is that the problem is slowly spiralling out of control.\n  When I took the  Uncle Bob glasses and started looking around, I quickly identified several problematic places like this. It is not a coincidence, that these places were eating away an disproportionately large amount of the dev time, not only because making changes is hard, but because they are full of regression bugs and generally are a never-ending source of problems.\n  This is the beautiful thing about having a company that isn&#39;t on the stock market. Imagine you have a company that goes slower and slower every quarter, and then you confront the shareholders with the statement, that the way to solve it, is to do absolutely no new features for a quarter or two, refactor the code, learn new methodologies etc. I doubt that the shareholders would allow that. Luckily, we don&#39;t have any shareholders, and we understand the vital importance of this investment in the long run. Not only in the project, but also in our skill and knowledge, so we do better next time.\n      It would look pretty reasonable if there was the same amount of people working from start to finish, but it is not. It was just me at the very start, and now there are 9 programmers. It could be explained by the game getting bigger and growing a lot of interconnected mechanics, which is harder to maintain. Or it could also mean that the density of the code improved so much. Both of these are not enough explain why having more programmers doesn&#39;t result in faster development.\n  This indicates that the problems Uncle Bob describes are relevant to us, and the solution is actually to improve the way we develop rather than just scaling the amount of people. Once we have a nice clean foundation, then hiring new programmers and getting them up to speed with the code will be much faster.\n  Let me now explain a few typical examples of the problems we had, and how we proceeded to fix them:\n    We wrote a lot about the GUI (for example  FFF-216) and how we iteratively raised the bar of what we find acceptable both from both the user and programmer perspective. The common takeaways from the FFF and from the coding was, that we always underestimated how complicated GUI logic/styles/layouting etc. can become. This implies that improving the way the GUI is written has large potential gains.\n  We are happy with the way the GUI objects are structured and laid out since the 0.17 update. But codewise, it still feels much more bloaty than it should be. The main problem was the amount of places you needed to touch to add some interactive element. Let me show you an example, a simple button used to reset presets in the map generator window.\n          Then, we needed to override the method of the ActionListener in our MapGeneratorClass, so we could listen to the click actions.\n  And finally, we could implement the method, where we if/else through the elements we care about, to do the actual logic\r void MapGeneratorGui::onMouseClick(const agui::MouseEvent&amp; event)\r{\r if (event.getSourceWidget() == &amp;this-&gt;resetPresetButton)\r this-&gt;onResetSettings();\r else if (event.getSourceWidget() == &amp;this-&gt;randomizeSeedButton)\r this-&gt;randomizeSeed();\r ...\n\rThis is way too much boilerplate for one button with one simple action. We had over 500 places where we registered actionListeners in the code, so imagine the amount of bloat.\n  We kind of noticed, that when we use lambdas to signal callbacks and similar things in the GUI, it tends to be much more pleasant to use. So what if we made it the primary way to do the GUI?\n  We decided to completely rewrite the way it works, so instead of adding listeners and the filtering from the event catching functions, we can just specify:\n    Which is a big improvement already, as adding and maintaining the new logic only requires you to look at one place instead of several, and it makes it generally more readable and less prone to errors.\n  And since we don&#39;t need to  hold the pointer object for comparisons, we can completely remove its definition from the class, and make it anonymous on many places in this fashion:\n  Rewriting all the GUI internals (again) was a big task, but in the end it really felt to be well worth it, as now I can&#39;t imagine how we could stand doing it the old way. It also resulted in several thousands of lines of code being removed.\n      There are several main goals to pursue when you try to make the code cleaner. Removing code duplication is the first and biggest priority. It is reasonably easy to solve when the code isn&#39;t structured well, functions are too long, or names are weird, but if you have 5 versions of the same pile of code with slight changes here and there, it is the worst beast. It is just a question of time, until bugfixes/changes are only applied to some variants, and it becomes less and less obvious whether the differences between the variants are intended or circumstantial.\n  The manual building logic is a monster, because of all the things it supports already:\n    Then, all of this logic needs to be multiplied by 2 (when you are lazy and copy paste), as you can have normal building and ghost building.\n  And then, you multiply this whole code abomination by 2 again. Why? Because we also need to do all this logic in the  latency hiding mode. Sounds bad already, but it isn&#39;t all of it, since this logic was continually being patched and touched by different people throughout history, the core of the code was a crazy long method with the code looking like the horizon mentioned by Uncle Bob.\n  Now imagine that you need to change something about this code, especially when you take into consideration, that the code naturally had many corner cases wrong, or fixed only in some variant of the code. This is a great example of how lazy long-term design leads to poor productivity.\n  Long story short, this was approached like a hobby side project of mine that took weeks to be finished, but in the end, all the duplications were merged, the code is well structured and fully tested. Managing the code requires a small fraction of the time compared to the previous state, because the reader is not required to read a huge pile of code just to get the big picture and to be able to change anything.\n  This reminds me a quote from Lou after a similar kind of refactoring: &#34; Once we are done with this, it will be actually a pleasure to add stuff to this code.&#34;. Isn&#39;t it beautiful? It is not only more efficient and less buggy, it is also more fun to work with, and working on something enjoyable tends to go faster regardless of other aspects.\n      No, we obviously didn&#39;t get to this point without automated tests, and we mentioned them several times already ( FFF-29,  FFF-288, and more). We try to continuously raise the bar of what code areas are covered by tests, and this lead us to cover yet another area, the GUI. This aligns with the ever repeating underestimation of the amount of engineering care the GUI needs. Having it not tested at all is part of this underestimation, how many times it happened, that we made a release, and it just crashed on something stupid simple in a GUI, just because we didn&#39;t have a test that would click the buttons. And in the end, it proved to not be hard at all to automate the GUI tests.\r\r We just have a mode in which the testing environment is created with GUI (even when tests are run without graphics). We declared some helper methods, that allow a very simple definition of where we want the cursor to move, or what we want to click, like this:\n    The clicking method is then calling the low level events of input, so all layers of event processing and GUI logic are tested. This is an example of end-to-end test, which is a controversial topic, because some &#34;schools&#34; of test methodology say, that everything should be tested separately, so in this case, we should theoretically test only, that clicking the button first, which creates an InputAction to be processed, and then, have an independent test of the InputAction working properly. I like this approach in some cases, but most of the time I really like that I can penetrate all layers of the logic with only a few lines of code. (more in the Test dependencies part)\n      I have to admit, that I didn&#39;t know what TDD really was until recently. I thought that it is some nonsense, because it sounds really impractical and unrealistic to first write all the tests for some feature (without the ability to try it or even compile it), and then try to implement something that satisfies it.\n  But that is not TDD, and it had to be shown to me in a &#34;for dummies&#34; way for me to realize how wrong I was.\n  TDD actually is the constant fast swithing between extending the tests and making them pass continously. So as you write tests, you write code to satisfy them basically at the same time. This allows you to instantly test what you write, and mainly use tests as specifiation of what the code should acctually do, which guides the thought process to make you think about where you are headed to, and to write code that is more structured and testable from the very beginning.\n  So after the &#34;AHA&#34; moment of realizing what TDD really is, I started to be instant fan. I&#39;m now putting a lot of effort to try to follow the TDD methodology as much as possible, and to force it on others in the team as well. It feels slower, to write tests even for simple pieces of logic that just bound to be right, but the test proved me wrong several times already, and prevented annoying low-level debugging sessions in the near future.\n          If tests should be truly independent, test C, should have some mocks of A and B, so the test of C is independent of the system A + B working correctly. The consensus seems to be, that this leads to more independent design etc.\n  This might be applicable in a lot of cases, but I believe that trying to have this approach everywhere is close to impossible, and it would lead to a lot of clutter and  I&#39;m not the only one having problem with this.\n  For example, lets say that we have a test of electric poles connecting properly on the map. But I can hardly test it when I don&#39;t know that searching for entities on the map works properly.\n  My conclusion is, that having dependencies like this is fine, as long as the dependencies are also tested, but the problem comes when you break something and a lot of tests start to fail suddenly. When you do small changes the yes/no indication of tests is enough, but it isn&#39;t always an option, especially when you refactor some internal structure, in which case you kind of expect to break a lot of stuff, and you need to have a way to fix them step by step once it can compile again.\n  If the tests don&#39;t have any special structure, the situation when 100 tests all fail at the same time is very unfortunate, all you are left with is to try to pick some test semi-randomly, and start debugging it. But it is really misleading when some complicated test case fails in the middle, and you spend a long time debugging it, only to realise that it is some very simple low level bug that is causing the failure.\n  The goal is pretty easy, I want to be given the most simple fail case of my change.\n  For this, I implemented a simple test dependency system. The tests are executed and listed in a way, that when you get to debug and check a test, you know that all of its dependencies are already working correctly. I tried to search if others use the dependencies as well, and how they do it, and I surprisingly didn&#39;t find anything.\n      I built and used this structure when refactoring away the duplication of ghost/real poles connection logic and it certainly sped up the process of making it work properly, and I&#39;m confident that this is the way to structure test for us in the foreseeable future. Not only it makes test results more useful, but it forces us to split test suites into smaller more-specialised units, which certainly help as well.\n      When Boskid joined the team as the QA guy, one of his main roles was making sure that any discovered bug is first covered by a test before it gets actually fixed, and generally improving our code test coverage. This made the releases much more confident, and we had less regression bugs, which directly transitions into long-term efficiency. I strongly believe that this clearly indicates and supports what Uncle bob is saying. Working with tests  feels slower but it is actually faster.\n  Test coverage is an indicator of which parts of the code are executed when the application runs (which usually means running the tests in this context). I never used a tool to measure test coverage before, but since it was one of the topics Uncle Bob talked about, I tried to use it for the first time. I found a tool that works only on Windows, but requires the least amount of setup, which is  OpenCppCoverage, which provides an HTML output like this:\n    It is immediately visible, that both of the conditional commands are not triggered in tests. It basically means that either the code just isn&#39;t tested, so it should be covered, or it&#39;s dead code, so it should be removed. I&#39;m quite confident (again), that using this can help us a lot to write clean high quality code.\n        If you are moved by this, if your emotion when you read this is, &#34; I wish my boss had these priorities&#34;. Consider applying for a  job at Wube!", "posttime": "2021-06-18 19:39:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56e0\u5b50,factorio,\u4ee3\u7801", "title": "\u6765\u81ea\u56e0\u5b50\u56e2\u961f\u7684TDD ", "title_en": "TDD from the Factorio Team", "transed": 1, "url": "https://factorio.com/blog/post/fff-366", "via": "", "real_tags": ["\u56e0\u5b50", "factorio", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "52899f1d30fb51c27fefd15056ef9d1b.jpg", "infoid": 1066678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u65b0\u4e00\u8f6e\u7684e e\u5c06\u4e09\u5c81\u7684\u65b0\u5fb7\u91cc\u603b\u90e8\u516c\u53f8\u8bc4\u4f30\u4e3a\u671f25\u4ebf\u7f8e\u5143\u7684\u62e8\u6b3e\uff0c\u8981\u6c42\u533f\u540d\u4f5c\u4e3a\u79c1\u4eba\u79c1\u4eba\u3002\u5706\u5f62\u6ca1\u6709\u5173\u95ed\uff0c\u6240\u4ee5\u6761\u6b3e\u53ef\u80fd\u4f1a\u6539\u53d8\uff0c\u6e90\u8b66\u544a\u3002\n Bharatpe\u5728\u65b0\u4e00\u8f6e\u4e4b\u524d\u7b79\u96c6\u4e86\u5927\u7ea62.33\u4ebf\u7f8e\u5143\u7684\u80a1\u6743\uff0c3500\u4e07\u7f8e\u5143\u7684\u503a\u52a1\uff0c\u4eca\u5e742\u6708\u7684D\u7cfb\u5217\u7cfb\u5217\u7387\u7ea6\u4e3a9\u4ebf\u7f8e\u5143\uff0c\u53bb\u5e744.25\u4ebf\u7f8e\u5143\u3002\n  \u5370\u5ea6\u65b0\u95fb\u51fa\u53e3\u8be5\u6b3e\u9879\u9996\u6b21\u4e3e\u62a5\u4e86Tiger Global\u548cBharatpe\u4e4b\u95f4\u7684\u8c08\u5224\uff0c\u5e76\u8868\u793a\u8fd9\u4e00\u8f6e\u5c06\u91cd\u89c6\u521d\u521b\u516c\u53f8\u8d85\u8fc720\u4ebf\u7f8e\u5143\u3002 Bharatpe\u62d2\u7edd\u53d1\u8868\u8bc4\u8bba\u3002\n Bharatpe\u7ecf\u8425\u7740\u540d\u7684\u670d\u52a1\uff0c\u4ee5\u5e2e\u52a9\u8131\u673a\u5546\u5bb6\u63a5\u53d7\u6570\u5b57\u4ed8\u6b3e\u548c\u5b89\u5168\u7684\u8425\u8fd0\u8d44\u91d1\u3002\u5373\u4f7f\u5370\u5ea6\u5df2\u7ecf\u6210\u4e3a\u7b2c\u4e8c\u5927\u4e92\u8054\u7f51\u5e02\u573a\uff0c\u62e5\u6709\u8d85\u8fc76\u4ebf\u7528\u6237\u7684\u7528\u6237\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u56fd\u5bb6\u90fd\u4ecd\u7136\u8131\u673a\u3002\n \u5728\u4e92\u8054\u7f51\u8303\u56f4\u4e4b\u5916\u7684\u4eba\u4e2d\u662f\u8fd0\u884c\u5c0f\u578b\u4f01\u4e1a\u7684\u5546\u4eba\uff0c\u5982\u8def\u8fb9\u8336\u644a\u548c\u90bb\u91cc\u5546\u5e97\u3002\u4e3a\u4e86\u4f7f\u8fd9\u4e9b\u5546\u5bb6\u8212\u9002\u5730\u63a5\u53d7\u6570\u5b57\u4ed8\u6b3e\uff0cBharatpe\u4f9d\u8d56\u4e8e\u652f\u6301\u653f\u5e9c\u652f\u6301\u7684UPI\u652f\u4ed8\u57fa\u7840\u8bbe\u65bd\u7684QR\u7801\u548c\u9500\u552e\u70b9\u3002\n \u8be5\u521d\u521b\u516c\u53f8\uff0c\u670d\u52a1\u4e8e600\u591a\u4e07\u5546\u4eba\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5728\u53bb\u5e7411\u6708\uff0c\u5b83\u5df2\u7ecf\u90e8\u7f72\u4e86\u8d85\u8fc750,000\u53f0POS\u673a\u5668\uff0c\u5e76\u4e14\u6bcf\u6708\u4ea4\u6613\u4ef7\u503c\u8d85\u8fc712300\u4e07\u7f8e\u5143\u3002\u5b83\u4e0d\u6536\u53d6\u901a\u7528QR\u7801\u8bbf\u95ee\u7684\u5546\u5bb6\uff0c\u4f46\u5e0c\u671b\u901a\u8fc7\u8d37\u6b3e\u6765\u8d5a\u94b1\u3002\u683c\u7f57\u5f17\u8868\u793a\uff0c\u542f\u52a8\u8d37\u6b3e\u4e1a\u52a1\u57282020\u5e74\u589e\u52a0\u4e8610\u500d\u3002\n \u661f\u671f\u4e94\uff0c\u5370\u5ea6\u7684\u592e\u884cRBI\u6388\u4e88\u5185\u6db5\u724c\u7167\u7684\u5185\u5bb9\u724c\u7167\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u5c0f\u578b\u91d1\u878d\u94f6\u884c\u3002\u6839\u636e\u5f53\u5730\u5a92\u4f53\uff0cCentrum Financial Services\u4e0eBharatpe\u5408\u4f5c\u3002 \n\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4eba\uff01 @bharatpeindia\u548ccentrum\u5728\u6536\u5230\u5b83\u7684\u5c0f\u91d1\u878d\u94f6\u884c\u8bb8\u53ef\u8bc1\u7684\u6700\u540e\u4e00\u7ad9;\u539f\u5219\u4e0a\u7684\u539f\u5219\uff06\uff0339; \u6267\u7167\u3002  \u7b2c\u4e00\u6b3e\u91d1\u878d\u6c14\u5728\u4e34\u65f6\uff0c\u5728\u5370\u5ea6\u83b7\u5f97\u94f6\u884c\u8bb8\u53ef\u8bc1\uff01 \u6362Fintech\u7684\u9762\u5b54\uff01 https://t.co/d84gem4nzh.  \u8be5\u542f\u52a8\u8fd8\u5728\u52aa\u529b\u63a8\u51fa\u4e24\u4e2a\u65b0\u7684B2C\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u4e00\u4e2a\u65b0\u7684B2C\u5e94\u7528\u7a0b\u5e8f\u5c06\u5728QR UPI\u4e0a\u83b7\u5f97\u4fe1\u8a89\uff0c\u8fd9\u662f\u4e00\u4e2a\u719f\u6089\u6b64\u4e8b\u7684\u53e6\u4e00\u4e2a\u6765\u6e90\u544a\u8bc9TechCrunch\u3002 \u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u65b0\u4ea7\u54c1\u5c06\u5728\u672c\u6708\u7acb\u5373\u53d1\u5e03\u3002 ", "note_en": "The new round, a Series E, is valuing the three-year-old New Delhi-headquartered firm at a pre-money valuation of $2.5 billion, sources said, requesting anonymity as the matter is private. The round hasn\u2019t closed, so terms may change, sources cautioned.\n BharatPe, which prior to the new round had raised about $233 million in equity and $35 million in debt, was valued at about  $900 million in its Series D round in February this year, and $425 million last year.\n  Indian news outlet the CapTable  first reported about the talks between Tiger Global and BharatPe and said the round would value the startup at over $2 billion. BharatPe declined to comment.\n BharatPe operates an eponymous service to help offline merchants accept digital payments and secure working capital. Even as India has already emerged as the second-largest internet market, with more than 600 million users, much of the country remains offline.\n Among those outside of the reach of the internet are merchants running small businesses, such as roadside tea stalls and neighborhood stores. To make these merchants comfortable with accepting digital payments, BharatPe relies on QR codes and point of sale machines that support government-backed UPI payments infrastructure.\n The startup, which serves more than 6 million merchants, said it had deployed over 50,000 PoS machines by November of last year, and enables monthly transactions worth more than $123 million. It does not charge merchants for universal QR code access, but is looking to make money by lending. Grover said the startup\u2019s lending business grew by 10x in 2020.\n On Friday, India\u2019s central bank RBI\u00a0 granted an in-principle licence to Centrum Financial Services to set up a small finance bank. Centrum Financial Services has  collaborated with BharatPe for the license, according to local media.\n This is a big one!  @bharatpeindia and Centrum at the final leg of a its Small Finance Bank license after receiving its &#39;in-principle&#39; license.\n First fintech in the offing to get a banking license in India! Changing face of fintech! https://t.co/d84GEM4NzH\n The startup is additionally also working to launch two new B2C apps, one of which will enable credit on QR UPI, another source familiar with the matter told TechCrunch. The new products will launch as soon as this month, the source said.", "posttime": "2021-06-18 19:02:52", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "global,bharatpe", "title": "Tiger Global\u5728\u8c08\u522425\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u4e0a\u8c08\u5230Bharatpe ", "title_en": "\n\t\t\t\tTiger Global in talks to back BharatPe at $2.5 billion valuation\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/18/tiger-global-in-talks-to-back-bharatpe-at-2-5-billion-valuation/", "via": "", "real_tags": ["global", "bharatpe"]}]
[{"category": "", "categoryclass": "", "imagename": "e66db93d78f15cd9becda119aea9d838.jpg", "infoid": 1070090, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u5468\u4e8c\u8868\u793a\uff0c\u5728\u8ba1\u5212\u66f4\u65b0\u5177\u6709\u66f4\u591a\u673a\u8f7d\u5b58\u50a8\u7a7a\u95f4\u7684\u65b0\u5165\u95e8\u7ea7\u6a21\u578b\u524d\u4e00\u4e2a\u6708\uff0c\u5b83\u6682\u65f6\u505c\u6b62\u4e86Oculus Quest 2\u7684\u9500\u552e\u3002\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u5de8\u5934\u8bc1\u5b9e\uff0c\u6b64\u4e3e\u662f\u5728\u51e0\u8d77\u6709\u5173\u5934\u6234\u5f0f\u8033\u673a\u7684\u6ce1\u6cab\u9762\u677f\u5f15\u8d77\u76ae\u80a4\u53cd\u5e94\u7684\u62a5\u9053\u4e4b\u540e\u505a\u51fa\u7684\u3002\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u53d1\u5e03\u7684\u6709\u5173\u8be5\u95ee\u9898\u7684 Facebook \u5e16\u5b50\u4e2d\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u6709\u4e00\u5c0f\u90e8\u5206 Quest 2 \u7528\u6237\u62a5\u544a\u4e86\u8be5\u95ee\u9898\u3002\u4f46\u5728\u7f51\u4e0a\u62a5\u9053\u7684\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u4e25\u91cd\u5230\u5bfc\u81f4\u4eba\u4eec\u7684\u8138\u6d6e\u80bf\u548c\u95ed\u4e0a\u773c\u775b\u3002 Facebook \u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u6539\u53d8\u4e86\u5176\u6ce1\u6cab\u9762\u90e8\u63a5\u53e3\u7684\u5236\u9020\u5de5\u827a\uff0c\u4f46\u8fd9\u79cd\u62c5\u5fe7\u4ecd\u7136\u4fc3\u4f7f Facebook \u4e0e\u7f8e\u56fd\u6d88\u8d39\u54c1\u5b89\u5168\u59d4\u5458\u4f1a\u534f\u8c03\u505c\u6b62\u9500\u552e Quest 2\u3002 Facebook \u5728\u672a\u6765\u7248\u672c\u7684 Quest 2 \u4e2d\u6dfb\u52a0\u4e86\u7845\u80f6\u9762\u7f69\u76d6\uff0c\u5b83\u5c06\u9002\u5408\u6ce1\u6cab\u3002\u73b0\u6709\u5ba2\u6237\u4e5f\u53ef\u4ee5\u8054\u7cfb Facebook \u83b7\u53d6\u66f4\u6362\u5c01\u9762\u3002\u8fd9\u53d1\u751f\u5728 Facebook \u66f4\u65b0 Quest 2 \u589e\u52a0\u5b58\u50a8\u7a7a\u95f4\u7684\u4e00\u4e2a\u6708\u524d\uff1a8 \u6708 24 \u65e5\u53d1\u552e\u7684 299 \u7f8e\u5143 Quest \u7684\u65b0\u7248\u672c\u5c06\u62e5\u6709 128GB \u7684\u200b\u200b\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f 64GB\u3002\u4ece\u90a3\u65f6\u8d77\uff0cQuest 2 \u578b\u53f7\u5c06\u5728\u5305\u88c5\u76d2\u4e2d\u5305\u542b\u7845\u80f6\u9762\u7f69\u3002\u6b64\u4e3e\u7684\u65f6\u673a\u5f88\u5c34\u5c2c\uff0c\u4f46\u5bf9\u4e8e Facebook \u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u4e5f\u662f\u4e00\u4e2a\u673a\u4f1a\uff0c\u53ef\u4ee5\u7528\u5e26\u6709\u7845\u80f6\u5957\u7684\u578b\u53f7\u6765\u53d6\u4ee3 Quest 2 \u7684\u5e93\u5b58\u3002\u7f8e\u56fd\u6d88\u8d39\u54c1\u5b89\u5168\u59d4\u5458\u4f1a\u8868\u793a\uff1a\u201c\u9047\u5230\u76ae\u80a4\u523a\u6fc0\u6216\u53cd\u5e94\u7684\u6d88\u8d39\u8005\u5e94\u7acb\u5373\u505c\u6b62\u4f7f\u7528\u53ec\u56de\u7684\u6ce1\u6cab\u9762\u90e8\u754c\u9762\uff0c\u6240\u6709\u6d88\u8d39\u8005\u90fd\u5e94\u8054\u7cfb Facebook Technologies \u4ee5\u83b7\u53d6\u514d\u8d39\u7845\u80f6\u5957\u3002\u201d\u6839\u636e Facebook \u7684\u8bf4\u6cd5\uff0c\u201c\u5982\u679c\u60a8\u6ca1\u6709\u7ecf\u5386\u8fc7\u523a\u6fc0\uff0c\u5219\u65e0\u9700\u7acb\u5373\u505c\u6b62\u4f7f\u7528\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u7533\u8bf7\u514d\u8d39\u7845\u80f6\u5957\u3002\u5982\u679c\u60a8\u7ecf\u5386\u8fc7\u523a\u6fc0\uff0c\u5219\u5e94\u7acb\u5373\u505c\u6b62\u4f7f\u7528\u6ce1\u6cab\u9762\u90e8\u754c\u9762\u3002\u201d\u60a8\u5e94\u8be5\u4e3a Facebook \u7684 Quest \u9762\u677f\u8ba2\u8d2d\u5176\u4e2d\u4e00\u4e2a\u7845\u80f6\u6ce1\u6cab\u76d6\uff0cFacebook \u73b0\u5728\u63d0\u4f9b\u8be5\u9762\u677f\u3002\u5982\u679c\u60a8\u5bf9\u5b89\u5168\u6709\u4efb\u4f55\u987e\u8651\uff0c\u8bf7\u505c\u6b62\u4f7f\u7528 Quest 2\u3002\u4e0d\u5efa\u8bae 13 \u5c81\u4ee5\u4e0b\u7684\u5b69\u5b50\u5f00\u59cb\u4f7f\u7528 Quest 2\uff0c\u4f46\u5982\u679c\u4ed6\u4eec\u4f7f\u7528 VR\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e9b\u95ee\u9898\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u4f7f\u7528 Quest 2 \u7684\u670b\u53cb\u6216\u5bb6\u4eba\u90fd\u6ca1\u6709\u4efb\u4f55\u76ae\u80a4\u53cd\u5e94\u95ee\u9898\u3002\u4f46\u6211\u786e\u5b9e\u8ba4\u8bc6\u4e00\u4e2a\u4eba\uff0c\u4ed6\u7ed9\u6211\u53d1\u4e86\u4e00\u4efd\u670b\u53cb\u7684\u62a5\u544a\uff0c\u4ed6\u6709\u53cd\u5e94\u3002\u7845\u80f6\u5957\u662f\u514d\u8d39\u7684\uff0c\u5982\u679c\u4f60\u4ee5\u524d\u6ca1\u6709\u4f7f\u7528\u8fc7 VR\uff0c\u4f60\u53ef\u80fd\u5e94\u8be5\u7ee7\u7eed\u4f7f\u7528\u3002\u5728\u53bb\u5e74 12 \u6708\u5f00\u59cb\u7684\u6d89\u53ca\u76ae\u80a4\u79d1\u533b\u751f\u7684\u5185\u90e8\u8c03\u67e5\u4e4b\u540e\uff0c\u76ae\u80a4\u95ee\u9898\u88ab\u8ba4\u4e3a\u662f\u63a5\u89e6\u6027\u76ae\u708e\uff0c\u800c\u4e0d\u662f\u8fc7\u654f\u53cd\u5e94\u3002 Facebook \u63d0\u4f9b\u4e86\u76ae\u80a4\u75c5\u5b66\u53c2\u8003\u8457\u4f5c\u300a\u8d39\u820d\u5c14\u63a5\u89e6\u6027\u76ae\u708e\u300b\u7684\u5408\u8457\u8005 Robert Rietschel \u535a\u58eb\u7684\u58f0\u660e\uff1a\u201c\u6211\u5df2\u7ecf\u4ed4\u7ec6\u67e5\u770b\u4e86\u5ba2\u6237\u62a5\u544a\u548c\u6570\u636e\u3002\u6839\u636e\u6211\u7684\u8bc4\u4f30\uff0c\u8fd9\u4e0d\u662f\u8fc7\u654f\u53cd\u5e94\uff08\u610f\u5473\u7740\u5b83\u4e0d\u662f\u5168\u8eab\u6216\u5371\u53ca\u751f\u547d\uff09\u548c\u4e00\u5b9a\u6bd4\u4f8b\u7684\u4eba\u53e3\u5bf9\u5e38\u89c1\u7684\u65e5\u5e38\u7528\u54c1\uff08\u5305\u62ec\u7a7f\u5728\u8eab\u4e0a\u7684\u90a3\u4e9b\uff09\u51fa\u73b0\u76ae\u80a4\u80bf\u80c0\u53cd\u5e94\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e0e\u67d0\u4e9b\u4eba\u7684\u65e5\u5e38\u5bb6\u5c45\u7528\u54c1\u53ef\u80fd\u5f15\u8d77\u7684\u76ae\u80a4\u53cd\u5e94\u7c7b\u578b\u76f8\u540c\u4f8b\u5982\u8089\u6842\u8c03\u5473\u54c1\uff0c\u751a\u81f3\u50cf\u897f\u7ea2\u67ff\u8fd9\u6837\u7684\u98df\u7269\u3002\u5728\u6211\u5ba1\u67e5\u8fc7\u7684\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53cd\u5e94\u4f1a\u5728\u6ca1\u6709\u533b\u7597\u62a4\u7406\u7684\u60c5\u51b5\u4e0b\u81ea\u884c\u89e3\u51b3\uff0c\u5e76\u4e14\u6ca1\u6709\u6301\u4e45\u5f71\u54cd\u3002\u6211\u76f8\u4fe1\u76ee\u524d\u7684\u62a5\u544a\u6c34\u5e73\u548c\u53cd\u5e94\u7684\u4e25\u91cd\u7a0b\u5ea6\u7b26\u5408\uff0c\u5982\u679c\u4e0d\u662f\u4f4e\u4e8e\uff0c\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u201d\u6ca1\u6709\u5176\u4ed6\u4efb\u4f55\u5ba3\u5e03\uff0c\u770b\u8d77\u6765\u7845\u80f6\u5957\uff08\u5c06\u8986\u76d6\u5851\u6599\u63d2\u5165\u7269\u4e0a\u7684\u6ce1\u6cab\uff09\u662f\u76ee\u524d\u552f\u4e00\u7684\u8ba1\u5212\u3002\u6709\u4f7f\u7528\u5176\u4ed6\u6750\u6599\u7684\u7b2c\u4e09\u65b9\u9762\u677f\uff0c\u4f46 Facebook \u5c1a\u672a\u5ba3\u5e03\u4efb\u4f55\u5236\u9020\u4efb\u4f55\u65b0\u914d\u4ef6\u7684\u8ba1\u5212\u3002", "note_en": "Facebook said on Tuesday that it&#39;s temporarily halting sales of the  Oculus Quest 2, a month before a planned update to a new entry-level model with more onboard storage. The move comes after several reported cases of skin reactions to the headset&#39;s included foam faceplate, the social media giant confirmed.\n In a  Facebook post on the issue from earlier this year, the company says a small percentage of Quest 2 owners have reported the issue. But in some cases reported online, the issue has been bad enough to cause people&#39;s faces to puff up and their eyes to close. Facebook changed the manufacturing process of its foam face interfaces earlier this year, but the concerns still prompted Facebook to stop\u00a0selling the Quest 2 in coordination with the US Consumer Product Safety Commission.\n   Facebook&#39;s adding silicone face-mask covers in future versions of the Quest 2, which will fit over the foam. Existing customers can contact Facebook  for the replacement cover as well.\n This is happening a month before Facebook is updating the Quest 2 with more storage: a new version of the $299 Quest that goes on sale Aug. 24 will have 128GB of storage instead of 64GB. Quest 2 models will include the silicone face-cover in the box from that point onward. It&#39;s awkward timing for the move, but also looks like a chance for Facebook to replace Quest 2 stock with models that have the silicone covers.\n &#34;Consumers who experience a skin irritation or reaction should immediately stop using the recalled foam facial interface, and all consumers should contact Facebook Technologies to receive a free silicone cover,&#34; said the US Consumer Product Safety Commission.\n According to Facebook, &#34;If you haven&#39;t experienced irritation, you don&#39;t need to immediately stop use but you can still request a free silicone cover. If you have experienced irritation, you should immediately stop using the foam facial interface.&#34;\n  You should order one of the silicone foam covers to Facebook&#39;s Quest face-plate, which  Facebook is offering now. And stop using the Quest 2 if you have any concerns about safety. The Quest 2 isn&#39;t recommended for kids under 13 to begin with, but keep the concerns in mind if they&#39;re using VR.\n That being said, none of my friends or family who use the Quest 2 have had any skin reaction problems. But I do know one person who sent me a report of a friend who had a reaction. The silicone cover is free, and you should probably use one going forward if you haven&#39;t used VR before.\n  After an internal investigation involving dermatologists that  began last December, the skin issue is being considered contact dermatitis rather than an allergic reaction. Facebook offered a statement from Dr. Robert Rietschel, a co-author of dermatological reference work &#34;Fisher&#39;s Contact Dermatitis&#34;: &#34;I&#39;ve reviewed the customer reports and data carefully. In my assessment, this is not an allergic reaction (meaning it&#39;s not systemic or life threatening) and a certain percentage of the population react with skin swelling to common everyday objects, including those worn on the body. In fact, this is the same type of skin reaction that can be caused in some people by everyday household items such as cinnamon flavorings and even foods like tomatoes. In the vast majority of the cases I&#39;ve reviewed, the reaction self-resolves without medical attention, and with no lasting effects. I believe the current level of reports and severity of reaction is in line with, if not below, what should be expected.&#34;\n  Nothing else has been announced, and it looks like that silicone cover (which will cover the foam on the plastic insert) is the only plan for now. There are third-party faceplates that use other materials, but Facebook hasn&#39;t announced any plans to make any new accessories yet.", "posttime": "2021-07-28 00:01:55", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "facebook,oculus,pauses", "title": "Facebook \u6682\u505c\u9500\u552e Oculus Quest 2 \u7531\u4e8e\u9762\u4e34\u523a\u6fc0\u95ee\u9898", "title_en": "Facebook Pauses Sales of the Oculus Quest 2 Due To Face Irritation Concerns", "transed": 1, "url": "https://www.cnet.com/tech/computing/facebook-pauses-sales-of-the-oculus-quest-2-due-to-face-irritation-concerns/", "via": "", "real_tags": ["facebook", "oculus", "pauses"]}, {"category": "", "categoryclass": "", "imagename": "75f75bd3e408f49b36336ca08dc11c08.jpg", "infoid": 1070089, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u8fc4\u4eca\u5df2\u7b79\u96c6\u4e86 2.76 \u4ebf\u7f8e\u5143\uff0c\u4e3a\u7ec4\u7ec7\u63d0\u4f9b\u4fdd\u9669\u5e76\u5e2e\u52a9\u4ed6\u4eec\u5e94\u5bf9\u7f51\u7edc\u5a01\u80c1", "note_en": "The startup, which raised $276 million to date, provides insurance for organizations and helps them counter cyber threats", "posttime": "2021-07-28 00:01:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u4fdd\u9669,global", "title": "\u5728\u5168\u7403\u52d2\u7d22\u8f6f\u4ef6\u70ed\u6f6e\u4e2d\uff0c\u7f51\u7edc\u4fdd\u9669\u521d\u521b\u516c\u53f8 At-Bay \u4ee5 1.35B \u7f8e\u5143\u7684\u4f30\u503c\u7b79\u96c6\u4e86\u7531 Icon Ventures \u548c Lightspeed Venture Partners \u9886\u6295\u7684 1.85 \u4ebf\u7f8e\u5143 D \u8f6e\u878d\u8d44", "title_en": "Cyber insurance startup At-Bay raises $185M Series D led by Icon Ventures and Lightspeed Venture Partners at a $1.35B valuation, amid the global ransomware boom", "transed": 1, "url": "https://www.calcalistech.com/ctech/articles/0,7340,L-3913429,00.html", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u4fdd\u9669", "global"]}, {"category": "", "categoryclass": "", "imagename": "25e09760e1c759e422bcc32fd8474ea1.jpg", "infoid": 1070088, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u65e9\u671f\u91c7\u7528\u8005\u4e2d\uff0c\u53bb\u5e74\u8fd9\u4e2a\u65f6\u5019\u6700\u4ee4\u4eba\u5782\u6d8e\u200b\u200b\u7684\u9879\u76ee\u4e0d\u662f\u6d17\u624b\u6db2\u6216\u9ad8\u4e50\u6c0f\u6e7f\u5dfe\uff0c\u800c\u662f Clubhouse \u4e0a\u7684\u7528\u6237\u540d\uff0c\u8fd9\u662f\u4e00\u4e2a\u7eaf\u97f3\u9891\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\uff0c\u5728\u6625\u5b63\u63a8\u51fa\u65f6\u5728\u7845\u8c37\u5f15\u8d77\u4e86\u8f70\u52a8\u3002\u8bbf\u95ee\u9700\u8981\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u4e0a\u5df2\u7ecf\u6709\u4eba\u7684\u9080\u8bf7\uff0c\u800c\u8fd9\u4e9b\u5728\u9694\u79bb\u7684\u5b64\u72ec\u6708\u4efd\u53d8\u5f97\u5982\u6b64\u53d7\u6b22\u8fce\uff0c\u4ee5\u81f3\u4e8e\u6709\u4e9b\u4eba\u5728 eBay \u4e0a\u4ee5\u6570\u767e\u7f8e\u5143\u7684\u4ef7\u683c\u51fa\u552e\u3002\u4f1a\u6240\u88ab\u4f17\u591a\u5a92\u4f53\uff08\u5305\u62ec\u8fd9\u5bb6\uff09\u8a89\u4e3a\u793e\u4ea4\u5a92\u4f53\u7684\u672a\u6765\uff0c\u56e0\u4e3a\u5176\u7b49\u5019\u540d\u5355\u5df2\u589e\u81f3 1000 \u4e07\u3002\u5982\u4eca\uff0c\u8fd9\u4e9b\u9080\u8bf7\u4e00\u6587\u4e0d\u503c\uff1aClubhouse \u5728\u5468\u4e09\u6b63\u5f0f\u53d1\u5e03\u4e86\u671f\u5f85\u5df2\u4e45\u7684\u7248\u672c\uff0c\u8fd9\u610f\u5473\u7740\u73b0\u5728\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d\u8be5\u5e94\u7528\u7a0b\u5e8f\u6765\u8bbe\u7f6e\u4e00\u4e2a\u5e10\u6237\u3002\u7136\u800c\uff0c\u5927\u4f17\u4f3c\u4e4e\u5e76\u6ca1\u6709\u6d8c\u5165\u3002\u6839\u636e\u5206\u6790\u7ec4\u7ec7 SensorTower \u7684\u6570\u636e\uff0c\u8be5\u5e94\u7528\u5728 7 \u6708 21 \u65e5\u81f3 25 \u65e5\u671f\u95f4\u5728\u5168\u7403\u6709 484,000 \u6b21\u65b0\u5b89\u88c5\u3002\u8fd9\u6bd4\u4e4b\u524d\u7684\u4e94\u5929\u65f6\u95f4\u589e\u52a0\u4e86 17%\uff0c\u4e3b\u8981\u6765\u81ea\u7f8e\u56fd\u4ee5\u5916\u7684\u5730\u533a\u3002\u5728 Apple \u7684 App Store \u4e0a\uff0cClubhouse \u5728\u5411\u516c\u4f17\u5f00\u653e\u7684\u7b2c\u4e00\u5929\u5c31\u5728\u514d\u8d39\u793e\u4ea4\u7f51\u7edc\u7c7b\u522b\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6392\u540d\u7b2c 10 \u4f4d\u2014\u2014\u751a\u81f3 Google Duo \u7684\u4e0b\u8f7d\u91cf\u4e5f\u66f4\u9ad8\u3002\u5728 Android \u4e0a\uff0cClubhouse \u662f\u8f83\u65b0\u7684\uff0c\u5b83\u51e0\u4e4e\u6ca1\u6709\u8fdb\u5165\u524d 20 \u540d\u3002\u5bf9\u4e8e\u6700\u8fd1\u5728\u5168\u7403\u5e94\u7528\u5546\u5e97\u4e2d\u51fb\u8d25 Instagram\u3001TikTok \u548c WhatsApp \u7684\u5e94\u7528\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e2d\u7b49\u7684\u9996\u6b21\u4eae\u76f8\u3002\u8fc7\u53bb\uff0cClubhouse \u66fe\u8868\u793a\uff0c\u5176\u9080\u8bf7\u7cfb\u7edf\u662f\u201c\u4ee5\u4e00\u79cd\u6709\u8282\u5236\u7684\u65b9\u5f0f\u201d\u589e\u957f\u3001\u5206\u6279\u52a0\u5165\u65b0\u7528\u6237\u5e76\u6839\u636e\u9700\u8981\u6784\u5efa DM \u7b49\u529f\u80fd\u7684\u5173\u952e\u3002\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u6392\u4ed6\u6027\uff0cClubhouse \u4f3c\u4e4e\u4e5f\u5931\u53bb\u4e86\u4e00\u4e9b\u7092\u4f5c\u3002 \u201c\u5356\u6389\u6211\u7684\u4f1a\u6240\u9080\u8bf7\u51fd\uff0c\u201d\u79d1\u6280\u535a\u4e3b Jane Manchun Wong \u5468\u4e09\u5f00\u73a9\u7b11\u8bf4\uff0c\u5f53\u65f6\u8be5\u5e94\u7528\u7a0b\u5e8f\u5ba3\u5e03\u53ef\u63d0\u4f9b\u4e00\u822c\u4e0b\u8f7d\u3002 \u201c\u4f60\u53ef\u80fd\u9700\u8981\u4ed8\u94b1\u8ba9\u4eba\u4eec\u4ece\u4f60\u90a3\u91cc\u62ff\u8d70\u5b83\u4eec\uff0c\u201dMorning Brew \u7684\u6267\u884c\u4e3b\u5e2d\u4e9a\u5386\u514b\u65af\u5229\u4f2f\u66fc\u56de\u7b54\u8bf4\uff0c\u8fd9\u662f\u4e00\u4efd\u6df1\u53d7\u5343\u79a7\u4e00\u4ee3\u5546\u4e1a\u4eba\u58eb\u9752\u7750\u7684\u7535\u5b50\u90ae\u4ef6\u901a\u8baf\u3002 Morning Brew \u6700\u8fd1\u5ba3\u5e03 Clubhouse \u5df2\u7ecf\u201c\u7ed3\u675f\u201d\uff0c\u5e76\u6307\u51fa\u8be5\u5e94\u7528\u7a0b\u5e8f\u611f\u89c9\u4e0d\u50cf\u201cSoho House\u2014\u2014\u6392\u4ed6\u6027\u7684\uff0c\u56e0\u6b64\u795e\u79d8\u5730\u5f88\u9177\u201d\uff0c\u800c\u66f4\u50cf\u662f\u201c\u4e00\u4e2a\u5f00\u653e\u7684\u623f\u5b50\u201d\u3002\u4f1a\u6240\u5728\u4e00\u4e9b\u5e02\u573a\u4ecd\u5728\u589e\u957f\uff0c\u5c24\u5176\u662f\u5728\u7f8e\u56fd\u4ee5\u5916\u7684\u5e02\u573a\u3002 6 \u6708\u4efd\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u65b0\u4e0b\u8f7d\u91cf\u4e3a 770 \u4e07\u6b21\uff0c\u5176\u4e2d 580 \u4e07\u6b21\u6765\u81ea\u5370\u5ea6\u3002\u56fd\u9645\u589e\u957f\u662f Clubhouse \u6700\u65b0\u7b79\u6b3e\u7684\u5173\u952e\u90e8\u5206\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u6295\u8d44\u8005\u5bf9\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u4f30\u503c\u4e3a 40 \u4ebf\u7f8e\u5143\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u968f\u7740\u7f8e\u56fd\u7528\u6237\u589e\u957f\u653e\u7f13\uff0c\u4e00\u4e9b\u4eba\u8d28\u7591\u8be5\u5e94\u7528\u7a0b\u5e8f\u80fd\u5426\u8fbe\u5230\u5176\u4f30\u503c\u3002 \u201cNFT \u6216 Clubhouse \u4f30\u503c\uff0c\u54ea\u4e2a\u6ce1\u6cab\u66f4\u5927\uff1f\u201d\u79d1\u6280\u5206\u6790\u5e08\u8fc8\u514b\u5c14\u52a0\u6ed5\u4f2f\u683c\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u53d1\u4e86\u63a8\u6587\u3002\u4e0a\u5468\uff0c\u6280\u672f\u516c\u5173\u4eba\u5458 Ed Zitron \u79f0 Clubhouse \u7684\u5168\u9762\u53d1\u5e03\u662f\u201c\u6ca1\u4eba\u60f3\u8c08\u8bba\u7684\u5927\u81ed\u86cb\u201d\u3002 Clubhouse \u5c06\u5176\u56fd\u9645\u589e\u957f\u4f5c\u4e3a\u4eba\u4eec\u4ecd\u7136\u559c\u6b22\u4f7f\u7528\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u8bc1\u636e\u3002\u4e00\u4f4d\u53d1\u8a00\u4eba\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u5199\u9053\uff1a\u201c\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u6211\u4eec\u770b\u5230\u6bcf\u5929\u521b\u5efa\u7684\u623f\u95f4\u6570\u91cf\u4ece 5 \u6708\u7684 30 \u4e07\u4e2a\u589e\u52a0\u5230 6 \u6708\u7684 40 \u4e07\u4e2a\uff0c\u518d\u5230 7 \u6708\u7684 50 \u4e07\u591a\u4e2a\uff0c\u8fd9\u8868\u660e\u53c2\u4e0e\u7684\u7528\u6237\u6570\u91cf\u5728\u4e0d\u65ad\u589e\u52a0\u3002\u201d\u4f46\u4e0e\u521a\u63a8\u51fa\u65f6\u76f8\u6bd4\uff0c\u5b83\u73b0\u5728\u4e5f\u9762\u4e34\u7740\u66f4\u591a\u7684\u7ade\u4e89\u3002 Facebook \u548c Twitter \u90fd\u5728\u53bb\u5e74\u521b\u5efa\u4e86\u5b9e\u65f6\u97f3\u9891\u529f\u80fd\uff0c\u4e3a\u97f3\u9891\u521b\u4f5c\u8005\u63d0\u4f9b\u4e86\u901a\u8fc7\u5176\u5185\u5bb9\u83b7\u5229\u7684\u65b9\u6cd5\u3002 Discord \u662f\u6700\u521d\u53d7\u6e38\u620f\u73a9\u5bb6\u6b22\u8fce\u7684\u97f3\u9891\u804a\u5929\u5e94\u7528\u7a0b\u5e8f\uff0c\u540e\u6765\u5c06\u81ea\u5df1\u91cd\u65b0\u547d\u540d\u4e3a\u5404\u79cd\u521b\u4f5c\u8005\u201c\u4ea4\u8c08\u548c\u95f2\u901b\u201d\u7684\u5730\u65b9\u3002\u5927\u6d41\u884c\u7684\u793e\u4f1a\u9694\u79bb\u662f\u8bb8\u591a\u6570\u5b57\u5e73\u53f0\u7684\u987a\u98ce\uff1b\u73b0\u5728\uff0c\u4ed6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u76f8\u4e92\u7ade\u4e89\u521b\u4f5c\u8005\u548c\u5185\u5bb9\uff0c\u4ee5\u5438\u5f15\u7528\u6237\u56de\u6765\u3002\u5728 Clubhouse\uff0c\u5982\u4eca\u7684\u8bb8\u591a\u623f\u95f4\u542c\u8d77\u6765\u90fd\u4e0e\u4e00\u5e74\u524d\u7684\u623f\u95f4\u76f8\u4f3c\uff1a\u201c\u5411 VC \u548c\u9876\u7ea7\u4f01\u4e1a\u5bb6\u63a8\u4ecb\u60a8\u7684\u521d\u521b\u516c\u53f8\ud83d\udcc8\u201d\u6216\u201cMix &amp; Mingle Shoot Your Shot 30+ Singles\u201d\u3002\u4f46\u4e5f\u6709\u8ff9\u8c61\u8868\u660e\u4f1a\u6240\u7684\u4eba\u53e3\u7ed3\u6784\u6b63\u5728\u53d1\u751f\u53d8\u5316\uff0c\u5c24\u5176\u662f\u5728\u5176\u65b0\u7684\u589e\u957f\u6765\u81ea\u56fd\u5916\u7684\u60c5\u51b5\u4e0b\u3002\u661f\u671f\u56db\uff0c\u6210\u5343\u4e0a\u4e07\u7684\u4eba\u51b2\u8fdb\u4e86\u4e00\u4e2a\u540d\u4e3a H1GHER HOUR \u7684\u623f\u95f4\uff0c\u7531\u540c\u540d\u7684\u97e9\u56fd\u563b\u54c8\u5531\u7247\u516c\u53f8\u9886\u5bfc\uff0c\u97e9\u56fd\u7537\u5b69\u4e50\u961f\u9886\u5bfc\u4eba Jay B \u548c\u8bf4\u5531\u6b4c\u624b pH-1 \u5728\u821e\u53f0\u4e0a\u3002\u623f\u95f4\u5f88\u5feb\u5c31\u8fbe\u5230\u4e868000\u4eba\u7684\u5bb9\u91cf\uff0c\u6709\u4eba\u505a\u4e86\u4e00\u4e2a\u6ea2\u51fa\u7684\u623f\u95f4\uff0c\u7136\u540e\u90a3\u4e2a\u623f\u95f4\u5c31\u8fbe\u5230\u4e86\u5bb9\u91cf\u3002\u8fd9\u611f\u89c9\u5c31\u50cf\u662f\u4ff1\u4e50\u90e8\u65e9\u671f\u7684\u65f6\u523b\u4e4b\u4e00\u3002 Clubhouse \u7684\u672a\u6765\u53ef\u80fd\u770b\u8d77\u6765\u66f4\u50cf\u90a3\u6837\u2014\u2014\u4ecd\u5728\u589e\u957f\uff0c\u53ea\u662f\u4e0d\u518d\u50cf\u4ee5\u524d\u90a3\u6837\u9762\u5411\u540c\u4e00\u7fa4\u4eba\u4e86\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f \u60f3\u8981\u83b7\u5f97\u5065\u5eb7\u7684\u6700\u4f73\u5de5\u5177\u5417\uff1f\u67e5\u770b\u6211\u4eec\u7684 Gear \u56e2\u961f\u7cbe\u9009\u7684\u6700\u4f73\u5065\u8eab\u8ffd\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907\uff08\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50\uff09\u548c\u6700\u4f73\u8033\u673a", "note_en": "Among early adopters, the most coveted item this time last year was not hand sanitizer or Clorox wipes but a username on Clubhouse, the audio-only social media platform that had  Silicon Valley abuzz when it launched in the spring. Access required an invitation from someone already on the app, and these became so in-demand during the lonely months of quarantine that some sold for hundreds of dollars on eBay. Clubhouse was hailed as the  future  of  social  media by numerous outlets (including this one) as its waiting list grew to 10 million.\n Today, those invitations are worthless: Clubhouse had its long-awaited general release on Wednesday, meaning anyone can now set up an account simply by downloading the app. And yet, the masses don\u2019t seem to be rushing in. The app had 484,000 new installs globally between July 21 and 25, according to analytics group SensorTower. That\u2019s a 17 percent increase from the previous five-day period, mostly coming from outside of the United States. On Apple\u2019s App Store, Clubhouse ranked 10th among apps in the category of free social networking on its first day open to the public\u2014even downloads of Google Duo were higher. On Android, where Clubhouse is newer, it barely cracked the top 20.\n For an app that  only recently beat out Instagram, TikTok, and WhatsApp in global app stores, that\u2019s a middling debut. In the past, Clubhouse has said that its invite system was key to growing \u201cin a measured way,\u201d onboarding new users in batches and building out features like DMs as needed. Without its exclusivity, though, Clubhouse also seems to have lost some of its hype.\n  \u201cSelling my Clubhouse invites,\u201d the tech blogger Jane Manchun Wong  joked on Wednesday, when the app announced that it would be available for general download. \u201cYou may have to pay people to take them from you,\u201d replied Alex Lieberman, the executive chairman of Morning Brew, an email newsletter favored by the millennial business set. Morning Brew had recently declared Clubhouse \u201c over,\u201d noting that the app felt less \u201clike Soho House\u2014exclusive and therefore mysteriously cool\u201d and more \u201clike an open house.\u201d\n  Clubhouse is still growing in some markets, particularly outside of the United States. In June, the app had 7.7 million new downloads, 5.8 million of which came from India. International growth was a key part of Clubhouse\u2019s latest fundraising, during which investors valued the app at  $4 billion. Still, as user growth in the US slowed, some have questioned whether the app can live up to its valuation. \u201cNFTs or Clubhouse valuation, which is the bigger bubble?\u201d tech analyst Michael Gartenberg  tweeted earlier this year. And last week, technology publicist Ed Zitron called Clubhouse\u2019s general release \u201c the big stinker that nobody wants to talk about.\u201d\n Clubhouse points to its international growth as evidence that people still enjoy being on the app. \u201cGlobally, we&#39;ve seen the number of rooms created daily rise from 300K in May to 400K in June to 500K+ in July, which indicates a growing number of engaged users,\u201d a spokesperson wrote over email. But it also faces more competition now than it did when it first launched. Facebook and Twitter both created live audio features in the last year, with ways for  audio creators to monetize their content. Discord, the audio chat app originally popular with gamers, rebranded itself as a place for creators of all sorts to \u201ctalk and hang out.\u201d The social isolation of the pandemic was a tailwind for many digital platforms; now, they\u2019ll have to compete with each other for the creators and content that will keep users coming back.\n  On Clubhouse, many of the rooms these days sound similar to the ones that existed a year ago: \u201cPITCH your startup \ud83d\udcc8 to VCs and Top Entrepreneurs,\u201d or \u201cMix &amp; Mingle Shoot Your Shot 30+ Singles.\u201d But there are also signs that Clubhouse\u2019s demographics are changing, especially as its new growth comes from abroad. On Thursday, thousands of people rushed into a room called the H1GHER HOUR, led by the eponymous Korean hip hop record label, where Korean boy band leader Jay B and rapper pH-1 were on stage. The room quickly reached the 8,000-person capacity, someone made an overflow room, and then that room reached capacity. It felt like one of the moments from Clubhouse\u2019s early days. Clubhouse\u2019s future might look more like that\u2014still growing, just not for the same crowd as before.\n   \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2021-07-28 00:00:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5168\u9762,installs,\u5e94\u7528\u7a0b\u5e8f", "title": "SensorTower\uff1aClubhouse \u4ece 7 \u6708 21 \u65e5\u5230 25 \u65e5\u5728\u5168\u7403\u5b89\u88c5\u4e86 484K\uff0c\u6bd4\u524d\u4e94\u5929\u589e\u52a0\u4e86 17%\uff0c\u5728\u4ece\u4ec5\u9650\u9080\u8bf7\u8f6c\u4e3a\u5168\u9762\u53ef\u7528\u4e4b\u540e", "title_en": "SensorTower: Clubhouse had 484K global installs from July 21 to 25, up 17% from the previous five days, after moving from invite-only to general availability", "transed": 1, "url": "https://www.wired.com/story/clubhouse-opens-its-doors-is-anyone-rushing-to-get-in", "via": "", "real_tags": ["\u5168\u9762", "installs", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "a6b77f71b3303331713aebbe18990954.png", "infoid": 1070087, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Oculus Quest 2 \u7684\u9500\u552e\u6682\u505c\uff0c\u56e0\u4e3a Facebook \u5728\u6bcf\u4e2a\u65b0\u8033\u673a\u7684\u76d2\u5b50\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7845\u76d6\uff0c\u6b64\u524d\u6709\u62a5\u9053\u79f0\u539f\u59cb\u6ce1\u6cab\u4f1a\u523a\u6fc0\u9762\u90e8\u76ae\u80a4\u3002 Facebook \u8868\u793a\uff0c\u5b83\u201c\u6b63\u5728\u4e0e\u7f8e\u56fd\u6d88\u8d39\u54c1\u5b89\u5168\u59d4\u5458\u4f1a\uff08CPSC\uff09\u534f\u8c03\uff0c\u53c2\u4e0e\u81ea\u613f\u53ec\u56de Quest 2 \u53ef\u79fb\u52a8\u9762\u90e8\u754c\u9762\u3002\u201d\u7f8e\u56fd\u6d88\u8d39\u54c1\u5b89\u5168\u59d4\u5458\u4f1a\u5199\u9053\uff1a\u201c\u9047\u5230\u76ae\u80a4\u523a\u6fc0\u6216\u53cd\u5e94\u7684\u6d88\u8d39\u8005\u5e94\u7acb\u5373\u505c\u6b62\u4f7f\u7528\u53ec\u56de\u7684\u6ce1\u6cab\u9762\u90e8\u754c\u9762\uff0c\u6240\u6709\u6d88\u8d39\u8005\u90fd\u5e94\u8054\u7cfb Facebook Technologies \u4ee5\u83b7\u53d6\u514d\u8d39\u7845\u80f6\u5957\u3002 Facebook Technologies \u6b63\u5728\u76f4\u63a5\u8054\u7cfb\u6240\u6709 Quest 2 \u7528\u6237\u3002\u201d\u6d88\u8d39\u54c1\u5b89\u5168\u59d4\u5458\u4f1a\u8868\u793a\uff0c\u6b64\u6b21\u53ec\u56de\u5f71\u54cd\u4e86\u5927\u7ea6\u201c400 \u4e07\u201d\u4e2a\u9762\u90e8\u63a5\u53e3\uff0c\u53e6\u5916\u8fd8\u6709 172,600 \u4e2a\u5728\u52a0\u62ff\u5927\u9500\u552e\uff0c\u5728 2020 \u5e74 10 \u6708\u81f3 2021 \u5e74 7 \u6708\u671f\u95f4\u9500\u552e\u2014\u2014\u8fd9\u4e9b\u63a5\u53e3\u968f\u6bcf\u4e2a\u8033\u673a\u4e00\u8d77\u51fa\u552e\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u51fa\u552e\uff0c\u4ef7\u683c\u4e3a 20 \u7f8e\u5143\u6216 40 \u7f8e\u5143\uff0c\u4f5c\u4e3a\u9002\u5408\u5305\u3002\u8be5\u516c\u53f8\u8ba1\u5212\u5728 8 \u6708 24 \u65e5\u518d\u6b21\u5f00\u59cb\u9500\u552e\u65b0\u7684 128 GB \u5165\u95e8\u7ea7\u578b\u53f7\uff0c\u4ef7\u683c\u4e0e\u539f\u59cb 64 GB \u7248\u672c\u76f8\u540c\uff0c\u4e3a 299 \u7f8e\u5143\u3002\u5177\u6709 256 GB \u5b58\u50a8\u7a7a\u95f4\u7684\u9ad8\u7aef\u578b\u53f7\u7684\u552e\u4ef7\u4ecd\u4e3a 399 \u7f8e\u5143\u3002\u636e\u8be5\u516c\u53f8\u79f0\uff0c\u6240\u6709\u5177\u6709\u4e24\u79cd\u5b58\u50a8\u5bb9\u91cf\u7684\u65b0\u8033\u673a\u90fd\u5c06\u914d\u5907\u201c\u9002\u5408 Quest 2 \u6ce1\u6cab\u9762\u90e8\u754c\u9762\u201d\u7684\u7845\u80f6\u5957\uff0c\u73b0\u6709\u7528\u6237\u201c\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b66\u4e60\u5982\u4f55\u7533\u8bf7\u7845\u80f6\u5957\u201d\u3002\u6211\u4eec\u5728 12 \u6708\u9996\u6b21\u62a5\u9053\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u65f6 Facebook \u8868\u793a\u5b83\u201c\u6536\u5230\u4e86\u5927\u7ea6 0.01% \u7684\u4f7f\u7528 Quest 2 \u7684\u4eba\u7684\u76ae\u80a4\u523a\u6fc0\u62a5\u544a\u201d\uff0c\u5e76\u4e14\u201c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u90fd\u5f88\u8f7b\u5fae\uff0c\u5e94\u8be5\u81ea\u884c\u89e3\u51b3\u3002\u201d\u8be5\u516c\u53f8\u5728 4 \u6708\u4efd\u63d0\u4f9b\u4e86\u66f4\u65b0\uff0c\u79f0\u5b83\u6539\u53d8\u4e86\u4e00\u4e9b\u6d41\u7a0b\uff0c\u6fc0\u6012\u7684\u53ef\u80fd\u6027\u201c\u66f4\u5c0f\u201d\uff0c\u5c3d\u7ba1 5 \u6708\u4efd\u4e9a\u9a6c\u900a\u5728\u6b27\u6d32\u7684\u9500\u552e\u6682\u65f6\u505c\u6b62\uff0c\u4ee5\u56de\u5e94\u6b27\u76df\u59d4\u5458\u4f1a\u4e0e\u8be5\u95ee\u9898\u76f8\u5173\u7684\u6587\u4ef6\u3002\u4e3a\u4e86\u56de\u7b54\u95ee\u9898\uff0c\u672c\u5468 Facebook \u53d1\u8a00\u4eba\u544a\u8bc9 UploadVR\uff0c\u8be5\u516c\u53f8\u603b\u5171\u6536\u5230\u4e86\u5927\u7ea6 5,700 \u4efd\u6765\u81ea\u7f8e\u56fd\u5ba2\u6237\u7684\u76ae\u80a4\u523a\u6fc0\u62a5\u544a\u3002 Facebook \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51c6\u5907\u597d\u7684\u58f0\u660e\uff1a\u201c\u867d\u7136\u8fd9\u4e9b\u62a5\u544a\u53ea\u5360 Quest 2 \u7528\u6237\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u800c\u4e14\u5927\u591a\u6570\u62a5\u544a\u4ecd\u672a\u5f97\u5230\u8bc1\u5b9e\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7528\u6237\u90fd\u80fd\u5728\u4ed6\u4eec\u7684 Quest 2 \u8033\u673a\u4e0a\u83b7\u5f97\u51fa\u8272\u7684\u4f53\u9a8c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728 12 \u6708\u5f00\u59cb\u4e86\u6211\u4eec\u7684\u81ea\u613f\u9762\u90e8\u754c\u9762\u66f4\u6362\u8ba1\u5212\uff0c\u73b0\u5728\u6b63\u5728\u4e3a\u5168\u7403\u6240\u6709 Quest 2 \u548c Quest 2 Fit Kit \u7528\u6237\u63a8\u51fa\u7845\u80f6\u5957\u3002\u201d\n\u4ee5\u4e0b\u6765\u81ea\u53d7\u5f71\u54cd\u4e70\u5bb6\u7684\u4ee5\u4e0b\u7167\u7247\u4e8e\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u63d0\u4f9b\u7ed9 UploadVR\uff0c\u663e\u793a\u4e86\u4ed6\u5bf9\u6ce1\u6cab\u7684\u53cd\u5e94\uff1aQuest 2 \u662f Facebook \u5728 Rift S \u548c Oculus Go \u9500\u552e\u7ed3\u675f\u540e\u4ec5\u5b58\u7684 VR \u8033\u673a\u3002 Facebook \u6700\u8fd1\u5ba3\u5e03\u5176\u5de5\u4f5c\u5ba4 Ready At Dawn \u7684 Lone Echo II \u5c06\u4e8e 8 \u6708 24 \u65e5\u5728 Rift \u5e73\u53f0\u4e0a\u53d1\u5e03\uff0cQuest 2 \u53ef\u4ee5\u8bbf\u95ee\u8be5\u5e73\u53f0\u3002\u671f\u5f85\u5df2\u4e45\u7684\u7eed\u96c6\u300a\u6211\u671f\u5f85\u4f60\u6b7b\u53bb 2\u300b\u4e5f\u5c06\u4e8e 8 \u6708 24 \u65e5\u53d1\u5e03\u9002\u7528\u4e8e\u6240\u6709\u4e3b\u8981\u8033\u673a\uff0c\u5305\u62ec Quest 2\u3002", "note_en": "Oculus Quest 2 sales are paused as Facebook adds a silicon cover to the boxes of every new headset, following reports of facial skin irritation with the original foam.\n Facebook says it is \u201cparticipating in a voluntary recall of the Quest 2 removable facial interface in coordination with the U.S. Consumer Product Safety Commission (CPSC).\u201d\n The  CPSC wrote \u201cConsumers who experience a skin irritation or reaction should immediately stop using the recalled foam facial interface, and all consumers should contact Facebook Technologies to receive a free silicone cover. Facebook Technologies is contacting all Quest 2 users directly.\u201d The CPSC said about \u201c4 million\u201d facial interfaces are affected by the recall, plus 172,600 in Canada, sold between October 2020 and July 2021 \u2014 the interfaces come with each headset sold as well as sold separately for $20 or for $40 as part of a Fit Pack.\n The company plans to start up sales again on August 24th  with a new 128 GB entry level model at the same $299 price as the original 64 GB version. A higher end model with 256 GB of storage will still sell for $399. According to the company, all new headsets in both storage capacities will come with the silicone cover \u201cthat fits over the Quest 2 foam facial interface\u201d and existing owners \u201ccan learn how to request a silicone cover  here.\u201d\n We first  reported on this issue in December when Facebook said it \u201creceived reports of skin irritation from about 0.01% of people using Quest 2\u2033 and \u201cthe vast majority of cases are mild and should resolve on their own.\u201d The company  provided an update in April saying it changed some of its processes and irritation was \u201ceven less likely\u201d, though in May sales were  temporarily halted on Amazon in Europe in response to a European Commission filing related to the issue.\n In response to questions, this week a Facebook spokesperson told UploadVR the company received a total of approximately 5,700 reports of skin irritation from customers in the United States. Facebook provided the following prepared statement:\n \u201cWhile these reports represent a very small percentage of Quest 2 users, and the majority of reports remain unverified, we want every user to have a great experience with their Quest 2 headsets. That is why we started our voluntary facial interface replacement program in December, and are now rolling out the silicone cover for all Quest 2 and Quest 2 Fit Kit owners globally.\u201d\n The following photo below from an affected buyer was provided to UploadVR earlier this year showing his reaction to the foam:\n  Quest 2 is Facebook\u2019s only remaining VR headset after ending sales of  Rift S and  Oculus Go. Facebook  recently announced that Lone Echo II from  its studio Ready At Dawn releases on August 24th for the Rift platform, which Quest 2 can access. Long-awaited sequel I Expect You To Die 2  also releases for all major headsets, including Quest 2, on August 24th.", "posttime": "2021-07-28 00:00:36", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "facebook,\u57fa\u7840,quest", "title": "Facebook \u6b63\u5728\u4e3a Oculus Quest 2 \u53ec\u56de\u7ea6 400 \u4e07\u4e2a\u6ce1\u6cab\u53e3\u7f69\uff0c\u6b64\u524d\u6709\u62a5\u9053\u79f0\u5176\u53d7\u5230\u523a\u6fc0\uff1b Quest 2 \u4e8e 8 \u6708 24 \u65e5\u518d\u6b21\u53d1\u552e\uff0c\u57fa\u7840\u5b58\u50a8\u5bb9\u91cf\u4e3a 128GB", "title_en": "Facebook is recalling ~4M foam face masks for Oculus Quest 2, after reports of irritation; Quest 2 goes on sale again Aug. 24 with improved 128GB base storage", "transed": 1, "url": "https://uploadvr.com/facebook-pauses-quest-2-sales-skin/", "via": "", "real_tags": ["facebook", "\u57fa\u7840", "quest"]}, {"category": "", "categoryclass": "", "imagename": "71dba716c7e5e8bad130017777e06870.jpg", "infoid": 1070086, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6 Docker \u53ef\u4ee5\u8ffd\u6eaf\u5230 2015 \u5e74\u521d\u3002 Docker \u88ab\u8bd5\u9a8c\u4ee5\u627e\u51fa\u5b83\u662f\u5426\u53ef\u4ee5\u4f7f\u6211\u4eec\u53d7\u76ca\u3002\u5f53\u65f6\u65e0\u6cd5[\u5728\u540e\u53f0]\u8fd0\u884c\u5bb9\u5668\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u4e2d\u6b63\u5728\u8fd0\u884c\u3001\u8c03\u8bd5\u6216 ssh \u7684\u5185\u5bb9\u3002\u5b9e\u9a8c\u5f88\u5feb\uff0cDocker \u6beb\u65e0\u7528\u5904\uff0c\u66f4\u63a5\u8fd1\u4e8e alpha \u539f\u578b\u800c\u4e0d\u662f\u53d1\u5e03\u3002\u5feb\u8fdb\u5230 2016 \u5e74\u3002\u65b0\u5de5\u4f5c\u3001\u65b0\u516c\u53f8\u548c Docker \u7092\u4f5c\u6b63\u5728\u75af\u72c2\u589e\u957f\u3002\u8fd9\u91cc\u7684\u5f00\u53d1\u4eba\u5458\u5df2\u5c06 docker \u63a8\u5165\u751f\u4ea7\u9879\u76ee\uff0c\u6211\u4eec\u575a\u6301\u4f7f\u7528\u5b83\u3002\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u8fd0\u884c\u547d\u4ee4\u7ec8\u4e8e\u8d77\u4f5c\u7528\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u542f\u52a8\u3001\u505c\u6b62\u548c\u67e5\u770b\u5bb9\u5668\u3002\u5b83\u662f\u529f\u80fd\u6027\u7684\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u6211\u4eec\u6709 12 \u4e2a dockerized \u5e94\u7528\u7a0b\u5e8f\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\uff0c\u5206\u5e03\u5728 AWS \u4e0a\u7684 31 \u4e2a\u4e3b\u673a\u4e0a\uff08\u6bcf\u4e2a\u4e3b\u673a 1 \u4e2a docker \u5e94\u7528\u7a0b\u5e8f [\u6ce8\u610f\uff1a\u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u539f\u56e0]\uff09\u3002\u4e0b\u9762\u7684\u6587\u7ae0\u8bb2\u8ff0\u4e86\u6211\u4eec\u4e0e Docker \u7684\u65c5\u7a0b\uff0c\u8fd9\u662f\u4e00\u6b21\u5145\u6ee1\u5371\u9669\u548c\u610f\u5916\u8f6c\u6298\u7684\u5192\u9669\u3002\u6bcf\u4e2a\u65b0\u7248\u672c\u90fd\u4f34\u968f\u7740\u91cd\u5927\u53d8\u5316\u3002\u4eca\u5e74\u5e74\u521d\uff0c\u6211\u4eec\u5f00\u59cb\u4f7f\u7528 docker 1.6 \u6765\u8fd0\u884c\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u5728 3 \u4e2a\u6708\u540e\u66f4\u65b0\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ec5\u5728\u66f4\u9ad8\u7248\u672c\u4e2d\u53ef\u7528\u7684\u4fee\u590d\u7a0b\u5e8f\u3002 1.6 \u5206\u652f\u5df2\u7ecf\u88ab\u653e\u5f03\u4e86\u3002 1.7 \u548c 1.8 \u7248\u672c\u65e0\u6cd5\u8fd0\u884c\u3002\u6211\u4eec\u8f6c\u79fb\u5230 1.9 \u53ea\u662f\u4e3a\u4e86\u5728\u4e24\u5468\u540e\u53d1\u73b0\u4e00\u4e2a\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u6240\u4ee5\u6211\u4eec\u5347\u7ea7\uff08\u518d\u6b21\uff01\uff09\u5230 1.10\u3002\nDocker \u7248\u672c\u4e4b\u95f4\u5b58\u5728\u5404\u79cd\u5fae\u5999\u7684\u56de\u5f52\u3002\u5b83\u4e0d\u65ad\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u6253\u7834\u4e0d\u53ef\u9884\u6d4b\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5fc5\u987b\u8c03\u8bd5\u7684\u6700\u68d8\u624b\u7684\u56de\u5f52\u4e0e\u7f51\u7edc\u76f8\u5173\u3002 Docker \u5b8c\u5168\u62bd\u8c61\u4e86\u4e3b\u673a\u7f51\u7edc\u3002\u8fd9\u662f\u4e00\u5927\u5806\u7aef\u53e3\u91cd\u5b9a\u5411\u3001DNS \u6280\u5de7\u548c\u865a\u62df\u7f51\u7edc\u3002\u5956\u52b1\uff1aDocker \u53bb\u5e74\u4ece\u5b98\u65b9 Debian \u5b58\u50a8\u5e93\u4e2d\u5220\u9664\uff0c\u7136\u540e\u8be5\u8f6f\u4ef6\u5305\u4ece docker.io \u91cd\u547d\u540d\u4e3a docker-engine\u3002\u6b64\u66f4\u6539\u4e4b\u524d\u7684\u6587\u6863\u548c\u8d44\u6e90\u5df2\u8fc7\u65f6\u3002 Docker \u4e2d\u6700\u9700\u8981\u548c\u6700\u7f3a\u4e4f\u7684\u529f\u80fd\u662f\u6e05\u7406\u65e7\u56fe\u50cf\uff08\u65e9\u4e8e X \u5929\u6216 X \u5929\u672a\u4f7f\u7528\uff0c\u65e0\u8bba\u5982\u4f55\uff09\u7684\u547d\u4ee4\u3002\u7a7a\u95f4\u662f\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff0c\u56e0\u4e3a\u56fe\u50cf\u7ecf\u5e38\u66f4\u65b0\uff0c\u6bcf\u4e2a\u56fe\u50cf\u53ef\u80fd\u9700\u8981\u8d85\u8fc7 1GB\u3002\u6e05\u7406\u7a7a\u95f4\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u8fd0\u884c\u8fd9\u4e2a hack\uff0c\u6700\u597d\u6bcf\u5929\u5728 cron \u4e2d\u8fd0\u884c\uff1a\u5b83\u679a\u4e3e\u6240\u6709\u56fe\u50cf\u5e76\u5220\u9664\u5b83\u4eec\u3002\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7684\u90a3\u4e9b\u4e0d\u80fd\u88ab\u5220\u9664\uff08\u5b83\u7ed9\u51fa\u4e86\u4e00\u4e2a\u9519\u8bef\uff09\u3002\u5b83\u5f88\u810f\uff0c\u4f46\u5b83\u5b8c\u6210\u4e86\u5de5\u4f5c\u3002 docker \u4e4b\u65c5\u4ece\u4e00\u4e2a\u6e05\u7406\u811a\u672c\u5f00\u59cb\u3002\u8fd9\u662f\u6bcf\u4e2a\u7ec4\u7ec7\u90fd\u5fc5\u987b\u7ecf\u5386\u7684\u5165\u4f1a\u4eea\u5f0f\u3002\n\u5728\u4e92\u8054\u7f51\u4e0a\u53ef\u4ee5\u627e\u5230\u8bb8\u591a\u5c1d\u8bd5\uff0c\u4f46\u6ca1\u6709\u4e00\u79cd\u6548\u679c\u5f88\u597d\u3002\u6ca1\u6709\u5217\u51fa\u5e26\u6709\u65e5\u671f\u7684\u56fe\u50cf\u7684 API\uff0c\u6709\u65f6\u6709\uff0c\u4f46\u5b83\u4eec\u5728 6 \u4e2a\u6708\u5185\u88ab\u5f03\u7528\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u7b56\u7565\u662f\u4ece\u56fe\u50cf\u6587\u4ef6\u4e2d\u8bfb\u53d6\u65e5\u671f\u5c5e\u6027\u5e76\u8c03\u7528\u201cdocker rmi\u201d\uff0c\u4f46\u5728\u547d\u540d\u66f4\u6539\u65f6\u5931\u8d25\u3002\u53e6\u4e00\u79cd\u7b56\u7565\u662f\u76f4\u63a5\u8bfb\u53d6\u65e5\u671f\u5c5e\u6027\u5e76\u5220\u9664\u6587\u4ef6\uff0c\u4f46\u5982\u679c\u505a\u5f97\u4e0d\u597d\u4f1a\u5bfc\u81f4\u635f\u574f\uff0c\u5e76\u4e14\u9664\u4e86Docker\u672c\u8eab\u4e4b\u5916\u65e0\u6cd5\u5b8c\u7f8e\u5b8c\u6210\u3002\u4e0e\u5185\u6838\u3001\u53d1\u884c\u7248\u3001docker \u548c\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u4ea4\u4e92\u76f8\u5173\u7684\u95ee\u9898\u6570\u4e0d\u80dc\u6570\uff0c\u6211\u4eec\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528 Debian stable \u548c backports\u3002\u6211\u4eec\u5f00\u59cb\u5728 Debian Jessie 3.16.7-ckt20-1\uff082015 \u5e74 11 \u6708\u53d1\u5e03\uff09\u4e0a\u8fd0\u884c\u3002\u8fd9\u4e2a\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u4e25\u91cd\u9519\u8bef\uff0c\u5b83\u4f1a\u4e0d\u89c4\u5219\u5730\u4f7f\u4e3b\u673a\u5d29\u6e83\uff08\u5e73\u5747\u6bcf\u9694\u51e0\u4e2a\u5c0f\u65f6\uff09\u3002 AUFS \u9a71\u52a8\u7a0b\u5e8f\u4e0d\u7a33\u5b9a\u3002\u5b83\u53d7\u5230\u5f15\u53d1\u5185\u6838\u6050\u614c\u548c\u7834\u574f\u6570\u636e\u7684\u4e25\u91cd\u9519\u8bef\u7684\u5f71\u54cd\u3002\u5b83\u5728[\u81f3\u5c11]\u6240\u6709\u201clinux-3.16.x\u201d\u5185\u6838\u4e0a\u90fd\u88ab\u7834\u574f\u4e86\u3002\u6ca1\u6709\u6cbb\u6108\u65b9\u6cd5\u3002\u6211\u4eec\u975e\u5e38\u5bc6\u5207\u5730\u5173\u6ce8 Debian \u548c\u5185\u6838\u66f4\u65b0\u3002 Debian \u5728\u5e38\u89c4\u5468\u671f\u4e4b\u5916\u53d1\u5e03\u4e86\u7279\u6b8a\u8865\u4e01\u3002 2016 \u5e74 3 \u6708\u5de6\u53f3\uff0cAUFS \u6709\u4e00\u4e2a\u91cd\u5927\u9519\u8bef\u4fee\u590d\u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u771f\u6b63\u7684\u4fee\u590d\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5e76\u975e\u5982\u6b64\u3002\u4e4b\u540e\u5185\u6838\u6050\u614c\u53d1\u751f\u7684\u9891\u7387\u964d\u4f4e\uff08\u6bcf\u5468\uff0c\u800c\u4e0d\u662f\u6bcf\u5929\uff09\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u54cd\u4eae\u4e14\u5b58\u5728\u3002\u4eca\u5e74\u590f\u5929\uff0c\u4e00\u6b21\u91cd\u5927\u66f4\u65b0\u51fa\u73b0\u4e86\u56de\u5f52\uff0c\u8fd9\u53c8\u5e26\u56de\u4e86\u4e4b\u524d\u7684\u4e00\u4e2a\u5173\u952e\u95ee\u9898\u3002\u5b83\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u5730\u6740\u6b7b CI \u670d\u52a1\u5668\uff0c\u4e24\u6b21\u8c0b\u6740\u4e4b\u95f4\u5e73\u5747\u95f4\u9694 2 \u5c0f\u65f6\u3002\u4e00\u4e2a\u7d27\u6025\u8865\u4e01\u88ab\u8fc5\u901f\u53d1\u5e03\u4ee5\u4fee\u590d\u56de\u5f52\u3002\n2016 \u5e74\u53d1\u5e03\u4e86\u591a\u4e2a AUFS \u4fee\u590d\u7a0b\u5e8f\u3002\u4fee\u590d\u4e86\u4e00\u4e9b\u5173\u952e\u95ee\u9898\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u95ee\u9898\u3002 AUFS \u5728 [\u81f3\u5c11] \u6240\u6709\u201clinux-3.16.x\u201d\u5185\u6838\u4e0a\u90fd\u4e0d\u7a33\u5b9a\u3002 Debian \u7a33\u5b9a\u7248\u5361\u5728\u5185\u6838 3.16 \u4e0a\u3002\u5b83\u4e0d\u7a33\u5b9a\u3002\u9664\u4e86\u5207\u6362\u5230 Debian \u6d4b\u8bd5\uff08\u53ef\u4ee5\u4f7f\u7528\u5185\u6838 4\uff09\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u505a\u7684\u3002 Ubuntu LTS \u6b63\u5728\u8fd0\u884c\u5185\u6838 3.19\u3002\u65e0\u6cd5\u4fdd\u8bc1\u6b64\u6700\u65b0\u66f4\u65b0\u53ef\u4ee5\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u6539\u53d8\u6211\u4eec\u7684\u4e3b\u64cd\u4f5c\u7cfb\u7edf\u5c06\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u7834\u574f\uff0c\u4f46\u6211\u4eec\u975e\u5e38\u7edd\u671b\uff0c\u6211\u4eec\u8003\u8651\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002 RHEL/CentOS-6 \u5728\u5185\u6838 2.x \u4e0a\uff0cRHEL/CentoS-7 \u5728\u5185\u6838 3.10 \u4e0a\uff08\u8bb8\u591a\u540e\u6765\u7684\u5411\u540e\u79fb\u690d\u7531 RedHat \u5b8c\u6210\uff09\u3002\u4f17\u6240\u5468\u77e5\uff0cAUFS \u7684\u95ee\u9898\u5c42\u51fa\u4e0d\u7a77\uff0c\u88ab\u5f00\u53d1\u8005\u89c6\u4e3a\u81ea\u91cd\u3002\u4f5c\u4e3a\u4e00\u4e2a\u957f\u671f\u7684\u76ee\u6807\uff0cAUFS \u6587\u4ef6\u7cfb\u7edf\u7ec8\u4e8e\u5728\u5185\u6838\u7248\u672c 4 \u4e2d\u88ab\u5220\u9664\u4e86\u3002\u6ca1\u6709\u975e\u5b98\u65b9\u8865\u4e01\u652f\u6301\u5b83\uff0c\u6ca1\u6709\u53ef\u9009\u6a21\u5757\uff0c\u6ca1\u6709\u4efb\u4f55\u5411\u540e\u79fb\u690d\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002 AUFS \u5b8c\u5168\u6d88\u5931\u4e86\u3002 \u201c OverlayFS \u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e AUFS \u7684\u73b0\u4ee3\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\u3002\u4e0e AUFS \u76f8\u6bd4\uff0cOverlayFS \u7684\u8bbe\u8ba1\u66f4\u7b80\u5355\uff0c\u81ea 3.18 \u7248\u4ee5\u6765\u4e00\u76f4\u5728\u4e3b\u7ebf Linux \u5185\u6838\u4e2d\uff0c\u5e76\u4e14\u53ef\u80fd\u66f4\u5feb\u3002\u201d \u2014 Docker OverlayFS \u9a71\u52a8\u7a0b\u5e8f\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u4e0d\u4f1a\u5411\u540e\u79fb\u690d\u5230\u73b0\u6709\u53d1\u884c\u7248\u3002 Docker \u4ece\u4e0d\u5173\u5fc3 [\u5411\u540e] \u517c\u5bb9\u6027\u3002\u8bc4\u8bba\u540e\u66f4\u65b0\uff1aOverlay \u662f\u652f\u6301\u5b83\u7684\u5185\u6838\u6a21\u5757\uff08\u7531 linux \u7ef4\u62a4\u8005\u5f00\u53d1\uff09\u548c\u4f7f\u7528\u5b83\u7684 docker \u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f\uff08docker \u7684\u4e00\u90e8\u5206\uff0c\u7531 docker \u5f00\u53d1\uff09\u7684\u540d\u79f0\u3002\u5b83\u4eec\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7ec4\u6210\u90e8\u5206 [\u5386\u53f2\u548c\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u6709\u91cd\u53e0]\u3002\u8fd9\u4e9b\u95ee\u9898\u4f3c\u4e4e\u4e3b\u8981\u4e0e docker \u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f\u6709\u5173\uff0c\u800c\u4e0d\u662f\u6587\u4ef6\u7cfb\u7edf\u672c\u8eab\u3002\u6587\u4ef6\u7cfb\u7edf\u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8f6f\u4ef6\uff0c\u5b83\u9700\u8981\u975e\u5e38\u9ad8\u7684\u53ef\u9760\u6027\u3002\u957f\u65f6\u95f4\u7684\u8bfb\u8005\u4f1a\u8bb0\u5f97 Linux \u4ece ext3 \u8fc1\u79fb\u5230 ext4\u3002\u7f16\u5199\u9700\u8981\u65f6\u95f4\uff0c\u8c03\u8bd5\u9700\u8981\u66f4\u591a\u65f6\u95f4\uff0c\u5e76\u4e14\u5728\u6d41\u884c\u7684\u53d1\u884c\u7248\u4e2d\u4f5c\u4e3a\u9ed8\u8ba4\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86\u6c38\u6052\u3002\u5728 1 \u5e74\u5185\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u9879\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002\u5f53\u8003\u8651\u5230\u4efb\u52a1\u5206\u914d\u7ed9 Docker \u65f6\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u53ef\u7b11\u7684\uff0c\u4ed6\u4eec\u6709\u4e0d\u7a33\u5b9a\u548c\u707e\u96be\u6027\u7834\u574f\u6027\u66f4\u6539\u7684\u8bb0\u5f55\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u957f\u8bdd\u77ed\u8bf4\u3002\u90a3\u5e76\u4e0d\u987a\u5229\u3002\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 Google \u67e5\u627e\u6050\u6016\u6545\u4e8b\u3002 \u201coverlay2 \u9a71\u52a8\u7a0b\u5e8f\u89e3\u51b3\u4e86\u8986\u76d6\u9650\u5236\uff0c\u4f46\u4ec5\u4e0e Linux \u5185\u6838 4.0 [\u6216\u66f4\u9ad8\u7248\u672c] \u548c docker 1.12 \u517c\u5bb9\u201d \u2014 Overlay \u4e0e Overlay2 \u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f \u5728 1 \u5e74\u5185\u5236\u4f5c\u65b0\u6587\u4ef6\u7cfb\u7edf\u4ecd\u7136\u662f\u4e00\u9879\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002 Docker \u521a\u521a\u5c1d\u8bd5\u5e76\u5931\u8d25\u4e86\u3002\u7136\u800c\u4ed6\u4eec\u53c8\u5728\u5c1d\u8bd5\uff01\u6211\u4eec\u5c06\u5728\u51e0\u5e74\u540e\u770b\u5230\u7ed3\u679c\u5982\u4f55\u3002\n\u76ee\u524d\uff0c\u6211\u4eec\u8fd0\u884c\u7684\u4efb\u4f55\u7cfb\u7edf\u90fd\u4e0d\u652f\u6301\u5b83\u3002\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u80fd\u6d4b\u8bd5\u5b83\u3002\u7ecf\u9a8c\u6559\u8bad\uff1a\u5982\u60a8\u6240\u89c1\uff0c\u4f7f\u7528 Overlay \u7136\u540e\u4f7f\u7528 Overlay2\u3002\u6ca1\u6709\u53cd\u5411\u79fb\u690d\u3002\u6ca1\u6709\u8865\u4e01\u3002\u6ca1\u6709\u590d\u53e4\u517c\u5bb9\u6027\u3002 Docker \u53ea\u4f1a\u524d\u8fdb\u5e76\u7834\u574f\u4e8b\u7269\u3002\u5982\u679c\u4f60\u60f3\u91c7\u7528 Docker\uff0c\u4f60\u8fd8\u5fc5\u987b\u7ee7\u7eed\u524d\u8fdb\uff0c\u9075\u5faa Docker \u7684\u53d1\u5e03\u3001\u5185\u6838\u3001\u53d1\u884c\u7248\u3001\u6587\u4ef6\u7cfb\u7edf\u548c\u4e00\u4e9b\u4f9d\u8d56\u9879\u3002 2016 \u5e74 6 \u6708 2 \u65e5\uff0c\u5927\u7ea6\u4e0a\u5348 9 \u70b9\uff08\u4f26\u6566\u65f6\u95f4\uff09\u3002\u65b0\u7684\u5b58\u50a8\u5e93\u5bc6\u94a5\u88ab\u63a8\u9001\u5230 docker \u516c\u5171\u5b58\u50a8\u5e93\u3002\u76f4\u63a5\u540e\u679c\u662f\uff0c\u5728\u914d\u7f6e\u4e86\u635f\u574f\u7684 repo \u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\u4efb\u4f55\u201capt-get update\u201d\uff08\u6216\u7b49\u6548\u7684\uff09\u90fd\u4f1a\u5931\u8d25\uff0c\u5e76\u663e\u793a\u9519\u8bef\u201cError https://apt.dockerproject.org/ Hash Sum mismatch\u201d\u8fd9\u4e2a\u95ee\u9898\u662f\u5168\u4e16\u754c\u3002\u5b83\u4f1a\u5f71\u54cd\u5730\u7403\u4e0a\u6240\u6709\u914d\u7f6e\u4e86 docker \u5b58\u50a8\u5e93\u7684\u7cfb\u7edf\u3002\u5b83\u5728\u6240\u6709 Debian \u548c ubuntu \u7248\u672c\u4e0a\u5f97\u5230\u786e\u8ba4\uff0c\u72ec\u7acb\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u548c docker \u7248\u672c\u3002\u4e16\u754c\u4e0a\u6240\u6709\u4f9d\u8d56 docker \u8bbe\u7f6e/\u66f4\u65b0\u6216\u7cfb\u7edf\u8bbe\u7f6e/\u66f4\u65b0\u7684 CI \u7ba1\u9053\u90fd\u5df2\u635f\u574f\u3002\u4e0d\u53ef\u80fd\u5728\u73b0\u6709\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7cfb\u7edf\u66f4\u65b0\u6216\u5347\u7ea7\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7cfb\u7edf\u5e76\u5728\u5176\u4e0a\u5b89\u88c5 docker \u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fc7\u4e86\u4e00\u4f1a\u513f\u3002\u6211\u4eec\u4ece\u7801\u5934\u5de5\u4eba\u90a3\u91cc\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u65b0\uff1a\u201c\u63d0\u4f9b\u66f4\u65b0\uff1b\u6211\u5728\u5185\u90e8\u63d0\u51fa\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u9700\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u5728\u65e7\u91d1\u5c71\u65f6\u533a [\u4e0e\u4f26\u6566\u7684\u65f6\u5dee 8 \u5c0f\u65f6]\uff0c\u6240\u4ee5\u4ed6\u4eec\u8fd8\u6ca1\u6709\u51fa\u73b0\u3002\u201d\n\u6211\u4e2a\u4eba\u5728\u5185\u90e8\u5411\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u5ba3\u5e03\u3002\u4eca\u5929\uff0c\u6ca1\u6709 Docker CI\uff0c\u6211\u4eec\u4e0d\u80fd\u521b\u5efa\u65b0\u7cfb\u7edf\uff0c\u4e5f\u4e0d\u80fd\u66f4\u65b0\u4f9d\u8d56\u4e8e docker \u7684\u73b0\u6709\u7cfb\u7edf\u3002\u6211\u4eec\u6240\u6709\u7684\u5e0c\u671b\u90fd\u5bc4\u6258\u5728\u65e7\u91d1\u5c71\u7684\u4e00\u4e2a\u5bb6\u4f19\u8eab\u4e0a\uff0c\u4ed6\u76ee\u524d\u6b63\u5728\u7761\u89c9\u3002 [\u6682\u505c\u7b49\u5f85\u4fee\u590d\uff0c\u8fd9\u65f6\u514d\u8d39\u7684\u98df\u7269\u548c\u996e\u6599\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86] \u4e0b\u5348 3 \u70b9\u5de6\u53f3\uff08\u4f26\u6566\u65f6\u95f4\uff09\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684 Docker \u4eba\u5458\u53d1\u5e03\u4e86\u66f4\u65b0\u3002\u4ed6\u9192\u4e86\uff0c\u4ed6\u5df2\u7ecf\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u5e76\u4e14\u6b63\u5728\u7740\u624b\u4fee\u590d\u3002\u7531\u4e8e Docker\uff0c\u90a3\u662f 7 \u5c0f\u65f6\u7684\u661f\u9645\u4e2d\u65ad\u3002\u505c\u7535\u540e\u5269\u4e0b\u7684\u53ea\u662f\u5173\u4e8e GitHub \u95ee\u9898\u7684\u51e0\u6761\u6d88\u606f\u3002\u6ca1\u6709\u4e8b\u540e\u5206\u6790\u3002\u5c3d\u7ba1\u53d1\u751f\u4e86\u707e\u96be\u6027\u7684\u5931\u8d25\uff0c\u4f46\u5b83\u51e0\u4e4e\u6ca1\u6709\uff08\u6ca1\u6709\uff1f\uff09\u79d1\u6280\u65b0\u95fb\u6216\u65b0\u95fb\u62a5\u9053\u3002\u6709\u4e00\u4e2a\u7531 docker \u8fd0\u8425\u7684\u516c\u5171\u6ce8\u518c\u8868\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\uff0c\u6211\u4eec\u8fd8\u8fd0\u884c\u6211\u4eec\u81ea\u5df1\u7684\u5185\u90e8 docker \u6ce8\u518c\u8868\u3002\u8fd9\u662f\u4e00\u4e2a\u5728 docker \u4e3b\u673a\u4e0a\u7684 docker \u4e2d\u8fd0\u884c\u7684 docker \u955c\u50cf\uff08\u8fd9\u5f88\u5143\uff09\u3002 docker \u6ce8\u518c\u8868\u662f\u6700\u5e38\u7528\u7684 docker \u955c\u50cf\u3002 docker \u6ce8\u518c\u8868\u6709 3 \u4e2a\u7248\u672c\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u65e0\u52a8\u4e8e\u8877\uff1a\u53ef\u4fe1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6587\u6863\u4e2d\u968f\u5904\u63d0\u53ca\u7684\uff08\u4ed8\u8d39\uff1f\uff09\u670d\u52a1\uff0c\u4e0d\u786e\u5b9a\u5b83\u662f\u4ec0\u4e48\uff0c\u53ea\u9700\u5ffd\u7565\u5b83\ndocker registry v2 \u662f\u5b8c\u5168\u91cd\u5199\u7684\u3002\u6ce8\u518c\u8868 v1 \u5728 v2 \u53d1\u5e03\u540e\u4e0d\u4e45\u5c31\u505c\u7528\u4e86\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u5b89\u88c5\u4e00\u4e2a\u65b0\u4e1c\u897f\uff08\u518d\u6b21\uff01\uff09\u53ea\u662f\u4e3a\u4e86\u8ba9 docker \u5de5\u4f5c\u3002\u4ed6\u4eec\u66f4\u6539\u4e86\u914d\u7f6e\u3001URL\u3001\u8def\u5f84\u548c\u7aef\u70b9\u3002\u5411\u6ce8\u518c\u8868 v2 \u7684\u8fc7\u6e21\u5e76\u4e0d\u662f\u65e0\u7f1d\u7684\u3002\u6211\u4eec\u5fc5\u987b\u4fee\u590d\u6211\u4eec\u7684\u8bbe\u7f6e\u3001\u6784\u5efa\u548c\u90e8\u7f72\u811a\u672c\u3002\u7ecf\u9a8c\u6559\u8bad\uff1a\u4e0d\u8981\u76f8\u4fe1\u4efb\u4f55 docker \u5de5\u5177\u6216 API\u3002\u5b83\u4eec\u4e0d\u65ad\u5730\u88ab\u9057\u5f03\u548c\u7184\u706d\u3002\u6ce8\u518c\u8868 v2 \u7684\u76ee\u6807\u4e4b\u4e00\u662f\u5e26\u6765\u66f4\u597d\u7684 API\u3002\u5b83\u8bb0\u5f55\u5728\u6b64\u5904\uff0c\u6211\u4eec\u4e0d\u8bb0\u5f97 9 \u4e2a\u6708\u524d\u5b58\u5728\u7684\u6587\u6863\u3002\u4ece docker \u6ce8\u518c\u8868\u4e2d\u5220\u9664\u56fe\u50cf\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4e5f\u6ca1\u6709\u5783\u573e\u6536\u96c6\uff0c\u6587\u6863\u63d0\u5230\u4e86\u4e00\u4e2a\uff0c\u4f46\u5b83\u4e0d\u662f\u771f\u7684\u3002 \uff08\u56fe\u50cf\u786e\u5b9e\u5177\u6709\u538b\u7f29\u548c\u91cd\u590d\u6570\u636e\u5220\u9664\u529f\u80fd\uff0c\u4f46\u8fd9\u662f\u53e6\u4e00\u56de\u4e8b\uff09\u3002\u6211\u4eec\u4e0d\u80fd\u62e5\u6709\u65e0\u9650\u91cf\u5b58\u50a8\u7684\u670d\u52a1\u5668\u3002\u6211\u4eec\u7684\u6ce8\u518c\u8868\u51e0\u6b21\u7528\u5b8c\u7a7a\u95f4\uff0c\u5728\u6211\u4eec\u7684\u6784\u5efa\u7ba1\u9053\u4e2d\u91ca\u653e\u4e86\u5730\u72f1\uff0c\u7136\u540e\u6211\u4eec\u5c06\u56fe\u50cf\u5b58\u50a8\u79fb\u5230\u4e86 S3\u3002\n\u6211\u4eec\u603b\u5171\u8fdb\u884c\u4e86 3 \u6b21\u624b\u52a8\u6e05\u7406\u3002\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u5fc5\u987b\u505c\u6b62\u6ce8\u518c\u8868\uff0c\u6e05\u9664\u6240\u6709\u5b58\u50a8\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u6ce8\u518c\u8868\u5bb9\u5668\u3002 \uff08\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6211\u4eec\u7684 CI \u91cd\u65b0\u6784\u5efa\u6700\u65b0\u7684 docker \u955c\u50cf\uff09\u3002\u7ecf\u9a8c\u6559\u8bad\uff1a\u4ece docker \u6ce8\u518c\u8868\u5b58\u50a8\u4e2d\u624b\u52a8\u5220\u9664\u4efb\u4f55\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u90fd\u4f1a\u635f\u574f\u5b83\u3002\u76f4\u5230\u4eca\u5929\uff0c\u8fd8\u65e0\u6cd5\u4ece docker \u6ce8\u518c\u8868\u4e2d\u5220\u9664\u56fe\u50cf\u3002\u4e5f\u6ca1\u6709 API\u3002 \uff08v2 \u7684\u91cd\u70b9\u4e4b\u4e00\u662f\u62e5\u6709\u66f4\u597d\u7684 API\u3002\u4efb\u52a1\u5931\u8d25\uff09\u3002\u53d1\u5e03\u5468\u671f\u9002\u7528\u4f46\u4e0d\u9650\u4e8e\uff1adocker \u7248\u672c\u3001\u7279\u6027\u3001\u6587\u4ef6\u7cfb\u7edf\u3001docker \u6ce8\u518c\u8868\u3001\u6240\u6709 API\u2026\u2026\u4ece Docker \u8fc7\u53bb\u7684\u5386\u200b\u200b\u53f2\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd1\u4f3c\u5730\u4f30\u8ba1 Docker \u5236\u9020\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u6709\u5927\u7ea6 1 \u5e74\u7684\u534a\u8870\u671f\uff0c\u8fd9\u610f\u5473\u7740\u73b0\u5728\u5b58\u5728\u7684\u4e00\u534a\u5c06\u5728 1 \u5e74\u5185\u88ab\u653e\u5f03[\u548c\u7184\u706d]\u3002\u901a\u5e38\u4f1a\u6709\u53ef\u7528\u7684\u66ff\u4ee3\u54c1\uff0c\u5b83\u4e0e\u5b83\u5e94\u8be5\u66ff\u4ee3\u7684\u4e1c\u897f\u4e0d\u5b8c\u5168\u517c\u5bb9\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5728\u540c\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u201c\u6211\u4eec\u5236\u4f5c\u8f6f\u4ef6\u4e0d\u662f\u4e3a\u4e86\u8ba9\u4eba\u4eec\u4f7f\u7528\uff0c\u800c\u662f\u56e0\u4e3a\u6211\u4eec\u559c\u6b22\u5236\u4f5c\u65b0\u4e1c\u897f\u3002\u201d \u2014 \u672a\u6765\u7684 Docker \u5893\u5fd7\u94ed Docker \u6700\u521d\u662f\u901a\u8fc7 Web \u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u7684\u3002\u5f53\u65f6\uff0c\u8fd9\u662f\u5f00\u53d1\u4eba\u5458\u6253\u5305\u548c\u90e8\u7f72\u5b83\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u3002\u4ed6\u4eec\u5c1d\u8bd5\u5e76\u5f88\u5feb\u91c7\u7528\u4e86\u5b83\u3002\u7136\u540e\u5b83\u6269\u5c55\u5230\u4e00\u4e9b\u5fae\u670d\u52a1\uff0c\u56e0\u4e3a\u6211\u4eec\u5f00\u59cb\u91c7\u7528\u5fae\u670d\u52a1\u67b6\u6784\u3002\nWeb \u5e94\u7528\u7a0b\u5e8f\u548c\u5fae\u670d\u52a1\u662f\u76f8\u4f3c\u7684\u3002\u5b83\u4eec\u662f\u65e0\u72b6\u6001\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u53ef\u4ee5\u4e0d\u5047\u601d\u7d22\u5730\u542f\u52a8\u3001\u505c\u6b62\u3001\u7ec8\u6b62\u3001\u91cd\u65b0\u542f\u52a8\u3002\u6240\u6709\u56f0\u96be\u7684\u4e8b\u60c5\u90fd\u59d4\u6258\u7ed9\u5916\u90e8\u7cfb\u7edf\uff08\u6570\u636e\u5e93\u548c\u540e\u7aef\u7cfb\u7edf\uff09\u3002 Docker \u7684\u91c7\u7528\u59cb\u4e8e\u6b21\u8981\u7684\u65b0\u670d\u52a1\u3002\u8d77\u521d\uff0c\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u4e2d\u4e00\u5207\u6b63\u5e38\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684 Web \u670d\u52a1\u548c Web \u5e94\u7528\u7a0b\u5e8f\u88ab Docker \u5316\uff0c\u5185\u6838\u6050\u614c\u6162\u6162\u5f00\u59cb\u53d1\u751f\u3002\u968f\u7740\u6211\u4eec\u7684\u6210\u957f\uff0c\u7a33\u5b9a\u6027\u95ee\u9898\u53d8\u5f97\u66f4\u52a0\u7a81\u51fa\u548c\u5f71\u54cd\u3002\u4e00\u5e74\u4e2d\u53d1\u5e03\u4e86\u4e00\u4e9b\u8865\u4e01\u548c\u56de\u5f52\u3002\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4f7f\u7528 Docker \u8fdb\u884c\u8ffd\u8d76\u548c\u53d8\u901a\u3002\u8fd9\u5f88\u75db\u82e6\uff0c\u4f46\u4f3c\u4e4e\u5e76\u6ca1\u6709\u963b\u6b62\u4eba\u4eec\u91c7\u7528 Docker\u3002\u7ec4\u7ec7\u5185\u90e8\u7684\u652f\u6301\u548c\u9700\u6c42\u4ecd\u5728\u589e\u957f\u3002\u6ce8\u610f\uff1a\u8fd9\u4e9b\u6545\u969c\u90fd\u6ca1\u6709\u5f71\u54cd\u5230\u4efb\u4f55\u5ba2\u6237\u6216\u8d44\u91d1\u3002\u6211\u4eec\u5728\u5305\u542b Docker \u65b9\u9762\u975e\u5e38\u6210\u529f\u3002\u6211\u4eec\u6709\u4e00\u4e9b\u5728 Erlang \u4e2d\u8fd0\u884c\u7684\u5173\u952e\u5e94\u7528\u7a0b\u5e8f\uff0c\u7531\u201c\u6838\u5fc3\u201d\u56e2\u961f\u4e2d\u7684\u51e0\u4e2a\u4eba\u7ba1\u7406\u3002\u4ed6\u4eec\u8bd5\u56fe\u5728 Docker \u4e2d\u8fd0\u884c\u4ed6\u4eec\u7684\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u6ca1\u6709\u7528\u3002\u51fa\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0cErlang \u5e94\u7528\u7a0b\u5e8f\u548c docker \u6ca1\u6709\u5408\u4f5c\u3002\u8fd9\u662f\u5f88\u4e45\u4ee5\u524d\u5b8c\u6210\u7684\uff0c\u6211\u4eec\u4e0d\u8bb0\u5f97\u6240\u6709\u7684\u7ec6\u8282\u3002 Erlang \u5bf9\u7cfb\u7edf/\u7f51\u7edc\u7684\u884c\u4e3a\u65b9\u5f0f\u4ee5\u53ca\u9884\u671f\u7684\u8d1f\u8f7d\u662f\u6bcf\u79d2\u6570\u5343\u4e2a\u8bf7\u6c42\u6709\u7279\u522b\u7684\u60f3\u6cd5\u3002\u4efb\u4f55\u4e0d\u7a33\u5b9a\u6216\u4e0d\u517c\u5bb9\u90fd\u53ef\u80fd\u6210\u4e3a\u7a81\u51fa\u5931\u8d25\u7684\u7406\u7531\u3002 \uff08\u6211\u4eec\u73b0\u5728\u80af\u5b9a\u77e5\u9053\u8bd5\u7528\u671f\u95f4\u4f7f\u7528\u7684\u7248\u672c\u5b58\u5728\u591a\u4e2a\u4e3b\u8981\u7684\u4e0d\u7a33\u5b9a\u95ee\u9898\uff09\u3002\n\u5ba1\u5224\u63d0\u51fa\u4e86\u4e00\u4e2a\u5371\u9669\u4fe1\u53f7\u3002 Docker \u8fd8\u6ca1\u6709\u4e3a\u4efb\u4f55\u5173\u952e\u7684\u4e8b\u60c5\u505a\u597d\u51c6\u5907\u3002\u8fd9\u662f\u6b63\u786e\u7684\u7535\u8bdd\u3002\u540e\u6765\u7684\u5d29\u6e83\u548c\u95ee\u9898\u8bbe\u6cd5\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u53ea\u5c06 Erlang \u7528\u4e8e\u5173\u952e\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u6838\u5fc3\u4eba\u5458\u8d1f\u8d23\u4e00\u4e2a\u652f\u4ed8\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u672c\u6708\u5904\u7406\u4e86 96,544,800 \u7f8e\u5143\u7684\u4ea4\u6613\u3002\u5b83\u5305\u62ec\u51e0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u4ed6\u4eec\u7684\u804c\u8d23\u8303\u56f4\u5185\u3002 Docker \u662f\u4e00\u79cd\u5371\u9669\u7684\u8d1f\u503a\uff0c\u53ef\u80fd\u4f1a\u4f7f\u6570\u767e\u4e07\u4eba\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u5b83\u88ab\u7981\u6b62\u5728\u6240\u6709\u6838\u5fc3\u7cfb\u7edf\u4e2d\u4f7f\u7528\u3002 Docker \u662f\u65e0\u72b6\u6001\u7684\u3002\u5bb9\u5668\u6ca1\u6709\u6c38\u4e45\u7684\u78c1\u76d8\u5b58\u50a8\uff0c\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u90fd\u662f\u77ed\u6682\u7684\uff0c\u5f53\u5bb9\u5668\u505c\u6b62\u65f6\u5c31\u4f1a\u6d88\u5931\u3002\u5bb9\u5668\u4e0d\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4eec\u7684\u8bbe\u8ba1\u610f\u56fe\u662f\u4e0d\u5b58\u50a8\u6570\u636e\u3002\u4efb\u4f55\u8fdd\u80cc\u8fd9\u4e00\u7406\u5ff5\u7684\u4f01\u56fe\u90fd\u6ce8\u5b9a\u8981\u5931\u8d25\u3002\u800c\u4e14\u3002 Docker \u901a\u8fc7\u5176\u62bd\u8c61\u6765\u9501\u5b9a\u8fdb\u7a0b\u548c\u6587\u4ef6\uff0c\u5b83\u4eec\u65e0\u6cd5\u8bbf\u95ee\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u4e0d\u5b58\u5728\u4e00\u6837\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u5b83\u53ef\u4ee5\u9632\u6b62\u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u7684\u6062\u590d\u3002\u5d29\u6e83\u4f1a\u7834\u574f\u6570\u636e\u5e93\u5e76\u5f71\u54cd\u8fde\u63a5\u5230\u5b83\u7684\u6240\u6709\u7cfb\u7edf\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7684\u9519\u8bef\uff0c\u5728\u5bc6\u96c6\u4f7f\u7528\u4e0b\u4f1a\u66f4\u9891\u7e41\u5730\u89e6\u53d1\u3002\u6570\u636e\u5e93\u662f\u6700\u7ec8\u7684 IO \u5bc6\u96c6\u578b\u8d1f\u8f7d\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u4fdd\u8bc1\u7684\u5185\u6838\u6050\u614c\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u9519\u8bef\u53ef\u80fd\u4f1a\u7834\u574f docker \u6302\u8f7d\uff08\u7834\u574f\u6240\u6709\u6570\u636e\uff09\uff0c\u4e5f\u53ef\u80fd\u4f1a\u7834\u574f\u7cfb\u7edf\u6587\u4ef6\u7cfb\u7edf\uff08\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u4e2a\u78c1\u76d8\u4e0a\uff09\u3002\u5669\u68a6\u573a\u666f\uff1a\u4e3b\u673a\u5d29\u6e83\uff0c\u78c1\u76d8\u635f\u574f\uff0c\u7834\u574f\u4e3b\u673a\u7cfb\u7edf\u548c\u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002\n\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u5c31\u4f1a\u6709\u4eba\u6765\u95ee\u201c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u628a\u8fd9\u4e9b\u6570\u636e\u5e93\u653e\u5230 docker \u4e2d\u5462\uff1f\u201d\u6211\u4eec\u5c06\u8bb2\u8ff0\u6211\u4eec\u65e0\u6570\u7684\u6218\u4e89\u6545\u4e8b\u4e2d\u7684\u4e00\u4e9b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6ca1\u6709\u4eba\u95ee\u8fc7\u4e24\u6b21\u3002\u6ce8\u610f\uff1a\u6211\u4eec\u5f00\u59cb\u56de\u987e\u6211\u4eec\u7684 Docker \u5386\u53f2\uff0c\u5c06\u5176\u4f5c\u4e3a\u6211\u4eec\u5165\u804c\u6d41\u7a0b\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\u8fd9\u5c31\u662f\u65b0\u7684\u635f\u5bb3\u63a7\u5236\u7406\u5ff5\uff0c\u5728 docker \u6709\u673a\u4f1a\u6210\u957f\u5e76\u6740\u6b7b\u6211\u4eec\u4e4b\u524d\u627c\u6740\u5b83\u7684\u60f3\u6cd5\u3002 Docker \u6b63\u5728\u83b7\u5f97\u52a8\u529b\uff0c\u90a3\u91cc\u6709\u4e00\u4e9b\u75af\u72c2\u7684\u72c2\u70ed\u652f\u6301\u3002 docker \u7092\u4f5c\u4e0d\u518d\u53ea\u662f\u4e00\u79cd\u6280\u672f\u8d1f\u62c5\uff0c\u5b83\u4e5f\u5df2\u7ecf\u6f14\u53d8\u6210\u4e00\u4e2a\u793e\u4f1a\u5b66\u95ee\u9898\u3002\u76ee\u524d\u8fb9\u754c\u662f\u53d7\u63a7\u7684\uff0c\u4ec5\u9650\u4e8e\u4e00\u4e9b\u65e0\u72b6\u6001\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u548c\u5fae\u670d\u52a1\u3002\u8fd9\u662f\u4e0d\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u53ef\u4ee5\u88abdocker\u5316\u5e76\u6bcf\u5929\u5d29\u6e83\u4e00\u6b21\uff0c\u6211\u4e0d\u5728\u4e4e\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u60f3\u4f7f\u7528 docker \u6765\u5904\u7406\u91cd\u8981\u4e8b\u60c5\u7684\u4eba\u90fd\u5728\u5feb\u901f\u8ba8\u8bba\u540e\u505c\u6b62\u4e86\u3002\u6211\u6700\u5927\u7684\u6050\u60e7\u662f\u6709\u4e00\u5929\uff0c\u4e00\u4e2a docker \u72c2\u70ed\u8005\u4e0d\u4f1a\u542c\u4ece\u7406\u7531\u5e76\u7ee7\u7eed\u63a8\u52a8\u3002\u6211\u5c06\u88ab\u8feb\u5411\u4ed6\u53d1\u8d77\u731b\u653b\uff0c\u8fd9\u53ef\u80fd\u4e0d\u597d\u770b\u3002\u5669\u68a6\u573a\u666f\uff1a\u672a\u6765\u7684\u4f1a\u8ba1\u96c6\u7fa4\u6539\u9020\uff0c\u76ee\u524d\u6301\u6709 2300 \u4e07\u7f8e\u5143\u7684\u5ba2\u6237\u8d44\u91d1\uff08M \u4ee3\u8868\u767e\u4e07\u7f8e\u5143\uff09\u3002\u5df2\u7ecf\u6709\u4e00\u4e2a\u4eba\u771f\u8bda\u5730\u95ee\u67b6\u6784\u5e08\u201c\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u628a\u8fd9\u4e9b\u6570\u636e\u5e93\u653e\u5230docker\u91cc\uff1f\u201d\uff0c\u6ca1\u6709\u8bcd\u53ef\u4ee5\u5f62\u5bb9\u67b6\u6784\u5e08\u7684\u8138\u3002\u5bc6\u5207\u8ddf\u8e2a\u5185\u6838\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u53d1\u884c\u7248\u3001docker \u4ee5\u53ca\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u6240\u6709\u5185\u5bb9\u7684\u7248\u672c\u548c\u66f4\u6539\u65e5\u5fd7\u3002\u5bfb\u627e\u9519\u8bef\uff0c\u5e0c\u671b\u8865\u4e01\uff0c\u4ed4\u7ec6\u9605\u8bfb\u6240\u6709\u5185\u5bb9\u3002\n\u5076\u5c14\uff0c\u6211\u4eec\u4f1a\u67e5\u770b\u54ea\u4e9b\u670d\u52a1\u5668\u5df2\u6b7b\u673a\u5e76\u5f3a\u5236\u91cd\u65b0\u542f\u52a8\u5b83\u4eec\u3002\u9ad8\u53ef\u7528\u6027\u8981\u6c42\u6bcf\u4e2a\u670d\u52a1\u81f3\u5c11\u6709 2 \u4e2a\u5b9e\u4f8b\uff0c\u624d\u80fd\u5728\u4e00\u4e2a\u5b9e\u4f8b\u5931\u8d25\u540e\u5e78\u514d\u4e8e\u96be\u3002\u5f53\u5c06 docker \u7528\u4e8e\u4efb\u4f55\u8fdc\u7a0b\u91cd\u8981\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u6709 3 \u4e2a\u5b83\u7684\u5b9e\u4f8b\u3002 Docker \u4e00\u76f4\u90fd\u6b7b\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8bef\u5dee\u5e45\u5ea6\u6765\u652f\u6301\u540c\u4e00\u670d\u52a1\u7684\u539f\u59cb\u6570\u636e\u4e2d\u7684 2 \u6b21\u5d29\u6e83\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5d29\u6e83\u7684\u662f CI \u6216\u6d4b\u8bd5\u5b9e\u4f8b\u3002 \uff08\u4ed6\u4eec\u8fdb\u884c\u4e86\u5927\u91cf\u5bc6\u96c6\u6d4b\u8bd5\uff0c\u95ee\u9898\u7279\u522b\u7a81\u51fa\uff09\u3002\u6211\u4eec\u6709\u5f88\u591a\u8fd9\u6837\u7684\u3002\u6709\u65f6\u4e00\u4e2a\u4e0b\u5348\u6709 3 \u4e2a\u5b83\u4eec\u8fde\u7eed\u5d29\u6e83\u3002 Docker \u65e8\u5728\u4e0d\u5b58\u50a8\u6570\u636e\u3002\u4e0d\u8981\u53cd\u5bf9\u5b83\uff0c\u8fd9\u662f\u707e\u96be\u7684\u79d8\u8bc0\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5f53\u524d\u5b58\u5728\u6740\u6b7b\u670d\u52a1\u5668\u5e76\u53ef\u80fd\u7834\u574f\u6570\u636e\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u3002\u5b83\u5fc5\u987b\u4ec5\u9650\u4e8e\u53ef\u4ee5\u5d29\u6e83\u800c\u4e0d\u5bfc\u81f4\u505c\u673a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u65e0\u72b6\u6001\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u91cd\u65b0\u542f\u52a8\u3002\nDocker \u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u81ea\u52a8\u7f29\u653e\u7ec4\u4e2d\u8fd0\u884c\u3002 \uff08\u6ce8\u610f\uff1a\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u5168\u5230\u4f4d\uff09\u3002\u6bcf\u5f53\u5b9e\u4f8b\u5d29\u6e83\u65f6\uff0c\u5b83\u4f1a\u5728 5 \u5206\u949f\u5185\u81ea\u52a8\u66f4\u6362\u3002\u65e0\u9700\u624b\u52a8\u64cd\u4f5c\u3002\u81ea\u6108\u3002 Docker \u4e0d\u53ef\u80fd\u7684\u6311\u6218\u662f\u63d0\u4f9b\u5185\u6838 + \u53d1\u884c\u7248 + docker \u7248\u672c + \u6587\u4ef6\u7cfb\u7edf\u7684\u5de5\u4f5c\u7ec4\u5408\u3002\u73b0\u5728\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u4efb\u4f55\u7a33\u5b9a\u7684\u7ec4\u5408\uff08\u4e5f\u8bb8\u6ca1\u6709\uff1f\uff09\u3002\u6211\u4eec\u79ef\u6781\u5bfb\u627e\u4e00\u4e2a\uff0c\u4e0d\u65ad\u6d4b\u8bd5\u65b0\u7cfb\u7edf\u548c\u8865\u4e01\u3002\u505a\u4e00\u4e2a\u597d\u7684\u7a33\u5b9a\u7684\u8f6f\u4ef6\u9700\u89815\u5e74\u65f6\u95f4\uff0cDocker v1.0\u624d28\u4e2a\u6708\uff0c\u8fd8\u6ca1\u6765\u5f97\u53ca\u6210\u719f\u3002\u786c\u4ef6\u66f4\u65b0\u5468\u671f\u4e3a3\u5e74\uff0c\u5206\u53d1\u53d1\u5e03\u5468\u671f\u4e3a18-36\u4e2a\u6708\u3002 Docker \u5728\u4e0a\u4e00\u4e2a\u5468\u671f\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64\u7cfb\u7edf\u65e0\u6cd5\u8003\u8651\u4e0e\u5176\u517c\u5bb9\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5b83\u4f9d\u8d56\u4e8e\u8bb8\u591a\u76f8\u5bf9\u8f83\u65b0\u7684\u9ad8\u7ea7\u7cfb\u7edf\u5185\u90e8\u7ed3\u6784\uff0c\u4e5f\u6ca1\u6709\u65f6\u95f4\u6210\u719f\uff0c\u4e5f\u6ca1\u6709\u8fbe\u5230\u53d1\u884c\u7248\u3002\u76ee\u6807\uff1a\u7b49\u5f85\u4e8b\u60c5\u53d8\u5f97\u66f4\u597d\u3002\u5728\u6b64\u671f\u95f4\u5c3d\u91cf\u4e0d\u8981\u7834\u4ea7\u3002\nDocker \u4ec5\u9650\u4e8e\u65e0\u72b6\u6001\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6253\u5305\u4e3a Docker Image\uff0c\u5219\u53ef\u4ee5\u6253\u5305\u4e3a AMI\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728 Docker \u4e2d\u8fd0\u884c\uff0c\u5219\u5b83\u53ef\u4ee5\u5728 Auto Scaling \u7ec4\u4e2d\u8fd0\u884c\u3002\u5927\u591a\u6570\u4eba\u90fd\u5ffd\u7565\u4e86\u5b83\uff0c\u4f46 Docker \u5728 AWS \u4e0a\u6beb\u65e0\u7528\u5904\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u9000\u6b65\u4e86\u3002\u9996\u5148\uff0c\u5bb9\u5668\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5728\u540c\u4e00\u4e2a[\u5927]\u4e3b\u673a\u4e0a\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\u6765\u8282\u7701\u8d44\u6e90\u3002 \uff08\u8ba9\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u5f53\u524d\u6b63\u5728\u4f7f\u4e3b\u673a [\u53ca\u5176\u4e0a\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668] \u5d29\u6e83\u7684 docker \u9519\u8bef\uff0c\u8fd9\u8feb\u4f7f\u6211\u4eec\u5728\u6bcf\u4e2a\u4e3b\u673a\u4e0a\u4ec5\u8fd0\u884c 1 \u4e2a\u5bb9\u5668\u4ee5\u786e\u4fdd\u53ef\u9760\u6027\uff09\u3002\u56e0\u6b64\u5bb9\u5668\u5728\u4e91\u63d0\u4f9b\u5546\u4e0a\u662f\u65e0\u7528\u7684\u3002\u603b\u6709\u4e00\u4e2a\u5927\u5c0f\u5408\u9002\u7684\u5b9e\u4f8b\u3002\u53ea\u9700\u4e3a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u9002\u5f53\u5185\u5b58/CPU \u7684\u3002 \uff08AWS \u4e0a\u7684\u6700\u4f4e\u8981\u6c42\u662f t2.nano\uff0c\u5bf9\u4e8e 512MB \u548c 5% \u7684 CPU\uff0c\u6bcf\u6708 5 \u7f8e\u5143\uff09\u3002\u5176\u6b21\uff0c\u5bb9\u5668\u6700\u5927\u7684\u6536\u83b7\u662f\u5f53\u5468\u56f4\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u7f16\u6392\u7cfb\u7edf\u6765\u81ea\u52a8\u7ba1\u7406\u521b\u5efa/\u505c\u6b62/\u542f\u52a8/\u6eda\u52a8\u66f4\u65b0/canary-release/blue-green-deployment\u3002\u76ee\u524d\u5c1a\u4e0d\u5b58\u5728\u5b9e\u73b0\u8be5\u76ee\u6807\u7684\u7f16\u6392\u7cfb\u7edf\u3002 \uff08\u8fd9\u5c31\u662f Nomad/Mesos/Kubernetes \u6700\u7ec8\u4f1a\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u5b83\u4eec\u76ee\u524d\u7684\u72b6\u6001\u8fd8\u4e0d\u591f\u597d\uff09\u3002 AWS \u6709 Auto Scaling \u7ec4\u6765\u7ba1\u7406\u5b9e\u4f8b\u7684\u7f16\u6392\u548c\u751f\u547d\u5468\u671f\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0e Docker \u751f\u6001\u7cfb\u7edf\u5b8c\u5168\u65e0\u5173\u7684\u5de5\u5177\uff0c\u4f46\u5b83\u53ef\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u6ca1\u6709\u4efb\u4f55\u7f3a\u70b9\u548c\u9ebb\u70e6\u3002\u4e3a\u6bcf\u4e2a\u670d\u52a1\u521b\u5efa\u4e00\u4e2a\u81ea\u52a8\u4f38\u7f29\u7ec4\u5e76\u4e3a\u6bcf\u4e2a\u7248\u672c\u6784\u5efa\u4e00\u4e2a AMI\uff08\u63d0\u793a\uff1a\u4f7f\u7528 Packer \u6784\u5efa AMI\uff09\u3002\u5982\u679c\u64cd\u4f5c\u662f\u5728 AWS \u4e0a\u8fdb\u884c\u7684\uff0c\u4eba\u4eec\u5df2\u7ecf\u719f\u6089\u7ba1\u7406 AMI \u548c\u5b9e\u4f8b\uff0c\u6ca1\u6709\u66f4\u591a\u4e1c\u897f\u9700\u8981\u5b66\u4e60\uff0c\u4e5f\u6ca1\u6709\u9677\u9631\u3002\u7531\u6b64\u4ea7\u751f\u7684\u90e8\u7f72\u662f\u9ec4\u91d1\u548c\n......", "note_en": "My first encounter with docker goes back to early 2015. Docker was experimented with to find out whether it could benefit us. At the time it wasn\u2019t possible to run a container [in the background] and there wasn\u2019t any command to see what was running, debug or ssh into the container. The experiment was quick, Docker was useless and closer to an alpha prototype than a release.\n Fast forward to 2016. New job, new company and docker hype is growing like mad. Developers here have pushed docker into production projects, we\u2019re stuck with it. On the bright side, the run command finally works, we can start, stop and see containers. It is functional.\n We have 12 dockerized applications running in production as we write this article, spread over 31 hosts on AWS (1 docker app per host [note: keep reading to know why]).\n The following article narrates our journey with Docker, an adventure full of dangers and unexpected turns.\n      Each new version came with breaking changes. We started on docker 1.6 early this year to run a single application.\n We updated 3 months later because we needed a fix only available in later versions. The 1.6 branch was already abandoned.\n The versions 1.7 and 1.8 couldn\u2019t run. We moved to the 1.9 only to find a critical bug on it two weeks later, so we upgraded (again!) to the 1.10.\n There are all kind of subtle regressions between Docker versions. It\u2019s constantly breaking unpredictable stuff in unexpected ways.\n The most tricky regressions we had to debug were network related. Docker is entirely abstracting the host networking. It\u2019s a big mess of port redirection, DNS tricks and virtual networks.\n Bonus: Docker was removed from the official Debian repository last year, then the package got renamed from  docker.io to  docker-engine. Documentation and resources predating this change are obsolete.\n  The most requested and most lacking feature in Docker is a command to clean older images (older than X days or not used for X days, whatever).  Space is a critical issue given that images are renewed frequently and they may take more than 1GB each.\n The only way to clean space is to run this hack, preferably in cron every day:\n  It enumerates all images and remove them. The ones currently in use by running containers cannot be removed (it gives an error). It is dirty but it gets the job done.\n The docker journey begins with a clean up script. It is an initiation rite every organization has to go through.\n Many attempts can be found on the internet, none of which works well. There is no API to list images with dates, sometimes there are but they are deprecated within 6 months. One common strategy is to read date attribute from image files and call \u2018 docker rmi\u2018 but it fails when the naming changes. Another strategy is to read date attributes and delete files directly but it causes corruption if not done perfectly, and  it cannot be done perfectly except by Docker itself.\n  There are endless issues related to the interactions between the kernel, the distribution, docker and the filesystem\n We are using Debian stable with backports, in production. We started running on Debian Jessie 3.16.7-ckt20-1 (released November 2015). This one suffers from a major critical bug that crashes hosts erratically (every few hours in average).\n   The AUFS driver is unstable. It suffers from critical bugs provoking kernel panics and corrupting data.\n It\u2019s broken on [at least] all \u201clinux-3.16.x\u201d kernel. There is no cure.\n We follow Debian and kernel updates very closely. Debian published special patches outside the regular cycle. There was one major bugfix to AUFS around March 2016. We thought it was THE TRUE ONE FIX but it turned out that it wasn\u2019t. The kernel panics happened less frequently afterwards (every week, instead of every day) but they were still loud and present.\n Once during this summer there was a regression among a major update, that brought back a previous critical issue. It started killing CI servers one by one, with 2 hours in average between murders. An emergency patch was quickly released to fix the regression.\n There were multiple fixes to AUFS published along the year 2016. Some critical issues were fixed but there are many more still left.  AUFS is unstable on [at least] all \u201clinux-3.16.x\u201d kernels.\n Debian stable is stuck on kernel 3.16. It\u2019s unstable. There is nothing to do about it except switching to Debian testing (which can use the kernel 4).\n Ubuntu LTS is running kernel 3.19. There is no guarantee that this latest update fixes the issue. Changing our main OS would be a major disruption but we were so desperate that we considered it for a while.\n RHEL/CentOS-6 is on kernel 2.x and RHEL/CentoS-7 is on kernel 3.10 (with many later backports done by RedHat).\n  It is well-known that AUFS has endless issues and it\u2019s regarded as dead weight by the developers. As a long-standing goal,  the AUFS filesystem was finally dropped in kernel version 4.\n There is no unofficial patch to support it, there is no optional module, there is no backport whatsoever, nothing.  AUFS is entirely gone.\n           \u201c OverlayFS is a modern union filesystem that is similar to AUFS. In comparison to AUFS, OverlayFS has a simpler design, has been in the mainline Linux kernel since version 3.18 and is potentially faster.\u201d \u2014  Docker OverlayFS driver\n Note that it\u2019s not backported to existing distributions. Docker never cared about [backward] compatibility.\n Update after comments: Overlay is the name of both the kernel module to support it (developed by linux maintainers) and the docker storage driver to use it (part of docker, developed by docker). They are two different components [with a possible overlap of history and developers]. The issues seem mostly related to the docker storage driver, not the filesystem itself.\n  A filesystem driver is a complex piece of software and it requires a very high level of reliability. The long time readers will remember the Linux migration from ext3 to ext4. It took time to write, more time to debug and an eternity to be shipped as the default filesystem in popular distributions.\n Making a new filesystem in 1 year is an impossible mission. It\u2019s actually laughable when considering that the task is assigned to Docker, they have a track record of unstability and disastrous breaking changes, exactly what we don\u2019t want in a filesystem.\n Long story short. That did not go well. You can still find horror stories with Google.\n       \u201c The overlay2 driver addresses overlay limitations, but is only compatible with Linux kernel 4.0 [or later] and docker 1.12\u201d \u2014  Overlay vs Overlay2 storage drivers\n Making a new filesystem in 1 year is still an impossible mission. Docker just tried and failed. Yet they\u2019re trying again! We\u2019ll see how it turns out in a few years.\n Right now it\u2019s not supported on any systems we run. We can\u2019t use it, we can\u2019t even test it.\n Lesson learnt: As you can see with Overlay then Overlay2. No backport. No patch. No retro compatibility. Docker only moves forward and breaks things. If you want to adopt Docker, you\u2019ll have to move forward as well, following the releases from docker, the kernel, the distribution, the filesystems and some dependencies.\n  On 02 June 2016, at approximately 9am (London Time). New repository keys are pushed to  the docker public repository.\n As a direct consequence, any run of \u201c apt-get update\u201d (or equivalent) on a system configured with the broken repo will fail with an error \u201c Error  https://apt.dockerproject.org/ Hash Sum mismatch\u201d\n This issue is worldwide. It affects ALL systems on the planet configured with the docker repository.\u00a0It is confirmed on all Debian and ubuntu versions, independent of OS and docker versions.\n All CI pipelines in the world which rely on docker setup/update or a system setup/update are broken. It is impossible to run a system update or upgrade on an existing system. It\u2019s impossible to create a new system and install docker on it.\n After a while. We get an update from a docker employee: \u201c To give an update; I raised this issue internally, but the people needed to fix this are in the San Francisco timezone [8 hours difference with London], so they\u2019re not present yet.\u201d\n I personally announce that internally to our developers. Today, there is no Docker CI and we can\u2019t create new systems nor update existing systems which have a dependency on docker. All our hope lies on a dude in San Francisco, currently sleeping.\n [pause waiting for the fix, that\u2019s when free food and drinks come in handy]\n An update is posted from a Docker guy in Florida at around 3pm (London Time). He\u2019s awake, he\u2019s found out the issue and he\u2019s working on the fix.\n   That was a 7 hours interplanetary outage because of Docker. All that\u2019s left from the outage is a few messages on a  GitHub issue. There was no postmortem. It had little (none?) tech news or press coverage, in spite of the catastrophic failure.\n     There is a public registry operated by docker. As an organization, we also run our own internal docker registry. It\u2019s a docker image running inside docker on a docker host (that\u2019s quite meta). The docker registry is the most used docker image.\n There are 3 versions of the docker registry. The client can pull indifferently from any:\n The Trusted Registry, a (paid?) service mentioned everywhere in the doc, not sure what it is, just ignore it\n  The docker registry v2 is as a full rewrite. The registry v1 was retired soon after the v2 release.\n We had to install a new thing (again!) just to keep docker working. They changed the configuration, the URLs, the paths, the endpoints.\n The transition to the registry v2 was not seamless. We had to fix our setup, our builds and our deploy scripts.\n Lesson learnt: Do not trust on any docker tool or API. They are constantly abandoned\u00a0 and extinguished.\n One of the goal of the registry v2 is to bring a better API. It\u2019s documented  here, a documentation that we don\u2019t remember existed 9 months ago.\n  It\u2019s impossible to remove images from the docker registry. There is no garbage collection either, the doc mentions one but it\u2019s not real. (The images do have compression and de-duplication but that\u2019s a different matter).\n  We can\u2019t have a server with an unlimited amount of storage. Our registry ran out of space a few times, unleashing hell in our build pipeline, then we moved the image storage to S3.\n  We performed a manual clean-up 3 times in total. In all cases we had to stop the registry, erase all the storage and start a new registry container. (Luckily, we can re-build the latest docker images with our CI).\n Lesson learnt: Deleting any file or folder manually from the docker registry storage WILL corrupt it.\n To this day, it\u2019s not possible to remove an image from the docker registry. There is no API either. (One of the point of the v2 was to have a better API. Mission failed).\n    The release cycle applies but is not limited to: docker versions, features, filesystems, the docker registry, all API\u2026\n Judging by the past history of Docker, we can approximate that anything made by Docker has a half-life of about 1 year, meaning that  half of what exist now will be abandoned [and extinguished] in 1 year. There will usually be a replacement available, that is not fully compatible with what it\u2019s supposed to replace, and may or may not run on the same ecosystem (if at all).\n \u201c We make software not for people to use but because we like to make new stuff.\u201d \u2014 Future Docker Epitaph\n   Docker first came in through a web application. At the time, it was an easy way for the developers to package and deploy it. They tried it and adopted it quickly. Then it spread to some micro services, as we started to adopt a micro services architecture.\n Web applications and micro services are similar. They are stateless applications, they can be started, stopped, killed, restarted without thinking. All the hard stuff is delegated to external systems (databases and backend systems).\n The docker adoption started with minor new services. At first, everything worked fine in dev, in testing and in production. The kernel panics slowly began to happen as more web services and web applications were dockerized. The stability issues became more prominent and impactful as we grew.\n A few patches and regressions were published over the year. We\u2019ve been playing catchup &amp; workaround with Docker for a while now. It is a pain but it doesn\u2019t seem to discourage people from adopting Docker. Support and demand is still growing inside the organisation.\n Note: None of the failures ever affected any customer or funds. We are quite successful at containing Docker.\n  We have some critical applications running in Erlang, managed by a few guys in the \u2018core\u2019 team.\n They tried to run some of their applications in Docker. It didn\u2019t work. For some reasons, Erlang applications and docker didn\u2019t go along.\n It was done a long time ago and we don\u2019t remember all the details. Erlang has particular ideas about how the system/networking should behave and the expected load was in thousands of requests per second. Any unstability or incompatibility could justify an outstanding failure. (We know for sure now that the versions used during the trial suffered from multiple major unstability issues).\n The trial raised a red flag.  Docker is not ready for anything critical. It was the right call. The later crashes and issues managed to confirm it.\n We only use Erlang for critical applications. For example,  the core guys are responsible for a payment system that handled $96,544,800 in transaction this month. It includes a couple of applications and databases, all of which are under their responsibilities.\n Docker is a dangerous liability that could put millions at risk. It is banned from all core systems.\n  Docker is meant to be stateless. Containers have no permanent disk storage, whatever happens is ephemeral and is gone when the container stops. Containers are not meant to store data. Actually, they are meant by design to NOT store data. Any attempt to go against this philosophy is bound to disaster.\n Moreover. Docker is locking away processes and files through its abstraction, they are unreachable as if they didn\u2019t exist. It prevents from doing any sort of recovery if something goes wrong.\n   A crash would destroy the database and affect all systems connecting to it. It is an erratic bug, triggered more frequently under intensive usage. A database is the ultimate IO intensive load, that\u2019s a guaranteed kernel panic. Plus, there is another bug that can corrupt the docker mount (destroying all data) and possibly the system filesystem as well (if they\u2019re on the same disk).\n Nightmare scenario: The host is crashed and the disk gets corrupted, destroying the host system and all data in the process.\n  Every once in a while, someone will come and ask \u201c why don\u2019t we put these databases into docker?\u201d and we\u2019ll tell some of our numerous war stories, so far, no-one asked twice.\n Note: We started going over our Docker history as an integral part of our on boarding process. That\u2019s the new damage control philosophy, kill the very idea of docker before it gets any chance to grow and kill us.\n  Docker is gaining momentum, there is some crazy fanatic support out there.  The docker hype is not only a technological liability any more, it has evolved into a sociological problem as well.\n The perimeter is controlled at the moment, limited to some stateless web applications and micro services. It\u2019s unimportant stuff, they can be dockerized and crash once a day, I do not care.\n So far, all people who wanted to use docker for important stuff have stopped after a quick discussion. My biggest fear is that one day, a docker fanatic will not listen to reason and keep pushing. I\u2019ll be forced to barrage him and it might not be pretty.\n Nightmare scenario: The future accounting cluster revamp, currently holding $23M in customer funds (the M is for million dollars). There is already one guy who genuinely asked the architect \u201c why don\u2019t you put these databases into docker?\u201c, there is no word to describe the face of the architect.\n      Track versions and change logs closely for kernel, OS, distributions, docker and everything in between. Look for bugs, hope for patches, read everything with attention.\n    Once in a while, we look at which servers are dead and we force reboot them.\n  High availability require to have at least 2 instances per service, to survive one instance failure.\n When using docker for anything remotely important, we should have 3 instances of it. Docker die all the time, we need a margin of error to support 2 crashes in a raw to the same service.\n Most of the time, it\u2019s CI or test instances that crash. (They run lots of intensive tests, the issues are particularly outstanding). We\u2019ve got a lot of these. Sometimes there are 3 of them crashing in a row in an afternoon.\n   Docker is designed to NOT store data. Don\u2019t go against it, it\u2019s a recipe for disaster.\n On top, there are current issues killing the server and potentially destroying the data so that\u2019s really a big no-go.\n   It must be limited to applications which can crash without causing downtime. That means mostly stateless applications, that can just be restarted somewhere else.\n  Docker applications should be run in auto-scaling groups. (Note: We\u2019re not fully there yet).\n Whenever an instance is crashed, it\u2019s automatically replaced within 5 minutes. No manual action required. Self healing.\n   The impossible challenge with Docker is to come with a working combination of kernel + distribution + docker version + filesystem.\n Right now. We don\u2019t know of ANY combination that is stable (Maybe there isn\u2019t any?). We actively look for one, constantly testing new systems and patches.\n  It takes 5 years to make a good and stable software, Docker v1.0 is only 28 months old, it didn\u2019t have time to mature.\n The hardware renewal cycle is 3 years, the distribution release cycle is 18-36 months. Docker didn\u2019t exist in the previous cycle so systems couldn\u2019t consider compatibility with it. To make matters worse, it depends on many advanced system internals that are relatively new and didn\u2019t have time to mature either, nor reach the distributions.\n  Goal: Wait for things to get better. Try to not go bankrupt in the meantime.\n  Docker is limited to stateless applications. If an application can be packaged as a Docker Image, it can be packaged as an AMI. If an application can run in Docker, it can run in an auto scaling group.\n Most people ignore it but Docker is useless on AWS and it is actually a step back.\n First, the point of containers is to save resources by running many containers on the same [big] host. (Let\u2019s ignore for a minute the current docker bug that is crashing the host [and all running containers on it], forcing us to run only 1 container per host for reliability).\n Thus containers are useless on cloud providers. There is always an instance of the right size. Just create one with appropriate memory/CPU for the application. (The minimum on AWS is t2.nano which is $5 per month for 512MB and 5% of a CPU).\n Second, the biggest gain of containers is when there is a complete orchestration system around them to automatically manage creation/stop/start/rolling-update/canary-release/blue-green-deployment. The orchestration systems to achieve that currently do not exist. (That\u2019s where Nomad/Mesos/Kubernetes will eventually come in, there are not good enough in their present state).\n AWS has auto scaling groups to manage the orchestration and life cycle of instances. It\u2019s a tool completely unrelated to the Docker ecosystem yet it can achieve a better result with none of the drawbacks and fuck-ups.\n Create an auto-scaling group per service and build an AMI per version (tip: use  Packer to build AMI). People are already familiar with managing AMI and instances if operations are on AWS, there isn\u2019t much more to learn and there is no trap. The resulting deployment is golden and \n......", "posttime": "2021-07-27 23:59:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "docker,\u5931\u8d25,production", "title": "\u751f\u4ea7\u4e2d\u7684 Docker\uff1a\u5931\u8d25\u7684\u5386\u53f2\uff082016 \u5e74\uff09", "title_en": "Docker in Production: A History of Failure (2016)", "transed": 1, "url": "https://thehftguy.com/2016/11/01/docker-in-production-an-history-of-failure/", "via": "", "real_tags": ["docker", "\u5931\u8d25"]}, {"category": "", "categoryclass": "", "imagename": "f8a7c2d91f504ba57afb059e56cd908c.jpg", "infoid": 1070084, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u4e00\u4f4d\u5ba2\u6237\u8981\u6c42\u6211\u4eec\u4e3a\u4ed6\u4eec\u5f00\u53d1\u65b0\u7684\u89c4\u5219\u5f15\u64ce\u3002\u8be5\u7cfb\u7edf\u5145\u5f53\u9ad8\u5ea6\u53ef\u914d\u7f6e\u4eea\u8868\u677f\u7684\u540e\u7aef\uff0c\u975e\u6280\u672f\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u5b9a\u4e49\u7cfb\u7edf\u7279\u5b9a\u7ec4\u4ef6\u884c\u4e3a\u7684\u4e1a\u52a1\u89c4\u5219\u3002\u90e8\u7f72\u540e\uff0c\u8be5\u7cfb\u7edf\u5fc5\u987b\u5904\u7406\u5927\u91cf\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u56e0\u6b64\u6027\u80fd\u4e5f\u662f\u4e00\u4e2a\u5173\u952e\u8003\u8651\u56e0\u7d20\u3002\u53ef\u914d\u7f6e - \u5e94\u4e3a\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u5207\u6362\u4ee5\u4ece\u56fa\u5b9a\u7c7b\u578b\u7684\u89c4\u5219\u4e2d\u83b7\u5f97\u6240\u9700\u7684\u884c\u4e3a\u3002\u5feb\u901f - \u8be5\u7cfb\u7edf\u5e94\u8be5\u80fd\u591f\u6bcf\u79d2\u5904\u7406\u6570\u767e\u4e2a\u9a8c\u8bc1\u8bf7\u6c42\u3002\u5065\u58ee - \u7cfb\u7edf\u4e0d\u5e94\u8be5\u5b95\u673a\uff0c\u5e76\u4e14\u5e94\u8be5\u5f88\u5bb9\u6613\u5373\u65f6\u4fee\u6539\u3002\u58f0\u660e\u6027 - \u4ea7\u54c1\u7ecf\u7406\u5e94\u8be5\u80fd\u591f\u67e5\u770b\u89c4\u5219\u4ee3\u7801\u5e76\u5bf9\u89c4\u5219\u7684\u4f5c\u7528\u6709\u76f8\u5f53\u51c6\u786e\u7684\u7406\u89e3\u3002\u4e3a\u4e86\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\uff0c\u6211\u4eec\u51b3\u5b9a\u7f16\u5199\u4e00\u4e2a\u5c0f\u578b\u5d4c\u5165\u5f0f\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08eDSL\uff09\u6765\u652f\u6301\u7f16\u5199\u58f0\u660e\u5f0f\u9a8c\u8bc1\u89c4\u5219\u3002\u672c\u6587\u5c06\u5c55\u793a\u751f\u4ea7\u4e2d\u4f7f\u7528\u7684\u5b9e\u9645\u8bed\u8a00\u7684\u7b80\u5316\u7248\u672c\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u6d45\u5d4c\u5165\uff0c\u4e5f\u79f0\u4e3a\u5355\u6001\u6700\u7ec8\u65e0\u6807\u7b7e\u7f16\u7801\u3002\u6211\u4eec\u5fc5\u987b\u95ee\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u6267\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u800c\u662f\u6211\u4eec\u7684\u95ee\u9898\u6216\u9886\u57df\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff0c\u8fd9\u901a\u5e38\u79f0\u4e3a\u6307\u79f0\u8bbe\u8ba1\u3002\n\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u76f8\u5bf9\u7b80\u5355\u2014\u2014\u9a8c\u8bc1\u662f\u4ece\u8f93\u5165\u503c\u5230\u5b83\u662f\u5426\u6709\u6548\u7684\u6620\u5c04\u3002\u5c06\u5176\u653e\u5165\u4ee3\u7801\u4e2d\uff1a\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u5e2e\u52a9\u6211\u4eec\u6784\u5efa\u8fd9\u4e9b\u9a8c\u8bc1\u89c4\u5219\u7684\u51fd\u6570\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u57fa\u672c\u89c4\u5219\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5c3e\u968f\u201c_\u201d\u7684\u7ea6\u5b9a\u6765\u907f\u514d\u540d\u79f0\u51b2\u7a81\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u662f\u7b49\u5f0f\u89c4\u5219\uff1a eq_ :: Eq a =&gt; a -&gt; ValidationRule a eq_ ruleValue = ValidationRule $ \\actual -&gt; actual == ruleValue \u5728\u4e0a\u9762\uff0c ruleValue \u662f\u5d4c\u5165\u5728 ValidationRule \u4e2d\u7684\u503c\uff0c\u800c actual \u662f\u6b64\u89c4\u5219\u5c06\u5728\u9a8c\u8bc1\u64cd\u4f5c\u671f\u95f4\u5c1d\u8bd5\u9a8c\u8bc1\u7684\u503c\u3002\u5982\u4f55\u6784\u5efa\u548c\u914d\u7f6e\u6b64\u89c4\u5219\u7684\u4e00\u4e2a\u793a\u4f8b\u662f\uff1a \u6211\u4eec\u5df2\u7ecf\u770b\u5230\u89c4\u5219\u7531\u9759\u6001\u548c\u52a8\u6001\u90e8\u5206\u7ec4\u6210\u3002\u89c4\u5219\u7684\u5f62\u72b6\u7531\u51fd\u6570 eq_ \u9759\u6001\u786e\u5b9a\uff0c\u4f46\u503c\uff08\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4e3a 5\uff09\u53ef\u4ee5\u662f\u4efb\u4f55\u8fd0\u884c\u65f6\u503c\u3002 eq_ \u4e0d\u662f\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u7684\u552f\u4e00\u89c4\u5219\u3002\u8ba9\u6211\u4eec\u5236\u5b9a\u4e00\u4e9b\u66f4\u57fa\u672c\u7684\u89c4\u5219\uff1a lt_, gt_ :: Ord a =&gt; a -&gt; ValidationRule a gt_ ruleValue = ValidationRule $ \\actual -&gt; actual &gt; ruleValue lt_ ruleValue = ValidationRule $ \\actual -&gt; actual &lt; ruleValue \u6709\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u7684eDSL \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u503c\u4e0e\u67d0\u7269\u8fdb\u884c\u6bd4\u8f83\u7684\u65b9\u6cd5\uff0c\u4f46\u4ec5\u6b64\u4e00\u9879\u5e76\u4e0d\u662f\u5f88\u6709\u7528\u3002\u6bcf\u6b21\u51fa\u73b0\u65b0\u7684\u4e1a\u52a1\u7528\u4f8b\u65f6\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5236\u5b9a\u5b9a\u5236\u89c4\u5219\uff0c\u4f46\u6211\u4eec\u9700\u8981\u7684\u662f\u5efa\u7acb\u66f4\u5927\u9a8c\u8bc1\u7684\u80fd\u529b\u3002\u5728\u5e03\u5c14\u903b\u8f91\u4e2d\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u5408\u53d6\u548c\u6790\u53d6\u8fd0\u7b97\uff0c\u4e5f\u79f0\u4e3a AND \u548c OR\u3002\u8ba9\u6211\u4eec\u5199\u4e0b\u5b83\u4eec\uff1a\nand_, or_ :: ValidationRule a -&gt; ValidationRule a -&gt; ValidationRule a and_ rule1 rule2 = ValidationRule $ \\actual -&gt; validate rule1 actual &amp;&amp; validate rule2 actual or_ rule1 rule2 = ValidationRule $ \\actual -&gt; validate rule1 actual || validate rule2 actual not_ :: ValidationRule a -&gt; ValidationRule a not_ rule = ValidationRule $ \\actual -&gt; not $ validate rule actual \u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u5230\u76ee\u524d\u4e3a\u6b62\u7f16\u5199\u7684\u89c4\u5219\u6765\u521b\u5efa\u65b0\u7684\u7ec4\u5408\u5b50\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u5927\u4e8e\u6216\u7b49\u4e8e\u8fd0\u7b97\u7b26\uff08\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u4e3a &gt;=\uff09\uff1a geq_ :: Ord a =&gt; a -&gt; ValidationRule a geq_ value = gt_ value `or_` eq_ value \u76ee\u524d\uff0c\u4ecd\u7136\u6709\u4e00\u4e2a\u5173\u952e\u7684\u9650\u5236\u6211\u4eec\u7684\u8bed\u8a00\u3002\u6240\u6709\u8fd9\u4e9b\u89c4\u5219\u90fd\u9700\u8981\u5c5e\u4e8e\u540c\u4e00\u7c7b\u578b\uff0c\u6211\u4eec\u65e0\u6cd5\u66f4\u6539\u8be5\u7c7b\u578b\u3002\u901a\u5e38\uff0c\u5f53\u6211\u4eec\u770b\u5230\u770b\u8d77\u6765\u50cf fa \u7684\u4e1c\u897f\u5e76\u4e14\u60f3\u8981 fb \u65f6\uff0c\u6211\u4eec\u4f1a\u5728 Functor \u7c7b\u578b\u7c7b\u4e0a\u627e\u5230 fmap\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e3a\u6211\u4eec\u7684\u7c7b\u578b\u7f16\u5199\u5b83\uff1a instance Functor ValidationRule where fmap :: (a -&gt; b) -&gt; ValidationRule a -&gt; ValidationRule b fmap f rule = ValidationRule $ \\actual -&gt; validate rule ????\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570 a -&gt; b \u548c\u4e00\u4e2a ValidationRule a \u5e76\u4e14\u60f3\u8981\u4e00\u4e2a ValidationRule b\u3002\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u65b0\u7684\u9a8c\u8bc1\u89c4\u5219\u65f6\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u503c actual :: b \u4f46\u9a8c\u8bc1\u89c4\u5219\u9700\u8981 a \u7c7b\u578b\u7684\u4e1c\u897f\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570 b -&gt; a \u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u7136\u800c\uff0cf \u4e0e\u6211\u4eec\u9700\u8981\u7684\u6b63\u597d\u76f8\u53cd\u3002\u770b\u8d77\u6765\u6211\u4eec\u60f3\u8981\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u53cd\u5411\u51fd\u5b50\u7684\u4e1c\u897f\uff1a\nnotQuiteFmap :: (b -&gt; a) -&gt; ValidationRule a -&gt; ValidationRule b notQuiteFmap f rule = ValidationRule $ \\actual -&gt; validate rule (f actual) \u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u540d\u5b57\uff0ccontramap\uff0c\u5b83\u5c5e\u4e8e\u4e5f\u79f0\u4e3a\u9006\u53d8\u51fd\u5b50\u4f5c\u4e3a\u534f\u51fd\u3002 Contravariant \u7684\u6587\u6863\u5b9a\u4e49\u4e86\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\uff1a\u5728 Haskell \u4e2d\uff0c\u4eba\u4eec\u53ef\u4ee5\u5c06 Functor \u89c6\u4e3a\u5305\u542b\u6216\u4ea7\u751f\u503c\uff0c\u800c\u9006\u53d8\u51fd\u5b50\u662f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u6d88\u8d39\u503c\u7684\u51fd\u5b50\u3002\u5b9e\u9645\u4e0a\uff0c\u4f7f\u7528\u7684\u793a\u4f8b\u662f Predicate a\uff0c\u5b83\u4e0e\u6211\u4eec\u7684\u7c7b\u578b ValidationRule a \u5b8c\u5168\u76f8\u540c\u3002\u5f53\u4f60\u80fd\u627e\u5230\u4e00\u4e2a\u9884\u5148\u5b58\u5728\u7684\u7c7b\u578b\u6765\u9a8c\u8bc1\u4f60\u7684\u65b9\u6cd5\u65f6\uff0c\u603b\u662f\u5f88\u597d\u7684\u3002\u63d0\u4f9b\u7684\u793a\u4f8b\uff08\u68c0\u67e5\u5e10\u6237\u4f59\u989d\u662f\u5426\u900f\u652f\uff09\u5f88\u597d\u5730\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 contramap\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u5b9e\u73b0\u5b83\u3002\u9996\u5148\u6211\u4eec\u8bbe\u7f6e\u6211\u4eec\u8d26\u6237\u7684\u6570\u636e\u7c7b\u578b\u548c\u6211\u4eec\u7684\u5426\u5b9a\u89c4\u5219\uff0c\u5b83\u662f\u4e00\u4e2a\u6574\u6570\uff1a data Account = Account { accountBalance :: Integer , accountName :: Text , accountOwner :: Text } negative_ :: ValidationRule Integer negative_ = lt_ 0 \u6211\u4eec\u5e0c\u671b\u80fd\u591f\u9a8c\u8bc1\u4e00\u4e2a\u5e10\u6237\uff0c\u4f46\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u9002\u7528\u4e8e Integer \u7684\u89c4\u5219\uff0c\u6211\u4eec\u4e0d\u60f3\u7f16\u5199\u5927\u91cf\u4e00\u6b21\u6027\u89c4\u5219\u3002\u8fd9\u662f\u6211\u4eec\u53ef\u4ee5\u5e94\u7528 contramap \u529f\u80fd\u7684\u5730\u65b9\uff1a\n\u8fd9\u76f8\u5f53\u7b80\u6d01\uff0c\u90a3\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u7528\u7b80\u5355\u7684\u82f1\u8bed\uff0c\u5982\u679c accountBalance\uff08\u6211\u4eec\u4f7f\u7528 contramap \u7684\u5b57\u6bb5\u7684\u540d\u79f0\uff09\u662fnegative_\uff08\u6211\u4eec contramap \u7684\u89c4\u5219\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4 Account\uff08\u6b63\u5728\u9a8c\u8bc1\u7684\u7c7b\u578b\uff09\u88ab\u900f\u652f\uff08\u51fd\u6570\u7684\u540d\u79f0\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u8fd9\u5728\u66f4\u5927\u7684\u9a8c\u8bc1\u4e2d\u4f7f\u7528\uff1a accountOwnedBy :: Text -&gt; ValidationRule Account accountOwnedBy owner = contramap accountOwner $ eq_ownerdrawingAllowed :: ValidationRule AccountdrawingAllowed = accountOwnedBy &quot;Alice&quot; `and_` (not_ overdrawn) \u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5236\u5b9a\u76f8\u5f53\u590d\u6742\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u51e0\u4e4e\u50cf\u82f1\u8bed\u4e00\u6837\u9010\u5b57\u9605\u8bfb\u3002 \u201c\u5982\u679c\u8be5\u5e10\u6237\u7531 Alice \u6240\u6709\u5e76\u4e14\u6ca1\u6709\u900f\u652f\uff0c\u5219\u5141\u8bb8\u5bf9\u8be5\u5e10\u6237\u8fdb\u884c\u63d0\u6b3e\u3002\u201d\u8fd9\u5f88\u9177\uff0c\u4f46\u6211\u4eec\u5f00\u59cb\u770b\u5230 API \u78e8\u635f\u7684\u4eba\u4f53\u5de5\u7a0b\u5b66\u3002\u770b\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u77e5\u9053\u662f\u5426\u5141\u8bb8\u63d0\u6b3e\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0d\u5141\u8bb8\u63d0\u6b3e\u3002\u4f8b\u5982\uff0c\u5931\u8d25\u53ef\u80fd\u662f\u7531\u4e8e\u5e10\u6237\u900f\u652f\u800c\u53d1\u751f\u7684\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u5e10\u6237\u7684\u6240\u6709\u8005\u662f Bob \u800c\u4e0d\u662f Alice\u3002\u8ba9\u6211\u4eec\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u6211\u4eec\u7684\u8bed\u4e49\u57df\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u8ddf\u8e2a\u5931\u8d25\u7684\u539f\u56e0\u3002\u4e3a\u4e86\u8ddf\u8e2a\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a Validation \u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 Bool \u4f5c\u4e3a\u6211\u4eec\u7684\u8fd4\u56de\u503c\uff1a type ErrMsg = Text data Validation err = Success |\u5931\u8d25 err \u7c7b\u578b ValidationResult = Validation [ ErrMsg] \u6210\u529f :: ValidationResult \u6210\u529f = \u6210\u529f\u5931\u8d25 :: ErrMsg -&gt; ValidationResult \u5931\u8d25 errMsg = \u5931\u8d25 [errMsg] newtype ValidationRule a = ValidationRule { validate :: a -&gt; ValidationResult } \u6211\u4eec\u5c06\u9700\u8981\u73b0\u5728\u91cd\u5199\u6211\u4eec\u7684\u6838\u5fc3\u51fd\u6570\u4ee5\u4f7f\u7528\u65b0\u7684\u8868\u793a\u3002\u6211\u4eec\u53ea\u4f1a\u91cd\u5199\u5176\u4e2d\u7684\u4e00\u4e9b\u3002\u5176\u4f59\u7684\u7559\u7ed9\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002\neq_ :: ( Show a, Eq a) =&gt; a -&gt; ValidationRule a eq_ value = ValidationRule $ \\actual -&gt; if actual == value then success else failure (Text.pack $ &quot;Expected &quot; &lt;&gt; show actual &lt;&gt; &quot;\u7b49\u4e8e &quot; &lt;&gt; \u663e\u793a\u503c) and_ :: ValidationRule a -&gt; ValidationRule a -&gt; ValidationRule a and_ rule1 rule2 = ValidationRule $ \\actual -&gt; case (validate rule1 actual, validate rule2 actual) of ( Failure e1, Failure e2) - &gt; \u5931\u8d25 (e1 &lt;&gt; e2) ( \u5931\u8d25 e1, _) -&gt; \u5931\u8d25 e1 (_, \u5931\u8d25 e2) -&gt; \u5931\u8d25 e2 ( \u6210\u529f, \u6210\u529f) -&gt; \u6210\u529f or_ :: ValidationRule a -&gt; ValidationRule a -&gt; ValidationRule a or_ rule1 rule2 = ValidationRule $ \\actual -&gt; case (validate rule1 actual, validate rule2 actual) of ( Failure e1, Failure e2) -&gt; Failure (e1 &lt;&gt; e2) ( Success, _) -&gt; Success (_, Success) - &gt; \u6210\u529f \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u6211\u4eec\u7684\u9a8c\u8bc1\u529f\u80fd\uff0c\u5982\u679c\u6709\u5931\u8d25\uff0c\u6211\u4eec\u5c06\u77e5\u9053\u9a8c\u8bc1\u5931\u8d25\u7684\u539f\u56e0\u3002\u6700\u597d\u7684\u90e8\u5206\u662f\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u5fc5\u66f4\u6539\u9876\u7ea7\u89c4\u5219\u7684\u7f16\u5199\u65b9\u5f0f\uff08\u5c3d\u7ba1\u6211\u4eec\u5fc5\u987b\u91cd\u65b0\u7f16\u8bd1\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5145\u5206\u5229\u7528\u591a\u6001\u6700\u7ec8\u65e0\u6807\u8bb0\u65b9\u6cd5\uff09\u3002\u7531\u4e8e\u53ea\u6709\u6211\u4eec\u7684\u539f\u8bed\u77e5\u9053 ValidationResult\uff0c\u56e0\u6b64\u5728\u6b64\u66f4\u6539\u671f\u95f4\u6211\u4eec\u4e0d\u5fc5\u66f4\u65b0\u4efb\u4f55\u66f4\u590d\u6742\u7684\u4e1a\u52a1\u89c4\u5219\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u521b\u5efa eDSL \u89e3\u51b3\u4e86\u53ef\u914d\u7f6e\u9a8c\u8bc1\u7684\u95ee\u9898\uff0c\u8be5 eDSL \u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u7ec4\u5408\u539f\u59cb\u89c4\u5219\u6765\u521b\u5efa\u590d\u6742\u7684\u4e1a\u52a1\u89c4\u5219\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u9a8c\u8bc1\u8f93\u5165\u7684\u6027\u80fd\u975e\u5e38\u597d\uff0c\u56e0\u4e3a\u5728\u7ec4\u5408\u51fd\u6570\u65f6\u51e0\u4e4e\u6ca1\u6709\u89e3\u91ca\u6027\u5f00\u9500\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u90a3\u6837\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c55\u793a\u7684 eDSL \u53ea\u6bd4\u6211\u4eec\u4e3a\u5ba2\u6237\u6784\u5efa\u7684\u7a0d\u5fae\u7b80\u5355\u4e00\u70b9\uff0c\u5e76\u4e14\u6e05\u695a\u5730\u8bf4\u660e\u4e86\u6838\u5fc3\u601d\u60f3\u3002\u50cf\u8fd9\u6837\u7684\u8bed\u8a00\u53ef\u4ee5\u6839\u636e\u9700\u8981\u7ee7\u7eed\u53d1\u5c55\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u91cd\u5199\u73b0\u6709\u7684\u89c4\u5219\uff0c\u6b63\u5982\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u3002\u6211\u4eec\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u6ca1\u6709\u6d89\u53ca\u7684\u4e00\u4e2a\u65b9\u9762\u662f\u5411\u89c4\u5219\u6dfb\u52a0\u4e0a\u4e0b\u6587\uff0c\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u770b\u5230\u6211\u4eec\u7684\u539f\u59cb\u89c4\u5219\u4e4b\u4e00\u76f8\u5bf9\u4e8e\u66f4\u5927\u7684\u9a8c\u8bc1\u5931\u8d25\u7684\u5730\u65b9\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u671f\u671b\u201cAlice\u201d\u4f46\u5728\u201cBob\u201d\u7684\u4e0a\u4e0b\u6587\u4e2d\u5f97\u5230\u4e86\u201cBob\u201d\uff09\u9a8c\u8bc1\u5e10\u6237\u6240\u6709\u8005\uff09\u3002 Ben Levy \u548c Christian Charukiewicz \u662f Foxhound Systems \u7684\u5408\u4f19\u4eba\u548c\u9996\u5e2d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002\u5728 Foxhound Systems\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u6784\u5efa\u5feb\u901f\u53ef\u9760\u7684\u5b9a\u5236\u8f6f\u4ef6\u3002\u60a8\u662f\u5426\u6b63\u5728\u5bfb\u6c42\u6709\u5173\u60a8\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u5e2e\u52a9\uff1f\u8bf7\u901a\u8fc7 info@foxhound.systems \u4e0e\u6211\u4eec\u8054\u7cfb\u3002", "note_en": "Recently, a client asked us to work on a new  Rules Engine for them. This system serves as the back end to a highly configurable dashboard where non-technical users define business rules for how a certain component of the system behaves. When deployed, this system has to handle a substantial production workload, so performance is also a key consideration.\n  Configurable - The end user should be given toggles to get the desired behavior from the fixed kinds of rules.\n Fast - This system should be able to handle several hundred validation requests per second.\n Robust - The system should not go down and should be easy to modify on the fly.\n  Declarative - A product manager should be able to look at the rule code and have a reasonably accurate understanding as to what the rule is doing.\n  In order to meet the above requirements, we decided to write a small  embedded domain-specific language (eDSL) to enable writing declarative validation rules. This article will show a simplified version of the actual language being used in production. We will be using a shallow embedding also known as a monomorphic  final tagless encoding.\n The first question that we must ask ourselves is not what operations we want to perform but what is the essence of our problem or domain, this is often called  denotational design.\n In our case, this is relatively simple\u2014a  validation is a mapping from an input value to whether it is valid or not. Putting this into code:\n  Given this as a basis we can start to write functions that help us to build these validation rules, for our basic rules we will use a convention of a trailing &#34;_&#34; to avoid name collisions. A simple example is the equality rule:\n eq_ ::  Eq a  =&gt; a  -&gt;  ValidationRule a  eq_ ruleValue  =  ValidationRule  $ \\actual  -&gt; actual  == ruleValue\n In the above,  ruleValue is a value that is embedded in the  ValidationRule whereas  actual is the value that this rule will attempt to validate during a validation operation. An example of how this rule can be built and configured is:\n  Already we see that rules are composed of both static and dynamic parts. The shape of the rule is statically determined by the function  eq_ but the value (which is  5 in our example) can be any runtime value.  eq_ isn\u2019t the only rule we may want. Let\u2019s make a few more basic rules:\n lt_,  gt_ ::  Ord a  =&gt; a  -&gt;  ValidationRule a  gt_ ruleValue  =  ValidationRule  $ \\actual  -&gt; actual  &gt; ruleValue  lt_ ruleValue  =  ValidationRule  $ \\actual  -&gt; actual  &lt; ruleValue\n  With this, our eDSL gives us a way to compare a value to something, but this alone is not very useful. We can make bespoke rules each time there is a new business use case, but what we need is the ability to build up larger validations. In boolean logic we have two main operations for conjunction and disjunction also know as  AND and  OR. Let\u2019s write them:\n and_,  or_ ::  ValidationRule a  -&gt;  ValidationRule a  -&gt;  ValidationRule a  and_ rule1 rule2  =  ValidationRule  $ \\actual  -&gt;   validate rule1 actual  &amp;&amp; validate rule2 actual  or_ rule1 rule2  =  ValidationRule  $ \\actual  -&gt;   validate rule1 actual  || validate rule2 actual\n  not_ ::  ValidationRule a  -&gt;  ValidationRule a  not_ rule  =  ValidationRule  $ \\actual  -&gt;  not  $ validate rule actual\n We can compose the rules we have written so far to create new combinators. Let\u2019s create the  greater than or equal to operator ( &gt;= in most languages):\n geq_ ::  Ord a  =&gt; a  -&gt;  ValidationRule a  geq_ value  = gt_ value  `or_` eq_ value\n  At the moment, there is still a key limitation with our language. All of these rules need to be of the same type and we do not have a way to change that type. Usually when we see something that looks like  f a and we want  f b we reach for  fmap on the  Functor type class. Let\u2019s try to write that for our type:\n instance  Functor  ValidationRule  where    fmap :: (a  -&gt; b)  -&gt;  ValidationRule a  -&gt;  ValidationRule b    fmap f rule  =  ValidationRule  $ \\actual  -&gt;   validate rule  ????\n We have run into a problem, we have a function  a -&gt; b and a  ValidationRule a and want a  ValidationRule b. This means when we try to construct our new validation rule we have a value  actual :: b but  validate rule needs something of type  a. If we had a function  b -&gt; a we could achieve this. However,  f is the reverse of what we need. It seems like we want something that is like a reverse functor:\n notQuiteFmap :: (b  -&gt; a)  -&gt;  ValidationRule a  -&gt;  ValidationRule b  notQuiteFmap f rule  =  ValidationRule  $ \\actual  -&gt;   validate rule (f actual)\n This function has a name,  contramap, and it belongs to the   Contravariant Functor also known as a Cofunctor. The documentation for  Contravariant defines the difference between the two:\n Whereas in Haskell, one can think of a  Functor as containing or producing values, a contravariant functor is a functor that can be thought of as consuming values.\n In fact, the example used is  Predicate a which is exactly the same as our type  ValidationRule a. It\u2019s always nice when you can find a preexisting type to validate your approach.\n The example provided (checking whether an account balance is overdrawn) is good demonstration of how to use  contramap, so let\u2019s implement it. First we set up the data type of our account and our negative rule which is in terms of an  Integer:\n data  Account  =  Account   {  accountBalance ::  Integer   ,  accountName ::  Text   ,  accountOwner ::  Text   }     negative_ ::  ValidationRule  Integer  negative_  = lt_  0\n We want to be able to validate an  Account but we only have a rule that works on  Integer and we don\u2019t want to be writing lots of one-off rules. This is where we can apply the  contramap function:\n  That\u2019s fairly terse, so what does it mean? In plain English we can say an  Account (the type that\u2019s being validated) is  overdrawn (the name of the function) if the  accountBalance (the name of the field we are using  contramap with) is  negative_ (the rule we contramapped). We can imagine this being used in a larger validation:\n accountOwnedBy ::  Text  -&gt;  ValidationRule  Account  accountOwnedBy owner  = contramap accountOwner  $ eq_ owner     withdrawalAllowed ::  ValidationRule  Account  withdrawalAllowed  =   accountOwnedBy  &#34;Alice&#34;  `and_` (not_ overdrawn)\n So we are now able to make fairly complex validation rules which read almost verbatim like English. \u201cA withdrawal on this Account is allowed if the account is owned by Alice and it is not overdrawn.\u201d That\u2019s pretty cool but we\u2019re starting to see the ergonomics of our API fray.\n  Looking at the above example, we know if a withdrawal is allowed or not but we don\u2019t know why it is not allowed. For example, the failure may have occurred due to the account being overdrawn, but it could also have been because the owner of the account was Bob rather than Alice.\n Let\u2019s revise our semantic domain a bit to help us keep track of why something failed. In order to track this we\u2019re going to define a  Validation data type instead of using a  Bool for our return value:\n type  ErrMsg  =  Text     data  Validation err    =  Success    |  Failure err     type  ValidationResult  =  Validation [ ErrMsg]     success ::  ValidationResult  success  =  Success     failure ::  ErrMsg  -&gt;  ValidationResult  failure errMsg  =  Failure [errMsg]     newtype  ValidationRule a  =  ValidationRule {  validate :: a  -&gt;  ValidationResult }\n We\u2019re going to need to rewrite our core functions now to use the new representation. We will only rewrite a few of them. The rest are left as an exercise to the reader.\n eq_ :: ( Show a,  Eq a)  =&gt; a  -&gt;  ValidationRule a  eq_ value  =  ValidationRule  $ \\actual  -&gt;    if actual  == value  then   success    else   failure (Text.pack  $  &#34;Expected &#34;  &lt;&gt;  show actual  &lt;&gt;  &#34; to equal &#34;  &lt;&gt;  show value)     and_ ::  ValidationRule a  -&gt;  ValidationRule a  -&gt;  ValidationRule a  and_ rule1 rule2  =  ValidationRule  $ \\actual  -&gt;    case (validate rule1 actual, validate rule2 actual)  of   ( Failure e1,  Failure e2)  -&gt;  Failure (e1  &lt;&gt; e2)   ( Failure e1, _)  -&gt;  Failure e1   (_,  Failure e2)  -&gt;  Failure e2   ( Success,  Success)  -&gt;  Success     or_ ::  ValidationRule a  -&gt;  ValidationRule a  -&gt;  ValidationRule a  or_ rule1 rule2  =  ValidationRule  $ \\actual  -&gt;    case (validate rule1 actual, validate rule2 actual)  of   ( Failure e1,  Failure e2)  -&gt;  Failure (e1  &lt;&gt; e2)   ( Success, _)  -&gt;  Success   (_,  Success)  -&gt;  Success\n Now we can run our validate function and if there is a failure we will know why the validation failed. And the best part is, we don\u2019t actually have to change how the top level rule is written (though we do have to recompile since we\u2019re not taking full advantage of the polymorphic final tagless approach). Since only our primitives are aware of  ValidationResult, we did not have to update any of the more sophisticated business rules during this change.\n  In this post we solved the problem of configurable validation by creating an eDSL that allows us to create sophisticated business rules through the composition of primitive rules. The performance of validating inputs using this approach is very good since there is almost no interpretive overhead when composing functions as we have done here.\n The eDSL we have shown here is only slightly simpler than what we built for our client, and illustrates the core ideas clearly. A language like this one can continue to evolve as necessary, oftentimes without requiring existing rules to be rewritten, as we saw above. One aspect we haven\u2019t covered in this post is adding context to rules, giving us the ability to see where one of our primitive rules failed relative to a larger validation (e.g.\u00a0we expected \u201cAlice\u201d but got \u201cBob\u201d  in the context of validating the account owner).\n  Ben Levy and Christian Charukiewicz are Partners and Principal Software Engineers at Foxhound Systems. At Foxhound Systems, we focus on building fast and reliable custom software. Are you looking for help with something you\u2019re working on? Reach out to us at  info@foxhound.systems.", "posttime": "2021-07-27 23:58:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "haskell,data,\u89c4\u5219", "title": "\u4f7f\u7528 Haskell \u8fdb\u884c\u53ef\u7ec4\u5408\u6570\u636e\u9a8c\u8bc1", "title_en": "Composable Data Validation with Haskell", "transed": 1, "url": "https://www.foxhound.systems/blog/composable-data-validation/", "via": "", "real_tags": ["haskell", "data", "\u89c4\u5219"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070083, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Netcat \u662f\u4e00\u79cd\u8de8\u7f51\u7edc\u8fde\u63a5\u8bfb\u5199\u6570\u636e\u7684\u5de5\u5177\uff0c\u4f7f\u7528 TCP \u6216 UDP \u534f\u8bae\u3002 Netcat \u88ab\u79f0\u4e3a TCP/IP/\u7f51\u7edc\u745e\u58eb\u519b\u5200\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76 netcat \u7684\u4e0d\u540c\u5e94\u7528\u4ee5\u53ca\u5b83\u5982\u4f55\u5728\u6e17\u900f\u6d4b\u8bd5\u4eba\u5458\u3001\u5b89\u5168\u4e13\u5bb6\u3001\u7cfb\u7edf\u7ba1\u7406\u5458\u7b49\u7684\u65e5\u5e38\u6d3b\u52a8\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u60f3\u5728\u5b9e\u9a8c\u5ba4\u73af\u5883\u4e2d\u6d4b\u8bd5\u8fd9\u4e9b\u547d\u4ee4\uff0c\u800c\u65e0\u9700\u5728\u60a8\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u5b83\u4eec\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u94fe\u63a5\u67e5\u770b\u6211\u5728 CYBERRANGES \u4e0a\u7684\u573a\u666f\u3002 netcat \u6709\u591a\u79cd\u53d8\u4f53\uff0c\u4f46\u5927\u591a\u6570\u6838\u5fc3\u529f\u80fd\u548c\u547d\u4ee4\u884c\u9009\u9879\u90fd\u975e\u5e38\u76f8\u4f3c\u3002 Netcat \u6700\u521d\u662f\u4e3a\u4e86\u5728 linux \u4e0a\u4f7f\u7528\u800c\u7f16\u5199\u7684\uff0c\u8fd9\u4e9b\u53d8\u4f53\u662f\u57fa\u4e8e linux \u7684\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u5728 Windows \u4e0a\u4f7f\u7528 netcat\u3002 Netcat Traditional \u662f\u6700\u521d\u7684\u5b9e\u73b0\uff0c\u7531\u4e00\u4e2a\u53eb\u970d\u6bd4\u7279\u7684\u4eba\u7f16\u5199\u3002\u8fd9\u901a\u5e38\u4e0d\u4f1a\u9884\u5148\u5b89\u88c5\uff0c\u9664\u975e\u60a8\u4f7f\u7528\u50cf kali linux \u8fd9\u6837\u7684\u53d1\u884c\u7248\u3002\u5b83\u4e0d\u518d\u7ef4\u62a4\uff0c\u7248\u672c\u4e3a 1.10\u3002\u901a\u8fc7\u5728\u57fa\u4e8e ubuntu/debian \u7684\u673a\u5668\u4e0a\u8fd0\u884c apt search netcat\uff0c\u5b83\u663e\u793a\u4e3a netcat \u6216 netcat-traditional\u3002\u8981\u5b89\u88c5\u5b83\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c sudo apt install netcat-traditional \u6216\u901a\u8fc7\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\uff0c\u60a8\u53ef\u4ee5\u4ece\u9879\u76ee\u9875\u9762 https://nc110.sourceforge.io/ \u83b7\u53d6\u3002\u5982\u679c\u60a8\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5 netcat \u7684\u4e0d\u540c\u53d8\u4f53\uff0c\u60a8\u53ef\u80fd\u5fc5\u987b\u4f7f\u7528\u5b8c\u6574\u7684\u4e8c\u8fdb\u5236\u540d\u79f0\u8c03\u7528\u8be5\u547d\u4ee4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u8fd0\u884c nc.traditional -h \u6765\u67e5\u770b\u547d\u4ee4\u884c\u9009\u9879\u3002\n\u60a8\u4f1a\u6ce8\u610f\u5230 -e \u9009\u9879\uff0c\u8fd9\u5728 openbsd \u7248\u672c\u4e2d\u4e0d\u53ef\u7528\u3002\u8fd9\u662f\u88ab\u89c6\u4e3a\u5b89\u5168\u6f0f\u6d1e\u7684\u529f\u80fd\u3002\u5f53\u6211\u4eec\u8fdb\u5165 shells \u90e8\u5206\u65f6\uff0c\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002 GNU Netcat \u662f\u5bf9\u539f\u59cb netcat \u7684\u91cd\u5199\uff0c\u4ee5\u4f7f\u5176\u5177\u6709\u65b0\u529f\u80fd\u5e76\u5b8c\u5168\u7b26\u5408 GNU \u7684\u53ef\u79fb\u690d\u6027\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b89\u88c5\u5728\u51e0\u4e4e\u6240\u6709\u7684 linux \u53d1\u884c\u7248\u4e0a\u3002\u8fd9\u4e2a\u7248\u672c\u4e0d\u80fd\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u83b7\u5f97\u3002\u5b83\u4f3c\u4e4e\u4e5f\u4e0d\u518d\u7ef4\u62a4\uff0c\u56e0\u4e3a\u5b83\u7684\u6700\u65b0\u7248\u672c\u662f 2004 \u5e74\u7684 0.7.1\u3002\u8981\u83b7\u53d6\u5b83\uff0c\u60a8\u53ef\u4ee5\u4ece\u9879\u76ee\u7f51\u7ad9 http://netcat.sourceforge.net \u4e0b\u8f7d\u6e90\u6587\u4ef6\uff0c\u7136\u540e\u7f16\u8bd1\u5b83\u3002\u60a8\u9700\u8981 gcc \u548c make \u624d\u80fd\u6210\u529f\u5b89\u88c5\u3002\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c06\u5b89\u88c5\u5230 /usr/local/bin/netcat\u3002\u4e0b\u9762\u662f\u8981\u4f7f\u7528\u7684\u547d\u4ee4\u3002 Netcat OpenBSD \u7248\u672c\u662f\u5bf9\u539f\u59cb netcat \u7684\u91cd\u5199\uff0c\u5305\u62ec\u5bf9 IPv6\u3001\u4ee3\u7406\u548c unix \u5957\u63a5\u5b57\u7684\u652f\u6301\u3002\u9664\u4e86\u8fd9\u4e9b\u589e\u5f3a\u529f\u80fd\u4e4b\u5916\uff0c\u5b83\u8fd8\u88ab\u7f16\u8bd1\u4ee5\u5220\u9664\u4e00\u4e2a\u88ab\u8ba4\u4e3a\u662f\u5e94\u7528\u7a0b\u5e8f\u5de8\u5927\u5b89\u5168\u6f0f\u6d1e\u7684\u529f\u80fd\u3002\u8fd9\u4e2a\u7248\u672c\u662f\u6700\u5e38\u89c1\u7684\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u9ed8\u8ba4\u5b89\u88c5\u5728 ubuntu \u53d1\u884c\u7248\uff08\u684c\u9762\u548c\u670d\u52a1\u5668\uff09\u4e2d\u3002\u5bf9\u4e8e\u5176\u4ed6 linux \u53d1\u884c\u7248\uff0c\u60a8\u53ef\u80fd\u5fc5\u987b\u81ea\u5df1\u5b89\u88c5\u3002\u8981\u5b89\u88c5\u5b83\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c sudo apt install netcat-openbsd\u3002\u5b89\u88c5 netcat \u540e\uff0c\u5b83\u4f1a\u7b26\u53f7\u94fe\u63a5\u5230 nc \u548c netcat\uff0c\u4ee5\u4fbf\u4e8e\u8c03\u7528\u547d\u4ee4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5nc\u548cnetcat\u7684realpath\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u4eec\u6307\u5411\u540c\u4e00\u4e2anc.openbsd\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u5728\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u53d8\u4f53\u3002\nNcat \u662f\u5bf9 nmap \u9879\u76ee netcat \u7684\u91cd\u65b0\u5b9e\u73b0\u3002\u6b64\u7248\u672c\u529f\u80fd\u66f4\u52a0\u4e30\u5bcc\u548c\u6539\u8fdb\u3002\u6211\u4e2a\u4eba\u6bcf\u5929\u90fd\u5728\u4f7f\u7528\u5b83\u3002\u5b89\u88c5 nmap \u65f6\uff0c\u60a8\u4e5f\u4f1a\u5b89\u88c5 ncat\uff0c\u8fd9\u9002\u7528\u4e8e windows \u548c linux\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c ncat -h \u4ee5\u67e5\u770b\u53ef\u7528\u7684\u547d\u4ee4\u884c\u9009\u9879\u3002\u60a8\u4e5f\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u5b89\u88c5\u5b83\uff0c\u53ef\u4ee5\u4ece nmap \u7f51\u7ad9 https://nmap.org/ncat/ \u4e0b\u8f7d\u3002\u73b0\u5728\u6211\u4eec\u4e86\u89e3\u4e86\u4e0d\u540c\u7684\u53d8\u4f53\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u60a8\u5c06\u4f7f\u7528 netcat \u7684\u6700\u5e38\u89c1\u529f\u80fd\u3002\u5927\u591a\u6570\u8bed\u6cd5\u5728\u4e0d\u540c\u7684\u53d8\u4f53\u4e2d\u662f\u901a\u7528\u7684\u3002\u6211\u4eec\u5c06\u5173\u6ce8\u4e24\u4e2a\u6700\u65b0\u7684\u53d8\u4f53\uff0cnetcat-openbsd \u548c ncat\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6700\u8fd1\u7ef4\u62a4\u548c\u66f4\u65b0\u7684\u3002\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 netcat \u6765\u4fa6\u542c\u8fde\u63a5\u3002\u8fd9\u6837\u505a\u662f\u5728\u7cfb\u7edf\u4e0a\u6253\u5f00\u4e00\u4e2a\u7aef\u53e3\uff08tcp \u6216 udp\uff09\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cnetcat \u4fa6\u542c tcp\u3002\u4ee5\u4e0b\u547d\u4ee4\u5c06\u4fa6\u542c\u7aef\u53e3 8080 \u4e0a\u7684\u6240\u6709\u63a5\u53e3\u3002\n\u8981\u6307\u5b9a\u8981\u4fa6\u542c\u7684\u63a5\u53e3\uff0c\u4f8b\u5982 localhost\uff0c\u60a8\u53ef\u4ee5\u5bf9 openbsd \u53d8\u4f53\u4f7f\u7528\u4ee5\u4e0b\u8bed\u6cd5\u3002\u6709\u65f6\u6839\u636e\u60c5\u51b5\u5728\u6240\u6709\u63a5\u53e3\u4e0a\u6536\u542c\u53ef\u80fd\u4e0d\u662f\u6700\u597d\u7684\u4e3b\u610f\u3002\u5728\u5ba2\u6237\u7aef\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 netcat \u8fde\u63a5\u5230\u7cfb\u7edf\u4e0a\u7684\u5f00\u653e\u7aef\u53e3\u3002\u8fd9\u5bf9\u4e8e\u624b\u52a8\u68c0\u67e5 servicebanner \u6216\u4ec5\u68c0\u67e5\u7aef\u53e3\u662f\u5426\u6253\u5f00\u662f\u6709\u76ca\u7684\u3002\u5bf9\u4e8e\u5728\u7aef\u53e3 8080 \u4e0a\u8fde\u63a5\u5230 IP 127.0.0.1 \u65f6\u7684 tcp \u8fde\u63a5\uff0c\u8bed\u6cd5\u5982\u4e0b\u3002\u9700\u8981\u719f\u6089\u53cd\u5411 shell \u548c\u7ed1\u5b9a shell \u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u5728\u672c\u8282\u4e2d\u6ca1\u6709\u8be6\u7ec6\u8ba8\u8bba\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u770b netcat \u5982\u4f55\u4fc3\u8fdb\u5b83\u4eec\u3002\u8fd9\u5728\u6e17\u900f\u6d4b\u8bd5\u4eba\u5458\u4e2d\u975e\u5e38\u6d41\u884c\uff0c\u5e76\u4e14\u4f7f\u7528 netcat \u4f7f\u5176\u53d8\u5f97\u5bb9\u6613\u3002\u6211\u5c06\u4f7f\u7528\u670d\u52a1\u5668/\u5ba2\u6237\u7aef\u6a21\u578b\u8fdb\u884c\u89e3\u91ca\u3002\u4f7f\u7528\u7684\u547d\u4ee4\u4ec5\u9002\u7528\u4e8e ncat\u3001netcat \u4f20\u7edf\u548c gnu netcat\u3002 Netcat OpenBSD \u88ab\u7f16\u8bd1\u4e3a\u6ca1\u6709\u8fd9\u4e2a\u7279\u6027\uff0c\u56e0\u4e3a\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5b89\u5168\u98ce\u9669\u3002\u5bf9\u4e8e\u53cd\u5411 shell\uff0c\u6211\u4eec\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u4f7f\u7528 netcat \u6765\u4fa6\u542c\u8fde\u63a5\uff0c\u7136\u540e\u4ece\u5ba2\u6237\u7aef\u63d0\u4f9b shell\u3002\u8fd9\u5c06\u5141\u8bb8\u670d\u52a1\u5668\u4e0a\u7684\u4f1a\u8bdd\u5728\u6536\u5230 shell \u540e\u5728\u5ba2\u6237\u7aef\u4e0a\u8fd0\u884c\u547d\u4ee4\u3002\u4ece\u6e17\u900f\u6d4b\u8bd5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u670d\u52a1\u5668\u662f\u653b\u51fb\u8005\u673a\u5668\uff0c\u5ba2\u6237\u7aef\u662f\u53d7\u5bb3\u8005\u673a\u5668\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4ec5\u4ec5\u56e0\u4e3aopenbsd\u7248\u672c\u6ca1\u6709\u8fd9\u4e2a-e\u9009\u9879\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u5b89\u88c5\u65f6\u5c31\u4e0d\u53ef\u80fd\u5f97\u5230reverseshell\u3002\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u53cd\u5411shell\u3002\u5bf9\u4e8e\u7ed1\u5b9a shell\uff0c\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u7684 netcat \u4fa6\u542c\u8fde\u63a5\u5e76\u5c06 shell \u8fdb\u7a0b\u63d0\u4f9b\u7ed9\u4efb\u4f55\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u3002\u7136\u540e\u4ee5\u5ba2\u6237\u7aef\u6a21\u5f0f\u8fd0\u884c\u7684 Netcat \u53ef\u4ee5\u8fde\u63a5\u5230\u670d\u52a1\u5668\u5e76\u83b7\u5f97\u5bf9\u670d\u52a1\u5668\u7684 shell \u8bbf\u95ee\u5e76\u8fd0\u884c\u547d\u4ee4\u3002\u4ece\u6e17\u900f\u6d4b\u8bd5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u670d\u52a1\u5668\u5c06\u662f\u53d7\u5bb3\u8005\u673a\u5668\uff0c\u800c\u5ba2\u6237\u7aef\u662f\u653b\u51fb\u8005\u673a\u5668\u3002\u7531\u4e8e\u80fd\u591f\u5199\u5165\u539f\u59cb\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u7cfb\u7edf\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u7cfb\u7edf\u800c\u4e0d\u4f1a\u5931\u771f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5e76\u4e0d\u771f\u6b63\u5173\u5fc3\u54ea\u4e2a\u662f\u670d\u52a1\u5668\uff0c\u54ea\u4e2a\u662f\u5ba2\u6237\u7aef\uff0c\u56e0\u4e3a\u4f20\u8f93\u53ef\u4ee5\u671d\u4efb\u4e00\u65b9\u5411\u8fdb\u884c\uff0c\u4f46\u6211\u4eec\u9700\u8981\u5148\u8fd0\u884c\u4fa6\u542c\u5668\u3002\u8981\u901a\u8fc7\u7aef\u53e3 8080 \u5c06 server1 \u4e0a\u7684\u6587\u4ef6\u4f20\u8f93\u5230 server2\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b8c\u6210\uff1a \u6b64\u529f\u80fd\u672a\u5728 ncat \u4e2d\u5b9e\u73b0\uff0c\u4f46\u5728\u5176\u4ed6\u53d8\u4f53\u4e2d\u53ef\u7528\u3002\u6839\u636e\u4ed6\u4eec\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u7701\u7565\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u5de5\u5177\uff0c\u90a3\u5c31\u662f nmap\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u627e\u5230\u4e00\u4e2a\u5e26\u6709 netcat-openbsd \u7684\u7cfb\u7edf\u5e76\u4e14\u53ef\u4ee5\u5b89\u88c5 nmap\uff0c\u4f60\u5c31\u4e0d\u80fd\u8fd0\u884c\u5982\u4e0b\u7684\u57fa\u672c\u7aef\u53e3\u626b\u63cf\u3002\n\u4ee5\u4e0b\u9762\u7684\u573a\u666f\u4e3a\u4f8b\uff0cserver1 \u4e0d\u80fd\u76f4\u63a5\u8fde\u63a5\u5230 server3\uff0c\u800c\u53ea\u80fd\u901a\u8fc7 server2\u3002\u8981\u5c06\u6d41\u91cf\u4ece server1 \u91cd\u5b9a\u5411\u5230\u5728 server3 (192.168.125.40) \u7aef\u53e3 8080 \u4e0a\u8fd0\u884c\u7684 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 server2 \u4e0a\u6267\u884c\u4ee5\u4e0b ncat \u547d\u4ee4\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u7aef\u53e3 8000 \u4e0a\u7684 server2 \u6765\u8bbf\u95ee server3 \u4e0a\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u3002 \u4ece\u529f\u80fd\u4e2d\u53ef\u4ee5\u770b\u51fa\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a\u8fde\u63a5\u4e0a\u6ca1\u6709\u52a0\u5bc6\uff0c\u56e0\u4e3a netcat \u5c06\u4ee5\u6700\u539f\u59cb\u7684\u5f62\u5f0f\u5199\u5165\u8fde\u63a5\uff0c\u56e0\u6b64\u4efb\u4f55\u55c5\u63a2\u7f51\u7edc\u7684\u4eba\u90fd\u53ef\u4ee5\u6355\u83b7\u5728\u5916\u58f3\u548c\u6587\u4ef6\u4f20\u8f93\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u7684\u6240\u6709\u6d41\u91cf\u90fd\u672a\u52a0\u5bc6\u3002\u5bf9\u4e8e\u7ed1\u5b9a\u5916\u58f3\uff0c\u6ca1\u6709\u8eab\u4efd\u9a8c\u8bc1\uff0c\u56e0\u6b64\u4efb\u4f55\u8fde\u63a5\u5230\u7ed1\u5b9a\u5916\u58f3\u6b63\u5728\u4fa6\u542c\u7684\u7aef\u53e3\u7684\u4eba\u90fd\u53ef\u4ee5\u5728\u673a\u5668\u4e0a\u8fd0\u884c\u547d\u4ee4\u3002\u4f7f\u7528 ncat \u65f6\uff0c\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u4f7f\u7528 ssl \u4ee5\u53ca\u8bbf\u95ee\u63a7\u5236\u3002\u5bf9\u4e8e\u53cd\u5411 shell\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u8bed\u6cd5\uff0c\u4f46\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 --ssl\uff0c\u7ed1\u5b9a shell \u4e5f\u662f\u5982\u6b64\u3002\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u4f7f\u7528 netcat \u65f6\uff0c--allow \u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u5141\u8bb8\u8fde\u63a5\u5230\u7aef\u53e3\u7684\u4e3b\u673a\u6216\u7f51\u7edc\u8303\u56f4\uff0c\u8fd9\u5bf9\u4e8e\u7ed1\u5b9a shell \u60c5\u51b5\u5f88\u6709\u7528\u3002\u540c\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 \u2013deny \u62d2\u7edd\u6765\u81ea\u7279\u5b9a\u4e3b\u673a\u6216\u7f51\u7edc\u8303\u56f4\u7684\u8bbf\u95ee\u3002\nNetcat \u662f\u7528\u4e8e\u7f51\u7edc\u76f8\u5173\u6d3b\u52a8\u7684\u975e\u5e38\u68d2\u7684\u5de5\u5177\uff0c\u6211\u53d1\u73b0\u5b83\u5728 CTF \u671f\u95f4\u975e\u5e38\u6709\u7528\uff0c\u6709\u65f6\u5728\u6e17\u900f\u6d4b\u8bd5\u671f\u95f4\u4f7f\u7528\u5b83\u3002\u8fd8\u6709\u5176\u4ed6\u51e0\u4e2a\u6211\u4eec\u6ca1\u6709\u7814\u7a76\u8fc7\u7684\u9009\u9879\uff0c\u53ef\u4ee5\u968f\u610f\u63a2\u7d22\u5b83\u4eec\uff0c\u4f46\u6211\u8ba4\u4e3a\u6211\u4eec\u5df2\u7ecf\u6db5\u76d6\u7684\u5185\u5bb9\u5e94\u8be5\u8db3\u4ee5\u6ee1\u8db3\u60a8\u7684\u5927\u591a\u6570\u7528\u4f8b\u3002\u6211\u6ca1\u6709\u89e3\u91ca\u7279\u5b9a\u7684\u547d\u4ee4\u884c\u9009\u9879 - \u50cf -v -n \u56e0\u4e3a\u5e2e\u52a9\u83dc\u5355\u6e05\u695a\u5730\u89e3\u91ca\u4e86\u5b83\u4eec\u3002\u6311\u6218\u4f60\uff0c\u73a9 windows \u7684 netcat\uff08\u7279\u522b\u662f ncat\uff0c\u56e0\u4e3a ssl \u529f\u80fd\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u83b7\u5f97\u53cd\u5411\u5916\u58f3\u5e76\u4e14\u4e0d\u4f1a\u88ab\u6807\u8bb0\u4e3a\u75c5\u6bd2\u3002", "note_en": "Netcat is a tool that reads and writes data across network connections, using TCP or UDP protocol. Netcat has been referred to as the TCP/IP / networking swiss army knife.In this article we\u2019ll look at different applications of netcat and how it can be useful in day to day activities of a pentester, security professional, sysadmin etc&amp;mldr\n If you would like to test out these commands in a lab environment without the need to install them on your own machine have a look at my scenario on   CYBERRANGESusing thelink below.\n   There are several variants of netcat but most of the core functionality and command line options are very similar. Netcat having being initially written to be used on linuxthe variants are linux based but you can still have netcat on windows.\n  Netcat traditional is the original implementation and was written by a guy known as Hobbit. This does not typically come preinstalled unless you are using a distro like kali linux. It is nolonger maintained and is on version 1.10.\n By running  apt search netcat on an ubuntu/debian based machine, it appears as netcat or netcat-traditional.\n  To install it you can then run  sudo apt install netcat-traditional or via compiling from source which you can get from the project page  https://nc110.sourceforge.io/.\n If you install the different variants of netcat on your system you may have to invoke the command with the full binary name. In this case we\u2019ll run  nc.traditional -h to see the command lineoptions.\n  You notice the -e option, this is not available in the openbsd version. This is the feature that is considered a security hole. More on this when we get to the shells section.\n  GNU Netcat is a rewrite of the original netcat to make it more portable with new features and fully GNU compliant. This means it can be easily installed on almost all linux distros.This version is not available via package manager. It seems to also be no longer maintained as it\u2019s latest version is 0.7.1 from 2004.\n To get it you can download the source files from the project website  http://netcat.sourceforge.net then compile it.\n You need gcc and make to install successfully. The binary will be installed to /usr/local/bin/netcat. Below are the commands to use.\n    The Netcat OpenBSD version is a rewrite of the original netcat to include support for IPv6, proxies and unix sockets. In addition to those enhancements it is compiled to remove a feature thatis considered a gaping security hole of the application.\n This version is the most common and is what you will find installed by default in ubuntu distro (both desktop and server). For other linux distros you may have to install it yourself.\n  To install it you can then run  sudo apt install netcat-openbsd. When netcat is installed it is symlinked to nc and netcat for ease of invoking the command. We can see thisby checking the realpath of nc and netcat, they point to the same nc.openbsd binary. This can be different depending on which variant you have installed in your system.\n     Ncat is the reimplementation of netcat from the nmap project. This version is more feature rich and improved. I personally use this on a day to day.\n When installing nmap you get ncat installed as well, this applies for windows and linux. You can then run  ncat -h to see the command line options available.\n  You can also compile from source to install it which can be downloaded from the nmap website  https://nmap.org/ncat/.\n  Now that we understand the different variants, let\u2019s look at the most common features you\u2019d use netcat for. Most of the syntax is common across the differentvariants.\n We\u2019ll focus on the 2 most recent variants,  netcat-openbsd and  ncat because they are the most recently maintained and updated.\n   In server mode you can use netcat to listen for connections. What this does is open a port (either tcp or udp) on the system.\n By default netcat listens on tcp. The below command will listen on all interfaces on port 8080.\n  To specify the interface to listen on, for example localhost, you can use the below syntax for openbsd variant. Sometimes it may not be the best idea tolisten on all interfaces depending on the situation.\n        In client mode you can use netcat to connect to an open port on a system. This can be beneficial for manually checking servicebanners or just checking if the port is open.\n For a tcp connection when connecting to IP 127.0.0.1 on port 8080, the syntax is as below.\n     Familiarity with the concept of reverse shells and bind shells is needed as it is not discussed in detail in this section as we areonly looking at how netcat facilitates them.\n This is very popular to pentesters and use of netcat makes it easy. I will use the server / client model for explanation.\n The commands used only work on ncat,netcat traditional and gnu netcat. Netcat OpenBSD is compiled to not have this feature as it isconsidered a security risk.\n  For a reverse shell, we use netcat in server mode to listen for connections then supply the shell from the client. This will allowthe session on the server to run commands on the client once the shell is received. From a pentesting perspective the server would bethe attacker machine and the client the victim machine.\n     Something to note is that, just because the openbsd version does not have this -e option, does not mean that it is impossible to get a reverseshell when it\u2019s installed. There are still ways it can be used to achieve a reverse shell.\n  For a bind shell, netcat in server mode listens for a connection and serves the shell process to any connecting client. Netcat running inclient mode can then connect to the server and get shell access to the server and run commands. From a pentesting perspective the serverwould be the victim machine and the client the attacker machine.\n      Due to the ability to write to the connections raw, we can transfer files over the connection from one system to another without distortion.\n For this we don\u2019t really care about which is the server and which is the client because the transfer can go either direction but we needto run the listener first.\n To transfer a file on server1 to server2 over port 8080 can be done as below:\n     This feature is not implemented in ncat but is available in the other variants. According to their website they omitted this feature becausethey have a better tool for that, which would be nmap.\n Therefore if you find a system with netcat-openbsd and can install nmap you can\u2019t run basic port scans as below.\n       Take the below scenario where server1 cannot connect directly to server3 but can only go through server2.\n  To redirect traffic from server1 to a web app running on server3 (192.168.125.40) on port 8080 we can execute the below ncat command on server2.\n  Now you can reach the web app on server3 by accessing server2 on port 8000.\n  From the features the security risks can be seen because there\u2019s no encryption on the connection as netcat will write to the connection in itsrawest form, therefore anyone sniffing the network can capture all your traffic unencrypted in the case of shells and file transfer. For bind shells,there\u2019s no authentication therefore anyone connecting to the port the bind shell is listening on will be able to run commands on the machine.\n When using ncat, some of these concerns are addressed as it allows for use of ssl as well as access control.\n  For a reverse shell we\u2019ll use the same command syntax but add  --ssl to the command, same goes for bind shells.\n      When using netcat in server mode the  --allow option can specify one host or network range to be allowed to connect to the port, this can be goodfor the bind shell situation. Similarly, you can use \u2013deny to deny access from a specific host or network range.\n    Netcat is a really great tool for network related activities, I find it really useful during CTFs and sometimes use it during pentests. There\u2019s several other options thatwe haven\u2019t looked into feel free to explore them, but I think we\u2019ve covered should be enough for most of your use cases.\n I haven\u2019t explained the specific command line options -like -v -n because the help menu clearly explains them.\n Challenge for you, play around with netcat for windows (specifically ncat because of ssl feature). It\u2019s a nice utility that can help you get reverse shells and doesn\u2019t get flagged as a virus.", "posttime": "2021-07-27 23:58:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9700\u8981,netcat", "title": "Netcat\u2014\u2014\u4f60\u9700\u8981\u77e5\u9053\u7684\u4e00\u5207", "title_en": "Netcat \u2013 All you need to know", "transed": 1, "url": "https://blog.ikuamike.io/posts/2021/netcat/", "via": "", "real_tags": ["\u9700\u8981", "netcat"]}, {"category": "", "categoryclass": "", "imagename": "d1df0b9633f5e1f359f425023867e02f.jpg", "infoid": 1070082, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d5e\u7f8e\u4f1a\u8ba9\u6211\u4eec\u611f\u5230\u7126\u8651\uff0c\u4f46\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u8d5e\u7f8e\u4ed6\u4eba\u5bf9\u53cc\u65b9\u90fd\u6709\u5de8\u5927\u7684\u597d\u5904\u3002\u4f5c\u5bb6\u9a6c\u514b\u5410\u6e29\u66fe\u7ecf\u6307\u51fa\uff1a\u201c\u8d5e\u7f8e\u7684\u5feb\u4e50\u63aa\u8f9e\u662f\u4eba\u7c7b\u6700\u7a00\u6709\u7684\u793c\u7269\u4e4b\u4e00\uff0c\u800c\u5feb\u4e50\u7684\u8868\u8fbe\u5219\u662f\u53e6\u4e00\u79cd\u3002\u201d\u5410\u6e29\u6b63\u5728\u63cf\u8ff0\u4e0e\u5fb7\u56fd\u7687\u5e1d\u7684\u4f1a\u9762\uff0c\u540e\u8005\u79f0\u8d5e\u4e86\u4ed6\u7684\u4e66\u3002\u4f46\u6211\u4eec\u90fd\u53ef\u4ee5\u80af\u5b9a\u8fd9\u79cd\u60c5\u7eea\uff1a\u6536\u5230\u771f\u8bda\u7684\u3001\u8868\u8fbe\u5f97\u5f53\u7684\u8d5e\u7f8e\uff0c\u611f\u89c9\u5c31\u50cf\u610f\u5916\u7684\u610f\u5916\u6536\u83b7\u4e00\u6837\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u5bf9\u4ed6\u4eba\u5982\u4f55\u770b\u5f85\u6211\u4eec\u81ea\u5df1\u7684\u8bdd\u7684\u7126\u8651\u4f1a\u963b\u6b62\u6211\u4eec\u81ea\u5df1\u8d5e\u7f8e\u3002\u6bd5\u7adf\uff0c\u6ca1\u6709\u4eba\u60f3\u7ed9\u4eba\u4e00\u79cd\u7b28\u62d9\u3001\u50b2\u6162\u6216\u5949\u627f\u7684\u611f\u89c9\u3002\u829d\u52a0\u54e5\u5927\u5b66\u884c\u4e3a\u79d1\u5b66\u6559\u6388\u5c3c\u53e4\u62c9\u65af\u00b7\u57c3\u666e\u5229\uff08Nicholas Epley\uff09\u8bf4\uff1a\u201c\u8d5e\u7f8e\u662f\u8ba9\u5176\u4ed6\u4eba\u2014\u2014\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u2014\u2014\u611f\u89c9\u66f4\u597d\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u3002\u201d \u201c\u4f46\u5f53\u60f3\u5230\u4e00\u4e2a\u5584\u610f\u7684\u60f3\u6cd5\u65f6\uff0c\u4eba\u4eec\u5f80\u5f80\u4e0d\u4f1a\u8bf4\u51fa\u6765\u3002\u201d\u7136\u800c\uff0c\u4e09\u9879\u5173\u4e8e\u7ed9\u4e88\u548c\u63a5\u53d7\u8d5e\u7f8e\u5fc3\u7406\u5b66\u7684\u65b0\u7814\u7a76\u8868\u660e\uff0c\u6211\u4eec\u5bf9\u8d5e\u7f8e\u4f1a\u88ab\u63a5\u53d7\u7684\u65b9\u5f0f\u7684\u6050\u60e7\u662f\u5b8c\u5168\u6ca1\u6709\u6839\u636e\u7684\u3002\u901a\u8fc7\u6446\u8131\u8fd9\u79cd\u5c34\u5c2c\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4e0e\u670b\u53cb\u3001\u5bb6\u4eba\u548c\u540c\u4e8b\u5efa\u7acb\u66f4\u597d\u7684\u5173\u7cfb\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u5fc3\u7406\u5b66\u5bb6\u624d\u5f00\u59cb\u5173\u6ce8\u6211\u4eec\u7684\u8d5e\u7f8e\uff0c\u5927\u591a\u6570\u65e9\u671f\u7814\u7a76\u90fd\u5728\u68c0\u9a8c\u5b83\u4eec\u7684\u8bf4\u670d\u6f5c\u529b\u3002\n\u5728 2010 \u5e74\u7684\u4e00\u9879\u4ee4\u4eba\u96be\u5fd8\u7684\u7814\u7a76\u4e2d\uff0c\u5361\u5c14\u52a0\u91cc\u7687\u5bb6\u5c71\u5927\u5b66\u5fc3\u7406\u5b66\u526f\u6559\u6388 Naomi Grant \u9080\u8bf7\u53c2\u4e0e\u8005\u53c2\u4e0e\u4e00\u9879\u5173\u4e8e\u201c\u5370\u8c61\u5f62\u6210\u201d\u7684\u7814\u7a76\u3002\u5f53\u53c2\u4e0e\u8005\u586b\u5199\u4e00\u4efd\u76f8\u5f53\u4e4f\u5473\u7684\u95ee\u5377\u65f6\uff0c\u4e00\u4f4d\u6f14\u5458\u2014\u2014\u4f2a\u88c5\u6210\u4e00\u540d\u5fc3\u7406\u5b66\u5165\u95e8\u5b66\u751f\u2014\u2014\u5f00\u59cb\u4e86\u4e00\u6bb5\u5bf9\u8bdd\uff0c\u5176\u4e2d\u5305\u62ec\u968f\u610f\u79f0\u8d5e\u53c2\u4e0e\u8005\u7684\u7740\u88c5\u3002\u95f2\u804a\u4e86\u51e0\u53e5\u540e\uff0c\u6f14\u5458\u63d0\u5230\u4ed6\u4eec\u6b63\u5728\u5206\u53d1\u6709\u5173\u5927\u5b66\u804c\u4e1a\u6d3b\u52a8\u7684\u4f20\u5355\uff0c\u5e76\u8be2\u95ee\u53c2\u4e0e\u8005\u662f\u5426\u613f\u610f\u62ff\u4e00\u628a\u4f20\u5355\u7ed9\u81ea\u5df1\u3002\u5949\u627f\u7684\u6548\u679c\u662f\u620f\u5267\u6027\u7684\uff0c79% \u7684\u53c2\u4e0e\u8005\u613f\u610f\u5e2e\u52a9\u5ba3\u4f20\u6d3b\u52a8\uff0c\u800c\u5bf9\u7167\u7ec4\u4e2d\u53ea\u6709 46% \u7684\u53c2\u4e0e\u8005\u6ca1\u6709\u5f97\u5230\u8d5e\u7f8e\u3002\u683c\u5170\u7279\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u6765\u81ea\u4e92\u60e0\u610f\u8bc6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8d8a\u591a\u7684\u4eba\u76f8\u4fe1\u4e00\u4e2a\u597d\u7684\u8f6c\u6298\u503c\u5f97\u53e6\u4e00\u4e2a\u597d\u7684\u8f6c\u6298\uff0c\u4ed6\u4eec\u5c31\u8d8a\u6709\u53ef\u80fd\u4ee5\u6709\u76ca\u7684\u884c\u4e3a\u6765\u8868\u8fbe\u8d5e\u7f8e\u3002\u5728\u82f1\u8bed\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u8bf4\u6211\u4eec\u5728\u201c\u5411\u201d\u67d0\u4eba\u8868\u793a\u8d5e\u7f8e\u2014\u2014\u683c\u5170\u7279\u7684\u7814\u7a76\u8868\u660e\u6211\u4eec\u7ecf\u5e38\u5c06\u5176\u89c6\u4e3a\u4ea4\u6613\u7684\u4e00\u90e8\u5206\u3002\u4e92\u60e0\u7684\u611f\u89c9\u4e5f\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u79ef\u6781\u7684\u53cd\u9988\u53ef\u4ee5\u6210\u4e3a\u5de5\u4f5c\u573a\u6240\u4e2d\u5982\u6b64\u5f3a\u5927\u7684\u5de5\u5177\u3002\u79d1\u6280\u516c\u53f8\u82f1\u7279\u5c14\u548c\u7f8e\u56fd\u675c\u514b\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\u8868\u660e\uff0c\u53e3\u5934\u8868\u626c\u5728\u63d0\u9ad8\u751f\u4ea7\u529b\u65b9\u9762\u6bd4\u73b0\u91d1\u5956\u52b1\u66f4\u6709\u6548\u3002 \u201c\u4eba\u4eec\u901a\u5e38\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e48\u5c0f\u7684\u4e8b\u60c5\u53ef\u80fd\u4f1a\u4ea7\u751f\u8fd9\u4e48\u5927\u7684\u5f71\u54cd\uff0c\u201d\u7f8e\u56fd\u5eb7\u5948\u5c14\u5927\u5b66\u793e\u4f1a\u5fc3\u7406\u5b66\u6559\u6388\u3001\u300a\u4f60\u7684\u5f71\u54cd\u529b\u6bd4\u4f60\u60f3\u8c61\u7684\u591a\u300b\u4e00\u4e66\u7684\u4f5c\u8005\u74e6\u5185\u8428\u00b7\u535a\u6069\u65af\u89e3\u91ca\u8bf4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u535a\u6069\u65af\u81ea\u5df1\u7684\u7814\u7a76\u8868\u660e\uff0c\u6211\u4eec\u5f88\u5c11\u6b23\u8d4f\u6211\u4eec\u8bdd\u8bed\u7684\u529b\u91cf\u3002 Bohns \u4e0e\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u7684 Erica Boothby \u5408\u4f5c\uff0c\u8981\u6c42\u53c2\u4e0e\u8005\u524d\u5f80\u6821\u56ed\u5185\u7684\u6307\u5b9a\u5730\u70b9\uff0c\u5e76\u5411\u968f\u673a\u7684\u964c\u751f\u4eba\u81f4\u610f\u3002 \uff08\u4e3a\u4e86\u51cf\u5c11\u5bf9\u4ed6\u4eec\u52a8\u673a\u7684\u6f5c\u5728\u8bef\u89e3\uff0c\u53c2\u4e0e\u8005\u88ab\u8981\u6c42\u63a5\u8fd1\u540c\u6027\u522b\u7684\u4eba\u3002\uff09\u4e3a\u4e86\u68c0\u67e5\u4ed6\u4eec\u7684\u5148\u5165\u4e4b\u89c1\uff0c\u53c2\u4e0e\u8005\u9996\u5148\u5fc5\u987b\u4f30\u8ba1\u8fd9\u4e2a\u4eba\u4f1a\u611f\u5230\u591a\u4e48\u9ad8\u5174\u3001\u53d7\u5ba0\u82e5\u60ca\u6216\u5c34\u5c2c\u3002\u5728\u4ed6\u4eec\u53d1\u8868\u8bc4\u8bba\u540e\uff0c\u4ed6\u4eec\u7ed9\u4e86\u4ed6\u4eec\u8d5e\u7f8e\u7684\u63a5\u53d7\u8005\u4e00\u4e2a\u5bc6\u5c01\u7684\u4fe1\u5c01\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4efd\u7b80\u77ed\u7684\u8c03\u67e5\u95ee\u5377\uff0c\u8be2\u95ee\u964c\u751f\u4eba\u5bf9\u8fd9\u6b21\u4ea4\u6d41\u7684\u771f\u5b9e\u611f\u53d7\u3002\u5728\u4f17\u591a\u5b9e\u9a8c\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u53c2\u4e0e\u8005\u663e\u7740\u4f4e\u4f30\u4e86\u5bf9\u65b9\u542c\u5230\u8d5e\u7f8e\u65f6\u7684\u9ad8\u5174\u7a0b\u5ea6\uff0c\u5e76\u663e\u7740\u9ad8\u4f30\u4e86\u4ed6\u4eec\u5bf9\u8fd9\u6b21\u906d\u9047\u7684\u754f\u60e7\u7a0b\u5ea6\u3002 \u201c\u4ed6\u4eec\u89c9\u5f97\u8fd9\u79cd\u4e92\u52a8\u4f1a\u53d8\u5f97\u975e\u5e38\u5c34\u5c2c\uff0c\u800c\u4e14\u4ed6\u4eec\u5728\u4ea4\u4ed8\u65f6\u4f1a\u6709\u70b9\u7b28\u62d9\uff0c\u201d\u535a\u6069\u65af\u8bf4\u3002\u4f46\u771f\u6b63\u7684\u4ea4\u6d41\u8981\u6109\u5feb\u5f97\u591a\u3002\nEpley \u4e00\u76f4\u5728\u4e0e\u65af\u5766\u798f\u5927\u5b66\u7684\u5fc3\u7406\u5b66\u5bb6 Xuan Zhao \u63a2\u7d22\u7c7b\u4f3c\u7684\u60f3\u6cd5\u2014\u2014\u4f46\u4ed6\u4eec\u5e76\u6ca1\u6709\u5173\u6ce8\u964c\u751f\u4eba\u4e4b\u95f4\u7684\u4ea4\u6d41\uff0c\u800c\u662f\u8981\u6c42\u53c2\u4e0e\u8005\u8d5e\u7f8e\u4ed6\u4eec\u5df2\u7ecf\u8ba4\u8bc6\u7684\u4eba\u3002\u4e0e Bohns \u548c Boothby \u4e00\u6837\uff0cEpley \u548c Zhao \u53d1\u73b0\u53c2\u4e0e\u8005\u5bf9\u5bf9\u8bdd\u7684\u9884\u6d4b\u59cb\u7ec8\u6301\u60b2\u89c2\u6001\u5ea6\u3002\u4ed6\u4eec\u5047\u8bbe\u4ed6\u4eec\u7684\u719f\u4eba\u4f1a\u6bd4\u4ed6\u4eec\u5728\u63a5\u53d7\u8d5e\u7f8e\u65f6\u7684\u5b9e\u9645\u611f\u53d7\u66f4\u4e0d\u9ad8\u5174\uff0c\u66f4\u5c34\u5c2c\u3002\u6df1\u5165\u7814\u7a76\u540e\uff0cEpley \u548c Zhao \u53d1\u73b0\u8fd9\u4e9b\u6050\u60e7\u4f3c\u4e4e\u6e90\u4e8e\u53c2\u4e0e\u8005\u5bf9\u81ea\u5df1\u793e\u4f1a\u201c\u80fd\u529b\u201d\u7684\u770b\u6cd5\uff1b\u4ed6\u4eec\u62c5\u5fc3\u4ed6\u4eec\u4e0d\u4f1a\u6b63\u786e\u8868\u8fbe\u8d5e\u7f8e\uff0c\u800c\u4e0d\u4f1a\u53d1\u51fa\u9519\u8bef\u7684\u8bed\u6c14\u3002 \u201c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u63a5\u53d7\u8005\u5e76\u6ca1\u6709\u4e3a\u6b64\u653e\u4e24\u4e2a\u5c41\uff0c\u201d\u57c3\u666e\u5229\u8bf4\u3002 \u201c\u4ed6\u4eec\u53ea\u5173\u5fc3\u8d5e\u7f8e\u6709\u591a\u597d\u6216\u591a\u4eb2\u5207\u3002\u201d \uff08\u8be5\u7814\u7a76\u6b63\u5728\u7b49\u5f85\u5728\u300a\u4eba\u683c\u4e0e\u793e\u4f1a\u5fc3\u7406\u5b66\u6742\u5fd7\u300b\u4e0a\u53d1\u8868\u3002\uff09\u5f53\u7136\uff0c\u60a8\u53ef\u80fd\u4f1a\u505a\u5f97\u8fc7\u706b\u3002\u5982\u679c\u4f60\u8fc7\u5ea6\u8d5e\u7f8e\u670b\u53cb\u3001\u5408\u4f5c\u4f19\u4f34\u6216\u540c\u4e8b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5bf9\u4f60\u7684\u8d5e\u7f8e\u611f\u5230\u538c\u70e6\uff0c\u751a\u81f3\u5f00\u59cb\u89c9\u5f97\u5b83\u6709\u70b9\u4ee4\u4eba\u538c\u70e6\u3002\u7136\u800c\uff0cEpley \u548c Zhao \u7684\u8fdb\u4e00\u6b65\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u79cd\u53cd\u5e94\u7684\u53ef\u80fd\u6027\u4e5f\u8fdc\u4f4e\u4e8e\u6211\u4eec\u7684\u60f3\u8c61\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u4ed6\u4eec\u518d\u6b21\u62db\u52df\u4e86\u4e00\u5bf9\u5df2\u7ecf\u8ba4\u8bc6\u7684\u53c2\u4e0e\u8005\u3002\u6bcf\u5bf9\u4e2d\u7684\u4e00\u540d\u6210\u5458\u88ab\u8981\u6c42\u5bf9\u4ed6\u4eec\u7684\u719f\u4eba\u8fdb\u884c\u4e94\u6b21\u5355\u72ec\u7684\u8d5e\u7f8e\u3002\u7136\u540e\uff0c\u7814\u7a76\u4eba\u5458\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5468\u5185\u5c06\u8fd9\u4e9b\u8d5e\u7f8e\u4f20\u9012\u7ed9\u63a5\u53d7\u8005\uff0c\u6bcf\u5929\u4e00\u6b21\u8d5e\u7f8e\u3002\u603b\u4f53\u800c\u8a00\uff0c\u63a5\u53d7\u8005\u542c\u5230\u8d5e\u7f8e\u7684\u4e50\u8da3\u5728\u4e00\u5468\u5185\u6ca1\u6709\u4e0b\u964d\u3002 \u201c\u4ed6\u4eec\u6bcf\u5929\u90fd\u611f\u89c9\u5f88\u68d2\uff0c\u201d\u57c3\u666e\u5229\u8bf4\u3002\u5982\u679c\u60a8\u5e0c\u671b\u81ea\u5df1\u5e94\u7528\u8fd9\u9879\u7814\u7a76\uff0cBohns \u4f1a\u5f3a\u8c03\u4e0a\u4e0b\u6587\u7684\u91cd\u8981\u6027\u3002\u663e\u7136\uff0c\u5982\u679c\u60a8\u6709\u53ef\u80fd\u5c06\u67d0\u4eba\u5ba2\u89c2\u5316\uff0c\u90a3\u4e48\u8d5e\u7f8e\u67d0\u4eba\u7684\u5916\u8868\u662f\u4e0d\u5408\u9002\u7684\u3002 \u201c\u793c\u4eea\u662f\u575a\u6301\u771f\u6b63\u4f20\u8fbe\u67d0\u4eba\u7684\u793e\u4f1a\u4ef7\u503c\u7684\u8d5e\u7f8e\uff0c\u201d\u5979\u8bf4\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u5bf9\u6f14\u793a\u6587\u7a3f\u7684\u8868\u626c\uff0c\u6216\u8005\u4ed6\u4eec\u5904\u7406\u96be\u7f20\u5ba2\u6237\u7684\u65b9\u5f0f\u3002\u5982\u679c\u4f60\u786e\u5b9e\u6709\u4e00\u4e2a\u5584\u610f\u7684\u60f3\u6cd5\uff0c\u6807\u5fd7\u7740\u5bf9\u53e6\u4e00\u4e2a\u4eba\u7684\u771f\u6b63\u5c0a\u91cd\uff0c\u79d1\u5b66\u7814\u7a76\u7684\u4fe1\u606f\u5f88\u660e\u786e\uff1a\u5206\u4eab\u5b83\u3002\u4e0e\u5410\u6e29\u7684\u683c\u8a00\u76f8\u53cd\uff0c\u4f60\u4e0d\u9700\u8981\u4efb\u4f55\u7a00\u6709\u7684\u793c\u7269\u6765\u8868\u8fbe\u4f60\u5bf9\u67d0\u4eba\u6700\u597d\u54c1\u8d28\u7684\u6b23\u8d4f\u3002 \u201c\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u8d39\u7528\uff0c\u201d\u8d75\u8bf4\u3002 \u201c\u8fd9\u662f\u8ba9\u5176\u4ed6\u4eba\u611f\u5230\u5feb\u4e50\u7684\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u65b9\u5f0f\u3002\u201d\n\u5927\u536b\u00b7\u7f57\u5e03\u68ee (David Robson) \u662f\u300a\u60c5\u62a5\u9677\u9631\uff1a\u4e3a\u4ec0\u4e48\u806a\u660e\u7684\u4eba\u4f1a\u72af\u611a\u8822\u7684\u9519\u8bef\u300b\u4e00\u4e66\u7684\u4f5c\u8005\uff08\u73b0\u5df2\u5e73\u88c5\uff09\u3002\u4ed6\u7684\u4e0b\u4e00\u672c\u4e66\u662f\u671f\u671b\u6548\u5e94\uff1a\u4f60\u7684\u5fc3\u6001\u5982\u4f55\u6539\u53d8\u4f60\u7684\u4e16\u754c\uff0c\u5c06\u4e8e 2022 \u5e74\u521d\u51fa\u7248\u3002\u4ed6\u5728 Twitter \u4e0a\u662f@d_a_robson\u3002", "note_en": "Giving compliments makes us anxious, but new research shows that praising people has huge benefits \u2013 for both parties.\n \u201cThe happy phrasing of a compliment,\u201d the writer Mark Twain once noted, \u201cis one of the rarest of human gifts, and the happy delivery of it another.\u201d\n Twain was describing a meeting with the Emperor of Germany, who had praised his books. But we can all surely identify with the sentiment: receiving sincere and well-expressed praise can feel as good as an unexpected windfall.\n Unfortunately, our anxieties about the ways others may perceive our own words can prevent us from giving compliments ourselves. No one, after all, wants to come across as clumsy, patronising or fawning.\n \u201cCompliments are the easiest way to make other people \u2013 and, as a result, ourselves \u2013 feel better,\u201d says Nicholas Epley, a professor of behavioural science at the University of Chicago. \u201cBut when a kind thought comes to mind, people often don\u2019t say it.\u201d\n Yet three new studies on the psychology of compliment giving and receiving suggest that our fears about the ways our praise will be received are completely unfounded. And by letting go of that awkwardness, we could all enjoy better relationships with our friends, family members and colleagues.\n  It is only relatively recently that psychologists have paid much attention to our compliments, with the majority of early research examining their persuasive potential.\n In one memorable study from 2010, Naomi Grant, an associate professor in psychology at Mount Royal University in Calgary, invited participants to take part in a study of \u201cimpression formation\u201d. As the participants filled in a rather dull questionnaire, an actor \u2013 posing as an introductory psychology student \u2013 struck up a conversation that involved casually complimenting the participant\u2019s clothing. After a bit more idle chat, the actor then mentioned that they were handing out flyers about a university careers event, and asked the participant whether they would like to take a handful to hand around themselves.\n  The effects of the flattery were dramatic, with  79% of the participants offering to help with the event publicity, compared with only 46% of participants in a control group, who had not received the compliment.\n Grant\u2019s most recent study shows that  this comes from a sense of reciprocity. In general, the more people believe that one good turn deserves another, the more likely they are to follow a compliment with a helpful deed. In English, we often say that we are \u201cpaying\u201d someone a compliment \u2013 and Grant\u2019s research would suggest that we often do consider it to be part of a transaction.\n The sense of reciprocity may also explain why positive feedback can be such a powerful tool in the workplace. A study by researchers at technology company Intel and Duke University in the US showed that verbal praise was  more effective at increasing productivity than cash bonuses. \u201cPeople generally don\u2019t realise that something so small could have such a big impact,\u201d explains Vanessa Bohns, a professor of social psychology at Cornell University, US, and author of You Have More Influence Than You Think.\n  Unfortunately, Bohns\u2019s own research shows that we rarely appreciate the power of our words.\n Working with Erica Boothby at the University of Pennsylvania, Bohns asked participants to go to an assigned location on campus and to deliver a small compliment to a random stranger. (To reduce potential misunderstandings about their motives, the participants were asked to approach someone of the same gender.) To check their preconceptions, the participants first had to estimate how pleased, flattered or awkward the person would feel to receive the praise. After they delivered the comment, they then gave the recipient of their compliment a sealed envelope containing a short survey questioning how the stranger  actually felt about the exchange.\n  Across numerous experiments, the researchers found that the participants significantly under-estimated  how happy the other person would be to hear the praise, and significantly over-estimated how cringe-worthy they would find the encounter. \u201cThey felt like this interaction was going to go super awkwardly, and that they would be kind of clumsy in their delivery,\u201d says Bohns. But the real exchange was far more pleasant.\n Epley has been exploring similar ideas with Xuan Zhao, a psychologist at Stanford University \u2013 but rather than focusing on exchanges between strangers, they asked their participants to compliment someone that they already knew. Like Bohns and Boothby, Epley and Zhao found that the participants were consistently pessimistic in their predictions of the conversation. They assumed that their acquaintance would be less pleased, and feel more awkward, than they actually felt when receiving the compliment.\n Delving further, Epley and Zhao found that these fears seemed to arise from the participants\u2019 perceptions of their own social \u201ccompetence\u201d; they worried they wouldn\u2019t articulate the compliment correctly, without striking the wrong tone. \u201cIt turns out the recipient doesn\u2019t give two farts about that,\u201d says Epley. \u201cThey just care about how nice or kind the compliment is.\u201d (The study is awaiting publication at  the Journal of Personality and Social Psychology.)\n   There is, of course, the danger that you might overdo it. If you compliment a friend, partner or colleague excessively, they might become bored of your praise or even start to find it a bit cloying.\n  Yet further work by Epley and Zhao suggests that this reaction, too, is far less likely than we might believe. In this study, they again recruited pairs of participants who already knew each other. One member of each pair was asked down five separate compliments for their acquaintance. The researchers then delivered these compliments to the recipient, piecemeal over the following week, with one compliment a day.  Overall, the recipients\u2019 pleasure at hearing the praise  did not decline over the course of the week. \u201cThey just felt great, every day,\u201d says Epley.\n If you are hoping to apply this research yourself, Bohns emphasises the importance of context. Clearly it is not appropriate to compliment someone\u2019s appearance if there is ever any risk that you might be objectifying them. \u201cThe etiquette is to stick to compliments that really convey someone&#39;s social value,\u201d she says. That might include praise on a presentation, or the way they handled a difficult client.\n If you do have a kind thought that marks genuine respect for the other person, the message of the scientific research is clear: share it. Contrary to Twain\u2019s aphorism, you do not require any rare gift to show your appreciation of someone\u2019s best qualities.\n \u201cIt doesn\u2019t cost anything,\u201d says Zhao. \u201cIt\u2019s a really efficient way to make other people feel happy.\u201d\n David Robson  is the author of\u00a0 The\u00a0Intelligence\u00a0Trap: Why Smart People Make Dumb Mistakes (out now in paperback). His next book is  The Expectation Effect: How Your Mindset Can Change Your World, to be published in early 2022. He is\u00a0   @d_a_robson \u00a0on Twitter.", "posttime": "2021-07-27 23:57:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d5e\u7f8e,dole", "title": "\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u7ed9\u5f88\u591a\u8d5e\u7f8e\uff0c\u4f46\u5e94\u8be5", "title_en": "Why we don't dole out many compliments, but should", "transed": 1, "url": "https://www.bbc.com/worklife/article/20210722-why-we-dont-dole-out-many-compliments-but-should", "via": "", "real_tags": ["\u8d5e\u7f8e", "dole"]}, {"category": "", "categoryclass": "", "imagename": "b16ead336c48b3447dfb2cf74ab4353c.jpg", "infoid": 1070081, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6c99\u7687\u5f7c\u5f97\u5927\u5e1d\u4e3b\u6301\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u65f6\u5c1a\u8b66\u5bdf\u3002\u4ed6\u7684\u68c0\u67e5\u5458\u5728\u5723\u5f7c\u5f97\u5821\u7684\u8857\u9053\u4e0a\u56db\u5904\u8d70\u52a8\uff0c\u5243\u6389\u80e1\u987b\uff0c\u526a\u4e0b\u51e0\u82f1\u5bf8\u7684\u5916\u5957\u3002\u5982\u679c\u60a8\u662f\u5927\u7ea6 1714 \u5e74\u5728\u5723\u5f7c\u5f97\u5821\u7559\u80e1\u5b50\u7684\u4eba\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u6807\u5fd7\u5c06\u662f\u60a8\u62b5\u5fa1\u56fd\u5bb6\u50b2\u6162\u6743\u529b\u7684\u552f\u4e00\u9632\u5fa1\u63aa\u65bd\u3002\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6301\u8bc1\u4eba\u6bcf\u5e74\u7f34\u7eb3\u80e1\u987b\u7a0e\u7684\u8bc1\u636e\u2014\u2014\u519c\u6c11\u4e3a\u51e0\u6208\u6bd4\uff0c\u8d35\u65cf\u6216\u519b\u5b98\u4e3a\u4e00\u767e\u5362\u5e03\u6216\u66f4\u591a\u3002\u80e1\u987b\u7a0e\u53ea\u662f\u4e00\u4e2a\u66f4\u5927\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff1a\u5f7c\u5f97\u5927\u5e1d\u5bf9\u4fc4\u7f57\u65af\u6587\u5316\u7684\u5ba1\u7f8e\u91cd\u5851\u3002\u6c99\u7687\u547d\u4ee4\u4ed6\u7684\u81e3\u6c11\u7528\u6cd5\u56fd\u6216\u5308\u7259\u5229\u7684\u5939\u514b\u4ee3\u66ff\u4ed6\u4eec\u719f\u6089\u7684\u4fc4\u7f57\u65af\u957f\u5916\u5957\u3002\u8bbe\u7f6e\u5728\u83ab\u65af\u79d1\u57ce\u95e8\u5916\u7684\u4eba\u4f53\u6a21\u578b\u5c55\u793a\u4e86\u65b0\u65f6\u5c1a\uff0c\u8ba9\u6240\u6709\u4eba\u90fd\u4e00\u76ee\u4e86\u7136\u3002\u7ee7\u7eed\u9500\u552e\u4fc4\u7f57\u65af\u6b3e\u5f0f\u7684\u88c1\u7f1d\u9762\u4e34\u7740\u9ad8\u989d\u7f5a\u6b3e\u7684\u98ce\u9669\uff0c\u4efb\u4f55\u7a7f\u7740\u8001\u5f0f\u957f\u888d\u8d70\u5728\u8857\u4e0a\u7684\u4eba\u90fd\u6709\u53ef\u80fd\u88ab\u6c99\u7687\u7684\u68c0\u67e5\u5458\u526a\u77ed\u3002\u8be5\u9879\u76ee\u8d77\u6e90\u4e8e\u6c99\u7687\u5f7c\u5f97\u5728\u6b27\u6d32\u65c5\u884c\u7684\u65e5\u5b50\u3002 1697 \u5e74\uff0c\u5f53\u4ed6\u5f00\u59cb\u4e00\u6b21\u76db\u5927\u7684\u65c5\u884c\u65f6\uff0c\u5f7c\u5f97\u9009\u62e9\u4e86\u9690\u8eab\u65c5\u884c\uff0c\u5e76\u91c7\u7528\u4e86\u201c\u5f7c\u5f97\u00b7\u7c73\u54c8\u4f0a\u6d1b\u592b\u4e2d\u58eb\u201d\u7684\u540d\u5b57\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5173\u4e8e\u4ed6\u8bbf\u95ee\u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u8c23\u8a00\u4ece\u4e00\u4e2a\u57ce\u9547\u4f20\u5230\u53e6\u4e00\u4e2a\u57ce\u9547\uff0c\u9884\u793a\u7740\u4ed6\u662f\u4e00\u4e2a\u5de8\u4eba\uff1a7 \u82f1\u5c3a\u9ad8\uff0c\u624d\u534e\u6a2a\u6ea2\uff0c\u53ea\u6709\u534a\u6587\u660e\u3002\u8fd9\u6b21\u65c5\u884c\u5c06\u6d88\u8017\u63a5\u4e0b\u6765\u7684\u4e24\u5e74\u65f6\u95f4\u3002\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ed6\u5728\u8377\u5170\u7684\u4e00\u5bb6\u9020\u8239\u5382\u5de5\u4f5c\uff0c\u5b66\u4e60\u9020\u8239\u6280\u672f\u3002\u4ed6\u62dc\u8bbf\u4e86\u56fd\u5bb6\u5143\u9996\u3001\u81ea\u7136\u5947\u89c2\u6536\u85cf\u54c1\u548c\u89e3\u5256\u5267\u9662\uff0c\u5e76\u4e3e\u529e\u4e86\u4f20\u5947\u822c\u7684\u72c2\u91ce\u6d3e\u5bf9\u3002\u4e00\u573a\u7279\u522b\u55a7\u95f9\u7684\u4e8b\u4ef6\u8ba9\u4ed6\u7684\u4e3b\u4eba\u7684\u6bcf\u4e00\u628a\u6905\u5b50\u90fd\u88ab\u7838\u6210\u788e\u7247\uff0c\u4ed6\u7684\u753b\u88ab\u6495\u6210\u4e1d\u5e26\uff0c\u5927\u5757\u7684\u4eba\u884c\u9053\u88ab\u4ece\u5730\u4e0a\u6495\u4e0b\u6765\u3002\u65c5\u884c\u5f52\u6765\u540e\uff0c\u4ed6\u7acb\u5373\u5f00\u59cb\u4e86\u7956\u56fd\u201c\u6b27\u6d32\u5316\u201d\u7684\u8fdb\u7a0b\u3002\u6c99\u7687\u7684\u65b0\u70ed\u60c5\u7684\u7b2c\u4e00\u4e2a\u727a\u7272\u54c1\u662f\u4ed6\u7684\u5bab\u5ef7\u8d35\u65cf\u7684\u80e1\u987b\uff0c\u5728\u4ed6\u7684\u6b22\u8fce\u56de\u5bb6\u6d3e\u5bf9\u4e0a\u526a\u6389\u4e86\u80e1\u987b\u3002\u4ed6\u5728\u65b0\u5e74\u5bb4\u4f1a\u4e0a\u52a0\u500d\u52aa\u529b\uff0c\u5728\u90a3\u91cc\u4ed6\u6325\u821e\u7740\u5243\u5200\u7684\u5c0f\u4e11\u5728\u4eba\u7fa4\u4e2d\u5de5\u4f5c\uff0c\u7ed9\u90a3\u4e9b\u4f3c\u4e4e\u4e0d\u613f\u610f\u522e\u80e1\u5b50\u7684\u4eba\u5728\u8033\u6735\u4e0a\u6234\u4e0a\u4e00\u4e2a\u76d2\u5b50\u3002\u6839\u636e\u8bbf\u95ee\u4fc4\u7f57\u65af\u7684\u82f1\u56fd\u4eba\u7ea6\u7ff0\u4f69\u91cc\u8239\u957f\u7684\u8bf4\u6cd5\uff0c\u4fc4\u7f57\u65af\u4eba\u53ea\u5728\u201c\u6709[\u4ed6\u4eec\u7684\u80e1\u987b]\u7684\u6050\u6016...... \u3002\u201d\u4ed6\u63a5\u7740\u8bb2\u4e86\u4e00\u4e2a\u6728\u5320\u7684\u6545\u4e8b\uff0c\u4ed6\u88ab ukase \u5f3a\u8feb\u5243\u6389\u4e86\u80e1\u5b50\uff1a\u6211\u5728\u8fd9\u4e2a\u573a\u5408\u548c\u4ed6\u5f00\u73a9\u7b11\uff0c\u544a\u8bc9\u4ed6\u4ed6\u53d8\u6210\u4e86\u4e00\u4e2a\u5e74\u8f7b\u4eba\uff0c\u5e76\u95ee\u4ed6\u5bf9\u4ed6\u7684\u80e1\u987b\uff1f\u4ed6\u628a\u624b\u4f38\u8fdb\u6000\u91cc\uff0c\u62bd\u51fa\u6765\uff0c\u5c55\u793a\u7ed9\u6211\u770b\uff1b\u8fdb\u4e00\u6b65\u544a\u8bc9\u6211\uff0c\u5f53\u4ed6\u56de\u5230\u5bb6\u65f6\uff0c\u4ed6\u4f1a\u628a\u5b83\u653e\u5728\u4ed6\u7684\u68fa\u6750\u91cc\uff0c\u548c\u4ed6\u4e00\u8d77\u57cb\u846c\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u5411\u5723\u5c3c\u53e4\u62c9\u65af\u62a5\u544a\uff0c\u5f53\u4ed6\u6765\u5230\u53e6\u4e00\u4e2a\u4e16\u754c;\u5e76\u4e14\u4ed6\u6240\u6709\u7684\u5144\u5f1f\uff08\u6307\u90a3\u5929\u5243\u5149\u7684\u4ed6\u7684\u540c\u4e8b\uff09\u90fd\u53d7\u5230\u4e86\u540c\u6837\u7684\u7167\u987e\u3002\n\u5728\u8fd9\u65b9\u9762\uff0c\u6728\u5320\u9075\u5faa\u4fc4\u7f57\u65af\u4e1c\u6b63\u6559\u7684\u6559\u4e49\uff0c\u8ba4\u4e3a\u672a\u526a\u6389\u7684\u9762\u90e8\u6bdb\u53d1\u662f\u8654\u8bda\u7684\u53cd\u6620\u3002\u4eba\u662f\u6309\u7167\u4e0a\u5e1d\u7684\u5f62\u8c61\u9020\u7684\uff1b\u5305\u62ec\u80e1\u987b\u3002\u522e\u80e1\u5b50\u662f\u4e00\u79cd\u4e25\u91cd\u7684\u7f6a\u8fc7\u3002\u5bf9\u4e8e\u8654\u8bda\u7684\u4eba\u6765\u8bf4\uff0c\u80e1\u987b\u7a0e\u662f\u4e00\u4e2a\u4ee4\u4eba\u9707\u60ca\u7684\u4e11\u95fb\u3002\u6709\u4f20\u8a00\u8bf4\u5f7c\u5f97\u4e0d\u662f\u771f\u6b63\u7684\u6c99\u7687\uff0c\u800c\u662f\u4fc4\u7f57\u65af\u654c\u4eba\u5b89\u88c5\u7684\u66ff\u4ee3\u54c1\u3002\u6307\u8d23\u6c99\u7687\u4eb5\u6e0e\u795e\u660e\u7684\u533f\u540d\u4fe1\u4ef6\u6563\u843d\u5728\u57ce\u5e02\u8857\u9053\u4e0a\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5228\u82b1\u4ecd\u5728\u7ee7\u7eed\u3002\u6700\u540e\uff0c\u5728 1705 \u5e74\uff0c\u88ab\u79f0\u4e3a strel&#39;tsy \u7684\u4fc4\u7f57\u65af\u519b\u4e8b\u5e08\u5728\u963f\u65af\u7279\u62c9\u7f55\u9547\u53d1\u8d77\u4e86\u516c\u5f00\u53db\u4e71\u3002\u53db\u519b\u7684\u4e00\u5c01\u4fe1\u5ba3\u79f0\u4ed6\u4eec\u652f\u6301\u57fa\u7763\u6559\u4fe1\u4ef0\uff0c\u53cd\u5bf9\u522e\u80e1\u5b50\u548c\u7a7f\u6d0b\u88c5\u3002\u8d77\u4e49\u88ab\u9547\u538b\uff0c\u6570\u767e\u540d\u53db\u4e71\u5206\u5b50\u4e27\u751f\u3002\u80e1\u987b\u7a0e\u53ea\u662f\u6c99\u7687\u4e0e\u6559\u4f1a\u4e89\u8bba\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u51ed\u501f\u5178\u578b\u7684\u5929\u8d4b\uff0c\u4ed6\u5c06\u4ed6\u7684\u996e\u9152\u4f19\u4f34\u7ec4\u7ec7\u6210\u4e00\u4e2a\u4ff1\u4e50\u90e8\uff0c\u79f0\u4e3a\u201c\u50bb\u74dc\u548c\u5c0f\u4e11\u7684\u5168\u5f00\u73a9\u7b11\u548c\u5168\u9189\u5927\u4f1a\u201d\u3002\u6210\u5458\u626e\u6f14\u7ea2\u8863\u4e3b\u6559\u548c\u4e3b\u6559\u7684\u89d2\u8272\uff0c\u5e76\u8fdb\u884c\u6a21\u62df\u5a5a\u59fb\u548c\u4eea\u5f0f\u3002\u4ece\u5b57\u91cc\u884c\u95f4\u770b\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u5730\u72f1\uff1a\u5f3a\u8feb\u7684\u6b22\u4e50\u3001\u5f3a\u5236\u6027\u7684\u9189\u9152\u3001\u65e0\u4f11\u6b62\u7684\u76db\u5bb4\u548c\u5316\u88c5\u821e\u4f1a\u3002\u5168\u9189\u5927\u4f1a\u65e0\u6cd5\u9003\u8131\uff1b\u7ea6\u4f1a\u662f\u7ec8\u8eab\u7684\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4eb5\u6e0e\u6210\u4e3a\u6c99\u7687\u6700\u4eb2\u5bc6\u4f19\u4f34\u5fe0\u8bda\u5ea6\u7684\u8003\u9a8c\u3002\u9690\u542b\u7684\u9009\u62e9\u5f88\u660e\u786e\uff1a\u5f7c\u5f97\u8fd8\u662f\u6559\u4f1a\u3002\u9690\u79c1\u653f\u7b56 \u8054\u7cfb\u6211\u4eec \u60a8\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u5355\u51fb\u4efb\u4f55\u8425\u9500\u4fe1\u606f\u4e2d\u63d0\u4f9b\u7684\u94fe\u63a5\u53d6\u6d88\u8ba2\u9605\u3002\u6b63\u5982\u5386\u53f2\u5b66\u5bb6 VM Zhivov \u5728\u201c\u5f7c\u5f97\u4e00\u4e16\u8f6c\u578b\u4f53\u7cfb\u4e2d\u7684\u6587\u5316\u6539\u9769\u201d\u4e2d\u6240\u5199\uff0c\u6c99\u7687\u901a\u8fc7\u6311\u6218\u6559\u4f1a\u7684\u6743\u529b\uff0c\u8bd5\u56fe\u5c06\u81ea\u5df1\u5851\u9020\u6210\u4e00\u4e2a\u534a\u795e\u5723\u7684\u4eba\u7269\uff0c\u8131\u79bb\u6b63\u5e38\u793e\u4f1a\u7684\u754c\u9650\uff1a\n\u7687\u5e1d\u8868\u660e\u4ed6\u62e5\u6709\u795e\u5723\u7684\u529b\u91cf\uff0c\u793e\u4f1a\u53ef\u4ee5\u9009\u62e9\u63a5\u53d7\u8fd9\u79cd\u975e\u4eba\u7684\u4f18\u8d8a\u6027\uff0c\u6216\u8005\u5c06\u5176\u89c6\u4e3a\u90aa\u6076\u7684\u4e8b\u4e1a\u800c\u62d2\u7edd\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e9b\u53ef\u7b11\u7684\u4f01\u4e1a\u7ed9\u793e\u4f1a\u5e26\u6765\u4e86\u5b97\u6559\u56f0\u5883\u2026\u2026\u7687\u5e1d\u8d85\u8d8a\u73b0\u5b9e\uff0c\u8fd0\u7528\u751f\u6b7b\u7684\u529b\u91cf\uff0c\u968f\u5fc3\u6240\u6b32\u5730\u6539\u53d8\u73b0\u5b9e\uff0c\u5c06\u53e4\u8001\u7684\u4e60\u4fd7\u53d8\u6210\u4eb5\u6e0e\u795e\u7075\u7684\u5a31\u4e50\uff0c\u628a\u597d\u73a9\u7684\u53d1\u660e\u53d8\u6210\u56fd\u5bb6\u673a\u6784.\u5c31\u50cf\u80e1\u987b\u7a0e\u672c\u8eab\u4e00\u6837\uff0c\u8fd9\u573a\u51b2\u7a81\u4f3c\u4e4e\u5f88\u8352\u8c2c\uff1a\u4e00\u4e9b\u9189\u9152\u7684\u8d35\u65cf\uff0c\u626e\u6f14\u7267\u5e08\u7684\u89d2\u8272\u3002\u4f46\u662f\u8fd9\u573a\u5173\u4e8e\u738b\u6743\u672c\u8d28\u7684\u6597\u4e89\u662f\u975e\u5e38\u4e25\u91cd\u7684\u3002 JSTOR \u662f\u9762\u5411\u5b66\u8005\u3001\u7814\u7a76\u4eba\u5458\u548c\u5b66\u751f\u7684\u6570\u5b57\u56fe\u4e66\u9986\u3002 JSTOR Daily \u7684\u8bfb\u8005\u53ef\u4ee5\u5728 JSTOR \u4e0a\u514d\u8d39\u8bbf\u95ee\u6211\u4eec\u6587\u7ae0\u80cc\u540e\u7684\u539f\u59cb\u7814\u7a76\u3002\u94b1\u5e01\u7f16\u5e74\u53f2\u548c\u94b1\u5e01\u5b66\u4f1a\u6742\u5fd7\uff0c\u5377\u3002 7\uff081844 \u5e74 4 \u6708\u81f3 1845 \u5e74 1 \u6708\uff09\uff0c\u7b2c 153-155 \u9875 \u56fd\u5bb6\u7a0e\u52a1\u534f\u4f1a\u516c\u62a5\uff0c\u5377\u3002 22, No. 1 (October, 1936), pp. 7-12 \u9690\u79c1\u653f\u7b56 \u8054\u7cfb\u6211\u4eec \u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u4efb\u4f55\u8425\u9500\u4fe1\u606f\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\u968f\u65f6\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "Tsar Peter the Great presided over an actual fashion police. His inspectors stalked the streets of St. Petersburg, shaving beards and snipping inches off coats.\n  If you were a bearded man in St. Petersburg, circa 1714, a  token like the one above would be your only defense against the overweening power of the state. It served as proof that the bearer had paid his yearly  beard tax\u2014a few kopecks for peasants, a hundred rubles or more for nobles or military officials.\n The beard tax was just one part of a larger project: Peter the Great\u2019s aesthetic reinvention of Russian culture. The tsar ordered his subjects to replace their familiar long Russian overcoats with French or Hungarian jackets.  Mannequins set outside the Moscow city gates illustrated the new fashions for all to see. Tailors who continued to sell Russian styles ran the risk of steep fines, and anyone walking the streets in an old-fashioned robe was liable to have it shorn short by the Tsar\u2019s inspectors.\n The project had its roots in Tsar Peter\u2019s days travelling around Europe. In 1697, when he set out on a grand tour, Peter chose to travel incognito, adopting the name \u201c Sergeant Pyotr Mikhaylov.\u201d Nonetheless, excited rumors of his visit spread from town to town, heralding him as a giant: 7 feet tall, brilliant, and only half-civilized. The trip would consume the next two years. For a time, he worked at a Dutch shipyard to learn ship-building techniques. He visited heads of state, collections of natural curiosities, and anatomical theaters, and threw legendarily wild parties. One  particularly raucous event left every one of his host\u2019s chairs smashed into pieces, his paintings shredded into ribbons, and chunks of pavement torn out of the ground.\n    Upon returning from his travels, he launched immediately into the process of \u201cEuropeanizing\u201d his homeland. The first casualty of the tsar\u2019s new enthusiasm were the beards of his court nobles, shorn at his  welcome-home party. He doubled down at his New Year\u2019s banquet, at which his razor-wielding jester worked the crowd, giving a  box on the ears to anyone who seemed reluctant to shave.\n According to Captain John Perry, an English visitor to Russia, the Russians submitted only upon \u201cthe Terror of having [their beards]\u2026 pull\u2019d out by the Roots, or sometimes taken so rough off, that some of the Skin went with them.\u201d He goes on to  tell the story of a carpenter who was obliged by the ukase to lose his beard:\n I jested a little with him on this Occasion, telling him that he was become a young Man, and asked him what he had done with his Beard? Upon which he put his Hand in his Bosom and pull\u2019d it out, and shew\u2019d it to me; farther telling me, that when he came home, he would lay it up to have it put in his Coffin and buried along with him, that he might be able to give an Account of it to St. Nicholas, when he came to the other World; and that all his Brothers (meaning his Fellow-workmen who had been shaved that Day) had taken the same Care.\n In this, the carpenter was guided by the teachings of the Russian Orthodox Church, which considered uncut facial hair a reflection of piety. Man was created in the  image of God; that included the beard. To shave it was a grave sin.\n To the pious, the beard tax was a shocking scandal.  Rumors circulated that Peter was not the real tsar but a replacement installed by Russia\u2019s enemies. Anonymous letters accusing the tsar of blasphemy were  scattered on the city streets. Nevertheless, the shavings continued.\n Finally, in 1705, the Russian military division known as the strel\u2019tsy initiated an open revolt in the town of Astrakhan. A letter from the rebels  proclaimed that they were taking a stand for the Christian faith, and against shaving and foreign dress. The revolt was crushed, and hundreds of rebels  lost their lives.\n The beard tax was just one way that the Tsar sparred with the Church. With typical flair, he organized his drinking companions into a club known as the \u201cAll-Jesting and All-Drunken Synod of Fools and Jesters.\u201d The members played at being cardinals and bishops and performed mock marriages and ceremonies.\n Reading between the lines, it sounds hellish: enforced merriment, compulsory drunkenness, and endless feasts and masquerades. There was no escape from the All-Drunken Synod; appointments were for life. In this way, blasphemy served as a test of loyalty for the tsar\u2019s closest companions. The implicit choice was clear: Peter or the Church.\n  Privacy Policy \u00a0  Contact Us You may unsubscribe at any time by clicking on the provided link on any marketing message.\n  As the historian V. M. Zhivov  writes in \u201cCultural Reforms in Peter I\u2019s System of Transformations,\u201d by challenging the Church\u2019s power, the Tsar sought to frame himself as a semi-divine figure, outside of the bounds of normal society:\n The emperor demonstrated that he commanded divine power, and society had the choice of either accepting this inhuman superiority or rejecting it as a satanic enterprise. In any case these ludic enterprises posed a religious dilemma for society\u2026 The emperor rose above reality and, wielding the power of life and death, transformed that reality according to his desire, turning age-old customs into blasphemous entertainments and playful inventions into state institutions.\n Like the beard tax itself, the conflict seems absurd: a few drunken nobles, playing at being priests. But the struggle\u2014one over the very nature of royal power\u2014was deadly serious.\n        JSTOR is a digital library for scholars, researchers, and students. JSTOR Daily readers can access the original research behind our articles for free on JSTOR.\n  The Numismatic Chronicle and Journal of the Numismatic Society, Vol. 7 (APRIL, 1844\u2013JANUARY, 1845), pp. 153-155\n  The Bulletin of the National Tax Association, Vol. 22, No. 1 (October, 1936), pp. 7-12\n  Privacy Policy \u00a0  Contact Us You may unsubscribe at any time by clicking on the provided link on any marketing message.", "posttime": "2021-07-27 23:57:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u80e1\u5b50,great,\u4fc4\u7f57\u65af", "title": "\u5f7c\u5f97\u5927\u5e1d\u7684\u80e1\u5b50\u7a0e", "title_en": "Peter the Great\u2019s Beard Tax", "transed": 1, "url": "https://daily.jstor.org/peter-the-greats-beard-tax/", "via": "", "real_tags": ["\u80e1\u5b50", "great", "\u4fc4\u7f57\u65af"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070080, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd1\u5e74\u6765\uff0c\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u5728\u4e00\u7cfb\u5217\u590d\u6742\u7684\u6e38\u620f\u73af\u5883\u4e2d\u53d6\u5f97\u4e86\u6210\u529f\u3002\u4f8b\u5982\uff0cAlphaZero \u5728\u5f00\u59cb\u65f6\u53ea\u77e5\u9053\u5982\u4f55\u4e0b\u68cb\u7684\u57fa\u672c\u89c4\u5219\uff0c\u5c31\u51fb\u8d25\u4e86\u56fd\u9645\u8c61\u68cb\u3001\u5c06\u68cb\u548c\u56f4\u68cb\u7684\u4e16\u754c\u51a0\u519b\u7a0b\u5e8f\u3002\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60 (RL)\uff0c\u8fd9\u4e2a\u5355\u4e00\u7cfb\u7edf\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u548c\u9519\u8bef\u7684\u8fc7\u7a0b\u8fdb\u884c\u4e00\u8f6e\u53c8\u4e00\u8f6e\u7684\u6e38\u620f\u6765\u5b66\u4e60\u3002\u4f46\u662f AlphaZero \u4ecd\u7136\u5728\u6bcf\u573a\u6bd4\u8d5b\u4e2d\u5355\u72ec\u8bad\u7ec3\u2014\u2014\u5982\u679c\u4e0d\u4ece\u5934\u5f00\u59cb\u91cd\u590d\u5f3a\u5316\u5b66\u4e60\u8fc7\u7a0b\uff0c\u5c31\u65e0\u6cd5\u7b80\u5355\u5730\u5b66\u4e60\u53e6\u4e00\u4e2a\u6e38\u620f\u6216\u4efb\u52a1\u3002 RL \u7684\u5176\u4ed6\u6210\u529f\u4f5c\u54c1\u4e5f\u662f\u5982\u6b64\uff0c\u4f8b\u5982 Atari\u3001Capture the Flag\u3001\u661f\u9645\u4e89\u9738 II\u3001Dota 2 \u548c\u6349\u8ff7\u85cf\u3002 DeepMind \u89e3\u51b3\u667a\u80fd\u4ee5\u63a8\u52a8\u79d1\u5b66\u548c\u4eba\u7c7b\u8fdb\u6b65\u7684\u4f7f\u547d\u4f7f\u6211\u4eec\u63a2\u7d22\u5982\u4f55\u514b\u670d\u8fd9\u4e00\u9650\u5236\u4ee5\u521b\u5efa\u5177\u6709\u66f4\u901a\u7528\u548c\u9002\u5e94\u6027\u884c\u4e3a\u7684 AI \u4ee3\u7406\u3002\u8fd9\u4e9b\u667a\u80fd\u4f53\u65e0\u9700\u4e00\u6b21\u5b66\u4e60\u4e00\u4e2a\u6e38\u620f\uff0c\u800c\u662f\u80fd\u591f\u5bf9\u5168\u65b0\u7684\u6761\u4ef6\u505a\u51fa\u53cd\u5e94\uff0c\u5e76\u73a9\u4e00\u6574\u5957\u6e38\u620f\u548c\u4efb\u52a1\uff0c\u5305\u62ec\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u6e38\u620f\u548c\u4efb\u52a1\u3002\u4eca\u5929\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u201cOpen-Ended Learning Leads to General Capable Agents\u201d\uff0c\u8fd9\u662f\u4e00\u4efd\u9884\u5370\u672c\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4eec\u8bad\u7ec3\u80fd\u591f\u5728\u4e0d\u9700\u8981\u4eba\u7c7b\u4ea4\u4e92\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u73a9\u8bb8\u591a\u4e0d\u540c\u6e38\u620f\u7684\u4ee3\u7406\u7684\u7b2c\u4e00\u6b65\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u6e38\u620f\u73af\u5883\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a XLand\uff0c\u5176\u4e2d\u5305\u62ec\u5728\u4e00\u81f4\u7684\u3001\u4e0e\u4eba\u7c7b\u76f8\u5173\u7684 3D \u4e16\u754c\u4e2d\u7684\u8bb8\u591a\u591a\u4eba\u6e38\u620f\u3002\u8fd9\u79cd\u73af\u5883\u4f7f\u5f97\u5236\u5b9a\u65b0\u7684\u5b66\u4e60\u7b97\u6cd5\u6210\u4e3a\u53ef\u80fd\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u52a8\u6001\u63a7\u5236\u4ee3\u7406\u7684\u8bad\u7ec3\u65b9\u5f0f\u548c\u8bad\u7ec3\u7684\u6e38\u620f\u3002\u4f5c\u4e3a\u5bf9\u8bad\u7ec3\u4e2d\u51fa\u73b0\u7684\u6311\u6218\u7684\u54cd\u5e94\uff0c\u4ee3\u7406\u7684\u80fd\u529b\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5b66\u4e60\u8fc7\u7a0b\u4e0d\u65ad\u5b8c\u5584\u8bad\u7ec3\u4efb\u52a1\uff0c\u56e0\u6b64\u4ee3\u7406\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u5b66\u4e60\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u80fd\u591f\u6210\u529f\u5b8c\u6210\u5e7f\u6cdb\u4efb\u52a1\u7684\u4ee3\u7406\u2014\u2014\u4ece\u7b80\u5355\u7684\u5bf9\u8c61\u5bfb\u627e\u95ee\u9898\u5230\u590d\u6742\u7684\u6e38\u620f\uff0c\u6bd4\u5982\u6349\u8ff7\u85cf\u548c\u593a\u65d7\uff0c\u8fd9\u4e9b\u5728\u8bad\u7ec3\u4e2d\u90fd\u6ca1\u6709\u9047\u5230\u8fc7\u3002\u6211\u4eec\u53d1\u73b0\u4ee3\u7406\u8868\u73b0\u51fa\u4e00\u822c\u7684\u542f\u53d1\u5f0f\u884c\u4e3a\uff0c\u4f8b\u5982\u5b9e\u9a8c\uff0c\u5e7f\u6cdb\u9002\u7528\u4e8e\u8bb8\u591a\u4efb\u52a1\u800c\u4e0d\u662f\u4e13\u95e8\u7528\u4e8e\u5355\u4e2a\u4efb\u52a1\u7684\u884c\u4e3a\u3002\u8fd9\u79cd\u65b0\u65b9\u6cd5\u6807\u5fd7\u7740\u671d\u7740\u521b\u5efa\u66f4\u901a\u7528\u7684\u4ee3\u7406\u8fc8\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u8be5\u4ee3\u7406\u5177\u6709\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u4e2d\u5feb\u901f\u9002\u5e94\u7684\u7075\u6d3b\u6027\u3002\u7f3a\u4e4f\u8bad\u7ec3\u6570\u636e\u2014\u2014\u5176\u4e2d\u201c\u6570\u636e\u201d\u70b9\u662f\u4e0d\u540c\u7684\u4efb\u52a1\u2014\u2014\u4e00\u76f4\u662f\u9650\u5236 RL \u8bad\u7ec3\u7684\u667a\u80fd\u4f53\u884c\u4e3a\u666e\u904d\u9002\u7528\u4e8e\u8de8\u6e38\u620f\u7684\u4e3b\u8981\u56e0\u7d20\u4e4b\u4e00\u3002\u7531\u4e8e\u65e0\u6cd5\u5728\u8db3\u591f\u591a\u7684\u4efb\u52a1\u96c6\u4e0a\u8bad\u7ec3\u667a\u80fd\u4f53\uff0c\u4f7f\u7528 RL \u8bad\u7ec3\u7684\u667a\u80fd\u4f53\u65e0\u6cd5\u5c06\u4ed6\u4eec\u5b66\u4e60\u5230\u7684\u884c\u4e3a\u9002\u5e94\u65b0\u4efb\u52a1\u3002\u4f46\u662f\u901a\u8fc7\u8bbe\u8ba1\u6a21\u62df\u7a7a\u95f4\u4ee5\u5141\u8bb8\u7a0b\u5e8f\u751f\u6210\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u7684\u56e2\u961f\u521b\u9020\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u8bad\u7ec3\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u521b\u5efa\u7684\u4efb\u52a1\u5e76\u4ece\u4e2d\u4ea7\u751f\u7ecf\u9a8c\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5728 XLand \u4e2d\u5305\u542b\u6570\u5341\u4ebf\u4e2a\u4efb\u52a1\uff0c\u8de8\u8d8a\u4e0d\u540c\u7684\u6e38\u620f\u3001\u4e16\u754c\u548c\u73a9\u5bb6\u3002\u6211\u4eec\u7684 AI \u4ee3\u7406\u4f4d\u4e8e\u591a\u4eba\u6e38\u620f\u73af\u5883\u4e2d\u7684 3D \u7b2c\u4e00\u4eba\u79f0\u5316\u8eab\uff0c\u65e8\u5728\u6a21\u62df\u7269\u7406\u4e16\u754c\u3002\u73a9\u5bb6\u901a\u8fc7\u89c2\u5bdf RGB \u56fe\u50cf\u6765\u611f\u77e5\u5468\u56f4\u73af\u5883\uff0c\u5e76\u6536\u5230\u4ed6\u4eec\u76ee\u6807\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u7136\u540e\u4ed6\u4eec\u4f1a\u5728\u4e00\u7cfb\u5217\u6e38\u620f\u4e2d\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u4e9b\u6e38\u620f\u5c31\u50cf\u5bfb\u627e\u7269\u4f53\u548c\u5bfc\u822a\u4e16\u754c\u7684\u5408\u4f5c\u6e38\u620f\u4e00\u6837\u7b80\u5355\uff0c\u73a9\u5bb6\u7684\u76ee\u6807\u53ef\u80fd\u662f\u201c\u9760\u8fd1\u7d2b\u8272\u7acb\u65b9\u4f53\u201d\u3002\u66f4\u590d\u6742\u7684\u6e38\u620f\u53ef\u4ee5\u57fa\u4e8e\u4ece\u591a\u4e2a\u5956\u52b1\u9009\u9879\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u4f8b\u5982\u201c\u9760\u8fd1\u7d2b\u8272\u7acb\u65b9\u4f53\u6216\u5c06\u9ec4\u8272\u7403\u4f53\u653e\u5728\u7ea2\u8272\u5730\u677f\u4e0a\u201d\uff0c\u800c\u66f4\u5177\u7ade\u4e89\u529b\u7684\u6e38\u620f\u5305\u62ec\u4e0e\u5408\u4f5c\u73a9\u5bb6\u5bf9\u6218\uff0c\u4f8b\u5982\u5bf9\u79f0\u7684\u6349\u8ff7\u85cf\u6bcf\u4e2a\u73a9\u5bb6\u90fd\u6709\u4e00\u4e2a\u76ee\u6807\uff0c\u201c\u770b\u5230\u5bf9\u624b\uff0c\u8ba9\u5bf9\u624b\u770b\u4e0d\u5230\u6211\u201d\u3002\u6bcf\u4e2a\u6e38\u620f\u90fd\u5b9a\u4e49\u4e86\u5bf9\u73a9\u5bb6\u7684\u5956\u52b1\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u7684\u6700\u7ec8\u76ee\u6807\u90fd\u662f\u6700\u5927\u5316\u5956\u52b1\u3002\u7531\u4e8e XLand \u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u6307\u5b9a\uff0c\u6e38\u620f\u7a7a\u95f4\u5141\u8bb8\u4ee5\u81ea\u52a8\u5316\u548c\u7b97\u6cd5\u65b9\u5f0f\u751f\u6210\u6570\u636e\u3002\u5e76\u4e14\u7531\u4e8e XLand \u4e2d\u7684\u4efb\u52a1\u6d89\u53ca\u591a\u4e2a\u73a9\u5bb6\uff0c\u5171\u540c\u73a9\u5bb6\u7684\u884c\u4e3a\u6781\u5927\u5730\u5f71\u54cd\u4e86 AI \u4ee3\u7406\u9762\u4e34\u7684\u6311\u6218\u3002\u8fd9\u4e9b\u590d\u6742\u7684\u975e\u7ebf\u6027\u4ea4\u4e92\u521b\u9020\u4e86\u4e00\u4e2a\u7406\u60f3\u7684\u8bad\u7ec3\u6570\u636e\u6e90\uff0c\u56e0\u4e3a\u6709\u65f6\u5373\u4f7f\u73af\u5883\u7ec4\u4ef6\u7684\u5fae\u5c0f\u53d8\u5316\u4e5f\u4f1a\u5bfc\u81f4\u4ee3\u7406\u9762\u4e34\u7684\u6311\u6218\u53d1\u751f\u5de8\u5927\u53d8\u5316\u3002\u6211\u4eec\u7814\u7a76\u7684\u6838\u5fc3\u662f\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u5728\u8bad\u7ec3\u6211\u4eec\u4ee3\u7406\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4f5c\u7528\u3002\u6211\u4eec\u4f7f\u7528\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u63d0\u4f9b\u4e86\u4e00\u79cd\u5bf9\u667a\u80fd\u4f53\u5185\u90e8\u5faa\u73af\u72b6\u6001\u7684\u6ce8\u610f\u529b\u673a\u5236\u2014\u2014\u901a\u8fc7\u5bf9\u667a\u80fd\u4f53\u6b63\u5728\u73a9\u7684\u6e38\u620f\u7279\u6709\u7684\u5b50\u76ee\u6807\u7684\u4f30\u8ba1\u6765\u5e2e\u52a9\u5f15\u5bfc\u667a\u80fd\u4f53\u7684\u6ce8\u610f\u529b\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u76ee\u6807\u6ce8\u610f\u4ee3\u7406 (GOAT) \u53ef\u4ee5\u5b66\u4e60\u66f4\u901a\u7528\u7684\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u63a2\u8ba8\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8bad\u7ec3\u4efb\u52a1\u7684\u4ec0\u4e48\u5206\u5e03\u4f1a\u4ea7\u751f\u6700\u597d\u7684\u4ee3\u7406\uff0c\u5c24\u5176\u662f\u5728\u5982\u6b64\u5e7f\u9614\u7684\u73af\u5883\u4e2d\uff1f\u6211\u4eec\u4f7f\u7528\u7684\u52a8\u6001\u4efb\u52a1\u751f\u6210\u5141\u8bb8\u4ee3\u7406\u8bad\u7ec3\u4efb\u52a1\u7684\u5206\u5e03\u4e0d\u65ad\u53d8\u5316\uff1a\u751f\u6210\u7684\u6bcf\u4e2a\u4efb\u52a1\u65e2\u4e0d\u592a\u96be\u4e5f\u4e0d\u592a\u5bb9\u6613\uff0c\u4f46\u6b63\u597d\u9002\u5408\u8bad\u7ec3\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3 (PBT) \u6765\u8c03\u6574\u57fa\u4e8e\u9002\u5e94\u5ea6\u7684\u52a8\u6001\u4efb\u52a1\u751f\u6210\u7684\u53c2\u6570\uff0c\u65e8\u5728\u63d0\u9ad8\u4ee3\u7406\u7684\u4e00\u822c\u80fd\u529b\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u591a\u4e2a\u8bad\u7ec3\u8fd0\u884c\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u6bcf\u4e00\u4ee3\u4ee3\u7406\u90fd\u53ef\u4ee5\u5f15\u5bfc\u4e0a\u4e00\u4ee3\u4ee3\u7406\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u4ee5\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e3a\u6838\u5fc3\u7684\u6700\u7ec8\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u968f\u7740\u6bcf\u4e00\u6b65\u7ecf\u9a8c\u66f4\u65b0\u4ee3\u7406\u7684\u795e\u7ecf\u7f51\u7edc\uff1a\u7ecf\u9a8c\u6b65\u9aa4\u6765\u81ea\u4e8e\u54cd\u5e94\u4ee3\u7406\u884c\u4e3a\u800c\u52a8\u6001\u751f\u6210\u7684\u8bad\u7ec3\u4efb\u52a1\uff0c\u5728\u6700\u5916\u5c42\u7684\u5faa\u73af\u4e2d\uff0c\u51e0\u4ee3\u4ee3\u7406\u76f8\u4e92\u5f15\u5bfc\uff0c\u4e3a\u591a\u4eba\u6e38\u620f\u73af\u5883\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u5408\u4f5c\u73a9\u5bb6\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u8fdb\u7a0b\u672c\u8eab\u7684\u8861\u91cf\u6807\u51c6\u3002\u8bad\u7ec3\u8fc7\u7a0b\u4ece\u5934\u5f00\u59cb\uff0c\u8fed\u4ee3\u6784\u5efa\u590d\u6742\u6027\uff0c\u4e0d\u65ad\u6539\u53d8\u5b66\u4e60\u95ee\u9898\u4ee5\u4fdd\u6301\u4ee3\u7406\u5b66\u4e60\u3002\u7ec4\u5408\u5b66\u4e60\u7cfb\u7edf\u7684\u8fed\u4ee3\u6027\u8d28\u4e0d\u4f18\u5316\u6709\u754c\u6027\u80fd\u6307\u6807\uff0c\u800c\u662f\u4f18\u5316\u8fed\u4ee3\u5b9a\u4e49\u7684\u901a\u7528\u80fd\u529b\u8303\u56f4\uff0c\u5bfc\u81f4\u4ee3\u7406\u7684\u6f5c\u5728\u5f00\u653e\u5f0f\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4ec5\u53d7\u73af\u5883\u7a7a\u95f4\u548c\u4ee3\u7406\u7684\u8868\u8fbe\u80fd\u529b\u7684\u9650\u5236\u795e\u7ecf\u7f51\u7edc\u3002\u4e3a\u4e86\u8861\u91cf\u4ee3\u7406\u5728\u8fd9\u4e2a\u5e7f\u9614\u7684\u5b87\u5b99\u4e2d\u7684\u8868\u73b0\uff0c\u6211\u4eec\u4f7f\u7528\u4e0e\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u4fdd\u6301\u5206\u79bb\u7684\u6e38\u620f\u548c\u4e16\u754c\u521b\u5efa\u4e86\u4e00\u7ec4\u8bc4\u4f30\u4efb\u52a1\u3002\u8fd9\u4e9b\u201c\u4fdd\u7559\u201d\u4efb\u52a1\u5305\u62ec\u4e13\u95e8\u8bbe\u8ba1\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u6349\u8ff7\u85cf\u548c\u593a\u65d7\u3002\u7531\u4e8e XLand \u7684\u5927\u5c0f\uff0c\u4e86\u89e3\u548c\u8868\u5f81\u6211\u4eec\u7684\u4ee3\u7406\u7684\u6027\u80fd\u53ef\u80fd\u662f\u4e00\u4e2a\u6311\u6218\u3002\u6bcf\u9879\u4efb\u52a1\u90fd\u6d89\u53ca\u4e0d\u540c\u7a0b\u5ea6\u7684\u590d\u6742\u6027\u3001\u4e0d\u540c\u89c4\u6a21\u7684\u53ef\u5b9e\u73b0\u5956\u52b1\u4ee5\u53ca\u4e0d\u540c\u7684\u667a\u80fd\u4f53\u80fd\u529b\uff0c\u56e0\u6b64\u4ec5\u5c06\u5956\u52b1\u4e0e\u4fdd\u7559\u7684\u4efb\u52a1\u8fdb\u884c\u5e73\u5747\u5c06\u9690\u85cf\u590d\u6742\u6027\u548c\u5956\u52b1\u7684\u5b9e\u9645\u5dee\u5f02\u2014\u2014\u5e76\u5c06\u6709\u6548\u5730\u5c06\u6240\u6709\u4efb\u52a1\u89c6\u4e3a\u540c\u7b49\u6709\u8da3\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u7a0b\u5e8f\u751f\u6210\u7684\u73af\u5883\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u9650\u5236\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u5f53\u524d\u8bad\u7ec3\u7684\u73a9\u5bb6\u96c6\u8ba1\u7b97\u7684\u7eb3\u4ec0\u5747\u8861\u503c\u5bf9\u6bcf\u4e2a\u4efb\u52a1\u7684\u5206\u6570\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u5176\u6b21\uff0c\u6211\u4eec\u8003\u8651\u5f52\u4e00\u5316\u5206\u6570\u7684\u6574\u4e2a\u5206\u5e03\u2014\u2014\u800c\u4e0d\u662f\u67e5\u770b\u5e73\u5747\u5f52\u4e00\u5316\u5206\u6570\uff0c\u6211\u4eec\u67e5\u770b\u5f52\u4e00\u5316\u5206\u6570\u7684\u4e0d\u540c\u767e\u5206\u4f4d\u6570\u2014\u2014\u4ee5\u53ca\u4ee3\u7406\u81f3\u5c11\u83b7\u5f97\u4e00\u4e2a\u5956\u52b1\u6b65\u9aa4\u7684\u4efb\u52a1\u767e\u5206\u6bd4\uff1a\u53c2\u4e0e\u3002\u8fd9\u610f\u5473\u7740\u53ea\u6709\u5f53\u4e00\u4e2a\u4ee3\u7406\u5728\u6240\u6709\u767e\u5206\u4f4d\u6570\u4e0a\u7684\u8868\u73b0\u90fd\u8d85\u8fc7\u4e86\u5b83\u65f6\uff0c\u624d\u88ab\u8ba4\u4e3a\u6bd4\u53e6\u4e00\u4e2a\u4ee3\u7406\u66f4\u597d\u3002\u8fd9\u79cd\u6d4b\u91cf\u65b9\u6cd5\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bc4\u4f30\u4ee3\u7406\u6027\u80fd\u548c\u7a33\u5065\u6027\u7684\u6709\u610f\u4e49\u7684\u65b9\u6cd5\u3002\n\u5728\u5bf9\u6211\u4eec\u7684\u667a\u80fd\u4f53\u8fdb\u884c\u4e86\u4e94\u4ee3\u8bad\u7ec3\u540e\uff0c\u6211\u4eec\u770b\u5230\u5728\u6211\u4eec\u4fdd\u7559\u7684\u8bc4\u4f30\u7a7a\u95f4\u4e2d\u5b66\u4e60\u548c\u6027\u80fd\u7684\u6301\u7eed\u6539\u8fdb\u3002\u5728 XLand \u7684 4,000 \u4e2a\u72ec\u7279\u4e16\u754c\u4e2d\u73a9\u5927\u7ea6 700,000 \u4e2a\u72ec\u7279\u6e38\u620f\uff0c\u6700\u540e\u4e00\u4ee3\u7684\u6bcf\u4e2a\u667a\u80fd\u4f53\u90fd\u7ecf\u5386\u4e86 2000 \u4ebf\u6b21\u8bad\u7ec3\u6b65\u9aa4\uff0c\u8fd9\u662f 340 \u4e07\u4e2a\u72ec\u7279\u4efb\u52a1\u7684\u7ed3\u679c\u3002\u76ee\u524d\uff0c\u6211\u4eec\u7684\u667a\u80fd\u4f53\u5df2\u7ecf\u80fd\u591f\u53c2\u4e0e\u6bcf\u4e2a\u7a0b\u5e8f\u751f\u6210\u7684\u8bc4\u4f30\u4efb\u52a1\uff0c\u9664\u4e86\u5c11\u6570\u5373\u4f7f\u662f\u4eba\u7c7b\u4e5f\u65e0\u6cd5\u5b8c\u6210\u7684\u8bc4\u4f30\u4efb\u52a1\u3002\u6211\u4eec\u770b\u5230\u7684\u7ed3\u679c\u6e05\u695a\u5730\u5c55\u793a\u4e86\u6574\u4e2a\u4efb\u52a1\u7a7a\u95f4\u4e2d\u7684\u4e00\u822c\u96f6\u6837\u672c\u884c\u4e3a\u2014\u2014\u6807\u51c6\u5316\u5206\u6570\u767e\u5206\u4f4d\u6570\u7684\u524d\u6cbf\u4e0d\u65ad\u63d0\u9ad8\u3002\u5b9a\u6027\u5730\u89c2\u5bdf\u6211\u4eec\u7684\u4ee3\u7406\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u4e00\u822c\u7684\u3001\u542f\u53d1\u5f0f\u7684\u884c\u4e3a\u51fa\u73b0\u2014\u2014\u800c\u4e0d\u662f\u9488\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u9ad8\u5ea6\u4f18\u5316\u7684\u3001\u7279\u5b9a\u7684\u884c\u4e3a\u3002\u4e0e\u667a\u80fd\u4f53\u786e\u5207\u5730\u77e5\u9053\u5728\u65b0\u60c5\u51b5\u4e0b\u201c\u6700\u597d\u7684\u4e8b\u60c5\u201d\u76f8\u6bd4\uff0c\u6211\u4eec\u770b\u5230\u4e86\u667a\u80fd\u4f53\u8bd5\u9a8c\u548c\u6539\u53d8\u4e16\u754c\u72b6\u6001\u76f4\u5230\u4ed6\u4eec\u8fbe\u5230\u6709\u76ca\u72b6\u6001\u7684\u8bc1\u636e\u3002\u6211\u4eec\u8fd8\u770b\u5230\u4ee3\u7406\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u5305\u62ec\u906e\u6321\u53ef\u89c1\u6027\u3001\u521b\u5efa\u5761\u9053\u548c\u68c0\u7d22\u5176\u4ed6\u5bf9\u8c61\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u73af\u5883\u662f\u591a\u4eba\u6e38\u620f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u5bf9\u6301\u4e45\u7684\u793e\u4ea4\u56f0\u5883\u8fdb\u884c\u8bad\u7ec3\u65f6\u68c0\u67e5\u4ee3\u7406\u884c\u4e3a\u7684\u8fdb\u5c55\uff0c\u4f8b\u5982\u5728\u201c\u5403\u9e21\u201d\u6e38\u620f\u4e2d\u3002\u968f\u7740\u8bad\u7ec3\u7684\u8fdb\u884c\uff0c\u6211\u4eec\u7684\u4ee3\u7406\u5728\u73a9\u81ea\u5df1\u7684\u526f\u672c\u65f6\u4f3c\u4e4e\u8868\u73b0\u51fa\u66f4\u591a\u7684\u5408\u4f5c\u884c\u4e3a\u3002\u9274\u4e8e\u73af\u5883\u7684\u6027\u8d28\uff0c\u5f88\u96be\u786e\u5b9a\u610f\u5411\u6027\u2014\u2014\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u884c\u4e3a\u4f3c\u4e4e\u662f\u5076\u7136\u7684\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u770b\u5230\u5b83\u4eec\u59cb\u7ec8\u5982\u4e00\u5730\u53d1\u751f\u3002\u5206\u6790\u667a\u80fd\u4f53\u7684\u5185\u90e8\u8868\u5f81\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u901a\u8fc7\u5728\u5e7f\u9614\u7684\u4efb\u52a1\u7a7a\u95f4\u4e2d\u91c7\u7528\u8fd9\u79cd\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\uff0c\u6211\u4eec\u7684\u667a\u80fd\u4f53\u4e86\u89e3\u4ed6\u4eec\u8eab\u4f53\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u5e76\u4e14\u4ed6\u4eec\u4e86\u89e3\u6e38\u620f\u7684\u9ad8\u7ea7\u7ed3\u6784\u4ed6\u4eec\u9047\u5230\u3002\u4e5f\u8bb8\u66f4\u6709\u8da3\u7684\u662f\uff0c\u5b83\u4eec\u6e05\u695a\u5730\u8ba4\u8bc6\u5230\u73af\u5883\u7684\u5956\u52b1\u72b6\u6001\u3002\u65b0\u4efb\u52a1\u4e2d\u884c\u4e3a\u7684\u8fd9\u79cd\u666e\u904d\u6027\u548c\u591a\u6837\u6027\u6697\u793a\u4e86\u5728\u4e0b\u6e38\u4efb\u52a1\u4e0a\u5fae\u8c03\u8fd9\u4e9b\u4ee3\u7406\u7684\u6f5c\u529b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5728\u6280\u672f\u8bba\u6587\u4e2d\u8868\u660e\uff0c\u53ea\u9700\u5bf9\u65b0\u63d0\u51fa\u7684\u590d\u6742\u4efb\u52a1\u8fdb\u884c 30 \u5206\u949f\u7684\u96c6\u4e2d\u8bad\u7ec3\uff0c\u4ee3\u7406\u5c31\u53ef\u4ee5\u5feb\u901f\u9002\u5e94\uff0c\u800c\u4ece\u5934\u5f00\u59cb\u7528 RL \u8bad\u7ec3\u7684\u4ee3\u7406\u6839\u672c\u65e0\u6cd5\u5b66\u4e60\u8fd9\u4e9b\u4efb\u52a1\u3002\u901a\u8fc7\u5f00\u53d1\u50cf XLand \u8fd9\u6837\u7684\u73af\u5883\u548c\u652f\u6301\u5f00\u653e\u5f0f\u590d\u6742\u6027\u521b\u5efa\u7684\u65b0\u8bad\u7ec3\u7b97\u6cd5\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230 RL \u4ee3\u7406\u96f6\u6837\u672c\u6cdb\u5316\u7684\u660e\u663e\u8ff9\u8c61\u3002\u867d\u7136\u8fd9\u4e9b\u667a\u80fd\u4f53\u5f00\u59cb\u5728\u8fd9\u4e2a\u4efb\u52a1\u7a7a\u95f4\u4e2d\u666e\u904d\u5177\u5907\u80fd\u529b\uff0c\u4f46\u6211\u4eec\u671f\u5f85\u7ee7\u7eed\u6211\u4eec\u7684\u7814\u7a76\u548c\u5f00\u53d1\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5b83\u4eec\u7684\u6027\u80fd\u5e76\u521b\u5efa\u66f4\u5177\u9002\u5e94\u6027\u7684\u667a\u80fd\u4f53\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u6280\u672f\u8bba\u6587\u7684\u9884\u5370\u672c\u2014\u2014\u4ee5\u53ca\u6211\u4eec\u6240\u770b\u5230\u7684\u7ed3\u679c\u7684\u89c6\u9891\u2014\u2014\u80fd\u5e2e\u52a9\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u540c\u6837\u770b\u5230\u4e00\u6761\u65b0\u9014\u5f84\uff0c\u4ee5\u521b\u9020\u66f4\u5177\u9002\u5e94\u6027\u3001\u666e\u904d\u80fd\u529b\u66f4\u5f3a\u7684\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u3002\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9b\u8fdb\u6b65\u611f\u5230\u5174\u594b\uff0c\u8bf7\u8003\u8651\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u9884\u5370\u672c\u201c\u5f00\u653e\u5f0f\u5b66\u4e60\u5bfc\u81f4\u901a\u7528\u667a\u80fd\u4f53\u201d\u3002\u8fd9\u7bc7\u535a\u6587\u57fa\u4e8e\u5f00\u653e\u5f0f\u5b66\u4e60\u56e2\u961f\u7684\u8054\u5408\u5de5\u4f5c\uff08\u6309\u540d\u5b57\u7684\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\uff09\uff1aAdam Stooke\u3001Anuj Mahajan\u3001Catarina Barros\u3001Charlie Deck\u3001Jakob Bauer\u3001Jakub Sygnoowski\u3001Maja Trebacz\u3001Max Jaderberg\u3001Michael Mathieu\u3001\u7eb3\u7279\u00b7\u9ea6\u5361\u5229\u65af\u3001\u5a1c\u5854\u8389\u00b7\u5e03\u62c9\u5fb7\u5229-\u65bd\u7c73\u683c\u3001\u7eb3\u6492\u5c3c\u5c14\u00b7\u9ec4\u3001\u5c3c\u53e4\u62c9\u65af\u00b7\u6ce2\u585e\u5c14\u3001\u7f57\u4f2f\u5854\u00b7\u83b1\u83b1\u52aa\u3001\u65af\u8482\u82ac\u00b7\u4f11\u65af-\u83f2\u7279\u3001\u74e6\u4f26\u4e01\u00b7\u8fbe\u5229\u5df4\u5fb7\u3001\u6c83\u4f0a\u5207\u8d6b\u00b7\u739b\u4e3d\u5b89\u00b7\u67e5\u5c14\u5185\u5947\u3002\n\u638c\u63e1\u591a\u4eba\u89c6\u9891\u6e38\u620f\u4e2d\u6d89\u53ca\u7684\u7b56\u7565\u3001\u6218\u672f\u7406\u89e3\u548c\u56e2\u961f\u5408\u4f5c\uff0c\u4ee3\u8868\u4e86\u2026\u2026 AlphaStar \u662f\u7b2c\u4e00\u4e2a\u5728\u6ca1\u6709\u4efb\u4f55\u6e38\u620f\u9650\u5236\u7684\u60c5\u51b5\u4e0b\u8fdb\u5165\u5e7f\u53d7\u6b22\u8fce\u7684\u7535\u5b50\u7ade\u6280\u9876\u7ea7\u8054\u8d5b\u7684\u4eba\u5de5\u667a\u80fd\u3002\u4f53\u80b2\u5206\u6790\u6b63\u5904\u4e8e\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u65f6\u4ee3\uff0c\u4e3a AI \u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6709\u8da3\u7684\u673a\u4f1a......\u4e0e EMBL-EBI \u5408\u4f5c\uff0c\u6211\u4eec\u975e\u5e38\u81ea\u8c6a\u5730\u63a8\u51fa AlphaFold \u86cb\u767d\u8d28\u7ed3\u6784\u6570\u636e\u5e93\u3002\u6211\u4eec\u7684\u7814\u7a76\u63a2\u7d22\u4e86\u89e3\u51b3\u65e7\u95ee\u9898\u7684\u65b0\u65b9\u6cd5\uff1a\u6211\u4eec\u91cd\u65b0\u5236\u5b9a\u4e86\u4e3b\u6210\u5206\u5206\u6790 (PCA)\uff0c\u8fd9\u662f\u4e00\u79cd......\u5728\u672a\u77e5\u73af\u5883\u4e2d\u89c4\u5212\u83b7\u80dc\u7b56\u7565\u662f\u8ffd\u6c42\u901a\u7528\u7b97\u6cd5\u7684\u4e00\u4e2a\u8fdb\u6b65\u3002\u4ecb\u7ecd\u6211\u4eec\u7684 JAX \u751f\u6001\u7cfb\u7edf\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u4eec\u53d1\u73b0\u5b83\u5bf9\u6211\u4eec\u7684 AI \u7814\u7a76\u6709\u7528\u3002", "note_en": "In recent years, artificial intelligence agents have succeeded in a range of complex game environments. For instance,  AlphaZero beat world-champion programs in chess, shogi, and Go after starting out with knowing no more than the basic rules of how to play. Through  reinforcement learning (RL), this single system learnt by playing round after round of games through a repetitive process of trial and error. But AlphaZero still trained separately on each game \u2014 unable to simply learn another game or task without repeating the RL process from scratch. The same is true for other successes of RL, such as  Atari,  Capture the Flag,  StarCraft II,  Dota 2, and  Hide-and-Seek. DeepMind\u2019s mission of solving intelligence to advance science and humanity led us to explore how we could overcome this limitation to create AI agents with more general and adaptive behaviour. Instead of learning one game at a time, these agents would be able to react to completely new conditions and play a whole universe of games and tasks, including ones never seen before.\n Today, we published &#34; Open-Ended Learning Leads to Generally Capable Agents,&#34; a preprint detailing our first steps to train an agent capable of playing many different games without needing human interaction data. We created a vast game environment we call XLand, which includes many multiplayer games within consistent, human-relatable 3D worlds. This environment makes it possible to formulate new learning algorithms, which dynamically control how an agent trains and the games on which it trains. The agent\u2019s capabilities improve iteratively as a response to the challenges that arise in training, with the learning process continually refining the training tasks so the agent never stops learning. The result is an agent with the ability to succeed at a wide spectrum of tasks \u2014 from simple object-finding problems to complex games like hide and seek and capture the flag, which were not encountered during training. We find the agent exhibits general, heuristic behaviours such as experimentation, behaviours that are widely applicable to many tasks rather than specialised to an individual task. This new approach marks an important step toward creating more general agents with the flexibility to adapt rapidly within constantly changing environments.\n       A lack of training data \u2014 where \u201cdata\u201d points are different tasks \u2014 has been one of the major factors limiting RL-trained agents\u2019 behaviour being general enough to apply across games. Without being able to train agents on a vast enough set of tasks, agents trained with RL have been unable to adapt their learnt behaviours to new tasks. But by designing a simulated space to allow for  procedurally generated tasks, our team created a way to train on, and generate experience from, tasks that are created programmatically. This enables us to include billions of tasks in XLand, across varied games, worlds, and players.\n Our AI agents inhabit 3D first-person avatars in a multiplayer environment meant to simulate the physical world. The players sense their surroundings by observing RGB images and receive a text description of their goal, and they train on a range of games. These games are as simple as cooperative games to find objects and navigate worlds, where the goal for a player could be \u201cbe near the purple cube.\u201d More complex games can be based on choosing from multiple rewarding options, such as \u201cbe near the purple cube or put the yellow sphere on the red floor,\u201d and more competitive games include playing against co-players, such as symmetric hide and seek where each player has the goal, \u201csee the opponent and make the opponent not see me.\u201d Each game defines the rewards for the players, and each player\u2019s ultimate objective is to maximise the rewards.\n Because XLand can be programmatically specified, the game space allows for data to be generated in an automated and algorithmic fashion. And because the tasks in XLand involve multiple players, the behaviour of co-players greatly influences the challenges faced by the AI agent. These complex, non-linear interactions create an ideal source of data to train on, since sometimes even small changes in the components of the environment can result in large changes in the challenges for the agents.\n      Central to our research is the role of  deep RL in training the neural networks of our agents. The neural network architecture we use provides an attention mechanism over the agent\u2019s internal recurrent state \u2014 helping guide the agent\u2019s attention with estimates of subgoals unique to the game the agent is playing. We\u2019ve found this goal-attentive agent (GOAT) learns more generally capable policies.\n We also explored the question, what distribution of training tasks will produce the best possible agent, especially in such a vast environment? The dynamic task generation we use allows for continual changes to the distribution of the agent\u2019s training tasks: every task is generated to be neither too hard nor too easy, but just right for training. We then use  population based training (PBT) to adjust the parameters of the dynamic task generation based on a fitness that aims to improve agents\u2019 general capability. And finally we chain together multiple training runs so each generation of agents can bootstrap off the previous generation.\n This leads to a final training process with deep RL at the core updating the neural networks of agents with every step of experience:\n the steps of experience come from training tasks that are dynamically generated in response to agents\u2019 behaviour,\n  at the outermost loop, the generations of agents bootstrap from each other, provide ever richer co-players to the multiplayer environment, and redefine the measurement of progression itself.\n The training process starts from scratch and iteratively builds complexity, constantly changing the learning problem to keep the agent learning. The iterative nature of the combined learning system, which does not optimise a bounded performance metric but rather the iteratively defined spectrum of general capability, leads to a potentially open-ended learning process for agents, limited only by the expressivity of the environment space and agent neural network.\n      To measure how agents perform within this vast universe, we create a set of evaluation tasks using games and worlds that remain separate from the data used for training. These \u201cheld-out\u201d tasks include specifically human-designed tasks like hide and seek and capture the flag.\n Because of the size of XLand, understanding and characterising the performance of our agents can be a challenge. Each task involves different levels of complexity, different scales of achievable rewards, and different capabilities of the agent, so merely averaging the reward over held out tasks would hide the actual differences in complexity and rewards \u2014 and would effectively treat all tasks as equally interesting, which isn\u2019t necessarily true of procedurally generated environments.\n To overcome these limitations, we take a different approach. Firstly, we normalise scores per task using the Nash equilibrium value computed using our current set of trained players. Secondly, we take into account the entire distribution of normalised scores \u2014 rather than looking at average normalised scores, we look at the different percentiles of normalised scores \u2014 as well as the percentage of tasks in which the agent scores at least one step of reward: participation. This means an agent is considered better than another agent only if it exceeds performance on all percentiles. This approach to measurement gives us a meaningful way to assess our agents\u2019 performance and robustness.\n  After training our agents for five generations, we saw consistent improvements in learning and performance across our held-out evaluation space. Playing roughly 700,000 unique games in 4,000 unique worlds within XLand, each agent in the final generation experienced 200 billion training steps as a result of 3.4 million unique tasks. At this time, our agents have been able to participate in every procedurally generated evaluation task except for a handful that were impossible even for a human. And the results we\u2019re seeing clearly exhibit general, zero-shot behaviour across the task space \u2014 with the frontier of normalised score percentiles continually improving.\n      Looking qualitatively at our agents, we often see general, heuristic behaviours emerge \u2014 rather than highly optimised, specific behaviours for individual tasks. Instead of agents knowing exactly the \u201cbest thing\u201d to do in a new situation, we see evidence of agents experimenting and changing the state of the world until they\u2019ve achieved a rewarding state. We also see agents rely on the use of other tools, including objects to occlude visibility, to create ramps, and to retrieve other objects. Because the environment is multiplayer, we can examine the progression of agent behaviours while training on held-out  social dilemmas, such as in a game of \u201c chicken\u201d. As training progresses, our agents appear to exhibit more cooperative behaviour when playing with a copy of themselves. Given the nature of the environment, it is difficult to pinpoint intentionality \u2014 the behaviours we see often appear to be accidental, but still we see them occur consistently.\n           Analysing the agent\u2019s internal representations, we can say that by taking this approach to reinforcement learning in a vast task space, our agents are aware of the basics of their bodies and the passage of time and that they understand the high-level structure of the games they encounter. Perhaps even more interestingly, they clearly recognise the reward states of their environment. This generality and diversity of behaviour in new tasks hints toward the potential to fine-tune these agents on downstream tasks. For instance, we show in the technical paper that with just 30 minutes of focused training on a newly presented complex task, the agents can quickly adapt, whereas agents trained with RL from scratch cannot learn these tasks at all.\n By developing an environment like XLand and new training algorithms that support the open-ended creation of complexity, we\u2019ve seen clear signs of zero-shot generalisation from RL agents. Whilst these agents are starting to be generally capable within this task space, we look forward to continuing our research and development to further improve their performance and create ever more adaptive agents.\n We hope the  preprint of our technical paper \u2014 and  videos of the results we\u2019ve seen \u2014 help other researchers likewise see a new path toward creating more adaptive, generally capable AI agents. And if you\u2019re excited by these advances, consider  joining our team.\n   For more details, see our preprint \u201c Open-Ended Learning Leads to Generally Capable Agents.\u201d\n This blog post is based on joint work by the Open-Ended Learning Team (listed alphabetically by first name): Adam Stooke, Anuj Mahajan, Catarina Barros, Charlie Deck, Jakob Bauer, Jakub Sygnowski, Maja Trebacz, Max Jaderberg, Michael Mathieu, Nat McAleese, Nathalie Bradley-Schmieg, Nathaniel Wong, Nicolas Porcel, Roberta Raileanu, Steph Hughes-Fitt, Valentin Dalibard, Wojciech Marian Czarnecki.\n Mastering the strategy, tactical understanding, and team play involved in multiplayer video games represents a...\n  AlphaStar is the first AI to reach the top league of a widely popular esport without any game restrictions.\n Sports analytics is in the midst of a remarkably important era, offering interesting opportunities for AI researchers...\n In partnership with EMBL-EBI, we\u2019re incredibly proud to be launching the AlphaFold Protein Structure Database.\n  Our research explored a new approach to an old problem: we reformulated principal component analysis (PCA), a type of...\n        Planning winning strategies in unknown environments is a step forward in the pursuit of general-purpose algorithms.\n  An introduction to our JAX ecosystem and why we find it useful for our AI research.", "posttime": "2021-07-27 23:56:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u7279\u5de5,capable,\u4ee3\u7406", "title": "\u4e00\u822c\u6709\u80fd\u529b\u7684\u7279\u5de5\u4ece\u5f00\u653e\u5f0f\u6e38\u620f\u4e2d\u51fa\u73b0", "title_en": "Generally capable agents emerge from open-ended play", "transed": 1, "url": "https://deepmind.com/blog/article/generally-capable-agents-emerge-from-open-ended-play", "via": "", "real_tags": ["\u6e38\u620f", "\u7279\u5de5", "capable", "\u4ee3\u7406"]}, {"category": "", "categoryclass": "", "imagename": "5e371f27b980915a43410a23abad3a7e.png", "infoid": 1070079, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "THC\uff0cTight Home Control\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u591a\u534f\u8bae\u548c\u72ec\u7acb\u4e8e\u5236\u9020\u5546\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u5141\u8bb8\u8fd0\u884c\u63a7\u5236\u4efb\u52a1\uff0c\u4f8b\u5982\u5bb6\u5ead\u81ea\u52a8\u5316\u3002\u7075\u6d3b\u7684\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848 - \u901a\u8fc7 Tcl \u811a\u672c\u8bed\u8a00\u548c\u5f3a\u5927\u7684\u4f5c\u4e1a\u5b9a\u4e49\u5b9e\u73b0\u9ad8\u5ea6\u7075\u6d3b\u6027 \u76ee\u6807\u8bbe\u5907\u72ec\u7acb - THC \u63d0\u4f9b\u4e86\u4e00\u79cd\u6807\u51c6\u5316\u65b9\u5f0f\u6765\u8bbf\u95ee\u548c\u63a7\u5236\u5404\u79cd\u7c7b\u578b\u7684\u76ee\u6807\u8bbe\u5907\uff1az-Way/Razberry\uff08Z-Wave \u63a7\u5236\u5668\uff09\u3001OpenWeatherMap\uff08\u8bbf\u95ee\u5929\u6c14\u6570\u636e\uff09\u3001MeteoSwiss\uff08\u83b7\u53d6\u5929\u6c14\u6570\u636e\uff09\u3002\u4e30\u5bcc\u7684\u529f\u80fd\u96c6 - \u54cd\u5e94\u5f0f Web \u754c\u9762\u3001\u90ae\u4ef6\u8b66\u62a5\u3001\u968f\u673a\u706f\u5149\u63a7\u5236\u3001\u8bbe\u5907\u72b6\u6001\u548c\u6d3b\u52a8\u8bb0\u5f55\u548c\u7ed8\u56fe\u3001\u52a8\u4f5c\u8ba1\u65f6\u5668\u3001... \u6a21\u5757\u5316 - \u652f\u6301\u5176\u4ed6\u76ee\u6807\u8bbe\u5907\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u65b0\u6a21\u5757\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u3002\u5e73\u53f0\u65e0\u5173 - THC \u53ef\u4ee5\u5b89\u88c5\u5728\u6bcf\u4e2a\u8fd0\u884c Tcl\uff088.5 \u7248\u6216\u66f4\u9ad8\u7248\u672c\uff09\u7684\u5e73\u53f0\u4e0a\u3002\u4f4e\u8d44\u6e90\u9700\u6c42 - THC \u5728 Raspberry PI \u7248\u672c 1 \u4e0a\u4ec5\u9700\u8981\u5927\u7ea6 2% \u7684 CPU \u65f6\u95f4\uff08\u5bf9\u4e8e\u5177\u6709 20 \u4e2a\u8bbe\u5907\u7684\u8bbe\u7f6e\uff09\n\u867d\u7136\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 Web \u754c\u9762\u6267\u884c\u63a7\u5236\u64cd\u4f5c\uff0c\u4f46 THC \u7684\u8bbe\u7f6e\u662f\u901a\u8fc7\u57fa\u4e8e Tcl \u8bed\u6cd5\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7684\u3002 THC \u5b9e\u9645\u4e0a\u5b8c\u5168\u7528 Tcl \u7f16\u7a0b\u3002\u5177\u6709\u8fd9\u79cd\u811a\u672c\u8bed\u8a00\u7684\u4e00\u4e9b\u57fa\u672c\u77e5\u8bc6\u5bf9\u4e8e\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u4f18\u52bf\u3002 THC - \u5165\u95e8\u63d0\u4f9b\u6709\u5173\u5728\u60a8\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u548c\u914d\u7f6e THC \u7684\u8bf4\u660e\u3002 THC - Basics \u63d0\u4f9b\u4e86\u6709\u5173 THC \u5de5\u4f5c\u65b9\u5f0f\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u8bbe\u5907\u72b6\u6001\u548c\u4e8b\u4ef6\u7684\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u3002 THC - \u5f00\u53d1\u4eba\u5458\u4e3a\u7f16\u5199 THC \u6a21\u5757\u6216\u4e3a THC \u7684\u53d1\u5c55\u505a\u51fa\u8d21\u732e\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4fe1\u606f\u3002 THC - \u7248\u672c 2 \u63d0\u4f9b\u6709\u5173 THC \u7248\u672c 1 \u5230 2 \u4e4b\u95f4\u5185\u90e8\u66f4\u6539\u7684\u4fe1\u606f\u4ee5\u53ca\u7528\u6237\u914d\u7f6e\u811a\u672c\u7684\u8fc1\u79fb\u6307\u5357\u3002", "note_en": "THC,  Tight Home Control, provides a multi-protocol and manufacturer-independent automation framework that allows running control tasks, like for example for home automation.\n  Flexible automation solution - High flexibility through the Tcl scripting language and powerful job definitions\n Target device independent - THC provides a standardized way to access and control various types of target devices: z-Way/Razberry (Z-Wave controller), OpenWeatherMap (access to weather data), MeteoSwiss (access to weather data).\n Rich features set - Responsive web interface, mail alert, random light control, device status and activity logging and plotting, action timer, ...\n Modularity - Support for other target devices, or more features can be added via new modules.\n Platform independent - THC can be installed on each platform that runs Tcl (version 8.5 or higher).\n Low resource needs - THC requires only about 2% CPU time on a on Raspberry PI version 1 (for a setup with 20 devices)\n   While the users can perform control operations via the web interface the setup of THC is made via a configuration file that is based on Tcl syntax. THC is in fact entirely programmed in Tcl. Having some basic knowledge of this scripting language is an advantage for the creation of the configuration file.\n   THC - Getting started provides instructions for the installation and configuration of THC on your own computer.\n THC - Basics provides some basics about the way THC works and how to handle device states and events.\n  THC - Developers provides information for developers that write THC modules or that contribute to the evolution of THC.\n  THC - Version 2 provides information about the internal changes between THC version 1 to 2 and a migration guide for the user configuration scripts.", "posttime": "2021-07-27 23:56:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tight,thc", "title": "THC\uff1aTight Home Control\uff0cTcl \u4e2d\u7684\u81ea\u52a8\u5316\u6846\u67b6", "title_en": "THC: Tight Home Control, automation framework in Tcl", "transed": 1, "url": "https://github.com/Drolla/thc", "via": "", "real_tags": ["tight", "thc"]}, {"category": "", "categoryclass": "", "imagename": "288c3385ac40a6491b8b408ba3cb47cf.png", "infoid": 1070078, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684 SQL \u4e4b\u65c5\u7684\u65e9\u671f\uff0c\u6211\u8ba4\u4e3a\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u4e00\u6bb5\u6587\u672c\u4e3b\u8981\u6d89\u53ca\u8fd9\u6837\u7684\u67e5\u8be2\uff1a\u5982\u679c\u6211\u60f3\u83b7\u5f97\u66f4\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u6211\u4f1a\u52a0\u5165\u4e00\u4e9b\u901a\u914d\u7b26\u8fd0\u7b97\u7b26\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u540e\u6765\uff0c\u6211\u4e0e\u4e00\u4f4d\u5e0c\u671b\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u641c\u7d22\u529f\u80fd\u7684\u5ba2\u6237\u5408\u4f5c\uff0c\u56e0\u6b64\u201cLIKE\u201d\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u4f1a\u524a\u51cf\u5b83\u3002\u6211\u4e00\u76f4\u77e5\u9053\u7684\u53ea\u662f\u6a21\u5f0f\u5339\u914d\u3002\u5bf9\u4e8e\u67d0\u4e9b\u76ee\u7684\u5b83\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\uff0c\u4f46\u662f\u5f53\u5b83\u4e0d\u4ec5\u4ec5\u662f\u68c0\u67e5\u5355\u4e2a\u6587\u672c\u5b57\u6bb5\u4e2d\u7684\u7b80\u5355\u6a21\u5f0f\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8de8\u591a\u4e2a\u5b57\u6bb5\u8fdb\u884c\u641c\u7d22\u600e\u4e48\u529e\uff1f\u5373\u4f7f\u641c\u7d22\u8bcd\u78b0\u5de7\u62fc\u9519\u4e86\uff0c\u5982\u4f55\u8fd4\u56de\u53ef\u80fd\u7684\u5339\u914d\u9879\uff1f\u53e6\u5916\uff0c\u5982\u679c\u60a8\u6709\u5927\u91cf\u6570\u636e\u8981\u641c\u7d22\u600e\u4e48\u529e\uff1f\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4e3a\u8981\u67e5\u8be2\u6a21\u5f0f\u5339\u914d\u7684\u5217\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u8fd9\u4f1a\u6709\u9650\u5236\uff08\u4f8b\u5982\uff0cB \u6811\u7d22\u5f15\u4e0d\u9002\u7528\u4e8e col LIKE &#39;%substring%&#39;\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u8bf4 PostgreSQL \u662f\u201c\u5305\u542b\u7535\u6c60\u7684\u6570\u636e\u5e93\u201d\u65f6\uff0c\u8fd9\u53ea\u662f\u539f\u56e0\u4e4b\u4e00\u3002\u4f7f\u7528 Postgres\uff0c\u60a8\u65e0\u9700\u7acb\u5373\u5bfb\u627e\u6bd4\u60a8\u81ea\u5df1\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u66f4\u8fdc\u7684\u5168\u6587\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7 Postgres \u7684\u5185\u7f6e\u5168\u6587\u641c\u7d22\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u8bcd\u5e72\u5206\u6790\uff0c\u5176\u4e2d\u641c\u7d22\u5339\u914d\u53ef\u4ee5\u57fa\u4e8e\u5355\u8bcd\u7684\u201c\u6839\u201d\u5f62\u5f0f\u6216\u8bcd\u5e72\uff08\u201crun\u201d\u5339\u914d\u201cruns\u201d\u548c\u201crunning\u201d\u751a\u81f3\u201cran\u201d\uff09\u3002\u6743\u91cd\u548c\u6392\u540d\u641c\u7d22\u5339\u914d\uff08\u56e0\u6b64\u6700\u4f73\u5339\u914d\u53ef\u4ee5\u6392\u5e8f\u5230\u7ed3\u679c\u5217\u8868\u7684\u9876\u90e8\uff09\u3002\n\u6587\u6863\u662f\u60a8\u8981\u5bf9\u5176\u8fdb\u884c\u5168\u6587\u641c\u7d22\u7684\u4e00\u7ec4\u6570\u636e\u3002\u5728 Postgres \u4e2d\uff0c\u8fd9\u53ef\u4ee5\u4ece\u5355\u4e2a\u5217\u6216\u5217\u7684\u7ec4\u5408\u6784\u5efa\uff0c\u751a\u81f3\u53ef\u4ee5\u4ece\u591a\u4e2a\u8868\u6784\u5efa\u3002\u6587\u6863\u88ab\u89e3\u6790\u4e3a\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u662f\u6765\u81ea\u6587\u6863\u6587\u672c\u7684\u5c0f\u7247\u6bb5\uff08\u4f8b\u5982\u5355\u8bcd\u3001\u77ed\u8bed\u7b49\uff09\u3002\u7136\u540e\u5c06\u6807\u8bb0\u8f6c\u6362\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u6587\u672c\u5355\u5143\uff0c\u79f0\u4e3a\u8bcd\u7d20\u3002\u5728 Postgres \u4e2d\uff0c\u8fd9\u79cd\u8f6c\u6362\u662f\u901a\u8fc7\u5b57\u5178\u5b8c\u6210\u7684\u2014\u2014\u6709\u5185\u7f6e\u7684\u5b57\u5178\uff0c\u4f46\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u5b57\u5178\u3002\u8fd9\u4e9b\u8bcd\u5178\u6709\u52a9\u4e8e\u786e\u5b9a\u5e94\u8be5\u88ab\u5ffd\u7565\u7684\u505c\u7528\u8bcd\uff0c\u4ee5\u53ca\u4e0d\u540c\u6d3e\u751f\u8bcd\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u8bcd\u5e72\u3002\u5927\u591a\u6570\u8bcd\u5178\u662f\u9488\u5bf9\u7279\u5b9a\u8bed\u8a00\uff08\u82f1\u8bed\u3001\u5fb7\u8bed\u7b49\uff09\u7684\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u62e5\u6709\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u8bcd\u5178\u3002\u6587\u6863\u4e2d\u8bcd\u7d20\u7684\u6392\u5e8f\u5217\u8868\u5b58\u50a8\u5728 tsvector \u6570\u636e\u7c7b\u578b\u4e2d\u3002\u6211\u6709\u4e00\u4e2a\u5305\u542b\u7f8e\u56fd\u56fd\u5bb6\u6c14\u8c61\u5c40\u6536\u96c6\u7684\u98ce\u66b4\u4e8b\u4ef6\u6570\u636e\u7684\u8868\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4e0d\u4f1a\u5728\u4e0b\u9762\u7684\u8bed\u53e5\u4e2d\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u5b57\u6bb5\uff0c\u4f46\u6b64\u5b58\u50a8\u5e93\u4e2d\u6709\u6570\u636e\u7684\u526f\u672c\u548c\u4e00\u4e9b\u8fdb\u4e00\u6b65\u7684\u4fe1\u606f\u53ef\u7528\u3002 CREATE TABLE se_details ( episode_id int, event_id int \u4e3b\u952e, state text, event_type text, begin_date_time timestamp, episode_narrative text, event_narrative text, ...);\u5047\u8bbe\u6211\u4eec\u8981\u5bf9 event_narrative \u5217\u4e0a\u7684\u6570\u636e\u8fdb\u884c\u5168\u6587\u641c\u7d22\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5217\u6765\u5b58\u50a8\u9884\u5904\u7406\u7684\u641c\u7d22\u6587\u6863\uff08\u5373\u8bcd\u7d20\u5217\u8868\uff09\uff1a\nts \u662f\u4e00\u4e2a\u751f\u6210\u7684\u5217\uff08\u4ece Postgres 12 \u5f00\u59cb\uff09\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e0e\u6e90\u6570\u636e\u540c\u6b65\u3002 tsquery \u662f Postgres \u4e2d\u7684\u53e6\u4e00\u79cd\u5168\u6587\u641c\u7d22\u6570\u636e\u7c7b\u578b\u3002\u5b83\u8868\u793a\u4e5f\u5df2\u4f5c\u4e3a\u8bcd\u7d20\u5904\u7406\u7684\u641c\u7d22\u8bcd\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8f93\u5165\u8bcd\u4f20\u9012\u7ed9 to_tsquery \u51fd\u6570\uff0c\u4ee5\u4f18\u5316\u6211\u4eec\u7684\u5168\u6587\u641c\u7d22\u67e5\u8be2\u3002 \uff08@@ \u662f\u4e00\u4e2a\u5339\u914d\u8fd0\u7b97\u7b26\u3002\uff09\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u67e5\u8be2\u5f97\u5230\u7684\u662f\u201ctornado\u201d\u5728\u6587\u672c\u5b57\u7b26\u4e32\u4e2d\u67d0\u5904\u7684\u8bb0\u5f55\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u7ed3\u679c\u96c6\u4e2d\u8fd8\u6709\u4e00\u4e9b\u8bb0\u5f55\uff0c\u5176\u4e2d\u4e5f\u6709\u5339\u914d&quot;tornado&quot; as lexeme (&quot;tornado-like&quot; and &quot;tornadoes&quot;): state |\u80af\u5854\u57fa\u5dde begin_date_time | 2018-04-03 18:08:00 \u4e8b\u4ef6\u7c7b\u578b |\u96f7\u66b4\u98ce\u4e8b\u4ef6_narrative |\u4e00\u80a1 1.5 \u82f1\u91cc\u5bbd\u7684\u5927\u98ce\u4ee5\u6bcf\u5c0f\u65f6 95 \u82f1\u91cc\u7684\u901f\u5ea6\u5728\u80af\u5854\u57fa\u5dde\u57c3\u5fb7\u8499\u65af\u7684 259 \u53f7\u9ad8\u901f\u516c\u8def\u4e0a\u9020\u6210\u9f99\u5377\u98ce\u822c\u7684\u7834\u574f\u3002\u98ce\u5728\u871c\u8702\u6cc9\u4ee5\u5317\u548c\u4ee5\u5357\u5ef6\u4f38 3/4 \u82f1\u91cc\uff0c\u6467\u6bc1\u6216\u4e25\u91cd\u635f\u574f\u4e86\u51e0\u5ea7\u5c0f\u578b\u9644\u5c5e\u5efa\u7b51\uff0c\u6495\u6bc1\u4e86\u4e00\u4e2a\u623f\u5c4b\u7684\u90e8\u5206\u5c4b\u9876\uff0c\u8fde\u6839\u62d4\u8d77\u5e76\u6298\u65ad\u4e86\u8bb8\u591a\u6811\u6728\u7684\u6811\u5e72\uff0c\u5e76\u6298\u65ad\u4e86\u5927\u7ea6\u5341\u51e0\u4e2a\u7535\u529b\u6781\u70b9\u3002\u5176\u4ed6\u51e0\u6240\u623f\u5c4b\u7684\u5c4b\u9876\u906d\u5230\u7834\u574f\uff0c\u8bb8\u591a\u5efa\u7b51\u7269\u7684\u4e59\u70ef\u57fa\u58c1\u677f\u88ab\u98ce\u5439\u8fc7\u3002\u72b6\u6001 |\u5a01\u65af\u5eb7\u661f\u5dde begin_date_time | 2018-08-28 15:30:00 \u4e8b\u4ef6\u7c7b\u578b |\u96f7\u66b4\u98ce\u4e8b\u4ef6_narrative |\u8be5\u53bf\u5357\u90e8\u6709\u5927\u7247\u5927\u7247\u7684\u6811\u6728\u548c\u519c\u4f5c\u7269\u53d7\u635f\u3002\u6811\u6728\u548c\u519c\u4f5c\u7269\u7684\u90e8\u5206\u5b8c\u5168\u88ab\u5937\u4e3a\u5e73\u5730\uff0c\u5e76\u4e14\u7531\u4e8e\u5012\u4e0b\u7684\u6811\u6728\u6216\u5f3a\u70c8\u7684\u4e0b\u51fb\u66b4\u98ce\u9020\u6210\u4e86\u4e00\u4e9b\u7ed3\u6784\u6027\u635f\u574f\u3002\u591a\u6761\u9053\u8def\u56e0\u6811\u6728\u5012\u584c\u800c\u5c01\u95ed\u3002\u4e24\u8f86\u534a\u5361\u8f66\u5728 Waldo \u7684 57 \u53f7\u9ad8\u901f\u516c\u8def\u4e0a\u7ffb\u8f66\u3002\u5e7f\u6cdb\u7684\u98ce\u707e\u548c\u9f99\u5377\u98ce\u5bf9\u8bb8\u591a\u623f\u5c4b\u9020\u6210\u7ed3\u6784\u6027\u635f\u574f\uff0c70 \u6240\u623f\u5c4b\u53d7\u5230\u5f71\u54cd\uff0c3 \u6240\u623f\u5c4b\u53d7\u5230\u8f7b\u5fae\u635f\u574f\uff0c2 \u6240\u623f\u5c4b\u53d7\u5230\u4e25\u91cd\u635f\u574f\uff0c1 \u6240\u623f\u5c4b\u88ab\u6bc1\uff0c2 \u5bb6\u4f01\u4e1a\u53d7\u5230\u8f7b\u5fae\u635f\u574f\u3002\u5c06\u77ed\u8bed\u4f5c\u4e3a\u641c\u7d22\u8bcd\u5904\u7406\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5728 tsquery \u4e2d\u4f7f\u7528 &amp; (AND) \u6216 &lt;-&gt; (FOLLOWED BY) \u5e03\u5c14\u8fd0\u7b97\u7b26\u3002\u641c\u7d22\u77ed\u8bed\u88ab\u6807\u51c6\u5316\u4e3a\u201crain\u201d\u548c\u201cdebri\u201d\u3002\u53ea\u8981 &#39;rain&#39; \u548c &#39;debri&#39; \u5728\u6587\u6863\u4e2d\u90fd\u6709\u5339\u914d\u9879\uff0c\u987a\u5e8f\u5c31\u65e0\u5173\u7d27\u8981\uff0c\u4f8b\u5982\u8fd9\u4e2a\u4f8b\u5b50\uff1a\n\u5927\u96e8\u5728\u9971\u548c\u7684\u5c71\u5761\u4e0a\u5f15\u8d77\u7684\u6ce5\u77f3\u6d41\u963b\u585e\u4e86\u4e0e 97 \u53f7\u56fd\u9053\u4ea4\u53c9\u53e3\u4ee5\u5357\u4e00\u82f1\u91cc\u5904\u7684\u5965\u9a6c\u514b\u6cb3\u8def\u3002\u503c\u662f&#39;rain&#39; &lt;2&gt; &#39;debri&#39;\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u4f1a\u5339\u914d&#39;rain&#39;\u540e\u9762\u7d27\u8ddf\u7740&#39;debri&#39;\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u8fd9\u91cc\uff1a\u5927\u96e8\u5bfc\u81f4Coal Hollow Fire\u548cTank Hollow Fire\u4e0a\u7684\u6ce5\u77f3\u6d41\u70e7\u4f24\u75a4\u75d5\u3002 \uff08\u8fd9\u5b9e\u9645\u4e0a\u662f\u552f\u4e00\u7684\u5339\u914d\u9879\uff0c\u56e0\u6b64\u4f7f\u7528 &lt;-&gt; \u8fd0\u7b97\u7b26\u7684\u9650\u5236\u8981\u591a\u4e00\u4e9b\u3002\uff09phraseto_tsquery \u51fd\u6570\u4e5f\u53ef\u4ee5\u89e3\u6790\u77ed\u8bed\u672c\u8eab\uff0c\u5e76\u5728\u8bcd\u7d20\u4e4b\u95f4\u63d2\u5165 &lt;N&gt;\uff0c\u5176\u4e2d N \u662f\u4e0b\u4e00\u4e2a\u8bcd\u7d20\u7684\u6574\u6570\u4f4d\u7f6e\u5f53\u4ece\u524d\u4e00\u4e2a\u8ba1\u6570\u65f6\u3002\u4e0e to_tsquery \u4e0d\u540c\uff0c\u6b64\u51fd\u6570\u65e0\u6cd5\u8bc6\u522b\u8fd0\u7b97\u7b26\uff1b\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f20\u9012\u6574\u4e2a\u77ed\u8bed\uff1a tsquery \u503c\u662f &#39;rain&#39; &lt;2&gt; &#39;debri&#39; \u50cf\u4e0a\u9762\u4e00\u6837\uff0c\u6240\u4ee5phraseto_tsquery \u4e5f\u8003\u8651\u4e86\u5b9a\u4f4d\u3002\u5206\u914d\u4e0d\u540c\u6743\u91cd\u548c\u6392\u540d\u7684\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u641c\u7d22\u6587\u7ae0\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u6587\u7ae0\u6807\u9898\u548c\u6458\u8981\u6216\u5185\u5bb9\u5408\u5e76\u5728\u4e00\u8d77\u8fdb\u884c\u641c\u7d22\uff0c\u4f46\u5e0c\u671b\u6807\u9898\u4e0a\u7684\u5339\u914d\u88ab\u8ba4\u4e3a\u66f4\u76f8\u5173\u5e76\u56e0\u6b64\u6392\u540d\u66f4\u9ad8\u3002\n\u56de\u5230\u6211\u4eec\u7684\u98ce\u66b4\u4e8b\u4ef6\u793a\u4f8b\uff0c\u6211\u4eec\u7684\u6570\u636e\u8868\u9664\u4e86 event_narrative \u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a episode_narrative \u5217\u3002\u5bf9\u4e8e\u98ce\u66b4\u6570\u636e\uff0c\u4e8b\u4ef6\u662f\u5355\u72ec\u7c7b\u578b\u7684\u98ce\u66b4\u4e8b\u4ef6\uff08\u4f8b\u5982\u6d2a\u6c34\u3001\u51b0\u96f9\uff09\uff0c\u800c\u4e8b\u4ef6\u662f\u6574\u4e2a\u98ce\u66b4\u7cfb\u7edf\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002\u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5bf9\u4e8b\u4ef6\u548c\u60c5\u8282\u53d9\u8ff0\u8fdb\u884c\u5168\u6587\u641c\u7d22\uff0c\u4f46\u5df2\u51b3\u5b9a\u4e8b\u4ef6\u53d9\u8ff0\u5e94\u8be5\u6bd4\u60c5\u8282\u53d9\u8ff0\u66f4\u91cd\u8981\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49 ts \u5217\uff1a ALTER TABLE se_details ADD COLUMN ts tsvector GENERATED ALWAYS AS (setweight(to_tsvector(&#39;english&#39;, coalesce(event_narrative, &#39;&#39;)), &#39;A&#39;) || setweight(to_tsvector(&#39;english) &#39;, \u5408\u5e76(episode_narrative, &#39;&#39;)), &#39;B&#39;)) \u5b58\u50a8; setweight \u662f\u4e00\u4e2a\u5168\u6587\u51fd\u6570\uff0c\u5b83\u4e3a\u6587\u6863\u7684\u7ec4\u4ef6\u5206\u914d\u4e00\u4e2a\u6743\u91cd\u3002\u8be5\u51fd\u6570\u91c7\u7528\u5b57\u7b26\u201cA\u201d\u3001\u201cB\u201d\u3001\u201cC\u201d\u6216\u201cD\u201d\uff08\u6309\u6743\u91cd\u4ece\u5927\u5230\u5c0f\uff09\u3002\u6211\u4eec\u8fd8\u5728\u6b64\u5904\u4f7f\u7528\u4e86\u5408\u5e76\uff0c\u4ee5\u4fbf\u5982\u679c episode_narrative \u6216 event_narrative \u5305\u542b\u7a7a\u503c\uff0c\u5219\u8fde\u63a5\u4e0d\u4f1a\u5bfc\u81f4\u7a7a\u503c\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5728 ORDER BY \u5b50\u53e5\u4e2d\u4f7f\u7528 ts_rank \u51fd\u6570\u5c06\u7ed3\u679c\u4ece\u6700\u76f8\u5173\u5230\u200b\u200b\u8f83\u5c11\u3002\u72b6\u6001 | MISSISSIPPI begin_date_time | 2018-04-06 22:18:00 \u4e8b\u4ef6\u7c7b\u578b | Tornado event_narrative |\u8fd9\u573a\u9f99\u5377\u98ce\u6cbf\u5362\u5361\u65af\u7a7a\u5fc3\u8def\u5728\u6770\u6590\u900a\u6234\u7ef4\u65af-\u5361\u6587\u987f\u53bf\u7ebf\u9644\u8fd1\u964d\u843d\u3002\u5b83\u7ee7\u7eed\u5411\u4e1c\u5357\uff0c\u8d8a\u8fc7\u53bf\u7ebf\u3002\u4e00\u4e9b\u5927\u6811\u679d\u548c\u6811\u6728\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u6298\u65ad\u5e76\u8fde\u6839\u62d4\u8d77\u3002\u7136\u540e\u5b83\u518d\u6b21\u7a7f\u8fc7\u5362\u5361\u65af\u7a7a\u5fc3\u8def\uff0c\u7136\u540e\u7a7f\u8fc7\u4f26\u7eb3\u5fb7\u8def\u3002\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u96f7\u8fbe\u4e0a\u663e\u793a\u4e86\u9f99\u5377\u98ce\u788e\u7247\u7279\u5f81\u3002\u9f99\u5377\u98ce\u8fde\u6839\u62d4\u8d77\u5e76\u6298\u65ad\u4e86\u8be5\u5730\u533a\u7684\u8bb8\u591a\u6811\u6728\u3002\u5b83\u8fd8\u5728 Oakvale Road \u7ffb\u5012\u4e86\u4e00\u8f86\u5c0f\u578b\u62d6\u62c9\u673a\u62d6\u8f66\uff0c\u5e76\u5bf9\u623f\u5c4b\u9020\u6210\u4e86\u4e00\u4e9b\u8f7b\u5fae\u7684\u6728\u74e6\u635f\u574f\u3002\u4e24\u6b21\u7a7f\u8d8a\u5965\u514b\u7ef4\u5c14\u8def\u540e\uff0c\u9f99\u5377\u98ce\u5728\u7a7f\u8d8a 35 \u53f7\u9ad8\u901f\u516c\u8def\u4e4b\u524d\u5347\u8d77\u3002\u8fd9\u6b21\u9f99\u5377\u98ce\u4e2d\u7684\u6700\u5927\u98ce\u901f\u4e3a 105 \u82f1\u91cc/\u5c0f\u65f6\uff0c\u603b\u8def\u5f84\u957f\u5ea6\u4e3a 2.91 \u82f1\u91cc\u3002\u6700\u5927\u8def\u5f84\u5bbd\u5ea6\u4e3a 440 \u7801\u3002 episode_narrative | 4 \u6708 6 \u65e5\uff0c\u4e00\u80a1\u6696\u950b\u5e2d\u5377\u8be5\u5730\u533a\u3002\u7531\u4e8e\u6270\u52a8\u6cbf\u7740\u8fd9\u6761\u505c\u6ede\u4e0d\u524d\u7684\u950b\u9762\u800c\u6765\uff0c\u7531\u4e8e\u5145\u8db3\u7684\u6c34\u5206\uff0c\u5b83\u4e3a\u8be5\u5730\u533a\u5e26\u6765\u4e86\u5927\u91cf\u964d\u96e8\u3002\u968f\u7740\u767d\u5929\u7684\u4f9b\u6696\u53d1\u751f\uff0c\u4e00\u4e9b\u98ce\u66b4\u53d1\u5c55\u4e3a\u8be5\u5730\u533a\u5e26\u6765\u4e86\u6076\u52a3\u7684\u5929\u6c14\u3002\u4e0e\u6b64\u76f8\u6bd4\uff0c\u5728episode_narrative \u4e2d\u5339\u914d\u201ctornado\u201d\u4f46\u6ca1\u6709\u5339\u914devent_narrative\uff1a\n\u72b6\u6001 |\u5185\u5e03\u62c9\u65af\u52a0\u5dde begin_date_time | 2018-06-06 18:10:00 \u4e8b\u4ef6\u7c7b\u578b |\u4e07\u5c81 event_narrative |\u51b0\u96f9\u4e3b\u8981\u662f\u4fbf\u58eb\u5927\u5c0f\u7684\u51b0\u96f9\uff0c\u8fd8\u6709\u4e00\u4e9b\u56db\u5206\u4e4b\u4e00\u5927\u5c0f\u7684\u51b0\u96f9\u3002episode_narrative | 6 \u6708 6 \u65e5\u508d\u665a\u65f6\u5206\uff0c\u5185\u5e03\u62c9\u65af\u52a0\u5dde\u72ed\u957f\u5730\u5e26\u5f62\u6210\u4e86\u5f3a\u98ce\u66b4\u3002\u968f\u7740\u8fd9\u4e00\u6d3b\u52a8\u5411\u4e1c\u79fb\u52a8\uff0c\u51fa\u73b0\u4e86\u5f3a\u5230\u5f3a\u96f7\u66b4\u7684\u65ad\u7ebf\u3002\u636e\u62a5\u9053\uff0c\u51b0\u96f9\u8fbe\u5230\u4e52\u4e53\u7403\u5927\u5c0f\uff0c\u96f7\u66b4\u98ce\u901f\u8fbe\u5230\u6bcf\u5c0f\u65f6 70 \u82f1\u91cc\uff0c\u5e76\u6709\u4e00\u6b21\u77ed\u6682\u7684\u9f99\u5377\u98ce\u89e6\u5730\u5f97\u5206\u3002\u5927\u96e8\u8fd8\u5bfc\u81f4\u57fa\u601d\u53bf\u897f\u90e8\u53d1\u751f\u5c71\u6d2a\u66b4\u53d1\u3002\u63d0\u793a\uff1a ts_rank \u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u503c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728 SELECT \u4e2d\u5305\u542b\u8be5\u8868\u8fbe\u5f0f\u4ee5\u67e5\u770b\u8fd9\u4e9b\u5339\u914d\u9879\u7684\u5f97\u5206\u60c5\u51b5\u3002\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u897f\u897f\u6bd4\u4e8b\u4ef6\u7684\u5f97\u5206\u7ea6\u4e3a 0.890\uff0c\u5185\u5e03\u62c9\u65af\u52a0\u4e8b\u4ef6\u7684\u5f97\u5206\u4e3a 0.243\u3002\u901a\u8fc7\u5b9e\u73b0\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u7b49\u529f\u80fd\uff0c\u6216\u8005\u7f16\u5199\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\u6216\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u8fdb\u884c Postgres \u5168\u6587\u641c\u7d22\u3002\u60a8\u8fd8\u53ef\u4ee5\u8003\u8651\u542f\u7528\u6269\u5c55\uff0c\u4f8b\u5982 unaccent\uff08\u4ece\u8bcd\u7d20\u4e2d\u5220\u9664\u53d8\u97f3\u7b26\u53f7\uff09\u6216 pg_trgm\uff08\u7528\u4e8e\u6a21\u7cca\u641c\u7d22\uff09\u3002\u8bf4\u5230\u6269\u5c55\uff0c\u90a3\u53ea\u662f Crunchy Bridge \u652f\u6301\u7684\u4e24\u4e2a\u6269\u5c55\u3002\u6211\u4eec\u5df2\u7ecf\u6784\u5efa\u4e86\u6211\u4eec\u7684\u6258\u7ba1\u4e91 Postgres \u670d\u52a1\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165\u5e76\u5229\u7528\u6240\u6709\u8fd9\u4e9b Postgres \u529f\u80fd\u3002\u5c3d\u7ba1\u5982\u6b64\uff1a\u5982\u60a8\u6240\u89c1\uff0c\u60a8\u4e0d\u9700\u8981\u975e\u5e38\u590d\u6742\u7684\u8bbe\u7f6e\u5373\u53ef\u5f00\u59cb\u3002\u5c1d\u8bd5\u4e00\u4e0b\u60a8\u662f\u5426\u521a\u521a\u5f00\u59cb\u63a2\u7d22\u5168\u6587\u641c\u7d22\u89e3\u51b3\u65b9\u6848\uff0c\u6216\u8005\u751a\u81f3\u53ea\u662f\u91cd\u65b0\u8bc4\u4f30\u662f\u5426\u9700\u8981\u5168\u529b\u4ee5\u8d74\u83b7\u5f97\u4e13\u7528\u7684\u5168\u6587\u641c\u7d22\u670d\u52a1\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u5806\u6808\u4e2d\u5df2\u7ecf\u6709\u4e86 Postgres\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u4e3b\u610f.\u516c\u5e73\u5730\u8bf4\uff0cPostgres \u6ca1\u6709\u4e00\u4e9b\u53ef\u5728 Elasticsearch \u7b49\u5e73\u53f0\u4e0a\u4f7f\u7528\u7684\u641c\u7d22\u529f\u80fd\u3002\u4f46\u4e00\u4e2a\u4e3b\u8981\u4f18\u70b9\u662f\u60a8\u4e0d\u5fc5\u7ef4\u62a4\u548c\u540c\u6b65\u5355\u72ec\u7684\u6570\u636e\u5b58\u50a8\u3002\u5982\u679c\u60a8\u4e0d\u592a\u9700\u8981\u8d85\u5927\u89c4\u6a21\u641c\u7d22\uff0c\u90a3\u4e48\u901a\u8fc7\u6700\u5c0f\u5316\u4f9d\u8d56\u5173\u7cfb\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u6536\u83b7\u3002\u53e6\u5916\uff0c\u60a8\u5df2\u7ecf\u77e5\u9053\u7684 Postgres \u67e5\u8be2\u8bed\u6cd5\u6dfb\u52a0\u4e86\u4e00\u4e9b\u65b0\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8d70\u5f97\u66f4\u8fdc\u3002\u5bf9\u4f7f\u7528 Postgres \u8fdb\u884c\u5168\u6587\u641c\u7d22\u8fd8\u6709\u5176\u4ed6\u95ee\u9898\u6216\u60f3\u6cd5\u5417\uff1f\u6211\u4eec\u5f88\u9ad8\u5174\u5728@crunchydata \u4e0a\u542c\u5230\u4ed6\u4eec\u7684\u58f0\u97f3\u3002", "note_en": "Early in on my SQL journey, I thought that searching for a piece of text in the database mostly involved querying like this:\n  Then I would throw in some wildcard operators or regular expressions if I wanted to get more specific.\n Later on, I worked with a client who wanted search functionality in an app, so \u201cLIKE\u201d and regex weren&#39;t going to cut it. What I had known all along was just   pattern matching. It works perfectly fine for certain purposes, but what happens when it&#39;s not just a matter of checking for a straightforward pattern in a single text field?\n For example, what if you wanted to search across multiple fields? How about returning possible matches even if the search term happens to be misspelled? Also, what if you have very large amounts of data to search on? Sure, you can create indexes for columns on which you want to query for pattern matches, but that will have limitations (for instance, the B-tree index doesn&#39;t work for  col LIKE &#39;%substring%&#39;).\n So when we say  PostgreSQL is the &#34; batteries included database,&#34; this is just one reason why. With Postgres, you don&#39;t need to immediately look farther than your own database management system for a full-text search solution. If you haven&#39;t yet given Postgres&#39; built-in full-text search a try, read on for a simple intro.\n   Stemming, where search matches can be based on a &#34;root&#34; form, or stem, of a word (\u201crun\u201d matches \u201cruns\u201d and \u201crunning\u201d and even \u201cran\u201d).\n Weight and rank search matches (so best matches can be sorted to the top of a result list).\n  A  document is a set of data on which you want to carry out your full-text search. In Postgres, this could be built from a single column, or a combination of columns, even from multiple tables.\n The document is parsed into tokens, which are small fragments (e.g. words, phrases, etc) from the document&#39;s text. Tokens are then converted to more meaningful units of text called  lexemes.\n In Postgres, this conversion is done with  dictionaries -- there are built-in ones, but custom dictionaries can be created if necessary. These dictionaries help determine stop words that should get ignored, and whether differently-derived words have the same stem. Most dictionaries are for a specific language (English, German, etc) but you could also have ones that are for a specific domain.\n The sorted list of lexemes from the document is stored in the   tsvector data type.\n  I have a table that contains storm events data gathered by the U.S. National Weather Service. For simplicity&#39;s sake I won&#39;t include all possible fields in the statement below, but there&#39;s a copy of the data and some further information available in   this repository.\n CREATE TABLE se_details ( episode_id int, event_id int primary key, state text, event_type text, begin_date_time timestamp, episode_narrative text, event_narrative text, ...);\n Let&#39;s also say that we want to carry out a full-text search on the data on the  event_narrative column. We could add a new column to the table to store the preprocessed search document (i.e. the list of lexemes):\n  ts is a   generated column (new as of Postgres 12), and it&#39;s automatically synced with the source data.\n     tsquery is the other full-text search data type in Postgres. It represents search terms that have also been processed as lexemes, so we&#39;ll pass in our input term to the to_tsquery function in order to optimize our query for full-text search. (@@ is a match   operator.)\n What we get with this query are records where &#34;tornado&#34; is somewhere in the text string, but in addition to that, here are a couple of records in the result set where there are also matches for &#34;tornado&#34; as lexeme (&#34;tornado-like&#34; and &#34;tornadoes&#34;):\n state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | KENTUCKY  begin_date_time | 2018-04-03 18:08:00  event_type\u00a0 \u00a0 \u00a0 | Thunderstorm Wind  event_narrative | A 1.5 mile wide swath of winds gusting to around 95 mph created  tornado-like damage along Kentucky Highway 259 in Edmons on County. The winds, extending 3/4 of a mile north and south of Bee Spring, destroyed or heavily damaged several small outbuildings, tore part of the roof off of one home, uprooted and snapped the trunks of numerous trees, and snapped around a dozen power poles. Several othe r homes sustained roof damage, and wind-driven hail shredded vinyl siding on a number of buildings.\n state | WISCONSIN begin_date_time | 2018-08-28 15:30:00 event_type | Thunderstorm Wind event_narrative | A swath of widespread tree and crop damage across the southern portion of the county. Sections of trees and crops compl etely flattened, and some structural damage from fallen trees or due to the strong downburst winds. Various roads closed due to fallen tre es. Two semi-trucks were overturned on highway 57 in Waldo. The widespread wind damage and tornadoes caused structural damage to many home s with 70 homes sustaining affected damage, 3 homes with minor damage, 2 homes with major damage, one home destroyed, and 2 businesses wit h minor damage.\n  One way to handle phrases as search terms is to use the &amp; (AND) or &lt;-&gt; (FOLLOWED BY) Boolean operators with the tsquery.\n   The search phrase gets normalized to  &#39;rain&#39; &amp; &#39;debri&#39;. The order doesn&#39;t matter as long as both &#39;rain&#39; and &#39;debri&#39; have matches in the document, such as this example:\n A  debris flow caused by heavy  rain on a saturated hillside blocked the Omak River Road one mile south of the intersection with State Route 97.\n If we do  to_tsquery(&#39;english&#39;, &#39;rain &lt;-&gt; of &lt;-&gt; debris&#39;) the tsquery value is  &#39;rain&#39; &lt;2&gt; &#39;debri&#39;, meaning it will only match where &#39;rain&#39; is followed by &#39;debri&#39; precisely two positions away, such as here:\n Heavy  rain caused  debris flows on the Coal Hollow Fire and Tank Hollow Fire burn scars.\n (This was actually the only match, so using the &lt;-&gt; operator is a little bit more restrictive.)\n The   phraseto_tsquery function can also parse the phrase itself, and inserts  &lt;N&gt; between lexemes where  N is the integer position of the next lexeme when counting from the preceding one. This function doesn&#39;t recognize operators unlike to_tsquery; for example, we can just pass in the entire phrase like so:\n  The tsquery value is\u00a0  &#39;rain&#39; &lt;2&gt; &#39;debri&#39; like above, so phraseto_tsquery also accounts for positioning.\n  One very common use case for assigning different weights and ranking is searching on articles. For example, you may want to merge the article title and abstract or content together for search, but want matches on title to be considered more relevant and thus rank higher.\n Going back to our storm events example, our data table also has an  episode_narrative column in addition to  event_narrative. For storm data, an  event is an individual type of storm event (e.g. flood, hail), while an  episode is an entire storm system and could contain many different types of events.\n Let&#39;s say we want to be able to carry out a full-text search on event as well as episode narratives, but have decided that the event narrative should weigh  more than the episode narratives. We could define the  ts column like this instead:\n ALTER TABLE se_details ADD COLUMN ts tsvector GENERATED ALWAYS AS   (setweight(to_tsvector(&#39;english&#39;, coalesce(event_narrative, &#39;&#39;)), &#39;A&#39;) ||   setweight(to_tsvector(&#39;english&#39;, coalesce(episode_narrative, &#39;&#39;)), &#39;B&#39;)) STORED;\n setweight is a full-text function that assigns a weight to the components of a document. The function takes the characters &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, or &#39;D&#39; (most weight to least, in that order). We&#39;re also using a  coalesce here so that the concatenation doesn&#39;t result in nulls if either  episode_narrative or  event_narrative contain null values.\n You could then use the   ts_rank function in an ORDER BY clause to return results from most relevant to less.\n   state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | MISSISSIPPI  begin_date_time \u00a0 | 2018-04-06 22:18:00  event_type\u00a0 \u00a0 \u00a0 \u00a0 | Tornado  event_narrative \u00a0 | This tornado touched down near the Jefferson Davis-Covington County line along Lucas Hollow Road. It continued southeast, crossing the  county line. Some large limbs and trees were snapped and uprooted at this location. It then crossed Lucas Hollow Road again before crossing Leonard Road.  A tornado debris signature was indicated on radar in these locations. The tornado uprooted and snapped many trees in this region. It also overturned a sm all tractor trailer on Oakvale Road and caused some minor shingle damage to a home. After crossing Oakvale Road twice, the tornado lifted before crossing  Highway 35. The maximum winds in this tornado was 105mph and total path length was 2.91 miles. The maximum path width was 440 yards.  episode_narrative | A warm front was stretched across the region on April 6th. As a disturbance rode along this stalled front, it brought copious amounts  of rain to the region thanks to ample moisture in place. As daytime heating occurred, some storms developed which brought severe weather to the region.\n Compared to this, where there is a match for &#34;tornado&#34; in  episode_narrative but not  event_narrative:\n state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | NEBRASKA  begin_date_time \u00a0 | 2018-06-06 18:10:00  event_type\u00a0 \u00a0 \u00a0 \u00a0 | Hail  event_narrative \u00a0 | Hail predominately penny size with some quarter size hail mixed in.  episode_narrative | Severe storms developed in the Nebraska Panhandle during the early evening hours of Jun e 6th. As this activity tracked east, a broken line of strong to severe thunderstorms developed. Hail up to  the size of ping pong balls, thunderstorm wind gusts to 70 MPH and a brief tornado touchdown were reported . Heavy rain also fell leading to flash flooding in western Keith county.\n Tip: ts_rank returns a floating-point value, so you could include the expression in your SELECT to see how these matches score. In my case I get around a 0.890 for the Mississippi event, and 0.243 for the Nebraska event.\n  You can get even deeper and make your Postgres full-text search even more robust, by implementing features such as   highlighting results, or writing your own custom dictionaries or functions. You could also look into enabling extensions such as   unaccent (remove diacritic signs from lexemes) or   pg_trgm (for fuzzy search). Speaking of extensions, those were just two of the extensions supported in  Crunchy Bridge. We&#39;ve built our managed cloud Postgres service such that you can dive right in and take advantage of all these Postgres features.\n With all that said: as you can see,  you don&#39;t need a very involved setup to get started. It&#39;s a good idea to try out whether you are just beginning to explore a full-text search solution, or even just reevaluating whether you need to go all out for a dedicated full-text search service, especially if you already have Postgres in your stack.\n To be fair, Postgres doesn&#39;t have some search features that are available with platforms such as Elasticsearch. But a major advantage is that you won&#39;t have to maintain and sync a separate data store. If you don&#39;t quite need search at super scale, there might be more for you to gain by minimizing dependencies. Plus, the Postgres query syntax that you already know with the addition of some new functions and operators, can get you pretty far. Got any other questions or thoughts about full-text search with Postgres? We&#39;re happy to hear them on   @crunchydata.", "posttime": "2021-07-27 23:56:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u5168\u6587,search,\u641c\u7d22", "title": "Postgres \u5168\u6587\u641c\u7d22\uff1a\u6570\u636e\u5e93\u4e2d\u7684\u641c\u7d22\u5f15\u64ce", "title_en": "Postgres Full-Text Search: A Search Engine in a Database", "transed": 1, "url": "https://blog.crunchydata.com/blog/postgres-full-text-search-a-search-engine-in-a-database", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u5168\u6587", "search", "\u641c\u7d22"]}, {"category": "", "categoryclass": "", "imagename": "09de8b2faf6699e63f887316d439e2e1.jpg", "infoid": 1070077, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76d6\u4f0a\u00b7\u96f7\u83f2\u7279 (Guy Reffitt) \u5728\u53c2\u4e0e\u9a9a\u4e71\u4e09\u5468\u540e\u4e8e 1 \u6708\u4e0b\u65ec\u88ab\u6355\uff0c\u6b64\u540e\u4e00\u76f4\u5165\u72f1\u3002\u4ed6\u5bf9\u4e94\u9879\u8054\u90a6\u6307\u63a7\u8868\u793a\u4e0d\u8ba4\u7f6a\uff0c\u5305\u62ec\u5c06\u67aa\u652f\u5e26\u5230\u56fd\u4f1a\u5927\u53a6\u548c\u59a8\u788d\u53f8\u6cd5\u516c\u6b63\u3002\u4ed6\u7684 Windows \u7b14\u8bb0\u672c\u7535\u8111\u662f FBI \u6ca1\u6536\u7684\u51e0\u53f0\u8bbe\u5907\u4e4b\u4e00\uff0c\u8c03\u67e5\u4eba\u5458\u79f0\u8fd9\u4e9b\u8bbe\u5907\u53d7\u5bc6\u7801\u4fdd\u62a4\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 Reffitt \u7684\u8138\u89e3\u9501\u3002\u68c0\u5bdf\u5b98\u8bf4\uff0c\u6cd5\u533b\u8bc1\u636e\u8868\u660e\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u5305\u542b\u6765\u81ea Reffitt \u6234\u5934\u76d4\u7684\u76f8\u673a\u7684\u6570\u5343\u5146\u5b57\u8282\u7684\u955c\u5934\uff0c\u636e\u79f0\u4ed6\u7528\u8fd9\u4e9b\u955c\u5934\u8bb0\u5f55\u4e86\u4e00\u4e9b\u9a9a\u4e71\u3002\u68c0\u5bdf\u5b98\u8be2\u95ee\u6cd5\u9662\u662f\u5426\u53ef\u4ee5\u5f3a\u8feb Reffitt \u5750\u5728\u7535\u8111\u524d\u89e3\u9501\u3002\u96f7\u83f2\u7279\u7684\u5f8b\u5e08\u544a\u8bc9\u6cd5\u5ead\uff0c\u4ed6\u7684\u5f53\u4e8b\u4eba\u201c\u4e0d\u8bb0\u5f97\u201d\u5bc6\u7801\uff0c\u4f46\u6cd5\u5ead\u7ad9\u5728\u653f\u5e9c\u4e00\u8fb9\uff0c\u6279\u51c6\u4e86\u5f3a\u5236\u4ed6\u8fdb\u884c\u751f\u7269\u8bc6\u522b\u7684\u52a8\u8bae\u3002\u96f7\u83f2\u7279\u7684\u5f8b\u5e08\u544a\u8bc9\u9996\u5148\u62a5\u9053\u6cd5\u9662\u547d\u4ee4\u7684 CNN\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u73b0\u5df2\u89e3\u9501\u3002\u653f\u5e9c\u5229\u7528\u4e86\u7b2c\u4e94\u4fee\u6b63\u6848\u7684\u6f0f\u6d1e\uff0c\u8be5\u4fee\u6b63\u6848\u8d4b\u4e88\u7f8e\u56fd\u4efb\u4f55\u4eba\u4fdd\u6301\u6c89\u9ed8\u7684\u6743\u5229\uff0c\u5305\u62ec\u4e0d\u4ea4\u51fa\u53ef\u80fd\u5c06\u4ed6\u4eec\u7275\u8fde\u5230\u72af\u7f6a\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u5bc6\u7801\uff09\u7684\u6743\u5229\u3002\u4f46\u4e00\u4e9b\u6cd5\u9662\u88c1\u5b9a\uff0c\u8fd9\u4e9b\u4fdd\u62a4\u63aa\u65bd\u4e0d\u80fd\u6269\u5c55\u5230\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u5bc6\u7801\u7684\u4eba\u7684\u8eab\u4f53\u7279\u5f81\uff0c\u4f8b\u5982\u9762\u90e8\u626b\u63cf\u6216\u6307\u7eb9\u3002\u5728 Reffitt \u7684\u8d77\u8bc9\u4e66\u4e2d\uff0cFBI \u4e5f\u8bf4\u4e86\u540c\u6837\u7684\u8bdd\uff0c\u8ba4\u4e3a\u5f3a\u8feb Reffitt \u5750\u5728\u7535\u8111\u524d\u89e3\u9501\u4ed6\u7684\u7535\u8111\u201c\u4e0d\u4f1a\u8fdd\u53cd\u88ab\u544a\u7684\u7b2c\u4e94\u4fee\u6b63\u6848\u7981\u6b62\u81ea\u8bc1\u5176\u7f6a\u7684\u6743\u5229\u201d\u3002\u7f8e\u56fd\u5404\u5730\u7684\u6cd5\u9662\u5bf9\u7b2c\u4e94\u4fee\u6b63\u6848\u7684\u89e3\u8bfb\u4ee5\u53ca\u5b83\u662f\u5426\u9002\u7528\u4e8e\u5f3a\u5236\u4f7f\u7528\u4e2a\u4eba\u7684\u751f\u7269\u8bc6\u522b\u6280\u672f\u4ecd\u7136\u5b58\u5728\u5206\u6b67\u3002\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u4e0d\u592a\u53ef\u80fd\u5728\u77ed\u671f\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u591a\u5e74\u5185\u9a73\u56de\u4e86\u4e24\u4efd\u5bf9\u6b64\u4e8b\u4f5c\u51fa\u88c1\u51b3\u7684\u8bf7\u613f\u4e66\uff0c\u4e3b\u8981\u7531\u5404\u5dde\u6765\u51b3\u5b9a\u3002", "note_en": "Guy Reffitt was arrested in late January, three weeks after he participated in the riot, and has been in jail since. He has pleaded not guilty to five federal charges, including bringing a firearm to the Capitol grounds and a charge of obstructing justice. His Windows laptop was one of several devices seized by the FBI, which investigators said was protected with a password but could be unlocked using Reffitt\u2019s face.\n Prosecutors said forensic evidence suggested that the laptop contained gigabytes of footage from Reffitt\u2019s helmet-worn camera that he allegedly used to record some of the riot. Prosecutors asked the court if it could compel Reffitt to sit in front of the computer to unlock it.\n Reffitt\u2019s lawyer told the court that his client could \u201cnot remember\u201d the password, but the court sided with the government and  granted the motion to compel his biometrics. Reffitt\u2019s lawyer told CNN, which  first reported the court order, that the laptop is now unlocked.\n The government took advantage of a loophole in the Fifth Amendment, which grants anyone in the U.S. the right to remain silent, including the right to not turn over information that could implicate them in a crime,  such as a password. But some courts have ruled that those protections don\u2019t extend to a person\u2019s physical attributes that can be used in place of a password, such as a face scan or fingerprint.\n In Reffitt\u2019s indictment, the FBI said as much, arguing that compelling Reffitt to unlock his computer by sitting in front of it \u201cwould not run afoul of the defendant\u2019s Fifth Amendment right against self-incrimination.\u201d\n Courts across the U.S. are still divided on the reading of the Fifth Amendment and whether it applies to the compelled use of a person\u2019s biometrics. The U.S. Supreme Court isn\u2019t likely to address the issue any time soon, rejecting two petitions in as many years to rule on the matter, leaving it largely up to the states to decide.", "posttime": "2021-07-27 23:55:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u547d\u4ee4,ordering,reffitt", "title": "\u6cd5\u9662\u7ed5\u8fc7\u7b2c\u4e94\u4fee\u6b63\u6848\u547d\u4ee4\u7537\u5b50\u7528\u8138\u89e3\u9501\u7b14\u8bb0\u672c\u7535\u8111", "title_en": "Court bypasses 5th Amendment ordering man to unlock laptop with face", "transed": 1, "url": "https://www.techcrunch.com/2021/07/26/court-orders-us-capitol-rioter-to-unlock-his-laptop-with-his-face/", "via": "", "real_tags": ["\u7535\u8111", "\u547d\u4ee4", "ordering", "reffitt"]}, {"category": "", "categoryclass": "", "imagename": "cfbf58de711ea3b3b55fdff0b7317244.jpeg", "infoid": 1070076, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7cae\u98df\u5b89\u5168\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u6f5c\u5728\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u9762\u4e34\u6c14\u5019\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u3002\u73b0\u5728\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u8868\u660e\uff0c\u64cd\u7eb5\u690d\u7269\u4e2d\u7684 RNA \u53ef\u4ee5\u5927\u5927\u589e\u52a0\u5b83\u4eec\u751f\u4ea7\u7684\u98df\u7269\u91cf\uff0c\u5e76\u4f7f\u5b83\u4eec\u66f4\u80fd\u62b5\u6297\u5e72\u65f1\u6761\u4ef6\u3002\u5728\u6700\u57fa\u672c\u7684\u5c42\u9762\u4e0a\uff0c\u8be5\u56e2\u961f\u5c06\u4e00\u4e2a\u540d\u4e3a FTO \u7684\u57fa\u56e0\u63d2\u5165\u5230\u9a6c\u94c3\u85af\u548c\u6c34\u7a3b\u690d\u682a\u4e2d\u3002\u7531\u6b64\u4ea7\u751f\u7684\u690d\u7269\u662f\u66f4\u9ad8\u6548\u7684\u5149\u5408\u4f5c\u7528\u8005\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u957f\u5f97\u66f4\u5927\uff0c\u4ea7\u91cf\u66f4\u9ad8\u2014\u2014\u5b9e\u9a8c\u5ba4\u7684\u4ea7\u91cf\u589e\u52a0\u4e86\u4e09\u500d\uff0c\u7530\u95f4\u4ea7\u91cf\u589e\u52a0\u4e86 50%\u3002\u5b83\u4eec\u8fd8\u957f\u51fa\u4e86\u66f4\u957f\u7684\u6839\u7cfb\uff0c\u8fd9\u6709\u52a9\u4e8e\u5b83\u4eec\u66f4\u597d\u5730\u8010\u53d7\u5e72\u65f1\u6761\u4ef6\u3002 \u201c\u8fd9\u79cd\u53d8\u5316\u786e\u5b9e\u662f\u5de8\u5927\u7684\uff0c\u201d\u8be5\u7814\u7a76\u7684\u8054\u5408\u9996\u5e2d\u7814\u7a76\u5458 Chuan He \u8bf4\u3002 \u201c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u51e0\u4e4e\u9002\u7528\u4e8e\u6211\u4eec\u5c1d\u8bd5\u8fc7\u7684\u6240\u6709\u7c7b\u578b\u7684\u690d\u7269\uff0c\u800c\u4e14\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4fee\u6539\u3002\u201d\u8be5\u56e2\u961f\u6b64\u524d\u66fe\u53d1\u73b0\uff0c\u7531 FTO \u57fa\u56e0\u7f16\u7801\u7684 FTO \u86cb\u767d\u6e05\u9664\u4e86 RNA \u4e0a\u7684\u5316\u5b66\u6807\u8bb0\uff0c\u8fdb\u800c\u53ef\u4ee5\u8c03\u8282 DNA \u7684\u8868\u8fbe\u3002\u5728\u8fd9\u4e9b\u690d\u7269\u7684\u60c5\u51b5\u4e0b\uff0c\u64e6\u9664\u8fd9\u4e9b RNA \u6807\u8bb0\u4f1a\u51cf\u5c11\u544a\u8bc9\u690d\u7269\u51cf\u7f13\u751f\u957f\u7684\u4fe1\u53f7\uff0c\u4ece\u5b83\u4eec\u53d1\u80b2\u7684\u65e9\u671f\u9636\u6bb5\u5c31\u5f00\u59cb\u3002\u56e0\u6b64\uff0c\u7ecf\u8fc7\u4fee\u9970\u7684\u690d\u7269\u6bd4\u5bf9\u7167\u690d\u7269\u4ea7\u751f\u66f4\u591a\u7684 RNA\uff0c\u4ece\u800c\u8f6c\u5316\u4e3a\u66f4\u9ad8\u7684\u751f\u7269\u91cf\u3002\u5728\u76ee\u524d\u7684\u5f62\u5f0f\u4e2d\uff0c\u8be5\u8fc7\u7a0b\u6d89\u53ca\u5c06\u6765\u81ea\u52a8\u7269\u7684 FTO \u57fa\u56e0\u63d2\u5165\u690d\u7269\u4e2d\u3002\u4f46\u8be5\u56e2\u961f\u8868\u793a\uff0c\u672a\u6765\u7684\u7248\u672c\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e00\u6b65\uff0c\u4ee5\u907f\u514d\u6709\u4e89\u8bae\u7684\u8f6c\u57fa\u56e0\u6807\u7b7e\u3002 \u201c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u65b9\u6cd5\uff0c\u53ef\u80fd\u4e0d\u540c\u4e8e GMO \u548c CRISPR \u57fa\u56e0\u7f16\u8f91\uff1b\u8fd9\u9879\u6280\u672f\u4f7f\u6211\u4eec\u80fd\u591f\u5728\u690d\u7269\u53d1\u80b2\u7684\u65e9\u671f\u201c\u7ffb\u8f6c\u5f00\u5173\u201d\uff0c\u5373\u4f7f\u5728\u6211\u4eec\u79fb\u9664\u5f00\u5173\u540e\uff0c\u8fd9\u4ecd\u4f1a\u7ee7\u7eed\u5f71\u54cd\u690d\u7269\u7684\u7cae\u98df\u751f\u4ea7\uff0c\u201d\u4f55\u8bf4\u3002 \u201c\u4f3c\u4e4e\u690d\u7269\u5df2\u7ecf\u6709\u4e86\u8fd9\u5c42\u76d1\u7ba1\uff0c\u6211\u4eec\u6240\u505a\u7684\u5c31\u662f\u5229\u7528\u5b83\u3002\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b65\u5c06\u662f\u63a2\u7d22\u5982\u4f55\u5229\u7528\u690d\u7269\u73b0\u6709\u7684\u9057\u4f20\u5b66\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d\u91cd\u8981\u7684\u662f\uff0c\u8be5\u6280\u672f\u5728\u6c34\u7a3b\u548c\u9a6c\u94c3\u85af\u690d\u7269\u4e2d\u5177\u6709\u76f8\u4f3c\u7684\u7ed3\u679c\uff0c\u8fd9\u4e24\u79cd\u690d\u7269\u5e76\u4e0d\u662f\u7279\u522b\u5bc6\u5207\u76f8\u5173\u3002\u8fd9\u8868\u660e\u5b83\u53ef\u4ee5\u5728\u5e7f\u6cdb\u7684\u690d\u7269\u4e2d\u53d1\u6325\u4f5c\u7528\uff0c\u63d0\u9ad8\u5b83\u4eec\u5bf9\u6c14\u5019\u53d8\u5316\u6311\u6218\u7684\u62b5\u6297\u529b\u3002\n\u201c\u968f\u7740\u5168\u7403\u53d8\u6696\u7684\u8fdb\u884c\uff0c\u8fd9\u786e\u5b9e\u4e3a\u5de5\u7a0b\u690d\u7269\u63d0\u4f9b\u4e86\u6f5c\u5728\u6539\u5584\u751f\u6001\u7cfb\u7edf\u7684\u53ef\u80fd\u6027\uff0c\u201d\u4f55\u8bf4\u3002 \u201c\u6211\u4eec\u5728\u5f88\u591a\u65b9\u9762\u90fd\u4f9d\u8d56\u690d\u7269\u2014\u2014\u4ece\u6728\u6750\u3001\u98df\u7269\u548c\u836f\u7269\uff0c\u5230\u82b1\u5349\u548c\u77f3\u6cb9\u2014\u2014\u8fd9\u53ef\u80fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u589e\u52a0\u6211\u4eec\u53ef\u4ee5\u4ece\u5927\u591a\u6570\u690d\u7269\u4e2d\u83b7\u5f97\u7684\u5e93\u5b58\u6750\u6599\u7684\u65b9\u6cd5\u3002\u201d", "note_en": "Food security is a major potential problem, especially in the face of climate change. Now, researchers have shown that manipulating RNA in plants can drastically boost the amount of food they produce, and make them more resistant to drought conditions.\n At its most base level, the team inserted a single gene called FTO into potato and rice plants. The resulting plants were much more efficient photosynthesizers, meaning they grew much larger and produced much higher yields \u2013 three times more produce in the lab, and 50 percent more in the field. They also grew longer root systems that helped them tolerate drought conditions better.\n \u201cThe change really is dramatic,\u201d says Chuan He, co-lead researcher on the study. \u201cWhat\u2019s more, it worked with almost every type of plant we tried it with so far, and it\u2019s a very simple modification to make.\u201d\n The team had previously found that the FTO protein, encoded by the FTO gene, erased chemical markers on RNA, which in turn can regulate the expression of DNA. In the case of these plants, wiping off those RNA markers reduces the signals that tell the plants to slow down their growth, right from an early stage in their development. As such, the modified plants produce far more RNA than control plants, which translates to higher biomasses.\n  In its current form, the process involved inserting an FTO gene from an animal into the plant. But future versions could bypass this step to avoid the controversial GMO label, the team says.\n \u201cThis is a brand new type of approach, one that could be different from GMO and CRISPR gene editing; this technique allows us to \u201cflip a switch\u201d in the plants at an early point in development, which continues to affect the plant\u2019s food production even after we remove the switch,\u201d says He. \u201cIt seems that plants already have this layer of regulation, and all we did is tap into it. So the next step would be to discover how to do it using the plant\u2019s existing genetics.\u201d\n Importantly, the technique had similar results in both rice and potato plants, which aren\u2019t particularly closely related. That suggests that it could work in a wide range of plants, improving their resistance to the challenge of climate change.\n \u201cThis really provides the possibility of engineering plants to potentially improve the ecosystem as global warming proceeds,\u201d says He. \u201cWe rely on plants for many, many things \u2013 everything from wood, food, and medicine, to flowers and oil \u2013 and this potentially offers a way to increase the stock material we can get from most plants.\u201d", "posttime": "2021-07-27 23:55:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c03\u6574,rice,\u690d\u7269", "title": "\u7b80\u5355\u7684 RNA \u8c03\u6574\u5c06\u9a6c\u94c3\u85af\u548c\u6c34\u7a3b\u7684\u4ea7\u91cf\u63d0\u9ad8\u4e86 50%", "title_en": "Simple RNA tweak boosts potato and rice yields by 50 percent", "transed": 1, "url": "https://newatlas.com/science/rna-modification-potato-rice-yields-boost/", "via": "", "real_tags": ["\u8c03\u6574", "rice", "\u690d\u7269"]}, {"category": "", "categoryclass": "", "imagename": "0800bdea7b67e784ce1603bc07822ba5.png", "infoid": 1070075, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u4e45\u524d\uff0c\u5f53\u5168\u56fd\u5404\u5730\u7684\u62a5\u7eb8\u548c\u6742\u5fd7\u90fd\u505c\u4e1a\u65f6\uff0cBuzzFeed \u548c\u5176\u4ed6\u4e00\u4e9b\u5feb\u901f\u589e\u957f\u7684\u7f51\u7edc\u51fa\u7248\u7269\u4f3c\u4e4e\u662f\u65b0\u95fb\u4e1a\u7684\u672a\u6765\u3002\u6295\u8d44\u8005\u5411 Vox Media\u3001Vice Media\u3001Group Nine \u548c\u5176\u4ed6\u65b0\u8d35\u516c\u53f8\u6295\u5165\u4e86\u6570\u5341\u4ebf\u7f8e\u5143\uff0c\u8fd9\u4e9b\u516c\u53f8\u96c7\u7528\u7684\u4f5c\u5bb6\u5bf9\u65b0\u7684\u6570\u5b57\u6587\u5316\u548c\u5728\u7ebf\u65b0\u95fb\u901f\u5ea6\u7684\u63d0\u9ad8\u611f\u5230\u5b8c\u5168\u653e\u5fc3\u3002\u4f30\u503c\u98d9\u5347\uff0c\u516c\u53f8\u7684\u521b\u59cb\u4eba\u5728\u6bcf\u4e00\u8f6e\u878d\u8d44\u4e2d\u90fd\u53d6\u5f97\u4e86\u80dc\u5229\u3002\u8fd9\u79cd\u7e41\u8363\u5efa\u7acb\u5728\u4e00\u79cd\u770b\u4f3c\u4e07\u65e0\u4e00\u5931\u7684\u5546\u4e1a\u6a21\u5f0f\u4e4b\u4e0a\uff1a\u514d\u8d39\u4e3a\u8bfb\u8005\u63d0\u4f9b\u7f51\u7edc\u539f\u751f\u5185\u5bb9\uff0c\u5e76\u770b\u7740\u6e34\u671b\u4e0e\u5e74\u8f7b\u89c2\u4f17\u5efa\u7acb\u8054\u7cfb\u7684\u5e7f\u544a\u5546\u8d5a\u5f97\u76c6\u6ee1\u94b5\u6ee1\u3002 \u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u3001\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u548c\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u84ec\u52c3\u53d1\u5c55\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5bf9\u6570\u5b57\u65b0\u95fb\u7684\u91cd\u89c6\u548c\u5411\u8bfb\u8005\u6536\u53d6\u5728\u7ebf\u8bbf\u95ee\u8d39\u7528\u7684\u7b56\u7565\u3002\u8bb8\u591a\u9886\u5148\u7684\u7f51\u7edc\u8bb0\u8005\u5df2\u7ecf\u4e3a\u8fd9\u4e9b\u5177\u6709\u767e\u5e74\u5386\u53f2\u7684\u673a\u6784\u800c\u5954\u6ce2\uff0c\u800c\u6295\u8d44\u8005\u5219\u8981\u6c42\u4ed6\u4eec\u5728\u6570\u5b57\u516c\u53f8\u98ce\u9761\u4e00\u65f6\u7684\u65f6\u5019\u6295\u5165\u7684\u8d44\u91d1\u83b7\u5f97\u56de\u62a5\u3002\u4e3a\u4e86\u91cd\u65b0\u83b7\u5f97\u5730\u4f4d\u5e76\u4e0e\u89c4\u6a21\u66f4\u5927\u7684 Facebook \u548c\u8c37\u6b4c\u7ade\u4e89\uff0c\u5b83\u4eec\u5360\u636e\u4e86\u5927\u91cf\u5728\u7ebf\u5e7f\u544a\u6536\u5165\uff0cBuzzFeed\u3001Vox Media\u3001Vice Media \u548c Group Nine \u8fd1\u5e74\u6765\u901a\u8fc7\u5e76\u8d2d\u53d8\u5f97\u66f4\u5927\u3002 Vox Media \u6536\u8d2d\u4e86\u7ebd\u7ea6\u6742\u5fd7\u53ca\u5176\u4f17\u591a\u7f51\u7ad9\u7684\u6bcd\u516c\u53f8 New York Media\u3002 Vice Media \u6536\u8d2d\u4e86 Refinery29\u3002\u7b2c\u4e5d\u7ec4\u5c06 PopSugar \u6dfb\u52a0\u5230\u5305\u62ec The Dodo \u548c Thrillist \u7684\u9a6c\u53a9\u4e2d\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u5bb6\u65e8\u5728\u4e0a\u5e02\u7684\u7279\u6b8a\u76ee\u7684\u6536\u8d2d\u516c\u53f8\uff08\u6216 SPAC\uff09\u3002 BuzzFeed \u6536\u8d2d\u4e86 HuffPost\uff0c\u5e76\u8868\u793a\u5c06\u6536\u8d2d\u53e6\u4e00\u5bb6\u51fa\u7248\u5546 Complex\uff0c\u4f5c\u4e3a\u5176\u901a\u8fc7\u81ea\u5df1\u7684 SPAC \u4ea4\u6613\u4e0a\u5e02\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002\u636e\u4e09\u4f4d\u719f\u6089 Vice Media \u7684\u4eba\u58eb\u900f\u9732\uff0cVice Media \u4e4b\u524d\u56e0\u5411\u5176\u6295\u8d44\u8005\u4e4b\u4e00\u3001\u79c1\u52df\u80a1\u6743\u5de8\u5934 TPG \u652f\u4ed8\u5927\u7b14\u6b3e\u9879\u800c\u9677\u5165\u56f0\u5883\uff0c\u76ee\u524d\u6b63\u5728\u8003\u8651\u4e0a\u5e02\u8ba1\u5212\u3002\u4e24\u4f4d\u719f\u6089\u8be5\u4e1a\u52a1\u7684\u4eba\u58eb\u8868\u793a\uff0cVox Media \u6b63\u5728\u8003\u8651\u901a\u8fc7 SPAC \u5c06\u5176\u516c\u5f00\u7684\u51e0\u9879\u8981\u7ea6\u3002\u636e\u4e09\u4f4d\u4e86\u89e3\u8c08\u5224\u60c5\u51b5\u7684\u4eba\u58eb\u900f\u9732\uff0c2017 \u5e74\u6210\u7acb\u7684\u534e\u76db\u987f\u65b0\u95fb\u7f51\u7ad9 Axios \u5df2\u7ecf\u4e0e\u5fb7\u56fd\u51fa\u7248\u5de8\u5934 Axel Springer \u5c31\u53ef\u80fd\u7684\u5408\u5e76\u8fdb\u884c\u4e86\u8c08\u5224\u3002\n\u968f\u7740\u5a92\u4f53\u6295\u8d44\u8005\u5bf9\u5145\u6ee1\u514d\u8d39\u5185\u5bb9\u7684\u5e7f\u544a\u652f\u6301\u7f51\u7ad9\u5931\u53bb\u4e86\u4e00\u4e9b\u70ed\u60c5\uff0c\u8f6e\u8f6c\u548c\u4ea4\u6613\u5df2\u7ecf\u5230\u6765\u3002 Substack \u662f\u4e00\u4e2a\u4f9d\u8d56\u8ba2\u9605\u7684\u6570\u5b57\u901a\u8baf\u5e73\u53f0\uff0c\u73b0\u5728\u5f88\u6d41\u884c\u3002 Puck \u662f\u7531\u524d\u540d\u5229\u573a\u7f16\u8f91\u521b\u7acb\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u6700\u8fd1\u4ee5\u6570\u767e\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\u542f\u52a8\u3002\u62e5\u6709\u4e25\u683c\u4ed8\u8d39\u5899\u7684\u65b0\u95fb\u7f51\u7ad9\uff0c\u5305\u62ec The Information \u548c Insider\uff0c\u6b63\u5728\u589e\u957f\u3002\u5a92\u4f53\u884c\u4e1a\u5df2\u7ecf\u53d8\u6210\u4e86\u6760\u94c3\u3002\u4e00\u65b9\u9762\uff0c\u6709 The Post\uff08320 \u4e07\u5370\u5237\u548c\u6570\u5b57\u65b0\u95fb\u8ba2\u9605\u8005\uff09\u3001The Journal\uff08340 \u4e07\uff09\u548c The Times\uff08600 \u4e07\uff09\u2014\u2014\u5927\u578b\u65b0\u95fb\u673a\u6784\u4f9d\u9760\u5176\u58f0\u671b\u3001\u5e7f\u5ea6\u548c\u7ecf\u9a8c\u6765\u5438\u5f15\u8ba2\u9605\u8005\u3002\u53e6\u4e00\u7aef\u662f The Information\u3001Insider\u3001Axios \u548c\u5176\u4ed6\u516c\u53f8\uff0c\u5b83\u4eec\u4e3a\u89c4\u6a21\u8f83\u5c0f\u4f46\u975e\u5e38\u5fe0\u8bda\u7684\u53d7\u4f17\u63d0\u4f9b\u7279\u522b\u611f\u5174\u8da3\u7684\u4e3b\u9898\u7684\u9ad8\u5ea6\u96c6\u4e2d\u62a5\u9053\u3002\u5b83\u5728\u4e24\u4e2a\u6781\u7aef\u4e4b\u95f4\u53d8\u5f97\u6a21\u7cca\u3002 BuzzFeed\u3001Vice\u3001Vox \u548c Group Nine \u53d1\u73b0\u81ea\u5df1\u5728\u4e0e\u9762\u5411\u666e\u901a\u8bfb\u8005\u7684\u4f20\u7edf\u51fa\u7248\u7269\u4ee5\u53ca\u4e0e Facebook \u548c Google \u4e89\u593a\u5e7f\u544a\u6536\u5165\u7684\u6fc0\u70c8\u7ade\u4e89\u4e2d\u3002 Axios \u7684\u9996\u5e2d\u6267\u884c\u5b98\u5409\u59c6\u00b7\u8303\u5fb7\u9ed1 (Jim VandeHei) \u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff1a\u201c\u4f60\u8981\u4e48\u9700\u8981\u5de8\u5927\u7684\u89c4\u6a21\uff0c\u8981\u4e48\u9700\u8981\u5229\u57fa\u5e02\u573a\u6216\u7279\u5b9a\u7684\u5e02\u573a\u4e3b\u5bfc\u5730\u4f4d\u3002\u201d \u201c\u4e2d\u95f4\u4e00\u76f4\u662f\u9053\u8def\u6740\u624b\u7684\u4f11\u606f\u573a\u6240\u3002\u201d\u636e\u4e24\u4f4d\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0cAxios \u7684\u5927\u90e8\u5206\u6536\u5165\u6765\u81ea\u8d5e\u52a9\u534f\u8bae\uff0c\u4eca\u5e74\u4e0a\u534a\u5e74\u7684\u5e7f\u544a\u9500\u552e\u989d\u589e\u957f\u4e86 80%\uff1b\u4ed6\u4eec\u4f30\u8ba1 Axios 2021 \u5e74\u7684\u6536\u5165\u53ef\u80fd\u8d85\u8fc7 8500 \u4e07\u7f8e\u5143\u3002 VandeHei \u5148\u751f\u8ba4\u4e3a\u8be5\u516c\u53f8\u4e13\u6ce8\u4e8e\u53d7\u4f17\u7684\u9700\u6c42\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4e3a\u6240\u6709\u8bfb\u8005\u63d0\u4f9b\u4e00\u5207\u7684\u7f16\u8f91\u7b56\u7565\u3002 \u201c\u611a\u8822\u7684\u516c\u53f8\u548c\u60f3\u6cd5\u88ab\u51b2\u8d70\u4e86\uff0c\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u201d\u4ed6\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u6ca1\u6709\u63d0\u5230\u4efb\u4f55\u5177\u4f53\u7684\u4e1a\u52a1\uff0c\u201c\u73b0\u5728\u5f88\u660e\u663e\uff0c\u5982\u679c\u4f60\u4e3a\u7279\u5b9a\u7684\u5ba2\u6237\u63d0\u4f9b\u4f18\u8d28\u7684\u4ea7\u54c1\uff0c\u5e7f\u544a\u548c\u8ba2\u9605\u5e02\u573a\u5c31\u5728\u90a3\u91cc\uff0c\u5e76\u4e14\u8fd8\u5728\u589e\u957f\u3002 \uff0c\u53ef\u8bc6\u522b\u7684\u89c2\u4f17\u3002\u201d\n\u4e24\u4f4d\u77e5\u60c5\u4eba\u58eb\u8868\u793a\uff0cAxios \u5df2\u5411 Axel Springer \u63d0\u51fa\u6536\u8d2d\u8981\u7ea6\uff0c\u4ea4\u6613\u91d1\u989d\u53ef\u80fd\u9ad8\u8fbe 4 \u4ebf\u7f8e\u5143\u3002 VandeHei \u548c Axel Springer \u62d2\u7edd\u5c31\u6b64\u4e8b\u53d1\u8868\u8bc4\u8bba\u3002 \uff08The Information \u62a5\u9053\u4e86\u4f1a\u8c08\u3002\uff09SPAC \u662f\u8bb8\u591a\u6570\u5b57\u516c\u53f8\u91cd\u65b0\u5b9a\u4f4d\u81ea\u5df1\u7684\u8ba1\u5212\u7684\u6838\u5fc3\u3002\u4e5f\u88ab\u79f0\u4e3a\u201c\u7a7a\u767d\u652f\u7968\u201d\u516c\u53f8\uff0c\u8fd9\u4e9b\u662f\u5728\u8bc1\u5238\u4ea4\u6613\u6240\u4e0a\u5e02\u7684\u7a7a\u58f3\u516c\u53f8\uff0c\u5176\u76ee\u6807\u662f\u8d2d\u4e70\u79c1\u4eba\u4f01\u4e1a\u5e76\u5c06\u5176\u4e0a\u5e02\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u9996\u6b21\u516c\u5f00\u200b\u200b\u52df\u80a1\u65f6\u7684\u76d1\u7ba1\u9ebb\u70e6\u3002\u6570\u5b57\u51fa\u7248\u5546\u5c06\u8fd9\u79cd\u4e00\u5ea6\u795e\u79d8\u7684\u534e\u5c14\u8857\u7b56\u7565\u89c6\u4e3a\u4e00\u79cd\u4ee5\u4f30\u503c\u7b79\u96c6\u8d44\u91d1\u7684\u65b9\u5f0f\uff0c\u8be5\u4f30\u503c\u53ef\u4ee5\u5728\u66f4\u6d3b\u8dc3\u7684\u6761\u4ef6\u4e0b\u4e0e\u878d\u8d44\u8f6e\u6b21\u76f8\u5339\u914d\u3002\u5728\u5ba3\u5e03\u5176 SPAC \u8ba1\u5212\u65f6\u53d1\u5e03\u7684 38 \u9875\u62db\u80a1\u8bf4\u660e\u4e66\u4e2d\uff0cBuzzFeed \u9884\u8ba1\u6536\u5165\u5c06\u6fc0\u589e\uff0c\u4ece 2021 \u5e74\u7684 5.21 \u4ebf\u7f8e\u5143\u5230 2024 \u5e74\u8d85\u8fc7 10 \u4ebf\u7f8e\u5143\u3002 BuzzFeed \u8fd8\u540c\u610f\u5c06\u4ea4\u6613\u4f30\u503c\u4e0b\u8c03\u56db\u5206\u4e4b\u4e00\uff0c\u5f00\u521b\u4e86\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5148\u4f8b\u5bf9\u4e8e\u73b0\u5728\u5bfb\u6c42\u4e0a\u5e02\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u7a7a\u767d\u652f\u7968\u4ea4\u6613\u53d8\u5f97\u66f4\u96be\u5b9e\u73b0\u3002 4 \u6708\uff0c\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u8868\u793a\u8ba1\u5212\u66f4\u5bc6\u5207\u5730\u68c0\u67e5 SPAC \u5408\u5e76\uff0c\u5e76\u53ef\u80fd\u53d1\u5e03\u65b0\u89c4\u5219\uff0c\u5c06\u8fd9\u4e9b\u4ea4\u6613\u4fdd\u6301\u5728\u4e0e\u4f20\u7edf IPO \u76f8\u540c\u7684\u6807\u51c6\u3002\u636e\u8be5\u516c\u53f8\u7684\u4e09\u4f4d\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u4e0e\u7a7a\u767d\u652f\u7968\u516c\u53f8 7GC \u5408\u4f5c\u3002\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0cVice \u548c 7GC \u6700\u8fd1\u5b8c\u6210\u4e86\u4ea4\u6613\u7684\u5c3d\u804c\u8c03\u67e5\u9636\u6bb5\uff0cVice \u6b63\u5728\u4e0e\u6295\u8d44\u8005\u63a5\u89e6\u4ee5\u7b79\u96c6\u8d44\u91d1\u4ee5\u5b8c\u6210\u4ea4\u6613\u3002\u8fd9\u7b14\u4ea4\u6613\u53ef\u80fd\u4f1a\u4ed8\u51fa\u5de8\u5927\u7684\u4ee3\u4ef7\u3002\u77e5\u60c5\u4eba\u58eb\u8868\u793a\uff0c\u4e0e BuzzFeed \u4e00\u6837\uff0cVice \u53ef\u80fd\u4f1a\u964d\u4f4e\u5176\u4f30\u503c\uff0c\u5e76\u8865\u5145\u8bf4\u5b83\u53ef\u80fd\u4f1a\u4ece 57 \u4ebf\u7f8e\u5143\u8dcc\u81f3 30 \u4ebf\u7f8e\u5143\u4ee5\u4e0b\u3002\u4f5c\u4e3a\u8fd9\u5bb6\u79c1\u52df\u80a1\u6743\u516c\u53f8\u51e0\u5e74\u524d\u8fdb\u884c\u7684 4.5 \u4ebf\u7f8e\u5143\u6295\u8d44\u7684\u4e00\u90e8\u5206\uff0cVice \u4e00\u76f4\u76ef\u7740\u5411 TPG \u652f\u4ed8\u5927\u7b14\u73b0\u91d1\u3002\u4e24\u540d\u77e5\u60c5\u4eba\u58eb\u8868\u793a\uff0cVice \u6b64\u540e\u91cd\u65b0\u8c08\u5224\u4e86\u8fd9\u4e9b\u6761\u6b3e\uff0c\u4e3b\u8981\u5305\u62ec\u80a1\u7968\u3002 SPAC \u5408\u5e76\u53ef\u4ee5\u6e05\u7406\u5176\u6240\u6709\u6743\u7ed3\u6784\u3002 Vice \u62d2\u7edd\u7f6e\u8bc4\u3002\n\u5728\u534e\u5c14\u8857\u76ee\u524d\u8ffd\u6c42\u7684\u6240\u6709\u6570\u5b57\u51fa\u7248\u5546\u4e2d\uff0cVox Media \u53ef\u4ee5\u626d\u8f6c\u964d\u4f4e\u516c\u53f8\u4e0a\u5e02\u4ef7\u503c\u7684\u8d8b\u52bf\u3002\u4e24\u4f4d\u4e86\u89e3\u8be5\u516c\u53f8\u7684\u4eba\u58eb\u8868\u793a\uff0c\u8be5\u516c\u53f8\u9884\u8ba1\u4eca\u5e74\u7684\u6536\u5165\u7ea6\u4e3a 4 \u4ebf\u7f8e\u5143\uff0c\u589e\u957f\u7387\u8d85\u8fc7 25%\u3002\u6216\u8bb8\u66f4\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u4eca\u5e74\uff0cVox Media \u53ef\u80fd\u4f1a\u8fbe\u5230\u4e00\u4e2a\u540d\u4e3a\u73b0\u91d1\u6d41\u4e3a\u6b63\u7684\u8d22\u52a1\u6307\u6807\u3002\u8fd9\u610f\u5473\u7740\u8be5\u516c\u53f8\u7684\u4e1a\u52a1\u6d41\u5165\u7684\u73b0\u91d1\u591a\u4e8e\u6d41\u51fa\u7684\u73b0\u91d1\uff0c\u8fd9\u4f7f\u5f97\u6269\u5f20\u751a\u81f3\u5411\u6295\u8d44\u8005\u652f\u4ed8\u80a1\u606f\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\u8fd9\u4e5f\u8ba9\u4e0a\u5e02\u53d8\u5f97\u4e0d\u90a3\u4e48\u7d27\u8feb\u3002 \u201c\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u96c4\u5fc3\u548c\u673a\u4f1a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u96c4\u5fc3\u52c3\u52c3\uff0c\u201dVox Media \u7684\u9996\u5e2d\u6267\u884c\u5b98\u5409\u59c6\u73ed\u514b\u592b\u8bf4\u3002 \u201c\u6211\u4eec\u5c06\u8bc4\u4f30\u6211\u4eec\u7684\u9009\u62e9\uff0c\u4f46\u6211\u4eec\u5c06\u4ece\u5b9e\u529b\u7684\u89d2\u5ea6\u6765\u505a\u3002\u201d\u4ed6\u4e0d\u4f1a\u5bf9\u8d22\u52a1\u7ec6\u8282\u6216\u4efb\u4f55\u6f5c\u5728\u4ea4\u6613\u53d1\u8868\u8bc4\u8bba\u3002\u636e\u4e09\u4f4d\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0cGroup Nine \u66fe\u4e0e\u5305\u62ec Vox Media \u5728\u5185\u7684\u4e3b\u8981\u51fa\u7248\u5546\u5c31\u5176\u5728 SPAC \u4e0a\u5e02\u7684\u53ef\u80fd\u5408\u5e76\u8fdb\u884c\u4e86\u8c08\u5224\uff0c\u4f46\u8fc4\u4eca\u4e3a\u6b62\u6ca1\u6709\u4efb\u4f55\u5b9e\u73b0\u3002 Group Nine \u7684\u8d1f\u8d23\u4eba Ben Lerer \u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u9274\u4e8e\u6700\u8fd1\u7684\u9500\u552e\u589e\u957f\uff0c\u8be5\u516c\u53f8\u201c\u5904\u4e8e\u4ee4\u4eba\u7fa1\u6155\u7684\u5730\u4f4d\u201d\u3002\u7b2c\u4e5d\u96c6\u56e2\u7684\u4e00\u4e2a\u9009\u62e9\u662f\u4e0e\u5176\u6700\u5927\u7684\u652f\u6301\u8005\u4e4b\u4e00\uff1a\u63a2\u7d22\u516c\u53f8\u8fbe\u6210\u534f\u8bae\u3002\u8fd9\u5bb6\u5a92\u4f53\u5de8\u5934\u6700\u8fd1\u7b56\u5212\u4e86\u5bf9\u534e\u7eb3\u5a92\u4f53\u7684\u5927\u80c6\u6536\u8d2d\uff0c\u4ee5\u66f4\u597d\u5730\u5728\u6d41\u5a92\u4f53\u9886\u57df\u7ade\u4e89\u3002\u901a\u8fc7\u5185\u5bb9\u5408\u4f5c\uff0cGroup Nine \u7684\u8d44\u4ea7\u5df2\u5e2e\u52a9\u5c06\u6570\u5341\u4e07\u65b0\u5ba2\u6237\u5438\u5f15\u5230 Discovery \u7684\u6d41\u5a92\u4f53\u5e73\u53f0\uff0c\u4f7f\u5176\u6210\u4e3a\u6709\u5438\u5f15\u529b\u7684\u6536\u8d2d\u76ee\u6807\u3002\u968f\u7740\u4eba\u4eec\u5f00\u59cb\u589e\u52a0\u5728\u7ebf\u6d88\u8d39\uff0c\u6570\u5b57\u5e7f\u544a\u5e02\u573a\u5728\u5927\u6d41\u884c\u671f\u95f4\u84ec\u52c3\u53d1\u5c55\uff1b BuzzFeed\u3001Vox Media \u548c Group Nine \u90fd\u4ece\u4e2d\u53d7\u76ca\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e0e\u6570\u5b57\u5de8\u5934\u5e26\u6765\u7684\u91d1\u989d\u76f8\u6bd4\uff0c\u4ed6\u4eec\u7684\u6536\u76ca\u5fae\u4e0d\u8db3\u9053\u3002\u5e7f\u544a\u516c\u53f8 WPP \u7684\u5a92\u4f53\u6295\u8d44\u90e8\u95e8 GroupM \u7684\u9996\u5e2d\u5206\u6790\u5e08 Brian Wieser \u8bf4\uff1a\u201cFacebook\u3001\u8c37\u6b4c\u548c\u4e9a\u9a6c\u900a\u7684\u9762\u5305\u5c51\u662f Vox\u3001Group Nine \u548c Buzzfeed \u7684\u86cb\u7cd5\u3002\u201d\nBuzzFeed \u8fdb\u5165\u516c\u5f00\u5e02\u573a\u53ef\u80fd\u4f1a\u7ed9\u5b83\u5e26\u6765\u4f18\u52bf\u3002\u9664\u4e86\u73b0\u91d1\u4e4b\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5c06\u5176\u80a1\u7968\u7528\u4f5c\u8d27\u5e01\uff0c\u6309\u7167\u5176\u6536\u8d2d HuffPost \u7684\u65b9\u5f0f\u8fdb\u884c\u53e6\u4e00\u7b14\u4ea4\u6613\u3002 BuzzFeed \u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u4e54\u7eb3\u00b7\u4f69\u96f7\u8482 (Jonah Peretti) \u4e0a\u4e2a\u6708\u8868\u793a\uff1a\u201c\u6211\u4eec\u5c06\u6709\u673a\u4f1a\u8fdb\u884c\u66f4\u591a\u6536\u8d2d\uff0c\u800c\u4e14\u8fd8\u6709\u66f4\u591a\u4ee4\u4eba\u5174\u594b\u7684\u516c\u53f8\u53ef\u4f9b\u6211\u4eec\u6536\u8d2d\u3002\u201d\u5f53\u88ab\u95ee\u53ca BuzzFeed \u662f\u5426\u4f1a\u8003\u8651\u8fdb\u5165\u8ba2\u9605\u4e1a\u52a1\u65f6\uff0c\u4ed6\u5728\u6700\u8fd1\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\u8bf4\uff1a\u201c\u5f53\u7136\uff0c\u6211\u4eec\u4f1a\u8003\u8651\u3002\u4e3a\u4ec0\u4e48\u4e0d\uff1f\u201d", "note_en": "Not so long ago, when newspapers and magazines were going out of business all across the country, BuzzFeed and a few other fast-growing web publications seemed like the future of the news business.\n Investors poured billions into Vox Media, Vice Media, Group Nine and other upstart companies that employed writers fully at ease with the new digital culture and the increased velocity of online journalism. Valuations shot skyward, and the companies\u2019 founders did victory laps with each round of funding.\n The exuberance was based on what seemed like a surefire business model: Give readers web-native content free of charge and watch the money roll in from advertisers eager to connect with a young audience.\n  The Washington Post, The New York Times and The Wall Street Journal have flourished, thanks to an emphasis on digital journalism and a strategy of charging readers for online access. A number of leading web journalists have  decamped  for these century-old institutions, while investors are demanding returns on the money they plowed into the digital companies when they were all the rage.\n In an effort to regain their stature and compete against the much larger Facebook and Google, which take huge chunks of online ad revenue, BuzzFeed, Vox Media, Vice Media and Group Nine have gotten bigger in recent years through  mergers and acquisitions.\n Vox Media bought New York Media, the parent company of New York magazine and its clutch of websites. Vice Media bought Refinery29. Group Nine added PopSugar to a stable that included The Dodo and Thrillist and created a special purpose acquisition company (or SPAC) with the aim of going public. BuzzFeed  bought HuffPost and said it would acquire another publisher, Complex, as part of its plan to go public through a  SPAC transaction of its own.\n  Vice Media, previously on the hook for big payments to one of its investors, the private equity giant TPG, is circling a plan to go public, according to three people with knowledge of Vice Media. Vox Media is considering several offers that would take it public through a SPAC, two people familiar with the business said. And Axios, a news site based in Washington that started in 2017, has had talks with the German publishing giant Axel Springer about a possible merger, according to three people with knowledge of the negotiations.\n   The wheeling and dealing has come as media investors have lost some of their enthusiasm for ad-supported sites filled with free content. Substack, a digital newsletter platform that relies on subscriptions, is now in vogue. Puck, a newsletter founded by a former Vanity Fair editor, recently started up with  millions of dollars in funding. News sites with strict paywalls, including  The Information and Insider, are growing.\n The media industry has turned into a barbell. On one end, there are The Post (3.2 million print and digital news subscribers), The Journal (3.4 million) and The Times (six million) \u2014 large news operations that rely on their prestige, breadth and experience to attract subscribers. At the other end are The Information, Insider, Axios and others that provide hyper-focused reporting on subjects of special interest to smaller but intensely loyal audiences.\n It gets murky between the two extremes. BuzzFeed, Vice, Vox and Group Nine find themselves in a difficult competition with the legacy publications for general readers and with Facebook and Google for ad dollars.\n \u201cYou either need huge scale, or niche or specific market dominance,\u201d Jim VandeHei, the chief executive of Axios, said in an email. \u201cThe middle has always been the resting place for roadkill.\u201d\n Axios, which brings in most of its revenue through sponsorship deals, had an 80 percent jump in ad sales during the first half of this year, according to two people familiar with the company; they estimated that Axios\u2019 2021 revenue could top $85 million.\n Mr. VandeHei credits the company\u2019s laser focus on what its audience wants, as opposed to an editorial strategy of trying to be all things to all readers.\n  \u201cThe silly companies and ideas washed away, and rightly so,\u201d he said in the email, without referring to any specific businesses, \u201cand it\u2019s now clear the advertising and subscription markets are there AND growing if you deliver a quality product for a specific, identifiable audience.\u201d\n Axios has fielded a takeover offer from Axel Springer in a deal that could top $400 million, the two people with knowledge of the company said. Mr. VandeHei and Axel Springer declined to comment on the matter. (The Information  reported on the talks.)\n SPACs are at the center of many digital companies\u2019 plans to reposition themselves. Also known as \u201cblank check\u201d firms, these are shell corporations that list on a stock exchange with the goal of buying a private business and taking it public without the regulatory hassles that go with an initial public offering.\n Digital publishers see this once-arcane Wall Street maneuver as a way to raise money at valuations that could match funding rounds in more buoyant conditions. In the 38-page  prospectus published when it announced its SPAC plan, BuzzFeed projected a revenue surge, from $521 million in 2021 to over $1 billion by 2024. BuzzFeed also agreed to cut a quarter of its valuation for the transaction, setting a bad precedent for rivals now seeking to go public.\n Blank check deals have become harder to pull off. In April, the Securities and Exchange Commission  said it planned to inspect SPAC mergers more closely and could issue new rules, holding these transactions to the same standards of a traditional I.P.O.\n Although the S.E.C.\u2019s statement has slowed the financing market for SPACs, Vice Media is working with the blank check firm 7GC, according to the three people with knowledge of the company. Vice and 7GC recently completed the due diligence stage of the deal, the people said, and Vice is reaching out to investors to raise money to complete the transaction.\n The deal could come at a huge cost. Like BuzzFeed, Vice might lower its valuation, the people said, adding that it could fall below $3 billion from $5.7 billion.\n Vice had been staring down big cash payments to TPG as part of a $450 million investment that the private equity firm made a few years ago. Vice has since renegotiated those terms to principally include stock, two of the people said. A SPAC merger could clean up its ownership structure. Vice declined to comment.\n Of all the digital publishers currently pursued by Wall Street, Vox Media could reverse the trend of reducing a company\u2019s value to go public. It anticipates around $400 million in revenue this year, growing at a rate of more than 25 percent, two people with knowledge of the company said.\n Perhaps more noteworthy: This year, Vox Media is likely to hit a financial metric known as cash flow positive, the people said. That means the company\u2019s operations have more cash coming in than going out, which makes it easier to expand or even pay dividends to its investors. It also makes going public less urgent.\n \u201cFor us, it\u2019s a question of ambition and opportunity, and we are ambitious,\u201d said Jim Bankoff, Vox Media\u2019s chief executive. \u201cWe are going to evaluate our options, but we\u2019re going to do it from a position of strength.\u201d He would not comment on financial details or any potential deals.\n Group Nine had talks with major publishers, including Vox Media, about a possible merger for its own  SPAC listing, but so far none have materialized, according to three people with knowledge of the matter. Ben Lerer, the head of Group Nine, said in an interview that the company was \u201cin an enviable position\u201d given its recent sales growth.\n  An option for Group Nine would be a deal with one of its largest backers: Discovery Inc. The media giant recently  orchestrated a daring  takeover of WarnerMedia in an effort to better compete in streaming. Group Nine\u2019s properties have helped drive hundreds of thousands of new customers to Discovery\u2019s streaming  platform through content partnerships, making it an attractive takeover target.\n The digital ad market thrived during the pandemic, as people started spending more online; BuzzFeed, Vox Media and Group Nine all benefited. Still, their gains were nothing compared with the amounts brought in by the digital giants.\n \u201cFacebook, Google and Amazon\u2019s crumbs are Vox, Group Nine and Buzzfeed\u2019s cake,\u201d said Brian Wieser, the lead analyst at GroupM, the media investing arm of the ad company WPP.\n  BuzzFeed\u2019s entry into the public markets is likely to give it an advantage. In addition to cash, it will be able to use its stock as currency to make another deal along the lines of its HuffPost purchase.\n \u201cWe\u2019ll have opportunities to pursue more acquisitions, and there are more exciting companies out there that we want to pursue,\u201d Jonah Peretti, a BuzzFeed co-founder and the chief executive, said last month.\n When asked if BuzzFeed would consider entering the subscription business, he said in a recent interview: \u201cSure, we\u2019d consider it. Why not?\u201d", "posttime": "2021-07-27 23:54:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "vox,buzzfeed", "title": "BuzzFeed \u5373\u5c06\u4e0a\u5e02\u3002 Vice \u548c Vox \u73b0\u5728\u600e\u4e48\u529e\uff1f", "title_en": "BuzzFeed Is Going Public. What Now for Vice and Vox?", "transed": 1, "url": "https://www.nytimes.com/2021/07/27/business/media/buzzfeed-vox-media-vice-group-nine-ipo.html", "via": "", "real_tags": ["vox", "buzzfeed"]}]
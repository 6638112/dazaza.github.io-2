[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1067388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u804a\u7684\uff1f \u627e\u5230\u771f\u6b63\u968f\u673a\u548c\u552f\u4e00\u7684\u670d\u52a1\u5668\u6765\u6df7\u6dc6\u3002 ", "note_en": "Bored? Find truly random and unique servers to mess with.", "posttime": "2021-06-22 15:54:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "casino,random,\u670d\u52a1\u5668", "title": "server.casino  - \u8de8\u4e92\u8054\u7f51\u968f\u673a\u670d\u52a1\u5668 ", "title_en": "Server.casino \u2013 Random Servers Across the Internet", "transed": 1, "url": "http://server.casino/", "via": "", "real_tags": ["casino", "random", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u7528\u4e8e\u68c0\u7d22\u6765\u81ea\u7f13\u5b58\u6570\u636e\u7684\u6a21\u5f0f\u7c7b\u578b\u7684\u81ea\u6a21\u5178\u53ef\u4ee5\u4fdd\u5b58\u6709\u6548\u7684\u7f51\u7edc\u5e26\u5bbd\u548c\u8ba1\u7b97\u5468\u671f\u3002\n  \u6570\u636e\u4fee\u6539\u65f6\u95f4\u5f15\u7528\u5e94\u6765\u81ea\u5ba2\u6237\u7aef\uff0c\u5e76\u4f5c\u4e3a\u6839\u636e\u4ec5\u4ec5\u6700\u540e\u4e00\u6b21\u4e0a\u6b21\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u975e\u786e\u8ba4\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u4f5c\u4e3a\u8bf7\u6c42\u7684\u4e00\u90e8\u5206\u800c\u4e0d\u662f\u5728\u670d\u52a1\u5668\u4fa7\u88ab\u53d1\u9001\u3002\n  \u5728Redis\u670d\u52a1\u5668\u7aef\u5229\u7528Lua\u5728Redis\u4e0a\u5229\u7528Lua\uff0c\u5728\u5ef6\u8fdf\u65b9\u9762\u7684\u5f00\u9500\u975e\u5e38\u5c11\uff0c\u8fd9\u7c7b\u6a21\u5f0f\u662f\u53ef\u80fd\u7684\u3002\n  \u6211\u4eec\u53ef\u4ee5\u5c06\u952e\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\u5b58\u50a8\u5728\u54c8\u5e0c\u4e2d\uff0c\u5e76\u4ec5\u5728\u8f83\u65b0\u7684\u65f6\u68c0\u7d22\u503c\uff0c\u800c\u4e0d\u662f\u53d1\u9001\u7684\u65f6\u95f4\u5ba2\u6237\u7aef\u3002\n  \u4ee5\u4e0bLua\u4ee3\u7801\u6bb5\u5b58\u50a8/\u68c0\u7d22\u57fa\u4e8e\u6563\u5217\u4e2d\u7684\u952e\u7684\u4fee\u6539\u65f6\u95f4\uff0c\u79f0\u4e3amy_keystime\u3002\n    local keys_mtime_hset =\uff06\uff0334; my_keysmtime\uff06\uff0334;\u672c\u5730\u952e=\u952e[1]\u672c\u5730mtime = tonumber\uff08argv [1]\uff09\u672c\u5730key_mtime = redis\u3002\u547c\u53eb\uff08\uff06\uff0339; hget\uff06\uff0339;\uff0ckeys_mtime_hset\uff0ckey\uff09key_mtime = tonumber\uff08key_mtime\uff09 - \u5982\u679c\u54c8\u5e0c\u96c6\u4e2d\u7684\u7f3a\u5c11\u952e\u8fd4\u56de\u952e\u7684\u503c\u3002 - \u6216\u952emtime\uff06gt;\u5982\u679c\u4e0d\u662fkey_mtime\u6216key_mtime\uff06gt; mtime\u7136\u540e\uff0cMify\u8fd4\u56deRedis\u3002\u547c\u53eb\uff08\uff06\uff0339; get\uff06\uff0339; key\uff09\u7ed3\u675f\u8fd4\u56denil\n    local keys_mtime_hset =\uff06\uff0334; my_keysmtime\uff06\uff0334;\u672c\u5730\u952e=\u952e[1]\u672c\u5730\u503c= argv [1]\u672c\u5730mtime = tonumber\uff08argv [2]\uff09redis\u3002\u81f4\u7535\uff08\uff06\uff0339;\u8bbe\u7f6e\uff06\uff0339;\uff0ckey\uff0cpresigs\uff09redis\u3002\u547c\u53eb\uff08\uff06\uff0339; hset\uff06\uff0339;\uff0ckeys_mtime_hset\uff0ckey\uff0cmtime\uff09 \n\u5ba2\u6237\u7aef\u5728\u68c0\u7d22\u548c\u8bbe\u7f6e\u5bc6\u94a5\u65f6\u53d1\u9001\u4fee\u6539\u65f6\u95f4\u3002 Redis Lua\u811a\u672c\u662f\u539f\u5b50\u7684\u3002\n    mtime_get =\uff06\uff0334;\uff06\uff0334;\uff06\uff0334; local keys_mtime_hset =\uff06\uff0334; my_keysmtime\uff06\uff0334; local key = keys [1]\u672c\u5730mtime = tonumber\uff08argv [1]\uff09local key_mtime = redis.call\uff08\uff06 \uff0339; hget\uff06\uff0339;\uff0ckeys_mtime_hset\uff0ckey_mtime = tonumber\uff08key_mtime\uff09 - \u5982\u679c\u54c8\u5e0c\u96c6\u4e2d\u7684\u7f3a\u5c11\u952e\u8fd4\u56de\u952e\u7684\u503c.--\u6216\u952emtime\uff06gt;\u5982\u679c\u4e0d\u662fkey_mtime\u6216key_mtime\uff06gt; mtime\u7136\u540e\uff0c\u7136\u540e\u8fd4\u56deredis.call\uff08\uff06\uff0339; get\uff06\uff0339;\uff0ckey\uff09endroTurn\u96f6\uff06\uff0334;\uff06\uff0334;\uff06\uff0334; mtime_set =\uff06\uff0334;\uff06\uff0334; local keys_mtime_hset =\uff06\uff0334; my_keysmtime\uff06\uff0334; local key =\u952e[1]\u672c\u5730\u503c= argv [1]\u672c\u5730mtime = tonumber\uff08argv [2]\uff09redis .call\uff08\uff06\uff0339; set\uff06\uff0339; key\uff0cvalue\uff09redis.call\uff08\uff06\uff0339; hset\uff06\uff0339; keys_mtime_hset\uff0ckey\uff0cmtime\uff09\uff06\uff0334;\uff06\uff0334;\uff06\uff0334; m1 = int\uff08\u65f6\u95f4\uff08\uff09\uff09r = redis\u3002 redis\uff08host =\uff06\uff0339; localhost\uff06\uff0339;\uff0cport = 6379\uff09mtget = r\u3002 register_script\uff08mtime_get\uff09mtset = r\u3002 register_script\uff08mtime_set\uff09t_k =\uff06\uff0334;\u4f60\u597d\uff06\uff0334; t_v =\uff06\uff0334;\u4e16\u754c\uff06\uff0334; r\u3002\u5220\u9664\uff08t_k\uff09\u6253\u5370\uff08mtget\uff08keys = [t_k]\uff0cargs = [m1]\uff09\uff09\u6253\u5370\uff08mtset\uff08keys = [t_k]\uff0cargs = [t_v\uff0cm1]\uff09\uff09\u6253\u5370\uff08r\u3002get\uff08t_k\uff09\uff09\u6253\u5370\uff08mtget\uff08keys = [t_k]\uff0cargs = [m1-100]\uff09\uff09\u6253\u5370\uff08mtget\uff08keys = [t_k]\uff0cargs = [m1 + 100]\uff09\uff09\uff09\n      \u8fd9\u4f1a\u4ea7\u751f\u591a\u5c11\u5f00\u9500\uff1f\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u51c6\u663e\u793a\u4e0d\u5e94\u5f88\u591a\uff0c\u56e0\u4e3aHGet\u662fO\uff081\uff09\u64cd\u4f5c\u3002\n  \u91cd\u590d= 10000\u53f7= 3 g = timeit\u3002\u8ba1\u65f6\u5668\uff08\uff06\uff0334; r.get\uff08t_k\uff09\uff06\uff0334;\uff0cglobals = globals\uff08\uff09\uff09timings_get = g\u3002\u91cd\u590d\uff08\u91cd\u590d=\u91cd\u590d\uff0c\u6570\u5b57=\u6570\u5b57\uff09g = timeit\u3002\u5b9a\u65f6\u5668\uff08\uff06\uff0334; mtget\uff08keys = [t_k]\uff0cargs = [m1  -  100]\uff09\uff06\uff0334;\uff0cglobals = globals\uff08\uff09\uff09timings_hits_mtget = g\u3002\u91cd\u590d\uff08\u91cd\u590d=\u91cd\u590d\uff0c\u6570\u5b57=\u6570\u5b57\uff09g = timeit\u3002\u8ba1\u65f6\u5668\uff08\uff06\uff0334; mtget\uff08keys = [t_k]\uff0cargs = [m1 + 100]\uff09\uff06\uff0334;\uff0cglobals = globals\uff08\uff09\uff09timings_miss_mtget = g\u3002\u91cd\u590d\uff08\u91cd\u590d=\u91cd\u590d\uff0c\u6570\u5b57=\u6570\u5b57\uff09\n  \u4ece\u8be5\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8fd0\u884c\u5e76\u7ed8\u5236\u65f6\u95f4\uff0cx\u8f74\u662f\u547c\u53eb\u7684\u65f6\u95f4\u3002\n    \u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u6709\u8f7b\u5fae\u7684\u5f00\u9500\uff0c\u666e\u901a\u662f\u57fa\u4e8e\u6700\u5feb\u7684\u4fee\u6539\u65f6\u95f4\u7684\u6700\u6162\u3002\u8bf7\u53c2\u9605\u6b64Jupyter Notebook\u4ee5\u83b7\u53d6\u5168\u5de5\u4f5c\u793a\u4f8b\u548c\u56fe\u8868\u6e90\u3002 ", "note_en": "The  if modified since type of pattern for retrieving data from cache can save significant network bandwidth and compute cycles.\n  The data modification time reference should be from the client side and be sent as part of the request and not assumed on server side based on a non acknowledgement type of method like simply last time the client connected to the server.\n  This kind of pattern is possible on redis server side leveraging  lua on  redis, with very less overhead in terms of latency.\n  We can store the last modification time of a key in a  hash and retrieve the value only if it is newer than the time client sent.\n  The following Lua snippets store/retrieve based on the modification time of key in a hash called  MY_KEYSTIME.\n    local  keys_mtime_hset  =  &#34;MY_KEYSMTIME&#34; local  key  =  KEYS [ 1 ] local  mtime  =  tonumber ( ARGV [ 1 ]) local  key_mtime  =  redis . call ( &#39;HGET&#39; ,  keys_mtime_hset ,  key ) key_mtime  =  tonumber ( key_mtime ) -- if missing key in the hash set return the value of the key. -- or key mtime &gt; mtime  if  not  key_mtime  or  key_mtime  &gt;  mtime  then  return  redis . call ( &#39;GET&#39; ,  key ) end return  nil\n    local  keys_mtime_hset  =  &#34;MY_KEYSMTIME&#34; local  key  =  KEYS [ 1 ] local  value  =  ARGV [ 1 ] local  mtime  =  tonumber ( ARGV [ 2 ]) redis . call ( &#39;SET&#39; ,  key ,  value ) redis . call ( &#39;HSET&#39; ,  keys_mtime_hset ,  key ,  mtime )\n  Client sends the modification time while retrieving and setting the key. Redis Lua scripts are  atomic.\n    mtime_get = &#34;&#34;&#34;local keys_mtime_hset = &#34;MY_KEYSMTIME&#34;local key = KEYS[1]local mtime = tonumber(ARGV[1])local key_mtime = redis.call(&#39;HGET&#39;, keys_mtime_hset, key)key_mtime = tonumber(key_mtime)-- if missing key in the hash set return the value of the key.-- or key mtime &gt; mtime if not key_mtime or key_mtime &gt; mtime then return redis.call(&#39;GET&#39;, key)endreturn nil &#34;&#34;&#34; mtime_set = &#34;&#34;&#34;local keys_mtime_hset = &#34;MY_KEYSMTIME&#34;local key = KEYS[1]local value = ARGV[1]local mtime = tonumber(ARGV[2])redis.call(&#39;SET&#39;, key, value)redis.call(&#39;HSET&#39;, keys_mtime_hset, key, mtime)&#34;&#34;&#34; m1  =  int ( time . time ()) r  =  redis . Redis ( host = &#39;localhost&#39; ,  port = 6379 ) MTGET = r . register_script ( mtime_get ) MTSET = r . register_script ( mtime_set ) t_k  =  &#34;Hello&#34; t_v  =  &#34;World&#34; r . delete ( t_k ) print ( MTGET ( keys = [ t_k ],  args = [ m1 ])) print ( MTSET ( keys = [ t_k ],  args = [ t_v ,  m1 ])) print ( r . get ( t_k )) print ( MTGET ( keys = [ t_k ],  args = [ m1  -  100 ])) print ( MTGET ( keys = [ t_k ],  args = [ m1  +  100 ]))\n      How much overhead will this incur ? A simple benchmark shows not a lot, since HGET is an O(1) operation.\n  REPEAT = 10000 NUMBER = 3 g  =  timeit . Timer ( &#34;r.get(t_k)&#34; , globals = globals ()) timings_get  =  g . repeat ( repeat = REPEAT ,  number = NUMBER ) g  =  timeit . Timer ( &#34;MTGET(keys=[t_k], args=[m1 - 100])&#34; , globals = globals ()) timings_hits_mtget  =  g . repeat ( repeat = REPEAT ,  number = NUMBER ) g  =  timeit . Timer ( &#34;MTGET(keys=[t_k], args=[m1 + 100])&#34; , globals = globals ()) timings_miss_mtget  =  g . repeat ( repeat = REPEAT ,  number = NUMBER )\n  Running and plotting the timings from this benchmark, x axis is time taken for calls.\n    As expected there is a slight overhead, with plain get being the fastest and modification time based get the slowest. See this  jupyter notebook for full working example and chart source.", "posttime": "2021-06-22 15:52:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f13\u5b58,\u670d\u52a1\u5668,server,\u65f6\u95f4", "title": "redis\u670d\u52a1\u5668\u4fa7if-modified  - \u7531\u4e8e\u4f7f\u7528lua\u7684\u7f13\u5b58\u6a21\u5f0f ", "title_en": "Redis server side if-modified-since caching pattern using lua", "transed": 1, "url": "https://blog.r4um.net/2021/redis-mtime-getset/", "via": "", "real_tags": ["\u7f13\u5b58", "\u670d\u52a1\u5668", "server", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "17705cbb9935c280f37841e5ca35addd.jpeg", "infoid": 1067386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u662fDevOps\u5de5\u7a0b\u5e08\u6216Web\u5f00\u53d1\u4eba\u5458\uff0c\u60a8\u5df2\u7ecf\u6709\u5f88\u5927\u7684\u673a\u4f1a\uff0c\u60a8\u5df2\u7ecf\u719f\u6089\u5e76\u6bcf\u5929\u4f7f\u7528SSH\u5bc6\u94a5\u8eab\u4efd\u9a8c\u8bc1\u3002\u65e0\u8bba\u662f\u7528\u4e8e\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fd8\u662f\u5c06\u63d0\u4ea4\u63a8\u5411\u8fdc\u7a0b\u5b58\u50a8\u5e93\u65f6\u3002\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6bd4\u4f20\u7edf\u7684\u57fa\u4e8e\u5bc6\u7801\u7684\u8eab\u4efd\u9a8c\u8bc1\u66f4\u597d\u7684\u5b89\u5168\u6027\u3002\n \u4f46\u662f\uff0c\u60a8\u6700\u540e\u4e00\u6b21\u521b\u5efa\u6216\u5347\u7ea7SSH\u5bc6\u94a5\u662f\u4ec0\u4e48\u65f6\u5019\uff1f\u60a8\u662f\u5426\u4f7f\u7528\u4e86\u6700\u65b0\u63a8\u8350\u7684\u516c\u94a5\u7b97\u6cd5\uff1f\u5982\u679c\u5b83\u8d85\u8fc7\u4e94\u5e74\u524d\u5e76\u4e14\u60a8\u4f7f\u7528\u9ed8\u8ba4\u9009\u9879\u751f\u6210\u4e86SSH\u5bc6\u94a5\uff0c\u60a8\u53ef\u80fd\u6700\u7ec8\u4f7f\u7528RSA\u7b97\u6cd5\uff0c\u5bc6\u94a5\u5927\u5c0f\u957f\u4e8e2048\u4f4d\u3002\n  \u8981\u68c0\u67e5\u8ba1\u7b97\u673a\u4e0a\u7684\u6240\u6709\u53ef\u7528SSH\u952e\uff0c\u8bf7\u5728\u7ec8\u7aef\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n   \ud83d\udea8dsa\uff1a\u5b83\u4e0d\u5b89\u5168\u4e14\u751a\u81f3\u4e0d\u518d\u652f\u6301openssh\u7248\u672c7\uff0c\u60a8\u9700\u8981\u5347\u7ea7\u5b83\uff01\n \u26a0\ufe0frsa\uff1a\u5b83\u53d6\u51b3\u4e8e\u952e\u5c3a\u5bf8\u3002\u5982\u679c\u5b83\u67093072\u62164096\u4f4d\u957f\u5ea6\uff0c\u90a3\u4e48\u4f60\u5f88\u597d\u3002\u5c11\u4e8e\u90a3\u4e2a\uff0c\u4f60\u53ef\u80fd\u60f3\u5347\u7ea7\u5b83\u3002 1024\u4f4d\u957f\u5ea6\u751a\u81f3\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b89\u5168\u7684\u3002\n \ud83d\udc40ECDSA\uff1a\u5b83\u53d6\u51b3\u4e8e\u60a8\u7684\u673a\u5668\u5982\u4f55\u751f\u6210\u968f\u673a\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u7b7e\u540d\u3002\u5bf9ECDSA\u4f7f\u7528\u7684NIST\u66f2\u7ebf\u4e5f\u6709\u4e00\u79cd\u53ef\u9760\u7684\u62c5\u5fe7\u3002\n  ED25519\u5728OpenSSH 6.5\u7248\u4e0a\u5f15\u5165\u3002\u5b83\u662f\u4f7f\u7528\u626d\u66f2\u7684Edwards\u66f2\u7ebf\u7684EDDSA\u5b9e\u73b0\u3002\u5b83\u4f7f\u7528\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u672f\uff0c\u4e0eDSA\u6216ECDSA\u76f8\u6bd4\uff0c\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\u3002 \n\u4eca\u5929\uff0cRSA\u662fSSH\u952e\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u516c\u94a5\u7b97\u6cd5\u3002\u4f46\u4e0eED25519\u76f8\u6bd4\uff0c\u5982\u679c\u4f7f\u7528\u5c0f\u4e8e2048\u4f4d\u957f\u5ea6\u7684\u952e\u751f\u6210\uff0c\u5b83\u4f1a\u6162\u4e14\u751a\u81f3\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b89\u5168\u7684\u3002\n ED25519\u516c\u94a5\u7d27\u51d1\u3002\u4e0e\u5177\u6709544\u4e2a\u5b57\u7b26\u7684RSA 3072\u76f8\u6bd4\uff0c\u5b83\u53ea\u5305\u542b68\u4e2a\u5b57\u7b26\u3002\u751f\u6210\u5bc6\u94a5\u4e5f\u51e0\u4e4e\u4e0e\u7b7e\u540d\u8fc7\u7a0b\u4e00\u6837\u5feb\u3002\u4f7f\u7528ED25519\u6267\u884c\u6279\u91cf\u7b7e\u540d\u9a8c\u8bc1\u4e5f\u5f88\u5feb\u3002\u5b83\u5efa\u6210\u662f\u78b0\u649e\u5f39\u6027\u3002\u54c8\u5e0c\u51fd\u6570\u78b0\u649e\u4e0d\u4f1a\u7834\u574f\u7cfb\u7edf\u3002\n    \u60a8\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u6709\u591a\u4e2aSSH\u952e\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u4fdd\u7559\u65e7\u7684SSH\u952e\u5e76\u751f\u6210\u4f7f\u7528ED25519\u7684\u65b0\u5efa\u3002\u8fd9\u6837\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u767b\u5f55\u4efb\u4f55\u8fdc\u7a0b\u670d\u52a1\u5668\u3002\u7136\u540e\u5c06\u9010\u4e2a\u9010\u4e2a\u9010\u4e2a\u66ff\u6362\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u7684\u6388\u6743\u5bc6\u94a5\uff0c\u5176\u4e2d\u5305\u542b\u65b0\u751f\u6210\u7684ED25519\u516c\u94a5\u3002\n \u6253\u5f00\u7ec8\u7aef\u5e76\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u751f\u6210\u4f7f\u7528ED25519\u7b97\u6cd5\u7684\u65b0SSH\u5bc6\u94a5\uff1a\n  \u5c06\u8981\u6c42\u60a8\u8f93\u5165\u6b64\u952e\u7684\u5bc6\u7801\u77ed\u8bed\uff0c\u4f7f\u7528\u5f3a\u5927\u7684\u5bc6\u94a5\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0e\u4efb\u4f55\u65e7\u7684SSH\u952e\u7c7b\u4f3c\u7684\u76f8\u540c\u5bc6\u7801\u3002\n -O\uff1a\u4f7f\u7528\u65b0\u7684OpenSSH\u683c\u5f0f\u800c\u4e0d\u662fPEM\u683c\u5f0f\u4fdd\u5b58\u79c1\u94a5\u3002\u5b9e\u9645\u4e0a\uff0c\u5f53\u60a8\u5c06\u952e\u7c7b\u578b\u6307\u5b9a\u4e3aED25519\u65f6\uff0c\u6697\u793a\u6b64\u9009\u9879\u3002\n -a\uff1a\u8fd9\u662fKDF\uff08\u5173\u952e\u63a8\u5bfc\u51fd\u6570\uff09\u8f6e\u7684\u6570\u91cf\u3002\u5982\u679c\u79c1\u94a5\u88ab\u76d7\uff0c\u8f83\u9ad8\u7684\u5bc6\u7801\u9a8c\u8bc1\u7684\u6570\u91cf\u4f1a\u5bfc\u81f4\u8f83\u6162\u7684\u5bc6\u7801\u9a8c\u8bc1\uff0c\u589e\u52a0\u5bf9\u86ee\u529b\u5bc6\u7801\u5f00\u88c2\u7684\u963b\u529b\u3002 \n-f\uff1a\u6307\u5b9a\u751f\u6210\u7684\u5bc6\u94a5\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002\u5982\u679c\u60a8\u5e0c\u671b\u88abSSH\u4ee3\u7406\u81ea\u52a8\u53d1\u73b0\u5b83\uff0c\u5b83\u5fc5\u987b\u5b58\u50a8\u5728\u4e3b\u76ee\u5f55\u4e2d\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u201c\u3002\n -c\uff1a\u6307\u5b9a\u6ce8\u91ca\u7684\u9009\u9879\u3002\u5b83\u7eaf\u7cb9\u662f\u4fe1\u606f\u6027\u7684\uff0c\u53ef\u4ee5\u662f\u4efb\u4f55\u4e1c\u897f\u3002\u4f46\u5b83\u901a\u5e38\u586b\u5145\uff06lt;\u767b\u5f55\uff06gt; @\uff06lt; hostname\uff06gt;\u8c01\u751f\u6210\u4e86\u5173\u952e\u3002\n  \u60a8\u53ef\u4ee5\u5728\u301c/ .ssh / id_ed25519\u548c\u516c\u94a5\u5904\u627e\u5230\u65b0\u751f\u6210\u7684\u79c1\u94a5.pub.pub\u3002\u59cb\u7ec8\u8bb0\u4f4f\uff0c\u60a8\u7684\u516c\u94a5\u662f\u60a8\u590d\u5236\u5230\u76ee\u6807\u4e3b\u673a\u4ee5\u8fdb\u884c\u8eab\u4efd\u200b\u200b\u9a8c\u8bc1\u7684\u5173\u952e\u5b57\u3002\n \u5728\u5411SSH\u4ee3\u7406\u6dfb\u52a0\u65b0\u7684\u79c1\u94a5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884cSSH\u4ee3\u7406\uff1a\n  \u7136\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5c06\u65b0\u751f\u6210\u7684ED25519\u5bc6\u94a5\u6dfb\u52a0\u5230SSH\u4ee3\u7406\uff1a\n  \u6216\u8005\u5982\u679c\u8981\u5728\u9ed8\u8ba4\u7684.ssh\u76ee\u5f55\u4e0b\u6dfb\u52a0\u6240\u6709\u53ef\u7528\u952e\uff0c\u53ea\u9700\u8fd0\u884c\uff1a\n   \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fMacOS Sierra 10.12.2\u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5219\u4f1a\u81ea\u52a8\u52a0\u8f7d\u952e\u5e76\u5c06\u5bc6\u7801\u5b58\u50a8\u5728\u94a5\u5319\u4e32\u4e2d\uff0c\u60a8\u9700\u8981\u914d\u7f6e\u301c/ .ssh / config\u6587\u4ef6\uff1a \nhost * addkeystoagent\u662f\u4f7f\u7528eymerchain\u662fidentityfile\u301c/ .ssh / id_ed25519 Identityfile\u301c/ .ssh / id_rsa\uff03\u5982\u679c\u60a8\u613f\u610f\uff0c\u8bf7\u4fdd\u7559\u4efb\u4f55\u65e7\u5bc6\u94a5\u6587\u4ef6  SSH\u534f\u8bae\u5df2\u5141\u8bb8\u5ba2\u6237\u7aef\u63d0\u4f9b\u591a\u4e2a\u952e\uff0c\u670d\u52a1\u5668\u5c06\u9009\u62e9\u5b83\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\u7684\u952e\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684\u79c1\u94a5\u4ee5\u4f7f\u7528\uff1a  \u6216\u8005\u60a8\u751a\u81f3\u53ef\u4ee5\u5c06\u6761\u76ee\u6dfb\u52a0\u5230\u301c/ .ssh / config\u6587\u4ef6\u4ee5\u914d\u7f6e\u4ee5\u4e0b\u9009\u9879\uff1a  \u4e00\u65e6\u5b83\u4fdd\u5b58\uff0c\u7a0d\u540e\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837SSH\u8fd9\u6837\u7684\u76ee\u6807\u4e3b\u673a\uff1a ", "note_en": "If you\u2019re a DevOps engineer or a web developer, there\u2019s a good chance that you\u2019re already familiar and using the SSH key authentication on a daily basis. Whether it\u2019s for logging into the remote server or when pushing your commit to the remote repository. It provides us with better security than the traditional password-based authentication.\n But, when is the last time you created or upgraded your SSH key? And did you use the latest recommended public-key algorithm? If it was more than five years ago and you generated your SSH key with the default options, you probably ended up using RSA algorithm with key-size less than 2048 bits long.\n  To check all available SSH keys on your computer, run the following command on your terminal:\n   \ud83d\udea8 DSA : It\u2019s unsafe and even no longer supported since OpenSSH version 7, you need to upgrade it!\n \u26a0\ufe0f RSA : It depends on key size. If it has 3072 or 4096-bit length, then you\u2019re good. Less than that, you probably want to upgrade it. The 1024-bit length is even considered unsafe.\n \ud83d\udc40 ECDSA : It depends on how well your machine can generate a random number that will be used to create a signature. There\u2019s also a  trustworthiness concern on the NIST curves that being used by ECDSA.\n  The Ed25519 was introduced on OpenSSH version 6.5. It\u2019s the EdDSA implementation using the  Twisted Edwards curve. It\u2019s using elliptic curve cryptography that offers a better security with faster performance compared to DSA or ECDSA.\n Today, the RSA is the most widely used public-key algorithm for SSH key. But compared to Ed25519, it\u2019s slower and even considered not safe if it\u2019s generated with the key smaller than 2048-bit length.\n The Ed25519 public-key is compact. It only contains 68 characters, compared to RSA 3072 that has 544 characters. Generating the key is also almost as fast as the signing process. It\u2019s also fast to perform batch signature verification with Ed25519. It\u2019s built to be collision resilence. Hash-function collision won\u2019t break the system.\n    You can have multiple SSH keys on your machine. So you can keep your old SSH keys and generate a new one that uses Ed25519. This way you can still log in to any of your remote servers. Then slowly replace the authorized key on your remote servers one by one with the newly generated Ed25519 public-key.\n Open up your terminal and type the following command to generate a new SSH key that uses Ed25519 algorithm:\n  You\u2019ll be asked to enter a passphrase for this key, use the strong one. You can also use the same passphrase like any of your old SSH keys.\n -o :  Save the private-key using the new OpenSSH format rather than the PEM format. Actually, this option is implied when you specify the key type as  ed25519.\n -a:  It\u2019s the numbers of KDF (Key Derivation Function) rounds. Higher numbers result in slower passphrase verification, increasing the resistance to brute-force password cracking should the private-key be stolen.\n  -f: Specify the filename of the generated key file. If you want it to be discovered automatically by the SSH agent, it must be stored in the default `.ssh` directory within your home directory.\n -C: An option to specify a comment. It\u2019s purely informational and can be anything. But it\u2019s usually filled with  &lt;login&gt;@&lt;hostname&gt; who generated the key.\n  You can find your newly generated private key at  ~/.ssh/id_ed25519 and your public key at  ~/.ssh/id_ed25519.pub. Always remember that your public key is the one that you copy to the target host for authentication.\n Before adding your new private key to the SSH agent, make sure that the SSH agent is running by executing the following command:\n  Then run the following command to add your newly generated Ed25519 key to SSH agent:\n  Or if you want to add all of the available keys under the default  .ssh directory, simply run:\n   If you\u2019re using macOS Sierra 10.12.2 or later, to load the keys automatically and store the passphrases in the Keychain, you need to configure your  ~/.ssh/config file:\n Host *  AddKeysToAgent yes  UseKeychain yes  IdentityFile ~/.ssh/id_ed25519  IdentityFile ~/.ssh/id_rsa # Keep any old key files if you want\n    The SSH protocol already allows the client to offer multiple keys on which the server will pick the one it needs for authentication. However, we can also specify a specific private-key to use like so:\n  Or you can even add an entry to the  ~/.ssh/config file to configure these options:\n  Once it\u2019s saved, later you can SSH to your target host like this:", "posttime": "2021-06-22 15:52:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5347\u7ea7,ssh", "title": "\u5c06SSH\u952e\u5347\u7ea7\u5230ED25519 ", "title_en": "Upgrade Your SSH Key to Ed25519", "transed": 1, "url": "https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54", "via": "", "real_tags": ["\u5347\u7ea7", "ssh"]}, {"category": "", "categoryclass": "", "imagename": "3ff3697ed3b5d5b152365dbb36b1e009.jpg", "infoid": 1067385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9a7e\u9a76\u8231\u4e0b\u65b9\u7684\u98de\u884c\u7532\u677f\u8239\u5458\u4f11\u606f\u94fa\u4f4d\u548c\u7535\u5b50\u8231\u7684\u793a\u8303\u3002 \u822a\u7a7a\u548cunauthor\u7684\u4efb\u4f55\u4eba\u90fd\u6ca1\u6709\u771f\u6b63\u7684\u79d8\u5bc6...... ", "note_en": "A demonstration of the flight deck crew rest bunk and the electronics compartment below the cockpit. It's no real secret for anybody in aviation and unauthor...", "posttime": "2021-06-22 15:52:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "a350,server,\u7532\u677f", "title": "\u5728\u7a7a\u4e2d\u5ba2\u8f66A350\u7684\u670d\u52a1\u5668\u5ba4\u4e4b\u65c5 ", "title_en": "Tour of the server room in the Airbus 350", "transed": 1, "url": "https://www.youtube.com/watch?v=241-5DZyons", "via": "", "real_tags": ["a350", "server", "\u7532\u677f"]}, {"category": "", "categoryclass": "", "imagename": "16c15186bc3a397338cf2a31b145c9af.png", "infoid": 1067384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u63cf\u8ff0\u7684\u89c6\u89c9\u8868\u73b0\u662f\u6211\u81ea\u5df1\u7684\u7814\u7a76\u548c\u5de5\u4f5c\u7684\u7ed3\u679c\uff0c\u4f46\u5e76\u4e0d\u5b8c\u5168\u6784\u6210\u65b0\u9896\u6027\u3002\u8fd9\u4e2a\u6570\u5b66\u56fe\u7684\u57fa\u7840\u6216\u57fa\u7840\u539f\u5219\u662f\u53e4\u4ee3\u5386\u53f21\u7684\u6570\u91cf\u77e9\u9635\uff0c\u53e4\u4ee3\u5386\u53f21\u540d\u79f0\u4e3a\u201c\u7f8a\u7f94\u201d\uff0c\u4e5f\u79f0\u4e3a\u5c3c\u53e4\u62c9\u65af\uff0c\u6bd5\u8fbe\u6208\u65af\u00b7\u5947\u57fa\uff0c\u67cf\u62c9\u56fe\u56db\u5341\u6b21\uff0c\u5170\u59c6\u5730\u533a\u7684\u5de8\u578b\u5c71\u8109\uff0c\u4f0f\u59c6\u65af\uff0c\u4ee5\u53ca\u9882\u6b4c\u9635\u5217\u3002 2\u5176\u4ed6\u540d\u79f0\u5305\u62ecMensa Pythagorica 3\u548c\u4e0a\u8ff0\u672f\u8bed\u7684\u7ec4\u5408\uff0c\u5982\u6bd5\u8fbe\u54e5\u5170\u8868\u3002\u4e0e\u7f94\u7f8a\u77e9\u9635\u627f\u62c5\u4e00\u5bf9\u4e00\u5173\u7cfb\u7684\u6574\u6570\u7cfb\u7edf\u662f\u7531\u884d\u751f\u7075\u6c28\u7075\u6c28\u9178\u65b9\u7a0b4\u4ea7\u751f\u7684Farey\u7cfb\u5217\u9f7f\u8f6e\u6bd4; 5\u548c\u8239\u5c3e\u5c0f\u9e21\u6811\u3002\u76f8\u5173\u6982\u5ff5\u5305\u62ec\u7531Ervin M.Wilson\u5728\u8be5\u8c10\u6ce2\u6bd4\u7684\u8fd9\u79cd\u7f51\u683c\u5185\u90e8\u6620\u5c04\u7684arvin M.Wilson\uff0c\u4ee5\u53ca\u6784\u6210\u539f\u59cb\u6982\u5ff5\u7684\u72ed\u7a84\u53d1\u5c55\u7684Partch-Meyer-Novaro Tonity\u94bb\u77f3\u7ed3\u6784\u3002\n  \u6211\u7684\u7248\u672c\u7684\u65b0\u9896\u6027\u662f\u901a\u8fc7\u4f7f\u7528\u56fe\u5f62\u7cfb\u7edf\u6570\u5b66\u5bb6\u79f0\u4e4b\u4e3a\u201c\u5bf9\u6570\u201d\u7684\u97f3\u4e50\u5b9e\u4f53\u7684\u51c6\u786e\u8868\u793a\uff0c\u5176\u4e2d\u6211\u79f0\u4e4b\u4e3a\u201cSonic\u201d\uff0c\u5176\u4e2d\u773c\u775b\u4ee5\u4e0e\u8033\u6735\u7684\u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u770b\u5230\u8272\u8c03\u7a7a\u95f4\u7684\u5206\u5e03\u4ed6\u4eec\u3002\n  \u5b8c\u6210\u7814\u7a76\u540e\uff0c\u5728\u4ecb\u7ecd\u6784\u5efa\u4f53\u7684\u4ecb\u7ecd\u540e\uff0c\u6211\u6765\u8c03\u7528\u201calmonicomb\u201d\uff08\u77ed\u6682\u7684\u8c10\u6ce2\u7ec4\u5408\u77e9\u9635\u201c\uff09\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u201d\u5bf9\u6570\u6bd5\u8fbe\u54e5\u5170\u7f94\u7f8a\u201c\uff0c\u6211\u5728\u4e00\u672c\u540d\u4e3a\u201d\u6559\u79d1\u4e66\u7684\u5bf9\u6570\u6bd5\u8fbe\u54e5\u5170\u7f94\u7f8a\u201c\u8c10\u6ce2\u201c\u540c\u4e00\u6982\u5ff5\u7684\u5448\u73b0\uff0c\u7814\u7a76\u4e86\u5bf9\u6570\u6d4b\u91cf\u7684\u7279\u6b8a\u5e94\u7528\uff0c\u5bf9\u6570\u503c\u6d4b\u91cf\u7684\u4e50\u89c2\u5170\u59c6\u7fa4\u77e9\u9635\u3002\u5b83\u7684\u4f5c\u8005\uff0cHans Kayser\uff0c\u5199\u9053\uff1a\n  \u00ab\u4e0e\u5148\u524d\u4f7f\u7528\u7684\u7b49\u8ddd\u5750\u6807\u7cfb\u76f8\u6bd4\uff0c\u6211\u4eec\u5728\u6b64\u5904\u4f7f\u7528\u5bf9\u6570\u7cfb\u7edf\uff0c\u5373\u5c06\u900f\u89c6\u4e2d\u5411\u4e2d\u5411\u5916\u900f\u660e\u5730\u9010\u6e10\u51cf\u5c11\u7684\u7cfb\u7edf\u3002\u6211\u4eec\u4f7f\u7528\u97f3\u8c03\u503c\u7684\u793a\u610f\u56fe\uff0c\u8fd9\u610f\u5473\u7740\u97f3\u8c03\uff0c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u770b\u8d77\u6765\u4ed6\u4eec\u7684\u58f0\u97f3\uff08\u4e0d\u662f\u6211\u4eec\u6d4b\u91cf\u6216\u8ba1\u7b97\u5b83\u4eec\u7684\u65b9\u5f0f\uff09\u3002\u00bb 7.\n  \u867d\u7136Kayser\u7684\u5de5\u4f5c\u5305\u542b\u4e86\u4e8c\u7ef4\u5bf9\u6570\u6784\u9020\u548c\u4e09\u7ef4\u7ebf\u6027\u7684\uff0c\u4f46\u4ed6\u4ece\u672a\u5c06\u5b83\u4eec\u52a0\u5165\u4e09\u7ef4\u5bf9\u6570\u77e9\u9635 - \u81f3\u5c11\u636e\u6211\u6240\u77e5\u3002\u4ed6\u4e5f\u4ece\u672a\u4ece\u8282\u594f\u6216\u8282\u594f\u7684\u65f6\u95f4\u89c6\u89d2\u770b\u7740\u4e0b\u964d\u7684\u4e92\u60e0\uff0c\u4ed6\u7684\u5de5\u4f5c\u4ecd\u7136\u9650\u4e8e\u97f3\u8c03\u7684\u97f3\u8c03\u9886\u57df\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u5c06\u8c10\u6ce2\u7814\u7a76\u5230\u6781\u7aef\uff0c\u5e76\u5728\u4e3b\u9898\u4e0a\u5199\u4e86\u4e00\u751f\u7684\u7ec8\u8eab\u4e66\u7c4d\u3002 8.\n  \u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u6211\u4e4b\u524d\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u72ec\u7acb\u53d1\u73b0\u4e86\u76f8\u540c\u7684\u4e00\u90e8\u5206\uff08\u4e0e\u8c10\u6ce2\u76f8\u5173\uff09\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5e76\u786e\u8ba4\u5e76\u52a0\u5f3a\u4e86\u6211\u81ea\u5df1\u7684\u5de5\u4f5c\u3002\u57fa\u4e8e\u8fd9\u4e00\u4e8b\u5b9e\u7684\u5de5\u4f5c\uff0c\u5373\u89c6\u89c9\u611f\u77e5\u662f\u6700\u5438\u6536\u7684\u7406\u89e3\u65b9\u6cd5\uff0c\u4e5f\u8bb8\u662f\u5b66\u4e60\u770b\u4e0d\u89c1\u7684\u552f\u4e00\u7684\u58f0\u97f3\u5173\u7cfb\u4e16\u754c\u7684\u6b63\u786e\u65b9\u6cd5\u3002\n  \u672c\u6587\u662f\u201c\u771f\u6b63\u7684\u97f3\u4e50\u771f\u6b63\u7684\u97f3\u4e50\uff1a3\u4e2aRD\u5343\u5e74\u97f3\u4e50\u5bb6\uff0c\u7cbe\u795e\u4e0a\u5bfb\u6c42\u8005\u548c\u81ea\u7531\u80fd\u6e90\u53d1\u73b0\u8005\u624b\u518c\u201d\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u91cc\u5448\u73b0\u7684\u4fe1\u606f\u867d\u7136\u4ee5\u975e\u5e38\u7b80\u5355\u548c\u975e\u5e38\u76f4\u89c2\u7684\u65b9\u5f0f\uff0c\u4f46\u5728\u539f\u59cb\u4e0a\u4e0b\u6587\u4e2d\u53d6\u51fa\u65e0\u8f9c\u97f3\u4e50\u7231\u597d\u8005\u7684\u4ef7\u503c\u53ef\u80fd\u5f88\u5c0f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u7ee7\u7eed\uff0c\u5047\u8bbe\u8bfb\u8005\u5728\u5b8c\u6574\u6027\u4e2d\u6709\u5173\u4e8e\u771f\u6b63\u7684\u8c10\u6ce2\u7cfb\u5217\u7684\u4e86\u89e3\uff1a\u5b83\u771f\u7684\u662f\u4ec0\u4e48\uff0c\u5b83\u53ef\u4ee5\u5728\u81ea\u7136\u754c\u4e2d\u627e\u5230\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u4e0d\u540c\u7684\u8c10\u6ce2\u9694\u79bb\uff0c\u5e76\u5728\u5141\u8bb8\u5b83\u7684\u4eea\u5668\u4e0a\u5f3a\u8c03\u4e0d\u540c\u7684\u8c10\u6ce2;\u6b64\u5916\uff0c\u8bfb\u8005\u5f88\u597d\u5730\u719f\u6089\u201c\u97f3\u4e50\u80cc\u540e\u7684\u6570\u5b66\u201d\u3002 \n\u53ea\u8981\u5728\u6b64\u5c06\u4f7f\u7528\u672f\u8bed\u201c\u8c10\u6ce2\u7cfb\u5217\u201d\uff0c\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u5426\u5219\u5b83\u6697\u793a\u4e86\u4e0a\u5347\u548c\u964d\u5e8f\u3002\u6bcf\u5f53\u4f7f\u7528\u672f\u8bed\u201c\u8c10\u6ce2\u201d\u65f6\uff0c\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u5426\u5219\u5b83\u6697\u793a\u4e86Supra-\u8c10\u6ce2\uff08\u6765\u81ea\u5347\u9ad8\u7684\u7cfb\u5217\uff09\u548c\u5b50\u8c10\u6ce2\uff08\u4ece\u4e0b\u964d\u9636\u5c42\u7684\u8c10\u6ce2\u6216\u8c10\u6ce2\uff09\uff0c\u9664\u975e\u53e6\u6709\u8bf4\u660e\u3002\u8fd9\u4e9b\u662f\u7b80\u5355\u7684\u97f3\u8c03\uff1a\u58f0\u97f3\u7684\u8868\u73b0\u4e3a\u6700\u7eaf\u7cb9\u7684\u5f62\u5f0f\uff0c\u5b8c\u5168\u968f\u7740\u5b83\u4eec\u5728\u590d\u6742\u7684\u97f3\u8c03\u5185\u51fa\u73b0\u7684\u5b8c\u5168\u51fa\u73b0\uff0c\u5e76\u4e14\u5728\u6574\u4e2a\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u662f\u4ee5\u7cbe\u786e\u7684\u6570\u503c\u5f62\u5f0f\u6697\u793a\u7684\u3002\u5b8c\u5168\u6392\u9664\u4f7f\u7528\u6c14\u8d28\u6216\u5176\u4ed6\u4eba\u5de5\u89c2\u548c\u8fd1\u4f3c\u3002\n  \u8fd9\u91cc\u63d0\u51fa\u7684\u6240\u6709\u6bd4\u7387\u90fd\u6307\u7684\u662f\u7b80\u5355\u7684\u58f0\u97f3\u97f3\u8c03\u3002\u7ed3\u679c\u8868\u660e\uff0c\u4ece\u8fd9\u4e9b\u7b80\u5355\u7684\u97f3\u8c03\u4ea7\u751f\u590d\u6742\u7684\u97f3\u8c03\uff0c\u5982\u8fdb\u4e00\u6b65\u5448\u73b0\u7684\u6982\u5ff5\u77e9\u9635\u6240\u793a\u3002\u901a\u8fc7\u6269\u5c55\uff0c\u8fd9\u4e9b\u8c10\u6ce2\u53ef\u7528\u4f5c\u5e94\u7528\u4e8e\u590d\u5408\u97f3\u8c03\u7684\u5b9e\u9645\u8c03\u8c10\u7cfb\u7edf\u7684\u6a21\u677f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ea\u662f\u4ed6\u4eec\u5728\u8ba1\u7b97\u4e2d\u8003\u8651\u7684\u6839\u672c\uff0c\u800c\u4ed6\u4eec\u5404\u81ea\u7684\u8c10\u6ce2\u7cfb\u5217\u88ab\u6697\u793a\u4e3a\u4e0e\u6574\u4f53\u57fa\u672c\uff08\u7406\u6027\uff0c\u6574\u6570\uff09\u6570\u5173\u7cfb\u76f8\u5173\u7684\u3002\n    \u97f3\u4e50\u754c\uff0c\u8c10\u6ce2\u7cfb\u5217\u662f\u5927\u81ea\u7136\u7684\u5355\u4e00\u5b8c\u7f8e\u8c03\u6574\u7cfb\u7edf\u548c\u8282\u594f\u6a21\u5f0f\u3002\u6839\u636e\u5168\u7403\u96c7\u7528\u7684\u5927\u591a\u6570\u6587\u5316\u8c03\u8282\u548c\u8282\u594f\u662f\u6839\u636e\u4efb\u610f\u793e\u4f1a\u7ed3\u6784\u5236\u5b9a\u7684\uff0c\u662f\u97f3\u4e50\u793e\u4f1a\u8c03\u7406\u7684\u4e3b\u89c2\u7ecf\u9a8c\u7684\u4e00\u90e8\u5206\u3002\u8bb8\u591a\u4eba\u57fa\u4e8e\u771f\u6b63\u7684\u8c10\u6ce2\u7cfb\u5217\uff0c\u5e76\u7528\u4e0d\u89c4\u5219\u7f3a\u5c11\u7684\u6210\u5458\u4ee3\u8868\u5b83\u7684\u9065\u8fdc\u7684\u5207\u7247\u3002\u5176\u4ed6\u4eba\u50cf\u6c14\u8d28\u4e00\u6837\u5b8c\u5168\u662f\u4eba\u4e3a\u7684\uff0c\u5c3d\u7ba1\u4efb\u4f55\u4e8b\u60c5\u90fd\u8bd5\u56fe\u8ba9\u5b83\u4eec\u770b\u8d77\u6765\u50cf\u81ea\u7136\u8c10\u6ce2\u7684\u6269\u5c55\u3002\u4e0d\u5305\u62ec\u76f8\u7b49\u548c\u4e0d\u5e73\u7b49\u7684\u901f\u5ea6\uff0c\u57fa\u4e8eRational Numbers\u7684\u4efb\u4f55\u5176\u4ed6\u53ef\u60f3\u5230\u7684\u8c03\u6574\uff08\u4ee5\u53ca\u5b83\u4eec\u7684\u7ea7\u5206\u5f62\u5f0f\u7684\u7ec4\u5408\uff09\u53ef\u4ee5\u8ffd\u6eaf\u5230\u8fd9\u91cc\u5448\u73b0\u7684\u77e9\u9635\u5185\u7684\u56fe\u6848\u3002\n  \u6570\u5b66\u4e0a\uff0c\u8c10\u6ce2\u7cfb\u5217\u662f\u5927\u81ea\u7136\u5173\u7cfb\u89c4\u5f8b\u7684\u516c\u5f0f\u3002\u8fd9\u4e9b\u6cd5\u5f8b\u5e76\u6ca1\u6709\u4ec5\u5728\u97f3\u4e50\u4e2d\u53cd\u6620\uff0c\u4f5c\u4e3aTimbre\uff0c\u8282\u594f\u548c\u97f3\u9ad8\u7684\u8c10\u6ce2\u7684\u6210\u56e0\uff0c\u4f5c\u4e3a\u8c10\u6ce2\u4e4b\u95f4\u7684\u58f0\u97f3\u8ddd\u79bb\uff0c\u97f3\u8c03\u4e4b\u95f4\u7684\u9891\u7387\u548c\u5c3a\u5bf8\u6bd4\u4f8b\u7684\u8eab\u4f53\u7684\u5c3a\u5bf8\uff0c\u800c\u4e14\u8fd8\u5728\u4f7f\u7528\u4e2d\u7684\u6240\u6709\u6570\u5b57\u548c\u6570\u5b57\u7cfb\u7edf\u4e2d\uff0c\u5982\u771f\u6b63\u7d20\u6570\u7684\u6a21\u5f0f\uff0c\u5efa\u7b51\u548c\u89c6\u89c9\u827a\u672f\u7684\u51e0\u4f55\u5f62\u72b6\u4e2d\u56fa\u6709\uff0c\u5728\u4e09\u89d2\u6838\u5fc3\uff0c\u5728\u5f69\u8679\u7684\u989c\u8272\uff0c\u4e00\u822c\u90fd\u5728\u6240\u6709\u827a\u672f\u548c\u79d1\u5b66\u4e2d\u3002\n    \u4e0a\u5347\u7684\u8c10\u6ce2\u7cfb\u5217\u5782\u76f4\u7ed8\u5236\u5728\u201c\u4f60\u770b\u5230\u7684\u662f\u4f60\u542c\u5230\u7684\u201d\u9891\u7387\u611f\u77e5\u7ebf\u4e0a\u7684\u201c\u4ec0\u4e48 - \u4f60\u770b\u5230\u7684\u201d\u9891\u7387\u611f\u77e5\u7ebf\u4e0a\uff0c\u4f20\u8fbe\u672c\u7cfb\u5217\u7684\u5206\u8fa8\u7387\u3002\u8fd9\u7b80\u5355\u610f\u5473\u7740\u6240\u6709\u6cdb\u97f3\u7ec4\u4ef6\u90fd\u9002\u5408\u5728\u6839\u672c\u5185\uff0c\u4e5f\u53ef\u4ee5\u5f7c\u6b64\u9002\u5408 - \u53ea\u8981\u76f8\u540c\u7684\u57fa\u672c\u4ecd\u7136\u662f\u4ed6\u4eec\u7684\u5171\u540c\u53c2\u8003\u3002\n    \u58f0\u97f3\u53f7\u7ebf\u63cf\u7ed8\u4e86\u6ca5\u9752\u7684\u5dee\u5f02\uff0c\u56e0\u4e3a\u5b83\u4eec\u88ab\u4eba\u8111\u88ab\u611f\u77e5\u548c\u89e3\u91ca\u3002\u8fd9\u4e9b\u6570\u5b57\u4ee3\u8868\u9891\u7387\u4e58\u6cd5\u5668\uff0c\u4e0e\u7edd\u5bf9\u57fa\u5e95\uff08\u7b2c\u4e8c\u4e2a\u6b21\u8c10\u6ce2\u00d72\u76f8\u5173\u7684\u9891\u7387\u500d\u589e\u5668\u6709\u5173\u7684\u9891\u7387\u9ad8\u4e8e\u57fa\u672c\u57fa\u5e951; Supra-Harmonic\u00d73\u58f0\u97f3\u9ad8\u4e8e1\uff0c\u7b49\u7b49\uff09\u3002\u632f\u8361\u4e32\u7684\u8f6e\u5ed3\u4ee3\u8868\u4e86\u6bcf\u4e2a\u8c10\u6ce2\u7684\u58f0\u97f3\u4ea7\u751f\u6e90\u7684\u5b9e\u9645\u7269\u7406\u5c3a\u5bf8\u3002\n  \u5782\u76f4\u5e03\u7f6e\u8fd8\u610f\u5473\u7740\u53ef\u4ee5\u540c\u65f6\uff08\u540c\u65f6\uff09\u540c\u65f6\u64ad\u653e\u4efb\u4f55\u6216\u6240\u6709\u7684Supra-\u8c10\u6ce2\uff0c\u6240\u4ee5\u7531\u8033\u6735\u88ab\u89c6\u4e3a\u548c\u8c10\u8f85\u97f3\u6240\u4ea7\u751f\u7684\u58f0\u97f3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8f85\u97f3\u548c\u8c10\u7684\u5b9a\u4e49\uff1a\u9891\u7387\u662f\u6574\u6570\u7684\u7b80\u5355\u97f3\u8c03\uff0c\u57fa\u672c\u7684\u500d\u6570\uff0c\u5e76\u4e0e\u57fa\u672c\u7684\u540c\u65f6\u4f7f\u7528\u3002 \n\u8fd9\u4e2a\u5b9a\u4e49obeys\u4e00\u4e2a\u89c4\u5219\uff1a\u5728\u4e00\u8d77\u64ad\u653e\u65f6\uff0c\u4efb\u4f55\u6570\u91cf\u7684\u6cdb\u97f3\u90fd\u662f\u548c\u8c10\u8f85\u97f3\uff0c\u53ea\u8981\u57fa\u672c\u7684\u6839\u672c\u4e5f\u542c\u8d77\u6765\u5f88\u54cd\u8d77\u3002\u5f53\u6839\u672c\u4e0d\u5b58\u5728\u65f6\uff0c\u6211\u4eec\u63d0\u5347\u8fdb\u4e00\u6b65\uff0c\u8d8a\u4f4e\u7684\u611f\u77e5\u548c\u8c10\u3002\u4f8b\u5982\uff0c\u58f0\u97f3\u540c\u4e0a\uff0c\u8c10\u6ce22\u548c3\u5c06\u6bd4\u542c\u8d77\u6765\u66f4\u52a0\u4ee4\u4eba\u6109\u60a6\uff0c\u800c\u4e0d\u662f\u542c\u8d77\u6765\u540c\u4e0a\u8c10\u6ce28\u548c9.\uff08\u4f46\u5982\u679c\u6211\u4eec\u5c06\u57fa\u672c1\u4ecb\u7ecd\u5230\u56fe\u7247\u4e2d\uff0c\u90a3\u4e488\u548c9\u5c06\u5b8c\u5168\u89e3\u51b3\u5b83\u7ed9\u4e86\u8f85\u97f3\u548c\u8c10\u7684\u611f\u89c9\u3002\uff09\n  \u8fd9\u4e9bSupra-\u8c10\u6ce2\u662f\u7b80\u5355\u7684\u97f3\u8c03\u3002\u64ad\u653e\u5b83\u4eec\u5728\u4e00\u8d77\u521b\u5efa\u4e00\u4e2a\u590d\u5408\uff08\u6216\u590d\u6742\u7684\uff09\u97f3\u8c03\uff0c\u4ee5\u53caMICBRE\u7684\u6df7\u5408\u8d26\u6237\u4e2d\u7684\u6bcf\u4e2a\u6cdb\u97f3\u7684\u7279\u5b9a\u97f3\u91cf\uff08\u5f3a\u5ea6\u6216\u529f\u7387\uff09\uff1a\u5f53\u4e24\u4e2a\u4eea\u5668\u64ad\u653e\u65f6\uff0c\u4f7f\u94a2\u7434\u58f0\u97f3\u4e0eSITAR\u4e0d\u540c\u7684\u94a2\u7434\u58f0\u97f3\uff08\u5316\u5408\u7269\uff09\u8272\u8c03\u5177\u6709\u76f8\u540c\u9891\u7387\u7684\u6839\u672c\u632f\u52a8\u3002\u8fd9\u4e5f\u5360\u4e86\u4e24\u4e2a\u4eba\u58f0\u660e\u7684\u5dee\u5f02\uff0c\u6302\u7ed9\u540c\u6837\u7684\u5143\u97f3\uff0c\u4ee5\u53ca\u540c\u4e00\u4e2a\u4eba\u541f\u5531\u7684\u4e0d\u540c\u5143\u97f3\u4e4b\u95f4\u7684\u5dee\u5f02 - \u6240\u6709\u6761\u4ef6\u90fd\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff1a\u5b83\u4eec\u7684\u57fa\u672c\u9762\u5177\u6709\u76f8\u540c\u7684\u9891\u7387\u3002\n   overtones\u4e5f\u53ef\u4ee5\u8fde\u7eed\u64ad\u653e\uff0c\u4f46\u8ba9\u6211\u4eec\u7559\u4e0b\u8fd9\u4e00\u8fb9\uff0c\u4ee5\u4fbf\u73b0\u5728\u575a\u6301\u57fa\u7840\u3002\n    \u4e0b\u884c\u8c10\u6ce2\u7cfb\u5217\u6c34\u5e73\u5730\u7ed8\u5236\u5728\u201c\u4ec0\u4e48 - \u4f60\u770b\u5230\u7684\u662f\u4f60\u542c\u5230\u7684\u201d\u9891\u7387\u611f\u77e5\u7ebf\u4e0a\u7684\u201c\u9891\u7387\u611f\u77e5\u201d\uff0c\u4ee5\u4f20\u8fbe\u6240\u6709\u5728\u6240\u6709\u4f2a\u9020\u7684\u7ec4\u4ef6\u5185\u5b8c\u5168\u9002\u5408\u7684\u4e8b\u5b9e\uff08\u53cd\u8fc7\u6765\u4e0d' T\u59cb\u7ec8\u76f8\u4e92\u914d\u5408\uff09\u3002\n    \u58f0\u97f3\u53f7\u7ebf\u63cf\u7ed8\u4e86\u6ca5\u9752\u7684\u5dee\u5f02\uff0c\u56e0\u4e3a\u5b83\u4eec\u88ab\u4eba\u8111\u88ab\u611f\u77e5\u548c\u89e3\u91ca\u3002\u8fd9\u4e9b\u6570\u5b57\u4ee3\u8868\u5206\u9891\u5668\uff0c\u4e0e\u7edd\u5bf9\u57fa\u7840\uff08\u7b2c\u4e8c\u6b21\u8c10\u6ce2\u00f72\u6709\u5173\u7684\u9891\u7387\u4f4e\u4e8e\u57fa\u672c1\u7684\u9891\u7387;\u526f\u8c10\u6ce2\u00f73\u58f0\u97f3\u6bd41\u66f4\u6df1\u76843\u500d\uff0c\u7b49\u7b49\uff09\u3002\u632f\u8361\u4e32\u7684\u8f6e\u5ed3\u4ee3\u8868\u4e86\u6bcf\u4e2a\u8c10\u6ce2\u7684\u58f0\u97f3\u4ea7\u751f\u6e90\u7684\u5b9e\u9645\u7269\u7406\u5c3a\u5bf8\u3002\u8fd9\u4e9b\u5e45\u5ea6\uff08\u529f\u7387\uff0c\u4f53\u79ef\uff09\u672a\u6b63\u786e\u63cf\u8ff0\u3002\n  \u6c34\u5e73\u5e03\u7f6e\u4e5f\u610f\u5473\u7740\u53ef\u4ee5\u8fde\u7eed\u5730\u64ad\u653e\u4efb\u4f55\u6216\u6240\u6709\u5b50\u8c10\u6ce2\uff08\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\uff09\uff0c\u6240\u5f97\u5230\u7684\u65cb\u5f8b\u88ab\u79f0\u4e3a\u97f3\u4e50\u6709\u6548\u7684\u542c\u89c9\u611f\u77e5\u3002\u7136\u800c\uff0c\u5982\u679c\u540c\u65f6\u64ad\u653e\u4e24\u79cd\u4ee5\u4e0a\uff0c\u5219\u5f97\u5230\u7684\u590d\u5408\u58f0\u97f3\u5c06\u88ab\u89c6\u4e3a\u548c\u8c10\u5206\u6563\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u5f02\u89e3\u548c\u548c\u8c10\u7684\u5b9a\u4e49\uff1a\u9891\u7387\u662f\u57fa\u672c\u57fa\u672c\u7684\u6574\u6570\u5b50\u500d\u6570\u7684\u7b80\u5355\u97f3\u8c03\uff0c\u5e76\u4e0e\u57fa\u672c\u540c\u65f6\u4f7f\u7528\u3002\n  \u4f5c\u4e3a\u4fa7\u9762\u8bf4\u660e\uff0c\u901a\u8fc7\u540c\u65f6\u53d1\u51fa\u4e0d\u4e0e\u81ea\u5df1\u66f2\u8c03\u7684\u590d\u6742\u97f3\u8c03\u7684\u540c\u65f6\u53d1\u51fa\u54cd\u5e94\u800c\u4ea7\u751f\u7684\u975e\u8c10\u6ce2\u89e3\u6563\u6216\u5931\u8c03\u3002\u8fd9\u53ea\u662f\u610f\u5473\u7740\u4efb\u4f55\u6570\u91cf\u7684\u590d\u6742\u97f3\u8c03\uff0c\u5176\u57fa\u672c\u9891\u7387\u4e0d\u4f1a\u5448\u73b0\u76f4\u63a5\u4ece\u81ea\u5df1\u7684\u8c10\u6ce2\u7cfb\u5217\u91c7\u53d6\u7684\u5173\u7cfb\uff0c\u5f53\u4e00\u8d77\u64ad\u653e\u65f6\u4f1a\u542c\u8d77\u6765\u3002\u8fd9\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u57fa\u672c\u9762\u548c\u5b8c\u6574\u7684\u8c10\u6ce2\u7cfb\u5217\u5c06\u7ed3\u5408\u6210\u975e\u91cd\u590d\u6a21\u5f0f\uff1a\u975e\u8c10\u6ce2\u8fd0\u52a8\u5728\u5b8c\u5168\u540c\u65f6\u91cd\u590d\u76f8\u540c\u7684\u5468\u671f\u3002\u5728\u7269\u7406\u4e0a\uff0c\u8fd9\u8f6c\u5316\u4e3a\u632f\u8361\u5f26\u7684\u8f6e\u5ed3\uff0c\u5176\u4e0d\u5b8c\u5168\u5f7c\u6b64\u5408\u9002\u3002 \n\u6700\u7b80\u5355\u7684\u9891\u7387\u5173\u7cfb\uff08\u6bd4\u7387\uff09\u5360\u6700\u7eaf\u7cb9\u7684\u4e00\u81f4\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u975e\u5e38\u5927\u7684\u6570\u91cf\u7684\u8c10\u6ce2\u5173\u7cfb\u503e\u5411\u4e8e\u547c\u58f0\u4e0d\u548c\u8c10\u7684\u5dde\u8f83\u9ad8\uff0c\u800c\u4f3c\u4e4e\u6ca1\u6709\u53ef\u62c6\u5378\u7684\uff0c\u4f3c\u4e4e\u5c1a\u672a\u89e3\u6790\u7684\u548c\u7b2c\u56db\u6b21\u5206\u6563\u7531\u5177\u6709\u975e\u91cd\u590d\u548c\u6c38\u4e0d\u7ed3\u675f\u7684\u5c0f\u6570\uff08\u975e\u7406\u6027\u6570\uff09\u4ea7\u751f\u7684\u3002\u5f53\u7136\u5b58\u5728\u53ef\u7591\u7684\u4e0d\u5e94\u5206\u6563\u7a0b\u5ea6\uff0c\u4f46\u6700\u660e\u663e\u7684\u4e8b\u5b9e\u662f\u5927\u8111\u53ef\u4ee5\u5f88\u597d\u5730\u63a5\u53d7\u751a\u81f3\u4eab\u53d7\u8fd9\u4e9b\u89e3\u6563\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u5b83\u66fe\u7ecf\u7ecf\u5386\u8fc7\u7684\u552f\u4e00\u97f3\u4e50\u7684\u4e00\u90e8\u5206\u3002\n  \u4f7f\u7528unltones\u53ef\u4ee5\u6269\u5c55\u5230\u540c\u65f6\u64ad\u653e\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u653e\u5927\u5668\u8c08\u8bdd\u7684\u4e00\u90e8\u5206\uff0c\u5373\u6269\u5927\u7684\u97f3\u4e50\u53ef\u80fd\u6027\uff0c\u76ee\u524d\u4e0d\u4e3a\u6211\u4eec\u94fa\u8bbe\u57fa\u7840\u3002\n    \u6240\u5b9a\u4e49\u7684\u97f3\u4e50\u7684\u5782\u76f4\u548c\u6c34\u5e73\u97f3\u8c03\uff08\u901a\u8fc7\u540c\u65f6\u548c\u8fde\u7eed\u53d1\u51fa\u97f3\u8c03\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u540c\u4e00\u57fa\u7840\u4e0a\u6269\u5c55\u4e24\u4e2a\u5012\u6570\u8c10\u6ce2\u7cfb\u5217\u3002\n    \u5c3d\u7ba1\u73b0\u5b9e\u4e2d\u5ef6\u4f38\u5f97\u591a\uff0c\u4f46\u5728\u6982\u5ff5\u4e0a\u5ef6\u4f38\u5230\u65e0\u9650\u60c5\u51b5\uff0c\u4f46\u5728\u8fd9\u91cc\u53ea\u63cf\u7ed8\u4e86\u524d5\u4e2a\u8c10\u6ce2\uff0c\u4ee5\u4fbf\u6e05\u695a\u8d77\u89c1\u3002\u76f8\u5173\u989c\u8272\u662f\u4efb\u610f\u7684\u3002\n  \u4ece\u57fa\u672c\u4e0a\u6807\u8bb0\u4e3a1\u7684\u56fe\u7247\u53ef\u4ee5\u770b\u51fa\uff0c\u4ece\u5e95\u90e8\u5411\u4e0b\u5782\u76f4\u9010\u6e10\u5347\u9ad8\u5e76\u4e14\u5782\u76f4\u5347\u9ad8\uff0c\u5e76\u4e14\u968f\u7740\u97f3\u8c03\u589e\u52a0\uff0c\u8fd9\u4e9b\u95f4\u9694\u53d8\u5c0f\u548c\u66f4\u5c0f\u7684\u95f4\u9694\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u590d\u5408\u97f3\u7684\u6982\u5ff5\u8868\u793a\uff0c\u5b83\u540c\u65f6\u53d1\u51fa\u57fa\u672c\u548c\u6240\u6709\u5782\u76f4\u8c10\u6ce2\uff08\u5982\u679c\u60a8\u613f\u610f\uff0c\u5219\u5728\u548c\u5f26\u4e2d\uff09\u3002\u5728\u6b64\u56fe\u8868\u4e0a\u672a\u793a\u51fa\u4f53\u79ef\u6216\u5f3a\u5ea6\u3002\n  \u8c10\u6ce2\u7684\u6388\u6743\u7cfb\u5217\u663e\u793a\u4e86\u7cbe\u786e\u7684\u76f8\u53cd\u548c\u5bf9\u79f0\u7684\u7ed3\u6784\u3002\u968f\u7740\u7cfb\u5217\u7684\u8ddd\u79bb\u51cf\u5c0f\uff0c\u6c34\u5e73\u4ece\u53f3\u5230\u5de6\u8fdb\u5c55\uff0c\u95f4\u9694\u53d8\u5c0f\u548c\u66f4\u5c0f\u3002\u5dee\u5f02\u662f\uff0c\u8be5\u7cfb\u5217\u4e0d\u4ee3\u8868\u590d\u5408\u8272\u8c03\u7684\u7ed3\u6784\uff0c\u800c\u662f\u901a\u8fc7\u8fd9\u79cd\u8272\u8c03\u65cb\u5f8b\u65cb\u5f8b\u7684\u6b65\u9aa4\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6709\u81ea\u5df1\u7684\u4e00\u7cfb\u5217\u6cdb\u6ee5\u3002\n  \u90a3\u4e48\u8fd9\u5b9e\u9645\u4e0a\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u8fd9\u610f\u5473\u7740\u9891\u7387\u4f1a\u589e\u957f\u6216\u51cf\u5c0f\uff08\u5448\u6307\u6570\u4e0a\uff09\uff0c\u5c06\u5176\u4e58\u4ee5\u6216\u5c06\u5176\u503c\u4e58\u4ee5\u64cd\u4f5c\u5458\uff08\u00d7\u6216\u00f7\u7b26\u53f7\uff09\uff0c\u5e76\u4e14\u59cb\u7ec8\u4e0e\u7cfb\u5217\u7684\u57fa\u7840\u76f8\u5173\u3002\u8bf4\u8fd9\u4e2a\u6839\u672c1\u88ab\u5206\u914d\u7ed9\u6bcf\u5355\u4f4d\u65f6\u95f4300\u4e2a\u4e8b\u4ef6\u7684\u9891\u7387;\u8fd9\u5c06\u4f7f\u00d72\u6cdb\u97f3\u632f\u52a8600\u6b21\uff0c\u00d73\u6cdb\u97f3900\u6b21\uff0c\u800c\u25b32\u7684\u9891\u7387\u4e3a\u6bcf\u5355\u4f4d\u65f6\u95f4\u4e3a150\u4e2a\u4e8b\u4ef6\uff0c\u90a3\u4e48\u00f73\u4f2a\u88c5100\uff0c\u7b49\u7b49\u3002 \n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\uff0c\u5bf9\u4e8e\u5916\u8fb9\u7f18\u7684\u503c\uff0c\u5373\u4f7f\u6211\u4eec\u5199\u5165\u201c\u00d75\u201d\uff0c\u201c\u00f73\u201d\u7b49\uff0c\u9690\u542b\u7684\u89e3\u91ca\u4e3a\u201c1\u00d75\u201d\uff0c\u201c1\u00f73\u201d\u7b49\u3002\n    \u6bcf\u4e2a\u4eba\u90fd\u5c06\u62e5\u6709\u81ea\u5df1\u7684\u4e00\u7cfb\u5217\u7e41\u591a\uff0c\u7ed3\u6784\u4e0e\u57fa\u672c\u7684\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u5728\u9891\u7387\u65b9\u9762\u5b8c\u5168\u8f6c\u79fb\u3002\u4f5c\u4e3a\u5b9e\u65bd\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u4f2a\u88c5\uff0c\u8c03\u6574\u5230\u8be5\u9891\u7387\u7684\u590d\u5408\u97f3\u8d28\u5c06\u5177\u6709\u5176\u81ea\u5df1\u7684\u504f\u79fb\u7cfb\u5217\u7684\u6cdb\u97f3\uff0c\u5982\u4e0b\u6240\u793a\u3002\n    \u8be5\u513f\u7ae5\u7cfb\u5217\u7684\u6bcf\u4e2a\u65b0\u6210\u5458\u7684\u6570\u503c\u7531\u8be5\u7cfb\u5217\u7684\u57fa\u7840\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u7ed9\u51fa\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u7b2c\u4e8c\u4e2a\u4f2a\u751f\u548c\u539f\u59cb\u6cdb\u97f3\u7cfb\u5217\u3002\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u65b0\u523b\u5ea6\u5b9e\u9645\u4e0a\u90fd\u662f\u7531\u5e73\u884c\u6269\u5c55\u548c\u6295\u5f71\u7684\u8ddf\u8e2a\u4ea7\u751f\u7684\u4ea4\u53c9\u70b9\u3002\u6bcf\u4e2a\u65b0\u503c\u90fd\u5c06\u5305\u542b\u4e0e\u5176\u5404\u81ea\u7684\u8fd0\u7b97\u7b26\u5171\u540c\u521b\u5efa\u5b83\u7684\u6570\u5b57\u3002\n  \u4f8b\u5982\uff0c\u7b2c\u4e8c\u4e2a\u6cdb\u5b54\u00d72\u7684\u7b2c\u4e8c\u4ef6\u00f72\uff0c\u5728\u5b83\u4eec\u76f8\u4ea4\u7684\u786e\u5207\u70b9\u5904\u662f\u03c72\u548c\u00d72\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u7684\u7ed3\u679c\uff0c\u8fd9\u662f\u00f72\u00d72\uff08\u5176\u9690\u542b\u89e3\u91ca\u4e3a1\u2030\uff09 2\u00d72\uff09\u3002\u8fd9\u79cd\u7b80\u5355\u7684\u6570\u5b66\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4e0e\u6574\u4e2a\u513f\u7ae5\u7cfb\u5217\u7684\u00f72\u76f8\u540c\uff0c\u5c06\u5176\u503c\u4e58\u4ee5\u5347\u7ea7\u7cfb\u5217\u8c10\u6ce2\uff0c\u4e00\u4e2a\u63a5\u4e00\u4e2a\u3002\n    \u56e0\u6b64\uff0c\u5177\u6709\u57fa\u672c\u7684\uff08\u6216\u8c03\u8c10\u5230\uff09\u7684\u590d\u6742\u7684\u57fa\u8c03\u7b2c\u4e8c\u526f\u672c\u5c06\u8868\u73b0\u51fa\u81ea\u5df1\u7684\u5b8c\u6574\u7ed3\u6784\u7684overtones\uff0c\u5176\u4e2d\u5728\u8fd9\u91cc\u63cf\u7ed8\u4e86\u524d\u4e94\u4e2a\u3002\n  \u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5982\u6b64\uff0c\u5e76\u8868\u793a\u6839\u636e\u526f\u8c10\u6ce2\u6a21\u578b\u8c03\u6574\u7684\u6bcf\u4e2a\u5176\u4ed6\u590d\u5408\u97f3\u7684\u81ea\u7136\u8c10\u6ce2\u6cdb\u97f3\u3002\n    \u56e0\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u63cf\u7ed8\u4e86\u4e94\u79cd\u4e0d\u540c\u7684\u590d\u6742\u97f3\u8c03\uff0c\u5747\u5728\u81ea\u7136\u4e0b\u884c\u8c10\u6ce2\u7cfb\u5217\u7684\u57fa\u7840\u4e0a\u6709\u6240\u76f8\u5173\uff0c\u6bcf\u4e2a\u90fd\u5177\u6709\u81ea\u5df1\u7684\u4e00\u7cfb\u5217\u4e0a\u5347\u8c10\u6ce2\u3002 \n\u5b83\u4eec\u5728\u540c\u4e00\u56fe\u5f62\u4e0a\u663e\u793a\u7684\u4e8b\u5b9e\u540c\u65f6\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u4e00\u8d77\u64ad\u653e\uff08\u540c\u65f6\uff09\u3002\u76f8\u53cd\uff0c\u901a\u8fc7\u666e\u904d\u7684\u58f0\u5b66\u6cd5\u5f8b\uff0c\u8fd9\u4e9b\u8272\u8c03\u5e94\u8be5\u63a5\u4e00\u4e2a\u5730\uff08\u8fde\u7eed\uff09\u64ad\u653e\u3002\u5b83\u4eec\u5c06\u8fdb\u884c\u64ad\u653e\u7684\u987a\u5e8f\uff0c\u901a\u8fc7\u65f6\u95f4\uff0c\u5176\u5f3a\u5ea6\u548c\u6700\u91cd\u8981\u7684\uff0c\u6bcf\u4e2a\u590d\u5408\u97f3\u7684\u6ea2\u51fa\u91cf\u90fd\u4f1a\u53d1\u51fa\u58f0\u97f3\u4ee5\u53ca\u8fd9\u4e9b\u7684\u5f3a\u5ea6\uff0c\u6401\u57283 rd\u5343\u79a7\u97f3\u4e50\u5bb6\u624b\u4e2d\u3002\n    \u6bcf\u4e00\u4e2a\u6cdb\u97f3\u90fd\u4f1a\u663e\u793a\u6709\u81ea\u5df1\u7cfb\u5217\u7684\u5e95\u5c42\u7684\u53ef\u80fd\u6027\uff0c\u7ed3\u6784\u4e2d\u7684\u7ed3\u6784\u4e0e\u57fa\u672c\u7684\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u5728\u9891\u7387\u4e2d\u5b8c\u5168\u8f6c\u79fb\u3002\u4f5c\u4e3a\u7b2c\u4e00\u793a\u4f8b\uff0c\u4e0b\u9762\u63cf\u7ed8\u4e86\u590d\u5408\u97f3\uff08\u5177\u6709\u57fa\u672c1\uff09\u7684\u590d\u5408\u97f3\uff08\u5177\u6709\u57fa\u672c1\uff09\u7684\u7b2c\u4e8c\u6cdb\u97f3\uff0c\u5982\u4e0b\u6240\u793a\u3002\n    \u8be5\u513f\u7ae5\u7cfb\u5217\u7684\u6bcf\u4e2a\u65b0\u6210\u5458\u7684\u6570\u503c\u7531\u8be5\u7cfb\u5217\u57fa\u7840\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u7ed9\u51fa\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u7b2c\u4e8c\u4e2a\u6cdb\u97f3\u548c\u539f\u59cb\u6388\u6743\u7cfb\u5217\u3002\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u65b0\u523b\u5ea6\u5b9e\u9645\u4e0a\u90fd\u662f\u7531\u5e73\u884c\u6269\u5c55\u548c\u6295\u5f71\u7684\u8ddf\u8e2a\u4ea7\u751f\u7684\u4ea4\u53c9\u70b9\u3002\u6bcf\u4e2a\u65b0\u503c\u90fd\u5c06\u5305\u542b\u4e0e\u5176\u5404\u81ea\u7684\u8fd0\u7b97\u7b26\u5171\u540c\u521b\u5efa\u5b83\u7684\u6570\u5b57\u3002\n  \u4f8b\u5982\uff0c\u7b2c\u4e8c\u6cdb\u5b54\u00d72\u7684\u7b2c\u4e8c\u4e2a\u4f2aundert 2\uff0c\u5728\u5b83\u4eec\u76f8\u4ea4\u7684\u786e\u5207\u70b9\u5904\u662f\u00d72\u548c\u03c72\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u7684\u7ed3\u679c\uff0c\u5373\u00d72\u00f72\uff08\u6697\u793a\u89e3\u91ca\u4e3a1\u00d7 2\u00bc2\uff09\u3002\u8fd9\u79cd\u7b80\u5355\u7684\u6570\u5b66\u4ee5\u4e0e\u6574\u4e2a\u513f\u7ae5\u7cfb\u5217\u7684\u00d72\u76f8\u540c\u7684\u65b9\u5f0f\u7ee7\u7eed\uff0c\u5c06\u5176\u503c\u9664\u4ee5\u8c10\u6ce2\u7684\u4e0b\u964d\u7cfb\u5217\uff0c\u4e00\u4e2a\u9010\u4e2a\u3002\n    \u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u6cdb\u97f3\uff0c\u5373\u53e6\u4e00\u79cd\u590d\u6742\u7684\u57fa\u8c03\u7684\u4e00\u90e8\u5206\uff0c\u5c06\u5c55\u793a\u5176\u81ea\u8eab\u7684\u5e95\u90e8\u7ed3\u6784\u7ed3\u6784\uff0c\u5176\u4e2d\u4ec5\u5728\u8fd9\u91cc\u63cf\u7ed8\u4e86\u524d\u4e94\u4e2a\u3002\n  \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7ee7\u7eed\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee3\u8868\u6240\u6709\u5176\u4ed6\u5173\u4e8e\u4e3b\u8981\u590d\u5408\u97f3\u8c03\u7684\u8c10\u6ce2\u7684\u81ea\u7136\u8c10\u6ce2\u672f\u8bed\u3002\n    \u56e0\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u63cf\u7ed8\u4e86\u4e94\u79cd\u4e0d\u540c\u7684\u590d\u5408\u97f3\uff08\u5305\u62ec\u57fa\u7840\uff09\u7684\u4e0d\u540c\u8c10\u6ce2\u6cdb\u97f3\uff0c\u6bcf\u4e2a\u8c10\u6ce2\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u7cfb\u5217\u4e0b\u964d\u8c10\u6ce2\u3002 \n\u5982\u679c\u4e24\u4e2a\u6784\u9020\u91cd\u53e0\uff0c\u5219\u6240\u6709\u4ea4\u53c9\u70b9\u90fd\u91cd\u53e0\uff0c\u5b83\u4eec\u7684\u503c\u5bf9\u5e94\u3002\u4ed6\u4eec\u5f7c\u6b64\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c;\u5b83\u4eec\u7684\u503c\u91cd\u5408\uff0c\u56e0\u4e3a - \u4f8b\u5982\uff1a\uff081\uff09\u00f72\u00d73 =\uff081\uff09\u00d73\u00f72\u3002\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u7ed9\u51fa\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4ee5\u4e24\u79cd\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5230\u8fbe\u3002\u6bcf\u4e2a\u97f3\u4e50\u5b9e\u4f53\u7684\u8fd9\u79cd\u53cc\u91cd\u751f\u6210\u5c06\u5728\u540e\u9762\u8fdb\u4e00\u6b65\u8ba8\u8bba\u3002\n      \u5bf9\u4e8eHasmonicomb\u77e9\u9635\u5185\u7684\u503c\uff08\u7531\u5916\u8fb9\u7f18\u7684\u76f8\u4e92\u4f5c\u7528\u4ea7\u751f\uff09\uff0c\u5373\u4f7f\u6211\u4eec\u5199\u201c\u00f72\u00d73\u201d\uff0c\u201c\u00d73\u00f72\u201d\u7b49\uff0c\u9690\u542b\u7684\u89e3\u91ca\u662f\u201c1\u00f72\u00d7 3\u201c\uff0c\u201d1\u00d73\u00f72\u201c\u7b49\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e24\u4e2a\u8868\u8fbe\u5f0f\u76f8\u7b49\uff0c\u53ef\u4ee5\u4ee5\u7b80\u5355\u7684\u5f62\u5f0f\u5199\u5165\u4e00\u4e2a\u5206\u6570\uff1a\n  1\u00f72\u00d73 = 1\u00d73\u00bc2= 2  -  3\n    1\u00f7b\u00d7c = 1\u00d7c\u00f7b = b  -  c\n  \u6bd4\u7387\u662f\u4ee3\u8868\u97f3\u4e50\u5b9e\u4f53\uff08\u58f0\u97f3\u8ddd\u79bb\uff09\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u79cd\u4e50\u6807\u5199\u5165\u4e24\u4e2a\u6574\u6570\uff08Rational\uff09\u6570\u5b57\u7684\u4e00\u90e8\u5206\uff0c\u5177\u6709\u81f3\u5c11\u4e94\u79cd\u4e0d\u540c\u548c\u975e\u72ec\u5bb6\u6db5\u4e49\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u5206\u6570\u90fd\u53ef\u4ee5\u4ee5\u4e94\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u89e3\u91ca\uff0c\u8fd9\u4e9b\u89e3\u91ca\u4e0d\u4f1a\u4e92\u76f8\u62b5\u6d88\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6db5\u76d6\u4e86\u5176\u4e2d\u4e00\u4e2a\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u5b8c\u6210\u3002\n    \u5728\u4e0b\u4e00\u7ae0\u4e2d\u5c06\u8ba8\u8bba\u539f\u59cb\u8c10\u6ce2\u7cfb\u5217\uff08\u5728\u53f3\u4fa7\u548c\u5e95\u90e8\u5916\u8fb9\u7f18\uff09\u4e0a\u65b9\u548c\u4e0b\u65b9\u7684\u53f3\u4e0b\u548c\u5e95\u90e8\u5916\u8fb9\u7f18\uff09\u7684\u7279\u6b8a\u60c5\u51b5\u3002\n  \u6ce8\u610f\u5982\u4f55\u6c34\u5e73\uff0c\u5206\u6570\u68d2\uff08\u5206\u5b50\uff09\u4e0a\u65b9\u7684\u6240\u6709\u6570\u5b57\u90fd\u662f\u76f8\u540c\u7684 - \u8fd9\u4e9b\u90fd\u662f\u5148\u524d\u6807\u6709\u201c\u00d7\u201d\u7684\u4e0a\u5347\u8c10\u6ce2;\u5782\u76f4\u5730\uff0c\u5206\u6570\u6761\uff08\u5206\u6bcd\uff09\u4ee5\u4e0b\u7684\u6240\u6709\u6570\u5b57\u5177\u6709\u76f8\u540c\u7684\u503c - \u8fd9\u4e9b\u662f\u5148\u524d\u6807\u6709\u201c\u00f7\u201d\u7684\u4e0b\u884c\u8c10\u6ce2\u3002\u56e0\u6b64\uff0c\u5982\u679c\u907f\u5f00\u4e86\u8fd9\u79cd\u80cc\u666f\uff0c\u53ea\u9700\u901a\u8fc7\u67e5\u770b\u6bd4\u7387\uff08\u6216\u6bd4\u7387\u96c6\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5224\u65ad\u5b83\u4eec\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u5c5e\u4e8e\u56fe\u5f62\u7684\u4f4d\u7f6e\u3002 \n\u4e0b\u9762\u63cf\u7ed8\u7684\u662f1024\u6b21\u8c10\u6ce2\u7684\u8c10\u6ce2\u77e9\u9635\uff0c\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5ef6\u4f38\u5e76\u5f7c\u6b64\u76f8\u4e92\u4f5c\u7528\u3002\u5728\u5b8c\u6574\u6027\uff0c\u5b83\u5f88\u5c11\u4f7f\u7528\u97f3\u4e50 - \u7279\u522b\u662f\u56e0\u4e3a\u5b83\u7684\u8bb8\u591a\u7403\u573a\u843d\u5728\u4eba\u7c7b\u542c\u529b\u8303\u56f4\u4e4b\u5916\u3002\u4f46\u5b83\u7684\u4efb\u4f55\u90e8\u5206\u90fd\u53ef\u4ee5\u51c6\u786e\u5730\u4ee3\u8868\u4e0d\u540c\u7684\u8c03\u8c10\u7cfb\u7edf\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u7ae0\u8282\u4e2d\u770b\u5230\u3002\n    \u8be5\u56fe\u4e0a\u7684\u6bcf\u4e2a\u4ea4\u53c9\u70b9\u90fd\u662f\u8868\u793a\u7b80\u5355\u97f3\u8c03\u7684\u9891\u7387\u7684\u6bd4\u7387\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u4ece\u4e0b\u964d\u9636\u5c42\u9009\u62e9\u8c03\u8c10\uff08\u62bd\u8c61\u7684\u58f0\u97f3\uff09\u548c\u901a\u8fc7\u6784\u9020\u6b64\u8c03\u8c10\u7684\u590d\u5408\u8272\u8c03\u6765\u5236\u9020\u97f3\u4e50\u5347\u5e8f\u7cfb\u5217\u3002\u58f0\u97f3\u590d\u5408\u97f3\u662f\u5f26\u7684\u5b9a\u4e49\u3002\n  \u7136\u800c\uff0c\u5982\u679c\u6bcf\u79cd\u6bd4\u4f8b\u4ee3\u8868\u590d\u5408\u97f3\u7684\u57fa\u7840\uff0c\u5219\u8fc4\u4eca\u63cf\u8ff0\u7684\u539f\u5219\u4ecd\u7136\u9002\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u5c06\u7b2c\u4e09\u7ef4\u5ea6\u6dfb\u52a0\u5230Harmonicomb\u4e2d\uff0c\u4ee5\u4fbf\u6b63\u786e\u63cf\u8ff0\u3002\u4f7f\u7528\u6b64\u7cfb\u7edf\u7684\u4efb\u4f55\u97f3\u4e50\u5c06\u662f\u548c\u8c10\u7684\uff0c\u5982lon\n...... ", "note_en": "The visual representation described in this paper is the result of my own research and work, but does not constitute a novelty in its entirety. The basis, or underlying principle of this mathematical graph is a matrix of numbers with ancient history  1 called \u201cLambdoma\u201d, also known as the Lambdoid by Nicomachus, the Pythagorean ChiX, the Tetraktys by Plato, the Lambdoma Table by von Thimus, and the Cantor array.  2 Other names include Mensa Pythagorica  3 and combinations of the above terms, like Pythagorean Table. Whole-number systems that bear a one-to-one relationship with the Lambdoma matrix are the Farey series of gear ratios generated by a Diophantine equation  4 ;  5 and the Stern\u2013Brocot tree. Related concepts include the Archetypal Splay\u2013Tree or Co\u2013Prime Pattern  6 mapped by Ervin M. Wilson inside this grid of harmonic ratios, and the Partch\u2013Meyer\u2013Novaro tonality diamond structures which constitute a confined development of the original concept.\n  The novelty of my version consists in the accurate representation of musical entities, by using a graphical system mathematicians call \u201clogarithmic\u201d, which I call \u201csonic\u201d, where the eye sees the distribution of tone-spaces in the same way as the ear hears them.\n  After finishing research, while working on the presentation of the construct I came to call \u201cHarmoniComb\u201d (short for \u201cMatrix of Harmonic Combinations\u201d), which could also be called \u201cLogarithmic Pythagorean Lambdoma\u201d, I found in a book called \u201cTextbook of Harmonics\u201d a presentation of the same concept, studied as a peculiar application of logarithmic measurement to the linear Lambdoma matrix of musical ratios. Its author, Hans Kayser, writes:\n  \u00abIn contrast with the equidistant coordinate system used previously, we use a logarithmic system here, i.e. one that diminishes perspectively in its ratios from the middle outwards. We use a diagrammatic inventory of the tone-values, meaning that the tones, in a certain sense, look the way they sound (not the way we measure or count them).\u00bb  7\n  Although Kayser\u2019s work contains a two-dimensional logarithmic construct and a three-dimensional linear one, he never joined them into a three-dimensional logarithmic matrix \u2013 at least as far as I know. He also never looked at the ascending\u2014descending reciprocals from the temporal perspective of tempo or rhythm, his work remaining confined to the tonal realm of pitch. Nevertheless, he took the study of harmonics to extreme, and wrote a lifetime\u2019s worth of books on the subject.  8\n  As it turned out, at least one person before me has independently discovered a part of the same (harmonics\u2013related) basic concepts, and this confirmed and reinforced my own work. A work based on the fact that visual perception is the most absorbed method of understanding, and maybe the only proper way to learn about the unseen, formless world of sound\u2013relations.\n  This paper is part of the \u201cWhat Music Really \u0130s:  The Manual for The 3 rd Millennium Musician,  Spiritual Seeker and Free  Energy Discoverer\u201d. The information presented here, although in a very simple and intuitive manner, might be of little value to the innocent music lover when taken out of its original context. That\u2019s why in continuing, it is assumed that the reader has knowledge about the true harmonic series in its completeness: what it really is, where it can be found in nature and how different harmonics can be isolated and emphasized on instruments that allow it; also that the reader is well acquainted with  \u201cThe Math Behind Music\u201d.\n  Whenever the term \u201charmonic series\u201d will be used herein, it implies both the ascending and descending series, unless otherwise stated. Whenever the term \u201charmonics\u201d is used, it implies both supra-harmonics (overtones or harmonics from the ascending series) and sub-harmonics (undertones or harmonics from the descending series), unless otherwise stated. These are  simple tones: manifestations of sound in their purest form, exactly as they appear in nature inside complex tones, and their use throughout this work is implied in the precise numerical form given. The use of temperament or other artificial contrivances and approximations is totally excluded.\n  All the ratios presented here refer to simple sound tones. It will be shown that complex tones are generated from these simple tones, as depicted in the conceptual matrix presented further down. By extension, these harmonics can be used as template for practical tuning systems applied to compound tones. In this case, it is only their fundamental which is taken into account in computation, while their respective harmonic series is implied as being related to the fundamental in whole (rational, integer) number relations.\n    Musically, the harmonic series is nature\u2019s single perfect tuning system and rhythmic pattern. Most of the cultural tunings and rhythms currently employed over the world were developed according to arbitrary social constructs and are part of the subjective experience of musico-social conditioning. Many are based on the true harmonic series and represent a distant slice of it with irregularly missing members. Others, like temperaments, are totally artificial despite any attempt to make them seem as extensions of natural harmonics. Excluding equal and unequal temperaments, any other conceivable tunings based on rational numbers (and their combinations in form of fractions) can be traced back to a pattern inside the matrix presented here.\n  Mathematically, the harmonic series is the formula for nature\u2019s laws of relationships. These laws are not reflected only in music, as harmonic genesis of timbre, rhythms and pitches, as sonic distances between harmonics, frequency relations between tones, and size proportions of bodies generating sound, but also in  all numbers and number systems in use, as the  pattern of true prime numbers, inherent in the  geometry of architecture and visual art, at  the core of trigonometry, in  the colors of the rainbow, and generally in all arts and sciences.\n    The ascending harmonic series is graphed vertically on the \u201cwhat-you-see-is-how-you-hear\u201d sonic number line of frequency perception, to convey the resolution of this series unto itself. This simply means that all overtone components fit perfectly within the fundamental, and also with each other \u2013 as long as the same fundamental remains their common reference.\n    The sonic number line depicts differences in pitch exactly as they are perceived and interpreted by the human brain. The numbers represent frequency multipliers, as related to the absolute fundamental (the second supra-harmonic \u00d72 has a frequency 2 times higher than the fundamental 1; supra-harmonic \u00d73 sounds 3 times higher than 1, and so on). The outlines of oscillating strings represent actual physical dimensions of each harmonic\u2019s sound producing source.\n  The vertical arrangement also means that  any or all supra-harmonics can be played simultaneously (at the same time), the resulting sound being perceived by the ear as harmonically consonant. This is in fact  the definition of consonant harmony: simple tones whose frequencies are integer multiples of the fundamental, playing simultaneously with the fundamental.\n  This definition obeys one rule: any number of overtones are harmoniously consonant when played together, as long as the fundamental is also sounded with them. When the fundamental is not present, the further we ascend, the lower the perceived consonance. For example, sounding together supra-harmonics 2 and 3 will appear more pleasing to the sense of hearing than sounding together supra-harmonics 8 and 9. (But if we introduce the fundamental 1 into the picture, then 8 and 9 will resolve perfectly into it giving the sensation of consonant harmony.)\n  These supra-harmonics are simple tones. Playing them together creates a compound (or complex) tone, and  the specific volume (intensity or power) of each overtone in the mix accounts for timbre: that unique characteristic which makes a piano sound different from a sitar, when both instruments play a (compound) tone having the fundamental vibrating at the same frequency. This also accounts for the difference between two human voices pronouncing the same vowel, and the difference between different vowels chanted by the same person \u2013 all under the same condition: that their fundamentals have the same frequency.\n   Overtones could also be played consecutively, but let\u2019s leave that aside for later and stick with the basics for now.\n    The descending harmonic series is graphed horizontally on the \u201cwhat-you-see-is-how-you-hear\u201d sonic number line of frequency perception, to convey the fact that the fundamental fits perfectly within all undertone components (which in turn don\u2019t always fit with each other).\n    The sonic number line depicts differences in pitch exactly as they are perceived and interpreted by the human brain. The numbers represent frequency divisors, as related to the absolute fundamental (the second sub-harmonic \u00f72 has a frequency 2 times lower than the fundamental 1; sub-harmonic \u00f73 sounds 3 times deeper than 1, and so on). The outlines of oscillating strings represent actual physical dimensions of each harmonic\u2019s sound producing source. The amplitude (power, volume) of these is not properly depicted.\n  The horizontal arrangement also means that  any or all sub-harmonics can be played consecutively (one after another), the resulting melody being perceived by the sense of hearing as musically valid. If however more than two are played simultaneously, the resulting compound sound will be perceived as harmonically dissonant. This is in fact  the definition of dissonant harmony: simple tones whose frequencies are integer sub-multiples of the fundamental, playing simultaneously with the fundamental.\n  As a side note, non-harmonic dissonance or out-of-tune-ness is created by the simultaneous sounding of complex tones that are not in tune with themselves. This simply means that any number of complex tones whose fundamental frequencies do not exhibit relationships taken directly from their own harmonic series will sound out-of-tune when played together. That\u2019s because their fundamentals and complete harmonic series will combine into non-repeating patterns: non-harmonic movement that does not repeat the same cycle in exactly the same time. Physically, this translates into outlines of oscillating strings that do not fit perfectly into each other.\n  The simplest frequency-relationships (ratios) account for purest consonances. With other words, harmonic relations of very large numbers tend towards higher states of harmonic dissonance, while unmusical, seemingly unresolvable and out-of-tune dissonances are generated by unmusical numbers having non-recurring and never-ending decimals (irrational numbers). There is of course a questionable degree of dissonance that can be tolerated, but the most obvious fact is that the brain can well be conditioned to accept and even enjoy these dissonances, as long as they are part of the only music it has ever experienced.\n  The use of undertones could be extended to simultaneous playing, but this is part of an ampler talk about expanded musical possibilities which currently doesn\u2019t serves us in laying out the foundations.\n    The vertical and horizontal tonal aspects of music being defined (through simultaneous and consecutive sounding of tones), we can proceed by extending the two reciprocal harmonic series from the same fundamental.\n    Although extending much higher in reality, and into infinity conceptually, only the first 5 harmonics have been depicted here, for the purpose of clarity. The associated colors are arbitrary.\n  It can be seen from the picture that the fundamental, marked  1, has a series of harmonic overtones rising higher and higher in pitch, progressing vertically from the bottom up, and the intervals between these get smaller and smaller as pitch increases. This is in fact a conceptual representation of a compound tone, which sounds the fundamental and all vertical harmonics simultaneously (in a chord, if you will). Volume or intensity is not depicted on this graph.\n  The undertone series of harmonics displays an exact opposite and symmetrical structure. As the series decreases in pitch, progressing horizontally from right to left, the intervals get smaller and smaller. The difference is, this series does not represent the structure of a compound tone, but rather the steps to be melodically taken by such tones. This literally means that every undertone will have its own series of overtones.\n  So what does this  actually mean? It means that frequency grows or diminishes (exponentially), multiplying or dividing its value by the number after the operator (\u00d7 or \u00f7 signs), and is always related to the fundamental of the series. Say this fundamental   1 gets assigned to a frequency of   300 events per unit of time; that would make the  \u00d72 overtone vibrate  600 times, the  \u00d73 overtone  900 times and so on, while the frequency of the  \u00f72 undertone will be  150 events per unit of time, that of the  \u00f73 undertone  100, and so on.\n  That\u2019s why,  for the values on the outer edges, even though we write \u201c \u00d75\u201d, \u201c \u00f73\u201d, etc., the implied interpretation is \u201c 1 \u00d75\u201d, \u201c 1 \u00f73\u201d, etc.\n    Every undertone will have its own series of overtones, identical in structure with that of the fundamental, but shifted altogether in frequency. Taking as example the second undertone, a compound tone tuned to this frequency will have its own shifted series of overtones as depicted below.\n    The numerical values of every new member of this child-series are given by the interaction between the fundamental of the series, which in this case is the second undertone, and the original overtone series. Every new tick on the graph is in fact an intersection point resulted from a parallel extension and the tracing of projections. Every new value will contain the numbers that intersected to create it, together with their respective operators.\n  For example, the second overtone  \u00d72 of the second undertone  \u00f72, at the exact point where they intersect, is the result of the interaction between  \u00f72 and  \u00d72, which is  \u00f72  \u00d72 (and whose implied interpretation is   1  \u00f72  \u00d72). This simple math continues in the same manner for the entire child-series of  \u00f72, multiplying its value by those of the ascending series of harmonics, one by one.\n    Thus a complex tone having as fundamental (or which is tuned to) the second undertone will exhibit its own complete structure of overtones, of which just the first five are depicted here.\n  We can continue like this and represent the natural harmonic overtones of every other compound tone tuned according to the sub-harmonic model.\n    Thus we have depicted five different compound tones, all related on the basis of the natural descending harmonic series, each having its own series of ascending harmonics.\n  The fact that they are all shown on the same graphic at the same time doesn\u2019t necessarily mean they can be played together (simultaneously). On the contrary, by the universal laws of acoustics, these tones should be played one after another (consecutively). The order in which they are to be played, the length of each tone through time, its intensity, and most important, the amount of overtones each compound tone will sound and the intensities of these, rests in the hands of the 3 rd Millennium Musician.\n    Every overtone will display the possibility of having its own series of undertones, identical in structure with that of the fundamental, but shifted altogether in frequency. As a first example, the second overtone of a compound tone (having the fundamental   1), together with its own series of shifted undertones, is depicted below.\n    The numerical values of every new member of this child-series are given by the interaction between the fundamental of the series, which in this case is the second overtone, and the original undertone series. Every new tick on the graph is in fact an intersection point resulted from a parallel extension and the tracing of projections. Every new value will contain the numbers that intersected to create it, together with their respective operators.\n  For example, the second undertone  \u00f72 of the second overtone  \u00d72, at the exact point where they intersect, is the result of the interaction between  \u00d72 and  \u00f72, which is  \u00d72  \u00f72 (and whose implied interpretation is   1  \u00d72  \u00f72). This simple math continues in the same manner for the entire child-series of  \u00d72, dividing its value by those of the descending series of harmonics, one by one.\n    Thus the second overtone, which is part of another complex tone, will exhibit its own complete structure of undertones, of which just the first five are depicted here.\n  Continuing in this manner we can represent the natural harmonic undertone series of every other supra-harmonic of the main compound tone.\n    We have thus depicted five different harmonic overtones of a single compound tone (fundamental included), each having its own series of descending harmonics.\n    If the two constructs get overlapped, all intersection points overlap and their values correspond. They are no different from each other; their values coincide because \u2013 for example: (  1)  \u00f72  \u00d73 = (  1)  \u00d73  \u00f72. The two operations are the exact same thing, giving the same result, arrived at in two similar ways. This dual genesis of every musical entity will be further discussed later on.\n      For the values inside the HarmoniComb matrix (generated by the interaction between those on the outer edges), even though we write \u201c \u00f72  \u00d73\u201d, \u201c \u00d73  \u00f72\u201d, etc., the implied interpretation is \u201c 1  \u00f72  \u00d73\u201d, \u201c 1  \u00d73  \u00f72\u201d, etc. In this example, the two expressions are equal and can be written in simple form as one fraction:\n  1 \u00f7  2 \u00d7  3 =  1 \u00d7  3 \u00f7  2 =      2 \u2013 3\n    1 \u00f7  b \u00d7  c =  1 \u00d7  c \u00f7  b =      b \u2013 c\n  Ratios are the best way of representing musical entities (sonic distances) because every musical ratio, written as a fraction of two integer (rational) numbers, has at least five different and non-exclusive meanings. With other words, every fraction can be interpreted in five different ways, and these interpretations do not cancel each other. So far we covered one of them, and we\u2019re not quite finished.\n    The special case of the original harmonic series (on the right and bottom outer edges) which have the number \u201c1\u201d above and below the fraction bar will be discussed in the next chapter.\n  Notice how horizontally, all numbers above the fraction bars (numerators) are the same \u2013 these are all ascending harmonics previously marked with \u201c\u00d7\u201d; vertically, all numbers below the fraction bars (denominators) have the same value \u2013 these are all descending harmonics previously marked with \u201c\u00f7\u201d. Therefore,  if taken out of this context, just by looking at a ratio (or set of ratios) we can instantly tell how they were generated and where they belong on the graphic.\n  Depicted below is a HarmoniComb Matrix of 1024 harmonics extending in both directions and interacting with each other. In its completeness, it is of little use musically \u2013 especially since many of its pitches fall outside the human hearing range. But any part of it can accurately represent different tuning systems, as we shall see in the following chapters.\n    Every intersection point on this diagram is a ratio that represents the frequency of a simple tone, and music can be made out of it by choosing a tuning (abstract scale of sounds) from the descending series and by constructing the compound tones of this tuning from the ascending series. Sounding a compound tone is the definition of a chord.\n  If however every ratio is taken to represent the fundamental of a compound tone, the principles described hitherto still apply and a third dimension would have to be added to the HarmoniComb in order to properly depict that. Any music using this system will be harmonically consonant, as lon\n......", "posttime": "2021-06-22 15:51:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u8c10\u6ce2,art", "title": "\u7ed3\u5408\u8c10\u6ce2\u7684\u7f8e\u672f\u827a\u672f ", "title_en": "The Fine Art of Combining Harmonics", "transed": 1, "url": "https://whatmusicreallyis.com/research/harmonicomb/", "via": "", "real_tags": ["\u827a\u672f", "\u8c10\u6ce2", "art"]}]
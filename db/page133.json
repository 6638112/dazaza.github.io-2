[{"category": "", "categoryclass": "", "imagename": "a3bbb72df97a146a8a7209af73cbe8fe.png", "infoid": 1069928, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6a21\u6001\u8fc7\u6ee4\u5668\u2014\u2014\u8bf8\u5982\u62a4\u67f1\u3001\u5927\u95e8\u3001\u81ea\u884c\u8f66\u9006\u6d41\u7b49\u63aa\u65bd\uff0c\u662f\u9632\u6b62\u673a\u52a8\u8f66\u901a\u8fc7\u4f4f\u5b85\u533a\u7684\u91cd\u8981\u65b9\u6cd5\u3002\u5b83\u4eec\u6700\u8fd1\u7ecf\u5e38\u51fa\u73b0\u5728\u65b0\u95fb\u4e2d\uff0c\u4f46\u5b9e\u9645\u4e0a\u975e\u5e38\u666e\u904d\uff0c\u5e76\u4e14\u81f3\u5c11\u4ece 1980 \u5e74\u4ee3\u5c31\u5b58\u5728\u4e86\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u5173\u4e8e\u5b83\u4eec\u6240\u5728\u4f4d\u7f6e\u7684\u56fd\u5bb6\u5730\u56fe\u6570\u636e\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u975e\u5e38\u666e\u904d\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5728\u6bcf\u4e2a\u57ce\u9547\u6216\u57ce\u5e02\u4e2d\u627e\u5230\u3002\u5b83\u4eec\u4e0d\u662f\u201c\u6fc0\u8fdb\u201d\u6216\u65b0\u63aa\u65bd\u3002\u6211\u4eec\u7740\u624b\u8bc1\u660e\u8fd9\u4e00\u70b9\uff0c\u5e76\u9996\u6b21\u7ed8\u5236\u4e86\u5b83\u4eec\u7684\u5730\u56fe\u3002\u6211\u4eec\u5206\u6790\u4e86\u8857\u9053\u6570\u636e\u4ee5\u786e\u5b9a\u5168\u82f1\u56fd\u6a21\u6001\u8fc7\u6ee4\u5668\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u54ea\u4e9b\u8857\u9053\u662f\u76f4\u901a\u8857\u9053\uff08\u5373\u80fd\u591f\u4ece\u4e00\u6761\u4e3b\u5e72\u9053\u901a\u5411\u53e6\u4e00\u6761\u4e3b\u5e72\u9053\uff09\u3002\u8fd9\u9879\u5de5\u4f5c\u73b0\u5df2\u8fbe\u5230\u6d4b\u8bd5\uff08\u9884\u89c8\uff09\u7ea7\u522b\u3002\u6700\u7ec8\u7684\u6620\u5c04\u4e00\u65e6\u516c\u5f00\u53d1\u5e03\uff0c\u5c06\u5bf9\u8bd5\u56fe\u5f15\u5165\u65b0 LTN \u7684\u4efb\u4f55\u4eba\uff08\u4f8b\u5982\u516c\u6c11\u3001\u8bae\u5458\u548c\u8bae\u4f1a\u5b98\u5458\uff09\u6709\u6240\u5e2e\u52a9\u2014\u2014\u56e0\u4e3a\u5b83\u8bc1\u660e\u4e86\u8fd9\u4e9b\u63aa\u65bd\u7684\u666e\u904d\u6027\u548c\u5e7f\u6cdb\u6027\u3002\u5b83\u5c06\u663e\u793a\u5730\u65b9\u8bae\u4f1a\u9700\u8981\u8fdb\u4e00\u6b65\u5de5\u4f5c\u7684\u5730\u65b9\u3002\u8857\u9053\u4e0a\u7684\u6570\u636e\u8fd8\u5c06\u6709\u52a9\u4e8e\u5bf9 LTN \u7684\u793e\u4f1a\u4eba\u53e3\u5f71\u54cd\u8fdb\u884c\u65b0\u7684\u7814\u7a76\uff0c\u4f8b\u5982\uff0c\u5b83\u4eec\u662f\u5426\u4e0d\u6210\u6bd4\u4f8b\u5730\u53d7\u76ca\u6216\u5f71\u54cd\u7279\u5b9a\u7fa4\u4f53\u3002\u5404\u79cd\u7c7b\u578b\u7684\u6a21\u6001\u8fc7\u6ee4\u5668 \u2013 (1) \u62a4\u67f1\uff0c\u6216\u82b1\u76c6/\u95e8/\u95f4\u9699\uff0c(2) \u5ef6\u7eed\uff0c(3) \u5df4\u58eb\u95e8\uff0c(4) \u9664\u5faa\u73af\u5916\u4e0d\u5f97\u8fdb\u5165\u3002\u6211\u4eec\u5bf9 OpenStreetMap \u8fdb\u884c\u4e86\u590d\u6742\u7684\u5206\u6790\uff0c\u4ee5\u786e\u5b9a\u6a21\u6001\u8fc7\u6ee4\u5668\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u5206\u6790\u8857\u9053\u6a21\u5f0f\uff0c\u521b\u5efa\u6a21\u6001\u8fc7\u6ee4\u5668\u6240\u5728\u4f4d\u7f6e\u7684\u5730\u56fe\uff0c\u6211\u4eec\u65e8\u5728\u8868\u660e\u8fd9\u4e9b\u662f\u5b8c\u5168\u6b63\u5e38\u548c\u666e\u904d\u7684\u3002\u5728\u82f1\u56fd\uff0c\u6ca1\u6709\u5e7f\u6cdb\u4f7f\u7528\u7684\u5730\u56fe\u6570\u636e\u8868\u660e\u201c\u8fd9\u662f\u4e00\u4e2a\u6a21\u6001\u8fc7\u6ee4\u5668\u201d\u3002\u76f8\u53cd\uff0c\u5730\u56fe\u4ec5\u8bf4\u660e\u8857\u9053\u7684\u7269\u7406\u5c5e\u6027\uff0c\u4f8b\u5982\u5728\u67d0\u4e00\u70b9\u8bbe\u6709\u62a4\u67f1\u7684\u4f4f\u5b85\u8857\u9053\u3002\u7136\u800c\uff0c\u62a4\u67f1\u548c\u95f8\u95e8\u4e5f\u53ef\u4ee5\u5b58\u5728\u4e8e\u4e0e\u6a21\u6001\u8fc7\u6ee4\u5668\u65e0\u5173\u7684\u73af\u5883\u4e2d\u3002\n\u56e0\u6b64\uff0c\u6a21\u6001\u6ee4\u6ce2\u5668\u7684\u6570\u636e\u96c6\u53ea\u80fd\u901a\u8fc7\u8fd0\u884c\u590d\u6742\u7684\u7b97\u6cd5\u5206\u6790\u6765\u53d1\u73b0\u5178\u578b\u7684\u8857\u9053\u6a21\u5f0f\uff0c\u4ece\u800c\u4ea7\u751f\u6a21\u6001\u6ee4\u6ce2\u5668\u7684\u6982\u5ff5\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u73b0\u5728\u6240\u505a\u7684\u3002\u4e0a\u9762\u793a\u4f8b\u56fe\u7247\u4e2d\u663e\u793a\u7684\u6bcf\u79cd\u6a21\u6001\u6ee4\u6ce2\u5668\u7c7b\u578b\u90fd\u6709\u8868\u793a\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u770b\u5230\u6765\u81ea\u5251\u6865\u7684\u793a\u4f8b\u3002\u6211\u4eec\u5c06\u5f88\u5feb\u53d1\u5e03\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u63d0\u4f9b\u66f4\u5168\u9762\u7684\u5206\u6790\u7ec6\u8282\u3002\u4f46\u662f\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 OpenStreetMap talk-gb \u90ae\u4ef6\u5217\u8868\u4e0a\u7684\u90ae\u4ef6\u5217\u8868\u9605\u8bfb\u6280\u672f\u7ec6\u8282\uff0c\u5e76\u8bbf\u95ee\u53d7\u5bc6\u7801\u4fdd\u62a4\u7684 Beta \u5206\u6790\u3002\u5206\u6790\u76f8\u5f53\u590d\u6742\uff0c\u5c1a\u4e0d\u5b8c\u5584\u3002\u6211\u4eec\u6b22\u8fce\u5bf9\u6b64 Beta \u6620\u5c04\u7684\u53cd\u9988\u3002\u76ee\u524d\u6211\u4eec\u4f30\u8ba1\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u5df2\u7ecf\u8fbe\u5230\u4e86\u5927\u7ea6 80-90% \u7684\u51c6\u786e\u7387\u3002\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb\u4ee5\u6807\u8bb0\u9519\u8fc7\u7684\u4f4d\u7f6e\uff0c\u6216\u5355\u51fb\u73b0\u6709\u4f4d\u7f6e\u4ee5\u62a5\u544a\u5b83\u4e0d\u5e94\u662f\u6a21\u6001\u8fc7\u6ee4\u5668\u3002\u6211\u4eec\u5c06\u5ba1\u67e5\u8fd9\u4e9b\uff0c\u4ee5\u4fbf\u6211\u4eec\u80fd\u591f\u4fee\u590d\u5206\u6790\u4e2d\u7684\u4efb\u4f55\u7cfb\u7edf\u7f3a\u9677\uff0c\u6216\u8005\u5c06\u6211\u4eec\u7684\u81ea\u52a8\u5206\u6790\u4e0d\u592a\u53ef\u80fd\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u8857\u9053\u5e03\u5c40\u4f4d\u7f6e\u5217\u5165\u767d\u540d\u5355\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u65e9\u671f\u8fed\u4ee3\u5bfc\u81f4\u536b\u62a5\u7684\u62a5\u9053\u3002\u6b64\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u8fdb\u4e00\u6b65\u5b8c\u5584\u5206\u6790\u3002\u6211\u4eec\u8ba1\u5212\u4e0e\u4f26\u6566\u7684\u4e00\u4f4d\u5b66\u672f\u540c\u4e8b\u5408\u4f5c\uff0c\u5c31\u8fd9\u9879\u65b0\u7814\u7a76\u53d1\u8868\u540c\u884c\u8bc4\u8bae\u8bba\u6587\u3002\u6211\u4eec\u8fd8\u786e\u5b9a\u6bcf\u6761\u8857\u9053\u662f\u5426\u90fd\u53ef\u4ee5\u7528\u4e8e\u4ece\u4e00\u6761\u4e3b\u8981\u9053\u8def\u5230\u53e6\u4e00\u6761\u4e3b\u8981\u9053\u8def\u7684\u901a\u884c\uff08\u201c\u8001\u9f20\u8dd1\u201d\uff09\u3002\n\u8fd9\u4e0d\u662f\u8001\u9f20\u5954\u8dd1\u662f\u5426\u771f\u7684\u53d1\u751f\u7684\u5730\u56fe\uff0c\u56e0\u4e3a\u6ca1\u6709\u516c\u5f00\u7684\u6570\u636e\u3002\u5b83\u662f\u4e00\u5f20\u8857\u9053\u662f\u5426\u80fd\u591f\u770b\u5230\u76f4\u901a\u8f66\u6d41\u7684\u5730\u56fe\u3002\u5e03\u6717\u5c55\u793a\u4e86\u54ea\u4e9b\u5730\u65b9\u53ef\u4ee5\u901a\u884c\uff0c\u4f46\u4e5f\u6709\u4ea4\u901a\u7ba1\u5236\u63aa\u65bd\u6765\u963b\u6b62\u5b83\u3002\u4ece\u6280\u672f\u89d2\u5ea6\u6765\u8bf4\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u5bf9\u6a21\u6001\u8fc7\u6ee4\u5668\u5de5\u4f5c\u7684\u5b8c\u5168\u72ec\u7acb\u7684\u5206\u6790\uff0c\u6d89\u53ca\u5728\u5df2\u8bc6\u522b\u7684\u4e3b\u8981\u9053\u8def\u4e4b\u95f4\u4f7f\u7528\u57fa\u4e8e\u6c7d\u8f66\u8def\u7ebf\u7684\u6d4b\u8bd5\uff0c\u5e76\u4f7f\u7528\u4e00\u4e9b\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u6d88\u9664\u4e0d\u592a\u53ef\u80fd\u7684\u60c5\u51b5\u3002\u8fd9\u9879\u5de5\u4f5c\u5904\u4e8e\u7a0d\u65e9\u7684\u6210\u719f\u9636\u6bb5\uff0c\u4f46\u4f1a\u7ee7\u7eed\u6539\u8fdb\uff0c\u6211\u4eec\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u7ed3\u679c\u3002\u5251\u6865\u68af\u7530\u5730\u533a\u7684\u8857\u9053\u901a\u5e38\u4f1a\u963b\u6b62\u901a\u8fc7\u4ea4\u901a\uff0c\u56e0\u4e3a\u6709\u6a21\u6001\u8fc7\u6ee4\u5668\u53ef\u4ee5\u7269\u7406\u963b\u6b62\u5b83\uff0c\u6216\u8005\u5df2\u7ecf\u5b89\u88c5\u4e86\u4ea4\u901a\u5e73\u9759\u88c5\u7f6e\u6765\u963b\u6b62\u5b83\u3002\u540c\u6837\uff0c\u6211\u4eec\u5c06\u5f88\u5feb\u53d1\u5e03\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u63d0\u4f9b\u66f4\u5168\u9762\u7684\u5206\u6790\u6280\u672f\u7ec6\u8282\u3002 7 \u6708\u521d\uff0c\u6211\u4eec\u5728\u7531 Brian Deegan \u7ec4\u7ec7\u7684\u6765\u81ea\u82f1\u56fd\u5404\u5730\u7684\u6d3b\u8dc3\u65c5\u6e38\u4e13\u4e1a\u4eba\u58eb\u548c\u5021\u5bfc\u8005\u5b9a\u671f\u4f1a\u8bae\u4e0a\u5c31\u8fd9\u4e24\u4e2a\u65b0\u6570\u636e\u96c6\u8fdb\u884c\u4e86\u6f14\u8bb2\u3002\u8fd9\u5f20\u4f7f\u7528\u4f26\u6566\u5b98\u65b9\u6570\u636e\u7684\u975e\u51e1\u56fe\u8868\u5c55\u793a\u4e86\u81ea 2009 \u5e74\u4ee5\u6765\u4f4f\u5b85\u8857\u9053\u4f7f\u7528\u7684\u663e\u7740\u53d8\u5316\u3002\n\u8be5\u65e5\u671f\u4e0e\u4e3a\u9a7e\u9a76\u5458\u63d0\u4f9b\u514d\u8d39\u536b\u661f\u5bfc\u822a\u5e94\u7528\u7a0b\u5e8f\u7684\u624b\u673a\u7684\u589e\u957f\u76f8\u5173\u3002\u7531\u4e8e\u5728\u7ebf\u8ba2\u8d2d\uff0c\u4ea4\u4ed8\u91cf\u4e5f\u968f\u4e4b\u589e\u52a0\u3002\u7531\u4e8e Rees Jeffreys Road Fund \u7684\u8d44\u52a9\uff0c\u6211\u4eec\u5bf9\u6a21\u6001\u8fc7\u6ee4\u5668\u548c\u76f4\u901a\u8857\u9053\u7684\u7814\u7a76\u6210\u4e3a\u53ef\u80fd\u3002\u6211\u4eec\u975e\u5e38\u611f\u8c22\u57fa\u91d1\u7684\u53d7\u6258\u4eba\u9009\u62e9\u8d44\u52a9\u8fd9\u9879\u5de5\u4f5c\u3002\u8fd9\u9879\u5de5\u4f5c\u6700\u521d\u4e5f\u5f97\u76ca\u4e8e#BikeIsBest \u7684\u5c11\u91cf\u8d44\u91d1\uff0c\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u4e86\u521d\u6b65\u5206\u6790\u3002", "note_en": "Modal filters \u2013 measures such as bollards, gates, cycle contraflows, etc., are important ways to prevent motor traffic passing through residential areas. They have been much in the news recently, but are in fact very common, and have been in existence since at least the 1980s.\n However, there is no national mapping data on where they are. It turns they are in fact extremely common, found in pretty-much every town or city. They are not a \u2018radical\u2019 or new measure. We set out to prove this, and for the first time, have mapped them.\n We have analysed street data to determine the locations of modal filters across the UK, as well as which streets are through-streets (i.e. capable of having through-traffic from one main road to another). This work has now reached a  beta (preview) level.\n The resulting mapping, once publicly released, will be helpful for anyone (e.g. citizens, councillors and council officials) trying to introduce new LTNs \u2013 as it proves how common and widespread these measures are. It will show where further work by local councils is needed. The data on streets will also enable new research to be undertaken on the socio-demographic effects of LTNs, for instance, whether they disproportionately benefit or affect particular groups.\n Modal filters of various types \u2013 (1) Bollards, or planters/gates/gaps, (2) Continuations, (3) Bus gates, (4) No entry except cycles.\n  We have undertaken complex analysis of OpenStreetMap to determine the locations of modal filters. By analysing street patterns, to create a map of where modal filters are located, we aim to show these are entirely normal and widespread.\n There is no widespread map data in the UK that ever states \u201cHere is a modal filter\u201d. Instead, maps only state the physical attributes of a street, e.g. a residential street with bollards at one point. However, bollards and gates can also exist in a context which has nothing to do with modal filters.\n As such, a dataset of modal filters can only be obtained by running complex algorithm analysis to spot the typical street patterns which create the concept of a modal filter. This is what we now have done.\n Each of the modal filter types shown in the above example pictures are represented, and you can see below an example from Cambridge.\n We will shortly publish a blog post giving fuller details of the analysis. But for now, you can read the technical details, and gain access to the password-protected beta analysis, via this  mailing list posting on the OpenStreetMap talk-gb mailing list. The analysis is quite complex and is not yet perfect.\n We welcome feedback on this beta mapping. At present we estimate we so far have achieved around 80-90% accuracy. You can right-click to flag up a missed location, or click on an existing location to report that it should not be a modal filter. We will review these, to enable us to fix up any systematic shortcomings in our analysis, or whitelist unusual street layout locations that our automated analysis is otherwise unlikely to detect.\n  An early iteration of this work resulted in  coverage in the Guardian. We have since gone on to refine the analysis further.\n We plan to collaborate with an academic colleague in London to produce a peer-reviewed paper on this new research.\n  We also determine whether every street can be potentially used for through-traffic (\u2018rat-running\u2019) or not from one main road to another.\n This is not a map of whether rat-running is actually happening, since there exists no published data on that. It is a map of whether a street is physically capable of seeing through-traffic.\n Brown shows where through-traffic is possible but there are also traffic-calming measures in place to deter it.\n In technical terms, this is actually a completely separate analysis to the modal filters work, and involves the use of car routing -based testing between identified main roads, and the use of some heuristics to eliminate unlikely situations. This work is at a slightly earlier stage of maturity but will continue to improve, and we are already getting pretty good results.\n Streets in terraced areas of Cambridge often prevent through-traffic, as there are modal filters to stop it physically, or traffic-calming has been installed to deter it.\n We will similarly shortly be publishing a blog post giving fuller technical details of the analysis.\n  We  gave a talk on both of these new datasets in early July, to a regular meeting of active travel professionals and advocates from around the UK, organised by Brian Deegan.\n   This remarkable chart, using the  official data from London demonstrates the remarkable change in use of residential streets since 2009.\n That  date correlates with the growth of mobile phones with free satnav apps for drivers. Deliveries have also risen since, as a result of online ordering.\n   Our research on modal filters and through-streets has been made possible thanks to a grant from the  Rees Jeffreys Road Fund. We are most grateful to the Trustees of the Fund for their choosing to fund this work.\n  The work was initially commenced thanks also to a small amount of funding from  #BikeIsBest, for whom we undertook initial analysis.", "posttime": "2021-07-27 09:26:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u6001,modal,\u5206\u6790", "title": "\u6620\u5c04\u6a21\u6001\u8fc7\u6ee4\u5668\u548c LTN", "title_en": "Mapping Modal Filters and LTNs", "transed": 1, "url": "https://www.cyclestreets.org/news/2021/07/25/mapping-ltns/", "via": "", "real_tags": ["\u6a21\u6001", "modal", "\u5206\u6790"]}, {"category": "", "categoryclass": "", "imagename": "c783c8741215fe14421dc4156eeae4cb.jpg", "infoid": 1069927, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e86\u89e3\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4eec\u5bf9\u6570\u636e\u5206\u6790\u5982\u6b64\u5f3a\u5927\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 TimescaleDB \u8d85\u51fd\u6570\u6765\u66f4\u5feb\u5730\u8ba1\u7b97\u5b83\u4eec\u2014\u2014\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u7528 SQL\u3002\u8bb8\u591a\u5904\u7406\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u4eba\u90fd\u6709\u5f88\u597d\u7684\u3001\u5b9a\u671f\u91c7\u6837\u7684\u6570\u636e\u96c6\u3002\u6570\u636e\u53ef\u4ee5\u6bcf\u9694\u51e0\u79d2\u3001\u51e0\u6beb\u79d2\u6216\u4ed6\u4eec\u9009\u62e9\u7684\u4efb\u4f55\u65f6\u95f4\u8fdb\u884c\u91c7\u6837\uff0c\u4f46\u901a\u8fc7\u5b9a\u671f\u91c7\u6837\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u65f6\u95f4\u57fa\u672c\u4e0a\u662f\u6052\u5b9a\u7684\u3002\u8ba1\u7b97\u5e38\u89c4\u6570\u636e\u96c6\u4e2d\u6307\u5b9a\u65f6\u95f4\u6bb5\u5185\u6570\u636e\u70b9\u7684\u5e73\u5747\u503c\u662f\u4e00\u4e2a\u76f8\u5bf9\u5bb9\u6613\u7406\u89e3\u7684\u67e5\u8be2\u3002\u4f46\u662f\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u5b9a\u671f\u91c7\u6837\u6570\u636e\u7684\u4eba\u6765\u8bf4\uff0c\u83b7\u5f97\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u4ee3\u8868\u6027\u5e73\u5747\u503c\u53ef\u80fd\u662f\u4e00\u4e2a\u590d\u6742\u4e14\u8017\u65f6\u7684\u67e5\u8be2\u3002\u5f53\u60a8\u5904\u7406\u4e0d\u89c4\u5219\u91c7\u6837\u7684\u6570\u636e\u65f6\uff0c\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u662f\u4e00\u79cd\u83b7\u5f97\u65e0\u504f\u5e73\u5747\u503c\u7684\u65b9\u6cd5\u3002\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\uff0c\u6709\u65f6\u6bcf\u79d2\u751f\u6210\u6570\u767e\u4e07\u4e2a\u6570\u636e\u70b9\uff08\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u4fe1\u606f\uff09\u3002\u7531\u4e8e\u4fe1\u606f\u91cf\u548c\u4fe1\u606f\u91cf\u5de8\u5927\uff0c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u67e5\u8be2\u548c\u5206\u6790\u5df2\u7ecf\u5f88\u590d\u6742\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6784\u5efa TimescaleDB \u7684\u539f\u56e0\uff0c\u8fd9\u662f\u4e00\u4e2a\u591a\u8282\u70b9\u3001PB \u7ea7\u3001\u5b8c\u5168\u514d\u8d39\u7684\u65f6\u95f4\u5e8f\u5217\u5173\u7cfb\u6570\u636e\u5e93\u3002\u4e0d\u89c4\u5219\u91c7\u6837\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u53ea\u4f1a\u589e\u52a0\u53e6\u4e00\u5c42\u590d\u6742\u6027\u2014\u2014\u800c\u4e14\u6bd4\u60a8\u60f3\u8c61\u7684\u66f4\u5e38\u89c1\u3002\u4f8b\u5982\uff0c\u4e0d\u89c4\u5219\u91c7\u6837\u7684\u6570\u636e\uff0c\u56e0\u6b64\u9700\u8981\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff0c\u7ecf\u5e38\u53d1\u751f\u5728\uff1a \u5de5\u4e1a\u7269\u8054\u7f51\uff0c\u56e2\u961f\u901a\u8fc7\u4ec5\u5728\u503c\u53d8\u5316\u65f6\u53d1\u9001\u70b9\u6765\u201c\u538b\u7f29\u201d\u6570\u636e \u9065\u611f\uff0c\u53ef\u4ee5\u4ece\u8fb9\u7f18\u53d1\u9001\u56de\u6570\u636e\u6210\u672c\u9ad8\u6602\uff0c\u56e0\u6b64\u60a8\u53ea\u80fd\u4e3a\u6700\u5173\u952e\u7684\u64cd\u4f5c\u53d1\u9001\u9ad8\u9891\u6570\u636e \u57fa\u4e8e\u89e6\u53d1\u5668\u7684\u7cfb\u7edf\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f20\u611f\u5668\u7684\u91c7\u6837\u7387\u53d7\u5230\u53e6\u4e00\u4e2a\u4f20\u611f\u5668\u8bfb\u6570\u7684\u5f71\u54cd\uff08\u5373\uff0c\u5f53\u8fd0\u52a8\u4f20\u611f\u5668\u5904\u4e8e\u5f02\u5e38\u72b6\u6001\u65f6\uff0c\u5b89\u5168\u7cfb\u7edf\u4f1a\u66f4\u9891\u7e41\u5730\u53d1\u9001\u6570\u636e\u89e6\u53d1\uff09\n\u5728 Timescale\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5bfb\u627e\u4f7f\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\u7684\u65b9\u6cd5\uff0c\u5c24\u5176\u662f\u5728\u4ed6\u4eec\u5904\u7406\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u65f6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u8d85\u51fd\u6570\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u7684 SQL \u51fd\u6570\uff0c\u53ef\u7b80\u5316 PostgreSQL \u4e2d\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u5904\u7406\u3002\u8fd9\u4e9b\u8d85\u51fd\u6570\u4e4b\u4e00\u4f7f\u60a8\u80fd\u591f\u5feb\u901f\u6709\u6548\u5730\u8ba1\u7b97\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff0c\u4ece\u800c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002\u7ee7\u7eed\u9605\u8bfb\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u7684\u793a\u4f8b\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff0c\u5982\u4f55\u5728 TimescaleDB \u4e2d\u4f7f\u7528\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u8d85\u51fd\u6570\uff0c\u4ee5\u53ca\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u6765\u63d0\u9ad8\u9879\u76ee\u751f\u4ea7\u529b\u7684\u4e00\u4e9b\u60f3\u6cd5\uff0c\u65e0\u8bba\u9886\u57df\u5982\u4f55.\u5982\u679c\u60a8\u60f3\u7acb\u5373\u5f00\u59cb\u4f7f\u7528 time_weight \u8d85\u51fd\u6570 - \u4ee5\u53ca\u66f4\u591a - \u7acb\u5373\u542f\u52a8\u4e00\u4e2a\u5b8c\u5168\u6258\u7ba1\u7684 TimescaleDB \u670d\u52a1\uff1a\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u4ee5\u514d\u8d39\u8bd5\u7528 30 \u5929\u3002\u5728 Timescale Forge \u7684\u6bcf\u4e2a\u65b0\u6570\u636e\u5e93\u670d\u52a1\u4e0a\u90fd\u9884\u52a0\u8f7d\u4e86\u8d85\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u521b\u5efa\u65b0\u670d\u52a1\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u4e86\u3002\u5982\u679c\u60a8\u66f4\u559c\u6b22\u7ba1\u7406\u81ea\u5df1\u7684\u6570\u636e\u5e93\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u5728 GitHub \u4e0a\u4e0b\u8f7d\u5e76\u5b89\u88c5 timescaledb_toolkit \u6269\u5c55\uff0c\u4e4b\u540e\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528 time_weight \u548c\u5176\u4ed6\u8d85\u51fd\u6570\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u535a\u6587\u6709\u4efb\u4f55\u95ee\u9898\u6216\u610f\u89c1\uff0c\u6211\u4eec\u5df2\u5728 GitHub \u9875\u9762\u4e0a\u5c55\u5f00\u8ba8\u8bba\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u542c\u53d6\u60a8\u7684\u610f\u89c1\u3002 \uff08\u800c\u4e14\uff0c\u5982\u679c\u4f60\u559c\u6b22\u4f60\u6240\u770b\u5230\u7684\uff0cGitHub \u2b50 \u4e5f\u603b\u662f\u53d7\u5230\u6b22\u8fce\u548c\u8d5e\u8d4f\uff01\uff09\u4f60\u53ef\u4ee5\u5728 GitHub \u4e0a\u67e5\u770b\u6211\u4eec\u5373\u5c06\u53d1\u5e03\u7684\u8def\u7ebf\u56fe\uff0c\u4ee5\u83b7\u53d6\u5efa\u8bae\u7684\u529f\u80fd\u5217\u8868\uff0c\u4ee5\u53ca\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5b9e\u65bd\u7684\u529f\u80fd\u548c\u53ef\u7528\u7684\u529f\u80fd\u4eca\u5929\u4f7f\u7528\u3002\u6211\u5728 Timescale \u505a\u4e86 3 \u5e74\u591a\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5728\u6570\u636e\u5e93\u65b9\u9762\u5de5\u4f5c\u4e86\u5927\u7ea6 5 \u5e74\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u6211\u662f\u4e00\u540d\u7535\u5316\u5b66\u5bb6\u3002\u4f5c\u4e3a\u4e00\u540d\u7535\u5316\u5b66\u5bb6\uff0c\u6211\u5728\u4e00\u5bb6\u7535\u6c60\u5236\u9020\u5546\u5de5\u4f5c\uff0c\u770b\u5230\u4e86\u5f88\u591a\u8fd9\u6837\u7684\u56fe\u8868\uff1a\n\u8fd9\u662f\u4e00\u6761\u7535\u6c60\u653e\u7535\u66f2\u7ebf\uff0c\u5b83\u63cf\u8ff0\u4e86\u7535\u6c60\u53ef\u4ee5\u4e3a\u67d0\u7269\u4f9b\u7535\u591a\u957f\u65f6\u95f4\u3002 x \u8f74\u4ee5\u5b89\u57f9\u5c0f\u65f6\u4e3a\u5355\u4f4d\u663e\u793a\u5bb9\u91cf\uff0c\u7531\u4e8e\u8fd9\u662f\u6052\u6d41\u653e\u7535\uff0c\u56e0\u6b64 x \u8f74\u5b9e\u9645\u4e0a\u53ea\u662f\u65f6\u95f4\u7684\u4ee3\u8868\u3002 y \u8f74\u663e\u793a\u7535\u538b\uff0c\u5b83\u51b3\u5b9a\u4e86\u7535\u6c60\u7684\u529f\u7387\u8f93\u51fa\uff1b\u5f53\u60a8\u7ee7\u7eed\u4e3a\u7535\u6c60\u653e\u7535\u65f6\uff0c\u7535\u538b\u4f1a\u4e0b\u964d\uff0c\u76f4\u5230\u8fbe\u5230\u9700\u8981\u5145\u7535\u7684\u7a0b\u5ea6\u3002\u5f53\u6211\u4eec\u4e3a\u65b0\u7535\u6c60\u914d\u65b9\u8fdb\u884c\u7814\u53d1\u65f6\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u5faa\u73af\u4f7f\u7528\u8bb8\u591a\u7535\u6c60\uff0c\u4ee5\u627e\u51fa\u54ea\u79cd\u914d\u65b9\u4f7f\u7535\u6c60\u4f7f\u7528\u5bff\u547d\u6700\u957f\u3002\u5982\u679c\u60a8\u66f4\u4ed4\u7ec6\u5730\u89c2\u5bdf\u653e\u7535\u66f2\u7ebf\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u53ea\u6709\u4e24\u4e2a\u201c\u6709\u8da3\u201d\u7684\u90e8\u5206\uff1a\u5b83\u4eec\u662f\u653e\u7535\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u7535\u538b\u5feb\u901f\u53d8\u5316\u7684\u90e8\u5206\u3002\u5728\u8fd9\u4e24\u4e2a\u90e8\u5206\u4e4b\u95f4\uff0c\u4e2d\u95f4\u6709\u4e00\u6bb5\u5f88\u957f\u7684\u65f6\u95f4\uff0c\u7535\u538b\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\uff1a\u73b0\u5728\uff0c\u5f53\u6211\u4e4b\u524d\u8bf4\u6211\u662f\u7535\u5316\u5b66\u5bb6\u65f6\uff0c\u6211\u627f\u8ba4\u6211\u6709\u70b9\u5938\u5927\u5176\u8bcd\u3002\u6211\u5bf9\u7535\u5316\u5b66\u7684\u4e86\u89e3\u8db3\u591f\u5371\u9669\uff0c\u4f46\u6211\u4e0e\u62e5\u6709\u535a\u58eb\u5b66\u4f4d\u7684\u4eba\u4e00\u8d77\u5de5\u4f5c\uff0c\u4ed6\u4eec\u77e5\u9053\u7684\u6bd4\u6211\u591a\u5f97\u591a\u3002\u4f46\u662f\uff0c\u5728\u5904\u7406\u6570\u636e\u65b9\u9762\uff0c\u6211\u901a\u5e38\u6bd4\u4ed6\u4eec\u505a\u5f97\u66f4\u597d\uff0c\u6240\u4ee5\u6211\u4f1a\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u6bd4\u5982\u5bf9\u6052\u7535\u4f4d\u4eea\u8fdb\u884c\u7f16\u7a0b\uff0c\u8fd9\u662f\u4e3a\u4e86\u6267\u884c\u8fd9\u4e9b\u6d4b\u8bd5\u800c\u8fde\u63a5\u7535\u6c60\u7684\u8bbe\u5907\u3002\u5bf9\u4e8e\u653e\u7535\u5468\u671f\u7684\u6709\u8da3\u90e8\u5206\uff08\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u90a3\u4e9b\u90e8\u5206\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6052\u7535\u4f4d\u4eea\u6837\u54c1\u7f6e\u4e8e\u5176\u6700\u5927\u901f\u7387\uff0c\u901a\u5e38\u6bcf 10 \u6beb\u79d2\u5de6\u53f3\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u4e0d\u60f3\u5728\u7535\u538b\u4e0d\u53d8\u7684\u5197\u957f\u4e4f\u5473\u7684\u90e8\u5206\u91c7\u6837\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u70b9\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4fdd\u5b58\u5927\u91cf\u5177\u6709\u4e0d\u53d8\u503c\u7684\u6570\u636e\u5e76\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\u3002\n\u4e3a\u4e86\u51cf\u5c11\u6211\u4eec\u5fc5\u987b\u5904\u7406\u7684\u65e0\u804a\u6570\u636e\u800c\u4e0d\u4e22\u5931\u6709\u8da3\u7684\u4f4d\uff0c\u6211\u4eec\u5c06\u7a0b\u5e8f\u8bbe\u7f6e\u4e3a\u6bcf 3 \u5206\u949f\u91c7\u6837\u4e00\u6b21\uff0c\u6216\u8005\u5f53\u7535\u538b\u53d8\u5316\u5408\u7406\u7684\u6570\u91cf\u65f6\uff0c\u6bd4\u5982\u8d85\u8fc7 5 mV\u3002\u901a\u8fc7\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5bf9\u6570\u636e\u8fdb\u884c\u91c7\u6837\uff0c\u6211\u4eec\u5c06\u5728\u6709\u8da3\u7684\u90e8\u5206\u83b7\u5f97\u66f4\u591a\u7684\u6570\u636e\uff0c\u800c\u5728\u65e0\u804a\u7684\u4e2d\u95f4\u90e8\u5206\u83b7\u5f97\u66f4\u5c11\u7684\u6570\u636e\u3002\u90a3\u592a\u68d2\u4e86\uff01\u5b83\u8ba9\u6211\u4eec\u56de\u7b54\u4e86\u5173\u4e8e\u66f2\u7ebf\u5feb\u901f\u53d8\u5316\u90e8\u5206\u7684\u66f4\u591a\u6709\u8da3\u95ee\u9898\uff0c\u5e76\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5173\u4e8e\u7f13\u6162\u53d8\u5316\u90e8\u5206\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u2014\u2014\u65e0\u9700\u5b58\u50a8\u5927\u91cf\u5197\u4f59\u6570\u636e\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u7ed9\u5b9a\u8fd9\u4e2a\u6570\u636e\u96c6\uff0c\u6211\u4eec\u5982\u4f55\u627e\u5230\u653e\u7535\u671f\u95f4\u7684\u5e73\u5747\u7535\u538b\uff1f\u8fd9\u4e2a\u95ee\u9898\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u6761\u653e\u7535\u66f2\u7ebf\u548c\u672a\u6765\u66f2\u7ebf\u4e4b\u95f4\u8fdb\u884c\u6bd4\u8f83\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u6bd4\u5982 10 \u6216 100 \u4e2a\u5faa\u73af\u540e\u3002\u968f\u7740\u7535\u6c60\u8001\u5316\uff0c\u5176\u5e73\u5747\u7535\u538b\u4f1a\u4e0b\u964d\uff0c\u5e76\u4e14\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4e0b\u964d\u7684\u5e45\u5ea6\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u7535\u6c60\u5728\u5176\u751f\u547d\u5468\u671f\u4e2d\u7684\u5b58\u50a8\u5bb9\u91cf\u6709\u591a\u597d\u2014\u2014\u4ee5\u53ca\u5b83\u662f\u5426\u53ef\u4ee5\u53d8\u6210\u6709\u7528\u7684\u4ea7\u54c1\u3002\u95ee\u9898\u662f\u611f\u5174\u8da3\u4f4d\u4e2d\u7684\u6570\u636e\u88ab\u66f4\u9891\u7e41\u5730\u91c7\u6837\uff08\u5373\uff0c\u611f\u5174\u8da3\u4f4d\u6709\u66f4\u591a\u6570\u636e\u70b9\uff09\uff0c\u8fd9\u4f1a\u5728\u8ba1\u7b97\u5e73\u5747\u503c\u65f6\u8d4b\u4e88\u5b83\u66f4\u591a\u6743\u91cd\uff0c\u5373\u4f7f\u5b83\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\u3002\u5982\u679c\u6211\u4eec\u53ea\u662f\u5728\u6574\u4e2a\u66f2\u7ebf\u4e0a\u53d6\u4e00\u4e2a\u7b80\u5355\u7684\u5e73\u5747\u503c\uff0c\u5c06\u6bcf\u4e2a\u70b9\u7684\u503c\u76f8\u52a0\u5e76\u9664\u4ee5\u70b9\u6570\uff0c\u8fd9\u5c06\u610f\u5473\u7740\u6211\u4eec\u91c7\u6837\u7387\u7684\u53d8\u5316\u53ef\u80fd\u4f1a\u6539\u53d8\u6211\u4eec\u8ba1\u7b97\u7684\u5e73\u5747\u503c......\u5373\u4f7f\u6f5c\u5728\u7684\u5f71\u54cd\u662f\u771f\u7684\u4e00\u6837\uff01\u6211\u4eec\u5f88\u5bb9\u6613\u5ffd\u7565\u6211\u4eec\u8bd5\u56fe\u8bc6\u522b\u7684\u4efb\u4f55\u5dee\u5f02\u2014\u2014\u5173\u4e8e\u6211\u4eec\u5982\u4f55\u6539\u8fdb\u7535\u6c60\u7684\u4efb\u4f55\u7ebf\u7d22\u90fd\u53ef\u80fd\u4f1a\u5728\u6211\u4eec\u7684\u91c7\u6837\u534f\u8bae\u7684\u53d8\u5316\u4e2d\u4e22\u5931\u3002\n\u73b0\u5728\uff0c\u6709\u4e9b\u4eba\u4f1a\u8bf4\uff1a\u597d\u5427\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u4ee5\u6052\u7535\u4f4d\u4eea\u7684\u6700\u5927\u901f\u7387\u91c7\u6837\uff0c\u5373\u4f7f\u662f\u5728\u65e0\u804a\u7684\u90e8\u5206\uff1f\u55ef\uff0c\u8fd9\u4e9b\u653e\u7535\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\u771f\u7684\u5f88\u957f\u3002\u5b83\u4eec\u9700\u8981 10 \u5230 12 \u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210\uff0c\u4f46\u6709\u8da3\u7684\u90e8\u5206\u53ef\u80fd\u5f88\u77ed\uff0c\u4ece\u51e0\u79d2\u949f\u5230\u51e0\u5206\u949f\u4e0d\u7b49\u3002\u5982\u679c\u6211\u4eec\u4ee5\u6700\u9ad8\u901f\u7387\u8fdb\u884c\u91c7\u6837\uff0c\u6bcf 10 \u6beb\u79d2\u5de6\u53f3\u91c7\u6837\u4e00\u6b21\uff0c\u8fd9\u610f\u5473\u7740\u8981\u5b58\u50a8\u7684\u6570\u636e\u91cf\u8981\u591a\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u5373\u4f7f\u6211\u4eec\u51e0\u4e4e\u4e0d\u4f1a\u4f7f\u7528\u4efb\u4f55\u6570\u636e\uff01\u6570\u91cf\u7ea7\u7684\u6570\u636e\u610f\u5473\u7740\u66f4\u591a\u7684\u6210\u672c\u3001\u66f4\u591a\u7684\u5206\u6790\u65f6\u95f4\u4ee5\u53ca\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6700\u5927\u7684\u95ee\u9898\u662f\uff1a\u5f53\u6211\u4eec\u5904\u7406\u4e0d\u89c4\u5219\u95f4\u9694\u7684\u6570\u636e\u70b9\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u83b7\u5f97\u5177\u6709\u4ee3\u8868\u6027\u7684\u5e73\u5747\u503c\uff1f \uff08\u4e0b\u4e00\u70b9\u662f\u6709\u70b9\u65b9\u7a0b\u91cd\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u4eec\u662f\u76f8\u5bf9\u7b80\u5355\u7684\u65b9\u7a0b\uff0c\u5e76\u4e14\u5b83\u4eec\u5f88\u597d\u5730\u6620\u5c04\u5230\u5b83\u4eec\u7684\u56fe\u5f62\u8868\u793a\u4e0a\u3002\u5f53\u4eba\u4eec\u7ed9\u6211\u8ba1\u7b97\u80cc\u540e\u7684\u6570\u5b66\u548c\u56fe\u5f62\u76f4\u89c9\u65f6\uff0c\u6211\u603b\u662f\u559c\u6b22\u5b83 - \u4f46\u5982\u679c\u60a8\u60f3\u8df3\u8fc7\u4ee5\u67e5\u770b\u5982\u4f55\u4f7f\u7528\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff0c\u6570\u5b66\u4f4d\u5230\u6b64\u7ed3\u675f\u3002\uff09\u7136\u540e\uff0c\u6b63\u5e38\u5e73\u5747\u503c\u5c06\u662f\u503c\u7684\u603b\u548c\u9664\u4ee5\u603b\u70b9\u6570\uff1a\u4f46\u662f\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u89c4\u5219\u7684\u95f4\u9694\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8003\u8651\u5b83\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u83b7\u53d6\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u5c06\u5176\u9664\u4ee5\u603b\u65f6\u95f4\u3002\u8fd9\u5c31\u50cf\u83b7\u5f97\u66f2\u7ebf\u4e0b\u7684\u603b\u9762\u79ef\u5e76\u9664\u4ee5\u603b\u65f6\u95f4\u91cf \u0394T\u3002 \uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5728\u70b9\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff09\u3002\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u5bfb\u627e\u90a3\u4e2a\u533a\u57df\u3002\u524d\u4e24\u70b9\u4e4b\u95f4\u7684\u533a\u57df\u662f\u68af\u5f62\uff1a\n\u9762\u79ef = \u0394 t 1 v 1 \u23df \u77e9\u5f62\u9762\u79ef + \u0394 t 1 \u0394 v 1 2 \u23df \u4e09\u89d2\u5f62\u9762\u79ef \\begin{equation} area = \\underbrace{\\Delta t_1 v_1}_\\text{\u77e9\u5f62\u9762\u79ef} + \\underbrace{ \\frac{\\Delta t_1 \\Delta v_1}{2}}_\\text{\u4e09\u89d2\u5f62\u7684\u9762\u79ef} \\end{equation} \u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5\u662f\uff0c\u8fd9\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u601d\u8003\u6b64\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u65b9\u6cd5\uff1a\u5b83\u662f\u6bcf\u5bf9\u76f8\u90bb\u503c\uff0c\u7531\u5b83\u4eec\u4e4b\u95f4\u7684\u65f6\u95f4\u52a0\u6743\uff1a \\begin{equation} area = \\underbrace{\\frac{(v_1 + v_2)}{2}}_{\\text{average of } v_1 \\text{ &amp; } v_2} \\Delta t_1 \\end{equation} \u4e5f\u7b49\u4e8e\u7ed8\u5236\u5230 v1 \u548c v2 \u4e2d\u70b9\u7684\u77e9\u5f62\u9762\u79ef\uff1a\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u4e24\u4e2a\u76f8\u90bb\u70b9\u7684\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u5bf9\u76f8\u90bb\u70b9\u91cd\u590d\u8fd9\u4e2a\u6570\u636e\u96c6\u4e2d\u7684\u70b9\u3002\u7136\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u628a\u5b83\u52a0\u8d77\u6765\uff0c\u8fd9\u5c31\u662f\u65f6\u95f4\u52a0\u6743\u548c\uff0c\u5b83\u7b49\u4e8e\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\u3002 \uff08\u5b66\u8fc7\u5fae\u79ef\u5206\u7684\u4eba\u53ef\u80fd\u5728\u4ed6\u4eec\u5b66\u4e60\u79ef\u5206\u548c\u79ef\u5206\u8fd1\u4f3c\u65f6\u5b9e\u9645\u4e0a\u8fd8\u8bb0\u5f97\u5176\u4e2d\u7684\u4e00\u4e9b\u5185\u5bb9\uff01\uff09\u8ba1\u7b97\u66f2\u7ebf\u4e0b\u7684\u603b\u9762\u79ef\u540e\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5c06\u65f6\u95f4\u52a0\u6743\u603b\u548c\u9664\u4ee5\u603b \u0394T \u548c\u6211\u4eec\u6709\u6211\u4eec\u7684\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u3002 \ud83d\udca5 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u7406\u8bba\u4e0a\u7684\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff0c\u8ba9\u6211\u4eec\u5728 SQL \u4e2d\u8fdb\u884c\u6d4b\u8bd5\u3002\u8ba9\u6211\u4eec\u8003\u8651\u6b63\u5728\u76d1\u63a7\u51b0\u67dc\u7684\u51b0\u6dc7\u6dcb\u5236\u9020\u5546\u6216\u5e97\u4e3b\u7684\u573a\u666f\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u51b0\u6dc7\u6dcb\u9700\u8981\u4fdd\u6301\u5728\u76f8\u5bf9\u8f83\u7a84\u7684\u6e29\u5ea6\u8303\u56f4\u5185\uff08~0-10\u2109\uff09[1]\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u4f1a\u878d\u5316\u548c\u91cd\u65b0\u51bb\u7ed3\uff0c\u4ece\u800c\u5bfc\u81f4\u90a3\u4e9b\u6ca1\u4eba\u559c\u6b22\u7684\u5947\u602a\u6676\u4f53\u3002\u540c\u6837\uff0c\u5982\u679c\u51b0\u6dc7\u6dcb\u592a\u51b7\uff0c\u5c31\u5f88\u96be\u8200\u8d77\u6765\u3002\n\u5f53\u4eba\u4eec\u6253\u5f00\u548c\u5173\u95ed\u95e8\u65f6\uff0c\u51b0\u7bb1\u4e2d\u7684\u7a7a\u6c14\u6e29\u5ea6\u4f1a\u53d1\u751f\u66f4\u5927\u7684\u53d8\u5316\uff0c\u4f46\u51b0\u6dc7\u6dcb\u6e29\u5ea6\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u624d\u80fd\u6539\u53d8\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u957f\u65f6\u95f4\u66b4\u9732\u5728\u6781\u7aef\u6e29\u5ea6\u4e0b\uff0c\u624d\u4f1a\u51fa\u73b0\u95ee\u9898\uff08\u878d\u5316\u3001\u8ba8\u538c\u7684\u51b0\u6676\uff09\u3002\u901a\u8fc7\u6d4b\u91cf\u8fd9\u4e9b\u6570\u636e\uff0c\u51b0\u6dc7\u6dcb\u5236\u9020\u5546\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u50a8\u5b58\u5728\u51b0\u7bb1\u4e2d\u7684\u6bcf\u6279\u4ea7\u54c1\u8fdb\u884c\u8d28\u91cf\u63a7\u5236\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u51b7\u51bb\u5ba4\u4e2d\u7684\u4f20\u611f\u5668\u4ee5\u4e0b\u5217\u65b9\u5f0f\u6d4b\u91cf\u6e29\u5ea6\uff1a\u5f53\u95e8\u5173\u95ed\u4e14\u5904\u4e8e\u6700\u4f73\u8303\u56f4\u65f6\uff0c\u4f20\u611f\u5668\u6bcf 5 \u5206\u949f\u6d4b\u91cf\u4e00\u6b21\uff1b\u5f53\u95e8\u6253\u5f00\u65f6\uff0c\u4f20\u611f\u5668\u6bcf 30 \u79d2\u8fdb\u884c\u4e00\u6b21\u6d4b\u91cf\uff0c\u76f4\u5230\u95e8\u5173\u95ed\uff0c\u6e29\u5ea6\u6062\u590d\u5230 10 \u2109 \u4ee5\u4e0b\u3002 INSERT INTO freezer_temps \u503c ( 1, &#39;2020-01-01 00:00:00+00&#39;, 4.0), ( 1, &#39;2020-01-01 00:05:00+00&#39;, 5.5), ( 1, &#39; 2020-01-01 00:10:00+00&#39;, 3.0), ( 1, &#39;2020-01-01 00:15:00+00&#39;, 4.0), ( 1, &#39;2020-01-01 00:20 :00+00&#39;, 3.5), ( 1, &#39;2020-01-01 00:25:00+00&#39;, 8.0), ( 1, &#39;2020-01-01 00:30:00+00&#39;, 9.0) , ( 1, &#39;2020-01-01 00:31:00+00&#39;, 10.5), -- \u95e8\u5f00\u4e86\uff01( 1, &#39;2020-01-01 00:31:30+00&#39;, 11.0), ( 1 , &#39;2020-01-01 00:32:00+00&#39;, 15.0), ( 1, &#39;2020-01-01 00:32:30+00&#39;, 20.0), -- \u95e8\u5173\u95ed( 1, &#39;2020- 01-01 00:33:00+00&#39;, 18.5), ( 1, &#39;2020-01-01 00:33:30+00&#39;, 17.0), ( 1, &#39;2020-01-01 00:34:00 +00&#39;, 15.5), ( 1, &#39;2020-01-01 00:34:30+00&#39;, 14.0), ( 1, &#39;2020-01-01 00:35:00+00&#39;, 12.5), ( 1, &#39;2020-01-01 00:35:30+00&#39;, 11.0), ( 1, &#39;2020-01-01 00:36:00+00&#39;, 10.0), -- \u6e29\u5ea6\u7a33\u5b9a( 1, &#39;2020) -01-01 00:40:00+00&#39;, 7.0),(1, &#39;2020-01-01 00:45:00+00&#39;, 5.0);\u5f00\u95e8\u540e\u7684\u7b2c 31-36 \u5206\u949f\u6709\u66f4\u591a\u7684\u6570\u636e\u70b9\u3002\u5982\u679c\u6211\u4eec\u53d6\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u8bef\u5bfc\u6027\u7684\u503c\u3002\u51b7\u51bb\u5ba4\u4ec5\u5728 45 \u5206\u949f\u4e2d\u7684 5 \u5206\u949f\uff08\u65f6\u95f4\u6bb5\u7684 11%\uff09\u9ad8\u4e8e\u9608\u503c\u6e29\u5ea6\uff0c\u4f46\u8fd9\u4e9b\u5206\u949f\u6784\u6210\u4e86 20 \u4e2a\u6570\u636e\u70b9\u4e2d\u7684 10 \u4e2a\uff0850%\uff01\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u95e8\u5173\u95ed\u540e\u66f4\u9891\u7e41\u5730\u91c7\u6837\u51b7\u51bb\u5ba4\u6e29\u5ea6\u6253\u5f00\u3002\u4e3a\u4e86\u627e\u5230\u66f4\u51c6\u786e\u7684\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u6e29\u5ea6\uff0c\u8ba9\u6211\u4eec\u4e3a\u4e0a\u9762\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u7684\u516c\u5f0f\u7f16\u5199 SQL\u3002\u4e3a\u4e86\u6bd4\u8f83\uff0c\u6211\u4eec\u8fd8\u5c06\u83b7\u5f97\u6b63\u5e38\u5e73\u5747\u503c\u3002 \uff08\u5982\u679c\u60a8\u5728\u9605\u8bfb\u65f6\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u4e0d\u8981\u62c5\u5fc3\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u7f16\u5199\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u7248\u672c\uff09\u3002 WITH setup AS ( SELECT lag(temperature) OVER (PARTITION BY freezer_id ORDER BY ts) as prev_temp, extract(&#39;epoch&#39; FROM ts) as ts_e, extract(&#39;epoch&#39; FROM lag(ts) OVER (PARTITION BY freezer_id ORDER BY ts) )) \u4f5c\u4e3a prev_ts_e, * FROM freezer_temps), nextstep AS (SELECT CASE WHEN prev_temp is NULL THEN NULL ELSE (prev_temp + temperature) / 2 * (ts_e - prev_ts_e) END as weighted_sum, * FROM setup)SELECT freezer_id, avg(temperature) , -- \u5e38\u89c4\u5e73\u5747\u603b\u548c(weighted_sum) / (max(ts_e) - min(ts_e)) as time_weighted_average -- \u6211\u4eec\u5bfc\u51fa\u7684averageFROM nextstepGROUP BY freezer_id;\u5b83\u786e\u5b9e\u8fd4\u56de\u4e86\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\uff0c\u5e76\u8ba9\u6211\u4eec\u5bf9\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u66f4\u597d\u7684\u4e86\u89e3\uff0c\u4f46\u662f\u5199\u8d77\u6765\u5e76\u4e0d\u662f\u5f88\u6709\u8da3\uff0c\u662f\u5417\uff1f\n\u6211\u4eec\u5728\u90a3\u91cc\u6709\u4e00\u4e9b\u7a97\u53e3\u51fd\u6570\uff0c\u4e00\u4e9b\u5904\u7406\u7a7a\u503c\u7684 case \u8bed\u53e5\uff0c\u4ee5\u53ca\u4e00\u4e9b CTE \u8bd5\u56fe\u4f7f\u5176\u5408\u7406\u5730\u6e05\u695a\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5f53\u4eba\u4eec\u8bd5\u56fe\u5f04\u6e05\u695a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u5e76\u5bf9\u5176\u8fdb\u884c\u8c03\u6574\u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u786e\u5b9e\u4f1a\u5bfc\u81f4\u4ee3\u7801\u7ef4\u62a4\u95ee\u9898\u3002\u4ee3\u7801\u5c31\u662f\u7ba1\u7406\u590d\u6742\u6027\u3002\u5b8c\u6210\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u4efb\u52a1\u7684\u957f\u800c\u590d\u6742\u7684\u67e5\u8be2\u4f7f\u5f97\u63a5\u4e0b\u6765\u51fa\u73b0\u7684\u5f00\u53d1\u4eba\u5458\uff08\u5373\u4f60\u5728 3 \u4e2a\u6708\u5185\uff09\u4e86\u89e3\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3001\u5982\u4f55\u4f7f\u7528\u5b83\u6216\u5982\u679c\u4ed6\u4eec\uff08\u6216\u4f60\uff01\uff09\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u6216\u8005\uff0c\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u4ee3\u7801\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u66f4\u6539\uff0c\u56e0\u4e3a\u4eba\u4eec\u4e0d\u592a\u4e86\u89e3\u67e5\u8be2\u5728\u505a\u4ec0\u4e48\uff0c\u5e76\u4e14\u5b83\u53ea\u662f\u53d8\u6210\u4e86\u4e00\u4e2a\u6ca1\u6709\u4eba\uff08\u5305\u62ec\u4f60\u5728\u5185\uff09\u60f3\u8981\u89e6\u53ca\u7684\u9ed1\u76d2\u5b50\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u521b\u5efa\u8d85\u51fd\u6570\u7684\u539f\u56e0\uff0c\u4f7f\u590d\u6742\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5206\u6790\u53d8\u5f97\u4e0d\u90a3\u4e48\u590d\u6742\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8d85\u51fd\u6570\u8ba1\u7b97\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u51b7\u51bb\u6e29\u5ea6\u67e5\u8be2\u662f\u4ec0\u4e48\u6837\u7684\uff1a\u8fd9\u4e0d\u662f\u66f4\u7b80\u6d01\u5417\uff1f\uff01\u4f7f\u7528\u201c\u7ebf\u6027\u201d\u52a0\u6743\u65b9\u6cd5\uff08\u5373\u4e0a\u6587 [2] \u5f97\u51fa\u7684\u90a3\u79cd\u52a0\u6743\uff09\u8ba1\u7b97 time_weight\uff0c\u7136\u540e\u53d6\u52a0\u6743\u503c\u7684\u5e73\u5747\u503c\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u3002\u6211\u66f4\u559c\u6b22\u90a3\u4e2a API\uff08\u6211\u4f1a\u66f4\u597d\uff0c\u56e0\u4e3a\u6211\u8bbe\u8ba1\u4e86\u5b83\uff01\uff09\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u907f\u514d\u7f16\u5199\u6240\u6709 SQL\uff0c\u800c\u4e14\u7f16\u5199\u8d77\u6765\u4e5f\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\uff08\u5728\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u4e4b\u4e0a\u6784\u5efa\u66f4\u590d\u6742\u7684\u5206\u6790\uff09\u3002\u8fd9\u662f\u8d85\u529f\u80fd\u80cc\u540e\u8bbe\u8ba1\u7406\u5ff5\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff1b\u6211\u4eec\u60f3\u8ba9\u57fa\u672c\u7684\u4e1c\u897f\u53d8\u5f97\u7b80\u5355\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u5b83\u4eec\u6765\u6784\u5efa\u66f4\u590d\u6742\u7684\u3001\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5206\u6790\u3002\u5047\u8bbe\u6211\u4eec\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u7684\u5e73\u5747\u503c\u4e0d\u6ee1\u610f\uff0c\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u6bcf 10 \u5206\u949f\u5b58\u50a8\u6876\u7684\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\uff1a SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, freezer_id, avg(temperature), average(time_weight(&#39;Linear&#39;, ts, temperature)) as time_weighted_average FROM freezer_tempsGROUP BY bucket, freezer_id;\n\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a time_bucket\uff0c\u6309\u5b83\u5206\u7ec4\uff0c\u5927\u529f\u544a\u6210\uff01\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8d85\u51fd\u6570\u652f\u6301\u7684\u5176\u4ed6\u4e00\u4e9b\u590d\u6742\u7684\u5206\u6790\u3002\u7ee7\u7eed\u6211\u4eec\u7684\u51b0\u6dc7\u6dcb\u793a\u4f8b\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u9608\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5982\u679c\u51b0\u6dc7\u6dcb\u5728 15 \u2109 \u4ee5\u4e0a\u7684\u6e29\u5ea6\u8d85\u8fc7 15 \u5206\u949f\uff0c\u5b83\u4f1a\u5f62\u6210\u51b0\u6676\uff0c\u4f7f\u5176\u5177\u6709\u6c99\u8d28/\u9897\u7c92\u5473\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7a97\u53e3\u51fd\u6570\u4e2d\u4f7f\u7528\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u6765\u67e5\u770b\u662f\u5426\u53d1\u751f\u4e86\u8fd9\u79cd\u60c5\u51b5\uff1a SELECT *,average(time_weight(&#39;Linear&#39;, ts, temperature) OVER\u5341\u4e94_\u5206\u949f) \u4f5c\u4e3a\u6eda\u52a8_twaFROM freezer_tempsWINDOW\u5341\u4e94_\u5206\u949f AS (PARTITION BY freezer_id ORDER BY ts RANGE &#39; 15 \u5206\u949f&#39;::\u95f4\u9694 PRECEDING) ORDER BY freezer_id, ts; freezer_id | ts |\u6e29\u5ea6 |\u6eda\u52a8_twa ------------+------------------------+----------- --+----------------- 1 | 2020-01-01 00:00:00+00 | 4 | 1 | 2020-01-01 00:05:00+00 | 5.5 | 4.75 1 | 2020-01-01 00:10:00+00 | 3 | 4.5 1 | 2020-01-01 00:15:00+00 | 4 | 4.166666666666667 1 | 2020-01-01 00:20:00+00 | 3.5 | 3.8333333333333335 1 | 2020-01-01 00:25:00+00 | 8 | 4.333333333333333 1 | 2020-01-01 00:30:00+00 | 9 | 6 1 | 2020-01-01 00:31:00+00 | 10.5 | 7.363636363636363 1 | 2020-01-01 00:31:30+00 | 11 | 7.510869565217392 1 | 2020-01-01 00:32:00+00 | 15 | 7.739583333333333 1 | 2020-01-01 00:32:30+00 | 20 | 8.13 1 | 2020-01-01 00:33:00+00 | 18.5 | 8.557692307692308 1 | 2020-01-01 00:33:30+00 | 17 | 8.898148148148149 1 | 2020-01-01 00:34:00+00 | 15.5 | 9.160714285714286 1 | 2020-01-01 00:34:30+00 | 14 | 9.35344827586207 1 | 2020-01-01 00:35:00+00 | 12.5 | 9.483333333333333 1 | 2020-01-01 00:35:30+00 | 11 | 11.369047619047619 1 | 2020-01-01 00:36:00+00 | 10 | 11.329545454545455 1 | 2020-01-01 00:40:00+00 | 7 | 10.575 1 | 2020-01-01 00:45:00+00 | 5 | 9.741666666666667 \u8fd9\u91cc\u7684\u7a97\u53e3\u662f\u524d15\u5206\u949f\uff0c\u6309\u65f6\u95f4\u6392\u5e8f\u3002\u770b\u8d77\u6765\u6211\u4eec\u4e00\u76f4\u4f4e\u4e8e\u6211\u4eec\u7684\u51b0\u7ed3\u6676\u6e29\u5ea6\uff01\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u6c47\u603b\u51fd\u6570\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4ece\u5b50\u67e5\u8be2\u4e2d\u91cd\u65b0\u805a\u5408\u65f6\u95f4\u52a0\u6743\u503c\u3002\u4f8b\u5982\uff1a SELECT average(rollup(time_weight)) as time_weighted_average FROM (SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, freezer_id, time_weight(&#39;Linear&#39;, ts, temperature) FROM freezer_temps GROUP BY bucket, freezer_id ) t;\n\u8fd9\u5c06\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e0e\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u7684\u603b\u8ba1\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u662f\u91cd\u65b0\u805a\u5408\u4e86\u5206\u6876\u503c\u3002\u4f46\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9\u60a8\u53ef\u4ee5\u8fdb\u884c\u66f4\u6709\u8da3\u7684\u5206\u6790\uff0c\u4f8b\u5982\uff0c\u5c06\u51b7\u51bb\u673a\u7684\u6bcf\u4e2a\u5341\u5206\u949f\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u5f52\u4e00\u5316\u4e3a\u6574\u4f53\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u3002 WITH t as (SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, freezer_id, time_weight(&#39;Linear&#39;, ts, temperature) FROM freezer_temps GROUP BY bucket, freezer_id) SELECT bucket, freezer_id, average(time_weight) as bucketed_twa, (SELECT average(rollup(time_weight)) FROM t) as total_twa, average(time_weight) / (SELECT average(rollup(time_weight)) FROM t) as normalized_twaFROM t;\u8fd9\u79cd\u529f\u80fd\uff08\u5b58\u50a8\u65f6\u95f4\u6743\u91cd\u4ee5\u4f9b\u7a0d\u540e\u5206\u6790\uff09\u5728\u8fde\u7eed\u805a\u5408\u4e2d\u6700\u6709\u7528\uff0c\u800c\u6211\u4eec\u8bbe\u8ba1\u7684\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u6070\u597d\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ef\u7528\uff01\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\u8bf7\u52a1\u5fc5\u8ba2\u9605\u6211\u4eec\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u4ee5\u4fbf\u5728\u6211\u4eec\u53d1\u5e03\u65b0\u7684\u6280\u672f\u5185\u5bb9\u65f6\u6536\u5230\u901a\u77e5\u3002\u5982\u679c\u60a8\u60f3\u7acb\u5373\u5f00\u59cb\u4f7f\u7528 time_weight \u8d85\u51fd\u6570 - \u4ee5\u53ca\u66f4\u591a - \u7acb\u5373\u542f\u52a8\u4e00\u4e2a\u5b8c\u5168\u6258\u7ba1\u7684 TimescaleDB \u670d\u52a1\uff1a\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u4ee5\u514d\u8d39\u8bd5\u7528 30 \u5929\u3002 Timescale Forge \u4e0a\u7684\u6bcf\u4e2a\u65b0\u6570\u636e\u5e93\u670d\u52a1\u90fd\u9884\u52a0\u8f7d\u4e86\u8d85\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u521b\u5efa\u65b0\u670d\u52a1\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u5b83\u4eec\u4e86\uff01\u5982\u679c\u60a8\u66f4\u559c\u6b22\u7ba1\u7406\u81ea\u5df1\u7684\u6570\u636e\u5e93\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u5728 GitHub \u4e0a\u4e0b\u8f7d\u5e76\u5b89\u88c5 timescaledb_toolkit \u6269\u5c55\uff0c\u4e4b\u540e\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528 time_weight \u548c\u6240\u6709\u5176\u4ed6\u8d85\u51fd\u6570\u3002\n**\u5982\u679c\u60a8\u5bf9\u6b64\u535a\u6587\u6709\u4efb\u4f55\u95ee\u9898\u6216\u610f\u89c1\uff0c\u6211\u4eec\u5df2\u5728 GitHub \u9875\u9762\u4e0a\u5c55\u5f00\u8ba8\u8bba\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u542c\u53d6\u60a8\u7684\u610f\u89c1\u3002 \uff08\u800c\u4e14\uff0c\u5982\u679c\u4f60\u559c\u6b22\u4f60\u6240\u770b\u5230\u7684\uff0cGitHub \u2b50 \u4e5f\u603b\u662f\u53d7\u5230\u6b22\u8fce\u548c\u8d5e\u8d4f\uff01\uff09\u6211\u4eec\u559c\u6b22\u516c\u5f00\u6784\u5efa\uff0c\u4f60\u53ef\u4ee5\u5728 GitHub \u4e0a\u67e5\u770b\u6211\u4eec\u5373\u5c06\u63a8\u51fa\u7684\u8def\u7ebf\u56fe\uff0c\u4ee5\u83b7\u53d6\u5efa\u8bae\u7684\u529f\u80fd\u5217\u8868\u3001\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5b9e\u65bd\u7684\u529f\u80fd\u4ee5\u53ca\u4eca\u5929\u53ef\u4ee5\u4f7f\u7528\u7684\u529f\u80fd\u3002\u6211\u4eec\u8981\u7279\u522b\u611f\u8c22......", "note_en": "Learn how time-weighted averages are calculated, why they\u2019re so powerful for data analysis, and how to use TimescaleDB hyperfunctions to calculate them faster \u2013 all using SQL.\n Many people who work with time-series data have nice, regularly sampled datasets. Data could be sampled every few seconds, or milliseconds, or whatever they choose, but by regularly sampled, we mean the time between data points is basically constant. Computing the average value of data points over a specified time period in a regular dataset is a relatively well-understood query to compose. But for those who don&#39;t have regularly sampled data, getting a representative average over a period of time can be a complex and time-consuming query to write.  Time-weighted averages are a way to get an unbiased average when you are working with irregularly sampled data.\n Time-series data comes at you fast, sometimes generating millions of data points per second ( read more about time-series data). Because of the sheer volume and rate of information, time-series data can already be complex to query and analyze, which is why we built  TimescaleDB, a multi-node, petabyte-scale, completely free relational database for time-series.\n Irregularly sampled time-series data just adds another level of complexity \u2013 and is more common than you may think. For example, irregularly sampled data, and thus the need for time-weighted averages, frequently occurs in:\n Industrial IoT, where teams \u201ccompress\u201d data by only sending points when the value changes\n Remote sensing, where sending data back from the edge can be costly, so you only send high-frequency data for the most critical operations\n Trigger-based systems, where the sampling rate of one sensor is affected by the reading of another (i.e., a security system that sends data more frequently when a motion sensor is triggered)\n At Timescale, we\u2019re always looking for ways to make developers\u2019 lives easier, especially when they\u2019re working with time-series data. To this end,  we introduced hyperfunctions, new SQL functions that simplify working with time-series data in PostgreSQL.  One of these hyperfunctions enables you to   compute time-weighted averages  quickly and efficiently, so you gain hours of productivity.\n Read on for examples of time-weighted averages, how they\u2019re calculated, how to use the time-weighted averages hyperfunctions in TimescaleDB, and some ideas for how you can use them to get a productivity boost for your projects, no matter the domain.\n If you\u2019d like to get started with the  time_weight hyperfunction - and many more - right away, spin up a fully managed TimescaleDB service: create an account to  try it for free for 30 days. Hyperfunctions are pre-loaded on each new database service on Timescale Forge, so after you create a new service, you\u2019re all set to use them.\n If you prefer to manage your own database instances, you can   download and install the timescaledb_toolkit extension on GitHub, after which you\u2019ll be able to use  time_weight and other hyperfunctions.\n  If you have questions or comments on this blog post,  we\u2019ve started a discussion on our GitHub page, and we\u2019d love to hear from you. (And, if you like what you see, GitHub \u2b50 are always welcome and appreciated too!)\n You can view our  upcoming roadmap on GitHub for a list of proposed features, as well as features we\u2019re currently implementing and those that are available to use today.\n  I\u2019ve been a developer at Timescale for over 3 years and worked in databases for about 5 years, but I was an electrochemist before that. As an electrochemist, I worked for a battery manufacturer and saw a lot of charts like these:\n  That\u2019s a battery discharge curve, which describes how long a battery can power something. The x-axis shows capacity in Amp-hours, and since this is a constant current discharge, the x-axis is really just a proxy for time. The y-axis displays voltage, which determines the battery\u2019s power output; as you continue to discharge the battery, the voltage drops until it gets to a point where it needs to be recharged.\n When we\u2019d do R&amp;D for new battery formulations, we\u2019d cycle many batteries many times to figure out which formulations make batteries last the longest.\n If you look more closely at the discharge curve, you\u2019ll notice that there are only two \u201cinteresting\u201d sections:\n  These are the parts at the beginning and end of the discharge where the voltage changes rapidly. Between these two sections, there\u2019s that long period in the middle, where the voltage hardly changes at all:\n  Now, when I said before that I was an electrochemist, I will admit that I was exaggerating a little bit. I knew enough about electrochemistry to be dangerous, but I worked with folks with PhDs who knew  a lot more than I did.\n But, I was often better than them at working with data, so I\u2019d do things like programming the  potentiostat, the piece of equipment you hook the battery up to in order to perform these tests.\n For the interesting parts of the discharge cycle (those parts at the start and end), we could have the potentiostat sample at its max rate, usually a point every 10 milliseconds or so. We didn\u2019t want to sample as many data points during the long, boring parts where the voltage didn\u2019t change because it would mean saving lots of data with unchanging values and wasting storage.\n To reduce the boring data we\u2019d have to deal with without losing the interesting bits, we\u2019d set up the program to sample every 3 minutes, or when the voltage changed by a reasonable amount, say more than 5 mV.\n   By sampling the data in this way, we&#39;d get more data during the interesting parts and less data during the boring middle section. That\u2019s great!\n It let us answer more interesting questions about the quickly changing parts of the curve and gave us all the information we needed about the slowly changing sections \u2013 without storing gobs of redundant data.  But, here\u2019s a question: given this dataset, how do we find the average voltage during the discharge?\n That question is important because it was one of the things we could compare between this discharge curve and future ones, say 10 or 100 cycles later. As a battery ages, its average voltage drops, and how much it dropped over time could tell us how well the battery\u2019s storage capacity held up during its lifecycle \u2013 and if it could turn into a useful product.\n The problem is that the data in the interesting bits are sampled more frequently (i.e., there are more data points for the interesting bits), which would give it more weight when calculating the average, even though it shouldn&#39;t.\n  If we just took a naive average over the whole curve, adding the value at each point and dividing by the number of points, it would mean that a change to our sampling rate could change our calculated average...even though the underlying effect was really the same!\n We could easily overlook any of the differences we were trying to identify \u2013 and any clues about how we could improve the batteries could just get lost in the variation of our sampling protocol.\n Now, some people will say: well, why not just sample at max rate of the potentiostat, even during the boring parts? Well, these discharge tests ran  really long. They\u2019d take 10 to 12 hours to complete, but the interesting bits could be pretty short, from seconds or minutes. If we sampled at the highest rate, one every 10ms or so, it would mean orders of magnitude more data to store even though we would hardly use any of it! And orders of magnitude more data would mean more cost, more time for analysis, all sorts of problems.\n So the big question is:  how do we get a representative average when we\u2019re working with irregularly spaced data points?\n  (This next bit is a little equation-heavy, but I think they\u2019re  relatively simple equations, and they map very well onto their graphical representation. I always like it when folks give me the math and graphical intuition behind the calculations \u2013 but if you want to skip ahead to just see how time-weighted average is used, the mathy bits end  here.)\n    Then, the normal average would be the sum of the values, divided by the total number of points:\n  But, because they\u2019re irregularly spaced, we need some way to account for that.\n One way to think about it would be to get a value at every point in time, and then divide it by the total amount of time. This would be like getting the total area under the curve and dividing by the total amount of time \u0394T.\n   (In this case, we\u2019re doing a linear interpolation between the points). So, let\u2019s focus on finding that area. The area between the first two points is a trapezoid:\n             a  r  e  a  =          \u0394    t  1     v  1    \u23df    area of rectangle   +            \u0394    t  1   \u0394    v  1    2   \u23df    area of triangle    \\begin{equation} area = \\underbrace{\\Delta t_1 v_1}_\\text{area of rectangle} + \\underbrace{\\frac{\\Delta t_1 \\Delta v_1}{2}}_\\text{area of triangle} \\end{equation}         One cool thing to note is that this gives us a new way to think about this solution: it\u2019s the average of each pair of adjacent values, weighted by the time between them:\n \\begin{equation} area = \\underbrace{\\frac{(v_1 + v_2)}{2}}_{\\text{average of } v_1 \\text{ &amp; } v_2} \\Delta t_1 \\end{equation}\n It\u2019s also equal to the area of the rectangle drawn to the midpoint between v1 and v2:\n  Now that we\u2019ve derived the formula for two adjacent points, we can repeat this for every pair of adjacent points in the dataset. Then all we need to do is sum that up, and that will be the time-weighted sum, which is equal to the area under the curve. (Folks who have studied calculus may actually remember some of this from when they were learning about integrals and integral approximations!)\n With the total area under the curve calculated, \u00a0all we have to do is divide the time-weighted sum by the overall \u00a0\u0394T and we have our time-weighted average. \ud83d\udca5\n Now that we&#39;ve worked through our time-weighted average in theory, let\u2019s test it out in SQL.\n  Let\u2019s consider the scenario of an ice cream manufacturer or shop owner who is monitoring their freezers. It turns out that ice cream needs to stay in a relatively narrow range of temperatures (~0-10\u2109)  [1] so that it doesn\u2019t melt and re-freeze, causing those weird crystals that no one likes. Similarly, if ice cream gets too cold, it\u2019s too hard to scoop.\n The air temperature in the freezer will vary a bit more dramatically as folks open and close the door, but the ice cream temperature takes longer to change. Thus, problems (melting, pesky ice crystals) will only happen if it&#39;s exposed to extreme temperatures for a prolonged period. By measuring this data, the ice cream manufacturer can impose quality controls on each batch of product they\u2019re storing in the freezer.\n Taking this into account, the sensors in the freezer measure temperature in the following way: when the door is closed and we\u2019re in the optimal range, the sensors take a measurement every 5 minutes; when the door is opened, the sensors take a measurement every 30 seconds until the door is closed, and the temperature has returned below 10\u2109.\n    INSERT INTO freezer_temps VALUES ( 1, &#39;2020-01-01 00:00:00+00&#39;, 4.0), ( 1, &#39;2020-01-01 00:05:00+00&#39;, 5.5), ( 1, &#39;2020-01-01 00:10:00+00&#39;, 3.0), ( 1, &#39;2020-01-01 00:15:00+00&#39;, 4.0), ( 1, &#39;2020-01-01 00:20:00+00&#39;, 3.5), ( 1, &#39;2020-01-01 00:25:00+00&#39;, 8.0), ( 1, &#39;2020-01-01 00:30:00+00&#39;, 9.0), ( 1, &#39;2020-01-01 00:31:00+00&#39;, 10.5), -- door opened!( 1, &#39;2020-01-01 00:31:30+00&#39;, 11.0), ( 1, &#39;2020-01-01 00:32:00+00&#39;, 15.0), ( 1, &#39;2020-01-01 00:32:30+00&#39;, 20.0), -- door closed( 1, &#39;2020-01-01 00:33:00+00&#39;, 18.5), ( 1, &#39;2020-01-01 00:33:30+00&#39;, 17.0), ( 1, &#39;2020-01-01 00:34:00+00&#39;, 15.5), ( 1, &#39;2020-01-01 00:34:30+00&#39;, 14.0), ( 1, &#39;2020-01-01 00:35:00+00&#39;, 12.5), ( 1, &#39;2020-01-01 00:35:30+00&#39;, 11.0), ( 1, &#39;2020-01-01 00:36:00+00&#39;, 10.0), -- temperature stabilized( 1, &#39;2020-01-01 00:40:00+00&#39;, 7.0),( 1, &#39;2020-01-01 00:45:00+00&#39;, 5.0);\n The period after the door opens, minutes 31-36, has a lot more data points. If we were to take the average of all the points, we would get a misleading value. The freezer was only above the threshold temperature for 5 out of 45 minutes (11% of the time period), but those minutes make up 10 out of 20 data points (50%!) because we sample freezer temperature more frequently after the door is opened.\n To find the more accurate, time-weighted average temperature, let\u2019s write the SQL for the formula above that handles that case. We\u2019ll also get the normal average just for comparison\u2019s sake. (Don\u2019t worry if you have trouble reading it, we\u2019ll write a much simpler version later).\n WITH setup AS (\tSELECT lag(temperature) OVER (PARTITION BY freezer_id ORDER BY ts) as prev_temp, \t\textract(&#39;epoch&#39; FROM ts) as ts_e, \t\textract(&#39;epoch&#39; FROM lag(ts) OVER (PARTITION BY freezer_id ORDER BY ts)) as prev_ts_e, \t\t* \tFROM freezer_temps), nextstep AS (\tSELECT CASE WHEN prev_temp is NULL THEN NULL \t\tELSE (prev_temp + temperature) / 2 * (ts_e - prev_ts_e) END as weighted_sum, \t\t* \tFROM setup)SELECT freezer_id, avg(temperature), -- the regular average\tsum(weighted_sum) / (max(ts_e) - min(ts_e)) as time_weighted_average -- our derived averageFROM nextstepGROUP BY freezer_id;\n  It does return what we want, and gives us a much better picture of what happened, but it\u2019s not exactly fun to write, is it?\n We\u2019ve got a few window functions in there, some case statements to deal with nulls, and several CTEs to try to make it reasonably clear what\u2019s going on.  This is the kind of thing that can really lead to code maintenance issues when people try to figure out what\u2019s going on and tweak it.\n Code is all about managing complexity. A long, complex query to accomplish a relatively simple task makes it much less likely that the developer who comes along next (ie you in 3 months) will understand what\u2019s going on, how to use it, or how to change it if they (or you!) need a different result. Or, worse, it means that the code will never get changed because people don\u2019t quite understand what the query\u2019s doing, and it just becomes a black box that no one wants to touch (including you).\n  This is why we created   hyperfunctions, to make complicated time-series data analysis less complex. Let\u2019s look at what the time-weighted average freezer temperature query looks like if we use the  hyperfunctions for computing time-weighted averages:\n   Isn\u2019t that so much more concise?! Calculate a   time_weight with a  &#39;Linear&#39; weighting method (that\u2019s the kind of weighting derived above   [2]), then take the average of the weighted values, and we\u2019re done. I like that API much better (and I\u2019d better, because I designed it!).\n What\u2019s more, not only do we save ourselves from writing all that SQL, but it also becomes far, far easier to  compose (build up more complex analyses over top of the time-weighted average). This is a huge part of the design philosophy behind hyperfunctions; we want to make fundamental things simple so that you can easily use them to build more complex, application-specific analyses.\n Let\u2019s imagine we\u2019re not satisfied with the average over our entire dataset, and we want to get the time-weighted average for every 10-minute bucket:\n SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, \tfreezer_id, \tavg(temperature), \taverage(time_weight(&#39;Linear&#39;, ts, temperature)) as time_weighted_average FROM freezer_tempsGROUP BY bucket, freezer_id;\n We added a   time_bucket, grouped by it, and done! Let\u2019s look at some other kinds of sophisticated analysis that hyperfunctions enable.\n Continuing with our ice cream example, let\u2019s say that we\u2019ve set our threshold because we know that if the ice cream spends more than 15 minutes above 15 \u2109, it\u2019ll develop those ice crystals that make it all sandy/grainy tasting. We can use the time-weighted average in a  window function to see if that happened:\n SELECT *, average(time_weight(&#39;Linear&#39;, ts, temperature) OVER fifteen_min) as rolling_twaFROM freezer_tempsWINDOW fifteen_min AS (PARTITION BY freezer_id ORDER BY ts RANGE &#39;15 minutes&#39;::interval PRECEDING)ORDER BY freezer_id, ts;\n freezer_id | ts | temperature | rolling_twa ------------+------------------------+-------------+-------------------- 1 | 2020-01-01 00:00:00+00 | 4 | 1 | 2020-01-01 00:05:00+00 | 5.5 | 4.75 1 | 2020-01-01 00:10:00+00 | 3 | 4.5 1 | 2020-01-01 00:15:00+00 | 4 | 4.166666666666667 1 | 2020-01-01 00:20:00+00 | 3.5 | 3.8333333333333335 1 | 2020-01-01 00:25:00+00 | 8 | 4.333333333333333 1 | 2020-01-01 00:30:00+00 | 9 | 6 1 | 2020-01-01 00:31:00+00 | 10.5 | 7.363636363636363 1 | 2020-01-01 00:31:30+00 | 11 | 7.510869565217392 1 | 2020-01-01 00:32:00+00 | 15 | 7.739583333333333 1 | 2020-01-01 00:32:30+00 | 20 | 8.13 1 | 2020-01-01 00:33:00+00 | 18.5 | 8.557692307692308 1 | 2020-01-01 00:33:30+00 | 17 | 8.898148148148149 1 | 2020-01-01 00:34:00+00 | 15.5 | 9.160714285714286 1 | 2020-01-01 00:34:30+00 | 14 | 9.35344827586207 1 | 2020-01-01 00:35:00+00 | 12.5 | 9.483333333333333 1 | 2020-01-01 00:35:30+00 | 11 | 11.369047619047619 1 | 2020-01-01 00:36:00+00 | 10 | 11.329545454545455 1 | 2020-01-01 00:40:00+00 | 7 | 10.575 1 | 2020-01-01 00:45:00+00 | 5 | 9.741666666666667\n The window here is over the previous 15 minutes, ordered by time. And it looks like we stayed below our ice-crystallization temperature!\n We also provide a special   rollup function so you can re-aggregate time-weighted values from subqueries. For instance:\n SELECT average(rollup(time_weight)) as time_weighted_average FROM (SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, \t\tfreezer_id, \t\ttime_weight(&#39;Linear&#39;, ts, temperature)\tFROM freezer_temps\tGROUP BY bucket, freezer_id) t;\n  This will give us the same output as a grand total of the first equation because we\u2019re just re-aggregating the bucketed values.\n But this is mainly there so that you can do more interesting analysis, like, say, normalizing each ten-minute time-weighted average by freezer to the overall time-weighted average.\n WITH t as (SELECT time_bucket(&#39;10 mins&#39;::interval, ts) as bucket, \t\tfreezer_id, \t\ttime_weight(&#39;Linear&#39;, ts, temperature)\tFROM freezer_temps\tGROUP BY bucket, freezer_id) SELECT bucket, \tfreezer_id, \taverage(time_weight) as bucketed_twa, \t(SELECT average(rollup(time_weight)) FROM t) as overall_twa, \taverage(time_weight) / (SELECT average(rollup(time_weight)) FROM t) as normalized_twaFROM t;\n This kind of feature (storing the time-weight for analysis later) is most useful in a  continuous aggregate, and it just so happens that we\u2019ve designed our time-weighted average to be usable in that context!\n We\u2019ll be going into more detail on that in a future post, so be sure to  subscribe to our newsletter so you can get notified when we publish new technical content.\n  If you\u2019d like to get started with the time_weight hyperfunction - and many more - right away, spin up a fully managed TimescaleDB service: create an account to  try it for free for 30 days. Hyperfunctions are pre-loaded on each new database service on Timescale Forge, so after you create a new service, you\u2019re all set to use them!\n If you prefer to manage your own database instances, you can  download and install the timescaledb_toolkit extension on GitHub, after which you\u2019ll be able to use time_weight and all other hyperfunctions.\n **If you have questions or comments on this blog post,  we\u2019ve started a discussion on our GitHub page, and we\u2019d love to hear from you. (And, if you like what you see, GitHub \u2b50 are always welcome and appreciated too!)\n We love building in public, and you can view our  upcoming roadmap on GitHub for a list of proposed features, features we\u2019re currently implementing, and features available to use today.\n We\u2019d like to give a special thank\n......", "posttime": "2021-07-27 09:26:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a0\u6743,weighted,\u65f6\u95f4", "title": "\u4ec0\u4e48\u662f\u65f6\u95f4\u52a0\u6743\u5e73\u5747\u503c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f60\u5e94\u8be5\u5173\u5fc3", "title_en": "What time-weighted averages are and why you should care", "transed": 1, "url": "https://blog.timescale.com/blog/what-time-weighted-averages-are-and-why-you-should-care/?", "via": "", "real_tags": ["\u52a0\u6743", "weighted", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "07773c1a697d3d1ea645c9fa3cbc9c78.png", "infoid": 1069926, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u4e00\u5bb6\u795e\u79d8\u7684\u8425\u9500\u673a\u6784\u79d8\u5bc6\u63d0\u51fa\u5411\u793e\u4ea4\u5a92\u4f53\u660e\u661f\u652f\u4ed8\u62a5\u916c\uff0c\u4ee5\u4f20\u64ad\u6709\u5173 Covid-19 \u75ab\u82d7\u7684\u865a\u5047\u4fe1\u606f\uff0c\u201d\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u62a5\u9053\u3002 \u201c\u5f53\u7f51\u7ea2\u516c\u5f00\u62db\u52df\u4ed6\u4eec\u7684\u4f01\u56fe\u65f6\uff0c\u4ed6\u4eec\u7684\u8ba1\u5212\u5931\u8d25\u4e86\u3002\u201d\u4e00\u5bb6\u540d\u4e3a Fazze \u7684\u7f51\u7ea2\u8425\u9500\u673a\u6784\u63d0\u51fa\u652f\u4ed8 [Mirko D...", "note_en": "\"A mysterious marketing agency secretly offered to pay social media stars to spread disinformation about Covid-19 vaccines,\" reports the BBC. \"Their plan failed when the influencers went public about the attempt to recruit them.\"An influencer marketing agency called Fazze offered to pay [Mirko D...", "posttime": "2021-07-27 08:48:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "youtube,\u660e\u661f,stars,\u652f\u4ed8", "title": "YouTube \u660e\u661f\u88ab\u63d0\u4f9b\u8d44\u91d1\u4ee5\u4f20\u64ad\u75ab\u82d7\u9519\u8bef\u4fe1\u606f", "title_en": "YouTube stars were offered money to spread vaccine misinformation", "transed": 1, "url": "https://news.slashdot.org/story/21/07/25/1351226/youtube-stars-were-offered-money-to-spread-vaccine-misinformation", "via": "", "real_tags": ["youtube", "\u660e\u661f", "stars", "\u652f\u4ed8"]}, {"category": "", "categoryclass": "", "imagename": "c2d5eeba437bfd214fdebd09353f0179.jpg", "infoid": 1069925, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e09\u661f\u5e76\u4e0d\u5e0c\u671b\u5728 8 \u6708 11 \u65e5\u7684 Unpacked \u6d3b\u52a8\u4e2d\u5e26\u6765\u592a\u591a\u60ca\u559c\u3002\u6cc4\u5bc6\u4e8b\u4ef6\u5df2\u7ecf\u62ab\u9732\u4e86 Galaxy Z Fold 3\u3001Galaxy Z Flip 3\u3001\u51e0\u6b3e\u65b0\u7684 Galaxy \u667a\u80fd\u624b\u8868\u548c\u65b0\u7684 Galaxy Buds 2\u3002 \u73b0\u5728\uff0c\u4e09\u661f\u79fb\u52a8\u603b\u88c1 TM Roh \u6b63\u5728\u5ef6\u7eed\u6700\u8fd1\u53d1\u5e03\u7684\u6d3b\u52a8\u524d\u535a\u5ba2\u6587\u7ae0\u7684\u4f20\u7edf\u4e00\u4e9b\u65b0\u95fb\uff0c\u8bbe\u5b9a\u671f\u671b\uff0c\u5e76\u6697\u793a\u4e00\u4e9b\u989d\u5916\u7684\u7ec6\u8282\u3002 Roh \u627f\u8bfa\u63d0\u9ad8\u6298\u53e0\u5c4f\u5e55\u7684\u8010\u7528\u6027\u3001\u624b\u5199\u7b14\u652f\u6301\uff0c\u5e76\u4e14\u4e09\u661f\u8fd9\u6b21\u4e0d\u4f1a\u53d1\u5e03\u65b0\u7684 Note \u624b\u673a\u3002\u5c3d\u7ba1\u4e0a\u56fe\u4e2d\u7684 Unpacked \u9080\u8bf7\u51fd\u5e76\u6ca1\u6709\u7ed9\u4eba\u592a\u591a\u60f3\u8c61\uff0c\u4f46 Roh \u53ea\u662f\u51fa\u6765\u8bf4\u4eca\u5e74\u5c06\u63a8\u51fa\u65b0\u7684\u53ef\u6298\u53e0\u8bbe\u5907\uff1a\u201c\u6211\u4eec\u7684\u7b2c\u4e09\u4ee3\u53ef\u6298\u53e0\u8bbe\u5907\u5c06\u5f00\u542f\u60ca\u4eba\u7684\u65b0\u591a\u4efb\u52a1\u5904\u7406\u80fd\u529b\u5e76\u589e\u5f3a\u8010\u7528\u6027\uff0c\u201d\u4ed6\u5199\u9053.\u9700\u8981\u6ce8\u610f\u7684\u5173\u952e\u8bcd\u662f\u201c\u589e\u5f3a\u8010\u7528\u6027\u201d\uff0cRoh \u5728\u8c08\u5230 Z Flip 3 \u65f6\u518d\u6b21\u63d0\u5230\u4e86\u8fd9\u4e2a\u4e3b\u9898\uff0c\u4ed6\u5199\u9053\uff0c\u5b83\u5c06\u62e5\u6709\u201c\u66f4\u7cbe\u81f4\u7684\u98ce\u683c\uff0c\u914d\u5907\u66f4\u8010\u7528\u3001\u66f4\u575a\u56fa\u7684\u6750\u6599\u201d\u3002\u4e09\u661f\u6298\u53e0\u624b\u673a\u7684\u6bcf\u4e00\u6b21\u8fde\u7eed\u8fed\u4ee3\u90fd\u63d0\u9ad8\u4e86\u5c4f\u5e55\u7684\u8010\u7528\u6027\u2014\u2014\u4ece\u7b2c\u4e00\u4e2a\u88ab\u53d6\u6d88\u7684\u4ea7\u54c1\u7684\u5f7b\u5e95\u5d29\u6e83\u5f00\u59cb\uff0c\u5230\u7cbe\u81f4\u7684\u5851\u6599\u5c4f\u5e55\uff0c\u6700\u540e\u662f\u201c\u8d85\u8584\u73bb\u7483\u201d\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u4e09\u661f\u5c06\u5982\u4f55\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8010\u7528\u6027\uff0c\u4f46\u7edd\u5bf9\u4ecd\u6709\u6539\u8fdb\u7684\u7a7a\u95f4\u3002\u6700\u8fd1\u7684\u6cc4\u6f0f\u8868\u660e\u8fd9\u4e24\u6b3e\u6298\u53e0\u624b\u673a\u53ef\u80fd\u5177\u6709 IPX8 \u9632\u6c34\u6027\u80fd\uff0c\u8fd9\u53ef\u80fd\u662f\u8010\u7528\u6027\u6545\u4e8b\u7684\u4e00\u90e8\u5206\u3002\u8010\u7528\u6027\u662f\u6298\u53e0\u624b\u673a\u7684\u4e00\u9879\u91cd\u8981\u89c4\u683c\uff0c\u4f46\u5bf9\u4e8e\u5373\u5c06\u63a8\u51fa\u7684 Z Fold 3 \u6765\u8bf4\u5c06\u66f4\u52a0\u91cd\u8981\uff0cRoh \u786e\u8ba4\u5b83\u5c06\u652f\u6301\u624b\u5199\u7b14\u3002\u4f46\u662f\uff0c\u5b83\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u4e13\u4e3a Galaxy S21 Ultra \u8bbe\u8ba1\u7684\u73b0\u6709 S Pen\uff0c\u56e0\u4e3a Roh \u8868\u793a\u4e09\u661f\u5c06\u5ba3\u5e03\u201c\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b3e\u4e13\u4e3a\u53ef\u6298\u53e0\u624b\u673a\u8bbe\u8ba1\u7684 S Pen\u201d\u3002\u6700\u8fd1\u5728 91mobiles \u4e0a\u7684\u6cc4\u5bc6\u4e8b\u4ef6\u8868\u660e\uff0cGalaxy Z Fold 3 \u5c06\u6709\u4e00\u4e2a\u7bb1\u5b50\u53ef\u4ee5\u5b58\u653e\u65b0\u7684 S Pen\uff0c\u76f4\u63a5\u63d2\u5165\u94f0\u94fe\u540e\u9762\u7684\u4e2d\u95f4\u3002\nRoh \u8fd8\u8bbe\u5b9a\u4e86\u53e6\u4e00\u4e2a\u9884\u671f\uff1a\u4eca\u5e74\u4e0d\u4f1a\u53d1\u5e03 Galaxy Note\uff0c\u4ed6\u5199\u9053\uff1a\u201c\u8fd9\u6b21\u6211\u4eec\u4e0d\u4f1a\u63a8\u51fa\u65b0\u7684 Galaxy Note\uff0c\u800c\u662f\u5c06\u5fc3\u7231\u7684 Note \u529f\u80fd\u8fdb\u4e00\u6b65\u6269\u5c55\u5230\u66f4\u591a\u4e09\u661f Galaxy \u8bbe\u5907\u3002\u201d\u4e09\u661f\u6697\u793a\u5b83\u53ef\u80fd\u4f1a\u5728\u4eca\u5e74 3 \u6708\u4efd\u8df3\u8fc7\u751f\u4ea7 Note\uff0c\u5f53\u65f6\u5b83\u5728\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\u201c\u5728\u4e00\u5e74\u5185\u63a8\u51fa\u4e24\u6b3e\u65d7\u8230\u673a\u578b\u53ef\u80fd\u662f\u4e00\u79cd\u8d1f\u62c5\u3002\u201d\u8fd9\u53ef\u80fd\u662f\u5bf9\u6301\u7eed\u82af\u7247\u77ed\u7f3a\u7684\u5f15\u7528\uff0c\u4f46\u603b\u4f53\u800c\u8a00\uff0cNote \u7cfb\u5217\u8fd8\u6709\u5176\u4ed6\u95ee\u53f7\u3002\u65e2\u7136\u666e\u901a\u7684\u4e09\u661f Galaxy S21 \u7cfb\u5217\u90fd\u652f\u6301\u624b\u5199\u7b14\uff0c\u90a3\u4e48\u8d2d\u4e70 Note \u7684\u4e3b\u8981\u597d\u5904\u4f3c\u4e4e\u662f\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u5b58\u653e\u624b\u5199\u7b14\u3002\u4e09\u661f\u662f\u5426\u771f\u7684\u6253\u7b97\u7ee7\u7eed\u751f\u4ea7 Galaxy Note \u8bbe\u5907\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u6700\u540e\uff0cRoh \u7684\u5e16\u5b50\u6a21\u7cca\u5730\u63d0\u5230\u4e86\u201c\u4e0e\u8c37\u6b4c\u548c\u5fae\u8f6f\u7b49\u503c\u5f97\u4fe1\u8d56\u7684\u884c\u4e1a\u9886\u5bfc\u8005\u7684\u5408\u4f5c\u201d\uff0c\u6697\u793a\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5bf9 Z Fold 3 \u7684\u591a\u4efb\u52a1\u5904\u7406\u63d0\u4f9b\u66f4\u597d\u7684\u652f\u6301\u3002\u5e0c\u671b\u8fd9\u4e5f\u610f\u5473\u7740\u4e09\u661f\u3001\u8c37\u6b4c\u548c\u5fae\u8f6f\u6b63\u5728\u5171\u540c\u52aa\u529b\u89c4\u8303\u591a\u4efb\u52a1\u5904\u7406\u5728 Android \u4e0a\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u81ea\u4ece\u6298\u53e0\u624b\u673a\u5f00\u59cb\u51fa\u73b0\u4ee5\u6765\uff0c\u788e\u7247\u5316\u7684\u5e7d\u7075\u5c31\u4e00\u76f4\u56f0\u6270\u7740\u4ed6\u4eec\u3002\u4e09\u661f\u548c\u5fae\u8f6f\u5404\u81ea\u4e3a\u5982\u4f55\u7ec4\u7ec7\u548c\u7ba1\u7406\u5176\u5c4f\u5e55\u4e0a\u7684\u4e0d\u540c\u7a97\u53e3\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u4f53\u9a8c\u3002\u5c3d\u7ba1\u8c37\u6b4c\u5b9a\u671f\u5411 Android \u6dfb\u52a0\u5bf9\u6298\u53e0\u529f\u80fd\u7684\u652f\u6301\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u91c7\u53d6\u5f3a\u6709\u529b\u7684\u63aa\u65bd\u6765\u786e\u4fdd\u6765\u81ea\u4e0d\u540c\u5236\u9020\u5546\u7684\u624b\u673a\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u6700\u540e\uff0cRoh \u8868\u793a\u4e09\u661f\u4e0e\u8c37\u6b4c\u5728\u65b0\u7684 Wear OS 3 \u667a\u80fd\u624b\u8868\u5e73\u53f0\u4e0a\u7684\u5408\u4f5c\u3002\u4ed6\u786e\u8ba4\u4e09\u661f\u5c06\u7ee7\u7eed\u5c06\u5176\u624b\u8868\u4e0e\u5176 Galaxy \u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u96c6\u6210\uff0c\u5e76\u6307\u51fa\u4e09\u661f\u5065\u5eb7\u548c SmartThings \u5c06\u7ee7\u7eed\u5728\u624b\u8868\u4e0a\u51fa\u73b0\u3002\u4e09\u661f 2020 \u5e74\u79cb\u5b63 Unpacked \u6d3b\u52a8\u5c06\u4e8e 8 \u6708 11 \u65e5\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4\u4e0a\u5348 10 \u70b9/\u592a\u5e73\u6d0b\u65f6\u95f4\u4e0a\u5348 7 \u70b9\u5728\u7ebf\u3002\u4f60\u53ef\u4ee5\u671f\u5f85\u5f53\u5929\u7684\u5168\u9762\u62a5\u9053\u2014\u2014\u5728\u90a3\u4e4b\u524d\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u6cc4\u6f0f\u3002", "note_en": "Samsung isn\u2019t looking to have many surprises at its  August 11th Unpacked event. Leaks have already revealed the  Galaxy Z Fold 3, Galaxy Z Flip 3, a couple of new  Galaxy smartwatches, and  new Galaxy Buds 2. Now, Samsung mobile president TM Roh is continuing a recent tradition of  publishing a pre-event blog post that confirms some news, sets expectations, and hints at some additional details. Roh promises improved durability for folding screens, stylus support, and that Samsung will  not release a new Note phone this time around.\n Although the  Unpacked invitation pictured above didn\u2019t leave much to the imagination, Roh simply comes out and says there will be new foldables this year: \u201cOur third generation of foldable devices will open up amazing new multitasking capabilities and enhanced durability,\u201d he writes.\n The key phrase to pay attention to there is \u201cenhanced durability,\u201d a theme Roh hits on again when he touches on the Z Flip 3, writing that it will have \u201can even more refined style, armed with more durable, stronger materials.\u201d\n  Each successive iteration of Samsung\u2019s folding phones has improved screen durability \u2014 starting from the total debacle of the first canceled product on through a refined plastic screen and finally \u201cUltra Thin Glass.\u201d It\u2019s as yet unclear what exactly Samsung will do to improve durability further, but there\u2019s absolutely still  room to improve.\n A recent leak shows that the  two folding phones may have IPX8 water resistance, which could be part of this durability story.\n Durability is a vital spec for folding phones, but it will be doubly important for the upcoming Z Fold 3, which Roh confirms will have stylus support. It may not work with the existing S Pens that are designed for the Galaxy S21 Ultra, however, as Roh indicates that Samsung will announce \u201cthe first-ever S Pen designed specifically for foldable phones.\u201d\n A  recent leak at  91mobiles shows that there will be a case for the Galaxy Z Fold 3 that will have a place to store the new S Pen, slotted directly in the middle behind the hinge.\n   Roh is also setting another expectation: there won\u2019t be a Galaxy Note announced this year, writing: \u201cinstead of unveiling a new Galaxy Note this time around, we will further broaden beloved Note features to more Samsung Galaxy devices.\u201d\n Samsung hinted that it might skip making a Note this year in March, when, in  an earnings call, it said that \u201cit could be a burden to unveil two flagship models in a year.\u201d That\u2019s likely a reference to the ongoing chip shortage, but there are other question marks around the Note line in general. Now that the regular Samsung Galaxy S21 line has stylus support, it seems the main benefit of getting a Note is having a place to store the stylus. It\u2019s an open question whether Samsung actually intends to continue making Galaxy Note devices.\n Finally, Roh\u2019s post makes some vague references to \u201ccollaborations with trusted industry leaders like Google and Microsoft,\u201d with a hint that it could mean better support for multitasking on the Z Fold 3.\n Hopefully, it also means that Samsung, Google, and Microsoft are working together to normalize how multitasking works on Android. Ever since folding phones started appearing, the  specter of fragmentation has haunted them. Samsung and Microsoft each offer different experiences for how to organize and manage different windows on their screens. Although Google has regularly added support for folding features to Android, it hasn\u2019t taken a strong hand in ensuring phones from different manufacturers work in the same way.\n  Finally, Roh gestures to Samsung\u2019s collaboration with Google on the new Wear OS 3 smartwatch platform. He confirms that Samsung will continue to integrate its watches with its Galaxy software ecosystem, pointing out that both Samsung health and SmartThings will continue to be on the watch.\n Samsung\u2019s fall 2020 Unpacked event will be online only on August 11th at 10AM ET / 7AM PT. You can expect full coverage that day \u2014 and likely more leaks before then.", "posttime": "2021-07-27 08:40:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u624b\u673a,\u8bbe\u8ba1,galaxy,\u4e09\u661f", "title": "\u4e09\u661f\u786e\u8ba4\u4e0d\u4f1a\u5728 8 \u6708 11 \u65e5\u7684 Unpacked \u6d3b\u52a8\u4e2d\u63a8\u51fa Galaxy Note\uff0c\u5e76\u8868\u793a\u5c06\u63a8\u51fa\u65b0\u7684 Galaxy Z \u624b\u673a\u548c\u4e13\u4e3a\u53ef\u6298\u53e0\u8bbe\u5907\u8bbe\u8ba1\u7684 S Pen", "title_en": "Samsung confirms that it won't launch Galaxy Note at its Unpacked event on Aug. 11, says it will launch new Galaxy Z phones and an S Pen designed for foldables", "transed": 1, "url": "https://www.theverge.com/2021/7/26/22594685/samsung-z-fold-3-stylus-support-note-durability?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u624b\u673a", "\u8bbe\u8ba1", "galaxy", "\u4e09\u661f"]}, {"category": "", "categoryclass": "", "imagename": "3cd425f1a70d099254391121bde6d652.jpg", "infoid": 1069924, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f\u2014\u2014\u84dd\u8272\u8d77\u6e90\u521b\u59cb\u4eba\u6770\u592b\u8d1d\u7d22\u65af\u8868\u793a\uff0c\u5982\u679c\u7f8e\u56fd\u5b87\u822a\u5c40\u6388\u4e88\u5b83\u7b2c\u4e8c\u4efd\u8f7d\u4eba\u7740\u9646\u7cfb\u7edf\uff08HLS\uff09\u5408\u540c\uff0c\u4ed6\u7684\u516c\u53f8\u5c06\u627f\u62c5\u8d85\u8fc7 20 \u4ebf\u7f8e\u5143\u7684\u6210\u672c\u3002\u8d1d\u7d22\u65af\u5728 7 \u6708 26 \u65e5\u81f4\u7f8e\u56fd\u5b87\u822a\u5c40\u5c40\u957f\u6bd4\u5c14\u7eb3\u5c14\u900a\u7684\u4e00\u5c01\u4fe1\u4e2d\u8868\u793a\uff0c\u5982\u679c\u7f8e\u56fd\u5b87\u822a\u5c40\u6388\u4e88\u8be5\u516c\u53f8 HLS \u5956\u52b1\uff0c\u8be5\u516c\u53f8\u5c06\u5728\u65b0\u5956\u9879\u7684\u5934\u51e0\u5e74\u514d\u9664\u9ad8\u8fbe 20 \u4ebf\u7f8e\u5143\u7684\u4ed8\u6b3e\uff0c\u5e76\u652f\u4ed8\u6f14\u793a\u4efb\u52a1\u7684\u8d39\u7528\u3002 SpaceX \u5728 4 \u6708\u4efd\u6536\u5230\u7684\u7528\u4e8e\u5f00\u53d1\u548c\u6f14\u793a\u8f7d\u4eba\u767b\u6708\u7740\u9646\u5668\u3002\u8d1d\u7d22\u65af\u5728\u4fe1\u4e2d\u5199\u9053\uff1a\u201c\u6211\u4eec\u968f\u65f6\u51c6\u5907\u5e2e\u52a9 NASA \u964d\u4f4e\u5176\u6280\u672f\u98ce\u9669\u5e76\u89e3\u51b3\u5176\u9884\u7b97\u9650\u5236\uff0c\u5e76\u4f7f Artemis \u8ba1\u5212\u91cd\u65b0\u8d70\u4e0a\u66f4\u5177\u7ade\u4e89\u529b\u3001\u53ef\u4fe1\u5ea6\u548c\u53ef\u6301\u7eed\u53d1\u5c55\u7684\u9053\u8def\u3002\u201d\u8d1d\u7d22\u65af\u5728\u63d0\u6848\u4e2d\u8868\u793a\uff0cBlue Origin \u5c06\u514d\u9664\u672c\u8d22\u5e74\u548c\u4e0b\u4e24\u4e2a\u8d22\u5e74\u7684\u4efb\u4f55\u4ed8\u6b3e\uff0c\u6700\u9ad8\u53ef\u8fbe 20 \u4ebf\u7f8e\u5143\u3002 \u201c\u8fd9\u4e2a\u63d0\u8bae\u4e0d\u662f\u5ef6\u671f\uff0c\u800c\u662f\u5f7b\u5e95\u548c\u6c38\u4e45\u5730\u653e\u5f03\u8fd9\u4e9b\u4ed8\u6b3e\uff0c\u201d\u4ed6\u5199\u9053\u3002 \u201c\u8fd9\u9879\u63d0\u8bae\u4e3a\u653f\u5e9c\u62e8\u6b3e\u884c\u52a8\u63d0\u4f9b\u4e86\u65f6\u95f4\u6765\u8fce\u5934\u8d76\u4e0a\u3002\u201d Blue Origin \u8fd8\u5c06\u81ea\u8d39\u6267\u884c\u201c\u63a2\u8def\u8005\u4efb\u52a1\u5230\u6708\u7403\u4e0b\u964d\u5143\u4ef6\u7684\u4f4e\u5730\u7403\u8f68\u9053\uff0c\u4ee5\u8fdb\u4e00\u6b65\u9000\u51fa\u5f00\u53d1\u548c\u5b89\u6392\u98ce\u9669\u3002\u201d\u8fd9\u5c06\u662f\u5bf9\u65e0\u4eba\u767b\u6708\u6f14\u793a\u7684\u8865\u5145\uff0c\u8be5\u516c\u53f8\u79f0\u8fd9\u662f\u5176\u5f00\u53d1\u6708\u7403\u7740\u9646\u5668\u7cfb\u7edf\u201c\u57fa\u7ebf\u8ba1\u5212\u201d\u7684\u4e00\u90e8\u5206\u3002 Bezos \u8865\u5145\u8bf4\uff0cBlue Origin \u5c06\u63a5\u53d7\u4e00\u4efd\u56fa\u5b9a\u4ef7\u683c\u7684\u5de5\u4f5c\u5408\u540c\uff0c\u8fd9\u662f NASA \u5bf9 HLS \u5df2\u7ecf\u8981\u6c42\u7684\u3002\u8fd9\u5c01\u4fe1\u662f\u8ba9 NASA \u6388\u4e88\u7b2c\u4e8c\u4efd HLS \u5408\u540c\u7684\u6700\u65b0\u63d0\u8bae\uff0c\u8fd9\u662f\u8be5\u673a\u6784\u6700\u521d\u8ba1\u5212\u7684\u3002\u7136\u800c\uff0c\u7531\u4e8e\u9884\u7b97\u9650\u5236\uff0c\u5b83\u5728 4 \u6708\u5ba3\u5e03\u5c06\u5411 SpaceX \u9881\u53d1\u5355\u4e00\u7684 HLS \u5956\u9879\u3002 SpaceX \u7684\u51fa\u4ef7\u6700\u4f4e\uff0c\u4e3a 29 \u4ebf\u7f8e\u5143\uff0c\u800c\u84dd\u8272\u8d77\u6e90\u9886\u5bfc\u7684\u201c\u56fd\u5bb6\u961f\u201d\u4e3a 59.9 \u4ebf\u7f8e\u5143\uff0c\u7b2c\u4e09\u4f4d\u7ade\u6807\u8005 Dynetics \u4e3a 85-9 \u4ebf\u7f8e\u5143\u3002\nBlue Origin \u7684\u5b98\u5458\u62b1\u6028\u8bf4\uff0c\u4e0e SpaceX \u4e0d\u540c\uff0c\u4ed6\u4eec\u5728 HLS \u7ade\u8d5b\u671f\u95f4\u6ca1\u6709\u5f97\u5230\u4fee\u6539\u4ef7\u683c\u7684\u673a\u4f1a\uff0c\u8d1d\u7d22\u65af\u5728\u4ed6\u7684\u4fe1\u4e2d\u91cd\u7533\u4e86\u8fd9\u4e00\u8bba\u70b9\u3002 \u201c\u90a3\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u8fd9\u662f\u4e0d\u5bfb\u5e38\u7684\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u9519\u5931\u7684\u673a\u4f1a\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u7531\u4e8e\u8fd1\u671f\u9884\u7b97\u95ee\u9898\uff0c\u7f8e\u56fd\u5b87\u822a\u5c40\u6539\u53d8\u4e86\u5176\u6700\u521d\u7684\u53cc\u6e90\u91c7\u8d2d\u6218\u7565\uff0c\u800c\u8fd9\u4e00\u63d0\u8bae\u6d88\u9664\u4e86\u8fd9\u4e00\u969c\u788d\u3002\u201d NASA \u5b98\u5458\u5728 4 \u6708\u4efd\u8868\u793a\uff0c\u7531\u4e8e\u53ef\u7528\u8d44\u91d1\u6709\u9650\uff0c\u4ed6\u4eec\u6ca1\u6709\u8fdb\u884c\u8c08\u5224\u3002 \u201c\u6211\u4ec0\u81f3\u6ca1\u6709\u8db3\u591f\u7684\u8d44\u91d1\u6765\u5c1d\u8bd5\u4e0e Blue Origin \u8c08\u5224\u4e00\u4e2a\u53ef\u80fd\u4f1a\u6388\u4e88\u5408\u540c\u7684\u4ef7\u683c\uff0c\u201d\u7f8e\u56fd\u5b87\u822a\u5c40\u4eba\u7c7b\u63a2\u7d22\u548c\u8fd0\u8425\u526f\u5c40\u957f\u51ef\u897f\u00b7\u5362\u5fb7\u65af\u5728\u6765\u6e90\u9009\u62e9\u58f0\u660e\u4e2d\u5199\u9053\uff0c\u5979\u6982\u8ff0\u4e86\u5979\u9009\u62e9\u7684\u7406\u7531\u53ea\u6709SpaceX\u3002 Blue Origin \u548c Dynetics \u5747\u5c31 HLS \u5956\u9879\u5411\u653f\u5e9c\u95ee\u8d23\u5c40\u63d0\u51fa\u6297\u8bae\u3002 GAO \u6709\u4e00\u4e2a 8 \u6708 4 \u65e5\u7684\u6700\u540e\u671f\u9650\u6765\u88c1\u51b3\u6297\u8bae\u6d3b\u52a8\u3002\u673a\u6784\u5b98\u5458\u62d2\u7edd\u8ba8\u8bba\u6709\u5173\u5176 HLS \u8ba1\u5212\u7684\u7ec6\u8282\uff0c\u7406\u7531\u662f\u6297\u8bae\u6d3b\u52a8\u9020\u6210\u4e86\u201c\u505c\u7535\u201d\u3002\u5c3c\u5c14\u68ee\u5728 7 \u6708 21 \u65e5\u534e\u76db\u987f\u90ae\u62a5\u7684\u7f51\u7edc\u7814\u8ba8\u4f1a\u4e0a\u8bf4\uff1a\u201c\u7531\u4e8e\u5b58\u5728\u4e89\u8bae\uff0c\u4e0e SpaceX \u7684\u5408\u540c\u73b0\u5728\u88ab\u6401\u7f6e\u3002\u201d \u201c\u6211\u4eec\u671f\u5f85\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u53d1\u5e03\u516c\u544a\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u8fdb\u884c\u3002\u201d\u7eb3\u5c14\u900a\u6e38\u8bf4\u56fd\u4f1a\u63d0\u4f9b\u989d\u5916\u8d44\u91d1\uff0c\u4ee5\u4fbf\u65e0\u8bba GAO \u6297\u8bae\u7684\u7ed3\u679c\u5982\u4f55\uff0c\u90fd\u80fd\u652f\u6301\u7b2c\u4e8c\u5bb6 HLS \u63d0\u4f9b\u5546\u3002\u4ed6\u5728\u7f51\u7edc\u7814\u8ba8\u4f1a\u4e0a\u8bf4\uff1a\u201c\u6211\u4eec\u9700\u8981\u66f4\u591a\u7684\u94b1\u6765\u52a0\u5f3a\u548c\u4fc3\u6210\u8fd9\u79cd\u7ade\u4e89\uff0c\u4ee5\u4fbf\u6709\u5176\u4ed6\u53c2\u4e0e\u8005\u53c2\u4e0e\u8fdb\u6765\u3002\u201d\u4ed6\u6b64\u524d\u66fe\u544a\u8bc9\u56fd\u4f1a\u62e8\u6b3e\u8005\uff0cNASA \u5c06\u9700\u8981 54 \u4ebf\u7f8e\u5143\u7684\u989d\u5916\u8d44\u91d1\u6765\u652f\u6301\u7b2c\u4e8c\u5bb6 HLS \u63d0\u4f9b\u5546\uff0c\u8fd9\u8868\u660e\u8fd9\u7b14\u8d44\u91d1\u53ef\u4ee5\u5305\u542b\u5728\u5355\u72ec\u7684\u5c31\u4e1a\u548c\u57fa\u7840\u8bbe\u65bd\u8d44\u91d1\u8ba1\u5212\u4e2d\u3002\u7136\u800c\uff0c\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u6b64\u7c7b\u8d44\u91d1\u4f1a\u88ab\u5305\u62ec\u5728\u5185\uff0c\u4f17\u8bae\u9662\u7248\u672c\u7684 2022 \u8d22\u5e74\u652f\u51fa\u6cd5\u6848\u4e3a HLS \u63d0\u4f9b\u4e86 13.45 \u4ebf\u7f8e\u5143\uff0c\u4ec5\u6bd4\u8be5\u673a\u6784\u7684\u8981\u6c42\u9ad8\u51fa 1.5 \u4ebf\u7f8e\u5143\u3002", "note_en": "WASHINGTON \u2014 Blue Origin founder Jeff Bezos says his company will cover more than $2 billion in costs if NASA will award it a second Human Landing System (HLS) contract.\n In  a July 26 letter to NASA Administrator Bill Nelson, Bezos said the company would waive up to $2 billion in payments in the first years of a new award, as well as pay for a demonstration mission, should NASA give the company an HLS award like the one SpaceX received in April to develop and demonstrate a crewed lunar lander.\n \u201cWe stand ready to help NASA moderate its technical risks and solve its budgetary constraints and put the Artemis Program back on a more competitive, credible, and sustainable path,\u201d Bezos wrote in the letter.\n  In his proposal, Bezos said that Blue Origin will waive any payments both in the current fiscal year as well as the next two, up to $2 billion. \u201cThis offer is not a deferral, but is an outright and permanent waiver of those payments,\u201d he wrote. \u201cThis offer provides time for government appropriation actions to catch up.\u201d\n Blue Origin would also carry out at its own expense \u201ca pathfinder mission to low-Earth orbit of the lunar descent element to further retire development and schedule risks.\u201d That would be in addition to an uncrewed lunar landing demonstration that the company says was part of its \u201cbaseline plan\u201d for developing the lunar lander system.\n Bezos added that Blue Origin would accept a firm-fixed-price contract for the work, something that NASA had already required for HLS.\n The letter is the latest bid to get NASA to award a second HLS contract, something the agency had originally planned. However, in April  it announced it was making a single HLS award to SpaceX because of budget constraints. SpaceX offered the lowest bid at $2.9 billion, compared to $5.99 billion by the Blue Origin-led \u201cNational Team\u201d and $8.5\u20139 billion by Dynetics, the third bidder.\n Blue Origin officials complained that, unlike SpaceX, they were not given a change to revise their price during the HLS competition, an argument Bezos reiterated in his letter. \u201cThat was a mistake, it was unusual, and it was a missed opportunity,\u201d he said. \u201cNASA veered from its original dual-source acquisition strategy due to perceived near-term budgetary issues, and this offer removes that obstacle.\u201d\n NASA officials said in April they did not negotiate because of the limited funding it had available. \u201cI do not have enough funding available to even attempt to negotiate a price from Blue Origin that could potentially enable a contract award,\u201d Kathy Lueders, NASA associate administrator for human exploration and operations, wrote in the source selection statement outlining her rationale for selecting only SpaceX.\n Both Blue Origin and Dynetics filed protests with the Government Accountability Office regarding the HLS awards. The GAO has an Aug. 4 deadline to rule on the protests.\n Agency officials have declined to discuss details about its HLS plans, citing a \u201cblackout\u201d imposed by the protest. \u201cThe contract to SpaceX is held in abeyance right now as it is contested,\u201d Nelson said in a July 21 webinar by  The Washington Post. \u201cWe\u2019re expecting an announcement in the next few weeks and, on the basis of that, we will then proceed.\u201d\n Nelson has lobbied Congress for additional funding to be able to support a second HLS provider regardless of the outcome of the GAO protests. \u201cWe need some more money to enhance and procure that competition so that there are other players that get involved,\u201d he said in the webinar.\n He previously told congressional appropriators that  NASA would need $5.4 billion in additional funding to support a second HLS provider, suggesting that money could be included in a separate jobs and infrastructure funding package. However, there\u2019s been no sign that such funding would be included, and  a House version of a fiscal year 2022 spending bill provided $1.345 billion for HLS, just $150 million above the agency\u2019s request.", "posttime": "2021-07-27 08:39:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nasa,offers,hls", "title": "\u8d1d\u7d22\u65af\u4e3a NASA \u767b\u6708\u5668\u5408\u540c\u63d0\u4f9b\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u5956\u52b1", "title_en": "Bezos offers billions in incentives for NASA lunar lander contract", "transed": 1, "url": "https://spacenews.com/bezos-offers-billions-in-incentives-for-nasa-lunar-lander-contract/", "via": "", "real_tags": ["nasa", "offers", "hls"]}]
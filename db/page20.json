[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074013, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OCamlPro\u521b\u5efa\u4e8e2011\u5e74\uff0c\u65e8\u5728\u5021\u5bfc\u4e1a\u754c\u666e\u904d\u91c7\u7528OCaml\u8bed\u8a00\u548c\u6b63\u5f0f\u65b9\u6cd5\u30022021\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u4e00\u5e74\uff0c\u56e0\u4e3a\u6211\u4eec\u5e86\u795d\u6211\u4eec\u7684\u7b2c\u5341\u5468\u5e74\uff01\u5728\u7ec4\u5efa\u4e00\u652f\u7531\u9ad8\u6280\u80fd\u5de5\u7a0b\u5e08\u7ec4\u6210\u7684\u56e2\u961f\u65f6\uff0c\u6211\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u901a\u8fc7\u6211\u4eec\u7684\u4e13\u4e1a\u9886\u57df\u3001\u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u3001\u7f16\u8bd1\u548c\u5206\u6790\u3001\u9ad8\u7ea7\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u3001\u6b63\u5f0f\u65b9\u6cd5\u3001\u533a\u5757\u94fe\u548c\u9ad8\u4ef7\u503c\u8f6f\u4ef6\u539f\u578b\u8bbe\u8ba1\u8fdb\u884c\u5bfc\u822a\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5982\u6bcf\u5e74\uff08\u89c1OcLLPRO\u53bb\u5e742020\u548c\u7b2c39\u7bc7\u6587\u7ae0\uff09\uff0c\u6211\u4eec\u56de\u987e\u6211\u4eec\u57282021\u5e74\u95f4\u5728\u8bb8\u591a\u4e0d\u540c\u9886\u57df\u6240\u505a\u7684\u4e00\u4e9b\u5de5\u4f5c\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4eec\u8877\u5fc3\u611f\u8c22\u6240\u6709\u5ba2\u6237\u3001\u5408\u4f5c\u4f19\u4f34\u548c\u670b\u53cb\u5728\u8fd9\u7279\u6b8a\u7684\u4e00\u5e74\u91cc\u7ed9\u4e88\u6211\u4eec\u7684\u652f\u6301\u548c\u5408\u4f5c\uff01\n\u6ca1\u6709\u5458\u5de5\uff0c\u516c\u53f8\u5c31\u4e00\u65e0\u662f\u5904\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u6b22\u8fce\u4e86\u5927\u91cf\u65b0\u6765\u8005\uff1a\nHichem Rami Ait El Hara\u6700\u8fd1\u5b8c\u6210\u4e86\u4ed6\u7684\u7855\u58eb\u5b66\u4f4d#39\uff1b\u5979\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4f4d\u3002\u5728OCamlPro\u5b9e\u4e60\u671f\u95f4\uff0c\u4ed6\u4e3aAlt Ergo\u5f00\u53d1\u4e86\u4e00\u4e2afuzzer\uff0c\u4e4b\u540e\u4ed6\u52a0\u5165\u4e86OCamlPro\uff0c\u81f4\u529b\u4e8eAlt Ergo\u548c\u667a\u80fd\u5408\u540c\u7684\u9a8c\u8bc1\u3002\u4ed6\u5c06\u5f88\u5feb\u5f00\u59cb\u653b\u8bfbSMT\u89e3\u51b3\u7684\u535a\u58eb\u5b66\u4f4d\u3002\nNicolas Berthier\u62e5\u6709\u8d44\u6e90\u53d7\u9650\u7cfb\u7edf\u540c\u6b65\u7f16\u7a0b\u535a\u58eb\u5b66\u4f4d\u3002\u51ed\u501f\u591a\u5e74\u7684\u6a21\u578b\u68c0\u67e5\u3001\u62bd\u8c61\u89e3\u91ca\u548c\u8f6f\u4ef6\u5206\u6790\u7ecf\u9a8c\uff0c\u4ed6\u52a0\u5165OCamlPro\u4ece\u4e8b\u7f16\u7a0b\u8bed\u8a00\u7f16\u8bd1\u548c\u5206\u6790\u5de5\u4f5c\u3002\nJulien Blond\u662f\u4e00\u540d\u9ad8\u7ea7OCaml\u5f00\u53d1\u4eba\u5458\uff0c\u5728\u5b89\u5168\u8f6f\u4ef6\u7684\u6b63\u5f0f\u9a8c\u8bc1\u65b9\u9762\u62e5\u6709\u4e30\u5bcc\u7684\u7ecf\u9a8c\u3002\u4ed6\u4ee5\u9879\u76ee\u7ecf\u7406\u548cCoq\u4e13\u5bb6\u7684\u8eab\u4efd\u52a0\u5165OCamlPro\u3002\nKeryan Didier\u4ee5R&amp\uff1bD\u5de5\u7a0b\u5e08\u3002\u4ed6\u62e5\u6709\u76ae\u57c3\u5c14\u00b7\u739b\u4e3d\u00b7\u5c45\u91cc\u5927\u5b66\uff08University Pierre et Marie Curie\uff09\u7684\u535a\u58eb\u5b66\u4f4d\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4ed6\u5f00\u53d1\u4e86\u4e00\u79cd\u7528\u4e8e\u786c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u81ea\u52a8\u5316\u5b9e\u73b0\u65b9\u6cd5\u3002\u6b64\u524d\uff0c\u4ed6\u66fe\u5728\u5df4\u9ece\u72c4\u5fb7\u7f57\u5927\u5b66\u5b66\u4e60\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u8bed\u8a00\u8bbe\u8ba1\u3002Keryan\u53c2\u4e0e\u4e86MLang\u9879\u76ee\u4ee5\u53caOCamlPro\u548c#39\u5185\u7684flambda2\u9879\u76ee\uff1b\u6211\u7684\u7f16\u8f91\u56e2\u961f\u3002\n\u7a46\u7f55\u9ed8\u5fb7\u00b7\u8d6b\u52aa\u592b\u6700\u8fd1\u5b8c\u6210\u4e86\u4ed6\u7684\u7855\u58eb\u5b66\u4f4d#39\uff1b\u5979\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4f4d\u3002\u5728OCamlPro\u5b9e\u4e60\u5e76\u5728OCaml\u6587\u6863\u4e2d\u5fc3\u5de5\u4f5c\u540e\uff0c\u4ed6\u52a0\u5165\u4e86OCamlPro\uff0c\u5e76\u7ee7\u7eed\u5728\u6587\u6863\u4e2d\u5fc3\u548c\u5176\u4ed6OCaml\u5e94\u7528\u7a0b\u5e8f\u4e0a\u5de5\u4f5c\u3002\n\u8fbe\u91cc\u5965\u00b7\u5e73\u6258\u662f\u5df4\u9ece\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u9662\u7684\u5b66\u751f\u3002\u4ed6\u4e0eOCamlPro\u7b7e\u8ba2\u4e86\u4e3a\u671f\u4e24\u5e74\u7684\u52e4\u5de5\u4fed\u5b66\u5408\u540c\u3002\nArtemiy Rozovyk\u6700\u8fd1\u5b8c\u6210\u4e86\u4ed6\u7684\u7855\u58eb\u5b66\u4f4d#39\uff1b\u5979\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4f4d\u3002\u4ed6\u52a0\u5165OCamlPro\uff0c\u81f4\u529b\u4e8eEverScale\u548cAvalanche\u533a\u5757\u94fe\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002\nM\u8bed\u8a00\u662f\u4e00\u79cd\u975e\u5e38\u53e4\u8001\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\u6cd5\u56fd\u7a0e\u52a1\u5c40\u5f00\u53d1\uff0c\u7528\u4e8e\u8ba1\u7b97\u6240\u5f97\u7a0e\u3002\u6700\u8fd1\uff0cDenis Merigux\u548cRaphael Monat\u7528OCaml\u4e3aM\u8bed\u8a00\u5b9e\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u7f16\u8bd1\u5668\u3002\u4e0e\u4ee5\u524d\u7684\u7f16\u8bd1\u5668\u76f8\u6bd4\uff0c\u8fd9\u79cd\u65b0\u7f16\u8bd1\u5668\u8868\u73b0\u51fa\u66f4\u597d\u7684\u6027\u80fd\u3001\u66f4\u6e05\u6670\u7684\u8bed\u4e49\uff0c\u5e76\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7684\u53ef\u7ef4\u62a4\u6027\u3002OCamlPro\u73b0\u5728\u6b63\u81f4\u529b\u4e8e\u52a0\u5f3a\u8fd9\u4e2a\u65b0\u7684\u7f16\u8bd1\u5668\uff0c\u5c06\u5176\u6295\u5165\u751f\u4ea7\uff0c\u5e76\u6700\u7ec8\u8ba1\u7b97\u51fa3000\u591a\u4e07\u4e2a\u6cd5\u56fd\u5bb6\u5ead\u7684\u7a0e\u6536\u3002\nCOBOL\u8bed\u8a00\u8bde\u751f\u4e8e60\u591a\u5e74\u524d\uff0c\u5c31\u8ba1\u7b97\u673a\u4e2d\u8fd0\u884c\u7684\u884c\u6570\u800c\u8a00\uff0c\u636e\u8bf4\u5b83\u4ecd\u7136\u662f\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u591a\u7684\u8bed\u8a00\uff0c\u5c3d\u7ba1\u8bb8\u591a\u4eba\u9884\u6d4b\u5b83\u5c06\u572821\u4e16\u7eaa\u672b\u6d88\u5931\u3002\u5b83\u6709300\u591a\u4e2a\u4fdd\u7559\u5173\u952e\u5b57\uff0c\u4e5f\u662f\u89e3\u6790\u548c\u5206\u6790\u6700\u590d\u6742\u7684\u8bed\u8a00\u4e4b\u4e00\u3002\u5b83&#39\uff1b\u8fd9\u8fd8\u4e0d\u8db3\u4ee5\u5413\u552cOCamlPro\u7684\u5f00\u53d1\u4eba\u5458\uff1a\u5728\u5e2e\u52a9\u6cd5\u56fd\u6700\u5927\u7684COBOL\u7528\u6237\u4e4b\u4e00\u5c06\u5176\u7a0b\u5e8f\u7ffb\u8bd1\u6210GNUCobol\u5f00\u6e90\u7f16\u8bd1\u5668\u7684\u540c\u65f6\uff0cOCamlPro\u6784\u5efa\u4e86\u5f3a\u5927\u7684COBOL\u548c\u5927\u578b\u673a\u4e13\u4e1a\u77e5\u8bc6\uff0c\u5e76\u5f00\u53d1\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684COBOL\u89e3\u6790\u5668\uff0c\u8fd9\u5c06\u5e2e\u52a9\u6211\u4eec\u4e3aCOBOL\u5f00\u53d1\u4eba\u5458\u5e26\u6765\u73b0\u4ee3\u5f00\u53d1\u5de5\u5177\u3002\nGeneweb\u662f\u8fc4\u4eca\u4e3a\u6b62\u7ba1\u7406\u548c\u5171\u4eab\u5bb6\u8c31\u6570\u636e\u6700\u5f3a\u5927\u7684\u8f6f\u4ef6\u4e4b\u4e00\u3002\u5b83\u662f20\u591a\u5e74\u524d\u7528OCaml\u7f16\u5199\u7684\uff0c\u5305\u542b\u4e00\u4e2aweb\u670d\u52a1\u5668\u548c\u590d\u6742\u7684\u7b97\u6cd5\u6765\u8ba1\u7b97\u5bb6\u8c31\u4fe1\u606f\u3002\u5bb6\u8c31\u7f51\u662f\u5bb6\u8c31\u5b66\u9886\u57df\u7684\u9886\u5148\u516c\u53f8\u4e4b\u4e00\uff0c\u5b83\u7528\u6765\u5b58\u50a880\u591a\u4e07\u68f5\u5bb6\u8c31\u548c70\u591a\u4ebf\u4e2a\u7956\u5148\u7684\u540d\u5b57\u3002OCamlPro\u76ee\u524d\u6b63\u5728\u4e0eGeneanet\u5408\u4f5c\uff0c\u4ee5\u6539\u8fdbGeneweb\uff0c\u5e76\u4f7f\u5176\u80fd\u591f\u6269\u5c55\u5230\u66f4\u5927\u7684\u6570\u636e\u96c6\u3002\nMosaic\u5e73\u53f0\u4e3a\u751f\u6001\u6bd2\u7406\u5b66\u9886\u57df\u7684\u7814\u7a76\u4eba\u5458\u3001\u5de5\u4e1a\u53c2\u4e0e\u8005\u548c\u76d1\u7ba1\u673a\u6784\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8fd0\u884c\u5404\u79cd\u7edf\u8ba1\u5206\u6790\u3002\u7528\u6237\u53ea\u9700\u5728web\u754c\u9762\u4e0a\u8f93\u5165\u4e00\u4e9b\u6570\u636e\uff0c\u7136\u540e\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u8ba1\u7b97\u5e76\u663e\u793a\u7ed3\u679c\u3002\u8be5\u5e73\u53f0\u5b8c\u5168\u7528OCaml\u7f16\u5199\uff0c\u5e76\u8d1f\u8d23\u8c03\u7528\u7528R\u7f16\u5199\u7684\u6570\u5b66\u6a21\u578b\u3002OCamlPro\u4f7f\u9879\u76ee\u73b0\u4ee3\u5316\uff0c\u4ee5\u4fbf\u4e8e\u7ef4\u62a4\u548c\u65b0\u8d21\u732e\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u65b0R\u7248\u672c\u5f15\u5165\u7684bug\uff08\u6ca1\u6709\u4efb\u4f55\u8b66\u544a\uff09\u3002\u7136\u540e\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u8f93\u5165\u63a5\u53e3\uff0c\u5b83&#39\uff1b\u5b83\u7c7b\u4f3c\u4e8e\u7535\u5b50\u8868\u683c\uff0c\u6bd4\u7f16\u5199\u539f\u59cbCSV\u65b9\u4fbf\u5f97\u591a\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u6709\u673a\u4f1a\u5bf9\u5176\u4ed6\u4e00\u4e9bOCaml\u5305\uff08\u5982leveldb\uff09\u505a\u51fa\u8d21\u732e\uff0c\u6216\u8005\u7f16\u5199\u65b0\u7684OCaml\u5305\uff08\u5982agrid\uff09\u3002\nOCamlPro\u5f88\u81ea\u8c6a\u80fd\u591f\u53c2\u4e0eFlambda2\uff0c\u8fd9\u662f\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684OCaml\u4f18\u5316\u7f16\u8bd1\u5668\u9879\u76ee\uff0c\u7531\u6211\u4eec\u7684\u957f\u671f\u5408\u4f5c\u4f19\u4f34\u548c\u5ba2\u6237Jane Street\u7684Mark Shinwell\u53d1\u8d77\u3002Flambda\u4e13\u6ce8\u4e8e\u964d\u4f4e\u62bd\u8c61\u7684\u8fd0\u884c\u65f6\u6210\u672c\uff0c\u5e76\u5c3d\u53ef\u80fd\u591a\u5730\u5220\u9664\u77ed\u671f\u5206\u914d\u3002Jane Street\u5df2\u7ecf\u542f\u52a8\u4e86flambda2\u7684\u5927\u89c4\u6a21\u6d4b\u8bd5\uff0c\u5728\u6211\u4eec\u8fd9\u65b9\u9762\uff0c\u6211\u4eec\u5df2\u7ecf\u8bb0\u5f55\u4e86\u4e00\u4e9b\u5173\u952e\u7b97\u6cd5\u7684\u8bbe\u8ba1\u30022021\uff0c\u5f17\u5170\u5df4\u8fbe\u961f\u548cKeryan\u7684\u961f\u4f0d\u8d8a\u6765\u8d8a\u5927\u3002\u968f\u7740\u5927\u91cf\u7684\u4fee\u590d\u548c\u6539\u8fdb\uff0c\u8fd9\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u5728\u672a\u6765\u51e0\u4e2a\u6708\u53d1\u5e03Flambda2\uff01\n\u5728\u5176\u4ed6OCAML\u7f16\u8bd1\u5668\u65b0\u95fb\u4e2d\uff0c2021\u5c06\u671f\u5f85\u5df2\u4e45\u7684\u591a\u6838\u5206\u652f\u5408\u5e76\u5230\u5b98\u65b9\u5f00\u53d1\u5206\u652f\u4e2d\u3002\u8fd9\u8981\u611f\u8c22\u8bb8\u591a\u4eba\u7684\u51fa\u8272\u5de5\u4f5c\uff0c\u5305\u62ec\u6211\u4eec\u81ea\u5df1\u7684\u8fbe\u7c73\u6069\u00b7\u591a\u5229\u683c\u65af\u3002\u4f46\u8fd9\u8fd8\u8fdc\u672a\u7ed3\u675f\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u671f\u5f85\u7740\u8fdb\u4e00\u6b65\u4e3a\u7f16\u8bd1\u5668\u505a\u51fa\u8d21\u732e\uff08\u4fee\u590dbug\uff0c\u91cd\u65b0\u542f\u7528\u5bf9\u6240\u6709\u5e73\u53f0\u7684\u652f\u6301\uff09\uff0c\u5e76\u5728\u6211\u4eec\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u3002\nOpam\u662f\u57fa\u4e8eOCaml\u6e90\u4ee3\u7801\u7684\u5305\u7ba1\u7406\u5668\u3002\u7b2c\u4e00\u4e2a\u89c4\u8303\u8349\u6848\u662f\u57282012\u5e74\u521d\u7f16\u5199\u7684\uff0c\u540e\u6765\u6210\u4e3aOCaml\u7684\u5b98\u65b9\u5305\u7ba1\u7406\u5668\u2014\u2014\u5c3d\u7ba1\u5b83\u53ef\u80fd\u7528\u4e8e\u5176\u4ed6\u8bed\u8a00\u548c\u9879\u76ee\uff0c\u56e0\u4e3aOpam\u662f\u8bed\u8a00\u4e0d\u53ef\u77e5\u7684\uff01\u5982\u679c\u60a8\u9700\u8981\u8f7b\u677e\u5b89\u88c5\u3001\u5347\u7ea7\u548c\u7ba1\u7406\u7f16\u8bd1\u5668\u3001\u5de5\u5177\u548c\u5e93\uff0cOpam\u662f\u4e3a\u60a8\u8bbe\u8ba1\u7684\u3002\u5b83\u652f\u6301\u591a\u4e2a\u540c\u65f6\u5b89\u88c5\u7684\u7f16\u8bd1\u5668\u3001\u7075\u6d3b\u7684\u5305\u7ea6\u675f\u548cGit\u53cb\u597d\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41\u3002\nOpam\u5f00\u53d1\u548c\u7ef4\u62a4\u662fOCamlPro\u4e0eRaja&amp\uff1bLouis\u548cOCamlLabs\uff0c\u4ee5\u53caDavid Allsopp&amp\uff1b\u51ef\u7279\u00b7\u5fb7\u666e\u83b1\u514b\u65af\u3002\n\u6211\u4eec\u5728OPAM\u4e0a\u76842021\u9879\u5de5\u4f5c\u6700\u7ec8\u5bfc\u81f4\u4e86\u671f\u5f85\u5df2\u4e45\u7684OPAM 2.1\u3001\u4e09\u7248\u672c\u7684OPAM 2\u548c\u4e24\u4e2a\u7248\u672c\u7684OPAM 2.1\u7684\u6700\u7ec8\u53d1\u5e03\u3002\n\u5207\u6362\u4e0d\u53d8\u91cf\uff0c\u66ff\u6362&#34\uff1b\u57fa\u672c\u5305&#34\uff1b\u5728opam 2.0\u4e2d\uff0c\u5141\u8bb8\u66f4\u8f7b\u677e\u5730\u5347\u7ea7\u7f16\u8bd1\u5668\nCLI\u7248\u672c\u63a7\u5236\uff0c\u5141\u8bb8\u73b0\u5728\u5bf9opam\u8fdb\u884c\u66f4\u5e72\u51c0\u7684\u5f03\u7528\uff0c\u5e76\u5728\u672a\u6765\u6539\u8fdb\u8bed\u4e49\uff0c\u540c\u65f6\u4e0d\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\n\u57282021\uff0c\u6211\u4eec\u8fd8\u51c6\u5907\u4e86\u5373\u5c06\u53d1\u5e03\u7684OPAM 2.2\u7248\u672c\u7684alpha\u7248\u672c\u3002\u5b83\u5c06\u66f4\u597d\u5730\u5904\u7406Windows\u751f\u6001\u7cfb\u7edf\u3001\u96c6\u6210SoftwareHeritage\u5f52\u6863\u56de\u9000\u3001\u66f4\u597d\u7684\u7528\u6237\u754c\u9762\u4ea4\u4e92\u3001\u9012\u5f52\u56fa\u5b9a\u9879\u76ee\u3001\u83b7\u53d6\u4f18\u5316\u7b49\u3002\n\u6211\u4eec\u8fd8\u79ef\u6781\u7ef4\u62a4Learn ocaml\u3002\u6700\u521d\u8bbe\u8ba1\u4e3aOCamlMOOC\u5e73\u53f0\u7684\u5de5\u5177\u73b0\u5728\u662fOcAML\u5168\u7403\u6559\u5e08\u624b\u4e2d\u7684\u5de5\u5177\uff0c\u7531OAML\u57fa\u91d1\u4f1a\u7ba1\u7406\u548c\u8d44\u52a9\u3002\n\u8fd9\u9879\u5de5\u4f5c\u5305\u62ec\u4e3aOCaml 4.12\u63d0\u4f9b\u4e00\u4e2a\u903e\u671f\u5df2\u4e45\u7684\u7aef\u53e3\uff1b\u751f\u6210\u53ef\u79fb\u690d\u53ef\u6267\u884c\u6587\u4ef6\uff08\u901a\u8fc7CI\u81ea\u52a8\u751f\u6210\uff09\uff0c\u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u90e8\u7f72\u548c\u4f7f\u7528\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff1b\u4ee5\u53ca\u8bb8\u591a\u751f\u6d3b\u8d28\u91cf\u548c\u53ef\u7528\u6027\u7684\u6539\u8fdb\uff0c\u8fd9\u4e9b\u6539\u8fdb\u6765\u81ea\u4e8e\u4e0e\u8bb8\u591a\u8001\u5e08\u7684\u53cc\u5411\u5bf9\u8bdd\u3002\n\u5728\u4e00\u4e2a\u76f8\u5173\u7684\u95ee\u9898\u4e0a\uff0c\u6211\u4eec\u8fd8\u4fee\u6539\u4e86\u5728\u7ebfOCaml\u7f16\u8f91\u5668\u548c\u9876\u7ea7TryOCaml\uff0c\u6539\u8fdb\u4e86\u5b83\u7684\u8bbe\u8ba1\uff0c\u5e76\u6dfb\u52a0\u4e86\u4ee3\u7801\u7247\u6bb5\u5171\u4eab\u7b49\u529f\u80fd\u3002\u6211\u4eec\u9ad8\u5174\u5730\u770b\u5230\uff0c\u5728\u8fd9\u4e9b\u56f0\u96be\u65f6\u671f\uff0c\u8fd9\u4e9b\u5de5\u5177\u5bf9\u6559\u5e08\u548c\u5b66\u751f\u90fd\u5f88\u6709\u7528\uff0c\u5e76\u671f\u5f85\u7740\u8fdb\u4e00\u6b65\u6539\u8fdb\u3002\n\u4f5c\u4e3aOCaml\u7684\u6700\u5927\u7528\u6237\u4e4b\u4e00\uff0cOCamlPro\u65e8\u5728\u901a\u8fc7\u5f00\u53d1\u5927\u91cf\u5f00\u6e90\u5de5\u5177\u6765\u4fc3\u8fdbOCaml\u7684\u65e5\u5e38\u4f7f\u7528\u3002\n\u6211\u4eec\u5728OcAML\u751f\u6001\u7cfb\u7edf2021\u7684\u4e3b\u8981\u8d21\u732e\u4e4b\u4e00\u53ef\u80fd\u662fOCSL\u6587\u6863\u4e2d\u5fc3\u5728DOCS\u3002ocaml\u3002\u8d5e\u6210\u7684\u610f\u89c1\u3002\nOCaml\u6587\u6863\u4e2d\u5fc3\u662f\u4e00\u4e2a\u4e3a2000\u591a\u4e2aOPAM\u8f6f\u4ef6\u5305\u63d0\u4f9b\u6587\u6863\u7684\u7f51\u7ad9\uff0c\u5176\u4e2d\u5f53\u7136\u6700\u6d41\u884c\u7684\u662f\u8f6f\u4ef6\u5305\u95f4\u7684\u6587\u6863\u94fe\u63a5\uff01\u8be5\u7f51\u7ad9\u8fd8\u5305\u542b\u6240\u6709\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u7684\u53ef\u6d4f\u89c8\u8d44\u6e90\uff0c\u4ee5\u53ca\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u7528\u4e8e\u53d1\u73b0\u6709\u7528\u7684OCaml\u51fd\u6570\u3001\u6a21\u5757\u3001\u7c7b\u578b\u548c\u7c7b\u3002\n\u6240\u6709\u8fd9\u4e9b\u6587\u6863\u90fd\u662f\u4f7f\u7528\u6211\u4eec\u7684\u5b9a\u5236\u5de5\u5177Digodoc\u751f\u6210\u7684\u3002\u5c3d\u7ba1\u5b83&#39\uff1b\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u533a\u57df\uff0c\u6211\u4eec\u8fd8\u4e00\u76f4\u5728\u7ef4\u62a4Drom\u3001\u6211\u4eec\u7684\u6c99\u4e18\u5c42\u548cOpamt\uff0c\u8fd9\u662f\u6211\u4eec\u6700\u8fd1\u5927\u591a\u6570\u9879\u76ee\u4f7f\u7528\u7684\u3002\n\u53bb\u5e74\uff0c\u4eba\u4eec\u671f\u5f85\u5df2\u4e45\u7684SoftwareHeritage\u548cOCamlPro\u4e4b\u95f4\u7684\u5408\u4f5c\u4e5f\u5f97\u4ee5\u5b9e\u73b0\u3002\n\u591a\u4e8f\u4e86\u827e\u5c14\u5f17\u96f7\u5fb7\u00b7P\u00b7\u65af\u9686\u57fa\u91d1\u4f1a\u7684\u8d44\u52a9\uff0cOCamlPro\u5df2\u7ecf\u80fd\u591f\u4e0e\u6211\u4eec\u7684\u8f6f\u4ef6\u9057\u4ea7\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\uff0c\u5e76\u901a\u8fc7\u5b58\u68633516\u4e2aOPAM\u5305\u6765\u8fdb\u4e00\u6b65\u6269\u5927\u4ed6\u4eec\u7684\u5de8\u5927\u52aa\u529b\u7684\u8986\u76d6\u9762\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u5f00\u6e90\u534f\u4f5c\u7684\u4e3b\u8981\u597d\u5904\u662f\uff1a\n\u5728\u8f6f\u4ef6\u9057\u4ea7\u67b6\u6784\u4e2d\u589e\u52a0\u4e86\u51e0\u4e2a\u6a21\u5757\uff0c\u5141\u8bb8\u5bf9\u6240\u8ff0opam\u5305\u8fdb\u884c\u5f52\u6863\uff1b\n\u5982\u679copam\u4e0a\u7684\u7ed9\u5b9a\u8f6f\u4ef6\u5305\u4e0d\u518d\u53ef\u7528\uff0c\u5219\u5b9e\u65bd\u53ef\u80fd\u7684\u8f6f\u4ef6\u9057\u4ea7\u56de\u9000\uff1b\n\u5728\u8f6f\u4ef6\u6700\u7ec8\u88ab\u8054\u5408\u56fd\u6559\u79d1\u6587\u7ec4\u7ec7\u786e\u8ba4\u4e3a\u4e16\u754c\u9057\u4ea7\u7684\u4e00\u90e8\u5206\u540e\u4e0d\u4e45\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u6210\u4e3a\u8fd9\u4e00\u4f1f\u5927\u800c\u6709\u610f\u4e49\u7684\u5021\u8bae\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u611f\u89c9\u5230\uff0c\u5728\u6211\u4eec\u7684\u4e92\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u53ca\u5728\u5de5\u4f5c\u5b8c\u6210\u540e\u7684\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u771f\u6b63\u7684\u6fc0\u60c5\u4f9d\u7136\u5b58\u5728\u3002\nOCamlPro\u5f00\u53d1\u5e76\u7ef4\u62a4Alt Ergo\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u53ef\u6ee1\u8db3\u6027\u6a21\u7406\u8bba\uff08SMT\uff09\u7684\u6570\u5b66\u516c\u5f0f\u81ea\u52a8\u6c42\u89e3\u5668\uff0c\u7528\u4e8e\u7a0b\u5e8f\u9a8c\u8bc1\u3002ALT ErGo\u6700\u521d\u662f\u5728\u5df4\u9ece\u8428\u514b\u83b1\u5927\u5b66\u7684VARS\u56e2\u961f\u4e2d\u521b\u5efa\u7684\u3002\n\u57282021\uff0c\u6211\u4eec\u7ee7\u7eed\u4e13\u6ce8\u4e8e\u6211\u4eec\u7684\u6c42\u89e3\u5668\u7684\u53ef\u7ef4\u62a4\u6027\u3002\u6211\u4eec\u5206\u522b\u57281\u6708\u548c7\u6708\u53d1\u5e03\u4e86\u7248\u672c2.4.0\u548c2.4.1\uff0c\u5176\u4e2d2.4.1\u5305\u542b\u9519\u8bef\u4fee\u590d\u548c\u4e00\u4e9b\u6027\u80fd\u6539\u8fdb\u3002\n\u4e3a\u4e86\u589e\u52a0\u6211\u4eec\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u6211\u4eec\u68c0\u6d4b\u4e86Alt Ergo\uff0c\u4ee5\u4fbf\u4f7f\u7528afl fuzz\u8fd0\u884c\u5b83\u3002\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u6982\u5ff5\u8bc1\u660e\uff0c\u4f46\u5c1a\u672a\u88ab\u7eb3\u5165Alt ergo&#39\uff1b\u5728\u4e0d\u65ad\u7684\u96c6\u6210\u4e2d\uff0c\u5b83\u5df2\u7ecf\u5e2e\u52a9\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\uff0c\u6bd4\u5982\u8fd9\u4e2a\u3002\n\u6211\u4eec\u611f\u8c22Alt Ergo\u7528\u6237\u4ff1\u4e50\u90e8\u3001Adacore\u3001CEA List\u3001MERCE\uff08\u4e09\u83f1\u7535\u6c14\u6b27\u6d32\u7814\u53d1\u4e2d\u5fc3\uff09\u3001Thal\u00e8s\u548cTrust In Soft\u7684\u5408\u4f5c\u4f19\u4f34\u5bf9\u6211\u4eec\u7684\u4fe1\u4efb\u3002\u4ed6\u4eec\u7684\u652f\u6301\u4f7f\u6211\u4eec\u80fd\u591f\u7ef4\u62a4\u6211\u4eec\u7684\u5de5\u5177\u3002\n\u8be5\u4ff1\u4e50\u90e8\u4e8e2019\u63a8\u51fa\uff0c\u7b2c\u4e09\u5c4a\u963f\u5c14\u6208\u7528\u6237\u4ff1\u4e50\u90e8\u5e74\u4f1a\u4e8e2021\u5e744\u6708\u521d\u4e3e\u884c\u3002\u6211\u4eec\u7684\u5e74\u4f1a\u662f\u5ba1\u67e5\u6bcf\u4e2a\u5408\u4f5c\u4f19\u4f34\u5173\u4e8eAlt Ergo\u9700\u6c42\u7684\u5b8c\u7f8e\u573a\u6240\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u6709\u5e78\u4e0e\u5408\u4f5c\u4f19\u4f34\u8ba8\u8bba\u4e86\u672a\u6765Alt Ergo\u529f\u80fd\u548c\u589e\u5f3a\u7684\u8def\u7ebf\u56fe\u3002\u5982\u679c\u60a8\u60f3\u53c2\u52a0\u6211\u4eec\u7684\u4e0b\u4e00\u6b21\u4f1a\u8bae\uff08\u5373\u5c06\u53ec\u5f00\uff09\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\uff01\n\u6700\u540e\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u628a\u6211\u4eec\u57282020\u5e74\u6240\u505a\u7684\u4e00\u4e9b\u5de5\u4f5c\u5408\u5e76\u5230Alt Ergo\u7684\u4e3b\u8981\u5206\u652f\u4e2d\u3002\u611f\u8c22\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34MERCE\uff08\u4e09\u83f1\u7535\u6c14\u6b27\u6d32\u7814\u53d1\u4e2d\u5fc3\uff09\uff0c\u6211\u4eec\u81f4\u529b\u4e8eSMT\u8f66\u578b\u7684\u5f00\u53d1\u3002Alt Ergo\u73b0\u5728\uff08\u90e8\u5206\uff09\u80fd\u591f\u4ee5smt-lib2\u683c\u5f0f\u8f93\u51fa\u6a21\u578b\u3002\u7531\u4e8e\u6765\u81ea\u5df4\u9eceSACLY\u5927\u5b66\u7684WHY3\u56e2\u961f\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u9879\u5de5\u4f5c\u5c06\u5728WHY3\u5e73\u53f0\u4e0a\u63d0\u4f9b\uff0c\u4ee5\u5e2e\u52a9\u7528\u6237\u5728\u4ed6\u4eec\u7684\u7a0b\u5e8f\u9a8c\u8bc1\u5de5\u4f5c\u4e2d\u3002\n\u8fd9\u9879\u5de5\u4f5c\u7684\u90e8\u5206\u8d44\u91d1\u6765\u81eaFUI R&amp\uff1bD\u9879\u76eeLCHIP\u3001MERCE\u3001Adacore\u548cAlt Ergo\u7528\u6237\u4ff1\u4e50\u90e8\u7684\u652f\u6301\u3002\nDolmen\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5e93\uff0c\u4e3a\u81ea\u52a8\u63a8\u7406\u4e2d\u4f7f\u7528\u7684\u591a\u79cd\u8bed\u8a00\u63d0\u4f9b\u7075\u6d3b\u7684\u89e3\u6790\u5668\u548c\u7c7b\u578b\u68c0\u67e5\u5668\u3002\n\u6b63\u5728\u8fdb\u884c\u7684\u5c06Dolmen\u5e93\u7528\u4f5cAlt Ergo\u524d\u7aef\u7684\u5de5\u4f5c\u5df2\u7ecf\u53d6\u5f97\u4e86\u76f8\u5f53\u5927\u7684\u8fdb\u5c55\uff0cdolemn\u5df2\u7ecf\u6269\u5c55\u5230\u652f\u6301Alt Ergo&#39\uff1b\u5728\u8fd9\u4e2a\u516c\u5171\u5173\u7cfb\u4e2d\uff0c\u4ee5\u53ca\u5728Alt Ergo&#39\uff1bs\u7aef\u6dfb\u52a0dolmen\u4f5c\u4e3a\u524d\u7aef\uff0c\u53ef\u4ee5\u5728\u672cPR\u4e2d\u9009\u62e9\u3002\u4e00\u65e6\u8fd9\u4e9b\u88ab\u5408\u5e76\uff0cAlt Ergo\u5c06\u80fd\u591f\u8bfb\u53d6\u65b0\u8bed\u8a00\u7684\u8f93\u5165\u95ee\u9898\uff0c\u4f8b\u5982TPTP\uff01\n\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u4eec\u53d1\u8868\u4e86\u4e00\u7cfb\u5217\u5e16\u5b50\uff1a\u5047\u4eba\u9a8c\u8bc1\uff1aSMT\u548c\u611f\u5e94\u3002\u8fd9\u4e9b\u5e16\u5b50\u4ecb\u7ecd\u5e76\u8ba8\u8bba\u4e86SMT\u89e3\u7b97\u5668\u3001\u5f52\u7eb3\u548c\u4e0d\u53d8\u5f3a\u5316\u7684\u6982\u5ff5\u3002\u4ed6\u4eec\u4f9d\u8d56mikino\uff0c\u8fd9\u662f\u6211\u4eec\u7f16\u5199\u7684\u4e00\u4e2a\u7b80\u5355\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u5206\u6790\u7b80\u5355\u7684\u8fc7\u6e21\u7cfb\u7edf\uff0c\u5e76\u6267\u884c\u57fa\u4e8eSMT\u7684\u5f52\u7eb3\u68c0\u67e5\uff08\u4ee5\u53caBMC\uff0c\u5373\u9519\u8bef\u67e5\u627e\uff09\u3002\u6211\u4eec\u5728\u300a\u94c1\u9508\u300b\u4e00\u4e66\u4e2d\u4ee5\u53ef\u8bfb\u6027\u548c\u4eba\u4f53\u5de5\u7a0b\u5b66\u4e3a\u51fa\u53d1\u70b9\u7f16\u5199\u4e86mikino\uff1amikino\u5c55\u793a\u4e86\u7f16\u5199\u57fa\u4e8eSMT\u7684\u6a21\u578b\u68c0\u67e5\u5668\u6267\u884c\u5f52\u7eb3\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u8fd9\u4e9b\u5e16\u5b50\u975e\u5e38\u5b9e\u7528\uff0c\u5e76\u4e14\u5229\u7528\u4e86\u7c73\u57fa\u8bfa&#39\uff1bs\u7684\u9ad8\u8d28\u91cf\u8f93\u51fa\u8ba8\u8bba\u5f52\u7eb3\u548c\u4e0d\u53d8\u5f3a\u5316\uff0c\u8bfb\u8005\u53ef\u4ee5\u8fd0\u884c\u548c\u7f16\u8f91\u81ea\u5df1\u7684\u4f8b\u5b50\u3002\n\u57282021\uff0c\u6211\u4eec\u6700\u7ec8\u4f7f\u7528\u4e86TLA+\u8bed\u8a00\u53ca\u5176\u76f8\u5173\u7684TLC\u9a8c\u8bc1\u5f15\u64ce\u5728\u51e0\u4e2a\u5b8c\u5168\u65e0\u5173\u7684\u9879\u76ee\u4e2d\u3002TLC\u662f\u4e00\u4e2a\u4e86\u4e0d\u8d77\u7684\u5de5\u5177\uff0c\u4f46\u5b83\u4e0d\u9002\u5408\u5904\u7406\u5305\u542b\u8bb8\u591a\u6a21\u5757\uff08\u6587\u4ef6\uff09\u3001\u56de\u5f52\u6d4b\u8bd5\u7b49\u7684TLA+\u9879\u76ee\u3002\u7279\u522b\u662f\uff0cTLA+\u4e0d\u662f\u7c7b\u578b\u5316\u8bed\u8a00\u3002\u8fd9\u610f\u5473\u7740TLA+\u4ee3\u7801\u5f80\u5f80\u4f1a\u6709\u8bb8\u591a\u68c0\u67e5\uff08\u52a8\u6001\u65ad\u8a00\uff09\u6765\u68c0\u67e5\u6570\u91cf\u662f\u5426\u5177\u6709\u9884\u671f\u7684\u7c7b\u578b\u3002\u8fd9\u5f88\u597d\uff0c\u867d\u7136\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6709\u70b9\u4e4f\u5473\uff0c\u4f46\u968f\u7740\u4ee3\u7801\u53d8\u5927\uff0cTLC\u8fdb\u884c\u7684\u5206\u6790\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u975e\u5e38\u6602\u8d35\u3002\u6700\u7ec8\uff0c\u4fdd\u6301\u65ad\u8a00\u7c7b\u578b\u68c0\u67e5\u4e00\u5207\u662f\u4e0d\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8eTLC&#39\uff1b\u4ed6\u7684\u5206\u6790\u7206\u70b8\u4e86\u3002\n\u4f5c\u4e3aTLA+/TLC\u7528\u6237\uff0c\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u7ba1\u7406TLA+\u9879\u76ee\u7684matla\u3002\u739b\u7279\u62c9\u4ee5\u94c1\u9508\u4e66\u5199\uff0c\u6df1\u53d7\u94c1\u9508\u751f\u6001\u7cfb\u7edf\u7684\u542f\u53d1\uff0c\u5c24\u5176\u662f\u8d27\u7269\u3002Matla\u5c1a\u672a\u516c\u5f00\u53d1\u5e03\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u7b49\u5f85\u65e9\u671f\u7528\u6237\u7684\u66f4\u591a\u53cd\u9988\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u786e\u5b9e\u5728\u5185\u90e8\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u5b83\u7684\u5404\u79cd\u529f\u80fd\u4f7f\u6211\u4eec\u7684TLA+\u9879\u76ee\u66f4\u52a0\u7b80\u5355\uff1a\n\u63d0\u4f9b\u4e00\u4e2a\u5e26\u6709&#34\u7684Matla\u6a21\u5757\uff1b\u8c03\u8bd5\u65ad\u8a00&#34\uff1b\u52a9\u624b\uff1a\u8fd9\u4e9b\u65ad\u8a00\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u662f\u6d3b\u52a8\u7684\uff0c\u8fd9\u662f\u8fd0\u884cmatla run\u65f6\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002\u901a\u8fc7\u2014\u2014\u91ca\u653e\u7ed9\u9a6c\u7279\u62c9&#39\uff1b\u4f46\u662f\uff0cs\u8fd0\u884c\u6a21\u5f0f\u4f1a\u7f16\u8bd1\u6389\u6240\u6709\u8c03\u8bd5\u65ad\u8a00\uff1b\u8fd9\u5141\u8bb8\u5728\u8c03\u8bd5\u65f6\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u540c\u65f6\u786e\u4fdd\u53d1\u5e03\u8fd0\u884c\u4e0d\u4f1a\u652f\u4ed8\u8fd9\u4e9b\u68c0\u67e5\u7684\u8d39\u7528\uff1b\n\u5904\u7406\u96c6\u6210\u6d4b\u8bd5\uff1amatla\u9879\u76ee\u6709\u4e00\u4e2a\u6d4b\u8bd5\u76ee\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u7f16\u5199\u6d4b\u8bd5\uff08\u5e26\u6709.TLA\u548c.cfg\u6587\u4ef6\u7684TLA\u6587\u4ef6\uff09\uff0c\u5e76\u6307\u5b9a\u6d4b\u8bd5\u662f\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff08\u4ee5\u53ca\u5982\u4f55\u8fdb\u884c\uff09\uff1b\n\u7406\u89e3\u5e76\u8f6c\u5316TLC&#39\uff1bs\u7684\u8f93\u51fa\uff0c\u4ee5\u6539\u5584\u7528\u6237\u53cd\u9988\uff0c\u5c24\u5176\u662f\u5f53TLC\u4ea7\u751f\u9519\u8bef\u65f6\uff08\u8fd8\u4e0d\u591f\u597d\uff0c\u8fd9\u662f\u6211\u4eec\u5c1a\u672a\u53d1\u5e03\u7684\u539f\u56e0\uff09\uff1bmatla\u8fd8\u89e3\u6790\u548c\u7f8e\u5316TLC&#39\uff1bs\u901a\u8fc7\u683c\u5f0f\u5316\u503c\u3001\u683c\u5f0f\u5316\u72b6\u6001\uff08\u503c\u7684\u805a\u5408\uff09\u548c\u4f7f\u7528ASCII\u827a\u672f\u4ee5\u56fe\u5f62\u65b9\u5f0f\u5448\u73b0\u72b6\u6001\u8ddf\u8e2a\u6765\u53cd\u4f8b\u8ddf\u8e2a\u3002\n\u76ee\u524d\u7684\u5927\u6d41\u884c\u65e0\u7591\u6b63\u5728\u5f71\u54cd\u6211\u4eec\u7684\u4e13\u4e1a\u57f9\u8bad\u6d3b\u52a8\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u6709\u673a\u4f1a\u5728\u590f\u5b63\u4e0eONERA\u7684\u5e94\u7528\u7814\u7a76\u4eba\u5458\u4e00\u8d77\u4e3e\u529e\u4e86\u4e00\u6b21\u9508\u75c5\u57f9\u8bad\u8bfe\u7a0b\u3002\u8be5\u8bfe\u7a0b\u4e3a\u671f\u4e00\u5468\uff08\u6bcf\u5929\u7ea6\u4e03\u4e2a\u5c0f\u65f6\uff09\uff0c\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u5b8c\u5168\u8fdc\u7a0b\u57f9\u8bad\u8bfe\u7a0b\u3002\u6211\u4eec\u4ecd\u7136\u8ba4\u4e3a\u73b0\u573a\u57f9\u8bad\uff08\u5982\u679c\u53ef\u80fd\uff09\u66f4\u597d\uff0c\u5168\u8fdc\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7075\u6d3b\u6027\uff08\u4f8b\u5982\uff0c\u5c06\u57f9\u8bad\u5206\u6563\u5728\u51e0\u5468\u5185\uff09\uff0c\u6211\u4eec\u4e0eONERA\u7684\u7ecf\u9a8c\u8868\u660e\uff0c\u5b83\u53ef\u4ee5\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u6b63\u786e\u7684\u6280\u672f\u3002\u6709\u8da3\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fdc\u7a0b\u6559\u5b66\u5728\u67d0\u4e9b\u65b9\u9762\u5b9e\u9645\u4e0a\u6548\u679c\u66f4\u597d\uff1a\u4f8b\u5982\uff0c\u52a8\u624b\u7ec3\u4e60\u548c\u9879\u76ee\u53d7\u76ca\u4e8e\u5c4f\u5e55\u5171\u4eab\u3002\u4e0e\u4e00\u540d\u53c2\u4e0e\u8005\u8ba8\u8bba\u4ee3\u7801\u662f\u901a\u8fc7\u5c4f\u5e55\u5171\u4eab\u5b8c\u6210\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6240\u6709\u53c2\u4e0e\u8005\u613f\u610f\uff0c\u4ed6\u4eec\u90fd\u53ef\u4ee5\u8ddf\u968f\u3002\n\u957f\u8bdd\u77ed\u8bf4\uff0c\u5b8c\u5168\u8fdc\u7a0b\u57f9\u8bad\u662f\u6211\u4eec\u73b0\u5728\u6709\u4fe1\u5fc3\u5411\u5ba2\u6237\u63d0\u51fa\u7684\u4e00\u79cd\u7075\u6d3b\u7684\u73b0\u573a\u57f9\u8bad\u66ff\u4ee3\u65b9\u6848\u3002\n\u6211\u4eec\u53c2\u52a0\u4e86\u4e00\u573a\u65e8\u5728\u4e3aTON VM\u6c47\u7f16\u7a0b\u5e8f\u7f16\u5199\uff08\u7f16\u8bd1\u5668\uff09\u9ad8\u7ea7\u89c4\u8303\u7684\u7ade\u8d5b\uff0c\u7279\u522b\u662f\u5b83\u7684\u6307\u4ee4\u53ca\u5176\u7f16\u8bd1\u65b9\u5f0f\u3002\u8fd9\u573a\u7ade\u8d5b\u662f\u5411TON\u865a\u62df\u673a\u5e94\u7528\u6b63\u5f0f\u65b9\u6cd5\uff0c\u5c24\u5176\u662f\u6b63\u5f0f\u9a8c\u8bc1\u8fc8\u51fa\u7684\u7b2c\u4e00\u6b65\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u62a5\u544a\uff0c\u6211\u4eec\u5728\u8fd9\u65b9\u9762\u53d6\u5f97\u4e86\u7b2c\u4e00\u540d\uff0c\u5e76\u671f\u5f85\u7740\u672a\u6765\u7684\u7ade\u8d5b\u8fdb\u4e00\u6b65\u63a8\u52a8Everscale\u533a\u5757\u94fe\u4e2d\u7684\u6b63\u5f0f\u65b9\u6cd5\u3002\n2019-2020\u5e74\uff0c\u6211\u4eec\u4e0eOrigin\u5b9e\u9a8c\u5ba4\u5408\u4f5c\uff0c\u96c6\u4e2d\u7cbe\u529b\u5f00\u53d1\u533a\u5757\u94fe\uff0c\u5411Dune Network\u751f\u6001\u7cfb\u7edf\u6dfb\u52a0\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4f60\u53ef\u4ee5\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u6c99\u4e18\u7684\u7231\u548c\u575a\u56fa\u3002\n2020\u5e74\u5e95\uff0c\u5f88\u660e\u663e\uff0c\u9ad8\u541e\u5410\u91cf\u6b63\u5728\u6210\u4e3a\u5b9e\u9645\u5e94\u7528\u4e2d\u91c7\u7528\u533a\u5757\u94fe\u7684\u4e3b\u8981\u8981\u6c42\uff0cDune Network\u80cc\u540e\u57fa\u4e8eTezos\u7684\u6280\u672f\u65e0\u6cd5\u4e0eSolana\u6216Avalanche\u7b49\u9ad8\u6027\u80fd\u533a\u5757\u94fe\u7ade\u4e89\u3002\u6839\u636e\u8fd9\u4e00\u89c2\u5bdf\uff0c\u6c99\u4e18\u7f51\u7edc\u793e\u533a\u51b3\u5b9a\u57282021\u5e74\u521d\u4e0e\u5f17\u91cc\u987f\u793e\u533a\u5408\u5e76\u3002\u6700\u521d\u7531Telegram\u5f00\u53d1\u7684TON\u9879\u76ee\u56e0\u6cd5\u5f8b\u5a01\u80c1\u800c\u505c\u6b62\uff0c\u4f46\u53e6\u4e00\u5bb6\u516c\u53f8TONLabs\u4ee5FreeTON\u7684\u540d\u4e49\u4ece\u5176\u5f00\u6e90\u4ee3\u7801\u91cd\u65b0\u542f\u52a8\u4e86\u8be5\u9879\u76ee\uff0c\u533a\u5757\u94fe\u4e8e2020\u5e74\u4e2d\u671f\u542f\u52a8\u3002FreeTON\u73b0\u5728\u66f4\u540d\u4e3aEverScale\uff0c\u662f\u5f53\u4eca\u4e16\u754c\u4e0a\u901f\u5ea6\u6700\u5feb\u7684\u533a\u5757\u94fe\uff0c\u5728\u4e00\u4e2a\u5f00\u653e\u7684\u7f51\u7edc\u4e0a\uff0c\u5728\u51e0\u5929\u5185\u6bcf\u79d2\u5927\u7ea6\u670955000\u7b14\u4ea4\u6613\u3002\nEverScale\u91c7\u7528\u4e86\u4e00\u79cd\u975e\u5e38\u72ec\u7279\u7684\u793e\u533a\u9a71\u52a8\u5f00\u53d1\u6d41\u7a0b\uff1a\u7ade\u8d5b\u7531\u4e3b\u9898\u6b21\u7ea7\u653f\u5e9c\uff08subgov\uff09\u7ec4\u7ec7\uff0c\u4ee5\u6539\u5584\u751f\u6001\u7cfb\u7edf\uff0c\u53c2\u8d5b\u8005\u8d62\u5f97\u4ee3\u5e01\u4ef7\u683c\uff0c\u4ee5\u5956\u52b1\u4ed6\u4eec\u7684\u9ad8\u8d28\u91cf\u5de5\u4f5c\u3002\u57282021\u671f\u95f4\uff0cOCamlPro\u53c2\u4e0e\u4e86\u5176\u4e2d\u7684\u51e0\u4e2a\u5206\u6cbb\uff0c\u65e2\u6709\u966a\u5ba1\u56e2\uff0c\u4e5f\u6709\u6b63\u5f0f\u7684\u65b9\u6cd5SuGOV\u548c\u5f00\u53d1\u8005\u4f53\u9a8cSuGOV\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e89\u593a\u667a\u80fd\u5408\u540c\u5f00\u53d1\u7684\u591a\u4e2a\u4ef7\u683c\u7684\u7ade\u4e89\u8005\uff08ZKSNARACK\u7528\u4f8b\uff0c\u62cd\u5356\u548c\u7ecf\u5e38\u6027\u652f\u4ed8\uff09\uff0c\u5bf9\u591a\u4e2a\u667a\u80fd\u5408\u7ea6\u7684\u5ba1\u8ba1\uff08TrueNFT\u5ba1\u8ba1\u3001\u667a\u80fd\u591a\u6570\u6295\u7968\u5ba1\u8ba1\u548c\u4e00\u4e2aDEX\u5ba1\u8ba1\uff09\uff0c\u4ee5\u53ca\u8282\u70b9\uff08\u6c47\u7f16\u7a0b\u5e8f\u6a21\u5757\uff09\u4e2d\u4e00\u4e9b\u751f\u9508\u7ec4\u4ef6\u7684\u89c4\u8303\u3002\nEverScale\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u8fd9\u9879\u5de5\u4f5c\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u5f00\u53d1\u4e00\u4e9b\u6709\u8da3\u7684OCaml\u8d21\u732e\uff1a\n\u6211\u4eec\u6539\u8fdb\u4e86ocaml solidity\u89e3\u6790\u5668\uff0c\u4ee5\u652f\u6301\u89e3\u6790EverScale\u5408\u540c\u6240\u9700\u7684solidity\u8bed\u8a00\u7684\u6240\u6709\u6269\u5c55\uff1b\n\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u540d\u4e3aft\u7684\u547d\u4ee4\u884c\u94b1\u5305\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u8f7b\u677e\u90e8\u7f72\u5408\u540c\u5e76\u4e0e\u4e4b\u4ea4\u4e92\uff1b\n\u6211\u4eec\u5728Dune Network\u548cEverScale\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5ea7\u6865\u6881\uff0c\u5c06DUN\u4ee3\u5e01\u4ea4\u6362\u4e3aEVER\u4ee3\u5e01\u3002\n\u6211\u4eec\u6700\u8fd1\u5728EverScale\u533a\u5757\u94fe\u4e0a\u7684\u5de5\u4f5c\u65e8\u5728\u5f00\u53d1Why3\u6846\u67b6\uff0c\u4ee5\u6b63\u5f0f\u9a8c\u8bc1EverScale Solidity\u5408\u540c\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u53c2\u4e0e\u4e86\u51e0\u4e2a\u5927\u578b\u667a\u80fd\u5408\u540c\u9879\u76ee\u7684\u89c4\u8303\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u8fd9\u4e9b\u9879\u76ee\u6b63\u5f0f\u9a8c\u8bc1\u5f00\u59cb\u540e\u7acb\u5373\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u8be5\u6846\u67b6\u3002\n\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5c06\u8fd9\u9879\u5de5\u4f5c\u6269\u5c55\u5230\u4ee5\u592a\u574a\u3001\u96ea\u5d29\u548c\u8bb8\u591a\u5176\u4ed6\u533a\u5757\u94fe\u4e0a\u7684\u57fa\u4e8eEVM\u7684\u5b9e\u4f53\u5408\u540c\u3002\u4e0e\u5176\u4ed6\u76f4\u63a5\u5728EVM\u5b57\u8282\u7801\u4e0a\u5de5\u4f5c\u7684\u6846\u67b6\u76f8\u6bd4\uff0c\u8fd9\u9879\u5de5\u4f5c\u76f4\u63a5\u96c6\u4e2d\u5728Solidity\u8bed\u8a00\u4e0a\uff0c\u5e94\u8be5\u4f7f\u9a8c\u8bc1\u66f4\u9ad8\u7ea7\u522b\uff0c\u56e0\u6b64\u66f4\u76f4\u63a5\u3002\n\u6211\u4eec\u51fa\u5e2d\u4e86\u5df4\u9ece\u65b0\u7248\u5f00\u6e90\u4f53\u9a8c\uff01\u6211\u4eec\u7684\u5c55\u4f4d\u6b22\u8fce\u53c2\u89c2\u8005\u8ba8\u8bba\u5b9a\u5236\u7684\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u3002Fabrice\u6709\u673a\u4f1a\u5c31FreeTON\uff08\u73b0\u5728\u7684EverScale\uff09\u505a\u4e86\u4e00\u4e2a\u6f14\u793a\uff08\u89c2\u770b\u89c6\u9891\uff09\uff0c\u8fd9\u662f\u4ed6\u6b63\u5728\u7814\u7a76\u7684\u9ad8\u901f\u533a\u5757\u94fe\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u89c1\u5230\u5f00\u6e90\u793e\u533a\u3002\u6b64\u5916\uff0c\u827e\u7f8e\u8389\n......", "note_en": "OCamlPro was created in 2011 to advocate for the adoption of the OCaml language and Formal Methods in general in the industry. 2021 was a very special year as we celebrated our 10th anniversary! While building a team of highly-skilled engineers, we navigated as usually through our expertise domains, programming languages design, compilation and analysis, advanced developer tooling, formal methods, blockchains and high-value software prototyping.\n In this article, as every year (see  2020 at OCamlPro for last year&#39;s post), we review some of the work we did during 2021, in many different worlds.\n As always, we warmly thank all our clients, partners, and friends, for their support and collaboration during this peculiar year!\n   A company is nothing without its employees. This year, we have been delighted to welcome a great share of newcomers:\n Hichem Rami Ait El Hara recently completed his master&#39;s degree in Computer Science. After an internship at OCamlPro, during which he developed a fuzzer for Alt-Ergo, he joined OCamlPro to work on Alt-Ergo and the verification of smart contracts. He will soon start a PhD on SMT solving.\n Nicolas Berthier holds a PhD on synchronous programming for resource-constrained systems. With many years experience on model-checking, abstract interpretation, and software analysis, he joined OCamlPro to work on programming language compilation and analysis.\n Julien Blond is a senior OCaml developer with a strong experience in formal verification of security software. He joined OCamlPro as both a project manager and a Coq expert.\n Keryan Didier joined the team as a R&amp;D engineer. He holds a PhD from University Pierre et Marie Curie, during which he developed an automated implementation method for hard real-time applications. Previously, he studied functional programming and language design at University Paris-Diderot. Keryan has been involved in the MLang project as well as the flambda2 project within OCamlPro&#39;s Compilation team.\n Mohamed Hernouf recently completed his master&#39;s degree in Computer Science. After an internship at OCamlPro, working on the  OCaml Documentation Hub, he joined OCamlPro and continues to work on the documentation hub and other OCaml applications.\n Dario Pinto is a student at the  42Paris School of Computer Science. He joined OCamlPro in a work-study contract for two years.\n Artemiy Rozovyk recently completed his master&#39;s degree in Computer Science. He joined OCamlPro to work on the development of applications for the EverScale and Avalanche blockchains.\n    The M language is a very old programming language developed by the French tax administration to compute income taxes. Recently, Denis Merigoux and Raphael Monat have implemented a  new compiler in OCaml for the M language. This new compiler shows better performance, clearer semantics, and achieves greater maintainability than the former compiler. OCamlPro is now involved in strengthening this new compiler, to put it in production and eventually compute the taxes of more than 30 million French families.\n   Born more than 60 years ago,  COBOL is still said to be the most used language in the world, in terms of the number of lines running in computers, though many people forecast it would disappear at the edge of the 21st century. With more than 300 reserved keywords, it is also one of the most complex languages to parse and analyse. It&#39;s not enough to scare the developers at OCamlPro: while helping one of the biggest COBOL users in France to translate its programs into the  GNUCobol open-source compiler, OCamlPro built a strong expertise of COBOL and mainframes, and developed a powerful parser of COBOL that will help us bring modern development tools to the COBOL developers.\n   Geneweb is one of the most powerful software to manage and share genealogical data to date. Written in OCaml more than 20 years ago, it contains a web server and complex algorithms to compute information on family trees. It is used by  Geneanet, which is one of the leading companies in the genealogy field, to store more than 800,000 family trees and more than 7 billion names of ancestors. OCamlPro is now working with Geneanet to improve Geneweb and make it scale to even larger data sets.\n   The  Mosaic platform helps researchers, industrials actors and regulators in the field of ecotoxicology by providing an easy way to run various statistical analyses. All the user has to do is to enter some data on the web interface, then computations are run on the server and the results are displayed. The platform is fully written in OCaml and takes care of calling the mathematical model which is written in R. OCamlPro modernised the project in order to ease maintainance and new contributions. In the process, we discovered  bugs introduced by new R versions (without any kind of warning). Then we developped a new interface for data input, it&#39;s similar to a spreadsheet and much more convenient than having to write raw CSV. During this work, we had the opportunity to contribute to some other OCaml packages such as  leveldb or write new ones such as  agrid.\n    OCamlPro is proud to be working on Flambda2, an ambitious OCaml optimizing compiler project, initiated with Mark Shinwell from Jane Street, our long-term partner and client. Flambda focuses on reducing the runtime cost of abstractions and removing as many short-lived allocations as possible. Jane Street has launched large-scale testing of flambda2, and on our side, we have documented the design of some key algorithms. In 2021, the Flambda team grew bigger with Keryan. Along with the considerable amount of fixes and improvements, this will allow us to publish  Flambda2 in the coming months!\n In other OCaml compiler news, 2021 saw the long-awaited merge of the multicore branch into the official development branch. This was thanks to the amazing work of many people, including our own, Damien Doligez. This is far from the end of the story though, and we&#39;re looking forward to both further contributing to the compiler (fixing bugs, re-enabling support for all platforms) and making use of the features in our own programs.\n    Opam is the OCaml source-based package manager. The first specification draft was written  in early 2012 and went on to become OCaml\u2019s official package manager \u2014 though it may be used for other languages and projects, since Opam is language-agnostic! If you need to install, upgrade and manage your compiler(s), tools and libraries easily, Opam is meant for you. It supportsmultiple simultaneous compiler installations, flexible package constraints, and a Git-friendly development workflow.\n Opam development and maintenance is a collaboration between OCamlPro, with Raja &amp; Louis, and OCamlLabs, with David Allsopp &amp; Kate Deplaix.\n Our 2021 work on opam lead to the final release of the long-awaited opam 2.1, three versions of opam 2.0 and two versions of opam 2.1 with small fixes.\n  Switch invariants, replacing the &#34;base packages&#34; in opam 2.0 and allowing for easier compiler upgrades\n  CLI versioning, allowing cleaner deprecations for opam now and also improvements to semantics in future without breaking backwards-compatibility\n  In 2021, we also prepared the soon to-be alpha release of opam 2.2 version. It will provide a better handling of the Windows ecosystem, integration of SoftwareHeritage  archive fallback, better UI on user interactions, recursively pinning of projects, fetching optimisations, etc.\n   We have also been active in the maintainance of  Learn-ocaml. What was originally designed as the platform for the  OCamlMOOC is now a tool in the hands of OCaml teachers worldwide, managed and funded by  the OCaml Foundation.\n The work included a well overdue port to OCaml 4.12; generation of portable executables (automatic through CI) for much easier deployment and use of the command-line client; as well as many quality-of-life and usability improvements following from two-way conversations with many teachers.\n On a related matter, we also reworked our on-line OCaml editor and toplevel  TryOCaml, improving its design and adding features like code snippet sharing. We were glad to see that, in these difficult times, these tools proved useful to both teachers and students, and look forward to improving them further.\n   As one of the biggest user of OCaml, OCamlPro aims at facilitating daily use of OCaml by developing a lot of open-source tooling.\n One of our main contributions to the OCaml ecosystem in 2021 was probably the OCaml Documentation Hub at  docs.ocaml.pro.\n The OCaml Documentation Hub is a website that provides documentation for more than 2000 OPAM packages, among which of course the most popular ones, with inter-package documentation links! The website also contains browsable sources for all these packages, and a search engine to discover useful OCaml functions, modules, types and classes.\n All this documentation is generated using our custom tool Digodoc. Though it&#39;s not wortha specific section, we also kept maintaining Drom, our layer on Dune and Opamthat most of our recent projects use.\n   Last year has also seen the long awaited collaboration between Software Heritage and OCamlPro happen.\n Thanks to a grant by the  Alfred P. Sloan Foundation, OCamlPro has been able to collaborate with our partners at Software Heritage and manage to further expand the coverage of this gargantuan endeavour of theirs by archiving 3516 opam packages.In effect, the main benefits of this Open Source collaboration have been:\n The addition of several modules to the Software Heritage architecture, allowing the archiving of said opam packages;\n  An implementation of a possible fallback onto Software Heritage if a given package on opam is no longer available;\n Not long after Software was at last acknowledged by Unesco as part of the World Heritage, we were thrilled to be part of this great and meaningful initiative. We could feel how true passion remained throughout our interactions and long after the work was done.\n    OCamlPro develops and maintains  Alt-Ergo, an automatic solver of mathematical formulas designed for program verification and based on Satisfiability Modulo Theories (SMT). Alt-Ergo was initially created within the  VALS team at  University of Paris-Saclay.\n In 2021, we continued to focus on the maintainability of our solver. We released versions 2.4.0 and  2.4.1 in January and July respectively, with 2.4.1 containing a bugfix as well as some performance improvements.\n In order to increase our test coverage, we instrumented Alt-Ergo so that we could run it using  afl-fuzz. Although this is a proof of concept, and has yet to be integrated into Alt-ergo&#39;s continuous integration, it has already helped us find a few bugs, such as  this.\n  We thank our partners from the  Alt-Ergo Users\u2019 Club, Adacore, CEA List, MERCE (Mitsubishi Electric R&amp;D Centre Europe), Thal\u00e8s, and Trust-In-Soft, for their trust. Their support allows us to maintain our tool.\n The club was launched in 2019 and the third annual meeting of the Alt-Ergo Users\u2019 Club was held in early April 2021. Our annual meeting is the perfect place to review each partner\u2019s needs regarding Alt-Ergo. This year, we had the pleasure of receiving our partners to discuss the roadmap for future Alt-Ergo features and enhancements. If you want to join us for the next meeting (coming soon), contact us!\n Finally, we will be able to merge into the main branch of Alt-Ergo some of the work we did in 2020. Thanks to our partner MERCE (Mitsubishi Electric R&amp;D Centre Europe), we worked on the SMT model generation. Alt-Ergo is now (partially) able to output a model in the smt-lib2 format. Thanks to the  Why3 team from University of Paris-Saclay, we hope that this work will be available in the Why3 platform to help users in their program verification efforts.\n This work is funded in part by the FUI R&amp;D Project LCHIP, MERCE, Adacore and with the support of the  Alt-Ergo Users\u2019 Club.\n  Dolmen is a powerful library providing flexible parsers and typecheckers for many languages used in automated deduction.\n The ongoing work on using the Dolmen library as frontend for Alt-Ergo has progressed considerably, both on the side of dolemn which has been extended to support Alt-Ergo&#39;s native language in  this PR, and on Alt-Ergo&#39;s side to add dolmen as a frontend that can be chosen in  this PR. Once these are merged, Alt-Ergo will be able to read input problems in new languages, such as  TPTP!\n    A few months ago, we published a series of posts:   verification for dummies: SMT and induction. These posts introduce and discuss SMT solvers, the notion of induction and that of invariant strengthening. They rely on   mikino, a simple software we wrote that can analyze simple transition systems and perform SMT-based induction checks (as well as BMC,  i.e. bug-finding). We wrote mikino in Rust with readability and ergonomics in mind: mikino showcases the basics of writing an SMT-based model checker performing induction. The posts are very hands-on and leverage mikino&#39;s high-quality output to discuss induction and invariant strengthening, with examples that readers can run and edit themselves.\n  During 2021 we ended up using the TLA+ language and its associated TLC verification engine in several completely unrelated projects. TLC is an amazing tool, but it is not suited to handle a TLA+ project with many modules (files), regression tests,  etc. In particular, TLA+ is not a typed language. This means that TLA+ code tends to have many  checks (dynamic assertions) checking that quantities have the expected type. This is fine, albeit a bit tedious, to some extent, but as the code grows bigger the analysis conducted by TLC can become very, very expensive. Eventually it is not reasonable to keep assert-type-checking everything since it contributes to TLC&#39;s analysis exploding.\n As TLA+/TLC users, we are currently developing  matla which  manages  TLA+ projects. Written in Rust, matla is heavily inspired by the Rust ecosystem, in particular  cargo. Matla has not been publicly released yet as we are waiting for more feedback from early users. We do use it internally however as its various features make our TLA+ projects much simpler:\n provide a  Matla module with  &#34;debug assertions&#34; helpers: these assertions are active in  debug mode, which is the default when running  matla run. Passing  --release to matla&#39;s run mode however compiles all debug assertions away; this allows to type-check everything when debugging while making sure release runs do not pay the price of these checks;\n handle  integration testing: matla projects have a  tests directory where users can write tests (TLA files with a  .tla and  .cfg files) and specify if they are expected to be successful or to fail (and how);\n understand and transform TLC&#39;s output to improve user feedback, in particular when TLC yields an error (not good enough yet and is the reason we have not released yet); matla also parses and prettifies TLC&#39;s counterexample traces by formatting values, formatting states (aggregation of values), and render traces of states graphically using ASCII art.\n  The ongoing pandemic is undoubtingly impacting our professional training activities. Still, we had the opportunity to set up a Rust training session with applied researchers at ONERA during the summer. The session spanned over a week (about seven hours a day) and was our first fully remote Rust training session. We still believe on-site training (when possible) is better, full remote offers some flexibility (spreading out the training over several weeks for instance) and our experience with ONERA shows that it can work in practice with the right technology. Interestingly, it turns out that some aspects of the session actually work better with remote: hands-on exercises and projects for instance benefit from screen sharing. Discussing code with one participant is done with screen sharing, meaning all participants can follow along if they so chose.\n Long story short, fully remote training is something we now feel confident proposing to our clients as a flexible alternative to on-site training.\n  We participated in a contest aiming at writing a high-level specification of the (compiler for) the TON VM assembler, in particular its instructions and how they are compiled. This contest was a first step towards applying Formal Methods, and in particular formal verification, to the TON VM. We are happy to report that we finished first in this context, and are looking forward to future contests pushing Formal Methods further in the Everscale blockchain.\n    In 2019-2020, we concentrated our efforts on the development of blockchains on adding new programming languages to the  Dune Network ecosystem, in collaboration with Origin Labs. You can read more about  Love and  Solidity for Dune.\n At the end of 2020, it became clear that high-throughput was becoming a major requirement for blockchain adoption in real applications, and that the Tezos-based technology behind Dune Network could not compete with high-performance blockchains such as  Solana or  Avalanche. Following this observation, the Dune Network community decided to merge with the FreeTON community early in 2021. Initially developed by Telegram, the TON project was stopped under legal threats, but another company,  TONLabs, restarted the project from its open-source code under the FreeTON name, and the blockchain was launched mid-2020. FreeTON, now renamed  EverScale, is today the fastest blockchain in the world, with around 55,000 transactions per second on an open network sustained during several days.\n EverScale uses a very unique community-driven development process: contests are organized by thematic sub-governances (subgov) to improve the ecosystem, and contestants win prices in tokens to reward their high-quality work. During 2021, OCamlPro got involved in several of these sub-governances, both as a jury, in the Formal Methods subgov and the Developer Experience subgov, and a contestant winning multiple prices for the development of smart contracts ( zksnarks use-cases,  auctions and  recurring payments), the audit of several smart contracts ( TrueNFT audit,  Smart Majority Voting audit and  a DEX audit), and the specification of some Rust components in the node (the  Assembler module).\n This work in the EverScale ecosystem gave us the opportunity to develop some interesting OCaml contributions:\n We improved our  ocaml-solidity parser to support all the extensions of the  Solidity language required to parse EverScale contracts;\n  We developed a command line  wallet called  ft to help developers easily deploy the contracts and interact with them;\n We developed a  bridge between Dune Network and EverScale to swap DUN tokens into EVER tokens.\n   Our most recent work on the EverScale blockchain has been targetted into the development of a  Why3 framework to formally verify EverScale Solidity contracts. At the same time, we have been involved in the specification of several big smart contract projects, and we plan to use this framework in practice on these projects as soon as their formal verification starts.\n We hope to be able to extend this work to EVM based Solidity contracts, as available on Ethereum and Avalanche and many other blockchains. By comparison with other frameworks that work directly on the EVM bytecode, this work focused directly on the Solidity language should make the verification much higher-level and so more straight-forward.\n    We were present at the new edition of the  Open Source Experience in Paris! Our booth welcomed our visitors to discuss tailor-made software solutions. Fabrice had the opportunity to give a presentation on FreeTON (Now EverScale)  (Watch the video), the high speed blockchain he is working on. We were delighted to meet the open source community. Moreover, Am\u00e9lie\n......", "posttime": "2022-02-19 04:14:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ocamlpro,ocaml", "title": "2021\u5728OCamlPro", "title_en": "2021 at OCamlPro", "transed": 1, "url": "https://www.ocamlpro.com/blog/2022_01_31_2021_at_ocamlpro", "via": "", "real_tags": ["ocamlpro", "ocaml"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074012, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Linux\u5bb9\u5668\uff08LXC\uff09\u662f\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u865a\u62df\u5316\u6280\u672f\uff0c\u4f7f\u60a8\u80fd\u591f\u5728\u4e00\u53f0Linux\u673a\u5668\uff08LXC\u4e3b\u673a\uff09\u4e0a\u540c\u65f6\u521b\u5efa\u548c\u8fd0\u884c\u591a\u4e2aLinux\u64cd\u4f5c\u7cfb\u7edf\uff08OS\uff09\u3002LXC\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5de5\u5177\u6765\u7ba1\u7406\u5bb9\u5668\uff0c\u4ee5\u53ca\u521b\u5efa\u6700\u5e38\u89c1Linux\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u73af\u5883\u7684\u6a21\u677f\u3002\nDocker\u662f\u4e00\u79cd\u5f00\u6e90\u7684\u5bb9\u5668\u5316\u6280\u672f\uff0c\u4e13\u6ce8\u4e8e\u5728\u9694\u79bb\u73af\u5883\u4e2d\u8fd0\u884c\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u7684Docker\u5f15\u64ce\u4f7f\u60a8\u80fd\u591f\u521b\u5efa\u3001\u8fd0\u884c\u6216\u5206\u53d1\u5bb9\u5668\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528Docker Hub\u4e0e\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u5171\u4eab\u5e94\u7528\u7a0b\u5e8f\u548c\u534f\u4f5c\u3002\n\u867d\u7136LXC\u548cDocker\u5728\u67b6\u6784\u548c\u4f7f\u7528\u65b9\u9762\u6709\u5f88\u591a\u5171\u540c\u4e4b\u5904\uff0c\u4f46\u5b83\u4eec\u5728\u8bb8\u591a\u65b9\u9762\u4e5f\u6709\u6240\u4e0d\u540c\u3002\u672c\u6587\u5c06\u6bd4\u8f83\u5b83\u4eec\u7684\u4e3b\u673a\u5229\u7528\u7387\u3001\u7b80\u5355\u6027\u3001\u901f\u5ea6\u3001\u5b89\u5168\u6027\u3001\u6613\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u5de5\u5177\u3002\u6211\u4eec\u8fd8\u5c06\u8ba8\u8bba\u8fd9\u4e9b\u5de5\u5177\u7684\u6700\u4f73\u7279\u6027\u53ca\u5176\u7f3a\u70b9\u3002\n\u8ba9\u6211\u4eec\u5148\u4ed4\u7ec6\u770b\u770b\u4e0a\u9762\u5217\u51fa\u7684\u6bcf\u4e2a\u6bd4\u8f83\u6807\u51c6\u533a\u57df\uff0c\u5e76\u63a2\u7d22LXC\u548cDocker\u5728\u6bcf\u4e2a\u7c7b\u522b\u4e0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\nLXC\u548cDocker\u5bb9\u5668\u90fd\u4e0e\u4e3b\u673a\u7684\u5185\u6838\u901a\u4fe1\u3002\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u90a3\u53c8\u600e\u6837\uff1f\n\u5171\u4eab\u4e3b\u673a\u7cfb\u7edf\u7684\u5185\u6838\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u4f60\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u8fd9\u4e2a\u5b9a\u4e49\u3002\u539f\u56e0\u662f\u5bb9\u5668\u6280\u672f\u8bd5\u56fe\u4e3a\u865a\u62df\u673a\u63d0\u4f9b\u66f4\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u6d41\u884c\u7684\u5b9a\u4e49\u662f\u4e0e\u533a\u5206\u865a\u62df\u673a\uff08VM\uff09\u548c\u865a\u62df\u73af\u5883\uff08VE\uff0c\u4e5f\u79f0\u4e3a\u5bb9\u5668\u6280\u672f\uff09\u6700\u76f8\u5173\u7684\u5b9a\u4e49\u3002\n\u8fd9\u4e9b\u865a\u62df\u5316\u6280\u672f\uff08VM\u6216VE\uff09\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u4e3b\u673a\u3002\u4f46\u662f\u4e3a\u4e86\u6bd4\u8f83\u4e24\u79cd\u5bb9\u5668\u6280\u672f\uff08VEs\uff09\u2014\u2014LXD\u548cDocker\uff0c\u6211\u4eec\u9700\u8981\u6bd4\u7b2c\u4e00\u79cd\u5b9a\u4e49\u66f4\u6df1\u5165\u4e00\u4e9b\u3002\n\u5728Linux\u4e2d\uff0c\u5185\u5b58\u5206\u4e3a\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\uff0c\u5185\u6838\u7a7a\u95f4\u662f\u4e3a\u8d1f\u8d23\u7ba1\u7406CPU\u3001\u5185\u5b58\u548c\u8bbe\u5907\u7684\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u4fdd\u7559\u7684\u3002\n\u8bf4LXC\u5171\u4eab\u5176\u4e3b\u673a\u7684\u5185\u6838\u5e76\u4e0d\u80fd\u8bf4\u660e\u5168\u90e8\u60c5\u51b5\u3002\u5b9e\u9645\u4e0a\uff0cLXC\u5bb9\u5668\u6b63\u5728\u4f7f\u7528Linux\u5185\u6838\u7279\u6027\u6765\u521b\u5efa\u9694\u79bb\u7684\u8fdb\u7a0b\u548c\u6587\u4ef6\u7cfb\u7edf\u3002\n\u8ba9\u6211\u4eec\u770b\u51e0\u4e2a\u4f8b\u5b50\u3002\u5728Linux\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528ps\u547d\u4ee4\u5217\u51fa\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u5982\u679c\u60a8\u5728LXC\u4e2d\u8fd0\u884c\u4e1c\u897f\u5e76\u4ece\u4e3b\u673a\u4e0a\u8fd0\u884cps\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u5217\u8868\uff0c\u5305\u62ec\u60a8\u7684\u5bb9\u5668\uff08\u662f\u7684\uff0c\u4ece\u4e3b\u673a\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5bb9\u5668\u662f\u6700\u91cd\u8981\u7684\u8fdb\u7a0b\uff09\u3002\u4f46\u662f\uff0c\u5982\u679c\u4eceLXC\u5bb9\u5668\u4e2d\u8fd0\u884c\u76f8\u540c\u7684ps\u547d\u4ee4\uff0c\u5219\u53ea\u4f1a\u770b\u5230\u5bb9\u5668\u4e2d\u542f\u52a8\u7684\u8fdb\u7a0b\u3002LXC\u5229\u7528\u5185\u6838\u540d\u79f0\u7a7a\u95f4\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\u3002\n\u7c7b\u4f3c\u5730\uff0c\u5728Linux\u4e3b\u673a\u4e0a\uff0c\u60a8\u6709/bin\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6807\u51c6\u6839\u76ee\u5f55\u3002\u5728\u5bb9\u5668\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a/bin\u3002\u5bb9\u5668\u7684\u7528\u6237\u7a7a\u95f4\u88ab\u6346\u7ed1\u5728\u5bb9\u5668\u5185\u90e8\uff0c\u53ef\u4ee5\u88ab\u8fd0\u9001\u5230\u4e0d\u540c\u7684\u4e3b\u673a\u3002\u8fd9\u79cd\u7528\u6237\u7a7a\u95f4\u9694\u79bb\u662f\u5728Ubuntu\u4e3b\u673a\u4e0a\u5b89\u88c5Alpine Linux\u5bb9\u5668\u7684\u539f\u56e0\uff0c\u56e0\u4e3aLinux\u5bb9\u5668\u4e2d\u7684\u7a0b\u5e8f\u4e0e\u7cfb\u7edf\u7684\u5176\u4f59\u90e8\u5206\u662f\u9694\u79bb\u7684\u3002LXC\u5229\u7528chroot\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002\nDocker\u57281.0\u7248\u672c\u4e4b\u524d\u4f7f\u7528LXC\u521b\u5efa\u4e0e\u4e3b\u673a\u7cfb\u7edf\u7684\u9694\u79bb\u3002\u540e\u6765\uff0cDocker\u4e3aLXC\u5f00\u53d1\u4e86\u81ea\u5df1\u7684\u66ff\u4ee3\u54c1\uff0c\u540d\u4e3alibcaontainer\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48Docker\u548cLXC\u6709\u8fd9\u4e48\u591a\u5171\u540c\u4e4b\u5904\u3002\n\u5b83\u4e3a\u7279\u5b9a\u4e8e\u673a\u5668\u7684\u8bbe\u7f6e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\uff0c\u4f8b\u5982\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u65e5\u5fd7\u7b49\u3002\u8fd9\u4e9b\u662fDocker\u5f15\u64ce\u7684\u4e00\u90e8\u5206\uff0c\u4f7fDocker\u5bb9\u5668\u66f4\u52a0\u4fbf\u643a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u5e95\u5c42\u7269\u7406\u673a\u5668\u7684\u4f9d\u8d56\u66f4\u5c11\u3002\nLinux\u5bb9\u5668\uff08LXC\uff09\u5728\u8bbe\u8ba1\u4e0a\u66f4\u52a0\u7075\u6d3b\u3002\u5b83\u4eec\u66f4\u63a5\u8fd1\u865a\u62df\u673a\u2014\u2014\u4f60\u53ef\u4ee5\u50cf\u914d\u7f6e\u865a\u62df\u673a\u4e00\u6837\uff0c\u7528LXC\u914d\u7f6e\u548c\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\u3002\u53ef\u4ee5\u5229\u7528chroot\u3001cgroups\u548c\u540d\u79f0\u7a7a\u95f4\u7b49\u5185\u6838\u7279\u6027\u6765\u521b\u5efaLXC\u865a\u62df\u73af\u5883\u3002\u8fd9\u4e9b\u5185\u6838\u673a\u5236\u6709\u52a9\u4e8e\u63a7\u5236\u8d44\u6e90\u4f7f\u7528\u548c\u8fdb\u7a0b\u5728\u7cfb\u7edf\u5176\u4f59\u90e8\u5206\u7684\u53ef\u89c1\u6027\u3002\n\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\uff0cDocker\u5bb9\u5668\u6700\u521d\u662f\u4eceLXC\u9879\u76ee\u4e2d\u6d3e\u751f\u51fa\u6765\u7684\u3002\u7136\u800c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u8bbe\u8ba1\uff1aDocker\u5bb9\u5668\u662f\u4e13\u95e8\u4e3a\u5fae\u670d\u52a1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4e0e\u865a\u62df\u673a\u975e\u5e38\u4e0d\u540c\u3002Docker\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1b\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u65e5\u5fd7\u62bd\u8c61\u4f7f\u5f97\u5f00\u53d1\u4eba\u5458\u51e0\u4e4e\u4e0d\u9700\u8981\uff08\u6216\u6839\u672c\u4e0d\u9700\u8981\uff09Linux\u7684\u5148\u9a8c\u77e5\u8bc6\u3002\nDocker\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7684\u7b80\u5355\u6027\u6b63\u662f\u5b83\u5982\u6b64\u53d7\u6b22\u8fce\u7684\u539f\u56e0\u3002\u8fd9\u4e24\u4e2a\u5e73\u53f0\u90fd\u4f7f\u7528\u7b80\u5355\uff0c\u4f46\u9488\u5bf9\u4e0d\u540c\u7684\u53d7\u4f17\u3002\n\u4e0e\u865a\u62df\u673a\u76f8\u6bd4\uff0cLXC\u62e5\u6709\u66f4\u5feb\u7684\u542f\u52a8\u65f6\u95f4\u2014\u2014\u5b83\u4e0d\u9700\u8981\u6253\u5305\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e26\u6709\u7f51\u7edc\u63a5\u53e3\u3001\u865a\u62df\u5904\u7406\u5668\u548c\u786c\u76d8\u9a71\u52a8\u5668\u7684\u5b8c\u6574\u673a\u5668\u8bbe\u7f6e\u3002\nDocker\u5bb9\u5668\u4e5f\u5f88\u8f7b\uff0c\u8fd9\u5927\u5927\u63d0\u9ad8\u4e86\u5b83\u4eec\u7684\u901f\u5ea6\u3002Docker\u4e3a\u62bd\u8c61\u5b58\u50a8\u548c\u7f51\u7edc\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u5c42\uff0c\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u4e0d\u5e94\u8be5\u770b\u5230\u7531\u6b64\u5bfc\u81f4\u7684\u91cd\u5927\u6027\u80fd\u95ee\u9898\u3002\u521b\u5efa\u548c\u8fd0\u884cDocker\u5bb9\u5668\u9700\u8981\u51e0\u79d2\u949f\u3002\u56e0\u4e3aDocker\u53ef\u4ee5\u5728\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u73b0\u6709\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u6240\u4ee5\u51e0\u4e4e\u53ef\u4ee5\u7acb\u5373\u4ece\u5176\u6620\u50cf\u542f\u52a8\u5bb9\u5668\u3002\nDocker\u9ed8\u8ba4\u652f\u6301\u5206\u5c42\u5bb9\u5668\u3002\u8fd9\u610f\u5473\u7740\u751f\u6210\u7684\u5bb9\u5668\u662f\u5bf9\u6587\u4ef6\u7cfb\u7edf\u6240\u505a\u66f4\u6539\u7684\u987a\u5e8f\u7ec4\u5408\uff0c\u7c7b\u4f3c\u4e8eGit\u5386\u53f2\u8bb0\u5f55\u3002\u5c42\u53ef\u4ee5\u5e76\u884c\u4e0b\u8f7d\uff0c\u5728\u591a\u53f0\u673a\u5668\u4e0a\u540c\u65f6\u542f\u52a8\u591a\u4e2a\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u901f\u5ea6\u4f18\u52bf\u3002\n\u5bf9Docker\u6709\u5229\u7684\u4e00\u70b9\u662f\uff0c\u73b0\u5728\u7684\u8d8b\u52bf\u662f\u521b\u5efa\u4e0d\u53d7\u6b22\u8fce\u7684Docker\u56fe\u50cf\u3002\u4f7f\u7528distroless\uff0c\u60a8\u53ea\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u3001\u7f16\u8bd1\u7684\u4ee3\u7801\u548c\u5fc5\u8981\u7684\u7ed1\u5b9a\u5c31\u53ef\u4ee5\u4e86\u3002LXC\u6620\u50cf\u65e8\u5728\u590d\u5236Linux\u53d1\u884c\u7248\uff0c\u5982Ubuntu\u3001Debian\u6216Alpine\u3002Docker\u65e8\u5728\u6253\u5305\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u53ef\u80fd\u4f1a\u8ba9\u60a8\u5728\u63d0\u4f9b\u6570\u767e\u4e2a\u5bb9\u5668\u65f6\u5360\u636e\u4e0a\u98ce\u3002\nLXC\u548cDocker\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u5f02\u51e0\u4e4e\u5fae\u4e0d\u8db3\u9053\u3002\u4e24\u8005\u90fd\u63d0\u4f9b\u5feb\u901f\u542f\u52a8\u65f6\u95f4\u3002\u4e0b\u8f7d\u4e00\u4e2aLXC\u6620\u50cf\u53ef\u80fd\u6bd4\u6ca1\u6709\u53d1\u884c\u7248\u672c\u7684Docker\u6620\u50cf\u6162\uff0c\u4f46\u5e76\u975e\u6240\u6709Docker\u6620\u50cf\u90fd\u662f\u65e0\u53d1\u884c\u7248\u672c\u7684\uff0c\u4e0eLXC\u76f8\u6bd4\uff0cDocker\u6709\u6539\u8fdb\u7684\u7a7a\u95f4\u3002\nLXC\u4e30\u5bcc\u4e86\u5b89\u5168\u914d\u7f6e\uff0c\u5982\u7ec4\u7b56\u7565\u548c\u9ed8\u8ba4AppArmor\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4fdd\u62a4\u4e3b\u673a\u4e0d\u88ab\u610f\u5916\u6ee5\u7528\u5bb9\u5668\u5185\u7684\u6743\u9650\u3002\nDocker\u5c06\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u8fd0\u884c\u5728\u5176\u4e0a\u7684\u670d\u52a1\u5206\u79bb\uff0c\u4ee5\u786e\u4fdd\u5b89\u5168\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f46Docker\u4ee5root\u7528\u6237\u8eab\u4efd\u8fd0\u884c\u7684\u4e8b\u5b9e\u53ef\u80fd\u4f1a\u589e\u52a0\u6076\u610f\u8f6f\u4ef6\u7684\u98ce\u9669\u3002\u8fd9\u662f\u56e0\u4e3aDocker\u5b88\u62a4\u8fdb\u7a0b\u7ba1\u7406\u7f51\u7edc\u3001\u5bb9\u5668\u3001\u56fe\u50cf\u548c\u5377\u7b49Docker\u5bf9\u8c61\uff0c\u5e76\u5904\u7406Docker API\u8bf7\u6c42\uff0c\u5b83\u4e5f\u4f5c\u4e3a\u6839\u7528\u6237\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\u3002\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u4f1a\u5ba1\u6838Docker\u5b89\u88c5\uff0c\u4ee5\u8bc6\u522b\u6f5c\u5728\u7684\u6f0f\u6d1e\u3002\nLXC\u5c06\u5b89\u5168\u7f6e\u4e8e\u9996\u4f4d\u3002\u5b83\u4e3a\u60a8\u63d0\u4f9b\u5b89\u5168\u529f\u80fd\uff0c\u5305\u62ecLinux\u529f\u80fd\u652f\u6301\uff0c\u4ee5\u5e2e\u52a9\u60a8\u63a7\u5236\u5bb9\u5668\u73af\u5883\u548c\u6258\u7ba1\u7684\u5e94\u7528\u7a0b\u5e8f\u3002Docker\u5c06\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u4fdd\u5b58\u5728\u4e0d\u540c\u7684\u5bb9\u5668\u4e2d\u7684\u65b9\u6cd5\u662f\u4e00\u4e2a\u4f18\u52bf\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u6258\u7ba1\u7684\u662f\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u80fd\u9700\u8981\u6709\u7ecf\u9a8c\u7684\u5b89\u5168\u5de5\u7a0b\u5e08\u5173\u6ce8\uff0c\u90a3\u4e48\u8fd9\u79cd\u7b56\u7565\u4e5f\u6709\u5176\u81ea\u8eab\u7684\u5b89\u5168\u7f3a\u70b9\u3002\n\u5f00\u59cb\u4f7f\u7528LXC\u5f88\u5bb9\u6613\uff1b\u5b83\u9700\u8981\u5b89\u88c5\u4e0eLinux\u53d1\u884c\u7248\u517c\u5bb9\u7684LXC\u6700\u65b0\u7248\u672c\u3002\u8fd9\u4f7f\u5f97LXC\u547d\u4ee4\u3001\u6a21\u677f\u548cpython3\u7ed1\u5b9a\u53ef\u7528\u4e8e\u521b\u5efa\u5bb9\u5668\u3002\u6b64\u5916\uff0cLXC\u4e3a\u6bcf\u4e2a\u5bb9\u5668\u8fd0\u884c\u4e00\u4e2a\u6807\u51c6\u64cd\u4f5c\u7cfb\u7edf\u5355\u5143\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6258\u7ba1\u5728\u4e00\u4e2a\u6807\u51c6\u7684Linux\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u3002\u8fd9\u6837\uff0c\u4ece\u88f8\u673a\u6216\u865a\u62df\u673a\u670d\u52a1\u5668\u8fc1\u79fb\u5230LXC\u5bb9\u5668\u6bd4\u8fc1\u79fb\u5230Docker\u5bb9\u5668\u66f4\u5bb9\u6613\u7ba1\u7406\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cDocker\u4f7f\u4f7f\u7528\u5bb9\u5668\u548c\u8fd0\u884c\u7a0b\u5e8f\u53d8\u5f97\u5bb9\u6613\u3002\u6709\u4e86Docker\uff0c\u4f60\u53ef\u4ee5\u5c06\u96c6\u88c5\u7bb1\u6253\u5305\u5e76\u8fd0\u9001\u5230\u5176\u4ed6\u673a\u5668\u4e0a\u4f7f\u7528\u3002\u53ef\u4ee5\u4f7f\u7528docker build\u547d\u4ee4\u4ecedocker\u6587\u4ef6\u751f\u6210\u56fe\u50cf\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u5bb9\u5668\u5e73\u53f0\uff0cDocker\u7684\u5165\u95e8\u975e\u5e38\u7b80\u5355\u3002\u4f60\u6240\u9700\u8981\u7684\u53ea\u662f\u4e00\u4e2a\u652f\u6301\u672c\u5730\u5bb9\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982Linux\u3001Docker for Mac/Windows\u6216VirtualBox\uff0c\u5b89\u88c5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\nLXC\u548cDocker\u90fd\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u63d0\u4f9b\u6587\u6863\u548c\u6307\u5357\u6765\u5e2e\u52a9\u60a8\u521b\u5efa\u548c\u90e8\u7f72\u5bb9\u5668\u3002\u4ed6\u4eec\u5bf9Java\u548cPython\u7b49\u8bed\u8a00\u7684\u5e93\u548c\u7ed1\u5b9a\u7684\u652f\u6301\u5bf9\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u662f\u4e00\u4e2a\u4f18\u52bf\u3002\n\u4e0eDocker\u76f8\u6bd4\uff0cLXC\u7684\u53ef\u6269\u5c55\u6027\u8f83\u5dee\u3002\u5b83\u7684\u56fe\u50cf\u4e0d\u50cfDocker\u7684\u56fe\u50cf\u90a3\u4e48\u8f7b\u91cf\u7ea7\u3002\u7136\u800c\uff0cLXC\u6620\u50cf\u6bd4\u7269\u7406\u673a\u6216\u865a\u62df\u673a\u7684\u6620\u50cf\u66f4\u8f7b\u3002\u8fd9\u4f7f\u5f97\u5b83\u975e\u5e38\u9002\u5408\u6309\u9700\u8d44\u6e90\u8c03\u914d\u548c\u81ea\u52a8\u7f29\u653e\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528LXC\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u865a\u62df\u673a\uff0c\u800c\u65e0\u9700\u865a\u62df\u673a\u76d1\u63a7\u7a0b\u5e8f\uff0c\u8fd9\u4f7f\u5f97Linux\u5bb9\u5668\u6210\u4e3a\u4e00\u79cd\u53ef\u6269\u5c55\u7684\u9009\u9879\u3002\n\u4f7f\u7528Docker\uff0c\u60a8\u53ef\u4ee5\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u5206\u89e3\u5230\u5355\u72ec\u7684\u5bb9\u5668\u4e2d\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728\u4e00\u4e2a\u5bb9\u5668\u4e2d\u8fd0\u884cOracle\u6570\u636e\u5e93\uff0c\u540c\u65f6\u8fd0\u884cCassandra\u670d\u52a1\u5668\u548cASP\u3002NET\u5e94\u7528\u5728\u5176\u4ed6\u5355\u72ec\u7684\u5bb9\u5668\u4e2d\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e09\u4e2a\u5bb9\u5668\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u800c\u5b9e\u73b0\u7ec4\u4ef6\u7684\u72ec\u7acb\u7f29\u653e\u3002\nLXC\u5de5\u5177\u5141\u8bb8\u60a8\u8fd0\u884c\u591a\u4e2a\u547d\u4ee4\uff0c\u4f7f\u60a8\u80fd\u591f\u7ba1\u7406\u521b\u5efa\u3001\u542f\u52a8\u548c\u5220\u9664LXC\u5bb9\u5668\u7b49\u4efb\u52a1\u3002\u8be5\u5de5\u5177\u8fd8\u5141\u8bb8\u60a8\u91cd\u7528\u5728VirtualBox\u6216\u5176\u4ed6\u865a\u62df\u5316\u751f\u4ea7\u73af\u5883\u4e0a\u8fd0\u884c\u7684VM\u6216\u88f8\u673a\u4e0a\u4f7f\u7528\u7684\u81ea\u52a8\u5316\u811a\u672c\u3002\u6709\u4e86\u8fd9\u6837\u4e00\u4e2a\u53ef\u79fb\u690d\u6027\u7279\u6027\uff0c\u53ef\u4ee5\u65e0\u7f1d\u5730\u5c06\u5e94\u7528\u7a0b\u5e8f\u4ece\u4f20\u7edf\u7684Linux\u670d\u52a1\u5668\u8fc1\u79fb\u5230Linux\u5bb9\u5668\u3002\nDocker\u547d\u4ee4\u884c\u754c\u9762\uff08CLI\uff09\u662fDocker\u5de5\u5177\u7684\u6838\u5fc3\u3002\u5b83\u8ba9\u4f60\u53ef\u4ee5\u63a7\u5236\u4f60\u7684\u5bb9\u5668\uff0c\u5141\u8bb8\u4f60\u5217\u51fa\u548c\u7ba1\u7406\u56fe\u50cf\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528Docker\u6ce8\u518c\u8868\u8bbf\u95ee\u548c\u5206\u53d1\u5e38\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u56fe\u50cf\u3002\nLXC\u548cDocker\u5de5\u5177\u90fd\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u529f\u80fd\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u3002\u7136\u800c\uff0c\u6bcf\u79cd\u5de5\u5177\u90fd\u6709\u4e00\u4e2a\u7a81\u51fa\u7684\u5de5\u5177\u7279\u6027\u3002LXC\u5de5\u5177\u64c5\u957f\u5c06\u5e94\u7528\u7a0b\u5e8f\u4ece\u4f20\u7edf\u7684Linux\u670d\u52a1\u5668\u8fc1\u79fb\u5230Linux\u5bb9\u5668\u3002\u4f46\u5982\u679c\u4f60\u60f3\u4f18\u5148\u8003\u8651\u5f00\u53d1\u8005\u4f53\u9a8c\uff0c\u90a3\u5c31\u9009\u62e9Docker\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8fdb\u4e00\u6b65\u4e86\u89e3\u6bcf\u4e2a\u5e73\u53f0\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u5e76\u4eceLXC\u5f00\u59cb\u603b\u7ed3\u6bcf\u4e2a\u5e73\u53f0\u7684\u5173\u952e\u89c1\u89e3\u3002\n\u867d\u7136LXC\u4e0d\u662f\u4e00\u4e2a\u6210\u719f\u7684\u865a\u62df\u673a\uff0c\u4f46\u5b83\u901a\u8fc7\u4e00\u4e2a\u5305\u542b\u81ea\u5df1\u7684\u7528\u6237\u7a7a\u95f4\u548c\u8fdb\u7a0b\u7684\u865a\u62df\u73af\u5883\u63d0\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u865a\u62df\u5316\u3002Linux\u5bb9\u5668\u4f9d\u8d56\u4e8eLinux\u5185\u6838\u7684\u529f\u80fd\u6765\u9694\u79bb\u5bb9\u5668\u3002\u4e3b\u673aCPU\u5c06\u5185\u5b58\u5206\u914d\u5212\u5206\u4e3a\u540d\u79f0\u7a7a\u95f4\uff0c\u4ee5\u63a7\u5236RAM\u548cCPU\u7684\u4f7f\u7528\u3002\nLXC\u53ea\u7ed1\u5b9a\u6240\u9700\u7684\u5e94\u7528\u7a0b\u5e8f/\u64cd\u4f5c\u7cfb\u7edf\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740\u88f8\u673a\u6027\u80fd\u7684\u63d0\u9ad8\u3002LXC\u865a\u62df\u73af\u5883\u5141\u8bb8\u60a8\u521b\u5efa\u5305\u542bLinux\u53d1\u884c\u7248\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u5bb9\u5668\u5171\u4eab\u5e95\u5c42\u5185\u6838\u548c\u786c\u4ef6\u8d44\u6e90\u3002\nLXC\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5bf9\u5b83\u6240\u57fa\u4e8e\u7684\u7279\u6027\uff08\u540d\u79f0\u7a7a\u95f4\u3001cgroup\u3001chroot\u7b49\uff09\u7684\u5927\u91cf\u63a7\u5236\u3002\u5bf9\u4e8e\u66f4\u591a\u7684\u6280\u672f\u53d7\u4f17\uff0c\u5982\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u4f18\u52bf\u3002\nLXC\u5141\u8bb8\u60a8\u8f7b\u677e\u63a7\u5236\u865a\u62df\u73af\u5883\uff0c\u540c\u65f6\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\uff0c\u5e76\u7b80\u5316\u5176\u5728\u5bb9\u5668\u4e2d\u7684\u5206\u53d1\u3002\n\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u5bf9\u4e00\u5957\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u5347\u7ea7\u548c\u66f4\u6539\u3002\u60a8\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u521b\u5efa\u4e00\u4e2a\u514b\u9686\uff0c\u5728\u5bf9\u66f4\u6539\u611f\u5230\u6ee1\u610f\u65f6\u5c06\u5176\u63a8\u51fa\uff0c\u5e76\u5220\u9664\u539f\u59cb\u5b9e\u4f8b\u3002\n\u5feb\u901f\u542f\u52a8\u65b0\u5b9e\u4f8b\u5e76\u8fd0\u884c\u591a\u4e2a\u7248\u672c\u7684web\u5806\u6808\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u5728\u5347\u7ea7\u4e4b\u524d\uff0c\u4f60\u53ef\u4ee5\u4e3a\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u6d4b\u8bd5\u7279\u5b9a\u7248\u672c\u7684Python\u6216Ruby\u3002\nDocker\u65e8\u5728\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u3002\u4ed6\u4eec\u5e0c\u671b\u786e\u4fdd\u6574\u4e2a\u7f16\u7a0b\u56e2\u961f\u4f7f\u7528\u4e0e\u751f\u4ea7\u73af\u5883\u76f8\u540c\u7684\u6d4b\u8bd5\u73af\u5883\u548c\u914d\u7f6e\u3002\u8fd9\u79cd\u5171\u4eab\u548c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u80fd\u529b\u662fDocker\u6210\u529f\u7684\u5173\u952e\u56e0\u7d20\uff0c\u540c\u65f6\u907f\u514d\u4e86\u7ecf\u5178\u7684\u5f00\u53d1\u4eba\u5458\u201c\u5b83\u5728\u6211\u7684\u673a\u5668\u4e0a\u5de5\u4f5c\u201d\u7684\u62b1\u6028\u3002\nDocker\u53d1\u660e\u4e86\u4e00\u79cd\u63cf\u8ff0\u6027\u683c\u5f0fDockerfile\uff0c\u4f7f\u5bb9\u5668\u7684\u521b\u5efa\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u4e14\u6613\u4e8e\u7ef4\u62a4\u3002Dockerfile\u4e2d\u7684\u6bcf\u6761\u6307\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5c42\uff0c\u5bf9\u5bb9\u5668\u6620\u50cf\u6240\u505a\u7684\u66f4\u6539\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002\nDocker\u5305\u542b\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u3001\u7f51\u7edc\u548c\u65e5\u5fd7\u8bb0\u5f55\u7684\u62bd\u8c61\u5c42\uff0c\u4f7fDocker\u5bb9\u5668\u6613\u4e8e\u914d\u7f6e\u548c\u5927\u89c4\u6a21\u4f7f\u7528\u3002\nDocker\u63d0\u4f9b\u8de8\u5e73\u53f0\u652f\u6301\u3002\u867d\u7136Docker\u5bb9\u5668\u6700\u521d\u662f\u4f5c\u4e3a\u4e00\u79cd\u4ec5\u9650Linux\u7684\u6280\u672f\u5f00\u53d1\u7684\uff0c\u4f46\u591a\u4e8f\u4e86Docker Desktop\uff0c\u5b83\u73b0\u5728\u53ef\u4ee5\u5728Windows\u548cMac\u4e0a\u8fd0\u884c\u3002\u4f7f\u7528Windows\u5185\u6838\u7684Windows\u5bb9\u5668\u4e5f\u662f\u4e00\u4e2a\u9009\u9879\u3002\nDocker\u5bb9\u5668\u56fe\u50cf\u7531\u5c42\u7ec4\u6210\u3002\u8fd9\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff08\u7f13\u5b58\u548c\u5e76\u884c\u4e0b\u8f7d\uff09\u548c\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002\nDocker\u5bb9\u5668\u4e0d\u662f\u4e3a\u53d6\u4ee3Linux\u673a\u5668\u800c\u8bbe\u8ba1\u7684\u3002\u67d0\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f8b\u5982\u6709\u72b6\u6001\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u80fd\u65e0\u6cd5\u4eceDocker\u529f\u80fd\u4e2d\u83b7\u76ca\u3002\nDocker\u6ca1\u6709\u63d0\u4f9bLXC\u4e2d\u53ef\u7528\u7684\u4f4e\u7ea7\u522b\u63a7\u5236\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u4e0d\u5229\u56e0\u7d20\u3002\nLXC\u548cDocker\u90fd\u662f\u6709\u6548\u7684\u5bb9\u5668\u6280\u672f\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u60a8\u7684\u9700\u6c42\u3002\nLXC\u662f\u865a\u62df\u673a\u7684\u6709\u529b\u7ade\u4e89\u8005\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u6b63\u5728\u5f00\u53d1Linux\u5e94\u7528\u7a0b\u5e8f\u6216\u4f7f\u7528\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u9700\u8981\u4e00\u4e2a\u771f\u6b63\u7684Linux\u73af\u5883\uff0c\u90a3\u4e48LXC\u5e94\u8be5\u662f\u60a8\u7684\u9996\u9009\u3002\nDocker\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\u5206\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5c24\u5176\u53d7\u5230\u5f00\u53d1\u4eba\u5458\u7684\u559c\u7231\u3002Docker\u89e3\u51b3\u4e86\u672c\u5730\u5f00\u53d1\u4eba\u5458\u7684\u914d\u7f6e\u95ee\u9898\uff0c\u5e76\u6210\u4e3aCI/CD\u7ba1\u9053\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u7ec4\u4ef6\uff0c\u56e0\u4e3a\u5b83\u5728\u5de5\u4f5c\u8d1f\u8f7d\u548c\u53ef\u590d\u5236\u73af\u5883\u4e4b\u95f4\u63d0\u4f9b\u4e86\u9694\u79bb\u3002\n\u6b63\u5982Docker\u6269\u5c55\u4e86LXC\u7684\u529f\u80fd\uff0c\u4f7f\u5176\u6613\u4e8e\u6253\u5305\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u5176\u64cd\u4f5c\u66f4\u65b9\u4fbf\u5f00\u53d1\u4eba\u5458\u4e00\u6837\uff0cDocker\u5728Dockerfile\u7684\u57fa\u7840\u4e0a\u6784\u5efa\u4e86Earthly\uff0c\u4ee5\u521b\u5efa\u66f4\u9002\u5408\u7ba1\u7406CI/CD\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5de5\u5177\u3002\u4e00\u5b9a\u8981\u67e5\u770b\u5b83\uff0c\u4ee5\u5e2e\u52a9\u4f7f\u7528Docker\u6216LXC\u81ea\u52a8\u5316\u548c\u7b80\u5316\u5f00\u53d1\u6d41\u7a0b\u3002", "note_en": "Linux Containers (LXC) is an OS-level virtualization technology that enables you to create and run multiple Linux operating systems (OS) simultaneously on a single Linux machine (LXC host). LXC provides a set of tools to manage your container as well as templates to create a virtual environment of  the most common Linux OS.\n Docker is an open-source containerization technology that focuses on running a single application in an isolated environment. Its  Docker Engine enables you to create, run, or distribute containers. You can also share applications and collaborate with other developers using  Docker Hub.\n While LXC and Docker have much in common in terms of their architecture and usage, they also differ in many ways. This article will compare their host machine utilization, simplicity, speed, security, ease of use, scalability, and tooling. We\u2019ll also discuss the best traits of these tools as well as their downsides.\n  Let\u2019s get started by taking a closer look at each of the comparison criteria areas outlined above and exploring how LXC and Docker function under each category.\n  Both LXC and Docker containers communicate with the kernel of the host machine. So what, you may ask?\n Sharing the kernel of the host system is what defines a container\u2014you can find this definition all over the internet. The reason is that container technologies attempt to offer a better alternative to  Virtual Machines. As a result, the prevalent definition is the one that is the most relevant to differentiating virtual machines (VMs) from virtual environments (VEs, otherwise known as container technologies).\n  How these virtualization technologies (VM or VE) differ is in how they use the host machine. But in order to compare two container technologies (VEs)\u2014LXD and Docker\u2014we\u2019ll need to dig a little deeper than that first definition.\n In Linux, memory is divided between the  kernel space, reserved for the core of the operating system in charge of managing CPU, memory, and devices, and the  user space.\n Saying that LXC shares the kernel of its host does not convey the whole picture. In fact, LXC containers are using Linux kernel features to create isolated processes and file systems.\n  Let\u2019s take a look at a couple of examples. In Linux, you can use the  ps command to list the running processes. If you are running things in LXC and run  ps from the host, you will see a list of running processes, including your container (yes, containers are first and foremost processes from the host point of view). However, if you run the same  ps command from the LXC container, you will only see the processes started inside the container. LXC leverages  kernel namespaces to achieve this feature.\n Similarly, on your Linux host machine, you have  /bin, the standard root directory for the executables. In the container\u2019s user space, you have another  /bin. The container\u2019s user space is bundled inside of the container, and can be shipped to a different host. This user space isolation is the reason you can have an Alpine Linux container on a Ubuntu host machine, as programs in Linux containers are isolated from the rest of the system. LXC leverages   chroot to achieve this feature.\n Docker used LXC,  prior to version 1.0, to create isolation from the host system. Later, Docker developed its own replacement for LXC called   libcaontainer. This is why Docker and LXC have so much in common.\n  It offers an abstraction for machine-specific settings, such as  networking,  storage,  logging, etc. These are part of the Docker Engine and make Docker containers are more portable, as they rely less on the underlying physical machine.\n   Linux containers (LXC) are more flexible in design. They are bit closer to virtual machines \u2013 you can configure and install anything with LXC the same way you would with VMs. Kernel features like  chroot,  cgroups, and  namespaces can be leveraged to create an LXC virtual environment. These kernel mechanisms help control resource usage and the visibility that processes have on the rest of the system.\n As we mentioned before, Docker containers were originally forked from the LXC project. However, the difference is in the design: Docker containers were designed specifically for microservices applications. That makes them very different from VMs. Docker is simple for developers to use; the  networking,  storage, and  logging abstraction make it so that devs need little (or no) prior Linux knowledge.\n The simplicity that Docker offers to developers is what made it so popular. Both platforms are simple to use, but target different audiences.\n  LXC boasts fast boot times when compared to a virtual machine \u2013 it doesn\u2019t need to package an entire OS and a complete machine setup with network interfaces, virtual processors, and a hard drive.\n Docker containers are also lightweight, which contributes significantly to their speed. Docker adds an additional layer to abstract storage and networking, but you should not see significant performance issues caused by that in most cases. Creating and running a Docker container takes seconds. Because Docker can run on an existing OS that is already initialized, you can boot a container from its image almost instantly.\n Docker supports  layered containers by default. This means that the resulting container is the sequential combination of changes made to the file system, similar to a Git history. Layers can be downloaded in parallel, which can give you a speed advantage when starting many containerised applications in several machines simultaneously.\n One point that goes in Docker\u2019s favor is the trend is to create   distroless Docker images. With distroless, you have the bare minimum\u2014just your application, compiled code, and the necessary binding. LXC images aim to replicate Linux distributions, such as Ubuntu, Debian, or Alpine. The fact that Docker aims to package single applications might give you the upper hand when provisioning hundreds of containers.\n The performance difference between LXC and Docker is almost insignificant. Both provide fast boot times. Downloading an LXC image might be slower than distroless Docker images, but not all Docker images are distroless, giving Docker room for improvement as compared to LXC.\n  LXC is enriched with security configurations such as group policies and a default AppArmor profile to protect the host from accidentally misusing privileges inside the container.\n Docker separates the operating system from the services running on it to ensure secure workloads, but the fact that Docker runs as root can increase exposure to malware. This is because the Docker daemon\u2014which manages Docker objects like networks, containers, images, and volumes, and attends to Docker API requests\u2014also runs as root on the host machine. Developers commonly audit Docker installations to identify potential vulnerabilities.\n LXC places security at the forefront. It gives you security features, including Linux capability support, to help you keep control of your container environment and the hosted apps. Docker\u2019s approach of keeping the different application components in separate containers is a plus. But this strategy also has its own security downsides if you\u2019re hosting complicated applications that may require the attention of an experienced security engineer.\n  Getting started with LXC is easy; it requires installing LXC\u2019s recent versions compatible with your Linux distribution. This makes LXC commands, templates, and  python3 binding available to create containers. Furthermore, LXC runs a standard operating system unit for each container, which means your apps are hosted in a standard Linux OS. In that way, migrating to LXC containers from bare metal or virtual machine servers is more manageable than moving to Docker containers.\n On the other hand, Docker makes it easy to work with containers and run programs. With Docker, you can package containers and ship them for use on other machines. You can use the  docker build command to build images from a Dockerfile. As an open-source container platform, getting started with Docker is straightforward. All you need is an OS that supports containers natively, like Linux, Docker for Mac/Windows, or VirtualBox, installed on your computer.\n Both LXC and Docker are easy to use and provide documentation and guides to help you create and deploy containers. Their support for libraries and bindings for languages like Java and Python is a plus for developers.\n  LXC is less scalable compared to Docker. Its images are not as lightweight as those of Docker. However, LXC images are more lightweight than those of physical machines or virtual machines. That makes it ideal for on-demand provisioning and autoscaling. Also, the fact that you can use LXC to implement lightweight virtual machines without a hypervisor makes Linux containers a scalable option.\n With Docker, you can break out the functionality of applications into individual containers. You can, for instance, run your Oracle database in one container while running your Cassandra server and ASP.NET app in other separate containers. You can then link these three containers together and create an application, allowing for the independent scaling of components.\n  LXC tooling allows you to run several commands, enabling you to manage tasks such as creating, launching, and deleting LXC containers. This tooling also allows you to reuse automation scripts that you may have utilized on VM or bare metal running on VirtualBox or other virtualized production environments. With such a portability feature, it is seamless to migrate applications from a traditional Linux server to a Linux container.\n The Docker command-line interface (CLI) is the heart of Docker tooling. It gives you control over your containers, allowing you to list and manage images. You can also use the Docker registry to access and distribute images for frequently used applications.\n Both LXC and Docker tooling provide essential functionalities for a greater developer experience. However, each tool has a tooling feature that makes it stand out. LXC tooling excels in migrating apps from a traditional Linux server to a Linux container. But if you want to prioritize developer experience, go for Docker.\n  Now, let\u2019s take a closer look at some of the specifics for each platform, and summarize the key insight for each, starting with LXC.\n While LXC is not a full-fledged virtual machine, it provides operating-system-level virtualization via a virtual environment, which contains its own userspace and processes. Linux containers depend on the functionality of the Linux kernel to isolate containers. The host CPU divides memory allocations into namespaces to control RAM and CPU usage.\n The fact that LXC bundles only the required application/OS means an improvement on the performance of the bare metal. The LXC virtual environment allows you to create containers containing a Linux distribution and your applications. In this case, all the containers share the underlying kernel and hardware resources.\n  LXC gives you a lot of control over the features it is based on (namespace, cgroup, chroot, etc). For the more technical audience, such as system administrators, this is a great advantage.\n LXC lets you control a virtual environment easily, while increasing app portability and easing their distribution inside containers.\n  Making test upgrades and changes to a suite of applications in a simple way. You can create a clone in seconds, roll it out when satisfied with the changes, and delete the original instance.\n Launching new instances quickly and running multiple versions of web stacks and applications. You can, for instance, experiment specific versions of Python or Ruby for a particular app before upgrading.\n  Docker was designed to improve application portability. They wanted to ensure that the entire programming team worked on the same test environment and configurations as the production environment. This ability to share and use applications, all while avoiding the classic developer \u201cit works on my machine\u201d complaint, is the crucial element of Docker\u2019s success.\n Docker invented a descriptive format,  Dockerfile, to make the creation of containers very simple and maintainable. Each instruction in the Dockerfile creates a layer versioning the changes made to the container image.\n  Docker includes an abstraction layer for storage, networking, and logging that makes Docker containers easy to configure and use at scale.\n Docker offers cross-platform support. Although it was primarily developed as a Linux-only technology, Docker containers can now run on Windows and Mac, thanks to  Docker Desktop. Windows containers using Windows kernel is also an option.\n Docker container images are composed of layers. This offers better performance (caching and parallel downloading) and a versioning system.\n  Docker containers are not designed to replace Linux machines. Some workloads, such as stateful applications, may not benefit from Docker features.\n Docker doesn\u2019t give the low level control available in LXC. For some this may be a downside.\n  Both LXC and Docker are effective container technologies, and the choice between them depends on your needs.\n LXC, is a serious contender to virtual machines. So, if you are developing a Linux application or working with servers, and need a real Linux environment, LXC should be your go-to.\n Docker is a complete solution to distribute applications and is particularly loved by developers. Docker solved the local developer configuration tantrum and became a key component in the CI/CD pipeline because it provides isolation between the workload and reproducible environment.\n In the same way that Docker extended the features of LXC to make it easy to package applications and make operating them more developer-friendly,  Earthly built on top of Dockerfile to create tools better suited to manage the CI/CD workload. Be sure to check it out to help automate and simplify your development pipeline using either Docker or LXC.", "posttime": "2022-02-19 04:05:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "docker,lxc", "title": "LXC\u5bf9Docker", "title_en": "LXC vs. Docker", "transed": 1, "url": "https://earthly.dev/blog/lxc-vs-docker/", "via": "", "real_tags": ["docker", "lxc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074011, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u53ef\u80fd\u53d1\u751f\u5728\u6211\u8eab\u4e0a\u6700\u597d\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u8ba9\u51ef\u5170\u6765\u7ba1\u7406\u6211\u3002\u6211\u9017\u7559\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u770b\u5230\u51ef\u5170\u7684\u6280\u672f\u51b3\u7b56\u5f00\u59cb\u4ea7\u751f\u6210\u679c\u3002\u6211\u4ece\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u4f46\u6211\u4e5f\u4ece\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u3002\u6211\u73b0\u5728\u4e0d\u53ef\u80fd\u6210\u4e3a\u7f16\u5199\u6570\u636e\u9a71\u52a8\u4ea7\u54c1\u7684\u5de5\u7a0b\u5e08\uff01\u5982\u679c\u51ef\u5170\u6ca1\u6709\u5728\u90a3\u91cc\u5982\u6b64\u5f7b\u5e95\u5730\u575a\u6301\u6280\u672f\u9009\u62e9\u7684\u8bdd\u3002\n\u79bb\u5f00Etsy\u540e\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u91cd\u65b0\u6062\u590d\u4e86\u5173\u5fc3\u6280\u672f\u7684\u80fd\u529b\u3002\u6211\u7684\u601d\u60f3\u5df2\u7ecf\u660e\u786e\u5230\u53ef\u4ee5\u8fde\u8d2f\u5730\u5199\u4e0b\u6765\u7684\u7a0b\u5ea6\u3002\u63a5\u4e0b\u6765\u662f\u51ef\u5170\u683c\u5f0f\u5854\u7684\u5347\u534e\uff0c\u5e0c\u671b\u8fd9\u53ea\u4f1a\u8ba9\u4ed6\u7a0d\u5fae\u611f\u5230\u6050\u60e7\u3002\n\u5047\u8bbe\u6bcf\u5bb6\u516c\u53f8\u90fd\u80fd\u83b7\u5f97\u5927\u7ea6\u4e09\u79cd\u521b\u65b0\u4ee3\u5e01\u3002\u4f60\u53ef\u4ee5\u60f3\u600e\u4e48\u82b1\u5c31\u600e\u4e48\u82b1\uff0c\u4f46\u4f9b\u5e94\u957f\u671f\u662f\u56fa\u5b9a\u7684\u3002\u5728\u4f60\u8fbe\u5230\u4e00\u5b9a\u7684\u7a33\u5b9a\u6027\u548c\u6210\u719f\u5ea6\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u591a\uff0c\u4f46\u603b\u7684\u8d8b\u52bf\u662f\u9ad8\u4f30\u4f60\u94b1\u5305\u91cc\u7684\u4e1c\u897f\u3002\u663e\u7136\uff0c\u8fd9\u4e2a\u6a21\u578b\u662f\u8fd1\u4f3c\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u6709\u5e2e\u52a9\u3002\n\u5982\u679c\u4f60\u9009\u62e9\u7528NodeJS\u5199\u7f51\u7ad9\uff0c\u4f60\u53ea\u82b1\u4e86\u4e00\u4e2a\u521b\u65b0\u6807\u8bb0\u3002\u5982\u679c\u4f60\u9009\u62e9\u4f7f\u7528MongoDB\uff0c\u4f60\u53ea\u82b1\u4e86\u4e00\u4e2a\u521b\u65b0\u4ee3\u5e01\u3002\u5982\u679c\u4f60\u9009\u62e9\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u4e00\u5e74\u6216\u66f4\u77ed\u65f6\u95f4\u7684\u670d\u52a1\u53d1\u73b0\u6280\u672f\uff0c\u4f60\u53ea\u82b1\u4e86\u4e00\u4e2a\u521b\u65b0\u4ee3\u5e01\u3002\u5982\u679c\u4f60\u9009\u62e9\u7f16\u5199\u81ea\u5df1\u7684\u6570\u636e\u5e93\uff0c\u5929\u54ea\uff0c\u4f60\u6709\u9ebb\u70e6\u4e86\u3002\n\u5982\u679c\u4f60\u662f\u4e00\u5bb6javascript\u54a8\u8be2\u516c\u53f8\u6216\u6570\u636e\u5e93\u516c\u53f8\uff0c\u8fd9\u4e9b\u9009\u62e9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u80fd\u662f\u660e\u667a\u7684\u3002\u4f46\u4f60\u53ef\u80fd\u4e0d\u662f\u3002\u4f60\u53ef\u80fd\u6b63\u5728\u4e3a\u4e00\u5bb6\u516c\u53f8\u5de5\u4f5c\uff0c\u8be5\u516c\u53f8\u81f3\u5c11\u8868\u9762\u4e0a\u6b63\u5728\u91cd\u65b0\u601d\u8003\u5168\u7403\u5546\u4e1a\uff0c\u6216\u5728\u7f51\u7edc\u4e0a\u91cd\u65b0\u53d1\u660e\u652f\u4ed8\u65b9\u5f0f\uff0c\u6216\u8ffd\u6c42\u5176\u4ed6\u4e00\u4e9b\u5408\u9002\u7684\u53f2\u8bd7\u822c\u7684\u4f7f\u547d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u4efb\u4f55\u6709\u9650\u7684\u6ce8\u610f\u529b\u6295\u5165\u5230\u521b\u65b0ssh\u4e0a\u90fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5931\u8d25\u65b9\u5f0f\u3002\u6216\u8005\u5145\u5176\u91cf\u53ea\u80fd\u63a8\u8fdf\u6210\u529f[1]\u3002\n\u4ec0\u4e48\u7b97\u65e0\u804a\uff1f\u8fd9\u6709\u70b9\u68d8\u624b\u3002\u201c\u65e0\u804a\u201d\u4e0d\u5e94\u4e0e\u201c\u7cdf\u7cd5\u201d\u6df7\u4e3a\u4e00\u8c08\u6709\u4e00\u79cd\u6280\u672f\u65e2\u65e0\u804a\u53c8\u7cdf\u7cd5[2]\u3002\u4f60\u4e0d\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e9b\u3002\u4f46\u6709\u5f88\u591a\u6280\u672f\u9009\u62e9\u65e2\u65e0\u804a\u53c8\u597d\uff0c\u6216\u8005\u81f3\u5c11\u8db3\u591f\u597d\u3002MySQL\u5f88\u65e0\u804a\u3002\u535a\u58eb\u540e\u5f88\u65e0\u804a\u3002PHP\u5f88\u65e0\u804a\u3002Python\u5f88\u65e0\u804a\u3002Memcached\u5f88\u65e0\u804a\u3002\u4e4c\u8d3c\u5f88\u65e0\u804a\u3002\u514b\u6717\u5f88\u65e0\u804a\u3002\n\u65e0\u804a\uff08\u5982\u6b64\u53d7\u9650\uff09\u7684\u597d\u5904\u5728\u4e8e\uff0c\u4eba\u4eec\u5f88\u597d\u5730\u7406\u89e3\u4e86\u8fd9\u4e9b\u4e1c\u897f\u7684\u529f\u80fd\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u7684\u5931\u8d25\u6a21\u5f0f\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\u4efb\u4f55\u4e86\u89e3\u6211\u7684\u4eba\u90fd\u4f1a\u660e\u767d\uff0c\u6211\u73b0\u5728\u53ea\u662f\u5e26\u7740\u4e00\u79cd\u538b\u5012\u6027\u7684\u4e0d\u9002\u611f\uff0c\u624d\u4f1a\u63f4\u5f15\u5510\u00b7\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7\u7684\u5e7d\u7075\uff0c\u4f46\u6211\u5fc5\u987b\u8fd9\u6837\u505a\u3002\n\u4e00\u4e2a\u5df2\u77e5\u7684\u672a\u77e5\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u8fd9\u4e2a\u6570\u636e\u5e93\u8fbe\u5230100%CPU\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u4e00\u4e2a\u672a\u77e5\u6570\u662f\u8fd9\u6837\u7684\uff1a\u5929\u54ea\uff0c\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u60f3\u5230\u7f16\u5199\u7edf\u8ba1\u6570\u636e\u4f1a\u5bfc\u81f4GC\u6682\u505c\u3002\n\u8fd9\u4e24\u4e2a\u96c6\u5408\u901a\u5e38\u90fd\u662f\u975e\u7a7a\u7684\uff0c\u5373\u4f7f\u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u4e86\u51e0\u5341\u5e74\u7684\u6280\u672f\u6765\u8bf4\u4e5f\u662f\u5982\u6b64\u3002\u4f46\u5bf9\u4e8e\u95ea\u4eae\u7684\u65b0\u6280\u672f\u6765\u8bf4\uff0c\u672a\u77e5\u672a\u77e5\u7684\u6570\u91cf\u8981\u5927\u5f97\u591a\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\n\u6211\u6beb\u65e0\u6b49\u610f\u5730\u8ba4\u4e3a\uff0c\u504f\u5411\u65e0\u804a\u7684\u6280\u672f\u662f\u4ef6\u597d\u4e8b\uff0c\u4f46\u8fd9\u4e0d\u662f\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u56e0\u7d20\u3002\u6280\u672f\u9009\u62e9\u4e0d\u662f\u5b64\u7acb\u53d1\u751f\u7684\u3002\u5b83\u4eec\u7684\u8303\u56f4\u6d89\u53ca\u5230\u60a8\u7684\u6574\u4e2a\u56e2\u961f\u3001\u7ec4\u7ec7\uff0c\u4ee5\u53ca\u4ece\u60a8\u7684\u6240\u6709\u9009\u62e9\u4e2d\u4ea7\u751f\u7684\u7cfb\u7edf\u3002\n\u4e3a\u516c\u53f8\u6dfb\u52a0\u6280\u672f\u662f\u6709\u6210\u672c\u7684\u3002\u4f5c\u4e3a\u4e00\u4e2a\u62bd\u8c61\u7684\u9648\u8ff0\uff0c\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u5728\u4f7f\u7528Ruby\uff0c\u90a3\u4e48\u5c06Python\u6dfb\u52a0\u5230\u6df7\u5408\u4e2d\u662f\u4e0d\u660e\u667a\u7684\uff0c\u56e0\u4e3a\u7531\u6b64\u4ea7\u751f\u7684\u590d\u6742\u6027\u5c06\u8d85\u8fc7Python\u7684\u8fb9\u9645\u6548\u7528\u3002\u4f46\u4e0d\u77e5\u4f55\u6545\uff0c\u5f53\u6211\u4eec\u8c08\u8bbaPython\u3001Scala\u6216MySQL\u548cRedis\u65f6\uff0c\u4eba\u4eec\u4f1a\u5931\u53bb\u7406\u667a\uff0c\u653e\u5f03\u6240\u6709\u7ea6\u675f\uff0c\u5f00\u59cb\u75af\u72c2\u5730\u8c08\u8bba\u5982\u4f55\u4f7f\u7528\u6700\u597d\u7684\u5de5\u5177\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u7684\u529f\u80fd\u662f\u5c06\u4e1a\u52a1\u95ee\u9898\u6620\u5c04\u5230\u6d89\u53ca\u8f6f\u4ef6\u9009\u62e9\u7684\u89e3\u51b3\u65b9\u6848\u7a7a\u95f4\u3002\u5982\u679c\u8f6f\u4ef6\u7684\u9009\u62e9\u771f\u7684\u6ca1\u6709\u5305\u88b1\uff0c\u4f60\u786e\u5b9e\u53ef\u4ee5\u4e3a\u4f60\u7684\u5404\u79cd\u95ee\u9898\u6311\u9009\u4e00\u5927\u5806\u6700\u597d\u7684\u5de5\u5177\u3002\n\u4f46\u5f53\u7136\uff0c\u884c\u674e\u662f\u5b58\u5728\u7684\u3002\u6211\u4eec\u628a\u884c\u674e\u79f0\u4e3a\u201c\u64cd\u4f5c\u201d\uff0c\u5728\u8f83\u5c0f\u7a0b\u5ea6\u4e0a\u79f0\u4e3a\u201c\u8ba4\u77e5\u5f00\u9500\u201d\u4f60\u5fc5\u987b\u76d1\u89c6\u8fd9\u4ef6\u4e8b\u3002\u4f60\u5fc5\u987b\u641e\u6e05\u695a\u5355\u5143\u6d4b\u8bd5\u3002\u4f60\u9700\u8981\u77e5\u9053\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u7834\u89e3\u5b83\u3002\u4f60\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u5316\u811a\u672c\u3002\u6211\u53ef\u4ee5\u5728\u8fd9\u91cc\u5f85\u4e0a\u51e0\u5929\uff0c\u6240\u6709\u8fd9\u4e9b\u52a0\u8d77\u6765\u5f88\u5feb\u3002\n\u201c\u5de5\u4f5c\u7684\u6700\u4f73\u5de5\u5177\u201d\u601d\u7ef4\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5b83\u5bf9\u201c\u6700\u4f73\u201d\u548c\u201c\u5de5\u4f5c\u201d\u8fd9\u4e24\u4e2a\u8bcd\u7684\u770b\u6cd5\u662f\u77ed\u89c6\u7684\u4f60\u7684\u5de5\u4f5c\u5c31\u662f\u8ba9\u516c\u53f8\u7ee7\u7eed\u7ecf\u8425\uff0c\u8be5\u6b7b\u7684\u3002\u800c\u201c\u6700\u597d\u201d\u7684\u5de5\u5177\u5c31\u662f\u5bf9\u5c3d\u53ef\u80fd\u591a\u7684\u95ee\u9898\u5360\u636e\u201c\u6700\u5dee\u201d\u4f4d\u7f6e\u7684\u5de5\u5177\u3002\n\u57fa\u672c\u4e0a\u603b\u662f\u8fd9\u6837\u7684\uff0c\u4fdd\u6301\u7cfb\u7edf\u53ef\u9760\u8fd0\u884c\u7684\u957f\u671f\u6210\u672c\u8fdc\u8fdc\u8d85\u8fc7\u6784\u5efa\u7cfb\u7edf\u65f6\u9047\u5230\u7684\u4efb\u4f55\u4e0d\u4fbf\u3002\u6210\u719f\u4e14\u9ad8\u6548\u7684\u5f00\u53d1\u4eba\u5458\u660e\u767d\u8fd9\u4e00\u70b9\u3002\n\u5c06\u8fd9\u79cd\u63a8\u7406\u7b80\u5316\u4e3a\u8352\u8c2c\u610f\u5473\u7740\u9009\u62e9Java\uff0c\u7136\u540e\u5c1d\u8bd5\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e00\u4e2a\u7f51\u7ad9\u3002\u90a3\u592a\u75af\u72c2\u4e86\u3002\u4f60\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u589e\u52a0\u4f60\u7684\u5de5\u5177\u7bb1\u3002\n\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u662f\u627f\u8ba4\u8fd9\u662f\u4e00\u4e2a\u8fc7\u7a0b\u548c\u4e00\u6b21\u5bf9\u8bdd\u3002\u65b0\u6280\u672f\u6700\u7ec8\u4f1a\u5728\u5168\u516c\u53f8\u8303\u56f4\u5185\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u6b64\u589e\u52a0\u6280\u672f\u662f\u4e00\u4e2a\u9700\u8981\u5168\u516c\u53f8\u53ef\u89c1\u6027\u7684\u51b3\u5b9a\u3002\u4f60\u7684\u7ec4\u7ec7\u7ec6\u8282\u53ef\u80fd\u4f1a\u8feb\u4f7f\u8c08\u8bdd\u8fdb\u884c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u4e0e\u4efb\u4f55\u4eba\u4ea4\u8c08\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u65b0\u7684\u6570\u636e\u5e93\u548c\u961f\u5217\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u4f60\u5fc5\u987b\u8bbe\u5b9a\u6587\u5316\u671f\u671b\uff0c\u8fd9\u662f\u6211\u4eec\u5927\u5bb6\u90fd\u5728\u8c08\u8bba\u7684\u4e8b\u60c5\u3002\n\u6211\u63a8\u8350\u7684\u6700\u6709\u4ef7\u503c\u7684\u7ec3\u4e60\u4e4b\u4e00\u662f\u8003\u8651\u5982\u4f55\u5728\u4e0d\u589e\u52a0\u4efb\u4f55\u65b0\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u773c\u524d\u7684\u95ee\u9898\u3002\u9996\u5148\uff0c\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u80fd\u591f\u53d1\u73b0\u201c\u95ee\u9898\u201d\u662f\u6709\u4eba\u771f\u7684\u60f3\u4f7f\u7528\u8fd9\u9879\u6280\u672f\u7684\u60c5\u51b5\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5e94\u8be5\u7acb\u5373\u4e2d\u6b62\u3002\n\u4e00\u5c0f\u90e8\u5206\u6280\u672f\u9009\u62e9\u80fd\u8d70\u591a\u8fdc\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u51e0\u4e4e\u4ece\u6765\u90fd\u4e0d\u662f\u201c\u6211\u4eec\u505a\u4e0d\u5230\u201d\uff0c\u5b83\u901a\u5e38\u53ea\u662f\u201c\u55ef\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\uff0c\u4f46\u8fd9\u592a\u96be\u4e86\u201d[4]\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u4e0d\u80fd\u7528\u4f60\u73b0\u5728\u62e5\u6709\u7684\u6765\u5b9e\u73b0\u4f60\u7684\u76ee\u6807\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u53ea\u662f\u6ca1\u6709\u8db3\u591f\u7684\u521b\u9020\u6027\u601d\u7ef4\u3002\n\u51c6\u786e\u5730\u5199\u4e0b\u5f53\u524d\u5806\u6808\u7684\u54ea\u4e9b\u65b9\u9762\u4f1a\u8ba9\u89e3\u51b3\u95ee\u9898\u53d8\u5f97\u6602\u8d35\u548c\u56f0\u96be\uff0c\u8fd9\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u8fd9\u4e0e\u4e4b\u524d\u7684\u7ec3\u4e60\u6709\u5173\uff0c\u4f46\u6709\u7ec6\u5fae\u7684\u4e0d\u540c\u3002\n\u65b0\u7684\u6280\u672f\u9009\u62e9\u53ef\u80fd\u7eaf\u7cb9\u662f\u52a0\u6027\u7684\uff08\u4f8b\u5982\uff1a\u201c\u6211\u4eec\u8fd8\u6ca1\u6709\u7f13\u5b58\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6dfb\u52a0memcached\u201d\uff09\u3002\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u91cd\u53e0\u6216\u66ff\u6362\u60a8\u5df2\u7ecf\u5728\u4f7f\u7528\u7684\u4e1c\u897f\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u60a8\u5e94\u8be5\u5bf9\u5c06\u65e7\u529f\u80fd\u8fc1\u79fb\u5230\u65b0\u7cfb\u7edf\u8bbe\u5b9a\u660e\u786e\u7684\u671f\u671b\u3002\u653f\u7b56\u901a\u5e38\u5e94\u8be5\u662f\u201c\u6211\u4eec\u81f4\u529b\u4e8e\u8fc1\u79fb\u201d\uff0c\u5e76\u6709\u4e00\u4e2a\u5efa\u8bae\u7684\u65f6\u95f4\u8868\u3002\u8fd9\u4e00\u6b65\u7684\u76ee\u7684\u662f\u5c06\u6b8b\u9ab8\u4fdd\u6301\u5728\u53ef\u7ba1\u7406\u7684\u6c34\u5e73\uff0c\u5e76\u907f\u514d\u6269\u6563\u5c40\u90e8\u6700\u4f18\u89e3\u51b3\u65b9\u6848\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u5e76\u4e0d\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff0c\u4e5f\u4e0d\u592a\u9ebb\u70e6\u3002\u6709\u51e0\u4e2a\u95ee\u9898\u8981\u4f5c\u4e3a\u5bb6\u5ead\u4f5c\u4e1a\u586b\u5199\uff0c\u7136\u540e\u5f00\u4f1a\u8ba8\u8bba\u3002\u6211\u8ba4\u4e3a\uff0c\u5982\u679c\u4e00\u9879\u65b0\u6280\u672f\uff08\u6216\u5c06\u5728\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u521b\u5efa\u7684\u65b0\u670d\u52a1\uff09\u80fd\u591f\u5b89\u7136\u65e0\u6059\u5730\u901a\u8fc7\u8fd9\u9879\u6311\u6218\uff0c\u90a3\u4e48\u8865\u5145\u4e00\u53e5\u5c31\u53ef\u4ee5\u4e86\u3002\nPolyglot\u7f16\u7a0b\u9500\u552e\u65f6\u627f\u8bfa\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u5b8c\u5168\u81ea\u7531\u5730\u9009\u62e9\u81ea\u5df1\u7684\u5de5\u5177\u5c06\u4f7f\u4ed6\u4eec\u66f4\u6709\u6548\u5730\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u5145\u5176\u91cf\u662f\u5bf9\u95ee\u9898\u7684\u5e7c\u7a1a\u5b9a\u4e49\uff0c\u6700\u7cdf\u7cd5\u7684\u662f\u6709\u52a8\u673a\u7684\u63a8\u7406\u3002\u65e5\u5e38\u8fd0\u8425\u7684\u7e41\u91cd\u52b3\u4f5c\u4f1a\u628a\u4f60\u538b\u6b7b\u3002\n\u8c28\u614e\u5730\u9009\u62e9\u6280\u672f\u7ed9\u4e86\u5de5\u7a0b\u5934\u8111\u771f\u6b63\u7684\u81ea\u7531\uff1a\u601d\u8003\u66f4\u5927\u95ee\u9898\u7684\u81ea\u7531\u3002\u6280\u672f\u672c\u8eab\u5c31\u662f\u86c7\u6cb9\u3002\n\u66f4\u65b0\uff0c2015\u5e747\u670827\u65e5\uff1a\u6211\u6839\u636e\u8fd9\u7bc7\u6587\u7ae0\u5199\u4e86\u4e00\u7bc7\u6f14\u8bb2\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u3002\nEtsy\u65e9\u5e74\u906d\u53d7\u4e86\u4e25\u91cd\u7684\u75db\u82e6\u3002\u6211\u4eec\u96c7\u4f63\u4e86\u4e00\u7fa4Python\u7a0b\u5e8f\u5458\uff0c\u5e76\u51b3\u5b9a\u6211\u4eec\u9700\u8981\u4e3a\u4ed6\u4eec\u5728Python\u4e2d\u627e\u5230\u4e00\u4e9b\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff0c\u552f\u4e00\u60f3\u5230\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u6beb\u65e0\u610f\u4e49\u7684\u4e2d\u95f4\u5c42\uff0c\u9700\u8981\u591a\u5e74\u7684\u52aa\u529b\u624d\u80fd\u5207\u65ad\u3002\u540c\u65f6\uff0c\u7b2c90\u767e\u5206\u4f4d\u641c\u7d22\u5ef6\u8fdf\u7ea6\u4e3a\u4e24\u5206\u949f\u3002Etsy\u6ca1\u6709&#39\uff1b\u867d\u7136\u6ca1\u6709\u5931\u8d25\uff0c\u4f46\u5b83\u5df2\u7ecf\u597d\u51e0\u5e74\u6ca1\u6709\u53d1\u8d27\u4e86\u3002\u56e0\u6b64\uff0c\u6210\u529f\u6240\u9700\u7684\u65f6\u95f4\u6bd4\u9700\u8981\u7684\u65f6\u95f4\u66f4\u957f\u3002\n\u6211\u4eec\u7ecf\u5e38\u968f\u610f\u5730\u5c06\u5384\u8fd0\u7684\u65e0\u804a/\u7cdf\u7cd5\u4ea4\u96c6\u79f0\u4e3a\u201c\u4f01\u4e1a\u8f6f\u4ef6\u201d\uff0c\u4f46\u8fd9\u4e2a\u672f\u8bed\u53ef\u80fd\u4e0d\u51c6\u786e\u3002\n\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7\u8fd9\u6837\u8bf4\u662f\u6709\u610f\u6216\u65e0\u610f\u5730\u6697\u793a\u4e86\u82cf\u683c\u62c9\u5e95\u6096\u8bba\u3002\u82cf\u683c\u62c9\u5e95\u5728\u8bb8\u591a\u65b9\u9762\u90fd\u662f\u4e00\u4e2a\u6df1\u601d\u719f\u8651\u7684\u4eba\uff0c\u800c\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7\u4e0d\u662f\u3002\n\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0cEtsy\u7684\u6d3b\u52a8\u63d0\u8981\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5f53\u6211\u4eec\u6784\u5efa\u8fd9\u4e2a\u7279\u6027\u65f6\uff0c\u6211\u4eec\u975e\u5e38\u52aa\u529b\u5730\u5c06\u5927\u90e8\u5206Etsy\u6574\u5408\u5230PHP\u3001MySQL\u3001Memcached\u548cGearman\uff08\u4e00\u4e2aPHP\u4f5c\u4e1a\u670d\u52a1\u5668\uff09\u4e0a\u3002\u5728\u8be5\u5806\u6808\u4e0a\u5b9e\u73b0\u8be5\u529f\u80fd\u8981\u6bd4\u4f7f\u7528Redis\uff08\u6216\u8005\u4e0d\u4f7f\u7528\uff09\u7b49\u5de5\u5177\u590d\u6742\u5f97\u591a\u3002\u4f46\u5728\u8be5\u5806\u6808\u4e0a\u6784\u5efa\u6d3b\u52a8\u63d0\u8981\u662f\u7edd\u5bf9\u53ef\u80fd\u7684\u3002\n\u8fd9\u4e2a\u9879\u76ee\u53d1\u751f\u4e86\u4e00\u4ef6\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u60c5\uff1a\u51e0\u5e74\u6765\uff0c\u6211\u4eec\u7684\u6ce8\u610f\u529b\u8f6c\u5411\u4e86\u5176\u4ed6\u5730\u65b9\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6d3b\u52a8\u63d0\u8981\u653e\u5927\u4e8620\u500d\uff0c\u800c\u6839\u672c\u6ca1\u6709\u4eba\u89c2\u770b\u3002\u6211\u4eec\u6ca1\u6709\u9488\u5bf9\u6d3b\u52a8\u63d0\u8981\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\uff0c\u4f46\u7531\u4e8e\u4f7f\u7528\u4e86\u5171\u4eab\u5e73\u53f0\uff0c\u968f\u7740\u4f7f\u7528\u91cf\u7684\u6fc0\u589e\uff0c\u4e00\u5207\u90fd\u5f88\u987a\u5229\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u662f\u6280\u672f\u9009\u62e9\u9650\u5236\u7684\u957f\u671f\u597d\u5904\u3002\n\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u7edd\u5bf9\u7684\u7acb\u573a\u2014\u2014\u867d\u7136memcached\u4e2d\u5b58\u50a8\u7684\u6d3b\u52a8\u63d0\u8981\u88ab\u8ba4\u4e3a\u662f\u5b9e\u7528\u7684\uff0c\u4f46\u5728\u539f\u59cbPHP\u4e2d\u5b9e\u73b0\u5e26\u523b\u9762\u7684\u5168\u6587\u641c\u7d22\u5e76\u4e0d\u662f#39\uff1bt\u3001 \u6240\u4ee5Etsy\u4f7f\u7528Solr\u3002", "note_en": "Probably the single best thing to happen to me in my career was having had  Kellan placed in charge of me. I stuck around long enough to see Kellan\u2019s technical decisionmaking start to bear fruit. I learned a great deal  from this, but I also learned a great deal as a  result of this. I would not have been free to become the engineer that wrote  Data Driven Products Now! if Kellan had not been there to so thoroughly stick the landing on technology choices.\n  In the year since leaving Etsy, I\u2019ve resurrected my ability to care about technology. And my thoughts have crystallized to the point where I can write them down coherently. What follows is a distillation of the Kellan gestalt, which will hopefully serve to horrify him only slightly.\n  Let\u2019s say every company gets about three innovation tokens. You can spend these however you want, but the supply is fixed for a long while. You might get a few more  after you achieve a  certain level of stability and maturity, but the general tendency is to overestimate the contents of your wallet. Clearly this model is approximate, but I think it helps.\n If you choose to write your website in NodeJS, you just spent one of your innovation tokens. If you choose to use  MongoDB, you just spent one of your innovation tokens. If you choose to use  service discovery tech that\u2019s existed for a year or less, you just spent one of your innovation tokens. If you choose to write your own database, oh god, you\u2019re in trouble.\n Any of those choices might be sensible if you\u2019re a javascript consultancy, or a database company. But you\u2019re probably not. You\u2019re probably working for a company that is at least ostensibly  rethinking global commerce or  reinventing payments on the web or pursuing some other suitably epic mission. In that context, devoting any of your limited attention to innovating ssh is an excellent way to fail. Or at best, delay success  [1].\n What counts as boring? That\u2019s a little tricky. \u201cBoring\u201d should not be conflated with \u201cbad.\u201d There is technology out there that is both boring and bad  [2]. You should not use any of that. But there are many choices of technology that are boring and good, or at least good enough. MySQL is boring. Postgres is boring. PHP is boring. Python is boring. Memcached is boring. Squid is boring. Cron is boring.\n The nice thing about boringness (so constrained) is that the capabilities of these things are well understood. But more importantly, their failure modes are well understood. Anyone who knows me well will understand that it\u2019s only with a overwhelming sense of malaise that I now invoke the spectre of Don Rumsfeld, but I must.\n   A known unknown is something like:  we don\u2019t know what happens when this database hits 100% CPU.\n  An unknown unknown is something like:  geez it didn\u2019t even occur to us that  writing stats would cause GC pauses.\n Both sets are typically non-empty, even for tech that\u2019s existed for decades. But for shiny new technology the magnitude of unknown unknowns is significantly larger, and this is important.\n  I unapologetically think a bias in favor of boring technology is a good thing, but it\u2019s not the only factor that needs to be considered. Technology choices don\u2019t happen in isolation. They have a scope that touches your entire team, organization, and the system that emerges from the sum total of your choices.\n Adding technology to your company comes with a cost. As an abstract statement this is obvious: if we\u2019re already using Ruby, adding Python to the mix doesn\u2019t feel sensible because the resulting complexity would outweigh Python\u2019s marginal utility. But somehow when we\u2019re talking about Python and Scala or MySQL and Redis people  lose their minds, discard all constraints, and start raving about using the best tool for the job.\n Your function in a nutshell is to map business problems onto a solution space that involves choices of software. If the choices of software were truly without baggage, you could indeed pick a whole mess of locally-the-best tools for your assortment of problems.\n  But of course, the baggage exists. We call the baggage \u201coperations\u201d and to a lesser extent \u201ccognitive overhead.\u201d You have to monitor the thing. You have to figure out unit tests. You need to know the first thing about it to hack on it. You need an init script. I could go on for days here, and all of this adds up fast.\n  The problem with \u201cbest tool for the job\u201d thinking is that it takes a myopic view of the words \u201cbest\u201d and \u201cjob.\u201d Your job is keeping the company in business, god damn it. And the \u201cbest\u201d tool is the one that occupies the \u201cleast worst\u201d position for as many of your problems as possible.\n It is basically always the case that the long-term costs of keeping a system working reliably vastly exceed any inconveniences you encounter while building it. Mature and productive developers understand this.\n  Taking this reasoning to its  reductio ad absurdum would mean picking Java, and then trying to implement a website without using anything else at all. And that would be crazy. You need some means to add things to your toolbox.\n An important first step is to acknowledge that this is a process, and a conversation. New tech eventually has company-wide effects, so adding tech is a decision that requires company-wide visibility. Your organizational specifics may force the conversation, or  they may facilitate developers adding new databases and queues without talking to anyone. One way or another you have to set cultural expectations that  this is something we all talk about.\n One of the most worthwhile exercises I recommend here is to  consider how you would solve your immediate problem without adding anything new. First, posing this question should detect the situation where the \u201cproblem\u201d is that someone really wants to use the technology. If that is the case, you should immediately abort.\n  It can be amazing how far a small set of technology choices can go. The answer to this question in practice is almost never \u201cwe can\u2019t do it,\u201d it\u2019s usually just somewhere on the spectrum of \u201cwell, we could do it, but it would be too hard\u201d  [4]. If you think you can\u2019t accomplish your goals with what you\u2019ve got now, you are probably just not thinking creatively enough.\n It\u2019s helpful to  write down exactly what it is about the current stack that makes solving the problem prohibitively expensive and difficult. This is related to the previous exercise, but it\u2019s subtly different.\n New technology choices might be purely additive (for example: \u201cwe don\u2019t have caching yet, so let\u2019s add memcached\u201d). But they might also overlap or replace things you are already using. If that\u2019s the case, you should  set clear expectations about migrating old functionality to the new system. The policy should typically be \u201cwe\u2019re committed to migrating,\u201d with a proposed timeline. The intention of this step is to keep wreckage at manageable levels, and to avoid proliferating locally-optimal solutions.\n This process is not daunting, and it\u2019s not much of a hassle. It\u2019s a handful of questions to fill out as homework, followed by a meeting to talk about it. I think that if a new technology (or a new service to be created on your infrastructure) can pass through this gauntlet unscathed, adding it is fine.\n  Polyglot programming is sold with the promise that letting developers choose their own tools with complete freedom will make them more effective at solving problems. This is a naive definition of the problems at best, and motivated reasoning at worst. The weight of day-to-day operational  toil this creates crushes you to death.\n Mindful choice of technology gives engineering minds real freedom: the freedom to  contemplate bigger questions. Technology for its own sake is snake oil.\n Update, July 27th 2015: I wrote a talk based on this article. You can see it  here.\n  Etsy in its early years suffered from this pretty badly. We hired a bunch of Python programmers and decided that we needed to find something for them to do in Python, and the only thing that came to mind was creating a pointless middle layer that  required years of effort to amputate. Meanwhile, the 90th percentile search latency was about two minutes.  Etsy didn&#39;t fail, but it went several years without shipping anything at all. So it took longer to succeed than it needed to.\n  We often casually refer to the boring/bad intersection of doom as \u201centerprise software,\u201d but that terminology may be imprecise.\n  In saying this Rumsfeld was either intentionally or unintentionally alluding to  the Socratic Paradox. Socrates was by all accounts a thoughtful individual in a number of ways that Rumsfeld is not.\n  A good example of this from my experience is  Etsy\u2019s activity feeds. When we built this feature, we were working pretty hard to consolidate most of Etsy onto PHP, MySQL, Memcached, and Gearman (a PHP job server). It was much more complicated to implement the feature on that stack than it might have been with something like Redis (or  maybe not). But it is absolutely possible to build activity feeds on that stack.\n  An amazing thing happened with that project: our attention turned elsewhere for several years. During that time, activity feeds scaled up 20x while  nobody was watching it at all. We made no changes whatsoever specifically targeted at activity feeds, but everything worked out fine as usage exploded because we were using a shared platform. This is the long-term benefit of restraint in technology choices in a nutshell.\n  This isn\u2019t an absolutist position--while activity feeds stored in memcached was judged to be practical, implementing full text search with faceting in raw PHP wasn&#39;t. So Etsy used Solr.", "posttime": "2022-02-19 03:59:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9557\u5b54,boring", "title": "\u9009\u62e9\u9557\u5b54\u6280\u672f\uff082015\uff09", "title_en": "Choose Boring Technology (2015)", "transed": 1, "url": "https://mcfunley.com/choose-boring-technology", "via": "", "real_tags": ["\u9557\u5b54", "boring"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074010, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u53d1\u5e03\u7684GStreamer 1.20\u662f\u6574\u4e2a\u793e\u533a17\u4e2a\u6708\u8f9b\u52e4\u5de5\u4f5c\u7684\u6210\u679c\u3002\u8d85\u8fc7250\u540d\u5f00\u53d1\u4eba\u5458\u8d21\u732e\u4e86\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e00\u7248\u672c\uff0c\u800c\u4e14Collabora\u7684\u8d21\u732e\u8005\u518d\u6b21\u8d85\u8fc7\u4e86\u4efb\u4f55\u5176\u4ed6\u7ec4\u7ec7\u3002\n\u6211\u4eec\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4e24\u4e2a\u9886\u57df\uff0c\u6211\u4eec\u8ba4\u4e3aGStreamer\u5728\u8fd9\u4e24\u4e2a\u9886\u57df\u6700\u4e3a\u8000\u773c\uff1a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u7f51\u7edc\u6d41\u5a92\u4f53\uff0c\u5c24\u5176\u662fWebRTC\u3002\u4e0b\u9762\u662f\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u56e2\u961f\u5bf9\u6700\u65b0\u7248\u672c\u7684\u5f71\u54cd\u6458\u8981\u3002\n\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u9879\u76ee#39\uff1bs 1.20\u53d1\u884c\u8bf4\u660e\u3002\nGStreamer\u5df2\u7ecf\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5353\u8d8a\u5a92\u4f53\u6846\u67b6\uff0c\u800c\u8fd9\u662fCollabora\u5728\u4e0a\u4e00\u4e2a\u53d1\u5e03\u5468\u671f\u4e2d\u975e\u5e38\u6d3b\u8dc3\u7684\u9886\u57df\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u6240\u505a\u7684\u4e00\u4e9b\u6539\u8fdb&#39\uff1b\u6211\u505a\u4e86\u3002\n\u7ecf\u8fc7\u7eaa\u5c27\u59c6\u3001\u5c3c\u53e4\u62c9\u65af\u3001\u65af\u7279\u51e1\u548c\u4e9a\u4f26\u591a\u5e74\u7684\u52aa\u529b\uff0c\u6211\u4eec\u7ec8\u4e8e\u83b7\u5f97\u4e86\u5bf9\u5b50\u5e27\u89e3\u7801\u7684\u652f\u6301\u3002\u8fd9\u4f7f\u5f97\u5728\u89e3\u7801\u5668\u652f\u6301\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5728\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u6574\u4e2a\u5e27\u4e4b\u524d\u5f00\u59cb\u89e3\u7801\u89c6\u9891\u5e27\u3002\u6211\u4eec&#39\uff1b\u6211\u7528OpenJPEG\u5b9e\u73b0\u4e86JPEG2000\uff0c\u7528ffmpeg\u5b9e\u73b0\u4e86H.264\uff0c\u5728\u4f7f\u7528Xilinx Zynq UltraScale+MPSoC EV\u5904\u7406\u5668\u4e0a\u7684Allegro\u6269\u5c55\u65f6\uff0c\u4e5f\u5728gst omx\u4e2d\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u4e0e\u534e\u4e3a\u5408\u4f5c\uff0c\u6211\u4eec\u8fd8\u6539\u8fdb\u4e86GStreamer\u6784\u5efa\u7cfb\u7edf\uff0c\u4f7f\u5176\u80fd\u591f\u521b\u5efa\u4e00\u4e2a\u5e93\uff0c\u5176\u4e2d\u53ea\u5305\u542b\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u6216\u4e00\u7ec4\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684GStreamer\u7684\u7279\u5b9a\u90e8\u5206\u3002\u770b\u770b\u8fd9\u7bc7\u535a\u6587\uff0c\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\nNicolas\u6dfb\u52a0\u4e86MPEG2\u548cVP9\u65e0\u72b6\u6001Linux\u652f\u6301\uff0c\u5e76\u4e3a\u589e\u5f3aVP9\u89e3\u6790\u5668\u505a\u51fa\u4e86\u8d21\u732e\u3002H264\u65e0\u72b6\u6001Linux\u89e3\u7801\u5668\u4e5f\u83b7\u5f97\u4e86\u5bf9\u9694\u884c\u89c6\u9891\u6d41\u7684\u652f\u6301\uff0c\u5c3d\u7ba1\u53ea\u652f\u6301\u57fa\u4e8e\u5207\u7247\u7684\u89e3\u7801\u5668\uff0c\u800c\u4e0d\u652f\u6301\u57fa\u4e8e\u5e27\u7684\u89e3\u7801\u5668\uff0c\u56e0\u4e3a\u4e3b\u7ebfLinux\u5185\u6838\u4e2d\u6ca1\u6709\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u8fd9\u4e00\u70b9\u3002Nicolas\u8fd8\u589e\u52a0\u4e86\u5bf9\u6e32\u67d3\u5ef6\u8fdf\u7684\u652f\u6301\uff0c\u5141\u8bb8\u591a\u4e2a\u5e27\u5728\u65e0\u72b6\u6001\u89e3\u7801\u5668\u4e2d\u6392\u961f\uff0c\u5e76\u4ee5\u66f4\u9ad8\u7684\u5ef6\u8fdf\u4e3a\u4ee3\u4ef7\u63d0\u9ad8\u541e\u5410\u91cf\u3002\u4ed6\u4e3aMPEG 2\u89c6\u9891\u3001VP8\u548cVP9\u89e3\u7801\u5668\u5b9e\u73b0\u4e86\u8fd9\u4e00\u529f\u80fd\u3002\u4ed6\u8fd8\u4e3a\u65b0\u7684#34\uff1b\u5f17\u5409\u5c3c\u4e9a\u5dde\u548c#34\uff1b\u4f7f\u7528\u65b0\u7684GStreamer\u901a\u7528\u89e3\u7801\u5668\u5b9e\u73b0\u6765\u652f\u6301\u57fa\u4e8eVA API\u7684\u89e3\u7801\u5668\u7684\u63d2\u4ef6\u3002\nNicolas\u8fd8\u5b9e\u73b0\u4e86VideoCodeTestSink\uff1a\u4e00\u4e2a\u5c0f\u5143\u7d20\uff0c\u7528\u4e8e\u8ba1\u7b97\u4f20\u5165\u5e27\u7684\u6821\u9a8c\u548c\uff0c\u5c06\u5b83\u4eec\u4e0e\u5df2\u77e5\u7684\u826f\u597d\u53c2\u8003\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u5bf9\u4e8e\u521b\u5efa\u786e\u4fdd\u89e3\u7801\u5668\u5b9e\u73b0\u4e2d\u6ca1\u6709\u56de\u5f52\u7684\u6d4b\u8bd5\u975e\u5e38\u6709\u7528\u3002\u4ed6\u8fd8\u5728GStreamer\u4e2d\u6dfb\u52a0\u4e86\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5bf9Video4Linux\u6e90\u4ee3\u7801\u4e2d\u7684\u5206\u8fa8\u7387\u66f4\u6539\u505a\u51fa\u53cd\u5e94\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6e90\u662fHDMI\u8f93\u5165\uff0c\u8fd9\u4e3b\u8981\u662f\u76f8\u5173\u7684\u3002\n\u5728\u8be5\u6846\u67b6\u7684\u5927\u90e8\u5206\u5386\u53f2\u4e2d\uff0cGStreamer\u4e3b\u8981\u5173\u6ce8\u7f51\u7edc\u4e0a\u7684\u6d41\u5a92\u4f53\u3002\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec&#39\uff1b\u5728\u8fd9\u4e2a\u5468\u671f\u4e2d\uff0c\u6211\u4e5f\u505a\u51fa\u4e86\u4e00\u4e9b\u8d21\u732e\u3002\n\u6211\u4eec&#39\uff1b\u6211\u5bf9GStreamer\u548c#39\uff1b\u662fWebRTC\u534f\u8bae\u6700\u5b8c\u6574\u3001\u6700\u7075\u6d3b\u7684\u72ec\u7acb\u5b9e\u73b0\u4e4b\u4e00\u3002\u6211&#39\uff1b\u6211\u5728GStreamer\u548c#39\u4e0a\u5de5\u4f5c\u8fc7\uff1b\u7684WebRTC\u5806\u6808\uff0c\u5e76\u6dfb\u52a0\u4e86\u8bb8\u591a\u529f\u80fd\u3002\u6211\u5305\u62ec\u4e86\u5bf9\u660e\u786e\u901a\u77e5\u5019\u9009\u4eba\u7ed3\u675f\u7684\u652f\u6301\uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u8bc6\u522b\u5931\u8d25\u7684\u8fde\u63a5\u3002\u6211\u4fee\u6539\u4e86WebRTC\u5e93API\uff0c\u901a\u8fc7\u5c06\u6240\u6709\u4fe1\u606f\u9690\u85cf\u5728\u5c5e\u6027\u540e\u9762\u6765\u786e\u4fdd\u5176\u7ebf\u7a0b\u5b89\u5168\u3002\u6211\u8fd8\u589e\u52a0\u4e86\u5bf9&#34\uff1b\u4f18\u5148\u6743&#34\uff1b\u5a92\u4f53\u6d41\uff1b\u73b0\u5728\uff0c\u8bbe\u7f6e\u5404\u79cd\u4f18\u5148\u7ea7\u4f1a\u6dfb\u52a0\u6b63\u786e\u7684DSCP\u6807\u8bb0\uff0c\u4ece\u800c\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u80fd\u591f\u76f8\u5e94\u5730\u5bf9\u6d41\u91cf\u8fdb\u884c\u4f18\u5148\u7ea7\u6392\u5e8f\u3002\u6211\u663e\u8457\u6539\u8fdb\u4e86WebRTC\u7edf\u8ba1\u4fe1\u606f\uff0c\u901a\u8fc7\u65b9\u4fbf\u7684WebRTC API\u516c\u5f00\u4e86GStreamer RTP\u5806\u6808\u4e2d\u7684\u5927\u90e8\u5206\u7edf\u8ba1\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u6765\u81eaRTP\u6296\u52a8\u7f13\u51b2\u533a\u7684\u7edf\u8ba1\u4fe1\u606f\u3002\nJakub\u5b9e\u73b0\u4e86\u4e00\u4e2aRTP\u62a5\u5934\u6269\u5c55\uff0c\u4f7f\u5f97\u6bcf\u5e27\u53d1\u9001\u989c\u8272\u7a7a\u95f4\u4fe1\u606f\u6210\u4e3a\u53ef\u80fd\uff1b\u8fd9\u4f7fGStreamer\u80fd\u591f\u901a\u8fc7RTP\u5171\u4eab\u52a8\u6001HDR\u5185\u5bb9\u3002\u6211\u4eec\u5b9e\u65bd\u7684\u6269\u5c55\u4e0e\u8c37\u6b4c\u7684\u63d0\u8bae\u517c\u5bb9&#39\uff1blibwebrtc\u56e2\u961f\u3002\u901a\u8fc7RTP\u53d1\u9001Opus\u7684\u57fa\u672c\u89c4\u8303\u4ec5\u652f\u6301\u5355\u58f0\u9053\u548c\u7acb\u4f53\u58f0\u3002Google libwebrtc\u56e2\u961f\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a&#34\uff1b\u591a\u90e8\u4f5c\u54c1&#34\uff1b\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u591a\u4e2a\u7acb\u4f53\u58f0\u4f5c\u54c1\u6d41\uff0c\u4e3a\u4e24\u4e2a\u4ee5\u4e0a\u7684\u9891\u9053\u63d0\u4f9b\u670d\u52a1\u3002Jakub\u5728GStreamer\u548c#39\u4e2d\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff1bs Opus RTP payloader\u548cdepayloader\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u5b9e\u73b0\u4e86RFC 6464\uff0c\u8fd9\u662f\u4e00\u4e2aRTP\u62a5\u5934\u6269\u5c55\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u5305\u4e2d\u97f3\u9891\u7684\u76f8\u5bf9\u7ea7\u522b\uff08\u97f3\u91cf\uff09\uff1b\u8fd9\u4f7f\u5f97\u670d\u52a1\u5668\u53ef\u4ee5\u4f18\u5148\u8003\u8651\u90a3\u4e9b\u4e0e\u4ed6\u4eba\u4ea4\u8c08\u7684\u5ba2\u6237\u7aef\uff0c\u800c\u4e0d\u5fc5\u89e3\u7801\u6240\u6709\u97f3\u9891\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u8fd8\u589e\u52a0\u4e86\u5bf9iSAC\u7f16\u89e3\u7801\u5668\u7684\u652f\u6301\uff1b\u8fd9\u662f\u4e00\u4e2a\u4f20\u7edf\u7684\u97f3\u9891\u7f16\u89e3\u7801\u5668\uff0c\u51e0\u5e74\u524d\u7531\u8c37\u6b4c\u5728libwebrtc\u5f00\u6e90\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u63d2\u4ef6\uff0c\u5b83\u5c01\u88c5\u4e86\u7f16\u89e3\u7801\u5668\u7684\u53c2\u8003\u5b9e\u73b0\uff0c\u6211\u4eec&#39\uff1b\u6211\u8fd8\u7f16\u5199\u4e86\u4e00\u4e2aRTP payloader\u548cdepayloader\uff0c\u4f7fGStreamer\u80fd\u591f\u901a\u8fc7RTP\u53d1\u9001\u548c\u63a5\u6536\u7528\u8be5\u7f16\u89e3\u7801\u5668\u7f16\u7801\u7684\u97f3\u9891\u3002\n\u4f5c\u4e3aSK Telecom\u8d5e\u52a9\u7684Hwangsaeul\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u6539\u8fdb\u4e86SRT\u652f\u6301\u3002Raghavendra\u589e\u52a0\u4e86\u5bf9\u8eab\u4efd\u9a8c\u8bc1\u7684\u652f\u6301\uff0c\u800cJakub\u5219\u589e\u52a0\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u6536\u5230\u65ad\u5f00\u8fde\u63a5\u7684\u901a\u77e5\uff0c\u5e76\u4ee5\u4e0eSRT\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u517c\u5bb9\u7684\u65b9\u5f0f\u5411URI\u6dfb\u52a0\u4e86\u66f4\u591a\u9009\u9879\u3002\nGStreamer\u662f\u4e00\u4e2a\u975e\u5e38\u7075\u6d3b\u7684\u8de8\u5e73\u53f0\u6846\u67b6\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u8fd8\u505a\u4e86\u4e00\u4e9b\u4e0d\u5c5e\u4e8e\u8fd9\u4e24\u5927\u7c7b\u7684\u6539\u8fdb\u3002\nNicolas\u5b9e\u73b0\u4e86\u5bf9WebM\u89c6\u9891\u4e2dalpha\u901a\u9053\u89e3\u7801\u7684\u652f\u6301\u3002\u8fd9\u6709\u70b9\u7279\u522b\uff0c\u56e0\u4e3aalpha\u901a\u9053\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u89c6\u9891\u6d41\u4f20\u8f93\u3002\u4ed6&#39\uff1bs\u8fd8\u589e\u52a0\u4e86\u5bf9\u4f7f\u7528\u786c\u4ef6\u52a0\u901f\u89e3\u7801\u5668\uff08\u5982\u57fa\u4e8eV4L2\u7684\u89e3\u7801\u5668\uff09\u8fdb\u884c\u89e3\u7801\u7684\u652f\u6301\u3002\nAaron\u5728\u6838\u5fc3GStreamer\u63d2\u4ef6\u96c6\u5408\u4e2d\u6dfb\u52a0\u4e86\u7b2c\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5143\u7d20\u3002\u5b83\u4f7f\u7528ONNX\u5e93\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\uff1b\u6211\u4eec\u5e0c\u671b\u5c06\u6765\u4f7f\u7528ONNX\u5e93\u6dfb\u52a0\u66f4\u591a\u5143\u7d20\u3002\nAaron\u8fd8\u5e2e\u52a9NICE\u7684Rabindra Harlalka\u8d21\u732e\u4e86\u4e0a\u6e38\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u4ee5\u4f7f\u7528AES\u52a0\u5bc6\u5bf9\u6d41\u8fdb\u884c\u52a0\u5bc6\u3002\u8fd9\u53ea\u662f\u5c06CBC\u6a21\u5f0f\u4e0b\u7684AES\u5e94\u7528\u4e8e\u5177\u6709\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u5bc6\u94a5\u7684\u4f20\u5165\u6d41\u3002\nXavier\u518d\u6b21\u5bf9\u4ecb\u5b50\u6784\u5efa\u7cfb\u7edf\u8fdb\u884c\u4e86\u5927\u91cf\u6539\u8fdb\uff1b\u7279\u522b\u662f\uff0c\u4ed6\u53d6\u4ee3\u4e86GStreamer&#39\uff1bs\u7684\u5b9a\u5236pkg\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4ed6\u4e3a\u4ecb\u5b50\u672c\u8eab\u63d0\u4f9b\u7684\u3002\u8fd9\u786e\u4fdd\u751f\u6210\u7684pkg\u914d\u7f6e\u6587\u4ef6\u4e0e\u6784\u5efa\u7cfb\u7edf\u4e2d\u7684\u5e93\u5339\u914d\u3002\n\u6211\u52a0\u4e86\u4e00\u4e2a&#34\uff1b\u7edf\u8ba1\u6570\u636e&#34\uff1b\u5c5e\u6027\u5230\u8eab\u4efd\u5143\u7d20\uff1b\u8fd9\u4f7f\u5f97\u5bf9\u7ba1\u9053\u8fdb\u884c\u68c0\u6d4b\u4ee5\u83b7\u53d6\u7528\u4e8e\u76d1\u63a7\u7684\u7edf\u8ba1\u6570\u636e\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u6211\u589e\u52a0\u4e86\u5bf9\u66f4\u65b0\u7248\u672c&#34\u7684\u652f\u6301\uff1b\u9650\u5236\u6027\u9ad8&#34\uff1b\u548c&#34\uff1b\u8fdb\u6b65\u9ad8\u4e2d#34\u5206\uff1bH.264\u914d\u7f6e\u6587\u4ef6\u4e0e\u5404\u79cdGStreamer\u5143\u7d20\u76f8\u5173\u3002\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u53ea\u662f\u73b0\u6709\u9ad8\u914d\u7f6e\u6587\u4ef6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\nJakub\u6539\u8fdb\u4e86D3D11Desktoup\u63d2\u4ef6\uff0c\u5c06Windows\u684c\u9762\u6355\u6349\u5230DirectX 11\u7eb9\u7406\u3002\u4ed6\u5b9e\u73b0\u4e86\u5bf9\u8ddf\u8e2a\u684c\u9762\u52a8\u6001\u5206\u8fa8\u7387\u66f4\u6539\u7684\u652f\u6301\uff0c\u4ee5\u53ca\u5bf9\u6355\u83b7Windows\u7528\u6237\u5e10\u6237\u63a7\u5236\uff08UAC\uff09\u63d0\u793a\u7684\u652f\u6301\u3002\n\u6211\u6539\u8fdb\u4e86\u7531audiomixer\u548caudiointerleave\u7b49\u5143\u7d20\u4f7f\u7528\u7684GstAudioAggregator\u57fa\u7c7b\uff0c\u5b83\u73b0\u5728\u4f1a\u53d1\u51fa\u4e00\u6761QoS\u6d88\u606f\uff0c\u544a\u8bc9\u5e94\u7528\u7a0b\u5e8f\u4f55\u65f6\u56e0\u4e3a\u5ef6\u8fdf\u800c\u4e22\u5f03\u4f20\u5165\u7f13\u51b2\u533a\u3002\nSt\u00e9phane\u5c06MXF\u548cMatroska\u89e3\u590d\u7528\u5668\u56fa\u5b9a\u5728\u4e00\u4e2a\u6846\u67b6\u4e0a\uff0c\u4ee5\u7cbe\u786e\u641c\u7d22\uff1b\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4f5c\u89c6\u9891\u7f16\u8f91\u7684\u6765\u6e90\u3002\nXavier\u82b1\u4e86\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u5e2e\u52a9\u5c06GStreamer\u5b58\u50a8\u5e93\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b58\u50a8\u5e93\u3002\u8fd9\u662f\u6574\u4e2a\u793e\u533a\u7684\u52aa\u529b\uff0c\u4f7f\u6211\u4eec\u7684CI\u7cfb\u7edf\u66f4\u7b80\u5355\uff0c\u5e76\u4e14\u603b\u4f53\u4e0a\u4f7fGStreamer\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\u3002\n\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u5927\u91cf\u5168\u9762\u7684bug\u4fee\u590d\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u5168\u90e8\u5217\u51fa\u3002\n\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u56e2\u961f\u5df2\u7ecf\u4e3a\u4e0b\u4e00\u4e2a\u7248\u672c\u8ba1\u5212\u4e86\u8bb8\u591a\u8d21\u732e\u3002\u5176\u4e2d\u5305\u62ec\u91cd\u65b0\u8bbe\u8ba1MPEG PS\u89e3\u590d\u7528\u5668\u4ee5\u5b9e\u73b0\u66f4\u7cbe\u786e\u7684\u641c\u7d22\uff0c\u6539\u8fdbWayland\u652f\u6301\uff0c\u5982GTK3\u63a5\u6536\u5668\uff0c\u53ef\u5229\u7528Wayland#39\uff1bs\u652f\u6301\u786c\u4ef6\u89c6\u9891\u8986\u76d6\uff0c\u5e76\u652f\u6301DRM\u4fee\u6539\u5668\uff0c\u4ee5\u5b9e\u73b0\u786c\u4ef6\u89e3\u7801\u5668\u548c\u663e\u793a\u5668\u4e4b\u95f4\u66f4\u9ad8\u6027\u80fd\u7684\u96f6\u62f7\u8d1d\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u51c6\u5907\u597d\u63a2\u7d22GStreamer 1.20\uff0c\u6216\u8005\u5bf9\u5982\u4f55\u5229\u7528\u5176\u4ee4\u4eba\u5174\u594b\u7684\u65b0\u529f\u80fd\u4ece\u60a8\u7684\u786c\u4ef6\u83b7\u5f97\u6700\u5927\u6027\u80fd\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u4e0e\u6211\u4eec\u8054\u7cfb\u3002Collabora\u548c#39\uff1bs\u7684\u591a\u5a92\u4f53\u56e2\u961f\u968f\u65f6\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5229\u7528\u6216\u5b9e\u65bdGStreamer\u7684\u6700\u65b0\u529f\u80fd\u7248\u672c\u3002\n\u8bf7\u52fe\u9009\u6b64\u6846\uff0c\u786e\u8ba4\u60a8\u5df2\u9605\u8bfb\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u9690\u79c1\u901a\u77e5\u4e2d\u6709\u5173\u6536\u96c6/\u5b58\u50a8\u548c\u4f7f\u7528\u60a8\u4e2a\u4eba\u6570\u636e\u7684\u6761\u6b3e\uff1a*", "note_en": "Made available earlier this month, GStreamer 1.20 is the fruitful result of 17 months of hard work from the entire community. Over 250 developers contributed code to make this release happen, and once again, Collabora had more contributors than any other organization.\n  Our work focused on the two areas in which we believe GStreamer shines the brightest: embedded systems, and network streaming, in particular WebRTC. Below is a summary of the impact our team of engineers had on this latest release.\n  As usual, you can also learn more about the enhancements done by the rest of the community by looking at the project&#39;s 1.20  release notes.\n    GStreamer is already the pre-eminent media framework for embedded systems, and this is an area where Collabora has been very active over the last release cycle. Here are some of the improvements that we&#39;ve made.\n  After many years of efforts by Guillaume, Nicolas, St\u00e9phane, and Aaron, we finally landed the support for sub-frame decoding. This has made it possible to start decoding video frames before the entire frame has been received from the network if the decoder supports this. We&#39;ve implemented this for JPEG2000 with OpenJPEG, with H.264 with ffmpeg, as well as in gst-omx when using the Allegro extensions present on the Xilinx Zynq UltraScale+ MPSoC EV processors.\n  In partnership with Huawei, we also improved the GStreamer build system to make it possible to create a library containing only the specific parts of GStreamer used by a particular application or a set of applications. Take a look at this  blog post to learn more.\n  Nicolas added  MPEG2 and VP9 Stateless Linux support and contributed to enhancing the VP9 parser. The H264 Stateless Linux decoder also gained support for interlaced video streams, though only for slice-based decoders and not for frame-based decoders since no driver in the mainline Linux kernel supports that.\u00a0 Nicolas also added support for a rendering delay that allows multiple frames to be queued in a stateless decoder and enhances throughput at the cost of higher latency. He implemented this for the MPEG 2 Video, VP8, and VP9 decoders. He also added support for HEVC decoding to the new &#34;va&#34; plug-in that uses the new GStreamer common decoder implementation to support VA-API-based decoders.\n  Nicolas also implemented videocodectestsink: a small element that computes the checksum of incoming frames to compare them against a known good reference. This is useful for creating tests that ensure no regression in decoder implementations. He also added the necessary code in GStreamer to react to resolution changes in Video4Linux source. This is primarily relevant if the source is, for example, an HDMI input.\n    For much of the framework\u2019s history, GStreamer\u2019s principal focus has been on streaming media over a network. This is an area in which we&#39;ve also made several contributions over this cycle.\n  We&#39;ve contributed many improvements related to GStreamer&#39;s WebRTC stack, which is one of the most complete and flexible independent implementations of the WebRTC protocols. I&#39;ve worked on GStreamer&#39;s WebRTC stack and have added many features. I included support for explicit notification of the end of candidates so that failing connections can be recognized faster. I reworked the WebRTC library API to ensure it is thread-safe by hiding all information behind properties. I also added support for the &#34;priority&#34; to media streams; setting the various priorities now adds the correct DSCP markings making it possible for network administrators to prioritize the traffic accordingly. I significantly improved the WebRTC statistics to expose most statistics that existed somewhere in the GStreamer RTP stack through the convenient WebRTC API, particularly those coming from the RTP jitter buffer.\n  Jakub has implemented an RTP Header extension making it possible to send colorspace information per frame; this enables GStreamer to share Dynamic HDR content over RTP. The extension we implemented is compatible with the proposal from Google&#39;s libwebrtc team. The basic specification for sending Opus over RTP only supports mono and stereo. The Google libwebrtc team has created an extension called &#34;multiopus,&#34; making it possible to send multiple stereo Opus streams together to serve more than two channels. Jakub implemented this in GStreamer&#39;s Opus RTP payloader and depayloader. We&#39;ve implemented RFC 6464, an RTP header extension allowing a client to send the server the relative level (volume) of the audio in the packet; this allows the server to prioritize clients who are speaking over others without having to decode all audio. We&#39;ve also added support for the iSAC codec; it is a legacy audio codec that was open-sourced by Google in libwebrtc a couple of years ago. We&#39;ve added a plug-in that wraps the reference implementation of the codec, and we&#39;ve also written an RTP payloader and depayloader to enable GStreamer to send and receive audio encoded with this codec over RTP.\n  As part of the  Hwangsaeul project sponsored by SK Telecom, we&#39;ve improved the  SRT support. Raghavendra added support for authentication, while Jakub added a way for the application to be notified of broken connections and added more options to the URI in a way that is compatible with the SRT demo application.\n    GStreamer being an incredibly flexible cross-platform framework, we&#39;ve also made several improvements that fall outside of the two main categories.\n  Nicolas implemented support for decoding alpha channels in WebM videos. This is a bit special as the alpha channel is carried as a second video stream. He&#39;s also added support for decoding those using hardware-accelerated decoders such as V4L2 based decoders.\n  Aaron added the first element specifically for machine learning to the core GStreamer plug-in collection. It uses the ONNX library to do object detection; we hope to add more elements using the ONNX library in the future.\n  Aaron also helped Rabindra Harlalka from NICE to contribute upstream elements that can encrypt a stream using AES encryption. This just applies the AES in CBC mode to the incoming stream with the key provided by the application.\n  Xavier again made numerous improvements to the Meson build system; in particular, he replaced GStreamer&#39;s custom pkg-config file generator with one he contributed to Meson itself. This ensures that the generated pkg-config files match the libraries that are in the build system.\n  I added a &#34;stats&#34; property to the identity element; this makes it easier to instrument pipeline to get statistics for monitoring. I added support for the newer &#34;constrained high&#34; and &#34;progressive high&#34; H.264 profiles to the various GStreamer elements where those are relevant. Those profiles are just a subset of the existing High profile.\n  Jakub improved the d3d11desktopup plug-in to capture the Windows desktop to DirectX 11 textures. He implemented support to follow dynamic resolution changes of the desktop and also for capture Windows User Account Control (UAC) prompts.\n  I improved GstAudioAggregator base class used by elements such as the audiomixer and audiointerleave elements, it now emit a QoS message telling the application whenever it drops incoming buffers because they are late.\n  St\u00e9phane fixed the MXF and Matroska demuxers to seek precisely to a frame; this makes it possible to use them as a source for video editing.\n  Xavier spent quite some time helping with the merge of the GStreamer repositories  into a single one. This was an effort of the whole community, making our  CI system more simple and generally makes life easier for GStreamer developers.\n  As usual, we have also contributed a large number of bug fixes across the board, but we won\u2019t list them all out here.\n    Our team of engineers already has a number of contributions planned for the next release. These include a rework of the MPEG PS demuxer for more accurate seeking, improvements to the Wayland support like a GTK3 sink that can take advantage of Wayland&#39;s support for hardware video overlays, and support for DRM modifiers to enable higher performance zero-copy between hardware decoders and display.\n  If you are ready to explore GStreamer 1.20, or have any questions about how to take advantage of its exciting new features to get the maximum performance from your hardware, please do not hesitate to  contact us. Collabora&#39;s multimedia team is always available to assist you to leverage or implement the latest feature releases of GStreamer.\n   Please tick this box to confirm you have read and accept the terms of our  privacy notice regarding collection/storage and usage of your personal data: *", "posttime": "2022-02-19 03:54:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "webrtc,\u652f\u6301", "title": "GStreamer 1.20\uff1a\u5d4c\u5165\u5f0f\u548cWebRTC\u5f15\u9886\u6f6e\u6d41", "title_en": "GStreamer 1.20: Embedded and WebRTC lead the way", "transed": 1, "url": "https://www.collabora.com/news-and-blog/news-and-events/gstreamer-120-embedded-webrtc-lead-the-way.html", "via": "", "real_tags": ["webrtc", "\u652f\u6301"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074009, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4f1a\u7b2c\u4e00\u4e2a\u627f\u8ba4\uff0c\u5728\u6211\u52a0\u5165\u4e4b\u524d\uff0c\u6211\u6ca1\u6709\u5728AnandTech\u5de5\u4f5c\u8fc7\u3002\u6b63\u662f\u7531\u4e8e\u5076\u7136\u7684\u673a\u4f1a\uff0c\u5728\u4e00\u6b21\u8d85\u9891\u6d3b\u52a8\u4e2d\u9047\u5230\u4e86\u5176\u4e2d\u4e00\u4f4d\u4f5c\u5bb6\uff0c\u8fd9\u4f7f\u6211\u9996\u5148\u6210\u4e3a\u4e86\u4e00\u540d\u8bfb\u8005\uff0c\u7136\u540e\u6210\u4e3a\u4e86\u4e00\u540d\u4f5c\u5bb6\uff0c\u6210\u4e3a\u4e86\u6211\u7684\u65b0\u95fb\u4e8b\u4e1a\u3002\u5982\u679c\u4f60\u662fAnandTech\u7684\u65b0\u624b\uff0c\u6b22\u8fce\uff01\u5341\u591a\u5e74\u6765\uff0c\u8fd9\u91cc\u4e00\u76f4\u662f\u6211\u7684\u5bb6\uff0c\u6211\u4eec\u7684\u76ee\u6807\u4e00\u76f4\u662f\u5728\u6280\u672f\u548c\u5de5\u7a0b\u76f8\u5173\u7684\u6240\u6709\u9886\u57df\u7a81\u7834\u754c\u9650\u3002\u5bf9\u4e8e\u6240\u6709\u7684\u8001\u624b\u4eec\u2014\u2014\u6211\u77e5\u9053\u4f60\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u5728\u6211\u4eec\u62a5\u9053\u7684\u884c\u4e1a\u5185\u7684\u516c\u53f8\u5de5\u4f5c\uff0c\u6211\u4eec\u6c38\u8fdc\u4e3a\u4f60\u4eec\u6301\u7eed\u7684\u652f\u6301\u548c\u4e92\u52a8\u611f\u5230\u9ad8\u5174\u3002\u5b83\u53ef\u80fd\u4f1a\u6301\u7eed\u5f88\u957f\u65f6\u95f4\uff0c\u5c24\u5176\u662f\u5728\u4e00\u4e2a\u56f4\u7ed5\u7740\u51e0\u4e2a\u5173\u952e\u89d2\u8272\uff08\u5305\u62ec\u6280\u672f\u548c\u51fa\u7248\uff09\u6162\u6162\u6574\u5408\u7684\u884c\u4e1a\u2014\u2014\u53ea\u8981\u89c2\u4f17\u9700\u8981\uff0cAnandTech\u5c06\u81f4\u529b\u4e8e\u63d0\u4f9b\u3002\n\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u4e00\u76f4\u5bf9\u7535\u8111\u611f\u5174\u8da3\uff0c\u4f46\u6b63\u662f\u8d85\u9891\u8ba9\u6211\u8fdb\u5165\u4e86\u786c\u4ef6\u9886\u57df\u3002\u4e0d\u4ec5\u4ec5\u662f\u5728\u6e38\u620f\u4e2d\u83b7\u5f97\u66f4\u591a\u7684\u753b\u9762\uff0c\u800c\u662f\u771f\u6b63\u7684\u7ade\u4e89\u8d85\u9891\uff0c\u8bd5\u56fe\u83b7\u5f97\u4e16\u754c\u4e0a\u6700\u597d\u7684\u5206\u6570\u3002\u4eba\u4eec\u628a\u5b83\u6bd4\u4f5c\u4e00\u7ea7\u65b9\u7a0b\u5f0f\u6216\u6c7d\u8f66\u8c03\u6821\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u611f\u89c9\u50cf\u662f\u8d5b\u8f66\u6bd4\u8d5b\u2014\u2014\u4e3a10\u79d2\u56db\u5206\u4e4b\u4e00\u82f1\u91cc\u505a8\u5c0f\u65f6\u7684\u51c6\u5907\u3002\u5f53\u65f6\u5b66\u4e60\u5316\u5b66\uff0c\u8868\u9762\u4e0a\u770b\uff0c\u9664\u4e86\u60f3\u66f4\u591a\u5730\u4e86\u89e3\u6211\u5728\u505a\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u4ee5\u5916\uff0c\u4f3c\u4e4e\u6ca1\u6709\u592a\u591a\u7684\u91cd\u53e0\u3002\u8fd9\u79cd\u6f2b\u4e0d\u7ecf\u5fc3\u4f46\u53c8\u575a\u5b9a\u7684\u6001\u5ea6\u8ba9\u5f53\u65f6\u7684\u4e3b\u677f\u9ad8\u7ea7\u7f16\u8f91\u62c9\u91d1\u5fb7\u00b7\u5409\u5c14\uff08Rajinder Gill\uff09\u5efa\u8bae\u963f\u5357\u5fb7\uff08Anand\uff09\u57282010\u5e74\u8ba9\u6211\u6210\u4e3a\u4e00\u540d\u81ea\u7531\u804c\u4e1a\u8005\u3002\u6700\u521d\uff0c\u6709\u4e86\u65b0\u95fb\uff0c\u62c9\u91d1\u5fb7\u79bb\u5f00\u540e\uff0c\u6211\u5f88\u5feb\u5c31\u8fc7\u6e21\u5230\u4e86\u4ed6\u7684\u89d2\u8272\u3002\u4ece2011\u5e74\u521d\u7684\u6851\u8fea\u6865\u53d1\u5e03\u4f1a\u5f00\u59cb\uff0c\u6211\u82b1\u4e86\u4e94\u5e74\u65f6\u95f4\u5728AnandTech\u5ba1\u67e5\u4e3b\u677f\uff0c\u8fd9\u662f\u6211\u535a\u58eb\u6bd5\u4e1a\u540e\u7684\u65e5\u5e38\u5de5\u4f5c\u3002\u6211\u4ecd\u7136\u4f1a\u56de\u987e\u6211\u7684\u7b2c\u4e00\u6b21\u4e3b\u677f\u8bc4\u6d4b\uff0cASRock P67 Extreme4\uff0c\u5e26\u6709\u73ab\u7470\u8272\u773c\u955c\u3002\u5f53\u65f6\u8fd9\u662f\u4e00\u5757\u5f88\u68d2\u7684\u68cb\u76d8\uff0c\u6211\u7684\u6536\u85cf\u4e2d\u4ecd\u7136\u4fdd\u7559\u7740\u5b83\u3002\n\u8fd9\u5c31\u662f\u6211\u8fdb\u5165AnandTech\u7684\u539f\u56e0\uff0c\u572811\u5e74\u540e\uff0c\u6211\u89c9\u5f97\u6709\u5fc5\u8981\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u5728\u8fd9\u4e2a\u884c\u4e1a\u62c5\u4efb\u4e00\u4e2a\u65b0\u804c\u4f4d\u30022014\u5e74\uff0c\u5f53\u963f\u5357\u5fb7\u79bb\u5f00\u65f6\uff0c\u5728\u638c\u823518\u5e74\u540e\uff0c\u6211\u5bf9\u81ea\u5df1\u7684\u89d2\u8272\u8fd8\u76f8\u5f53\u964c\u751f\uff0c\u5f53\u65f6\u6211\u5e76\u6ca1\u6709\u771f\u6b63\u628a\u4ed6\u7684\u8bdd\u653e\u5728\u5fc3\u4e0a\u3002\u4eca\u5929\u56de\u987e\u4ed6\u4eec\uff0c\u6211\u770b\u5230\u4e86\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u5c3d\u7ba1\u6211\u4ece\u672a\u62c5\u4efb\u8fc7\u90a3\u4e2a\u9ad8\u7ea7\u804c\u4f4d\u3002\u81ea\u4ece\u963f\u5357\u5fb7\u79bb\u5f00\u540e\uff0c\u6211\u88ab\u63d0\u5347\u4e3a\u9ad8\u7ea7CPU\u7f16\u8f91\uff0c\u745e\u5b89\u00b7\u53f2\u5bc6\u65af\u4ee5\u4f18\u96c5\u548c\u6c89\u7740\u7684\u59ff\u6001\u62c5\u4efb\u4e3b\u7f16\u2014\u2014\u5728\u8fd9\u4e2a\u884c\u4e1a\u4e0d\u65ad\u53d1\u5c55\u7684\u65f6\u5019\uff0c\u4ed6\u4e00\u76f4\u5728\u8bf4\u670d\u6211\uff0c\u8ba9\u6211\u6446\u8131\u56f0\u5883\uff0c\u800c\u6211\u6240\u60f3\u505a\u7684\u5c31\u662f\u5927\u53d1\u96f7\u9706\uff01\u963f\u5357\u5fb7\u79bb\u5f00\u540e\uff0c\u662f\u745e\u5b89\u8ba9\u6211\u6210\u4e3a\u4e86\u4e00\u540d\u5168\u804c\u5458\u5de5\uff0c\u5e76\u5e2e\u52a9\u963f\u5357\u5fb7\u79d1\u6280\u5b8c\u6210\u4e86\u4e24\u6b21\u6536\u8d2d\uff0c\u5b9e\u73b0\u4e86\u8be5\u54c1\u724c\u76ee\u524d\u4e0e\u672a\u6765\u7684\u5730\u4f4d\u3002\u5c3d\u7ba1\uff08\u5927\u81f4\uff09\u5e74\u9f84\u76f8\u4eff\uff0c\u4f46Ryan\u4e00\u76f4\u662f\u6211\u5199\u7684\u5f88\u591a\u5185\u5bb9\u7684\u5bfc\u5e08\u548c\u5bfc\u6f14\uff0c\u5bf9\u6b64\u6211\u975e\u5e38\u611f\u8c22\u3002\u6211\u5e0c\u671b\u4ed6\u77e5\u9053\u8fd9\u4e9b\u5e74\u6765\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\n\u6211\u771f\u7684\u5f88\u559c\u6b22\u5728\u5b89\u5357\u79d1\u6280\u5de5\u4f5c\u3002\u6211\u559c\u6b22\u6df1\u5165\u4e86\u89e3\u6700\u65b0\u7684\u6280\u672f\u7ec6\u8282\uff0c\u4ece\u7814\u7a76\u4eba\u5458\u90a3\u91cc\u5f97\u5230\u4e8b\u5148\u7684\u7b80\u62a5\u6c38\u8fdc\u662f\u6211\u7684\u4e00\u5927\u4e50\u8da3\u3002\u65e0\u8bba\u662f\u4e3a\u5373\u5c06\u63a8\u51fa\u7684\u4ea7\u54c1\uff0c\u53c2\u52a0IEEE\u6280\u672f\u4f1a\u8bae\uff0c\u8fd8\u662f\u4e3a\u70ed\u95e8\u82af\u7247\u6f14\u8bb2\uff0c\u8fd8\u662f\u770b\u5230\u79d8\u5bc6\u7814\u53d1\u7684\u5185\u5e55\uff0c\u8fd9\u90fd\u65e0\u5173\u7d27\u8981\uff1b\u6211\u5728Computex\u6709\u4e00\u4e2a\u623f\u95f4\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u6211\u7684\u5b66\u672f\u7ecf\u5386\u4e0e\u6211\u7684\u62a5\u9053\u91cd\u53e0\uff0c\u8fd9\u662f\u6211\u4ece\u672a\u9884\u6599\u5230\u7684\u2014\u2014\u6211\u4eec&#39\uff1b\u6211\u4eec\u5373\u5c06\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u6469\u5c14&#39\uff1b\u73b0\u4ee3\u7684\u6cd5\u5f8b\u30022019\u5e74\uff0c\u6211\u7684\u884c\u7a0b\u8d85\u8fc7\u4e86200000\u82f1\u91cc\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u4e00\u70b9\u4e5f\u4e0d\u9ebb\u70e6\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u80fd\u591f\u4e0e\u5173\u952e\u7684\u884c\u4e1a\u63a8\u52a8\u8005\u4f1a\u9762\u5e76\u8fdb\u884c\u8ba8\u8bba\u3002\u5ba3\u5e03\u524d\u4e00\u5929\u665a\u4e0a\uff0c\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u65f6\u523b\u662f\u8bf4\u670dAMD\u5c06\u517664\u6838Threadripper\u7684\u4ef7\u683c\u63d0\u9ad8\u3002\u6216\u8005\u54ac\u4e00\u5757\u82f1\u7279\u5c14\u768410nm\u6676\u5706\u3002\u80fd\u591f\u56db\u5904\u65c5\u884c\u548c\u53c2\u89c2\u516c\u53f8\u5411\u6211\u5c55\u793a\u4e86\u6211\u4eec\u8fd9\u4e2a\u884c\u4e1a\u6709\u591a\u5c11\u4e86\u4e0d\u8d77\u7684\u4eba\u548c\u6545\u4e8b\uff0c\u5f88\u9057\u61be\u4e00\u5929\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u65f6\u95f4\u6765\u5173\u6ce8\u4ed6\u4eec\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u4f60\u4eec\u5f88\u591a\u4eba\u90fd\u60f3\u542c\u4ed6\u4eec\u7684\u6545\u4e8b\u3002\u6211\u5e0c\u671b\u6211&#39\uff1b\u6211\u4e5f\u80fd\u7ed9\u6211\u7684\u5185\u5bb9\u5e26\u6765\u4e00\u70b9\u5e7d\u9ed8\u548c\u4e50\u8da3\u3002\n\u5982\u679c\u8bf4\u6709\u4e00\u4ef6\u4e8b\u4e00\u76f4\u5b58\u5728\u7684\u8bdd\uff0c\u90a3\u5c31\u662fAnandTech\u7684\u4f5c\u8005\u4eec\u7aed\u5c3d\u6240\u80fd\u5730\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u8be6\u7ec6\u6280\u672f\u8bc4\u8bba\u3002\u8fd9\u4e9b\u5e74\u6765\uff0c\u6211\u4e0e\u4e00\u4e9b\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4eba\u624d\u5171\u4e8b\uff0c\u5c24\u5176\u662f\u5b89\u5fb7\u70c8\uff0c\u6211\u7ba1\u7406\u8fc7\u4e00\u4e9b\u6211\u89c1\u8fc7\u6709\u98de\u8dc3\u6027\u8fdb\u6b65\u7684\u4eba\uff0c\u5c24\u5176\u662f\u73b0\u5728\u9886\u5bfc\u6211\u4eec\u4e3b\u677f\u4e1a\u52a1\u7684\u52a0\u6587\u3002\u591a\u5e74\u6765\uff0c\u56e2\u961f\u7684\u5176\u4ed6\u6210\u5458\u90fd\u4f1a\u5927\u558a\uff1a\u745e\u5b89\u3001\u5e03\u96f7\u7279\u3001\u7518\u5c3c\u4ec0\u3001\u6bd4\u5229\u3001\u514b\u91cc\u65af\u8482\u5b89\u3001\u7279\u96f7\u897f\u3001\u5b89\u4e1c\u3001\u4e54\u3001\u9a6c\u7279\u3001\u9a6c\u7279\u3001\u4e54\u5e0c\u3001\u5185\u7279\u3001\u62c9\u91d1\u5fb7\u3001\u52a0\u91cc\u3001\u5f17\u5409\u5c3c\u4e9a\u548c\u970d\u534e\u5fb7\u3002\u4f60\u4eec\u5728\u5f88\u591a\u65b9\u9762\u5bf9\u6211\u90fd\u5f88\u91cd\u8981\u3002\u8fd8\u6709\u89c2\u4f17\uff0c\u4ed6\u4eec\u603b\u662f\u5728\u8fd9\u91cc\u3001\u793e\u4ea4\u5a92\u4f53\u4e0a\u6216\u901a\u8fc7\u6211\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5bf9\u8bdd\u63d0\u4f9b\u5927\u91cf\u53cd\u9988\u3002\u65e0\u8bba\u6211\u4eec\u8eab\u5728\u4f55\u5904\uff0c\u4e3a\u8c01\u5de5\u4f5c\uff0c\u8bf7\u4e0d\u8981\u505c\u6b62\u5bf9\u6211\u4eec\u6240\u6709\u4eba\u63d0\u51fa\u5efa\u8bbe\u6027\u7684\u6279\u8bc4\uff0c\u6279\u8bc4\u6211\u4eec\u5982\u4f55\u628a\u5de5\u4f5c\u505a\u5f97\u66f4\u597d\u3002\n\u81f3\u4e8e\u6211\uff0c\u6211\u6b63\u5728\u5bfb\u627e\u65b0\u7684\u4f01\u4e1a\uff1a\u4e00\u4e2a\u5e55\u540e\u548c\u9762\u5411\u516c\u4f17\u7684\u673a\u4f1a\u7684\u6df7\u5408\u4f53\uff0c\u4ee5\u53ca\u6301\u7eed\u7684\u54a8\u8be2\uff0c\u4f46\u4ecd\u7136\u5728\u8fd9\u4e2a\u6211\u4eec\u559c\u6b22\u5206\u6790\u7684\u79d1\u6280\u884c\u4e1a\u4e2d\u3002We&#39\uff1b\u6211\u4eec\u5373\u5c06\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u6469\u5c14&#39\uff1b\u73b0\u4ee3\u7684\u6cd5\u5f8b\u3002\u6211\u4ecd\u7136\u4f1a\u5728Twitter\u4e0a\u5927\u58f0\u75be\u547c\uff0c\u6279\u8bc4\u6bcf\u4e00\u6b21\u8d22\u52a1\u62ab\u9732\u548c\u6f14\u793a\uff0c\u5982\u679c\u4f60\u5bf9\u6211\u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\u611f\u5174\u8da3\uff0c\u90a3\u4e48\u6211\u5f88\u53ef\u80fd\u4f1a\u5728\u90a3\u91cc\u6216\u5728LinkedIn\u4e0a\u5ba3\u5e03\u6211\u672a\u6765\u7684\u89d2\u8272\u3002\u4eca\u5929\u662f\u6211\u5728\u963f\u5357\u5fb7\u79d1\u6280\u7684\u6700\u540e\u4e00\u5929\uff0c\u5510&#39\uff1b\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e24\u5468\u91cc\uff0c\u5982\u679c\u6211\u7684\u540d\u5b57\u518d\u6b21\u51fa\u73b0\u5728\u8fd9\u91cc\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u63d0\u524d\u51c6\u5907\u4e86\u4e00\u4e9b\u5185\u5bb9\uff0c\u5305\u62ec\u6211\u4eec\u7684AMD\u4f26\u52c3\u6717\u8bc4\u8bba\u548c\u5bf9\u62c9\u8d3e\u00b7\u79d1\u675c\u91cc\u7684\u91c7\u8bbf\u3002\u8bf7\u7ee7\u7eed\u5173\u6ce8\u8fd9\u4e9b\u3002\n\u611f\u8c22\u8fd9\u4e9b\u5e74\u6765\u6240\u6709\u7684\u8bfb\u8005\uff0c\u975e\u5e38\u611f\u8c22\u4f60\u4eec\u7ed9\u6211\u8fd9\u4e2a\u673a\u4f1a\u3002\u6ca1\u6709\u4f60\u6211\u505a\u4e0d\u5230\u3002\u6211\u5e0c\u671b\u4f60\u4eec\u80fd\u7ee7\u7eed\u7ed9\u4e88\u6240\u6709AnandTech\u4f5c\u5bb6\u4f60\u4eec\u5bf9\u6211\u7684\u652f\u6301\u3002\n\u53d1\u8868\u8bc4\u8bba&#39\uff1b\u4e0e\u4f0a\u6069\u548c\u6211&#39\uff1b\u5931\u53bb\u4ed6\u6211\u5f88\u96be\u8fc7\u3002\u4f46\u4ed6&#39\uff1b\u591a\u5e74\u6765\uff0c\u4ed6\u5b8c\u6210\u4e86\u8bb8\u591a\u4f1f\u5927\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u6211\u671f\u5f85\u7740\u770b\u5230\u4ed6&#39\uff1b\u4ed6\u4e0b\u4e00\u6b65\u80fd\u505a\u4ec0\u4e48\u3002\u795d\u4f60\u597d\u8fd0\uff0c\u4f0a\u6069\uff01\u81f3\u4e8eAnandTech\uff08\u56e0\u4e3a\u80af\u5b9a\u6709\u4eba\u4f1a\u95ee\uff09\uff0c\u6211\u4eec\u5c06\u8058\u8bf7\u4e00\u4f4d\u65b0\u7684\u603b\u7f16\u8f91\u6765\u53d6\u4ee3Ian\uff0c\u5e76\u4e00\u5982\u65e2\u5f80\u5730\u63d0\u4f9b\u5173\u4e8eCPU\u548c\u5176\u4ed6\u6280\u672f\u7684\u4f1f\u5927\u89c1\u89e3\u3002\u65e0\u53ef\u5426\u8ba4\uff0c\u6211\u5e0c\u671b\u6709\u4eba\u80fd\u53ca\u65f6\u4e3a\u4f0a\u6069\u6392\u597d\u961f\uff1b\u4f0a\u6069\u79bb\u5f00\u4e86\uff0c\u4f46\u4f0a\u6069\u5f88\u96be\u8ddf\u4e0a\uff0c\u8fd9\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u4f60\u5728\u8fd9\u4e2a\u9886\u57df\u6709\u7ecf\u9a8c\uff0c\u5e76\u4e14\u6b63\u5728\u5bfb\u627e\u5728\u79d1\u6280\u65b0\u95fb\u884c\u4e1a\u664b\u5347\u7684\u673a\u4f1a\uff0c\u8bf7\u7ed9\u6211\u5199\u4fe1\uff1b\u6211\u4eec&#39\uff1b\u91cd\u65b0\u62db\u8058\u3002\n\u56de\u590d\n@\u4f0a\u6069\uff0c&#34\uff1b\u3002\u3002\u3002\u5f53\u65f6\u4ed6\u5e76\u6ca1\u6709\u771f\u6b63\u628a\u963f\u7eb3\u5fb7\u7684\u8bdd\u653e\u5728\u5fc3\u4e0a&#34; \u963f\u5357\u5fb7\u662f\u4ec0\u4e48&#39\uff1b\u4ec0\u4e48\u8bdd\uff1f\u56de\u590d\n\u6211\u60f3\u4ed6\u6307\u7684\u4e00\u5b9a\u662f\u963f\u5357\u5fb7\u7684\u8bdd&#39\uff1bs&#39\uff1b\u518d\u89c1&#39\uff1b\u4fe1\u606f\uff0c\u5728\u540c\u4e00\u53e5\u8bdd\u7684\u524d\u9762\u94fe\u63a5\u3002\u56de\u590d\n\u6700\u7f8e\u597d\u7684\u795d\u798f\u3002\u4f46\u662f\uff0c\u4f60&#39\uff1b\u8fd9\u5c31\u662f\u6211\u6765\u8fd9\u91cc\u8bfb\u6587\u7ae0\u7684\u539f\u56e0\u3002\u60f3\u60f3\u770b\uff0c\u4f60\u7684\u6587\u7ae0\u662f\u6211\u552f\u4e00\u8bfb\u8fc7\u7684\u3002\u6240\u4ee5\uff0c\u6211\u731c\u662f&#39\uff1bIt\u2019\u6211\u4e5f\u8981\u548cAnanatech\u544a\u522b\u4e86\u3002\u56de\u590d\n\u8fd9\u662f\u79d1\u6280\u884c\u4e1a\u65b0\u95fb\u4e1a\u7684\u5de8\u5927\u635f\u5931\u3002\u6211&#39\uff1b\u6211\u4e0d\u77e5\u9053\u6709\u4eba\u5728\u8fd9\u91cc\u63d0\u5230\u7684\u5176\u4ed6\u5730\u65b9\uff0c\u4f46\u8fd9\u4e2a\u7f51\u7ad9\u4e00\u76f4\u662f\u6211\u4e86\u89e3\u6280\u672f\u6df1\u5ea6\u7684\u4e3b\u8981\u5730\u65b9\uff0c\u800c\u4e14\u603b\u662f\u5728\u63d0\u5230\u8fd9\u4e2a\u5730\u65b9\u65f6\u624d\u63d0\u5230\u3002\u5b83&#39\uff1bIt\u2019\u8fd9\u4e48\u591a\u5e74\u6765\uff0c\u770b\u5230\u8fd9\u4e48\u591a\u5458\u5de5\u79bb\u804c\uff0c\u771f\u662f\u592a\u4e0d\u5e78\u4e86\u3002\u73b0\u5728\u4f0a\u6069\u4e5f\u3002\u3002\u3002\u4e0d\u77e5\u6240\u63aa\u3002\u611f\u8c22\u4f0a\u6069\u548c\u6240\u6709\u7684\u5de5\u4f5c\u4eba\u5458\u3002\u6211\u5e0c\u671b\u8be5\u7f51\u7ad9\u7ee7\u7eed\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u6df1\u5165\u7684\u6280\u672f\u5206\u6790\u3002\u5bf9\u4f0a\u6069\u6765\u8bf4\uff0c\u6211\u77e5\u9053\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u77e5\u9053\u4f60\u7684YT\u9891\u9053\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8ff9\u8c61\uff0c\u9884\u793a\u7740\u4e8b\u60c5\u4f1a\u8d70\u4e0b\u5761\u8def\u3002\u6b64\u5916\uff0cAT\u7684\u8bc4\u8bba\u4e5f\u4e0b\u964d\u4e86\u5f88\u591a\u3002\u5b83&#39\uff1bYouTube\u548c\u5176\u4ed6\u4e00\u4e9b\u5730\u65b9\u53ea\u6709\u8fd9\u4e9b\u53ef\u601c\u7684\u6e38\u620f\u5185\u5bb9\uff0c\u6839\u672c\u6ca1\u6709\u79d1\u6280\u8bdd\u9898\u3002\u795d\u4f60\u4e00\u5207\u987a\u5229\u3002\u4e5f\u4e3a\u7403\u961f\u6548\u529b\u3002\u56de\u590d\n\u8c22\u8c22\u4f60\u8fd9\u4e48\u591a\u5e74\u7684\u65f6\u95f4\u548c\u52aa\u529b\uff0c\u4f0a\u6069\uff01\u4f60\u4eec\u771f\u7684\u662f\u8fd9\u91cc\u6700\u597d\u7684\u4f5c\u5bb6\u4e4b\u4e00\uff0c\u7edd\u5bf9\u662f\u4ece\u963f\u5357\u5fb7\u624b\u4e2d\u63a5\u8fc7\u706b\u70ac\u7684\u4eba\u3002\u56de\u590d\n\u55e8\uff0c\u4f0a\u6069\uff0c\u6211&#39\uff1b\u6211\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u53d1\u8fc7\u5e16\u5b50\uff0c\u4f46AnandTech\uff0c\u5c24\u5176\u662f\u4f60\u7684\u5185\u5bb9\u662f\u63a8\u52a8\u6211\u8fdb\u5165\u534a\u5bfc\u4f53\u884c\u4e1a\u7684\u52a8\u529b\u2014\u2014\u4f60\u6fc0\u52b1\u6211\u628a\u4e00\u4e2a\u7231\u597d/\u5174\u8da3\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u884c\u4e1a\u7684\u804c\u4e1a\uff0c\u6211\u5e0c\u671b\u8fd9\u4e2a\u884c\u4e1a\u4e5f\u80fd\u8ba9\u6211\u7740\u8ff7\u3002\u6211&#39\uff1b\u5373\u5c06\u5230\u6765\u7684\u590f\u5929\uff0c\u6211\u5c06\u5f00\u59cb\u5728AMD\u5de5\u4f5c\uff0c\u800c\u9ad8\u4e2d\u65f6\u4ee3\u7684\u6211\uff0c\u4e3a\u4e86\u8ba9\u81ea\u5df1\u5fd9\u4e2a\u4e0d\u505c\uff0c\u4f1a\u6254\u6389\u9e3d\u5b50\uff0c\u7ffb\u4feeOptiplexes\uff0c\u4e0d\u4f1a\u8003\u8651\u8fd9\u79cd\u53ef\u80fd\u6027\u3002\u611f\u8c22\u60a8\u591a\u5e74\u6765\u63d0\u4f9b\u7684\u9ad8\u8d28\u91cf\u5185\u5bb9\uff0c\u5c24\u5176\u662f\u91c7\u8bbf\u3002\u6211&#39\uff1bI\u2019\u6211\u76f8\u4fe1\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u4eba\u662f\u4f60\u7528\u8fd9\u79cd\u65b9\u5f0f\u542f\u53d1\u7684\u3002\u5c71\u59c6\uff1a\u56de\u7b54", "note_en": "I\u2019ll be the first to admit, I had no history with AnandTech before I joined. It was by sheer chance, meeting one of the writers at an overclocking event, that led me to first become a reader, then a writer, to what has become my career in journalism. If you\u2019re new to AnandTech then welcome! It\u2019s been my home for over a decade, where we\u2019ve always had the goal of pushing the boundaries for all things technical and engineering-related. \u00a0For all the old hands - I know many of you work at the companies we report on around the industry, and we\u2019ve been forever glad for your continued support and interactions. Long may it continue, especially in an industry that is slowly consolidating around a few key players, both in technical and publishing \u2013 for as long as the audience demands it, AnandTech will aim to provide.\n  Personally, I was always into computers, but it was overclocking that got me into hardware. Not just getting more frames in my games, but actual competitive overclocking, trying to get the best scores in the world. People liken it to the Formula 1 or car tuning, when in reality it feels like drag racing \u2013 8 hours of preparation for a 10 seconds quarter mile. Studying chemistry at the time, on the surface there seemed to be not much more than a little overlap, except for a desire to learn more about what I was doing, the why, and how it all worked. That oblivious-yet-determined manner led to Rajinder Gill, senior motherboard editor at the time, suggesting that Anand bring me on as a freelancer back in 2010. Initially\u00a0with news, I transitioned into Rajinder\u2019s role rather quickly after he left,\u00a0and starting from the Sandy Bridge launch in early 2011, I spent the next five years reviewing motherboards at AnandTech as my day job after graduating my PhD. I still look back on my first proper motherboard review, the  ASRock P67 Extreme4, with rose-tinted spectacles. It was a great board for the time, and I still have it in my collection.\n  That\u2019s what got me to AnandTech, and after 11 years I feel the need to change, so I have decided to take up a new position in the industry. When  Anand left in 2014, after 18 years at the helm, I was still quite green in my role and didn\u2019t really take his words to heart at the time. Looking back at them today, I see a lot of parallels, even though I\u2019ve never sat in that senior role. Since Anand left, I was promoted to Senior CPU Editor, and Ryan Smith has taken the Editor-in-Chief\u00a0role with grace and poise \u2013 he\u2019s consistently talked me down from a ledge when this industry has piled on, and all I\u2019ve wanted to do is lash out! After Anand left, it was Ryan who brought me on as a full-time employee, and helped navigate AnandTech through two acquisitions, to where the brand currently sits today with Future. Despite being (roughly) the same age, Ryan has been a mentor and a director for a lot of the content I\u2019ve written, for which I\u2019m very thankful. I hope he knows how much it has meant over the years.\n  I\u2019ve really enjoyed  working at AnandTech. I love getting my teeth into the latest technical details, and getting advance briefings from the researchers never ceases to be a great pleasure of mine. It doesn\u2019t matter whether that\u2019s for an upcoming product, attending technical IEEE conferences, or for Hot Chips talk, or seeing inside the secret R&amp;D room at Computex. In a lot of ways, my academic experience has overlapped with my coverage that I would never have predicted - we&#39;re on the cusp of finding out how we need More Than Moore&#39;s Law in the modern era. My travel in 2019 topped 200,000 miles, which doesn\u2019t really bother me in the slightest, as I\u2019ve been able to meet and discuss with key industry movers and shakers. A crowning moment was  talking AMD into making its 64-core Threadripper into a better price the evening before the announcement. Or biting one of Intel\u2019s 10nm wafers. Being able to travel around and visit companies has shown me\u00a0just how many amazing people and stories there are in our industry, and it\u2019s a shame there aren\u2019t enough hours in the day to focus on them all, as I know a lot of you would want to hear about them. I hope I&#39;ve also been able to bring a little bit of humor and fun to my content too.\n  If there\u2019s one thing that has remained through all that time, it\u2019s the dedication of AnandTech\u2019s writers to provide as many detailed technical write-ups as we can. Over the years I\u2019ve worked with some incredible talent, especially Andrei, and I\u2019ve managed individuals that I\u2019ve seen improve leaps and bounds, especially Gavin who now leads our motherboard coverage. Big shoutouts go to the rest of the team over the years: Ryan, Brett, Ganesh, Billy, Kristian, Tracy, Anton, Joe, Matt, Matt, Josh, Nate, Rajinder, Gary, Virginia, and Howard. You\u2019ve all meant a lot to me in so many different ways. Then there\u2019s also the audience, who have always provided copious feedback, either here, on social media, or through our email conversations. Please don\u2019t stop giving all of us constructive criticism on how to do our jobs better, regardless of where we are or who we work for.\n  As for me, I\u2019m finding new ventures: a mixture of behind-the-scenes and public-facing opportunities, as well as continued consulting, but still within this tech industry that we love to analyze. W e&#39;re on the cusp of finding out how we need More Than Moore&#39;s Law in the modern era.\u00a0I\u2019ll still be that loud voice on  Twitter, critiquing every financial disclosure and presentation, and if you\u2019re interested in what I\u2019m doing next, then I\u2019m likely to announce my future roles over there or on  LinkedIn\u00a0in short course. While today is my final day at AnandTech, don&#39;t be surprised if my name pops up again here over the next week or two, as\u00a0I\u2019ve prepared some content in advance, including our AMD Rembrandt review and an interview with Raja Koduri. Stay tuned for those.\n  To all of the readers over the years, thank you so much for this opportunity. I couldn\u2019t have done it without you. I hope that you\u2019ll continue to give all the AnandTech writers the support you have shown me.\n  POST A COMMENT      It&#39;s been a pleasure working with Ian, and I&#39;m sad to lose him. But he&#39;s accomplished more than a few great things over the years, and so I am looking forward to seeing what he&#39;s able to do next. Best of luck, Ian!  As for AnandTech (since someone is bound to ask), we will be hiring a new managing editor to replace Ian, and to continue to deliver the same great insights on CPUs and other technology as before. It had admittedly been my hope to have someone lined up in time for Ian&#39;s departure, but Ian is understandably a hard act to follow. None the less, if you have experience in the field and are looking for a chance to move up in the tech journalism industry, please drop me a line; we&#39;re hiring.\n  Reply\n    @Ian , &#34;...  didn\u2019t really take his [Anad&#39;s] words to heart at the time.&#34; What were Anand&#39;s words?  Reply\n  I think he must be referring to words in Anand&#39;s &#39;farewell&#39; message, linked earlier in the same sentence.  Reply\n    Best wishes. But, you&#39;re the reason I come here and read articles. Come to think of it, your articles are the only ones I read. So, I guess it&#39;s goodbye to Ananatech for me as well.  Reply\n  This is a huge loss to the tech industry journalism. I&#39;m not aware of other places that some mention here but this site has been the primary place for my tech understanding deep dive and always used to refer this place only when referring. It&#39;s really unfortunate to see so many of the staff leave over the years. Now Ian as well...loss at words.  Thanks to Ian and all the AT staff. I hope the site continues it&#39;s deep dive tech analysis. To Ian, I know most of us are aware of your YT channel, I thought that was the sign to expect things go in a downside. Also the AT reviews too dropped a lot. It&#39;s those YouTube and other places which have these pathetic gaming only BS and no tech talk at all.  I wish you all the best man. And to AT team as well.  Reply\n    Thank you for all the years of time and effort Ian! You have truly been one of the best writers here and absolutely one to carry the torch from Anand himself.   Reply\n  Hi Ian,  I&#39;ve never posted before, but AnandTech and specifically your content was a driving force in pushing me into the semiconductor industry - you inspired me to turn a hobby / fascination into a career in an industry that I will hopefully find just as captivating. I&#39;ll be starting at AMD the coming summer, something the high school me, who dumpster dove and refurbished Optiplexes to keep myself busy, would not have considered a possibility. Thank you for the years of quality content, especially the interviews. I&#39;m sure there are many others you have inspired in this way.  Sam A  Reply", "posttime": "2022-02-19 03:51:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "cutress,\u884c\u4e1a", "title": "Ian Cutress\u79bb\u5f00Anand Tech", "title_en": "Ian Cutress Leaves Anandtech", "transed": 1, "url": "https://www.anandtech.com/show/17270/going-from-there-to-here-and-beyond", "via": "", "real_tags": ["cutress", "\u884c\u4e1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074008, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57282022\u5e742\u670810\u65e5\u7684Zoom\u4f1a\u8bae\u4e0a\uff0c\u4eba\u4eec\u7ecf\u5e38\u5728\u8f6e\u5230\u6211\u4e4b\u524d\u8c08\u8bbaApple-1\u3002\u6bd5\u7adf\uff0c\u4e5f\u662f6502\u7535\u8111\u8ba9\u82f9\u679c\u516c\u53f8\u6210\u4e3a\u53ef\u80fd\u3002\u5728\u63a5\u8fd1\u5c3e\u58f0\u7684\u65f6\u5019\uff0c\u8fd9\u4e5f\u662f\u5173\u4e8eNFT\u768430\u591a\u5206\u949f\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u6ca1\u6709\u4efb\u4f55\u8d21\u732e\u3002\u603b\u4e4b\uff0c\u6709\u4e9b\u7535\u8111\u7684\u4ef7\u503c\u662f6502\u7684\u53e6\u4e00\u4e2a\u6210\u529f\u4e4b\u5904\u3002\u5728\u6211\u770b\u6765\uff0c\u4fc3\u4f7f\u4eba\u4eec\u62e5\u6709\u65e7\u7535\u8111\u7684\u539f\u56e0\u6709\u4e09\u4e2a\uff0c\u6216\u8005\u8bf4\u662f\u591a\u79cd\u591a\u6837\u3002\u4e00\u4e9b\u4eba\u53ea\u662f\u559c\u6b22\u65e7\u6280\u672f\u5e76\u4f7f\u7528\u5b83\uff0c\u53e6\u4e00\u4e9b\u4eba\u559c\u6b22\u5b83\u7684\u5386\u53f2\u610f\u4e49\uff0c\u6700\u540e\u4e00\u7ec4\u4eba\u6b63\u5728\u5bfb\u627e\u6295\u8d44\u5bf9\u8c61\u3002\u4e00\u65e6\u8d85\u8fc7\u67d0\u4e2a\u503c\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u559c\u6b22\u5b83\u3002\u4f46\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u7a00\u6709\u548c\u4ee4\u4eba\u5411\u5f80\u7684\u7269\u54c1\u7684\u5904\u7406\u65b9\u5f0f\u3002\u4ef7\u683c\u6e90\u4e8e\u62e5\u6709\u7269\u54c1\u7684\u6b32\u671b\u3002\u4f8b\u5982\uff0c\u4e00\u8f86\u7279\u522b\u7684\u65e7\u8f66\u7a81\u7136\u4ef7\u503c\u8d85\u8fc7100\u4e07\u7f8e\u5143\uff0c\u56e0\u4e3a\u8bb8\u591a\u4eba\u60f3\u62e5\u6709\u5b83\uff0c\u5e76\u613f\u610f\u51fa\u4ef7\u66f4\u9ad8\u3002\u5b83&#39\uff1b\u8fd9\u548c\u65e7\u7535\u8111\u6ca1\u4ec0\u4e48\u4e0d\u540c\u3002\u8d8a\u53d7\u6b22\u8fce\u3001\u8d8a\u7a00\u6709\uff0c\u4ef7\u683c\u4e0a\u6da8\u7684\u901f\u5ea6\u5c31\u8d8a\u5feb\u3002\u4f8b\u5982\uff0c\u51e0\u5e74\u524d\uff0c\u4e00\u6b3eApple Lisa 1\u7684\u552e\u4ef7\u4ec5\u4e3a\u4eca\u5929\u7684\u4e94\u5206\u4e4b\u4e00#39\uff1b\u8fd9\u662f\u4ef7\u683c\u3002\u6d3b\u52a8\u524d\u6211\u548c\u8389\u838e\u00b7\u6d1b\u666e\u8c08\u8fc7\uff0c\u5979\u544a\u8bc9\u6211\u4e00\u5b9a\u8981\u8054\u7cfb\u4e16\u754c\u8ba1\u7b97\u673a\u65e5\u7684\u7ec4\u7ec7\u8005\u3002\u8389\u838e\u5206\u4eab\u4e86\u5979\u5982\u4f55\u83b7\u5f97Apple-1\u7684\u7cbe\u5f69\u6545\u4e8b\u3002\u4e00\u4e2a\u4e0d\u53ef\u601d\u8bae\u7684\u6545\u4e8b\uff0c\u4e00\u4f4d\u4e0d\u53ef\u601d\u8bae\u7684\u8001\u5e08\u3002Jim Scherrer\u81ea2018\u5e74\u4ee5\u6765\u4e00\u76f4\u8bd5\u56fe\u8054\u7cfb\u6211\u3002\u5bf9\u4e0d\u8d77\uff0c\u6211\u4e00\u5b9a\u9519\u8fc7\u4e86\u3002\u7ec4\u7ec7\u8005\u95ee\u4e86\u6211\u597d\u51e0\u6b21\uff0c\u6240\u4ee5\u6211\u5728Zoom\u4f1a\u8bae\u524d\u4e00\u5468\u540c\u610f\u4e86\u3002\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u8003\u8651\u5728\u4f1a\u8bae\u4e0a\u4e0a\u7f51\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u76f4\u63a5\u7684\u53cd\u5e94\u603b\u662f\u559c\u5fe7\u53c2\u534a\u3002\u8fd9\u4ec5\u4ec5\u662f\u56e0\u4e3aApple-1\u7535\u8111\u7684\u4ef7\u503c\u3002\u5b83\u4f1a\u7acb\u5373\u5f15\u8d77\u4eba\u4eec\u7684\u60c5\u7eea\u3002\u7136\u800c\uff0c\u6709\u4eba\u5f3a\u70c8\u8981\u6c42\u6211\u8c08\u8c08\u8fd9\u4ef6\u4e8b\u3002\u6211\u4eec\u6700\u540e\u8ba8\u8bba\u4e8630\u591a\u5206\u949f\u7684NFT\u3002\u8fd9\u4e2a\u8bdd\u9898\u81f3\u5c11\u4e5f\u540c\u6837\u611f\u4eba\uff0c\u5728\u8fd9\u91cc\u6211\u6ca1\u6709\u4efb\u4f55\u8d21\u732e\u3002\u5728\u6d3b\u52a8\u671f\u95f4\uff0c\u524d\u9762\u7684\u8bb8\u591a\u53d1\u8a00\u8005\u90fd\u63d0\u5230\u4e86Apple-1\u6216\u5c06\u5176\u4f5c\u4e3a\u4e3b\u9898\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u6211\u7684\u8d21\u732e\u4e5f\u662f\u6070\u5f53\u7684\u3002\u6bd5\u7adf\uff0cApple-1\u7684\u6210\u529f\u662f6502\u7684\u7ed3\u679c\uff0c\u4ece\u5386\u53f2\u7684\u89d2\u5ea6\u6765\u770b\uff0cApple-1\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u91cd\u8981\u3002\u6211\u5c0a\u91cd\u82f9\u679c\u516c\u53f8&#39\uff1bs\u5de5\u4f5c\u548c\u4ea7\u54c1\uff0c\u6211\u81ea\u5df1\u5de5\u4f5c\u548c\u4f7f\u7528Windows\u548cAndroid\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5462\uff1f\u6211\u672c\u6765\u5e0c\u671b\u96f7\u00b7\u970d\u5c14\u7279\u4e5f\u80fd\u5728\u6f14\u8bb2\u4e2d\u53d1\u8a00\uff0c\u56e0\u4e3a\u8fd9\u6b21\u9707\u52a8\u3002\u6211\u548c\u4ed6\u6709\u5f88\u597d\u7684\u8054\u7cfb\u3002\u4ed6\u7684\u6545\u4e8b\u5f15\u4eba\u5165\u80dc\u3002Apple-1\u7684\u5386\u53f2\u610f\u4e49\u662f\u5de8\u5927\u7684\u3002\u73b0\u5728\u5728Mac\u6216iPhone\u4e0a\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u7684\u4eba\u90fd\u5e94\u8be5\u77e5\u9053\uff0c\u6c83\u5179\u53ea\u662f\u5728Apple-1\u53d6\u5f97\u4e86\u5fae\u5c0f\u7684\u6210\u529f\u540e\uff0c\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u9f13\u52b1\u4ed6\u8fd9\u4e48\u505a\uff0c\u624d\u5236\u9020\u4e86Apple II\u3002\u6ca1\u6709\u82f9\u679c1=\u6ca1\u6709\u82f9\u679c\u516c\u53f8\u3002\u6c83\u5179\u4ecd\u5728\u60e0\u666e\u5de5\u4f5c\uff0c\u4f60\u53ea\u80fd\u5e7b\u60f3\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af&#39\uff1b\u5c06\u6765\u6211\u5bf9Apple-1\u8d8a\u6765\u8d8a\u7740\u8ff7\uff0c\u4ece\u65e9\u671f\u5f00\u59cb\uff0c\u6211\u4e0e\u975e\u5e38\u6709\u8da3\u7684\u4eba\u7684\u63a5\u89e6\u662f\u65e0\u4ef7\u4e4b\u5b9d\u3002\u5173\u4e8eApple-1\u662f\u5426\u6709\u7092\u4f5c\uff1f\u662f\u7684\uff0c\u5f53\u7136\u3002\u4e0e\u5176\u4ed6\u82f9\u679c\u4ea7\u54c1\u548c\u82f9\u679c\u516c\u53f8\u4e00\u6837\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8fd9\u53f0\u7535\u8111\u6709\u4e00\u5b9a\u7684\u4ef7\u503c\u662f\u65e0\u6cd5\u5fcd\u53d7\u7684\u3002\u5728\u5f88\u591a\u4eba\u770b\u6765\uff0c\u4e00\u65e6\u67d0\u4e2a\u4e1c\u897f\u8d85\u8fc7\u67d0\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u5c31\u4f1a\u88ab\u5938\u5927\u3002\u4f46\u4ef7\u683c\u5e76\u4e0d\u662f\u4e00\u79cd\u53d1\u660e\u6216\u5e7b\u60f3\u3002\u65e0\u8bba\u662f\u82f9\u679c1\u3001\u7ecf\u5178\u6c7d\u8f66\u8fd8\u662f\u6cb9\u753b\uff0c\u90fd\u6709\u5c11\u91cf\u4ee4\u4eba\u5411\u5f80\u7684\u7269\u54c1\u3002\u4eba\u4eec\u8d8a\u60f3\u62e5\u6709\u8fd9\u4e9b\u7269\u54c1\uff0c\u4ed6\u4eec\u7684\u51fa\u4ef7\u5c31\u8d8a\u9ad8\uff0c\u56e0\u6b64\u4ef7\u503c\u5c31\u8d8a\u786e\u5b9a\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u6570\u4ebf\u6216\u51e0\u767e\u4e07\u3002Apple-1\u4e0d\u662f\u8fd9\u91cc\u552f\u4e00\u7684\u65e7\u7535\u8111\uff0c\u53ea\u662f\u76ee\u524d\u6700\u6709\u4ef7\u503c\u7684\u3002\u6c83\u5179\u4e0d\u592a\u53ef\u80fd\u6210\u4e3a\u5e8f\u5217\u53f7\u7684\u59cb\u4f5c\u4fd1\u8005\u3002\u4f46\u6211\u4e5f\u6536\u5230\u4e86\u4ed6\u7684\u5199\u4f5c\u6837\u672c\u3002\u6211\u731c\u662fDaniel Kottke\u6216\u5b57\u8282\u5546\u5e97\u7684\u5458\u5de5\u3002\u5b83&#39\uff1b\u4e0d\u662f\u6c83\u5179&#39\uff1b\u8fd9\u662f\u4e00\u79cd\u5206\u7c7b\u7684\u98ce\u683c\u3002\u6c83\u5179\u8fd8\u8868\u793a\uff0c\u8fd9\u4e0d\u662f&#39\uff1b\u4ed6\u548c\u4ed6\u7684\u7b14\u8ff9\u5b8c\u5168\u4e0d\u540c\u3002\u6211\u548c\u5f88\u591a\u4eba\u90fd\u6709\u8fc7\u63a5\u89e6\uff0c\u6211\u60f3\u5c3d\u4e00\u5207\u529e\u6cd5\u6765\u5f04\u6e05\u771f\u76f8\u3002\u4f8b\u5982\uff0c\u6bd4\u5c14\u00b7\u8d39\u5c14\u5357\u5fb7\u65af\u3001\u514b\u91cc\u65af\u00b7\u57c3\u65af\u76ae\u8bfa\u8428\u548c\u4fdd\u7f57\u00b7\u7279\u96f7\u5c14\u3002\u6cd5\u533b\u5b66\u5206\u6790\u5e94\u8be5\u65e9\u70b9\u8fdb\u884c\u3002\u7136\u800c\uff0c\u8fd9\u662f\u76f8\u5f53\u6602\u8d35\u7684\u3002\u6b64\u5916\uff0c\u5c06\u4e24\u53f0Apple-1\u4ece\u5fb7\u56fd\u5e26\u5230\u7f8e\u56fd\uff0c\u518d\u52a0\u4e0a\u4e34\u65f6\u6d77\u5173\u51fa\u53e3\u7684\u6587\u4e66\u5de5\u4f5c\uff0c\u662f\u4e00\u9879\u6210\u672c\u9ad8\u6602\u3001\u98ce\u9669\u5de8\u5927\u7684\u5192\u9669\u3002PSA\u516c\u53f8\u786e\u5b9e\u63a5\u53d7\u4e86\u6211\u7684\u7b14\u8ff9\u6837\u672c\u548c\u63d0\u793a\u3002\u7136\u800c\uff0c\u4e13\u5bb6\u4eec\u81ea\u5df1\u53ea\u4f7f\u7528\u4ed6\u4eec\u6863\u6848\u4e2d\u7684\u6837\u672c\u3002\u81f3\u5c11\u4fa6\u63a2\u5de5\u4f5c\u5f88\u6709\u8da3\u3002\u4f8b\u5982\uff0c\u5e15\u6d1b\u963f\u5c14\u6258\u7684\u4e39\u5c3c\u5c14\u00b7\u79d1\u7279\u514b\uff08Daniel Kottke\uff09\u5411\u6211\u5c55\u793a\u4e86\u6765\u81ea\u5370\u5ea6\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\uff08Steve Jobs\uff09\u7684\u4fe1\u4ef6\u548c\u660e\u4fe1\u7247\u3002\u4f60\u6ca1\u6709&#39\uff1bI don\u2019\u6211\u4e0d\u662f\u6bcf\u5929\u624b\u91cc\u90fd\u62ff\u7740\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u5b83&#39\uff1b\u4e0d\u7ba1\u600e\u6837\uff0c\u62dc\u8bbf\u4e39\u5c3c\u5c14\u603b\u662f\u4e00\u4ef6\u6109\u5feb\u7684\u4e8b\u3002\u5e0c\u671b\u6211\u4eec&#39\uff1b\u6211\u4f1a\u56de\u5230\u5df4\u514b&#39\uff1b\u4ed6\u5f88\u5feb\u5c31\u8981\u79bb\u5f00\u4f0d\u5fb7\u8d5b\u5fb7\uff0c\u548c\u6770\u7c73\u65af\u5171\u8fdb\u665a\u9910\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6770\u7c73\u65af\u00b7\u9ea6\u514b\u5c3c\u6587\u542c\u5230\u8fd9\u4e2a\u6d88\u606f\u975e\u5e38\u9ad8\u5174\u3002\u4ed6\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u82f9\u679c-1\uff0c\u4e0a\u9762\u6709\u6c83\u5179\u7684\u7b7e\u540d\u548c\u4e54\u5e03\u65af\u7684\u7b14\u8ff9\u3002\u795d\u8d3a\u8fd9\u4e48\u591a\u6709\u8da3\u7684\u4eba\u6765\u5230\u4e39\u5c3c\u5c14&#39\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\u3002\u5728\u4e00\u6b21\u8bbf\u95ee\u4e2d\uff0c\u6211\u78b0\u5de7\u9047\u5230\u4e86\u7ea6\u7ff0\u00b7\u5fb7\u96f7\u73c0\uff08\u53c8\u540dCrunch\u8239\u957f\uff09\u3002\u8fd9\u4e0e\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\uff08Steve Jobs\uff09\u7684\u98ce\u683c\u975e\u5e38\u76f8\u4f3c\uff0c\u4ed6\u60f3\u8981\u63a7\u5236\u82f9\u679c\uff0c\u5e76\u5728\u4ea4\u4ed8\u7ed9\u5b57\u8282\u5546\u5e97\u65f6\u5bf9\u82f9\u679c1\u8fdb\u884c\u7f16\u53f7\u3002\u8fd9\u5bf9\u6211\u4e2a\u4eba\u6765\u8bf4\u5f88\u91cd\u8981\uff0c\u503c\u5f97\u627e\u51fa\u8fd9\u4e9b\u6570\u5b57\u7684\u6765\u6e90\u3002", "note_en": "During the Zoom meeting on Feb 10, 2022 it was often talked about the Apple-1 before it was my turn. After all, it is also the 6502 computer that made the Apple company possible. Towards the end, it was also about NFTs for over 30 minutes. Here I had nothing to contribute. \t\t\t\t\t\t\tAnyway, the value of some computers is another success of the 6502.  \t\t\t\t\t\t\tFrom my point of view, there are three reasons or a mix of all that motivates people to own old computers. Some simply like the old technology and working with it, others love the historical significance and the last group is looking for an investment object. \t\t\t\t\t\t\tAs soon as a certain value is exceeded, not everyone likes it. But that&#39;s the way it is with rare and desirable objects. The prices arise from the desire to own the object. \t\t\t\t\t\t\tFor example, a special old car is suddenly worth over a million dollars because many want to own it and are willing to bid more for it. It&#39;s no different with old computers. The more desirable and rare, the faster the prices rise. \t\t\t\t\t\t\tAn Apple Lisa 1, for example, was available a few years ago for a fifth of today&#39;s price.  \t\t\t\t\t\t\tI spoke with Liza Loop before the event and she told me to be sure to contact the World Computer Day organizers. Liza shared her fantastic story of how she got the Apple-1. An incredible story and an incredible teacher.\t\t\t\t\t\t\tJim Scherrer had supposedly been trying to contact me since 2018. Sorry, I must have missed that. The organizers asked me several times, and so I agreed a week before the Zoom meeting.  \t\t\t\t\t\t\tFor a long time I thought about going online with this in the meeting because there are always mixed reactions directly. It is simply because of the value of the Apple-1 computer. It immediately arouses emotions. \t\t\t\t\t\t\tHowever, I was strongly asked to talk about it. We ended up talking about NFTs for 30+ minutes. The topic is at least as emotional and here I had nothing to contribute.  \t\t\t\t\t\t\tMany of the previous speakers during the event mentioned Apple-1 or had it as a topic. In that respect, my contribution was also fitting. \t\t\t\t\t\t\tAfter all, the success of the Apple-1 is a result of the 6502, and the Apple-1 is so significantly important to me from a historical perspective. \t\t\t\t\t\t\tI myself respect Apple&#39;s work and products, work and use Windows and Android myself. And why not?  \t\t\t\t\t\t\tI would have liked Ray Holt to be among the speakers because of the Jolt. I have a very nice contact with him. His stories are fascinating. \t\t\t\t\t\t\tThe historical significance of the Apple-1 is gigantic. Anyone reading this right now on a Mac or an iPhone should be aware that Woz only built the Apple II because Steve Jobs encouraged him to do so after the mini-success of the Apple-1. No Apple-1 = no Apple company.\t\t\t\t\t\t\tWoz would still be working at HP and you could only fantasize about Steve Jobs&#39; future.  \t\t\t\t\t\t\tI became more and more fascinated by the Apple-1 and the contacts with really interesting people from the early days was and is priceless.\t\t\t\t\t\t\tIs there a hype around the Apple-1? Yes, definitely. As with other Apple products and the Apple company.   \t\t\t\t\t\t\tFor some it is just unbearable that this computer has a certain value. This is always the case, as soon as something exceeds a certain value, that seems exaggerated to many. \t\t\t\t\t\t\tBut the prices are not an invention or fantasy. There is a small amount of many desirable objects, whether Apple-1, classic cars or paintings. \t\t\t\t\t\t\tThe more people want to own these objects, the more often they outbid each other and so the value is determined. This can mean a few hundred or a few million. The Apple-1 is not the only old computer here, just currently the most valuable.\t\t\t\t\t\t\tWoz as the originator of the serial number was unlikely. But I also had writing samples from him. I guessed they were from Daniel Kottke or a Byte Shop employee. \t\t\t\t\t\t\t\t\t\t\t\t\t\tIt&#39;s not Woz&#39;s style to catalog anything. Woz also said it wasn&#39;t him and his handwriting is completely different.\t\t\t\t\t\t\tI had contact with so many other people and tried everything to get to the bottom of it. For example, Bill Fernandez, Chris Espinosa and Paul Terrell.   \t\t\t\t\t\t\tThe forensic analysis should have been carried out earlier. However, it is quite pricy. Also, taking two Apple-1s from Germany to the USA and picking them up, plus the paperwork for a temporary customs export is a costly and risky venture.\t\t\t\t\t\t\tThe PSA company did accept my handwriting samples and hints. However, the experts themselves only used the samples from their archives.  \t\t\t\t\t\t\tAt least the detective work was fun. \t\t\t\t\t\t\tFor example, Daniel Kottke in Palo Alto showed me letters and a postcard from Steve Jobs in India. You don&#39;t have something like that in your hand every day. \t\t\t\t\t\t\tIt&#39;s always a pleasure to visit Daniel anyway. Hopefully we&#39;ll be going back to Buck&#39;s of Woodside soon and having dinner with Jamis. Jamis MacNiven, by the way, was very happy to hear the news. He now has an Apple-1 with Woz signature and Jobs handwriting. Congratulations! \t\t\t\t\t\t\tSo many interesting people have come to Daniel&#39;s to date. Among others, I happened to meet John Draper (aka Captain Crunch) during a visit.\t\t\t\t\t\t\tIt is very much in the style of Steve Jobs to want control and to number Apple-1s when delivering to the Byte Shop.   \t\t\t\t\t\t\tIt was important to me personally and worth finding out where the numbers came from.", "posttime": "2022-02-19 03:50:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,\u5e8f\u5217\u53f7,riddle", "title": "Apple-1\u5e8f\u5217\u53f7\u4e4b\u8c1c", "title_en": "The solved riddle of the Apple-1 serial number", "transed": 1, "url": "https://www.apple1registry.com/en/serial.html", "via": "", "real_tags": ["apple", "\u5e8f\u5217\u53f7", "riddle"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074007, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u636e\u901a\u5e38\u662f\u6570\u5b57\u4ea7\u54c1\u548c\u670d\u52a1\u7684\u6838\u5fc3\uff0c\u5c24\u5176\u662f\u4e0e\u5728\u7ebf\u5e7f\u544a\u76f8\u5173\u7684\u6570\u636e\u3002\u8fd9\u4f7f\u5f97\u6570\u636e\u4fdd\u62a4\u548c\u9690\u79c1\u6210\u4e3a\u4e00\u4e2a\u4e3b\u8981\u7684\u653f\u7b56\u95ee\u9898\u3002\u5728\u7f51\u4e0a\u51b2\u6d6a\u65f6\uff0c\u6d88\u8d39\u8005\u7559\u4e0b\u7684\u6570\u5b57\u75d5\u8ff9\u53ef\u7528\u4e8e\u5efa\u7acb\u7528\u6237\u6863\u6848\u548c\u63a8\u65ad\u504f\u597d\u3002\u6211\u4eec\u91cf\u5316\u4e86Facebook\u80fd\u591f\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u8ddf\u8e2a\u81ea\u5df1\u5e73\u53f0\u4e4b\u5916\u7684\u7f51\u7edc\u884c\u4e3a\u3002\u653e\u7f6e\u5728\u7b2c\u4e09\u65b9\u7f51\u7ad9\u4e0a\u7684\u8ba2\u5a5a\u6309\u94ae\u7f51\u7edc\u53ef\u4ee5\u8ba9Facebook\u5728\u7528\u6237\u6d4f\u89c8\u7f51\u9875\u65f6\u8ddf\u8e2a\u4ed6\u4eec\u3002\u8ffd\u8e2a\u6838\u5fc3\u5e73\u53f0\u4e4b\u5916\u7684\u7528\u6237\u53ef\u4ee5\u8ba9Facebook\u5efa\u7acb\u5f71\u5b50\u6863\u6848\u3002\u5728\u4e00\u4e2a\u5177\u6709\u4ee3\u8868\u6027\u7684\u7f8e\u56fd\u4e92\u8054\u7f51\u7528\u6237\u6837\u672c\u4e2d\uff0c52%\u7684\u8bbf\u95ee\u7f51\u7ad9\uff08\u5360\u6d4f\u89c8\u65f6\u95f4\u768440%\uff09\u4f7f\u7528\u4e86Facebook\u7684\u8ddf\u8e2a\u6280\u672f\u3002Facebook\u7528\u6237\u548c\u975e\u7528\u6237\u4e4b\u95f4\u7684\u5fae\u5c0f\u5dee\u5f02\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u4e0d\u540c\u7684\u7528\u6237\u6d3b\u52a8\u9020\u6210\u7684\u3002Facebook\u5728\u9690\u79c1\u654f\u611f\u9886\u57df\u548c\u7528\u6237\u7fa4\u4f53\u4e2d\u53ef\u80fd\u8fdb\u884c\u7684\u5f71\u5b50\u5206\u6790\u7a0b\u5ea6\u76f8\u4f3c\uff0c\u8bb0\u5f55\u4e86\u4e0d\u52a0\u533a\u5206\u7684\u8ddf\u8e2a\u7684\u53ef\u80fd\u6027\u3002", "note_en": "Data is often at the core of digital products and services, especially when related to online advertising. This has made data protection and privacy a major policy concern. When surfing the web, consumers leave digital traces that can be used to build user profiles and infer preferences. We quantify the extent to which Facebook can track web behavior outside of their own platform. The network of engagement buttons, placed on third-party websites, lets Facebook follow users as they browse the web. Tracking users outside its core platform enables Facebook to build shadow profiles. For a representative sample of US internet users, 52 percent of websites visited, accounting for 40 percent of browsing time, employ Facebook\u2019s tracking technology. Small differences between Facebook users and non-users are largely explained by differing user activity. The extent of shadow profiling Facebook may engage in is similar on privacy-sensitive domains and across user demographics, documenting the possibility for indiscriminate tracking.", "posttime": "2022-02-19 03:50:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u5f71\u5b50,shadow", "title": "Facebook\u5f71\u5b50\u6863\u6848[pdf]", "title_en": "Facebook Shadow Profiles [pdf]", "transed": 1, "url": "https://www.cesifo.org/en/publikationen/2022/working-paper/facebook-shadow-profiles", "via": "", "real_tags": ["facebook", "\u5f71\u5b50", "shadow"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074006, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\uff0c\u5728\u4efb\u4f55\u6709\u7528\u7684\u5bc6\u7801\u7cfb\u7edf\u4e2d\u200b    \u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8bbf\u95ee\u5bc6\u94a5k\u3002\u5177\u6709\u8db3\u591f\u5f71\u54cd\u529b\u7684\u5bf9\u624b\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6b64\u4eba\u65bd\u52a0\u5f71\u54cd\u7ed5\u8fc7\u5e38\u89c4\u653b\u51fb\u7684\u8ba1\u7b97\u6210\u672c\u3002\n\u8fd9\u79cd\u6280\u672f\u6709\u65f6\u88ab\u79f0\u4e3a\u6a61\u76ae\u8f6f\u7ba1\u5bc6\u7801\u5206\u6790\uff0c\u5b83\u7ed9\u4e86\u5bf9\u624b\u4e00\u4e9b\u4e25\u8083\u7684\u521b\u4f5c\u81ea\u7531\u3002\u5bc6\u7801\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u73b0\u5728\u4e0d\u4f9d\u8d56\u4e8e\u6570\u5b66\u9677\u95e8\u51fd\u6570\u7684\u5047\u5b9a\u96be\u5ea6\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u67d0\u4e9b\u4eba\u5bf9\u8eab\u4f53\u6216\u5fc3\u7406\u66b4\u529b\u7684\u5bb9\u5fcd\u5ea6\u3002\u5c0f\u5077\u77e5\u9053\u7528\u67aa\u6253\u5f00\u4fdd\u9669\u7bb1\u6bd4\u7528\u94bb\u5934\u5feb\u5f97\u591a\u3002\u654c\u5bf9\u653f\u5e9c\u540c\u6837\u4f1a\u4f7f\u7528\u9177\u5211\u548c\u76d1\u7981\u800c\u4e0d\u662f\u8ba1\u7b97\u80fd\u529b\u6765\u83b7\u53d6\u4fe1\u606f\u3002\n\u8bb8\u591a\u56fd\u5bb6\u90fd\u6709\u5173\u952e\u62ab\u9732\u7acb\u6cd5\u3002\u5728\u82f1\u56fd\uff0cRIPA\u9996\u6b21\u88ab\u7528\u6765\u5bf9\u4ed8\u52a8\u7269\u6743\u5229\u6d3b\u52a8\u4eba\u58eb\uff0c\u4ee5\u89e3\u9501\u5728\u7a81\u88ad\u4ed6\u4eec\u5bb6\u65f6\u67e5\u83b7\u7684\u673a\u5668\u4e0a\u53d1\u73b0\u7684\u6570\u636e\u3002\u62d2\u7edd\u4ea4\u51fa\u5173\u952e\u6750\u6599\u7684\u5904\u7f5a\u6700\u9ad8\u53ef\u8fbe\u4e24\u5e74\u76d1\u7981\u3002\n\u5047\u8bbe\u7231\u4e3d\u4e1d\u6709\u4e00\u4e2a\u5bc6\u7801\u7cfb\u7edfC k CkC k\u200b    \u5176\u5b89\u5168\u5c5e\u6027\u4f9d\u8d56\u4e8e\u5bc6\u94a5k\u7684\u4fdd\u5bc6\u6027\u3002\u4e3a\u4e86\u9632\u5fa1\u8fd9\u79cd\u5f62\u5f0f\u7684\u653b\u51fb\uff0cAlice\u9700\u8981\u67d0\u79cd\u65b9\u6cd5\u6765\u4fdd\u5bc6\u3002\u5979\u53ef\u4ee5\uff0c\n\u58f0\u79f0k\u4e0d\u4e3a\u4eba\u77e5\u3002\u8fd9\u5305\u62ec\u5b83\u662f\u5426\u4e22\u5931\u6216\u88ab\u9057\u5fd8\u3002\n\u5047\u8bbe\u9a6c\u6d1b\u91cc\u662f\u60f3\u8981k k k\u7684\u5bf9\u624b\uff0c\u5047\u8bbe\u7231\u4e3d\u4e1d\u4e3a\u4e86\u907f\u514d\u66b4\u9732k k\u800c\u63d0\u51fa\u7d22\u8d54X X X X\u3002\u5b9a\u4e49\u6210\u529f\u53ef\u80fd\u5f88\u68d8\u624b\uff0c\u56e0\u4e3a\u9a6c\u6d1b\u91cc\u6700\u7ec8\u4f1a\u51b3\u5b9a\u4e0d\u76f8\u4fe1\u7231\u4e3d\u4e1d\u63d0\u51fa\u7684\u4efb\u4f55\u7d22\u8d54\u3002\u7136\u800c\uff0c\u6211\u4eec\u53ea\u4f1a\u8bf4\uff0c\u5982\u679cMallory\u80fd\u591f\u5c55\u793a\u2217X\\neg X\u2217X\uff0c\u5e76\u56e0\u6b64\u65ad\u8a00Alice\u80fd\u591f\u8bbf\u95eek\uff0c\u5e76\u4e14\u80fd\u591f\u63d0\u4f9b\u5b83\uff0c\u90a3\u4e48\u5979\u5c06\u83b7\u80dc\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u8ba9\u7231\u4e3d\u4e1d\u83b7\u80dc\uff0cX\u5fc5\u987b\u662f\u4e0d\u53ef\u4f2a\u9020\u7684\uff0c\u56e0\u6b64\u662f\u4e00\u79cd\u5408\u7406\u7684\u9632\u5fa1\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5982\u679c\u7231\u4e3d\u4e1d\u77e5\u9053\u5e76\u80fd\u8bc1\u660e\u2217X\\neg X\u2217X\uff0c\u800c\u9a6c\u6d1b\u91cc\u5374\u4e0d\u80fd\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u5979\u9057\u6f0f\u4e86\u4e00\u4e9b\u5fc5\u8981\u7684\u4fe1\u606f\u3002Kerckhofs\u539f\u7406\u8ba4\u4e3a\u5bc6\u7801\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u200b    \u6211\u4eec\u5e94\u8be5\u5b8c\u5168\u4f9d\u8d56\u5bc6\u94a5k\u7684\u4fdd\u5bc6\u6027\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u8bc1\u660e-X\\neg X-X\u9700\u8981\u77e5\u9053k\u3002\n\u6211\u4eec\u5c06\u5ffd\u7565\u4e0e\u8fd0\u8425\u5b89\u5168\u6216\u5b9e\u65bd\u76f8\u5173\u7684\u5f31\u70b9\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9a6c\u6d1b\u91cc\u542c\u5230\u7231\u4e3d\u4e1d\u5411\u9c8d\u52c3\u627f\u8ba4\u5979\u5728\u6492\u8c0e\uff0c\u6216\u8005\u5982\u679c\u5979\u5728\u8bb0\u5fc6\u4e2d\u53d1\u73b0\u4e86\u4e00\u6bb5\u660e\u6587\uff0c\u90a3\u4e48\u7231\u4e3d\u4e1d\u5c31\u8f93\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u60c5\u51b5\u5f88\u96be\u7528\u5bc6\u7801\u4fdd\u62a4\uff0c\u56e0\u6b64\u6211\u4eec\u5047\u8bbe\u5728\u8fd9\u65b9\u9762\u662f\u5b89\u5168\u7684\u3002\n\u5bf9Alice\u6765\u8bf4\uff0c\u8fa9\u89e3\u5bf9k\u7684\u65e0\u77e5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\uff0c\u56e0\u4e3a\u5b83\u51e0\u4e4e\u6ca1\u6709\u4e89\u8bae\u7684\u4f59\u5730\uff0c\u800c\u4e14\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f5c\u4e3a\u4e00\u79cd\u7b56\u7565\u4f7f\u7528\u3002\u9a6c\u6d1b\u91cc\u5fc5\u987b\u8bc1\u660ek\u662f\u5df2\u77e5\u7684\uff0c\u5982\u679c\u4e0d\u771f\u6b63\u4ea7\u751f\u5b83\uff0c\u8fd9\u662f\u5f88\u96be\u505a\u5230\u7684\u3002\u4e5f\u8bb8\u94a5\u5319\u5728\u4e00\u4e2a\u4e22\u5931\u7684USB\u8bbe\u5907\u4e0a\uff0c\u6216\u8005\u5199\u5728\u4e00\u5f20\u7eb8\u4e0a\uff0c\u8fd9\u5f20\u7eb8\u548c\u7231\u4e3d\u4e1d\u7684\u623f\u5b50\u4e00\u8d77\u70e7\u6bc1\u4e86\u3002\u7136\u800c\uff0c\u4ec5\u4ec5\u662f\u9057\u5fd8\u5c31\u610f\u5473\u7740\u6570\u636e\u786e\u5b9e\u5b58\u5728\uff0c\u68c0\u7d22\u6570\u636e\u7684\u552f\u4e00\u969c\u788d\u662f\u8bbf\u95ee\u7231\u4e3d\u4e1d\u7684\u8bb0\u5fc6\u3002\u8fd9\u53ef\u80fd\u5e76\u4e0d\u4ee4\u4eba\u6ee1\u610f\u3002\n\u65ad\u8a00\u5bc6\u6587\u4e0d\u5b58\u5728\uff082\uff09\u7b49\u540c\u4e8e\u58f0\u79f0k\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64\u4e0d\u80fd\u516c\u5f00\u3002\u53ef\u4fe1\u6e90\u4e8e\u5bc6\u6587\u4e0e\u968f\u673a\u566a\u58f0\u65e0\u6cd5\u533a\u5206\u7684\u4e8b\u5b9e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7ed9\u5b9a\u4e00\u4e9b\u6f5c\u5728\u7684\u5bc6\u6587c c\uff0c\u5bf9\u624b\u4e0d\u80fd\u8bf4c c c\u662f\u5747\u5300\u91c7\u6837\u7684\uff0c\u8fd8\u662fc=eK\uff08m\uff09c=eUK\uff08m\uff09c=eK\u200b    \uff08m\uff09\u662f\u5728\u67d0\u4e2a\u5bc6\u94a5kk\u4e0b\u52a0\u5bc6\u7684\u6709\u6548\u6d88\u606fm\u3002\u4e3a\u4e86\u8bc1\u660ec\u4e0d\u662f\u968f\u673a\u566a\u58f0\uff0cMallory\u5fc5\u987b\u751f\u6210kk\u5e76\u8ba1\u7b97m\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53ef\u884c\u7684\u3002\nTrueCrypt\u548cVeraCrypt\u5141\u8bb8\u521b\u5efa\u9690\u85cf\u5377\u548c\u9690\u85cf\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u4e00\u4e2a\u666e\u901a\u7684\u52a0\u5bc6\u5377\u5c06\u5728\u78c1\u76d8\u7684\u672a\u4f7f\u7528\u533a\u57df\u4e2d\u586b\u5145\u968f\u673a\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4e0d\u66b4\u9732\u5176\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\u5c06\u4e00\u4e2a\u9690\u85cf\u5377\u653e\u7f6e\u5728\u90a3\u91cc\u3002\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5f15\u5bfc\u9a71\u52a8\u5668\uff0c\u5176\u6807\u51c6\u5377\u7531\u5bc6\u94a5K1 k_1 k 1\u4fdd\u62a4\u200b    \u8fd8\u6709\u4e00\u4e2a\u88ab\u5bc6\u94a5k 2 k_2 k 2\u4fdd\u62a4\u7684\u9690\u85cf\u5377\u200b   . \u672a\u52a0\u5bc6\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u7684\u5b58\u5728\u63ed\u793a\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u6807\u51c6\u5377\u5b58\u5728\uff0c\u56e0\u6b64Mallory\u53ef\u4ee5\u81ea\u4fe1\u5730\u8bf7\u6c42\u5b83\u7684\u5bc6\u94a5\u3002Alice\u53ef\u4ee5\u5b89\u5168\u5730\u4e3aMallory\u63d0\u4f9bk 1 k_1 k 1\u200b    \u4ece\u800c\u63ed\u793a\u4e86\u6807\u51c6\u5377\u4e2d\u65e0\u5bb3\u7684\u5185\u5bb9\u3002\u4f46\u662f\u5f53Alice\u8fdb\u5165K2 k_2K 2\u200b   , \u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u65e0\u6cd5\u89e3\u9501\u6807\u51c6\u533a\u57df\uff0c\u56e0\u6b64\u5b83\u4f1a\u5c1d\u8bd5\u5728\u9690\u85cf\u5377\u5934\u6240\u5728\u7684\u504f\u79fb\u91cf\u5904\u89e3\u5bc6\u3002\u5982\u679c\u9690\u85cf\u5377\u5b58\u5728\u4e14\u63d0\u4f9b\u7684\u5bc6\u94a5\u6b63\u786e\uff0c\u5219\u6b64\u64cd\u4f5c\u6210\u529f\uff0c\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u5f15\u5bfc\u9690\u85cf\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9b\u8bf1\u9975\u89e3\u5bc6\uff083\uff09\u7684\u793a\u4f8b\uff0c\u4f46\u60a8\u53ef\u80fd\u6ce8\u610f\u5230Alice\u8fd8\u5fc5\u987b\u58f0\u660e\u9a71\u52a8\u5668\u4e0a\u5269\u4f59\u7684\u201c\u672a\u4f7f\u7528\u201d\u7a7a\u95f4\u662f\u968f\u673a\u566a\u58f0\uff082\uff09\uff0c\u4e0d\u662f\u6709\u6548\u7684\u5bc6\u6587\u3002\u4e8c\u6b21\u7d22\u8d54\u7684\u5fc5\u8981\u6027\u4e0d\u662f\u7279\u4f8b\uff0c\u800c\u662f\u8bd5\u56fe\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u63d0\u4f9b\u53ef\u5426\u8ba4\u6027\u7684\u7cfb\u7edf\u7684\u4e00\u822c\u5c5e\u6027\u3002\n\u4e3a\u5269\u4f59\u6570\u636e\u7684\u5b58\u5728\u63d0\u4f9b\u4e00\u4e2a\u5408\u7406\u7684\u7406\u7531\u53ef\u80fd\u5f88\u68d8\u624b\u3002VeraCrypt\u4f9d\u8d56\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5728\u7528\u4f5c\u52a0\u5bc6\u5377\u4e4b\u524d\uff0c\u9a71\u52a8\u5668\u901a\u5e38\u4f1a\u88ab\u968f\u673a\u6570\u636e\u64e6\u9664\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u66f4\u52a0\u72e1\u733e\u3002\n\u8fd9\u79cd\u7b56\u7565\u786e\u5b9e\u6709\u4e00\u4e9b\u5b9e\u9645\u7684\u5c40\u9650\u6027\u3002\u5982\u679c\u5377\u627f\u8f7d\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u90a3\u4e48\u65e0\u5bb3\u7684\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u548c\u9690\u85cf\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e00\u6837\u9891\u7e41\u5730\u4f7f\u7528\uff0c\u4ee5\u4f7f\u5176\u770b\u8d77\u6765\u5408\u6cd5\u3002\u4f8b\u5982\uff0c\u5982\u679cAlice\u63d0\u4f9b\u4e86\u5bc6\u94a5\uff0cMallory\u53d1\u73b0\u6700\u540e\u4e00\u6b21\u767b\u5f55\u662f\u4e24\u5e74\u524d\uff0c\u4f46\u5979\u77e5\u9053Alice\u5728\u524d\u4e00\u5929\u767b\u5f55\uff0c\u90a3\u4e48Mallory\u53ef\u4ee5\u975e\u5e38\u786e\u5b9a\u67d0\u4e9b\u4e1c\u897f\u5df2\u5173\u95ed\u3002\u8fd8\u8003\u8651\u5982\u679cMallory\u5728\u9690\u85cf\u5377\u4e2d\u4fee\u6539\u67d0\u4e9b\u6570\u636e\u4e4b\u524d\u548c\u4e4b\u540e\u770b\u5230\u9a71\u52a8\u5668\u7684\u5feb\u7167\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u7136\u540e\u5979\u77e5\u9053\u90a3\u91cc\u6709\u6570\u636e\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u65e9\u671f\u64e6\u62ed\u7684\u6b8b\u7559\u7269\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u56fe\u4e66\u9986\u91cc\uff0c\u6bcf\u672c\u4e66\u90fd\u5145\u6ee1\u4e86\u80e1\u8a00\u4e71\u8bed\u3002\u56fe\u4e66\u9986\u7ba1\u7406\u5458\u5c06\u5e2e\u52a9\u60a8\u5728\u56fe\u4e66\u9986\u5185\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u3002\u4f60\u7ed9\u5979\u4e00\u5806\u6570\u636e\u548c\u4e00\u628a\u4e07\u80fd\u94a5\u5319\u3002\u5979\u4f7f\u7528\u4e3b\u5bc6\u94a5\u5bfc\u51fa\u52a0\u5bc6\u5bc6\u94a5\u548c\u968f\u673a\u4f4d\u7f6e\u3002\u7136\u540e\uff0c\u6570\u636e\u88ab\u5206\u5272\u6210\u4e66\u672c\u5927\u5c0f\u7684\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u7528\u6d3e\u751f\u5bc6\u94a5\u52a0\u5bc6\u3002\u6700\u540e\uff0c\u6bcf\u672c\u52a0\u5bc6\u4e66\u90fd\u5b58\u50a8\u5728\u7532\u9aa8\u6587\u63d0\u4f9b\u7684\u4f4d\u7f6e\u3002\n\u66f4\u6b63\u5f0f\u5730\u8bf4\uff0c\u5047\u8bbe\u201c\u5e93\u201d\u610f\u5473\u7740\u952e\u503c\u5b58\u50a8\u3002\u8003\u8651\u4e00\u4e2a\u5bc6\u94a5\u63a8\u5bfc\u51fd\u6570\uff1a\u2192 K\u00d7K\\Phi:K\\\u5230K\\\u4e58\u4ee5K\u03a6\uff1aK\u2192    K\u00d7K\u548c\u5bc6\u94a5\u52a0\u5bc6\u54c8\u5e0c\u51fd\u6570H:K\u00d7N\u2192 kh:K\\times\\mathbb{N}\\to kh:K\u00d7N\u2192    K\u3001 \u5176\u4e2dK\u662f\u5bc6\u94a5\u7a7a\u95f4\u3002\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u52a0\u5bc6\u51fd\u6570E:K\u00d7M\u2192 C E:K\u4e58\u4ee5M\u5230C E:K\u00d7M\u2192    C\u548c\u76f8\u5e94\u7684\u89e3\u5bc6\u51fd\u6570D:K\u00d7C\u2192 md:K\\\u4e58\u4ee5C\\\u5230md:K\u00d7C\u2192    M\u3001 \u5176\u4e2dM\u548cC\u5206\u522b\u662f\u6d88\u606f\u7a7a\u95f4\u548c\u5bc6\u6587\u7a7a\u95f4\u3002\nAlice\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bc6\u94a5k\uff0cFaythe\u4f7f\u7528\u5b83\u6765\u6d3e\u751f\u5b50\u5bc6\u94a5a\uff0cb=\u03a6\uff08k\uff09a\uff0cb=\\Phi\uff08k\uff09a\uff0cb=\u03a6\uff08k\uff09\u3002Alice\u7136\u540e\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6570\u636ep\uff0c\u8fd9\u4e9b\u6570\u636e\u88ab\u5206\u6210\u5757p1\u3001p2\u3001\u2026\u3001pn\u3001p1\u3001p2\u3001\\ldots\u3001p1\u200b    ,   \u7b2c2\u9875\u200b    ,  \u2026  ,   p n\u200b   , \u90a3\u91cc\u7684\u6bcf\u4e00\u4e2a\u4eba\u200b    \u586b\u5145\u5230\u76f8\u540c\u7684\u957f\u5ea6\u3002\u6700\u540e\uff0cFaythe\u5b58\u50a8\u6761\u76ee{ha\uff08i\uff09\uff1aeb\uff08pi\uff09}{ha\uff08i\uff09\uff1aeb\uff08pi\uff09\\}{ha\u200b    \uff08i\uff09\uff1aE b\u200b    \uff08\u7b2c\u4e00\u9875\uff09\u200b    ) } \u5728\u952e\u503c\u5b58\u50a8\u4e2d\u3002\n\u5bf9\u4e8e\u89e3\u5bc6\uff0cAlice\u518d\u6b21\u63d0\u4f9b\u5bc6\u94a5k\uff0cFaythe\u8ba1\u7b97\u5b50\u5bc6\u94a5a\uff0cb=\u03a6\uff08k\uff09a\uff0cb=\\Phi\uff08k\uff09a\uff0cb=\u03a6\uff08k\uff09\u3002\u7136\u540e\u5979\u91cd\u590d\u4e86\u4e00\u904d\u6211\u2208 N i\\in\\mathbb{N}i\u2208     N\u3001 \u68c0\u7d22\u503cci_i ci\u200b    \u5bf9\u5e94\u4e8e\u952eha\uff08i\uff09H_a\uff08i\uff09ha\u200b    \uff08i\uff09\u8ba1\u7b97db\uff08ci\uff09=db\uff08eb\uff08pi\uff09\uff09=pidub\uff08cidui\uff09=db\uff08eb\uff08pi\uff09\uff09=pidub\u200b    \uff08c\uff09\u4e00\u200b    )  =     D b\u200b    \uff08E\uff09b\u200b    \uff08\u7b2c\u4e00\u9875\uff09\u200b    ) )  =     PI\u200b   , \u5728\u4e0d\u5b58\u5728\u952e\u503c\u5bf9\u7684i=n+1i=n+1i=n+1\u5904\u505c\u6b62\u3002\u90a3\u4e48\u660e\u6587\u5c31\u662fp=p1\u2225  \u7b2c2\u9875\u2225 \u2026 \u2225  p n p=p_1\\mathbin\\Vert p_2\\mathbin\\Vert\\ldots\\mathbin\\Vert p_n p=p 1\u200b      \u2225     \u7b2c2\u9875\u200b      \u2225    \u2026   \u2225     p n\u200b   , \u5728\u53d6\u6d88\u6dfb\u52a0\u6bcf\u4e2aPI\u540e\u200b   .\n\u4e3a\u4e86\u9632\u6b62\u653b\u51fb\uff0cAlice\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u662f\u5979\u4ece\u4e2d\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd8\u9700\u8981\u989d\u5916\u8003\u8651\u5b8c\u6574\u6027\u548c\u8eab\u4efd\u9a8c\u8bc1\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u653e\u5728\u8fd9\u91cc\u3002\n\u5047\u8bbe\u56fe\u4e66\u9986\u603b\u5171\u6709n\u672c\u4e66\u3002Mallory\u4e0d\u80fd\u5bf9Alice\u7684\u6570\u636e\u53d1\u8868\u4efb\u4f55\u8bc4\u8bba\uff0c\u9664\u4e86\u5b83\u7684\u603b\u5927\u5c0f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u53ef\u4ee5\u5b58\u50a8\u5728n\u672c\u4e66\u4e2d\u7684\u6570\u636e\u91cf\u3002\u5982\u679c\u8feb\u4e0d\u5f97\u5df2\uff0c\u7231\u4e3d\u4e1d\u88ab\u8feb\u9732\u51fa\u4e00\u628a\u7528\u6765\u62fc\u51d1m\u672c\u4e66\u6570\u636e\u7684\u5047\u94a5\u5319\uff0c\u5979\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u91ca\u5269\u4e0b\u7684n\u2212 \u7537-\u7537\u2212    \u6211\u6ca1\u6709\u7528\u8fc7\u7684\u4e66\u3002\u5979\u53ef\u4ee5\u8bf4\uff0c\n\u8fd9\u770b\u8d77\u6765\u5f88\u719f\u6089\u3002\u7231\u4e3d\u4e1d\u8bd5\u56fe\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u89e3\u9501\u4e00\u4e9b\u65e0\u5bb3\u6570\u636e\u7684\u5047\u94a5\u5319\u6765\u907f\u514d\u66b4\u9732\u5979\u7684\u5b9e\u9645\u6570\u636e\u3002\u7136\u540e\uff0c\u5979\u5fc5\u987b\u63d0\u51fa\u7b2c\u4e8c\u4e2a\u4e3b\u5f20\uff0c\u4ee5\u89e3\u91ca\u5728\u63d0\u4f9b\u7684\u5bc6\u94a5\u4e0b\u672a\u89e3\u5bc6\u7684\u5269\u4f59\u6570\u636e\u3002\n\u58f0\u79f0\u65e0\u77e5\uff08A\uff09\u548c\u4e4b\u524d\uff081\uff09\u4e00\u6837\u6709\u7740\u5fae\u4e0d\u8db3\u9053\u7684\u5408\u7406\u6027\u8bba\u8bc1\u548c\u5b9e\u8df5\u5c40\u9650\u6027\u3002\n\u65ad\u8a00\u5269\u4f59\u7684\u4e66\u662f\u7531\u968f\u673a\u5b57\u8282\uff08B\uff09\u7ec4\u6210\uff0c\u9700\u8981\u89e3\u91ca\u5b83\u4eec\u662f\u5982\u4f55\u51fa\u73b0\u7684\u3002\u5979\u53ef\u4ee5\u7b80\u5355\u5730\u8bf4\uff0c\u5979\u6dfb\u52a0\u4e86\u5b83\u4eec\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u60f3\u8981\u5173\u95ed\u7684\u8815\u866b\u7f50\u5934\u3002\u5982\u679c\u67d0\u4e2a\u8f6f\u4ef6\u5b9e\u73b0\u51b3\u5b9a\u8981\u6dfb\u52a0\u591a\u5c11\u8bf1\u9975\u4e66\uff0c\u5b83\u5fc5\u7136\u4f1a\u5411\u9a6c\u6d1b\u91cc\u6cc4\u9732\u6709\u5173\u8bf1\u9975\u9884\u671f\u9891\u7387\u7684\u4fe1\u606f\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u4e0e\u7231\u4e3d\u4e1d\u58f0\u79f0\u7684n\u76f8\u6bd4\u8f83\u2212 \u7537-\u7537\u2212    \u6211\u7528\u8bf1\u9975\u627e\u51fa\u7231\u4e3d\u4e1d\u662f\u5426\u6492\u8c0e\u7684\u6307\u6807\u3002\n\u5982\u679c\u9891\u7387\u662f\u968f\u673a\u51b3\u5b9a\u7684\uff0c\u6211\u4eec\u4e5f\u4f1a\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u503c\u5fc5\u987b\u5728\u67d0\u4e2a\u8303\u56f4\u5185\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba9\u7231\u4e3d\u4e1d\u81ea\u5df1\u51b3\u5b9a\u9891\u7387\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u5f88\u6df7\u4e71\uff0c\u800c\u4e14\u4eba\u7c7b\u4e0d\u64c5\u957f\u4e0d\u53ef\u9884\u6d4b\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u79cd\u7b56\u7565\u53ef\u4ee5\u5f52\u7ed3\u4e3aAlice\u58f0\u79f0\u201c\u4e3a\u4e86\u89e3\u91ca\u9057\u7559\u6570\u636e\uff0c\u6211\u660e\u786e\u6dfb\u52a0\u4e86\u8bf1\u9975\u6761\u76ee\u201d\uff0c\u8fd9\u4f1a\u8ba9\u5bf9\u624b\u975e\u5e38\u6000\u7591\u3002\n\u5229\u7528B\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u8ba9Faythe\u7528\u968f\u673a\u6570\u636e\u66ff\u6362\u8981\u5220\u9664\u7684\u4e66\u7c4d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5220\u9664\u5b83\u4eec\u3002\u7136\u540eAlice\u53ef\u4ee5\u58f0\u79f0\u5269\u4f59\u7684\u4e66\u7c4d\u5df2\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u6570\u636e\u4e0d\u518d\u5b58\u5728\uff0c\u65e0\u6cd5\u89e3\u5bc6\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u91ca\u4efb\u4f55\u6570\u91cf\u7684\u5269\u4f59\u4e66\u7c4d\uff0c\u4f46\u8fd9\u786e\u5b9e\u610f\u5473\u7740\u6211\u4eec\u56fe\u4e66\u9986\u7684\u89c4\u6a21\u53ea\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u52a0\u3002\nClaim C\u662f\u65b0\u7684\uff0c\u6709\u4e00\u4e9b\u5438\u5f15\u4eba\u7684\u7279\u6027\uff0c\u4f46\u5b83\u4e0d\u80fd\u7528\u4e8e\u50cfAlice\u7684\u7b14\u8bb0\u672c\u7535\u8111\u786c\u76d8\u8fd9\u6837\u7684\u4e2a\u4eba\u5b58\u50a8\u4ecb\u8d28\uff0c\u56e0\u4e3a\u4e0d\u592a\u53ef\u80fd\u6709\u5408\u7406\u7684\u7406\u7531\u8ba9\u5176\u4ed6\u4eba\u7684\u6570\u636e\u51fa\u73b0\u5728\u90a3\u91cc\u3002\u76f8\u53cd\uff0c\u60f3\u8c61\u4e00\u4e0b\u201c\u56fe\u4e66\u9986\u201d\u6258\u7ba1\u5728\u4e00\u4e2a\u7531\u591a\u4eba\u5171\u4eab\u7684\u670d\u52a1\u4e0a\u3002\u7136\u540e\uff0c\u7231\u4e3d\u4e1d\u5f88\u5bb9\u6613\u58f0\u79f0\u5269\u4e0b\u7684\u6761\u76ee\u4e0d\u662f\u5979\u7684\u3002\u4e3a\u4e86\u53cd\u9a73\u7231\u4e3d\u4e1d\u7684\u8bf4\u6cd5\uff0c\u9a6c\u6d1b\u91cc\u9700\u8981\u5bf9\u4f7f\u7528\u8be5\u670d\u52a1\u7684\u6240\u6709\u5176\u4ed6\u4eba\u65bd\u52a0\u5f71\u54cd\u3002\u7136\u800c\uff0c\u8fd9\u6837\u7684\u670d\u52a1\u5fc5\u987b\u7cbe\u5fc3\u8bbe\u8ba1\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u5b58\u50a8\u4e86Alice\u6b63\u5728\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u503c\u53ef\u4ee5\u4e0eAlice\u7684\u58f0\u660e\u548cMallory\u7684\u80dc\u5229\u8fdb\u884c\u6bd4\u8f83\u3002\n\u8fd9\u4e2a\u8ba1\u5212\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002\u5c06\u6570\u636e\u5b58\u50a8\u5728\u79bb\u6563\u7684\u586b\u5145\u5757\u4e2d\u4f1a\u5e26\u6765\u5f00\u9500\u3002\u4ee5\u975e\u5e73\u51e1\u7684\u65b9\u5f0f\u4fee\u6539\u6570\u636e\u53ef\u80fd\u4ee3\u4ef7\u9ad8\u6602\u3002\u8986\u76d6\u6761\u76ee\u800c\u4e0d\u662f\u5220\u9664\u6761\u76ee\u4f1a\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u8fd9\u4e9b\u5b58\u50a8\u7a7a\u95f4\u662f\u201c\u6d6a\u8d39\u201d\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u4fdd\u5b58\u4efb\u4f55\u6709\u7528\u7684\u6570\u636e\u3002\u5728\u8bbe\u8ba1\u8fd9\u4e2a\u534f\u8bae\u65f6\uff0c\u6211\u53d1\u73b0\u6211\u4eec\u5fc5\u987b\u975e\u5e38\u5c0f\u5fc3\uff0c\u4ee5\u907f\u514d\u5931\u53bb\u6211\u4eec\u7684\u5426\u8ba4\u80fd\u529b\u3002\u5fc5\u987b\u5bf9\u4efb\u4f55\u5b9e\u65bd\u60c5\u51b5\u8fdb\u884c\u6838\u67e5\uff0c\u4ee5\u786e\u4fdd\u5176\u5728\u8fd9\u65b9\u9762\u6ca1\u6709\u4e0d\u8db3\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u79cd\u529f\u80fd\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5728\u4f17\u591a\u65e0\u6cd5\u533a\u5206\u7684\u6570\u636e\u5305\u4e2d\u5b58\u50a8\u4efb\u610f\u6570\u91cf\u7684\u72ec\u7acb\u201c\u6587\u4ef6\u5939\u201d\uff0c\u5bf9\u624b\u65e0\u6cd5\u63a8\u65ad\u51fa\u5b58\u50a8\u6570\u636e\u7684\u6700\u5927\u5927\u5c0f\u4ee5\u5916\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5c5e\u6027\uff0c\u4f46\u5b83\u5e94\u8be5\u88ab\u89c6\u4e3a\u6574\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u5305\u62ec\u60a8\u7684\u5a01\u80c1\u6a21\u578b\u548c\u53ef\u7528\u6027\u9700\u6c42\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5b9e\u9a8c\u6027\u5ba2\u6237\u673a\u5b9e\u73b0\u4e86\u8be5\u534f\u8bae\u7684\u7cbe\u795e\u3002\u622a\u81f3\u672c\u6587\u64b0\u5199\u4e4b\u65f6\uff0c\u5b83\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u6b63\u5f0f\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u6211\u6709\u4e00\u4e9b\u6fc0\u52a8\u4eba\u5fc3\u7684\u60f3\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u4e45\u7684\u5c06\u6765\uff08\u5e0c\u671b\u5982\u6b64\uff09\u5c06\u5176\u6253\u9020\u6210\u4e00\u4e2a\u53ef\u4f9b\u751f\u4ea7\u4f7f\u7528\u7684\u5ba2\u6237\u673a\u3002\n{home:\uff1a\u4f7f\u7528rss/atom\u8ba2\u9605}", "note_en": "It is safe to assume that in any useful  cryptosystem        C k  C_k      C        k \u200b    there exists at least one person with access to the key       k  k     k. An adversary with sufficient leverage can bypass the computational cost of a conventional attack by exerting their influence on this person.\n  The technique is sometimes referred to as  rubber-hose cryptanalysis and it gives the adversary some serious creative freedom. The security properties of the cryptosystem now rely not on the assumed difficulty of mathematical  trapdoor functions but on some person\u2019s tolerance to physical or psychological violence. A thief knows that pointing a gun will unlock a safe much faster than using a drill. An adversarial government will similarly seek information using torture and imprisonment rather than computational power.\n Many countries have key-disclosure legislation. In the United Kingdom,  RIPA was  first used against animal-rights activists to unlock data found on machines seized during a raid on their homes. The penalty for refusing to hand over key material is up to two years in prison.\n Say Alice has a cryptosystem        C k  C_k      C        k \u200b    whose security properties rely on the secrecy of the key       k  k     k. To defend against attacks of this form Alice needs some way to keep       k  k     k a secret. She could,\n Claim that       k  k     k is not known. This includes if it has been lost or forgotten.\n Suppose Mallory is the adversary who wants       k  k     k and suppose Alice makes a claim       X  X     X in order to avoid revealing       k  k     k. Defining success can be tricky as Mallory can ultimately decide not to believe any claim that Alice makes. However we will simply say Mallory wins if she can show       \u00ac X  \\neg X     \u00ac X and therefore assert that Alice has access to       k  k     k and is able to provide it. So for Alice to win,       X  X     X must be unfalsifiable and hence a  plausible defence.\n As a side note, if Alice knows and can demonstrate       \u00ac X  \\neg X     \u00ac X whereas Mallory cannot, then clearly she is missing some necessary information.  Kerckhoffs\u2019s principle says that the security of a cryptosystem        C k  C_k      C        k \u200b    should rely solely on the secrecy of the key       k  k     k, so in general we want proving       \u00ac X  \\neg X     \u00ac X to require knowing       k  k     k.\n We will ignore weaknesses related to  operational security or  implementation. For example if Mallory hears Alice admit to Bob that she is lying or if she finds a fragment of plaintext in memory then Alice has lost. However these situations are difficult to cryptographically protect against and so we assume security in this regard.\n Pleading ignorance (1) of       k  k     k is an easy strategy for Alice as it leaves little room for dispute and it can be deployed as a tactic almost anywhere. Mallory must show that       k  k     k  is known and this is difficult to do without actually producing it. Perhaps the key was on a USB device that has been lost, or was written down on a piece of paper that burned down along with Alice\u2019s house. Mere forgetfulness however implies that the data does exist and the only barrier to retrieving it is in accessing Alice\u2019s memories. This may not be satisfactory.\n Asserting the non-existence (2) of the ciphertext is equivalent to claiming that       k  k     k does not exist and so cannot be disclosed. Plausibility comes from the fact that ciphertext is  indistinguishable from random noise. This means that given some potential ciphertext       c  c     c an adversary cannot say if       c  c     c is uniformly sampled or if       c =  E k ( m )  c = E_k(m)     c  =     E        k \u200b    ( m ) is a valid message       m  m     m encrypted under some key       k  k     k. To prove that       c  c     c is not random noise Mallory must produce       k  k     k and compute       m  m     m, which is assumed to be infeasible.\n TrueCrypt and  VeraCrypt allow the creation of  hidden volumes and  hidden operating systems. The idea is that an ordinary encrypted volume will have unused regions of the disk filled with random data, and so a hidden volume can be placed there without revealing its existence.\n  Suppose we have a boot drive with a standard volume protected by the key        k 1  k_1      k        1 \u200b    and a hidden volume protected by the key        k 2  k_2      k        2 \u200b   . The existence of the unencrypted boot-loader reveals the fact that the standard volume exists and so Mallory can confidently demand its key. Alice may safely provide Mallory with        k 1  k_1      k        1 \u200b    thereby revealing the innocuous contents of the standard volume. However when Alice enters        k 2  k_2      k        2 \u200b   , the boot-loader fails to unlock the standard region so instead it tries to decrypt at the offset where the hidden volume\u2019s header would reside. If the hidden volume exists and if the provided key is correct, this operation is successful and the boot-loader proceeds to boot the hidden operating system.\n This is an example of providing a decoy decryption (3) but you may notice that Alice also had to claim that the remaining \u201cunused\u201d space on the drive is random noise (2) and not valid ciphertext. The necessity of a secondary claim is not a special case but a general property of systems that try to provide deniability in this way.\n  Providing a plausible reason for the existence of leftover data can be tricky. VeraCrypt relies on the fact that drives are often  wiped with random data before being used as encrypted volumes. In other situations we may have to be sneakier.\n This strategy does have some practical limitations. If the volume hosts an operating system, the innocuous OS has to be used as frequently as the hidden one to make it seem legitimate. For example if Alice provides the key and Mallory sees that the last login was two years ago, but she knows that Alice logged in the day before, then Mallory can be pretty sure something is off. Also consider what happens if Mallory sees a snapshot of the drive before and after some data is modified in the hidden volume. She then knows that there is data there and that it is not simply the remnants of an earlier wipe.\n  Imagine a huge library where every book is full of gibberish. There is a librarian who will help you store and retrieve your data within the library. You give her a bunch of data and a master key. She uses the master key to derive an encryption key and a random location oracle. The data is then split into book-sized pieces, each of which is encrypted with the derived key. Finally each encrypted book is stored at a location provided by the oracle.\n More formally, assume \u201clibrary\u201d means key-value store. Consider a  key-derivation function       \u03a6 : K \u2192 K \u00d7 K  \\Phi : K \\to K \\times K     \u03a6  :    K  \u2192    K  \u00d7    K and a keyed  cryptographic hash function       H : K \u00d7 N \u2192 K  H : K \\times \\mathbb{N} \\to K     H  :    K  \u00d7     N  \u2192    K, where       K  K     K is the key space. We also define an encryption function       E : K \u00d7 M \u2192 C  E : K \\times M \\to C     E  :    K  \u00d7    M  \u2192    C and the corresponding decryption function       D : K \u00d7 C \u2192 M  D : K \\times C \\to M     D  :    K  \u00d7    C  \u2192    M, where       M  M     M and       C  C     C are the message space and ciphertext space, respectively.\n Alice provides a key       k  k     k which Faythe uses to derive the sub-keys       a , b = \u03a6 ( k )  a, b = \\Phi(k)     a ,  b  =    \u03a6 ( k ). Alice then provides some data       p  p     p which is split into chunks        p 1 ,  p 2 , \u2026 ,  p n  p_1, p_2, \\ldots, p_n      p        1 \u200b    ,   p        2 \u200b    ,  \u2026  ,   p        n \u200b   , where every        p i  p_i      p        i \u200b    is padded to the same length. Finally, Faythe stores the entries       {  H a ( i ) :  E b (  p i ) }  \\{ H_a(i) : E_b(p_i) \\}     {  H        a \u200b    ( i )  :     E        b \u200b    (  p        i \u200b    ) } in the key-value store.\n For decryption, again Alice provides the key       k  k     k and Faythe computes the sub-keys       a , b = \u03a6 ( k )  a, b = \\Phi(k)     a ,  b  =    \u03a6 ( k ). She then iterates over       i \u2208 N  i \\in \\mathbb{N}     i  \u2208     N, retrieving the values        c i  c_i      c        i \u200b    corresponding to the keys        H a ( i )  H_a(i)      H        a \u200b    ( i ) and computing        D b (  c i ) =  D b (  E b (  p i ) ) =  p i  D_b(c_i) = D_b(E_b(p_i)) = p_i      D        b \u200b    (  c        i \u200b    )  =     D        b \u200b    (  E        b \u200b    (  p        i \u200b    ) )  =     p        i \u200b   , stopping at       i = n + 1  i = n + 1     i  =    n  +    1 where the key-value pair does not exist. The plaintext is then       p =  p 1 \u2225  p 2 \u2225 \u2026 \u2225  p n  p = p_1 \\mathbin\\Vert p_2 \\mathbin\\Vert \\ldots \\mathbin\\Vert p_n     p  =     p        1 \u200b      \u2225     p        2 \u200b      \u2225    \u2026   \u2225     p        n \u200b   , after unpadding each        p i  p_i      p        i \u200b   .\n Some extra consideration has to go into integrity and authentication to prevent attacks where the data Alice stores is not the data she gets back out. We leave this out here for simplicity\u2019s sake.\n Suppose the library contains       n  n     n books in total. Mallory cannot say anything about Alice\u2019s data apart from that its total size is less than or equal to the amount of data that can be stored within       n  n     n books. If, under duress, Alice is forced to reveal a decoy key that pieces together data from       m  m     m books, she needs some way to explain the remaining       n \u2212 m  n - m     n  \u2212    m books that were not used. She could claim that,\n  This will look mostly familiar. Alice is trying to avoid revealing her actual data by providing a decoy key that unlocks some innocuous data. She then has to make a secondary claim in order to explain the remaining data that was not decrypted under the provided key.\n Claiming ignorance (A) has the same trivial plausibility argument and practical limitation as before (1).\n Asserting that the leftover books are composed of random bytes (B) requires an explanation for  how they came to be there. She could say simply that she added them but this is a  can of worms that we want to keep closed. If some software implementation decides how many decoy books to add, it would necessarily leak information to Mallory about the  expected frequency of decoys. This value can be compared with Alice\u2019s claim of       n \u2212 m  n - m     n  \u2212    m decoys to come up with an indicator of whether Alice is lying.\n We have the same problem if the frequency is decided randomly as the value would have to lie within some range. We can get around this by asking Alice herself to decide the frequency, but this is messy and humans are bad at being unpredictable. In any case, this strategy boils down to Alice claiming \u201cI added decoy entries explicitly in order to explain leftover data\u201d, and this would rightly make an adversary extremely suspicious.\n A better way to utilise B is for Faythe to replace books that are to be deleted with random data instead of removing them outright. Then Alice can claim that the remaining books have been deleted and therefore the data no longer exists and cannot be decrypted. This way potentially any number of leftover books can be easily explained, but it does mean that the size of our library will only increase over time.\n Claim C is new and has some appealing properties but it can\u2019t be used on a personal storage medium\u2014like Alice\u2019s laptop hard drive\u2014as there is unlikely to be a plausible reason for other people\u2019s data to be there. Imagine instead that the \u201clibrary\u201d is hosted on a service shared by multiple people. Then it is easy for Alice to claim that the remaining entries are not hers. Mallory would need leverage over every other person using the service in order to disprove Alice\u2019s claim. Such a service has to be carefully designed however. For example if it stored how much space Alice is using then this value can be compared with Alice\u2019s claim and Mallory wins.\n There are some drawbacks of this scheme. There is an overhead in storing data in discrete, padded chunks. Modifying data in a non-trivial way may be expensive. Overwriting entries instead of removing them uses up storage space that is \u201cwasted\u201d in the sense that it does not hold any useful data. In designing this protocol what I have found is that we have to be  extremely careful to avoid losing our deniability. Any implementation has to be verified to ensure that it does not fall short in this regard.\n However we now have something that lets you have an arbitrary number of independent \u201cfolders\u201d stored amongst numerous indistinguishable packets, with an adversary being unable to infer any information other than the maximum size of the stored data. This is a powerful property but it should be considered as part of the whole picture including your threat model and usability requirements.\n There is an experimental client implementing the spirit of this protocol  here. As of the time of writing,  it is not ready for serious use. However there are some exciting ideas I have for making this into a production ready and usable client in the (hopefully) near future.\n{ home : :  subscribe with rss/atom}", "posttime": "2022-02-19 03:44:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5426\u8ba4,deniable,\u6570\u636e", "title": "\u53ef\u4fe1\u53ef\u5426\u8ba4\u7684\u52a0\u5bc6\uff082020\u5e74\uff09", "title_en": "Plausibly Deniable Encryption (2020)", "transed": 1, "url": "https://spacetime.dev/plausibly-deniable-encryption", "via": "", "real_tags": ["2020", "\u5426\u8ba4", "deniable", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074002, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Go 1.18\u5373\u5c06\u53d1\u5e03\uff0c\u5e0c\u671b\u5728\u51e0\u5468\u540e\u53d1\u5e03\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u53d1\u5e03\uff0c\u6709\u5f88\u591a\u671f\u5f85\uff0c\u4f46\u539f\u751f\u6a21\u7cca\u5728\u6211\u5fc3\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u4f4d\u7f6e\u3002\uff08\u6211\u5f53\u7136\u975e\u5e38\u6709\u504f\u89c1\uff1a\u5728\u6211\u79bb\u5f00\u8c37\u6b4c\u4e4b\u524d\uff0c\u6211\u66fe\u4e0e\u51ef\u8482\u00b7\u970d\u514b\u66fc\u548c\u7f57\u5170\u00b7\u978b\u5320\u5408\u4f5c\u6784\u5efa\u6a21\u7cca\u7cfb\u7edf\uff09\u3002\u6cdb\u578b\u4e5f\u5f88\u9177\uff0c\u6211\u60f3\uff0c\u4f46\u662f\u5c06\u6a21\u7cca\u96c6\u6210\u5230\u6d4b\u8bd5\u5305\u548cgo\u6d4b\u8bd5\u4e2d\u4f1a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u66f4\u5bb9\u6613\u8bbf\u95ee\u6a21\u7cca\u6d4b\u8bd5\uff0c\u4ece\u800c\u66f4\u5bb9\u6613\u5728go\u4e2d\u7f16\u5199\u5b89\u5168\u3001\u6b63\u786e\u7684\u4ee3\u7801\u3002\n\u5173\u4e8ehow Go#39\uff1bs\u7684\u6a21\u7cca\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u6709\u6548\u7684\uff0c\u6240\u4ee5\u6211&#39\uff1b\u6211\u5728\u8fd9\u91cc\u8c08\u4e00\u8c08\u3002\u5982\u679c\u4f60&#39\uff1b\u6211\u60f3\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u5f00\u59cb\u4f7f\u7528\u6a21\u7cca\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6559\u7a0b\u3002\n\u6a21\u7cca\u5316\u662f\u4e00\u79cd\u6d4b\u8bd5\u6280\u672f\uff0c\u6d4b\u8bd5\u57fa\u7840\u8bbe\u65bd\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u8f93\u5165\u8c03\u7528\u4ee3\u7801\uff0c\u4ee5\u68c0\u67e5\u5b83\u662f\u5426\u4ea7\u751f\u6b63\u786e\u7684\u7ed3\u679c\u6216\u5408\u7406\u7684\u9519\u8bef\u3002\u6a21\u7cca\u6d4b\u8bd5\u662f\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u8865\u5145\uff0c\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u5728\u7ed9\u5b9a\u4e00\u7ec4\u9759\u6001\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\uff0c\u6d4b\u8bd5\u4ee3\u7801\u662f\u5426\u751f\u6210\u6b63\u786e\u7684\u8f93\u51fa\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u5c40\u9650\u6027\u5728\u4e8e\uff0c\u60a8\u53ea\u4f7f\u7528\u9884\u671f\u7684\u8f93\u5165\u8fdb\u884c\u771f\u6b63\u7684\u6d4b\u8bd5\uff1b\u6a21\u7cca\u6d4b\u8bd5\u64c5\u957f\u4e8e\u53d1\u73b0\u66b4\u9732\u5947\u602a\u884c\u4e3a\u7684\u610f\u5916\u8f93\u5165\u3002\u4e00\u4e2a\u597d\u7684\u6a21\u7cca\u7cfb\u7edf\u4e5f\u4f1a\u5bf9\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u8fdb\u884c\u68c0\u6d4b\uff0c\u8fd9\u6837\u5b83\u5c31\u80fd\u6709\u6548\u5730\u751f\u6210\u6269\u5c55\u4ee3\u7801\u8986\u76d6\u8303\u56f4\u7684\u8f93\u5165\u3002\n\u6a21\u7cca\u6d4b\u8bd5\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u89e3\u6790\u5668\u548c\u9a8c\u8bc1\u5668\uff0c\u5c24\u5176\u662f\u5728\u5b89\u5168\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u4e1c\u897f\u3002Fuzzing\u975e\u5e38\u64c5\u957f\u53d1\u73b0\u5bfc\u81f4\u5b89\u5168\u95ee\u9898\u7684bug\uff0c\u6bd4\u5982\u4e8c\u8fdb\u5236\u7f16\u7801\u4e2d\u7684\u65e0\u6548\u957f\u5ea6\u3001\u622a\u65ad\u8f93\u5165\u3001\u6574\u6570\u6ea2\u51fa\u3001\u65e0\u6548unicode\u7b49\u7b49\u3002\n\u8fd8\u6709\u5176\u4ed6\u4f7f\u7528\u6a21\u7cca\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5dee\u5206\u6a21\u7cca\u901a\u8fc7\u5411\u4e24\u4e2a\u5b9e\u73b0\u8f93\u5165\u76f8\u540c\u7684\u968f\u673a\u8f93\u5165\u5e76\u68c0\u67e5\u8f93\u51fa\u662f\u5426\u5339\u914d\uff0c\u6765\u9a8c\u8bc1\u540c\u4e00\u4e8b\u7269\u7684\u4e24\u4e2a\u5b9e\u73b0\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u884c\u4e3a\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u7528\u6237\u754c\u9762\u4e0a\u4f7f\u7528\u6a21\u7cca&#34\uff1b\u7334\u5b50&#34\uff1b\u6d4b\u8bd5\uff1a\u6a21\u7cca\u5f15\u64ce\u53ef\u4ee5\u4ea7\u751f\u968f\u673a\u70b9\u51fb\u3001\u51fb\u952e\u548c\u70b9\u51fb\uff0c\u6d4b\u8bd5\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u5d29\u6e83\u3002\n\u8d77\u6bdb\u5e76\u4e0d\u662f\u65b0\u9c9c\u4e8b\u3002go fuzz\u53ef\u80fd\u662f\u5f53\u4eca\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5de5\u5177\uff0c\u5728\u5f00\u53d1\u539f\u751ffuzzing\u65f6\uff0c\u6211\u4eec\u5f53\u7136\u501f\u9274\u4e86\u5b83\u7684\u8bbe\u8ba1\u3002Go 1.18\u4e2d\u7684\u65b0\u529f\u80fd\u662f\u5c06\u6a21\u7cca\u76f4\u63a5\u96c6\u6210\u5230Go\u6d4b\u8bd5\u548c\u6d4b\u8bd5\u5305\u4e2d\u3002\u8fd9\u4e2a\u63a5\u53e3\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6d4b\u8bd5\u63a5\u53e3\uff0c\u6d4b\u8bd5\u3002T\n\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u540d\u4e3aParseSomething\u7684\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u6a21\u7cca\u6d4b\u8bd5\u3002\u8fd9\u5c06\u68c0\u67e5\u5bf9\u4e8e\u4efb\u4f55\u968f\u673a\u8f93\u5165\uff0cParseSomething\u662f\u5426\u6210\u529f\u6216\u8fd4\u56deParseError\u3002\n\u5305\u89e3\u6790\u5668\u5bfc\u5165\uff08&#34\uff1b\u9519\u8bef&#34\uff1b&#34\uff1b\u6d4b\u8bd5&#34\uff1b\uff09var seeds=[]\u5b57\u8282{nil\uff0c[]\u5b57\u8282\uff08&#34\uff1b123&#34\uff1b\uff09\uff0c[]\u5b57\u8282\uff08&#34\uff1b\uff0812\uff09&#34\uff1b\uff09\uff0c]func FuzzParseSomething\uff08f*testing.f\uff09{for_u\uff0cseed:=range seeds{f.Add\uff08seed\uff09}f.Fuzz\uff08t*testing.t\uff0cinput[]\u5b57\u8282\uff09{err:=ParseSomething\uff08input\uff09if err==nil{return}if parseErr:=\uff08*ParseError\uff09\uff08nil\uff09\uff01\u9519\u8bef\u3002As\uff08err\uff0c&amp\uff1bparseErr\uff09{t.\u81f4\u547d\u7684\uff08err\uff09}\n\u5f53go\u6d4b\u8bd5\u6b63\u5e38\u8fd0\u884c\uff08\u6ca1\u6709-fuzz\u6807\u5fd7\uff09\u65f6\uff0cFuzzParseSomething\u88ab\u89c6\u4e3a\u5355\u5143\u6d4b\u8bd5\u3002\u63d0\u4f9b\u7ed9F.fuzz\u7684fuzz\u51fd\u6570\u662f\u901a\u8fc7\u6765\u81ea\u79cd\u5b50\u8bed\u6599\u5e93\u7684\u8f93\u5165\u6765\u8c03\u7528\u7684\uff1a\u5728F.Add\u4e2d\u6ce8\u518c\u7684\u8f93\u5165\uff0c\u4ee5\u53ca\u4ecetestdata/corpus/FuzzParseSomething\u4e2d\u7684\u6587\u4ef6\u8bfb\u53d6\u7684\u8f93\u5165\u3002\u5982\u679cfuzz\u51fd\u6570\u5d29\u6e83\u6216\u8c03\u7528T.Fail\uff0c\u5219\u6d4b\u8bd5\u5931\u8d25\uff0cgo test\u4ee5\u975e\u96f6\u72b6\u6001\u9000\u51fa\u3002\n\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u6a21\u7cca\u7cfb\u7edf\u5c06\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u8f93\u5165\u8c03\u7528\u6a21\u7cca\u51fd\u6570\uff0c\u4f7f\u7528\u6765\u81ea\u79cd\u5b50\u8bed\u6599\u5e93\u548c\u7f13\u5b58\u8bed\u6599\u5e93\u7684\u8f93\u5165\u4f5c\u4e3a\u8d77\u70b9\u3002\u751f\u6210\u7684\u6269\u5c55\u8986\u76d6\u8303\u56f4\u7684\u8f93\u5165\u88ab\u6700\u5c0f\u5316\u5e76\u6dfb\u52a0\u5230\u7f13\u5b58\u7684\u8bed\u6599\u5e93\u4e2d\u3002\u751f\u6210\u7684\u5bfc\u81f4\u9519\u8bef\u7684\u8f93\u5165\u88ab\u6700\u5c0f\u5316\u5e76\u6dfb\u52a0\u5230\u79cd\u5b50\u8bed\u6599\u5e93\u4e2d\uff0c\u6709\u6548\u5730\u6210\u4e3a\u65b0\u7684\u56de\u5f52\u6d4b\u8bd5\u7528\u4f8b\u3002\u4ee5\u540e\u7684go\u6d4b\u8bd5\u8fd0\u884c\u5c06\u5931\u8d25\uff0c\u76f4\u5230\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u5373\u4f7f\u6ca1\u6709\u542f\u7528\u6a21\u7cca\u529f\u80fd\u3002\n\u540c\u6837\uff0c\u8fd8\u6709&#39\uff1b\u4e0e\u5176\u4ed6\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u65b0\u5947\u4e4b\u5904\u3002\u5176\u4f18\u52bf\u5728\u4e8e\u5bf9\u754c\u9762\u7684\u719f\u6089\u548c\u6613\u7528\u6027\u3002\u7f16\u5199\u7b2c\u4e00\u4e2afuzz\u6d4b\u8bd5\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3afuzzing\u9075\u5faa\u6d4b\u8bd5\u5305\u7684\u7ea6\u5b9a\u3002\u90a3\u91cc&#39\uff1bIt\u2019\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u9700\u8981\u5b89\u88c5\u548c\u5b66\u4e60\u65b0\u5de5\u5177\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\uff0cgo test\u4e3a\u6bcf\u4e2a\u88ab\u6d4b\u8bd5\u7684\u5305\u6784\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c\u8fd9\u4e9b\u53ef\u6267\u884c\u6587\u4ef6\u4ee5\u83b7\u5f97\u6d4b\u8bd5\u548c\u57fa\u51c6\u6d4b\u8bd5\u7ed3\u679c\u3002\u6a21\u7cca\u5316\u9075\u5faa\u8fd9\u79cd\u6a21\u5f0f\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\n\u5f53\u4f7f\u7528-fuzz\u6807\u5fd7\u8c03\u7528go test\u65f6\uff0cgo test\u4f7f\u7528\u9644\u52a0\u7684\u8986\u76d6\u7387\u5de5\u5177\u7f16\u8bd1\u6d4b\u8bd5\u53ef\u6267\u884c\u6587\u4ef6\u3002Go\u7f16\u8bd1\u5668\u5df2\u7ecf\u4e3alibFuzzer\u63d0\u4f9b\u4e86\u63d2\u88c5\u652f\u6301\uff0c\u6240\u4ee5\u6211\u4eec\u91cd\u65b0\u4f7f\u7528\u4e86\u5b83\u3002\u7f16\u8bd1\u5668\u5411\u6bcf\u4e2a\u57fa\u672c\u5757\u6dfb\u52a0\u4e00\u4e2a8\u4f4d\u8ba1\u6570\u5668\u3002\u8ba1\u6570\u5668\u901f\u5ea6\u5feb\u4e14\u8fd1\u4f3c\uff1a\u5b83\u5305\u88f9\u5728\u6ea2\u51fa\u4e0a\uff0c\u5728\u90a3\u91cc&#39\uff1b\u6ca1\u6709\u8de8\u7ebf\u7a0b\u7684\u540c\u6b65\u3002\uff08\u6211\u4eec\u4e0d\u5f97\u4e0d\u544a\u8bc9\u79cd\u65cf\u68c0\u6d4b\u5668\u4e0d\u8981\u62b1\u6028\u5bf9\u8fd9\u4e9b\u8ba1\u6570\u5668\u7684\u5199\u5165\uff09\u3002\u8ba1\u6570\u5668\u6570\u636e\u5728\u8fd0\u884c\u65f6\u7531\u5185\u90e8/fuzz\u5305\u4f7f\u7528\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u6a21\u7cca\u903b\u8f91\u90fd\u5728\u8fd0\u884c\u3002\ngo test\u6784\u5efa\u4e00\u4e2a\u63d2\u5165\u6307\u4ee4\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540e\uff0c\u4f1a\u50cf\u5f80\u5e38\u4e00\u6837\u8fd0\u884c\u5b83\u3002\u8fd9\u88ab\u79f0\u4e3a\u534f\u8c03\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4ece\u5927\u591a\u6570\u901a\u8fc7go\u6d4b\u8bd5\u7684\u6807\u5fd7\u5f00\u59cb\uff0c\u5305\u62ec-fuzz=pattern\uff0c\u5b83\u4f7f\u7528\u5b83\u6765\u8bc6\u522b\u8981\u6a21\u7cca\u7684\u76ee\u6807\uff1b\u76ee\u524d\uff0c\u6bcf\u6b21go\u6d4b\u8bd5\u8c03\u7528\u53ea\u80fd\u6a21\u7cca\u4e00\u4e2a\u76ee\u6807\uff08#46312\uff09\u3002\u5f53\u76ee\u6807\u8c03\u7528F.Fuzz\u65f6\uff0c\u63a7\u5236\u6743\u88ab\u4f20\u9012\u7ed9Fuzz\u3002CoordinateFuzzing\uff0c\u5b83\u521d\u59cb\u5316\u6a21\u7cca\u7cfb\u7edf\u5e76\u5f00\u59cb\u534f\u8c03\u5668\u4e8b\u4ef6\u5faa\u73af\u3002\n\u534f\u8c03\u5668\u542f\u52a8\u51e0\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u8fd9\u4e9b\u8fdb\u7a0b\u8fd0\u884c\u76f8\u540c\u7684\u6d4b\u8bd5\u53ef\u6267\u884c\u6587\u4ef6\u5e76\u6267\u884c\u5b9e\u9645\u7684\u6a21\u7cca\u5316\u3002\u5de5\u4eba\u4ece\u4e00\u4e2a\u672a\u8bb0\u5f55\u7684\u547d\u4ee4\u884c\u6807\u5fd7\u5f00\u59cb\uff0c\u8be5\u6807\u5fd7\u544a\u8bc9\u4ed6\u4eec\u662f\u5de5\u4eba\u3002\u6a21\u7cca\u5904\u7406\u5fc5\u987b\u5728\u5355\u72ec\u7684\u8fdb\u7a0b\u4e2d\u5b8c\u6210\uff0c\u8fd9\u6837\uff0c\u5982\u679c\u5de5\u4f5c\u8fdb\u7a0b\u5b8c\u5168\u5d29\u6e83\uff0c\u534f\u8c03\u5668\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u5e76\u8bb0\u5f55\u5bfc\u81f4\u5d29\u6e83\u7684\u8f93\u5165\u3002\n\u534f\u8c03\u5458\u901a\u8fc7\u4e00\u5bf9\u7ba1\u9053\uff0c\u4f7f\u7528\u57fa\u4e8eJSON\u7684\u4e34\u65f6RPC\u534f\u8bae\u4e0e\u6bcf\u4e2a\u5de5\u4f5c\u4eba\u5458\u8fdb\u884c\u901a\u4fe1\u3002\u534f\u8bae\u975e\u5e38\u57fa\u672c\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709&#39\uff1b\u6211\u4eec\u4e0d\u9700\u8981\u50cfgRPC\u8fd9\u6837\u590d\u6742\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u4e5f\u4e0d\u9700\u8981&#39\uff1b\u6211\u4e0d\u60f3\u5728\u6807\u51c6\u5e93\u4e2d\u5f15\u5165\u4efb\u4f55\u65b0\u5185\u5bb9\u3002\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u8fd8\u5c06\u4e00\u4e9b\u72b6\u6001\u4fdd\u5b58\u5728\u5185\u5b58\u6620\u5c04\u7684\u4e34\u65f6\u6587\u4ef6\u4e2d\uff0c\u4e0e\u534f\u8c03\u5668\u5171\u4eab\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u8fed\u4ee3\u8ba1\u6570\u548c\u968f\u673a\u6570\u751f\u6210\u5668\u72b6\u6001\u3002\u5982\u679c\u5de5\u4f5c\u8005\u5b8c\u5168\u5d29\u6e83\uff0c\u534f\u8c03\u5668\u53ef\u4ee5\u4ece\u5171\u4eab\u5185\u5b58\u6062\u590d\u5176\u72b6\u6001\uff0c\u800c\u65e0\u9700\u5de5\u4f5c\u8005\u9996\u5148\u901a\u8fc7\u7ba1\u9053\u793c\u8c8c\u5730\u53d1\u9001\u6d88\u606f\u3002\n\u5728\u534f\u8c03\u5668\u542f\u52a8worker\u4e4b\u540e\uff0c\u5b83\u901a\u8fc7\u4ece\u79cd\u5b50\u8bed\u6599\u5e93\u548c\u6a21\u7cca\u7f13\u5b58\u8bed\u6599\u5e93\uff08\u5728$GOCACHE\u7684\u5b50\u76ee\u5f55\u4e2d\uff09\u53d1\u9001worker\u8f93\u5165\u6765\u6536\u96c6\u57fa\u7ebf\u8986\u76d6\u7387\u3002\u6bcf\u4e2aworker\u8fd0\u884c\u5176\u7ed9\u5b9a\u7684\u8f93\u5165\uff0c\u7136\u540e\u8fd4\u56de\u5176\u8986\u76d6\u7387\u8ba1\u6570\u5668\u7684\u5feb\u7167\u3002\u534f\u8c03\u5668\u5c06\u8fd9\u4e9b\u8ba1\u6570\u5668\u7c97\u5316\u5e76\u5408\u5e76\u4e3a\u4e00\u4e2a\u7ec4\u5408\u8986\u76d6\u9635\u5217\u3002\n\u63a5\u4e0b\u6765\uff0c\u534f\u8c03\u5668\u4ece\u79cd\u5b50\u8bed\u6599\u5e93\u548c\u7f13\u5b58\u7684\u8bed\u6599\u5e93\u4e2d\u53d1\u9001\u8f93\u5165\u4ee5\u8fdb\u884c\u6a21\u7cca\u5316\uff1a\u6bcf\u4e2a\u5de5\u4f5c\u8005\u90fd\u5f97\u5230\u4e00\u4e2a\u8f93\u5165\u548c\u4e00\u4e2a\u57fa\u7ebf\u8986\u76d6\u6570\u7ec4\u7684\u526f\u672c\u3002\u7136\u540e\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u8005\u968f\u673a\u6539\u53d8\u5176\u8f93\u5165\uff08\u7ffb\u8f6c\u4f4d\u3001\u5220\u9664\u6216\u63d2\u5165\u5b57\u8282\u7b49\uff09\uff0c\u5e76\u8c03\u7528fuzz\u51fd\u6570\u3002\u4e3a\u4e86\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u4eba\u5458\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u534f\u8c03\u5458\u8fdb\u4e00\u6b65\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\u6301\u7eed\u53d8\u5f02\u548c\u547c\u53eb100\u6beb\u79d2\u3002\u6bcf\u6b21\u901a\u8bdd\u540e\uff0c\u5de5\u4f5c\u4eba\u5458\u90fd\u4f1a\u68c0\u67e5\u662f\u5426\u62a5\u544a\u4e86\u9519\u8bef\uff08T.Fail\uff09\u6216\u4e0e\u57fa\u7ebf\u8986\u76d6\u7387\u9635\u5217\u76f8\u6bd4\u662f\u5426\u53d1\u73b0\u4e86\u65b0\u7684\u8986\u76d6\u7387\u3002\u5982\u679c\u662f\uff0c\u5de5\u4eba\u62a5\u544a&#34\uff1b\u6709\u8da3&#34\uff1b\u7acb\u5373\u5c06\u4fe1\u606f\u53cd\u9988\u7ed9\u534f\u8c03\u5458\u3002\n\u5f53\u534f\u8c03\u4eba\u6536\u5230\u4ea7\u751f\u65b0\u8986\u76d6\u8303\u56f4\u7684\u8f93\u5165\u65f6\uff0c\u5b83\u4f1a\u6bd4\u8f83\u5de5\u4f5c\u4eba\u5458&#39\uff1bs\u5bf9\u5f53\u524d\u7ec4\u5408\u8986\u76d6\u9635\u5217\u7684\u8986\u76d6\uff1ait&#39\uff1b\u6709\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u5de5\u4f5c\u4eba\u5458\u5df2\u7ecf\u53d1\u73b0\u4e86\u63d0\u4f9b\u76f8\u540c\u8986\u76d6\u8303\u56f4\u7684\u8f93\u5165\u3002\u5982\u679c\u662f\uff0c\u5219\u4e22\u5f03\u65b0\u8f93\u5165\u3002\u5982\u679c\u65b0\u7684\u8f93\u5165\u786e\u5b9e\u63d0\u4f9b\u4e86\u65b0\u7684\u8986\u76d6\u8303\u56f4\uff0c\u534f\u8c03\u5668\u4f1a\u5c06\u5176\u53d1\u9001\u56de\u5de5\u4f5c\u4eba\u5458\uff08\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u5de5\u4f5c\u4eba\u5458\uff09\u4ee5\u6700\u5c0f\u5316\u3002\u6700\u5c0f\u5316\u5c31\u50cf\u6a21\u7cca\u5316\u4e00\u6837\uff0c\u4f46\u5de5\u4f5c\u4eba\u5458\u4f1a\u6267\u884c\u968f\u673a\u7a81\u53d8\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u5165\uff0c\u8be5\u8f93\u5165\u4ecd\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e9b\u65b0\u7684\u8986\u76d6\u8303\u56f4\u3002\u8f83\u5c0f\u7684\u8f93\u5165\u5f80\u5f80\u66f4\u5feb\uff0c\u56e0\u6b64\u5b83&#39\uff1b\u503c\u5f97\u82b1\u65f6\u95f4\u63d0\u524d\u6700\u5c0f\u5316\uff0c\u4ee5\u4fbf\u4ee5\u540e\u66f4\u5feb\u5730\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002worker\u8fdb\u7a0b\u5728\u5176&#39\uff1b\u5373\u4f7f\u5b83\u627e\u4e0d\u5230\u66f4\u5c0f\u7684\u4e1c\u897f\uff0c\u5b83\u4e5f\u505a\u4e86\u6700\u5c0f\u5316\u3002\u534f\u8c03\u5668\u5c06\u6700\u5c0f\u5316\u7684\u8f93\u5165\u6dfb\u52a0\u5230\u7f13\u5b58\u7684\u8bed\u6599\u5e93\u4e2d\u5e76\u7ee7\u7eed\u3002\u7a0d\u540e\uff0c\u534f\u8c03\u5668\u53ef\u80fd\u4f1a\u5c06\u6700\u5c0f\u5316\u7684\u8f93\u5165\u53d1\u9001\u7ed9\u5de5\u4f5c\u4eba\u5458\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u6a21\u7cca\u5904\u7406\u3002\u8fd9\u5c31\u662f\u6a21\u7cca\u7cfb\u7edf\u5982\u4f55\u9002\u5e94\u65b0\u7684\u8986\u76d6\u8303\u56f4\u3002\n\u5f53\u534f\u8c03\u5668\u63a5\u6536\u5230\u5bfc\u81f4\u9519\u8bef\u7684\u8f93\u5165\u65f6\uff0c\u5b83\u4f1a\u518d\u6b21\u5c06\u8f93\u5165\u53d1\u9001\u56de\u5de5\u4f5c\u4eba\u5458\u4ee5\u6700\u5c0f\u5316\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5de5\u4f5c\u4eba\u5458\u8bd5\u56fe\u627e\u5230\u4ecd\u7136\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u8f83\u5c0f\u8f93\u5165\uff0c\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u662f\u76f8\u540c\u7684\u9519\u8bef\u3002\u6700\u5c0f\u5316\u8f93\u5165\u540e\uff0c\u534f\u8c03\u5668\u5c06\u5176\u4fdd\u5b58\u5230testdata/corpus/$FuzzTarget\u4e2d\uff0c\u4f18\u96c5\u5730\u5173\u95ed\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u7136\u540e\u4ee5\u975e\u96f6\u72b6\u6001\u9000\u51fa\u3002\n\u5982\u679c\u5de5\u4f5c\u8fdb\u7a0b\u5728\u6a21\u7cca\u5316\u65f6\u5d29\u6e83\uff0c\u534f\u8c03\u5668\u53ef\u4ee5\u4f7f\u7528\u53d1\u9001\u7ed9\u5de5\u4f5c\u8fdb\u7a0b\u7684\u8f93\u5165\u6062\u590d\u5bfc\u81f4\u5d29\u6e83\u7684\u8f93\u5165\uff0c\u800c\u5de5\u4f5c\u8fdb\u7a0b&#39\uff1bs RNG\u72b6\u6001\u548c\u8fed\u4ee3\u8ba1\u6570\uff08\u90fd\u7559\u5728\u5171\u4eab\u5185\u5b58\u4e2d\uff09\u3002\u5d29\u6e83\u8f93\u5165\u901a\u5e38\u4e0d\u4f1a\u6700\u5c0f\u5316\uff0c\u56e0\u4e3a\u6700\u5c0f\u5316\u662f\u4e00\u4e2a\u9ad8\u5ea6\u6709\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u5d29\u6e83\u90fd\u4f1a\u7834\u574f\u8be5\u72b6\u6001\u3002\u8fd9\u5728\u7406\u8bba\u4e0a\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u6ca1\u6709&#39\uff1b\u8fd8\u6ca1\u505a\u5b8c\u3002\n\u6a21\u7cca\u5316\u901a\u5e38\u4f1a\u4e00\u76f4\u6301\u7eed\uff0c\u76f4\u5230\u53d1\u73b0\u9519\u8bef\uff0c\u6216\u8005\u7528\u6237\u6309Ctrl-C\u4e2d\u65ad\u8fc7\u7a0b\uff0c\u6216\u8005\u901a\u8fc7\u4f7f\u7528-fuzztime\u6807\u5fd7\u8bbe\u7f6e\u7684\u622a\u6b62\u65e5\u671f\u3002\u6a21\u7cca\u5f15\u64ce\u4f18\u96c5\u5730\u5904\u7406\u4e2d\u65ad\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u4f20\u9012\u7ed9\u534f\u8c03\u5668\u8fd8\u662f\u5de5\u4f5c\u8fdb\u7a0b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5de5\u4f5c\u8fdb\u7a0b\u5728\u6700\u5c0f\u5316\u5bfc\u81f4\u9519\u8bef\u7684\u8f93\u5165\u65f6\u88ab\u4e2d\u65ad\uff0c\u534f\u8c03\u5668\u5c06\u4fdd\u5b58\u672a\u6700\u5c0f\u5316\u7684\u8f93\u5165\u3002\n\u6211&#39\uff1b\u6211\u5bf9\u8fd9\u6b21\u53d1\u5e03\u611f\u5230\u975e\u5e38\u5174\u594b\uff0c\u5c3d\u7ba1\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\uff0c\u53bb\u5427&#39\uff1bs\u7684\u65b0\u6a21\u7cca\u5f15\u64ce\u8ddd\u79bb\u4e0e\u5176\u4ed6\u6a21\u7cca\u7cfb\u7edf\u5728\u529f\u80fd\u548c\u6027\u80fd\u4e0a\u8fbe\u5230\u540c\u7b49\u6c34\u5e73\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\u8bb8\u591a\u6539\u8fdb\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u5b83&#39\uff1b\u5b83\u5df2\u7ecf\u5904\u4e8e\u6709\u7528\u7684\u72b6\u6001\uff0c\u5e76\u4e14API\u662f\u7a33\u5b9a\u7684\u3002\u6211&#39\uff1b\u6211\u5f88\u9ad8\u5174&#39\uff1b\u73b0\u5728\u5f00\u59cb\u53d1\u8d27\u4e86\u3002\n\u60a8\u53ef\u4ee5\u5728\u5e26\u6709\u6a21\u7cca\u6807\u7b7e\u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u4e0a\u627e\u5230\u672a\u89e3\u51b3\u95ee\u9898\u7684\u5217\u8868\u3002\u90a3\u4e9b\u6709Go1\u7684\u4eba\u300219\u91cc\u7a0b\u7891\u88ab\u89c6\u4e3a\u6700\u9ad8\u4f18\u5148\u7ea7\uff0c\u4f46\u95ee\u9898\u53ef\u80fd\u4f1a\u6839\u636e\u7528\u6237\u53cd\u9988\u548c\u5f00\u53d1\u4eba\u5458\u5e26\u5bbd\u91cd\u65b0\u786e\u5b9a\u4f18\u5148\u7ea7\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u53bb\u8bd5\u8bd5\uff0c\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u8bf7\u6c42\u529f\u80fd\uff01\u5982\u679c\u60a8\u5728\u81ea\u5df1\u7684\u4ee3\u7801\uff08\u6216\u5176\u4ed6\u4eba\u7684\u4ee3\u7801\uff01\uff09\u4e2d\u53d1\u73b0\u4efb\u4f55\u597d\u7684bug\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230Go wiki\u4e0a\u7684\u6a21\u7cca\u5956\u676f\u6848\u4f8b\u4e2d\u3002", "note_en": "Go 1.18 is coming out soon, hopefully in a few weeks. It&#39;s a huge release with a lot to look forward to, but native fuzzing has a special place in my heart. (I&#39;m super-biased of course: before I  left Google, I worked with Katie Hockman and Roland Shoemaker to build the fuzzing system). Generics are cool too, I guess, but having fuzzing integrated into the  testing package and  go test will make fuzz testing more accessible to everyone which makes it easier to write secure, correct code in Go.\n Not much has been written yet on how Go&#39;s fuzzing system actually works, so I&#39;ll talk a bit about that here. If you&#39;d like to try it out,  Getting started with fuzzing is a great tutorial.\n  Fuzzing is a testing technique where the testing infrastructure calls your code with randomly generated inputs to check that it produces correct results or reasonable errors. Fuzz testing complements unit testing, where you test that your code produces the correct outputs, given a static set of inputs. Unit testing is limited in that you only really test with expected inputs; fuzz testing is great at discovering  unexpected inputs that expose weird behavior. A good fuzzing system also instruments the code being tested so it can efficiently generate inputs that expand code coverage.\n Fuzz testing is commonly used to check parsers and validators, especially anything used in a security context. Fuzzing is great at finding bugs that cause security issues, like invalid lengths in a binary encoding, truncated input, integer overflows, invalid unicode, and more.\n There are other ways to use fuzzing, too. For example, differential fuzzing verifies that two implementations of the same thing have the same behavior by feeding in the same random inputs to both implementations and checking that the outputs match. You can also use fuzzing for user interface &#34;monkey&#34; testing: the fuzzing engine could produce random taps, keystrokes, and clicks, and the test verifies that the app doesn&#39;t crash.\n  Fuzzing is not new to Go.  go-fuzz is probably the most widely used tool today, and we certainly borrowed from its design when developing native fuzzing. The new thing in Go 1.18 is that fuzzing is integrated directly into  go test and the  testing package. The interface is very similar to the testing interface,   testing.T.\n For example, if you have a function named  ParseSomething, you could write a fuzz test like the one below. This checks that for any random input,  ParseSomething either succeeds or returns a  ParseError.\n package  parser import (\t&#34; errors&#34;\t&#34; testing&#34;) var  seeds = [][] byte{\t nil,\t[] byte(&#34; 123&#34;),\t[] byte(&#34;( 12)&#34;),} func  FuzzParseSomething( f * testing. F) {\t for  _,  seed :=  range  seeds {\t\t f. Add( seed)\t}\t f. Fuzz( func( t * testing. T,  input [] byte) {\t\t err :=  ParseSomething( input)\t\t if  err ==  nil {\t\t\t return\t\t}\t\t if  parseErr := (* ParseError)( nil); ! errors. As( err, &amp; parseErr) {\t\t\t t. Fatal( err)\t\t}\t})}\n When  go test is run normally (without the  -fuzz flag),  FuzzParseSomething is treated like a unit test. The fuzz function provided to   F.Fuzz is called with inputs from the  seed corpus: inputs registered with   F.Add and inputs read from files in  testdata/corpus/FuzzParseSomething. If the fuzz function panics or calls   T.Fail, the test fails, and  go test exits with a non-zero status.\n   In this mode, the fuzzing system will call the fuzz function with randomly generated inputs, using the inputs from the seed corpus and a cached corpus as a starting point. Generated inputs that expand coverage are minimized and added to the cached corpus. Generated inputs that cause errors are minimized and added to the seed corpus, effectively becoming new regression test cases. Later  go test runs will fail until the problem is fixed, even when fuzzing is not enabled.\n Again, there&#39;s nothing really novel here compared with other systems. The strength is in the familiarity of the interface and its ease of use. Writing your first fuzz test is easy, since fuzzing follows the conventions of the  testing package. There&#39;s no need for everyone on a team to install and learn a new tool.\n  You may already know that  go test builds a test executable for each package being tested, then runs those executables to get test and benchmark results. Fuzzing follows this pattern, though there are some differences.\n When  go test is invoked with the  -fuzz flag,  go test compiles the test executable with additional coverage instrumentation. The Go compiler already had instrumentation support for  libFuzzer, so we reused that. The compiler adds an 8-bit counter to each basic block. The counter is fast and approximate: it wraps on overflow, and there&#39;s no synchronization across threads. (We had to tell the race detector not to complain about writes to these counters). The counter data is used at run-time by the  internal/fuzz package, where most of the fuzzing logic is.\n After  go test builds an instrumented executable, it runs it as usual. This is called the  coordinator process. This process is started with most of the flags that were passed to  go test, including  -fuzz=pattern, which it uses to identify which target to fuzz; for now, only one target may be fuzzed per  go test invocation ( #46312). When that target calls   F.Fuzz, control is passed to   fuzz.CoordinateFuzzing, which initializes the fuzzing system and begins the coordinator event loop.\n The coordinator starts several  worker processes, which run the same test executable and perform the actual fuzzing. Workers are started with an undocumented command line flag that tells them to be workers. Fuzzing must be done in separate processes so that if a worker process crashes entirely, the coordinator can still find and record the input that caused the crash.\n  The coordinator communicates with each worker using an improvised JSON-based RPC protocol over a pair of pipes. The protocol is pretty basic because we didn&#39;t need anything sophisticated like gRPC, and we didn&#39;t want to introduce anything new into the standard library. Each worker also keeps some state in a memory mapped temporary file, shared with the coordinator. Mostly this is just an iteration count and random number generator state. If the worker crashes entirely, the coordinator can recover its state from shared memory without requiring the worker to politely send a message over the pipes first.\n After the coordinator starts the workers, it gathers baseline coverage by sending workers inputs from the seed corpus and the fuzzing cache corpus (in a subdirectory of  $GOCACHE). Each worker runs its given input, then reports back with a snapshot of its coverage counters. The coordinator coarsens and merges these counters into a combined coverage array.\n Next, the coordinator sends out inputs from the seed corpus and cached corpus for fuzzing: each worker is given an input and a copy of the baseline coverage array. Each worker then randomly mutates its input (flipping bits, deleting or inserting bytes, etc.) and calls the fuzz function. In order to reduce communication overhead, each worker can keep mutating and calling for 100 ms without further input from the coordinator. After each call, the worker checks whether an error was reported (with   T.Fail) or new coverage was found compared with the baseline coverage array. If so, the worker reports the &#34;interesting&#34; input back to the coordinator immediately.\n When the coordiantor receives an input that produces new coverage, it compares the worker&#39;s coverage to the current combined coverage array: it&#39;s possible that another worker already discovered an input that provides the same coverage. If so, the new input is discarded. If the new input actually does provide new coverage, the coordinator sends it back to a worker (perhaps a different worker) for minimization.  Minimization is like fuzzing, but the worker performs random mutations to create a smaller input that still provides at least some new coverage. Smaller inputs tend to be faster, so it&#39;s worth spending the time to minimize up front to make the fuzzing process faster later. The worker process reports back when it&#39;s done minimizing, even if it failed to find anything smaller. The coordinator adds the minimized input to the cached corpus and continues. Later on, the coordinator may send the minimized input out to workers for further fuzzing. This is how the fuzzing system adapts to find new coverage.\n When the coordinator receives an input that causes an error, it again sends the input back to workers for minimization. In this case, a worker attempts to find a smaller input that still causes an error, though not necessarily the same error. After the input is minimized, the coordinator saves it into  testdata/corpus/$FuzzTarget, shuts worker processes down gracefully, then exits with a non-zero status.\n  If a worker process crashes while fuzzing, the coordinator can recover the input that caused the crash using the input sent to the worker, and the worker&#39;s RNG state and iteration count (both left in shared memory). Crashing inputs are generally not minimized, since minimization is a highly stateful process, and each crash blows that state away. It is  theoretically possible but hasn&#39;t been done yet.\n Fuzzing usually continues until an error is discovered or the user interrupts the process by pressing Ctrl-C or the deadline set with the  -fuzztime flag is passed. The fuzzing engine handles interrupts gracefully, whether they are delivered to the coordinator or worker processes. For example, if a worker is interrupted while minimizing an input that caused an error, the coordinator will save the unminimized input.\n  I&#39;m very excited for this release, though I have to admit, Go&#39;s new fuzzing engine is still a ways from reaching feature and performance parity with other fuzzing systems. Many improvements are possible, but it&#39;s already in a useful state, and the API is stable. I&#39;m glad it&#39;s shipping now.\n You can find a list of  open issues on the issue tracker with the  fuzz label. Those with the  Go1.19 milestone are considered the highest priority, though issues may get reprioritized depending on user feedback and developer bandwidth.\n Anyway, go try it out, report bugs, and request features! If you find any good bugs in your own code (or someone else&#39;s!), add them to the  Fuzzing trophy case on the Go wiki.", "posttime": "2022-02-19 03:23:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7cfb\u7edf,fuzzing,\u8f93\u5165", "title": "Go\u65b0\u6a21\u7cca\u7cfb\u7edf\u7684\u5185\u90e8\u7ed3\u6784", "title_en": "Internals of Go's new fuzzing system", "transed": 1, "url": "https://jayconrod.com/posts/123/internals-of-go-s-new-fuzzing-system", "via": "", "real_tags": ["\u7cfb\u7edf", "fuzzing", "\u8f93\u5165"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074001, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Skip\u662f\u4e00\u79cd\u901a\u7528\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u8ddf\u8e2a\u526f\u4f5c\u7528\uff0c\u4ee5\u63d0\u4f9b\u5177\u6709\u53cd\u5e94\u5931\u6548\u3001\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u548c\u5b89\u5168\u5e76\u884c\u6027\u7684\u7f13\u5b58\uff0c\u4ee5\u53ca\u9ad8\u6548\u7684\u5783\u573e\u6536\u96c6\u3002Skip\u662f\u9759\u6001\u7c7b\u578b\u7684\uff0c\u4f7f\u7528LLVM\u63d0\u524d\u7f16\u8bd1\uff0c\u4ee5\u751f\u6210\u9ad8\u5ea6\u4f18\u5316\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u8df3\u8fc7&#39\uff1b\u5b83\u7684\u4e3b\u8981\u65b0\u8bed\u8a00\u529f\u80fd\u662f\u7cbe\u786e\u8ddf\u8e2a\u526f\u4f5c\u7528\uff0c\u5305\u62ec\u503c\u7684\u6613\u53d8\u6027\uff0c\u4ee5\u53ca\u533a\u5206\u975e\u786e\u5b9a\u6027\u6570\u636e\u6e90\u548c\u90a3\u4e9b\u53ef\u4ee5\u63d0\u4f9b\u53cd\u5e94\u6027\u5931\u6548\uff08\u5f53\u6570\u636e\u53d1\u751f\u53d8\u5316\u65f6\u544a\u8bc9Skip\uff09\u7684\u6570\u636e\u6e90\u3002\u5f53\u8df3\u8fc7&#39\uff1bs\u7c7b\u578b\u7684\u7cfb\u7edf\u53ef\u4ee5\u8bc1\u660e\u5728\u7ed9\u5b9a\u7684\u51fd\u6570\u8fb9\u754c\u4e0a\u6ca1\u6709\u526f\u4f5c\u7528\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u9009\u62e9\u5b89\u5168\u5730\u8bb0\u5fc6\u8be5\u8ba1\u7b97\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u786e\u4fdd\u5728\u57fa\u7840\u6570\u636e\u66f4\u6539\u65f6\u5148\u524d\u7f13\u5b58\u7684\u503c\u65e0\u6548\u3002\nSkip\u652f\u6301\u4e24\u79cd\u4e92\u8865\u7684\u5e76\u53d1\u7f16\u7a0b\u5f62\u5f0f\uff0c\u7531\u4e8eSkip#39\uff0c\u8fd9\u4e24\u79cd\u5f62\u5f0f\u90fd\u907f\u514d\u4e86\u5e38\u89c1\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff1b\u8fd9\u662f\u526f\u4f5c\u7528\u7684\u8ffd\u8e2a\u3002\u9996\u5148\uff0cSkip\u652f\u6301\u5177\u6709async/await\u8bed\u6cd5\u7684\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u5f02\u6b65\u8ba1\u7b97\u3002\u611f\u8c22\u65af\u57fa\u666e&#39\uff1b\u5728\u8ddf\u8e2a\u526f\u4f5c\u7528\u65f6\uff0c\u5f02\u6b65\u8ba1\u7b97\u4e0d\u80fd\u5f15\u7528\u53ef\u53d8\u72b6\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b89\u5168\u5730\u5e76\u884c\u6267\u884c\uff08\u56e0\u6b64\u72ec\u7acb\u7684\u5f02\u6b65\u7ee7\u7eed\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff09\u3002\u5176\u6b21\uff0cSkip\u6709\u7528\u4e8e\u76f4\u63a5\u5e76\u884c\u8ba1\u7b97\u7684API\uff0c\u518d\u6b21\u4f7f\u7528\u5176\u5bf9\u526f\u4f5c\u7528\u7684\u8ddf\u8e2a\u6765\u9632\u6b62\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u4f8b\u5982\u5171\u4eab\u5bf9\u53ef\u53d8\u72b6\u6001\u7684\u8bbf\u95ee\u3002\nSkip\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6cd5\uff0c\u5c06\u5178\u578b\u5783\u573e\u6536\u96c6\u5668\u7684\u5404\u4e2a\u65b9\u9762\u4e0e\u66f4\u7b80\u5355\u7684\u7ebf\u6027\uff08bump\uff09\u5206\u914d\u65b9\u6848\u7ed3\u5408\u8d77\u6765\u3002\u611f\u8c22\u65af\u57fa\u666e&#39\uff1b\u5783\u573e\u6536\u96c6\u5668\u53ea\u9700\u626b\u63cf\u4ece\u8ba1\u7b97\u7684\u6839\u53ef\u4ee5\u5230\u8fbe\u7684\u5185\u5b58\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7528\u53ef\u9884\u6d4b\u7684GC\u5f00\u9500\u7f16\u5199\u4ee3\u7801\u3002\nSkip\u7684\u7279\u70b9\u662f\u5c06\u529f\u80fd\u6027\u548c\u9762\u5411\u5bf9\u8c61\u98ce\u683c\u7684\u89c2\u70b9\u8fdb\u884c\u4e86\u56fa\u6267\u5df1\u89c1\u7684\u6df7\u5408\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u7ecf\u8fc7\u7cbe\u5fc3\u6574\u5408\uff0c\u5f62\u6210\u4e86\u4e00\u79cd\u8fde\u8d2f\u7684\u8bed\u8a00\u3002\u4e0e\u51fd\u6570\u5f0f\u8bed\u8a00\u4e00\u6837\uff0cSkip\u9762\u5411\u8868\u8fbe\u5f0f\uff0c\u652f\u6301\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3001\u6a21\u5f0f\u5339\u914d\u3001\u7b80\u5355\u7684lambda\u3001\u9ad8\u9636\u51fd\u6570\uff0c\u4ee5\u53ca\uff08\u53ef\u9009\uff09\u5f3a\u5236\u6267\u884c\u7eaf/\u5f15\u7528\u900f\u660e\u7684API\u8fb9\u754c\u3002\u4e0e\u547d\u4ee4\u5f0f/OO\u8bed\u8a00\u4e00\u6837\uff0cSkip\u652f\u6301\u5177\u6709\u7ee7\u627f\u3001\u53ef\u53d8\u5bf9\u8c61\u3001\u5faa\u73af\u548c\u65e9\u671f\u8fd4\u56de\u7684\u7c7b\u3002Skip\u8fd8\u7ed3\u5408\u4e86\u201c\u7cfb\u7edf\u201d\u8bed\u8a00\u7684\u601d\u60f3\uff0c\u4ee5\u652f\u6301\u4f4e\u5f00\u9500\u62bd\u8c61\u3001\u901a\u8fc7\u503c\u7c7b\u7d27\u51d1\u7684\u5bf9\u8c61\u5185\u5b58\u5e03\u5c40\uff0c\u4ee5\u53ca\u901a\u8fc7\u9759\u6001\u65b9\u6cd5\u5206\u6d3e\u786e\u4fdd\u4ee3\u7801\u4e13\u95e8\u5316\u7684\u6a21\u5f0f\u3002\nSkip\u4ece\u4e00\u5f00\u59cb\u5c31\u88ab\u8bbe\u8ba1\u4e3a\u652f\u6301\u4f18\u79c0\u7684\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\uff0c\u5176\u5feb\u901f\u7684\u8fed\u4ee3\u901f\u5ea6\u901a\u5e38\u4e0e\u52a8\u6001\u8bed\u8a00\u76f8\u5173\u3002\u7f16\u8bd1\u5668\u652f\u6301\u589e\u91cf\u7c7b\u578b\u68c0\u67e5\uff08alpha\u7248\u672c\u7684IDE\u63d2\u4ef6\u5728\u952e\u5165\u65f6\u63d0\u4f9b\u51e0\u4e4e\u5373\u65f6\u7684\u9519\u8bef\uff09\uff0c\u63d0\u4f9b\u5e38\u89c1\u8bed\u6cd5\u9519\u8bef\u7684\u63d0\u793a\uff0c\u5e2e\u52a9\u65b0\u624b\u5b66\u4e60\u8be5\u8bed\u8a00\uff0c\u8bc6\u522b\u65b9\u6cd5/\u7c7b\u540d\u7684\u5c0f\u9519\u8bef\uff0c\u751a\u81f3\u8bc6\u522b\u8df3\u8fc7\u7684\u5e38\u89c1\u66ff\u4ee3\u65b9\u6cd5&#39\uff1bs\u6807\u51c6\u5e93\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u5e76\u5728Skip\u4e2d\u5efa\u8bae\u6b63\u786e\u7684\u540d\u79f0\u3002Skip\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u7a0b\u5e8f\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u6837\u5f0f\u7684\u4e00\u81f4\u6027\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8fd0\u884ccodemods\u7684\u5de5\u5177\u3002\nSkip\u7531\u4e00\u4e2a\u7ecf\u9a8c\u4e30\u5bcc\u7684\u56e2\u961f\u8bbe\u8ba1\uff0c\u5176\u4e2d\u5305\u62ecActionScript\u3001C#\u3001Flow\u3001Hack\u3001HHVM\u3001Prettier\u3001React Native\u548cRelay\u7684\u9ad8\u7ea7\u8d21\u732e\u8005\u3002", "note_en": "Skip is a general-purpose programming language that tracks side effects to provide caching with reactive invalidation, ergonomic and safe parallelism, and efficient garbage collection. Skip is statically typed and ahead-of-time compiled using LLVM to produce highly optimized executables.\n Skip&#39;s main new language feature is its precise tracking of side effects, including both mutability of values as well as distinguishing between non-deterministic data sources and those that can provide reactive invalidations (telling Skip when data has changed). When Skip&#39;s type system can prove the absence of side effects at a given function boundary, developers can opt-in to safely memoizing that computation, with the runtime ensuring that previously cached values are invalidated when underlying data changes.\n Skip supports two complementary forms of concurrent programming, both of which avoid the usual thread safety issues thanks to Skip&#39;s tracking of side effects. First, Skip supports ergonomic asynchronous computation with async/await syntax. Thanks to Skip&#39;s tracking of side effects, asynchronous computations cannot refer to mutable state and are therefore safe to execute in parallel (so independent async continuations can continue in parallel). Second, Skip has APIs for direct parallel computation, again using its tracking of side effects to prevent thread safety issues such as shared access to mutable state.\n Skip uses a novel approach to memory management that combines aspects of typical garbage collectors with more straightforward linear (bump) allocation schemes. Thanks to Skip&#39;s tracking of side effects the garbage collector only has to scan memory reachable from the root of a computation. In practical terms, this means that developers can write code with predictable GC overhead.\n Skip features an opinionated mix of ideas from functional and object-oriented styles, all carefully integrated to form a cohesive language. Like functional languages, Skip is expression-oriented and supports abstract data types, pattern matching, easy lambdas, higher-order functions, and (optionally) enforcing pure/referentially-transparent API boundaries. Like imperative/OO languages, Skip supports classes with inheritance, mutable objects, loops, and early returns. Skip also incorporates ideas from \u201csystems\u201d languages to support low-overhead abstractions, compact memory layout of objects via value classes, and patterns that ensure code specialization with static method dispatch.\n Skip was designed from the start to support a great developer experience, with a rapid iteration speed more commonly associated with dynamic languages. The compiler supports incremental type-checking (with alpha versions of IDE plugins providing near-instantaneous errors as you type), provides hints for common syntax mistakes and to help newcomers learn the language, recognizes small typos of method/class names, and even recognizes common alternatives to Skip&#39;s standard library method names and suggests the correct name in Skip. Skip also features a code-formatter to ensure consistent code style and a tool for running codemods.\n Skip was designed by an experienced team including senior contributors to ActionScript, C#, Flow, Hack, HHVM, Prettier, React Native, and Relay.", "posttime": "2022-02-19 03:21:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u7528\u4e8e,skip", "title": "Skip\uff1a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u8df3\u8fc7\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u5185\u5bb9", "title_en": "Skip: A programming language to skip the things you have already computed", "transed": 1, "url": "http://skiplang.com/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7528\u4e8e", "skip"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u8fb9\u542c\u98ce\u9669\u5546\u4e1aep\u3002642\u5e74\uff0c\u6211\u4e86\u89e3\u5230\u4e00\u4e2a\u50f5\u5c38\u7f51\u7edc\u591a\u5e74\u6765\u4e00\u76f4\u5728\u5229\u7528TP-Link\u8def\u7531\u5668\u4e2d\u7684\u6f0f\u6d1e\u63d0\u4f9b\u77ed\u4fe1\u670d\u52a1\u3002\u5229\u7528\u8be5\u6f0f\u6d1e\uff0c\u50f5\u5c38\u7f51\u7edc\u8fd0\u8425\u5546\u53ef\u4ee5\u901a\u8fc7\u4ed6\u4eba\u7684\u8d26\u5355\u53d1\u9001\u77ed\u4fe1\uff0c\u8fd0\u8425\u5546\u5c06\u6b64\u529f\u80fd\u5356\u7ed9\u5176\u4ed6\u4eba\uff0c\u5305\u62ec\u5176\u4ed6\u7f6a\u72af\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u5f53\u4f60\u6536\u5230\u865a\u5047\u4fe1\u606f\uff0c\u901a\u77e5\u4f60\u6d77\u5173\u6709\u865a\u5047\u5305\u88f9\u65f6\uff0c\u4e5f\u4f1a\u4f7f\u7528\u7c7b\u4f3c\u7684\u670d\u52a1\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u5bb6\u7279\u5b9a\u7684\u50f5\u5c38\u7f51\u7edc\u8fd0\u8425\u5546\u80fd\u8d5a\u591a\u5c11\u94b1\uff0c\u4f46\u80af\u5b9a\u6709\u9700\u6c42\u3002\n\u6211\u4e13\u95e8\u4e3a\u6211\u7684wardialing\u9879\u76ee\u8d2d\u4e70\u7684\u76f8\u5bf9\u4fbf\u5b9c\u7684GoIP-1 GSM\u7f51\u5173\u8bbe\u5907\u5177\u6709\u53d1\u9001\u77ed\u4fe1\u548c\u5728PSTN\u7f51\u7edc\u4e0a\u62e8\u6253\u7535\u8bdd\u7684\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u7834\u574f\u5b83\u5c06\u4f7f\u9ed1\u5ba2\u4e0d\u4ec5\u6709\u53ef\u80fd\u53d1\u9001\u865a\u5047\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u62e8\u6253\uff08\u8bc8\u9a97\uff09\u7535\u8bdd\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u8bbe\u5907\u4e5f\u4e0d\u4f1a\u592a\u5b89\u5168\uff0c\u56e0\u6b64\u9ed1\u5ba2\u653b\u51fb\u7684\u65f6\u95f4\u6295\u5165\u53ef\u80fd\u5f88\u5c0f\u3002\u529f\u80fd\u5f3a\u5927\u4e14\u6613\u4e8e\u9ed1\u5ba2\u653b\u51fb\u7684\u8bbe\u5907\u5c06\u662f\u77ed\u4fe1\u670d\u52a1\u8fd0\u8425\u5546\u7684\u7406\u60f3\u76ee\u6807\u3002\n\u51fa\u4e8e\u5bf9\u5546\u4e1a\u524d\u666f\u7684\u5174\u8da3\uff0c\u6211\u4eec\u9009\u62e9\u5728\u201c\u9ed1\u5ba2\u5468\u672b\u201d\u4e0e\u6211\u7684\u597d\u670b\u53cb\u517c\u540c\u4e8b\u62c9\u897f\u00b7\u79d1\u970d\u5b81\u4e00\u8d77\u8c03\u67e5\u8be5\u8bbe\u5907\u3002\u7ecf\u8fc7\u4e00\u4e2a\u5468\u672b\u5750\u5728\u4e00\u4e2a\u9ed1\u6697\u7684\u516c\u5bd3\u91cc\u8fdb\u884c\u9ed1\u5ba2\u653b\u51fb\uff0c\u5076\u5c14\u6b65\u884c\u5230\u6700\u8fd1\u7684\u5feb\u9910\u5e97\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u8be5\u8bbe\u5907\u4e0a\u7684\u591a\u4e2a\u6f0f\u6d1e\uff0c\u5176\u4e2d\u4e00\u4e9b\u6f0f\u6d1e\u4f7f\u6211\u4eec\u80fd\u591f\u4e3a\u4e86\u53d1\u9001\u77ed\u4fe1\u6216\u514d\u8d39\u62e8\u6253\u7535\u8bdd\u800c\u7834\u574f\u8fd9\u4e9b\u8bbe\u5907\u3002\n\u9ed1\u5ba2\u5468\u672b\u662f\u6211\u4eec\u5728\u5b89\u5168\u9886\u57df\u5de5\u4f5c\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u5f00\u59cb\u4e0e\u62c9\u897f\u4e00\u8d77\u5ea6\u8fc7\u7684\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e9b\u6211\u4eec\u53cc\u65b9\u90fd\u611f\u5174\u8da3\u7684\u76ee\u6807\uff0c\u5728\u4e00\u4e2a\u5468\u672b\uff0c\u5728\u62ab\u8428\u548c\u5bff\u53f8\u7684\u63a8\u52a8\u4e0b\uff0c\u5728\u540c\u4e00\u4e2a\u5c4b\u6a90\u4e0b\u5de5\u4f5c\u3002\n\u5728\u8fd9\u4e9b\u5468\u672b\uff0c\u6211\u4eec\u5728\u4eab\u53d7\u9ed1\u5ba2\u653b\u51fb\u4e50\u8da3\u7684\u540c\u65f6\uff0c\u4e86\u89e3\u751f\u6d3b\uff0c\u76f8\u4e92\u5b66\u4e60\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u9ed1\u5ba2\u653b\u51fb\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5f00\u53d1\u67d0\u79cd\u4e1c\u897f\u7684\u6982\u5ff5\u8bc1\u660e\uff08PoC\uff09\u3002\u6709\u65f6\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u6709\u65f6\u6211\u4eec\u6ca1\u6709\uff0c\u4f46\u6211\u4eec\u603b\u662f\u5b66\u4e60\u65b0\u7684\u4e1c\u897f\u3002\u6211\u70ed\u60c5\u5730\u5411\u90a3\u4e9b\u6709\u5e78\u4e0e\u670b\u53cb\u5206\u4eab\u4e66\u5446\u5b50\u5174\u8da3\u7684\u4eba\u63a8\u8350\u8fd9\u79cd\u5a31\u4e50\u5f62\u5f0f\u3002\n2017\u5e74\u521d\uff0cTrustwave\u53d1\u73b0\u4e86\u4e00\u4e2a\u79d8\u5bc6\u7684\u540e\u95e8telnet\u5e10\u6237\u201cdbladm\u201d\uff0c\u8be5\u5e10\u6237\u6388\u4e88\u8bbe\u5907\u4e0a\u7684root shell\u6743\u9650\u3002\u8be5\u5e10\u6237\u53d7\u5230\u81ea\u5b9a\u4e49\u8d28\u8be2\u54cd\u5e94\u7b97\u6cd5\u7684\u4fdd\u62a4\uff0c\u8be5\u7b97\u6cd5\u53cd\u8fc7\u6765\u53c8\u4f9d\u8d56\u4e8e\u9690\u853d\u6027\u6765\u786e\u4fdd\u5b89\u5168\u6027\u3002\u8fd9\u6837\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u767b\u5f55\u3002\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8be5\u5e10\u6237\u4f3c\u4e4e\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u6311\u6218-\u54cd\u5e94\u7b97\u6cd5\u5df2\u7ecf\u66f4\u6539\u3002Trustwave\u4ece\u4e00\u4e2a\u5347\u7ea7\u5305\u4e2d\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u53cd\u5411\u5de5\u7a0b\uff0c\u4f46\u6839\u636e\u6211\u4eec\u7684\u7814\u7a76\uff0c\u5b83\u4e0d\u518d\u662f\u66f4\u65b0\u7684\u5347\u7ea7\u5305\u7684\u4e00\u90e8\u5206\u3002\u4e5f\u8bb8\u5b83\u53ef\u4ee5\u7528\u7279\u6b8a\u5de5\u5177\u4ece\u8bbe\u5907\u4e2d\u63d0\u53d6\u51fa\u6765\uff1f\u7136\u800c\uff0c\u6211\u4eec\u7f3a\u4e4f\u5de5\u5177\u3002\n2017\u5e74\u672b\uff0c\u4f5c\u8005SecurityTeam\u5411\u6f0f\u6d1e\u6570\u636e\u5e93\u63d0\u4ea4\u4e86\u4e00\u540d\u72ec\u7acb\u5b89\u5168\u7814\u7a76\u4eba\u5458\u62a5\u544a\u7684\u5f71\u54cdGoIP\u8bbe\u5907\u4e0aweb\u9762\u677f\u7684\u591a\u4e2a\u6f0f\u6d1e\u3002\u8fd9\u4e9b\u6f0f\u6d1e\u5141\u8bb8\u4e0b\u8f7d\u8bbe\u5907\u7684\u914d\u7f6e\u4ee5\u53ca\u6240\u6709\u51ed\u636e\uff0c\u5e76\u5728\u8bbe\u5907\u4e0a\u6267\u884c\u547d\u4ee4\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u5141\u8bb8\u5b8c\u5168\u63a5\u7ba1\u8bbe\u5907\u3002\u8fd9\u4e9b\u6f0f\u6d1e\u5df2\u7ecf\u4fee\u590d\uff0c\u5bf9\u6211\u4eec\u7684GoIP-1\u8bbe\u5907\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u3002\n\u9664\u4e86\u5177\u4f53\u7684\u6f0f\u6d1e\u5916\uff0cGoIP\u8bbe\u5907\u8fd8\u5b58\u5728\u8584\u5f31\u7684\u9ed8\u8ba4\u51ed\u636e\uff0c\u7528\u6237\u4e0d\u5fc5\u88ab\u8feb\u66f4\u6539\u8fd9\u4e9b\u51ed\u636e\u3002\u4e0e\u8fc7\u53bb\u7684\u6f0f\u6d1e\uff08\u4ee5\u53ca\u672c\u535a\u6587\u4e2d\u62ab\u9732\u7684\u65b0\u6f0f\u6d1e\uff09\u4e00\u6837\uff0c\u5f31\u51ed\u636e\u5f88\u53ef\u80fd\u88ab\u7528\u4e8e\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u76f8\u540c\u6570\u91cf\u7684GoIP\u8bbe\u5907\u3002\nGoIP-1\u8bbe\u5907\u7684\u56fa\u4ef6\u7248\u672c\u4e3aGHSFVT-1.1-67-5 M26FBR03A02 RSIM\u3002\u5728\u6d4b\u8bd5\u4e4b\u524d\uff0c\u8bbe\u5907\u88ab\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u914d\u7f6e\uff0cLAN\u63a5\u53e3\u8bbe\u7f6e\u4e86\u9759\u6001IP\u3002\n\u201cPC\u201d\u7aef\u53e3\u4e0a\u7684\u8bbe\u5907IP\u5730\u5740\u4e3a192.168.8.1\uff0c\u201cLAN\u201d\u7aef\u53e3\u4e0a\u7684\u8bbe\u5907IP\u5730\u5740\u4e3a192.168.9.1\u3002\u56e0\u6b64\uff0cPOC\u6307\u5411\u8fd9\u4e9bIP\u5730\u5740\u3002\u6839\u636e\u6211\u4eec\u7684\u5206\u6790\uff0c\u6240\u6709\u6f0f\u6d1e\u90fd\u5b58\u5728\u4e8e\u8bbe\u5907\u7684\u4e24\u4e2a\u63a5\u53e3\u4e2d\u3002\n\u53ef\u80fd\u5bf9\u653b\u51fb\u8005\u6709\u7528\u7684\u4fe1\u606f\u4f1a\u4ece\u8bbe\u5907\u6cc4\u9732\u7ed9\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u3002\n\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4ee5\u4e0bURL\u4f1a\u663e\u793a\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7528\u6237\u7684ping\u65e5\u5fd7\u3002\u4ec5\u5f53\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u540e\u5df2\u4f7f\u7528ping\u529f\u80fd\u65f6\uff0c\u624d\u4f1a\u663e\u793a\u6b64\u6587\u4ef6\u3002\n\u8bbe\u5907\u4e0a\u7684TCP\u7aef\u53e32096\u662f\u4e00\u4e2a\u8c03\u8bd5\u7aef\u53e3\uff0c\u5141\u8bb8\u7a83\u542c\u8bb8\u591a\u4e8b\u4ef6\u3002\u6ca1\u6709\u8eab\u4efd\u9a8c\u8bc1\uff0c\u56e0\u6b64\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u7b80\u5355\u5730\u8fde\u63a5\u5230\u7aef\u53e3\u5e76\u5f00\u59cb\u79d8\u5bc6\u6536\u96c6\u4fe1\u606f\u3002\u4e5f\u6ca1\u6709\u52a0\u5bc6\u3002\n\u7ba1\u7406\u5458\u5728web\u9762\u677f\u4e2d\u6d4f\u89c8\u5230\u8be5\u89c6\u56fe\u65f6\u6536\u5230\u7684\u6240\u6709SMS\u6d88\u606f\u7684\u5185\u5bb9\n\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u663e\u793a\u4e86\u4ece\u7aef\u53e3\u63a5\u6536\u5230\u7684\u6d88\u606f\u3002\u5728\u8fd9\u4e9b\u4fe1\u606f\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u6761\u5185\u5bb9\u4e3a\u201cHello world\uff01\u201d\u7684\u77ed\u4fe1\u53d1\u9001\u5230\u4fee\u6539\u8fc7\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u5e76\u5bf9\u4fee\u6539\u8fc7\u7684\u7535\u8bdd\u53f7\u7801\u8fdb\u884c5\u79d2\u949f\u7684\u6d4b\u8bd5\u901a\u8bdd\u3002\nweb\u9762\u677f\u4e2d\u5b58\u5728\u4e24\u4e2a\u672c\u5730\u6587\u4ef6\u5305\u542b\uff08LFI\uff09\u6f0f\u6d1e\uff0c\u5141\u8bb8\u5728\u65e0\u9700\u8eab\u4efd\u9a8c\u8bc1\u7684\u60c5\u51b5\u4e0b\u83b7\u53d6\u5bf9\u653b\u51fb\u8005\u6709\u7528\u7684\u6570\u636e\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4ee5\u4e0bURL\u5c06\u663e\u793a\u8bbe\u5907\u7684passwd\u6587\u4ef6\u3002\n\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u901a\u8fc7\u83b7\u53d6\u6587\u4ef6/dev/mtdblock/5\u83b7\u53d6\u5e8f\u5217\u53f7\u3001\u56fa\u4ef6\u7248\u672c\u548c\u6a21\u5757\u7248\u672c\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u8bf7\u6c42\u7684\u6700\u654f\u611f\u6587\u4ef6\u662f\u914d\u7f6e\u6587\u4ef6\u3002dat\uff0c\u5b83\u4ee5\u660e\u6587\u5f62\u5f0f\u5b58\u50a8\u8bbe\u5907\u7684\u6574\u4e2a\u914d\u7f6e\u3002\u4f8b\u5982\uff0c\u5b83\u5305\u62ec\u8bbe\u5907\u7684\u6240\u6709\u51ed\u8bc1\uff0c\u5305\u62ecSIP\u3001H.323\u548cweb\u9762\u677f\u3002\u53ef\u4ee5\u4ece/tmp/config\u8bf7\u6c42\u6b64\u6587\u4ef6\u3002dat\u5982\u679c\u5df2\u4f7f\u7528\u914d\u7f6e\u5907\u4efd\u529f\u80fd\u3002\u6839\u636eSecurityTeam\u7684\u62a5\u544a\uff0c\u4ee5\u524d\u7684/dev/mtdblock/5\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u4fe1\u606f\u3002\u6839\u636e\u6211\u4eec\u7684\u6d4b\u8bd5\uff0c\u6570\u636e\u4e0d\u518d\u5b58\u5728\u4e8e\u8fd9\u4e2a\u7248\u672c\u7684\u56fa\u4ef6\u4e2d\u3002\n\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4ee5\u4e0bURL\u5c06\u83b7\u53d6\u914d\u7f6e\u3002\u81ea\u4e0a\u6b21\u91cd\u65b0\u542f\u52a8\u4ee5\u6765\u4f7f\u7528\u914d\u7f6e\u5907\u4efd\u529f\u80fd\u7684\u8bbe\u5907\u7684dat\u6587\u4ef6\uff1a\nweb\u9762\u677f\u4e2d\u5b58\u5728\u7cfb\u7edf\u6027\u7684\u8de8\u7ad9\u70b9\u811a\u672c\uff08XSS\uff09\u6f0f\u6d1e\u3002\u653b\u51fb\u8005\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u5e76\u4e0d\u662f\u8bbf\u95ee\u8bbe\u5907\u77ed\u4fe1\u53d1\u9001\u6216\u547c\u53eb\u529f\u80fd\u7684\u6700\u76f4\u63a5\u65b9\u5f0f\uff0c\u56e0\u6b64\u6211\u53ea\u62a5\u544a\u6613\u53d7\u653b\u51fb\u7684\u8def\u5f84\u548c\u76f8\u5e94\u53c2\u6570\u3002\n\u4ee5\u4e0b\u8def\u5f84\u5305\u542b\u6613\u53d7\u8de8\u7ad9\u70b9\u811a\u672c\u5f71\u54cd\u7684\u53c2\u6570\u3002\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9700\u51c0\u5316\u5373\u53ef\u53cd\u6620\u7684\u8f93\u5165\uff0c\u4ece\u800c\u4f7fJavascript\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002\u7136\u800c\uff0c\u8f93\u5165\u53ea\u53cd\u6620\u4e00\u6b21\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4fdd\u5b58\u5728\u4efb\u4f55\u5730\u65b9\u3002\u6bcf\u4e2a\u8def\u5f84\u4e2d\u7684\u6613\u53d7\u653b\u51fb\u53c2\u6570\u5982\u4e0b\u8868\u6240\u793a\u3002\n\u4ee5\u4e0b\u8def\u5f84\u5305\u542b\u6613\u53d7\u5b58\u50a8\u7684\u8de8\u7ad9\u70b9\u811a\u672c\u653b\u51fb\u7684\u53c2\u6570\u3002\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9700\u51c0\u5316\u5c31\u80fd\u53cd\u5c04\u56de\u6765\u7684\u8f93\u5165\uff0c\u4ece\u800c\u4f7fJavascript\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002\u8f93\u5165\u7531web\u9762\u677f\u5b58\u50a8\uff0c\u5e76\u5728\u7528\u6237\u6bcf\u6b21\u8bbf\u95ee\u67d0\u4e2a\u89c6\u56fe\u65f6\u53cd\u6620\u7ed9\u7528\u6237\uff0c\u76f4\u5230\u7528\u6237\u5220\u9664\u6216\u8986\u76d6\u6076\u610f\u8f93\u5165\u3002\u6bcf\u4e2a\u8def\u5f84\u4e2d\u7684\u6613\u53d7\u653b\u51fb\u53c2\u6570\u5982\u4e0b\u8868\u6240\u793a\u3002\n\u4fe1\u606f\u62ab\u9732\u5c0f\u8282\u4e2d\u4f7f\u7528\u7684\u76f8\u540cLFI\u6f0f\u6d1e\u53ef\u7528\u4e8e\u5b8c\u5168\u62d2\u7eddweb\u9762\u677f\u7684\u670d\u52a1\u3002\u8bf7\u6c42\u6587\u4ef6/etc/ipin\u5c06\u5bfc\u81f4web\u9762\u677f\u53d8\u5f97\u975e\u5e38\u6162\uff0c\u65e0\u6cd5\u518d\u4f7f\u7528\u3002\u4efb\u4f55\u5176\u4ed6\u7528\u6237\u4e5f\u5c06\u65e0\u6cd5\u4f7f\u7528web\u9762\u677f\u3002\u5229\u7528\u6b64\u6f0f\u6d1e\u4e0d\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\u3002\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u5c06\u4fee\u590d\u8be5\u95ee\u9898\u3002\n\u653b\u51fb\u8005\u5982\u4f55\u5229\u7528\u8fd9\u4e9b\u53d1\u73b0\u53d1\u9001\u514d\u8d39\u77ed\u4fe1\u6216\u62e8\u6253\u514d\u8d39\u7535\u8bdd\uff1f\n\u653b\u51fb\u8005\u7b80\u4ecb\u6211\u4eec\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4eba\u8c01\u53ef\u4ee5\u8fde\u63a5\u5230GOIP-1\u8bbe\u5907\u4ece\u4e92\u8054\u7f51\u4e0a\u53ea\u6709\u516c\u5f00\u7684\u53ef\u7528\u4fe1\u606f\uff0c\u6ca1\u6709\u4efb\u4f55\u66f4\u9ad8\u7ea7\u522b\u7684\u8bbf\u95ee\u8bbe\u5907\u3002\u6211\u4eec\u7684\u653b\u51fb\u8005\u8ba1\u5212\u4f7f\u7528GoIP-1\u8bbe\u5907\u4ee5\u670d\u52a1\u7684\u5f62\u5f0f\u542f\u52a8\u77ed\u4fe1\u6216\u8bc8\u9a97\u547c\u53eb\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u8bbf\u95ee\u7ea7\u522b\u5df2\u7ecf\u8fbe\u5230\u4e86\u5141\u8bb8\u7684\u7ea7\u522b\u3002\n\u57fa\u4e8e\u6211\u4eec\u7684\u5206\u6790\uff0c\u8fd9\u4e2a\u535a\u5ba2\u5e16\u5b50\u4e2d\u62ab\u9732\u7684\u6f0f\u6d1e\u4e3a\u6211\u4eec\u8003\u8651\u7684\u653b\u51fb\u8005\u521b\u5efa\u4e86\u4e24\u4e2a\u653b\u51fb\u7684\u65b0\u9014\u5f84\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528LFI\u6f0f\u6d1e\u83b7\u53d6\u8bbe\u5907\u7684\u51ed\u636e\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u51ed\u636e\u7ee7\u7eed\u4f7f\u7528\u8bbe\u5907\u3002\u4ed6\u4eec\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u5229\u7528XSS\u6f0f\u6d1e\u83b7\u5f97\u76f8\u540c\u7684\u51ed\u636e\u3002\n\u8981\u5229\u7528LFI\u6f0f\u6d1e\u4ece\u8bbe\u5907\u83b7\u53d6\u63d0\u53d6\u51ed\u636e\uff0c\u5fc5\u987b\u5728\u4e0a\u6b21\u91cd\u65b0\u542f\u52a8\u540e\u4fdd\u5b58GoIP\u914d\u7f6e\u3002\u5f88\u96be\u4f30\u8ba1\u4fdd\u5b58\u914d\u7f6e\u7684\u9891\u7387\uff0c\u4ece\u800c\u7f29\u5c0f\u4e86\u5229\u7528\u7a97\u53e3\u3002\u5229\u7528XSS\u6f0f\u6d1e\u9700\u8981\u4e0e\u53d7\u5bb3\u8005\u4e92\u52a8\uff0c\u8fd9\u4f7f\u5f97\u5229\u7528\u6f0f\u6d1e\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u5982\u679c\u8fd9\u4e9b\u653b\u51fb\u5931\u8d25\uff0c\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u8bc9\u8bf8\u51ed\u8bc1\u66b4\u529b\u653b\u51fb\u3002\u6709\u4e09\u4e2a\u77e5\u540d\u7528\u6237\u7684\u9ed8\u8ba4\u5bc6\u7801\u8f83\u5f31\uff0cweb\u9762\u677f\u4f7f\u7528\u57fa\u672c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u4e0d\u53d7\u66b4\u529b\u653b\u51fb\u7684\u4fdd\u62a4\u3002\u8fd9\u4f7f\u5f97\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u6709\u6548\u7684\u653b\u51fb\u5411\u91cf\u3002\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u4e9b\u53d1\u73b0\u662f\u5426\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6GoIP\u8bbe\u5907\u3002\u540c\u4e00\u5bb6\u5236\u9020\u5546\u63d0\u4f9b\u6700\u591a32\u4e2a\u4fe1\u9053\u7684GSM\u7f51\u5173\u3002\u5728\u6b64\u8bbe\u7f6e\u4e2d\uff0c\u9891\u9053\u6570\u8868\u793a\u53ef\u4ee5\u63d2\u5165\u8bbe\u5907\u7684SIM\u5361\u6570\u91cf\u3001\u53ef\u4ee5\u540c\u65f6\u62e8\u6253\u7684\u7535\u8bdd\u6570\u91cf\uff0c\u4ee5\u53ca\u53ef\u4ee5\u53d1\u9001SMS\u6d88\u606f\u7684\u4e0d\u540c\u7535\u8bdd\u53f7\u7801\u7684\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u901a\u9053\u8d8a\u591a\uff0c\u8bbe\u5907\u5bf9\u9ed1\u5ba2\u5c31\u8d8a\u6709\u7528\u3002\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u8bbe\u5907\u53ea\u6709\u4e00\u4e2a\u901a\u9053\uff0c\u56e0\u6b64\u662f\u6700\u4e0d\u6709\u7528\u7684\u3002\n\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4e0d\u8981\u5141\u8bb8\u4ece\u516c\u5171\u4e92\u8054\u7f51\u6216\u4efb\u4f55\u4e0d\u53d7\u4fe1\u4efb\u7684\u8bbe\u5907\u4f20\u8f93\u5230\u6b64\u8bbe\u5907\u4e0a\u7684\u4efb\u4f55\u7aef\u53e3\u3002\u9274\u4e8e\u6f0f\u6d1e\u8bb0\u5f55\u548c\u6211\u4eec\u8c03\u67e5\u7684\u65f6\u95f4\u6709\u9650\uff0c\u8be5\u8bbe\u5907\u4fdd\u8bc1\u5305\u542b\u66f4\u591a\u6f0f\u6d1e\u3002\u9274\u4e8e\u9ed1\u5ba2\u653b\u51fb\u5176\u4e2d\u4e00\u53f0\u8bbe\u5907\u7684\u660e\u663e\u4ef7\u503c\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u4f1a\u6210\u4e3a\u653b\u51fb\u76ee\u6807\u3002\n\u8fd9\u4e9b\u6f0f\u6d1e\u57282021\u5e7411\u67087\u65e5\u88ab\u62a5\u544a\u7ed9\u8bbe\u5907\u5236\u9020\u5546DBLTEK\uff0c\u7ed3\u679c\u5f97\u5230\u4e86\u786e\u8ba4\u3002Dbltek\u6709\u8d85\u8fc790\u5929\u7684\u65f6\u95f4\u6765\u4fee\u590d\u8fd9\u4e9b\u53d1\u73b0\uff0c\u4ee5\u53ca\u5bf9\u4fee\u590d\u7684\u652f\u6301\u3002\n\u62a5\u544a\u53d1\u5e03\u540e\uff0cDbltek\u5c1a\u672a\u53d1\u5e03\u65b0\u7248\u672c\u7684GoIP-1\u56fa\u4ef6\u3002\u7136\u800c\uff0c\u770b\u770b\u56fa\u4ef6\u53d1\u5e03\u9875\u9762\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u6d4b\u8bd5\u7684\u90a3\u4e2a\u5e76\u4e0d\u662f\u6700\u65b0\u3001\u6700\u68d2\u7684\u3002\u6211\u4eec\u6ca1\u6709\u9a8c\u8bc1\u6700\u65b0\u56fa\u4ef6\u4e2d\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\n\u8be5\u8bbe\u5907\u6ca1\u6709\u81ea\u52a8\u66f4\u65b0\uff0c\u66f4\u65b0\u8fc7\u7a0b\u4e5f\u4e0d\u662f\u5b8c\u5168\u76f4\u63a5\u7684\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u4ecd\u5728\u9500\u552e\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\uff0c\u5e76\u4e14\u4e0d\u4f1a\u66f4\u65b0\u6240\u6709\u8bbe\u5907\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u9009\u62e9\u62ab\u9732\u8fd9\u4e9b\u7ec6\u8282\uff0c\u4ee5\u6566\u4fc3\u5b9e\u65bd\u81ea\u52a8\u66f4\u65b0\uff0c\u6216\u81f3\u5c11\u7b80\u5316\u66f4\u65b0\u8fc7\u7a0b\u3002\u6211\u4eec\u6700\u5177\u5f71\u54cd\u529b\u7684\u53d1\u73b0\u4e5f\u6709\u4e00\u4e2a\u6709\u9650\u7684\u5f00\u53d1\u7a97\u53e3\uff0c\u56e0\u6b64\u4e0d\u592a\u53ef\u80fd\u5c06\u5927\u91cf\u8bbe\u5907\u7f6e\u4e8e\u5373\u65f6\u5371\u9669\u4e4b\u4e2d\u3002\u901a\u8fc7\u62ab\u9732\u4fe1\u606f\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u6559\u80b2\u6f5c\u5728\u7684\u8bbe\u5907\u8d2d\u4e70\u8005\u6709\u5173\u8bbe\u5907\u7684\u5371\u9669\u3002", "note_en": "While listening to  Risky Business ep. 642, I learned about  a botnet that has been abusing a vulnerability in TP-Link routers to provide SMS messaging as a service for years. The exploited vulnerability allowed the botnet operator to send SMS messages on someone else\u2019s bill and the operator sold this capability for others, including other criminals. Similar services are no doubt used when you receive smishing messages notifying you about false packages stuck in customs. It is not clear how much this specific botnet operator is making, but there is demand for sure.\n The relatively cheap GoIP-1 GSM gateway device I bought specifically for  my wardialing project has the functionality to send SMS messages and to make calls on the PSTN network. Thus, compromising it would grant a hacker not only the possibility to send smishing messages, but also to make (scam) calls. The device also did not come across as too secure by default so the time investment into hacking one might be small. A device that powerful and easily hackable would be an ideal target for the SMS messaging service operators.\n Intrigued by the business prospect we chose to investigate the device in our \u201chack weekend\u201d with my good friend and colleague  Lassi Korhonen. After a weekend of sitting in a dark apartment hacking and occasionally walking to the nearest fast food joint, we uncovered multiple vulnerabilities on the device, some of which enable compromising such devices for the purpose of sending SMS messages or making calls for free.\n   Hack weekends are something we started having together with Lassi once we had worked on the security field for some time. The idea is that we choose some target that interests us both and work on it under the same roof over a weekend fueled by pizza and sushi.\n During these weekends we catch up on life and learn from each other while having fun hacking. It doesn\u2019t have to be hacking though, we may also focus on developing a proof-of-concept (PoC) of something. Sometimes we find something, sometimes we don\u2019t, but we always learn something new. I warmly recommend this format of entertainment for those that are fortunate enough to share a nerdy interest with their friend.\n    In early 2017, Trustwave  found a secret backdoor telnet account, \u2018dbladm\u2019, that granted root shell on the device. This account was protected with a custom challenge-response algorithm which in turn relied on obscurity for security. Thus anyone could log in. In our testing, the account seemed to still exist, but the challenge-response algorithm had been changed. Trustwave had reverse-engineered the algorithm from an upgrade package, but based on our research it was no longer part of the newer upgrade packages. Perhaps it could have been extracted from the device with special tooling? We, however, lacked the tools.\n In late 2017 the author Securiteam has submitted  multiple vulnerabilities reported by an independent security researcher affecting the web panel on GoIP devices to  The Exploit Database. These vulnerabilities allow downloading the configuration of the device along with all credentials and executing commands on it. Thus they allow full takeover of the device. These vulnerabilities had since been fixed and were of no use against our GoIP-1 device.\n Aside from concrete vulnerabilities, GoIP devices are ridden with weak default credentials that users are not forced to change. The weak credentials could most likely be used to gain unauthorized access to the same number of GoIP devices as with the past vulnerabilities (and the new ones disclosed in this blog post).\n  The firmware version of the GoIP-1 device was GHSFVT-1.1-67-5 M26FBR03A02 RSIM. Before testing, the device was reset to the default configuration, and a static IP was set to the LAN interface.\n The IP address of the device on \u2018PC\u2019 port was 192.168.8.1 and on \u2018LAN\u2019 port 192.168.9.1. The PoCs, therefore, point to these IP addresses. Based on our analysis, all of the vulnerabilities were present in both interfaces of the device.\n  Information that might be useful for an attacker is leaked from the device to unauthenticated users.\n  Opening the following URL in browser reveals the ping log for unauthenticated users. This file is only displayed if the ping functionality has been used since rebooting the device.\n         The TCP port 2096 on the device is a debug port that allows the eavesdropping of many events. There is no authentication, thus anyone can simply connect to the port and start secretly collecting information. There is also no encryption.\n  The content of all received SMS messages when admin browses to that view in the web panel\n The following screenshot shows messages received from the port. Among the messages, it is visible that an SMS message with the content \u201cHello world!\u201d is sent to a redacted phone number, and that a 5-second test call is made to a redacted phone number.\n   There are two Local File Inclusion (LFI) vulnerabilities in the web panel that allows fetching data useful to an attacker without authentication. Opening the following URLs in browser will display the passwd file of the device.\n  These vulnerabilities can be exploited to fetch the serial number, firmware version, and module versions through fetching the file /dev/mtdblock/5.\n The most sensitive file an attacker can request is the config.dat, which stores the whole configuration of the device in cleartext. It includes for example all credentials to the device, including SIP, H.323, and web panel. This file can be requested from /tmp/config.dat if the configuration backup feature has been used. Previously the same information was available in /dev/mtdblock/5 according to the  Securiteam\u2019s report. According to our testing, the data was no longer there in this version of the firmware.\n Opening the following URLs in browser will fetch the config.dat file from a device that has used the configuration backup feature since the last reboot:\n   There were systematic reflected Cross-site scripting (XSS) vulnerabilities in the web panel. Exploiting them is not the most straightforward way for an attacker to gain access to the SMS sending or calling capabilities of the device, therefore I will only report the vulnerable paths and corresponding parameters.\n  The following paths contain parameters vulnerable to reflected cross-site scripting. It is possible to provide input that is reflected without sanitization and thus cause Javascript to be executed in the context of the application. The input is however reflected only once and is not saved anywhere. The vulnerable parameters in each path shown in the table below.\n   The following paths contain parameters vulnerable to stored cross-site scripting. It is possible to provide input that is reflected back without sanitization and thus cause Javascript to be executed in the context of the application. The input is stored by the web panel and reflected to the user every time they visit a certain view until the user deletes or overwrites the malicious input. The vulnerable parameters in each path shown in the table below.\n   The same LFI vulnerability used in the Information Disclosure subsection can be used to deny the service of the web panel completely. Requesting the file /etc/ipin will cause the web panel to become so slow that it is no longer usable. Any other user will not be able to use the web panel either. Exploitation does not require authentication. Rebooting the device will fix the condition.\n   How an attacker could use these findings to send free SMS messages or to make free calls?\n The attacker profile we consider is someone who can connect to a GoIP-1 device from the internet with only publicly available information and without any higher level of access to the device. Our attacker plans to start SMS messaging or scam calling as a service using GoIP-1 devices, thus they are after the level of access that allows just that.\n Based on our analysis, the vulnerabilities disclosed in this blog post create two new avenues for attack for the kind of attacker we consider. The attacker can use the LFI vulnerability to fetch credentials to the device, and then proceed to use the device using those. They could also try to exploit the XSS vulnerabilities to gain the same credentials.\n To exploit the LFI vulnerability to get extract credentials from the device, there is a prerequisite that the GoIP configuration has been saved since the last reboot. It is hard to estimate how often the configuration is saved, and thus narrows the window of exploitation. The exploitation of XSS vulnerabilities requires interaction with the victims, which makes exploitation harder.\n If these fail, the attacker may resort to credential brute force attacks. There are three well-known users with weak default passwords, the web panel uses basic authentication and is not protected against brute force attacks. This makes it likely a very simple and effective attack vector.\n It is unclear whether the findings are valid for also other GoIP devices. The same manufacturer offers GSM gateways with up to 32 channels. In this setting, the number of channels means the number of SIM cards that can be plugged into the device, the number of simultaneous calls that can be made, and the number of different phone numbers one can send SMS messages from. Thus the more channels, the more useful the device is for a hacker. The device used in testing has only one channel and thus is the least useful.\n  We strongly recommend against allowing traffic to any port on this device from the public internet or any untrusted device. Given the record of vulnerabilities and the limited time we spent investigating, the device is guaranteed to contain more. Given the clear value of hacking one of these devices, they will likely get targeted.\n  These vulnerabilities were reported to the device manufacturer  Dbltek on 7th November 2021, and the findings were acknowledged. Dbltek was given over 90 days to fix the findings, as well as support for the fixes.\n Dbltek has not released a new version of the GoIP-1 firmware after the report. However, looking at the  firmware releases page, we see that the one we tested was not the latest and greatest. We did not verify whether the vulnerabilities exist in the newest firmware\n The device does not have automatic updates, and the update process is not completely straightforward. Thus, it is likely that vulnerable devices are still being sold, and that all devices are not going to be updated. We chose to disclose these details nevertheless to urge the implementation of automatic updates or at least an easier update process. Our findings with the biggest impact also have a limited window of exploitation and thus will not likely put a large number of the devices into immediate danger. By disclosing we also hope to educate potential buyers of the device about the dangers associated with the devices.", "posttime": "2022-02-19 03:15:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,gsm,\u8bbe\u5907", "title": "GoIP-1 GSM\u7f51\u5173\u53ef\u80fd\u88ab\u9ed1\u5ba2\u7528\u6765\u8fdb\u884c\u7535\u8bdd\u6b3a\u8bc8", "title_en": "GoIP-1 GSM gateway could be harnessed for phone fraud by hackers", "transed": 1, "url": "https://shufflingbytes.com/posts/hacking-goip-gsm-gateway/", "via": "", "real_tags": ["\u9ed1\u5ba2", "gsm", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e0d\u662f\u4e00\u7bc7\u5173\u4e8e\u6280\u672f\u4e3b\u9898\u7684\u5e16\u5b50\uff0c\u800c\u662f\u5173\u4e8e\u5de5\u7a0b\u5e08\u7684\u4e00\u4e2a\u5e38\u89c1\u9677\u9631\u2014\u2014\u6211\u4eec\u559c\u6b22\u5728\u770b\u5230\u9519\u8bef\u7684\u65f6\u5019\u6307\u51fa\u5b83\u3002\u53ef\u4ee5\u7406\u89e3\uff0c\u6211\u4eec\u975e\u5e38\u64c5\u957f\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u57fa\u672c\u4e0a\u63a5\u53d7\u8fc7\u8fd9\u65b9\u9762\u7684\u8bad\u7ec3\u3002\u5f53\u6d89\u53ca\u5230\u4ee3\u7801\u5ba1\u67e5\uff0c\u6216\u590d\u6742\u5206\u5e03\u5f0f\u7cfb\u7edf\u534f\u8bae\u7684\u8bbe\u8ba1\u5ba1\u67e5\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5c3d\u5feb\u53d1\u73b0\u7f3a\u9677\u3002\u4e60\u60ef\u901a\u5e38\u7531\u4e09\u4e2a\u56e0\u7d20\u5f62\u6210\u2014\u2014\u89e6\u53d1\u56e0\u7d20\u3001\u884c\u4e3a\u548c\u5956\u52b1\u3002\u5b83&#39\uff1b\u8fd9\u548c\u63a8\u52a8&#34\uff1b\u611f\u5230\u60b2\u4f24&#34-&gt&#34;\u5403\u5de7\u514b\u529b&#34-&gt&#34;\u611f\u89c9\u826f\u597d&#34\uff1b\u5468\u671f\u5bf9\u4e8e\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u5468\u671f\u662f&#34\uff1b\u770b\u5230\u4e00\u4e2a\u95ee\u9898&#34-&gt&#34;\u53d1\u73b0\u7455\u75b5&#34-&gt&#34;\u611f\u89c9\u5f88\u597d\uff1b\u3002\u5728\u8fd9\u4e2a\u5faa\u73af\u5f97\u5230\u52a0\u5f3a\u540e\uff0c\u5b83\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u66f4\u6839\u6df1\u8482\u56fa\u7684\u4e60\u60ef\u2014\u2014\u5728\u4f60\u770b\u5230\u9519\u8bef\u7684\u65f6\u5019\u5fc5\u987b\u6307\u51fa\u9519\u8bef\u3002\n\u8bd5\u56fe\u53d1\u73b0\u7cfb\u7edf\u4e2d\u7684\u7f3a\u9677\u5e76\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u4e0e\u4eba\u6253\u4ea4\u9053\u65f6\uff0c\u6307\u51fa\u95ee\u9898\u7684\u4e0b\u610f\u8bc6\u53cd\u5c04\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53e6\u4e00\u65b9\u7684\u8d1f\u9762\u60c5\u7eea\uff1b\u4f24\u5bb3\u4e86\u4eba\u9645\u5173\u7cfb\u3002\u8fd9\u65f6\u6211\u4eec\u5e94\u8be5\u6682\u505c\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u6307\u51fa\u95ee\u9898\u6240\u5728\u3002\u5728\u5b9e\u9645\u64cd\u4f5c\u4e4b\u524d\uff0c\u8003\u8651\u5982\u4f55\u63d0\u4f9b\u53cd\u9988\u3002\u8fd9&#34\uff1b\u505c\u987f&#34\uff1b\u8bf4\u8d77\u6765\u5bb9\u6613\u505a\u8d77\u6765\u96be\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u591a\u5e74\u6765\u517b\u6210\u7684\u4e60\u60ef\u3002\u5b83&#39\uff1b\u8fd9\u5c31\u50cf\u6212\u6389\u7cd6\u679c\uff08\u6216\u8005\u5438\u70df\uff0c\u5982\u679c\u9002\u7528\u7684\u8bdd\uff09\u3002\u89e6\u53d1\u53d1\u751f\u4e86\u2014\u2014\u4f60\u9762\u4e34\u4e00\u4e2a\u95ee\u9898\uff0c\u4f46\u4f60\u5fc5\u987b\u4fdd\u6301\u8fd9\u79cd\u884c\u4e3a\uff1b\u4f60\u4e0d\u80fd\u9a6c\u4e0a\u6307\u51fa\u3002\u8fd9\u5f88\u96be\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8ba9\u6211\u5728\u770b\u5230\u9519\u8bef\u540e\u4e0d\u8981\u8bf4\u4ec0\u4e48\u662f\u96be\u4ee5\u7f6e\u4fe1\u7684\u56f0\u96be\u3002\n\u4f46\u4e00\u65e6\u6211\u4eec\u5c06\u8fd9\u79cd\u884c\u4e3a\u89c6\u4e3a\u4e00\u79cd\u4e60\u60ef\uff0c\u5c31\u6709\u529e\u6cd5\u6253\u7834\u4e00\u79cd\u4e60\u60ef\u3002\u6211\u53d1\u73b0TED\u5728\u8c08\u8bba\u6b63\u5ff5\u5982\u4f55\u5e2e\u52a9\u6253\u7834\u4e60\u60ef\u3002\u901a\u8fc7\u7b80\u5355\u7684\u597d\u5947\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u6b63\u5728\u7ecf\u5386\u7684\u89e6\u53d1\u884c\u4e3a-\u56de\u62a5\u5faa\u73af\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u6253\u7834\u4e60\u60ef\u3002\u6240\u4ee5\u4e0b\u4e00\u6b21\uff0c\u5f53\u4f60\u770b\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u611f\u5230\u60f3\u6307\u51fa\u5b83\u7684\u51b2\u52a8\uff0c\u505c\u987f\u4e00\u4e0b\uff0c\u5bf9\u4ec0\u4e48\u611f\u5230\u597d\u5947&#39\uff1b\u4f60\u8111\u5b50\u91cc\u5728\u60f3\u4ec0\u4e48\uff0c\u653e\u624b\u5427\u3002\u7136\u540e\u56de\u6765\u60f3\u4e00\u60f3&#39\uff1b\u5982\u679c\u53cd\u9988\u4ecd\u7136\u9002\u7528\uff0c\u90a3\u4e48\u8fd9\u662f\u63d0\u4f9b\u53cd\u9988\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u5f88\u53ef\u80fd\uff0c\u5728\u4f11\u606f\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u81ea\u5df1\u505a\u4e86\u592a\u591a\u5047\u8bbe\uff0c\u800c\u6211\u4eec\u81ea\u5df1\u9519\u4e86\u3002", "note_en": "This is not a post on a technical topic, but rather on a common pitfall for engineers \u2013 we like to point out something wrong the moment we see it. Understandably, we are very good at it. We are basically trained for it. When it comes to code reviews, or design reviews for complicated distributed system protocols, we want to be able to spot flaws as quickly as possible. Habits are usually formed with three factors \u2013 trigger, behavior and reward. It&#39;s the same thing that drives the &#34;feel sad&#34; -&gt; &#34;eat chocolate&#34; -&gt; &#34;feel good&#34; cycle. For engineers, the cycle is &#34;see a problem&#34; -&gt; &#34;spot flaws&#34; -&gt; &#34;feel good&#34;. After this cycle gets reinforced, it leads to a more deeply rooted habit \u2013 must point out something wrong the moment you see it.\n Trying to spot flaws in a system is not a bad thing. However, when we are dealing with people, the knee-jerk reflex of pointing out something is wrong might lead to negative feelings from the other side; and hurt relationships. This is when we should take a pause before pointing out something is wrong. Think about how to deliver the feedback before actually doing it. This &#34;pause&#34; is easier said than done, because of the strong habit we have formed over the years. It&#39;s like quitting sweets (or smoking if it applies to you). The trigger takes place \u2013 you are presented with a problem, but you have to hold the behavior; you cannot point it out immediately. This is  hard. For me, asking me to  not say something after seeing something wrong is unbelievably hard.\n But once we identify this behavior as a habit, there are ways to break a habit. I found this  TED talk about how mindfulness can help break habits. By simply being curious, it helps us be mindful about a trigger-behavior-reward cycle we are going through, and helps us break out of the habit. So next time, when you see a problem, something is wrong, you feel the urge to point it out, pause for a second, be curious about what&#39;s going on in your head, and let go. Then come back and figure out what&#39;s the best way to deliver the feedback if it still applies at all. Chances are, after a break, we would find ourselves making too many assumptions, and we are wrong ourselves.", "posttime": "2022-02-19 03:14:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6307\u51fa,point,\u53d1\u73b0", "title": "\u4e0d\u8981\u9a6c\u4e0a\u6307\u51fa\u9519\u8bef", "title_en": "Don\u2019t point out something wrong immediately", "transed": 1, "url": "https://blog.the-pans.com/wrong/", "via": "", "real_tags": ["\u6307\u51fa", "point", "\u53d1\u73b0"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ed3\u5bf9\u7f16\u7a0b\u662f\u4e24\u4e2a\u7a0b\u5e8f\u5458\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u4e00\u8d77\u5de5\u4f5c\u3002\u4e00\u4e2a\u7f16\u5199\u4ee3\u7801\uff0c\u53e6\u4e00\u4e2a\u89c2\u5bdf\u5e76\u63d0\u4f9b\u5efa\u8bae\u3002\u5b83\u7ecf\u5e38\u88ab\u8a89\u4e3a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u7684\u5173\u952e\u90e8\u5206\u3002\u6211\u89c9\u5f97\u662f&#39\uff1b\u592a\u53ef\u6015\u4e86\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u4ece\u7ecf\u6d4e\u5b66\u5f00\u59cb\u3002\u56e0\u4e3a\u6211\u4eec\u96c7\u4f63\u4e24\u4e2a\u7a0b\u5e8f\u5458\u540c\u65f6\u5728\u540c\u4e00\u4e2a\u952e\u76d8\u4e0a\u5de5\u4f5c\uff0c\u6240\u4ee5\u6210\u5bf9\u7f16\u7a0b\u7684\u8f93\u51fa\u5fc5\u987b\u5927\u4e8e\u5355\u4e2a\u7a0b\u5e8f\u5458\u8f93\u51fa\u76842\u500d\u624d\u6709\u610f\u4e49\u3002\n\u6211&#39\uff1bd\u8ba4\u4e3a\u7ed3\u5bf9\u7f16\u7a0b\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u4ec5\u65e0\u6548\uff0c\u800c\u4e14\u6709\u5bb3\u3002\u7ed3\u5bf9\u7a0b\u5e8f\u5458\u5f80\u5f80\u4f1a\u7ed9\u51fa\u53cd\u9988&#39\uff1b\u8fd9\u5728\u8bbe\u8ba1\u6216\u4ee3\u7801\u8bc4\u5ba1\u4e2d\u66f4\u5408\u9002\u3002\u5728\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u4e4b\u524d\uff0c\u90fd\u5e94\u8be5\u540c\u610f\u603b\u4f53\u7b56\u7565\u3002\u5bf9\u4e8e\u9075\u5faa\u8fd9\u4e00\u70b9\u7684\u914d\u5bf9\uff0c\u552f\u4e00\u7684\u53cd\u9988\u662f&#39\uff1bs\u7684\u5de6\u8fb9\u503e\u5411\u4e8e\u9a91\u81ea\u884c\u8f66\u6216\u98ce\u683c\uff0c\u8fd9\u4e24\u79cd\u90fd\u4f1a\u627c\u6740\u901f\u5ea6\u3002\u5b83&#39\uff1b\u8fd9\u5c31\u50cf\u6709\u4e2a\u540e\u5ea7\u53f8\u673a\u3002\u66f4\u4e0d\u7528\u8bf4\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u6240\u671f\u5f85\u7684\u6d41\u72b6\u6001\u4e86\u3002\n\u914d\u5bf9\u5f80\u5f80\u9000\u5316\u5230\u6700\u5c0f\u516c\u5206\u6bcd\u6027\u80fd\u3002\u4e0e\u65b0\u624b\u914d\u5bf9\u7684\u4e13\u5bb6\u9700\u8981\u50cf\u65b0\u624b\u4e00\u6837\u6162\u3002\u867d\u7136\u7ed3\u5bf9\u7f16\u7a0b\u4f5c\u4e3a\u4e00\u79cd\u6559\u5b66\u5de5\u5177\u53ef\u80fd\u4f1a\u5b9e\u73b0\u4e00\u4e9b\u76ee\u6807\uff0c\u4f46\u56e2\u961f\u6210\u5458\u4e4b\u95f4\u6709\u66f4\u591a\u65f6\u95f4\u548c\u6210\u672c\u6548\u76ca\u9ad8\u7684\u65b9\u6cd5\u6765\u5206\u4eab\u77e5\u8bc6\u3002\n\u4ee3\u7801\u8bc4\u5ba1\u3001\u8bbe\u8ba1\u8bc4\u5ba1\u548c\u901a\u7528\u6587\u6863\u7b49\u66ff\u4ee3\u65b9\u6848\u662f\u66f4\u597d\u7684\u4e00\u5bf9n\u65b9\u5f0f\u6765\u5206\u4eab\u77e5\u8bc6\uff0c\u800c\u4e0d\u662f\u4e00\u5bf9\u4e00\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u66ff\u4ee3\u65b9\u6848\u4e2d\u7684\u5927\u591a\u6570\u90fd\u53ef\u4ee5\u5f02\u6b65\u5b8c\u6210\u3002\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4f60\u60f3\u63d0\u5347\u4f60\u7684\u4ee3\u7801\u5ba1\u67e5\u8fc7\u7a0b\uff0c\u8bf7\u67e5\u770b\u6211\u5728\u4ee3\u7801\u5ba1\u67e5\u4e2d\u5bfb\u627e\u7684\u5341\u4ef6\u4e8b\u3002\n\u9644\u5f55\uff1a\u968f\u7740CRDT\u548c\u8fdc\u7a0bIDE\u7684\u6fc0\u589e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0&#39\uff1b\u8fd9\u662f\u534f\u4f5c\u7f16\u5199\u4ee3\u7801\u7684\u672a\u6765\u3002\u4e5f\u8bb8\u50cfGitHub Copilot\u8fd9\u6837\u7684\u4eba\u5de5\u667a\u80fd\u4ee3\u7801\u5efa\u8bae\u4e5f\u8d77\u5230\u4e86\u4f5c\u7528\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u4e0d&#39\uff1b\u6211\u770b\u4e0d\u51fa\u8c37\u6b4c\u7684\u6587\u6863\uff0c\u6bd4\u5982\u4ee3\u7801\u4e0a\u7684\u5b9e\u65f6\u534f\u4f5c\uff0c\u73b0\u5728\u53ef\u80fd\u6709\u90a3\u4e48\u5927\u7684\u7528\u5904\u3002\u4f46\u5982\u679c\u5b83\u662f\u6709\u6548\u7684\uff0c\u5b83\u4ecd\u7136\u5fc5\u987b\u770b\u8d77\u6765\u4e0e\u5f53\u4eca\u7684\u7ed3\u5bf9\u7f16\u7a0b\u6709\u5f88\u5927\u4e0d\u540c\u3002", "note_en": "Pair programming is where two programmers work together at a single computer. One writes the code, while the other observes and offers suggestions. Its often lauded as a key part of agile software development. I think it&#39;s terrible.\n Let&#39;s start with the economics. Since we are employing two programmers to do work on the same keyboard at the same time, the output of pair programming must be greater than 2x the output of a single programmer to make sense.\n I&#39;d argue that pair programming isn&#39;t only ineffective, but detrimental. Pair programmers tend to give feedback that&#39;s more appropriate in a design or code review. The overall strategy should be agreed to before you write any code. For the pairs that follow this, the only feedback that&#39;s left tends to be bikeshedding or stylistic, both of which kill velocity. It&#39;s like having a backseat driver. Not to mention the coveted flow state that most developers look for.\n Pairs tend to devolve to least-common-denominator performance. Experts paired with novices need to move as slow as a novice. While pair programming might achieve some goals as a pedagogical tool, there are more time and cost efficient ways to share knowledge between team members.\n Alternatives like code reviews, design reviews, and general documentation are much better 1-to-n ways to share knowledge instead of 1-to-1. In addition, most of these alternatives be done asynchronously. If you&#39;re looking to level up your code review process, check out my  Ten Things I Look For In a Code Review.\n Addendum: With the proliferation of  CRDTs and  Remote IDEs, maybe there&#39;s a future for collaboratively writing code. Maybe AI-powered code suggestions like  GitHub Copilot play a role as well. Personally, I don&#39;t see Google Docs-like realtime collaboration on code can be that useful right now. But if it were effective, it would still have to look a lot different than Pair Programming does today.", "posttime": "2022-02-19 03:13:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u7ed3\u5bf9,pair,\u4ee3\u7801", "title": "\u53cd\u5bf9\u7ed3\u5bf9\u7f16\u7a0b", "title_en": "Against Pair Programming", "transed": 1, "url": "https://matt-rickard.com/against-pair-programming/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7ed3\u5bf9", "pair", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5bb6\u653f\u5e9c\u6279\u51c6\u7684\u65b0\u51a0\u75c5\u6bd2\u68c0\u6d4b\u516c\u53f8\u8ba1\u5212\u5411\u7b2c\u4e09\u65b9\u51fa\u552e\u5ba2\u6237DNA\u540e\uff0c\u82f1\u56fd\u6570\u636e\u9690\u79c1\u76d1\u7763\u673a\u6784\u6b63\u5728\u5bf9\u5176\u8fdb\u884c\u8c03\u67e5\u3002\n\u4f5c\u4e3aExpressTest\u4ea4\u6613\u7684Cignpost Diagnostics\u4e3a\u5ea6\u5047\u8005\u63d0\u4f9b35\u82f1\u9551\u7684\u68c0\u6d4b\u670d\u52a1\uff0c\u8be5\u516c\u53f8\u8868\u793a\u6709\u6743\u5206\u6790\u6d77\u8c79\u7684\u6837\u672c\uff0c\u4ee5\u201c\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4eba\u7c7b\u5065\u5eb7\u7684\u4fe1\u606f\u201d\uff0c\u5e76\u5411\u7b2c\u4e09\u65b9\u51fa\u552e\u76f8\u5173\u4fe1\u606f\u3002\n\u4e2a\u4eba\u88ab\u8981\u6c42\u5bf9\u5176\u654f\u611f\u533b\u7597\u6570\u636e\u7684\u4f7f\u7528\u7ed9\u4e88\u77e5\u60c5\u540c\u610f\uff0c\u4f46\u5ba2\u6237\u5bf9\u5176DNA\u51fa\u552e\u7684\u540c\u610f\u73b0\u5728\u88ab\u9690\u85cf\u5728Cignpost\u7684\u5728\u7ebf\u6587\u4ef6\u4e2d\u3002\n\u636e\u300a\u661f\u671f\u65e5\u6cf0\u6664\u58eb\u62a5\u300b\u62a5\u9053\uff0c\u5728\u8d2d\u4e70\u6d4b\u8bd5\u65f6\uff0c\u5ba2\u6237\u88ab\u8981\u6c42\u52fe\u9009\u4e00\u4e2a\u540c\u610f4876\u9690\u79c1\u653f\u7b56\u7684\u65b9\u6846\uff0c\u8be5\u653f\u7b56\u94fe\u63a5\u5230\u4e00\u4efd\u5355\u72ec\u7684\u6982\u8ff0\u7814\u7a76\u8ba1\u5212\u7684\u6587\u4ef6\u3002\nCignpost\u5728\u4e0a\u5468\u5c06\u5176\u6d3b\u52a8\u7684\u8bc1\u636e\u63d0\u4ea4\u7ed9\u6b63\u5728\u8c03\u67e5\u7684\u4fe1\u606f\u4e13\u5458\u529e\u516c\u5ba4\u540e\uff0c\u5220\u9664\u4e86\u8fd9\u4e00\u63d0\u53ca\u3002\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u6709\u591a\u5c11\u6837\u54c1\u4ee5\u201c\u5982\u679c\u5df2\u7ecf\u552e\u51fa\u201d\u7684\u5f62\u5f0f\u50a8\u5b58\uff1b\u8be5\u653f\u7b56\u79f0\uff0c\u5c5e\u4e8e\u63d0\u4f9b\u62ed\u5b50\u8005\u7684\u6570\u636e\u53ef\u4ee5\u65e0\u9650\u671f\u4fdd\u7559\u3002\nCignpost\u6210\u7acb\u4e8e\u53bb\u5e74\uff0c\u636e\u4fe1\u5df2\u552e\u51fa\u591a\u8fbe300\u4e07\u53f0\u6d4b\u8bd5\u8bbe\u5907\u3002\u5b83\u4e3a\u65c5\u884c\u8005\u63d0\u4f9b\u51fa\u53d1\u524d\u548c\u62b5\u8fbe\u524d\u7684\u6d4b\u8bd5\uff0c\u5728\u76d6\u7279\u5a01\u514b\u548c\u5e0c\u601d\u7f57\u673a\u573a\u7b49\u5730\u8bbe\u6709\u6b65\u5165\u5f0f\u4e2d\u5fc3\u3002\n\u8be5\u516c\u53f8\u7684\u201c\u7814\u7a76\u8ba1\u5212\u4fe1\u606f\u8868\u201d\u663e\u793a\uff0c\u5b83\u4fdd\u5b58\u7740\u5305\u62ec\u201c\u751f\u7269\u6837\u672c\u2026\u2026\u4ee5\u53ca\u4ece\u8fd9\u4e9b\u6837\u672c\u4e2d\u83b7\u5f97\u7684DNA\u201d\u5728\u5185\u7684\u6570\u636e\u3002\n\u5b83\u8865\u5145\u8bf4\uff0c\u5b83\u53ef\u80fd\u4f1a\u4e0e\u201c\u5408\u4f5c\u8005\u201d\u2014\u2014\u5305\u62ec\u5927\u5b66\u548c\u79c1\u8425\u516c\u53f8\u2014\u2014\u5206\u4eabDNA\u6837\u672c\u548c\u5176\u4ed6\u4e2a\u4eba\u4fe1\u606f\uff0c\u5e76\u201c\u53ef\u80fd\u4f1a\u5f97\u5230\u8865\u507f\u201d\u3002\nICO\u526f\u4e13\u5458\u53f2\u8482\u592b\u00b7\u4f0d\u5fb7\uff08Steve Wood\uff09\u8868\u793a\uff0c\u76d1\u7ba1\u673a\u6784\u5c06\u201c\u4ed4\u7ec6\u201d\u5ba1\u89c6\u8be5\u516c\u53f8\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6ca1\u6709\u4ec0\u4e48\u4e2a\u4eba\u6570\u636e\u6bd4\u6211\u4eec\u7684DNA\u66f4\u654f\u611f\u4e86\u3002\u4eba\u4eec\u5e94\u8be5\u4ee5\u6e05\u6670\u3001\u516c\u5f00\u548c\u8bda\u5b9e\u7684\u65b9\u5f0f\u4e86\u89e3\u5b83\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u51b3\u5b9a\u662f\u5426\u653e\u5f03\u5b83\u3002\u201d\u3002\nCignpost\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u8be5\u516c\u53f8\u201c\u5b8c\u5168\u9075\u5b88\u201d\u4e86\u6570\u636e\u9690\u79c1\u6cd5\uff0c\u5e76\u8865\u5145\u9053\uff1a\u201c\u6211\u4eec\u5728\u7a33\u5065\u7684\u7cfb\u7edf\u548c\u6d41\u7a0b\u4e0a\u6295\u5165\u4e86\u5927\u91cf\u8d44\u91d1\uff0c\u4ee5\u786e\u4fdd\u4fdd\u62a4\u6211\u4eec\u7684\u5ba2\u6237\u3002\n\u201c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u6d4b\u8bd5\u5ba2\u6237\u7684\u6f5c\u5728\u4e25\u91cd\u72b6\u51b5\uff0c\u6240\u4ee5\u4fdd\u62a4\u8fd9\u4e9b\u6570\u636e\u81f3\u5173\u91cd\u8981\u3002\u201d", "note_en": "A government-approved Covid testing firm is being investigated by the UK\u2019s data privacy watchdog after it emerged that it plans to sell customers\u2019 DNA to third parties.\n Cignpost Diagnostics, which trades as ExpressTest and offers \u00a335 tests for holidaymakers, said it holds the right to analyse samples from seals to \u201clearn more about human health\u201d \u2013 and sell information on to third parties.\n Individuals are required to give informed consent for their sensitive medical data to be used \u2013 but customers\u2019 consent for their DNA to be sold now as buried in Cignpost\u2019s online documents.\n  When buying tests, customers were asked to tick a box agreeing to a 4,876 privacy policy which links to a separate document outlining the research programme,  The Sunday Times reported.\n  Cignpost removed the reference last week after the newspaper passed evidence of its activities to the Information Commissioner\u2019s Office, which is now investigating.\n It is still not known how many samples have been stored by the form of if they have been sold on already; the policy said data belonging to those providing swabs could be retained indefinitely.\n  Cignpost was founded last year and is believed to have sold as many as three million tests. It supplies pre-departure and arrival tests for travellers, with walk-in centres at sites including Gatwick and Heathrow.\n  The company\u2019s \u201cresearch programme information sheet\u201d reveals it keeps hold of data including \u201cbiological samples\u2026 and the DNA obtained from such samples\u201d.\n  It adds that it may share DNA samples and other personal information with \u201ccollaborators\u201d \u2013 including universities and private companies \u2013 and that it \u201cmay receive compensation\u201d in return.\n  ICO deputy commissioner Steve Wood said the watchdog would look \u201ccarefully\u201d at the firm.\n \u201cThere is no personal data more sensitive than our DNA. People should be told about what\u2019s happening to it in a clear, open and honest way so they can make informed decisions about whether they want to give it up,\u201d he said.\n A Cignpost spokesperson said it was in \u201cfull compliance\u201d with data privacy laws, adding: \u201cWe have invested significantly in robust systems and processes to ensure we protect our customers.\n \u201cBecause we are testing our customers for a potentially serious condition, protecting that data is paramount.\u201d", "posttime": "2022-02-19 02:51:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u65b0\u51a0\u75c5\u6bd2,\u75c5\u6bd2\u68c0\u6d4b,testing,\u6570\u636e", "title": "\u65b0\u51a0\u75c5\u6bd2\u68c0\u6d4b\u516c\u53f8\u5411\u7b2c\u4e09\u65b9\u51fa\u552e\u643a\u5e26\u5ba2\u6237DNA\u7684\u62ed\u5b50", "title_en": "Covid testing firm \u2018selling swabs carrying customers\u2019 DNA\u2019 to third parties", "transed": 1, "url": "https://www.thelondoneconomic.com/news/covid-testing-firm-selling-swabs-carrying-customers-dna-to-third-parties-301236/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u65b0\u51a0\u75c5\u6bd2", "\u75c5\u6bd2\u68c0\u6d4b", "testing", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63d0\u4ea4\u65e5\u671f\uff1a2022-02-11 15:33\u5927\u591a\u6570\u8fd0\u52a8\u9879\u76ee\u662f\u4e3a\u8fd0\u52a8\u5458\u51c6\u5907\u7684\uff0c\u5e94\u8be5\u662f\u3002\u6709\u4e9b\u4eba\u8d62\u5f97\u4e86\u89c2\u4f17\uff0c\u5e76\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5c48\u4ece\u4e8e\u89c2\u4f17\u3002\u4e5f\u8bb8\u89c2\u4f17\u4f53\u80b2\u7684\u5dc5\u5cf0\u662f\u5965\u8fd0\u4f1a\u3002\u8fd9\u662f\u4e00\u4e2a\u56fd\u9645\u821e\u53f0\u3002\u867d\u7136\u5956\u724c\u5907\u53d7\u8fd0\u52a8\u5458\u5782\u6d8e\uff0c\u4f46\u51e0\u4e4e\u6240\u6709\u4f53\u80b2\u9879\u76ee\u90fd\u6709\u81ea\u5df1\u7684\u4e16\u754c\u9526\u6807\u8d5b\u548c\u5176\u4ed6\u6bd4\u8d5b\uff0c\u8fd9\u4e9b\u6bd4\u8d5b\u4e3b\u8981\u662f\u4e3a\u8fd0\u52a8\u5458\u548c\u66f4\u4e3a\u6709\u9650\u7684\u8ba4\u771f\u89c2\u4f17\u4e3e\u529e\u7684\u3002\u5965\u8fd0\u4f1a\u662f\u4e3a\u4e86\u5411\u5168\u4e16\u754c\u5c55\u793a\uff0c\u540c\u65f6\u4e5f\u5c55\u793a\u4e86\u592a\u591a\u7684\u6c11\u65cf\u81ea\u8c6a\u611f\u3002\n\u5965\u8fd0\u4f1a\uff0c\u5c24\u5176\u662f\u51ac\u5b63\u5965\u8fd0\u4f1a\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u662f\u4e00\u5e06\u98ce\u987a\u7684\u3002\u6ca1\u6709\u4eba\u80fd\u770b\u5f97\u8d85\u8fc7\u4e00\u5c0f\u90e8\u5206\u3002\u6211\u603b\u662f\u4f7f\u7528DVR\u89c2\u770b\uff0c\u5c24\u5176\u662f\u672c\u5730DVR\u800c\u4e0d\u662f\u4e91DVR\uff0c\u89c6\u9891\u5b58\u50a8\u5728\u6211\u7684\u78c1\u76d8\u4e0a\uff0c\u6211\u53ef\u4ee5\u5728\u77ac\u95f4\u901a\u8fc7\u5b83\u8fdb\u884c\u641c\u7d22\uff0c\u5e76\u8fdb\u884c\u9ad8\u8d28\u91cf\u7684\u5feb\u8fdb\u3001\u5feb\u9000\u548c\u52a0\u901f\u64ad\u653e\u3002\u8fd9\u6bd4\u8df3\u8fc7\u5546\u4e1a\u5e7f\u544a\u66f4\u91cd\u8981\uff0c\u5b83\u80fd\u8ba9\u6211\u5728\u6570\u5c0f\u65f6\u5185\u5b8c\u6210\u62a5\u9053\uff0c\u5728\u51e0\u5206\u949f\u5185\u770b\u5230\u6211\u60f3\u8981\u7684\u4e1c\u897f\uff0c\u5e76\u80fd\u770b\u5230\u6bd4\u4ee5\u5f80\u591a\u5f97\u591a\u7684\u4e8b\u4ef6\u3002\n\u4f46\u5bf9\u4e8e\u89c2\u4f17\u6765\u8bf4\uff0c\u8d5b\u4e8b\u7684\u5438\u5f15\u529b\u80af\u5b9a\u5b58\u5728\u5f88\u5927\u5dee\u5f02\u3002\u4e5f\u8bb8\u7b2c\u4e00\u4e2a\u9879\u76ee\u662f100\u7c73\u77ed\u8dd1\u3002\u5b83\u5f53\u7136\u975e\u5e38\u7b80\u77ed\uff0c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b--#34\uff1b\u4e16\u754c\u4e0a\u8dd1\u5f97\u6700\u5feb\u7684\u4eba&#34\uff1b\u2014\u2014\u4f46\u5b83\u8fd8\u6709\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u70b9\u2014\u2014\u4f60\u53ef\u4ee5\u89c2\u5bdf\u5b83\uff0c\u7406\u89e3\u5b83\uff0c\u770b\u8c01\u8d62\u4e86\uff0c\u8c01\u8d62\u4e86\uff0c\u53ea\u7528\u4f60\u7684\u773c\u775b\u3002\uff08\u5b83\u5b9e\u9645\u4e0a\u6709\u70b9\u592a\u5feb\u4e86\uff0c\u8ddd\u79bb\u8d8a\u957f\u8d8a\u597d\u3002\uff09\u4f60\u901a\u5e38\u77e5\u9053\u8c01\u8d62\u4e86\uff0c\u4f60\u4e0d\u77e5\u9053&#39\uff1b\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u5206\u6570\uff0c\u6216\u4ece\u8bc4\u59d4\u90a3\u91cc\u83b7\u5f97\u8bc4\u5206\uff0c\u4e5f\u4e0d\u9700\u8981\u8ba1\u65f6\u3002\u5982\u679c\u662f&#39\uff1b\u5f88\u63a5\u8fd1\uff0c\u4e00\u5f20\u7167\u7247\u544a\u8bc9\u4f60\u7b54\u6848\u3002\u8fd9\u91cc\u6709\u52a8\u4f5c\uff0c\u6709\u620f\u5267\uff0c\u6240\u6709\u7684\u6700\u540e\u7ade\u4e89\u8005\u540c\u65f6\u6bd4\u8d5b\u3002\n\u5f88\u5c11\u6709\u4f53\u80b2\u8fd0\u52a8\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5f88\u591a\u8fd0\u52a8\u90fd\u662f\u7528\u65f6\u949f\u6765\u5b8c\u6210\u7684\u3002\u4f60\u770b30\u4e2a\u4eba\u505a\u5b8c\u5168\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u8bb0\u4e0b\u4ed6\u4eec\u7684\u65f6\u95f4\uff0c\u6700\u597d\u7684\u65f6\u95f4\u5c31\u662f\u8d62\u5bb6\u3002\u4e3a\u4e86\u8ba9\u6bd4\u8d5b\u53d8\u5f97\u6709\u8da3\uff0c\u4ed6\u4eec\u52aa\u529b\u8ba9\u4eba\u4eec\u7ade\u4e89\uff0c\u6700\u5feb\u7684\u6bd4\u8d5b\u6392\u5728\u6700\u540e\u6216\u7b2c\u4e00\uff0c\u4f46\u4ed6\u4eec\u53ea\u80fd\u505a\u5230\u8fd9\u4e48\u591a\u3002\u5b83&#39\uff1b\u8fd9\u548c\u770b\u5230\u4eba\u4eec\u5b9e\u65f6\u6bd4\u8d5b\u51b2\u8fc7\u7ec8\u70b9\u4e0d\u4e00\u6837\u3002\u90a3\u91cc&#39\uff1b\u5f53\u4e00\u4e2a\u8dd1\u5f97\u66f4\u65e9\u7684\u4eba\u8dd1\u5f97\u5f88\u5feb\uff0c\u6700\u540e\u4e00\u540d\u9009\u624b\u4ee5\u5fae\u5f31\u7684\u4f18\u52bf\u9519\u8fc7\u6bd4\u8d5b\uff0c\u7136\u540e\u955c\u5934\u5207\u6362\u5230\u524d\u4e00\u540d\u6210\u4e3a\u51a0\u519b\u7684\u9009\u624b\u65f6\uff0c\u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\n\u66f4\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\u4ea4\u9519\u8d5b\u8dd1\uff0c\u6709\u4eba\u6bcf30\u79d2\u79bb\u5f00\u4e00\u6b21\uff0c\u4eba\u4eec\u5728\u6bd4\u8d5b\uff0c\u4f46\u6ca1\u6709\u3002\u8fd9\u4e9b\u7ec8\u70b9\u7ebf\u4ee4\u4eba\u56f0\u60d1\uff0c\u5c3d\u7ba1\u4eba\u4eec\u52aa\u529b\u89e3\u91ca&#39\uff1b\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u3002\n\u4e0d\u8fc7\uff0c\u4e0e\u7ecf\u8fc7\u8bc4\u5224\u7684\u8fd0\u52a8\u76f8\u6bd4\uff0c\u8fd9\u53ea\u949f\u8fd8\u662f\u5f88\u68d2\u7684\u3002\u9664\u975e\u4f60\u5f88\u719f\u7ec3\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u65e0\u6cd5\u533a\u5206\u4e0d\u540c\u7684\u6280\u5de7\u3002\u8bc4\u59d4\u4eec\u5404\u53f8\u5176\u804c\uff0c\u4e0d\u5f97\u4e0d\u9762\u5bf9\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u4ed6\u4eec\u8bc4\u5224\u65e9\u671f\u7684\u7ade\u4e89\u5bf9\u624b\uff0c\u5374\u6ca1\u6709\u770b\u5230\u540e\u6765\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u4ed6\u4eec\u5e94\u8be5\u5ba2\u89c2\uff0c\u4f46\u663e\u7136\u53ef\u4ee5&#39\uff1b\u4e0d\u53ef\u80fd\u3002\u8bb8\u591a\u8fd0\u52a8\u9879\u76ee\u90fd\u6709\u8ba1\u65f6\u548c\u88c1\u5224\u529f\u80fd\u3002\n\u8fd9\u4e2a\u949f\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\u8fd9\u5f53\u7136\u662f\u6700\u516c\u5e73\u7684\uff08\u5c3d\u7ba1\u540e\u6765\u7684\u8f66\u624b\u4eec\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u6bd4\u8d5b\u3002\uff09\u4e00\u4e9b\u8fd0\u52a8\uff0c\u6bd4\u5982\u77ed\u9053\u901f\u6ed1\u548c\u6ed1\u96ea\u677f\u4ea4\u53c9\uff0c\u8bd5\u56fe\u7ed9\u6211\u4eec\u5e26\u6765\u6211\u4eec\u6e34\u671b\u7684\u6bd4\u8d5b\uff0c\u800c\u5b83&#39\uff1b\u8fd9\u5f88\u6709\u8da3\uff0c\u4f46\u80dc\u5229\u548c\u5931\u8d25\u5f53\u7136\u53ef\u80fd\u6765\u81ea\u4e8e\u5728\u9519\u8bef\u7684\u65f6\u95f4\u51fa\u73b0\u5728\u9519\u8bef\u7684\u5730\u70b9\uff1b\u8fd9\u662f\u649e\u8f66\u3002\u5b83&#39\uff1bs&#34\uff1b\u8fd0\u52a8\u7684\u4e00\u90e8\u5206&#34\uff1b\u89c2\u4f17\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u559c\u6b22\u6df7\u4e71\uff0c\u4f46\u6211\u4eec\u4e5f\u5e0c\u671b\u6bd4\u8d5b\u662f\u5173\u4e8e\u5353\u8d8a\u800c\u4e0d\u662f\u8fd0\u6c14\u7684\u3002\n\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u6bd4\u8d5b\u662f\u4e00\u5bf9\u4e00\u6bd4\u8d5b\u3002\u8fd9\u4e9b\u90fd\u9700\u8981\u6392\u540d\uff0c\u5e76\u6700\u7ec8\u8fdb\u5165\u5b63\u540e\u8d5b\u3002\u5728\u5b63\u540e\u8d5b\u4e2d\uff0c\u4eba\u4eec\u6216\u7403\u961f\u5c06\u9762\u4e34\u6dd8\u6c70\u8d5b\uff0c\u76f4\u5230\u6709\u4e00\u573a\u91d1\u724c\u5bf9\u94f6\u724c\u7684\u51b3\u8d5b\u3002\u5c3d\u7ba1\u4e0e\u5176\u4ed6\u65b9\u6cd5\u76f8\u6bd4\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u80fd\u975e\u5e38\u5438\u5f15\u4eba\u3002\u5728\u4e00\u4e2a\u4eba\u5f97\u5230\u7684\u914d\u5bf9\u4e2d\u4e5f\u53ef\u80fd\u6709\u4e00\u4e9b\u8fd0\u6c14\uff0c\u800c\u6211\u4eec&#39\uff1bI\u2019\u2019\u6211\u89c1\u8fc7\u5f88\u591a\u6b21\u91d1\u724c\u6ca1\u6709\u88ab\u516c\u8ba4\u4e3a\u6700\u597d\u7684\u9009\u624b\u593a\u5f97\u3002\n\u81f3\u5c11\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u76f8\u5f53\u7eaf\u7cb9\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u4e2a\u4eba\u6bd4\u8d5b\u4e5f\u6709\u4ed6\u4eec\u8fd0\u52a8\u7684\u5168\u90e8\u620f\u5267\u6027\u3002\u4f46\u662f\u5f88\u5c11\u6709\u4eba\u6709\u65f6\u95f4\u89c2\u770b\u6240\u6709\u7684\u66f2\u68cd\u7403\u3001\u51b0\u58f6\u6216\u68d2\u7403\uff0c\u5c3d\u7ba1\u4f60\u5bf9\u6700\u540e\u7684\u6bd4\u8d5b\u611f\u5230\u6ee1\u610f\u3002\u5b83\u4eec\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u7535\u89c6\u5f80\u5f80\u4f1a\u8fdc\u79bb\u5b83\u4eec\u3002\n\u6211\u559c\u6b22\u770b\u7b56\u7565\u548c\u8868\u73b0\uff0c\u6240\u4ee5\u6211\u503e\u5411\u4e8e\u559c\u6b22\u957f\u8dd1\u3001\u51b0\u58f6\u51b0\u7403\u548c\u91d1\u724c\u66f2\u68cd\u7403\u6bd4\u8d5b\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u80af\u5b9a\u770b\u5230\u4ed6\u4eec\u5927\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\u3002\u5728\u957f\u8fbe\u4e00\u5c0f\u65f6\u7684\u6bd4\u8d5b\u4e2d\uff0c\u6211\u5c06\u5728\u5927\u90e8\u5206\u6bd4\u8d5b\u4e2d\u52a0\u901f\u3002\u6211\u5e0c\u671b\u6709\u4e00\u6bb5\u5f55\u97f3\u80fd\u4e3a\u6211\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u503c\u5f97\u7684\u5730\u65b9\u653e\u6162\u901f\u5ea6\u3002\u6211\u5f88\u5e78\u8fd0\u5730\u8d76\u4e0a\u4e86\u5b89\u5a1c\u00b7\u57fa\u68ee\u970d\u592b\uff08Anna Kiesenhofer\uff09\u548c\u5176\u4ed6\u4e00\u4e9b\u4eba\u7684\u6bd4\u8d5b\uff0c\u4f46\u6211\u7684\u52a0\u901f\u6280\u672f\u5e76\u6ca1\u6709\u5f88\u597d\u5730\u5e2e\u52a9\u6211\u6355\u6349\u5230\u5979\u60ca\u4eba\u6210\u5c31\u7684\u620f\u5267\u6027\u3002\u7136\u800c\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u6839\u672c\u6ca1\u6709\u65f6\u95f4\u53bb\u770b\u5b83\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4e0d\u662f\u4e00\u4e2a\u4f53\u80b2\u7231\u597d\u8005\u3002\u867d\u7136\u4ed6\u4eec\u4e0d\u4f1a\u6d88\u5931\uff0c\u4f46\u6211\u8ba4\u4e3a\u5bf9\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u6765\u8bf4\uff0c\u8f6c\u5411\u8ba1\u7b97\u673a\u8bc4\u5224\uff08\u6bd4\u5982\u65f6\u949f\uff09\u53ef\u80fd\u662f\u6709\u597d\u5904\u7684\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u5730\u6b65\uff1a\u8ba1\u7b97\u673a\u53ef\u4ee5\u8ffd\u8e2a\u8eab\u4f53\u7684\u4e00\u5207\uff0c\u4e0d\u4ec5\u77e5\u9053\u4e00\u4e2a\u4eba\u505a\u4e86\u591a\u5c11\u6b21\u65cb\u8f6c\uff0c\u800c\u4e14\u77e5\u9053\u4ed6\u4eec\u79bb\u7406\u60f3\u7684\u65cb\u8f6c\u6709\u591a\u8fd1\u3002\u4ed6\u4eec\u8fd8\u53ef\u4ee5\u7acb\u5373\u62a5\u544a\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u60ca\u8bb6\u4e8e\u4ed6\u4eec\u5728\u8bc4\u5224\u65b9\u9762\u7684\u8868\u73b0&#34\uff1b\u827a\u672f\u5370\u8c61&#34\uff1b\u5c3d\u7ba1\u6211\u4eec\u8ba4\u4e3a&#39\uff1b\u8fd9\u662f\u4eba\u7c7b\u7684\u4e8b\u3002\u673a\u5668\u5b66\u4e60\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u5927\u5403\u4e00\u60ca\u3002\n\u673a\u5668\u8bc4\u5224\u4e0d\u4ec5\u662f\u516c\u6b63\u7684\uff08\u5b83\u53ef\u80fd\u4f1a\u5bf9\u5b83\u7684\u8bad\u7ec3\u6216\u7f16\u7801\u65b9\u5f0f\u4ea7\u751f\u504f\u89c1\uff0c\u800c\u4e14\u4f1a\u4e00\u89c6\u540c\u4ec1\uff09\uff0c\u800c\u4e14\u53ef\u4ee5\u63d0\u524d\u63d0\u4f9b\u7ed9\u7ade\u4e89\u5bf9\u624b\u3002\u8fd0\u52a8\u5458\u5728\u8bad\u7ec3\u6216\u7ec3\u4e60\u65f6\u53ef\u4ee5\u770b\u5230\u673a\u5668\u7ed9\u4ed6\u4eec\u7684\u5206\u6570\u6709\u591a\u9ad8\uff0c\u5e76\u4ee5\u5ba2\u89c2\u7684\u65b9\u5f0f\u52aa\u529b\u63d0\u9ad8\u4ed6\u4eec\u7684\u5206\u6570\u3002\u8fd9\u4f7f\u5f97\u5b83\u66f4\u591a\u7684\u662f\u4f53\u80b2\u800c\u4e0d\u662f\u827a\u672f\uff0c\u5c24\u5176\u662f\u5982\u679c&#34\uff1b\u827a\u672f\u548c#34\uff1b\u90e8\u4ef6\u7531\u673a\u5668\u5224\u65ad\u3002\n\u53e6\u4e00\u79cd\u6211\u6ca1\u6709\u60f3\u5230\u7684\u7ade\u4e89\u65b9\u5f0f\u662f#39\uff1b\u4ee5\u4e0a\u662f\u8df3\u9ad8\u3001\u6491\u6746\u8df3\u548c\u5176\u4ed6\u4e00\u4e9b\u8fd0\u52a8\u7684\u6e10\u8fdb\u5f0f\u65b9\u6cd5\u3002\u8fd0\u52a8\u5458\u4eec\u8d8a\u8fc7\u969c\u788d\u7269\uff0c\u4e0d\u65ad\u63d0\u9ad8\uff0c\u76f4\u5230\u53ea\u6709\u4e00\u4e2a\u4eba\u80fd\u505a\u5230\u4e3a\u6b62\u3002\u8fd9\u662f\u5ba2\u89c2\u548c\u620f\u5267\u6027\u7684\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u79cd\u6e9c\u51b0\u8df3\u8dc3\u7684\u8bad\u7ec3\uff0c\u82b1\u6837\u6ed1\u51b0\u8005\u53ea\u662f\u5728\u5c55\u793a\u8d8a\u6765\u8d8a\u96be\u7684\u8df3\u8dc3\u548c\u6280\u5de7\uff0c\u76f4\u5230\u6700\u597d\u7684\u6e9c\u51b0\u7ed3\u675f\u3002\u8fd9\u53ef\u80fd\u4e0d\u50cf\u4e00\u4e2a\u82b1\u6837\u6ed1\u51b0\u957f\u65f6\u95f4\u7684\u97f3\u4e50\u8282\u76ee\u90a3\u4e48\u597d\u770b\uff0c\u4f46\u4f1a\u66f4\u5177\u8fd0\u52a8\u6027\uff0c\u7ed9\u6211\u4eec\u7559\u4e0b\u4e00\u4e2a\u663e\u7136\u662f\u90a3\u5929\u6700\u597d\u7684\u8d62\u5bb6\u3002\n\u82b1\u6837\u6ed1\u51b0\u7b49\u8fd0\u52a8\u7684\u60b2\u5267\u4e4b\u4e00\u662f\uff0c\u56e0\u4e3a\u4eba\u4eec\u88ab\u63a8\u5230\u4e86\u4ed6\u4eec\u80fd\u505a\u7684\u6781\u9650\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u8d62\u5bb6\u662f\u90a3\u4e2a\u6ca1\u6709\u505a\u5230\u7684\u4eba&#39\uff1b\u4e0d\u8981\u6454\u5012\u3002\u5728\u4e00\u573a\u6bd4\u8d5b\u4e2d\uff0c\u4e00\u4e2a\u4eba80%\u7684\u65f6\u95f4\u90fd\u80fd\u8df3\u56db\u8f74\uff0c\u4f46\u540e\u6765\u5c1d\u8bd5\u5931\u8d25\uff0c\u4ed6\u8f93\u7ed9\u4e86\u4e00\u4e2a\u80fd\u8df3\u7684\u4eba&#39\uff1b\u6839\u672c\u4e0d\u505a\uff0c\u4e5f\u4ece\u4e0d\u5c1d\u8bd5\u3002\n\u5bf9\u4e8e\u89c2\u4f17\u6765\u8bf4\uff0c\u5bf9\u4e2a\u4eba\u8fdb\u884c\u8ba1\u65f6\u6216\u8bc4\u5224\u7684\u8fd0\u52a8\u53ef\u4ee5\u4e0e\u89c6\u9891\u6280\u5de7\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\uff0c\u6bd4\u5982\u5728\u51b0\u4e0a\u6216\u7530\u91ce\u4e0a\u753b\u4e00\u6761\u7ebf\u6765\u663e\u793a\u5f53\u524d\u7684\u9886\u5bfc\u8005\u5f53\u65f6\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u5230\u6709\u4eba\u5728\u8d5b\u8dd1\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e8b\u540e\u7b49\u5f85\u89c2\u770b\u7684\u4eba\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u751f\u6210\u4e00\u4e2a\u5de8\u5927\u768410\u8f66\u9053\u5757\u72b6\u8dd1\u9053\u7684\u56fe\u50cf\uff0c\u5176\u4e2d\u670910\u8f86\u96ea\u6a47\u5728\u6bd4\u8d5b\uff0c\u8fd8\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u7684\u51b2\u523a\u3002\n\u4f60\u751a\u81f3\u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u8bc4\u5224\u7684\u4e8b\u4ef6\u4e2d\uff0c\u4f60\u770b\u5230\u4e00\u7fa4\u4eba\uff08\u65e0\u8bba\u9002\u5408\u8c01\uff09\u5e76\u884c\u5730\u505a\u4ed6\u4eec\u7684\u628a\u620f\u6216\u52a8\u4f5c\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5e76\u770b\u5230\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u6bd4\u53e6\u4e00\u4e2a\u66f4\u597d\u3002\n\u56e0\u4e3a\u6211\u9700\u8981\u4ece\u672c\u5730DVR\u548cdon&#39\uff1b\u6211\u6ca1\u6709\u6709\u7ebf\u7535\u89c6\uff0c\u6211\u53ea\u77e5\u9053\u4ed6\u4eec\u5728NBC\u64ad\u51fa\u7684\u8282\u76ee\u3002\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u5377\u53d1\uff0c\u4f46\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\n\u6bcf\u4e00\u9879\u8fd0\u52a8\u90fd\u53ef\u4ee5\u5728\u5b54\u96c0\u4e0a\u89c2\u770b\uff0c\u5bf9\u6211\u6765\u8bf4\u662f\u514d\u8d39\u7684\uff0c\u6ca1\u6709\u5eb7\u5361\u65af\u7279\u7684\u4eba\u6bcf\u6708\u53ea\u97005\u7f8e\u5143\u3002\u5927\u591a\u6570\u56fd\u5bb6\u90fd\u5b58\u5728\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u7136\u800c\uff0c\u4f60\u6240\u89c2\u770b\u7684\u8282\u76ee\u5df2\u7ecf\u8feb\u4f7f\u5e7f\u544a\u4f11\u606f\u2014\u2014\u5982\u679c\u4f60\u5728\u5e7f\u544a\u4f11\u606f\u540e\u5feb\u8fdb\u4e86\u4e00\u5927\u7247\uff0c\u4f60\u5fc5\u987b\u89c2\u770b\u2014\u2014\u4f60\u53ef\u4ee5&#39\uff1b\u4e0d\u8981\u5feb\u8fdb\uff0c\u53ea\u56db\u5904\u5bfb\u627e\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740&#39\uff1b\u4e0d\u7b26\u5408\u6211\u89c2\u770b\u51b0\u58f6\u7684\u98ce\u683c\uff0c\u90a3\u5c31\u662f\u5feb\u8fdb\u524d\u51e0\u5757\u77f3\u5934\uff0c\u89c2\u770b\u6bcf\u4e00\u7aef\u4ee4\u4eba\u5174\u594b\u7684\u90e8\u5206\uff0c\u5982\u679c\u5f00\u5934\u6709\u8da3\uff0c\u53ef\u80fd\u4f1a\u6682\u505c\u3002\u6211\u4e5f\u4f1a\u6253&#34\uff1b\u5feb\u901f\u8df3\u8fc7&#34\uff1b\u5f53\u4e00\u5757\u77f3\u5934\u4ece\u51b0\u4e0a\u5f80\u4e0b\u79fb\u52a8\u65f6\u3002\uff08\u5728\u66f2\u68cd\u7403\u6bd4\u8d5b\u4e2d\uff0c\u5f53\u54e8\u58f0\u54cd\u8d77\u65f6\uff0c\u6211\u6309\u4e86\u4e00\u4e0b\u6211\u7684\u5feb\u901f\u8df3\u8dc3\u6309\u94ae\uff0c\u628a\u6211\u5e26\u5230\u4e86\u5bf9\u5cd9\u7684\u5730\u65b9\u3002\u662f\u7684\uff0c\u6211\u5bf9\u8fd9\u4ef6\u4e8b\u975e\u5e38\u7740\u8ff7\u3002\uff09\n\u4e0d\u7ba1\u600e\u6837\uff0c\u73b0\u5728\u6211\u6b63\u5728\u5b54\u96c0\u4e0a\u73a9\u4e00\u573a\u6bd4\u8d5b\uff0c\u5e76\u4f7f\u7528OBS\uff08\u4efb\u4f55\u5c4f\u5e55\u5f55\u5236\u5de5\u5177\u90fd\u53ef\u4ee5\uff09\u5c06\u5176\u5f55\u5236\u4e3a\u672c\u5730\u89c6\u9891\u3001\u5546\u4e1a\u5e7f\u544a\u7b49\u7a0d\u540e\uff0c\u6211\u5c06\u4ece\u672c\u5730\u6587\u4ef6\u89c2\u770b\u5b83\uff0c\u4ee5\u53ca\u6211\u60f3\u8981\u7684\u6240\u6709\u529f\u80fd\u3002\u6700\u5927\u7684\u95ee\u9898\u662f\u7834\u574f\u8005\u3002\u5982\u679c\u4f60\u4e0d\u662f\u5f88\u5c0f\u5fc3\uff0c\u5982\u679c\u4f60\u53bb\u5b54\u96c0\u7f51\u7ad9\uff0c\u4f60\u4f1a\u5f97\u5230\u5267\u900f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5956\u724c\u6bd4\u8d5b\u5728\u4f60\u7684\u540d\u5355\u4e2d\uff0c\u4ed6\u4eec\u4f1a\u5c06\u53c2\u8d5b\u8005\u7684\u540d\u5b57\u6539\u4e3a\u53c2\u8d5b\u8005\u7684\u540d\u5b57\u2014\u2014\u8fd9\u4f1a\u7834\u574f\u4f60\u7684\u534a\u51b3\u8d5b\u3002", "note_en": "Submitted by   on Fri, 2022-02-11 15:33  Most sports are for the athlete, and should be. Some gain an audience, and bend to it to some degree. Perhaps the pinnacle of spectator sport is the Olympics. The are an international stage. While the medals are highly coveted by the athletes, almost all sports have their own world championships and other tournaments which are mostly for the athletes and a more limited cadre of serious spectators. The Olympics are about showing the world, as well as a bit too much national pride.\n The games, in particular the winter games, are hit-and-miss on that count. Nobody can watch more than a tiny fraction. I always watch using a DVR, in particular a local DVR not a cloud DVR, where the video is stored on my disk and I can seek through it in an instant, and do decent quality fast-forward, rewind and sped-up playback. This is even more important than skipping commercials, and it lets me get through hours of coverage, seeing just what I want, in minutes, and see far more of the events than I ever could.\n But there are definitely big differences in how engaging events are for the spectator. Perhaps the #1 event is the 100 meter sprint. It is of course very brief, and impressive -- &#34;fastest man alive&#34; -- but it has another important attribute -- you can watch it, and understand it, and see who is winning and who won, just with your eyes. (It&#39;s actually a little too fast, and the longer distances are a bit better.) You usually know who won, you don&#39;t need to check scores, or get ratings from judges, or not times on a clock. If it&#39;s close, a photo tells you the answer. There is action, and drama, and all the final contenders race at once.\n Few sports live up to this. A large number of sports are done only with the clock. You watch 30 people do exactly the same thing, and note their times, and the best time is the winner. They work hard to have people compete in an order to make it interesting, with fastest going last or first, but they can only do so much. It&#39;s just not the same as seeing people race in real time to cross a finish. There&#39;s not the same excitement when somebody who went earlier gets a fast time, and the final racer misses by a small margin, and the camera then switches to that prior racer who has become champion.\n Even more confusing are staggered races, where somebody leaves every 30 seconds, and people are competing but not. Those finish lines are confusing in spite of efforts to explain what&#39;s going on.\n The clock is great though, compared to judged sports. Unless you are skilled, you may not be able to tell the difference between different tricks. The judges do their thing, and have to deal with the fact that they judge the early competitors without having seen the later ones. They are supposed to be objective but obviously can&#39;t be. And many sports have both clock and judging.\n The clock is understandable. It is certainly the most fair (though the later racers get to know what time to beat.) Some sports, like short-track speed skating and snowboard cross try to give us the race we crave, and it&#39;s very entertaining, but of course victory and defeat can come from just being in the wrong place at the wrong time when there&#39;s a crash. It&#39;s &#34;part of the sport&#34; and audiences partly love chaos, but we do also want the competition to be about excellence rather than luck.\n The other form of competition is one on one matches. These require ranking and eventually playoffs, where people or teams face elimination rounds until there is a gold vs. silver final match. Those can be quite engaging to watch, though the process takes a very long time in comparison to other approaches. There can also be some luck in what pairings somebody gets, and we&#39;ve seen times when the gold was not won by the competitor universally praised as the best.\n At least with this method you get something fairly pure, and individual matches have the full drama of their sport. But few have time to watch all the hockey, or curling, or baseball, though you can satisfy with the final matches. They take so long that TV tends to keep away from them.\n I like to see strategy as well as performance, so I have tended to like the long races and the curling bonspiels and that gold medal hockey game. Even so, I definitely watch them vastly sped up. In the hour long races I will speed through most of the race. I would love a recording which does that for me, slowing down for where it is worth doing so. I was fortunate to catch the race of  Anna Kiesenhoffer and a few others like it but my speeding up technique did not serve me well there to capture the drama of her amazing accomplishment. The alternative though, would be to not have the time to see it at all.\n  As noted above, I am not a fan of judged sports. While they are not going away, I think there could be merit in moving towards computer judging -- ie. like the clock -- for many of them. We are now at the point that computers can track everything about the body, and know not just how many rotations somebody did but how close to ideal forms they did them. They can also report it instantly. We might be surprised at how well they could even do at judging &#34;artistic impression,&#34; even though we think that&#39;s a human thing. Machine learning could surprise us there.\n Machine judging would not only be impartial (it might have biases from how it was trained or coded, but would treat all the same) but could be given to competitors in advance. A competitor when training or practicing could see how well the machine scores them, and work to improve their score in an objective way. This makes it more sport than art, particularly if the &#34;artistic&#34; components are machine judged.\n One other method of competition I didn&#39;t list above is the progressive method of high jump, pole vault and some other sports. Athletes go over the bar, and they keep raising it until nobody but one can do it. This is objective and dramatic. One could imagine a discipline of skate jumping where figure skaters just show off harder and harder jumps and tricks until the best is left skating. This might not be as pretty as a figure skating long program to music, but would be more athletic and leave us with a winner who was clearly best that day.\n One of the tragedies of sports like figure skating is that because people are pushed to the limit of what they can do, the winner ends up being the one who didn&#39;t fall. In a contest between one man who can jump a quad axel 80% of the time, but then tries it and fails, he loses to the man who can&#39;t do it at all and never tries.\n  For the audience, sports where individuals are timed or judged could be put together with video tricks. We already see some of this, such as painting a line on the ice or field to show where the current leader was at this time, so we see somebody race the line. For those waiting to watch after the fact, we could see the computer produce an image of a giant 10 lane blobsled track where 10 sleds are racing, and see something like that sprint.\n You could even imagine that in judged events where you see an array of people (whoever will fit) doing their tricks or moves in parallel so you can compare and see why one is better than another.\n  As I need to watch from local DVR, and don&#39;t have cable, I am limited to what they put on broadcast NBC. That means no curling, but there is a solution.\n Every single sport can be watched on Peacock, which is free to me and only $5/month for people without Comcast. Something like this exists in most countries. However, what you watch has forced commercial breaks -- and if you fast forward over a large section past a commercial break you must watch it -- and you can&#39;t really fast forward, only seek around. This doesn&#39;t fit my style of watching curling, which is to fast forward over the first few stones and watch the exciting part of each end, possibly pausing if the opening is interesting. I will also hit &#34;quick skip&#34; when a stone is moving down the ice. (In hockey, I hit my quick skip button when a whistle blows to take me right to the face-off. Yes, I&#39;m that nuts about this.)\n Anyway, right now I am playing a match on Peacock and recording it as a local video, commercials and all, using OBS (any screen recording tool will do.) Later I will watch it from the local file, with all the functions I want. The big problem is spoilers. If you are not very careful, if you go to the Peacock site you will get spoilers. For example, if the medal games are in your list, they change the title of the entry to be the names of the people playing -- spoiling the semi-finals for you.", "posttime": "2022-02-19 02:47:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sports,\u8bbe\u8ba1,olympic,\u6bd4\u8d5b", "title": "\u4e3a\u89c2\u4f17\u8bbe\u8ba1\u5965\u8fd0\u9879\u76ee", "title_en": "Designing Olympic sports for the spectator", "transed": 1, "url": "https://ideas.4brad.com/designing-olympic-sports-spectator", "via": "", "real_tags": ["sports", "\u8bbe\u8ba1", "olympic", "\u6bd4\u8d5b"]}]
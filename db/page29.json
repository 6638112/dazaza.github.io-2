[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1071988, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e5\u671f\uff1a2021 \u5e74 8 \u6708 7 \u65e5\u661f\u671f\u516d 03:51:07 +0200 \u53d1\u4ef6\u4eba\uff1aAxel Beckert &lt;abe@...ian.org&gt;\u6536\u4ef6\u4eba\uff1alynx-dev@...gnu.orgCc\uff1aoss-security@...ts.openwall .com, security@...ian.org, 991971@...s.debian.orgSubject: Re: [Lynx-dev] Lynx SSL \u8bc1\u4e66\u9a8c\u8bc1\u4e2d\u7684\u9519\u8bef -&gt; \u901a\u8fc7 SNI \u4ee5\u660e\u6587\u5f62\u5f0f\u6cc4\u9732\u5bc6\u7801\uff08\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff09 )\u55e8\uff0c2021 \u5e74 8 \u6708 6 \u65e5\u661f\u671f\u4e94\u4e0b\u5348 05:14:32 +0000\uff0cThorsten Glaser&lt;tg@...bsd.de&gt; \u5728 https://lists.nongnu.org/archive/html/lynx-dev \u4e2d\u5199\u9053/2021-08/msg00000.html:&gt; \u8fd9\u4f1a\u5f71\u54cd OpenSSL \u548c Debian \u7684\u975e GNUtls \u6784\u5efa\uff1a&gt; &gt; lynx https://user:pass@...t/&gt; &gt; ... \u5c06\u5bfc\u81f4...&gt; &gt; SSL error:host(user :pass@...t)!=cert(CN&lt;mainhost&gt;:SAN&lt;DNS=host&gt;:SAN&lt;DNS=otherhost&gt;&gt; &gt; ... \u5bf9\u4e8e OpenSSL lynx \u548c...&gt; &gt; SSL \u9519\u8bef:host(user:pass@. ..t)!=cert(CN&lt;mainhost&gt;)-Continue? (n)&gt; &gt; ... for nonGNUtls lynx.&gt; &gt; \u663e\u7136\uff0cuser:pass@ \u9700\u8981\u5728\u6bd4\u8f83\u4e4b\u524d\u88ab\u5265\u79bb\u3002\u8fd9\u6bd4\u6700\u521d\u770b\u8d77\u6765\u66f4\u4e25\u91cd\uff1a\u7531\u4e8e TLS ServerName Indication (SNI)\uff0cLynx \u89e3\u6790\u7684\u4e3b\u673a\u540d\uff08\u5373\u5305\u542b\u201cuser:pass@\u201d\uff09\u5728 _c \u4e2d\u53d1\u9001lear_ \u7f51\u7edc\u4e0a\u7684\u6587\u672c even_before_ \u6211\u4ec0\u81f3\u53ef\u4ee5\u5728 Lynx \u7684\u63d0\u793a\u4e2d\u8bf4\u201cn\u201d\u8868\u793a\u201c\u4e0d\uff0c\u4e0d\u8981\u7ee7\u7eed\u4e0e\u6b64\u670d\u52a1\u5668\u5bf9\u8bdd\u201d\uff0c\u5982\u4e0a\u6240\u793a\u3002\u6211\u80fd\u591f\u5728 TLS \u63e1\u624b\u7684\u6d41\u91cf\u4e2d\u6355\u83b7\u547d\u4ee4\u884c\u4e0a\u7ed9\u51fa\u7684\u5bc6\u7801\u4f7f\u7528tcpdump \u5e76\u4f7f\u7528 Wireshark \u8fdb\u884c\u5206\u6790\uff1a\u6765\u81ea Wiresharks TLS dissector\uff1a\u670d\u52a1\u5668\u540d\u79f0\u6307\u793a\u6269\u5c55\u670d\u52a1\u5668\u540d\u79f0\u5217\u8868\u957f\u5ea6\uff1a28 \u670d\u52a1\u5668\u540d\u79f0\u7c7b\u578b\uff1ahost_name (0) \u670d\u52a1\u5668\u540d\u79f0\u957f\u5ea6\uff1a25 \u670d\u52a1\u5668\u540d\u79f0\uff1auser:pass@....example.org ^ ^^^^^^^^^\u6765\u81eaWiresharks\u201c\u8ddf\u968fTCP\u6d41\u201d\uff1a...........a....jV.........../..... ..D.&amp;...R.+.,..... ..../.0.........z.{./.5.A ........|.}.3.9.E.................2.8.D........ .$.&quot;...user:pass@....example.org......#................................ ......................\uff08\u53ef\u5e94\u8981\u6c42\u63d0\u4f9b PCAP\u3002\u5b9e\u9645\u4e0a\u7528\u6211\u7684\u672c\u5730\u670d\u52a1\u5668\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u4f46\u662f\u5b83\u5e94\u8be5\u5f88\u5bb9\u6613\u91cd\u73b0\uff0c\u65e0\u8bba\u662f\u4efb\u4f55 Linux \u53d1\u884c\u7248\u3002\uff09\u6211\u7528\u6765\u81ea Debian Experimental\uff08\u5b83\u6709\u5f53\u524d\u7684 Lynx \u4e0a\u6e38\u7248\u672c 2.9.0dev.8\uff09\u7684 Lynx \u4ee5\u53ca\u6765\u81ea Debian 8 Jessie ELTS\uff08\u5b83\u6709 Lynx 2.8.9dev.1) \u5e76\u4e14\u90fd\u901a\u8fc7 SNI \u6cc4\u9732\u5bc6\u7801\u3002\u6211\u867d\u7136\u5047\u8bbe Lynx \u7684\u65e7\u7248\u672c\u4e5f\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\uff0c\u81f3\u5c11\u5982\u679c\u5b83\u4eec\u6216\u76f8\u5e94\u7684\u52a0\u5bc6\u5e93\u652f\u6301 SNI\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ec5\u5c1d\u8bd5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528 Lynx\uff08\u5e76\u4e14\u770b\u5230\u5b83\u5931\u8d25\uff09\u5df2\u7ecf\u6cc4\u9732\u4e86\u4f7f\u7528\u7684\u5bc6\u7801\u3002\u6055\u6211\u76f4\u8a00\uff0c\u8fd9\u4ecd\u7136\u9700\u8981\u4e00\u4e2a CVE-ID.Cc&#39;ing Debian \u5b89\u5168\u56e2\u961f\u4ee5\u53ca OSS \u5b89\u5168\u90ae\u4ef6\u5217\u8868\uff0c\u4ee5\u4fbf\u8ba9\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u8fd8\u66f4\u65b0\u4e86\u8be5\u7ebf\u7a0b\u7684\u4e3b\u9898\uff0c\u4ee5\u4f7f\u5176\u5728\u5176\u4ed6\u90ae\u4ef6\u5217\u8868\u4e2d\u4e0d\u90a3\u4e48\u542b\u7cca\u4e0d\u6e05\u3002\u6211\u8fd8\u6284\u9001\u4e86\u6211\u4e3a\u5728 Debian \u4e2d\u8ddf\u8e2a\u6b64\u95ee\u9898\u800c\u521b\u5efa\u7684\u76f8\u5e94 Debian \u9519\u8bef\u62a5\u544a\uff1ahttps://bugs.debian.org/991971\u4eb2\u5207\u7684\u95ee\u5019\uff0c\u963f\u514b\u585e\u5c14 - \uff0c&#39;&#39;`\u3002 | Axel Beckert &lt;abe@...ian.org&gt;, https://people.debian.org/~abe/: :&#39; : | Debian \u5f00\u53d1\u4eba\u5458\uff0cftp.ch.debian.org \u7ba1\u7406\u5458`\u3002 `&#39; | 4096R\uff1a2517 B724 C5F6 CA99 5329 6E61 2FF9 CD59 6126 16B5`- | 1024D: F067 EA27 26B9 C3FC 1486 202E C09E 1D89 9593 0EDE \u4e0b\u8f7d\u201capplication/pgp-signature\u201d\u7c7b\u578b\u7684\u9644\u4ef6\u201csignature.asc\u201d\uff08834\u5b57\u8282\uff09", "note_en": "Date: Sat, 7 Aug 2021 03:51:07 +0200From: Axel Beckert &lt;abe@...ian.org&gt;To: lynx-dev@...gnu.orgCc: oss-security@...ts.openwall.com, security@...ian.org,\t991971@...s.debian.orgSubject: Re: [Lynx-dev] bug in Lynx&#39; SSL certificate validation -&gt; leaks password in clear text via SNI (under some circumstances)Hi,On Fri, Aug 06, 2021 at 05:14:32PM +0000, Thorsten Glaser&lt;tg@...bsd.de&gt; wrote in https://lists.nongnu.org/archive/html/lynx-dev/2021-08/msg00000.html:&gt; this affects both OpenSSL and Debian\u2019s nonGNUtls builds:&gt; &gt; lynx https://user:pass@...t/&gt; &gt; \u2026 will lead to\u2026&gt; &gt; SSL error:host(user:pass@...t)!=cert(CN&lt;mainhost&gt;:SAN&lt;DNS=host&gt;:SAN&lt;DNS=otherhost&gt;&gt; &gt; \u2026 for OpenSSL lynx and\u2026&gt; &gt; SSL error:host(user:pass@...t)!=cert(CN&lt;mainhost&gt;)-Continue? (n)&gt; &gt; \u2026 for nonGNUtls lynx.&gt; &gt; Obviously, user:pass@ need to be stripped before comparing.This is more severe than it initially looked like: Due to TLS ServerName Indication (SNI) the hostname as parsed by Lynx (i.e with&#34;user:pass@&#34; included) is sent in _clear_ text over the wire even_before_ I can even said &#34;n&#34; for &#34;no, don&#39;t continue to talk with thisserver&#34; in Lynx&#39;s prompt as shown above.I was able to capture the password given on the commandline in trafficof an TLS handshake using tcpdump and analysing it with Wireshark:From Wiresharks TLS dissector:Server Name Indication extension Server Name list length: 28 Server Name Type: host_name (0) Server Name length: 25 Server Name: user:pass@....example.org ^^^^^^^^^^From Wiresharks &#34;Follow TCP stream&#34;:...........a....jV.. ......../.......D.&amp;....R.+.,.....\t..../.0...............z.{./.5.A........|.}.3.9.E.............2.8.D.......p............$.&#34;...user:pass@....example.org......#.....................................................(PCAPs available on request. Actually did the test with a local serverof mine. But it should be easy to reproduce, be it with any Linuxdistribution.)I did this test with Lynx from Debian Experimental (which has thecurrent Lynx upstream release 2.9.0dev.8) as well as with Lynx fromDebian 8 Jessie ELTS (which has Lynx 2.8.9dev.1) and both leak thepassword via SNI. I though assume that older releases of Lynx areprobably also affected as well, at least if they or the accordingcrypto libraries support SNI.But given that the symptoms Thorsten discovered stayed unreported forquite some years, I assume that this use case is a rather seldom one.Nevertheless only trying to use Lynx that way (and seeing it fail)already leaks the used password.IMHO this nevertheless needs a CVE-ID.Cc&#39;ing Debian Security Team as well as the OSS Security mailing listfor making them aware of this issue. I also updated the subject ofthis thread to make it less ambigous on other mailing lists.And I&#39;m also Cc&#39;ing the according Debian bug report which I createdfor tracking this issue in Debian:  https://bugs.debian.org/991971\t\tKind regards, Axel-- ,&#39;&#39;`. | Axel Beckert &lt;abe@...ian.org&gt;,  https://people.debian.org/~abe/: :&#39; : | Debian Developer, ftp.ch.debian.org Admin`. `&#39; | 4096R: 2517 B724 C5F6 CA99 5329 6E61 2FF9 CD59 6126 16B5 `- | 1024D: F067 EA27 26B9 C3FC 1486 202E C09E 1D89 9593 0EDE  Download attachment &#34; signature.asc &#34; of type &#34;application/pgp-signature &#34; (834 bytes)", "posttime": "2021-08-07 23:57:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,ssl,lynx", "title": "Lynx \u7684 SSL \u8bc1\u4e66\u9a8c\u8bc1\u4e2d\u7684\u9519\u8bef\u2014\u2014\u901a\u8fc7 SNI \u4ee5\u660e\u6587\u5f62\u5f0f\u6cc4\u9732\u5bc6\u7801", "title_en": "Bug in Lynx' SSL certificate validation \u2013 leaks password in clear text via SNI", "transed": 1, "url": "https://www.openwall.com/lists/oss-security/2021/08/07/1", "via": "", "real_tags": ["\u5bc6\u7801", "ssl", "lynx"]}, {"category": "", "categoryclass": "", "imagename": "ca744160e92e40965bdb02694fdc4c53.png", "infoid": 1071984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "RedMonk \u7f16\u7a0b\u8bed\u8a00\u7684\u8fd9\u4e2a\u8fed\u4ee3\u662f\u7531 Microsoft \u5e26\u7ed9\u60a8\u7684\u3002\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u672a\u6765\u3002 Microsoft \u652f\u6301\u60a8\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\uff0cJava \u4e5f\u4e0d\u4f8b\u5916\uff1b\u6211\u4eec\u559c\u6b22\u5b83\u3002\u6211\u4eec\u63d0\u4f9b\u6700\u597d\u7684 Java \u5f00\u53d1\u5de5\u5177\u3001\u57fa\u7840\u8bbe\u65bd\u548c\u73b0\u4ee3\u6846\u67b6\u652f\u6301\u3002\u4f7f\u7528 Microsoft \u5b9e\u73b0 Java \u5f00\u53d1\u73b0\u4ee3\u5316\u3002\u867d\u7136\u6211\u4eec\u901a\u5e38\u4f1a\u5c1d\u8bd5\u5728 7 \u6708\u4efd\u6392\u540d\u8fd0\u884c\u540e\u7acb\u5373\u8fdb\u884c\u6392\u540d\uff0c\u4f46\u6211\u4eec\u901a\u5e38\u4ee5\u8fdf\u5230\u603b\u6bd4\u4e0d\u505a\u8981\u597d\u3002\u90a3\u4e48\uff0c\u5047\u8bbe 8 \u6708\u603b\u6bd4\u6ca1\u6709\u597d\uff0c\u4e0b\u9762\u662f\u60a8\u7684 RedMonk Q3 \u8bed\u8a00\u6392\u540d\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u8fd9\u4e9b\u662f\u6700\u521d\u7531 Drew Conway \u548c John Myles White \u5728 2010 \u5e74\u5e95\u5b8c\u6210\u7684\u5de5\u4f5c\u7684\u5ef6\u7eed\u3002\u867d\u7136\u5177\u4f53\u7684\u6536\u96c6\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u57fa\u672c\u8fc7\u7a0b\u4fdd\u6301\u4e0d\u53d8\uff1a\u6211\u4eec\u4ece GitHub \u548c Stack Overflow \u4e2d\u63d0\u53d6\u8bed\u8a00\u6392\u540d\uff0c\u4ee5\u53ca\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\u4ee5\u83b7\u5f97\u8bd5\u56fe\u53cd\u6620\u4ee3\u7801 (GitHub) \u548c\u8ba8\u8bba (Stack Overflow) \u5438\u5f15\u529b\u7684\u6392\u540d\u3002\u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u662f\u63d0\u4f9b\u5f53\u524d\u4f7f\u7528\u7684\u7edf\u8ba1\u4e0a\u6709\u6548\u7684\u8868\u793a\uff0c\u800c\u662f\u5c06\u8bed\u8a00\u8ba8\u8bba\u548c\u4f7f\u7528\u76f8\u5173\u8054\uff0c\u4ee5\u4fbf\u6df1\u5165\u4e86\u89e3\u6f5c\u5728\u7684\u672a\u6765\u91c7\u7528\u8d8b\u52bf\u3002\u7528\u4e8e\u5206\u6790\u7684 GitHub \u90e8\u5206\u7684\u6570\u636e\u6e90\u662f GitHub \u5b58\u6863\u3002\u6211\u4eec\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42\u6765\u67e5\u8be2\u8bed\u8a00\uff0c\u5176\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u7ec4\u88c5 Octoverse \u72b6\u6001\u7684 GitHub\u3002\u6211\u4eec\u7684\u67e5\u8be2\u65e8\u5728\u5c3d\u53ef\u80fd\u4e0e\u4e4b\u524d\u7684\u6d41\u7a0b\u5177\u6709\u53ef\u6bd4\u6027\u3002\u8bed\u8a00\u57fa\u4e8e\u57fa\u672c\u5b58\u50a8\u5e93\u8bed\u8a00\u3002\u867d\u7136\u8fd9\u4ecd\u7136\u6709\u4e0b\u9762\u6982\u8ff0\u7684\u8b66\u544a\uff0c\u4f46\u5b83\u786e\u5b9e\u5177\u6709\u4e0e\u6211\u4eec\u4ee5\u524d\u7684\u65b9\u6cd5\u76f8\u7ed3\u5408\u7684\u597d\u5904\u3002\u6211\u4eec\u4f7f\u7528\u6c47\u603b\u7684\u5386\u53f2\u8bb0\u5f55\u6765\u786e\u5b9a\u6392\u540d\uff08\u5c3d\u7ba1\u57fa\u4e8e\u8868\u7ed3\u6784\u7684\u53d8\u5316\uff0c\u8fd9\u4e0d\u80fd\u518d\u901a\u8fc7\u5355\u4e2a\u67e5\u8be2\u6765\u5b8c\u6210\u3002\uff09\u5bf9\u4e8e Stack Overflow\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528\u4ed6\u4eec\u6709\u7528\u7684\u6570\u636e\u6d4f\u89c8\u5668\u5de5\u5177\u6536\u96c6\u6240\u9700\u7684\u6307\u6807\u3002\n\u6709\u4e86\u8fd9\u4e2a\u63cf\u8ff0\uff0c\u8bf7\u8bb0\u4f4f\u5176\u4ed6\u5e38\u89c1\u7684\u8b66\u544a\u3002\u8981\u5305\u542b\u5728\u6b64\u5206\u6790\u4e2d\uff0c\u5fc5\u987b\u5728 GitHub \u548c Stack Overflow \u4e2d\u90fd\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u79cd\u8bed\u8a00\u3002\u8fd9\u91cc\u6ca1\u6709\u58f0\u79f0\u8fd9\u4e9b\u6392\u540d\u66f4\u5e7f\u6cdb\u5730\u4ee3\u8868\u4e86\u4e00\u822c\u7528\u6cd5\u3002\u5b83\u4eec\u53ea\u4e0d\u8fc7\u662f\u5bf9\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u9884\u6d4b\u672a\u6765\u4f7f\u7528\u7684\u4e24\u4e2a\u7fa4\u4f53\u4e4b\u95f4\u76f8\u5173\u6027\u7684\u68c0\u67e5\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4ef7\u503c\u3002\u6709\u8bb8\u591a\u6f5c\u5728\u7684\u793e\u533a\u53ef\u4ee5\u4e3a\u8fd9\u9879\u5206\u6790\u8fdb\u884c\u8c03\u67e5\u3002\u8fd9\u91cc\u4f7f\u7528 GitHub \u548c Stack Overflow \u9996\u5148\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u89c4\u6a21\uff0c\u5176\u6b21\u662f\u56e0\u4e3a\u5b83\u4eec\u516c\u5f00\u4e86\u5206\u6790\u6240\u9700\u7684\u6570\u636e\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9f13\u52b1\u611f\u5174\u8da3\u7684\u5404\u65b9\u4f7f\u7528\u5176\u4ed6\u6765\u6e90\u8fdb\u884c\u81ea\u5df1\u7684\u5206\u6790\u3002\u6240\u6709\u7684\u6570\u5b57\u6392\u540d\u90fd\u5e94\u8be5\u6301\u4fdd\u7559\u6001\u5ea6\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4e25\u683c\u6309\u7167\u6570\u5b57\u6392\u540d\u662f\u4e3a\u4e86\u5174\u8da3\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6570\u5b57\u6392\u540d\u7684\u76f8\u5173\u6027\u8fdc\u4f4e\u4e8e\u8bed\u8a00\u7684\u5c42\u7ea7\u6216\u5206\u7ec4\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\u4e0e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u53ef\u533a\u5206\u7684\u3002\u7136\u800c\uff0c\u60c5\u8282\u4e0a\u8bed\u8a00\u5c42\u4e4b\u95f4\u7684\u5206\u79bb\u901a\u5e38\u4ee3\u8868\u4e86\u76f8\u5bf9\u53d7\u6b22\u8fce\u7a0b\u5ea6\u7684\u5b9e\u8d28\u6027\u5dee\u5f02\u3002\u6b64\u5916\uff0c\u6392\u540d\u8d8a\u9760\u540e\uff0c\u53ef\u7528\u4e8e\u5bf9\u8bed\u8a00\u8fdb\u884c\u6392\u540d\u7684\u6570\u636e\u5c31\u8d8a\u5c11\u3002\u9664\u4e86\u9876\u7ea7\u8bed\u8a00\u4e4b\u5916\uff0c\u6839\u636e\u5feb\u7167\uff0c\u8981\u8bc4\u4f30\u7684\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u5e76\u4e14\u8bed\u8a00\u7684\u5b9e\u9645\u4f4d\u7f6e\u8d8a\u5f80\u4e0b\u8d8a\u4e0d\u53ef\u9760\u3002\u5177\u6709\u57fa\u4e8e Stack Overflow \u4e4b\u5916\u7684\u793e\u533a\u7684\u8bed\u8a00\uff08\u4f8b\u5982 Mathematica\uff09\u5728\u8be5\u8f74\u4e0a\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\u3002\u4e0d\u53ef\u80fd\u5bf9\u8861\u91cf\u4e00\u767e\u4e2a\u4e0d\u540c\u793e\u533a\u7ad9\u70b9\u7684\u8fc7\u7a0b\u8fdb\u884c\u6269\u5c55\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u8bb8\u591a\u793e\u533a\u6ca1\u6709\u53ef\u7528\u7684\u516c\u5171\u6307\u6807\uff0c\u4e5f\u56e0\u4e3a\u8861\u91cf\u4e0d\u540c\u793e\u533a\u7ad9\u70b9\u4e4b\u95f4\u7684\u76f8\u4e92\u6bd4\u8f83\u5728\u7edf\u8ba1\u4e0a\u662f\u65e0\u6548\u7684\u3002\n\u9664\u4e86\u4e0a\u9762\u7684\u56fe\uff0c\u5373\u4f7f\u662f\u5168\u5c3a\u5bf8\u4e5f\u5f88\u96be\u89e3\u6790\uff0c\u6211\u4eec\u63d0\u4f9b\u4ee5\u4e0b\u6570\u5b57\u6392\u540d\u3002\u6b63\u5982\u5c06\u89c2\u5bdf\u5230\u7684\uff0c\u8fd9\u6b21\u8fd0\u884c\u4ea7\u751f\u4e86\u51e0\u4e2a\u5173\u7cfb\uff0c\u5982\u4e0b\u6240\u793a\uff08\u5b83\u4eec\u5728\u6b64\u5904\u6309\u5b57\u6bcd\u987a\u5e8f\u5217\u51fa\u800c\u4e0d\u662f\u5408\u5e76\u4e3a\u5173\u7cfb\uff0c\u56e0\u4e3a\u540e\u4e00\u79cd\u65b9\u6cd5\u5bfc\u81f4\u8bef\u89e3\uff09\u3002\u6b63\u5982\u7b2c\u4e09\u5b63\u5ea6\u7684\u5178\u578b\u8868\u73b0\u4e00\u6837\uff0c\u8fd9\u4e00\u8f6e\u7684\u8bed\u8a00\u6392\u540d\u76f8\u5f53\u9759\u6001\u3002\u5176\u4e2d\u7684\u56e0\u679c\u56e0\u7d20\u662f\u5426\u4e0e\u5b63\u8282\u6027\u5047\u671f\u3001\u5927\u6d41\u884c\u7684\u6301\u7eed\u5f71\u54cd\u6216\u5176\u4ed6\u4e00\u4e9b\u53d8\u91cf\u7684\u7ec4\u5408\u6709\u5173\u5c1a\u4e0d\u6e05\u695a\uff0c\u4f46\u5728\u4e0a\u4e00\u5b63\u5ea6\u7684\u8fd0\u884c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5728\u524d 20 \u540d\u53d8\u5316\u70b9\u4e2d\u5360\u636e\u4e86\u4e00\u534a\u7684\u8bed\u8a00\u4e4b\u540e\uff0c\u672c\u5b63\u5ea6\u7684\u8fd0\u884c\u53ea\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u53d8\u5316\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u53d8\u5316\u975e\u5e38\u663e\u7740\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u51e0\u79cd\u8bed\u8a00\u7f3a\u4e4f\u53d8\u5316\u3002 Java (1)\uff1a\u5728\u6211\u4eec\u7684\u6392\u540d\u4e2d\u82b1\u4e86\u51e0\u4e2a\u5b63\u5ea6\u964d\u5230\u7b2c\u4e09\u4f4d\u4e4b\u540e\uff0c\u89c2\u5bdf\u8005\u8d28\u7591\u5b83\u662f\u5426\u6ce8\u5b9a\u8981\u9010\u6e10\u4e0b\u964d\u8fd9\u4e9b\u6392\u540d\uff0cJava \u91cd\u65b0\u4e0e Python \u5e76\u5217\u7b2c\u4e8c\u3002\u8fd9\u4e0d\u4f1a\u8ba9\u4eba\u611f\u5230\u610f\u5916\uff0c\u4f46\u5bf9\u4e8e\u8be5\u8bed\u8a00\u7684\u8bb8\u591a\u7ade\u4e89\u5bf9\u624b\u2014\u2014\u5e94\u8be5\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e24\u4e2a\u5947\u602a\u7684\u884c\u4e1a\u5206\u6790\u5e08\u2014\u2014\u4e3a\u4f01\u4e1a\u57fa\u7840\u8bbe\u65bd\u7684\u575a\u5b9a\u652f\u6301\u8005\u5b9a\u671f\u64b0\u5199\u5893\u5fd7\u94ed\u3002\u66fe\u7ecf\u4e3a\u8fd0\u884c\u6709\u7ebf\u673a\u9876\u76d2\u800c\u521b\u5efa\u7684\u8bed\u8a00\u4ecd\u7136\u662f\u4e00\u79cd\u4e3b\u529b\uff0c\u800c\u4e14\u91cd\u8981\u7684\u662f\uff0c\u5b83\u59cb\u7ec8\u80fd\u591f\u627e\u5230\u65b0\u7684\u5de5\u4f5c\u8981\u505a\u3002\u8fd9\u4e9b\u5e74\u6765\uff0cJava \u5728\u8fd9\u4e9b\u6392\u540d\u4e0a\u7684\u8868\u73b0\u7ee7\u7eed\u7ed9\u4eba\u7559\u4e0b\u6df1\u523b\u5370\u8c61\uff0c\u800c\u4e14\u7531\u4e8e\u5b83\u8868\u73b0\u51fa\u975e\u51e1\u7684\u9002\u5e94\u5feb\u901f\u53d8\u5316\u73af\u5883\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u79cd\u96be\u4ee5\u4e0e\u4e4b\u6297\u8861\u7684\u8bed\u8a00\u3002", "note_en": "This iteration of the RedMonk Programming Languages is brought to you by Microsoft. Developers build the future. Microsoft supports you in any language and Java is no exception; we love it. We offer the best Java dev tools, infrastructure, and modern framework support. Modernize your  Java development with Microsoft.\n  While we generally try to have our rankings in July immediately after they are run, we generally operate these on a better late than never basis. On the assumption, then, that August is better than never, below are your RedMonk Q3 language rankings.\n As always, these are a continuation of the work originally performed by Drew Conway and John Myles White late in  2010. While the specific means of collection has changed, the basic process remains the same: we extract language rankings from GitHub and Stack Overflow, and combine them for a ranking that attempts to reflect both code (GitHub) and discussion (Stack Overflow) traction. The idea is not to offer a statistically valid representation of current usage, but rather to correlate language discussion and usage in an effort to extract insights into potential future adoption trends.\n  The data source used for the GitHub portion of the analysis is the GitHub Archive. We query languages by pull request in a manner similar to the one GitHub used to assemble the State of the Octoverse. Our query is designed to be as comparable as possible to the previous process.\n Language is based on the base repository language. While this continues to have the caveats outlined below, it does have the benefit of cohesion with our previous methodology.\n  We use the aggregated history to determine ranking (though based on the table structure changes this can no longer be accomplished via a single query.)\n For Stack Overflow, we simply collect the required metrics using their useful data explorer tool.\n With that description out of the way, please keep in mind the other usual caveats.\n To be included in this analysis, a language must be observable within both GitHub and Stack Overflow.\n No claims are made here that these rankings are representative of general usage more broadly. They are nothing more or less than an examination of the correlation between two populations we believe to be predictive of future use, hence their value.\n There are many potential communities that could be surveyed for this analysis. GitHub and Stack Overflow are used here first because of their size and second because of their public exposure of the data necessary for the analysis. We encourage, however, interested parties to perform their own analyses using other sources.\n All numerical rankings should be taken with a grain of salt. We rank by numbers here strictly for the sake of interest. In general, the numerical ranking is substantially less relevant than the language\u2019s tier or grouping. In many cases, one spot on the list is not distinguishable from the next. The separation between language tiers on the plot, however, is generally representative of substantial differences in relative popularity.\n In addition, the further down the rankings one goes, the less data available to rank languages by. Beyond the top tiers of languages, depending on the snapshot, the amount of data to assess is minute, and the actual placement of languages becomes less reliable the further down the list one proceeds.\n Languages that have communities based outside of Stack Overflow such as Mathematica will be under-represented on that axis. It is not possible to scale a process that measures one hundred different community sites, both because many do not have public metrics available and because measuring different community sites against one another is not statistically valid.\n    Besides the above plot, which can be difficult to parse even at full size, we offer the following numerical rankings. As will be observed, this run produced several ties which are reflected below (they are listed out here alphabetically rather than consolidated as ties because the latter approach led to misunderstandings).\n   As has become typical of third quarter runs, this round of the language rankings was fairly static. Whether the causal factors there are related to seasonal vacations, continuing impacts from the pandemic or some other combination of variables is unclear, but after last quarter\u2019s run featured half the languages in the Top 20 changing spots in some way, this quarter\u2019s run features only two such changes. Those changes, however, are quite notable, as is the lack of movement from several languages as we\u2019ll discuss.\n Java (1): After spending a few quarters demoted to third place in our rankings, prompting questions from observers as to whether it was fated to a gradual drift down these rankings, Java surged back into a tie for second place with Python. This would be less of a surprise but for many of the language\u2019s competitors \u2013 and, it should be said, the odd industry analyst or two \u2013 writing regularly recurring epitaphs for the stalwart of enterprise infrastructure. The language once created to run cable set top boxes continues to be a workhorse, and importantly one that has consistently been able to find new work to do. Java\u2019s performance on these rankings continues to impress, all these years later, and as it\u2019s shown a remarkable ability to adapt to a rapidly changing landscape it\u2019s a language that would be difficult to bet against.", "posttime": "2021-08-07 22:59:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f16\u7a0b,java,programming,github,python", "title": "Redmonk \u5bf9\u7f16\u7a0b\u8bed\u8a00\u7684\u7814\u7a76\uff0c\u7ed3\u5408 GitHub \u548c Stack Overflow \u7684\u6570\u636e\uff0c\u663e\u793a Java \u4e0e Python \u5e76\u5217\u7b2c\u4e8c\uff0c\u800c JavaScript \u4ecd\u7136\u4f4d\u5c45\u699c\u9996", "title_en": "Redmonk study of programming languages, combining GitHub and Stack Overflow data, shows Java in second place alongside Python, while JavaScript remains top", "transed": 1, "url": "https://redmonk.com/sogrady/2021/08/05/language-rankings-6-21/", "via": "", "real_tags": ["\u7f16\u7a0b", "java", "github", "python"]}, {"category": "", "categoryclass": "", "imagename": "8bb9835f02fe8b5ccec031d877c39e02.jpeg", "infoid": 1071983, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51c6\u786e\u63cf\u8ff0\u6548\u679c\u4e0d\u662f\u4e00\u5934\u96fe\u6c34\uff1b\u907f\u514d\u5728\u56f4\u7ed5 COVID-19 \u75ab\u82d7\u7684\u5f02\u5e38\u590d\u6742\u548c\u7d27\u5f20\u7684\u79d1\u5b66\u548c\u793e\u4f1a\u8fa9\u8bba\u4e2d\u589e\u52a0\u6df7\u4e71\u662f\u975e\u5e38\u9700\u8981\u7684\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u63a5\u79cd\u75ab\u82d7\u53ef\u4ee5\u4fdd\u62a4 95% \u7684\u4eba\u514d\u4e8e\u75be\u75c5\u2014\u2014\u67f3\u53f6\u5200\u4f20\u67d3\u75c5\u793e\u8bba\u4e2d\u4e5f\u53d1\u73b0\u4e86\u5bf9\u75ab\u82d7\u4fdd\u62a4\u7684\u666e\u904d\u8bef\u89e3\u3002\u8fd9\u51fa\u73b0\u5728 3 \u6708 8 \u65e5\u901a\u8fc7\u540c\u884c\u8bc4\u5ba1\u7684\u9886\u5148\u533b\u5b66\u671f\u520a\u300a\u67f3\u53f6\u5200\u300b\u53d1\u8868\u7684\u6587\u7ae0\u4e2d\u3002\u5b83\u5f3a\u8c03\uff0c\u5373\u4f7f\u5728\u5173\u6ce8\u6b64\u7c7b\u95ee\u9898\u7684\u79d1\u5b66\u754c\u5185\uff0c\u5bf9\u62a5\u544a\u7684\u75ab\u82d7\u529f\u6548\u6570\u5b57\u7684\u542b\u4e49\u548c\u5f71\u54cd\u7684\u8bef\u89e3\u4ecd\u7136\u5b58\u5728\u3002\u5982\u679c\u79d1\u5b66\u754c\u5728\u81ea\u5df1\u7684\u89e3\u91ca\u4e2d\u72af\u4e86\u9519\u8bef\uff0c\u90a3\u53ef\u80fd\u4f1a\u8bef\u5bfc\u51b3\u7b56\u8005\uff0c\u5373\u4f7f\u662f\u53d7\u8fc7\u826f\u597d\u6559\u80b2\u7684\u51b3\u7b56\u8005\uff0c\u53cd\u8fc7\u6765\u4e5f\u4f1a\u8bef\u5bfc\u516c\u4f17\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u770b\u5230\u4e86\u66f4\u5e7f\u6cdb\u5171\u4eab\u7684\u6587\u7ae0\u7684\u8bc1\u636e\uff0c\u4ee5\u7ea0\u6b63\u300a\u67f3\u53f6\u5200\u300b\u901a\u4fe1\u6240\u5173\u6ce8\u7684\u4e00\u4e9b\u65e9\u671f\u8bef\u89e3\u3002\u7136\u800c\uff0c\u4e00\u79cd\u66f4\u9634\u9669\u7684\u8bef\u89e3\u548c\u9519\u8bef\u4fe1\u606f\u4ecd\u7136\u5b58\u5728\uff0c\u5e76\u4e14\u65e0\u5904\u4e0d\u5728\u3002\u6c64\u59c6\u4e0d\u662f\u666e\u901a\u7684\u533b\u751f\u3002\u4ed6\u662f\u5965\u5df4\u9a6c\u603b\u7edf\u9886\u5bfc\u4e0b\u7684\u75be\u75c5\u63a7\u5236\u4e2d\u5fc3\u524d\u4e3b\u4efb\u3002\u4ed6\u8fd8\u5728\u4f20\u64ad\u6709\u5173 COVID-19 \u75ab\u82d7\u7684\u5371\u9669\u9519\u8bef\u4fe1\u606f\u3002\u5b83\u4f1a\u5bfc\u81f4\u4eba\u4eec\u8bef\u89e3\u73b0\u5b9e\u4e16\u754c\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u5bfc\u81f4\u66f4\u591a\u4eba\u6b7b\u4ea1\uff0c\u5e76\u52a0\u5267\u5927\u6d41\u884c\u3002\u6c64\u59c6\u535a\u58eb\u9519\u4e86\u3002\u4f60\u80fd\u5f97\u5230\u7684\u9519\u8bef\u5dee\u4e0d\u591a\u3002\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u8868\u660e\uff0c\u5982\u679c\u611f\u67d3\u4e86 COVID\uff0c\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u7387\u53ef\u80fd\u662f\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u7387\u7684 3 \u81f3 5.7 \u500d 1\u3002 CDC \u524d\u4efb\u4e3b\u4efb\u6b63\u5728\u72af\u6211\u6240\u8bf4\u7684\u53ef\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\u5f53\u4ed6\u4eec\u88ab\u8ba4\u4e3a\u6709\u6b63\u786e\u7684\u610f\u89c1\u65f6\uff0c\u8fd9\u662f\u4e00\u79cd\u5141\u8bb8\u72af\u7684\u9519\u8bef\u3002\u4e0e\u53ef\u80fd\u88ab\u8ba4\u4e3a\u5bf9\u5b9e\u73b0\u8be5\u76ee\u6807\u9002\u5f97\u5176\u53cd\u7684\u4efb\u4f55\u8bba\u636e\u6216\u7edf\u8ba1\u6570\u636e\u76f8\u6bd4\uff0c\u7528\u4e8e\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u63a5\u79cd COVID \u75ab\u82d7\u7684\u76ee\u6807\u6240\u4f7f\u7528\u7684\u8bba\u636e\u548c\u7edf\u8ba1\u6570\u636e\u53d7\u5230\u7684\u5ba1\u67e5\u8981\u5c11\u5f97\u591a\uff0c\u5e76\u4e14\u66f4\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u771f\u5b9e\u7684\u3002\n\u5f53\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3\u7684\u524d\u4efb\u4e3b\u4efb\u6216\u5176\u4ed6\u4efb\u4f55\u4eba\u8bf4\u611f\u67d3\u4e86 COVID \u7684\u4eba\u5982\u679c\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u8981\u4f4e 100 \u500d\uff0c\u8fd9\u4e2a\u6570\u5b57\u76f8\u5dee\u591a\u8fdc\u5e76\u4e0d\u91cd\u8981\u3002\u65e0\u8bba\u591a\u4e48\u4e0d\u51c6\u786e\uff0c\u5b83\u90fd\u4f1a\u5f88\u5bb9\u6613\u88ab\u539f\u8c05\u3002\u4f3c\u4e4e\u6700\u91cd\u8981\u7684\u662f\u666e\u53ca\u75ab\u82d7\u63a5\u79cd\u7684\u76ee\u6807\uff0c\u800c\u4e0d\u662f\u771f\u76f8\u3002\u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\u4eba\u4eec\u58f0\u79f0\u5b58\u5728\u8fd9\u4e9b\u5947\u5999\u7684\u989d\u5916\u597d\u5904\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u505a\u4e00\u4e9b\u6570\u5b66\u8ba1\u7b97\u3002\u4f46\u4e00\u65e6\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u6df7\u4e71\u5c31\u4f1a\u5f97\u5230\u7f13\u89e3\uff0c\u6743\u5a01\u4eba\u58eb\u548c\u6267\u884c\u4efb\u52a1\u7684\u4eba\u4f20\u64ad\u7684\u5371\u9669\u9519\u8bef\u4fe1\u606f\u5c06\u53d8\u5f97\u6e05\u6670\u3002\u4e3a\u4e86\u4e86\u89e3\u75ab\u82d7\u529f\u6548\uff0c\u8f89\u745e-BioNTech mRNA BNT162b2 \u4e34\u5e8a\u8bd5\u9a8c\u7ed3\u679c\u4e2d\u63d0\u4f9b\u7684\u56fe\u8868\u5c06\u975e\u5e38\u6709\u7528\u3002\u5e26\u5706\u5708\u7684\u7ea2\u7ebf\u663e\u793a\uff0c\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6570\u4e3a 21,669 \u4eba\uff0c\u611f\u67d3\u7387\u6709\u6240\u653e\u7f13\u3002\u4e2a\u4f53\u611f\u67d3\u4e4b\u95f4\u7684\u5e73\u5747\u5929\u6570\u589e\u52a0\u4e86\u3002\u7ed3\u679c\u662f\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u88ab\u611f\u67d3\u7684\u603b\u4eba\u6570\u786e\u5b9e\u8fdc\u4f4e\u4e8e\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u7fa4\u3002\u8fd9\u5c31\u662f\u300a\u67f3\u53f6\u5200\u300b\u65e9\u4e9b\u65f6\u5019\u53d1\u8868\u7684\u58f0\u660e\u201c\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u63a5\u79cd\u75ab\u82d7\uff0c\u4ed6\u4eec\u5c31\u4f1a\u611f\u67d3 COVID-19\u201d\u7684\u5730\u65b9\u3002\u53ef\u4ee5\u5408\u7406\u5730\u5047\u8bbe\uff0c\u5982\u679c\u8be5\u7ec4\u672a\u63a5\u79cd\u75ab\u82d7\uff0c\u7ea2\u7ebf\u5c06\u7c7b\u4f3c\u4e8e\u84dd\u7ebf\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u53ef\u4ee5\u8ba1\u7b97\u7ea2\u5708\u4e4b\u95f4\u51fa\u73b0\u7684\u84dd\u7ebf\u4e0a\u7684\u65b9\u5757\u6570\uff0c\u5e76\u5f97\u5230\u4e00\u6bb5\u65f6\u95f4\u5185\u6bcf\u4e2a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6709\u591a\u5c11\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u88ab\u611f\u67d3\u7684\u6bd4\u7387\u3002\u529f\u6548\u7b49\u7ea7\uff08\u8868\u4e2d\u7684 VE\uff09\u662f\u5c1d\u8bd5\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u7136\u800c\uff0c\u589e\u52a0\u4e86\u4e00\u5c42\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u7814\u7a76\u4eba\u5458\u5bf9\u5f85\u5b66\u4e60\u4e2d\u7684\u4eba\u6ca1\u6709\u592a\u5927\u533a\u522b\u3002\u4e00\u4e2a\u4eba\u88ab\u7eb3\u5165\u7814\u7a76\u548c\u53ef\u89c2\u5bdf\u7684\u6bcf\u4e00\u5929\u90fd\u88ab\u89c6\u4e3a\u4e00\u4e2a\u4eba\u65e5\u3002\u5728\u7ed9\u5b9a\u65e5\u671f\u89c2\u5bdf\u5230\u7684\u6bcf\u4e2a\u4eba\u90fd\u88ab\u8ba1\u7b97\u5728\u5185\uff0c\u5e76\u6dfb\u52a0\u5230\u4eba\u65e5\u603b\u6570\u4e2d\u3002\u5728\u7814\u7a76\u7ed3\u675f\u65f6\uff0c\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u9664\u4ee5\u4e3a\u8be5\u7ec4\u8ba1\u7b97\u7684\u603b\u4eba\u65e5\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u56db\u5929\u89c2\u5bdf\u4e24\u4e2a\u4eba\uff0c\u5219\u603b\u5171\u662f\u516b\u4eba\u65e5\u3002\u6bcf\u4e2a\u4eba\u6bcf\u5929\u90fd\u6709\u88ab\u611f\u67d3\u7684\u673a\u4f1a\uff0c\u9664\u975e\u4ed6\u4eec\u5df2\u7ecf\u88ab\u611f\u67d3\u3002\u4e00\u4e2a\u4eba\u603b\u5171\u6709\u516b\u6b21\u88ab\u611f\u67d3\u7684\u673a\u4f1a\u3002\u4f46\u662f\uff0c\u4e00\u65e6\u88ab\u611f\u67d3\uff0c\u5c31\u4e0d\u80fd\u518d\u88ab\u611f\u67d3\uff0c\u56e0\u6b64\u8be5\u4eba\u4e0d\u518d\u8ba1\u5165\u4eba\u65e5\u8ba1\u6570\u3002\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u4f7f\u7528\u7684\u65f6\u95f4\u957f\u5ea6\u4e0e\u4e00\u5929\u4e0d\u540c\uff0c\u4f46\u60f3\u6cd5\u662f\u76f8\u540c\u7684\u3002\n\u5f52\u6839\u7ed3\u5e95\uff0c\u529f\u6548\u8ba1\u7b97\u662f\u8ba1\u6570\u4e8b\u7269\u548c\u5212\u5206\u4e8b\u7269\u8ba1\u6570\u7684\u7ed3\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4ed6\u4eec\u8ba1\u7b97\u7684\u6570\u5b57\u81ea\u5df1\u9664\u4ee5\u5f97\u51fa\u76f8\u540c\u7684\u529f\u6548\u6570\u5b57\u3002\u8ba9\u6211\u4eec\u4f7f\u7528\u7b2c 2 \u5242\u540e \u2265 7 \u5929\u7684\u6570\u636e\u3002\u63a5\u79cd\u7ec4\u6709 21,314 \u4eba\u8de8\u8d8a 4.015 \u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u6709 21,258 \u4eba\u8de8\u8d8a 3.982 \u4e2a\u65f6\u95f4\u5355\u4f4d\u3002\u73b0\u5728\u6211\u4eec\u6bd4\u8f83\u611f\u67d3\u7387\uff0c\u5206\u522b\u662f 9 \u548c 172 \u89c2\u5bdf\u5230\u7684\u611f\u67d3\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d6\u4e24\u4e2a\u6bd4\u7387\uff0c\u5e76\u6bd4\u8f83\u5b83\u4eec\uff0c\u5e76\u8ba1\u7b97\u4e00\u4e2a\u6570\u5b57\uff0c\u8be5\u6570\u5b57\u4ee3\u8868\u79f0\u4e3a\u529f\u6548\u7684\u767e\u5206\u6bd4\u5206\u6570\u3002\u8868\u4e2d\u6709\u836f\u6548\u7f16\u53f7\u3002\u4ece 1 \u4e2d\u51cf\u53bb\u53ea\u662f\u8ba9\u60a8\u62a5\u544a\u4e00\u4e2a\u6570\u5b57\u8d8a\u9ad8\u8d8a\u597d\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u201c\u9ad8\u5c14\u592b\u89c4\u5219\u201d\u8d8a\u4f4e\u8d8a\u597d\u3002\u5982\u679c\u60a8\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u63a8\u5bfc\u51fa\u6765\u7684\uff0c\u90a3\u4e48\u8ba1\u7b97\u672c\u8eab\u5c31\u4e0d\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u4f46\u91cd\u8981\u7684\u662f\u8981\u575a\u6301\u6211\u4eec\u76ee\u524d\u53ea\u8ba8\u8bba\u4e00\u6bb5\u65f6\u95f4\u5185\u611f\u67d3\u7387\u7684\u60f3\u6cd5\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u4e24\u7ec4\u4e4b\u95f4\u7684\u611f\u67d3\u7387\u662f\u5b8c\u5168\u5408\u7406\u7684\u3002\u8fd9\u79cd\u533a\u522b\u66f4\u4e3a\u91cd\u8981\uff0c\u56e0\u4e3a\u867d\u7136\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u75ab\u82d7\u5728\u8bd5\u9a8c\u6761\u4ef6\u4e0b\u53ef\u4ee5\u964d\u4f4e\u98ce\u9669\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u679c\u5c06\u75ab\u82d7\u90e8\u7f72\u5728\u5177\u6709\u4e0d\u540c\u66b4\u9732\u3001\u4f20\u64ad\u6c34\u5e73\u548c\u53d1\u75c5\u7387\u7684\u4eba\u7fa4\u4e2d\uff0c\u5b83\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u53d8\u5316. 2 \u4ee5\u8272\u5217\u63d0\u4f9b\u4e86\u8f89\u745e-BioNTech mRNA BNT162b2 \u75ab\u82d7\u771f\u5b9e\u4e16\u754c\u52a8\u6001\u7684\u4e00\u77a5\u3002 2021 \u5e74 5 \u6708\u53d1\u8868\u5728\u300a\u67f3\u53f6\u5200\u300b\u4e0a\u7684\u4e00\u9879\u4e3b\u8981\u7814\u7a76\u56de\u987e\u4e86\u4f5c\u4e3a\u653f\u5e9c\u75ab\u82d7\u63a5\u79cd\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u6536\u96c6\u7684\u56fd\u5bb6\u76d1\u6d4b\u6570\u636e\u3002\u6536\u96c6\u7684\u6570\u636e\u80fd\u591f\u786e\u5b9a\u63a5\u79cd\u75ab\u82d7\u7684\u65e5\u671f\uff1b\u5f53\u4ed6\u4eec\u88ab\u8bca\u65ad\u51fa\u60a3\u6709 COVID \u65f6\uff1b\u4ed6\u4eec\u662f\u5426\u6709\u75c7\u72b6\uff1b\u4ed6\u4eec\u662f\u5426\u4ee5\u53ca\u4f55\u65f6\u53bb\u533b\u9662\uff1b\u5982\u679c\u4ed6\u4eec\u6709\u4e25\u91cd\u6216\u5371\u6025\u7684\u4f4f\u9662\u6cbb\u7597\uff1b\u5982\u679c\u4ed6\u4eec\u6b7b\u4e86\u3002\u8be5\u7814\u7a76\u76f8\u5f53\u5f7b\u5e95\uff0c\u5c3d\u7ba1\u5b83\u786e\u5b9e\u5305\u542b\u4e00\u4e9b\u9519\u8bef\uff0c\u5176\u4e2d\u4e00\u4e9b\u53ef\u80fd\u5c1a\u672a\u5b8c\u5168\u7ea0\u6b63\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u68c0\u67e5\u529f\u6548\u6570\u5b57\u5e76\u7ea0\u6b63\u9519\u8bef\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b2c 1825 \u9875\u8868 4 \u4e2d\u63d0\u4f9b\u7684\u6570\u5b57\u3002\u9876\u90e8\u7684\u767d\u6846\u5305\u542b\u7814\u7a76\u671f\u95f4\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u5e74\u9f84\u3002\u6240\u6709\u5e74\u9f84\u6bb5\u7684\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u63a5\u79cd\u75ab\u82d7\u7684\u611f\u67d3\u4eba\u6570\u5206\u522b\u4e3a 109,876 \u548c 3,642\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e24\u8005\u7684\u4eba\u65e5\uff08\u89c2\u5bdf\u5230\u7684\u603b\u65f6\u95f4\uff09\u3002\u8fd9\u4e9b\u5728\u8868\u683c\u5e95\u90e8\u63d0\u4f9b\uff0c\u5bf9\u4e8e\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u5df2\u63a5\u79cd\u75ab\u82d7\uff0c\u5206\u522b\u4e3a 120,076,136 \u548c 170,434,659\u3002\n\u770b\u770b\u6211\u4eec\u8ba1\u7b97\u7684\u8fd1\u4f3c\u6bd4\u7387\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8868\u4e2d\u7ea2\u8272\u65b9\u5757\u4e2d\u7684 91.5 \u5bf9\u5e94\u4e8e\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u672a\u63a5\u79cd\u75ab\u82d7\u7387\uff0c\u540c\u6837\uff0c\u84dd\u8272\u6846\u4e2d\u7684 2.1 \u5bf9\u5e94\u4e8e\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u63a5\u79cd\u7387\u3002\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e24\u8005\u90fd\u4e58\u4ee5 100,000\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6bcf 100,000 \u4eba\u65e5\u7684\u53d1\u75c5\u7387\uff0c\u4ee5\u4f7f\u5b83\u4eec\u4e0e\u8868\u683c\u5927\u81f4\u76f8\u7b49\u3002\u4e0b\u4e00\u6b65\u4e0e\u8f89\u745e\u7684\u7b2c\u4e09\u9636\u6bb5\u8bd5\u9a8c\u76f8\u540c\u3002 \u201c\u75ab\u82d7\u6709\u6548\u6027\u4f30\u8ba1\u8ba1\u7b97\u4e3a (1 \u2013 IRR) \u00d7 100\u201d\uff08\u53d1\u751f\u7387\u6bd4\u7387\uff0cIRR\uff09\u6211\u4eec\u7684\u8ba1\u7b97\u4f3c\u4e4e\u6bd4\u8868\u4e2d\u7684\u9ad8 1.1%\u3002\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u89e3\u91ca\u3002\u4e00\u79cd\u89e3\u91ca\u53ef\u80fd\u662f\uff0c\u5f53\u4ed6\u4eec\u66f4\u6b63\u4e00\u4e9b\u786c\u503c\u65f6\uff0c\u4ed6\u4eec\u672a\u80fd\u66f4\u65b0\u529f\u6548\u8ba1\u7b97\u3002\u7b2c\u4e8c\u79cd\u89e3\u91ca\u662f\uff0c\u4f5c\u8005\u901a\u8fc7\u7279\u5b9a\u7684\u7edf\u8ba1\u5305 3 \u8fd0\u884c\u4e86\u6211\u4eec\u6ca1\u6709\u7684\u539f\u59cb\u6570\u636e\u4ee5\u4f30\u8ba1\u754c\u9650\uff08\u62ec\u53f7\u4e2d\u7684\u6570\u5b57\uff0c\u4e3a\u4f30\u8ba1\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6446\u52a8\u7a7a\u95f4\uff09\uff0c\u8fd9\u7ed9\u4e86\u4ed6\u4eec\u4e00\u4e2a\u66f4\u7ec6\u5fae\u7684\u5dee\u522b\u5bf9\u4e2d\u5fc3\u53d1\u75c5\u7387\u7684\u4f30\u8ba1\u6bd4\u4ed6\u4eec\u63d0\u4f9b\u7ed9\u8bfb\u8005\u7684\u6570\u5b57\u5141\u8bb8\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u8ba1\u7b97\u7684\u53d1\u75c5\u7387\u663e\u7136\u4e0e\u8868\u683c\u4e00\u81f4\u3002\u8fd9\u4e0d\u662f\u592a\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53ea\u662f\u4f5c\u8005\u6839\u636e\u89c2\u5bdf\u505a\u51fa\u7684\u4f30\u8ba1\u3002\u8fd9\u4e9b\u4f30\u8ba1\u503c\u4f1a\u968f\u7740\u65f6\u95f4\u548c\u4e0d\u540c\u4eba\u7fa4\u800c\u53d8\u5316\u3002\u5b83\u4eec\u975e\u5e38\u6709\u7528\uff0c\u4f46\u4e0d\u5e94\u89c6\u4e3a\u5b83\u4eec\u662f\u7cbe\u786e\u7684\u3002\u5b83\u4eec\u4e5f\u4e0d\u662f\u4e3b\u8981\u95ee\u9898\u51fa\u73b0\u7684\u5730\u65b9\u3002\u4eba\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u67e5\u770b\u539f\u59cb\u6570\u5b57\u800c\u4e0d\u8ba1\u7b97\u529f\u6548\u6570\u5b57\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u786e\u5b9e\u611f\u67d3\u7387\u8981\u4f4e\u5f97\u591a\u3002\u5728\u8ba1\u7b97\u529f\u6548\u767e\u5206\u6bd4\u65f6\u4fdd\u7559\u7684\u5dee\u5f02\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u7136\u800c\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8f6c\u5411\u6700\u7ec8\u5c06\u6210\u4e3a\u9519\u8bef\u4fe1\u606f\u7684\u6765\u6e90\u3002\u8fd9\u4e0d\u662f\u62a5\u544a\u672c\u8eab\u7684\u9519\uff0c\u800c\u662f\u592a\u591a\u4eba\u5047\u88c5\u4ee5\u77e5\u8bc6\u548c\u6743\u5a01\u6765\u89e3\u91ca\u4ed6\u4eec\u4e0d\u7406\u89e3\u7684\u6570\u5b57\u7684\u7ed3\u679c\u3002\u8be5\u7814\u7a76\u5305\u62ec\u6709\u75c7\u72b6\u7684 COVID\u3001\u4f4f\u9662\u3001\u4e25\u91cd\u4f4f\u9662\u7387\u53ca\u5176\u5404\u81ea\u7684\u7597\u6548\u8ba1\u7b97\u3002\u8868\u683c\u5e95\u90e8\u662f\u4e0e\u6b7b\u4ea1\u76f8\u5173\u7684\u7597\u6548\u8ba1\u7b97\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u8868\u683c\u8fdb\u884c\u6700\u7ec8\u529f\u6548\u8ba1\u7b97\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8ba8\u8bba\u8fd9\u4e00\u53ef\u6015\u7684\u9519\u8bef\u4fe1\u606f\u6765\u6e90\u3002\n\u6211\u4eec\u5728\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d 16-44 \u5c81\u7684\u4eba\u7fa4\u4e2d\u6709 36 \u4eba\u6b7b\u4ea1\uff0c\u5728\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d\u6709 0 \u4eba\u6b7b\u4ea1\u3002\u4ece\u8868\u5e95\u90e8\u5f00\u59cb\uff0c\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u5df2\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u65e5\u5206\u522b\u4e3a 88,938,310 \u548c 61,397,072 \u4eba\u65e5\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\uff0c\u786e\u5b9e\u662f 100% \u7684\u529f\u6548\uff01 100% \u6709\u6548\u7387\uff01\u90a3\u662f100%\u9632\u6b62\u6b7b\u4ea1\uff01 16-44 \u5c81\u7684\u4eba\u4e0d\u4f1a\u6b7b\u4e8e COVID\uff01\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u4eba\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\u662f\u591a\u4e48\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u4eec\u751a\u81f3\u4e0d\u63d0\u4f9b\u4e00\u5b9a\u8303\u56f4\u7684\u4e0d\u786e\u5b9a\u6027\u3002 100% \u6ca1\u6709\u4e0d\u786e\u5b9a\u6027\u662f\u60a8\u53ef\u4ee5\u83b7\u5f97\u7684\u786e\u5b9a\u6027\u3002 16-44 \u5c81\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u663e\u7136\u6709\u53ef\u80fd\u6b7b\u4e8e COVID\u3002\u6765\u81ea\u6b7b\u4ea1\u8ba1\u7b97\u7684\u8fd9\u79cd\u529f\u6548\u7684\u5176\u4ed6\u7ed3\u679c\u540c\u6837\u6709\u7f3a\u9677\uff0c\u5e76\u4e14\u6b63\u5728\u88ab\u5371\u9669\u5730\u6ee5\u7528\u3002\u8ba9\u6211\u4eec\u91cd\u6e29\u4e00\u4e0b\u524d\u75be\u63a7\u4e2d\u5fc3\u4e3b\u4efb\u6c64\u59c6\u535a\u58eb\u3002\u9ad8\u5ea6\u8b66\u60d5\u7684\u5927\u89c4\u6a21\u75ab\u82d7\u63a5\u79cd\u5021\u5bfc\u8005\u4e00\u76f4\u5728\u4f7f\u7528\u8fd9\u9879\u4ee5\u8272\u5217\u7814\u7a76\u4e2d\u201c\u6b7b\u4ea1\u201d\u7684\u75ab\u82d7\u529f\u6548\u6570\u636e\uff0c\u58f0\u79f0\u5982\u679c\u60a8\u611f\u67d3\u4e86 COVID\uff0c\u60a8\u5c06\u83b7\u5f97\u989d\u5916\u7684\u4fdd\u62a4\uff0c\u56e0\u4e3a\u75ab\u82d7\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u5f15\u7528\u8fd9\u4e2a\u767e\u5206\u6bd4\uff08\u201c\u5b83\u5728\u9884\u9632\u6b7b\u4ea1\u65b9\u9762\u6709 96% \u7684\u6548\u7387\uff01\u201d\uff09\u4ee5\u514d\u88ab\u6307\u8d23\u53d1\u660e\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u6570\u5b57\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u90a3\u4e48\u60a8\u73b0\u5728\u5df2\u7ecf\u6267\u884c\u4e86 3 \u6b21\u72ec\u7acb\u7684\u529f\u6548\u8ba1\u7b97\u3002\u8ba1\u6570\u4e8b\u7269\u548c\u5212\u5206\u4e8b\u7269\u8ba1\u6570\u3002\u6211\u4eec\u65e0\u5904\u3001\u4efb\u4f55\u65f6\u95f4\u3001\u4ee5\u4efb\u4f55\u65b9\u5f0f\u67e5\u770b\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d\u6709\u591a\u5c11\u4eba\u611f\u67d3\u4e86 COVID \u5e76\u6b7b\u4ea1\u3002\u6211\u4eec\uff08\u548c\u8be5\u7814\u7a76\u7684\u4f5c\u8005\uff09\u8ba1\u7b97\u4e86\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u7136\u540e\u9664\u4ee5\u5929\u6570\uff0c\u800c\u4e0d\u662f\u611f\u67d3\u4eba\u6570\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u67e5\u770b\u5e76\u6bd4\u8f83\u5b9e\u9645\u611f\u67d3\u8005\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u6545\u4e8b\u3002\u6bcf\u4e00\u4e2a\u989d\u5916\u7684\u529f\u6548\u6570\u5b57\u90fd\u662f\u591a\u4f59\u7684\u3002\u611f\u67d3\u4e0b\u6e38\u7684\u6240\u6709\u62a5\u544a\u7ed3\u679c\u90fd\u662f\u611f\u67d3\u51cf\u5c11\u7684\u7ed3\u679c 4. \u5373\u4f7f\u63a5\u79cd\u7ec4\u9664\u611f\u67d3\u7387\u5916\u5b8c\u5168\u76f8\u540c\uff0c\u6709\u6548\u7387\u4e5f\u5c06\u8fbe\u5230 90 \u5e74\u4ee3\u7684\u9ad8\u4f4d\u3002\n\u5f53\u201c\u75be\u63a7\u4e2d\u5fc3\u524d\u4e3b\u4efb\u201d\u6c64\u59c6\u535a\u58eb\u7b49\u4eba\u7528\u975e\u611f\u67d3\u6548\u529b\u6570\u5b57\u6765\u8ba8\u8bba\u75ab\u82d7\u65f6\uff0c\u4ed6\u4eec\u6709\u610f\u65e0\u610f\u5730\u8bef\u5bfc\u4e86\u516c\u4f17\u3002\u8fd9\u662f\u5e94\u8be5\u7acb\u5373\u7ed3\u675f\u7684\u4e8b\u60c5\u3002\u9664\u4e86\u611f\u67d3\u7387\u4e4b\u5916\uff0c\u529f\u6548\u6570\u5b57\u6ca1\u6709\u5411\u516c\u6c11\u4f20\u8fbe\u4efb\u4f55\u5173\u4e8e\u4ed6\u4eec\u63a5\u79cd\u75ab\u82d7\u540e\u98ce\u9669\u7684\u6709\u7528\u4fe1\u606f\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4ed6\u4eec\u5bf9\u8fd9\u4e9b\u9519\u8bef\u4fe1\u606f\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u5c06\u81ea\u5df1\u548c\u4ed6\u4eba\u7f6e\u4e8e\u66f4\u5927\u7684\u98ce\u9669\u4e4b\u4e2d\u3002\u9664\u4e86\u611f\u67d3\u4e4b\u5916\uff0c\u529f\u6548\u6570\u5b57\u90fd\u662f\u611f\u67d3\u7684\u4e0b\u6e38\u6548\u5e94\uff0c\u6b63\u5728\u88ab\u4f7f\u7528\u548c\u63a5\u53d7\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u5728 COVID \u611f\u67d3\u7684\u6bcf\u4e2a\u9636\u6bb5\u90fd\u662f\u989d\u5916\u7684\u3001\u5206\u5c42\u7684\u597d\u5904\u4e00\u6837\u3002\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5b83\u4eec\u662f\u5982\u4f55\u88ab\u4f20\u8fbe\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u88ab\u7edd\u5927\u591a\u6570\u516c\u4f17\u4eba\u7269\u548c\u516c\u6c11\u63a5\u53d7\u7684\u3002\u5982\u679c\u60a8\u63a5\u79cd\u4e86\u75ab\u82d7\uff0c\u5219\u8868\u660e\u8be5\u7814\u7a76\u8868\u660e\u60a8\u662f\uff1a \u5982\u679c\u529f\u6548\u6570\u5b57\u662f\u989d\u5916\u4fdd\u62a4\u7684\u5206\u5c42\u63aa\u65bd\uff0c\u90a3\u4e48\u4ee5\u8272\u5217\u7814\u7a76\uff08\u6240\u6709\u5e74\u9f84\u6bb5\uff09\u4e2d\u7684\u89c2\u5bdf\u7ed3\u679c\u4f1a\u6709\u6240\u4e0d\u540c 5. \u6570\u5b57\u5982\u6b64\u4e4b\u5c0f\uff0c\u8fd9\u4e9b\u5dee\u5f02\u53ef\u80fd\u770b\u8d77\u6765\u5fae\u4e0d\u8db3\u9053\u3002\u4f46\u662f\uff0c\u5f53\u4e0d\u4ec5\u8de8\u4eba\u7fa4\u800c\u4e14\u8de8\u65f6\u95f4\u6309\u6bd4\u4f8b\u6269\u5927\u65f6\uff0c\u5728\u9009\u62e9\u8981\u627f\u62c5\u7684\u611f\u67d3\u98ce\u9669\u7ea7\u522b\u65f6\u5f71\u54cd\u4eba\u4eec\u51b3\u7b56\u7684\u5f71\u54cd\u53ef\u80fd\u4f1a\u663e\u7740\u6539\u53d8\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u4e9b\u662f\u76ee\u524d\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u6bcf\u5929\u90fd\u5728\u72af\u7684\u53ef\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\u5f88\u96be\u60f3\u8c61\u5728\u6b64\u4e4b\u540e\uff0c\u67d0\u4eba\u8fd8\u80fd\u72af\u4e0b\u591a\u5c11\u9519\u8bef\uff0c\u4f46\u4ecd\u80fd\u4fdd\u6301\u5176\u53ef\u4fe1\u5ea6\u3002\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\uff0c\u5982\u679c\u6211\u6210\u529f\u5730\u6d88\u9664\u4e86\u6df7\u4e71\uff0c\u90a3\u4e9b\u4f20\u64ad\u9519\u8bef\u4fe1\u606f\u7684\u4eba\u5c06\u76f4\u63a5\u8f6c\u5411\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\n\u5f53\u60a8\u5b9e\u9645\u67e5\u770b\u6309\u5e74\u9f84\u7ec4\u5212\u5206\u7684\u611f\u67d3\u8005\u548c\u6b7b\u4ea1\u4eba\u6570\u65f6\uff0c\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u989d\u5916\u4fdd\u62a4\u7684\u60f3\u6cd5\u5c31\u6d88\u5931\u4e86\u3002\u5f53\u4f60\u6700\u7ec8\u8ba1\u7b97\u4e8b\u60c5\u5e76\u5212\u5206\u91cd\u8981\u7684\u4e8b\u60c5\u65f6\uff0c\u4f8b\u5982\u6bcf\u7ec4\u4e2d\u6709\u591a\u5c11\u611f\u67d3\u8005\u7ee7\u7eed\u6b7b\u4ea1\uff0c90\uff05\u7684\u6570\u5b57\u6ca1\u6709\u5269\u4f59\u3002\u5728\u4e0a\u56fe 6 \u4e2d\uff0c\u6ca1\u6709\u53ef\u7528\u4fe1\u606f\u8868\u660e\u63a5\u79cd\u7ec4\u4e0e\u672a\u63a5\u79cd\u7ec4\u76f8\u6bd4\uff0c\u6bcf\u6b21\u611f\u67d3\u7684\u6b7b\u4ea1\u7387\u6709\u4efb\u4f55\u4e0d\u540c\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u8bbf\u95ee\u6bcf\u4e2a\u7ec4\u4e2d\u7684\u611f\u67d3\u4eba\u6570\u548c\u6b7b\u4ea1\u4eba\u6570\u6765\u4e86\u89e3\u539f\u56e0\u3002\u672a\u63a5\u79cd\u75ab\u82d7\u7684 84611 \u4f8b\u4e2d\u6709 36 \u4f8b\uff0c\u800c\u63a5\u79cd\u7ec4\u7684 1066 \u4f8b\u4e2d\u6709 0 \u4f8b\u3002 84611 \u4e2d\u7684 36 \u4eba\u5927\u7ea6\u662f 2350 \u4eba\u4e2d\u7684 1 \u4eba\uff0c\u4f46\u6211\u4eec\u63a5\u79cd\u75ab\u82d7\u7684\u7ec4\u4e2d\u53ea\u6709 1066 \u4eba\u88ab\u611f\u67d3\u3002\u6ca1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u8868\u660e\u6bcf\u6b21\u611f\u67d3\u7684\u6b7b\u4ea1\u7387\u662f\u66f4\u9ad8\u8fd8\u662f\u66f4\u4f4e\uff0c\u4e0a\u56fe\u663e\u793a\u4e86\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u3002\u8fd9\u4e0e\u7597\u6548\u6570\u5b57 100% \u6240\u4f20\u8fbe\u7684\u76f8\u5bf9\u4e0d\u673d\u76f8\u53bb\u751a\u8fdc\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u63a5\u79cd\u7ec4\u4e2d\u6709 24 \u4eba\u6b7b\u4ea1\uff0c\u5219\u62a5\u544a\u7684\u6548\u529b\u5c06\u662f 3%\uff01\u56e0\u4e3a\u5b83\u5173\u6ce8\u7684\u662f\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u6b7b\u4ea1\u7387\uff0c\u6240\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c24 \u4f8b\u6b7b\u4ea1\u7684\u6b7b\u4ea1\u7387\u4e0e\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u7684 36 \u4f8b\u76f8\u4f3c\u3002\u4f46\u5f88\u660e\u663e\uff0c\u5728\u611f\u67d3\u8005\u4e2d\uff0c84611 \u4e2d\u7684 36 \u4f8b\u6b7b\u4ea1\u7387\u8fdc\u4f4e\u4e8e 1066 \u4e2d\u7684 24 \u4f8b\uff01 16-44 \u5c81\u611f\u67d3\u8005\u7684\u6b7b\u4ea1\u7387\u9700\u8981\u9ad8\u51fa\u8fd1 53 \u500d\u624d\u80fd\u62a5\u544a\u75ab\u82d7\u5728\u9884\u9632\u6b7b\u4ea1\u65b9\u9762\u7684\u6709\u6548\u7387\u4e3a 3%\u3002\u5bf9\u4e8e 45-64 \u5c81\u7684\u4eba\u7fa4\uff0c\u518d\u6b21\u6ca1\u6709\u8db3\u591f\u7684\u8bc1\u636e\u5f97\u51fa\u611f\u67d3/\u75c5\u6b7b\u7387\u6709\u4efb\u4f55\u4e0d\u540c\u7684\u7ed3\u8bba\uff0c\u4f46\u6b63\u5982\u84dd\u70b9\u6240\u793a\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u503e\u5411\u4e8e\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6b7b\u4ea1\u7387\u66f4\u9ad8\u3002\u4e0d\u8fc7\uff0c\u4e00\u7ebf\u5e0c\u671b\u662f\u5728 65 \u5c81\u53ca\u4ee5\u4e0a\u7684\u4eba\u7fa4\u4e2d\uff0c\u8bd5\u9a8c\u4e2d\u89c2\u5bdf\u5230\u7684\u6b7b\u4ea1\u7387\u8ba9\u6211\u4eec\u6709\u5145\u5206\u7684\u7406\u7531\u76f8\u4fe1\u75ab\u82d7\u53ef\u80fd\u4f1a\u964d\u4f4e\u8fd9\u4e00\u7fa4\u4f53\u7684\u6b7b\u4ea1\u7387\u3002\u56e0\u4e3a\u4ed6\u4eec\u4e00\u76f4\u662f\u6700\u8106\u5f31\u7684\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u5e0c\u671b\u7684\u7ed3\u679c\u3002\n\u5982\u679c\u60a8\u6ce8\u610f\u5230\u8bb8\u591a\u4eba\u5728\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\uff0c\u5e76\u63a8\u65ad\u75ab\u82d7\u4e00\u5b9a\u662f\u5bfc\u81f4\u6b7b\u4ea1\u7684\u539f\u56e0\uff0c\u90a3\u4e48\u60a8\u5c31\u4f1a\u72af\u4e0b\u6240\u8c13\u7684\u201c\u4e8b\u540e ergo propter hoc\u201d\u8c2c\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u8db3\u591f\u7b80\u5355\u7684\u8c2c\u8bba\u6765\u89e3\u91ca\u3002\u4ec5\u4ec5\u56e0\u4e3a B \u53d1\u751f\u5728 A \u4e4b\u540e\u5e76\u4e0d\u610f\u5473\u7740 B \u662f\u7531 A \u5f15\u8d77\u7684\u3002\u56e0\u679c\u5173\u7cfb\u9700\u8981\u66f4\u591a\u7684\u77e5\u8bc6\u6765\u63a8\u65ad\u3002\u5982\u679c\u60a8\u72af\u4e0b\u8fd9\u79cd\u5173\u4e8e\u75ab\u82d7\u63a5\u79cd\u95ee\u9898\u7684\u8c2c\u8bba\uff0c\u652f\u6301\u5927\u89c4\u6a21\u75ab\u82d7\u63a5\u79cd\u7684\u5021\u5bfc\u8005\u5f88\u5feb\u5c31\u4f1a\u544a\u8bc9\u60a8\u8fd9\u79cd\u63a8\u7406\u4e0a\u7684\u7f3a\u9677\u3002\u7136\u800c\uff0c\u5728\u6ca1\u6709\u4efb\u4f55\u5185\u90e8\u538b\u529b\u68c0\u67e5\u63a8\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u5927\u89c4\u6a21\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u7fa4\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\u3002\u6211\u4eec\u6709\u5145\u5206\u7684\u7406\u7531\u65ad\u8a00\u611f\u67d3\u7387\u4e0b\u964d\u548c\u75ab\u82d7\u63a5\u79cd\u4e4b\u95f4\u5b58\u5728\u56e0\u679c\u5173\u7cfb\u3002 mRNA\u75ab\u82d7\u88ab\u8bbe\u8ba1\u6210\u5177\u6709\u76f8\u4e92\u4f5c\u7528\u7684\u56e0\u679c\u673a\u5236\u3002\u89c2\u5bdf\u56e0\u679c\u673a\u5236\u5728\u5b8f\u89c2\u5c42\u9762\uff08\u8f83\u5c11\u611f\u67d3\uff09\u7684\u9884\u671f\u5f71\u54cd\u662f\u5408\u7406\u7684\uff0c\u53ef\u4ee5\u5c06\u5176\u5f52\u56e0\u4e8e\u5fae\u89c2\u5c42\u9762\u7684\u5de5\u7a0b\u5316\u673a\u5236\u3002\u6211\u4eec\u6ca1\u6709\u7406\u7531\u65ad\u8a00\u9884\u9632\u611f\u67d3\u4e0b\u6e38\u7684\u56e0\u679c\u5173\u7cfb\u3002\u652f\u6301\u75ab\u82d7\u63a5\u79cd\u7684\u4eba\u7fa4\u5229\u7528\u4ed6\u4eec\u5bf9\u5982\u4f55\u5f97\u51fa\u529f\u6548\u6570\u5b57\u7684\u9519\u8bef\u7406\u89e3\uff0c\u5e76\u4e0e\u4ed6\u4eec\u8fdb\u884c\u4e86\u4e8b\u540e\u7684 ergo propter hoc \u4e89\u8bba\u3002\u5373\u4f7f\u6570\u636e\u6ca1\u6709\u663e\u793a\u4efb\u4f55\u5dee\u5f02\uff0c\u5bf9\u529f\u6548\u6570\u5b57\u7684\u8bef\u8bfb\u548c\u8bef\u89e3\u4e5f\u4f1a\u81ea\u52a8\u4e0e\u4e8b\u540e ergo propter hoc \u63a8\u7406\u3001\u590d\u5408\u9519\u8bef\u76f8\u7ed3\u5408\u3002\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u4efb\u4f55\u4e00\u5929\uff0c\u4f60\u90fd\u53ef\u4ee5\u627e\u5230\u63a5\u79cd\u8fc7\u75ab\u82d7\u7684\u4eba\u8bf4\u4ed6\u4eec\u611f\u67d3\u4e86 COVID\uff0c\u4ed6\u4eec\u53ea\u77e5\u9053\u5982\u679c\u6ca1\u6709\u75ab\u82d7\uff0c\u4ed6\u4eec\u7684\u60c5\u51b5\u4f1a\u66f4\u7cdf\u3002\u8fd9\u4e9b\u516c\u544a\u5f97\u5230\u5e7f\u6cdb\u5206\u4eab\u3002\u4eba\u4eec\u907f\u514d\u4e86\u4e00\u4e9b\u6700\u4e25\u91cd\u7684\u75c7\u72b6\u771f\u662f\u592a\u597d\u4e86\uff0c\u4f46\u6570\u636e\u5e76\u4e0d\u652f\u6301\u8fd9\u79cd\u89c2\u5bdf\u7ed3\u679c\uff0c\u5373\u75ab\u82d7\u4e3a\u5927\u591a\u6570\u4eba\u63d0\u4f9b\u4e86\u663e\u7740\u7684\u4e0b\u6e38\u76ca\u5904\u3002\u8fd9\u79cd\u9519\u8bef\u89c2\u5ff5\u7684\u91cd\u590d\uff0c\u5373\u9664\u4e86\u964d\u4f4e\u611f\u67d3\u7387\u4e4b\u5916\u8fd8\u6709\u60ca\u4eba\u800c\u663e\u7740\u7684\u989d\u5916\u597d\u5904\uff0c\u5c06\u5bfc\u81f4\u4eba\u4eec\u627f\u62c5\u66f4\u591a\u7684\u98ce\u9669\u3002\n\u9519\u8bef\u5730\u5047\u8bbe\u201c\u63a5\u79cd\u75ab\u82d7\u540e\uff0c\u5373\u4f7f\u6211\u88ab\u611f\u67d3\uff0c\u6211\u4e5f\u6bd4\u6ca1\u6709\u63a5\u79cd\u75ab\u82d7\u65f6\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u66f4\u5c0f\u201d\u7684\u4eba\u5c06\u66f4\u6709\u53ef\u80fd\u4ece\u4e8b\u6709\u611f\u67d3\u98ce\u9669\u7684\u884c\u4e3a\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6210\u4e3a\u63a5\u79cd\u75ab\u82d7\u8005\u7684\u201c\u6d41\u611f\u5144\u5f1f\u201d\u3002\u5982\u679c\u89c2\u5bdf\u5230\u7684\u5206\u5c42\u4fdd\u62a4\u7684\u7f3a\u4e4f\u66f4\u52a0\u660e\u786e\uff0c\u90a3\u4e48\u4eba\u4eec\u53ef\u80fd\u4f1a\u9009\u62e9\u4ecd\u7136\u6234\u53e3\u7f69\u548c\u4fdd\u6301\u793e\u4ea4\u8ddd\u79bb\uff0c\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u9664\u4e86\u63a5\u79cd\u75ab\u82d7\u4e4b\u5916\u7684\u63a5\u89e6\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u9009\u62e9\u53c2\u52a0\u8f83\u5c11\u7684\u793e\u4ea4\u6d3b\u52a8\u3002\u8fd9\u53cd\u8fc7\u6765\u4f1a\u964d\u4f4e\u611f\u67d3\u7387\uff0c\u5e76\u964d\u4f4e\u9003\u907f\u75ab\u82d7\u63a5\u79cd\u7684\u7a81\u53d8\u627e\u5230\u5bbf\u4e3b\u8fdb\u884c\u7ec3\u4e60\u7684\u53ef\u80fd\u6027\u3002 \uff08\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u767d\u5bab\u6539\u53d8\u4e86\u5bf9\u63a5\u79cd\u75ab\u82d7\u7684\u5c4f\u853d\u5efa\u8bae\uff09\u90a3\u4e9b\u575a\u4fe1\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u53ef\u80fd\u4ecd\u7136\u9009\u62e9\u5ba3\u4f20\u529f\u6548\u6570\u5b57\u4f5c\u4e3a\u989d\u5916\u7684\u4fdd\u62a4\u5c42\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u9f13\u52b1\u4eba\u4eec\u63a5\u79cd\u75ab\u82d7\u3002\u5728\u5e7f\u544a\u4e2d\u8bef\u5bfc\u6027\u5730\u4f7f\u7528\u6570\u5b57\u662f\u4e00\u4e2a\u53e4\u8001\u7684\u6545\u4e8b\u3002\u4f46\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u4ee3\u4ef7\u662f\u4ed6\u4eec\u7684\u8bda\u5b9e\u548c\u6b63\u76f4\uff0c\u5e76\u727a\u7272\u4e86\u75ab\u82d7\u63a5\u79cd\u6240\u5e26\u6765\u7684\u4e00\u4e9b\u5b9e\u9645\u597d\u5904\uff0c\u4e3a\u4eba\u4eec\u63d0\u4f9b\u4e86\u9519\u8bef\u7684\u4fe1\u606f\u4f5c\u4e3a\u4ed6\u4eec\u9009\u62e9\u7684\u4f9d\u636e\u3002\u90a3\u4e9b\u559c\u6b22\u8bf4\u201c\u6570\u5b57\u4e0d\u8a00\u81ea\u660e\u201d\u7684\u4eba\u6700\u4e0d\u53ef\u80fd\u7406\u89e3\u6570\u5b57\u5728\u8bf4\u4ec0\u4e48\u3002\u8fdb\u884c\u6d41\u884c\u75c5\u5b66\u8bc4\u4f30\u7684\u7814\u7a76\u62a5\u544a\u7ed9\u7684\u53d7\u4f17\u4e0e\u6240\u62a5\u544a\u7684\u6570\u5b57\u4e0d\u540c\u3002\u5c31\u67d0\u4e9b\u7814\u7a76\u800c\u8a00\uff0c\u8fd9\u4e9b\u503c\u662f\u6709\u6761\u4ef6\u8ba1\u7b97\u7684\uff0c\u5b83\u4eec\u4e0e\u65e0\u6761\u4ef6\u8ba1\u7b97\u7684\u503c\u4e0d\u517c\u5bb9\u3002\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u592a\u53ef\u80fd\u5305\u542b\u5728\u8fd9\u4e9b\u6570\u5b57\u7684\u4f20\u64ad\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u7ecf\u5e38\u88ab\u4e92\u6362\u4f7f\u7528\u3002\u8003\u8651\u5230\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6570\uff0c\u4e00\u5bb6\u8bd5\u56fe\u89c4\u5212\u8d44\u6e90\u548c\u4eba\u5458\u914d\u7f6e\u7684\u533b\u9662\u5173\u5fc3\u4f30\u8ba1\u7684\u6bcf\u65e5\u4f4f\u9662\u7387\u548c\u6b7b\u4ea1\u7387\u3002\u51b3\u7b56\u8005\u5728\u9009\u62e9\u6297\u51fb\u51a0\u72b6\u75c5\u6bd2\u7684\u9009\u9879\u4e2d\u505a\u51fa\u51b3\u5b9a\uff0c\u5173\u5fc3\u91c7\u7528\u653f\u7b56\u540e\u5404\u79cd\u6307\u6807\u7684\u6bcf\u65e5\u8d39\u7387\u662f\u591a\u5c11\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e2a\u4eba\u5e76\u4e0d\u5173\u5fc3\u4eba\u53e3\u4e2d\u7684\u6bcf\u65e5\u8d39\u7387\u3002\u4ed6\u4eec\u5173\u5fc3\u81ea\u5df1\u6216\u4eb2\u4eba\u7684\u80dc\u7b97\u3002\u5982\u679c\u6240\u6709\u4eba\u7684\u6bcf\u65e5\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u7387\u90fd\u5f88\u4f4e\uff0c\u5982\u679c\u4ed6\u4eec\u81ea\u5df1\u5904\u4e8e\u663e\u7740\u66f4\u9ad8\u7684\u98ce\u9669\u4e2d\uff0c\u90a3\u4e48\u5bf9\u4e2a\u4eba\u6765\u8bf4\u5e76\u4e0d\u91cd\u8981\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6ca1\u6709\u5176\u4ed6\u53ef\u4ee5\u6307\u5bfc\u4e2a\u4eba\u98ce\u9669\u8bc4\u4f30\u7684\u63aa\u65bd\uff0c\u5982\u679c\u63a5\u79cd\u75ab\u82d7\u4e0e\u672a\u63a5\u79cd\u75ab\u82d7\u76f8\u6bd4\u7684\u6bcf\u65e5\u611f\u67d3\u7387\u62a5\u544a\u786e\u5b9e\u4e3a\u67d0\u4eba\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u8861\u91cf\u6807\u51c6\uff0c\u5373\u9009\u62e9\u63a5\u79cd\u75ab\u82d7\u3002\n\u4f46\u662f\u4e00\u65e6\u4e00\u4e2a\u4eba\u63a5\u79cd\u4e86\u75ab\u82d7\uff0c\u6bcf\u5929\u7684\u4f4f\u9662\u7387......", "note_en": "Accurate description of effects is not hair-splitting; it is much-needed exactness to avoid adding confusion to an extraordinarily complicated and tense scientific and societal debate around COVID-19 vaccines.\n It does not mean that 95% of people are protected from disease with the vaccine\u2014a general misconception of vaccine protection also found in a\u00a0 Lancet Infectious Diseases\u00a0Editorial.\n This  appeared in correspondence in a March 8th publication through The Lancet, a leading peer reviewed medical journal. It emphasizes that even within the scientific communities focused on such issues, misunderstandings about the meaning and implications of reported numbers about vaccine efficacy persist. If the scientific community makes a mistake in its own interpretations, that can misinform policy makers, even very educated ones, and that in turn can misinform the public.\n In the last few weeks I have seen evidence of articles more widely shared to correct some of the early misconceptions The Lancet correspondence was concerned about. However a more insidious form of misunderstanding and misinformation lingers, and is pervasive.\n  Tom is no ordinary doctor. He is the  former Director of the Center for Disease Control under President Barack Obama. He is also propagating dangerous misinformation about the COVID-19 vaccines. It will cause people to misunderstand the real world results which can cause more people to die, and exacerbate the pandemic.\n Dr. Tom is wrong. About as wrong you can get. The real world data has shown that the death rate among the  vaccinated, if infected with COVID, can be  3 to 5.7 times higher 1 than the death rate of the  unvaccinated.\n    The former Director of the CDC is making what I call an Acceptable Catastrophic Error. This is the kind of error one is allowed to make when they are perceived to have the correct opinion. Arguments and statistics used towards the goal of getting every single person vaccinated for COVID are given far less scrutiny and are accepted as true more readily, than any arguments or statistics that might be perceived as counterproductive towards that goal.\n When the former Director of the CDC, or anyone else for that matter, says someone who is infected with COVID is 100 times less likely to die if they have been vaccinated, it does not matter how far off that number is. It will be readily forgiven no matter how inaccurate. It is the goal of universal vaccination, not truth, that appears to be most important.\n   In order to understand why people are claiming these marvelous additional benefits exist, we will unfortunately have to do some math. But once we do, confusion will be alleviated, and the dangerous misinformation being spread by those in authority and those on a mission to convince everyone to get vaccinated, will become clear.\n To understand vaccine efficacy, a diagram provided in the results of a Pfizer\u2013BioNTech mRNA BNT162b2  clinical trial will be very useful.\n  The red line with circles shows that for those who received the vaccine, which was 21,669 people, the rate of infection slowed. The average number of days between individual infections increased. The result is that over a period of time, the total number of people who became infected was indeed far lower than the unvaccinated group.\n This is where the earlier statement from from The Lancet \u201cwho would have become diseased with COVID-19 had they not been vaccinated\u201d comes into play. It is reasonably assumed that the red line would resemble the blue line if the group were unvaccinated. Therefore one could count the number of squares on the blue line that occur in between instances of red circles, and get a ratio of how many unvaccinated people got infected per each vaccinated person over a period of time.\n  The efficacy rating (VE in the table) is a way of trying to do this. However one additional layer of complexity is added. Researchers treat the people in study without much distinction. Every day that a person is included in the study and observable is considered a person-day. Every person being observed on a given day is counted and added to a tally of person-days. At the end of the study, the observed infections are divided by the total person-days counted for the group.\n For example, if two people are observed across four days, it is a total of eight person-days. Each person has a chance of infection each day, unless they were already infected. It makes a total of eight chances for a person to become infected. However, once infected, someone cannot be infected again, so that person stops being counted in the person-day tally. In this particular case they used a different length of time than day, but the idea is the same.\n At the end of the day, the efficacy calculation is the result of  counting things and dividing things counted. We can take the numbers they counted and divide them ourselves to arrive at the same efficacy numbers. Let\u2019s use the data from  \u2265 7 days after dose 2. We have 21,314 people across 4.015 time units for the vaccinated group, and 21,258 people across 3.982 time units for the unvaccinated. Now we compare the rates of infection, which were 9 and 172 observed infections respectively.\n  Finally, we take the two rates, and compare them, and compute a number that represents the percent score called  efficacy.\n  There is the efficacy number from the table. Subtracting from 1 simply allows you to report a number where higher is better, instead of using \u201cgolf rules\u201d where lower is better. The calculation itself is not misleading if you understand how it is derived. But it is important to hold on to the idea we are currently talking about   infection rates over time  only. It is perfectly reasonable to compare infection rates among two groups in this way.\n This distinction is all the more important as, although we know the risk reduction achieved by these vaccines under trial conditions, we do not know whether and how it could vary if the vaccines were deployed on populations with different exposures, transmission levels, and attack rates. 2\n   Israel offered a glimpse into the real world dynamics of the Pfizer\u2013BioNTech mRNA BNT162b2 vaccine. A major  study, published May 2021 in The Lancet, reviewed national surveillance data, collected as part of a government vaccination initiative. The data collected was able to identify those vaccinated on which dates; when they were diagnosed with COVID; whether they were symptomatic or not; if and when they went to the hospital; if they had severe or critical hospitalization; and if they died.\n The study is quite thorough, although it did contain  errors some of which may not have been fully corrected. But we can jump directly to inspecting the efficacy numbers and correcting errors. We will be using the numbers provided in Table 4 on page 1825.\n  The top white box contains the number of infections observed during the study. We can use  All Ages. The  Unvaccinated and  Vaccinated infections for  All Ages were 109,876 and 3,642 respectively. Just as before, we need the person-days (the total time observed) for both. These are provided at the bottom of the table and for the Unvaccinated and Vaccinated they are 120,076,136 and 170,434,659 respectively.\n   Taking a look at our approximate ratios calculated, you can see that 91.5 in the red square in the table corresponds to our calculated unvaccinated rate, and similarly 2.1 in the blue box corresponds to our calculated vaccinated rate. We would simply need to multiply both by 100,000, as they are  incidence rates per 100,000 person-days, to make them about equal to the table.\n The next step is identical to the Pfizer phase three trial. \u201cVaccine effectiveness estimates were calculated as (1 \u2013 IRR) \u00d7 100\u201d ( Incidence Rate Ratios, IRR)\n  Our calculation appears to be 1.1% higher than that in the table. There are two possible explanations. One explanation may be that when they  corrected some hard values they failed to update the efficacy calculation. The second explanation is that the authors ran the raw data, which we do not have, through a particular statistical package 3 in order to estimate the bounds (numbers in parentheses, giving some wiggle room to the estimate), which gave them a more nuanced estimate for the central incidence rates than the numbers they provide the reader allow \u2014 as our calculated incidence rates are clearly in agreement with the table.\n This isn\u2019t too important, as these are simply estimates the authors are making based on observations. These estimates will change over time and with different populations. They are very useful to have, but should not be treated as if they\u2019re exact.\n They are also not where the major issues arise. One can simply look at the raw numbers without calculating the efficacy number and conclude that indeed, infection rates were substantially lower. The differences that remain in their calculation for efficacy percentage are negligible.\n Next, however, we move to what will ultimately be the source of misinformation. It isn\u2019t the fault of the report itself, but a consequence of too many people who pretend to speak from knowledge and authority interpreting numbers they do not understand.\n   Included in the study are rates of symptomatic COVID, hospitalization, severe hospitalization, and their respective efficacy calculations. At the bottom of the table are efficacy calculations related to   death. We will use the table to make one final efficacy calculation so we can move to discussing this  horrific source of misinformation.\n  We are given 36 deaths among those aged 16-44 in the unvaccinated group and 0 deaths in the vaccinated group. We have 88,938,310 and 61,397,072 person days for unvaccinated and vaccinated respectively from the bottom of the table. This gives us, indeed 100% efficacy!\n  100% Efficacy! That\u2019s 100% protection against death! Those between the ages 16-44  cannot die from COVID! You can see how impossible it is for someone to die if vaccinated, as they do not even provide a range of uncertainty. 100% with no uncertainty is as  certain as you can get.\n  It is obviously possible for vaccinated people 16-44 to die from COVID. The other results from this efficacy from death calculation are  just as flawed, and are being dangerously misused. Let us revisit Dr. Tom, the former CDC director.\n  Hyper-vigilant mass-vaccination advocates have been using the vaccine efficacy \u201cfrom death\u201d numbers in this Israeli study to claim that   if you get COVID you have additional protection because of the vaccine. Some may quote the percentage (\u201cit\u2019s 96% effective at preventing death!\u201d) so as to not be accused of inventing their own numbers. But if you have made it this far, you have performed the efficacy calculation three separate times now.  Counting things and dividing things counted.\n Nowhere, at any time, in any way, did we look at how many people in the vaccinated group  got COVID  and died. We (and the authors of the study) counted the number of deaths among the vaccinated, and divide by the number of  days, not the number of  infections.\n And if we do actually look at and compare deaths among those actually infected we get a completely different story.\n  Every single additional efficacy number is redundant. All reported results downstream from infection are a  consequence of reduced infections 4. The efficacy rates would all be in the high 90s even if the vaccinated group were  perfectly identical except for infection rate.\n When \u201cformer Director of the CDC\u201d Dr. Tom and others use the non-infection efficacy numbers to discuss the vaccines, they are, intentionally or not, misleading the public. It is something that should end immediately.\n With the exception of infection rates, the efficacy numbers convey no useful information to citizens about their risks once they have been vaccinated. Instead, it may cause the vaccinated to place themselves and others at greater risk if they operate on this misinformation.\n The efficacy numbers, other than infection, which are all  downstream effects of infection, are being used and accepted as if they are additional, layered benefits at every stage of COVID infection.\n  This diagram is how they are being communicated and how they are being received by the clear majority of public figures and citizens. If you are vaccinated it is being communicated that the study showed that you are:\n  If the efficacy numbers were layered measures of additional protection then the observations would have been different in the Israeli study (All Ages) 5.\n  With numbers this small, these differences may seem negligible. But when scaled up not just across populations but also across time, the impact of affecting people\u2019s decision making when choosing what level of infection risk to assume, can dramatically alter the situation.\n These are currently  Acceptable Catastrophic Errors being made each and every day by nearly everyone. It is hard to fathom how much more wrong someone could be yet still maintain their credibility after this. But because these are  acceptable catastrophic errors, if I am successful in clearing up confusion, those spreading the misinformation will simply move on to the next acceptable catastrophic error.\n  When you actually take a look at who was infected and who died by age group, the idea of additional protection disappears for most.\n   When you are finally  counting things and dividing things counted which matter, such as how many infected people went on to die in each group, no remnant of the 90% numbers remain. In the graph above 6, there is no information available to suggest the death rate per infection is any different in the vaccinated group compared to the unvaccinated group. You can see why by revisiting the number infected and the number who died in each group.\n 36 of 84611 in the unvaccinated versus 0 in 1066 in the vaccinated group. 36 in 84611 is roughly 1 in 2350, but we only had 1066 infected in the vaccinated group. There is not enough information to claim the death rate per infection is higher or lower, and that uncertainty is indicated in the graph above. That is worlds away from the relative immortality communicated by the efficacy number 100%.\n In fact, if there had been  24 deaths in the vaccinated group the efficacy reported would have been 3%! Because it was looking at rates over time, 24 deaths would have been the death rate over time similar to 36 in the unvaccinated group. But clearly, among those infected, 36 in 84611 is a far lower death rate than 24 in 1066!\n The death rate for the ages 16-44 among infected would need to have been almost  53 times higher to report the vaccine was 3% effective at  preventing death.\n     For ages 45-64, there again isn\u2019t enough evidence to conclude that the infection/case fatality rate is any different, but as the bluish dots indicate, the numbers we have actually lean towards a  higher death rate among the vaccinated.\n The silver lining though is that among those 65 and over, the observed death rate in the trial gives us decent reason to believe that  maybe the vaccine can reduce the death rate for this group. Since they were the most vulnerable all along, this is a promising result.\n  If you were to notice that a number of people died after vaccination, and inferred that the vaccine must have  caused the death, you would be committing what is known as the \u201cpost hoc ergo propter hoc\u201d fallacy.\n This is a simple enough fallacy to explain. Just because B happened after A does not mean B was  caused by A. Causation requires more knowledge to deduce.\n If you were to commit this fallacy communicating concern over vaccination you would be quickly told by pro-mass-vaccination advocates of this flaw in reasoning. However the same error is committed by the pro-mass-vaccination crowd without any internal pressure checking the reasoning.\n We have great reason to assert a causal relationship between decreased infection rates and vaccination. The mRNA vaccines were designed to have a causal mechanism of interaction. Observing the intended effects of the causal mechanism on the macro level (fewer infections) is reasonable to attribute to the engineered mechanism on the micro level.\n We have far less reason to assert causation  downstream from preventing infection. The pro-vaccinate-everyone crowd has used their incorrect understanding of how the efficacy numbers were derived, and made post hoc ergo propter hoc arguments with them. Even when the data does not show  any difference, a misreading and misunderstanding of efficacy numbers is automatically combined with post hoc ergo propter hoc reasoning, compounding errors.\n   On any given day on social media, you can find someone who has been vaccinated saying they contracted COVID, and they just  know that but for the vaccine they would have been in worse shape. These announcement get shared widely. It is wonderful that people have avoided some of the worst symptoms, but the data has not supported the observation that the vaccine offers significant downstream benefits for most people.\n  The repetition of this false idea, that there are amazing and significant additional benefits outside of mere reduced infection rates, will result in people taking increased risks.\n The person who  incorrectly assumes that \u201cwith the vaccine,  even if I get infected I am less likely to die than I would be without the vaccine,\u201d will be more likely to engage in behavior that risks infection. They may become the \u201cit\u2019s just a flu bro\u201d of the vaccinated.\n If the lack of observed layered protection were made more explicit then people may choose to still wear masks and social distance, to further reduce their exposure in addition to vaccination. They may choose to go to fewer social events. This in turn would reduce the infection rate, and reduce the probability a mutation that evades vaccination finds a host to practice on. (While writing this article, the White House  changed its masking recommendation for the vaccinated)\n Those who strongly believe everyone should get vaccinated may still choose to promote the efficacy numbers as additional layers of protection, because their goal is to encourage people to get vaccinated. Misleading use of numbers in advertising is a tale as old as time. But they are doing so at the cost of both their honesty and integrity, and sacrificing some of the actual benefits that vaccination provides, by giving people incorrect information to base their choices on.\n  Those who like to say \u201cthe numbers speak for themselves\u201d are the least likely to understand what the numbers are saying. The studies that make epidemiological assessments are reporting to a different audience than the numbers reported are being presented to. To the extent that some studies may exist where these values are calculated conditionally, they are incompatible with the ones that have been computed unconditionally. This information is unlikely to be contained in the spreading of these numbers, as they are more often going to be used interchangeably.\n  A hospital trying to plan resources and staffing cares about the estimated daily hospitalization and death rate given how many people are vaccinated. A policy maker deciding among options to fight coronavirus, cares what the daily rates are for various metrics after a policy is adopted.\n An individual, for the most part, does not care about the daily rate in the population. They care what their  own odds, or those of their loved ones, are.\n It does not matter to an individual if the daily observed rate of infection is low across all people, if they  themselves are at significantly higher risk. However, absent other measures that can guide an individual risk assessment, a report of daily infection rates if vaccinated compared to unvaccinated does give someone a useful measure at the level of making the choice to get vaccinated.\n But once an individual becomes vaccinated, the daily rate of hospit\n......", "posttime": "2021-08-07 22:58:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c0e\u8a00,lies,\u75ab\u82d7", "title": "\u8c0e\u8a00\u3001\u8be5\u6b7b\u7684\u8c0e\u8a00\u548c\u75ab\u82d7\u7edf\u8ba1", "title_en": "Lies, Damned Lies, and Vaccine Statistics", "transed": 1, "url": "https://drrollergator.substack.com/p/damned-lies-and-vaccine-statistics", "via": "", "real_tags": ["\u8c0e\u8a00", "lies", "\u75ab\u82d7"]}, {"category": "", "categoryclass": "", "imagename": "9e25a8d5717066bce79a68b5ba3989c3.jpeg", "infoid": 1071982, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u62c9\u4f2f\u8054\u5408\u914b\u957f\u56fd\u8fea\u62dc\uff08\u7f8e\u8054\u793e\uff09\u2014\u2014\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5468\u56db\u8868\u793a\uff0c\u5b83\u505c\u98de\u4e86 13 \u67b6\u7a7a\u4e2d\u5ba2\u8f66 A350\uff0c\u539f\u56e0\u662f\u8fd9\u67b6\u8fdc\u7a0b\u98de\u673a\u7684\u673a\u8eab\u201c\u52a0\u901f\u9000\u5316\u201d\uff0c\u8fdb\u4e00\u6b65\u5347\u7ea7\u4e86\u4e0e\u8fd9\u5bb6\u6b27\u6d32\u98de\u673a\u5236\u9020\u5546\u957f\u8fbe\u6570\u6708\u7684\u4e89\u7aef\u3002\u95ee\u9898\u3002\u867d\u7136\u7a7a\u4e2d\u5ba2\u8f66\u516c\u53f8\u62d2\u7edd\u5177\u4f53\u8ba8\u8bba\u8fd9\u4e00\u516c\u544a\uff0c\u4f46\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5c06\u98de\u673a\u505c\u98de\u7684\u51b3\u5b9a\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9 A350 \u7684\u78b3\u590d\u5408\u6750\u6599\u673a\u8eab\u7684\u8d28\u7591\uff0c\u8be5\u673a\u8eab\u65e8\u5728\u901a\u8fc7\u51cf\u5c11\u55b7\u6c14\u71c3\u6599\u7684\u71c3\u70e7\u4f7f\u53cc\u901a\u9053\u98de\u673a\u66f4\u8f7b\u3001\u66f4\u4fbf\u5b9c\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u4e5f\u662f\u4e16\u754c\u9876\u7ea7\u98de\u673a\u8fd0\u8425\u5546\u4e4b\u4e00\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5728\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u5b83\u4e00\u76f4\u5728\u76d1\u6d4b\u98de\u673a\u673a\u8eab\u6cb9\u6f06\u4e0b\u65b9\u7684\u964d\u89e3\u60c5\u51b5\u3002\u5b83\u5c06\u8fd9\u4e2a\u95ee\u9898\u63cf\u8ff0\u4e3a\u201c\u91cd\u8981\u6761\u4ef6\u201d\uff0c\u4f46\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u8868\u793a\uff1a\u201c\u6839\u636e\u76d1\u7ba1\u673a\u6784\u7684\u660e\u786e\u4e66\u9762\u6307\u793a\uff0c\u76ee\u524d\u5df2\u6709 13 \u67b6\u98de\u673a\u505c\u98de\uff0c\u6709\u6548\u5730\u5c06\u5176\u505c\u98de\uff0c\u76f4\u5230\u786e\u5b9a\u6839\u672c\u539f\u56e0\u5e76\u63d0\u4f9b\u4ee4\u4eba\u6ee1\u610f\u7684\u89e3\u51b3\u65b9\u6848\u4ee5\u6c38\u4e45\u7ea0\u6b63\u6f5c\u5728\u72b6\u51b5\u3002\u201d\u5b83\u7684\u58f0\u660e\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u62e5\u6709 53 \u67b6\u7a7a\u5ba2 A350 \u673a\u961f\uff0c\u5305\u62ec 1000 \u548c 900 \u7cfb\u5217\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u4e0e\u603b\u90e8\u4f4d\u4e8e\u6cd5\u56fd\u56fe\u5362\u5179\u7684\u98de\u673a\u5236\u9020\u5546\u7b7e\u8ba2\u4e86\u53e6\u4e00\u67b6\u8ba2\u5355\uff0c\u5176\u603b\u8ba2\u5355\u91cf\u4e3a 76 \u67b6\uff0c\u662f\u5168\u7403\u6240\u6709\u822a\u7a7a\u516c\u53f8\u4e2d\u6700\u591a\u7684\u3002\u4eca\u5e74 6 \u6708\uff0c\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u8868\u793a\uff0c\u9664\u975e\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u5426\u5219\u4e0d\u4f1a\u518d\u4f7f\u7528 A350\u3002 \u201c\u4f5c\u4e3a\u9886\u5148\u7684\u98de\u673a\u5236\u9020\u5546\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4e0e\u5ba2\u6237\u8fdb\u884c\u8c08\u5224/\u5408\u4f5c\uff0c\u201d\u4e00\u4efd\u58f0\u660e\u8bf4\u3002 \u201c\u8fd9\u4e9b\u8c08\u8bdd\u6211\u4eec\u4fdd\u5bc6\u3002\u6211\u4eec\u5bf9\u5ba2\u6237\u7684\u8fd0\u8425\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684\u8bc4\u8bba\u3002\u201c\u76ee\u524d\uff0c\u65b0\u52a0\u5761\u822a\u7a7a\u516c\u53f8\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684 A350 \u8fd0\u8425\u5546\uff0c\u5176\u673a\u961f\u4e2d\u6709 56 \u67b6\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u6ca1\u6709\u56de\u5e94\u8bc4\u8bba\u8bf7\u6c42\u3002\u5728\u7f8e\u56fd\uff0c\u8fbe\u7f8e\u822a\u7a7a\u516c\u53f8\u7684\u673a\u961f\u4e2d\u6709 15 \u67b6\u98de\u673a\u3002\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u4e9a\u7279\u5170\u5927\u7684\u822a\u7a7a\u516c\u53f8\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\nA350 \u7684\u6807\u4ef7\u9ad8\u8fbe 3.665 \u4ebf\u7f8e\u5143\uff0c\u4f46\u4e70\u5bb6\u7ecf\u5e38\u5728\u6279\u91cf\u4ea4\u6613\u4e2d\u83b7\u5f97\u6298\u6263\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98 Akbar al-Baker \u4ee5\u5176\u5728\u4e0e\u5236\u9020\u5546\u548c\u5176\u4ed6\u4eba\u8c08\u5224\u65f6\u7684\u5f3a\u786c\u548c\u5bf9\u6297\u65b9\u5f0f\u800c\u95fb\u540d\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u5c06\u6210\u4e3a\u5728\u8fd9\u4e2a\u963f\u62c9\u4f2f\u534a\u5c9b\u56fd\u5bb6\u53c2\u52a0\u5373\u5c06\u4e3e\u884c\u7684 2022 \u5e74 FIFA \u4e16\u754c\u676f\u7684\u7403\u8ff7\u7684\u91cd\u8981\u627f\u8fd0\u4eba\u3002\u5982\u679c\u60a8\u901a\u8fc7\u672c\u6587\u4e2d\u7684\u63a8\u8350\u94fe\u63a5\u8d2d\u4e70\u5546\u54c1\uff0cMicrosoft \u548c\u5408\u4f5c\u4f19\u4f34\u53ef\u80fd\u4f1a\u83b7\u5f97\u8865\u507f\u3002\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00 \u6253\u5f00\u5916\u90e8\u7ad9\u70b9 \u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u5916\u90e8\u7ad9\u70b9", "note_en": "DUBAI, United Arab Emirates (AP) \u2014 Qatar Airways said Thursday it grounded 13 Airbus A350s over what it described as fuselages \u201cdegrading at an accelerated rate\u201d in the long-range aircraft, further escalating a monthslong dispute with the European airplane maker over the issue.\n       While Airbus declined to specifically discuss the announcement, Qatar Airways&#39; decision to ground the aircraft raised questions about the A350s&#39; carbon composite fuselage, designed to make the twin-aisle aircraft lighter and cheaper to operate by burning less jet fuel. Qatar Airways also is one of the world&#39;s top operators of the aircraft.\n    In its statement, Qatar Airways said it had been monitoring the degradation beneath the paint on the fuselage of the aircraft for some time. It described the issue as a \u201csignificant condition,\u201d without elaborating.\n \u201cFollowing the explicit written instruction of its regulator, 13 aircraft have now been grounded, effectively removing them from service until such time as the root cause can be established and a satisfactory solution made available to permanently correct the underlying condition,\u201d the airline said in its statement.\n Qatar Airways has a fleet of 53 Airbus A350s in both its 1000 and 900 series. The airline has another on order with the Toulouse, France-based airplane manufacturer, making its total order of 76 aircraft \u2014 the most of any airline worldwide. In June, Qatar Airways said it wouldn&#39;t take any more A350s unless the problem was fixed.\n  \u201cAs a leading aircraft manufacturer we are always in talks / working with our customers,\u201d a statement said. &#34;Those talks we keep confidential. We have no further comment on our customer\u2019s operations.\u201c\n Currently, Singapore Airlines is the world&#39;s top operator of the A350, with 56 now in its fleet. The airline did not respond to a request for comment. In America, Delta Air Lines has 15 in its fleet. The Atlanta-based carrier did not immediately respond to a request for comment.\n The A350 has a list price as much as $366.5 million, though buyers often get discounts in bulk deals.\n Qatar Airways CEO, Akbar al-Baker, is known for his hard-changing, confrontational approach in negotiating with manufacturers and others.\n The airline will be the crucial carrier for fans attending the upcoming FIFA 2022 World Cup in this Arabian Peninsula country.\n  Microsoft and partners may be compensated if you purchase something through recommended links in this article.\n                Opens in a new window  Opens an external site  Opens an external site in a new window", "posttime": "2021-08-07 22:57:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "a350,airways,\u822a\u7a7a\u516c\u53f8", "title": "\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5c06 13 \u67b6\u7a7a\u5ba2 A350 \u505c\u98de\u4e3a\u673a\u8eab\u964d\u7ea7", "title_en": "Qatar Airways grounds 13 Airbus A350s as fuselage degrading", "transed": 1, "url": "https://www.msn.com/en-us/money/news/qatar-airways-grounds-13-airbus-a350s-as-fuselage-degrading/ar-AAMYDOB", "via": "", "real_tags": ["a350", "airways", "\u822a\u7a7a\u516c\u53f8"]}, {"category": "", "categoryclass": "", "imagename": "774693bba29640210e08cf863b8018d4.jpg", "infoid": 1071981, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5b87\u822a\u5c40\u547c\u5401\u6709\u5174\u8da3\u5728 1,700 \u5e73\u65b9\u82f1\u5c3a\u7684\u6816\u606f\u5730\u5ea6\u8fc7\u4e00\u5e74\u7684\u7533\u8bf7\u4eba\uff0c\u4ee5\u5e2e\u52a9\u7814\u7a76\u672a\u6765\u63a2\u9669\u8005\u5728\u706b\u661f\u8868\u9762\u751f\u6d3b\u7684\u60c5\u51b5\u3002\u867d\u7136\u53c2\u4e0e\u8005\u4e0d\u9700\u8981\u7ed1\u5728\u706b\u7bad\u4e0a\u53d1\u5c04\u5230\u6700\u540e\u7684\u8fb9\u754c\uff0c\u4f46\u4ed6\u4eec\u5c06\u5e2e\u52a9\u4e3a\u592a\u7a7a\u63a2\u7d22\u7684\u672a\u6765\u94fa\u5e73\u9053\u8def\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u4e0d\u9700\u8981\u79bb\u5f00\u5730\u9762\u3002 \u201c\u8fd9\u4e00\u7cfb\u5217\u4efb\u52a1\u2014\u2014\u88ab\u79f0\u4e3a\u8239\u5458\u5065\u5eb7\u548c\u6027\u80fd\u63a2\u7d22\u6a21\u62df\u2014\u2014\u5305\u62ec\u57fa\u4e8e\u7f8e\u56fd\u5b87\u822a\u5c40\u7ea6\u7ff0\u900a\u822a\u5929\u4e2d\u5fc3\u7684\u4e09\u4e2a\u4e3a\u671f\u4e00\u5e74\u7684\u706b\u661f\u8868\u9762\u6a21\u62df\u3002\u8fd9\u4e9b\u6a21\u62df\u5c06\u652f\u6301\u7814\u7a76\u5f00\u53d1\u65b9\u6cd5\u548c\u6280\u672f\uff0c\u4ee5\u9632\u6b62\u548c\u89e3\u51b3\u672a\u6765\u8f7d\u4eba\u822a\u5929\u7684\u6f5c\u5728\u95ee\u9898\u524d\u5f80\u6708\u7403\u548c\u706b\u661f\u7684\u4efb\u52a1\uff0c\u201d\u636e\u7f8e\u56fd\u5b87\u822a\u5c40\u79f0\u3002\u4efb\u52a1\u5c06\u6d89\u53ca\u56db\u4e2a\u4eba\u4f4f\u5728\u4e00\u4e2a\u200b\u200b\u6a21\u5757\u4e2d\uff0c\u4ed6\u4eec\u5c06\u5728\u6a21\u62df\u7ea2\u8272\u661f\u7403\u4e0a\u7684\u4efb\u52a1\u65f6\u9047\u5230\u5404\u79cd\u6311\u6218\u3002 \u201c\u6a21\u62df\u5bf9\u4e8e\u6d4b\u8bd5\u89e3\u51b3\u65b9\u6848\u4ee5\u6ee1\u8db3\u751f\u6d3b\u5728\u706b\u661f\u8868\u9762\u7684\u590d\u6742\u9700\u6c42\u81f3\u5173\u91cd\u8981\uff0c\u201d\u4f4d\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u4f11\u65af\u987f\u7684\u7ea6\u7ff0\u900a\u822a\u5929\u4e2d\u5fc3\u7684 NASA \u9ad8\u7ea7\u98df\u54c1\u6280\u672f\u7814\u7a76\u9879\u76ee\u7684\u9996\u5e2d\u79d1\u5b66\u5bb6 Grace Douglas \u8bf4\u3002 \u201c\u5730\u7403\u4e0a\u7684\u6a21\u62df\u5c06\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u548c\u5e94\u5bf9\u5b87\u822a\u5458\u5728\u51fa\u53d1\u524d\u5c06\u9762\u4e34\u7684\u8eab\u5fc3\u6311\u6218\u3002\u201d NASA \u6b63\u5728\u547c\u5401\u5e74\u9f84\u5728 30 \u81f3 55 \u5c81\u4e4b\u95f4\u7684\u7cbe\u901a\u82f1\u8bed\u7684\u7f8e\u56fd\u516c\u6c11\u6216\u6c38\u4e45\u5c45\u6c11\u7684\u975e\u5438\u70df\u7533\u8bf7\u4eba\u3002 NASA \u6307\u51fa\uff0c\u53c2\u4e0e\u53ef\u4ee5\u83b7\u5f97\u8865\u507f\uff0c\u8fd8\u63cf\u8ff0\u4e86\u4e0e\u6559\u80b2\u548c\u7ecf\u9a8c\u3002 \u201c\u6bcf\u4e2a\u4efb\u52a1\u5c06\u7531\u56db\u540d\u673a\u7ec4\u4eba\u5458\u7ec4\u6210\uff0c\u4ed6\u4eec\u5728\u4e00\u4e2a\u7531 ICON 3D \u6253\u5370\u7684 1,700 \u5e73\u65b9\u82f1\u5c3a\u7684\u6a21\u5757\u4e2d\u751f\u6d3b\u548c\u5de5\u4f5c\uff0c\u8be5\u6a21\u5757\u79f0\u4e3a Mars Dune Alpha\u3002\u8be5\u6816\u606f\u5730\u5c06\u6a21\u62df\u706b\u661f\u4efb\u52a1\u7684\u6311\u6218\uff0c\u5305\u62ec\u8d44\u6e90\u9650\u5236\u3001\u8bbe\u5907\u6545\u969c\u3001\u901a\u4fe1\u5ef6\u8fdf\u548c\u5176\u4ed6\u73af\u5883\u538b\u529b\u56e0\u7d20\u3002\u8239\u5458\u4efb\u52a1\u53ef\u80fd\u5305\u62ec\u6a21\u62df\u592a\u7a7a\u884c\u8d70\u3001\u79d1\u5b66\u7814\u7a76\u3001\u4f7f\u7528\u865a\u62df\u73b0\u5b9e\u548c\u673a\u5668\u4eba\u63a7\u5236\u4ee5\u53ca\u4ea4\u6362\u901a\u4fe1\u3002\u7ed3\u679c\u5c06\u4e3a\u9a8c\u8bc1\u7cfb\u7edf\u548c\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u91cd\u8981\u7684\u79d1\u5b66\u6570\u636e\uff0c\u201c\u7f8e\u56fd\u5b87\u822a\u5c40\u89e3\u91ca\u8bf4\u3002\n\u867d\u7136\u672a\u6765\u6709\u91cd\u8fd4\u6708\u7403\u5e76\u5230\u8fbe\u706b\u661f\u7684\u96c4\u5fc3\uff0c\u4f46\u4eba\u7c7b\u81ea 1972 \u5e74\u4ee5\u6765\u5c31\u6ca1\u6709\u91cd\u8fd4\u6708\u7403\u3002", "note_en": "NASA is calling for applicants interested in spending a year in a 1,700 square foot habitat meant to help study what it will be like for future explorers to live on the surface of Mars.\n  While participants would not need to strap into a rocket and blast off into the final frontier, they would help pave the way for the future of space exploration, all without ever leaving the ground.\n  &#34;The series of missions - known as Crew Health and Performance Exploration Analog - includes three one-year Mars surface simulations based at NASA&#39;s Johnson Space Center. The analogs will support research to develop methods and technologies to prevent and resolve potential problems on future human spaceflight missions to the Moon and Mars,&#34; according to  NASA.\n The missions will involve four people living in a module where they will encounter various challenges simulating a mission on the Red Planet.\n &#34;The analog is critical for testing solutions to meet the complex needs of living on the Martian surface,&#34; said Grace Douglas, lead scientist for NASA&#39;s Advanced Food Technology research effort at the Johnson Space Center located in Houston, Texas. &#34;Simulations on Earth will help us understand and counter the physical and mental challenges astronauts will face before they go.&#34;\n NASA is calling for non-smoking applicants who are either American citizens or permanent residents proficient in the English language and between the ages of 30 and 55. NASA, which noted that compensation is available for taking part, also described various qualifications related to education and experience.\n &#34;Each mission will consist of four crew members living and working in a 1,700-square-foot module 3D-printed by ICON, called Mars Dune Alpha. The habitat will simulate the challenges of a mission on Mars, including resource limitations, equipment failure, communication delays, and other environmental stressors. Crew tasks may include simulated spacewalks, scientific research, use of virtual reality and robotic controls, and exchanging communications. The results will provide important scientific data to validate systems and develop solutions,&#34; NASA explained.\n While there are ambitions to return to the moon and reach Mars in the future, humans have not been back to the moon since 1972.", "posttime": "2021-08-07 22:57:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd\u5b87\u822a\u5c40,nasa,\u706b\u661f,\u7f8e\u56fd,\u613f\u610f", "title": "\u7f8e\u56fd\u5b87\u822a\u5c40\u6b63\u5728\u5bfb\u627e\u613f\u610f\u82b1\u4e00\u5e74\u65f6\u95f4\u6a21\u62df\u706b\u661f\u4efb\u52a1\u7684\u4eba", "title_en": "NASA is looking for people who want to spend a year simulating a mission on Mars", "transed": 1, "url": "https://www.theblaze.com/news/nasa-is-looking-for-people-who-want-to-spend-a-year-simulating-a-mission-on-mars", "via": "", "real_tags": ["\u7f8e\u56fd\u5b87\u822a\u5c40", "nasa", "\u706b\u661f", "\u7f8e\u56fd", "\u613f\u610f"]}, {"category": "", "categoryclass": "", "imagename": "60fa15fe178111ad68f49bb53c7f21fc.png", "infoid": 1071979, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2013 \u5e74\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u5e94\u7528\u79ef\u6781\u5fc3\u7406\u5b66\u7855\u58eb\u8bfe\u7a0b\u7684\u7f16\u5e74\u53f2\u4e13\u680f\u3002\u6211\u9009\u62e9 MAPP \u7a0b\u5e8f\u662f\u56e0\u4e3a\u5b83\u5411\u6211\u53d1\u9001\u4e86\u4e00\u4e9b\u611a\u8822\u7684\u672a\u7ecf\u8bf7\u6c42\u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\uff0c\u6240\u4ee5\uff0c\u516c\u5e73\u6e38\u620f\uff01\u5b83\u4ee3\u8868\u4e86\u6211\u8ba4\u4e3a\u5f88\u91cd\u8981\u7684\u8d8b\u52bf\uff1a\u8457\u540d\u5927\u5b66\u6b63\u5728\u5229\u7528\u4e0d\u53d7\u76d1\u7ba1\u3001\u503a\u52a1\u878d\u8d44\u7684\u7855\u58eb\u5b66\u4f4d\u5e02\u573a\u6765\u5f00\u53d1\u7406\u8bba\u4e0a\u975e\u5e38\u6709\u4ef7\u503c\u4f46\u5728\u5b9e\u8df5\u4e2d\u96be\u4ee5\u8d27\u5e01\u5316\u7684\u54c1\u724c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u6392\u540d\u9760\u524d\u7684\u5fc3\u7406\u5b66\u7cfb\u4e0d\u63d0\u4f9b MAPP\u3002 \u201c\u79ef\u6781\u5fc3\u7406\u5b66\u5bb6\u201d\u5e76\u4e0d\u662f\u4e00\u4efd\u771f\u6b63\u7684\u5de5\u4f5c\u3002\u8be5\u8ba1\u5212\u4f3c\u4e4e\u4e3b\u8981\u5411\u5df2\u7ecf\u6709\u5de5\u4f5c\u7684\u4eba\u4f20\u6388 Martin Seligman \u6559\u6388\u5173\u4e8e\u79ef\u6781\u601d\u8003\u7684\u529b\u91cf\u7684\u6781\u5176\u6d41\u884c\u548c\u6709\u4e89\u8bae\u7684\u7406\u8bba\u7684\u539f\u5219\uff0c\u6279\u8bc4\u8005\u5c06\u5176\u63cf\u8ff0\u4e3a\u66f4\u63a5\u8fd1\u5b97\u6559\u6216\u81ea\u52a9\u5236\u5ea6\uff0c\u800c\u4e0d\u662f\u5408\u6cd5\u7684\u5b66\u672f\u9886\u57df.\u6211\u4e00\u5b9a\u8981\u5f3a\u8c03\uff0c\u4e3a\u671f\u4e00\u5e74\u7684 MAPP \u8ba1\u5212\u8981\u6c42\u5b66\u751f\u6bcf\u4e2a\u6708\u5728\u6821\u56ed\u91cc\u5ea6\u8fc7\u4e00\u4e2a\u5468\u672b\uff0c\u8d39\u7528\u8d85\u8fc7 45,000 \u7f8e\u5143\u3002\u8fd9\u5728\u5f53\u65f6\u770b\u6765\u662f\u4e00\u5927\u7b14\u94b1\u3002\u4ece\u90a3\u4ee5\u540e\u7684\u516b\u5e74\u91cc\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\u3002\u672c\u79d1\u62db\u751f\u7684\u957f\u671f\u4e0b\u964d\u4fc3\u4f7f\u5927\u5b66\u4e1a\u52a1\u7ecf\u7406\u5bfb\u627e\u5176\u4ed6\u6536\u5165\u6765\u6e90\u3002\u4e00\u4e9b\u5dde\u5bf9\u9ad8\u7b49\u6559\u80b2\u7684\u516c\u5171\u8d22\u653f\u652f\u6301\u4ece\u672a\u4ece\u5927\u8427\u6761\u7684\u4f59\u6ce2\u4e2d\u6062\u590d\u8fc7\u6765\u3002\u5927\u5b66\u8d8a\u6765\u8d8a\u591a\u5730\u4e0e\u8425\u5229\u6027\u516c\u53f8\u5408\u4f5c\u63a8\u51fa\u6602\u8d35\u7684\u5728\u7ebf\u7855\u58eb\u8bfe\u7a0b\uff0c\u4e0e\u5728\u7eb3\u65af\u8fbe\u514b\u4e0a\u5e02\u7684\u516c\u53f8\u5206\u4eab\u5b66\u8d39\u3002\u5176\u4e2d\u5927\u90e8\u5206\u662f\u7531\u8054\u90a6\u5b66\u751f\u8d37\u6b3e\u8d44\u52a9\u7684\uff0c\u672a\u507f\u8fd8\u7684\u8d37\u6b3e\u5df2\u589e\u81f3 1.6 \u4e07\u4ebf\u7f8e\u5143\u3002\u4e3a\u4e86\u8bc1\u660e\u610f\u89c1\u4e13\u680f\u4f5c\u5bb6\u7684\u529b\u91cf\u548c\u5f71\u54cd\u529b\uff0cMAPP \u8ba1\u5212\u770b\u8d77\u6765\u662f\u597d\u7684\u4e00\u9762\uff0c\u5c06\u5b66\u6742\u8d39\u589e\u52a0\u5230 71,662 \u7f8e\u5143\u3002\u8fc7\u53bb\uff0c\u5f88\u96be\u77e5\u9053\u67d0\u4e2a\u7855\u58eb\u5b66\u4f4d\u662f\u5426\u4e3a\u5b66\u751f\u63d0\u4f9b\u4e86\u4efb\u4f55\u771f\u6b63\u7684\u4ef7\u503c\u3002\u7136\u540e\u7f8e\u56fd\u6559\u80b2\u90e8\u53d1\u5e03\u4e86\u7814\u7a76\u751f\u8bfe\u7a0b\u7684\u503a\u52a1\u548c\u6536\u5165\u4fe1\u606f\u6570\u636e\u5e93\u3002\u4e0a\u4e2a\u6708\uff0c\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u63ed\u9732\u4e86\u5e38\u6625\u85e4\u76df\u6821\u7684\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u63d0\u4f9b\u4e86\u53ef\u6015\u7684\u501f\u5165\u6295\u8d44\u56de\u62a5\u3002\u5728\u8fdb\u5165\u5e74\u85aa\u4f4e\u4e8e 30,000 \u7f8e\u5143\u7684\u5c31\u4e1a\u5e02\u573a\u4e4b\u524d\uff0c\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u7535\u5f71\u4e13\u4e1a\u5b66\u751f\u901a\u5e38\u6bcf\u4eba\u501f\u5165 181,000 \u7f8e\u5143\u3002\n\u90a3\u4e9b\u8ba4\u4e3a\u4e16\u754c\u8457\u540d\u5927\u5b66\u4e0d\u4f1a\u5265\u524a\u5929\u771f\u7684\u5b66\u751f\u7684\u4eba\u611f\u5230\u9707\u60ca\u3002\u4ed6\u4eec\u6307\u51fa\uff0c\u90a3\u4e9b\u56e0\u4e3a\u5728\u5b66\u672f\u754c\u5de5\u4f5c\u800c\u4e86\u89e3\u66f4\u591a\u7684\u4eba\u4f1a\u53d8\u5f97\u9632\u5fa1\u6027\u5f88\u5f3a\uff1a\u8bb8\u591a\u7855\u58eb\u8bfe\u7a0b\u4ef7\u683c\u5408\u7406\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e26\u6765\u597d\u5de5\u4f5c\u3002\u5f53\u7136\u3002 #Notallmastersdegrees.\u5927\u591a\u6570\u8b66\u5bdf\u4e0d\u4f1a\u8086\u610f\u6bb4\u6253\u548c\u8c0b\u6740\u4ed6\u4eec\u7684\u9009\u6c11\u3002\u6211\u4eec\u4ecd\u7136\u5b58\u5728\u8b66\u5bdf\u66b4\u529b\u95ee\u9898\u3002\u95ee\u9898\u662f\u6709\u95ee\u9898\u7684\u7855\u58eb\u8bfe\u7a0b\u7684\u6fc0\u589e\u4f1a\u6301\u7eed\u591a\u4e45\uff0c\u5982\u679c\u9ad8\u7b49\u6559\u80b2\u884c\u4e1a\u4e0d\u80fd\u63a7\u5236\u5b83\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6559\u80b2\u90e8\u6570\u636e\u5e93\u5217\u51fa\u4e86 44,000 \u591a\u4e2a\u7855\u58eb\u8bfe\u7a0b\uff0c\u8fd9\u8bc1\u660e\u4e86\u7814\u7a76\u751f\u9662\u5982\u4f55\u6210\u4e3a\u8bb8\u591a\u804c\u4e1a\u9053\u8def\u7684\u5e38\u89c1\u4e2d\u8f6c\u7ad9\u2014\u2014\u4ee5\u53ca\u5927\u5b66\u5982\u4f55\u79ef\u6781\u5730\u8fdb\u5165\u5e02\u573a\uff0c\u5bfb\u6c42\u5229\u6da6\u3002\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u592a\u5c0f\uff0c\u65e0\u6cd5\u4ea7\u751f\u7b26\u5408\u8be5\u90e8\u95e8\u4e25\u683c\u7684\u9690\u79c1\u95e8\u69db\u7684\u503a\u52a1\u548c\u6536\u5165\u4fe1\u606f\u3002\u6eda\u52a8\u6d4f\u89c8\u5176\u4f59\u90e8\u5206\uff0c\u6700\u660e\u663e\u7684\u6a21\u5f0f\u662f\u7a0b\u5e8f\u7c7b\u578b\u548c\u673a\u6784\u7c7b\u578b\u3002\u4e00\u4e9b\u89c2\u5bdf\uff1a \u501f 118,000 \u7f8e\u5143\u6210\u4e3a\u4e00\u540d\u5e74\u6536\u5165 18,000 \u7f8e\u5143\u7684\u9488\u7078\u5e08\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u660e\u667a\u7684\u8d22\u52a1\u51b3\u5b9a\u3002\u6211\u5728\u770b\u4f60\uff0c\u5e1d\u738b\u4e1c\u65b9\u533b\u5b66\u9662\u3002\u5927\u5b66\u827a\u672f\u6559\u80b2\u7684\u6574\u4e2a\u673a\u6784\u5bf9\u5b66\u751f\u6765\u8bf4\u662f\u4e00\u573a\u7ecf\u6d4e\u707e\u96be\u3002\u80cc\u8d1f\u6c89\u91cd\u7684\u503a\u52a1\u6765\u57f9\u8bad\u4e00\u4e2a\u901a\u5e38\u88ab\u201c\u6328\u997f\u201d\u8fd9\u4e2a\u8bcd\u4fee\u9970\u7684\u804c\u4e1a\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u4e3b\u610f\uff0c\u800c\u4e14\u6d89\u53ca\u4ec0\u4e48\u6837\u7684\u5927\u5b66\u5e76\u4e0d\u91cd\u8981\u3002\u8425\u5229\u6027\u3001\u975e\u8425\u5229\u6027\u3001\u516c\u5171\u6027\u2014\u2014\u6570\u5b57\u592a\u53ef\u6015\u4e86\u3002\u54e5\u4f26\u6bd4\u4e9a\u56e0\u4e3a\u662f\u54e5\u4f26\u6bd4\u4e9a\u800c\u88ab\u6dd8\u6c70\uff0c\u4f46\u5176\u4ed6\u5927\u5b66\u7684\u7535\u5f71\u7814\u7a76\u9879\u76ee\u770b\u8d77\u6765\u4e5f\u597d\u4e0d\u5230\u54ea\u91cc\u53bb\u3002\n\u89c6\u89c9\u548c\u8868\u6f14\u827a\u672f\uff1a\u7cdf\u7cd5\u3002\u7f8e\u672f\u548c\u5de5\u4f5c\u5ba4\u827a\u672f\uff1a\u7cdf\u7cd5\u3002\u620f\u5267\u548c\u620f\u5267\uff1a\u7cdf\u7cd5\u3002\u6211\u6562\u80af\u5b9a\uff0c\u5927\u5b66\u4f1a\u8bf4\u827a\u672f\u57f9\u8bad\u662f\u8017\u65f6\u8017\u529b\u7684\uff0c\u6211\u6562\u80af\u5b9a\u4ed6\u4eec\u662f\u5bf9\u7684\u3002\u4f46\u8fd9\u5e76\u4e0d\u80fd\u514d\u9664\u4ed6\u4eec\u5bf9\u81ea\u5df1\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u9053\u5fb7\u8d23\u4efb\u7684\u9053\u5fb7\u8d23\u4efb\uff0c\u8be5\u7cfb\u7edf\u5c06 100% \u7684\u8d22\u52a1\u98ce\u9669\u7f6e\u4e8e\u4e00\u5f00\u59cb\u53ef\u80fd\u6ca1\u6709\u90a3\u4e48\u7ecf\u6d4e\u5bfc\u5411\u7684\u5e74\u8f7b\u4eba\u8eab\u4e0a\u3002 Penn \u7684\u8ba1\u5212\u6bd4\u4ece Amazon \u8ba2\u8d2d Martin Seligman \u7684\u4e00\u4e9b\u4e66\u7c4d\u7684\u4ef7\u683c\u9ad8\u51fa\u7ea6 71,562 \u7f8e\u5143\uff0c\u8fd9\u5e76\u4e0d\u597d\u3002\u4f46\u662f\u5f88\u591a\u771f\u6b63\u7684\u5fc3\u7406\u5b66\u8bfe\u7a0b\u4e5f\u6709\u95ee\u9898\u3002\u5b66\u751f\u4eec\u501f\u533b\u751f\u7684\u94b1\u6765\u652f\u4ed8\u6cbb\u7597\u5e08\u7684\u5de5\u8d44\u3002 Northwestern \u62e5\u6709\u4e34\u5e8a\u5fc3\u7406\u5b66\u7855\u58eb\u8bfe\u7a0b\uff0c\u503a\u52a1\u4e2d\u4f4d\u6570\u4e3a 142,000 \u7f8e\u5143\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u4ec5\u4e3a 43,000 \u7f8e\u5143\u3002\u5176\u4ed6\u4eba\u6ca1\u6709\u90a3\u4e48\u7cdf\u7cd5\uff0c\u4f46\u4ed6\u4eec\u4ecd\u7136\u5f88\u7cdf\u7cd5\u3002\u5728\u67d0\u4e9b\u9886\u57df\uff0c\u5927\u5b66\u7684\u7c7b\u578b\u5f88\u91cd\u8981\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u8d1f\u62c5\u5f97\u8d77\u7684\u4f1a\u8ba1\u5b66\u4f4d\uff0c\u5e76\u83b7\u5f97\u4e00\u4efd\u9ad8\u85aa\u7684\u7b2c\u4e00\u4efd\u5de5\u4f5c\uff0c\u90a3\u5c31\u53bb\u516c\u7acb\u6216\u975e\u8425\u5229\u6027\u5927\u5b66\u3002\u5982\u679c\u4f60\u60f3\u4ed8\u51fa\u66f4\u591a\uff0c\u5f97\u5230\u66f4\u5c11\uff0c\u53bb\u50cf DeVry\u3001\u83f2\u5c3c\u514b\u65af\u5927\u5b66\u6216\u666e\u6e21\u5927\u5b66\u8fd9\u6837\u7684\u8425\u5229\u6027\u5b66\u6821\u3002\u8bb8\u591a\u5b66\u9662\u548c\u5927\u5b66\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u5f88\u5bb9\u6613\u5c06\u5b83\u4eec\u89c6\u4e3a\u6700\u7a33\u5b9a\u7684\u673a\u6784\u3002\u4f46\u662f\uff0c\u5728\u79c1\u4eba\u5e02\u573a\u7ade\u4e89\u7684\u540c\u65f6\uff0c\u4e3a\u516c\u5171\u4f7f\u547d\u670d\u52a1\u662f\u56fa\u6709\u7684\u6ce2\u52a8\u6027\u3002\u6211\u8ba4\u8bc6\u7684\u5927\u591a\u6570\u5927\u5b66\u7ba1\u7406\u4eba\u5458\u548c\u6559\u6388\u90fd\u771f\u8bda\u5730\u81f4\u529b\u4e8e\u5b66\u751f\u548c\u5956\u5b66\u91d1\u3002\u4ed6\u4eec\u8fd8\u6709\u8d26\u5355\u8981\u4ed8\uff0c\u8fd8\u6709\u4ed6\u4eec\u60f3\u4e70\u7684\u6602\u8d35\u4e1c\u897f\u3002\u7855\u58eb\u5b66\u4f4d\u5e02\u573a\u53d7\u5230\u51e0\u4e2a\u51e0\u4e4e\u540c\u65f6\u6c47\u805a\u7684\u56e0\u7d20\u7684\u5f71\u54cd\u3002 2005 \u5e74\u4e3a\u7814\u7a76\u751f\u9662\u63d0\u4f9b\u4e86\u65e0\u9650\u7684\u8054\u90a6\u501f\u6b3e\u3002\u4e09\u5e74\u540e\u7ecf\u6d4e\u5d29\u6e83\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u5343\u79a7\u4e00\u4ee3\u5165\u5b66\u6d6a\u6f6e\u7684\u9876\u5cf0\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u7ebf\u6559\u5b66\u6cd5\u548c\u4e92\u8054\u7f51\u6280\u672f\u7684\u8fdb\u6b65\u4f7f\u5f97\u521b\u5efa\u5b8c\u5168\u5728\u7ebf\u7684\u7a0b\u5e8f\u6210\u4e3a\u53ef\u80fd\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u8db3\u4ee5\u652f\u6301\u5e76\u51fa\u552e\u7ed9\u4e16\u754c\u4e0a\u7684\u4efb\u4f55\u4eba\u3002\u7855\u58eb\u5b66\u4f4d\u4e5f\u662f\u53d7\u5386\u53f2\u89c4\u8303\u3001\u653f\u5e9c\u6cd5\u89c4\u6216\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u53d7\u4e13\u4e1a\u673a\u6784\u7ea6\u675f\u6700\u5c11\u7684\u8bc1\u4e66\u3002\u535a\u58eb\u662f\u7531\u6559\u5e08\u63a7\u5236\u7684\u3002\u5b66\u58eb\u5b66\u4f4d\u5728\u5f62\u5f0f\u548c\u529f\u80fd\u4e0a\u662f\u56fa\u5b9a\u7684\uff0c\u5927\u5b66\u5fc5\u987b\u516c\u5f00\u62a5\u544a\u4ed6\u4eec\u7684\u5f55\u53d6\u9009\u62e9\u6027\u548c\u5373\u5c06\u5230\u6765\u7684\u8003\u8bd5\u6210\u7ee9\u3002\u4ed6\u4eec\u8fd8\u53d7\u5230\u4e25\u683c\u7684\u8054\u90a6\u501f\u6b3e\u9650\u5236\u3002\u4f46\u662f\uff0c\u867d\u7136\u4e00\u4e9b\u7855\u58eb\u5b66\u4f4d\u4e0e\u4e13\u4e1a\u6267\u7167\u6216\u5b8c\u5584\u7684\u52b3\u52a8\u529b\u5e02\u573a\u6807\u51c6\u6709\u5173\uff0c\u4f46\u8bb8\u591a\u5176\u4ed6\u7855\u58eb\u5b66\u4f4d\u5219\u4e0d\u7136\u3002\u8fd9\u662f\u5927\u5b66\u5df2\u7ecf\u5b66\u4f1a\u5229\u7528\u7684\u7cfb\u7edf\u7684\u8f6f\u90e8\u5206\u3002\u516c\u7acb\u5927\u5b66\u7684\u65b0\u9879\u76ee\u81f3\u5c11\u5fc5\u987b\u83b7\u5f97\u5dde\u6216\u7cfb\u7edf\u7684\u6279\u51c6\u3002\u975e\u8425\u5229\u7ec4\u7ec7\u57fa\u672c\u4e0a\u53ef\u4ee5\u5728\u4efb\u4f55\u9886\u57df\u83b7\u5f97\u7855\u58eb\u5b66\u4f4d\uff0c\u968f\u610f\u6536\u8d39\uff0c\u5e76\u4e14\u4e0d\u53d7\u9488\u5bf9\u8425\u5229\u6027\u5927\u5b66\u7684\u653f\u5e9c\u89c4\u5b9a\u7684\u7ea6\u675f\u3002\n\u975e\u8425\u5229\u7ec4\u7ec7\u53ef\u4ee5\u5728\u4efb\u4f55\u9886\u57df\u83b7\u5f97\u7855\u58eb\u5b66\u4f4d\uff0c\u968f\u610f\u6536\u8d39\uff0c\u5e76\u4e14\u4e0d\u53d7\u9488\u5bf9\u8425\u5229\u6027\u5927\u5b66\u7684\u653f\u5e9c\u89c4\u5b9a\u7684\u7ea6\u675f\u3002\u6240\u6709\u8fd9\u4e00\u5207\u53ef\u80fd\u4f1a\u7ee7\u7eed\u987a\u5229\u8fdb\u884c\uff0c\u4e0d\u53d7\u5076\u5c14\u7684\u65b0\u95fb\u8c03\u67e5\u548c\u80e1\u601d\u4e71\u60f3\u7684\u4e13\u680f\u4f5c\u5bb6\u7684\u5f71\u54cd\uff0c\u9664\u4e86\u4e00\u4ef6\u4e8b\uff1a\u90a3\u4e9b\u80cc\u8d1f\u8054\u90a6\u503a\u52a1\u7684\u7814\u7a76\u751f\u8d8a\u6765\u8d8a\u591a\u5730\u4f7f\u7528\u57fa\u4e8e\u6536\u5165\u7684\u8fd8\u6b3e\u8ba1\u5212\u507f\u8fd8\u8d37\u6b3e\u3002\u8fd9\u4f7f\u4ed6\u4eec\u6709\u671b\u5728 10 \u5e74\u6216 20 \u5e74\u540e\u514d\u9664\u8d37\u6b3e\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4ed6\u4eec\u7684\u804c\u4e1a\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u8fd9\u4e9b\u53ef\u7591\u7684\u7855\u58eb\u8bfe\u7a0b\u7684\u8d26\u5355\u6700\u7ec8\u5c06\u843d\u5728\u8054\u90a6\u7eb3\u7a0e\u4eba\u8eab\u4e0a\u3002\u53ef\u80fd\u6709\u4e24\u79cd\u653f\u7b56\u56de\u5e94\u3002\u9996\u5148\uff0c\u7ed3\u675f\u5bf9\u7814\u7a76\u751f\u9662\u7684\u65e0\u9650\u5236\u501f\u8d37\u548c\u8d37\u6b3e\u5bbd\u6055\uff0c\u8fd9\u5c06\u6253\u51fb\u6709\u5fb7\u8005\u548c\u6709\u7f6a\u8005\u3002\u53c2\u52a0\u6602\u8d35\u8bfe\u7a0b\u7684\u5b66\u751f\u5c06\u4e0d\u5f97\u4e0d\u4ece\u79c1\u4eba\u5e02\u573a\u501f\u6b3e\uff0c\u5f88\u53ef\u80fd\u6bd4\u8054\u90a6\u8d37\u6b3e\u7684\u6761\u4ef6\u66f4\u5dee\u3002\u8fdb\u5165\u7814\u7a76\u751f\u9662\u7684\u673a\u4f1a\u4f1a\u51cf\u5c11\uff0c\u4f46\u5b66\u751f\u505a\u51fa\u7cdf\u7cd5\u7684\u8d22\u52a1\u51b3\u7b56\u7684\u80fd\u529b\u4e5f\u4f1a\u51cf\u5c11\u3002\u5982\u679c\u6ca1\u6709\u5c71\u59c6\u5927\u53d4\u94f6\u884c\u7684\u7a7a\u767d\u652f\u7968\uff0c\u7814\u7a76\u751f\u9662\u53ef\u80fd\u4f1a\u81ea\u52a8\u53d6\u6d88\u5b66\u8d39\u4e0a\u6da8\u3002\u5176\u6b21\uff0c\u6269\u5927\u4e86\u5965\u5df4\u9a6c\u653f\u5e9c\u6700\u521d\u9002\u7528\u4e8e\u8425\u5229\u6027\u5927\u5b66\u7684\u57fa\u4e8e\u6536\u5165\u548c\u503a\u52a1\u7684\u6cd5\u89c4\uff0c\u62dc\u767b\u653f\u5e9c\u6b63\u5728\u52aa\u529b\u6062\u590d\u8fd9\u4e9b\u6cd5\u89c4\u3002\u5927\u591a\u6570\u7855\u58eb\u8bfe\u7a0b\uff0c\u65e0\u8bba\u51fa\u4e8e\u4f55\u79cd\u610f\u56fe\u548c\u76ee\u7684\uff0c\u90fd\u662f\u4ee5\u8425\u5229\u4e3a\u76ee\u7684\u7684\uff0c\u65e0\u8bba\u8c01\u5728\u6280\u672f\u4e0a\u8fd0\u884c\u5b83\u4eec\u3002\u53d6\u6d88\u83b7\u5f97\u8054\u90a6\u63f4\u52a9\u7684\u9ad8\u503a\u52a1\u548c\u4f4e\u6536\u5165\u9879\u76ee\u7684\u8d44\u683c\u7684\u89c4\u5b9a\u5c06\u8feb\u4f7f\u5927\u5b66\u91cd\u65b0\u8bc4\u4f30\u7ecf\u5e38\u8ba9\u6bd5\u4e1a\u751f\u9677\u5165\u56f0\u5883\u7684\u7855\u58eb\u5b66\u4f4d\u3002\u7855\u58eb\u665a\u4f1a\u8fd8\u6ca1\u6709\u7ed3\u675f\u3002\u4f46\u662f\uff0c\u5927\u5b66\u8d8a\u662f\u5c06\u77ed\u671f\u7ecf\u6d4e\u5229\u76ca\u7f6e\u4e8e\u5b66\u751f\u798f\u7949\u4e4b\u4e0a\uff0c\u5b83\u5c31\u4f1a\u8d8a\u5feb\u3002", "note_en": "In 2013 I wrote a  Chronicle  column about the University of Pennsylvania\u2019s Master of Applied Positive Psychology program.\n I chose the MAPP program because it sent me some goofy unsolicited marketing emails, so, fair game! And it represented trends I thought were important: Famous universities were using the unregulated, debt-financed master\u2019s-degree market to exploit brand names that were incredibly valuable in theory but tricky to monetize in practice.\n Notably, MAPP is not offered by Penn\u2019s highly ranked psychology department. \u201cPositive Psychologist\u201d isn\u2019t an actual job. The program mostly seems to teach people who already have jobs the tenets of Professor Martin Seligman\u2019s extremely  popular and controversial theories about the power of positive thinking, which have been  described by critics as closer to a religion or self-help regime than a legitimate academic field.\n  I made sure to emphasize that the one-year MAPP program, which required students to be on campus for a single weekend per month, cost over $45,000. It seemed like a lot of money at the time.\n Much has happened in the eight years since. The long-term decline in undergraduate enrollment sent university business managers hunting for other sources of revenue. Public financial support for higher education in some states never recovered from the aftermath of the Great Recession. Universities increasingly partnered with for-profit firms to launch expensive online master\u2019s programs, sharing tuition with corporations listed on the Nasdaq. Much of it was financed with federal student loans that swelled to  $1.6 trillion outstanding.\n And in a testament to the power and influence of opinion columnists, the MAPP program looked on the bright side and increased tuition and fees to $71,662.\n  Way back when, it was hard to know if a given master\u2019s degree provided any real value to students. Then the U.S. Department of Education released a  database of debt and earnings information for graduate programs. Last month,   The Wall Street Journal  used the data to expose Ivy League programs that offered a terrible return on borrowed investment. Film students at Columbia were typically borrowing $181,000 apiece before entering a job market that pays less than $30,000 per year.\n People who assume world-famous universities wouldn\u2019t exploit na\u00efve students were shocked. People who know better because they work in academe got defensive: Many master\u2019s programs are affordable and lead to good jobs, they noted.\n Sure. #Notallmastersdegrees. Most police officers don\u2019t wantonly beat up and murder their constituents. We still have a police-brutality problem.\n  The question is how long the proliferation of questionable master\u2019s programs is going to last, and what might happen if the higher-education industry doesn\u2019t get it under control.\n The Department of Education database lists more than 44,000 master\u2019s programs, a testament to how graduate school has become a common way station for many career paths \u2014 and how aggressively universities have moved into the market, searching for profits.\n Most programs are too small to yield debt-and-earnings information that meets the department\u2019s strict privacy thresholds. Scroll through the rest and the most obvious patterns are around types of programs as much as types of institutions. Some observations:\n Borrowing $118,000 to become an acupuncturist who earns $18,000 a year may not be a wise financial decision. I\u2019m looking at you, Emperor\u2019s College of Traditional Oriental Medicine.\n  The whole apparatus of university-based arts education is a financial catastrophe for students. Taking on loads of debt to train for a profession that is commonly modified by the word \u201cstarving\u201d is a terrible idea, and it doesn\u2019t really matter what kind of college is involved. For-profit, nonprofit, public \u2014 the numbers are awful. Columbia got dinged because it\u2019s Columbia, but film-studies programs at other universities don\u2019t look much better.\n Visual and performing arts: bad. Fine and studio arts: bad. Drama and theater: bad. I\u2019m sure colleges will say that arts training is time- and labor-intensive, and I\u2019m sure they\u2019re right. But that doesn\u2019t excuse them from moral responsibility for their position in a system that puts 100 percent of the financial risk on young people who may not be that financially oriented to begin with.\n It\u2019s not great that Penn has a program that costs approximately $71,562 more than the price of ordering some of Martin Seligman\u2019s books from Amazon. But a lot of real psychology programs have problems, too. Students are borrowing doctor money for therapist wages. Northwestern has a clinical psychology master\u2019s program with median debt of $142,000 and median earnings of only $43,000. Others aren\u2019t that bad, but they\u2019re still bad.\n In some fields, the type of college matters a lot. If you want an affordable accounting degree that leads to a well-paying first job, go to a public or nonprofit university. If you want to pay more and get less, go to a for-profit school like DeVry, the University of Phoenix, or Purdue Global.\n  Many colleges and universities have been around for so long, it\u2019s easy to see them as the most stable of institutions. But there\u2019s a volatility inherent to serving a public mission while competing in a private market. Most college administrators and professors I know are genuinely committed to students and scholarship. They also have bills to pay and expensive things they want to buy.\n The master\u2019s degree market has been destabilized by several factors that converged around the same time. Unlimited federal borrowing for graduate school came in 2005. The economy crashed three years later, followed shortly by the crest of the millennial enrollment wave. Meanwhile, advances in online pedagogy and internet technologies made it possible to create fully online programs that were good enough to stand behind \u2014 and sell to anyone in the world.\n Master\u2019s degrees are also the credentials least bound by historical norms, government regulation, or, in many cases, professional bodies. Ph.D.s are controlled by the faculty. Bachelor\u2019s degrees are hard-set in form and function and colleges have to publicly report their admissions selectivity and incoming test scores. They\u2019re also subject to strict federal borrowing limits.\n  But while some master\u2019s degrees are wired into professional licensure or well-established labor market standards, many others aren\u2019t. That\u2019s the soft part of the system that colleges have learned to exploit. Public universities at least have to get state or system approval for new programs. Nonprofits can essentially conjure up a master\u2019s degree in anything, charge whatever they like, and be exempt from government rules that target for-profit colleges.\n Nonprofits can conjure up a master\u2019s degree in anything, charge whatever they like, and be exempt from government rules that target for-profit colleges.\n All of this might continue to run smoothly, immune from the occasional news investigation and cranky columnist, except for one thing: Those graduate students loading up on federal debt are increasingly paying their loans back using income-based repayment plans. That puts them on track to have their loans forgiven after 10 or 20 years, depending on their career, and  that means the bill for all these dubious master\u2019s programs will ultimately fall on the federal taxpayer.\n Two policy responses are likely. First, an end to unlimited borrowing and loan forgiveness for graduate school, which would hit the virtuous and the guilty alike. Students enrolled in expensive programs would have to borrow from the private market, most likely on worse terms than federal loans. Access to graduate school would diminish, but so would students\u2019 ability to make poor financial decisions. Without a blank check from the bank of Uncle Sam, grad schools might take tuition increases off autopilot.\n Second, an expansion of the income- and debt-based regulations that the Obama administration originally applied to for-profit colleges, and which the Biden administration is working to revive. Most master\u2019s programs are, for all intents and purposes, for-profit, regardless of who technically runs them. Regulations that disqualify programs with high debt and low earnings from receiving federal aid would force universities to reappraise master\u2019s degrees that frequently leave graduates in dire straits.\n The master\u2019s degree party hasn\u2019t ended yet. But the more universities put their short-term financial interests above student well-being, the sooner it will.", "posttime": "2021-08-07 22:56:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7855\u58eb\u5b66\u4f4d,master,\u5927\u5b66", "title": "\u4f1f\u5927\u7684\u7855\u58eb\u5b66\u4f4d\u8bc8\u9a97", "title_en": "The Great Master\u2019s-Degree Swindle", "transed": 1, "url": "https://www.chronicle.com/article/the-great-masters-degree-swindle", "via": "", "real_tags": ["\u7855\u58eb\u5b66\u4f4d", "master", "\u5927\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "a5bfb21c098f70b0acc08469ba4370e2.png", "infoid": 1071978, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5b87\u822a\u5c40\u5728\u8f7d\u4eba\u7740\u9646\u7cfb\u7edf (HLS) \u8ba1\u5212\u4e2d\u9009\u62e9 SpaceX \u7684\u661f\u9645\u98de\u8239\uff0c\u8fd9\u5bf9\u5404\u5730\u7684\u592a\u7a7a\u8ff7\u6765\u8bf4\u65e2\u4ee4\u4eba\u60ca\u8bb6\u53c8\u4ee4\u4eba\u5174\u594b\u3002\u4e4b\u524d\u6211\u66fe\u5199\u8fc7 Starship \u96c4\u5fc3\u52c3\u52c3\u7684\u65b9\u6cd5\u5982\u4f55\u6539\u53d8 Artemis \u8ba1\u5212\uff0c\u7279\u522b\u662f\u56e0\u4e3a Starship \u8fc7\u591a\u7684\u8d27\u7269\u6709\u6548\u8f7d\u8377\u80fd\u529b\u521b\u9020\u4e86\u8bb8\u591a\u673a\u4f1a\uff0c\u800c\u8fd9\u4e9b\u673a\u4f1a\u4ee5\u524d\u56e0\u6708\u7403\u8d28\u91cf\u9884\u7b97\u6781\u5176\u7a00\u8584\u7684\u4e25\u9177\u73b0\u5b9e\u800c\u53d7\u5230\u9650\u5236\u3002\u6839\u636e\u7c97\u7565\u7684\u7ecf\u9a8c\uff0c\u6708\u7403\u8fd0\u8f93\u7684\u4f20\u7edf\u65b9\u6cd5\u4f7f\u8d27\u7269\u6210\u672c\u9ad8\u8fbe 1 \u4ebf\u7f8e\u5143/\u5428\uff0c\u800c Starship \u5e94\u8be5\u80fd\u591f\u4f4e\u81f3 100 \u4e07\u7f8e\u5143/\u5428\u800c\u6ca1\u6709\u4efb\u4f55\u5947\u8ff9\uff0c\u751a\u81f3\u53ef\u80fd\u4f4e\u81f3 10 \u4e07\u7f8e\u5143/\u5428\u957f\u671f\u3002\u8fd0\u8f93\u6210\u672c\u4fbf\u5b9c 100-1000 \u500d\u662f\u4e00\u79cd\u521b\u9020\u53ef\u80fd\u6027\u7684\u7269\u6d41\u6539\u8fdb\uff0c\u6700\u8fd1\u6211\u7684\u5927\u90e8\u5206 Twitter \u63d0\u8981\u90fd\u5145\u6ee1\u4e86\u63a5\u53d7\u8fd9\u4e00\u4e8b\u5b9e\u7684\u987d\u56fa\u7684\u592a\u7a7a\u4e66\u5446\u5b50\u3002\u5f53\u7136\uff0c\u5982\u679c Starship \u6210\u529f\u4e86\uff0c\u90a3\u4e48\u4e0d\u4e45\u4e4b\u540e\u5176\u4ed6\u516c\u53f8\u548c\u56fd\u5bb6\u5c31\u4f1a\u590d\u5236\u5b83\u7684\u6210\u529f\u2014\u2014\u5b83\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u73b0\u5728\u60f3\u5230 Starship \u65f6\uff0c\u6211\u4eec\u4f1a\u60f3\u5230 SpaceX \u7684\u539f\u578b\u5728\u5fb7\u514b\u8428\u65af\u5dde\u5357\u90e8\u7684\u6d77\u6ee9\u4e0a\u5f00\u8f9f\u9053\u8def\uff0c\u4f46\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u5176\u89c6\u4e3a\u4efb\u4f55\u5927\u578b\u3001\u96c4\u5fc3\u52c3\u52c3\u3001\u5b8c\u5168\u53ef\u91cd\u590d\u4f7f\u7528\u3001\u6613\u4e8e\u5236\u9020\u4e14\u6700\u91cd\u8981\u7684\u662f\u4fbf\u5b9c\u7684\u53d1\u5c04\u7cfb\u7edf.\u5f53\u7136\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4eec\u4ece SpaceX \u90a3\u91cc\u5f97\u5230\u4e86\u8fd9\u4e9b\u53ef\u7231\u7684\u6e32\u67d3\u56fe\uff0c\u5c55\u793a\u4e86\u6708\u7403\u57fa\u5730\u7684\u7269\u7406\u5916\u89c2\uff0c\u4f46\u662f\u4e00\u65e6\u51cf\u53bb\u79d1\u5e7b\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u5269\u4e0b\u57fa\u7840\u77e5\u8bc6\u4e86\u3002\u4e00\u5806\u88ab\u6ce5\u571f\u8986\u76d6\u7684\u52a0\u538b\u7a7a\u95f4\u3002\u542f\u7528 Starship \u7684 Lunar \u57fa\u5730\u4e0d\u50cf\u201cFor All Mankind\u201d\u7b2c 1 \u5b63\u4e2d\u7684 Jamestown Base \u90a3\u6837\u4ee4\u4eba\u6cae\u4e27\u7684\u5355\u95f4\u91d1\u67aa\u9c7c\u7f50\u5934\u3002\u6bd5\u7adf\uff0c\u4e00\u8258\u661f\u9645\u98de\u8239\u53ef\u4ee5\u6bd4\u6574\u4e2a\u56fd\u9645\u7a7a\u95f4\u7ad9\u548c\u5927\u7ea6 215 \u5428\u7684\u8d27\u7269\u5177\u6709\u66f4\u5927\u7684\u53ef\u52a0\u538b\u4f53\u79ef\u3002\u76f8\u53cd\uff0c\u6708\u7403\u57fa\u5730\u7684\u5916\u89c2\u548c\u611f\u89c9\u66f4\u50cf\u662f\u5357\u6781\u6d32\u7684\u9ea6\u514b\u9ed8\u591a\u201c\u9ea6\u514b\u6566\u201d\u7ad9\uff0c\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u914d\u5907\u81ea\u52a8\u53d6\u6b3e\u673a\u7684\u5357\u6781\u7ad9\u3002\n\u8fd9\u6837\u7684\u57fa\u5730\u5c06\u5305\u542b\u5145\u8db3\u7684\u5c45\u4f4f\u7a7a\u95f4\uff0c\u4f7f\u4eba\u4eec\u80fd\u591f\u5728\u4e0d\u5c40\u4fc3\u7684\u60c5\u51b5\u4e0b\u5c45\u4f4f\uff0c\u8fd8\u6709\u4e13\u95e8\u7684\u7761\u7720\u3001\u996e\u98df\u3001\u5de5\u4f5c\u3001\u5a31\u4e50\u3001\u7269\u6d41\u3001\u4ea4\u901a\u7b49\u8bbe\u65bd\u3002 \u4e0e\u706b\u661f\u57ce\u5e02\u4e0d\u540c\uff0c\u5b83\u4e0d\u4e00\u5b9a\u56f4\u7ed5\u7740\u5927\u80c6\u7684\u76ee\u6807\u800c\u5b9a\u4f4d\u672c\u5730\u590d\u5236\u4e00\u4e2a\u5b8c\u6574\u7684\u5de5\u4e1a\u5806\u6808\uff0c\u4f46\u5b83\u5e94\u8be5\u80fd\u591f\u5728\u4efb\u4f55\u65f6\u5019\u8212\u9002\u5730\u5bb9\u7eb3\u6765\u81ea\u5730\u7403\u4e0a\u4efb\u4f55\u56fd\u5bb6\u7684\u4e00\u5343\u591a\u540d\u5b87\u822a\u5458\u3002\u5c45\u4f4f\u5730\u5fc5\u7136\u4f1a\u52a0\u538b\uff0c\u8fd9\u610f\u5473\u7740\u6700\u6709\u53ef\u80fd\u662f\u62f1\u9876\u548c\u5706\u67f1\u4f53\uff0c\u51e0\u4e4e\u6ca1\u6709\u5c16\u89d2\u3002\u5b83\u4eec\u8fd8\u5c06\u88ab\u4e00\u5c42\u6708\u7403\u6c61\u57a2\u8986\u76d6\uff0c\u4ee5\u9632\u6b62\u5fae\u6d41\u661f\u4f53\u3001\u6e29\u5ea6\u6ce2\u52a8\u548c\u5b87\u5b99\u8f90\u5c04\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u81ea\u7136\u5149\u8fd8\u662f\u6709\u529e\u6cd5\u8fdb\u5165\u7ed3\u6784\u7684\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u5728\u6708\u7403\u5357\u6781\uff0c\u592a\u9633\u6c38\u8fdc\u4e0d\u4f1a\u9ad8\u4e8e\uff08\u6216\u4f4e\u4e8e\uff09\u5730\u5e73\u7ebf\u51e0\u5ea6\u3002\u5728\u6708\u7403\u91cd\u529b\uff08~0.16 g\uff09\u4e2d\uff0c\u5927\u7ea6\u9700\u8981 9 \u7c73\u7684\u6708\u7403\u6c61\u57a2\u6765\u5bf9\u6297 0.5 bar \u7684\u5de5\u4f5c\u5927\u6c14\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u67d0\u79cd\u62c9\u4f38\u538b\u529b\u7a33\u5b9a\u7ed3\u6784\u6765\u5c01\u95ed\u5927\u4f53\u79ef\uff0c\u5c3d\u7ba1\u6ca1\u6709\u900f\u660e\u7684\u201c\u5f00\u653e\u5929\u7a7a\u201d \u201d\u706b\u661f\u7a00\u8584\u7684\u5927\u6c14\u5c42\u5141\u8bb8\u3002\u4f46\u662f\u8db3\u591f\u7684\u67b6\u6784\u63a8\u6d4b\uff08\u73b0\u5728\uff09\uff0c\u8ba9\u6211\u4eec\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u6218\u6597\u83b7\u80dc\u6216\u5931\u8d25\u7684\u6838\u5fc3\uff1a\u540e\u52e4\u3002\u5c24\u5176\u662f\u7535\u529b\u4f9b\u5e94\u3002\u53ef\u9760\u7684\u7535\u529b\u6765\u6e90\u4e5f\u662f\u5357\u6781\u7ad9\u9762\u4e34\u7684\u6311\u6218\uff0c\u5357\u6781\u7ad9\u4e00\u822c\u4f7f\u7528\u67f4\u6cb9\u53d1\u7535\u673a\uff0c\u5076\u5c14\u8865\u5145\u98ce\u529b\u53d1\u7535\u3002\u5357\u6781\u6d32\u662f\u4e00\u4e2a\u5bd2\u51b7\u3001\u591a\u98ce\u4e14\u901a\u5e38\u975e\u5e38\u9ed1\u6697\u7684\u5730\u65b9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u7684\u59bb\u5b50\u514b\u91cc\u65af\u6c40\u5728\u963f\u8499\u68ee\u65af\u79d1\u7279\u5357\u6781\u7ad9\u8fc7\u51ac\u5f52\u6765\u65f6\uff0c\u5979\u786e\u5b9e\u95fb\u5230\u4e86\u4e00\u80a1\u6de1\u6de1\u7684\u67f4\u6cb9\u6c14\u5473\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u5c06\u67f4\u6cb9\u9001\u5230\u5357\u6781\u5e76\u975e\u6613\u4e8b\uff0c\u5728\u8fc7\u53bb\uff0c\u5b83\u662f\u7531 C-130 \u7a7a\u8fd0\u8fc7\u6765\u7684\uff0c\u5c3d\u7ba1\u6bcf\u8fd0\u9001\u4e00\u52a0\u4ed1\u6c7d\u6cb9\u5c31\u71c3\u70e7\u4e09\u52a0\u4ed1\u3002\u6700\u8fd1\uff0c\u5de8\u578b\u62d6\u62c9\u673a\u5c06\u5b83\u4ece\u9ea6\u514b\u9ed8\u591a\uff08\u901a\u5e38\u7531\u8239\u63d0\u4f9b\uff09\u62d6\u8fc7\u51b0\u9762\uff0c\u9700\u8981\u6570\u5468\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u6781\u5730\u3002\u8fd8\u662f\u6bd4\u65e9\u671f\u63a2\u9669\u5bb6\u90a3\u6837\u62d6\u7740\u96ea\u6a47\u8d70\u8def\u8981\u597d\u3002\u65e9\u5728\u53e4\u4ee3\uff0c\u9ea6\u514b\u9ed8\u591a\u751a\u81f3\u6709\u4e00\u5ea7\u6838\u7535\u7ad9\uff01\u5c3d\u7ba1\u7ecf\u8fc7 8 \u5e74\u7684\u96f6\u661f\u8fd0\u884c\uff0c\u5f53\u65f6\u88ab\u79f0\u4e3a\u201cLeaky Poo\u201d\u7684\u53cd\u5e94\u5806\u88ab\u62c6\u9664\u5e76\u8fde\u540c 9000 \u7acb\u65b9\u7c73 (!) \u53d7\u6c61\u67d3\u7684\u571f\u58e4\u4e00\u8d77\u8fd0\u56de\u7f8e\u56fd\u5927\u9646\u3002\u8fd9\u5b8c\u5168\u662f\u6838\u5fc3\u95ee\u9898\u7684\u5165\u95e8\uff1a\u4e3a\u6708\u7403\u4e0a\u4efb\u4f55\u89c4\u6a21\u7684\u7a7a\u95f4\u7ad9\u4f9b\u7535\u5e76\u975e\u6613\u4e8b\u3002\n\u592a\u7a7a\u7535\u6e90\u7684\u9996\u9009\u592a\u9633\u80fd\u5149\u4f0f\uff08PV\uff09\u9762\u677f\u53d7\u5230\u6708\u7403\u957f\u591c\u7684\u6311\u6218\u3002\u5728\u6708\u7403\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6708\u7403\u8868\u9762\u4eab\u53d7\u7740 14 \u5929\u4e0d\u95f4\u65ad\u7684\u9633\u5149\uff0c\u7136\u540e\u662f 14 \u5929\u7684\u591c\u665a\u3002\u5728\u6b64\u671f\u95f4\uff0c\u5fc5\u987b\u6709\u53e6\u4e00\u4e2a\u7535\u6e90\u53ef\u4f9b\u7535\u7ad9\u8fd0\u8425\u4f7f\u7528\uff0c\u5e76\u4e14 2 \u5468\u5185\u4e0d\u80fd\u968f\u610f\u5173\u95ed\u3002\u4e8b\u5b9e\u4e0a\uff0c\u9664\u4e86\u5927\u6c14\u8c03\u8282\u3001\u7167\u660e\u548c\u5176\u4ed6\u4e00\u767e\u4e07\u4ef6\u4e8b\u60c5\u4e4b\u5916\uff0c\u73af\u5883\u63a7\u5236 (ECLSS) \u8fd8\u5fc5\u987b\u5728\u5bd2\u51b7\u7684\u51ac\u591c\u63d0\u4f9b\u70ed\u91cf\u3002\u7531\u4e8e\u6708\u7403\u4e0a ECLSS \u7684\u9700\u6c42\uff0c\u518d\u52a0\u4e0a\u53ef\u80fd\u5927\u91cf\u53d8\u5316\u7684\u663c\u591c\u8282\u5f8b\u548c\u8f6e\u73ed\u5de5\u4f5c\uff0c\u6211\u8ba4\u4e3a\u53ef\u4ee5\u516c\u5e73\u5730\u5047\u8bbe\u6708\u7403\u4e0a\u7684\u80fd\u6e90\u9700\u6c42\u5c06\u6bd4\u5730\u7403\u4e0a\u7684\u6709\u89c4\u5f8b\u5f97\u591a\uff0c\u5730\u7403\u4e0a\u7684\u9700\u6c42\u901a\u5e38\u4f1a\u4e0b\u964d\u591c\u95f4\u7cfb\u6570\u4e3a 3 \u6216 4\u3002\u4f5c\u4e3a\u5907\u7528\u7cfb\u7edf\uff0c\u7535\u6c60\u53ef\u4ee5\u5728\u591c\u665a\u77ed\u6682\u3001\u7a7a\u6c14\u53ef\u547c\u5438\u4e14\u5927\u591a\u6570\u4eba\u90fd\u5728\u7761\u89c9\u7684\u5730\u7403\u4e0a\u5de5\u4f5c\u3002\u5728\u6708\u7403\u4e0a\uff0c\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u57fa\u672c\u8d1f\u8f7d\u9700\u6c42\uff0c\u5927\u7ea6\u9700\u8981 80 \u500d\u7684\u7535\u6c60\u3002\u867d\u7136\u7535\u6c60\u548c\u592a\u9633\u80fd\u7535\u6c60\u677f\u7684\u76f8\u5bf9\u8d28\u91cf\u5728\u5730\u7403\u4e0a\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u90fd\u56fa\u5b9a\u5728\u5177\u6709\u5927\u91cf\u9759\u6001\u5bb9\u91cf\u7684\u7ed3\u6784\u4e0a\uff0c\u4f46\u5c06\u4e00\u5806\u91cd\u578b\u7535\u6c60\u9001\u4e0a\u6708\u7403\u4f1a\u541e\u566c\u5176\u4ed6\u4e1c\u897f\u7684\u6709\u6548\u8f7d\u8377\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u53ef\u80fd\u65b9\u6cd5\u662f\u5728\u5357\u6781\uff08\u6216\u5317\u6781\uff09\u7684\u5c71\u4e0a\u5efa\u7acb\u4e00\u4e2a\u57fa\u5730\uff0c\u7531\u4e8e\u6708\u7403\u7684\u4f4e\u8f74\u5411\u503e\u659c\uff0c\u5b83\u4eab\u53d7\u6bd4\u5e73\u5747\u66f4\u591a\u7684\u592a\u9633\uff0c\u5c31\u50cf\u76f8\u90bb\u7684\u9668\u77f3\u5751\u662f\u6c38\u4e45\u9634\u5f71\u533a\uff08PSR\uff09\u5e76\u542b\u6709\u4e00\u4e9b\u51bb\u6ce5\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u201c\u6c38\u6052\u4e4b\u5149\u7684\u9ad8\u5cf0\u201d\u5e76\u4e0d\u5b8c\u5168\u662f\u6c38\u6052\u7684\u3002\u6709\u591a\u4e2a\u5c71\u5cf0\uff0c\u7279\u522b\u662f\u5728\u519c\u5386\u51ac\u5b63\uff0c\u5b83\u4eec\u5f80\u5f80\u4f1a\u76f8\u4e92\u906e\u853d\u3002\u5373\u4f7f\u662f\u6c99\u514b\u5c14\u987f\u9668\u77f3\u5751\u8fb9\u7f18\u6216\u9644\u8fd1\u7684\u9ec4\u91d1\u5730\u6bb5\u4e5f\u80fd\u5fcd\u53d7\u957f\u8fbe 7 \u5929\u7684\u591c\u665a\uff0c\u800c\u5728\u6bcf\u65e5\u5468\u671f\u4e2d\u7684\u9ed1\u6697\u65f6\u95f4\u8f83\u77ed\u3002\u8fd9\u6bd4\u975e\u6781\u5730\u6708\u7403\u533a\u57df\u4efb\u4f55\u5730\u65b9\u7684\u4e00\u822c\u60c5\u51b5\u63d0\u9ad8\u4e86 2 \u500d\uff0c\u4f46\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6311\u6218\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u592a\u7a7a\u7ea7\u592a\u9633\u80fd\u7535\u6c60\u677f\u901a\u5e38\u505a\u5f97\u975e\u5e38\u8584\uff0c\u6bcf\u5e73\u65b9\u7c73\u8f7b\u81f3 50 \u514b\u2014\u2014\u7c7b\u4f3c\u4e8e\u4e00\u5f20\u62a5\u7eb8\u3002\u5982\u679c Starship \u7684\u6574\u4e2a 200 T \u6709\u6548\u8f7d\u8377\u90fd\u88ab\u592a\u9633\u80fd\u7535\u6c60\u677f\u6d88\u8017\u6389\uff0c\u5047\u8bbe\u6548\u7387\u4e3a 20%\uff0c\u5b83\u4eec\u53ef\u4ee5\u4ea7\u751f 800 MW \u7684\u5cf0\u503c\u3002\u8fd9\u5bf9\u4e8e\u5730\u7403\u4e0a\u7684\u4e00\u4e2a\u5c0f\u57ce\u5e02\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u771f\u6b63\u597d\u7684\u9502\u79bb\u5b50\u7535\u6c60\u53ef\u4ee5\u8fbe\u5230\u5927\u7ea6 100 kWh/T\uff0c\u56e0\u6b64 200 T \u7684\u7535\u6c60\u6709\u6548\u8f7d\u8377\u5c06\u5b58\u50a8 20 MWh\u3002\u8fde\u63a5\u5230\u592a\u9633\u80fd\u7535\u6c60\u677f\u540e\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u5927\u7ea6 90 \u79d2\u5185\u5b8c\u5168\u5145\u7535\uff0c\u5e76\u4e14\u5728\u591c\u5e55\u964d\u4e34\u540e\uff0c\u4ee5\u76f8\u540c\u7684\u529f\u7387\u6d88\u8017\uff0c\u5c06\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u653e\u7535\u3002 90 \u79d2\u6bd4 7 \u5929\u5c11\u5f88\u591a\u3002\u6216\u8005\uff0c\u5982\u679c 20 MWh \u5fc5\u987b\u6301\u7eed 7 \u5929\uff0c\u90a3\u4e48\u5e73\u5747\u529f\u7387\u6d88\u8017\u5c06\u4e3a 120 kW\uff0c\u4e0e\u56fd\u9645\u7a7a\u95f4\u7ad9\u5927\u81f4\u76f8\u540c\u3002\u63d0\u4f9b\u6b64\u529f\u80fd\u6240\u9700\u7684\u9762\u677f\u4ec5\u91cd 60 \u516c\u65a4\uff0c\u8fd9\u662f\u603b\u6709\u6548\u8f7d\u8377\u7684\u56db\u820d\u4e94\u5165\u8bef\u5dee\u3002\u53ef\u4ee5\u8bf4\uff0c\u901a\u8fc7\u7535\u89e3\u6708\u7403\u6c34\uff0c\u7136\u540e\u6355\u83b7\u71c3\u6599\u7535\u6c60\u7684\u5e9f\u6c14\uff0c\u53ef\u4ee5\u5b9e\u73b0\u9694\u591c\u7535\u529b\u5b58\u50a8\u3002\u5373\u4f7f\u4f7f\u7528\u6708\u7403\u6c34\uff0c\u7535\u6c60\u3001\u51b7\u51dd\u5668\u3001\u7535\u89e3\u69fd\u3001\u7535\u529b\u7535\u5b50\u8bbe\u5907\u3001\u50a8\u7f50\u548c\u70ed\u4ea4\u6362\u5668\u7684\u8d28\u91cf\u4e5f\u4e0e\u9502\u79bb\u5b50\u7535\u6c60\u76f8\u5f53\uff0c\u800c\u5f80\u8fd4\u6548\u7387\u8981\u4f4e\u5f97\u591a\u3002\u8fd9\u751a\u81f3\u4e0d\u5305\u62ec\u5f00\u91c7\u6708\u7403\u6c34\u7684\u5927\u91cf\u5f00\u9500\uff01\u4e3a\u4e86\u8bba\u8bc1\u8d77\u89c1\uff0c\u5047\u8bbe\u4e00\u4e2a\u95ed\u73af\u6c22\u50a8\u80fd\u7cfb\u7edf\u8fbe\u5230 1 MWh/T\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u60c5\u51b5\u4f1a\u5bfc\u81f4 900 \u79d2\u6216 15 \u5206\u949f\u540e\u65ad\u7535\u3002\u8fd8\u4e0d\u52307\u5929\u3002\n\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\u5c06\u592a\u9633\u80fd\u7535\u6c60\u677f\u653e\u7f6e\u5728\u6c99\u514b\u5c14\u987f\u9668\u77f3\u5751\u8fb9\u7f18\u5468\u56f4\u8bb8\u591a\u7cbe\u5fc3\u6311\u9009\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\uff0c\u5b83\u4eec\u4e2d\u7684\u5927\u90e8\u5206\u90fd\u5728\u9633\u5149\u4e0b\u3002\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u8fd9\u964d\u4f4e\u4e86\u505c\u7535\u7684\u51e0\u7387\u3002\u4e0d\u5229\u7684\u4e00\u9762\u662f\uff0c\u5b83\u9700\u8981\u5efa\u9020\u76f8\u8ddd\u6570\u516c\u91cc\u7684\u592a\u9633\u80fd\u53d1\u7535\u573a\uff0c\u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u4e0d\u53ef\u601d\u8bae\u7684\u575a\u56fa\u3001\u5ec9\u4ef7\u4e14\u8f7b\u4fbf\u7684\u7535\u7f06\uff0c\u8fd9\u4e9b\u7535\u7f06\u4e0d\u4f1a\u56e0\u5e15\u90a2\u5b9a\u5f8b\u800c\u635f\u574f\uff0c\u5e76\u4e14\u5728\u51ac\u5929\u5230\u6765\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u3002\u6211\u8fd8\u7814\u7a76\u4e86\u5728\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u5854\u4e0a\u5b89\u88c5\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u7c7b\u4f3c\u4e8e\u65e0\u7ebf\u7535\u6845\u6746\u3002\u5b83\u4eec\u575a\u56fa\u3001\u8f7b\u4fbf\u3001\u9ad8\u5927\uff0c\u6240\u4ee5\u4e5f\u8bb8\u94dd\u5854\u90e8\u5206\u548c\u9762\u677f\u4e4b\u95f4\u5b58\u5728\u67d0\u79cd\u4ea4\u6613\uff0c\u53ef\u4ee5\u5c06\u9762\u677f\u653e\u7f6e\u5f97\u8db3\u591f\u9ad8\uff0c\u5373\u4f7f\u5728\u519c\u5386\u51ac\u5929\u7684\u6df1\u5904\u4e5f\u4e0d\u4f1a\u88ab\u906e\u853d\uff0c\u4ece\u800c\u907f\u514d\u66f4\u591a\u7684\u7535\u6c60\u5fcd\u53d7\u6708\u98df\u6240\u9700\u7684 2 \u5c0f\u65f6\u5de6\u53f3\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u907f\u514d\u4efb\u4f55\u9634\u5f71\u6240\u9700\u7684\u6700\u4f4e\u9ad8\u5ea6\u662f 2750 m\uff0c\u6bd4\u5730\u7403\u4e0a\u66fe\u7ecf\u5efa\u9020\u7684\u4efb\u4f55\u7ed3\u6784\u90fd\u8981\u9ad8\u3002\u7531\u4e8e\u6211\u8ba4\u4e3a\u4e3a\u6708\u7403\u57fa\u5730\u4f9b\u7535\u5e94\u8be5\u6ca1\u6709\u8d85\u8fc7\u4e4b\u524d\u5929\u7ebf\u9ad8\u5ea6\u8bb0\u5f55\u7684\u56db\u500d\u90a3\u4e48\u4ee4\u4eba\u5174\u594b\uff0c\u56e0\u6b64\u5fc5\u987b\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\u6708\u7403\u8868\u9762\u7684\u6e29\u5ea6\u6ce2\u52a8\u5f88\u5927\u3002\u767d\u5929\uff0c\u5b83\u53ef\u4ee5\u8fbe\u5230 127 C\uff0c\u800c\u5728\u665a\u4e0a\u5b83\u53ef\u4ee5\u4f4e\u81f3 -173 C\uff0c\u603b\u6e29\u5ea6\u8303\u56f4\u4e3a 300 C\u3002\u5728 PSR \u4e2d\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u66f4\u51b7\uff0c\u4f4e\u81f3 -185 C\u3002\u5728\u6708\u7403\u5357\u6781\u533a\u57df\uff0c\u4f4d\u4e8e\u9634\u5f71\u533a\u57df\uff08\u751a\u81f3\u4eba\u5de5\u9634\u5f71\u533a\u57df\uff0c\u4f8b\u5982\u5728 MLI \u5305\u56f4\u7684\u5751\u4e2d\uff09\u7684\u6563\u70ed\u5668\u548c\u653e\u7f6e\u5728\u9633\u5149\u533a\u57df\u7684\u5438\u6536\u5668\u4e4b\u95f4\u7684\u70ed\u4ea4\u6362\u5668\u7cfb\u7edf\u53ef\u4ee5\u4ea7\u751f\u80fd\u91cf\uff0c\u5361\u8bfa\u6548\u7387\u63a5\u8fd1 75%\uff01\u4f7f\u5de5\u4f5c\u6d41\u4f53\u901a\u8fc7\uff08\u975e\u5e38\uff09\u5927\u7684\u51b0\u6d74\u53ef\u4ee5\u786e\u4fdd\u5728\u5438\u6536\u5668\u88ab\u906e\u853d\u7684\u9ed1\u591c\u4e2d\u50a8\u5b58\u80fd\u91cf\u3002\u4e3a\u4e86\u7ef4\u6301 1 MW \u7684\u57fa\u7ebf\u7535\u6e90\uff0c\u5927\u91cf\u7684\u6c34\u53ef\u4ee5\u8f6c\u5316\u4e3a\u51b0\uff0c\u4ece\u805a\u53d8\u6f5c\u70ed\u4e2d\u4ea7\u751f 2200 kJ/kg\u3002\u5c06\u6c34\u9884\u70ed\u81f3\u63a5\u8fd1\u6cb8\u817e\u6216\u5c06\u51b0\u51b7\u5374\u81f3\u8f83\u4f4e\u6e29\u5ea6\u51e0\u4e4e\u6ca1\u6709\u8fb9\u9645\u6548\u76ca\u3002\u6240\u9700\u7684\u603b\u4f53\u79ef\u7ea6\u4e3a 12,500 \u5428\uff0c\u6216 5 \u4e2a\u5965\u6797\u5339\u514b\u6e38\u6cf3\u6c60\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c*\u4ec5* 2000 \u5428\u7535\u6c60\u5373\u53ef\u5b8c\u6210\u76f8\u540c\u7684\u5de5\u4f5c\uff0c\u6216\u8005\u4ec5\u9700\u8981 10 \u6b21\u4e13\u95e8\u7684 Starship \u98de\u884c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5927\u91cf\u3001\u6613\u4e8e\u83b7\u53d6\u7684\u5f53\u5730\u91c7\u8d2d\u6c34\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u62e5\u6709 10,000 T \u7684\u70ed\u8d28\u91cf\u59cb\u7ec8\u4e0d\u662f\u4e00\u4e2a\u574f\u4e3b\u610f\u3002\n\u5728 100 K \u548c 400 K \u4e4b\u95f4\u8fd0\u884c\u7684\u51b7\u5374\u5242\u56de\u8def\u9700\u8981\u8bf8\u5982\u52a0\u538b\u8d85\u4e34\u754c\u4e59\u70f7\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u91cd\u529b\u4f9b\u70ed\u70ed\u7ba1\u4f1a\u98a0\u5012\u8fc7\u6765\u3002\u6211\u5bf9\u5236\u51b7\u5242\u4e86\u89e3\u4e0d\u591a\uff0c\u4f46\u4ee5\u4e59\u70f7\u4e3a\u4f8b\uff0c\u5b83\u7684\u70ed\u5bb9\u91cf\u4e3a 2.28 kJ/kg K\uff0c\u6216\u8005\u5728 300 K \u6e29\u5ea6\u53d8\u5316\u8303\u56f4\u5185\u4e3a 684 kJ/kg\u3002\u5728 75% \u7684\u5361\u8bfa\u6548\u7387\u4e0b\uff0c\u51b7\u5374\u5242\u56de\u8def\u9700\u8981\u4ee5 2 kg/s \u7684\u901f\u5ea6\u79fb\u52a8\u624d\u80fd\u4ea7\u751f 1 MW \u7684\u529f\u7387\u3002\u5bf9\u4e8e 16 \u5398\u7c73\uff086.5 \u82f1\u5bf8\uff09\u76f4\u5f84\u7684\u57cb\u5730\u7ba1\u9053\u548c 1 m/s \u7684\u6d41\u901f\uff0c\u6d41\u4f53\u5fc5\u987b\u79fb\u52a8\u7ea6 5 \u516c\u91cc\u624d\u80fd\u5728\u9634\u51c9\u548c\u5927\u90e8\u5206\u9633\u5149\u5145\u8db3\u7684\u533a\u57df\u4e4b\u95f4\u8fc7\u6e21\uff0c\u603b\u957f\u5ea6\u4e3a 10 \u516c\u91cc\uff0c\u603b\u6d41\u4f53\u4f53\u79ef\u4e3a 200 \u7acb\u65b9\u7c73\uff0c\u6216\u5927\u7ea6 200 \u5428\uff0c\u4ec5\u7528\u4e8e\u51b7\u5374\u5242\u3002 \uff08\u6216\u8005\u5982\u679c\u53ef\u4ee5\u5728\u66f4\u65b9\u4fbf\u7684\u4f4d\u7f6e\u6784\u5efa\u4eba\u5de5 PSR\uff0c\u5219\u66f4\u5c11\uff09\u3002 Poiseuille \u5b9a\u5f8b\u53ef\u4ee5\u4f30\u7b97\u51fa\u8be5\u70b9\u8bbe\u8ba1\u7684\u603b\u6cf5\u9001\u529f\u7387\u7ea6\u4e3a 25 W\u3002\u592a\u9633\u80fd\u52a0\u70ed\u5f88\u597d\uff0c\u4f46\u5982\u679c\u6709\u4e00\u79cd\u66f4\u53ef\u9760\u7684\u65b9\u6cd5\u6765\u4e3a PSR \u4e2d\u7684\u6563\u70ed\u5668\u63d0\u4f9b\u70ed\u6e90\u5462\uff1f\u67d0\u79cd\u53ea\u6563\u53d1\u70ed\u80fd\u7684\u795e\u5947\u91d1\u5c5e\uff1f\u8fd8\u6709\u4e2d\u5b50\u6d41\u3002\u4e00\u4e2a\u6309\u6bd4\u4f8b\u653e\u5927\u7684\uff08\u6216\u591a\u4e2a\uff09 Kilopower \u53cd\u5e94\u5806\u53ef\u4ee5\u63d0\u4f9b 1 MW \u7684\u57fa\u7ebf\u529f\u7387\uff0c\u603b\u8d28\u91cf\u5c0f\u4e8e 150 T\uff0c\u5305\u62ec 4 T \u7684\u94c0\u3002\u7ec4\u88c5\u5728\u4efb\u4f55\u65b9\u4fbf\u7684 PSR \u4e2d\uff0c\u6838\u53cd\u5e94\u5806\u53ef\u4ee5\u65e0\u9650\u671f\u5730\u4f9b\u7535\uff0c\u65e0\u8bba\u6708\u76f8\u5982\u4f55\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u5728\u8fdc\u79bb\u6781\u5730\u5730\u533a\u4f7f\u7528\uff0c\u5b83\u4eec\u53ef\u80fd\u65e0\u6cd5\u5728\u767d\u5929\u63d0\u4f9b\u5927\u91cf\u7535\u529b\uff0c\u56e0\u4e3a\u5728\u9633\u5149\u76f4\u5c04\u4e0b\u96be\u4ee5\u6563\u70ed\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u592a\u9633\u4e5f\u662f\u4e00\u4e2a\u6838\u53cd\u5e94\u5806\uff0c\u5b83\u66f4\u5927\u66f4\u70ed\u3002\u4e0e\u6708\u7403\u6c34\u4e0d\u540c\u7684\u662f\uff0c\u63d0\u70bc\u6708\u7403\u94c0\u53ef\u80fd\u6bd4\u83b7\u5f97\u53d1\u5c04\u8bb8\u53ef\u8bc1\u66f4\u5bb9\u6613\u3002\u6211\u5c06\u5728\u8fd9\u91cc\u8003\u8651\u7684\u6700\u540e\u4e00\u4e2a\u75af\u72c2\u60f3\u6cd5\u662f\u592a\u7a7a\u592a\u9633\u80fd\u6bd4\u55bb\u7684\u53d8\u4f53\u3002\u6211\u5df2\u7ecf\u4e0d\u6b62\u4e00\u6b21\u5199\u8fc7\u8fd9\u4e2a\u60f3\u6cd5\u662f\u591a\u4e48\u611a\u8822\uff0c\u4f46\u5b83\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u53ef\u80fd\u6700\u7ec8\u6210\u4e3a\u73b0\u5b9e\u7684\u6982\u5ff5\uff1a\u8fdc\u7a0b\u6ce2\u675f\u5fae\u6ce2\u529f\u7387\u3002\u5c31\u50cf\u6c38\u6052\u4e4b\u5149\u7684\u9ad8\u5cf0\u4e00\u6837\uff0c\u6708\u7403\u8868\u9762\u6709\u8bb8\u591a\u5730\u65b9\uff0c\u5305\u62ec\u9760\u8fd1\u6781\u5730\u7684\u5730\u65b9\uff0c\u603b\u662f\u80fd\u770b\u5230\u5730\u7403\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6708\u7403\u7ec8\u7ed3\u8005\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5730\u7403\u4f3c\u4e4e\u6bcf\u9694\u51e0\u5468\u5c31\u4f1a\u5347\u8d77\u548c\u843d\u4e0b\u3002\u653e\u7f6e\u5728\u8fd9\u91cc\u7684\u5fae\u6ce2\u5929\u7ebf\u53ef\u4ee5\u63a5\u6536\u4ece\u81f3\u5c11\u4e09\u4e2a\u7ad9\u4e4b\u4e00\u4ece\u5730\u7403\u8868\u9762\u53d1\u5c04\u7684\u529f\u7387\uff0c\u8fd9\u6837\u4e00\u4e2a\u7ad9\u603b\u662f\u5728\u89c6\u91ce\u4e2d\u3002 1 MW \u57fa\u7ebf\u53ef\u4ee5\u4ee5 100 W/m^2 \u7684\u529f\u7387\u5bc6\u5ea6\u5b89\u5168\u4f20\u8f93\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u65e6\u8003\u8651\u5230\u5149\u675f\u635f\u8017\u548c\u8f6c\u6362\u635f\u8017\uff0c\u63a5\u6536\u533a\u57df\u7684\u5bbd\u5ea6\u7ea6\u4e3a 200 m\u3002\u8981\u83b7\u5f97\u6765\u81ea\u5730\u7403\u7684\u7a84\u6ce2\u675f\uff081/2000000 rad\uff09\uff0c\u9700\u8981\u4e00\u4e2a\u76f8\u63a7\u9635\uff0c\u5176\u95f4\u9694\u8981\u5927\u5f97\u591a\uff0c\u81f3\u5c11 200 \u516c\u91cc\uff0c\u9891\u7387\u4e3a 5 GHz\uff086 \u5398\u7c73\uff09\u3002\u76f8\u63a7\u9635\u7684\u6bcf\u4e2a\u5143\u4ef6\u90fd\u662f\u4e00\u4e2a\u9ad8\u529f\u7387\u9640\u87ba\u4eea\uff0c\u5e26\u6709\u4e00\u4e2a\u53ef\u64cd\u7eb5\u7684\u9ad8\u589e\u76ca\u5929\u7ebf\uff0c\u76f8\u4f4d\u9501\u5b9a\u5230\u4ece\u6708\u7403\u53d1\u5c04\u7684\u8f7d\u6ce2\u4e0a\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u5305\u62ec\u6708\u7403\u8868\u9762\u57fa\u7840\u8bbe\u65bd\u7684\u4f4e\u6210\u672c\u53ca\u5176\u76f8\u5bf9\u8f83\u4f4e\u7684\u590d\u6742\u6027\u7f29\u653e\u3002\u589e\u52a0\u529f\u7387\u9700\u8981\u5411\u5730\u7403\u4e0a\u7684\u6bcf\u4e2a\u53d1\u5c04\u7ad9\u70b9\u6dfb\u52a0\u66f4\u591a\u7684\u9640\u87ba\u4eea\uff0c\u8fd9\u6bd4\u5728\u5bd2\u51b7\u7684\u5730\u65b9\u8c03\u8bd5\u65b0\u7684\u6838\u7535\u7ad9\u8981\u7b80\u5355\u5f97\u591a\uff0c\u4ee5\u81f3\u4e8e\u7528\u4e8e\u673a\u5668\u4eba\u7684\u4f20\u7edf\u91d1\u5c5e\u53d8\u8106\u3002\u4e3b\u8981\u7f3a\u70b9\u662f\u8fd9\u79cd\u9635\u5217\u4e5f\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u53cd\u536b\u661f\u6b66\u5668\uff0c\u53ef\u80fd\u4f1a\u5f15\u8d77\u6269\u6563\u95ee\u9898\u3002 Starship \u5f00\u542f\u4e86\u5efa\u9020\u4e00\u4e2a\u5927\u578b\u3001\u6c38\u4e45\u5360\u636e\u7684\u6708\u7403\u57fa\u5730\u7684\u53ef\u80fd\u6027\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u51fa\u4e4e\u610f\u6599\u4f46\u6700\u7ec8\u4ee4\u4eba\u6109\u5feb\u7684\u6311\u6218\uff0c\u5373\u786e\u4fdd\u57fa\u5730\u83b7\u5f97\u8db3\u591f\u7684\u7535\u529b\u4ee5\u8fd0\u884c\u5176\u7cfb\u7edf\uff0c\u6beb\u65e0\u7591\u95ee\u3002\u4f60\u4f1a\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff1f", "note_en": "NASA\u2019s selection of SpaceX\u2019s Starship within the Human Lander System (HLS) program was both surprising and exciting for space nerds all over.\n Previously I have written about h ow Starship\u2019s ambitious approach could transform the Artemis Program, particularly since  Starship\u2019s excessive cargo payload capacity creates a lot of opportunities that were previously curtailed by the harsh reality of razor thin Lunar mass budgets.\n As a rough rule of thumb, conventional approaches to Lunar transportation put cargo costs at upwards of $100m/T, while Starship should be able to get as low as $1m/T without any miracles, and perhaps as low as $100k/T long term. 100-1000 times cheaper transport costs is the sort of logistics improvement that creates possibilities, and much of my Twitter feed recently has been full of die hard space nerds coming to terms with this fact.\n Of course, if Starship works it won\u2019t be long until other companies and countries replicate its success \u2013 there\u2019s nothing magical about it. So when we think of Starship right now we think of SpaceX\u2019s prototypes blazing a trail on a south Texas beach, but long term we should think of it as any launch system that is big, ambitious, fully reusable, readily manufacturable, and above all cheap.\n   Of course we\u2019ve had these lovely renders from SpaceX over the last few years showing what a Moon base could physically look like but once the sci-fi elements are subtracted we\u2019re left with the basics. A bunch of pressurized spaces covered in dirt.\n   A Starship-enabled Lunar base is not some dismal single room tuna can like Jamestown Base from Season 1 of \u201cFor All Mankind\u201d.\n  After all, a single Starship could arrive with more pressurizable volume than the entire ISS and ~215 T of cargo. Instead, a Lunar base could look and feel more like McMurdo \u201cMactown\u201d Station in Antarctica, the only Antarctic station with a ATM machine.\n  Such a base would contain plenty of habitation volume to enable occupation without being cramped, dedicated facilities for sleeping, eating, working, and playing, logistics, transport, etc. Unlike a Mars city, it wouldn\u2019t necessarily be oriented around the audacious goal of locally replicating a complete industrial stack, but it should be capable of comfortably housing more than a thousand astronauts at any one time, from any nation on Earth.\n The habitations will necessarily be pressurized, meaning most likely vaults and cylinders with few sharp corners. They will also be covered in a layer of Moon dirt to provide protection from micrometeoroids, temperature swings, and cosmic radiation. Even so, there are ways that natural light could enter the structure, particularly because at the Lunar south pole the sun will never be more than a few degrees above (or below) the horizon.\n In Lunar gravity (~0.16 g), roughly 9 meters of Moon dirt would be needed to counter a 0.5 bar working atmosphere, so  some kind of tensile pressure-stabilized structure could be employed to enclose large volumes, albeit without the transparent \u201copen sky\u201d permitted by Mars\u2019 thin atmosphere.\n But enough of architectural speculation (for now), let\u2019s focus instead on the core of where the battle is won or lost: logistics. And in particular, electricity supply.\n A reliable source of electricity is also a challenge for the Antarctic Stations, which generally use diesel generators and occasionally supplement with wind power. Antarctica is a cold, windy, and often very dark place. Indeed, when my wife Christine returned from her winter-over at the Amundsen Scott South Pole Station she did have a slight scent of diesel. Needless to say, getting diesel to the south pole is non-trivial, and in ages past it was flown in by C-130, though three gallons was burned for every gallon delivered. More recently, giant tractors haul it from McMurdo (which is generally supplied by ship) over the ice, taking several weeks to reach the pole. Still better than walking dragging a sledge, as the early explorers did.\n Way back in the ancient times,  McMurdo even had a nuclear power plant! Though after 8 years of sporadic operation the reactor, by then dubbed \u201cLeaky Poo\u201d, was dismantled and shipped back to the continental US along with 9000 cubic meters (!) of contaminated soil.\n This is all a primer for the core problem: powering a station of any size on the Moon is non-trivial.\n The first choice for space power, solar photovoltaic (PV) panels, are challenged by the Moon\u2019s long night. Over most of the Moon, the surface enjoys 14 days of uninterrupted sunlight followed by 14 days of night. During that time, another power source must be available to power station operations that can\u2019t be arbitrarily shut off for 2 weeks. Indeed, environmental control (ECLSS) will have to provide heat during the cold winter night, in addition to atmospheric regulation, lighting, and a million other things. Due to the demands of ECLSS on the Moon, combined with a likely profusion of varying circadian cycles and shift work, I think it\u2019s fair to assume that energy demand on the Moon will be much more regular than on Earth, where demand typically plunges by a factor of 3 or 4 at night.\n As a back up system, batteries can work on Earth where nights are short, the air is breathable, and most people are asleep. On the Moon, for any given baseload demand, about 80 times as many batteries would be needed. And while the relative mass of batteries and solar panels doesn\u2019t matter much on Earth where both are typically fixed to structures with copious static capacity, getting a bunch of heavy batteries to the Moon eats into payloads for other things.\n One possible way around this problem is to build a base on a mountain at the South (or North) Pole, which due to the Moon\u2019s low axial tilt enjoy much more sun than average, just as the adjacent craters are permanently shadowed regions (PSR) and  contain some frozen mud. These \u201c peaks of eternal light\u201d are not quite eternal, however. There are multiple peaks and, particularly during the Lunar winter, they tend to eclipse each other. Even the prime locations on or near the rim of Shackleton Crater endure nights as long as 7 days with shorter periods of darkness during the daily cycle. This is a factor of 2 improvement over the generic case anywhere in the non-polar Lunar regions, but it\u2019s still a huge challenge.\n To put this into concrete terms, space-rated solar panels are routinely made incredibly thin and as light as 50 grams per square meter \u2013 similar to a sheet of newspaper. If the entire 200 T payload of a Starship was consumed with solar panels, they could produce a peak of 800 MW, assuming 20% efficiency. This is enough power for a small city on Earth.\n In contrast, really good lithium-ion batteries can achieve about 100 kWh/T, so a 200 T payload of batteries would store 20 MWh. Attached to the solar panels they could charge completely in about 90 seconds, and after night falls, at the same power draw, would discharge in the same period. 90 seconds is a lot less than 7 days.\n Alternatively, if 20 MWh had to last for 7 days, then average power draw would be 120 kW, about the same as the ISS. The panels necessary to provide this would weigh just 60 kg, a rounding error on the total payload.\n Arguably overnight power storage could be accomplished by electrolysing Lunar water, then capturing the exhaust from fuel cells. Even using Lunar water, the mass of the cells, condensers, electrolysers, power electronics, storage tanks, and heat exchangers is  comparable a Lithium-ion battery, while the round trip efficiency is much lower. And that\u2019s not even including the mass overhead for mining lunar water! For the sake of argument, say a closed cycle Hydrogen energy storage system achieves 1 MWh/T. In this case, the above scenario results in power loss after 900 seconds, or 15 minutes. Still a lot less than 7 days.\n One potential approach is to position solar panels in a number of carefully chosen locations around the rim of Shackleton crater and to wire them together, such that at any given time most of them are in sunlight. On the plus side this reduces the odds of a power outage. On the minus side it requires building solar farms many kilometers apart, linking them up with improbably robust, cheap, and light electrical cable that won\u2019t break down due to  Paschen\u2019s Law, and doing it all before the winter arrives.\n I also looked into mounting solar panels on a very tall tower, similar to a radio mast. These are strong, light, and tall, so perhaps there was some trade between aluminium tower sections and panels that could put the panels high enough that they\u2019d never be shaded, even in the depths of Lunar winter, and thus avoid more batteries than the 2 hours or so necessary to endure a Lunar eclipse.\n   Unfortunately, it turns out that the minimum altitude necessary to avoid any shading is 2750 m, rather taller than any structure ever built on Earth.\n  Since I believe powering a Lunar base should be less exciting than exceeding previous antenna height records by a factor of four, there must be a better way.\n The lunar surface is subjected to large temperature fluctuations. During the day, it can reach 127 C while at night it can plunge as low as -173 C, a total range of 300 C. In the PSRs it can be even colder, as low as -185 C.\n In the lunar south pole region, a heat exchanger system between radiators positioned in shaded regions (even artificially shaded regions, such as in a pit surrounded by MLI) and absorbers placed in sunny regions could produce energy with a  Carnot efficiency approaching 75%! Running the working fluid through a (very) large ice bath could ensure energy storage through the dark nights when the absorbers would be shaded.\n To maintain a baseline power supply of 1 MW, a large supply of water could be converted to ice, generating 2200 kJ/kg from the  latent heat of fusion. There is little marginal benefit to preheating the water to near boiling or chilling the ice to lower temperatures. The total volume required is about 12,500 T, or 5 Olympic swimming pools. By comparison, *only* 2000 T of batteries would be required to do the same job, or a mere 10 dedicated Starship flights. So locally procured water would need to be found in vast, easy to access quantities. Still, having 10,000 T of thermal mass floating around is never a bad idea.\n The coolant loop, operating between 100 K and 400 K would need something like pressurized supercritical ethane. Unfortunately a gravity fed heat pipe would be upside down in this case. I don\u2019t know much about refrigerants, but using ethane as an example, it has a heat capacity of 2.28 kJ/kg K, or 684 kJ/kg over the 300 K temperature variation. At 75% Carnot efficiency, the coolant loop would need to move 2 kg/s to produce 1 MW of power. With a 16 cm (6.5\u2033) diameter buried pipe and a flow rate of 1 m/s, the fluid would have to move about 5 km to transition between shaded and mostly sunny areas, for a total length of 10 km and a total fluid volume of 200 cubic meters, or roughly 200 T, just for coolant. (Or somewhat less if artificial PSRs can be constructed in a more convenient location).\n Poiseuille\u2019s Law enables an estimate of total pumping power at around 25 W for this point design.\n Solar heating is fine but what if there was a more reliable way to provide the heat source fed to radiators in the PSRs? Some kind of  magical metal that just emits thermal energy? And a stream of neutrons. A scaled up (or multiple)  Kilopower reactor could deliver 1 MW of baseline power with less than 150 T of total mass, including 4 T of Uranium. Assembled in any convenient PSR, a nuclear reactor could supply power indefinitely, regardless of lunar phase. Indeed, if used away from polar regions they may be unable to provide much power during the day, due to the difficulty of radiating heat in direct sunlight. It turns out the Sun is also a nuclear reactor and it\u2019s much bigger and hotter. And unlike Lunar water, refining Lunar uranium is probably easier than getting a launch permit for it.\n The final crazy idea I\u2019ll consider here is a variation on the space-based solar power trope.  I have written more than once about how silly this idea is, but at its core is a concept that may finally have its day: remotely beamed microwave power.\n Like peaks of eternal light, there are numerous places on the surface of the Moon, including close to polar regions, that are always in view of Earth. Indeed, anywhere on the Moon\u2019s terminator there are places where the Earth appears to rise and set every few weeks.\n  Microwave antennas positioned here could receive power beamed up from the surface of the Earth from one of at least three stations such that one is always in view.\n A 1 MW baseline could be safely transmitted at a power density of 100 W/m^2, implying a receiving area of about 200 m in width, once beam losses and conversion losses are taken into account. Achieving a beam that narrow (1/2000000 rad) from the Earth would require a phased array spaced out over a much larger area, at least 200 km at 5 Ghz (6cm). Each element of the phased array is a high power gyrotron with a steerable high gain antenna phase locked to a carrier transmitted from the Moon.\n The advantages of this approach include the low cost of the surface infrastructure on the Moon and its relatively low complexity scaling. Increasing the power requires adding more gyrotrons to each transmitting site on Earth, which is much simpler than commissioning new nuclear power plants in places so cold that conventional metals used for robots get brittle.\n The main disadvantage is that such an array is also a very effective anti-satellite weapon and could cause proliferation concerns.\n Starship opens up the possibility of building a large, permanently occupied Lunar base. With this comes the unexpected but ultimate pleasant challenge of ensuring the base is adequately supplied with the electricity it needs to run its systems, no questions asked. How would you approach this problem?", "posttime": "2021-08-07 22:56:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u5730,lunar,\u6708\u7403", "title": "\u4e3a\u6708\u7403\u57fa\u5730\u4f9b\u7535", "title_en": "Powering the Lunar Base", "transed": 1, "url": "https://caseyhandmer.wordpress.com/2021/04/25/powering-the-lunar-base/", "via": "", "real_tags": ["\u57fa\u5730", "lunar", "\u6708\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071977, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f6f\u4ef6\u6846\u67b6\u662f\u8c03\u7528\u60a8\u7684\uff08\u5e94\u7528\u7a0b\u5e8f\uff09\u4ee3\u7801\u7684\u4ee3\u7801\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5982\u4f55\u5c06\u6846\u67b6\u4e0e\u5e93\u533a\u5206\u5f00\u6765\u3002\u56fe\u4e66\u9986\u6709\u6846\u67b6\u7684\u65b9\u9762\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u7070\u8272\u533a\u57df\u3002\u6211\u7684\u670b\u53cb Christian Theune \u662f\u8fd9\u6837\u8bf4\u7684\uff1a\u6846\u67b6\u662f\u4e00\u79cd\u6587\u672c\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u586b\u8865\u7a7a\u767d\u3002\u6846\u67b6\u5b9a\u4e49\u4e86\u8bed\u6cd5\uff0c\u4f60\u5e26\u4e0a\u4e00\u4e9b\u8bcd\u3002\u6587\u5b57\u5c31\u662f\u60a8\u5e26\u5165\u5176\u4e2d\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005\u4f7f\u7528\u4e00\u4e2a\u6846\u67b6\uff0c\u4f60\u9700\u8981\u544a\u8bc9\u5b83\u4f60\u7684\u4ee3\u7801\u3002\u4f60\u9700\u8981\u544a\u8bc9\u6846\u67b6\u8c03\u7528\u4ec0\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u914d\u7f6e\u6846\u67b6\u3002\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u914d\u7f6e\u6846\u67b6\u3002\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u5176\u81ea\u8eab\u7684\u6743\u8861\u3002\u6211\u5c06\u5728\u6b64\u5904\u63cf\u8ff0\u5176\u4e2d\u4e00\u4e9b\u6846\u67b6\u914d\u7f6e\u6a21\u5f0f\uff0c\u5e76\u63d0\u4f9b\u7b80\u77ed\u793a\u4f8b\u5e76\u63d0\u53ca\u4e00\u4e9b\u6743\u8861\u3002\u8bb8\u591a\u6846\u67b6\u4f7f\u7528\u591a\u4e2a\u6a21\u5f0f\u3002\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e2a\u5217\u8868\u662f\u8be6\u5c3d\u65e0\u9057\u7684\u2014\u2014\u8fd8\u6709\u66f4\u591a\u7684\u6a21\u5f0f\u3002\u6211\u63cf\u8ff0\u7684\u6a21\u5f0f\u901a\u5e38\u4e0e\u8bed\u8a00\u65e0\u5173\uff0c\u5c3d\u7ba1\u6709\u4e9b\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u8bed\u8a00\u7279\u5f81\u3002\u5176\u4e2d\u4e00\u4e9b\u6a21\u5f0f\u5728\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u4e2d\u66f4\u6709\u610f\u4e49\u3002\u4e0e\u53e6\u4e00\u79cd\u8bed\u8a00\u76f8\u6bd4\uff0c\u6709\u4e9b\u8bed\u8a00\u66f4\u5bb9\u6613\u7528\u4e00\u79cd\u8bed\u8a00\u5b8c\u6210\u3002\u4e00\u4e9b\u8bed\u8a00\u5177\u6709\u4e30\u5bcc\u7684\u8fd0\u884c\u65f6\u81ea\u7701\u80fd\u529b\uff0c\u8fd9\u4f7f\u5f97\u67d0\u4e9b\u6a21\u5f0f\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\u5177\u6709\u5f3a\u5927\u5b8f\u529f\u80fd\u7684\u8bed\u8a00\u5c06\u4f7f\u5176\u4ed6\u6a21\u5f0f\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\u5728\u6211\u7ed9\u51fa\u793a\u4f8b\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u6211\u5c06\u4f7f\u7528 Python\u3002\u6211\u7ed9\u51fa\u4e86\u4e00\u4e9b\u62bd\u8c61\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u5e76\u5c1d\u8bd5\u63d0\u4f9b\u4e00\u4e9b\u5b9e\u9645\u793a\u4f8b\u3002\u8fd9\u4e9b\u793a\u4f8b\u4ece\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u89d2\u5ea6\u5c55\u793a\u4e86\u6846\u67b6\u3002\u8fd9\u662f\u4e00\u4e2a Form \u7c7b\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5b9e\u73b0\u4e86\u4fdd\u5b58\u8868\u5355\u65f6\u5e94\u8be5\u53d1\u751f\u7684\u4e8b\u60c5\u3002\nfrom framework import Form def my_save ( data ): ... \u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801 ... my_form = Form ( save = my_save ) \u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8d70\u5f97\u5f88\u8fdc\u3002\u51fd\u6570\u5f0f\u8bed\u8a00\u53ef\u4ee5\u3002\u5982\u679c\u60a8\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6d4f\u89c8 React\uff0c\u5b83\u914d\u7f6e\u4e86\u4e00\u5927\u5806\u79f0\u4e3a React \u7ec4\u4ef6\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4ee5\u53ca\u66f4\u591a\u79f0\u4e3a\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u56de\u8c03\u51fd\u6570\u3002\u6211\u662f\u8fd9\u79cd\u65b9\u6cd5\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u6743\u8861\u90fd\u662f\u6709\u5229\u7684\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6709\u65f6\u4f1a\u88ab\u5ffd\u7565\uff0c\u56e0\u4e3a\u4eba\u4eec\u89c9\u5f97\u4ed6\u4eec\u9700\u8981\u66f4\u590d\u6742\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u4f20\u5165\u4e00\u4e9b\u82b1\u54e8\u7684\u5bf9\u8c61\u6216\u8fdb\u884c\u7ee7\u627f\uff0c\u4f46\u6211\u8ba4\u4e3a\u56de\u8c03\u51fd\u6570\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u4f60\u9996\u5148\u8003\u8651\u7684\u3002\u51fd\u6570\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002\u5408\u7ea6\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u4e8e\u4ee3\u7801\u3002\u5b9e\u73b0\u529f\u80fd\u6240\u9700\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u7531\u6846\u67b6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u8fd9\u9650\u5236\u4e86\u4f7f\u7528\u6846\u67b6\u6240\u9700\u7684\u77e5\u8bc6\u91cf\u3002\u56de\u8c03\u51fd\u6570\u7684\u914d\u7f6e\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u662f\u975e\u5e38\u52a8\u6001\u7684\u2014\u2014\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e9b\u914d\u7f6e\u52a8\u6001\u5730\u7ec4\u88c5\u6216\u521b\u5efa\u51fd\u6570\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u5230\u6846\u67b6\u4e2d\u3002\u5e26\u6709\u56de\u8c03\u51fd\u6570\u7684\u914d\u7f6e\u5e76\u6ca1\u6709\u771f\u6b63\u7a81\u51fa\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u7f3a\u70b9\u2014\u2014\u66f4\u5bb9\u6613\u770b\u5230\u6709\u4eba\u5b50\u7c7b\u5316\u4e00\u4e2a\u57fa\u7c7b\u6216\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e76\u4e14\u8bed\u8a00\u96c6\u6210\u7684\u914d\u7f6e\u65b9\u6cd5\u53ef\u4ee5\u66f4\u7a81\u51fa\u3002\u6709\u65f6\u60a8\u60f3\u4e00\u6b21\u914d\u7f6e\u591a\u4e2a\u76f8\u5173\u529f\u80fd\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u63a5\u53e3\u7684\u5bf9\u8c61\u53ef\u80fd\u66f4\u6709\u610f\u4e49\u2014\u2014\u6211\u5c06\u5728\u4e0b\u9762\u63cf\u8ff0\u8fd9\u79cd\u6a21\u5f0f\u3002\n\u5982\u679c\u60a8\u7684\u8bed\u8a00\u652f\u6301\u51fd\u6570\u95ed\u5305\uff0c\u5b83\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u5f53\u7136\uff0c\u60a8\u7684\u8bed\u8a00\u9700\u8981\u5b9e\u9645\u652f\u6301\u60a8\u53ef\u4ee5\u4f20\u9012\u7684\u4e00\u6d41\u529f\u80fd\u2014\u2014Java \u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u90fd\u6ca1\u6709\u3002\u8be5\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u7c7b\uff0c\u60a8\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5b50\u7c7b\u5316\u3002\u60a8\u5b9e\u73b0\u4e86\u6846\u67b6\u5c06\u8c03\u7528\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u65b9\u6cd5\u3002 from framework import FormBase class MyForm (FormBase): def save ( self , data ): ... \u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904... class AccountViewSet ( viewsets . ModelViewSet ): &quot;&quot;&quot; \u4e00\u4e2a\u7528\u4e8e\u67e5\u770b\u548c\u7f16\u8f91\u5e10\u6237\u7684\u7b80\u5355\u89c6\u56fe\u96c6\u3002 &quot;&quot;&quot; \u67e5\u8be2\u96c6 = \u5e10\u6237\u3002\u5bf9\u8c61\u3002 all () serializer_class = AccountSerializer permission_classes = [ IsAccountAdminOrReadOnly ] ModelViewSet \u505a\u4e86\u5f88\u591a\u4e8b\u60c5\uff1a\u5b83\u5b9e\u73b0\u4e86\u5f88\u591a URL \u548c\u8bf7\u6c42\u65b9\u6cd5\u6765\u4e0e\u5b83\u4eec\u4ea4\u4e92\u3002\u5b83\u4e0e Django \u7684 ORM \u96c6\u6210\uff0c\u4ee5\u4fbf\u60a8\u83b7\u5f97\u53ef\u7528\u4e8e\u521b\u5efa\u548c\u66f4\u65b0\u6570\u636e\u5e93\u5bf9\u8c61\u7684 REST API\u3002\u5f53\u4f60\u91cd\u5199\u4e00\u4e2a\u65b9\u6cd5\u65f6\uff0c\u4f60\u662f\u5426\u53ef\u4ee5\u5728 self (this) \u4e0a\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5\uff1f\u662f\u5426\u6709\u7279\u5b9a\u7684\u987a\u5e8f\u5141\u8bb8\u60a8\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff1f\u5982\u679c\u57fa\u7c7b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u60a8\u9700\u8981\u77e5\u9053\u5b83\u662f\u8981\u8865\u5145\u8fd8\u662f\u91cd\u5199\uff0c\u6216\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002\n\u5982\u679c\u6253\u7b97\u5bf9\u5176\u8fdb\u884c\u8865\u5145\uff0c\u5219\u9700\u8981\u786e\u4fdd\u5728\u5b9e\u73b0\u4e2d\u7684\u8d85\u7c7b\u4e0a\u8c03\u7528\u6b64\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u53ef\u4ee5\u5b8c\u5168\u8986\u76d6\u4e00\u4e2a\u65b9\u6cd5\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u77e5\u9053\u8981\u4f7f\u7528\u54ea\u4e9b\u65b9\u6cd5\u5728\u6846\u67b6\u4e2d\u53d1\u6325\u4f5c\u7528 \u2014\u2014 \u53ef\u80fd\u662f\u5176\u4ed6\u53ef\u4ee5\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u3002\u57fa\u7c7b\u662f\u5426\u7ee7\u627f\u81ea\u5176\u4ed6\u4e5f\u5141\u8bb8\u60a8\u8986\u76d6\u65b9\u6cd5\u7684\u7c7b\uff1f\u5f53\u4f60\u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5\u65f6\uff0c\u5b83\u53ef\u4ee5\u4e0e\u8fd9\u4e9b\u5176\u4ed6\u7c7b\u4e0a\u7684\u5176\u4ed6\u65b9\u6cd5\u4ea4\u4e92\u5417\uff1f\u8bb8\u591a\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u90fd\u652f\u6301\u7ee7\u627f\u4f5c\u4e3a\u8bed\u8a00\u7279\u6027\u3002\u4f60\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5b9e\u73b0\u591a\u4e2a\u76f8\u5173\u7684\u65b9\u6cd5\u3002\u4f7f\u7528\u7ee7\u627f\u4f5c\u4e3a\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u548c\u914d\u7f6e\u6846\u67b6\u7684\u4e00\u79cd\u65b9\u5f0f\u4f3c\u4e4e\u5f88\u660e\u663e\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u5728\u6846\u67b6\u4e2d\u975e\u5e38\u666e\u904d\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u4f46\u662f\u6211\u5c3d\u91cf\u5728\u6211\u81ea\u5df1\u7684\u6846\u67b6\u4e2d\u907f\u514d\u5b83\uff0c\u5f53\u6846\u67b6\u5f3a\u8feb\u6211\u8fdb\u884c\u5b50\u7c7b\u5316\u65f6\uff0c\u6211\u7ecf\u5e38\u611f\u5230\u6cae\u4e27\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u60a8\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u5f00\u59cb\u62c5\u5fc3\u4e0a\u8ff0\u8bb8\u591a\u95ee\u9898\u3002\u5982\u679c\u4f60\u5f88\u5e78\u8fd0\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u6587\u6863\u6765\u56de\u7b54\uff0c\u5c3d\u7ba1\u7406\u89e3\u5b83\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u52aa\u529b\u3002\u4f46\u4f60\u7ecf\u5e38\u4e0d\u5f97\u4e0d\u81ea\u5df1\u731c\u6d4b\u6216\u9605\u8bfb\u4ee3\u7801\u3002\u7136\u540e\u5373\u4f7f\u6709\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u57fa\u7c7b\u548c\u5408\u7406\u7684\u53ef\u8986\u76d6\u65b9\u6cd5\uff0c\u4f60\u4ecd\u7136\u5f88\u96be\u505a\u4f60\u771f\u6b63\u9700\u8981\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u57fa\u7c7b\u7684\u5951\u7ea6\u4e0d\u9002\u5408\u4f60\u7684\u7528\u4f8b\u3002\nJava \u548c TypeScript \u7b49\u8bed\u8a00\u4e3a\u6846\u67b6\u5b9e\u73b0\u8005\u63d0\u4f9b\u4e86\u4e00\u79cd\u6307\u5bfc\u65b9\u5f0f\uff08\u79c1\u6709/\u53d7\u4fdd\u62a4/\u516c\u5171\u3001\u6700\u7ec8\uff09\u3002\u6846\u67b6\u8bbe\u8ba1\u8005\u53ef\u4ee5\u5bf9\u5141\u8bb8\u8986\u76d6\u7684\u65b9\u6cd5\u8fdb\u884c\u4e25\u683c\u9650\u5236\u3002\u8fd9\u6d88\u9664\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u6846\u67b6\u8bbe\u8ba1\u8005\u4ed8\u51fa\u4e86\u8db3\u591f\u7684\u52aa\u529b\uff0c\u8bed\u8a00\u5de5\u5177\u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u5951\u7ea6\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u8fd9\u6837\u7684 API \u5bf9\u60a8\u6765\u8bf4\u53ef\u80fd\u5f88\u590d\u6742\uff0c\u800c\u4e14\u6846\u67b6\u8bbe\u8ba1\u4eba\u5458\u4e5f\u96be\u4ee5\u7ef4\u62a4\u3002\u8bb8\u591a\u8bed\u8a00\uff0c\u4f8b\u5982 Python\u3001Ruby \u548c JavaScript\uff0c\u90fd\u6ca1\u6709\u63d0\u4f9b\u6b64\u7c7b\u6307\u5bfc\u7684\u5de5\u5177\u3002\u60a8\u53ef\u4ee5\u5bf9\u4efb\u4f55\u57fa\u7c7b\u8fdb\u884c\u5b50\u7c7b\u5316\u3002\u60a8\u53ef\u4ee5\u8986\u76d6\u4efb\u4f55\u65b9\u6cd5\u3002\u552f\u4e00\u7684\u6307\u5bfc\u662f\u6587\u6863\u3002\u60a8\u53ef\u80fd\u4f1a\u56e0\u6b64\u800c\u611f\u5230\u6709\u4e9b\u5931\u843d\u3002\u6846\u67b6\u5f80\u5f80\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u5c55\uff0c\u8ba9\u60a8\u53ef\u4ee5\u8986\u76d6\u66f4\u591a\u7c7b\u4e2d\u7684\u66f4\u591a\u65b9\u6cd5\uff0c\u4ece\u800c\u589e\u52a0\u590d\u6742\u6027\u3002\u8fd9\u79cd\u590d\u6742\u6027\u4e0d\u4f1a\u968f\u7740\u65b9\u6cd5\u7684\u6dfb\u52a0\u800c\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u4e3a\u60a8\u8fd8\u5fc5\u987b\u62c5\u5fc3\u5b83\u4eec\u7684\u4ea4\u4e92\u3002\u4e00\u4e2a\u5fc5\u987b\u5904\u7406\u8986\u76d6\u5404\u79cd\u65b9\u6cd5\u7684\u5404\u79cd\u5b50\u7c7b\u7684\u6846\u67b6\u5bf9\u5b83\u4eec\u7684\u671f\u671b\u4f1a\u964d\u4f4e\u3002\u592a\u591a\u7684\u7075\u6d3b\u6027\u4f1a\u4f7f\u6846\u67b6\u66f4\u96be\u63d0\u4f9b\u6709\u7528\u7684\u529f\u80fd\u3002\u57fa\u7c7b\u4e5f\u4e0d\u592a\u9002\u5408\u8fd0\u884c\u65f6\u52a8\u6001\u2014\u2014\u67d0\u4e9b\u8bed\u8a00\uff08\u5982 Python\uff09\u786e\u5b9e\u5141\u8bb8\u60a8\u4f7f\u7528\u81ea\u5b9a\u4e49\u65b9\u6cd5\u52a8\u6001\u751f\u6210\u5b50\u7c7b\uff0c\u4f46\u8fd9\u79cd\u4ee3\u7801\u96be\u4ee5\u7406\u89e3\u3002\u6211\u8ba4\u4e3a\u5b50\u7c7b\u5316\u7684\u7f3a\u70b9\u8d85\u8fc7\u4e86\u6846\u67b6\u5916\u90e8 API \u7684\u4f18\u70b9\u3002\u6211\u6709\u65f6\u4ecd\u7136\u5728\u5e93\u6216\u6846\u67b6\u5185\u90e8\u4f7f\u7528\u57fa\u7c7b\u2014\u2014\u57fa\u7c7b\u662f\u5728\u90a3\u91cc\u91cd\u7528\u7684\u8f7b\u91cf\u7ea7\u65b9\u5f0f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u7f3a\u70b9\u90fd\u6d88\u5931\u4e86\uff1a\u60a8\u81ea\u5df1\u63a7\u5236\u57fa\u7c7b\u5408\u540c\uff0c\u5e76\u4e14\u60a8\u53ef\u80fd\u7406\u89e3\u5b83\u3002\u6211\u6709\u65f6\u4e5f\u4f7f\u7528\u4e00\u4e2a\u7a7a\u57fa\u7c7b\u6765\u5b9a\u4e49\u63a5\u53e3\uff0c\u4f46\u8fd9\u786e\u5b9e\u662f\u6211\u63a5\u4e0b\u6765\u8981\u8ba8\u8bba\u7684\u53e6\u4e00\u79cd\u6a21\u5f0f\u3002\u8be5\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u60a8\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5b9e\u73b0\u7684\u63a5\u53e3\u3002\u60a8\u5b9e\u73b0\u4e86\u6846\u67b6\u8c03\u7528\u7684\u4e00\u79cd\u6216\u591a\u79cd\u65b9\u6cd5\u3002\nfrom framework import Form , IFormBackend class MyFormBackend ( IFormBackend ): def load ( self ): ... \u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5728\u8fd9\u91cc\u52a0\u8f7d\u6570\u636e... def save ( self , data ): ... \u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904.. .my_form = Form(MyFormBackend()) Python\u4e2d\u7684iterable/iterator\u534f\u8bae\u5c31\u662f\u4e00\u4e2a\u63a5\u53e3\u7684\u4f8b\u5b50\u3002\u5982\u679c\u4f60\u5b9e\u73b0\u5b83\uff0c\u6846\u67b6\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f Python \u8bed\u8a00\uff09\u5c06\u80fd\u591f\u7528\u5b83\u505a\u5404\u79cd\u5404\u6837\u7684\u4e8b\u60c5\u2014\u2014\u6253\u5370\u5b83\u7684\u5185\u5bb9\uff0c\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u628a\u5b83\u53cd\u8f6c\u7b49\u7b49\u3002 class RandomIterable : def __iter__ ( self ) : return self def next ( self ): if random \u3002 choice ([ &quot;go&quot; , &quot;stop&quot; ]) == &quot;stop&quot; : raise StopIteration return 1 \u8bb8\u591a\u7c7b\u578b\u8bed\u8a00\u90fd\u63d0\u4f9b\u5bf9\u63a5\u53e3\u7684\u672c\u673a\u652f\u6301\u3002\u4f46\u662f\u5982\u679c\u4f60\u7684\u8bed\u8a00\u4e0d\u8fd9\u6837\u505a\u5462\uff1f\u5728\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e2d\uff0c\u60a8\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\uff1aanyobject \u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u63a5\u53e3\u3002\u53ea\u662f\u4f60\u6ca1\u6709\u771f\u6b63\u4ece\u8bed\u8a00\u4e2d\u5f97\u5230\u5f88\u591a\u6307\u5bfc\u3002\u5982\u679c\u4f60\u60f3\u8981\u591a\u4e00\u70b9\u600e\u4e48\u529e\uff1f\u5728 Python \u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5e93 abc \u6a21\u5757\u6216 zope.interface\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 Typing \u6a21\u5757\u5e76\u5b9e\u73b0\u57fa\u7c7b\u4ee5\u53ca Python3.8\u3001PEP-544 \u534f\u8bae\u3002\u4f46\u662f\uff0c\u5047\u8bbe\u60a8\u6ca1\u6709\u6240\u6709\u8fd9\u4e9b\uff0c\u6216\u8005\u8fd8\u4e0d\u60f3\u6253\u6270\uff0c\u56e0\u4e3a\u60a8\u53ea\u662f\u5728\u8fdb\u884c\u539f\u578b\u8bbe\u8ba1\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 Python \u57fa\u7c7b\u6765\u63cf\u8ff0\u4e00\u4e2a\u63a5\u53e3\uff1a\nclass IFormBackend : def load ( self ): \u201c\u4ece\u540e\u7aef\u52a0\u8f7d\u6570\u636e\u3002\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709\u6570\u636e\u7684\u5b57\u5178\u3002\u201d raise NotImplementedError () def save ( self , data ): \u201c\u5c06\u6570\u636e\u5b57\u5178\u4fdd\u5b58\u5230\u540e\u7aef\u3002\u201d raise NotImplementedError () \u5b83\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u8fd9\u624d\u662f\u91cd\u70b9\u2014\u2014\u5b83\u53ea\u662f\u63cf\u8ff0\u4e86\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5e94\u8be5\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u60a8\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e24\u4e2a\u7b80\u5355\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u4f46\u4ec5\u6b64\u800c\u5df2\u3002\u60a8\u53ef\u80fd\u5f88\u60f3\u5728\u5176\u4e0a\u5b9e\u73b0\u6846\u67b6\u884c\u4e3a\uff0c\u4f46\u8fd9\u4f1a\u5c06\u60a8\u5e26\u5165\u57fa\u7c7b\u9886\u57df\u3002\u6743\u8861\u4e0e\u56de\u8c03\u51fd\u6570\u7684\u6743\u8861\u975e\u5e38\u76f8\u4f3c\u3002\u5982\u679c\u60a8\u60f3\u5728\u5355\u4e2a\u5305\u4e2d\u5b9a\u4e49\u76f8\u5173\u529f\u80fd\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u7528\u7684\u6a21\u5f0f\u3002\u5982\u679c\u6211\u7684\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5b9e\u73b0\u7684\u66f4\u5e7f\u6cdb\u7684\u5951\u7ea6\uff0c\u6211\u4f1a\u9009\u62e9\u63a5\u53e3\uff0c\u7279\u522b\u662f\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7ef4\u62a4\u81ea\u5df1\u7684\u5185\u90e8\u72b6\u6001\u3002\u63a5\u53e3\u7684\u4f7f\u7528\u53ef\u4ee5\u5bfc\u81f4\u5e72\u51c0\u7684\u9762\u5411\u7ec4\u5408\u7684\u8bbe\u8ba1\uff0c\u60a8\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5bf9\u8c61\u9002\u5e94\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u60a8\u53ef\u4ee5\u50cf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u8fd0\u884c\u65f6\u52a8\u6001\uff0c\u5728\u8fd9\u4e9b\u51fd\u6570\u4e2d\u60a8\u53ef\u4ee5\u7ec4\u88c5\u52a8\u6001\u5b9e\u73b0\u63a5\u53e3\u7684\u5bf9\u8c61\u3002\u8bb8\u591a\u8bed\u8a00\u63d0\u4f9b\u63a5\u53e3\u4f5c\u4e3a\u8bed\u8a00\u7279\u6027\uff0c\u4efb\u4f55\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u90fd\u53ef\u4ee5\u4f2a\u9020\u5b83\u4eec\u3002\u6216\u8005\u6709\u592a\u591a\u7684\u65b9\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6bd4\u5982 Python\u3002\n\u5f53\u60a8\u6709\u4e00\u4e2a\u6846\u67b6\u53ef\u4ee5\u8c03\u5ea6\u8303\u56f4\u5e7f\u6cdb\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u63d2\u5165\u5904\u7406\u5b83\u7684\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u65f6\uff0c\u60a8\u5c06\u8c03\u6574\u67d0\u79cd\u7c7b\u578b\u7684\u6ce8\u518c\u8868\u3002\u6ce8\u518c\u7684\u53ef\u4ee5\u662f\u56de\u8c03\u6216\u5b9e\u73b0\u63a5\u53e3\u7684\u5bf9\u8c61\u2014\u2014\u56e0\u6b64\u5b83\u5efa\u7acb\u5728\u8fd9\u4e9b\u6a21\u5f0f\u4e0a\u3002\u6846\u67b6\u53ef\u4ee5\u6709\u7279\u5b9a\u7684\u65b9\u5f0f\u6765\u914d\u7f6e\u4ed6\u4eec\u7684\u6ce8\u518c\u8868\uff0c\u8fd9\u4e9b\u6ce8\u518c\u8868\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u672c\u6a21\u5f0f\u4e4b\u4e0a\u2014\u2014\u6211\u7a0d\u540e\u4f1a\u8be6\u7ec6\u8bf4\u660e\u3002 from framework import form_save_registry def save ( data ): ... \u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801 ... # \u6211\u4eec\u914d\u7f6e\u7528\u4e8e\u540d\u4e3a&#39;my_form&#39; form_save_registry \u7684\u8868\u5355\u7684\u4fdd\u5b58\u51fd\u6570\u3002 register ( &#39;my_form&#39; , save ) URL \u8def\u7531\u5668\uff08\u4f8b\u5982 Web \u6846\u67b6\u4e2d\uff09\u4f7f\u7528\u67d0\u79cd\u7c7b\u578b\u7684\u6ce8\u518c\u8868\u3002\u8fd9\u662f Falcon Web \u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u793a\u4f8b\uff1a\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u4e24\u79cd\u6a21\u5f0f\u7ed3\u5408\u5728\u4e00\u8d77\uff1a QuoteResource \u5b9e\u73b0\u4e86\u4e00\u4e2a\uff08\u9690\u5f0f\uff09\u63a5\u53e3\uff0c\u5e76\u4e14\u60a8\u5c06\u5b83\u6ce8\u518c\u5230\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u8def\u7531\u3002\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ef\u4ee5\u4e3a\u5404\u79cd\u8def\u7531\u6ce8\u518c\u5904\u7406\u7a0b\u5e8f\uff0c\u7136\u540e\u6846\u67b6\u4f7f\u7528\u6ce8\u518c\u8868\u5c06\u8bf7\u6c42\u7684 URL \u4e0e\u8def\u7531\u5339\u914d\uff0c\u7136\u540e\u53ef\u4ee5\u5168\u90e8\u5199\u5165\u7528\u6237\u4ee3\u7801\u4ee5\u751f\u6210\u54cd\u5e94\u3002\n\u6211\u7ecf\u5e38\u4f7f\u7528\u8fd9\u79cd\u6a21\u5f0f\uff0c\u56e0\u4e3a\u5b83\u5f88\u5bb9\u6613\u5b9e\u73b0\u5e76\u4e14\u5bf9\u4e8e\u8bb8\u591a\u7528\u4f8b\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\u5b83\u6709\u4e00\u4e2a\u5c0f\u7f3a\u70b9\uff1a\u5f53\u60a8\u9605\u8bfb\u4ee3\u7801\u65f6\uff0c\u60a8\u65e0\u6cd5\u8f7b\u6613\u770b\u5230\u6b63\u5728\u53d1\u751f\u7684\u914d\u7f6e\u3002\u6709\u65f6\u6211\u4f1a\u5728\u5b83\u4e0a\u9762\u516c\u5f00\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u914d\u7f6e API\uff1a\u4e00\u4e2a DSL \u6216\u8bed\u8a00\u96c6\u6210\u7684\u6ce8\u518c\u6216\u58f0\u660e\uff0c\u6211\u7a0d\u540e\u4f1a\u8ba8\u8bba\u3002\u4f46\u8fd9\u662f\u57fa\u7840\u3002\u5728\u6ce8\u518c\u8868\u4e0a\u8c03\u7528\u65b9\u6cd5\u662f\u6ce8\u518c\u4e8b\u7269\u7684\u6700\u7b80\u5355\u548c\u76f4\u63a5\u7684\u5f62\u5f0f\u3002\u5b83\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u901a\u5e38\u57fa\u4e8e\u54c8\u5e0c\u6620\u5c04\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\u6811\u3002\u6ce8\u518c\u987a\u5e8f\u53ef\u80fd\u5f88\u91cd\u8981\u3002\u5982\u679c\u60a8\u8fdb\u884c\u4e24\u6b21\u76f8\u540c\u7684\u6ce8\u518c\u4f1a\u600e\u6837\uff1f\u4e5f\u8bb8\u6ce8\u518c\u8868\u62d2\u7edd\u7b2c\u4e8c\u6b21\u6ce8\u518c\u3002\u4e5f\u8bb8\u5b83\u5141\u8bb8\u5b83\uff0c\u9ed8\u9ed8\u5730\u8986\u76d6\u524d\u4e00\u4e2a\u3002\u4e0e\u6211\u7a0d\u540e\u63cf\u8ff0\u7684\u6a21\u5f0f\u4e0d\u540c\uff0c\u6ca1\u6709\u901a\u7528\u7cfb\u7edf\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u6ce8\u518c\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u5b8c\u6210\uff0c\u8fd9\u4f7f\u5f97\u52a8\u6001\u914d\u7f6e\u6846\u67b6\u6210\u4e3a\u53ef\u80fd\u3002\u4f46\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u590d\u6742\u6027\uff0c\u5e76\u4e14\u5982\u679c\u5176\u914d\u7f6e\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\uff0c\u5219\u6846\u67b6\u53ef\u4ee5\u63d0\u4f9b\u8f83\u5c11\u7684\u4fdd\u8bc1\u3002\u5728\u652f\u6301\u5bfc\u5165\u65f6\u526f\u4f5c\u7528\u7684\u8bed\u8a00\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u5bfc\u5165\u65f6\u8fdb\u884c\u6ce8\u518c\u3002\u8fd9\u4f7f\u5f97\u58f0\u660e\u66f4\u52a0\u7a81\u51fa\u3002\u8fd9\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u4e5f\u5f88\u96be\u63a7\u5236\u548c\u7406\u89e3\u5bfc\u5165\u7684\u987a\u5e8f\u3002\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u96be\u4ee5\u8986\u76d6\u3002\u901a\u5e38\u5728\u5bfc\u5165\u671f\u95f4\u505a\u5927\u91cf\u5de5\u4f5c\u4f1a\u5bfc\u81f4\u96be\u4ee5\u9884\u6d4b\u884c\u4e3a\u3002\u8be5\u6846\u67b6\u4f1a\u6839\u636e\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u7ea6\u5b9a\u81ea\u52a8\u914d\u7f6e\u81ea\u8eab\u3002\u914d\u7f6e\u901a\u5e38\u7531\u7279\u5b9a\u7684\u540d\u79f0\u3001\u524d\u7f00\u548c\u540e\u7f00\u9a71\u52a8\uff0c\u4f46\u6846\u67b6\u4e5f\u53ef\u4ee5\u68c0\u67e5\u4ee3\u7801\u7684\u5176\u4ed6\u65b9\u9762\uff0c\u4f8b\u5982\u51fd\u6570\u7b7e\u540d\u3002 Ruby on Rails \u4f7f\u4e4b\u51fa\u540d\u3002 Rails \u5c06\u901a\u8fc7\u5339\u914d\u540d\u79f0\u81ea\u52a8\u914d\u7f6e\u6570\u636e\u5e93\u6a21\u578b\u3001\u89c6\u56fe\u548c\u63a7\u5236\u5668\u3002\n# \u6846\u67b6\u67e5\u627e\u524d\u7f00\u4e3a form_save_ \u7684\u5185\u5bb9\u3002\u5b83\u5c06\u8fd9\u4e2a # \u4e0e `myform` \u6302\u94a9\uff0c\u540e\u8005\u5728\u540d\u4e3a `forms` \u7684\u6a21\u5757\u7684\u522b\u5904\u5b9a\u4e49 def form_save_myform ( data ): ... \u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801 ... pytest \u4f7f\u7528\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u6765\u67e5\u627e\u6d4b\u8bd5\u3002\u5b83\u67e5\u627e\u4ee5 test_ \u4e3a\u524d\u7f00\u7684\u6a21\u5757\u548c\u51fd\u6570\u3002 def test_ehlo ( smtp_connection ): response , msg = smtp_connection \u3002 ehlo() assert response == 250 assert 0 # \u7528\u4e8e\u6f14\u793a\u76ee\u7684 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cpytest \u77e5\u9053 test_ehlo \u662f\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u4ee5 test_ \u4e3a\u524d\u7f00\u3002\u5b83\u8fd8\u77e5\u9053\u53c2\u6570 smtp_connection \u662f afixture \u5e76\u5728\u540c\u4e00\u6a21\u5757\uff08\u6216\u5176\u5305\u4e2d\uff09\u5bfb\u627e\u4e00\u4e2a\u3002 Django \u5728\u67d0\u4e9b\u5730\u65b9\u4f7f\u7528\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\uff0c\u4f8b\u5982\u5f53\u5b83\u5728\u4e00\u4e2a\u7279\u6b8a\u547d\u540d\u7684\u6a21\u5757\u4e2d\u67e5\u627e\u53d8\u91cf urlpatterns \u4ee5\u627e\u51fa\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684 URL \u8def\u7531\u65f6\u3002\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u53ef\u80fd\u5f88\u68d2\u3002\u5b83\u5141\u8bb8\u7528\u6237\u8f93\u5165\u4ee3\u7801\u5e76\u8ba9\u5b83\u5728\u6ca1\u6709\u4efb\u4f55\u4eea\u5f0f\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\u3002\u5b83\u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u6709\u7528\u7684\u89c4\u8303\uff0c\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\u2014\u2014\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u6d4b\u8bd5\u524d\u52a0\u4e0a test_ \u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4eba\u7c7b\u8bfb\u8005\u8bc6\u522b\u5b83\u4eec\u3002\u5bf9\u4e8e\u67d0\u4e9b\u7528\u4f8b\uff0c\u6211\u559c\u6b22\u9002\u5ea6\u7684\u7ea6\u5b9a\u800c\u4e0d\u662f\u914d\u7f6e\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u7528\u4f8b\uff0c\u6211\u66f4\u559c\u6b22\u5176\u4ed6\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u5141\u8bb8\u901a\u8fc7\u4f7f\u7528\u96c6\u6210\u5230\u8bed\u8a00\u4e2d\u7684\u529f\u80fd\uff08\u4f8b\u5982\u6ce8\u91ca\u6216\u88c5\u9970\u5668\u8bed\u6cd5\uff09\u4ee5\u6700\u5c11\u7684\u4eea\u5f0f\u8fdb\u884c\u6ce8\u518c\u3002\n\u6846\u67b6\u7684\u7ea6\u5b9a\u8d8a\u591a\uff0c\u7f3a\u70b9\u5c31\u8d8a\u591a\u3002\u4f60\u5fc5\u987b\u5b66\u4e60\u89c4\u5219\uff0c\u5b83\u4eec\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u5e76\u8bb0\u4f4f\u5b83\u4eec\u3002\u5373\u4f7f\u60a8\u4e0d\u60f3\uff0c\u6709\u65f6\u4e5f\u53ef\u80fd\u4f1a\u610f\u5916\u8c03\u7528\u5b83\u4eec\uff0c\u53ea\u662f\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u540d\u79f0\u3002\u60a8\u53ef\u80fd\u5e0c\u671b\u4ee5\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u65b9\u5f0f\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u7b26\u5408\u7ea6\u5b9a\u3002\u5982\u679c\u60a8\u5e0c\u671b\u60a8\u7684\u6ce8\u518c\u662f\u52a8\u6001\u7684\uff0c\u4f8b\u5982\u57fa\u4e8e\u6570\u636e\u5e93\u72b6\u6001\u600e\u4e48\u529e\uff1f\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u5728\u8fd9\u91cc\u662f\u4e00\u4e2a\u969c\u788d\uff0c\u800c\u4e0d\u662f\u5e2e\u52a9\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u9700\u8981\u56de\u9000\u5230\u4e0d\u540c\u7684\u547d\u4ee4\u5f0f\u6ce8\u518c API\uff0c\u8fd9\u53ef\u80fd\u5b9a\u4e49\u4e0d\u660e\u786e\u4e14\u96be\u4ee5\u4f7f\u7528\u3002\u6846\u67b6\u66f4\u96be\u5b9e\u73b0\u67d0\u4e9b\u6a21\u5f0f\u2014\u2014\u4f8b\u5982\uff0c\u5982\u679c\u6ce8\u518c\u9700\u8981\u53c2\u6570\u5316\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u5bf9\u51fd\u6570\u548c\u5bf9\u8c61\u6765\u8bf4\u5f88\u5bb9\u6613\uff0c\u4f46\u8fd9\u91cc\u7684\u6846\u67b6\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7279\u6b8a\u7684\u547d\u540d\u7ea6\u5b9a\u6765\u8ba9\u60a8\u5f71\u54cd\u5b83\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6846\u67b6\u8bbe\u8ba1\u8005\u4f7f\u7528\u7c7b\u800c\u4e0d\u662f\u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u8bed\u8a00\u4e2d\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u5177\u6709\u5177\u6709\u7279\u5b9a\u540d\u79f0\u7684\u5c5e\u6027\u3002\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u5bf9\u4e8e\u914d\u7f6e\u7ea6\u5b9a\u51e0\u4e4e\u6ca1\u6709\u7528\u2014\u2014\u6211\u4e0d\u77e5\u9053\u4e00\u4e2a\u7c7b\u578b\u7cfb\u7edf\u53ef\u4ee5\u5f3a\u5236\u4f60\u5b9e\u73b0\u5404\u79cd\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7528\u540d\u79f0 View \u540e\u7f00\u4f60\u7684\u7c7b\u3002\u5982\u679c\u60a8\u6709\u4e00\u79cd\u8bed\u8a00\u5177\u6709\u8db3\u591f\u7684\u8fd0\u884c\u65f6\u5185\u7701\u529f\u80fd\uff0c\u4f8b\u5982 Ruby\u3001Python \u6216 JavaScript\uff0c\u5219\u5b9e\u73b0\u7ea6\u5b9a\u8fc7\u5ea6\u914d\u7f6e\u975e\u5e38\u5bb9\u6613\u3002\u5bf9\u4e8e\u4e0d\u63d0\u4f9b\u8fd9\u4e9b\u529f\u80fd\u7684\u8bed\u8a00\u6765\u8bf4\u8981\u56f0\u96be\u5f97\u591a\uff0c\u4f46\u662f\u5982\u679c\u6709\u8db3\u591f\u7684\u7f16\u8bd1\u5668\u9b54\u6cd5\uff0c\u5b83\u4ecd\u7136\u662f\u53ef\u80fd\u7684\u3002\u4f46\u662f\u90a3\u4e9b\u76f8\u540c\u7684\u8bed\u8a00\u901a\u5e38\u5728\u663e\u5f0f\u65b9\u9762\u5f88\u91cd\u8981\uff0c\u800c\u5bf9\u914d\u7f6e\u9b54\u6cd5\u7684\u7ea6\u5b9a\u5e76\u4e0d\u771f\u6b63\u9002\u5408\u8fd9\u4e00\u70b9\u3002\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e3a\u4f7f\u7528\u5143\u6570\u636e\u6ce8\u91ca\u51fd\u6570\u3001\u7c7b\u7b49\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8bed\u6cd5\u5e2e\u52a9\u3002 Java \u6709\u6ce8\u91ca\u3002 Rust \u6709\u5c5e\u6027\u3002Python \u6709\u88c5\u9970\u5668\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8fd9\u4e2a\u76ee\u7684\u3002 from framework import form_save_registry # \u6211\u4eec\u540c\u65f6\u5b9a\u4e49\u548c\u914d\u7f6e\u51fd\u6570@form_save_registry.register(&#39;my_form&#39;) def save(data): ...\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u67d0\u5904...\n\u6211\u6709\u65f6\u4f1a\u4f7f\u7528\u8fd9\u79cd\u914d\u7f6e\u8f6f\u4ef6\u7684\u65b9\u6cd5\uff0c\u4f46\u6211\u4e5f\u77e5\u9053\u5b83\u7684\u5c40\u9650\u6027\u2014\u2014\u6211\u503e\u5411\u4e8e\u4f7f\u7528\u8bed\u8a00\u96c6\u6210\u58f0\u660e\uff0c\u5982\u4e0b\u6240\u8ff0\uff0c\u5b83\u770b\u8d77\u6765\u4e0e\u6700\u7ec8\u7528\u6237\u76f8\u540c\uff0c\u4f46\u66f4\u5177\u53ef\u9884\u6d4b\u6027\u3002\u6211\u6bd4\u5927\u591a\u6570\u4eba\u66f4\u8c28\u614e\u5730\u5c06\u5176\u4f5c\u4e3a API \u516c\u5f00\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u6211\u5f88\u9ad8\u5174\u5728\u5e93\u6216\u4ee3\u7801\u5e93\u4e2d\u4f7f\u7528\u5b83\uff0c\u5c31\u50cf\u57fa\u7c7b\u4e00\u6837\u3002\u5bfc\u5165\u65f6\u526f\u4f5c\u7528\u7684\u7279\u6b8a\u6027\u8d28\u4f7f\u6211\u80fd\u591f\u63a5\u89e6\u5230\u66f4\u590d\u6742\u7684\u6a21\u5f0f\u5f53\u6211\u5fc5\u987b\u6784\u5efa\u53ef\u9760\u7684 API \u65f6\u7684\u914d\u7f6e\u3002\u8fd9\u79cd\u6a21\u5f0f\u81f3\u5c11\u5728 Python \u4e2d\u5b9e\u73b0\u8d77\u6765\u662f\u8f7b\u91cf\u7ea7\u7684\u2014\u2014\u5b83\u5e76\u4e0d\u6bd4\u6ce8\u518c\u8868\u96be\u591a\u5c11\u3002\u60a8\u7684\u91cc\u7a0b\u5c06\u56e0\u8bed\u8a00\u800c\u5f02\u3002\u4e0e\u914d\u7f6e\u4e0a\u7684\u7ea6\u5b9a\u4e0d\u540c\uff0c\u914d\u7f6e\u662f\u660e\u786e\u7684\u5e76\u4e14\u5728\u4ee3\u7801\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u4f46\u4eea\u5f0f\u7684\u6570\u91cf\u4fdd\u6301\u5728\u6700\u4f4e\u9650\u5ea6\u3002\u914d\u7f6e\u4fe1\u606f\u4e0e\u6b63\u5728\u6ce8\u518c\u7684\u4ee3\u7801\u4f4d\u4e8e\u540c\u4e00\u4f4d\u7f6e\u3002\u5728\u50cf Python \u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u88ab\u5b9e\u73b0\u4e3a\u53ef\u80fd\u663e\u7740\u7684\u5bfc\u5165\u65f6\u95f4\u526f\u4f5c\u7528\uff0c\u5e76\u4e14\u53ef\u80fd\u5177\u6709\u4ee4\u4eba\u60ca\u8bb6\u7684\u5bfc\u5165\u987a\u5e8f\u4f9d\u8d56\u6027\u3002\u5728\u50cf Rust \u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u5b8f\u9b54\u6cd5\u6765\u5b8c\u6210\u7684\u2014\u2014\u6211\u8ba4\u4e3a Rocketweb \u6846\u67b6\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f46\u6211\u4ecd\u5728\u52aa\u529b\u7406\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u60a8\u4f7f\u7528 DSL\uff08\u57df\u7279\u5b9a\u8bed\u8a00\uff09\u6765\u914d\u7f6e\u6846\u67b6\u3002\u8fd9\u4e2a DSL \u63d0\u4f9b\u4e86\u4e00\u4e9b\u6302\u94a9\u81ea\u5b9a\u4e49\u4ee3\u7801\u7684\u65b9\u6cd5\u3002 DSL \u53ef\u4ee5\u662f\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u8bed\u8a00\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u5229\u7528 JSON\u3001YAML \u6216\uff08\u98a4\u6296\uff09XML\u3002\u60a8\u8fd8\u53ef\u4ee5\u7ec4\u5408\u8fd9\u4e9b\uff1a\u6211\u5e2e\u52a9\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4f7f\u7528 JSON \u914d\u7f6e\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce\uff0c\u5176\u4e2d\u7684\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u81ea\u5b9a\u4e49\u89e3\u6790\u5668\u548c\u89e3\u91ca\u5668\u7684 Python \u8868\u8fbe\u5f0f\u7684\u5b50\u96c6\u3002\u6211\u4eec\u6709\u4e00\u79cd\u81ea\u5b9a\u4e49\u8bed\u8a00\uff08\u5728\u672c\u4f8b\u4e2d\u4f7f\u7528 JSON \u5b8c\u6210\uff09\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u914d\u7f6e\u7cfb\u7edf\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u67d0\u4e9b Python \u6a21\u5757 my_module \u4e2d\u7684\u51fd\u6570 save \u6765\u63d2\u5165 my_form \u7684\u4fdd\u5b58\u884c\u4e3a\u3002\nPyramid \u548c Plone \u90fd\u662f Zope \u7684\u540e\u4ee3\uff0c\u60a8\u53ef\u4ee5\u5c06 ZCML\uff0c\u4e00\u79cd XML \u6d3e\u751f\u7684\u914d\u7f6e\u8bed\u8a00\u4e0e\u5b83\u4eec\u4e00\u8d77\u4f7f\u7528\u3002 &lt;configure xmlns=&quot;http://namespaces.zope.org/zope&quot; xmlns:browser=&quot;http://namespaces.zope.org/browser&quot; i18n_domain=&quot;my.package&quot; &gt; &lt;!-- override folder_contents -- &gt; &lt;configure package=&quot;plone.app.content.browser&quot; &gt; &lt;browser:page for=&quot;Products.CMFCore.interfaces._content.IFolderish&quot; class=&quot;my.package.browser.foldercontents.MyFolderContentsView&quot; name=&quot;folder_contents&quot; template=&quot;folder_contents.pt&quot; layer=&quot;my.package.interfaces.IMyPackageLayer&quot; permission=&quot;cmf.ListFolderContents&quot; /&gt; &amp;l ......", "note_en": "A software framework is code that calls your (application) code. That&#39;s how wedistinguish a framework from a library. Libraries have aspects of frameworks sothere is a gray area.\n My friend Christian Theune puts it like this: a framework is a text where youfill in the blanks. The framework defines the grammar, you bring some of thewords. The words are the code you bring into it.\n If you as a developer use a framework, you need to tell it about your code.You need to tell the framework what to call, when. Let&#39;s call this configuring the framework.\n There are many ways to configure a framework. Each approach has its owntrade-offs. I will describe some of these framework configuration patternshere, with brief examples and mention of some of the trade-offs. Manyframeworks use more than a single pattern. I don&#39;t claim this list isexhaustive -- there are more patterns.\n The patterns I describe are generally language agnostic, though some depend onspecific language features. Some of these patterns make more sense in objectoriented languages. Some are easier to accomplish in one language compared toanother. Some languages have rich run-time introspection abilities, and thatmake certain patterns a lot easier to implement. A language with a powerfulmacro facility will make other patterns easier to implement.\n Where I give example code, I will use Python. I give some abstract codeexamples, and try to supply a few real-world examples as well. The examplesshow the framework from the perspective of the application developer.\n This is a  Form class where you can pass in a function that implements whatshould happen when you save the form.\n from  framework  import  Form def  my_save ( data ):  ...  application  code  to  save  the  data  somewhere  ... my_form  =  Form ( save = my_save )\n You can go very far with this approach. Functional languages do. If you glanceat React in a certain way, it&#39;s configured with a whole bunch of callbackfunctions called React components, along with more callback functions calledevent handlers.\n I am a big fan of this approach as the trade-offs are favorable in manycircumstances. In object-oriented languages this pattern is sometimes ignoredbecause people feel they need something more complicated like pass in somefancy object or do inheritance, but I think callback functions should in factbe your first consideration.\n Functions are simple to understand and implement. The contract is about assimple as it can be for code. Anything you may need to implement your functionis passed in as arguments by the framework, which limits how much knowledge youneed to use the framework.\n Configuration of a callback function can be very dynamic in run-time -- you candynamically assemble or create functions and pass them into the framework,based on some configuration stored in a database, for instance.\n Configuration with callback functions doesn&#39;t really stand out, which can be adisadvantage -- it&#39;s easier to see someone subclasses a base class orimplements an interface, and language-integrated methods of configurationcan stand out even more.\n Sometimes you want to configure multiple related functions at once, in whichcase an object that implements an interface can make more sense -- I describethat pattern below.\n It helps if your language has support for function closures. And of course yourlanguage needs to actually support first class functions that you can passaround -- Java for a long time did not.\n The framework provides a base-class which you as the application developer cansubclass. You implement one or more methods that the framework will call.\n from  framework  import  FormBase class  MyForm ( FormBase ):  def  save ( self ,  data ):  ...  application  code  save  the  data  somewhere  ...\n class  AccountViewSet ( viewsets . ModelViewSet ):  &#34;&#34;&#34; A simple ViewSet for viewing and editing accounts. &#34;&#34;&#34;  queryset  =  Account . objects . all ()  serializer_class  =  AccountSerializer  permission_classes  =  [ IsAccountAdminOrReadOnly ]\n A  ModelViewSet does a lot: it implements a lot of URLs and request methods tointeract with them. It integrates with Django&#39;s ORM so that you get a REST APIthat you can use to create and update database objects.\n When you override a method, can you call other methods on  self ( this)or not? Is there is a particular order in which you are allowed to call thesemethods?\n  If the base class provides an implementation already, you need to knowwhether it&#39;s intended to be supplemented, or overridden, or both.\n If it&#39;s intended to be supplemented, you need to make sure to callthis method on the superclass in your implementation.\n If you can override a method entirely, you may need to know what methods touse to to play a part in the framework -- perhaps other methods that can beoverridden.\n Does the base class inherit from other classes that also let you overridemethods? when you implement a method, can it interact with other methods onthese other classes?\n Many object-oriented languages support inheritance as a language feature. Youcan make the subclasser implement multiple related methods. It seems obvious touse inheritance as a way to let applications use and configure the framework.\n It&#39;s not surprising then that this design is very common for frameworks. But Itry to avoid it in my own frameworks, and I often am frustrated when aframework forces me to subclass.\n The reason for this is that you as the application developer have to startworrying about many of the questions above. If you&#39;re lucky they are answeredby documentation, though it can still take a bit of effort to understand it.But all too often you have to guess or read the code yourself.\n And then even with a well designed base class with plausible overridablemethods, it can still be surprisingly hard for you to do what you actually need because the contract of the base class is just not right for your usecase.\n Languages like Java and TypeScript offer the framework implementer a way togive you guidance ( private/protected/public,  final). The framework designercan put hard limits on which methods you are allowed to override. This takesaway some of these concerns, as with sufficient effort on the part of theframework designer, the language tooling can enforce the contract. Even so suchan API can be complex for you to understand and difficult for the frameworkdesigner to maintain.\n Many languages, such as Python, Ruby and JavaScript, don&#39;t have the tools tooffer such guidance. You can subclass any base class. You can override anymethod. The only guidance is documentation. You may feel a bit lost as aresult.\n A framework tends to evolve over time to let you override more methods in moreclasses, and thus grows in complexity. This complexity doesn&#39;t grow justlinearly as methods get added, as you have to worry about their interaction aswell. A framework that has to deal with a variety of subclasses that override awide range of methods can expect less from them. Too much flexibility can makeit harder for the framework to offer useful features.\n Base classes also don&#39;t lend themselves very well to run-time dynamism - somelanguages (like Python)  do let you generate a subclass dynamically withcustom methods, but that kind of code is difficult to understand.\n I think the disadvantages of subclassing outweigh the advantages for aframework&#39;s external API. I still sometimes use base classes  internally in alibrary or framework -- base classes are a lightweight way to do reuse there.In this context many of the disadvantages go away: you are in control of thebase class contract yourself and you presumably understand it.\n I also sometimes use an otherwise empty base class to define an interface, butthat&#39;s really another pattern which I discuss next.\n The framework provides an interface that you as the application developer canimplement. You implement one or more methods that the framework calls.\n from  framework  import  Form ,  IFormBackend class  MyFormBackend ( IFormBackend ):  def  load ( self ):  ...  application  code  to  load  the  data  here  ...  def  save ( self ,  data ):  ...  application  code  save  the  data  somewhere  ... my_form  =  Form ( MyFormBackend ())\n The iterable/iterator protocol in Python is an example of an interface. If youimplement it, the framework (in this case the Python language) will be able todo all sorts of things with it -- print out its contents, turn it into a list,reverse it, etc.\n class  RandomIterable :  def  __iter__ ( self ):  return  self  def  next ( self ):  if  random . choice ([ &#34;go&#34; ,  &#34;stop&#34; ])  ==  &#34;stop&#34; :  raise  StopIteration  return  1\n Many typed languages offer native support for interfaces. But what if yourlanguage doesn&#39;t do that?\n In a dynamically typed language you don&#39;t really  need to do anything: anyobject can implement any interface. It&#39;s just you don&#39;t really get a lot ofguidance from the language. What if you want a bit more?\n In Python you can use the standard library  abc module, or  zope.interface.You can also use the  typing module and implement base classes and in Python3.8,  PEP-544 protocols.\n But let&#39;s say you don&#39;t have all of that or don&#39;t want to bother yet as you&#39;rejust prototyping. You can use a simple Python base class to describe aninterface:\n class  IFormBackend :  def  load ( self ):  &#34;Load the data from the backend. Should return a dict with the data.&#34;  raise  NotImplementedError ()  def  save ( self ,  data ):  &#34;Save the data dict to the backend.&#34;  raise  NotImplementedError ()\n It doesn&#39;t do anything, which is the point - it just describes the methods thatthe application developer should implement. You could supply one or two with asimple default implementation, but that&#39;s it. You may be tempted to implementframework behavior on it, but that brings you into base class land.\n The trade-offs are quite similar to those of callback functions. This is auseful pattern to use if you want to define related functionality in a singlebundle.\n I go for interfaces if my framework offers a more extensive contract thatan application needs to implement, especially if the applicationneeds to maintain its own internal state.\n The use of interfaces can lead to clean composition-oriented designs, where youadapt one object into another.\n You can use run-time dynamism like with functions where you assemble anobject that implements an interface dynamically.\n Many languages offer interfaces as a language feature, and any object-orientedlanguage can fake them. Or have too many ways to do it, like Python.\n When you have a framework that dispatches on a wide range of inputs, and youneed to plug in application specific code that handles it, you are going toneed some type of registry.\n What gets registered can be a callback or an object that implements aninterface -- it therefore builds on those patterns.\n  Frameworks can have specific ways to configure their registries that build ontop of this basic pattern -- I will elaborate on that later.\n from  framework  import  form_save_registry def  save ( data ):  ...  application  code  to  save  the  data  somewhere  ... # we configure what save function to use for the form named &#39;my_form&#39; form_save_registry . register ( &#39;my_form&#39; ,  save )\n A URL router such as in a web framework uses some type of registry. Here isan example from the Falcon web framework:\n  In this example you can see two patterns go together:  QuoteResourceimplements an (implicit) interface, and you register it with a particularroute.\n Application code can register handlers for a variety of routes, and theframework then uses the registry to match a request&#39;s URL with a route, andthen can all into user code to generate a response.\n I use this pattern a lot, as it&#39;s easy to implement and good enough for manyuse cases. It has a minor drawback: you can&#39;t easily see that configuration istaking place when you read code. Sometimes I expose a more sophisticatedconfiguration API on top of it: a DSL or language integrated registration ordeclaration, which I discuss later. But this is foundational.\n Calling a method on a registry is the most simple and direct form to registerthings. It&#39;s easy to implement, typically based on a hash map, though you canalso use other data structures, such as trees.\n The registration order can matter. What happens if you make the sameregistration twice? Perhaps the registry rejects the second registration.Perhaps it allows it, silently overriding the previous one. There is no generalsystem to handle this, unlike patterns which I describe later.\n Registration can be done anywhere in the application which makes it possible toconfigure the framework dynamically. But this can also lead to complexity andthe framework can offer fewer guarantees if its configuration can be updated atany moment.\n In a language that supports import-time side effects, you can do yourregistrations during import time. That makes the declarations stand out more.This is simple to implement, but it&#39;s also difficult to control and understandthe order of imports. This makes it difficult for the application developer todo overrides. Doing a lot of work during import time in general can lead tohard to predict behavior.\n The framework configures itself automatically based on your use of conventionsin application code. Configuration is typically driven by particular names,prefixes, and postfixes, but a framework can also inspect other aspects of thecode, such as function signatures.\n  Ruby on Rails made this famous. Rails will automatically configure the databasemodels, views and controllers by matching up names.\n # the framework looks for things prefixed form_save_. It hooks this # up with `myform` which is defined elsewhere in a module named `forms` def  form_save_myform ( data ):  ...  application  code  to  save  the  data  somewhere  ...\n pytest uses convention over configuration to find tests. It looks for modulesand functions prefixed by  test_.\n  def  test_ehlo ( smtp_connection ):  response ,  msg  =  smtp_connection . ehlo ()  assert  response  ==  250  assert  0  # for demo purposes\n In this example, pytest knows that  test_ehlo is a test, because it isprefixed with  test_. It also knows that the argument  smtp_connection is afixture and looks for one in the same module (or in its package).\n Django uses convention over configuration in places, for instance when it looksfor the variable  urlpatterns in a specially named module to figure out whatURL routes an application provides.\n Convention over configuration can be great. It allows the user to type code andhave it work without  any ceremony. It can enforce useful norms that makescode easier to read -- it makes sense to prefix tests with  test_ anyway, asthat allows the human reader to recognize them.\n I like convention over configuration in moderation, for some use cases. Formore complex use cases I prefer other patterns that allow registration withminimal ceremony by using features integrated into the language, such asannotation or decorator syntax.\n The more conventions a framework has, the more disadvantages show up. You haveto learn the rules, their interactions, and remember them. You may sometimesaccidentally invoke them even though you don&#39;t want to, just by using the wrongname. You may want to structure your application&#39;s code in a way that would bevery useful, but doesn&#39;t really work with the conventions.\n And what if you wanted your registrations to be dynamic, based on databasestate, for instance? Convention over configuration is a hindrance here, not ahelp. The developer may need to fall back to a different, imperativeregistration API, and this may be ill-defined and difficult to use.\n It&#39;s harder for the framework to implement some patterns -- what ifregistrations need to be parameterized, for instance? That&#39;s easy withfunctions and objects, but here the framework may need more special namingconventions to let you influence that. That may lead the framework designer touse classes over functions, as in many languages these can have attributes withparticular names.\n Static type checks are of little use with convention over configuration -- Idon&#39;t know of a type system that can enforce you implement various methods ifyou postfix your class with the name  View, for instance.\n If you have a language with enough run-time introspection capabilities such asRuby, Python or JavaScript, it&#39;s pretty easy to implement convention overconfiguration. It&#39;s a lot harder for languages that don&#39;t offer those features,but it may still be possible with sufficient compiler magic. But those samelanguages are often big on being explicit, and convention over configuration&#39;smagic doesn&#39;t really fit well with that.\n  Many programming languages offer some syntax aid for annotating functions,classes and more with metadata. Java has annotations. Rust has attributes.Python has decorators which can be used for this purpose as well.\n  from  framework  import  form_save_registry # we define and configure the function at the same time @form_save_registry.register ( &#39;my_form&#39; ) def  save ( data ):  ...  application  code  to  save  the  data  somewhere  ...\n  I use this method of configuring software sometimes, but I&#39;m also aware of itslimitations -- I tend to go for language integrated  declaration, discussedbelow, which looks identical to the end user but is more predictable.\n I&#39;m warier than most about exposing this as an API to application developers,but am happy to use it inside a library or codebase, much like base classes.The ad-hoc nature of import-time side effects make me reach for moresophisticated patterns of configuration when I have to build a solid API.\n This pattern is lightweight to implement at least in Python -- it&#39;s not muchharder than a registry. Your mileage will vary dependent on language. Unlikeconvention over configuration, configuration is explicit and stands out incode, but the amount of ceremony is kept to a minimum. The configurationinformation is co-located with the code that is being registered.\n  In languages like Python this is implemented as a possibly significantimport-time side-effect, and may have surprising import order dependencies. Ina language like Rust this is done by compiler macro magic -- I think the Rocketweb framework is an example, but I&#39;m  still trying to understand how itworks.\n You use a DSL (domain specific language) to configure the framework. This DSLoffers some way to hook in custom code. The DSL can be an entirely customlanguage, but you can also leverage JSON, YAML or (shudder) XML.\n You can also combine these: I&#39;ve helped implement a workflow engine that&#39;sconfigured with JSON, and expressions in it are a subset of Python expressionswith a custom parser and interpreter.\n  We have a custom language (in this case done with JSON) that lets us configurethe way our system works. Here we plug in the  save behavior for  my_form byreferring to the function  save in some Python module  my_module.\n Pyramid and  Plone both are descendants of  Zope, and you can use ZCML, aXML-derived configuration language with them both.\n  &lt;configure  xmlns= &#34;http://namespaces.zope.org/zope&#34;  xmlns:browser= &#34;http://namespaces.zope.org/browser&#34;  i18n_domain= &#34;my.package&#34; &gt;  &lt;!-- override folder_contents --&gt;  &lt;configure  package= &#34;plone.app.content.browser&#34; &gt;  &lt;browser:page  for= &#34;Products.CMFCore.interfaces._content.IFolderish&#34;  class= &#34;my.package.browser.foldercontents.MyFolderContentsView&#34;  name= &#34;folder_contents&#34;  template= &#34;folder_contents.pt&#34;  layer= &#34;my.package.interfaces.IMyPackageLayer&#34;  permission= &#34;cmf.ListFolderContents&#34;  /&gt;  &l\n......", "posttime": "2021-08-07 22:55:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6846\u67b6,framework", "title": "\u6846\u67b6\u6a21\u5f0f", "title_en": "Framework Patterns", "transed": 1, "url": "https://blog.startifact.com/posts/framework-patterns.html#", "via": "", "real_tags": ["\u6846\u67b6", "framework"]}, {"category": "", "categoryclass": "", "imagename": "b0d6aa40245eedfc48f299aa21cc9149.jpg", "infoid": 1071976, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u7684\u8054\u5408\u521b\u59cb\u4eba\u3001\u4e16\u754c\u4e0a\u6700\u5bcc\u6709\u7684\u4eba\u4e4b\u4e00\u62c9\u91cc\u00b7\u4f69\u5947 (Larry Page) \u5df2\u88ab\u6388\u4e88\u5bcc\u6709\u6295\u8d44\u8005\u7c7b\u522b\u7684\u65b0\u897f\u5170\u5c45\u7559\u6743\u3002\u8be5\u7c7b\u522b\u8981\u6c42\u7533\u8bf7\u4eba\u5728\u4e09\u5e74\u5185\u5728\u65b0\u897f\u5170\u6295\u8d44\u81f3\u5c11 1000 \u4e07\u65b0\u897f\u5170\u5143\uff08700 \u4e07\u7f8e\u5143\uff0c500 \u4e07\u82f1\u9551\uff09\u3002\u6709\u4eba\u95ee\u5230\uff0c\u5f53\u8fb9\u754c\u56e0 Covid-19 \u800c\u5173\u95ed\u65f6\uff0c\u4f69\u5947\u5148\u751f\u5982\u4f55\u8fdb\u5165\u8be5\u56fd\u3002\u653f\u5e9c\u8868\u793a\uff0c\u5728\u6d89\u53ca\u4ed6\u513f\u5b50\u7684\u533b\u7597\u7d27\u6025\u7533\u8bf7\u540e\uff0c\u4ed6\u88ab\u5141\u8bb8\u5165\u5883\u3002 48 \u5c81\u7684\u4f69\u5947\u5148\u751f\u66fe\u4e8e 11 \u6708\u7533\u8bf7\u5c45\u7559\uff0c\u4f46\u7531\u4e8e\u5f53\u65f6\u4ed6\u5728\u6d77\u5916\uff0c\u8fb9\u5883\u5173\u95ed\uff0c\u56e0\u6b64\u7533\u8bf7\u65e0\u6cd5\u5f97\u5230\u5904\u7406\u3002\u4f46\u653f\u5e9c\u5468\u56db\u8bc1\u5b9e\uff0c\u4eca\u5e74 1 \u6708\uff0c\u8fd9\u4f4d\u79d1\u6280\u4ebf\u4e07\u5bcc\u7fc1\u88ab\u5141\u8bb8\u8fdb\u5165\u65b0\u897f\u5170\uff0c\u4ee5\u4fbf\u4ed6\u7684\u513f\u5b50\u53ef\u4ee5\u56e0\u533b\u7597\u7d27\u6025\u60c5\u51b5\u4ece\u6590\u200b\u200b\u6d4e\u64a4\u79bb\u3002\u4ed6\u7684\u7533\u8bf7\u4e8e 2 \u6708\u83b7\u5f97\u6279\u51c6\u3002\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u536b\u751f\u90e8\u957f\u5b89\u5fb7\u9c81\u00b7\u5229\u7279\u5c14\u5728\u8bae\u4f1a\u63a5\u53d7\u4e86\u5173\u4e8e\u4f69\u5947\u5148\u751f\u6848\u4ef6\u7684\u8d28\u8be2\u3002\n\u201c[\u4ed6\u7684\u5165\u5883]\u7b26\u5408\u533b\u7597\u7d27\u6025\u60c5\u51b5\u7684\u6240\u6709\u6807\u51c6\u6761\u4ef6\uff0c\u9700\u8981\u4ece\u5c9b\u5c7f\u4e0a\u8fdb\u884c\u533b\u7597\u540e\u9001\uff0c\u800c\u4e14\u6240\u6709\u73b0\u884c\u7684\u8981\u6c42\u548c\u89c4\u5b9a\u2026\u2026\u90fd\u5f97\u5230\u4e86\u9075\u5b88\uff0c\u201d\u5229\u7279\u5c14\u5148\u751f\u8bf4\uff0c\u6839\u636e\u8bae\u4f1a\u7684\u8bb0\u5f55\u7f51\u7ad9\u3002\u79fb\u6c11\u987e\u95ee\u51ef\u8482\u00b7\u963f\u59c6\u65af\u7279\u6717\uff08Katy Armstrong\uff09\u544a\u8bc9\u65b0\u897f\u5170\u5e7f\u64ad\u7535\u53f0\u8bf4\uff1a\u201c\u6211\u4eec\u8ba9\u8fd9\u4e9b\u5168\u79d1\u533b\u751f\u6216\u62a4\u58eb\u88ab\u56f0\u5728\u65e0\u4f11\u6b62\u7684\u5019\u8bca\u5ba4\u91cc\u4ee5\u83b7\u5f97\u4f4f\u6240\uff0c\u800c\u62c9\u91cc [\u4f69\u5947] \u8fdb\u6765\u540e\u5f88\u5feb\u5c31\u53ef\u4ee5\u6210\u4e3a\u5c45\u6c11\u3002\u201d\u4f69\u5947\u5148\u751f\u88ab\u5217\u4e3a\u4e16\u754c\u4e0a\u6700\u5bcc\u6709\u7684\u4eba\u4e4b\u4e00\uff0c\u636e\u62a5\u9053\u8d22\u5bcc\u8d85\u8fc7 1160 \u4ebf\u7f8e\u5143\u3002\u4ed6\u4e8e 2019 \u5e74\u5378\u4efb\u8c37\u6b4c\u6bcd\u516c\u53f8 Alphabet \u7684\u9996\u5e2d\u6267\u884c\u5b98\u4e00\u804c\uff0c\u4f46\u4ecd\u662f\u8463\u4e8b\u4f1a\u6210\u5458\u548c\u63a7\u80a1\u80a1\u4e1c\u3002", "note_en": "Larry Page, Google&#39;s co-founder and one of the world&#39;s richest men, has been granted New Zealand residency under a category for wealthy investors.\n The category requires applicants to invest at least NZ$10m ($7m, \u00a35m) in New Zealand over three years.\n Questions were asked about how Mr Page could enter the country when borders were shut because of Covid-19.\n The government said his entry was allowed following a medical emergency application involving his son.\n Mr Page, 48, had applied for residence in November but the application could not be processed because he was offshore at the time, when borders were closed.\n But in January, the tech billionaire was allowed into New Zealand so his son could be evacuated from Fiji because of a medical emergency,  the government confirmed on Thursday. His application was approved in February.\n  Earlier this week, Health Minister Andrew Little was questioned in parliament about Mr Page&#39;s case.\n &#34;[His entry] met all the standard conditions of a medical emergency requiring a medical evacuation from the islands, and every requirement and regulation that was in place... was complied with,&#34; Mr Little said, according to a transcript on the parliament&#39;s website.\n  &#34;We have got these GPs or nurses who are stuck in an interminable waiting room to get their residence, whereas Larry [Page] comes in and boom, straight away can become a resident,&#34;  immigration adviser Katy Armstrong told Radio New Zealand.\n Mr Page is listed as one of the richest people in the world with a reported wealth of more than $116 bn.  He stepped down as chief executive of Google&#39;s parent company Alphabet in 2019, but remains a board member and controlling shareholder.", "posttime": "2021-08-07 22:55:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u8054\u5408,page,\u65b0\u897f\u5170", "title": "\u62c9\u91cc\u4f69\u5947\uff1a\u8c37\u6b4c\u8054\u5408\u521b\u59cb\u4eba\u83b7\u5f97\u65b0\u897f\u5170\u5c45\u7559\u6743", "title_en": "Larry Page: Google co-founder granted New Zealand residency", "transed": 1, "url": "https://www.bbc.com/news/world-asia-58128475", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u8054\u5408", "page", "\u65b0\u897f\u5170"]}, {"category": "", "categoryclass": "", "imagename": "9739a7c2400d6f07c163b2690543f55e.jpeg", "infoid": 1071975, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "EMBED\uff08\u7528\u4e8e wordpress.com \u6258\u7ba1\u7684\u535a\u5ba2\u548c archive.org item &lt;description&gt; \u6807\u7b7e\uff09[archiveorg mac_The_Dead_Mac_Scrolls_1992 width=560 height=384 frameborder=0 webkitallowfullscreen=true mozallowfullscreen=true]", "note_en": "EMBED (for wordpress.com hosted blogs and archive.org item &lt;description&gt; tags)  [archiveorg mac_The_Dead_Mac_Scrolls_1992 width=560 height=384 frameborder=0 webkitallowfullscreen=true mozallowfullscreen=true]", "posttime": "2021-08-07 22:54:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "mac", "title": "The Dead Mac Scrolls (1992)", "title_en": "The Dead Mac Scrolls (1992)", "transed": 1, "url": "https://archive.org/details/mac_The_Dead_Mac_Scrolls_1992/page/n25/mode/2up", "via": "", "real_tags": ["mac"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071974, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c I \u90e8\u5206\uff1a\u5149\u7ebf\u8ffd\u8e2a\u57fa\u7840\uff0c\u7f16\u8f91\uff1aPer Christensen 1. \u6444\u5f71\u672f\u8bed\u7684\u7a81\u7834\u6027\u603b\u7ed3\uff08\u53ca\u5176\u5bf9\u5149\u7ebf\u8ffd\u8e2a\u7684\u6548\u7528\uff09\uff0c\u4f5c\u8005 Trevor David Black 2. \u5149\u7ebf\u8f74\u5bf9\u9f50\u8fb9\u754c\u6846\u4ea4\u96c6\uff0c\u4f5c\u8005\uff1aPeter Shirley\u3001Ingo Wald \u548cAdam Marrs 3. \u57fa\u672c\u5149\u7ebf\u751f\u6210\u7740\u8272\u5668\uff0cMorgan McGuire \u548c Zander Majercik 4. Hacking the Shadow Terminator\uff0cJohannes Hanika 5. \u7f3a\u5c11\u5bfc\u6570\u7684\u91c7\u6837\u7eb9\u7406\uff0cMaksim Aizenshtein \u548c Matt Pharr 6. \u5fae\u5206\u91cd\u5fc3\u5750\u6807\uff0cTomas Akenine-M\u00f6ller 7. \u5c04\u7ebf\u9525\u7684\u7eb9\u7406\u5750\u6807\u68af\u5ea6\u4f30\u8ba1\uff0c\u7531 Wessam Bahnassi 8. \u53cd\u5c04\u548c\u6298\u5c04\u516c\u5f0f\uff0c\u7531 Eric Haines 9. Schlick Fresnel Approximation\uff0c\u7531 Zander Majercik 10. \u7528\u4e8e\u7eb9\u7406\u7ec6\u8282\u7ea7\u522b\u7684\u6298\u5c04\u5c04\u7ebf\u9525\uff0c\u7531 Jakub Boksansky\uff0cCyril Crassin\u548c Tomas Akenine-M\u00f6ller \u7b2c\u4e8c\u90e8\u5206\uff1aAPI \u548c\u5de5\u5177\uff0c\u7f16\u8f91\uff1aDavid Hart 15. \u7740\u8272\u5668\u7ed1\u5b9a\u8868\u63ed\u79d8\uff0cWill Usher 16. Vulkan \u5149\u7ebf\u8ffd\u8e2a\u4ecb\u7ecd\uff0cMatthew Rusch\uff0cNeil Bickfor d \u548c Nuno Subtil 17. \u5728 DirectX \u5149\u7ebf\u8ddf\u8e2a\u4e2d\u4f7f\u7528 Bindless \u8d44\u6e90\uff0c\u4f5c\u8005 Matt Pettineo 18. WebRays\uff1aWeb \u4e0a\u7684\u5149\u7ebf\u8ddf\u8e2a\uff0c\u4f5c\u8005\uff1aNick Vitsas\u3001Anastasios Gkaravelis\u3001Andreas A. Vasilakis \u548c Georgios Papaioannou 19. \u53ef\u89c6\u5316\u548c\u4f20\u8fbe\u6e32\u67d3\u4e2d\u7684\u9519\u8bef\u56fe\u50cf\uff0c\u7531 Pontus Andersson\u3001Jim Nilsson \u548c Tomas Akenine-M\u00f6ller \u7b2c\u4e09\u90e8\u5206\uff1a\u91c7\u6837\uff0c\u7f16\u8f91\uff1aThomas M\u00fcller 20. \u591a\u91cd\u91cd\u8981\u6027\u91c7\u6837 101\uff0c\u7531 Anders Lindqvist 21. \u7528\u4e8e\u91c7\u6837\u79bb\u6563\u5206\u5e03\u7684\u522b\u540d\u65b9\u6cd5\uff0c\u7531 Chris Wyman 22. \u52a0\u6743\u6c34\u5e93\u91c7\u6837\uff1a\u968f\u673a\u91c7\u6837\u6d41\uff0c\u4f5c\u8005\uff1aChris Wyman 23. \u4f7f\u7528\u57fa\u4e8e\u7f51\u683c\u7684\u6c34\u5e93\u6e32\u67d3\u8bb8\u591a\u706f\u5149\uff0c\u4f5c\u8005\uff1aJakub Boksansky\u3001Paula Jukarainen \u548c Chris Wyman \u7b2c\u56db\u90e8\u5206\uff1a\u9634\u5f71\u548c\u6548\u679c\uff0c\u7f16\u8f91\uff1aCem Yuksel 25. \u6682\u65f6\u53ef\u9760\u5730\u4f7f\u7528\u8fd0\u52a8\u5411\u91cf\u65f6\u95f4\u4fe1\u606f\uff0c\u4f5c\u8005\uff1aZheng Zeng\u3001Shiqiu Liu\u3001Jinglei Yang\u3001Lu Wang \u548c Ling-Qi Yan 26. \u5149\u7ebf\u8ffd\u8e2a\u7ec6\u8282\u7ea7\u522b\u7684\u4ea4\u53c9\u6de1\u5316\u53d8\u5f97\u5bb9\u6613\uff0cHolger Gruen 27. \u5149\u7ebf\u8ffd\u8e2a\u8d34\u82b1\uff0c\u7531 Wessam Bahnassi 28\u3002 Billboard Ray Tracing for Impostors and Volumetric Effects\uff0c\u4f5c\u8005 Felix Br\u00fcll\u3001Robin Fynn Diedrichs \u548c Thorsten Grosch \u7b2c V \u90e8\u5206\uff1a\u4ea4\u53c9\u70b9\uff0c\u7f16\u8f91\uff1aAngelo Pesce 32\u3002\u4f7f\u7528\u6d1b\u4f26\u5179\u53d8\u6362\u7684\u5feb\u901f\u548c\u7a33\u5065\u7684\u5149\u7ebf/OBB \u4ea4\u53c9\u70b9\uff0cRodolfo Sabino\uff0cCreto Augusto Vidal \u3001Joaquim Bento Cavalcante-Neto \u548c Jos\u00e9 Gilvan Rodrigues Maia 33\u3002\u590d\u6742\u5206\u5f62\u7684\u5b9e\u65f6\u6e32\u67d3\uff0cVin\u00edcius da Silva\u3001Tiago Novello\u3001H\u00e9lio Lopes \u548c Luiz Velho \u7b2c\u516d\u90e8\u5206\uff1a\u6027\u80fd\uff0c\u7f16\u8f91\uff1aJosef Spjut \u548c Michael Vance 38\u3002 DXR \u4e2d\u7684 CPU \u6027\u80fd\uff0cPeter Morley \u7740 39. \u4f7f\u7528\u5149\u7ebf\u8ffd\u8e2a\u786c\u4ef6\u7684\u9006\u53d8\u6362\u91c7\u6837\uff0cNate Morrical \u548c Stefan Zellmann 40. \u4f7f\u7528 RTX \u53ef\u89c1\u6027\u906e\u7f69\u52a0\u901f\u5e03\u5c14\u53ef\u89c1\u6027\u64cd\u4f5c\uff0cDirk Gerrit van Antwerpen \u548c Oliver Klehm 41. \u5b9e\u7528\u7a7a\u95f4\u54c8\u5e0c\u56fe\u66f4\u65b0\uff0c\u4f5c\u8005\uff1aPascal Gautron 42. \u7528\u4e8e\u9884\u6d4b\u6e32\u67d3\u7684 GPU \u4e0a\u7684\u9ad8\u6548\u5149\u8c31\u6e32\u67d3\uff0c\u4f5c\u8005\uff1aDavid Murray\u3001Alban Fichet \u548c Romain Pacanowski 43. \u9ad8\u6548\u65e0\u504f\u4f53\u79ef\u8def\u5f84\u8ffd\u8e2aGPU\uff0cNikolai Hofmann \u548c Alex Evans 44. \u8def\u5f84\u8ffd\u8e2a RBF \u7c92\u5b50\u4f53\u79ef\uff0cAaron Knoll\u3001Gregory P. Johnson \u548c Johannes Meng 45. \u79d1\u5b66\u5149\u7ebf\u8ffd\u8e2a\u7684\u5feb\u901f\u4f53\u79ef\u68af\u5ea6\u7740\u8272\u8fd1\u4f3c\uff0cCarson Brownlee \u548c David DeMarle \u7b2c\u4e03\u90e8\u5206\uff1a\u5149\u7ebfTracing in the Wild\uff0c\u7f16\u8f91\uff1aJacob Munkberg 46. \u5149\u7ebf\u8ffd\u8e2a\u63a7\u5236\uff0c\u4f5c\u8005 Juha Sj\u00f6holm\u3001Paula Jukarainen \u548c Tatu Aalto 47. \u4f7f\u7528\u5b50\u96c6\u91cd\u8981\u6027\u91c7\u6837\u5728 Quake 2 \u4e2d\u8fdb\u884c\u5149\u91c7\u6837\uff0cTobias Zirr 48. Fortnite \u4e2d\u7684\u5149\u7ebf\u8ffd\u8e2a\uff0c\u4f5c\u8005\uff1aPatrick Kelly\u3001Yuriy O&#39;Donnell\u3001Kenzo ter Elst\u3001Juan Ca\u00f1ada \u548c Evan Hart 49. ReBLUR\uff1a\u5206\u5c42\u5faa\u73af\u964d\u566a\u5668\uff0cDmitry Zhdan 50\u3002\u865a\u5e7b\u5f15\u64ce 4 \u4e2d\u5149\u7ebf\u8ffd\u8e2a\u5185\u5bb9\u517c\u5bb9\u6027\u7684\u5b9e\u7528\u89e3\u51b3\u65b9\u6848\uff0cEvan Hart", "note_en": "PART I: Ray Tracing Foundations, editor: Per Christensen 1. A Breakneck Summary of Photographic Terms (and Their Utility to Ray Tracing), by Trevor David Black 2. Ray Axis-Aligned Bounding Box Intersection, by Peter Shirley, Ingo Wald, and Adam Marrs 3. Essential Ray Generation Shaders, by Morgan McGuire and Zander Majercik 4. Hacking the Shadow Terminator, by Johannes Hanika 5. Sampling Textures with Missing Derivatives, by Maksim Aizenshtein and Matt Pharr 6. Differential Barycentric Coordinates, by Tomas Akenine-M\u00f6ller 7. Texture Coordinate Gradients Estimation for Ray Cones, by Wessam Bahnassi 8. Reflection and Refraction Formulas, by Eric Haines 9. The Schlick Fresnel Approximation, by Zander Majercik 10. Refraction Ray Cones for Texture Level of Detail, by Jakub Boksansky, Cyril Crassin, and Tomas Akenine-M\u00f6ller\n PART II: APIs and Tools, editor: David Hart 15. The Shader Binding Table Demystified, by Will Usher 16. Introduction to Vulkan Ray Tracing, by Matthew Rusch, Neil Bickford, and Nuno Subtil 17. Using Bindless Resources with DirectX Raytracing, by Matt Pettineo 18. WebRays: Ray Tracing on the Web, by Nick Vitsas, Anastasios Gkaravelis, Andreas A. Vasilakis, and Georgios Papaioannou 19. Visualizing and Communicating Errors in Rendered Images, by Pontus Andersson, Jim Nilsson, and Tomas Akenine-M\u00f6ller\n PART III: Sampling, editor: Thomas M\u00fcller 20. Multiple Importance Sampling 101, by Anders Lindqvist 21. The Alias Method for Sampling Discrete Distributions, by Chris Wyman 22. Weighted Reservoir Sampling: Randomly Sampling Streams, by Chris Wyman 23. Rendering Many Lights with Grid-Based Reservoirs, by Jakub Boksansky, Paula Jukarainen, and Chris Wyman\n PART IV: Shading and Effects, editor: Cem Yuksel 25. Temporally Reliable Motion Vectors for Better Use of Temporal Information, by Zheng Zeng, Shiqiu Liu, Jinglei Yang, Lu Wang, and Ling-Qi Yan 26. Ray Traced Level of Detail Cross-Fades Made Easy, by Holger Gruen 27. Ray Tracing Decals, by Wessam Bahnassi 28. Billboard Ray Tracing for Impostors and Volumetric Effects, by Felix Br\u00fcll, Robin Fynn Diedrichs, and Thorsten Grosch\n PART V: Intersection, editor: Angelo Pesce 32. Fast and Robust Ray/OBB Intersection Using the Lorentz Transformation, by Rodolfo Sabino, Creto Augusto Vidal, Joaquim Bento Cavalcante-Neto, and Jos\u00e9 Gilvan Rodrigues Maia 33. Real-Time Rendering of Complex Fractals, by Vin\u00edcius da Silva, Tiago Novello, H\u00e9lio Lopes, and Luiz Velho\n PART VI: Performance, editors: Josef Spjut and Michael Vance 38. CPU Performance in DXR, by Peter Morley 39. Inverse Transform Sampling Using Ray Tracing Hardware, by Nate Morrical and Stefan Zellmann 40. Accelerating Boolean Visibility Operations Using RTX Visibility Masks, by Dirk Gerrit van Antwerpen and Oliver Klehm 41. Practical Spatial Hash Map Updates, by Pascal Gautron 42. Efficient Spectral Rendering on the GPU for Predictive Rendering, by David Murray, Alban Fichet, and Romain Pacanowski 43. Efficient Unbiased Volume Path Tracing on the GPU, by Nikolai Hofmann and Alex Evans 44. Path Tracing RBF Particle Volumes, by Aaron Knoll, Gregory P. Johnson, and Johannes Meng 45. Fast Volumetric Gradient Shading Approximations for Scientific Ray Tracing, by Carson Brownlee and David DeMarle\n PART VII: Ray Tracing in the Wild, editor: Jacob Munkberg 46. Ray Tracing in Control, by Juha Sj\u00f6holm, Paula Jukarainen, and Tatu Aalto 47. Light Sampling in Quake 2 Using Subset Importance Sampling, by Tobias Zirr 48. Ray Tracing in Fortnite, by Patrick Kelly, Yuriy O&#39;Donnell, Kenzo ter Elst, Juan Ca\u00f1ada, and Evan Hart 49. ReBLUR: A Hierarchical Recurrent Denoiser, by Dmitry Zhdan 50. Practical Solutions for Ray Tracing Content Compatibility in Unreal Engine 4, by Evan Hart", "posttime": "2021-08-07 22:54:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ffd\u8e2a,tracing,\u4f5c\u8005", "title": "\u5149\u7ebf\u8ffd\u8e2a\u5b9d\u77f3 II", "title_en": "Ray Tracing Gems II", "transed": 1, "url": "http://www.realtimerendering.com/raytracinggems/rtg2/index.html", "via": "", "real_tags": ["\u8ffd\u8e2a", "tracing", "\u4f5c\u8005"]}, {"category": "", "categoryclass": "", "imagename": "81af637076387cd4f97005f3a8ead0cc.jpg", "infoid": 1071973, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7ee7\u7eed\u8fdb\u5165\u610f\u60f3\u4e0d\u5230\u7684\u89d2\u843d\u3002\u8fd9\u6b21\u662f\u9493\u9c7c\u90ae\u4ef6\u3002\u5728\u4e00\u9879\u5c0f\u578b\u7814\u7a76\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u8bed\u8a00\u6a21\u578b GPT-3 \u4ee5\u53ca\u5176\u4ed6\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1\u5e73\u53f0\uff0c\u663e\u7740\u964d\u4f4e\u5927\u89c4\u6a21\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\u7684\u8fdb\u5165\u95e8\u69db\u3002\u957f\u671f\u4ee5\u6765\uff0c\u7814\u7a76\u4eba\u5458\u4e00\u76f4\u5728\u4e89\u8bba\u8bc8\u9a97\u8005\u662f\u5426\u503c\u5f97\u52aa\u529b\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u7136\u540e\u751f\u6210\u5f15\u4eba\u5165\u80dc\u7684\u7f51\u7edc\u9493\u9c7c\u6d88\u606f\u3002\u6bd5\u7adf\uff0c\u7fa4\u53d1\u7f51\u7edc\u9493\u9c7c\u90ae\u4ef6\u65e2\u7b80\u5355\u53c8\u516c\u5f0f\u5316\uff0c\u5e76\u4e14\u5df2\u7ecf\u975e\u5e38\u6709\u6548\u3002\u4e0d\u8fc7\uff0c\u9ad8\u5ea6\u9488\u5bf9\u6027\u548c\u91cf\u8eab\u5b9a\u5236\u7684\u201c\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u201d\u6d88\u606f\u7f16\u5199\u8d77\u6765\u66f4\u52a0\u8d39\u529b\u3002\u8fd9\u5c31\u662f NLP \u53ef\u80fd\u51fa\u5947\u5730\u6d3e\u4e0a\u7528\u573a\u7684\u5730\u65b9\u3002\u672c\u5468\u5728\u62c9\u65af\u7ef4\u52a0\u65af\u4e3e\u884c\u7684 Black Hat \u548c Defcon \u5b89\u5168\u4f1a\u8bae\u4e0a\uff0c\u65b0\u52a0\u5761\u653f\u5e9c\u6280\u672f\u5c40\u7684\u4e00\u4e2a\u56e2\u961f\u5c55\u793a\u4e86\u6700\u8fd1\u7684\u4e00\u9879\u5b9e\u9a8c\uff0c\u4ed6\u4eec\u5411 200\u4ed6\u4eec\u7684\u540c\u4e8b\u3002\u4e24\u6761\u6d88\u606f\u90fd\u5305\u542b\u5b9e\u9645\u4e0a\u5e76\u975e\u6076\u610f\u7684\u94fe\u63a5\uff0c\u53ea\u662f\u7b80\u5355\u5730\u5411\u7814\u7a76\u4eba\u5458\u62a5\u544a\u4e86\u70b9\u51fb\u7387\u3002\u4ed6\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u70b9\u51fb AI \u751f\u6210\u7684\u6d88\u606f\u4e2d\u7684\u94fe\u63a5\u7684\u4eba\u6bd4\u4eba\u5de5\u7f16\u5199\u7684\u6d88\u606f\u4e2d\u7684\u94fe\u63a5\u8981\u591a\u2014\u2014\u5e45\u5ea6\u5f88\u5927\u3002 \u201c\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u4eba\u5de5\u667a\u80fd\u9700\u8981\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\u8bad\u7ec3\u4e00\u4e2a\u771f\u6b63\u597d\u7684\u6a21\u578b\u9700\u8981\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u201d\u653f\u5e9c\u6280\u672f\u5c40\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6 Eugene Lim \u8bf4\u3002 \u201c\u4f46\u662f\u4e00\u65e6\u4f60\u628a\u5b83\u653e\u5728\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1\u4e0a\uff0c\u5b83\u5c31\u4f1a\u82b1\u8d39\u51e0\u7f8e\u5206\uff0c\u800c\u4e14\u5b83\u771f\u7684\u5f88\u5bb9\u6613\u4f7f\u7528\u2014\u2014\u53ea\u9700\u8f93\u5165\u6587\u672c\uff0c\u6587\u672c\u8f93\u51fa\u3002\u4f60\u751a\u81f3\u4e0d\u5fc5\u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u53ea\u9700\u7ed9\u5b83\u4e00\u4e2a\u63d0\u793a\uff0c\u5b83\u5c31\u4f1a\u7ed9\u4f60\u8f93\u51fa\u3002\u56e0\u6b64\uff0c\u8fd9\u964d\u4f4e\u4e86\u8fdb\u5165\u66f4\u591a\u53d7\u4f17\u7684\u95e8\u69db\uff0c\u5e76\u589e\u52a0\u4e86\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u7684\u6f5c\u5728\u76ee\u6807\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u5927\u89c4\u6a21\u7684\u6bcf\u5c01\u7535\u5b50\u90ae\u4ef6\u90fd\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u6536\u4ef6\u4eba\u8fdb\u884c\u4e2a\u6027\u5316\u3002\u201d\u7814\u7a76\u4eba\u5458\u5c06 OpenAI \u7684 GPT-3 \u5e73\u53f0\u4e0e\u5176\u4ed6\u4e13\u6ce8\u4e8e\u4e2a\u6027\u5206\u6790\u7684\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1\u4ea7\u54c1\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u751f\u6210\u9002\u5408\u540c\u4e8b\u80cc\u666f\u548c\u7279\u5f81\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u3002\u4e13\u6ce8\u4e8e\u4eba\u683c\u5206\u6790\u7684\u673a\u5668\u5b66\u4e60\u65e8\u5728\u6839\u636e\u884c\u4e3a\u8f93\u5165\u9884\u6d4b\u4e00\u4e2a\u4eba\u7684\u503e\u5411\u548c\u5fc3\u6001\u3002\u901a\u8fc7\u901a\u8fc7\u591a\u4e2a\u670d\u52a1\u8fd0\u884c\u8f93\u51fa\uff0c\u7814\u7a76\u4eba\u5458\u80fd\u591f\u5f00\u53d1\u4e00\u4e2a\u7ba1\u9053\uff0c\u5728\u53d1\u9001\u4e4b\u524d\u6574\u7406\u548c\u5b8c\u5584\u7535\u5b50\u90ae\u4ef6\u3002\u4ed6\u4eec\u8bf4\uff0c\u7ed3\u679c\u542c\u8d77\u6765\u201c\u975e\u5e38\u4eba\u6027\u5316\u201d\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e73\u53f0\u81ea\u52a8\u63d0\u4f9b\u4e86\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ec6\u8282\uff0c\u4f8b\u5982\u5728\u6307\u793a\u4e3a\u5c45\u4f4f\u5728\u65b0\u52a0\u5761\u7684\u4eba\u751f\u6210\u5185\u5bb9\u65f6\u63d0\u5230\u4e86\u65b0\u52a0\u5761\u6cd5\u5f8b\u3002\u867d\u7136\u4ed6\u4eec\u5bf9\u5408\u6210\u4fe1\u606f\u7684\u8d28\u91cf\u4ee5\u53ca\u4ed6\u4eec\u4ece\u540c\u4e8b\u90a3\u91cc\u83b7\u5f97\u7684\u70b9\u51fb\u6b21\u6570\u4e0e\u4eba\u5de5\u5408\u6210\u4fe1\u606f\u7684\u70b9\u51fb\u6b21\u6570\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u8be5\u5b9e\u9a8c\u53ea\u662f\u7b2c\u4e00\u6b65\u3002\u6837\u672c\u91cf\u76f8\u5bf9\u8f83\u5c0f\uff0c\u76ee\u6807\u5e93\u5728\u5c31\u4e1a\u548c\u5730\u7406\u533a\u57df\u65b9\u9762\u76f8\u5f53\u540c\u8d28\u3002\u6b64\u5916\uff0c\u4eba\u5de5\u751f\u6210\u7684\u6d88\u606f\u548c AI \u5373\u670d\u52a1\u7ba1\u9053\u751f\u6210\u7684\u6d88\u606f\u90fd\u662f\u7531\u529e\u516c\u5ba4\u5185\u90e8\u4eba\u5458\u521b\u5efa\u7684\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4ece\u8fdc\u5904\u53d1\u51fa\u6b63\u786e\u8bed\u6c14\u7684\u5916\u90e8\u653b\u51fb\u8005\u3002 \u201c\u6709\u5f88\u591a\u53d8\u91cf\u9700\u8981\u8003\u8651\uff0c\u201d\u653f\u5e9c\u6280\u672f\u5c40\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6 Tan Kee Hock \u8bf4\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u53d1\u73b0\u4ecd\u4fc3\u4f7f\u7814\u7a76\u4eba\u5458\u66f4\u6df1\u5165\u5730\u601d\u8003\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1\u5982\u4f55\u5728\u7f51\u7edc\u9493\u9c7c\u548c\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u4f8b\u5982\uff0cOpenAI \u672c\u8eab\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u62c5\u5fc3\u81ea\u5df1\u7684\u670d\u52a1\u6216\u5176\u4ed6\u7c7b\u4f3c\u670d\u52a1\u53ef\u80fd\u88ab\u6ee5\u7528\u3002\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u5b83\u548c\u5176\u4ed6\u4e25\u8c28\u7684\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1\u63d0\u4f9b\u5546\u90fd\u6709\u660e\u786e\u7684\u884c\u4e3a\u51c6\u5219\uff0c\u8bd5\u56fe\u5ba1\u8ba1\u4ed6\u4eec\u7684\u5e73\u53f0\u662f\u5426\u5b58\u5728\u6f5c\u5728\u7684\u6076\u610f\u6d3b\u52a8\uff0c\u751a\u81f3\u8bd5\u56fe\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u9a8c\u8bc1\u7528\u6237\u8eab\u4efd\u3002 \u201c\u8bed\u8a00\u6a21\u578b\u7684\u6ee5\u7528\u662f\u4e00\u4e2a\u5168\u884c\u4e1a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u975e\u5e38\u91cd\u89c6\u8fd9\u4e00\u95ee\u9898\uff0c\u4f5c\u4e3a\u6211\u4eec\u5bf9\u5b89\u5168\u548c\u8d1f\u8d23\u4efb\u5730\u90e8\u7f72\u4eba\u5de5\u667a\u80fd\u7684\u627f\u8bfa\u7684\u4e00\u90e8\u5206\uff0c\u201dOpenAI \u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u544a\u8bc9 WIRED\u3002 \u201c\u6211\u4eec\u901a\u8fc7\u6211\u4eec\u7684 API \u6388\u4e88\u5bf9 GPT-3 \u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5e76\u4e14\u5728 GPT-3 \u4e0a\u7ebf\u4e4b\u524d\u6211\u4eec\u4f1a\u5ba1\u67e5 GPT-3 \u7684\u6bcf\u4e00\u6b21\u751f\u4ea7\u4f7f\u7528\u3002\u6211\u4eec\u91c7\u53d6\u6280\u672f\u63aa\u65bd\uff0c\u4f8b\u5982\u901f\u7387\u9650\u5236\uff0c\u4ee5\u51cf\u5c11 API \u7528\u6237\u6076\u610f\u4f7f\u7528\u7684\u53ef\u80fd\u6027\u548c\u5f71\u54cd\u3002\u6211\u4eec\u7684\u4e3b\u52a8\u76d1\u63a7\u7cfb\u7edf\u548c\u5ba1\u8ba1\u65e8\u5728\u5c3d\u65e9\u53d1\u73b0\u6ee5\u7528\u7684\u6f5c\u5728\u8bc1\u636e\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u63d0\u9ad8\u6211\u4eec\u5b89\u5168\u5de5\u5177\u7684\u51c6\u786e\u6027\u548c\u6709\u6548\u6027\u3002\u201d OpenAI \u5bf9\u53cd\u6ee5\u7528\u63aa\u65bd\u8fdb\u884c\u4e86\u81ea\u5df1\u7684\u7814\u7a76\uff0c\u653f\u5e9c\u6280\u672f\u673a\u6784\u7684\u7814\u7a76\u4eba\u5458\u5411\u516c\u53f8\u901a\u62a5\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u7814\u7a76\u4eba\u5458\u5f3a\u8c03\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u76d1\u63a7\u8fd9\u4e9b\u670d\u52a1\u662f\u5426\u5b58\u5728\u6f5c\u5728\u6ee5\u7528\u4e0e\u5bf9\u5408\u6cd5\u5e73\u53f0\u7528\u6237\u8fdb\u884c\u4fb5\u5165\u6027\u76d1\u63a7\u4e4b\u95f4\u5b58\u5728\u7d27\u5f20\u5173\u7cfb\u3002\u66f4\u590d\u6742\u7684\u662f\uff0c\u5e76\u975e\u6240\u6709 AI \u5373\u670d\u52a1\u63d0\u4f9b\u5546\u90fd\u5173\u5fc3\u51cf\u5c11\u5bf9\u5176\u5e73\u53f0\u7684\u6ee5\u7528\u3002\u6709\u4e9b\u751a\u81f3\u53ef\u80fd\u6700\u7ec8\u8fce\u5408\u9a97\u5b50\u3002 \u201c\u771f\u6b63\u8ba9\u6211\u4eec\u611f\u5230\u60ca\u8bb6\u7684\u662f\uff0c\u8bbf\u95ee\u8fd9\u4e9b AI API \u662f\u591a\u4e48\u5bb9\u6613\uff0c\u201dLim \u8bf4\u3002\u201c\u6709\u4e9b\u50cf OpenAI \u975e\u5e38\u4e25\u683c\u548c\u4e25\u683c\uff0c\u4f46\u5176\u4ed6\u63d0\u4f9b\u5546\u63d0\u4f9b\u514d\u8d39\u8bd5\u7528\uff0c\u4e0d\u9a8c\u8bc1\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4e0d\u8981\u201d\u8981\u6c42\u4fe1\u7528\u5361\u3002\u4f60\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u65b0\u7684\u514d\u8d39\u8bd5\u7528\u7248\u5e76\u5236\u4f5c\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u79cd\u6280\u672f\u5148\u8fdb\u7684\u8d44\u6e90\uff0c\u6f14\u5458\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u3002\u201c\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u65b0\u52a0\u5761\u653f\u5e9c\u548c\u6b27\u76df\u5f00\u53d1\u7684\u4eba\u5de5\u667a\u80fd\u6cbb\u7406\u6846\u67b6\u53ef\u4ee5\u5e2e\u52a9\u4f01\u4e1a\u89e3\u51b3\u6ee5\u7528\u95ee\u9898\u3002\u4f46\u4ed6\u4eec\u4e5f\u5c06\u90e8\u5206\u7814\u7a76\u91cd\u70b9\u653e\u5728\u53ef\u80fd\u68c0\u6d4b\u5408\u6210\u6216\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u7684\u5de5\u5177\u4e0a\u2014\u2014\u8fd9\u662f\u4e00\u9879\u5177\u6709\u6311\u6218\u6027\u7684\u5de5\u4f5c\u3002\u968f\u7740\u6df1\u5ea6\u9020\u5047\u548c AI \u751f\u6210\u7684\u5047\u65b0\u95fb\u6fc0\u589e\uff0c\u8fd9\u4e2a\u8bdd\u9898\u4e5f\u53d7\u5230\u4e86\u5173\u6ce8\u3002\u7814\u7a76\u4eba\u5458\u518d\u6b21\u4f7f\u7528 OpenAI \u7684 GPT-3 \u7b49\u6df1\u5ea6\u5b66\u4e60\u8bed\u8a00\u6a21\u578b\u5f00\u53d1\u4e86\u4e00\u4e2a\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06 AI \u751f\u6210\u7684\u6587\u672c\u4e0e\u4eba\u7c7b\u7f16\u5199\u7684\u6587\u672c\u533a\u5206\u5f00\u6765\u3002\u5176\u60f3\u6cd5\u662f\u6784\u5efa\u53ef\u4ee5\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u6807\u8bb0\u5408\u6210\u5a92\u4f53\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u66f4\u5bb9\u6613\u5730\u6355\u83b7\u53ef\u80fd\u7684 AI \u751f\u6210\u7684\u7f51\u7edc\u9493\u9c7c\u6d88\u606f\u3002\u4e0d\u8fc7\uff0c\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u968f\u7740\u5408\u6210\u5a92\u4f53\u7528\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u5408\u6cd5\u529f\u80fd\uff0c\u4f8b\u5982\u5ba2\u6237\u670d\u52a1\u901a\u4fe1\u548c\u8425\u9500\uff0c\u5b83\u5c06\u5f00\u53d1\u4ec5\u6807\u8bb0\u7f51\u7edc\u9493\u9c7c\u90ae\u4ef6\u7684\u7b5b\u9009\u5de5\u5177\u66f4\u52a0\u56f0\u96be\u3002\n\u201c\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u68c0\u6d4b\u5f88\u91cd\u8981\uff0c\u4f46\u901a\u5e38\u4e5f\u8981\u4e3a\u5373\u5c06\u5230\u6765\u7684\u53ef\u80fd\u6781\u5177\u5438\u5f15\u529b\u4e14\u4ee4\u4eba\u4fe1\u670d\u7684\u6d88\u606f\u505a\u597d\u51c6\u5907\uff0c\u201d\u653f\u5e9c\u6280\u672f\u5c40\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6 Glenice Tan \u8bf4\u3002 \u201c\u5b89\u5168\u57f9\u8bad\u4ecd\u7136\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u3002\u5c0f\u5fc3\u5e76\u4fdd\u6301\u6000\u7591\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u4ecd\u7136\u662f\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u201d\u6b63\u5982\u653f\u5e9c\u6280\u672f\u5c40\u7814\u7a76\u5458\u8482\u83ab\u897f\u00b7\u674e (Timothy Lee) \u6240\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4eba\u7c7b\u6a21\u4eff\u610f\u5473\u7740\u5bf9\u4e8e\u6f5c\u5728\u53d7\u5bb3\u8005\u800c\u8a00\uff0c\u6311\u6218\u4ecd\u7136\u76f8\u540c\uff0c\u56e0\u4e3a\u8d4c\u6ce8\u8d8a\u6765\u8d8a\u9ad8\u3002 \u201c\u4ed6\u4eec\u4ecd\u7136\u53ea\u9700\u8981\u505a\u5bf9\u4e00\u6b21\uff0c\u5c31\u7b97\u4f60\u6536\u5230\u6210\u5343\u4e0a\u4e07\u6761\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7f16\u5199\u7684\u7f51\u7edc\u9493\u9c7c\u90ae\u4ef6\u4e5f\u6ca1\u5173\u7cfb\uff0c\u201dLee \u8bf4\uff0c\u201c\u53ea\u6709\u4e00\u4e2a\u8ba9\u4f60\u63aa\u624b\u4e0d\u53ca\u2014\u2014\u7136\u540e\u8f70\u9686\u9686\uff01\u201d \ud83d\udcf1 \u5728\u6700\u65b0\u6b3e\u624b\u673a\u4e4b\u95f4\u7ea0\u7ed3\uff1f\u4e0d\u8981\u5bb3\u6015\u2014\u2014\u67e5\u770b\u6211\u4eec\u7684 iPhone \u8d2d\u4e70\u6307\u5357\u548c\u6700\u559c\u6b22\u7684 Android \u624b\u673a", "note_en": "Natural language processing continues to find its way  into unexpected corners. This time, it&#39;s  phishing emails. In a small study, researchers found that they could use the deep learning language model GPT-3, along with other AI-as-a-service platforms, to significantly lower the barrier to entry for crafting spearphishing campaigns at a massive scale.\n Researchers have long debated whether it would be worth the effort for scammers to train machine learning algorithms that could then generate compelling phishing messages. Mass phishing messages are simple and formulaic, after all, and are already highly effective. Highly targeted and tailored \u201cspearphishing\u201d messages are more labor intensive to compose, though. That&#39;s where NLP may come in surprisingly handy.\n At the Black Hat and Defcon security conferences in Las Vegas this week, a team from Singapore&#39;s Government Technology Agency presented a recent experiment in which they sent targeted phishing emails they crafted themselves and others generated by an AI-as-a-service platform to 200 of their colleagues. Both messages contained links that were not actually malicious but simply reported back clickthrough rates to the researchers. They were surprised to find that more people clicked the links in the AI-generated messages than the human-written ones\u2014by a significant margin.\n  \u201cResearchers have pointed out that AI requires some level of expertise. It takes millions of dollars to train a really good model,\u201d says Eugene Lim, a Government Technology Agency cybersecurity specialist. \u201cBut once you put it on AI-as-a-service it costs a couple of cents and it\u2019s really easy to use\u2014just text in, text out. You don\u2019t even have to run code, you just give it a prompt and it will give you output. So that lowers the barrier of entry to a much bigger audience and increases the potential targets for spearphishing. Suddenly every single email on a mass scale can be personalized for each recipient.\u201d\n The researchers used OpenAI&#39;s GPT-3 platform in conjunction with other AI-as-a-service products focused on personality analysis to generate phishing emails tailored to their colleagues&#39; backgrounds and traits. Machine learning focused on personality analysis aims to be predict a person&#39;s proclivities and mentality based on behavioral inputs. By running the outputs through multiple services, the researchers were able to develop a pipeline that groomed and refined the emails before sending them out. They say that the results sounded \u201cweirdly human\u201d and that the platforms automatically supplied surprising specifics, like mentioning a Singaporean law when instructed to generate content for people living in Singapore.\n  While they were impressed by the quality of the synthetic messages and how many clicks they garnered from colleagues versus the human-composed ones, the researchers note that the experiment was just a first step. The sample size was relatively small and the target pool was fairly homogenous in terms of employment and geographic region. Plus, both the human-generated messages and those generated by the AI-as-a-service pipeline were created by office insiders rather than outside attackers trying to strike the right tone from afar.\n  \u201cThere are lots of variables to account for,\u201d says Tan Kee Hock, a Government Technology Agency cybersecurity specialist.\n  Still, the findings spurred the researchers to think more deeply about how AI-as-a-service may play a role in phishing and spearphishing campaigns moving forward. OpenAI itself, for example, has long  feared the potential for  misuse of its own service or other similar ones. The researchers note that it and other scrupulous AI-as-a-service providers have clear codes of conduct, attempt to audit their platforms for potentially malicious activity, or even try to verify user identities to some degree.\n \u201cMisuse of language models is an industry-wide issue that we take very seriously as part of our commitment to the safe and responsible deployment of AI,\u201d OpenAI told WIRED in a statement. \u201cWe grant access to GPT-3 through our API, and we review every production use of GPT-3 before it goes live. We impose technical measures, such as rate limits, to reduce the likelihood and impact of malicious use by API users. Our active monitoring systems and audits are designed to surface potential evidence of misuse at the earliest possible stage, and we are continually working to improve the accuracy and effectiveness of our safety tools.\u201d\n  OpenAI does its own  studies on anti-abuse measures and the Government Technology Agency researchers notified the company about their work.\n The researchers emphasize, though, that in practice there&#39;s a tension between monitoring these services for potential abuse and conducting invasive surveillance on legitimate platform users. And what&#39;s even more complicated is that not all AI-as-a-service providers care about reducing abusive uses of their platforms. Some may ultimately even cater to scammers.\n \u201cReally what surprised us was how easy it is to get access to these AI APIs,&#34; Lim says. \u201cSome like OpenAI are very strict and stringent, but other providers offer free trials, don\u2019t verify your email address, don\u2019t ask for a credit card. You could just keep using new free trials and churning out content. It&#39;s a technically advanced resource that actors can get access to easily.\u201d\n AI governance frameworks like those  in development by the Singaporean government and  European Union could aid businesses in addressing abuse, the researchers say. But they also focused a portion of their research on tools that could potentially detect synthetic or AI-generated phishing emails\u2014a challenging topic that has also gained attention as deepfakes and AI-generated fake news proliferate. The researchers again used deep learning language models like OpenAI&#39;s GPT-3 to develop a framework that can differentiate AI generated text from that composed by humans. The idea is to build mechanisms that can flag synthetic media in emails to make it easier to catch possible AI-generated phishing messages.\n The researchers note, though, that as synthetic media is used for more and more legitimate functions, like customer service communications and marketing, it will be even more difficult to develop screening tools that flag only phishing messages.\n \u201cPhishing email detection is important, but also just generally be prepared for messages that are coming that may be extremely appealing and then also convincing,\u201d Government Technology Agency cybersecurity specialist Glenice Tan says. \u201cThere&#39;s still a role for security training. Be careful and remain skeptical. Unfortunately, those are still important things.\u201d\n  And as Government Technology Agency researcher Timothy Lee puts it, the impressive human mimicry of AI-generated phishing emails means that for potential victims the challenge is still the same as the stakes grow ever higher.\n \u201cThey still only need to get it right once, it doesn\u2019t matter if you receive thousands of phishing messages written all different ways,&#34; Lee says. &#34;Just one that caught you off guard\u2014and boom!\u201d\n   \ud83d\udcf1 Torn between the latest phones? Never fear\u2014check out our  iPhone buying guide and  favorite Android phones", "posttime": "2021-08-07 22:54:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u5199,wrote,\u4eba\u5de5\u667a\u80fd", "title": "\u5728\u6700\u8fd1\u7684\u6d4b\u8bd5\u4e2d\uff0cAI \u7f16\u5199\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u6bd4\u4eba\u7c7b\u66f4\u597d", "title_en": "AI Wrote Better Phishing Emails Than Humans in a Recent Test", "transed": 1, "url": "https://www.wired.com/story/ai-phishing-emails/", "via": "", "real_tags": ["\u7f16\u5199", "wrote", "\u4eba\u5de5\u667a\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071972, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u8bf7\u6c42\u6709\u95ee\u9898\u3002\u6211\u4eec\u6b63\u5728\u52aa\u529b\u5c3d\u5feb\u4fee\u590d\u5b83\u3002", "note_en": "There was a problem with this request. We&#39;re working on getting it fixed as soon as we can.", "posttime": "2021-08-07 22:54:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u5757\u5316,stop,\u8bf7\u6c42", "title": "Droidlet\uff0c\u6a21\u5757\u5316\u6784\u5efa\u667a\u80fd\u4ee3\u7406\u7684\u4e00\u7ad9\u5f0f\u5546\u5e97", "title_en": "Droidlet, a one-stop shop for modularly building intelligent agents", "transed": 1, "url": "https://ai.facebook.com/blog/droidlet-a-one-stop-shop-for-modularly-building-intelligent-agents/", "via": "", "real_tags": ["\u6a21\u5757\u5316", "stop", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "21c56cf841bd264b400a72867d25d478.jpg", "infoid": 1071971, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c03\u67e5\u58a8\u897f\u54e5\u6e7e\u5e95\u90e8\u7684\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u201c\u6b7b\u533a\u201d\uff0c\u5b83\u201c\u76f8\u5f53\u4e8e\u8d85\u8fc7 400 \u4e07\u82f1\u4ea9\u7684\u6816\u606f\u5730\u201d\u3002\u8c03\u67e5\u58a8\u897f\u54e5\u6e7e\u5e95\u90e8\u7684\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u201c\u6b7b\u533a\u201d\u2014\u2014\u90a3\u91cc\u7684\u6c27\u6c14\u542b\u91cf\u4f4e\uff0c\u4f7f\u8be5\u5730\u533a\u4e0d\u9002\u5408\u9c7c\u7c7b\u751f\u5b58\u2014\u2014\u201c\u76f8\u5f53\u4e8e\u8d85\u8fc7 400 \u4e07\u82f1\u4ea9\u7684\u6816\u606f\u5730\u3002\u201d\u7f8e\u56fd\u56fd\u5bb6\u6d77\u6d0b\u548c\u5927\u6c14\u7ba1\u7406\u5c40 (NOAA) \u672c\u5468\u516c\u5e03\u4e86\u8c03\u67e5\u7ed3\u679c\uff0c\u8fd9\u4e9b\u7ed3\u679c\u662f\u7531\u4e58\u5750\u7814\u7a76\u5de1\u822a\u7684\u79d1\u5b66\u5bb6\u53d1\u73b0\u7684\u3002\u901a\u5e38\uff0c\u6b7b\u533a\u8986\u76d6\u7ea6 5,400 \u5e73\u65b9\u82f1\u91cc\u3002\u4f46\u4eca\u5e74\u6d77\u6e7e\u9644\u8fd1\u7684\u7f3a\u6c27\u533a\u9762\u79ef\u7ea6\u4e3a 6,334 \u5e73\u65b9\u82f1\u91cc\u3002 \u201c\u4eca\u5e74\uff0c\u6211\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u770b\u5230\u6c14\u5019\u53d8\u5316\u5bf9\u6211\u4eec\u793e\u533a\u7684\u6df1\u8fdc\u5f71\u54cd\u2014\u2014\u4ece\u897f\u90e8\u5386\u53f2\u6027\u5e72\u65f1\u5230\u6d2a\u6c34\u4e8b\u4ef6\u3002\u6c14\u5019\u4e0e\u6c34\u76f4\u63a5\u76f8\u5173\uff0c\u5305\u62ec\u8425\u517b\u7269\u6c61\u67d3\u6d41\u5165\u58a8\u897f\u54e5\u6e7e\uff0c\u201d\u73af\u5883\u4fdd\u62a4\u7f72\u6c34\u52a1\u52a9\u7406\u7f72\u957f Radhika Fox \u5728\u65b0\u95fb\u7a3f\u4e2d\u8bf4\u3002 \u201c\u5728\u6211\u4eec\u52aa\u529b\u89e3\u51b3\u58a8\u897f\u54e5\u6e7e\u7f3a\u6c27\u533a\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8003\u8651\u6c14\u5019\u53d8\u5316\uff0c\u6211\u4eec\u5fc5\u987b\u52a0\u5f3a\u5408\u4f5c\u548c\u4f19\u4f34\u5173\u7cfb\uff0c\u4ee5\u53d6\u5f97\u5fc5\u8981\u7684\u8fdb\u5c55\uff0c\u201d\u798f\u514b\u65af\u8865\u5145\u9053\u3002\u7f8e\u56fd\u56fd\u5bb6\u6d77\u6d0b\u548c\u5927\u6c14\u7ba1\u7406\u5c40\u8868\u793a\uff0c\u5f53\u57ce\u5e02\u548c\u519c\u573a\u7684\u201c\u8fc7\u91cf\u517b\u5206\u201d\uff08\u201c\u5f84\u6d41\u201d\uff09\u6d41\u5165\u6c34\u4e2d\uff0c\u85fb\u7c7b\u8150\u70c2\u5e76\u6700\u7ec8\u4f7f\u8be5\u5730\u533a\u65e0\u6cd5\u9002\u5408\u5927\u591a\u6570\u6d77\u6d0b\u751f\u7269\u5c45\u4f4f\u65f6\uff0c\u6b7b\u533a\u5c31\u4f1a\u5f62\u6210\u3002\u7814\u7a76\u8868\u660e\uff0c\u7f3a\u6c27\u6c34\u57df\u53ef\u4ee5\u6781\u5927\u5730\u6539\u53d8\u6d77\u6d0b\u7684\u996e\u98df\u3001\u7e41\u6b96\u548c\u751f\u957f\u3002\u6839\u636e\u5f84\u6d41\u6570\u636e\uff0cNOAA \u9884\u6d4b\u5e73\u5747\u7f3a\u6c27\u533a\u5c06\u6db5\u76d6 4,880 \u5e73\u65b9\u82f1\u91cc\uff0c\u800c\u81ea\u6d4b\u91cf\u5f00\u59cb\u4ee5\u6765\u8bb0\u5f55\u7684\u6700\u5927\u7f3a\u6c27\u533a\u4e3a 2017 \u5e74\u7684 8,776 \u5e73\u65b9\u82f1\u91cc\u3002\nNOAA \u56fd\u5bb6\u6d77\u6d0b\u5c40\u52a9\u7406\u5c40\u957f Nicole LeBoeuf \u5728\u65b0\u95fb\u7a3f\u4e2d\u8868\u793a\uff0c\u4ece\u5de1\u822a\u4e2d\u6536\u96c6\u7684\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u5efa\u6a21\uff0c\u65e8\u5728\u201c\u6a21\u62df\u6cb3\u6d41\u6d41\u91cf\u3001\u8425\u517b\u8d1f\u8377\u548c\u6d77\u6d0b\u6761\u4ef6\u5982\u4f55\u5f71\u54cd\u6d77\u6e7e\u7f3a\u6c27\u6761\u4ef6\u5e76\u5f71\u54cd\u751f\u7269\u8d44\u6e90\u3002 \u201d \u201c\u901a\u8fc7\u4e86\u89e3\u8fd9\u4e9b\u7f3a\u6c27\u4e8b\u4ef6\u7684\u89c4\u6a21\u548c\u5f71\u54cd\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u5236\u5b9a\u6700\u4f73\u7b56\u7565\uff0c\u4ee5\u51cf\u5c11\u5176\u89c4\u6a21\u5e76\u5c06\u5bf9\u6211\u4eec\u6cbf\u6d77\u8d44\u6e90\u548c\u7ecf\u6d4e\u7684\u5f71\u54cd\u964d\u81f3\u6700\u4f4e\uff0c\u201dLeBoeuf \u603b\u7ed3\u9053\u3002\u7f8e\u56fd\u7684\u53d8\u5316\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u5feb\uff01\u5c06\u201c\u53d8\u5316\u4e2d\u7684\u7f8e\u56fd\u201d\u6dfb\u52a0\u5230\u60a8\u7684 Facebook \u6216 Twitter \u63d0\u8981\uff0c\u4ee5\u968f\u65f6\u4e86\u89e3\u65b0\u95fb\u3002\u540c\u6837\uff0c\u636e\u300a\u536b\u62a5\u300b\u62a5\u9053\uff0c\u4fc4\u52d2\u5188\u5dde\u9644\u8fd1\u4e5f\u62a5\u544a\u4e86\u4f4e\u6c27\u533a\uff0c\u81ea 2002 \u5e74\u4ee5\u6765\u6bcf\u5e74\u90fd\u5728\u90a3\u91cc\u53d1\u751f\u3002\u7136\u800c\uff0c\u4eca\u5e74\uff0c\u8fd9\u4e9b\u533a\u57df\u7684\u62a5\u544a\u6bd4\u51e0\u5341\u5e74\u6765\u66f4\u65e9\u3002\u7f8e\u56fd\u56fd\u5bb6\u6d77\u6d0b\u548c\u5927\u6c14\u7ba1\u7406\u5c40\u5408\u4f5c\u7814\u7a76\u6240 CIMERS \u4e3b\u4efb\u3001\u4fc4\u52d2\u5188\u5dde\u7acb\u5927\u5b66\u6559\u6388\u5f17\u6717\u897f\u65af\u00b7\u9648 (Francis Chan) \u5728\u4e00\u4efd\u65b0\u95fb\u7a3f\u4e2d\u8bf4\uff1a\u201c\u4f4e\u6eb6\u89e3\u6c27\u6c34\u5e73\u5df2\u6210\u4e3a\u592a\u5e73\u6d0b\u897f\u5317\u6d77\u5cb8\u7684\u5e38\u6001\uff0c\u4f46\u8fd9\u4e00\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u6bd4\u6211\u4eec\u5728\u8bb0\u5f55\u4e2d\u770b\u5230\u7684\u8981\u65e9\u5f97\u591a\u3002\u201d . \u201c\u8fd9\u662f35\u5e74\u6765\u4e0a\u5347\u6d41\u5b63\u8282\u7684\u6700\u65e9\u5f00\u59cb\u3002\u201d", "note_en": "Scientists surveying the bottom of the Gulf of Mexico discovered a \u201cdead-zone\u201d that was \u201cequivalent to more than four million acres of habitat.\u201d\n  Scientists surveying the bottom of the Gulf of Mexico discovered a \u201cdead-zone\u201d \u2014 where low oxygen levels make the area inhospitable to fish \u2014\u00a0 \u201cequivalent to more than four million acres of habitat.\u201d\n The National Oceanographic and Atmospheric Administration (NOAA)   released the survey\u2019s findings  this week, which were uncovered by scientists aboard a research cruise. Typically, dead zones cover around 5,400 square miles. But the hypoxic zone near the Gulf this year measured\u00a0around 6,334 square miles.\n \u201cThis year, we have seen again and again the profound effect that climate change has on our communities \u2014 from historic drought in the west to flooding events. Climate is directly linked to water, including the flow of nutrient pollution into the Gulf of Mexico,\u201d Environmental Protection Agency Assistant Administrator for Water Radhika Fox said in the release.\n \u201cAs we work to address the Gulf of Mexico hypoxic zone, we must consider climate change and we must strengthen our collaboration and partnerships to make needed progress,\u201d Fox added.\n         Dead zones develop when \u201cexcess nutrients\u201d from cities and farms drain \u2014 \u201drunoff\u201d \u2014 into the water, decaying algae and eventually making the area uninhabitable for most marine life, according to NOAA. Research indicates that hypoxic waters can drastically alter marine diets, reproduction and growth.\n Based on runoff data, NOAA predicted the average hypoxic zone would encompass 4,880 square miles, while the largest hypoxic zone recorded since measurements began was 8,776 square miles in 2017.\n Nicole LeBoeuf, Assistant Administrator for NOAA\u2019s National Ocean Service, said in the release that data collected from the cruise will aid in modeling designed \u201cto simulate how river discharge, nutrient loads, and oceanographic conditions influence hypoxic conditions in the Gulf and affect living resources.\u201d\n \u201cBy understanding the scale and effects of these hypoxia events, we can better inform the best strategies to reduce its size and minimize impacts to our coastal resources and economy,\u201d LeBoeuf concluded.\n  America is changing faster than ever!  Add Changing America to your   Facebook  or   Twitter  feed to stay on top of the news.\n  Similarly, hypoxic zones were reported near Oregon, where they have occurred each year since 2002, according to The Guardian. Yet this year, the zones were reported earlier than they have been in decades.\n \u201cLow dissolved oxygen levels have become the norm on the Pacific Northwest coast, but this event started much earlier than we&#39;ve seen in our records,\u201d Oregon State University Professor Francis Chan, director of the NOAA cooperative institute CIMERS,   said in a release . \u201cThis is the earliest start to the upwelling season in 35 years.\u201d", "posttime": "2021-08-07 22:53:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u79d1\u5b66\u5bb6,\u53d1\u73b0,discovery,\u7f3a\u6c27", "title": "\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u4e86\u5728\u7f8e\u56fd\u4e24\u4e2a\u6d77\u5cb8\u4e0a\u6ca1\u6709\u4efb\u4f55\u751f\u7269\u53ef\u4ee5\u751f\u5b58\u7684\u6b7b\u533a", "title_en": "Scientists make discovery of dead zones where nothing can live on two US coasts", "transed": 1, "url": "https://thehill.com/changing-america/sustainability/climate-change/566674-scientists-make-shocking-discovery-of-dead", "via": "", "real_tags": ["\u7f8e\u56fd", "\u79d1\u5b66\u5bb6", "\u53d1\u73b0", "discovery", "\u7f3a\u6c27"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071969, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a \u8df3\u8f6c\u5230\u641c\u7d22 Nocom \u662f Nerds Inc \u4ece 2018 \u5e74 7 \u6708\u5230 2021 \u5e74 7 \u6708\u5728 2b2t \u4e0a\u4f7f\u7528\u7684\u5750\u6807\u6f0f\u6d1e\u3002\u56e0\u6b64\uff0c2b2t \u4f1a\u7acb\u5373\u663e\u793a\u60a8\u8be2\u95ee\u7684\u4efb\u4f55\u5757\u5750\u6807\u5f53\u524d\u662f\u5426\u5df2\u52a0\u8f7d\u3002\u5982\u679c\u5b83\u5f53\u524d\u5df2\u52a0\u8f7d\uff0c\u5b83\u4f1a\u544a\u8bc9\u60a8\u5728\u60a8\u8be2\u95ee\u7684\u5750\u6807\u5904\u6709\u54ea\u4e2a\u7279\u5b9a\u5757\u3002 Nocom \u662f Minecraft 1.12.2 PaperMC \u7b2c 196 \u4e2a\u8865\u4e01\u4e2d\u7684\u4e00\u4e2a\u7f3a\u9677/\u758f\u5ffd\uff0c\u79f0\u4e3a Fix block break desync\u3002\u5b83\u5728\u539f\u7248 Minecraft \u4e2d\u4e0d\u5b58\u5728\u3002\u5f53\u73a9\u5bb6\u8bf4\u4ed6\u4eec\u6b63\u5728\u6316\u6398\u4e00\u4e2a\u4f3c\u4e4e\u592a\u8fdc\u800c\u65e0\u6cd5\u5230\u8fbe\u7684\u5757\u65f6\uff0c\u8be5\u8865\u4e01\u4f1a\u6539\u53d8 Paper \u670d\u52a1\u5668\u7684\u884c\u4e3a\u3002\u5728\u539f\u7248 Minecraft \u4e2d\uff0c\u5f53 CPacketPlayerDigging \u6570\u636e\u5305\u8ddd\u79bb\u73a9\u5bb6\u8d85\u8fc7 6 \u4e2a\u65b9\u5757\u65f6\uff0c\u5b83\u4f1a\u88ab\u5b8c\u5168\u5ffd\u7565\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6ede\u540e\uff0c\u6709\u65f6\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4f1a\u5728\u73a9\u5bb6\u7684\u4f4d\u7f6e\u4e0a\u4ea7\u751f\u5206\u6b67\u3002\u56e0\u6b64\uff0c\u6b64\u7b56\u7565\u53ef\u80fd\u4f1a\u4e22\u5f03\u67d0\u4e9b\u5584\u610f\u7684\u5757\u6316\u6398\u6570\u636e\u5305\u3002\u7531\u4e8e\u670d\u52a1\u5668\u7b80\u5355\u5730\u5ffd\u7565\u4e86\u5ba2\u6237\u7aef\u58f0\u660e\u201c\u6211\u5df2\u7ecf\u5f00\u91c7\u4e86\u8fd9\u4e2a\u5757\u201d\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u540c\u6b65\uff0c\u4e00\u4e2a\u5e7d\u7075\u5757\u3002\u5ba2\u6237\u7aef\u8ba4\u4e3a\u5b83\u662f\u7a7a\u6c14\uff0c\u670d\u52a1\u5668\u8ba4\u4e3a\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u4f60\u4e0d\u80fd\u8d70\u8fc7\u7684\u8857\u533a\u3002\u8fd9\u662f\u56e0\u4e3a Minecraft \u7684\u5ba2\u6237\u7aef\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u201c\u4e50\u89c2\u7684\u201d\uff1a\u5982\u679c\u5b83\u6316\u6398\u4e00\u4e2a\u5757\uff0c\u5b83\u5047\u5b9a\u5b83\u88ab\u6316\u6398\uff0c\u9664\u975e\u670d\u52a1\u5668\u53e6\u6709\u8bf4\u660e\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6ca1\u6709\u53d1\u751f\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u5ffd\u7565\u4e86\u5ba2\u6237\u7aef\u5e76\u4e14\u4ece\u672a\u544a\u8bc9\u5b83\u201c\u653e\u7f6e\u90a3\u4e2a\u80cc\u201d\u3002\u8be5\u8865\u4e01\u7684\u521d\u59cb\u7248\u672c\u5728 2017 \u5e74 9 \u6708\u5728 Paper \u7684\u521d\u59cb\u7aef\u53e3\u4e2d\u6dfb\u52a0\u5230 1.12.2\uff0c\u53ea\u662f\u7b80\u5355\u5730\u6539\u53d8\u4e86\u884c\u4e3a\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u4e0d\u4f1a\u5ffd\u7565\u5757\u6316\u6398\uff0c\u800c\u662f\u56de\u590d\u8bf4\u201c\u4e0d\uff0c\u6211\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u201d t \u6211\u7684\u90a3\u4e2a\u3002\u628a (X=1,Y=2,Z=3) \u4f5c\u4e3a minecraft:obsidian&quot; \u653e\u56de\u53bb\u3002\u5728\u4ee3\u7801\u65b9\u9762\uff0c\u8fd9\u53ea\u662f\u8865\u4e01\u6dfb\u52a0\u7684\u552f\u4e00\u4e00\u884c\uff1a this.sendPacket(new PacketPlayOutBlockChange(worldserver, blockposition)); // Paper - Fix block break desync \u867d\u7136\u8fd9\u786e\u5b9e\u4fee\u590d\u4e86block break desync\uff08\u8865\u4e01\u88ab\u6070\u5f53\u5730\u547d\u540d\u4e3a\u201cFix block break desync\u201d\uff09\uff0c\u4f46\u5b83\u4e5f\u6253\u5f00\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u6f0f\u6d1e\u3002\u8fd9\u9002\u7528\u4e8e\u6bcf\u4e2a CPacketPlayerDigging \u56f4\u7ed5\u8ddd\u79bb\u73a9\u5bb6\u8d85\u8fc7 6 \u4e2a\u8857\u533a\u7684\u5750\u6807\u3002\u6ca1\u6709\u4e0a\u9650\uff0c\u53ea\u6709\u516d\u4e2a\u7684\u4e0b\u9650\u3002\u7b80\u5355\u5730\u901a\u8fc7\u5728\u5730\u56fe\u4e0a\u4ece -30M \u5230 +30M \u7684\u968f\u673a\u5750\u6807\u4e0a\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u201c\u6211\u6b63\u5728\u6316\u6398\u8fd9\u4e2a\u5757\u201d\uff0c\u670d\u52a1\u5668\u5c06\u88ab\u8feb\u5728\u73b0\u573a\u751f\u6210\u8be5\u5757\uff0c\u53ea\u662f\u4e3a\u4e86\u56de\u590d\u201c\u5e94\u8be5\u201d\u5728\u90a3\u91cc\u7684\u5757\uff0c\u201c\u4fee\u590d\u201d\u670d\u52a1\u5668\u6240\u5173\u6ce8\u7684\u4e0d\u540c\u6b65\u521a\u521a\u53d1\u751f\uff08\u800c\u5b9e\u9645\u4e0a\u5ba2\u6237\u7aef\u6b63\u5728\u6076\u610f\u53d1\u9001\u6570\u636e\u5305\uff09\u3002\u8fd9\u4f1a\u5bfc\u81f4\u57fa\u672c\u4e0a\u65e0\u9650\u91cf\u7684\u670d\u52a1\u5668\u5ef6\u8fdf\uff0c\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u5305\u5e76\u751f\u6210/\u52a0\u8f7d\u8fd9\u4e9b\u5757\u3002\u65e9\u5728 2018 \u5e74 4 \u6708\uff0c\u8fd9\u88ab\u7528\u4f5c\u961f\u5217\u8df3\u8fc7\u6f0f\u6d1e\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u65f6 Hause \u6839\u672c\u6ca1\u6709\u6570\u636e\u5305\u901f\u7387\u9650\u5236\u5668\u3002 Hause \u5c06\u5728 2019 \u5e74\u589e\u52a0\u8fd9\u6837\u7684\u901f\u7387\u9650\u5236\uff0c\u4f5c\u4e3a\u5bf9\u526f\u624b\u5f00\u5173\u58f0\u97f3\u5ef6\u8fdf\u6f0f\u6d1e\u7684\u56de\u5e94\u3002\n2018 \u5e74 7 \u6708\uff0c0x22 \u548c Babbaj \u521b\u5efa\u5e76\u6267\u884c\u4e86\u4e00\u9879\u8ba1\u5212\uff0c\u5c06\u8fd9\u79cd\u6ede\u540e/\u5d29\u6e83\u6f0f\u6d1e\u5229\u7528\u8f6c\u5316\u4e3a\u534f\u540c\u6f0f\u6d1e\u5229\u7528\u3002\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u4e2a\u8865\u4e01\u5b9e\u9645\u4e0a\u8ddd\u79bb\u5750\u6807\u6f0f\u6d1e\u5229\u7528\u53ea\u6709\u51e0\u82f1\u5bf8\u7684\u8ddd\u79bb\uff1a\u76ee\u524d\u7684\u8865\u4e01\u548c\u5750\u6807\u6f0f\u6d1e\u4e4b\u95f4\u7684\u552f\u4e00\u533a\u522b\u662f\u670d\u52a1\u5668\u4f1a\u5728\u73b0\u573a\u751f\u6210/\u52a0\u8f7d\u4e00\u4e2a\u5757\u6765\u54cd\u5e94\u4e00\u4e2a\u5757\u51b2\u5e8a\u3002\u5982\u679c\u8be5\u884c\u4e3a\u88ab\u5220\u9664\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5750\u6807\u6f0f\u6d1e\uff0c\u56e0\u4e3a\u5b83\u4f1a\u663e\u793a\u60a8\u6253\u7684\u5757\u662f\u5426\u5728\u52a0\u8f7d\u7684\u5757\u4e2d\uff0c\u65e0\u8bba\u8ddd\u79bb\u591a\u8fdc\u3002\u65e0\u8bba\u5757\u662f\u5426\u52a0\u8f7d\uff0c\u670d\u52a1\u5668\u90fd\u4f1a\u54cd\u5e94\u7684\u884c\u4e3a\u602a\u7656\u6b63\u662f\u5728\u6ede\u540e\u6f0f\u6d1e\u7684\u201c\u660e\u663e\u8865\u4e01\u201d\u4e2d\u5220\u9664\u7684\u884c\u4e3a\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u4e0d\u662f\u7b80\u5355\u5730\u9020\u6210\u53ef\u751f\u5b58\u7684\u5ef6\u8fdf\uff08\u4f8b\u5982\u8df3\u8fc7\u961f\u5217\uff09\uff0c\u800c\u662f\u5f00\u59cb\u6709\u610f\u5730\u3001\u53cd\u590d\u5730\u3001\u516c\u7136\u5730\u5c06\u5176\u63a8\u5230\u4f1a\u5bfc\u81f4\u670d\u52a1\u5668\u5d29\u6e83\u7684\u5730\u6b65\u3002\u8be5\u5d29\u6e83\u65e5\u5fd7\u5305\u62ec\u8be5\u8865\u4e01\u7684\u786e\u5207\u884c\uff0c\u5f88\u660e\u663e\uff0c\u5783\u573e\u90ae\u4ef6\u6570\u636e\u5305\u662f\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u3002 Hause [1] \u5728\u8fd9\u91cc\u62a5\u544a\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0celectricboy \u5728\u8fd9\u4e2a\u63d0\u4ea4\u4e2d\u5e94\u7528\u4e86\u660e\u663e\u7684\u8865\u4e01\u3002\u5b83\u662f\u5982\u6b64\u5fae\u4e0d\u8db3\u9053\uff0c\u4ee5\u81f3\u4e8e PR \u4e0a\u6ca1\u6709\u62c9\u53d6\u8bf7\u6c42\u6216\u8bc4\u8bba\uff0c\u5b83\u53ea\u662f\u76f4\u63a5\u5e94\u7528\u4e8e\u5f00\u53d1\u5206\u652f\u3002\u90a3\u4e2a\u660e\u663e\u7684\u8865\u4e01\u4f7f\u201c\u4fee\u590d\u5757\u4e2d\u65ad\u4e0d\u540c\u6b65\u201d\u4ec5\u5728\u5757\u4f4d\u4e8e\u52a0\u8f7d\u7684\u5757\u4e2d\u65f6\u624d\u56de\u590d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u53ea\u662f\u6dfb\u52a0 if (worldserver.isChunkLoaded(blockposition.getX() &gt;&gt; 4, blockposition.getZ() &gt;&gt; 4, true)) // Paper - Fix block break desync - \u4e0d\u8981\u9884\u5148\u53d1\u9001\u672a\u52a0\u8f7d\u7684\u5757\uff0c\u4f7f\u6574\u4e2a\u8865\u4e01\u4e24\u884c\u4ee3\u7801\u3002\u670d\u52a1\u5668\u544a\u8bc9\u4f60\u54ea\u4e2a\u5757\u5728\u90a3\u4e2a\u5750\u6807\uff08\u544a\u8bc9\u4f60\u628a\u5b83\u653e\u56de\u53bb\uff1b\u4f60\u4e0d\u88ab\u5141\u8bb8\u6253\u7834\u5b83\uff09\u670d\u52a1\u5668\u4ece\u79cd\u5b50\u751f\u6210\u6216\u52a0\u8f7d\u5757\uff0c\u5e76\u544a\u8bc9\u4f60\u54ea\u4e2a\u5757\u5728\u90a3\u4e2a\u5750\u6807\uff08\u544a\u8bc9\u4f60\u653e\u5b83\u56de\u6765\u4e86\uff1b\u4f60\u4e0d\u88ab\u5141\u8bb8\u7834\u574f\u5b83\uff09\u6b63\u5982\u4f60\u4ece\u4e0a\u8868\u4e2d\u770b\u5230\u7684\uff0c\u5728\u6dfb\u52a0 nocom \u7684\u8865\u4e01\u4e4b\u524d\uff0c\u6ca1\u6709\u529e\u6cd5\u5224\u65ad\u4e00\u4e2a\u5757\u662f\u5426\u88ab\u52a0\u8f7d\u3002\u670d\u52a1\u5668\u4f1a\u4ee5\u4efb\u4f55\u4e00\u79cd\u65b9\u5f0f\u54cd\u5e94\u3002\u5783\u573e\u90ae\u4ef6\u4f1a\u5bfc\u81f4\u5b83\u751f\u6210\u6216\u52a0\u8f7d\u9700\u8981\u4fee\u8865\u7684\u5757\u3002\u5728\u90a3\u4e2a\u6dfb\u52a0\u4e86 nocom \u7684\u8865\u4e01\u4e4b\u540e\uff0c\u670d\u52a1\u5668\u73b0\u5728\u4f1a\u663e\u793a\u5f53\u524d\u662f\u5426\u52a0\u8f7d\u4e86\u60a8\u611f\u5174\u8da3\u7684\u4efb\u4f55\u5757\u3002\u60a8\u53ea\u9700\u8981\u8bf4\u201c\u6211\u5355\u51fb (X,Y,Z) \u5904\u7684\u5757\u201d\uff08\u53c8\u540d CPacketPlayerDigging\uff09\u3002\u5982\u679c\u5305\u542b\u8be5\u5757\u7684\u5757\u5f53\u524d\u7531\u9644\u8fd1\u7684\u73a9\u5bb6\u52a0\u8f7d\uff0c\u670d\u52a1\u5668\u5c06\u54cd\u5e94\u201cNo. Put (X,Y,Z) back as SOME_BLOCK\u201d\uff08\u53c8\u540d SPacketBlockChange\uff09\u3002\u5982\u679c\u5f53\u524d\u672a\u52a0\u8f7d\u5305\u542b\u8be5\u5757\u7684\u5757\uff0c\u670d\u52a1\u5668\u5c06\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u56de\u590d\u3002\u56e0\u6b64\uff0c\u670d\u52a1\u5668\u4f1a\u663e\u793a\u60a8\u8be2\u95ee\u7684\u4efb\u4f55\u5757\u7684\u52a0\u8f7d\u6216\u5378\u8f7d\u72b6\u6001\uff0c\u901a\u8fc7\u5b83\u662f\u5426\u56de\u590d\u60a8\uff0c\u6216\u8005\u5ffd\u7565\u60a8\u58f0\u79f0\u5728\u8be5\u5757\u4e2d\u6253\u4e86\u4e00\u4e2a\u5757\u3002\n\u4f7f\u7528\u5e38\u8bc6\uff0cPaper \u5f00\u53d1\u4eba\u5458\u80af\u5b9a\u5e0c\u671b\u6b64\u8865\u4e01\u4ec5\u5728\u60a8\u7684\u73a9\u5bb6\u52a0\u8f7d\u533a\u5757\u65f6\u624d\u56de\u590d\u73a9\u5bb6\uff0c\u56e0\u4e3a\u8fd9\u7b26\u5408\u903b\u8f91\uff08\u8fd9\u662f\u60a8\u53ef\u4ee5\u5408\u7406\u5730\u5584\u610f\u6316\u6398\u7684\u6240\u6709\u533a\u5757\uff09\u3002\u5e94\u7528\u201c\u4f46\u4ec5\u53d6\u51b3\u4e8e\u60a8\u7684\u6e32\u67d3\u8ddd\u79bb\u201d\u7684\u4e0a\u9650\u662f\u4e00\u4e2a\u5b8c\u5168\u5408\u7406\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u4ee5\u524d\u53ea\u6709\u201c\u79bb\u60a8\u8d85\u8fc7 6 \u4e2a\u8857\u533a\u201d\u7684\u4e0b\u9650\u3002\u95ee\u9898\u5728\u4e8e\u4ee3\u7801\u7684\u7f16\u5199\u65b9\u5f0f\uff0c\u5982\u679c\u8be5\u5757\u88ab\u670d\u52a1\u5668\u4e0a\u7684\u4efb\u4f55\u73a9\u5bb6\u52a0\u8f7d\uff0c\u670d\u52a1\u5668\u5c06\u56de\u590d\u60a8\uff0c\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u610f\u60f3\u4e0d\u5230\u7684\u526f\u4f5c\u7528\u3002\u4e4b\u6240\u4ee5\u5982\u6b64\u957f\u65f6\u95f4\u65e0\u4eba\u77e5\u6653\uff0c\u662f\u56e0\u4e3a\u6ca1\u6709\u60a8\u53ef\u80fd\u8ba4\u4e3a\u7684\u5b9e\u9645\u201c\u6f0f\u6d1e\u5229\u7528\u201d\u6216\u201c\u540e\u95e8\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u670d\u52a1\u5668\u4e0d\u4f1a\u201c\u884c\u4e3a\u4e0d\u7aef\u201d\u6216\u505a\u4efb\u4f55\u53ef\u7591\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u5b8c\u5168\u9884\u671f\u548c\u9884\u671f\u7684\u884c\u4e3a\uff0c\u4ee3\u7801\u6ca1\u6709\u505a\u4efb\u4f55\u5077\u5077\u6478\u6478\u6216\u5077\u5077\u6478\u6478\u7684\u4e8b\u60c5\uff0c\u5b83\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\u3002\u60a8\u53ef\u4ee5\u5355\u51fb\u4e00\u4e2a\u5757\u5e76\u83b7\u53d6\u5176\u5185\u5bb9\uff08\u7531\u4e8e\u6b64\u8865\u4e01\uff09\u8fd9\u4e00\u4e8b\u5b9e\u662f\u4f17\u6240\u5468\u77e5\u7684\u4e8b\u5b9e\u3002\u591a\u5e74\u6765\uff0c\u8bb8\u591a\u6a21\u7ec4\u90fd\u5728\u4f7f\u7528\u5b83\u3002\u4f8b\u5982\uff0cOrebfuscator \u662f\u4e00\u4e2a\u7528\u4e8e\u5bf9\u6297 X-Ray \u7684\u670d\u52a1\u5668\u63d2\u4ef6\u3002\u5728\u4f60\u9760\u8fd1\u5b83\u4eec\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u53d1\u9001\u77ff\u77f3\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002\u53ef\u60b2\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u6ee5\u7528\u6b64\u8865\u4e01\u5e76\u5355\u51fb\u6e32\u67d3\u8ddd\u79bb\u4e2d\u6bcf\u4e2a\u5757\u4e2d\u7684\u6bcf\u4e2a\u5757\uff0c\u670d\u52a1\u5668\u5c06\u5c3d\u804c\u5c3d\u8d23\u5730\u544a\u8bc9\u60a8\u54ea\u4e9b\u5757\u662f\u771f\u6b63\u7684\u77f3\u5934\uff0c\u54ea\u4e9b\u662f\u771f\u6b63\u7684\u77ff\u77f3\u3002\u8fd9\u4e2a\u53cd\u6df7\u6dc6\u5668\u6a21\u5757\u5df2\u7ecf\u51fa\u73b0\u5728\u8bb8\u591a\u6a21\u7ec4\u4e2d\u3002\u4e0d\u65ad\u5730\u6572\u51fb\u4f60\u9644\u8fd1\u7684\u5757\u6765\u4fee\u590d\u9b3c\u5757\u6216\u4e0d\u540c\u6b65\u4e5f\u662f\u8bb8\u591a\u5ba2\u6237\u7aef\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ea\u662f\u6ca1\u6709\u591a\u5c11\u4eba\u60f3\u5230\u6545\u610f\u8d85\u51fa\u6e32\u67d3\u8ddd\u79bb\u6765\u63d0\u53d6\u4fe1\u606f\u3002\u5b9e\u73b0\u662f\u4f60\u53ef\u4ee5\u70b9\u51fb\u670d\u52a1\u5668\u4e0a\u4efb\u4f55\u5730\u65b9\u7684\u4efb\u4f55\u5757\uff0c\u751a\u81f3\u662f\u4e00\u767e\u4e07\u4e2a\u5757\uff0c\u5e76\u901a\u8fc7\u670d\u52a1\u5668\u662f\u5426\u54cd\u5e94\u4f60\u6216\u4fdd\u6301\u6c89\u9ed8\u6765\u4e86\u89e3\u5b83\u5f53\u524d\u662f\u5426\u662f\u4e00\u4e2a\u52a0\u8f7d\u7684\u5757\u3002\u4f7f\u7528\u8fd9\u4e2a\u6765\u5229\u7528\u5750\u6807\u7684\u6700\u81ea\u7136\u548c\u6700\u660e\u663e\u7684\u65b9\u6cd5\u662f\uff1a\u53ea\u9700\u5728\u6bcf\u4e2a\u6e32\u67d3\u8ddd\u79bb\u4e0a\u5355\u51fb\u4e00\u4e2a\u5757\uff0c\u4ece spawn \u5f00\u59cb\u4ee5\u6269\u5c55\u7684\u87ba\u65cb\u7ebf\u51fa\u53bb\u3002\u5982\u679c\u87ba\u65cb\u641c\u7d22\u547d\u4e2d\u52a0\u8f7d\u7684\u5757\uff0c2b2t \u5c06\u53d1\u56de\u56de\u590d\uff0c\u8be5\u56de\u590d\u53ef\u80fd\u4f1a\u8bb0\u5f55\u5230\u804a\u5929\u6216\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002\u8fd9\u662f\u5728\u8865\u4e01\u6dfb\u52a0\u5230 2b2t \u7684\u540c\u4e00\u5929\u5f00\u59cb\u7684\uff0c2018 \u5e74 7 \u6708 13 \u65e5\uff0c\u4e00\u76f4\u6301\u7eed\u5230 2019 \u5e74\u5e95\u6dfb\u52a0\u6570\u636e\u5305\u901f\u7387\u9650\u5236\u3002\u968f\u7740 Hause \u5728 2019 \u5e74\u5b9e\u65bd\u7684\u6570\u636e\u5305\u901f\u7387\u9650\u5236\uff0c\u901a\u8fc7\u5f3a\u529b\u87ba\u65cb\u641c\u7d22\u5728\u4ed6\u4eec\u7684\u57fa\u5730\u53d1\u751f\u5728\u4eba\u4eec\u8eab\u4e0a\u53d8\u5f97\u4e0d\u518d\u73b0\u5b9e\u3002\u6570\u636e\u5305\u9884\u7b97\u592a\u4f4e\uff0c\u65e0\u6cd5\u7ee7\u7eed\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u9664\u4e86\u975e\u5e38\u63a5\u8fd1\u7684\u751f\u6210\u85cf\u533f\u5904\u3002\u5b83\u6c38\u8fdc\u65e0\u6cd5\u5de5\u4f5c\u5230\u51e0\u767e K \u5de6\u53f3\u3002\u65b0\u65b9\u6cd5\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u5f0f\u7684\u8f6c\u53d8\uff1a\u4e0d\u662f\u5728\u4ed6\u4eec\u7684\u57fa\u5730\u5bfb\u627e\u4eba\uff0c\u800c\u662f\u5728\u4ed6\u4eec\u9996\u5148\u524d\u5f80\u8be5\u5730\u70b9\u65f6\u5229\u7528\u6f0f\u6d1e\u3002\n\u4ece\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u9996\u5148\u901a\u8fc7\u5728\u4e0b\u754c\u7684\u6bcf\u4e2a\u8f74\u548c\u5bf9\u89d2\u9ad8\u901f\u516c\u8def\u4e0a\u8fdb\u884c\u76f4\u7ebf\u68c0\u67e5\u6765\u53d1\u73b0\u73a9\u5bb6\u3002\u5230 OW \u8fb9\u754c\u7684 375 \u4e07\u4e2a\u8857\u533a\uff0c\u9664\u4ee5\u4e00\u4e2a\u6e32\u67d3\u8ddd\u79bb\uff08144 \u4e2a\u8857\u533a\uff09\uff0c\u610f\u5473\u7740\u4e00\u6761\u9ad8\u901f\u516c\u8def\u9700\u8981\u8fd0\u884c 26,041 \u6b21\u68c0\u67e5\uff08\u6253\u8fd9\u4e48\u591a\u8857\u533a\uff09\u3002\u5728 2020 \u5e74\u548c 2021 \u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u5b9e\u9645\u7684\u901f\u7387\u9650\u5236\u7ea6\u4e3a\u6bcf\u79d2 150 \u4e2a\u6570\u636e\u5305\uff0c\u8fd9\u610f\u5473\u7740\u626b\u63cf\u9ad8\u901f\u516c\u8def\u9700\u8981 173 \u79d2\uff08\u4e0d\u5230 3 \u5206\u949f\uff09\u3002\u6709\u516b\u6761\u8fd9\u6837\u7684\u9ad8\u901f\u516c\u8def\uff08\u56db\u8f74\uff0c\u56db\u5bf9\u89d2\u7ebf\uff09\uff0c\u6bcf\u6761\u7684\u65f6\u95f4\u90fd\u76f8\u540c\uff08\u5373\u4f7f\u662f\u5bf9\u89d2\u7ebf\u4e5f\u662f\u5982\u6b64\uff0c\u56e0\u4e3a\u5373\u4f7f\u5728\u89d2\u5230\u89d2\u5bf9\u9f50\u65f6\uff0c\u65b9\u5f62\u6e32\u67d3\u8ddd\u79bb\u7684\u95f4\u9694\u4e5f\u662f\u76f8\u540c\u7684 [2]\uff09\u3002\u626b\u63cf\u6574\u4e2a\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\u603b\u5171\u9700\u8981 23 \u5206\u949f\u3002\u5b9a\u4f4d\u540e\uff0c\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u7c92\u5b50\u6ee4\u6ce2\u5668\u8ddf\u4e0a\u73a9\u5bb6\u3002\u8fd9\u662f\u4e00\u4e2a\u81ea\u9002\u5e94\u7cfb\u7edf\uff0c\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff08\u5b9e\u9645\u4e0a\u53ea\u662f\u51e0\u79d2\u949f\u4e4b\u540e\uff09\u5b66\u4e60\u73a9\u5bb6\u53ef\u80fd\u5728\u54ea\u91cc\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u79fb\u52a8\u901f\u5ea6\u3002\u8fd9\u6837\u505a\u7684\u7528\u5904\u662f\u73a9\u5bb6\u901a\u5e38\u6cbf\u76f4\u7ebf\u79fb\u52a8\uff0c\u4f8b\u5982\u5728\u4e3b\u4e16\u754c\u4e2d\u98de\u884c\uff0c\u6216\u7a7f\u8d8a\u4e0b\u754c\u96a7\u9053\uff0c\u6216\u8005\u6700\u660e\u663e\u7684\u662f\uff0c\u5728\u4e0b\u754c\u9ad8\u901f\u516c\u8def\u4e0a\u884c\u9a76\u3002\u7c92\u5b50\u8fc7\u6ee4\u5668\u80fd\u591f\u7406\u89e3\u8fd0\u52a8\u4e2d\u7684\u8f68\u8ff9\u53ef\u80fd\u4f1a\u4fdd\u6301\u8fd0\u52a8\uff0c\u5e76\u4e14\u68c0\u67e5\u6548\u7387\u66f4\u9ad8\uff0c\u6bcf\u6b21\u201c\u54e6\uff0c\u5b83\u4eec\u79fb\u52a8\u4e86\uff01\u54ea\u4e2a\u65b9\u5411\uff1f\uff1f\u201d\u65f6\u90fd\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u5bf9\u4e8e\u7279\u522b\u4e00\u81f4\u7684\u8fd0\u52a8\uff0c\u4f8b\u5982\u76f4\u7ebf afk \u65c5\u884c\uff0c\u5b83\u4e00\u76f4\u653e\u5bbd\u5230\u6bcf\u79d2 1 \u5230 2 \u6b21\u68c0\u67e5\u3002\u5bf9\u4e8e\u66f4\u4e0d\u7a33\u5b9a\u7684\u76ee\u6807\u79fb\u52a8\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u6b63\u5728\u53d1\u751f\u4ec0\u4e48\uff0c\u5b83\u53ef\u80fd\u6bcf\u79d2\u6700\u591a\u8fdb\u884c\u5341\u51e0\u6b21\u68c0\u67e5\u3002\u5982\u679c\u5b83\u5931\u53bb\u76ee\u6807 5 \u79d2\uff0c\u5b83\u4f1a\u89e6\u53d1\u201c\u51b0\u96f9\u739b\u4e3d\u201d\u68c0\u67e5\uff0c\u8fd9\u662f\u4e00\u4e2a 11 x 11 \u7684\u68c0\u67e5\u7f51\u683c\uff081232 x 1232 \u5757\uff0c\u4ee5\u6700\u540e\u786e\u8ba4\u7684\u547d\u4e2d\u4e3a\u4e2d\u5fc3\uff09\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u624b\u6bb5\u6765\u786e\u4fdd\u5b83\u771f\u7684\u4e0d\u4f1a\u5931\u53bb\u4efb\u4f55\u4eba\u3002\u7531\u4e8e\u5f88\u5c11\u6709\u4efb\u4f55\u6f0f\u6d1e\u5141\u8bb8\u5728 5 \u79d2\u5185\u79fb\u52a8 1323/2=616 \u4e2a\u5757\uff0c\u8fd9\u5bfc\u81f4\u8ddf\u8e2a\u975e\u5e38\u7c98\u548c\u5f39\u6027\uff0c\u65e0\u8bba\u76ee\u6807\u6267\u884c\u4ec0\u4e48\u521b\u9020\u6027\u7684\u64cd\u4f5c\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8003\u8651\u5230\u6240\u6709\u56e0\u7d20\uff0c\u7c92\u5b50\u7cfb\u7edf\u5e73\u5747\u6bcf\u540d\u73a9\u5bb6\u6bcf\u79d2\u53ea\u4f7f\u7528\u4e24\u6b21\u68c0\u67e5\u3002\u5982\u679c\u73a9\u5bb6\u88ab\u89c6\u4e3a\u5b8c\u5168\u9759\u6b62\uff0c\u5219\u901f\u5ea6\u4f1a\u901a\u8fc7\u201c\u9759\u6b62\u8fc7\u6ee4\u5668\u201d\u7684\u7279\u6b8a\u4ee3\u7801\u8fdb\u4e00\u6b65\u653e\u6162\uff0c\u8be5\u4ee3\u7801\u53ef\u4ee5\u4e00\u76f4\u4e0b\u964d\u5230\u6bcf 8 \u79d2\u68c0\u67e5 1 \u6b21\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8ddf\u8e2a\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u5927\u7ea6 5 \u79d2\u5185\u5c06\u5176\u5757\u68c0\u67e5\u9884\u7b97\u8c03\u6574 1000 \u500d\uff0c\u8303\u56f4\u4ece\u6bcf\u79d2 0.125 \u6b21\u68c0\u67e5\u5230\u6bcf\u79d2 121 \u6b21\u68c0\u67e5\uff0c\u57fa\u4e8e\u73a9\u5bb6\u5f53\u65f6\u6b63\u5728\u505a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u53ef\u9884\u6d4b\u7684\u76f4\u63a5\u53cd\u9988\u4ed6\u4eec\u5728\u79fb\u52a8\u3002\u6dfb\u52a0\u4e86\u7b80\u5355\u7684\u89c4\u5219\u6765\u8ddf\u968f\u4eba\u4eec\u3002\u5982\u679c\u6709\u4eba\u4ece\u4e0b\u754c\u6d88\u5931\uff0c\u5c06\u5750\u6807\u4e58\u4ee5 8\uff0c\u7136\u540e\u8ba9\u4e16\u754c\u673a\u5668\u4eba\u68c0\u67e5\u90a3\u91cc\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5982\u679c\u6709\u4eba\u767b\u5f55\uff0c\u8bf7\u68c0\u67e5\u4ed6\u4eec\u4e0a\u6b21\u9000\u51fa\u7684\u65f6\u95f4\uff0c\u5e76\u6d4f\u89c8\u5728\u90a3\u4e00\u5206\u949f\u5185\u53d8\u51b7\u7684\u6240\u6709\u66f2\u76ee\uff0c\u5e76\u91cd\u65b0\u68c0\u67e5\u6240\u6709\u8fd9\u4e9b\u66f2\u76ee\u7684\u6700\u540e\u4e00\u6b21\u70b9\u51fb\u3002\u7b49\u7b49\u3002\u5bf9\u5f97\u5230\u7684\u8ddf\u8e2a\u6570\u636e\u8fdb\u884c\u4e86\u5404\u79cd\u81ea\u52a8\u5206\u6790\u3002\u9996\u8981\u4efb\u52a1\u662f\u8ba1\u7b97\u54ea\u4e9b\u533a\u57df\u662f\u6d3b\u52a8\u7684\u70ed\u70b9\uff0c\u53ef\u80fd\u8868\u660e\u6709\u57fa\u5730\u6216\u85cf\u533f\u5904\u3002\u9608\u503c\u8bbe\u7f6e\u4e3a\u5728\u7ed9\u5b9a\u533a\u57df\u5185\u505c\u7559 90 \u5206\u949f\u7684\u65f6\u95f4\uff0c\u624d\u80fd\u5c06\u5176\u79f0\u4e3a\u57fa\u5730\u3002\u90a3\u65f6\uff0c\u7cfb\u7edf\u5c06\u5f00\u59cb\u8ddf\u8e2a\u8be5\u4f4d\u7f6e\u7684\u73a9\u5bb6\u767b\u5f55\u548c\u6ce8\u9500\uff0c\u5e76\u5f00\u59cb\u5efa\u7acb\u201c\u8c01\u53ef\u80fd\u662f\u8c01\u201d\u7684\u7edf\u8ba1\u76f8\u5173\u6027\u3002\u5b83\u4e5f\u4f1a\u5728\u90a3\u65f6\u5f00\u59cb\u901a\u8fc7\u5355\u51fb\u9010\u5757\u4e0b\u8f7d\u57fa\u7840\uff0c\u4ee5\u542f\u7528\u8fdc\u7a0b\u67e5\u770b\u3002\u8fd8\u5bf9\u8be5\u6570\u636e\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u4f8b\u5982\u5e38\u7528\u7684\u67e5\u8be2\u6765\u6253\u5370\u51fa\u4e0a\u5468\u7684\u6240\u6709\u78b1\u57fa\uff0c\u6309\u7bb1\u5b50\u6570\u91cf\u6392\u5e8f\u3002 3,250,000 \u6b21\u73a9\u5bb6\u4f1a\u8bdd\u3002 \uff08\u8fd9\u662f\u73a9\u5bb6\u3001\u767b\u5f55\u65f6\u95f4\u3001\u9000\u51fa\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u6233\u4e3a 300 \u4e07\u4e2a\u201cX \u52a0\u5165\u6e38\u620f\u201d\u548c 300 \u4e07\u4e2a\u5339\u914d\u7684\u201cX \u79bb\u5f00\u6e38\u620f\u201d\uff09 15,000 \u4e2a\u57fa\u5730\uff08\u5b9a\u4e49\u4e3a\u8d85\u8fc7 90 \u5206\u949f\u7684\u4e16\u754c\u4f4d\u7f6e\uff09\u6709\u4eba\u5728\u90a3\u91cc\u5ea6\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u4e0d\u5305\u62ec\u51fa\u751f\u540e 25k \u5185\uff0c\u4e5f\u4e0d\u5305\u62ec\u9ad8\u901f\u516c\u8def/\u5bf9\u89d2\u7ebf 2k \u5185\uff09400,000 \u6b21\u5173\u8054\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u4ec5\u9488\u5bf9\u5728\u8fd9 15000 \u4e2a\u57fa\u5730\u4e4b\u4e00\u5185\u53d1\u751f\u7684\u6ce8\u9500\u8fdb\u884c\u8ddf\u8e2a\u3002\u6bcf\u4e2a\u4e8b\u4ef6\u53ea\u662f\u201c\u73a9\u5bb6 X \u5728\u5b83\u5728\u57fa\u5730 Y \u4e22\u5931\u8f68\u9053\u7684\u540c\u65f6\u6ce8\u9500\u201d\u3002\u5f53\u5b83\u4e3a\u90a3\u4e2a\u73a9\u5bb6\u548c\u90a3\u4e2a\u57fa\u5730\u8ba1\u7b97\u4e86\u8bb8\u591a\u4e8b\u4ef6\u65f6\uff0c\u8d8a\u6765\u8d8a\u786e\u5b9a\u662f\u4ed6\u4eec\u5728\u90a3\u4e2a\u57fa\u5730\u3002\n\u5728\u8fd9\u4e9b\u57fa\u5730\u4e2d\uff0c\u4e09\u5206\u4e4b\u4e8c\uff0810,000\uff09\u62e5\u6709\u5168\u7403\u4e0b\u8f7d\u91cf\u3002\u8be5 WDL \u5bf9\u5927\u591a\u6570\u5927\u578b/\u6d3b\u52a8\u57fa\u5730\u6765\u8bf4\u90fd\u662f\u539f\u59cb\u7684\uff0c\u5e76\u4e14\u6bcf\u9694 30 \u5206\u949f\u5c31\u62e5\u6709\u57fa\u5730\u5386\u53f2\u7684\u5b8c\u6574\u9010\u5757\u65f6\u95f4\u7ebf\u3002\u8fd9\u4ec5\u9002\u7528\u4e8e 100k \u4ee5\u4e0a\u7684\u57fa\u5730\u3002\u5b83\u5f00\u59cb\u8ddf\u8e2a\u5728\u7ebf\u65f6\u95f4\u7684 140,000,000 \u4e2a\u5757\u4f4d\u7f6e\uff0c\u4e5f\u8bb8\u770b\u770b\u90a3\u91cc\u662f\u5426\u6709\u4e00\u4e2a\u57fa\u5730\u3002\u5f7c\u6b64\u76f8\u8ddd 512 \u4e2a\u533a\u5757\u5185\u7684\u57fa\u5730\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u56e0\u6b64\u867d\u7136\u6709 15,000 \u4e2a\u57fa\u5730\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709 1,150,000 \u4e2a\u533a\u5757\u7ec4\u6210\u4e86\u8fd9\u4e9b\u57fa\u5730\uff0c\u5b83\u89c2\u5bdf\u5230\u73a9\u5bb6\u5728\u8fd9\u4e9b\u533a\u5757\u4e0a\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u3002\u533a\u5757\u8868\uff0c\u5373\u5750\u6807\u3001\u65f6\u95f4\u6233\u548c\u533a\u5757\uff0c\u6709 10,000,000,000 \u884c\uff08\u767e\u4ebf\uff09\u3002\u4ec5\u6b64\u8868\u53ca\u5176\u76f8\u5173\u7d22\u5f15\u5c31\u5360\u7528\u4e86 1 TB \u4ee5\u4e0a\u7684\u7a7a\u95f4\u3002\u8fd9\u662f\u9065\u89c6\u7cfb\u7edf\u80cc\u540e\u7684\u6240\u6709\u6570\u636e\u3002\u6bcf\u6b21\u4ece 2b2t \u5f97\u5230\u201c\u5757\u5df2\u52a0\u8f7d\u201d\u54cd\u5e94\u65f6\uff0c\u547d\u4e2d\u8868\u6709 3,000,000,000 \u884c\uff0830 \u4ebf\uff09\u3002\u8fd9\u57fa\u672c\u4e0a\u662f\u670d\u52a1\u5668\u4e0a\u5927\u7ea6 70% \u7684\u5728\u7ebf\u73a9\u5bb6\u7684\u9ad8\u5206\u8fa8\u7387\u5b9e\u65f6\u8ddf\u8e2a\u6570\u636e\uff0c\u53ef\u4ee5\u8ffd\u6eaf\u5230\u51e0\u5e74\u524d\u3002\u8fd9\u662f\u6bcf\u4e2a\u4eba\u7684\u4f4d\u7f6e\uff0c\u6bcf 1 \u79d2\u66f4\u65b0\u4e00\u6b21\u3002\u66f2\u76ee\u8868\uff0c\u8fd9\u662f\u4e00\u7ec4\u547d\u4e2d\uff0c\u8fd9\u4e9b\u547d\u4e2d\u88ab\u6536\u96c6\u4e3a\u4e00\u4e2a\u8fde\u7eed\u66f2\u76ee\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u6709 10,000,000 \u884c\uff08\u4e00\u5343\u4e07\uff09\u3002\u56e0\u6b64\uff0c\u5e73\u5747\u66f2\u76ee\u56e0\u6b64\u6709\u5927\u7ea6\u4e09\u767e\u6b21\u70b9\u51fb\u3002\u8fd9\u6709\u52a9\u4e8e\u7cfb\u7edf\u5728\u6709\u4eba\u79bb\u5f00\u5e76\u91cd\u65b0\u52a0\u5165\u670d\u52a1\u5668\u540e\u6267\u884c\u8bf8\u5982\u6062\u590d\u66f2\u76ee\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002 \u2191 \u201c\u5e7d\u7075\u201dGitHub \u7528\u6237\u540d\u4e0d\u662f\u771f\u6b63\u7684\u7528\u6237\u540d\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u8868\u660e\u4ed6\u4eec\u5df2\u5220\u9664\u4e86\u4ed6\u4eec\u7684 GitHub \u5e10\u6237", "note_en": "Jump to navigation  Jump to search  Nocom was a coordinate exploit used by  Nerds Inc on 2b2t from July 2018 to July 2021.\n      So, 2b2t would immediately reveal or not whether any chunk coordinate that you ask about is currently loaded. And if it is currently loaded, it tells you which specific block is there at the coordinate you asked about.\n  Nocom was a flaw/oversight in  the 196th patch to  PaperMC for Minecraft 1.12.2, called  Fix block break desync. It does not exist in vanilla Minecraft.\n The patch changes the behavior of Paper servers when a player says they are digging a block that appears to be too far for them to reach. In vanilla Minecraft, a CPacketPlayerDigging packet is simply ignored entirely, when it is over 6 blocks away from the player. However, due to lag, sometimes the server and client disagree on where the player is. It&#39;s therefore possible for some good faith block digging packets to be discarded by this policy. Since the server simply ignores the client stating &#34;I have mined this block&#34;, this causes desync, a ghost block. The client thinks it&#39;s air, the server thinks it&#39;s still a block that you can&#39;t walk through. This is because Minecraft&#39;s client is &#34;optimistic&#34; in a sense: if it mines a block, it assumes it is mined unless the server tells it otherwise, which did not happen in this case because the server ignored the client and never told it &#34;put that back&#34;.\n The  initial version of the patch, added in the initial port of Paper to 1.12.2, in September 2017, simply changed the behavior so that instead of ignoring the block dig, the server instead replies saying essentially &#34;No, I think you can&#39;t mine that. Put (X=1,Y=2,Z=3) back as minecraft:obsidian&#34;. In code terms, that&#39;s simply the only line added by the patch:  this.sendPacket(new PacketPlayOutBlockChange(worldserver, blockposition)); // Paper - Fix block break desync\n While this does fix the block break desync (the patch is aptly named &#34;Fix block break desync&#34;), it also opens up a massive vulnerability. This applies to every CPacketPlayerDigging about a coordinate that is  more than six blocks away from the player. There is  no upper bound, just a lower bound of six. Simply by spamming &#34;I am digging this block&#34; on random coordinates all over the map from -30M to +30M, the server would be forced to generate that chunk on the spot just to reply with what block &#34;should&#34; be there, to &#34;fix&#34; the desync that the server is concerned has just happened (while actually the client is sending the packets in bad faith).\n This causes an essentially unlimited amount of server lag, handling these packets and generating/loading those chunks. This was used as a queue skip exploit  as early as April 2018. This is because at that time Hause had no packet ratelimiter, at all. Hause would add such a ratelimit in 2019 as a response to the off-hand switch sound lag exploit.\n  In July 2018, 0x22 and Babbaj created and executed a plan to turn this lag/crash exploit into a coordinate exploit. They realized that this patch was practically inches away from being a coord exploit: the only difference between the patch as it stood, and a coord exploit, was the fact that the server would generate/load a chunk on the spot in reply to a block punch. If that behavior were removed, it would be a coord exploit, because it would reveal if the block you punched was in a loaded chunk or not, no matter how far away it was. That quirk of behavior, that the server would respond regardless of if the chunk was loaded, is exactly the behavior that would be removed in &#34;the obvious patch&#34; to the lag exploit.\n So, instead of simply causing survivable amounts of lag (such as to skip queue), they began intentionally, repeatedly, and blatantly pushing it to the point where it would cause a server crash. That crash log included the exact line of that patch, and it was clear that spamming the packet was causing this. Hause  [1] reported the issue to paper  here, and electricboy applied the obvious patch  in this commit. It was so trivial that there was no pull request or comments on the PR, it was simply applied directly to the development branch.\n That  obvious patch makes the &#34;fix block break desync&#34; only reply if the block is in a loaded chunk. Specifically, it just adds  if (worldserver.isChunkLoaded(blockposition.getX() &gt;&gt; 4, blockposition.getZ() &gt;&gt; 4, true)) // Paper - Fix block break desync - Don&#39;t send for unloaded chunks beforehand, making the entire patch two lines of code.\n The server tells you which block is at that coordinate (telling you to put it back; you were not permitted to break it)\n The server  generates from seed or loads the chunk, and tells you which block is at that coordinate (telling you to put it back; you were not permitted to break it)\n As you can see from the above table, prior to the patch that added nocom, there was no way to tell if a chunk was loaded. The server would respond either way. Spamming this would cause it to generate or load chunks though, which needed to be patched.\n After that patch, that added nocom, the server now reveals if any chunk you&#39;re curious about is currently loaded. You simply need to say &#34;I click the block at (X,Y,Z)&#34; (aka  CPacketPlayerDigging). The server will respond with &#34;No. Put (X,Y,Z) back as SOME_BLOCK&#34; (aka  SPacketBlockChange)  if the chunk containing that block is currently loaded by a nearby player. The server will not send any reply if the chunk containing that block is not currently loaded. As such, the server reveals the loaded or unloaded status of any chunk you ask about, by if it replies to you, or ignores you claiming to have punched a block in that chunk.\n Using common sense, the Paper developers most certainly  intended for this patch to reply to the player only if the chunks were loaded  by  your player, as that would make logical sense (that&#39;s all the blocks you could reasonably be digging in good faith). Applying an upper bound of &#34;but only up to your render distance&#34; is a perfectly reasonable fix, as previously there was only the lower bound of &#34;more than 6 blocks away from you&#34;. The problem is that the way the code was written, the server will reply to you if the chunk is loaded  by  any player on the server, which is clearly an unintended side effect.\n The reason why this has flown under the radar for so long is that there is no actual &#34;exploit&#34; or &#34;backdoor&#34; in the sense that you might think. In other words, the server doesn&#39;t &#34;misbehave&#34; or do anything suspicious. It&#39;s fully expected and intended behavior, the code doesn&#39;t do anything sneaky or surreptitious, it&#39;s actually perfectly simple. The fact that you can click a block and get its contents (due to this patch) is a well-known fact. Many mods have used this over the years. For example, Orebfuscator is a server plugin to combat X-Ray. It doesn&#39;t send where ores actually are until you get close to them. Sadly, you can simply abuse this patch and click every block in every chunk in render distance, and the server will dutifully tell you which blocks are truly stone and which are truly ore. This anti-orebfuscator module has been in many mods. Constantly punching blocks near to you to fix ghost blocks or desync is also a feature in many clients. It&#39;s just that not many people thought of intentionally going outside your render distance to extract information. The realization is that you can click absolutely any block, anywhere on the server, even a million blocks away, and learn if it&#39;s currently a loaded chunk, by if the server responds to you or remains silent.\n   The most natural and obvious way to exploit coordinates using this: just click one block per render distance, going out in an expanding spiral from spawn.\n If the spiral search hits a loaded chunk, 2b2t will send back a reply, which would presumably be logged to chat, or to a log file.\n This was done starting on the same day that the patch was added to 2b2t, July 13 2018, and continued until late 2019 when the packet ratelimit was added.\n  With the packet ratelimit that Hause implemented in 2019, it became no longer practical to happen upon people at their base through a brute force spiral search. The packet budget was far too low to continue with that approach, for anything but very close spawn stashes. It could never work into the mid-hundred-Ks.\n The new approach was a shift in mindset:  instead of finding people at their base, the exploit would now follow them as they traveled to the location in the first place.\n In broad strokes, players were found in the first place by running straight-line checks on every axis and diagonal highway in the nether. 3.75 million blocks to the OW border, divided by one render distance (144 blocks), means that one highway requires running 26,041 checks (punching that many blocks). The practical ratelimit was about 150 packets per second for much of 2020 and 2021, meaning this would take 173 seconds, just under three minutes, to scan a highway. There are eight such highways (four axis, four diagonal), and the time is the same for each (even for diagonal because square render distances are spaced the same even when aligned corner-to-corner  [2]). In total, 23 minutes to scan the entire highway system.\n After being located, a  Monte Carlo particle filter was used to keep up with the player. This is an adaptive system that learns over time (after just a few seconds, really) where the player probably is, and their movement speed. The utility of doing this is that players very commonly move in straight lines, such as elytraflying in the overworld, or traveling through nether tunnels, or, the most obvious of all, traveling on a nether highway. A particle filter is able to understand that a track in motion is likely to stay in motion, and be more efficient with its checks, not being surprised each time &#34;oh, they moved! which direction??&#34;. For particularly consistent movement such as straight line afk travel, it relaxed all the way down to 1 to 2 checks per second. For more erratic target movement, it could go up to a dozen checks per second if it becomes unsure what is happening. If it lost the target for 5 seconds, it triggered the &#34;hail mary&#34; check, which is a 11 by 11 grid of checks (1232 by 1232 blocks, centered on the last confirmed hit), as a last resort to make sure that it really wouldn&#39;t lose anyone. As there were rarely any exploits to allow traveling 1323/2=616 blocks in under 5 seconds, this caused the tracking to be quite sticky and resilient, no matter what creative maneuvers were performed by the target. Taking everything into account, all told, the particle system on average used just over two checks per second per player. If a player was seen to be perfectly stationary, the speed would relax even further by special code for a &#34;stationary filter&#34;, which could go all the way down to 1 check every 8 seconds. All in all, the tracking system would commonly adapt its chunk checking budget by 1000x in about 5 seconds, ranging from 0.125 checks per second to 121 checks per second, based on a direct feedback of what the player was doing at that moment and how predictably they were moving.\n Simple rules were added to follow people. If someone disappears from the nether, multiply the coords by eight and ask the overworld bot to check there, and vice versa. If someone logs in, check the last time they logged out, and run through all tracks that went cold within a minute of that time, and recheck the last hit on all of those. Etc.\n Various automated analyses were performed on the resulting tracking data. The primary one was tallying up which areas are hotspots of activity, likely indicating a base or stash. The threshold was set at 90 minutes of time spent in a given area for it to be called a base. At that point, the system would start to track player logins and logouts at that location and start to build up statistical correlations of &#34;who could be who&#34;. It would also at that point start to download the base block-by-block by clicking it, to enable remote viewing. Analyses were also performed on that data, such as the commonly used query to print out all bases from the last week, sorted by number of chests.\n  3,250,000 player sessions. (this is player, login time, logout time. so, timestamps of 3 million &#34;X joined the game&#34;s and the 3 million matching &#34;X left the game&#34;s)\n  15,000 bases (defined as an overworld location with over 90 minutes of someone spending time there, but excluding within 25k of spawn, and excluding within 2k of a highway/diagonal)\n 400,000 association events. These were only tracked for logout that happened within one of those 15000 bases. Each event is simply &#34;player X logged out at the same time that it lost a track at base Y&#34;. As it counted up many events for that player and that base, it became more and more certain that it&#39;s them at that base.\n Of those bases, two thirds (10,000) have a world download. This WDL is pristine for most large/active bases, and has the full block-by-block timeline of the base&#39;s history at 30 minute intervals. This was only done for bases above 100k from spawn.\n 140,000,000 chunk positions where it started to track online time, to perhaps see if there is a base there. Bases within 512 blocks of each other were merged into one, so while there are 15,000 bases, there are actually 1,150,000 chunks that make up those bases, chunks where it had observed significant time being spent occupied by a player.\n The table of blocks, which is just coordinate, timestamp, and block, has 10,000,000,000 rows (ten billion). It takes up over a terabyte just for this table and its associated indexes. It&#39;s all the data behind the remote viewing system.\n The table of hits, which is every time it got a &#34;chunk is loaded&#34; response back from 2b2t, has 3,000,000,000 rows (three billion). This is essentially high resolution real-time tracking data for about 70% of the server&#39;s online players, going back years. It&#39;s everyone&#39;s location at 1 second update intervals.\n The table of tracks, which is a grouping of hits into which ones were collected as a part of one continuous track. This has 10,000,000 rows (ten million). So, the average track therefore has about three hundred hits. This helped the system do things like resume tracks after someone leaves and rejoins the server.\n        \u2191  The &#34;ghost&#34; GitHub username isn&#39;t a real username, it&#39;s just a placeholder indicating that they have deleted their GitHub account", "posttime": "2021-08-07 22:52:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nocom,\u670d\u52a1\u5668", "title": "Nocom \u5229\u7528 2b2t", "title_en": "Nocom Exploit on 2b2t", "transed": 1, "url": "https://2b2t.miraheze.org/wiki/Nocom", "via": "", "real_tags": ["nocom", "\u670d\u52a1\u5668"]}]
[{"category": "", "categoryclass": "", "imagename": "76fee038427af967d4a62ff40c6ab0a4.png", "infoid": 1033662, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e4b\u524d\u542c\u8bf4\u8fc7Erlang\u548cBEAM\u6ca1\u6709\u6253\u5305\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u521b\u5efa\u8005\u201c\u65e0\u6cd5\u6784\u5efa\u5b83\u201d\u3002\n\u867d\u7136\u6784\u5efa\u4e00\u4e2a\u590d\u6742\u3001\u53ef\u9760\u548c\u53ef\u4f38\u7f29\u7684\u7c7b\u578b\u68c0\u67e5\u5668\u7edd\u5bf9\u4e0d\u662f\u5728\u516c\u56ed\u91cc\u6563\u6b65\uff0c\u4f46\u6784\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6b63\u5e38\u7684\u7c7b\u578b\u68c0\u67e5\u5668\u5e76\u4e0d\u96be\u3002\n\u5982\u679c\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\uff0c\u5b83\u5c31\u4f1a\u88ab\u5b8c\u6210\uff0c\u800c\u4e14\u5b83\u4f1a\u901a\u8fc7\u4e0eOTP\u5f3a\u5316\u76f8\u540c\u7684\u8fc7\u7a0b\u6765\u5f3a\u5316\uff0c\u5e76\u53d8\u6210\u4eca\u5929\u7684\u6837\u5b50\uff1a\u53ef\u9760\u6027\u9ec4\u91d1\u6807\u51c6\u3002\n\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u7f16\u5199\u4e00\u4e2aErlang\u7c7b\u578b\u68c0\u67e5\u5668\u6765\u771f\u6b63\u7406\u89e3\u8f93\u5165Erlang\u7684\u56f0\u96be\u4e4b\u5904\u3002\u6211\u77e5\u9053\u900f\u6790\u5668\u7684\u5b58\u5728\uff0c\u8fd9\u592a\u68d2\u4e86\uff0c\u6211\u53ea\u662f\u60f3\u4ece\u96f6\u5f00\u59cb\u5bf9\u5b83\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u7406\u89e3\u3002\n\u6211\u7a81\u7136\u610f\u8bc6\u5230\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5206\u88c2\uff0c\u6709\u65f6\u5f88\u96be\u6ce8\u610f\u5230\uff0c\u8fd9\u8ba9\u4e16\u754c\u53d8\u5f97\u622a\u7136\u4e0d\u540c\u3002\u6709\u4e00\u79cd\u540d\u4e3aStandard Erlang\u7684Erlang\u8bed\u8a00\uff0c\u8fd8\u6709\u4e00\u79cdErlang\u8fd0\u884c\u65f6\uff0c\u5373BEAM\u3002\u6cbf\u7740\u76f8\u540c\u7684\u8def\u7ebf\uff0c\u9996\u5148\u662fJava\u8bed\u8a00\uff0c\u7136\u540e\u662fJVM\u3002\n\u6211\u4eec\u503e\u5411\u4e8e\u628a\u8fd9\u4e24\u4ef6\u4e8b\u5f53\u4f5c\u4e00\u4ef6\u4e8b\u6765\u8c08\u8bba\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u8bed\u8a00\u4ece\u8fd0\u884c\u65f6\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u4eec\u8868\u73b0\u51fa\u975e\u5e38\u4e0d\u540c\u7684\u884c\u4e3a\u3002\n\u7279\u522b\u662f\uff0c\u8fd0\u884c\u5e93\u7ed9\u8868\u5206\u914d\u548c\u70ed\u4ee3\u7801\u52a0\u8f7d\u5e26\u6765\u4e86\u9ebb\u70e6\uff0c\u8fd9\u4f7f\u5f97\u8f93\u5165\u5185\u5bb9\u6210\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u95ee\u9898\u3002\u662f\u7684\uff0c\u5f88\u6709\u8da3\uff0c\u4f46\u975e\u5e38\u4e0d\u5207\u5b9e\u9645\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5bf9\u8be5\u8bed\u8a00\u7684\u64cd\u4f5c\u8bed\u4e49\u3001\u5982\u4f55\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684\u7c7b\u578b\u68c0\u67e5\u5668\u3001\u8fd0\u884c\u5e93\u7684\u5206\u5e03\u5f0f\u548c\u52a8\u6001\u7279\u6027\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u76f8\u4e92\u4ea4\u4e92\u505a\u4e00\u4e2a\u66f4\u5168\u9762\u3001\u66f4\u6b63\u5f0f\u7684\u8bba\u8ff0\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u56de\u987e\u4e00\u4e0b\u6211\u6240\u5b66\u5230\u7684\u7528\u66f4\u8868\u9762\u7684\u65b9\u5f0f\u8f93\u5165Standard Erlang\u6240\u9700\u7684\u77e5\u8bc6\uff0c\u4ee5\u53ca\u6211\u4eec\u5c06\u4f1a\u9047\u5230\u7684\u4e00\u4e9b\u68d8\u624b\u7684\u90e8\u5206\u3002\nErlang\u662f\u4e00\u79cd\u52a8\u6001\u7684\u5f3a\u7c7b\u578b\u8bed\u8a00\u3002\u5b83\u53ea\u6bd4\u5178\u578b\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u591a\u4e86\u4e00\u70b9\u5185\u5bb9\u3002\u603b\u4f53\u800c\u8a00\uff0cErlang\u4e0d\u662f\u90a3\u4e48\u5927\u7684\u8bed\u8a00\u3002\n\u6211\u7684\u7c97\u7565\u4f30\u8ba1\u662f\u5b83\u5927\u7ea6\u662fOCaml\u7684\u4e09\u5206\u4e4b\u4e00\u5927\u5c0f\uff0c\u5927\u7ea6\u662fJava\u7684\u4e94\u5206\u4e4b\u4e00\u5927\u5c0f\u3002\n%an Erlang\u6a21\u5757-\u6a21\u5757(HELLO_WORLD).-EXPORT([hi/1])\u3002%&lt\uff1b--\u8fd9\u662f\u4e00\u4e2a\u7f16\u8bd1\u5668\u6ce8\u91cahi(Noone)-&gt\uff1bad\uff1bhi(Name)-&gt\uff1b&lt\uff1b&#34\uff1bHello\uff0c&#34\uff1b\uff0c(Name)/inary\uff0c&#34\uff1b\uff01&#34\uff1b&gt\uff1b&gt\uff1b\u3002\n\u4e00\u4e2aErlang\u7a0b\u5e8f\u7531\u8bb8\u591a\u6a21\u5757\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6a21\u5757\u53ea\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u7cfb\u5217\u51fd\u6570\u548c\u4e00\u4e9b\u6ce8\u91ca\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u7528\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\u5bfc\u51fa\u4e86\u4ec0\u4e48\u3001\u6a21\u5757\u4f5c\u8005\u662f\u8c01\u3001\u51fd\u6570\u7c7b\u578b\u5e94\u8be5\u662f\u4ec0\u4e48\u7b49\u7b49\u3002\n\u5728Erlang\u4e2d\u53ef\u4ee5\u7f16\u5199\u5f88\u591a\u76f8\u5bf9\u5e38\u89c1\u7684\u5185\u5bb9\uff1a\n\u8fd8\u6709\u4e00\u4e9b\u4e8b\u60c5\u6839\u672c\u5c31\u4e0d\u5e38\u89c1\uff1a\n\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u8bed\u8a00\u7684\u8868\u73b0\u529b\u6765\u81ea\u4e8e\u5b83\u76f8\u5f53\u7b80\u5355\u3002\u5927\u591a\u6570\u95ee\u9898\u90fd\u662f\u901a\u8fc7\u4f7f\u51fd\u6570\u76f8\u4e92\u8c03\u7528\u6765\u89e3\u51b3\u7684\uff0c\u5927\u591a\u6570\u51fd\u6570\u6a21\u5f0f\u4e0e\u5b83\u4eec\u9700\u8981\u7684\u6570\u636e\u5b8c\u5168\u5339\u914d\uff0c\u5faa\u73af\u662f\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\u7684\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u3002\n\u5f02\u5e38\u975e\u5e38\u5e38\u89c1\uff0c\u56e0\u4e3a\u6a21\u5f0f\u5339\u914d\u5931\u8d25\u5c06\u5bfc\u81f4\u5f02\u5e38\u3002\u4e3a\u6b64\uff0c\u8be5\u8bed\u8a00\u652f\u6301CATCH\u548cTry..Catch..After\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u4f7f\u7528\u5b83\u4eec\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\nErlang\u4ee5\u76d1\u63a7\u800c\u95fb\u540d\u7684\u5353\u8d8a\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u5b9e\u9645\u4e0a\u5305\u542b\u5728\u8fd0\u884c\u65f6\u4e2d\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u4e2d\u3002\u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u8fdb\u7a0b\u3001\u94fe\u63a5\u6216\u53d1\u9001\u6d88\u606f\u7684\u6982\u5ff5\u3002\u5b83\u552f\u4e00\u62e5\u6709\u7684\u5c31\u662f\u7528\u4e8e\u6d88\u8d39\u6d88\u606f\u7684ReceiveExpression\u3002\n\u5728\u7f16\u5199\u7c7b\u578b\u68c0\u67e5\u5668\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e9b\u503c\u5f97\u63d0\u51fa\u6765\u7684\u4e8b\u60c5\uff1a\n\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u8bed\u8a00\u7ed3\u6784\u5bf9\u9759\u6001\u5206\u6790\u4e0d\u53cb\u597d\u3002\u4ee5\u540e\u6211\u4f1a\u8bd5\u7740\u5199\u66f4\u591a\u7684\u6587\u7ae0\u548c\u62a5\u9053\u66f4\u591a\u7684\u5185\u5bb9\u3002\n\u4e00\u4e2aErlang\u503c\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u8be5\u7c7b\u578b\u53ea\u5728\u8fd0\u884c\u65f6\u624d\u77e5\u9053\u3002\u8fd9\u610f\u5473\u7740\u5728\u6211\u4eec\u8fd0\u884c\u51fd\u6570\u4e4b\u524d\uff0c\u51fd\u6570\u7684\u8f93\u5165\u7c7b\u578b\u548c\u8fd4\u56de\u7c7b\u578b\u5b9e\u9645\u4e0a\u90fd\u662f\u672a\u77e5\u7684\u3002\n\u56e0\u6b64\uff0c\u65e0\u8bba\u4f55\u65f6\u60a8\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0hi/1\u7684\u51fd\u6570\uff0c\u8c03\u7528\u5b83\u5b9e\u9645\u4e0a\u90fd\u53ef\u80fd\u8fd4\u56de\u4e0d\u540c\u7c7b\u578b\u7684\u503c\uff0c\u8fd9\u53d6\u51b3\u4e8e\u51fd\u6570\u662f\u5982\u4f55\u7f16\u5199\u7684\u3002\n\u4f8b\u5982\uff0c\u547c\u53ebhi(Noone)\u5c06\u8fd4\u56de\u539f\u5b50\u60b2\u4f24\u3002\u76f8\u53cd\uff0c\u8c03\u7528hi(&lt\uff1b&lt\uff1b&34\uff1b&gt\uff1b&gt\uff1b)\u4f1a\u8fd4\u56de\u5b57\u7b26\u4e32&lt\uff1b&lt\uff1b&34\uff1bHello\uff0cJoe\uff01&gt\uff1b\u3002\u539f\u5b50Sad\u548c\u5f26\u6709\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u8c03\u7528hi(0)\u5c06\u5bfc\u81f4\u5f02\u5e38\u3002\n\u5982\u679c\u6211\u4eec\u8981\u5199\u4e0b\u8fd9\u4e2a\u51fd\u6570\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u5fc5\u987b\u8fd9\u6837\u5199\uff1a\n\u8fd9\u5728\u6240\u6709\u5176\u4ed6\u52a8\u6001\u8bed\u8a00\u4e2d\u90fd\u5b58\u5728\uff1aLISP\u3001Lua\u3001Javascript\u3001Python\u3001Ruby\u3001Smalltalk\uff0c\u5e94\u6709\u5c3d\u6709\u3002\n\u7f16\u5199\u4e00\u4e2a\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u7c7b\u578b\u68c0\u67e5\u5668\u5f53\u7136\u662f\u53ef\u80fd\u7684\uff0c\u5c31\u50cf\u4ee5\u524d\u5728Flow\u548cTypeScrip\u8fd9\u6837\u7684\u5de5\u5177\u4e2d\u505a\u8fc7\u7684\u90a3\u6837\uff0c\u4f46\u662f\u5982\u4f55\u505a\u5f53\u7136\u4e0d\u662f\u5f88\u660e\u663e\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u8c08\u8c08UnionTypes\u3002\n\u8054\u5408\u7c7b\u578b\u5141\u8bb8\u6211\u4eec\u8868\u793a\u4e00\u4e2a\u503c\u53ef\u4ee5\u540c\u65f6\u5c5e\u4e8e\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\u4e2d\u7684\u4e00\u4e2a\u3002\u4f8b\u5982\uff0c1\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u4f46\u5b83\u4e5f\u662f\u4e00\u4e2a(\u6570\u5b57|bool)\u3002\u540c\u6837\uff0cTrue\u662fbool\uff0c\u4f46\u5b83\u4e5f\u662f(number|bool)\u3002\n\u8fd9\u91cc\u7684\u5173\u952e\u662f\uff0c\u503c\u672c\u8eab\u5e76\u6ca1\u6709\u5173\u4e8e\u5b83\u5b9e\u9645\u5c5e\u4e8e\u8054\u5408\u7684\u7c7b\u578b\u7684\u663e\u5f0f\u4fe1\u606f\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u901a\u8fc7\u6539\u8fdb\u6765\u53d1\u73b0\u8fd9\u4e00\u70b9\u3002\n\u901a\u8fc7\u4f7f\u7528\u5b88\u536b\u548c\u6a21\u5f0f\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u8fd9\u4e9b\u7ec6\u5316\u3002\n\u901a\u8fc7\u4f7f\u7528\u4fdd\u62a4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u503c\u7684\u5b9e\u9645\u7c7b\u578b\u7ec6\u5316\u4e3a\u5355\u4e00\u7c7b\u578b\u3002\u4f8b\u5982\uff1a\n%the\u81ed\u540d\u662d\u8457\u7684Left_Pad\u51fd\u6570Left_Pad(A\uff0cB)When is_Binary(A)-&gt\uff1b&lt\uff1b(A)/Binary\uff0c(B)/Binary&gt\uff1b&gt\uff1b\uff1bLeft_Pad(A\uff0cB)When is_Number(A)-&gt\uff1bLeft_Pad(Binary\uff1aCopy(&lt\uff1b&lt\uff1b&#34\uff1b&#34\uff1b&&gt;\uff1b&&gt;\uff1bA)\uff0cB)\u3002\n\u4f46\u591a\u4e8f\u4e86IS_BINARY/1\u548cIS_NUMBER/1\u4fdd\u62a4\uff0c\u6211\u4eec\u624d\u80fd\u5c06\u8f93\u5165\u7c7b\u578b\u7ec6\u5316\u4e3a\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u3002\n\u8fd9\u4f7f\u5f97\u53ef\u4ee5\u8bf4BINARY\uff1aCOPY(&lt\uff1b&lt\uff1b&#34\uff1b&gt\uff1b&gt\uff1b\uff0cA)\u662f\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e00\u70b9\u4e0a\u6211\u4eec\u77e5\u9053is_number(A)\u662f\u771f\u7684\uff0c\u56e0\u6b64A\u7684\u7c7b\u578b\u5df2\u7ecf\u4ece\u5b57\u7b26\u4e32|Number\u6539\u8fdb\u4e3a\u53ea\u6709Number\u3002\u5426\u5219\u5b88\u536b\u5c31\u4f1a\u662f\u5047\u7684\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u529f\u80fd\u4f5c\u4e3a\u8b66\u536b\u3002\u6211\u4eec\u53ea\u80fd\u4f7f\u7528Erlang\u8fd0\u884c\u65f6\u9644\u5e26\u7684\u5185\u7f6e\u51fd\u6570\u3002\n\u901a\u8fc7\u6a21\u5f0f\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u975e\u5e38\u76f8\u4f3c\u7684\u4e8b\u60c5\uff0c\u5e76\u5efa\u7acb\u6211\u4eec\u5bf9\u4ef7\u503c\u89c2\u7684\u671f\u671b\u3002\u4f8b\u5982\uff1a\n%a\u65e7\u7684\u5217\u8868\u957f\u5ea6\u8ba1\u6570(A=[_|_])-&gt\uff1bcount(A\uff0c0).count([]\uff0cC)-&gt\uff1bC\uff1bcount([_|T]\uff0cC)-&gt\uff1bcount(T\uff0cC+1)\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u5982\u679c\u6211\u4eec\u7684\u51fd\u6570\u6a21\u5f0f\u5339\u914d\uff0c\u90a3\u4e48\u5b83\u5c06\u662f\u4e00\u4e2a\u5217\u8868\u3002\n\u6211\u4eec\u771f\u7684\u4e0d\u77e5\u9053List\u5143\u7d20\u662f\u4ec0\u4e48\uff0c\u4f46\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u5c1d\u8bd5\u7ee7\u7eed\u6a21\u5f0f\u5339\u914d\u548c\u4f7f\u7528\u4fdd\u62a4\uff0c\u76f4\u5230\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u201c\u8db3\u591f\u201d\u7684\u63d0\u70bc\u3002\n\u8fd9\u4e24\u79cd\u65b9\u6cd5\u867d\u7136\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4f46\u5b83\u4eec\u6709\u4e00\u4e2a\u4e0d\u5e78\u7684\u7279\u6027\uff0c\u5b83\u4eec\u4e0d\u80fd\u63a8\u5e7f\u5230\u6240\u6709\u7c7b\u578b\u7684\u6570\u636e\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u4eec\u5e94\u8be5\u80fd\u591f\u5f88\u597d\u5730\u5de5\u4f5c\uff1a\u539f\u5b50\u3001\u6587\u5b57\uff0c\u4ee5\u53ca\u4efb\u4f55\u6709\u8b66\u536b\u53ef\u7528\u7684\u4e1c\u897f\u3002\n\u5730\u56fe\u3001\u5143\u7ec4\u548c\u8bb0\u5f55\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4f46\u662f\u5b83\u7684\u4f38\u7f29\u6027\u4e0d\u662f\u5f88\u597d\u3002\u5b9e\u9645\u4e0a\uff0c\u6bcf\u6b21\u9700\u8981\u652f\u6301\u65b0\u7684\u5730\u56fe/\u5143\u7ec4/\u8bb0\u5f55\u540d\u79f0\u65f6\uff0c\u90fd\u5fc5\u987b\u5c06\u5176\u6dfb\u52a0\u5230\u8054\u5408\u4e2d\u3002\u5373\u4f7f\u4f60\u53ea\u9700\u8981\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e2a\u9886\u57df\u3002\n\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u4e00\u79cd\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u7684\u4e0d\u540c\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u53ef\u6269\u5c55\u6027\u8981\u597d\u5f97\u591a\u3002\n\u5728\u4f7f\u7528\u5c06\u591a\u4e2a\u503c\u6253\u5305\u4e3a\u4e00\u4e2a\u503c\u7684\u51fd\u6570(\u4e0e\u8bb0\u5f55\u3001\u6620\u5c04\u6216\u5143\u7ec4\u7ed1\u5b9a)\u4f5c\u4e3a\u8f93\u5165\u65f6\uff0c\u6211\u4eec\u9762\u4e34\u7740\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\uff1a\u53ea\u8981\u8f93\u5165\u7c7b\u578b\u4e2d\u5305\u542b\u6211\u4eec\u9700\u8981\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5c31\u4e0d\u5173\u5fc3\u8f93\u5165\u7c7b\u578b\u662f\u4ec0\u4e48\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e24\u4e2a\u5171\u4eab\u67d0\u4e9b\u4e1c\u897f\u7684\u53ef\u80fd\u5730\u56fe\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u5404\u81ea\u72ec\u7acb\u7684\u7c7b\u578b\uff0c\u800c\u8fd9\u4e24\u79cd\u7c7b\u578b\u4f1a\u6709\u4e00\u4e9b\u5171\u540c\u4e4b\u5904\u3002\n%This\u7684\u7c7b\u578b\u4e3a&#39\uff1bCharacter&#39\uff1bCharacter=#{Name=&&gt;\uff1b&34\uff1bAlexander Hamilton&#34\uff1b\uff0cPlay=&&gt;34\uff1bHamilton&#34\uff1b}\u3002%This\u7684\u7c7b\u578b\u4e3a&#39\uff1bPerformer&#39\uff1bPerformer=#{Name=&&gt;\uff1b&#34\uff1bLin-Manuel Miranda&#34\uff1b}\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u60f3\u8bf4\u5b83\u5bf9\u4e8e\u4efb\u4f55\u6620\u5c04\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u53ea\u8981\u5b83\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u547d\u540d\u952e\u3002\n\u6240\u4ee5\u6211\u4eec\u7684\u51fd\u6570\u7c7b\u578b\u4e0d\u5b8c\u5168\u662f(Character|Performer)\u3002\u5b83\u5b9e\u9645\u4e0a\u662f\u201c\u4efb\u4f55\u5730\u56fe\uff0c\u53ea\u8981\u5b83\u6709\u4e00\u4e2a\u540d\u79f0\u952e\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u201d\u3002\u4e3a\u6b64\uff0c\u6211\u5c06\u4f7f\u7528\u6b64\u7b26\u53f7\uff1a#{name}\u3002\n\u4e00\u4e9b\u7c7b\u578b\u7cfb\u7edf\u901a\u8fc7\u7ed3\u6784\u5b50\u7c7b\u578b\u6765\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u800c\u53e6\u4e00\u4e9b\u7c7b\u578b\u7cfb\u7edf\u5219\u4f7f\u7528\u884c\u591a\u6001\u6027\u3002\u4e3b\u8981\u533a\u522b\u5728\u8fd9\u4e2agetter\u51fd\u6570\u4e2d\u5e76\u4e0d\u660e\u663e\uff0c\u4f46\u5728\u4e0b\u4e00\u4e2a\u51fd\u6570setter\u4e2d\u53d8\u5f97\u5f88\u660e\u663e\uff1a\n\u7ed3\u6784\u5b50\u7c7b\u578b\u5316\u65b9\u6cd5\u4f1a\u8bf4\uff0c\u65e0\u8bba\u60a8\u653e\u5165\u4ec0\u4e48\uff0c\u73b0\u5728\u90fd\u77e5\u9053\u5b83\u53ea\u6709\u4e00\u4e2a\u540d\u79f0\u952e\u3002\u56e0\u6b64\uff0c\u60a8\u7684\u6240\u6709\u5176\u4ed6\u952e\u90fd\u6d88\u5931\u4e86(\u5728\u7c7b\u578b\u7cfb\u7edf\u7684\u773c\u4e2d)\uff0c\u5982\u679c\u60a8\u60f3\u6062\u590d\u5b83\u4eec\uff0c\u5c31\u5fc5\u987b\u8fdb\u884c\u67d0\u79cd\u5f3a\u5236\u8f6c\u6362\u3002\u8fd9\u8981\u5f52\u56e0\u4e8e\u4e00\u79cd\u79f0\u4e3a\u5305\u5bb9\u7684\u5b50\u7c7b\u578b\u884c\u4e3a\uff0c\u4ee5\u53caTypeScrip\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u7684\u65b9\u5f0f\u3002\n\u884c\u591a\u6001\u65b9\u6cd5\u6ca1\u6709\u4fe1\u606f\u4e22\u5931\uff0c\u800c\u662f\u643a\u5e26M\u62e5\u6709\u7684\u5176\u4f59\u5b57\u6bb5\u3002\u8fd9\u5c31\u662fOCaml\u548cPureScripths.com\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u5728PureScript\u4e2d\uff0c\u8fd9\u9002\u7528\u4e8e\u8bb0\u5f55\u7c7b\u578b\uff0c\u800c\u5728OCaml\u4e2d\uff0c\u8fd9\u9002\u7528\u4e8e\u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u3002\n\u8fd9\u4e24\u79cd\u65b9\u6cd5\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u90fd\u9002\u7528\u4e8e\u4f7f\u7528\u8f93\u5165\u5143\u7ec4\u3001\u8bb0\u5f55\u6216\u6620\u5c04\u7684\u6240\u6709\u5b57\u6bb5\u7684\u60c5\u51b5\u3002\n\u8fd9\u6bd4#1\u66f4\u5bb9\u6613\u5904\u7406\uff0c\u56e0\u4e3a\u73b0\u5728\u6211\u4eec\u6709\u4e86\u66f4\u591a\u7684\u4fe1\u606f\u6765\u77e5\u9053\u503c\u7684\u5b9e\u9645\u7c7b\u578b\uff1a\u6807\u8bb0\u3002\n%\u6211\u4eec\u5de5\u4f5c\u51fd\u6570\u7684\u7c7b\u578b(ATOM(&#34\uff1bOK&#34\uff1b)|ATOM(&#34\uff1bNOT_OK&34\uff1b))-&gt\uff1b{ATOM(&#34\uff1bOK&#34\uff1b)\uff0cATOM(&#34\uff1b\u6210\u529f&#34\uff1b)}|{ATOM(&#34\uff1b\u9519\u8bef&#34\uff1b)\uff0c\u5b57\u7b26\u4e32}\u3002\n\u5b83\u73b0\u5728\u5728\u56db\u5143\u7ec4\u7684\u5de6\u4fa7\u6709\u8fd9\u4e9b\u5e38\u91cf\u503c(ok\uff0cerror)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8fdb\u4e00\u6b65\u7f29\u5c0f\u9884\u671f\u7c7b\u578b\u7684\u8303\u56f4\u3002\n\u8fd9\u662fErlang\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u4e00\u79cd\u6210\u719f\u6a21\u5f0f\uff0c\u5927\u591a\u6570\u53ef\u80fd\u5931\u8d25\u7684\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de\u5e26\u6709ok\u6216error\u6807\u7b7e\u7684\u7ed3\u679c\u5143\u7ec4\u3002\n\u516c\u5e73\u5730\u8bf4\uff0c\u8fd9\u4ecd\u7136\u5b58\u5728#1\u7684\u95ee\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2aok\u6807\u8bb0\u7684\u503c\uff0c\u8be5\u503c\u4e5f\u662f\u7c7b\u578b\u7684\u65e0\u6807\u8bb0\u8054\u5408\u3002\n%a\u6211\u4eec\u5de5\u4f5c\u529f\u80fd\u7684\u66f4\u590d\u6742\u7248\u672cwork(Ok)-&gt\uff1b{ok\uff0cgo_on}\uff1bwork(Done)-&gt\uff1b{ok\uff0c&lt\uff1b&gt\uff1b&#34\uff1b\u4f1f\u5927\u7684\u5de5\u4f5c\uff01&#34\uff1b&gt\uff1b&gt\uff1b}\uff1bwork(Not_Ok)-&gt\uff1b{\u9519\u8bef\uff0c&lt\uff1b&34\uff1b\u51fa\u73b0\u95ee\u9898&#34\uff1b&gt\uff1b&gt\uff1b}\u3002\n%\u6211\u4eec\u5c06\u5ffd\u7565In\u7c7b\u578b\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u8f93\u51fa\u7c7b\u578b(In)-&gt\uff1b{ATOM(&#34\uff1bOK&#34\uff1b)\uff0cATOM(&#34\uff1bGO_ON&#34\uff1b)|STRING}|{ATOM(&#34\uff1bError&#34\uff1b)\uff0cSTRING}\u3002\n\u5982\u679c\u60a8\u5f97\u5230\u7684\u662f{ok\uff0cvalue}\uff0c\u5219\u952e\u5165value\u7684\u95ee\u9898\u4e0e\u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\u5b8c\u5168\u76f8\u540c\u3002\n\u4f46\u662f\uff0c\u6b64\u6a21\u5f0f\u6709\u52a9\u4e8e\u6211\u4eec\u8f93\u5165\u5185\u5bb9\uff0c\u56e0\u4e3a\u6211\u4eec\u59cb\u7ec8\u53ef\u4ee5\u4e00\u76f4\u5411\u4e0b\u6807\u8bb0\u6570\u636e\uff1a\n%\u4e0e\u4e0a\u4e00\u4e2a\u5de5\u4f5c\u51fd\u6570\u76f8\u540c\uff0c\u4f46\u5e26\u6709\u6807\u7b7e\uff01Work(Ok)-&gt\uff1b{ok\uff0cgo_on}\uff1bWork(Done)-&gt\uff1b{ok\uff0c{Message\uff0c&lt\uff1b&lt\uff1b&#34\uff1bGood Job\uff01&#34\uff1b&gt\uff1b&&gt;\uff1b}\uff1bWork(Not_OK)-&gt\uff1b{\u9519\u8bef\uff0c&lt\uff1b&lt\uff1b&#34\uff1b&&gt;\u51fa\u73b0\u95ee\u9898\u3002\n\u8fd9\u6709\u70b9\u7e41\u7410\uff0c\u4f46\u4e5f\u66f4\u6613\u4e8e\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u7c7b\u578b\u68c0\u67e5\u5668\u53ef\u4ee5\u5c06\u7279\u5b9a\u7684\u6807\u8bb0\u4e0e\u7279\u5b9a\u7684\u7c7b\u578b\u76f8\u5173\u8054\u3002\n\u8bed\u8a00\u4e2d\u5b58\u5728\u4e00\u79cd\u4e0d\u5bf9\u79f0\u6027\uff1a\u5728\u8bed\u8a00\u5c42\u9762\u4e0a\uff0c\u6211\u4eec\u53ea\u80fd\u63a5\u6536\u4fe1\u606f\u3002\u6ca1\u6709\u7528\u4e8e\u53d1\u9001\u6d88\u606f\u7684\u7279\u6b8a\u6784\u9020\u3002\u8981\u53d1\u9001\u6d88\u606f\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528Erlang\uff1aSend/2\u51fd\u6570\u6216\u5176\u64cd\u4f5c\u5458\u7248\u672c\uff01\n\u56e0\u6b64\uff0c\u5728\u4efb\u4f55\u51fd\u6570\u4e2d\uff0c\u5f53\u6211\u4eec\u9047\u5230\u63a5\u6536\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u8bf4\u4e24\u4ef6\u4e8b\uff1a\n\u4e0b\u9762\u662f\u8f85\u52a9\u8f93\u5165--\u8fd9\u4e2a\u51fd\u6570\u5c06\u63a5\u6536\u4e00\u4e2a\u4e0d\u662f\u76f4\u63a5\u53c2\u6570\u7684\u503c\uff0c\u5b83\u53ef\u4ee5\u50cf\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u4e00\u6837\u4f7f\u7528\u5b83\u3002\n\u5982\u679c\u6709\u8d85\u65f6(\u540e\u9762\u7684\u90e8\u5206)\uff0c\u90a3\u4e48\u4e5f\u6709\u4e00\u4e2a\u622a\u6b62\u65e5\u671f\u3002\u4ece\u5b57\u9762\u4e0a\u8bb2\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u5c31\u4f1a\u88ab\u627c\u6740\u3002\n\u6211\u4eec\u73b0\u5728\u4e0d\u4f1a\u592a\u5728\u610f\u622a\u6b62\u65e5\u671f\uff0c\u4f46\u6211\u4eec\u4f1a\u770b\u770b\u6211\u4eec\u6536\u5230\u7684\u8fd9\u4e9b\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u6b64\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\u793a\u4f8b\uff1a\n\u6211\u4eec\u5bf9\u521a\u521a\u53d1\u751f\u7684\u6a21\u5f0f\u5339\u914d\u975e\u5e38\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u6a21\u5f0f\u5339\u914d\u672c\u8d28\u4e0a\u544a\u8bc9\u6211\u4eec\u53ef\u4ee5\u63a5\u6536\u4ec0\u4e48\u6d88\u606f\u3002\n\u5982\u6b64\u4e4b\u591a\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2aRECEIVE\u8868\u8fbe\u5f0f\u770b\u4f5c\u662f\u5185\u7f6e\u4e8e\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u51fd\u6570\u6765\u8c03\u7528\u5b83\u3002\n%\u5c06RECEIVE\u8f6c\u6362\u4e3a\u51fd\u6570\u8c03\u7528\u5668()-&gt\uff1bReceive{X\uff0cY}-&gt\uff1bX+Y End\u3002Adder()-&gt\uff1bReceive(Fun({X\uff0cY})-&gt\uff1bX+Y End)\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u5206\u6790\u4e0a\u9762\u7684\u70b91\u3001\u70b92\u548c\u70b93\u7684\u76f8\u540c\u65b9\u5f0f\u6765\u5206\u6790\u8fd9\u4e2a\u5185\u90e8\u51fd\u6570\u3002\n\u5982\u679c\u6211\u4eec\u4f7f\u7528\u52a0\u6cd5\u5668/0\u6765\u542f\u52a8\u8fdb\u7a0b\uff0c\u90a3\u4e48\u91cd\u65b0\u6784\u9020\u63a5\u6536\u8868\u8fbe\u5f0f\u5b9e\u9645\u4e0a\u662f\u8ba9\u7c7b\u578b\u68c0\u67e5\u5668\u80fd\u591f\u7406\u89e3\u8fdb\u7a0b\u53ef\u4ee5\u63a5\u6536\u5230\u4ec0\u4e48\u6d88\u606f\u7684\u5173\u952e\u3002\n\u53e6\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u5730\u65b9\u662f\u8bed\u8a00\u7684\u52a8\u6001\u90e8\u5206\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u7279\u6b8a\u7684\u8bed\u6cd5\u6765\u51b3\u5b9a\u8981\u8fd0\u884c\u4ec0\u4e48\u4ee3\u7801\u3002\nErlang\u652f\u6301\u5b8c\u5168\u52a8\u6001\u5730\u6307\u5b9a\u8981\u5728\u8be5\u6a21\u5757\u4e2d\u8c03\u7528\u7684\u6a21\u5757\u548c\u51fd\u6570\u3002\n%M\u662f\u6211\u4eec\u7684\u6a21\u5757\u540d\u79f0em=Hello\u3002%F\u662f\u6211\u4eec\u7684\u51fd\u6570\u540d\u79f0F=world\u3002M\uff1aF()=\uff1a=Hello\uff1aworld()\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u51c6\u786e\u8ddf\u8e2aM\u548cF\u7684\u503c\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053M\uff1aF()\u5728\u8fd9\u91cc\u4f1a\u662f\u4ec0\u4e48\u7c7b\u578b\u5462\uff1f\n\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97M\u4ee5\u83b7\u53d6\u5b9e\u9645\u7684\u6a21\u5757\u540d\u79f0\uff0c\u5e76\u8ba1\u7b97FT\u503c\u4ee5\u4e86\u89e3\u8981\u67e5\u627e\u7684\u51fd\u6570\uff0c\u7136\u540e\u67e5\u627e\u8be5\u51fd\u6570\u7684\u5b9e\u9645\u7c7b\u578b\u3002\n\u5982\u679cM\u6bd4\u4e0a\u4f8b\u4e2d\u7684\u53d8\u91cf\u7ed1\u5b9a\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u3002\u60f3\u8c61\u4e00\u4e0b\u4e0b\u9762\u7684\u573a\u666f\uff1a\n%\u5f53IS_ATOM(\u540d\u79f0)-&gt\uff1b\u540d\u79f0\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5c06\u4ee5MessageM=\u63a5\u6536\u540d\u79f0\u7684\u5f62\u5f0f\u63a5\u6536\u6a21\u5757\u540d\u79f0\u3002M\uff1aRun()\u3002\n\u6211\u4eec\u9700\u8981\u7b49\u5f85\u6536\u5230\u6d88\u606f\u540e\u624d\u80fd\u77e5\u9053\u8981\u67e5\u627e\u54ea\u4e2a\u6a21\u5757\u3002\u8fd9\u662f\u4e0d\u53ef\u4fe1\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u751a\u81f3\u4e0d\u77e5\u9053\u662f\u8c01\u5728\u53d1\u9001\u4fe1\u606f\uff0c\u4e5f\u4e0d\u77e5\u9053\u4fe1\u606f\u662f\u5426\u4f1a\u88ab\u53d1\u9001\u3002\n\u5f53\u7136\uff0c\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684Erlang\u503e\u5411\u4e8e\u4f9d\u9760\u884c\u4e3a\u6765\u786e\u4fdd\u67d0\u4e9b\u7c7b\u578b\u5b58\u5728\uff0c\u56e0\u6b64\u6ce8\u91ca\u9884\u671f\u7684\u6a21\u5757\u884c\u4e3a\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\uff1a\n%\u540c\u4e0a\uff0c\u4f46\u7c7b\u578b-\u6ce8\u89e3M\uff1aRunnable Behavior=Receive Name When is_atom(Name)-&gt\uff1bname end.M\uff1arun()\u3002\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5206\u6790\u8fd9\u4e00\u70b9\uff0c\u5e76\u77e5\u9053Run\u5e94\u8be5\u5177\u6709\u4ec0\u4e48\u7c7b\u578b\uff0c\u6216\u8005\u7acb\u5373\u62b1\u6028Run\u5b9e\u9645\u4e0a\u6ca1\u6709\u5728\u8be5\u884c\u4e3a\u4e2d\u5b9e\u73b0\uff0c\u56e0\u6b64\u4e0d\u80fd\u4fdd\u8bc1\u5b58\u5728\u3002\n\u6211\u5e0c\u671b\u6211\u4eca\u5929\u8ba8\u8bba\u7684\u8fd9\u51e0\u4ef6\u4e8b\u80fd\u8ba9\u60a8\u4e86\u89e3\u8f93\u5165Erlang\u8bed\u8a00\u7684\u56f0\u96be\u4e4b\u5904\u3002\u8fd9\u5e76\u4e0d\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6709\u4e9b\u90e8\u5206\u7684\u6253\u5b57\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u5b83\u80af\u5b9a\u6709\u4e00\u4e9b\u68d8\u624b\u7684\u90e8\u5206\uff0c\u6211\u4eec\u5e94\u8be5\u5c0f\u5fc3\u5904\u7406\u3002\n\u5728\u672a\u6765\uff0c\u6211\u5c06\u5199\u66f4\u591a\u5173\u4e8e\u8bed\u8a00\u7c7b\u578b\u7684\u5185\u5bb9\uff0c\u7279\u522b\u662f\u50cf\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u6a21\u5f0f\u5339\u914d\u8fd9\u6837\u7684\u90e8\u5206\uff0c\u4ee5\u53ca\u8fd0\u884c\u5e93\u53ca\u5176\u5c5e\u6027\uff0c\u4f8b\u5982\u70ed\u4ee3\u7801\u91cd\u8f7d\u3001\u786e\u5b9a\u8fdb\u7a0b\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u68c0\u67e5\u7c7b\u578b\u5b89\u5168\u7684\u6d88\u606f\u4f20\u9012\u3002\n\u611f\u8c22Pontus Nagy\u3001Manuel Rubio\u3001Malcolm Matalka\u548cCalin Capitanu\u62bd\u51fa\u65f6\u95f4\u5ba1\u9605\u672c\u6587\u7684\u65e9\u671f\u8349\u7a3f\u3002", "note_en": "I heard before that Erlang and the BEAM did not pack a static type systembecause their creators  \u201ccouldn\u2019t build it\u201d.\n  While building a sophisticated, reliable and scalable type checker isabsolutely not a walk in the park, building one that works is not that hard.\n If it could have been done, it would\u2019ve been done, and it would\u2019ve beenhardened by the same process OTP was hardened and turned into what it is today:a reliability gold standard.\n So I decided to write an Erlang type-checker to really understand what is hardabout typing Erlang. I know Dialyzer exists, and its great, I just wanted toget a good understanding from scratch.\n It hit me that there is a split in here, that is sometimes hard to notice andit makes a world of a difference. There is  an Erlang language, calledStandard Erlang, and there is  an Erlang Runtime, the BEAM. Along the samelines as there is a Java language, and then there\u2019s the JVM.\n We tend to speak of these 2 things as if they were one, but if we isolate thelanguage from the runtime, we find that they exhibit very different behaviors.\n In particular the runtime brings to the table  distribution and  hot codereloading, which makes typing things a distributed-systems problem. Fun, yes,but very impractical.\n On following essays I\u2019ll do a more thorough and formal treatise of theoperational semantics of the language and how to go about implementing your owntype-checker for it, the distributed and dynamic nature of the runtime, and howthey interact with each other.\n Here I\u2019ll go over what I\u2019ve learned takes to type the Standard Erlang in a moresuperficial way, and what are some thorny parts that we will encounter.\n   Erlang is a dynamically, strongly typed language. It includes just a littleextra over your typical functional programming language. Overall, Erlang isn\u2019t that big alanguage.\n My eye-ball estimation is that it is about a 3rd of the size of OCaml, andabout a 5th of the size of Java.\n  % an erlang module-module(hello_world).-export([hi/1]). % &lt;-- this a compiler annotationhi(noone) -&gt; sad;hi(Name) -&gt; &lt;&lt;&#34;Hello, &#34;, (Name)/binary, &#34;!&#34;&gt;&gt;.\n An Erlang program consists of a number of  modules, each module is just a filewith a bunch of  functions in it and a few  annotations used to tell thecompiler what\u2019s exported, who the module author is, what a function type issupposed to be, etc.\n There\u2019s quite a few things you can write in Erlang that are relatively common:\n  And then there\u2019s a few things that aren\u2019t common at all:\n  But in general, the language expressivity comes from it being rather simple.Most problems are solved by making functions that call each other, mostfunctions pattern match on exactly the data they need, loops are achievedthrough recursion, and we\u2019re done.\n Exceptions are very common, since failing to pattern match will result in anexception. For this the language supports the  catch, and  try..catch..afterexpressions, but it is highly unidiomatic to use them.\n The superb uptime through supervision that Erlang is known for is actuallybaked into the runtime, not the language. The language itself has no notion ofprocesses, links, or sending messages. The only thing it does have is  receiveexpressions for  consuming messages.\n   In writing the type-checker, I\u2019ve found a few things that are worth bringing up:\n  There may be other language constructs that are not friendly to staticanalysis. I\u2019ll try to write and cover more in the future.\n  An Erlang value can have a single type but we expect that type to be known onlyat runtime. This means that both the input and returning types of a functionare actually unknown  until we run the function.\n So whenever you see a function like  hi/1 above, calling it could actuallyreturn a value of different types, depending on how the function was written.\n For example, calling  hi(noone) returns the atom  sad. Instead, calling hi(&lt;&lt;&#34;Joe&#34;&gt;&gt;) returns the string  &lt;&lt;&#34;Hello, Joe!&#34;&gt;&gt;. The atom  sad and thestring have different types. Calling  hi(0) will result in an exception.\n If we were to write down the type of this function we\u2019d have to say somethinglike:\n  This is present in every other dynamic language: Lisp, Lua, Javascript, Python,Ruby, Smalltalk, you name it.\n Writing a type-checker that deals with this is certainly possible, as it hasbeen done before in tools like  Flow and  TypeScript,but it certainly isn\u2019t obvious how to.\n To better understand how this can be dealt with, we need to talk about  UnionTypes.\n Union types allow us to express that a value may belong to one of manydifferent types at the same time. E.g,  1 is a  number, but it is also a (number | bool). In the same way,  true is a  bool, but it is also a (number | bool).\n  The key here is that the value itself doesn\u2019t have explicit information aboutwhich type from the union it actually belongs to, and we\u2019re bound to find thisout through  refinements.\n We can do these refinements in 2 ways through the use of guards and patternmatching.\n  Through the use of guards we can refine the actual type of a value into asingle type. For example:\n % the infamous left_pad functionleft_pad(A, B) when is_binary(A) -&gt; &lt;&lt;(A)/binary, (B)/binary&gt;&gt;;left_pad(A, B) when is_number(A) -&gt; left_pad(binary:copy(&lt;&lt;&#34; &#34;&gt;&gt;, A), B).\n   But it is thanks to the guards  is_binary/1 and  is_number/1 that we  refinethe type of the inputs to be just  string or just  number.\n This makes it possible to say that  binary:copy(&lt;&lt;&#34; &#34;&gt;&gt;, A) is safe, becauseat that point we know that  is_number(A) was true, and so  A\u2019s type has beenrefined from  string | number to just  number. Otherwise the guard would havebeen false.\n However, we can\u2019t use any function as a guard. We must use only built-infunctions that already come with the Erlang runtime.\n   Through pattern matching we can do something very similar, and establishour expectations of the values. For example:\n % a good old list length countercount(A=[_|_]) -&gt; count(A, 0).count([], C) -&gt; C;count([_|T], C) -&gt; count(T, C+1).\n In this case, we are guaranteed that if our function pattern matches, then  Awill be a list.\n We don\u2019t really know what the list elements are, but of course we can try andcontinue pattern matching and using guards until we refine it \u201cenough\u201d.\n These two approaches, while composable, have the unfortunate property that theydon\u2019t generalize to all kinds of data. They should work well tho for: atoms,literals, and anything that there is a guard available for.\n  Maps, tuples, and records can work with this, but it doesn\u2019t scale very well.You essentially have to add the new map/tuple/record name to the union everytime you want it supported. Even if you need a single field out of them.\n In the next section we\u2019ll see a different approach for dealing with this datathat scales much better.\n  When working with functions that take as inputs many values packed into one, beit with records, maps, or tuples, we\u2019re faced with a different issue: we don\u2019tcare what the input type is  as long as it has what we need in it.\n For example, if we have two possible maps that share some things, both of themcould be thought of as their own separate type, and these 2 types would havesomething in common.\n % this has type &#39;character&#39;Character = #{ name =&gt; &#34;Alexander Hamilton&#34;, play =&gt; &#34;Hamilton&#34; }.% this has type &#39;performer&#39;Performer = #{ name =&gt; &#34;Lin-Manuel Miranda&#34; }.\n       In fact, I\u2019d say that it will work just fine for any map  as long as it has aname key that is a string.\n So the type of our function isn\u2019t quite  (character | performer). It actuallyis \u201cAny map as long as it has a name key that is a string\u201d. I\u2019ll use thisnotation for that:  #{ name }\n  Some type-systems support this with Structural Subtyping, some others use RowPolymorphism. The main difference isn\u2019t obvious in this getter function, butbecomes obvious in the next one, a setter:\n  The structural subtyping approach would say that whatever you put in, it isnow known to only have a  name key. So all your other keys have disappeared(to the eyes of the type-system) and if you want to recover them you have to dosome sort of casting. This is due to a subtyping behavior called  subsumptionand its the way that TypeScript handles this.\n The row polymorphic approach has no information loss, and instead carriesaround the rest of the fields that  M had. This is how OCaml and PureScripthandles this. In PureScript this works for record types and in OCaml this isimplemented for the object-oriented system.\n Either one of this approaches extends to the case where we use  all of thefields of the input tuple, record, or map.\n     This is an easier thing to deal with than #1, because now we have moreinformation to know what is the actual type of the value: the tag.\n    % the type of our work functionwork( atom(&#34;ok&#34;) | atom(&#34;not_ok&#34;) ) -&gt; { atom(&#34;ok&#34;), atom(&#34;success&#34;) } | { atom(&#34;error&#34;), string }\n Which now has these constant values ( ok,  error) on the left side of thetuple, which we can use to further narrow down what the expected types shouldbe.\n This is a well established pattern in the Erlang ecosystem, where mostfunctions that can fail return this result tuples with either an  ok or an error tag.\n To be fair, this still suffers from the problems of #1. We can make a functionthat returns an ok-tagged value that is an untagged union of types as well.\n % a more complex version of our work functionwork(ok) -&gt; {ok, go_on};work(done) -&gt; {ok, &lt;&lt;&#34;great job!&#34;&gt;&gt;};work(not_ok) -&gt; {error, &lt;&lt;&#34;something went wrong&#34;&gt;&gt;}.\n  % we&#39;re omitting the In type because we&#39;re focusing on the output typeswork(In) -&gt; { atom(&#34;ok&#34;), atom(&#34;go_on&#34;) | string } | { atom(&#34;error&#34;), string }\n If you get an  {ok, Value}, typing  Value has the exact same issues wediscussed above.\n However, this pattern helps us in typing things because we can always tag ourdata all the way down:\n % same as last work function but with tags!work(ok) -&gt; {ok, go_on};work(done) -&gt; {ok, {message, &lt;&lt;&#34;great job!&#34;&gt;&gt;}};work(not_ok) -&gt; {error, &lt;&lt;&#34;something went wrong&#34;&gt;&gt;}.\n Which is a little more verbose, but a lot more amenable to type-checking too,since the type-checker can associate a specific tag with a specific type.\n  There is an asymmetry in the language: at the language level we can onlyreceive messages. There is no special constructs for sending messages. To senda message we just use the  erlang:send/2 function, or its operator version !.\n So in any function, when we encounter a  receive expression we are reallysaying 2 things:\n Here be  side-inputs \u2014 this function will receive a value that isnot a direct argument, and it can use it as if it was one.\n If there is a timeout (the  after part), then there is also a  deadline.Literally, since if this was a process, it\u2019d be killed.\n We won\u2019t bother too much with the deadline right now, but we\u2019ll look into theseside-inputs we receive as messages. Here\u2019s an example of this expressions:\n  We are very interested in the pattern matching that just happened up there,since that pattern matching essentially tells us what messages we can receive.\n So much so, that we could think of this  receive expression as a functionbuilt into the language that we can call with a function of our own.\n % transforming a receive, into a function calladder() -&gt; receive {X, Y} -&gt; X + Y end .adder() -&gt; receive(fun ({X, Y}) -&gt; X + Y end).\n And now we can analyze this internal function in the same ways we analyzedpoints 1, 2, and 3 above.\n This reframing of receive expressions was actually key for the type-checker I\u2019mwriting to be able to understand what messages a process could receive, if weused the  adder/0 to start it.\n   Another beast entirely is the dynamic parts of the language that allow us tomake decisions at runtime about what code to run, through special syntax.\n Erlang supports specifying what module, and what function you want to call inthat module, completely dynamically.\n % M is our module nameM = hello.% F is our function nameF = world.M:F() =:= hello:world().\n But how can we tell what type will  M:F() have here if we don\u2019t keep track of exactly what the value of  M and  F are?\n We\u2019d have to  evaluate  M to pick up the actual module name, and evaluate  Fto know what function to look up, and then look up the actual type of thefunction.\n If  M is anything slightly more complex than just a variable binding like inthe example above, we may just not be able to know what it is. Imagine thefollowing scenario:\n % We will receive the module name as a messageM = receive Name when is_atom(Name) -&gt; Name end.M:run().\n We\u2019d need to wait on  receiving a message to know what module to look up. Thisjust isn\u2019t plausible because we can\u2019t even tell who is sending the message, orwhether a message will be sent at all.\n Of course Real World Erlang tends to rely on  behaviors to ensure that certaintypes are there, so perhaps annotating what the expected module behavior iswould help:\n % Same as above, but with a type-annotationM : runnable behavior = receive Name when is_atom(Name) -&gt; Name end.M:run().\n This way we\u2019d be able to analyze this and know what type  run should have, orcomplain immediately that  run isn\u2019t actually implemented in that behavior andthus can\u2019t be guaranteed to exist.\n   I hope these few things I managed to cover today give you an idea of what arethe hard parts of typing the Erlang language. It is not impossible, in factsome parts are rather straightforward to type, but its definitely got somethorny bits that we should address with care.\n In the future I\u2019ll write more about typing the language, in particular partslike binary string pattern matching, and the runtime and its properties, suchas hot-code reloading, figuring out process types, and how to check fortype-safe message passing.\n     Thanks to Pontus Nagy, Manuel Rubio,Malcolm Matalka,and  Calin Capitanufor taking the time to review earlier drafts of this essay.", "posttime": "2020-11-07 14:13:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "erlang,\u7c7b\u578b", "title": "\u4e3a\u4ec0\u4e48\u8f93\u5165Erlang\u5f88\u96be\uff1a\u6807\u51c6Erlang", "title_en": "Why Typing Erlang is Hard: Standard Erlang", "transed": 1, "url": "https://abstractmachines.dev/posts/am012-why-typing-erlang-is-hard.html", "via": "", "real_tags": ["erlang", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "c3bc5923826fbde488ebc1f2e9adc72b.jpg", "infoid": 1033661, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u9700\u8981\u77e5\u9053\u7684\u5173\u4e8eUX/UI\u8bbe\u8ba1\u7684\u4e00\u5207\u90fd\u5728\u4e00\u4e2a\u5730\u65b9\u514d\u8d39(\u800c\u4e14\u662f\u5c0f\u5757\u7684)\u3002", "note_en": "Everything you need to know about UX/UI design all in one place for free (and in bite-sized\u00a0chunks).", "posttime": "2020-11-07 14:13:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e86\u89e3,ui,\u514d\u8d39", "title": "\u60a8\u9700\u8981\u4ece\u9ad8\u7ea7\u89d2\u5ea6\u4e86\u89e3UX/UI\u7684\u6240\u6709\u4fe1\u606f", "title_en": "Everything you need to know about UX/UI at a high-level", "transed": 1, "url": "http://www.kickassux.com/vault", "via": "", "real_tags": ["\u4e86\u89e3", "ui", "\u514d\u8d39"]}, {"category": "", "categoryclass": "", "imagename": "e8a462cce56d2b68b4d24fbea8d89f37.png", "infoid": 1033660, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177youtube-dl\u548c\u5176\u4ed6\u5927\u578b\u5f00\u6e90\u9879\u76ee\u4e00\u6837\uff0c\u63a5\u53d7\u6765\u81ea\u5168\u7403\u5404\u5730\u7684\u8d21\u732e\u3002\u5b83\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u5730\u65b9\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u5c24\u5176\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u8fd9\u573a\u770b\u4f3c\u56fd\u5185\u7684\u6cd5\u5f8b\u7ea0\u7eb7--\u6d89\u53ca\u4ee3\u8868\u7f8e\u56fd\u5531\u7247\u4e1a\u534f\u4f1a(RIAA)\u7684\u5f8b\u5e08\u4ee5\u7f8e\u56fd\u6cd5\u5f8b\u300a\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u300b(Digital Millennium Copyright Act\uff0cDMCA)\u4e3a\u7531\uff0c\u5411\u7f8e\u56fd\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u516c\u53f8Github\u63d0\u51fa\u7684\u64a4\u4e0b\u8981\u6c42--\u53ef\u80fd\u4f1a\u5728\u5168\u7403\u53d1\u5c55\u8fc7\u7a0b\u4e2d\u9020\u6210\u6f0f\u6d1e\uff0c\u5e76\u6270\u4e71\u4e16\u754c\u5404\u5730YouTube-dl\u7528\u6237\u7684\u8bbf\u95ee\u3002\u8fd9\u573a\u4e89\u6267\u6d89\u53ca\u7f8e\u56fd\u884c\u4e1a\u7ec4\u7ec7\u7f8e\u56fd\u5531\u7247\u4e1a\u534f\u4f1a(RIAA)\u7684\u5f8b\u5e08\u5411\u7f8e\u56fd\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u516c\u53f8Github\u63d0\u51fa\u7684\u64a4\u4e0b\u8981\u6c42\uff0c\u7406\u7531\u662f\u7f8e\u56fd\u6cd5\u5f8b\u300a\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u300b(Digital Millennium Copy\u7248\u6743\u6cd5)\u89c4\u5b9a\u4e86\u8fd9\u4e00\u70b9\u3002\n\u7f8e\u56fd\u4ee5\u5916\u7684\u4eba\u957f\u671f\u4ee5\u6765\u4e60\u60ef\u4e8e\u5728\u4e3b\u9898\u680f\u4e2d\u968f\u610f\u5220\u51cfYouTube-dl\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5408\u7406\u5730\u8ba4\u4e3a\uff0c\u4eceGithub\u4e2d\u79fb\u9664YouTube-dl\u662f\u7f8e\u56fd\u7ef4\u6743\u8005\u63a7\u5236\u7f8e\u56fd\u7248\u6743\u6cd5\u7684\u53c8\u4e00\u4f8b\u8bc1\u3002(\u8bd1\u8005\u6ce8\uff1a\u7f8e\u56fd\u4ee5\u5916\u7684\u4eba\u957f\u671f\u4ee5\u6765\u4e60\u60ef\u4e8e\u5728\u4e3b\u9898\u680f\u4e2d\u968f\u610f\u5220\u51cfYouTube-dl)\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5408\u7406\u5730\u8ba4\u4e3a\uff0c\u4eceGithub\u4e2d\u79fb\u9664YouTube-dl\u662f\u7f8e\u56fd\u7248\u6743\u6cd5\u62e5\u6709\u8005\u7684\u53c8\u4e00\u4f8b\u8bc1\u3002\u5bf9\u4e8e\u5404\u5730\u7684\u4e92\u8054\u7f51\u7528\u6237\u6765\u8bf4\uff0c\u53ef\u60b2\u7684\u662f\uff0cRIAA\u5f15\u7528\u7684\u5e76\u4e0d\u662fDMCA 512\u6761\u6b3e\uff0c\u8fd9\u662f\u901a\u5e38\u7684\u4e0b\u7ebf\u8def\u7ebf\uff0c\u800c\u662fDMCA 1201\u6761\u6b3e\uff0c\u5373\u7981\u6b62\u6253\u5f00\u6570\u5b57\u9501\u3002\u800c\u7f8e\u56fd\u6cd5\u5f8b\u4e2d\u5141\u8bb8\u6743\u5229\u4eba\u6050\u5413\u4e00\u5bb6\u7f8e\u56fd\u516c\u53f8\u8fdb\u884c\u5168\u7403\u5ba1\u67e5\u7684\u90a3\u4e00\u90e8\u5206\u7684\u5931\u8d25\uff0c\u4e0d\u4ec5\u4ec5\u4f53\u73b0\u5728\u7f8e\u56fd\u7684\u6cd5\u5f8b\u4f53\u7cfb\u4e2d\u3002\nRIAA\u5728\u9488\u5bf9YouTube-dl\u7684\u4fe1\u4e2d\u5f15\u7528\u4e86DMCA\u5c06\u4f20\u64ad\u53ef\u4ee5\u7ed5\u8fc7\u6570\u5b57\u7248\u6743\u7ba1\u7406\u7684\u6280\u672f\u5b9a\u4e3a\u5211\u4e8b\u72af\u7f6a\uff1a\u5373\u6240\u8c13\u7684\u201c\u89c4\u907f\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\u201d\u3002\u5b83\u8fd8\u63d0\u5230\u4e86\u5305\u542b\u7c7b\u4f3c\u8bed\u8a00\u7684\u5fb7\u56fd\u6cd5\u5f8b\u3002\u4ee5\u4e0b\u662f1201(B)\u4e2d\u7f8e\u56fd\u76f8\u5173\u6cd5\u89c4\u7684\u6838\u5fc3\u5185\u5bb9\uff1a\n\u4efb\u4f55\u4eba\u4e0d\u5f97\u5236\u9020\u3001\u8fdb\u53e3\u3001\u5411\u516c\u4f17\u63d0\u4f9b\u3001\u63d0\u4f9b\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4ea4\u6613\u4efb\u4f55\u6280\u672f\u3001\u4ea7\u54c1\u3001\u670d\u52a1\u3001\u8bbe\u5907\u3001\u90e8\u4ef6\u6216\u5176\u90e8\u5206\uff0c\u800c\u8be5\u6280\u672f\u3001\u4ea7\u54c1\u3001\u670d\u52a1\u3001\u8bbe\u5907\u3001\u90e8\u4ef6\u6216\u5176\u90e8\u5206-\u3002\n\u5176\u8bbe\u8ba1\u6216\u5236\u4f5c\u7684\u4e3b\u8981\u76ee\u7684\u662f\u89c4\u907f\u6280\u672f\u63aa\u65bd\u63d0\u4f9b\u7684\u4fdd\u62a4\uff0c\u8be5\u6280\u672f\u63aa\u65bd\u6709\u6548\u5730\u4fdd\u62a4\u4e86\u8457\u4f5c\u6743\u4eba\u5728\u4f5c\u54c1\u6216\u4f5c\u54c1\u7684\u4e00\u90e8\u5206\u4e2d\u7684\u6743\u5229\uff1b\n\u4ec5\u9650\u4e8e\u5177\u6709\u5546\u4e1a\u610f\u4e49\u7684\u6709\u9650\u76ee\u7684\u6216\u7528\u9014\uff0c\u4f46\u89c4\u907f\u6709\u6548\u4fdd\u62a4\u8457\u4f5c\u6743\u4eba\u5728\u4f5c\u54c1\u6216\u5176\u90e8\u5206\u4e0a\u7684\u6743\u5229\u7684\u6280\u672f\u63aa\u65bd\u6240\u63d0\u4f9b\u7684\u4fdd\u62a4\u9664\u5916\uff1b\u6216\u3002\n\u7531\u8be5\u4eba\u6216\u4e0e\u8be5\u4eba\u4e00\u81f4\u884c\u52a8\u7684\u53e6\u4e00\u4eba\u5728\u8be5\u4eba\u7684\u77e5\u8bc6\u4e0b\u9500\u552e\uff0c\u4ee5\u7528\u4e8e\u89c4\u907f\u4e00\u9879\u6280\u672f\u63aa\u65bd\u6240\u63d0\u4f9b\u7684\u4fdd\u62a4\uff0c\u8be5\u6280\u672f\u63aa\u65bd\u6709\u6548\u5730\u4fdd\u62a4\u7248\u6743\u6240\u6709\u4eba\u5728\u8be5\u4f5c\u54c1\u6216\u5176\u90e8\u5206\u4e0a\u7684\u6743\u5229\u3002\n(\u867d\u7136\u8fd9\u9879\u6cd5\u5f8b\u4e5f\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u3001\u7ecf\u8fc7\u8270\u82e6\u6597\u4e89\u7684\u4f8b\u5916\uff0c\u4f46\u5b83\u4eec\u5927\u591a\u53ea\u9002\u7528\u4e8e\u4f7f\u7528\u89c4\u907f\u5de5\u5177\uff0c\u800c\u4e0d\u9002\u7528\u4e8e\u521b\u5efa\u6216\u5206\u53d1\u89c4\u907f\u5de5\u5177\u3002)\nDMCA 1201\u7684\u8303\u56f4\u975e\u5e38\u5e7f\u6cdb\uff0c\u663e\u7136\u5141\u8bb8\u6743\u5229\u4eba\u5408\u6cd5\u9a9a\u6270\u4efb\u4f55\u4eba\u8d29\u5b50\uff0c\u5728\u4ee3\u7801\u4e2d\u5141\u8bb8\u7528\u6237\u4eceDRM\u9501\u4e2d\u91cd\u65b0\u63a7\u5236\u4ed6\u4eec\u7684\u8bbe\u5907\u3002\n\u751a\u81f3\u57281998\u5e74DMCA\u901a\u8fc7\u4e4b\u524d\uff0cEFF\u5c31\u5df2\u7ecf\u5bf9\u8fd9\u79cd\u505a\u6cd5\u7684\u540e\u679c\u53d1\u51fa\u4e86\u8b66\u544a\u3002\u8fd9\u662f\u56e0\u4e3aDMCA1201\u5e76\u4e0d\u662f\u7f8e\u56fd\u7b2c\u4e00\u6b21\u8003\u8651\u91c7\u7528\u8fd9\u6837\u7684\u8bed\u8a00\u3002DMCA1201\u662f\u9881\u5e03\u4e86\u66f4\u65e9\u7684\u5168\u7403\u6761\u7ea6\u7684\u6761\u6b3e\uff1a\u4e16\u754c\u77e5\u8bc6\u4ea7\u6743\u7ec4\u7ec7(WIPO)1996\u5e74\u7684\u7248\u6743\u6761\u7ea6\u3002\u8be5\u6761\u7ea6\u7684\u5b58\u5728\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u7f8e\u56fd\u7684\u6743\u5229\u4eba\u8bd5\u56fe\u901a\u8fc7\u4e00\u9879\u7c7b\u4f3c\u7684\u53cd\u89c4\u907f\u63d0\u6848\uff0c\u4f46\u6700\u7ec8\u4ee5\u5931\u8d25\u544a\u7ec8\u3002\u8be5\u63d0\u6848\u662f\u514b\u6797\u987f(Clinton)\u653f\u5e9c\u57281995\u5e74\u81ed\u540d\u662d\u8457\u7684\u652f\u6301\u5de5\u4e1a\u7684\u300a\u77e5\u8bc6\u4ea7\u6743\u4e0e\u56fd\u5bb6\u4fe1\u606f\u57fa\u7840\u8bbe\u65bd\u767d\u76ae\u4e66\u300b(White Paper on\u77e5\u8bc6\u4ea7\u6743and the National Information Infrastructure)\u4e2d\u8bbe\u8ba1\u7684\u3002\n\u5f53\u65f6\uff0c\u7531\u4e8e\u7f8e\u56fd\u65e9\u671f\u4e92\u8054\u7f51\u7528\u6237\u3001\u56fe\u4e66\u7ba1\u7406\u5458\u3001\u6280\u672f\u4e13\u5bb6\u548c\u516c\u6c11\u81ea\u7531\u4e3b\u4e49\u8005\u8054\u76df\u7684\u8fd0\u52a8\u963b\u788d\u4e86\u4ed6\u4eec\u7684\u63d0\u8bae\uff0c\u7f8e\u56fd\u7ef4\u6743\u4eba\u58eb\u7684\u652f\u6301\u8005\u901a\u8fc7WIPO\u6d17\u6da4\u4ed6\u4eec\u7684\u63d0\u6848\u3002WIPO\u662f\u4e00\u4e2a\u56fd\u9645\u6761\u7ea6\u7ec4\u7ec7\uff0c\u7531\u70ed\u60c5\u7684\u77e5\u8bc6\u4ea7\u6743\u6781\u5927\u4e3b\u4e49\u8005\u63a7\u5236\uff0c\u5bf9\u7fbd\u7ffc\u672a\u4e30\u7684\u7f51\u7edc\u77e5\u4e4b\u751a\u5c11\u3002\u514b\u6797\u987f\u767d\u76ae\u4e66\u7684\u63d0\u8bae\u5931\u8d25\u4e86\uff0c\u4f46WIPO\u7248\u6743\u6761\u7ea6\u83b7\u5f97\u901a\u8fc7\uff0c\u540e\u6765\u7531\u7f8e\u56fd\u53c2\u8bae\u9662\u9881\u5e03\uff0c\u8d70\u79c1\u56de\u591a\u5e74\u524d\u88ab\u62d2\u7edd\u7684\u6761\u6b3e\u3002\n\u81ea1996\u5e74\u4ee5\u6765\uff0c\u5df2\u6709100\u591a\u4e2a\u56fd\u5bb6\u7b7e\u7f72\u4e86WIPO\u7248\u6743\u6761\u7ea6\u3002\u4e0eDMCA\u76f8\u6bd4\uff0c\u6761\u7ea6\u672c\u8eab\u5bf9\u7b7e\u7f72\u56fd\u7684\u8981\u6c42\u4f7f\u7528\u4e86\u660e\u663e\u4e0d\u90a3\u4e48\u4e25\u5389\u7684\u8bed\u8a00\u3002\u5b83\u66f4\u7b80\u5355\u5730\u8bf4\uff1a\n\u7f14\u7ea6\u65b9\u5e94\u63d0\u4f9b\u5145\u5206\u7684\u6cd5\u5f8b\u4fdd\u62a4\u548c\u6709\u6548\u7684\u6cd5\u5f8b\u8865\u6551\u63aa\u65bd\uff0c\u9632\u6b62\u89c4\u907f\u4f5c\u8005\u5728\u884c\u4f7f\u672c\u6761\u7ea6\u6216\u4f2f\u5c14\u5c3c\u516c\u7ea6\u9879\u4e0b\u7684\u6743\u5229\u65f6\u4f7f\u7528\u7684\u6709\u6548\u6280\u672f\u63aa\u65bd\uff0c\u5e76\u9650\u5236\u672a\u7ecf\u6709\u5173\u4f5c\u8005\u6388\u6743\u6216\u6cd5\u5f8b\u5141\u8bb8\u7684\u4e0e\u5176\u4f5c\u54c1\u6709\u5173\u7684\u884c\u4e3a\u3002\n\u4f46\u5f53\u6761\u7ea6\u88ab\u7eb3\u5165\u7f8e\u56fd\u6cd5\u5f8b\u65f6\uff0c\u6743\u5229\u4eba\u52a0\u5927\u4e86\u60e9\u7f5a\u529b\u5ea6\uff0c\u6269\u5927\u4e86\u6761\u7ea6\u7684\u8303\u56f4\u3002\n\u5927\u591a\u6570\u56fd\u5bb6\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u5b9e\u73b0\u4e2d\u91c7\u7528\u4e86\u5f3a\u5927\u5f97\u591a\u7684DMCA 1201\u8bed\u8a00\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u7f8e\u56fd\u662f\u6700\u65e9\u7684\u91c7\u7528\u8005\u4e4b\u4e00\uff0c\u800c\u4e14\u7b80\u5355\u5730\u590d\u5236\u548c\u7c98\u8d34\u53e6\u4e00\u4e2a\u56fd\u5bb6\u7684\u5b9e\u65bd\u8981\u6bd4\u81ea\u5df1\u624b\u5de5\u5236\u4f5c\u5bb9\u6613\u5f97\u591a\u3002\u4f46\u8fd9\u4e5f\u662f\u56e0\u4e3a\uff0c\u7f8e\u56fd\u8d38\u6613\u4ee3\u8868\u7684\u4e00\u8d2f\u653f\u7b56\u662f\u5411\u5176\u4ed6\u56fd\u5bb6\u65bd\u538b\uff0c\u8981\u6c42\u5b83\u4eec\u6548\u4effDMCA 1201\u7684\u8bed\u8a00\uff0c\u8981\u4e48\u662f\u901a\u8fc7\u5916\u4ea4\u6e38\u8bf4\uff0c\u8981\u4e48\u662f\u8981\u6c42\u5b83\u4f5c\u4e3a\u4e0e\u7f8e\u56fd\u7b7e\u7f72\u8d38\u6613\u534f\u8bae\u7684\u6761\u4ef6\u3002\nDMCA 1201\u81ea\u901a\u8fc7\u4e4b\u65e5\u8d77\u5c31\u5bf9\u521b\u65b0\u548c\u8a00\u8bba\u81ea\u7531\u4ea7\u751f\u4e86\u53ef\u6015\u7684\u5f71\u54cd\u3002\u591a\u5e74\u6765\uff0cEFF\u5728\u6211\u4eec\u7684\u300a\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\u300b\u7cfb\u5217\u4e2d\u8bb0\u5f55\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002\u6211\u4eec\u7ee7\u7eed\u7ec4\u7ec7\u548c\u6e38\u8bf4\uff0c\u4e3a\u4e86\u624b\u673a\u89e3\u9501\u3001\u6062\u590d\u8001\u5f0f\u89c6\u9891\u6e38\u620f\u548c\u7c7b\u4f3c\u7684\u6b63\u5f53\u4f7f\u7528\uff0c\u6682\u65f6\u8c41\u514d\u5176\u6761\u6b3e\uff0c\u5e76\u5728\u7f8e\u56fd\u63d0\u8d77\u8bc9\u8bbc\u5e76\u4e3a\u5176\u8fa9\u62a4\uff0c\u4ee5\u8bd5\u56fe\u51cf\u8f7b\u5176\u635f\u5bb3\u3002\u6211\u4eec\u671f\u5f85\u7740\u5b83\u4e0d\u518d\u662f\u7f8e\u56fd\u6cd5\u5f8b\u7684\u4e00\u90e8\u5206\u7684\u90a3\u4e00\u5929\u3002\n\u4f46\u7531\u4e8eWIPO\u7248\u6743\u6761\u7ea6\uff0cDMCA\u7684\u53cd\u89c4\u907f\u6761\u6b3e\u4e5f\u56f0\u6270\u7740\u4e16\u754c\u4e0a\u8bb8\u591a\u53f8\u6cd5\u7ba1\u8f96\u533a\uff0c\u5305\u62ec\u901a\u8fc7\u4fe1\u606f\u793e\u4f1a\u6307\u4ee42001/29/EC\u7684\u6b27\u76df\uff0c\u8be5\u6307\u4ee4\u89c4\u5b9a\uff1a\n\u6210\u5458\u56fd\u5e94\u63d0\u4f9b\u5145\u5206\u7684\u6cd5\u5f8b\u4fdd\u62a4\uff0c\u9632\u6b62\u5236\u9020\u3001\u8fdb\u53e3\u3001\u5206\u9500\u3001\u9500\u552e\u3001\u51fa\u79df\u3001\u51fa\u552e\u6216\u51fa\u79df\u5e7f\u544a\uff0c\u6216\u4e3a\u5546\u4e1a\u76ee\u7684\u62e5\u6709\u4e0b\u5217\u8bbe\u5907\u3001\u4ea7\u54c1\u6216\u90e8\u4ef6\uff0c\u6216\u63d0\u4f9b\u4e0b\u5217\u670d\u52a1\uff1a\n(B)\u9664\u89c4\u907f\u5916\uff0c\u53ea\u6709\u6709\u9650\u7684\u5546\u4e1a\u4e0a\u91cd\u8981\u7684\u76ee\u7684\u6216\u7528\u9014\uff0c\u6216\u3002\n(C)\u4e3b\u8981\u662f\u4e3a\u4fc3\u6210\u6216\u4fbf\u5229\u89c4\u907f\u4efb\u4f55\u6709\u6548\u7684\u6280\u672f\u63aa\u65bd\u800c\u8bbe\u8ba1\u3001\u751f\u4ea7\u3001\u6539\u88c5\u6216\u8fdb\u884c\u7684\u3002\n\u6b27\u76df\u7684\u6307\u4ee4\u5df2\u7ecf\u53cd\u6620\u4e86\u7f8e\u56fd\u6cd5\u5f8b\u4e2d\u6700\u7cdf\u7cd5\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u663e\u7136\u7981\u6b62\u62e5\u6709\u548c\u5206\u9500\u53cd\u89c4\u907f\u7ec4\u4ef6(\u8fd9\u79cd\u8bed\u8a00\u5bfc\u81f4\u4e86\u672c\u4e16\u7eaa\u5934\u5341\u5e74\u4efb\u4f55\u5728\u7f51\u4e0a\u53d1\u5e03DeCSS\u7b97\u6cd5\u7684\u4eba\u53d7\u5230\u6cd5\u5f8b\u5a01\u80c1\u7684\u8352\u8c2c\u573a\u9762\u3002)\u3002\u6362\u4f4d\u4e3a\u6b27\u6d32\u56fd\u5185\u6cd5\uff0c\u4ee5\u53ca\u5b83\u4eec\u5728\u56fd\u5185\u7684\u89e3\u91ca\uff0c\u6709\u673a\u4f1a\u8ba9\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e00\u6b21\uff0c\u5fb7\u56fd\u7684\u623f\u4e1c\u548c\u5f00\u53d1\u5546\u5bf9\u4ed6\u4eec\u5728\u5fb7\u56fd\u6cd5\u5f8b\u4e0b\u7684\u6743\u5229\u6709\u8db3\u591f\u7684\u4fe1\u5fc3\uff0c\u62d2\u7edd\u4e86RIAA\u7684\u62c6\u9664\u8981\u6c42\u3002\u4f46\u662f\uff0c\u5982\u679c\u7248\u6743\u6240\u6709\u8005\u7ec4\u7ec7\u5e0c\u671b\u7ee7\u7eed\u6ee5\u7528\u7248\u6743\u6761\u7ea6\u7684\u6761\u6b3e\uff0c\u5728\u66f4\u591a\u7684\u56fd\u5bb6\u6253\u51fb\u50cfYouTube-dl\u8fd9\u6837\u7684\u5de5\u5177\uff0c\u4ed6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u5728\u6bcf\u4e2a\u56fd\u5bb6\u6839\u636e\u6bcf\u4e2a\u56fd\u5bb6\u7248\u672c\u7684WIPO\u53cd\u89c4\u907f\u6761\u6b3e\u7684\u6761\u6b3e\u8fdb\u884c\u6597\u4e89\u3002\nEFF\u6709\u4e00\u4e2a\u957f\u671f\u8ba1\u5212\uff0c\u4ee5\u51fb\u8d25\u53cd\u89c4\u907f\u6cd5\u5f8b\uff0c\u65e0\u8bba\u5b83\u4eec\u5728\u54ea\u91cc\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u963f\u6ce2\u7f571201\u3002\u4f46\u6211\u4eec\u9700\u8981\u5168\u7403\u8fd0\u52a8\u7684\u5e2e\u52a9\uff0c\u624d\u80fd\u6700\u7ec8\u6d88\u9664\u5bf9\u4e16\u754c\u521b\u9020\u8005\u3001\u521b\u65b0\u8005\u548c\u6d88\u8d39\u8005\u7684\u6301\u7eed\u653b\u51fb\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u548c\u4e86\u89e3\u4f60\u81ea\u5df1\u56fd\u5bb6\u7684\u53cd\u89c4\u907f\u6761\u6b3e\u6765\u5c3d\u4f60\u7684\u4e00\u4efd\u529b-\u5e76\u4e3a\u4f60\u5f53\u5730\u7684RIAA\u6765\u6572\u95e8\u7684\u90a3\u4e00\u523b\u505a\u597d\u51c6\u5907\u548c\u7ec4\u7ec7\u3002", "note_en": "The video downloading utility youtube-dl, like other large open source projects, accepts contributions from all around the globe. It is used practically wherever there&#39;s an Internet connection. It&#39;s especially shocking, therefore, when what looks like a domestic legal spat\u2013involving a   take-down demand  written by lawyers representing the Recording Industry Association of America (RIAA),\u00a0 a U.S. industry group, to Github, a U.S. code hosting service, citing the Digital Millennium Copyright Act (DMCA), a U.S. law\u2013can rip a hole in that global development process and disrupt access for youtube-dl users around the world.\n Those outside the United States, long accustomed to arbitrary take-downs with &#34;DMCA&#34; in their subject line, might reasonably assume that the removal of youtube-dl from Github is yet another example of the American rightsholders&#39; grip on U.S. copyright law. Tragically for Internet users everywhere, the RIAA was not citing DMCA Section 512, the usual takedown route, but   DMCA Section 1201 , the ban on breaking digital locks. And the failures of that part of American law that can allow a rightsholder to intimidate an American company into an act of global censorship are coded into more than just the U.S. legal system.\n The RIAA&#39;s letter against youtube-dl cites the DMCA 1201&#39;s criminalization of the distribution of technology that can bypass DRM: what\u2019s called the \u201ccircumvention of technical protection measures\u201d. It also mentions German law, which contains similar language. Here&#39;s the core of the  relevant U.S. statute, in 1201(b):\n  No person shall manufacture, import, offer to the public, provide, or otherwise traffic in any technology, product, service, device, component, or part thereof, that\u2014\n is primarily designed or produced for the purpose of circumventing protection afforded by a technological measure that effectively protects a right of a copyright owner under this title in a work or a portion thereof;\n has only limited commercially significant purpose or use other than to circumvent protection afforded by a technological measure that effectively protects a right of a copyright owner under this title in a work or a portion thereof; or\n is marketed by that person or another acting in concert with that person with that person\u2019s knowledge for use in circumventing protection afforded by a technological measure that effectively protects a right of a copyright owner under this title in a work or a portion thereof.\n (While the law also has some important and hard-fought   exceptions , they mostly apply only to   using  a circumvention tool, not to   creating or distributing  one.)\n DMCA 1201 is incredibly broad, apparently allowing rightsholders to legally harass any &#34;trafficker&#34; in code that lets users re-take control of their devices from DRM locks.\n EFF has been warning against the consequences of this approach even before the DMCA was passed in 1998. That&#39;s because DMCA 1201 is not the first time the U.S. considered adopting such language. DMCA 1201 is the enactment of the provisions of an earlier global treaty: the World Intellectual Property Organization (WIPO)&#39;s   Copyright Treaty of 1996 .   That  treaty&#39;s existence is itself largely due to American rightsholders&#39; abortive attempt to pass a similar anti-circumvention proposal devised in the Clinton administration&#39;s notoriously pro-industry 1995   White Paper on Intellectual Property and the National Information Infrastructure .\n Stymied at the time by campaigns by a coalition of early Internet users, librarians, technologists, and civil libertarians in the United States, supporters of U.S. rightsholders   laundered their proposal  through the WIPO, an international treaty organization controlled by enthusiastic intellectual property maximalists with little understanding of the fledgling Net. The Clinton White Paper proposals failed, but the WIPO Copyright Treaty passed, and was later enacted by the U.S. Senate, smuggling back the provisions that had been rejected years before.\n Since 1996, over 100 countries have signed onto the WIPO Copyright Treaty. The Treaty itself uses notably less harsh language in what it requires from its signatories than the DMCA. It says, more simply:\n Contracting Parties shall provide adequate legal protection and effective legal remedies against the circumvention of effective technological measures that are used by authors in connection with the exercise of their rights under this Treaty or the Berne Convention and that restrict acts, in respect of their works, which are not authorized by the authors concerned or permitted by law.\n But rightsholders ratcheted up the punishments and scope of the Treaty when it was incorporated in U.S. law.\n Most countries adopted the far stronger DMCA 1201 language in their own implementations. That was partly because the U.S. was one of the earliest adopters, and it&#39;s much easier to simply copy-and-paste another nation&#39;s implementation than craft your own. But it&#39;s also because it has been the continuing policy of the United States Trade Representative to pressure other countries to mirror the DMCA 1201 language, either through diplomatic lobbying, or by requiring it as a condition of signing   trade agreements  with the U.S.\n DMCA 1201 has been loaded with terrible implications for innovation and free expression since the day it was passed. For many years, EFF documented these issues in our   &#34;Unintended Consequences&#34;  series; we continue to organize and   lobby for temporary exemptions to its provisions  for the purposes of cellphone unlocking, restoring vintage videogames and similar fair uses, as well as file and defend lawsuits in the United States to try and mitigate its damage. We look forward to the day when it is no longer part of U.S. law.\n But due to the WIPO Copyright Treaty, the DMCA\u2019s anti-circumvention provisions infest much of the world&#39;s jurisdictions too, including the European Union via the   Information Society Directive 2001/29/EC , which stipulates:\n Member States shall provide adequate legal protection against the manufacture, import, distribution, sale, rental, advertisement for sale or rental, or possession for commercial purposes of devices, products or components or the provision of services which:\n  (b) have only a limited commercially significant purpose or use other than to circumvent, or\n (c) are primarily designed, produced, adapted or performed for the purpose of enabling or facilitating the circumvention of, any effective technological measures.\n The EU directive already mirrors the worst of U.S. law in that it apparently prohibits the possession and distribution of anti-circumvention components (the language that led to ridiculous spectacle in the 2000s of legal threats against anyone who posted the   DeCSS algorithm online .) Transpositions into domestic European law, and their domestic interpretations, have had the opportunity to make it even worse.\n Fortunately this time, hosts and developers in Germany were confident enough in their rights under German law   to reject  the RIAA&#39;s take-down demands. But if rightsholders\u2019 organizations wish to continue to misuse the provisions of the Copyright Treaty to go after tools like youtube-dl in yet more countries, they will have to be fought in every country, under the terms of each countries&#39; version of the WIPO anti-circumvention provisions.\n EFF has a long-term plan to beat the anti-circumvention laws, wherever they are, which we call   Apollo 1201 . But we need help from a global movement to finally revoke this ongoing attack on the world&#39;s creators, innovators, and consumers. You can do your part by examining and understanding your own country&#39;s anti-circumvention provision\u2013and prepare and organize for the moment when your local RIAA comes knocking on your door.", "posttime": "2020-11-07 14:13:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "youtube,github,\u7f8e\u56fd,\u6cd5\u5f8b", "title": "GitHub YouTube-DL\u4e0b\u67b6\u4e0d\u4ec5\u4ec5\u662f\u7f8e\u56fd\u6cd5\u5f8b\u7684\u95ee\u9898", "title_en": "The GitHub YouTube-Dl Takedown Isn't Just a Problem of American Law", "transed": 1, "url": "https://www.eff.org/deeplinks/2020/11/github-youtube-dl-takedown-isnt-just-problem-american-law", "via": "", "real_tags": ["youtube", "github", "\u7f8e\u56fd", "\u6cd5\u5f8b"]}, {"category": "", "categoryclass": "", "imagename": "d628a0e2007fcef5394ac2ada5a9cb69.jpg", "infoid": 1033658, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c3d\u7ba1\u523b\u677f\u5370\u8c61\u4e2d\u7684\u79d1\u5b66\u5bb6\u5446\u5728\u5b9e\u9a8c\u5ba4\u91cc\uff0c\u4f46\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u81f3\u5c11\u4f1a\u82b1\u4e00\u4e9b\u65f6\u95f4\u5728\u91ce\u5916\u7814\u7a76\u4ed6\u4eec\u7684\u8bfe\u9898\u3002\u5730\u8d28\u5b66\u5bb6\u53c2\u89c2\u706b\u5c71\uff0c\u690d\u7269\u5b66\u5bb6\u9690\u5c45\u5230\u70ed\u5e26\u96e8\u6797\uff0c\u6d77\u6d0b\u5b66\u5bb6\u5728\u6d77\u6d0b\u4e2d\u6e38\u6cf3\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6ca1\u6709\u65b9\u4fbf\u7684\u592a\u7a7a\u4e4b\u65c5\uff0c\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u548c\u884c\u661f\u79d1\u5b66\u5bb6\u4e0d\u5f97\u4e0d\u773c\u7741\u7741\u5730\u770b\u7740\u4ed6\u4eec\u7684\u5b9e\u9a8c\u79bb\u5f00\u5730\u7403\u3002\n\u968f\u7740SpaceX\u3001Blue Origin\u548c\u7ef4\u73cd\u94f6\u6cb3(Virgin Galaxy)\u7b49\u5546\u4e1a\u53d1\u5c04\u63d0\u4f9b\u5546\u7684\u5d1b\u8d77\uff0c\u8fd9\u79cd\u60c5\u51b5\u5373\u5c06\u6539\u53d8\uff0c\u8fd9\u4e3a\u5e0c\u671b\u5728\u592a\u7a7a\u5f00\u5c55\u5de5\u4f5c\u7684\u79d1\u5b66\u5bb6\u521b\u9020\u4e86\u65b0\u7684\u673a\u4f1a\u3002\u8fd9\u4e9b\u673a\u4f1a\u5927\u591a\u6d89\u53ca\u4e9a\u8f68\u9053\u98de\u884c--\u8fd9\u79cd\u98de\u884c\u8db3\u4ee5\u79bb\u5f00\u5730\u7403\u5927\u6c14\u5c42\uff0c\u5e76\u7ecf\u5386\u957f\u65f6\u95f4\u7684\u5fae\u91cd\u529b--\u6a21\u62df\u81ea\u7531\u843d\u4f53\uff0c\u4f46\u4e0d\u8db3\u4ee5\u7ed5\u5730\u7403\u8fd0\u884c\u3002\u4e0a\u4e2a\u6708\uff0cNASA\u9009\u62e9\u4e86\u897f\u5357\u7814\u7a76\u9662(SwRI)\u7684\u884c\u661f\u79d1\u5b66\u5bb6\u827e\u4f26\u00b7\u65af\u7279\u6069(Alan Stern)\uff0c\u5728\u8be5\u673a\u6784\u7684\u8d44\u52a9\u4e0b\uff0c\u5728\u4e00\u8258\u5546\u4e1a\u822a\u5929\u5668\u7684\u4e9a\u8f68\u9053\u98de\u884c\u4e2d\u8fdb\u884c\u4e86\u4e00\u9879\u5b9e\u9a8c\u3002\u65af\u7279\u6069\u7684\u53d1\u5c04\u65e5\u671f\u4ecd\u4e0d\u786e\u5b9a\u3002\u4f46\u4ed6\u9884\u8ba1\uff0c\u52302022\u5e74\uff0c\u7ef4\u73cd\u94f6\u6cb3\u7684\u592a\u7a7a\u8239\u4e8c\u53f7(SpaceShipTwo)\u5c06\u4f1a\u98de\u4e0a\u592a\u7a7a\u3002\n\u65af\u7279\u6069\u8bf4\uff0c\u5bf9\u4e8e\u6709\u8fdc\u5927\u62b1\u8d1f\u7684\u7814\u7a76\u4eba\u5458\u6765\u8bf4\uff0c\u5c06\u79d1\u5b66\u5bb6\u548c\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e00\u8d77\u9001\u4e0a\u592a\u7a7a\u4e0d\u4ec5\u662f\u4e00\u79cd\u5b9e\u73b0\u613f\u671b\u7684\u5f62\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u5e26\u6765\u5b9e\u9645\u7684\u597d\u5904--\u6bd4\u5982\u964d\u4f4e\u6210\u672c\u3002\u4f8b\u5982\uff0c\u65af\u7279\u6069\u8bf4\uff0c\u4ed6\u5c06\u5728\u65c5\u9014\u4e2d\u64cd\u4f5c\u7684\u897f\u5357\u7d2b\u5916\u7ebf\u6210\u50cf\u7cfb\u7edf(SWUIS)\u5b9e\u9a8c\u7684\u81ea\u52a8\u5316\u5c06\u6bd4\u7b80\u5355\u5730\u9a7e\u9a76\u4eba\u7c7b\u64cd\u4f5c\u5458\u7684\u6210\u672c\u8981\u9ad8\u5f97\u591a\u3002\n\u8ba9\u79d1\u5b66\u5bb6\u76f4\u63a5\u53c2\u4e0e\u4e5f\u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u66f4\u5feb\u3001\u66f4\u7075\u6d3b\u5730\u5e94\u5bf9\u5b9e\u9a8c\u671f\u95f4\u53ef\u80fd\u53d1\u751f\u7684\u4efb\u4f55\u7a81\u53d1\u4e8b\u4ef6\uff0c\u65e0\u8bba\u662f\u597d\u662f\u574f\u3002\u666e\u6e21\u5927\u5b66(Purdue University)\u7814\u7a76\u5458\u3001\u4e9a\u8f68\u9053\u5e94\u7528\u7814\u7a76\u5c0f\u7ec4\u8d1f\u8d23\u4eba\u53f2\u8482\u6587\u00b7\u79d1\u5229\u79d1\u7279(Steven Collicott)\u8868\u793a\uff1a\u201c\u5728\u6574\u4e2a\u79d1\u5b66\u53f2\u4e0a\uff0c\u53c2\u4e0e\u5b9e\u9a8c\u7684\u4eba\u5e26\u6765\u4e86\u53d1\u73b0\u548c\u66f4\u591a\u7684\u77e5\u8bc6\u3002\u201d\u4e9a\u8f68\u9053\u5e94\u7528\u7814\u7a76\u5c0f\u7ec4\u7684\u6210\u5458\u90fd\u662f\u884c\u4e1a\u4e13\u5bb6\uff0c\u81f4\u529b\u4e8e\u589e\u52a0\u4e9a\u8f68\u9053\u98de\u884c\u7684\u673a\u4f1a\u548c\u7ecf\u9a8c\u3002\u201c\u5076\u7136\u53d1\u73b0\u7684\u5386\u53f2\u7531\u6765\u5df2\u4e45\u3002\u201d\n\u540c\u6837\u5728SWRI\u5de5\u4f5c\u7684\u4e39\u00b7\u675c\u5c14\u8fbe(Dan Durda)\u8bf4\uff0c\u5f53\u79d1\u5b66\u5bb6\u8bbe\u8ba1\u548c\u5904\u7406\u5b9e\u9a8c\u65f6\uff0c\u201c\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\uff0c\u5979\u4f1a\u7acb\u523b\u660e\u767d\u3002\u201d\u201c\u5728\u79d1\u5b66\u8fc7\u7a0b\u7684\u8fd0\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u5b9e\u65f6\u6355\u6349\u5230\u8fd9\u4e00\u70b9\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\u201d\n\u628a\u79d1\u5b66\u5bb6\u653e\u5728\u9a7e\u9a76\u4f4d\u4e0a\u4e5f\u4e3a\u6700\u5927\u9650\u5ea6\u5730\u53d1\u6325\u79d1\u5b66\u7814\u7a76\u63d0\u4f9b\u4e86\u673a\u4f1a\u3002\u4e2d\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66(University of Central\u4f5b\u7f57\u91cc\u8fbe)\u7814\u7a76\u5458\u6731\u8389\u00b7\u5e03\u91cc\u585e\u7279(Julie Brisset)\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u5e26\u7740\u4f60\u7684\u5b9e\u9a8c\u98de\u884c\uff0c\u4f60\u5c31\u662f\u5728\u90a3\u91cc\u89c2\u5bdf\u73b0\u5728\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6539\u53d8\u4f60\u7684\u5b9e\u9a8c\u53c2\u6570\uff0c\u4ece\u800c\u589e\u52a0\u4f60\u7684\u79d1\u5b66\u56de\u62a5\u3002\u201d\u5979\u66fe\u966a\u540c\u8fdb\u884c\u4f2a\u592a\u7a7a\u98de\u884c--\u4e5f\u5c31\u662f\u5728\u901a\u8fc7\u629b\u7269\u7ebf\u8f68\u8ff9\u98de\u884c\u63d0\u4f9b\u77ed\u6682\u5fae\u91cd\u529b\u6761\u4ef6\u7684\u98de\u673a\u4e0a\u3002\n\u5728NASA\u7684\u65e9\u671f\uff0cNASA\u5b98\u5458\u8bbe\u60f3\u5b9a\u671f\u5c06\u7814\u7a76\u4eba\u5458\u9001\u4e0a\u592a\u7a7a\u30021972\u5e74\uff0c\u4ed6\u4eec\u6d3e\u51fa\u5730\u8d28\u5b66\u5bb6\u54c8\u91cc\u68ee\u00b7\u65bd\u5bc6\u7279(Harrison Schmitt)\u53c2\u52a0\u963f\u6ce2\u7f5717\u53f7(Apollo 17)\u7684\u6708\u7403\u4e4b\u65c5\uff0c\u4f7f\u4ed6\u6210\u4e3a\u6709\u53f2\u4ee5\u6765\u552f\u4e00\u8bbf\u95ee\u8fc7\u6708\u7403\u7684\u4e13\u4e1a\u79d1\u5b66\u5bb6\u3002\u8be5\u673a\u6784\u7684\u822a\u5929\u98de\u673a\u88ab\u8a89\u4e3a\u592a\u7a7a\u98de\u884c\u7814\u7a76\u4eba\u5458\u7684\u4e3b\u529b\u3002\u7136\u800c\uff0c\u6781\u9ad8\u7684\u6210\u672c\u548c\u4f4e\u4e8e\u9884\u671f\u7684\u98de\u884c\u8d39\u7387\u5927\u5927\u964d\u4f4e\u4e86\u8be5\u9879\u76ee\u7684\u79d1\u5b66\u56de\u62a5\u3002\n\u4eca\u5929\uff0c\u5b87\u822a\u5458\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9(ISS)\u4e0a\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u5b9e\u9a8c\uff0c\u4f46\u98de\u884c\u673a\u4f1a\u4e00\u76f4\u5f88\u5c11\uff0c\u800c\u4e14\u4ecd\u7136\u5f88\u5c11\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u8ba9\u6709\u4ef7\u503c\u7684\u79d1\u5b66\u6401\u6d45\u5728\u5730\u9762\u4e0a\u3002\u6b64\u5916\uff0c\u5e03\u91cc\u585e\u7279\u8bf4\uff0c\u5c3d\u7ba1\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u4e0e\u5728\u8f68\u9053\u4e0a\u64cd\u4f5c\u5b9e\u9a8c\u7684\u4eba\u8fdb\u884c\u8fdc\u7a0b\u901a\u4fe1\uff0c\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u201c\u975e\u5e38\u7e41\u7410\u201d\u548c\u201c\u975e\u5e38\u50f5\u5316\u201d\uff0c\u5979\u7684\u4eb2\u8eab\u7ecf\u5386\u662f\u8fdc\u7a0b\u7ba1\u7406\u51e0\u4e2a\u7531\u5b87\u822a\u5458\u7ba1\u7406\u7684\u56fd\u9645\u7a7a\u95f4\u7ad9\u79d1\u5b66\u8f7d\u8377\u3002\u5979\u548c\u5176\u4ed6\u4eba\u8bf4\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8003\u8651\u5230\u79d1\u5b66\u5bb6\u4eec\u66f4\u6df1\u5165\u7684\u77e5\u8bc6\uff0c\u4ed6\u4eec\u81ea\u5df1\u4f1a\u66f4\u597d\u5730\u4eb2\u81ea\u7167\u770b\u4ed6\u4eec\u7684\u5b9e\u9a8c\u3002\n\u4e0a\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u65af\u7279\u6069\u548c\u4ed6\u7684\u540c\u4e8b\u5728\u822a\u5929\u98de\u673a\u4e0a\u5f00\u53d1\u5e76\u98de\u884c\u4e86SWUIS\u7684\u65e9\u671f\u7248\u672c\uff0c\u5728\u5b87\u822a\u5458\u7684\u64cd\u4f5c\u4e0b\uff0c\u5b83\u6355\u6349\u5230\u4e86\u91d1\u661f\u548c\u6d77\u5c14-\u6ce2\u666e\u5f57\u661f\u7684\u56fe\u50cf\u3002\u8be5\u4eea\u5668\u7684\u5176\u4ed6\u7248\u672c\u5df2\u7ecf\u5728\u6218\u6597\u673a\u4e0a\u98de\u884c\u3002\u56e0\u6b64\uff0c\u5f53\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u7684\u7a7a\u95f4\u6280\u672f\u4efb\u52a1\u59d4\u5458\u4f1a\u5728\u4eca\u5e74\u5e74\u521d\u9996\u6b21\u547c\u5401\u8fdb\u884c\u79d1\u5b66\u5bb6\u76d1\u7763\u7684\u4e9a\u8f68\u9053\u98de\u884c\u5b9e\u9a8c\u65f6\uff0cSWUIS\u7684\u6539\u8fdb\u7248\u672c\u4f3c\u4e4e\u5f88\u5408\u9002\u3002\u5728\u98de\u884c\u671f\u95f4\uff0c\u65af\u7279\u6069\u5c06\u628a\u4eea\u5668\u6307\u5411\u592a\u7a7a\u8239\u4e8c\u53f7\u7684\u4e09\u4e2a\u7a97\u53e3\uff0c\u4ee5\u6821\u51c6\u7a7f\u8fc7\u706b\u7bad\u6392\u6c14\u6216\u4ece\u673a\u8eab\u53cd\u5c04\u7684\u9633\u5149\u5982\u4f55\u5f71\u54cd\u7cbe\u5bc6\u7684\u5929\u6587\u6d4b\u91cf\u3002\u867d\u7136\u8fd9\u662f\u57fa\u672c\u7684\u7ed3\u679c\uff0c\u4f46\u5bf9\u4e8e\u8ba1\u5212\u672a\u6765\u89c2\u6d4b\u7684\u7814\u7a76\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u798f\u97f3\u3002\u65af\u7279\u6069\u8bf4\uff1a\u201c\u6211\u4eec\u5c06\u628a\u4ee5\u524d\u5728\u592a\u7a7a\u98de\u884c\u8fc7\u7684\u5df2\u88ab\u8bc1\u5b9e\u7684\u88c5\u5907\u7528\u4e8e\u65b0\u7684\u7528\u9014\u3002\u201d\n\u4e0e\u6b64\u540c\u65f6\uff0c\u65af\u7279\u6069\u5c06\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aBHEERSS(\u4e9a\u8f68\u9053\u592a\u7a7a\u98de\u884c\u5b9e\u9a8c\u53cd\u5e94\u7684\u751f\u7269\u533b\u5b66\u88c5\u5907\u8bc4\u4f30)\u7684\u53ef\u7a7f\u6234\u4f20\u611f\u5668\u88c5\u7f6e\uff0c\u5728\u6574\u4e2a\u98de\u884c\u8fc7\u7a0b\u4e2d\u8ddf\u8e2a\u4ed6\u7684\u751f\u547d\u4f53\u5f81\uff0c\u8be5\u88c5\u7f6e\u5df2\u5728\u9ad8\u7a7a\u98de\u673a\u98de\u884c\u4e2d\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u4ed6\u548c\u4ed6\u7684\u540c\u4e8b\u8bf4\uff0c\u6765\u81ea\u65af\u7279\u6069\u4e9a\u8f68\u9053\u4e4b\u65c5\u7684BHEERSS\u6570\u636e\u53ef\u4ee5\u4e3a\u6b63\u5e38\u7684\u3001\u975e\u5b87\u822a\u5458\u7684\u4eba\u4f53\u5728\u592a\u7a7a\u4e2d\u7684\u529f\u80fd\u63d0\u4f9b\u6709\u7528\u7684\u65b0\u6570\u636e\u3002\n\u5c3d\u7ba1\u8ba9\u79d1\u5b66\u5bb6\u8fdb\u5165\u592a\u7a7a\u6709\u5176\u81ea\u8eab\u7684\u56de\u62a5\uff0c\u4f46\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u4e00\u76f4\u662f\u8270\u96be\u7684\u3002\u5341\u591a\u5e74\u6765\uff0c\u65af\u7279\u6069\u3001\u675c\u8fbe\u3001\u79d1\u5229\u79d1\u7279\u548c\u5176\u4ed6\u4eba\u4e00\u76f4\u81f4\u529b\u4e8e\u63d0\u9ad8\u4eba\u4eec\u5bf9\u8ba9\u7814\u7a76\u4eba\u5458\u98de\u884c\u7684\u610f\u8bc6\u548c\u653f\u7b56\u3002\u6f5c\u5728\u7684\u7a81\u7834\u51fa\u73b0\u57282013\u5e74\u590f\u5929\uff0c\u5f53\u65f6\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u526f\u5c40\u957f\u6d1b\u91cc\u00b7\u52a0\u5f17(Lori Garver)\u5ba3\u5e03\uff0c\u8be5\u673a\u6784\u5c06\u5411\u4e9a\u8f68\u9053\u98de\u884c\u7814\u7a76\u4eba\u5458\u5f00\u653e\u3002\u4f46\u5546\u4e1a\u592a\u7a7a\u98de\u884c\u8054\u5408\u4f1a(Commercial SpaceAviation Federation)\u7684\u6267\u884c\u8463\u4e8b\u6c64\u7c73\u00b7\u6851\u798f\u5fb7(Tommy Sanford)\u8bf4\uff0c\u90a3\u5e74\u79cb\u5929\uff0c\u5f53\u52a0\u5f17\u79bb\u5f00NASA\u65f6\uff0c\u8fd9\u79cd\u5145\u6ee1\u5e0c\u671b\u7684\u706b\u82b1\u6d88\u5931\u4e86\u3002\u5546\u4e1a\u592a\u7a7a\u98de\u884c\u8054\u5408\u4f1a\u662f\u4e00\u4e2a\u7531\u516c\u53f8\u548c\u7ec4\u7ec7\u7ec4\u6210\u7684\u56e2\u4f53\uff0c\u81f4\u529b\u4e8e\u4e3a\u66f4\u591a\u7684\u4eba\u5f00\u653e\u8fdb\u5165\u592a\u7a7a\u7684\u673a\u4f1a\u3002\u76f4\u52302018\u5e74\u70ed\u7231\u592a\u7a7a\u7684\u524d\u56fd\u4f1a\u4f17\u8bae\u5458\u5409\u59c6\u00b7\u5e03\u91cc\u767b\u65af\u5ef7(Jim Bridenstine)\u6210\u4e3aNASA\u5c40\u957f\u540e\uff0c\u8fd9\u79cd\u52bf\u5934\u624d\u4f1a\u518d\u6b21\u56de\u5347\u3002\n\u6839\u636e\u6851\u798f\u5fb7\u7684\u8bf4\u6cd5\uff0c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u57282020\u5e74\u521d\u63d0\u51fa\u7684\u4ee5\u4eba\u4e3a\u672c\u7684\u7814\u7a76\u8ba1\u5212\u662f\u201c\u5411\u524d\u8fc8\u51fa\u7684\u4e00\u5927\u6b65\u201d\u3002\u5b83\u89c4\u5b9a\u4e86\u8be5\u673a\u6784\u5bf9\u8fd9\u4e00\u7c7b\u522b\u53ef\u63a5\u53d7\u9879\u76ee\u7684\u8981\u6c42\uff0c\u8981\u6c42\u4efb\u4f55\u642d\u8f7d\u6709NASA\u8d44\u52a9\u7684\u5b9e\u9a8c\u7684\u79d1\u5b66\u5bb6\u7684\u822a\u5929\u5668\u5fc5\u987b\u9996\u5148\u8fdb\u884c\u81f3\u5c1114\u6b21\u98de\u884c\uff0c\u5e76\u4e14\u6ca1\u6709\u8d85\u8fc7\u4e00\u6b21\u53d1\u5c04\u6216\u91cd\u8fd4\u5927\u6c14\u5c42\u7684\u4e8b\u4ef6\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u6b21\u901a\u8bdd\u8868\u660e\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u7ec8\u4e8e\u5f00\u59cb\u8ba4\u771f\u5bf9\u5f85\u8f7d\u4eba\u4e9a\u8f68\u9053\u592a\u7a7a\u98de\u884c\u7684\u79d1\u5b66\u6f5c\u529b\u3002\u6851\u798f\u5fb7\u8bf4\uff1a\u201c\u4f60\u5fc5\u987b\u5411\u7814\u7a76\u548c\u79d1\u5b66\u754c\u53d1\u51fa\u6b63\u786e\u7684\u4fe1\u53f7\uff0c\u8ba9\u4ed6\u4eec\u6295\u5165\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u201d\n\u5e03\u91cc\u585e\u7279\u540c\u610f\u8fd9\u4e00\u58f0\u660e\u9884\u793a\u7740\u592a\u7a7a\u79d1\u5b66\u5bb6\u7684\u66d9\u5149\u65f6\u4ee3\u5373\u5c06\u5230\u6765\uff0c\u4f46\u5979\u4ecd\u6301\u8c28\u614e\u6001\u5ea6\u3002\u5979\u8bf4\uff0c\u8fd9\u4e00\u5207\u7684\u72b6\u6001\u5df2\u7ecf\u201c\u4e24\u5e74\u540e\u4e00\u6bb5\u65f6\u95f4\u4e86\u201d\u3002\u65af\u7279\u6069\u770b\u597d\u4ed6\u8fd1\u671f\u65c5\u7a0b\u7684\u524d\u666f\u3002\u7ef4\u73cd\u94f6\u6cb3\u6700\u8fd1\u5c06\u5b83\u7684\u98de\u8239\u79fb\u5230\u4e86\u65b0\u58a8\u897f\u54e5\u5dde\u7684\u7f8e\u56fd\u592a\u7a7a\u6e2f\uff0c\u5728\u90a3\u91cc\u5b83\u53ef\u4ee5\u8fdb\u884c\u9996\u6b21\u98de\u884c\u30022019\u5e74\uff0c\u8be5\u516c\u53f8\u5c06\u5176\u9996\u5e2d\u5b87\u822a\u5458\u6559\u7ec3\u8d1d\u4e1d\u00b7\u6469\u897f\u9001\u5165\u592a\u7a7a\u3002\u84dd\u8272\u8d77\u6e90\u516c\u53f8\u5df2\u7ecf\u5b89\u5168\u5730\u98de\u884c\u4e8613\u6b21\u65b0\u8c22\u6cfc\u5fb7\u98de\u884c\u5668\uff0c\u643a\u5e26\u4e86100\u591a\u4e2a\u6709\u6548\u8f7d\u8377\u8fdb\u5165\u592a\u7a7a\u3002\u7136\u800c\uff0c\u6851\u798f\u5fb7\u8b66\u544a\u8bf4\uff0c\u5373\u4f7f\u518d\u8fdb\u884c\u4e00\u6b21\u98de\u884c\uff0c\u65b0\u8c22\u6cfc\u5fb7\u7684\u8bb0\u5f55\u4e5f\u53ef\u80fd\u4e0d\u7b26\u5408NASA\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u8be5\u673a\u6784\u8d44\u683c\u8ba4\u8bc1\u8fc7\u7a0b\u7684\u67d0\u4e9b\u7ec6\u8282\u3002\u4f46\u603b\u4f53\u800c\u8a00\uff0c\u8fc7\u591a\u7684\u53d1\u5c04\u662f\u4e00\u4e2a\u597d\u8ff9\u8c61\u3002\u4ed6\u8bf4\uff1a\u201c\u8bd5\u98de\u7684\u6b21\u6570\u548c\u9891\u7387\u90fd\u8868\u660e(\u79c1\u8425\u4f01\u4e1a)\u6b63\u5728\u63a5\u8fd1\u3002\u201d\n\u675c\u5c14\u8fbe\u9884\u8ba1\uff0c\u4e0d\u4e45\u4e4b\u540e\uff0c\u7814\u7a76\u4eba\u5458\u5728\u592a\u7a7a\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u5c06\u8d85\u8fc7\u4f20\u7edf\u4e0a\u88ab\u89c6\u4e3a\u4e9a\u8f68\u9053\u822a\u5929\u76ee\u6807\u4eba\u7fa4\u7684\u8ffd\u6c42\u523a\u6fc0\u7684\u201c\u592a\u7a7a\u6e38\u5ba2\u201d\u3002\u4ed6\u8bf4\uff0c\u867d\u7136\u6781\u7aef\u5192\u9669\u8005\u53ef\u80fd\u53ea\u6709\u4e00\u6b21\u65c5\u884c(\u5982\u679c\u4ed6\u4eec\u5f88\u5bcc\u6709\uff0c\u4e5f\u53ef\u80fd\u53ea\u6709\u4e00\u5c0f\u90e8\u5206)\uff0c\u4f46\u7ec4\u7ec7\u548c\u884c\u4e1a\u53ef\u80fd\u6700\u7ec8\u4f1a\u9884\u8ba2\u6bcf\u8f86\u8f66\u6570\u767e\u6b21\u4e9a\u8f68\u9053\u822a\u73ed\u3002\u675c\u5c14\u8fbe\u8bf4\uff1a\u201c\u54af\u54af\u7b11\u7684\u56e0\u7d20\u6d88\u5931\u4e86\uff0c\u4eba\u4eec\u5f00\u59cb\u8ba4\u771f\u5bf9\u5f85\u5b83\u4e86\u3002\u201d\n\u5e03\u91cc\u585e\u7279\u540c\u610f\u8bb8\u591a\u79d1\u5b66\u5bb6\u5df2\u7ecf\u4e3a\u592a\u7a7a\u505a\u597d\u4e86\u51c6\u5907\u3002\u201c\u793e\u533a\u5df2\u7ecf\u51c6\u5907\u597d\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u201d\u5979\u8bf4\u3002\n\u65af\u7279\u6069\u5e0c\u671b\u6210\u4e3a\u4f17\u591a\u8fdb\u884c\u4e9a\u8f68\u9053\u65c5\u884c\u7684\u7814\u7a76\u4eba\u5458\u4e2d\u7684\u7b2c\u4e00\u4e2a\u3002\u4ed6\u8bf4\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u88ab\u538b\u6291\u7684\u5de8\u5927\u9700\u6c42\u3002\u201d\u4ed6\u9884\u8ba1\uff0c\u5982\u679c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u660e\u5e74\u518d\u6b21\u547c\u5401\u8fdb\u884c\u4eba\u7c7b\u770b\u7ba1\u7684\u5b9e\u9a8c\uff0c\u5c06\u4f1a\u6709\u66f4\u591a\u7684\u7814\u7a76\u4eba\u5458\u7533\u8bf7\u3002\n\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e00\u70b9\uff0c\u65af\u7279\u6069\u8bf4\uff0c\u8f66\u8f86\u9700\u8981\u5b9a\u671f\u98de\u884c\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u9700\u8981\u66f4\u591a\u5730\u4e86\u89e3\u822a\u73ed\u4ef7\u683c\uff0c\u6bd4\u5982\u6bcf\u5468\u4e00\u6b21\u3002\u201d\u4e00\u65e6\u5e38\u89c4\u64cd\u4f5c\u5f00\u59cb\uff0c\u65af\u7279\u6069\u5e0c\u671b\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5929\u6587\u5b66\u5bb6\u548c\u884c\u661f\u79d1\u5b66\u5bb6\u5e26\u7740\u4ed6\u4eec\u7684\u5b9e\u9a8c\u98de\u884c\u3002\u201c\u6211\u8ba4\u4e3a\u8fd9\u662f\u672a\u6765\u7684\u6f6e\u6d41\uff0c\u201d\u4ed6\u8bf4\u3002", "note_en": "Although the stereotypical scientist stays in the lab, most researchers spend at least some time studying their subject out in the field. Geologists visit volcanoes, botanists retreat to rain forests, and oceanographers swim the seas. But in the absence of accessible rides to space, astrophysicists and planetary scientists have been forced to watch their experiments leave Earth without them.\n  That is about to change as the rise of commercial launch providers such as  SpaceX,  Blue Origin and Virgin Galactic creates  new opportunities for scientists hoping to do their work in space. Most of these opportunities involve suborbital flights\u2014which are sufficient to leave the bulk of Earth\u2019s atmosphere and to experience long periods of microgravity-simulating free fall yet not powerful enough to orbit Earth. Last month NASA selected planetary scientist Alan Stern of the Southwest Research Institute (SwRI) to conduct an experiment, funded by the agency, onboard a commercial spacecraft\u2019s suborbital flight. Stern\u2019s launch date remains uncertain. But he anticipates flying on  Virgin Galactic\u2019s  SpaceShipTwo by 2022.\n  Far from merely being a form of wish fulfillment for starry-eyed researchers, Stern says, sending scientists to space alongside their experiments can have practical benefits, too\u2014such as reducing costs. For example, automating the Southwest Ultraviolet Imaging System (SWUIS) experiment he will operate on his journey would be \u201csignificantly more expensive\u201d than simply flying a human operator, Stern says.\n  Directly involving scientists can also yield better results by allowing for faster and more flexible responses to any contingencies, good or bad, that may occur during an experiment. \u201cThroughout the history of science, the people being involved with the experiments leads to discoveries and greater knowledge,\u201d says Steven Collicott, a researcher at Purdue University and head of the Suborbital Applications Research Group, whose members are industry experts committed to enhancing the opportunities and experience of suborbital flight. \u201cThere\u2019s a long history of serendipitous discoveries.\u201d\n  When a scientist designs and works with an experiment, \u201cshe understands immediately if something\u2019s not working right,\u201d says Dan Durda, also at SwRI. \u201cCatching that in real time is an incredibly important part of the way the scientific process works.\u201d\n  Putting a scientist in the driver\u2019s seat also provides the opportunities for maximizing the scientific research. \u201cIf you fly with your experiment, you\u2019re there to observe what\u2019s happening right now and, boom, you can immediately change your experiment\u2019s parameters so you augment your scientific return,\u201d says Julie Brisset, a researcher at the University of Central Florida, who has accompanied experiments on pseudo spaceflights\u2014that is, on airplanes that offer brief bursts of microgravity conditions by flying in parabolic trajectories.\n    In NASA\u2019s early days, agency officials envisioned regularly sending researchers to space. And in 1972 they dispatched geologist Harrison Schmitt on  Apollo 17\u2019s lunar voyage, making him the only professional scientist ever to visit the moon. The agency\u2019s space shuttle was heralded as a workhorse for spacefaring researchers. Extremely high costs and lower than expected flight rates, however, significantly reduced the program\u2019s scientific returns.\n  Today astronauts operate a bevy of experiments onboard the International Space Station (ISS), but flight opportunities have been, and remain, few and far between, inevitably stranding worthy science on the ground. Additionally, although researchers can telecommunicate with people operating an experiment in orbit, the process is \u201cvery cumbersome\u201d and \u201cvery rigid,\u201d Brisset says, speaking from her personal experience of remotely shepherding several astronaut-tended ISS science payloads. On balance, she and other say, the scientists themselves would make better in-person caretakers of their experiments, given their more in-depth knowledge.\n  In the 1990s Stern and his colleagues developed and flew an early version of SWUIS onboard the space shuttle, where, operated by astronauts, it captured images of Venus and Comet Hale-Bopp. Other versions of the instrument have flown on fighter planes. So when NASA\u2019s Space Technology Mission Directorate issued its first call for scientist-supervised suborbital flight experiments at the beginning of this year, a modified version of SWUIS seemed like a good fit. During his flight, Stern will point the instrument out three of  SpaceShipTwo\u2019s windows to calibrate how sunlight passing through rocket exhaust or reflecting off the fuselage could impact delicate astronomical measurements. Although basic, the results could be a boon for researchers planning  future observations. \u201cWe\u2019re taking proven gear that has flown in space before and turning it to a new application,\u201d Stern says.\n  At the same time, Stern will track his vital signs throughout the entire flight with a wearable sensor rig called BHEERSS (Biomedical Harness Evaluation of Experimenter Reactions to Suborbital Spaceflight), which has been tested on high-altitude airplane flights. The BHEERSS data from Stern\u2019s suborbital trip, he and his SwRI colleagues say, could offer useful new data about how a normal, nonastronaut human body functions in space.\n    Although including scientists in space comes with its own rewards, getting there has been arduous. For more than a decade, Stern, Durda, Collicott and others have worked to boost awareness of\u2014and policies for\u2014putting researchers in flight. A potential breakthrough came in the summer of 2013, when NASA\u2019s then deputy administrator Lori Garver announced that the agency would be open to flying researchers on suborbital sorties. But that promising spark fizzled out that fall, when Garver left NASA, says Tommy Sanford, executive director of the Commercial Spaceflight Federation, a group of companies and organizations dedicated to opening up access to space for more people. The momentum would not pick up again until after space-loving former congressional representative Jim Bridenstine became NASA\u2019s administrator in 2018.\n  According to Sanford, NASA\u2019s early 2020 call for human-tended research proposals was \u201ca big step forward.\u201d It laid out the agency\u2019s requirements for acceptable projects in this category, mandating that any spacecraft carrying scientists with NASA-funded experiments must first conduct at least 14 flights without more than one launch or reentry incident. More importantly, the call showed NASA was finally getting serious about the science potential of crewed suborbital spaceflight. \u201cYou gotta be sending the right signals to the research and science community to invest their time and effort,\u201d Sandford says.\n  Brisset agrees that the announcement portends a dawning era of spacefaring scientists, but she remains cautious. The status of all this has been \u201ctwo years from now for a while now,\u201d she says. \rStern is bullish on the prospects for his near-future journey. Virgin Galactic recently moved its ship to Spaceport America in New Mexico, where it can make its first flight. In 2019 the company launched its chief astronaut instructor Beth Moses into space. Blue Origin has safely flown its  New Shepard vehicle 13 times, carrying more than 100 payloads into space. Sanford cautions, however, that even with one more flight,  New Shepard\u2019s track record may not meet NASA\u2019s muster because of certain details of the agency\u2019s qualification process. But overall, the plethora of launches is a good sign. \u201cThe number of test flights and frequency of them all signal that [private companies] are getting close,\u201d he says.\n  Before long, Durda expects, researchers will be spending more time in space than the thrill-seeking \u201cspace tourists\u201d traditionally seen as suborbital spaceflight\u2019s target demographic. Whereas extreme adventurers might make a single trip (or a handful if they are wealthy), organizations and industries could wind up booking hundreds of suborbital flights per vehicle, he says. \u201cThe giggle factor is gone, and people are taking it seriously,\u201d Durda says.\n  Brisset agrees that many scientists are prepared for space. \u201cThe community has been ready for a while,\u201d she says.\n  Stern expects to be the first of many researchers undertaking suborbital trips. \u201cThere\u2019s a huge pent-up demand,\u201d he says. He anticipates that if NASA puts out another call for human-tended experiments next year, a larger number of researchers will apply.\n  To reach that point, Stern says that vehicles need to be flying routinely. \u201cWe need to get to flight rates more like once a week,\u201d he says. Once routine operations are underway, Stern hopes to see more and more astronomers and planetary scientists taking flight with their experiments. \u201cI think that\u2019s the wave of the future,\u201d he says.", "posttime": "2020-11-07 13:58:54", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u79d1\u5b66\u5bb6,\u8f68\u9053,scientists,\u98de\u884c", "title": "\u4e9a\u8f68\u9053\u79d1\u5b66\u5bb6\u51c6\u5907\u5411\u5929\u7a7a\u53d1\u8d77\u98ce\u66b4", "title_en": "Suborbital Scientists Prepare to Storm the Heavens", "transed": 1, "url": "https://www.scientificamerican.com/article/suborbital-scientists-prepare-to-storm-the-heavens/", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u8f68\u9053", "\u98de\u884c"]}, {"category": "", "categoryclass": "", "imagename": "059bedcee4c97d00f938caab7c0e1a39.jpg", "infoid": 1033656, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u50cf\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u6700\u8fd1\u51e0\u5929\u6211\u4e5f\u5206\u5fc3\u4e86\u3002\u5728\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u6211\u4e00\u53ea\u773c\u775b\u76ef\u7740\u952e\u76d8\uff0c\u53e6\u4e00\u53ea\u773c\u775b\u76ef\u7740\u4e00\u53f0\u5076\u5c14\u64ad\u653e\u5173\u952e\u5dde\u9009\u4e3e\u7ed3\u679c\u7684\u7535\u89c6\u3002\u5c3d\u7ba1\u80cc\u666f\u5608\u6742\uff0c\u4f46TechCrunch\u7684\u5458\u5de5\u7ed9\u6211\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\uff1b\u628a\u4e16\u754c\u5934\u53f7\u65b0\u95fb\u653e\u5728\u4e00\u8fb9\uff0c\u4e13\u6ce8\u4e8e\u624b\u5934\u7684\u5de5\u4f5c\uff0c\u9700\u8981\u5927\u91cf\u7684\u6ce8\u610f\u529b\u548c\u7cbe\u529b\u3002\n\u5468\u4e00\u611f\u89c9\u50cf\u662f\u9065\u8fdc\u7684\u56de\u5fc6\uff0c\u6240\u4ee5\u4e0b\u9762\u662f\u8fc7\u53bb\u4e94\u5929\u91cc\u6700\u70ed\u95e8\u7684\u989d\u5916\u65b0\u95fb\u3002\u8fd9\u4e9b\u6587\u7ae0\u53ea\u5bf9\u4f1a\u5458\u5f00\u653e\uff0c\u4f46\u4f60\u53ef\u4ee5\u4f7f\u7528\u6298\u6263\u4ee3\u7801EC\u661f\u671f\u4e94\uff0c\u4ee5\u8282\u7701\u4e00\u5e74\u6216\u4e24\u5e74\u8ba2\u960520%\u7684\u6298\u6263\u3002\u8be6\u60c5\u8bf7\u770b\u8fd9\u91cc\u3002\n\u4e3aB2B\u6d3b\u52a8\u521b\u5efa\u7684\u5e02\u573a\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u3002\u6839\u636e\u4e00\u4efd\u62a5\u544a\uff0c2018\u5e74\u8fd9\u4e9b\u573a\u9986\u7684\u4ea4\u6613\u989d\u7ea6\u4e3a6800\u4ebf\u7f8e\u5143\uff0c\u4f46\u9884\u8ba1\u52302024\u5e74\u8fd9\u4e00\u6570\u5b57\u5c06\u8fbe\u52303.6\u4e07\u4ebf\u7f8e\u5143\u3002\n\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u6b63\u5728\u5e2e\u52a9\u90a3\u4e9b\u5728\u652f\u4ed8\u3001\u878d\u8d44\u3001\u4fdd\u9669\u548c\u5408\u89c4\u7b49\u9886\u57df\u8fdb\u884c\u521b\u65b0\u7684\u521d\u521b\u4f01\u4e1a\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8d1d\u6069\u8d44\u672c\u98ce\u9669\u6295\u8d44\u516c\u53f8(Bain Capital Ventures)\u5408\u4f19\u4eba\u6885\u91cc\u7279\u00b7\u608d\u9a6c(Merritt Hummer)\u8868\u793a\uff0c\u201cB2B\u5e02\u573a\u4e0d\u80fd\u7b80\u5355\u5730\u505c\u6ede\u4e0d\u524d\uff0c\u53ea\u5145\u5f53\u7b80\u5355\u7684\u4ea4\u6613\u5e73\u53f0\u3002\u201d\n\u5979\u5efa\u8bae\uff0c\u5728\u672a\u6765\u51e0\u5e74\u5185\uff0c\u6700\u5148\u63a8\u51fa\u521b\u65b0\u7684\u201c\u76f8\u90bb\u670d\u52a1\u201d\u7684\u521d\u521b\u516c\u53f8\u5c06\u6210\u4e3a\u8d62\u5bb6\u3002\n\u5728\u4eca\u5929\u4e0a\u5348\u7684\u300a\u4ea4\u6613\u6240\u300b(The Exchange)\u6742\u5fd7\u4e0a\uff0c\u4e9a\u5386\u514b\u65af\u00b7\u5a01\u5ec9\u59c6\u91c7\u8bbf\u4e86\u4e91\u8ba1\u7b97\u548cSaaS\u516c\u53f8\u7684\u4e09\u4f4d\u9ad8\u7ba1\uff0c\u4e86\u89e3\u4ed6\u4eec\u57282020\u5e74\u7b2c\u4e09\u5b63\u5ea6\u7684\u8868\u73b0\u5982\u4f55\uff1a\n\u6b63\u5982\u63a8\u7279\u4e0a\u7684\u4e00\u4f4d\u8bc4\u8bba\u8005\u6307\u51fa\u7684\u90a3\u6837\uff0c\u4e9a\u5386\u514b\u65af\u4e0d\u4ec5\u4e0e\u6700\u77e5\u540d\u7684\u79d1\u6280\u9ad8\u7ba1\u4ea4\u8c08\uff0c\u4ed6\u8fd8\u63a5\u89e6\u5230\u4e86\u5e7f\u6cdb\u7684\u4eba\u7fa4\uff0c\u8fd9\u4ece\u4ed6\u7684\u62a5\u9053\u8d28\u91cf\u4e2d\u53ef\u89c1\u4e00\u6591\u3002\n\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(SEC)\u672c\u5468\u53d1\u5e03\u4e86\u65b0\u7684\u76d1\u7ba1\u4f17\u7b79\u6307\u5bfc\u65b9\u9488\uff0c\u5141\u8bb8\u516c\u53f8\u6bcf\u5e74\u76f4\u63a5\u4ece\u4e2a\u4eba\u6295\u8d44\u8005\u90a3\u91cc\u7b79\u96c6\u81f3\u591a500\u4e07\u7f8e\u5143\uff0c\u9ad8\u4e8e\u4e4b\u524d107\u4e07\u7f8e\u5143\u7684\u4e0a\u9650\u3002\n\u66fe\u91c7\u8bbfWefunder\u9996\u5e2d\u6267\u884c\u5b98\u5c3c\u53e4\u62c9\u65af\u00b7\u6c64\u9a6c\u96f7\u6d1b\u7684\u5362\u5361\u65af\u00b7\u9a6c\u7279\u5c3c\u8868\u793a\uff1a\u201c\u5bf9\u4e8e\u5bfb\u6c42\u8fd9\u79cd\u7b79\u8d44\u65b9\u5f0f\u7684\u521b\u59cb\u4eba\u4ee5\u53ca\u5bfb\u6c42\u7b80\u5316\u8fd9\u79cd\u65b9\u5f0f\u7684\u5e73\u53f0\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u65e5\u5b50\u5728\u5176\u4ed6\u65b9\u9762\u4e5f\u53d8\u5f97\u66f4\u5bb9\u6613\u4e86\u3002\u201d\n\u5362\u5361\u65af\u53d1\u73b0\uff0c\u4e0e2019\u5e74\u76f8\u6bd4\uff0c\u4e0a\u4e2a\u5b63\u5ea6\u79cd\u5b50\u671f\u521d\u521b\u516c\u53f8\u7684\u878d\u8d44\u51cf\u5c11\u4e8632%\uff0c\u56e0\u6b64\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u613f\u4ece\u4e00\u5927\u7b14\u5c0f\u989d\u8d44\u91d1\u4e2d\u7b79\u96c6\u8d44\u91d1\u7684\u521b\u59cb\u4eba\u6765\u8bf4\uff0c\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d1\u751f\u9006\u8f6c\u3002\n\u5728\u300aExtra Crunch\u300b\u7684\u5ba2\u5ea7\u6587\u7ae0\u4e2d\uff0cDrift\u9996\u5e2d\u6267\u884c\u5b98\u5927\u536b\u00b7\u5361\u585e\u5c14\u89e3\u91ca\u8bf4\uff0c\u592a\u591a\u7684SaaS\u548c\u4e91\u8ba1\u7b97\u516c\u53f8\u5728\u627e\u5230\u6b63\u786e\u7684\u914d\u65b9\u4e4b\u524d\u6d6a\u8d39\u65f6\u95f4\u5c1d\u8bd5\u4e86\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\u3002\n\u201c\u6211\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u6253\u9020\u4e00\u4e2a\u6210\u529f\u7684SaaS\u4e1a\u52a1\u7edd\u5bf9\u6709\u4e00\u4e2a\u53ef\u91cd\u590d\u7684\u8fc7\u7a0b\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u53ef\u9760\u5730\u5f15\u5bfc\u4f60\u9002\u5e94\u4ea7\u54c1\u5e02\u573a\uff0c\u7136\u540e\u5e2e\u52a9\u4f60\u5feb\u901f\u6269\u5f20\u3002\u201d\n\u5e0c\u671b\u6d88\u9664\u5de5\u4f5c\u573a\u6240\u957f\u671f\u5b58\u5728\u7684\u4e0d\u5e73\u7b49\u73b0\u8c61\u7684\u516c\u53f8\u4e0d\u80fd\u53ea\u4f9d\u8d56\u4e8e\u505a\u4ed6\u4eec\u8ba4\u4e3a\u6b63\u786e\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6ca1\u6709\u6570\u636e\u9a71\u52a8\u7684\u65b9\u6cd5\uff0c\u4e3b\u89c2\u5224\u65ad\u548c\u9690\u6027\u504f\u89c1\u5f80\u5f80\u4f1a\u5426\u5b9a\u826f\u597d\u7684\u610f\u56fe\u3002\n\u8bb8\u591a\u521d\u521b\u4f01\u4e1a\u5728\u8fbe\u5230\u4e00\u5b9a\u89c4\u6a21\u540e\u624d\u4f1a\u8058\u7528\u5168\u804c\u4eba\u529b\u8d44\u6e90\u7ecf\u7406\uff0c\u4f46\u8fd9\u7bc7\u7efc\u5408\u7684\u5e16\u5b50\u5217\u51fa\u4e86\u521b\u5efa\u548c\u7ef4\u6301\u516c\u5e73\u85aa\u916c\u6a21\u5f0f\u7684\u51e0\u4e2a\u5173\u952e\u56e0\u7d20\u3002\n\u672c\u5468\u6709\u6d88\u606f\u79f0\uff0cAirbnb\u8ba1\u5212\u5728\u516c\u5f00\u7533\u8bf7\u4e2d\u7b79\u96c6\u7ea630\u4ebf\u7f8e\u5143\uff0c\u4f7f\u5176\u4f30\u503c\u8fbe\u5230300\u4ebf\u7f8e\u5143\u5de6\u53f3\u3002\n\u5b83\u6700\u8fd1\u7684\u878d\u8d44\u4e2d\u662f\u5426\u6f5c\u85cf\u7740\u516c\u4f17\u6295\u8d44\u8005\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\uff1f\nStarling Bank\u521b\u59cb\u4eba\u5b89\u59ae\u00b7\u535a\u767b\u79f0\u65b0\u4e66\u201c\u4e0d\u662f\u56de\u5fc6\u5f55\u201d\nStarling Bank\u521b\u59cb\u4eba\u5b89\u59ae\u00b7\u535a\u767b\u544a\u8bc9TechCrunch\u7684\u53f2\u8482\u592b\u00b7\u5965\u5e0c\u5c14\uff1a\u201c\u4eba\u4eec\u5728\u804c\u4e1a\u751f\u6daf\u7ed3\u675f\u65f6\u4f1a\u5199\u56de\u5fc6\u5f55\u3002\u201d\u201c\u6211\u624d\u521a\u521a\u5f00\u59cb\u3002\u201d\n\u5728\u535a\u767b\u7684\u65b0\u4e66\u300aBank on It\u300b\u4e2d\uff0c\u5979\u8bb2\u8ff0\u4e86\u5979\u5982\u4f55(\u4ee5\u53ca\u4e3a\u4ec0\u4e48)\u51b3\u5b9a\u521b\u5efa\u4e00\u5bb6\u6311\u6218\u8005\u94f6\u884c\uff0c\u6700\u7ec8\u4e0e\u63a8\u51fa\u7ade\u4e89\u5bf9\u624bMonzo\u7684\u540c\u4e8b\u5206\u624b\u7684\u6545\u4e8b\u3002\n\u5979\u8bf4\uff1a\u201c\u8fd9\u771f\u7684\u662f\u628a\u6211\u4eec\u76ee\u524d\u7684\u5904\u5883\u5199\u5728\u7eb8\u4e0a\u3002\u201d\u201c\u8fd9\u672c\u4e66\u5df2\u7ecf\u5199\u4e86\u597d\u51e0\u5e74\u4e86\uff0c\u6211\u5e0c\u671b\u7528\u8fd9\u672c\u4e66\u6765\u6fc0\u52b1\u4e00\u4ee3\u4f01\u4e1a\u5bb6\u3002\u201d\n\u5a1c\u5854\u838e\u00b7\u9a6c\u65af\u5361\u4f26\u7eb3\u65af(Natasha Mascarenhas)\u548c\u4e9a\u5386\u514b\u65af\u00b7\u5a01\u5ec9(Alex Wilhelm)\u5728\u5468\u4e00\u7684\u201c\u4ea4\u6613\u6240\u201d(The Exchange)\u6742\u5fd7\u4e0a\u5408\u4f5c\uff0c\u62a5\u9053\u4e86\u81ea\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u7206\u53d1\u4ee5\u6765\uff0c\u6295\u8d44\u8005\u4e3a\u5973\u6027\u521b\u59cb\u4eba\u63d0\u4f9b\u8d44\u91d1\u7684\u53ef\u80fd\u6027\u5982\u4f55\u964d\u4f4e\u3002\n\u4e9a\u5386\u514b\u65af\u548c\u5a1c\u5854\u838e\u7efc\u5408\u591a\u4e2a\u6765\u6e90\u7684\u6570\u636e\u53d1\u73b0\uff0c\u5973\u6027\u548c\u7537\u5973\u6df7\u5408\u521b\u59cb\u56e2\u961f\u9886\u5bfc\u7684\u521d\u521b\u4f01\u4e1a\u57282020\u5e74\u7b2c\u4e09\u5b63\u5ea6\u83b7\u5f97\u7684\u98ce\u6295\u8d44\u91d1\u6bd4\u7b2c\u4e8c\u5b63\u5ea6\u51cf\u5c11\u4e8648%\uff0c\u5c3d\u7ba1\u603b\u4f53\u878d\u8d44\u6709\u6240\u53cd\u5f39\u3002\n\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u4ece\u7b2c\u4e00\u5b63\u5ea6\u672b\u7684\u6050\u60e7\uff0c\u5230\u7b2c\u4e8c\u5b63\u5ea6\u7684\u4e2d\u7b49\u6c34\u5e73\uff0c\u518d\u5230\u7b2c\u4e09\u5b63\u5ea6\u7684\u7e41\u8363\u3002\u201d\u4ed6\u8bf4\uff1a\u201c\u8fd9\u662f\u4e00\u6b21\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u590d\u51fa\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\u3002\u201c\n\u81ea2020\u5e74\u521d\u52a0\u5165TechCrunch\u4ee5\u6765\uff0c\u5a1c\u5854\u838e\u00b7\u9a6c\u65af\u5361\u4f26(Natasha Mascarenhas)\u4e00\u76f4\u662fTechCrunch\u7684edtech Beats\u7684\u6240\u6709\u8005\uff0c\u5c31\u5728\u75ab\u60c5\u5bfc\u81f4\u5b66\u6821\u5927\u8303\u56f4\u505c\u8bfe\u7684\u51e0\u4e2a\u6708\u524d\u3002\n\u5979\u62a5\u9053\u4e86\u65e0\u6570\u8f6e\u878d\u8d44\uff0c\u91c7\u8bbf\u4e86\u6d3b\u8dc3\u5728\u8be5\u9886\u57df\u7684\u521b\u59cb\u4eba\u548c\u6295\u8d44\u8005\uff0c\u4f46\u5979\u6700\u8fd1\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u8d8b\u52bf\uff1a\u201c\u5e76\u8d2d\u6d3b\u52a8\u6bd4\u5f80\u5e38\u66f4\u6d3b\u8dc3\u3002\u201d\n\u4e9a\u5386\u514b\u65af\u00b7\u5a01\u5ec9(Alex Wilhelm)\u5bf9\u9009\u4e3e\u65e5\u7684\u5e72\u6270\u4e0d\u5c51\u4e00\u987e\uff0c\u4ed6\u5199\u4e86\u4e00\u7bc7\u4e13\u680f\u6587\u7ae0\uff0c\u5168\u9762\u5ba1\u89c6\u4e86\u91d1\u878d\u79d1\u6280\u4e0a\u4e2a\u5b63\u5ea6\u7684\u6295\u8d44\u6d3b\u52a8\u3002\n\u4ed6\u62a5\u544a\u79f0\uff0c2020\u5e74\u7b2c\u4e09\u5b63\u5ea6\uff0c\u201c\u91d1\u878d\u79d1\u6280\u521d\u521b\u4f01\u4e1a\u878d\u8d44\u603b\u989d\u768460%\u6765\u81ea\u4ef7\u503c1\u4ebf\u7f8e\u5143\u6216\u66f4\u591a\u768425\u8f6e\u878d\u8d44\u3002\u201d\n\u8fd9\u4e9b\u5de8\u989d\u878d\u8d44\u662f\u5728\u4e3a\u201c\u4e0b\u4e00\u6279\u72ec\u89d2\u517d\u201d\u63d0\u4f9b\u8d44\u91d1\u5417\uff1f\u73b0\u5728\u8bf4\u8fd8\u4e3a\u65f6\u8fc7\u65e9\uff0c\u4f46\u5f88\u660e\u663e\uff0c\u6d41\u884c\u75c5\u5f15\u53d1\u7684\u4e0d\u786e\u5b9a\u6027\u6b63\u5728\u9a71\u4f7f\u6d88\u8d39\u8005\u6295\u5165\u7f57\u5bbe\u6c49(Robinhood)\u3001Chime\u3001\u67e0\u6aac\u6c34(Lemonade)\u548c\u9c81\u7279(Root)\u7b49\u516c\u53f8\u7684\u6000\u62b1\u3002\n\u4e9a\u5386\u514b\u65af\u75281316\u4e2a\u5b57\u6982\u62ec\u4e86\u4fdd\u9669\u79d1\u6280\u3001\u94f6\u884c\u3001\u8d22\u5bcc\u7ba1\u7406\u548c\u652f\u4ed8\u6295\u8d44\u9886\u57df\u7684\u73b0\u72b6\uff1a\u201c\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u60f3\u770b\u5230\u4e00\u4e9b*IPO\u3002\u201d\n\u4e94\u5e74\u524d\uff0c\u7279\u91cc\u00b7\u4f2f\u6069\u65af(Terri Burns)\u662fTwitter\u7684\u4ea7\u54c1\u7ecf\u7406\u3002\u4eca\u5929\uff0c\u5979\u662f\u7b2c\u4e00\u4f4d\u88ab\u63d0\u5347\u4e3a\u8c37\u6b4c\u98ce\u6295\u5408\u4f19\u4eba\u7684\u9ed1\u4eba\u5973\u6027\uff0c\u4e5f\u662f\u6700\u5e74\u8f7b\u7684\u4eba\u3002\n\u5728\u4e0e\u5a1c\u5854\u838e\u00b7\u9a6c\u65af\u5361\u4f26\u7eb3\u65af(Natasha Mascarenhas)\u7684\u95ee\u7b54\u4e2d\uff0c\u4f2f\u6069\u65af\u8c08\u5230\u4e86\u5979\u5bf9\u8fd9\u4e00\u65b0\u89d2\u8272\u7684\u8ba1\u5212\uff0c\u4ee5\u53ca\u5979\u7684\u6295\u8d44\u8bba\u6587\u3002\n\u4f2f\u6069\u65af\u8bf4\uff1a\u201c\u6211\u4e0d\u77e5\u9053\u5efa\u7acb\u4e00\u4e2a\u53ef\u6301\u7eed\u7684\u4f01\u4e1a\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u800c\u521b\u4e1a\u662f\u4e00\u79cd\u5f88\u597d\u7684\u5b66\u4e60\u8fd9\u4e00\u70b9\u7684\u65b9\u5f0f\u3002\u201d\nGV General\u5408\u4f19\u4ebaMG\u00b7\u897f\u683c\u52d2\u5728\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u7206\u53d16\u4e2a\u6708\u540e\u8c08\u6295\u8d44\u7ec4\u5408\u7ba1\u7406\u548c\u7b79\u6b3e\u3002\n\u521b\u59cb\u4eba\u548c\u6295\u8d44\u8005\u771f\u7684\u4f1a\u79bb\u5f00\u7845\u8c37\uff0c\u53bb\u66f4\u73af\u4fdd\u7684\u5730\u65b9\u5417\uff1f\u65e2\u7136\u6295\u8d44\u8005\u4ec5\u9650\u4e8e\u865a\u62df\u4e92\u52a8\uff0c\u4ed6\u4eec\u662f\u5426\u4f1a\u66f4\u52a0\u4eb2\u529b\u4eb2\u4e3a\u5730\u4e0e\u6295\u8d44\u7ec4\u5408\u4e2d\u7684\u516c\u53f8\u6253\u4ea4\u9053\uff1f\n\u5728\u8fbe\u96f7\u5c14\u00b7\u57c3\u745f\u6797\u987f(Darrell Etherington)\u4e3b\u6301\u7684\u53e6\u4e00\u6b21Crunch Live\u804a\u5929\u4e2d\uff0cGV General\u5408\u4f19\u4ebaMG\u00b7\u897f\u683c\u52d2(MG Siegler)\u8c08\u5230\u4e86\u75ab\u60c5\u662f\u5982\u4f55--\u4ee5\u53ca\u6ca1\u6709--\u5851\u9020\u4ed6\u7684\u7ecf\u8425\u65b9\u5f0f\u7684\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u786e\u5b9e\u89c9\u5f97\u4e8b\u60c5\u6b63\u5728\u4ee5\u4e00\u79cd\u76f8\u5f53\u7cbe\u7b80\u7684\u65b9\u5f0f\u8fd0\u4f5c\uff0c\u6216\u8005\u8bf4\u5728\u8fd9\u4e00\u70b9\u4e0a\u5c3d\u5176\u6240\u80fd\u3002\u201d\n\u201c\u4f46\u662f\uff0c\u4f60\u77e5\u9053\uff0c\u603b\u4f1a\u6709\u66f4\u591a\u7684\u901a\u914d\u7b26--\u6bd4\u5982\u4eca\u5929\u8ddd\u79bb\u7f8e\u56fd\u5927\u9009\u8fd8\u6709\u4e00\u5468\u7684\u65f6\u95f4\u3002\u201d\n\u975e\u5e38\u611f\u8c22\u4f60\u9605\u8bfb\u300aExtra Crunch\u300b\uff0c\u5e0c\u671b\u4f60\u6709\u4e00\u4e2a\u6109\u5feb\u7684\u5468\u672b\u3002", "note_en": "Like many people, I\u2019ve been distracted in recent days. As I write this, I have one eye on my keyboard and another on a TV that sporadically broadcasts election results from battleground states. Despite the background noise, I\u2019m completely impressed with the TechCrunch staff; it takes a great deal of focus and energy to set aside the world\u2019s top news story and concentrate on the work at hand.\n Monday feels like a distant memory, so here\u2019s an overview of top Extra Crunch stories from the last five days. These articles are only available to members, but you can  use discount code  ECFriday to save 20% off a one or two-year subscription. Details  here.\n    Marketplaces created for B2B activity are surging in popularity. According to one report, transactions in these venues generated around $680 billion in 2018, but that figure is predicted to reach $3.6 trillion by 2024.\n The COVID-19 pandemic is helping startups that innovate in areas like payments, financing, insurance and compliance.\n Even so, according to Merritt Hummer, a partner at Bain Capital Ventures, \u201cB2B marketplaces cannot simply remain stagnant, serving as simple transactional platforms.\u201d\n The startups that are first to market with innovative \u201cadjacent services will emerge as winners in the next few years,\u201d she advises.\n   For this morning\u2019s edition of The Exchange,  Alex Wilhelm   interviewed three executives at cloud and SaaS companies to find out how well Q3 2020 has been treating them:\n  As one Twitter commenter noted, Alex doesn\u2019t just talk to the best-known tech execs; he reaches out to a wide range of people, and it shows in the quality of his reporting.\n   New Regulation Crowdfunding guidelines the SEC released this week allow companies to directly raise up to $5 million each year from individual investors, an increase from the previous limit of $1.07 million.\n \u201cLife has gotten easier in other ways as well for founders pursuing this fundraising type and the platforms that seek to simplify it,\u201d reports Lucas Matney, who interviewed Wefunder CEO Nicholas Tommarello.\n Funding for seed-stage startups slumped 32% last quarter compared to 2019, so \u201cthe tide could be turning\u201d for founders who were reluctant to raise from a giant pool of small dollars, Lucas found.\n    In a guest post for Extra Crunch, Drift CEO David Cancel explains that too many SaaS and cloud companies waste time trying out a number of solutions before finding the right recipe.\n \u201cI can tell you that there absolutely is a repeatable process to building a successful SaaS business,\u201d he says, \u201cone that can reliably guide you to product-market fit and then help you quickly scale.\u201d\n   Companies that hope to eliminate longstanding inequities in the workplace can\u2019t just rely on doing what they  think is right. Without a data-driven approach, subjective judgments and implicit bias tend to negate good intentions.\n Many startups don\u2019t hire full-time HR managers until they\u2019ve reached scale, but this comprehensive post lays out several critical factors for creating \u2014 and maintaining \u2014 a fair pay model.\n   News broke this week that Airbnb plans to to raise approximately $3 billion in a public filing that would allow it to reach a valuation in the $30 billion range.\n  Is there anything lurking in its recent financings that public investors won\u2019t like?\n  Starling Bank founder Anne Boden says new book \u2018isn\u2019t a memoir\u2019\n \u201cPeople at the end of their career write memoirs,\u201d Starling Bank founder Anne Boden told TechCrunch\u2019s Steve O\u2019Hear. \u201cI\u2019m at the beginning.\u201d\n In Boden\u2019s new book, \u201cBanking On It,\u201d she shares the story of how (and why) she decided to found a challenger bank, eventually parting with colleagues who launched competitor Monzo.\n \u201cThis is really putting down on paper where we are at the moment,\u201d she said. \u201cIt\u2019s been written over several years, and I\u2019m hoping to use this to inspire a generation of entrepreneurs.\u201d\n   Natasha Mascarenhas   and Alex Wilhelm collaborated on Monday\u2019s edition of The Exchange to report on how investors became less likely to fund female founders since the beginning of the COVID-19 pandemic.\n Drawing on data from multiple sources, Alex and Natasha found that startups led by women and mixed-gender founding teams received 48% less VC funding in Q3 2020 than in Q2, even though overall funding bounced back.\n \u201cFrom fear in late Q1, to a middling Q2, to a boom in Q3,\u201d they wrote. \u201cIt was an impressive comeback. For some.\u201d\n   Natasha Mascarenhas has owned TechCrunch\u2019s edtech beat since she came aboard at the start of 2020, just a few months before the pandemic led to widespread school closures.\n She\u2019s reported on countless funding rounds and interviewed founders and investors who are active in the space, but she recently spotted a new trend: \u201cM&amp;A activity is buzzier than usual.\u201d\n   Alex Wilhelm shrugged off his Election Day distractions long enough to write  a column that comprehensively examined fintech investment activity over the last quarter.\n In Q3 2020, \u201c60% of all capital raised by financial technology startups came from just 25 rounds worth $100 million or more,\u201d he reports.\n Are these mega-rounds funding \u201cthe next crop of unicorns?\u201d It\u2019s too early to say, but it\u2019s clear that pandemic-fueled uncertainty is driving consumers into the arms of companies like Robinhood, Chime, Lemonade and Root.\n In 1,316 words, Alex captures the state of play in insurtech, banking, wealth management and payments investing: \u201cNow, we just want to see some ******* IPOs.\u201d\n   Five years ago,  Terri Burns   was a product manager at Twitter. Today, she\u2019s the first Black woman \u2014 and the youngest person \u2014 to be promoted to partner at Google Ventures.\n In a Q&amp;A with Natasha Mascarenhas, Burns talked about her plans for the new role, as well as her investment thesis.\n \u201cI don\u2019t know what it actually means to build a sustainable business and venture is a really great way to sort of learn that,\u201d said Burns.\n  GV General Partner MG Siegler talks portfolio management and fundraising 6 months into the COVID-19 pandemic\n Are founders and investors really leaving Silicon Valley for greener pastures? Now that investors are limited to virtual interactions, are they being more hands-on with their portfolio companies?\n In an Extra Crunch Live chat hosted by Darrell Etherington, GV General Partner MG Siegler talked about how the pandemic is \u2014 and is not \u2014 shaping the way he does business.\n \u201cI do feel like things are operating in a pretty streamlined manner, or as much as they can be at this point,\u201d he said.\n \u201cBut, you know, there\u2019s always going to be some more wildcards \u2014 like we\u2019re a week away, today, from the U.S. election.\u201d\n  Thank you very much for reading Extra Crunch; I hope you have a great weekend.", "posttime": "2020-11-07 13:53:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "b2b,crunch", "title": "\n\u989d\u5916\u7efc\u8ff0\uff1aB2B\u5e02\u573a\uff0cedtech\u5e76\u8d2d\uff0c\u6253\u5165100\u4e07\u7f8e\u5143\u7684ARR\u4ff1\u4e50\u90e8", "title_en": "\n\t\t\t\tExtra Crunch roundup: B2B marketplaces, edtech M&A, breaking into the $1M ARR club\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/11/06/extra-crunch-roundup-b2b-marketplaces-edtech-ma-breaking-into-the-1m-arr-club/", "via": "", "real_tags": ["b2b", "crunch"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033654, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u79cd\u884c\u4e3a\u662f\u5426\u6784\u6210\u6f0f\u6d1e\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u65c1\u89c2\u8005\u7684\u773c\u775b\u3002\u5982\u679c\u7528\u6237\u62e5\u6709\u5bf9\u8fdc\u7a0b\u7cfb\u7edf\u7684\u666e\u901aSSH\u8bbf\u95ee\u6743\u9650\uff0c\u5219\u901a\u8fc7SCP\u8d70\u79c1\u547d\u4ee4\u5c06\u66f4\u96be\u5b8c\u6210\u5df2\u6709\u7684\u4efb\u52a1\u3002\u4e0d\u8fc7\uff0c\u663e\u7136\uff0c\u7ad9\u70b9\u63d0\u4f9b\u4ec5SCP\u8bbf\u95ee\u6743\u9650\uff0c\u5141\u8bb8\u7528\u6237\u590d\u5236\u6587\u4ef6\uff0c\u4f46\u4e0d\u80fd\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610f\u547d\u4ee4\uff0c\u8fd9\u5e76\u4e0d\u662f\u95fb\u6240\u672a\u95fb\u7684\u3002\u5bf9\u4e8e\u91c7\u7528\u8fd9\u79cd\u7b56\u7565\u7684\u7cfb\u7edf\u6765\u8bf4\uff0c\u6b64\u884c\u4e3a\u786e\u5b9e\u662f\u4e00\u4e2a\u6f0f\u6d1e\u3002\u6700\u540e\uff0c\u867d\u7136\u5371\u9669\u5f88\u5c0f\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5305\u542b\u2018backticks\u2019\u7684\u672c\u5730\u6587\u4ef6\u540d(\u4f8b\u5982\uff0c\u540d\u4e3a\u2018Touch You-Lost\u2019\u7684\u6587\u4ef6)\u5c06\u5728\u53e6\u4e00\u7aef\u4ee5\u76f8\u540c\u65b9\u5f0f\u5904\u7406\uff1b\u5982\u679c\u53ef\u4ee5\u8bf4\u670d\u7528\u6237\u9012\u5f52\u590d\u5236\u5305\u542b\u5177\u6709\u4e0d\u540c\u540d\u79f0\u7684\u6587\u4ef6\u7684\u76ee\u5f55\u6811\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u4e0d\u597d\u7684\u4e8b\u60c5\u3002\u4e0eCVE-2019-6111\u4e0d\u540c\uff0cOpenSSH\u5f00\u53d1\u8005\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u4e0a\u9762\u94fe\u63a5\u7684\u516c\u5f00\u4e2d\u6240\u5f15\u7528\u7684\uff0c\u4ed6\u4eec\u7684\u56de\u5e94\u662f\uff1aSCP\u547d\u4ee4\u662f\u5386\u53f2\u534f\u8bae(\u79f0\u4e3aRCP)\uff0c\u5176\u4f9d\u8d56\u4e8e\u8be5\u7c7b\u578b\u7684\u53c2\u6570\u4f20\u9012\u5e76\u4e14\u9047\u5230\u6269\u5c55\u95ee\u9898\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8981\u5c06\u5b89\u5168\u6027\u6dfb\u52a0\u5230SCP\u6a21\u578b\u4e2d\u975e\u5e38\u56f0\u96be\u3002\u6240\u6709\u8bd5\u56fe\u68c0\u6d4b\u548c\u963b\u6b62\u5f02\u5e38\u53c2\u6570\u4f20\u8f93\u7684\u5c1d\u8bd5\u90fd\u5f88\u6709\u53ef\u80fd\u4f1a\u7834\u574f\u73b0\u6709\u7684\u5de5\u4f5c\u6d41\u3002\u662f\u7684\uff0c\u6211\u4eec\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9--\u60c5\u51b5\u5f88\u7cdf\u7cd5\u3002\u4f46\u6211\u4eec\u4e0d\u60f3\u6253\u7834\u4eba\u4eec\u4f7f\u7528SCP\u7684\u7b80\u5355\u6a21\u5f0f\uff0c\u9664\u975e\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u66ff\u4ee3\u54c1\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4e0b\u4e00\u4e2a\u95ee\u9898\u5c31\u81ea\u7136\u800c\u7136\u5730\u51fa\u73b0\u4e86\uff1a\u5e94\u8be5\u7528\u4ec0\u4e48\u6765\u53d6\u4ee3\u4e0d\u63a8\u8350\u4f7f\u7528\u7684scp\u547d\u4ee4\uff1f\u8fd9\u4e2a\u95ee\u9898\u7684\u901a\u5e38\u7b54\u6848\u662fsftp\u6216rsync\u3002", "note_en": "Whether this behavior constitutes a vulnerability is partly in the eye ofthe beholder. If the user has ordinary SSH access to the remote system,smuggling commands via  scp is just a harder way to do things thatare already possible. Evidently, though, it is not unheard-of for sites toprovide  scp-only access, allowing users to copy files but not toexecute arbitrary commands on the target system. For systems with thatsort of policy, this behavior is indeed a vulnerability. Finally, whilethe danger is remote, it is worth noting that a local file name containing`backticks` (a file named  `touch you-lose`, for example)will be handled the same way on the other end; if a user can be convincedto perform a recursive copy of a directory tree containing a file with amalicious name, bad things can happen. Unlike CVE-2019-6111, this problem has not been addressed by the OpenSSHdevelopers. As quoted in the disclosure linked above, their response is: The scp command is a historical protocol (called rcp) which relies\tupon that style of argument passing and encounters expansion\tproblems. It has proven very difficult to add &#34;security&#34; to the scp\tmodel. All attempts to &#34;detect&#34; and &#34;prevent&#34; anomalous argument\ttransfers stand a great chance of breaking existing workflows. Yes,\twe recognize it the situation sucks. But we don&#39;t want to break the\teasy patterns people use scp for, until there is a commonplace\treplacement.\n Given that, the next question comes naturally: what should replace thedeprecated  scp command? The usual answer to that question iseither   sftp or   rsync", "posttime": "2020-11-07 11:26:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "deprecating,scp", "title": "\u4e0d\u63a8\u8350\u4f7f\u7528SCP", "title_en": "Deprecating scp", "transed": 1, "url": "https://lwn.net/SubscriberLink/835962/ae41b27bc20699ad/", "via": "", "real_tags": ["scp"]}, {"category": "", "categoryclass": "", "imagename": "e01dca862a9b81e167e32ca15a8281a2.jpg", "infoid": 1033652, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2018\u5e74\uff0c\u5f53\u6211\u5728\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon University)\u62c5\u4efb\u7ec8\u8eab\u6559\u804c\u7684\u4e24\u5e74\u65f6\uff0c\u6211\u770b\u5230\u4e86\u8f6f\u4ef6\u754c\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u30022018\u5e74\uff0c\u300a\u5251\u6865\u5206\u6790\u300b\u95ee\u4e16\uff1b\u4e0d\u4e45\u4e4b\u540e\uff0cGDPR\u6210\u4e3a\u6cd5\u5f8b\u3002\u5927\u591a\u6570\u5728\u884c\u4e1a\u4e2d\u521b\u529e\u516c\u53f8\u7684\u5b66\u8005\u4e4b\u6240\u4ee5\u8fd9\u6837\u505a\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u6b63\u5728\u5c06\u4e00\u4e2a\u7279\u5b9a\u7684\u9879\u76ee\u5546\u4e1a\u5316\uff1b\u6211\u79bb\u5f00\u79cb\u7530\u8f6f\u4ef6\u516c\u53f8\u662f\u56e0\u4e3a\u6211\u770b\u5230\uff0c\u73b0\u5728\u662f\u6784\u5efa\u6211\u60f3\u8981\u6784\u5efa\u7684\u5de5\u5177\u7684\u6b63\u786e\u65f6\u673a-\u90a3\u4e9b\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u8f6f\u4ef6\u8d28\u91cf\u548c\u5b89\u5168\u6027\u7684\u5de5\u5177\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u81f4\u529b\u4e8e\u4e3a\u73b0\u4ee3\u7f51\u7edc\u5e94\u7528\u6784\u5efaAPI\u7ea7\u522b\u7684\u5f00\u53d1\u5de5\u5177\u3002\n\u56e0\u4e3a\u6280\u672f\u95ee\u9898\u5728\u6211\u521b\u529e\u79cb\u7530\u7684\u65f6\u5019\u8fd8\u4e0d\u662f\u677f\u4e0a\u9489\u9489\u7684\uff0c\u6240\u4ee5\u6211\u5728\u516c\u53f8\u5de5\u4f5c\u7684\u7b2c\u4e00\u5e74\u91cc\u4e00\u76f4\u5728\u505a\u4ea7\u54c1\u548c\u7528\u6237\u7814\u7a76\u5de5\u4f5c\u3002\u6211\u7684\u5b66\u672f\u751f\u6daf\u8bad\u7ec3\u6211\u6709\u539f\u5219\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5728\u542f\u52a8\u548c\u8fd0\u884c\u79cb\u7530\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u6709\u539f\u5219\u5730\u9009\u62e9\u95ee\u9898\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6211\u7684\u52aa\u529b\u7684\u6210\u529f\u7b2c\u4e00\u6b21\u88ab\u5b9a\u4e49\u4e3a\u6211\u89e3\u51b3\u7684\u95ee\u9898\u6709\u591a\u597d\uff0c\u4eba\u4eec\u975e\u5e38\u5173\u5fc3\u8fd9\u4e9b\u95ee\u9898\uff0c\u613f\u610f\u4e3a\u8fd9\u4e9b\u95ee\u9898\u4ed8\u94b1\u3002\u4ee5\u4e0b\u662f\u6211\u5b66\u5230\u7684\u4e1c\u897f\u3002\n\u5f53\u6211\u4ece\u4e8b\u7814\u7a76\u65f6\uff0c\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u4e0e\u7a0b\u5e8f\u5458\u201c\u5728\u91ce\u5916\u201d\u4ea4\u8c08\uff0c\u4ee5\u4e86\u89e3\u4ed6\u4eec\u5b58\u5728\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6211\u8ba4\u4e3a\u6211\u662f\u5728\u505a\u95ee\u9898\u9009\u62e9\u65b9\u9762\u7684\u529f\u8bfe\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0c\u6211\u4e86\u89e3\u4e86\u7528\u6237\u7814\u7a76\uff0c\u5e76\u610f\u8bc6\u5230\u6211\u5728\u5b66\u672f\u754c\u7684\u95ee\u9898\u9009\u62e9\u672c\u53ef\u4ee5\u66f4\u6709\u6761\u7406\u3001\u66f4\u6709\u539f\u5219\uff01\n\u5f53\u60a8\u8bd5\u56fe\u4e86\u89e3\u786e\u5207\u7684\u95ee\u9898\u65f6\uff0c\u6709\u4e00\u4e9b\u539f\u5219\u6027\u7684\u65b9\u6cd5\u53ef\u4ee5\u4e86\u89e3\u7528\u6237\u7684\u75db\u82e6-\u5373\u4f7f\u60a8\u7684\u7528\u6237\u662f\u7a0b\u5e8f\u5458\uff0c\u800c\u60a8\u6b63\u5728\u5904\u7406\u50cf\u7f16\u7a0b\u8bed\u8a00\u548c\u5de5\u5177\u8fd9\u6837\u590d\u6742\u7684\u4e8b\u60c5\u3002\u4f60\u4e0d\u80fd\u7528\u6570\u5b66\u6765\u8bc1\u660e\u5b83\u4eec\uff0c\u4e5f\u4e0d\u80fd\u50cf\u4f60\u5bf9\u5f85\u7f16\u8bd1\u5668\u6027\u80fd\u90a3\u6837\u6d4b\u91cf\u5b83\u4eec\uff0c\u4f46\u4f60\u4ecd\u7136\u53ef\u4ee5\u662f\u79d1\u5b66\u7684\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5e94\u7528\u4e25\u683c\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u4eba\u673a\u754c\u9762\u9886\u57df\u5df2\u7ecf\u505a\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u4e8b\u60c5\uff0c\u4eba\u4eec\u4e00\u76f4\u5728\u5021\u5bfc\u5c06\u66f4\u591a\u7684\u4e1c\u897f\u4e0e\u7f16\u7a0b\u5de5\u5177\u76f8\u7ed3\u5408\uff0c\u4f46\u4ecd\u7136\u6ca1\u6709\u6d89\u53ca\u5230\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u7684\u7814\u7a76\u3002(\u4f8b\u5982\uff0c\u8bf7\u53c2\u9605\u672c\u6587\u201c\u7a0b\u5e8f\u5458\u4e5f\u662f\u7528\u6237\uff1a\u6539\u8fdb\u7f16\u7a0b\u5de5\u5177\u7684\u4ee5\u4eba\u4e3a\u672c\u7684\u65b9\u6cd5\u201d\u548cSarah Chasins\u7684\u201c\u6784\u5efa\u4ee5\u7528\u6237\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u5de5\u5177\u201d\u7684\u6559\u5b66\u5927\u7eb2\u3002)\u3002\n\u5173\u4e8e\u7528\u6237\u7814\u7a76\uff0c\u6211\u5b66\u5230\u7684\u4e00\u4ef6\u4e3b\u8981\u4e8b\u60c5\u5c31\u662f\u4e25\u683c\u8981\u6c42\u6211\u95ee\u7528\u6237\u95ee\u9898\u7684\u65b9\u5f0f\u3002\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\u662f\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u95ee\u6240\u6709\u7528\u6237\u76f8\u540c\u7684\u95ee\u9898\u3002\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u95ee\u5f15\u5bfc\u6027\u95ee\u9898\uff0c\u4e5f\u4e0d\u8981\u76f4\u63a5\u95ee\u7528\u6237\u4ed6\u4eec\u60f3\u8981\u4ec0\u4e48--\u6709\u53e5\u540d\u8a00\u8bf4\uff0c\u5982\u679c\u4ea8\u5229\u00b7\u798f\u7279(Henry Ford)\u95ee\u4eba\u4eec\u4ed6\u4eec\u60f3\u8981\u4ec0\u4e48\uff0c\u4ed6\u4eec\u4f1a\u8bf4\u9a6c\u8dd1\u5f97\u66f4\u5feb\u3002\u5982\u679c\u4f60\u7684\u5047\u8bbe\u662f\uff0c\u7cfb\u978b\u5e26\u662f\u51fa\u95e8\u65f6\u7684\u4e00\u4e2a\u75db\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u95ee\uff1a\u201c\u7cfb\u978b\u5e26\u6709\u95ee\u9898\u5417\uff1f\u201d\u8fd9\u4e0d\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8ba9\u7528\u6237\u544a\u8bc9\u4f60\u5f53\u4ed6\u4eec\u79bb\u5f00\u5bb6\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u5e76\u8be2\u95ee\u4ed6\u4eec\u7684\u75db\u70b9\u662f\u4ec0\u4e48\u3002(\u6709\u5173\u8fd9\u65b9\u9762\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u60a8\u53ef\u80fd\u4f1a\u5bf9\u201c\u4e0a\u4e0b\u6587\u67e5\u8be2\u539f\u7406\u201d\u611f\u5174\u8da3\u3002)\u3002\n\u6211\u5728\u7528\u6237\u7814\u7a76\u4e2d\u5b66\u5230\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u7ecf\u9a8c\u662f\u7f29\u5c0f\u3002\u4ee5\u524d\uff0c\u5f53\u6211\u5728\u505a\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u65f6\u4e0e\u7528\u6237\u4ea4\u8c08\u65f6\uff0c\u6211\u7684\u5bf9\u8bdd\u901a\u5e38\u56f4\u7ed5\u7740\u5f00\u53d1\u4eba\u5458\u56f4\u7ed5\u6211\u6b63\u5728\u5904\u7406\u7684\u5177\u4f53\u95ee\u9898\u800c\u611f\u5230\u7684\u75db\u82e6\u3002\u5728\u505a\u7528\u6237\u7814\u7a76\u65f6\uff0c\u6211\u5b66\u5230\u7684\u662f\u5c06\u7528\u6237\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u7406\u89e3\uff0c\u4ee5\u66f4\u5927\u7684\u52a8\u673a\u548c\u6fc0\u52b1\u6765\u5b8c\u6210\uff0c\u5e76\u7406\u89e3\u6211\u89e3\u51b3\u7684\u95ee\u9898\u5982\u4f55\u7b26\u5408\u4ed6\u4eec\u7684\u76ee\u6807\u3001\u5e0c\u671b\u548c\u68a6\u60f3\u3002\u4f8b\u5982\uff0c\u5728\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u7528\u6237\u7814\u7a76\u7684\u77e5\u8bc6\u4e4b\u524d\uff0c\u6211\u95ee\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\n\u4ee5\u4e0b\u662f\u6211\u521b\u5efaAkita\u65f6\u6211\u4eec\u95ee\u4e86\u51e0\u5341\u4e2a\u7528\u6237\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u4e0e\u6211\u4eec\u6b63\u5728\u6784\u5efa\u7684\u7279\u5b9a\u5de5\u5177\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff1a\n\u7ed9\u6211\u8bb2\u8bb2\u4f60\u5de5\u4f5c\u4e2d\u7684\u4e00\u5929\u3002\u4f60\u5728\u7528\u4ec0\u4e48\u5de5\u5177\uff1f\u4f60\u662f\u600e\u4e48\u6253\u53d1\u65f6\u95f4\u7684\uff1f\n\u4ec0\u4e48\u95ee\u9898\u4f1a\u8ba9\u4f60\u8d85\u65f6\u5de5\u4f5c\uff1f\n\u544a\u8bc9\u6211\u4f60\u662f\u5982\u4f55\u4e0e\u5de5\u7a0b\u5b66\u7684\u5176\u4ed6\u90e8\u95e8\u6253\u4ea4\u9053\u7684\u3002\u4f60\u4eec\u90a3\u91cc\u6709\u4ec0\u4e48\u6469\u64e6\uff1f(\u8fd9\u662f\u4e00\u4e2a\u7ed9\u5b89\u5168\u5de5\u7a0b\u5e08\u7684\u95ee\u9898\u3002)\u3002\n\u4f5c\u4e3a\u4e00\u540d\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u4eba\u5458\uff0c\u6211\u5728\u9009\u62e9\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\u80af\u5b9a\u6ca1\u6709\u4ee5\u4e00\u81f4\u548c\u6709\u7eaa\u5f8b\u7684\u65b9\u5f0f\u63d0\u51fa\u8fd9\u4e9b\u95ee\u9898--\u5982\u679c\u771f\u7684\u6709\u7684\u8bdd\u3002\u4f8b\u5982\uff0c\u901a\u8fc7\u95ee\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4e86\u89e3\u5230\uff0c\u5f00\u53d1\u4eba\u5458\u7684\u91c7\u7528\u5bf9\u5b89\u5168\u5de5\u5177\u6210\u529f\u7684\u5f71\u54cd\u6bd4\u5b89\u5168\u5de5\u7a0b\u5e08\u8ba4\u4e3a\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u8981\u5927\u5f97\u591a\u3002\u800c\u5f00\u53d1\u8005\u7684\u91c7\u7528\u5f80\u5f80\u66f4\u591a\u5730\u53d6\u51b3\u4e8e\u53ef\u64cd\u4f5c\u6027\uff0c\u800c\u4e0d\u662f\u51c6\u786e\u6027\u3002\u8fd9\u4e9b\u8ba4\u8bc6\u4e0d\u4ec5\u4f7f\u6211\u4eec\u5b8c\u5168\u6539\u53d8\u4e86\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u7684\u4ea7\u54c1\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50(\u6211\u4eec\u4e00\u5f00\u59cb\u4e13\u6ce8\u4e8eAPI\u7684\u5b89\u5168/\u9690\u79c1\u76f8\u5173\u7528\u6cd5\uff0c\u4f46\u540e\u6765\u8f6c\u5411\u4e86\u901a\u7528\u7528\u4f8b)\uff0c\u800c\u4e14\u4e5f\u6c38\u8fdc\u6539\u53d8\u4e86\u6211\u5bf9\u6784\u5efa\u7f16\u7a0b\u8bed\u8a00\u548c\u5de5\u5177\u7684\u770b\u6cd5\u3002\n\u91c7\u7528\u4e0a\u8ff0\u65b9\u6cd5\u4f7f\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\u3002\u5f53\u6211\u5f00\u59cb\u521b\u5efaAkita\u65f6\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u8981\u6784\u5efa\u7684\u662f\u4e00\u4e2a\u76f8\u5f53\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u76d1\u63a7\u5de5\u5177\u7684\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u76d1\u63a7\u5de5\u5177\uff0c\u7528\u4e8e\u8ddf\u8e2a\u6570\u636e\uff0c\u9762\u5411\u5b89\u5168\u548c\u9690\u79c1\u56e2\u961f\u3002\u6211\u662f\u5728\u4e0e\u9ad8\u5c42\u4eba\u58eb\u4ea4\u8c08\u540e\u5f97\u51fa\u8fd9\u4e2a\u521d\u6b65\u7ed3\u8bba\u7684\uff0c\u8fd9\u4e9b\u4eba\u8ba4\u4e3a\u95ee\u9898\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4ed6\u4eec\u8ba4\u4e3a\u9700\u8981\u4ec0\u4e48\u3002\u901a\u8fc7\u7528\u6237\u7814\u7a76\uff0c\u6211\u4eec\u51b3\u5b9a\u6784\u5efa\u4f4e\u6469\u64e6\u7684\u96c6\u6210\u5de5\u5177\uff0c\u4ee5\u9488\u5bf9API\u89c4\u8303\u8fdb\u884c\u63a8\u65ad\u548c\u6d4b\u8bd5\uff0c\u5e76\u5c06\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4ece\u4e13\u95e8\u9488\u5bf9\u5b89\u5168\u6216\u9690\u79c1\u7684\u65b9\u5411\u8f6c\u79fb\u3002\u4ee5\u4e0b\u662f\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5\u7684\u4e00\u4e9b\u6559\u8bad\uff1a\n\u5b89\u5168\u5de5\u7a0b\u5e08\u6253\u53d1\u65f6\u95f4\u7684\u6700\u91cd\u8981\u65b9\u5f0f\u662f\u6539\u5584\u4ed6\u4eec\u4e0e\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5173\u7cfb\u3002\u5f53\u6211\u4eec\u8be2\u95ee\u5b89\u5168\u5de5\u7a0b\u5e08\u5982\u4f55\u664b\u5347\u548c/\u6216\u63d0\u9ad8\u4ed6\u4eec\u5728\u7ec4\u7ec7\u4e2d\u7684\u5f71\u54cd\u529b\u65f6\uff0c\u6211\u4eec\u4e00\u904d\u53c8\u4e00\u904d\u5730\u95ee\u9053\uff0c\u5b89\u5168\u56e2\u961f\u7684\u597d\u574f\u53d6\u51b3\u4e8e\u542c\u53d6\u4ed6\u4eec\u610f\u89c1\u7684\u5de5\u7a0b\u5e08\u3002\u8fd9\u8ba9\u6211\u4eec\u76f8\u4fe1\u6784\u5efa\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u662f\u6b63\u786e\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5f71\u54cd\u529b\u8981\u5927\u5f97\u591a\uff01\n\u5b89\u5168\u5de5\u7a0b\u5e08\u9762\u4e34\u7684\u6700\u5927\u6311\u6218\u4e4b\u4e00\u662f\u8ba9\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4fee\u590d\u4ed6\u4eec\u7684\u6f0f\u6d1e\u3002\u5f53\u6211\u4eec\u8981\u6c42\u5b89\u5168\u5de5\u7a0b\u5e08\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4ed6\u4eec\u6700\u7ec8\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u7684\u4e8b\u60c5\u65f6\uff0c\u8fd9\u6d89\u53ca\u5230\u8bf4\u670d\u5de5\u7a0b\u5e08\u4fee\u590d\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4e0e\u6211\u4ea4\u8c08\u8fc7\u7684\u4e00\u4f4d\u5de5\u7a0b\u5e08\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u60f3\u51fa\u4f8b\u5b50\u6765\u8bf4\u670d\u5de5\u7a0b\u5e08\uff0c\u4ed6\u4eec\u5199\u7684\u4e1c\u897f\u662f\u4e0d\u5b89\u5168\u7684\u3002\u53e6\u4e00\u4e2a\u56e2\u961f\u66f4\u8fdb\u4e00\u6b65\uff0c\u96c7\u4f63\u4e86\u6e17\u900f\u6d4b\u8bd5\u5458\uff0c\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u67d0\u4e9b\u5b89\u5168/\u9690\u79c1\u63a7\u5236\u5bf9\u4ed6\u4eec\u7684\u5de5\u7a0b\u56e2\u961f\u7684\u91cd\u8981\u6027\u3002\u8fd9\u9879\u7528\u6237\u7814\u7a76\u7684\u7ed3\u679c\u8ba9\u6211\u4eec\u76f8\u4fe1\uff0c\u4ec5\u4ec5\u5411\u5b89\u5168\u90e8\u95e8\u63d0\u4f9b\u51fa\u9519\u7684\u62a5\u544a\u662f\u4e0d\u591f\u7684\uff1b\u66f4\u5f3a\u5927\u7684\u5de5\u5177\u4e0d\u4ec5\u53ef\u4ee5\u5e2e\u52a9\u8bc6\u522b\u53ef\u80fd\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u786e\u5b9a\u95ee\u9898\u7684\u4f18\u5148\u987a\u5e8f\u5e76\u8fdb\u884c\u4fee\u590d\u3002(\u6211\u4eec\u7684\u53d1\u73b0\u4e0e\u8fd9\u9879\u7814\u7a76\u7684\u7ed3\u679c\u76f8\u7b26\u3002)\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u5de5\u5177\u56e2\u961f\uff0c\u8fd9\u6b63\u5408\u6211\u4eec\u7684\u80c3\u53e3\uff0c\u5f15\u5bfc\u6211\u4eec\u5f00\u59cb\u6784\u5efa\u6709\u52a9\u4e8e\u63d0\u4f9b\u4e0a\u4e0b\u6587\u548c\u53ef\u91cd\u73b0\u6027\u7684\u5de5\u5177\u3002\n\u4e00\u4f53\u5316\u6469\u64e6\u5f88\u91cd\u8981\u3002\u5f53\u6211\u4eec\u8be2\u95ee\u7528\u6237\u662f\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u4ed6\u4eec\u9009\u62e9\u5f53\u524d\u4f7f\u7528\u7684\u5de5\u5177\u65f6\uff0c\u4ed6\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u63d0\u5230\u96c6\u6210\u5230\u73b0\u6709\u5de5\u5177\u94fe\u7684\u7b80\u5355\u6027\uff0c\u4ee5\u53ca\u8be5\u5de5\u5177\u9700\u8981\u591a\u5c11\u914d\u7f6e\u3002\u5bf9\u4e8e\u5b89\u5168\u5de5\u7a0b\u5e08\u6765\u8bf4\u5c24\u5176\u5982\u6b64\uff0c\u56e0\u4e3a\u6bcf\u5f53\u4ed6\u4eec\u5411\u5176\u4ed6\u56e2\u961f\u63d0\u51fa\u8981\u6c42\u65f6\uff0c\u4ed6\u4eec\u5c31\u4f1a\u6d88\u8017\u793e\u4f1a\u8d44\u672c\u3002\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5f00\u53d1\u4e00\u4e2a\u6613\u4e8e\u96c6\u6210\u7684\u5de5\u5177\uff0c\u5c31\u5f88\u96be\u88ab\u91c7\u7528\u3002\n\u6784\u5efa\u5b89\u5168\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u610f\u5473\u7740\u6784\u5efa\u5f00\u53d1\u4eba\u5458/\u5b89\u5168\u5dee\u8ddd\u3002\u5728\u6211\u4eec\u4ea7\u54c1\u7684\u7b2c\u4e00\u5e74\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u7684\u4ea7\u54c1\u8bbe\u8ba1\u548c\u6295\u653e\u5e02\u573a\u9700\u8981\u8de8\u8d8a\u5b89\u5168\u5de5\u7a0b\u56e2\u961f\u548c\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u4e4b\u95f4\u7684\u6c9f\u901a\u548c\u6fc0\u52b1\u5dee\u8ddd\u3002\u5728\u4e86\u89e3\u4e86\u6bcf\u4e00\u65b9\u7684\u89c2\u70b9\uff0c\u5f00\u53d1\u5546\u4f3c\u4e4e\u5bf9\u5173\u95ed\u5b83\u5e76\u4e0d\u662f\u5f88\u611f\u5174\u8da3\u540e\uff0c\u6211\u4eec\u6700\u7ec8\u51b3\u5b9a\u9700\u8981\u9009\u62e9\u4e00\u65b9\u3002\u6211\u4eec\u9009\u62e9\u6210\u4e3a\u4e00\u4e2a\u6709\u5b89\u5168\u7528\u4f8b\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u76f8\u53cd\u3002\u5982\u679c\u6ca1\u6709\u505a\u8fc7\u6211\u4eec\u5df2\u7ecf\u505a\u8fc7\u7684\u7528\u6237\u8c03\u67e5\uff0c\u9009\u62e9\u5c31\u4e0d\u4f1a\u90a3\u4e48\u660e\u663e\u4e86\uff01\n\u5728\u505a\u8fd9\u4e2a\u7528\u6237\u7814\u7a76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e5f\u5b66\u4f1a\u4e86\u653e\u5f03\u6211\u5728\u5b66\u672f\u754c\u7684\u8bb8\u591a\u5047\u8bbe\uff1a\n\u5065\u5168\u53ef\u80fd\u4e0d\u662f\u6b63\u786e\u7684\u76ee\u6807\u3002\u5728\u5b66\u672f\u754c\uff0c\u8ba9\u9759\u6001\u7a0b\u5e8f\u5206\u6790\u53d8\u5f97\u5408\u7406\u901a\u5e38\u662f\u4e00\u4e2a\u76ee\u6807\uff1a\u5982\u679c\u6ca1\u6709\u62a5\u544a\u4e00\u4e2abug\uff0c\u90a3\u4e48\u8fd9\u4e2abug\u5e94\u8be5\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5173\u4e8e\u9759\u6001\u5206\u6790\u7684\u4e00\u4e2a\u5e38\u89c1\u62b1\u6028\u662f\uff0c\u7531\u4e8e\u8bef\u62a5\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u5728\u5f88\u591a\u65f6\u5019\u90fd\u6ca1\u6709\u591a\u5927\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5b89\u5168\u56e2\u961f\u5411\u5f00\u53d1\u4eba\u5458\u62a5\u544a\u7684\u9519\u8bef\u8d8a\u591a\uff0c\u4fee\u590d\u8fd9\u4e9b\u9519\u8bef\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5c0f\u3002\u5728\u5b66\u672f\u754c\uff0c\u6211\u8ba4\u4e3a\u9519\u8bef\u9519\u8bef\u662f\u975e\u9519\u8bef\u7684\uff1b\u8bb8\u591a\u884c\u4e1a\u5f00\u53d1\u4eba\u5458\u4f1a\u5c06\u4f4e\u4f18\u5148\u7ea7\u9519\u8bef\u79f0\u4e3a\u201c\u5047\u9633\u6027\u201d\u3002\u6570\u91cf\u60ca\u4eba\u7684\u5de5\u7a0b\u5e08(\u5bf9\u6211\u6765\u8bf4)\u8868\u793a\uff0c\u4ed6\u4eec\u5b81\u613f\u4e0d\u77e5\u9053\u6240\u6709\u7684\u9519\u8bef\uff0c\u800c\u662f\u88ab\u544a\u77e5\u53ef\u80fd\u4fee\u590d\u7684\u9519\u8bef\u5b50\u96c6\u3002\u5f7c\u5f97\u00b7\u5965\u8d6b\u6069(Peter O\u2018Hain)\u7684\u201c\u4e0d\u6b63\u786e\u903b\u8f91\u201d\u8bba\u6587\u5c31\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u4e00\u7bc7\u8bba\u6587\u3002\n\u201c\u9057\u4ea7\u56e0\u7d20\u201d\u53ef\u80fd\u6bd4\u62c5\u4fdd\u6216\u4e1a\u7ee9\u66f4\u91cd\u8981\u3002\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u4eba\u4eec\u60f3\u8981\u505a\u51fa\u7684\u6743\u8861\u5e76\u4e0d\u662f\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u662f\u503c\u5f97\u63a2\u7d22\u7684\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u66f4\u6df1\u5165\u5730\u6316\u6398\u6211\u7684\u95ee\u9898\u65f6\uff0c\u6211\u4e86\u89e3\u5230\uff0c\u8fdb\u5165\u7684\u969c\u788d\u5f80\u5f80\u662f\u8bf4\u670d\u4eba\u4eec\u91c7\u7528\u5de5\u5177\uff0c\u800c\u8fd9\u4e9b\u5de5\u5177\u66f4\u591a\u5730\u4e0e\u96c6\u6210\u548c\u5b66\u4e60\u66f2\u7ebf\u6709\u5173\uff0c\u800c\u4e0d\u662f\u6570\u5b66\u6216\u6027\u80fd\u3002\u5982\u679c\u4eba\u4eec\u4ece\u6765\u6ca1\u6709\u610f\u8bc6\u5230\u4e00\u4e2a\u5de5\u5177\u7684\u4f18\u70b9\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u6b23\u8d4f\u8fd9\u4e2a\u5de5\u5177\uff01\u8fd9\u7edd\u5bf9\u4e0d\u540c\u4e8e\u6211\u5728\u5b66\u672f\u754c\u7684\u89c2\u70b9\uff0c\u5f53\u65f6\u6211\u7684\u91cd\u70b9\u662f\u6784\u5efa\u65b0\u529f\u80fd\u7684\u5e72\u51c0\u7248\u672c\uff0c\u628a\u91c7\u7528\u4f5c\u4e3a\u4e00\u79cd\u7ec3\u4e60\u7559\u7ed9\u8bfb\u8005\u3002\u867d\u7136\u8981\u6c42\u6240\u6709\u7684\u5b66\u672f\u5de5\u4f5c\u90fd\u62c5\u5fc3\u9886\u517b\u95ee\u9898\u80af\u5b9a\u4f1a\u6291\u5236\u5f88\u591a\u521b\u65b0\uff0c\u4f46\u5c06\u9886\u517b\u89c6\u4e3a\u201c\u4e0d\u662f\u5b66\u672f\u754c\u7684\u95ee\u9898\u201d\u53ef\u80fd\u4f1a\u6291\u5236\u4ea7\u751f\u5f71\u54cd\u7684\u673a\u4f1a\u3002\u9274\u4e8e\u4e0e\u9057\u7559\u5de5\u5177\u94fe\u7684\u65e0\u6469\u64e6\u96c6\u6210\u4f1a\u4ea7\u751f\u4ee4\u4eba\u60ca\u8bb6\u7684\u6311\u6218\u6027\u6280\u672f\u95ee\u9898\uff0c\u5e76\u53ef\u80fd\u5bf9\u5f71\u54cd\u4ea7\u751f\u4e0d\u6210\u6bd4\u4f8b\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u5e94\u8be5\u5728\u5b66\u672f\u754c\u7ed9\u4e88\u66f4\u591a\u5173\u6ce8\u3002\n\u6211\u5b66\u4e60\u7528\u6237\u7814\u7a76\u7684\u7ecf\u5386\u8ba9\u6211\u91cd\u65b0\u5ba1\u89c6\u4e86\u6211\u4e4b\u524d\u601d\u8003\u4e86\u5f88\u591a\u7684\u95ee\u9898\uff1a\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u8bc4\u4f30\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u8bba\u6587\uff1f\u867d\u7136\u4e00\u7bc7\u8bba\u6587\u7684\u5bfc\u8a00\u9996\u5148\u4f1a\u8ba9\u8bc4\u5ba1\u8005\u5bf9\u8bba\u6587\u611f\u5174\u8da3\uff0c\u4f46\u8bc4\u4f30\u90e8\u5206\u7ed9\u4e86\u51a0\u519b\u8bc4\u5ba1\u5458\u5fc5\u8981\u7684\u5f39\u836f\uff0c\u8ba9\u4ed6\u53ef\u4ee5\u5728\u9879\u76ee\u59d4\u5458\u4f1a\u4f1a\u8bae\u4e0a\u594b\u529b\u62fc\u640f\u3002\u7531\u4e8e\u8fd9\u79cd\u80fd\u529b\uff0c\u8bc4\u4f30\u90e8\u5206\u4e2d\u663e\u793a\u7684\u5185\u5bb9\u51b3\u5b9a\u4e86\u5728\u6574\u4e2a\u9886\u57df\u4e2d\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u7c7b\u578b\u3002\n\u6211\u575a\u4fe1\uff0c\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u5e76\u4e0d\u91cd\u89c6\u53ef\u7528\u6027\uff0c\u56e0\u4e3a\u76ee\u524d\u8fd8\u6ca1\u6709\u4ee4\u4eba\u6ee1\u610f\u7684\u3001\u8fbe\u6210\u4e00\u81f4\u7684\u8bc4\u4f30\u65b9\u6cd5\u3002\u8bed\u4e49\u8bc4\u4f30\u4fdd\u8bc1\u4e86\u8bf8\u5982\u5065\u5168\u6027\u3001\u5b8c\u6574\u6027\u548c\u7c7b\u578b\u5b89\u5168\u7b49\u5c5e\u6027\uff0c\u4f46\u5b83\u4eec\u5e76\u6ca1\u6709\u8bf4\u660e\u662f\u5426\u6709\u4eba\u4f1a\u771f\u6b63\u5173\u5fc3\u8fd9\u4e9b\u4fdd\u8bc1\u6216\u8bed\u8a00\u3002\u6839\u636e\u6837\u4f8b\u7a0b\u5e8f\uff0c\u57fa\u51c6\u6d4b\u8bd5\u51b3\u5b9a\u4e86\u5de5\u5177\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u57fa\u51c6\u6d4b\u8bd5\u5bf9\u4e8e\u5df2\u77e5\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u975e\u5e38\u597d\u7684\uff0c\u4f46\u901a\u5e38\u4e0d\u9002\u5408\u4e0d\u5173\u6ce8\u6027\u80fd\u7684\u8bed\u8a00\u6216\u5de5\u5177\u8bbe\u8ba1\u8bba\u6587\u3002\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u957f\u8fbe\u4e00\u5c0f\u65f6\u7684\u7528\u6237\u7814\u7a76\u5e38\u5e38\u4e0d\u8db3\u4ee5\u8bc4\u4f30\u590d\u6742\u7684\u8bed\u8a00\u548c\u5de5\u5177\u3002(Coblenz\u7b49\u4eba\u6700\u8fd1\u63d0\u4ea4\u4e86\u4e00\u4efdTochi\u62a5\u544a\uff0c\u6982\u8ff0\u4e86\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7684\u4e00\u4e9b\u7f3a\u9677\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u8fc7\u7a0b\u3002)\u3002\n\u8bed\u8a00\u6216\u5de5\u5177\u8bbe\u8ba1\u4e2d\u4e0e\u5f00\u53d1\u4eba\u5458\u7ecf\u9a8c\u6709\u5173\u7684\u90e8\u5206--\u5bf9\u4e8e\u5f88\u591a\u8bba\u6587\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u5927\u5806\u4e8b\u60c5--\u6700\u7ec8\u53ea\u51fa\u73b0\u5728\u5bfc\u8a00\u548c\u6574\u7bc7\u8bba\u6587\u7684\u5404\u79cd\u5047\u8bbe\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u90e8\u5206\u4e0d\u4f1a\u88ab\u76f4\u63a5\u8bc4\u4f30\u3002\u5f53\u6211\u4eec\u4e0d\u76f4\u63a5\u8bc4\u4f30\u53ef\u7528\u6027\u58f0\u660e\u65f6\uff0c\u4f1a\u53d1\u751f\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u4e13\u6ce8\u4e8e\u4ee5\u6df1\u601d\u719f\u8651\u7684\u65b9\u5f0f\u63d0\u9ad8\u53ef\u7528\u6027\u7684\u5de5\u4f5c\u4e0d\u4e00\u5b9a\u6709\u66f4\u597d\u7684\u673a\u4f1a\u5f97\u5230\u79ef\u6781\u7684\u540c\u884c\u8bc4\u8bae\u3002\u5176\u6b21\uff0c\u53ef\u7528\u6027\u58f0\u660e\u6ca1\u6709\u5f97\u5230\u4e25\u683c\u7684\u5ba1\u67e5\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u9886\u57df\u4e0d\u592a\u53ef\u80fd\u8f6c\u5411\u6539\u5584\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u73b0\u5728\uff0c\u5f53\u4e00\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u4f18\u52bf\u662f\u53ef\u7528\u6027\u65f6\uff0c\u5b83\u901a\u8fc7\u540c\u884c\u8bc4\u8bae\u7684\u65f6\u95f4\u5c31\u66f4\u5dee\u4e86\uff0c\u56e0\u4e3a\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u8bc4\u5ba1\u8005\u662f\u5426\u6b23\u8d4f\u5b83\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6211\u60f3\u5411\u8fd9\u4e2a\u9886\u57df\u63d0\u51fa\u7684\u95ee\u9898\uff1a\u5728PL\u8bba\u6587\u7684\u95ee\u9898\u9009\u62e9\u4e0a\u5e94\u7528\u4e25\u683c\u7684\u8bc4\u4f30\uff0c\u800c\u4e0d\u662f\u5bf9\u7ed3\u679c\u8fdb\u884c\u6848\u4f8b\u7814\u7a76\uff0c\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u5bf9\u4e8e\u90a3\u4e9b\u63d0\u51fa\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u7387\u7684\u8bba\u6587\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5bf9\u7167\u91c7\u8bbf/\u8c03\u67e5\u6765\u8bc4\u4f30\u5b83\u4eec\uff0c\u770b\u770b\u5f00\u53d1\u4eba\u5458\u5230\u5e95\u5728\u54ea\u91cc\u82e6\u82e6\u6323\u624e\u5462\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u8ba9\u8fd9\u4e9b\u6807\u51c6(\u4f8b\u5982\uff0c\u5065\u5168\u6027\u6216\u6027\u80fd)\u6210\u4e3a\u9700\u8981\u901a\u8fc7\u7528\u6237\u7814\u7a76\u6765\u8bc1\u660e\u7684\u4e1c\u897f\u5462\uff1f\u201cSoundness\u201d\u662f\u4e00\u79cd\u6b63\u5f0f\u58f0\u660e\uff0c\u8868\u793a\u5206\u6790\u6839\u636e\u4e00\u4e9b\u611f\u5174\u8da3\u7684\u8bed\u4e49\u5c5e\u6027\u5c0a\u91cd\u8bed\u4e49\uff0c\u4f8b\u5982\u6ca1\u6709\u8fd0\u884c\u65f6\u5931\u8d25\u6216\u6ca1\u6709\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u901a\u8fc7\u7528\u6237\u8bbf\u8c08\u6765\u8bc1\u660e\u8fd9\u4e00\u5c5e\u6027\u672c\u8eab\u662f\u5408\u7406\u7684\uff0c\u770b\u8d77\u6765\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\nI d\n\u6700\u540e\u4e00\u53e5\u8bdd\uff1a\u6211\u4eec\u5e94\u8be5\u5c0f\u5fc3\uff0c\u4e0d\u8981\u8ba9\u8ffd\u6c42\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u8bc4\u4f30\u4e3b\u5bfc\u4e00\u4e2a\u9886\u57df\uff0c\u5305\u62ec\u4ee5\u7528\u6237\u4e3a\u4e2d\u5fc3\u7684\u8bc4\u4f30\u3002\u4e00\u65b9\u9762\uff0c\u6211\u559c\u6b22\u5728\u9ad8\u5ea6\u6280\u672f\u6027\u7684\u7f16\u7a0b\u8bed\u8a00\u8bba\u6587\u4e2d\u589e\u52a0\u4ee5\u4eba\u4e3a\u4e2d\u5fc3\u7684\u8bc4\u4f30\u90e8\u5206\u7684\u60f3\u6cd5\u3002\u6211\u4e00\u76f4\u8ba4\u4e3a\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u662f\u4eba\u7684\u56e0\u7d20\u4e0e\u6570\u5b66\u548c\u4ee3\u7801\u7684\u7ed3\u5408--\u8fd9\u4e9b\u8bc4\u4f30\u90e8\u5206\u6700\u7ec8\u4f1a\u53cd\u6620\u51fa\u8fd9\u4e00\u7ed3\u5408\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b66\u672f\u754c\u4e0d\u662f\u884c\u4e1a\u662f\u6709\u539f\u56e0\u7684\u3002\u6211\u4eec\u9700\u8981\u4e3a\u5047\u8bbe\u63d0\u4f9b\u7a7a\u95f4\u3002\u6211\u4eec\u5bf9\u8bc4\u4f30\u7684\u8981\u6c42\u8d8a\u9ad8\uff0c\u5c31\u8d8a\u96be\u8bc1\u660e\u4f34\u968f\u7740\u771f\u6b63\u65b0\u5947\u53d1\u73b0\u7684\u76f4\u89c9\u662f\u5408\u7406\u7684\u3002\u867d\u7136\u6211\u8ba4\u4e3a\uff0c\u5728\u7c7b\u4f3c\u4e8e\u4ee5\u8bed\u4e49\u4e3a\u4e2d\u5fc3\u6216\u4ee5\u7ee9\u6548\u4e3a\u4e2d\u5fc3\u7684\u8bc4\u4f30\u7684\u57fa\u7840\u4e0a\u8003\u8651\u4ee5\u4eba\u4e3a\u4e2d\u5fc3\u7684\u8bc4\u4f30\u5c06\u63a8\u52a8\u8be5\u9886\u57df\u5411\u524d\u53d1\u5c55\uff0c\u4f46\u6211\u4eec\u5e94\u8be5\u8c28\u614e\u5bf9\u5f85\u4efb\u4f55\u4e00\u79cd\u5fc5\u9700\u7684\u8bc4\u4f30\u3002\n\u7b80\u4ecb\uff1aJean Yang\u662fAPI\u5de5\u5177\u516c\u53f8Akita Software\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u3002\u5979\u4e4b\u524d\u662f\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7684\u52a9\u7406\u6559\u6388\u3002\n\u81f4\u8c22\uff1a\u611f\u8c22\u5a01\u5c14\u00b7\u514b\u83b1\u987f\u5bf9\u672c\u6587\u8349\u7a3f\u7684\u8bc4\u8bba\u548c\u5efa\u8bae\uff01\n\u514d\u8d23\u58f0\u660e\uff1a\u8fd9\u4e9b\u5e16\u5b50\u662f\u7531\u4e2a\u4eba\u64b0\u7a3f\u4eba\u64b0\u5199\u7684\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u793e\u533a\u5229\u76ca\u5728SIGPLAN\u535a\u5ba2\u4e0a\u5206\u4eab\u4ed6\u4eec\u7684\u60f3\u6cd5\u3002\u672c\u535a\u5ba2\u4e2d\u6240\u4ee3\u8868\u7684\u4efb\u4f55\u89c2\u70b9\u6216\u89c2\u70b9\u5747\u4e3a\u4e2a\u4eba\u89c2\u70b9\uff0c\u4ec5\u5c5e\u4e8e\u535a\u5ba2\u4f5c\u8005\uff0c\u4e0d\u4ee3\u8868ACM SIGPLAN\u6216\u5176\u4e0a\u7ea7\u7ec4\u7ec7ACM\u7684\u89c2\u70b9\u6216\u89c2\u70b9\u3002", "note_en": "In 2018, I was two years into a tenure-track junior faculty position at Carnegie Mellon University when I saw what was happening in the world of software. 2018 was when  Cambridge Analytica happened; soon afterward,  GDPR became law. Most academics who start companies in industry do so because they are commercializing a specific project; I left to start  Akita Software because I saw that the timing was right to build the kinds of tools I wanted to build\u2014those that could help improve the quality and security of software. For the last two years, I\u2019ve been working to  build developer tools at the API level for modern web apps.\n Because the technical problem was not set in stone at the time I started Akita, I spent the first year of working on the company doing product and user research work. My academic career trained me to   solve problems  in a principled way. Through the process of getting Akita up and running, I learned how to   select problems  in a principled way. This was important because for the first time, the success of my efforts was being defined by how well I solved   problems that people cared about  enough to pay real-world money for. Here are my learnings.\n  When I was in research, I spent a lot of time talking to programmers \u201cin the wild,\u201d to understand the problems they had. So I thought I was doing my homework in terms of problem selection. In the last two years, I\u2019ve learned about   user research  and realized that my problem selection in academia could have been much more methodical and principled!\n When you are trying to understand the precise problem,  there are principled ways of understanding user pain\u2014even when your users are programmers and you are working on something as complex as programming languages and tools. You can\u2019t prove them using math or measuring them like you do compiler performance, but you can be scientific all the same, e.g., by applying rigorous methods. This is something that the field of HCI has been doing for a long time\u2014and that people have been advocating for merging more with programming tools , but still hasn\u2019t reached most of programming languages research. (For instance, see this paper \u201c Programmers are Users Too: Human-Centered Methods for Improving Programming Tools\u201d and  Sarah Chasins\u2019s  syllabus for \u201cBuilding User-Centered Programming Tools.\u201d)\n One of the main things I learned about user research was to  be rigorous about   how   I asked user questions. The most straightforward way is to ask all users the same questions in the same order, under the same conditions. It is also important not to ask leading questions, nor to directly ask users what they want\u2014there\u2019s that famous saying that if Henry Ford had asked people what they wanted, they would have said faster horses. If your hypothesis is that tying one\u2019s shoes is a pain point when trying to leave the house, it is not a good idea to ask directly: \u201cDo you have trouble tying your shoes?\u201d A better way to do this is to ask the user to walk you through what happens when they leave the house and ask them for what the pain points are. (For more on this, you may be interested in \u201c  Principles of Contextual Inquiry .\u201d)\n Another big lesson I learned during user research was to  zoom out. Previously when I had been talking to users when doing programming languages research, my conversations usually centered around the pain developers were having around the specific problem I was working on. What I learned when doing user research was to understand the user as a whole person, complete with greater motivations and incentives, and understand how the problem I solved fit in with their goals, hopes, and dreams. For instance, here are questions I asked   before  learning more about user research:\n  And here are some of the questions we asked dozens of users when I started Akita, that had very little to do with the specific tool we were building at all:\n Walk me through a day in your job. What tools are you using? How are you spending your time?\n   What are issues that would cause you to stay at work past the usual time?\n Tell me about how you interface with the rest of engineering. What frictions do you have there? (This was a question for security engineers.)\n As a programming languages researcher, I certainly did not ask these questions in a consistent and disciplined way during problem selection\u2014if at all. From asking these questions, I learned, for instance, that developer adoption impacted the success of a security tool much more than anything security engineers thought about the tool. And that developer adoption often hinged more on actionability than accuracy. These realizations not only led us to completely pivot what we thought our product should be (we started out focused on security/privacy-related usage of APIs, but pivoted to general-purpose use-cases), but also  forever changed my views on building programming languages and tools.\n  Embracing the approach described above led to important changes in what we were doing. When I started Akita, I thought what we were going to build was the equivalent of an application performance monitoring tool for tracing data, targeted towards security and privacy teams. I had come to this initial conclusion from talking to people at a high level about what they thought the problems were, and what they thought was needed. Through doing user research, we instead decided to build low-friction integration tools targeted at inferring and testing against API specs, and to pivot our solution away from targeting security or privacy specifically. Here are some of the lessons that led to that:\n The most important way a security engineer can spend their time is improving their relationship with software engineering.  When we asked security engineers how they got promoted and/or increased their influence in their organization, it came up over and over again that a security team was only as good as the engineers who listened to them. This gave us confidence that building   developer  tools was the right way to go, since they have much greater influence!\n One of the  biggest challenges security engineers face is getting software engineers to fix their bugs.  When we asked security engineers to walk us through what they ended up spending a lot of time on, it involved convincing engineers to fix things. For instance, one engineer I spoke to spent a lot of his time coming up with examples to convince engineers that something they wrote is insecure. Another team took it one step further and hired penetration testers just to prove out the importance of certain security/privacy controls to their engineering teams. The results of this user research led us to believe that it wasn\u2019t enough to provide reports to security that something was wrong; a more powerful tool would not only help identify possible problems, but also help developers prioritize and fix the problems. (Our findings match those of   this study .) As a developer tools team, this was right up our alley, leading us to start building tools that helped with providing context and reproducibility.\n Integration friction matters.  When we asked users about what led them to choose the tools that they currently used, ease of integration into existing tool chains came up over and over again, as well as how much configuration the tool needed. This was especially true for security engineers, as they burned social capital whenever they made asks of other teams. We realized if we didn\u2019t make a tool that was easy to integrate, it would be very hard to get adoption.\n Building a developer tool for security means  building  for the developer/security gap.  Over the course of the first year of working on our product, we realized that our product design and go-to-market involved straddling the communication and incentive gap between security engineering and software engineering teams. After understanding the point of view of each side and that developers did not actually seem very interested in closing it, we ultimately decided we needed to choose a side. We chose to become a developer tool with a security use case, instead of the reverse. Without having done the user research we had done, the choice would not have been nearly as obvious!\n Through the process of doing this user research, I also learned to let go of many of the assumptions I had held in academia:\n Soundness may not be the right goal.  In academia, it is often the goal to make static program analyses   sound : if a bug is not reported, then that bug should not be possible. A common complaint about static analyses is that they aren\u2019t actually that helpful a lot of the time because of the false positives. One reason this is a problem, for instance, is that the more bugs security teams report to developers, the less likely the bugs are to get fixed. In academia, I had thought of false bugs as non-bugs; many industry developers would call a low-priority bug a \u201cfalse positive.\u201d A surprising (to me) number of engineers said they\u2019d rather not know about all of the bugs, but instead be informed about a subset of bugs that were likely to be fixed. Peter O\u2019Hearn\u2019s \u201c  Incorrectness Logic \u201d paper is one that addresses this side of the problem.\n \u201cLegacy factors\u201d may be more important than guarantees or performance.  More generally, the tradeoffs that people want to make are not what you might expect, so they are worth exploring. When I dug deeper on my problem, for instance, I learned that the barrier to entry was often convincing people to adopt tools, which had more to do with integrations and learning curve than than math or performance. If people never got to the point of appreciating what was good about a tool, they would not appreciate the tool! This is definitely a different point of view than the one I had in academia, where the focus was on building clean versions of new features, leaving adoption as an exercise to the reader. While requiring all academic work to worry about adoption would certainly curb a lot of innovation, viewing adoption as \u201cnot academia\u2019s problem\u201d may be be curbing the opportunity for impact. Given that frictionless integration with legacy tool chains yields surprisingly challenging technical problems and can disproportionately affect impact, it should be given more attention in academia.\n   My experience learning about user research led me to revisit something that I had previously thought a lot about: how should we be evaluating programming languages research papers? While a paper\u2019s Introduction is what gets reviewers interested in a paper in the first place, the evaluation section gives a champion reviewer the necessary ammunition to go to battle at the Program Committee meeting. Because of this power, what shows up in the evaluation section determines what kind of work gets done in entire fields.\n My strong belief is that  programming languages research does not value usability because there currently is no satisfying, agreed-upon way of evaluating it.  Semantics evaluations guarantee properties like soundness, completeness, and type safety, but they don\u2019t say anything about whether someone will actually care about the guarantees or the language. Benchmarks determine the tool runs fast according to sample programs. Benchmarks are great for compilers of known languages, but are often not as appropriate for language or tool design papers that do not focus around performance. The hour-long user studies we often see are often inadequate for evaluating complex languages and tools. (Coblenz et al have a   recent TOCHI submission  outlining some existing shortcomings in evaluation processes and proposing a new process.)\n The parts of language or tool design that have to do with developer experience\u2014which, for a lot of papers, is a lot of things\u2014end up only in the introduction and in various assumptions throughout the paper. What this means is that these parts are not directly evaluated. And when we don\u2019t directly evaluate usability claims, two things happen. First, work that focuses on improving usability in a thoughtful way does not necessarily have a better chance of getting positively peer-reviewed. Second, usability claims do not get critically reviewed, meaning the field is less likely to move towards solutions that improve developer experience. Right now, when a paper\u2019s main strength is usability, it has a   worse  time getting through peer review because it\u2019s up to the specific reviewers whether they choose to appreciate it or not.\n Here\u2019s a question that I would like to pose to the field:  What would it look like to apply rigorous evaluation to problem selection for PL papers, instead of case studies for the result? For papers that propose things for developer productivity, why not evaluate them against interviews/surveys of where developers are actually struggling? Why not also make the criteria (for instance, soundness or performance) something that needs to be justified by the user research? \u201cSoundness\u201d is a formal statement that an analysis respects semantics according to some semantic property of interest, for instance no run-time failures or no information. What would it look like to justify this property itself, e.g., through user interviews?\n I don\u2019t know the answers, but here is one version of what it could look like. For researchers, understanding that there exists a framework for evaluating usability may change how you decide to pose and evaluate those claims. There is no need to go all-out and do a collaboration with an HCI researcher, though that could be interesting and helpful for the work. Even conducting any interviews is better than nothing. For reviewers, understanding usability evaluation may help you consider it as an acceptable form of evaluation for PL research\u2014and flag when papers make usability claims   without  backing them up rigorously. And the only way we can move towards this is if the leaders of the community support this shift towards rigorous user-centric work.\n A final word: we should be careful not to let the pursuit of any specific kind of evaluation dominate a field, including user-centric evaluation. On the one hand, I love the idea of adding human-centered evaluation sections to highly technical programming languages paper. I have always thought of programming languages research as combining human factors with math and code\u2014and these evaluation sections would finally reflect this marriage. On the other hand, academia   isn\u2019t  industry for a reason. We need room for the what-ifs. And the more that we require of evaluations, the harder it will be to justify the intuition that accompanies truly novel discoveries. While I believe it would move the field forward to consider human-centered evaluation on a similar footing to semantics-centered or performance-centered evaluations, we should be wary of making any one of these evaluations required.\n Bio:  Jean Yang is the founder and CEO of  Akita Software, an API tools company. She was previously an Assistant Professor in the Computer Science Department at Carnegie Mellon University.\n Acknowledgments: Thanks to Will Crichton for comments and suggestions on a draft of this post!\n Disclaimer:  These posts are written by individual contributors to share their thoughts on the SIGPLAN blog for the benefit of the community. Any views or opinions represented in this blog are personal, belong solely to the blog author and do not represent those of ACM SIGPLAN or its parent organization, ACM.", "posttime": "2020-11-07 11:26:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u5f00\u53d1,\u7ecf\u9a8c,developer", "title": "\u5f00\u53d1\u4eba\u5458\u7ecf\u9a8c\u5728\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u4e2d\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "title_en": "What\u2019s the Role of Developer Experience in Programming Languages Research?", "transed": 1, "url": "https://blog.sigplan.org/2020/10/27/whats-the-role-of-developer-experience-in-programming-languages-research/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u5f00\u53d1", "\u7ecf\u9a8c", "developer"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033650, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60e0\u666e\u7ed3\u675f\u4e86\u5b83\u7684\u5ba2\u6237\u751f\u547d\uff1a\u7ec8\u8eab\u514d\u8d39\u58a8\u6c34\uff0c\u7948\u7977\u6211\u4e0d\u8981\u518d\u6539\u53d8\u5b83\u3002\n\u60e0\u666e\u4ece\u672a\u505c\u6b62\u521b\u65b0\u3002\u4ece20\u4e16\u7eaa30\u5e74\u4ee3\u4f5c\u4e3a\u4e00\u5bb6\u9886\u5148\u7684\u7535\u5b50\u4ea7\u54c1\u5236\u9020\u5546\u8d77\u5bb6\uff0c\u5230\u5728\u4e2a\u4eba\u7535\u8111\u548c\u6027\u80fd\u670d\u52a1\u5668\u7684\u8bde\u751f\u4e2d\u626e\u6f14\u7684\u89d2\u8272\uff0c\u5b83\u4e00\u76f4\u8868\u73b0\u51fa\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u72ec\u521b\u6027\u3002\n\u6253\u5370\u673a-\u6cb9\u58a8\u5546\u4e1a\u6a21\u5f0f\u4e00\u76f4\u662f\u5546\u4e1a\u8650\u5f85\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u4f60\u4f1a\u628a\u5de8\u5934\u5236\u9020\u5546\u7684\u5229\u76ca\u653e\u5728\u81ea\u5df1\u7684\u5229\u76ca\u4e4b\u4e0a\uff0c\u800c\u4e0d\u4f1a\u6307\u671b\u4efb\u4f55\u5f62\u5f0f\u7684\u4e92\u60e0\u3002\n\u6bd5\u7adf\uff0c\u5f53\u4f60\u7684\u5229\u6da6\u4f9d\u8d56\u4e8e\u58a8\u6c34\u7684\u4ef7\u683c\u9ad8\u4e8e\u590d\u53e4\u9999\u69df\u7684\u4ef7\u683c\u65f6\uff0c\u4f60\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u4e25\u8083\u7684\u8be1\u8ba1\uff0c\u8ba9\u4f60\u7684\u5ba2\u6237\u8017\u5c3d\u4ed6\u4eec\u7684\u94f6\u884c\u8d26\u6237\u6765\u586b\u6ee1\u4ed6\u4eec\u7684\u6253\u5370\u673a\u3002\n\u5236\u9020\u7279\u6b8a\u7684\u534a\u6ee1\u58a8\u76d2\uff0c\u4ee5\u4fbf\u968f\u65b0\u6253\u5370\u673a\u4e00\u8d77\u53d1\u8d27\uff0c\u56e0\u6b64\u5176\u6240\u6709\u8005\u5fc5\u987b\u5728\u6253\u5f00\u5305\u88c5\u76d2\u540e\u7684\u51e0\u5929\u5185\u8d2d\u4e70\u4e00\u5957\u65b0\u7684\u58a8\u76d2", "note_en": "HP ends its customers&#39; lives: &#34;Free ink for life&#34; vs &#34;Pray I don&#39;t alter it further.&#34;\n     HP never stopped innovating. From its origins in the 1930s as a leading electronics manufacturer to its role in the birth of PCs and performance servers, it has always demonstrated incredible ingenuity.\n  The printer-ink business model has always been a form of commercial sadism in which you are expected to put giant manufacturers&#39; interests ahead of your own with no expectation of any sort of reciprocity.\n  After all, when your profits depend on charging more for ink than vintage Veuve-Clicquot, you need to get up to some serious shenanigans to get your customers to drain their bank accounts to fill their printers.\n  Manufacturing special half-full cartridges to ship with new printers so their owners have to buy a new set just days after the open the box", "posttime": "2020-11-07 11:25:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "instant,ink,\u5ba2\u6237", "title": "HP Instant Ink\u662f\u201c\u58a8\u6c34\u5373\u670d\u52a1\u201d", "title_en": "HP Instant Ink is \u201cink as a service\u201d", "transed": 1, "url": "https://pluralistic.net/2020/11/06/horrible-products/#inkwars", "via": "", "real_tags": ["instant", "ink", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "5b2c803846d47c6539ffe22455cb4bc2.jpg", "infoid": 1033649, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e2a\u4e16\u7eaa\u6700\u5177\u9769\u547d\u6027\u7684\u53d1\u73b0\u4e4b\u4e00\u662f\uff0c\u5b87\u5b99\u5e76\u4e0d\u662f\u6c38\u8fdc\u9759\u6b62\u4e0d\u53d8\u7684\uff0c\u800c\u662f\u6d3b\u8dc3\u5728\u81a8\u80c0\u7684\u8fc7\u7a0b\u4e2d\u3002\u5927\u7ea6138\u4ebf\u5e74\u524d\uff0c\u5728\u708e\u70ed\u7684\u5927\u7206\u70b8\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u5b87\u5b99\u8fd8\u4e0d\u5230\u4e00\u4e2a\u57ce\u5e02\u8857\u533a\u7684\u5927\u5c0f\uff0c\u53ef\u80fd\u6709\u8db3\u7403\u90a3\u4e48\u5c0f\uff1b\u4eca\u5929\uff0c\u5b83\u5411\u5404\u4e2a\u65b9\u5411\u5ef6\u4f38\u4e86\u8d85\u8fc7460\u4ebf\u5149\u5e74\u3002\u5982\u679c\u5b87\u5b99\u5728\u81a8\u80c0\uff0c\u90a3\u4e48\u8fd9\u5bf9\u5176\u4e2d\u7684\u7269\u4f53\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u661f\u7cfb\u5728\u81a8\u80c0\u5417\uff1f\u90a3\u4e48\u6052\u661f\u3001\u884c\u661f\u3001\u4eba\u7c7b\uff0c\u751a\u81f3\u539f\u5b50\u672c\u8eab\u5462\uff1f\u8fd9\u6b63\u662f\u54c8\u62c9\u5c14\u5fb7\u00b7\u5e0c\u514b(Harald Hick)\u60f3\u77e5\u9053\u7684\uff0c\u4ed6\u5199\u4fe1\u95ee\u9053\uff1a\n\u201c\u5728\u81a8\u80c0\u5b87\u5b99\u7684\u2018\u8461\u8404\u5e72\u9762\u5305\u2019\u6a21\u578b\u4e2d\uff0c\u8461\u8404\u5e72\u4e5f\u4f1a\u81a8\u80c0\u5417\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u539f\u5b50\u90fd\u4f1a\u968f\u7740\u5b87\u5b99\u7684\u81a8\u80c0\u800c\u589e\u5927\u5417\uff1f\u201c\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6df1\u523b\u7684\u95ee\u9898\uff0c\u5b83\u7684\u7b54\u6848\u53ef\u80fd\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u65b9\u6cd5\u3002\n\u5f53\u7231\u56e0\u65af\u5766\u7b2c\u4e00\u6b21\u63d0\u51fa\u4ed6\u7684\u65b0\u76f8\u5bf9\u8bba\u65f6\uff0c\u5b83\u6c38\u8fdc\u5730\u6539\u53d8\u4e86\u6211\u4eec\u5bf9\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u770b\u6cd5\u3002\u7a7a\u95f4\u4e0d\u50cf\u4e09\u7ef4\u7f51\u683c\u90a3\u6837\u662f\u56fa\u5b9a\u7684\uff0c\u4efb\u4f55\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u516c\u8ba4\u7684\u8ddd\u79bb\u3002\u65f6\u95f4\u4e5f\u4e0d\u662f\u4e00\u4e2a\u8fde\u7eed\u6d41\u52a8\u7684\u5b9e\u4f53\uff0c\u4f60\u53ef\u4ee5\u540c\u6b65\u4f60\u7684\u65f6\u949f\uff0c\u79fb\u52a8\u5230\u4f60\u559c\u6b22\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5e76\u786e\u4fe1\u4f60\u7684\u65f6\u949f\u4e0e\u5176\u4ed6\u4efb\u4f55\u4eba\u7684\u65f6\u949f\u8bfb\u6570\u76f8\u540c\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u8ba4\u4e3a\u7a7a\u95f4\u548c\u65f6\u95f4\u662f\u76f8\u5bf9\u7684\uff1a\u4f60\u5728\u7a7a\u95f4\u4e2d\u7684\u8fd0\u52a8\u4f1a\u5f71\u54cd\u4f60\u5728\u65f6\u95f4\u4e2d\u7684\u8fd0\u52a8\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u8fd9\u662f\u72ed\u4e49\u76f8\u5bf9\u8bba\u80cc\u540e\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5b83\u4f7f\u6211\u4eec\u629b\u5f03\u4e86\u201c\u7edd\u5bf9\u7a7a\u95f4\u201d\u548c\u201c\u7edd\u5bf9\u65f6\u95f4\u201d\u7684\u65e7\u89c2\u5ff5\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u65f6\u7a7a\u7684\u6982\u5ff5\u3002\u6839\u636e\u7231\u56e0\u65af\u5766\u5b9a\u5f8b\uff0c\u5f53\u4f60\u76f8\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u89c2\u5bdf\u8005\u5728\u592a\u7a7a\u4e2d\u79fb\u52a8\u65f6\uff0c\u4f60\u7684\u65f6\u949f\u4f3c\u4e4e\u8fd0\u884c\u4e0d\u540c\u3002\u72ed\u4e49\u76f8\u5bf9\u8bba\u5bf9\u4e8e\u6240\u6709\u89c2\u6d4b\u8005\u6765\u8bf4\u90fd\u662f\u5b8c\u7f8e\u7684\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u9759\u6b62\u7684\u8fd8\u662f\u8fd0\u52a8\u7684\uff0c\u5b83\u4ee3\u8868\u7740\u5bf9\u6211\u4eec\u5b87\u5b99\u7684\u7406\u89e3\u8d85\u8d8a\u4e86\u725b\u987f\u6700\u521d\u7684\u8fd0\u52a8\u5b9a\u5f8b\u7684\u5de8\u5927\u98de\u8dc3\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u806a\u660e\uff0c\u4f46\u5b83\u5e76\u4e0d\u5305\u62ec\u5730\u5fc3\u5f15\u529b\u3002\u53e4\u8001\u7684\u725b\u987f\u5f15\u529b\u56fe\u666f\u4e0e\u751f\u4ff1\u6765\u5730\u4e0e\u8ddd\u79bb\u548c\u65f6\u95f4\u7684\u7edd\u5bf9\u6982\u5ff5\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u4e0e\u65f6\u7a7a\u6982\u5ff5\u4e0d\u76f8\u5bb9\u3002\u7231\u56e0\u65af\u5766\u82b1\u4e86\u5341\u591a\u5e74\u7684\u65f6\u95f4\u624d\u5c06\u5f15\u529b\u7eb3\u5165\u5176\u4e2d\uff0c\u5c06\u6211\u4eec\u4ece\u72ed\u4e49\u76f8\u5bf9\u8bba\u5e26\u5165\u5e7f\u4e49\u76f8\u5bf9\u8bba\uff1a\u5c06\u7269\u8d28\u548c\u80fd\u91cf\u7eb3\u5165\u65b9\u7a0b\u5f0f\u3002\n\u4e0e\u72ed\u4e49\u76f8\u5bf9\u8bba\u7684\u6241\u5e73\u65f6\u7a7a\u4e0d\u540c\uff0c\u7269\u8d28\u548c\u80fd\u91cf\u7684\u5b58\u5728\u5141\u8bb8\u65f6\u7a7a\u6210\u4e3a\u52a8\u6001\u5b9e\u4f53\u3002\u5b87\u5b99\u4e0d\u518d\u5fc5\u7136\u662f\u9759\u6001\u7684\uff0c\u5b83\u53ef\u4ee5\u81a8\u80c0\u6216\u6536\u7f29\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5176\u4e2d\u7684\u5185\u5bb9\u3002\u7269\u8d28\u548c\u80fd\u91cf\u544a\u8bc9\u65f6\u7a7a\u5982\u4f55\u5f2f\u66f2\uff0c\u5f2f\u66f2\u7684\u65f6\u7a7a\u51b3\u5b9a\u4e86\u7269\u8d28\u548c\u80fd\u91cf\u5982\u4f55\u8fd0\u52a8\u3002\n\u8fd9\u79cd\u5173\u7cfb\u5728100\u591a\u5e74\u524d\u9996\u6b21\u63d0\u51fa\uff0c\u7ecf\u8fc7\u4e86\u5927\u91cf\u5b9e\u9a8c\u548c\u89c2\u5bdf\u7684\u68c0\u9a8c\uff0c\u7231\u56e0\u65af\u5766\u7684\u7406\u8bba\u6bcf\u4e00\u6b21\u90fd\u901a\u8fc7\u4e86\u3002\u5e7f\u4e49\u76f8\u5bf9\u8bba\u4e0d\u4ec5\u9002\u7528\u4e8e\u6211\u4eec\u5728\u5730\u7403\u548c\u592a\u9633\u7cfb\u5176\u4ed6\u5730\u65b9\u53d1\u73b0\u7684\u5f15\u529b\uff0c\u800c\u4e14\u9002\u7528\u4e8e\u5de8\u5927\u7684\u5b87\u5b99\u5c3a\u5ea6\uff0c\u4f7f\u6211\u4eec\u81ea\u5df1\u7684\u5b87\u5b99\u76f8\u5f62\u89c1\u7ecc\uff1a\u661f\u7cfb\u3001\u661f\u7cfb\u56e2\uff0c\u751a\u81f3\u6574\u4e2a\u5b87\u5b99\u672c\u8eab\u3002\n\u6700\u540e\u4e00\u90e8\u5206\u7279\u522b\u5438\u5f15\u4eba\uff1a\u5982\u679c\u6211\u4eec\u62ff\u4e00\u4e2a(\u5e73\u5747\u800c\u8a00)\u5747\u5300\u5145\u6ee1\u7269\u8d28\u548c/\u6216\u80fd\u91cf\u7684\u5b87\u5b99--\u5305\u62ec\u4e0d\u540c\u5f62\u5f0f\u7684\u7269\u8d28\u548c/\u6216\u80fd\u91cf\u7684\u7ec4\u5408--\u6765\u8bf4\uff0c\u8fd9\u4e2a\u5b87\u5b99\u8981\u4e48\u81a8\u80c0\uff0c\u8981\u4e48\u6536\u7f29\u3002\u5b83\u4e0d\u80fd\u4fdd\u6301\u9759\u6b62\u72b6\u6001\u8d85\u8fc7\u4e00\u77ac\u95f4\uff0c\u5373\u4f7f\u5b83\u662f\u5728\u4e00\u4e2a\u77ac\u95f4\u5f00\u59cb\u7684\u30021922\u5e74\uff0c\u4e9a\u5386\u5c71\u5927\u00b7\u5f17\u91cc\u5fb7\u66fc(Alexander Friedmann)\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4ece\u7231\u56e0\u65af\u5766\u7684\u7406\u8bba\u6d3e\u751f\u51fa\u5f17\u91cc\u5fb7\u66fc\u65b9\u7a0b\uff1a\u652f\u914d\u5b87\u5b99\u81a8\u80c0\u7684\u65b9\u7a0b\u3002\n\u5c31\u5728\u7b2c\u4e8c\u5e74\uff0c\u57c3\u5fb7\u6e29\u00b7\u54c8\u52c3(Edwin Hubble)\u6d4b\u91cf\u4e86\u5230\u4ed9\u5973\u5ea7\u7684\u8ddd\u79bb\uff0c\u786e\u5b9a\u8fd9\u4e2a\u201c\u87ba\u65cb\u661f\u4e91\u201d\u5b9e\u9645\u4e0a\u662f\u5b83\u81ea\u5df1\u7684\u661f\u7cfb\uff0c\u8fdc\u8fdc\u8d85\u51fa\u4e86\u94f6\u6cb3\u7cfb\u3002\u968f\u540e\uff0c\u6211\u4eec\u6d4b\u91cf\u4e86\u5230\u5927\u91cf\u661f\u7cfb\u7684\u8ddd\u79bb\uff0c\u540c\u65f6\u72ec\u7acb\u83b7\u5f97\u4e86\u6765\u81ea\u8fd9\u4e9b\u661f\u7cfb\u7684\u5149\u7684\u6d4b\u91cf\u7ed3\u679c\u3002\u6211\u4eec\u7684\u53d1\u73b0\uff0c\u51e0\u4e4e\u662f\u666e\u904d\u7684\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u5373\u4f7f\u5728\u8f83\u8fdc\u7684\u661f\u7cfb\u5185\u7684\u6052\u661f\uff0c\u5e73\u5747\u6765\u8bf4\uff0c\u6bd4\u6211\u4eec\u5728\u9644\u8fd1\u661f\u7cfb\u4e2d\u770b\u5230\u7684\u6052\u661f\u5728\u672c\u8d28\u4e0a\u66f4\u201c\u84dd\u201d\u3002\n\u5bf9\u6b64\u7684\u89e3\u91ca\u4e0e\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\u662f\u4e00\u81f4\u7684\uff0c\u5373\u661f\u7cfb\u53d1\u51fa\u7684\u5149--\u5176\u9891\u7387\u548c\u6ce2\u957f\u4e0e\u6211\u4eec\u94f6\u6cb3\u7cfb\u53d1\u51fa\u7684\u5149\u7684\u9891\u7387\u548c\u6ce2\u957f\u76f8\u540c--\u6b63\u56e0\u5b87\u5b99\u7684\u81a8\u80c0\u800c\u53d1\u751f\u7ea2\u79fb\u3002\n\u53e6\u4e00\u79cd\u89e3\u91ca\uff0c\u5982\u201c\u75b2\u60eb\u7684\u5149\u201d\uff0c\u4e0e\u89c2\u6d4b\u7ed3\u679c\u4e0d\u7b26\uff0c\u53ea\u7559\u4e0b\u90a3\u4e9b\u5305\u62ec\u81a8\u80c0\u5b87\u5b99\u5728\u5185\u7684\u89e3\u91ca\u662f\u53ef\u884c\u7684\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u65e0\u6cd5\u9003\u8131\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u5b87\u5b99\u672c\u8eab\u6b63\u5728\u81a8\u80c0\uff0c\u800c\u8fd9\u79cd\u81a8\u80c0\u662f\u89c2\u6d4b\u5230\u7684\u6765\u81ea\u9065\u8fdc\u5730\u65b9\u7684\u5149\u7ebf\u7ea2\u79fb\u7684\u539f\u56e0\u3002\n\u867d\u7136\u8bb8\u591a\u6d41\u884c\u7684\u6982\u5ff5\u5c06\u81a8\u80c0\u7684\u5b87\u5b99\u63cf\u7ed8\u6210\u6c14\u7403\u72b6\uff0c\u4f46\u8fd9\u79cd\u7c7b\u6bd4\u4e5f\u6709\u5176\u7f3a\u9677\u3002\u9996\u5148\uff0c\u6211\u4eec\u7684\u5b87\u5b99\u6709\u4e09\u7ef4\u7684\u7a7a\u95f4(\u8fd8\u6709\u4e00\u4e2a\u65f6\u95f4\uff0c\u7ec4\u6210\u4e00\u4e2a\u56db\u7ef4\u7684\u65f6\u7a7a)\uff0c\u800c\u4e0d\u662f\u4e8c\u7ef4\u7684\u3002\u6c14\u7403\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u201c\u4e2d\u5fc3\u201d\uff0c\u5411\u6c14\u7403\u4e2d\u6ce8\u5165\u7a7a\u6c14\u4f1a\u4f7f\u4e8c\u7ef4\u8868\u9762\u81a8\u80c0\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u5b87\u5b99\u6ca1\u6709\u660e\u786e\u7684\u4e2d\u5fc3\uff0c\u4f46\u4e0e\u7231\u56e0\u65af\u5766\u7684\u76f8\u5bf9\u8bba\u4e00\u81f4\uff0c\u5b83\u53d6\u51b3\u4e8e\u89c2\u5bdf\u8005\u3002\n\u76f8\u53cd\uff0c\u4e5f\u8bb8\u6700\u597d\u7684\u7c7b\u6bd4\u662f\u4e00\u56e2\u53d1\u9175\u7684\u9762\u56e2\uff0c\u91cc\u9762\u6709\u8461\u8404\u5e72\uff1a\u8461\u8404\u5e72\u9762\u5305\u3002\u5982\u679c\u4f60\u628a\u8fd9\u4e2a\u9762\u56e2\u60f3\u8c61\u6210(\u6211\u4eec\u7684\u4e09\u7ef4)\u7a7a\u95f4\u7684\u7ed3\u6784\uff0c\u628a\u8461\u8404\u5e72\u60f3\u8c61\u6210\u5176\u4e2d\u7684\u7269\u4f53\uff0c\u4f60\u5c31\u80fd\u8ba4\u51fa\u4efb\u4f55\u201c\u8461\u8404\u5e72\u201d\u5c31\u662f\u4f60\u81ea\u5df1\uff1a\u89c2\u5bdf\u8005\u3002\u4ece\u4f60\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8461\u8404\u5e72\u4f3c\u4e4e\u79bb\u4f60\u66f4\u8fdc\uff0c\u66f4\u8fdc\u7684\u8461\u8404\u5e72\u4f3c\u4e4e\u6bd4\u66f4\u8fd1\u7684\u8461\u8404\u5e72\u540e\u9000\u5f97\u66f4\u5feb\u3001\u66f4\u4e25\u91cd\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8461\u8404\u5e72\u672c\u8eab\u5e76\u6ca1\u6709\u76f8\u5bf9\u4e8e\u5b83\u4eec\u5360\u636e\u7684\u7a7a\u95f4\u79fb\u52a8\uff0c\u800c\u662f\u8461\u8404\u5e72\u4e4b\u95f4\u7684\u7a7a\u95f4\u5728\u6269\u5927\uff0c\u5bfc\u81f4\u5b83\u4eec\u53d1\u51fa\u7684\u5149\u5728\u5230\u8fbe\u6211\u4eec\u7684\u773c\u775b\u4e4b\u524d\u53d1\u751f\u4e86\u7ea2\u79fb\u3002\n\u4f46\u662f\u8461\u8404\u5e72\u672c\u8eab\u6240\u4ee3\u8868\u7684\u7269\u54c1\u5462\uff1f\u5b83\u4eec\u5185\u90e8\u7684\u7a7a\u95f4\u4e5f\u4f1a\u6269\u5927\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6765\u786e\u5b9a\u81a8\u80c0\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u6211\u4eec\u6d4b\u91cf\u5b87\u5b99\u7684\u81a8\u80c0\u901f\u5ea6(\u5373\u4f7f\u6211\u4eec\u76ee\u524d\u4ecd\u6709\u4e89\u8bae)\uff0c\u5927\u7ea6\u662f70\u516c\u91cc/\u79d2/\u5206\u949f/\u79d2\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u767e\u4e07\u79d2\u4e4b\u5916\u5c31\u6709\u4e00\u9897\u201c\u8461\u8404\u5e72\u201d\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5b83\u4f3c\u4e4e\u5728\u4ee570\u516c\u91cc/\u79d2\u7684\u901f\u5ea6\u540e\u9000\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u767e\u4e07\u79d2\u662f\u5de8\u5927\u7684\uff1a\u5927\u7ea6330\u4e07\u5149\u5e74\u3002\u5982\u679c\u6211\u4eec\u628a\u5b83\u7f29\u5c0f\u5230\u5730\u7403\u7684\u5927\u5c0f--\u66f4\u50cf\u662f12700\u5343\u7c73\u5927\u5c0f--\u6211\u4eec\u9884\u8ba1\u5730\u7403\u5c06\u4ee5\u6bcf\u79d20.1\u6beb\u7c73\u7684\u901f\u5ea6\u81a8\u80c0\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u5c06\u5927\u5927\u589e\u52a0\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u3002\n\u6211\u4eec\u7684\u8be6\u7ec6\u6d4b\u91cf\u8868\u660e\uff0c\u81f3\u5c11\u5728\u5730\u7403\u4e0a\uff0c\u7269\u4f53\u5e76\u6ca1\u6709\u81a8\u80c0\u3002\u5373\u4f7f\u8003\u8651\u5230\u5b87\u5b99\u7684\u5de8\u5927\u89c4\u6a21\u548c\u884c\u661f\u53ca\u5176\u4e0a\u7684\u7269\u4f53\u76f8\u5bf9\u8f83\u5c0f\u7684\u5c3a\u5bf8\uff0c\u4e5f\u6709\u53ef\u80fd\u901a\u8fc7\u5b9e\u9a8c\u6765\u8bc1\u660e\u8fd9\u4e00\u70b9\u3002LIGO\u5f15\u529b\u6ce2\u63a2\u6d4b\u5668\u5bf9\u5c0f\u4e8e\u8d28\u5b50\u5bbd\u5ea60.1%\u7684\u8ddd\u79bb\u53d8\u5316\u5f88\u654f\u611f\u3002\u91cf\u5b50\u529b\u5b66\u5b9e\u9a8c\u53ef\u4ee5\u6d4b\u91cf\u539f\u5b50\u7684\u6027\u8d28\uff0c\u7cbe\u786e\u5ea6\u53ef\u4ee5\u8fbe\u5230\u5341\u4ebf\u5206\u4e4b\u4e00\uff0c\u800c\u51e0\u5341\u5e74\u751a\u81f3\u4e00\u4e2a\u4e16\u7eaa\u7684\u7cbe\u786e\u6d4b\u91cf\u4e5f\u53ef\u4ee5\u4e0e\u4e4b\u76f8\u63d0\u5e76\u8bba\u3002\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u77e5\u9053\uff1a\u5730\u7403\u548c\u5730\u7403\u4e0a\u7684\u539f\u5b50\u90fd\u4e0d\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u53d8\u5316\u3002\n\u8fd9\u662f\u610f\u6599\u4e4b\u4e2d\u7684\uff0c\u5982\u679c\u4f60\u60f3\u4e00\u60f3\u81a8\u80c0\u7684\u5b87\u5b99\u4e0e\u4e4b\u5bf9\u6297\u7684\u662f\u4ec0\u4e48\uff1a\u5b9e\u5b9e\u5728\u5728\u7684\u4f5c\u7528\u529b\u3002\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709\u7269\u4f53\u4e4b\u95f4\u7684\u529b\uff1a\u7535\u78c1\u529b\u3001\u5f15\u529b\u6216\u4efb\u4f55\u5176\u4ed6\u4f60\u60f3\u8981\u8003\u8651\u7684\u57fa\u672c\u529b\u3002\u5982\u679c\u5b87\u5b99\u6839\u672c\u4e0d\u5728\u81a8\u80c0\uff0c\u4f60\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4efb\u4f55\u4e1c\u897f\u7684\u5927\u5c0f--\u539f\u5b50\u3001\u5730\u7403\u3001\u661f\u7cfb\u3001\u4e00\u7ec4/\u661f\u7cfb\u56e2\u7b49\u7b49--\u53ea\u9700\u4e86\u89e3\u8d77\u4f5c\u7528\u7684\u7269\u7406\u529b\u548c\u6240\u6d89\u53ca\u7684\u7c92\u5b50/\u7269\u4f53\u7684\u52a8\u529b\u5b66\u5c31\u53ef\u4ee5\u4e86\u3002(\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u5982\u679c\u5b87\u5b99\u6ca1\u6709\u81a8\u80c0\uff0c\u4f60\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4efb\u4f55\u4e1c\u897f\u7684\u5927\u5c0f--\u539f\u5b50\u3001\u5730\u7403\u3001\u661f\u7cfb\u3001\u4e00\u7ec4\u661f\u7cfb\u7b49\u7b49)\u3002\u201d\n\u5728\u8fd9\u4e9b\u7cfb\u7edf\u4e2d\uff0c\u4e8b\u5b9e\u4e0a\u5728\u4efb\u4f55\u53d7\u7ea6\u675f\u7684\u7cfb\u7edf\u4e2d(\u4e0d\u7ba1\u662f\u4ec0\u4e48\u529b\u7ea6\u675f\u5b83)\uff0c\u6240\u6d89\u53ca\u7684\u529b\u6240\u5f15\u8d77\u7684\u52a8\u529b\u5b66\u5728\u5927\u5c0f\u4e0a\u8d85\u8fc7\u81a8\u80c0\u7684\u5b87\u5b99\u6240\u80fd\u5f15\u8d77\u7684\u3002\u8fd9\u662f\u4f60\u7ecf\u5e38\u542c\u5230\u7269\u7406\u5b66\u5bb6\u8bf4\u7684\u4e00\u4e2a\u6781\u597d\u7684\u8fd1\u4f3c\u503c\uff1a\u53ea\u6709\u88ab\u675f\u7f1a\u7684\u7269\u4f53\u4e4b\u95f4\u7684\u7a7a\u95f4\u624d\u4f1a\u81a8\u80c0\u3002\u5bf9\u4e8e\u88ab\u675f\u7f1a\u7684\u7269\u4f53\u672c\u8eab\uff0c\u8d77\u4f5c\u7528\u7684\u529b\u91cf\u538b\u5012\u4e86\u539f\u672c\u81a8\u80c0\u7684\u5b87\u5b99\u7684\u52a8\u6001\uff0c\u81a8\u80c0\u5c31\u88ab\u514b\u670d\u4e86\u3002\n\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u81a8\u80c0\u7684\u5b87\u5b99\u6ca1\u6709\u53d1\u6325\u4efb\u4f55\u4f5c\u7528\u3002\u5982\u679c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7a7a\u7684\u3001\u4e0d\u81a8\u80c0\u7684\u5b87\u5b99\u4e2d\u7684\u4e00\u4e2a\u70b9\u8d28\u91cf\uff0c\u5b83\u5c06\u8868\u73b0\u4e3a\u4e00\u4e2a\u4e0d\u5e26\u7535\u8377\u3001\u4e0d\u65cb\u8f6c\u7684\u9ed1\u6d1e\uff1a\u4e00\u4e2a\u65bd\u74e6\u8328\u67f4\u5c14\u5fb7\u9ed1\u6d1e\u3002\u4f1a\u6709\u4e00\u4e2a\u56fa\u5b9a\u534a\u5f84\u7684\u89c6\u754c\uff1a\u65bd\u74e6\u8328\u5e0c\u5c14\u534a\u5f84\uff0c\u5b83\u5b8c\u5168\u7531\u5b83\u7684\u8d28\u91cf\u51b3\u5b9a\u3002\u4f46\u5982\u679c\u4f60\u52a0\u5165\u989d\u5916\u7684\u6210\u5206--\u6bd4\u5982\u4e00\u70b9\u6697\u80fd\u91cf(\u6216\u5b87\u5b99\u5e38\u6570)\uff0c\u8fd9\u662f\u6211\u4eec\u73b0\u5b9e\u5b87\u5b99\u4e2d\u5b58\u5728\u7684\u4e00\u79cd\u80fd\u91cf\u5f62\u5f0f--\u4e8b\u60c5\u5c31\u4f1a\u53d1\u751f\u5fae\u5c0f\u4f46\u91cd\u8981\u7684\u53d8\u5316\u3002\n\u8fd9\u79cd\u5411\u5916\u7684\u201c\u63a8\u52a8\u201d\u4f1a\u5bfc\u81f4\u89c6\u754c\u5916\u7684\u5b87\u5b99\u81a8\u80c0\uff0c\u4f46\u4e5f\u4f1a\u5bfc\u81f4\u89c6\u754c\u7684\u4f4d\u7f6e\u7a0d\u5fae\u5411\u5916\u63a8\u4e00\u70b9\uff0c\u5426\u5219\u5b83\u5c31\u4f1a\u5728\u4e00\u4e2a\u7a7a\u65f7\u7684\u5b87\u5b99\u4e2d\u3002\u201c\u3002\u8fd9\u79cd\u5dee\u5f02\u6781\u5176\u5fae\u5c0f\uff0c\u4e0e\u6211\u4eec\u5b87\u5b99\u4e2d\u53d1\u73b0\u7684\u80fd\u91cf\u548c\u8d28\u91cf\u7684\u73b0\u5b9e\u503c\u76f8\u6bd4\u5fae\u4e4e\u5176\u5fae\uff0c\u4f46\u5b83\u8bf4\u660e\u4e86\u4e00\u70b9\uff1a\u5b87\u5b99\u7684\u81a8\u80c0\u786e\u5b9e\u5f71\u54cd\u4e86\u5176\u4e2d\u7684\u7269\u4f53\uff0c\u4f46\u5b83\u662f\u901a\u8fc7\u6539\u53d8\u5b83\u4eec\u7684\u201c\u5e73\u8861\u201d\u5927\u5c0f\u7684\u503c\u6765\u5b9e\u73b0\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5bfc\u81f4\u5b83\u4eec\u81a8\u80c0\u6765\u5b9e\u73b0\u7684\u3002\n\u6211\u4eec\u4ecd\u7136\u4e0d\u77e5\u9053\u5730\u7403\u4e0a\u7684\u7a7a\u95f4--\u4ece\u539f\u5b50\u4e2d\u7684\u7a7a\u95f4\u5230\u884c\u661f\u5468\u56f4\u7684\u7a7a\u95f4\uff0c\u518d\u5230\u6574\u4e2a\u94f6\u6cb3\u7cfb\u7684\u7a7a\u95f4--\u662f\u5426\u6b63\u5728\u5f71\u54cd\u5176\u4e2d\u7269\u4f53\u5927\u5c0f\u7684\u5e73\u8861\u503c\u3002\u6211\u4eec\u6d4b\u91cf\u7269\u4f53\u7684\u672c\u6765\u9762\u76ee\uff0c\u5b87\u5b99\u81a8\u80c0\u53ef\u80fd\u4ea7\u751f\u7684\u4efb\u4f55\u5dee\u5f02\u90fd\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u80fd\u591f\u6d4b\u91cf\u5b83\u4eec\u7684\u7cbe\u786e\u5ea6\u3002\u81a8\u80c0\u5b87\u5b99\u7684\u5f71\u54cd\u53ea\u662f\u5f00\u59cb\u51fa\u73b0\u5728\u4f60\u53ef\u80fd\u8ba4\u4e3a\u662f\u8fc7\u6e21\u533a\u7684\u5730\u65b9\uff1a\u5728\u975e\u5e38\u63a5\u8fd1\u88ab\u675f\u7f1a\u548c\u672a\u88ab\u675f\u7f1a\u7684\u8fb9\u754c\u7684\u7ed3\u6784\u7684\u90ca\u533a\u3002\n\u4f46\u6211\u4eec\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u539f\u5b50\u3001\u4eba\u7c7b\u3001\u884c\u661f\u3001\u6052\u661f\u548c\u661f\u7cfb\u90fd\u4e0d\u4f1a\u968f\u7740\u5b87\u5b99\u7684\u81a8\u80c0\u800c\u81a8\u80c0\u3002\u81a8\u80c0(\u6216\u6536\u7f29)\u7684\u5b87\u5b99\u5bf9\u5df2\u7ecf\u88ab\u675f\u7f1a\u7684\u7ed3\u6784\u7684\u552f\u4e00\u5f71\u54cd\u662f\u7565\u5fae\u6539\u53d8\u5b83\u4eec\u7684\u5927\u5c0f\uff1a\u901a\u8fc7\u589e\u52a0(\u6216\u51cf\u5c11)\u81a8\u80c0\u7a7a\u95f4\u6240\u5e26\u6765\u7684\u9644\u52a0\u6548\u5e94\u6765\u589e\u52a0(\u6216\u51cf\u5c11)\u5b83\u4eec\u7684\u5927\u5c0f\u3002\u6b63\u5982\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u51ef\u8482\u00b7\u9ea6\u514b(Katie Mack)\u6240\u8bf4\uff1a\n\u201c\u5b87\u5b99\u5728\u6269\u5c55\uff0c\u5c31\u50cf\u4f60\u7684\u5934\u8111\u5728\u6269\u5c55\u4e00\u6837\u3002\u5b83\u5e76\u6ca1\u6709\u6269\u5c55\u6210\u4efb\u4f55\u4e1c\u897f\uff1b\u4f60\u53ea\u662f\u53d8\u5f97\u4e0d\u90a3\u4e48\u5bc6\u96c6\u4e86\u3002\n\u5728\u6211\u7684\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u67e5\u770b\uff0c\u6216\u8005\u5728\u8fd9\u91cc\u67e5\u770b\u6211\u7684\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\u3002", "note_en": "One of the most revolutionary discoveries of the past century was the fact that the Universe is not eternally static and unchanging, but rather is actively in the process of expanding. Some 13.8 billion years ago, in the earliest stages of the hot Big Bang, our observable Universe was no bigger than the size of a city block, and may have been as small as a soccer ball; today, it extends for more than 46 billion light-years in all directions. If the Universe is expanding, then what does that means for the objects in it? Are galaxies expanding? What about stars, planets, human beings, or even atoms themselves? That\u2019s what Harald Hick wants to know, writing in to ask:\n  \u201cIn the \u2018raisin bread\u2019 model of the expanding Universe, do the raisins expand as well? Which means, do all atoms grow in size as the universe is expanding?\u201d\n   It\u2019s a deep question, and its answer might not be what you expect. Here\u2019s how to figure it out.\n      When Einstein first put forth his new theory of relativity, it forever changed how we think of space and time. Space isn\u2019t fixed like a three-dimensional grid, with universally agreed-upon distances between any two points. Nor is time a continuously flowing entity, where you can sync up your clocks, move anywhere you like, and be confident that your clock reads the same as anyone else\u2019s. Instead, we experience space and time as relative: your motion through space affects your motion through time, and vice versa.\n    This was the core idea behind Special Relativity, which led us to discard our older ideas of \u201cabsolute space\u201d and \u201cabsolute time,\u201d instead replacing them with the notion of spacetime. As you move through space relative to another observer, your clocks appear to run differently, according to Einstein\u2019s laws. Special Relativity works perfectly for all observers whether they\u2019re at rest or in motion, and represented an enormous leap in understanding our Universe over Newton\u2019s original laws of motion.\n      But this idea, brilliant though it was, didn\u2019t include gravity. The old Newtonian picture of gravity was inherently tied to absolute notions of distances and times, and was incompatible with the notion of spacetime. It took over a decade for Einstein to bring gravity into the fold, taking us from Special Relativity to General Relativity: incorporating matter and energy into the equation.\n  Instead of the flat spacetime of Special Relativity, the presence of matter and energy allowed for space-and-time to be dynamic entities. No longer bound to be static, the Universe could expand or contract, depending on what was in it. Matter and energy told spacetime how to curve, and that curved spacetime dictated how matter and energy would move.\n    This relationship, first put forth more than 100 years ago, has been tested by an enormous suite of experiments and observations, with Einstein\u2019s theory passing each and every one. General Relativity applies not only to the gravity we find on Earth and elsewhere in the Solar System, but on vast cosmic scales that dwarf our own: galaxies, clusters of galaxies, and even to the entire Universe itself.\n  This last part is particularly fascinating: if we take a Universe that\u2019s (on average) uniformly filled with matter and/or energy \u2014 including a combination of different forms of matter and/or energy \u2014 that Universe must either expand or contract. It cannot remain in a static state for more than an instant, even if it starts off in one. In 1922, Alexander Friedmann demonstrated this, deriving from Einstein\u2019s theory the Friedmann equations: the equations that govern the expansion of the Universe.\n    The very next year, Edwin Hubble measured the distance to Andromeda, determining that this \u201cspiral nebula\u201d was in fact its own galaxy far beyond and outside the Milky Way. Subsequently, we measured distances to large numbers of galaxies while also independently obtaining measurements of the light coming from them. What we found, almost universally, was the following.\n    That this was true even though the stars inside the more distant galaxies were, on average, intrinsically \u201cbluer\u201d than the stars we seen in nearby galaxies.\n  The explanation for this was consistent with the idea that light \u2014 emitted by galaxies with the same frequencies and wavelengths that light is emitted by here in our own galaxy \u2014 was being redshifted by the expansion of the Universe.\n    Alternative explanations such as \u201ctired light\u201d disagreed with the observations, leaving only those explanations that included the expanding Universe as viable. When taken all together, there was no escaping that conclusion: the Universe itself was expanding, and that expansion was responsible for the observed redshift of light that originated from far away.\n    While many popular conceptions show the expanding Universe as balloon-like, this analogy has its flaws. For one, our Universe has three dimensions of space (and one of time, making up a four-dimensional spacetime), not two. A balloon has a meaningful \u201ccenter\u201d where putting air into it causes the two-dimensional surface to expand. Contrariwise, our Universe has no well-defined center, but, in accord with Einstein\u2019s relativity, depends on the observer.\n  Instead, perhaps the best analogy is a leavening ball of dough with raisins in it: raisin bread. If you imagined this ball of dough as the fabric of (our three-dimensional) space and the raisins as objects within it, you could identify any \u201craisin\u201d as yourself: the observer. From your perspective, the raisins would appear to move away from you, with the more distant raisins appearing to recede more rapidly and severely than the closer ones. In reality, the raisins themselves aren\u2019t moving relative to the space they occupy, but rather the space between those raisins is expanding, causing their emitted light to redshift before reaching our eyes.\n    But what about the objects that the raisins themselves represent? Does the space that\u2019s inside them expand as well? We can do a calculation to determine what that expansion would look like.\n  The expansion rate of the Universe, as we measure it (even with our  current ongoing controversies), is somewhere around 70 km/s/Mpc, which means that for every Megaparsec away a \u201craisin\u201d is, we\u2019ll see it appear to recede at 70 km/s. Unfortunately, Megaparsecs are enormous: about 3.3 million light-years. If we scaled that down to the size of planet Earth \u2014 which is more like 12,700 km in size \u2014 we\u2019d expect to see the Earth expanding by about 0.1 millimeters-per-second. Over time, that would add up significantly, and we\u2019d notice.\n  Our detailed measurements show that, at least on Earth, objects aren\u2019t expanding. Even with the enormous scale of the Universe and the relatively tiny size of the planet and the objects on it, it\u2019s possible to do experiments to tell. The LIGO gravitational wave detectors are sensitive to changes in distance as small as less than 0.1% the width of a proton. Quantum mechanical experiments can measure the properties of atoms down to precisions of 1-part-in-billions, and precise measurements from decades or even a century apart can be compared. The answer is in, and we know: neither the Earth nor the atoms on it are changing in this fashion over time.\n    This is expected if you think about what the expanding Universe is working against: actual forces. On the one hand, we have the forces between objects: the electromagnetic, gravitational, or any other fundamental force you\u2019d like to consider. If the Universe weren\u2019t expanding at all, you\u2019d be able to calculate the size of anything \u2014 atoms, the Earth, the galaxy, a group/cluster of galaxies etc. \u2014 just by understanding the physical forces at play and the dynamics of the particles/objects involved.\n  In these systems, and in fact in  any bound system (regardless of what force binds it), the forces involved cause dynamics that are greater in magnitude than the expanding Universe can cause. It\u2019s an excellent approximation to state what you\u2019ll frequently hear physicists say: that it\u2019s only the space between bound objects that expands. For bound objects themselves, the forces at play overwhelm the dynamics of the otherwise expanding Universe, and the expansion is overcome.\n    But that doesn\u2019t mean the expanding Universe isn\u2019t playing any role at all. If we consider a point mass in an otherwise empty, non-expanding Universe, it would behave as an uncharged, non-rotating black hole: a Schwarzschild black hole. There would be an event horizon of a fixed radius: the Schwarzschild radius, which is solely determined by its mass. But if you throw in an additional ingredient \u2014 such as a bit of dark energy (or a cosmological constant), one of the forms of energy present in our realistic Universe \u2014  things change in a slight but important way.\n  That outward \u201cpush\u201d causes the Universe outside the event horizon to expand, but it also causes the location of the event horizon to be pushed out just a little bit over where it would be in an otherwise empty Universe. The difference is extremely tiny, imperceptible with realistic values for the energies and masses found in our Universe, but it illustrates an point: the expansion of the Universe does affect the objects within it, but it does so by changing the value of their \u201cequilibrium\u201d size, not by causing them to expand.\n    We still don\u2019t know whether the space that\u2019s here on Earth \u2014 from the space in our atoms to the space surrounding our planet to the space throughout our galaxy \u2014 is affecting the equilibrium values of the size of the objects within it. We measure objects as they are, and any differences that may arise from the expansion of the Universe do not affect what we measure at the precision we\u2019re capable of measuring them. The effects of the expanding Universe only begin appearing in what you might consider a transition zone: at the outskirts of structures that are very close to the border of being bound versus unbound.\n  But we can be certain that atoms, humans, planets, stars, and galaxies aren\u2019t expanding along with the expansion of the Universe. The only effect that the expanding (or contracting) Universe can have on already-bound structures is to slightly change their sizes: by increasing (or decreasing) it from the additional effect introduced by expanding space. As astrophysicist Katie Mack  so beautifully put it:\n  \u201cThe Universe is expanding the way your mind is expanding. It&#39;s not expanding into anything; you&#39;re just getting less dense.\u201d\n Follow me on\u00a0 Twitter.\u00a0 Check out\u00a0my\u00a0 website\u00a0or\u00a0some of my other work\u00a0 here.", "posttime": "2020-11-07 11:25:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u81a8\u80c0,expanding", "title": "\u5982\u679c\u5b87\u5b99\u5728\u81a8\u80c0\uff0c\u6211\u4eec\u4e5f\u5728\u81a8\u80c0\u5417\uff1f", "title_en": "If the universe is expanding, are we expanding too?", "transed": 1, "url": "https://www.forbes.com/sites/startswithabang/2020/11/06/ask-ethan-if-the-universe-is-expanding-are-we-expanding-too/", "via": "", "real_tags": ["\u81a8\u80c0", "expanding"]}, {"category": "", "categoryclass": "", "imagename": "be7d2baa832a8161964c509f817dab01.png", "infoid": 1033648, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u4eba\u6e38\u620f\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u88ab\u7528\u4f5c\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u7684\u8bd5\u9a8c\u5e8a\uff0c\u88ab\u6070\u5f53\u5730\u79f0\u4e3a\u4eba\u5de5\u667a\u80fd\u4e2d\u7684\u679c\u8747\u3002\u4f20\u7edf\u4e0a\uff0c\u7814\u7a76\u4eba\u5458\u4e00\u76f4\u4e13\u6ce8\u4e8e\u4f7f\u7528\u77e5\u540d\u6e38\u620f\u6765\u6784\u5efa\u5f3a\u5927\u7684\u4ee3\u7406\u3002\u7136\u800c\uff0c\u901a\u8fc7\u63cf\u8ff0\u6e38\u620f\u53ca\u5176\u62d3\u6251\u7ed3\u6784\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u8fd9\u4e00\u8fdb\u5c55\u3002\u89e3\u51b3\u540e\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u4fc3\u8fdb\u5bf9\u4ee3\u7406\u4eba\u7684\u7406\u89e3\uff0c\u5e76\u6709\u52a9\u4e8e\u786e\u5b9a\u4ee3\u7406\u4eba\u4e0b\u4e00\u6b65\u5e94\u8be5\u4ee5\u4ec0\u4e48\u6e38\u620f\u4e3a\u76ee\u6807\uff0c\u4f5c\u4e3a\u5176\u57f9\u8bad\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u7f51\u7edc\u6d4b\u91cf\u5e94\u7528\u4e8e\u5927\u578b\u6e38\u620f\u7684\u54cd\u5e94\u56fe\uff0c\u4ece\u800c\u521b\u5efa\u6e38\u620f\u666f\u89c2\uff0c\u91cf\u5316\u4e0d\u540c\u5927\u5c0f\u548c\u7279\u5f81\u7684\u6e38\u620f\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u4eec\u5728\u4ece\u89c4\u8303\u535a\u5f08\u5230\u590d\u6742\u7684\u7ecf\u9a8c\u535a\u5f08\u7b49\u9886\u57df\u9610\u8ff0\u4e86\u6211\u4eec\u7684\u53d1\u73b0\uff0c\u6355\u6349\u4e86\u8bad\u7ec3\u6709\u7d20\u7684\u4ee3\u7406\u4eba\u76f8\u4e92\u7ade\u4e89\u7684\u8868\u73b0\u3002\u6211\u4eec\u7684\u7ed3\u679c\u5728\u4e00\u4e2a\u793a\u8303\u4e2d\u8fbe\u5230\u9876\u5cf0\uff0c\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u4ea7\u751f\u65b0\u7684\u6709\u8da3\u7684\u6e38\u620f\uff0c\u5305\u62ec\u4ece\u73b0\u5b9e\u4e16\u754c\u6e38\u620f\u4e2d\u5408\u6210\u7684\u7ecf\u9a8c\u6e38\u620f\u7684\u6df7\u5408\u3002\n\u6e38\u620f\u5728\u5f00\u53d1\u5b66\u4e60\u7b97\u6cd5\u548c\u8861\u91cf\u4eba\u5de5\u667a\u80fd(AI)1\u30012\u30013\u30014\u7684\u8fdb\u5c55\u65b9\u9762\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002\u5c24\u5176\u662f\u591a\u4eba\u6e38\u620f\u5728AI\u7814\u7a76\u4e2d\u53d1\u6325\u4e86\u5173\u952e\u4f5c\u7528\uff0c\u5e76\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u7814\u7a76\uff0c\u4ece\u535a\u5f08\u8bba\u4e2d\u7684\u62bd\u8c61\u57fa\u51c6\uff0c\u5230\u6d41\u884c\u7684\u68cb\u7c7b\u6e38\u620f\uff0c\u5982\u56fd\u9645\u8c61\u68cb5\u30016\u548c\u56f4\u68cb7(\u88ab\u79f0\u4e3aAI Research 8\u4e2d\u7684\u679c\u8747)\uff0c\u5230\u5b9e\u65f6\u6218\u7565\u6e38\u620f\uff0c\u5982StarCraft II 9\u548cDota 2 10\u3002\u603b\u7684\u6765\u8bf4\uff0cAI\u7814\u7a76\u4e3b\u8981\u4fa7\u91cd\u4e8e\u3002\u6211\u4eec\u628a\u8fd9\u79f0\u4e3a\u653f\u7b56\u95ee\u9898\uff0c\u8fd9\u9700\u8981\u5bfb\u627e\u8d85\u4eba\u6c34\u5e73\u7684\u4eba\u5de5\u667a\u80fd\u6027\u80fd\u3002\u5c3d\u7ba1\u53d6\u5f97\u4e86\u8fd9\u4e00\u8fdb\u5c55\uff0c\u4f46\u8fd1\u5e74\u676511\u300112\u5bf9\u4efb\u52a1\u7406\u8bba(\u5bf9AI\u4efb\u52a1\u8fdb\u884c\u5206\u7c7b\u3001\u8868\u5f81\u548c\u5206\u89e3\u7684\u6846\u67b6)\u7684\u9700\u6c42\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u81ea\u7136\uff0c\u7406\u89e3\u6e38\u620f\u7a7a\u95f4\u7684\u6280\u672f\u53ef\u80fd\u6709\u5229\u4e8e\u672a\u6765AI\u5b9e\u4f5312\u300113\u7684\u7b97\u6cd5\u5f00\u53d1\u3002\u7406\u89e3\u548c\u5206\u89e3\u6e38\u620f\u7684\u8868\u5f81\u7279\u5f81\u53ef\u4ee5\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e6014\u88ab\u7528\u4e8e\u4ee3\u7406\u7684\u4e0b\u6e38\u8bad\u7ec3\uff0c\u8be5\u8bfe\u7a0b\u5b66\u4e6014\u5bfb\u6c42\u4f7f\u4ee3\u7406\u80fd\u591f\u5b66\u4e60\u65e5\u76ca\u590d\u6742\u7684\u4efb\u52a1\u3002\n\u4e0e\u8bbe\u8ba1\u8fd9\u6837\u7684\u4efb\u52a1\u7406\u8bba\u76f8\u5173\u7684\u6838\u5fc3\u6311\u6218\u6700\u8fd1\u88ab\u79f0\u4e3a\u95ee\u9898\u95ee\u9898\uff0c\u88ab\u5b9a\u4e49\u4e3a\u201c\u751f\u6210\u5927\u91cf\u6709\u8da3\u7684\u81ea\u9002\u5e94\u73af\u5883\u4ee5\u652f\u6301\u7814\u7a76\u7684\u5de5\u7a0b\u95ee\u9898\u201d15\u3002\u4e0e\u95ee\u9898\u95ee\u9898\u76f8\u5173\u7684\u7814\u7a76\u670930\u591a\u5e74\u7684\u4e30\u5bcc\u5386\u53f2\uff0c\u5305\u62ec\u524d\u8ff0\u5173\u4e8e\u4efb\u52a1\u7406\u8bba11\u300112\u300116\u3001\u7a0b\u5e8f\u5316\u751f\u6210\u7684\u89c6\u9891\u6e38\u620f\u7279\u5f8117\u300118\u300119\u3001\u7528\u4e8e\u4e00\u822c\u6e38\u620f\u7684\u6e38\u620f\u548c\u89c4\u5219\u96c6\u7684\u751f\u621020\u300121\u300122\u300123\u300124\u300125\u300126\u4ee5\u53ca\u7a0b\u5e8f\u6027\u5185\u5bb9\u751f\u6210\u6280\u672f27\u300128\u300129\u300130\u7684\u5de5\u4f5c\u3002\u6211\u4eec\u8bf7\u8bfb\u8005\u53c2\u9605\u8865\u5145\u8bf4\u660e1\uff0c\u4ee5\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e9b\u548c\u76f8\u5173\u5de5\u4f5c\u3002\u5176\u4e2d\u51e0\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u9886\u57df\u80cc\u540e\u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f\uff1a\u662f\u4ec0\u4e48\u8ba9\u6e38\u620f\u53d8\u5f97\u8db3\u591f\u6709\u8da3\uff0c\u8ba9\u4eba\u5de5\u667a\u80fd\u7279\u5de5\u5b66\u4f1a\u73a9\uff1f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u9700\u8981\u80fd\u591f\u523b\u753b\u6e38\u620f\u62d3\u6251\u7ed3\u6784\u7684\u6280\u672f\uff0c\u8fd9\u662f\u672c\u6587\u611f\u5174\u8da3\u7684\u4e3b\u9898\u3002\u6211\u4eec\u7279\u522b\u5173\u6ce8\u591a\u4eba\u6e38\u620f(\u5373\u6d89\u53ca\u591a\u4e2a\u4ee3\u7406\u76f8\u4e92\u4f5c\u7528\u7684\u6e38\u620f)\u7684\u7279\u5f81\uff0c\u6b64\u540e\u4f7f\u7528\u6e38\u620f\u7684\u7b80\u5199\u6765\u6307\u4ee3\u8fd9\u4e00\u7c7b\u3002\n\u672c\u6587\u7684\u76ee\u6807\u662f\u5efa\u7acb\u5de5\u5177\uff0c\u4f7f\u4eba\u4eec\u80fd\u591f\u53d1\u73b0\u6e38\u620f\u4e0a\u7684\u62d3\u6251\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u5426\u6709\u8da3\uff1b\u6211\u4eec\u5728\u8fd9\u91cc\u5e76\u4e0d\u5bfb\u6c42\u56de\u7b54\u6709\u8da3\u7684\u95ee\u9898\uff0c\u5c3d\u7ba1\u8fd9\u6837\u7684\u5de5\u5177\u5305\u53ef\u80fd\u5bf9\u540e\u7eed\u7684\u7814\u7a76\u6709\u7528\u3002\u5f53\u7136\uff0c\u4ece\u4ee5\u4eba\u4e3a\u672c\u7684\u6e38\u620f\u8bbe\u8ba1\u3001\u53d1\u5c55\u6027\u5b66\u4e60\u3001\u8bfe\u7a0b\u5b66\u4e60\u3001\u4eba\u5de5\u667a\u80fd\u57f9\u8bad\u7b49\u89d2\u5ea6\u6765\u770b\uff0c\u6e38\u620f\u6709\u8da3\u7684\u539f\u56e0\u6709\u5f88\u591a\u3002\u6211\u4eec\u540e\u6765\u7684\u5b9e\u9a8c\u4e0e\u67e5\u5185\u65af\u57fa\u7b49\u4eba\u6700\u8fd1\u7684\u5de5\u4f5c\u8054\u7cfb\u5728\u4e00\u8d77\u300237\uff0c\u5b83\u4e13\u95e8\u4ece\u4eba\u5de5\u667a\u80fd\u8bad\u7ec3\u7684\u89d2\u5ea6\u8c03\u67e5\u4e86\u8ba9\u6e38\u620f\u53d8\u5f97\u6709\u8da3\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u4e5f\u8003\u8651\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u9075\u5faa\u4e86\u67e5\u5185\u65af\u57fa\u7b49\u4eba\u7684\u8da3\u5473\u6027\u7279\u5f81\u300237\uff0c\u5b83\u5b9a\u4e49\u4e86\u6240\u8c13\u7684\u6280\u80fd\u6e38\u620f\uff0c\u5438\u5f15\u7ecf\u7eaa\u4eba\u7684\u539f\u56e0\u662f\uff1a(I)\u8fdb\u6b65\u7684\u6982\u5ff5\uff1b(Ii)\u8868\u73b0\u7c7b\u4f3c\u7684\u591a\u6837\u5316\u6e38\u620f\u98ce\u683c\u7684\u53ef\u7528\u6027\u3002\u7a0d\u540e\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u901a\u8fc7\u6211\u4eec\u7684\u65b9\u6cd5\u53d1\u73b0\u7684\u6e38\u620f\u96c6\u7fa4\u662f\u5982\u4f55\u4e0e\u8fd9\u79cd\u8da3\u5473\u6027\u6982\u5ff5\u76f8\u4e00\u81f4\u7684\u3002\u6211\u4eec\u65b9\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u597d\u5904\u662f\u5b83\u540c\u6837\u9002\u7528\u4e8e\u5bf9\u6297\u6027\u535a\u5f08\u548c\u5408\u4f5c\u6027\u535a\u5f08\u3002\u6b64\u5916\uff0c\u867d\u7136\u7531\u4e8e\u90a3\u4e9b\u7279\u5b9a\u5b9e\u9a8c\u4e2d\u9009\u62e9\u7684\u652f\u4ed8\u53c2\u6570\uff0c\u6211\u4eec\u7a0d\u540e\u7ed9\u51fa\u7684\u7a0b\u5e8f\u535a\u5f08\u7ed3\u6784\u751f\u6210\u7ed3\u679c\u662f\u76ee\u6807\u96f6\u548c\u535a\u5f08\uff0c\u4f46\u5b83\u4eec\u5f88\u5bb9\u6613\u6269\u5c55\u5230\u4e00\u822c\u548c\u535a\u5f08\u3002\n\u5982\u4f55\u4ece\u62d3\u6251\u4e0a\u5206\u6790\u6e38\u620f\u5462\uff1f\u4eba\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u6e38\u620f\u7684\u7279\u5f81\u662f\u901a\u8fc7\u53ef\u7528\u7b56\u7565\u7684\u6570\u91cf\u3001\u53c2\u4e0e\u7684\u73a9\u5bb6\u7b49\u5ea6\u91cf\u6765\u91cf\u5316\u7684\n\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u56fe\u8bba\u5de5\u5177\u5305\uff0c\u5b83\u6709\u52a9\u4e8e\u5206\u6790\u89c4\u8303\u548c\u5927\u89c4\u6a21\u7684\u6e38\u620f\uff0c\u63d0\u4f9b\u5bf9\u5b83\u4eec\u7684\u76f8\u5173\u62d3\u6251\u7ed3\u6784\u7684\u6d1e\u5bdf\uff0c\u6839\u636e\u5b83\u4eec\u7684\u9ad8\u5c42\u6218\u7565\u4e92\u52a8\u3002\u524d\u63d0\u535a\u5f08\u8bba\u80cc\u666f\u548c\u6280\u672f\u7ec6\u8282\u5728\u201c\u65b9\u6cd5\u201d\u4e00\u8282\u4e2d\u63d0\u4f9b\uff0c\u76f8\u5173\u5de5\u4f5c\u548c\u8865\u5145\u8bf4\u660e1\u4e2d\u5bf9\u76f8\u5173\u5de5\u4f5c\u8fdb\u884c\u4e86\u5145\u5206\u8ba8\u8bba\u3002\n\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u603b\u7ed3\u5982\u4e0b\u3002\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u7684\u5de5\u5177\u5305\u6765\u63cf\u8ff0\u4e00\u4e9b\u6e38\u620f\u7684\u7279\u5f81\uff0c\u9996\u5148\u5206\u6790\u5177\u6709\u826f\u597d\u5b9a\u4e49\u7684\u7ed3\u6784\u7684\u6fc0\u52b1\u4f8b\u5b50\u548c\u89c4\u8303\u6e38\u620f\uff0c\u7136\u540e\u6269\u5c55\u5230\u66f4\u5927\u89c4\u6a21\u7684\u7ecf\u9a8c\u6e38\u620f\u6570\u636e\u96c6\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8f83\u5927\u7684\u6e38\u620f\uff0c\u6211\u4eec\u4f9d\u8d56\u7ecf\u9a8c\u535a\u5f08\u8bba\u5206\u679067\uff0c68\uff0c\u5176\u4e2d\u6211\u4eec\u4f7f\u7528\u4e00\u7ec4\u6837\u672c\u653f\u7b56\u6765\u63cf\u8ff0\u6f5c\u5728\u7684\u6e38\u620f\u3002\u867d\u7136\u7ecf\u9a8c\u535a\u5f08\u8bba\u7ed3\u679c\u53d7\u5230\u7528\u4e8e\u751f\u6210\u8fd9\u4e9b\u7ed3\u679c\u7684\u653f\u7b56\u7684\u5236\u7ea6\uff0c\u4f46\u6211\u4eec\u4f9d\u8d56\u4e8e\u8bbe\u8ba1\u7684\u62bd\u6837\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u65e8\u5728\u6355\u83b7\u6bcf\u4e2a\u6e38\u620f\u4e2d\u7684\u5404\u79cd\u4ea4\u4e92\uff0c\u5e76\u968f\u540e\u8fdb\u884c\u654f\u611f\u6027\u5206\u6790\uff0c\u4ee5\u9a8c\u8bc1\u7ed3\u679c\u7684\u7a33\u5065\u6027\u3002\u6211\u4eec\u8bba\u8bc1\u4e86\u4e0e\u535a\u5f08\u76f8\u5173\u7684\u56fe\u7684\u590d\u6742\u6027\u4e0e\u6c42\u89e3\u535a\u5f08\u672c\u8eab\u7684\u590d\u6742\u6027\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u5728\u8865\u5145\u8bf4\u660e2\u4e2d\uff0c\u6211\u4eec\u5bf9\u71672\u4e2a\u2009\u00d7\u20092\u6e38\u620f\u7684\u5206\u7c7b\u57fa\u7ebf\u65b9\u6cd5\u5bf9\u6211\u4eec\u63d0\u51fa\u7684\u65b9\u6cd5\u8fdb\u884c\u4e86\u8bc4\u4f3038\u3002\u6700\u540e\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u8fd9\u4e2a\u5de5\u5177\u5305\u5982\u4f55\u88ab\u7528\u6765\u81ea\u52a8\u751f\u6210\u6709\u8da3\u7684\u6e38\u620f\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u8fd9\u4e9b\u7ed3\u6784\u53ef\u4ee5\u968f\u540e\u7528\u4e8e\u8bad\u7ec3AI\u4ee3\u7406\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u9f13\u821e\u4eba\u5fc3\u7684\u4f8b\u5b50\u5f00\u59cb\uff0c\u4ee5\u5de9\u56fa\u76f4\u89c9\uff0c\u5e76\u89e3\u91ca\u6211\u4eec\u7684\u56fe\u8bba\u5de5\u5177\u5305\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4f7f\u7528\u5728\u73a9\u5bb6\u6536\u76ca\u4e2d\u5177\u6709\u7b80\u5355\u53c2\u6570\u7ed3\u6784\u7684\u6e38\u620f\u7c7b\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8003\u8651\u4e09\u5927\u7c7b\u6e38\u620f(\u5982\u8865\u5145\u65b9\u6cd51\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u7684\u90a3\u6837)\uff1a\u7b56\u7565\u5177\u6709\u660e\u786e\u7684\u4f20\u9012\u987a\u5e8f\u7684\u6e38\u620f(\u56fe2a)\uff1b\u7b56\u7565\u5177\u6709\u5faa\u73af\u7ed3\u6784\u7684\u6e38\u620f\uff0c\u5176\u4e2d\u9664\u6700\u7ec8\u7b56\u7565\u5916\uff0c\u6240\u6709\u7b56\u7565\u90fd\u662f\u76f8\u4e92\u4f20\u9012\u7684(\u56fe2d)\uff1b\u4ee5\u53ca\u5177\u6709\u968f\u673a(\u6216\u6ca1\u6709\u660e\u786e\u7684\u5e95\u5c42)\u7ed3\u6784\u7684\u6e38\u620f(\u56fe2g)\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u901a\u8fc7\u6240\u63d0\u51fa\u7684\u5206\u6790\uff0c\u5177\u6709\u5171\u4eab\u5e95\u5c42\u7ed3\u6784\u7684\u6e38\u620f\u7684\u6838\u5fc3\u7279\u5f81\u88ab\u6062\u590d\u3002\nA\u3001d\u548cg\u5206\u522b\u53ef\u89c6\u5316\u5177\u6709\u4f20\u9012\u3001\u5faa\u73af\u548c\u968f\u673a\u7ed3\u6784\u7684\u535a\u5f08\u5b9e\u4f8b\u7684\u6536\u76ca\u3002\u6bcf\u4e2a\u793a\u4f8b\u6e38\u620f\u7531\u4e24\u4e2a\u73a9\u5bb6\u7ec4\u6210\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u670910\u4e2a\u7b56\u7565(\u5e26\u6709\u652f\u4ed8\u884c\u548c\u5217\u6807\u7b7e\uff0c{s 0\uff0c\u2026\u3002\uff0c(9)\uff0c\u6307\u793a\u7b56\u7565)\u3002\u5c3d\u7ba1\u5728\u6240\u793a\u7684\u6bcf\u7c7b\u535a\u5f08\u4e2d\u53ef\u80fd\u5b58\u5728\u8bb8\u591a\u6536\u76ca\u53d8\u5316\uff0c\u4f46\u6bcf\u4e00\u7c7b\u535a\u5f08\u90fd\u5171\u4eab\u5206\u522b\u5728b\u3001e\u548ch\u4e2d\u6240\u793a\u7684\u57fa\u7840\u6536\u76ca\u7ed3\u6784\u3002\u6b64\u5916\uff0c\u6536\u76ca\u7684\u53d8\u5316\u53ef\u4ee5\u663e\u8457\u5730\u5f71\u54cd\u8fd9\u4e9b\u535a\u5f08\u7684\u6c42\u89e3\u96be\u5ea6(\u5373\uff0c\u627e\u5230\u7eb3\u4ec0\u5747\u8861)\uff0c\u5982c\uff0cf\uff0ci\u4e2d\u6240\u793a\u3002\n\u8fd9\u4e9b\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ef\u89c6\u5316\u5bf9\u5e94\u4e8e\u76f8\u5e94\u7c7b\u522b\u7684\u6e38\u620f\u76844\u4e2a\u5b9e\u4f8b\u7684\u6536\u76ca\uff0c\u6bcf\u4e2a\u6e38\u620f\u6d89\u53ca\u6bcf\u4e2a\u73a9\u5bb610\u4e2a\u7b56\u7565\uff1b\u66f4\u5177\u4f53\u5730\uff0c\u5982\u679c\u73a9\u5bb6\u5206\u522b\u4f7f\u7528\u7b56\u7565si\u548csj(\u5206\u522b\u5bf9\u5e94\u4e8e\u6bcf\u4e2a\u8d62\u5229\u8868\u7684\u7b2ci\u548cj\u884c\u548c\u5217)\uff0c\u5219\u56fe2a\u3001d\u548cg\u4e2d\u53ef\u89c6\u5316\u7684\u6bcf\u4e2a\u77e9\u9635\u7684\u6761\u76eeM(si\uff0csj)\u91cf\u5316\u4e86\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u6536\u5230\u7684\u6536\u76ca\u3002\u5c3d\u7ba1\u5728\u8fd9\u91cc\u4f8b\u4e3e\u7684\u6e38\u620f\u5b9e\u4f8b\u4e2d\u6536\u76ca\u7684\u5dee\u5f02\u5f88\u660e\u663e\uff0c\u4f46\u6bcf\u4e2a\u6e38\u620f\u672c\u8d28\u4e0a\u5171\u4eab\u901a\u8fc7\u5206\u522b\u5728\u56fe2b\u3001e\u548ch\u4e2d\u91cd\u65b0\u6392\u5e8f\u5176\u7b56\u7565\u800c\u66b4\u9732\u7684\u6536\u76ca\u7ed3\u6784\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u540e\u4e00\u7ec4\u56fe\u4e2d\u7684\u6536\u76ca\u7684\u53ef\u89c6\u8868\u793a\u7b80\u660e\u5730\u8868\u5f81\u4e86\u8fd9\u4e9b\u6e38\u620f\u7c7b\u522b\u5185\u7684\u6218\u7565\u4ea4\u4e92\u7684\u4e3b\u5e72\uff0c\u5c3d\u7ba1\u5728\u53ef\u89c6\u5316\u7684\u5404\u4e2a\u5b9e\u4f8b\u4e2d\u4e0d\u662f\u7acb\u5373\u660e\u663e\u7684\u3002\n\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5728\u8fd9\u4e9b\u6e38\u620f\u4e2d\u5b66\u4e60\u6709\u7528\u7684\u6df7\u5408\u7b56\u7565\u7684\u590d\u6742\u6027\u4e0e\u8fd9\u79cd\u7ed3\u6784\u6027\u652f\u67f1\u5bc6\u5207\u76f8\u5173\u3002\u4e3a\u4e86\u4e3e\u4f8b\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8003\u8651\u6c42\u89e3\u6bcf\u4e00\u4e2a\u535a\u5f08\u7684\u8ba1\u7b97\u590d\u6742\u6027\uff1b\u4e3a\u4e86\u7b80\u6d01\uff0c\u6211\u4eec\u6b64\u540e\u5c06\u6c42\u89e3\u535a\u5f08\u79f0\u4e3a\u5bfb\u627e\u7eb3\u4ec0\u5747\u8861\u7684\u540c\u4e49\u8bcd(\u7c7b\u4f3c\u4e8e\u5148\u524d\u7684\u5de5\u4f5c69\u300170\u300171\u300172\uff0c\u5176\u4e2d\u7eb3\u4ec0\u5747\u8861\u662f\u611f\u5174\u8da3\u7684\u89e3\u6982\u5ff5)\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u53cc\u91cdOracle\u7b97\u6cd573\u6765\u53ef\u89c6\u5316\u8fd9\u79cd\u8ba1\u7b97\u590d\u6742\u6027\uff0c\u8be5\u7b97\u6cd5\u5728\u591a\u667a\u80fd\u4f53\u548c\u535a\u5f08\u8bba\u6587\u732e47\u300174\u300175\u300176\u4e2d\u5df2\u88ab\u516c\u8ba4\u4e3a\u7eb3\u4ec0\u6c42\u89e3\u5668\u3002\u5728\u8f83\u9ad8\u5c42\u6b21\u4e0a\uff0c\u53cc\u7532\u9aa8\u6587\u4ece\u7531\u5355\u4e2a\u968f\u673a\u9009\u62e9\u7684\u7b56\u7565\u7ec4\u6210\u7684\u5b50\u535a\u5f08\u5f00\u59cb\uff0c\u901a\u8fc7\u6700\u4f73\u54cd\u5e94(\u7531\u7532\u9aa8\u6587\u8ba1\u7b97)\u8fed\u4ee3\u5730\u6269\u5c55\u7b56\u7565\u7a7a\u95f4\uff0c\u76f4\u5230\u53d1\u73b0\u6574\u4e2a\u5e95\u5c42\u535a\u5f08\u7684\u7eb3\u4ec0\u5747\u8861\u3002\n\u56fe2c\uff0cf\u548ci\u53ef\u89c6\u5316\u4e86\u5728\u968f\u673a\u521d\u59cb\u5316\u4e0b\u6c42\u89e3\u76f8\u5e94\u6e38\u620f\u6240\u9700\u7684\u53cc\u91cdOracle\u8fed\u4ee3\u7684\u5206\u5e03\u3002\u7279\u522b\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u56fe2a\uff0cd\u4e2d\u5206\u522b\u53ef\u89c1\u7684\u4f20\u9012\u535a\u5f08\u548c\u5468\u671f\u6027\u535a\u5f08\u7684\u57fa\u672c\u6536\u76ca\u7ed3\u6784\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u5728\u56fe2a\uff0cd\u4e2d\u5f15\u5165\u4e86\u5faa\u73af\n\u5728\u7ed9\u5b9a\u535a\u5f08\u6536\u76caa\u7684\u60c5\u51b5\u4e0b\uff0c\u535a\u5f08\u7684\u6240\u8c13\u03b1-Rank\u54cd\u5e94\u56fe\u5728b\u4e2d\u53ef\u89c6\u5316\u3002\u5728c\u4e2d\uff0c\u901a\u8fc7\u4f7f\u7528\u56fe\u62c9\u666e\u62c9\u65af\u7684\u9876\u90e8\u7279\u5f81\u5411\u91cf\u6765\u91cd\u65b0\u6295\u5f71\u54cd\u5e94\u56fe\u4ea7\u751f\u8c31\u54cd\u5e94\u56fe\uff0c\u5176\u4e2d\u7c7b\u4f3c\u7684\u7b56\u7565\u88ab\u653e\u7f6e\u5728\u5f7c\u6b64\u63a5\u8fd1\u7684\u4f4d\u7f6e\u3002\u5728d\u4e2d\uff0c\u8fdb\u4e00\u6b65\u8fdb\u884c\u8fd9\u4e00\u6b65\uff0c\u53ef\u4ee5\u5bf9\u9891\u8c31\u54cd\u5e94\u56fe\u8fdb\u884c\u7fa4\u96c6\uff0c\u4ece\u800c\u4ea7\u751f\u7fa4\u96c6\u54cd\u5e94\u56fe\uff0c\u8be5\u7fa4\u96c6\u54cd\u5e94\u56fe\u5728\u8be5\u7279\u5b9a\u793a\u4f8b\u4e2d\u66b4\u9732\u4e86\u4e09\u7c7b\u7b56\u7565\u3002\u5728e\u4e2d\uff0c\u901a\u8fc7\u878d\u5408\u6bcf\u4e2a\u96c6\u7fa4\u5185\u7684\u8282\u70b9\u6765\u6536\u7f29\u96c6\u7fa4\u56fe\u4ea7\u751f\u4e86\u53ef\u4f20\u9012\u535a\u5f08\u7684\u9ad8\u7ea7\u7279\u5f81\u3002\u5728f\u4e2d\uff0c\u8fd9\u7c7b\u4f20\u9012\u5bf9\u7b56\u7684\u5708\u7684\u7f3a\u5931\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u6700\u540e\uff0c\u5728g\u548ch\u4e2d\uff0c\u53ef\u4ee5\u63d0\u53d6\u5404\u79cd\u54cd\u5e94\u56fe\u7edf\u8ba1\u7684\u4e3b\u6210\u5206\uff0c\u5e76\u5efa\u7acb\u5230\u8fc7\u7a0b\u6027\u6e38\u620f\u7ed3\u6784\u751f\u6210\u65b9\u6848\u7684\u53cd\u9988\u56de\u8def\uff0c\u4ee5\u4ea7\u751f\u65b0\u7684\u6e38\u620f\u3002\n\u901a\u8fc7\u5c06\u6e38\u620f\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u53ef\u4ee5\u5bf9\u6e38\u620f\u7684\u5e95\u5c42\u7ed3\u6784\u548c\u590d\u6742\u6027\u63d0\u4f9b\u5404\u79cd\u6709\u7528\u7684\u89c1\u89e3\u3002\u4f8b\u5982\uff0c\u8003\u8651\u56fe\u4e2d\u7684\u5708\u7684\u5206\u5e03\uff0c\u5176\u5728\u591a\u667a\u80fd\u4f53\u8bc4\u4f30\u548c\u8bad\u7ec3\u65b9\u684841\u300150\u300153\u300177\u4e2d\u626e\u6f14\u91cd\u8981\u89d2\u8272\uff0c\u5e76\u4e14\u5982\u7a0d\u540e\u6240\u793a\uff0c\u4e0e\u6c42\u89e3\u4e24\u4eba\u96f6\u548c\u535a\u5f08\u7684\u8ba1\u7b97\u590d\u6742\u6027\u76f8\u5173(\u4f8b\u5982\uff0c\u901a\u8fc7\u53ccOracle)\u3002\u56fe3f\u6e05\u695a\u5730\u8868\u660e\uff0c\u5728\u8fd9\u7c7b\u7279\u5b9a\u7684\u4f20\u9012\u6e38\u620f\u4e2d\u7f3a\u4e4f\u5faa\u73af\uff1b\u867d\u7136\u8fd9\u5728\u56fe3a\u7684\u57fa\u7840(\u5168\u5e8f)\u56de\u62a5\u53ef\u89c6\u5316\u4e2d\u5f88\u660e\u663e\uff0c\u4f46\u5728\u56fe3a\u4e2d\u770b\u5230\u7684\u65e0\u5e8f\u53d8\u4f53\u4e2d\u5c31\u4e0d\u90a3\u4e48\u660e\u663e\u4e86\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u901a\u8fc7\u5bf9\u5e95\u5c42\u6e38\u620f\u54cd\u5e94\u56fe\u8fdb\u884c\u9891\u8c31\u5206\u6790\uff0c\u7b56\u7565\u4e4b\u95f4\u7684\u9ad8\u5c42\u5173\u7cfb\u7ed3\u6784\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u3002\u6b64\u8fc7\u7a0b\u7684\u5b8c\u6574\u6280\u672f\u7ec6\u8282\u5728\u201c\u65b9\u6cd5\u201d\u4e00\u8282\u4e2d\u63d0\u4f9b\u3002\u5728\u8f83\u9ad8\u7ea7\u522b\uff0c\u56fe\u7684\u6240\u8c13\u62c9\u666e\u62c9\u65af\u8c31(\u5373\uff0c\u7279\u5f81\u503c)\u8fde\u540c\u76f8\u5173\u8054\u7684\u7279\u5f81\u5411\u91cf\u4e00\u8d77\u6355\u83b7\u5173\u4e8e\u5b83\u7684\u91cd\u8981\u4fe1\u606f(\u4f8b\u5982\uff0c\u751f\u6210\u6811\u7684\u6570\u91cf\u3001\u4ee3\u6570\u8fde\u901a\u6027\u548c\u8bb8\u591a\u76f8\u5173\u5c5e\u602778)\u3002\u901a\u8fc7\u4f7f\u7528\u9876\u90e8\u7279\u5f81\u5411\u91cf\u91cd\u65b0\u6295\u5f71\u54cd\u5e94\u56fe\u4ea7\u751f\u56fe3c\u4e2d\u53ef\u89c6\u5316\u7684\u5149\u8c31\u54cd\u5e94\u56fe\uff0c\u5176\u4e2d\u7c7b\u4f3c\u7684\u7b56\u7565\u88ab\u653e\u7f6e\u5728\u5f7c\u6b64\u63a5\u8fd1\u7684\u4f4d\u7f6e\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u5bf9\u5149\u8c31\u54cd\u5e94\u56fe\u8fdb\u884c\u7fa4\u96c6\uff0c\u4ea7\u751f\u7fa4\u96c6\u54cd\u5e94\u56fe\uff0c\u56fe3d\u4e2d\u5c55\u793a\u4e86\u4e09\u7c7b\u7b56\u7565\uff1a\u53ea\u6709\u4f20\u51fa\u8fb9\u7684\u5b8c\u5168\u652f\u914d\u7b56\u7565(\u56fe\u7684\u5de6\u4e0b\u89d2\u7684\u5355\u4f8b\u7fa4\u96c6)\uff0c\u5177\u6709\u4f20\u5165\u548c\u4f20\u51fa\u8fb9\u7684\u4e34\u65f6\u7b56\u7565\u7fa4\u96c6(\u9876\u90e8\u7fa4\u96c6)\uff0c\u4ee5\u53ca\u5177\u6709\u6240\u6709\u4f20\u5165\u8fb9\u7684\u4e3b\u5bfc\u7b56\u7565(\u53f3\u4e0b\u7fa4\u96c6)\u3002\u5728\u56fe3d\u4e2d\uff0c\u53ea\u6709\u4f20\u51fa\u8fb9\u7684\u5b8c\u5168\u652f\u914d\u7b56\u7565(\u56fe\u7684\u5de6\u4e0b\u89d2\u7684\u5355\u4e2a\u7fa4\u96c6)\u3001\u5177\u6709\u4f20\u5165\u548c\u4f20\u51fa\u8fb9\u7684\u4e34\u65f6\u7b56\u7565\u7fa4\u96c6(\u9876\u90e8\u7fa4\u96c6)\u4ee5\u53ca\u5177\u6709\u6240\u6709\u4f20\u5165\u8fb9\u7684\u4e3b\u5bfc\u7b56\u7565(\u53f3\u4e0b\u7fa4\u96c6)\u3002\u6700\u540e\uff0c\u901a\u8fc7\u878d\u5408\u6bcf\u4e2a\u96c6\u7fa4\u5185\u7684\u8282\u70b9\u6765\u6536\u7f29\u96c6\u7fa4\u56fe\uff0c\u53ef\u4ee5\u4ea7\u751f\u56fe3e\u6240\u793a\u7684\u4f20\u9012\u535a\u5f08\u7684\u9ad8\u7ea7\u7279\u5f81\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u5176\u4ed6\u6fc0\u52b1\u6e38\u620f\u7684\u4f8b\u5b50\u8fdb\u884c\u8fd9\u79cd\u5206\u6790\uff0c\u6bd4\u5982\u56fe4a\u4e2d\u6240\u793a\u7684\u5468\u671f\u6027\u6e38\u620f\u3002\u6ce8\u610f\u5230\u4e0e\u65e9\u5148\u7684\u4f20\u9012\u535a\u5f08\u4f8b\u5b50\u7684\u660e\u663e\u4e0d\u540c\uff1b\u5728\u5faa\u73af\u535a\u5f08\u4e2d\uff0c\u54cd\u5e94\u56fe(\u56fe4b)\u4e2d\u7684\u03b1-Rank\u5206\u5e03\u5177\u6709\u66f4\u9ad8\u7684\u71b5(\u7531\u4e8e\u5faa\u73af\u7684\u5b58\u5728\uff0c\u8868\u660e\u5bf9\u8bb8\u591a\u7b56\u7565\u7684\u504f\u597d\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u7b56\u7565)\u3002\u6b64\u5916\uff0c\u56fe4d\u4e2d\u7684\u5149\u8c31\u91cd\u6295\u5f71\u663e\u793a\u4e86\u4e00\u7ec4\u6e05\u6670\u7684\u53ef\u4f20\u9012\u8282\u70b9(\u53ef\u89c6\u5316\u7684\u5de6\u4fa7)\u548c\u4e00\u4e2a\u5468\u671f\u8bf1\u5bfc\u8282\u70b9\u7684\u5355\u4e2a\u7c07(\u53f3\u4fa7)\u3002\u6536\u7f29\u8fd9\u5f20\u54cd\u5e94\u56fe\u63ed\u793a\u4e86\u8fd9\u573a\u6e38\u620f\u7684\u6839\u672c\u5468\u671f\u6027(\u56fe4f)\u3002\u6700\u540e\uff0c\u57fa\u4e8e\u8be5\u805a\u7c7b\u5206\u6790\uff0c\u6211\u4eec\u5bf9\u539f\u59cb\u6536\u76ca\u8868\u7684\u6bcf\u4e2a\u7b56\u7565(\u5373\uff0c\u6bcf\u884c\u548c\u6bcf\u5217)\u8fdb\u884c\u4e86\u6807\u8bb0\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u56fe4a\u4e2d\u6bcf\u884c(\u5206\u522b\u4e3a\u5217)\u7684\u6700\u5de6\u4fa7(\u5206\u522b\u4e3a\u9876\u90e8)\u4e0a\u7684\u989c\u8272\u7f16\u7801\u6807\u7b7e\u5bf9\u5e94\u4e8e\u56fe14d\u4e2d\u7684\u7fa4\u96c6\u7b56\u7565\u989c\u8272\u3002\u8fd9\u79cd\u989c\u8272\u7f16\u7801\u6709\u52a9\u4e8e\u6e05\u695a\u5730\u5c06\u6700\u7ec8\u7b56\u7565(\u5373\uff0c\u56de\u6536\u8868\u7684\u6700\u4e0b\u9762\u4e00\u884c)\u8bc6\u522b\u4e3a\u5728\u6e38\u620f\u4e2d\u6267\u884c\u5faa\u73af\u5173\u7cfb\u7684\u5f02\u5e38\u503c\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u6ca1\u6709\u5355\u4e00\u7684\u56fe\u5f62\u7ed3\u6784\u6765\u603b\u7ed3\u56fe2\u4e2d\u65e9\u5148\u53ef\u89c6\u5316\u7684\u7279\u5b9a\u7c7b\u522b\u7684\u968f\u673a\u6e38\u620f\uff0c\u4f46\u6211\u4eec\u5305\u542b\u4e86\u4ee5\u4e0b\u5206\u6790\u3002\n.", "note_en": "Multiplayer games have long been used as testbeds in artificial intelligence research, aptly referred to as the Drosophila of artificial intelligence. Traditionally, researchers have focused on using well-known games to build strong agents. This progress, however, can be better informed by characterizing games and their topological landscape. Tackling this latter question can facilitate understanding of agents and help determine what game an agent should target next as part of its training. Here, we show how network measures applied to response graphs of large-scale games enable the creation of a landscape of games, quantifying relationships between games of varying sizes and characteristics. We illustrate our findings in domains ranging from canonical games to complex empirical games capturing the performance of trained agents pitted against one another. Our results culminate in a demonstration leveraging this information to generate new and interesting games, including mixtures of empirical games synthesized from real world games.\n     Games have played a prominent role as platforms for the development of learning algorithms and the measurement of progress in artificial intelligence (AI)  1, 2, 3, 4. Multiplayer games, in particular, have played a pivotal role in AI research and have been extensively investigated in machine learning, ranging from abstract benchmarks in game theory over popular board games such as Chess  5, 6 and Go  7 (referred to as the Drosophila of AI research  8), to realtime strategy games such as StarCraft II  9 and Dota 2  10. Overall, AI research has primarily placed emphasis on training of strong agents; we refer to this as the Policy Problem, which entails the search for super human-level AI performance. Despite this progress, the need for a task theory, a framework for taxonomizing, characterizing, and decomposing AI tasks has become increasingly important in recent years  11, 12. Naturally, techniques for understanding the space of games are likely beneficial for the algorithmic development of future AI entities  12, 13. Understanding and decomposing the characterizing features of games can be leveraged for downstream training of agents via curriculum learning  14, which seeks to enable agents to learn increasingly-complex tasks.\n A core challenge associated with designing such a task theory has been recently coined the Problem Problem, defined as \u201cthe engineering problem of generating large numbers of interesting adaptive environments to support research\u201d  15. Research associated with the Problem Problem has a rich history spanning over 30 years, including the aforementioned work on task theory  11, 12, 16, procedurally-generated videogame features  17, 18, 19, generation of games and rule-sets for General Game Playing  20, 21, 22, 23, 24, 25, 26, and procedural content generation techniques  27, 28, 29, 30, 31, 32, 33, 34, 35, 36; we refer readers to Supplementary Note\u00a0 1 for detailed discussion of these and related works. An important question that underlies several of these interlinked fields is: what makes a game interesting enough for an AI agent to learn to play? Resolving this requires techniques that can characterize the topological landscape of games, which is the topic of interest in this paper. We focus, in particular, on the characterization of multiplayer games (i.e., those involving interactions of multiple agents), and henceforth use the shorthand of games to refer to this class.\n The objective of this paper is to establish tools that enable discovery of a topology over games, regardless of whether they are interesting or not; we do not seek to answer the interestingness question here, although such a toolkit can be useful for subsequently considering it. Naturally, many notions of what makes a game interesting exist, from the perspectives of human-centric game design, developmental learning, curriculum learning, AI training, and so on. Our later experiments link to the recent work of Czarnecki et al.  37, which investigated properties that make a game interesting specifically from an AI training perspective, as also considered here. We follow the interestingness characterization of Czarnecki et al.  37, which defines so-called Games of Skill that are engaging for agents due to: (i) a notion of progress; (ii) availability of diverse play styles that perform similarly well. We later show how clusters of games discovered by our approach align with this notion of interestingness. An important benefit of our approach is that it applies to adversarial and cooperative games alike. Moreover, while the procedural game structure generation results we later present target zero-sum games due to the payoff parameterization chosen in those particular experiments, they readily extend to general-sum games.\n How does one topologically analyze games? One can consider characterizations of a game as quantified by measures such as the number of strategies available, players involved, whether the game is symmetric, and so on. One could also order the payouts to players to taxonomize games, as done in prior works exploring 2\u2009\u00d7\u20092 games  38, 39, 40. For more complex games, however, such measures are crude, failing to disambiguate differences in similar games. One may also seek to classify games from the standpoint of computational complexity. However, a game that is computationally challenging to solve may not necessarily be interesting to play. Overall, designation of a single measure characterizing games is a non-trivial task.\n It seems useful, instead, to consider measures that characterize the possible strategic interactions in the game. A number of recent works have considered problems involving such interactions  41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51. Many of these works analyze agent populations, relying on game-theoretic models capturing pairwise agent relations. Related models have considered transitivity (or lack thereof) to study games from a dynamical systems perspective  52, 53; here, a transitive game is one where strategies can be ordered in terms of strength, whereas an intransitive game may involve cyclical relationships between strategies (e.g., Rock\u2013Paper\u2013Scissors). Fundamentally, the topology exposed via pairwise agent interactions seems a key enabler of the powerful techniques introduced in the above works. In related literature, graph theory is well-established as a framework for topological analysis of large systems involving interacting entities  54, 55, 56. Complexity analysis via graph-theoretic techniques has been applied to social networks  57, 58, the webgraph  59, 60, biological systems  61, 62, 63, econometrics  64, 65, and linguistics  66. Here, we demonstrate that the combination of graph and game theory provides useful tools for analyzing the structure of general-sum, many-player games.\n The primary contribution of this work is a graph-based toolkit for analysis and comparison of games. As detailed below, the nodes in our graphs are either strategies (in abstract games) or AI agents (in empirical games, where strategies correspond to learned or appropriately-sampled player policies). The interactions between these agents, as quantified by the game\u2019s payoffs, constitute the structure of the graph under analysis. We show that this set of nodes and edges, also known as the  \u03b1-Rank response graph  49, 50, 51, yields useful insights into the structure of individual games and can be used to generate a landscape over collections of games (as in Fig.\u00a0 1). We subsequently use the toolkit to analyze various games that are both played by humans or wherein AI agents have reached human-level performance, including Go, MuJoCo Soccer, and StarCraft II. Our overall analysis culminates in a demonstration of how the topological structure over games can be used to tackle the interestingness question of the Problem Problem, which seeks to automatically generate games with interesting characteristics for learning agents  15.\n This landscape is generated by collecting features associated with the response graph of each game, and plotting the top two principal components. At a high level, games whose response graphs are characteristically similar are situated close to one another in this landscape. Notably, variations of games with related rules are well-clustered together, indicating strong similarity despite their widely-varying raw sizes. Instances of Blotto cluster together, despite their payoff table sizes ranging from 20\u2009\u00d7\u200920 for Blotto(5,3) to 1000\u2009\u00d7\u20091000 for Blotto(10,5). Games with strong transitive components (e.g., variations of Elo games, AlphaStar League, Random Game of Skill, and Normal Bernoulli Game) can be observed to be well separated from strongly cyclical games (Rock\u2013Paper\u2013Scissors and the Disc game). Closely-related real-world games (i.e., games often played by humans in the real world, such as Hex, Tic-Tac-Toe, Connect Four and each of their respective Misere counterparts) are also clustered together.\n We develop a foundational graph-theoretic toolkit that facilitates analysis of canonical and large-scale games, providing insights into their related topological structure in terms of their high-level strategic interactions. The prerequisite game theory background and technical details are provided in the \u201cMethods\u201d section, with full discussion of related works and additional details in Supplementary Note\u00a0 1.\n Our results are summarized as follows. We use our toolkit to characterize a number of games, first analyzing motivating examples and canonical games with well-defined structures, then extending to larger-scale empirical games datasets. For these larger games, we rely on empirical game-theoretic analysis  67, 68, where we characterize an underlying game using a sample set of policies. While the empirical game-theoretic results are subject to the policies used to generate them, we rely on a sampling scheme designed to capture a diverse variety of interactions within each game, and subsequently conduct sensitivity analysis to validate the robustness of the results. We demonstrate correlation between the complexity of the graphs associated with games and the complexity of solving the game itself. In Supplementary Note\u00a0 2, we evaluate our proposed method against baseline approaches for taxonomization of 2\u2009\u00d7\u2009 2 games  38. We finally demonstrate how this toolkit can be used to automatically generate interesting game structures that can, for example, subsequently be used to train AI agents.\n  Let us start with a motivating example to solidify intuitions and explain the workflow of our graph-theoretic toolkit, using classes of games with simple parametric structures in the player payoffs. Specifically, consider games of three broad classes (generated as detailed in the Supplementary Methods\u00a0 1): games in which strategies have a clear transitive ordering (Fig.\u00a0 2a); games in which strategies have a cyclical structure wherein all but the final strategy are transitive with respect to one another (Fig.\u00a0 2d); and games with random (or no clear underlying) structure (Fig.\u00a0 2g). We shall see that the core characteristics of games with shared underlying structure is recovered via the proposed analysis.\n a,  d, and  g, respectively, visualize payoffs for instances of games with transitive, cyclical, and random structure. Each exemplified game consists of two players with 10 strategies each (with payoff row and column labels, { s 0,\u00a0\u2026,\u00a0 s 9}, indicating the strategies). Despite the numerous payoff variations possible in each class of games illustrated, each shares the underlying payoff structure shown, respectively, in  b,  e, and  h. Moreover, variations in payoffs can notably impact the difficulty of solving (i.e., finding the Nash equilibrium) of these games, as visualized in  c,  f,  i.\n Each of these figures visualizes the payoffs corresponding to 4 instances of games of the respective class, with each game involving 10 strategies per player; more concretely, entry  M( s  i,\u00a0 s  j) of each matrix visualized in Fig.\u00a0 2a, d and g quantifies the payoff received by the first player if the players, respectively, use strategies  s  i and  s  j (corresponding, respectively, to the  i-th and  j-th row and column of each payoff table). Despite the variance in payoffs evident in the instances of games exemplified here, each essentially shares the payoff structure exposed by re-ordering their strategies, respectively, in Fig.\u00a0 2b, e and h. In other words, the visual representation of the payoffs in this latter set of figures succinctly characterizes the backbone of strategic interactions within these classes of games, despite not being immediately apparent in the individual instances visualized.\n More importantly, the complexity of learning useful mixed strategies to play in each of these games is closely associated with this structural backbone. To exemplify this, consider the computational complexity of solving each of these games; for brevity, we henceforth refer to solving a game as synonymous with finding a Nash equilibrium (similar to prior works  69, 70, 71, 72, wherein the Nash equilibrium is the solution concept of interest). Specifically, we visualize this computational complexity by using the Double Oracle algorithm  73, which has been well-established as a Nash solver in multiagent and game theory literature  47, 74, 75, 76. At a high level, Double Oracle starts from a sub-game consisting of a single randomly-selected strategy, iteratively expands the strategy space via best responses (computed by an oracle), until discovery of the Nash equilibrium of the full underlying game.\n Figure\u00a0 2c, f and i visualize the distribution of Double Oracle iterations needed to solve the corresponding games, under random initializations. Note, in particular, that although the underlying payoff structure of the transitive and cyclical games, respectively, visualized in Fig.\u00a0 2a, d is similar, the introduction of a cycle in the latter class of games has a substantial impact on the complexity of solving them (as evident in Fig.\u00a0 2f). In particular, whereas the former class of games are solved using a low (and deterministic) number of iterations, the latter class requires additional iterations due to the presence of cycles increasing the number of strategies in the support of the Nash equilibrium.\n  Overall, the characterization of the topological structure of games is an important and nuanced problem. To address this problem, we use graph theory to build an analytical toolkit automatically summarizing the high-level strategic interactions within a game, and providing useful complexity measures thereof. Specifically, consider again our motivating transitive game, re-visualized using a collection of graph-based measures in Fig.\u00a0 3. Each of these measures provides a different viewpoint on the underlying game, collectively characterizing it. Specifically, given the game payoffs, Fig.\u00a0 3b visualizes the so-called  \u03b1-Rank response graph of the game; here, each node corresponds to a strategy (for either player, as this particular game\u2019s payoffs are symmetric). Transition probabilities between nodes are informed by a precise evolutionary model (detailed in \u201cMethods\u201d section and Omidshafiei et al.  50); roughly speaking, a directed edge from one strategy to another indicates the players having a higher preference for the latter strategy, in comparison to the former. The response graph, thus, visualizes all preferential interactions between strategies in the game. Moreover, the color intensity of each node indicates its so-called  \u03b1-Rank, which measures the long-term preference of the players for that particular strategy, as dictated by the transition model mentioned above; specifically, darker colors here indicate more preferable strategies.\n Given the game payoffs  a, the so-called  \u03b1-Rank response graph of the game is visualized in  b. In  c, reprojecting the response graph by using the top eigenvectors of the graph Laplacian yields the spectral response graph, wherein similar strategies are placed close to one another. In  d, taking this one step further, one can cluster the spectral response graph, yielding the clustered response graph, which exposes three classes of strategies in this particular example. In  e, contracting the clustered graph by fusing nodes within each cluster yields the high-level characterization of transitive games. In  f, the lack of cycles in the particular class of transitive games becomes evident. Finally, in  g and  h, one can extract the principal components of various response graph statistics and establish a feedback loop to a procedural game structure generation scheme to yield new games.\n This representation of a game as a graph enables a variety of useful insights into its underlying structure and complexity. For instance, consider the distribution of cycles in the graph, which play an important role in multiagent evaluation and training schemes  41, 50, 53, 77 and, as later shown, are correlated to the computational complexity of solving two-player zero-sum games (e.g., via Double Oracle). Figure\u00a0 3f makes evident the lack of cycles in the particular class of transitive games; while this is clearly apparent in the underlying (fully ordered) payoff visualization of Fig.\u00a0 3a, it is less so in the unordered variants visualized in Fig.\u00a0 2a. Even so, the high-level relational structure between the strategies becomes more evident by conducting a spectral analysis of the underlying game response graph. Full technical details of this procedure are provided in the \u201cMethods\u201d section. At a high level, the so-called Laplacian spectrum (i.e., eigenvalues) of a graph, along with associated eigenvectors, captures important information regarding it (e.g., number of spanning trees, algebraic connectivity, and numerous related properties  78). Reprojecting the response graph by using the top eigenvectors yields the spectral response graph visualized in Fig.\u00a0 3c, wherein similar strategies are placed close to one another. Moreover, one can cluster the spectral response graph, yielding the clustered response graph, which exposes three classes of strategies in Fig.\u00a0 3d: a fully dominated strategy with only outgoing edges (a singleton cluster, on the bottom left of the graph), a transient cluster of strategies with both incoming and outgoing edges (top cluster), and a dominant strategy with all incoming edges (bottom right cluster). Finally, contracting the clustered graph by fusing nodes within each cluster yields the high-level characterization of transitive games shown in Fig.\u00a0 3e.\n We can also conduct this analysis for instances of our other motivating games, such as the cyclical game visualized in Fig.\u00a0 4a. Note here the distinct differences with the earlier transitive game example; in the cyclical game, the  \u03b1-Rank distribution in the response graph (Fig.\u00a0 4b) has higher entropy (indicating preference for many strategies, rather than one, due to the presence of cycles). Moreover, the spectral reprojection in Fig.\u00a0 4d reveals a clear set of transitive nodes (left side of visualization) and a singleton cluster of a cycle-inducing node (right side). Contracting this response graph reveals the fundamentally cyclical nature of this game (Fig.\u00a0 4f). Finally, we label each strategy (i.e., each row and column) of the original payoff table Fig.\u00a0 4a based on this clustering analysis. Specifically, the color-coded labels on the far left (respectively, top) of each row (respectively, column) in Fig.\u00a0 4a correspond to the clustered strategy colors in Fig.\u00a0 4d. This color-coding helps clearly identify the final strategy (i.e., bottom row of the payoff table) as the outlier enforcing the cyclical relationships in the game. Note that while there is no single graphical structure that summarizes the particular class of random games visualized earlier in Fig.\u00a0 2h, we include this analysi\n......", "posttime": "2020-11-07 11:25:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,landscape", "title": "\u5728\u591a\u4eba\u6e38\u620f\u7684\u7248\u56fe\u4e2d\u5bfc\u822a", "title_en": "Navigating the landscape of multiplayer games", "transed": 1, "url": "https://www.nature.com/articles/s41467-020-19244-4", "via": "", "real_tags": ["\u6e38\u620f", "landscape"]}, {"category": "", "categoryclass": "", "imagename": "2b68fb108ec7394a82f58146265ceca9.png", "infoid": 1033647, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728MayaData\uff0c\u6211\u4eec\u559c\u6b22\u65b0\u6280\u672f\u3002\u8ba9\u6211\u4eec\u7684\u6570\u636e\u5e93\u8fd0\u884c\u5f97\u66f4\u597d\u7684\u6280\u672f\u3002\u65e0\u9501\u73af\u5f62\u7f13\u51b2\u5668\u3001NVMe-of\u548cKubernetes\u7b49\u6280\u672f\u3002\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u4e9b\u6280\u672f\u6b63\u5728\u53d1\u6325\u4f5c\u7528\uff0c\u5b83\u4eec\u4ee5\u7075\u6d3b\u548c\u7b80\u5355\u7684\u64cd\u4f5c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4ee4\u4eba\u60ca\u53f9\u7684\u5757\u5b58\u50a8\u6027\u80fd\u3002\nMayastor\u662f\u4e00\u79cd\u65b0\u6280\u672f\uff0c\u901f\u5ea6\u5f88\u5feb\uff0c\u800c\u4e14\u662f\u57fa\u4e8eSPDK\u7684\u3002\u4e3a\u4ec0\u4e48SPDK\u4ee4\u4eba\u5174\u594b\uff1f\u8fd9\u662f\u65b0\u4e00\u4ee3\u5b58\u50a8\u8f6f\u4ef6\uff0c\u4e13\u4e3a\u8d85\u9ad8\u901f\u4f4e\u5ef6\u8fdfNVMe\u8bbe\u5907\u8bbe\u8ba1\u3002\u6211\u53ea\u60f3\u544a\u8bc9\u60a8\uff0c\u6211\u76f8\u4fe1Mayastor\u80fd\u591f\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6211\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684NVMe\u8bbe\u5907\u7684\u5b9e\u9645\u541e\u5410\u91cf\uff0c\u4ece\u800c\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u652f\u6301\u591a\u4e2a\u9ad8\u6027\u80fd(20kqps+)\u6570\u636e\u5e93\u5b9e\u4f8b\u3002\u975e\u5e38\u9002\u5408\u4e8eKubernetes\u7684\u6570\u636e\u5e93\u573a\u3002\n\u5f00\u6e90\u5173\u7cfb\u6570\u636e\u5e93\u662f\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u4e3b\u8981\u7ec4\u4ef6\u3002\u4eba\u4eec\u603b\u662f\u5728\u5404\u79cd\u8f6f\u4ef6\u9879\u76ee\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u5728\u4e0d\u540c\u7684\u6570\u636e\u7ec4\u4e4b\u95f4\u5efa\u7acb\u5173\u7cfb\u5f88\u5bb9\u6613\uff0c\u8bed\u6cd5\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u800c\u4e14\u968f\u7740\u73b0\u4ee3\u8ba1\u7b97\u7684\u53d1\u5c55\uff0c\u5b83\u4eec\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u5f53\u5f00\u53d1\u4eba\u5458\u60f3\u8981\u5165\u4fb5\u5173\u7cfb\u6570\u636e\u5e93\u65f6\uff0c\u5f88\u53ef\u80fd\u662fPostgres\u6216MySQL\u3002\u4ed6\u4eec\u662f\u514d\u8d39\u7684\u3002\u5b83\u4eec\u662f\u5f00\u6e90\u7684\u3002\u5b83\u4eec\u90fd\u5df2\u7ecf\u76f8\u5f53\u7a33\u5b9a\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u800c\u4e14\u5b83\u4eec\u90fd\u80fd\u5728Kubernetes\u4e0a\u8fd0\u884c\u5f97\u5f88\u597d\u3002\u5982\u679cPercona\u7684\u597d\u5458\u5de5\u5236\u4f5c\u8fd9\u4e9b\u6570\u636e\u5e93\u7684\u5bb9\u5668\u5316\u7684\u3001\u53ef\u751f\u4ea7\u7684\u7248\u672c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4ed6\u4eec\u7684Percona\u53d1\u884c\u7248MySQL\u6765\u8fdb\u884c\u4e0b\u9762\u7684\u6d4b\u8bd5\u3002\n\u90a3\u4e48\uff0c\u5728Kubernetes\u4e2d\u8fd0\u884c\u5173\u7cfb\u6570\u636e\u5e93\u6216\u4e00\u822c\u6570\u636e\u5e93\u6709\u4ec0\u4e48\u56f0\u96be\u5462\uff1f\u8003\u8651\u5230Kubernetes\u7528\u4e8e\u7ba1\u7406\u9ad8\u53ef\u7528\u6027\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u7684\u6240\u6709\u529f\u80fd\uff1a\u5e26\u63a7\u5236\u7684\u81ea\u52a8\u5316\u3001\u901a\u7528\u58f0\u660e\u6027\u914d\u7f6e\u63a5\u53e3\u548c\u5185\u7f6e\u53ef\u89c2\u5bdf\u6027\uff0c\u4eba\u4eec\u4f1a\u8ba4\u4e3a\u6570\u636e\u5e93\u5c31\u662f\u8981\u90e8\u7f72\u5230\u5b83\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8bc0\u7a8d\u5728\u4e8e\uff0c\u6570\u636e\u5e93\u662f\u51fa\u4e86\u540d\u7684\u78c1\u76d8\u5bc6\u96c6\u578b\u548c\u5ef6\u8fdf\u654f\u611f\u578b\u6570\u636e\u5e93\u3002\u8fd9\u5bf9\u60a8\u7684Kubernetes\u90e8\u7f72\u6709\u5f71\u54cd\u7684\u539f\u56e0\u662f\uff0c\u5e93\u5b58\u8bbe\u7f6e\u548c\u672a\u8c03\u4f18\u7684K8S\u96c6\u7fa4\u4e2d\u7684\u5b58\u50a8\u652f\u6301\u5145\u5176\u91cf\u662f\u6700\u57fa\u672c\u7684\u3002\u8fd9\u5c31\u521b\u5efa\u4e86\u8bb8\u591a\u9879\u76ee\uff0c\u7528\u4e8e\u5728K8S\u9879\u76ee\u4e2d\u63d0\u4f9b\u5b58\u50a8\uff0c\u5f53\u7136\uff0c\u5305\u62ec\u6d41\u884c\u7684OpenEBS\u9879\u76ee\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u7814\u7a76\u6784\u6210OpenEBS\u6570\u636e\u5e73\u9762\u7684\u6700\u65b0\u5b58\u50a8\u5f15\u64ce\u3002\u4f5c\u4e3a\u4e00\u9879\u6311\u6218\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u5728MySQL\u6570\u636e\u5e93\u4e2d\u5b9e\u73b0\u6bcf\u79d220,000\u4e2a\u67e5\u8be2\uff0c\u5e76\u5728\u5e95\u5c42\u4f7f\u7528\u6b64\u5b58\u50a8\u5f15\u64ce\u8fdb\u884c\u5757\u5b58\u50a8\u3002\n\u73b0\u5728\uff0c\u6709\u4e86\u6b63\u786e\u7684\u6570\u636e\u96c6\uff0c\u8fbe\u523020kqps\u53ef\u80fd\u5f88\u5bb9\u6613\u3002\u4f46\u6211\u5e0c\u671b\u4f7f\u7528\u6bd4\u53ef\u7528RAM\u5927\u5f97\u591a\u7684\u6570\u636e\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c20kqps\u662f\u76f8\u5f53\u5feb\u7684(\u4ece\u5b83\u4ea7\u751f\u7684\u78c1\u76d8\u6d41\u91cf\u548cCPU\u8d1f\u8f7d\u53ef\u4ee5\u770b\u51fa)\u3002\n\u5728Kubernetes\u4e2d\u90e8\u7f72MySQL\u6709\u5f88\u591a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u6d4b\u8bd5\uff0c\u6211\u4eec\u771f\u6b63\u60f3\u8981\u7684\u53ea\u662f\u4e00\u4e2a\u597d\u7684\u3001\u9ad8\u6027\u80fd\u7684\u6570\u636e\u5e93\u3002\u6211\u771f\u7684\u4e0d\u9700\u8981\u82b1\u54e8\u7684DBaaS\u529f\u80fd\uff0c\u4e5f\u4e0d\u9700\u8981\u64cd\u4f5c\u5458\u6765\u7ba1\u7406\u5907\u4efd\uff0c\u6216\u8005\u4efb\u4f55\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5c06\u4ecePercona\u7684MySQL\u5bb9\u5668\u5f00\u59cb\uff0c\u5e76\u4e3a\u5176\u6784\u5efa\u4e00\u4e2a\u5c0f\u7684\u90e8\u7f72\u6e05\u5355\u3002\u73b0\u5728\uff0c\u4e5f\u8bb8\u4f60\u5728\u60f3\uff1a\u201c\u4f60\u7684\u610f\u601d\u4e0d\u662f\u4e00\u4e2a\u6709\u72b6\u6001\u7684\u96c6\u5408\u5417\uff1f\u201d\u4f46\u4e0d\u662f\u7684\uff0c\u6211\u4eec\u8981\u7528\u90e8\u7f72\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u9664\u4e86\u5bb9\u5668\u8fde\u63a5\u5b58\u50a8\u5916\uff0c\u8fd8\u53ef\u4ee5\u7b80\u5355\u65b9\u4fbf\u5730\u8fdb\u884c\u914d\u7f6e\u3002\n\u56fe\u4e2d\u7684\u90e8\u7f72\u5f15\u7528\u4e86\u5916\u90e8\u5377vol2\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u7cfb\u7edf\u4e0a\u4e3a\u6b64\u521b\u5efa\u4e00\u4e2aPV\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u7684MySQL\u5b9e\u4f8b\u88ab\u5b89\u6392\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u5b58\u50a8\u5c06\u4e0d\u5b58\u5728\u3002\nMayastor\u662fOpenEBS\u548cMayaData\u7684Kubera\u4ea7\u54c1\u7684\u6700\u65b0\u5b58\u50a8\u5f15\u64ce\u3002Mayastor\u4ee3\u8868\u4e86Linux\u7cfb\u7edf\u529f\u80fd\u4e30\u5bcc\u5b58\u50a8\u9886\u57df\u7684\u6700\u5148\u8fdb\u6280\u672f\u3002Mayastor\u521b\u5efa\u7531\u5feb\u901fNVMe\u78c1\u76d8\u652f\u6301\u7684\u865a\u62df\u5377\uff0c\u5e76\u901a\u8fc7\u8d85\u9ad8\u901fNVMf\u534f\u8bae\u5bfc\u51fa\u8fd9\u4e9b\u5377\u3002\u5b83\u662f\u5bb9\u5668\u9644\u52a0\u5b58\u50a8\u6a21\u578b\u7684\u5168\u65b0\u5b9e\u73b0\u3002\u6240\u8c13CAS\uff0c\u6211\u7684\u610f\u601d\u662f\u5b83\u662f\u4e13\u95e8\u4e3a\u4e91\u7684\u591a\u79df\u6237\u5206\u5e03\u5f0f\u4e16\u754c\u800c\u6784\u5efa\u7684\u3002CAS\u610f\u5473\u7740\u6bcf\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u90fd\u6709\u81ea\u5df1\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u6709\u7528\u4e8e\u8c03\u4f18\u7684\u65cb\u94ae\u7b49\u7b49\u3002CAS\u67b6\u6784\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u5c06\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5176\u5b58\u50a8\u5206\u79bb\u3002\u60a8\u53ef\u4ee5\u5728\u672c\u5730\u8fde\u63a5\u5230\u78c1\u76d8\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7NVMf\u6216iSCSI\u8fde\u63a5\u5230\u78c1\u76d8\u3002\nMayastor\u662fCAS\uff0c\u65e8\u5728\u4ee5\u6781\u5c0f\u7684\u5f00\u9500\u5feb\u901f\u652f\u6301\u4e91\u672c\u5730\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728MayaData\uff0c\u6211\u4eec\u7528Rust\u7f16\u5199\u4e86\u5b83\uff1b\u6211\u4eec\u4e0eIntel\u5408\u4f5c\u5b9e\u73b0\u4e86\u540d\u4e3aSPDK\u7684\u65b0\u7684\u7a81\u7834\u6027\u6280\u672f\uff1b\u4f7f\u5176\u6613\u4e8e\u4e0eKubernetes\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u53ef\u4ee5\u4e0e\u4efb\u4f55\u4e1c\u897f\u4e00\u8d77\u4f7f\u7528\uff1b\u5e76\u5c06\u5176\u5f00\u6e90\uff0c\u56e0\u4e3a\u5b83\u63d0\u9ad8\u4e86K8\u4e2d\u5b58\u50a8\u7684\u6280\u672f\u6c34\u5e73\uff0c\u5e76\u4e14\u793e\u533a\u603b\u662f(\u6700\u7ec8)\u53d6\u80dc\u3002\n\u5982\u679c\u60a8\u60f3\u5728\u65b0\u7684\u6216\u73b0\u6709\u7684\u96c6\u7fa4\u4e0a\u8bbe\u7f6eMayastor\uff0c\u8bf7\u67e5\u770b\uff1ahttps://mayastor.gitbook.io/introduction/\u3002\n\u6211\u60f3\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u4e86\u89e3\u6570\u636e\u5e93\u6bcf\u79d2\u6700\u591a\u5904\u7406\u591a\u5c11\u4e2a\u67e5\u8be2(QPS)\u3002\u6211\u4ece\u4e00\u5f00\u59cb\u5c31\u6000\u7591QPS\u7684\u9650\u5236\u56e0\u7d20\u901a\u5e38\u662f\u5b58\u50a8\u5ef6\u8fdf\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u5c0f\u578b\u6d4b\u8bd5\u96c6\u7fa4\u4e2d\u90e8\u7f72Mayastor\u6c60\u548c\u5b58\u50a8\u7c7b\u6e05\u5355\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u6309\u9884\u671f\u5de5\u4f5c\uff0c\u7136\u540e\u8c03\u4f18\u6211\u4eec\u7684\u6d4b\u8bd5\u4ee5\u5c3d\u53ef\u80fd\u5730\u9a71\u52a8\u6570\u636e\u5e93\u3002\u6570\u636e\u5e93\u7684\u6027\u80fd\u7279\u5f81\u4e0e\u5de5\u4f5c\u8d1f\u8f7d\u548c\u8868\u7ed3\u6784\u7684\u7ec6\u8282\u5bc6\u5207\u76f8\u5173\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a\u6311\u6218\u662f\u627e\u51fa\u54ea\u79cd\u5de5\u4f5c\u8d1f\u8f7d\u5c06\u6709\u6548\u5730\u8fd0\u884c\u78c1\u76d8\u3002\nSysbench\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5Linux\u7cfb\u7edf\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u83b7\u5f97\u4e00\u4e9b\u57fa\u51c6\u3002\u4f60\u53ef\u4ee5\u5728https://github.com/akopytov/sysbench\u627e\u5230\u5b83\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u653e\u5165\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u5c06MySQL OLTP\u6d4b\u8bd5\u76f4\u63a5\u6307\u5411\u6211\u4eec\u7684\u6570\u636e\u5e93\u670d\u52a1\u3002\n\u5728\u4f7f\u7528sysbench\u9009\u9879\u4e3a\u8868\u5927\u5c0f\u3001\u8868\u6570\u7b49\u8bbe\u7f6e\u4e86\u4e0d\u540c\u7684\u503c\u4e4b\u540e\uff0c\u6211\u5728\u4f7f\u7528m5ad.xLarge\u8282\u70b9\u7684AWS\u4e2d\u7684\u4e00\u4e2a\u5c0f\u96c6\u7fa4\u4e0a\u5f97\u5230\u4e86\u975e\u5e38\u7a33\u5b9a\u7684\u7ed3\u679c\u3002\u6211\u5df2\u7ecf\u786e\u5b9a\u4e8610\u4e2a\u7ebf\u7a0b\u548c10\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u4e2d\u670910M\u884c\u3002\u5728\u6ca1\u6709\u5bf9MySQL\u8fdb\u884c\u989d\u5916\u8c03\u6574\u7684\u60c5\u51b5\u4e0b\uff0csysbench\u6bcf\u79d2\u53ef\u4ee5\u5904\u7406\u5927\u7ea64300\u4e2a\u67e5\u8be2\uff0c\u5e73\u5747\u5ef6\u8fdf\u4e3a46ms\u3002\u5bf9\u4e8e\u5c0f\u578b\u4e91\u8bbe\u7f6e\u6765\u8bf4\uff0c\u8fd9\u76f8\u5f53\u4e0d\u9519\u3002\n\u4ee5\u6b64\u4e3a\u57fa\u51c6\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u7cfb\u7edf\u4e0a\u6211\u4eec\u53ef\u4ee5\u4ece\u4e2d\u83b7\u76ca\u591a\u5c11\u3002\u82f1\u7279\u5c14\u5236\u9020\u9ad8\u6838\u5904\u7406\u5668\u548c\u975e\u5e38\u5feb\u7684Optane NVMe\u8bbe\u5907\uff0c\u4ed6\u4eec\u6177\u6168\u5730\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4ed6\u4eec\u7684\u57fa\u51c6\u5b9e\u9a8c\u5ba4\u4e00\u6bb5\u65f6\u95f4\u8fdb\u884c\u4e00\u4e9b\u6570\u636e\u5e93\u6d4b\u8bd5\u3002\u6211\u4eec\u6ca1\u6709\u592a\u591a\u7684\u786c\u4ef6\u6781\u5ba2\uff0c\u6211\u4eec\u6709\u4e09\u4e2a\u8fd0\u884c\u57282.2 GHz\u768496\u4e2a\u6838\u5fc3\u76d2\uff0c\u6bd4\u6211\u9700\u8981\u7684\u66f4\u591a\u7684RAM\u548c100 Gb\u7684\u7f51\u7edc\u5c06\u5b83\u4eec\u4e32\u5728\u4e00\u8d77\u3002\u6bcf\u4e2a\u76d2\u90fd\u6709\u4e00\u4e2a\u5c0f\u578bOptane NVMe\u8bbe\u5907\uff0c\u8fd9\u4e2a\u5c0f\u578b\u9a71\u52a8\u5668\u901a\u8fc7ext4\u6587\u4ef6\u7cfb\u7edf\u81f3\u5c11\u80fd\u591f\u652f\u6301400k IOPS\u548c1.7 GB/s\u3002\u771f\u5feb\u554a\u3002\u53d1\u5e03\u7684\u8fd9\u6b3e\u8bbe\u5907\u7684\u89c4\u683c\u7a0d\u9ad8\u4e00\u4e9b(\u7ea6500K IOPS\u548c2 Gb/s)\uff0c\u4f46\u51fa\u4e8e\u6211\u4eec\u7684\u76ee\u7684\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u6700\u9ad8\u6027\u80fd\u3002\n\u5728\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u4e3a\u4e86\u63cf\u8ff0\u8bbe\u7f6e\u7684\u7279\u70b9\uff0c\u6211\u5728\u6570\u636e\u5e93\u4e2d\u6295\u5165\u4e86\u5927\u7ea680\u4e2a\u5185\u6838\uff0c\u5e76\u4f7f\u7528\u5927\u91cf\u7ebf\u7a0b\u5728\u6570\u636e\u5e93\u4e0a\u8fd0\u884csysbench\u3002\u5927\u6982300\u4e2a\u3002\n\u6211\u4ece\u4e00\u4e2a\u8f83\u5c0f\u7684\u8868\u5f00\u59cb\uff0c\u53ea\u662f\u4e3a\u4e86\u5728\u52a0\u8f7d\u9636\u6bb5\u8282\u7701\u4e00\u70b9\u65f6\u95f4\u3002\u6211\u82b1\u4e86\u51e0\u6b21\u8fed\u4ee3\u624d\u8ba9\u6d4b\u8bd5\u8fd0\u884c-\u8c03\u6574\u5230max_Connections\u3002\u8f83\u5c0f\u7684\u8868\u5927\u5c0f\u610f\u5473\u7740\u5b83\u53ef\u80fd\u53ef\u4ee5\u88c5\u5165\u5185\u5b58\uff0c\u4f46\u5b83\u5c06\u5feb\u901f\u6d4b\u8bd5\u6211\u4eec\u7684\u6d4b\u8bd5\u6846\u67b6\u3002\u679c\u7136\uff0c\u8fd0\u884c\u6211\u4eec\u7684OLTP\u6d4b\u8bd5\u5c06\u4f7f\u6211\u4eec\u63a5\u8fd1\u6bcf\u79d210\u4e07\u6b21\u67e5\u8be2\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u771f\u6b63\u7684\u78c1\u76d8\u6d3b\u52a8\u3002\u6211\u4eec\u9700\u8981\u66f4\u591a\u6570\u636e\u6765\u6d4b\u8bd5\u5e95\u5c42\u78c1\u76d8\u3002\n\u6211\u5c06\u8868\u7684\u5927\u5c0f\u63d0\u9ad8\u5230\u6bcf\u4e2a\u886820,000,000\u884c\uff0c\u8c03\u4f18Mayastor\u4ee5\u5728\u6bcf\u4e2a\u8868\u4e0a\u4f7f\u7528\u4e09\u4e2a\u5185\u6838\uff0c\u5e76\u5f00\u59cb\u8c03\u4f18\u6d4b\u8bd5\u4ee5\u83b7\u5f97\u6bcf\u79d2\u7684\u6700\u5927\u67e5\u8be2\u6570\u3002\u4e09\u4e2a\u8868\u4f3c\u4e4e\u8db3\u4ee5\u6ea2\u51fa\u6211\u4eec\u5206\u914d\u7ed9\u5bb9\u5668\u76848G\u5185\u5b58\u3002\u73b0\u5728\uff0c\u5f53\u6211\u68c0\u67e5\u8282\u70b9\u4e0a\u7684\u78c1\u76d8\u7edf\u8ba1\u6570\u636e\u65f6\uff0c\u4f1a\u53d1\u73b0\u6709\u5927\u91cf\u7684\u5b58\u50a8\u6d41\u91cf\u3002\u4f46\u4ecd\u7136\u4e0d\u5230\u6bcf\u79d2\u4e00\u5343\u5146\u5b57\u8282\u3002\u8be5\u7cfb\u7edf\u7684\u901f\u5ea6\u7a33\u5b9a\u572830kqps\u5de6\u53f3\uff0c\u78c1\u76d8\u541e\u5410\u91cf\u7ea6\u4e3a700MB/s\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u5ef6\u8fdf\u7ea6\u4e3a50ms\u3002\u5947\u602a\u7684\u662f\uff0c\u8be5\u6570\u636e\u5e93\u4f7f\u7528\u4e86\u5927\u7ea68\u4e2a\u5185\u6838\u3002\u663e\u7136\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5206\u914d\u5168\u90e880\u4e2a\u3002\n\u5728\u6211\u4eec\u7684\u5408\u6210\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u8d85\u8fc7700MB/s\u7684\u5b58\u50a8\u901f\u5ea6\u3002\u8fd9\u4e0e1.7 Gb/s\u7684\u5cf0\u503c\u6d4b\u8bd5\u6027\u80fd\u76f8\u5dee\u751a\u8fdc\u3002\n\u679c\u7136\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4e2aNVMe\u9a71\u52a8\u5668\u4e0a\u6258\u7ba1\u4e24\u4e2a\u9ad8\u6027\u80fd\u7684\u5173\u7cfb\u6570\u636e\u5e93\u5b9e\u4f8b\uff0c\u5e76\u4e14\u6709\u5907\u7528\u7684cpu\u3002\u5982\u679c\u6211\u5728\u8fd9\u4e2a\u76d2\u5b50\u2026\u4e2d\u6709\u53e6\u4e00\u4e2aNVMe\u9a71\u52a8\u5668\u5c31\u597d\u4e86\u3002\u3002\n\u8fd9\u5927\u7ea6\u662f1.1 GB/\u79d2\uff0c52K IOPS\u3002\u8fd8\u4e0d\u9519\u3002\u5982\u679c\u6211\u4eec\u613f\u610f\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u727a\u7272\u4e00\u70b9\u901f\u5ea6\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5bb9\u7eb3\u4e09\u5206\u4e4b\u4e00\u7684\u4eba\u3002\n\u8981\u63cf\u8ff0\u8fd9\u6837\u7684\u6570\u636e\u5e93\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u5de5\u4f5c\u8981\u505a\u3002\u8fd8\u6709\u673a\u4f1a\u8c03\u67e5\u4e3a\u4ec0\u4e48\u6570\u636e\u5e93\u53ef\u6269\u5c55\u523020-30K IOPS\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u5b58\u50a8\u548c\u7cfb\u7edf\u8d44\u6e90\u53ef\u7528\u3002\n\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u662f-Maystor\u4e3aKubernetes\u5377\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u62bd\u8c61\uff0c\u5e76\u5141\u8bb8\u590d\u5236\u5230\u591a\u4e2a\u8282\u70b9\u3001\u4e3a\u5377\u62cd\u6444\u5feb\u7167\u3001\u52a0\u5bc6\u6d41\u91cf\uff0c\u4ee5\u53ca\u60a8\u901a\u5e38\u5e0c\u671b\u4ece\u4f01\u4e1a\u5b58\u50a8\u4e2d\u83b7\u5f97\u7684\u4e00\u5207\u3002Maystor\u5728\u8fd9\u91cc\u5c55\u793a\u4e86LocalPV\u7c7b\u6027\u80fd\u7684\u524d\u666f-\u81f3\u5c11\u4f7f\u6211\u4eec\u7684\u6570\u636e\u5e93\u7684\u529f\u80fd\u8fbe\u5230\u4e86\u6700\u5927\u914d\u7f6e-\u540c\u65f6\u8fd8\u63d0\u4f9b\u4e86\u6613\u7528\u6027\u548c\u589e\u52a0\u5f39\u6027\u7684\u80fd\u529b\u3002\n\u6700\u540e\uff0c\u5982\u679c\u4f60\u5bf9Percona\u548cOpenEBS\u611f\u5174\u8da3\uff0c\u8fd9\u91cc\u6709\u5f88\u591aOpenEBS\u793e\u533a\u7684\u535a\u5ba2\uff0c\u8fd8\u6709Percona\u7684\u9996\u5e2d\u6280\u672f\u5b98\u6700\u8fd1\u5199\u7684\u4e00\u7bc7\u5173\u4e8e\u4f7f\u7528OpenEBS LocalPV\u4f5c\u4e3a\u4ed6\u4eec\u9996\u9009\u7684LocalPV\u89e3\u51b3\u65b9\u6848\u7684\u535a\u5ba2\uff1ahttps://www.percona.com/blog/2020/10/01/deploying-percona-kubernetes-operators-with-openebs-local-storage/\u3002\nPercona\u793e\u533a\u8bba\u575b\u3001OpenEBS\u548cKubernetes\u793e\u533a\u7684\u6570\u636e\u8d8a\u6765\u8d8a\u91cd\u53e0\uff0c\u6211\u5e0c\u671b\u5e76\u671f\u5f85\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e26\u6765\u66f4\u591a\u7684\u5408\u4f5c\u3002\u5feb\u6765\u770b\u770b\uff0c\u81ea\u5df1\u6765\u770b\u770bMayastor\uff0c\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u4e2d\u8ba9\u6211\u4eec\u77e5\u9053Mayastor\u662f\u5982\u4f55\u4e3a\u60a8\u7684\u7528\u4f8b\u5de5\u4f5c\u7684\uff01\n\u5e03\u83b1\u6069\u00b7\u9a6c\u897f\u68ee\u82b1\u4e86\u4e8c\u5341\u5e74\u7684\u65f6\u95f4\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u6bd4\u5982\u652f\u6301\u5f00\u53d1\u4eba\u5458\u3001\u8c03\u4f18\u7f51\u7edc\u548c\u7f16\u5199\u5de5\u5177\u3002\u4f5c\u4e3a\u4e00\u540d\u4e13\u6ce8\u4e8e\u5ba2\u6237\u7684\u8fde\u7eed\u521b\u4e1a\u8005\uff0c\u5e03\u83b1\u6069\u66fe\u5728\u6280\u672f\u65b9\u9762\u5e2e\u52a9\u8fc7\u591a\u5bb6\u521d\u521b\u4f01\u4e1a\u3002\u4f60\u53ef\u4ee5\u5728https://blog.mayadata.io/author/brian-matheson.\u4e0a\u9605\u8bfb\u66f4\u591a\u5e03\u83b1\u6069\u7684\u535a\u5ba2\u6587\u7ae0", "note_en": "At MayaData we like new tech. Tech that makes our databases perform better. Tech like  lockless ring buffers,  NVMe-oF, and  Kubernetes. In this blog post we\u2019re going to see those technologies at work to give us awesome block storage performance with flexibility and simple operations.\n  Mayastor is new tech, it\u2019s fast, and it\u2019s based on  SPDK. Why is SPDK exciting? It\u2019s a new generation in storage software, designed for super high speed low latency  NVMe devices. I\u2019ll save you the scrolling and just tell you I believe Mayastor was able to max out the practical throughput of the nvme device I used for my benchmark, allowing for multiple high performance (20kqps+) database instances on a single node. Perfect for a database farm in Kubernetes\n  Open source relational databases are a staple component for app developers. People use them all the time for all kinds of software projects. It\u2019s easy to build relationships between different groups of data, the syntax is well known, and they\u2019ve been around for as long as modern computing.\u00a0 When a dev wants a relational database to hack on, odds are good that it\u2019s going to be  Postgres or  MySQL. They\u2019re Free. They\u2019re open source. They\u2019ve both been quite stable for a long time, and they both run in Kubernetes just great.\u00a0 The good folks at Percona make containerized, production ready versions of these databases, and we\u2019re going to use their  Percona Distribution for MySQL for the following tests.\n  So what is the difficulty with running relational databases, or databases in general, inside of Kubernetes?\u00a0 Given all the features of Kubernetes for managing highly available application deployments: Automation with control, Common declarative configuration interface, and build-in observability, one would think Databases are the application to deploy to it.\n   The trick is, databases are notoriously disk intensive and latency sensitive. The reason this has an impact on your Kubernetes deployments is that storage support in stock settings and untuned K8s clusters is rudimentary at best. That\u2019s created a number of projects that are out to provide for storage in K8s projects, including, of course, the popular OpenEBS project.\n  In this post I\u2019m going to investigate the newest of the storage engines that comprise the data plane for OpenEBS. As a challenge, I\u2019d like to be able to achieve 20,000 queries per second out of a MySQL database using this storage engine for block storage underneath.\n Now, getting to 20kqps could be easy with the right dataset. But I want to achieve this with data that\u2019s significantly larger than available RAM. In that scenario, 20kqps is pretty fast (as you can see below by the disk traffic and cpu load it generates).\n There are a number of great options available for deploying MySQL in Kubernetes, but for this test we really just want a good, high performance database to start with. I won\u2019t really need fancy DBaaS functionality, an operator to take care of backups, or anything of the sort. We\u2019ll start from scratch with Percona\u2019s MySQL container, and build a little deployment manifest for it. Now, maybe you\u2019re thinking: \u201cdon\u2019t you mean a stateful set?\u201d But no, we\u2019re going to use a deployment for this. Simple and easy to configure alongside of Container Attached Storage.\n The deployment pictured references an external volume, vol2. Now we could create a PV for this on the local system, but then if our MySQL instance gets scheduled on a different machine, the storage won\u2019t be present.\n   Mayastor is the latest storage engine for OpenEBS and MayaData\u2019s Kubera offering. Mayastor represents the state-of-the-art in feature-rich storage for Linux systems. Mayastor creates virtual volumes that are backed by fast NVMe disks,\u00a0and exports those volumes over the super-fast NVMf protocol. It\u2019s a fresh implementation of the Container Attached Storage model. By  CAS, I mean it\u2019s purpose built for the multi-tenant distributed world of the cloud. CAS means each workload gets its own storage system, with knobs for tuning and everything. The beauty of the CAS architecture is that it decouples your apps from their storage. You can attach to a disk locally or via NVMf or iSCSI.\n Mayastor is CAS and it is purpose built to support cloud native workloads at speed with very little overhead. At MayaData we wrote it in Rust; we worked with Intel to implement new breakthrough technology called SPDK; made it easy to use with Kubernetes and possible to use with anything; and open-sourced it because, well, it improves the state of the art of storage in k8s and community always wins (eventually).\n If you\u2019d like to set up Mayastor on a new or existing cluster, have a look at:  https://mayastor.gitbook.io/introduction/\n  The first thing I want to do is get an idea of how many queries per second (QPS) at which the DB maxes out. My suspicion at the outset is that the limiter for QPS is typically storage latency. We can deploy our Mayastor pool and storage class manifests in a small test cluster just to make sure they\u2019re working as expected, and then tune our test to drive the DB as hard as we can. Performance characteristics of databases are very much tied to the specifics of the workload and table structure. So the first challenge here is to sort out what kind of workload is going to exercise the disk effectively.\n Sysbench is a great tool for exercising various aspects of Linux systems, and it includes some database tests we can use to get some baselines.  https://github.com/akopytov/sysbench is where you can find it. We can put it in a container and point that mysql OLTP test right at our database service.\n After a little bit of experimentation with sysbench options to set different values for the table size, number of tables, etc., I arrived at very stable results on a small cluster in AWS using m5ad.xlarge nodes. I\u2019ve settled on 10 threads and 10 tables, with 10M rows in each table. With no additional tuning on MySQL, sysbench settles into about 4300 queries per second with an average latency at 46ms. Pretty good for a small cloud setup.\n With that as a baseline, let\u2019s see how much we can get out of it on a larger system. Intel makes high core-count cpus and very fast Optane NVMe devices, and they\u2019ve generously allowed us to use their benchmarking labs for a little while for some database testing. Without going into too much hardware geekery, we have three 96 core boxes running at 2.2Ghz with more RAM than I need and 100Gb networking to string them together. Each box has a small Optane NVMe device, and this single little drive is capable of at least 400k iops and 1.7GB/s through an ext4 filesystem. That\u2019s fast. The published specs for this device are a little bit higher (about 500k iops and 2GB/s) but we\u2019ll take this to be peak perf for our purposes.\n  For the first test, just to characterize the setup, I threw 80 or so cores at the database, and ran sysbench against it with a whole lot of threads. Like 300.\n I started with a smaller table size just to save a little time on the load phase.\u00a0 It took a few iterations to get the test to run \u2013 adjustments to  max_connections. The smaller table size means it might fit into memory, but it\u2019ll test our test framework quickly.\u00a0 Sure enough, running our OLTP test gets us close to 100k queries per second. But, there\u2019s no real disk activity. We need more data in order to test the underlying disks.\n I cranked up the table size to 20,000,000 rows per table, tuned Mayastor to use three of the cores on each box, and started tuning the test to get max queries per second out of it. Three tables seem to be enough to overflow the 8G of RAM we have allocated to the container. Now when I check the disk stats on the node, there\u2019s plenty of storage traffic. Still less than a gigabyte per second though. The system settles down into a comfortably speedy 30kqps or thereabouts, with disk throughput right around 700MB/s and a latency right around 50ms per query. Curiously the database is using about 8 cores. Clearly we don\u2019t need to allocate all 80.\n We\u2019ve seen more than 700MB/s out of the storage already from our synthetic tests. That\u2019s pretty far off of the peak measured perf of 1.7GB/s.\n  Sure enough, this system is fast enough to host two high performance relational database instances on the same nvme drive, with cpu to spare.\u00a0 If only I had another one of those NVMe drives in this box\u2026.\n  That\u2019s about 1.1GB/s, with 52k IOPs. Not bad. We might even be able to fit a third in if we\u2019re willing to sacrifice a little bit of speed across all the instances.\n There\u2019s more work to be done to characterize database workloads like this one. There\u2019s also an opportunity to investigate why the database scales up to 20-30k IOPs but leaves some storage and system resources available.\n Perhaps most importantly \u2013 Maystor provides a complete abstraction for kubernetes volumes, and allows for replicating to multiple nodes, snapshotting volumes, encrypting traffic, and generally everything you\u2019ve come to expect from enterprise storage.\u00a0 Mayastor is showing the promise here of LocalPV like performance \u2013 at least maxing out the capabilities of our DB as configured \u2013 while also providing the ease of use and ability to add resilience.\n Lastly, if you are interested in Percona and OpenEBS, there are a lot of blogs from the OpenEBS community and a recent one by the CTO of Percona on the use of OpenEBS LocalPV as their preferred LocalPV solution here:\u00a0  https://www.percona.com/blog/2020/10/01/deploying-percona-kubernetes-operators-with-openebs-local-storage/\n The  Percona Community Forum,  OpenEBS, and  Data on Kubernetes \u00a0communities are increasingly overlapping and I hope and expect this write up will result in yet more collaboration. Come check out Check out  Mayastor on your own and let us know how Mayastor works for your use case in the comments below!\n Brian Matheson has spent twenty years doing things like supporting developers, tuning networks, and writing tools. A serial entrepreneur with an intense customer focus, Brian has helped a number of startups in a technical capacity. You can read more of Brian\u2019s blog posts at  https://blog.mayadata.io/author/brian-matheson.", "posttime": "2020-11-07 11:24:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e93\u4f2f,lightning,\u6570\u636e\u5e93", "title": "\u5e02\u957f\uff1a\u5e93\u4f2f\u5185\u65af\u95ea\u7535\u822c\u7684\u5b58\u50a8", "title_en": "Mayastor: Lightning Fast Storage for Kubernetes", "transed": 1, "url": "https://www.percona.com/community-blog/2020/10/23/mayastor-lightning-fast-storage-for-kubernetes/", "via": "", "real_tags": ["\u5e93\u4f2f", "lightning", "\u6570\u636e\u5e93"]}, {"category": "", "categoryclass": "", "imagename": "ba20b2ca998cfddefca72488e5196223.png", "infoid": 1033646, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "4\u5e74\u591a\u524d\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u9891\u57df\u56fe\u50cf\u7684\u7b80\u77ed\u535a\u5ba2\u6587\u7ae0\uff1ahttps://blog.demofox.org/2016/07/28/fourier-transform-and-inverse-of-images/\u3002\n\u73b0\u5728\u662f\u65f6\u5019\u518d\u56de\u987e\u4e00\u4e0b\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5e76\u8865\u5145\u4e00\u4e9b\u4e1c\u897f\u4e86\u3002\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5085\u91cc\u53f6\u53d8\u6362\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5b83\u53ef\u4ee5\u5c06\u56fe\u50cf\u6216\u5176\u4ed6\u6570\u636e\u8f6c\u6362\u5230\u9891\u57df\uff0c\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\uff1ahttps://blog.demofox.org/2016/08/11/understanding-the-discrete-fourier-transform/\u3002\n\u5f53\u60a8\u5c06\u56fe\u50cf\u53d8\u6362\u5230\u9891\u57df\u65f6\uff0c\u60a8\u4f1a\u5f97\u5230\u6bcf\u4e2a\u50cf\u7d20\u7684\u590d\u6570(\u5177\u6709\u5b9e\u90e8\u548c\u865a\u90e8)\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u590d\u6570\u6765\u83b7\u53d6\u6709\u5173\u5236\u4f5c\u56fe\u50cf\u7684\u9891\u7387(\u6587\u5b57\u6b63\u5f26\u6ce2\u548c\u4f59\u5f26\u6ce2)\u7684\u4fe1\u606f\u3002\u4e00\u6761\u4fe1\u606f\u662f\u8be5\u6ce2\u7684\u201c\u76f8\u4f4d\u201d\u6216\u8d77\u59cb\u89d2\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528atan2(\u865a\u6570\uff0c\u5b9e\u6570)\u6765\u83b7\u5f97\u76f8\u4f4d\u3002\u53e6\u4e00\u6761\u4fe1\u606f\u662f\u8be5\u6ce2\u7684\u201c\u632f\u5e45\u201d\uff0c\u6216\u8005\u8bf4\u8be5\u6ce2\u5728\u56fe\u50cf\u4e2d\u6709\u591a\u5927\u3002\u632f\u5e45\u662f2D\u5411\u91cf(\u5b9e\u6570\u3001\u865a\u6570)\u7684\u957f\u5ea6\u3002\n\u90a3\u4e48\uff0c\u8fdb\u884c\u56fe\u50cf\u538b\u7f29\u7684\u4e00\u4e2a\u5feb\u901f\u800c\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06\u56fe\u50cf\u8f6c\u6362\u5230\u9891\u7387\u7a7a\u95f4\uff0c\u627e\u5230\u6700\u4f4e\u7684\u632f\u5e45\u9891\u7387\uff0c\u7136\u540e\u4e22\u5f03\u5b83\u4eec--\u5b57\u9762\u610f\u601d\u662f\u5c06\u590d\u6570\u6e05\u96f6\u3002\u5982\u679c\u4f60\u4e22\u5f03\u4e86\u8db3\u591f\u591a\u7684\u56fe\u50cf\uff0c\u90a3\u4e48\u63cf\u8ff0\u56fe\u50cf\u7684\u9891\u7387\u5185\u5bb9\u6240\u9700\u7684\u6570\u636e\u5c31\u4f1a\u6bd4\u56fe\u50cf\u7684\u50cf\u7d20\u5c11\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u538b\u7f29\u56fe\u50cf\u4e86\u3002\n\u4e0d\u8fc7\uff0c\u4f60\u5728\u4e22\u5f03\u9891\u7387\u65b9\u9762\u8d8a\u79ef\u6781\uff0c\u56fe\u50cf\u8d28\u91cf\u5c31\u4f1a\u4e0b\u964d\u5f97\u8d8a\u591a\u3002\u8fd9\u662f\u4e00\u79cd\u201c\u6709\u635f\u201d\u538b\u7f29\uff0c\u662fjpg\u56fe\u50cf\u538b\u7f29\u65b9\u5f0f\u7684\u7b80\u5316\u7248\u672c\u3002\u6709\u635f\u538b\u7f29\u4e0ePNG\u6587\u4ef6\u4e2d\u7684\u65e0\u635f\u538b\u7f29\u5f62\u6210\u5bf9\u6bd4\uff0cPNG\u6587\u4ef6\u4f7f\u7528\u66f4\u50cf.zip\u538b\u7f29\u7b97\u6cd5\u6765\u5b8c\u7f8e\u5730\u7f16\u7801\u6240\u6709\u6e90\u6570\u636e\u3002\n\u5728\u672c\u6587\u9644\u5e26\u7684\u4ee3\u7801\u4e2d\uff0cDoTestZeroing()\u51fd\u6570\u629b\u51fa\u6700\u4f4e10%\u7684\u632f\u5e45\u9891\u7387\uff0c\u7136\u540e\u662f\u6700\u4f4e\u768420%\uff0c\u7136\u540e\u662f30%\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u523090%\u3002\u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c\u5b83\u5c06\u6240\u6709\u590d\u9891\u7387\u503c\u5199\u51fa\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528.zip\u4f5c\u4e3a\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u7684\u65b9\u6cd5\u6765\u538b\u7f29\u8be5\u6587\u4ef6\u3002\u968f\u7740\u6570\u636e\u53d8\u5f97\u66f4\u591a\u96f6\uff0c\u5b83\u53d8\u5f97\u66f4\u53ef\u538b\u7f29\u3002\n\u4e0b\u56fe\u9876\u884c\u663e\u793a\u4e86\u539f\u59cb512\u00d71024\u56fe\u50cf\u3001DFT\u5e45\u5ea6\u4fe1\u606f\u548cDFT\u76f8\u4f4d\u4fe1\u606f\u3002\u6700\u4e0b\u9762\u4e00\u884c\u663e\u793a\u7684\u662f\u76f8\u540c\u7684\uff0c\u4f46\u5bf9\u4e8e\u5df2\u7ecf\u4e22\u5f03\u4e86\u8f83\u4f4e90%\u632f\u5e45\u9891\u7387\u7684\u56fe\u50cf\u3002\u4e24\u8005(\u672a\u538b\u7f29)\u7684DFT\u6570\u636e\u90fd\u662f8MB\uff0c\u9876\u90e8\u56fe\u7247\u538b\u7f29\u52307.7MB\uff0c\u4f46\u5e95\u90e8\u56fe\u7247\u53ea\u538b\u7f29\u5230847KB\u3002\u5229\u7528\u9006DFT\u5c06\u4fee\u6539\u540e\u7684\u5e95\u90e8\u9891\u7387\u6570\u636e\u6062\u590d\u4e3a\u56fe\u50cf\u3002\n\u8fd9\u662f\u53e6\u4e00\u5e45512\u00d7512\u7684\u56fe\u50cf\uff0c\u5176DFT\u662f4MB\u672a\u538b\u7f29\u7684\u3002\u4e0a\u56fe\u7684DFT\u6570\u636e\u538b\u7f29\u52303.83MB\uff0c\u4e0b\u56fe\u538b\u7f29\u5230438KB\u3002\n\u867d\u7136\u76f8\u5f53\u6709\u6548\uff0c\u4f46\u5bf9\u4e8e\u57fa\u4e8e\u9891\u7387\u7684\u56fe\u50cf\u538b\u7f29\u6765\u8bf4\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u76f8\u5f53\u5e7c\u7a1a\u7684\u65b9\u5f0f\uff01\n\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u4f7f\u7528\u201c\u79bb\u6563\u4f59\u5f26\u53d8\u6362\u201d\u6216DCT\u800c\u4e0d\u662fDFT\uff0c\u56e0\u4e3a\u5b83\u503e\u5411\u4e8e\u4f7f\u66f4\u591a\u7684\u9891\u7387\u5e45\u5ea6\u4e3a\u96f6\uff0c\u5c06\u6570\u636e\u5408\u5e76\u5230\u8f83\u5c11\u7684\u91cd\u8981\u9891\u7387\uff0c\u8fd9\u610f\u5473\u7740\u5728\u4f60\u5f00\u59cb\u4e22\u5f03\u9891\u7387\u4e4b\u524d\uff0c\u5b83\u5df2\u7ecf\u5f88\u5c0f\u4e86\u3002DCT\u548cDFT\u8fd8\u5047\u88c5\u56fe\u50cf\u6c38\u8fdc\u5728\u7ee7\u7eed\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u505c\u7559\u5728\u8fb9\u7f18\u3002DFT\u7684\u4f5c\u7528\u5c31\u50cf\u662f\u4ee5\u5e73\u94fa\u7684\u65b9\u5f0f\u91cd\u590d\u8fd9\u4e9b\u56fe\u50cf\uff0c\u800cDCT\u7684\u4f5c\u7528\u5c31\u50cf\u5b83\u4eec\u5728\u6bcf\u6b21\u91cd\u590d\u65f6\u90fd\u88ab\u955c\u50cf\u4e00\u6837\uff0c\u8fd9\u4e5f\u662f\u56fe\u50cf\u8d28\u91cf\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5c5e\u6027\u3002\n\u5176\u4ed6\u65b9\u6cd5\u5728\u8fdb\u884c\u57fa\u4e8e\u9891\u7387\u7684\u538b\u7f29\u4e4b\u524d\u5c06\u56fe\u50cf\u5206\u89e3\u6210\u5757\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5c0f\u6ce2\u6765\u538b\u7f29\u56fe\u50cf\uff0c\u6216\u8005\u4f7f\u7528\u4e3b\u6210\u5206\u5206\u6790\u6216\u5947\u5f02\u503c\u5206\u89e3\u3002\u4f60\u4e5f\u53ef\u4ee5\u7528\u4f60\u60f3\u8981\u7684\u201c\u4efb\u4f55\u201d\u57fa\u51fd\u6570\u6765\u62df\u5408\u4f60\u7684\u56fe\u50cf\uff0c\u4f7f\u7528L1\u8303\u6570\u6b63\u5219\u5316\u5c06\u4f60\u7684\u62df\u5408\u7cfb\u6570\u63d0\u5347\u4e3a\u96f6\uff0c\u4f7f\u62df\u5408\u6570\u636e\u4e0d\u90a3\u4e48\u7a00\u758f\uff0c\u5c31\u50cfDCT\u548cDFT\u76f8\u6bd4\u6240\u505a\u7684\u90a3\u6837\u3002\n\u4f60\u53ef\u4ee5\u505a\u7684\u53e6\u4e00\u4ef6\u4e8b\u662f\u4f7f\u7528\u538b\u7f29\u4f20\u611f\u8df3\u8fc7\u51e0\u4e2a\u6b65\u9aa4\uff1a\u4f60\u4ece\u56fe\u50cf\u4e2d\u53d6\u51e0\u4e2a\u968f\u673a\u4f46\u5927\u81f4\u5747\u5300\u7684\u6837\u672c(\u84dd\u8272\u566a\u58f0\u6216LD\u5c06\u662f\u5f88\u597d\u7684\u9009\u62e9)\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u4f8b\u5982\u6c42\u51fa\u5085\u7acb\u53f6\u57fa\u7cfb\u6570(DFT\uff01)\u3002\u4e0e\u4f60\u91c7\u96c6\u7684\u7a00\u758f/\u4e0d\u89c4\u5219\u6570\u636e\u6837\u672c\u76f8\u5339\u914d\u3002\u8fd9\u5c31\u50cf\u6254\u6389\u4f4e\u9891\uff0c\u4f46\u4e0d\u5fc5\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u8fdb\u884cDFT\uff0c\u7136\u540e\u518d\u6254\u6389\u3002\u5b83\u4ece\u7a00\u758f\u6570\u636e\u5f00\u59cb\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5339\u914d\u3002\n\u5df4\u7279\u00b7\u6c83\u4f26\u65af\u57fa(Bart Wronski)\u5728\u4ed6\u7684\u535a\u5ba2\u4e0a\u6709\u51e0\u7bc7\u5173\u4e8e\u8fd9\u4e00\u9886\u57df\u7684\u6587\u7ae0\uff0c\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u8bf7\u9605\u8bfb\u5b83\u4eec\uff1ahttps://bartwronski.com/2020/08/30/compressing-pbr-texture-sets-with-sparsity-and-dictionary-learning/\u3002\n\u8fd9\u662f\u4e00\u672c\u5f88\u68d2\u7684\u8bfb\u7269\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528L1\u6b63\u5219\u5316\u6765\u62df\u5408\u6570\u636e\uff0c\u4ee5\u53ca\u60a8\u53ef\u80fd\u611f\u5174\u8da3\u7684\u6240\u6709\u76f8\u5173\u4fe1\u606f\uff1ahttps://www.analyticsvidhya.com/blog/2017/06/a-comprehensive-guide-for-linear-ridge-and-lasso-regression/\u3002\n\u8fd9\u4e2a\u89c6\u9891\u5f88\u597d\u5730\u6982\u8ff0\u4e86\u6211\u63d0\u5230\u7684\u5176\u4ed6\u4e1c\u897f\u7684\u968f\u673a\u6293\u5305\uff1ahttps://www.youtube.com/watch?v=aHCyHbRIz44&amp\uff1bfeature=youtu.be\n\u5728\u6211\u4e0a\u4e00\u7bc7\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5c55\u793a\u4e86\u5982\u4f55\u4e22\u5f03\u8ddd\u79bb\u56fe\u50cf\u4e2d\u5fc3\u4e00\u5b9a\u8ddd\u79bb\u7684\u9891\u7387\uff0c\u5bf9\u56fe\u50cf\u8fdb\u884c\u4f4e\u901a\u6ee4\u6ce2\uff0c\u4e5f\u5c31\u662f\u6a21\u7cca\u56fe\u50cf\u3002\u6211\u8fd8\u5c55\u793a\u4e86\uff0c\u5982\u679c\u4f60\u6254\u6389\u6bd4\u4e00\u5b9a\u8ddd\u79bb\u66f4\u8fd1\u7684\u9891\u7387\uff0c\u5b83\u4f1a\u5bf9\u56fe\u50cf\u8fdb\u884c\u9ad8\u901a\u6ee4\u6ce2\uff0c\u4e5f\u5c31\u662f\u9510\u5316\u56fe\u50cf\u3002\n\u4e22\u5f03\u57fa\u4e8e\u8ddd\u79bb\u7684\u9891\u7387\u6570\u636e\u7b49\u540c\u4e8e\u5c06\u9891\u7387\u6570\u636e\u4e58\u4ee5\u63a9\u7801\uff0c\u63a9\u7801\u5728\u67d0\u4e9b\u5730\u65b9\u4e3a1.0\uff0c\u5728\u5176\u4ed6\u5730\u65b9\u4e3a0.0\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u6982\u62ec\u4e3a\u5c06\u9891\u7387\u4e58\u4ee5\u4efb\u4f55\u6570\u5b57\u3002\u5728\u4e0b\u9762\u6211\u5c06\u4e58\u6cd5\u9650\u5236\u57280\u52301\u4e4b\u95f4\uff0c\u4f46\u662f\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u7edd\u5bf9\u53ef\u4ee5\u9009\u62e9\u66f4\u5927\u7684\u6570\u5b57\uff0c\u751a\u81f3\u662f\u8d1f\u6570\u3002\n\u4e0b\u9762\u663e\u793a\u4e86\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\u56fe\u50cf\u76f8\u4e58\u7684\u6a21\u5f0f\u3002\u9876\u884c\u4ece\u5de6\u5230\u53f3\u662f\u4e00\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u66f4\u5f3a\u7684\u4f4e\u901a\u6ee4\u6ce2\u5668(\u53bb\u6389\u4e86\u66f4\u591a\u7684\u9ad8\u9891)\uff0c\u6700\u540e\u662f\u4e00\u4e2a\u9677\u6ce2\u6ee4\u6ce2\u5668\u6216\u201c\u5e26\u963b\u201d\u6ee4\u6ce2\u5668\u3002\u6700\u4e0b\u9762\u7684\u4e00\u884c\u662f\u8865\u7801\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4ece\u767d\u8272(1.0)\u4e2d\u51cf\u53bb\u56fe\u50cf\u5f97\u5230\u5e95\u90e8\u3002\u4ece\u5de6\u5230\u53f3\uff0c\u6700\u4e0b\u9762\u4e00\u884c\u662f\u4e00\u4e2a\u9ad8\u901a\u6ee4\u6ce2\u5668\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u8f83\u5f31\u7684\u9ad8\u901a\u6ee4\u6ce2\u5668(\u8ba9\u66f4\u591a\u7684\u4f4e\u9891\u8fdb\u5165)\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u53ea\u5141\u8bb8\u7279\u5b9a\u9891\u7387\u901a\u8fc7\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\u3002\n\u9996\u5148\u5173\u6ce8\u7684\u662f\u201c\u6d1b\u57fa\u548c\u827e\u4f26\u201d\u7684\u7167\u7247\u3002\u4ece\u9876\u90e8\u7684\u56fe\u7247\u4e2d\u8fc7\u6ee4\u51fa\u7684\u9891\u7387\u548c\u5b9e\u9645\u56fe\u50cf\u503c\u51fa\u73b0\u5728\u5e95\u90e8\u7684\u56fe\u7247\u4e2d\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a21\u7cca\u548c\u9510\u5316(\u548c\u8fb9\u7f18\u68c0\u6d4b)\u662f\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\u3002\u91cd\u8981\u7684\u662f\u4f60\u6254\u6389\u4e86\u54ea\u90e8\u5206\uff0c\u4fdd\u7559\u4e86\u54ea\u90e8\u5206\u3002\n\u8fd9\u662f\u9891\u7387\u7684\u5927\u5c0f\u770b\u8d77\u6765\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u8bf7\u6ce8\u610f\uff0c\u6bcf\u5e45\u56fe\u50cf\u90fd\u6709\u7ecf\u8fc7\u5bf9\u6570\u51fd\u6570\u7684\u5e45\u503c\uff0c\u5e76\u4e14\u4e5f\u5f52\u4e00\u5316\u4e3a1.0max\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5373\u4f7f\u9ad8\u901a\u6ee4\u6ce2\u5668(\u548c\u5e26\u901a)\u4f1a\u4f7f\u4e2d\u95f4\u90e8\u5206\u53d8\u6697\uff0c\u4f46\u770b\u8d77\u6765\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u91cd\u6574\u5316\u7a0d\u5fae\u63a9\u76d6\u4e86\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u4e2d\u95f4\u662f\u6700\u4eae\u7684(\u632f\u5e45\u6700\u5927)\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u6700\u540e\u4e00\u90e8\u5206\u4e2d\u629b\u51fa\u6700\u4f4e\u632f\u5e45\u65f6\u770b\u5230\u7684\u3002\n\u4ee5\u4e0b\u662f\u5e94\u7528\u4e8e\u98ce\u666f\u56fe\u50cf\u7684\u76f8\u540c\u6ee4\u955c\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u53f3\u4e0a\u89d2\u7684\u56fe\u7247\u4e2d\u6709\u4e00\u4e9b\u5947\u602a\u7684\u56fe\u6848(\u70b9\u51fb\u56fe\u7247\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u9009\u9879\u5361\u4e2d\u67e5\u770b\u5b8c\u6574\u5c3a\u5bf8)\u3002\n\u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u8ddd\u79bb\u51fd\u6570\u6765\u5236\u4f5c\u201c\u56fe\u50cf\u201d\uff0c\u4f7f\u503c\u4e58\u4ee5\u7279\u5b9a\u7684\u9891\u7387\uff0c\u4ece\u800c\u6ee4\u9664\u7279\u5b9a\u7684\u9891\u7387\u3002\n\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u62cd\u6444\u4e24\u5e45\u56fe\u50cf\uff0c\u5c06\u5b83\u4eec\u653e\u5165\u9891\u7387\u7a7a\u95f4\uff0c\u76f8\u4e58\uff0c\u518d\u4ece\u9891\u7387\u7a7a\u95f4\u4e2d\u53d6\u51fa\uff0c\u770b\u770b\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\u3002\n\u6709\u4e00\u79cd\u53eb\u505a\u201c\u5377\u79ef\u5b9a\u7406\u201d\u7684\u4e1c\u897f\u544a\u8bc9\u6211\u4eec\uff0c\u9891\u57df\u4e2d\u7684\u4e58\u6cd5\u4e0e\u56fe\u50cf\u4e4b\u95f4\u7684\u5377\u79ef\u662f\u4e00\u6837\u7684\u3002\u5377\u79ef\u662f\u4e00\u79cd\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u60a8\u5fc5\u987b\u5faa\u73af\u904d\u5386\u4e00\u5e45\u56fe\u50cf\u7684\u6240\u6709\u50cf\u7d20\uff0c\u5e76\u5728\u6bcf\u4e2a\u50cf\u7d20\u5904\u5faa\u73af\u904d\u5386\u53e6\u4e00\u5e45\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e9b\u4e58\u6cd5\u548c\u52a0\u6cd5\u8fd0\u7b97\u3002\u5377\u79ef\u7684\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u6240\u4ee5\u628a\u4f60\u60f3\u8981\u5377\u79ef\u5230\u9891\u57df\u7684\u4e24\u5e45\u56fe\u50cf\u76f8\u4e58\u5728\u4e00\u8d77\uff0c\u7136\u540e\u628a\u5b83\u4eec\u4ece\u9891\u7387\u7a7a\u95f4\u4e2d\u62ff\u51fa\u6765\u518d\u6b21\u6210\u4e3a\u56fe\u50cf\uff0c\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u66f4\u5feb\u3002\n\u5377\u79ef\u5728\u56fe\u5f62\u4e2d\u88ab\u7528\u4e8e\u6a21\u7cca\u3001\u9510\u5316\u6216\u5e94\u7528bokeh\u6765\u83b7\u5f97\u666f\u6df1\uff0c\u6240\u4ee5\u52a0\u901f\u5b83\u4f1a\u6709\u5f88\u5927\u7684\u5e2e\u52a9\uff01\u5377\u79ef\u4e5f\u88ab\u7528\u4e8e\u97f3\u9891\u4e2d\uff0c\u6bd4\u5982\u6df7\u54cd\uff0c\u5b83\u4f7f\u97f3\u9891\u542c\u8d77\u6765\u50cf\u662f\u5728\u6d1e\u7a74\u6216\u5927\u6559\u5802\u91cc\u64ad\u653e\u7684\u58f0\u97f3\u3002\n\u6280\u672f\u8bf4\u660e\uff1a\u201c\u5185\u6838\u201d\u56fe\u7247\u9700\u8981\u5728\u50cf\u7d20(0\uff0c0)\u5904\u5c45\u4e2d\uff0c\u800c\u4e0d\u662f\u56fe\u7247\u7684\u4e2d\u5fc3\u3002\u53e6\u5916\uff0c\u5185\u6838\u56fe\u50cf\u5e94\u8be5\u88ab\u89c4\u683c\u5316\uff0c\u8fd9\u6837\u5b83\u7684\u6240\u6709\u50cf\u7d20\u52a0\u8d77\u6765\u5c31\u662f1.0\u3002\u5728\u8fdb\u884cDFT\u4e4b\u524d\uff0c\u60a8\u8fd8\u9700\u8981\u5c06\u6e90\u56fe\u50cf\u548c\u5185\u6838\u56fe\u50cf\u90fd\u586b\u96f6(\u6dfb\u52a0\u9ed1\u8272\u50cf\u7d20\u8fb9\u6846)\u4e3ax\u548cy\u8f74\u4e0a\u7684\u6e90+\u5185\u6838+1\u7684\u5927\u5c0f\uff0c\u4ee5\u4f7f\u5b83\u4eec\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u5e76\u907f\u514d\u5305\u88c5\u95ee\u9898\u3002\u5728\u5b8c\u6210\u4e58\u6cd5\u548c\u9006DFT\u540e\uff0c\u53ef\u4ee5\u518d\u6b21\u79fb\u9664\u9ed1\u8272\u8fb9\u6846\u3002\n\u4ee5\u4e0b\u662f\u6211\u4eec\u5c06\u7528\u4f5c\u5185\u6838\u56fe\u50cf\u76844\u4e2a\u56fe\u50cf\uff1a\u4e00\u4e2a\u661f\u661f\u3001\u4e00\u4e2a\u52a0\u53f7\u3001\u4e00\u4e2a\u5706\u5708\u548c\u4e00\u4e2a\u6591\u70b9\u3002\n\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e9b\u56fe\u50cf\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5448\u73b0\u51fa\u5185\u6838\u2026\u7684\u54c1\u8d28\u3002\u661f\u5f62\u7684\u5f88\u6709\u68f1\u89d2\uff0c\u6b63\u7684\u5f88\u201c\u6b63\u50cf\u201d\uff0c\u5706\u5f62\u7684\u5f88\u5706\u3002\u8bf7\u6ce8\u610f\uff0c\u6591\u70b9\u7684\u884c\u4e3a\u975e\u5e38\u50cf\u4e00\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\uff01\u5728\u9891\u7387\u7a7a\u95f4\u4e2d\uff0c\u5b83\u770b\u8d77\u6765\u786e\u5b9e\u50cf\u4e00\u4e2a\uff0c\u6240\u4ee5\u8fd9\u662f\u6709\u9053\u7406\u7684\uff1a\n\u5982\u679c\u4f60\u89c9\u5f97\u5728\u56fe\u50cf\u4e0a\u505a\u5377\u79ef\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u4f60\u5e94\u8be5\u542c\u542c\u97f3\u9891\u4e2d\u4f7f\u7528\u7684\u5377\u79ef\u3002\u5f53\u7528\u4e8e\u6df7\u54cd\u65f6\uff0c\u5b83\u542c\u8d77\u6765\u5f88\u597d\u542c\uff0c\u800c\u4e14\u542c\u8d77\u6765\u5f88\u6b63\u786e\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7528\u5b83\u628a\u4efb\u610f\u7684\u97f3\u9891\u6837\u672c\u5377\u79ef\u5728\u4e00\u8d77\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u548c\u5947\u602a\u7684\u58f0\u97f3\uff01\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u542c\u5230\uff1ahttps://blog.demofox.org/2015/03/23/diy-synth-convolution-reverb-1d-discrete-convolution-of-audio-samples/\u3002\n\u56fe\u50cf\u5468\u56f4\u7684\u9ed1\u8272\u8fb9\u6846\u662f\u901a\u8fc7\u5728\u56fe\u50cf\u5468\u56f4\u6dfb\u52a0\u9ed1\u8272\u8fb9\u6846\u4ee5\u4f7f\u5176\u5927\u5c0f\u5408\u9002(\u96f6\u586b\u5145)\u800c\u4ea7\u751f\u7684\u7455\u75b5\u3002\u5982\u679c\u4f60\u53ea\u662f\u628a\u5377\u79ef\u5185\u6838\u56fe\u50cf\u505a\u5f97\u548c\u4f60\u8981\u5377\u79ef\u7684\u56fe\u50cf\u4e00\u6837\u5927(\u8fd9\u5df2\u7ecf\u662f2\u7684\u5e42\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662fFFT\u7684\u8981\u6c42)\uff0c\u4f60\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u56fe\u50cf\uff0c\u5b83\u7684\u4e00\u90e8\u5206\u56fe\u50cf\u4ece\u53e6\u4e00\u9762\u201c\u5305\u88f9\u201d\u8fc7\u6765\u3002\n\u5982\u679c\u4f60\u4f7f\u7528DCT(\u79bb\u6563\u4f59\u5f26\u53d8\u6362)\uff0c\u5b83\u4f1a\u955c\u50cf\u7eb9\u7406\u800c\u4e0d\u662f\u5305\u88f9\u5b83\uff0c\u6240\u4ee5\u4f60\u4f1a\u5f97\u5230\u66f4\u591a\u4e0e\u5927\u591a\u6570\u65f6\u5019\u5e94\u8be5\u5b58\u5728\u7684\u50cf\u7d20\u76f8\u4f3c\u7684\u50cf\u7d20\uff0c\u800c\u4e0d\u662f\u5305\u88f9\u7684DFT\u3002\u4e0d\u8fc7\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u5982\u679c\u4f60\u5728\u56fe\u50cf\u7a7a\u95f4\u800c\u4e0d\u662f\u9891\u7387\u7a7a\u95f4\u8fdb\u884c\u5377\u79ef\uff0c\u4f60\u53ef\u4ee5\u4e22\u5f03\u4efb\u4f55\u8d85\u51fa\u56fe\u50cf\u6709\u6548\u533a\u57df\u7684\u6837\u672c\u3002\u4f60\u9700\u8981\u628a\u4f60\u5b9e\u9645\u91c7\u96c6\u7684\u6837\u672c\u7684\u91cd\u91cf\u76f8\u52a0\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u7684\u5377\u79ef\u548c\u9664\u4ee5\u8fd9\u4e2a\u91cd\u91cf\uff0c\u4ee5\u4f7f\u5176\u5f52\u4e00\u5316\u3002\u8fd9\u5c06\u4f7f\u8fb9\u754c\u9644\u8fd1\u7684\u50cf\u7d20\u5177\u6709\u6bd4\u5176\u5e94\u6709\u7684\u66f4\u9ad8\u7684\u6743\u91cd\uff0c\u4f46\u4e0e\u9ed1\u8272\u8fb9\u6846\u3001\u5305\u88f9\u6216\u955c\u50cf\u7455\u75b5\u76f8\u6bd4\uff0c\u5b83\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u523a\u8033\u7684\u7455\u75b5\u3002\n\u8bf4\u5b9e\u8bdd\uff0c\u672c\u6587\u4e2d\u7684\u8bb8\u591a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5728\u51e0\u884cPython\u4ee3\u7801\u4e2d\u5b8c\u6210\u3002\u4e0d\u8fc7\uff0c\u6211\u53d1\u73b0\u81ea\u5df1\u5b9e\u73b0\u8fd9\u4e9b\u4e1c\u897f\u5f88\u6709\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u5e2e\u52a9\u6211\u5c06\u60f3\u6cd5\u5185\u5316\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\uff0c\u4ee5\u53ca\u5982\u4f55\u907f\u514d\u5f53\u4e1c\u897f\u88ab\u7528\u4f5c\u9ed1\u5323\u5b50\u65f6\u51fa\u73b0\u7684\u95ee\u9898/\u8c1c\u56e2\u3002\u4e0d\u8fc7\uff0c\u5728\u6700\u8fd1\u7814\u7a76\u4e86\u4e0e\u5947\u5f02\u503c\u5206\u89e3(SVD)\u3001\u4e3b\u6210\u5206\u5206\u6790(PCA)\u548c\u5bfb\u627e\u7279\u5f81\u5411\u91cf\u76f8\u5173\u7684\u5927\u91cf\u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u611f\u89c9\u6f6e\u6d41\u53d1\u751f\u4e86\u53d8\u5316\u3002\u8fd9\u662f\u4e00\u4e9b\u75af\u72c2\u7684\u4e8b\u60c5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u6765\u8bf4\u592a\u96be\u5904\u7406\u4e86\uff0c\u540c\u65f6\u4ecd\u7136\u8bd5\u56fe\u5728\u5176\u4ed6\u8bdd\u9898\u4e0a\u80dc\u4efb\ud83d\ude1b", "note_en": "Over 4 years ago I wrote a short blog post on images in the frequency domain:  https://blog.demofox.org/2016/07/28/fourier-transform-and-inverse-of-images/\n It\u2019s time to revisit the topic a bit and add some more things.\n If you are curious about how the Fourier transform works, which can transform images or other data into the frequency domain, give this a read:  https://blog.demofox.org/2016/08/11/understanding-the-discrete-fourier-transform/\n   When you transform an image into the frequency domain, you get a complex number (with a real and imaginary component) per pixel that you can use to get information about the frequencies (literal sine and cosine waves) that go into making the image. One piece of information is the \u201cphase\u201d or starting angle of that wave. You get the phase by using atan2(imaginary, real). The other piece of information is the \u201camplitude\u201d of that wave, or how large the wave is in the image. The amplitude is the length of the 2d vector (real, imaginary).\n A quick and easy way to do image compression then, is to convert an image to frequency space, find the lowest amplitude frequencies and throw them away \u2013 literally zero out the complex number. If you throw enough of them away, it\u2019ll take less data to describe the frequency content of an image, than the pixels of the image, and you\u2019ll have compressed the image.\n The more aggressive you are at throwing away frequencies though, the more the image quality will degrade. This is \u201clossy\u201d compression and is a simplified version of how jpg image compression works. Lossy compression is in contrast to lossless compression like you find in png files, which use something more like a .zip compression algorithm to perfectly encode all the source data.\n In the code that goes with this post, the DoTestZeroing() function throws out the lowest 10% amplitude frequencies, then the lowest 20%, then 30% and so on up to 90%. At each stage, it writes all complex frequency values out into a binary file, which can then be compressed using .zip as a method for realizing the image compression. As the data gets more zeros, it gets more compressible.\n The top row in the image below shows an original 512\u00d71024 image, the DFT amplitude information, and the DFT phase information. The bottom row shows the same, but for an image which has had it\u2019s lower 90% amplitude frequencies thrown away. The DFT data is 8MB for both (uncompressed), and compresses to 7.7MB for the top picture, but only 847KB for the bottom picture. The inverse DFT was used to turn the modified frequency data on the bottom back into an image.\n  Here is another image which is 512\u00d7512 and has DFT which is 4MB uncompressed. The top image\u2019s DFT data compresses to 3.83MB, while the bottom compresses to 438KB.\n  While fairly effective, this is also a pretty naive way of doing frequency based image compression!\n More sophisticated methods use the \u201cDiscrete Cosine Transform\u201d or DCT instead of the DFT because it tends to make more of the frequency magnitudes zero, consolidating the data into fewer important frequencies, which means it\u2019s already smaller before you start throwing away frequencies. DCT and DFT also pretend that the images go on forever, instead of just stopping at the edge. DFT acts as if those images repeat in a tiled fashion, while DCT acts as if they are mirrored at each repeat, which can also be a nice property for image quality.\n Other methods break an image up into blocks before doing frequency based compression. Also, you can use wavelets to compress images, or principle component analysis or singular value decomposition. You can also fit your image with \u201cwhatever\u201d basis functions you want, using L1 norm regularization to promote the coefficients of your fitting to be zero, to make the fit data be less sparse, just like DCT does compared to DFT.\n Another thing you can do is use compressed sensing to skip a couple steps: You take a couple randomized but roughly evenly spaced samples from the image (blue noise or LDS are going to be good options here), and then you can eg find Fourier basis coefficients (DFT!) that match the sparse/irregular data samples you took. This is like throwing out low frequencies, but without having to DFT the whole data set, and then throw things out. It starts with sparse data and then fits it.\n Bart Wronski has several write ups on his blog in this area, so give them a read if you are interested:  https://bartwronski.com/2020/08/30/compressing-pbr-texture-sets-with-sparsity-and-dictionary-learning/\n This is a great read showing how to fit data using L1 regularization and all the related information you might be interested in:  https://www.analyticsvidhya.com/blog/2017/06/a-comprehensive-guide-for-linear-ridge-and-lasso-regression/\n This video is a great overview of the random grab bag of other things I mentioned:  https://www.youtube.com/watch?v=aHCyHbRIz44&amp;feature=youtu.be\n  In my previous post on this topic I showed how you could throw away frequencies that were farther than a certain distance from the center to low pass filter an image, aka blur it. I also showed how if you threw away frequencies closer than a certain distance, it would high pass filter an image, aka sharpen it.\n That throwing away of frequency data based on distance is the same as multiplying the frequency data by a mask which has a 1.0 in some places and a 0.0 in others. You can generalize this to multiply frequencies by any number. In the below I restrict the multiplications to be between 0 and 1, but you could definitely go to larger numbers or even go to negative numbers if you wanted.\n The below shows the patterns that the images are multiplied by in this section. Top row left to right is a low pass filter, then a stronger low pass filter (gets rid of more high frequencies than the other) and lastly is a notch filter or \u201cband stop\u201d filter. The bottom row is the complement, such that you get the bottom by subtracting the image from white (1.0). Left to right, the bottom row is a high pass filter, then a weaker high pass filter (lets more low frequencies in) and then a band pass filter which only lets certain frequencies through.\n  First up is the \u201cLoki and Alan\u201d picture. Frequencies and actual picture values filtered from the pictures on the top are present in the pictures on the bottom and vice versa. In this way, blurring compared to sharpening (and edge detection) are two sides of the same coin. It just matters which part you throw away and which part you keep.\n  Here is what the frequency magnitudes look like. Note that each image has the magnitudes put through a log function, and also normalized to be 1.0 max. This is why even though the high pass filters (and band pass) darken the middle, it doesn\u2019t seem like it. The renormalization obscures that fact a bit, and the middle is brightest (largest amplitudes) which we saw when throwing out the lowest amplitudes in the last section.\n  Here are the same filters applied to the scenery image. The top right image has some strange patterns in it if you look closely (click the image to view the full size in another tab).\n   In the last section, we made \u201cimages\u201d by using a distance function, to make values to multiply the frequencies by to filter out certain frequencies.\n In this section, we are going to take two images, put them into frequency space, multiply them together, take them out of frequency space, and see what kind of results come out.\n There is something called the \u201cconvolution theorem\u201d which tells us that multiplication in the frequency domain, is the same as convolution between the images. Convolution is an expensive operation, because you have to loop through all the pixels of one image, and at each pixel, loop through the pixels of the other image, and do some multiplications and additions. Convolution is so slow, that it can actually be quicker to take two images you want convolved to frequency domain, multiply them together, and then take them out of frequency space to be images again.\n Convolution is used in graphics for things like blurs, sharpening, or applying bokeh for depth of field, so speeding it up can be a big help! Convolution is also used in audio for things like reverberation which makes audio sound like it was played inside of a cave or a big cathedral.\n Technical note: the \u201ckernel\u201d image needs to be centered at pixel (0,0), not the center of the image. Also, the kernel image should be normalized so that summing up all of it\u2019s pixels adds up to 1.0. You also need to zero pad (add a black pixel border to) both the source image and kernel image to be the size of source+kernel+1 on the x and y axis before DFT\u2019ing so they are the same size, and to avoid wrapping problems. After you are done multiplying and inverse DFT\u2019ing, you can remove the black border again.\n Here are the 4 images we are going to use as kernel images: A star, a plus, a circle, and a blob.\n      You can see that the images somehow take on the qualities of the kernel\u2026 the star one is very angular, the plus one is very \u201cplus like\u201d and the circular one is very circular. Note how the blob acts a lot like a low pass filter! In frequency space, it does actually look like one, so that makes sense:\n    If you think the above looks weird when doing convolution on images, you should give a listen to convolution being used in audio. When used for reverb it sounds good, and sounds correct, but if you use it to convolve arbitrary audio samples together, you can get some really interesting and bizarre sounds! You can hear that here:  https://blog.demofox.org/2015/03/23/diy-synth-convolution-reverb-1d-discrete-convolution-of-audio-samples/\n The dark border around the image is an artifact from adding a black border around the images to make them the right size (zero padding). If you instead just make the convolution kernel image as large as the image you are convolving (and that is already a power of 2, since this FFT requires that), you\u2019d get the below, which has part of the image \u201cwrapping\u201d across from the other side.\n  If you used the DCT (discrete cosine transform) instead, it would MIRROR the texture instead of wrapping it, so you\u2019d get more similar pixels to what should be there most of the time, compared to DFT which wraps. Another way to solve this problem though is if you are doing convolution in image space, instead of frequency space, is you can throw away any samples that go outside of the valid area of the images. You want to sum up the weight of the samples you actually took though in this case, and divide the final convolution sum by that weight, to normalize it. That will make pixels near the border have higher weights than they should, but it can be a less jarring artifact than the black border, wrapping, or mirroring artifacts.\n Truth be told, many of the operations in this article can be done in a handful of lines of python. I find a lot of value in implementing things myself though, as it helps me internalize the ideas to better understand when and how to use them, and how to avoid problems/mysteries that come up when things are used as black boxes. I feel the tide turning though after a recent look at the sea of algorithms relating to SVD,PCA and finding eigenvectors. That is some crazy stuff, and way too much for a single person to deal with, while still trying to be competent in other topics \ud83d\ude1b", "posttime": "2020-11-07 11:23:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fe\u50cf\u538b\u7f29,domain,\u56fe\u50cf", "title": "\u9891\u57df\u56fe\u50cf\u538b\u7f29\u4e0e\u6ee4\u6ce2", "title_en": "Frequency Domain Image Compression and Filtering", "transed": 1, "url": "https://blog.demofox.org/2020/11/04/frequency-domain-image-compression-and-filtering/", "via": "", "real_tags": ["\u56fe\u50cf\u538b\u7f29", "domain", "\u56fe\u50cf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033645, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Js\u662f\u4e00\u4e2a\u7528\u4e8eJavascript\u7684SQL\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u4e3aWeb\u7f16\u8bd1\u7684SQLite\u7248\u672c\u3002", "note_en": "sql.js is an SQL library for javascript containing a version of SQLite compiled for the web.", "posttime": "2020-11-07 11:23:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u7f16\u8bd1,sqlite", "title": "SQL.js\uff1aSQLite\u7f16\u8bd1\u4e3aJavaScript", "title_en": "SQL.js: SQLite Compiled to JavaScript", "transed": 1, "url": "https://sql.js.org/#/", "via": "", "real_tags": ["java", "\u7f16\u8bd1", "sqlite"]}, {"category": "", "categoryclass": "", "imagename": "192f094615fe29e7d32a40a22025450c.png", "infoid": 1033644, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GIMP 2.99.2\u6807\u5fd7\u7740\u5411\u57fa\u4e8eGTK3\u7528\u6237\u754c\u9762\u548c\u5de5\u5177\u5305\u7684GIMP 3\u8fc8\u51fa\u4e86\u7b2c\u4e00\u6b65\u3002\n\u7b2c\u4e00\u4e2a\u533a\u522b\u5c06\u662f\u53ef\u89c6\u5316\u7684\uff0c\u56e0\u4e3a\u4f60\u4f1a\u6ce8\u610f\u5230GIMP\u770b\u8d77\u6765\u66f4\u73b0\u4ee3\u4e00\u4e9b\uff0c\u5b83\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u65b0\u7684\u5c0f\u90e8\u4ef6(\u800c\u4e0d\u662f\u5728GTK2\u4e0a\u91cd\u65b0\u5f00\u53d1\u5b83\u4eec)\uff0c\u4ee5\u53ca\u5728\u5404\u79cd\u5bf9\u8bdd\u6846\u4e0a\u7684\u5ba2\u6237\u7aef\u7a97\u53e3\u88c5\u9970\u3002\u4f46\u5ba1\u7f8e\u4e0a\u7684\u5dee\u5f02\u8fdc\u8fdc\u4e0d\u662fGTK3\u7684\u4e3b\u8981\u5438\u5f15\u529b\u3002\nGTK2\u7684\u4e3b\u8981\u95ee\u9898\u4e4b\u4e00\u662f\u4e0d\u652f\u6301\u9ad8\u50cf\u7d20\u5bc6\u5ea6\u663e\u793a\u5668(\u4f8b\u5982\u9ad8\u5206\u8fa8\u7387\u7684\u5c0f\u5c4f\u5e55\u6216\u6781\u9ad8\u5206\u8fa8\u7387\u7684\u5927\u5c4f\u5e55)\uff0c\u8fd9\u4e00\u70b9\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\uff0c\u7279\u522b\u662f\u5728\u56fe\u5f62\u4e13\u4e1a\u4eba\u58eb\u4e2d\u3002GIMP 2.10\u9644\u5e26\u4e86\u90e8\u5206\u89e3\u51b3\u65b9\u6cd5\uff0c\u53ea\u6709\u5728\u67d0\u4e9b\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u63a5\u53d7\uff0c\u4f46\u4e0d\u9002\u5408\u5bc6\u96c6\u4f7f\u7528GIMP\u8f6f\u4ef6\u3002\n\u6211\u4eec\u6240\u8bf4\u7684\u201c\u8f93\u5165\u8bbe\u5907\u201d\uff0c\u4e3b\u8981\u662f\u6307\u7ed8\u5236\u5e73\u677f\u7535\u8111\u6216\u7b14\u5f0f\u663e\u793a\u5668\u3002\u5728GIMP 2\u4e2d\uff0c\u4ed6\u4eec\u7684\u652f\u6301\u6709\u5f88\u591a\u7f3a\u70b9\uff1a\u4f60\u5fc5\u987b\u5728\u542f\u52a8GIMP\u4e4b\u524d\u63d2\u5165\u5e73\u677f\u7535\u8111\uff0c\u5728\u8bbe\u7f6e\u4e2d\u660e\u786e\u542f\u7528\u6bcf\u53f0\u65b0\u8bbe\u5907\uff0c\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u62d4\u51fa\u5e73\u677f\u7535\u8111\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f6f\u4ef6\u4e0d\u7a33\u5b9a(\u5c3d\u7ba1\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u662f\u7531GIMP\u5f00\u53d1\u8005\u5728V2.8\u7248\u672c\u7cfb\u5217\u4e2d\u7684GIMP\u5f00\u53d1\u8005\u5728GTK2\u4e0a\u89e3\u51b3\u7684)\u3002\nGIMP3(\u56e0\u6b64\u662f\u7b2c\u4e00\u4e2a\u5f00\u53d1\u7248\u672c)\u5e26\u6765\u4e86\u70ed\u63d2\u62d4\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740\uff1a\u542f\u52a8GIMP\uff0c\u63d2\u4e0a\u4f60\u7684\u5e73\u677f\u7535\u8111\uff0c\u5b8c\u6210\u3002\u4f60\u5df2\u7ecf\u51c6\u5907\u597d\u753b\u753b\u4e86\uff0c\u5e26\u7740\u538b\u529b\uff0c\u503e\u659c\uff0c\u4ee5\u53ca\u4e00\u5207\u3002\n\u6211\u4eec\u8fd8\u8bd5\u56fe\u901a\u8fc7\u4f7f\u8f93\u5165\u8bbe\u5907\u7684\u9ad8\u7ea7\u914d\u7f6e\u66f4\u6613\u4e8e\u8bbe\u7f6e\u6765\u6539\u5584\u4e00\u822c\u652f\u6301\u3002\n\u4e0d\u4e45\u524d\uff0c\u6211\u4eec\u8fd8\u8bd5\u9a8c\u4e86\u5bf9\u7f29\u653e\u3001\u5e73\u79fb\u3001\u65cb\u8f6c\u7b49\u89e6\u63a7\u624b\u52bf\u7684\u652f\u6301\u3002\u6211\u4eec\u6ca1\u6709\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u4e0e\u5176\u4ed6\u4e00\u4e9b\u65b0\u529f\u80fd\u76f8\u6bd4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4f18\u5148\u8003\u8651\u7684\u3002\n\u89e6\u63a7\u624b\u52bf\u975e\u5e38\u6f02\u4eae\u548c\u4ee4\u4eba\u656c\u754f\uff0c\u4f46\u6709\u65f6\u4e5f\u4f1a\u6210\u4e3a\u4e00\u79cd\u8d1f\u62c5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bb8\u591a\u4e13\u4e1a\u827a\u672f\u5bb6\u751a\u81f3\u5728\u4f7f\u7528\u89e6\u63a7\u7b14\u65f6\u7981\u7528\u89e6\u63a7\u654f\u611f\u5ea6\uff0c\u4ee5\u9632\u6b62\u4e0d\u9700\u8981\u7684\u8f93\u5165(\u5982\u4eca\u9ad8\u7aef\u5e73\u677f\u7535\u8111\u901a\u5e38\u5e26\u6709\u7269\u7406\u5f00\u5173\uff0c\u5728\u5e73\u677f\u7535\u8111\u8bbe\u7f6e\u4e2d\u4e5f\u53ef\u4ee5\u7981\u7528\u8fd9\u4e00\u529f\u80fd)\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u51b3\u5b9a\u4e0d\u628a\u5b83\u4f5c\u4e3a\u4e0e\u5176\u4ed6\u4e00\u4e9b\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u76f8\u6bd4\u7684\u4f18\u5148\u4e8b\u9879\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u786e\u5b9a\u7279\u5b9a\u7684\u624b\u52bf\u652f\u6301\u662f\u5426\u4f1a\u51fa\u73b0\u5728GIMP v3.0\u4e2d\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u4f1a\u4ece\u4efb\u4f55\u613f\u610f\u628a\u5b83\u4f5c\u4e3a\u4f18\u5148\u4e8b\u9879\u7684\u4eba\u90a3\u91cc\u63d0\u4f9b\u8865\u4e01\u3002\n\u72b6\u6001\uff1a\u9700\u8981\u505a\u4e00\u4e9b\u5de5\u4f5c\u6765\u7b80\u5316\u914d\u7f6e\u5bf9\u8bdd\u6846\uff0c\u56e0\u4e3a\u5bf9\u9057\u7559\u529f\u80fd\u7684\u652f\u6301\u8981\u4e48\u4e0d\u518d\u9700\u8981\uff0c\u8981\u4e48\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u6211\u4eec\u53ef\u80fd\u8fd8\u60f3\u589e\u52a0\u5bf9\u4e0e\u8f93\u5165\u8bbe\u5907\u76f8\u5173\u7684\u7279\u5b9a\u4e8eWayland\u7684\u529f\u80fd\u7684\u652f\u6301\u3002\n\u5728GTK3\u4e2d\uff0c\u6211\u4eec\u8fd8\u7ee7\u627f\u4e86\u5b83\u57fa\u4e8eCSS\u7684\u4e3b\u9898\u683c\u5f0f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u8fc7\u53bb\u7248\u672c\u4e2d\u7684\u6240\u6709\u5b9a\u5236\u4e3b\u9898\u90fd\u5c06\u4e0eGIMP 3.0\u548c\u672a\u6765\u7248\u672c\u4e0d\u517c\u5bb9\u3002\u597d\u7684\u4e00\u9762\u662f\uff0c\u8fd9\u79cd\u65b0\u7684\u4e3b\u9898\u683c\u5f0f\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u4e3b\u9898\u6807\u51c6\u3002\u8fd9\u5e94\u8be5\u4f1a\u8ba9GIMP\u7684\u754c\u9762\u66f4\u5bb9\u6613\u6839\u636e\u4f60\u7684\u9700\u6c42\u548c\u504f\u597d\u8fdb\u884c\u8c03\u6574\u3002\n\u6b64\u5916\uff0c\u7b26\u53f7\u56fe\u6807\u4e3b\u9898\u4e5f\u5f97\u5230\u4e86\u66f4\u597d\u7684\u652f\u6301\u3002\u5b83\u4eec\u5c06\u9075\u5faa\u4e3b\u9898\u8bbe\u7f6e\u7684\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u5728GIMP 2.10\u4e2d\u4ece\u6df1\u8272\u4e3b\u9898\u5207\u6362\u5230\u6d45\u8272\u4e3b\u9898\uff0c\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u4f60\u8fd8\u5fc5\u987b\u624b\u52a8\u5207\u6362\u7b26\u53f7\u56fe\u6807\u4e3b\u9898\u3002\u8fd9\u5c06\u4e0d\u518d\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u7b26\u53f7\u56fe\u6807\u5c06\u6839\u636e\u4f60\u7684\u4e3b\u9898\u91cd\u65b0\u7740\u8272\u3002\n\u6700\u540e\uff0c\u201c\u9ed1\u6697\u4e3b\u9898\u201d\u662fGTK3\u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\uff0c\u4f8b\u5982\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u662f\u7a97\u6237\u88c5\u9970\u4e5f\u4f1a\u91cd\u65b0\u4e0a\u8272\uff0c\u5c31\u50cf\u4f60\u5728\u4e0a\u9762\u7684\u622a\u56fe\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\n\u6b64\u5916\uff0c\u540c\u4e00\u4e3b\u9898\u53ef\u4ee5\u540c\u65f6\u63d0\u4f9b\u6df1\u8272\u548c\u6d45\u8272\u53d8\u79cd\uff0c\u56e0\u6b64\u4e3b\u9898\u9996\u9009\u9879\u9875\u9762\u4f1a\u663e\u793a\u4e00\u4e2a\u201c\u5982\u679c\u53ef\u7528\u7684\u8bdd\uff0c\u4f7f\u7528\u6df1\u8272\u4e3b\u9898\u53d8\u79cd\u201d\u590d\u9009\u6846\u3002\u7c7b\u4f3c\u5730\uff0c\u56fe\u6807\u4e3b\u9898\u53ef\u4ee5\u540c\u65f6\u6697\u793a\u7b26\u53f7\u56fe\u6807\u548c\u5f69\u8272\u56fe\u6807\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u201c\u56fe\u6807\u4e3b\u9898\u201d\u9996\u9009\u9879\u9875\u9762\u6709\u4e00\u4e2a\u201c\u4f7f\u7528\u7b26\u53f7\u56fe\u6807(\u5982\u679c\u53ef\u7528)\u201d\u5f00\u5173\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u9009\u62e9\u4f60\u559c\u6b22\u7684\u98ce\u683c\u4e86\u3002\n\u5728\u4ee3\u7801\u65b9\u9762\uff0c\u4e0e\u4e3b\u9898\u76f8\u5173\u7684\u66f4\u6539\u57fa\u672c\u5b8c\u6210\u3002\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u9ed8\u8ba4\u4e3b\u9898\u3002\u76ee\u524d\uff0cGIMP 2.99.2\u53ea\u5217\u51fa\u4e86\u201c\u7cfb\u7edf\u201d\u4e3b\u9898\uff0c\u5b83\u5141\u8bb8GIMP\u9075\u5faa\u7cfb\u7edf\u8303\u56f4\u7684GTK\u4e3b\u9898\u3002\u8fd9\u662f\u4ece2.10\u7684\u5012\u9000\uff0c\u6211\u4eec\u6253\u7b97\u5728GIMP 3.0\u4e2d\u53ca\u65f6\u4fee\u590d\uff0c\u91cd\u65b0\u5f15\u5165\u4e00\u4e2a\u5e26\u6709\u4e2d\u6027\u6697/\u4eae\u53d8\u5316\u7684\u9ed8\u8ba4\u4e3b\u9898\u4ee5\u53ca\u4e00\u4e2a\u4e2d\u6027\u7684\u4e2d\u7070\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002\n\u7cfb\u7edf\u4e3b\u9898\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b83\u4eec\u6db5\u76d6\u4e86\u975e\u5e38\u57fa\u672c\u7684\u684c\u9762\u4f7f\u7528\u6848\u4f8b\u3002\u540c\u65f6\uff0c\u5148\u8fdb\u7684\u56fe\u5f62\u4f5c\u54c1\u9700\u8981\u4e2d\u6027\u7070\u8272\u4e3b\u9898\uff0c\u4ee5\u907f\u514d\u6c61\u67d3\u60a8\u7684\u8272\u5f69\u611f\u77e5\u3002\u8fd9\u4e5f\u662fGIMP\u9700\u8981\u9ed8\u8ba4\u4f7f\u7528\u5e26\u6709\u8c61\u5f81\u6027\u56fe\u6807\u7684\u4e2d\u6027\u8272\u4e3b\u9898\u7684\u4e3b\u8981\u539f\u56e0\u3002\n\u5f69\u8272\u4e3b\u9898\u548c\u56fe\u6807\u4ecd\u7136\u662f\u4e00\u79cd\u9009\u62e9\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u975e\u5e38\u786e\u5b9a\u793e\u533a\u5f88\u5feb\u5c31\u4f1a\u63a8\u51fa\u597d\u770b\u7684\u5b9a\u5236\u4e3b\u9898\u3002\u4f5c\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u975e\u5f00\u53d1\u8005\uff0c\u8fd9\u662f\u4e3aGIMP\u505a\u8d21\u732e\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\uff01\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cGTK3\u7684\u7aef\u53e3\u5e94\u8be5\u4f1a\u514d\u8d39\u4e3a\u6211\u4eec\u63d0\u4f9bLinux\u4e0a\u7684Wayland\u652f\u6301\uff0c\u800c\u4e14\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u786e\u5b9e\u662f\u8fd9\u6837\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5df2\u7ecf\u6709\u4e00\u4e9b\u5173\u4e8e\u5728Wayland\u4e0a\u8fd0\u884c\u7684GIMP\u7684\u9519\u8bef\u62a5\u544a\u3002\u5176\u4e2d\u4e00\u4e9b\u663e\u7136\u662f\u53d1\u5e03GIMP 3\u7684\u62e6\u622a\u5668(\u6bd4\u5982\u5404\u79cd\u5947\u602a\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u9519\u8bef\u6216\u5de8\u5927\u7684\u5185\u5b58\u6cc4\u6f0f)\u3002\u5176\u4ed6\u7684\u6ca1\u6709\u90a3\u4e48\u4e25\u91cd\uff0c\u4f46\u4ecd\u7136\u6709\u70b9\u5c34\u5c2c\uff0c\u6bd4\u5982HiDPI\u663e\u793a\u5c4f\u4e0a\u7684\u95ea\u5c4f\u88ab\u6253\u7834\uff0c\u56e0\u4e3aWayland\u6ca1\u6709\u6b63\u786e\u5730\u62a5\u544a\u7f29\u653e\u6bd4\u4f8b\u3002\n\u5728\u8fd9\u4e9b\u95ee\u9898\u5f97\u5230\u89e3\u51b3\u4e4b\u524d\uff0c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u4e0d\u80fd\u5b89\u5168\u5730\u58f0\u79f0\u6211\u4eec\u63d0\u4f9b\u4e86\u9002\u5f53\u7684Wayland\u652f\u6301\u3002\u65e0\u8bba\u662fGIMP\u3001GTK\u8fd8\u662f\u6280\u672f\u5806\u6808\u7684\u5176\u4ed6\u76f8\u5173\u90e8\u5206\uff0c\u6211\u4eec\u90fd\u5c06\u611f\u8c22\u6240\u6709\u80fd\u591f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u8865\u4e01\u3002\u5982\u679c\u4f60\u6709\u5174\u8da3\u5e2e\u5fd9\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u4e0e\u97e6\u5170\u76f8\u5173\u7684\u9519\u8bef\u6e05\u5355\u3002\n\u9002\u5f53\u7684Wayland\u652f\u6301\u4e5f\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6240\u8c13\u7684\u95e8\u6237\u91cd\u65b0\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd\u3002\u6211\u4eec\u5df2\u7ecf\u4e3a\u622a\u56fe\u63d2\u4ef6\u505a\u4e86\u8fd9\u4ef6\u4e8b(\u4f7f\u7528Freedesktop\u3001GNOME\u548cKDE\u95e8\u6237)\uff0c\u8fd8\u6709\u4e00\u4e9b\u6b63\u5728\u8fdb\u884c\u7684\u4fee\u590d\u5c4f\u5e55\u989c\u8272\u9009\u62e9\u7684\u5de5\u4f5c(\u5df2\u7ecf\u5728KDE\u4e2d\u5de5\u4f5c\uff0c\u8fd8\u4e0d\u80fd\u5728GNOME\u548cFreedesktop\u95e8\u6237\u4e0a\u5de5\u4f5c)\u3002\n\u81f3\u4e8e\u6587\u4ef6\u95e8\u6237\uff0c\u8fd9\u5728GIMP 3.0\u4e2d\u53ef\u80fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u9700\u8981GTK\u6587\u4ef6\u5bf9\u8bdd\u6846\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u5728\u7a0d\u540e\u8fdb\u884c\u8ba1\u5212\u4e2d\u7684\u91cd\u65b0\u8bbe\u8ba1\u4ee5\u6539\u8fdb\u5bfc\u51fa\u6d41\u7a0b\u3002\n\u7531\u4e8e\u589e\u52a0\u4e86\u591a\u5c42\u9009\u62e9\uff0c\u73b0\u5728\u7ba1\u7406\u4e00\u4e2a\u6709\u6570\u5341\u5c42\u548c\u6570\u767e\u5c42\u7684\u590d\u6742\u9879\u76ee\u8981\u65b9\u4fbf\u5f97\u591a\u3002\u4e0e\u6838\u5fc3\u56e2\u961f\u5408\u4f5c\u7684\u52a8\u753b\u7535\u5f71\u5bfc\u6f14Aryeom\u81ea2015\u5e74\u4ee5\u6765\u4e00\u76f4\u8981\u6c42\u8fd9\u6837\u505a\uff0c\u6240\u4ee5ZeMarmot\u9879\u76ee\u6700\u7ec8\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\u8fd9\u662f\u53e6\u4e00\u4e2a\u6210\u529f\u7684\u827a\u672f\u5bb6\u548c\u5f00\u53d1\u8005\u7d27\u5bc6\u5408\u4f5c\u7684\u4f8b\u5b50\uff1a\u6bcf\u4e00\u9879\u529f\u80fd\u90fd\u662f\u7ecf\u8fc7\u8ba8\u8bba\u540e\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u5e76\u5728\u751f\u4ea7\u4e2d\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\n\u53ef\u505c\u9760\u7684\u5c42\u73b0\u5728\u5b8c\u5168\u652f\u6301\u591a\u9009\uff0c\u4f7f\u7528\u901a\u5e38\u7528\u4e8e\u591a\u9879\u9009\u62e9\u7684\u4ea4\u4e92(\u6309\u4f4fShift\u952e\u5e76\u5355\u51fb\u4ee5\u9009\u62e9\u4e00\u7cfb\u5217\u5c42\uff0c\u6309\u4f4fCtrl\u952e\u5e76\u5355\u51fb\u4ee5\u9009\u62e9\u6216\u53d6\u6d88\u9009\u62e9\u4e0d\u8fde\u7eed\u7684\u5c42)\u3002\u7ec4\u7ec7\u64cd\u4f5c\u73b0\u5728\u9002\u7528\u4e8e\u6240\u6709\u9009\u5b9a\u7684\u5c42\uff0c\u5373\u60a8\u53ef\u4ee5\u79fb\u52a8\u3001\u91cd\u65b0\u6392\u5e8f\u3001\u5220\u9664\u3001\u590d\u5236\u3001\u5408\u5e76(\u4ee5\u53ca\u66f4\u591a\u2026)\u3002\u4e00\u6b21\u9009\u62e9\u6240\u6709\u9009\u5b9a\u7684\u5c42\u3002\n\u73b0\u5728\uff0c\u591a\u4e2a\u5de5\u5177\u8fd8\u53ef\u4ee5\u5728\u591a\u4e2a\u9009\u5b9a\u7684\u5c42\u4e0a\u4f7f\u7528\u3002\u5bf9\u4e8e\u5b9e\u4f8b\u6240\u6709\u53d8\u6362\u5de5\u5177(\u79fb\u52a8\u3001\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u900f\u89c6\u3001\u7edf\u4e00\u53d8\u6362\u2026)\u3002\u5c06\u53d8\u6362\u6240\u6709\u9009\u5b9a\u7684\u5c42(\u9664\u4e86\u5e26\u6709\u201c\u94fe\u201d\u56fe\u6807\u7684\u73b0\u6709\u5c42\u94fe\u63a5)\u3002\u4f60\u4e5f\u53ef\u4ee5\u4e00\u6b21\u88c1\u526a\u51e0\u4e2a\u5c42\uff0c\u6216\u8005\u590d\u5236-\u7c98\u8d34\u5408\u5e76\u5c42\u7684\u6295\u5f71\u3002\u73b0\u5728\uff0c\u5373\u4f7f\u662f\u62fe\u8272\u5668\u5de5\u5177\u4e5f\u53ef\u4ee5\u4ece\u51e0\u4e2a\u5c42\u4e2d\u9009\u53d6\u5408\u5e76\u7684\u989c\u8272(\u67d0\u79cd\u5c40\u90e8\u7684\u201c\u5408\u5e76\u6837\u672c\u201d\uff0c\u800c\u4e0d\u5fc5\u9690\u85cf\u4e0d\u9700\u8981\u7684\u5c42)\u3002\n\u8fd9\u4e9b\u53ea\u662f\u51e0\u4e2a\u4f8b\u5b50\uff0c\u56e0\u4e3a\u8fd9\u79cd\u66f4\u6539\u4f1a\u5f71\u54cd\u5f88\u5927\u4e00\u90e8\u5206\u4ee3\u7801\u5e93\uff1a\u6d3b\u52a8\u5c42\u7684\u6982\u5ff5\u5728\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u90fd\u5f88\u7a81\u51fa\u3002\u60a8\u53ef\u4ee5\u5728\u8be6\u7ec6\u7684\u5f00\u53d1\u62a5\u544a\u4e2d\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\u3002\nGIMP\u4e2d\u7684\u4e00\u4e9b\u7279\u6027\u4ecd\u7136\u9700\u8981\u5355\u4e00\u7684\u5c42\uff0c\u9700\u8981\u5728\u6700\u7ec8\u53d1\u5e03\u4e4b\u524d\u8fdb\u884c\u4fee\u590d\u3002\u6211\u4eec\u6709\u53ef\u80fd\u5728\u5de5\u4f5c\u7684\u65f6\u5019\u65e0\u610f\u4e2d\u5f04\u574f\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u53d1\u5e03\u66f4\u591a\u7684\u5f00\u53d1\u7248\u672c\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u5c06\u591a\u9879\u9009\u62e9\u6269\u5c55\u5230\u8def\u5f84\u548c\u901a\u9053\u3002\n\u6700\u540e\uff0c\u7ed8\u5236\u548cGEGL\u64cd\u4f5c(\u8fc7\u6ee4\u5668)\u4ecd\u7136\u4ec5\u9650\u4e8e\u5355\u5c42\u3002\u589e\u52a0\u4e00\u6b21\u5728\u51e0\u4e2a\u5c42\u4e0a\u7ed8\u5236\u6216\u8fd0\u884c\u50cf\u7d20\u64cd\u4f5c\u7684\u80fd\u529b\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u63a5\u53e3\u89c4\u8303\u548c\u8bbe\u8ba1\uff0c\u4ee5\u9632\u6b62\u51fa\u73b0\u6781\u6162\u7684\u64cd\u4f5c\u6216\u53d6\u6d88\u957f\u671f\u8fd0\u884c\u7684\u8fdb\u7a0b\u7b49\u4e0d\u826f\u540e\u679c\u3002\n\u6211\u4eec\u4e0d\u5f97\u4e0d\u6253\u7834\u63d2\u4ef6API\u6765\u5f15\u5165\u8bb8\u591a\u6539\u8fdb\uff0c\u5c3d\u7ba1\u6211\u4eec\u7279\u522b\u6ce8\u610f\u4e0d\u8981\u5728\u4e0d\u5fc5\u8981\u7684\u5730\u65b9\u7834\u574f\u4e1c\u897f\u3002\n\u5c06\u4e00\u4e2a\u5355\u6587\u4ef6\u63d2\u4ef6\u4eceGIMP 2.10\u79fb\u690d\u5230GIMP 3\u901a\u5e38\u9700\u89815\u523030\u5206\u949f\u3002\u6211\u4eec\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u79fb\u690d\u6587\u6863\uff0c\u8be5\u6587\u6863\u5c06\u4e0eGIMP\u7b2c\u4e09\u7248\u4e00\u8d77\u53d1\u5e03\u3002\n\u5982\u679c\u60a8\u662f\u63d2\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u60a8\u53ef\u4ee5\u91c7\u53d6\u7684\u7b2c\u4e00\u6b65\u662f\u786e\u4fdd\u4e0d\u4f7f\u7528\u4efb\u4f55\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u51fd\u6570\u3002\u6211\u4eec\u7f16\u5236\u4e86\u4e00\u4e2a\u5220\u9664\u51fd\u6570\u548c\u66ff\u6362\u51fd\u6570\u7684\u5217\u8868\u3002\u60a8\u5df2\u7ecf\u53ef\u4ee5\u5728\u4ee5GIMP 2.10.x\u7248\u672c\u4e3a\u76ee\u6807\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u7aef\u53e3\u7684\u8fd9\u4e00\u90e8\u5206\u3002\n\u5728\u503c\u5f97\u6ce8\u610f\u7684\u66f4\u6539\u4e2d\uff0c\u6211\u4eec\u4ece\u5bf9\u8c61ID\u8f6c\u79fb\u5230\u4e86realObjects\u3002\u7279\u522b\u662f\u5728GIMP 3\u4e2d\uff0cGimpImage\u3001GimpItem\u3001GimpDrawable\u3001GimpLayer\u3001GimpVectors\u3001GimpChannel\u548cGimpPDB\u90fd\u662f\u5bf9\u8c61(\u5176\u4ed6\u7c7b\u522b\u7684\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u6216\u8005\u4ee5\u540e\u53ef\u80fd\u4f1a\u6dfb\u52a0)\u3002\n\u5b83\u901a\u8fc7\u8ba9\u7c7b\u578b\u5316\u7684\u5bf9\u8c61\u7684\u7c7b\u53ef\u4ee5\u5bb9\u6613\u5730\u88ab\u9a8c\u8bc1\u6765\u5e26\u6765\u66f4\u5b89\u5168\u7684\u7f16\u7a0b\uff0c\u56e0\u6b64\u66f4\u597d\u7684\u9519\u8bef\u6d88\u606f(\u5bf9\u4e8eID\uff0c\u57fa\u672c\u4e0a\u662f\u6574\u6570\uff0c\u7531\u4e8e\u4e0d\u6b63\u786e\u7684ID\u800c\u4ea7\u751f\u5947\u602a\u7684\u9519\u8bef\u5e76\u4e0d\u5e38\u89c1\uff0c\u5e76\u4e14\u8ddf\u8e2a\u9519\u8bef\u7684\u9519\u8bef\u5e76\u4e0d\u603b\u662f\u5bb9\u6613\u7684)\u3002\n\u6b64\u5916\uff0c\u5bf9\u8c61\u7f16\u7a0b\u8fd8\u610f\u5473\u7740\u7c7b\u7ee7\u627f\u3002\u901a\u5e38\uff0cGimpLayer\u4e5f\u662fGimpDrawable\uff0c\u672c\u8eab\u5c31\u662fGimpItem\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u4e2d\u7684\u4efb\u4f55\u65b9\u6cd5\uff0c\u5e76\u8f7b\u677e\u6d4b\u8bd5\u7c7b\u7684\u6240\u6709\u6743\u3002\n\u975eC\u8bed\u8a00\u7684\u7ed3\u679c\u662f\uff0c\u5b83\u4f7f\u7ed1\u5b9a\u80fd\u591f\u4f7fAPI\u9002\u5e94\u5b83\u4eec\u81ea\u5df1\u7684\u5bf9\u8c61\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u5728Python3\u4e2d\u590d\u5236\u540d\u4e3aforInstance img\u7684GimpImage\u53ef\u4ee5\u4f7f\u7528\u975e\u5e38\u5f3a\u52bf\u7684API img2=img.Duplate()\u6765\u5b8c\u6210\u3002\n\u72b6\u6001\uff1a\u76ee\u6807\u7aef\u53e3\u57fa\u672c\u5b8c\u6210\u3002\u6211\u4eec\u8fd8\u60f3\u4f7f\u7528\u5bf9\u8c61\u4fe1\u4ee4\uff0c\u8fd9\u662f\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u6700\u7ec8\u5e94\u8be5\u5141\u8bb8\u76f4\u63a5\u8fde\u63a5\u5bf9\u8c61\u4e0a\u7684\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u7ba1\u7406\u6765\u81ea\u6838\u5fc3\u5e94\u7528\u7a0b\u5e8f\u7684\u4e8b\u4ef6(\u8fd9\u5728GIMP 2\u4e2d\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u9664\u4e86\u901a\u8fc7\u5e38\u89c4\u7684\u8f6e\u8be2)\u3002\nAPI\u4e2d\u7684\u53e6\u4e00\u4e2a\u53d8\u5316\u662f\u8def\u5f84\u73b0\u5728\u88ab\u4f5c\u4e3aGFile\u5904\u7406\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528Glib/GIO API\u3002\n\u867d\u7136\u5b83\u770b\u8d77\u6765\u6709\u70b9\u9ebb\u70e6(\u56e0\u4e3a\u5b83\u589e\u52a0\u4e86\u521b\u5efa\u548c\u7ba1\u7406GFile\u7684\u989d\u5916\u6b65\u9aa4)\uff0c\u4f46\u5b83\u5141\u8bb8\u66f4\u5065\u58ee\u7684\u6587\u4ef6\u5904\u7406\u3002\u5c24\u5176\u662f\uff0c\u60a8\u4e0d\u5fc5\u5173\u5fc3\u8def\u5f84\u5b57\u7b26\u7f16\u7801(\u5f53\u5f00\u53d1\u4eba\u5458\u5047\u8bbe\u6bcf\u4e2a\u4eba\u90fd\u4f7f\u7528\u4e0e\u4ed6\u4eec\u81ea\u5df1\u76f8\u540c\u7684\u7f16\u7801\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898)\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u8def\u5f84\u4e2d\u65ad\u548c\u4ee3\u7801\u4e0d\u53ef\u79fb\u690d\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u5fc5\u5904\u7406\u6709\u5173\u6587\u4ef6\u5939\u5206\u79bb\u6216\u6587\u4ef6\u7cfb\u7edf\u7b26\u53f7\u7684\u64cd\u4f5c\u7cfb\u7edf\u5dee\u5f02\u3002\u4f7f\u7528GFile\u4f7f\u5185\u90e8\u8868\u793a\u900f\u660e\uff0c\u6587\u4ef6\u5904\u7406\u66f4\u52a0\u5065\u58ee\u3002\n\u7b2c\u4e8c\u5927\u4f18\u52bf\u662f\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u8fd9\u4e9bAPI\u90fd\u80fd\u83b7\u5f97\u4efb\u4f55\u5df2\u5b89\u88c5\u7684GIO\u6a21\u5757\u7684\u80fd\u529b\uff0c\u7279\u522b\u662f\u4ece\u8fdc\u7a0b\u4f4d\u7f6e\u52a0\u8f7d\u6216\u4fdd\u5b58(\u751a\u81f3\u53ef\u80fd\u901a\u8fc7HTTPS\u8fd9\u6837\u7684\u5b89\u5168\u901a\u9053)\u3002\u8fd9\u6253\u5f00\u4e86\u5e7f\u6cdb\u7684\u53ef\u80fd\u6027\u3002\nGIMP\u7684\u6587\u4ef6\u5904\u7406\u7684GIO\u79fb\u690d\u5df2\u7ecf\u5728GIMP\u7684\u6838\u5fc3\u4ee3\u7801\u4e2d\u5b8c\u6210\u4e86\uff0c\u4eceGIMP 2.10\u7684\u521d\u59cb\u7248\u672c\u5f00\u59cb\u3002\u6211\u4eec\u73b0\u5728\u4e3a\u63d2\u4ef6\u5f00\u53d1\u8005\u5e26\u6765\u4e86GIMP 3.0\u7248\u7684\u4f18\u52bf\u3002\n\u901a\u8fc7GObject\u81ea\u68c0\u8fdb\u884c\u7684\u8bed\u8a00\u7ed1\u5b9a\u4e5f\u62e5\u6709\u5bf9GLib/GIO API\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\uff0c\u56e0\u6b64\u5b83\u4eec\u5df2\u7ecf\u80fd\u591f\u6beb\u65e0\u95ee\u9898\u5730\u4ece\u8def\u5f84\u6216URI\u521b\u5efaGFile\u3002\u7136\u800c\uff0c\u4f20\u7edf\u7684\u624b\u52a8\u7ed1\u5b9a(\u5982script-fu(Plan))\u4e0d\u5177\u5907GFile\u8bbf\u95ee\u6743\u9650\u3002\u6211\u4eec\u6b63\u5728\u505a\u8fd9\u4ef6\u4e8b(\u8865\u4e01\u5df2\u7ecf\u5b58\u5728\uff0c\u4f46\u9700\u8981\u91cd\u65b0\u5ba1\u6838)\u3002\n\u5728\u58f0\u660e\u63d2\u4ef6\u7684API\u4e2d\u8fdb\u884c\u4e86\u4e00\u4e9b\u91cd\u5927\u66f4\u6539\uff0c\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u5bf9GimpPlugIn\u7c7b\u8fdb\u884c\u5b50\u7c7b\u5316\u5e76\u8986\u76d6\u4e00\u4e9b\u65b9\u6cd5\u6765\u5217\u51fa\u548c\u8bb0\u5f55\u521b\u5efa\u7684\u63d2\u4ef6\u8fc7\u7a0b\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5236\u4f5c\u4e86\u4e00\u4e2a\u6bd4\u524d\u4e00\u4e2a\u66f4\u5e72\u51c0\u3001\u66f4\u663e\u5f0f\u7684API\uff0c\u8fd9\u5e94\u8be5\u4f1a\u5e2e\u52a9\u63d2\u4ef6\u5f00\u53d1\u4eba\u5458\u3002\n\u73b0\u5728\u5904\u7406\u63d2\u4ef6\u8fc7\u7a0b\u53c2\u6570\u7684\u65b9\u5f0f\u4e5f\u5df2\u7ecf\u6807\u51c6\u5316\uff0c\u7279\u522b\u662f\u4f7f\u7528\u4e86config GObject\u5c5e\u6027\u3002\u4f5c\u4e3a\u4e00\u79cd\u901a\u7528\u903b\u8f91\uff0c\u8fd9\u66f4\u5bb9\u6613\u5904\u7406\u3002\u7279\u522b\u662f\uff0c\u76f8\u540c\u7684\u914d\u7f6e\u5bf9\u8c61\u5141\u8bb8\u6211\u4eec\u751f\u6210\u8bb8\u591a\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5b83\u5c06\u5e2e\u52a9\u90a3\u4e9b\u4e0d\u60f3\u81ea\u5df1\u4fee\u8865GTK\u6216\u5176\u4ed6\u5de5\u5177\u5305\u7684\u63d2\u4ef6\u6309\u9700\u751f\u6210\u5bf9\u8bdd\u6846\u3002\u5b83\u8fd8\u7b80\u5316\u548c\u6807\u51c6\u5316\u4e86\u540e\u7eed\u547c\u53eb\u6216\u76f8\u540c\u5904\u7406\u7a0b\u5e8f\u7684\u8863\u7269\u4fdd\u5b58\u3002\n\u6700\u7ec8\uff0c\u8fd9\u4e5f\u662f\u672a\u6765\u5f55\u5236/\u5b8f\u7279\u6027\u7684\u57fa\u7840\u5de5\u4f5c\u7684\u4e00\u90e8\u5206(GIMP 3.0\u4e2d\u4e0d\u592a\u53ef\u80fd\u51fa\u73b0\uff0c\u4f46\u8fd9\u662f\u5b9e\u73b0\u8fd9\u4e00\u7279\u6027\u7684\u57fa\u7840\u5de5\u4f5c\u7684\u4e00\u90e8\u5206)\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u80fd\u591f\u53ef\u9760\u5730\u4fdd\u5b58\u5728\u8fd0\u884c\u63d2\u4ef6\u65f6\u4f7f\u7528\u7684\u53c2\u6570\u3002\n\u72b6\u6001\uff1a\u867d\u7136\u8fd9\u4e2aAPI\u7684\u4e3b\u8981\u90e8\u5206\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u4f46\u5728\u53d1\u5e03\u4e4b\u524d\u8fd8\u9700\u8981\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u7279\u522b\u662f\u6211\u4eec\u8fd8\u5728\u5bf9\u8868\u793a\u7684\u53c2\u6570\u8fdb\u884c\u4fee\u4fee\u8865\u8865\u3002\n\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7GObjectIntrospect\u81ea\u7701\u4e86\u5b8c\u6574\u7684API\u3002\u8fd9\u610f\u5473\u7740GIMP API\u5e94\u8be5\u5728\u5e7f\u6cdb\u7684\u8bed\u8a00\u7ed1\u5b9a\u4e2d\u5b8c\u5168\u53ef\u7528\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u6d4b\u8bd5\u4e86\u51e0\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u786e\u8ba4GIMP\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4(\u5f53\u7136\uff0c\u9664\u4e86C\u548cC++\u4e4b\u5916)\uff1a\n\u4e0eGIMP\u8fc7\u53bb\u7684\u811a\u672c\u5316\u65b9\u5f0f\u4e0d\u540c\u7684\u4e3b\u8981\u533a\u522b\u4e4b\u4e00\u662f\uff0c\u73b0\u5728\u4e0d\u518d\u9700\u8981\u5b9a\u5236\u7684\u5c42API\uff0c\u8fd9\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528Python2\u65f6\uff0cGIMP\u662f\u53ef\u811a\u672c\u5316\u7684\u3002\n\u6b64\u5916\uff0cGIMP 2\u7ed1\u5b9a\u901a\u5e38\u662f\u56f4\u7ed5PDB\u534f\u8bae\u8fdb\u884c\u7684\uff0cPDB\u534f\u8bae\u53ea\u662f\u5b8c\u6574\u7684C libgimp API\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u65b0\u7684\u7ed1\u5b9a\u662f\u5185\u7f6e\u7684libgimp\u672c\u8eab\u3002\u56e0\u6b64\uff0cPython3\u3001Javascript\u3001Luaor Vala(\u6216\u4efb\u4f55\u672a\u6765\u53cd\u601d\u8fc7\u7684\u7ed1\u5b9a)\u4e2d\u7684\u63d2\u4ef6\u5c06\u5177\u6709\u4e0eC\u63d2\u4ef6\u76f8\u540c\u7684\u53ef\u80fd\u6027\u3002\u5bf9\u4e8eGIMP\u63d2\u4ef6\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5149\u660e\u7684\u65b0\u4e16\u754c\uff01\n\u53e6\u4e00\u4e2a\u7ed3\u679c\u662f\uff0c\u9664\u4e86\u8bed\u8a00\u7279\u6027\u4e4b\u5916\uff0c\u6240\u6709\u8fd9\u4e9b\u8bed\u8a00\u7684API\u57fa\u672c\u4e0a\u662f\u76f8\u540c\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728C\u8bed\u8a00\u4e2d\u627e\u5230\u4e00\u4e2a\u53ef\u7ed8\u5236\u7684\u548c\u4e00\u4e2a\u9009\u62e9\u7684\u4ea4\u53c9\u70b9\u662f\uff1a\n\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u662f\u5982\u4f55\u5904\u7406\u5e26\u6709\u989d\u5916\u957f\u5ea6\u53c2\u6570\u7684C\u7c7b\u578b\u6570\u7ec4\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u5982\u679c\u76ee\u6807\u8bed\u8a00\u5177\u6709\u9002\u5f53\u7684\u7ed3\u6784\uff0c\u5219\u957f\u5ea6\u53c2\u6570\u4e0d\u4f1a\u5b58\u5728\u4e8e\u7ed1\u5b9a\u4e2d\u3002\u4f8b\u5982\uff0c\u867d\u7136\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4ece\u811a\u672c\u590d\u5236\u591a\u4e2a\u53ef\u7ed8\u5236\u5185\u5bb9\uff1a\n/*\u5176\u4e2d@Drawables\u662f\u53ef\u7ed8\u5236\u6587\u4ef6\u7684C\u6570\u7ec4\uff0c@num_Drawables*\u8868\u793a\u8be5\u6570\u7ec4\u7684\u5927\u5c0f\u3002*/gimp_edit_copy(num_Drawables\uff0cDrawables)\uff1b\n\u8fd9\u53ef\u4ee5\u5728Python 3\u4e2d\u6309\u5982\u4e0b\u65b9\u5f0f\u5b8c\u6210(\u5220\u9664num_Drawables\u5e76\u5c06C\u6570\u7ec4\u66ff\u6362\u4e3a\u4e00\u4e2aPython\u5217\u8868)\uff1a\n\u8fd9\u4e9b\u7ed1\u5b9a\u73b0\u5728\u4e0d\u4ec5\u53ef\u4ee5\u8bbf\u95ee\u5b8c\u6574\u7684GIMP API\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u66f4\u591a\u4f5c\u4e3aGIMP\u4f9d\u8d56\u9879\u7684\u81ea\u7701API\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u63d2\u4ef6\u53ef\u4ee5\u8bbf\u95ee\u5b8c\u6574\u7684Glib/GIO\u3001GTK\u3001Pango\u3001cairo API\u4ee5\u53caBabl\u548cGEGL API(\u4e3a\u4e86\u66f4\u5bb9\u6613\u7684\u50cf\u7d20\u64cd\u4f5c\u548c\u5bf9\u5927\u91cf\u73b0\u6709\u64cd\u4f5c\u7684\u8bbf\u95ee)\u3002\u8fd9\u662f\u4ee5\u524d\u7684Python2\u7ed1\u5b9a\u7684\u4e3b\u8981\u9650\u5236\u4e4b\u4e00\uff0c\u5b83\u4e0d\u80fd\u4f7f\u7528GEGL\u64cd\u4f5c\u50cf\u7d20\u3002\n\u73b0\u72b6\uff1a\u6709\u4e9b\u4eba\u5bf9\u4ee5\u524d\u7684Python2\u7ed1\u5b9a\u63d0\u4f9b\u7684\u4fbf\u5229\u611f\u5230\u9057\u61be\uff0c\u6bd4\u5982\u81ea\u52a8\u521b\u5efa\u5bf9\u8bdd\u6846\u3002THIS\u76ee\u524d\u6b63\u5728\u5de5\u4f5c(\u4e00\u4e9b\u5bf9\u8bdd\u6846\u751f\u6210\u7684\u96cf\u5f62\u751a\u81f3\u5df2\u7ecf\u57282.99.2\u7248\u672c\u4e4b\u540e\u8fdb\u5165\u4e86\u5f00\u53d1\u5206\u652f)\uff0c\u56e0\u6b64\u5e94\u8be5\u53ef\u4ee5\u5728\u4e0b\u4e00\u4e2a\u5f00\u53d1\u7248\u672c\u4e2d\u4f7f\u7528\u3002\u6700\u597d\u7684\u90e8\u5206\u662f\u8fd9\u6837\u7684API\u5c06\u5728\u4e3bAPI\u4e0a\u5b8c\u6210\uff0c\u56e0\u6b64\u5bf9\u6240\u6709\u7ed1\u5b9a\u90fd\u53ef\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fPython\u6216\u6a21\u5f0f\u3002\u8fd9\u662f\u81ea\u7701API\u4e0e\u624b\u52a8\u7ef4\u62a4\u7684\u7ed1\u5b9a\u76f8\u6bd4\u7684\u6700\u5927\u4f18\u52bf\u4e4b\u4e00\uff1a\u6211\u4eec\u5c06\u5728\u4e3bAPI\u4e2d\u63d0\u4f9b\u5b83\u4eec\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u4eab\u53d7\u5b83\u4eec\uff0c\u65e0\u8bba\u60a8\u559c\u6b22\u54ea\u79cd\u8bed\u8a00\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u53ef\u7528\u7ed1\u5b9a\u4e2d\u91cd\u65b0\u5b9e\u73b0\u597d\u7684\u7279\u6027\u3002\n\u6700\u540e\uff0cSCRIPT-FU\u4e0d\u662f\u88ab\u53cd\u601d\u7684\u7ed1\u5b9a\u4e4b\u4e00(\u867d\u7136\u636e\u8bf4\u6709GObject Introspecting\u65b9\u6848\u7ed1\u5b9a\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u4efb\u4f55\u7ed1\u5b9a)\uff0c\u5e76\u4e14\u4e3b\u8981\u4f5c\u4e3a\u5b83\u81ea\u5df1\u7684\u6269\u5c55\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u4e00\u4e9b\u5173\u4e8eAPI\u66f4\u6539\u7684\u95ee\u9898\u5df2\u7ecf\u88ab\u63d0\u51fa(\u4f8b\u5982\uff0c\u65e0\u6cd5\u50cf\u524d\u9762\u8ba8\u8bba\u7684\u90a3\u6837\u521b\u5efaGFile)\uff0c\u8fd9\u4e9b\u95ee\u9898\u5fc5\u987b\u5728\u6700\u7ec8\u7a33\u5b9a\u53d1\u5e03\u4e4b\u524d\u5f97\u5230\u89e3\u51b3\u3002\n\u5bf9\u4e8e\u6bcf\u79cd\u7ecf\u8fc7\u6d4b\u8bd5\u7684\u7ed1\u5b9a\u8bed\u8a00\uff0c\u6211\u4eec\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u201cGoat Exercise\u201d\u7684\u63d2\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u521b\u5efa\u63d2\u4ef6\u7684\u6f14\u793a\u3002\u4f60\u53ef\u4ee5\u79f0\u5b83\u4e3a\u201cGIMP Hello World\uff01\u201d\n\u6bcf\u4e2aGoat\u7ec3\u4e60\u7528\u5b83\u81ea\u5df1\u7684\u8bed\u8a00\u505a\u5b8c\u5168\u76f8\u540c\u7684\u4e8b\u60c5\uff1a\u5b83\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u6807\u7b7e\u3001\u6309\u94ae\u548c\u6587\u672c\u89c6\u56fe(GTK+\u548cGLib/GIO\u6f14\u793a)\u7684\u5bf9\u8bdd\u6846\uff1b\u5176\u4e2d\u4e00\u4e2a\u6309\u94ae\u89e6\u53d1\u4e00\u4e2a\u8fc7\u6ee4\u5668\u6765\u4fee\u6539Active Layer(GEGL\u6f14\u793a\u548cGIMP API\u6f14\u793a)\uff1b\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u540c\u65f6\u5728\u6587\u672c\u89c6\u56fe\u4e2d\u663e\u793a\u5b83\u81ea\u5df1\u7684\u6e90\u4ee3\u7801(\u4fbf\u4e8e\u4eceGIMP\u4e2d\u68c0\u67e5\u4ee3\u7801)\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u6309\u94ae\u5c06\u60a8\u53d1\u9001\u5230\u5b58\u50a8\u5e93\u6587\u4ef6(\u5982\u679c\u60a8\u66f4\u559c\u6b22\u7b7e\u51fa\u6700\u65b0\u7248\u672c\uff0c\n\u8fd9\u4e9b\u63d2\u4ef6\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba1\u5212\u7528GIMP 3\u6765\u6539\u5584\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u3002\u5b83\u4eec\u662f\u201c\u81ea\u6211\u8bb0\u5f55\u6f14\u793a\u63d2\u4ef6\u201d\u7684\u7b2c\u4e00\u6b65(\u540c\u65f6\u505a\u4e00\u4e9b\u6bd4\u5149\u79c3\u79c3\u7684\u201cHello\u548cWorld\u201d\u66f4\u4ee4\u4eba\u5174\u594b\u7684\u4e8b\u60c5)\u3002\n\u72b6\u6001\uff1a\u5c71\u7f8a\u7ec3\u4e60\u7684\u5f53\u524d\u4ee3\u7801\u5e76\u4e0d\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684API\u66f4\u65b0\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u79fb\u52a8\u7684\u76ee\u6807\u3002\u8fd9\u4e9b\u5c06\u5728\u53d1\u5e03\u4e4b\u524d\u8fdb\u884c\u66f4\u65b0\u3002\n\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u5728GIMP3\u4e2d\u5199\u4e0b\u4e00\u4e9b\u5173\u4e8e\u63d2\u4ef6\u5f00\u53d1\u7684\u6587\u6863\uff0c\u5e76\u5c06\u9010\u6b65\u5f00\u59cb\u53d1\u5e03\u4e00\u4e9b\u6307\u5357\u3002\u5e0c\u671b\u6211\u4eec\u751a\u81f3\u80fd\u591f\u91cd\u65b0\u63a8\u51fa\u6211\u4eec\u7684\u5f00\u53d1\u8005\u7f51\u7ad9\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u591a\u5e74\u6765\u4e00\u76f4\u5728\u6162\u6162\u8870\u8d25\u3002\u6211\u4eec\u5e0c\u671bGIMP 3\u80fd\u8ba9GIMP\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u91cd\u65b0\u7115\u53d1\u751f\u673a\uff01\n\u6269\u5c55\u540d\u662f\u4e00\u79cd\u65b0\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5b83\u53ea\u662f\u6570\u636e(\u753b\u7b14\u3001\u95ea\u5c4f\u3001\u56fe\u6848\u3001\u52a8\u6001\u2026)\u7684\u5305\u88c5\u5668\u3002\u6216\u4e0e\u5143\u6570\u636e\u5173\u8054\u7684\u63d2\u4ef6(\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u5c4f\u5e55\u622a\u56fe\u3001\u7248\u672c\u3001Requirements\u2026)\u3002\u76ee\u6807\u662f\u5141\u8bb8\u63d2\u4ef6\u5f00\u53d1\u4eba\u5458\u53d1\u5e03\u4ed6\u4eec\u5728\u5b58\u50a8\u5e93\u4e0a\u7684\u5de5\u4f5c\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728GIMP\u4e2d\u641c\u7d22\u7b2c\u4e09\u65b9\u63d2\u4ef6\u3001\u5b89\u88c5/\u5378\u8f7d\u3001\u542f\u7528/\u7981\u7528\u548c\u66f4\u65b0\u5b83\u4eec\u3002\n\u83dc\u5355\u7f16\u8f91&&gt;\u7ba1\u7406\u6269\u5c55\u4f1a\u663e\u793a\u57fa\u672c\u5bf9\u8bdd\u6846\u3002\u7279\u522b\u662f\u5728\u201c\u7cfb\u7edf\u6269\u5c55\u201d\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u4e00\u4e2a\u201c\u5b98\u65b9DemoPlug-in\u201d\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6269\u5c55\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u6346\u7ed1\u4e86\u6211\u4eec\u524d\u9762\u8c08\u5230\u7684\u6240\u6709GoatExercise\u63d2\u4ef6\u3002\u5982\u679c\u5173\u95ed\uff0c\u91cd\u65b0\u542f\u52a8\u540e(\u73b0\u5728\u5fc5\u987b\u91cd\u65b0\u542f\u52a8GIMP\u624d\u80fd\u770b\u5230\u6548\u679c)\uff0c\u83dc\u5355\u7c7b\u522bFilters&gt\uff1bDevelopment&&gt;GoatExercises\u6d88\u5931\u4e86\u3002\n\u5728\u6211\u4eec\u505a\u4e86\u66f4\u591a\u7684\u5de5\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u8ba8\u8bba\u8fd9\u4e2a\u7279\u6027\u3002\u7279\u522b\u662f\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u6709\u5173\u5982\u4f55\u521b\u5efa\u6269\u5c55\u7684\u6587\u6863\u3002\u8fd9\u7edd\u5bf9\u662f\u63d2\u4ef6\u548c\u8d44\u6e90\u521b\u5efa\u8005\u5e94\u8be5\u671f\u5f85\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u5c06\u6709\u52a9\u4e8e\u4e0e\u5176\u4ed6\u4eba\u5206\u4eab\u4ed6\u4eec\u7684\u521b\u4f5c\u3002\n\u73b0\u72b6\uff1a\u5728GIMP\u65b9\u9762\u8fd8\u6709\u66f4\u591a\u7684\u5de5\u4f5c\u8981\u505a\uff0c\u7279\u522b\u662f\u5728\u4e0e\u5b58\u50a8\u5e93\u7684\u901a\u4fe1\u65b9\u9762\uff0c\u5728\u5b98\u65b9\u5b58\u50a8\u5e93\u548c\u6269\u5c55\u7f51\u7ad9\u65b9\u9762\u8fd8\u6709\u66f4\u591a\u7684\u5de5\u4f5c\u8981\u505a\u3002\n\u201c\u592a\u7a7a\u5165\u4fb5\u201d\u662f\u8fd9\u9879\u5de5\u4f5c\u7684\u5185\u90e8\u4ee3\u53f7\uff0c\u6700\u521d\u4e8e2018\u5e74\u5f00\u59cb\uff0c\u5176\u76ee\u6807\u662f\u5728\u6838\u5fc3\u50cf\u7d20\u5904\u7406\u8fc7\u7a0b\u4e2d\u9002\u5f53\u5730\u652f\u6301\u8272\u5f69\u7a7a\u95f4\u3002\u5728GIMP 2.10\u7cfb\u5217\u4e2d\uff0c\u5c3d\u7ba1\u6838\u5fc3\u8272\u5f69\u7ba1\u7406\u652f\u6301\uff0c\u4f46\u914d\u7f6e\u6587\u4ef6\u6709\u65f6\u4f1a\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e22\u5931\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u6700\u7ec8\u7ed3\u679c\u65f6\u624d\u91cd\u65b0\u5f15\u5165\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5bfc\u81f4\u9519\u8bef\u7684\u503c\u3002\n\u4efb\u4f55\u6709\u5174\u8da3\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u90fd\u53ef\u4ee5\u9605\u8bfb\u00f6yvind Kol\u00e7s\u7684\u5e16\u5b50\uff0c\u7279\u522b\u662fGEGL0.4.6\u7684\u8be6\u7ec6\u76f8\u5173\u7248\u672c\u8bf4\u660e\uff0c\u4ed6\u5f88\u597d\u5730\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u9879\u5de5\u4f5c\u7684\u4e00\u4e9b\u6539\u8fdb\u5df2\u7ecf\u88ab\u9010\u6b65\u62a5\u544a\u5230\u5404\u79cdGIMP 2.10.x\u7248\u672c\u4e2d\uff0c\u4f46\u662fGIMP 3.0\u5e94\u8be5\u662f\u6211\u4eec\u5e0c\u671b100%\u6b63\u786e\u7684\u6700\u7ec8\u7248\u672c\u3002\n\u73b0\u72b6\uff1a\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e0a\uff0c\u5f00\u53d1\u5206\u652f\u6bd42.10\u7cfb\u5217\u8981\u5148\u8fdb\u5f97\u591a\uff0c\u4f46\u8fd8\u9700\u8981\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002GIMP\u7684\u5404\u4e2a\u65b9\u9762\u4ecd\u7136\u4e3b\u8981\u9884\u671f\u6216\u663e\u793a\u4ec5\u9650sRGB\u7684\u503c\u3002\nGIMP 3\u73b0\u5728\u6709\u4e00\u4e2a\u6e32\u67d3\u7f13\u5b58\uff0c\u53ef\u4ee5\u4fdd\u5b58\u7f29\u653e\u3001\u8272\u5f69\u7ba1\u7406\u3001\u663e\u793a\u8fc7\u6ee4\u5668\u548c\u5916\u58f3\u8499\u7248(\u7528\u4e8e\u6a21\u7cca\u9009\u62e9\u7b49\u5de5\u5177)\u7684\u7ed3\u679c\u3002\u4e0eGTK2\u7248\u672c\u7684GIMP\u76f8\u6bd4\uff0c\u8fd9\u5e26\u6765\u4e86\u66f4\u5feb\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\u73b0\u5728\uff0c\u5728\u9996\u9009\u9879-&gt\uff1b\u663e\u793a\u4e2d\u4e5f\u6709\u7f29\u653e\u8d28\u91cf\u8bbe\u7f6e\u3002\u5f53\u8bbe\u7f6e\u4e3a\u5feb\u901f\u65f6\uff0cGIMP\u5c06\u4ece\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684mipmap\u7ea7\u522b\u8fdb\u884c\u6700\u8fd1\u90bb\u5185\u63d2\uff0c\u800c\u4e0d\u662f\u7ebf\u6027\u6216\u6846\u8fc7\u6ee4\u3002\u8fd9\u5bf9\u7ed8\u753b\u548c\u6240\u6709\u66f4\u65b0\u90fd\u6709\u8f7b\u5fae\u800c\u6301\u4e45\u7684\u63a8\u52a8\u4f5c\u7528\u3002\u6211\u4eec\u6709\u51e0\u4e2a\u60f3\u6cd5\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6539\u5584\u8fd9\u4e00\u70b9\uff0c\u6bd4\u5982\u9ad8\u8d28\u91cf\u7684\u91cd\u65b0\u5b9a\u4f4d\u3002\n.", "note_en": "GIMP 2.99.2 marks the first step towards  GIMP 3 based on  GTK3 user interface\u00a0toolkit.\n       The first difference will be visual as you will notice that  GIMP got abit more of a modern look and it can also use some new widgets (insteadof redeveloping them on  GTK2) as well as client-side window decorationson various dialogs. But the aesthetic differences are far from being themain appeal of  GTK3.\n   One of the main issues of  GTK2 was the absent support for high pixeldensity displays (e.g. small screens with high resolution or big screenswith extremely high resolution) which has become more widespread,especially among graphics professionals.  GIMP 2.10 came with partialworkaround which was acceptable only in some limited cases but was notreally appropriate for intense use of the\u00a0software.\n    By \u201cinput device\u201d, we are mostly talking about drawing tablets orpen displays. In  GIMP 2, their support had many shortcomings: you had toplug the tablet before starting  GIMP, enable each new device explicitlyin the settings and, worse, unplugging the tablet could lead toinstability of the software (though this issue got mostly worked aroundon  GTK2 by  GIMP developers in the v2.8 release\u00a0series).\n GIMP 3 (hence this first development release) is bringing hotplug support,which means: start  GIMP, plug your tablet, done. You are ready to draw,with pressure, tilt, and\u00a0everything.\n We are also trying to improve general support by making the advancedconfiguration of input devices easier to\u00a0set.\n A while ago, we also experimented with support for touch gestures likezooming, panning, rotating etc. We did not finish this work because werealized this was not a priority compared to some other\u00a0features.\n Touch gestures are very nice and awesome but also sometimes become a burden.Actually, many professional artists even disable touch sensitivity toprevent unwanted input while working with a stylus (high-end tablets oftencome with a physical switch for this nowadays, and this can also be disabledin tablet settings). With this in mind, we have decided to not make ita priority compared to some other work-in-progress. So we are not surewhether specific gesture support will make it to  GIMP v3.0. We dowelcome patches from anyone willing to make it one\u2019s priority\u00a0though.\n Status: some work needs to be done to simplify configuration dialog asthe support for legacy features is either not needed anymore or can bedone better. We might also want to add support for Wayland-specificfeatures related to input\u00a0devices.\n  With  GTK3, we also inherit its  CSS-based theme format. Unfortunatelythis means that all custom-made themes from past versions will beincompatible with  GIMP 3.0 and future releases. On the bright side,this new theme format uses a very well known theming standard. Thisshould make it much easier to tweak  GIMP\u2019s interface to your needs and\u00a0preferences.\n Moreover, the symbolic icon themes are much better supported. They willfollow the theme-set foreground and background colors. If you ever had toswitch from a dark theme to a light one in  GIMP 2.10, you probablyremember you also had to switch the symbolic icon themes manually. Thiswon\u2019t be necessary anymore as symbolic icons will be recolored accordingto your\u00a0theme.\n Finally, the \u201cdark theme\u201d is a core concept of  GTK3, which means,for instance, that even window decorations get recolored as you cansee in the screenshot\u00a0above.\n Also, a same theme could propose both a dark and a light variant, so the Theme preferences page shows a  \u201cUse dark theme variant if available\u201dcheckbox. Similarly, icon themes may propose both symbolic and coloricons. Which is why the  \u201cIcon Theme\u201d preferences page has a  \u201cUsesymbolic icons if available\u201d switch so that you could choose yourpreferred\u00a0style.\n   Code-side, changes related to theming are basically done. Now we need anew default theme.For now,  GIMP 2.99.2 only lists the \u201cSystem\u201d theme, which lets  GIMPfollow your system-wide  GTK theme. This is a regression from 2.10 thatwe intend to fix in time for  GIMP 3.0 by reintroducing a default themewith a neutral dark/light variant as well as a neutral middle-graycustom\u00a0theme.\n The main issue with system themes is that they cover very basic desktopuse cases. Meanwhile, advanced graphics work requires a neutral gray themeto avoid polluting your color perception. This is the main reason why GIMP needs to default to a neutral color theme with symbolic\u00a0icons.\n Colored themes and icons are still an option, and, in fact, we arepretty sure that the community will soon come up with good-lookingcustom themes. This is a great way to contribute to  GIMP as a\u00a0non-developer!\n  The port to  GTK3 should normally give us Wayland support on Linux for free.And it mostly does. Unfortunately, a few bugs have already been reportedfor  GIMP running on Wayland. Some of them are clearly blockers for releasing GIMP 3 (such as various weird  GUI bugs or  huge memory leaks). Others are less seriousbut still are a bit embarrassing, like the one where the splash screen isbroken on HiDPI displays because Wayland doesn\u2019t report scaling\u00a0properly.\n Until these issues are fixed, we don\u2019t think we can safely claim that weprovide appropriate Wayland support. We will be grateful for all patches toaddress that, whether they arrive to  GIMP,  GTK, or another relevant partof the technology stack. If you are interesting in helping out, here is the list of Wayland-related bugs.\n Appropriate Wayland support also means we need to reimplement a fewfeatures through so called portals. We have already done this for thescreenshot plug-in (using Freedesktop,  GNOME, and  KDE portals), and thereis some ongoing work to fix on-display color picking (already works in  KDE,doesn\u2019t yet work with  GNOME and Freedesktop\u00a0portals).\n As for the file portal, this is probably something that won\u2019t happenfor  GIMP 3.0, because we still require some features of the  GTK filedialog, but it might happen later with a planned redesign for improvedexport\u00a0process.\n   Managing a complex project with tens and hundreds of layers is now mucheasier thanks to newly added multi-layer selection.  Aryeom, the animation film directorworking with the core team, has been asking for this since 2015, sothe  ZeMarmot project finally made this happen. This is anotherexample of a successful close artist-developer collaboration: every featurewas carefully designed following discussions and was tested in\u00a0production.\n  The Layers dockable is now fully multi-selection aware, using the usualinteraction for multi-items selection ( Shift+click for selecting arange of layers and  Ctrl+click for selecting or deselectingnon-contiguous layers). Organizational operations now work on allselected layers, i.e. that you can move, reorder, delete, duplicate,merge (and more\u2026) all selected layers at\u00a0once.\n Several tools now also work on multiple selected layers. For instanceall transform tools (move, rotation, scale, perspective, unifiedtransform\u2026) will transform all selected layers (in addition to the existinglayer links with the \u201cchain\u201d icon). You can also crop several layers atonce or copy-paste merged layers\u2019 projection. Even the  Color Picker toolcan now pick merged color from several layers (some kind of partial\u201cSample merged\u201d without having to hide unwanted\u00a0layers).\n These are just a few examples because this change affects a large partof the code base: the concept of an active layer is prominent in everyaction. You can read more about this in a  detailed developmentreport.\n  Some features in  GIMP still expect a single layer and need to be fixedbefore the final release. It\u2019s possible that we will inadvertently breaksomething while working on that, which is why it\u2019s important that we domore development releases. Moreover, we might extend the multi-itemselection to paths and channels\u00a0soon.\n Finally, painting and  GEGL operations (filters) are still limited tosingle layers. Adding ability to paint or run pixel operations onseveral layers at once will probably require some additional interfacespecification and designing to prevent undesired consequences likeextremely slow operation or the ability to cancel a long-running\u00a0process.\n  We had to break the plug-in APi to introduce many improvements, although wetook a special care not to break things where it wasn\u2019t necessary to do\u00a0so.\n Porting a single-file plug-in from  GIMP 2.10 to  GIMP 3 usually takes between5 and 30 minutes. We are working on a porting documentation to be releasedalong with  GIMP\u00a03.\n If you are a plug-in developer, one of the first steps you can take ismaking sure you don\u2019t use any deprecated functions. We compiled a  list of functions removed and theirreplacement. You can already do this part of the port while still targeting  GIMP 2.10.x\u00a0versions.\n  Among the noteworthy changes, we moved away from object IDs to realobjects. In particular in  GIMP 3,  GimpImage,  GimpItem, GimpDrawable,  GimpLayer,  GimpVectors,  GimpChannel and  GimpPDBare objects (other classes of objects already exist or may be added\u00a0later).\n It brings safer programming by having typed objects whose class can beeasily verified, hence better error messaging (with IDs, which arebasically integers, having weird bugs because of improper IDs was notuncommon and it was not always easy to track the\u00a0bug).\n Also object-programming implies class inheritance. Typically a GimpLayer is also a  GimpDrawable, itself a  GimpItem. This meansyou can use any methods from parent classes and easily test for class\u00a0ownership.\n A non-C consequence is that it enables bindings to adapt the  API totheir own object model. Hence duplicating a  GimpImage named forinstance  img in Python 3 can be done with the quite pythonic  API  img2= img.duplicate().\n Status: object port is basically done. We also want to use objectsignalling, which is a work-in-progress and should eventually allow toconnect signal handlers directly on objects, in order to manage eventsfrom the core application (something impossible in  GIMP 2, except byregular\u00a0polling).\n  Another change in our  API is that paths are now handled as  GFile,which implies using the GLib/ GIO  API.\n While it may seem a bit cumbersome (as it adds the additional step ofcreating and managing a GFile), this allows much more robust filehandling. In particular, you won\u2019t have to take care about pathcharacter encoding (a real issue when developers just assume everyoneuses the same encoding as themselves) hence broken paths andnon-portable code. Also we don\u2019t have to deal with difference ofoperating systems regarding folder separation or file system notations.Working with a  GFile makes internal representation transparent andfile handling\u00a0robust.\n The second big advantage is that it means all such  API gains any abilityof installed  GIO modules, in particular loading or saving from/to remotelocations (even possibly through secure channels like  HTTPS).This opens a wide range of\u00a0possibilities.\n GIO port of file handling had been done in the core code of  GIMP, backfor  GIMP 2.10 initial release. We are now bringing the advantages toplug-in developers as well in  GIMP\u00a03.0.\n  Language bindings through GObject Introspection also have full access toGLib/ GIO  API so they are already able to create GFile from paths or  URIwithout any problem.Yet legacy manual bindings, such as  script-fu (Scheme), don\u2019t haveGFile access. We are working on it (a patch even already exists, butneeds to be\u00a0reviewed).\n  Some major changes have been done in the  API to declare your plug-in.This is now done by subclassing the  GimpPlugIn class and overridingsome methods to list and document the created plug-in procedures. Wemade a much cleaner and explicit  API than the previous one which shouldhelp plug-in\u00a0developers.\n The way your plug-in procedure\u2019s arguments are now handled has also beenstandardized, in particular using config  GObject properties. This iseasier to deal with as a generic logics. Especially the same configobject allows us to generate many features. For instance, it will helpgenerate dialogs on demand for plug-ins who do not want to tinker with GTK or other toolkit themselves. It also simplify and standardizeargument saving for subsequent calls or a same\u00a0procedure.\n Eventually this is also part of the base work for a futurerecording/macro feature (very unlikely to be in  GIMP 3.0, but this ispart of the ground work towards such feature) since we will be able toreliably save the arguments used when running\u00a0plug-ins.\n Status: though the main part of this  API is done, more needs to happenbefore the release, and in particular we are still tinkering with theargument\u00a0representation.\n  We have introspected the full  API through  GObjectIntrospection. It means that  GIMP API should be fully usable in a wide range of language bindings. We haveonly tested a few so far, so we can confirm that  GIMP can now bescripted (additionally to C and C++ of course)\u00a0with:\n  One of the main differences with how  GIMP used to be scriptable, withPython 2 notably, is that a custom layer  API is not needed\u00a0anymore.\n Also  GIMP 2 bindings used to be made around the  PDB protocol which isonly a subset of the full C  libgimp  API. The new bindings are builtaround  libgimp itself. Therefore plug-ins in Python 3, Javascript, Luaor Vala (or any future introspected binding) will have the samepossibilities as C plug-ins. This is a bright new world for  GIMP plug-in\u00a0developers!\n Another consequence is that the  API is basically the same for all theselanguages, apart for language idiosyncrasies.For instance if finding an intersection of a drawable with a selectionin C\u00a0is:\n      Another nice example is how C-type arrays, with an additional lengtharguments are handled. As expected, the length argument does not existin a binding if the target language has an appropriate structure.For instance, while you can copy from multiple drawables from a script\u00a0with:\n /* Where @drawables is a C array of drawables, and @num_drawables  * indicates the size of this array.  */ gimp_edit_copy  ( num_drawables ,  drawables );\n This can be done in Python 3 as (with  num_drawables removed and C arrayreplaced by a Python\u00a0list):\n  Not only do these binding now have access to the full  GIMP  API, but theyalso have access to many more introspected APIs used as dependencies to GIMP. For instance a plug-in can have access to the full GLib/ GIO,  GTK,Pango, Cairo APIs as well as the babl and  GEGL  API (for easier pixelmanipulation and access to a massive range of existing operations). Thiswas one of the main limitation of the former Python 2 binding, whichcould not manipulate pixels with  GEGL.\n Status: some people are regretting the facilities provided by theformer Python 2 binding, such as automatic dialog creation. Thisis worked on right now (some embryo of dialog generation has evenalready landed in the development branch after 2.99.2 release) henceshould be available for the next development release. The best part isthat such  API will be done on the main  API, thus available to allbindings, not just Python or Scheme.This is one of the biggest advantages of introspected  API compared tomanually maintained bindings: rather than reimplementing nice featuresin every available binding, we will provide them in the main  API so thatevery developer can enjoy them, whatever your preferred\u00a0language.\n Finally Script-fu is not one of the introspected bindings (though thereis supposedly GObject Introspecting scheme bindings, but we haven\u2019ttested any yet) and still mostly works as its own extension. Yet issuesregarding some of the  API changes have been raised (for instance theinability to create  GFile as discussed earlier) and will have to befixed before finale stable\u00a0release.\n  For each of the tested binding languages, we created a plug-in called\u201cGoat exercise\u201d, which is a demo for creating plug-ins. You can call ita \u201c  GIMP Hello World!\u201c.\n Each Goat Exercise does exactly the same thing in its own language: itcreates a dialog with a label, buttons and a text view ( GTK+ andGLib/ GIO demo); one of the buttons triggers a filter modifying theactive layer ( GEGL demo and  GIMP  API demo); all this while showing itsown source code inside the text view (making it easy to inspect the codefrom within  GIMP) and with a button sending you to the repository file(if you prefer to check out the last version, comfortably in your code\u00a0editor).\n  These plug-ins are quite important as we are planning to improve theplug-in ecosystem with  GIMP 3. They are the first step of\u201cself-documenting demo plug-ins\u201d (while doing something a bit moreexciting that a bare \u201cHello\u00a0World\u201d).\n Status: current code of the Goat Exercise is not always up-to-datewith the most recent  API yet as it is a moving target. These will beupdated before\u00a0release.\n  We have started to write down some documentation regarding plug-indevelopment in  GIMP 3, and will progressively start to publish sometutorials. Hopefully we will even be able to relaunch our developerwebsite that has been slowly decaying for too many years. We hope that GIMP 3 will revitalize the  GIMP plug-in\u00a0ecosystem!\n   Extensions are a new file format that is simply a wrapper of data(brushes, splash screens, patterns, dynamics\u2026) or plug-ins, associatedwith metadata (name, description, screenshots, version, requirements\u2026).The goal will be to allow plug-in developers to publish their work onrepositories for anyone to search third-party plug-ins,install/uninstall, enable/disable and update them, all within  GIMP.\n The menu  Edit &gt; Manage Extensions shows the base dialog. In the\u201cSystem Extensions\u201d tab in particular, you will notice an \u201cOfficial DemoPlug-ins\u201d which is our first extension. It in fact bundles all the GoatExercises plug-ins we talked about earlier. If you switch if off, youwill notice after a restart (right now you have to restart  GIMP to seethe effect) that the menu category  Filters &gt; Development &gt; GoatExercises disappeared.\n  We\u2019ll get back to talking about this feature after we\u2019ve done more workon it. In particular, we will provide documentation on how to createextensions. It is definitely something plug-in and resource creatorsshould look forward to, as it will help share their creations with\u00a0others.\n Status: still more work to do on the  GIMP side, especially forcommunicating with repositories, and much more work to be done for theofficial repository and the website for\u00a0extensions.\n  \u201c Space invasion\u201d is the internal code name for the work originallystarted in  2018whose goal was proper support of color space during core pixelprocessing. In the  GIMP 2.10 series, despite core color managementsupport, the profiles were sometimes lost during an operation processingand only reintroduced on finale results, which may result in wrongvalues in some\u00a0cases.\n Anyone interested to understand further the problematics can read \u00d8yvind Kol\u00e5s\u2019s post and inparticular the detailed associated  release notes for  GEGL0.4.6 where heexplains this really\u00a0well.\n Some of the improvements of this work have already been progressivelybackported to various  GIMP 2.10.x releases, but  GIMP 3.0 should be theculminating release where we hope to get this 100%\u00a0right.\n Status: the development branch is much more advanced on this topicthan the 2.10 series, but some more work needs to be done. Variousaspects of  GIMP still mostly expect or display sRGB-only\u00a0values.\n  GIMP 3 now has a render cache that keeps the result of scaling, colormanagement, display filters and shell mask (for tools like  Fuzzy Select).This results in much snappier user experience in comparison to the  GTK2version of  GIMP.\n There is now also a  Zoom Quality setting in  Preferences -&gt; Display.When set to  Fast,  GIMP will do a nearest neighbor interpolation fromthe next bigger mipmap level instead of linear or box filtering. Thisgives a slight and permanent boost to painting and all updates. We havea few ideas to improve this further like reblitting in high qual\n......", "posttime": "2020-11-07 11:23:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7528\u6237\u754c\u9762,user,gimp", "title": "GIMP 2.99.2-GTK3\u7528\u6237\u754c\u9762\u5de5\u5177\u5305", "title_en": "Gimp 2.99.2 \u2013 GTK3 user interface toolkit", "transed": 1, "url": "https://www.gimp.org/news/2020/11/06/gimp-2-99-2-released/", "via": "", "real_tags": ["\u7528\u6237\u754c\u9762", "user", "gimp"]}, {"category": "", "categoryclass": "", "imagename": "aff3730f96a6ba9e0b067b79d38d3e23.png", "infoid": 1033643, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u7070\u72d7\u4e00\u76f4\u5728\u7528\u516c\u4ea4\u8f66\u8f7d\u7740\u7f8e\u56fd\u4eba\u56db\u5904\u6e38\u73a9\u3002\u5f88\u96be\u76f8\u4fe1\uff0c\u8fd9\u4e48\u591a\u5e74\u8fc7\u53bb\u4e86\uff0c\u8fd9\u5bb6\u516c\u53f8\u4ecd\u5728\u9ad8\u6b4c\u731b\u8fdb\u3002\n\u5c31\u804c\u4e1a\u751f\u6daf\u800c\u8a00\uff0c\u5361\u5c14\u00b7\u57c3\u91cc\u514b\u00b7\u5a01\u514b\u66fc(Carl Eric Wickman)\u5728\u6c7d\u8f66\u884c\u4e1a\u7684\u7ecf\u5386\u5e76\u4e0d\u5409\u5229\u30021913\u5e74\uff0c\u8fd9\u4f4d\u79fb\u6c11\u94bb\u63a2\u64cd\u4f5c\u5458\u82b1\u4e863000\u7f8e\u5143\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u5e0c\u5bbe\u5f00\u4e86\u4e00\u5bb6\u56fa\u7279\u5f02\u8f6e\u80ce/Hupmobile\u6c7d\u8f66\u4e13\u8425\u5e97\uff0c\u90a3\u91cc\u79bb\u4e16\u754c\u4e0a\u6700\u5927\u7684\u9732\u5929\u94c1\u77ff\u4e0d\u8fdc\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5a01\u514b\u66fc\u5728\u9500\u552e\u6c7d\u8f66\u65b9\u9762\u751a\u81f3\u6bd4\u6311\u9009\u6c7d\u8f66\u5236\u9020\u5546\u66f4\u7cdf\u7cd5\uff0c\u6240\u4ee5\u8fd9\u4f4d\u6709\u4e8b\u4e1a\u5fc3\u7684\u5e74\u8f7b\u745e\u5178\u4eba\u5728\u5b8c\u6210\u4e86\u4ed6\u552f\u4e00\u7684\u4e00\u6b21\u2026\u9500\u552e\u540e\u4e0d\u4e45\u5c31\u653e\u5f03\u4e86\u4ed6\u7684\u7ecf\u9500\u5546\u68a6\u60f3\u3002\u5bf9\u4ed6\u81ea\u5df1\u8bf4\u3002\n\u610f\u8bc6\u5230\u5927\u591a\u6570\u94c1\u77ff\u77f3\u77ff\u5de5\u592a\u7a77\uff0c\u4e70\u4e0d\u8d77\u81ea\u5df1\u7684\u8f66\uff0c\u5a01\u514b\u66fc\u51b3\u5b9a\u5f00\u59cb\u5728\u4e24\u82f1\u91cc\u5916\u7684\u77ff\u4e1a\u5c0f\u9547\u5e0c\u5bbe\u548c\u7231\u4e3d\u4e1d\u4e4b\u95f4\u8fd0\u9001\u5de5\u4eba\u3002\u8fd9\u4f4d27\u5c81\u7684\u7537\u5b50\u5c0615\u540d\u4e58\u5ba2\u585e\u8fdb\u4e86\u4ed6\u7684\u516b\u5ea7\u201c\u65c5\u6e38\u8f66\u201d\uff0c\u5355\u7a0b\u6536\u8d3915\u7f8e\u5206\u3002\u5728\u4ed61914\u5e74\u7684\u7b2c\u4e00\u6b21\u65c5\u884c\u4e2d\uff0c\u5a01\u514b\u66fc\u603b\u5171\u52df\u96c6\u4e862.25\u7f8e\u5143\u3002\u4f46100\u5e74\u540e\uff0c\u8fd9\u7b14\u5fae\u4e0d\u8db3\u9053\u7684\u91d1\u989d\u5df2\u7ecf\u589e\u957f\u5230\u6bcf\u5e74\u8fd110\u4ebf\u7f8e\u5143\u7684\u6536\u5165\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5a01\u514b\u66fc\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d1\u660e\u4e86\u57ce\u9645\u5df4\u58eb\u65c5\u884c--\u5bf9\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u6765\u8bf4\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7070\u72d7\u516c\u53f8(Greyhound)\uff0c\u8fd9\u5bb6\u516c\u53f8\u662f\u4ece\u5f88\u4e45\u4ee5\u524d\u7684Hupmobile\u65c5\u884c\u4e2d\u8131\u9896\u800c\u51fa\u7684\u3002\u300a\u7070\u72d7\u4e4b\u8def\u300b(Going The Greyhound Way)\u4e00\u4e66\u7684\u4f5c\u8005\u7f57\u4f2f\u7279\u00b7\u52a0\u5e03\u91cc\u514b(Robert Gabrick)\u8bf4\uff1a\u201c\u7070\u72d7\u5df2\u7ecf\u6210\u4e3a\u516c\u5171\u6c7d\u8f66\u51fa\u884c\u7684\u5e38\u5ba2\u3002\u201d\u201c\u5c31\u50cf\u7eb8\u5dfe\u4e00\u6837\u3002\u201d\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u7ecf\u5178\u7684\u7f8e\u56fd\u5546\u4e1a\u5076\u50cf-\u78b0\u5de7\u73b0\u5728\u5f52\u4e00\u5bb6\u82f1\u56fd\u4f01\u4e1a\u96c6\u56e2\u6240\u6709-\u73b0\u5728\u62e5\u6709\u8d85\u8fc77300\u540d\u5458\u5de5\uff0c\u4f30\u8ba1\u5e74\u9500\u552e\u989d\u4e3a8.2\u4ebf\u7f8e\u5143\uff0c2000\u8f86\u516c\u4ea4\u8f66\u670d\u52a1\u4e8e\u7f8e\u56fd48\u4e2a\u5dde\u548c\u52a0\u62ff\u59279\u4e2a\u7701\u4efd\u76843800\u4e2a\u76ee\u7684\u5730\u3002\u5fb7\u4fdd\u7f57\u5927\u5b66(DePaul University)\u6559\u6388\u7ea6\u745f\u592b\u00b7\u65bd\u7ef4\u7279\u66fc(Joseph Schwieterman)\u662f\u57ce\u9645\u5df4\u58eb\u51fa\u884c\u65b9\u9762\u7684\u6743\u5a01\uff0c\u4ed6\u8bf4\uff1a\u201c\u7070\u72d7\u7684\u54c1\u724c\u8ba4\u77e5\u5ea6\u8ba9\u6211\u5f88\u60ca\u8bb6\u3002\u201d\u201c\u8fd9\u662f\u4e00\u4e2a\u7f8e\u56fd\u4eba\u7684\u6210\u529f\u6545\u4e8b\u3002\u201d\n\u4f46\u7070\u72d7\u5728\u5df4\u58eb\u884c\u4e1a\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u7684\u9053\u8def\u8fdc\u975e\u4e00\u5e06\u98ce\u987a\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u5a01\u514b\u66fc\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u7f8e\u56fd\u7684\u9053\u8def\u98a0\u7c38\u5f97\u5389\u5bb3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5c71\u59c6\u5927\u53d4\u5728\u5efa\u8bbe\u9ad8\u8d28\u91cf\u7684\u56fd\u5bb6\u516c\u8def\u7cfb\u7edf\u65b9\u9762\u7684\u7b2c\u4e00\u6b21\u8ba4\u771f\u5c1d\u8bd5\u662f1921\u5e74\u7684\u8054\u90a6\u516c\u8def\u6cd5\uff0c\u5de7\u5408\u7684\u662f\uff0c\u540c\u5e74\u7b2c\u4e00\u6279\u57ce\u9645\u516c\u4ea4\u8f66\u4ece\u88c5\u914d\u7ebf\u4e0a\u4e0b\u6765\u3002\n\u4f46\u8fd9\u5e76\u4e0d\u662f\u4ed6\u552f\u4e00\u7684\u6311\u6218\u3002\u5a01\u514b\u66fc\u7684\u201c\u9f3b\u70df\u8def\u7ebf\u201d(Snoose Line)--\u201cSnoose\u201d\u5728\u745e\u5178\u8bed\u4e2d\u662f\u9f3b\u70df\u7684\u610f\u601d\uff0c\u5f53\u5730\u77ff\u5de5\u7528\u6765\u4fdd\u6301\u8b66\u60d5--\u4e5f\u9762\u4e34\u7740\u6765\u81ea\u5176\u4ed6\u8f66\u4e3b\u7684\u7ade\u4e89\uff0c\u8fd9\u4e9b\u8f66\u4e3b\u770b\u5230\u4e86\u8f7d\u4eba\u4e0a\u73ed\u8d5a\u94b1\u7684\u53ef\u80fd\u6027\u3002\u56e0\u6b64\uff0c1916\u5e74\uff0c\u5a01\u514b\u66fc\u548c\u4ed6\u7684\u4e24\u4e2a\u5408\u4f19\u4eba\u5c06\u4ed6\u4eec\u7684\u516c\u53f8\u4e0e\u4e00\u5bb6\u7ade\u4e89\u5bf9\u624b\u5408\u5e76\uff0c\u8fd9\u5bb6\u516c\u53f8\u753119\u5c81\u7684\u673a\u68b0\u5e08\u517cStudebaker\u6240\u6709\u8005\u62c9\u5c14\u592b\u00b7\u535a\u6839(Ralph Bogan)\u7ecf\u8425\u3002\u4ed6\u4eec\u5c06\u65b0\u516c\u53f8\u547d\u540d\u4e3a\u6885\u8428\u5df4\u8fd0\u8f93\u516c\u53f8(Mesaba Transportation Co.)\uff0c\u8fd9\u7b14\u4ea4\u6613\u6210\u4e3a\u672a\u6765\u7684\u6a21\u677f\uff0c\u56e0\u4e3a\u5a01\u514b\u66fc\u591a\u5e74\u6765\u901a\u8fc7\u6536\u8d2d\u6570\u767e\u5bb6\u7ade\u4e89\u5bf9\u624b\uff0c\u5728\u5168\u7f8e\u6269\u5f20\u4e86\u4ed6\u7684\u5df4\u58eb\u5e1d\u56fd\u3002\u4e8b\u5b9e\u4e0a\uff0c\u51e0\u5341\u5e74\u6765\uff0c\u7070\u72d7\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u5355\u4e00\u54c1\u724c\u4e0b\u7684\u5730\u533a\u6027\u516c\u4ea4\u7ebf\u8def\u7684\u96c6\u5408-\u4e94\u5927\u6e56\u7070\u72d7\uff0c\u4f5b\u7f57\u91cc\u8fbe\u7070\u72d7-\u901a\u8fc7\u590d\u6742\u7684\u65f6\u523b\u8868\u548c\u6362\u4e58\u65b9\u5f0f\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u751a\u81f3\u8fde\u7070\u72d7\u7684\u516c\u53f8\u5386\u53f2\u4e5f\u53cd\u6620\u4e86\u4e00\u79cd\u5706\u6ed1\u7684\u8f6c\u79fb\u3002\u8be5\u516c\u53f8\u7684\u5b98\u65b9\u8840\u7edf\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5a01\u514b\u66fc\u7684Hupmobile\uff0c\u4f46\u4ed6\u5b9e\u9645\u4e0a\u57281922\u5e74\u51fa\u552e\u4e86\u4ed6\u5728Mesaba\u7684\u80a1\u4efd\uff0c\u5e76\u5728\u4e0d\u4e45\u4e4b\u540e\u6295\u8d44\u4e86\u53e6\u4e00\u5bb6\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u8fd0\u8425\u5546\u30021925\u5e74\uff0c\u8be5\u516c\u53f8\u4e0e\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u4e00\u5bb6\u516c\u4ea4\u7ebf\u8def\u8fd0\u8425\u5546\u5408\u5e76\uff0c\u6210\u7acb\u4e86Northland Transportation\uff0c\u8fd9\u662f\u5a01\u514b\u66fc\u5728\u5dde\u9645\u5df4\u58eb\u65c5\u884c\u65b9\u9762\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4ecd\u5728\u52aa\u529b\u8bb0\u5206\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e5f\u662f\u73b0\u4ee3\u7070\u72d7\u516c\u53f8(Greyhound Corporation)\u7684\u6b63\u5f0f\u8bde\u751f(\u5728\u51e0\u6b21\u66f4\u540d\u4e4b\u540e)\u3002\n20\u4e16\u7eaa\u521d\uff0c\u7f8e\u56fd\u4eba\u901a\u5e38\u5728\u9700\u8981\u5f80\u8fd4\u4e8e\u57ce\u5e02\u4e4b\u95f4\u65f6\u4e58\u5750\u706b\u8f66\u3002\u4f46\u57281918\u5e74\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u7ed3\u675f\u540e\uff0c\u706b\u8f66\u7968\u9500\u91cf\u5f00\u59cb\u4e0b\u964d\uff0c\u8fd9\u4e00\u4e8b\u6001\u53d1\u5c55\u4fc3\u4f7f\u94c1\u8def\u9ad8\u7ba1\u62a8\u51fb\u7968\u4ef7\u8f83\u4f4e\u7684\u5df4\u58eb\u516c\u53f8\uff0c\u6307\u8d23\u5b83\u4eec\u7834\u574f\u4e86\u7f8e\u56fd\u7684\u9053\u8def\uff0c\u6ca1\u6709\u652f\u4ed8\u81ea\u5df1\u5e94\u627f\u62c5\u7684\u7ef4\u4fee\u8d39\u7528\u3002\u7136\u540e\uff0c\u57281925\u5e74\uff0c\u5927\u5317\u65b9\u94c1\u8def\u603b\u88c1\u62c9\u5c14\u592b\u00b7\u5df4\u5fb7(Ralph Budd)\u51b3\u5b9a\u5b9e\u9645\u7814\u7a76\u8fd9\u4e00\u95ee\u9898\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5df4\u5fb7\u7684\u8c03\u67e5\u663e\u793a\uff0c\u5373\u4f7f\u6ca1\u6709\u516c\u4ea4\u8f66\u7684\u8def\u7ebf\u7ade\u4e89\uff0c\u706b\u8f66\u4e0a\u7684\u5ba2\u8fd0\u91cf\u4e5f\u4f1a\u4e0b\u964d\u3002\u4ed6\u7684\u7814\u7a76\u8868\u660e\uff0c\u771f\u6b63\u7684\u7f6a\u9b41\u7978\u9996\u662f\u4ea8\u5229\u00b7\u798f\u7279(Henry Ford)\uff0c\u4ed6\u57281913\u5e74\u5c06\u88c5\u914d\u7ebf\u5f15\u5165\u6c7d\u8f66\u5236\u9020\u884c\u4e1a\uff0c\u5bfc\u81f4\u6c7d\u8f66\u4ef7\u683c\u5927\u5e45\u4e0b\u964d\uff1a\u94c1\u8def\u516c\u53f8\u7684\u4e1a\u52a1\u88abT\u578b\u8f66\u62a2\u8d70\u4e86\uff0c\u800c\u8bb8\u591a\u4ee5\u524d\u7684\u706b\u8f66\u4e58\u5ba2\u73b0\u5728\u7a81\u7136\u53ef\u4ee5\u8d1f\u62c5\u5f97\u8d77\u4e86\u3002\u90a3\u4e9b\u4e0d\u4f1a\u5f00\u8f66\u6216\u4e0d\u4f1a\u5f00\u8f66\u7684\u4e0d\u5e78\u7684\u4eba\u4ecd\u7136\u5750\u706b\u8f66\u65c5\u884c\uff0c\u9664\u975e\u4ed6\u4eec\u592a\u7a77\u4e86\uff0c\u4e70\u4e0d\u8d77\u7968\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u4e58\u5750\u516c\u4ea4\u8f66\u3002\n\u5df4\u5fb7\u5f88\u5feb\u660e\u767d\uff0c\u706b\u8f66\u548c\u516c\u5171\u6c7d\u8f66\u8fd0\u8425\u5546\u5e94\u8be5\u662f\u76df\u53cb\uff0c\u800c\u4e0d\u662f\u654c\u4eba\u3002\u516c\u4ea4\u7ebf\u8def\u53ef\u4ee5\u53d6\u4ee3\u4e8f\u635f\u7684\u94c1\u8def\u8fd0\u8425\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u5728\u6709\u610f\u4e49\u7684\u65f6\u5019\u628a\u4e58\u5ba2\u9001\u5230\u706b\u8f66\u4e0a\u3002\u56e0\u6b64\uff0c1925\u5e74\uff0c\u5927\u5317\u65b9\u94c1\u8def\u516c\u53f8\u6536\u8d2d\u4e86Northland\u516c\u53f880%\u7684\u80a1\u4efd\uff0c\u5c06\u5a01\u514b\u66fc\u7684\u516c\u53f8\u4ece\u4e00\u4e2a\u8d44\u91d1\u7d27\u5f20\u7684\u5730\u533a\u6027\u8fd0\u8425\u5546\u8f6c\u53d8\u4e3a\u4e00\u5bb6\u8d44\u91d1\u5145\u8db3\u7684\u5168\u56fd\u6027\u516c\u53f8\u3002\u8fd9\u7b14\u4ea4\u6613\u548c\u5176\u4ed6\u4ea4\u6613\u4e00\u6837\uff0c\u8ba9\u5a01\u514b\u66fc\u548c\u4ed6\u7684\u540c\u4e8b\u5f97\u4ee5\u6269\u5f20\u3002", "note_en": "Greyhound has been busing Americans around for a century. It&#39;s hard to believe that after all these years, the company is still riding high.\n As careers go, Carl Eric Wickman\u2019s stint in the car business was less than auspicious. In 1913, the immigrant drill operator paid $3,000 to open a Goodyear Tire/ Hupmobile car franchise in Hibbing, Minn., not far from the  world\u2019s largest open-pit iron mine. Unfortunately, Wickman was even worse at selling cars than he was at picking car makers\u2014so the enterprising young Swede abandoned his dealership dreams soon after making his one and only sale \u2026 to himself.\n Realizing that most iron miners were too poor to afford their own vehicle, Wickman decided to start transporting workers between Hibbing and Alice, a mining town two miles away. Cramming 15 passengers into his eight-seat \u201ctouring car,\u201d the 27-year-old charged 15 cents a ride. On his first trip, in 1914, Wickman collected a grand total of $2.25. But 100 years later, that modest sum has grown into nearly a billion dollars in annual revenue.\n Wickman, it turns out, pretty much invented intercity bus travel\u2014which for most Americans equals Greyhound, the company that emerged from that long-ago Hupmobile ride. \u201cGreyhound has become generic for bus travel,\u201d says Robert Gabrick, author of  Going The Greyhound Way. \u201cLike Kleenex for tissues.\u201d Indeed, this classic American business icon\u2014which, as it happens, is now owned by a British conglomerate\u2014today has more than 7,300 employees, with estimated yearly sales of $820 million and 2,000 buses serving 3,800 destinations in 48 U.S. states and nine Canadian provinces. \u201cI\u2019m amazed at Greyhound\u2019s brand recognition,\u201d says DePaul University professor Joseph Schwieterman, an authority on intercity bus travel. \u201cIt\u2019s an American success story.\u201d\n But Greyhound\u2019s journey to bus-industry dominance was far from smooth, not least because U.S. roads were god-awful bumpy when Wickman started out. Indeed, Uncle Sam\u2019s first serious stab at building a quality national road system was the Federal Highway Act of 1921, which by coincidence was the same year that the first intercity buses rolled off assembly lines.\n  But that wasn\u2019t his only challenge. Wickman\u2019s \u201cSnoose Line\u201d\u2014\u201csnoose\u201d was Swedish for snuff, which local miners snorted to stay alert\u2014also faced competition from other car owners who saw money-making possibilities in hauling people to work. So in1916, Wickman and his two partners merged their company with a rival outfit operated by a 19-year-old mechanic and Studebaker-owner named Ralph Bogan. They called their new company Mesaba Transportation Co., and the deal became a template for the future, as Wickman expanded his bus empire across America by acquiring hundreds of competitors over the years. In fact, Greyhound was for decades really just a collection of regional bus lines united under a single brand\u2014Great Lakes Greyhound, Florida Greyhound\u2014connected by sophisticated timetables and transfers. Even Greyhound\u2019s corporate history reflects a slick transfer. The company officially traces its lineage to Wickman\u2019s Hupmobile, but he actually sold his stake in Mesaba in 1922 and invested in another Minnesota operator soon after. In 1925,  that company merged with a Wisconsin bus line operator to form Northland Transportation, which was Wickman\u2019s first stab at inter state bus travel. It was also\u2014for anyone still trying to keep score\u2014the official birth (following a couple of name changes) of the modern Greyhound Corporation.\n  Early in the 20th century, Americans generally took trains when they needed to travel between cities. But after World War I ended in 1918, train ticket sales started to decline, a development that prompted railroad executives to attack bus companies\u2014whose fares were cheaper\u2014by accusing them of ruining America\u2019s roads and failing to pay their share of repair costs. Then, in 1925, Great Northern Railroad president Ralph Budd decided to actually study the matter. Surprisingly, Budd\u2019s investigation showed that passenger traffic on trains declined even when there was no route competition from buses. The real culprit, his research showed, was Henry Ford, whose introduction of the assembly line into car-making in 1913 resulted in drastically lower car prices: The railroads were losing business to Model T\u2019s, which many former train riders could now suddenly afford. Those unlucky folks who couldn\u2019t\u2014or those who didn\u2019t know how to drive\u2014still traveled by train, unless they were too poor to afford a ticket, in which case they took a bus.\n Budd quickly understood that train and bus operators should be allies, not enemies. Bus routes could replace money-losing rail runs, while also feeding passengers to trains when it made sense. And so, in 1925, Great Northern Railroad bought 80% of Northland, transforming Wickman\u2019s company from a cash-strapped regional operator into a well-financed national company. This deal, as much as anything, allowed Wickman and his colleagues to expand, not to mention survive the Great Depression and emerge with a national brand: Greyhound, the name of a small bus line Northland Transportation bought and decided to use for the whole shebang.", "posttime": "2020-11-07 11:22:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5ba0\u7269,\u7070\u72d7,dirty", "title": "\u767e\u5e74\u5ba0\u7269\u72d7\uff1a\u7070\u72d7\u7684\u5386\u53f2(2013)", "title_en": "100 Years on a Dirty Dog: The History of Greyhound (2013)", "transed": 1, "url": "https://www.mentalfloss.com/article/54273/100-years-dirty-dog-history-greyhound", "via": "", "real_tags": ["\u5ba0\u7269", "\u7070\u72d7", "dirty"]}]
[{"category": "", "categoryclass": "", "imagename": "8dbbc29b5c1bc33d6f69f35830e2744c.jpg", "infoid": 1070259, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u5b9e\u73b0\u5bf9\u7231\u56e0\u65af\u5766\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u9884\u6d4b\uff0c\u7814\u7a76\u4eba\u5458\u62a5\u544a\u4e86\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b21\u8bb0\u5f55\u5230\u9ed1\u6d1e\u8fdc\u7aef\u7684 X \u5c04\u7ebf\u53d1\u5c04\u3002\u65af\u5766\u798f\u5927\u5b66\u7684\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u4e39\u00b7\u5a01\u5c14\u91d1\u65af (Dan Wilkins) \u770b\u7740 X \u5c04\u7ebf\u4ece 8 \u4ebf\u5149\u5e74\u8fdc\u7684\u661f\u7cfb\u4e2d\u5fc3\u7684\u8d85\u5927\u8d28\u91cf\u9ed1\u6d1e\u5c04\u5165\u5b87\u5b99\uff0c\u53d1\u73b0\u4e86\u4e00\u79cd\u6709\u8da3\u7684\u6a21\u5f0f\u3002\u4ed6\u89c2\u5bdf\u5230\u4e00\u7cfb\u5217\u660e\u4eae\u7684 X \u5c04\u7ebf\u8000\u6591\u2014\u2014\u4ee4\u4eba\u5174\u594b\uff0c\u4f46\u5e76\u975e\u53f2\u65e0\u524d\u4f8b\u2014\u2014\u7136\u540e\uff0c\u671b\u8fdc\u955c\u8bb0\u5f55\u4e86\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u4e1c\u897f\uff1a\u6bd4\u660e\u4eae\u7684\u8000\u6591\u66f4\u5c0f\u3001\u66f4\u665a\u3001\u201c\u989c\u8272\u201d\u4e0d\u540c\u7684\u989d\u5916 X \u5c04\u7ebf\u95ea\u5149\u3002", "note_en": "Fulfilling a prediction of Einstein\u2019s theory of general relativity, researchers report the first-ever recordings of X-ray emissions from the far side of a black hole.\n  Watching X-rays flung out into the universe by the supermassive black hole at the center of a galaxy 800 million light-years away, Stanford University astrophysicist  Dan Wilkins noticed an intriguing pattern. He observed a series of bright flares of X-rays \u2013 exciting, but not unprecedented \u2013 and then, the telescopes recorded something unexpected: additional flashes of X-rays that were smaller, later and of different \u201ccolors\u201d than the bright flares.", "posttime": "2021-07-29 21:55:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6765\u81ea,light,\u5c04\u7ebf", "title": "\u9996\u6b21\u63a2\u6d4b\u5230\u6765\u81ea\u9ed1\u6d1e\u540e\u9762\u7684\u5149", "title_en": "First detection of light from behind a black hole", "transed": 1, "url": "https://news.stanford.edu/2021/07/28/first-detection-light-behind-black-hole/", "via": "", "real_tags": ["\u6765\u81ea", "light", "\u5c04\u7ebf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070258, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee3\u6570\u6548\u5e94\u4f3c\u4e4e\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u7684\u4e00\u79cd\u5723\u676f\u3002\u5f53\u6211\u5728\u8fd9\u91cc\u8bf4\u201c\u4ee3\u6570\u6548\u5e94\u201d\u65f6\uff0c\u6211\u7684\u610f\u601d\u662f\uff1a\u5c06\u4efb\u4f55\u6548\u5e94\u89c6\u4e3a\u7a0b\u5e8f\u4e2d\u7684\u503c\u6216\u7c7b\u578b\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e9b\u7b80\u5355\u7684\u8fd0\u7b97\uff08\u4ee3\u6570\uff09\u6765\u7ec4\u5408\u6548\u5e94\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f\u60f3\u5230\u7684\u4e24\u79cd\u8bed\u8a00\u662f Idris \u548c PureScript\u3002\u5f53\u60a8\u4f7f\u7528\u4ed6\u4eec\u7684\u6548\u679c\u652f\u6301\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u60a8\u7f16\u5199\u4e86 monadic \u4ee3\u7801\uff0c\u4f46\u672c\u8d28\u4e0a\u6709\u4e00\u4e2a\u60a8\u53ef\u4ee5\u4ece\u73af\u5883\u4e2d\u63d0\u53d6\u7684\u6548\u679c\u5217\u8868\uff1a\u65e5\u5fd7\u8bb0\u5f55\u3001\u72b6\u6001\u3001IO \u7b49\u3002\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e00\u5806\u6548\u679c\u8fdb\u884c\u7f16\u7a0b\uff0c\u53ea\u9700\u5047\u8bbe\u8fd9\u4e9b\u6548\u679c\u4f60\u9700\u8981\u7684\u5b58\u5728\uff0c\u5141\u8bb8\u6211\u4eec\u6839\u636e\u9700\u8981\u4efb\u610f\u589e\u52a0\u6548\u679c\u5806\u6808\u3002\u8fd9\u662f\u5f88\u4e0d\u9519\u7684\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u65e0\u6cd5\u5728 Haskell \u4e2d\u8bbf\u95ee\u8fd9\u4e9b\u5de5\u5177\u3002\u76f8\u53cd\uff0chaskellers \u901a\u5e38\u4f9d\u8d56\u4e8e mtl \u6216 Free Monads\u3002\u6211\u4eca\u5929\u8981\u5c55\u793a\u7684\u662f\u4e00\u4e2a\u63a5\u8fd1 Idris \u548c PureScript \u7684\u6548\u679c\u5e93\uff0c\u4f7f\u7528 van Laarhoven \u7f16\u7801\u7684 Free Monad\uff0c\u914d\u5907\u4e86\u4e00\u4e2a\u5f02\u6784\u5217\u8868 (HList) \u6548\u679c\u3002\u6211\u58f0\u79f0\u8fd9\u5177\u6709 Idris \u548c PureScript \u4e2d Effect \u5de5\u5177\u7684\u4e00\u4e9b\u597d\u5904\uff0c\u4e0e\u5e38\u89c4 Free Monads \u76f8\u540c\u7684\u8868\u73b0\u529b\uff0c\u6bd4 Church\u3001Fused \u6216 Oleg \u7f16\u7801\u66f4\u9ad8\u6548\u7684\u7f16\u7801\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u6269\u5c55\u3002\u5168\u90e8\u5728\u5927\u7ea6 60 \u884c\u4ee3\u7801\u4e2d\u3002 -- |\u6211\u4eec\u4f7f\u7528\u663e\u5f0f\u7684 `liftVL` \u7ec4\u5408\u5668\u7528\u4e8e\u8bf4\u660e\u76ee\u7684\u3002-- \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u60a8\u5c06\u62e5\u6709\u81ea\u5df1\u7684\u7ec4\u5408\u5668\u3002-- \u53d1\u5e03 requestpostReq :: HasEffect \u6548\u679c Http =&gt; Url -&gt; RequestBody -&gt; FreeVL \u6548\u679c StatusCodepostReq url body = do resp &lt;- liftVL (\\http -&gt; put http url body) return (statusCode resp)-- \u53d6\u4efb\u610f\u81ea\u7531 monad \u5e76\u7528 loggingwithLog \u5305\u88c5\u5b83 :: HasEffect effects Logging =&gt; String -&gt; String -&gt; FreeVL effects a -&gt; FreeVL \u6548\u679c awithLog preMsg postMsg program = do liftVL (\\log -&gt; infoLogger log preMsg) a &lt;- program liftVL (\\log -&gt; infoLogger log postMsg) return a-- \u7528\u4e8e\u5b9a\u4e49\u89e3\u91ca\u5668\u7c7b\u578b\u7684\u5177\u4f53\u6548\u679c\u5217\u8868 MyEffects = ( Http &#39;: Logging &#39;: Random &#39;: State &#39;: &#39;[] )--\u4f5c\u4e3a\u503c\u7684\u89e3\u91ca\u5668ioInterpreter :: Effects MyEffects IOioInterpreter = httpIO .: loggerIO .: randomIO .: stateIO .: EmptyEffect--\u5b9e\u9645\u8fd0\u884c\u6211\u4eec\u7684programmain :: IO ()main = interpret ioInterpreter (withLog &quot;POST!&quot; &quot;phew! made it!&quot; (postReq &quot;https://weirdcanada.com&quot; &quot;rare=cool&quot;) ) \u4e0a\u9762\u552f\u4e00\u7f3a\u5c11\u7684\u90e8\u5206\u662f\u6211\u4eec\u7684\u6548\u679c\uff08Http\u3001Logger \u7b49\uff09\u7684\u6837\u5b50\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a -- HTTP effectdata Http m = Http { get :: Url -&gt; m Response , put :: Url -&gt; RequestBody -&gt; m Response -- \u7b49\u7b49 }-- Logging effectdata Logging m = Logging { infoLogger :: String -&gt; m (), debugLogger :: String -&gt; m ()-- \u7b49\u7b49}\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u662f\u7528\u8bc6\u5b57\u7684haskell\u5199\u7684\u3002\u6211\u9f13\u52b1\u60a8\u526a\u5207\u5e76\u7c98\u8d34\u6b64\u4ee3\u7801\u5e76\u81ea\u5df1\u73a9\uff01\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u6269\u5c55\u548c\u5bfc\u5165\uff01 &gt; {-# LANGUAGE DataKinds #-}&gt; {-# LANGUAGE FlexibleContexts #-}&gt; {-# LANGUAGE FlexibleInstances #-}&gt; {-# LANGUAGE GADTs #-}&gt; {-# LANGUAGE KindSignatures #-}&gt; {-# LANGUAGE MultiParamTypeClasses #-}&gt; {-# LANGUAGE PolyKinds #-}&gt; {-# LANGUAGE RankNTypes #-}&gt; {-# LANGUAGE TypeOperators #-}&gt; &gt; module Main where&gt; &gt; import Control.Arrow ((&amp;&amp;&amp;))&gt; import Control .Concurrent(threadDelay)&gt; import Control.Exception(catch)&gt; import Control.Lens((^.))&gt; import Data.ByteString.Lazy(ByteString)&gt; import Network.Wreq(get, post, Response, responseStatus, statusCode) &gt; \u5bfc\u5165 Network.HTTP.Client (HttpException(StatusCodeException))&gt; \u5bfc\u5165\u5408\u683c\u7684 Network.HTTP.Types.Status \u4f5c\u4e3a S&gt; \u5bfc\u5165 System.Random (randomIO) \u6211\u5411\u60a8\u63a8\u8350 Russell O&#39;Connor \u5728 van Laarhoven Free Monad \u4e0a\u7684\u7cbe\u5f69\u535a\u6587.\u8fd9\u662f\u4e00\u4e2a\u7b80\u77ed\u800c\u7b80\u6d01\u7684\u8bfb\u7269\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0cvan Laarhoven Free Monad \u4e0e\u666e\u901a\u5355\u5b50\u662f\u53cc\u91cd\u7684\u3002\u6211\u4eec\u4f7f\u7528\u4e58\u79ef\u800c\u4e0d\u662f\u4f7f\u7528 sum \u7c7b\u578b\u6765\u5bf9\u64cd\u4f5c\u8fdb\u884c\u5efa\u6a21\u3002 &gt; -- \u8f93\u5165\u522b\u540d\uff0c\u4f7f\u5b83\u770b\u8d77\u6765\u50cf\u771f\u6b63\u7684\u4ee3\u7801\u3002&gt; type Url = String&gt; type RequestBody = ByteString&gt; &gt; -- \u8001\u5f0f\u7684\u81ea\u7531\u5355\u5b50\u7f16\u7801&gt; data Free effect a = Pure a&gt; | Free (effect (Free effect a))&gt; &gt; -- \u793a\u4f8bhttp\u6548\u679c\uff1a\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u4f7f\u7528Strings\u8868\u793aurl\u548c\u54cd\u5e94&gt; data YeOldeHttp a = Get Url (Response ByteString -&gt; a)&gt; | Post Url RequestBody (Response ByteString -&gt; a)&gt; &gt; -- \u793a\u4f8b\u89e3\u91ca\u5668&gt; freeIOInterp :: Free YeOldeHttp a -&gt; IO a&gt; freeIOInterp (Pure a) = return a&gt; freeIOInterp (Free (Get url next)) = get url &gt; &gt;= freeIOInterp \u3002 next&gt; freeIOInterp (Free (Post url body next)) = post url body &gt;&gt;= freeIOInterp \u3002 next&gt; &gt; -- \u793a\u4f8b\u7ec4\u5408\u5668&gt; oldGet :: Url -&gt; Free YeOldeHttp (Response ByteString)&gt; oldGet url = Free (Get url Pure) \u7ed9\u5b9a\u4e00\u4e2a\u6548\u679c\uff0c\u5b83\u672c\u8eab\u662f\u4e00\u4e2asum-type\uff08\u6bcf\u4e2a\u5206\u652f\u4e0d\u540c\u7684\u64cd\u4f5c\uff08\u4f8b\u5982Get , Put)) \u6211\u4eec\u53ef\u4ee5\u8bc1\u660e Free YeOldHttp a \u662f\u4e00\u4e2a monad\uff08\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Gabriel \u7684\u535a\u5ba2\u6587\u7ae0\uff09\u5e76\u9488\u5bf9\u5b83\u7f16\u5199\u89e3\u91ca\u5668\uff0c\u4e3a\u5176\u63d0\u4f9b\u6b63\u786e\u7684\u8bed\u4e49\u3002 Free Monads \u7684\u91cd\u8981\u90e8\u5206\u662f\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e0d\u540c\u7684\u89e3\u91ca\u5668\uff0c\u6bcf\u4e2a\u89e3\u91ca\u5668\u90fd\u6709\u81ea\u5df1\u7684\u7279\u5b9a\u7528\u9014\uff08\u6d4b\u8bd5\u3001\u751f\u4ea7\u3001\u8c03\u8bd5\u7b49\uff09\u3002\u73b0\u5728\uff0cvan Laarhoven Free Monad \u662f\u4e00\u79cd\u4e0d\u540c\u7684\u7f16\u7801\uff0c\u9700\u8981\u60a8\u5c06\u6548\u679c\u8868\u793a\u4e3a\u4e58\u79ef\u800c\u4e0d\u662f\u603b\u548c\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u76f8\u5f53\u4e8e\uff1a &gt; -- (\u7b80\u5355) van Laarhoven Free Monad encoding&gt; newtype FreeVL1 effect a =&gt; FreeVL1 { runFreeVL1 :: forall m. Monad m =&gt; effect m -&gt; ma }&gt; &gt; -- \u4f8b\u5b50Http effect&gt; data NewHttp m =&gt; NewHttp { getNewHttp :: Url -&gt; m (Response ByteString)&gt; , postNewHttp :: Url -&gt; RequestBody -&gt; m (Response ByteString)&gt; }&gt; &gt; -- \u793a\u4f8b\u89e3\u91ca\u5668&gt; newHttpIO :: NewHttp IO&gt; newHttpIO = NewHttp { getNewHttp = get, postNewHttp = post }&gt; &gt; freeVL1IOInterpreter :: FreeVL1 NewHttp a -&gt; IO a&gt; freeVL1IOInterpreter program = runFreeVL1 program newHttpIO&gt; -- \u793a\u4f8b\u7ec4\u5408&gt; newGet :: Url -&gt; FreeVL1 NewHttp (Response ByteString)&gt; newGet url = FreeVL1 (\\httpEffects -&gt; getNewHttp httpEffects url)\nFreeVL1 \u7684\u597d\u5904\u5728\u4e8e\u5b83\u53ea\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u8981\u89e3\u91ca\u7528 FreeVL1 NewHttp a \u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b NewHttp m \u7c7b\u578b\u7684\u503c\uff0c\u5982\u4e0a\u6240\u793a\u3002\u8fd9\u610f\u5473\u7740\u9488\u5bf9 FreeVL1 NewHttp a \u7f16\u5199\u7a0b\u5e8f\u5c06\u5177\u6709\u4e0e\u51fd\u6570\u7ec4\u5408\u6216 Reader monad \u76f8\u540c\u7684\u8fd0\u884c\u65f6\u6210\u672c\u3002\u5c06\u6b64\u4e0e Free \u7684\u5e38\u89c4\u7f16\u7801\u8fdb\u884c\u5bf9\u6bd4\uff0c\u540e\u8005\u5728\u7ed1\u5b9a\u4e0b\u6267\u884c\u5f97\u975e\u5e38\u7cdf\u7cd5\uff08\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u82b1\u54e8\u7684\u64cd\u4f5c\u94fe\u8868\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Church-encoding \u6765\u5927\u5e45\u6539\u5584\u8fd9\u4e00\u70b9\uff0c\u4f46\u5b83\u4e5f\u6709\u5176\u4ed6\u7684\u6743\u8861\u3002\u73b0\u5728\uff0c\u7b80\u5355\u7684 van Laarhoven \u7f16\u7801\u7684\u7f3a\u70b9\u662f\u6211\u4eec\u4e00\u6b21\u53ea\u6709\u4e00\u79cd\u6548\u679c\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5982\u4f55\u6539\u8fdb\u5b83\uff01\u6211\u4eec\u73b0\u5728\u7684\u52a8\u673a\u662f\u521b\u5efa\u65b0\u7684\u6548\u679c\uff08\u4f8b\u5982\uff0c\u4e5f\u8bb8\u6211\u4eec\u60f3\u8981\u65e5\u5fd7\u3001\u968f\u673a\u6570\u7b49\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5 Http\uff09\u5e76\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u3002\u5728\u4f20\u7edf\u7684 Free Monad \u7f16\u7801\u4e2d\u8fd9\u6837\u505a\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u8054\u4ea7\u54c1\uff08\u8bf7\u53c2\u9605\u6b64\u5904\u7684\u535a\u5ba2\u6587\u7ae0\uff09\u3002\u7531\u4e8e\u6bcf\u4e2a effect \u90fd\u662f\u4e00\u4e2a Functor\uff0c\u800c Functors \u7684 Co-Products \u4ecd\u7136\u662f\u4e00\u4e2a Functor\uff0c\u8fd9\u5728\u6280\u672f\u4e0a\u662f\u53ef\u80fd\u7684\u3002\u7136\u800c\uff0c\u5b83\u4f7f\u5f97\u4ece\u5806\u6808\u4e2d\u63d0\u53d6\u6548\u679c\u4ee5\u53ca\u7f16\u5199\u548c\u7ec4\u5408\u89e3\u91ca\u5668\u53d8\u5f97\u975e\u5e38\u9ebb\u70e6\u3002\u5728 van Laarhoven \u7f16\u7801\u4e2d\uff0c\u6211\u4eec\u7684\u6548\u679c\u5df2\u7ecf\u662f\u4e00\u4e2a\u4ea7\u54c1\u7c7b\u578b\u4e86\u3002\u6211\u4eec\u60f3\u8981\u7684\u662f\u80fd\u591f\u4e3a\u6211\u4eec\u7684\u6548\u679c\u6dfb\u52a0\u66f4\u591a\u201c\u5b57\u6bb5\u201d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u5b57\u6bb5 log :: String -&gt; m()\uff0c\u90a3\u51e0\u4e4e\u5c31\u50cf\u5728\u6211\u4eec\u7684\u6548\u679c\u5806\u6808\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8bb0\u5f55\u5668\u4e00\u6837\uff01\u6dfb\u52a0\u5b57\u6bb5\u7684\u4e00\u79cd\u7b49\u6548\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a Heterogeneous \u6548\u679c\u5217\u8868\uff01\u5982\u679c\u6211\u4eec\u4e0d\u662f\u5c06\u6211\u4eec\u7684\u6548\u679c\u4ea7\u54c1\u201c\u76f8\u4e58\u201d\uff0c\u800c\u662f\u5c06\u5b83\u4eec\u9644\u52a0\u5230\u4e00\u4e2a\u5f02\u6784\u5217\u8868\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u79cd\u6dfb\u52a0\u66f4\u591a\u6548\u679c\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e0e\u6dfb\u52a0\u66f4\u591a\u5b57\u6bb5\u662f\u540c\u6784\u7684\u3002\u8ba9\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u8fd9\u6837\u7684 HList \u5e76\u5c55\u793a\u5b83\u5982\u4f55\u4f7f\u6211\u4eec\u80fd\u591f\u6269\u5c55\u4ee5\u524d\u7684 van Laarhoven \u7f16\u7801\uff01 &gt; -- |\u6211\u4eec\u7684 HList of effects&gt; -- \u8bf7\u6ce8\u610f\uff0c\u6839\u636e van Laarhoven \u7f16\u7801\uff0c\u6211\u4eec\u7684\u6548\u679c\u662f\u53c2\u6570\u5316\u7684&gt; -- \u7531\u4e00\u4e2a monad m.&gt; data EffectStack a (m :: * -&gt; *) where&gt; EmptyEffect :: EffectStack &#39;[] m&gt; ConsEffect :: effect m -&gt; EffectStack \u6548\u679c m -&gt; EffectStack (effect &#39;: effects) m\nEffectStack \u73b0\u5728\u5305\u542b\u4e00\u4e2a\u4efb\u610f\u7684\u6548\u679c\u5217\u8868\uff0c\u6bcf\u4e2a\u6548\u679c\u7531 m \u53c2\u6570\u5316\u3002\u6211\u4eec\u73b0\u5728\u51c6\u5907\u5b9a\u4e49\u5806\u6808\u9a71\u52a8\u7684 van Laarhoven Free Monad\uff1a &gt; -- van Laarhoven Free Monad with Effect Stacks encoding&gt; newtype FreeVL effects a =&gt; FreeVL { runFreeVL :: forall m. Monad m =&gt; EffectStack effects m -&gt; ma }&gt; &gt; -- \u662f\u7684\uff0c\u5b83\u662f\u4e00\u4e2amonad&gt; instance Functor (FreeVL effects) where&gt; fmap f (FreeVL run) = FreeVL (fmap f .run)&gt; &gt; instance Applicative (FreeVL)\u6548\u679c) where&gt; pure a = FreeVL (const (pure a))&gt; (FreeVL fab) (FreeVL a) =&gt; FreeVL $ uncurry () \u3002 (fab &amp;&amp;&amp; a)&gt; &gt; instance Monad (FreeVL effects) where&gt; (FreeVL run) &gt;&gt;= f =&gt; FreeVL $ \\effects -&gt; run effects &gt;&gt;= \\a -&gt; runFreeVL (fa) effects &gt; -- \u89e3\u91ca\u4e00\u4e2avan Laarhoven Free Monad with Effect Stacks&gt; interperet :: Monad m&gt; =&gt; EffectStack effects m&gt; -&gt; FreeVL effects a&gt; -&gt; ma&gt; interperet interpreter program = runFreeVL program interpreter \u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u4ee5\u6211\u4eec\u7684\u65b0\u5e7b\u60f3\u7f16\u5199\u7a0b\u5e8f\u514d\u8d39\u7684\u5355\u5b50\u3002\u6211\u4eec\u9700\u8981\u6784\u5efa\u5177\u6709\u4efb\u610f\u6548\u679c\u5806\u6808\u7684\u7a0b\u5e8f\uff0c\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u4ece EffectStack \u4e2d\u63d0\u53d6\u6548\u679c\u5e76\u4f7f\u7528\u5b83\u7684\u65b9\u6cd5\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4ece haskell-servant \u7684 Julian Arni \u90a3\u91cc\u501f\u7528\u4e86\u4e00\u4e2a\u6280\u5de7\uff08\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u4ed6\u7684\u4ee3\u7801\uff09\u3002\u672c\u8d28\u4e0a\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u7c7b\uff0c\u5b83\u80fd\u591f\u5728 EffectStack \u4e2d\u6293\u53d6 HList \u5e76\u641c\u7d22\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\uff0c\u7136\u540e\u8fd4\u56de\u5b83\u3002 &gt; -- \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u7c7b\uff0c\u53ea\u6709\u5728\u6709\u67d0\u79cd\u6548\u679c\u65f6\u624d\u4f1a\u7f16\u8bd1&gt; -- \u5b58\u5728\u4e8e\u6808\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u5219\u8fd4\u56de\u3002&gt; class HasEffect (effects :: [((* -&gt; *) -&gt; *)]) (effect :: ((* -&gt; *) -&gt; *)) where&gt; getEffect :: EffectStack effects m -&gt; effect m&gt; &gt; -- \u8ba9\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b`HasEffect`\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u722c\u884cEffectStack\u770b&gt; -- \u5bf9\u4e8e\u5339\u914d\u7136\u540e\u8fd4\u56de\u7684\u6548\u679c\u3002&gt; &gt; -- \u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u5904\u7406\u6211\u4eec\u7684\u6548\u679c\u7c7b\u578b\u4e0e HList \u7684 &gt; -- \u5934\u90e8\u4e0d\u5339\u914d\u5e76\u8fdb\u4e00\u6b65\u9012\u5f52\u7684\u60c5\u51b5\u3002&gt; \u5b9e\u4f8b {-# OVERLAPPABLE #- }&gt; HasEffect effects effect =&gt; HasEffect (notIt &#39;: effects) effect where&gt; getEffect (ConsEffect _ effects) = getEffect effects&gt; &gt; -- \u8fd9\u4e2a\u5b9e\u4f8b\u5339\u914d\u6211\u4eec\u7684&#39;effect&#39;\u7c7b\u578b\u5339\u914dhead\u7684\u60c5\u51b5&gt; -- HList\u7684.\u7136\u540e\u6211\u4eec\u8fd4\u56de\u90a3\u4e2a\u6548\u679c\u3002&gt; instance {-# OVERLAPPABLE #-}&gt; HasEffect (effect &#39;: effects) effect where&gt; getEffect (ConsEffect effect _) = effect \u90a3\u4e9b\u7c7b\u578b\u7c7b\u53ef\u80fd\u4f1a\u8ba9\u4f60\u6709\u70b9\u60f3\u6b6a\u4e86\uff08\u4ed6\u4eec\u80af\u5b9a\u4f1a\u6b6a\u66f2\u6211\u7684\uff09 \uff0c\u4f46\u5982\u679c\u4f60\u81ea\u5df1\u5199\uff08\u6211\u9f13\u52b1\u4f60\u8fd9\u6837\u505a\uff09\uff0c\u4f60\u5c31\u4f1a\u638c\u63e1\u5b83\u7684\u7a8d\u95e8\u3002 \uff08PS - \u6211\u6c38\u8fdc\u611f\u8c22\u6731\u5229\u5b89\u7684\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u56e0\u4e3a\u5b83\u592a\u65b9\u4fbf\u4e86\uff01\uff09\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u9009\u62e9\u6548\u679c\u7684\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u7ec4\u5408\u5668\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u4efb\u610f\u6548\u679c\u5806\u6808\u7f16\u5199\u7a0b\u5e8f\u3002 &gt; -- \u5c06\u64cd\u4f5c\u63d0\u5347\u5230 van Laarhoven Free Monad&gt;liftVL :: HasEffect \u6548\u679c\u6548\u679c&gt; -- ^ \u7ea6\u675f\u5f3a\u5236\u6211\u4eec\u7684\u6548\u679c\u5728\u6548\u679c\u5806\u6808\u4e2d&gt; =&gt; (forall m. effect m -&gt; ma)&gt; -- ^ \u65b9\u6cd5\u4ece\u6211\u4eec\u7684\u6548\u679c\u4e2d\u63d0\u53d6\u6211\u4eec\u7684\u64cd\u4f5c\u3002&gt; -&gt; FreeVL effects a&gt;liftVL getOp = FreeVL (\\effects -&gt; getOp (getEffect effects)) \u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e9b\u7528\u6237\u4ee3\u7801\u3002\u6211\u4eec\u5c06\u4ece\u5b9a\u4e49\u4e09\u4e2a\u6548\u679c\u5f00\u59cb\uff1a &gt; -- HTTP Effect&gt; data Http m =&gt; Http { getHttpEff :: Url -&gt; m (Either Int (Response ByteString))&gt; , postHttpEff :: Url -&gt; RequestBody -&gt; m (\u8981\u4e48 Int (Response ByteString))&gt; }&gt; &gt; -- Logging Effect&gt; data Logging m = Logging { logEff :: String -&gt; m () }&gt; &gt; -- \u968f\u673a\u6570\u6548\u5e94&gt; data Random m = Random { getRandEff :: m Int }&gt; &gt; -- suspend effect&gt; data Suspend m = Suspend { suspendEff :: Int -&gt; m () } \u73b0\u5728\u6765\u770b\u4e00\u4e9b\u4ee3\u7801\u3002\u8ba9\u6211\u4eec\u4e3a\u6bcf\u4e2a\u6548\u679c\u4e2d\u7684\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u7f16\u5199\u7ec4\u5408\u5b50\u3002 &gt; getHttp :: HasEffect \u6548\u679c Http&gt; =&gt; Url&gt; -&gt; FreeVL \u6548\u679c (Either Int (Response ByteString))&gt; getHttp url =liftVL (`getHttpEff` url)&gt; &gt; postHttp :: HasEffect \u6548\u679c Http&gt; =&gt; Url&gt; -&gt; RequestBody&gt; -&gt; FreeVL \u6548\u679c\uff08Either Int (Response ByteString))&gt; postHttp url body = liftVL (\\http -&gt; postHttpEff http url body)&gt; &gt; logMsg :: HasEffect effects Logging&gt; =&gt; String&gt; -&gt; FreeVL effects ()&gt; logMsg msg = LiftVL (`logEff` msg)&gt; &gt; getRand :: HasEffect \u6548\u679c\u968f\u673a&gt; =&gt; FreeVL \u6548\u679c Int&gt; getRand = LiftVL getRandEff&gt; &gt; \u6682\u505c :: HasEffect \u6548\u679c Suspend&gt; =&gt; Int&gt; -&gt; FreeVL \u6548\u679c ()&gt; \u6682\u505ci = liftVL (`suspendEff` i) \u6709\u4e86\u8fd9\u4e9b\u7ec4\u5408\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7f16\u5199\u7a0b\u5e8f\u4e86\uff01\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u53d1\u51fa\u4e00\u4e2a\u7f51\u7edc\u8bf7\u6c42\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5219\u6682\u505c 100 \u6beb\u79d2\u5e76\u91cd\u8bd5\u3002\u5b83\u5c06\u91cd\u8bd5\u968f\u673a\u6b21\u6570\u3002\n&gt; repeatReq :: ( HasEffect effects Http&gt; , HasEffect effects Random&gt; , HasEffect effects Suspend&gt; )&gt; =&gt; Url&gt; -&gt; FreeVL effects (Either Int (Response ByteString))&gt; repeatReq url = do&gt; numRetries &lt;- (flip mod 10) ) getRand&gt; eResponse &lt;- getHttp url&gt; go numRetries eResponse&gt; where&gt; go 0 r = return r&gt; go i _ = do&gt; eResponse &lt;- getHttp url&gt; case eResponse of&gt; r@(Right _) -&gt; return r&gt; l @(Left _) -&gt; suspend 100 &gt;&gt; go (i-1) eResponse &gt; withLog :: HasEffect effects Logging&gt; =&gt; String&gt; -&gt; String&gt; -&gt; FreeVL effects a&gt; -&gt; FreeVL effects a&gt; withLog preMsg postMsg program = do&gt; logMsg preMsg&gt; a &lt;- program&gt; logMsg postMsg&gt; return a \u6700\u540e\uff0c\u8ba9\u6211\u5411\u60a8\u5c55\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u6211\u4eec\u4e4b\u524d\u7684 repeatReq \u4ee3\u7801\u4e0e\u65e5\u5fd7\u8bb0\u5f55\u548c\u63d0\u4f9b url \u4e00\u8d77\u5305\u88c5\u6765\u7ec4\u5408\u4efb\u610f\u7a0b\u5e8f\u548c\u6548\u679c\u5806\u6808\u3002 &gt; -- \u8ba9\u6211\u4eec\u7ed3\u5408\u4e00\u4e9b\u7a0b\u5e8f&gt; program :: ( HasEffect effects Http&gt; , HasEffect effects Random&gt; , HasEffect effects Suspend&gt; , HasEffect effects Logging&gt; )&gt; =&gt; FreeVL effects (Either Int (Response ByteString))&gt; program = withLog &quot;\u8fd0\u884c\u8bf7\u6c42\uff01\u201d \u201c\u5b8c\u6bd5\uff01\u201d (repeatReq &quot;http://aaronlevin.ca&quot;) \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u5220\u9664\u8fd9\u4e9b\u7ea6\u675f\u4e4b\u4e00\uff08\u4f8b\u5982 Suspend\uff09\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\uff1a01.lhs:313:49:Could not deduce (HasEffect effects Suspend ) \u4ece\u4e0a\u4e0b\u6587\uff08HasEffect \u6548\u679c Http\u3001HasEffect \u6548\u679c\u968f\u673a\u3001HasEffect \u6548\u679c\u8bb0\u5f55\uff09\u4e2d\u4f7f\u7528 &#39;repeatReq&#39; \u4ea7\u751f\uff0c\u7531\u7a0b\u5e8f\u7684\u7c7b\u578b\u7b7e\u540d\u7ea6\u675f ::\uff08HasEffect \u6548\u679c Http\u3001HasEffect \u6548\u679c\u968f\u673a\u3001HasEffect \u6548\u679c\u8bb0\u5f55\uff09=&gt; FreeVL effects (Maybe (Response ByteString)) at 01.lhs:(308,14)-(312,57) \u5728 &#39;withLog&#39; \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e2d\uff0c\u5373 &#39;(repeatReq &quot;http://aaronlevin.ca&quot;)&#39; \u4e2d\u8868\u8fbe\uff1a withLog &quot;\u6b63\u5728\u8fd0\u884c\u7684\u8bf7\u6c42\uff01&quot; \u201c\u5b8c\u6bd5\uff01\u201d (repeatReq &quot;http://aaronlevin.ca&quot;) \u5728 &#39;program&#39; \u7684\u7b49\u5f0f\u4e2d\uff1a program = withLog &quot;running request!&quot; \u201c\u5b8c\u6bd5\uff01\u201d (repeatReq &quot;http://aaronlevin.ca&quot;) \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4e9b\u7a0b\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u89e3\u91ca\u5668\u3002\u6211\u4eec\u5c06\u63d0\u4f9b IO \u4e2d\u7684\u4e3b\u8981\u89e3\u91ca\u5668\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u7ec3\u4e60\u7559\u7ed9\u8bfb\u8005\u6765\u521b\u5efa\u4e00\u4e2a\u7eaf\u7cb9\u7684\u89e3\u91ca\u5668\u3002\n\u56de\u60f3\u4e00\u4e0b van Laarhoven Free Monad \u4e2d\u7684\u89e3\u91ca\u5668\u53ea\u662f\u4e00\u4e2a effect m \u7c7b\u578b\u7684\u503c\u3002\u540c\u6837\uff0c\u5728\u6548\u679c\u5806\u6808\u7248\u672c\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a EffectStack \u6548\u679c m \u7c7b\u578b\u7684\u503c\uff0c\u5b83\u53ea\u662f\u6211\u4eec\u6548\u679c\u7684 HList\u3002 &gt; -- \u4e00\u4e2a\u4f7f\u521b\u5efa HList \u5728\u8bed\u6cd5\u4e0a\u66f4\u597d\u7684\u7ec4\u5408\u5668\u3002&gt; (.:.) :: effect m -&gt; EffectStack effects m -&gt; EffectStack (effect &#39;: effects) m&gt; effect .:. effects = ConsEffect effect effects&gt; infixr 4 .:.&gt; &gt; -- \u89e3\u91caIO\u4e2d\u7684http\u52a8\u4f5c&gt; handleExcep :: HttpException -&gt; Each Int a&gt; handleExcep (StatusCodeException status _ _) = Left (S.statusCode status)&gt; handleExcep _ =\u9519\u8bef\u201c\u672a\u5904\u7406\u7684 HttpException\u201d&gt; &gt; httpIO :: Http IO&gt; httpIO =&gt; Http { getHttpEff = \\req -&gt; (Right get req) `catch` (return .handleExcep)&gt; , postHttpEff = \\req body -&gt; (Right post req body) `catch` (return .handleExcep)&gt; }&gt; &gt; -- \u89e3\u91ca IO \u4e2d\u7684\u65e5\u5fd7\u64cd\u4f5c&gt; logIO :: Logging IO&gt; logIO = Logging { logEff = putStrLn }&gt; &gt; -- IO \u4e2d\u7684\u968f\u673a\u6570\u751f\u6210\u5668&gt; randIO :: Random IO&gt; randIO = Random { getRandEff = randomIO }&gt; &gt; -- \u5728IO\u4e2d\u6682\u505c&gt; suspendIO :: Suspend IO&gt; suspendIO = Suspend { suspendEff = threadDelay }&gt; &gt; -- \u6211\u4eec\u7684\u6548\u679c\u6808&gt; type MyEffects = ( Http &#39;: Logging &#39;: Random &#39;: Suspend &#39;: &#39;[] )&gt; &gt; -- \u6211\u4eec\u7684\u89e3\u91ca\u5668&gt; ioInterpreter :: EffectStack MyEffects IO&gt; ioInterpreter = httpIO .:.\u65e5\u5fd7IO .:.\u968f\u673a\u6570 .:.\u6682\u505cIO .:. EmptyEffect \u5e0c\u671b\u73b0\u5728\u60a8\u5df2\u7ecf\u786e\u4fe1\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u76ee\u6807\uff1a\u6211\u4eec\u53ef\u4ee5\u5728 Haskell \u4e2d\u9488\u5bf9\u6548\u679c\u8fdb\u884c\u7f16\u7a0b\uff0c\u5c31\u50cf\u6211\u4eec\u4f7f\u7528 Idris \u548c PureScript \u7f16\u7a0b\u7684\u540c\u5fd7\u4e00\u6837\uff08\u6211\u8bf4\u8fd9\u5b8c\u5168\u662f\u534a\u5f00\u73a9\u7b11\uff09\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4efb\u610f\u6548\u679c\u5806\u6808\u5e76\u4ee5\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u65b9\u5f0f\u7ec4\u5408\u89e3\u91ca\u5668\uff08\u53ea\u8981\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684 monad\uff09\u3002\u8c03\u67e5\u7a0b\u5e8f\u5206\u6790\u3002 van Laarhoven Free Monad \u53ea\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b83\u63d0\u4f9b\u4e00\u4e2a\u4e3a\u7a0b\u5e8f\u6216\u9759\u6001\u5206\u6790\u6784\u5efa\u7684\u6548\u679c\u5806\u6808\u5417\uff1f", "note_en": "Algebraic effects seem to be a sort of holy grail in functional programming. What I mean when I say \u201calgebraic effect\u201d here is: treating any effect like a value or type in your program, while also having some simple operations (an algebra) to combine effects.\n What does this look like practically? The two languages that come to mind are  Idris and  PureScript. When you program using their Effects support, you write monadic code, but essentially have a list of effects you can pull from the environment: logging, state, IO, etc. Further, you can program against a stack of effects, only assuming the ones you need are present, allowing us to arbitrarily grow that effect stack as needed. It\u2019s very nice.\n Unfortunately we don\u2019t have access to these tools in Haskell. Instead, haskellers usually rely on  mtl or  Free Monads.\n What I want to present today is an Effects library close to that of Idris and PureScript using the  van Laarhoven encoded Free Monad armed with a Heterogeneous List (HList) of effects. I claim this has some of the benefits of Effect tooling in Idris and PureScript, the same expressiveness of regular Free Monads, a more performant encoding than Church, Fused, or Oleg encodings, and only costs us a few extensions. All in about  60 lines of code.\n   -- | we use the explicit `liftVL` combinator for illustrative purposes.-- in real code you&#39;d have your own combinators.-- Make a post requestpostReq :: HasEffect effects Http =&gt; Url -&gt; RequestBody -&gt; FreeVL effects StatusCodepostReq url body = do resp &lt;- liftVL (\\http -&gt; put http url body) return (statusCode resp)-- take any arbitrary free monad and wrap it with loggingwithLog :: HasEffect effects Logging =&gt; String -&gt; String -&gt; FreeVL effects a -&gt; FreeVL effects awithLog preMsg postMsg program = do liftVL (\\log -&gt; infoLogger log preMsg) a &lt;- program liftVL (\\log -&gt; infoLogger log postMsg) return a-- a concrete list of effects used to define an interpretertype MyEffects = ( Http &#39;: Logging &#39;: Random &#39;: State &#39;: &#39;[] )-- an interpreter as a valueioInterpreter :: Effects MyEffects IOioInterpreter = httpIO .: loggerIO .: randomIO .: stateIO .: EmptyEffect-- actually running our programmain :: IO ()main = interpret ioInterpreter (withLog &#34;POST!&#34; &#34;phew! made it!&#34; (postReq &#34;https://weirdcanada.com&#34; &#34;rare=cool&#34;) )\n The only part that\u2019s missing from the above is what our effects ( Http,  Logger, etc.) look like. Here is an example:\n -- the HTTP effectdata Http m = Http { get :: Url -&gt; m Response , put :: Url -&gt; RequestBody -&gt; m Response -- etc. }-- the Logging effectdata Logging m = Logging { infoLogger :: String -&gt; m (), debugLogger :: String -&gt; m ()-- etc.}\n The rest of this post is written in literate haskell. I encourage you to cut-and-paste this code and play with it yourself! To start, let\u2019s get some extensions and imports out of the way!\n &gt; {-# LANGUAGE DataKinds #-}&gt; {-# LANGUAGE FlexibleContexts #-}&gt; {-# LANGUAGE FlexibleInstances #-}&gt; {-# LANGUAGE GADTs #-}&gt; {-# LANGUAGE KindSignatures #-}&gt; {-# LANGUAGE MultiParamTypeClasses #-}&gt; {-# LANGUAGE PolyKinds #-}&gt; {-# LANGUAGE RankNTypes #-}&gt; {-# LANGUAGE TypeOperators #-}&gt; &gt; module Main where&gt; &gt; import Control.Arrow ((&amp;&amp;&amp;))&gt; import Control.Concurrent (threadDelay)&gt; import Control.Exception (catch)&gt; import Control.Lens ((^.))&gt; import Data.ByteString.Lazy (ByteString)&gt; import Network.Wreq (get, post, Response, responseStatus, statusCode)&gt; import Network.HTTP.Client (HttpException(StatusCodeException))&gt; import qualified Network.HTTP.Types.Status as S&gt; import System.Random (randomIO)\n  I refer you to Russell O&#39;Connor\u2019s great  blog post on the van Laarhoven Free Monad. It\u2019s a short and succinct read. In some sense, the van Laarhoven Free Monad is dual to the usual one; instead of using a  sum type to model operations we use a  product.\n  &gt; -- type aliases to make this look like real code.&gt; type Url = String&gt; type RequestBody = ByteString&gt; &gt; -- old-fashioned free monad encoding&gt; data Free effect a = Pure a&gt; | Free (effect (Free effect a))&gt; &gt; -- example http effect: using Strings to represent urls and responses for brevity&gt; data YeOldeHttp a = Get Url (Response ByteString -&gt; a)&gt; | Post Url RequestBody (Response ByteString -&gt; a)&gt; &gt; -- example interpreter&gt; freeIOInterp :: Free YeOldeHttp a -&gt; IO a&gt; freeIOInterp (Pure a) = return a&gt; freeIOInterp (Free (Get url next)) = get url &gt;&gt;= freeIOInterp . next&gt; freeIOInterp (Free (Post url body next)) = post url body &gt;&gt;= freeIOInterp . next&gt; &gt; -- example combinator&gt; oldGet :: Url -&gt; Free YeOldeHttp (Response ByteString)&gt; oldGet url = Free (Get url Pure)\n Given an effect, which is itself a sum-type (each branch a different operation (e.g.  Get,  Put)) we can show that  Free YeOldHttp a is a monad (see  Gabriel\u2019s blog post for more) and write interpreters against it, supplying it with the right semantics. The great part about Free Monads is that we can write different interpreters, each for their own specific use (testing, production, debugging, etc.).\n Now, the van Laarhoven Free Monad is a different encoding, and requires you to represent effects as  products instead of  sums. The above example is equivalent to:\n &gt; -- (simple) van Laarhoven Free Monad encoding&gt; newtype FreeVL1 effect a =&gt; FreeVL1 { runFreeVL1 :: forall m. Monad m =&gt; effect m -&gt; m a }&gt; &gt; -- example Http effect&gt; data NewHttp m =&gt; NewHttp { getNewHttp :: Url -&gt; m (Response ByteString)&gt; , postNewHttp :: Url -&gt; RequestBody -&gt; m (Response ByteString)&gt; }&gt; &gt; -- example interpreter&gt; newHttpIO :: NewHttp IO&gt; newHttpIO = NewHttp { getNewHttp = get, postNewHttp = post }&gt; &gt; freeVL1IOInterpreter :: FreeVL1 NewHttp a -&gt; IO a&gt; freeVL1IOInterpreter program = runFreeVL1 program newHttpIO&gt; &gt; -- example combinator&gt; newGet :: Url -&gt; FreeVL1 NewHttp (Response ByteString)&gt; newGet url = FreeVL1 (\\httpEffects -&gt; getNewHttp httpEffects url)\n The nice thing about  FreeVL1 is it\u2019s just a function. To  interpret a program written in  FreeVL1 NewHttp a requires us only to provide a value of type  NewHttp m as demonstrated above. This means that writing programs against  FreeVL1 NewHttp a will have the same runtime cost as function composition or the Reader monad. Contrast this to the regular encoding of  Free which performs horrendously under binds (it\u2019s basically a fancy linked list of operations). We can use the  Church-encoding to improve this substantially, but it has other trade offs as well.\n Now, the downside of the simple van Laarhoven encoding is that we only have one effect at a time. Let\u2019s see how we can improve that!\n  Our motivation now is to create new effects (for example, instead of just  Http perhaps we want logging, random numbers, etc.) and combine them. One way of doing this in the traditional Free Monad encoding is to use co-products (see blog post  here). Since each effect is a Functor, and Co-Products of Functors is still a Functor, this is technically possible. However, it makes pulling effects out of the stack and writing and combining interpreters finnicky.\n In the van Laarhoven encoding, our effect is already a product type. What we want is to be able to add more \u201cfields\u201d to our effect. For example, if we could add the field  log :: String -&gt; m (), that would be almost like adding a logger to our effect stack!\n An equivalent way of adding fields would be to create a Heterogeneous list of effects! If instead of \u201cmultiplying\u201d our effect products we appended them to a heterogeneous list, then we\u2019ve got a way to add more effects that is isomorphic to adding more fields.\n Let us design such an  HList and show how this empowers us to extend the previous van Laarhoven encoding!\n &gt; -- | our HList of effects&gt; -- note that as per the van Laarhoven encoding, our effects are parameterized&gt; -- by a monad m.&gt; data EffectStack a (m :: * -&gt; *) where&gt; EmptyEffect :: EffectStack &#39;[] m&gt; ConsEffect :: effect m -&gt; EffectStack effects m -&gt; EffectStack (effect &#39;: effects) m\n EffectStack now contains an arbitrary list of effects, each one paramaterized by  m. We are now ready to define the stack-driven van Laarhoven Free Monad:\n &gt; -- van Laarhoven Free Monad with Effect Stacks encoding&gt; newtype FreeVL effects a =&gt; FreeVL { runFreeVL :: forall m. Monad m =&gt; EffectStack effects m -&gt; m a }&gt; &gt; -- Yes, it is a monad&gt; instance Functor (FreeVL effects) where&gt; fmap f (FreeVL run) = FreeVL (fmap f . run)&gt; &gt; instance Applicative (FreeVL effects) where&gt; pure a = FreeVL (const (pure a))&gt; (FreeVL fab) (FreeVL a) =&gt; FreeVL $ uncurry () . (fab &amp;&amp;&amp; a)&gt; &gt; instance Monad (FreeVL effects) where&gt; (FreeVL run) &gt;&gt;= f =&gt; FreeVL $ \\effects -&gt; run effects &gt;&gt;= \\a -&gt; runFreeVL (f a) effects\n  &gt; -- interpret a van Laarhoven Free Monad with Effect Stacks&gt; interperet :: Monad m&gt; =&gt; EffectStack effects m&gt; -&gt; FreeVL effects a&gt; -&gt; m a&gt; interperet interpreter program = runFreeVL program interpreter\n Unfortunately we are not quite ready to write programs in our new fancy Free Monad. We need to construct programs with arbitrary effect stacks, and for that, we need a way to pull an effect from  EffectStack and use it.\n To achieve this I borrowed a trick from Julian Arni of  haskell-servant (you can see his code  here). Essentially, we create a typeclass capable of crawling the HList in  EffectStack and search for the effect we want, and then return it.\n &gt; -- define a type class that will only compile if a certain effect is&gt; -- present in the stack, and if it is present, return it.&gt; class HasEffect (effects :: [((* -&gt; *) -&gt; *)]) (effect :: ((* -&gt; *) -&gt; *)) where&gt; getEffect :: EffectStack effects m -&gt; effect m&gt; &gt; -- Let&#39;s provide some instances of `HasEffect` that can crawl EffectStack looking&gt; -- for an effect that matches and then return it.&gt; &gt; -- this first instances handles the case where our effect type doesn&#39;t match the &gt; -- head of the HList and recurses further.&gt; instance {-# OVERLAPPABLE #-}&gt; HasEffect effects effect =&gt; HasEffect (notIt &#39;: effects) effect where&gt; getEffect (ConsEffect _ effects) = getEffect effects&gt; &gt; -- this instance matches the case where our &#39;effect&#39; type matches the head&gt; -- of the HList. we then return that effect.&gt; instance {-# OVERLAPPABLE #-}&gt; HasEffect (effect &#39;: effects) effect where&gt; getEffect (ConsEffect effect _) = effect\n Those typeclasses will likely bend your mind a little (they most certainly bent mine), but if you write it our yourself (which I encourage you to do) you kind of get the hang of it. (PS - I\u2019m forever grateful to Julian for this idea because it\u2019s so handy!)\n Now that we have tooling to pick our effects, we can start writing combinators that will allow us to write programs against an arbitrary effect stack.\n &gt; -- lift operations into the van Laarhoven Free Monad&gt; liftVL :: HasEffect effects effect&gt; -- ^ constraint enforcing that our effect is in the effect stack&gt; =&gt; (forall m. effect m -&gt; m a)&gt; -- ^ method to pull our operation from our effect.&gt; -&gt; FreeVL effects a&gt; liftVL getOp = FreeVL (\\effects -&gt; getOp (getEffect effects))\n  Let\u2019s write some user code. We\u2019ll start by defining three effects:\n &gt; -- HTTP Effect&gt; data Http m =&gt; Http { getHttpEff :: Url -&gt; m (Either Int (Response ByteString))&gt; , postHttpEff :: Url -&gt; RequestBody -&gt; m (Either Int (Response ByteString))&gt; }&gt; &gt; -- Logging Effect&gt; data Logging m = Logging { logEff :: String -&gt; m () }&gt; &gt; -- random number effect&gt; data Random m = Random { getRandEff :: m Int }&gt; &gt; -- suspend effect&gt; data Suspend m = Suspend { suspendEff :: Int -&gt; m () }\n Now for some code. Let\u2019s write combinators for each operator in each effect.\n &gt; getHttp :: HasEffect effects Http&gt; =&gt; Url&gt; -&gt; FreeVL effects (Either Int (Response ByteString))&gt; getHttp url = liftVL (`getHttpEff` url)&gt; &gt; postHttp :: HasEffect effects Http&gt; =&gt; Url&gt; -&gt; RequestBody&gt; -&gt; FreeVL effects (Either Int (Response ByteString))&gt; postHttp url body = liftVL (\\http -&gt; postHttpEff http url body)&gt; &gt; logMsg :: HasEffect effects Logging&gt; =&gt; String&gt; -&gt; FreeVL effects ()&gt; logMsg msg = liftVL (`logEff` msg)&gt; &gt; getRand :: HasEffect effects Random&gt; =&gt; FreeVL effects Int&gt; getRand = liftVL getRandEff&gt; &gt; suspend :: HasEffect effects Suspend&gt; =&gt; Int&gt; -&gt; FreeVL effects ()&gt; suspend i = liftVL (`suspendEff` i)\n With these combinators we can write programs! Let\u2019s write a program that makes a web-request and if it fails, suspends for 100ms and retries. It will retry a random number of times.\n &gt; repeatReq :: ( HasEffect effects Http&gt; , HasEffect effects Random&gt; , HasEffect effects Suspend&gt; )&gt; =&gt; Url&gt; -&gt; FreeVL effects (Either Int (Response ByteString))&gt; repeatReq url = do&gt; numRetries &lt;- (flip mod 10) getRand&gt; eResponse &lt;- getHttp url&gt; go numRetries eResponse&gt; where&gt; go 0 r = return r&gt; go i _ = do&gt; eResponse &lt;- getHttp url&gt; case eResponse of&gt; r@(Right _) -&gt; return r&gt; l@(Left _) -&gt; suspend 100 &gt;&gt; go (i-1) eResponse\n  &gt; withLog :: HasEffect effects Logging&gt; =&gt; String&gt; -&gt; String&gt; -&gt; FreeVL effects a&gt; -&gt; FreeVL effects a&gt; withLog preMsg postMsg program = do&gt; logMsg preMsg&gt; a &lt;- program&gt; logMsg postMsg&gt; return a\n And finally, let me show you that we can combine arbitrary programs and effect stacks by wrapping our previous  repeatReq code with logging and supplying a url.\n &gt; -- let&#39;s combine some programs&gt; program :: ( HasEffect effects Http&gt; , HasEffect effects Random&gt; , HasEffect effects Suspend&gt; , HasEffect effects Logging&gt; )&gt; =&gt; FreeVL effects (Either Int (Response ByteString))&gt; program = withLog &#34;running request!&#34; &#34;done!&#34; (repeatReq &#34;http://aaronlevin.ca&#34;)\n Note that if you remove one of those constraints (like  Suspend for example), you will get a compile error:\n 01.lhs:313:49: Could not deduce (HasEffect effects Suspend) arising from a use of \u2018repeatReq\u2019 from the context (HasEffect effects Http, HasEffect effects Random, HasEffect effects Logging) bound by the type signature for program :: (HasEffect effects Http, HasEffect effects Random, HasEffect effects Logging) =&gt; FreeVL effects (Maybe (Response ByteString)) at 01.lhs:(308,14)-(312,57) In the third argument of \u2018withLog\u2019, namely \u2018(repeatReq &#34;http://aaronlevin.ca&#34;)\u2019 In the expression: withLog &#34;running request!&#34; &#34;done!&#34; (repeatReq &#34;http://aaronlevin.ca&#34;) In an equation for \u2018program\u2019: program = withLog &#34;running request!&#34; &#34;done!&#34; (repeatReq &#34;http://aaronlevin.ca&#34;)\n  Now that we\u2019ve written some programs, we need to supply some interpreters. We\u2019ll supply the main interpreter in  IO and leave it as an exercise to the reader to create a pure one.\n Recall that an interpreter in the van Laarhoven Free Monad is just a value of type  effect m. Similarly, in the effect stack version, it\u2019s a value of type  EffectStack effects m, which is just an HList of our effects.\n &gt; -- a combinator to make creating HLists syntactically nicer.&gt; (.:.) :: effect m -&gt; EffectStack effects m -&gt; EffectStack (effect &#39;: effects) m&gt; effect .:. effects = ConsEffect effect effects&gt; infixr 4 .:.&gt; &gt; -- interpret http actions in IO&gt; handleExcep :: HttpException -&gt; Either Int a&gt; handleExcep (StatusCodeException status _ _) = Left (S.statusCode status)&gt; handleExcep _ = error &#34;unhandled HttpException&#34;&gt; &gt; httpIO :: Http IO&gt; httpIO =&gt; Http { getHttpEff = \\req -&gt; (Right get req) `catch` (return . handleExcep)&gt; , postHttpEff = \\req body -&gt; (Right post req body) `catch` (return . handleExcep)&gt; }&gt; &gt; -- interpret logging actions in IO&gt; logIO :: Logging IO&gt; logIO = Logging { logEff = putStrLn }&gt; &gt; -- random number generator in IO&gt; randIO :: Random IO&gt; randIO = Random { getRandEff = randomIO }&gt; &gt; -- suspend in IO&gt; suspendIO :: Suspend IO&gt; suspendIO = Suspend { suspendEff = threadDelay }&gt; &gt; -- our effect stack&gt; type MyEffects = ( Http &#39;: Logging &#39;: Random &#39;: Suspend &#39;: &#39;[] )&gt; &gt; -- our interpreter&gt; ioInterpreter :: EffectStack MyEffects IO&gt; ioInterpreter = httpIO .:. logIO .:. randIO .:. suspendIO .:. EmptyEffect\n    Hopefully by now you\u2019ve been convinced that we\u2019ve achieved our goal: we can program against effects in Haskell just like our comrades programming with Idris and PureScript (I say this fully tongue-in-cheek). Further, we can provide arbitrary effect stacks and combine interpreters in whatever way we want (so long as they share the same monad).\n  investigate program analysis. The van Laarhoven Free Monad is just a function, but can we supply it with an effect stack built for program or static analysis?", "posttime": "2021-07-29 21:55:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "laarhoven,effects,gt", "title": "van Laarhoven Free Monad \u4e2d\u7684\u53ef\u6269\u5c55\u6548\u679c", "title_en": "Extensible Effects in the van Laarhoven Free Monad", "transed": 1, "url": "https://aaronlevin.ca/post/136494428283/extensible-effect-stacks-in-the-van-laarhoven-free", "via": "", "real_tags": ["laarhoven", "effects", "gt"]}, {"category": "", "categoryclass": "", "imagename": "ab4cb7fa127ab4b997d47c990d69c036.jpg", "infoid": 1070257, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u79d1\u6280\u5de8\u5934\u5468\u4e09\u8868\u793a\uff0c\u8c37\u6b4c\u548c Facebook \u5c06\u8981\u6c42\u7f8e\u56fd\u5458\u5de5\u5728\u8fd4\u56de\u516c\u53f8\u529e\u516c\u5ba4\u4e4b\u524d\u63a5\u79cd\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u3002\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u8c37\u6b4c\u9996\u5e2d\u6267\u884c\u5b98\u6851\u8fbe\u5c14\u76ae\u67e5\u4f0a\u8868\u793a\uff0c\u75ab\u82d7\u6388\u6743\u5c06\u5728\u672a\u6765\u51e0\u5468\u5185\u9002\u7528\u4e8e\u5176\u7f8e\u56fd\u529e\u4e8b\u5904\uff0c\u6700\u7ec8\u5c06\u9002\u7528\u4e8e\u5176\u4ed6\u5730\u70b9\u3002 \u201c\u63a5\u79cd\u75ab\u82d7\u662f\u5728\u672a\u6765\u51e0\u4e2a\u6708\u4fdd\u6301\u6211\u4eec\u81ea\u5df1\u548c\u6211\u4eec\u7684\u793e\u533a\u5065\u5eb7\u7684\u6700\u91cd\u8981\u65b9\u6cd5\u4e4b\u4e00\uff0c\u201d\u76ae\u67e5\u4f0a\u5199\u9053\u3002\u5728\u8c37\u6b4c\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\u540e\u4e0d\u4e45\uff0cFacebook \u8868\u793a\uff0c\u5b83\u4e5f\u5c06\u8981\u6c42\u4efb\u4f55\u6765\u5176\u7f8e\u56fd\u529e\u4e8b\u5904\u5de5\u4f5c\u7684\u4eba\u63a5\u79cd\u75ab\u82d7\u3002 \u201c\u6211\u4eec\u5982\u4f55\u5b9e\u65bd\u8fd9\u9879\u653f\u7b56\u5c06\u53d6\u51b3\u4e8e\u5f53\u5730\u7684\u6761\u4ef6\u548c\u6cd5\u89c4\u3002\u6211\u4eec\u5c06\u4e3a\u90a3\u4e9b\u56e0\u533b\u7597\u6216\u5176\u4ed6\u539f\u56e0\u65e0\u6cd5\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u5236\u5b9a\u4e00\u4e2a\u6d41\u7a0b\uff0c\u5e76\u5c06\u968f\u7740\u60c5\u51b5\u7684\u53d1\u5c55\u8bc4\u4f30\u6211\u4eec\u5728\u5176\u4ed6\u5730\u533a\u7684\u65b9\u6cd5\uff0c\u201dFacebook \u526f\u603b\u88c1 Lori Goler\u4eba\u6c11\u603b\u7edf\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u5199\u9053\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5305\u62ec\u82f9\u679c\u548c\u4e9a\u9a6c\u900a\u5728\u5185\u7684\u5176\u4ed6\u4e3b\u8981\u79d1\u6280\u516c\u53f8\u90fd\u62d2\u7edd\u5f3a\u5236\u63a5\u79cd\u75ab\u82d7\u3002\u5fae\u8f6f\u5728\u7ed9\u5458\u5de5\u7684\u4e00\u4efd\u8bf4\u660e\u4e2d\u8868\u793a\uff0c\u8fdb\u5165\u5de5\u4f5c\u573a\u6240\u4e0d\u9700\u8981\u63a5\u79cd\u75ab\u82d7\uff0c\u4f46\u516c\u53f8\u9ad8\u7ea7\u5b98\u5458\u5efa\u8bae\u5458\u5de5\u63a5\u79cd\u75ab\u82d7\u3002\u76ae\u67e5\u4f0a\u8fd8\u8868\u793a\uff0c\u968f\u7740\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\uff0c\u8c37\u6b4c\u5c06\u628a\u5176 144,000 \u540d\u5458\u5de5\u4e2d\u7684\u5927\u591a\u6570\u4eba\u7684\u590d\u5de5\u65e5\u671f\u4ece 9 \u6708\u63a8\u8fdf\u5230 10 \u6708\u4e2d\u65ec\u3002\u5176\u4ed6\u79d1\u6280\u516c\u53f8\u4e5f\u5ba3\u5e03\u4e86\u7c7b\u4f3c\u7684\u5ef6\u8fdf\u3002\n\u5728\u5468\u4e09\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u8c37\u6b4c\u7684\u76ae\u67e5\u4f0a\u8868\u793a\uff0c\u8c37\u6b4c\u5458\u5de5\u7684\u75ab\u82d7\u63a5\u79cd\u7387\u201c\u975e\u5e38\u9ad8\u201d\uff0c\u4ed6\u53d7\u5230\u4e86\u9f13\u821e\u3002\u4ed6\u5199\u9053\uff1a\u201c\u8fd9\u662f\u6211\u4eec\u5bf9\u5e0c\u671b\u65e9\u65e5\u8fd4\u56de\u7684\u5458\u5de5\u5f00\u653e\u4e00\u4e9b\u529e\u516c\u5ba4\u611f\u5230\u5f88\u81ea\u5728\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u3002\u201d\u968f\u7740\u53bb\u5e74\u5927\u6d41\u884c\u7684\u8513\u5ef6\uff0c\u79d1\u6280\u884c\u4e1a\u662f\u6700\u65e9\u5c06\u5458\u5de5\u9001\u56de\u5bb6\u5de5\u4f5c\u7684\u884c\u4e1a\u4e4b\u4e00\u3002\u73b0\u5728\uff0c\u5b83\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u5c06\u4ed6\u4eec\u5e26\u56de\u529e\u516c\u5ba4\uff0c\u4ee5\u53ca\u5e94\u8be5\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u8ba9\u5176\u5e9e\u5927\u7684\u5458\u5de5\u7ee7\u7eed\u8fdc\u7a0b\u5de5\u4f5c\u7684\u95ee\u9898\u3002\u8bb8\u591a\u516c\u53f8\u5f00\u53d1\u4e86\u6df7\u5408\u6a21\u5f0f\uff0c\u81f3\u5c11\u4e3a\u5458\u5de5\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7075\u6d3b\u6027\u3002\u82f9\u679c\u516c\u53f8\u8fd8\u5c06\u5176\u91cd\u8fd4\u529e\u516c\u5ba4\u7684\u65e5\u671f\u63a8\u8fdf\u5230 10 \u6708\uff0c\u4f46\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u81f4\u529b\u4e8e\u8ba9\u5927\u591a\u6570\u5458\u5de5\u6bcf\u5468\u81f3\u5c11\u5728\u73b0\u573a\u5de5\u4f5c\u4e09\u5929\u3002\u5fae\u8f6f\u7684\u76ee\u6807\u662f\u5728 9 \u6708\u91cd\u65b0\u5f00\u653e\u5176\u529e\u516c\u5ba4\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5927\u6d41\u884c\u4f7f\u5176\u6269\u5927\u4e86\u4e3a\u5de5\u4eba\u63d0\u4f9b\u7684\u6df7\u5408\u5de5\u4f5c\u673a\u4f1a\u3002 Facebook \u6709\u671b\u5728 10 \u6708\u91cd\u65b0\u5f00\u653e\u5176\u529e\u516c\u5ba4\uff0c\u4f46\u5c06\u5141\u8bb8\u5458\u5de5\u5728\u83b7\u5f97\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\u7ee7\u7eed\u8fdc\u7a0b\u5de5\u4f5c\u3002 Facebook \u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u624e\u514b\u4f2f\u683c\u66fe\u8868\u793a\uff0c\u4ed6\u9884\u8ba1\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u7684 48,000 \u540d\u5458\u5de5\u4e2d\u6709\u4e00\u534a\u5c06\u5728\u672a\u6765\u51e0\u5e74\u8fdb\u884c\u8fdc\u7a0b\u5de5\u4f5c\u3002\u5bf9\u4e8e\u4e9a\u9a6c\u900a\u5458\u5de5\u6765\u8bf4\uff0c\u4eca\u5e74\u79cb\u5929\u4e5f\u5c06\u91cd\u8fd4\u529e\u516c\u5ba4\u3002\u4e9a\u9a6c\u900a\u66fe\u8868\u793a\u5c06\u5141\u8bb8\u5458\u5de5\u6bcf\u5468\u5728\u5bb6\u5de5\u4f5c\u4e24\u5929\u3002\u516c\u53f8\u53d1\u8a00\u4eba\u62d2\u7edd\u5c31\u662f\u5426\u4f1a\u53d1\u5e03\u75ab\u82d7\u6388\u6743\u53d1\u8868\u8bc4\u8bba\u3002\nTwitter \u8981\u6c42\u5176\u8fd4\u56de\u7684\u5458\u5de5\u5728\u8fd4\u56de\u529e\u516c\u5ba4\u4e4b\u524d\u51fa\u793a\u75ab\u82d7\u63a5\u79cd\u8bc1\u660e\u3002\u7136\u800c\uff0c\u5b83\u62e5\u6709\u4e1a\u5185\u6700\u5927\u80c6\u7684\u8fdc\u7a0b\u5de5\u4f5c\u653f\u7b56\u4e4b\u4e00\u3002\u8be5\u516c\u53f8\u5728 5 \u6708\u4efd\u5ba3\u5e03\uff0c\u5982\u679c\u5458\u5de5\u613f\u610f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u6c38\u4e45\u8fdc\u7a0b\u5de5\u4f5c\u3002 Twitter \u9996\u5e2d\u8d22\u52a1\u5b98 Ned Segal \u672c\u6708\u5728\u4e00\u6761\u63a8\u6587\u4e2d\u8868\u793a\uff1a\u201c\u6211\u4eec\u4e0d\u4f1a\u8981\u6c42\u6bcf\u4e2a\u4eba\u90fd\u56de\u6765\u3002\u6c38\u8fdc\uff0c\u201d\u5e76\u8865\u5145\u8bf4 Twitter \u5458\u5de5\u53ef\u4ee5\u201c\u5728\u6c99\u53d1\u4e0a\u6216\u529e\u516c\u5ba4\u91cc\u201d\u5de5\u4f5c\u3002\u5468\u4e09\uff0cTwitter \u5ba3\u5e03\u5c06\u6839\u636e\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u7684\u6700\u65b0\u6307\u5357\u5173\u95ed\u5176\u5728\u65e7\u91d1\u5c71\u548c\u7ebd\u7ea6\u91cd\u65b0\u5f00\u653e\u7684\u529e\u516c\u5ba4\u3002\u636e\u516c\u53f8\u53d1\u8a00\u4eba\u79f0\uff0c\u5546\u4e1a\u8f6f\u4ef6\u5236\u9020\u5546 Salesforce \u5df2\u5f00\u59cb\u8ba9\u5458\u5de5\u8fd4\u56de\u5176\u6240\u5728\u5730\uff0c\u8be5\u516c\u53f8\u8981\u6c42\u5458\u5de5\u5728\u8fd4\u56de\u524d\u63a5\u79cd\u75ab\u82d7\u3002", "note_en": "Google and Facebook will require U.S. employees to be vaccinated against the coronavirus before returning to the company&#39;s offices, the tech giants said on Wednesday.\n  In  a blog post, Google CEO Sundar Pichai said the vaccine mandate would apply to its U.S. offices in the coming weeks and would be required eventually for other locations.\n  &#34;Getting vaccinated is one of the most important ways to keep ourselves and our communities healthy in the months ahead,&#34; Pichai wrote.\n  Shortly after Google&#39;s announcement, Facebook said it too will require anyone coming to work at its U.S. offices to be vaccinated.\n  &#34;How we implement this policy will depend on local conditions and regulations. We will have a process for those who cannot be vaccinated for medical or other reasons and will be evaluating our approach in other regions as the situation evolves,&#34; Lori Goler, Facebook&#39;s vice president of people, wrote in a statement.\n    So far, other major tech companies, including Apple and Amazon, have declined to mandate vaccines. Microsoft, in a note to employees, said it will not require vaccination to enter workplaces, but top company officials recommend employees receive the shot.\n    Pichai also said Google would push back the return-to-office date for most of its 144,000 employees from September to mid-October as the delta variant of the coronavirus spreads. Other tech companies have announced similar delays.\n  In his blog post Wednesday, Google&#39;s Pichai said he has been encouraged to see &#34;very high vaccination rates&#34; among Googlers.\n  &#34;This is a big reason why we felt comfortable opening some of our offices to employees who wanted to return early,&#34; he wrote.\n  As the pandemic took hold last year, the tech industry was one of the first to send employees home to work. Now it&#39;s struggling with how and when to bring them back to the office, and to what degree it should let its vast workforce continue working remotely. Many companies have developed hybrid models, offering workers at least some flexibility.\n  Apple also has pushed back its return-to-the-office date to October, but the company said it is committed to having most employees work on location at least three days a week.\n  Microsoft is aiming for a September reopening of its offices. The company  said the pandemic has led it to expand its hybrid work opportunities for workers.\n  Facebook is on track to reopen its offices in October but will allow employees to continue working remotely with permission. Facebook CEO Mark Zuckerberg  has said he expects half of the tech giant&#39;s 48,000 employees to be working remotely in the coming years.\n    For Amazon workers, a return to the office is also slated for this fall. Amazon has said it will allow employees to work from home two days a week. A company spokesman declined to comment on whether it will issue a vaccine mandate.\n  Twitter is requiring its returning workers to show proof of vaccination before coming back to the office. Yet it has among the boldest remote work policies in the industry. The company announced in May that its employees can work remotely permanently if they so choose. Twitter Chief Financial Officer Ned Segal said in  a tweet this month: &#34;We aren&#39;t asking everyone to return. Ever,&#34; adding that Twitter staffers can do their work &#34;on their sofa or in an office.&#34;\n  On Wednesday, Twitter announced it is shutting down its reopened offices in San Francisco and New York in light of updated guidelines from the Centers for Disease Control and Prevention.\n  Business software maker Salesforce has begun to bring employees back to its locations and the company is requiring its workers be vaccinated before returning, according to a company spokeswoman.", "posttime": "2021-07-29 21:55:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,facebook,google,\u7f8e\u56fd,\u5458\u5de5", "title": "\u8c37\u6b4c\u548c Facebook \u4e3a\u7f8e\u56fd\u529e\u4e8b\u5904\u7684\u5458\u5de5\u5f3a\u5236\u63a5\u79cd\u75ab\u82d7", "title_en": "Google and Facebook mandate vaccines for employees at U.S. offices", "transed": 1, "url": "https://www.npr.org/2021/07/28/1021798222/google-mandates-vaccines-for-workers-pushes-back-return-to-office-date", "via": "", "real_tags": ["\u8c37\u6b4c", "facebook", "google", "\u7f8e\u56fd", "\u5458\u5de5"]}, {"category": "", "categoryclass": "", "imagename": "99b8da0172616d7527839828723da956.png", "infoid": 1070256, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u540c\u65f6\u8bb0\u5f55\u6570\u767e\u4e2a\u795e\u7ecf\u5143\u5df2\u53d8\u5f97\u53f8\u7a7a\u89c1\u60ef\u3002\u5982\u679c\u6839\u636e\u8fc7\u53bb\u7684\u8d8b\u52bf\u63a8\u65ad\uff0c\u5230 2030 \u5e74\u6211\u4eec\u901a\u5e38\u53ef\u80fd\u4f1a\u8bb0\u5f55 1 \u4e07\u4e2a\u795e\u7ecf\u5143\u3002\u6211\u4eec\u5c06\u5982\u4f55\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u6570\u636e\uff1f\u8981\u5904\u7406 14 \u7ef4\u7a7a\u95f4\uff0c\u8bf7\u60f3\u8c61\u4e00\u4e2a 3D \u7a7a\u95f4\u5e76\u5927\u58f0\u5bf9\u81ea\u5df1\u8bf4 14\u3002\u6bcf\u4e2a\u4eba\u90fd\u8fd9\u6837\u505a\u3002 \u2014 Geoffrey Hinton \u795e\u7ecf\u52a8\u529b\u5b66\u7684\u7ef4\u5ea6\u5f80\u5f80\u4f4e\u4e8e\u8bb0\u5f55\u7684\u795e\u7ecf\u5143\u6570\u91cf\u6240\u6697\u793a\u7684\u7ef4\u5ea6 \u2013 Humphries (2020) \u62a5\u544a\u4e86 10 \u500d\u5230 100 \u500d\u7684\u538b\u7f29\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u533a\u57df\u548c\u4efb\u52a1\u3002 Humphries \u5efa\u8bae\uff0c\u501f\u52a9\u795e\u7ecf\u964d\u7ef4\u7684\u5f3a\u5927\u539f\u7406\uff0c\u964d\u7ef4\u53ef\u4ee5\u5411\u6211\u4eec\u5c55\u793a\u795e\u7ecf\u56de\u8def\u6240\u4f53\u73b0\u7684\u771f\u5b9e\u6f5c\u5728\u4fe1\u53f7\u3002\u5373\u4f7f\u6211\u4eec\u4e0d\u5b8c\u5168\u76f8\u4fe1\u8fd9\u4e2a\u5f3a\u5927\u7684\u539f\u7406\u2014\u2014\u5b83\u5728\u89c6\u89c9\u7814\u7a76\u4eba\u5458\u4e2d\u80af\u5b9a\u5b58\u5728\u4e89\u8bae\u2014\u2014\u8bb8\u591a\u4eba\u8d5e\u540c\u5f31\u539f\u7406\uff1a\u66f4\u5c0f\u3001\u65f6\u95f4\u66f4\u5e73\u6ed1\u3001\u566a\u58f0\u66f4\u5c11\u7684\u5b50\u7a7a\u95f4\u6bd4\u539f\u59cb\u6570\u636e\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4ecb\u7ecd\u4e86\u795e\u7ecf\u6570\u636e\u5206\u6790\u4e2d\u65e0\u76d1\u7763\u65b9\u6cd5\u7684\u5206\u7c7b\uff0c\u786e\u5b9a\u4e86\u6587\u732e\u4e2d\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u8d8b\u52bf\uff0c\u5e76\u5c55\u793a\u4e86\u4e00\u4e9b\u5173\u952e\u5dee\u8ddd\u2014\u2014\u672a\u6765\u51e0\u5e74\u7684\u7814\u7a76\u8def\u7ebf\u56fe\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u5173\u5fc3\u795e\u7ecf\u79d1\u5b66\u4e2d\u7684\u964d\u7ef4\uff1f\u8ba9\u6211\u4eec\u6570\u4e00\u6570\u65b9\u5f0f\uff08\u5927\u81f4\u6309\u91ce\u5fc3\u6392\u5e8f\uff0c\u6216\u4ece\u5f31\u539f\u5219\u5230\u5f3a\u539f\u5219\uff09\uff1a \u538b\u7f29\uff1a\u5c06\u6570\u636e\u538b\u7f29\u5230\u51e0\u5341\u4e2a\u7ef4\u5ea6\u800c\u4e0d\u662f\u51e0\u767e\u4e2a\u7ef4\u5ea6\u6709\u5b9e\u9645\u7684\u8ba1\u7b97\u539f\u56e0\u2014\u2014\u5373\u8282\u7701\u5185\u5b58\u548c\u5904\u7406\u3002\u53ef\u89c6\u5316\uff1a\u4eba\u7c7b\u4e0d\u64c5\u957f\u53ef\u89c6\u5316\u8d85\u8fc7 2 \u6216 3 \u4e2a\u7ef4\u5ea6\u3002\u5c06\u4fe1\u606f\u538b\u7f29\u5230\u5c11\u6570\u6709\u610f\u4e49\u7684\u7ef4\u5ea6\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u7ed8\u5236\u5b83\u4eec\uff0c\u5e76\u76f4\u89c2\u5730\u4e86\u89e3\u6570\u636e\u53d8\u5316\u7684\u56e0\u7d20\u3002\n\u53bb\u566a\uff1a\u5982\u679c\u6211\u4eec\u60f3\u4e86\u89e3\u5355\u6b21\u8bd5\u9a8c\u671f\u95f4\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u53bb\u566a\u3002\u5982\u679c 100 \u4e2a\u795e\u7ecf\u5143\u662f\u540c\u4e00\u4e2a\u6f5c\u5728\u53d8\u91cf\u7684 100 \u4e2a\u72ec\u7acb\u8868\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e73\u5747\u6765\u5c06\u4fe1\u566a\u6bd4\u63d0\u9ad8\u4e00\u4e2a\u56e0\u5b50\u221a100 = 10\u3002\u964d\u7ef4\u7075\u6d3b\u5730\u5e73\u5747\u540c\u4e00\u6570\u636e\u7684\u591a\u4e2a\u91cd\u53e0\u5b9e\u73b0\uff0c\u4ee5\u5b9e\u73b0\u4fe1\u566a\u6bd4\u7684\u63d0\u5347\u3002\u751f\u6210\u5047\u6570\u636e\uff1a\u8bb8\u591a\u964d\u7ef4\u65b9\u6cd5\u90fd\u662f\u6709\u6548\u7684\u751f\u6210\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u751f\u6210\u5047\u795e\u7ecf\u6570\u636e\uff0c\u4f8b\u5982\u5bf9\u5c16\u5cf0\u6392\u5e8f\u548c\u9499\u6210\u50cf\u4fe1\u53f7\u5904\u7406\u7ba1\u9053\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u4e0e\u884c\u4e3a\u76f8\u5173\uff1a\u5608\u6742\u7684\u9ad8\u7ef4\u795e\u7ecf\u6570\u636e\u5f88\u96be\u4e0e\u52a8\u7269\u7684\u884c\u4e3a\u76f8\u5173\u8054\uff0c\u800c\u8fd9\u5f80\u5f80\u662f\u6211\u4eec\u6700\u7ec8\u5173\u5fc3\u7684\u3002\u5c06\u4fe1\u606f\u538b\u7f29\u5230\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u4e0e\u884c\u4e3a\u76f8\u5173\u8054\u3002\u7406\u89e3\u8ba1\u7b97\uff1a\u6f5c\u5728\u7a7a\u95f4\u53ef\u80fd\u4ee3\u8868\u539f\u59cb\u6570\u636e\u4e2d\u4e0d\u53ef\u89c1\u7684\u795e\u7ecf\u8ba1\u7b97\u7684\u6709\u8da3\u65b9\u9762\uff0c\u4f8b\u5982\uff0c\u7ebf\u5438\u5f15\u5b50\u6216\u65cb\u8f6c\u52a8\u529b\u5b66\u3002\u964d\u7ef4\u7684\u6f5c\u5728\u7a7a\u95f4\u53ef\u4ee5\u5e2e\u52a9\u53d1\u73b0\u90a3\u4e9b\u9690\u85cf\u7684\u8ba1\u7b97\u3002\u89e3\u5f00\u6f5c\u5728\u56e0\u7d20\uff1a\u4e5f\u8bb8\u6700\u96c4\u5fc3\u52c3\u52c3\u7684\u662f\uff0c\u6211\u4eec\u60f3\u8981\u786e\u5b9a\u5bfc\u81f4\u6570\u636e\u53d8\u5316\u7684\u6f5c\u5728\u56e0\u7d20\u3002\u5927\u591a\u6570\u964d\u7ef4\u65b9\u6cd5\u4e0d\u76f4\u63a5\u6355\u83b7\u56e0\u679c\u673a\u5236\u2014\u2014\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u903b\u8f91\u7ef4\u5ea6\u53ef\u80fd\u6355\u83b7\u51e0\u4e2a\u56e0\u679c\u673a\u5236\u3002\u4f46\u662f\u4e00\u4e9b\u964d\u7ef4\u65b9\u6cd5\u6e34\u671b\u89e3\u5f00\u72ec\u7acb\u7684\u539f\u56e0\u2014\u2014\u7ebf\u6027 ICA\uff08\u72ec\u7acb\u6210\u5206\u5206\u6790\uff09\u53ef\u80fd\u662f\u6700\u8457\u540d\u7684\u4f8b\u5b50\u3002\u6807\u51c6\u514d\u8d23\u58f0\u660e\uff1a\u56e0\u679c\u63a8\u65ad\u5f88\u96be\u3002\u5bf9\u56e0\u679c\u8bba\u65ad\u6301\u6000\u7591\u6001\u5ea6\u3002\u8fd9\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u7814\u7a76\u9886\u57df\u3002\u9274\u4e8e\u8fd9\u4e9b\u4e0d\u540c\u7684\u5206\u6790\u76ee\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u8bd1\u4e00\u4e2a\u89c4\u8303\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u6db5\u76d6\u4e86\u5e7f\u6cdb\u7684\u964d\u7ef4\u6280\u672f\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u751f\u6210\u6a21\u578b\uff0c\u5b83\u901a\u8fc7\u6620\u5c04\u51fd\u6570 f \u548c\u566a\u58f0\u6a21\u578b\u5c06\u6f5c\u5728\u56e0\u5b50 z(t) \u6620\u5c04\u5230\u795e\u7ecf\u89c2\u5bdf x(t)\u3002\u6f5c\u5728\u56e0\u7d20\u6839\u636e\u5b83\u4eec\u7684\u52a8\u6001 D \u6f14\u5316\u3002\u964d\u7ef4\u6280\u672f\u7684\u4e2d\u5fc3\u76ee\u6807\u662f\u5b66\u4e60\u63a8\u7406\u51fd\u6570 \u03c6\uff0c\u5b83\u5c06\u795e\u7ecf\u89c2\u5bdf x(t) \u6620\u5c04\u5230\u6f5c\u5728\u56e0\u7d20 z(t)\u3002\u8be5\u63a8\u7406\u51fd\u6570\u53ef\u4ee5\u50cf\u77e9\u9635\u4e58\u6cd5\u4e00\u6837\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u50cf\u7531\u591a\u6b65\u4f18\u5316\u7a0b\u5e8f\u5b9e\u73b0\u7684\u9690\u5f0f\u51fd\u6570\u4e00\u6837\u590d\u6742\u3002\n\u4e3a\u4e86\u5728\u5730\u9762\u4e0a\u653e\u7f6e\u4e00\u4e9b\u8d4c\u6ce8\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e9b\u4e0d\u540c\u7684\u7ec4\u4ef6\u5982\u4f55\u5728\u60a8\u53ef\u80fd\u542c\u8bf4\u8fc7\u7684\u4e00\u4e9b\u6d41\u884c\u6a21\u578b\u4e2d\u76f8\u4e92\u4f5c\u7528\uff1a PCA\uff1a\u5728\u4e3b\u6210\u5206\u5206\u6790 (PCA) \u4e2d\uff0c\u6620\u5c04\u51fd\u6570 f \u662f\u77ac\u65f6\u7ebf\u6027\u51fd\u6570\uff0c\u566a\u58f0\u662f\u9ad8\u65af\u51fd\u6570\uff08\u5728 PCA \u7684\u6982\u7387\u6269\u5c55\u4e2d\uff09\u3002\u52a8\u6001\u6ca1\u6709\u660e\u786e\u5efa\u6a21\u3002\u63a8\u7406\u51fd\u6570\u662f\u6620\u5c04\u51fd\u6570 ICA \u7684\u9006\u77e9\u9635\uff1a\u5728\u72ec\u7acb\u5206\u91cf\u5206\u6790 (ICA) \u4e2d\uff0c\u6620\u5c04\u51fd\u6570\u7684\u7c7b\u522b\u4e0e PCA \u4e2d\u7684\u76f8\u540c\uff0c\u4f46\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6620\u5c04\u51fd\u6570 \u03c6 \u88ab\u7ea6\u675f\u4e3a\u6f5c\u5728\u7a7a\u95f4 z(t ) \u88ab\u5206\u89e3\u4e3a\u72ec\u7acb\u7684\u6765\u6e90\u3002 GPFA\uff1a\u5728\u9ad8\u65af\u8fc7\u7a0b\u56e0\u5b50\u5206\u6790 (GPFA) \u4e2d\uff0c\u6620\u5c04\u51fd\u6570\u518d\u6b21\u662f\u7ebf\u6027\u51fd\u6570\uff0c\u540e\u8ddf\u9ad8\u65af\u566a\u58f0\uff0c\u4f46\u73b0\u5728\u4f7f\u7528\u72ec\u7acb\u7684\u9ad8\u65af\u8fc7\u7a0b (GP) \u5148\u9a8c\u660e\u786e\u5730\u5efa\u6a21\u52a8\u6001\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5f3a\u5236\u6f5c\u5728\u53d8\u91cf\u968f\u65f6\u95f4\u5e73\u6ed1\u53d8\u5316\u3002\u63a8\u7406\u662f\u901a\u8fc7\u5177\u6709\u671f\u671b\u6700\u5927\u5316\u7684\u5c01\u95ed\u5f62\u5f0f GP \u63a8\u7406\u6765\u5b8c\u6210\u7684\uff0c\u4ee5\u5b66\u4e60\u8d85\u53c2\u6570 LFADS\uff1a\u5728\u901a\u8fc7\u52a8\u6001\u7cfb\u7edf\u7684\u6f5c\u5728\u56e0\u5b50\u5206\u6790 (LFADS) \u4e2d\uff0c\u52a8\u6001\u7531 RNN \u7ed9\u51fa\uff0c\u800c\u6620\u5c04\u51fd\u6570\u662f\u7ebf\u6027\u7684\uff0c\u566a\u58f0\u53ef\u4ee5\u662f\u9ad8\u65af\u6216\u6cca\u677e\u3002 RNN \u9690\u542b\u5730\u5f3a\u52a0\u4e86\u5e73\u6ed1\u7684\u52a8\u6001\u3002\u63a8\u7406\u662f\u901a\u8fc7\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668 (VAE) \u6846\u67b6\u4e2d\u7684\u53d8\u5206\u63a8\u7406\u5b8c\u6210\u7684\u3002\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u52a8\u4eba\u90e8\u5206\u662f\u52a8\u6001\u3002\u4e3a\u4e86\u5728\u5355\u4e2a\u8bd5\u9a8c\u7ea7\u522b\u63a8\u65ad\u795e\u7ecf\u6d3b\u52a8\u7684\u6f5c\u5728\u7ed3\u6784\uff0c\u4f7f\u7528\u5f53\u524d\u73b0\u6709\u7684\u8bb0\u5f55\u6280\u672f\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u795e\u7ecf\u5143\u548c SNR \u6765\u63a8\u65ad\u5355\u4e2a\u8bd5\u9a8c\u7ea7\u522b\u7684\u6f5c\u5728\u7ed3\u6784\uff1a\u6211\u4eec\u5fc5\u987b\u7075\u6d3b\u5730\u5e73\u6ed1\u65f6\u95f4\u3002\u590d\u6742\u7684\u52a8\u6001\u5148\u9a8c\u9700\u8981\u590d\u6742\u7684\u3001\u6982\u7387\u6027\u7684\u63a8\u7406\u65b9\u6cd5\u2014\u2014\u6bcf\u79cd\u65b9\u6cd5\u5728\u901f\u5ea6\u3001\u5b9e\u73b0\u7684\u7b80\u5355\u6027\u548c\u901a\u7528\u6027\u65b9\u9762\u90fd\u6709\u5176\u6743\u8861\u2014\u2014\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u8fc7\u53bb 5 \u5e74\u4e2d\u770b\u5230\u4e86\u65b9\u6cd5\u7684\u7206\u70b8\u5f0f\u589e\u957f\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e9b\u964d\u7ef4\u65b9\u6cd5\u7684\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4e00\u4e9b\u5df2\u53d1\u8868\u7684\u5206\u7c7b\u6cd5\uff0c\u5b83\u4eec\u8bd5\u56fe\u4e3a\u6df7\u4e71\u5e26\u6765\u4e00\u4e9b\u79e9\u5e8f\u3002\u6211\u5df2\u7ecf\u7528\u4e0a\u9762\u7684\u89c4\u8303\u6a21\u578b\uff08\u7ea2\u8272\uff09\u7684\u7ec4\u4ef6\u6ce8\u91ca\u4e86\u8fd9\u4e9b\u5206\u7c7b\u6cd5\u4ee5\u4f9b\u53c2\u8003\u3002 Cunningham and Yu (2014) \u7684\u7ecf\u5178\u8bc4\u8bba\u4e2d\u6709\u4e00\u4e2a\u65e9\u671f\u7684\u5206\u7c7b\u6cd5\uff1a\n\u6211\u4eec\u770b\u5230\u4e86\u8fd9\u9879\u65e9\u671f\u5de5\u4f5c\u4e2d\u6240\u4ee3\u8868\u7684\u76ee\u6807\u7684\u591a\u6837\u6027\u3002\u63a5\u4e0b\u6765\u51e0\u5e74\u7684\u5927\u90e8\u5206\u7814\u7a76\u90fd\u96c6\u4e2d\u5728\u6784\u5efa\u590d\u6742\u7684\u65b0\u63a8\u7406\u65b9\u6cd5\u4e0a\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5047\u5b9a\u663e\u5f0f\u751f\u6210\u548c\u52a8\u6001\u6a21\u578b\u3002\u52a8\u529b\u5b66\u5141\u8bb8\u6a21\u578b\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6574\u5408\u4fe1\u606f\uff0c\u8fd9\u4f7f\u5f97\u8fdb\u884c\u5355\u6b21\u8bd5\u9a8c\u63a8\u7406\u6210\u4e3a\u53ef\u80fd\u3002\u7ea6\u7ff0\u00b7\u574e\u5b81\u5b89 (John Cunningham) \u5728 2018 \u5e74\u5de6\u53f3\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u63d0\u51fa\u4e86\u8fd9\u4e9b\u6a21\u578b\u7684\u65b0\u5206\u7c7b\u6cd5\uff1a\u4e3a\u4f4e\u8d28\u91cf\u9053\u6b49\uff0c\u5b83\u662f\u4ece\u5173\u952e\u5e7b\u706f\u7247\u7684\u7167\u7247\u4e2d\u63d0\u53d6\u7684 \u8fd9\u4e2a\u66f4\u65b0\u7684\u8868\u683c\u6709\u70b9\u96be\u4ee5\u89e3\u6790\uff0c\u4f46\u6211\u53d1\u73b0\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u5386\u53f2\u4e0a\u4e0b\u6587\u548c\u8c31\u7cfb\uff1a\u6211\u4eec\u5728\u5de6\u5217\u4e2d\u770b\u5230\u6709\u5173\u6613\u5904\u7406\u6a21\u578b\u7684\u65e9\u671f\u5de5\u4f5c\uff08\u9690\u85cf\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u3001\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf\u3001\u5207\u6362 LDS\uff09\u5728\u4e2d\u5217\u548c\u53f3\u5217\u4e2d\u6f14\u53d8\u4e3a\u66f4\u590d\u6742\u7684\u6a21\u578b\u3002\u590d\u6742\u7684\u6a21\u578b\u5e26\u6765\u4e86\u590d\u6742\u7684\u63a8\u7406\u6280\u672f\uff1b Memming Park \u5728 2020 \u5e74 CoSyNe \u6f14\u8bb2\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u603b\u7ed3\uff1a\u5176\u4e2d\u8bb8\u591a\u65b9\u6cd5\u6700\u8fd1\u88ab\u7f16\u8bd1\u6210 Hurwitz \u7b49\u4eba\u7684\u53e6\u4e00\u4e2a\u5206\u7c7b\u6cd5\u3002 (2021)\uff0c\u7528\u5c16\u7aef\u65b9\u6cd5\u7efc\u5408\u4e86\u8be5\u9886\u57df\u7684\u4e00\u4e9b\u65e9\u671f\u5de5\u4f5c\u3002\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u6709\u70b9\u96be\u4ee5\u63cf\u8ff0\uff0c\u4f46\u60a8\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u4e2d\u7684\u5b57\u6bcd\u7ec4\u6765\u731c\u6d4b\u6bcf\u79cd\u65b9\u6cd5\u7684\u542b\u4e49\uff1aGP\uff1a\u9ad8\u65af\u8fc7\u7a0b\u3002\u9ad8\u65af\u8fc7\u7a0b\u901a\u5e38\u7528\u4e8e\u5bf9\u6f5c\u5728\u53d8\u91cf\u65bd\u52a0\u65f6\u95f4\u5e73\u6ed1\uff0c\u5f88\u5c11\u7528\u4e8e\u5bf9\u975e\u7ebf\u6027\u8c03\u8c10\u66f2\u7ebf\u8fdb\u884c\u5efa\u6a21\u3002\nLDS\uff1a\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf\u3002\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u662f\u5177\u6709\u57fa\u7840\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf\u7684\u6a21\u578b\u7684\u793a\u4f8b\u3002 SLDS\uff1a\u5207\u6362 LDS\u3002\u53ef\u4ee5\u6839\u636e\u79bb\u6563\u53d8\u91cf\u5728 2 \u4e2a\u6216\u66f4\u591a\u6f5c\u5728\u7ebf\u6027\u52a8\u6001\u4e4b\u95f4\u5207\u6362\u7684\u6a21\u578b\u3002 P*\uff1a\u6cca\u677e\u3002\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u4e2d\u7684\u8d77\u59cb P \u901a\u5e38\u6307\u7684\u662f\u6cca\u677e\u566a\u58f0\u6a21\u578b\u3002 VAE\uff1a\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668\u3002\u4e00\u79cd\u6f5c\u5728\u53d8\u91cf\u6a21\u578b\uff0c\u5b83\u4f7f\u7528\u7f16\u7801\u5668\u5c06\u89c2\u5bdf\u7ed3\u679c\u538b\u7f29\u4e3a\u6f5c\u5728\u53d8\u91cf\uff0c\u4f7f\u5176\u6210\u4e3a\u6613\u5904\u7406\u7684\u5206\u5e03\uff08\u901a\u5e38\u662f\u591a\u5143\u9ad8\u65af\u5206\u5e03\uff09\uff0c\u5e76\u901a\u8fc7\u53d8\u5206\u63a8\u7406\u8fdb\u884c\u62df\u5408\u3002\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u8fd9\u4e9b\u5206\u7c7b\u6cd5\u5e76\u672a\u660e\u786e\u8bf4\u660e\u5982\u4f55\u5c06\u884c\u4e3a\u548c\u5b9e\u9a8c\u6761\u4ef6\u96c6\u6210\u5230\u6bcf\u4e2a\u6a21\u578b\u4e2d\u3002\u8be5\u9886\u57df\u4e00\u4e9b\u6700\u6709\u8da3\u7684\u53d1\u5c55\u4e0e\u5c06\u884c\u4e3a\u663e\u5f0f\u5730\u6574\u5408\u5230\u964d\u7ef4\u4e2d\u6709\u5173\u3002\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u964d\u7ef4\u6a21\u578b\uff0c\u5b83\u96c6\u6210\u4e86\u884c\u4e3a\u4ee5\u53ca\u5bf9\u5e94\u4e8e\u5b9e\u9a8c\u6761\u4ef6\u7684\u5916\u90e8\u534f\u53d8\u91cf\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6709\u4e0e\u795e\u7ecf\u65f6\u95f4\u5e8f\u5217 x(t) \u5e73\u884c\u7684\u884c\u4e3a\u65f6\u95f4\u5e8f\u5217 u(t)\u3002\u4f8b\u5982\uff0cu(t) \u53ef\u4ee5\u7531\u5230\u8fbe\u4efb\u52a1\u4e2d\u624b\u81c2\u4f4d\u7f6e\u7684\u65f6\u95f4\u5e8f\u5217\u3001\u9f20\u6807\u9762\u90e8\u89c6\u9891\u7684 PC \u6216\u5b9e\u9a8c\u6761\u4ef6\u7ec4\u6210\u3002\u6620\u5c04\u51fd\u6570\u548c\u751f\u6210\u6a21\u578b\u73b0\u5728\u5bf9\u8fd9\u4e9b\u65f6\u95f4\u5e8f\u5217\u7684\u4e32\u8054\u8fdb\u884c\u64cd\u4f5c\u2014\u2014\u6f5c\u5728\u7a7a\u95f4 z(t) \u5728\u884c\u4e3a\u548c\u795e\u7ecf\u6570\u636e\u4e4b\u95f4\u5171\u4eab\u3002\u5728\u8fd9\u91cc\uff0c\u884c\u4e3a\u56de\u5f52\u5230\u5927\u8111\u6570\u636e\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u548c\u964d\u7ef4\u4e4b\u95f4\u7684\u533a\u522b\u662f\u6a21\u7cca\u7684\uff1a\u5b83\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u3002\u8fd9\u662f\u6211\u5728\u8003\u8651\u6574\u5408\u884c\u4e3a\u548c\u795e\u7ecf\u6570\u636e\u65f6\u4f7f\u7528\u7684\u5fc3\u7406\u6a21\u578b\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u6574\u5408\u884c\u4e3a\u548c\u795e\u7ecf\u6570\u636e\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4f46\u8868\u9762\u4e0a\u770b\u8d77\u6765\u4e0d\u540c\u3002 LDA\uff1a\u7ebf\u6027\u5224\u522b\u5206\u6790\u3002\u7ecf\u5178\u6280\u672f\u3002\u67e5\u627e\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u533a\u5206\u4e00\u7ec4\u7c7b\u7684\u4e00\u7ec4\u7ef4\u5ea6\u3002\u6ca1\u6709\u52a8\u6001\u3002\nCCA\uff1a\u5178\u578b\u76f8\u5173\u5206\u6790\u3002\u7ecf\u5178\u6280\u672f\u3002\u67e5\u627e\u4e24\u7ec4\u4e0d\u540c\u77e9\u9635\u4e4b\u95f4\u7684\u516c\u5171\u7ebf\u6027\u5b50\u7a7a\u95f4\u3002\u901a\u8fc7\u7ebf\u6027\u51fd\u6570\u8fdb\u884c\u63a8\u7406\u548c\u6620\u5c04\u3002\u65e0\u52a8\u529b\u5b66 Demixed component analysis\uff1a\u6839\u636e\u4e0d\u540c\u7ea7\u522b\u7684\u6761\u4ef6\u53ca\u5176\u76f8\u4e92\u4f5c\u7528\uff0c\u5bf9\u6570\u636e\u6267\u884c\u7c7b\u4f3c\u65b9\u5dee\u5206\u6790\u6216\u7c7b\u4f3c\u5f20\u91cf\u5206\u89e3\u7684\u5206\u89e3\u3002\u6ca1\u6709\u52a8\u6001\uff0c\u53ea\u6709\u5e73\u5747\u8bd5\u9a8c\u3002 LFADS\uff1a\u901a\u8fc7\u52a8\u6001\u7cfb\u7edf\u8fdb\u884c\u7684\u6f5c\u5728\u56e0\u7d20\u5206\u6790\u3002\u53ef\u4ee5\u5c06\u884c\u4e3a\u548c\u6761\u4ef6\u4fe1\u606f\u4f5c\u4e3a\u8f85\u52a9\u4fe1\u606f\u96c6\u6210\u5230\u6f5c\u5728\u7a7a\u95f4\u3002\u5355\u6b21\u8bd5\u9a8c\u3001RNN \u52a8\u529b\u5b66\u3001\u663e\u5f0f\u566a\u58f0\u6a21\u578b\u3001\u53d8\u5206\u63a8\u7406 (VAE)\u3002 PSID\uff1a\u4f18\u5148\u5b50\u7a7a\u95f4\u8bc6\u522b\u3002\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u542f\u53d1\u6a21\u578b\u5c06\u6f5c\u5728\u7a7a\u95f4\u660e\u786e\u5212\u5206\u4e3a\u4ec5\u884c\u4e3a\u3001\u4ec5\u795e\u7ecf\u548c\u795e\u7ecf\u548c\u884c\u4e3a\u5b50\u96c6\u3002\u5355\u6b21\u8bd5\u9a8c\u3001\u7ebf\u6027\u52a8\u529b\u5b66\u3001\u9ad8\u65af\u566a\u58f0\u6a21\u578b\u3001\u57fa\u4e8e\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u7684\u63a8\u7406\uff08\u52a8\u6001\u89c4\u5212\uff09\u3002 pi-VAE\uff1a\uff08\u5176\u4ed6\u8bc4\u8bba\u4e2d\u672a\u6db5\u76d6\uff0c\u4e8e 2020 \u5e74\u672b\u53d1\u5e03\uff09\u3002\u6cca\u677e\u53ef\u89e3\u91ca\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668\u3002\u5d4c\u5165\u6709\u5173\u6761\u4ef6\u548c\u884c\u4e3a\u7684\u6f5c\u5728\u4fe1\u606f\uff0c\u4f5c\u4e3a\u7c7b\u4f3c VAE \u7684\u5206\u5c42\u751f\u6210\u6a21\u578b\u7684\u4e00\u90e8\u5206\u3002\u53d7\u8fd1\u671f\u878d\u5408\u975e\u7ebf\u6027 ICA \u548c VAE \u5de5\u4f5c\u7684\u542f\u53d1\uff08Khemakhem \u7b49\u4eba\uff0c2019 \u5e74\uff09\uff0c\u4f7f\u7528\u7075\u6d3b\u7684\u5355\u5c04\u51fd\u6570\uff08GIN\uff0cRealNVP \u7684\u53d8\u4f53\uff09\u4f5c\u4e3a\u751f\u6210\u6a21\u578b\u6765\u89e3\u5f00\u6f5c\u5728\u539f\u56e0\uff08\u76f4\u81f3\u6392\u5217\uff09\u3002\u6ca1\u6709\u52a8\u6001\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u4ece\u4e0a\u4e00\u6bb5\u63a8\u65ad\u51fa\u7684\u90a3\u6837\uff0c\u6211\u5f88\u9ad8\u5174\u770b\u5230\u660e\u786e\u6574\u5408\u884c\u4e3a\u7684\u6a21\u578b\u53d6\u5f97\u4e86\u8fdb\u5c55\u3002\u964d\u7ef4\u7b97\u6cd5\u901a\u5e38\u5728\u5df2\u77e5\u7684\u4f4e\u7ef4\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b8c\u6574\u6027\u68c0\u67e5\u2014\u2014\u4f8b\u5982\u8303\u5fb7\u6ce2\u5c14\u632f\u8361\u5668\u3001\u6d1b\u4f26\u5179\u7cfb\u7edf\u3001\u5e73\u8861 EI \u7f51\u7edc\u3002\u7136\u800c\uff0c\u5f53\u5b83\u4eec\u5728\u91ce\u5916\u90e8\u7f72\u65f6\uff0c\u5bf9\u5b83\u4eec\u7684\u8bc4\u4f30\u901a\u5e38\u5f52\u7ed3\u4e3a\u5c06\u5b83\u4eec\u4e0e\u5df2\u77e5\u7684\u884c\u4e3a\u548c\u5b9e\u9a8c\u6761\u4ef6\u76f8\u5339\u914d\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u884c\u4e3a\u662f\u57fa\u672c\u4e8b\u5b9e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9519\u5931\u4e86\u4e0d\u660e\u786e\u6a21\u62df\u884c\u4e3a\u7684\u673a\u4f1a\u3002\u60a8\u53ef\u80fd\u4f1a\u95ee\u81ea\u5df1\uff1a\u96c6\u6210\u884c\u4e3a\u548c\u795e\u7ecf\u6570\u636e\u7684\u6f5c\u53d8\u91cf\u6a21\u578b\u4e0e\u7b80\u5355\u5730\u5bf9\u795e\u7ecf\u6570\u636e\u8fdb\u884c\u56de\u5f52\u884c\u4e3a\u6709\u4f55\u4e0d\u540c\uff1f\u4e00\u4e2a\u7b54\u6848\u662f\u5b58\u5728\u4e00\u4e2a\u5171\u4eab\u7684\u4f4e\u7ef4\u74f6\u9888\uff0c\u800c\u8fd9\u4e2a\u4f4e\u7ef4\u74f6\u9888\u7684\u7ed3\u6784\u53ef\u4ee5\u63ed\u793a\u4e00\u4e9b\u5173\u4e8e\u795e\u7ecf\u8ba1\u7b97\u548c\u884c\u4e3a\u7684\u6709\u8da3\u4e4b\u5904\u3002\u4f8b\u5982\u8003\u8651 Wiltschko \u7b49\u4eba\u3002 (2015)\uff0c\u4ed6\u4f7f\u7528\u81ea\u56de\u5f52\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b (AR-HMM) \u5bf9\u5c0f\u9f20\u7684\u81ea\u53d1\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21\uff1a\u5047\u8bbe\u5c0f\u9f20\u9075\u5faa\u7531\u79bb\u6563\u72b6\u6001\uff08\u4f8b\u5982\u6b65\u884c\u3001\u6682\u505c\u3001\u4f4e\u540e\u65b9\u7b49\uff09\u786e\u5b9a\u7684\u4e0d\u540c\u7ebf\u6027\u52a8\u529b\u5b66\u3002\u8fd9\u662f\u5207\u6362\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf (SLDS) \u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u4e5f\u7ecf\u5e38\u5e94\u7528\u4e8e\u795e\u7ecf\u6570\u636e\u3002\n\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\u76f8\u540c\u7684\u6a21\u578b\uff0c\u4f46\u8fd9\u6b21\u9002\u7528\u4e8e\u795e\u7ecf\u548c\u884c\u4e3a\u6570\u636e\u3002\u63a8\u65ad\u7684\u72b6\u6001\u4e0d\u4ec5\u4f1a\u63ed\u793a\u901a\u8fc7\u5934\u9876\u6444\u50cf\u5934\u53ef\u89c1\u7684\u884c\u4e3a\u72b6\u6001\uff0c\u8fd8\u4f1a\u63ed\u793a\u795e\u7ecf\u72b6\u6001\uff0c\u5982\u5524\u9192\u548c\u6ce8\u610f\u529b\u3002\u5b9e\u9645\u4e0a\uff0cPSID \u7684\u76ee\u6807\u662f\u5c06\u4f4e\u7ef4\u74f6\u9888\u5212\u5206\u4e3a\u4ec5\u884c\u4e3a\u7ef4\u5ea6\u3001\u4ec5\u795e\u7ecf\u7ef4\u5ea6\u548c\u884c\u4e3a\u4e0e\u795e\u7ecf\u7ef4\u5ea6\u3002\u7406\u60f3\u7684\u6a21\u578b\u4f1a\u5411 PSID \u4e2d\u5236\u5b9a\u7684\u57fa\u672c\u8ba1\u5212\u6dfb\u52a0\u66f4\u591a\u7684\u95f4\u63a5\u5c42\uff08\u4f8b\u5982\u79bb\u6563\u72b6\u6001\u3001\u884c\u4e3a\u548c\u795e\u7ecf\u7ec4\u4ef6\u7684\u4e0d\u540c\u975e\u7ebf\u6027\u8bbe\u5907\u3001\u5207\u6362\u52a8\u529b\u5b66\uff09\u3002\u5c06\u5176\u89c6\u4e3a\u5177\u6709\u52a8\u529b\u5b66\u7684\u53ef\u89e3\u91ca\u975e\u7ebf\u6027 CCA\uff08\u5178\u578b\u76f8\u5173\u5206\u6790\uff09\u3002\u6211\u4eec\u5e0c\u671b\u4ece\u8fd9\u4e9b\u6a21\u578b\u4e2d\u5f97\u5230\u4ec0\u4e48\uff1f\u8fc7\u53bb\u51e0\u5e74\u5c0f\u9f20\u89c6\u89c9\u4e2d\u6700\u4ee4\u4eba\u60ca\u8bb6\u7684\u53d1\u73b0\u4e4b\u4e00\u662f\u53d1\u73b0\u4e86\u89c6\u89c9\u76ae\u5c42\u9762\u90e8\u884c\u4e3a\u7684\u4f17\u591a\u7f16\u7801\u7ef4\u5ea6\uff08Stringer et al. (2019)\uff09\u3002\u8fd9\u4e00\u53d1\u73b0\u7684\u6838\u5fc3\u662f\u964d\u9636\u56de\u5f52\uff0c\u5b83\u53d1\u73b0\u9762\u90e8\u884c\u4e3a\u548c\u89c6\u89c9\u53cd\u5e94\u4e4b\u95f4\u5b58\u5728\u5927\u91cf\u5171\u4eab\u5dee\u5f02\uff08\u6392\u540d 16\uff01\uff09\u3002\u8fd9\u79cd\u7814\u7a76\u91cd\u65b0\u5b9a\u4e49\u4e86\u6211\u4eec\u5bf9\u795e\u7ecf\u6d3b\u52a8\u548c\u884c\u4e3a\u4e4b\u95f4\u5173\u7cfb\u7684\u7406\u89e3\uff0c\u6211\u9884\u8ba1\u968f\u7740\u5de5\u5177\u7684\u6210\u719f\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5f88\u591a\u8fd9\u6837\u7684\u7814\u7a76\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u7814\u7a76\u964d\u7ef4\u6280\u672f\u65f6\uff0c\u4ee4\u6211\u9707\u60ca\u7684\u662f\uff0c\u5927\u591a\u6570\u6280\u672f\u660e\u667a\u5730\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u51fd\u6570 f \u6765\u6620\u5c04\u6f5c\u5728\u53d8\u91cf z(t) \u5230 x(t)\u3002\u6211\u5bf9\u67d0\u4e9b\u65b9\u6cd5\u4f7f\u7528\u5f3a\u5927\u7684\u975e\u7ebf\u6027\u89e3\u7801\u51fd\u6570 f \u611f\u5230\u56f0\u60d1\u3002\u5982\u679c\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u6613\u4e8e\u89e3\u91ca\u7684\u6f5c\u5728\u5b50\u7a7a\u95f4\uff0c\u90a3\u4e48\u4ece\u6f5c\u5728\u5230\u6570\u636e\u7684\u7b80\u5355\u6620\u5c04\u2014\u2014\u7c7b\u4f3c\u4e8e\u53ef\u4fe1\u7684 LNP\uff08\u7ebf\u6027\u975e\u7ebf\u6027\u6cca\u677e\uff09\u6a21\u578b\u4e0d\u662f\u66f4\u597d\u5417\uff1f P-GPLVM \u8bba\u6587\uff08Anqi Wu \u7b49\u4eba\uff0c2017 \u5e74\uff09\u8ba9\u6211\u4fe1\u670d\u3002\u8981\u4f7f\u7528\u7ebf\u6027\u89e3\u7801\u51fd\u6570\u4ece\u6d77\u9a6c\u4f53\u7684\u7ebf\u6027\u8f68\u8ff9\u4e0a\u89e3\u7801\u52a8\u7269\u7684\u4f4d\u7f6e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u9ad8\u7ef4\u7684\u6f5c\u5728\u7a7a\u95f4\u3002\u5982\u679c\u60a8\u7684\u8f68\u9053\u957f 1 \u7c73\uff0c\u5e76\u4e14\u6bcf\u4e2a\u573a\u5730\u7684\u5bbd\u5ea6\u7ea6\u4e3a 20 \u5398\u7c73\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u9700\u8981 5 \u4e2a\u7ef4\u5ea6 (=100 \u5398\u7c73 / 20 \u5398\u7c73) \u6765\u8868\u793a\u6240\u6709\u573a\u5730\u3002\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u903b\u8f91\u7ef4\u5ea6\uff08\u8f68\u9053\u4e0a\u7684\u7ebf\u6027\u4f4d\u7f6e\uff09\uff01\u5728\u89e3\u7801\u4e2d\u6dfb\u52a0\u975e\u7ebf\u6027\uff08\u4ee5\u5e7f\u4e49\u52a0\u6027\u6a21\u578b\u7684\u98ce\u683c\uff09\u4fee\u590d\u4e86\u8fd9\u4e2a\u7f3a\u9677\u3002\u6211\u4eec\u8fd8\u770b\u5230\u4e86\u878d\u5408\u4fe1\u53f7\u5904\u7406\u7ba1\u9053\u548c\u964d\u7ef4\u7684\u52aa\u529b\u3002\u5df4\u8482\u7b49\u4eba\u3002 (2019) \u63d0\u51fa\u4e86\u4e00\u4e2a\u5206\u5c42\u6a21\u578b (BehaveNet) \u6765\u76f4\u63a5\u4ece\u9f20\u6807\u7684\u56fe\u50cf\u63a8\u65ad\u6f5c\u5728\u7684\u3002\u76f8\u5173\u5730\uff0cValPACa\uff08\u9499\u6210\u50cf\u6570\u636e\u5e76\u884c\u81ea\u52a8\u7f16\u7801\u7684\u53d8\u5206\u9636\u68af\uff09\u5e94\u7528 LFADS \u7684\u5206\u5c42\u53d8\u4f53\u76f4\u63a5\u4ece\u9499\u56fe\u50cf\u4e2d\u63d0\u53d6\u6f5c\u5728\u53d8\u91cf\u3002\u5c06\u4fe1\u53f7\u5904\u7406\u7ec4\u4ef6\u4e0e\u6f5c\u5728\u53d8\u91cf\u6a21\u578b\u878d\u5408\u901a\u5e38\u610f\u5473\u7740\u4f7f\u7528\u4e30\u5bcc\u7684\u975e\u7ebf\u6027\u89e3\u7801\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u66f4\u591a\u5177\u6709\u4e30\u5bcc\u89e3\u7801\u6a21\u578b\u7684\u8bba\u6587\uff0c\u65e0\u8bba\u5b83\u4eec\u662f GP\u3001RNN \u8fd8\u662f\u53ef\u9006\u795e\u7ecf\u7f51\u7edc\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u5728\u51e0\u4e2a\u6708\u524d\u5f00\u59cb\u7684\uff0c\u5f53\u65f6\u6211\u60f3\u62e5\u6709\u5de5\u5177\u6765\u7406\u89e3 Memming \u7684\u5206\u7c7b\u6cd5\u548c\u5f3a\u8c03\u7684\u65b9\u6cd5\u2014\u2014\u6240\u4ee5\u6211\u53c2\u52a0\u4e86\u6df1\u5ea6\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u8bfe\u7a0b\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u80cc\u666f\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u73b0\u4ee3\u65e0\u76d1\u7763\u5b66\u4e60\u4ee5\u51e0\u79cd\u53ef\u89c1\u7684\u65b9\u5f0f\u5f71\u54cd\u4e86\u795e\u7ecf\u79d1\u5b66\u4e2d\u7684\u964d\u7ef4\uff1a\u4f7f\u7528 RNN \u8868\u793a\u590d\u6742\u52a8\u6001\uff0c\u4ee5\u53ca\u4f7f\u7528 BBVI \u548c VAE \u6280\u672f\u8fdb\u884c\u63a8\u7406\u3002\u7136\u800c\uff0c\u5728\u65e0\u76d1\u7763\u5b66\u4e60\u65b9\u9762\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u8fdb\u6b65\uff08\u53c2\u89c1\u6df1\u5ea6\u65e0\u76d1\u7763\u5b66\u4e60\u8bfe\u7a0b\uff09\uff0c\u4f46\u5c1a\u672a\u5bf9\u795e\u7ecf\u79d1\u5b66\u7684\u964d\u7ef4\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\n\u81ea\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u5b66\u4e60\u826f\u597d\u7684\u4f4e\u7ef4\u8868\u793a\uff0c\u800c\u65e0\u9700\u660e\u786e\u5b66\u4e60\u751f\u6210\u6a21\u578b\uff0c\u4f8b\u5982\u4f7f\u7528\u5bf9\u6bd4\u6280\u672f\u3002\u5728 Apple \u7814\u7a76\u4eba\u5458\u7684\u8fd9\u7bc7\u8bba\u6587 (Cheng et al. 2020) \u4e2d\uff0c\u4ed6\u4eec\u4f7f\u7528\u5bf9\u6bd4\u7269\u955c\u627e\u5230\u4e86 EEG \u7684\u51fa\u8272\u8868\u793a\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u52a9\u4e8e\u627e\u5230\u6742\u4e71\u4fe1\u53f7\u7684\u826f\u597d\u4f4e\u7ef4\u8868\u793a\uff0c\u4f8b\u5982 ECoG \u548c\u5c40\u90e8\u573a\u7535\u4f4d\u3002\u5bf9\u6297\u6027\u7f51\u7edc\u662f\u53e6\u4e00\u4e2a\u5305\u542b\u8bb8\u591a\u5bcc\u6709\u6210\u679c\u7684\u60f3\u6cd5\u7684\u9886\u57df\u3002\u540c\u4e00\u7bc7\u8bba\u6587 (Cheng et al. 2020) \u4f7f\u7528\u5bf9\u6297\u6027\u8bc4\u8bba\u5bb6\u6765\u5f3a\u5236\u8868\u793a\u4ece\u4e3b\u9898\u8f6c\u79fb\u5230\u4e3b\u9898\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u6297\u6027\u65b9\u6cd5\u53ef\u7528\u4e8e\u5212\u5206\u6f5c\u5728\u7a7a\u95f4\u3002\u6700\u540e\uff0c\u6211\u5c06\u63d0\u5230\u89c4\u8303\u5316\u6d41\u6a21\u578b\u7684\u4f7f\u7528\u3002\u6807\u51c6\u5316\u6d41\u6a21\u578b\u975e\u5e38\u5de7\u5999\uff1a\u5b83\u4eec\u4f7f\u7528\u53ef\u9006\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u6f5c\u5728\u7a7a\u95f4\u3002\u5b66\u4e60\u975e\u5e38\u7b80\u5355\uff1a\u4f60\u76f4\u63a5\u6700\u5927\u5316\u6570\u636e\u7684\u53ef\u80fd\u6027\uff0c\u52a0\u4e0a\u5bf9\u795e\u7ecf\u7f51\u7edc\u96c5\u53ef\u6bd4\u7684\u6821\u6b63\u2014\u2014\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u53ea\u4f7f\u7528\u4f53\u79ef\u4fdd\u6301\u53d8\u6362\u6765\u6446\u8131\u96c5\u53ef\u6bd4\u3002\u5728\u6211\u770b\u6765\uff0c\u5b83\u4eec\u6bd4 VAE \u66f4\u4e0d\u6311\u5254\u3002\u5b83\u4eec\u975e\u5e38\u7075\u6d3b\uff0c\u6211\u5f88\u4e50\u610f\u770b\u5230\u5b83\u4eec\u88ab\u66f4\u591a\u5730\u4f7f\u7528\u2014\u2014\u636e\u6211\u6240\u77e5\uff0cpi-VAE \u662f\u7b2c\u4e00\u7bc7\u5728\u795e\u7ecf\u79d1\u5b66\u80cc\u666f\u4e0b\u4f7f\u7528\u6d41\u6a21\u578b\u7684\u8bba\u6587\uff08\u5c3d\u7ba1\u4ee5\u6709\u9650\u7684\u65b9\u5f0f\uff09\u3002\u6807\u51c6\u5316\u6d41\u6a21\u578b\u786e\u5b9e\u6709\u4e00\u4e9b\u9700\u8981\u9996\u5148\u89e3\u51b3\u7684\u91cd\u5927\u9650\u5236\uff08\u4e0d\u80fd\u76f4\u63a5\u6a21\u62df\u4e0d\u8fde\u7eed\u5206\u5e03\uff0c\u6f5c\u5728\u7a7a\u95f4\u4e0e\u89c2\u5bdf\u5927\u5c0f\u76f8\u540c\uff09\u3002\u54ea\u79cd\u65b9\u6cd5\u6700\u9002\u5408\u7528\u4e8e\u60a8\u7684\u6570\u636e\uff1f\u5f88\u96be\u8bf4\u3002\u5927\u591a\u6570\u8bba\u6587\u90fd\u662f\u56f4\u7ed5\u6df1\u5165\u4e86\u89e3\u7279\u5b9a\u6570\u636e\u96c6\u800c\u6784\u5efa\u7684\uff0c\u5e76\u4e14\u51e0\u4e4e\u6ca1\u6709\u7cfb\u7edf\u5730\u8bc4\u4f30\u54ea\u79cd\u65b9\u6cd5\u6700\u6709\u6548\u4ee5\u53ca\u4f55\u65f6\u6700\u6709\u6548\uff08\u66f4\u4e0d\u7528\u8bf4\u8fd0\u884c\u65f6\u95f4\u548c\u8ba1\u7b97\u9700\u8981\u8c03\u6574\u591a\u5c11\u4e2a\u65cb\u94ae\uff09\u3002 Chethan Pandarinath \u5728\u4eca\u5e74\u7684 CoSyNe \u4e0a\u516c\u5e03\u4e86 Neural Latents \u57fa\u51c6\u3002\u6211\u662f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u4e00\u65e6\u5b83\u53d1\u5e03\uff0c\u6211\u5c31\u4f1a\u5f88\u9ad8\u5174\u5730\u505a\u51fa\u8d21\u732e\u3002\u60a8\u5e94\u8be5\u5c1d\u8bd5\u4ec0\u4e48\u65b9\u6cd5\u6765\u5904\u7406\u60a8\u7684\u6570\u636e\uff1f\u4e0a\u9762\u5206\u7c7b\u4e2d\u5217\u51fa\u7684\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u4e0d\u662f\u5373\u63d2\u5373\u7528\u7684\u4e8b\u52a1\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5982\u679c\u60a8\u662f\u4e00\u540d\u5b9e\u9a8c\u8005\u5e76\u4e14\u60a8\u4e0d\u60f3\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u505a\u67d0\u4e8b\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u4ee5\u4e0b\u4e4b\u4e00\uff1a\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf (LDS) \u548c\u5bfc\u6570\uff0c\u5305\u62ec\u5207\u6362\u3001\u6cca\u677e\u3001\u5faa\u73af\u3001\u548c Linderman \u5b9e\u9a8c\u5ba4 ssm \u5305\u4e2d\u7684\u975e\u7ebf\u6027\u6620\u5c04\u53d8\u4f53\u3002\u4f18\u79c0\u7684\u6559\u7a0b\u3002 LFADS\uff0c\u5b83\u5728 Tensorflow\u3001PyTorch \u548c jax \u4e2d\u6709\u5b9e\u73b0\u3002\u53e6\u8bf7\u53c2\u9605 AutoLFADS\uff0c\u4e86\u89e3\u53ef\u4ee5\u5728\u4e91\u4e2d\u81ea\u52a8\u641c\u7d22\u8d85\u53c2\u6570\u7684\u53d8\u4f53\u3002\n\u8fd9\u662f\u6838\u5fc3\u95ee\u9898\u4e4b\u4e00\uff1a2018 \u5e74\u53ef\u80fd\u662f\u65b0\u6a21\u578b\u6700\u5927\u7684\u4e00\u5e74\uff08\u57fa\u4e8e\u6211\u770b\u8fc7\u7684\u5206\u7c7b\u6cd5\uff09\u3002\u8fd9\u4e5f\u662f\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u53d1\u751f\u5de8\u5927\u53d8\u5316\u7684\u4e00\u5e74\uff1aTheano \u5373\u5c06\u63a8\u51fa\uff0cTF2.0 \u5c1a\u672a\u63a8\u51fa\uff0cPyTorch \u53d1\u5c55\u8fc5\u901f\u3002\u8fd9\u91cc\u8ba8\u8bba\u7684\u8bb8\u591a\u65b9\u6cd5\u90fd\u5728 github \u5b58\u50a8\u5e93\u4e2d\uff0c\u661f\u6570\u4e0d\u5230\u5341\uff0c\u5e76\u4e14\u4ec5\u9002\u7528\u4e8e\u65e7\u7248\u672c\u7684 CUDA \u4e0a\u7684 TF\u3001PyTorch \u6216 Theano \u7684\u8fc7\u65f6\u7248\u672c\u3002\u8ba9\u5b83\u4eec\u8fd0\u884c\u53ef\u80fd\u610f\u5473\u7740\u5728 nvidia-docker \u5185\u90e8\u8fd0\u884c\u3002\u8fdb\u53e3\u53cd\u91cd\u529b\u8fd9\u4e0d\u662f\u3002\u8fd9\u662f\u4e00\u6761\u524d\u8fdb\u7684\u9053\u8def\uff1a\u5e94\u8be5\u4f7f\u7528 nvidia-docker\u3001\u6346\u5305\u7ebf\u548c\u53e3\u9999\u7cd6\u5bf9\u73b0\u6709\u65b9\u6cd5\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff08\u4e0a\u56fe\uff09\uff0c\u7136\u540e\u53ef\u4ee5\u9009\u62e9\u6700\u6709\u524d\u9014\u7684\u65b9\u6cd5\u6765\u4fdd\u5b58\u5728\u4e00\u4e2a\u6709\u636e\u53ef\u67e5\u7684\u5305\u88c5\u5185\u3002\u8be5\u5305\u53ef\u4ee5\u4f7f\u7528\u4e0e sklearn \u76f8\u540c\u7684\u7ea6\u5b9a\uff08Elephant \u6709\u4e00\u4e2a\u56f4\u7ed5\u6b64\u62bd\u8c61\u6784\u5efa\u7684 GPFA \u7684\u4f18\u96c5\u5b9e\u73b0\uff09\u3002\u5b83\u5e94\u8be5\u9009\u62e9\u4e00\u4e2a\u6846\u67b6\uff08\u53ef\u80fd\u662f PyTorch\uff09\u5e76\u627f\u8bfa\u4f7f\u7528\u6301\u7eed\u96c6\u6210\u7b49\u65b9\u6cd5\u6765\u7ef4\u62a4\u8fd9\u4e9b\u65b9\u6cd5\u3002\u6b64\u5916\uff0c\u5b83\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u4e91\u5e73\u53f0\u4f7f\u7528\uff0c\u4f8b\u5982\u901a\u8fc7 NeuroCAAS\u3002\u8fd9\u5c06\u5927\u5927\u589e\u52a0\u66f4\u590d\u6742\u7684\u5206\u6790\u65b9\u6cd5\u7684\u8303\u56f4\u3002", "note_en": "It\u2019s become commonplace to record from hundreds of neurons simultaneously.  If past trends extrapolate, we might commonly record 10k neurons by 2030. What are we going to do with all this data?\n To deal with a 14-dimensional space, visualize a 3D space and say  fourteen to yourself very loudly. Everyone does it. \u2014 Geoffrey Hinton\n Neural dynamics tend to be lower-dimensional than the number of neurons recorded would suggest \u2013  Humphries (2020) reports 10X to 100X compression depending on the area and task. Humphries suggests, with the strong principle of neural dimensionality reduction, that dimensionality reduction can show us the  true underlying signal embodied by the neural circuit. Even if we don\u2019t fully believe in this strong principle \u2013 it\u2019s certainly contentious among vision researchers \u2013 many subscribe to the weak principle: the smaller, temporally smoother, and less noisy subspace can be easier to understand than the raw data.\n   Here, I present taxonomies of unsupervised methods in neural data analysis, identify some exciting trends in the literature, and show some key gaps \u2013 a research roadmap for the next few years.\n  Why do we care about dimensionality reduction in neuroscience? Let\u2019s count the ways (roughly sorted by ambition, or from weak principle to strong principle):\n Compression: there are practical computational reasons to compress the data down to a few dozens of dimension rather than a few hundreds \u2013 i.e. to save memory and processing.\n Visualization: humans are not good at visualizing more than 2 or 3 dimensions. Compressing information down to a handful of meaningful dimensions makes it more feasible to plot them, and understand the factors of variations in the data visually.\n Denoising: if we want to understand what happens during single trials, we need to denoise the data. If 100 neurons are 100 independent manifestations of the same latent variable, we can boost the signal-to-noise ratio by a factor \u221a100 = 10 by averaging. Dimensionality reduction flexibly averages multiple overlapping realizations of the same data to achieve a boost in signal-to-noise ratio.\n Generate fake data: many dimensionality reduction methods are valid generative models, and we can use them generate fake neural data, for instance to benchmark spike sorting and calcium imaging signal processing pipelines.\n Relating to behaviour: the noisy, high-dimensional neural data is hard to relate to the behaviour of the animal, which is often what we care about in the end. Compressing the info into to a lower-dimensional subspace can make it easier to relate to the behaviour.\n Understanding computation: the latent space may represent interesting aspects of the neural computation invisible in the raw data, for example, line attractor or rotational dynamics. The dimensionality-reduced latent space can help uncover those hidden computations.\n Untangling latent factors: perhaps most ambitiously, we want to identify latent factors which  cause the variation in the data. Most dimensionality reduction methods don\u2019t directly capture causal mechanisms \u2013 meaning that each logical dimension may capture several causal mechanisms. But some dimensionality reduction methods  aspire to untangle independent causes \u2013 with linear ICA (independent component analysis) perhaps being the most well known example. Standard disclaimer: causal inference is hard. Be skeptical of causal claims. This is an active area of research.\n  Given these diverse analysis objectives, we can compile a canonical model which covers a wide range of dimensionality reduction techniques.\n   Conceptually, we have a generative model which maps latent factors  z(t) to neural observations  x(t) via a mapping function  f and a noise model. The latent factors evolve according to their dynamics  D. A central goal of the dimensionality reduction technique is learn an inference function  \u03c6 which maps neural observations  x(t) to latent factors  z(t). This inference function could be as simple as matrix multiplication or as complex as an implicit function implemented by a multi-step optimization procedure.\n To place some stakes in the ground, let\u2019s see how these different components interact in some popular models that you might have heard of:\n PCA: In Principal Component Analysis (PCA), the mapping function  f is an instantaneous linear function and the noise is Gaussian (in the probabilistic extension of PCA). The dynamics are not explicitly modeled. The inference function is the matrix inverse of the mapping function\n ICA: In Independent Component Analysis (ICA), the class of mapping functions is the same as in PCA, but during learning, the mapping function  \u03c6 is constrained that the latent space  z(t) is factorized into independent sources.\n GPFA: In Gaussian Process Factor Analysis (GPFA), the mapping function is again a linear function followed by Gaussian noise, but now the dynamics are explicitly modeled using a independent Gaussian Process (GP) prior. You can think of this as imposing that the latent variables vary smoothly over time. The inference is done through closed form GP inference with Expectation Maximization to learn the hyperparameters\n LFADS: In Latent Factor Analysis via Dynamical Systems (LFADS), the dynamics are given by an RNN, while the mapping function is linear and the noise can be Gaussian or Poisson. The RNN implicity imposes smooth dynamics. Inference is done via variational inference in a variational autoencoder (VAE) framework.\n Perhaps the most important moving piece is the dynamics. To infer the latent structure of neural activity at a single trial level, with currently existing recording technology, there just isn\u2019t enough neurons and SNR to infer latents at a single-trial level: we have to flexibly smooth through time. Complex dynamics priors require sophisticated, probabilistic methods for inference \u2013 each with their tradeoffs in terms of speed, simplicity of implementation, and generality \u2013 which is why we\u2019ve seen an explosion of methods in the last 5 years.\n  Now that we\u2019ve seen some examples of dimensionality reduction methods in the wild, let\u2019s look at some published taxonomies that try to bring some order into the chaos. I\u2019ve annotated these taxonomies with the components of the canonical model (in red) above for reference. An early taxonomy is in the now classic review  Cunningham and Yu (2014):\n  We see the diversity of goals represented in this early work. Much of the research in the following years has been focused on building sophisticated new methods of inference that assume explicit generative and dynamics models. Dynamics allow models to integrate information over time, which makes it possible to do single-trial inference. John Cunningham presented a new taxonomy of these models in a talk circa 2018:\n  Apologies for the low quality, it was extracted from a photo of the key slide\n This updated table is a bit hard to parse, but I find it gives a lot of historical context and genealogy: we see early work on tractable models in the left column (hidden Markov models, linear dynamical systems, switching LDS) evolved into more sophisticated models in the middle and right columns.\n With sophisticated models comes sophisticated inference techniques;  Memming Park provided an excellent summary in a 2020 CoSyNe talk:\n  Many of these methods were compiled very recently into yet another taxonomy from  Hurwitz el al. (2021), synthesizing some of the earlier work in this space with cutting-edge methods.\n  The acronyms are a bit non-descript, but you can often guess what each method is about by looking at groups of letters within the acronyms:\n GP: Gaussian Process. Gaussian processes are often used to impose temporal smoothness on latent variables, and more rarely to model nonlinear tuning curves.\n LDS: Linear dynamical system. The Kalman filter is an example of a model with an underlying linear dynamical system.\n SLDS: Switching LDS. A model which can switch between 2 or more latent linear dynamics depending on a discrete variable.\n P*: Poisson. A starting P in an acronym often refers to a Poisson noise model.\n VAE: Variational auto-encoder. A latent variable model which compresses observations to latents using an encoder down to a tractable distribution (frequently a multivariate Gaussian) and which is fit through variational inference.\n  You\u2019ll notice that these taxonomies don\u2019t explicitly address how behaviour and experimental conditions are integrated into each model. Some of the most interesting developments in this field relate to explicitly integrating behaviour into dimensionality reduction.\n  Let\u2019s consider a more general version of the dimensionality reduction model, which integrates behaviour, as well as external covariates corresponding to experimental conditions. Here, we have behaviour time series  u(t) which are parallel to neural time series  x(t).  u(t) could consist of time series of arm position in a reaching task, PCs of a video of a mouse\u2019s face, or experimental conditions, for example. The mapping functions and generative models now operate on the concatenation of these times series \u2013 the latent space  z(t) is shared between behaviour and neural data. Here, the distinction between regression of behaviour onto brain data (or vice versa) and dimensionality reduction is blurred: it\u2019s something in the middle. This is the mental model I\u2019m using when considering the integration of behaviour and neural data, but be aware that there are a lot of different ways of integrating behaviour and neural data that look superficially different.\n  LDA: Linear discriminant analysis. Classic technique. Finds a set of dimensions which can maximally discriminate a set of classes. No dynamics.\n CCA: Canonical correlation analysis. Classic technique. Finds a common linear subspace between two different sets of matrices. Inference and mapping both down through linear functions. No dynamics\n Demixed component analysis: Performs an ANOVA-like or tensor-factorization-like decomposition of the data in terms of different levels of conditions and their interactions. No dynamics, averaged trials only.\n  LFADS: Latent factor analysis via dynamical systems. Can integrate behavioural and condition information as side information to the latent space. Single-trial, RNN dynamics, explicit noise model, variational inference (VAE).\n PSID: Preferential subspace identification. Kalman-filter-inspired model which explicitly partitions the latent space into behaviour-only, neural-only, and neural-and-behaviour subsets. Single trial, linear dynamics, gaussian noise model, Kalman-filter-based inference (dynamic programming).\n  pi-VAE: (not covered in other reviews, published late 2020). Poisson interpretable variational auto-encoder. Embeds the latent information about conditions and behaviour as part of a VAE-like hierarchical generative model. Inspired by recent work fusing nonlinear ICA and VAEs ( Khemakhem et al. 2019), uses flexible injective functions (GIN, a variant of RealNVP) as generative models to untangle latent causes (up to permutations). No dynamics.\n    As you might have infered from the previous paragraph, I\u2019m excited to see the progress in models which explicitly integrate behaviour. Dimensionality reduction algorithms are often sanity-checked on known low-dimensional systems \u2013 e.g. the Van der Pol oscillator, the Lorenz system, balanced E-I networks. When they\u2019re deployed in the wild, however, evaluating them often boils down to matching them to known behaviour and experimental conditions. In essence, the behaviour  is the ground truth. In this context, it is a missed opportunity to not explicitly model behaviour.\n You may be asking yourself: how does a latent variable model which integrates behaviour and neural data any different than simply regressing behaviour against neural data? One answer is that there\u2019s a shared low-dimensional bottleneck, and the structure of that low-dimensional bottleneck can reveal something interesting about neural computations and behaviours. Consider for instance  Wiltschko et al. (2015), who modeled the spontaneous behaviour of mice with an autoregressive hidden Markov model (AR-HMM): the mouse is assumed to follow different linear dynamics determined by a discrete state (e.g. walk, pause, low rear, etc.). This is an example of a  switching linear dynamical system (SLDS), which has also been frequently applied to neural data.\n  Now imagine the same model, but this time applied to both neural and behavioural data. The inferred states would not only reveal behavioural states which are visible through an overhead camera, but also neural states like arousal and attention. In fact, the goal of PSID is to partition the low-dimensional bottleneck into behaviour-only, neural-only, and behaviour-and-neural dimensions. An ideal model would add a few more layers of indirection (e.g. discrete states, different nonlinear  plants for the behavioural and neural components, switching dynamics) to the basic plan formulated in PSID. Think of it as interpretable nonlinear CCA (canonical correlation analysis) with dynamics.\n What can we hope to get out of such models? One of the most surprising findings in mouse vision in the past few years is the discovery of numerous coding dimensions for facial behaviour in visual cortex ( Stringer et al. (2019)). At the heart of this finding is a reduced rank regression which finds a large amount of shared variance between face behaviour and visual responses (rank 16!). This is the kind of research that redefines our understanding of the relationship between neural activity and behaviour, and I expect we\u2019ll see a lot of this as tools mature.\n   When I was first looking into dimensionality reduction techniques, it struck me that most techniques sensibly used simple, linear functions  f to map from latent variables  z(t) to  x(t). I was confused by some methods\u2019 use of powerful, nonlinear decoding functions  f. If the goal is to find a latent subspace which is easy to interpret, wouldn\u2019t it be better to have a simple mapping from latents to data \u2013 something similar to the trusted LNP (linear-nonlinear-Poisson) model?\n The  P-GPLVM paper (Anqi Wu et al. 2017) convinced me otherwise. To decode an animal\u2019s position on a linear track from the hippocampus with a linear decoding function, you would need a high-dimensional latent space. If your track is one meter long, and each place field is about 20 cm wide, then you\u2019d need perhaps 5 dimensions (=100 cm / 20 cm) to represent all the place fields. But there\u2019s only one logical dimension (the linear position on the track)! Adding nonlinearities in the decoding (in the style of generalized additive models) fixes this deficiency.\n  We\u2019re also seeing efforts to fuse signal processing pipelines and dimensionality reduction. Batty et al. (2019) present a hierarchical model ( BehaveNet) to infer latents directly from images of a mouse. Relatedly,  VaLPACa (variational ladders for parallel auto-encoding of calcium imaging data) applies a hierarchical variant of LFADS to directly extract latent variables from calcium images. Fusing the signal processing component with the latent variable model often means using a rich nonlinear decoding model.\n  Thus, we\u2019re likely to see more papers with rich decoding models, whether they be GP, RNNs, or invertible neural networks.\n  This article started a few months ago when I wanted to have the tools to understand Memming\u2019s taxonomy and the methods highlighted \u2013 so I took a course on  deep unsupervised learning to have the right background. It turns out that modern unsupervised learning has influenced dimensionality reduction in neuroscience in several visible ways: using RNNs to represent complex dynamics, and inference using BBVI and VAE techniques. However, there are a lot of other advances in unsupervised learning (see curriculum for the deep unsupervised learning course) which have not yet made a big dent in dimensionality reduction in neuroscience .\n Self-supervised learning can learn good, low-dimensional representations without explicitly learning a generative model, for instance using contrastive techniques.  In this paper from researchers at Apple (Cheng et al. 2020), they find excellent representations for EEG using a contrastive objective. This kind of approach is helpful to find good low-dimensional representations of messy signals, including, for instance, ECoG and local field potentials.\n  Adversarial networks is another area which contains many fruitful ideas. The same paper (Cheng et al. 2020) uses an adversarial critic to enforce that the representation  transfers from subject to subject. Indeed, adversarial methods can be used to partition the latent space.\n Finally, I\u2019ll mention the use of normalizing flow models. Normalizing flow models are pretty slick: they learn a latent space using an invertible neural network. Learning is dead simple: you directly maximize the likelihood of the data, plus a correction for the Jacobian of the neural net \u2013 in some cases, you can even  get rid of the Jacobian by using only volume-preserving transforms. They\u2019re a lot less finicky to make work than VAEs, in my humble opinion. They\u2019re surprisingly flexible and I\u2019d love to see them used more \u2013 to the best of my knowledge, pi-VAE is the first paper to use flow models in the context of neuroscience (albeit in a limited fashion). Normalizing flow models do have some significant limitations that will need to be worked around first (cannot directly model discontinuous distributions, latent space the same size as the observations).\n   What method is  best to use on your data? It\u2019s hard to tell. Most papers are built around gaining insight into a specific dataset, and there has been little systematic appraisal of which methods work best and when (not to mention runtime and counting how many knobs need to be tweaked). Chethan Pandarinath unveiled the  Neural Latents benchmark at this year\u2019s CoSyNe. I\u2019m a big fan of this idea and will happily contribute as soon as it\u2019s released.\n  What method should you try on your data? Most of the methods listed in the taxonomies above are not plug-and-play affairs. In practice, if you\u2019re an experimentalist and you don\u2019t want to waste a ton of time getting something to work, you\u2019ll pick from one of:\n Linear dynamical systems (LDS) and derivatives, including switching, Poisson, recurrent, and nonlinear mapping variants in the ssm package from the Linderman lab.  Excellent tutorials.\n LFADS, which has implementations in  Tensorflow,  PyTorch and  jax. See also  AutoLFADS for a variant that can automatically search through hyperparameters in the cloud.\n Here\u2019s one of the core problems: 2018 was perhaps the biggest year for new models (based on the taxonomies I\u2019ve looked at). It\u2019s also a year of huge change in machine learning pipelines: Theano was on its way out, TF2.0 wasn\u2019t out yet, and PyTorch was evolving rapidly. Many of the methods discussed here are in github repos with less than ten stars, and only work on obsolete versions of TF, PyTorch or Theano, on old versions of CUDA. Getting them to run will likely mean running inside of nvidia-docker.  import antigravity this is not.\n Here\u2019s a path forward: benchmarking (above) should be done with existing methods using nvidia-docker, bale wire and chewing gum, and the most promising methods can then be selected for preservation inside of a well-documented package. That package could use the same conventions as sklearn (Elephant has an elegant implementation of GPFA built around this abstraction). It should pick one framework (probably PyTorch) and commit to maintaining the methods using, e.g. continuous integration. Furthermore, it should be available through a cloud platform, for instance through  NeuroCAAS. This would vastly increase the reach of more sophisticated analysis methods.", "posttime": "2021-07-29 21:54:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf,reduction,\u6a21\u578b", "title": "\u795e\u7ecf\u6570\u636e\u5206\u6790\u4e2d\u7684\u964d\u7ef4", "title_en": "Dimensionality reduction in neural data analysis", "transed": 1, "url": "https://xcorr.net/2021/07/26/dimensionality-reduction-in-neural-data-analysis/", "via": "", "real_tags": ["\u795e\u7ecf", "reduction", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "b3f7225cfab76c2e2f8d8656d1331243.jpg", "infoid": 1070255, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6089\u5c3c\uff0c7 \u6708 29 \u65e5\uff08\u8def\u900f\u793e\uff09\u2014\u2014\u5728\u8fd9\u4e2a\u62e5\u6709 600 \u4e07\u4eba\u53e3\u7684\u57ce\u5e02\u5468\u56db\u516c\u5e03\u7684 COVID-19 \u75c5\u4f8b\u6bcf\u65e5\u589e\u52a0\u521b\u7eaa\u5f55\u4e14\u5dde\u5f53\u5c40\u8868\u793a\u75ab\u60c5\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u7cdf\u4e4b\u540e\uff0c\u6fb3\u5927\u5229\u4e9a\u519b\u65b9\u5c06\u5e2e\u52a9\u5728\u6089\u5c3c\u5b9e\u65bd\u5c01\u9501\u3002\u6fb3\u5927\u5229\u4e9a\u6700\u5927\u57ce\u5e02\u7684\u5c01\u9501\u589e\u52a0\u4e86\u603b\u7406\u65af\u79d1\u7279\u83ab\u91cc\u68ee\u7684\u538b\u529b\uff0c\u4ed6\u73b0\u5728\u5728\u6c11\u610f\u8c03\u67e5\u4e2d\u843d\u540e\uff0c\u5e76\u52a0\u5267\u4e86\u5bf9\u6fb3\u5927\u5229\u4e9a 2 \u4e07\u4ebf\u6fb3\u5143\uff081.5 \u4e07\u4ebf\u7f8e\u5143\uff09\u7ecf\u6d4e\u53ef\u80fd\u9677\u5165\u8870\u9000\u7684\u62c5\u5fe7\u3002\u5c3d\u7ba1\u81ea\u9ad8\u4f20\u67d3\u6027\u4e09\u89d2\u6d32\u75c5\u6bd2\u7206\u53d1\u4ee5\u6765\u6089\u5c3c\u5ef6\u957f\u4e86\u5c01\u9501\u65f6\u95f4\uff0c\u4f46\u8be5\u5e02\u5728 24 \u5c0f\u65f6\u5185\u8bb0\u5f55\u4e86 239 \u4f8b\u65b0\u7684\u672c\u5730\u611f\u67d3\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\uff0c\u8fd9\u662f\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\u7684\u6700\u5927\u5355\u65e5\u589e\u5e45\u3002\u65b0\u5357\u5a01\u5c14\u58eb\u5dde\u5dde\u957f\u683c\u62c9\u8fea\u65af\u00b7\u8d1d\u96f7\u5409\u514b\u5229\u5b89 (Gladys Berejiklian) \u8bf4\uff1a\u201c\u9274\u4e8e\u793e\u533a\u4e2d\u5177\u6709\u4f20\u67d3\u6027\u7684\u4eba\u6570\uff0c\u6211\u4eec\u53ea\u80fd\u5047\u8bbe\u60c5\u51b5\u5728\u597d\u8f6c\u4e4b\u524d\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\u201d\u6089\u5c3c\u662f\u8be5\u5dde\u7684\u9996\u5e9c\u3002 Berejiklian \u8bf4\uff0c\u6700\u8fd1\u4e00\u6b21\u75ab\u60c5\u9020\u6210\u7684\u6b7b\u4ea1\u4eba\u6570\u589e\u52a0\u5230 13 \u4eba\uff0c\u5168\u56fd\u5171\u6709 921 \u4eba\u3002 Berejiklian \u8868\u793a\uff0c\u51e0\u4e4e\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u9650\u5236\u51cf\u5c11\u611f\u67d3\u7684\u8ff9\u8c61\uff0c\u4f46\u5c06\u5728\u6089\u5c3c\u7684\u897f\u5357\u90e8\u548c\u897f\u90e8\u5730\u533a\u5b9e\u65bd\u65b0\u7684\u9650\u5236\u63aa\u65bd\uff0c\u90a3\u91cc\u7684\u5927\u591a\u6570\u4eba\u6b63\u5728\u53d1\u73b0 COVID-19 \u75c5\u4f8b\u3002\u90a3\u91cc\u7684\u5c45\u6c11\u5c06\u88ab\u8feb\u5728\u6237\u5916\u6234\u53e3\u7f69\uff0c\u5e76\u5f85\u5728\u79bb\u5bb6\u4e94\u516c\u91cc\uff08\u4e09\u82f1\u91cc\uff09\u4ee5\u5185\u3002\n\u968f\u7740\u5468\u4e94\u5f00\u59cb\u5b9e\u65bd\u66f4\u4e25\u683c\u7684\u9650\u5236\uff0c\u65b0\u5357\u5a01\u5c14\u58eb\u5dde\u8b66\u65b9\u8868\u793a\u5df2\u8981\u6c42 300 \u540d\u519b\u4e8b\u4eba\u5458\u5e2e\u52a9\u6267\u884c\u5c01\u9501\u4ee4\u3002\u56fd\u9632\u90e8\u957f\u5f7c\u5f97\u00b7\u8fbe\u987f\u8bf4\uff0c\u8fd9\u4e9b\u4eba\u5458\u5c06\u4e8e\u5468\u4e94\u90e8\u7f72\uff0c\u5e76\u5c06\u5728\u4e0b\u5468\u5f00\u59cb\u534f\u52a9\u8b66\u65b9\u786e\u4fdd\u9075\u5b88\u9650\u5236\u3002\u65b0\u5357\u5a01\u5c14\u58eb\u5dde\u5360\u6fb3\u5927\u5229\u4e9a\u7ecf\u6d4e\u7684\u4e09\u5206\u4e4b\u4e00\u4ee5\u4e0a\u3002\u8054\u90a6\u8d22\u957f\u4e54\u4ec0\u00b7\u5f17\u83b1\u767b\u4f2f\u683c (Josh Frydenberg) \u8868\u793a\uff0c\u4ed6\u9884\u8ba1\u56fd\u6c11\u7ecf\u6d4e\u5c06\u5728 9 \u6708\u5b63\u5ea6\u840e\u7f29\uff0c\u4f46\u80fd\u5426\u907f\u514d\u6280\u672f\u6027\u8870\u9000\u5c06\u53d6\u51b3\u4e8e\u65b0\u5357\u5a01\u5c14\u58eb\u5dde\u80fd\u5426\u907f\u514d\u66f4\u957f\u65f6\u95f4\u7684\u5c01\u9501\u3002 \u201c\u5c31 12 \u6708\u5b63\u5ea6\u800c\u8a00\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u6211\u4eec\u6700\u5927\u7684\u5dde\u7ecf\u6d4e\u4f53\u65b0\u5357\u5a01\u5c14\u58eb\u5dde\u5728\u6218\u80dc\u8fd9\u79cd\u75c5\u6bd2\u65b9\u9762\u7684\u6210\u529f\u7a0b\u5ea6\uff0c\u201d\u5f17\u83b1\u767b\u4f2f\u683c\u544a\u8bc9\u6fb3\u5927\u5229\u4e9a\u5e7f\u64ad\u516c\u53f8\u3002 Berejiklian \u8868\u793a\u9700\u8981\u4fdd\u6301\u9650\u5236\u5728\u8f89\u745e (PFE.N)/BioNTech (22UAy.DE) \u75ab\u82d7\u4f9b\u5e94\u7d27\u5f20\u7684\u60c5\u51b5\u4e0b\uff0c\u6089\u5c3c\u7684\u75ab\u82d7\u63a5\u79cd\u4eba\u6570\u592a\u5c11\uff0c\u6fb3\u5927\u5229\u4e9a\u66fe\u5e0c\u671b\u4e3a 60 \u5c81\u4ee5\u4e0b\u7684\u6240\u6709\u4eba\u63a5\u79cd\u75ab\u82d7\u3002\u5df2\u6566\u4fc3\u6089\u5c3c\u7684\u6240\u6709\u6210\u5e74\u4eba\u5bfb\u6c42\u963f\u65af\u5229\u5eb7 (AZN.L) \u75ab\u82d7\u3002\u6709\u4e9b\u4eba\u4ee5\u7f55\u89c1\u7684\u8840\u51dd\u5757\u4e3a\u7531\u8868\u793a\u4e0d\u60c5\u613f\uff0c\u5b81\u613f\u7b49\u5f85\u51e0\u4e2a\u6708\uff0c\u56e0\u4e3a\u9884\u8ba1\u6fb3\u5927\u5229\u4e9a\u5c06\u6536\u5230\u989d\u5916\u7684\u8f89\u745e\u4f9b\u5e94\u3002 Renju Jose \u548c Colin Packham \u5728\u582a\u57f9\u62c9\u62a5\u9053\uff1b Xihao Jiang \u5728\u4e1c\u4eac\u7684\u8865\u5145\u62a5\u9053\uff1b Michael Perry\u3001Lincoln Feast \u548c Timothy Heritage \u7f16\u8f91", "note_en": "SYDNEY, July 29 (Reuters) - Australia&#39;s military will help enforce a lockdown in Sydney after the city of 6 million posted a record daily rise in COVID-19 cases on Thursday and state authorities said the outbreak was likely to get worse.\n The lockdown of Australia&#39;s biggest city has increased pressure on Prime Minister Scott Morrison, who is now trailing in opinion polls, and heightened concern that Australia&#39;s A$2 trillion ($1.5 trillion) economy could slide into recession.\n Despite an extended lockdown in Sydney since an outbreak of the highly infectious Delta variant, 239 new locally acquired coronavirus cases were recorded in the city over a 24-hour period, the biggest daily rise since the pandemic began.\n &#34;We can only assume that things are likely to get worse before they get better given the quantity of people infectious in the community,&#34; said Gladys Berejiklian, the premier of New South Wales state, of which Sydney is the capital.\n Berejiklian said one new death took the toll from the latest outbreak to 13 and the national total was now 921.\n With little sign that of restrictions reducing infections, Berejiklian said new curbs would be imposed on the southwestern and western areas of Sydney where the majority of COVID-19 cases are being found.\n Residents there will be forced to wear masks outdoors and to stay within five km (three miles) of their homes.\n With even tighter restrictions set to begin on Friday, New South Wales Police said it had asked for 300 military personnel to help enforce lockdown orders.\n The personnel will deploy on Friday, Defence Minister Peter Dutton said, and will begin assisting police with ensuring compliance with restrictions next week.\n   New South Wales accounts for over a third of Australia&#39;s economy. Federal Treasurer Josh Frydenberg said he expected the national economy to shrink in the September quarter but the ability to avoid a technical recession would depend on whether New South Wales can avoid a longer lockdown.\n &#34;With respect to the December quarter, that does depend to a large extent how successful New South Wales, our largest state economy, is in getting on top of this virus,&#34; Frydenberg told the Australian Broadcasting Corp.\n Berejiklian has said restrictions need to remain as too few people in Sydney are vaccinated amid tight supplies of the Pfizer  (PFE.N)/BioNTech  (22UAy.DE) vaccine, with which Australia had hoped to inoculate everyone under 60 years old.\n All adults in Sydney have been urged to seek an AstraZeneca  (AZN.L) vaccine. Some, citing rare blood clots, are reluctant and would prefer to wait several months when Australia is expected to receive additional Pfizer supplies.\n  Reporting by Renju Jose and Colin Packham in Canberra; additonal reporting by Xihao Jiang in Tokyo; Editing by Michael Perry, Lincoln Feast and Timothy Heritage", "posttime": "2021-07-29 21:54:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u589e\u52a0,cases,\u5c01\u9501", "title": "\u968f\u7740\u75c5\u4f8b\u7684\u589e\u52a0\uff0c\u6fb3\u5927\u5229\u4e9a\u519b\u65b9\u5c06\u5e2e\u52a9\u5b9e\u65bd\u6089\u5c3c Covid-19 \u5c01\u9501", "title_en": "Australian military to help enforce Sydney Covid-19 lockdown as cases rise", "transed": 1, "url": "https://www.reuters.com/world/asia-pacific/australia-pm-says-vaccinations-alone-will-not-end-sydneys-covid-19-lockdown-2021-07-28/", "via": "", "real_tags": ["\u589e\u52a0", "cases", "\u5c01\u9501"]}, {"category": "", "categoryclass": "", "imagename": "9cb9f643bc8ff3130ff65873e26dc252.jpg", "infoid": 1070254, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5e74\u6765\uff0c\u8ba1\u7b97\u673a\u8bc1\u660e\u52a9\u624b\u4e00\u76f4\u662f\u6570\u5b66\u4e2d\u4e00\u4e2a\u6709\u8da3\u7684\u5b50\u60c5\u8282\u2014\u2014\u627f\u8bfa\u5c06\u6570\u5b66\u5bb6\u5de5\u4f5c\u65b9\u5f0f\u7684\u6838\u5fc3\u65b9\u9762\u81ea\u52a8\u5316\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u5bf9\u8be5\u9886\u57df\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u3002\u4f46 6 \u6708\u521d\u5b8c\u6210\u7684\u4e00\u4e2a\u65b0\u7ed3\u679c\uff0c\u6709\u79cd\u83dc\u9e1f\u5728\u5927\u8054\u76df\u4e2d\u9996\u521b\u7684\u611f\u89c9\uff1a\u7ec8\u4e8e\uff0c\u4e00\u4f4d\u8bc1\u660e\u52a9\u624b\u901a\u8fc7\u9a8c\u8bc1\u590d\u6742\u7684\u73b0\u4ee3\u6570\u5b66\u7684\u6b63\u786e\u6027\uff0c\u4e3a\u6570\u5b66\u7814\u7a76\u7684\u524d\u6cbf\u505a\u51fa\u4e86\u771f\u6b63\u7684\u8d21\u732e\u3002\u8bc1\u660e\u3002 \u201c\u8fd9\u8868\u660e\u73b0\u4ee3\u6570\u5b66\u53ef\u4ee5\u5728\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u5f62\u5f0f\u5316\uff0c\u201d\u5251\u6865\u5927\u5b66\u7814\u7a76\u751f Bhavik Mehta \u8bf4\uff0c\u4ed6\u4e3a\u8fd9\u9879\u5de5\u4f5c\u505a\u51fa\u4e86\u8d21\u732e\u3002\u6709\u95ee\u9898\u7684\u8bc1\u660e\u662f\u7531\u6ce2\u6069\u5927\u5b66\u7684 Peter Scholze \u63d0\u51fa\u7684\uff0c\u4ed6\u662f\u4e16\u754c\u4e0a\u6700\u53d7\u5c0a\u656c\u7684\u6570\u5b66\u5bb6\u4e4b\u4e00\u3002\u8fd9\u53ea\u662f\u4ed6\u548c\u54e5\u672c\u54c8\u6839\u5927\u5b66\u7684\u8fbe\u65af\u6c40\u00b7\u514b\u52b3\u68ee (Dustin Clausen) \u591a\u5e74\u6765\u4e00\u76f4\u81f4\u529b\u4e8e\u7684\u540d\u4e3a\u201c\u6d53\u7f29\u6570\u5b66\u201d\u7684\u66f4\u5927\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u62d3\u6251\u521b\u5efa\u65b0\u7684\u57fa\u7840\uff0c\u7528\u4f5c\u8005\u79f0\u4e4b\u4e3a\u51dd\u805a\u96c6\u7684\u66f4\u901a\u7528\u7684\u5bf9\u8c61\u53d6\u4ee3\u62d3\u6251\u7a7a\u95f4\u7684\u4f20\u7edf\u6982\u5ff5\u2014\u2014\u5176\u4f8b\u5b50\u5305\u62ec\u7403\u4f53\u548c\u751c\u751c\u5708\u3002\u5728\u8fd9\u4e2a\u65b0\u89c6\u89d2\u4e2d\uff0c\u62d3\u6251\u7a7a\u95f4\u88ab\u8ba4\u4e3a\u662f\u7531\u65e0\u6570\u7c98\u5728\u4e00\u8d77\u7684\u5c18\u57c3\u70b9\u7ec4\u88c5\u800c\u6210\u7684\u3002\u8be5\u9879\u76ee\u5305\u62ec\u4e00\u4e2a\u7279\u522b\u91cd\u8981\u4e14\u56f0\u96be\u7684\u8bc1\u660e\uff0c\u8bc1\u660e Scholze \u5728 2019 \u5e74 7 \u6708\u7684\u4e00\u4e2a\u6d88\u8017\u5468\u4e2d\u81ea\u5df1\u8ba1\u7b97\u51fa\u6765\u3002\u5b83\u8868\u660e\uff0c\u5982\u679c\u7528\u538b\u7f29\u96c6\u66ff\u6362\u62d3\u6251\u7a7a\u95f4\uff0c\u79f0\u4e3a\u5b9e\u51fd\u6570\u5206\u6790\u7684\u6570\u5b66\u9886\u57df\u4ecd\u7136\u6709\u6548\u3002 Scholze \u5728\u661f\u671f\u4e00\u5f00\u59cb\u4e86\u8bc1\u660e\u3002\u4ed6\u5b8c\u5168\u5728\u5934\u8111\u4e2d\u5de5\u4f5c\uff0c\u51e0\u4e4e\u6ca1\u6709\u5199\u4e0b\u4efb\u4f55\u4e1c\u897f\uff0c\u66f4\u4e0d\u7528\u8bf4\u4f7f\u7528\u7535\u8111\u4e86\u3002\u5230\u5468\u56db\u4e0b\u5348\uff0c\u4ed6\u51e0\u4e4e\u5df2\u7ecf\u60f3\u901a\u4e86\uff0c\u53ea\u7559\u4e0b\u4e86\u4e00\u4ef6\u4ed6\u505a\u4e0d\u5bf9\u7684\u4e8b\u3002\u4ed6\u4e5f\u611f\u53d7\u5230\u4e86\u5728\u4ed6\u6d3b\u8dc3\u7684\u8bb0\u5fc6\u4e2d\u4fdd\u6301\u5982\u6b64\u590d\u6742\u7684\u4e89\u8bba\u6240\u9700\u7684\u9ad8\u5ea6\u96c6\u4e2d\u7684\u538b\u529b\u3002\u6240\u4ee5\u90a3\u5929\u665a\u4e0a\u4ed6\u548c\u4e00\u4e9b\u670b\u53cb\u5728\u9152\u5427\u653e\u677e\u4e86\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u661f\u671f\u4e94\uff0c\u4ed6\u4ed8\u4e86\u94b1\u3002\n\u4f46\u4ed6\u4e5f\u77e5\u9053\u4ed6\u5468\u672b\u6ca1\u6709\u65f6\u95f4\u5de5\u4f5c\uff0c\u8fd9\u8ba9\u5468\u4e94\u6210\u4e3a\u5b8c\u6210\u8bc1\u660e\u7684\u6700\u4f73\u673a\u4f1a\u3002\u60f3\u5230\u8981\u4e0e\u8fc7\u53bb\u4e00\u5468\u4ed6\u5728\u8111\u6d77\u4e2d\u5efa\u7acb\u7684\u4e00\u5207\u5931\u53bb\u8054\u7cfb\uff0c\u7136\u540e\u4e0d\u5f97\u4e0d\u5728\u5468\u4e00\u91cd\u65b0\u5f00\u59cb\uff0c\u8fd9\u8d85\u51fa\u4e86\u4ed6\u7684\u8003\u8651\u3002 \u201c\u6211\u4e0d\u8ba4\u4e3a\u6211\u6709\u80fd\u529b\u5728\u8111\u6d77\u4e2d\u518d\u6b21\u91cd\u5efa\u5b83\uff0c\u201dScholze \u8bf4\u3002\u4e8e\u662f\u4ed6\u901a\u7535\u5e76\u5b8c\u6210\u4e86\u8bc1\u660e\u3002\u4f46\u4e8b\u540e\uff0c\u4ed6\u5e76\u4e0d\u786e\u5b9a\u81ea\u5df1\u6240\u505a\u7684\u662f\u5426\u6b63\u786e\u3002\u539f\u56e0\u4e0d\u4ec5\u4ec5\u662f\u4ed6\u6e05\u9664\u4e86\u6700\u540e\u4e00\u9053\u969c\u788d\u7684\u6726\u80e7\u73af\u5883\u3002\u8bc1\u660e\u662f\u5982\u6b64\u590d\u6742 Scholze \u77e5\u9053\u4ed6\u53ef\u80fd\u6f0f\u6389\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002 \u201c\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u6709\u8bb8\u591a\u6d3b\u52a8\u90e8\u4ef6\u3002\u5f53\u60a8\u6539\u53d8\u8fd9\u4e9b\u53c2\u6570\u4e4b\u4e00\u65f6\uff0c\u5f88\u96be\u77e5\u9053\u54ea\u4e9b\u90e8\u4ef6\u79fb\u52a8\u4e86\u591a\u5c11\uff0c\u201dScholze \u8bf4\u3002\u76f4\u5230 2019 \u5e74 11 \u6708\uff0cScholze \u624d\u62bd\u51fa\u65f6\u95f4\u771f\u6b63\u5199\u4e0b\u8bc1\u660e\u3002\u4e00\u5e74\u540e\uff0c\u4ed6\u8054\u7cfb\u4e86\u4f26\u6566\u5e1d\u56fd\u7406\u5de5\u5b66\u9662\u7684\u6570\u5b66\u5bb6 Kevin Buzzard\uff0c\u4ed6\u4e5f\u662f\u4e00\u4e2a\u540d\u4e3a Lean \u7684\u8bc1\u660e\u52a9\u7406\u9879\u76ee\u7684\u8457\u540d\u4f20\u64ad\u8005\u3002 Scholze \u60f3\u77e5\u9053\u662f\u5426\u6709\u53ef\u80fd\u5c06\u4ed6\u7684\u8bc1\u660e\u8f93\u5165\u5230 Lean \u4e2d\u2014\u2014\u628a\u5b83\u50cf\u8f6f\u4ef6\u7a0b\u5e8f\u4e00\u6837\u53d8\u6210\u4ee3\u7801\u884c\u2014\u2014\u8fd9\u6837\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u9a8c\u8bc1\u5b83\u662f\u5426\u771f\u7684\u6b63\u786e\u3002 Buzzard \u4e0e\u5305\u62ec\u5f17\u83b1\u5821\u5927\u5b66\u535a\u58eb\u540e\u7814\u7a76\u5458 Johan Commelin \u5728\u5185\u7684\u5c11\u6570\u7cbe\u76ca\u793e\u533a\u6210\u5458\u5206\u4eab\u4e86 Scholze \u7684\u8c03\u67e5\u3002 Commelin \u62e5\u6709\u9002\u5408\u8fd9\u4efd\u5de5\u4f5c\u7684\u5b8c\u7f8e\u80cc\u666f\u2014\u2014\u4ed6\u5df2\u7ecf\u4f7f\u7528 Lean \u591a\u5e74\u5e76\u4e14\u719f\u6089\u538b\u7f29\u6570\u5b66\u2014\u2014\u5e76\u4e14\u4ed6\u76f8\u4fe1\u9a8c\u8bc1 Scholze \u7684\u8bc1\u660e\u5bf9\u4e8e\u8bc1\u660e\u52a9\u7406\u5728\u6570\u5b66\u754c\u7684\u5730\u4f4d\u5408\u6cd5\u5316\u6709\u5f88\u5927\u5e2e\u52a9\u3002 \u201c\u80fd\u591f\u5728\u8fd9\u6837\u4e00\u4e2a\u9879\u76ee\u4e0a\u4e0e\u5f7c\u5f97\u5408\u4f5c\u5e76\u9644\u4e0a\u4ed6\u7684\u540d\u5b57\u5bf9\u7cbe\u76ca\u6765\u8bf4\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u63a8\u52a8\uff0c\u201dCommelin \u8bf4\u3002\n\u4f46\u4ed6\u4e5f\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u5e74\u6216\u66f4\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u8fd9\u8ba9\u4ed6\u72b9\u8c6b\u4e86\u3002 Commelin \u62c5\u5fc3\u4ed6\u53ef\u80fd\u4f1a\u82b1\u8d39\u6240\u6709\u65f6\u95f4\u6765\u9a8c\u8bc1\u8bc1\u660e\uff0c\u6700\u540e\uff0c\u6570\u5b66\u754c\u7684\u5176\u4ed6\u4eba\u53ea\u4f1a\u8038\u8038\u80a9\u3002 \u201c\u6211\u60f3\uff0c\u5982\u679c\u6211\u82b1\u4e24\u5e74\u65f6\u95f4\u7814\u7a76\u8fd9\u4e2a\uff0c\u7136\u540e\u8d70\u51fa\u6211\u7684\u6d1e\u7a74\u8bf4\uff0c\u2018\u8fd9\u5f88\u597d\u2019\uff0c\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u4f1a\u8bf4\uff0c\u2018\u54c7\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u5f7c\u5f97\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c \u2019\u201d\u79d1\u6885\u6797\u8bf4\u3002 Scholze \u672c\u4eba\u5e76\u4e0d\u5b8c\u5168\u786e\u5b9a\uff0c\u8fd9\u5e76\u4e0d\u91cd\u8981\u3002\u56e0\u6b64\uff0cCommelin \u95ee Scholze\uff0c\u4ed6\u662f\u5426\u613f\u610f\u53d1\u8868\u516c\u5f00\u58f0\u660e\uff0c\u8bc1\u660e\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u8981\u6027\u3002 Scholze \u540c\u610f\u4e86\uff0c\u5e76\u4e8e 2020 \u5e74 12 \u6708 5 \u65e5\u5728 Buzzard \u7684\u535a\u5ba2\u4e0a\u5199\u4e86\u4e00\u7bc7\u6587\u7ae0\u3002\u4ed6\u4eec\u5c06\u5176\u79f0\u4e3a\u201c\u6db2\u4f53\u5f20\u91cf\u5b9e\u9a8c\u201d\uff0c\u8fd9\u662f\u5bf9\u79f0\u4e3a\u6db2\u4f53\u5b9e\u5411\u91cf\u7a7a\u95f4\u7684\u8bc1\u660e\u4e2d\u6d89\u53ca\u7684\u6570\u5b66\u5bf9\u8c61\u7684\u4e00\u79cd\u81f4\u656c\uff0c\u5e76\u5411\u4ed6\u548c Commelin \u559c\u6b22\u7684\u524d\u536b\u6447\u6eda\u4e50\u961f\u81f4\u656c\uff0c\u79f0\u4e3a\u6db2\u4f53\u5f20\u529b\u5b9e\u9a8c\u3002\u5728 4,400 \u5b57\u7684\u521d\u7ea7\u8bfb\u7269\u4e2d\uff0cScholze \u89e3\u91ca\u4e86\u7ed3\u679c\u7684\u4e00\u4e9b\u6280\u672f\u65b9\u9762\uff0c\u7136\u540e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6ce8\u91ca\uff0c\u7528\u901a\u4fd7\u7684\u8bed\u8a00\u8bc1\u660e\u4ed6\u8ba4\u4e3a\u7528\u8ba1\u7b97\u673a\u68c0\u67e5\u5b83\u7684\u91cd\u8981\u6027\u3002 \u201c\u6211\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u662f\u6211\u8fc4\u4eca\u4e3a\u6b62\u6700\u91cd\u8981\u7684\u5b9a\u7406\u3002 \uff08\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u8fd8\u6ca1\u6709\u771f\u6b63\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u6211\u76f8\u4fe1\u8fd9\u4f1a\u6539\u53d8\uff0c\uff09\u201dScholze \u5199\u9053\u3002 \u201c\u6700\u597d\u786e\u4fdd\u5b83\u662f\u6b63\u786e\u7684\u2026\u2026\u201d \u4fdd\u8bc1\u5230\u4f4d\uff0cCommelin \u5f00\u59cb\u5de5\u4f5c\u3002\u5728\u5411 Lean \u89e3\u91ca\u4e86\u4ed6\u6700\u7ec8\u5e0c\u671b\u7a0b\u5e8f\u68c0\u67e5\u5176\u8bc1\u660e\u7684\u6570\u5b66\u9648\u8ff0\u4e4b\u540e\uff0c\u4ed6\u5c06\u66f4\u591a\u7684\u6570\u5b66\u5bb6\u5e26\u5165\u4e86\u8be5\u9879\u76ee\u3002\u4ed6\u4eec\u786e\u5b9a\u4e86\u4e00\u4e9b\u5f15\u7406\u2014\u2014\u8bc1\u660e\u4e2d\u7684\u4e2d\u95f4\u6b65\u9aa4\u2014\u2014\u770b\u8d77\u6765\u6700\u5bb9\u6613\u4e0a\u624b\u3002\u4ed6\u4eec\u9996\u5148\u5c06\u8fd9\u4e9b\u5f62\u5f0f\u5316\uff0c\u5728\u7cbe\u76ca\u7528\u6765\u786e\u5b9a\u7ed9\u5b9a\u9648\u8ff0\u662f\u5426\u6b63\u786e\u7684\u6570\u5b66\u77e5\u8bc6\u5e93\u4e4b\u4e0a\u5bf9\u5b83\u4eec\u8fdb\u884c\u7f16\u7801\u3002\u53bb\u5e74 10 \u6708\uff0c\u5e7f\u8fbe\u5199\u9053\uff0c\u7528\u7cbe\u76ca\u7f16\u5199\u6570\u5b66\u7684\u96c6\u4f53\u52aa\u529b\u5177\u6709\u201c\u63d0\u9ad8\u8c37\u4ed3\u7684\u6c14\u6c1b\u201d\u3002\u8fd9\u4e2a\u9879\u76ee\u4e5f\u4e0d\u4f8b\u5916\u3002 Commelin \u5c06\u8bc6\u522b\u8bc1\u660e\u7684\u79bb\u6563\u90e8\u5206\u5e76\u5c06\u5b83\u4eec\u53d1\u5e03\u5230 Zulip\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u7cbe\u76ca\u793e\u533a\u4e2d\u5fc3\u7684\u8ba8\u8bba\u677f\u3002\u5f53\u6570\u5b66\u5bb6\u770b\u5230\u9002\u5408\u4ed6\u4eec\u4e13\u4e1a\u77e5\u8bc6\u7684\u90e8\u5206\u8bc1\u660e\u65f6\uff0c\u4ed6\u4eec\u4f1a\u81ea\u613f\u5c06\u5176\u5f62\u5f0f\u5316\u3002\nMehta \u662f\u4e3a\u8fd9\u9879\u5de5\u4f5c\u505a\u51fa\u8d21\u732e\u7684\u5341\u51e0\u4f4d\u6570\u5b66\u5bb6\u4e4b\u4e00\u3002 5 \u6708\uff0c\u4ed6\u770b\u5230\u4e86 Commelin \u7684\u4e00\u7bc7\u5e16\u5b50\uff0c\u8bf7\u6c42\u5e2e\u52a9\u5c06\u4e00\u4e2a\u540d\u4e3a Gordan \u5f15\u7406\u7684\u9648\u8ff0\u7684\u8bc1\u660e\u5f62\u5f0f\u5316\uff0c\u8be5\u9648\u8ff0\u4e0e Mehta \u5728\u7ec4\u5408\u51e0\u4f55\u9886\u57df\u7684\u5de5\u4f5c\u6709\u5173\u3002\u4ed6\u82b1\u4e86\u4e00\u5468\u65f6\u95f4\u7528\u4e0e\u6570\u5b66\u5bb6\u6b63\u5728\u6784\u5efa\u7684\u66f4\u5927\u7684\u8bc1\u660e\u4e00\u81f4\u7684\u672f\u8bed\u5bf9\u8bc1\u660e\u8fdb\u884c\u7f16\u7801\u3002\u4ed6\u8bf4\uff0c\u8fd9\u662f\u7cbe\u76ca\u5de5\u4f5c\u65b9\u5f0f\u7684\u8c61\u5f81\u3002 \u201c\u8fd9\u662f\u4e00\u6b21\u5927\u578b\u5408\u4f5c\uff0c\u5f88\u591a\u4eba\u90fd\u5728\u505a\u4ed6\u4eec\u64c5\u957f\u7684\u4e8b\u60c5\u6765\u5236\u4f5c\u4e00\u4e2a\u5355\u4e00\u7684\u6574\u4f53\uff0c\u201d\u4ed6\u8bf4\u3002\u968f\u7740\u5de5\u4f5c\u7684\u8fdb\u884c\uff0cScholze \u59cb\u7ec8\u5982\u4e00\u5730\u51fa\u73b0\u5728 Zulip \u4e0a\uff0c\u56de\u7b54\u95ee\u9898\u5e76\u89e3\u91ca\u8bc1\u660e\u8981\u70b9\u2014\u2014\u6709\u70b9\u50cf\u5efa\u7b51\u5e08\u5728\u5de5\u4f5c\u73b0\u573a\u4e3a\u5efa\u7b51\u5546\u63d0\u4f9b\u6307\u5bfc\u3002 \u201c\u4ed6\u603b\u662f\u89e6\u624b\u53ef\u53ca\uff0c\u201d\u79d1\u6885\u6797\u8bf4\u3002 5 \u6708\u5e95\uff0c\u8be5\u5c0f\u7ec4\u5b8c\u6210\u4e86 Scholze \u6700\u4e0d\u786e\u5b9a\u7684\u8bc1\u660e\u7684\u4e00\u90e8\u5206\u3002 5 \u6708 29 \u65e5\u51cc\u6668 1 \u70b9 10 \u5206\uff0cCommelin \u8f93\u5165\u4e86\u6700\u540e\u7684\u51fb\u952e\u3002Lean \u7f16\u8bd1\u4e86\u8bc1\u660e\uff0c\u5b83\u50cf\u4e00\u4e2a\u6b63\u5e38\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e00\u6837\u8fd0\u884c\uff0c\u9a8c\u8bc1 Scholze \u7684\u5de5\u4f5c\u662f 100% \u6b63\u786e\u7684\u3002\u73b0\u5728 Scholze \u548c\u5176\u4ed6\u6570\u5b66\u5bb6\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6280\u672f\u4ece\u771f\u6b63\u7684\u6cdb\u51fd\u5206\u6790\u5e94\u7528\u5230\u538b\u7f29\u96c6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u77e5\u9053\u4ed6\u4eec\u80af\u5b9a\u4f1a\u5728\u8fd9\u4e2a\u65b0\u73af\u5883\u4e2d\u5de5\u4f5c\u3002\u867d\u7136 Scholze \u4ecd\u7136\u559c\u6b22\u5728\u8111\u6d77\u4e2d\u627e\u51fa\u8bc1\u636e\uff0c\u4f46 Lean \u7684\u80fd\u529b\u7ed9\u4ed6\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\u4ed6\u73b0\u5728\u53ef\u4ee5\u9884\u89c1\u50cf\u5b83\u8fd9\u6837\u7684\u7a0b\u5e8f\u5728\u7814\u7a76\u6570\u5b66\u4e2d\u53d1\u6325\u6301\u4e45\u7684\u4f5c\u7528\u3002 \u201c\u8fd9\u4e2a\u5b9e\u9a8c\u5f7b\u5e95\u6539\u53d8\u4e86\u6211\u5bf9 [\u8bc1\u660e\u52a9\u7406] \u80fd\u529b\u7684\u5370\u8c61\uff0c\u201dScholze \u8bf4\u3002 \u201c\u6211\u73b0\u5728\u8ba4\u4e3a\u539f\u5219\u4e0a\u5728\u7cbe\u76ca\u4e2d\u5c06\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u5185\u5bb9\u5f62\u5f0f\u5316\u662f\u660e\u667a\u7684\u3002\u6ca1\u6709\u771f\u6b63\u7684\u969c\u788d\u3002\u201d", "note_en": "Computer proof assistants have been an intriguing subplot in mathematics for years \u2014 promising to automate core aspects of the way mathematicians work, but in practice having little effect on the field.\n But a new result,  completed in early June, has the feel of a rookie\u2019s first hit in the big leagues: At last, a proof assistant has made a real contribution to the leading edge of mathematical research by verifying the correctness of a complicated, modern proof.\n \u201cIt demonstrates that modern maths can be formalized in a theorem prover,\u201d said  Bhavik Mehta, a graduate student at the University of Cambridge who contributed to the work.\n The proof in question is by  Peter Scholze of the University of Bonn, one of the most widely respected mathematicians in the world. It is just one piece of a larger project called \u201c condensed mathematics\u201d that he and  Dustin Clausen of the University of Copenhagen have been working on for several years.\n  Their goal is to create new foundations for topology, replacing the traditional notion of a topological space \u2014 whose examples include the sphere and the doughnut \u2014 with more versatile objects that the authors call condensed sets. In this new perspective, topological spaces are thought of as being assembled from infinite points of dust glued together.\n That project includes a particularly important, difficult proof that Scholze worked out himself during a consuming week in July 2019. It establishes that\u00a0an area of math called real functional\u00a0analysis still works if you replace topological spaces with condensed\u00a0sets.\n Scholze began the proof on a Monday. He worked entirely in his head, barely writing anything down, let alone using a computer. By Thursday afternoon he\u2019d nearly figured it out, save one piece that he just couldn\u2019t get right. He was also feeling the strain of the intense concentration required to hold such a complicated argument in his active memory. So that night he unwound with some friends at a bar. He paid for it the next morning, Friday.\n  But he also knew that he wouldn\u2019t have time to work over the weekend, making Friday his best chance to finish the proof. The thought of losing touch with everything he\u2019d built up in his mind over the past week, then having to start again fresh on Monday, was more than he wanted to consider.\n \u201cI didn\u2019t think I\u2019d have the mental capacity to rebuild this in my head again,\u201d said Scholze.\n So he powered through and finished the proof. But afterward, he wasn\u2019t certain that what he had done was correct. The reason was more than the hazy circumstances in which he\u2019d cleared the final hurdle. The proof was so complicated Scholze knew it was possible he had missed something.\n  \u201cIt\u2019s some very convoluted thing with many moving parts. It\u2019s hard to know which parts move by how much when you shift one of these parameters,\u201d said Scholze.\n Scholze didn\u2019t find time to actually write down the proof until November 2019. A year later he contacted  Kevin Buzzard, a mathematician at Imperial College London and a prominent evangelist for a proof assistant program called  Lean. Scholze wanted to know whether it would be possible to type his proof into Lean \u2014 turning it into lines of code like a software program \u2014 so that the program could verify whether it was really true.\n Buzzard shared Scholze\u2019s inquiry with a handful of other members of the Lean community including  Johan Commelin, a postdoctoral researcher at the University of Freiburg. Commelin had the perfect background for the job \u2014 he\u2019d been using Lean for several years and was familiar with condensed mathematics \u2014 and he was convinced that verifying Scholze\u2019s proof would do a lot to legitimize the proof assistant\u2019s standing in the mathematical community.\n \u201cBeing able to collaborate with Peter on such a project and having his name attached to it would be an enormous boost for Lean,\u201d said Commelin.\n But he also thought it could take a year or more to do it, which gave him pause. Commelin was worried he might spend all that time verifying the proof and, at the end, the rest of the math world would just shrug.\n \u201cI thought that if I spend two years working on this and I come out of my cave and say, \u2018This is fine,\u2019 the rest of the world is going to say, \u2018Wow, we already knew this, Peter proved it,\u2019\u201d said Commelin. It wouldn\u2019t matter that Scholze himself wasn\u2019t entirely sure.\n So Commelin asked Scholze if he\u2019d be willing to make a public statement vouching for the importance of the work. Scholze agreed, and on Dec. 5, 2020, he  wrote a post on Buzzard\u2019s blog.\n They called it the \u201cLiquid Tensor Experiment,\u201d a nod to mathematical objects involved in the proof called liquid real vector spaces, and to a progressive rock band he and Commelin enjoy called  Liquid Tension Experiment. In the 4,400-word primer, Scholze explained some technical aspects of the result and then added a note testifying in plain language to what he saw as the importance of checking it with a computer.\n \u201cI think this may be my most important theorem to date. (It does not really have any applications so far, but I\u2019m sure this will change,)\u201d Scholze wrote. \u201cBetter be sure it\u2019s correct\u2026\u201d\n Assurance in place, Commelin set to work. After explaining to Lean the mathematical statement whose proof he ultimately wanted the program to check, he brought more mathematicians into the project. They identified a few lemmas \u2014 intermediate steps in the proof \u2014 that seemed most approachable. They formalized those first, coding them on top of the library of mathematical knowledge that Lean draws on to determine if a given statement is true or not.\n  Last  October,  Quanta wrote that the collective effort to write mathematics in Lean has the \u201cair of a barn raising.\u201d This project was no different. Commelin would identify discrete parts of the proof and post them to  Zulip, a discussion board that serves as a hub for the Lean community. When mathematicians saw a part of the proof that fit their expertise, they\u2019d volunteer to formalize it.\n Mehta was one of about a dozen mathematicians who contributed to the work. In May he saw a post from Commelin asking for help formalizing the proof of a statement called Gordan\u2019s lemma, which related to Mehta\u2019s work in the area of combinatorial geometry. He spent a week coding the proof in terms that were consistent with the larger proof the mathematicians were building. It was emblematic, he said, of the way Lean works.\n \u201cIt\u2019s one big collaboration with a lot of people doing what they\u2019re good at to make a singular monolith,\u201d he said.\n As the work proceeded, Scholze was a consistent presence on Zulip, answering questions and explaining points of the proof \u2014 a bit like an architect giving directions to builders on a job site. \u201cHe was always within reach,\u201d Commelin said.\n  At the end of May the group finished formalizing the one part of the proof Scholze was most unsure about. Commelin entered the final keystroke at 1:10 a.m. on May 29. Lean compiled the proof, and it ran like a functioning program, verifying that Scholze\u2019s work was 100% correct. Now Scholze and other mathematicians can apply those techniques from real functional analysis to condensed sets, knowing that they\u2019ll definitely work in this new setting.\n And while Scholze still prefers to work out proofs in his head, Lean\u2019s abilities left him impressed. He can now foresee programs like it playing an enduring role in research mathematics.\n \u201cThis experiment has changed drastically my impression of how capable [proof assistants] are,\u201d Scholze said. \u201cI now think it\u2019s sensible in principle to formalize whatever you want in Lean. There\u2019s no real obstruction.\u201d", "posttime": "2021-07-29 21:53:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a9\u624b,assistant,\u8bc1\u660e", "title": "\u8bc1\u660e\u52a9\u624b\u8df3\u5230\u5927\u8054\u76df\u6570\u5b66", "title_en": "Proof Assistant Makes Jump to Big-League Math", "transed": 1, "url": "https://www.quantamagazine.org/lean-computer-program-confirms-peter-scholze-proof-20210728/", "via": "", "real_tags": ["\u52a9\u624b", "assistant", "\u8bc1\u660e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070253, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u6e90\uff1a\u7f8e\u56fd\u80fd\u6e90\u4fe1\u606f\u7f72 (EIA)\uff0c\u6bcf\u6708\u80fd\u6e90\u8bc4\u8bba \u6ce8\uff1a\u8be5\u56fe\u663e\u793a\u4e86\u6240\u6709\u90e8\u95e8\uff08\u7535\u529b\u3001\u5de5\u4e1a\u3001\u5546\u4e1a\u548c\u4f4f\u5b85\uff09\u7684\u51c0\u53d1\u7535\u91cf\uff0c\u5305\u62ec\u516c\u7528\u4e8b\u4e1a\u89c4\u6a21\u548c\u5c0f\u89c4\u6a21\uff08\u5ba2\u6237\u73b0\u573a\u3001\u5c0f\u4e8e 1 \u5146\u74e6\uff09\u592a\u9633\u80fd\u3002 2020 \u5e74\uff0c\u53ef\u518d\u751f\u80fd\u6e90\uff08\u5305\u62ec\u98ce\u80fd\u3001\u6c34\u7535\u3001\u592a\u9633\u80fd\u3001\u751f\u7269\u8d28\u80fd\u548c\u5730\u70ed\u80fd\uff09\u4ea7\u751f\u4e86\u521b\u7eaa\u5f55\u7684 8340 \u4ebf\u5343\u74e6\u65f6\uff08kWh\uff09\u7535\u529b\uff0c\u7ea6\u5360\u7f8e\u56fd\u603b\u53d1\u7535\u91cf\u7684 21%\u3002 2020 \u5e74\uff0c\u5728\u7f8e\u56fd\uff0c\u53ea\u6709\u5929\u7136\u6c14\uff0816170 \u4ebf\u5343\u74e6\u65f6\uff09\u7684\u53d1\u7535\u91cf\u8d85\u8fc7\u4e86\u53ef\u518d\u751f\u80fd\u6e90\u3002\u53ef\u518d\u751f\u80fd\u6e90\u6709\u53f2\u4ee5\u6765\u9996\u6b21\u8d85\u8fc7\u6838\u80fd\uff087900 \u4ebf\u5343\u74e6\u65f6\uff09\u548c\u7164\u70ad\uff087740 \u4ebf\u5343\u74e6\u65f6\uff09\u3002 2020 \u5e74\u7684\u8fd9\u4e00\u7ed3\u679c\u4e3b\u8981\u662f\u7531\u4e8e\u7f8e\u56fd\u53d1\u7535\u4e2d\u7164\u70ad\u7684\u4f7f\u7528\u663e\u7740\u51cf\u5c11\uff0c\u800c\u98ce\u80fd\u548c\u592a\u9633\u80fd\u7684\u4f7f\u7528\u7a33\u6b65\u589e\u52a0\u3002 2020 \u5e74\uff0c\u7f8e\u56fd\u6240\u6709\u884c\u4e1a\u7684\u7164\u70ad\u53d1\u7535\u91cf\u6bd4 2019 \u5e74\u4e0b\u964d\u4e86 20%\uff0c\u800c\u5305\u62ec\u5c0f\u89c4\u6a21\u592a\u9633\u80fd\u5728\u5185\u7684\u53ef\u518d\u751f\u80fd\u6e90\u589e\u957f\u4e86 9%\u3002\u98ce\u80fd\u662f\u76ee\u524d\u7f8e\u56fd\u6700\u666e\u904d\u7684\u53ef\u518d\u751f\u7535\u529b\u6765\u6e90\uff0c2020 \u5e74\u6bd4 2019 \u5e74\u589e\u957f\u4e86 14%\u3002\u516c\u7528\u4e8b\u4e1a\u89c4\u6a21\u7684\u592a\u9633\u80fd\u53d1\u7535\uff08\u6765\u81ea 1 \u5146\u74e6\u4ee5\u4e0a\u7684\u9879\u76ee\uff09\u589e\u957f\u4e86 26%\uff0c\u5c0f\u89c4\u6a21\u592a\u9633\u80fd\uff0c\u5982\u7535\u7f51\u8fde\u63a5\u5c4b\u9876\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u589e\u957f 19%\u3002\u7f8e\u56fd\u7684\u71c3\u7164\u53d1\u7535\u91cf\u5728 2007 \u5e74\u8fbe\u5230 20160 \u4ebf\u5343\u74e6\u65f6\u7684\u5cf0\u503c\uff0c\u6b64\u540e\u5927\u90e8\u5206\u5bb9\u91cf\u5df2\u88ab\u5929\u7136\u6c14\u53d1\u7535\u53d6\u4ee3\u6216\u8f6c\u6362\u4e3a\u5929\u7136\u6c14\u53d1\u7535\u3002\u5728 2016 \u5e74\u4e4b\u524d\uff0c\u7164\u70ad\u662f\u7f8e\u56fd\u6700\u5927\u7684\u7535\u529b\u6765\u6e90\uff0c\u800c 2020 \u5e74\u662f\u53ef\u518d\u751f\u80fd\u6e90\u548c\u6838\u80fd\u53d1\u7535\u91cf\u8d85\u8fc7\u7164\u70ad\u53d1\u7535\u91cf\u7684\u7b2c\u4e00\u5e74\uff08\u6839\u636e\u6211\u4eec\u53ef\u8ffd\u6eaf\u5230 1949 \u5e74\u7684\u6570\u636e\u7cfb\u5217\uff09\u3002\u4ece 2019 \u5e74\u5230 2020 \u5e74\uff0c\u6838\u7535\u4e0b\u964d\u4e86 2%\uff0c\u56e0\u4e3a\u51e0\u5ea7\u6838\u7535\u7ad9\u9000\u5f79\uff0c\u5176\u4ed6\u6838\u7535\u7ad9\u7ecf\u5386\u4e86\u4e0e\u7ef4\u62a4\u76f8\u5173\u7684\u505c\u7535\u7565\u591a\u3002\u6211\u4eec\u9884\u8ba1 2021 \u5e74\u7f8e\u56fd\u7684\u71c3\u7164\u53d1\u7535\u91cf\u5c06\u589e\u52a0\uff0c\u56e0\u4e3a\u5929\u7136\u6c14\u4ef7\u683c\u7ee7\u7eed\u4e0a\u6da8\uff0c\u7164\u70ad\u5728\u7ecf\u6d4e\u4e0a\u66f4\u5177\u7ade\u4e89\u529b\u3002\u6839\u636e\u6211\u4eec\u7684\u77ed\u671f\u80fd\u6e90\u5c55\u671b (STEO) \u4e2d\u7684\u9884\u6d4b\uff0c\u6211\u4eec\u9884\u8ba1 2021 \u5e74\u6240\u6709\u884c\u4e1a\u7684\u71c3\u7164\u53d1\u7535\u91cf\u5c06\u6bd4 2020 \u5e74\u7684\u6c34\u5e73\u589e\u52a0 18%\uff0c\u7136\u540e\u5728 2022 \u5e74\u4e0b\u964d 2%\u3002\u6211\u4eec\u9884\u8ba1\u7f8e\u56fd\u6240\u6709\u884c\u4e1a\u7684\u53ef\u518d\u751f\u80fd\u6e90\u53d1\u7535\u91cf\u5c06\u589e\u52a02021 \u5e74\u4e3a 7%\uff0c2022 \u5e74\u4e3a 10%\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9884\u6d4b\u7164\u70ad\u5c06\u6210\u4e3a 2021 \u5e74\u7b2c\u4e8c\u5927\u6700\u6d41\u884c\u7684\u7535\u529b\u6765\u6e90\uff0c\u800c\u53ef\u518d\u751f\u80fd\u6e90\u5c06\u6210\u4e3a 2022 \u5e74\u7b2c\u4e8c\u5927\u6700\u6d41\u884c\u7684\u80fd\u6e90\u3002\u6211\u4eec\u9884\u8ba1\u6838\u7535\u5c06\u4e0b\u964d 2\u968f\u7740\u8fd0\u8425\u5546\u9000\u5f79\u591a\u53f0\u53d1\u7535\u673a\uff0c2021 \u5e74\u548c 2022 \u5e74\u5206\u522b\u4e0b\u964d % \u548c 3%\u3002\u8d44\u6599\u6765\u6e90\uff1a\u7f8e\u56fd\u80fd\u6e90\u4fe1\u606f\u7f72\u3001\u6bcf\u6708\u80fd\u6e90\u8bc4\u8bba\u548c\u77ed\u671f\u80fd\u6e90\u5c55\u671b (STEO) \u6ce8\uff1a\u8be5\u56fe\u663e\u793a\u4e86\u6240\u6709\u90e8\u95e8\uff08\u7535\u529b\u3001\u5de5\u4e1a\u3001\u5546\u4e1a\u548c\u4f4f\u5b85\uff09\u7684\u51c0\u53d1\u7535\u91cf\uff0c\u5305\u62ec\u516c\u7528\u4e8b\u4e1a\u89c4\u6a21\u548c\u5c0f\u578b\u89c4\u6a21\uff08\u5ba2\u6237\u73b0\u573a\uff0c\u5c0f\u4e8e 1 \u5146\u74e6\uff09\u592a\u9633\u80fd\u3002", "note_en": "Source: U.S. Energy Information Administration (EIA),   Monthly Energy Review   Note: This graph shows electricity net generation in all sectors (electric power, industrial, commercial, and residential) and includes both utility-scale and small-scale (customer-sited, less than 1 megawatt) solar.\n    In 2020,  renewable energy sources (including wind, hydroelectric,  solar, biomass, and geothermal energy) generated a record 834 billion kilowatthours (kWh) of electricity, or about 21% of all the electricity generated in the United States. Only  natural gas (1,617 billion kWh) produced more electricity than renewables in the United States in 2020. Renewables surpassed both  nuclear (790 billion kWh) and  coal (774 billion kWh) for the first time on record. This outcome in 2020 was due mostly to significantly less coal use in U.S. electricity generation and steadily increased use of wind and solar.\n  In 2020, U.S. electricity generation from coal in all sectors declined 20% from 2019, while renewables, including  small-scale solar, increased 9%.  Wind, currently the most prevalent source of renewable electricity in the United States, grew 14% in 2020 from 2019.  Utility-scale solar generation (from projects greater than 1 megawatt) increased 26%, and  small-scale solar, such as grid-connected rooftop solar panels, increased 19%.\n  Coal-fired electricity generation in the United States peaked at 2,016 billion kWh in 2007 and much of that capacity has been  replaced by or converted to natural gas-fired generation since then. Coal was the largest source of electricity in the United States until 2016, and 2020 was the first year that more electricity was generated by renewables and by  nuclear power than by coal (according to our data series that dates back to 1949). Nuclear electric power declined 2% from 2019 to 2020 because several nuclear power plants retired and other nuclear plants experienced slightly more maintenance-related outages.\n  We expect  coal-fired electricity generation to increase in the United States during 2021 as  natural gas prices continue to rise and as coal becomes more economically competitive. Based on forecasts in our   Short-Term Energy Outlook (STEO), we expect coal-fired electricity generation in all sectors in 2021 to  increase 18% from 2020 levels before falling 2% in 2022. We expect U.S. renewable generation across all sectors to increase 7% in 2021 and 10% in 2022. As a result, we forecast coal will be the second-most prevalent electricity source in 2021, and renewables will be the second-most prevalent source in 2022. We expect nuclear electric power to decline 2% in 2021 and 3% in 2022 as operators  retire several generators.\n    Source: U.S. Energy Information Administration,   Monthly Energy Review and   Short-Term Energy Outlook (STEO)  Note: This graph shows electricity net generation in all sectors (electric power, industrial, commercial, and residential) and includes both utility-scale and small-scale (customer-sited, less than 1 megawatt) solar.", "posttime": "2021-07-29 21:53:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u7f8e\u56fd,\u7535\u529b,renewables,\u592a\u9633\u80fd", "title": "\u53ef\u518d\u751f\u80fd\u6e90\u6210\u4e3a 2020 \u5e74\u7f8e\u56fd\u7b2c\u4e8c\u5927\u6700\u6d41\u884c\u7684\u7535\u529b\u6765\u6e90", "title_en": "Renewables became the second-most prevalent U.S. electricity source in 2020", "transed": 1, "url": "https://www.eia.gov/todayinenergy/detail.php?id=48896", "via": "", "real_tags": ["2020", "\u7f8e\u56fd", "\u7535\u529b", "\u592a\u9633\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "7b030f03a5405a6f7f3210fbe21d7574.jpg", "infoid": 1070252, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u5feb\u5c31\u4f1a\u6709\u4e00\u5929\u6ca1\u6709\u63d0\u9192\uff0c\u6bcf\u5929\uff0c\u5f53\u4f60\u8d70\u5728\u8857\u4e0a\u65f6\uff0c\u4f60\u9047\u5230\u7684\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u539f\u521b\u7684\u89c2\u70b9\u3002\u5907\u53d7\u559c\u7231\u7684\u513f\u7ae5\u52a8\u753b\u8282\u76ee\u5c06\u4e8e 2022 \u5e74\u521d\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\u7b2c 25 \u5b63\u548c\u6700\u540e\u4e00\u5b63\u4e4b\u540e\u3002\u8be5\u5267\u7684\u6267\u884c\u5236\u7247\u4eba\u5361\u7f57\u5c14\u00b7\u683c\u6797\u6c83\u5c14\u5fb7 (Carol Greenwald) \u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u4e9a\u745f\u662f\u5386\u53f2\u4e0a\u64ad\u51fa\u65f6\u95f4\u6700\u957f\u7684\u513f\u7ae5\u52a8\u753b\u7cfb\u5217\uff0c\u4ee5\u901a\u8fc7\u8bb8\u591a\u5f00\u521b\u6027\u65f6\u523b\u5411\u51e0\u4ee3\u89c2\u4f17\u4f20\u6388\u5584\u826f\u3001\u540c\u60c5\u548c\u5305\u5bb9\u800c\u95fb\u540d\u3002\u201d\u5979\u8865\u5145\u8bf4\uff0c\u8be5\u8282\u76ee\u5c06\u5728\u672a\u6765\u51e0\u5e74\u7ee7\u7eed\u5728 PBS KIDS \u4e0a\u64ad\u653e\u3002\u4e9a\u745f\u8ddf\u968f\u5176\u540d\u4e49\u4e0a\u7684\u89d2\u8272\uff0c\u4e00\u53ea\u516b\u5c81\u7684\u571f\u8c5a\uff0c\u5728\u5bb6\u4eba\u3001\u670b\u53cb\u548c\u5b66\u6821\u4e2d\u5ea6\u8fc7\u3002\u8be5\u8282\u76ee\u64c5\u957f\u5c55\u793a\u6765\u81ea\u4e0d\u540c\u6587\u5316\u3001\u9636\u7ea7\u548c\u5bb6\u5ead\u80cc\u666f\u7684\u89d2\u8272\u3002\u6709\u65f6\u5b83\u662f\u8fb9\u754c\u63a8\u52a8 - \u8be5\u8282\u76ee\u7684\u884d\u751f\u5267\u96c6\uff0c\u6765\u81ea\u5df4\u65af\u7279\u7684\u660e\u4fe1\u7247\uff0c\u56e0 2005 \u5e74\u4ee5\u5973\u540c\u6027\u604b\u7236\u6bcd\u4e3a\u7279\u8272\u7684\u5267\u96c6\u800c\u53d7\u5230\u5f53\u65f6\u7684\u6559\u80b2\u90e8\u957f\u739b\u683c\u4e3d\u7279\u00b7\u65af\u4f69\u6797\u7684\u6279\u8bc4\uff0c\u800c\u963f\u62c9\u5df4\u9a6c\u5dde\u516c\u5171\u7535\u89c6\u53f0\u62d2\u7edd\u64ad\u51fa 2019 \u5e74\u7684\u5267\u96c6\uff0c\u8be5\u5267\u96c6\u663e\u793a\u4e00\u573a\u540c\u6027\u5a5a\u793c\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u5728\u64ad\u5ba2\u300aFinding DW\u300b\u7684 7 \u6708 13 \u65e5\u4e00\u96c6\u4e2d\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0c\u8282\u76ee\u7ed3\u675f\u7684\u6d88\u606f\u9996\u6b21\u6d6e\u51fa\u6c34\u9762\uff0c\u4e9a\u745f\u4f5c\u5bb6\u51ef\u897f\u00b7\u6c83\u900f\u9732\uff0c\u8be5\u8282\u76ee\u4e0d\u518d\u5236\u4f5c\uff0c\u6700\u540e\u4e00\u96c6\u5728\u51e0\u5e74\u524d\u5b8c\u6210. \u201c\u6211\u8ba4\u4e3a\u4e9a\u745f\u5e94\u8be5\u56de\u6765\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u6211\u77e5\u9053\u6211\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u8ba4\u4e3a\u4ed6\u4eec\u72af\u4e86\u9519\u8bef\u7684\u4eba\u3002\u201d\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u4e9a\u745f\u7684\u7ec8\u7ed3\uff1a\u683c\u6797\u6c83\u5c14\u5fb7\u7684\u58f0\u660e\u8865\u5145\u8bf4\uff0c\u201c\u5236\u7247\u4eba GBH \u548c PBS KIDS \u5c06\u7ee7\u7eed\u5408\u4f5c\u5236\u4f5c\u4e9a\u745f\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u4ee5\u65b0\u7684\u65b9\u5f0f\u5206\u4eab\u4e9a\u745f\u548c\u4ed6\u7684\u670b\u53cb\u4eec\u7684\u7ecf\u9a8c\u6559\u8bad\u3002\u201d", "note_en": "There will soon be a day without the reminder that every day, when you&#39;re walking down the street, everybody that you meet has an original point of view.\n    The much beloved animated kids show is coming to an end in early 2022, after its 25th and final season.\n  &#34;Arthur is the longest-running kids animated series in history and is known for teaching kindness, empathy and inclusion through many groundbreaking moments to generations of viewers,&#34; said the show&#39;s executive producer, Carol Greenwald, in a statement. She added that the show will continue to be available on PBS KIDS for years to come.\n     Arthur followed its titular character, an eight-year-old aardvark, as he navigated life among family, friends and school. The show had a knack for featuring characters from different cultures, classes and family backgrounds. At times it was boundary pushing \u2014 an episode of the show&#39;s spin-off,  Postcards from Buster, received criticism from then-Education Secretary Margaret Spelling for a  2005 episode that featured lesbian parents, and  Alabama Public Television refused to air a 2019 episode that showed a  same-sex wedding.\n  The news of the show ending was first floated earlier this month in an interview featured in the July 13 episode of the podcast   Finding D.W. , where  Arthur writer Kathy Waugh revealed that the show was no longer in production, and the final episode was completed years ago. &#34;I think  Arthur should come back,&#34; she said. &#34;I know I&#39;m not alone in thinking they made a mistake.&#34;\n    Still, this might not be the end of Arthur: The statement from Greenwald adds that &#34;producer GBH and PBS KIDS are continuing to work together on additional Arthur content, sharing the lessons of Arthur and his friends in new ways.&#34;", "posttime": "2021-07-29 21:53:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u513f\u7ae5,longest,\u8282\u76ee", "title": "\u65f6\u95f4\u6700\u957f\u7684\u513f\u7ae5\u52a8\u753b\u7cfb\u5217\u201c\u4e9a\u745f\u201d\u5373\u5c06\u7ed3\u675f", "title_en": "'Arthur,' the longest-running kids animated series, is ending", "transed": 1, "url": "https://www.npr.org/2021/07/28/1021687616/pbs-kids-show-arthur-ending", "via": "", "real_tags": ["\u513f\u7ae5", "longest", "\u8282\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "9630a45f23a11d31483858bf77502d0d.jpg", "infoid": 1070251, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u4e2a\u7ea2\u8272\u7684\u4e1c\u897f\u85cf\u5728\u592a\u9633\u7cfb\u4e0d\u5e94\u8be5\u5b58\u5728\u7684\u5730\u65b9\u3002\u7531\u65e5\u672c\u5b87\u822a\u5c40 JAXA \u7684 Sunao Hasegawa \u9886\u5bfc\u7684\u79d1\u5b66\u5bb6\u5468\u4e00\u5728\u300a\u5929\u4f53\u7269\u7406\u5b66\u6742\u5fd7\u5feb\u62a5\u300b\u4e0a\u62a5\u9053\u8bf4\uff0c\u5728\u706b\u661f\u548c\u6728\u661f\u4e4b\u95f4\u7684\u5c0f\u884c\u661f\u5e26\u4e2d\u53d1\u73b0\u7684\u4e24\u4e2a\u7269\u4f53\u4f3c\u4e4e\u8d77\u6e90\u4e8e\u6d77\u738b\u661f\u4e4b\u5916\u3002\u8fd9\u4e9b\u53d1\u73b0\u6709\u671d\u4e00\u65e5\u53ef\u80fd\u4e3a\u65e9\u671f\u592a\u9633\u7cfb\u4e2d\u5b58\u5728\u7684\u6df7\u4e71\u63d0\u4f9b\u76f4\u63a5\u8bc1\u636e\u3002 \u201c\u5982\u679c\u8fd9\u662f\u771f\u7684\uff0c\u90a3\u5c06\u662f\u4e00\u7b14\u5927\u4e70\u5356\uff0c\u201d\u79d1\u7f57\u62c9\u591a\u5dde\u897f\u5357\u7814\u7a76\u6240\u7684\u884c\u661f\u79d1\u5b66\u5bb6\u54c8\u5c14\u00b7\u83b1\u7ef4\u68ee (Hal Levison) \u8bf4\uff0c\u4ed6\u5e76\u672a\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u3002\u5730\u7403\u7684\u6052\u661f\u90bb\u57df\u4eca\u5929\u76f8\u5f53\u7a33\u5b9a\u3002\u4f46\u662f\u5728 40 \u4ebf\u5e74\u524d\uff0c\u6728\u661f\u548c\u5176\u4ed6\u5de8\u884c\u661f\u7684\u8f68\u9053\u53ef\u80fd\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6df7\u4e71\u7edf\u6cbb\u7740\u3002\u8fd9\u79cd\u884c\u661f\u4e4b\u821e\u9020\u6210\u7684\u91cd\u529b\u7834\u574f\u5f88\u53ef\u80fd\u5c06\u5ca9\u77f3\u548c\u51b0\u5757\u6254\u5f97\u5230\u5904\u90fd\u662f\u3002 \u201c\u8fd9\u662f\u975e\u5e38\u6709\u6d3b\u529b\u7684\uff0c\u201d\u54c8\u4f5b\u5927\u5b66\u592a\u9633\u7cfb\u6f14\u5316\u4e13\u5bb6\u5361\u7433\u00b7\u5965\u4f2f\u683c\u8bf4\uff0c\u4ed6\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u65b0\u7814\u7a76\u3002\u5176\u4e2d\u4e00\u4e9b\u5ca9\u77f3\u843d\u5165\u706b\u661f\u548c\u6728\u661f\u4e4b\u95f4\u7684\u7f1d\u9699\u4e2d\uff0c\u6210\u4e3a\u5c0f\u884c\u661f\u5e26\u3002\u5927\u591a\u6570\u6750\u6599\u88ab\u8ba4\u4e3a\u662f\u76f8\u5f53\u76f8\u4f3c\u7684\u672a\u5f62\u6210\u884c\u661f\u7684\u4e0d\u6d3b\u52a8\u5ca9\u77f3\u5927\u5757\u3002\u5b83\u4eec\u7684\u8f68\u9053\u5927\u7ea6\u662f\u5730\u7403-\u592a\u9633\u8ddd\u79bb\u7684 2.7 \u500d\u548c 2.6 \u500d\uff0c\u6b63\u597d\u4f4d\u4e8e\u5c0f\u884c\u661f\u5e26\u5185\u3002\u5927\u7ea6 70 \u82f1\u91cc\u5bbd\u7684 203 Pompeja \u4f3c\u4e4e\u5728\u7ed3\u6784\u4e0a\u5b8c\u597d\u65e0\u635f\uff0c\u800c\u53ea\u6709 35 \u82f1\u91cc\u5de6\u53f3\u7684 269 Justitia \u53ef\u80fd\u662f\u5148\u524d\u78b0\u649e\u7684\u788e\u7247\u3002\u4e24\u8005\u90fd\u6709\u7a33\u5b9a\u7684\u5706\u5f62\u8f68\u9053\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4e00\u5b9a\u5f88\u4e45\u4ee5\u524d\u5c31\u5df2\u7ecf\u8fdb\u5165\u8fd9\u4e2a\u7a7a\u95f4\u4e86\u3002\n\u4e24\u8005\u4e5f\u6709\u4e0d\u5bfb\u5e38\u7684\u989c\u8272\u3002\u592a\u9633\u7cfb\u5185\u90e8\u7684\u7269\u4f53\u5f80\u5f80\u53cd\u5c04\u66f4\u591a\u7684\u84dd\u5149\uff0c\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u6709\u673a\u7269\u8d28\u2014\u2014\u6bd4\u5982\u78b3\u548c\u7532\u70f7\u2014\u2014\u800c\u592a\u9633\u7cfb\u5916\u90e8\u7684\u7269\u4f53\u5219\u66f4\u7ea2\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u5f88\u591a\u6709\u673a\u7269\uff0c\u4e5f\u8bb8\u662f\u751f\u547d\u7684\u57fa\u77f3\u5730\u7403\u3002\u8be5\u8bba\u6587\u7684\u5408\u8457\u8005\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8fc8\u514b\u5c14\u00b7\u9a6c\u585e\u7279 (Micha\u00ebl Marsset) \u8bf4\uff1a\u201c\u4e3a\u4e86\u62e5\u6709\u8fd9\u4e9b\u6709\u673a\u7269\uff0c\u60a8\u6700\u521d\u9700\u8981\u5728\u8868\u9762\u5f62\u6210\u5927\u91cf\u51b0\u3002\u201d \u201c\u6240\u4ee5\u5b83\u4eec\u4e00\u5b9a\u662f\u5728\u975e\u5e38\u5bd2\u51b7\u7684\u73af\u5883\u4e2d\u5f62\u6210\u7684\u3002\u7136\u540e\u51b0\u7684\u592a\u9633\u8f90\u5c04\u4f1a\u4ea7\u751f\u90a3\u4e9b\u590d\u6742\u7684\u6709\u673a\u7269\u3002\u201d\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e24\u5757\u5ca9\u77f3\u975e\u5e38\u7ea2\u2014\u2014\u6bd4\u5c0f\u884c\u661f\u5e26\u4e2d\u770b\u5230\u7684\u4efb\u4f55\u5ca9\u77f3\u90fd\u8981\u7ea2\u3002\u867d\u7136\u5df2\u7ecf\u53d1\u73b0\u4e86\u5176\u4ed6\u7ea2\u8272\u5c0f\u884c\u661f\u7684\u521d\u6b65\u8ff9\u8c61\uff0c\u4f46\u8fd9\u4e24\u4e2a\u4f3c\u4e4e\u5f88\u7279\u522b\u3002\u8fd9\u4e00\u53d1\u73b0\u5982\u679c\u6b63\u786e\u7684\u8bdd\uff0c\u5c06\u4e3a\u65e9\u671f\u592a\u9633\u7cfb\u4e2d\u7684\u884c\u661f\u8fc1\u79fb\u63d0\u4f9b\u8bc1\u636e\uff0c\u7279\u522b\u662f\u652f\u6301\u4e00\u79cd\u79f0\u4e3a\u5c3c\u65af\u6a21\u578b\u7684\u60f3\u6cd5\uff0c\u571f\u661f\u3001\u5929\u738b\u661f\u548c\u6d77\u738b\u661f\u90fd\u5411\u5916\u79fb\u52a8\uff0c\u800c\u6728\u661f\u7a0d\u5fae\u5411\u5185\u79fb\u52a8\uff0c\u5386\u65f6\u6570\u4ebf\u5e74.\u8fd9\u4f1a\u6270\u4e71\u884c\u661f\u5f62\u6210\u8fc7\u7a0b\u4e2d\u9057\u7559\u4e0b\u6765\u7684\u5bcc\u542b\u6709\u673a\u7269\u7684\u5c0f\u884c\u661f\uff0c\u8ba9\u5b83\u4eec\u5728\u592a\u9633\u7cfb\u5468\u56f4\u55e1\u55e1\u4f5c\u54cd\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u53d1\u73b0\uff0c\u5bf9\u751f\u547d\u8d77\u6e90\u6709\u5f71\u54cd\uff0c\u201d\u5965\u4f2f\u683c\u535a\u58eb\u8bf4\u3002\u4eca\u5929\u8fd9\u4e9b\u5269\u4f59\u7684\u7269\u4f53\u4e2d\u7684\u5927\u591a\u6570\u88ab\u79f0\u4e3a\u8de8\u6d77\u738b\u661f\u7269\u4f53\uff0c\u5e76\u4e14\u5728\u6d77\u738b\u661f\u4e4b\u5916\u7684\u67ef\u4f0a\u4f2f\u5e26\u4e2d\u8fd0\u884c\u3002\u8bb8\u591a\u90fd\u662f\u7ea2\u8272\u7684\uff0c\u6bd4\u5982 Arrokoth\uff0cNASA \u7684\u65b0\u89c6\u91ce\u53f7\u4efb\u52a1\u5728 2019 \u5e74\u8fd1\u8ddd\u79bb\u62cd\u6444\u4e86\u8fd9\u5757\u5ca9\u77f3\u3002 203 Pompeja \u548c 269 Justitia \u4f3c\u4e4e\u90fd\u4e0e\u5b83\u4eec\u76f8\u5339\u914d\u3002\u672a\u53c2\u4e0e\u8be5\u8bba\u6587\u7684\u5317\u4e9a\u5229\u6851\u90a3\u5927\u5b66\u884c\u661f\u79d1\u5b66\u5bb6\u4e54\u4ec0\u00b7\u57c3\u9ed8\u91cc (Josh Emery) \u8bf4\uff1a\u201c\u4eba\u4eec\u4e00\u76f4\u5728\u8c08\u8bba\u6765\u81ea\u67ef\u4f0a\u4f2f\u5e26\u7684\u90e8\u5206\u5c0f\u884c\u661f\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u201d\u4ed6\u8bf4\uff0c\u8fd9\u9879\u7814\u7a76\u201c\u80af\u5b9a\u5411\u524d\u8fc8\u51fa\u4e86\u4e00\u6b65\u201d\uff0c\u4ee5\u5bfb\u627e\u652f\u6301\u8be5\u5047\u8bbe\u7684\u8bc1\u636e\u3002\n\u5e76\u975e\u6240\u6709\u4eba\u90fd\u5bf9\u6b64\u6df1\u4fe1\u4e0d\u7591\u3002\u83b1\u7ef4\u68ee\u535a\u58eb\u4e5f\u6ca1\u6709\u53c2\u4e0e\u8be5\u8bba\u6587\uff0c\u4ed6\u8bf4\u7269\u4f53\u5728\u63a5\u8fd1\u592a\u9633\u65f6\u5e94\u8be5\u53d8\u5f97\u4e0d\u90a3\u4e48\u7ea2\u3002\u5373\u4f7f\u5728\u6728\u661f\u8f68\u9053\u4e0a\u88ab\u6355\u83b7\u7684\u88ab\u79f0\u4e3a\u7279\u6d1b\u4f0a\u5c0f\u884c\u661f\uff0c\u88ab\u8ba4\u4e3a\u53ef\u80fd\u662f\u8de8\u6d77\u738b\u661f\u7684\u7269\u4f53\uff0c\u4e5f\u4e0d\u662f\u8fd9\u4e2a\u7ea2\u8272\u7684\u3002 \u201c\u8fd9\u4f3c\u4e4e\u4e0e\u6211\u4eec\u7684\u6a21\u578b\u4e0d\u4e00\u81f4\uff0c\u201d\u7f8e\u56fd\u5b87\u822a\u5c40\u9732\u897f\u4efb\u52a1\u7684\u8d1f\u8d23\u4eba\u5217\u7ef4\u68ee\u535a\u58eb\u8bf4\uff0c\u8be5\u4efb\u52a1\u8ba1\u5212\u4e8e 10 \u6708\u53d1\u5c04\u4ee5\u7814\u7a76\u6728\u661f\u7684\u7279\u6d1b\u4f0a\u6728\u9a6c\u3002 Marsset \u535a\u58eb\u540c\u610f\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u5b83\u4eec\u4f1a\u5982\u6b64\u7ea2\uff0c\u4f46\u8fd9\u53ef\u80fd\u4e0e\u5b83\u4eec\u88ab\u690d\u5165\u5c0f\u884c\u661f\u5e26\u6240\u9700\u7684\u65f6\u95f4\u6709\u5173\u3002\u6709\u4e9b\u6728\u9a6c\u4e5f\u53ef\u80fd\u662f\u7ea2\u8272\u7684\uff0c\u4f46\u8fd8\u6ca1\u6709\u88ab\u53d1\u73b0\u3002\u4e3a\u4e86\u771f\u6b63\u786e\u8ba4 203 Pompeja \u548c 269 Justitia \u7684\u8d77\u6e90\uff0c\u822a\u5929\u5668\u53ef\u80fd\u9700\u8981\u8bbf\u95ee\u5b83\u4eec\u3002\u8fd9\u6837\u7684\u4efb\u52a1\u6709\u53ef\u80fd\u8ba9\u6211\u4eec\u4e00\u77a5\u5916\u592a\u9633\u7cfb\uff0c\u4f46\u65e0\u9700\u82b1\u8d39\u5341\u5e74\u6216\u66f4\u957f\u65f6\u95f4\u98de\u5230\u90a3\u91cc\u3002 \u201c\u4f60\u53ef\u4ee5\u98de\u8d8a\u8fd9\u4e9b\u5947\u602a\u7684\u5c0f\u884c\u661f\u4e2d\u7684\u4e00\u4e2a\uff0c\u548c\u4e00\u4e2a\u66f4\u5178\u578b\u7684\u5c0f\u884c\u661f\u8fdb\u884c\u6bd4\u8f83\uff0c\u201d\u57c3\u200b\u200b\u9ed8\u91cc\u535a\u58eb\u8bf4\u3002 \u201c\u90a3\u5c06\u662f\u4e00\u6b21\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\u7684\u822a\u5929\u5668\u4efb\u52a1\u3002\u201d", "note_en": "Two red things are hiding in a part of the solar system where they shouldn\u2019t be.\n Scientists led by Sunao Hasegawa from JAXA, the Japanese space agency, reported in  The Astrophysical Journal Letters on Monday that two objects spotted in the asteroid belt between Mars and Jupiter appear to have originated beyond Neptune. The discoveries could one day provide direct evidence of the chaos that existed in the early solar system.\n \u201cIf true it would be a huge deal,\u201d says Hal Levison, a planetary scientist at the Southwest Research Institute in Colorado, who was not involved in the research.\n Earth\u2019s stellar neighborhood is fairly stable today. But 4 billion years ago, chaos reigned as the orbits of Jupiter and other giant planets beyond it may have shifted. The gravitational havoc caused by this planetary dance likely threw pieces of rock and ice all over the place.\n \u201cIt was very dynamic,\u201d said Karin \u00d6berg, an expert in solar system evolution from Harvard University who was not involved in the new study.\n Some of those rocks settled into the gap between Mars and Jupiter and became the asteroid belt. Most of the material is believed to be fairly similar hunks of inactive rock that failed to form planets.\n  They orbit at about 2.7 and 2.6 times the Earth-sun distance, well within the asteroid belt. 203 Pompeja, at about 70 miles across, appears to be structurally intact, whereas 269 Justitia, only 35 miles or so, is likely a fragment of a previous collision. Both have stable circular orbits, meaning they must have settled into this space long ago.\n Both also have an unusual color. Objects in the inner solar system tend to reflect more blue light because they are devoid of organic material \u2014 things like carbon and methane \u2014 whereas objects in the outer solar system are redder because they have a lot of organics, perhaps the building blocks of life on Earth.\n \u201cIn order to have these organics, you need to initially have a lot of ice at the surface,\u201d said Micha\u00ebl Marsset from the Massachusetts Institute of Technology, a co-author on the paper. \u201cSo they must have formed in a very cold environment. Then the solar irradiation of the ice creates those complex organics.\u201d\n These two rocks, as it turns out, are extremely red \u2014 more red than anything else seen in the asteroid belt. While tentative hints of other red asteroids have been found, these two appear to be special.\n The finding, if correct, would offer evidence for planetary migration in the early solar system, particularly in support of an idea called  the Nice Model, with Saturn, Uranus and Neptune all moving outward, and Jupiter inward slightly, over a few hundred million years. This would have perturbed organic-laden asteroids leftover from the formation of the planets, sending them pinging around the solar system.\n \u201cIt\u2019s an exciting discovery with implications for the origins of life,\u201d Dr. \u00d6berg said.\n Most of these leftover objects in the present day are known as trans-Neptunian objects and orbit in the Kuiper belt beyond Neptune. Many are red in color, like Arrokoth, the rock that NASA\u2019s New Horizons mission  got a close-up of in 2019. 203 Pompeja and 269 Justitia both appear to match them.\n \u201cPeople have been talking about some fraction of asteroids coming from the Kuiper belt for quite a while now,\u201d said Josh Emery, a planetary scientist from Northern Arizona University who was not involved in the paper. He said the research \u201cdefinitely takes a step\u201d toward finding evidence to support that hypothesis.\n Not everyone is convinced just yet. Dr. Levison, who was also not involved in the paper, says objects should become less red as they approach the sun. Even captured asteroids in Jupiter\u2019s orbit known as Trojans, thought to possibly be trans-Neptunian objects, aren\u2019t this red. \u201cIt seems to be inconsistent with our models,\u201d said Dr. Levison, who is the head of NASA\u2019s  Lucy mission, which is scheduled to launch in October to study Jupiter\u2019s Trojans.\n Dr. Marsset agrees that it\u2019s not clear why they would be so red, but it is possibly related to how long it took them to become implanted into the asteroid belt. Some Trojans may also be as red, but haven\u2019t been found yet.\n To truly confirm the origin of 203 Pompeja and 269 Justitia, a spacecraft would likely need to visit them. Such a mission could potentially offer a glimpse at the outer solar system, but without spending a decade or more to fly there.\n \u201cYou could flyby one of these strange asteroids, and a more typical asteroid for comparison,\u201d Dr. Emery said. \u201cThat would be a really compelling spacecraft mission.\u201d", "posttime": "2021-07-29 21:52:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ea2\u8272,objects,\u53ef\u80fd", "title": "\u5728\u5c0f\u884c\u661f\u5e26\u4e2d\u53d1\u73b0\u7ea2\u8272\u7269\u4f53\u3002\u4ed6\u4eec\u4e0d\u5e94\u8be5\u5728\u90a3\u91cc", "title_en": "Red Objects Were Found in the Asteroid Belt. They Shouldn\u2019t Be There", "transed": 1, "url": "https://www.nytimes.com/2021/07/28/science/red-asteroids-belt.html", "via": "", "real_tags": ["\u7ea2\u8272", "objects", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070250, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u6587\u7ae0\u6700\u8fd1\u4fc3\u4f7f\u4e00\u4f4d\u533f\u540d\u8bc4\u8bba\u8005\u5ba3\u79f0\u50cf\u6211\u8fd9\u6837\u7684\u4eba\u662f\u4e16\u754c\u7684\u9519\u3002\u54e6\u5feb\u4e50\uff01 \u2014\u2014\u7ec8\u4e8e\uff0c\u505a\u4e86\u8fd9\u4e48\u591a\u5e74\u7684\u6076\u4e8b\uff0c\u5f97\u5230\u4e86\u4e00\u4e9b\u8ba4\u53ef\uff01\u5174\u594b\u7684\u6211\u51b3\u5b9a\u5206\u4eab\u6211\u7ecf\u8fc7\u5b9e\u6218\u8003\u9a8c\u7684\u90aa\u6076\u6280\u5de7\u4e4b\u4e00\uff0c\u5b83\u4ece\u6765\u6ca1\u6709\u8ba9\u6211\u5931\u671b\u8fc7\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4e8b\u60c5\u662f\u6b63\u9762\u4ed6\u4eec\u8d62\uff0c\u53cd\u9762\u4f60\u8f93\u7684\u60c5\u51b5\u3002\u5728\u5bb9\u6613\u7684\u4e8b\u60c5\u4e0a\u5931\u8d25\u662f\u53ef\u803b\u7684\uff1b\u6210\u529f\u662f\u4e0d\u8d77\u773c\u7684\u3002\u5904\u7406\u56f0\u96be\u7684\u4e8b\u60c5\u8981\u597d\u5f97\u591a\u2014\u2014\u6b63\u9762\u662f\u4f60\u8d62\uff0c\u53cd\u9762\u662f\u8f93\u3002\u5931\u8d25\u662f\u4e0d\u5e78\u7684\uff0c\u4f46\u4e5f\u662f\u610f\u6599\u4e4b\u4e2d\u7684\uff1b\u6210\u529f\u4f7f\u4f60\u6210\u4e3a\u82f1\u96c4\u3002\u8ba4\u771f\u5bf9\u5f85\u8fd9\u4ef6\u4e8b\uff0c\u56e0\u4e3a\u5b83\u6eda\u96ea\u7403\u3002\u5728\u201c\u56f0\u96be\u201d\u7684\u4e8b\u60c5\u4e0a\u5de5\u4f5c\u7684\u4eba\u4f1a\u5f97\u5230\u5f88\u591a\u5e2e\u52a9\u548c\u8d44\u6e90\uff0c\u4ece\u800c\u66f4\u5bb9\u6613\u6210\u529f\u2014\u2014\u4e5f\u66f4\u5bb9\u6613\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u201c\u56f0\u96be\u201d\u7684\u4e8b\u60c5\u4e0a\u3002\u505a\u201c\u7b80\u5355\u201d\u4efb\u52a1\u7684\u4eba\u5f97\u4e0d\u5230\u5e2e\u52a9\uff0c\u6240\u4ee5\u66f4\u96be\u6210\u529f\u3002\u5230\u5904\u90fd\u662f\u5f15\u53f7\uff0c\u56e0\u4e3a\u5f53\u7136\u91cd\u8981\u7684\u662f\u611f\u77e5\uff0c\u800c\u4e0d\u662f\u5b83\u5230\u5e95\u6709\u591a\u96be\u6216\u6709\u591a\u5bb9\u6613\u3002\u6700\u7cdf\u7cd5\u7684\u5de5\u4f5c\u662f\u90a3\u4e9b\u88ab\u8ba4\u4e3a\u5bb9\u6613\u7684\u56f0\u96be\u7684\u4e8b\u60c5\u2014\u2014\u56f0\u96be\u7684\u201c\u5bb9\u6613\u201d\u7684\u4e8b\u60c5\u3002\u6700\u597d\u7684\u4e8b\u60c5\u662f\u7b80\u5355\u7684\u201c\u56f0\u96be\u201d\u3002\u6211\u591a\u5e74\u6765\u5bf9\u4f4e\u7ea7\u7f16\u7a0b\u7684\u504f\u7231\uff0c\u90e8\u5206\u662f\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u56f0\u96be\u7684\u9886\u57df\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u9700\u8981\u4e00\u70b9\u77e5\u8bc6\u548c\u5927\u91cf\u7eaa\u5f8b\u2014\u2014\u4f46\u4e0d\u9700\u8981\u4efb\u4f55\u51fa\u8272\u7684\u6280\u80fd\u3002 \uff08\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5f88\u591a\u4eba\u5bb3\u6015\u4f4e\u7ea7\u7f16\u7a0b\uff1f\u53ea\u662f\u56e0\u4e3a\u5b83\u6700\u521d\u51e0\u6b21\u54ac\u4f60\u6709\u591a\u96be\u3002\u611f\u5230\u75db\u82e6\u548c\u9000\u7f29\u7684\u4eba\u5c0a\u91cd\u90a3\u4e9b\u5df2\u7ecf\u8d85\u8d8a\u5b83\u5e76\u8fbe\u5230\u751f\u4ea7\u529b\u7684\u4eba\u3002\u73b0\u5728\u4f60\u77e5\u9053\u4eba\u4eec\u4e3a\u4ec0\u4e48\u63a5\u53d7\u80af\u00b7\u6c64\u666e\u68ee\u548c\u83b1\u7eb3\u65af\u00b7\u6258\u74e6\u5179\u4e4b\u7c7b\u7684\u72d7\u5c4e\uff0c\u7136\u540e\u4e5e\u6c42\u66f4\u591a\u3002\uff09\u771f\u6b63\u90aa\u6076\u7684\u5730\u65b9\u4e0d\u662f\u5f53\u4e00\u4e2a\u52c7\u6562\u7684\u884c\u52a8\u8005\u51b3\u5b9a\u8868\u73b0\u5f97\u50cf\u6258\u74e6\u5179\u65f6\u3002\u8fd9\u6bd4\u90aa\u6076\u66f4\u611a\u8822\u3002\u6210\u4e3a Torvalds \u7684\u4eba\u4f1a\u4fa5\u5e78\u6210\u529f\uff0c\u4f46\u5b83\u603b\u662f\u9700\u8981\u4e00\u4e9b\u5584\u610f\uff0c\u56e0\u6b64\u6700\u7ec8\u8fd8\u662f\u8981\u82b1\u94b1\u3002\u6240\u4ee5\u76ee\u6807\u5bfc\u5411\u7684\u6076\u4eba\u603b\u662f\u8bd5\u56fe\u8868\u73b0\u51fa\u6700\u597d\u7684\u884c\u4e3a\u3002\u4e0d\uff0c\u5f53\u4f60\u8ba9\u4ed6\u4eec\u5931\u8d25\u65f6\uff0c\u8fd9\u624d\u662f\u771f\u6b63\u90aa\u6076\u7684\u5730\u65b9\u3002\u5f53\u4ed6\u4eec\u6765\u627e\u4f60\u65f6\uff0c\u8ba4\u4e3a\u8fd9\u5f88\u5bb9\u6613\uff0c\u800c\u4f60\u77e5\u9053\u8fd9\u5b9e\u9645\u4e0a\u5f88\u96be\uff0c\u4f60\u62d2\u7edd\u4e86\u4ed6\u4eec\uff0c\u8ba9\u4ed6\u4eec\u5931\u8d25\u4e86\u51e0\u6b21\uff0c\u7136\u540e\u4f60\u7b49\u5230\u4ed6\u4eec\u4ee5\u91cd\u65b0\u8c03\u6574\u7684\u6001\u5ea6\u56de\u6765\u65f6\u2014\u2014\u90a3\u662f\u90aa\u6076\u7684\u3002\n\u5728\u8fd9\u91cc\uff0c\u6076\u4eba\u9700\u8981\u53d6\u5f97\u5fae\u5999\u7684\u5e73\u8861\uff0c\u7262\u8bb0\u6076\u4eba\u7684\u9ec4\u91d1\u6cd5\u5219\uff1a\u5728\u56f0\u96be\u7684\u201c\u5bb9\u6613\u201d\u7684\u4e8b\u60c5\u4e0a\u5de5\u4f5c\u2014\u2014\u6240\u6709\u7684\u9ebb\u70e6\uff0c\u6ca1\u6709\u4fe1\u7528\u2014\u2014\u5bf9\u4f60\u6765\u8bf4\u5c06\u662f\u53ef\u6015\u7684\u3002\u4f60\u4f1a\u4f53\u4f1a\u5230\u4e00\u4e2a\u597d\u4eba\u77ed\u6682\u800c\u60b2\u60e8\u7684\u751f\u6d3b\u3002\u4f46\u662f\uff0c\u5982\u679c\u8fd9\u4ef6\u4e8b\u5982\u6b64\u91cd\u8981\u4ee5\u81f3\u4e8e\u5931\u8d25\u4f1a\u5371\u53ca\u7ec4\u7ec7\uff0c\u90a3\u4e48\u4e5f\u8bb8\u60a8\u5e94\u8be5\u6210\u4e3a\u884c\u5584\u8005\u5e76\u81ea\u8d39\u4f7f\u4ed6\u4eec\u514d\u4e8e\u8bef\u89e3\u3002\u53ef\u80fd\u662f\u3002\u4e5f\u8bb8\u4e0d\u662f\u3002\u4e00\u5b9a\u8981\u8003\u8651\u6e05\u695a\u3002\u7ed3\u679c\u662f\uff0c\u6709\u65f6\u4f5c\u6076\u8005\u4f1a\u6210\u4e3a\u884c\u5584\u8005\uff0c\u4f46\u60a8\u5e94\u8be5\u77e5\u9053\u8fd9\u5bf9\u60a8\u7684\u5065\u5eb7\u6709\u5bb3\u3002\u6709\u65f6\uff0c\u60a8\u65e0\u6cd5\u907f\u514d\u505a\u4e00\u4e9b\u201c\u7b80\u5355\u201d\u7684\u4e8b\u60c5\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u4e00\u4e2a\u6709\u8da3\u7684\u7b56\u7565\u662f\u5c06\u7b80\u5355\u7684\u4e8b\u60c5\u63a8\u8fdf\u5230\u53d8\u5f97\u7d27\u6025\u4e3a\u6b62\u3002\u8fd9\u4e00\u6b21\u5b8c\u6210\u4e86\u4e24\u4ef6\u4e8b\uff1a\u7d27\u6025\u7684\u4e8b\u60c5\u81ea\u52a8\u53d8\u5f97\u66f4\u96be\uff0c\u4e00\u4e2a\u5306\u5fd9\u7684\u4eba\u66f4\u91cd\u8981\u3002\u505a\u7684\u8d8a\u665a\uff0c\u8d8a\u5bb9\u6613\u5f97\u5230\u5e2e\u52a9\uff08\u540c\u65f6\u4fdd\u6301\u201c\u82f1\u96c4\u201d\u7684\u5730\u4f4d\u5728\u6240\u6709\u4fc3\u6210\u8fd9\u4ef6\u4e8b\u7684\u4eba\u7684\u4e2d\u5fc3\u3002\uff09\u5728\u65f6\u95f4\u538b\u529b\u4e0b\uff0c\u8303\u56f4\u7f29\u5c0f\uff0c\u4f7f\u4ee5\u524d\u7684\u201c\u5bb9\u6613\u201d\u548c\u73b0\u5728\u6b63\u5f0f\u201c\u56f0\u96be\u201d\u7684\u4e8b\u60c5\u771f\u7684\u66f4\u5bb9\u6613\u3002\u8fd9\u5bf9\u4e8e\u771f\u6b63\u6076\u5fc3\u4f46\u4e0d\u53ef\u907f\u514d\u7684\u5de5\u4f5c\u7279\u522b\u6709\u7528\u3002\n\u4f46\u8fd9\u662f\u4e00\u4e2a\u7b56\u7565\uff0c\u56e0\u4e3a\u5c06\u4e8b\u60c5\u63a8\u8fdf\u5230\u53d8\u5f97\u7d27\u6025\u65f6\u662f\u516c\u7136\u90aa\u6076\u7684\u3002 \uff08\u9003\u907f\u7b80\u5355\u7684\u4e8b\u60c5\u4e0d\u662f\u2014\u2014\u4e3a\u4ec0\u4e48\uff0c\u5bfb\u627e\u66f4\u96be\u7684\u5de5\u4f5c\u662f\u7231\u56fd\u548c\u82f1\u96c4\u4e3b\u4e49\u7684\uff01\uff09\u4e3a\u4e86\u9003\u907f\u63a8\u8fdf\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u501f\u53e3\uff1a\u6216\u8005\u751a\u81f3\u4f60\u771f\u7684\u4f4e\u4f30\u4e86\u56f0\u96be\uff0c\u56e0\u6b64\u5f88\u9057\u61be\uff0c\u63a8\u8fdf\u4e86\u592a\u591a\u2013 \u4f60\u5f88\u62b1\u6b49\u3002 \uff08\u8fd9\u6700\u540e\u4e00\u4e2a\u501f\u53e3\u7684\u7f3a\u70b9\u662f\u4f60\u5fc5\u987b\u627f\u8ba4\u9519\u8bef\u3002\u4f46\u5982\u679c\u7d27\u8feb\u6027\u4f1a\u4f7f\u8303\u56f4\u53d8\u5c0f\uff0c\u9519\u8bef\u4e5f\u4f1a\u53d8\u5c0f\u3002\uff09\u4f60\u8981\u9632\u6b62\u7684\u4e00\u4ef6\u4e8b\u662f\u4eba\u4eec\u5b66\u4f1a\u66f4\u65e9\u5730\u63d0\u9192\u4f60\u3002\u5f53\u4ed6\u4eec\u8fdf\u5230\u65f6\uff0c\u5b9e\u73b0\u5b83\u7684\u65b9\u5f0f\u975e\u5e38\u597d\u3002\u5982\u679c\u4eba\u4eec\u56e0\u4e3a\u63d0\u9192\u592a\u665a\u800c\u611f\u5230\u53d7\u5230\u60e9\u7f5a\uff0c\u4ed6\u4eec\u4e0b\u6b21\u4f1a\u65e9\u70b9\u6765\uff0c\u5e76\u4e14\u6000\u7740\u62a5\u590d\u7684\u5fc3\u60c5\uff0c\u6240\u4ee5\u4f1a\u6709\u66f4\u591a\u4e0d\u5fc5\u8981\u7684\u4efb\u52a1\u3002\u4f46\u5982\u679c\u4ed6\u4eec\u8fdf\u5230\u4e86\uff0c\u800c\u4f60\u6025\u5207\u5730\u201c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c3d\u529b\u505a\u5230\u6700\u597d\u201d\uff0c\u4f60\u4e0d\u4ec5\u5c06\u81ea\u5df1\u4f5c\u4e3a\u7231\u56fd\u82f1\u96c4\u7f6e\u4e8e\u805a\u5149\u706f\u4e0b\uff0c\u800c\u4e14\u5c06\u5065\u5fd8\u7684\u7f6a\u9b41\u7978\u9996\u4ece\u805a\u5149\u706f\u4e0b\u79fb\u5f00\u3002\u6240\u4ee5\u4ed6\u4eec\u4f1a\u5bf9\u4e8b\u4ef6\u5f62\u6210\u7f8e\u597d\u7684\u56de\u5fc6\uff0c\u800c\u4e0d\u662f\u4e86\u89e3\u65e9\u70b9\u5230\u6765\u7684\u4ef7\u503c\u2014\u2014\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u4f7f\u63a8\u8fdf\u7b56\u7565\u76f8\u5bf9\u5b89\u5168\u7684\u4e00\u4ef6\u4e8b\u662f\u7ba1\u7406\u5c42\u5bf9\u4eba\u4eec\u73a9\u5b83\u7684\u60f3\u6cd5\u611f\u5230\u9707\u60ca\uff0c\u5982\u4ee5\u4e0b\u73b0\u5b9e\u751f\u6d3b\u5bf9\u8bdd\u4e2d\u6240\u793a\uff1a \u80e1\u8a00\u4e71\u8bed\u7684\u7ba1\u7406\u987e\u95ee\uff1a\u8bb8\u591a\u7ec4\u7ec7\u90fd\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4ed6\u4eec\u53ea\u5728\u5de5\u4f5c\u7d27\u6025\u7684\u4e8b\u60c5\u4ee5\u91cd\u8981\u4f46\u4e0d\u592a\u7d27\u6025\u7684\u4e8b\u60c5\u4e3a\u4ee3\u4ef7\u3002\u4e0b\u7ea7\u5996\u5b7d\u7ecf\u7406\uff08\u4e00\u65f6\u5931\u7b56\uff09\uff1a\u5f53\u7136\u554a\uff01\u6211\u5b9e\u9645\u4e0a\u63a8\u8fdf\u4e86\u4e8b\u60c5\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97\u4f18\u5148\u6743\u3002\u770b\uff1f\u6709\u65f6\uff0c\u5982\u679c\u4f60\u5f53\u9762\u8bf4\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u76f8\u4fe1\u3002\u6240\u4ee5\u4ed6\u4eec\u4e0d\u592a\u53ef\u80fd\u6000\u7591\u4f60\u3002 \uff08\u5411\u6211\u6c47\u62a5\u7684\u4eba\u4f1a\u73a9\u63a8\u8fdf\u7684\u7b56\u7565\u5417\uff1f\u6709\u65f6\u4ed6\u4eec\u4f1a\u73a9\uff0c\u6211\u5e76\u4e0d\u56e0\u6b64\u800c\u6028\u6068\u4ed6\u4eec\uff1b\u4ed6\u4eec\u7684\u4f18\u5148\u4e8b\u9879\u4e0d\u662f\u6211\u7684\u3002\u4f46\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u671f\u5f85\u5f88\u591a\u6028\u6068\u2014\u2014\u8fd9\u5b9e\u9645\u4e0a\u662f\u53db\u56fd\u7f6a\u2013 \u6240\u4ee5\u4f60\u5e94\u8be5\u6709\u5408\u7406\u7684\u5426\u8ba4\u3002\uff09\n\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u60a8\u7684\u751f\u4ea7\u529b\u53d6\u51b3\u4e8e\u60a8\u9009\u62e9\u4ece\u4e8b\u7684\u5de5\u4f5c\u3002\u5c06\u88ab\u8ba4\u4e3a\u5bb9\u6613\u7684\u4e8b\u60c5\u6392\u9664\u5728\u8be5\u5217\u8868\u4e4b\u5916\u3002\u5f53\u4f60\u505a\u4e0d\u5230\u7684\u65f6\u5019\uff0c\u63a8\u8fdf\u4e00\u4ef6\u201c\u5bb9\u6613\u201d\u7684\u4e8b\u60c5\u4f1a\u8ba9\u5b83\u53d8\u5f97\u201c\u66f4\u96be\u201d\u548c\u66f4\u5c0f\u3002\u540c\u4e00\u4f5c\u8005\u7684\u53e6\u4e00\u672c\u4e66\u201c\u6709\u70b9\u90aa\u6076\u201d\u5bf9\u4f60\u6765\u8bf4\u4e5f\u5e94\u8be5\u5f88\u6709\u8da3\u3002\u4fdd\u6301\u90aa\u6076\u3002\u542c\u8bf4\u8fc7\uff0c\u6ca1\u6709\u8bfb\u8fc7/\u770b\u5230\u8fc7\uff0c\u6211\u4e0d\u662f\u7814\u7a76\u4eba\u5458\u7684\u7406\u8bba\uff08\u5728\u8fd9\u91cc\u6211\u53ef\u4ee5\u653e\u4e00\u4e2a\u60b2\u4f24\u6216\u5feb\u4e50\u7684\u7b11\u8138\u3002\uff09\u8fd9\u6709\u5173\u7cfb\u5417\uff1f \uff08\u8fd9\u91cc\u6211\u8bf4\u7684\u662f\u5bf9\u4f60\u7684\u5de5\u4f5c\u7684\u770b\u6cd5\uff0c\u800c\u4e0d\u662f\u4f60\u7684\u5b9e\u9645\u5de5\u4f5c\uff1b\u6211\u6709\u70b9\u5e0c\u671b\u8ba8\u8bba\u7814\u7a76\u7684\u4eba\u4e0d\u8981\u53bb\u90a3\u91cc\uff0c\u6216\u8005\u81f3\u5c11\u4e3b\u8981\u8ba8\u8bba\u5176\u4ed6\u4e8b\u60c5\u3002\uff09\u6211\u4e0d\u8ba4\u8bc6\u4f60\uff0c\u4f46\u4ece\u9605\u8bfb\u60a8\u7684\u535a\u5ba2\uff0c\u6211\u8ba4\u4e3a\u60a8\u548c\u6c49\u660e\u5728\u9ad8\u5c42\u6b21\u4e0a\u6709\u76f8\u4f3c\u7684\u65b9\u6cd5\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8003\u8651\u4e00\u4e0b\u4ed6\u6f14\u8bb2\u7684\u6458\u5f55\uff1a\u73b0\u5728 Alan Chynoweth \u63d0\u5230\u6211\u66fe\u7ecf\u5728\u7269\u7406\u684c\u4e0a\u5403\u996d\u3002\u6211\u548c\u6570\u5b66\u5bb6\u4e00\u8d77\u5403\u996d\uff0c\u6211\u53d1\u73b0\u6211\u5df2\u7ecf\u77e5\u9053\u4e86\u76f8\u5f53\u591a\u7684\u6570\u5b66\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5e76\u6ca1\u6709\u5b66\u5230\u592a\u591a\u3002\u6b63\u5982\u4ed6\u6240\u8bf4\uff0c\u7269\u7406\u684c\u662f\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u5730\u65b9\uff0c\u4f46\u6211\u8ba4\u4e3a\u4ed6\u5938\u5927\u4e86\u6211\u7684\u8d21\u732e\u3002\u542c Shockley\u3001Brattain\u3001Bardeen\u3001JB Johnson\u3001Ken McKay \u548c\u5176\u4ed6\u4eba\u7684\u6f14\u8bb2\u975e\u5e38\u6709\u8da3\uff0c\u6211\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8bfa\u8d1d\u5c14\u5956\u6765\u4e86\uff0c\u5347\u804c\u6765\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6e23\u6ed3\u3002\u6ca1\u6709\u4eba\u60f3\u8981\u5269\u4e0b\u7684\u3002\u597d\u5427\uff0c\u548c\u4ed6\u4eec\u4e00\u8d77\u5403\u996d\u4e5f\u6ca1\u6709\u7528\uff01\u9910\u5385\u7684\u53e6\u4e00\u8fb9\u662f\u4e00\u5f20\u5316\u5b66\u684c\u3002\u6211\u66fe\u4e0e\u5176\u4e2d\u4e00\u4f4d\u7814\u7a76\u5458 Dave McCall \u5171\u4e8b\uff1b\u6b64\u5916\uff0c\u4ed6\u5f53\u65f6\u6b63\u5728\u5411\u6211\u4eec\u7684\u79d8\u4e66\u6c42\u7231\u3002\u6211\u8d70\u8fc7\u53bb\u8bf4\uff1a\u201c\u4f60\u4ecb\u610f\u6211\u52a0\u5165\u4f60\u5417\uff1f\u201d\u4ed6\u4eec\u4e0d\u80fd\u62d2\u7edd\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u548c\u4ed6\u4eec\u4e00\u8d77\u5403\u996d\u3002\u6211\u5f00\u59cb\u95ee\uff0c\u201c\u4f60\u6240\u5728\u9886\u57df\u7684\u91cd\u8981\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u201d\u5927\u7ea6\u4e00\u5468\u540e\uff0c\u201c\u4f60\u5728\u89e3\u51b3\u4ec0\u4e48\u91cd\u8981\u95ee\u9898\uff1f\u201d\u53c8\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6709\u4e00\u5929\u6211\u8fdb\u6765\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u6240\u505a\u7684\u4e8b\u60c5\u5e76\u4e0d\u91cd\u8981\uff0c\u800c\u4e14\u5982\u679c\u4f60\u8ba4\u4e3a\u5b83\u4e0d\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u4f60\u4e3a\u4ec0\u4e48\u8981\u5728\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u5462\uff1f\u201d\u5728\u90a3\u4e4b\u540e\u6211\u6ca1\u6709\u53d7\u5230\u6b22\u8fce\uff1b\u6211\u5f97\u627e\u4e2a\u4eba\u4e00\u8d77\u5403\u996d\uff01\u90a3\u662f\u5728\u6625\u5929\u3002\u79cb\u5929\uff0c\u6234\u592b\u00b7\u9ea6\u8003\u5c14 (Dave McCall) \u5728\u5927\u5385\u91cc\u62e6\u4f4f\u6211\u8bf4\uff1a\u201c\u6c49\u660e\uff0c\u4f60\u7684\u90a3\u53e5\u8bdd\u6df1\u6df1\u523a\u75db\u4e86\u6211\u3002\u6211\u6574\u4e2a\u590f\u5929\u90fd\u5728\u60f3\uff0c\u5373\u6211\u6240\u5728\u9886\u57df\u7684\u91cd\u8981\u95ee\u9898\u662f\u4ec0\u4e48\u3002\u6211\u6ca1\u6709\u6539\u53d8\u6211\u7684\u7814\u7a76\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u5f88\u503c\u5f97\u3002\u201d\u6211\u8bf4\uff0c\u201c\u8c22\u8c22\u4f60\u6234\u592b\uff0c\u201d\u7136\u540e\u7ee7\u7eed\u3002\u6211\u6ce8\u610f\u5230\u51e0\u4e2a\u6708\u540e\u4ed6\u88ab\u4efb\u547d\u4e3a\u90e8\u95e8\u8d1f\u8d23\u4eba\u3002\u524d\u51e0\u5929\u6211\u6ce8\u610f\u5230\u4ed6\u662f\u7f8e\u56fd\u56fd\u5bb6\u5de5\u7a0b\u9662\u9662\u58eb\u3002\u6211\u6ce8\u610f\u5230\u4ed6\u6210\u529f\u4e86\u3002\u6211\u4ece\u672a\u542c\u8bf4\u8fc7\u79d1\u5b66\u754c\u548c\u79d1\u5b66\u754c\u63d0\u5230\u7684\u90a3\u5f20\u684c\u5b50\u4e0a\u5176\u4ed6\u4efb\u4f55\u4eba\u7684\u540d\u5b57\u3002\u4ed6\u4eec\u65e0\u6cd5\u81ea\u95ee\uff1a\u201c\u6211\u6240\u5728\u9886\u57df\u7684\u91cd\u8981\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u201d\n\u54e6\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u542c\u8d77\u6765\u592a\u597d\u4e86\uff0c\u6211\u53ef\u80fd\u4f1a\u8d5e\u7f8e\u81ea\u5df1\u6211\u662f\u90a3\u4e2a\u4eba\u7684 5%\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4e0d\u662f\u90a3\u4e2a\u4eba\uff0c\u4e24\u6b21\uff1a*\u9996\u5148\u6211\u5728\u8fd9\u91cc\u8ba8\u8bba\u7684\u662f\u5bfb\u627e\u201c\u786c\u201d\u4e8b\u60c5\u2014\u2014\u90a3\u4e9b\u88ab\u8ba4\u4e3a\u662f\u56f0\u96be\u7684\uff0c\u8fd9\u4e0e\u91cd\u8981\u4e0d\u540c\uff08\u5373\u4f7f\u201c\u56f0\u96be\u201d\u5b9e\u9645\u4e0a\u5f88\u96be\uff0c\u4e5f\u4e0d\u4e00\u6837\u3002\uff09\u6211\u660e\u786e\u5730\u8bf4\uff0c\u6211\u771f\u8bda\u5730\u76f8\u4fe1\uff0c\u901a\u5e38\u4f60\u4e0d\u60f3\u5de5\u4f5c\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u88ab\u8ba4\u4e3a\u662f\u5bb9\u6613\u7684\uff0c\u800c\u4e14\u5bf9\u4f60\u6765\u8bf4\u6ca1\u6709\u4ec0\u4e48\uff0c\u800c\u4e14\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u5bb9\u6613\u7684\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u5f88\u96be\u6210\u529f\uff1b\u6211\u5728\u90a3\u91cc\u8bf4\u662f\u7684\uff0c\u5982\u679c\u5b83\u771f\u7684\u5f88\u91cd\u8981\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u53bb\u505a\uff0c\u6211\u4f1a\u8865\u5145\u8bf4\uff0c\u6709\u65f6\u4f60\u4f1a\u53bb\u505a\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u4ee5\u540e\u88ab\u8ba4\u4e3a\u662f\u56f0\u96be\u548c\u503c\u5f97\u7684\uff0c\u4f46\u8fd9\u4e9b\u662f\u4f8b\u5916\uff0c\u800c\u4e0d\u662f\u89c4\u5219\u2013 \u81f3\u5c11\u4e0d\u662f\u6211\u7684\u89c4\u5219\u3002 * ...\u5176\u6b21\uff0c\u6211\u7ecf\u5e38\u89c9\u5f97\u6211\u6ca1\u6709\u8db3\u591f\u7684\u80fd\u529b\u6765\u89e3\u51b3\u771f\u6b63\u91cd\u8981\u7684\u95ee\u9898\uff08\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u7684\u501f\u53e3\u4e4b\u4e00\u662f\u6211\u771f\u7684\u5f88\u96be\u4e13\u6ce8\u4e8e\u4efb\u4f55\u4e00\u4ef6\u4e8b\uff0c\u56e0\u4e3a\u6211\u88ab\u65e0\u6570\u6b21\u5377\u5165\u5176\u4e2d\u4e00\u76f4\u5728\u6307\u5bfc\uff1b\u4f46\u8fd9\u662f\u4e00\u4e2a\u501f\u53e3\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6211\u7279\u610f\u9009\u62e9\u5e7f\u5ea6\u800c\u4e0d\u662f\u6df1\u5ea6\uff0c\u56e0\u4e3a\u6df1\u5ea6\u94bb\u63a2\u9700\u8981\u592a\u591a\u7684\u9885\u9aa8\u9a6c\u529b\u3002\uff09\u6240\u4ee5\u6211\u4e3b\u8981\u505a\u7684\u662f\uff08A\uff09\u5728\u5927\u90e8\u5206\u6df1\u5ea6\u4e0a\u4f9d\u9760\u5176\u4ed6\u4eba(B) \u5bf9\u4e8e\u6211\u6700\u76f4\u63a5\u53c2\u4e0e\u7684\u9886\u57df\uff0c\u6211\u9009\u62e9\u201c\u70b9\u7403\u201d\u2014\u2014\u8fd9\u4e9b\u5f88\u91cd\u8981\uff0c\u5f88\u591a\u4f18\u79c0\u7684\u7403\u5458\u4f1a\u6bd4\u6211\u505a\u5f97\u66f4\u7cdf\uff0c\u56e0\u4e3a\u6211\u5728\u5fc3\u7406\u4e0a\u5f88\u9002\u5408\u5b83\u3002\u4f46\u662f\u70b9\u7403\u7c7b\u578b\u7684\u5de5\u4f5c\u5728\u884c\u4e1a\u4e2d\u6bd4\u5728\u5b66\u672f\u754c\u66f4\u666e\u904d\uff0c\u4e5f\u66f4\u53d7\u91cd\u89c6\u3002\u6240\u4ee5\u8fd9\u662f\u6211\u4e0d\u662f\u6c49\u660e\u7684\u53e6\u4e00\u90e8\u5206\u3002\u7ed3\u679c\u662f\u6211\u901a\u5e38\u65e2\u592a\u90aa\u6076\u53c8\u592a\u611a\u8822\uff0c\u65e0\u6cd5\u53bb\u8ffd\u6c42\u91cd\u8981\u7684\u4e1c\u897f\uff1b\u6211\u4f1a\u81ea\u9e23\u5f97\u610f\u5730\u8bf4\uff0c\u6709\u65f6\u6211\u4f1a\u505a\u4e00\u4e9b\u201c\u91cd\u8981\u201d\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u5b66\u8005\u5728\u8c08\u8bba\u5b66\u672f\u9886\u57df\u65f6\u4f1a\u4f7f\u7528\u7684\u4e00\u6837\u2014\u2014\u6709\u65f6\u6211\u5728\u505a\u4e00\u4e9b\u8d85\u524d\u7684\u4e8b\u60c5\uff0c\u6216\u8005\u8ba9\u6211\u4eec\u8bf4\u5728\u6559\u79d1\u4e66\u8def\u5f84\u4e4b\u5916.\u4f46\u518d\u8bf4\u4e00\u6b21\uff0c\u8bf4\u8fd9\u662f 5% \u7684\u65f6\u95f4\u662f\u5728\u8d5e\u7f8e\u6211\u3002\u795d\u8d3a TPU \u516c\u544a BTW\u3002 \uff08\u51fa\u4e8e\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0\uff0c\u6211\u907f\u514d\u5bf9\u6b64\u53d1\u8868\u8bc4\u8bba\uff0c\u4f46\u80fd\u591f\u8fdb\u884c\u7814\u7a76\u5e76\u516c\u5f00\u5ba3\u5e03\u8fd9\u662f\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5\u3002\uff09\u5f88\u9ad8\u5174\u77e5\u9053 H \u662f\u540c\u4e00\u4e2a\u4eba\uff0c\u8ddd\u79bb\u7684\u540d\u79f0\u5c31\u662f\u4ee5\u8fd9\u4e2a\u540d\u5b57\u547d\u540d\u7684\u3002\u4ed6\u7684\u540d\u5b57\u5de7\u5408\u5730\u51fa\u73b0\u5728\u6211\u6628\u5929\u6b63\u5728\u7814\u7a76\u7684\u201c\u7845\u8c37\u201d\u7406\u67e5\u5fb7\u7f16\u5199\u7684\u6df7\u6dc6\u4ee3\u7801\u4e2d\uff1a\u55ef\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u5982\u4f55\u9605\u8bfb\u201c\u91cd\u8981\u201d\u3002\u6211\u8ba4\u4e3a\u4ed6\u7684\u201c\u91cd\u8981\u201d\u548c\u4f60\u7684\u201c\u542c\u8d77\u6765\u5f88\u96be\u201d\u4e00\u6837\u3002\u6211\u60f3\u8fd9\u662f\u60a8\u58f0\u79f0\u8981\u89e3\u51b3\u7684\u95ee\u9898\u7684\u8d85\u96c6\uff0c\u56e0\u4e3a\u60a8\u58f0\u79f0\u8981\u89e3\u51b3\u201c\u542c\u8d77\u6765\u5f88\u96be\uff0c\u5f88\u5bb9\u6613\u201d\u7684\u95ee\u9898\uff0c\u800c\u6c49\u660e\u5219\u6ca1\u6709\u8d44\u683c\u3002\n\u56de\u590d\uff1aTPU \u7684\u4e1c\u897f\uff0c\u8c22\u8c22\uff01\u867d\u7136\u6211\u8ba4\u4e3a\u90a3\u53ea\u662f\u5728\u6b63\u786e\u7684\u65f6\u95f4\u51fa\u73b0\u5728\u6b63\u786e\u7684\u5730\u65b9\u7684\u95ee\u9898\u3002\u78b0\u5de7\u6211\u52a0\u5165\u4e86\u8c37\u6b4c\uff0c\u5f53\u65f6\u90a3\u4e2a\u9879\u76ee\u6b63\u4ece\u4e00\u4e2a 20% \u7684\u9879\u76ee\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u5168\u804c\u9879\u76ee\uff0c\u6240\u4ee5\u81ea\u4ece\u6211\u662f\u7b2c\u4e00\u4e2a\u96c7\u5458\u4ee5\u6765\uff0c\u6211\u5fc5\u987b\u505a\u5f88\u591a\u6709\u8da3\u7684\u4e8b\u60c5\uff08\u9664\u4e86\u90a3\u4e2a\u63d0\u51fa\u8fd9\u4e2a\u60f3\u6cd5\u7684\u4eba\uff09\u5f53\u7136\u662f\uff09\u3002\u4f3c\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5728\u5206\u4eab\u8fd9\u7bc7\u6587\u7ae0\u63d0\u9192\u4ed6\u4eec\u7684\u4e1c\u897f\uff0c\u6211\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002 \u300a\u666e\u7279\u5b9a\u5f8b\u4e0e\u6210\u529f\u7684\u6280\u672f\u5b98\u50da\u300b\u4e00\u4e66\u5145\u6ee1\u4e86\u8fd9\u6837\u7684\u90aa\u6076\u79d8\u8bc0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u672c\u4e66\u66f4\u8fdb\u4e00\u6b65\uff1a\u5176\u4e2d\u4e00\u9879\u5efa\u8bae\u662f\u5c06\u5371\u673a\u7ea7\u522b\u63d0\u9ad8\u5230\u4f7f\u664b\u5347\u7387\u6700\u5927\u5316\u7684\u6b63\u786e\u70b9\u3002\u5982\u679c\u5931\u8d25\u8feb\u5728\u7709\u776b\uff0c\u8fd9\u672c\u4e66\u63d0\u9192\u201c\u521b\u65b0\u7ec4\u7ec7\u538c\u6076\u5c0f\u5931\u8d25\uff0c\u5956\u52b1\u5927\u5931\u8d25\u201d\uff0c\u56e0\u6b64\u7406\u6027\u7684\u884c\u52a8\u65b9\u9488\u662f\u5c06\u5931\u8d25\u5c3d\u53ef\u80fd\u5730\u653e\u5927\u3002\u4e3a\u4e86\u5236\u9020\u5371\u673a\u800c\u6210\u4e3a\u82f1\u96c4\uff0c\u7cfb\u7edf\u5730\u505a\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5de5\u4f5c\u786e\u5b9e\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u7b56\u7565\uff0c\u81f3\u5c11\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\u592a\u90aa\u6076\u4e86\uff1b\u6211\u8ba4\u4e3a\uff0c\u4e00\u4e2a\u5065\u5eb7\u7684\u7ec4\u7ec7\uff0c\u5373\u4f7f\u662f\u5728\u6587\u5316\u4e0a\u5f88\u5bb9\u6613\u53d7\u5230\u8fd9\u7c7b\u4e8b\u60c5\u5f71\u54cd\u5e76\u6697\u4e2d\u9f13\u52b1\u5b83\u7684\u7ec4\u7ec7\uff0c\u4e5f\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6446\u8131\u8fd9\u79cd\u4eba\u3002\u4e5f\u8bb8\u6211\u4f1a\u8bfb\u90a3\u672c\u4e66\u3002 Kindle \u7248 28 \u7f8e\u5143\uff0c\u60f3\u8c61\u4e00\u4e0b\u3002\u8c08\u7248\u6743\u6539\u9769\u7684\u8feb\u5207\u9700\u8981\uff01\u54c7\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u672c\u76f8\u5f53\u8584\u7684\u4e66\u6765\u8bf4\u592a\u8d35\u4e86\uff01\u662f\u7684\uff0c\u5b83\u6709\u65f6\u6709\u70b9\u8fc7\u5934\u4e86\u3002\u8fd8\u662f\u628a\u6211\u9017\u7b11\u4e86\u3002\u5e76\u54ed\u6ce3\u3002\u55ef\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u5982\u679c\u7ecf\u7406\u76d1\u63a7\u4f60\u82b1\u65f6\u95f4\u505a\u4ec0\u4e48\uff0c\u5e76\u4ece\u7ecf\u9a8c\u4e2d\u4e86\u89e3\u4ec0\u4e48\u5bf9\u4f60\u6765\u8bf4\u662f\u56f0\u96be\u7684\uff0c\u4ec0\u4e48\u4e0d\u662f\uff1f\u4ed6\u77e5\u9053\u4e00\u4e9b\u5173\u4e8e PM \u548c HRM \u7684\u57fa\u672c\u77e5\u8bc6\u5417\uff1f\u60a8\u63cf\u8ff0\u7684\u90a3\u79cd\u6076\u884c\u53ea\u6709\u5728\u60a8\u7684\u7ecf\u7406\u5bf9\u7ba1\u7406\u4e00\u65e0\u6240\u77e5\u7684\u60c5\u51b5\u4e0b\u624d\u6709\u53ef\u80fd\u53d1\u751f\u3002\n\u8865\u5145\u4e00\u70b9\uff0c\u5176\u4e2d\u4e00\u672c\u4e66\u5305\u542b\u6539\u53d8\u751f\u6d3b\u7684\u89c1\u89e3\uff1a\u201c\u7cfb\u7edf\u7684\u76ee\u7684\uff0c\u5c31\u662f\u5b83\u7684\u4f5c\u7528\u3002\u201d [\u6ce8\uff1a\u5b9e\u9645\u4e0a\u5f52\u56e0\u4e8e\u65af\u5854\u798f\u5fb7\u5564\u9152\uff0c\u8bf7\u53c2\u9605 WLL biog\u3002\u5728\u4e0a\u9762\u7684\u94fe\u63a5\u4e0a\u3002] \u514d\u8d23\u58f0\u660e\uff1a\u4f60\u4ece\u8fd9\u4e9b\u4e66\u4e2d\u5f97\u5230\u4e86\u4ec0\u4e48\uff0c\u53ef\u80fd\u53d6\u51b3\u4e8e\u4f60\u7684\u5fc3\u6001\u3002\u4f60\u597d\u3002\u975e\u5e38\u6709\u8da3\u7684\u5185\u5bb9\uff0c\u4f46\u5f88\u96be\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u627e\u5230 yosefk.com\u3002\u4f60\u5728\u8c37\u6b4c\u7684\u524d 10 \u540d\u4e4b\u5916\uff0c\u6240\u4ee5\u4f60\u4e0d\u80fd\u6307\u671b\u5927\u6d41\u91cf\u3002\u60a8\u9700\u8981\u9ad8\u8d28\u91cf\u7684\u53cd\u5411\u94fe\u63a5\u624d\u80fd\u5728 serps \u4e2d\u6392\u540d\u3002\u800c\u4e14\u4f60\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u5b83\u4eec\uff0c\u53ea\u9700\u5728\u8c37\u6b4c\u641c\u7d22\uff1aforbesden&#39;s tools \u4f60\u597d\u3002\u6211\u68c0\u67e5\u4e86\u4f60\u7684 yosefk.com\uff0c\u6211\u770b\u5230\u4f60\u6709\u4e00\u4e9b\u91cd\u590d\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8fd9\u53ef\u80fd\u662f\u4f60\u6ca1\u6709\u5728\u8c37\u6b4c\u4e2d\u6392\u540d hi \u7684\u539f\u56e0\u3002\u4f46\u662f\u60a8\u53ef\u4ee5\u5feb\u901f\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u6709\u4e00\u4e2a\u5de5\u5177\u53ef\u4ee5\u50cf\u4eba\u7c7b\u4e00\u6837\u91cd\u5199\u5185\u5bb9\uff0c\u53ea\u9700\u5728\u8c37\u6b4c\u4e2d\u641c\u7d22\uff1amiftolo&#39;s tools \u611f\u8c22\u60a8\u5206\u4eab\u60a8\u7684\u4fe1\u606f\u3002\u6211\u771f\u7684\u5f88\u611f\u8c22\u4f60\u7684\u52aa\u529b\uff0c\u6211\u5728\u7b49\u5f85\u4f60\u7684\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u518d\u6b21\u611f\u8c22\u3002 5/16/2019 @ 8:48:59 AM \u5728\u6211\u770b\u6765\uff0cyosefk.com \u5728\u5904\u7406\u6b64\u7c7b\u95ee\u9898\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u5373\u4f7f\u7ecf\u5e38\u6545\u610f\u4e89\u8bba\uff0c\u8fd9\u4e9b\u5e16\u5b50\u901a\u5e38\u4e5f\u5199\u5f97\u5f88\u597d\u4e14\u5177\u6709\u6311\u6218\u6027\u3002\u6211\u60f3\u4f60\u63d0\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u7ec6\u8282\uff0c\u611f\u8c22\u4f60\u7684\u5e16\u5b50\u3002\n\u6211\u5370\u8c61\u6df1\u523b\uff0c\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\u3002\u6211\u771f\u7684\u5f88\u5c11\u4f1a\u9047\u5230\u65e2\u5177\u6709\u6559\u80b2\u610f\u4e49\u53c8\u5177\u6709\u5a31\u4e50\u6027\u7684\u535a\u5ba2\uff0c\u8ba9\u6211\u544a\u8bc9\u60a8\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u4e00\u9488\u89c1\u8840\u4e86\u3002\u4f60\u7684\u60f3\u6cd5\u5f88\u51fa\u8272\uff1b\u95ee\u9898\u662f\u6ca1\u6709\u8db3\u591f\u7684\u4eba\u660e\u667a\u5730\u8c08\u8bba\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\u6211\u5f88\u9ad8\u5174\u6211\u4eec\u5728\u5bfb\u627e\u4e0e\u6b64\u6709\u5173\u7684\u4e1c\u897f\u65f6\u9047\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u6211\u559c\u6b22\u901a\u8bfb\uff0c\u6211\u76f8\u4fe1\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u6709\u4e00\u4e9b\u771f\u6b63\u5b9e\u7528\u7684\u4e1c\u897f\uff01 .\u6211\u5370\u8c61\u6df1\u523b\uff0c\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\u3002\u6211\u771f\u7684\u5f88\u5c11\u4f1a\u9047\u5230\u65e2\u5177\u6709\u6559\u80b2\u610f\u4e49\u53c8\u5177\u6709\u5a31\u4e50\u6027\u7684\u535a\u5ba2\uff0c\u8ba9\u6211\u544a\u8bc9\u60a8\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u4e00\u9488\u89c1\u8840\u4e86\u3002\u4f60\u7684\u60f3\u6cd5\u5f88\u51fa\u8272\uff1b\u95ee\u9898\u662f\u6ca1\u6709\u8db3\u591f\u7684\u4eba\u660e\u667a\u5730\u8c08\u8bba\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\u6211\u5f88\u9ad8\u5174\u6211\u4eec\u5728\u5bfb\u627e\u4e0e\u6b64\u6709\u5173\u7684\u4e1c\u897f\u65f6\u9047\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u6211\u5f88\u9ad8\u5174\u6210\u4e3a\u8fd9\u4e2a\u4f1f\u5927\u7f51\u7ad9\u7684\u8bbf\u95ee\u8005\u4e4b\u4e00\uff08\uff1a\uff0c\u611f\u8c22\u60a8\u53d1\u5e16\u3002\u6211\u8ba4\u4e3a\u60a8\u63d0\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u7ec6\u8282\uff0c\u611f\u8c22\u60a8\u7684\u5e16\u5b50\u3002\u4f46\u4ed6\u4ecd\u7136\u5728\u5c1d\u8bd5\u3002\u6211\u4e00\u76f4\u5728\u4f7f\u7528 Movable -\u5728\u4e00\u4e9b\u7f51\u7ad9\u4e0a\u8f93\u5165\u4e86\u5927\u7ea6\u4e00\u5e74\uff0c\u5e76\u4e14\u62c5\u5fc3\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5e73\u53f0\u3002\u6211\u542c\u8bf4 blogengine.net \u975e\u5e38\u597d\u3002\u6709\u6ca1\u6709\u529e\u6cd5\u53ef\u4ee5\u5c06\u6211\u6240\u6709\u7684 wordpress \u5e16\u5b50\u5bfc\u5165\u5176\u4e2d\uff1f\u4efb\u4f55\u5f62\u5f0f\u7684\u5e2e\u52a9\u90fd\u4f1a\u4e0d\u80dc\u611f\u6fc0\uff01\u6211\u771f\u7684\u5f88\u559c\u6b22\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u68c0\u67e5\uff0c\u5b83\u6709\u5f88\u591a\u597d\u4e1c\u897f\u3002\n\u6211\u60f3\u4f60\u63d0\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u7ec6\u8282\uff0c\u611f\u8c22\u4f60\u7684\u5e16\u5b50\u3002\u540e\u671f\u5199\u4f5c\u4e5f\u662f\u4e00\u79cd\u4e50\u8da3\uff0c\u719f\u4e86\u4e4b\u540e\u5c31\u53ef\u4ee5\u5199\u4e86\uff0c\u4e0d\u7136\u5c31\u5f88\u96be\u5199\u4e86\u3002\u4e0d\u53ef\u5426\u8ba4\uff0c\u8003\u8651\u5230\u4f60\u6240\u8bf4\u7684\u3002\u60a8\u6700\u559c\u6b22\u7684\u539f\u56e0\u4f3c\u4e4e\u662f\u7f51\u7edc\u4e0a\u6700\u7b80\u5355\u7684\u8981\u8bb0\u4f4f\u7684\u56e0\u7d20\u3002\u6211\u5bf9\u4f60\u8bf4\uff0c\u5373\u4f7f\u5176\u4ed6\u4eba\u60f3\u5230\u4ed6\u4eec\u663e\u7136\u4e0d\u77e5\u9053\u7684\u62c5\u5fe7\uff0c\u6211\u5f53\u7136\u4e5f\u4f1a\u751f\u6c14\u3002\u4f60\u8bbe\u6cd5\u51fb\u4e2d\u4e86\u6700\u9ad8\u70b9\uff0c\u5e76\u5b9a\u4e49\u4e86\u6574\u4e2a\u4e8b\u60c5\uff0c\u4e0d\u9700\u8981\u526f\u4f5c\u7528\uff0c\u4eba\u4eec\u53ef\u4ee5\u63a5\u53d7\u4fe1\u53f7\u3002\u53ef\u80fd\u4f1a\u56de\u6765\u83b7\u5f97\u66f4\u591a\u3002\u8c22\u8c22 \u5728\u5fd9\u788c\u7684\u751f\u6d3b\u4e2d\uff0c\u6536\u542c\u7535\u89c6\u65b0\u95fb\u5176\u5b9e\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u6211\u53ea\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u4f7f\u7528\u7f51\u7edc\uff0c\u5e76\u83b7\u53d6\u6700\u70ed\u95e8\u7684\u65b0\u95fb\u3002\u6211\u4ec0\u81f3\u4e0d\u660e\u767d\u6211\u662f\u600e\u4e48\u5728\u8fd9\u91cc\u505c\u4e0b\u6765\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u8d34\u5b50\u5f88\u68d2\u3002\u6211\u4e0d\u8ba4\u8bc6\u4f60\u53ef\u80fd\u662f\u8c01\uff0c\u4f46\u4f60\u80af\u5b9a\u4f1a\u4e3a\u90a3\u4e9b\u8fd8\u6ca1\u6709\u7684\u4eba\u53bb\u4e00\u4e2a\u8457\u540d\u7684\u535a\u4e3b\u3002\u5e72\u676f!\u6211\u5728\u8fd9\u91cc\u8bfb\u4e86\u51e0\u4e2a\u6070\u5230\u597d\u5904\u7684\u4e1c\u897f\u3002\u5f53\u7136\u4ef7\u683c\u4e66\u7b7e\u91cd\u65b0\u8bbf\u95ee\u3002\u6211\u60f3\u77e5\u9053\u60a8\u4e3a\u521b\u5efa\u8fd9\u4e9b\u7cbe\u5f69\u7684\u4fe1\u606f\u7f51\u7ad9\u4e4b\u4e00\u4ed8\u51fa\u4e86\u591a\u5c11\u52aa\u529b\u3002\u6211\u771f\u7684\u5f88\u611f\u8c22\u8fd9\u4e2a\u7f51\u9875\u7684\u6240\u6709\u8005\u6b64\u65f6\u5206\u4eab\u4e86\u8fd9\u7bc7\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5e16\u5b50\u3002\n\u60a8\u662f\u5426\u8003\u8651\u8fc7\u5728\u5176\u4ed6\u535a\u5ba2\u4e0a\u64b0\u5199\u7535\u5b50\u4e66\u6216\u5ba2\u5ea7\u4f5c\u8005\uff1f\u6211\u6709\u4e00\u4e2a\u57fa\u4e8e\u60a8\u8ba8\u8bba\u7684\u76f8\u540c\u4e3b\u9898\u7684\u535a\u5ba2\uff0c\u5e0c\u671b\u60a8\u5206\u4eab\u4e00\u4e9b\u6545\u4e8b/\u4fe1\u606f\u3002\u6211\u77e5\u9053\u6211\u7684\u7528\u6237\u4f1a\u559c\u6b22\u4f60\u7684\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u751a\u81f3\u5bf9\u8fdc\u7a0b\u611f\u5174\u8da3\uff0c\u8bf7\u968f\u65f6\u7ed9\u6211\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u5f88\u9ad8\u5174\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u770b\u5230\u4e00\u4e2a\u535a\u5ba2\uff0c\u5b83\u4e0d\u662f\u76f8\u540c\u7684\u4e0d\u9700\u8981\u7684\u91cd\u590d\u6750\u6599\u3002\u4f18\u79c0\u7684\u9605\u8bfb\uff01\u6211\u5df2\u7ecf\u4fdd\u5b58\u4e86\u60a8\u7684\u7f51\u7ad9\uff0c\u5e76\u4e14\u6b63\u5728\u5c06\u60a8\u7684 RSS \u63d0\u8981\u6dfb\u52a0\u5230\u6211\u7684 Google \u5e10\u6237\u4e2d\u3002\u6211\u5fc5\u987b\u544a\u8bc9\u4f60\uff0c\u4f60\u6709\u4e00\u4e2a\u4f18\u79c0\u800c\u72ec\u7279\u7684\u7f51\u7ad9\uff0c\u6211\u5fc5\u987b\u8bf4\u5f88\u559c\u6b22\u9605\u8bfb\u3002\u55e8\uff0c\u670b\u53cb\u4eec\uff0c\u5b83\u5173\u4e8e\u6559\u80b2\u7684\u7cbe\u5f69\u6bb5\u843d\u548c\u5b8c\u6574\u7684\u89e3\u91ca\uff0c\u4e00\u76f4\u4fdd\u6301\u4e0b\u53bb\u3002\u4eca\u5929\uff0c\u6211\u548c\u5b69\u5b50\u4eec\u53bb\u4e86\u6d77\u6ee8\u3002\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u8d1d\u58f3\uff0c\u628a\u5b83\u4ea4\u7ed9\u4e86\u6211 4 \u5c81\u7684\u5973\u513f\uff0c\u5979\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u628a\u5b83\u653e\u5728\u8033\u8fb9\uff0c\u4f60\u5c31\u80fd\u542c\u5230\u5927\u6d77\u7684\u58f0\u97f3\u3002\u201d\u5979\u628a\u8d1d\u58f3\u653e\u5230\u8033\u8fb9\uff0c\u7136\u540e\u53eb\u4e86\u8d77\u6765\u3002\u91cc\u9762\u6709\u4e00\u53ea\u5bc4\u5c45\u87f9\uff0c\u5b83\u5939\u4f4f\u4e86\u5979\u7684\u8033\u6735\u3002\u5979\u518d\u4e5f\u4e0d\u60f3\u56de\u53bb\u4e86\uff01\u5927\u58f0\u7b11\u6211\u77e5\u9053\u8fd9\u5b8c\u5168\u662f\u9898\u5916\u8bdd\uff0c\u4f46\u6211\u4e0d\u5f97\u4e0d\u544a\u8bc9\u522b\u4eba\uff01\u6211\u5fc5\u987b\u544a\u8bc9\u4f60\uff0c\u4f60\u6709\u4e00\u7bc7\u4f18\u79c0\u800c\u72ec\u7279\u7684\u5e16\u5b50\uff0c\u6211\u6709\u70b9\u559c\u6b22\u9605\u8bfb\u3002\n\u6211\u5fc5\u987b\u8bf4\uff0c\u5c3d\u7ba1\u6211\u5f88\u559c\u6b22\u9605\u8bfb\u60a8\u6240\u8bf4\u7684\u5185\u5bb9\uff0c\u4f46\u4e00\u6bb5\u65f6\u95f4\u540e\u6211\u5fcd\u4e0d\u4f4f\u5931\u53bb\u4e86\u5174\u8da3\u3002\u5f88\u68d2\u7684\u4fe1\u606f\u3002\u5e78\u8fd0\u7684\u662f\u6211\u5076\u7136\u53d1\u73b0\u4e86\u4f60\u7684\u535a\u5ba2\uff08stumbleupon\uff09\u3002\u6211\u5df2\u7ecf\u4fdd\u5b58\u5b83\u4ee5\u5907\u540e\u7528\uff01\u6211\u5fc5\u987b\u8bf4\uff0c\u5c3d\u7ba1\u6211\u5f88\u559c\u6b22\u9605\u8bfb\u60a8\u6240\u8bf4\u7684\u5185\u5bb9\uff0c\u4f46\u4e00\u6bb5\u65f6\u95f4\u540e\u6211\u5fcd\u4e0d\u4f4f\u5931\u53bb\u4e86\u5174\u8da3\u3002\u53ea\u662f\u60f3\u8f93\u5165\u4e00\u4e9b\u4e00\u822c\u7684\u4e1c\u897f\uff0c\u7f51\u7ad9\u5e03\u5c40\u5f88\u5b8c\u7f8e\uff0c\u6587\u7ae0\u975e\u5e38\u68d2\uff1aD\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22\u4f60\u7684\u7f51\u7ad9..\u4ee4\u4eba\u6109\u5feb\u7684\u989c\u8272\u548c\u4e3b\u9898\u3002\u8fd9\u4e2a\u7f51\u7ad9\u662f\u4f60\u81ea\u5df1\u505a\u7684\u5417\uff1f\u8bf7\u56de\u590d\uff0c\u56e0\u4e3a\u6211\u6b63\u5728\u5bfb\u627e\u521b\u5efa\u6211\u81ea\u5df1\u7684\u7f51\u7ad9\uff0c\u5e76\u60f3\u77e5\u9053\u60a8\u4ece\u54ea\u91cc\u5f97\u5230\u8fd9\u4e2a\u6216\u4e3b\u9898\u7684\u786e\u5207\u540d\u79f0\u3002\u8c22\u8c22\uff01\u53ea\u662f\u60f3\u8f93\u5165\u4e00\u4e9b\u4e00\u822c\u7684\u4e1c\u897f\uff0c\u7f51\u7ad9\u5e03\u5c40\u5f88\u5b8c\u7f8e\uff0c\u6587\u7ae0\u975e\u5e38\u68d2\uff1aD\u3002\u6211\u6709\u70b9\u8fdb\u5165\u8fd9\u4e2a\u7f51\u7ad9\u3002\u6211\u53d1\u73b0\u5b83\u5f88\u6709\u8da3\uff0c\u5e76\u4e14\u5145\u6ee1\u4e86\u72ec\u7279\u7684\u5174\u8da3\u70b9\u3002\n\u6211\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u770b\u4e86\u4f60\u7684\u4e00\u4e9b\u6587\u7ae0\uff0c\u6211\u76f8\u4fe1\u8fd9\u4e2a\u7f51\u7ad9\u771f\u7684\u5f88\u6709\u542f\u53d1\u6027\uff01\u7ee7\u7eed\u53d1\u5e16\u3002\u6211\u6bcf\u5929\u90fd\u4f1a\u82b1\u534a\u4e2a\u5c0f\u65f6\u9605\u8bfb\u8fd9\u4e2a\u7f51\u7ad9\u7684\u6587\u7ae0\u6216\u8bc4\u8bba\uff0c\u540c\u65f6\u559d\u676f\u5496\u5561\u3002\u6211\u60f3\u4f60\u5df2\u7ecf\u63d0\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6211......", "note_en": "My\u00a0writing has recently prompted an anonymous commenter to declare that people like\u00a0me are\u00a0what&#39;s wrong with the world. Oh joy! \u2013 finally, after all these years of doing evil, some\u00a0recognition!\u00a0Excited, I decided to share one of my battle-tested evil\u00a0tips,\u00a0which\u00a0never ever failed evil me.\n  An easy thing is\u00a0a heads they win, tails you lose situation.\u00a0Failing at easy things is shameful; succeeding is unremarkable.\u00a0Much better to work on hard things \u2013 heads  you win, tails  they lose. Failure is unfortunate but expected; success makes you\u00a0a hero.\n Treat this seriously, because it snowballs. The guy working on the &#34;hard&#34; thing gets a lot of help and resources, making it  easier to succeed \u2013 and easier to move on to the next &#34;hard&#34; thing. The guy doing\u00a0the &#34;easy&#34; tasks\u00a0gets no help, so it&#39;s\u00a0 harder\u00a0to succeed.\n Quotation marks all over the place, because of\u00a0course what counts is perception, not how hard or easy it\u00a0really is. The worst thing to work on is the hard one that&#39;s\u00a0 perceived as easy \u2013 the hard &#34;easy&#34; thing. The\u00a0best thing is the easy &#34;hard&#34; one.\u00a0My years-long  preference for low-level programming\u00a0results, in part, from its reputation of\u00a0a very hard field, when in practice, it takes a little knowledge and a lot of discipline \u2013 but not any outstanding skills.\n (Why then do many\u00a0people fear\u00a0low-level programming? Only because of how hard it bites you the first few times. People who felt that\u00a0pain and recoiled respect those who&#39;ve moved past it\u00a0and reached\u00a0productivity. Now you know why people take shit from the likes of\u00a0Ken Thompson and Linus Torvalds, and then\u00a0beg\u00a0for more.)\n The point where\u00a0this gets really evil is  not when a heroic doer of hard things\u00a0decides to behave like a Torvalds. That&#39;s more stupid than evil. You&#39;ll\u00a0get away\u00a0with being a Torvalds, but it always\u00a0costs some\u00a0goodwill and hence, ultimately, money. So\u00a0the goal-oriented\u00a0evildoer always tries to be on their best behavior.\n No, the point where this gets really evil is when you let them fail. When they come to you  thinking that it&#39;s easy, and you know it&#39;s actually  very hard, and you turn them down, and you let them fail a few times, and you wait until they come back with a readjusted attitude -\u00a0 that&#39;s evil.\n Here,\u00a0the\u00a0evildoer needs to strike a delicate balance, keeping in mind The Evildoer&#39;s Golden Rule:\n   Working on the hard &#34;easy&#34; thing \u2013 all trouble, no credit \u2013 is\u00a0going to be  terrible for you. You&#39;ll\u00a0get a taste of a do-gooder&#39;s short, miserable life.\n However, if this thing is so important\u00a0that a\u00a0failure would endanger the org,  maybe you should be the do-gooder and save them from their misconceptions\u00a0at your own expense.  Maybe. And maybe  not.\u00a0Be sure to think about it.\n The upshot is, sometimes the\u00a0evildoer\u00a0gets to be the do-gooder, but\u00a0you should know that it&#39;s hazardous to your health.\n  Sometimes you can&#39;t weasel out of doing something &#34;easy.&#34; An interesting gambit for these cases is to postpone the easy thing until it becomes urgent. This accomplishes two\u00a0things at a time:\n Urgent things automatically become harder, a person in a hurry more important. The later it&#39;s done,\u00a0the\u00a0easier it is to get help (while retaining the status of &#34;the&#34; hero in the center of it all who made it happen.)\n Under time pressure, the scope shrinks, making the formerly &#34;easy&#34; and now officially &#34;hard&#34; thing genuinely easier. This is particularly useful for\u00a0the really disgusting, but unavoidable work.\n But it is a gambit, because postponing things until they become urgent is  openly evil. (Avoiding easy things is  not \u2013 why, it&#39;s patriotic and heroic to look for the harder work!) To get away with postponing, you need an excuse:\n or even you having sincerely underestimated the difficulty and hence, regrettably, having postponed it too much \u2013 you&#39;re  so sorry. (This last excuse has the drawback of you having to admit\u00a0an error. But to the extent that urgency will make the scope\u00a0smaller,  the error will become smaller, too.)\n One thing you want to prevent is people learning to remind you earlier. The way to accomplish it is being very nice when they come late. If people feel punished for reminding too late, they&#39;ll come earlier next time, and in a vengeful mood, so with more needless tasks.\u00a0But if they&#39;re late and you eagerly &#34;try to do the best under the circumstances&#34;, not only\u00a0do you put yourself under the spotlight as a patriotic hero, you move the forgetful culprit  out of the spotlight. So they&#39;ll form a rosy memory of the incident, and  not learn the value of coming earlier \u2013 precisely what we want.\n One thing making the postponing\u00a0gambit relatively safe is that management is shocked by the very thought of people playing it, as can be seen in the following real-life conversation:\n Babbling management consultant: A lot of organizations have a problem where they only work on urgent things at the expense of important, but less urgent ones.\n Low-ranking evildoer manager (in a momentary\u00a0lapse of reason): Why, of course! I actually postpone things to get priority around here.\n See? Sometimes they won&#39;t believe it if you say to their face. So they&#39;re unlikely to\u00a0suspect you. (Do people reporting to me play the postponing gambit? Sometimes they do, and I don&#39;t resent them for it;  their priorities aren&#39;t mine. But at the worst case, you should expect  a lot of resentment \u2013 it&#39;s practically high treason \u2013 so\u00a0you should have plausible deniability.)\n  To a very large extent,  your productivity is a result of what you choose to work on. Keep things perceived as easy out of that list. When you can&#39;t,\u00a0postponing an &#34;easy&#34;\u00a0thing can make it both &#34;harder&#34; and smaller.\n   The other book by the same author, &#34;Be Slightly Evil&#34; should also be a lot of fun for you. Stay evil.\n                Heard about it, didn&#39;t read/see, on the theory that I&#39;m not a researcher (here I could put a sad or a happy smiley.) Is it related? (Here I&#39;m talking about perception of your work more than your actual work; I&#39;d kinda hope that someone discussing research would not go there, or at least would mostly discuss other things.)\n        I don&#39;t know you, but from reading your blog I think that you and Hamming have, at a high-level, similar approaches. Just for example, consider this excerpt from his talk:\n Now Alan Chynoweth mentioned that I used to eat at the physics table. I had been eating with the mathematicians and I found out that I already knew a fair amount of mathematics; in fact, I wasn&#39;t learning much. The physics table was, as he said, an exciting place, but I think he exaggerated on how much I contributed. It was very interesting to listen to Shockley, Brattain, Bardeen, J. B. Johnson, Ken McKay and other people, and I was learning a lot. But unfortunately a Nobel Prize came, and a promotion came, and what was left was the dregs. Nobody wanted what was left. Well, there was no use eating with them!\n Over on the other side of the dining hall was a chemistry table. I had worked with one of the fellows, Dave McCall; furthermore he was courting our secretary at the time. I went over and said, &#34;Do you mind if I join you?&#34; They can&#39;t say no, so I started eating with them for a while. And I started asking, &#34;What are the important problems of your field?&#34; And after a week or so, &#34;What important problems are you working on?&#34; And after some more time I came in one day and said, &#34;If what you are doing is not important, and if you don&#39;t think it is going to lead to something important, why are you at Bell Labs working on it?&#34; I wasn&#39;t welcomed after that; I had to find somebody else to eat with! That was in the spring.\n In the fall, Dave McCall stopped me in the hall and said, &#34;Hamming, that remark of yours got underneath my skin. I thought about it all summer, i.e. what were the important problems in my field. I haven&#39;t changed my research,&#34; he says, &#34;but I think it was well worthwhile.&#34; And I said, &#34;Thank you Dave,&#34; and went on. I noticed a couple of months later he was made the head of the department. I noticed the other day he was a Member of the National Academy of Engineering. I noticed he has succeeded. I have never heard the names of any of the other fellows at that table mentioned in science and scientific circles. They were unable to ask themselves, &#34;What are the important problems in my field?&#34;\n    Oh, that sounds too great for it to be me, I&#39;ll maybe compliment myself that I&#39;m 5% that guy, but mostly I&#39;m not that guy, twice:\n * Firstly what I discussed here was looking for &#34;hard&#34; things \u2013 those perceived as hard, this is not the same as important (and it&#39;s not the same even if &#34;hard&#34; is really actually hard.) I explicitly say there, and I sincerely believe it, that often you want to NOT work on important stuff because it&#39;s considered easy and there&#39;s nothing in it for you, moreover, it being considered easy makes it unnecessarily hard to actually succeed; I said there that yes if it&#39;s truly important maybe you go do it, and I&#39;ll add that sometimes you go do it on the theory that it&#39;ll get recognized as hard and worthy later, but these are the exceptions, not the rule \u2013 not my rule at least.\n * \u2026And secondly often I feel that I don&#39;t have the cranial horsepower for the really important problems (in my case one of my excuses is it&#39;s really hard for me to focus deeply on any one thing because I&#39;m getting pulled in umpteen directions all the time; but this is an excuse, the other part is I specifically choose breadth over depth because drilling for depth requires too much cranial horsepower.) So what I mainly do is (A) rely on other people for much of the depth and (B) for areas where I&#39;m most directly involved, I pick &#34;penalty kicks&#34; \u2013 these are important alright and many good players will do them worse than I do because I&#39;m psychologically well-built for it. But penalty kick type of work is more prevalent and more valued in the industry than in the academia. So this is the other part of me not being a Hamming.\n The upshot is that I&#39;m usually both too evil and too stupid to go after the important stuff; I&#39;ll flatter myself and say that sometimes I get to do something &#34;important&#34; in the same sense that an academic would use when talking about an academic field \u2013 sometimes I&#39;m doing something ahead or let&#39;s say outside of well-trodden textbook paths. But again, saying it&#39;s 5% of the time compliments me.\n Congrats on that TPU announcement BTW. (I refrain from commenting on it for obvious reasons, but a cool thing to have worked on, and to have it publicly announced.)\n    Cool to know H is the same guy after which the distance was named. His name coincidently appears in the obfuscated code supposedly written by Richard from &#34;Silicon Valley&#34; I was poring over just yesterday :\n    Well, it depends on how you read &#34;important&#34;. I take his &#34;important&#34; to be the same as your &#34;sounds hard&#34;. I suppose that&#39;s a superset of what you claim to work on, since you claim to work on &#34;sounds hard, is easy&#34; problems and Hamming doesn&#39;t make that qualification.\n Re: the TPU thing, thanks! Although I think that was just a matter of being in the right place at the right time. It just happened that I joined Google when that project was transitioning from a 20%-time project to a full-time thing, so I got to do a lot of interesting stuff since I was the first hire (other than the guy whose idea it was, of course).\n    Seems like everybody is sharing stuff that this post reminded them of and I will do it too. The book &#34;Putt&#39;s Law and the Successful Technocrat&#34; is full of evil recipes like this one.\n In fact the book goes even further: one of the suggestions is to inflate crisis level to just the right point where rate of promotion is maximized. And if the failure is imminent, the book reminds that &#34;Innovative organizations abhor little failures but reward big ones&#34; so the rational course of action is to make the failure as big as possible.\n    To systematically do a shitty job in order to generate crises and become the hero is indeed a workable strategy, at least for a time, but too evil for me; I think that a healthy organization, even one that is culturally very vulnerable to this sort of thing and implicitly encourages it, rids itself of this sort of people over time.\n    Maybe I&#39;ll read that book. $28 for a Kindle edition though, imagine that. Talk about an urgent need of a copyright reform!\n    Wow, that&#39;s expensive for a rather slim book! And yes it is a bit over the top at times. Still made me laugh. And cry.\n                    Well, there is a catch here. What if the manager monitors what you spend your time on and leans from experience what is hard for you and what isn&#39;t? And he knows some basic stuff about PM and HRM? The kind of evildoing you describe is only possible if your manager doesn&#39;t have a clue about management.\n    Just to add, one of these books, contains the life-changing insight: &#34;The Purpose of a System, is What it Does.&#34; [Note: Actually attributed to Stafford Beer, see WLL biog. on the link above.]\n Disclaimer: What you get out of these books, may depend on your state of mind.\n    Hello. Very interesting content but it&#39;s hard to find yosefk.com in search results. You are out of google&#39;s top 10, so you can&#39;t expect big traffic. You need hi quality backlinks to rank in serps. And you can get them for free, just search in google: forbesden&#39;s tools\n    Hello. I have checked your yosefk.com and i see you&#39;ve got some duplicate content so probably it is the reason that you don&#39;t rank hi in google. But you can fix this issue fast. There is a tool that rewrites content like human, just search in google: miftolo&#39;s tools\n    Thank you for sharing your info. I truly appreciate your efforts and I am waiting for your next post thanks once again.\n            5/16/2019 @ 8:48:59 AM In my opinion, yosefk.com does a good job of dealing with issues of this sort. Even if frequently deliberately polemic, the posts are generally well-written and challenging.\n                        I conceive you have mentioned some very interesting details , appreciate it for the post.\n    I\u2019m impressed, I have to admit. Genuinely rarely should i encounter a weblog that\u2019s both educative and entertaining, and let me tell you, you may have hit the nail about the head. Your idea is outstanding; the problem is an element that insufficient persons are speaking intelligently about. I am delighted we came across this during my look for something with this.\n    I love reading through and I believe this website got some genuinely utilitarian stuff on it! .\n    I\u2019m impressed, I have to admit. Genuinely rarely should i encounter a weblog that\u2019s both educative and entertaining, and let me tell you, you may have hit the nail about the head. Your idea is outstanding; the problem is an element that insufficient persons are speaking intelligently about. I am delighted we came across this during my look for something with this.\n                                    I am glad to be one of the visitors on this great website (:, appreciate it for posting .\n                            I conceive you have mentioned some very interesting details , appreciate it for the post.\n    But he&#39;s tryiong none the less. I&#39;ve been using Movable-type on a number of websites for about a year and am concerned about switching to another platform. I have heard very good things about blogengine.net. Is there a way I can import all my wordpress posts into it? Any kind of help would be greatly appreciated!\n        I really enjoy examining on this internet site , it has got great goodies .\n                I conceive you have mentioned some very interesting details , appreciate it for the post.\n                Post writing is also a fun, if you be acquainted with afterward you can write otherwise it is difficult to write.\n        Undeniably consider that that you stated. Your favorite reason appeared to be on the web the simplest factor to keep in mind of. I say to you, I certainly get annoyed even as other folks think about worries that they plainly don&#39;t recognize about. You managed to hit the nail upon the highest as well as defined out the entire thing with no need side effect , folks could take a signal. Will likely be back to get more. Thank you\n            It&#39;s actually very complicated in this busy life to listen news on Television, therefore I just use the web for that reason, and take the hottest news.\n    I don&#39;t even understand how I stopped up right here, however I assumed this put up was great. I do not recognize who you might be however definitely you&#39;re going to a famous blogger for those who aren&#39;t already. Cheers!\n    I have read several just right stuff here. Certainly price bookmarking for revisiting. I wonder how a lot attempt you put to create one of these fantastic informative web site.\n            I am really thankful to the owner of this web page who has shared this impressive post at at this time.\n    Have you ever considered writing an e-book or guest authoring on other blogs? I have a blog based upon on the same topics you discuss and would love to have you share some stories/information. I know my subscribers would appreciate your work. If you are even remotely interested, feel free to send me an email.\n        It&#39;s nice to come across a blog every once in a while that isn&#39;t the same unwanted rehashed material.\n Excellent read! I&#39;ve saved your site and I&#39;m adding your RSS feeds to my Google account.\n    I simply must tell you that you have an excellent and unique website that I must say enjoyed reading.\n            Hi there friends, its wonderful paragraph about educationand completely explained, keep it up all the time.\n    Today, I went to the beach front with my children. I found a sea shell and gave it to my 4 year old daughter and said &#34;You can hear the ocean if you put this to your ear.&#34; She put the shell to her ear and screamed. There was a hermit crab inside and it pinched her ear. She never wants to go back! LoL I know this is totally off topic but I had to tell someone!\n        I simply must tell you that you have an excellent and unique post that I kinda enjoyed reading.\n                I must say, as a lot as I enjoyed reading what you had to say, I couldnt help but lose interest after a while.\n                Great information. Lucky me I found your blog by chance (stumbleupon). I have saved it for later!\n    I must say, as a lot as I enjoyed reading what you had to say, I couldnt help but lose interest after a while.\n        Just wanna input on few general things, The website layout is perfect, the articles is very superb : D.\n    I seriously love your website.. Pleasant colors &amp; theme. Did you make this site yourself? Please reply back as I&#39;m looking to create my very own website and would like to know where you got this from or exactly what the theme is called. Thank you!\n        Just wanna input on few general things, The website layout is perfect, the articles is very superb : D.\n                I kinda got into this website. I found it to be interesting and loaded with unique points of interest.\n                I was looking at some of your articles on this site and I believe this internet site is really instructive! Keep on posting .\n                    I every time spent my half an hour to read this web site&#39;s articles or reviews everyday along with a mug of coffee.\n    I conceive you have mentioned some very i\n......", "posttime": "2021-07-29 21:52:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u63d0\u793a,programmer", "title": "\u90aa\u6076\u7a0b\u5e8f\u5458\u7684\u63d0\u793a\uff1a\u907f\u514d\u201c\u7b80\u5355\u201d\u7684\u4e8b\u60c5\uff082016\uff09", "title_en": "Evil programmer's tip: avoid \u201ceasy\u201d things (2016)", "transed": 1, "url": "http://yosefk.com/blog/evil-tip-avoid-easy-things.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u63d0\u793a"]}, {"category": "", "categoryclass": "", "imagename": "ce42198129e3555c8b048958ebe39b3b.jpg", "infoid": 1070249, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u540d\u5acc\u7591\u4eba\u56e0\u5165\u4fb5\u6b27\u6d32\u5404\u5730\u7684\u53d6\u6b3e\u673a\u800c\u88ab\u76d7\u53d6\u8fd1 25 \u4e07\u6b27\u5143\u540e\u88ab\u6355\u3002\u6ce2\u5170\u8b66\u65b9\u4e8e 7 \u6708 17 \u65e5\u5728\u6ce2\u5170\u9996\u90fd\u534e\u6c99\u902e\u6355\u4e86\u8fd9\u4e24\u540d\u6765\u81ea\u767d\u4fc4\u7f57\u65af\u7684\u5acc\u7591\u4eba\u3002\u636e\u79f0\uff0c\u4ed6\u4eec\u901a\u8fc7\u94bb\u5b54\u6216\u7194\u5316\u673a\u5668\u7684\u90e8\u4ef6\u4ee5\u5c06\u7535\u7ebf\u8fde\u63a5\u5230\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u8fdb\u5165 ATM \u673a\u7684\u6743\u9650\u3002\u7136\u540e\u4ed6\u4eec\u80fd\u591f\u8fdc\u7a0b\u544a\u8bc9\u81ea\u52a8\u63d0\u6b3e\u673a\u53d6\u94b1\u3002\u636e\u534f\u52a9\u8c03\u67e5\u7684\u6b27\u6d32\u5211\u8b66\u7ec4\u7ec7\u79f0\uff0c\u6b27\u6d32\u6709\u6570\u5341\u53f0\u81ea\u52a8\u53d6\u6b3e\u673a\u6210\u4e3a\u76ee\u6807\uff0c\u4f30\u8ba1\u603b\u5171\u88ab\u76d7\u4e86 230,000 \u6b27\u5143\u3002\u76d7\u7a83\u6848\u81f3\u5c11\u53d1\u751f\u5728\u4e03\u4e2a\u6b27\u6d32\u56fd\u5bb6\uff0c\u72af\u7f6a\u5206\u5b50\u603b\u662f\u9488\u5bf9\u540c\u4e00\u54c1\u724c\u548c\u578b\u53f7\u7684 ATM\u3002\u6765\u81ea\u6ce2\u5170\u3001\u5fb7\u56fd\u3001\u5965\u5730\u5229\u3001\u745e\u58eb\u3001\u6377\u514b\u5171\u548c\u56fd\u548c\u65af\u6d1b\u4f10\u514b\u7b49\u516d\u4e2a\u56fd\u5bb6\u7684\u8b66\u5bdf\u90e8\u961f\u53c2\u4e0e\u4e86\u8c03\u67e5\u3002", "note_en": "Two suspects have been arrested after nearly a quarter of a million euros were stolen by hacking into cash machines across Europe.\n  Polish police arrested the two suspects, who are both from Belarus, in the Polish capital Warsaw on July 17.\n They had allegedly been gaining access to ATM machines by drilling holes or melting parts of the machines to physically connect wires to a laptop. Then they were able to remotely tell the cash machine to dispense money.\n   Dozens of ATMs across Europe were targeted, with an estimated \u20ac230,000 stolen in total, according to Europol, which helped with the investigation.\n The thefts occurred in at least seven European countries, and the criminals always targeted the same brand and model of ATM.\n Police forces from six countries took part in the investigation, including Poland, Germany, Austria, Switzerland, the Czech Republic and Slovakia.", "posttime": "2021-07-29 21:51:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u6e05\u7a7a,cashpoints,\u6b27\u6d32", "title": "\u8b66\u65b9\u79f0\uff0c\u9ed1\u5ba2\u901a\u8fc7\u6e05\u7a7a\u6b27\u6d32\u5404\u5730\u7684\u73b0\u91d1\u70b9\u7a83\u53d6\u4e86 23 \u4e07\u6b27\u5143", "title_en": "Hackers stole \u20ac230k by emptying cashpoints across Europe, say police", "transed": 1, "url": "https://www.euronews.com/2021/07/29/hackers-stole-230-000-by-emptying-cashpoints-across-europe-say-police", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u6e05\u7a7a", "\u6b27\u6d32"]}, {"category": "", "categoryclass": "", "imagename": "a25f49334704778cca8fd96b07c5ba33.jpg", "infoid": 1070248, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u62c9\u65af\u52a0\u7684\u60e0\u8482\u5c14\u662f\u5a01\u5ec9\u738b\u5b50\u6e7e\u897f\u4fa7\u7684\u4e00\u4e2a\u6c89\u7761\u5c0f\u9547\uff0c\u5750\u843d\u5728\u98ce\u666f\u5982\u753b\u7684\u7fa4\u5c71\u4e4b\u95f4\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u6b63\u5728\u60f3\u8c61\u4e00\u5c0f\u5806\u623f\u5b50\uff0c\u8bf7\u518d\u60f3\u4e00\u60f3\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5728\u57ce\u9547\u7684\u8fb9\u7f18\uff0c\u77d7\u7acb\u7740\u4e00\u5ea7\u540d\u4e3a Begich Towers \u7684 14 \u5c42\u5efa\u7b51\u2014\u2014\u4e00\u4e2a\u524d\u519b\u8425\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u5bb6\u8001\u65e7\u7684\u65c5\u9986\uff0c\u8be5\u9547 200 \u540d\u5c45\u6c11\u4e2d\u7684\u5927\u591a\u6570\u90fd\u4f4f\u5728\u90a3\u91cc\u3002\u4f5c\u5bb6 Erin Sheehy \u548c\u6444\u5f71\u5e08 Reed Young \u8bbf\u95ee\u4e86\u60e0\u8482\u5c14\uff0c\u4ee5\u4fbf\u5728\u300a\u52a0\u5229\u798f\u5c3c\u4e9a\u661f\u671f\u65e5\u6742\u5fd7\u300b\u4e0a\u53d1\u8868\u4e00\u7bc7\u9898\u4e3a\u201c\u5e02\u653f\u5385\u201d\u7684\u62a5\u9053\u3002\u5f53\u4ed6\u4eec\u7b2c\u4e00\u6b21\u8d70\u8fdb Begich Towers \u65f6\uff0cSheehy \u8bf4\u90a3\u611f\u89c9\u5c31\u50cf\u5979\u9ad8\u4e2d\u7684\u5927\u5385\u3002 \u201c\u8d70\u5eca\u5165\u53e3\u5904\u6709\u5e03\u544a\u680f\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u8fd9\u662f\u770b\u8d77\u6765\u50cf\u7164\u6e23\u780c\u5757\u7684\u6df7\u51dd\u571f\u780c\u5757\uff0c\u5b83\u4eec\u90fd\u6d82\u6210\u6de1\u9ec4\u8272\u3002\u201d\u90ae\u5c40\u5c31\u5728\u5165\u53e3\u9644\u8fd1\uff0c\u8b66\u5bdf\u5c40\u5c31\u5728\u5927\u5385\u7684\u6b63\u4e0b\u65b9\u3002\u627e\u5230\u901a\u5f80\u504f\u8fdc\u57ce\u9547\u7684\u8def\u5e76\u4e0d\u5bb9\u6613\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6d77\u8def\u5230\u8fbe\u60e0\u8482\u5c14\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u6761\u7a7f\u8fc7\u5c71\u8109\u7684\u957f\u5355\u8f66\u9053\u96a7\u9053\uff0c\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ea\u80fd\u8d70\u4e00\u6761\u8def\u3002\n\u201c\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u76f8\u5f53\u96be\u4ee5\u8fdb\u5165\u7684\u57ce\u9547\uff0c\u201d\u6768\u8bf4\u3002 \u201c\u53e6\u5916\uff0c\u5230\u4e86\u665a\u4e0a\uff0c\u4ed6\u4eec\u4f1a\u5b8c\u5168\u5173\u95ed\u96a7\u9053\u3002\u201d\u7136\u540e\u662f\u5929\u6c14\uff1a\u6bcf\u5c0f\u65f6 60 \u82f1\u91cc\u7684\u51ac\u5b63\u98ce\u662f\u6b8b\u9177\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Begich Towers \u5185\u7684\u5c45\u6c11\u5728\u4e00\u4e2a\u5c4b\u6a90\u4e0b\u62e5\u6709\u4ed6\u4eec\u9700\u8981\u7684\u4e00\u5207\u3002 \u201c\u8fd8\u6709\u4e00\u5bb6\u4fbf\u5229\u5e97\uff0c\u201d\u91cc\u5fb7\u8bf4\u3002 \u201c\u6709\u536b\u751f\u6240\u3002\u201d\u8fd9\u4e0d\u662f\u533b\u9662\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u5904\u7406\u5c0f\u75c5\u3002\u60e0\u8482\u5c14\u7684\u4e00\u4f4d\u5c45\u6c11\u743c\u00b7\u7c73\u52d2 (June Miller) \u5728\u5927\u697c\u7684\u9876\u90e8\u4e24\u5c42\u62e5\u6709\u4e00\u5bb6\u4f4f\u5bbf\u52a0\u65e9\u9910\u65c5\u9986\u3002 \u201c\u5979\u4ee5\u62e5\u6709\u5168\u57ce\u6700\u9ad8\u6863\u3001\u6700\u6f02\u4eae\u3001\u5ba4\u5185\u8bbe\u8ba1\u6700\u597d\u7684\u516c\u5bd3\u51fa\u79df\u800c\u81ea\u8c6a\uff0c\u201d\u6768\u8bf4\u3002 \u201c\u5979\u4e3a\u6240\u6709\u4f4f\u5bbf\u52a0\u65e9\u9910 [\u623f\u95f4] \u914d\u5907\u4e86\u53cc\u7b52\u671b\u8fdc\u955c\u3002......\u9547\u4e0a\u7684\u5927\u591a\u6570\u4eba\uff0c\u5c24\u5176\u662f\u5efa\u7b51\u7269\u7684\u6d77\u6e2f\u4e00\u4fa7\uff0c\u4f3c\u4e4e\u90fd\u6709\u53cc\u7b52\u671b\u8fdc\u955c\uff0c\u201dSheehy \u8bf4\u3002 \u201c\u5f88\u591a\u4eba\u628a\u5b83\u4eec\u7559\u5728\u90a3\u91cc\u89c2\u770b\u9cb8\u9c7c\u7a81\u7834\u548c\u5c71\u7f8a\u5403\u8349\u4e4b\u7c7b\u7684\u4e8b\u60c5\uff0c\u201d\u6768\u8bf4\u3002 \u201c\u4f46\u516d\u6708\u603b\u662f\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u4e9b\u57fa\u672c\u4e0a\u662f\u4e3a\u4e86\u67e5\u660e\u4f60\u4e08\u592b\u662f\u5426\u5728\u9152\u5427\u3002\u201d\n\u201c\u8fd9\u5bb6\u5546\u5e97\u5e76\u4e0d\u662f\u4e00\u76f4\u90fd\u5f88\u5fd9\uff0c\u201d\u6768\u8bf4\u3002 \u201c\u6240\u4ee5\u4ed6\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5728\u90a3\u53f0\u7535\u8111\u4e0a\u3002\u6211\u8bb0\u5f97\u52a0\u91cc\u8bf4\u4ed6\u7684\u4e00\u4e2a\u75f4\u8ff7\u662f\u8ddf\u4e0a\u524d 40 \u540d\u7684\u5e7f\u64ad\u3002\u201d Sheehy \u8bf4\uff0c\u50cf Gary Carr \u8fd9\u6837\u7684\u5c45\u6c11\u5b8c\u5168\u77e5\u9053\u4ed6\u4eec\u7684\u57ce\u9547\u5bf9\u5916\u4eba\u6765\u8bf4\u662f\u591a\u4e48\u6709\u8da3\u3002 \u201c\u5f53\u6211\u4eec\u8bbe\u7f6e\u6211\u4eec\u7684\u8096\u50cf\u65f6\uff0c\u4ed6\u8bf4\uff0c&#39;\u54e6\uff0c\u4f19\u8ba1\uff0c\u4e5f\u8bb8\u6211\u5e94\u8be5\u522e\u80e1\u5b50\uff0c&#39;\u201d\u5979\u8bf4\u3002 \u201c\u548c\u4ed6\u4e00\u8d77\u5728\u5546\u5e97\u91cc\u7684\u90a3\u4e2a\u4eba\u5c31\u50cf\uff0c&#39;\u6ca1\u6709\u4eba\uff0c\u4ed6\u4eec\u60f3\u8981\u963f\u62c9\u65af\u52a0\u7684\u8d43\u7269\uff0c\u4f60\u77e5\u9053\u5417\uff1f\u4ed6\u4eec\u60f3\u8981\u90a3\u4e2a\u771f\u6b63\u7684\u963f\u62c9\u65af\u52a0\u3002&#39; \u201d \u4f4f\u5728 Begich Towers \u7684\u8001\u5e08 Erika Thompson \u8bf4\uff0c\u60e0\u8482\u5c14\u7684\u751f\u6d3b\u5f88\u6b63\u5e38\u3002 \u201c\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u5bb6\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u8ba4\u8bc6\u6bcf\u4e2a\u4eba\u3002\u8fd9\u662f\u4e00\u4e2a\u5c4b\u6a90\u4e0b\u7684\u793e\u533a\u3002\u6211\u4eec\u62e5\u6709\u6211\u4eec\u9700\u8981\u7684\u4e00\u5207\u3002\u201d\u5979\u5df2\u7ecf\u5728\u90a3\u91cc\u4f4f\u4e86\u4e94\u5e74\u4e86\u3002\u5979\u8bf4\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u5173\u4e8e\u4ed6\u4eec\u5982\u4f55\u5728\u60e0\u8482\u5c14\u7ed3\u675f\u7684\u6545\u4e8b\u3002 \u201c\u6709\u4e9b\u4eba\u559c\u6b22\u5b83\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u771f\u6b63\u5177\u6709\u793e\u4ea4\u6027\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u6709\u4e9b\u4eba\u559c\u6b22\u5b83\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u9690\u5c45\u3002\u201d\n\u5728 Young \u548c Sheehy \u4e24\u5468\u7684\u62a5\u9053\u4e4b\u65c5\u4e4b\u540e\uff0c\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u5bf9\u81ea\u5df1\u7684\u5bb6\u4e61\u6709\u4e86\u5168\u65b0\u7684\u770b\u6cd5\u3002 \u201c\u666f\u8272\u592a\u4e0d\u771f\u5b9e\u4e86\u3002\u4f60\u6709\u8fd9\u4e2a\u6d77\u6e7e\uff0c\u7136\u540e\u662f\u8fd9\u4e9b\u5de8\u5927\u7684\u5c71\u8109\u3002\u5f88\u96be\u60f3\u8c61\u4eba\u4eec\u6bcf\u5929\u90fd\u80fd\u9192\u6765\uff0c\u201d\u6768\u8bf4\u3002 \u201c\u5b9e\u5728\u592a\u68d2\u4e86\u3002\u201d \u201c\u56de\u5230\u7ebd\u7ea6\uff0c\u6211\u770b\u5230\u4e86\u6211\u4eec\u6240\u6709\u4eba\u59a5\u534f\u7684\u65b9\u5f0f\uff0c\u201d\u5e0c\u4f0a\u8bf4\u3002 \u201c\u5bf9\u4e8e\u60e0\u8482\u5c14\u7684\u5f88\u591a\u4eba\u6765\u8bf4\uff0c\u5728\u90a3\u91cc\u6bd4\u5728\u4e0b\u9762\u7684\u67d0\u4e2a\u5730\u65b9\u66f4\u6709\u610f\u4e49\u3002\u201d", "note_en": "Whittier, Alaska, is a sleepy town on the west side of Prince William Sound, tucked between picturesque mountains. But if you&#39;re picturing a small huddle of houses, think again.\n  Instead, on the edge of town, there stands a 14-story building called Begich Towers \u2014 a former Army barracks, resembling an aging hotel, where most of the town&#39;s 200 residents live.\n    Writer Erin Sheehy and photographer Reed Young visited Whittier for a report, &#34;Town Hall,&#34; in  The California Sunday Magazine.\n  When they first stepped inside Begich Towers, Sheehy says it felt like the halls of her high school.\n    &#34;There were bulletin boards along the hallway entrance,&#34; she says. &#34;It&#39;s concrete blocks that look like cinder block, and they were all painted pale yellow.&#34;\n  The post office is near the entrance and the police station is right down the hall.\n    Finding your way to the remote town isn&#39;t easy. You can get to Whittier by sea or take a long, one-lane tunnel through the mountains, which at any given time only runs one way.\n  &#34;It&#39;s still a fairly inaccessible town,&#34; Young says. &#34;Plus, at night, they close the tunnel completely.&#34;\n    Then there&#39;s the weather: The 60 mph winter winds are brutal. That&#39;s why residents inside Begich Towers have everything they need under one roof.\n    &#34;And there&#39;s a convenience store,&#34; Reed says. &#34;There is a health clinic.&#34; It&#39;s not a hospital, but they can handle minor ailments.\n      One Whittier resident, June Miller, owns a bed and breakfast on the building&#39;s top two floors.\n  &#34;She prides herself on having the fanciest and prettiest, best interior-designed condos for rent in the whole town,&#34; Young says.\n    &#34;She outfitted all of the bed and breakfast [rooms] with binoculars. ... Most people in town, particularly on the harbor side of the building, seem to have binoculars,&#34; Sheehy says.\n  &#34;A lot of people keep them there to watch whales breaching and mountain goats grazing and things like that,&#34; Young says. &#34;But June always told us that these are basically for finding out if your husband&#39;s at the bar.&#34;\n    &#34;The store isn&#39;t so busy all the time,&#34; Young says. &#34;So he spends a lot of time on that computer. And I remember Gary saying that one of his obsessions was keeping up with Top 40 radio.&#34;\n    Sheehy says residents like Gary Carr were fully aware of how interesting their town was to outsiders.\n    &#34;When we were setting up our portrait, he said, &#39;Oh, man, maybe I should shave my beard,&#39; &#34; she says. &#34;And this guy who was in the store with him was like, &#39;No man, they want that Alaska swag, you know? They want that real Alaska.&#39; &#34;\n    Erika Thompson, a teacher who lives in Begich Towers, says life is pretty normal in Whittier.\n  &#34;For me it&#39;s just home,&#34; she says. &#34;For the most part, you know everybody. It&#39;s a community under one roof. We have everything we need.&#34;\n       She&#39;s lived there for five years now. She says everyone has a story of how they ended up in Whittier.\n  &#34;Some people love it because it can be really social,&#34; she says. &#34;And some people love it because it can be reclusive.&#34;\n  After Young and Sheehy&#39;s two-week reporting trip, they say they have a whole new perspective on their own hometowns.\n  &#34;The views were just unreal. You have this bay, and then these giant mountains. It&#39;s hard to imagine that people get to wake up to that every day,&#34; Young says. &#34;It was incredible.&#34;\n  &#34;Coming back to New York, I see the ways that all of us compromise things,&#34; Sheehy says. &#34;And for a lot of people in Whittier, it makes more sense to be there than somewhere down here.&#34;", "posttime": "2021-07-29 21:51:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c4b\u6a90\u4e0b,alaska,\u60e0\u8482\u5c14", "title": "\u963f\u62c9\u65af\u52a0\u60e0\u8482\u5c14\uff0c\u4e00\u4e2a\u5c4b\u6a90\u4e0b\u7684\u793e\u533a\uff082015\uff09", "title_en": "Whittier, Alaska, a community under one roof (2015)", "transed": 1, "url": "https://www.npr.org/2015/01/18/378162264/welcome-to-whittier-alaska-a-community-under-one-roof", "via": "", "real_tags": ["\u5c4b\u6a90\u4e0b", "alaska", "\u60e0\u8482\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "de8edb6e248a076d1312f57ae981391a.jpg", "infoid": 1070247, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2018 \u5e74\u5e95\uff0c\u5728\u8c37\u6b4c\u5de5\u4f5c\u4e86\u56db\u5e74\u7684\u7814\u7a76\u5458 Chelsey Glasson \u642c\u5230\u4e86\u4e00\u4e2a\u65b0\u56e2\u961f\u3002\u5f53\u65f6\u5979\u6000\u5b55\u4e86\uff0c\u5979\u8bf4\u5979\u7acb\u523b\u89c9\u5f97\u81ea\u5df1\u53d7\u5230\u4e86\u6b67\u89c6\u3002\u5979\u7684\u65b0\u8001\u677f\u6697\u793a\u5979\u5373\u5c06\u4f11\u7684\u4ea7\u5047\u53ef\u80fd\u4f1a\u201c\u52a8\u6447\u201d\uff0c\u5979\u5b9e\u9645\u4e0a\u88ab\u5265\u593a\u4e86\u7ba1\u7406\u804c\u8d23\u3002\u5f53\u5979\u5411\u4eba\u529b\u8d44\u6e90\u90e8\u63d0\u51fa\u6295\u8bc9\u65f6\uff0c\u5979\u83b7\u5f97\u4e86 10 \u6b21\u514d\u8d39\u54a8\u8be2\uff0c\u8be5\u54a8\u8be2\u5e08\u4e0e Google \u7b7e\u7ea6\u5e76\u5728\u6821\u56ed\u5185\u6709\u7a7a\u3002\u5f53\u65f6\uff0c\u5979\u60f3\uff0c\u201c\u591a\u4e48\u68d2\u7684\u8d44\u6e90\uff0c\u6211\u5f53\u7136\u8981\u5229\u7528\u5b83\u3002\u201d\u4e00\u5e74\u591a\u540e\uff0c\u5f53\u683c\u62c9\u68ee\u5973\u58eb\u5bf9\u8c37\u6b4c\u63d0\u8d77\u6000\u5b55\u6b67\u89c6\u8bc9\u8bbc\u65f6\uff0c\u5979\u7684\u987e\u95ee\u544a\u8bc9\u683c\u62c9\u68ee\u5973\u58eb\uff0c\u5728\u8c37\u6b4c\u8981\u6c42\u8bbf\u95ee\u4ed6\u4eec\u7684\u4f1a\u8bdd\u8bb0\u5f55\u540e\uff0c\u5979\u770b\u5230\u5979\u201c\u771f\u7684\u5f88\u7d27\u5f20\u548c\u4e0d\u8212\u670d\u201d\u3002 \u201c\u5979\u62c5\u5fc3\u4e0e\u6211\u5408\u4f5c\u4f1a\u635f\u5bb3\u5979\u4e0e\u8c37\u6b4c\u7684\u5408\u540c\uff0c\u201d\u683c\u62c9\u68ee\u5973\u58eb\u8bf4\u3002 \u201c\u5728\u6211\u7684\u7ecf\u5386\u4e2d\uff0c\u90a3\u662f\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4f4e\u843d\u3001\u4ee4\u4eba\u6cae\u4e27\u7684\u65f6\u523b\uff0c\u201d\u5979\u8bf4\u3002\u897f\u96c5\u56fe\u5927\u5b66\u54a8\u8be2\u9879\u76ee\u526f\u6559\u6388\u514b\u91cc\u65af\u8482\u00b7\u674e (Kristi Lee) \u8868\u793a\uff0c\u8f85\u5bfc\u5458\u5efa\u8bae\u5728\u683c\u62c9\u68ee\u5973\u58eb\u63d0\u8d77\u8bc9\u8bbc\u540e\u7acb\u5373\u7ed3\u675f\u4ed6\u4eec\u7684\u54a8\u8be2\uff0c\u8fd9\u542c\u8d77\u6765\u50cf\u662f\u201c\u653e\u5f03\u5ba2\u6237\u201d\uff0c\u8fd9\u53ef\u80fd\u8fdd\u53cd\u4e86\u6b63\u5f0f\u7684\u8f85\u5bfc\u5458\u9053\u5fb7\u51c6\u5219\u3002\u683c\u62c9\u68ee\u5973\u58eb\u7684\u987e\u95ee\u6ca1\u6709\u56de\u5e94\u4e00\u518d\u63d0\u51fa\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\u683c\u62c9\u68ee\u5973\u58eb\u8bf4\uff0c\u8c37\u6b4c\u5df2\u7ecf\u5728\u4f7f\u7528\u8fd9\u4e9b\u4f20\u7968\u8bb0\u5f55\u8868\u660e\u5979\u56e0\u4e3a\u4e2a\u4eba\u539f\u56e0\u800c\u611f\u5230\u75db\u82e6\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u6f5c\u5728\u7684\u6709\u6bd2\u5de5\u4f5c\u73af\u5883\u6216\u6b67\u89c6\u3002\u5979\u8bf4\u5979\u66fe\u88ab\u201c\u95ee\u5230\u975e\u5e38\u79c1\u5bc6\u7684\u95ee\u9898\u201d\uff0c\u4e86\u89e3\u5979\u7684\u5fc3\u7406\u5065\u5eb7\u72b6\u51b5\u4ee5\u53ca\u5979\u6700\u521d\u5bfb\u6c42\u6cbb\u7597\u7684\u539f\u56e0\u3002\u5728\u63a5\u53d7\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u91c7\u8bbf\u65f6\uff0c\u516d\u540d\u524d\u4efb\u548c\u73b0\u4efb\u8c37\u6b4c\u5458\u5de5\u56de\u5fc6\u8bf4\uff0c\u5f53\u4ed6\u4eec\u516c\u5f00\u53cd\u5bf9\u5de5\u4f5c\u573a\u6240\u7684\u4e0d\u5f53\u884c\u4e3a\u65f6\uff0c\u4ed6\u4eec\u4e5f\u83b7\u5f97\u4e86\u514d\u8d39\u7684\u77ed\u671f\u54a8\u8be2\u2014\u2014\u79f0\u4e3a\u5458\u5de5\u63f4\u52a9\u8ba1\u5212 (EAP)\u2014\u2014\u6216\u75c5\u5047\u3002\u8fd9\u79cd\u6a21\u5f0f\u6700\u521d\u662f\u7531 NBC \u65b0\u95fb\u5728 3 \u6708\u4efd\u62a5\u9053\u7684\uff0c\u5176\u4e2d\u5f15\u7528\u4e86\u5341\u591a\u540d\u73b0\u4efb\u548c\u524d\u4efb\u5458\u5de5\u3002\n\u4e00\u4f4d\u56e0\u4e0d\u5141\u8bb8\u4e0e\u8bb0\u8005\u4ea4\u8c08\u800c\u8981\u6c42\u533f\u540d\u7684\u8c37\u6b4c\u9ad8\u7ba1\u8868\u793a\uff0c\u5f53\u5458\u5de5\u62a5\u544a\u4e0e\u540c\u4e8b\u7684\u5de5\u4f5c\u6709\u56f0\u96be\u65f6\uff0c\u8c37\u6b4c\u7684\u4eba\u529b\u8d44\u6e90\u5b98\u5458\u4f1a\u88ab\u6307\u793a\u63d0\u9192\u8fd9\u4e9b\u5458\u5de5\uff0c\u516c\u53f8\u63d0\u4f9b\u591a\u8fbe 20 \u79cd\u6cbb\u7597\u4e00\u5e74\u7684\u4f1a\u8bae\u3002 \uff08\u8c37\u6b4c\u6700\u8fd1\u5c06\u798f\u5229\u6269\u5927\u5230 25 \u6b21\u3002\uff09\u5f53\u7136\uff0c\u63d0\u4f9b\u54a8\u8be2\u4e0d\u4e00\u5b9a\u662f\u574f\u4e8b\u3002 2018 \u5e74\uff0c\u5728 YouTube \u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5723\u5e03\u9c81\u8bfa\u7684\u603b\u90e8\u53d1\u751f\u67aa\u51fb\u4e8b\u4ef6\u540e\uff0cYouTube \u7684\u6bcd\u516c\u53f8\u8c37\u6b4c\u4e3a\u5458\u5de5\u63d0\u4f9b\u4e86\u77ed\u671f\u54a8\u8be2\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u5e94\u5bf9\u521b\u4f24\u3002\u8fd9\u79cd\u54a8\u8be2\u4e5f\u4e0d\u662f\u8c37\u6b4c\u72ec\u6709\u7684\u3002\u8bb8\u591a\u884c\u4e1a\u7684\u5927\u516c\u53f8\uff0c\u5305\u62ec\u91d1\u878d\u548c\u7269\u6d41\uff0c\u90fd\u63d0\u4f9b\u7c7b\u4f3c\u7684\u670d\u52a1\u3002\u4f46\u4eba\u529b\u8d44\u6e90\u4e13\u5bb6\u57c3\u91cc\u5361\u00b7\u65af\u79d1\u7279 (Erica Scott) \u8868\u793a\uff0c\u5982\u679c\u5c06\u54a8\u8be2\u7528\u4f5c\u6743\u5b9c\u4e4b\u8ba1\u6216\u89e3\u51b3\u7d27\u5f20\u7684\u5de5\u4f5c\u573a\u6240\u60c5\u51b5\u7684\u5feb\u901f\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u4e9b\u60c5\u51b5\u5728\u6cd5\u5f8b\u4e0a\u53ef\u80fd\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u9a9a\u6270\u6216\u6b3a\u51cc\uff0c\u4f46\u4ecd\u7136\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5979\u8bf4\uff0c\u5728\u6307\u5bfc\u5458\u5de5\u63a5\u53d7\u54a8\u8be2\u8ba1\u5212\u7684\u540c\u65f6\u5bb9\u5fcd\u7cdf\u7cd5\u7684\u7ecf\u7406\u662f\u4e00\u79cd\u201c\u4ee4\u4eba\u9707\u60ca\u7684\u201d\u65b9\u5f0f\uff0c\u53ef\u4ee5\u201c\u4fdd\u62a4\u96c7\u4e3b\u514d\u4e8e\u627f\u62c5\u8d23\u4efb\u201d\u3002 \u201c\u8fd9\u4e9b\u662f\u96c7\u4e3b\u6709\u4e49\u52a1\u5904\u7406\u7684\u96c7\u5458\u4e8b\u52a1\uff0c\u800c\u4e0d\u662f\u7b2c\u4e09\u65b9\u3002\u201d\u4e00\u4e9b\u63d0\u51fa\u62c5\u5fe7\u7684\u8c37\u6b4c\u5458\u5de5\u8868\u793a\uff0c\u867d\u7136\u75c5\u5047\u548c\u54a8\u8be2\u662f\u6709\u7528\u7684\u8d44\u6e90\uff0c\u4f46\u5bf9\u4ed6\u4eec\u6295\u8bc9\u7684\u5185\u90e8\u8c03\u67e5\u8981\u4e48\u6ca1\u6709\u8fdb\u884c\uff0c\u8981\u4e48\u6700\u7ec8\u62d6\u4e86\u51e0\u4e2a\u6708\u3002 \u201c\u6211\u4eec\u8ba4\u4e3a\uff0c\u63d0\u4f9b\u5458\u5de5\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7684\u514d\u8d39\u7b2c\u4e09\u65b9\u54a8\u8be2\u548c\u652f\u6301\u662f\u96c7\u4e3b\u4e3a\u652f\u6301\u5458\u5de5\u6240\u505a\u7684\u6b63\u786e\u9009\u62e9\uff0c\u800c\u4e14\u8fd9\u5bf9\u8bb8\u591a\u5458\u5de5\u6765\u8bf4\u975e\u5e38\u6709\u76ca\uff0c\u201dShannon Newberry \u8bf4\u3002\u8c37\u6b4c\u53d1\u8a00\u4eba\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\u3002 \u201c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u63d0\u4f9b\u5458\u5de5\u63f4\u52a9\u8ba1\u5212\u6765\u4ee3\u66ff\u8c03\u67e5\uff0c\u201d\u5979\u8865\u5145\u8bf4\uff0c\u5e76\u6307\u51fa\u53bb\u5e74\u5728\u5168\u516c\u53f8\u8303\u56f4\u5185\u5b9e\u65bd\u7684\u6295\u8bc9\u8c03\u67e5\u65b9\u5f0f\u7684\u53d8\u5316\u3002\u8be5\u516c\u53f8\u62e5\u6709\u8d85\u8fc7 140,000 \u540d\u5458\u5de5\uff0c\u8fd8\u8865\u5145\u8bf4\uff0c\u5728 2020 \u5e74\u4f7f\u7528\u8fc7\u54a8\u8be2\u670d\u52a1\u7684\u8c37\u6b4c\u8c03\u67e5\u53d7\u8bbf\u8005\u4e2d\uff0c90% \u5bf9\u8fd9\u9879\u670d\u52a1\u611f\u5230\u6ee1\u610f\u6216\u9ad8\u5ea6\u6ee1\u610f\u3002\n\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5f53\u516c\u53f8\u5f15\u5bfc\u5458\u5de5\u63a5\u53d7\u54a8\u8be2\u65f6\uff0c\u8be5\u4eba\u4f1a\u88ab\u8981\u6c42\u4e0e\u54a8\u8be2\u5e08\u5206\u4eab\u4ed6\u4eec\u7684\u533b\u7597\u548c\u5fc3\u7406\u5065\u5eb7\u53f2\uff0c\u8fd9\u4e0e\u53bb\u770b\u65b0\u533b\u751f\u6ca1\u4ec0\u4e48\u4e24\u6837\u3002\u4f46 Mizrahi Law \u7684\u521b\u59cb\u4eba Ramit Mizrahi \u8868\u793a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u4ed6\u4eec\u9677\u5165\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u5728\u5de5\u4f5c\u573a\u6240\u6216\u529e\u516c\u5ba4\u6821\u56ed\u4e2d\u4f1a\u51fa\u73b0\u6709\u5173\u4ed6\u4eec\u8fc7\u53bb\u7684\u654f\u611f\u4fe1\u606f\u3002\u5c31\u4e1a\u5f8b\u5e08 Ann Hull \u8868\u793a\uff0c\u5728\u8fc7\u53bb\u4e94\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u6ee5\u7528\u77ed\u671f\u54a8\u8be2\u670d\u52a1\u7684\u73b0\u8c61\u5728\u5404\u884c\u5404\u4e1a\u5f00\u59cb\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\u3002\u5979\u5bf9\u987e\u95ee\uff08\u901a\u5e38\u662f\u4e0e\u591a\u5bb6\u516c\u53f8\u5408\u4f5c\u7684\u627f\u5305\u5546\uff09\u4f1a\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u4fdd\u62a4\u5458\u5de5\u7684\u9690\u79c1\u8868\u793a\u62c5\u5fe7\u3002\u7c73\u5179\u62c9\u5e0c\u5973\u58eb\u8bf4\uff0c\u5982\u679c\u5458\u5de5\u7ee7\u7eed\u8d77\u8bc9\u516c\u53f8\u8981\u6c42\u7cbe\u795e\u635f\u5931\uff0c\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f97\u6bd4\u4ec5\u8d77\u8bc9\u7ecf\u6d4e\u635f\u5931\u66f4\u591a\u7684\u8d54\u507f\uff0c\u96c7\u4e3b\u53ef\u80fd\u4f1a\u5229\u7528\u8fd9\u4e9b\u79c1\u4eba\u8bb0\u5f55\uff0c\u5c31\u50cf\u8c37\u6b4c\u5728\u683c\u62c9\u68ee\u5973\u58eb\u7684\u6848\u4ef6\u4e2d\u6240\u505a\u7684\u90a3\u6837.\u6cbb\u7597\u6216\u54a8\u8be2\u8d8a\u65b0\uff0c\u7b14\u8bb0\u5c31\u8d8a\u6709\u53ef\u80fd\u88ab\u4f7f\u7528\u3002 \u201c\u5982\u679c\u4e00\u4e2a\u6f5c\u5728\u5ba2\u6237\u6253\u7535\u8bdd\u7ed9\u6211\u8bf4\uff1a\u2018\u6211\u5728\u5de5\u4f5c\u4e2d\u53d7\u5230\u9a9a\u6270\uff0c\u6211\u4f1a\u611f\u5230\u975e\u5e38\u7d27\u5f20\u548c\u7126\u8651\u3002\u4f60\u8ba4\u4e3a\u6211\u5e94\u8be5\u4f7f\u7528\u6211\u516c\u53f8\u7684 EAP \u5417\uff1f&#39;\u201d Mizrahi \u5973\u58eb\u8bf4\uff0c\u201c\u6211\u4f1a\u5efa\u8bae\u4ed6\u4eec\u4e0d\u8981\u8fd9\u6837\u505a\u3002\u201d 2018 \u5e74\u590f\u5929\uff0c\u65f6\u4efb\u8c37\u6b4c\u5458\u5de5\u7684\u57c3\u7c73\u00b7\u5c3c\u7279\u83f2\u5c14\u5fb7 (Emi Nietfeld) \u5411\u4eba\u529b\u8d44\u6e90\u90e8\u63d0\u8d77\u4e86\u5bf9\u5176\u76f4\u63a5\u4e3b\u7ba1\u7684\u6027\u9a9a\u6270\u6295\u8bc9\u3002\u51e0\u4e2a\u6708\u6765\uff0c\u4ed6\u4e00\u76f4\u5728\u5bf9\u5979\u53d1\u8868\u4e0d\u6070\u5f53\u7684\u8bc4\u8bba\uff0c\u5979\u5728\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u7684\u4e00\u7bc7\u5ba2\u5ea7\u6587\u7ae0\u4e2d\u5199\u9053\uff0c\u5e76\u4ee5\u8ba9\u5979\u611f\u5230\u4e0d\u8212\u670d\u7684\u65b9\u5f0f\u89e6\u6478\u5979\u3002\u8c03\u67e5\u6301\u7eed\u4e86\u8fd1\u4e09\u4e2a\u6708\u3002\u5728\u6b64\u671f\u95f4\uff0c\u5c3c\u7279\u83f2\u5c14\u5fb7\u5973\u58eb\u4ecd\u7136\u5750\u5728\u9a9a\u6270\u8005\u65c1\u8fb9\uff0c\u4e0e\u4ed6\u8fdb\u884c\u4e00\u5bf9\u4e00\u7684\u4f1a\u8c08\u3002\u5979\u611f\u5230\u7d27\u5f20\u3001\u4e0d\u5b89\uff0c\u7ecf\u5e38\u65e0\u6cd5\u5165\u7761\u3002\u6bcf\u5f53\u5979\u8be2\u95ee\u8c03\u67e5\u65f6\u95f4\u8868\u65f6\uff0c\u8c37\u6b4c\u90fd\u4f1a\u4e3a\u5979\u63d0\u4f9b\u4e09\u4e2a\u76f8\u540c\u7684\u9009\u62e9\uff1a\u514d\u8d39\u54a8\u8be2\u3001\u5728\u5bb6\u5de5\u4f5c\u6216\u75c5\u5047\u3002 \u201c\u8fd9\u8ba9\u6211\u89c9\u5f97\u95ee\u9898\u51fa\u5728\u6211\u8eab\u4e0a\uff0c\u201d\u5979\u8bf4\u3002\u5728\u5979\u4e0e\u65f6\u62a5\u5206\u4eab\u7684\u90a3\u6bb5\u65f6\u95f4\u7684\u65e5\u8bb0\u4e2d\uff0c\u5979\u5199\u9053\uff1a\u201c\u6211\u8ba8\u538c\u516c\u53f8\u5bf9\u5f85\u6211\u7684\u65b9\u5f0f\uff0c\u5c31\u50cf\u6211\u751f\u75c5\u4e86\u4e00\u6837\u3002\u201d\n\u5f53\u65f6\uff0c\u8c37\u6b4c\u5df2\u4e0e Concern Health \u7b7e\u7ea6\u63d0\u4f9b\u54a8\u8be2\u670d\u52a1\uff0c\u6b64\u540e\u5b83\u8f6c\u800c\u4f7f\u7528 Lyra Health\u3002\u5728 Google \u5458\u5de5\u4e0e\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u5171\u4eab\u7684 Lyra \u9690\u79c1\u534f\u8bae\u4e2d\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u9664\u975e\u201c\u6cd5\u9662\u547d\u4ee4\u6216\u5176\u4ed6\u6cd5\u5f8b\u8981\u6c42\u6709\u6b64\u8981\u6c42\u201d\uff0c\u5426\u5219\u672a\u7ecf\u5ba2\u6237\u8bb8\u53ef\uff0c\u4e0d\u4f1a\u4e0e Google \u5171\u4eab\u4fe1\u606f\u3002\u4e0d\u6e05\u695a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u201c\u5176\u4ed6\u6cd5\u5f8b\u8981\u6c42\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4f46\u6cd5\u5f8b\u6709\u65f6\u4f1a\u8981\u6c42\u6cbb\u7597\u5e08\u548c\u987e\u95ee\u5728\u672a\u7ecf\u60a3\u8005\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u5206\u4eab\u79c1\u4eba\u4fe1\u606f\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u60a3\u8005\u5bf9\u4ed6\u4eba\u6784\u6210\u53ef\u4fe1\u7684\u5a01\u80c1\u6216\u62ab\u9732\u513f\u7ae5\u6b63\u5728\u906d\u53d7\u8650\u5f85. Lyra Health \u5728\u5176\u4ed6\u516c\u53f8\u63d0\u4f9b\u54a8\u8be2\u670d\u52a1\uff0c\u5305\u62ec eBay\u3001Facebook \u548c\u661f\u5df4\u514b\uff0c\u6ca1\u6709\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\u5de5\u4f5c\u573a\u6240\u7684\u5fc3\u7406\u5065\u5eb7\u54a8\u8be2\u5df2\u7ecf\u5b58\u5728\u4e86\u4e00\u6bb5\u65f6\u95f4\uff1a\u5b83\u53ef\u4ee5\u8ffd\u6eaf\u5230 1930 \u5e74\u4ee3\u540e\u671f\uff0c\u5f53\u65f6\u5b83\u4e3b\u8981\u7528\u4e8e\u5e2e\u52a9\u516c\u53f8\u8bc6\u522b\u751f\u4ea7\u529b\u4e0b\u964d\u7684\u9157\u9152\u5458\u5de5\uff0c\u540e\u6765\u5728 1940 \u5e74\u4ee3\u6269\u5c55\u5230\u54a8\u8be2\u3002\u5b83\u901a\u5e38\u4e0e\u901a\u8fc7\u5065\u5eb7\u4fdd\u9669\u63d0\u4f9b\u7684\u5fc3\u7406\u5065\u5eb7\u6cbb\u7597\u5206\u5f00\u3002\u7136\u800c\uff0c\u8fd9\u4e24\u79cd\u5f62\u5f0f\u7684\u54a8\u8be2\u548c\u6cbb\u7597\u90fd\u5e94\u9075\u5b88\u5065\u5eb7\u4fdd\u9669\u6d41\u901a\u548c\u8d23\u4efb\u6cd5\u6848\uff0c\u6216 HIPAA\uff0c\u8fd9\u662f\u4e00\u9879\u786e\u4fdd\u60a3\u8005\u9690\u79c1\u7684\u8054\u90a6\u6cd5\u5f8b\u3002 Nietfeld \u5973\u58eb\u5df2\u7ecf\u5728\u770b\u5916\u90e8\u6cbb\u7597\u5e08\uff0c\u4f46\u5728\u63d0\u51fa\u6027\u9a9a\u6270\u6295\u8bc9\u540e\uff0c\u5979\u8003\u8651\u4e0e\u73b0\u573a\u987e\u95ee\u9884\u7ea6\uff0c\u8ba4\u4e3a\u4ed6\u4eec\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u4e86\u89e3\u8c37\u6b4c\u7684\u201c\u975e\u5e38\u7279\u6b8a\u7684\u6587\u5316\u201d\u3002\u5979\u88ab\u544a\u77e5\u8981\u7b49\u5f85\u4e09\u5230\u56db\u4e2a\u6708\u624d\u80fd\u627e\u5230\u987e\u95ee\uff0c\u8fd9\u8868\u660e\u8be5\u670d\u52a1\u7684\u4f7f\u7528\u8303\u56f4\u6709\u591a\u5e7f\u3002\u6700\u7ec8\uff0c\u5979\u5728\u8c03\u67e5\u671f\u95f4\u6ca1\u6709\u4f7f\u7528\u54a8\u8be2\u670d\u52a1\u3002\u540e\u6765\uff0c\u5f53\u4eba\u529b\u8d44\u6e90\u90e8\u8bc1\u5b9e\u4e86\u5979\u7684\u8bf4\u6cd5\u65f6\uff0c\u5979\u518d\u6b21\u63a5\u53d7\u4e86\u54a8\u8be2\uff0c\u4f46\u8868\u793a\u4ecd\u5e0c\u671b\u5979\u5750\u5728\u9a9a\u6270\u5979\u7684\u4eba\u65c1\u8fb9\u3002 \u201cAlphabet \u4f3c\u4e4e\u5c06 EAP \u89c6\u4e3a\u6709\u4eba\u5728\u5de5\u4f5c\u4e2d\u9047\u5230\u95ee\u9898\u65f6\u7684\u9996\u9009\u3002\u4ed6\u4eec\u4f3c\u4e4e\u5728\u8c03\u67e5\u5f00\u59cb\u4e4b\u524d\u3001\u5728\u4eba\u529b\u8d44\u6e90\u8fc7\u7a0b\u4e2d\u751a\u81f3\u5728\u7ed3\u679c\u4e4b\u540e\u90fd\u5efa\u8bae\u4f7f\u7528 EAP\uff0c\u201dAlphabet \u5de5\u4eba\u5de5\u4f1a\u53d1\u8a00\u4eba\u514b\u91cc\u65af\u65bd\u5bc6\u7279\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\u3002 \u201c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u7684\u9009\u62e9\uff1a\u6bcf\u5f53\u6709\u4eba\u63d0\u5230\u4efb\u4f55\u60c5\u7eea\u65f6\uff0c\u5b83\u90fd\u662f\u9ed8\u8ba4\u7684\u56de\u9000\uff0c\u800c\u6ca1\u6709\u771f\u6b63\u8003\u8651\u5b83\u662f\u5426\u771f\u7684\u4f1a\u5e2e\u52a9\u53d7\u5f71\u54cd\u7684\u4eba\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ed6\u4eec\u6b63\u5728\u6709\u6548\u5730\u5c06\u5fc3\u7406\u5065\u5eb7\u670d\u52a1\u6b66\u5668\u5316\u3002\u201d\u683c\u62c9\u68ee\u5973\u58eb\u2014\u2014\u5979\u5bf9\u8c37\u6b4c\u7684\u8bc9\u8bbc\u5c06\u4e8e 12 \u6708\u5f00\u5ead\u5ba1\u7406\u2014\u2014\u5979\u8bf4\uff0c\u4f5c\u4e3a\u4e00\u540d\u7ecf\u7406\uff0c\u5979\u88ab\u6307\u793a\u9f13\u52b1\u4e00\u540d\u9677\u5165\u56f0\u5883\u7684\u5458\u5de5\u4f7f\u7528\u54a8\u8be2\u670d\u52a1\u3002\u5979\u6536\u5230\u4e86\u4e00\u4e2a\u5e26\u6709\u5fc3\u7406\u5065\u5eb7\u9009\u9879\u7684\u7535\u5b50\u90ae\u4ef6\u6a21\u677f\uff0c\u53ef\u4ee5\u8f6c\u53d1\u7ed9\u5979\u7684\u76f4\u63a5\u4e0b\u5c5e\uff0c\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u5bf9\u5176\u526f\u672c\u8fdb\u884c\u4e86\u5ba1\u67e5\u3002\u683c\u62c9\u68ee\u5973\u58eb\u8bf4\uff0c\u5f53\u5979\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u53d7\u5230\u4e3b\u7ba1\u7684\u6b67\u89c6\u65f6\uff0c\u5979\u6536\u5230\u4e86\u4e00\u5c01\u6765\u81ea\u4eba\u529b\u8d44\u6e90\u90e8\u7684\u7c7b\u4f3c\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd9\u6b21\u662f\u9f13\u52b1\u5979\u4f7f\u7528\u54a8\u8be2\u670d\u52a1\u3002\u4f46\u4eba\u529b\u8d44\u6e90\u90e8\u5e76\u6ca1\u6709\u8c03\u67e5\u5979\u7684\u4e3b\u5f20\uff0c\u6b63\u5982\u5979\u5728\u6cd5\u5ead\u6587\u4ef6\u4e2d\u6240\u58f0\u79f0\u7684\u90a3\u6837\u3002 \u201c\u5f53\u4f60\u53bb\u4eba\u529b\u8d44\u6e90\u90e8\u5bfb\u6c42\u5e2e\u52a9\u65f6\uff0c\u4f60\u88ab\u544a\u77e5\uff0c&#39;\u4f60\u8003\u8651\u8fc7\u54a8\u8be2\u5417\uff1f&#39;\u8fd9\u6700\u7ec8\u662f\u5728\u4f20\u8fbe\u4f60\u662f\u95ee\u9898\u6240\u5728\uff0c\u201d\u5979\u8bf4\u3002\n\u201c\u5b83\u7684\u76ee\u7684\u662f\u8ba9\u4f60\u505c\u4e0b\u811a\u6b65\uff0c\u8ba9\u4f60\u6c89\u9ed8\u2014\u2014\u8fd9\u5f53\u7136\u8ba9\u6211\u505c\u4e0b\u6765\u505c\u987f\u4e00\u4e0b\uff0c\u201d\u5979\u8865\u5145\u9053\u3002 Alphabet \u5de5\u4eba\u5de5\u4f1a\u672c\u6708\u53d1\u5e03\u4e86\u4e00\u4efd\u5728\u7ebf\u8bf7\u613f\u4e66\u2014\u2014\u4e0e\u4e00\u540d\u8c37\u6b4c\u5458\u5de5\u7684\u65b0\u6307\u63a7\u6709\u5173\uff0c\u8be5\u5458\u5de5\u79f0\u5979\u5728 5 \u6708\u88ab\u4e00\u540d\u540c\u4e8b\u5f3a\u5978\uff0c\u7136\u540e\u4f11\u75c5\u5047\u2014\u2014\u6566\u4fc3\u8be5\u516c\u53f8\u201c\u505c\u6b62\u63a8\u52a8\u5458\u5de5\u5728\u9762\u4e34\u9a9a\u6270\u6216\u5176\u4ed6\u5de5\u4f5c\u573a\u6240\u8650\u5f85\u65f6\u63a5\u53d7 EAP \u6cbb\u7597\u3002\u201d\u53e6\u4e00\u4f4d\u56e0\u4ecd\u5728\u516c\u53f8\u5de5\u4f5c\u800c\u8981\u6c42\u533f\u540d\u7684\u8c37\u6b4c\u5458\u5de5\u56de\u5fc6\u8bf4\uff0c\u5f53\u5979\u62b1\u6028\u4e00\u540d\u79cd\u65cf\u4e3b\u4e49\u548c\u6709\u6bd2\u7684\u7ecf\u7406\u65f6\uff0c\u5979\u88ab\u544a\u77e5\u4e5f\u8bb8\u5979\u9700\u8981\u5f39\u6027\u57f9\u8bad\u3002\u5979\u4e5f\u5f97\u5230\u4e86\u540c\u6837\u7684\u9009\u62e9\uff1a\u54a8\u8be2\u6216\u5e26\u85aa\u75c5\u5047\u3002\u5979\u9009\u62e9\u4e86\u540e\u8005\u3002\u4e00\u4f4d\u9a7b\u4f26\u6566\u7684\u524d\u8c37\u6b4c\u5458\u5de5\u8868\u793a\uff0c\u5f53\u5979\u63d0\u51fa\u6027\u4fb5\u72af\u6307\u63a7\u65f6\uff0c\u5979\u4e5f\u5f97\u5230\u4e86\u54a8\u8be2\u3002\u5979\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u5f53\u8c37\u6b4c\u9053\u5fb7\u4eba\u5de5\u667a\u80fd\u56e2\u961f\u7684\u524d\u8054\u5408\u8d1f\u8d23\u4eba\u8482\u59c6\u5c3c\u7279\u00b7\u683c\u5e03\u9c81 (Timnit Gebru) \u5bf9\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u7684\u4eba\u5de5\u667a\u80fd\u5b58\u5728\u504f\u89c1\u8868\u793a\u62c5\u5fe7\u65f6\uff0c\u5979\u8fd8\u83b7\u5f97\u4e86\u201c\u5173\u4e8e\u6b63\u5ff5\u7684\u8d44\u6e90\u201d\u3002\u5979\u62d2\u7edd\u4e86\u8fd9\u4e2a\u63d0\u8bae\uff0c\u544a\u8bc9\u4eba\u529b\u8d44\u6e90\u90e8\uff0c\u201c\u518d\u591a\u7684\u6b63\u5ff5\u4e5f\u65e0\u6cd5\u89e3\u51b3\u5145\u6ee1\u654c\u610f\u7684\u5de5\u4f5c\u73af\u5883\u3002\u201d \u201c\u5f53\u6211\u6709\u65b0\u5ba2\u6237\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c&#39;\u4f60\u5728\u524d\u51e0\u5e74\u89c1\u8fc7\u6cbb\u7597\u5e08\u5417\uff1f&#39;\u201d\u7c73\u5179\u62c9\u5e0c\u5973\u58eb\u8bf4\u3002\u5982\u679c\u67d0\u4eba\u5f88\u4e45\u4ee5\u524d\u56e0\u4e3a\u4e0e\u5f53\u524d\u6848\u4ef6\u65e0\u5173\u7684\u539f\u56e0\u770b\u8fc7\u6cbb\u7597\u5e08\u5e76\u4e14\u5728\u4ed6\u4eec\u7684\u5de5\u4f5c\u73af\u5883\u53d8\u5f97\u5177\u6709\u6311\u6218\u6027\u4e4b\u524d\u7cbe\u795e\u5065\u5eb7\uff0c\u90a3\u4e48\u5f8b\u5e08\u53ef\u4ee5\u4e89\u8fa9\u8bf4\u8fd9\u4e9b\u4ee5\u524d\u7684\u8bb0\u5f55\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u4e0d\u5e94\u5728\u8bc9\u8bbc\u4e2d\u4ea4\u7ed9\u516c\u53f8\u7684\u5f8b\u5e08.\u4f46\u662f\u5f53\u6709\u540c\u671f\u6cbb\u7597\u7684\u8bb0\u5f55\u65f6\uff0c\u5c31\u5f88\u96be\u4e89\u8fa9\u8bf4\u5b83\u4eec\u4e0e\u624b\u5934\u7684\u6848\u4ef6\u65e0\u5173\u3002 \uff08\u5f53\u7136\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bc1\u636e\u5b9e\u9645\u4e0a\u53ef\u80fd\u6700\u7ec8\u652f\u6301\u5458\u5de5\u7684\u6848\u5b50\u3002\uff09\u5f53\u987e\u95ee\u6216\u6cbb\u7597\u5e08\u6536\u5230\u4f20\u7968\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u91c7\u53d6\u884c\u52a8\u53d6\u6d88\u4f20\u7968\uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5bfb\u6c42\u4ea4\u51fa\u201c\u5c3d\u53ef\u80fd\u5c11\u7684\u4fe1\u606f\u201d \uff0c\u201d\u897f\u96c5\u56fe\u5927\u5b66\u7684\u674e\u535a\u58eb\u8bf4\u3002\u7136\u800c\uff0c\u5f53\u6d89\u53ca\u4f20\u5524 EAP \u987e\u95ee\u65f6\uff0c\u201c\u6211\u53ef\u4ee5\u770b\u51fa\u53ef\u80fd\u5b58\u5728\u6f5c\u5728\u7684\u5229\u76ca\u51b2\u7a81\uff0c\u201d\u5979\u8865\u5145\u9053\u3002\n\u5c31\u4e1a\u5f8b\u5e08\u8d6b\u5c14\u5973\u58eb\u8bf4\uff0c\u8f85\u5bfc\u5458\u6240\u5728\u7684\u4f4d\u7f6e\u4e5f\u53ef\u80fd\u6697\u793a\u8fdd\u53cd\u72ec\u7acb\u6027\u3002 \u201c\u6211\u771f\u7684\u5f88\u6000\u7591 EAP \u987e\u95ee\u548c\u4eba\u529b\u8d44\u6e90\u90e8\u5728\u540c\u4e00\u680b\u697c\u91cc\uff0c\u6709\u65f6\u548c\u4eba\u529b\u8d44\u6e90\u90e8\u5728\u540c\u4e00\u95f4\u5957\u623f\u91cc\uff0c\u201d\u5979\u8865\u5145\u9053\u3002\u5979\u56de\u5fc6\u8bf4\uff0c\u5979\u7684\u4e00\u4e2a\u4e0e\u8c37\u6b4c\u65e0\u5173\u7684\u5ba2\u6237\u544a\u8bc9\u96c7\u4e3b\u63d0\u4f9b\u7684\u987e\u95ee\uff0c\u5979\u6b63\u5728\u8003\u8651\u8058\u8bf7\u4e00\u4f4d\u5bf9\u5979\u7684\u5de5\u4f5c\u73af\u5883\u6709\u6295\u8bc9\u7684\u5f8b\u5e08\u3002\u7b2c\u4e8c\u5929\uff0c\u636e\u8d6b\u5c14\u5973\u58eb\u8bf4\uff0c\u4eba\u529b\u8d44\u6e90\u90e8\u628a\u8fd9\u540d\u5458\u5de5\u62c9\u5230\u4e00\u8fb9\uff0c\u95ee\u5979\u4e3a\u4ec0\u4e48\u8981\u8058\u8bf7\u5f8b\u5e08\u2014\u2014\u9664\u4e86\u5979\u7684\u987e\u95ee\uff0c\u5979\u6ca1\u6709\u5411\u4efb\u4f55\u4eba\u900f\u9732\u8fc7\u8fd9\u4e00\u4e8b\u5b9e\u3002\u7c73\u5179\u62c9\u5e0c\u5973\u58eb\u8bf4\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5f53\u539f\u544a\u610f\u8bc6\u5230\u4ed6\u4eec\u7684\u54a8\u8be2\u548c\u533b\u7597\u8bb0\u5f55\u53ef\u80fd\u4f1a\u5728\u60c5\u7eea\u56f0\u6270\u6848\u4ef6\u4e2d\u516c\u5f00\u65f6\uff0c\u4ed6\u4eec\u51b3\u5b9a\u8981\u4e48\u548c\u89e3\u6216\u653e\u5f03\u7d22\u8d54\u3002", "note_en": "In late 2018, Chelsey Glasson, a researcher at  Google who had worked there for four years, moved to a new team. She was pregnant at the time and said she immediately felt she was being discriminated against. Her new boss suggested that her forthcoming maternity leave might  \u201crock the boat,\u201d and she was effectively stripped of her management responsibilities.\n When she filed a complaint with human resources, she was offered 10 free sessions with a mental health counselor who was contracted by Google and available on campus.\n At the time, she thought, \u201cWhat a great resource, of course I\u2019m going to take advantage of this.\u201d\n More than a year later, when Ms. Glasson filed a pregnancy discrimination lawsuit against Google, her counselor told Ms. Glasson that she was \u201creally nervous and uncomfortable\u201d seeing her after Google had asked for access to records of their sessions. \u201cShe was concerned that affiliating with me would compromise her contract with Google,\u201d Ms. Glasson said.\n \u201cThat was an incredibly low, deflating moment in my experience,\u201d she said. That the counselor suggested ending their sessions as soon as Ms. Glasson had filed a lawsuit sounds like \u201cclient abandonment,\u201d said Kristi Lee, associate professor for Seattle University\u2019s counseling program, which is potentially a violation of a formal ethical code for counselors. Ms. Glasson\u2019s counselor did not respond to repeated requests for comment.\n Ms. Glasson said that already Google has been using those subpoenaed records to suggest that she was distressed for personal reasons, not because of a potentially toxic work environment or discrimination. She said she had been \u201casked very intimate questions\u201d about her mental health and why she sought treatment in the first place.\n In interviews with The Times, six former and current Google employees recalled that when they spoke up against workplace misconduct, they, too, were offered free short-term counseling \u2014 called the Employee Assistance Program (E.A.P.) \u2014 or medical leave. This pattern was  originally reported by NBC News in March, which cited over a dozen current and former employees.\n A Google executive, who asked not to be identified because he is not permitted to speak to reporters, said that when employees report difficulties at work with a colleague, Google\u2019s human resources officers are instructed to remind those employees that the company offers up to 20 therapy sessions a year. (Google  recently expanded the benefit to 25 sessions.)\n Of course, offering counseling isn\u2019t necessarily a bad thing. In 2018, after a shooting at YouTube\u2019s headquarters in San Bruno, Calif., Google \u2014 YouTube\u2019s parent company \u2014 offered employees short-term counseling to help deal with the trauma.\n Nor is this kind of counseling unique to Google. Large companies in lots of industries, including finance and logistics, offer something similar.\n But counseling can become problematic when it\u2019s used as a stopgap or a quick fix to resolve tense workplace situations that might not legally be considered harassment or bullying but that are nonetheless unacceptable, said Erica Scott, a human resources expert.\n Tolerating bad managers while directing employees to a counseling program is a \u201cshocking\u201d way to \u201cshield the employer from accountability,\u201d she said. \u201cThese are employee matters that are the employer\u2019s obligation to deal with, not a third party.\u201d\n Some Google staff members who raised concerns said that while medical leave and counseling were helpful resources, an internal investigation into their complaints either didn\u2019t take place, or ended up dragging on for months.\n \u201cWe think that offering free third-party counseling and support that employees can choose to use if they want is the right thing for an employer to do to support people, and they\u2019ve been extremely beneficial for many employees,\u201d Shannon Newberry, a Google spokeswoman, said in an email. \u201cOur Employee Assistance Program would never be offered in place of an investigation,\u201d she added, pointing to companywide  changes put in effect last year to how complaints are investigated. The company, which has more than 140,000 employees, also added that 90 percent of Google survey respondents who had used counseling services in 2020 were satisfied or highly satisfied with the service.\n In most cases, when a company steers an employee to counseling, that person would be asked to share their medical and mental health history with the counselor, not unlike seeing a new doctor. But that may put them in a situation in which sensitive information about their past is surfaced within a workplace context or on the office campus, said Ramit Mizrahi, founder of  Mizrahi Law.\n Ann Hull, an employment lawyer, said the misuse of short-term counseling started becoming more common across industries in the past five years or so. She expressed concern around how much the counselors \u2014 who are often contractors working with multiple companies \u2014 would protect an employee\u2019s privacy.\n And if an employee goes on to sue the company for emotional damages, which can yield more compensation than suing only for economic losses, employers may be able to leverage those private records, Ms. Mizrahi said, as Google has done in Ms. Glasson\u2019s case. The more recent the therapy or counseling, the more likely it is that the notes can be used.\n \u201cIf a potential client called me and said: \u2018I\u2019m being harassed at work, I feel really stressed and anxious. Do you think I should use my company\u2019s E.A.P.?\u2019\u201d Ms. Mizrahi said, \u201cI would advise them against it.\u201d\n  In the summer of 2018, Emi Nietfeld, then a Google employee, filed a sexual harassment complaint with human resources against her direct supervisor. For months, he had been making inappropriate comments about her, she wrote  in a Guest Essay for The Times and touching her in ways that made her uncomfortable.\n The investigation lasted almost three months. During this time, Ms. Nietfeld was still sitting next to her harasser and having one-on-one meetings with him. She felt on edge, restless, often unable to sleep. Whenever she asked for a timeline on the investigation, Google offered her the same three options: free counseling, work from home or medical leave. \u201cIt made me feel like the problem was me,\u201d she said.\n In her diary from that time, which she shared with The Times, she wrote: \u201cI hated the way the company treated me like I was sick.\u201d\n At that time, Google had contracted Concern Health to provide the counseling services, and it has since switched to Lyra Health. In Lyra\u2019s privacy agreement, which Google employees shared with The Times, the company states that it would not share information with Google without a client\u2019s permission unless \u201crequired to do so by a court order or other legal requirement.\u201d It\u2019s unclear what \u201cother legal requirement\u201d means in this context, but therapists and counselors are sometimes required by law to share private information without the patient\u2019s consent, for example if the patient poses a credible threat to others or discloses that a child is being abused. Lyra Health, which provides counseling services at other companies, including eBay, Facebook and Starbucks, did not respond to requests for comment.\n Mental health counseling in the workplace has been around for a while: it can be traced back to the late 1930s when it was primarily used to help companies identify alcoholic employees  whose productivity was dipping, later expanding to counseling in the 1940s. It is usually separate to mental health therapy that would be available through health insurance. Both forms of counseling and therapy are, however, expected to adhere to Health Insurance Portability and Accountability Act, or HIPAA, a federal law that ensures a patient\u2019s confidentiality.\n Ms. Nietfeld was already seeing an external therapist but, after filing the sexual harassment complaint, she considered making an appointment with an on-site counselor, believing they might better understand Google\u2019s \u201cvery specific culture.\u201d She was told it would be a three- to four-month wait before a counselor would be available, an indication of how widely used the service is. In the end, she didn\u2019t use the counseling services during the investigation. Later, when human resources substantiated her claims, she was offered counseling again but said that she was still expected to sit next to her harasser.\n \u201cAlphabet seems to view E.A.P. as the go-to any time someone has an issue at work. They seem to suggest E.A.P. before an investigation begins, during the H.R. process and even after an outcome,\u201d Chris Schmidt, spokesman for the Alphabet Workers Union, said in an email. \u201cBut it\u2019s not a carefully considered option: It\u2019s a default fallback whenever someone mentions any emotion, without any real consideration of whether it will actually help the person affected,\u201d he said. \u201cThey\u2019re effectively weaponizing mental health services.\u201d\n Ms. Glasson \u2014 whose  lawsuit against Google will go to trial in December \u2014 said that, as a manager, she was instructed to encourage a distressed employee to use the counseling services. She received an email template with mental health options to forward on to her direct report, a copy of which was reviewed by The Times.\n Ms. Glasson said that when she later found herself on the receiving end of discrimination from her director, she received a similar email from human resources, this time encouraging  her to use the counseling services. But human resources didn\u2019t investigate her claims, as claimed  in her court filing.\n \u201cWhen you go to H.R. to seek help and you\u2019re told, \u2018Well have you considered counseling?\u2019 that ultimately is communicating that you\u2019re the problem,\u201d she said.\n \u201cIt\u2019s meant to stop you in your tracks and silence you \u2014 it certainly made me stop and pause,\u201dshe added.\n The Alphabet Workers Union this month published an  online petition \u2014 related to new allegations from a Google worker who said that she was raped by a co-worker in May and then put on medical leave \u2014 urging the company to \u201ccease the insidious process of pushing workers into E.A.P. therapy when they face harassment or other workplace abuses.\u201d\n Another Google employee, who asked to remain anonymous because she still works at the company, recalled that when she complained about a racist and toxic manager, she was told that perhaps she needed resilience training. She was also offered the same options: counseling or paid medical leave. She chose the latter. A former Google employee based in London said she was also offered counseling when she came forward with sexual assault claims.\n When  Timnit Gebru, a former co-leader of Google\u2019s Ethical A.I. team, raised concerns about bias in the technology giant\u2019s artificial intelligence, she was also offered \u201cresources on mindfulness,\u201d she said in an email. She declined the offer, telling human resources that \u201cno amount of mindfulness fixes a hostile work environment.\u201d\n  \u201cOne of my first questions when I have new clients is, \u2018Have you seen a therapist in the prior years?\u2019\u201d Ms. Mizrahi said. If someone had seen a therapist a long time ago for reasons unrelated to the current case and was otherwise mentally healthy until their work environment became challenging, lawyers can argue that those previous records are irrelevant and should not be handed over to the company\u2019s lawyers in litigation.\n But when there are records of contemporaneous treatment, it becomes much harder to argue that they are irrelevant to the case at hand. (Of course, in some cases, that evidence might actually end up bolstering an employee\u2019s case.)\n When a counselor or therapist receives a subpoena, they can move to have that quashed or they may seek to turn over the \u201cminimal amount of information possible,\u201d said Dr. Lee, of Seattle University. However, when it comes to subpoenaing an E.A.P. counselor, \u201cI could see how there could be a potential conflict of interest,\u201d she added.\n Where counselors are located might also suggest a breach of independence, said Ms. Hull, an employment attorney. \u201cI get really suspicious of E.A.P. counselors who are in the same building as human resources, sometimes in the same suite as human resources,\u201d she added.\n She recounted that one of her clients, not affiliated with Google, told an employer-provided counselor that she was considering hiring an attorney with complaints about her work environment. The next day, according to Ms. Hull, human resources pulled the employee aside to ask her why she was looking to hire a lawyer \u2014 a fact that she hadn\u2019t disclosed to anyone except her counselor.\n In many cases, when plaintiffs realize that their counseling and medical records might be made public in emotional distress cases, they decide to either settle or drop their claims, Ms Mizrahi said.", "posttime": "2021-07-29 21:51:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u5458\u5de5", "title": "\u201c\u4f60\u662f\u95ee\u9898\u6240\u5728\u201d\uff1a\u8c37\u6b4c\u5458\u5de5\u79f0\u4e0d\u5f53\u884c\u4e3a\u88ab\u5ffd\u89c6", "title_en": "\u2018You\u2019re the Problem\u2019: Google Workers Say Misconduct Was Ignored", "transed": 1, "url": "https://www.nytimes.com/2021/07/28/us/google-workplace-complaints-counseling.html", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u5458\u5de5"]}, {"category": "", "categoryclass": "", "imagename": "41a72292c070fe07a20144e3e1620c78.jpeg", "infoid": 1070246, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662f\u4ec0\u4e48\u8ba9\u4eba\u7c7b\u72ec\u4e00\u65e0\u4e8c\uff1f\u79d1\u5b66\u5bb6\u4eec\u53c8\u8fc8\u51fa\u4e86\u4e00\u6b65\uff0c\u7528\u4e00\u79cd\u65b0\u5de5\u5177\u6765\u89e3\u51b3\u4e00\u4e2a\u6301\u4e45\u7684\u8c1c\u56e2\uff0c\u8be5\u5de5\u5177\u53ef\u80fd\u5141\u8bb8\u66f4\u7cbe\u786e\u5730\u6bd4\u8f83\u73b0\u4ee3\u4eba\u7684 DNA \u548c\u6211\u4eec\u5df2\u706d\u7edd\u7684\u7956\u5148\u7684 DNA\u3002\u6839\u636e\u5468\u4e94\u53d1\u8868\u5728\u300a\u79d1\u5b66\u8fdb\u5c55\u300b\u6742\u5fd7\u4e0a\u7684\u4e00\u9879\u7814\u7a76\uff0c\u6211\u4eec\u7684\u57fa\u56e0\u7ec4\u4e2d\u53ea\u6709 7% \u662f\u4e0e\u5176\u4ed6\u4eba\u7c7b\u552f\u4e00\u5171\u4eab\u7684\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u65e9\u671f\u7956\u5148\u5171\u4eab\u7684\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u767e\u5206\u6bd4\uff0c\u201d\u7814\u7a76\u7684\u4e3b\u8981\u4f5c\u8005\u3001\u73b0\u5728\u5728\u52a0\u5dde\u5927\u5b66\u65e7\u91d1\u5c71\u5206\u6821\u7684\u8ba1\u7b97\u751f\u7269\u5b66\u5bb6 Nathan Schaefer \u8bf4\u3002 \u201c\u8fd9\u79cd\u53d1\u73b0\u5c31\u662f\u4e3a\u4ec0\u4e48\u79d1\u5b66\u5bb6\u4eec\u4e0d\u518d\u8ba4\u4e3a\u6211\u4eec\u4eba\u7c7b\u4e0e\u5c3c\u5b89\u5fb7\u7279\u4eba\u6709\u5982\u6b64\u5927\u7684\u4e0d\u540c\u3002\u201d\u8be5\u7814\u7a76\u5229\u7528\u4e86\u4ece\u53ef\u8ffd\u6eaf\u5230\u5927\u7ea6 40,000 \u6216 50,000 \u5e74\u524d\u7684\u73b0\u5df2\u706d\u7edd\u7684\u5c3c\u5b89\u5fb7\u7279\u4eba\u548c\u4e39\u5c3c\u7d22\u74e6\u4eba\u7684\u5316\u77f3\u9057\u9ab8\u4e2d\u63d0\u53d6\u7684 DNA\uff0c\u4ee5\u53ca\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684 279 \u540d\u73b0\u4ee3\u4eba\u3002\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u77e5\u9053\u73b0\u4ee3\u4eba\u4e0e\u5c3c\u5b89\u5fb7\u7279\u4eba\u5171\u4eab\u4e00\u4e9b DNA\uff0c\u4f46\u4e0d\u540c\u7684\u4eba\u5171\u4eab\u57fa\u56e0\u7ec4\u7684\u4e0d\u540c\u90e8\u5206\u3002\u65b0\u7814\u7a76\u7684\u4e00\u4e2a\u76ee\u6807\u662f\u786e\u5b9a\u73b0\u4ee3\u4eba\u7c7b\u72ec\u6709\u7684\u57fa\u56e0\u3002\u8fd9\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u7edf\u8ba1\u95ee\u9898\uff0c\u7814\u7a76\u4eba\u5458\u201c\u5f00\u53d1\u4e86\u4e00\u79cd\u6709\u4ef7\u503c\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u8003\u8651\u53e4\u4ee3\u57fa\u56e0\u7ec4\u4e2d\u7f3a\u5931\u7684\u6570\u636e\uff0c\u201d\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u9ea6\u8fea\u900a\u5206\u6821\u7684\u53e4\u4eba\u7c7b\u5b66\u5bb6\u7ea6\u7ff0\u970d\u514b\u65af\u8bf4\uff0c\u4ed6\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u53d1\u73b0\uff0c\u6211\u4eec\u57fa\u56e0\u7ec4\u7684\u4e00\u5c0f\u90e8\u5206\u2014\u2014\u4ec5 1.5%\u2014\u2014\u65e2\u662f\u6211\u4eec\u7269\u79cd\u72ec\u6709\u7684\uff0c\u4e5f\u662f\u5f53\u4eca\u6240\u6709\u6d3b\u7740\u7684\u4eba\u5171\u4eab\u7684\u3002\u8fd9\u4e9b DNA \u788e\u7247\u53ef\u80fd\u5305\u542b\u7740\u6700\u91cd\u8981\u7684\u7ebf\u7d22\uff0c\u53ef\u4ee5\u771f\u6b63\u533a\u5206\u73b0\u4ee3\u4eba\u7c7b\u3002\n\u201c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u57fa\u56e0\u7ec4\u7684\u8fd9\u4e9b\u533a\u57df\u9ad8\u5ea6\u5bcc\u96c6\u4e0e\u795e\u7ecf\u53d1\u80b2\u548c\u5927\u8111\u529f\u80fd\u6709\u5173\u7684\u57fa\u56e0\uff0c\u201d\u52a0\u5dde\u5927\u5b66\u5723\u514b\u9c81\u65af\u5206\u6821\u8ba1\u7b97\u751f\u7269\u5b66\u5bb6\u7406\u67e5\u5fb7\u683c\u6797\u8bf4\uff0c\u4ed6\u662f\u8be5\u8bba\u6587\u7684\u5408\u8457\u8005\u3002 2010 \u5e74\uff0c\u683c\u6797\u5e2e\u52a9\u5236\u4f5c\u4e86\u5c3c\u5b89\u5fb7\u7279\u4eba\u57fa\u56e0\u7ec4\u7684\u7b2c\u4e00\u7a3f\u5e8f\u5217\u3002\u56db\u5e74\u540e\uff0c\u9057\u4f20\u5b66\u5bb6\u7ea6\u4e66\u4e9a\u00b7\u963f\u57fa (Joshua Akey) \u4e0e\u4ed6\u4eba\u5171\u540c\u64b0\u5199\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u8868\u660e\u73b0\u4ee3\u4eba\u7c7b\u643a\u5e26\u4e86\u4e00\u4e9b\u5c3c\u5b89\u5fb7\u7279\u4eba DNA \u7684\u6b8b\u4f59\u7269\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u79d1\u5b66\u5bb6\u4eec\u4e0d\u65ad\u6539\u8fdb\u4ece\u5316\u77f3\u4e2d\u63d0\u53d6\u548c\u5206\u6790\u9057\u4f20\u7269\u8d28\u7684\u6280\u672f\u3002 \u201c\u66f4\u597d\u7684\u5de5\u5177\u4f7f\u6211\u4eec\u80fd\u591f\u63d0\u51fa\u5173\u4e8e\u4eba\u7c7b\u5386\u53f2\u548c\u8fdb\u5316\u7684\u8d8a\u6765\u8d8a\u8be6\u7ec6\u7684\u95ee\u9898\uff0c\u201d\u76ee\u524d\u5728\u666e\u6797\u65af\u987f\u5927\u5b66\u5e76\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u65b0\u7814\u7a76\u7684\u963f\u57fa\u8bf4\u3002\u4ed6\u8d5e\u626c\u4e86\u8fd9\u9879\u65b0\u7814\u7a76\u7684\u65b9\u6cd5\u8bba\u3002\u7136\u800c\uff0c\u5723\u8def\u6613\u65af\u534e\u76db\u987f\u5927\u5b66\u7684\u4eba\u53e3\u9057\u4f20\u5b66\u5bb6\u827e\u4f26\u9093\u666e\u987f\u8d28\u7591\u4f5c\u8005\u7684\u5047\u8bbe\uff0c\u5373\u4eba\u7c7b\u57fa\u56e0\u7ec4\u7684\u53d8\u5316\u662f\u968f\u673a\u5206\u5e03\u7684\uff0c\u800c\u4e0d\u662f\u805a\u96c6\u5728\u57fa\u56e0\u7ec4\u5185\u7684\u67d0\u4e9b\u70ed\u70b9\u5468\u56f4\u3002\u7814\u7a76\u7ed3\u679c\u5f3a\u8c03\u201c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u975e\u5e38\u5e74\u8f7b\u7684\u7269\u79cd\uff0c\u201dAkey \u8bf4\u3002 \u201c\u4e0d\u4e45\u524d\uff0c\u6211\u4eec\u4e0e\u5176\u4ed6\u4eba\u7c7b\u8840\u7edf\u5171\u4eab\u4e86\u8fd9\u4e2a\u661f\u7403\u3002\u201d", "note_en": "What makes humans unique? Scientists have taken another step toward solving an enduring mystery with a new tool that may allow for more precise comparisons between the DNA of modern humans and that of our extinct ancestors.\n Just 7% of our genome is uniquely shared with other humans, and not shared by other early ancestors, according to a study published Friday in the journal Science Advances.\n \u201cThat\u2019s a pretty small percentage,\u201d said study lead author  Nathan Schaefer, a computational biologist now at UC San Francisco. \u201cThis kind of finding is why scientists are turning away from thinking that we humans are so vastly different from Neanderthals.\u201d\n The research draws upon DNA extracted from fossil remains of now-extinct Neanderthals and Denisovans dating back to around 40,000 or 50,000 years ago, as well as from 279 modern people from around the world.\n   Scientists already know that modern people  share some DNA with Neanderthals, but different people share different parts of the genome. One goal of the new research was to identify the genes that are exclusive to modern humans.\n It\u2019s a difficult statistical problem, and the researchers \u201cdeveloped a valuable tool that takes account of missing data in the ancient genomes,\u201d said  John Hawks, a paleoanthropologist at the University of Wisconsin-Madison who was not involved in the research.\n The researchers also found that an even smaller fraction of our genome \u2014 just 1.5% \u2014 is both unique to our species and shared among all people alive today. Those slivers of DNA may hold the most significant clues as to what truly distinguishes modern human beings.\n  \u201cWe can tell those regions of the genome are highly enriched for genes that have to do with neural development and brain function,\u201d said UC Santa Cruz computational biologist  Richard Green, a coauthor of the paper.\n  In 2010, Green helped produce the first  draft sequence of a Neanderthal genome. Four years later, geneticist  Joshua Akey co-wrote a paper showing that  modern humans carry some remnants of Neanderthal DNA. Since then, scientists have continued to refine techniques to extract and analyze genetic material from fossils.\n \u201cBetter tools allow us to ask increasingly more detailed questions about human history and evolution,\u201d said Akey, who is now at Princeton and was not involved in the new research. He praised the methodology of the new study.\n  However,  Alan Templeton, a population geneticist at Washington University in St. Louis, questioned the authors\u2019 assumption that changes in the human genome are randomly distributed, rather than clustered around certain hot spots within the genome.\n The findings underscore \u201cthat we\u2019re actually a very young species,\u201d said Akey. \u201cNot that long ago, we shared the planet with other human lineages.\u201d", "posttime": "2021-07-29 21:50:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dna,\u4eba\u7c7b", "title": "\u7531\u4e8e\u6742\u4ea4\uff0c\u6211\u4eec\u53ea\u6709 7% \u7684 DNA \u662f\u73b0\u4ee3\u4eba\u7c7b\u72ec\u6709\u7684\uff1a\u7814\u7a76", "title_en": "Thanks to interbreeding, just 7% of our DNA is unique to modern humans: study", "transed": 1, "url": "https://www.latimes.com/science/story/2021-07-16/thanks-to-interbreeding-just-7-of-our-dna-is-unique-to-modern-humans-study-shows", "via": "", "real_tags": ["dna", "\u4eba\u7c7b"]}, {"category": "", "categoryclass": "", "imagename": "b86596d08ce6d39dc25547f9857cf491.jpg", "infoid": 1070245, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u4e0d\u80fd\u50cf\u4e00\u4e2a\u4f18\u79c0\u7684\u70bc\u91d1\u672f\u58eb\u90a3\u6837\u628a\u6c34\u53d8\u6210\u91d1\u5b50\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u6700\u597d\u7684\u4e8b\u60c5\u53ef\u80fd\u5c31\u662f\u628a\u6c34\u672c\u8eab\u53d8\u6210\u4e00\u79cd\u95ea\u4eae\u7684\u91d1\u5c5e\u6750\u6599\u3002\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u5728\u5171\u4eab\u7535\u5b50\u7684\u78b1\u91d1\u5c5e\u5468\u56f4\u5f62\u6210\u4e00\u5c42\u8584\u6c34\u5c42\u6765\u5b9e\u73b0\u8fd9\u4e00\u58ee\u4e3e\u3002\u6c34\u5728\u91d1\u5c5e\u72b6\u6001\u4e0b\u53ea\u505c\u7559\u4e86\u51e0\u79d2\u949f\uff0c\u4f46\u5b9e\u9a8c\u4e0d\u9700\u8981\u901a\u5e38\u9700\u8981\u5c06\u975e\u91d1\u5c5e\u6750\u6599\u8f6c\u5316\u4e3a\u5bfc\u7535\u91d1\u5c5e\u6240\u9700\u7684\u9ad8\u538b\u3002\u5408\u8457\u8005\u3001\u5e03\u62c9\u683c\u6377\u514b\u79d1\u5b66\u9662\u7269\u7406\u5316\u5b66\u5bb6 Pavel Jungwirth \u8bf4\uff0c\u770b\u5230\u6c34\u5448\u73b0\u51fa\u91d1\u8272\u7684\u5149\u8292\u662f\u4ed6\u804c\u4e1a\u751f\u6daf\u7684\u4e00\u5927\u4eae\u70b9\u3002\u8be5\u56e2\u961f\u4e8e 7 \u6708 28 \u65e5\u5728 Nature 1 \u4e0a\u53d1\u8868\u4e86\u4ed6\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u3002\u201c\u8fd9\u662f\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u8fdb\u6b65\uff0c\u201d\u82f1\u56fd\u725b\u6d25\u5927\u5b66\u7684\u5316\u5b66\u5bb6 Peter Edwards \u8bf4\u3002 \u201c\u8c01\u80fd\u60f3\u5230\u2026\u2026\u9752\u94dc\uff0c\u91d1\u5c5e\u6c34\uff1f\u201d\u7406\u8bba\u4e0a\uff0c\u5982\u679c\u627f\u53d7\u8db3\u591f\u7684\u538b\u529b\uff0c\u5927\u591a\u6570\u6750\u6599\u90fd\u80fd\u53d8\u6210\u91d1\u5c5e\u3002\u539f\u5b50\u6216\u5206\u5b50\u53ef\u4ee5\u7d27\u7d27\u5730\u6324\u5728\u4e00\u8d77\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u5f00\u59cb\u5171\u4eab\u5b83\u4eec\u7684\u5916\u90e8\u7535\u5b50\uff0c\u7136\u540e\u5b83\u4eec\u53ef\u4ee5\u50cf\u5728\u4e00\u5757\u94dc\u6216\u94c1\u4e2d\u4e00\u6837\u79fb\u52a8\u548c\u5bfc\u7535\u3002\u5730\u7403\u7269\u7406\u5b66\u5bb6\u8ba4\u4e3a\uff0c\u6d77\u738b\u661f\u6216\u5929\u738b\u661f\u7b49\u5927\u8d28\u91cf\u884c\u661f\u7684\u4e2d\u5fc3\u542b\u6709\u91d1\u5c5e\u72b6\u6001\u7684\u6c34\uff0c\u9ad8\u538b\u91d1\u5c5e\u6c22\u751a\u81f3\u53ef\u4ee5\u6210\u4e3a\u8d85\u5bfc\u4f53\uff0c\u80fd\u591f\u5728\u6ca1\u6709\u4efb\u4f55\u963b\u529b\u7684\u60c5\u51b5\u4e0b\u5bfc\u7535\u3002 Jungwirth \u8bf4\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5c06\u6c34\u8f6c\u5316\u4e3a\u91d1\u5c5e\u9700\u8981 1500 \u4e07\u4e2a\u5927\u6c14\u538b\uff0c\u8fd9\u662f\u5f53\u524d\u5b9e\u9a8c\u5ba4\u6280\u672f\u65e0\u6cd5\u8fbe\u5230\u7684\u3002\u4f46\u4ed6\u6000\u7591\u6c34\u53ef\u4ee5\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u5bfc\u7535\uff1a\u901a\u8fc7\u4ece\u78b1\u91d1\u5c5e\u4e2d\u501f\u7528\u7535\u5b50\u3002\u5143\u7d20\u5468\u671f\u8868\u7b2c 1 \u65cf\u4e2d\u7684\u8fd9\u4e9b\u53cd\u5e94\u6027\u5143\u7d20\uff08\u5305\u62ec\u94a0\u548c\u94be\uff09\u503e\u5411\u4e8e\u63d0\u4f9b\u6700\u5916\u5c42\u7684\u7535\u5b50\u3002\u53bb\u5e74\uff0cJungwirth \u548c\u4ed6\u7684\u540c\u4e8b Phil Mason\uff08\u4e00\u4f4d\u5316\u5b66\u5bb6\u4e5f\u4ee5\u5728 YouTube \u4e0a\u5236\u4f5c\u79d1\u5b66\u89c6\u9891\u800c\u95fb\u540d\uff09\u9886\u5bfc\u7684\u4e00\u4e2a\u56e2\u961f\u5728\u6c28 2 \u4e2d\u5c55\u793a\u4e86\u7c7b\u4f3c\u7684\u6548\u679c\u3002 \u82f1\u56fd\u4eba\u77e5\u9053\u6c28\u5728\u8fd9\u79cd\u6761\u4ef6\u4e0b\u4f1a\u53d1\u5149\u7684\u4e8b\u5b9e\u7231\u5fb7\u534e\u5179\u6307\u51fa\uff0c\u5341\u4e5d\u4e16\u7eaa\u521d\u7684\u5316\u5b66\u5bb6\u6c49\u5f17\u83b1\u00b7\u6234\u7ef4\uff08Humphry Davy\uff09\u3002\u8be5\u56e2\u961f\u60f3\u7528\u6c34\u4ee3\u66ff\u6c28\u6765\u5c1d\u8bd5\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u9762\u4e34\u4e00\u4e2a\u6311\u6218\uff1a\u78b1\u91d1\u5c5e\u4e0e\u6c34\u6df7\u5408\u65f6\u5f80\u5f80\u4f1a\u53d1\u751f\u7206\u70b8\u6027\u53cd\u5e94\u3002\u89e3\u51b3\u65b9\u6848\u662f\u8bbe\u8ba1\u4e00\u79cd\u5b9e\u9a8c\u88c5\u7f6e\uff0c\u53ef\u4ee5\u663e\u7740\u51cf\u6162\u53cd\u5e94\u901f\u5ea6\uff0c\u4f7f\u5176\u4e0d\u4f1a\u7206\u70b8\u3002\u7814\u7a76\u4eba\u5458\u7528\u94a0\u548c\u94be\uff08\u4e00\u79cd\u5728\u5ba4\u6e29\u4e0b\u4e3a\u6db2\u4f53\u7684\u6df7\u5408\u7269\uff09\u586b\u5145\u6ce8\u5c04\u5668\uff0c\u7136\u540e\u5c06\u5176\u653e\u5165\u771f\u7a7a\u5ba4\u4e2d\u3002\u7136\u540e\u4ed6\u4eec\u4f7f\u7528\u6ce8\u5c04\u5668\u5f62\u6210\u91d1\u5c5e\u6df7\u5408\u7269\u7684\u6db2\u6ef4\uff0c\u5e76\u5c06\u5b83\u4eec\u66b4\u9732\u5728\u5c11\u91cf\u6c34\u84b8\u6c14\u4e2d\u3002\u6c34\u51dd\u7ed3\u5728\u6bcf\u4e2a\u6db2\u6ef4\u4e0a\uff0c\u5f62\u6210\u4e86\u5341\u5206\u4e4b\u4e00\u5fae\u7c73\u539a\u7684\u4e00\u5c42\u3002\u7136\u540e\uff0c\u6db2\u6ef4\u4e2d\u7684\u7535\u5b50\u4e0e\u6b63\u91d1\u5c5e\u79bb\u5b50\u4e00\u8d77\u8fc5\u901f\u6269\u6563\u5230\u6c34\u4e2d\uff0c\u51e0\u79d2\u949f\u5185\uff0c\u6c34\u5c42\u53d8\u6210\u4e86\u91d1\u8272\u3002\n\u67cf\u6797\u540c\u6b65\u52a0\u901f\u5668\u7684\u5b9e\u9a8c\u8bc1\u5b9e\uff0c\u91d1\u8272\u53cd\u5c04\u4ea7\u751f\u4e86\u91d1\u5c5e\u6c34\u7684\u9884\u671f\u7279\u5f81\u3002 Jungwirth \u8bf4\uff0c\u907f\u514d\u7206\u70b8\u7684\u5173\u952e\u662f\u627e\u5230\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u5728\u8fd9\u4e2a\u7a97\u53e3\u4e2d\uff0c\u7535\u5b50\u7684\u6269\u6563\u901f\u5ea6\u6bd4\u6c34\u548c\u91d1\u5c5e\u4e4b\u95f4\u7684\u53cd\u5e94\u901f\u5ea6\u5feb\u3002 \u201c\u4ed6\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u8fbe\u5230\u4e86\u51c6\u7a33\u6001\uff0c\u8fd9\u6837\u91d1\u5c5e\u5316\u7684\u7269\u7406\u5b66\u5c31\u6218\u80dc\u4e86\u5316\u5b66\u5206\u89e3\uff0c\u201d\u7231\u5fb7\u534e\u5179\u8bf4\u3002 \u201c\u6211\u4eec\u5b8c\u5168\u4e0d\u786e\u5b9a\u6211\u4eec\u4f1a\u627e\u5230\u5b83\uff0c\u201dJungwirth \u8bf4\u3002 \u201c\u8fd9\u592a\u68d2\u4e86\uff0c\u5c31\u50cf [when] \u4f60\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u201d Jungwirth \u8bf4\uff0c\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u4ed6\u65e5\u5e38\u5de5\u4f5c\u4e2d\u7684\u4e00\u4e2a\u4ee4\u4eba\u8033\u76ee\u4e00\u65b0\u7684\u4f11\u606f\uff0c\u5373\u5728\u6709\u673a\u5316\u5b66\u4e2d\u8fd0\u884c\u8ba1\u7b97\u673a\u6a21\u62df\uff0c\u5e76\u63d0\u9192\u4eba\u4eec\u79d1\u5b66\u53ef\u4ee5\u5f88\u6709\u8da3\u3002 \u201c\u8fd9\u4e0d\u662f\u4f60\u53ef\u4ee5\u83b7\u5f97\u8865\u52a9\u91d1\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u4f60\u53ef\u4ee5\u5728\u5468\u672b\u505a\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u8bf4\u3002\u8fd9\u4e0d\u662f\u4ed6\u7b2c\u4e00\u6b21\u4e0e\u6885\u68ee\u5408\u4f5c\u8fdb\u884c\u5b9e\u9645\u5b9e\u9a8c\uff1a2015 \u5e74\uff0c\u4e24\u4f4d\u7814\u7a76\u4eba\u5458\u548c\u4ed6\u4eec\u7684\u540c\u4e8b\u63ed\u793a\u4e86\u94a0\u4e0e\u6c34\u63a5\u89e6\u65f6\u53d1\u751f\u7206\u70b8\u7684\u673a\u5236 3\u2014\u2014\u4ed6\u4eec\u5728\u7814\u7a76\u6240\u7684\u9633\u53f0\u4e0a\u8bbe\u7f6e\u7684\u4e00\u9879\u5b9e\u9a8c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u65e0\u6cd5\u8fdb\u5165\u5b9e\u9a8c\u5ba4\u3002 \u201c\u8fd9\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u5f88\u751f\u6c14\uff0c\u56e0\u4e3a\u90a3\u91cc\u662f\u4eba\u4eec\u5438\u70df\u7684\u5730\u65b9\uff0c\u201d\u4ed6\u56de\u5fc6\u9053\u3002 \u201c\u6211\u4eec\u8bf4\uff1a\u6211\u4eec\u53ef\u4ee5\u6709\u7206\u70b8\u7684\u9633\u53f0\u5417\uff1f\u201d", "note_en": "If you can\u2019t turn water into gold like a good alchemist would, the next best thing might be to transform water itself into a shiny, metallic material. Researchers have achieved that feat by forming a thin layer of water around electron-sharing alkali metals.\n The water stayed in a metallic state for a only few seconds, but the experiment did not require the high pressures that are normally needed to turn non-metallic materials into electrically conductive metals.\n Co-author Pavel Jungwirth, a physical chemist at the Czech Academy of Sciences in Prague, says that seeing the water take on a golden shine was a highlight of his career. The team published its findings on 28 July in  Nature  1.\n \u201cThis is a most important advance,\u201d says Peter Edwards, a chemist at the University of Oxford, UK. \u201cWho would have thought it \u2026 bronze, metallic water?\u201d\n  In theory, most materials are capable of becoming metallic if put under enough pressure. Atoms or molecules can be squeezed together so tightly that they begin to share their outer electrons, which can then travel and conduct electricity as they do in a chunk of copper or iron. Geophysicists think that the centres of massive planets such as Neptune or Uranus host water in such a metallic state, and that high-pressure  metallic hydrogen can even  become a superconductor, able to conduct electricity without any resistance.\n Turning water into a metal in this way would require an expected 15 million atmospheres of pressure, which is out of reach for current lab techniques, says Jungwirth. But he suspected that water could become conductive in an alternative way: by borrowing electrons from alkali metals. These reactive elements in group 1 of the periodic table, which includes sodium and potassium, tend to donate their outermost electron. Last year, Jungwirth and his colleague Phil Mason \u2014 a chemist who is also known for making  science videos on YouTube \u2014 led a team that demonstrated a similar effect in ammonia  2. The fact that ammonia can turn shiny in such conditions was known to the British chemist Humphry Davy in the early nineteenth century, Edwards points out.\n  The team wanted to try the same approach with water instead of ammonia, but faced a challenge: alkali metals tend to react explosively when mixed with water. The solution was to design an experimental set-up that would dramatically slow the reaction so that it would not be explosive. The researchers filled a syringe with sodium and potassium, a mixture that is liquid at room temperature, and placed it in a vacuum chamber. They then used the syringe to form droplets of the metal mixture and exposed them to small amounts of water vapour. The water condensed onto each droplet and formed a layer one-tenth of a micrometre thick. Electrons from the droplet then quickly diffused into the water \u2014 together with positive metallic ions \u2014 and, within a few seconds, the water layer turned golden.\n  Experiments at a synchrotron in Berlin confirmed that the gold reflections produced the signatures expected of metallic water. The key to avoiding an explosion, Jungwirth says, was to find a window of time in which the diffusion of electrons was faster than the reaction between the water and the metals. \u201cThey have managed to get to a quasi-steady state such that the physics of metallization wins over chemical decomposition,\u201d Edwards says.\n \u201cWe were not sure at all that we would find it,\u201d Jungwirth says. \u201cIt was amazing, like [when] you discover a new element.\u201d\n Jungwirth says the experiment was a refreshing break from his day job, which is to run computer simulations in organic chemistry, and a reminder that science can be fun. \u201cIt\u2019s not something you can get grant money for, but something you can do on your weekends,\u201d he says. It\u2019s not the first time he has collaborated with Mason on a practical experiment: in 2015, the two researchers and their colleagues revealed the mechanism that makes  sodium explode when it touches water  3 \u2014 an experiment they set up on a balcony at their institute, because they didn\u2019t have access to a lab. \u201cThat pissed everybody off, because that was where people went smoking,\u201d he recalls. \u201cWe said: could we have the balcony for explosions?\u201d", "posttime": "2021-07-29 21:50:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d8\u6210,transformed,\u91d1\u5c5e", "title": "\u6c34\u53d8\u6210\u95ea\u4eae\u7684\u91d1\u8272\u91d1\u5c5e", "title_en": "Water transformed into shiny, golden metal", "transed": 1, "url": "https://www.nature.com/articles/d41586-021-02065-w", "via": "", "real_tags": ["\u53d8\u6210", "\u91d1\u5c5e"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074178, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u65b0\u52a0\u5761\u519b\u961f\u4e2d\uff0c\u6709\u4e00\u79cd\u53eb\u505aIPPT\uff08\u4e2a\u4eba\u4f53\u80fd\u6c34\u5e73\u6d4b\u8bd5\uff09\u7684\u8003\u8bd5\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u7684\u95ee\u9898\u4e0d\u5728\u4e8e\u5b83\u5bf9\u8eab\u4f53\u7684\u8981\u6c42\u6709\u591a\u9ad8\uff0c\u800c\u5728\u4e8e\u7528\u6765\u8ba1\u7b97\u4fef\u5367\u6491\u548c\u4ef0\u5367\u8d77\u5750\u6b21\u6570\u7684\u7535\u5b50\u673a\u5668\u3002\n\u548c\u5927\u591a\u6570\u4eba\u4e00\u6837\uff0c\u6211\u7684\u4fef\u5367\u6491\u59ff\u52bf\u603b\u662f\u4f4e\u4e8e\u6807\u51c6\uff08\u6839\u636e\u673a\u5668\u7684\u610f\u89c1\uff09\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u7f3a\u4e4f\u4f7f\u7528\u8be5\u673a\u5668\u7684\u5b9e\u8df5\uff0c\u8bb8\u591aNSMen\uff08\u5df2\u7ecf\u5b8c\u6210\u4e862\u5e74\u7684\u5f3a\u5236\u6027\u56fd\u5bb6\u670d\u52a1\uff09\u96be\u4ee5\u505a\u597dIPPT\u6d4b\u8bd5\u3002\n\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528mediapipe\u548cOpenCV\u6784\u5efa\u4e00\u4e2a\u8ddf\u8e2a\u4fef\u5367\u6491\u7684\u7a0b\u5e8f\uff0c\u786e\u4fdd\u6211\u4eec\u4e3a\u6bcf\u4e2a\u4ee3\u8868\u4f7f\u7528\u6b63\u786e\u7684\u5f62\u5f0f\u3002\n\u6839\u636e\u6a21\u578b\u67e5\u627e\u4eba\u4f53\u4e0a\u4e0d\u540c\u5730\u6807\u7684\u4f4d\u7f6e\u3002\uff08\u5730\u6807\u5982\u4e0a\u56fe\u6240\u793a\uff09\u3002\n\u67e5\u627e\u5173\u8282\u4e4b\u95f4\u7684\u89d2\u5ea6\uff08\u53d6\u51b3\u4e8e\u9009\u62e9\u7684\u5173\u8282\uff09\u3002\u5728\u6211\u7684\u4fef\u5367\u6491\u9879\u76ee\u4e2d\uff0c\u6211\u9009\u62e9\u4e86\u8098\u90e8\u3001\u80a9\u90e8\u548c\u81c0\u90e8\u7684\u89d2\u5ea6\uff0c\u56e0\u4e3a\u8fd9\u5bf9\u6b63\u786e\u7684\u4fef\u5367\u6491\u5f62\u5f0f\u81f3\u5173\u91cd\u8981\u3002\n\u63a5\u4e0b\u6765\u662f\u5b9e\u9645\u4fef\u5367\u6491\u8ba1\u6570\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528PoseModule\u5e76\u786e\u5b9a\u4fef\u5367\u6491\u662f\u6b63\u786e\u7684\u8fd8\u662f\u4e0d\u6b63\u786e\u7684\u5f62\u5f0f\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u7b2c17-21\u884c\u3002\u786e\u5b9a\u4ece\u76f8\u673a\u62cd\u6444\u7684\u56fe\u50cf\u7684\u5206\u8fa8\u7387\uff0c\u5e76\u5728\u7ed8\u5236\u4fef\u5367\u6491\u8ba1\u6570\u7684\u77e9\u5f62\u65f6\u4ece\u4e2d\u8c03\u6574\u50cf\u7d20\u503c\uff0c\u7b49\u7b49\uff08\u7b2c68-82\u884c\uff09\u3002\n\u5c31\u5728\u8fd9\u91cc\uff01\u4e00\u4e2a\u4fef\u5367\u6491\u8ba1\u6570\u8f6f\u4ef6\uff0c\u786e\u4fdd\u6b63\u786e\u7684\u5f62\u5f0f\u3002\u4e0d\u8981\u4e00\u8def\u4e0b\u53bb\uff1f\u4e0d\u7b97\uff01\u628a\u819d\u76d6\u653e\u5728\u5730\u677f\u4e0a\uff1f\u4e0d\u7b97\uff01", "note_en": "In the Singapore Army, there is something called IPPT (Individual Physical Proficiency Test). The problem with this test is not how physically demanding it is, but instead the electronic machine that is used to count the number of Push-ups and Sit-ups done.\n Like most people out there, my Push-up form was always sub-par (according to the machine\u2019s opinion). Furthermore, many NSMen (those that have already completed their 2 years of mandatory National Service) struggle to do well for the IPPT test due to the lack of practice with the machine.\n Therefore, I decided to build a program using mediapipe and OpenCV that tracks our Push-ups, ensuring that we use the proper form for each and every rep.\n     Finds the position of the different landmarks on the human body based on the model.  (Landmarks are shown in image above).\n Finds the angle between joints (depending on which joints you select). For my Push Up program, I chose to find the angle at the elbow, shoulder, and hip as those are vital for proper push-up form.\n Next would be the code for the actual Push-up counting. In this, we will use the PoseModule and determine whether a push-up should be considered proper or improper form.\n  One important thing to note is from Line 17\u201321. Determine the resolution of your image captured from your camera, and from there adjust the pixel values when drawing the rectangles for the Push-up count, etc. (Lines 68\u201382).\n  And there we have it! A Push-up counting software that ensures proper form. Don\u2019t go down all the way? No count! Put your knees on the floor? No count!", "posttime": "2022-02-20 12:27:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,ups,\u4fef\u5367\u6491", "title": "\u4f7f\u7528Python\u3001mediapipe\u548cOpenCV\u8fdb\u884c\u4fef\u5367\u6491", "title_en": "Push-ups with Python, mediapipe and OpenCV", "transed": 1, "url": "https://aryanvij02.medium.com/push-ups-with-python-mediapipe-open-a544bd9b4351", "via": "", "real_tags": ["python", "ups", "\u4fef\u5367\u6491"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074176, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Wordle\u6709\u4e00\u4e2aGameBoy\u7248\u672c\uff0c\u4f7f\u7528bloom\u8fc7\u6ee4\u5668\u3001\u7cbe\u7b80\u7684\u8bcd\u6c47\u8868\u548c\u7cbe\u7b80\u7684\u731c\u6d4b\u5355\u8bcd\u5217\u8868\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5b89\u88c5\u5728\u4e00\u4e2a32K\u76d2\u5e26\u4e0a\u3002\u6211\u4e0b\u5b9a\u51b3\u5fc3\u6311\u6218\u81ea\u5df1\uff0c\u770b\u770b\u6211\u662f\u5426\u80fd\u9002\u5e9412972\u4e2a\u5355\u8bcd\u7684\u8bcd\u6c47\u8868\uff0c\u4ee5\u53ca2315\u4e2a\u5355\u8bcd\u7684\u7b54\u6848\u5217\u8868\u3002\u56e0\u6b64\uff0c\u6311\u6218\u5728\u4e8e\uff1a\n\u6211\u7ba1\u7406\u5b83\uff08\u5728\u8fd9\u91cc\u4e0b\u8f7dROM\uff09\uff0c\u5b83\u5728\u6e38\u620f\u673a\u6a21\u62df\u5668\u4e2d\u5de5\u4f5c\u3002\u6709\u4e0d\u6b62\u4e00\u79cd\u65b9\u6cd5\uff0c\u6211\u6240\u505a\u7684\u53ef\u80fd\u8fc7\u4e8e\u590d\u6742\uff0c\u4f46\u6211\u5bf9\u6e38\u620f\u673a\u7684\u8fd0\u884c\u901f\u5ea6\u611f\u89c9\u4e0d\u597d\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u4e9b\u901f\u5ea6\u4f18\u5316\u3002\n\u7b2c0\u6b65\uff1a\u6211\u4eec\u4ece12972\u5f00\u59cb\u2005\u00d7\u20055.\u2004=\u200464860\u5b57\u8282\u7684\u672a\u538b\u7f29\u6570\u636e\u3002\n\u7b2c\u4e00\u6b65\uff1a\u6839\u636e\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c0612972\u4e2a\u5355\u8bcd\u5217\u8868\u5206\u621026\u4e2a\u5217\u8868\u3002\u56e0\u4e3a\u5728\u6bcf\u4e2a\u5217\u8868\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6bcf\u4e2a\u5355\u8bcd\u53ea\u9700\u8981\u5b58\u50a8\u56db\u4e2a\u5b57\u6bcd\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5217\u8868\u90fd\u6709\u4e00\u4e9b\u5f00\u9500\u3002\uff08\u6700\u7ec8\u5206\u6790\u7684\u5f00\u9500\u4e3a108\u5b57\u8282\u3002\uff09\u5982\u679c\u6211\u4eec\u505c\u5728\u8fd9\u91cc\uff0c\n\u6b65\u9aa42\uff1a\u6bcf\u4e2a\u56db\u4e2a\u5b57\u6bcd\u7684\u201c\u5b57\u201d\uff08\u6216\u5b57\u5c3e\uff09\u53ef\u4ee5\u4ee5\u6bcf\u4e2a\u5b57\u6bcd5\u4f4d\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u4ece\u800c\u751f\u6210\u4e00\u4e2a20\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\u5982\u679c\u6211\u4eec\u505c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5355\u8bcd\u5b58\u50a8\u57282.5\u5b57\u8282\u4e2d\uff0c\u603b\u8ba132430\u4e2a\u3002\u5982\u679c\u6ca1\u6709\u4ee3\u7801\u7684\u8bdd\uff0c\u5b83\u53ef\u4ee5\u5b89\u88c5\u5728\u76d2\u5e26\u4e0a\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u8fdb\u6b65\u3002\n\u7b2c\u4e09\u6b65\uff1a\u8fd9\u662f\u6211\u7684\u4e00\u4e2a\u806a\u660e\u7684\u60f3\u6cd5\u3002\u6bcf\u4e00\u4e2a\u7531\u56db\u4e2a\u5b57\u6bcd\u7ec4\u6210\u7684\u201c\u5355\u8bcd\u201d\u5217\u8868\u90fd\u662f\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u7684\uff0c\u5e76\u4e14\u6309\u7167\u81ea\u7136\u65b9\u5f0f\u7f16\u7801\u4e3a20\u4f4d\u6570\u5b57\uff0c\u6570\u5b57\u5c06\u6309\u5347\u5e8f\u6392\u5217\u3002\u6211\u4eec\u4e0d\u9700\u8981\u5b58\u50a8\u8fd9\u4e9b\u6570\u5b57\uff0c\u53ea\u9700\u8981\u5b58\u50a8\u5b83\u4eec\u7684\u7b97\u672f\u5dee\uff0c\u4ece\u521d\u59cb\uff08\u65e0\u6548\uff090\u5f00\u59cb\u3002\n\u7b2c\u56db\u6b65\uff1a\u7531\u4e8e\u5dee\u5f02\u603b\u662f\u81f3\u5c11\u4e3a1\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u5dee\u5f02\u4e2d\u51cf\u53bb\u4e00\u4e2a\uff0c\u4f7f\u6570\u5b57\u7a0d\u5fae\u5c0f\u4e00\u4e9b\u3002\uff08\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5fc5\u8981\u7684\u5e76\u53d1\u75c7\uff0c\u4f46\u6211\u6709\u8fc7\uff0c\u4e0d\u60f3\u628a\u5b83\u53bb\u6389\u3002\uff09\n\u7b2c5\u6b65\uff1a\u5b58\u50a8\u4e00\u4e2a\u5b57\u8282\u6d41\uff0c\u5bf9\u5dee\u51cf1\u8fdb\u884c\u7f16\u7801\u3002\u6bcf\u4e2a\u6570\u5b57\u7f16\u7801\u4e3a1\u30012\u62163\u4e2a\u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282\u4e2d\u67097\u4f4d\uff0c\u5982\u679c\u662f\u6700\u540e7\u4f4d\u5e8f\u5217\uff0c\u5219\u6bcf\u4e2a\u5b57\u8282\u7684\u9ad8\u4f4d\u4e3a1\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4e3a0\u3002\u7ed3\u679c\u662f\uff0c\u7ed3\u679c\u662f17763\u5b57\u8282\uff0c\u52a0\u4e0a108\u5b57\u8282\u7684\u5f00\u9500\uff0c\u603b\u517117871\u5b57\u8282\uff0c\u6216\u539f\u59cb\u5217\u8868\u768428%\uff0c\u538b\u7f29\u975e\u5e38\u975e\u5e38\u7b80\u5355\u3002\n\u7b2c6\u6b65\uff1a\u73b0\u5728\u6211\u4eec\u7528\u8bcd\u8868\u7d22\u5f15\u66ff\u6362\u5b57\u6bcd\u6392\u5e8f\u7b54\u6848\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u3002\u7531\u4e8e\u6bcf\u4e2a\u7d22\u5f15\u90fd\u5305\u542b2\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u7b54\u6848\u4e2d\u76842315\u4e2a\u5355\u8bcd\u5b58\u50a8\u4e3a2315\u4e2a\u2005\u00d7\u20052.\u2004=\u20044630\u5b57\u8282\u3002\n\u7b2c7\u6b65\uff1a\u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e24\u4e2a\u8fde\u7eed\u7d22\u5f15\u4e4b\u95f4\u7684\u5dee\u503c\u6c38\u8fdc\u4e0d\u4f1a\u5927\u4e8e62\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b58\u50a8\u8fde\u7eed\u5dee\u5f02\u7684\u6280\u5de7\uff0c\u5e76\u5c06\u7b54\u6848\u5b58\u50a8\u57282315\u5b57\u8282\u4e2d\u3002\uff08\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u89816\u4f4d\u7684\u5dee\u5f02\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u52301737\u5b57\u8282\uff0c\u4f46\u8fd9\u4f1a\u4f7f\u4ee3\u7801\u590d\u6742\u5316\u3002\uff09\n\u7ed3\u679c\uff1a\u8bcd\u6c47\u52a0\u7b54\u6848\u4e0b\u964d\u5230108+17763+2315=20186\u5b57\u8282\u3002\u8fd9\u592a\u5927\u4e86\uff0c\u65e0\u6cd5\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\u5b89\u88c5\u572832K\u7684Cartridge\u4e0a\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u73b0\u6709\u7684\u5927\u591a\u6570\u4ee3\u7801\u90fd\u662fgprintf\uff08\uff09\u7684\u5e93\u652f\u6301\u4ee3\u7801\uff0c\u7528gprint\uff08\uff09\u66ff\u6362\u5355\u4e2agprintf\uff08\uff09\u8c03\u7528\u4f3c\u4e4e\u53ef\u4ee5\u8ba9\u6240\u6709\u5185\u5bb9\u90fd\u9002\u540832K\u3002\n\u5c06\u5176\u7f16\u7801\u4e3a20\u4f4d\u6574\u6570\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u521d\u59cb\u96f6\uff0c\u6211\u4eec\u5f97\u52300729915281760718024328332840\u3002\n\u6bcf\u4e00\u4e2a\u90fd\u9002\u540814\u4f4d\uff08\u8003\u8651\u5230\u9ad8\u6bd4\u7279\u4f7f\u7528\u7387\uff0c\u4e24\u4e2a\u5b57\u8282\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u9002\u54087\u4f4d\u3002\u5b9e\u9645\u4e0a\uff0c7\u4f4d\u4e2d\u6709\u5f88\u591a\u5dee\u5f02\uff0c\u6240\u4ee5\u8fd9\u6700\u7ec8\u6bd4\u524d\u516d\u4e2a\u5b57\u770b\u8d77\u6765\u66f4\u5177\u4ee3\u8868\u6027\u3002\n\u4f7f\u7528\u5982\u4e0a\u6240\u8ff0\u7684\u4ee3\u7801\uff0c\u76d2\u5e26\u4e2d\u6709250\u4e2a\u5b57\u8282\u53ef\u4f9b\u4f7f\u7528\u3002\n\u4eba\u4eec\u53ef\u80fd\u60f3\u77e5\u9053\uff0c\u4e0e\u4f7f\u7528\u6807\u51c6\u7684\u901a\u7528\u538b\u7f29\u5668\u76f8\u6bd4\uff0c\u7f16\u5199\u538b\u7f29\u7b97\u6cd5\u662f\u5426\u8282\u7701\u4e86\u5927\u91cf\u5185\u5b58\u3002\u5bf9gzip\u572864860\u5b57\u8282\u7684\u672a\u538b\u7f29\u8bcd\u6c47\u8868\u4e0a\u8fd0\u884c\u4f1a\u4ea7\u751f30338\u5b57\u8282\uff0c\u8fd9\u6bd4\u6211\u768417871\u5b57\u8282\u538b\u7f29\u8bcd\u6c47\u8868\u8981\u5dee\u5f97\u591a\u3002\u53e6\u5916\uff0c\u6211\u9884\u8ba1\u89e3\u538b\u4ee3\u7801\u4f1a\u66f4\u590d\u6742\u4e00\u4e9b\u3002\n\u901a\u8fc7\u5c06\u6b65\u9aa42\u4e2d\u7684\u56db\u4e2a\u5b57\u6bcd\u201c\u5355\u8bcd\u201d\u7f16\u7801\u4e3abase-26\uff0c\u800c\u4e0d\u662f\u56db\u4e2a5\u4f4d\u5e8f\u5217\uff0c\u53ef\u4ee5\u8282\u7701\u4e00\u70b9\u5185\u5b58\u3002\u4f46\u5b83\u53ea\u4f1a\u8282\u7701\u5927\u7ea60.5K\u7684\u5185\u5b58\uff0c\u800c\u4e14\u4ee3\u7801\u4f1a\u66f4\u52a0\u7cdf\u7cd5\uff08Game Boy\u4f7f\u7528\u5e93\u51fd\u6570\u8fdb\u884c\u9664\u6cd5\uff01\uff09\u3002\n\u7b54\u6848\u53ef\u4ee5\u5b58\u50a8\u4e3a\u957f\u5ea6\u4e3a12972\u7684\u4f4d\u56fe\uff0c\u53731622\u5b57\u8282\u3002\u4f46\u8fd9\u4f1a\u4f7f\u751f\u6210arandom\u5355\u8bcd\u7684\u4ee3\u7801\u66f4\u52a0\u590d\u6742\u548c\u7f13\u6162\u3002", "note_en": "There is a  GameBoy version of Wordle, using a bloom filter, a reduced vocabularyand a reduced list of guess words, all fitting on one 32K cartridge. Idecided to challenge myself and see if I could fit in the whole 12972word Wordle vocabulary, with the whole 2315 word answer list. So thechallenge is:\n  I  managed it(download ROM  here), and itworks in a Game Boy emulator. There is more than one way, and what I didmay be excessively complicated, but I don\u2019t have a good feel for howfast the Game Boy runs, so I did a bit of speed optimization.\n Step 0: We start with  12972\u2005\u00d7\u20055\u2004=\u200464860 bytes of uncompresseddata.\n Step 1: Divide the 12972 word list into 26 lists,based on the first letter of the word. Since in each list, the firstletter is the same, we now need only store four letters per word, alongwith some overhead for each list. (The overhead in the final analysiswill be 108 bytes.) If we stop here,\n Step 2: Each four letter \u201cword\u201d (or tail of a word)can be stored with 5 bits per letter, thereby yielding a 20 bit unsignedinteger. If we stop here, we can store each word in 2.5 bytes, for atotal of 32430. That would fit on the cartridge if there was no code,but it is some progress.\n Step 3: Here was my one clever idea. Each of thelists of four letter \u201cwords\u201d, is in alphabetical order, and encoded thenatural way as 20 bit numbers, the numbers will be in ascending order.Instead of storing these numbers, we need only store their arithmeticaldifferences, starting with an initial (invalid) 0.\n Step 4: Since the differences are always at least 1,we can subtract one from each difference to make the numbers slightlysmaller. (This is a needless complication, but I had it, and don\u2019t feellike removing it.)\n Step 5: Store a stream of bytes encoding thedifference-minus-ones. Each number is encoded as one, two or threebytes, seven-bits in each byte, with the high bit of each byte being 1if it\u2019s the last 7-bit sequence and 0 if it\u2019s not. It turns out that theresult is 17763 bytes, plus 108 bytes of overhead, for a total of 17871bytes, or 28% of the original list, with very, very simpledecompression.\n Step 6: Now we replace each word in thealphabetically-sorted Answers list with an index into the vocabularylist. Since each index fits into 2 bytes, this would let us store the2315 words of the Answers as  2315\u2005\u00d7\u20052\u2004=\u20044630 bytes.\n Step 7: However, it turns out that the differencebetween two successive indexes is never bigger than 62. So we can re-usethe trick of storing successive differences, and store the Answers in2315 bytes. (In fact, since we only need 6 bits for the differences, wecould go down to 1737 bytes, but it would complicate the codesignificantly.)\n Result: Vocabulary plus Answers goes down to108+17763+2315=20186 bytes. This was too big to fit on a 32K cartridgeusing the existing code. But it turns out that most of the existing codewas library support code for  gprintf(), and replacing thesingle  gprintf() call, which was just being used to formata string containing a single-digit integer variable, with gprint(), seemed to get everything to fit in 32K.\n  Encoding as 20-bit integers and adding an initial zero, we get 0,7299, 11528, 17607, 18024, 32832, 32840.\n  Each of these fits in 14-bits (two bytes, given the high-bitusage), with the last one in 7-bits. In practice, there are a lot ofdifferences that fit in 7-bits, so this ends up being more efficientthan it looks\u2014the first six words are not representative.\n  With the code as described above, there are 250 bytes to spare in the cartridge.\n One might wonder whether making up the compression algorithmsaves much memory over using a standard general purpose compressor. Yes. gzip run on the 64860 bytes of uncompressed Vocabularyyields 30338 bytes, which is rather worse than my 17871 byte compressionof the Vocabulary. Plus the decompression code would, I expect, be quitea bit more complex.\n One could save a little memory by encoding the four-letter\u201cwords\u201d in Step 2 in base-26 instead of four 5-bit sequences. But itwould save only about 0.5K of memory, and the code would be much nastier(the Game Boy uses library functions for division!).\n The Answers could be stored as a bitmap of length 12972, whichwould be 1622 bytes. But this would make the code for generating arandom word more complicated and slower.", "posttime": "2022-02-20 12:21:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5355\u8bcd,boy,\u4ee3\u7801", "title": "Game Boy Wordle clone\uff1a\u5982\u4f55\u5c0612972\u4e2a\u4e94\u5b57\u6bcd\u5355\u8bcd\u538b\u7f29\u523017871\u5b57\u8282", "title_en": "Game Boy Wordle clone: How to compress 12972 five-letter words to 17871 bytes", "transed": 1, "url": "http://alexanderpruss.blogspot.com/2022/02/game-boy-wordle-how-to-compress-12972.html", "via": "", "real_tags": ["\u5355\u8bcd", "boy", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074175, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6211\u5728SOSP\u4e0a\u5199\u7684\u6700\u540e\u51e0\u7bc7\u8bba\u6587\u4e4b\u4e00\u2014\u2014\u6211\u6b63\u5728\u5c1d\u8bd5\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\uff0c\u5e76\u5728\u8fd9\u91cc\u53d1\u5e03\u6211\u8ba1\u5212\u9605\u8bfb\u7684\u8bba\u6587\u961f\u5217\u3002\u8fd9\u4e9b\u8bba\u6587\u8bc4\u8bba\u53ef\u4ee5\u6bcf\u5468\u53d1\u9001\u5230\u4f60\u7684\u6536\u4ef6\u7bb1\uff0c\u4e5f\u53ef\u4ee5\u8ba2\u9605Atom\u8ba2\u9605\u6e90\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u8bf7\u968f\u65f6\u5728Twitter\u4e0a\u53d1\u8868\u53cd\u9988\u6216\u5efa\u8bae\uff01\n\u672c\u5468\u7684\u8bba\u6587\u662fShard Manager\uff1a\u4e00\u4e2a\u7528\u4e8e\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u7684\u901a\u7528Shard\u7ba1\u7406\u6846\u67b6\u3002\u8fd9\u9879\u7814\u7a76\u63cf\u8ff0\u4e86Facebook\u4e3a\u5927\u89c4\u6a21\u8fd0\u884c\u5206\u7247\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u6846\u67b6\u3002\n\u5728Shard Manager\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fdb\u884c\u5e94\u7528\u7a0b\u5e8f\u5206\u7247\u3002\u5c06\u8bf7\u6c42\u5b50\u96c6\u5206\u914d\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\uff0c\u5141\u8bb8\u4efb\u52a1\u8fdb\u884c\u4e13\u95e8\u5316\u2014\u2014\u4e3a\u8bf7\u6c42\u5b50\u96c6\u4e13\u95e8\u5316\u7684\u4e00\u7ec4\u4efb\u52a1\u79f0\u4e3a\u788e\u7247\u3002\n\u5f53\u4efb\u52a1\u83b7\u53d6\u72b6\u6001\u6216\u5176\u4ed6\u5143\u6570\u636e\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7279\u522b\u6709\u7528\u3002\u4f8b\u5982\uff0c\u8bed\u97f3\u8bc6\u522b\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u52a0\u8f7d\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6765\u5904\u7406\u8bed\u8a00\u3002\u5c06\u4e0d\u540c\u8bed\u8a00\u7684\u8bf7\u6c42\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u5207\u5206\u610f\u5473\u7740\u5e94\u7528\u7a0b\u5e8f\u7684\u4efb\u52a1\u4e0d\u9700\u8981\u4e0b\u8f7d\u6bcf\u4e2a\u6a21\u578b\uff08\u8fd9\u4f1a\u5360\u7528\u5927\u91cf\u65f6\u95f4\u548c\u5e26\u5bbd\uff09\u3002\nShard Manager\u8bba\u6587\u4e0d\u4ec5\u8ba8\u8bba\u4e86\u5927\u89c4\u6a21\u8fd0\u884c\u5206\u7247\u7cfb\u7edf\u7684\u6280\u672f\u65b9\u9762\uff0c\u8fd8\u5305\u62ecFacebook\u5185\u90e8\u7684\u4f7f\u7528\u548c\u91c7\u7528\u6570\u636e\u3002\u8be5\u62a5\u5173\u4e8eFacebook\u5185\u90e8\u54ea\u4e9b\u529f\u80fd\u5bf9\u7528\u6237\u81f3\u5173\u91cd\u8981\u7684\u4fe1\u606f\u53ef\u80fd\u6709\u52a9\u4e8e\u672a\u6765\u7684\u5de5\u4f5c\u4f18\u5148\u5316@rakyll\u6709\u4e00\u7bc7\u5173\u4e8e\u6f5c\u5728\u5b9e\u73b0\u7684\u4f1f\u5927\u6587\u7ae0\u3002\nShard Manager\u8bba\u6587\u6709\u4e94\u4e2a\u4e3b\u8981\u8d21\u732e\uff1a\u5206\u6790Facebook\u4e0a\u7684\u5206\u7247\u4f7f\u7528\u60c5\u51b5\u3001\u5206\u7247\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u3001\u5b9a\u4e49\u5206\u7247\u7ea6\u675f\u7684\u7279\u5b9a\u9886\u57df\u8bed\u8a00\u3001\u5c06\u5206\u7247\u653e\u5165Facebook\u6570\u636e\u4e2d\u5fc3\u7684\u7ea6\u675f\u89e3\u7b97\u5668\u3001\u5206\u6790Facebook\u4e0a\u7684\u5206\u7247\u4f7f\u7528\u60c5\u51b5\uff0c\u5e76\u5bf9\u751f\u4ea7\u4e2d\u7684\u7cfb\u7edf\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\n\u672c\u6587\u6307\u51fa\u4e86\u5b9e\u73b0Shard Manager\u7684\u4e09\u4e2a\u4e3b\u8981\u52a8\u673a\uff1a\u63d0\u9ad8\u53ef\u7528\u6027\u3001\u652f\u6301\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u548c\u6539\u8fdb\u8d1f\u8f7d\u5e73\u8861\u3002\n\u4e3a\u4e86\u63d0\u9ad8\u53ef\u7528\u6027\uff0cShard Manager\u65e8\u5728\u987a\u5229\u5904\u7406\u8ba1\u5212\u4e2d\u7684\u6570\u636e\u4e2d\u5fc3\u7ef4\u62a4Facebook\u6700\u8fd1\u5728\u5176\u7fa4\u96c6\u7ba1\u7406\u5668Twine\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\u2014\u2014\u5982\u679c\u5bb9\u5668\u5728\u5904\u7406\u7528\u6237\u8bf7\u6c42\u65f6\u505c\u6b62\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u5c06\u5931\u8d25\uff0c\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u7528\u6027\u3002\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u5bb9\u5668\uff0cFacebook\u7684\u57fa\u7840\u8bbe\u65bd\u63d0\u524d\u77e5\u9053\u5bb9\u5668\u6b63\u5728\u5173\u95ed\u3002Shard Manager\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4e0e\u5bb9\u5668\u57fa\u7840\u8bbe\u65bd\u534f\u8c03\u6765\u987a\u5229\u5904\u7406\u8fd9\u4e9b\u5173\u95ed\u4e8b\u4ef6\uff0c\u786e\u4fdd\u5f85\u5173\u95ed\u7684\u5bb9\u5668\u505c\u6b62\u63a5\u6536\u8bf7\u6c42\uff0c\u5e76\u786e\u4fdd\u53d1\u9001\u5230\u5173\u95ed\u5bb9\u5668\u7684\u8bf7\u6c42\u88ab\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u6d3b\u52a8\u5b9e\u4f8b\u3002\nShard Manager\u7684\u7b2c\u4e8c\u4e2a\u4e3b\u8981\u52a8\u529b\u662f\u652f\u6301\u5730\u7406\u5206\u5e03\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u4e00\u79cd\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u788e\u7247\u7684\u65b9\u6cd5\uff09\u3002\u5728Shard Manager\u4e4b\u524d\uff0c\u670d\u52a1\u4e3b\u8981\u901a\u8fc7\u533a\u57df\u90e8\u7f72\u8fdb\u884c\u914d\u7f6e\u2014\u2014\u4e3a\u4e86\u5728Facebook\u89c4\u6a21\u4e0a\u8fd0\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5728\u79f0\u4e3a\u533a\u57df\u7684\u6570\u636e\u4e2d\u5fc3\u7ec4\u4e2d\u8fd0\u884c\uff0c\u6bcf\u4e2a\u533a\u57df\u7684\u914d\u7f6e\u7c7b\u4f3c\u3002\u5bf9\u4e8e\u5206\u7247\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u610f\u5473\u7740\u4fdd\u7559\u8db3\u591f\u7684\u8d44\u6e90\u6765\u670d\u52a1\u4e8e\u6bcf\u4e2a\u533a\u57df\u7684\u6bcf\u4e2a\u5206\u7247\uff0c\u5373\u4f7f\u4e0d\u9700\u8981\u8fd9\u4e9b\u5206\u7247\u2014\u2014\u8fd9\u79cd\u9650\u5236\u5bfc\u81f4\u4e86\u6570\u636e\u4e2d\u5fc3\u8d44\u6e90\u7684\u6d6a\u8d39\u3002\u6b64\u5916\uff0c\u5728\u6570\u636e\u4e2d\u5fc3\u6216\u533a\u57df\u7ef4\u62a4\u7684\u60c5\u51b5\u4e0b\uff0c\u533a\u57df\u90e8\u7f72\u975e\u5e38\u7b28\u62d9\uff0c\u56e0\u4e3a\u5176\u4ed6\u533a\u57df\u53ef\u80fd\u6ca1\u6709\u591a\u4f59\u7684\u5bb9\u91cf\u6765\u5b58\u50a8\u6bcf\u4e2a\u788e\u7247\u7684\u989d\u5916\u526f\u672c\u3002\n\u6539\u8fdb\u7684\u8d1f\u8f7d\u5e73\u8861\u662fShard Manager\u7684\u7b2c\u4e09\u4e2a\u4e3b\u8981\u52a8\u673a\u3002\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u72ec\u7acb\u7075\u6d3b\u5730\u6dfb\u52a0\u548c\u79fb\u52a8\u788e\u7247\uff0c\u7b80\u5316\u4e86\u8f6c\u79fb\u8d1f\u8f7d\u7684\u8fc7\u7a0b\u2014\u2014\u7cfb\u7edf\u4e0d\u9700\u8981\u590d\u5236\u6bcf\u4e2a\u788e\u7247\uff0c\u800c\u662f\u53ef\u4ee5\u6dfb\u52a0\u6216\u79fb\u52a8\u7279\u5b9a\u7684\u788e\u7247\u3002\u540c\u65f6\uff0c\u51b3\u5b9a\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u653e\u7f6e\u788e\u7247\u662f\u788e\u7247\u7ba1\u7406\u5668\u9700\u8981\u89e3\u51b3\u7684\u4e00\u4e2a\u56f0\u96be\u7684\u4f18\u5316\u95ee\u9898\u3002\n\u5207\u5206\u6846\u67b6\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u662f\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u5207\u5206\u3002Shard Manager\u4f7f\u7528\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u5bc6\u94a5\uff08\u79f0\u4e3a\u5e94\u7528\u5bc6\u94a5\uff09\u6765\u6267\u884c\u6b64\u6620\u5c04\u2014\u2014\u7ee7\u7eed\u8bed\u8a00\u670d\u52a1\u5668\u793a\u4f8b\uff0c\u5bf9\u82f1\u8bed\u7684\u8bf7\u6c42\u53d1\u9001\u5230X Shard\uff0c\u800c\u5bf9\u5fb7\u8bed\u548c\u666e\u901a\u8bdd\u7684\u8bf7\u6c42\u53ef\u80fd\u53d1\u9001\u5230Y\u548cZ Shard\u3002\n\u672c\u6587\u8fd8\u8ba8\u8bba\u4e86\u53e6\u4e00\u79cd\u79f0\u4e3aUUID\u5bc6\u94a5\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u57fa\u4e8e\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u5bc6\u94a5\u6563\u5217\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u788e\u7247\u3002\n\u4e0eUUID\u5bc6\u94a5\u76f8\u6bd4\uff0c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\u6709\u5176\u5229\u5f0a\uff0cUUID\u5bc6\u94a5\u4e3b\u8981\u57fa\u4e8e\u6570\u636e\u5c40\u90e8\u6027\u2014\u2014\u5728shard manager\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6570\u636e\u5c40\u90e8\u6027\u610f\u5473\u7740\u76f8\u4f3c\u7684\u6570\u636e\uff08\u53ef\u80fd\u6765\u81ea\u4e16\u754c\u4e0a\u76f8\u5173\u7684\u7528\u6237\u6216\u5730\u533a\uff09\u88ab\u653e\u7f6e\u5728\u76f8\u540c\u6216\u9644\u8fd1\u7684\u788e\u7247\u4e0a\u3002\u672c\u6587\u8ba4\u4e3a\uff0c\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\u63d0\u4f9b\u6570\u636e\u4f4d\u7f6e\uff0c\u800cUUID\u5bc6\u94a5\u4e0d\u63d0\u4f9b\u6570\u636e\u4f4d\u7f6e\u3002\n\u6570\u636e\u5c40\u90e8\u6027\u5c06\u652f\u6301\u5728\u6267\u884c\u67e5\u8be2\u65f6\u987a\u5e8f\u626b\u63cf\u591a\u4e2a\u788e\u7247\u7b49\u529f\u80fd\u3002\u540c\u65f6\uff0c\u6570\u636e\u5c40\u90e8\u6027\u53ef\u80fd\u4f1a\u589e\u52a0\u70ed\u70b9\u7684\u53ef\u80fd\u6027\uff0c\u5728\u70ed\u70b9\u4e2d\uff0c\u76f8\u4f3c\u6570\u636e\u7684\u8bfb\u53d6\u90fd\u4f1a\u8fdb\u5165\u540c\u4e00\u4e2a\u788e\u7247\u3002\u4ee5\u524d\u7684\u5207\u5206\u6846\u67b6\u65b9\u6cd5\uff0c\u5982Slicer\uff0c\u8bf7\u53c2\u9605\u6b64\u5904\u5173\u4e8eSlicer\u7684\u6587\u7ae0\uff0c\u63d0\u5230\u6dfb\u52a0\u4e86\u5bf9\u7c7b\u4f3c\u5e94\u7528\u7a0b\u5e8f\u952e\u7684\u65b9\u6cd5\u7684\u652f\u6301\uff0c\u4ee5\u4fdd\u7559\u6570\u636e\u7684\u5c40\u90e8\u6027\uff0c\u4f46\u63d0\u5230\u201c\u7531\u4e8e\u73b0\u6709\u5b58\u50a8\u7cfb\u7edf\u7684\u884c\u4e3a\uff0c\u8bb8\u591a\u8c37\u6b4c\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u56f4\u7ed5\u5355\u952e\u64cd\u4f5c\u800c\u4e0d\u662f\u626b\u63cf\u6784\u5efa\u3002\u201d\nShard Manager\u4f53\u7cfb\u7ed3\u6784\u6709\u4e09\u4e2a\u4e3b\u8981\u7ec4\u4ef6\uff1a\u5e94\u7528\u7a0b\u5e8f\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u63a7\u5236\u5e73\u9762\u63a7\u5236\u5e73\u9762\uff0c\u56e0\u4e3a\u5b83\u662f\u6267\u884c\u7ba1\u7406\u548c\u5143\u6570\u636e\u5b58\u50a8\u64cd\u4f5c\u7684\u5c42\uff0c\u4ee5\u53ca\u96c6\u7fa4\u7ba1\u7406\u5668\u3002\n\u5e94\u7528\u670d\u52a1\u5668\u662f\u5b9e\u9645\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u7528\u4e8e\u64cd\u4f5c\u788e\u7247\u5e76\u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002\u6bcf\u53f0\u670d\u52a1\u5668\u90fd\u6709\u4e00\u4e2a\u5e93\uff0c\u5141\u8bb8\u5b83\u7ba1\u7406\u788e\u7247\u72b6\u6001\uff08\u5982\u62a5\u544a\u670d\u52a1\u5668\u8fd0\u884c\u72b6\u51b5\uff09\uff0c\u6ce8\u518c/\u53d6\u6d88\u6ce8\u518c\u788e\u7247\u63a5\u6536\u8bf7\u6c42\uff0c\u5e76\u8fde\u63a5\u5230\u788e\u7247\u7ba1\u7406\u4e8b\u4ef6\u3002\u5f53\u788e\u7247\u6267\u884c\u7ba1\u7406\u64cd\u4f5c\u65f6\uff0c\u5b83\u4f1a\u5c06\u72b6\u6001\u5199\u5165Zookeeper\u3002\u5982\u679c\u788e\u7247\u7ba1\u7406\u5668\u8003\u8651\u91c7\u7528Delos\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6d88\u606f\u3002Delos\u662f\u4e00\u4e2a\u5b58\u50a8\u63a7\u5236\u5e73\u9762\u6570\u636e\u7684\u7cfb\u7edf\uff0c\u5728\u4e4b\u524d\u7684\u8bba\u6587\u7efc\u8ff0\u4e2d\u8ba8\u8bba\u8fc7\uff0c\u6301\u4e45\u6570\u636e\u5b58\u50a8\u3002\n\u8981\u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\uff0c\u5e94\u7528\u7a0b\u5e8f\u5ba2\u6237\u7aef\u4f7f\u7528\u5e93\uff08\u79f0\u4e3a\u670d\u52a1\u8def\u7531\u5668\uff09\u3002\u5ba2\u6237\u7aef\u7684\u670d\u52a1\u8def\u7531\u5668\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\uff08\u5b9a\u4e49\u4ece\u8bf7\u6c42\u5230\u788e\u7247\u7684\u6620\u5c04\uff09\u8def\u7531\u8bf7\u6c42\uff0c\u5e76\u6839\u636e\u5e93\u5728\u670d\u52a1\u53d1\u73b0\u4e2d\u4f7f\u7528\u7684\u72b6\u6001\u9009\u62e9\u53ef\u7528\u788e\u7247\u3002\u6709\u5173\u66f4\u591a\u80cc\u666f\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u672c\u6587\u4e2d\u7684\u670d\u52a1\u53d1\u73b0\u3002\u7cfb\u7edf\u968f\u7740\u788e\u7247\u7684\u6dfb\u52a0\u3001\u5220\u9664\u548c\u7f29\u653e\uff0c\u670d\u52a1\u8def\u7531\u5668\u4f1a\u5b9a\u671f\u5728\u540e\u53f0\u8f6e\u8be2\u4ee5\u63a5\u6536\u66f4\u65b0\u3002\nOrchestrator\uff1a\u4ece\u5e94\u7528\u670d\u52a1\u5668\u63a5\u6536\u8fd0\u884c\u72b6\u51b5\u548c\u8d1f\u8f7d\u4fe1\u606f\u7684\u4e2d\u95f4\u7ec4\u4ef6\u3002\u5b83\u4e0e\u63a7\u5236\u5e73\u9762\u7684\u5176\u4ed6\u6210\u5458\uff08\u5982\u8c03\u5ea6\u548c\u7f29\u653e\u788e\u7247\u7684\u7ec4\u4ef6\uff09\u5171\u4eab\u6b64\u6570\u636e\uff0c\u5e76\u5c06\u5176\u4f20\u64ad\u5230\u670d\u52a1\u53d1\u73b0\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u5e94\u7528\u7a0b\u5e8f\u5ba2\u6237\u7aef\u62e5\u6709\u7cfb\u7edf\u7684\u66f4\u65b0\u89c6\u56fe\u3002\nTaskController\uff1a\u4e0e\u7fa4\u96c6\u7ba1\u7406\u5668\u901a\u4fe1\u4ee5\u8bf7\u6c42\u66f4\u591a\u8d44\u6e90\uff08\u5728\u6269\u5c55\u788e\u7247\u65f6\uff09\u6216\u63a5\u6536\u7cfb\u7edf\u4e8b\u4ef6\uff0c\u5982\u6302\u8d77\u7684\u7ef4\u62a4\uff08\u4efb\u52a1\u63a7\u5236\u5668\u4f7f\u7528\u5b83\u6765\u4f18\u96c5\u5730\u5173\u95ed\u788e\u7247\uff09\u3002TaskController\u4f1a\u5c06\u6b64\u4fe1\u606f\u4f20\u64ad\u5230Orchestrator\uff0c\u4ee5\u4fbf\u5b83\u80fd\u591f\u4f18\u96c5\u5730\u5b8c\u6210\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u548c\u788e\u7247\u7684\u5de5\u4f5c\u3002\n\u57fa\u7840\u7ed3\u6784\u5806\u6808\u7684\u4e0b\u65b9\u662f\u7fa4\u96c6\u7ba1\u7406\u5668\u3002\u6709\u5173\u7fa4\u96c6\u7ba1\u7406\u5668\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5939\u7ef3\u7eb8\uff0c\u5b83\u4e0e\u4e0a\u9762\u7684TaskController\u901a\u4fe1\uff0c\u4ee5\u786e\u4fdd\u8ba1\u5212\u4e2d\u7684\u4e8b\u4ef6\uff08\u5982\u201c\u5373\u5c06\u5230\u6765\u7684\u786c\u4ef6\u7ef4\u62a4\u4e8b\u4ef6\u3001\u5185\u6838\u66f4\u65b0\u548c\u5bb9\u5668\u542f\u52a8/\u505c\u6b62/\u79fb\u52a8\u201d\uff09\u5f97\u5230\u59a5\u5584\u5904\u7406\uff0c\u4ece\u800c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\u6027\u3002\n\u672c\u6587\u8ba8\u8bba\u4e86Shard Manager\u529f\u80fd\u5982\u4f55\u5728\u6269\u5c55\u7cfb\u7edf\u7684\u540c\u65f6\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\u6027\u548c\u652f\u6301\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u3002\nShard Manager\u5b9e\u73b0\u4e86\u4e24\u79cd\u4e3b\u8981\u6280\u672f\u672c\u6587\u8fd8\u63d0\u5230\u4e86\u8de8\u5bb9\u9519\u57df\uff08\u5982\u591a\u4e2a\u533a\u57df\u548c\u6570\u636e\u4e2d\u5fc3\uff09\u7684\u788e\u7247\u5206\u5e03\uff0c\u4ee5\u63d0\u9ad8\u53ef\u7528\u6027\uff0c\u4f46\u6211\u5c06\u788e\u7247\u5206\u5e03\u7684\u8ba8\u8bba\u63a8\u8fdf\u5230\u5e03\u5c40\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\u6027\uff1a\u4e0e\u7fa4\u96c6\u7ba1\u7406\u5668\u534f\u8c03\u5bb9\u5668\u5173\u95ed\uff0c\u5e76\u8fc1\u79fb\u788e\u7247\u6d41\u91cf\u3002\n\u534f\u8c03\u5bb9\u5668\u5173\u95ed\u5bf9\u4e8e\u63d0\u9ad8\u53ef\u7528\u6027\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u786e\u4fdd\u8bf7\u6c42\u4e0d\u4f1a\u53d1\u9001\u5230\u53ef\u80fd\u5728\u54cd\u5e94\u65f6\u5173\u95ed\u7684\u5bb9\u5668\u3002Shard Manager\u8fd8\u5fc5\u987b\u786e\u4fdd\u8ba1\u5212\u7684\u7ef4\u62a4\u4e8b\u4ef6\u4e0d\u4f1a\u4e00\u6b21\u79bb\u7ebf\u5360\u7528\u592a\u591a\u5bb9\u91cf\uff08\u8fd9\u4f1a\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5904\u4e8e\u65e0\u6cd5\u54cd\u5e94\u6240\u6709\u4f20\u5165\u8bf7\u6c42\u7684\u72b6\u6001\uff09\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0cShard Manager\u7684TaskController\u4e0e\u7fa4\u96c6\u7ba1\u7406\u5668\u8fdb\u884c\u901a\u4fe1\uff0c\u4ece\u670d\u52a1\u53d1\u73b0\u4e2d\u5220\u9664\u5373\u5c06\u505c\u7528\u7684\u788e\u7247\uff0c\u5e76\u5728\u5176\u4ed6\u4eba\u51c6\u5907\u8131\u673a\u65f6\u542f\u52a8\u65b0\u7684\u788e\u7247\u3002\u5982\u679c\u65e0\u6cd5\u5728\u7ef4\u62a4\u4e4b\u524d\u8f6c\u79fb\u788e\u7247\uff0c\u4efb\u52a1\u63a7\u5236\u5668\u53ef\u4ee5\u8b66\u544a\u96c6\u7fa4\u7ba1\u7406\u5668\uff0c\u5efa\u8bae\u7684\u64cd\u4f5c\u5c06\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5904\u4e8e\u4e0d\u5b89\u5168\u72b6\u6001\u3002\nShard Manager\u8fd8\u901a\u8fc7\u5b9e\u73b0\u4f18\u96c5\u7684\u5207\u6362\u8fc7\u7a0b\u6765\u652f\u6301\u8fc1\u79fbShard\u6d41\u91cf\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u6b63\u5728\u8fdb\u884c\u7684\u8bf7\u6c42\u4ece\u65e7\u7684\u788e\u7247\u8f6c\u53d1\u5230\u65b0\u7684\u788e\u7247\uff0c\u786e\u4fdd\u5c3d\u53ef\u80fd\u5c11\u7684\u788e\u7247\u6389\u5230\u5730\u677f\u4e0a\u3002\u8be5\u7cfb\u7edf\u7684\u6d41\u91cf\u8fc1\u79fb\u8fd8\u65e8\u5728\u5207\u6362\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u5ba2\u6237\u7aef\u7684\u4efb\u4f55\u65b0\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u7ee7\u7eed\u5411\u65e7\u7684\u788e\u7247\u53d1\u9001\u8bf7\u6c42\u2014\u2014\u670d\u52a1\u53d1\u73b0\u7cfb\u7edf\u6700\u7ec8\u662f\u4e00\u81f4\u7684\u3002\u8bf7\u53c2\u9605\u4e9a\u9a6c\u900a\u7684\u6c83\u7eb3\u00b7\u6c83\u683c\u5c14\uff08Werner Vogels\uff09\u5173\u4e8e\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u8fd9\u7bc7\u535a\u6587\uff0c\u56e0\u6b64\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u6682\u65f6\u4f7f\u7528\u8fc7\u65f6\u7684\u8def\u7531\u72b6\u6001\u3002\n\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u5c06\u788e\u7247\u72ec\u7acb\u90e8\u7f72\u5230Facebook\u5168\u7403\u7684\u57fa\u7840\u8bbe\u65bd\u4e2d\u3002\u867d\u7136\u8fd9\u9879\u6280\u672f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u597d\u5904\uff0c\u6bd4\u5982\u72ec\u7acb\u7f29\u653e\u5355\u4e2a\u788e\u7247\uff0c\u4f46\u5b83\u4e5f\u5e26\u6765\u4e86\u81ea\u8eab\u7684\u6311\u6218\u2014\u2014\u9009\u62e9\u5982\u4f55\u653e\u7f6e\u788e\u7247\u4ee5\u53ca\u4f55\u65f6\u79fb\u52a8\u788e\u7247\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u4f18\u5316\u95ee\u9898\u3002\u4e3a\u4e86\u89e3\u51b3\u4e0e\u5e03\u5c40\u548c\u8d1f\u8f7d\u5e73\u8861\u76f8\u5173\u7684\u4f18\u5316\u95ee\u9898\uff0cShard Manager\u4f7f\u7528\u4e86\u4e00\u4e2a\u7ea6\u675f\u89e3\u7b97\u5668\uff0c\u8be5\u89e3\u7b97\u5668\u53ef\u914d\u7f6e\u4e13\u7528\u8bed\u8a00\u6765\u8868\u8fbe\u7ea6\u675f\u3002\nShard Manager\u6700\u521d\u4f7f\u7528\u57fa\u4e8e\u542f\u53d1\u5f0f\u7684\u5b9e\u73b0\u6765\u505a\u51fa\u8d1f\u8f7d\u5e73\u8861\u51b3\u7b56\uff0c\u8fd9\u65e2\u590d\u6742\u53c8\u96be\u4ee5\u6269\u5c55\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u8fc1\u79fb\u5230\u7ea6\u675f\u6c42\u89e3\u5668\u3002\u672c\u6587\u63d0\u5230\u4e86\u8bb8\u591a\u4f18\u5316\u6280\u672f\uff0c\u5305\u62ec\u6df7\u5408\u6574\u6570\u89c4\u5212\uff08MIP\uff09\u3001\u9057\u4f20\u7b97\u6cd5\u548c\u6a21\u62df\u9000\u706b\u3002\u6211\u8fdc\u4e0d\u662f\u8fd9\u7c7b\u7814\u7a76\u7684\u4e13\u5bb6\uff0c\u6240\u4ee5\u8fd9\u53ef\u80fd\u662f\u672a\u6765\u8bba\u6587\u8bc4\u8bba\u7684\u6f5c\u5728\u4e3b\u9898\u3002\n\u89e3\u7b97\u5668\u7684\u8f93\u5165\u662f\u7ea6\u675f\u548c\u76ee\u6807\u2014\u2014\u793a\u4f8b\u7ea6\u675f\u662f\u7cfb\u7edf\u7a33\u5b9a\u6027\u6216\u670d\u52a1\u5668\u5bb9\u91cf\uff0c\u800c\u793a\u4f8b\u76ee\u6807\u662f\u8de8\u533a\u57df\u7684\u8d1f\u8f7d\u5e73\u8861\uff08\u4ee5\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff09\u6216\u8de8\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\u5206\u53d1\u526f\u672c\uff08\u4ee5\u5728\u7279\u5b9a\u6570\u636e\u4e2d\u5fc3\u51fa\u73b0\u95ee\u9898\u65f6\u63d0\u9ad8\u53ef\u7528\u6027\uff09\u3002\n\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00\u914d\u7f6e\u5176\u4f4d\u7f6e\u548c\u8d1f\u8f7d\u5e73\u8861VMWare\u5bf9\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u914d\u7f6e\u7fa4\u96c6\u7ba1\u7406\u5668\u8fdb\u884c\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u4e14\u76f8\u5173\u7684\u7814\u7a76\uff0c\u4f7f\u7528\u58f0\u660e\u5f0f\u7f16\u7a0b\u6784\u5efa\u53ef\u6269\u5c55\u4e14\u7075\u6d3b\u7684\u7fa4\u96c6\u7ba1\u7406\u5668\u3002\u8fd9\u8f6c\u5316\u4e3a\u7ea6\u675f\u89e3\u7b97\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u5f62\u5f0f\u3002\u5c3d\u7ba1Facebook\u6709\u4e00\u4e2a\u9488\u5bf9\u6570\u636e\u4e2d\u5fc3\u95ee\u9898\u7684\u9ad8\u6548\u7ea6\u675f\u6c42\u89e3\u5668\uff0c\u8be5\u8bba\u6587\u8fd8\u662f\u94fe\u63a5\u5230\u4e86SOSP\u5728RAS\u4e0a\u7684\u53e6\u4e00\u7bc7Facebook\u8bba\u6587\uff1a\u6301\u7eed\u4f18\u5316\u7684\u533a\u57df\u8303\u56f4\u6570\u636e\u4e2d\u5fc3\u8d44\u6e90\u5206\u914d\uff0cShard Manager\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u8be5\u8bba\u6587\u63d0\u5230\u4e86\u5c40\u90e8\u641c\u7d22\uff0c\u5b83\u201c\u5df2\u7ecf\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u542f\u53d1\u5f0f\u601d\u60f3\u53d1\u5c55\u6210\u4e3a\u4e00\u4e2a\u5728\u7ec4\u5408\u4f18\u5316\u4e2d\u5438\u5f15\u8d8a\u6765\u8d8a\u591a\u5173\u6ce8\u7684\u6210\u719f\u7814\u7a76\u9886\u57df\u3002\u201d\u4ee5\u9002\u5e94\u5176\u9ad8\u8bf7\u6c42\u7387\u3002\n\u5206\u533a\uff1a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u5206\u533a\uff0c\u201c\u6bcf\u4e2a\u5206\u533a\u901a\u5e38\u7531\u6570\u5343\u53f0\u670d\u52a1\u5668\u548c\u6570\u5341\u4e07\u4e2a\u788e\u7247\u526f\u672c\u7ec4\u6210\u3002\u201d\nmini Shard manager\uff08mini SM\uff09\uff0c\u672c\u8d28\u4e0a\u662f\u5355\u4e2aShard manager\u63a7\u5236\u5e73\u9762\u7684\u526f\u672c\uff08\u5728\u4e0a\u4e00\u8282\u4e2d\u63d0\u5230\uff09\u3002\u6bcf\u4e2a\u8ff7\u4f60SM\u5904\u7406\u670d\u52a1\u5668\u548c\u788e\u7247\u7684\u5b50\u96c6\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a2a\u5411\u6269\u5c55\u201c\u6a2a\u5411\u6269\u5c55\u201d\u610f\u5473\u7740\u6dfb\u52a0\u66f4\u591a\u7684\u8ff7\u4f60\u788e\u7247\u7ba1\u7406\u5668\u4ee5\u8986\u76d6\u66f4\u591a\u7684\u673a\u5668\uff0c\u7531\u4e8e\u8bd5\u56fe\u8ba9\u5355\u4e2aShard Manager\u8986\u76d6\u591a\u53f0\u673a\u5668\u4f1a\u5f88\u56f0\u96be\uff0cShard Manager\u7684\u7248\u672c\u8fd8\u6dfb\u52a0\u4e86\u51e0\u4e2a\u65b0\u7ec4\u4ef6\uff0c\u5305\u62ec\u5145\u5f53\u4e0e\u5916\u90e8\u7cfb\u7edf\uff08\u5982\u7fa4\u96c6\u7ba1\u7406\u5668\u548c\u5de5\u5177\uff09\u901a\u4fe1\u7684\u5e73\u8861\u5668\u7684\u524d\u7aef\uff0c\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\u901a\u8fc7\u591a\u4e2a\u8ff7\u4f60SMs\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u5206\u533a\u7684\u534f\u8c03\uff0c\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\u4e0e\u4e4b\u901a\u4fe1\u4ee5\u5c06\u5e94\u7528\u7a0b\u5e8f\u5206\u533a\u5206\u914d\u7ed9\u8ff7\u4f60SMs\u7684\u5206\u533a\u6ce8\u518c\u8868\u3002\nShard Manager\u65e8\u5728\u4e3aFacebook\u5185\u5c3d\u53ef\u80fd\u591a\u7684\u5206\u7247\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u652f\u6301\uff0c\u5e76\u63d0\u4f9b\u6570\u636e\u70b9\uff0c\u8fd9\u4e9b\u6570\u636e\u70b9\u5bf9\u63a8\u52a8\u91c7\u7528\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u8bba\u8bc1\u4e86\u4e0e\u9879\u76ee\u52a8\u673a\u4e00\u81f4\u7684\u4e24\u4e2a\u65b9\u9762\u7684\u529f\u80fd\u7684\u91cd\u8981\u6027\uff1a\u63d0\u9ad8\u53ef\u7528\u6027\u548c\u5730\u7406\u5206\u5e03\u90e8\u7f72\u3002\n\u8bb8\u591a\u8fc1\u79fb\u5230Shard Manager\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u5229\u7528\u4e86\u5b83\u7684\u53ef\u7528\u6027\u529f\u80fd\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u8ba1\u5212\u4e8b\u4ef6\u65b9\u9762\u2014\u2014\u201c70%\u7684SM\u5e94\u7528\u7a0b\u5e8f\u9009\u62e9\u5728\u5bb9\u5668\u91cd\u542f\u4e4b\u524d\u4f18\u96c5\u5730\u6392\u7a7a\u788e\u7247\u3002\u201d\n\u8bba\u6587\u8fd8\u6307\u51fa\uff0c\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u7684\u91c7\u7528\u7387\u4e5f\u5f88\u9ad8\u2014\u2014\u4f7f\u7528Shard Manager\u7684\u5206\u7247\u5e94\u7528\u7a0b\u5e8f\u4e2d\u670967%\u4f7f\u7528\u5730\u7406\u5206\u5e03\u90e8\u7f72\u3002\n\u672c\u6587\u4f7f\u7528\u4e09\u4e2a\u6807\u51c6\u8bc4\u4f30Shard Manager\uff1a\u7cfb\u7edf\u662f\u5426\u5728\u89c4\u6a21\u4e0a\u6210\u529f\uff0c\u662f\u5426\u80fd\u591f\u5b9e\u73b0\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\u6027\u548c\u652f\u6301\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u7684\u539f\u59cb\u76ee\u6807\uff0c\u4ee5\u53caShard Manager\u662f\u5426\u80fd\u591f\u5145\u5206\u89e3\u51b3\u8d1f\u8f7d\u5e73\u8861\u7684\u4f18\u5316\u95ee\u9898\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u89c4\u6a21\uff0cShard Manager\u663e\u793a\u4e86\u5e94\u7528\u7a0b\u5e8f\u3001\u788e\u7247\u548c\u8ff7\u4f60\u77ed\u4fe1\u7684\u6570\u91cf\uff0c\u8868\u660e\u8be5\u4f53\u7cfb\u7ed3\u6784\u80fd\u591f\u6839\u636e\u9700\u8981\u8fdb\u884c\u6269\u5c55\uff1a\nSM\u603b\u5171\u7ba1\u7406\u6570\u767e\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd11\u4ebf\u4e2a\u788e\u7247\uff0c\u8fd9\u4e9b\u788e\u7247\u6258\u7ba1\u5728100\u591a\u4e07\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6bcf\u79d2\u5904\u7406\u6570\u5341\u4ebf\u4e2a\u8bf7\u6c42\u3002SM\u6bcf\u6708\u4f18\u96c5\u5730\u5904\u7406\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u673a\u5668\u548c\u7f51\u7edc\u7ef4\u62a4\u4e8b\u4ef6\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u53ef\u7528\u6027\uff0cShard Manager\u663e\u793a\uff0c\u4e0e\u4e0d\u4f7f\u7528\u4f18\u96c5\u8fc1\u79fb\u7b56\u7565\u7684\u5e94\u7528\u7a0b\u5e8f\u76f8\u6bd4\uff0c\u4f7f\u7528\u4f18\u96c5\u8fc1\u79fb\u7684\u5e94\u7528\u7a0b\u5e8f\u663e\u793a\u7684\u5931\u8d25\u8bf7\u6c42\u5cf0\u503c\u66f4\u5c11\u3002\u672c\u6587\u8fd8\u5c55\u793a\u4e86\u788e\u7247\u5347\u7ea7\u5982\u4f55\u4e0d\u4f1a\u5bfc\u81f4\u5ba2\u6237\u7aef\u9519\u8bef\u7387\u7684\u589e\u52a0\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u8d1f\u8f7d\u5e73\u8861\uff0c\u672c\u6587\u5c55\u793a\u4e86\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u548c\u8bf7\u6c42\u901f\u7387\u4e0b\u8fc1\u79fb\u788e\u7247\u4ee5\u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\n\u6700\u540e\uff0c\u672c\u6587\u5c55\u793a\u4e86\u6539\u8fdb\u7684\u7ea6\u675f\u6c42\u89e3\u5668\u5982\u4f55\u4ee5\u6bd4\u57fa\u7ebf\u89e3\u7b97\u5668\u5feb\u5f97\u591a\u7684\u901f\u5ea6\u6c42\u89e3\u7ea6\u675f\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u539f\u59cb\u57fa\u7ebf\u89e3\u7b97\u5668\u65e0\u6cd5\u5b8c\u6210\u3002\nShard Manager\u8bba\u6587\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5927\u89c4\u6a21\u751f\u4ea7\u7cfb\u7edf\uff0c\u540c\u65f6\u5206\u4eab\u4e86\u6570\u636e\u70b9\uff0c\u8fd9\u4e9b\u6570\u636e\u70b9\u5bf9sharding\u6846\u67b6\u7684\u672a\u6765\u5b9e\u73b0\u8005\u5f88\u6709\u7528\u3002\u6211\u7279\u522b\u559c\u6b22\u8fd9\u7bc7\u8bba\u6587\u5728\u4f18\u5148\u8003\u8651\u5f00\u53d1\u65f6\u5982\u4f55\u8ba8\u8bba\u91c7\u7528\u548c\u5185\u90e8\u7528\u4f8b\u2014\u2014\u6211\u5728\u8bb8\u591aFacebook\u7814\u7a76\u8bba\u6587\u4e2d\u770b\u5230\u8fc7\u8fd9\u4e2a\u4e3b\u9898\uff0c\u5305\u62ecDelos\uff08\u6211\u4e4b\u524d\u5728\u8fd9\u91cc\u8ba8\u8bba\u8fc7\uff09\u548cRocksDB\u3002\u6211\u4e5f\u671f\u5f85\u7740\u5bf9\u5f00\u6e90\u5207\u5206\u6846\u67b6\u611f\u5174\u8da3\u7684\u4eba\u5c06\u6765\u7684\u5de5\u4f5c\uff0c\u6bd4\u5982@rakyll\u6982\u8ff0\u7684\u90a3\u4e2a\uff01", "note_en": "This is one of the last papers I\u2019m writing about from SOSP - I am trying out something new and publishing the queue of papers I plan on reading  here. These paper reviews can  be delivered weekly to your inbox, or you can subscribe to the  Atom feed. As always, feel free to reach out on  Twitter with feedback or suggestions!\n  This week\u2019s paper is  Shard Manager: A Generic Shard Management Framework for Geo-distributed Applications. The research describes a framework developed by Facebook for running  sharded applications at scale.\n Application sharding   In the context of Shard Manager.  assigns subsets of requests to instances of an application, allowing tasks to specialize - a group of tasks specialized for a subset of requests is called a  shard.\n This approach is particularly useful when tasks fetch state or other metadata. As an example, a speech recognition application may load machine learning models to process languages. Assigning requests for different languages to different shards means that an application\u2019s tasks don\u2019t need to download every model (which would be time and bandwidth-intensive).\n The Shard Manager paper not only discusses the technical aspects of running a sharding system at scale, but also includes data on usage and adoption inside Facebook. The paper\u2019s information about which features were critical for users inside Facebook could help future efforts prioritize    @rakyll has a great article about a potential implementation. .\n  The Shard Manager paper makes five main contributions: analysis of sharding usage at Facebook, design and implementation of the sharding system, a domain-specific language for defining sharding constraints, a constraint solver to place shards inside Facebook\u2019s data centers, analysis of sharding usage at Facebook, and an evaluation of the system in production.\n  The paper notes three main motivations for implementing Shard Manager:  increasing availability,  supporting geo-distributed applications, and  improved load balancing.\n To  increase availability, Shard Manager aims to smoothly handle planned data center maintenance   Facebook recently published a paper on their cluster manager,  Twine  - if a container stops while processing user requests, those requests will fail, impacting the availability of the application. For the vast majority of containers, Facebook\u2019s infrastructure knows in advance that the container is shutting down. Shard Manager aims to smoothly handle these shutdown events by coordinating with the container infrastructure, ensuring that to-be-shutdown containers stop receiving requests, and that requests that do make it to a shutting down container are forwarded to another active instance.\n  The second major motivator for Shard Manager is enabling  geo-distributed applications (an approach to independently deploying and scaling application shards). Before Shard Manager, services were primarily configured with  regional deployments - to operate at Facebook scale, applications need to run in groups of datacenters called  regions, with similar configurations in each region. For a sharded application, this meant reserving enough resources to serve every shard in every region, even if the shards weren\u2019t needed - this constraint led to wasted data center resources. Furthermore,  regional deployments were unwieldy in the event of data center or region maintenance, as other regions might not have the spare capacity to store additional copies of every shard.\n  Improved load balancing is the third main motivation for Shard Manager.  Geo-distributed applications can flexibly add and shift shards independently, simplifying the process of shifting load - rather than needing to make a copy of every shard, the system can add or move specific shards. At the same time, deciding when and how to place shards is a difficult optimization problem that Shard Manager needed to address.\n   A critical piece of a sharding framework is assigning requests to shards. Shard Manager uses client-provided keys, called  app-keys, to perform this mapping - continuing with the language server example, requests for English are sent to X shard, while requests for German and Mandarin might be sent to Y and Z shards.\n The paper also discusses another approach, called  UUID-keys, that map requests to shards based on  hashes of keys provided by clients.\n There are pros and cons to using  app-keys versus  UUID-keys, mostly based around data-locality - in the context of shard manager, data-locality means that similar data, potentially from related users or regions of the world, is placed on the same or nearby shards. The paper argues that  app-keys provide data-locality, while  UUID-keys do not.\n Data locality would enable features like sequentially scanning multiple shards when performing a query. At the same-time, data locality could increase the potential for hot-spots, where reads of similar data all go to the same shard. Previous approaches to sharding frameworks, like Slicer   See the paper on Slicer  here. , mention adding support for an  app-key like approach to preserve data locality, but mention that, \u201cmany Google applications are already structured around single-key operations rather than scans, encouraged by the behavior of existing storage systems.\u201d\n  There are three main components of the Shard Manager architecture:  application clients/servers, a  control plane    Control plane is used because it is the layer that performs management and metadata storage operations. , and the  Cluster Manager.\n  Application servers are the actual binaries that operate shards and receive requests from clients. Each server has a library that allows it to manage shard state (like reporting server health), register/deregister the shard from receiving requests, and hook into shard management events. When a shard performs management operations, it writes state to Zookeeper   It would be interesting to hear if Shard Manager considered adopting  Delos, a system for storing control plane data discussed in a previous paper review. , a persistent data store.\n To call an  application server, an  application client uses a library (called a  Service Router). The client\u2019s  Service Router routes requests based on an  app-key (which defines the mapping from request to shard), selecting an available shard based on state the library consumes from a service discovery   See this article on  service discovery for more background.  system. The  Service Router periodically polls in the background to receive updates as shards are added, removed, and scaled.\n  Orchestrator: an intermediary component that receives health and load information from application servers. It shares this data with other members of the control plane (like the components that schedule and scale shards), and propagates it to the  Service Discovery System so that application clients have an updated view of the system.\n  TaskController: commmunicates with the  Cluster Manager to request more resources (when scaling shards up) or to receive system events, like pending maintenance (which the  Task Controller uses to shutdown shards gracefully). The  TaskController propagates this information to the  Orchestrator so that it can fulfill the job of shutting down application servers and shards gracefully.\n Lower in the infrastructure stack is the  Cluster Manager   For more information on the Cluster Manager, see the  Twine paper. , which communicates with the  TaskController above to ensure that planned events, like \u201cupcoming hardware maintenance events, kernel updates, and container starts/stops/moves\u201d are handled gracefully, increasing application availability.\n  The paper discusses how Shard Manager features aim to  increase application availability and  supporting geo-distributed applications, while  scaling the system.\n  Shard Manager implements two main techniques   The paper also mentions shard distribution across fault domains (like multiple regions and data centers) as increasing availability, but I defer discussion of shard distribution to placement and load balancing.  to increase application availability:  coordinating container shutdown with the Cluster Manager, and  migrating shard traffic.\n Coordinating container shutdown is critical to increasing availability because it ensures requests are not sent to a container that might shutdown while responding. Shard Manager must also ensure that planned maintenance events don\u2019t take too much capacity offline at once (which would leave the application in a state where it is unable to respond to all incoming requests). To prevent both of these situations, Shard Manager\u2019s  TaskController communicates with the  Cluster Manager, removing imminently decommissioning shards from service discovery and launching new shards as others prepare to go offline. If it is not possible to shift shards in anticipation of maintenance, the the  Task Controller can warn the  Cluster Manager that the proposed operations would put an application in an unsafe state.\n Shard Manager also supports  migrating shard traffic by implementing a graceful handover procedure. This process forwards in-progress requests from the old to new shard, ensuring that as few as possible are dropped on the floor. The system\u2019s traffic migration also aims to handoff any new requests from application clients, who may continue to send requests to the old shard - the service discovery system is eventually consistent   See  this blog post from Amazon\u2019s Werner Vogels on eventual consistency. , so clients may temporarily use out-of-date routing state.\n   Geo-distributed applications allow shards to be deployed independently to Facebook\u2019s infrastructure around the world. While the technique provides several benefits, like independent scaling of individual shards, it also poses its own challenges - choosing how to place shards and when to move them is a difficult optimization problem. To solve the optimization problems associated with placement and load balancing, Shard Manager uses a  constraint solver, configurable with a dedicated language for expressing  constraints.\n Shard Manager originally used a heuristic-based implementation to make load balancing decisions, which proved both complicated and difficult to scale. As a result, the system migrated to a constraint solver   The paper mentions a number of optimization techniques, including  mixed integer programming (MIP), genetic algorithms, and  simulated annealing. I\u2019m far from an expert in this type of research, so this could be a potential topic for a future paper review. .\n The inputs to the solver are  constraints and  goals - example constraints are system stability or server capacity, while example goals are load balancing across regions (to increase resource utilization) or spreading replicas across multiple data centers (to increase availability in the event of a problem with a specific data center).\n  An application configures its placement and load balancing using a domain-specific language   There is some very interesting and related research from VMWare on programmatically configuring cluster managers  Building Scalable and Flexible Cluster Managers Using Declarative Programming.  that translates into a form that a constraint solver can use. Even though Facebook has a high-powered constraint solver for data center problems   The paper links to another Facebook paper from SOSP on  RAS: Continuously Optimized Region-Wide Datacenter Resource Allocation. , Shard Manager made further optimizations   The paper mentions  Local Search, which \u201chas grown from a simple heuristic idea into a mature field of research in combinatorial optimization that is attracting ever-increasing attention.\u201d  to scale for its the high request rate.\n   Partitions: Each application is divided into many partitions, \u201cwhere each partition typically comprises thousands of servers and hundreds of thousands of shard replicas.\u201d\n mini-Shard Managers (mini-SM), which are essentially copies of an individual shard manager  control plane (mentioned in a previous section). Each  mini-SM handles a subset of servers and shards.\n  The scale-out   \u201cScale-out\u201d in this context means adding more  mini-Shard Managers to cover more machines, as trying to make a single Shard Manager cover many machines would be difficult  version of Shard Manager also adds several new components including a  frontend that serves as a balancer for communication with external systems (like the  Cluster Manager and tooling),  Application Managers that handle coordination of an application\u2019s partitions over multiple mini-SMs, and a  partition registry that  Application Managers communicate with to get assignments of application partitions to mini-SMs.\n  Shard Manager aims to provide support for as many sharded applications inside Facebook as possible, and provides data points what was critical to driving adoption. The paper argues for the importance of features in two areas that align with project\u2019s motivation:  increasing availability and  geo-distributed deployments.\n Many applications that migrated to Shard Manager take advantage of its  availability features, in particular around handling planned events - \u201c70% of SM applications choose to gracefully drain shards before a container restart.\u201d\n  The paper also notes similarly high-adoption of  geo-distributed applications - 67% of sharded applications using Shard Manager use  geo-distributed deployments.\n   The paper evaluates Shard Manager using three criteria: whether the system succeeds at scale, whether it is able to achieve the original goals of increasing application availability and supporting geo-distributed applications, and whether Shard Manager can adequately solving the optimization problems to load-balance.\n To evaluate scale, Shard Manager shows the number of applications, shards, and mini-SMs, demonstrating that the architecture is able to scale out as needed:\n In total, SM manages hundreds of applications\u2019 nearly 100M shards hosted on over one million servers, and those applications process billions of requests per second. SM gracefully handles millions of machine and network maintenance events per month.\n  To evaluate availability, Shard Manager shows that applications using graceful migration show fewer spikes of failed requests relative to those that use no graceful migration strategy. The paper also shows how shard upgrades do not cause an increase in client error rate.\n   To evaluate load balancing, the paper shows migrating shards to reduce network latency and load balancing over a changing environment and request rate.\n  Lastly, the paper shows how the improved constraint solver is able to solve constraints at a much faster rate than the baseline solver - in fact, the original baseline solver isn\u2019t able to complete.\n   The  Shard Manager paper details an impressive at scale production system, while sharing data points that will be useful to future implementers of sharding frameworks. I particuarly enjoyed how the paper discussed adoption and internal usecases when prioritizing development - I\u2019ve seen this theme in a number of Facebook research papers, including Delos (which I previously covered  here) and  RocksDB. I\u2019m also looking forward to future work from folks interested in an open source sharding framework, like the one  @rakyll outlined!", "posttime": "2022-02-20 12:13:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,manager,shard,\u5e94\u7528\u7a0b\u5e8f", "title": "Shard manager\uff1a\u5730\u7406\u5206\u5e03\u5e94\u7528\u7a0b\u5e8f\u7684\u788e\u7247\u7ba1\u7406\u6846\u67b6", "title_en": "Shard manager: A shard management framework for geo-distributed applications", "transed": 1, "url": "https://www.micahlerner.com/2022/01/08/shard-manager-a-generic-shard-management-framework-for-geo-distributed-applications.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "manager", "shard", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u6709\u5404\u79cd\u5f62\u72b6\u548c\u5927\u5c0f\u3002\u660e\u663e\u7684\u5171\u6027\u662f\uff1a\uff1b\u5b83\u4eec\u90fd\u4f7f\u7528\u4e8b\u4ef6\u6765\u4f20\u9012\u4fe1\u606f\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u6709\u591a\u79cd\u5f62\u5f0f\u548c\u5927\u5c0f\uff0c\u786e\u5b9a\u4e8b\u4ef6\u7684\u5185\u5bb9\u5bf9\u7cfb\u7edf\u7684\u8bbe\u8ba1\u6709\u7740\u5de8\u5927\u7684\u5f71\u54cd\u3002\n\u5728\u8fd9\u7bc7\u5e16\u5b50\u91cc\u6211&#39\uff1bI\u2019\u6211\u60f3\u56de\u987e\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6d3b\u52a8\u3002\u6211\u5e0c\u671b\u6f84\u6e05\u8fd9\u4e9b\u7c7b\u578b\u5c06\u4f7f\u60a8\u80fd\u591f\u66f4\u597d\u5730\u8ba8\u8bba\u4e8b\u4ef6\u9a71\u52a8\u7684\u4f53\u7cfb\u7ed3\u6784\u548c\u96c6\u6210\u3002\n\u5f53\u6211\u4e0e\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u8ba8\u8bba\u4e8b\u4ef6\u65f6\uff0c\u6211\u4f1a\u533a\u5206\u4e09\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u5176\u72ec\u7279\u7684\u7279\u70b9\u3001\u4f18\u52bf\u548c\u52a3\u52bf\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u4e8b\u4ef6\u90fd\u4e0d\u4e00\u5b9a\u6bd4\u53e6\u4e00\u79cd\u66f4\u597d\uff0c\u4f46\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u7279\u5b9a\u7c7b\u578b\u7684\u4e8b\u4ef6\u53ef\u80fd\u66f4\u9002\u5408\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u9010\u4e00\u68c0\u67e5\u4e00\u4e0b\uff0c\u770b\u770b\u5b83\u4eec\u662f\u4ec0\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u6709\u7528\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u5bf9\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u611f\u5174\u8da3\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u5c06\u662f\u6700\u719f\u6089\u7684\u6d3b\u52a8\u7c7b\u578b\u3002\u9886\u57df\u4e8b\u4ef6\u662f\u5386\u53f2\u7684\u8bb0\u5f55\uff0c\u6355\u6349\u91cd\u8981\u65f6\u523b\u7684\u610f\u56fe\u548c\u4efb\u4f55\u76f8\u5173\u80cc\u666f\u3002\u9886\u57df\u6d3b\u52a8\u5173\u6ce8&#34\uff1b\u57df\u540d&#34\uff1b\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u4e13\u6ce8\u4e8e\u4e0e\u4e1a\u52a1\u76f8\u5173\u7684\u4e8b\u60c5\u3002\u56e0\u4e3a\u5b83\u4eec\u8bb0\u5f55\u5386\u53f2\uff0c\u6240\u4ee5\u7528\u8fc7\u53bb\u65f6\u6001\u8868\u8fbe\u3002\n\u57df\u4e8b\u4ef6\u7684\u547d\u540d\u65b9\u5f0f\u5e94\u660e\u786e\u8868\u8fbe\u5176\u610f\u56fe\u3002\u5efa\u8bae\u4f7f\u7528\u4eba\u7c7b\u8bed\u8a00\u6765\u547d\u540d\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u5c3d\u91cf\u907f\u514d&#34\uff1b\u54d4\u54d4\u54d4&#34\uff1b\u8bed\u8a00\u4e0d\u8981\u5c06\u4e8b\u4ef6\u547d\u540d\u4e3aOrderStateChanged\u6216OrderEvent\uff0c\u800c\u662f\u4f7f\u7528OrderWasShipped\u4e4b\u7c7b\u7684\u540d\u79f0\u3002\n\u4e0e\u5176\u4ed6\u4e8b\u4ef6\u7c7b\u578b\u4e0d\u540c\uff0c\u57df\u4e8b\u4ef6\u975e\u5e38\u9002\u5408\u6355\u83b7\u610f\u56fe\u3002\u56e0\u4e3a\u57df\u4e8b\u4ef6\u53ea\u6355\u6349\u91cd\u8981\u65f6\u523b\u7684\u76f8\u5173\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u5b83\u4eec\u5bf9\u4e8e\u6355\u6349\u53d8\u5316\u4e5f\u5f88\u6709\u7528\u3002\u8fd9\u8ba9\u6d3b\u52a8\u6d88\u8d39\u8005\u5bf9\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u4e86\u6df1\u523b\u7684\u4e86\u89e3\u3002\u4e8b\u4ef6\u6e90\u7cfb\u7edf\u66f4\u8fdb\u4e00\u6b65\uff0c\u4f7f\u57df\u4e8b\u4ef6\u6210\u4e3a\u8f6f\u4ef6\u6a21\u578b\u7684\u57fa\u77f3\u3002\n\u57df\u4e8b\u4ef6\u7279\u522b\u9002\u5408\u7528\u4e8e\u521b\u5efa\u8bfb\u53d6\u6a21\u578b\u3002\u5728\u9605\u8bfb\u6848\u4f8b\u9700\u6c42\u4e0e\u51b3\u7b56\u6709\u7528\u7684\u6570\u636e\u6a21\u578b\u975e\u5e38\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u3002\u65e0\u8bba\u662f\u5728\u521b\u5efa\u8bfb\u53d6\u6a21\u578b\u8fd8\u662f\u5728\u5206\u6790\u6570\u636e\u6a21\u578b\u4e2d\uff0c\u4ee5\u66f4\u6539\u548c\u610f\u56fe\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\u90fd\u975e\u5e38\u9002\u5408\u805a\u5408\u3002\n\u7c7borderwashipped{public function _\u6784\u9020\uff08private OrderId$OrderId\uff0cprivate MomentOfSchipment$shippedAt\uff0cprivate ShipmentAddresss$shipmentAddress\uff0c\uff09\uff1b\u516c\u5171\u51fd\u6570OrderId\uff08\uff09\uff1aOrderId{return$this-&gt\uff1bOrderId\uff1b}\u516c\u5171\u51fd\u6570shippedAt\uff08\uff09\uff1aMomentofChipment{return$this-&gt\uff1bskippedAt\uff1b}\u516c\u5171\u51fd\u6570shipmentAddress\uff08\uff09\uff1aShipmentAddresss{return$this-&gt\uff1bshipmentAddress\uff1b}\n\u57df\u4e8b\u4ef6\u5bf9\u4e8e\u6355\u6349\u610f\u56fe\u548c&#34\uff1b\u6539\u53d8&#34\uff1b\u3002\u5b83\u4eec\u5141\u8bb8\u60a8\u6784\u5efa\u529f\u80fd\u5f3a\u5927\u7684\u8bfb\u53d6\u6a21\u578b\uff0c\u6bd4\u539f\u59cb\u6570\u636e\u6a21\u578b\u4e0a\u7684\u590d\u6742\u67e5\u8be2\u5177\u6709\u66f4\u597d\u7684\u6269\u5c55\u6027\u3002\u9886\u57df\u610f\u56fe\u5bf9\u4e8e\u521b\u5efa\u5206\u6790\u6a21\u578b\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u4e1a\u52a1\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u6df1\u523b\u89c1\u89e3\u3002\n\u57df\u4e8b\u4ef6\u66b4\u9732\u57df\u5185\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6d88\u8d39\u8005\u4f9d\u8d56\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4ed6\u4eec\u5c31\u4f1a\u4e0e\u4e4b\u8026\u5408\u3002\u5982\u679c\u4f7f\u7528\u9886\u57df\u4e8b\u4ef6\u6765\u521b\u5efa\u51b3\u7b56\u6a21\u578b\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u8026\u5408\u53ef\u80fd\u4f1a\u5bf9\u5f00\u53d1\u901f\u5ea6\u9020\u6210\u538b\u529b\u3002\u8026\u5408\u589e\u52a0\u4e86\u53d8\u5316\u7684\u6210\u672c\uff0c\u56e0\u6b64\u5b83&#39\uff1b\u77e5\u9053\u4f60\u5411\u8c01\u66b4\u9732\u4e86\u4ec0\u4e48\u603b\u662f\u597d\u7684\u3002\u4f5c\u4e3a\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5b9e\u8df5\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u9886\u57df\u4e8b\u4ef6\u548c34\uff1b\u79c1\u4eba&#34\uff1b\uff0c\u53ea\u7528\u4e8e\u5185\u90e8\u6d88\u8d39\u3002\u53ea\u6709\u901a\u8fc7\u6545\u610f\u66dd\u5149\uff0c\u6d88\u8d39\u8005\u624d\u80fd\u8bbf\u95ee\u4e8b\u4ef6\uff0c\u5c31\u50cf\u4f7f\u7528API\u800c\u4e0d\u662f\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\u4e00\u6837\u3002\n\u89e6\u53d1\u5668\u6216\u4fe1\u53f7\u4e8b\u4ef6\u662f\u6700\u5c0f\u7684\u4e8b\u4ef6\u3002\u6b64\u4e8b\u4ef6\u901a\u5e38\u53ea\u5305\u542b\u5f15\u7528\u805a\u5408\u6216\u5b9e\u4f53\u7684ID\uff0c\u53ef\u80fd\u8fd8\u5305\u62ec\u65f6\u95f4\u6233\u3002\u6b63\u5982trigger\u8fd9\u4e2a\u540d\u5b57\u6240\u6697\u793a\u7684\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u88ab\u7528\u6765\u89e6\u53d1\u6d88\u8d39\u7aef\u7684\u53cd\u5e94\u3002\u89e6\u53d1\u5668\u6700\u5e38\u7528\u4e8e\u5c06\u66f4\u6539\u901a\u77e5\u5176\u4ed6\u4e1a\u52a1\u6d41\u7a0b\u3002\u5982\u679c\u4f60&#39\uff1b\u91cd\u65b0\u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u770b\u7740\u4f60\uff0cGDPR\uff09\u89e6\u53d1\u5668\u7684\u4f7f\u7528\u6709\u52a9\u4e8e\u9632\u6b62\u4e8b\u4ef6\u57fa\u7840\u8bbe\u65bd\u66b4\u9732\u4e8e\u5177\u6709\u6311\u6218\u6027\u7684\u9700\u6c42\u3002\n\u7c7borderwashipped{public function__\u6784\u9020\uff08private OrderId$OrderId\uff09\uff1bpublic function OrderId\uff08\uff09\uff1aOrderId{return$this-&gt\uff1bOrderId\uff1b}}\n\u5f53\u57df\u4e8b\u4ef6\u53ef\u80fd\u5305\u542b\u654f\u611f\u6570\u636e\u65f6\uff0c\u89e6\u53d1\u5668\u975e\u5e38\u6709\u7528\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u751f\u4ea7\u8005\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\uff0c\u5e76\u671f\u671b\u6d88\u8d39\u8005\u4f7f\u7528\u4e00\u4e2a\u5b89\u5168\u7684API\u6765\u83b7\u53d6\u76f8\u5e94\u7684ID\u3002\u89e6\u53d1\u5668\u4e0d\u5bb9\u6613\u5bfc\u81f4\u4fe1\u606f\u7ea7\u8026\u5408\uff0c\u4ec5\u4ec5\u56e0\u4e3a\u5b83\u4eec\u4e0d&#39\uff1b\u4e0d\u8981\u88c5\u4efb\u4f55\u4e1c\u897f\u3002\n\u7531\u4e8e\u89e6\u53d1\u5668\u4e0d\u5305\u542b\u4efb\u4f55\u4fe1\u606f\uff0c\u6d88\u8d39\u8005\u603b\u662f\u4f9d\u8d56\u4e8eAPI\u3002\u5f53\u8bb8\u591a\u4f7f\u7528\u8005\u4f7f\u7528\u8bb8\u591a\u4e8b\u4ef6\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u7cfb\u7edf\u5e26\u6765\u4e00\u4e9b\u610f\u5916\u8d1f\u8f7d\u3002\u4fe1\u606f\u7684\u7f3a\u4e4f\u4e5f\u9650\u5236\u4e86\u805a\u5408\u6570\u636e\u7684\u80fd\u529b\u3002\n\u7531\u4e8e\u4e8b\u4ef6\u662f\u5f02\u6b65\u5904\u7406\u7684\uff0c\u56e0\u6b64\u4eceAPI\u68c0\u7d22\u7684\u6570\u636e\u53ef\u80fd\u5904\u4e8e\u4f7f\u7528\u8005\u671f\u671b\u7684\u4e0d\u540c\u72b6\u6001\u3002\u4f7f\u7528\u8005\u5fc5\u987b\u59cb\u7ec8\u68c0\u67e5\u4eceAPI\u68c0\u7d22\u7684\u8d44\u6e90\u662f\u5426\u7b26\u5408\u9884\u671f\uff0c\u5e76\u51c6\u5907\u597d\u5904\u7406\u8d44\u6e90\u53ef\u80fd\u5904\u4e8e\u7684\u4efb\u4f55\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba2\u5355\u5df2\u53d1\u8d27\uff0c\u4f46\u5546\u6237\u7acb\u5373\u53d6\u6d88\u53d1\u8d27\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u4f1a\u68c0\u7d22\u5230\u4e00\u4e2a\u6ca1\u6709&#39\uff1b\u4e0e\u4e8b\u4ef6\u540d\u79f0\u663e\u793a\u7684\u72b6\u6001\u4e0d\u5339\u914d\u3002\u5f53\u4e8b\u4ef6\u5904\u7406\u5ef6\u8fdf\u65f6\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u7ed3\u679c\u3002\n\u6700\u540e\u4e00\u4e2a\u539f\u578b\u662f&#34\uff1b\u80a5\u80d6&#34\u5c81\uff1b\u4e8b\u4ef6\u6211\u4e2a\u4eba\u66f4\u559c\u6b22\u672f\u8bedRESTful event\uff0c\u56e0\u4e3a\u5b83\u66f4\u597d\u5730\u63cf\u8ff0\u4e86\u8d1f\u8f7d\u4e2d\u7684\u5185\u5bb9\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u5305\u542b\u4eceRESTful API\u68c0\u7d22\u7684\u5b8c\u6574\u8d44\u6e90\u8868\u793a\u3002\u8fd9\u662f\u4e00\u6b21\u6781\u597d\u7684\u96c6\u6210\u6d3b\u52a8\uff0c\u5bf9\u5916\u90e8\u6d88\u8d39\u8005\u6700\u4e3a\u6709\u7528\u3002\n\u4e0e\u89e6\u53d1\u5668\u76f8\u6bd4\uff0cRESTful\u4e8b\u4ef6\u4f1a\u963b\u6b62\u4f7f\u7528\u8005\u5f80\u8fd4\u4e8eAPI\u3002\u5982\u679c\u60a8\u5c06\u5176\u4e0e\u57df\u4e8b\u4ef6\u8fdb\u884c\u6bd4\u8f83\uff0c\u5b83\u53ef\u4ee5\u9632\u6b62\u4f7f\u7528\u8005\u5fc5\u987b\u7ec4\u5408\u591a\u4e2a\u4e8b\u4ef6\u624d\u80fd\u83b7\u5f97\u5b8c\u6574\u4fe1\u606f\u3002\n\u7c7borderwashipped{public function _\u6784\u9020\uff08private OrderId$OrderId\uff0cprivate OrderLines$OrderLines\uff0cprivate DiscountCodes$DiscountCodes\uff0cprivate OrderAmount$OrderAmount\uff0cprivate momentofChipment$shippedAt\uff0cprivate ShipmentAddresss$shipmentAddress\uff0c\uff09\uff1b\u516c\u5171\u51fd\u6570OrderId\uff08\uff09\uff1aOrderId{return$this-&gt\uff1bOrderId\uff1b}\u516c\u5171\u51fd\u6570orderLines\uff08\uff09\uff1aorderLines{return$this-&gt\uff1borderLines\uff1b}\u516c\u5171\u51fd\u6570discountCodes\uff08\uff09\uff1adiscountCodes{return$this-&gt\uff1bdiscountCodes\uff1b}\u516c\u5171\u51fd\u6570orderAmount\uff08\uff09\uff1aorderAmount{return$this-&gt\uff1borderAmount\uff1b}\u516c\u5171\u51fd\u6570shippedAt\uff08\uff09\uff1aMomentofChipment{return$this-&gt\uff1bskippedAt\uff1b}\u516c\u5171\u51fd\u6570shipmentAddress\uff08\uff09\uff1aShipmentAddresss{return$this-&gt\uff1bshipmentAddress\uff1b}\nRESTful\u6d3b\u52a8\u6709\u52a9\u4e8e\u5c06\u72b6\u6001\u63a8\u5411\u6d88\u8d39\u8005\u3002\u5728\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u8d39\u8005\u5bf9\u8d44\u6e90\u4e86\u5982\u6307\u638c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8d44\u6e90\uff0c\u53ea\u9700\u8981\u5c06\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u5907\u4efd\u5230\u6700\u65b0\u72b6\u6001\uff0c\u8fd9\u5bf9\u707e\u96be\u6062\u590d\u975e\u5e38\u6709\u7528\u3002\u5728\u53e6\u4e00\u4e2a\u670d\u52a1\u4f9d\u8d56\u4e8e\u60a8\u7684\u670d\u52a1\u7684\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528RESTful\u4e8b\u4ef6\u662f\u5c06\u72b6\u6001\u63a8\u9001\u5230\u90a3\u91cc\u7684\u597d\u65b9\u6cd5\u3002\u5728\u6700\u7ec8\u4e00\u81f4\u6027\u53ef\u4ee5\u63a5\u53d7\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u505a\u5c06\u6d88\u9664\u5bf9\u670d\u52a1\u7684\u76f4\u63a5\u4f9d\u8d56\u3002\n\u4ee5\u6211\u7684\u7ecf\u9a8c\uff0cRESTful\u4e8b\u4ef6\u53ea\u4f5c\u4e3a&#34\uff1b\u5ba4\u5916&#34\uff1b\u6d88\u8d39\u8005\u3002\u5b83\u4eec\u5bf9\u4e8e\u5185\u90e8\u5efa\u6a21\u6ca1\u6709\u7528\u5904\u3002\u5b83\u4eec\u4f53\u79ef\u5927\uff0c\u66f4\u533f\u540d\uff0c\u4f20\u8fbe\u7684\u610f\u56fe\u4e5f\u66f4\u5c11\uff0c\u56e0\u6b64\u4e0d\u592a\u9002\u5408\u5185\u90e8\u5efa\u6a21\u3002RESTful\u4e8b\u4ef6\u901a\u5e38\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u53cd\u8150\u8d25\u5c42\uff0c\u4ee5\u5c06\u5176\u4ed6\u7c7b\u578b\u7684\u4e8b\u4ef6\u8f6c\u6362\u4e3aRESTful\u4e8b\u4ef6\uff0c\u5373&#34\uff1b\u989d\u5916&#34\uff1b\u5de5\u4f5c\n\u5728\u6280\u672f\u8ba8\u8bba\u4e2d\uff0c\u5b83&#39\uff1b\u8fd9\u5f88\u5bb9\u6613\u8ba9\u4eba\u8df3\u8f6c\u5230\u89e3\u51b3\u65b9\u6848\u4e0a\u6765\u3002\u53ea\u9700\u6dfb\u52a0\u5b57\u6bb5\uff0c\u53ea\u9700\u5c06\u6b64\u5185\u90e8\u4e8b\u4ef6\u516c\u5f00\u7ed9\u5916\u90e8\u4f7f\u7528\u8005\uff0c\u89e3\u51b3\u95ee\u9898\u3002\u6211&#39\uff1bd\u5e0c\u671b\u901a\u8fc7\u786e\u5b9a\u51e0\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u4fe1\u606f\u7eb3\u5165\u4f60\u7684\u8ba8\u8bba\u4e2d&#39\uff1b\u6211\u4eec\u6b63\u5728\u5403\u3002\u8bd5\u7740\u786e\u5b9a\u8ba1\u5212\u4e2d\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u5b83\u4eec\u6709\u54ea\u4e9b\u7279\u5f81\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u7279\u5f81\u5982\u4f55\u5f71\u54cd\u4f60\u5e94\u7528\u5b83\u4eec\u7684\u60c5\u51b5\u3002\u516c\u5f00\u57df\u4e8b\u4ef6\uff1f\u6ce8\u610f\u4fe1\u606f\u7ea7\u8026\u5408\u3002\u56e0\u4e3a\u6d88\u8d39\u8005\u9700\u8981\u800c\u5411\u6d3b\u52a8\u4e2d\u6dfb\u52a0\u8d8a\u6765\u8d8a\u591a\u7684\u4fe1\u606f\uff1f\u4e5f\u8bb8\u6362\u6210\u4e00\u4e2a\u5b89\u9759\u7684\u6d3b\u52a8\u3002\u6700\u540e\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c\u5728\u6b63\u786e\u7684\u73af\u5883\u4e2d\u5e94\u7528\u4e0d\u540c\u7684\u6c9f\u901a\u65b9\u5f0f\uff0c\u6548\u679c\u6700\u597d\u3002\u5b83&#39\uff1b\u8fd9\u53d6\u51b3\u4e8e\u4f60\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u5e76\u505a\u51fa\u6b63\u786e\u7684\u9009\u62e9\u3002\n\u57fa\u4e8e\u4e8b\u4ef6\u548c\u6d88\u606f\u7684\u8bbe\u8ba1\u7684\u4f18\u70b9\u4e4b\u4e00\u662f\u7ffb\u8bd1\u7684\u53ef\u80fd\u6027\u3002\u7ffb\u8bd1\u5c42\u901a\u5e38\u88ab\u79f0\u4e3a\u53cd\u8150\u8d25\u5c42\uff0c\u6709\u52a9\u4e8e\u5728\u4fe1\u606f\u5c42\u9762\u4e0a\u5b9e\u73b0\u89e3\u8026\u3002ACL\u8fc7\u6ee4\u548c\u8f6c\u6362\u4fe1\u606f\u3002\u8fd9\u53ef\u4ee5\u5728\u96c6\u6210\u7684\u4efb\u4f55\u4e00\u65b9\u3001\u751f\u4ea7\u8005\u6216\u6d88\u8d39\u8005\u8fdb\u884c\u3002ACL\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u4e2d\u7ee7\uff0c\u5373\u6d88\u8017\u548c\u8f6c\u53d1\uff08\u4ea7\u751f\uff09\u6d88\u606f\u7684\u903b\u8f91\u7247\u6bb5\u3002EventSauce\u6700\u8fd1\u9644\u5e26\u4e86\u4e00\u4e2a\u5168\u9762\u7684\u5de5\u5177\u96c6\uff0c\u7528\u4e8e\u6784\u5efa\u81ea\u5df1\u7684ACL\u3002\u5728\u6587\u6863\u4e2d\u9605\u8bfb\u6240\u6709\u5173\u4e8e\u5b83\u4eec\u7684\u4fe1\u606f\u3002\n\u6211\u5e0c\u671b\u8fd9\u5bf9\u4f60\u6709\u7528\u3002\u5982\u679c\u4f60\u6709\u4efb\u4f55\u95ee\u9898\u6216\u60f3\u8ddf\u8fdb\u5e16\u5b50\u4e2d\u7a81\u51fa\u663e\u793a\u7684\u67d0\u4e2a\u9879\u76ee\uff0c\u8bf7\u5728\u63a8\u7279\u4e0a\u5411\u6211\u63d0\u95ee\u3002", "note_en": "Event-driven systems come in all sorts of shapes and sizes. The obvious commonality is; they all use events to communicate information. These events come in many shapes and sizes, and determining what goes into an event has an immense impact on the design of your system.\n In this post I&#39;d like to go over three different types of events. I hope clarifying these types will allow you to have better discussions about event-driven architectures and integrations.\n  When I discuss events with my fellow developers I distinguish between three types of events. Each type has its own unique characteristics, strengths, and weaknesses. None of these types of events is necessarily better than the other, but given a situation, a particular type may be the better fit.\n   Let&#39;s go over each of them to see what they are, and when they are useful.\n  For anybody who has an interest in Domain-Driven Design, this will be the most familiar type of event. A domain events is a record of history, capturing the intent and any relevant context about an important moment in time. Domain events focus on the &#34;domain&#34;, which means they focus on things that are relevant to the business. Because they record history, they are expressed in the past tense.\n Domain events are named in a way that the intent is clearly expressed. It is advised to use human language to name these events, try to avoid &#34;beep boop&#34; language. Instead of naming the event  OrderStateChanged or  OrderEvent, use something like  OrderWasShipped.\n Unlike the other event types, domain events are great for capturing intent. Because domain events only capture the relevant context of an important moment, they are also great for capturing change. This gives event consumers great insights into what is going on. Event-sourced systems take this a step further, making domain events are the corner-stone of the software model.\n Domain events are particularly well suited to use in the creation of read models. In situations where the read-case requirements are very different from the data model useful to make decisions. The change and intent centric representation is great for aggregation, both in the creation of read models and in analytical data models.\n  class OrderWasShipped{ public function __construct( private OrderId $orderId, private MomentOfSchipment $shippedAt, private ShipmentAddresss $shipmentAddress, ); public function orderId(): OrderId { \treturn $this-&gt;orderId; } public function shippedAt(): MomentOfSchipment { \treturn $this-&gt;skippedAt; } public function shipmentAddress(): ShipmentAddresss { \treturn $this-&gt;shipmentAddress; }}\n  Domain events are great for capturing intent and &#34;change&#34;. They allow you to build powerful read models that scale much better than complex queries on the original data model. Domain intents are powerful for creating analytical models, which can provide great insights into what is going on in the business.\n  Domain events expose what goes on inside a domain. If a consumer relies on this information, they are coupled to it. If domain events are used to create decision models, coupling on these events can put a strain on the development velocity. Coupling increases the cost of change, so it&#39;s always good to know what you expose and to whom. As a default practice, consider every domain event &#34;private&#34;, only meant for internal consumption. Only through deliberate exposure consumers get access to the events, similar to how APIs are used instead of direct database access.\n  The  trigger or  signal event is a the tiniest event there is. This event usually consists of only an ID to reference an aggregate or entity, and maybe a timestamp. As the name  trigger suggests, these events are used to trigger a reaction on the consuming side. Triggers are most often used to notify  other business processes of a change. In cases where you&#39;re storing sensitive data (looking at you, GDPR) the use of triggers can help prevent exposing event infrastructure to challenging requirements.\n  class OrderWasShipped{ public function __construct( private OrderId $orderId ); public function orderId(): OrderId { \treturn $this-&gt;orderId; }}\n  Trigger are useful when a domain event could contain sensitive data. In these cases, the producer sends out a signal and expects the consumer to use a secure API to fetch the corresponding ID. Triggers do not easily cause information-level coupling, simply because they don&#39;t contain any.\n  Since triggers do not contain any information, consumers are always reliant on an API. When many consumers consume many events, this can put some unexpected load on your systems. The absence of information also limits the ability to aggregate data.\n Because events are processed asynchronously, the data retrieved by from the API might be in a different state that the consumer expects. A consumer must always check if the resource retrieves from the API is what they expect and be prepared to handle any of the possible states a resource may be in. For example, if an order is shipped, but the merchant immediately cancels the shipment, the consumer may retrieve a shipment resource that doesn&#39;t match the status the event name suggests. When delayed processing of events occurs, this can create unexpected results.\n  The last archetype is the &#34;fat&#34; event. I personally prefer the term RESTful event, because it describes better what is in the payload. This type of event contains the full resource representation as you would retrieve from a RESTful API. It is an excellent integration event and is most useful for  outside consumers.\n When compared to triggers, RESTful events prevent consumers from making a roundtrip to the API. If you compare it the domain event, it prevents a consumer \u00a0having to combine multiple events to get the full picture.\n  class OrderWasShipped{ public function __construct( private OrderId $orderId, private OrderLines $orderLines, private DiscountCodes $discountCodes, private OrderAmount $orderAmount, private MomentOfSchipment $shippedAt, private ShipmentAddresss $shipmentAddress, ); public function orderId(): OrderId { \treturn $this-&gt;orderId; } public function orderLines(): OrderLines { \treturn $this-&gt;orderLines; } public function discountCodes(): DiscountCodes { \treturn $this-&gt;discountCodes; } public function orderAmount(): OrderAmount { \treturn $this-&gt;orderAmount; } public function shippedAt(): MomentOfSchipment { \treturn $this-&gt;skippedAt; } public function shipmentAddress(): ShipmentAddresss { \treturn $this-&gt;shipmentAddress; }}\n  RESTful events are great for  pushing state out to consumers. In one event, consumers know everything about the resource. Per resource, only the last event is needed to be back up to date, which is great for disaster recovery. In cases where another service is dependent on state from your service, the use of RESTful events is a great way to push the state there. Doing so will remove the direct dependency on the service in cases where eventual consistency is acceptable.\n  In my experience, RESTful events have only been useful as an integration tool for &#34;outside&#34; consumers. They are not useful for internal modelling. They are big, and more anonymous, and convey less intent, making them less suitable for internal modelling. RESTful events often require you to build an anti-corruption layer to translate other types of events into RESTful ones, which is &#34;extra&#34; work.\n  During technical discussions, it&#39;s tempting to jump to solutions. Just add the field, just expose this internal event to an external consumer, fix the problem. I&#39;d hope by having identified a couple of types of events, you can take this information into the discussions you&#39;re having. Try to identify which type of events are at plan, what characteristics they have, and how those affect the situation in which you apply them. Exposing a domain event? Be mindful of information-level coupling. Adding more and more information into an event because a consumer needs them? Perhaps switch to a RESTful event. In the end, just keep in mind that the different styles of communication work best if they are applied in the right context. It&#39;s up to you to be aware of this and make the right choice.\n  One of the beautiful qualities of event- and message-based designs is the possibility of translation. Translation layers, often referred to as anti-corruption layers, facilitate decoupling at information-level. ACLs filter and transform information. This can be done at either side of the integration, producer or consumer. ACLs can also be implemented as relays, pieces of logic that consume and forward (produce) messages. EventSauce recently shipped with a comprehensive toolset to build your own ACLs. Read all about them in  the docs.\n I hope this was useful for you. If you have any questions or like to get a follow up on one of the items highlighted in the post,  tweet me a question.", "posttime": "2022-02-20 12:08:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u4ef6\u9a71\u52a8,events,\u4e8b\u4ef6", "title": "\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u4e2d\u7684\u4e8b\u4ef6\u7c7b\u578b", "title_en": "Types of events in event-driven systems", "transed": 1, "url": "https://blog.frankdejonge.nl/the-different-types-of-events-in-event-driven-systems/", "via": "", "real_tags": ["\u4e8b\u4ef6\u9a71\u52a8", "events", "\u4e8b\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "UTP\u662f\u7528\u6237\u5173\u4e8eUnix\u6700\u597d\u7684\u4e66\u7c4d\u4e4b\u4e00&#39\uff1bs\u7684\u89c6\u89d2\u6770\u514b\u00b7\u96f7\u5fb7\u66fc\nUnix\u6587\u672c\u5904\u7406\uff08UTP\uff09\uff08\u7531Dale Dougherty\u548cTim O&#39\uff1bReilly\u64b0\u5199\uff09\u6700\u521d\u53d1\u8868\u4e8e1987\u5e74\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e3a\u6570\u4e0d\u591a\u7684\u5bf9\u5178\u578b\u7684\u57fa\u4e8etroff\u7684\u5199\u4f5c\u5de5\u4f5c\u6d41\u4e2d\u6d89\u53ca\u7684\u6240\u6709\u5de5\u5177\u7684\u5168\u9762\u5ba1\u89c6\u3002\u5b83\u5305\u62ec\uff1a\nUTP\u6700\u521d\u7531Hayden Books\u51fa\u7248\uff08\u5728\u8be5\u4e66\u5b9e\u9645\u51fa\u7248\u4e4b\u524d\u88abHoward W.Sams\u6536\u8d2d\uff09\u3002\u572821\u4e16\u7eaa\u521d\uff0c\u4f5c\u8005\u901a\u8fc7\u77e5\u8bc6\u5171\u4eab\u7f72\u540d\u8bb8\u53ef\u8bc1\u5728\u5f00\u653e\u56fe\u4e66\u9879\u76ee\u4e0a\u63d0\u4f9b\u4e86\u8fd9\u672c\u4e66\u3002\u626b\u63cf\u7684\u9875\u9762\u6709inPBM\uff08\u4fbf\u643a\u5f0f\u4f4d\u56fe\uff09\u548cPDF\u683c\u5f0f\u3002\u539f\u59cb\u7684troff\u6807\u8bb0\u4e22\u5931\u3002\n2002\u5e74\uff0cGNU\u7279\u7f57\u592b\uff08groff\uff09\u90ae\u4ef6\u5217\u8868\u7684\u4e00\u4e9b\u6210\u5458\u5f00\u59cb\u8f6c\u5f55\u8fd9\u672c\u4e66\u5e76\u91cd\u65b0\u7f16\u5199\u6e90\u4ee3\u7801\u3002\u6211\u4eec\u82b1\u4e86\u4e00\u5e74\u591a\u7684\u65f6\u95f4\u8fdb\u884c\u72c2\u8e81\u7684\u6d3b\u52a8\uff0c\u65f6\u4e0d\u65f6\u5730\u5c0f\u7761\u7247\u523b\uff0c\u7136\u540e\u53d1\u5e03\u4e86&#34\uff1bUTP\u590d\u5174&#34\uff1b2004\u5e74\u3002\u6211\u4eec\u4ecd\u7136\u5e0c\u671b\u4f7f\u8fd9\u672c\u4e66\u73b0\u4ee3\u5316\uff08&#34\uff1bUTP\u91cd\u8bbf&#34\uff1b\uff09\u3002\u65e0\u8bba\u4f60\u662f\u60f3\u4f7f\u7528GNU\u7279\u7f57\u592b\uff0c\u8fd8\u662fPlan 9\u6216\u5b83\u7684\u4e00\u4e2a\u884d\u751f\u4ea7\u54c1\uff08\u4f20\u5bb6\u5b9d\u7279\u7f57\u592b\u548c\u5c3c\u7279\u7f57\u592b\uff09\uff0cUTP\u4ecd\u7136\u662f\u5370\u5237\u51fa\u7248\u7684\u91cd\u8981\u6307\u5357\u3002\n\u76ee\u524d\uff08\u4e3b\u8981\uff09\u7684\u5206\u652f\u662fUTP1.1\uff0c\u5b83\u5728PDF\u4e2d\u63d0\u4f9b\u4e86\u53ef\u70b9\u51fb\u7684\u7d22\u5f15\u3001TOC\u548c\u4ea4\u53c9\u5f15\u7528\uff08\u591a\u4e8f\u4e86Deri James\uff09\u3002\u60a8\u9700\u8981groff 1.22\u6216\u66f4\u65b0\u7248\u672c\u6765\u683c\u5f0f\u5316\u5b83\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86-Tpdf\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u8f83\u65e7\u7684groff\uff0c\u8bf7\u5207\u6362\u52301.0\u5206\u652f\u3002\nUTP\u590d\u5174\u7248\u672c\u662f\u6839\u636eCreative Commons Attribution License\u7684\u6761\u6b3e\u53d1\u5e03\u7684\u3002\u8bb8\u53ef\u8bc1\u526f\u672c\u53ef\u5728\u4ee5\u4e0b\u7f51\u5740\u83b7\u5f97\uff1ahttp://creativecommons.org/licenses/by/1.0.\n\u6ce8\uff1a\u8f6c\u5f55\u9879\u76ee\u65e9\u4e8e\u8ba1\u52129\u53ca\u5176\u884d\u751f\u4ea7\u54c1\u3002\u56e0\u6b64\uff0c\u91cd\u65b0\u521b\u5efa\u7684\u6e90\u4ee3\u7801\u548c\u5b8f\u662f\u4e3agroff\u7f16\u5199\u7684\uff0c\u6211\u4eec\u6ca1\u6709\u5c1d\u8bd5\u4e0e\u539f\u59cbtroff\u517c\u5bb9\u3002\u6b22\u8fce\u4f7f\u7528\u4f20\u5bb6\u5b9d\u6216Neatroff\uff08\u5982\u679c\u9700\u8981\uff09\u8865\u4e01\uff01\n\u9996\u5148\uff0c\u9996\u5148\u8981\u611f\u8c22\u539f\u8457\u4f5c\u8005\u8ba9\u8fd9\u672c\u4e66\u9762\u4e16\u3002\u6ca1\u6709\u8fd9\u7b2c\u4e00\u6b65\uff0c\u5176\u4ed6\u4e00\u5207\u90fd\u4e0d\u53ef\u80fd\u53d1\u751f\u3002", "note_en": "UTP is one of the best books on Unix from a user&#39;s perspective. \u2013\u00a0Jack\u00a0Redman\n Originally published in 1987,Unix Text Processing (UTP) (written by Dale Dougherty and Tim O&#39;Reilly)provides one of the few comprehensive looks at all the toolsinvolved in a typical  troff-based writing workflow.It covers:\n   UTP was originally published by Hayden Books (which was acquired byHoward W. Sams before the book was actually published).In the early 21^st^ century, the authors made the book available atthe  Open Books Projectunder the Creative Commons Attribution License.Scanned pages are available inPBM (Portable BitMap) and PDF formats.The original  troff markup is lost.\n In 2002,some members of the  GNU Troff( groff) mailing listbegan transcribing the book and recreating the source code.It took a little over a year of manic activity,punctuated by long naps,and we released &#34;UTP Revival&#34; in 2004.We still hope to modernize the book (&#34;UTP Revisited&#34;).Whether you want to use GNU Troff,or Plan 9 or one of its derivatives (Heirloom Troff and Neatroff),UTP is still an excellent guide to the nuts and bolts of print publishing.\n The current (main) branch is UTP 1.1,which provides a clickable index, TOC, and cross-references within the PDF(thanks to Deri James).You will need  groff 1.22 or newer to format it,as it uses the -Tpdf driver.If you have an older  groff, switch to the 1.0 branch.\n The UTP Revival Release isdistributed according to the terms of theCreative Commons Attribution License.A copy of the license is available at http://creativecommons.org/licenses/by/1.0.\n Note: The transcription project predated Plan 9 and its derivatives.Thus, the recreated source and macros were written for  groff,and we made no attempt to be compatible with the original  troff.Patches for Heirloom or Neatroff (if needed) are welcome!\n   First, a big thanks to the original authorsfor making the book available in the first place.Nothing else could have happened without that first step.", "posttime": "2022-02-20 12:06:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,unix,sources", "title": "\u4e3a1987\u5e74\u51fa\u7248\u7684\u300aUNIX\u6587\u672c\u5904\u7406\u300b\u4e00\u4e66\u91cd\u65b0\u521b\u5efa\u4e86\u6e90\u4ee3\u7801", "title_en": "Recreated sources for the book \u201cUNIX Text Processing,\u201d published in 1987", "transed": 1, "url": "https://github.com/larrykollar/Unix-Text-Processing", "via": "", "real_tags": ["\u4ee3\u7801", "unix", "sources"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074172, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60&#39\uff1bI\u2019\u6211\u4e00\u76f4\u5728\u5173\u6ce8Nintil\u2014\u2014\u6216\u8005\u6709\u70b9\u597d\u5947\u2014\u2014\u4f60\u53ef\u80fd\u4f1a\u9047\u5230\u8fd9\u6837\u6216\u90a3\u6837\u7684\u8bf4\u6cd5\uff1a\u79d1\u5b66\u4ee5\u67d0\u79cd\u65b9\u5f0f\u88ab\u6253\u7834\u4e86\uff0c\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u79d1\u5b66\u505c\u6ede\u7684\u65f6\u4ee3\uff0c\u6216\u8005\u4e00\u4e9b\u53ef\u6015\u7684\u6545\u4e8b\uff0c\u5173\u4e8e\u7814\u7a76\u4eba\u5458\u4e00\u751f\u90fd\u5728\u7533\u8bf7\u8865\u52a9\u91d1\u800c\u4e0d\u505a\u7814\u7a76\u3002\u8fd9\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u9605\u8bfb\u6e05\u5355\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5728\u8fd9\u6bb5\u5bf9\u8bdd\u4e2d\u6d4f\u89c8\u5b83\u5f88\u6709\u8da3\u3002\u6bcf\u4e00\u7bc7\u6587\u7ae0\u90fd\u5305\u542b\u4e00\u4e2a\u7b80\u77ed\u7684\u7247\u6bb5\uff0c\u63cf\u8ff0\u5176\u5185\u5bb9\u3002\u8fd9\u5e76\u4e0d\u662f\u6211\u6536\u96c6\u7684\u6bcf\u4e00\u7bc7\u8bba\u6587&#39\uff1b\u6211\u9047\u5230\u8fc7\uff0c\u4f46\u6709\u4e9b\u6211\u8ba4\u4e3a\u662f\u76f8\u5173\u7684\u3002\n\u76ee\u524d\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u4e3b\u9898\u7684\u9605\u8bfb\u8d44\u6599\uff0c\u4f46\u6211\u6253\u7b97\u9010\u6b65\u589e\u52a0\u5176\u4ed6\u4e3b\u9898\uff0c\u5982\u540c\u884c\u8bc4\u8bae\u3001\u66ff\u4ee3\u8d44\u91d1\u8ba1\u5212\u3001\u590d\u5236\u3001\u5f00\u653e\u79d1\u5b66\u3001\u79d1\u5b66\u5de5\u5177\u7b49\u7b49\u3002\n\u6211\u4eec\u7ee7\u627f\u4e86\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u521a\u7ed3\u675f\u65f6\u7684\u73b0\u6709\u79d1\u5b66\u673a\u6784\u3002\u5982\u679c\u5728\u4e8c\u5341\u4e16\u7eaa\u4e3a\u6211\u4eec\u670d\u52a1\u5f97\u5982\u6b64\u4e4b\u597d\u7684\u7cfb\u7edf\u540c\u6837\u9002\u5e94\u4e8c\u5341\u4e00\u4e16\u7eaa\u7684\u9700\u8981\uff0c\u90a3\u5c06\u662f\u4e00\u4e2a\u5076\u7136\u7684\u5de7\u5408\u3002\u5728\u81ea\u5df1\u8eab\u4e0a\u505a\u5b9e\u9a8c\u5f88\u53ef\u80fd\u4f1a\u66b4\u9732\u51fa\u79d1\u5b66\u754c\u7684\u4e00\u4e9b\u7f3a\u70b9\uff0c\u8ba9\u6211\u4eec\u66b4\u9732\u5728\u653f\u5ba2\u7684\u6279\u8bc4\u4e4b\u4e0b\uff0c\u4ed6\u4eec\u603b\u662f\u5728\u5bfb\u627e\u501f\u53e3\u6765\u524a\u51cf\u79d1\u5b66\u57fa\u91d1\u3002\u4f46\u662f\uff0c\u9664\u4e86\u8fd9\u79cd\u53d7\u63a7\u5b9e\u9a8c\u4e4b\u5916\uff0c\u552f\u4e00\u7684\u66ff\u4ee3\u65b9\u6cd5\u662f\u9010\u6b65\u5c06\u6211\u4eec\u6700\u73cd\u89c6\u7684\u79d1\u5b66\u673a\u6784\u50f5\u5316\u3002\n2010\u5e74\uff0c\u5168\u7403\u5bf9\u751f\u7269\u533b\u5b66\u7814\u7a76\u7684\u5e74\u5ea6\u6295\u8d44\u589e\u52a0\u52302400\u4ebf\u7f8e\u5143\uff0c\u4e3a\u60a3\u8005\u548c\u516c\u4f17\u5e26\u6765\u4e86\u91cd\u8981\u7684\u5065\u5eb7\u7ea2\u5229\u3002\u7136\u800c\uff0c\u8bb8\u591a\u7814\u7a76\u5e76\u6ca1\u6709\u5e26\u6765\u6709\u4ef7\u503c\u7684\u6210\u679c\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4e00\u4e9b\u7814\u7a76\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u53ef\u80fd\u4e0e\u4eba\u7c7b\u5065\u5eb7\u65e0\u5173\u7684\u57fa\u672c\u673a\u5236\u3002\u6b64\u5916\uff0c\u597d\u7684\u7814\u7a76\u60f3\u6cd5\u901a\u5e38\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u7ed3\u679c\u3002\u53ea\u8981\u8fd9\u4e9b\u60f3\u6cd5\u5728\u7814\u7a76\u4e2d\u88ab\u4f18\u5148\u8003\u8651\u7684\u65b9\u5f0f\u662f\u900f\u660e\u7684\u548c\u6709\u7406\u7531\u7684\uff0c\u8fd9\u4e9b\u5931\u671b\u5c31\u4e0d\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u6d6a\u8d39\uff1b\u5b83\u4eec\u53ea\u662f\u79d1\u5b66\u5de5\u4f5c\u65b9\u5f0f\u7684\u4e00\u4e2a\u4e0d\u53ef\u907f\u514d\u7684\u7279\u5f81\u3002\u7136\u800c\uff0c\u6709\u4e9b\u5e9f\u7269\u6765\u6e90\u662f\u4e0d\u5408\u7406\u7684\u3002\u5728\u672c\u62a5\u544a\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5728\u786e\u5b9a\u7814\u7a76\u4f18\u5148\u7ea7\u65f6\u5982\u4f55\u8003\u8651\u53ef\u907f\u514d\u7684\u5e9f\u7269\n\u6211\u5728\u8fd9\u91cc\u7684\u91cd\u70b9\u4e0d\u662f\u5efa\u8bae\u672c\u8eab\uff0c\u800c\u662f\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u63d0\u8bae\u7684\u521b\u65b0\u53ef\u80fd\u662f\u597d\u4e3b\u610f\u7684\u539f\u56e0\u3002\u4e0d\u5e78\u7684\u6096\u8bba\u662f\uff0c\u6b63\u662f\u201c\u5783\u573e\u79d1\u5b66\u201d\u7684\u67d0\u4e9b\u65b9\u9762\uff0c\u6211\u4eec\u5982\u6b64\u6070\u5f53\u5730\u6279\u8bc4\u4e86\u5bf9\u975e\u4ee3\u8868\u6027\u6837\u672c\u7684\u95f4\u63a5\u3001\u9ad8\u5ea6\u53ef\u53d8\u6d4b\u91cf\u3001\u5f00\u653e\u5f0f\u6570\u636e\u5206\u6790\u3001\uff0c\u63a5\u7740\u662f\u4ece\u53ef\u7591\u6570\u636e\u4e2d\u5f97\u51fa\u7684\u5b8f\u5927\u7ed3\u8bba\u548c\u6709\u529b\u7684\u653f\u7b56\u5efa\u8bae\u2014\u2014\u6240\u6709\u8fd9\u4e9b\u4f3c\u4e4e\u90fd\u662f\u5728\u6211\u4eec\u63d0\u51fa\u81ea\u5df1\u5bf9\u7cfb\u7edf\u7684\u6539\u8fdb\u5efa\u8bae\u65f6\u53d1\u751f\u7684\u3002\u5f53\u6211\u4eec\u7684\u60c5\u7eea\u6295\u5165\u65f6\uff0c\u6211\u4eec\u6240\u6709\u8c28\u614e\u575a\u6301\u7684\u539f\u5219\u4f3c\u4e4e\u90fd\u6d88\u5931\u4e86\u3002\u8fd9\u7c7b\u4f3c\u4e8eGelman\u548cLoken\uff082012\uff09\u6307\u51fa\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5373\u5b66\u672f\u7edf\u8ba1\u5b66\u5bb6\u4f3c\u4e4e\u5f88\u5c11\u5728\u8bbe\u8ba1\u548c\u8bc4\u4f30\u6559\u5b66\u65f6\u4f7f\u7528\u7edf\u8ba1\u539f\u7406\u3002\n\u6211\u4eec\u7684\u4f30\u8ba1\u662f\uff0c85%\u7684\u5065\u5eb7\u7814\u7a76\u90fd\u5728\u4e0d\u53ef\u907f\u514d\u5730\u201c\u6d6a\u8d39\u201d[Chalmers&Glasziou\uff0c2009]\u901a\u5e38\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u6211\u4eec\u81ea\u5df1\u7684\u7b2c\u4e00\u53cd\u5e94\u4e5f\u5f88\u76f8\u4f3c\uff1a\u201c\u90a3\u4e0d\u53ef\u80fd\u5427\uff1f\u201d85%\u4e0d\u4ec5\u542c\u8d77\u6765\u592a\u591a\uff0c\u800c\u4e14\u8003\u8651\u5230\u5168\u7403\u6bcf\u5e74\u5728\u5065\u5eb7\u548c\u533b\u5b66\u7814\u7a76\u4e0a\u82b1\u8d392000\u4ebf\u7f8e\u5143\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u5e74\u6d6a\u8d391700\u4ebf\u7f8e\u5143\u3002\u8fd9\u4e00\u6570\u5b57\u4ecb\u4e8e\u79d1\u5a01\u7279\u548c\u5308\u7259\u5229\u7684GDP\u4e4b\u95f4\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u503c\u5f97\u8ba4\u771f\u5206\u6790\u548c\u5173\u6ce8\u7684\u95ee\u9898\u3002\u4f46\u6211\u4eec\u5982\u4f55\u4f30\u8ba1\u6d6a\u8d39\uff1f\n\u5199\u8865\u52a9\u91d1\u7684\u65f6\u95f4\u4e0d\u662f\u82b1\u5728\u7814\u7a76\u4e0a\u7684\u65f6\u95f4\u3002\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u56e0\u4e3a\u82b1\u65f6\u95f4\u5199\u4e00\u4efd\u8865\u52a9\u91d1\u6709\u52a9\u4e8e\u6f84\u6e05\u4e00\u4e2a\u95ee\u9898\uff1b\u8fd9\u662f\u6211\u7684\u60f3\u6cd5\u3002\u6b64\u5916\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u9879\u76ee\u4e5f\u5b58\u5728\u65f6\u95f4\u5ef6\u8fdf\u3002\n\u6539\u5584\u8fd9\u4e00\u70b9\u7684\u6548\u679c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u9879\u76ee\u6267\u884c\u673a\u6784\u7684\u89d2\u8272\u548c\u5b9e\u9a8c\u5ba4\u7684\u89c4\u6a21\u3002\u5982\u679c\u5b9e\u9a8c\u5ba4\u89c4\u6a21\u8f83\u5927\uff0c\u90a3\u4e48\u9879\u76ee\u6267\u884c\u673a\u6784\u7533\u8bf7\u8d44\u52a9\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u5c06\u5728\u6240\u6709\u5b9e\u9a8c\u5ba4\u6210\u5458\u4e4b\u95f4\u5206\u644a\u3002\u5982\u679c\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u670960\u4eba\uff0c\u5e76\u4e14100%\u76841PI\u65f6\u95f4\u90fd\u82b1\u5728\u4e86\u62e8\u6b3e\u4e0a\uff0c\u90a3\u4e48\u91ca\u653e\u8fd9\u4e9b\u65f6\u95f4\u5c06\u5bfc\u81f4\u4eba\u5de5\u65f6\u6570\u63d0\u9ad81.7%\uff1b\u800c\u5982\u679c\u5b9e\u9a8c\u5ba4\u66f4\u5c0f\uff0c\u6bd4\u5982\u8bf46\u540d\u6210\u5458\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u591a\u5b8c\u621016.7%\u7684\u79d1\u5b66\u5de5\u65f6\u3002\u8fd9\u4e00\u5207\u90fd\u5047\u8bbe\u6cd5\u5f8b\u4e13\u4e1a\u4eba\u58eb\u3001\u7814\u7a76\u751f\u3001\u535a\u58eb\u540e\u548c\u5176\u4ed6\u5b9e\u9a8c\u5ba4\u6210\u5458\u7684\u5de5\u4f5c\u65f6\u95f4\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u8fd9\u4e0d\u662f\u771f\u7684\uff08\u5982\u679cPI\u6295\u5165\u7814\u7a76\u7684\u65f6\u95f4\u80fd\u591f\u4ea7\u751f\u66f4\u6709\u8da3\u7684\u60f3\u6cd5\uff0c\u90a3\u5c31\u4e0d\u4f1a\u662f\u771f\u7684\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5047\u8bbe\u5c31\u4e0d\u4f1a\u662f\u771f\u7684\uff1b\u8fd9\u4e0d\u662f\u771f\u7684\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u8003\u8651\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u65b0\u60f3\u6cd5\u7684\u4ea7\u751f\uff0c\u53e6\u4e00\u4e2a\u662f\u5b9e\u9a8c\u7684\u5b9e\u9645\u8fdb\u884c\u3002\u4f46\u5373\u4f7f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679cPI\u4f5c\u4e3a\u4e00\u540d\u79d1\u5b66\u5bb6\u7684\u9644\u52a0\u503c\u662f\u6709\u8da3\u7684\u60f3\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e3a\u5b9e\u9a8c\u5ba4\u7684\u5176\u4ed6\u6210\u5458\u63d0\u4f9b\u6269\u5c55\u7684\u60f3\u6cd5\u53ef\u80fd\u4f1a\u8d77\u5230\u4e0e\u4ed6\u4eec\u5b8c\u5168\u53c2\u4e0e\u7814\u7a76\u8fc7\u7a0b\u4e00\u6837\u7684\u4f5c\u7528\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u9605\u8bfb\u8d44\u6599\uff1a\n\u4f30\u8ba1\u6709550\u4e2a\u5de5\u4f5c\u5e74\u7684\u7814\u7a76\u4eba\u5458&#39\uff1b\u82b1\u8d39\u65f6\u95f4\u51c6\u59073727\u4efd\u63d0\u6848\uff0895%CI 513\u81f3589\u4e2a\u5de5\u4f5c\u5e74\uff09\u3002\u6839\u636e\u7814\u7a76\u4eba\u5458&#39\uff1b\u5de5\u8d44\uff0c\u8fd9\u662f\u6bcf\u5e746600\u4e07\u6fb3\u5143\u7684\u4f30\u8ba1\u8d27\u5e01\u6210\u672c\uff0c\u5360NHMRC\u768414%&#39\uff1b\u603b\u7684\u8d44\u91d1\u9884\u7b97\u3002\u6bcf\u4e00\u9879\u65b0\u63d0\u6848\u5e73\u5747\u82b1\u8d39\u4e86\u7814\u7a76\u4eba\u545838\u4e2a\u5de5\u4f5c\u65e5#39\uff1b\u65f6\u95f4\u548c\u91cd\u65b0\u63d0\u4ea4\u5e73\u5747\u9700\u898128\u4e2a\u5de5\u4f5c\u65e5\uff1a\u603b\u4f53\u5e73\u574734\u4e2a\u5de5\u4f5c\u65e5\u2005\u6bcf\u4e2a\u63d0\u6848\u7684\u5929\u6570\u3002\u9996\u5e2d\u7814\u7a76\u4eba\u5458\u5e73\u5747\u6bcf\u4e2a\u65b0\u63d0\u6848\u548c\u91cd\u65b0\u63d0\u4ea4\u7684\u63d0\u6848\u5206\u522b\u82b1\u8d3927\u548c21\u4e2a\u5de5\u4f5c\u65e5\uff0c\u5176\u4f59\u65f6\u95f4\u7531\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u82b1\u8d39\u3002\n\u6700\u5927\u7684\u60ca\u559c\u662f\u6211\u8981\u82b1\u591a\u5c11\u65f6\u95f4\u4e3a\u6211\u7684\u7814\u7a76\u7b79\u96c6\u8d44\u91d1\u3002\u867d\u7136\u5dee\u522b\u5f88\u5927\uff0c\u4f46\u6211\u60f3\u6211\u82b1\u4e86\u5927\u7ea640%\u7684\u65f6\u95f4\u76f4\u63a5\uff08\u5199\u62e8\u6b3e\u7533\u8bf7\uff09\u6216\u95f4\u63a5\uff08\u62dc\u8bbf\u516c\u53f8\u3001\u6f14\u8bb2\u3001\u5efa\u7acb\u5173\u7cfb\uff09\u5bfb\u6c42\u8d44\u91d1\u3002\n\u7b80\u5316\u540e\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u77ed\uff0c\u4f46\u5e73\u5747\u9700\u8981\u66f4\u957f\u7684\u51c6\u5907\u65f6\u95f4\u3002\u7814\u7a76\u4eba\u5458&gt\uff1b\u53ef\u80fd\u4f1a\u6839\u636e\u9884\u671f\u56de\u62a5\u5206\u914d\u56fa\u5b9a\u7684\u65f6\u95f4\u6765\u51c6\u5907\u8d44\u52a9\u7533\u8bf7\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u589e\u52a0\u65f6\u95f4\u4ee5\u5e94\u5bf9\u65e5\u76ca\u6fc0\u70c8\u7684\u7ade\u4e89\u3002\u5728\u51c6\u5907\u5931\u8d25\u7684\u7533\u8bf7\u65f6\uff0c\u8bb8\u591a\u6f5c\u5728\u7684\u9ad8\u6548\u7814\u7a76\u65f6\u95f4\u4ecd\u5728\u6d41\u5931\u3002\n\u6b63\u59822008\u5e74AAAS\u7684\u4e00\u4efd\u62a5\u544a[10]\u6240\u6307\u51fa\u7684\uff0c\u201c\u4e00\u534a\u7684[NSF]\u65b0\u8c03\u67e5\u4eba\u5458\u5728\u9996\u6b21\u83b7\u5956\u540e\u518d\u4e5f\u6ca1\u6709\u6536\u5230NSF\u7684\u8d44\u52a9\u3002\u201d\u6211\u4eec\u7684\u4e00\u4e9b\u8c03\u67e5\u5bf9\u8c61\u660e\u786e\u5730\u8bc4\u8bba\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u5199\u9053\uff1a\u201c\u6211\u57282004\u5e74\u30012005\u5e74\u30012006\u5e74\u548c2007\u5e74\u5411NSF\u7533\u8bf7\u4e86\u62e8\u6b3e\u2026\u2026\u6ca1\u6709\u62e8\u6b3e\u7684\u5927\u90e8\u5206\u539f\u56e0\u662f\uff0c\u90a3\u4e00\u5e74\u8d44\u91d1\u592a\u7d27\uff0c\u6211\u5e94\u8be5\u5728\u7b2c\u4e8c\u5e74\u91cd\u65b0\u7533\u8bf7\uff0c\u56e0\u4e3a\u8be5\u63d0\u6848\u6709\u4ef7\u503c\u2026\u2026\u6211\u6700\u7ec8\u653e\u5f03\u4e86\u3002\u201d\u6216\u8005\u201c2007\u5e74\u540e\uff0c\u6211\u4e0d\u518d\u7533\u8bf7PI\u8865\u52a9\u91d1\uff0c\u56e0\u4e3a\u5728\u79ef\u7d2f\u4e86\u5927\u91cf\u7ecf\u9a8c\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u7533\u8bf7\u8054\u90a6\u8865\u52a9\u91d1\u5e76\u4e0d\u662f\u5bf9\u6211\u65f6\u95f4\u7684\u826f\u597d\u5229\u7528\u201d\u3002\u4e00\u4f4d\u4ece\u4e8b\u7814\u7a76\u7684\u90e8\u95e8\u8d1f\u8d23\u4eba\u5199\u9053\uff1a\u201c\u6211\u89c9\u5f97\u4e0d\u503c\u5f97\u82b1\u65f6\u95f4\u7533\u8bf7\u3002\u201d[...] .  \u6211\u4eec\u6ce8\u610f\u5230\uff0c20%\u7684\u8d44\u52a9\u7387\u7ed9\u7814\u7a76\u4eba\u5458\u5e26\u6765\u4e86\u5de8\u5927\u7684\u673a\u4f1a\u6210\u672c\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u81f3\u5c11\u6709\u4e00\u534a\u7684\u79d1\u5b66\u5bb6\u6d6a\u8d39\u4e86\u5927\u91cf\u53ef\u7528\u7684\u7814\u7a76\u65f6\u95f4\uff0c\u51cf\u5c11\u4e86\u56fd\u5bb6\u79d1\u5b66\u4ea7\u51fa\uff0c\u5e76\u8feb\u4f7f\u8bb8\u591a\u6709\u80fd\u529b\u7684\u79d1\u5b66\u5bb6\u8fdc\u79bb\u6709\u751f\u4ea7\u529b\u548c\u6f5c\u5728\u4ef7\u503c\u7684\u7814\u7a76\u9886\u57df\u3002\n\u636e\u6211\u4eec\u6240\u77e5\uff0c\u8fd9\u7bc7\u8bba\u6587\u662f\u7b2c\u4e00\u6b21\u7cfb\u7edf\u5730\u7814\u7a76\u4efb\u671f\u548c\u664b\u5347\u5bf9\u5927\u5b66\u6559\u5e08\u65f6\u95f4\u5206\u914d\u7684\u5f71\u54cd\u3002[...] \u6709\u4eba\u53ef\u80fd\u4f1a\u5f97\u51fa\u7ed3\u8bba\uff0c\u7ec8\u8eab\u5236\u5bf9\u7814\u7a76\u578b\u5927\u5b66\u662f\u6709\u5bb3\u7684\uff0c\u56e0\u4e3a\u6559\u804c\u5458\u5de5\u51cf\u5c11\u4e86\u5206\u914d\u7ed9\u7814\u7a76\u548c\u62e8\u6b3e\u5199\u4f5c\u7684\u65f6\u95f4\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u901a\u5e38\u4e0e\u7814\u7a76\u673a\u6784\u7684\u7cbe\u795e\u6c14\u8d28\u6709\u5173\u3002\n\u53e6\u4e00\u79cd\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\u7684\u8d44\u52a9\u5236\u5ea6\u662f\uff0c\u5229\u7528\u6c11\u4e3b\u5236\u5ea6\uff0c\u6839\u636e\u7814\u7a76\u754c\u7684\u6295\u7968\uff0c\u5956\u52b1\u6700\u6709\u4ef7\u503c\u7684\u7814\u7a76\u4eba\u5458\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u8bd5\u9a8c\u8fd9\u79cd\u7cfb\u7edf\u5982\u4f55\u5de5\u4f5c\uff0c\u5e76\u68c0\u67e5\u4e00\u4e9b\u6f5c\u5728\u7684\u504f\u89c1\u3002[...] \u6839\u636e\u5168\u56fd\u6295\u7968\u8ba1\u5212**\uff0c\u6211\u4eec\u4f30\u8ba1\u6295\u7968\u65f6\u95f4\u4e3a599\u4e2a\u5de5\u4f5c\u65e5\uff0895%\u53ef\u4fe1\u533a\u95f4\u4e3a490\u81f3728\uff09\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7814\u7a76\u91d1\u76ee\u524d\u7684\u540c\u884c\u8bc4\u5ba1\u5236\u5ea6**\u4e3a827\u4e2a\u5de5\u4f5c\u65e5\u3002[..] \u5173\u4e8e\u7528\u6c11\u4e3b\u6765\u5956\u52b1\u8d44\u91d1\u7684\u60f3\u6cd5\uff0c\u6709\u5f88\u591a\u8d1f\u9762\u8bc4\u8bba\u3002\u4eba\u4eec\u5bf9\u64cd\u7eb5\u9009\u7968\u3001\u6e38\u8bf4\u4ee5\u53ca\u5b83\u6210\u4e3a\u4e00\u573a\u4eba\u6c14\u7ade\u8d5b\u63d0\u51fa\u4e86\u62c5\u5fe7\uff0c\u6b63\u5982\u8fd9\u53e5\u8bdd\u6240\u4ee3\u8868\u7684\u90a3\u6837\u3002\u6211\u5f88\u597d\u5947\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5982\u4f55\u6210\u4e3a\u4eba\u6c14\u7ade\u8d5b\u4e4b\u5916\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u8ba9\u90a3\u4e9b\u5df2\u7ecf\u6210\u4e3a\u201c\u540d\u4eba\u201d\u7684\u4eba\u53d7\u76ca\u7684\u3002\u7279\u522b\u662f\uff0c\u8fd9\u5c06\u5982\u4f55\u5e2e\u52a9\u65e9\u671f\u804c\u4e1a\u7814\u7a76\u4eba\u5458\uff0c\u4ed6\u4eec\u5728\u5f53\u524d\u7684\u4f53\u7cfb\u4e2d\u5904\u4e8e\u6700\u4e0d\u5229\u7684\u5730\u4f4d\uff1f\n\u672c\u6587\u56de\u987e\u4e86\u4e3a\u6539\u8fdb\u62e8\u6b3e\u7533\u8bf7\u6d41\u7a0b\u800c\u63d0\u51fa\u7684\u5404\u79cd\u5e72\u9884\u63aa\u65bd", "note_en": "If you&#39;ve been following Nintil -or been moderately curious  1- you have probably come across claims that Science is broken in some way or another, that we live in an era of scientific stagnation, or some horror stories about researchers spending their lives applying for grants and not doing research. Here&#39;s a reading list that you may find interesting to navigate this conversation. Each piece includes a brief fragment from the source that describes its content. This is not intended to be a collection of every paper I&#39;ve come across, but of some that I consider relevant.\n At the moment this just has readings for one topic, but I intend to progressively add other topics, like peer review, alternative funding schemes, replication, open science, tools for science, and more.\n    We inherited the current institutions of science from the period just after the Second World War. It would be a fortuitous coincidence if the systems that served us so well in the twentieth century were equally adapted to twenty-first-century needs. Experimenting on ourselves may well lay bare some shortcomings of the scientific community and expose us to criticisms from politicians, who are always looking for excuses to cut science funding. But the only alternative to such controlled experimentation is the gradual stultification of our most cherished scientific institutions.\n  The increase in annual global investment in biomedical research\u2014reaching US$240 billion in 2010\u2014has resulted in important health dividends for patients and the public. However, much research does not lead to worthwhile achievements, partly because some studies are done to improve understanding of basic mechanisms that might not have relevance for human health. Additionally, good research ideas often do not yield the anticipated results. As long as the way in which these ideas are prioritised for research is transparent and warranted, these disappointments should not be deemed wasteful; they are simply an inevitable feature of the way science works. However, some sources of waste cannot be justified. In this report, we discuss how avoidable waste can be considered when research prioritiesare set\n  My focus here will not be on the suggestions themselves but rather on what areour reasons for thinking these proposed innovations might be good ideas.  The unfortunate paradox is that the very aspects of \u201cjunk science\u201d that we so properly criticize\u2014the reliance on indirect, highly variable measurements from nonrepresentative samples, open-ended data analysis, followed up by grandiose conclusions and emphatic policy recommendations drawn from questionable data\u2014  all seem to occur when we suggest our own improvements to the system. All our carefully-held principles seem to evaporate when our emotions get engaged. This is similar to a pattern noted by Gelman and Loken (2012) that academic statisticians only rarely seem to use statistical principles in designing and evaluating their teaching.\n  Our estimate that 85% of all health research is being avoidably \u201cwasted\u201d [Chalmers &amp; Glasziou, 2009] commonly elicits disbelief. Our own first reaction was similar: \u201cthat can\u2019t be right?\u201d Not only did 85% sound too much, but given that $200 billion per year is spent globally on health and medical research, it implied an annual waste of $170 billion. That amount ranks somewhere between the GDPs of Kuwait and Hungary. It seems a problem worthy of serious analysis and attention. But how can we estimate the waste?\n    Time writing a grant is time not spent doing research. Some have argued that this is not all that big of a problem because time spent writing a grant helps clarify one&#39;s ideas. There is also the time delay in starting a new project.\n The impact of improving this depends crucially on the role of the PIs, and the size of the lab. If a lab is big, then the time spent by the PI applying for grants is amortized among all lab members. If a lab is say 60 people and 100% of the 1 PI time is spent on grants then freeing up that time would lead to an improvement in man-hours of 1.7%; while if the lab is smaller, say 6 members then we would get 16.7% more man-hours of science done. This all assumes the hours worked by PIs, graduate students, postdocs and other lab members count the same. If this is not true (And it wouldn&#39;t be if PI&#39;s time put to do research can yield more interesting ideas) then the assumption wouldn&#39;t be true; and in that case it may be better to think of two components here, one is the generation of novel ideas and the other is the actual doing of the experiments. But even in this case, if the PI value add as a scientist is interesting ideas one can imagine producing the ideas for the rest of the lab to expand on may do as much as if they were fully involved in the research process. Be that as it may, here are some readings:\n  An estimated 550 working years of researchers&#39; time was spent preparing the 3727 proposals (95% CI 513 to 589 working-years). Based on the researchers&#39; salaries, this is an estimated monetary cost of AU$66 million per year, which is  14% of the NHMRC&#39;s total funding budget. Each new proposal took an average of 38 working days of the researchers&#39; time and resubmissions took an average of 28 working days: an overall average of 34\u2005days per proposal. Lead researchers spent an average of 27 and 21 workings days per new and resubmitted proposals, respectively, with the remaining time spent by other researchers.\n  The biggest surprise is how much time I have to spend getting funding for my research. Although it varies a lot, I guess that I spent about 40% of my time chasing after funding, either directly (writing grant proposals) or  indirectly (visiting companies, giving talks, building relationships).\n  Streamlined applications were shorter but took longer to prepare on average.  Researchers &gt;  may be allocating a fixed amount of time to preparing funding applications based on their expected return, or may be increasing their time in response to increased competition. Many potentially productive years of researcher time are still being lost to preparing failedapplications.\n  As noted in a 2008 AAAS report [10], \u201cOne-half of [NSF] new investigators never again receive NSF funding after their initial award.\u201d Some of our survey respondents remarked on this explicitly, writing \u201cI applied for grants from the NSF in 2004, 2005, 2006 and 2007. \u2026 Most of the reasons given for not funding were that funds were too tight that particular year and that I should reapply the next year since the proposal had merit\u2026 I finally just gave up.\u201d Or \u201cI ceased to apply for grants as a PI after 2007 when\u2014after much experience\u2014I decided that applying for federal grants was not a good use of my time\u201d. A research-active department head wrote, \u201cI don&#39;t feel that it is worth my time to apply.\u201d [...] .  We note that 20% funding rates impose a substantial opportunity cost on researchers by wasting a large fraction of the available research time for at least half of our scientists, reducing national scientific output, and driving many capable scientists away from productive and potentially valuable lines of research.\n  To the best of our knowledge this paper is the first systematic effort to examine the effect of tenure and promotion on the disaggregated time allocation of university faculty. [...] One might conclude that tenure is detrimental to a research university becaus e faculty reduce their time allocated toward research and grant writing, those activities that, in general, are associated with the ethos of a research institution.\n  An alternative funding system that could save time is  using democracy to award the most deserving researchers based on votes from the research community. We aimed to pilot how such a system could work and examine some potential biases. [...] Extrapolating to a national voting scheme**, we estimate 599 working days of voting time (95% CI 490 to 728), compared with 827 working days for the current peer review system** for fellowships. [..] There were many negative comments about the idea of using democracy to award funding. Concerns were raised about vote rigging, lobbying and it becoming a popularity contest as typified by this quote I\u2019m curious how this approach is intended to be anything other than a popularity contest, benefitting those who have already become \u2018names\u2019. Particularly, how will this help early career researchers, who are most disadvantaged by the current system?\n  This is a review of various interventions that have been proposed to improve the grant application process", "posttime": "2022-02-20 12:03:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u79d1\u5b66,science,\u7814\u7a76", "title": "\u66f4\u597d\u7684\u79d1\u5b66\uff082020\uff09", "title_en": "Better Science (2020)", "transed": 1, "url": "https://nintil.com/better-science", "via": "", "real_tags": ["2020", "\u79d1\u5b66", "science", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074171, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5199\u4e86IBM code page 852\u7684\u53ef\u80fd\u8d77\u6e90\u4e4b\u540e\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u91cd\u6e29\u4e00\u4e0b\u6377\u514b\u672c\u571f\u7684\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\uff0cKamenick\u00fdbrothers\u7f16\u7801\u548c\u4ed6\u4eec\u7684\u952e\u76d8\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b83\u7684\u5b58\u5728\u6709\u5f88\u597d\u7684\u6587\u6863\u8bb0\u5f55\uff0c\u6240\u8c13\u7684\uff08\u6709\u70b9\u547d\u540d\u9519\u8bef\uff09KEYBCS2\u7f16\u7801\u751a\u81f3\u6709\u81ea\u5df1\u7684\u7ef4\u57fa\u767e\u79d1\u6587\u7ae0\u3002\u7f16\u7801\u672c\u8eab\u5b58\u5728\u4e8e\u5404\u79cd\u8f6c\u6362\u8868\u4e2d\uff0c\u5c06\u6587\u672c\u8f6c\u6362\u4e3aKamenick\u00fd\u7f16\u7801\u6216\u4eceKamenick\u00fd\u7f16\u7801\u8f6c\u6362\u6587\u672c\u7684\u5b9e\u7528\u7a0b\u5e8f\u5f88\u5bb9\u6613\u627e\u5230\u3002\n\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u627e\u5230\u771f\u6b63\u7684KEYBCS2\u5b9e\u7528\u7a0b\u5e8f\u975e\u5e38\u56f0\u96be\u3002\u6211\u5728\u7f51\u4e0a\u641c\u5bfb\u5b83\u3002\u6211\u627e\u4e0d\u5230\u3002\u5b8c\u5168\u6211\u53d1\u73b0\u6709\u76f8\u5f53\u591a\u7684\u6587\u5b57\u5728\u8c08\u8bba\u5b83\uff0c\u4f46\u4e0d\u662f\u5b9e\u9645\u7684\u7528\u9014\u3002\n\u5728\u7edd\u671b\u4e2d\uff0c\u6211\u5f00\u59cb\u641c\u7d22\u6211\u7684NAS\u3002\u6211\u80af\u5b9a\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\u5c31\u6709\u4e86\u8fd9\u4e2a\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4f46\u572820\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\u6211\u4e3b\u8981\u4f7f\u7528OS/2\u4e4b\u540e\uff0cDOS\u952e\u76d8\u9a71\u52a8\u7a0b\u5e8f\u5e76\u6ca1\u6709\u90a3\u4e48\u6709\u7528\uff0cOS/2\u4e5f\u6709\u81ea\u5df1\u7684\u529f\u80fd\u826f\u597d\u7684\u652f\u6301\uff0c\u4f7f\u7528CP852\u4e0e\u5185\u7f6e\u7684DOS\u652f\u6301\u517c\u5bb9\u3002\n\u7ecf\u8fc7\u591a\u6b21\u641c\u7d22\uff0c\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u5e26\u6709KEYBCS2\u7684\u6863\u6848\u300290\u5e747\u670827\u65e5\u5728\u6211\u7684NAS\u4e0a\u6267\u884c\u3002\u53ef\u60b2\u7684\u662f\uff0c\u6211\u6240\u6709\u7684\u5c1d\u8bd5\u90fd\u4ee5\u5931\u8d25\u544a\u7ec8\uff1a\n\u663e\u7136\uff0c\u6211\u5e76\u6ca1\u6709\u8bd5\u56fe\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u4f46\u6211\u662f\u88ab\u8feb\u8fd9\u4e48\u505a\u7684\u3002\n\u770b\u770b\u952e\u76d8\u3002\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u4e2d\u7684EXE\u6ca1\u6709\u663e\u793a\u660e\u663e\u7684\u5b57\u7b26\u4e32\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e00\u5207\u770b\u8d77\u6765\u90fd\u5f88\u968f\u673a\u3002\u4f46\u68c0\u67e5\u4e00\u4e2a\u663e\u793a\u611a\u8822\u9519\u8bef\u6d88\u606f\u7684\u865a\u62df\u673a\u7684\u5185\u5b58\u65f6\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u770b\u8d77\u6765\u53ef\u7591\u7684\u5b57\u7b26\u4e32\uff1aProgram LOCK Version 1.10\uff08C\uff091989 J.Belonoznik\u3002\u597d\u5427\uff0c\u4e00\u4e9b\u611a\u8822\u7684\u53cd\u8c03\u8bd5\u7a0b\u5e8f\u5305\u88c5\u5668\uff0c\u4f46\u4e3a\u4ec0\u4e48\u5b83\u8ba4\u4e3a\u6211\u5728\u8c03\u8bd5\u5b83\uff0c\u800c\u6211\u6ca1\u6709\uff1f\n\u5728\u5206\u6790\u4e86\u201c\u7a0b\u5e8f\u9501\u201d\u4e4b\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u65e0\u610f\u4e2d\u963b\u6b62\u4e86\u201c\u9501\u5b9a\u201d\u7a0b\u5e8f\u5728\u4efb\u4f55\u4e00\u534a\u7684\u73b0\u4ee3CPU\u4e0a\u8fd0\u884c\u3002\u5b83\u4f7f\u7528\u7684\u4e0a\u4e00\u4ee3\u5904\u7406\u5668\u662f486\uff0c\u4f46\u5728\u5954\u817e\u6216\u66f4\u9ad8\u7248\u672c\u4e0a\uff0c\u5b83\u603b\u662f\u4f1a\u5931\u8d25\uff0c\u5e76\u663e\u793a\u201c\u4e0d\u5141\u8bb8\u8c03\u8bd5\u201d\u6d88\u606f\u3002\n\u539f\u56e0\u662f\uff08\u4e0d\u51fa\u6240\u6599\uff09\u8c03\u8bd5\u5668\u68c0\u6d4b\u3002\u9501\u4ee3\u7801\u68c0\u6d4b\u5bf9\u81ea\u8eab\u7684\u4fee\u6539\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6355\u83b7\u4efb\u4f55INT3\u65ad\u70b9\u3002\u901a\u8fc7\u4f7f\u7528\u81ea\u4fee\u6539\u4ee3\u7801\u68c0\u6d4b\u5355\u6b65\u3002\u5b83\u770b\u8d77\u6765\u5927\u81f4\uff08\u4e0d\u5b8c\u5168\uff09\u50cf\u8fd9\u6837\uff1a\n\u5f02\u6216ax\uff0cax lea bx\uff0c\u6a21\u7801mov\u5b57\u8282ptr[bx]\uff0c90h\uff1bNOP\u64cd\u4f5c\u7801jmp short$+2 mov\u5b57\u8282ptr[bx]\uff0c40h\uff1bINC AX opcodemod_\u4ee3\u7801\uff1anop\uff1b\u4fee\u6539\u6307\u4ee4cmp-ax\uff0c1\uff1b\u65a7\u5934\u662f\u96f6\u8fd8\u662f\u4e00\uff1f\n\u8fd9\u6bb5\u4ee3\u7801\u4f9d\u8d56\u4e8e\u65e7x86 CPU\u4e0a\u662f\u5426\u5b58\u5728\u8f6f\u4ef6\u53ef\u89c1\u7684\u9884\u53d6\u961f\u5217\u3002\u5728\u82f1\u7279\u5c14486\u4e4b\u524d\uff08\u542b\uff09\uff0c\u8be5\u4ee3\u7801\u5c06\u6267\u884cNOP\u6307\u4ee4\u3002\u7b2c\u4e8c\u4e2aMOV\u8986\u76d6\u5185\u5b58\u4e2d\u7684\u6307\u4ee4\uff0c\u4f46\u4e0b\u4e00\u6761\u6307\u4ee4\u5df2\u7ecf\u5728\u9884\u53d6\u961f\u5217\u4e2d\uff0c\u5e76\u5c06\u5728\u5237\u65b0\u9884\u53d6\u961f\u5217\u7684\u8df3\u8f6c\u4e4b\u540e\u6309\u539f\u6837\u6267\u884c\u3002\n\u5728\u5954\u817e\u548c\u66f4\u9ad8\u7248\u672c\u7684CPU\u4e0a\uff0c\u5904\u7406\u5668\u68c0\u6d4b\u5230\u5f53\u524d\u5728\u9884\u53d6\u961f\u5217\u4e2d\u7684\u5199\u5165\u4ee3\u7801\uff0c\u5237\u65b0\u961f\u5217\uff0c\u5e76\u6267\u884c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u3002\u7ecf\u8fc7\u52aa\u529b\uff0c\u5728\u5954\u817e\uff08\u800c\u975e\u5954\u817ePro\uff09\u4e0a\u68c0\u6d4b\u53ef\u80fd\u4f1a\u88ab\u611a\u5f04\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u7ebf\u6027\u5730\u5740\uff0c\u800c\u4e0d\u662f\u7269\u7406\u5730\u5740\uff0c\u4f46\u5b83\u8db3\u591f\u597d\uff0c\u53ef\u4ee5\u68c0\u6d4b\u5230\u8fd9\u79cd\u81ea\u6211\u4fee\u6539\u4ee3\u7801\u7684\u5b9e\u4f8b\u3002\n\u56e0\u6b64\uff0c\u201c\u8c03\u8bd5\u5668\u68c0\u6d4b\u201d\u5728\u5954\u817e\u548c\u66f4\u9ad8\u7248\u672c\u7684\u5904\u7406\u5668\u4e0a\u80af\u5b9a\u4f1a\u5931\u8d25\u3002\u663e\u7136\uff0c\u8be5\u4ee3\u7801\u662f1989\u5e74\u7f16\u5199\u7684\uff0c\u5982\u679c\u4e0d\u662f\u66f4\u65e9\u7684\u8bdd\uff0c\u5176\u4f5c\u8005\u53ea\u662f\u672a\u80fd\u9884\u6d4b\u672a\u6765\u3002\n\u7ed3\u679c\u662f\uff0c\u201c\u53cd\u8c03\u8bd5\u201d\u4ee3\u7801\u5145\u5f53\u4e86\u4e00\u4e2a\u76f8\u5f53\u6709\u6548\u7684\u5b9a\u65f6\u70b8\u5f39\uff0c\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u65f6\u949f\u5411\u540e\u62e8\u6765\u89e3\u51b3\u3002\n\u6211\u8003\u8651\u4e86\u5236\u4f5c\u53d7\u4fdd\u62a4\u5bc6\u94a5BCS2\u7684\u5404\u79cd\u65b9\u6cd5\u3002EXE\u5728CPU\u6bd4486\u65b0\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u4fdd\u62a4\u8db3\u591f\u597d\uff0c\u56e0\u6b64\u4fee\u8865\u53d7\u4fdd\u62a4\u7684\u53ef\u6267\u884c\u6587\u4ef6\u975e\u5e38\u56f0\u96be\u3002\u5b83\u4f1a\u68c0\u67e5\u81ea\u8eab\u7684\u5b8c\u6574\u6027\uff0c\u5e76\u4f7f\u7528XOR\u94fe\u5bf9\u53ef\u6267\u884c\u6587\u4ef6\u8fdb\u884c\u89e3\u5bc6\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u5728\u8fd9\u91cc\u548c\u90a3\u91cc\u4fee\u8865\u4e00\u4e2a\u5b57\u8282\u3002\n\u6211\u8003\u8651\u7f16\u5199\u67d0\u79cdTSR\uff0c\u901a\u8fc7\u622a\u53d6\u6253\u5370\u9519\u8bef\u6d88\u606f\u7684INT 21h\u8c03\u7528\uff0c\u6216\u8005\u4e00\u4e2a\u8ba1\u65f6\u5668\u6302\u94a9\uff0c\u76d1\u89c6\u4ee3\u7801\u6302\u8d77\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u56f4\u7ed5\u4fdd\u62a4\u5de5\u4f5c\u3002\u8fd9\u4f3c\u4e4e\u4e0d\u503c\u5f97\u52aa\u529b\u3002\n\u6240\u4ee5\u2026\u6211\u8003\u8651\u4e86\u539f\u59cb\u53d7\u4fdd\u62a4\u7a0b\u5e8f\u662fDOS\u7684\u53ef\u80fd\u6027\u3002COM\u6587\u4ef6\uff08\u76f8\u5f53\u9ad8\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5728\u201c\u7a0b\u5e8f\u9501\u201dshell\u5b8c\u6210\u540e\uff0c\u5b83\u4f1a\u91cd\u5efa\u539f\u59cb\u7684\u3002\u5185\u5b58\u4e2d\u7684COM\u56fe\u50cf\u3002\u6240\u4ee5\u6211\u8fd0\u884c\u4e86KEYBCS2\u3002EXE\uff0c\u4fdd\u5b58\u5185\u5b58\u5185\u5bb9\uff0c\u5207\u6389\u4f3c\u4e4e\u4e0d\u5c5e\u4e8e\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u5269\u4e0b\u7684\u5185\u5bb9\u91cd\u65b0\u4fdd\u5b58\u4e3aKEYBCS2\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u6210\u529f\u4e86\u3002\n\u4f46\u9996\u5148\u6211\u624b\u52a8\u901a\u8fc7\u4e86\u8c03\u8bd5\u5668\u68c0\u67e5\u3002\u8bbd\u523a\u7684\u662f\uff0c\u4f7f\u7528\u8c03\u8bd5\u5668\u3002\u6211\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u8ba9\u7a0b\u5e8f\u6267\u884c\u4e00\u6761JMP$\u6307\u4ee4\u6765\u6302\u8d77\u81ea\u5df1\uff0c\u5c06\u5176\u4fee\u8865\u4e3aJMP$+2\uff08\u53ea\u9700\u5c06\u7b2c\u4e8c\u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a\u96f6\uff09\uff0c\u7136\u540e\u7ee7\u7eed\u3002\u6709\u4e24\u6b21\u8fd9\u6837\u7684\u8df3\u8dc3\uff0c\u6bcf\u6b21\u90fd\u88ab\u51fb\u4e2d\u51e0\u6b21\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u6761\u4fe1\u606f\u603b\u5171\u6253\u5370\u4e86\u4e94\u500d\uff1a\n\u4e8b\u5b9e\u8bc1\u660e\uff0cKEYBCS2\u662f\u4e00\u4e2a\u76f8\u5f53\u82b1\u54e8\u7684\u952e\u76d8\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u5360\u7528\u4e8610KB\u7684\u5185\u5b58\u2014\u2014\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u6570\u5b57\u3002\u5185\u5b58\u4f7f\u7528\u7387\u76f8\u5bf9\u8f83\u9ad8\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u4f7f\u7528Ctrl+Shift+F1\u53ef\u4ee5\u5f39\u51fa\u4e00\u4e2a\u6f02\u4eae\u7684\u914d\u7f6e\u83dc\u5355\uff1a\nKEYBCS2\u5b9e\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u51e0\u79cd\u53ef\u80fd\u7684\u952e\u76d8\u5e03\u5c40\u4e4b\u95f4\u52a8\u6001\u5207\u6362\u3002\u201c\u6807\u51c6\u201d\u662f\u672a\u7ffb\u8bd1\u7684BIOS\u8f93\u5165\uff0c\u201c\u56fd\u5bb6\u201d\u662f\u6377\u514b\u6216\u65af\u6d1b\u4f10\u514b\u952e\u76d8\u5e03\u5c40\u3002\u4f46\u4e5f\u6709\u4e00\u4e2a\u201c\u7ec4\u5408\u201d\u5e03\u5c40\uff0c\u5b9e\u9645\u4e0a\u662f\u4e24\u4e2a\u5e03\u5c40\u540c\u65f6\u6309\u4e0bCtrl\u952e\u5207\u6362\u5230\u201c\u5176\u4ed6\u201d\u5e03\u5c40\u3002\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u7ed8\u5236\u201c\u56fe\u5f62\u201d\u7684\u952e\u76d8\u5e03\u5c40\uff1a\n\u6211\u4e00\u76f4\u5728\u60f3\uff0c\u6709\u6ca1\u6709\u94a5\u5319\uff1f\u6211\u5728KEYBDEF\u7684\u5728\u7ebf\u5e2e\u52a9\u4e2d\u627e\u5230\u4e86\u7b54\u6848\u3002EXE\u5b9e\u7528\u7a0b\u5e8f\uff08\u4e0eKEYBCS2.EXE\u4f4d\u4e8e\u540c\u4e00\u6863\u6848\u4e2d\uff09\uff0c\u5141\u8bb8\u7528\u6237\u4e3aKEYBCS2\u9a71\u52a8\u7a0b\u5e8f\u5b9a\u4e49\u81ea\u5df1\u7684\u952e\u76d8\u5e03\u5c40\uff1a\n\u786e\u5b9e\u6709\u4e00\u4e2aKEYBCS1\u5b9e\u7528\u7a0b\u5e8f\u3002\u5b83\u4e0eKEYBCS2\u76f8\u540c\uff0c\u4f46\u6ca1\u6709\u5f39\u51fa\u7684\u914d\u7f6e\u5c4f\u5e55\uff0c\u56e0\u6b64\u53ef\u80fd\u66f4\u5c0f\u3002\u8fd8\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684KEYBSL1\u548cKEYBSL2\u5b9e\u7528\u7a0b\u5e8f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u65af\u6d1b\u4f10\u514b\u952e\u76d8\u5e03\u5c40\u3002\n\u663e\u7136\uff0c\u5c06Kamenick\u00fd\u7f16\u7801\u79f0\u4e3a\u201cKEYBCS2\u201d\u6709\u70b9\u611a\u8822\uff0c\u56e0\u4e3a\u5b83\u540c\u6837\u662fKEYBCS1\u3001KEYBSL1\u548cKEYBSL2\u7f16\u7801\u3002\u8bf7\u6ce8\u610f\uff0c\u8be5\u5b9e\u7528\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5728\u5176\u8054\u673a\u5e2e\u52a9\u4e2d\u79f0\u81ea\u5df1\u4e3a\u201cKEYBxxy\u201d\u3002\n\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e9b\u6d88\u606f\u6765\u6e90\u9519\u8bef\u5730\u5ba3\u79f0KEYBCS2\u662f\u5047\u5b9a\u7684KEYBCS\u5b9e\u7528\u7a0b\u5e8f\u7684\u66f4\u65b0\u7248\u672c\uff1b\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u56e0\u4e3aKEYBCS1\u548cKEYBCS2\u662f\u540c\u4e00\u5b9e\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u53d8\u4f53\u3002\nKamenick\u00fd\u7f16\u7801\u7684\u8bbe\u8ba1\u65b9\u5f0f\u8fdc\u975e\u968f\u673a\u3002\u5b83\u6700\u65e9\u662f\u57281986\u5e74\u5de6\u53f3\u7ec4\u88c5\u8d77\u6765\u7684\uff0c\u5f53\u65f6VGA\u8fd8\u4e0d\u5b58\u5728\uff0cEGA\u662f\u4e00\u79cd\u9ad8\u7aef\u9002\u914d\u5668\u3002\u5927\u591a\u6570\u7535\u8111\u4f7f\u7528MGA\u3001CGA\u6216Hercules\u5361\u3002\n\u8fd9\u4e9b\u9002\u914d\u5668\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u9664\u4e86Hercules Plus\uff08\u4ec5\u4e8e1986\u5e74\u53d1\u5e03\uff09\u4e4b\u5916\uff0c\u5b83\u4eec\u5728ROM\u4e2d\u90fd\u6709\u56fa\u5b9a\u7684\u5b57\u4f53\u3002\u867d\u7136\u7528\u8fd9\u4e9b\u5361\u4e2d\u7684\u8bb8\u591a\u5361\u66ff\u6362\u5b57\u7b26\u751f\u6210\u5668EPROM\u901a\u5e38\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u603b\u662f\u6700\u7ec8\u7528\u6237\u7684\u9009\u9879\uff0c\u800c\u4e14\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u6709\u6240\u9700\u7684\u8bbe\u5907\u3002\n\u56e0\u6b64\uff0c\u9009\u62e9\u4e86Kamenick\u00fd\u7f16\u7801\uff0c\u4ee5\u4fbf\u5c06\u56fd\u5bb6\u5b57\u7b26\u653e\u7f6e\u5728\u4e0e\u6807\u51c6IBM PC\u4ee3\u7801\u7b2c437\u9875\u4e2d\u89c6\u89c9\u76f8\u4f3c\u7684\u5b57\u5f62\u5927\u81f4\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u8fd9\u6709\u4e24\u4e2a\u5b9e\u9645\u4f18\u52bf\uff1a\u7b2c\u4e00\uff0c\u5373\u4f7f\u6ca1\u6709\u5b9a\u5236\u5b57\u4f53\uff0c\u6377\u514b\u8bed\u6216\u65af\u6d1b\u4f10\u514b\u8bed\u6587\u672c\u4e5f\u6e05\u6670\u6613\u8bfb\uff08\u5c3d\u7ba1\u5f88\u96be\u770b\uff09\u3002\u5176\u6b21\uff0c\u548cCP852\u4e0d\u540c\uff0cKamenick\u00fd\u7f16\u7801\u4fdd\u7559\u4e86\u6240\u6709CP437\u7ebf\u63cf\u5b57\u7b26\u3002\n\u5c06\u8fd9\u5f20\u66fe\u7ecf\u5927\u53d7\u6b22\u8fce\u7684\u8bfa\u987f\u6307\u6325\u5b98\u7684\u622a\u56fe\u4e0eKamenick\u00fd\u7f16\u7801\u8fdb\u884c\u6bd4\u8f83\n\u4f7f\u7528PC Latin 2\uff08CP852\uff09\u7f16\u7801\u7684\u540c\u4e00\u540d\u8bfa\u987f\u6307\u6325\u5b98\u7684\u5c4f\u5e55\u622a\u56fe\uff1a\n\u4e3a\u4e86\u8986\u76d6\u66f4\u591a\u7684\u8bed\u8a00\uff0cCP852\u727a\u7272\u4e86\u4e00\u4e9b\u7ebf\u63cf\u5b57\u7b26\u3002\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5408\u7406\u7684\u6298\u8877\u65b9\u6848\uff0c\u4f46\u5927\u591a\u6570\u7528\u6237\u53ea\u5173\u5fc3\u4e00\u79cd\u8bed\u8a00\uff0c\u800c\u66f4\u559c\u6b22\u4e0d\u53d7\u5e72\u6270\u7684\u7ebf\u6761\u56fe\u5f62\u3002\n\u7f16\u7801\u8bbe\u8ba1\u4e5f\u4f7f\u6392\u5e8f\u548c\u5927\u5c0f\u5199\u66f4\u6539\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u56fd\u5bb6\u5b57\u7b26\u6ca1\u6709\u7b80\u5355\u7684\u7b97\u6cd5\u6392\u5e8f\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u5728\u8f6f\u4ef6\u4e2d\u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u800c\u9996\u5148\u663e\u793a\u6b63\u786e\u7684\u5b57\u7b26\u4e0d\u4e00\u5b9a\u53ea\u662f\u8f6f\u4ef6\u7684\u95ee\u9898\u3002\n\u540c\u6837\u7684\u6700\u5c0f\u4fee\u6539CP437\u7684\u65b9\u6cd5\u4e5f\u662f\uff08\u72ec\u7acb\u5730\uff1f\uff09\u7528\u4e8e\u5308\u7259\u5229CWI-1/CWI-2\u7f16\u7801\uff0c\u5728\u8f83\u5c0f\u7a0b\u5ea6\u4e0a\u7528\u4e8e\u6ce2\u5170\u9a6c\u4f50\u7ef4\u4e9a\u7f16\u7801\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cKEYBCS2\uff08\u5b9e\u9645\u4e0a\u662f\u6574\u4e2aKEYBxxy\u7cfb\u5217\uff09\u6ca1\u6709\u8bd5\u56fe\u5bf9\u5c4f\u5e55\u5b57\u4f53\u505a\u4efb\u4f55\u4e8b\u60c5\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u6b63\u5982\u4e0a\u9762\u6240\u89e3\u91ca\u7684\uff0c\u5b83\u6839\u672c\u4e0d\u4e00\u5b9a\u9700\u8981\u5168\u56fd\u6027\u7684\u5c4f\u5e55\u5b57\u4f53\u3002\n\u540c\u6837\uff0c\u4f7f\u7528EGA\u6216VGA\u786c\u4ef6\u7684\u7528\u6237\u663e\u7136\u5e0c\u671b\u4f7f\u7528\u6b63\u786e\u7684\u5b57\u4f53\u3002\u7531\u4e8eKEYBCS2\u6ca1\u6709\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4ed6\u4eec\u80af\u5b9a\u4f7f\u7528\u4e86\u5176\u4ed6\u4e1c\u897f\u3002\n\u5728\u4e00\u4efd\u65e7\u6587\u6863\u4e2d\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e2aEGASET\u5b9e\u7528\u7a0b\u5e8f\uff0c\u636e\u62a5\u9053\u5b83\u4e0eKEYBCS2\u4e00\u8d77\u4f7f\u7528\u3002\u6211\u5f88\u5feb\u53d1\u73b0EGASET\u5e76\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u72ec\u7279\u7684\u540d\u5b57\u3002\u7136\u540e\u6211\u5728\u4e00\u4e2a\u6700\u610f\u60f3\u4e0d\u5230\u7684\u5730\u65b9\uff0c\u5728\u4e00\u4e2a\u540d\u4e3aCZHPFNT\u7684\u6863\u6848\u4e2d\u627e\u5230\u4e86\u6b63\u786e\u7684\u4e00\u4e2a\u3002\u62c9\u94fe\nCZHPFNT\u6863\u6848\u7684\u8d77\u6e90\u662f\u4e00\u4e2a\u8c1c\uff0c\u4f46\u5f88\u6e05\u695a\u662f\u57281989\u5e744\u6708\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5f53\u6211\u53d1\u73b0\u4e00\u4e2a\u540d\u4e3aKEYBCS3\u7684\u5b9e\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u4f1a\u6709\u591a\u4e48\u60ca\u8bb6\u3002COM\u5305\u62ec\uff1a\n\u8fd9\u663e\u7136\u662f\u6211\u7684KEYBCS2\u7684\u65e7\u7248\u672c\uff08\u6587\u4ef6\u65f6\u95f4\u6233\u662f1987\u5e747\u6708\uff0c\u7a0b\u5e8f\u672c\u8eab\u8868\u660e\u662f1987\u5e745\u6708\uff09\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3aKEYBCS3\uff0c\u4f46\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u91cd\u547d\u540d\u7684\u6587\u4ef6\uff1b\u8be5\u5b9e\u7528\u7a0b\u5e8f\u663e\u7136\u79f0\u81ea\u5df1\u4e3aKEYBCS3\u3002\n\u6211\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u627e\u4e0d\u5230\u63d0\u5230KEYBCS3\u7684\u5730\u65b9\u3002\u4e5f\u4e0d\u6e05\u695a\u201c3\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff1b\u5b83\u53ef\u80fd\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4f461990\u5e74\u66f4\u65b0\u7684\u5728\u7ebf\u5e2e\u52a9\u53ea\u63d0\u5230KEYBCS1\u548cKEBYCS2\uff0c\u800cKEYBCS3\u5b9e\u7528\u7a0b\u5e8f\u672c\u8eab\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u63d0\u793a\u3002\n\u4f46\u8fd9\u5e76\u4e0d\u662fCZHPFNT\u6863\u6848\u4e2d\u552f\u4e00\u7684\u60ca\u559c\u3002\u5f53\u6211\u8fd0\u884c\u6211\u4e00\u76f4\u5728\u641c\u7d22\u7684\u5b9e\u9645EGASET\u5b9e\u7528\u7a0b\u5e8f\u65f6\uff0c\u5b83\u663e\u793a\u4e86IBM Roece Inc.1986\u7684\u7248\u6743\uff0c\u8fd9\u4e0e\u4e4b\u524d\u4e00\u7bc7\u5e16\u5b50\u4e2d\u63d0\u5230\u7684IBM Roece\uff08\u6b27\u6d32\u4e2d\u90e8\u548c\u4e1c\u90e8\u5730\u533a\u529e\u4e8b\u5904\uff09\u76f8\u540c\uff1a\n\u4e0b\u9762\u662f\u4e00\u4e2a\u83dc\u5355\uff0cEGASET\u5b9e\u7528\u7a0b\u5e8f\u4f1a\u5f39\u51fa\uff0c\u4ee5\u54cd\u5e94Alt+\u53f3\u79fb\u952e\u7ec4\u5408\uff1a\n\u770b\u6765\uff0cEGASET\u771f\u7684\u662f\u4e00\u4e2a\u901a\u7528\u7684EGA\u8c03\u6574\u5de5\u5177\uff0c\u5b83\u6070\u597d\u5141\u8bb8\u52a0\u8f7d\u5b57\u4f53\u3002IBM ROECE\u6700\u7ec8\u4f7f\u7528\u5b83\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u662f\u4ed6\u4eec\u53d1\u73b0\u7684\u7b2c\u4e00\u4ef6\u4e8b\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\u662f\u8986\u76d6EGA\u5b57\u4f53\u7684\u6700\u660e\u663e\u7684\u65b9\u6cd5\u3002\n\u5bf9\u4e8e\u4e0a\u9762\u6709IBM\u540d\u79f0\u7684\u4e1c\u897f\uff0cEGASET\u5b9e\u7528\u7a0b\u5e8f\u76f8\u5f53\u795e\u79d8\u3002\u7136\u800c\uff0c\u5982\u679c\u5b83\u53ea\u662f\u7531IBM ROECE\u53d1\u5e03\u7684\u8bdd\uff0c\u5b83\u53ef\u80fd\u6700\u7ec8\u51e0\u4e4e\u5b8c\u5168\u843d\u5728\u94c1\u5e55\u540e\u9762\uff0c\u5927\u7ea61991\u5e74\u4ee5\u524d\u7684\u5927\u90e8\u5206\u8ba1\u7b97\u5386\u53f2\u51e0\u4e4e\u5b8c\u5168\u6d88\u5931\u4e86\u3002\n\u63d0\u4f9b\u7684CSEGA14\u3002FNT\u5b57\u4f53\u65e5\u671f\u4e3a1988\u5e741\u6708\u3002CZHPFNT\u6863\u6848\u975e\u5e38\u6709\u529b\u5730\u8868\u660e\uff0cIBM ROECE\u786e\u5b9e\u4e3a\u81f3\u5c11\u4e00\u4e9b\u4e1c\u6b27\u56fd\u5bb6\u63d0\u4f9b\u4e86\u67d0\u79cd\u5f62\u5f0f\u7684\u56fd\u5bb6\u8bed\u8a00\u652f\u6301\uff0c\u5c3d\u7ba1\u8fd9\u79cd\u652f\u6301\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u5b50\u5c1a\u4e0d\u6e05\u695a\u3002\u9664\u4e86\u53c2\u4e0eEGASET\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u5916\uff0cIBM ROECE\u662f\u5426\u4e0eCZHPFNT\u5f52\u6863\u6587\u4ef6\u6709\u4efb\u4f55\u5173\u7cfb\u751a\u81f3\u5c1a\u4e0d\u6e05\u695a\u3002\u5305\u542b\u7684\u5b57\u4f53\u4ec5\u5305\u542b\u539f\u59cb\u5b57\u4f53\u6570\u636e\u548c\u5b58\u6863\u7684\u81ea\u8ff0\u6587\u4ef6\u3002TXT\u4e5f\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u7ebf\u7d22\u3002\n\u56e0\u4e3a\u627e\u5230KEYBCS2\u5b9e\u7528\u7a0b\u5e8f\u975e\u5e38\u56f0\u96be\uff0c\u6240\u4ee5\u6211\u548c\u5176\u4ed6\u51e0\u4e2a\u4eba\u4e00\u8d77\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e86\u5b83\u3002\u539f\u6765\u7684\u952e\u76d8BCS2\u4e0d\u518d\u5de5\u4f5c\u3002\u5305\u62ecEXE\u548c\u6211\u7684\u201c\u89e3\u9501\u201d\u952eBCS2\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u5305\u62ec\u51e0\u4e2a\u53ef\u9009\u7684\u952e\u76d8\u548c/\u6216\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\uff1b\u90a3\u4e9b\u6377\u514b\u4eba\u3002EXE\u662f\u6700\u65b0\u3001\u6700\u65b0\u5947\u7684\uff0c\u5b83\u7684\u4f20\u7edf\u5185\u5b58\u5360\u7528\u6700\u5c0f\uff0c\u5e76\u4e14\u652f\u6301Kamenick\u00fd\u3001CP852\u3001CP1250\u548cISO 8859-2\u7f16\u7801\u7684\u952e\u76d8/\u663e\u793a\u5668\u3002\n\u5c3d\u7ba1DOS 5.0\u53ca\u66f4\u9ad8\u7248\u672c\u63d0\u4f9b\u4e86\u529f\u80fd\u5b8c\u5584\u7684\u5185\u7f6e\u952e\u76d8\u548c\u5b57\u4f53\u652f\u6301\uff0c\u4f46\u5b83\u4ec5\u9650\u4e8eCP852\uff1b\u7b2c\u4e09\u65b9\u5b9e\u7528\u7a0b\u5e8f\u5f80\u5f80\u66f4\u5f3a\u5927\u3001\u66f4\u7075\u6d3b\uff0c\u540c\u65f6\u9700\u8981\u66f4\u5c11\u7684\u5185\u5b58\u3002", "note_en": "After writing about the likely origins of  IBM code page 852, I thought I should revisit the homegrown Czech alternative solution, the Kamenick\u00fd brothers encoding and their keyboard driver. Its existence is well documented, and the so-called (somewhat misnamed)  KEYBCS2 encoding even has its own Wikipedia article. The encoding itself lives on in various conversion tables, and utilities to convert text to or from the Kamenick\u00fd encoding are easy enough to locate.\n But finding the actual KEYBCS2 utility turned out to be ridiculously difficult. I scoured the Internet for it. I could not find it. At all. I found a fair amount of text  talking about it, but not the actual utility.\n In desperation, I started searching my NAS. I must have had the utility in the early 1990s, but after I switched to primarily using OS/2 in the mid-1990s, the DOS keyboard driver wasn\u2019t all that useful, and OS/2 had its own reasonably well functioning support using CP852 compatible with the built-in DOS support.\n After much searching, I found an archive with KEYBCS2.EXE dated 07/27/90 on my NAS. Sadly, all my attempts to run it ended up in failure:\n  Obviously I was not  trying to debug the program, but I was  forced to do so.\n  Looking at KEYBCS2.EXE in a hex editor showed no obvious strings; in fact it all looked pretty random. But examining the memory of a VM showing the silly error message revealed a suspicious looking string:  Program LOCK Version 1.10 (C) 1989 J.Belonoznik. Okay, some daft anti-debugging program wrapper, but why does it think I\u2019m debugging it when I\u2019m not?\n  After analyzing the \u201cprogram lock\u201d, I discovered that it inadvertently prevents \u201clocked\u201d programs from running on any halfway modern CPU. The last processor generation it worked on is the 486, but on a Pentium or newer it always fails with a \u201cDebugging is not allowed\u201d message.\n The reason for that is (unsurprisingly) debugger detection. The lock code detects modifications to itself, which presumably catches any INT3 breakpoints. And it detects single-stepping by using self-modifying code. It looks approximately (not exactly) like this:\n xor ax, ax lea bx, mod_code mov byte ptr [bx], 90h ; NOP opcode jmp short $+2 mov byte ptr [bx], 40h ; INC AX opcodemod_code: nop ; Modified instruction cmp ax, 1 ; Is AX zero or one?\n This code relies on the existence of a software-visible prefetch queue on old x86 CPUs. Up to and including the Intel 486, the code will execute a NOP instruction. The second MOV overwrites the instruction in memory, but the next instruction is already in the prefetch queue and will be executed as it was after the jump which flushed the prefetch queue.\n On the Pentium and later CPUs, the processor detects a write to code which is currently in the prefetch queue, flushes the queue, and executes the modified code. With effort, the detection could be fooled on a Pentium (not Pentium Pro), because it goes by linear rather than physical address, but it\u2019s quite good enough to detect this instance of self-modifying code.\n As a consequence, the \u201cdebugger detection\u201d is guaranteed to fail on Pentium and later processors. Obviously the code was written in 1989, if not earlier, and its author merely failed to predict the future.\n The upshot is that the \u201canti-debugging\u201d code serves as a rather effective timebomb which can not be worked around by simply setting the clock back.\n  I considered various approaches to making the protected KEYBCS2.EXE run on systems with CPUs newer than a 486. The protection is good enough that patching the protected executable is difficult. It checks its own integrity and uses XOR chains to decrypt the executable, which means that patching a byte here and there is quite involved.\n I considered writing some kind of a TSR that works around the protection by intercepting the INT 21h calls printing the error message, or a timer hook watching for the case where the code hangs itself. It didn\u2019t seem worth the effort.\n So\u2026 I considered the likelihood that the original protected program was a DOS .COM file (quite high). In that case, maybe after after the \u201cprogram lock\u201d shell is done, it reconstructs the original .COM image in memory. So I ran KEYBCS2.EXE, saved the memory contents, chopped off what didn\u2019t seem to belong, and re-saved what was left as KEYBCS2.COM. It worked.\n  But first I manually got past the debugger checks. Ironically, using a debugger. All I needed to do was to let the program execute a  JMP $ instruction to hang itself, patch it to change to  JMP $+2 (by simply setting the second byte to zero), and continue. There were two instances of those jumps, each being hit several times; that is why the message was printed five times total:\n  As it turns out, KEYBCS2 is a fairly fancy keyboard driver, and it takes up 10KB memory\u2013not an insignificant amount. One reason for the relatively high memory usage is a nifty configuration menu that can be popped up with Ctrl+Shift+F1:\n  The KEYBCS2 utility can dynamically switch between several possible keyboard layouts. \u201cStandard\u201d is untranslated BIOS input, while \u201cnational\u201d is Czech or Slovak keyboard layout. But there is also a \u201ccombined\u201d layout, really two layouts at once with the Ctrl key shifting to the \u201cother\u201d layout. There\u2019s even a dedicated keyboard layout for drawing \u201cgraphics\u201d:\n    The whole time I kept thinking, was there ever KEYBCS1? I found the answer in the online help for a KEYBDEF.EXE utility (found in the same archive as KEYBCS2.EXE) which allows users to define their own keyboard layouts for the KEYBCS2 driver:\n  Indeed there was a KEYBCS1 utility. It was the same as KEYBCS2 but without the pop-up configuration screen, and therefore presumably smaller. There was also a corresponding KEYBSL1 and KEYBSL2 utility which used the Slovak keyboard layout by default.\n It is clear that calling the Kamenick\u00fd encoding \u201cKEYBCS2\u201d is a bit silly because it is equally the KEYBCS1, KEYBSL1, and KEYBSL2 encoding. Note that the utility in fact refers to itself as \u201cKEYBxxy\u201d in its online help.\n Also note that some sources incorrectly claim that KEYBCS2 was a newer version of a supposed KEYBCS utility; it was not, because KEYBCS1 and KEYBCS2 were different variants of the same utility.\n  The way the Kamenick\u00fd encoding was designed was far from random. It was first put together circa 1986, in an era when VGA did not yet exist and EGA was a high-end adapter. Most PCs used MGA, CGA, or Hercules cards.\n The problem with those adapters was that apart from the Hercules Plus (only released in 1986), they all had fixed fonts in ROM. While replacing the character generator EPROM was often possible with many of those cards, it wasn\u2019t always an option for end users, and not everyone had the required equipment to begin with.\n The Kamenick\u00fd encoding was therefore chosen such that national characters were placed in locations where they more or less closely corresponded to visually similar glyphs in the standard IBM PC code page 437. That has two practical advantages: First, Czech or Slovak language text is legible (if ugly) even without customized fonts. Second, the Kamenick\u00fd encoding preserves all of the the CP437 line drawing characters, unlike CP852.\n Compare this screenshot of the once hugely popular Norton Commander when run with the Kamenick\u00fd encoding\n  with a screenshot of the same Norton Commander running with PC Latin 2 (CP852) encoding:\n  CP852 sacrificed some of the line-drawing characters in order to cover more languages. While that is a very reasonable compromise, most users only cared about a single language and preferred undisturbed line graphics instead.\n The encoding design also made sorting and case changes somewhat more difficult, because there was no simple algorithmic ordering of the national characters. But that was a problem solvable in software, whereas getting the right characters displayed in the first place wasn\u2019t necessarily just a question of software.\n The same kind of approach of minimally modifying CP437 was also (independently?) used by the Hungarian  CWI-1/CWI-2 encoding, and to a lesser extent by the Polish  Mazovia encoding.\n  An important point to note is that KEYBCS2 (indeed the entire KEYBxxy family) makes no attempt to do anything with screen fonts; it in fact does not necessarily require national screen fonts at all, as explained above.\n Then again, users with EGA or VGA hardware would have obviously  wanted to use proper fonts. Since KEYBCS2 offers no help, they must have used something else.\n In an old document, I found a mention of an EGASET utility that was reportedly used together with KEYBCS2. I quickly discovered that EGASET is not a terribly unique name. Then I found the right one in a  most unexpected place, in an archive called CZHPFNT.ZIP.\n It is a mystery where the CZHPFNT archive originated, but it\u2019s pretty clear when: April 1989. Imagine my surprise when I found an utility called KEYBCS3.COM included:\n  It is obviously an older version (the file timestamp is July 1987, the program itself indicates May 1987) of my KEYBCS2. I have no idea why it is called KEYBCS3, but it\u2019s not just a renamed file; the utility clearly calls itself KEYBCS3.\n I could not find any mention of KEYBCS3 anywhere. It is also unclear what the \u20183\u2019 means; it presumably means something, but the newer online help from 1990 only mentions KEYBCS1 and KEBYCS2 and the KEYBCS3 utility itself offers no hints.\n But that wasn\u2019t the only surprise in the CZHPFNT archive. When I ran the actual EGASET utility that I had been searching for, it showed  Copyright IBM Roece Inc. 1986 \u2014 that is the same IBM ROECE (Regional Office for Europe Central and East) mentioned in a  previous post:\n  Here\u2019s a menu that the EGASET utility pops up in response to an Alt + Right Shift key combination:\n  It appears that EGASET is really a generic EGA tweaking utility which happens to allow loading fonts. IBM ROECE probably ended up using it because that was the first thing they found, not because it\u2019s the most obvious method of overriding EGA fonts.\n For something with an IBM name on it, the EGASET utility is rather mysterious. Then again, if it was only distributed by IBM ROECE, it probably ended up almost exclusively behind the Iron Curtain where most of the circa pre-1991 computing history almost completely vanished.\n The supplied CSEGA14.FNT font is dated January 1988. The CZHPFNT archive very strongly suggests that IBM ROECE did offer some sort of national language support for at least some countries of the Eastern Bloc, although what  exactly that support looked like is very unclear. It is not even clear if IBM ROECE had anything to do with the CZHPFNT archive beyond being involved with the EGASET utility. The included font only contains raw font data, and the archive\u2019s README.TXT offers no clues either.\n  Because finding the KEYBCS2 utility was so insanely difficult, I made it available, together with several others,  here. The original no-longer-working KEYBCS2.EXE is included, together with my \u201cunlocked\u201d KEYBCS2.COM. Several alternative keyboard and/or display drivers are included; of those CZECH.EXE is the newest and fanciest, with minimal conventional memory footprint and keyboard/display support for Kamenick\u00fd, CP852, CP1250, and ISO 8859-2 encodings.\n Although DOS 5.0 and later came with perfectly functional built-in keyboard and font support, it was limited to CP852; the third-party utilities tend to be significantly more capable and flexible while needing less memory.", "posttime": "2022-02-20 11:55:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6309\u952e,keybcs2", "title": "\u6309\u952eBCS2", "title_en": "KEYBCS2", "transed": 1, "url": "https://www.os2museum.com/wp/keybcs2/", "via": "", "real_tags": ["\u6309\u952e", "keybcs2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074170, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Datalog\u662f\u4e00\u79cd\u57fa\u4e8eProlog\u7684\u903b\u8f91\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd1\u5e74\u6765\u4eba\u4eec\u5bf9Prolog\u7684\u5174\u8da3\u6709\u6240\u56de\u5347\u3002\u7279\u522b\u662f\uff0c\u6700\u8fd1\u7684\u51e0\u79cd\u6388\u6743\u65b9\u6cd5\uff08\u786e\u5b9a\u8c01\u53ef\u4ee5\u505a\u4ec0\u4e48\uff09\u4f7f\u7528\u6570\u636e\u65e5\u5fd7\u4f5c\u4e3a\u8bbf\u95ee\u63a7\u5236\u51b3\u7b56\u7684\u903b\u8f91\u57fa\u7840\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u9002\u5408\uff0c\u6709\u5f88\u591a\u5efa\u8bae\u3002\u81ea\u4ece2003\u5e74\u6211\u5f00\u59cb\u653b\u8bfb\u535a\u58eb\u5b66\u4f4d\u65f6\u7b2c\u4e00\u6b21\u63a5\u89e6\u5230Datalog\u4ee5\u6765\uff0c\u6211\u672c\u4eba\u5c31\u662fDatalog\u7684\u7c89\u4e1d\uff0c\u751a\u81f3\u5199\u8fc7\u5021\u5bfcDatalog\u7684\u8bba\u6587\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6211\u8ba4\u4e3a\u5b83\u6709\u5f88\u591a\u597d\u5904\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u7684\u4e00\u4e9b\u590d\u6742\u7ed3\u679c\u4ee4\u4eba\u56f0\u60d1\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5e76\u4e0d\u603b\u662f\u50cf\u4f60\u53ef\u80fd\u4f1a\u76f8\u4fe1\u7684\u90a3\u6837\u9002\u5408\u3002\nDatalog\u662fProlog\u7684\u4e00\u4e2a\u6e05\u7406\u7248\u672c\uff0c\u7531\u6570\u636e\u5e93\u793e\u533a\u521b\u5efa\uff0c\u8bd5\u56fe\u5c06\u903b\u8f91\u7f16\u7a0b\u6280\u672f\u4e0e\u5173\u7cfb\u6570\u636e\u5e93\u7ed3\u5408\u8d77\u6765\uff0c\u521b\u5efa\u6f14\u7ece\u6570\u636e\u5e93\u3002\u6211\u975e\u5e38\u5c0a\u91cd\u6570\u636e\u5e93\u793e\u533a\uff0c\u5f53\u4ed6\u4eec\u5bf9\u67d0\u4e2a\u4e3b\u9898\u611f\u5174\u8da3\u65f6\uff0c\u4ed6\u4eec\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u51e0\u4e4e\u603b\u662f\u503c\u5f97\u5173\u6ce8\u7684\u3002\uff08\u53e6\u8bf7\u53c2\u89c1\u5bf9SQL\u7684\u6ce8\u5165\u653b\u51fb\uff0c\u4ed6\u4eec\u901a\u8fc7\u53c2\u6570\u5316\u67e5\u8be2\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\u2014\u2014web\u6d4f\u89c8\u5668\u4ecd\u7136\u672a\u80fd\u4ee4\u4eba\u4fe1\u670d\u5730\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0cDatalog\u4ee5\u51e0\u79cd\u65b9\u5f0f\u6539\u8fdb\u4e86Prolog\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u6709\u7528\u7684\u6570\u636e\u5e93\u67e5\u8be2\u8bed\u8a00\uff1a\n\u5220\u9664\u6240\u6709\u975e\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982\u53ef\u6015\u7684\u201ccut\u201d\u548cI/O\u201c\u8c13\u8bcd\u201d\uff0c\u5b83\u4eec\u7834\u574f\u4e86Prolog\u7684\u903b\u8f91\u7eaf\u5ea6\u3002\n\u653e\u5f03Prolog\u81ea\u4e0a\u800c\u4e0b\u7684\u56de\u6eaf\u6267\u884c\u7b56\u7565\uff0c\u5373\u7a0b\u5e8f\u4e2d\u89c4\u5219\u7684\u987a\u5e8f\uff08\u6216\u89c4\u5219\u4e2d\u7684\u6761\u4ef6\uff09\u53ef\u4ee5\u6781\u5927\u5730\u6539\u53d8\u67e5\u8be2\u7684\u6b63\u786e\u6027\u3001\u6027\u80fd\u751a\u81f3\u7ec8\u6b62\u3002\u5728\u6570\u636e\u65e5\u5fd7\u4e2d\uff0c\u65e0\u8bba\u89c4\u5219\u4ee5\u4f55\u79cd\u987a\u5e8f\u51fa\u73b0\uff0c\u7a0b\u5e8f\u7684\u610f\u4e49\u548c\u6548\u7387\u90fd\u662f\u76f8\u540c\u7684\u3002\nDatalog\u5141\u8bb8\u60a8\u7f16\u5199\u826f\u597d\u7684\u903b\u8f91\u89c4\u5219\uff0c\u4f8b\u5982\u4ee5\u4e0b\u7ecf\u5178\u7684\u7956\u5148\u5b9a\u4e49\uff0c\u5373\u7236\u5173\u7cfb\u7684\u4f20\u9012\u95ed\u5305\uff1a\n\u5982\u679c\u60a8\u4e0d\u719f\u6089Prolog\u8bed\u6cd5\uff0c\u90a3\u4e48\u8fd9\u610f\u5473\u7740\u5982\u679c\u67d0\u4eba\u662f\u4ed6\u4eec\u7684\u7236\u6bcd\uff08\u7b2c\u4e00\u6761\u89c4\u5219\uff09\uff0c\u6216\u8005\u5982\u679c\u67d0\u4eba\u662f\u4ed6\u4eec\u7956\u5148\u7684\u5176\u4ed6\u4eba\u7684\u7236\u6bcd\uff0c\u90a3\u4e48\u67d0\u4eba\u5c31\u662f\u4ed6\u4eec\u7684\u7956\u5148\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\uff08\u800c\u4e14\u67af\u71e5\uff09\u7684\u4f8b\u5b50\uff0c\u6ca1\u6709\u591a\u5c11\u4eba\u9700\u8981\u7956\u4f20\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u4f46\u5b83\u6709\u671b\u8ba9\u60a8\u4e86\u89e3\u6570\u636e\u65e5\u5fd7\u5728\u7b80\u6d01\u5730\u8868\u8fbe\u5bf9\u8c61\u4e4b\u95f4\u5173\u7cfb\u65b9\u9762\u7684\u5f3a\u5927\u529f\u80fd\u3002\n\u57fa\u4e8e\u89c4\u5219\u7684\u58f0\u660e\u5f0f\u6388\u6743\u65b9\u6cd5\u5f88\u6709\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5141\u8bb8\u60a8\u5c06\u6b64\u7c7b\u89c4\u5219\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\u5de7\u5999\u5730\u5206\u5f00\uff08\u81f3\u5c11\u4eba\u4eec\u5e0c\u671b\u5982\u6b64\uff09\u3002\u6570\u636e\u65e5\u5fd7\u662f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u7279\u522b\u597d\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u89c4\u5219\u975e\u5e38\u5177\u6709\u8868\u73b0\u529b\u548c\u7b80\u6d01\u6027\uff0c\u8fd8\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u7ec4\u89c4\u5219\u6765\u786e\u5b9a\u7279\u5b9a\u7528\u6237\u662f\u5426\u5e94\u8be5\u8bbf\u95ee\u7279\u5b9a\u8d44\u6e90\uff1a\n\u5141\u8bb8\uff08\u64cd\u4f5c\u3001\u8d44\u6e90\u3001\u7528\u6237\uff09\u5982\u679c\u2026%\u793a\u4f8b-\u5141\u8bb8\u7528\u6237\u66f4\u65b0\u4ed6\u4eec\u62e5\u6709\u7684\u4efb\u4f55\u8d44\u6e90\uff1a\u5141\u8bb8\uff08\u66f4\u65b0\u3001\u8d44\u6e90\u3001\u7528\u6237\uff09\u5982\u679c\u6240\u6709\u8005\uff08\u8d44\u6e90\u3001\u7528\u6237\uff09\u3002\n\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u5b83\u6765\u68c0\u67e5\u662f\u5426\u5e94\u8be5\u5141\u8bb8\u7279\u5b9a\u7684\u8bf7\u6c42-allow\uff08update\uff0c\u201c/users/alice\u201d\uff0cbob\uff09\uff1f-\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u8be2\u95ee\u66f4\u4e00\u822c\u7684\u67e5\u8be2\uff0c\u4f8b\u5982\uff1a\u54ea\u4e2a\u7528\u6237\u53ef\u4ee5\u66f4\u65b0Alice\u7684\u4e2a\u4eba\u8d44\u6599\uff1a\u5141\u8bb8\uff08update\uff0c\u201c/users/Alice\u201d\uff0cuser\uff09\uff1f\u5728\u8fd9\u91cc\uff0c\u5e26\u5927\u5199\u5b57\u6bcd\u7684\u7528\u6237\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u89e3\u91ca\u5668\u5c06\u544a\u8bc9\u6211\u4eec\u8be5\u53d8\u91cf\uff08\u6240\u6709\u7528\u6237\uff09\u7684\u6240\u6709\u53ef\u80fd\u5b9e\u4f8b\u5316\uff0c\u5373\u8c01\u53ef\u4ee5\u66f4\u65b0\u8be5\u8d44\u6e90\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u76f8\u540c\u7684\u89c4\u5219\uff0c\u4ee5\u67e5\u770bBob\u53ef\u4ee5\u8bbf\u95ee\u7684\u6240\u6709\u8d44\u6e90\uff0c\u4ee5\u53ca\u4ed6\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u6267\u884c\u7684\u6240\u6709\u64cd\u4f5c\u3002\u5f53\u4f60\u60f3\u67e5\u770b\u8c01\u6709\u6743\u8bbf\u95ee\u4ec0\u4e48\u65f6\uff0c\u8fd9\u4e9b\u662f\u6388\u6743\u7cfb\u7edf\u4e2d\u975e\u5e38\u6709\u7528\u7684\u529f\u80fd\u3002\n\u6570\u636e\u65e5\u5fd7\u4e2d\u6700\u5bb9\u6613\u88ab\u8bef\u89e3\u7684\u90e8\u5206\u4e4b\u4e00\u662f\u5b83\u7684\u65f6\u95f4\u590d\u6742\u6027\uff1a\u968f\u7740\u67e5\u8be2\u201c\u5927\u5c0f\u201d\u7684\u589e\u957f\uff0c\u56de\u7b54\u67e5\u8be2\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u60a8\u7ecf\u5e38\u4f1a\u770b\u5230\u6570\u636e\u65e5\u5fd7\u67e5\u8be2\u4fdd\u8bc1\u5728\u201c\u591a\u9879\u5f0f\u65f6\u95f4\u201d\uff08\u800c\u4e0d\u662f\u6307\u6570\u65f6\u95f4\uff09\u5185\u7ec8\u6b62\u7684\u8bed\u53e5\u3002\u8fd9\u662f\u771f\u7684\uff0c\u4f46\u53ea\u6709\u5728\u72ed\u4e49\u4e0a\u624d\u80fd\u7406\u89e3\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u95ee\u201c\u591a\u9879\u5f0f\u5728\u4ec0\u4e48\u53d8\u91cf\u4e2d\uff1f\u201d\u5f53\u6211\u4eec\u8c08\u8bba\u5177\u6709\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u6027\u7684\u6570\u636e\u65e5\u5fd7\u65f6\uff0c\u6211\u4eec\u6307\u7684\u662f\u5b83\u7684\u6570\u636e\u590d\u6742\u6027\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4fee\u590d\u4e86\u4e00\u4e2a\u7ed9\u5b9a\u7684\u7a0b\u5e8f\uff08\u4e00\u7ec4\u89c4\u5219\uff09\uff0c\u90a3\u4e48\u968f\u7740\u4e8b\u5b9e\u6570\u636e\u5e93\u7684\u589e\u52a0\uff0c\u56de\u7b54\u67e5\u8be2\u6240\u9700\u7684\u65f6\u95f4\u4f1a\u53d1\u751f\u600e\u6837\u7684\u53d8\u5316\uff1f\u5728SQL\u672f\u8bed\u4e2d\uff0c\u8003\u8651\u7a0b\u5e8f\u662f\u6211\u4eec\u7684SQL\u67e5\u8be2\uff08\u6216\u89c6\u56fe\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u8be2\u95ee\u67e5\u8be2\u5728\u6211\u4eec\u7684\u8868\u53d8\u5927\u65f6\u8fd0\u884c\u591a\u957f\u65f6\u95f4\u3002\u8fd9\u662f\u5927\u591a\u6570\u4eba\u5728\u8c08\u8bba\u6570\u636e\u5e93\u65f6\u5173\u5fc3\u7684\u4e3b\u8981\u590d\u6742\u6027\u5ea6\u91cf\uff0c\u5b9e\u9645\u4e0a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u65e5\u5fd7\u5177\u6709\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u6027\u3002\n\u4f46\u8fd9\u662f\u6388\u6743\u590d\u6742\u6027\u7684\u9002\u5f53\u8861\u91cf\u6807\u51c6\u5417\uff1f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u8ba4\u4e3a\u60c5\u51b5\u51e0\u4e4e\u5b8c\u5168\u76f8\u53cd\u3002\u5728\u5178\u578b\u7684\u6388\u6743\u573a\u666f\u4e2d\uff0c\u6570\u636e\u7684\u5927\u5c0f\u57fa\u672c\u4e0a\u662f\u56fa\u5b9a\u7684\uff1a\u88ab\u8bbf\u95ee\u7684\u7279\u5b9a\u8d44\u6e90\u662f\u5df2\u77e5\u7684\uff0c\u7528\u6237\u5df2\u7ecf\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u88ab\u8bc6\u522b\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u67e5\u770b\u6574\u4e2a\u6570\u636e\u8868\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u505a\u51fa\u51b3\u7b56\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u8003\u8651\u5927\u91cf\u6388\u6743\u89c4\u5219\u3002\u56e0\u6b64\uff0c\u6570\u636e\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u89c4\u5219\u7684\u6570\u91cf\u662f\u53ef\u53d8\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9002\u5f53\u7684\u590d\u6742\u6027\u5ea6\u91cf\u79f0\u4e3a\u7a0b\u5e8f\u590d\u6742\u6027\uff0c\u574f\u6d88\u606f\u662fD atalog\u5177\u6709\u6307\u6570\u7ea7\u7684\u7a0b\u5e8f\u590d\u6742\u6027\uff01\n\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u53e6\u4e00\u4e2a\u56e0\u7d20\u662fDATALOG\u7684\u591a\u9879\u5f0f\u6570\u636e\u590d\u6742\u5ea6\u662f\u57fa\u4e8e\u6700\u57fa\u672c\u7684\u5f62\u5f0f\uff0c\u5b83\u4e0d\u5177\u6709\u51fd\u6570\u7b26\u53f7\uff08\u5982\u5217\u8868\u4e4b\u7c7b\u7684\u6570\u636e\u7c7b\u578b\uff09\u6216\u7b97\u672f\u3002\u4e00\u65e6\u4f60\u5f00\u59cb\u6dfb\u52a0\u8fd9\u6837\u7684\u7279\u6027\uff08\u51e0\u4e4e\u6240\u6709\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u65e5\u5fd7\u90fd\u4f1a\u8fd9\u6837\u505a\uff09\uff0c\u6570\u636e\u7684\u590d\u6742\u6027\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u589e\u52a0\u3002\n\u6570\u636e\u65e5\u5fd7\u7684\u6307\u6570\u7ea7\u7a0b\u5e8f\u590d\u6742\u6027\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u5b83\u5e76\u6ca1\u6709\u9003\u8131\u5b66\u672f\u754c\u5bf9\u6570\u636e\u65e5\u5fd7\u7684\u6388\u6743\u5904\u7406\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u7bc7\u6709\u5f71\u54cd\u529b\u7684\u8bba\u6587\u662f\u201cDATACORE\u4e0e\u7ea6\u675f\uff1a\u4fe1\u4efb\u7ba1\u7406\u8bed\u8a00\u7684\u57fa\u7840\u201d\uff0c\u8fd9\u5df2\u7ecf\u88ab\u997c\u5e72\u5f00\u53d1\u8005\u6240\u5f15\u7528\u3002\u672c\u6587\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u6269\u5c55\u6570\u636e\u65e5\u5fd7\u6765\u6784\u5efa\u5f3a\u5927\u7684\u6388\u6743\u903b\u8f91\u3002\u4f46\u4ed6\u4eec\u5728\u90a3\u7bc7\u8bba\u6587\u4e2d\u6784\u5efa\u7684\u5b9e\u9645\u6388\u6743\u7cfb\u7edf\u662f\u57fa\u4e8e\u4e00\u4e2a\u540d\u4e3aRT\u7684\u7cfb\u7edf\uff0c\u5b83\u6bd4\u6570\u636e\u65e5\u5fd7\u66f4\u63a5\u8fd1\u63cf\u8ff0\u903b\u8f91\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u5c06\u8fd9\u79cd\u66f4\u53d7\u9650\u5236\u7684\u8bed\u8a00\uff08\u5177\u6709\u591a\u9879\u5f0f\u7a0b\u5e8f\u590d\u6742\u6027\uff09\u8f6c\u6362\u4e3a\u4ed6\u4eec\u7684\u6570\u636e\u65e5\u5fd7\u53d8\u4f53\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e9b\u63cf\u8ff0\u903b\u8f91\u63a8\u7406\u8005\u6240\u505a\u7684\u3002\n\u63cf\u8ff0\u903b\u8f91\u5171\u4eab\u6570\u636e\u65e5\u5fd7\u7684\u4e00\u4e9b\u826f\u597d\u7279\u6027\uff0c\u5e76\u4e14\u5bf9\u5177\u6709\u4e00\u7cfb\u5217\u65f6\u95f4\u590d\u6742\u6027\u7684\u63cf\u8ff0\u903b\u8f91\u53d8\u4f53\u8fdb\u884c\u4e86\u5927\u91cf\u7814\u7a76\u3002\u5982\u679c\u4f60\u5bf9\u6388\u6743\u7684\u903b\u8f91\u65b9\u6cd5\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u8fd9\u5f53\u7136\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u4e3b\u4e49\u3002\n\u5728\u53e6\u4e00\u4e2a\u6781\u7aef\uff0c\u6211\u4eec\u73b0\u5728\u770b\u5230\u4e86\u8c37\u6b4c\u6851\u7ed9\u5df4\u5c14\uff08Google Zanzibar\uff09\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u5b83\u663e\u7136\u53ef\u4ee5\u6269\u5c55\u5230\u6570\u4e07\u4ebf\u4e2aACL\u6761\u76ee\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u8bed\u8a00\u6765\u5b9a\u4e49\u89d2\u8272\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u4f8b\u5982\uff0c\u6587\u6863\u7684\u6240\u6709\u7f16\u8f91\u4e5f\u90fd\u662f\u67e5\u770b\u8005\uff09\u3002\u540c\u6837\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\uff08\u975e\u5e38\u6709\u9650\u7684\uff09\u63cf\u8ff0\u903b\u8f91\uff0c\u5c3d\u7ba1\u5b83\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u89c4\u6a21\u7684\u5b9e\u73b0\uff01\n\u53e6\u4e00\u65b9\u9762\uff0c\u63cf\u8ff0\u903b\u8f91\uff08can\uff09\u6bd4\u6570\u636e\u65e5\u5fd7\u5177\u6709\u66f4\u597d\u7684\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u8fd9\u4e00\u540c\u6837\u7684\u63a8\u7406\u4fc3\u4f7f\u6211\u5c06\u6211\u7684\u535a\u58eb\u8bba\u6587\u5efa\u7acb\u5728\u5b83\u4eec\u4e4b\u4e0a\uff0c\u8fd9\u662f\u6211\u7ecf\u5e38\u540e\u6094\u7684\u51b3\u5b9a\u3002\u5bf9\u4e8e\u90a3\u4e9b\u66f4\u4e25\u683c\u7684\u590d\u6742\u5ea6\u754c\u9650\uff0c\u53d6\u820d\u662f\u4e00\u79cd\u8868\u8fbe\u80fd\u529b\u8981\u4f4e\u5f97\u591a\u7684\u8bed\u8a00\uff0c\u6211\u7ecf\u5e38\u9047\u5230\u4e00\u4e9b\u6982\u5ff5\uff0c\u8fd9\u4e9b\u6982\u5ff5\u5728\u63cf\u8ff0\u903b\u8f91\u4e2d\u5f88\u96be\u6216\u4e0d\u53ef\u80fd\u8868\u8fbe\uff0c\u4f46\u5728\u6570\u636e\u65e5\u5fd7\u4e2d\u5f88\u7b80\u5355\u3002\uff08\u4e5f\u6709\u66f4\u5177\u8868\u73b0\u529b\u7684\u63cf\u8ff0\u903b\u8f91\uff0c\u4f46\u6211\u4ecd\u7136\u53d1\u73b0\u5b83\u4eec\u5f88\u96be\u4f7f\u7528\uff09\u3002\n\u6700\u7ec8\uff0c\u6211\u8ba4\u4e3a\u57fa\u4e8e\u903b\u8f91\u7684\u65b9\u6cd5\u6765\u5b9a\u4e49\u6388\u6743\u7b56\u7565\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002\u4f5c\u4e3a\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6570\u636e\u65e5\u5fd7\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u4f46\u6211\u4e0d\u4f1a\u8bf4\u5b83\u5728\u8fd9\u65b9\u9762\u662f\u552f\u4e00\u6709\u6548\u7684\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5e94\u7528\u4e8e\u6570\u636e\u65e5\u5fd7\u7684\u4e00\u4e9b\u6269\u5c55\u5c06\u5176\u63a8\u5411\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684Prolog\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e9b\u6269\u5c55\u610f\u5916\u5730\u56fe\u7075\u5b8c\u6210\uff0c\u6211\u4e5f\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\uff1a\u7eafProlog\uff08\u4e0d\u5e26\u7c97\u679d\u5927\u53f6\uff09\u4e5f\u662f\u4e00\u79cd\u4f18\u79c0\u7684\u8bed\u8a00\uff0c\u5982\u679c\u4f60\u4e0d\u63a5\u53d7\u7528\u6237\u5b9a\u4e49\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u907f\u514d\u75c5\u6001\u7684\u6027\u80fd\u6848\u4f8b\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4f60\u60f3\u7528\u975e\u5e38\u7b80\u5355\u7684\u89c4\u5219\u6269\u5c55\u5230\u5927\u91cf\u7684\u5b9e\u4f53\uff0c\u90a3\u4e48\u5728\u6211\u770b\u6765\uff0c\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u63cf\u8ff0\u903b\u8f91\u65b9\u8a00\u975e\u5e38\u9002\u5408\u3002\u53ea\u662f\u8981\u6ce8\u610f\u8868\u8fbe\u80fd\u529b\u7684\u6743\u8861\u3002\u90a3\u91cc\u6709\u4e00\u68f5\u5de8\u5927\u7684\u903b\u8f91\u6811\uff0c\u4e0d\u9700\u8981\u53ea\u6302\u5728\u4e00\u4e2a\u5206\u652f\u4e0a\u3002", "note_en": "Datalog is a logic programming language, based on Prolog, which is seeing something of a resurgence in interest in recent years. In particular,  several  recent  approaches to authorization (working out who can do what) have used Datalog as the logical basis for access control decisions. On the face of it, this seems like a perfect fit, and there\u2019s a lot to recommend it. I myself have been a fan of Datalog since first coming across it at the start of my PhD studies back in 2003, and have even  written papers advocating for it. However, although I think it has a lot of benefits, I think there is some confusion about some of its complexity results that means it is not always as good a fit as you may be led to believe.\n   Datalog is a cleaned up version of Prolog, created by the database community as an attempt to marry logic programming techniques with relational databases to create deductive databases. I have a great deal of respect for the database community, and when they take an interest in a topic it\u2019s almost always worth paying attention to the solutions they come up with. (See also  injection attacks on SQL, which they neatly solved with  parameterized queries \u2014 something web browsers have  still failed to solve convincingly). In this case, Datalog improved Prolog in several ways to make it useful as a database query language:\n Removing all the  non-logical operators, such as the dreaded \u201ccut\u201d and I/O \u201cpredicates\u201d, which destroy the logical purity of Prolog.\n  Discarding Prolog\u2019s top-to-bottom backtracking execution strategy, where the order of rules in a program (or conditions in a rule) can drastically alter the correctness, performance or even termination of a query. In Datalog, the meaning and efficiency of a program is the same no matter what order the rules appear in.\n Datalog allows you to write nice logical rules, such as the following classic definition of an ancestor as being the transitive closure of a parent relation:\n  If you\u2019re not familiar with Prolog syntax, then this says that a person is an ancestor of someone if they are their parent (the first rule), or if they are the parent of someone else who is an ancestor of them. This is a pretty basic (and dull) example, and not many people have a need for ancestral access control, but it hopefully gives you an idea of the power of Datalog for succinctly expressing relationships between objects.\n  Declarative rule-based approaches to authorization are attractive because they allow you to neatly separate such rules from the business logic of your application (or that\u2019s what people hope, at least). Datalog is a particularly nice approach to this, because the rules are very expressive and concise, and also because it provides some useful features. For example, suppose we defined a set of rules to determine if a particular user should have access to a particular resource:\n allow(Operation, Resource, User) if \u2026 % Example - allow a user to update any resource they own: allow(update, Resource, User) if  owner(Resource, User).\n We can call this to check if a particular request should be allowed \u2014  allow(update, \u201c/users/alice\u201d, bob)? \u2014 but we can also ask more general queries, such as: which user\u2019s can update Alice\u2019s profile:  allow(update, \u201c/users/alice\u201d, User)? Here  User with a capital letter is a variable and the interpreter will tell us all possible instantiations of that variable (all users) for which the query is true: i.e., who can update that resource. Likewise, we can query the same rules to see all resources that Bob can access, and all operations he can perform on them. These are incredibly useful features to have in an authorization system when you want to review who has access to what.\n  One of the most misunderstood parts of Datalog refers to its  time complexity: how long it takes to answer a query as the \u201csize\u201d of that query grows. You will often see statements that Datalog queries are guaranteed to terminate in \u201cpolynomial time\u201d (as opposed to exponential time). This is true, but only when taken in a very narrow sense.\n First of all, we have to ask \u201cpolynomial in what variable?\u201d When we talk about Datalog having polynomial time complexity, we are referring to its  data complexity. That is, if we fix a given program (set of rules), how does the time needed to answer a query change as the size of the database of facts increases? In SQL terms, consider the program to be our SQL query (or views) and we\u2019re asking how much longer that query takes to run as our tables get bigger. This is the primary complexity measure that most people care about when talking about databases, and indeed in this case Datalog has polynomial time complexity.\n But is this the appropriate measure of complexity for authorization? In this case I would argue that the situation is almost entirely reversed. In a typical authorization scenario, the data is largely of fixed size: the specific resource being accessed is known and the user has already been identified by authentication, so we don\u2019t need to look at a whole tables of data. On the other hand, there can be very large numbers of authorization rules that have to be considered to make that decision. So the size of data is fixed, but the number of rules is variable. In this case, the appropriate complexity measure is known as  program complexity and the bad news is that D atalog has exponential program complexity!\n The other factor we need to consider is that the polynomial data complexity of Datalog is based on the most basic form, which doesn\u2019t have function symbols (ie datatypes like lists) or arithmetic. Once you start adding such features (which almost all real-world Datalogs do), the data complexity inevitably goes up.\n  The exponential program complexity of Datalog is well-known, and it has not escaped academic treatments of Datalog for authorization. An influential paper in this regard is \u201c Datalog with Constraints: A Foundation for Trust Management Languages\u201d, which has been referenced by the developers of  Biscuit. This paper shows how to build a powerful authorization logic by extending Datalog. But the actual authorization system they build in that paper is based on a system called RT, which is much closer to a  description logic than Datalog. They then translate this more restricted language (which has polynomial program complexity) into their Datalog variant, which is something  some description logic reasoners also do.\n Description logics share some of the good properties of Datalog, and there has been a lot of research into description logic variants with a  range of time complexities. So that is certainly one alternative formalism to look at if you are interested in logical approaches to authorization.\n On the other extreme, we are now seeing approaches like  Google Zanzibar, which apparently scales to trillions of ACL entries and uses a very minimal language to define relationships between roles (such as that all editors of a document are also viewers). Again, to my eyes this looks like a (very restricted) description logic to me, albeit one with a very large-scale implementation!\n On the other hand, this same reasoning that description logics (can) have better worst-case time complexity than Datalog led me to base my PhD thesis on them, which was a decision I frequently regretted. The trade-off for those tighter complexity bounds is a much less expressive language, and I frequently ran into concepts that were hard or impossible to express in description logic but would\u2019ve been simple in Datalog. (There are much more expressive description logics too, but I still find them hard to work with).\n  Ultimately, I think logic-based approaches to defining authorization policies are an excellent idea. As an example of that approach, Datalog is still an excellent choice. But I wouldn\u2019t say it is uniquely effective in this area. Some of the extensions applied to Datalog in practice push it more towards a full-blown Prolog, and I wouldn\u2019t be surprised if some of these are accidentally Turing-complete. This is not a bad thing: pure Prolog (without the cruft) is also an excellent language, and if you\u2019re not accepting user-defined policies then you can avoid pathological performance cases.\n On the other hand, if you want to scale to very large numbers of entities with only very simple rules then some of the lighter-weight description logic dialects are, IMO, an excellent fit. Just be aware of the expressiveness trade-off. There\u2019s an enormous tree of logics out there, no need to get hung up on just one branch.", "posttime": "2022-02-20 11:51:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,good", "title": "\u6570\u636e\u65e5\u5fd7\u662f\u4e00\u79cd\u5f88\u597d\u7684\u6388\u6743\u8bed\u8a00\u5417\uff1f", "title_en": "Is Datalog a good language for authorization?", "transed": 1, "url": "https://neilmadden.blog/2022/02/19/is-datalog-a-good-language-for-authorization/", "via": "", "real_tags": ["\u6570\u636e", "good"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074168, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Epic Games\u5728\u7f8e\u56fd\u96c7\u4f63\u5168\u804c\u4e34\u65f6\u5458\u5de5\uff0c\u5e76\u63d0\u4f9b\u798f\u5229\uff0cEpic\u5df2\u63a5\u8fd1\u5c3e\u58f0\u3002Fortnite\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u5411\u8d28\u91cf\u4fdd\u8bc1\uff08QA\uff09\u6d4b\u8bd5\u4eba\u5458\u4ee5\u53ca\u5176\u4ed6\u201c\u5408\u683c\u201d\u7684\u5408\u540c\u5458\u5de5\u63d0\u4f9b\u670d\u52a1\u3002\n\u8fd9\u6761\u6d88\u606f\u9996\u5148\u51fa\u73b0\u5728Verge\u83b7\u5f97\u7684\u4e00\u4efd\u9762\u5411\u5458\u5de5\u7684\u5907\u5fd8\u5f55\u4e2d\u3002\u5728\u5907\u5fd8\u5f55\u4e2d\uff0c\u8be5\u516c\u53f8\u5199\u9053\uff0c\u5b83\u5c06\u201c\u4e3a\u7b26\u5408\u6761\u4ef6\u7684\u7f8e\u56fd\u4e34\u65f6\u5458\u5de5\u63d0\u4f9b\u968f\u610f\u7684\u5168\u804c\u5de5\u4f5c\u673a\u4f1a\u201d\uff0c\u5e76\u4e14\u201c\u5176\u4e2d\u8bb8\u591a\u5de5\u4f5c\u673a\u4f1a\u5c06\u4e8e2022\u5e744\u67084\u65e5\u751f\u6548\u3002\u201d\u4f46\u5b83\u4e5f\u6307\u51fa\uff0c\u4e00\u4e9b\u5458\u5de5\u4e0d\u4f1a\u6536\u5230\u8be5\u63d0\u8bae\uff0c\u7406\u7531\u662f\u201c\u6709\u4e00\u4e9b\u4f8b\u5916\u60c5\u51b5\uff0c\u5bf9\u4e8e\u5458\u5de5\u548cEpic\u6765\u8bf4\uff0c\u4fdd\u6301\u4e34\u65f6\u5458\u5de5\u8eab\u4efd\u662f\u6709\u610f\u4e49\u7684\u3002\u201d\nEpic\u53d1\u8a00\u4ebaElka Looks\u544a\u8bc9Verge\uff0c\u6e38\u620f\u5f00\u53d1\u5546\u5c06\u96c7\u4f63\u201c\u51e0\u767e\u201d\u540d\u627f\u5305\u5546\uff0c\u201c\u5927\u90e8\u5206\u4f46\u4e0d\u662f\u5168\u90e8\u201d\u662f\u8d28\u91cf\u4fdd\u8bc1\uff08QA\uff09\u6d4b\u8bd5\u4eba\u5458\u3002Looks\u8bc1\u5b9e\uff0c\u6240\u6709\u5458\u5de5\u90fd\u6709\u8d44\u683c\u4eab\u53d7\u516c\u53f8\u7684\u7f8e\u56fd\u5458\u5de5\u798f\u5229\u8ba1\u5212\uff0c\u4e5f\u5c06\u76f4\u63a5\u53d7\u96c7\u4e8eEpic Games\u3002\u8be5\u5de5\u4f5c\u5ba4\u76ee\u524d\u901a\u8fc7\u5305\u62ec\u4f0a\u65af\u7279\u91cc\u5947\uff08Eastridge\uff09\u3001\u6d77\u65af\uff08Hays\uff09\u548c\u5c3c\u514b\u65af\u5854\u592b\uff08Nextaff\uff09\u5728\u5185\u7684\u4e34\u65f6\u673a\u6784\u5c06QA\u6d4b\u8bd5\u4eba\u5458\u548c\u5176\u4ed6\u5de5\u4f5c\u4eba\u5458\u5916\u5305\u51fa\u53bb\u3002\n\u4e0d\u8fc7\uff0cLooks\u8fd8\u8868\u793a\uff0c\u516c\u53f8\u4ecd\u5c06\u4e3a\u201c\u77ed\u671f\u9700\u6c42\u201d\u96c7\u4f63\u4e34\u65f6\u5458\u5de5\u3002\u5979\u6ca1\u6709\u4efb\u4f55\u5173\u4e8eEpic\u5c06\u96c7\u4f63\u7684\u5176\u4ed6\u7c7b\u578b\u4e34\u65f6\u5458\u5de5\uff08QA\u6d4b\u8bd5\u4eba\u5458\u9664\u5916\uff09\u7684\u5176\u4ed6\u4fe1\u606f\u53ef\u4f9b\u5206\u4eab\uff0c\u4e5f\u6ca1\u6709\u5177\u4f53\u8bf4\u660e\u54ea\u4e9b\u5458\u5de5\u88ab\u6392\u9664\u5728\u62a5\u4ef7\u4e4b\u5916\u3002\nEpic\u5c06\u5176\u57fa\u4e8e\u5408\u540c\u7684\u5458\u5de5\u53d8\u6210\u5168\u804c\u5458\u5de5\u7684\u4e3e\u52a8\u53d1\u751f\u5728\u5458\u5de5\u4e0e\u4e3b\u8981\u6e38\u620f\u5f00\u53d1\u5de5\u4f5c\u5ba4\u4e4b\u95f4\u5173\u7cfb\u7d27\u5f20\u7684\u65f6\u5019\uff1b\u66f4\u4e0d\u7528\u8bf4\uff0c\u8fd9\u662f\u6539\u5584QA\u6d4b\u8bd5\u4eba\u5458\u548c\u5176\u4ed6\u5de5\u4eba\u5de5\u4f5c\u6761\u4ef6\u7684\u4e00\u5927\u6b65\u3002\u53bb\u5e7412\u6708\uff0cActivision\u7684Raven\u8f6f\u4ef6\u89e3\u96c7\u4e86\u5341\u51e0\u540dQA\u6d4b\u8bd5\u4eba\u5458\uff0c\u5f15\u53d1\u4e86\u7f62\u5de5\uff0c\u540e\u6765\u53c8\u6210\u7acb\u4e86\u6e38\u620f\u5de5\u4f5c\u8005\u8054\u76df\u8054\u76df\uff08Game Workers Alliance union\uff09\u3002\n\u6e38\u620f\u884c\u4e1a\u56e0\u8ba9\u5458\u5de5\u5728\u88ab\u79f0\u4e3a\u201c\u7d27\u7f29\u201d\u7684\u65f6\u671f\uff08\u6709\u65f6\u662f\u65e0\u85aa\u7684\uff09\u957f\u65f6\u95f4\u5de5\u4f5c\u800c\u95fb\u540d\uff0cEpic\u4e5f\u4e0d\u4f8b\u5916\u30022019\u5e74\uff0cEpic\u7684\u5de5\u4f5c\u4eba\u5458\u900f\u9732\u4e86\u8ba9\u5e7f\u53d7\u6b22\u8fce\u7684\u7687\u5bb6\u6218\u6597Fortnite\u4fdd\u6301\u5728\u7c89\u4e1d\u671f\u671b\u7684\u8f68\u9053\u4e0a\u7684\u6f2b\u957f\u5de5\u4f5c\u65e5\u540e\uff0cEpic\u906d\u5230\u4e86\u6279\u8bc4\u3002Epic Games\u540e\u6765\u56e0\u5458\u5de5\u7684\u62c5\u5fe7\u5173\u95ed\u4e86\u5de5\u4f5c\u5ba4\u4e24\u5468\u3002\n\u53bb\u5e74\uff0cEpic Games\u7ec8\u6b62\u4e86\u65b0\u51a0\u75c5\u6bd2\u65f6\u4ee3\u7684\u653f\u7b56\uff0c\u5141\u8bb8\u5458\u5de5\u6bcf\u9694\u5468\u4e94\u4f11\u5047\u4e00\u6b21\uff0c\u8fd9\u8ba9\u5458\u5de5\u611f\u5230\u4e0d\u5b89\uff0c\u4ed6\u4eec\u8bf4\u989d\u5916\u7684\u4e00\u5929\u4f11\u5047\u662f\u6709\u76ca\u7684\u3002\u8bb8\u591a\u72ec\u7acb\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u8fc7\u6e21\u5230\u6bcf\u5468\u5de5\u4f5c\u56db\u5929\uff0c\u5305\u62ec\u5c0f\u9a6c\u3001\u4e4c\u9e26\u3001Die Gute Fabrik\u7b49\u3002", "note_en": "Epic Games is hiring its US-based contingent workers full-time and with benefits, Epic confirmed to  The Verge. The  Fortnite developer is extending the offer to quality assurance (QA) testers, as well as other \u201celigible\u201d contract-based employees.\n The news first surfaced in an employee-facing memo obtained by  The Verge. In the memo, the company writes it will \u201coffer full-time at-will employment to eligible US-based contingent workers,\u201d and that \u201cmany of those offers will be effective April 4th, 2022.\u201d But it also notes that some workers won\u2019t receive the offer, citing \u201cthere are a few exceptions in which it makes sense for both the worker and Epic to maintain contingent worker status.\u201d\n  Epic spokesperson Elka Looks told  The Verge that the game developer will hire \u201ca few hundred\u201d of its contractors, and that \u201cmost but not all\u201d are quality assurance (QA) testers. Looks confirmed that all the workers will be eligible for the company\u2019s US employee benefits plans, and will also be directly employed by Epic Games. The studio currently contracts out QA testers and other workers through temp agencies, including Eastridge, Hays, and Nextaff.\n Looks also said the company will still hire contingent workers for \u201cshort-term needs,\u201d however. She didn\u2019t have any additional information to share about the other types of contingent workers (outside of QA testers) Epic will be hiring, and didn\u2019t specify which workers are excluded from the offer.\n Epic\u2019s move to make its contract-based workers full-time employees comes at a time when tensions between workers and major game development studios are high; not to mention that it\u2019s a huge step towards improving working conditions for QA testers and other workers. In December, Activision\u2019s Raven Software  laid off a dozen QA testers,  prompting a walkout, and later  the organization of the Game Workers Alliance union.\n The game industry has become known for subjecting workers to  incredibly long hours during (sometimes unpaid) periods called \u201ccrunch,\u201d and Epic is no exception. In 2019, Epic was met with criticism after its  workers revealed the long workdays that go into keeping the wildly-popular battle royale,  Fortnite, on track with fans\u2019 expectations.  Epic Games later closed its studios for two weeks in response to employees\u2019 concerns.\n Last year,  Epic Games ended its COVID-era policy that let workers take every other Friday off, upsetting employees who say the extra day off is beneficial. A number of independent developers  have transitioned to the four-day workweek, including Young Horses, Crow Crow Crow, Die Gute Fabrik, and more.", "posttime": "2022-02-20 11:37:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "games,\u5458\u5de5", "title": "Epic Games\u6b63\u5728\u5c06\u6570\u767e\u540d\u4e34\u65f6\u6d4b\u8bd5\u4eba\u5458\u57f9\u517b\u6210\u6709\u798f\u5229\u7684\u6b63\u5f0f\u5458\u5de5", "title_en": "Epic Games is making hundreds of temp testers into full employees with benefits", "transed": 1, "url": "https://www.theverge.com/2022/2/19/22942053/epic-games-full-time-employment-contingent-workers", "via": "", "real_tags": ["games", "\u5458\u5de5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074167, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u865a\u62df\u673a\uff1f\u662f\u7684\uff0c\u4f46\u4e0d\u662fJava\u865a\u62df\u673a\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u91cd\u70b9\u4e3a\u60a8\u63d0\u4f9b\u5bf9SQLite\u7684\u201c\u865a\u62df\u6570\u636e\u5e93\u5f15\u64ce\u201d\u6216VDBE\u7684\u57fa\u672c\u4e86\u89e3\u3002\n\u6211\u7684\u201c\u4eceSQLite\u6324\u538b\u6027\u80fd\u201d\u7cfb\u5217\u4e3b\u8981\u662f\u4e3aAndroid\u5de5\u7a0b\u5e08\u8bbe\u8ba1\u7684\uff0c\u4f46\u8fd9\u7bc7\u6587\u7ae0\u5c06\u7279\u522b\u6df1\u5165\u5230SQLite\u672c\u8eab\uff0c\u8ba8\u8bba\u7684\u4e3b\u9898\u5bf9\u6240\u6709\u4f7f\u7528\u5b83\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u9002\u7528\u3002\n\u6211\u4ee5\u524d\u7684\u5370\u8c61\u662fSQLite\u50cf\u89e3\u91ca\u5668\u4e00\u6837\u89e3\u6790\u548c\u8fd0\u884c\u8bed\u53e5\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u5728\u5bfb\u627eSQLite\u7248\u672c\u7684MySQL\u7684EXPLAIN\u65f6\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u63cf\u8ff0SQLite\u64cd\u4f5c\u65b9\u5f0f\u7684\u6587\u6863\uff1a\nSQLite\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06SQL\u8bed\u53e5\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\uff0c\u7136\u540e\u5728\u865a\u62df\u673a\u4e2d\u8fd0\u884c\u8be5\u5b57\u8282\u7801\u3002-SQLite\u3002\u7ec4\u7ec7\nSQLite\u865a\u62df\u673a\u88ab\u79f0\u4e3a\u201c\u865a\u62df\u6570\u636e\u5e93\u5f15\u64ce\u201d\uff0c\u7b80\u79f0\u201cVDBE\u201d\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053SQLite\u4e2d\u5b57\u8282\u7801\u7a0b\u5e8f\u66f4\u5e38\u89c1\u7684\u8bf4\u6cd5\u662f\uff1a\u201cprepared statement\u201d\u3002\u6b64\u5916\uff0c\u5c31\u50cf\u5927\u591a\u6570\u7a0b\u5e8f\u4e00\u6837\uff1a\u51c6\u5907\u597d\u7684\u8bed\u53e5\u53ef\u4ee5\u63a5\u53d7\u8f93\u5165\uff08\uff1f\u53d8\u91cf\uff09\u3002\n\u5b57\u8282\u7801\u7a0b\u5e8f\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6307\u4ee4\u5217\u8868\uff0c\u6bcf\u4e2a\u6307\u4ee4\u7531\u4e00\u4e2a\u64cd\u4f5c\u7801\u548c\u53c2\u6570\u503c\u7ec4\u6210\u3002\u6bcf\u4e2a\u64cd\u4f5c\u7801\u5bf9\u5e94\u4e8eVDBE\u77e5\u9053\u5982\u4f55\u5904\u7406\u7684\u7279\u5b9a\u547d\u4ee4\uff0c\u5e76\u4e14\u5728\u5904\u7406\u65f6\u53ef\u4ee5\u5bf9\u865a\u62df\u673a\u4e2d\u5bc4\u5b58\u5668\u7ec4\u4e2d\u5305\u542b\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002\u6839\u636e\u5b98\u65b9\u6587\u6863\uff0c\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u662f\u6709\u9650\u7684\uff0c\u4f46\u53ef\u80fd\u76f8\u5f53\u5927\uff0c\u8fd9\u53d6\u51b3\u4e8eSQLite\u5728\u7f16\u8bd1\u65f6\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\n\u5728\u672c\u6587\u7684\u5269\u4f59\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u7d22SQLite\u5982\u4f55\u5c06SQL\u8bed\u53e5\u5904\u7406\u6210\u5b57\u8282\u7801\u7a0b\u5e8f\uff0c\u7136\u540e\u6211\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u68c0\u67e5\u8bed\u53e5\u7f16\u8bd1\u6210\u7684\u5b57\u8282\u7801\u3002\n\u5f53\u60a8\u8981\u6c42SQLite\u51c6\u5907\u4e00\u6761\u8bed\u53e5\u65f6\uff0c\u60a8\u7cbe\u5fc3\u7f16\u5236\u7684SQL\u5c06\u88ab\u5206\u89e3\uff08\u89e3\u6790\uff09\u3001\u5206\u6790\uff08\u8ba1\u5212\u67e5\u8be2\uff09\uff0c\u5e76\u5206\u89e3\uff08\u7f16\u8bd1\uff09\u4e3aSQLite\u7684VDBE\u80fd\u591f\u6267\u884c\u7684\u5b57\u8282\u7801\u7a0b\u5e8f\u3002\n\u5c31\u50cf\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cSQL\u4ece\u4e00\u5806\u6587\u672c\u5f00\u59cb\u3002\u8981\u4ece\u4e00\u4e2a\u6587\u672c\u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6SQLite\u53ef\u4ee5\u7406\u89e3\u7684\u5185\u5bb9\uff0c\u9700\u8981\u5bf9\u8be5\u6587\u672c\u8fdb\u884c\u5206\u89e3\u548c\u7406\u89e3\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u89e3\u6790\u3002\nSQLite\u7684\u89e3\u6790\u65b9\u6cd5\u5728\u6574\u4e2a\u5b98\u65b9\u6587\u6863\u4e2d\u90fd\u975e\u5e38\u6e05\u695a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u66fe\u7ecf\u5728sqlite\u5de5\u4f5c\u8fc7\u3002org\u5728\u5bfb\u627e\u5982\u4f55\u7f16\u5199INSERT\u8bed\u53e5\u65f6\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e2a\u56fe\u8868\uff0c\u5176\u4e2d\u89e3\u91ca\u4e86SQLite\u89e3\u6790\u5668\u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406\uff1a\n\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\u56fe\u8868\u662f\u4e00\u79cd\u53ef\u89c6\u5316SQLite\u7406\u89e3\u7684SQL\u8bed\u6cd5\u7684Backus Naur Form\uff08BNF\uff09\u63cf\u8ff0\u7684\u65b9\u6cd5\u3002\u5f53\u60a8\u77e5\u9053\u8981\u67e5\u627e\u4ec0\u4e48\u65f6\uff0c\u9605\u8bfb\u8bed\u6cd5\u56fe\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u8fc7\u7a0b\uff1a\n\u5e26\u5c0f\u5199\u5b57\u6bcd\u548c\u52a0\u9ad8\u5b57\u6bcd\u7684\u692d\u5706\u4ee3\u8868\u53ef\u91cd\u7528\u7684\u8bed\u6cd5\u5b50\u53e5\uff08\u5b83\u4eec\u7684\u8bed\u6cd5\u56fe\u5c06\u5728\u6587\u6863\u4e2d\u7684\u9875\u9762\u4e0b\u65b9\u8fdb\u4e00\u6b65\u5217\u51fa\uff09\u3002\n\u8fde\u63a5\u692d\u5706\u7684\u7bad\u5934\u544a\u8bc9\u60a8\u6784\u9020\u6709\u6548\u8bed\u53e5\u6240\u9700\u7684\u5173\u952e\u5b57\u3001\u5b50\u53e5\u548c\u6807\u8bb0\u7684\u51fa\u73b0\u987a\u5e8f\u3002\n\u5728\u5c06\u8bed\u53e5\u89e3\u6790\u4e3a\u5176\u7ec4\u6210\u90e8\u5206\u540e\uff0cSQLite\u9700\u8981\u51b3\u5b9a\u5982\u4f55\u6267\u884c\u8be5\u8bed\u53e5\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684SQL\u8bed\u53e5\uff0c\u53ef\u80fd\u6709\u6570\u767e\u3001\u6570\u5343\u751a\u81f3\u6570\u767e\u4e07\u79cd\u4e0d\u540c\u7684\u7b97\u6cd5\u6765\u6267\u884c\u8be5\u64cd\u4f5c\u3002\u6240\u6709\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u4f1a\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\uff0c\u5c3d\u7ba1\u6709\u4e9b\u7b97\u6cd5\u4f1a\u6bd4\u5176\u4ed6\u7b97\u6cd5\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\u67e5\u8be2\u8ba1\u5212\u5668\u662f\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\uff0c\u5b83\u8bd5\u56fe\u4e3a\u6bcf\u4e2aSQL\u8bed\u53e5\u9009\u62e9\u6700\u5feb\u3001\u6700\u6709\u6548\u7684\u7b97\u6cd5\u3002-SQLite\u3002\u7ec4\u7ec7\n\u7406\u89e3SQLite\u5982\u4f55\u51b3\u5b9a\u6267\u884c\u8bed\u53e5\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u4e3b\u9898\uff0c\u8db3\u4ee5\u8bc1\u660e\u5b83\u81ea\u5df1\u7684\u89c2\u70b9\u662f\u6b63\u786e\u7684\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u672c\u6587\u6765\u8bf4\uff0c\u91cd\u8981\u7684\u662f\u8981\u77e5\u9053\u5728\u89e3\u6790\u548c\u7f16\u8bd1\u4e4b\u95f4\u6709\u4e00\u4e2a\u4f18\u5316\u6b65\u9aa4\u3002\n\u6700\u540e\uff1a\u5728SQLite\u786e\u5b9a\u4e86\u5982\u4f55\u4ee5\u6700\u4f73\u65b9\u5f0f\u8fd0\u884c\u8bed\u53e5\u540e\uff0c\u5b83\u4f1a\u5217\u51fa\u4e00\u7cfb\u5217\u63cf\u8ff0\u6574\u4e2a\u64cd\u4f5c\u7684\u4f4e\u7ea7\u5b57\u8282\u7801\u6307\u4ee4\u3002\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u8fd9\u4e2a\u6307\u4ee4\u5217\u8868\u662f\u4e00\u4e2a\u5c06\u5728VDBE\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002SQLite\u7f16\u8bd1\u7684\u7a0b\u5e8f\u7684\u4e00\u4e2a\u66f4\u6d41\u884c\u7684\u540d\u79f0\u662f\u201cprepared statement\u201d\u3002\n\u6bcf\u4e2a\u5b57\u8282\u7801\u6307\u4ee4\u7531\u4e00\u4e2a\u64cd\u4f5c\u7801\uff08\u6307\u4ee4\u540d\uff09\u548c\u6700\u591a5\u4e2a\u53c2\u6570\uff08\u8f93\u5165\u503c\u6216\u5bc4\u5b58\u5668\u5f15\u7528\uff09\u7ec4\u6210\u3002\u5728\u73b0\u4ee3SQLite\u7248\u672c\u4e2d\uff0c\u6709100\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u4ee4\u3002\u5b83\u4eec\u5728\u7b80\u5355\u7684\u63a7\u5236\u6d41\u6307\u4ee4\uff08\u5982Eq:\u201c\u5982\u679c\u4e24\u4e2a\u5bc4\u5b58\u5668\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u8df3\u8f6c\u5230\u4e00\u6761\u6307\u4ee4\u201d\uff09\u548c\u66f4\u7279\u5b9a\u4e8e\u6570\u636e\u5e93\u7684\u6307\u4ee4\uff08\u5982ResultRow:\uff09\u4e4b\u95f4\u8fd0\u884c\uff0c\u540e\u8005\u5728\u5f53\u524d\u4f4d\u7f6e\u5411\u6570\u636e\u5e93\u5149\u6807\u63d0\u4f9b\u6570\u636e\uff0c\u6307\u5411\u5df2\u52a0\u8f7d\u5230VDBE\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002\n\u4e00\u65e6\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff0c\u4e00\u4e2a\u51c6\u5907\u597d\u7684\u8bed\u53e5\u5c31\u4e0d\u9700\u8981\u88ab\u89e3\u6790\u6216\u518d\u6b21\u6267\u884c\u67e5\u8be2\u8ba1\u5212\u8fc7\u7a0b\u3002\u8fd9\u6b63\u662f\u4e3a\u4ec0\u4e48\u91cd\u590d\u4f7f\u7528\u51c6\u5907\u597d\u7684\u8bed\u53e5\u6bd4\u4e0d\u91cd\u590d\u4f7f\u7528\u5b83\u4eec\u66f4\u5feb\u7684\u539f\u56e0\u3002\n\u73b0\u5728\u60a8\u5df2\u7ecf\u77e5\u9053\u4e86\u539f\u59cb\u8bed\u53e5\u662f\u5982\u4f55\u53d8\u6210\u51c6\u5907\u597d\u7684\u8bed\u53e5\u7684\uff0c\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u68c0\u67e5\u7f16\u8bd1\u7684\u5b57\u8282\u7801\u7a0b\u5e8f\u3002\nSQLite\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u5b83\u4e3a\u4efb\u4f55\u8bed\u53e5\u751f\u6210\u7684\u5b57\u8282\u7801\u3002\u4e3a\u4e86\u67e5\u770b\u5b57\u8282\u7801\uff0c\u53ea\u9700\u5728\u8bed\u53e5\u524d\u9762\u52a0\u4e0aEXPLAIN\u3002\u4ece\u6587\u4ef6\u4e2d\uff1a\n\u5f53EXPLAIN\u5173\u952e\u5b57\u51fa\u73b0\u65f6\uff0c\u5b83\u4f1a\u4f7f\u8bed\u53e5\u8868\u73b0\u4e3a\u4e00\u4e2a\u67e5\u8be2\uff0c\u8fd4\u56de\u5982\u679cEXPLAIN\u5173\u952e\u5b57\u4e0d\u5b58\u5728\uff0c\u5b83\u5c06\u7528\u4e8e\u6267\u884c\u547d\u4ee4\u7684\u865a\u62df\u673a\u6307\u4ee4\u5e8f\u5217\u3002-SQLite\u3002\u7ec4\u7ec7\n\u89e3\u91ca&#39\uff1bs\u8f93\u51fa\u662f\u4e00\u7cfb\u5217\u884c\uff0c\u5176\u4e2d\u6bcf\u884c\u90fd\u662f\u51c6\u5907\u597d\u7684\u8bed\u53e5\u5b57\u8282\u7801\u4e2d\u7684\u4e00\u6761\u6307\u4ee4\uff0c\u6bcf\u884c\u67098\u5217\uff1a\n\u6700\u540e\u4e00\u5217\uff1acomment\u5f88\u53ef\u80fd\u662f\u7a7a\u7684\uff0c\u9664\u975e\u60a8\u81ea\u5df1\u7f16\u8bd1SQLite\u5e76\u8bbe\u7f6e-DSQLITE_ENABLE_EXPLAIN_COMMENTS\u9009\u9879\u3002\n\u8ba9\u6211\u4eec\u4f7f\u7528EXPLAIN\u6765\u67e5\u770b\u5b57\u8282\u7801\u4e2d\u7684\u4e00\u4e9b\u8bed\u53e5\u3002\u56e0\u4e3a\u6211\u7684\u5b89\u88c5\u6ca1\u6709\u6253\u5f00\u8bc4\u8bba\uff0c\u6240\u4ee5\u6211\u5c06\u4e0d\u4f7f\u7528\u5b83\u3002\u6bcf\u4e2a\u793a\u4f8b\u90fd\u4ece\u4f7f\u7528EXPLAIN\u65f6\u6536\u5230\u7684\u8f93\u51fa\u5f00\u59cb\uff0c\u7136\u540e\u662fVDBE\u5728\u5b57\u8282\u7801\u7a0b\u5e8f\u4e2d\u7684\u6d41\u7a0b\u4ecb\u7ecd\u3002\n\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u663e\u793a\u7684\u6240\u6709\u5b57\u8282\u7801\u90fd\u6765\u81eaSQLite 3.16.2\uff0c\u5728\u5176\u4ed6\u7248\u672c\u4e2d\u53ef\u80fd\u4e0d\u76f8\u540c\u3002\uff09\nsqlite&gt\uff1b\u89e3\u91ca\u9009\u62e9&#34\uff1b\u4f60\u597d\uff0c\u4e16\u754c&#34\uff1b\uff1b\u5730\u5740\u64cd\u4f5c\u7801p1 p2 p3 p4 p5--------------------------0\u521d\u59cb0 1 0 0 0 1\u5b57\u7b26\u4e328 0 1 0 hello world 00 2\u7ed3\u679c1 0 0 0 0 3\u6682\u505c0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\nInit 0 1 0-\u8868\u793a\u7a0b\u5e8f\u7684\u5f00\u59cb\uff0c\u5e76\u79fb\u52a8\u5230\u5730\u57401\u3002\n\u5b57\u7b26\u4e328 0 1 0\u548c#39\uff1b\u4f60\u597d\uff0c\u4e16\u754c&#39\uff1b-\u201chello world\u201d\u5b58\u50a8\u5728\u5bc4\u5b58\u56681\u4e2d\u3002\nResultRow 1 1 0-\u8ba9\u5149\u6807\u77e5\u9053\u5bc4\u5b58\u56681\u5305\u542b\u4e00\u884c\u8f93\u51fa\u3002\nsqlite&gt\uff1b\u89e3\u91ca\u521b\u5efa\u8868\u535a\u5ba2\uff08\u6807\u9898\u6587\u672c\u4e0d\u4e3a\u7a7a\u3001\u4f5c\u8005\u6587\u672c\u4e0d\u4e3a\u7a7a\u3001\u53d1\u5e03\u65e5\u671f\u6574\u6570\u3001\u6b63\u6587\u6587\u672c\uff09\uff1b\u5730\u5740\u64cd\u4f5c\u7801p1 p2 p3 p4 p5-------------------------0\u521d\u59cb\u53160 27 0 0 0 0 0 0 0 0 1\u8bfbCookie 0 3 2 0 0 2\u5982\u679c3 5 0 0 0 0 0 3\u8bbe\u7f6eCookie 0 2 4 0 0 4\u8bbe\u7f6eCookie 0 5 1 0 0 5\u521b\u5efa\u88680 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9\u63d2\u51650 3 1 0 8 10\u5173\u95ed0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12\u7a7a0 4 0 0 0 13\u6253\u5f00\u5199\u51651 0 5 0 0 0 0 0 0 0 0 0 0 0 014 SeeKrowid1 16 1 00 15 Rowid 1 5 0 0 0 16 IsNull 5 24 0 0 17 String8 0 6 0 table 00 18 String8 0 7 0 blog 00 19 String8 0 blog 00 20 Copy 2 9 0 00 21 String8 0 10 0 CREATE table blog\uff08\u6807\u9898\u6587\u672c\u4e0d\u4e3aNULL\uff0c\u4f5c\u8005\u6587\u672c\u4e0d\u4e3aNULL\uff0c\u53d1\u5e03\u65e5\u671f\u6574\u6570\uff0c\u6b63\u6587\uff0900 22 MakeRecord 6 11 BBBDB 00 23 Insert 1 11 5 00 24 SetCookie 0 1 00 25ParseSchema 0 tbl_name=&#39\uff1b\u535a\u5ba2&#39\uff1b\u8fd8\u6709\u6253\u5b57\u3002\u3002\u300226\u6682\u505c0 0 00 27\u4e8b\u52a1\u5904\u74060 1 0 0 01 28\u8f6c\u52300 1 0 00\n\u4e8b\u52a10 1 0 01-\u5728\u5f53\u524d\u6570\u636e\u5e93\u4e0a\u542f\u52a8\u5199\u4e8b\u52a1\uff0c\u5e76\u68c0\u67e5\u6570\u636e\u5e93\u67b6\u6784\u662f\u5426\u4e3a\u9884\u671f\u7248\u672c\u3002\nReadCookie 0 3 2-\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6cookie#2\uff08\u6570\u636e\u5e93\u683c\u5f0f\uff09\uff0c\u5e76\u5c06\u5176\u503c\u5b58\u50a8\u5728\u5bc4\u5b58\u56683\u4e2d\u3002\u4ec0\u4e48\u662f\u201c\u997c\u5e72\u201d\uff1fCookie\u662fSQLite\u4f7f\u7528\u7684\u5b9e\u9645\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u5b58\u5728\u7684\u503c\u3002\n\u5982\u679c3 5 0-\u5982\u679c\u5bc4\u5b58\u56683\u4e2d\u7684\u503c\u4e0d\u4e3a\u96f6\uff0c\u5219\u8df3\u8f6c\u5230\u5730\u57405\u3002\u89e3\u91ca\uff1a\u5982\u679c\u5df2\u7ecf\u914d\u7f6e\u4e86\u6570\u636e\u5e93\u683c\u5f0f\uff08\u5047\u8bbe\u8fd8\u6ca1\u6709\uff09\uff0c\u6211\u4eec\u5c06\u8df3\u8fc7\u5728\u6570\u636e\u5e93\u4e0a\u8bbe\u7f6e\u4e00\u4e9bcookie\u3002\nSetCookie 0 2 4-\u5c064\u5199\u5165\u5f53\u524d\u6570\u636e\u5e93\u7684cookie\u7f16\u53f72\u3002\u8fd9\u4f1a\u5c06\u6570\u636e\u5e93\u6587\u4ef6\u683c\u5f0f\u8bbe\u7f6e\u4e3a4\u3002\nSetCookie 0 5 1-\u5c061\u5199\u5165\u5f53\u524d\u6570\u636e\u5e93\u7684cookie\u7f16\u53f75\u3002Cookie\u6570\u5b575\u8868\u793a\u6570\u636e\u5e93\u6587\u4ef6\u7684\u6587\u672c\u7f16\u7801\u683c\u5f0f\u3002\u901a\u8fc7\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a1\uff0c\u6211\u4eec\u9009\u62e9UTF-8\u3002\nCreateTable 0 2 0-\u521b\u5efa\u4e00\u4e2a\u65b0\u8868\uff0c\u5e76\u5c06\u5176\u4f4d\u7f6e\u653e\u5728\u5bc4\u5b58\u56682\u7684\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u3002\nOpenWrite 0 1 0 5-\u6253\u5f00\u540d\u4e3a0\u7684\u8bfb/\u5199\u6e38\u6807\uff0c\u5728\u6839\u9875\u4e3a1\u7684\u8868\u4e0a\u67095\u5217\u3002\u89e3\u91ca\uff1a\u7b2c1\u9875\u5305\u542bsqlite_\u4e3b\u8868\uff0c\u6211\u4eec\u5c06\u5411\u5176\u4e2d\u6dfb\u52a0\u4e00\u6761\u5b9a\u4e49\u535a\u5ba2\u8868\u7684\u8bb0\u5f55\u3002\nNewRowid 0 1 0-\u83b7\u53d6\u4e00\u4e2a\u65b0\u7684rowid\u503c\u5e76\u5c06\u5176\u653e\u5165\u5bc4\u5b58\u56681\u4e2d\u3002\nBlob 6 3 0-\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a6\u5b57\u8282\u7684\u7a7aBlob\uff0c\u6211\u4eec\u5c06\u5b58\u50a8\u5728\u5bc4\u5b58\u56683\u4e2d\u3002\n\u63d2\u51650 3 1 08-\u4f7f\u7528\u5149\u68070\uff0c\u4f7f\u7528\u5bc4\u5b58\u56681\u4e2d\u7684\u503c\u4f5c\u4e3a\u952e\u5c06\u5bc4\u5b58\u56683\u4e2d\u7684\u6570\u636e\u5199\u5165\u8868\u4e2d\uff0c\u5e76\u589e\u52a0\u8868\u7684\u884c\u6570\u3002\u89e3\u91ca\uff1a\u6211\u4eec\u6b63\u5728\u5c06\u6700\u8fd1\u52a0\u8f7d\u5230\u5bc4\u5b58\u56683\u4e2d\u7684blob\u4f5c\u4e3a\u65b0\u884c\u5199\u5165\u8868\u4e2d\uff0c\u5e76\u4f7f\u7528\u6211\u4eec\u6784\u9020\u7684rowid\u4f5c\u4e3a\u5176\u952e\u3002\nOpenWrite 1 10 5-\u6253\u5f00\u540d\u4e3a1\u7684\u8bfb/\u5199\u6e38\u6807\uff0c\u5728\u6839\u9875\u9762\u4e3a1\u7684\u8868\u4e0a\u67095\u5217\u3002\u89e3\u91ca\uff1a\u5c06\u5149\u6807\u91cd\u65b0\u6253\u5f00\u5230sqlite_\u4e3b\u8868\u4e2d\u3002\n\u8bf7\u53c2\u9605\u514b\u7f57\u7ef4\u5fb71 16 1-\u5982\u679c\u5149\u6807\u4e0d\u5305\u542b\u5bc4\u5b58\u56681\u4e2d\u503c\u7684rowid\uff0c\u8bf7\u4f7f\u7528\u5149\u68071\u8df3\u8f6c\u5230\u5730\u574016\u3002\u5426\u5219\u7ee7\u7eed\u524d\u8fdb\u3002\uff08\u8ba9\u6211\u4eec\u7ee7\u7eed\uff0c\u56e0\u4e3a\u6211\u4eec\u521a\u521a\u5bf9\u5bc4\u5b58\u56681\u4e2d\u7684\u503c\u5199\u5165\u4e86\u4e00\u4e9b\u5185\u5bb9\uff09\nRowid 1 5 0-\u5c06\u5149\u68071\u7684Rowid\u503c\u5b58\u50a8\u5728\u5bc4\u5b58\u56685\u4e2d\u3002\nIsNull 5 24 0-\u5982\u679c\u5bc4\u5b58\u56685\u4e2d\u7684\u503c\u4e3aNULL\uff0c\u5219\u8df3\u8f6c\u5230\u5730\u574024\u3002\u89e3\u91ca\uff1a\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u5149\u6807\u6ca1\u6709\u6307\u5411sqlite_\u4e3b\u8868\u4e2d\u7684\u4e00\u884c\uff0c\u6211\u4eec\u5c06\u8df3\u8f6c\u5230\u7a0b\u5e8f\u7684\u672b\u5c3e\u9000\u51fa\u3002\uff08\u5047\u8bbe\u8be5\u503c\u4e0d\u662fNULL\uff09\n\u590d\u52362 9 0-\u5c06\u503c\u4ece\u5bc4\u5b58\u56682\u590d\u5236\u5230\u5bc4\u5b58\u56689\u3002\u89e3\u91ca\uff1a\u6211\u4eec\u5c06\u5728\u5730\u57405\u7684\u6307\u4ee4\u4e2d\u521b\u5efa\u7684\u65b0\u8868\u7684\u6570\u636e\u5e93\u6587\u4ef6\u9875\u4f4d\u7f6e\u4ece\u5bc4\u5b58\u56682\u590d\u5236\u52309\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728sqlite_\u4e3b\u8868\u7684\u63d2\u5165\u4e2d\u4f7f\u7528\u5b83\u3002\n\u5b57\u7b26\u4e328 0 10 0\u548c#39\uff1b\u521b\u5efa\u8868\u683c\u2026\u2026\u201d\u5c06CREATE TABLE\u8bed\u53e5\u5b58\u50a8\u5230\u5bc4\u5b58\u566810\u4e2d\u3002\n\u8bb0\u5f556 5 11\u548c#39\uff1bBBBDB&#39\uff1b-\u4f7f\u7528\u5bc4\u5b58\u56686\u523010\uff086+\uff085\u20131\uff09\uff09\u521b\u5efa\u4e00\u4e2a\u8868\u8bb0\u5f55\uff0c\u5e76\u5c06\u5bf9\u8be5\u8bb0\u5f55\u7684\u5f15\u7528\u5b58\u50a8\u5728\u5bc4\u5b58\u566811\u4e2d\u3002BBBDB\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u8bb0\u5f55\u4e2d\u7684\u524d\u4e09\u5217\u548c\u6700\u540e\u4e00\u5217\u7684\u7c7b\u578b\u5173\u8054\u5e94\u4e3a\u201cblob\u201d\uff0c\u7b2c\u56db\u5217\u5e94\u4e3a\u6570\u5b57\u3002\u89e3\u91ca\uff1a\u6211\u4eec\u7ec8\u4e8e\u5728sqlite_master\u4e2d\u4e3a\u6211\u4eec\u7684\u535a\u5ba2\u8868\u6784\u5efa\u4e86\u884c\u3002\n\u63d2\u51651115-\u4f7f\u7528\u6e38\u68071\uff0c\u4f7f\u7528\u6211\u4eec\u5b58\u50a8\u5728\u5bc4\u5b58\u56685\u4e2d\u7684rowid\u4f5c\u4e3a\u5176\u952e\uff0c\u5199\u5165\u5bc4\u5b58\u566811\u6307\u5411\u7684\u8bb0\u5f55\u6570\u636e\u3002\nSetCookie 0 1-\u5c06\u67b6\u6784cookie\u7684\u503c\u8bbe\u7f6e\u4e3a1\u3002\u6a21\u5f0fcookie\u662fcookie\u7f16\u53f71\uff0c\u5b83\u8868\u793a\u6570\u636e\u5e93\u6a21\u5f0f\u7684\u5f53\u524d\u7248\u672c\u3002\n\u8bed\u6cd5\u6a21\u5f0f0&#34\uff1btbl_name=&#39\uff1b\u535a\u5ba2&#39&#34; \u2014 \u4f7f\u7528p4 param\u503c\u4f5c\u4e3aWHERE\u5b50\u53e5\u89e3\u6790sqlite_master\u4e2d\u7684\u6240\u6709\u6a21\u5f0f\u6761\u76ee\u3002\uff08\u8fd9\u4f1a\u4ea7\u751f\u53e6\u4e00\u4e2a\u5bf9VDBE\u7684\u8c03\u7528\uff09\n\u6682\u505c0-\u7ec8\u6b62\u7a0b\u5e8f\uff0c\u9519\u8bef\u4ee3\u7801\u4e3a0\uff08\u6210\u529f\uff01\uff09\u3002\n\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5411\u65b0\u521b\u5efa\u7684blog\u8868\u6dfb\u52a0\u4e00\u884c\u9700\u8981\u4ec0\u4e48\u3002\nsqlite&gt\uff1b\u89e3\u91ca\u5728\u535a\u5ba2\uff08\u6807\u9898\u3001\u4f5c\u8005\u3001\u53d1\u5e03\u65e5\u671f\u3001\u6b63\u6587\uff09\u4e2d\u63d2\u5165\u7684\u4ef7\u503c\u89c2\uff08&#39\uff1b\u51ac\u5929\u6765\u4e86&#39\uff1b\uff0c&#39\uff1b\u5948\u5fb7\u00b7\u65af\u5854\u514b&#39\uff1b\uff0c\u65e5\u671f\uff08&#39\uff1b\u73b0\u5728&#39\uff1b\uff09&#39;\u7b2c\u4e03\u5b63\u64ad\u51fa&#39;); \u5730\u5740\u64cd\u4f5c\u7801p1 p2 p3 p4 p5--------------------------------------------------0\u521d\u59cb0 12 0 00 1 OpenWrite 0 2 0 4 00 2 NewRowid 0 1 0 0 0 3 String8 0 0 2 0\u51ac\u5b63\u5373\u5c06\u5230\u676500 4 String8 0 3 0 Ned Stark 0 0 0 0 5\u51fd\u65700 1 6 4\u65e5\u671f\uff08-1\uff0901 6 String8 0 5\u5b83\u5728\u7b2c\u4e03\u5b63\u5230\u6765\u300200 7 HaltIfNull 12992\u535a\u5ba2\u3002\u6807\u989801 8 HaltIfNull 1299 2 3\u535a\u5ba2\u3002\u4f5c\u800501 9 MakeRecord 2 4 7 BBDB 00 10\u63d2\u51650 7 1\u535a\u5ba21b 11\u6682\u505c0 0 00 12\u4e8b\u52a10 1 0 01 13 String8 0 6 0 now 00 14 Goto 0 1 0 00\n\u4e8b\u52a10 1 1 0 01-\u5728\u5f53\u524d\u6570\u636e\u5e93\u4e0a\u542f\u52a8\u5199\u4e8b\u52a1\uff0c\u5e76\u68c0\u67e5\u6570\u636e\u5e93\u67b6\u6784\u662f\u5426\u4e3a\u9884\u671f\u7248\u672c\u3002\u8bb0\u4f4f\uff1a\u5728CREATE TABLE\u5b57\u8282\u7801\u7a0b\u5e8f\u7684\u5730\u574024\u5904\uff0c1\u88ab\u5b58\u50a8\u4e3a\u6a21\u5f0f\u7248\u672c\uff1b\u5728\u672c\u8bf4\u660e\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u786e\u4fdd\u5b83\u4ecd\u7136\u662f1\u3002\nOpenWrite 0 2 0 4-\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a0\u7684\u8bfb/\u5199\u6e38\u6807\uff0c\u5728\u6839\u4f4d\u4e8e\u7b2c2\u9875\u7684\u8868\u4e0a\u67094\u5217\u3002\u8bb0\u4f4f\uff1ablog\u8868\u662f\u5728\u6570\u636e\u5e93\u7b2c2\u9875\u4e0a\u521b\u5efa\u7684\uff0c\u5b83\u67094\u5217\u3002\nNewRowid 0 1 0-\u83b7\u53d6\u8868\u7684\u65b0rowid\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u5bc4\u5b58\u56681\u4e2d\u3002\nString8 0 2 0\u548c#39\uff1b\u51ac\u5929\u6765\u4e86&#39\uff1b-\u5546\u5e97&#39\uff1b\u51ac\u5929\u6765\u4e86&#39\uff1b\u5728\u5bc4\u5b58\u56682\u4e2d\u3002\nFunction0 1 6 4 date\uff08-1\uff0901-\u4f7f\u7528\u5bc4\u5b58\u56686\u5904\u7684\u503c\u4f5c\u4e3a\u5176\u552f\u4e00\u53c2\u6570\u8c03\u7528date\u51fd\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u5bc4\u5b58\u56684\u4e2d\u3002\n\u5f268 0 5 0\u548c#39\uff1b\u7b2c\u4e03\u5b63\u64ad\u51fa&#39; \u2014 \u5546\u5e97&#39\uff1b\u7b2c\u4e03\u5b63\u64ad\u51fa&#39; \u5728\u767b\u8bb0\u518c5\u4e2d\u3002\nHaltIfNull 1299 2\u548c#39\uff1b\u535a\u5ba2\u5934\u8854\u548c#39\uff1b01-\u5982\u679c\u5bc4\u5b58\u56682\u4e2d\u7684\u503c\u4e3a\u7a7a\uff0c\u5219\u4ee5\u9519\u8bef\u4ee3\u78011299\u7ed3\u675f\u7a0b\u5e8f\u3002\u89e3\u91ca\uff1a\u535a\u5ba2\u4e0a\u7684\u6807\u9898\u5217\u88ab\u5b9a\u4e49\u4e3aNOTNULL\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u9a8c\u8bc1\u6211\u4eec\u8981\u5b58\u50a8\u7684\u503c\u662f\u5426\u4e3aNOTNULL\u3002\u5982\u679c\u662f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SQLITE_CONSTRAINT_NOTNULL\u4ee3\u7801\u51fa\u9519\u3002\nHaltIfNull 1299 2 3\u548c#39\uff1b\u535a\u5ba2\u4f5c\u8005&#39\uff1b01-\u5982\u679c\u5bc4\u5b58\u56683\u4e2d\u7684\u503c\u4e3a\u7a7a\uff0c\u5219\u4ee5\u9519\u8bef\u4ee3\u78011299\u7ed3\u675f\u7a0b\u5e8f\u3002\u89e3\u91ca\uff1a\u4e0e\u6807\u9898\u4e00\u6837\uff0c\u4f5c\u8005\u680f\u4e5f\u88ab\u5b9a\u4e49\u4e3a\u975e\u7a7a\u3002\n\u521b\u7eaa\u5f552 4 7&#39\uff1bBBDB&#39\uff1b-\u4f7f\u7528\u5bc4\u5b58\u56682\u52305\uff082+\uff084\u20131\uff09\uff09\u521b\u5efa\u4e00\u4e2a\u8868\u8bb0\u5f55\uff0c\u5e76\u5728\u5bc4\u5b58\u56687\u4e2d\u5b58\u50a8\u5bf9\u8be5\u8bb0\u5f55\u7684\u5f15\u7528\u3002BBDB\u5b57\u7b26\u4e32\u8868\u793a\u8bb0\u5f55\u5e94\u8be5\u7531\u4e24\u4e2ablob\u3001\u4e00\u4e2a\u6570\u5b57\u548c\u4e00\u4e2ablob\uff08\u6309\u987a\u5e8f\uff09\u7ec4\u6210\u3002\n\u63d2\u51650 7 1\u548c#39\uff1b\u535a\u5ba2&#39\uff1b1b-\u5c06\u5bc4\u5b58\u56687\u6307\u5411\u7684\u8bb0\u5f55\u4ee5\u53ca\u5bc4\u5b58\u56681\u4e2d\u7684\u952e\u63d2\u5165blog\u8868\u3002p5\u76841b\u503c\u662f\u4e00\u4e2a\u4f4d\u63a9\u7801\uff0c\u8868\u793aVDBE\u5e94\u8be5\u8ba1\u7b97\u66f4\u6539\u7684\u884c\u6570\uff0c\u5e76\u5b58\u50a8\u6700\u65b0\u63d2\u5165\u884c\u7684id\u4ee5\u4f9b\u4ee5\u540e\u8bbf\u95ee\u3002\u89e3\u8bfb\uff1a\u8fd9\u5c31\u662f\u5948\u5fb7\u00b7\u65af\u5854\u514b\u7684\u535a\u5ba2\u5e16\u5b50\u88ab\u6dfb\u52a0\u5230\u8868\u683c\u4e2d\u7684\u5730\u65b9\u3002\n\u505c\u4e0b\uff0c\u6211\u4eec\u7ed3\u675f\u4e86\uff01\u9000\u51fa\uff0c\u9519\u8bef\u4ee3\u7801\u4e3a0\uff08\u6210\u529f\uff09\u3002\n\u5982\u679c\u4f60\u8fd8\u548c\u6211\u5728\u4e00\u8d77\uff0c\u5e72\u5f97\u597d\uff01\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSQLite\u7684VDBE\u548c\u5b57\u8282\u7801\u7684\u4fe1\u606f\uff0c\u8bf7\u5c1d\u8bd5\u81ea\u5df1\u67e5\u770b\u4ee5\u4e0b\u89e3\u91ca\u7ed3\u679c\uff1a\n\u521b\u5efa\u53e6\u4e00\u4e2a\u8868\uff0c\u5411\u5176\u4e2d\u6dfb\u52a0\u4e0e\u7b2c\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u6267\u884cSELECT\u67e5\u8be2\uff0c\u5c06\u4e24\u4e2a\u8868\u8fde\u63a5\u5728\u4e00\u8d77\u3002", "note_en": "The virtual machine? Yep, but not the Java Virtual Machine. In this post I will focus on providing you with a basic understanding SQLite\u2019s \u201cVirtual DataBase Engine\u201d or VDBE.\n  My \u201cSqueezing Performance from SQLite\u201d series is primarily meant for Android engineers, but this post in particular will dive into SQLite itself and the topics discussed will hold true for all developers who use it.\n  I used to be under the impression that SQLite parsed and ran statements like an interpreter, but it turns out that\u2019s not quite the case. While looking for SQLite\u2019s version of MySQL\u2019s  EXPLAIN, I stumbled across documentation that described the way SQLite operates:\n SQLite works by translating SQL statements into bytecode and then running that bytecode in a virtual machine. \u2014  SQLite.org\n The SQLite virtual machine is called the \u201cVirtual DataBase Engine\u201d, or the \u201cVDBE\u201d for short.\n  You might already know what a bytecode program in SQLite more commonly goes by: \u201cprepared statement\u201d. Also, just like most programs: prepared statements can take input ( ? variables).\n The bytecode program is a binary listing of instructions which each consist of an opcode and parameter values. Each opcode corresponds to a particular command that the VDBE knows how to process, and when being processed can operate on data contained within a bank of registers within the virtual machine. According to the official documentation, the number of registers is finite  but can be quite large and depends on how SQLite was configured at compile time.\n In the remainder of this article we\u2019ll explore how SQL statements are processed by SQLite into bytecode programs, and then I\u2019ll show you how you can examine the bytecode  your statements get compiled into.\n  When you ask SQLite to prepare a statement, your painstakingly handcrafted SQL is dissected (parsed), analyzed (query planned), and boiled down (compiled) into a bytecode program SQLite\u2019s VDBE is capable of executing.\n  Just like any programming language, SQL starts as a bunch of text. To get from a string of text into something SQLite can understand, that text needs to be broken down and understood. This is what we call parsing.\n SQLite\u2019s parsing approach is made abundantly clear throughout the  official documentation. For example, if you\u2019ve ever ended up at sqlite.org while looking for how you are supposed to write an INSERT statement \u2014 you\u2019ve likely seen a diagram that explains a part of how SQLite\u2019s parser works:\n  Diagrams like the one above are a way of  visualizing the  Backus-Naur Form (BNF) description of the SQL grammar that SQLite understands. Reading the syntax diagrams is a pretty straightforward process when you know what to look for:\n Ovals with  lower-case-and-hypenated text represent reusable grammar clauses (their syntax diagrams will be listed further down the page in the documentation).\n  The arrows that connect the ovals tell you the order in which the keywords, clauses, and tokens need to appear to construct a valid statement.\n  After the statement has been parsed into its component parts, SQLite needs to decide how to approach executing the statement.\n For any given SQL statement, there might be hundreds or thousands or even millions of different algorithms of performing the operation. All of these algorithms will get the correct answer, though some will run faster than others. The query planner is an AI that tries to pick the fastest and most efficient algorithm for each SQL statement. \u2014  SQLite.org\n Understanding how SQLite determines the best way to execute your statements is a big enough topic to warrant its own post. However, for this article it\u2019s just important to know that there is an optimization step  between parsing and compilation.\n  Finally: after SQLite has determined how to best approach running your statement, it puts together a list of low-level bytecode instructions that describe the whole operation. That list of instructions is, quite literally, a program which will be run on the VDBE. A more popular name for the program compiled by SQLite is \u201cprepared statement\u201d.\n Each bytecode instruction consists of an opcode (name of the instruction) and up to 5 parameters (input values or references to registers). In modern SQLite versions, there are over a hundred different types of instructions. They run the gamut between simple control-flow instructions like   Eq: \u201cjump to an instruction if two registers have the same value\u201d and more database-specific instructions like  ResultRow: which provides data to the database cursor at the current position, pointing at values which have been loaded into the VDBE\u2019s registers.\n Once compiled into bytecode, a prepared statement does not need to be parsed or to go through the query planning process again. This is precisely what makes re-using prepared statements so fast when compared with opting not to re-use them.\n  Now that you know how your  raw statement becomes a  prepared statement, you may be wondering if it\u2019s possible to examine the bytecode program that was compiled.\n SQLite provides a mechanism you can use to inspect the bytecode it would generate for any statement. In order to see the bytecode, just prepend your statement with  EXPLAIN. From the documentation:\n When the EXPLAIN keyword appears \u2026 it causes the statement to behave as a query that returns the sequence of  virtual machine instructions it would have used to execute the command had the EXPLAIN keyword not been present.  \u2014  SQLite.org\n EXPLAIN&#39;s output is a series of rows where each row is an instruction in the prepared statement bytecode and each has 8 columns:\n  That last column:  comment will likely be empty unless you compile SQLite yourself and set the  -DSQLITE_ENABLE_EXPLAIN_COMMENTS  option.\n  Let\u2019s use  EXPLAIN to take a look at the bytecode for a few statements. Because my install didn\u2019t have the comments turned on, I\u2019ll leave that out. Each example starts with the output you receive when you use  EXPLAIN, followed by a  walk-through of the flow that the VDBE takes through the bytecode program.\n (Note: all bytecode shown here is from SQLite 3.16.2, and may not be the same in other versions.)\n  sqlite&gt; EXPLAIN SELECT &#34;hello world&#34;; addr opcode p1 p2 p3 p4 p5 ---- ------------- ---- ---- ---- ------------- -- 0 Init 0 1 0 00 1 String8 0 1 0 hello world 00 2 ResultRow 1 1 0 00 3 Halt 0 0 0 00\n  Init 0 1 0 \u2014 Denotes the start of the program and moves to address 1.\n String8 0 1 0 &#39;hello world&#39; \u2014 \u201chello world\u201d is stored in register 1.\n ResultRow 1 1 0 \u2014 Let the cursor know that the register 1 contains a row of output.\n  sqlite&gt; EXPLAIN CREATE TABLE blog (  title TEXT NOT NULL,   author TEXT NOT NULL,   pub_date INTEGER,   body TEXT ); addr opcode p1 p2 p3 p4 p5 ---- ------------- ---- ---- ---- ------------- -- 0 Init 0 27 0 00 1 ReadCookie 0 3 2 00 2 If 3 5 0 00 3 SetCookie 0 2 4 00 4 SetCookie 0 5 1 00 5 CreateTable 0 2 0 00 6 OpenWrite 0 1 0 5 00 7 NewRowid 0 1 0 00 8 Blob 6 3 0 00 9 Insert 0 3 1 08 10 Close 0 0 0 00 11 Close 0 0 0 00 12 Null 0 4 5 00 13 OpenWrite 1 1 0 5 00 14 SeekRowid 1 16 1 00 15 Rowid 1 5 0 00 16 IsNull 5 24 0 00 17 String8 0 6 0 table 00 18 String8 0 7 0 blog 00 19 String8 0 8 0 blog 00 20 Copy 2 9 0 00 21 String8 0 10 0 CREATE TABLE blog (  title TEXT NOT NULL,  author TEXT NOT NULL,  pub_date INTEGER,  body TEXT ) 00 22 MakeRecord 6 5 11 BBBDB 00 23 Insert 1 11 5 00 24 SetCookie 0 1 1 00 25 ParseSchema 0 0 0 tbl_name=&#39;blog&#39; AND type!=... 26 Halt 0 0 0 00 27 Transaction 0 1 0 0 01 28 Goto 0 1 0 00\n Transaction 0 1 0 0 01 \u2014 Start a write transaction on the current database and check that the database schema is the expected version.\n  ReadCookie 0 3 2 \u2014 Read cookie #2 ( the database format) from the database and store its value in register 3.  What are \u201ccookies\u201d? Cookies are values that are present in the actual database file that SQLite is using.\n If 3 5 0 \u2014 Jump to address 5 if the value in register 3 is not zero.  Interpretation: we\u2019re going to skip setting some cookies on the database if there is already a database format configured (let\u2019s assume there isn\u2019t one yet).\n SetCookie 0 2 4 \u2014 Write  4 to cookie number 2 for the current database. This sets the database file format to 4.\n SetCookie 0 5 1 \u2014 Write  1 to cookie number 5 for the current database. Cookie number 5 denotes the  database file\u2019s text encoding format. By setting its value to  1, we are choosing UTF-8.\n CreateTable 0 2 0 \u2014 Create a new table and place its location in the database file at register 2.\n OpenWrite 0 1 0 5 \u2014 Open a read/write cursor called  0 with 5 columns on the table whose root page is  1.   Interpretation:  Page 1 contains the   sqlite_master  table, to which we\u2019re going to add a record defining our  blog table.\n NewRowid 0 1 0 \u2014 Get a new rowid value and place it in register  1.\n Blob 6 3 0 _ \u2014 There is an empty blob of length  6-bytes that we are going to store in register  3.\n Insert 0 3 1 _ 08 \u2014 Using cursor  0, write the data in register  3 to the table using the value in register  1 as the key and increment the number of rows for the table.  Interpretation: We are writing the blob that was recently loaded into register 3 to the table as a new row and are using the rowid we constructed as its key.\n    OpenWrite 1 1 0 5 \u2014 Open a read/write cursor called  1 with 5 columns on the table whose root page is  1.  Interpretation: Re-open a cursor into the  sqlite_master table.\n SeekRowid 1 16 1 \u2014 Using cursor  1, jump to address  16 if the cursor doesn\u2019t contain a rowid of the value in register  1. Otherwise move along. (let\u2019s move along, since we did just write something to the value in register 1)\n Rowid 1 5 0 \u2014 Store the value of the rowid for cursor  1 in register  5.\n IsNull 5 24 0 \u2014 Jump to address  24 if the value in register  5 is  NULL.  Interpretation: If, for some reason, the cursor isn\u2019t pointing at a row in the  sqlite_master table, we are going to quit out by jumping to the end of the program. (let\u2019s assume the value was not  NULL)\n    Copy 2 9 0 \u2014 Copy the value from register  2 to register  9.  Interpretation: we\u2019re copying the database file page location of the new table we created way back during the instruction at address 5 from register 2 to 9 because we are about to use it in an insert into the  sqlite_master table.\n String8 0 10 0 &#39;CREATE TABLE ....\u2019 \u2014 Store the  CREATE TABLE statement into register  10.\n MakeRecord 6 5 11 &#39;BBBDB&#39; \u2014 Create a table record using registers  6 through  10 (6 + (5\u20131)) and store a reference to that record in register  11. The  BBBDB string says that the first three columns and the last column in the record should have a type-affinity of \u201cblob\u201d, and the fourth should be a number.  Interpretation: We\u2019re finally building the row in  sqlite_master for our  blog table.\n Insert 1 11 5 \u2014Using cursor  1, write the record data pointed to by register  11 using the rowid we\u2019ve stored in register  5 as its key.\n SetCookie 0 1 1 \u2014 Set the value of  the schema cookie to  1. The schema cookie is cookie number 1, and it denotes the current version of the database schema.\n ParseSchema 0 0 0 &#34;tbl_name=&#39;blog&#39;...&#34; \u2014 Parse all schema entries in  sqlite_master using the p4 param value as a  WHERE clause. (this spawns another call into the VDBE)\n Halt 0 0 0 \u2014 Terminate the program with an error code of  0 (success!).\n  Lastly, let\u2019s see what it takes to add a row to our newly created  blog table.\n sqlite&gt; EXPLAIN INSERT INTO blog (title, author, pub_date, body) VALUES (&#39;Winter is Coming&#39;, &#39;Ned Stark&#39;, date(&#39;now&#39;), &#39;It comes in season 7.&#39;); addr opcode p1 p2 p3 p4 p5 ---- ------------- ---- ---- ---- --------------------- -- 0 Init 0 12 0 00 1 OpenWrite 0 2 0 4 00 2 NewRowid 0 1 0 00 3 String8 0 2 0 Winter is Coming 00 4 String8 0 3 0 Ned Stark 00 5 Function0 1 6 4 date(-1) 01 6 String8 0 5 0 It comes in season 7. 00 7 HaltIfNull 1299 2 2 blog.title 01 8 HaltIfNull 1299 2 3 blog.author 01 9 MakeRecord 2 4 7 BBDB 00 10 Insert 0 7 1 blog 1b 11 Halt 0 0 0 00 12 Transaction 0 1 1 0 01 13 String8 0 6 0 now 00 14 Goto 0 1 0 00\n Transaction 0 1 1 0 01 \u2014 Start a write transaction on the current database and check that the database schema is the expected version.  Remember: at address 24 of the  CREATE TABLE bytecode program,  1 was stored as the schema version; in this instruction we\u2019re just making sure that it is still  1.\n   OpenWrite 0 2 0 4 \u2014 Open a read/write cursor called  0 with  4 columns on the table whose root is at page  2.  Remember: The  blog table was created on database page  2, and it has  4 columns.\n NewRowid 0 1 0 \u2014 Get a new rowid for the table and store it in register  1.\n String8 0 2 0 &#39;Winter is Coming&#39; \u2014 Store  &#39;Winter is Coming&#39; in register  2.\n  Function0 1 6 4 date(-1) 01 \u2014 Invoke the  date function using the value at register  6 as its only argument and store the result in register  4.\n String8 0 5 0 &#39;It comes in season 7.&#39; \u2014 Store  &#39;It comes in season 7.&#39; in register  5.\n HaltIfNull 1299 2 2 &#39;blog.title&#39; 01 \u2014 If the value in register  2 is null, end the program with error code  1299.  Interpretation: The title column on the  blog was defined as  NOT NULL, so we need to verify that the value we\u2019re about to store is, well, not null. If it is, we will error out with the  SQLITE_CONSTRAINT_NOTNULL code.\n HaltIfNull 1299 2 3 &#39;blog.author&#39; 01 \u2014 If the value in register  3 is null, end the program with error code  1299.  Interpretation: Just like the  title, the  author column was also defined as  NOT NULL.\n MakeRecord 2 4 7 &#39;BBDB&#39; \u2014 Create a table record using registers  2 through  5 (2 + (4\u20131)) and store a reference to that record in register  7. The  BBDB string says that the record should consist of two blobs, a number, and a blob (in that order).\n Insert 0 7 1 &#39;blog&#39; 1b \u2014 Insert the record pointed to by register  7 with the key in register  1 into the  blog table. The  1b value for  p5 is a bit mask denotes among other things that the VDBE should count the number of rows changed, and store the newest inserted row\u2019s id for access later.  Interpretation: This is where Ned Stark\u2019s blog post is actually added to the table.\n Halt 0 0 0 \u2014 We\u2019re done! Exit with error code of  0 (success).\n  If you\u2019re still with me, nice work! If you\u2019d like to learn even more about SQLite\u2019s VDBE and bytecode, try looking through the  EXPLAIN results for following on your own:\n Create another table, add data to it that relates to the data in the first table, and do a  SELECT query which  JOINs the two tables together.", "posttime": "2022-02-20 11:25:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u865a\u62df\u673a,sqlite,\u6027\u80fd,performance", "title": "\u538b\u7f29SQLite\u7684\u6027\u80fd\uff1a\u89e3\u91ca\u865a\u62df\u673a", "title_en": "Squeezing Performance from SQLite: EXPLAINing the Virtual Machine", "transed": 1, "url": "https://medium.com/@JasonWyatt/squeezing-performance-from-sqlite-explaining-the-virtual-machine-2550ef6c5db", "via": "", "real_tags": ["\u865a\u62df\u673a", "sqlite", "\u6027\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074166, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1982\u5e744\u670823\u65e5\uff0c\u603b\u90e8\u4f4d\u4e8e\u5251\u6865\u7684\u8f9b\u514b\u83b1\u7814\u7a76\u9662\uff08Sinclair Research\uff09\u516c\u5e03\u4e86\u5176\u6700\u65b0\u4ea7\u54c1\uff0c40\u5e74\u540e\uff0c\u5176\u5f71\u54cd\u529b\u548c\u5386\u53f2\u5730\u4f4d\u518d\u600e\u4e48\u5f3a\u8c03\u4e5f\u4e0d\u4e3a\u8fc7\u3002\u5982\u679c\u6ca1\u6709ZX\u9891\u8c31\uff0c\u6e38\u620f\u4ea7\u4e1a\u2014\u2014\u81f3\u5c11\u5728\u82f1\u56fd\u548c\u67d0\u4e9b\u5176\u4ed6\u6b27\u6d32\u56fd\u5bb6\u2014\u2014\u80af\u5b9a\u4e0d\u4f1a\u6210\u4e3a\u4eca\u5929\u7684\u5e9e\u7136\u5927\u7269\u3002\n\u56de\u987e\u667a\u80fd\u624b\u673a\u548cXbox\u7684\u4e16\u754c\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u6837\u4e00\u6b3e\u5546\u4e1a\u4e0a\u6210\u529f\u7684\u4ea7\u54c1\u7adf\u7136\u80fd\u4e0e\u8fd9\u53f0\u4e4f\u5473\u4e14\u6709\u7f3a\u9677\u7684\u8bbe\u5907\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u662f\u7684\uff0c\u6211\u662f\u4e00\u4e2a\u5f7b\u5934\u5f7b\u5c3e\u7684\u602a\u7656\uff0c\u5207\u5272\u6211\uff0c\u6211\u6d41\u8840\u7ea2\uff0c\u9ec4\uff0c\u7eff\u548c\u9752\u8272\uff0c\u6309\u987a\u5e8f\u3002\u4f46\u5c31\u8fde\u6211\u4e5f\u6b23\u7136\u627f\u8ba4\uff0c\u5bb6\u7528\u7535\u8111\u4e5f\u6709\u5b83\u7684\u7f3a\u70b9\u3001\u7f3a\u9677\u548c\u7279\u8d28\u3002\u4e8b\u5b9e\u4e0a\uff0cZX\u5149\u8c31\u8fdc\u975e\u5b8c\u7f8e\uff1b\u4f46\u8fd9\u6b63\u662f\u5176\u5438\u5f15\u529b\u7684\u4e00\u90e8\u5206\u3002\u54e6\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u5f88\u4fbf\u5b9c\u3002\n\u4e0e\u5f53\u65f6\u7684\u7ade\u4e89\u5bf9\u624b\u76f8\u6bd4\uff0c\u5b9e\u9645\u4e0a\u975e\u5e38\u4fbf\u5b9c\u3002\u514b\u83b1\u592b\u00b7\u8f9b\u514b\u83b1\u5c14\u7235\u58eb\u610f\u8bc6\u5230\u5bb6\u5ead\u8ba1\u7b97\u662f\u4e00\u9879\u6781\u5176\u6602\u8d35\u7684\u4e1a\u52a1\uff0c\u666e\u901a\u5bb6\u5ead\u65e0\u6cd5\u4f01\u53ca\uff0c\u56e0\u6b64\u4ed6\u8bbe\u8ba1\u4e86\u4e00\u9879\u8ba1\u5212\uff0c\u751f\u4ea7\u4e00\u6b3e\u4f4e\u9884\u7b97\u7684\u5fae\u578b\u8ba1\u7b97\u673a\uff0c\u4e0e\u7535\u89c6\u548c\u5f55\u50cf\u673a\u4e00\u6837\uff0c\u5c06\u6210\u4e3a\u5bb6\u5ead\u5a31\u4e50\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5e76\u5411\u6240\u6709\u4eba\u5f00\u653e\u8ba1\u7b97\u3002\u8be5\u9891\u8c31\u7684\u6700\u5927\u7ade\u4e89\u5bf9\u624bCommodore 64\u548cBBC Micro Model B\u7684\u96f6\u552e\u4ef7\u5747\u8d85\u8fc7300\u82f1\u9551\uff0c\u4ee5\u4eca\u5929\u7684\u4ef7\u683c\u8ba1\u7b97\u51e0\u4e4e\u4e3a1000\u82f1\u9551\uff1b1982\u5e74\uff0c\u8f9b\u514b\u83b1\u7535\u8111\u95ee\u4e16\u65f6\uff0c16K\u7248\u672c\u7684\u552e\u4ef7\u4ec5\u4e3a125\u82f1\u9551\uff0c\u518d\u52a0\u4e0a50\u82f1\u9551\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f97\u523048K\u3002\u5bf9\u4e8e\u8bb8\u591a\u5bb6\u5ead\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4ef6\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e38\u5e38\u4ee5\u4e3a\u7535\u8111\u53ea\u662f\u4e00\u65f6\u7684\u65f6\u5c1a\uff0c\u800c\u4e14\u201c\u53ea\u9002\u5408\u5b69\u5b50\u201d\u3002\n\u8fd9\u4e00\u4ef7\u683c\u4f7f\u8f9b\u514b\u83b1\u5f97\u4ee5\u5728\u82f1\u56fd\u548c\u6b27\u6d32\u5404\u5730\u7684\u4f4f\u5b85\u4e2d\u7ad9\u7a33\u811a\u8ddf\uff1b\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u673a\u5668\u80cc\u540e\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e3a\u4e86\u4ed6\u6240\u5e0c\u671b\u7684\u5e7f\u6cdb\u800c\u5d07\u9ad8\u7684\u76ee\u7684\u3002\u548c\u5f53\u65f6\u7684\u5927\u591a\u6570\u5176\u4ed6\u7535\u8111\u4e00\u6837\uff0cZX\u9891\u8c31\u662f\u7531\u6e38\u620f\u9500\u552e\u7684\u3002\u5728Xbox\u548cPlayStation\u4e4b\u524d\u7684\u65f6\u4ee3\uff0c\u8f9b\u514b\u83b1\u7535\u8111\u4ee3\u8868\u4e86\u5b69\u5b50\u4eec\u5728\u5bb6\u73a9\u7535\u5b50\u6e38\u620f\u7684\u6700\u597d\u548c\u6700\u4fbf\u5b9c\u7684\u65b9\u5f0f\u3002\u9a6c\u4e01\u00b7\u5361\u7f57\u5c14\uff08Martyn Carroll\uff09\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u7741\u5927\u773c\u775b\u7684\u5e74\u8f7b\u4eba\uff0c\u4ed6\u66fe\u662f\u300a\u590d\u53e4\u73a9\u5bb6\u300b\uff08Retro Gamer\uff09\u6742\u5fd7\u7684\u7f16\u8f91\uff0c\u4e5f\u662f\u4e00\u540d\u4e13\u95e8\u7814\u7a76\u590d\u53e4\u5fae\u578b\u6e38\u620f\u7684\u6e38\u620f\u8bb0\u8005\u3002\u4ed6\u8bf4\uff1a\u201c[\u9891\u8c31]\u6bd4\u5f53\u65f6\u7684\u5927\u591a\u6570\u8ba1\u7b97\u673a\u4fbf\u5b9c\uff0c\u4f46\u5728\u8bb8\u591a\u65b9\u9762\u5b83\u7684\u529f\u80fd\u66f4\u5f3a\u3002\u201d\u3002\u201c\u58f0\u97f3\u5f88\u7cdf\u7cd5\uff0c\u989c\u8272\u4e5f\u4e0d\u534f\u8c03\uff0c\u4f46\u5728\u53f3\u624b\u4e2d\uff0c\u5149\u8c31\u662f\u4e00\u4e2a\u7ade\u4e89\u8005\uff0c\u4e00\u4e2a\u5c0f\u4e2a\u5b50\u5f31\u8005\uff0c\u6253\u51fa\u4e86\u8d85\u4e4e\u5176\u4f53\u91cd\u7684\u62f3\u3002\u201d\n\u5361\u7f57\u5c14\u5728\u8fd9\u91cc\u63d0\u51fa\u4e86\u51e0\u70b9\u5f88\u597d\u7684\u89c2\u70b9\u3002\u5c3d\u7ba1\u2014\u2014\u4e5f\u8bb8\u662f\u56e0\u4e3a\u2014\u2014\u5b83\u7684\u7f3a\u9677\uff0c\u8be5\u9891\u8c31\u8fd8\u662f\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u6700\u7ec8\u552e\u51fa\u4e86500\u4e07\u53f0\u3002\u8fd9\u53f0\u7535\u8111\u72ec\u7279\u7684\u6a61\u80f6\u952e\u6210\u4e86\u7ade\u4e89\u5bf9\u624b\u4eec\u6b22\u7b11\u7684\u5bf9\u8c61\uff0c\u901a\u5e38\u88ab\u8d2c\u4e49\u5730\u79f0\u4e3a\u201c\u6b7b\u8089\u952e\u201d\u3002\u8fd8\u6709\u5c5e\u6027\u51b2\u7a81\uff0c\u4e0d\u5e78\u7684\u989c\u8272\u6d41\u5931\u53ef\u80fd\u4f1a\u8ba9\u6e38\u620f\u53d8\u5f97\u6df7\u4e71\u591a\u5f69\u3002\u7136\u800c\uff0c\u9891\u8c31\u8ff7\u5f88\u5feb\u5c31\u6210\u4e3a80\u5e74\u4ee3\u521d\u81f3\u4e2d\u671f\u8fc5\u901f\u53d1\u5c55\u7684\u5367\u5ba4\u7f16\u7801\u6587\u5316\u7684\u4e00\u90e8\u5206\uff0c\u4ed6\u4eec\u7ecf\u5e38\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u514b\u670d\u7535\u8111\u7684\u7f3a\u70b9\uff0c\u4ea7\u751f\u4ee5\u524d\u8ba4\u4e3a\u4e0d\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u65e9\u671f\u5e73\u53f0\u4f20\u5947\u72c2\u8e81\u7684\u77ff\u5de5\u5e26\u6765\u4e86\u6e38\u620f\u97f3\u4e50\u7684\u5947\u8ff9\uff1b\u300a\u7269\u7684\u6bbf\u5802\u300b\u548c\u300a\u963f\u74e6\u9686\u300b\u7b49\u5927\u7247\u5f15\u5165\u4e86\u667a\u80fd\u3001\u5c4f\u5e55\u5916\u654c\u4eba\u7684\u6982\u5ff5\uff0c\u751a\u81f3\u5c5e\u6027\u51b2\u7a81\u4e5f\u88ab\u806a\u660e\u7684\u7f16\u7801\u4eba\u5458\u632b\u8d25\uff0c\u4ed6\u4eec\u80fd\u591f\u60f3\u51fa\u7ed5\u8fc7\u8fd9\u79cd\u6548\u679c\u7684\u65b9\u6cd5\u3002\u201c\u6211\u559c\u6b22\u5728\u9891\u8c31\u4e0a\u7f16\u7a0b\uff0c\u201d\u5409\u59c6\u00b7\u5df4\u683c\u5229\u56de\u5fc6\u9053\uff0c\u4ed6\u662f\u300a\u5348\u591c\u62b5\u6297\u300b\u548c\u300a\u9634\u8c0b\u96c6\u56e2\u300b\u7b49\u6280\u672f\u60ca\u4eba\u6e38\u620f\u7684\u4f5c\u8005\u3002\u201c\u6240\u4ee5\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u786c\u4ef6\u6eda\u52a8\u3001\u7cbe\u7075\u6216SID\u82af\u7247\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5b83\u53ea\u4f1a\u8ba9\u6211\u4eec\u6210\u4e3a\u66f4\u597d\u7684\u7a0b\u5e8f\u5458\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u66f4\u591a\u5730\u601d\u8003\u6211\u4eec\u53ef\u4ee5\u505a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u4e2a\u6311\u6218\u3002\u201d\n\u8ba1\u7b97\u673a\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u52a0\u4e0a\u5176\u5feb\u901f\u589e\u957f\u7684\u7528\u6237\u7fa4\uff0c\u8fc5\u901f\u5728\u82f1\u56fd\u5404\u5730\u5efa\u7acb\u4e86\u5b83\u3002\u6e38\u620f\u662f\u4ee5\u5ec9\u4ef7\u3001\u6279\u91cf\u751f\u4ea7\u7684\u76d2\u5f0f\u78c1\u5e26\u5236\u4f5c\u7684\uff0c\u8fd9\u79cd\u683c\u5f0f\u7531\u4e8e\u5728\u97f3\u4e50\u884c\u4e1a\u7684\u4f7f\u7528\u800c\u4e3a\u5927\u591a\u6570\u4eba\u6240\u8ba4\u53ef\u3002Curry\u548cDixons\u7b49\u7535\u5b50\u786c\u4ef6\u5546\u5e97\u51fa\u552e\u7535\u8111\uff0c\u800c\u4eceBoots\u5230WH Smith\u7b49\u5404\u79cd\u96f6\u552e\u5546\u7684\u8d27\u67b6\u4e0a\u90fd\u585e\u6ee1\u4e86\u9891\u8c31\u6e38\u620f\u3002\u6570\u5343\u540d\u70ed\u5fc3\u7684\u7535\u8111\u8ff7\u7814\u7a76\u4e86\u4e13\u4e1a\u6742\u5fd7\u4e0a\u7684\u4ee3\u7801\u5217\u8868\uff0c\u82b1\u4e86\u6570\u5c0f\u65f6\u5728\u4ed6\u4eec\u7684\u9891\u8c31\u4e2d\u8f93\u5165\u6570\u5b57\u548c\u7b26\u53f7\uff0c\u53ea\u662f\u4e3a\u4e86\u626e\u6f14\u4e00\u4e2a\u57fa\u672c\u7684\u592a\u7a7a\u5165\u4fb5\u8005\u514b\u9686\u4eba\u2014\u2014\u5982\u679c\u5b83\u771f\u7684\u8d77\u4f5c\u7528\u7684\u8bdd\u3002\u5bf9\u4e8e\u8bb8\u591a\u572880\u5e74\u4ee3\u957f\u5927\u7684\u5b69\u5b50\u6765\u8bf4\uff0c\u4ed6\u4eec\u60f3\u8981\u7684\u53ea\u662f\u4e00\u4e2aZX\u9891\u8c31\uff0c\u800cLBC\u5e7f\u64ad\u516c\u53f8\u7684\u8a79\u59c6\u65af\u00b7\u5965\u5e03\u83b1\u6069\uff08James O\u2019Brien\uff09\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u65e9\u671f\u7684\u7231\u597d\u8005\u3002\u4ed6\u56de\u5fc6\u9053\uff1a\u201c\u5f53\u9891\u8c31\u51fa\u73b0\u65f6\uff0c\u6211\u6b63\u5728\u4e3aZX81\u5b58\u94b1\uff0c\u6211\u5fc5\u987b\u6709\u4e00\u4e2a\u3002\u201d\u3002\u201c\u6211\u7238\u7238\u7b54\u5e94\u6211\u4f1a\u628a\u6211\u5b58\u7684\u94b1\u548c\u4ed6\u5339\u914d\uff0c\u4f46\u5f53\u6211\u5e26\u4ed6\u53bb\u5e93\u91cc\uff0c\u5411\u4ed6\u5c55\u793a\u4ed6\u53ef\u4ee5\u548c\u5b83\u4e0b\u68cb\u65f6\uff0c\u4ed6\u91cd\u65b0\u8c08\u5224\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u3002\u201d\u8fd9\u4e2a\u8457\u540d\u7684\u516c\u7406\u5df2\u7ecf\u53d1\u6325\u4e86\u5b83\u7684\u9b54\u529b\uff1a\u8bda\u5b9e\u5730\u8bf4\uff0c\u5b83\u662f\u4e3a\u4e86\u6559\u80b2\u76ee\u7684\u3002\n\u56f4\u7ed5\u9891\u8c31\u53ca\u5176\u7ade\u4e89\u5bf9\u624b\u7684\u884c\u4e1a\u84ec\u52c3\u53d1\u5c55\uff0c\u50ac\u751f\u4e86\u65b0\u7684\u804c\u4e1a\u3001\u4e13\u4e1a\u96f6\u552e\u5e97\u548c\u51fa\u7248\u4e1a\uff0c\u8fd9\u4e9b\u884c\u4e1a\u5f88\u5feb\u610f\u8bc6\u5230\u9500\u552e\u8fd9\u4e9b\u7535\u8111\u7684\u662f\u6e38\u620f\u3002\u5965\u5e03\u83b1\u6069\u70ed\u60c5\u5730\u56de\u5fc6\u9053\uff1a\u201c\u649e\u8f66\uff08\u6742\u5fd7\uff09\u662f\u4e2a\u5927\u95ee\u9898\u3002\u201d\u3002\u201c\u8fd9\u662f\u4e00\u672c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6742\u5fd7\uff0c\u5982\u6b64\u4e0d\u656c\u548c\u806a\u660e\u3002\u6211\u4e00\u76f4\u60f3\u8ddf\u968f\u7236\u4eb2\u8fdb\u5165\u65b0\u95fb\u884c\u4e1a\uff0c\u4f46\u6211\u5f00\u59cb\u66f4\u591a\u5730\u601d\u8003\u5a31\u4e50\u5708\u548c\u89c2\u70b9\uff0c\u56e0\u4e3a\u300a\u649e\u8f66\u300b\u7ed9\u6211\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\u201d\u8fd9\u662f\u4e00\u4e2a\u719f\u6089\u7684\u6545\u4e8b\uff0c\u7b80\u6d01\u5730\u5c55\u793a\u4e86ZX\u9891\u8c31\u5728\u4e2a\u4eba\u5c42\u9762\u4e0a\u7684\u5f71\u54cd\u3002Carroll\u8bf4\uff0c\u201c\u5f53\u6211\u57282004\u5e74\u63a8\u51faRetro Gamer\u65f6\uff0c\u6beb\u65e0\u7591\u95ee\u7b2c\u4e00\u671f\u4e0d\u4f1a\u5305\u62ec\u5173\u4e8eSinclair\u7535\u8111\u548cJet Set Willy\u7684\u6587\u7ae0\u3002\u73b0\u5728\uff0c\u5728Spectrum\u5e86\u795d40\u5468\u5e74\u4e4b\u9645\uff0c\u6211\u4ecd\u7136\u5728\u5199\u5b83\uff0c\u8c08\u8bba\u5b83\uff0c\u5e86\u795d\u5b83\u3002\u201d\n\u597d\u554a\u6211\u5df2\u7ecf\u56f4\u7ed5\u5149\u8c31\u4e2d\u7684\u4e3b\u8981\u5f31\u70b9\u8df3\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\u4e86\u3002\u8f9b\u514b\u83b1\u70ed\u8877\u4e8e\u901a\u8fc7\u5c3d\u53ef\u80fd\u8282\u7ea6\u7ec4\u4ef6\u6765\u63d0\u9ad8\u4ef7\u683c\uff0c\u4ed6\u5bf9\u9891\u8c31\u7684\u4e3b\u8981\u76ee\u6807\u610f\u5473\u7740\u6e38\u620f\u5e76\u4e0d\u662f\u9996\u8981\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u4e24\u8005\u90fd\u4e0d\u5065\u5168\u3002\u201c\u8fd9\u7684\u786e\u662f\u4e00\u79cd\u72ec\u7279\u7684\u58f0\u97f3\uff01\u201d\u51e0\u9996\u8457\u540d\u76848\u4f4d\u66f2\u5b50\u7684\u4f5c\u66f2\u5bb6\u4e54\u7eb3\u68ee\u00b7\u9093\u6069\u8bf4\u3002\u201c\u6211\u8ba4\u4e3a\uff0c\u5f53\u4ed6\u4eec\u8ba9\u9891\u8c31\u4ef7\u683c\u5408\u7406\u65f6\uff0c\u97f3\u9891\u5e76\u4e0d\u662f\u9996\u8981\u4efb\u52a1\u3002\u201d\u9093\u6069\u4ece\u5c0f\u9177\u7231\u6d77\u519b\u51c6\u5c0664\u51fa\u8272\u7684SID\u82af\u7247\uff0c\u540e\u6765\u4ed6\u4e0eAY\u82af\u7247\u8054\u7cfb\u5728\u4e00\u8d77\uff0cAY\u82af\u7247\u662f\u4e00\u6b3e\u5353\u8d8a\u7684\u4e13\u7528\u58f0\u97f3\u82af\u7247\uff0c\u4e0e\u540e\u4e00\u6b3e128K\u9891\u8c31\u578b\u53f7\u4e00\u8d77\u63d0\u4f9b\u3002\u201c\u6211\u559c\u6b22\u548cAY\u82af\u7247\u4e00\u8d77\u5de5\u4f5c\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u4e0e\u5f53\u65f6\u7684\u5176\u4ed6\u4e1c\u897f\u76f8\u6bd4\uff0c\u8ba9\u67d0\u6837\u4e1c\u897f\u542c\u8d77\u6765\u76f8\u5bf9\u8f83\u597d\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u6211\u8ba4\u4e3a\u65cb\u5f8b\u7684\u5f71\u54cd\u66f4\u5927\u3002\u201d\u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u5e94\u5bf9\u539f\u59cb\u9891\u8c31\u7684\u5c16\u9510\u5f00\u5173\u58f0\u3002\u4f46\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u5c31\u50cf\u5c5e\u6027\u51b2\u7a81\u4e00\u6837\uff0c\u7cbe\u660e\u7684\u5f00\u53d1\u4eba\u5458\u627e\u5230\u4e86\u7ed5\u8fc7\u673a\u5668\u6781\u9650\u7684\u65b9\u6cd5\uff0c\u97f3\u4e50\u5bb6\u8482\u59c6\u00b7\u798f\u6797\uff08Tim Follin\uff09\u5c24\u5176\u7528\u539f\u59cb\u7684\u5bfb\u547c\u673a\u5236\u4f5c\u4e86\u4e00\u4e9b\u4ee4\u4eba\u60ca\u53f9\u7684\u66f2\u5b50\u3002\n\u4e0a\u56fe\uff1a\u4e54\u7eb3\u68ee\u00b7\u9093\u6069\uff08Jonathan Dunn\uff09\u7684ZX Spectrum Robocop\u4e3b\u9898\u975e\u5e38\u5438\u5f15\u4eba\uff0c\u5b83\u751a\u81f3\u88ab\u7528\u5728\u4e86\u8fd9\u5219\u7535\u5b50\u4ea7\u54c1\u7684\u7535\u89c6\u5e7f\u544a\u4e2d\u3002\n\u9664\u4e86\u5965\u5e03\u83b1\u6069\u548c\u5361\u7f57\u5c14\u8fd9\u6837\u7684\u8bb0\u8005\u5916\uff0c\u8fd8\u6709\u4e00\u5927\u7fa4\u4eba\u5728\u521b\u4f5c\u6e38\u620f\uff0c\u9996\u5148\u662f\u5728\u5367\u5ba4\u91cc\uff0c\u7136\u540e\u76f4\u63a5\u4e3a\u8f6f\u4ef6\u516c\u53f8\u6216\u5f00\u53d1\u5de5\u4f5c\u5ba4\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6e38\u620f\u5e02\u573a\u572880\u5e74\u4ee3\u4e2d\u671f\u53d8\u5f97\u66f4\u52a0\u5546\u4e1a\u5316\u3002\u867d\u7136\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u8fd9\u53f0\u8ba1\u7b97\u673a\u65e0\u6cd5\u4e0eCommodore 64\u5339\u654c\uff0c\u4f46\u5728\u82f1\u56fd\u548c\u6b27\u6d32\u5927\u90e8\u5206\u5730\u533a\uff0c\u5b83\u7684\u9891\u8c31\u6b63\u5728\u4ea7\u751f\u5de8\u5927\u7684\u5f71\u54cd\u300280\u5e74\u4ee3\u521d\uff0c\u7f57\u5fb7\u00b7\u5e93\u68ee\u65af\uff08Rod Cousens\uff09\u5728\u51fa\u7248\u5546Quicksilva\u5de5\u4f5c\uff0c\u5982\u4eca\u4ed6\u662f\u4ee3\u7801\u5927\u5e08\u548cJagex\u7684\u8001\u624b\u3002\u201c\u5f53\u65f6\u8ba1\u7b97\u673a\u884c\u4e1a\u7684\u6c1b\u56f4\u7c7b\u4f3c\u4e8e\u4e00\u573a\u9769\u547d\uff0c\u201d\u5e93\u68ee\u65af\u544a\u8bc9\u6211\u3002\u201c\u5f53\u65f6\u7684\u521b\u610f\u516c\u53f8\u2014\u2014Psion\u3001Bug Byte\u3001Silversoft\u548c\u6211\u4eec\u2014\u2014\u90fd\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u5f81\u670d\u4e16\u754c\u3002\u4ed6\u4eec\u4e4b\u95f4\u6709\u7740\u5de8\u5927\u7684\u53cb\u8c0a\uff0c\u5e74\u8f7b\u7a0b\u5e8f\u5458\u5728\u5367\u5ba4\u91cc\u5de5\u4f5c\uff0c\u4e0d\u65ad\u63d0\u51fa\u60f3\u6cd5\uff0c\u8fd9\u662f\u4e00\u6bb5\u975e\u5e38\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u5149\u3002\u201d\u4f5c\u4e3a\u65e9\u671f\u4e3b\u8981\u7684\u8f6f\u4ef6\u73a9\u5bb6\u4e4b\u4e00\uff0cQuicksilva\u5728Cousens\u6700\u7ec8\u5728\u4f26\u6566\u7687\u5bb6\u56ed\u827a\u5385\u7684\u5bb6\u5ead\u7535\u8111\u5c55\u4e0a\u770b\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u9891\u8c31\u4e4b\u524d\u5c31\u5df2\u7ecf\u4e86\u89e3\u4e86\u6240\u6709\u9891\u8c31\u3002\u201c\u4e3b\u8981\u7684\u8bdd\u9898\u662f48K\u7684RAM\u548c\u6a61\u80f6\u94a5\u5319\uff01\u201d\u4ed6\u7b11\u4e86\u3002\u5728\u79bb\u5f00Quicksilva\u7ec4\u5efaActivision\u7684\u82f1\u56fd\u8fd0\u8425\u516c\u53f8Electric Dreams\u540e\uff0cCousens\u5728\u62c5\u4efb\u7ba1\u7406\u548c\u54a8\u8be2\u89d2\u8272\u4e4b\u524d\uff0c\u66fe\u76d1\u7763\u8fc7\u8bb8\u591a\u66f4\u8457\u540d\u7684\u9891\u8c31\u6e38\u620f\u7684\u5236\u4f5c\u3002\n\u4e0a\u56fe\uff1a\u8fd9\u90e8\u6539\u7f16\u81ea\u79d1\u5e7b\u6050\u6016\u7535\u5f71\u300a\u5916\u661f\u4eba\u300b\u7684\u5927\u9884\u7b97\u8bb8\u53ef\u8bc1\u5f00\u59cb\u4e3b\u5bfc\u9891\u8c31\u6e38\u620f\u5e02\u573a\u3002\nZX\u9891\u8c31\u5f88\u4fbf\u5b9c\uff0c\u5f88\u96be\u8bf4\u5b83\u7684\u4ef7\u683c\u4e0d\u662f\u5b83\u6210\u529f\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\u4e00\u65e6\u5efa\u7acb\u4e86\u7528\u6237\u57fa\u7840\uff0c\u8be5\u5e73\u53f0\u5c31\u5177\u5907\u4e86\u53d1\u5e03\u6e38\u620f\u7684\u575a\u5b9e\u5546\u4e1a\u610f\u4e49\uff0c\u786e\u4fdd48K\u6e38\u620f\u7ee7\u7eed\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\uff0c\u5c3d\u7ba11986\u5e741\u6708\u51fa\u73b0\u4e86\u66f4\u9ad8\u7ea7\u7684128K\u673a\u578b\u3002\u867d\u7136\u6709\u4e1a\u4f59\u7684\u7a0b\u5e8f\u5458\u548c\u90a3\u4e9b\u4f7f\u7528\u4ed6\u4eec\u7684\u9891\u8c31\u8fdb\u884c\u6587\u5b57\u5904\u7406\u6216\u4f1a\u8ba1\u7684\u4eba\uff0c\u4f46\u8fd9\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6e38\u620f\u7684\u3002\u5361\u7f57\u5c14\u8bf4\uff1a\u201c\u5bf9\u8bb8\u591a\u73a9\u5bb6\u6765\u8bf4\uff0c\u8fd9\u662f\u901a\u5411Amiga\u3001Mega Drive\u3001PlayStation\u7b49\u6e38\u620f\u7684\u7b2c\u4e00\u5757\u8e0f\u811a\u77f3\u3002\u201d\u3002\u201c\u4f46\u5bf9\u5176\u4ed6\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u6000\u65e7\u3002\u201d\u53bb\u5e74\uff0c\u5f53\u514b\u83b1\u592b\u00b7\u8f9b\u514b\u83b1\u7235\u58eb\u4e0d\u5e78\u53bb\u4e16\u65f6\uff0cIT\u548c\u5de5\u7a0b\u9886\u57df\u7684\u5de5\u4f5c\u4eba\u5458\u503e\u8bc9\u7684\u60bc\u5ff5\u4e4b\u60c5\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u5361\u7f57\u5c14\u6307\u51fa\uff1a\u201c\u4ed6\u4eec\u7684\u804c\u4e1a\u751f\u6daf\u5f52\u529f\u4e8e\u9891\u8c31\u53ca\u5176\u524d\u8eabZX81\u3002\u201d\u3002\u201c\u4ed6\u4eec\u6478\u4e86\u6478\uff0c\u95e8\u5c31\u5f00\u4e86\u3002\u201d\n\u4e0a\u56fe\uff1aKim Justice\u53ea\u662f\u4f17\u591a\u4f20\u64ad\u9891\u8c31\u4e4b\u7231\u7684\u5e74\u8f7b\u4eba\u4e4b\u4e00\u3002\u4ee5\u4e0b\u662f\u5979\u5bf9\u514b\u83b1\u592b\u00b7\u8f9b\u514b\u83b1\u7235\u58eb\u7684\u81f4\u610f\u3002\n\u4ece\u5546\u4e1a\u89d2\u5ea6\u6765\u770b\uff0c\u8be5\u9891\u8c31\u662f\u4e00\u9879\u53ef\u9760\u7684\u6295\u8d44\uff0c\u4e5f\u662f\u4e00\u4e2a\u7545\u9500\u54c1\uff1b\u4f46\u8fd9\u5e76\u4e0d\u80fd\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6709\u90a3\u4e48\u591a\u4eba\u7231\u4e0a\u4e86\u7535\u8111\u7684\u53e4\u602a\u9b45\u529b\uff0c\u5e76\u4e14\u81f3\u4eca\u4ecd\u7231\u7740\u7535\u8111\u3002\u7b54\u6848\u53ef\u80fd\u53d6\u51b3\u4e8e\u5f53\u65f6\u7684\u76f8\u5173\u80cc\u666f\u3002\u201c\u9664\u4e86\u90a3\u4e9b\u9009\u62e9\u9898\u4e66\u548c\u7b28\u91cd\u7684\u63a7\u5236\u53f0\uff0c\u6211\u4eec\u80fd\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u771f\u6b63\u7684\u4e92\u52a8\uff0c\u201d\u5965\u5e03\u83b1\u6069\u56de\u5fc6\u9053\u3002\u201c\u4e0e\u673a\u5668\u4ea4\u6d41\uff0c\u53c2\u4e0e\u6545\u4e8b\u2014\u2014\u8fd9\u662f\u4e0b\u4e00\u4e2a\u5c42\u6b21\u3002\u201d\u867d\u7136Atari 2600\u5728\u82f1\u56fd\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u5176\u57fa\u4e8e\u76d2\u5f0f\u78c1\u5e26\u7684\u6e38\u620f\u4e5f\u5f88\u6602\u8d35\u3002\u9891\u8c31\u6e38\u620f\u7684\u4ef7\u683c\u548c\u666e\u904d\u6027\u6709\u52a9\u4e8e\u5b83\u7684\u6d41\u884c\uff0c\u5c24\u5176\u662f\u5f53Mastertronic\u548cAtlantis\u7b49\u5ec9\u4ef7\u516c\u53f8\u8fdb\u5165\u5e02\u573a\u65f6\u3002\u201c\u6211\u7231\u4e9a\u7279\u5170\u8482\u65af\uff01\u201d\u5965\u5e03\u83b1\u6069\u558a\u9053\u3002\u201c\u5b83\u4eec\u5f88\u4fbf\u5b9c\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7528\u6211\u7684\u96f6\u7528\u94b1\u4e70\u5b83\u4eec\u7684\u53d1\u884c\u7248\u3002\u5f97\u5230\u4e00\u6b3e\uff08\u5168\u4ef7\uff09\u6d77\u6d0b\u6e38\u620f\u4e25\u683c\u6765\u8bf4\u662f\u751f\u65e5\u548c\u5723\u8bde\u8282\u3002\u201d\u548c\u5965\u5e03\u83b1\u6069\u4e00\u6837\uff0c\u6211\u559c\u6b22\u5ec9\u4ef7\u6e38\u620f\uff0c\u5c24\u5176\u662f\u6587\u672c\u5192\u9669\u7684\u81ea\u7531\u548c\u4e92\u52a8\u6027\uff0c\u5c3d\u7ba1\u6211\u5f88\u5c11\u53d6\u5f97\u8fdb\u5c55\u3002\u4ed6\u4eec\u5bcc\u4e8e\u60f3\u8c61\u529b\u3001\u806a\u660e\uff0c\u800c\u4e14\u5f80\u5f80\u6df1\u5965\u96be\u61c2\uff0c\u5982\u4eca\u7684\u5438\u5f15\u529b\u4ee4\u4eba\u56f0\u60d1\u3002\u201c\u5373\u4f7f\u6ca1\u6709\u4e0d\u53ef\u907f\u514d\u7684\u5d29\u6e83\u548c\u52a0\u8f7d\u5931\u8d25\uff0c\u6e38\u620f\u73a9\u8d77\u6765\u8fd8\u662f\u5f88\u6162\uff0c\u201d\u5965\u5e03\u83b1\u6069\u8bf4\u3002\u201c\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u4e00\u5207\u90fd\u8ba9\u4eba\u611f\u5230\u5982\u6b64\u76f4\u63a5\u548c\u6fc0\u52a8\u3002\u201d\n\u5230\u4e8690\u5e74\u4ee3\u521d\uff0c\u8fd9\u4e00\u5149\u8c31\u88ab\u5f7b\u5e95\u8d85\u8d8a\uff0c\u5e76\u4e8e1992\u5e74\u505c\u6b62\u751f\u4ea7\u3002\u6487\u5f00\u6f5c\u5728\u5f71\u54cd\u4e0d\u8c08\uff0c\u8fd9\u5341\u5e74\u5269\u4e0b\u7684\u65f6\u95f4\u5bf9\u8ba1\u7b97\u673a\u6765\u8bf4\u76f8\u5bf9\u5e73\u9759\u5730\u8fc7\u53bb\u4e86\uff0c\u4e00\u5c0f\u64ae\u5fe0\u5b9e\u7684\u8ffd\u968f\u8005\u7ee7\u7eed\u4e3a\u73b0\u4ee3\u5e73\u53f0\u521b\u5efa\u8f6f\u4ef6\u548c\u6a21\u62df\u5668\u3002\u7136\u540e\uff0c\u57282004\u5e74\uff0c\u968f\u7740\u300a\u590d\u53e4\u73a9\u5bb6\u300b\u6742\u5fd7\u7b2c\u4e00\u671f\u7684\u51fa\u7248\uff0c\u968f\u7740\u5927\u91cf\u73a9\u5bb6\u6c89\u6d78\u5728\u5bf9\u4ed6\u4eec\u7684\u7b2c\u4e00\u53f0\u6e38\u620f\u673a\u7684\u6000\u65e7\u4e2d\uff0c\u8fd9\u4e00\u7cfb\u5217\u6e38\u620f\u518d\u6b21\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u2014\u2014\u5bf9\u4e0d\u8d77\uff0c\u514b\u83b1\u592b\u7235\u58eb\uff0c\u4f46\u5bf9\u6211\u4eec\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u5b83\u3002\u5728\u6211\u6253\u5b57\u7684\u540c\u65f6\uff0c\u4e0b\u4e00\u671f\u7684\u7b2c\u4e8c\u671f\uff0c\u4e00\u4e2a\u9762\u5411\u73b0\u4ee3\u7684\u65b0\u9891\u8c31\uff0c\u6b63\u5728\u514b\u670d\u4f9b\u5e94\u95ee\u9898\uff0c\u5e76\u5e0c\u671b\u5f88\u5feb\u53d1\u5e03\uff1b\u300a\u649e\u8f66\u300b\u6742\u5fd7\u53c8\u56de\u5230\u4e86WH Smiths\uff1bBitmapsoft\u548cCronosoft\u7b49\u591a\u5bb6\u8f6f\u4ef6\u516c\u53f8\u4ecd\u5728\u4e3a\u5f3a\u5927\u7684ZX\u9891\u8c31\u53d1\u5e03\u76d2\u5f0f\u6e38\u620f\u3002\n\u5f53\u7136\uff0c\u4eba\u4eec\u5bf9\u8fd9\u4e00\u9886\u57df\u7684\u8ba8\u8bba\u65e0\u7a77\u65e0\u5c3d\uff0c\u6bcf\u5929\u90fd\u5728\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u6b23\u8d4f\u548c\u53d1\u73b0\u5b83\u7684\u6e38\u620f\u3002\u8d44\u6df1\u9891\u8c31\u7a0b\u5e8f\u5458\u5409\u59c6\u00b7\u5df4\u683c\u5229\uff08Jim Bagley\uff09\u6307\u51fa\uff1a\u201c\u8fd9\u662f\u56e0\u4e3a\u5f88\u591a\u4eba\u90fd\u6709\u5728\u4e0a\u9762\u73a9\u6e38\u620f\u7684\u7f8e\u597d\u7ae5\u5e74\u8bb0\u5fc6\uff0c\u5e76\u73cd\u60dc\u90a3\u4e9b\u7f8e\u597d\u65f6\u5149\u3002\u201d\u3002\u201c\u5b83\u5c31\u50cf\u4e00\u4e2a\u771f\u6b63\u7684\u597d\u670b\u53cb\uff0c\u5b83\u7ed9\u4e86\u4f60\u7f8e\u597d\u7684\u65f6\u5149\uff0c\u603b\u662f\u51c6\u5907\u8ba9\u4f60\u5feb\u4e50\u3002\u201d\u5c31\u50cf\u6211\u4eec\u7ae5\u5e74\u7684\u8bb8\u591a\u8bb0\u5fc6\u4e00\u6837\uff0c\u8fd9\u4e00\u5149\u8c31\u5728\u4eca\u5929\u53d7\u5230\u5c0a\u91cd\u6b63\u662f\u56e0\u4e3a\u8fd9\u4e00\u70b9\uff0c\u800c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u2014\u2014\u5305\u62ec\u6211\u5728\u5185\u2014\u2014\u5982\u679c\u6ca1\u6709\u8fd9\u9879\u53e4\u602a\u4e14\u65e0\u53ef\u5426\u8ba4\u7684\u82f1\u56fd\u53d1\u660e\uff0c\u53ef\u80fd\u4e0d\u4f1a\u50cf\u4eca\u5929\u8fd9\u6837\u505a\u3002\u5e93\u68ee\u65af\u8bf4\uff1a\u201c\u5f53\u524d\u7684\u6e38\u620f\u5e02\u573a\u8d77\u6e90\u4e8e\u90a3\u4e2a\u65f6\u4ee3\uff0c\u5b83\u7684\u5b58\u5728\u8981\u5f52\u529f\u4e8e\u90a3\u4e2a\u65f6\u4ee3\u3002\u201d\u3002\u201c\u5b83\u7684\u8bbe\u8ba1\u3001\u5c3a\u5bf8\u548c\u6e38\u620f\u5728\u5f53\u65f6\u8ba9\u5b83\u5f15\u4eba\u6ce8\u76ee\u3002\u5b83\u4e5f\u662f\u4e00\u79cd\u5f88\u597d\u7684\u8868\u8fbe\u5a92\u4ecb\uff0c\u800c\u4e14\u4ef7\u683c\u5408\u7406\u3002\u5b83\u662f\u82f1\u56fd\u7684\u3002\u201d\n\u8a00\u8bba\u81ea\u7531\uff0c\u4e0d\u4ec5\u662f\u6e38\u620f\u548c\u4e92\u52a8\u7684\u80fd\u529b\uff0c\u800c\u4e14\u662f\u521b\u9020\u7684\u80fd\u529b\uff0c\u662f80\u5e74\u4ee3\u6fc0\u53d1\u5982\u6b64\u591a\u60f3\u8c61\u529b\u7684\u6838\u5fc3\u539f\u5219\uff0c\u53ef\u80fd\u662f\u8be5\u5149\u8c31\u6210\u529f\u7684\u4e3b\u8981\u539f\u56e0\u3002\u5965\u5e03\u83b1\u6069\u8bf4\uff1a\u201c\u8fd9\u8ba9\u6211\u4eec\u5728\u81ed\u540d\u662d\u8457\u7684\u9752\u5c11\u5e74\u65f6\u671f\u5f97\u4ee5\u966a\u4f34\uff0c\u8ba9\u6211\u4eec\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u9003\u79bb\u4ed6\u4eba\u7684\u60f3\u8c61\u3002\u6211\u4ee5\u4e3a\u8fd9\u5c31\u662f\u672a\u6765\u3002\u201d", "note_en": "On the 23rd April 1982, Cambridge-based Sinclair Research unveiled its latest product and 40 years later, its influence and place in history cannot be overstated. Without the ZX Spectrum, the games industry \u2013 at least in the UK and certain other European countries \u2013 would certainly not be the behemoth it is today.\n  Looking back from a world of smartphones and  Xboxes, it\u2019s astonishing that such a commercially successful product could have happened with this unglamorous and flawed piece of equipment. Yes, I\u2019m a Speccy fan through and through, cut me and I bleed red, yellow, green and cyan, in that order. But even I readily admit that the home computer had its drawbacks, its imperfections and its idiosyncrasies. In truth, the ZX Spectrum was far from perfect; but that was all part of its appeal. Oh, and the fact it was cheap.\n Very cheap, actually, when compared to rivals of the time. Aware that home computing was a dreadfully expensive business, out of the reach of the average family, Sir Clive Sinclair devised a plan to produce a low-budget micro that, like the television and VCR, would form a central part of a family\u2019s entertainment \u2013 and open up computing to everybody. The Spectrum\u2019s great rivals, the Commodore 64 and BBC Micro Model B both retailed for over \u00a3300, almost \u00a31000 in today\u2019s money; when the Sinclair computer appeared in 1982, it was priced at just \u00a3125 for the 16K version with another fifty quid getting you a whopping 48K. To many families, often working on the assumption that computers were a passing fad and \u2018just for kids\u2019, it was a no-brainer.\n  The price enabled Sinclair to get a foothold into homes around the UK and Europe; unfortunately for the man behind the machine, it wasn\u2019t for the broad and noble purposes he was hoping for. As with most other computers of the time, it was the games that sold the ZX Spectrum, and in these pre-Xbox and  PlayStation times, the Sinclair computer represented the best and cheapest way for kids to play videogames at home. One such wide-eyed youngster was Martyn Carroll, former editor of  Retro Gamer magazine and a games journalist specialising in the vintage Micro. \u201c[The Spectrum] was less expensive than most computers at the time, yet in many ways it was more capable,\u201d he says. \u201cThe sound was awful and the colours clashed, but in the right hands the Spectrum was a contender, a diminutive underdog that punched above its weight.\u201d\n  Carroll makes a couple of excellent points here. Despite \u2013 maybe, because \u2013 of its flaws, the Spectrum grew into an outstanding success, eventually selling five million units. The computer\u2019s distinctive rubber keys became the object of mirth for rivals, often derogatorily dubbed \u2018dead flesh keys\u2019. And there was the attribute clash, that unfortunate bleeding of colours that could render games a chaotic multicoloured mess. Yet Spectrum fans, soon to become part of the bedroom coder culture that exploded in the early-to-mid Eighties, often found a way around the computer\u2019s drawbacks, producing results that were previously thought impossible. Early platform legend  Manic Miner brought the wonder of in-game music; vast titles such as  Halls Of The Things and  Avalon introduced the concept of intelligent, off-screen enemies and even the attribute clash was thwarted with clever coders able to devise ways to bypass the effect. \u201cI loved programming on the Spectrum,\u201d recalls Jim Bagley, author of technically-stunning games such as  Midnight Resistance and  Cabal. \u201cSo what if it didn\u2019t have hardware scrolling, sprites or a SID chip \u2013 it only made us better coders as we had to think more into what and how we could do something. It was a challenge.\u201d\n  The accessibility of the computer, plus its rapidly-rising user base, was quickly establishing it all over the UK. Games came on cheap, mass-produced cassettes, a format recognisable to most people thanks to its use in the music industry. Electronic hardware stores such as Currys and Dixons sold the computer while the shelves of all manner of retailers, from Boots to WH Smiths, were stuffed with Spectrum games. Thousands of eager computer fans studied listings of code in specialist magazines, spending hours typing the numbers and symbols into their Spectrum just to play a rudimentary Space Invaders clone \u2013 if it even worked at all. For many kids growing up in the Eighties, all they wanted was a ZX Spectrum, and one such early enthusiast was LBC broadcaster James O\u2019Brien. \u201cI was saving up for a ZX81 when the Spectrum came out, and I had to have one,\u201d he recalls. \u201cMy dad promised to match whatever I saved, but when I took him to Currys and showed him that he could play Chess against it, he renegotiated and we got one.\u201d The famed axiom was working its magic already: it\u2019s for educational purposes, honest.\n  The industry surrounding the Spectrum and its rivals blossomed, engendering new careers, specialist retail outlets and a publishing industry that quickly realised it was the games that were selling these computers. \u201c Crash [magazine] was the big one,\u201d remembers O\u2019Brien warmly. \u201cIt was an incredible magazine, so irreverent and clever. I\u2019d always wanted to follow my dad into news journalism, but I started thinking more about showbiz and opinion pieces because  Crash made such a big impression on me.\u201d This is a familiar story that succinctly demonstrates the impact of the ZX Spectrum on a personal level. Says Carroll, \u201cWhen I launched  Retro Gamer back in 2004 there was absolutely no question that the first issue wouldn\u2019t include articles on Sinclair computers and  Jet Set Willy. Now, as the Spectrum celebrates its 40th anniversary, I\u2019m still writing about it, talking about it, celebrating it.\u201d\n  OK. I\u2019ve danced around the major weakness in the Spectrum for long enough. Keen to sharpen the price by economising components wherever they could, Sinclair\u2019s chief aim for the Spectrum meant that games were not a priority. Therefore, neither was sound. \u201cWell it was certainly a unique sound!\u201d says Jonathan Dunn, composer of several famous 8-bit tunes. \u201cI don\u2019t think audio was top of the priority list when they were making the Spectrum affordable.\u201d Having grown up adoring the Commodore 64\u2019s brilliant SID chip, Dunn became associated with the AY chip, a far superior dedicated sound chip that came with the latter 128K Spectrum models. \u201cI enjoyed working with the AY chip,\u201d he says. \u201cIn some respects it was much easier to make something sound comparatively good to the other stuff out there at the time and I think the melodies came through more.\u201d To begin with, we had to contend with the original Spectrum\u2019s screechy on-off sound. But incredibly, as with attribute clash, canny developers found a way around the limits of the machine, with musician Tim Follin in particular producing some amazing tunes from the primitive beeper.\n  Above: Jonathan Dunn\u2019s ZX Spectrum Robocop theme was so catchy, it was even used in this TV advert for electrical goods.\n In addition to journalists such as O\u2019Brien and Carroll, there was a whole swathe of people creating games, firstly in their bedrooms, before working directly for software houses or development studios as the games market became more commercially minded in the mid-Eighties. While on a global scale the computer was no match for the Commodore 64, in the UK and much of Europe, the Spectrum was making a huge impact. Working at publisher Quicksilva in the early Eighties was Rod Cousens, today a veteran of Codemasters and Jagex. \u201cThe vibe in the computer industry at the time was something akin to a revolution,\u201d Cousens tells me. \u201cAnd the creative companies of the time \u2013 Psion, Bug-Byte, Silversoft and us \u2013 all thought we could conquer the world. There was a tremendous camaraderie and it was a very exciting time with young programmers working out of their bedrooms, constantly coming forward with ideas.\u201d As one of the major early software players, Quicksilva knew all about the Spectrum before Cousens finally saw one in its completed form at the Home Computer Fair, Royal Horticultural Halls, London. \u201cThe main talking points were the 48K of RAM and the rubber keys!\u201d he laughs. Having left Quicksilva to form  Activision\u2019s UK operation, Electric Dreams, Cousens oversaw the production of many more notable Spectrum games before stepping into management and consultancy roles.\n  Above: Big budget licences such as this adaptation of sci-fi horror movie hit Aliens came to dominate the Spectrum games market.\n The ZX Spectrum was cheap, and it would be hard to argue that its price wasn\u2019t a factor in its success. Once that established user base was set, the platform made solid commercial sense to release games on, ensuring that 48K games continued to dominate, despite the appearance of the superior 128K model in January 1986. And while there were amateur coders and those that used their Spectrum for word processing or accounting, it was really all about the games. \u201cFor many gamers it was the first stepping stone that led to the Amiga,  Mega Drive, PlayStation and so on,\u201d says Carroll. \u201cBut for others, it\u2019s much more than just nostalgia.\u201d When, last year, Sir Clive Sinclair sadly passed away, the outpouring of tributes from people working in IT and engineering was incredible. \u201cThey owed their careers to the Spectrum and its forebear, the ZX81,\u201d notes Carroll. \u201cThey dabbled, and it opened the door.\u201d\n  Above: Kim Justice is just one of the many YouTubers who spreading the love of the Spectrum. Here\u2019s her loving tribute to Sir Clive Sinclair.\n Commercially, the Spectrum was a sound investment and a good seller; but that doesn\u2019t explain how so many fell in love with its quirky charms, and still love the computer today. The answer perhaps lies with the relevant context of the time. \u201cApart from those multiple choice books and clunky consoles, it was the first thing we could do that was truly interactive,\u201d remembers O\u2019Brien. \u201cCommunicating with a machine, taking part in stories \u2013 it was next level.\u201d While popular in the UK, the Atari 2600, and more pertinently, its cartridge-based games, were expensive. The price, and ubiquity of Spectrum games helped its popularity, especially when budget companies such as Mastertronic and Atlantis entered the market. \u201cI loved Atlantis!\u201d exclaims O\u2019Brien. \u201cThey were budget, so I could actually buy their releases with my pocket-money. Getting an [full price] Ocean game was strictly birthday and Christmas.\u201d Like O\u2019Brien, I loved budget games, and especially the freedom and interactivity of text adventures, even though I seldom progressed far. Imaginative, clever and often abstruse, their appeal can be baffling today. \u201cEven without the inevitable crashes and failures to load, the gameplay was so slow,\u201d notes O\u2019Brien. \u201cBut at the same time it all felt so immediate and exciting.\u201d\n  By the early Nineties, the Spectrum was hopelessly outclassed and in 1992 production finally ceased. Latent influence aside, the rest of the decade passed relatively quietly for the computer, a handful of dedicated followers continuing to create software and emulators for modern platforms. Then, in 2004, with the publication of the first issue of  Retro Gamer magazine, the Spectrum began to gain in popularity once more as a mass of gamers wallowed in the nostalgia of their first games machine \u2013 sorry, Sir Clive, but to most of us, that\u2019s what it was. As I type, issue two of the Spectrum Next, a new Spectrum for a modern age, is overcoming supply problems and hoping for a release soon;  Crash magazine is back in WH Smiths; and multiple software houses such as Bitmapsoft and Cronosoft are still releasing games, on cassette, for the mighty ZX Spectrum.\n  And of course, the Spectrum is endlessly discussed, its games adored and discovered on social media platforms every day. \u201cIt\u2019s because so many people have wonderful childhood memories of playing games on it and cherish those good times,\u201d notes veteran Spectrum programmer Jim Bagley. \u201cIt\u2019s like a really good friend, it gave you great times and was always ready to make you happy.\u201d Like many of our childhood memories, the Spectrum is revered today precisely because of this, and the added knowledge that many of us \u2013 me included \u2013 would probably not be doing what we do today without the eccentric and undeniably British invention. \u201cThe current gaming market has its roots in that era and owes its existence to that time,\u201d observes Cousens. \u201cThe design, size and its games made the Spectrum compelling at the time. It was also a great medium of expression and was affordable. And it was British.\u201d\n The freedom of expression, the ability to not only play and interact, but also to create, is the core tenet that fired so many imaginations back in the Eighties, and is possibly the leading explanation for the Spectrum\u2019s success. Says O\u2019Brien, \u201cIt kept us company during the notoriously tricky business of adolescence and let us escape into other people\u2019s imaginations in ways that had never been possible before. I thought it was the future.\u201d", "posttime": "2022-02-20 11:21:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "zx,\u6e38\u620f", "title": "40\u5c81\u65f6\u7684ZX\u5149\u8c31\uff1a\u56de\u987e", "title_en": "ZX Spectrum at 40: a look back", "transed": 1, "url": "https://www.nme.com/features/gaming-features/zx-spectrum-at-40-a-look-back-3162913", "via": "", "real_tags": ["zx", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074165, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a9\u7248\u6743\u6240\u6709\uff08c\uff092019\u5e74\uff0cNVIDIA Corporation\u7684\u7814\u7a76\u4eba\u5458\u79f0\uff0c\u4eba\u4eec\u65e0\u6cd5\u533a\u5206\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u4eba\u8138\uff08\u4f7f\u7528StyleGAN2\uff09\u548c\u771f\u5b9e\u4eba\u8138\uff0c\u4ed6\u4eec\u547c\u5401\u91c7\u53d6\u4fdd\u62a4\u63aa\u65bd\u4ee5\u9632\u6b62\u201c\u6df1\u5ea6\u5047\u8d27\u201d\u3002\n\u4eba\u5de5\u667a\u80fd\u5408\u6210\u7684\u6587\u672c\u3001\u97f3\u9891\u3001\u56fe\u50cf\u548c\u89c6\u9891\u5df2\u7ecf\u88ab\u7528\u4e8e\u6240\u8c13\u7684\u201c\u590d\u4ec7\u8272\u60c5\u201d\u3001\u6b3a\u8bc8\u548c\u5ba3\u4f20\u3002\n\u6765\u81ea\u5170\u5f00\u65af\u7279\u5927\u5b66\u7684Sophie Nightingale\u535a\u58eb\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u5927\u5b66\u7684Hany Farid\u6559\u6388\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u53c2\u4e0e\u8005\u88ab\u8981\u6c42\u533a\u5206\u827a\u672f\u72b6\u6001\u3001\u5408\u6210\u9762\u5b54\u548c\u771f\u5b9e\u9762\u5b54\uff0c\u4ee5\u53ca\u9762\u5b54\u5524\u8d77\u7684\u4fe1\u4efb\u7a0b\u5ea6\u3002\n\u7ed3\u679c\u8868\u660e\uff0c\u5408\u6210\u751f\u6210\u7684\u4eba\u8138\u4e0d\u4ec5\u5177\u6709\u9ad8\u5ea6\u7684\u7167\u7247\u771f\u5b9e\u611f\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0e\u771f\u5b9e\u4eba\u8138\u65e0\u6cd5\u533a\u5206\uff0c\u751a\u81f3\u88ab\u8ba4\u4e3a\u66f4\u53ef\u4fe1\u3002\n\u4ed6\u4eec\u5728\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u4e0a\u5199\u9053\uff1a\u201c\u6211\u4eec\u5bf9\u4eba\u5de5\u667a\u80fd\u5408\u6210\u4eba\u8138\u7167\u7247\u771f\u5b9e\u6027\u7684\u8bc4\u4f30\u8868\u660e\uff0c\u5408\u6210\u5f15\u64ce\u5df2\u7ecf\u7a7f\u8fc7\u4e86\u795e\u79d8\u7684\u5c71\u8c37\uff0c\u80fd\u591f\u521b\u9020\u51fa\u6bd4\u771f\u5b9e\u4eba\u8138\u66f4\u96be\u4ee5\u533a\u5206\u3001\u66f4\u503c\u5f97\u4fe1\u8d56\u7684\u4eba\u8138\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u8b66\u544a\u4eba\u4eec\u65e0\u6cd5\u8bc6\u522b\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u56fe\u50cf\u7684\u5f71\u54cd\u3002\n\u201c\u4e5f\u8bb8\u6700\u6709\u5bb3\u7684\u540e\u679c\u662f\uff0c\u5728\u4efb\u4f55\u56fe\u50cf\u6216\u89c6\u9891\u90fd\u53ef\u80fd\u88ab\u4f2a\u9020\u7684\u6570\u5b57\u4e16\u754c\u4e2d\uff0c\u4efb\u4f55\u4e0d\u65b9\u4fbf\u6216\u4e0d\u53d7\u6b22\u8fce\u7684\u8bb0\u5f55\u7684\u771f\u5b9e\u6027\u90fd\u53ef\u80fd\u53d7\u5230\u8d28\u7591\u3002\u201d\n\u00b7\u5728\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c315\u540d\u53c2\u4e0e\u8005\u5c06\u4ece800\u5f20\u8138\u4e2d\u63d0\u53d6\u7684128\u5f20\u8138\u5206\u4e3a\u771f\u5b9e\u8138\u548c\u5408\u6210\u8138\u3002\u4ed6\u4eec\u7684\u51c6\u786e\u7387\u4e3a48%\uff0c\u63a5\u8fd150%\u7684\u673a\u4f1a\u8868\u73b0\u3002\n\u00b7\u5728\u7b2c\u4e8c\u4e2a\u5b9e\u9a8c\u4e2d\uff0c219\u540d\u65b0\u53c2\u4e0e\u8005\u63a5\u53d7\u4e86\u57f9\u8bad\uff0c\u5e76\u5c31\u5982\u4f55\u5bf9\u4eba\u8138\u8fdb\u884c\u5206\u7c7b\u7ed9\u51fa\u4e86\u53cd\u9988\u3002\u4ed6\u4eec\u4ece\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\u7684800\u5f20\u8138\u4e2d\uff0c\u5bf9128\u5f20\u8138\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u4f46\u5c3d\u7ba1\u7ecf\u8fc7\u4e86\u8bad\u7ec3\uff0c\u51c6\u786e\u7387\u4ec5\u63d0\u9ad8\u523059%\u3002\n\u7814\u7a76\u4eba\u5458\u51b3\u5b9a\u5f04\u6e05\u695a\u5bf9\u53ef\u4fe1\u5ea6\u7684\u611f\u77e5\u662f\u5426\u80fd\u5e2e\u52a9\u4eba\u4eec\u8bc6\u522b\u4eba\u9020\u56fe\u50cf\u3002\n\u201c\u4eba\u8138\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\u6765\u6e90\uff0c\u66b4\u9732\u65f6\u95f4\u4ec5\u4e3a\u6beb\u79d2\uff0c\u5c31\u8db3\u4ee5\u5bf9\u53ef\u4fe1\u5ea6\u7b49\u4e2a\u4eba\u7279\u5f81\u8fdb\u884c\u9690\u5f0f\u63a8\u65ad\u3002\u6211\u4eec\u60f3\u77e5\u9053\u5408\u6210\u4eba\u8138\u662f\u5426\u4f1a\u6fc0\u6d3b\u540c\u6837\u7684\u53ef\u4fe1\u5ea6\u5224\u65ad\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u5bf9\u53ef\u4fe1\u5ea6\u7684\u611f\u77e5\u5c31\u6709\u52a9\u4e8e\u533a\u5206\u771f\u5b9e\u4eba\u8138\u548c\u5408\u6210\u4eba\u8138\u3002\u201d\n\u7b2c\u4e09\u9879\u7814\u7a76\u8981\u6c42223\u540d\u53c2\u4e0e\u8005\u5bf9\u540c\u4e00\u7ec4800\u5f20\u8138\u4e2d\u7684128\u5f20\u8138\u7684\u53ef\u4fe1\u5ea6\u8fdb\u884c\u8bc4\u5206\uff0c\u8bc4\u5206\u8303\u56f4\u4e3a1\uff08\u975e\u5e38\u4e0d\u53ef\u4fe1\uff09\u52307\uff08\u975e\u5e38\u53ef\u4fe1\uff09\u3002\n\u5408\u6210\u4eba\u8138\u7684\u5e73\u5747\u53ef\u4fe1\u5ea6\u6bd4\u771f\u5b9e\u4eba\u8138\u7684\u5e73\u5747\u53ef\u4fe1\u5ea6\u9ad87.7%\uff0c\u5177\u6709\u7edf\u8ba1\u5b66\u610f\u4e49\u3002\n\u201c\u4e5f\u8bb8\u6700\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u5408\u6210\u4eba\u8138\u6bd4\u771f\u5b9e\u4eba\u8138\u66f4\u53ef\u4fe1\u3002\u201d\n\u00b7\u9ed1\u4eba\u9762\u5b54\u88ab\u8bc4\u4e3a\u6bd4\u5357\u4e9a\u9762\u5b54\u66f4\u503c\u5f97\u4fe1\u8d56\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u6574\u4e2a\u79cd\u65cf\u4e2d\u5e76\u6ca1\u6709\u5f71\u54cd\u3002\n\u201c\u4e00\u5f20\u7b11\u8138\u66f4\u6709\u53ef\u80fd\u88ab\u8bc4\u4e3a\u503c\u5f97\u4fe1\u8d56\u7684\u4eba\uff0c\u4f4665.5%\u7684\u771f\u5b9e\u8138\u548c58.8%\u7684\u5408\u6210\u8138\u90fd\u5728\u5fae\u7b11\uff0c\u56e0\u6b64\u5355\u51ed\u9762\u90e8\u8868\u60c5\u65e0\u6cd5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5408\u6210\u8138\u88ab\u8bc4\u4e3a\u66f4\u503c\u5f97\u4fe1\u8d56\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u5408\u6210\u4eba\u8138\u53ef\u80fd\u88ab\u8ba4\u4e3a\u66f4\u503c\u5f97\u4fe1\u4efb\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u666e\u901a\u4eba\u8138\u76f8\u4f3c\uff0c\u800c\u666e\u901a\u4eba\u8138\u672c\u8eab\u88ab\u8ba4\u4e3a\u66f4\u503c\u5f97\u4fe1\u4efb\u3002\n\u4e3a\u4e86\u4fdd\u62a4\u516c\u4f17\u514d\u53d7\u201c\u6df1\u5ea6\u4f2a\u9020\u201d\uff0c\u4ed6\u4eec\u8fd8\u63d0\u51fa\u4e86\u5408\u6210\u56fe\u50cf\u7684\u521b\u5efa\u548c\u5206\u53d1\u6307\u5357\u3002\n\u201c\u4fdd\u969c\u63aa\u65bd\u53ef\u80fd\u5305\u62ec\uff0c\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u548c\u89c6\u9891\u5408\u6210\u7f51\u7edc\u4e2d\u52a0\u5165\u5f3a\u5927\u7684\u6c34\u5370\uff0c\u8fd9\u5c06\u4e3a\u53ef\u9760\u7684\u8eab\u4efd\u8bc6\u522b\u63d0\u4f9b\u4e0b\u6e38\u673a\u5236\u3002\u56e0\u4e3a\u8fd9\u9879\u5f3a\u5927\u6280\u672f\u7684\u4f7f\u7528\u6c11\u4e3b\u5316\u6784\u6210\u4e86\u6700\u91cd\u5927\u7684\u5a01\u80c1\uff0c\u6211\u4eec\u8fd8\u9f13\u52b1\u91cd\u65b0\u8003\u8651issez Fair\u9762\u5411\u516c\u4f17\uff0c\u65e0\u9650\u5236\u5730\u53d1\u5e03\u4ee3\u7801\uff0c\u4f9b\u4efb\u4f55\u4eba\u5408\u5e76\u5230\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\n\u201c\u5728\u8fd9\u4e2a\u5173\u952e\u65f6\u523b\uff0c\u6b63\u5982\u5176\u4ed6\u79d1\u5b66\u548c\u5de5\u7a0b\u9886\u57df\u6240\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u9f13\u52b1\u56fe\u5f62\u548c\u89c6\u89c9\u754c\u4e3a\u5408\u6210\u5a92\u4f53\u6280\u672f\u7684\u521b\u9020\u548c\u4f20\u64ad\u5236\u5b9a\u6307\u5bfc\u65b9\u9488\uff0c\u5176\u4e2d\u5305\u62ec\u7814\u7a76\u4eba\u5458\u3001\u51fa\u7248\u5546\u548c\u5a92\u4f53\u5206\u9500\u5546\u7684\u9053\u5fb7\u51c6\u5219\u3002\u201d\n\u56de\u5230\u65b0\u95fb\n\u4e5f\u8bb8\u6700\u6709\u5bb3\u7684\u540e\u679c\u662f\uff0c\u5728\u4efb\u4f55\u56fe\u50cf\u6216\u89c6\u9891\u90fd\u53ef\u80fd\u88ab\u4f2a\u9020\u7684\u6570\u5b57\u4e16\u754c\u4e2d\uff0c\u4efb\u4f55\u4e0d\u65b9\u4fbf\u6216\u4e0d\u53d7\u6b22\u8fce\u7684\u8bb0\u5f55\u7684\u771f\u5b9e\u6027\u90fd\u53ef\u80fd\u53d7\u5230\u8d28\u7591", "note_en": "\u00a9 Copyright (c) 2019, NVIDIA Corporation    People cannot distinguish between a face generated by Artificial Intelligence - using StyleGAN2- and a real face say researchers, who are calling for safeguards to prevent \u201cdeep fakes\u201d.\n AI-synthesized text, audio, image, and video have already been used for so-called \u201crevenge porn\u201d, fraud and propaganda.\n Dr Sophie Nightingale from Lancaster University and Professor Hany Farid from the University of California, Berkeley, conducted experiments in which participants were asked to distinguish state of the art StyleGAN2 synthesized faces from real faces and what level of trust the faces evoked.\n The results revealed that synthetically generated faces are not only highly photo realistic, but nearly indistinguishable from real faces and are even judged to be more trustworthy.\n Writing in the journal, they say that: \u201cOur evaluation of the photo realism of AI-synthesized faces indicates that synthesis engines have passed through the uncanny valley and are capable of creating faces that are indistinguishable \u2013 and more trustworthy \u2013 than real faces.\u201d\n The researchers warn of the implications of people\u2019s inability to identify AI-generated images.\n \u201cPerhaps most pernicious is the consequence that in a digital world in which any image or video can be faked, the authenticity of any inconvenient or unwelcome recording can be called into question.\u201d\n \u00b7 In the first experiment, 315 participants classified 128 faces taken from a set of 800 as either real or synthesized. Their accuracy rate was 48%, close to a chance performance of 50%.\n \u00b7 In a second experiment, 219 new participants were trained and given feedback on how to classify faces. They classified 128 faces taken from the same set of 800 faces as in the first experiment - but despite their training, the accuracy rate only improved to 59%.\n The researchers decided to find out if perceptions of trustworthiness could help people identify artificial images.\n \u201cFaces provide a rich source of information, with exposure of just milliseconds sufficient to make implicit inferences about individual traits such as trustworthiness. We wondered if synthetic faces activate the same judgements of trustworthiness. If not, then a perception of trustworthiness could help distinguish real from synthetic faces.\u201d\n A third study asked 223 participants to rate the trustworthiness of 128 faces taken the same set of 800 faces on a scale of 1 (very untrustworthy) to 7 (very trustworthy).\n The average rating for synthetic faces was 7.7% MORE trustworthy than the average rating for real faces which is statistically significant.\n \u201cPerhaps most interestingly, we find that synthetically-generated faces are more trustworthy than real faces.\u201d\n \u00b7 Black faces were rated as more trustworthy than South Asian faces but otherwise there was no effect across race.\n  \u201cA smiling face is more likely to be rated as trustworthy, but 65.5% of the real faces and 58.8% of synthetic faces are smiling, so facial expression alone cannot explain why synthetic faces are rated as more trustworthy.\u201d\n The researchers suggest that synthesized faces may be considered more trustworthy because they resemble average faces - which themselves are deemed more trustworthy.\n To protect the public from \u201cdeep fakes\u201d, they also proposed guidelines for the creation and distribution of synthesized images.\n \u201cSafeguards could include, for example, incorporating robust watermarks into the image- and video-synthesis networks that would provide a downstream mechanism for reliable identification. Because it is the democratization of access to this powerful technology that poses the most significant threat, we also encourage reconsideration of the often-laissez-faire approach to the public and unrestricted releasing of code for anyone to incorporate into any application.\n \u201cAt this pivotal moment, and as other scientific and engineering fields have done, we encourage the graphics and vision community to develop guidelines for the creation and distribution of synthetic-media technologies that incorporate ethical guidelines for researchers, publishers, and media distributors.\u201d\n  Back to News\n  Perhaps most pernicious is the consequence that in a digital world in which any image or video can be faked, the authenticity of any inconvenient or unwelcome recording can be called into question", "posttime": "2022-02-20 11:17:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,rust,\u4eba\u5458,faces,\u5408\u6210", "title": "\u7814\u7a76\u4eba\u5458\u79f0\uff0c\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u4eba\u8138\u6bd4\u771f\u5b9e\u4eba\u8138\u66f4\u53ef\u4fe1", "title_en": "AI generated faces are more trustworthy than real faces say researchers", "transed": 1, "url": "https://www.lancaster.ac.uk/news/ai-generated-faces-are-more-trustworthy-than-real-faces-say-researchers-who-warn-of-deep-fakes", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "rust", "\u4eba\u5458", "faces", "\u5408\u6210"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074164, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u548c\u4e16\u754c\u4e0a\u5927\u591a\u6570\u529e\u516c\u4eba\u5458\u4e00\u6837\uff0c\u65b0\u51a0\u75ab\u60c5\u8feb\u4f7f\u6211\u5728\u5bb6\u5de5\u4f5c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51fa\u73b0\u4e86Zoom\u548cTeams\u7b49\u89c6\u9891\u5de5\u5177\u7684\u4f7f\u7528\u3002\u4e24\u8005\u5728\u8d28\u91cf\u548c\u9690\u79c1\u65b9\u9762\u90fd\u6709\u81ea\u5df1\u7684\u632b\u6298\u3002\u5728\u4e24\u4e2a\u5c0f\u65f6\u7684\u901a\u8bdd\u4e2d\u5904\u7406\u97f3\u9891\u548c\u89c6\u9891\u5931\u771f\u662f\u4e00\u79cd\u75db\u82e6\u7684\u7ecf\u5386\u3002\u4f60\u9700\u8981\u6700\u5c0f\u7684\u5ef6\u8fdf\u548c\u6e05\u6670\u6e05\u6670\u7684\u97f3\u9891\u548c\u89c6\u9891\u6765\u8fdb\u884c\u4efb\u4f55\u4ea4\u6d41\u3002\n\u6211\u5df2\u7ecf\u4e86\u89e3\u4e86Jitsi\uff0c\u5e76\u4e14\u81ea\u5df1\u4e5f\u5728\u5f00\u53d1\u4e00\u6b3e\u5f00\u6e90\u7684\u8f6f\u7535\u8bdd\uff0c\u5b83\u662f\u57fa\u4e8e\u661f\u53f7PBX\u7684\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u6211\u7684\u7528\u4f8b\u6765\u8bf4\uff0c\u5b83\u4eec\u4f3c\u4e4e\u90fd\u592a\u590d\u6742\u4e86\uff1b\u6613\u4e8e\u4f7f\u7528\u7684\u89c6\u9891\u4f1a\u8bae\u73af\u5883\u3002\u5b83&#39\uff1b\u5f88\u9ad8\u5174\u80fd\u4f7f\u7528WebRTC\u8fde\u63a5\u5230PBX\uff0c\u4f46\u662f\u4ec0\u4e48&#39\uff1b\u5f53\u6240\u6709\u53c2\u4e0e\u8005\u90fd\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\uff0cIP\u7684\u7528\u9014\u662f\u4ec0\u4e48\uff1f\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u6ca1\u80fd\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\uff0c\u6211\u63a8\u8fdf\u4e86\u8fd9\u4e2a\u8f6f\u7535\u8bdd\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u592a\u957f\u3002\n\u5f53\u6211\u4e86\u89e3\u5230Pionand Galene\u65f6\uff0c\u4e8b\u60c5\u5f00\u59cb\u53d1\u751f\u4e86\u53d8\u5316\u3002Galene\u662f\u4e00\u6b3e\u89c6\u9891\u4f1a\u8bae\u670d\u52a1\u5668\uff0c\u6613\u4e8e\u90e8\u7f72\uff0c\u9700\u8981\u9002\u5ea6\u7684\u670d\u52a1\u5668\u8d44\u6e90\u3002\u867d\u7136\u6211\u4e0d\u662fGolang\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u6211\u89c9\u5f97\u6211\u53ef\u4ee5\u7406\u89e3\u8f6f\u4ef6\u7684\u90e8\u5206\u529f\u80fd\uff0c\u8fd9\u8ba9\u6211\u76f8\u4fe1\uff0c\u6211\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5c0f\u7684\u8c03\u6574\u3002\nGalene\u9879\u76ee\u5df2\u7ecf\u6709\u4e86defaultWebRTC\u6d4f\u89c8\u5668\u5ba2\u6237\u7aef\uff0c\u4f46\u5b83\u7f3a\u4e4f\u73b0\u4ee3\u524d\u7aef\u5de5\u5177\u3002\u4e3a\u4e86\u4e0d\u53bb\u60f3\u90a3\u4e9b\u5931\u8d25\u7684\u6b21\u8981\u9879\u76ee\uff0c\u6211\u51b3\u5b9a\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u4f46\u76ee\u6807\u4e0d\u90a3\u4e48\u660e\u786e\u3002\u6211\u60f3\u4e13\u6ce8\u4e8e\u4e3aGalene SFU\u6784\u5efa\u4e00\u4e2a\u529f\u80fd\u66f4\u5b8c\u6574\u7684WebRTC\u524d\u7aef\u3002\n\u4e00\u5f00\u59cb\u6211\u641c\u7d22\u4e86Galene\u8fd9\u4e2a\u540d\u5b57\u7684\u6765\u6e90\uff0c\u5f97\u77e5\u5b83\u662f\u4e00\u79cd\u542b\u94c5\u77ff\u7269\u3002\u7528\u53e6\u4e00\u79cd\u77ff\u7269\u6765\u547d\u540d\u8fd9\u4e00\u8fb9\u624d\u5408\u4e4e\u903b\u8f91\u3002\u9ec4\u94c1\u77ff\uff0c\u6216\u50bb\u74dc&#39\uff1bs gold\uff0c\u611f\u89c9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u63cf\u8ff0\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u90e8\u5206\u6765\u8bf4\uff0c\u5b83\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u524d\u7aef\uff1bSFU\u672c\u8eab\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u82b1\u4e86\u5c06\u8fd1\u4e00\u5e74\u7684\u7a7a\u95f2\u65f6\u95f4\u5c06Galenefrontend\u7684\u5927\u90e8\u5206\u90e8\u5206\u91cd\u5efa\u4e3a\u73b0\u4ee3Vue 3\u5e94\u7528\u7a0b\u5e8f\u3002\u5f88\u9ad8\u5174\u6211\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528Galene\u534f\u8bae\u3002\u9ec4\u94c1\u77ff\u4e2d\u7684js\u6587\u4ef6\u3002\u9ec4\u94c1\u77ff\u4e2d\u7684UI\u5e03\u5c40\u51e0\u4e4e\u4e0e\u9ed8\u8ba4\u5ba2\u6237\u7aef\u76f8\u540c\u3002\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684\u5e03\u5c40\uff0c\u4ec5\u9002\u7528\u4e8e\u684c\u9762\u5f0f\u901a\u4fe1\u8f6f\u4ef6\uff08\u4f8b\u5982IRC\u5ba2\u6237\u7aef\uff09\u3002\u5b83\u4ecd\u7136\u9700\u8981\u5bf9\u8f83\u5c0f\u7684\u8bbe\u5907\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\uff0c\u4f46\u76ee\u524d\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u4f7f\u7528Vue\u548cSCSS\u4f7f\u6211\u80fd\u591f\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u5904\u7406\u6a21\u677f\u5316\u3001\u6837\u5f0f\u5316\u548c\u5c06\u529f\u80fd\u62bd\u8c61\u5230\u7ec4\u4ef6\u7b49\u4e8b\u60c5\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u4e3aPyrite\u6dfb\u52a0\u4e00\u4e2a\u7ba1\u7406\u754c\u9762\uff0c\u5b83\u5141\u8bb8\u60a8\u7ba1\u7406\u7ec4\u548c\u7528\u6237\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5feb\u8f66\u3002\u4f5c\u4e3aGalene\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u4ee3\u7406\u7684js\u540e\u7aef\u3002\u5728\u8fd9\u4e2a\u8bbe\u7f6e\u4e2d\uff0c\u6211\u53ef\u4ee5\u8f7b\u677e\u5730\u5904\u7406\u4e0eSFU\u76f8\u5173\u7684\u540e\u7aef\u4efb\u52a1\uff0c\u6bd4\u5982\u63d0\u4f9b\u5f55\u5236\u3001\u66f4\u65b0\u7ec4\u6743\u9650\u548c\u8eab\u4efd\u9a8c\u8bc1\u3002\n\u6211\u6700\u8fd1\u5f00\u59cb\u5403\u9ec4\u94c1\u77ff\uff08\u611f\u8c22\u56e2\u961f\uff01\uff09\u5728\u6211\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u901a\u8fc7\u5bf9\u9ec4\u94c1\u77ff/\u65b9\u94c5\u77ff\u5b9e\u4f8b\u8fdb\u884c\u65e5\u5e38\u7ad9\u7acb\u3002\u4f7f\u7528dailyusage\u7684\u53cd\u9988\u975e\u5e38\u6709\u7528\u3002\u6b64\u5916\uff0c\u6211\u4eceGalene issue tracker\u7684\u7528\u6237\u62a5\u544a\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u3002\u6211\u559c\u6b22\u5efa\u9020\u9ec4\u94c1\u77ff\uff0c\u5e0c\u671b\u4eba\u4eec\u80fd\u5728\u89c6\u9891\u4f1a\u8bae\u4e0a\u627e\u5230\u5408\u9002\u7684\u5730\u65b9\u3002\u4f60\u559c\u6b22\u9ec4\u94c1\u77ff\u5417\uff1f\u5982\u679c\u4f60\u80fd\u5728Github\u4e0a\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee\uff0c\u83b7\u5f97\u66f4\u591a\u66dd\u5149\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u5e72\u676f", "note_en": "Like most desk workers in the world, the Covid situation forced me to work fromhome. With this situation came the use of video tools like Zoom and Teams.Both come with their own set of frustrations in terms of quality and privacy.Having to deal with audio and video distortions during a two-hour call is atiring experience. You want minimal lag and crispy clear audio and video forany communication.\n I already knew about  Jitsi and was working on anopen source  softphone myself, which reliedon an  Asterisk PBX. However, they all seemed to betoo complicated for my usecase; an easy-to-use video-conferencing environment.It&#39;s nice to be able to use WebRTC to connect to a PBX, but what&#39;s the use ofSIP when all participants are on a browser anyway? Somehow I failed to recognizethis and therefor delayed pulling the plug on this softphone project for too long.\n Things started to move when I learned about  Pionand  Galene. Galene is a videoconferencingserver that is easy to deploy and requires moderate server resources. Whilenot being a Golang developer, it felt that I could understand parts ofwhat the software was doing, which convinced me that I could make smalladjustments when I would need them.\n The Galene project already features a  defaultWebRTC browser client, but it lacks modern frontend tooling. To get my mind offailing side-projects, I decided to start a new project, but with slightly lessambitious goals. I wanted to focus on building a more feature-completeWebRTC frontend for the Galene SFU.\n   To start with; I searched where the name Galene came from and learned that itis a lead-containing mineral. It would only be logical to name this side-projectafter another mineral. Pyrite, or a fool&#39;s gold, felt to be a good description.It would be nothing more than a simple frontend for the more complicated part;the SFU itself.\n Still, it took me almost a year of spare time to rebuild most of the Galenefrontend as a modern  Vue 3 application. Gladly I could justreuse the Galene protocol.js file in Pyrite. The UI layout in Pyrite is almostexactly the same as the default client. This is a typical layout that just worksfor desktop-like communication software(e.g. IRC clients). It still needs someadaption for smaller devices, but for now itis good enough.\n Using Vue and SCSS enables me to deal at a faster pace with things like templating,styling and abstracting functionality to components. The last months, I focusedon adding a management interface to Pyrite, which allows you to manage groups andusers. It&#39;s a simple Express.js backend that acts as a proxy between Galene andthe client. In this setup, I can easily deal with SFU-related backend tasks,like serving recordings, updating group permissions and authentication.\n  I recently started dogfooding Pyrite (thanks team!) in my daily job,by doing daily standups on a Pyrite/Galene instance. Using feedback from dailyusage is incredibly useful. Also, I learn a lot from users reporting in theGalene issue tracker. I love building Pyrite, and hope people will find ituseful for their video conferences. Do you like Pyrite? It would be great ifyou could  star the project on Github,to get some more exposure. Cheers!", "posttime": "2022-02-20 11:15:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,open,galene", "title": "\u9ec4\u94c1\u77ff\u2014\u2014\u5f00\u6e90\u89c6\u9891\u4f1a\u8bae", "title_en": "Pyrite \u2013 open-source video conferencing", "transed": 1, "url": "https://garage44.org/posts/pyrite/pyrite-conferencing.html", "via": "", "real_tags": ["\u5f00\u6e90", "open", "galene"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074163, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u672c\u540d\u4e3a\u300a\u7535\u538b\u6548\u5e94\uff1a\u5982\u4f55\u8ba9\u597d\u60f3\u6cd5\u53d8\u5f97\u4f1f\u5927\u300b\u548c\u300a\u4f1f\u5927\u60f3\u6cd5\u7684\u89c4\u6a21\u300b\uff08Currency\uff0c2022\uff09\u7684\u65b0\u4e66\u4e2d\uff0c\u5185\u897f\u5361\u54e5\u5927\u5b66\u7ecf\u6d4e\u5b66\u5bb6\u7ea6\u7ff0\u00b7a\u00b7\u5229\u65af\u7279\uff08John a.List\uff09\u89e3\u91ca\u4e86\u662f\u4ec0\u4e48\u8ba9\u4e00\u4e2a\u60f3\u6cd5\u53ef\u4ee5\u6269\u5c55\u5230\u66f4\u5927\u7684\u53d7\u4f17\u3001\u89c4\u6a21\u548c\u5f71\u54cd\u529b\u3002\u6839\u636e\u4ed6\u4e3a\u4f18\u6b65\u3001Lyft\u3001\u829d\u52a0\u54e5\u767d\u889c\u961f\u548c\u8054\u90a6\u653f\u5e9c\u7b49\u7ec4\u7ec7\u63d0\u4f9b\u54a8\u8be2\u7684\u7ecf\u9a8c\uff0cList\u786e\u5b9a\u4e86\u5177\u6709\u6269\u5c55\u6f5c\u529b\u7684\u60f3\u6cd5\u7684\u4e94\u4e2a\u5173\u952e\u7279\u5f81\u548c\u56db\u4e2a\u79d8\u5bc6\uff0c\u4f01\u4e1a\u5bb6\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u79d8\u5bc6\u6210\u529f\u5730\u53d1\u5c55\u4ed6\u4eec\u7684\u60f3\u6cd5\uff0c\u6216\u8005\u7528\u4e66\u4e2d\u7684\u8bf4\u6cd5\uff0c\u589e\u52a0\u4ed6\u4eec\u7684\u5f71\u54cd\u529b\u3002\u5728\u8fd9\u6bb5\u6458\u81ea\u7b2c\u516b\u7ae0\u201c\u6212\u70df\u662f\u4e3a\u4e86\u8d62\u5bb6\u201d\u7684\u6458\u5f55\u4e2d\uff0c\u8fd9\u4e2a\u5217\u8868\u5c55\u793a\u4e86\u673a\u4f1a\u6210\u672c\u548c\u6c89\u6ca1\u6210\u672c\u6709\u65f6\u662f\u5982\u4f55\u8ba9\u8ba4\u8f93\u6210\u4e3a\u4e00\u79cd\u7f8e\u5fb7\u7684\u52b3\u62c9\u00b7\u5fb7\u66fc\u65af\u57fa\uff0c94\u5c81\n\u5728\u6211\u6210\u957f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5bb6\u91cc\u6240\u6709\u7684\u7537\u4eba\u90fd\u662f\u5361\u8f66\u53f8\u673a\uff08\u6211\u7684\u7956\u7236\uff0c\u8001\u5965\u53e4\u65af\u7279\uff0c\u6211\u7684\u7236\u4eb2\uff0c\u5c0f\u5965\u53e4\u65af\u7279\uff0c\u6211\u7684\u54e5\u54e5\uff0c\u5965\u53e4\u65af\u7279\u4e09\u4e16\uff01\uff09\uff0c\u6709\u4eba\u544a\u8bc9\u6211\uff0c\u6211\u4e5f\u4f1a\u6210\u4e3a\u5176\u4e2d\u4e4b\u4e00\u3002\u7136\u800c\uff0c\u6211\u68a6\u60f3\u7740\u4e00\u79cd\u4e0d\u540c\u7684\u751f\u6d3b\uff0c\u5373\u4f7f\u6211\u4e0d\u77e5\u9053\u90a3\u79cd\u751f\u6d3b\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u4e5f\u4e0d\u77e5\u9053\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u5b83\u3002\u7136\u800c\uff0c\u9ad8\u5c14\u592b\u662f\u4e00\u6247\u95e8\uff0c\u4e3a\u6211\u6253\u5f00\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u53ef\u80fd\u6027\u89c6\u91ce\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u56e0\u4e3a\u8fd9\u9879\u8fd0\u52a8\uff0c\u6211\u5f88\u53ef\u80fd\u6839\u672c\u5c31\u6ca1\u6709\u4e0a\u8fc7\u5927\u5b66\u3002\n\u901a\u8fc7\u83b7\u5f97\u56db\u5e74\u5236\u5b66\u4f4d\uff0c\u6211\u5c06\u5728\u793e\u4f1a\u7ecf\u6d4e\u9636\u68af\u4e0a\u83b7\u5f97\u66f4\u9ad8\u7684\u5730\u4f4d\uff0c\u83b7\u5f97\u7236\u6bcd\u548c\u7956\u7236\u6bcd\u4e0d\u7ed9\u6211\u7684\u673a\u4f1a\u3002\u9ad8\u5c14\u592b\u5df2\u7ecf\u8ba9\u6211\u8d70\u4e86\u8fd9\u4e48\u8fdc\uff0c\u6240\u4ee5\u6211\u80fd\u60f3\u8c61\u7684\u6700\u597d\u7684\u6210\u529f\u65b9\u5f0f\u5c31\u662f\u628a\u5b83\u4f5c\u4e3a\u6211\u672a\u6765\u7684\u804c\u4e1a\u3002\u5982\u679c\u6211\u575a\u6301\u5230\u5e95\uff0c\u5168\u529b\u4ee5\u8d74\uff0c\u6211\u662f\u5426\u6709\u673a\u4f1a\u6210\u4e3a\u4e00\u540d\u804c\u4e1a\u9009\u624b\uff1f\u6211\u76f8\u4fe1\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u56de\u60f3\u8d77\u6765\uff0c\u6211\u662f\u6211\u81ea\u5df1\u786e\u8ba4\u504f\u89c1\u7684\u53d7\u5bb3\u8005\uff0c\u5f88\u65b9\u4fbf\u5730\u4e13\u6ce8\u4e8e\u6211\u8d62\u5f97\u7684\u6bd4\u8d5b\uff0c\u800c\u5ffd\u7565\u4e86\u6211\u8f93\u6389\u7684\u6bd4\u8d5b\u7684\u7ecf\u9a8c\u8bc1\u636e\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u573a\u8457\u540d\u7684\u6bd4\u8d5b\u4e2d\uff0c\u6211\u6beb\u4e0d\u8d39\u529b\u5730\u8bb0\u4f4f\u4e86\u524d\u4e5d\u5c4032\u6295\u7684\u597d\u7403\uff0c\u4f46\u5374\u8f7b\u800c\u6613\u4e3e\u5730\u5c06\u540e\u4e5d\u5c4041\u6295\u7684\u7403\u6321\u51fa\uff0c\u8fd9\u8ba9\u6211\u5931\u53bb\u4e86\u7b2c\u4e00\u540d\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u6536\u62fe\u597d\u6211\u7684\u4e1c\u897f\uff0c\u79bb\u5f00\u4e86\u6211\u7ae5\u5e74\u7684\u5bb6\u53bb\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u2014\u2014\u53f2\u8482\u6587\u65af\u827a\u9f99\u7f51\uff0c\u5728PGA\u5de1\u56de\u8d5b\u4e0a\u73a9\uff0c\u8fd9\u662f\u6211\u4e00\u76f4\u575a\u6301\u7684\u68a6\u60f3\u3002\u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\uff1f\u6211\u76f8\u4fe1\u6211\u53ef\u4ee5\u5728PGA\u5de1\u56de\u8d5b\u4e2d\u628a\u8fc7\u53bb\u4f5c\u4e3a\u9ad8\u5c14\u592b\u7403\u624b\u53d6\u5f97\u7684\u6210\u529f\u6269\u5c55\u5230\u672a\u6765\u3002\n\u4f46\u5728\u6211\u4e0a\u5927\u5b66\u7684\u7b2c\u4e00\u5e74\uff0c\u53d1\u751f\u4e86\u4e00\u4ef6\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u60c5\uff0c\u6539\u53d8\u4e86\u6211\u7684\u4eba\u751f\u8f68\u8ff9\u3002\u5927\u7ea6\u5728\u79cb\u5b63\u9ad8\u5c14\u592b\u8d5b\u5b63\u7684\u4e2d\u9014\uff0c\u6211\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u4f11\u5468\u672b\uff0c\u6240\u4ee5\u6211\u56de\u5bb6\u63a2\u671b\u5bb6\u4eba\u3002\u5f53\u6211\u661f\u671f\u4e94\u65e9\u4e0a\u53bb\u5a01\u65af\u5eb7\u661f\u9ea6\u8fea\u900a\u5207\u8bfa\u57fa\u4e61\u6751\u4ff1\u4e50\u90e8\u8bad\u7ec3\u6211\u7684\u6bd4\u8d5b\u65f6\uff0c\u6070\u5de7\u5728\u5207\u8bfa\u57fa\u5927\u5b66\u6709\u4e00\u7fa4\u9ad8\u5c14\u592b\u7403\u624b\uff0c\u5305\u62ec\u6211\u66fe\u7ecf\u5728\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u548cSteve Stricker\u5927\u5b66\u7684\u9ad8\u4e2d\u9ad8\u5c14\u592b\u7403\u624b\uff0c\u50cf\u662f\u6765\u81ea\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u7684Jerry Kelly\u7684\u4e00\u4e9b\u8001\u7403\u5458\uff0c\u4e24\u4eba\u540e\u6765\u90fd\u6709\u4e86\u957f\u671f\u800c\u6210\u529f\u7684PGA\u804c\u4e1a\u751f\u6daf\u3002\u6211\u5df2\u7ecf\u597d\u51e0\u5e74\u6ca1\u89c1\u8fc7\u4ed6\u4eec\u4e86\uff0c\u6240\u4ee5\u6211\u5f88\u9ad8\u5174\u6709\u673a\u4f1a\u4e86\u89e3\u6211\u7684\u6280\u80fd\u5bf9\u6bd4\u3002\n\u56de\u5230\u9ad8\u4e2d\uff0c\u6211\u4e00\u76f4\u52aa\u529b\u4fdd\u6301\u7ade\u4e89\u529b\uff0c\u5c3d\u7ba1\u6211\u6bd4\u4ed6\u4eec\u5e74\u8f7b\u51e0\u5c81\u3002\u7136\u800c\uff0c\u73b0\u5728\u60c5\u51b5\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\u3002\u5f53\u6211\u4eec\u90fd\u5728\u7ec3\u4e60\u573a\u5de5\u4f5c\u65f6\uff0c\u611f\u89c9\u6709\u4e9b\u4e0d\u5bf9\u52b2\u3002\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u4ed6\u4eec\u53d8\u6210\u4e86\u6770\u514b\u00b7\u5c3c\u514b\u52b3\u65af\uff0c\u800c\u6211\u5374\u6210\u4e86\u7ea6\u7ff0\u00b7\u7f57\u65af\u7279\u3002\u7136\u800c\uff0c\u6211\u5e76\u6ca1\u6709\u63a5\u53d7\u8fd9\u4e00\u4e8b\u5b9e\u7684\u73b0\u5b9e\uff0c\u800c\u662f\u65e0\u89c6\u4e86\u6700\u521d\u7684\u60c5\u8282\u3002\u6211\u544a\u8bc9\u81ea\u5df1\uff0c\u4ed6\u4eec\u603b\u662f\u6bd4\u6211\u66f4\u597d\u7684\u51fb\u7403\u624b\uff0c\u4f46\u6211\u603b\u662f\u8ba9\u4ed6\u4eec\u56de\u5230\u679c\u5cad\u5468\u56f4\u3002\u53e6\u5916\uff0c\u6211\u63d0\u9192\u81ea\u5df1\uff0c\u8fd9\u53ea\u662f\u7ec3\u4e60\u3002\u91cd\u8981\u7684\u662f\u5b9e\u9645\u6bd4\u8d5b\u7684\u5206\u6570\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u770b\u770b\u4ed6\u4eec\u7684\u5206\u6570\u4e0e\u6211\u7684\u5206\u6570\u5982\u4f55\u5339\u914d\u3002\n\u4ed6\u4eec\u5f00\u7403\u540e\uff0c\u6211\u8ddf\u7740\u51e0\u4e2a\u670b\u53cb\u4e00\u8d77\u6253\u7403\u3002\u540c\u6837\u7684\u7403\u5ea7\uff0c\u540c\u6837\u7684\u7403\u573a\uff0c\u540c\u6837\u7684\u5929\u6c14\u6761\u4ef6\u3002\u6bc1\u706d\u6027\u7684\u7ed3\u679c\u662f\u53f2\u8482\u592b\u548c\u6770\u745e\u90fd\u572860\u5e74\u4ee3\u7684\u9ad8\u4e2d\u9636\u6bb5\u5f97\u5206\uff0c\u5176\u4ed6\u5341\u51e0\u540d\u9ad8\u5c14\u592b\u7403\u624b\uff08\u5305\u62ec\u9ad8\u4e2d\u751f\u9a6c\u91cc\u5965\u00b7\u8482\u9f50\u4e9a\u5c3c\uff0c\u73b0\u5728\u4e5f\u662f\u4e00\u540d\u804c\u4e1a\u9ad8\u5c14\u592b\u7403\u624b\uff09\u4e5f\u662f\u5982\u6b64\u3002\u867d\u7136\u6211\u8ba4\u4e3a\u81ea\u5df1\u6253\u5f97\u5f88\u597d\uff0c\u4f46\u6211\u8fd8\u662f\u6253\u51fa\u4e8675\u5206\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u719f\u6089\u9ad8\u5c14\u592b\u5f97\u5206\u7684\u4eba\u6765\u8bf4\uff0c\u5728\u8fd9\u4e2a\u6c34\u5e73\u4e0a\uff0c\u8fd9\u79cd\u5dee\u5f02\u7c7b\u4f3c\u4e8eA+\u548cD\u3002\n\u90a3\u5929\u665a\u4e0a\uff0c\u6211\u6ca1\u6709\u7761\u89c9\uff0c\u800c\u662f\u505a\u4e86\u4efb\u4f55\u6570\u636e\u5458\u90fd\u4f1a\u505a\u7684\u4e8b\u60c5\uff1a\u6211\u7814\u7a76\u4e86\u4ed6\u4eec\u8fc7\u53bb\u51e0\u5e74\u7684\u6240\u6709\u9ad8\u5c14\u592b\u6210\u7ee9\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u6211\u5728\u540c\u4e00\u7403\u573a\u4e0a\u7684\u5f97\u5206\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5468\u516d\u548c\u5468\u65e5\u6211\u6574\u5929\u90fd\u662f\u8fd9\u6837\u3002\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u5de5\u4f5c\uff1b\u7531\u4e8e\u5f53\u65f6\u6ca1\u6709\u4e92\u8054\u7f51\uff0c\u56fe\u4e66\u9986\u82b1\u4e86\u6574\u6574\u4e24\u5929\u7684\u65f6\u95f4\u7ffb\u9605\u5f53\u5730\u7684\u65e7\u62a5\u7eb8\u4ee5\u83b7\u53d6\u6570\u636e\u3002\u5468\u672b\u7ed3\u675f\u65f6\uff0c\u5f53\u6211\u9a71\u8f66\u8fd4\u56de\u53f2\u8482\u6587\u65af\u89d2\uff08Stevens Point\uff09\uff0c\u4e0d\u7720\u4e4b\u591c\uff08Sleeptless\uff09\uff0c\u6211\u7ec8\u4e8e\u63a5\u53d7\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u65e0\u8bba\u6211\u591a\u4e48\u5173\u5fc3\u9ad8\u5c14\u592b\uff0c\u591a\u4e48\u7ec3\u4e60\u9ad8\u5c14\u592b\uff0c\u65e0\u8bba\u5b83\u5bf9\u6211\u6765\u8bf4\u8c61\u5f81\u7740\u4ec0\u4e48\u2014\u2014\u6211\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u6709\u8db3\u591f\u7684\u80fd\u529b\u53c2\u52a0PGA\u5de1\u56de\u8d5b\uff0c\u751a\u81f3\u65e0\u6cd5\u63a5\u8fd1\u3002\u4f5c\u4e3a\u4e00\u540d\u5927\u5b66\u9ad8\u5c14\u592b\u7403\u624b\uff0c\u6211\u6253\u5f97\u5f88\u597d\uff0c\u4f46\u8981\u60f3\u5f04\u6e05\u695a\u5982\u4f55\u5c06\u6700\u540e\u51e0\u6746\u4ece\u6211\u7684\u5206\u6570\u4e2d\u5254\u9664\uff0c\u4ee5\u8fbe\u5230\u6700\u9ad8\u6c34\u5e73\uff0c\u8fd9\u662f\u4e00\u4ef6\u96be\u4ee5\u6349\u6478\u7684\u4e8b\u60c5\u3002\u7a81\u7136\u95f4\uff0c\u6211\u65e0\u6cd5\u518d\u6b3a\u9a97\u81ea\u5df1\u4e86\u3002\u73b0\u5b9e\u5df2\u7ecf\u4ecb\u5165\uff0c\u5e76\u63ed\u793a\u4e86\u6211\u5bf9\u804c\u4e1a\u9ad8\u5c14\u592b\u7403\u624b\u7684\u6e34\u671b\uff1a\u5047\u9633\u6027\u3002\n\u6211\u7684\u5929\u8d4b\u8ba9\u6211\u8d70\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u804c\u4e1a\uff0c\u5b83\u53ea\u662f\u6ca1\u6709\u89c4\u6a21\u3002\u8d85\u8fc7\u8fd9\u4e00\u70b9\u53ea\u4f1a\u5bfc\u81f4\u81f4\u547d\u7684\u7535\u538b\u4e0b\u964d\uff0c\u751a\u81f3\u66f4\u81f4\u547d\u7684\u5931\u671b\u3002\u6240\u4ee5\u6211\u51b3\u5b9a\u662f\u65f6\u5019\u653e\u5f03\u6211\u7684\u68a6\u60f3\u4e86\u3002\n\u505a\u51fa\u8fd9\u4e2a\u51b3\u5b9a\u5e76\u4e0d\u5bb9\u6613\u3002\u8fd9\u4e0e\u6211\u5c0f\u65f6\u5019\u5728\u5a01\u65af\u5eb7\u661f\u5dde\u5c0f\u9547\u957f\u5927\u65f6\u5b66\u5230\u7684\u4ef7\u503c\u89c2\u80cc\u9053\u800c\u9a70\u3002\u5a01\u65af\u5eb7\u661f\u5dde\u662f\u4f20\u5947\u7684\u7eff\u6e7e\u5305\u88c5\u5de5\u961f\u6559\u7ec3\u6587\u65af\u00b7\u9686\u5df4\u8fea\u7684\u738b\u56fd\uff0c\u4ed6\u6709\u53e5\u540d\u8a00\uff1a\u201c\u6210\u529f\u8005\u6c38\u4e0d\u653e\u5f03\uff0c\u653e\u5f03\u8005\u6c38\u4e0d\u80dc\u5229\u3002\u201d\u8fd9\u5c31\u662f\u6211\u6c89\u6d78\u5176\u4e2d\u7684\u5f53\u5730\u6587\u5316\u3002\u6211\u662f\u5b83\u7684\u4ea7\u7269\uff0c\u652f\u6301\u6211\u7684\u7236\u6bcd\u4e5f\u662f\u5982\u6b64\uff0c\u4ed6\u4eec\u76f8\u4fe1\u6211\u7684\u9ad8\u5c14\u592b\u4e8b\u4e1a\uff0c\u5e76\u544a\u8bc9\u6211\u8981\u4fdd\u6301\u97e7\u6027\uff0c\u6c38\u4e0d\u653e\u5f03\u3002\n\u8fd9\u4e0d\u662f\u4e2d\u897f\u90e8\u7279\u6709\u7684\u73b0\u8c61\u3002\u7f8e\u56fd\u6587\u5316\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u544a\u8bc9\u6211\u4eec\uff0c\u5982\u679c\u6211\u4eec\u62d2\u7edd\u653e\u5f03\uff0c\u5982\u679c\u6211\u4eec\u575a\u6301\u5f97\u66f4\u4e45\uff0c\u4ed8\u51fa\u5f97\u66f4\u591a\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u6709\u7684\u68a6\u60f3\u90fd\u4f1a\u5b9e\u73b0\u3002\u8fd9\u4e00\u70b9\u5f97\u5230\u4e86\u793e\u4ea4\u5a92\u4f53\u4e0a\u5927\u91cf\u6210\u529f\u6545\u4e8b\u7684\u652f\u6301\uff0c\u8fd9\u4e9b\u6210\u529f\u6545\u4e8b\u4f3c\u4e4e\u90fd\u4e0d\u53ef\u907f\u514d\u5730\u8fbe\u5230\u4e86\u540c\u4e00\u4e2a\u76ee\u7684\uff1a\u201c\u8c22\u5929\u8c22\u5730\uff0c\u6211\u6ca1\u6709\u653e\u5f03\uff0c\u5728\u6240\u6709\u7684\u632b\u6298\u4e2d\u90fd\u575a\u6301\u4e86\u4e0b\u6765\u3002\u201d\u8fd9\u4e00\u6210\u529f\u5e94\u8be5\u53d7\u5230\u8d5e\u626c\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u611f\u89c9\u826f\u597d\u7684\u6545\u4e8b\u6765\u8bf4\uff0c\u53ef\u80fd\u90fd\u6709\u5341\u4e07\u4eba\u5728\u8f9b\u82e6\u5de5\u4f5c\uff0c\u6c38\u8fdc\u65e0\u6cd5\u5230\u8fbe\u7ec8\u70b9\u7ebf\uff0c\u6c38\u8fdc\u65e0\u6cd5\u5b8c\u6210\u80dc\u5229\u5708\u3002\u8fd9\u4e9b\u4eba\u7684\u63a8\u6587\u5728\u54ea\u91cc\uff1f\u8c01\u5728\u8bf4\uff0c\u5982\u679c\u4ed6\u4eec\u572820\u5e74\u524d\u653e\u5f03\u4e86\u522b\u7684\u4e1c\u897f\uff0c\u5c1d\u8bd5\u4e86\u4e00\u6761\u5b8c\u5168\u4e0d\u540c\u7684\u9053\u8def\uff0c\u4ed6\u4eec\u600e\u4e48\u4f1a\u53d6\u5f97\u771f\u6b63\u4f1f\u5927\u7684\u6210\u5c31\u5462\uff1f\u56e0\u4e3a\u4eba\u4eec\u62d2\u7edd\u653e\u5f03\u8ffd\u6c42\u65e0\u6cd5\u5b9e\u73b0\u7684\u68a6\u60f3\uff0c\u6211\u4eec\u7684\u793e\u4f1a\u5931\u53bb\u4e86\u591a\u5c11\u6551\u547d\u836f\u7269\u3001\u521b\u65b0\u7684\u65b0\u4ea7\u54c1\u548c\u5927\u80c6\u7684\u653f\u7b56\u5e72\u9884\uff1f\u8fd9\u4e9b\u90fd\u662f\u60b2\u5267\u548c\u4e0d\u6210\u6587\u7684\u6545\u4e8b\uff0c\u4e0d\u6210\u6587\u662f\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u673a\u4f1a\u5728\u73b0\u5b9e\u4e2d\u4e0a\u6f14\uff0c\u56e0\u4e3a\u4ece\u51fa\u751f\u8d77\u6211\u4eec\u5c31\u88ab\u544a\u77e5\u6211\u4eec\u4e0d\u5e94\u8be5\u653e\u5f03\u3002\n\u4f46\u5982\u679c\u6211\u544a\u8bc9\u4f60\uff0c\u6210\u5c31\u4e00\u4ef6\u4f1f\u5927\u7684\u4e8b\u60c5\u5f80\u5f80\u610f\u5473\u7740\u653e\u5f03\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u653e\u5f03\u4e00\u4e2a\u6ca1\u6709\u51fa\u8def\u7684\u68a6\u60f3\u3001\u8ffd\u6c42\u6216\u804c\u4e1a\u9053\u8def\uff0c\u4ee5\u6362\u53d6\u4e00\u4e2a\u4f60\u53ef\u4ee5\u505a\u51fa\u66f4\u5927\u8d21\u732e\u7684\u9053\u8def\uff0c\u90a3\u4f1a\u600e\u4e48\u6837\uff1f\n\u5c31\u6211\u800c\u8a00\uff0c\u4e00\u65e6\u6211\u653e\u5f03\u4e86\u804c\u4e1a\u9ad8\u5c14\u592b\u7684\u68a6\u60f3\uff0c\u6211\u5c31\u628a\u6ce8\u610f\u529b\u8f6c\u5411\u4e86\u4e00\u4ef6\u6211\u9010\u6e10\u76f8\u4fe1\u81ea\u5df1\u786e\u5b9e\u6709\u5929\u8d4b\u548c\u6fc0\u60c5\u7684\u4e8b\u60c5\uff1a\u7ecf\u6d4e\u5b66\u30021992\uff0c\u6211\u6bd5\u4e1a\u4e8eUW\u7ecf\u6d4e\u5b66\u5b66\u4f4d-\u53f2\u8482\u6587\u65af\u70b9\uff0c\u56db\u5e74\u540e\u4ece\u6000\u4fc4\u660e\u5927\u5b66\u83b7\u5f97\u535a\u58eb\u5b66\u4f4d\u3002\n\u5b8c\u6210\u535a\u58eb\u5b66\u4f4d\u540e\uff0c\u6211\u7533\u8bf7\u4e86150\u4efd\u7ec8\u8eab\u804c\u4f4d\u3002\u4ed6\u4eec\u4e2d\u6709149\u4eba\u62d2\u7edd\u4e86\u6211\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u88ab\u6211\u9009\u62e9\u7684\u9886\u57df\u4e2d\u8fd9\u79cd\u4e0d\u90a3\u4e48\u70ed\u60c5\u7684\u62e5\u62b1\u6240\u52a8\u6447\u3002\u56e0\u4e3a\u4e0e\u9ad8\u5c14\u592b\u4e0d\u540c\uff0c\u7ecf\u6d4e\u5b66\u662f\u4e00\u4e2a\u6211\u77e5\u9053\u81ea\u5df1\u8db3\u591f\u4f18\u79c0\u7684\u9886\u57df\uff0c\u8db3\u4ee5\u8ba9\u6211\u6210\u540d\u3002\u867d\u7136\u6211\u6ca1\u6709\u4e00\u4e2a\u6f02\u4eae\u7684\u5e38\u6625\u85e4\u8054\u76df\u5b66\u4f4d\uff0c\u4f46\u5bf9\u6211\u7684\u7814\u7a76\u7684\u56de\u5e94\u8868\u660e\u6211\u7684\u601d\u7ef4\u662f\u6b63\u786e\u7684\u3002\u6240\u4ee5\u8fd9\u6b21\u6211\u542c\u4ece\u4e86\u4f26\u5df4\u7b2c\u7684\u5efa\u8bae\uff0c\u575a\u6301\u4e0b\u53bb\u3002\u6211\u6295\u8eab\u4e8e\u7530\u91ce\u5de5\u4f5c\uff0c\u4ece\u6b64\u4ee5\u540e\uff0c\u6211\u7684\u804c\u4e1a\u751f\u6daf\u5728\u6211\u6240\u5e0c\u671b\u7684\u4e00\u6240\u5b66\u6821\u2014\u2014\u4e2d\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u3002\n\u5b83\u5f97\u5230\u4e86\u56de\u62a5\u3002\u5728\u591a\u5143\u5b87\u5b99\u7684\u53e6\u4e00\u4e2a\u89d2\u843d\u91cc\uff0c\u7ea6\u7ff0\u00b7A\u00b7\u674e\u65af\u7279\u662f\u4e00\u5bb6\u4e8c\u6d41\u4e61\u6751\u4ff1\u4e50\u90e8\u7684\u9ad8\u5c14\u592b\u201c\u6559\u5b66\u4e13\u5bb6\u201d\uff0c\u4ed6\u5f15\u7528\u6587\u65af\u00b7\u4f26\u5df4\u7b2c\u7684\u8bdd\u7ed9\u5ba2\u6237\u4e0a\u8bfe\u3002\u4e0d\u662f\u6700\u7cdf\u7cd5\u7684\u751f\u6d3b\uff0c\u4f46\u4e5f\u4e0d\u662f\u6700\u597d\u7684\u3002\u8c22\u5929\u8c22\u5730\uff0c\u5728\u8fd9\u4e2a\u5b87\u5b99\u4e2d\uff0c\u6211\u5c31\u662f\u6211\uff0c\u4e0d\u65ad\u7528\u65b0\u7684\u91ce\u5916\u5b9e\u9a8c\u548c\u65b0\u7684\u79d1\u5b66\u6765\u6ee1\u8db3\u6211\u81ea\u5df1\u7684\u597d\u5947\u5fc3\u3002\u6211\u505a\u4e86\u4e00\u4e9b\u6211\u611f\u5230\u81ea\u8c6a\u7684\u4e8b\u60c5\uff0c\u751a\u81f3\u53ef\u80fd\u5e2e\u52a9\u4e86\u4e00\u4e9b\u4eba\u3002\u4f5c\u4e3a\u4e00\u540d\u9ad8\u5c14\u592b\u7403\u624b\uff0c\u6211\u4e0d\u4f1a\u4ea7\u751f\u592a\u5927\u7684\u5f71\u54cd\uff0c\u4e0d\u662f\u56e0\u4e3a\u7ecf\u6d4e\u5b66\u5bb6\u5929\u751f\u6bd4\u9ad8\u5c14\u592b\u7403\u624b\u5bf9\u793e\u4f1a\u66f4\u6709\u4ef7\u503c\uff08\u8bb8\u591a\u804c\u4e1a\u9ad8\u5c14\u592b\u7403\u624b\u6fc0\u52b1\u5b69\u5b50\uff0c\u4e3a\u793e\u4f1a\u4e8b\u4e1a\u505a\u51fa\u8d21\u732e\uff0c\u4ff1\u4e50\u90e8\u804c\u4e1a\u7403\u5458\u4e5f\u505a\u4e86\u5f88\u68d2\u7684\u4e8b\u60c5\uff09\uff0c\u800c\u662f\u56e0\u4e3a\u6211\u66f4\u64c5\u957f\u7ecf\u6d4e\u5b66\u800c\u4e0d\u662f\u9ad8\u5c14\u592b\uff0c\u8fd9\u8ba9\u6211\u66f4\u6709\u53ef\u80fd\u6210\u529f\u5730\u8d21\u732e\u51fa\u6709\u793e\u4f1a\u4ef7\u503c\u7684\u4e1c\u897f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4f5c\u4e3a\u7ecf\u6d4e\u5b66\u5bb6\u7684\u6280\u80fd\u6bd4\u6211\u4f5c\u4e3a\u9ad8\u5c14\u592b\u7403\u624b\u7684\u6280\u80fd\u66f4\u5177\u53ef\u6269\u5c55\u6027\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u5c31\u662f\u8f9e\u804c\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u75db\u82e6\u7684\u51b3\u5b9a\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u5584\u4e8e\u6212\u70df\u662f\u6210\u529f\u6269\u5927\u89c4\u6a21\u7684\u79d8\u8bc0\u4e4b\u4e00\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u76f8\u4fe1\uff0c\u4e0d\u4ec5\u4eba\u4eec\u3001\u516c\u53f8\u548c\u7ec4\u7ec7\u6ca1\u6709\u8db3\u591f\u7684\u9000\u51fa\uff0c\u4ed6\u4eec\u4e5f\u6ca1\u6709\u8db3\u591f\u5feb\u5730\u9000\u51fa\u3002\n\u4e5f\u8bb8\u8fd9\u4e0d\u662f\u5de7\u5408\uff0c\u6211\u5728\u653e\u5f03\u9ad8\u5c14\u592b\u804c\u4e1a\u751f\u6daf\u540e\u8f6c\u5411\u7684\u7403\u573a\u662f\u4e00\u95e8\u53ef\u4ee5\u79d1\u5b66\u5730\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6211\u505a\u51fa\u4e86\u6b63\u786e\u9009\u62e9\u7684\u5b66\u79d1\u3002\u8fd9\u79cd\u89e3\u91ca\u53ef\u4ee5\u5728\u7ecf\u6d4e\u5b66\u7684\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\u4e2d\u627e\u5230\uff1a\u673a\u4f1a\u6210\u672c\uff0c\u6216\u8005\u5f53\u4f60\u9009\u62e9\u4e00\u4e2a\u9009\u9879\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u9009\u9879\u65f6\uff0c\u4f60\u9519\u8fc7\u7684\u6536\u76ca\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u673a\u4f1a\u6210\u672c\u770b\u4f5c\u662f\u4e00\u79cd\u8bd5\u56fe\u91cf\u5316\u672a\u8d70\u7684\u9053\u8def\u7684\u5c1d\u8bd5\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u653e\u5f03\u6211\u4eec\u6240\u8d70\u7684\u9053\u8def\uff0c\u6211\u4eec\u5c31\u4f1a\u8d70\u7684\u9053\u8def\u3002\u5c31\u6211\u800c\u8a00\uff0c\u4ece\u4e8b\u9ad8\u5c14\u592b\u804c\u4e1a\u4f1a\u8ba9\u6211\u5931\u53bb\u5411\u6e34\u671b\u6210\u529f\u7684\u5e74\u8f7b\u4eba\u6559\u6388\u7ecf\u6d4e\u5b66\u3001\u51fa\u7248\u5927\u91cf\u79d1\u5b66\u7814\u7a76\u548c\u4e66\u7c4d\u4ee5\u53ca\u4e3a\u5404\u79cd\u9886\u5bfc\u4eba\u63d0\u4f9b\u5efa\u8bae\u7684\u673a\u4f1a\u3002\n\u6709\u4e00\u5929\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e2a\u5173\u4e8e\u5de5\u4f5c\u673a\u4f1a\u6210\u672c\u52a8\u6001\u7684\u6709\u7528\u4f8b\u5b50\uff0c\u5f53\u65f6\u6211\u516b\u5c81\u7684\u513f\u5b50\u6885\u68ee\u662f\u4e00\u540d\u65e9\u719f\u7684\u68d2\u7403\u8fd0\u52a8\u5458\uff0c\u4ed6\u6b63\u5728\u4e70\u4e00\u652f\u65b0\u7403\u68d2\u3002\u6885\u68ee\u6512\u4e86325\u7f8e\u5143\uff0c\u60f3\u4e70\u4e00\u4e2a\u9876\u7ea7\u68d2\u7403\u68d2\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u4ed6\u63d0\u9ad8\u51fb\u7403\u7387\u3002\uff08\u662f\u7684\uff0c\u4ed6\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u7236\u4eb2\u4ece\u4ed6\u4e94\u5c81\u7b2c\u4e00\u6b21\u53c2\u52a0\u8759\u8760\u961f\u65f6\u5c31\u5f00\u59cb\u8ffd\u8e2a\u4ed6\u7684\u6570\u636e\uff01\uff09\u4ed6\u5f88\u5feb\u627e\u5230\u4e86\u4e24\u4e2a\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u4e00\u4e2a200\u7f8e\u5143\uff0c\u53e6\u4e00\u4e2a325\u7f8e\u5143\u3002\u4ed6\u65e0\u6cd5\u5728\u4e24\u8005\u4e4b\u95f4\u505a\u51fa\u51b3\u5b9a\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4efb\u4f55\u7ecf\u6d4e\u5b66\u5bb6\u7236\u4eb2\u90fd\u4f1a\u505a\u7684\u4e8b\u60c5\uff0c\u5e76\u8bf4\uff1a\u201c\u6885\u68ee\uff0c\u8fd9\u6837\u60f3\u5427\u3002\u5982\u679c\u4f60\u4e70\u4e86200\u7f8e\u5143\u7684\u7403\u68d2\uff0c\u90a3\u4e48\u4f60\u8fd8\u53ef\u4ee5\u82b1125\u7f8e\u5143\u4e70\u4e00\u4e2a\u597d\u7684\u65b0\u7f57\u6797\u65af\u68d2\u7403\u624b\u5957\u3002\u201d\u4ed6\u63a5\u53d7\u4e86\u8fd9\u4e2a\u5efa\u8bae\u3002\u4e0d\u5230\u4e00\u5206\u949f\uff0c\u6211\u4eec\u5c31\u62ff\u7740\u66f4\u4fbf\u5b9c\u7684\u7403\u68d2\u548c\u65b0\u7684\u7f57\u6797\u65af\u624b\u5957\u6765\u5230\u6536\u94f6\u53f0\u3002\n\u6885\u68ee\u5728\u51b3\u7b56\u4e2d\u8003\u8651\u4e86\u673a\u4f1a\u6210\u672c\u3002\u56e0\u4e3a\u4ed6\u6709\u6709\u9650\u7684\u94b1\u53ef\u4ee5\u82b1\uff0c\u5982\u679c\u4ed6\u9009\u62e9\u4e86\u66f4\u6602\u8d35\u7684\u8759\u8760\uff0c\u4ed6\u4e0d\u4ec5\u8981\u82b1325\u7f8e\u5143\uff0c\u800c\u4e14\u8fd8\u5fc5\u987b\u653e\u5f03\u8d2d\u4e70\u65b0\u624b\u5957\u3002\n\u6709\u65f6\u6211\u4eec\u672c\u80fd\u5730\u505a\u8fd9\u6837\u7684\u8ba1\u7b97\u3002\u4f46\u6211\u4eec\u5e38\u5e38\u4e0d\u505c\u4e0b\u6765\u8003\u8651\u673a\u4f1a\u6210\u672c\uff0c\u76f4\u5230\u4e24\u79cd\u9009\u62e9\u8fdb\u5165\u6211\u4eec\u7684\u89c6\u91ce\uff0c\u4e00\u4e2a\u6709\u5f71\u54cd\u529b\u7684\u5fc3\u7406\u5b66\u7814\u7a76\u8868\u660e\uff0c\u6211\u4eec\u7684\u5224\u65ad\u548c\u504f\u597d\u503e\u5411\u4e8e\u4e3b\u8981\u57fa\u4e8e\u663e\u5f0f\u7684\u4fe1\u606f\u3002\u5f53\u6211\u4eec\u505a\u51b3\u5b9a\u65f6\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u4f7f\u7528\u601d\u7ef4\u6377\u5f84\uff0c\u6216\u542f\u53d1\u6cd5\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u601d\u8003\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u65f6\u95f4\u4ed4\u7ec6\u8003\u8651\u673a\u4f1a\u6210\u672c\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u662f\uff0c\u5bf9\u60c5\u611f\u9884\u6d4b\u7684\u7814\u7a76\u2014\u2014\u6211\u4eec\u9884\u6d4b\u672a\u6765\u60c5\u7eea\u7684\u80fd\u529b\u2014\u2014\u63ed\u793a\u4e86\u5bf9\u672a\u6765\u5e78\u798f\u611f\u7684\u5224\u65ad\u5bf9\u5f53\u524d\u60c5\u7eea\u8fc7\u4e8e\u654f\u611f\uff0c\u5bfc\u81f4\u6211\u4eec\u5ffd\u89c6\u4e86\u5176\u4ed6\u76f8\u5173\u56e0\u7d20\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u653e\u5927\u4e86\u6446\u5728\u6211\u4eec\u9762\u524d\u7684\u60c5\u7eea\u7684\u91cd\u8981\u6027\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u66f4\u51b2\u52a8\u7684\u51b3\u7b56\u3002\n\u5f53\u6211\u8fd8\u662f\u4e00\u540d\u8fd0\u52a8\u5361\u7ecf\u9500\u5546\u65f6\uff0c\u6211\u4e00\u76f4\u770b\u5230\u8fd9\u4e00\u70b9\u3002\u5f88\u591a\u65f6\u5019\uff0c\u4e70\u5bb6\u5f88\u96be\u5728\u4e24\u5f20\u5361\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\uff0c\u6bd4\u5982250\u7f8e\u5143\u7684\u80af\u00b7\u683c\u91cc\u83f2\u65b0\u79c0\u5361\u6216200\u7f8e\u5143\u7684a-Rod\u5361\uff0c\u6240\u4ee5\u6211\u4f1a\u628a\u9009\u62e9\u6846\u5982\u4e0b\uff1a\u201c\u4f60\u66f4\u559c\u6b22\u683c\u91cc\u83f2\u5361\uff0c\u8fd8\u662fa-Rod\u5361\u548c\u4e94\u5305\u4e0a\u5c42\u5361\uff1f\u201d\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e4b\u524d\u770b\u8d77\u6765\u5f88\u56f0\u96be\u7684\u51b3\u5b9a\u7a81\u7136\u53d8\u5f97\u4e0d\u518d\u56f0\u96be\uff1aA-Rod\u548c\u4e94\u5305\u3002\n\u5b9e\u9a8c\u7814\u7a76\u8868\u660e\uff0c\u51b3\u7b56\u8005\u5728\u8bc4\u4f30\u6700\u4f73\u878d\u8d44\u9879\u76ee\u65f6\uff0c\u4e5f\u5bb9\u6613\u53d7\u5230\u540c\u6837\u7684\u504f\u89c1\uff0c\u5373\u6240\u8c13\u7684\u673a\u4f1a\u6210\u672c\u5ffd\u89c6\uff0c\u5bfc\u81f4\u51b3\u7b56\u8005\u5728\u6ca1\u6709\u5145\u5206\u8003\u8651\u5176\u4ed6\u9879\u76ee\u7684\u60c5\u51b5\u4e0b\u81f4\u529b\u4e8e\u4e00\u4e2a\u9879\u76ee\u3002\u6211\u7ecf\u5e38\u542c\u5230\u201c\u5982\u679c\u5728\u8fd9\u9879\u653f\u7b56\u4e0a\u6295\u8d441000\u4e07\u7f8e\u5143\uff0c\u80fd\u5e26\u6765\u4ec0\u4e48\u597d\u5904\uff1f\u201d\u4f46\u6211\u5f88\u5c11\u542c\u5230\u201c\u6216\u8005\uff0c\u5982\u679c\u628a1000\u4e07\u7f8e\u5143\u6295\u8d44\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u4f1a\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u201d\u5546\u4e1a\u4e16\u754c\u4e5f\u53d7\u5230\u8fd9\u79cd\u73b0\u8c61\u7684\u5f71\u54cd\uff0c\u5c3d\u7ba1\u5b83\u6709\u66f4\u591a\u7684\u5185\u5728\u505a\u6cd5\u6765\u9632\u8303\u8fd9\u79cd\u73b0\u8c61\uff0c\u56e0\u4e3a\u5728\u7ade\u4e89\u73af\u5883\u4e2d\uff0c\u4e86\u89e3\u673a\u4f1a\u6210\u672c\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u8ba9\u6211\u4eec\u56de\u5230\u4e86\u8fb9\u9645\u601d\u7ef4\u7684\u6982\u5ff5\uff0c\u5b83\u4e0e\u673a\u4f1a\u6210\u672c\u5bc6\u4e0d\u53ef\u5206\u3002\u5f53\u8d44\u6e90\u6709\u9650\u65f6\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u5145\u5206\u5229\u7528\u6700\u540e\u82b1\u8d39\u7684\u6bcf\u4e00\u7f8e\u5143\uff0c\u673a\u4f1a\u6210\u672c\u5305\u62ec\u5982\u679c\u66f4\u6709\u6548\u5730\u5206\u914d\u4f60\u7684\u7f8e\u5143\u53ef\u80fd\u4ea7\u751f\u7684\u989d\u5916\u5f71\u54cd\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u610f\u5473\u7740\uff0c\u8bc4\u4f30\u673a\u4f1a\u6210\u672c\u9700\u8981\u8003\u8651\u4e0d\u662f\u51b3\u7b56\u660e\u786e\u7ec4\u6210\u90e8\u5206\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u6bd4\u5982\u4e94\u5305\u4e0a\u5c42\u5361\u7247\u548c\u6885\u68ee\u7684\u65b0\u68d2\u7403\u624b\u5957\u3002\u4f46\u673a\u4f1a\u6210\u672c\u5e76\u4e0d\u603b\u662f\u94b1\u80fd\u4e70\u5230\u4ec0\u4e48\u3002\u5f53\u6211\u4eec\u5ffd\u89c6\u673a\u4f1a\u6210\u672c\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u6d6a\u8d39\u6700\u5b9d\u8d35\u7684\u6709\u9650\u8d44\u6e90\uff1a\u65f6\u95f4\u3002\n\u540c\u6837\uff0c\u5f53\u6211\u4eec\u628a\u94b1\u82b1\u5728\u4e00\u4ef6\u4e8b\u4e0a\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u5b83\u82b1\u5728\u53e6\u4e00\u4ef6\u4e8b\u4e0a\uff0c\u5f53\u6211\u4eec\u628a\u65f6\u95f4\u82b1\u5728\u4e00\u4ef6\u4e8b\u4e0a\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u5b83\u82b1\u5728\u53e6\u4e00\u4ef6\u4e8b\u4e0a\u3002\u5f53\u4e00\u5bb6\u516c\u53f8\u5c06\u6240\u6709\u8d44\u6e90\u96c6\u4e2d\u5728\u6269\u5c55\u4e00\u79cd\u4ea7\u54c1\u4e0a\u65f6\uff0c\u4ed6\u4eec\u5c31\u65e0\u6cd5\u6269\u5c55\u53e6\u4e00\u79cd\u4ea7\u54c1\u3002\u5f53\u4e00\u4e2a\u653f\u5e9c\u6269\u5927\u4e00\u4e2a\u516c\u5171\u9879\u76ee\u65f6\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u6269\u5927\u53e6\u4e00\u4e2a\u3002\u5b9e\u65bd\u8fd9\u4e9b\u52aa\u529b\u4e0d\u4ec5\u610f\u5473\u7740\u6295\u5165\u8d44\u91d1\uff0c\u8fd8\u610f\u5473\u7740\u76f8\u5173\u4eba\u5458\u6295\u5165\u6570\u5343\u5c0f\u65f6\u7684\u65f6\u95f4\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u968f\u7740\u7ec4\u7ec7\u89c4\u6a21\u7684\u6269\u5927\uff0c\u673a\u4f1a\u6210\u672c\u4e5f\u4f1a\u589e\u52a0\u3002\u6295\u5165\u7684\u8d44\u91d1\u8d8a\u591a\uff0c\u65f6\u95f4\u4e5f\u8d8a\u591a\u3002\u4ece\u7ecf\u6d4e\u89d2\u5ea6\u8bb2\uff0c\u65f6\u95f4\u5c31\u662f\u91d1\u94b1\u3002\n\u81ea\u4ece\u829d\u52a0\u54e5\u8457\u540d\u7ecf\u6d4e\u5b66\u5bb6\u52a0\u91cc\u00b7\u8d1d\u514b\u5c14\uff08Gary Becker[AM'53\uff0cPhD'55]\u5f00\u59cb\u81f4\u529b\u4e8e\u786e\u5b9a\u65f6\u95f4\u7684\u5b9e\u9645\u4ef7\u503c\u4ee5\u6765\uff0c\u7ecf\u6d4e\u5b66\u5bb6\u4eec\u4e00\u76f4\u5728\u63a2\u7d22\u5404\u79cd\u65b9\u6cd5\u6765\u8861\u91cf\u8fd9\u4e2a\u4e0d\u7a33\u5b9a\u7684\u7ecf\u6d4e\u5b9e\u4f53\u3002\u76ee\u524d\uff0c\u7ecf\u6d4e\u5b66\u5bb6\u5df2\u7ecf\u6210\u529f\u5730\u8bc4\u4f30\u4e86\u4e0d\u540c\u73af\u5883\u3001\u4e0d\u540c\u5730\u70b9\u548c\u4e0d\u540c\u4eba\u7fa4\u7684\u65f6\u95f4\u4ef7\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4ea4\u901a\u9879\u76ee\u4e3a\u4e00\u6761\u7f29\u77ed\u4e58\u5ba2\u901a\u52e4\u65f6\u95f4\u7684\u65b0\u94c1\u8def\u7ebf\u63d0\u4f9b\u8d44\u91d1\uff0c\u90a3\u4e48\u5b83\u5c06\u7ed9\u516c\u6c11\u7684\u65f6\u95f4\u4ef7\u503c\u662f\u591a\u5c11\uff1f\u901a\u8fc7\u89c2\u5bdf\u4eba\u4eec\u5728\u56de\u6536\u65f6\u95f4\u5185\u6240\u505a\u7684\u5bcc\u6709\u6210\u6548\u7684\u4e8b\u60c5\u7684\u4ef7\u503c\uff0c\u53ef\u4ee5\u505a\u51fa\u4e00\u4e9b\u6570\u5b57\u4f30\u8ba1\u3002\u4f46\u662f\uff0c\u65f6\u95f4\u7684\u673a\u4f1a\u6210\u672c\u4e0d\u4ec5\u4e0e\u91d1\u94b1\u7684\u83b7\u5f97\u6216\u635f\u5931\u6709\u5173\uff0c\u8fd8\u4e0e\u6211\u4eec\u5728\u5730\u7403\u4e0a\u6709\u9650\u7684\u65f6\u95f4\u91cc\u5982\u4f55\u5ea6\u8fc7\u5206\u914d\u7ed9\u6211\u4eec\u7684\u65f6\u95f4\u6709\u5173\u3002\n\u6211\u4eec\u60f3\u4ece\u751f\u6d3b\u4e2d\u5f97\u5230\u6700\u5927\u7684\u6536\u83b7\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u559c\u6b22\u8981\u6c42\u7b49\u5f85\u65f6\u95f4\u8fc7\u957f\u7684Lyft\u9a91\u4e58\uff08\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u4eec\u66f4\u666e\u904d\u5730\u8ba8\u538c\u7b49\u5f85\uff09\uff0c\u5e76\u4e14\u603b\u662f\u5728\u5bfb\u627e\u6548\u7387\u9ed1\u5ba2\u3002\u6211\u4eec\u5e0c\u671b\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u65f6\u95f4\u5b8c\u6210\u4efb\u52a1\uff0c\u5e76\u5c06\u5220\u9664\u5783\u573e\u90ae\u4ef6\u6216\u7ad9\u5728\u89d2\u843d\u7b49\u5f85Lyft\u51fa\u73b0\u6240\u6d6a\u8d39\u7684\u65f6\u95f4\u673a\u4f1a\u6210\u672c\u964d\u81f3\u6700\u4f4e\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u89c4\u6a21\u5b8f\u5927\u3001\u5927\u80c6\u7684\u60f3\u6cd5\u7684\u4eba\u548c\u7ec4\u7ec7\u6765\u8bf4\uff0c\u673a\u4f1a\u6210\u672c\u662f\u7279\u522b\u91cd\u8981\u7684\u3002\u4e00\u4e2a\u60f3\u6cd5\u89c4\u6a21\u8d8a\u5927\uff0c\u5931\u53bb\u7684\u65f6\u95f4\u3001\u91d1\u94b1\u548c\u673a\u4f1a\u5c31\u8d8a\u591a\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u68a6\u60f3\u6269\u5c55\u81ea\u5df1\u70ed\u7231\u7684\u4e8b\u7269\u7684\u4eba\u6765\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u60c5\u611f\u4ee3\u4ef7\uff1a\u5c06\u65f6\u95f4\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u4eec\u7684\u751f\u6d3b\u6295\u5165\u5230\u4e0d\u53ef\u884c\u7684\u4e8b\u60c5\u4e2d\uff0c\u4f1a\u5e26\u6765\u5931\u671b\u548c\u5fc3\u788e\u7684\u6050\u60e7\u3002\u60f3\u60f3\u90a3\u4e9b\u9009\u62e9\u4e00\u6761\u7814\u7a76\u8def\u7ebf\u4ee5\u671f\u627e\u5230\u6cbb\u6108\u75be\u75c5\u7684\u65b9\u6cd5\u7684\u79d1\u5b66\u5bb6\uff0c\u6216\u8005\u4e00\u4e2a\u6709\u53ef\u80fd\u5f7b\u5e95\u6539\u53d8\u4e00\u4e2a\u884c\u4e1a\u7684\u65b0\u6280\u672f\u60f3\u6cd5\u7684\u521d\u521b\u516c\u53f8\u521b\u59cb\u4eba\u3002\u8ffd\u6c42\u8fd9\u4e9b\u76ee\u6807\u9700\u8981\u505a\u51fa\u5de8\u5927\u727a\u7272\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u8d70\u4e0a\u7684\u9053\u8def\u7684\u673a\u4f1a\u6210\u672c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u4e00\u4e2a\u4f60\u503e\u6ce8\u4e86\u5168\u90e8\u5fc3\u8840\u548c\u65f6\u95f4\u7684\u60f3\u6cd5\u65e0\u6cd5\u6269\u5c55\u65f6\uff0c\u5b83\u662f\u5982\u6b64\u5177\u6709\u7834\u574f\u6027\u3002\u4f60\u5931\u53bb\u7684\u4e0d\u4ec5\u4ec5\u662f\u7535\u538b\u3002\u8fd9\u662f\u4f60\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u62d2\u7edd\u7684\u6240\u6709\u5176\u4ed6\u6709\u5e0c\u671b\u7684\u673a\u4f1a\u3002\u4f60\u8d8a\u662f\u9677\u5165\u9519\u8bef\u7684\u60f3\u6cd5\uff0c\u4f60\u5c31\u8d8a\u662f\u6d6a\u8d39\u751f\u547d\u4e2d\u6700\u5b9d\u8d35\u7684\u8d44\u6e90\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5728\u6b63\u786e\u7684\u65f6\u95f4\u8f9e\u804c\uff08\u5e76\u4e14\u5ffd\u7565\u6c89\u6ca1\u6210\u672c\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u7ee7\u7eed\u6269\u5927\u89c4\u6a21\uff0c\u53d6\u5f97\u66f4\u5927\u7684\u6210\u529f\u3002\n\u6709\u65f6\u5019\uff0c\u4f60\u4e0d\u5f97\u4e0d\u653e\u5f03\u4f60\u4e00\u76f4\u68a6\u60f3\u7684\u804c\u4e1a\u9ad8\u5c14\u592b\u751f\u6daf\uff0c\u6211\u7684\u610f\u601d\u662f\uff0c\u4f60\u68a6\u60f3\u7740\u7528\u8fd9\u4e2a\u60f3\u6cd5\u6765\u6269\u5c55\u548c\u6539\u53d8\u4e16\u754c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u80fd\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u6548\u679c\uff0c\u4ece\u800c\u6539\u53d8\u65b9\u5411\uff0c\u627e\u5230\u4e00\u4e2a\u66f4\u597d\u7684\u804c\u4e1a\u3002\u4f60\u8d8a\u65e9\u8fd9\u4e48\u505a\uff0c\u4f60\u4ed8\u51fa\u7684\u673a\u4f1a\u6210\u672c\u5c31\u8d8a\u4f4e\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u505a\u51fa\u8fc7\u591a\u727a\u7272\u4e4b\u524d\uff0c\u5728\u9002\u5f53\u7684\u65f6\u5019\u653e\u5f03\u5e76\u4e0d\u662f\u81ea\u7136\u800c\u7136\u7684\u4e8b\uff0c\u56e0\u4e3a\u51c6\u786e\u8ba1\u7b97\u673a\u4f1a\u6210\u672c\u5bf9\u4e8e\u68d2\u7403\u5361\u6536\u96c6\u8005\u6216\u516b\u5c81\u7684\u5c0f\u8054\u76df\u6765\u8bf4\u4e5f\u4e0d\u662f\u81ea\u7136\u800c\u7136\u7684\u4e8b\u3002\u8fd9\u9700\u8981\u4e00\u79cd\u4e0e\u6211\u4eec\u6839\u6df1\u8482\u56fa\u7684\u542f\u53d1\u5f0f\u548c\u5feb\u901f\u601d\u7ef4\u65b9\u5f0f\u80cc\u9053\u800c\u9a70\u7684\u52aa\u529b\u3002\u6211\u4eec\u5fc5\u987b\u4e0e\u81ea\u5df1\u9ed8\u8ba4\u7684\u81ea\u6ee1\u5fc3\u7406\u4f5c\u6597\u4e89\u3002\nJohn A. List\u662f\u829d\u52a0\u54e5\u5927\u5b66\u7ecf\u6d4e\u5b66\u548c\u80af\u5c3c\u65af\u00b7\u683c\u91cc\u82ac\u5b66\u9662\u7684\u6770\u51fa\u670d\u52a1\u6559\u6388\u3002\n\u6458\u81ea\u7ea6\u7ff0\u00b7A\u00b7\u83b1\u65af\u7279\u7684\u300a\u7535\u538b\u6548\u5e94\uff1a\u5982\u4f55\u8ba9\u597d\u4e3b\u610f\u53d8\u5f97\u4f1f\u5927\u300b\u4e00\u4e66\u548c\u300a\u4f1f\u5927\u7684\u60f3\u6cd5\u300b\u4e00\u4e66\u3002\u7248\u6743\u6240\u6709\u00a92022\u4f5c\u8005\uff1aJohn A.List\u3002\u7531\u4f01\u9e45\u5170\u767b\u4e66\u5c4b\u6709\u9650\u8d23\u4efb\u516c\u53f8\u65d7\u4e0b\u5170\u767b\u4e66\u5c4b\uff08Random House\uff09\u7684\u4e00\u4e2a\u5206\u652f\u673a\u6784\u300a\u4e0e\u8d27\u5e01\u534f\u8bae\u300b\uff08Agreement with Currency\uff09\u51fa\u7248\u3002", "note_en": "In a new book,   The Voltage Effect: How to Make Good Ideas Great and Great Ideas Scale (Currency, 2022), UChicago economist  John A. List explains what makes an idea scalable to a larger audience, size, and impact. Drawing on his experience advising organizations including Uber, Lyft, the Chicago White Sox, and the federal government, List identifies five key signatures of ideas with scaling potential and four secrets entrepreneurs can use to grow their ideas successfully, or, in the book\u2019s parlance, to increase their voltage. In this excerpt from chapter eight, \u201cQuitting Is for Winners,\u201d List shows how opportunity costs and sunken costs sometimes make throwing in the towel a virtue.\u2014 Laura Demanski, AM\u201994\n  When I was growing up, all of the men in my family were truck drivers (my grandfather, August Sr., my father, August Jr., and my older brother, August III!), and I had been told that I would be one, too. Yet I dreamed of a different life, even if I didn\u2019t know exactly what that life might look like or where to find it. Golf, however, was a door that opened a whole new horizon of possibilities to me, since I very well might not have gone to college at all had it not been for the sport.\n By attaining a four-year degree, I would hop up a rung on the socioeconomic ladder and gain access to opportunities withheld from my parents and grandparents. Golf had gotten me this far, so the best way I could imagine prospering was by making it my future career. If I stuck it out and gave the sport my all, was there a chance I could make it as a professional? I believed the answer was yes, though in retrospect I was a victim of my own confirmation bias, conveniently focusing on the tournaments I won while ignoring the empirical evidence of the ones I lost. I had no trouble remembering the good rounds\u2014shooting 32 on the front nine of a prestigious tournament, for instance\u2014but conveniently blocked out the 41 on the back nine that cost me first place. As I packed up my belongings and left my childhood home for the University of Wisconsin\u2013Stevens Point, playing on the PGA tour was the dream I clung to. And why shouldn\u2019t I? I believed I could scale my past successes as a golfer into future ones on the PGA tour.\n But then something surprising happened during my very first year in college that changed the trajectory of my life. About midway through our fall golf season, I had an off weekend, so I returned home to visit my family. When I went out to Cherokee Country Club in Madison, Wisconsin, to hone my game that Friday morning, there happened to be a bunch of college golfers at Cherokee, including some of the older players I used to compete against in high school\u2014golfers like Steve Stricker from the University of Illinois and Jerry Kelly from the University of Hartford, both of whom have subsequently had long and successful PGA careers. I had not seen them for a few years, so I welcomed the chance to find out how my skills compared.\n Back in high school, I\u2019d managed to stay competitive, even though I was a few years younger than them. Now, however, something had dramatically changed. As we all worked on the practice range, something felt amiss. Incredibly, they had become Jack Nicklauses, while I was stuck as John List. Yet rather than accept the reality of this fact, I brushed off the initial episode. They were always better ball-strikers than me, I told myself, but I always got them back around the greens. Plus, I reminded myself, this is just practice. It\u2019s the score of the actual game that matters, so let\u2019s see how their scores match up against mine.\n After they had all teed off, I followed by playing my round with a few friends. Same tees, same course, same weather conditions. The crushing outcome was that both Steve and Jerry scored in the high 60s, as did many of the dozen or so other golfers out with them (including a high schooler named Mario Tiziani, now also a professional golfer), and while I thought I played pretty well, I shot a 75. For those not familiar with golf scoring, at this level that difference was akin to an A+ versus a D.\n That night, rather than sleep, I did what any data guy would do: I researched all of their golf scores for the past several years, comparing them to what I had scored on the same courses. I did the same all day Saturday and Sunday. This was not easy work; since there was no internet back then, it took two solid days in the library digging through old local newspapers for data. By the end of that weekend, as I drove back to Stevens Point, sleepless, I came to terms with the fact that no matter how much I cared about golf and practiced it\u2014and no matter what it symbolized for me\u2014I was never going to be good enough to make it onto the PGA Tour, or even come close. I was playing fine for a collegiate golfer, but figuring out how to shave those last several strokes off my score necessary to compete at the highest levels was unfathomable. Suddenly I was unable to delude myself further. Reality had intervened and revealed my pro-golfer aspirations for what they were: a false positive.\n My talent had gotten me this far, but as a career, it just didn\u2019t scale. Pursuing it past this point would only lead to a crushing voltage drop and perhaps even more crushing disappointment. So I decided it was time to quit on my dream.\n Making this decision wasn\u2019t easy. It went against the values I had learned as a child growing up in small-town Wisconsin, the kingdom of the legendary Green Bay Packers coach Vince Lombardi, who famously said, \u201cWinners never quit and quitters never win.\u201d This was the local culture I was steeped in. I was a product of it, as were my supportive parents, who believed in my golf career and told me to stay resilient and never give up.\n This wasn\u2019t a uniquely midwestern phenomenon. American culture as a whole tells us that if we refuse to quit, if we just hang on a little longer and give a little more, then all our dreams will come true. This is buttressed by the proliferation of success stories on social media that all seem to inevitably hit the same note: \u201cThankfully I didn\u2019t quit and persevered through all of the setbacks.\u201d This success should be applauded, but for every one of these feel-good stories, there are likely a hundred thousand people who toil away and never get to the finish line, never get to do the victory lap. Where are the tweets from these people? Who is talking about how they could have accomplished something really great if they\u2019d quit something else twenty years ago and tried an entirely different path? How many lifesaving drugs, innovative new products, and bold policy interventions has our society lost because people refused to quit pursuing unscalable dreams? These are tragic and unwritten stories\u2014unwritten because they have not had the chance to play out in reality, since from birth we are told we shouldn\u2019t quit.\n But what if I told you that achieving something great often means quitting\u2014that is, giving up a dream, pursuit, or career path that is going nowhere, in exchange for one where you can make a greater contribution?\n In my case, once I gave up my dream of professional golfing, I turned my attention to the one thing that I had come to believe I did have a true talent\u2014and passion\u2014for: economics. In 1992, I graduated with an economics degree from UW\u2013Stevens Point and received my doctorate four years later from the University of Wyoming.\n After completing my PhD, I applied for 150 tenure-track jobs. I got turned down by 149 of them, yet I wasn\u2019t shaken by this less than enthusiastic embrace from my chosen field. Because unlike golf, economics was an area where I knew I was good enough to make a mark. While I didn\u2019t have a fancy Ivy League degree, the response to my research suggested I had the right kind of mind. So this time I heeded Lombardi\u2019s advice and persisted. I threw myself into the fieldwork that has since defined my career at the one school that wanted me, the University of Central Florida.\n It paid off. In some alternate corner of the multiverse, John A. List is a golf \u201cteaching pro\u201d at a second-rate country club quoting Vince Lombardi to the clients he gives lessons to. Not the worst existence, but not the best, either. Thankfully, in this universe I\u2019m me, constantly feeding my own curiosity with new field experiments and new science. I\u2019ve done a few things I\u2019m proud of, and maybe even helped some people. As a golfer, I simply wouldn\u2019t have made much of an impact\u2014not because economists are inherently more valuable to society than golfers (lots of professional golfers inspire children and contribute to social causes, and club pros do wonderful things as well) but simply because I am better at economics than at golf, which made me more likely to successfully contribute things of social value. Put another way, my skills as an economist were more scalable than my skills as a golfer.\n In cases like these, the best thing you can do is quit. It may be a wrenching decision, but I would argue that getting good at quitting is one of the secrets for scaling successfully. Indeed, I believe that not only do people, companies, and organizations not quit enough, they also don\u2019t quit soon enough.\n   It\u2019s perhaps no coincidence that the field I turned to after giving up on my golf career was a discipline that could scientifically explain why I had made the right choice. That explanation can be found in one of the bedrock concepts of economics: opportunity cost, or the gains you miss out on when you choose one option over another. We can think of opportunity cost as an attempt to quantify the path not taken, which often means the path we would have taken if only we\u2019d quit the path we were on. In my case, pursuing a golf career would have cost me the chance to teach economics to eager young minds, publish lots of scientific studies and books, and advise various leaders.\n I saw a useful example of the dynamics of opportunity cost at work one day when my son Mason, then eight years old and a precociously competitive baseball player, was shopping for a new bat. Mason had saved up $325 and wanted to buy a top-of-the-line baseball bat that he hoped would help him raise his batting average. (Yes, his data scientist dad tracked his stats from his very first at-bat as a five-year-old!) He quickly found two very good options\u2014one for $200, the other for $325. He couldn\u2019t decide between them, so I did what any economist father would do and said, \u201cMason, think about it like this. If you buy the $200 bat, then that leaves you $125 to also buy a good new Rawlings baseball glove.\u201d He took this suggestion in. Within a minute we were at the cash register with the cheaper bat and a new Rawlings glove.\n Mason had factored opportunity cost into his decision-making. Because he had a finite amount of money to spend, had he opted for the more expensive bat, not only would he have had to shell out $325, but he also would have had to forgo buying the new glove as well.\n Sometimes we do such calculations instinctively. But often we don\u2019t stop to consider opportunity cost until both options come into our field of vision, a phenomenon demonstrated by a body of influential psychological research showing that our judgments and preferences tend to be based primarily on information that is explicitly presented. When we make decisions we tend to apply mental shortcuts, or heuristics, that allow us to think fast, which means there is no time for careful opportunity-cost thinking. Relatedly, research on affective forecasting\u2014our ability to predict the emotions we will feel in the future\u2014reveals that judgments about our future well-being are excessively sensitive to current mood, causing us to neglect other relevant factors. In other words, we magnify the importance of the emotions sitting in front of us, which can lead to more impulsive decision-making.\n When I was a sports card dealer I saw this all the time. Too many times to remember, a buyer would have a hard time choosing between two cards\u2014buying, say, a $250 Ken Griffey rookie card or a $200 A-Rod card\u2014so I would frame the choice as follows: \u201cWould you rather have the Griffey, or the A-Rod card and five packs of Upper Deck cards?\u201d Remarkably, the decision that had seemed so difficult just moments before was suddenly no longer difficult at all: A-Rod and the five packs.\n Experimental research suggests that policymakers are also vulnerable to the same bias, known as opportunity cost neglect, when evaluating the best programs to fund, causing decision-makers to commit to one program without fully considering others. I have often heard \u201cWhat benefits can $10 million produce if invested in this policy?\u201d But rarely have I heard \u201cAlternatively, what benefits could the $10 million reap if invested elsewhere?\u201d The business world is subject to this phenomenon, too, though it has more built-in practices to guard against it, since understanding opportunity cost is crucial in a competitive environment. This takes us back to the concept of marginal thinking, which is inseparable from opportunity cost. When resources are limited, if you\u2019re not getting the most out of every last dollar spent, the opportunity cost includes the additional impact your dollars could have had if allocated more effectively.\n All of this is to say that evaluating opportunity costs requires consideration of alternative options that are not explicit components of a decision, like the five packs of Upper Deck cards and Mason\u2019s new baseball glove. But the opportunity cost isn\u2019t always about what money can buy. When we ignore opportunity cost, we often squander that most precious limited resource of all: time.\n In the same way that when we spend our money on one thing we can\u2019t spend it on another, when we spend our time on one thing we can\u2019t spend it on another. When a company focuses all of their resources on scaling one product, they can\u2019t scale another. When a government scales one public program, they don\u2019t scale another. To implement such endeavors means investing not just money but also thousands of hours of time by the people involved. In this manner, as an organization scales, opportunity costs grow\u2014more money is spent, but so is more time. And time, economically speaking, is money.\n Ever since Gary Becker [AM\u201953, PhD\u201955], the famous Chicago economist, began working on determining the actual value of time, economists have explored various ways to measure this slippery economic entity. At present, economists have managed to estimate the value of our time across different settings, places, and populations. For instance, what is the value of the time a transportation program will give back to citizens if, say, it funds a new rail line that will shorten riders\u2019 commutes? There are numerical estimates that can be made by looking at the value of the productive things people will do with the time they recoup. But the opportunity cost of time isn\u2019t just about money made or lost\u2014it\u2019s about how we spend the tick-tocking of hours endowed to us during our limited time on earth.\n We want to get the most out of our lives, which is why we don\u2019t like requesting Lyft rides whose wait times feel too long (and why we hate waiting more generally) and are always on the lookout for productivity hacks. We want to maximize what we accomplish with our time and minimize the opportunity costs of time wasted deleting spam emails or standing on a corner waiting for a Lyft to show up.\n For people and organizations with big, bold ideas they hope to take to scale, opportunity costs are especially important to consider. The more an idea scales, the more time, money, and opportunity can be lost. Moreover, for most people who dream of scaling something they are passionate about, there is also an emotional cost: the fear of disappointment and heartbreak that comes with investing their time\u2014which is to say, their life\u2014in something that doesn\u2019t work out. Think about the scientist who chooses one line of research in the hope of discovering a cure to a disease, or the start-up founder with an idea for a new technology that might revolutionize an industry. Pursuing such objectives requires tremendous sacrifices, the most significant of which is the opportunity costs of paths not taken. This is why it is so devastating when an idea you pour your heart and soul and time into fails to scale. It\u2019s not just voltage you lose. It\u2019s all the other promising opportunities you turned down in the process. The more time you sink into the wrong idea, the more you are misspending life\u2019s most precious resource. But if you quit at the right time (and ignore that sunk cost), then you can move on to scale something else\u2014something with a better shot at success.\n  Sometimes you have to leave behind that professional golf career you\u2019ve been dreaming of\u2014by which I mean that idea you dreamed of scaling and changing the world with but which just isn\u2019t performing how you want\u2014in order to shift gears and find a better one. And the sooner you do this, the lower the opportunity cost you\u2019ll pay. Yet giving up at the right moment\u2014before we sacrifice overmuch\u2014doesn\u2019t come naturally to us for the same reason that accurately calculating opportunity cost doesn\u2019t come naturally to baseball card collectors or eight-year-old Little Leaguers. It requires an effort that runs counter to our deep-rooted heuristics and fast way of thinking. We have to battle our own default mental complacency.\n  John A. List is the Kenneth C. Griffin Distinguished Service Professor in Economics and the College at the University of Chicago.\n  From the Book:   The Voltage Effect: How to Make Good Ideas Great and Great Ideas Scale by John A. List. Copyright \u00a9 2022 by John A. List. Published by arrangement with Currency, an imprint of Random House, a division of Penguin Random House LLC.", "posttime": "2022-02-20 11:10:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6212\u70df,optimal,\u65f6\u95f4", "title": "\u6700\u4f73\u6212\u70df", "title_en": "Optimal quitting", "transed": 1, "url": "https://mag.uchicago.edu/economics-business/optimal-quitting", "via": "", "real_tags": ["\u6212\u70df", "optimal", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074162, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\uff0c\u4e9a\u9a6c\u900a\u79d1\u5b66\u516c\u53f8\u5728\u5176\u7814\u7a76\u9886\u57df\u5217\u8868\u4e2d\u589e\u52a0\u4e86\u81ea\u52a8\u63a8\u7406\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u505a\u51fa\u8fd9\u6837\u7684\u6539\u53d8\uff0c\u662f\u56e0\u4e3a\u81ea\u52a8\u5316\u63a8\u7406\u5728\u4e9a\u9a6c\u900a\u7684\u5f71\u54cd\u529b\u3002\u4f8b\u5982\uff0cAmazon Web Services\u7684\u5ba2\u6237\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u57fa\u4e8e\u81ea\u52a8\u63a8\u7406\u7684\u529f\u80fd\uff0c\u5982IAM access Analyzer\u3001S3 Block Public access\u6216VPC\u53ef\u8fbe\u6027\u5206\u6790\u5668\u3002\u6211\u4eec\u8fd8\u770b\u5230\u4e9a\u9a6c\u900a\u5f00\u53d1\u56e2\u961f\u5c06\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u96c6\u6210\u5230\u4ed6\u4eec\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u63d0\u9ad8\u4e86\u6211\u4eec\u4ea7\u54c1\u7684\u5b89\u5168\u6027\u3001\u8010\u7528\u6027\u3001\u53ef\u7528\u6027\u548c\u8d28\u91cf\u3002\n\u672c\u6587\u7684\u76ee\u7684\u662f\u4e3a\u5bf9\u8be5\u9886\u57df\u4e00\u65e0\u6240\u77e5\u4f46\u53c8\u597d\u5947\u4e86\u89e3\u66f4\u591a\u7684\u884c\u4e1a\u4e13\u4e1a\u4eba\u58eb\u63d0\u4f9b\u4e00\u4e2a\u5173\u4e8e\u81ea\u52a8\u63a8\u7406\u7684\u6e29\u548c\u4ecb\u7ecd\u3002\u7406\u89e3\u672c\u6587\u6240\u9700\u8981\u7684\u53ea\u662f\u80fd\u591f\u9605\u8bfb\u4e00\u4e9b\u5c0f\u7684C\u548cPython\u4ee3\u7801\u7247\u6bb5\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5c06\u63d0\u53ca\u4e00\u4e9b\u4e13\u4e1a\u6982\u5ff5\uff0c\u4f46\u76ee\u7684\u53ea\u662f\u4ee5\u975e\u6b63\u5f0f\u7684\u65b9\u5f0f\u4ecb\u7ecd\u5b83\u4eec\u3002\u6700\u540e\uff0c\u6211\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6211\u4eec\u6700\u559c\u6b22\u7684\u516c\u5f00\u5de5\u5177\u3001\u89c6\u9891\u3001\u4e66\u7c4d\u548c\u6587\u7ae0\u7684\u94fe\u63a5\uff0c\u4f9b\u90a3\u4e9b\u5e0c\u671b\u6df1\u5165\u4e86\u89e3\u7684\u4eba\u4f7f\u7528\u3002\n\u82b1\u70b9\u65f6\u95f4\u56de\u7b54\u201cf\u662f\u5426\u4f1a\u8fd4\u56defalse\uff1f\u201d\u8fd9\u4e0d\u662f\u4e00\u4e2a\u9a97\u4eba\u7684\u95ee\u9898\uff1a\u6211\u7279\u610f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u95ee\u9898\u3002\n\u4e3a\u4e86\u901a\u8fc7\u7a77\u4e3e\u6d4b\u8bd5\u6765\u68c0\u67e5\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c\u4ee5\u4e0b\u53cc\u5d4c\u5957\u6d4b\u8bd5\u5faa\u73af\uff0c\u8be5\u5faa\u73af\u5bf9unsigned int\u7c7b\u578b\u7684\u6240\u6709\u53ef\u80fd\u7684\u503c\u5bf9\u8c03\u7528f\uff1a\n#\u5305\u62ec&lt\uff1b\u65af\u7279\u8fea\u5965\u3002h&gt\uff1b\n\u4e0d\u5e78\u7684\u662f\uff0c\u5373\u4f7f\u5728\u73b0\u4ee3\u786c\u4ef6\u4e0a\uff0c\u8fd9\u79cd\u53cc\u91cd\u5d4c\u5957\u5faa\u73af\u4e5f\u4f1a\u8fd0\u884c\u5f88\u957f\u65f6\u95f4\u3002\u6211\u7f16\u8bd1\u4e86\u5b83\uff0c\u5e76\u57282.6GHz\u7684\u82f1\u7279\u5c14\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u4e8648\u4e2a\u591a\u5c0f\u65f6\u624d\u653e\u5f03\u3002\n\u4e3a\u4ec0\u4e48\u6d4b\u8bd5\u9700\u8981\u8fd9\u4e48\u957f\u65f6\u95f4\uff1f\u56e0\u4e3aUntIX MAX\u901a\u5e38\u4e3a4294967295\uff0c\u6240\u4ee5\u8981\u8003\u8651\u7684\u662f1844 6740401196196025\u5355\u72ec\u7684F\u8c03\u7528\u3002\u5728\u6211\u76842.6GHz\u673a\u5668\u4e0a\uff0c\u7f16\u8bd1\u7684\u6d4b\u8bd5\u5faa\u73af\u6bcf\u79d2\u8c03\u7528f\u5927\u7ea64.3\u4ebf\u6b21\u3002\u4f46\u8981\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6d4b\u8bd5\u6240\u670918\u4e2a\u4e94\u5206\u4e4b\u4e00\u7684\u75c5\u4f8b\uff0c\u6211\u4eec\u9700\u89811360\u591a\u5e74\u7684\u65f6\u95f4\u3002\n\u5f53\u6211\u4eec\u5411\u884c\u4e1a\u4e13\u4e1a\u4eba\u58eb\u5c55\u793a\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u4ed6\u4eec\u51e0\u4e4e\u7acb\u5373\u5f97\u51faf\u53ef\u4ee5&#39\uff1b\u53ea\u8981\u5e95\u5c42\u7f16\u8bd1\u5668/\u89e3\u91ca\u5668\u548c\u786c\u4ef6\u6b63\u786e\uff0c\u5c31\u4e0d\u80fd\u8fd4\u56defalse\u3002\u4ed6\u4eec\u662f\u600e\u4e48\u505a\u5230\u7684\uff1f\u4ed6\u4eec\u5bf9\u6b64\u8fdb\u884c\u4e86\u63a8\u7406\u3002\u4ed6\u4eec\u4ece\u4e0a\u5b66\u65f6\u5c31\u8bb0\u5f97x+y\u53ef\u4ee5\u6539\u5199\u4e3ay+x\uff0c\u5e76\u5f97\u51faf\u603b\u662f\u8fd4\u56de\u771f\u7684\u7ed3\u8bba\u3002\n\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u4e3a\u6211\u4eec\u505a\u8fd9\u9879\u5de5\u4f5c\uff1a\u5b83\u8bd5\u56fe\u901a\u8fc7\u4f7f\u7528\u5df2\u77e5\u7684\u6570\u5b66\u6280\u672f\u6765\u56de\u7b54\u6709\u5173\u7a0b\u5e8f\uff08\u6216\u903b\u8f91\u516c\u5f0f\uff09\u7684\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u5de5\u5177\u5c06\u4f7f\u7528\u4ee3\u6570\u6765\u63a8\u65adx+y==y+x\u53ef\u4ee5\u66ff\u6362\u4e3a\u7b80\u5355\u7684\u8868\u8fbe\u5f0ftrue\u3002\n\u5373\u4f7f\u57df\u662f\u65e0\u9650\u7684\uff08\u4f8b\u5982\uff0c\u65e0\u754c\u7684\u6570\u5b66\u6574\u6570\u800c\u4e0d\u662f\u6709\u9650\u7684\u6574\u6570\uff09\uff0c\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u4e5f\u53ef\u4ee5\u975e\u5e38\u5feb\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u80fd\u4f1a\u56de\u7b54\u201c\u4e0d\u77e5\u9053\u201d\u3002\u6211\u4eec&#39\uff1b\u6211\u5c06\u5728\u4e0b\u9762\u770b\u5230\u4e00\u4e2a\u8457\u540d\u7684\u4f8b\u5b50\u3002\n\u81ea\u52a8\u63a8\u7406\u7684\u79d1\u5b66\u672c\u8d28\u4e0a\u4e13\u6ce8\u4e8e\u5c3d\u53ef\u80fd\u964d\u4f4e\u8fd9\u4e9b\u201c\u4e0d\u77e5\u9053\u201d\u7b54\u6848\u7684\u9891\u7387\uff1a\u5de5\u5177\u62a5\u544a\u7684\u9891\u7387\u8d8a\u4f4e&#34\uff1b\u5510&#39\uff1b\u6211\u4e0d\u77e5\u9053&#34\uff1b\uff08\u6216\u5c1d\u8bd5\u65f6\u6682\u505c\uff09\uff0c\u5b83\u4eec\u5c31\u8d8a\u6709\u7528\u3002\n\u4eca\u5929\u7684\u5de5\u5177\u80fd\u591f\u4e3a\u6628\u5929\u7684\u5de5\u5177\u65e0\u6cd5\u56de\u7b54\u7684\u7a0b\u5e8f\u548c\u67e5\u8be2\u63d0\u4f9b\u7b54\u6848\u3002\u660e\u5929\u7684\u5de5\u5177\u5c06\u66f4\u52a0\u5f3a\u5927\u3002\u6211\u4eec\u770b\u5230\u4e86\u8fd9\u4e2a\u9886\u57df\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u4e9a\u9a6c\u900a\uff0c\u6211\u4eec\u4ece\u4e2d\u83b7\u5f97\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u4ef7\u503c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u770b\u5230\u81ea\u52a8\u63a8\u7406\u5f62\u6210\u4e86\u4e9a\u9a6c\u900a\u5f0f\u7684\u826f\u6027\u5faa\u73af\uff0c\u5728\u8fd9\u79cd\u5faa\u73af\u4e2d\uff0c\u66f4\u591a\u7684\u5de5\u5177\u8f93\u5165\u95ee\u9898\u63a8\u52a8\u4e86\u5de5\u5177\u7684\u6539\u8fdb\uff0c\u4ece\u800c\u9f13\u52b1\u66f4\u591a\u5730\u4f7f\u7528\u5de5\u5177\u3002\n\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u7684\u4f8b\u5b50\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5927\u81f4\u4e86\u89e3\u4e86\u4ec0\u4e48\u662f\u81ea\u52a8\u63a8\u7406\uff0c\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u5c0f\u4f8b\u5b50\u8ba9\u6211\u4eec\u66f4\u771f\u5b9e\u5730\u611f\u53d7\u5230\u4e86\u8fd9\u4e9b\u5de5\u5177\u4e3a\u6211\u4eec\u7ba1\u7406\u7684\u90a3\u79cd\u590d\u6742\u6027\u3002\n\u7a7ag\uff08\u6574\u6570x\uff0c\u6574\u6570y\uff09{\ndef g\uff08x\uff0cy\uff09\uff1a\n\u8bd5\u7740\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff1a\u201cg\u662f\u5426\u603b\u662f\u6700\u7ec8\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u5b83\u7684\u8c03\u7528\u8005\uff1f\u201d\n\u5f53\u6211\u4eec\u5411\u884c\u4e1a\u4e13\u4e1a\u4eba\u58eb\u5c55\u793a\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5f88\u5feb\u627e\u5230\u6b63\u786e\u7684\u7b54\u6848\u3002\u4e00\u4e9b\u4eba\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u4e86\u89e3\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u6210\u679c\u7684\u4eba\uff0c\u6709\u65f6\u4f1a\u9519\u8bef\u5730\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5&#39\uff1b\u6211\u4e0d\u80fd\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u7406\u7531\u662f\u201c\u8fd9\u662f\u4e00\u4e2a\u505c\u987f\u95ee\u9898\u7684\u4f8b\u5b50\uff0c\u5df2\u7ecf\u88ab\u8bc1\u660e\u662f\u65e0\u6cd5\u89e3\u51b3\u7684\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7a0b\u5e8f\u7684\u505c\u6b62\u884c\u4e3a\u8fdb\u884c\u63a8\u7406\uff0c\u5305\u62ec\u8fd9\u4e00\u4e2a\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4ee5\u4e0b\u662f\u5927\u591a\u6570\u884c\u4e1a\u4e13\u4e1a\u4eba\u58eb\u5728\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u65f6\u4f7f\u7528\u7684\u63a8\u7406\uff1a\n\u5728y\u4e0d\u662f\u6b63\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u8df3\u5230\u51fd\u6570g\u7684\u672b\u5c3e\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u60c5\u51b5\u3002\n\u5982\u679c\u5728\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u53d8\u91cfx\u7684\u503c\u51cf\u5c0f\uff0c\u90a3\u4e48\u6700\u7ec8\uff0c\u5faa\u73af\u6761\u4ef6x&gt\uff1by\u5c06\u5931\u8d25\uff0cg\u7684\u672b\u7aef\u5c06\u5230\u8fbe\u3002\n\u53ea\u6709\u5f53y\u59cb\u7ec8\u4e3a\u6b63\u65f6\uff0cx\u7684\u503c\u624d\u4f1a\u51cf\u5c0f\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\uff0c\u5bf9x\u7684\u66f4\u65b0\uff08\u5373x=x-y\uff09\u624d\u4f1a\u51cf\u5c0fx\u3002\u4f46\u662fy\u7684\u6b63\u6027\u662f\u7531\u6761\u4ef6\u8868\u8fbe\u5f0f\u786e\u5b9a\u7684\uff0c\u56e0\u6b64x\u59cb\u7ec8\u51cf\u5c0f\u3002\n\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u901a\u5e38\u4f1a\u62c5\u5fc3C\u7a0b\u5e8f\u7684x=x-y\u547d\u4ee4\u4e2d\u7684\u4e0b\u6ea2\uff0c\u4f46\u968f\u540e\u4f1a\u6ce8\u610f\u5230x&gt\uff1b\u5728\u66f4\u65b0\u5230x\u4e4b\u524d\u4e3ay\uff0c\u56e0\u6b64\u4e0d\u80fd\u4e0b\u6ea2\u3002\n\u5982\u679c\u4f60\u6267\u884c\u4e86\u4ee5\u4e0a\u4e09\u4e2a\u6b65\u9aa4\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u975e\u5e38\u76f4\u89c2\u5730\u770b\u5230\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u5728\u5bf9\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8fdb\u884c\u63a8\u7406\u65f6\u4ee3\u8868\u6211\u4eec\u6267\u884c\u7684\u601d\u7ef4\u7c7b\u578b\u3002\u8fd9\u4e9b\u5de5\u5177\u5fc5\u987b\u9762\u5bf9\u8bb8\u591a\u7ec6\u8282\uff08\u4f8b\u5982\uff0c\u5806\u3001\u5806\u6808\u3001\u5b57\u7b26\u4e32\u3001\u6307\u9488\u7b97\u6cd5\u3001\u9012\u5f52\u3001\u5e76\u53d1\u3001\u56de\u8c03\u7b49\uff09\uff0c\u4f46\u4e5f\u6709\u51e0\u5341\u5e74\u7684\u7814\u7a76\u8bba\u6587\u6d89\u53ca\u5904\u7406\u8fd9\u4e9b\u548c\u5176\u4ed6\u4e3b\u9898\u7684\u6280\u672f\uff0c\u4ee5\u53ca\u5404\u79cd\u5b9e\u7528\u5de5\u5177\uff0c\u5c06\u8fd9\u4e9b\u60f3\u6cd5\u4ed8\u8bf8\u5b9e\u65bd\u3002\n\u4e3b\u8981\u7684\u6536\u83b7\u662f\uff0c\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u901a\u5e38\u4ee3\u8868\u6211\u4eec\u5b8c\u6210\u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\uff1a\u7b2c1\u9879\u662f\u5173\u4e8e\u7a0b\u5e8f\u63a7\u5236\u7ed3\u6784\u7684\u63a8\u7406\u3002\u7b2c2\u9879\u662f\u5173\u4e8e\u7a0b\u5e8f\u4e2d\u6700\u7ec8\u6b63\u786e\u7684\u5185\u5bb9\u7684\u63a8\u7406\u3002\u7b2c3\u9879\u662f\u5173\u4e8e\u7a0b\u5e8f\u4e2d\u4ec0\u4e48\u603b\u662f\u6b63\u786e\u7684\u63a8\u7406\u3002\n\u8bf7\u6ce8\u610f\uff0cAWS\u8d44\u6e90\u7b56\u7565\u3001VPC\u7f51\u7edc\u63cf\u8ff0\u751a\u81f3makefiles\u7b49\u914d\u7f6e\u5de5\u4ef6\u90fd\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4ee3\u7801\u3002\u8fd9\u79cd\u89c2\u70b9\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u7528\u6765\u63a8\u7406C\u6216Python\u4ee3\u7801\u7684\u76f8\u540c\u6280\u672f\u6765\u56de\u7b54\u6709\u5173\u914d\u7f6e\u89e3\u91ca\u7684\u95ee\u9898\u3002\u6b63\u662f\u8fd9\u79cd\u89c1\u89e3\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86IAM\u8bbf\u95ee\u5206\u6790\u5668\u6216VPC\u53ef\u8fbe\u6027\u5206\u6790\u5668\u7b49\u5de5\u5177\u3002\n\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u9762\u7814\u7a76f\u548cg\u65f6\u6240\u770b\u5230\u7684\uff0c\u81ea\u52a8\u63a8\u7406\u53ef\u4ee5\u6bd4\u7a77\u4e3e\u6d4b\u8bd5\u5feb\u5f97\u591a\u3002\u6709\u4e86\u4eca\u5929\u53ef\u7528\u7684\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u663e\u793af\u6216g\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7a77\u4e3e\u6d4b\u8bd5\u6765\u7b49\u5f85\u751f\u547d\u5468\u671f\u3002\n\u6211\u4eec\u73b0\u5728\u80fd\u629b\u5f03\u6211\u4eec\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u8f6c\u5411\u81ea\u52a8\u63a8\u7406\u5417\uff1f\u4e0d\u5b8c\u5168\u662f\u3002\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5bf9\u6d4b\u8bd5\u7684\u4f9d\u8d56\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u5f88\u5feb\u5b8c\u5168\u6d88\u9664\u5b83\uff0c\u5982\u679c\u6709\u7684\u8bdd\u3002\u8003\u8651\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff1a\nbool f\uff08\u65e0\u7b26\u53f7\u6574\u6570x\uff0c\u65e0\u7b26\u53f7\u6574\u6570y\uff09{\n\u56de\u60f3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u6709\u7f3a\u9677\u7684\u7f16\u8bd1\u5668\u6216\u5fae\u5904\u7406\u5668\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7531\u8be5\u6e90\u4ee3\u7801\u6784\u9020\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u8fd4\u56defalse\u3002\u6211\u4eec\u53ef\u80fd\u8fd8\u9700\u8981\u62c5\u5fc3\u8bed\u8a00\u8fd0\u884c\u65f6\u3002\u4f8b\u5982\uff0cC\u6570\u5b66\u5e93\u6216Python\u5783\u573e\u6536\u96c6\u5668\u53ef\u80fd\u5b58\u5728\u5bfc\u81f4\u7a0b\u5e8f\u884c\u4e3a\u5f02\u5e38\u7684\u9519\u8bef\u3002\n\u5173\u4e8e\u6d4b\u8bd5\uff0c\u6211\u4eec\u7ecf\u5e38\u5fd8\u8bb0\u7684\u4e00\u70b9\u662f\uff0c\u5b83\u6240\u505a\u7684\u8fdc\u4e0d\u6b62\u662f\u544a\u8bc9\u6211\u4eecC\u6216Python\u6e90\u4ee3\u7801\u3002\u5b83\u8fd8\u6d4b\u8bd5\u7f16\u8bd1\u5668\u3001\u8fd0\u884c\u65f6\u3001\u89e3\u91ca\u5668\u3001\u5fae\u5904\u7406\u5668\u7b49\u3002\u6d4b\u8bd5\u5931\u8d25\u53ef\u80fd\u6e90\u4e8e\u5806\u6808\u4e2d\u7684\u4efb\u4f55\u5de5\u5177\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u81ea\u52a8\u63a8\u7406\u901a\u5e38\u53ea\u9002\u7528\u4e8e\u5806\u6808\u7684\u4e00\u5c42\u2014\u2014\u6e90\u4ee3\u7801\u672c\u8eab\uff0c\u6709\u65f6\u4e5f\u9002\u7528\u4e8e\u7f16\u8bd1\u5668\u6216\u5fae\u5904\u7406\u5668\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u63a8\u7406\u7684\u4ef7\u503c\u5728\u4e8e\uff0c\u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u6e05\u695a\u5730\u5b9a\u4e49\u6211\u4eec\u77e5\u9053\u7684\u548c\u4e0d\u77e5\u9053\u7684\u5173\u4e8e\u88ab\u68c0\u67e5\u5c42\u7684\u4fe1\u606f\u3002\n\u6b64\u5916\uff0c\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u4f7f\u7528\u7684\u5468\u56f4\u73af\u5883\u6a21\u578b\uff08\u4f8b\u5982\uff0c\u7f16\u8bd1\u5668\u6216\u8c03\u7528\u6211\u4eec\u7684\u8fc7\u7a0b\u7684\u8fc7\u7a0b\uff09\u4f7f\u6211\u4eec\u7684\u5047\u8bbe\u975e\u5e38\u7cbe\u786e\u3002\u5206\u79bb\u8ba1\u7b97\u5806\u6808\u7684\u5404\u4e2a\u5c42\u6709\u52a9\u4e8e\u66f4\u597d\u5730\u5229\u7528\u6211\u4eec\u7684\u65f6\u95f4\u3001\u7cbe\u529b\u3001\u91d1\u94b1\u4ee5\u53ca\u4eca\u5929\u548c\u660e\u5929\u5de5\u5177\u7684\u529f\u80fd\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u4f7f\u7528\u81ea\u52a8\u63a8\u7406\u65f6\uff0c\u6211\u4eec\u51e0\u4e4e\u603b\u662f\u9700\u8981\u5bf9\u67d0\u4e9b\u4e8b\u60c5\u505a\u51fa\u5047\u8bbe\u2014\u2014\u4f8b\u5982\uff0c\u63a7\u5236\u6211\u4eec\u7684\u7845\u82af\u7247\u7684\u7269\u7406\u539f\u7406\u3002\u56e0\u6b64\uff0c\u6d4b\u8bd5\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5b8c\u5168\u53d6\u4ee3\u3002\u6211\u4eec\u5e0c\u671b\u8fdb\u884c\u7aef\u5230\u7aef\u6d4b\u8bd5\uff0c\u5c3d\u53ef\u80fd\u5730\u9a8c\u8bc1\u6211\u4eec\u7684\u5047\u8bbe\u3002\n\u6211\u4e4b\u524d\u63d0\u5230\u8fc7\uff0c\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u6709\u65f6\u4f1a\u8fd4\u56de\u201c\u4e0d\u77e5\u9053\u201d\uff0c\u800c\u4e0d\u662f\u201c\u662f\u201d\u6216\u201c\u5426\u201d\u3002\u5b83\u4eec\u6709\u65f6\u4e5f\u4f1a\u6c38\u8fdc\u8fd0\u884c\uff08\u6216\u8d85\u65f6\uff09\uff0c\u56e0\u6b64\u6c38\u8fdc\u4e0d\u4f1a\u8fd4\u56de\u7b54\u6848\u3002\u8ba9\u6211\u4eec\u770b\u770b\u8457\u540d\u7684&#34\uff1b\u505c\u987f\u95ee\u9898&#34\uff1b\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\u5de5\u5177\u4e0d\u80fd\u8fd4\u56de\u201c\u662f\u201d\u6216\u201c\u5426\u201d\u3002\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3aterminates\u7684\u81ea\u52a8\u63a8\u7406API\uff0c\u5982\u679c\u4e00\u4e2aC\u51fd\u6570\u603b\u662f\u7ec8\u6b62\uff0c\u5b83\u4f1a\u8fd4\u56de\u201c\u662f\u201d\uff0c\u5982\u679c\u8be5\u51fd\u6570\u53ef\u4ee5\u6c38\u8fdc\u6267\u884c\uff0c\u5b83\u4f1a\u8fd4\u56de\u201c\u5426\u201d\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u63cf\u8ff0\u7684\u5de5\u5177\uff08\u4f5c\u8005\u4e4b\u524d\u5de5\u4f5c\u7684\u65e0\u803b\u81ea\u6211\u63a8\u5e7f\uff09\u6784\u5efa\u8fd9\u6837\u4e00\u4e2aAPI\u3002\u4e3a\u4e86\u4e86\u89e3\u7ec8\u6b62\u5de5\u5177\u80fd\u4e3a\u6211\u4eec\u505a\u4ec0\u4e48\uff0c\u8003\u8651\u4e24\u4e2a\u57fa\u672c\u7684C\u51fd\u6570\uff0cg\uff08\u6765\u81ea\u4e0a\u9762\uff09\uff0c\n\u7a7ag\uff08\u6574\u6570x\uff0c\u6574\u6570y\uff09{\n\u7a7ag2\uff08\u6574\u6570x\uff0c\u6574\u6570y\uff09{\n\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u539f\u56e0\uff0c\u51fd\u6570g\u603b\u662f\u5c06\u63a7\u5236\u8fd4\u56de\u7ed9\u5b83\u7684\u8c03\u7528\u8005\uff0c\u56e0\u6b64\u7ec8\u6b62\uff08g\uff09\u5e94\u8be5\u8fd4\u56detrue\u3002\u540c\u65f6\uff0cterminates\uff08g2\uff09\u5e94\u8be5\u8fd4\u56defalse\uff0c\u56e0\u4e3a\u4f8b\u5982\uff0cg2\uff085\uff0c0\uff09\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\u3002\n\u6ce8\u610f\u5b83&#39\uff1b\u8fd9\u662f\u9012\u5f52\u7684\u3002\u4ec0\u4e48\u662f\u7ec8\u6b62\uff08h\uff09\u7684\u6b63\u786e\u7b54\u6848\uff1f\u7b54\u6848\u4e0d\u53ef\u80fd\u662f&#34\uff1b\u662f\u7684\uff1b\u3002\u5b83\u4e5f\u4e0d\u80fd\u662f&#34\uff1b\u6ca1\u6709\uff1b\u3002\u4e3a\u4ec0\u4e48\uff1f\n\u60f3\u8c61\u4e00\u4e0b\uff08h\uff09\u5c06\u8fd4\u56de&#34\uff1b\u662f\u7684\uff1b\u3002\u5982\u679c\u4f60\u8bfbh\u7684\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u4e0d\u4f1a\u56e0\u4e3ah\u4ee3\u7801\u4e2d\u7684\u6761\u4ef6\u8bed\u53e5\u800c\u7ec8\u6b62\uff0c\u5b83\u5c06\u5728\uff081\uff09{}\u65f6\u6267\u884c\u65e0\u9650\u5faa\u73af\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cterminates\uff08h\uff09\u7b54\u6848\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3ah\u662f\u9012\u5f52\u5b9a\u4e49\u7684\uff0c\u8c03\u7528terminates\u672c\u8eab\u3002\n\u540c\u6837\uff0c\u5982\u679c\u7ec8\u6b62\uff08h\uff09\u8fd4\u56de&#34\uff1b\u6ca1\u6709&#34\uff1b\uff0c\u7136\u540eh\u5b9e\u9645\u4e0a\u4f1a\u7ec8\u6b62\u5e76\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u5b83\u7684\u8c03\u7528\u8005\uff0c\u56e0\u4e3a\u6761\u4ef6\u8bed\u53e5\u7684if\u60c5\u51b5\u4e0d\u6ee1\u8db3\uff0c\u5e76\u4e14\u6ca1\u6709else\u5206\u652f\u3002\u540c\u6837\uff0c\u7b54\u6848\u662f\u9519\u8bef\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u4e0d\u77e5\u9053\u201d\u7684\u7b54\u6848\u5b9e\u9645\u4e0a\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\n\u7a0b\u5e8fh\u662f\u56fe\u70751936\u5e74\u5173\u4e8e\u53ef\u5224\u5b9a\u6027\u548c1931\u5e74\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406\u7684\u8457\u540d\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u7684\u53d8\u4f53\u3002\u8fd9\u4e9b\u8bba\u6587\u544a\u8bc9\u6211\u4eec\uff0c\u50cf\u505c\u987f\u95ee\u9898\u8fd9\u6837\u7684\u95ee\u9898\u662f\u65e0\u6cd5\u201c\u89e3\u51b3\u201d\u7684\uff0c\u5982\u679c\u201c\u89e3\u51b3\u201d\u662f\u6307\u89e3\u51b3\u8fc7\u7a0b\u672c\u8eab\u603b\u662f\u7ec8\u6b62\uff0c\u56de\u7b54\u201c\u662f\u201d\u6216\u201c\u5426\u201d\uff0c\u4f46\u6c38\u8fdc\u4e0d\u56de\u7b54\u201c\u4e0d\u77e5\u9053\u201d\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u8bb8\u591a\u4eba\u5fc3\u76ee\u4e2d\u201c\u5df2\u89e3\u51b3\u201d\u7684\u5b9a\u4e49\u3002\u5bf9\u4e8e\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u6765\u8bf4\uff0c\u4e00\u4e2a\u5de5\u5177\u6709\u65f6\u4f1a\u8d85\u65f6\u6216\u5076\u5c14\u8fd4\u56de\u201c\u4e0d\u77e5\u9053\u201d\uff0c\u4f46\u5f53\u5b83\u7ed9\u51fa\u7b54\u6848\u65f6\uff0c\u603b\u662f\u7ed9\u51fa\u6b63\u786e\u7684\u7b54\u6848\u5c31\u8db3\u591f\u4e86\u3002\n\u8fd9\u4e2a\u95ee\u9898\u7c7b\u4f3c\u4e8e\u822a\u7a7a\u65c5\u884c\uff1a\u6211\u4eec\u77e5\u9053\u5b83\u4e0d\u662f100%\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5760\u673a\u4e8b\u6545\u5728\u8fc7\u53bb\u53d1\u751f\u8fc7\uff0c\u6211\u4eec\u786e\u4fe1\u5b83\u4eec\u5728\u672a\u6765\u4e5f\u4f1a\u53d1\u751f\u3002\u4f46\u5f53\u4f60\u5b89\u5168\u7740\u9646\u65f6\uff0c\u4f60\u77e5\u9053\u90a3\u6b21\u5b83\u8d77\u4e86\u4f5c\u7528\u3002\u822a\u7a7a\u4e1a\u7684\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u5931\u8d25\uff0c\u5c3d\u7ba1\u539f\u5219\u4e0a\u8fd9\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\n\u628a\u5b83\u653e\u5728\u81ea\u52a8\u63a8\u7406\u7684\u80cc\u666f\u4e0b\uff1a\u5bf9\u4e8e\u4e00\u4e9b\u7a0b\u5e8f\uff0c\u6bd4\u5982h\uff0c\u6211\u4eec\u6c38\u8fdc\u65e0\u6cd5\u5bf9\u5de5\u5177\u8fdb\u884c\u8db3\u591f\u7684\u6539\u8fdb\uff0c\u4ee5\u53d6\u4ee3&#34\uff1b\u5510&#39\uff1b\u6211\u4e0d\u77e5\u9053&#34\uff1b\u7b54\u590d\u4f46\u4eca\u5929\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u60c5\u51b5&#39\uff1bs\u5de5\u5177\u56de\u7b54&#34\uff1b\u5510&#39\uff1b\u6211\u4e0d\u77e5\u9053&#34\uff1b\uff0c\u4f46\u672a\u6765\u7684\u5de5\u5177\u53ef\u80fd\u80fd\u591f\u56de\u7b54#34\uff1b\u662f\u7684&#34\uff1b\u6216&#34\uff1b\u6ca1\u6709\uff1b\u3002\u81ea\u52a8\u63a8\u7406\u4e3b\u9898\u4e13\u5bb6\u9762\u4e34\u7684\u73b0\u4ee3\u79d1\u5b66\u6311\u6218\u662f\u8ba9\u5b9e\u7528\u5de5\u5177\u5c3d\u53ef\u80fd\u591a\u5730\u8fd4\u56de\u201c\u662f\u201d\u6216\u201c\u5426\u201d\u3002\u4f5c\u4e3a\u5f53\u524d\u5de5\u4f5c\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf7\u67e5\u770bCMU\u6559\u6388\u548c\u4e9a\u9a6c\u900a\u5b66\u8005Marijn Heule\uff0c\u4ee5\u53ca\u4ed6\u5bf9\u89e3\u51b3Collatz\u7ec8\u6b62\u95ee\u9898\u7684\u63a2\u7d22\u3002\n\u53e6\u4e00\u4ef6\u9700\u8981\u8bb0\u4f4f\u7684\u4e8b\u60c5\u662f\uff0c\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u7ecf\u5e38\u8bd5\u56fe\u89e3\u51b3\u201c\u68d8\u624b\u201d\u7684\u95ee\u9898\uff0c\u4f8b\u5982NP\u590d\u6742\u6027\u7c7b\u4e2d\u7684\u95ee\u9898\u3002\u5728\u8fd9\u91cc\uff0c\u4e0e\u6211\u4eec\u5728\u6682\u505c\u95ee\u9898\u4e2d\u770b\u5230\u7684\u60f3\u6cd5\u76f8\u540c\uff1a\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u5177\u6709\u5f3a\u5927\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\uff0c\u901a\u5e38\u53ef\u4ee5\u89e3\u51b3\u7279\u5b9a\u60c5\u51b5\u4e0b\u7684\u68d8\u624b\u95ee\u9898\uff0c\u4f46\u8fd9\u4e9b\u542f\u53d1\u5f0f\u7b97\u6cd5\u53ef\u80fd\uff08\u6709\u65f6\u786e\u5b9e\uff09\u5931\u8d25\uff0c\u5bfc\u81f4\u201c\u4e0d\u77e5\u9053\u201d\u7b54\u6848\u6216\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u3002\u79d1\u5b66\u7684\u76ee\u6807\u662f\u6539\u8fdb\u542f\u53d1\u5f0f\u7b97\u6cd5\uff0c\u4ee5\u6700\u5c0f\u5316\u8fd9\u4e2a\u95ee\u9898\u3002\n\u79d1\u5b66\u6587\u732e\u4e2d\u4f7f\u7528\u4e86\u5927\u91cf\u540d\u79f0\u6765\u63cf\u8ff0\u76f8\u5173\u4e3b\u9898\uff0c\u800c\u81ea\u52a8\u63a8\u7406\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5feb\u901f\u8bcd\u6c47\u8868\uff1a\n\u903b\u8f91\u662f\u4e00\u4e2a\u6b63\u5f0f\u7684\u3001\u673a\u68b0\u7684\u7cfb\u7edf\uff0c\u7528\u6765\u5b9a\u4e49\u4ec0\u4e48\u662f\u771f\u7684\uff0c\u4ec0\u4e48\u662f\u5047\u7684\u3002\u4f8b\u5b50\uff1a\u547d\u9898\u903b\u8f91\u6216\u4e00\u9636\u903b\u8f91\u3002\n\u8bc1\u660e\u662f\u5b9a\u7406\u903b\u8f91\u4e2d\u7684\u6709\u6548\u8bba\u70b9\u3002\u4f8b\u5982\uff1aGonthier\u548c#39\uff1b\u8fd9\u662f\u56db\u8272\u5b9a\u7406\u7684\u8bc1\u660e\u3002\n\u673a\u68b0\u5b9a\u7406\u8bc1\u660e\u5668\u662f\u4e00\u79cd\u534a\u81ea\u52a8\u63a8\u7406\u5de5\u5177\uff0c\u7528\u4e8e\u68c0\u67e5\u901a\u5e38\u7531\u4eba\u5199\u4e0b\u7684\u8bc1\u660e\u7684\u673a\u5668\u53ef\u8bfb\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e9b\u5de5\u5177\u901a\u5e38\u9700\u8981\u4eba\u5de5\u6307\u5bfc\u3002\u4f8b\u5b50\uff1a\u6765\u81ea\u4e9a\u9a6c\u900a\u7814\u7a76\u5458\u7ea6\u7ff0\u00b7\u54c8\u91cc\u68ee\u7684\u970d\u5c14\u00b7\u83b1\u7279\u3002\n\u5f62\u5f0f\u9a8c\u8bc1\u662f\u5c06\u5b9a\u7406\u8bc1\u660e\u5e94\u7528\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u6a21\u578b\uff0c\u4ee5\u8bc1\u660e\u7cfb\u7edf\u7684\u671f\u671b\u5c5e\u6027\u3002\u793a\u4f8b\uff1aCompCert\u9a8c\u8bc1\u4e86C\u7f16\u8bd1\u5668\u3002\n\u5f62\u5f0f\u5316\u65b9\u6cd5\u662f\u6700\u5e7f\u6cdb\u7684\u672f\u8bed\uff0c\u7b80\u5355\u5730\u8bf4\u5c31\u662f\u4f7f\u7528\u903b\u8f91\u5bf9\u7cfb\u7edf\u6a21\u578b\u8fdb\u884c\u5f62\u5f0f\u5316\u63a8\u7406\u3002\n\u534a\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u9700\u8981\u7528\u6237\u63d0\u4f9b\u63d0\u793a\uff0c\u4f46\u4ecd\u80fd\u5728\u903b\u8f91\u4e0a\u627e\u5230\u6709\u6548\u7684\u8bc1\u636e\u3002\n\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u5de5\u4f5c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u540d\u5b57\u3002\u5728\u4e9a\u9a6c\u900a\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u81ea\u52a8\u63a8\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u5b83\u6700\u80fd\u4f53\u73b0\u6211\u4eec\u5bf9\u81ea\u52a8\u5316\u548c\u89c4\u6a21\u7684\u96c4\u5fc3\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u7684\u4e00\u4e9b\u5185\u90e8\u56e2\u961f\u540c\u65f6\u4f7f\u7528\u81ea\u52a8\u548c\u534a\u81ea\u52a8\u63a8\u7406\u5de5\u5177\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u79d1\u5b66\u5bb6&#39\uff1b\u5728\u5168\u81ea\u52a8\u63a8\u7406\u4e2d\u7684\u542f\u53d1\u5f0f\u53ef\u80fd\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u83b7\u5f97\u534a\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u3002\u5bf9\u4e8e\u6211\u4eec\u9762\u5411\u5916\u90e8\u7684\u5ba2\u6237\u529f\u80fd\uff0c\u6211\u4eec\u76ee\u524d\u53ea\u4f7f\u7528\u5b8c\u5168\u81ea\u52a8\u5316\u7684\u65b9\u6cd5\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4ecb\u7ecd\u4e86\u81ea\u52a8\u63a8\u7406\u7684\u6982\u5ff5\uff0c\u4f7f\u7528\u6700\u5c0f\u7684\u73a9\u5177\u7a0b\u5e8f\u3002\u6211\u8fd8\u6ca1\u6709\u63cf\u8ff0\u5982\u4f55\u5904\u7406\u5177\u6709\u5806\u6216\u5e76\u53d1\u6027\u7684\u5b9e\u9645\u7a0b\u5e8f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5404\u79cd\u5404\u6837\u7684\u81ea\u52a8\u63a8\u7406\u5de5\u5177\u548c\u6280\u672f\uff0c\u7528\u4e8e\u89e3\u51b3\u5404\u79cd\u4e0d\u540c\u9886\u57df\u7684\u95ee\u9898\uff0c\u5176\u4e2d\u4e00\u4e9b\u9886\u57df\u76f8\u5f53\u72ed\u7a84\u3002\u8981\u63cf\u8ff0\u5b83\u4eec\u4ee5\u53ca\u8be5\u9886\u57df\u7684\u8bb8\u591a\u5206\u652f\u548c\u5b50\u5b66\u79d1\uff08\u5982\u201cSMT\u6c42\u89e3\u201d\u3001\u201c\u9ad8\u9636\u903b\u8f91\u5b9a\u7406\u8bc1\u660e\u201d\u3001\u201c\u5206\u79bb\u903b\u8f91\u201d\uff09\uff0c\u9700\u8981\u6570\u5343\u7bc7\u535a\u5ba2\u6587\u7ae0\u548c\u4e66\u7c4d\u3002\n\u81ea\u52a8\u63a8\u7406\u53ef\u4ee5\u8ffd\u6eaf\u5230\u8ba1\u7b97\u673a\u7684\u65e9\u671f\u53d1\u660e\u8005\u3002\u903b\u8f91\u672c\u8eab\uff08\u81ea\u52a8\u63a8\u7406\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\uff09\u5df2\u6709\u6570\u5343\u5e74\u7684\u5386\u53f2\u3002\u4e3a\u4e86\u4f7f\u8fd9\u7bc7\u6587\u7ae0\u7b80\u77ed\uff0c\u6211\u5c06\u5728\u8fd9\u91cc\u505c\u4e0b\u6765\uff0c\u5e76\u5efa\u8bae\u8fdb\u4e00\u6b65\u9605\u8bfb\u3002\u8bf7\u6ce8\u610f\uff0c\u9996\u5148\u8fdb\u5165\u8fd9\u4e2a\u533a\u57df\u5f88\u5bb9\u6613\u8ff7\u5931\u5728\u6742\u8349\u9605\u8bfb\u6df1\u5ea6\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u6bd4\u5f00\u59cb\u65f6\u66f4\u52a0\u56f0\u60d1\u3002\u6211\u9f13\u52b1\u4f60\u4f7f\u7528\u6709\u9650\u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u65b9\u6cd5\uff0c\u53ea\u5728\u4e00\u4e9b\u7ec6\u8282\u4e2d\u987a\u5e8f\u67e5\u770b\u5404\u79cd\u5de5\u5177\u548c\u6280\u672f\uff0c\u7136\u540e\u7ee7\u7eed\uff0c\u800c\u4e0d\u662f\u53ea\u6df1\u5165\u5b66\u4e60\u4e00\u4e2a\u65b9\u9762\u3002\n\u4f7f\u7528\u53ef\u8bc1\u660e\u5b89\u5168\u6027\u81ea\u52a8\u5316AWS\u5408\u89c4\u6027\u9a8c\u8bc1\uff0c\u4e0eAWS\u5408\u89c4\u526f\u603b\u88c1\u67e5\u5fb7\u00b7\u4f0d\u5c14\u592b\u548c\u5408\u89c4\u5ba1\u8ba1\u5458Coalfire#39\u8fdb\u884c\u8bb2\u5ea7\uff1b\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u6c64\u59c6\u00b7\u9ea6\u574e\u5fb7\u7f57\nAWS\u81ea\u52a8\u63a8\u7406\u6280\u672f\u7684\u53d1\u5c55\uff0c\u4e0eAWS\u5b89\u5168\u526f\u603b\u88c1\u57c3\u91cc\u514b\u00b7\u5e03\u5170\u5fb7\u6e29\uff08Eric Brandwine\uff09\u4e00\u8d77\u6f14\u8bb2\nAWS CISO\u548c\u5b89\u5168\u526f\u603b\u88c1Steve Schmidt\u5173\u4e8eAWS\u4e2d\u57fa\u4e8e\u5f62\u5f0f/\u7ea6\u675f\u7684\u5de5\u5177\u7684\u5f00\u53d1\u548c\u4f7f\u7528\u7684\u8bb2\u5ea7\n\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u7684\u81ea\u52a8\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u53d1\u73b0\u7684\u4e00\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u8ffd\u6eaf\u52301959\u5e74\uff0c\u5f53\u65f6\u738b\u6d69\u4f7f\u7528\u81ea\u52a8\u63a8\u7406\u6765\u8bc1\u660e\u300a\u6570\u5b66\u539f\u7406\u300b\u4e2d\u7684\u5b9a\u7406\u3002", "note_en": "This week, Amazon Science added  automated reasoning to its list of  research areas. We made this change because of the impact that automated reasoning is having here at Amazon. For example, Amazon Web Services\u2019 customers now have direct access to automated-reasoning-based features such as  IAM Access Analyzer,  S3 Block Public Access, or  VPC Reachability Analyzer. We also see Amazon development teams  integrating automated-reasoning tools into their development processes, raising the bar on the  security,  durability, availability, and quality of our products.\n The goal of this article is to provide a gentle introduction to automated reasoning for the industry professional who knows nothing about the area but is curious to learn more. All you will need to make sense of this article is to be able to read a few small C and Python code fragments. I will refer to a few specialist concepts along the way, but only with the goal of introducing them in an informal manner. I close with links to some of our favorite publicly available tools, videos, books, and articles for those looking to go more in-depth.\n   Take a few moments to answer the question  \u201cCould\u00a0f \u00a0ever return false?\u201d This is not a trick question: I\u2019ve purposefully used a simple example to make a point.\n To check the answer with exhaustive testing, we could try executing the following doubly nested test loop, which calls  f on all possible pairs of values of the type unsigned int:\n #include&lt;stdio.h&gt;\r#include&lt;stdbool.h&gt;\r#include&lt;limits.h&gt;\r\rbool f(unsigned int x, unsigned int y) {\r return (x+y == y+x);\r}\r\rvoid main() {\r for (unsigned int x=0;1;x++) {\r for (unsigned int y=0;1;y++) {\r if (!f(x,y)) printf(&#34;Error!\\n&#34;);\r if (y==UINT_MAX) break;\r }\r if (x==UINT_MAX) break;\r }\r}\n Unfortunately, even on modern hardware, this doubly nested loop will run for a  very long time. I compiled it and ran it on a 2.6 GHz Intel processor for over 48 hours before giving up.\n Why does testing take so long? Because UINT_MAX is typically 4,294,967,295, there are 18,446,744,065,119,617,025 separate  f calls to consider. On my 2.6 GHz machine, the compiled test loop called  f approximately 430 million times a second. But to test all 18 quintillion cases at this performance, we would need over 1,360 years.\n When we show the above code to industry professionals, they almost immediately work out that  f can&#39;t return false as long as the underlying compiler/interpreter and hardware are correct. How do they do that? They  reason about it. They remember from their school days that  x + y can be rewritten as  y + x and conclude that  f always returns true.\n  An  automated reasoning tool does this work for us: it attempts \u00a0to answer questions about a program (or a logic formula) by using known techniques from mathematics. In this case, the tool would use algebra to deduce that  x + y == y + x can be replaced with the simple expression true.\n Automated-reasoning tools can be incredibly fast, even when the domains are infinite (e.g., unbounded mathematical integers rather than finite C ints). Unfortunately, the tools may answer  \u201cDon\u2019t know\u201d\u00a0in some instances. We&#39;ll see a famous example of that below.\n The  science of automated reasoning is essentially focused on driving the frequency of these  \u201cDon\u2019t know\u201d answers down as far as possible: the less often the tools report  &#34;Don&#39;t know&#34; (or time out while trying), the more useful they are.\n Today\u2019s tools are able to give answers for programs and queries where yesterday\u2019s tools could not. Tomorrow\u2019s tools will be even more powerful. We are seeing rapid progress in this field, which is why at Amazon, we are increasingly getting so much value from it. In fact, we see automated reasoning forming its own Amazon-style virtuous cycle, where more input problems to our tools drive improvements to the tools, which encourages more use of the tools.\n A slightly more complex example. Now that we know the rough outlines of what automated reasoning is, the next small example gives a slightly more realistic taste of the sort of complexity that the tools are managing for us.\n void g(int x, int y) {\r if (y &gt; 0)\r while (x &gt; y)\r x = x - y;\r}\n  def g(x, y):\r assert isinstance(x, int) and isinstance(y, int)\r if y &gt; 0:\r while x &gt; y:\r x = x - y\n Try to answer this question:  \u201cDoes\u00a0g \u00a0always eventually return control back to its caller?\u201d\n When we show this program to industry professionals, they usually figure out the right answer quickly. A few, especially those who are aware of results in theoretical computer science, sometimes mistakenly think that we can&#39;t answer this question, with the rationale  \u201cThis is an example of the\u00a0 halting problem , which has been proved insoluble\u201d.\u00a0In fact, we  can\u00a0reason about the halting behavior for  specific programs, including this one. We\u2019ll talk more about that later.\n Here\u2019s the reasoning that most industry professionals use when looking at this problem:\n In the case where\u00a0 y\u00a0is not positive, execution jumps to the end of the function\u00a0 g. That\u2019s the easy case.\n If, in every iteration of the loop, the value of the variable\u00a0 x\u00a0decreases, then eventually, the loop condition\u00a0 x\u00a0&gt;\u00a0 y\u00a0will fail, and the end of\u00a0 g\u00a0will be reached.\n The value of\u00a0 x\u00a0always decreases only if\u00a0 y\u00a0is always positive, because only then\u00a0does\u00a0the update to\u00a0x\u00a0(i.e.,\u00a0 x\u00a0=\u00a0 x\u00a0-\u00a0 y) decrease\u00a0 x. But\u00a0 y\u2019s positivity is established by the conditional expression, so\u00a0 x\u00a0always decreases.\n The experienced programmer will usually worry about underflow in the  x =  x -  y command of the C program but will then notice that  x &gt;  y before the update to  x and thus cannot underflow.\n If you carried out the three steps above yourself, you now have a very intuitive view of the type of thinking an automated-reasoning tool is performing on our behalf when reasoning about a computer program. There are many nitty-gritty details that the tools have to face (e.g., heaps, stacks, strings, pointer arithmetic, recursion, concurrency, callbacks, etc.), but there\u2019s also decades of research papers on techniques for handling these and other topics, along with various practical tools that put these ideas to work.\n  The main takeaway is that automated-reasoning tools are usually working through the three steps above on our behalf: Item 1 is reasoning about the program\u2019s  control structure. Item 2 is reasoning about what is  eventually true within the program. Item 3 is reasoning about what is  always true in the program.\n Note that configuration artifacts such as AWS resource policies, VPC network descriptions, or even makefiles can be thought of as code. This viewpoint allows us to use the same techniques we use to reason about C or Python code to answer questions about the  interpretation of configurations. It\u2019s this insight that gives us tools like IAM Access Analyzer or VPC Reachability Analyzer.\n   As we saw above when looking at  f and  g, automated reasoning can be dramatically faster than exhaustive testing. With tools available today, we can show properties of  f or  g in milliseconds, rather than waiting lifetimes with exhaustive testing.\n Can we throw away our testing tools now and just move to automated reasoning? Not quite. Yes, we can dramatically reduce our dependency on testing, but we will not be completely eliminating it any time soon, if ever. Consider our first example:\n bool f(unsigned int x, unsigned int y) {\r return (x + y == y + x);\r}\n Recall the worry that a buggy compiler or microprocessor could in fact cause an executable program constructed from this source code to return false. We might also need to worry about the language runtime. For example, the C math library or the Python garbage collector might have bugs that cause a program to misbehave.\n What\u2019s interesting about testing, and something we often forget, is that it\u2019s doing much more than just telling us about the C or Python source code. It\u2019s also testing the compiler, the runtime, the interpreter, the microprocessor, etc. A test failure could be rooted in any of those tools in the stack.\n Automated reasoning, in contrast, is usually applied to just one layer of that stack \u2014 the source code itself, or sometimes the compiler or the microprocessor. What we find so valuable about reasoning is it allows us to clearly define both what we  do know and what we  do not know about the layer under inspection.\n Furthermore, the models of the surrounding environment (e.g., the compiler or the procedure calling our procedure) used by the automated-reasoning tool make our assumptions  very precise. Separating the layers of the computational stack helps make better use of our time, energy, and money and the capabilities of the tools today and tomorrow.\n Unfortunately, we will almost always need to make assumptions about  something\u00a0when using \u00a0automated reasoning \u2014 for example, the principles of physics that govern our silicon chips. Thus, testing will never be fully replaced. We will want to perform end-to-end testing to try and validate our assumptions as best we can.\n    I previously mentioned that automated-reasoning tools sometimes return  \u201cDon\u2019t know\u201d rather than  \u201cyes\u201d or  \u201cno\u201d. They also sometimes run forever (or time out), thus never returning an answer. Let\u2019s look at the famous &#34;halting problem&#34; program, in which we know tools  cannot return  \u201cyes\u201d or  \u201cno\u201d.\n Imagine that we have an automated-reasoning API, called  terminates, that returns  \u201cyes\u201d\u00a0if a C function always terminates or  \u201cno\u201d\u00a0when the function could execute forever. As an example, we could build such an API using the tool described  here (shameless self-promotion of author\u2019s previous work). To get the idea of what a termination tool can do for us, consider two basic C functions,  g (from above),\n void g(int x, int y) {\r if (y &gt; 0)\r while (x &gt; y)\r x = x - y;\r}\n  void g2(int x, int y) {\r while (x &gt; y)\r x = x - y;\r}\n For the reasons we have already discussed, the function  g always returns control back to its caller, so  terminates(g) should return true. Meanwhile,  terminates(g2) should return false because, for example,  g2(5, 0) will never terminate.\n   Notice that it&#39;s recursive. What\u2019s the right answer for  terminates(h)? The answer cannot be &#34;yes&#34;. It also cannot be &#34;no&#34;. Why?\n Imagine that  terminates(h) were to return &#34;yes&#34;. If you read the code of  h, you\u2019ll see that in this case, the function does not terminate because of the conditional statement in the code of  h that will execute the infinite loop  while(1){}. Thus, in this case, the  terminates(h) answer would be wrong, because  h is defined recursively, calling terminates on itself.\n Similarly, if  terminates(h) were to return &#34;no&#34;, then  h would in fact terminate and return control to its caller, because the  if case of the conditional statement is not met, and there is no else branch. Again, the answer would be wrong. This is why the  \u201cDon\u2019t know\u201d answer is actually unavoidable in this case.\n The program  h is a variation of examples given in Turing\u2019s  famous 1936 paper on decidability and  G\u00f6del\u2019s incompleteness theorems from 1931. These papers tell us that problems like the halting problem cannot be \u201csolved\u201d, if by \u201csolved \u201d\u00a0we mean that the solution procedure itself always terminates and answers either  \u201cyes\u201d or  \u201cno\u201d but never  \u201cDon\u2019t know\u201d. But that is not the definition of \u201csolved\u201d that many of us have in mind. For many of us, a tool that sometimes times out or occasionally returns  \u201cDon\u2019t know\u201d but, when it gives an answer, always gives the right answer is good enough.\n This problem is analogous to airline travel: we know it\u2019s not 100% safe, because crashes have happened in the past, and we are sure that they will happen in the future. But when you land safely, you  know it worked that time. The goal of the airline industry is to reduce failure as much as possible, even though it\u2019s in principle unavoidable.\n To put that in the context of automated reasoning: for some programs, like  h, we can never improve the tool enough to replace the  &#34;Don&#39;t know&#34; answer. But there are many other cases where today&#39;s tools answer  &#34;Don&#39;t know&#34;, but future tools may be able to answer  &#34;yes&#34; or  &#34;no&#34;. The modern scientific challenge for automated-reasoning subject-matter experts is to get the practical tools to return  \u201cyes\u201d or  \u201cno\u201d\u00a0as often as possible. As an example of current work, check out CMU professor and  Amazon scholar  Marijn Heule and his  quest to solve the Collatz termination problem.\n Another thing to keep in mind is that automated-reasoning tools are regularly trying to solve \u201cintractable\u201d problems, e.g. , problems in the  NP complexity class. Here, the same thinking applies that we saw in the case of the halting problem: automated-reasoning tools have powerful heuristics that often work around the intractability problem for specific cases, but those heuristics can (and sometimes do) fail, resulting in  \u201cDon\u2019t know\u201d answers or impractically long execution time. The science is to improve the heuristics to minimize that problem.\n   A host of names are used in the scientific literature to describe interrelated topics, of which automated reasoning is just one. Here\u2019s a quick glossary:\n A\u00a0 logic\u00a0is a formal and mechanical system for defining what is true and untrue. Examples:\u00a0 propositional logic\u00a0or\u00a0 first-order logic.\n  A\u00a0 proof\u00a0is a valid argument in logic of a theorem. Example: Gonthier&#39;s\u00a0 proof of the four-color theorem.\n A\u00a0 mechanical theorem prover\u00a0is a semi-automated-reasoning tool that checks a machine-readable expression of a proof often written down by a human. These tools often require human guidance. Example:\u00a0 HOL-light, from Amazon researcher\u00a0 John Harrison.\n Formal verification\u00a0is the use of theorem proving when applied to models of computer systems to prove desired properties of the systems. Example: the\u00a0 CompCert verified C compiler.\n Formal methods\u00a0is the broadest term, meaning simply the use of logic to reason formally about models of systems.\n  A\u00a0 semi-automated-reasoning\u00a0tool is one that requires hints from the user but still finds valid proofs in logic.\n As you can see, we have a choice of monikers when working in this space. At Amazon, we\u2019ve chosen to use automated reasoning, as we think it best captures our ambition for automation and scale. In practice, some of our internal teams use both automated and  semi-automated reasoning tools, because the scientists we&#39;ve hired can often get semi-automated reasoning tools to succeed where the heuristics in fully automated reasoning might fail. For our externally facing customer features, we currently use only fully automated approaches.\n   In this essay, I\u2019ve introduced the idea of automated reasoning, with the smallest of toy programs. I haven\u2019t described how to handle realistic programs, with heap or concurrency. In fact, there are a wide variety of automated-reasoning tools and techniques, solving problems in all kinds of different domains, some of them quite narrow. To describe them all and the many branches and sub-disciplines of the field (e.g. \u201cSMT solving\u201d, \u201chigher-order logic theorem proving\u201d, \u201cseparation logic\u201d) would take thousands of blogs posts and books.\n Automated reasoning goes back to the early inventors of computers. And logic itself (which automated reasoning attempts to solve) is thousands of years old. In order to keep this post brief, I\u2019ll stop here and suggest further reading. Note that it\u2019s very easy to get lost in the weeds reading depth-first into this area, and you could emerge more confused than when you started. I encourage you to use a bounded depth-first search approach, looking sequentially at a wide variety of tools and techniques in only some detail and then moving on, rather than learning only one aspect deeply.\n                  Automating Compliance Verification on AWS Using Provable Security, lecture with AWS VP of compliance Chad Woolf, and compliance auditor Coalfire&#39;s CEO Tom McAndrew\n   The Evolution of automated reasoning Technology at AWS, lecture with AWS VP of security Eric Brandwine\n Lecture by AWS CISO and VP of security Steve Schmidt about on the development and use of formal/constraint-based tools in AWS\n            Some algorithms found in the automated theorem provers we use today date as far back as 1959, when\u00a0 Hao Wang used automated reasoning to prove the theorems from\u00a0 Principia Mathematica.", "posttime": "2022-02-20 10:59:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u81ea\u52a8,introduction,\u5de5\u5177", "title": "\u5bf9\u81ea\u52a8\u63a8\u7406\u7684\u6e29\u548c\u4ecb\u7ecd", "title_en": "A gentle introduction to automated reasoning", "transed": 1, "url": "https://www.amazon.science/blog/a-gentle-introduction-to-automated-reasoning", "via": "", "real_tags": ["\u81ea\u52a8", "\u5de5\u5177"]}]
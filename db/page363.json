[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1031188, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u524d\uff0c\u4e00\u4e2a\u8eab\u7a7f\u810f\u516e\u516e\u7684\u5b9e\u9a8c\u670d\u3001\u7559\u7740\u84ec\u4e71\u957f\u53d1\u7684\u7537\u5b50\u51fa\u73b0\u5728\u9547\u4e0a\u7684\u6d3e\u51fa\u6240\uff0c\u8981\u6c42\u89c1\u8b66\u5bdf\u5c40\u957f\u3002\u201c\u6211\u505a\u5230\u4e86\uff01\u201d\u4ed6\u558a\u9053\u3002\u6211\u5df2\u7ecf\u5efa\u9020\u4e86\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6293\u6355\u7f6a\u72af\u7684\u673a\u5668\u4eba\uff01&34\uff1b\u8b66\u5bdf\u5c40\u957f\u5bf9\u6b64\u8868\u793a\u6000\u7591\uff0c\u4f46\u4ed6\u8ba4\u4e3a\u4e5f\u8bb8\u503c\u5f97\u82b1\u65f6\u95f4\u770b\u770b\u8fd9\u4e2a\u4eba\u53d1\u660e\u4e86\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u4ed6\u6697\u81ea\u60f3\uff0c\u5b8c\u5168\u758f\u8fdc\u8fd9\u4f4d\u75af\u72c2\u7684\u79d1\u5b66\u5bb6\u548c\u4ed6\u7684\u730e\u4eba\u673a\u5668\u4eba\u5927\u519b\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u70b9\u4e0d\u660e\u667a\u7684\u4e3e\u52a8\u3002\u56e0\u6b64\uff0c\u8fd9\u540d\u7537\u5b50\u5411\u8b66\u5bdf\u5c40\u957f\u89e3\u91ca\u4e86\u4ed6\u7684\u53d1\u660e\u5982\u4f55\u4f7f\u7528\u4e00\u7cfb\u5217\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u533a\u5206\u7f6a\u72af\u548c\u5b88\u6cd5\u516c\u6c11\u3002\u5b83\u7279\u522b\u64c5\u957f\u53d1\u73b0\u6700\u8fd1\u8d8a\u72f1\u7684\u56da\u72af\uff01\u4ed6\u8bf4\u3002\u8b66\u5bdf\u5c40\u957f\u867d\u7136\u7709\u5934\u7d27\u9501\uff0c\u8d8a\u6765\u8d8a\u6000\u7591\uff0c\u4f46\u8fd8\u662f\u5141\u8bb8\u8fd9\u540d\u7537\u5b50\u5728\u4e00\u5468\u5185\u5c55\u793a\u4e00\u53f0\u673a\u5668\u4eba\uff0c\u5e76\u4fdd\u8bc1\u4e0d\u4f1a\u9020\u6210\u81f4\u547d\u7684\u675f\u7f1a\u3002\u4ed6\u4eec\u51b3\u5b9a\u8ba9\u673a\u5668\u4eba\u5728\u76d1\u72f1\u5468\u56f4\u5de1\u903b\u3002\u679c\u4e0d\u5176\u7136\uff0c\u51e0\u5929\u540e\u53d1\u751f\u4e86\u4e00\u8d77\u8d8a\u72f1\u4e8b\u4ef6\uff0c\u4e00\u540d\u5728\u76d1\u72f1\u8bbe\u65bd\u5916\u6316\u6398\u5730\u9762\u7684\u56da\u72af\u88ab\u673a\u5668\u4eba\u6293\u4f4f\u5e76\u62ac\u56de\u76d1\u72f1\u5185\u3002\u5927\u5403\u4e00\u60ca\u7684\u8b66\u5bdf\u5c40\u957f\u5141\u8bb8\u673a\u5668\u4eba\u5728\u66f4\u5927\u8303\u56f4\u5185\u5de1\u903b\u3002\u7b2c\u4e8c\u5929\uff0c\u56ed\u957f\u63a5\u5230\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u6253\u6765\u7684\u6124\u6012\u7535\u8bdd\u3002\u770b\u8d77\u6765\u673a\u5668\u4eba\u5207\u65ad\u4e86\u5176\u4e2d\u4e00\u4e2a\u52a8\u7269\u7b3c\u5b50\u7684\u6805\u680f\uff0c\u6293\u4f4f\u4e86\u52a8\u7269\uff0c\u5e76\u628a\u5b83\u9001\u5230\u4e86\u76d1\u72f1\u3002\u914b\u957f\u8d28\u95ee\u673a\u5668\u4eba\u7684\u53d1\u660e\u8005\uff0c\u53d1\u660e\u8005\u95ee\u5b83\u662f\u4ec0\u4e48\u52a8\u7269\u3002\u4e00\u5339\u6591\u9a6c\uff0c\u8b66\u5bdf\u5c40\u957f\u56de\u7b54\u8bf4\u3002\u90a3\u4eba\u62cd\u4e86\u62cd\u4ed6\u7684\u5934\uff0c\u558a\u9053\uff1a\u8bc5\u5492\uff01\u5b83\u88ab\u9ed1\u767d\u6761\u7eb9\u611a\u5f04\u4e86\uff01\u6211\u5c06\u4e0d\u5f97\u4e0d\u91cd\u65b0\u6821\u51c6\uff01\u5c31\u8fd9\u6837\uff0c\u90a3\u4e2a\u4eba\u5f00\u59cb\u91cd\u5199\u673a\u5668\u4eba\u7684\u4ee3\u7801\u3002\u9ed1\u767d\u6761\u7eb9\u8868\u660e\u56da\u72af\u9003\u8dd1\u4e86\uff0c\u9664\u975e\u56da\u72af\u6709\u4e24\u6761\u817f\u4ee5\u4e0a\u3002\u90a3\u5c31\u522b\u7ba1\u5b83\u4e86\u3002\u673a\u5668\u4eba\u88ab\u91cd\u65b0\u90e8\u7f72\u4e86\u66f4\u65b0\u7684\u4ee3\u7801\uff0c\u770b\u8d77\u6765\u51e0\u5929\u6765\u8fd0\u884c\u5f97\u8db3\u591f\u597d\u3002\u7136\u540e\u5728\u5468\u516d\uff0c\u4e00\u7fa4\u8eab\u7a7f\u8db3\u7403\u670d\u7684\u5b69\u5b50\uff0c\u5728\u4ed6\u4eec\u7684\u7236\u6bcd\u7684\u8ddf\u968f\u4e0b\uff0c\u88ad\u51fb\u4e86\u8b66\u5bdf\u5c40\u3002\u5728\u6df7\u4e71\u5e73\u606f\u540e\uff0c\u914b\u957f\u88ab\u544a\u77e5\uff0c\u673a\u5668\u4eba\u5728\u8db3\u7403\u6bd4\u8d5b\u8fdb\u884c\u5230\u4e00\u534a\u65f6\u548c\u88c1\u5224\u4e00\u8d77\u6f5c\u9003\u4e86\u3002\u914b\u957f\u6012\u76ee\u800c\u89c6\uff0c\u5411\u79d1\u5b66\u5bb6\u62a5\u544a\u4e86\u8fd9\u4e00\u70b9\uff0c\u79d1\u5b66\u5bb6\u8fdb\u884c\u4e86\u7b2c\u4e8c\u6b21\u6821\u51c6\u3002\u9ed1\u767d\u6761\u7eb9\u8868\u660e\u56da\u72af\u9003\u8dd1\u4e86\uff0c\u9664\u975e\u56da\u72af\u6709\u4e24\u6761\u4ee5\u4e0a\u7684\u817f\u6216\u9879\u94fe\u4e0a\u6709\u54e8\u5b50\u3002\u5c3d\u7ba1\u8fdb\u884c\u4e86\u7b2c\u4e8c\u6b21\u6821\u51c6\uff0c\u8b66\u5bdf\u5c40\u957f\u8fd8\u662f\u5ba3\u5e03\uff0c\u8be5\u673a\u5668\u4eba\u5c06\u4e0d\u518d\u88ab\u5141\u8bb8\u5728\u4ed6\u6240\u5728\u7684\u57ce\u9547\u6d3b\u52a8\u3002\u7136\u800c\uff0c\u673a\u5668\u4eba\u7684\u6d88\u606f\u5df2\u7ecf\u4f20\u5f00\uff0c\u6765\u81ea\u8bb8\u591a\u5927\u57ce\u5e02\u7684\u8bf7\u6c42\u8702\u62e5\u800c\u81f3\u3002\u8fd9\u4f4d\u53d1\u660e\u5bb6\u53c8\u5236\u9020\u4e86\u51e0\u5341\u4e2a\u673a\u5668\u4eba\uff0c\u5e76\u5c06\u5b83\u4eec\u8fd0\u5f80\u5168\u56fd\u5404\u5730\u6025\u5207\u7684\u8b66\u5bdf\u5c40\u3002\u6bcf\u6b21\u673a\u5668\u4eba\u6293\u5230\u4e0d\u662f\u9003\u72af\u7684\u4e1c\u897f\u65f6\uff0c\u90fd\u4f1a\u54a8\u8be2\u79d1\u5b66\u5bb6\uff0c\u5e76\u5bf9\u673a\u5668\u4eba\u8fdb\u884c\u91cd\u65b0\u6821\u51c6\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u53d1\u660e\u8005\u53ea\u6709\u4e00\u4e2a\u4eba\uff0c\u4ed6\u6ca1\u6709\u65f6\u95f4\u6216\u8d44\u6e90\u6765\u91cd\u65b0\u6821\u51c6\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u6bcf\u5f53\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\u51fa\u4e86\u95ee\u9898\u3002\u9999\u683c\u91cc\u62c9\u7684\u673a\u5668\u4eba\u88ab\u91cd\u65b0\u6821\u51c6\u4e3a\u4e0d\u6293\u53d6\u5728\u5bd2\u51b7\u51ac\u591c\u5de5\u4f5c\u7684\u6398\u5893\u4eba\uff0c\u540c\u65f6\u6234\u7740\u6ed1\u96ea\u9762\u7f69\uff1b\u4e16\u5916\u6843\u6e90\u7684\u673a\u5668\u4eba\u88ab\u91cd\u65b0\u6821\u51c6\u4e3a\u4e0d\u6293\u53d6\u64ad\u653e\u8d8a\u72f1\u7535\u5f71\u7684\u9ed1\u767d\u7535\u89c6\u673a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u4f46\u4e16\u5916\u6843\u6e90\u7684\u673a\u5668\u4eba\u4ecd\u7136\u4f1a\u6293\u4f4f\u6234\u7740\u6ed1\u96ea\u9762\u5177\u7684\u6398\u5893\u4eba(\u4e8b\u5b9e\u8bc1\u660e\uff0c\u7531\u4e8e\u4e16\u5916\u6843\u6e90\u6c14\u5019\u53d8\u6696\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u5e38\u89c1)\uff0c\u800c\u9999\u683c\u91cc\u62c9\u7684\u673a\u5668\u4eba\u4ecd\u7136\u662f\u65e7\u7535\u89c6\u7684\u5a01\u80c1(\u65e7\u7535\u89c6\u673a\u5f88\u5c11\uff0c\u9999\u683c\u91cc\u62c9\u7684\u4eba\u5e73\u5747\u6bd4\u4e16\u5916\u6843\u6e90\u7684\u4eba\u66f4\u5bcc\u6709)\u3002\u6240\u4ee5\uff0c\u51e0\u5e74\u540e\uff0c\u6293\u6355\u7f6a\u72af\u7684\u673a\u5668\u4eba\u5728\u5927\u591a\u6570\u5927\u57ce\u5e02\u90fd\u6709\u4e0d\u540c\u7684\u7248\u672c\u3002\u5728\u4e00\u4e9b\u5730\u65b9\uff0c\u806a\u660e\u7684\u7f6a\u72af\u53ef\u4ee5\u901a\u8fc7\u5728\u8116\u5b50\u4e0a\u7cfb\u4e0a\u4e00\u4e2a\u54e8\u5b50\u6765\u907f\u514d\u88ab\u6355\u3002\u5728\u53e6\u4e00\u4e9b\u5730\u65b9\uff0c\u4eba\u4eec\u6700\u597d\u4e0d\u8981\u5728\u67d0\u4e9b\u519c\u6751\u5730\u533a\u7a7f\u6a59\u8272\u7684\u8863\u670d\uff0c\u65e0\u8bba\u90a3\u5929\u79bb\u4e30\u6536\u8282\u6709\u591a\u8fd1\uff0c\u9664\u975e\u4f60\u4e5f\u6d82\u4e86\u5357\u74dc\u738b\u4f20\u7edf\u7684\u9ed1\u8272\u4e09\u89d2\u5f62\u773c\u5986\u3002\u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u592a\u75af\u72c2\u4e86\uff01\u4f46\u4e5f\u6709\u4eba\u8ba4\u4e3a\uff0c\u4ece\u5404\u65b9\u9762\u8003\u8651\uff0c\u673a\u5668\u4eba\u5229\u5927\u4e8e\u5f0a\uff0c\u6240\u4ee5\u5728\u4e00\u4e9b\u5730\u65b9\u4f7f\u7528\u673a\u5668\u4eba\uff0c\u800c\u5728\u53e6\u4e00\u4e9b\u5730\u65b9\u5219\u907f\u5f00\u5b83\u4eec\u3002\u7ed3\u675f\u4e86\u3002", "note_en": "Once upon a time, a man with a dirty lab coat and long, uncombed hair  showed up at the town police station, demanding to see the chief of  police. &#34;I&#39;ve done it!&#34; he exclaimed. &#34;I&#39;ve built the perfect  criminal-catching robot!&#34;    The police chief was skeptical, but decided that it might be worth  the time to see what the man had invented. Also, he secretly thought,  it might be a somewhat unwise move to completely alienate the mad  scientist and his army of hunter robots.    So, the man explained to the police chief how his invention could tell  the difference between a criminal and law-abiding citizen using a  series of heuristics. &#34;It&#39;s especially good at spotting recently  escaped prisoners!&#34; he said. &#34;Guaranteed non-lethal restraints!&#34;    Frowning and increasingly skeptical, the police chief nevertheless  allowed the man to demonstrate one robot for a week. They decided that  the robot should patrol around the jail. Sure enough, there was a  jailbreak a few days later, and an inmate digging up through the  ground outside of the prison facility was grabbed by the robot and  carried back inside the prison.    The surprised police chief allowed the robot to patrol a wider area.  The next day, the chief received an angry call from the zookeeper.  It seems the robot had cut through the bars of one of the animal cages,  grabbed the animal, and delivered it to the prison.    The chief confronted the robot&#39;s inventor, who asked what animal it  was. &#34;A zebra,&#34; replied the police chief. The man slapped his head and  exclaimed, &#34;Curses! It was fooled by the black and white stripes!  I shall have to recalibrate!&#34; And so the man set about rewriting the  robot&#39;s code. Black and white stripes would indicate an escaped  inmate UNLESS the inmate had more than two legs. Then it should be  left alone.    The robot was redeployed with the updated code, and seemed to be  operating well enough for a few days. Then on Saturday, a mob of  children in soccer clothing, followed by their parents, descended  on the police station. After the chaos subsided, the chief was told  that the robot had absconded with the referee right in the middle of  a soccer game.    Scowling, the chief reported this to the scientist, who performed a  second calibration. Black and white stripes would indicate an escaped  inmate UNLESS the inmate had more than two legs OR had a whistle on  a necklace.    Despite the second calibration, the police chief declared that the robot  would no longer be allowed to operate in his town. However, the news  of the robot had spread, and requests from many larger cities were  pouring in. The inventor made dozens more robots, and shipped them off  to eager police stations around the nation. Every time a robot grabbed  something that wasn&#39;t an escaped inmate, the scientist was consulted,  and the robot was recalibrated.    Unfortunately, the inventor was just one man, and he didn&#39;t have the  time or the resources to recalibrate EVERY robot whenever one of them  went awry. The robot in Shangri-La was recalibrated not to grab a  grave-digger working on a cold winter night while wearing a ski mask,  and the robot in Xanadu was recalibrated not to capture a black and  white television set that showed a movie about a prison break, and so  on. But the robot in Xanadu would still grab grave-diggers with ski  masks (which it turns out was not common due to Xanadu&#39;s warmer climate),  and the robot in Shangri-La was still a menace to old televisions (of  which there were very few, the people of Shangri-La being on the average  more wealthy than those of Xanadu).    So, after a few years, there were different revisions of the  criminal-catching robot in most of the major cities. In some places,  a clever criminal could avoid capture by wearing a whistle on a string  around the neck. In others, one would be well-advised not to wear orange  clothing in certain rural areas, no matter how close to the Harvest  Festival it was, unless one also wore the traditional black triangular  eye-paint of the Pumpkin King.    Many people thought, &#34;This is lunacy!&#34; But others thought the robots  did more good than harm, all things considered, and so in some places  the robots are used, while in other places they are shunned.    The end.", "posttime": "2020-10-26 11:45:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9884\u671f,set,\u673a\u5668\u4eba", "title": "\u4e3a\u4ec0\u4e48set-e(\u6216set-o errexit\u6216trap err)\u6ca1\u6709\u6267\u884c\u6211\u9884\u671f\u7684\u64cd\u4f5c\uff1f", "title_en": "Why doesn't set -e (or set -o errexit, or trap ERR) do what I expected?", "transed": 1, "url": "http://mywiki.wooledge.org/BashFAQ/105", "via": "", "real_tags": ["\u9884\u671f", "set", "\u673a\u5668\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031186, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u6807\u5065\u5eb7\u535a\u5ba2\u653f\u5e9c\u57281948\u5e74\u7981\u6b62\u5728\u8f6f\u996e\u6599\u4e2d\u4f7f\u7528\u67e0\u6aac\u9178\u9502\uff0c\u5e76\u5c06\u5176\u4ece7-up\u4e2d\u5220\u9664\u3002\n\u67e0\u6aac\u9178\u9502\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u7528\u4e8e\u8e81\u72c2\u72b6\u6001\u548c\u53cc\u76f8\u60c5\u611f\u969c\u788d\u7684\u7cbe\u795e\u6cbb\u7597\uff0c\u5e76\u5728\u5f53\u65f6\u88ab\u8ba4\u4e3a\u662f\u6cbb\u7597\u5bbf\u9189\u7684\u836f\u7269\u30021871\u5e74\uff0c\u7ebd\u7ea6\u8d1d\u5c14\u7ef4\u5c24\u533b\u9662\u533b\u5b66\u9662\u7cbe\u795e\u548c\u795e\u7ecf\u7cfb\u7edf\u75be\u75c5\u6559\u6388\u5a01\u5ec9\u00b7\u54c8\u8499\u5fb7(William Hammond)\u6210\u4e3a\u7b2c\u4e00\u4f4d\u4e3a\u8e81\u72c2\u75c7\u5f00\u9502\u5904\u65b9\u7684\u5185\u79d1\u533b\u751f\u30021894\u5e74\uff0c\u4e39\u9ea6\u7cbe\u795e\u75c5\u5b66\u5bb6\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u5170\u683c(Frederk Lange)\u660e\u786e\u63d0\u5230\u9502\u5728\u6cbb\u7597\u5fe7\u90c1\u75c7\u65b9\u9762\u7684\u4f5c\u7528\u3002\n\u5c31\u50cf\u53ef\u53e3\u53ef\u4e50\u4e2d\u7684\u53ef\u5361\u56e0\u4e00\u6837\uff0c\u9502\u4f5c\u4e3a19\u4e16\u7eaa\u672b\u548c20\u4e16\u7eaa\u521d\u6d41\u884c\u7684\u4e00\u4e9b\u4e13\u5229\u836f\u7269\u4e4b\u4e00\u88ab\u5e7f\u6cdb\u9500\u552e\uff0c\u4e5f\u662f\u4e00\u79cd\u8336\u70b9\u996e\u6599\u7684\u836f\u7528\u6210\u5206\u3002\u67e5\u5c14\u65af\u00b7\u83b1\u73c0\u00b7\u683c\u91cc\u683c(Charles Leiper Grigg)\u5728\u5723\u8def\u6613\u65af\u521b\u529e\u4e86\u4ed6\u7684\u516c\u53f8\u8c6a\u8fea\u516c\u53f8(Howdy Corporation)\uff0c\u4ed6\u57281920\u5e74\u53d1\u660e\u4e86\u4e00\u79cd\u67e0\u6aac\u9178\u6a59\u8f6f\u996e\u6599\u7684\u914d\u65b9\u3002\u8be5\u4ea7\u54c1\u6700\u521d\u540d\u4e3aBib-Label Lithiated Lemon-Lime\u82cf\u6253\uff0c\u57281929\u5e74\u534e\u5c14\u8857\u5d29\u76d8\u524d\u4e24\u5468\u63a8\u51fa\u3002\u5b83\u542b\u6709\u60c5\u7eea\u7a33\u5b9a\u5242\u67e0\u6aac\u9178\u9502\uff0c\u662f19\u4e16\u7eaa\u672b\u548c20\u4e16\u7eaa\u521d\u6d41\u884c\u7684\u4e00\u4e9b\u4e13\u5229\u836f\u7269\u4ea7\u54c1\u4e4b\u4e00\u3002\u5b83\u7684\u540d\u5b57\u5f88\u5feb\u5c31\u6539\u6210\u4e867up\u30021948\u5e74\uff0c\u6240\u6709\u7f8e\u56fd\u996e\u6599\u5236\u9020\u5546\u90fd\u88ab\u8feb\u79fb\u9664\u9502\u3002\u5c3d\u7ba1\u67091948\u5e74\u7684\u7981\u4ee4\uff0c1950\u5e74\u7684\u201c\u4f69\u6069\u65af\u7ef4\u5c14\u7535\u8baf\u62a5\u201d(Painesville Telegraph)\u4ecd\u7136\u520a\u767b\u4e86\u4e00\u6b3e\u542b\u9502\u67e0\u6aac\u996e\u6599\u7684\u5e7f\u544a\u3002\n\u9502\u6700\u521d\u7528\u4e8e\u6cbb\u7597\u75db\u98ce\u662f\u572819\u4e16\u7eaa\uff0c\u5f53\u65f6\u79d1\u5b66\u5bb6\u53d1\u73b0\uff0c\u81f3\u5c11\u5728\u5b9e\u9a8c\u5ba4\u91cc\uff0c\u9502\u53ef\u4ee5\u6eb6\u89e3\u4ece\u80be\u810f\u4e2d\u5206\u79bb\u51fa\u6765\u7684\u5c3f\u9178\u6676\u4f53\u3002\u7136\u800c\uff0c\u5728\u4f53\u5185\u6eb6\u89e3\u5c3f\u9178\u76d0\u6240\u9700\u7684\u9502\u6c34\u5e73\u662f\u6709\u6bd2\u7684\u3002\u7531\u4e8e\u6d41\u884c\u7684\u7406\u8bba\u5c06\u8fc7\u91cf\u7684\u5c3f\u9178\u4e0e\u4e00\u7cfb\u5217\u75be\u75c5\u8054\u7cfb\u8d77\u6765\uff0c\u5305\u62ec\u6291\u90c1\u548c\u8e81\u72c2\u969c\u788d\uff0c\u4e39\u9ea6\u7684\u5361\u5c14\u00b7\u5170\u683c\u548c\u7ebd\u7ea6\u5e02\u7684\u5a01\u5ec9\u00b7\u4e9a\u5386\u5c71\u5927\u00b7\u54c8\u8499\u5fb7\u4ece19\u4e16\u7eaa70\u5e74\u4ee3\u5f00\u59cb\u4f7f\u7528\u9502\u6cbb\u7597\u8e81\u72c2\u3002\n\u5230\u4e8620\u4e16\u7eaa\u4e4b\u4ea4\uff0c\u968f\u7740\u5173\u4e8e\u60c5\u7eea\u969c\u788d\u7684\u7406\u8bba\u7684\u53d1\u5c55\uff0c\u6240\u8c13\u7684\u8111\u75db\u98ce\u4f5c\u4e3a\u4e00\u4e2a\u533b\u7597\u5b9e\u4f53\u6d88\u5931\u4e86\uff0c\u9502\u5728\u7cbe\u795e\u75c5\u5b66\u4e2d\u7684\u4f7f\u7528\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u653e\u5f03\u4e86\u3002\u7136\u800c\uff0c\u4ecd\u6709\u4e00\u4e9b\u9502\u5236\u5242\u7528\u4e8e\u63a7\u5236\u80be\u7ed3\u77f3\u548c\u5c3f\u9178\u7d20\u8d28\u3002\u7531\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u77e5\u8bc6\u8868\u660e\u8fc7\u91cf\u7684\u94a0\u6444\u5165\u5728\u9ad8\u8840\u538b\u548c\u5fc3\u810f\u75c5\u4e2d\u7684\u4f5c\u7528\uff0c\u9502\u76d0\u88ab\u5f00\u7ed9\u60a3\u8005\u4f5c\u4e3a\u996e\u98df\u98df\u76d0(\u6c2f\u5316\u94a0)\u7684\u66ff\u4ee3\u54c1\u3002\u5728\u53d1\u8868\u4e86\u8be6\u7ec6\u63cf\u8ff0\u526f\u4f5c\u7528\u548c\u6b7b\u4ea1\u7684\u62a5\u544a\u540e\uff0c\u8fd9\u79cd\u505a\u6cd5\u548c\u9502\u672c\u8eab\u7684\u9500\u552e\u57281949\u5e74\u90fd\u88ab\u7981\u6b62\u3002\n1949\u5e74\uff0c\u6fb3\u5927\u5229\u4e9a\u7cbe\u795e\u75c5\u5b66\u5bb6\u7ea6\u7ff0\u00b7\u51ef\u5fb7(John Cade)\u91cd\u65b0\u53d1\u73b0\u4e86\u9502\u76d0\u5728\u6cbb\u7597\u8e81\u72c2\u65b9\u9762\u7684\u4f5c\u7528\u3002\u51ef\u5fb7\u6b63\u5728\u7ed9\u556e\u9f7f\u52a8\u7269\u6ce8\u5c04\u4ece\u7cbe\u795e\u5206\u88c2\u75c7\u60a3\u8005\u8eab\u4e0a\u63d0\u53d6\u7684\u5c3f\u6db2\uff0c\u8bd5\u56fe\u5206\u79bb\u51fa\u4e00\u79cd\u53ef\u80fd\u5bfc\u81f4\u7cbe\u795e\u75c7\u72b6\u7684\u4ee3\u8c22\u5316\u5408\u7269\u3002\u7531\u4e8e\u5df2\u77e5\u75db\u98ce\u4e2d\u7684\u5c3f\u9178\u5177\u6709\u7cbe\u795e\u6d3b\u6027(\u795e\u7ecf\u5143\u4e0a\u7684\u817a\u82f7\u53d7\u4f53\u53d7\u5c3f\u9178\u523a\u6fc0\uff0c\u5496\u5561\u56e0\u5bf9\u5176\u6709\u963b\u6ede\u4f5c\u7528)\uff0c\u51ef\u5fb7\u9700\u8981\u53ef\u6eb6\u6027\u5c3f\u9178\u76d0\u4f5c\u4e3a\u5bf9\u7167\u3002\u4ed6\u4f7f\u7528\u4e86\u5df2\u77e5\u7684\u6700\u6613\u6eb6\u7684\u5c3f\u9178\u76d0\u5316\u5408\u7269\u5c3f\u9178\u9502\uff0c\u5e76\u89c2\u5bdf\u5230\u5b83\u4f7f\u556e\u9f7f\u52a8\u7269\u53d8\u5f97\u5e73\u9759\u3002\u51ef\u5fb7\u5c06\u8fd9\u79cd\u5f71\u54cd\u8ffd\u6eaf\u5230\u9502\u79bb\u5b50\u672c\u8eab\uff0c\u5728\u81ea\u5df1\u6444\u53d6\u9502\u4ee5\u786e\u4fdd\u5176\u5bf9\u4eba\u4f53\u7684\u5b89\u5168\u6027\u540e\uff0c\u4ed6\u5efa\u8bae\u4f7f\u7528\u9502\u76d0\u4f5c\u4e3a\u9547\u9759\u5242\u3002\u4ed6\u5f88\u5feb\u5c31\u6210\u529f\u5730\u63a7\u5236\u4e86\u4e0e\u4ed6\u4eec\u4e00\u8d77\u957f\u671f\u4f4f\u9662\u7684\u60a3\u8005\u7684\u8e81\u72c2\u75c7\u3002\u8fd9\u662f\u9996\u6279\u6210\u529f\u5e94\u7528\u4e8e\u6cbb\u7597\u7cbe\u795e\u75be\u75c5\u7684\u836f\u7269\u4e4b\u4e00\uff0c\u4e5f\u4e3a\u672a\u6765\u51e0\u5341\u5e74\u5f00\u53d1\u6cbb\u7597\u5176\u4ed6\u7cbe\u795e\u95ee\u9898\u7684\u836f\u7269\u6253\u5f00\u4e86\u5927\u95e8\u3002\n\u4e16\u754c\u5176\u4ed6\u5730\u533a\u91c7\u7528\u8fd9\u79cd\u6cbb\u7597\u7684\u901f\u5ea6\u5f88\u6162\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u5373\u4f7f\u662f\u76f8\u5bf9\u8f83\u5c0f\u7684\u8fc7\u91cf\u4e5f\u4f1a\u5bfc\u81f4\u6b7b\u4ea1\uff0c\u5305\u62ec\u636e\u62a5\u9053\u4f7f\u7528\u6c2f\u5316\u9502\u4f5c\u4e3a\u98df\u76d0\u66ff\u4ee3\u54c1\u9020\u6210\u7684\u6b7b\u4ea1\u3002\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u901a\u8fc7\u6b27\u6d32\u7684\u4e39\u9ea6\u7684\u83ab\u6839\u65af\u00b7\u8212\u5c14\u548c\u4fdd\u7f57\u00b7\u5df4\u65af\u7279\u9c81\u666e\uff0c\u4ee5\u53ca\u7f8e\u56fd\u7684\u585e\u7f2a\u5c14\u00b7\u683c\u5c14\u68ee\u548c\u7537\u7235\u8096\u666e\u68ee\u7684\u7814\u7a76\u548c\u5176\u4ed6\u52aa\u529b\uff0c\u8fd9\u79cd\u963b\u529b\u88ab\u6162\u6162\u514b\u670d\u4e86\u30021970\u5e74\uff0c\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u6279\u51c6\u4e86\u9502\u5728\u8e81\u72c2\u75c7\u4e2d\u7684\u5e94\u7528\u30021974\u5e74\uff0c\u8fd9\u4e00\u5e94\u7528\u88ab\u6269\u5927\u5230\u7528\u4f5c\u8e81\u90c1\u75c7\u7684\u9884\u9632\u6027\u836f\u7269\u3002\n1966\u5e74\uff0c\u7f57\u7eb3\u5fb7\u00b7R\u00b7\u83f2\u592b(Ronald R.Fieve)\u5728\u5317\u7f8e\u5f00\u8bbe\u4e86\u7b2c\u4e00\u5bb6\u9502\u8bca\u6240\uff0c\u4ed6\u901a\u8fc7\u5728\u5168\u56fd\u7535\u89c6\u4e0a\u9732\u9762\u548c\u4ed6\u7684\u7545\u9500\u4e66\u201c\u7a46\u5fb7\u65af\u6e29\u201d(Moodwing)\uff0c\u5e2e\u52a9\u666e\u53ca\u4e86\u9502\u7684\u7cbe\u795e\u7528\u9014\u3002\u6b64\u5916\uff0cFieve\u548cDavid L.Dunner\u63d0\u51fa\u4e86\u57fa\u4e8e\u5bf9\u9502\u65e0\u53cd\u5e94\u7684\u5feb\u901f\u5faa\u73af\u53cc\u76f8\u60c5\u611f\u969c\u788d\u7684\u6982\u5ff5\u3002\n\u9502\u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u897f\u65b9\u6d41\u884c\u6587\u5316\u7684\u4e00\u90e8\u5206\u3002\u201c\u5c11\u5e74\u6d3e\u201d\u3001\u201c\u9884\u611f\u201d\u3001\u201c\u661f\u5c18\u8bb0\u5fc6\u201d\u3001\u201c\u7f8e\u56fd\u7cbe\u795e\u75c5\u201d\u3001\u201c\u82b1\u56ed\u4e4b\u5dde\u201d\u548c\u201c\u672a\u5a5a\u5973\u5b50\u201d\u4e2d\u7684\u4eba\u7269\u90fd\u670d\u7528\u9502\u3002\u5728\u827e\u62c9\u00b7\u83b1\u6587\u7684\u201c\u8fd9\u5b8c\u7f8e\u7684\u4e00\u5929\u201d\u4e2d\uff0c\u5b83\u662f\u9547\u9759\u836f\u7269\u7684\u4e3b\u8981\u6210\u5206\u3002\u5317\u7f8e\u7684\u5929\u72fc\u661fXM\u536b\u661f\u5e7f\u64ad\u7535\u53f0\u6709\u4e00\u4e2a20\u4e16\u7eaa90\u5e74\u4ee3\u7684\u66ff\u4ee3\u6447\u6eda\u7535\u53f0\uff0c\u540d\u4e3aLithium\uff0c\u6709\u51e0\u9996\u6b4c\u63d0\u5230\u4e86\u9502\u4f5c\u4e3a\u60c5\u7eea\u7a33\u5b9a\u5242\u7684\u4f7f\u7528\u3002\u8fd9\u4e9b\u4f5c\u54c1\u5305\u62ec\uff1a\u5357\u975e\u827a\u672f\u5bb6Koos Kombuis\u7684\u201cBalance Met Lithium\u201d\uff0c#34\uff1bLithium&#34\uff1bEvanacy\u7684\u201cLithium&#34\uff1bLithium&#34\uff1bNirvana\uff0c&#34\uff1bLithium and a Lover&34\uff1b\u201d\uff0cSirenia\u7684\u201c\u6c34\u661f\u843d\u4e0b\u201d\u4e13\u8f91\u4e2d\u7684\u201cLithium Sunset&#34\uff1b\u201d\u4ee5\u53caThin White Rope\u7684\u201c#34\uff1bLithium&#34\uff1bBy&#34\uff1bLithium&#34\uff1bLithium&#34\uff1bBy Thin White Rope\uff0c&#34\uff1bLithium&#34\uff1bLithium&#34\uff1bby Thin White Rope\u3002", "note_en": "Target Health Blog      The government banned the use of Lithium citrate in soft drinks in 1948 and it was removed from 7-Up.\n Lithium citrate has been used for many decades for psychiatric treatment of manic states and bipolar disorder and as a supposed cure for hangovers at the time. In 1871, William Hammond, professor of Diseases of the Mind and Nervous System at the Bellevue Hospital Medical College in New York, became the first physician to prescribe lithium for mania. In 1894, Danish psychiatrist Frederik Lange made explicit reference to lithium in the treatment of melancholic depression.\n As with cocaine in Coca-Cola, lithium was widely marketed as one of a number of patent medicine products popular in the late-19th and early-20th centuries, and was the medicinal ingredient of a refreshment beverage. Charles Leiper Grigg, who launched his St. Louis-based company The Howdy Corporation, invented a formula for a lemon-lime soft drink in 1920. The product, originally named &#34;Bib-Label Lithiated Lemon-Lime Soda&#34;, was launched two weeks before the Wall Street Crash of 1929. It contained the mood stabilizer lithium citrate, and was one of a number of patent medicine products popular in the late-19th and early-20th centuries. Its name was soon changed to 7 Up. All American beverage makers were forced to remove lithium in 1948. Despite the 1948 ban, in 1950 the Painesville Telegraph still carried an advertisement for a lithiated lemon beverage.\n Lithium was first used in the 19th century as a treatment for gout after scientists discovered that, at least in the laboratory, lithium could dissolve uric acid crystals isolated from the kidneys. The levels of lithium needed to dissolve urate in the body, however, were toxic. Because of prevalent theories linking excess uric acid to a range of disorders, including depressive and manic disorders, Carl Lange in Denmark and William Alexander Hammond in New York City used lithium to treat mania from the 1870s onwards.\n By the turn of the 20th century, as theory regarding mood disorders evolved and so-called \u0093brain gout\u0093 disappeared as a medical entity, the use of lithium in psychiatry was largely abandoned. However, a number of lithium preparations were still produced for the control of renal calculi and uric acid diathesis. As accumulating knowledge indicated a role for excess sodium intake in hypertension and heart disease, lithium salts were prescribed to patients for use as a replacement for dietary table salt (sodium chloride). This practice and the sale of lithium itself were both banned in 1949, following publication of reports detailing side effects and deaths.\n In 1949, the Australian psychiatrist John Cade rediscovered the usefulness of lithium salts in treating mania. Cade was injecting rodents with urine extracts taken from schizophrenic patients in an attempt to isolate a metabolic compound which might be causing mental symptoms. Since uric acid in gout was known to be psychoactive, (adenosine receptors on neurons are stimulated by it; caffeine blocks them), Cade needed soluble urate for a control. He used lithium urate, already known to be the most soluble urate compound, and observed that it caused the rodents to become tranquil. Cade traced the effect to the lithium ion itself, and after ingesting lithium himself to ensure its safety in humans, he proposed lithium salts as tranquilizers. He soon succeeded in controlling mania in chronically hospitalized patients with them. This was one of the first successful applications of a drug to treat mental illness, and it opened the door for the development of medicines for other mental problems in the next decades.\n The rest of the world was slow to adopt this treatment, largely because of deaths which resulted from even relatively minor overdosing, including those reported from use of lithium chloride as a substitute for table salt. Largely through the research and other efforts of Denmark&#39;s Mogens Schou and Paul Baastrup in Europe, and Samuel Gershon and Baron Shopsin in the U.S., this resistance was slowly overcome. The application of lithium in manic illness was approved by the United States Food and Drug Administration in 1970. In 1974, this application was extended to its use as a preventive agent for manic-depressive illness.\n Ronald R. Fieve, who had opened the first lithium clinic in North America in 1966, helped popularize the psychiatric use of lithium through his national TV appearances and his bestselling book, Moodswing. In addition, Fieve and David L. Dunner developed the concept of \u0093rapid cycling\u0093 bipolar disorder based on non-response to lithium.\n Lithium has now become a part of Western popular culture. Characters in Pi, Premonition, Stardust Memories, American Psycho, Garden State, and An Unmarried Woman all take lithium. It&#39;s the chief constituent of the calming drug in Ira Levin&#39;s dystopian This Perfect Day. Sirius XM Satellite Radio in North America has a 1990s alternative rock station called Lithium, and several songs refer to the use of lithium as a mood stabilizer. These include: &#34;Equilibrium met Lithium&#34; by South African artist Koos Kombuis, &#34;Lithium&#34; by Evanescence, &#34;Lithium&#34; by Nirvana, &#34;Lithium and a Lover&#34; by Sirenia, &#34;Lithium Sunset&#34;, from the album Mercury Falling by Sting, and &#34;Lithium&#34; by Thin White Rope.", "posttime": "2020-10-26 11:24:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u78b3\u9178\u9502,lithium,\u5c3f\u9178", "title": "\u9502 / \u78b3\u9178\u9502 / \u9502\u76d0", "title_en": "Lithium", "transed": 1, "url": "https://www.targethealth.com/post/lithium", "via": "", "real_tags": ["\u78b3\u9178\u9502", "lithium", "\u5c3f\u9178"]}, {"category": "", "categoryclass": "", "imagename": "40becf456d568eb672f89c4d3aea36ca.png", "infoid": 1031185, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u9047\u5230\u7684\u6bcf\u4e2aLISP\u9ed1\u5ba2\uff0c\u5305\u62ec\u6211\u81ea\u5df1\uff0c\u90fd\u8ba4\u4e3aLisp\u4e2d\u7684\u6240\u6709\u62ec\u53f7\u90fd\u4ee4\u4eba\u8ba8\u538c\u548c\u5947\u602a\u3002\u5f53\u7136\uff0c\u4e00\u5f00\u59cb\u662f\u8fd9\u6837\u7684\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u4eec\u90fd\u5f97\u5230\u4e86\u540c\u6837\u7684\u987f\u609f\uff1aLISP\u7684\u529b\u91cf\u5728\u4e8e\u8fd9\u4e9b\u62ec\u53f7\uff01\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8e0f\u4e0a\u4e00\u6bb5\u901a\u5f80\u90a3\u4e2a\u987f\u609f\u7684\u65c5\u7a0b\u3002\n\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u8ba9\u4f60\u753b\u4e1c\u897f\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u6211\u4eec\u7528JavaScript\u7f16\u5199\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u6709\u5982\u4e0b\u51fd\u6570\uff1a\nDraPoint({x\uff1a0\uff0cy\uff1a1}\uff0c&#39\uff1b\u9ec4\u8272&#39\uff1b)draLine({x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#39\uff1b\u84dd\u8272&#39\uff1b)draCircle(point\uff0cRadius\uff0c&#39\uff1b\uff1bred&#39\uff1b)Rotate(Shape\uff0c90)...\u3002\n\u8fd9\u610f\u5473\u7740\u7528\u6237\u5c06\u80fd\u591f\u5411\u60a8\u7684\u5c4f\u5e55\u201c\u53d1\u9001\u201d\u6307\u4ee4\uff0c\u60a8\u5c06\u770b\u5230\u4ed6\u4eec\u7684\u7ed8\u753b\u6829\u6829\u5982\u751f\u3002\n\u597d\u5427\uff0c\u5047\u8bbe\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u7f51\u7edc\u63d2\u5ea7\u8fde\u63a5\u3002\u6211\u4eec\u53ef\u4ee5\u6536\u5230\u6765\u81ea\u7528\u6237\u7684\u6307\u4ee4\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8981\u4f7f\u5176\u5373\u65f6\u5de5\u4f5c\uff0c\u4e00\u79cd\u9009\u62e9\u662f\u5c06\u4ee3\u7801\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8f93\u5165\uff1a\n\u73b0\u5728\uff0c\u7528\u6237\u53ef\u4ee5\u53d1\u9001&#34\uff1bdraLine({x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#39\uff1bred&#39\uff1b)&#34\uff1b\u548cbam\uff1a\u6211\u4eec\u8981\u753b\u4e00\u6761\u7ebf\uff01\n\u4f46\u662f\u2026\u3002\u4f60\u7684\u8718\u86db\u611f\u53ef\u80fd\u5df2\u7ecf\u523a\u75db\u4e86\u3002\u5982\u679c\u7528\u6237\u662f\u6076\u610f\u7684\uff0c\u5e76\u4e14\u8bbe\u6cd5\u5411\u6211\u4eec\u53d1\u9001\u4e86\u5982\u4e0b\u6307\u4ee4\uff0c\u8be5\u600e\u4e48\u529e\uff1a\n\u54e6\u54e6\u2026\u3002\u6211\u4eec\u7684cookie\u4f1a\u88ab\u53d1\u9001\u5230iwill p3wn.com\uff0c\u800c\u6076\u610f\u7528\u6237\u786e\u5b9e\u4f1a\u5bf9\u6211\u4eec\u8fdb\u884c\u653b\u51fb\u3002\u6211\u4eec\u4e0d\u80fd\u7528EVAL\uff0c\u592a\u5371\u9669\u4e86\u3002\n\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u95ee\u9898\u6240\u5728\uff1a\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528eval\uff0c\u4f46\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u6765\u63a5\u6536\u4efb\u610f\u6307\u4ee4\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6307\u4ee4\u8868\u793a\u4e3aJSON\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2aJSON\u6307\u4ee4\u6620\u5c04\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u63a7\u5236\u8fd0\u884c\u4ec0\u4e48\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u53ef\u4ee5\u8868\u793a\u5b83\u7684\u4e00\u79cd\u65b9\u5f0f\uff1a\n{\u8bf4\u660e\uff1a[{functionName\uff1a&#34\uff1bdrawLine&#34\uff1b\uff0cargs\uff1a[{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#34\uff1bBlue&#34\uff1b]}\uff0c]\uff1b}\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u80fd\u4e0d\u80fd\u628a\u8fd9\u91cc\u6e05\u7406\u5e72\u51c0\u3002\u4e0b\u9762\u662f\u6211\u4eec\u7684JSON\uff1a\n{\u8bf4\u660e\uff1a[{functionName\uff1a&#34\uff1bdrawLine&#34\uff1b\uff0cargs\uff1a[{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#34\uff1bBlue&#34\uff1b]}\uff0c]\uff1b}\u3002\n\u56e0\u4e3a\u6bcf\u6761\u6307\u4ee4\u90fd\u6709functionName\u548cargs\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u8be6\u7ec6\u8bf4\u660e\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n{\u8bf4\u660e\uff1a[[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#34\uff1bBlue&#34\uff1b]]\uff0c}\n\u597d\u7684!\u3002\u6211\u4eec\u5c06\u5bf9\u8c61\u66f4\u6539\u4e3a\u652f\u6301\u6570\u7ec4\u3002\u8981\u5904\u7406\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u6761\u89c4\u5219\uff1a\u6307\u4ee4\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u51fd\u6570\u540d\uff0c\u5176\u4f59\u90e8\u5206\u662f\u53c2\u6570\u3002\u5982\u679c\u6211\u4eec\u628a\u5b83\u5199\u4e0b\u6765\uff0c\u6211\u4eec\u7684onMessage\u4f1a\u662f\u8fd9\u6837\u7684\uff1a\nWebSocket.onMessage(data=&gt\uff1b{const fns={drawLine\uff1adrawLine\uff0c...}\uff1bdata.\u3002\u8bf4\u660e.forEach(([fnName\uff0c...\u3002Args])=&gt\uff1bfns\\[fnName\\](...\u3002Args))\uff1b})\u3002\nDrawLine({x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}\uff0c&#39\uff1bBlue&#39\uff1b)//\u4e0e[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]\u76f8\u540c\u3002\n[&#34\uff1bRotate&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]\uff0c90]\u3002\n\u8fd9\u91cc\uff0cRotate\u6307\u4ee4\u6709\u4e00\u4e2a\u672c\u8eab\u5c31\u662f\u6307\u4ee4\u7684\u53c2\u6570\uff01\u76f8\u5f53\u5f3a\u5927\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u6211\u4eec\u53ea\u9700\u7a0d\u5fae\u8c03\u6574\u4ee3\u7801\u5373\u53ef\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c\uff1a\nWebSocket.onMessage(Data=&gt\uff1b{const fns={drawLine\uff1adrawLine\uff0c...}\uff1bconst parseInstruction=(Ins)=&gt\uff1b{if(\uff01Array.isArray(Ins)){//\u8fd9\u5fc5\u987b\u662f\u57fa\u5143\u53c2\u6570\uff0c\u5982{x\uff1a0 y\uff1a0}return ins\uff1b}const[fName\uff0c...\u3002Args]=INS\uff1bfns\\[fName\\](...\u3002Args)\uff1b}\uff1b\u6570\u636e\u3002\u6307\u4ee4.forEach(ParseInstruction)\uff1b})\u3002\n\u4e0d\u9519\uff0c\u6211\u4eec\u5f15\u5165\u4e86parseInstruction\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u5730\u5c06parseInstruction\u5e94\u7528\u4e8e\u53c2\u6570\uff0c\u5e76\u652f\u6301\u5982\u4e0b\u5185\u5bb9\uff1a\n[&#34\uff1bRotate&#34\uff1b\uff0c[&#34\uff1bRotate&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]\uff0c90]]\n{\u8bf4\u660e\uff1a[[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]]\uff0c}\u3002\n\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u540d\u4e3ado\u7684\u7279\u6b8a\u6307\u4ee4\uff0c\u800c\u4e0d\u662f\u9876\u7ea7\u952e\uff0c\u5b83\u8fd0\u884c\u5b83\u7ed9\u51fa\u7684\u6240\u6709\u6307\u4ee4\u3002\nWebSocket.onMessage(\u6570\u636e=&gt\uff1b{const fns={...\u3002\u505a\uff1a(\u2026\u2026\u3002Args)=&gt\uff1bargs[args.length-1]\uff0c}\uff1bconst parseInstruction=(INS)=&gt\uff1b{if(\uff01Array.isArray(Ins)){//\u8fd9\u5fc5\u987b\u662f\u57fa\u5143\u53c2\u6570\uff0c\u5982{x\uff1a0\uff0cy\uff1a0}return ins\uff1b}const[fName\uff0c...\u3002Args]=ins\uff1b\u8fd4\u56defns\\[fName\\](...\u3002Args.map(ParseInstruction)\uff1b}\uff1bparseInstruction(\u6307\u4ee4)\uff1b})\u3002\n\u54e6\uff0c\u54c7\uff0c\u90a3\u592a\u7b80\u5355\u4e86\u3002\u6211\u4eec\u521a\u521a\u5728FNS\u4e2d\u6dfb\u52a0\u4e86DO\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u652f\u6301\u8fd9\u6837\u7684\u6307\u4ee4\uff1a\n[&#34\uff1bDO&#34\uff1b\uff0c[&#34\uff1bDrawPoint&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}]\uff0c[&#34\uff1bRotate&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]\uff0c90]]\uff0c]\uff1b\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u652f\u6301\u5b9a\u4e49\uff0c\u6211\u4eec\u7684\u8fdc\u7a0b\u7528\u6237\u5c31\u53ef\u4ee5\u7f16\u5199\u4e00\u4e9b\u975e\u5e38\u6709\u8868\u73b0\u529b\u7684\u6307\u4ee4\uff01\u8ba9\u6211\u4eec\u5c06\u4ee3\u7801\u8f6c\u6362\u4e3a\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff1a\n[&#34\uff1bdef&#34\uff1b\uff0c&#34\uff1bShape&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]][&#34\uff1bRotate&#34\uff1b\uff0c&#34\uff1bShape&#34\uff1b\uff0c90]\u3002\n\u6ca1\u4ec0\u4e48\u4e0d\u597d\u7684\uff01\u5982\u679c\u6211\u4eec\u80fd\u652f\u6301\u8fd9\u6837\u7684\u6307\u4ee4\uff0c\u6211\u4eec\u5c31\u5927\u529f\u544a\u6210\u4e86\uff01\u4ee5\u4e0b\u662f\u65b9\u6cd5\uff1a\nWebSocket.onMessage(\u6570\u636e=&gt\uff1b{\u5e38\u91cf\u53d8\u91cf={}\uff1b\u5e38\u91cffns={...\u3002Def\uff1a(name\uff0cv)=&gt\uff1b{defs[name]=v\uff1b}\uff0c}\uff1bconst parseInstruction=(Ins)=&gt\uff1b{if(Variables[Ins]){//\u8fd9\u5fc5\u987b\u662f\u67d0\u79cd\u53d8\u91cf\uff0c\u5982&#34\uff1bShape&#34\uff1bReturn Variables[Ins]\uff1b}If(\uff01Array.isArray(Ins)){//\u8fd9\u5fc5\u987b\u662f\u57fa\u5143\u53c2\u6570\uff0c\u5982{x\uff1a0 y\uff1a0}return ins\uff1b}const[fName\uff0c...\u3002Args]=ins\uff1b\u8fd4\u56defns\\[fName\\](...\u3002Args.map(ParseInstruction)\uff1b}\uff1bparseInstruction(\u6307\u4ee4)\uff1b})\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2aVariables\u5bf9\u8c61\uff0c\u5b83\u8ddf\u8e2a\u6211\u4eec\u5b9a\u4e49\u7684\u6bcf\u4e2a\u53d8\u91cf\u3002\u4e00\u4e2a\u7279\u6b8a\u7684def\u51fd\u6570\u4f1a\u66f4\u65b0\u8be5Variables\u5bf9\u8c61\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a\n[&#34\uff1bdo&#34\uff1b\uff0c[&#34\uff1bdef&#34\uff1b\uff0c&#34\uff1bShape&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a1\uff0cy\uff1a1}]]\uff0c[&#34\uff1b\u65cb\u8f6c&#34\uff1b\uff0c&#34\uff1bShape&#34\uff1b\uff0c90]\uff0c]\uff1b\n\u8ba9\u6211\u4eec\u66f4\u4e0a\u4e00\u5c42\u697c\u5427\u3002\u5982\u679c\u6211\u4eec\u8ba9\u6211\u4eec\u7684\u8fdc\u7a0b\u7528\u6237\u5b9a\u4e49\u4ed6\u4eec\u81ea\u5df1\u7684\u529f\u80fd\u4f1a\u600e\u4e48\u6837\uff1f\nConst draTriangle=function(Left\uff0ctop\uff0cright\uff0ccolor){drawLine(Left\uff0ctop\uff0ccolor)\uff1bdraLine(top\uff0cright\uff0ccolor)\uff1bDrawLine(Left\uff0cRight\uff0ccolor)\uff1b}DrawTriangle(...)\u3002\n\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f\u8ba9\u6211\u4eec\u518d\u8ddf\u7740\u6211\u4eec\u7684\u76f4\u89c9\u8d70\u4e00\u904d\u3002\u5982\u679c\u6211\u4eec\u5c06\u5176\u8f6c\u5f55\u4e3a\u6211\u4eec\u7684\u6570\u636e\u8868\u793a\u5f62\u5f0f\uff0c\u5219\u5982\u4e0b\u6240\u793a\uff1a\n[&#34\uff1bdef&#34\uff1b\uff0c&#34\uff1bDrag\u4e09\u89d2\u5f62&#34\uff1b\uff0c[&#34\uff1bFN&#34\uff1b\uff0c[&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1b\uff0c&#34\uff1bRight&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bdrawLine&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b\uff0c&#34\uff1bright&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bdrawLine&#34\uff1b\uff0c&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1bright&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bdraTriangle&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a3\uff0cy\uff1a3}\uff0c{x\uff1a6\uff0cy\uff1a0}\uff0c&#34\uff1b\u84dd\u8272&#34\uff1b]\uff0c\n\u6211\u4eec\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u89e3\u6790\u8fd9\u6761\u6307\u4ee4\uff0c\u7136\u540e\u7830\u7684\u4e00\u58f0\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\uff01\n\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u7684\u5173\u952e\u662f\u6211\u4eec\u7684[#34\uff1bfn&#34\uff1b\uff0c\u2026]\u3002\u6307\u4ee4\u3002\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\u4f1a\u600e\u4e48\u6837\uff1a\nConst parseFnInstruction=(args\uff0cbody\uff0coldVariables)=&gt\uff1b{return(...\u3002\u503c)=&gt\uff1b{const newVariables={...\u3002\u65e7\u7684\u53d8\u91cf\uff0c..\u3002MapArgsWithValues(args\uff0cvalue)\uff0c}\uff1breturn parseInstructions(Body\uff0cnewVariables)\uff1b}\uff1b}\uff1b\n\u5f53\u6211\u4eec\u627e\u5230Fn\u6307\u4ee4\u65f6\uff0c\u6211\u4eec\u8fd0\u884cparseFnInstruction\u3002\u8fd9\u5c06\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684javascript\u51fd\u6570\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u51fd\u6570\u66ff\u6362\u6b64\u5904\u7684DrawTriangle\uff1a\n[&#34\uff1bdraTriangle&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a3\uff0cy\uff1a3}\uff0c{x\uff1a6\uff0cy\uff1a0}\uff0c&#34\uff1b\u84dd\u8272&#34\uff1b]\u3002\n[{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a3\uff0cy\uff1a3}\uff0c{x\uff1a6\uff0cy\uff1a0}\uff0c&#34\uff1b\u84dd\u8272&#34\uff1b]\u3002\n\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Variables\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5305\u62ec\u51fd\u6570\u53c2\u6570\u5230\u8fd9\u4e9b\u65b0\u63d0\u4f9b\u7684\u503c\u7684\u6620\u5c04\uff1a\nConst newVariables={...\u3002\u65e7\u53d8\u91cf\uff0c\u5de6\u4fa7\uff1a{x\uff1a0\uff0cy\uff1a0}\uff0c\u9876\u90e8\uff1a{x\uff1a3\uff0cy\uff1a3}\uff0c\u53f3\u4fa7\uff1a{x\uff1a6\uff0cy\uff1a0}\uff0c\u989c\u8272\uff1a&#34\uff1b\u84dd\u8272&#34\uff1b\uff0c}\u3002\n[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bdrawLine&#34\uff1b\uff0c&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b\uff0c&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDrawLine&#34\uff1b]\uff1b\uff0c&#34\uff1b\u5de6&#34\uff1b\uff0c&#34\uff1b\u53f3&#34\uff1b\uff0c&#34\uff1b\u989c\u8272&#34\uff1b]\uff0c]\uff0c\n\u5e76\u4f7f\u7528\u6211\u4eec\u7684\u65b0\u53d8\u91cf\u901a\u8fc7parseInstructions\u8fd0\u884c\u5b83\u3002\u8fd9\u6837\uff0c\u4f1a\u5c06&#34\uff1bLEFT&#34\uff1b\u4f5c\u4e3a\u53d8\u91cf\u8fdb\u884c\u67e5\u627e\u5e76\u6620\u5c04\u5230{x\uff1a0\uff0cy\uff1a0}\u3002\n\u8ba9\u6211\u4eec\u7ee7\u7eed\u6267\u884c\u6211\u4eec\u7684\u8ba1\u5212\u5427\u3002\u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8ba9parseInstructions\u63a5\u53d7\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\uff1a\nConst parseInstruction=(ins\uff0c\u53d8\u91cf)=&gt\uff1b{...\u3002\u8fd4\u56defn(...\u3002Args.map((Arg)=&gt\uff1bparseInstruction(arg\uff0c\u53d8\u91cf)\uff1b}\uff1bparseInstruction(\u6307\u4ee4\uff0c\u53d8\u91cf)\uff1b\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u4e00\u4e2a\u7279\u6b8a\u68c0\u67e5\uff0c\u4ee5\u68c0\u6d4b\u662f\u5426\u6709\u201cfn\u201d\u6307\u4ee4\uff1a\nConst parseInstruction=(ins\uff0c\u53d8\u91cf)=&gt\uff1b{...\u3002Const[fName\uff0c...\u3002Args]=ins\uff1bif(fName==&#34\uff1bfn&#34\uff1b){return parseFnInstruction...\u3002\u53c2\u6570\uff0c\u53d8\u91cf)\uff1b}...\u3002\u8fd4\u56defn(...\u3002Args.map((Arg)=&gt\uff1bparseInstruction(arg\uff0c\u53d8\u91cf)\uff1b}\uff1bparseInstruction(\u6307\u4ee4\uff0c\u53d8\u91cf)\uff1b\nConst mapArgsWithValues=(args\uff0cValues)=&gt\uff1b{return args.duce((res\uff0ck\uff0cidx)=&gt\uff1b{res[k]=values[idx]\uff1breturn res\uff1b}\uff0c{})\uff1b}const parseFnInstructions=(args\uff0cbody\uff0coldVariables)=&gt\uff1b{return(...\u3002\u503c)=&gt\uff1b{const newVariables={...\u3002\u65e7\u7684\u53d8\u91cf\uff0c..\u3002MapArgsWithValues(args\uff0cvalue)}return parseInstructions(Body\uff0cnewVariables)\uff1b}\uff1b}\uff1b\n\u5b83\u5b8c\u5168\u6309\u7167\u6211\u4eec\u8bf4\u7684\u90a3\u6837\u5de5\u4f5c\u3002\u6211\u4eec\u8fd4\u56de\u4e00\u4e2a\u65b0\u51fd\u6570\u3002\u5f53\u5b83\u8fd0\u884c\u65f6\uff0c\u5b83\uff1a\nConst parseInstruction=(ins\uff0c\u53d8\u91cf)=&gt\uff1b{...\u3002Const[fName\uff0c...\u3002Args]=ins\uff1bif(fName==&#34\uff1bfn&#34\uff1b){return makeFn(...\u3002Args\uff0cVariables)\uff1b}const fn=fns[fName]||\u53d8\u91cf[fName]\uff1b\u8fd4\u56defn(...\u3002Args.map((Arg)=&gt\uff1bparseInstruction(arg\uff0cVariables)\uff1b\n\u8fd9\u91cc\uff0c\u7531\u4e8efn\u73b0\u5728\u65e2\u53ef\u4ee5\u6765\u81eafn\uff0c\u4e5f\u53ef\u4ee5\u6765\u81ea\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u540c\u65f6\u68c0\u67e5\u4e24\u8005\u3002\u628a\u6240\u6709\u8fd9\u4e9b\u653e\u5728\u4e00\u8d77\uff0c\u5b83\u5c31\u4f1a\u8d77\u4f5c\u7528\uff01\nWebSocket.onMessage(Data=&gt\uff1b{const Variables={}\uff1bconst fns={drawLine\uff1aDrawLine\uff0cDrawPoint\uff1aDrawPoint\uff0cRotate\uff1aRotate\uff0cDo\uff1a(...\u3002Args)=&gt\uff1bargs[args.length-1]\uff0cdef\uff1a(name\uff0cv)=&gt\uff1b{\u53d8\u91cf[name]=v\uff1b}\uff0c}\uff1bconst mapArgsWithValues=(args\uff0cvalue)=&gt\uff1b{return args.duce((res\uff0ck\uff0cidx)=&gt\uff1b{res[k]=values[idx]\uff1breturn res\uff1b}\uff0c{})\uff1b}\uff1bConst parseFnInstruction=(args\uff0cbody\uff0coldVariables)=&gt\uff1b{return(...\u3002\u503c)=&gt\uff1b{const newVariables={...\u3002\u65e7\u7684\u53d8\u91cf\uff0c..\u3002MapArgsWithValues(args\uff0cValues)\uff0c}\uff1breturn parseInstructions(body\uff0cnewVariables)\uff1b}\uff1b}\uff1bconst parseInstruction=(ins\uff0cVariables)=&gt\uff1b{if(Variables[Ins]){//\u8fd9\u5fc5\u987b\u662f\u67d0\u79cd\u53d8\u91cf\u8fd4\u56de\u53d8\u91cf[Ins]\uff1b}if(\uff01Array.isArray(Ins)){//\u8fd9\u5fc5\u987b\u662f\u57fa\u5143\u53c2\u6570\uff0c\u5982{x\uff1a0 y\uff1a0}return ins\uff1b}const[fName\uff0c...\u3002Args]=ins\uff1bif(fName==&#34\uff1bfn&#34\uff1b){return parseFnInstruction...\u3002Args\uff0cVariables)\uff1b}const fn=fns[fName]||\u53d8\u91cf[fName]\uff1b\u8fd4\u56defn(...\u3002Args.map((Arg)=&gt\uff1bparseInstruction(arg\uff0c\u53d8\u91cf)\uff1b}\uff1bparseInstruction(\u6307\u4ee4\uff0c\u53d8\u91cf)\uff1b})\u3002\n[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bdef&#34\uff1b\uff0c&#34\uff1bdraTriangle&#34\uff1b\uff0c[&#34\uff1bFN&#34\uff1b\uff0c[&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b\uff0c&#34\uff1bRight&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1b\u5de6\u4fa7&#34\uff1b\uff0c&#34\uff1b\u9876\u90e8&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1b\u9876\u90e8&#34\uff1b\uff0c&#34\uff1b\u53f3\u4fa7&#34\uff1b\uff0c&#34\uff1b\u989c\u8272&#34\uff1b]\uff0c[&#34\uff1bdrawLine&#34\uff1b\uff0c&#34\uff1b\u5de6\u4fa7&#34\uff1b\uff0c&#34\uff1b\u53f3\u4fa7&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bdrawTriangle&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a3\uff0cy\uff1a3}\uff0c{x\uff1a6\uff0cy\uff1a0}\uff0c&#34\uff1b\u84dd\u8272&#34\uff1b]\uff0c[&#34\uff1bdrawTriangle&#34\uff1b\uff0c{x\uff1a6\uff0cy\uff1a6}\uff0c{x\uff1a10\uff0cy\uff1a10}\uff0c{x\uff1a6\uff0cy\uff1a16}\uff0c&#34\uff1b\u7d2b\u8272&#34\uff1b]\uff0c])\u3002\n\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\uff0c\u751a\u81f3\u53ef\u4ee5\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6211\u4eec\u521a\u521a\u521b\u5efa\u4e86\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff01\n\u6211\u4eec\u751a\u81f3\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u65b0\u7684\u6570\u7ec4\u8bed\u8a00\u6bd4JavaScript\u672c\u8eab\u66f4\u6709\u4f18\u52bf\uff01\n\u5728JavaScript\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199const x=foo\u6765\u5b9a\u4e49\u53d8\u91cf\u3002\u5047\u8bbe\u60a8\u5e0c\u671b\u5c06const\u201c\u91cd\u5199\u201d\u4e3ac\u3002\u60a8\u4e0d\u80fd\u8fd9\u6837\u505a\uff0c\u56e0\u4e3aconst x=foo\u662fJavaScript\u4e2d\u7684\u7279\u6b8a\u8bed\u6cd5\u3002\u4f60\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\n\u4f46\u662f\uff0c\u5728\u6211\u4eec\u7684\u6570\u7ec4\u8bed\u8a00\u4e2d\uff0c\u6839\u672c\u6ca1\u6709\u8bed\u6cd5\uff01\u6240\u6709\u4e1c\u897f\u90fd\u53ea\u662f\u6570\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7f16\u5199\u4e00\u4e9b\u7279\u6b8a\u7684c\u6307\u4ee4\uff0c\u5176\u5de5\u4f5c\u65b9\u5f0f\u4e0edef\u7c7b\u4f3c\u3002\n\u5982\u679c\u6211\u4eec\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5c31\u597d\u50cf\u5728Javascript\u4e2d\u6211\u4eec\u662f\u5ba2\u4eba\uff0c\u6211\u4eec\u9700\u8981\u9075\u5faa\u8bed\u8a00\u8bbe\u8ba1\u8005\u7684\u89c4\u5219\u3002\u4f46\u5728\u6211\u4eec\u7684\u6570\u7ec4\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u662f\u201c\u5171\u540c\u6240\u6709\u8005\u201d\u3002\u8bed\u8a00\u8bbe\u8ba1\u8005\u7f16\u5199\u7684\u201c\u5185\u7f6e\u201d\u5185\u5bb9(\u201cdef\u201d\u3001\u201cfn\u201d)\u548c\u6211\u4eec\u7f16\u5199\u7684\u5185\u5bb9\u6ca1\u6709\u592a\u5927\u533a\u522b\uff01(\u201cDrawing Triangle\u201d)\u3002\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u66f4\u54cd\u4eae\u7684\u80dc\u5229\u3002\u5982\u679c\u6211\u4eec\u7684\u4ee3\u7801\u53ea\u662f\u4e00\u5806\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4ee3\u7801\u505a\u4e00\u4e9b\u64cd\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u751f\u6210\u4ee3\u7801\u7684\u4ee3\u7801\uff01\n\u8fd9\u662f\u5f88\u96be\u505a\u5230\u7684\u3002\u6211\u4eec\u9700\u8981\u50cfbabel\u8fd9\u6837\u7684\u4e1c\u897f\u6765\u89e3\u6790\u6211\u4eec\u7684\u6587\u4ef6\uff0c\u5e76\u5728AST\u4e4b\u4e0a\u5de5\u4f5c\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u5b89\u5168\u5730\u91cd\u5199\u4ee3\u7801\u3002\n\u4f46\u662f\u5728\u6211\u4eec\u7684\u6570\u7ec4\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u53ea\u662f\u6570\u7ec4\uff01\u5b83\u5f88\u5bb9\u6613\u91cd\u5199\uff0c\u9664\u975e\uff1a\n\u5c06\u4ee3\u7801\u8868\u793a\u4e3a\u6570\u636e\u4e0d\u4ec5\u4ec5\u5141\u8bb8\u60a8\u8f7b\u677e\u5730\u64cd\u4f5c\u4ee3\u7801\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u7684\u7f16\u8f91\u5668\u4e5f\u8fd9\u6837\u505a\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u6b63\u5728\u7f16\u8f91\u6b64\u4ee3\u7801\uff1a\n\u5982\u679c\u60a8\u662f\u4e86\u89e3\u8fd9\u4e9b\u6570\u7ec4\u7684\u7f16\u8f91\uff0c\u60a8\u53ef\u4ee5\u544a\u8bc9\u5b83\uff1a\u5411\u53f3\u201c\u5c55\u5f00\u201d\u6b64\u533a\u57df\uff1a\n\u7a81\u7136\u4e4b\u95f4\uff0c\u60a8\u7f16\u8f91\u7684\u4e0d\u662f\u5b57\u7b26\uff0c\u800c\u662f\u4ee3\u7801\u7684\u7ed3\u6784\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ed3\u6784\u5316\u7f16\u8f912\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\u4ee5\u96d5\u523b\u5bb6\u7684\u901f\u5ea6\u79fb\u52a8\uff0c\u8fd9\u4e5f\u662f\u5f53\u4f60\u7684\u4ee3\u7801\u662f\u6570\u636e\u65f6\u4f60\u5c06\u83b7\u5f97\u7684\u4f17\u591a\u80dc\u5229\u4e4b\u4e00\u3002\n\u55ef\uff0c\u60a8\u78b0\u5de7\u53d1\u73b0\u7684\u8fd9\u79cd\u6570\u7ec4\u8bed\u8a00\u662f\u2026\u3002\u662fLisp\u7684\u4e00\u79cd\u5b9e\u73b0\u4e0d\u4f73\u7684\u65b9\u8a00\uff01\n[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bdef&#34\uff1b\uff0c&#34\uff1bdraTriangle&#34\uff1b\uff0c[&#34\uff1bFN&#34\uff1b\uff0c[&#34\uff1bLeft&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b\uff0c&#34\uff1bRight&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDo&#34\uff1b\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1b\u5de6\u4fa7&#34\uff1b\uff0c&#34\uff1b\u9876\u90e8&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bDrawLine&#34\uff1b\uff0c&#34\uff1b\u9876\u90e8&#34\uff1b\uff0c&#34\uff1b\u53f3\u4fa7&#34\uff1b\uff0c&#34\uff1b\u989c\u8272&#34\uff1b]\uff0c[&#34\uff1bdrawLine&#34\uff1b\uff0c&#34\uff1b\u5de6\u4fa7&#34\uff1b\uff0c&#34\uff1b\u53f3\u4fa7&#34\uff1b\uff0c&#34\uff1bcolor&#34\uff1b]\uff0c[&#34\uff1bdrawTriangle&#34\uff1b\uff0c{x\uff1a0\uff0cy\uff1a0}\uff0c{x\uff1a3\uff0cy\uff1a3}\uff0c{x\uff1a6\uff0cy\uff1a0}\uff0c&#34\uff1b\u84dd\u8272&#34\uff1b]\uff0c[&#34\uff1bdrawTriangle&#34\uff1b\uff0c{x\uff1a6\uff0cy\uff1a6}\uff0c{x\uff1a10\uff0cy\uff1a10}\uff0c{x\uff1a6\uff0cy\uff1a16}\uff0c&#34\uff1b\u7d2b\u8272&#34\uff1b]\uff0c])\n(DO(\u5b9a\u4e49\u7ed8\u5236\u4e09\u89d2\u5f62(FN[\u5de6\u4e0a\u53f3\u4e0a\u989c\u8272](\u753b\u7ebf\u5de6\u4e0a\u989c\u8272)(\u753b\u7ebf\u53f3\u4e0a\u989c\u8272)(\u7ed8\u5236\u4e09\u89d2\u5f62{\uff1ax0\uff1ay0}{\uff1ax3\uff1ay3}{\uff1ax6\uff1ay0}&#34\uff1b\u84dd\u8272&#34\uff1b)(\u7ed8\u5236\u4e09\u89d2\u5f62{\uff1ax6\uff1ay6}{\uff1ax10\uff1ay10}{\uff1ax6\uff1ay16}&#34\uff1b\u7d2b\u8272&#34\uff1b)\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u540c\u610f\u64cd\u7eb5\u6e90\u4ee3\u7801\u7684\u80fd\u529b\u5bf9\u6211\u4eec\u6765\u8bf4\u5f88\u91cd\u8981\uff0c\u90a3\u4e48\u4ec0\u4e48\u6837\u7684\u8bed\u8a00\u6700\u6709\u5229\u4e8e\u652f\u6301\u5b83\u5462\uff1f\n\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u91cd\u65b0\u8868\u8ff0\uff1a\u6211\u4eec\u5982\u4f55\u624d\u80fd\u4f7f\u64cd\u4f5c\u4ee3\u7801\u4e0e\u64cd\u4f5c\u4ee3\u7801\u4e2d\u7684\u6570\u636e\u4e00\u6837\u76f4\u89c2\uff1f\u7b54\u6848\u5192\u51fa\u6765\u4e86\uff1a\u5236\u4f5c\u4ee3\u7801\u6570\u636e\uff01\u8fd9\u662f\u4e00\u4e2a\u591a\u4e48\u6fc0\u52a8\u4eba\u5fc3\u7684\u7ed3\u8bba\u3002\u5982\u679c\u6211\u4eec\u5173\u5fc3\u64cd\u7eb5\u6e90\u4ee3\u7801\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u7b54\u6848\uff1a\u4ee3\u7801\u5fc5\u987b\u662f\u6570\u636e3\u3002\n\u5982\u679c\u4ee3\u7801\u5fc5\u987b\u662f\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u6570\u636e\u8868\u793a\u5462\uff1fXML\u53ef\u4ee5\u5de5\u4f5c\uff0cJSON\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4e0d\u80dc\u679a\u4e3e\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u627e\u5230\u6700\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u7b80\u5316\uff0c\u6211\u4eec\u5c31\u4f1a\u6ed1\u5411\u6240\u6709\u2026\u4e2d\u6700\u7b80\u5355\u7684\u5d4c\u5957\u7ed3\u6784\u3002\u6e05\u5355\uff01\n\u5b83\u5f88\u6709\u542f\u53d1\u6027\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0cLisp\u4f3c\u4e4e\u662f\u88ab\u201c\u53d1\u73b0\u201d\u7684\u3002\u8fd9\u5c31\u50cf\u662f\u4f18\u5316\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u60a8\u5173\u5fc3\u4ee3\u7801\u64cd\u4f5c\uff0c\u90a3\u4e48\u60a8\u4f1a\u503e\u5411\u4e8e\u4f7f\u7528Lisp\u3002\u4f7f\u7528\u5df2\u53d1\u73b0\u7684\u5de5\u5177\u6709\u4e00\u4e9b\u4ee4\u4eba\u656c\u754f\u7684\u4e1c\u897f\uff1a\u8c01\u77e5\u9053\uff0c\u5916\u661f\u751f\u547d\u5f62\u5f0f\u53ef\u80fd\u4f1a\u4f7f\u7528Lisp\uff01\n\u8fd9\u5f88\u4ee4\u4eba\u5174\u594b\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u66f4\u597d\u7684\u8bed\u6cd5\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u3002\u5728\u6211\u770b\u6765\uff0cRuby\u548cPython\u5728\u54ea\u91cc\u505a\u5b9e\u9a8c\uff0c\u8bd5\u56fe\u5e26\u6765LISP\u5f0f\u7684\u529f\u80fd\uff0c\u6ca1\u6709\u62ec\u53f7\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u8fd8\u6ca1\u6709\u89e3\u51b3\u3002\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\uff0c\ud83d\ude42\u3002\n\u60a8\u53ef\u4ee5\u60f3\u8c61\uff0c\u5982\u679c\u60a8\u53ef\u4ee5\u91cd\u5199\u60a8\u7684\u8bed\u8a00\u6240\u7528\u7684\u4ee3\u7801\uff0c\u90a3\u4e48\u60a8\u7684\u8868\u73b0\u529b\u4f1a\u6709\u591a\u5f3a\u3002\u60a8\u5c06\u771f\u6b63\u5904\u4e8e\u4e0e\u8bed\u8a00\u8bbe\u8ba1\u4eba\u5458\u76f8\u540c\u7684\u5730\u4f4d\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u5728\u8be5\u7ea7\u522b\u7f16\u5199\u7684\u62bd\u8c61\u52a0\u8d77\u6765\u53ef\u4ee5\u8282\u7701\u60a8\u591a\u5e74\u7684\u5de5\u4f5c\u3002\n\u611f\u8c22Daniel Woelfel\uff0cAlex Kotliarskyi\uff0cSean Grove\uff0cJoe Averbukh\uff0cIrakli Safareli\u5ba1\u9605\u8fd9\u7bc7\u6587\u7ae0\u7684\u8349\u7a3f", "note_en": "Every lisp hacker I ever met, myself included, thought that all those brackets in Lisp were off-putting and weird. At first, of course. Soon after we all came to the same epiphany:  lisp\u2019s power lies in those brackets! In this essay, we\u2019ll go on a journey to that epiphany.\n  Say we were creating a program that let you draw stuff. If we wrote this in JavaScript, we might have functions like this:\n drawPoint ({x:  0 , y:  1 },  &#39;yellow&#39; ) drawLine ({x:  0 , y:  0 }, {x:  1 , y:  1 },  &#39;blue&#39; ) drawCircle ( point ,  radius ,  &#39;red&#39; ) rotate ( shape ,  90 ) ...\n    This means that a user would be able to \u201csend\u201d instructions to your screen, and you would see their drawing come to life.\n  Well, say we set up a websocket connection. We could receive instructions from the user like this:\n   To make it work off the bat, one option could be to take code strings as input:\n  Now the user could send  &#34;drawLine({x: 0, y: 0}, {x: 1, y: 1}, &#39;red&#39;)&#34; and bam: we\u2019ll draw a line!\n But\u2026your spidey sense may already be tingling. What if the user was malicious and managed to send us an instruction like this:\n  Uh oh\u2026our cookie would get sent to iwillp3wn.com, and the malicious user would indeed pwn us. We can\u2019t use eval; it\u2019s too dangerous.\n There lies our problem: we can\u2019t use  eval, but we need some way to receive arbitrary instructions.\n  Well, we could represent those instructions as JSON. We can map each JSON instruction to a special function, and that way we can control what runs. Here\u2019s one way we can represent it:\n {  instructions: [  { functionName:  &#34;drawLine&#34; , args: [{ x:  0 , y:  0  }, { x:  1 , y:  1  },  &#34;blue&#34; ] },  ]; }\n      Let\u2019s see if we can clean this up. Here\u2019s our JSON:\n {  instructions: [  { functionName:  &#34;drawLine&#34; , args: [{ x:  0 , y:  0  }, { x:  1 , y:  1  },  &#34;blue&#34; ] },  ]; }\n Well, since  every instruction has a  functionName, and an  args, we don\u2019t really need to spell that out. We  could write it like this:\n {  instructions: [[ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  },  &#34;blue&#34; ]], }\n Nice! We changed our object in favor of an array. To handle that, all we need is a rule:  the   first  part of our instruction is the function name, and the  rest are arguments. If we wrote that down, here\u2019s how our  onMessage would look:\n websocket .onMessage ( data   =&gt;  {    const   fns   =  {  drawLine:  drawLine ,   ...  };   data . instructions .forEach (([ fnName ,  ... args ])  =&gt;   fns \\[ fnName \\]( ... args )); })\n    drawLine ({x:  0 , y:  0 }, {x:  1 , y:  1 },  &#39;blue&#39; ) // same as [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }]\n    [ &#34;rotate&#34; , [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }],  90 ]\n Here, the  rotate instruction has an argument that is in  itself an instruction! Pretty powerful. Surprisingly, we just need to tweak our code a tiny bit to make it work:\n websocket .onMessage ( data   =&gt;  {    const   fns   =  {  drawLine:  drawLine ,   ...  };   const   parseInstruction   =  ( ins )  =&gt;  {   if  ( ! Array .isArray ( ins )) {   // this must be a primitive argument, like {x: 0 y: 0}   return   ins ;  }   const  [ fName ,  ... args ]  =   ins ;   fns \\[ fName \\]( ... args );  };   data . instructions .forEach ( parseInstruction ); })\n Nice, We introduce a  parseInstruction function. We can apply  parseInstruction recursively to arguments, and support stuff like:\n [ &#34;rotate&#34; , [ &#34;rotate&#34; , [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }],  90 ]]]\n    {  instructions: [[ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }]], }\n    Instead of a top-level key, we could have a special instruction called  do, which runs all the instructions it\u2019s given.\n  websocket .onMessage ( data   =&gt;  {    const   fns   =  {   ...   do : ( ... args )  =&gt;   args [ args .length  -   1 ],  };   const   parseInstruction   =  ( ins )  =&gt;  {   if  ( ! Array .isArray ( ins )) {   // this must be a primitive argument, like {x: 0, y: 0}   return   ins ;  }   const  [ fName ,  ... args ]  =   ins ;   return   fns \\[ fName \\]( ... args .map ( parseInstruction ));  };   parseInstruction ( instruction ); })\n Oh wow, that was easy. We just added  do in  fns. Now we can support an instruction like this:\n [   &#34;do&#34; ,  [ &#34;drawPoint&#34; , { x:  0 , y:  0  }],  [ &#34;rotate&#34; , [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }],  90 ]], ];\n    If we could support definitions, our remote user could write some very expressive instructions! Let\u2019s convert our code to the kind of data structure we\u2019ve been playing with:\n [ &#34;def&#34; ,  &#34;shape&#34; , [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }]] [ &#34;rotate&#34; ,  &#34;shape&#34; ,  90 ]\n Noot bad! If we can support an instruction like that, we\u2019d be golden! Here\u2019s how:\n websocket .onMessage ( data   =&gt;  {    const   variables   =  {};   const   fns   =  {   ...   def : ( name ,  v )  =&gt;  {   defs [ name ]  =   v ;  },  };   const   parseInstruction   =  ( ins )  =&gt;  {   if  ( variables [ ins ]) {   // this must be some kind of variable, like &#34;shape&#34;   return   variables [ ins ];  }   if  ( ! Array .isArray ( ins )) {   // this must be a primitive argument, like {x: 0 y: 0}   return   ins ;  }   const  [ fName ,  ... args ]  =   ins ;   return   fns \\[ fName \\]( ... args .map ( parseInstruction ));  };   parseInstruction ( instruction ); })\n Here, we introduced a  variables object, which keeps track of every variable we define. A special  def function updates that  variables object. Now we can run this instruction:\n [   &#34;do&#34; ,  [ &#34;def&#34; ,  &#34;shape&#34; , [ &#34;drawLine&#34; , { x:  0 , y:  0  }, { x:  1 , y:  1  }]],  [ &#34;rotate&#34; ,  &#34;shape&#34; ,  90 ], ];\n   Let\u2019s step it up a notch. What if we let our remote user  define their own functions?\n  const   drawTriangle   =   function ( left ,  top ,  right ,  color ) {    drawLine ( left ,  top ,  color );   drawLine ( top ,  right ,  color );    drawLine ( left ,  right ,  color );  }  drawTriangle ( ... )\n How would we do it? Let\u2019s follow our intuition again. If we transcribe this to our data representation, here\u2019s how it could look:\n [ &#34;def&#34; ,  &#34;drawTriangle&#34; ,  [ &#34;fn&#34; , [ &#34;left&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [ &#34;do&#34; ,  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;top&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  ],  ], ], [ &#34;drawTriangle&#34; , { x:  0 , y:  0  }, { x:  3 , y:  3  }, { x:  6 , y:  0  },  &#34;blue&#34; ],\n         All we need to do is to parse this instruction somehow, and bam, we are good to go!\n  The key to making this work is our  [&#34;fn&#34;, \u2026] instruction. What if we did this:\n const   parseFnInstruction   =  ( args ,  body ,  oldVariables )  =&gt;  {   return  ( ... values )  =&gt;  {   const   newVariables   =  {   ... oldVariables ,   ... mapArgsWithValues ( args ,  values ),  };   return   parseInstruction ( body ,  newVariables );  }; };\n When we find a  fn instruction, we run  parseFnInstruction. This produces a new javascript function. We would replace  drawTriangle here with that function:\n [ &#34;drawTriangle&#34; , { x:  0 , y:  0  }, { x:  3 , y:  3  }, { x:  6 , y:  0  },  &#34;blue&#34; ]\n  [{ x:  0 , y:  0  }, { x:  3 , y:  3  }, { x:  6 , y:  0  },  &#34;blue&#34; ]\n   Would create a new  variables object, that includes a mapping of the function arguments to these newly provided values:\n const   newVariables   =  {   ... oldVariables ,  left: { x:  0 , y:  0  },   top: { x:  3 , y:  3  },  right: {x:  6 , y:  0  },   color:  &#34;blue&#34; ,  }\n  [   &#34;do&#34; ,  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;top&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  ],\n And run it through  parseInstruction, with our  newVariables. With that  &#34;left&#34; would be looked up as a variable and map to  {x: 0, y: 0}.\n   Let\u2019s follow through on our plan. The first thing we need to do, is to have  parseInstruction accept  variables as an argument:\n const   parseInstruction   =  ( ins ,  variables )  =&gt;  {   ...   return   fn ( ... args .map (( arg )  =&gt;   parseInstruction ( arg ,  variables )));  };   parseInstruction ( instruction ,  variables );\n Next, we\u2019ll want to add a special check to detect if we have a \u201cfn\u201d instruction:\n const   parseInstruction   =  ( ins ,  variables )  =&gt;  {   ...   const  [ fName ,  ... args ]  =   ins ;   if  ( fName   ==   &#34;fn&#34; ) {   return   parseFnInstruction ( ... args ,  variables );  }   ...   return   fn ( ... args .map (( arg )  =&gt;   parseInstruction ( arg ,  variables )));  };   parseInstruction ( instruction ,  variables );\n  const   mapArgsWithValues   =  ( args ,  values )  =&gt;  {    return   args .reduce (( res ,  k ,  idx )  =&gt;  {   res [ k ]  =   values [ idx ];   return   res ;  }, {}); } const   parseFnInstruction   =  ( args ,  body ,  oldVariables )  =&gt;  {   return  ( ... values )  =&gt;  {   const   newVariables   =  { ... oldVariables ,  ... mapArgsWithValues ( args ,  values )}   return   parseInstruction ( body ,  newVariables );  }; };\n It works exactly like we said. We return a new function. When it\u2019s run, it:\n   const   parseInstruction   =  ( ins ,  variables )  =&gt;  {   ...   const  [ fName ,  ... args ]  =   ins ;   if  ( fName   ==   &#34;fn&#34; ) {   return   makeFn ( ... args ,  variables );  }   const   fn   =   fns [ fName ]  ||   variables [ fName ];   return   fn ( ... args .map (( arg )  =&gt;   parseInstruction ( arg ,  variables )));\n   Here, since  fn can now come from both  fns and  variables, we check both. Put it all together, and it works!\n websocket .onMessage ( data   =&gt;  {    const   variables   =  {};   const   fns   =  {  drawLine:  drawLine ,  drawPoint:  drawPoint ,  rotate:  rotate ,   do : ( ... args )  =&gt;   args [ args .length  -   1 ],   def : ( name ,  v )  =&gt;  {   variables [ name ]  =   v ;  },  };   const   mapArgsWithValues   =  ( args ,  values )  =&gt;  {   return   args .reduce (( res ,  k ,  idx )  =&gt;  {   res [ k ]  =   values [ idx ];   return   res ;  }, {});  };   const   parseFnInstruction   =  ( args ,  body ,  oldVariables )  =&gt;  {   return  ( ... values )  =&gt;  {   const   newVariables   =  {   ... oldVariables ,   ... mapArgsWithValues ( args ,  values ),  };   return   parseInstruction ( body ,  newVariables );  };  };   const   parseInstruction   =  ( ins ,  variables )  =&gt;  {   if  ( variables [ ins ]) {   // this must be some kind of variable   return   variables [ ins ];  }   if  ( ! Array .isArray ( ins )) {   // this must be a primitive argument, like {x: 0 y: 0}   return   ins ;  }   const  [ fName ,  ... args ]  =   ins ;   if  ( fName   ==   &#34;fn&#34; ) {   return   parseFnInstruction ( ... args ,  variables );  }   const   fn   =   fns [ fName ]  ||   variables [ fName ];   return   fn ( ... args .map (( arg )  =&gt;   parseInstruction ( arg ,  variables )));  };   parseInstruction ( instruction ,  variables ); })\n  [   &#34;do&#34; ,  [   &#34;def&#34; ,   &#34;drawTriangle&#34; ,  [   &#34;fn&#34; ,  [ &#34;left&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [   &#34;do&#34; ,  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;top&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  ],  ],  ],  [ &#34;drawTriangle&#34; , { x:  0 , y:  0  }, { x:  3 , y:  3  }, { x:  6 , y:  0  },  &#34;blue&#34; ],  [ &#34;drawTriangle&#34; , { x:  6 , y:  6  }, { x:  10 , y:  10  }, { x:  6 , y:  16  },  &#34;purple&#34; ], ])\n We can compose functions, we can define variables, and we can even create our own functions. If we think about it, we just created a programming language!  1.\n     We may even notice something interesting. Our new array languages has advantages to JavaScript itself!\n  In JavaScript, you define variables by writing  const x = foo. Say you wanted to \u201crewrite\u201d  const to be just  c. You couldn\u2019t do this, because  const x = foo is special syntax in JavaScript. You\u2019re not allowed to change that around.\n In our array language though, there\u2019s no syntax at all! Everything is just arrays. We could easily write some special  c instruction that works just like  def.\n If we think about it, it\u2019s as though in Javascript we are guests, and we need to follow the language designer\u2019s rules. But in our array language, we are \u201cco-owners\u201d. There is no big difference between the \u201cbuilt-in\u201d stuff (\u201cdef\u201d, \u201cfn\u201d) the language designer wrote, and the stuff we write! (\u201cdrawTriangle\u201d).\n  There\u2019s another, much more resounding win. If our code is just a bunch of arrays, we can  do stuff to the code. We could write code that generates code!\n      This would be difficult to do. We\u2019d need something like Babel to parse our file, and work on top of the AST to make sure we rewrite our code safely to\n  But in our array language, our code is just arrays! It\u2019s easy to rewrite  unless:\n     Having your code represented as data doesn\u2019t just allow you to manipulate your code with ease. It also allows your editor to do it too. For example, say you are editing this code:\n         If you\u2019re editor understood these arrays, you can tell it: \u201cexpand\u201d this area to the right:\n       All of a sudden, instead of editing characters, you are editing the  structure of your code. This is called structural editing  2. It can help you move with the speed of a sculptor, and is one of the many wins you\u2019ll get when your code is data.\n  Well, this array language you happened to have discovered\u2026is a poorly implemented dialect of Lisp!\n  [   &#34;do&#34; ,  [   &#34;def&#34; ,   &#34;drawTriangle&#34; ,  [   &#34;fn&#34; ,  [ &#34;left&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [   &#34;do&#34; ,  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;top&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;top&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  [ &#34;drawLine&#34; ,  &#34;left&#34; ,  &#34;right&#34; ,  &#34;color&#34; ],  ],  ],  ],  [ &#34;drawTriangle&#34; , { x:  0 , y:  0  }, { x:  3 , y:  3  }, { x:  6 , y:  0  },  &#34;blue&#34; ],  [ &#34;drawTriangle&#34; , { x:  6 , y:  6  }, { x:  10 , y:  10  }, { x:  6 , y:  16  },  &#34;purple&#34; ], ])\n  ( do    ( def  draw-triangle ( fn  [left top right color]  ( draw-line  left top color)  ( draw-line  top right color)  ( draw-line  left right color)))  ( draw-triangle  { :x   0   :y   0 } { :x   3   :y   3 } { :x   6   :y   0 }  &#34;blue&#34; )  ( draw-triangle  { :x   6   :y   6 } { :x   10   :y   10 } { :x   6   :y   16 }  &#34;purple&#34; ))\n        Now, if we agree that the ability to manipulate source code is important to us, what kind of languages are most conducive for supporting it?\n One way we can solve that question is to rephrase it: how could we make manipulating code as intuitive as manipulating  data within  our code? The answer sprouts out: Make the code data! What an exciting conclusion. If we care about manipulating source code, we glide into the answer: the code  must be data  3.\n If the code must be data, what kind of data representation could we use? XML could work, JSON could work, and the list goes on. But, what would happen if we tried to find the simplest data structure? If we keep simplifying, we glide into to the simplest nested structure of all\u2026lists!\n  It\u2019s illuminating, in the sense that it seems like Lisp is \u201cdiscovered\u201d. It\u2019s like the solution to an optimization problem: if you care about manipulating code, you gravitate towards discovering Lisp. There\u2019s something awe-inspiring about using a tool that\u2019s discovered: who knows, alien life-forms could use Lisp!\n It\u2019s exciting, in that, there  may be a better syntax. We don\u2019t know. Ruby and Python in my opinion where experiments, trying to bring lisp-like power without the brackets. I don\u2019t think the question is a solved one yet. Maybe you can think about it \ud83d\ude42\n  You can imagine how expressive you can be if you can rewrite the code your language is written in. You\u2019d truly be on the same footing as the language designer, and the abstractions you could write at that level, can add up to save you years of work.\n   Thanks to Daniel Woelfel,  Alex Kotliarskyi, Sean Grove, Joe Averbukh, Irakli Safareli, for reviewing drafts of this essay", "posttime": "2020-10-26 11:23:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bed\u6cd5,lisp,\u4ee3\u7801", "title": "\u5bf9Lisp\u8bed\u6cd5\u7684\u76f4\u89c2\u8ba4\u8bc6", "title_en": "An Intuition for Lisp Syntax", "transed": 1, "url": "https://stopa.io/post/265", "via": "", "real_tags": ["\u8bed\u6cd5", "lisp", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "67f77094e23978e470709cd403332e5a.jpeg", "infoid": 1031182, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51a0\u72b6\u75c5\u6bd2\u7684\u6d41\u884c\u5bfc\u81f4\u6570\u767e\u4e07\u7f8e\u56fd\u4eba\u5c06\u4ed6\u4eec\u7684\u5bb6\u53d8\u6210\u4e86\u529e\u516c\u5ba4\u548c\u6559\u5ba4\u3002\u8fd9\u4e5f\u8feb\u4f7f\u8bb8\u591a\u4eba\u6539\u53d8\u4e60\u60ef\uff0c\u4ee5\u63a7\u5236\u4ed6\u4eec\u7684\u4e92\u8054\u7f51\u8d26\u5355\u3002\n\u5854\u5409\u7279\u516c\u53f8(Target)\u7684\u6570\u636e\u5904\u7406\u5206\u6790\u5e08\u8c22\u4f0a\u00b7\u9093\u6069(Shea Dunn)\u81ea3\u6708\u4efd\u4ee5\u6765\u4e00\u76f4\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u5bb6\u4e2d\u5de5\u4f5c\uff0c\u4ed6\u8bf4\u4ed6\u4ece\u6765\u4e0d\u5fc5\u8003\u8651\u5bb6\u5ead\u7684\u4e92\u8054\u7f51\u6d88\u8d39\u3002\u8fd9\u79cd\u60c5\u51b5\u57287\u6708\u521d\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5f53\u65f6\u4ed6\u6536\u5230\u4e86\u5bbd\u5e26\u63d0\u4f9b\u5546\u5eb7\u5361\u65af\u7279(Comcast)\u7684\u901a\u77e5\uff0c\u901a\u77e5\u4ed6\u4f7f\u7528\u4e86\u592a\u591a\u7684\u6570\u636e\uff0c\u5982\u679c\u4ed6\u7ee7\u7eed\u8d85\u8fc7\u4e0a\u9650\uff0c\u5c31\u9700\u8981\u652f\u4ed850\u7f8e\u5143\u7684\u8d39\u7528\u3002\n\u9093\u6069\u8bf4\uff0c\u81ea\u90a3\u4ee5\u540e\uff0c\u4ed6\u4e00\u76f4\u975e\u5e38\u5bc6\u5207\u5730\u5173\u6ce8\u81ea\u5df1\u7684\u4e92\u8054\u7f51\u4f7f\u7528\u60c5\u51b5\uff0c\u4ee5\u907f\u514d\u53d7\u5230\u8d85\u989d\u8d39\u7528\u7684\u6253\u51fb\uff0c\u7279\u522b\u662f\u5728\u6bcf\u4e2a\u6708\u5e95\u3002\u9093\u6069\u8bf4\uff0c\u201c\u5373\u4f7f\u4e0d\u518d\u4e0b\u8f7dXbox\u6e38\u620f\uff0c\u6211\u4ecd\u7136\u4f1a\u6536\u5230\u4fe1\u606f\uff0c\u8bf4\u6211\u5feb\u8981\u8fbe\u5230\u4e0a\u9650\u4e86\u3002\u201d\n\u81ea\u75ab\u60c5\u7206\u53d1\u4ee5\u6765\uff0c\u6d88\u8d39\u8005\u82b1\u5728\u6d41\u5a92\u4f53\u7535\u89c6\u3001\u6e38\u620f\u548c\u4f7f\u7528Zoom\u6216\u5176\u4ed6\u89c6\u9891\u4f1a\u8bae\u5e73\u53f0\u7684\u65f6\u95f4\u5927\u5e45\u589e\u52a0\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u5f80\u5f80\u4f1a\u6d88\u8017\u5927\u91cf\u6570\u636e\u3002\n\u9650\u5236\u5ba2\u6237\u7684\u4e92\u8054\u7f51\u4f7f\u7528\uff0c\u5411\u91cd\u5ea6\u7528\u6237\u6536\u53d6\u66f4\u9ad8\u8d39\u7528\u7684\u505a\u6cd5\u5728\u8bb8\u591a\u56fd\u5bb6\u7684\u4e92\u8054\u7f51\u63d0\u4f9b\u5546\u4e2d\u5f88\u5e38\u89c1\u3002\u8fd9\u6837\u505a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6709\u52a9\u4e8e\u62b5\u6d88\u8ba2\u6237\u653e\u5f03\u4f20\u7edf\u4ed8\u8d39\u7535\u89c6\u8ba1\u5212\u800c\u8f6c\u800c\u9009\u62e9\u57fa\u4e8e\u4e92\u8054\u7f51\u7684\u9009\u62e9\u6240\u9020\u6210\u7684\u6536\u5165\u635f\u5931-\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u526a\u7ebf\u3002\u9f13\u52b1\u6301\u7eed\u9700\u8981\u66f4\u591a\u6570\u636e\u7684\u7528\u6237\u5347\u7ea7\u5230\u66f4\u6602\u8d35\u7684\u8ba1\u5212\u3002\n\u8ffd\u8e2a100\u591a\u4e07\u7f8e\u56fd\u8ba2\u6237\u7684\u5bbd\u5e26\u6570\u636e\u516c\u53f8OpenVault\u7684\u9996\u5e2d\u6267\u884c\u957f\u7279\u9c81\u591a(Mark Trudeau)\u8bf4\uff0c\u6570\u636e\u4e0a\u9650\u8fd8\u6709\u52a9\u4e8e\u4fdd\u6301\u4e92\u8054\u7f51\u5957\u9910\u4ef7\u683c\u7684\u7a33\u5b9a\uff0c\u56e0\u4e3a\u5b83\u5c06\u989d\u5916\u7684\u6210\u672c\u8f6c\u5ac1\u7ed9\u4e86\u91cd\u5ea6\u7528\u6237\u3002\u4ed6\u8bf4\uff1a\u201c\u5b83\u4fdd\u62a4\u4e86\u5927\u591a\u6570\u7528\u6237\uff0c\u4f7f\u4ed6\u4eec\u4e0d\u4f1a\u6bcf\u5e74\u90fd\u63d0\u9ad8\u8d39\u7387\u3002\u201d\n\u7531\u4e8e3\u6708\u4efd\u5927\u6d41\u884c\u8feb\u4f7f\u7f8e\u56fd\u4eba\u5728\u5bb6\u4e2d\u907f\u96be\uff0c\u5eb7\u5361\u65af\u7279(Comcast)\u548c\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u7b49\u51e0\u5bb6\u4f9b\u5e94\u5546\u6682\u65f6\u6682\u505c\u4e86\u5bf9\u4e00\u4e9b\u5ba2\u6237\u7684\u8d85\u989d\u6536\u8d39\u3002\u5305\u62ec\u5eb7\u5361\u65af\u7279(Comcast)\u548c\u8003\u514b\u65af\u901a\u4fe1\u516c\u53f8(Cox Communications Inc.)\u5728\u5185\u7684\u8bb8\u591a\u516c\u53f8\u540e\u6765\u91cd\u65b0\u5b9e\u65bd\u4e86\u6570\u636e\u9650\u5236\u3002\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u7684\u6570\u767e\u4e07DSL\u7528\u6237--\u901a\u8fc7\u94dc\u8d28\u7535\u8bdd\u7ebf\u53d1\u9001\u4e92\u8054\u7f51\u4fe1\u53f7\u7684\u6280\u672f--\u73b0\u5728\u4e5f\u9762\u4e34\u6708\u5ea6\u9650\u5236\uff0c\u800cAT&amp\uff1bT\u5149\u7ea4\u7528\u6237\u7684\u6570\u636e\u4e0a\u9650\u5c06\u5728\u5e74\u5e95\u524d\u514d\u9664\u3002\n\u67e5\u7279\u901a\u4fe1\u516c\u53f8(Charge Communications)\u5728\u6536\u8d2d\u65f6\u4ee3\u534e\u7eb3\u6709\u7ebf\u7535\u89c6(Time Warner Cable)\u65f6\u4e0e\u7f8e\u56fd\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(Federal Communications Commission)\u8fbe\u6210\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u76ee\u524d\u7981\u6b62\u5bf9\u5176\u5ba2\u6237\u7684\u4e92\u8054\u7f51\u4f7f\u7528\u91cf\u8bbe\u7f6e\u4e0a\u9650\u3002\u4eca\u5e74\u590f\u5929\uff0cCharge\u8981\u6c42FCC\u63d0\u524d\u53d6\u6d88\u8fd9\u4e9b\u9650\u5236\uff0c\u8fd9\u5c06\u4f7f\u5b83\u80fd\u591f\u4ece2021\u5e745\u6708\u5f00\u59cb\u5b9e\u65bd\u6570\u636e\u9650\u5236\u3002\nCharge\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u5f53FCC\u6761\u4ef6\u5230\u671f\u65f6\uff0c\u516c\u53f8\u5c06\u6743\u8861\u5176\u9009\u62e9\uff0c\u201c\u4f46\u76ee\u524d\u6ca1\u6709\u8003\u8651\u5b9e\u65bd\u6570\u636e\u4e0a\u9650\uff0c\u4e5f\u6ca1\u6709\u8fd9\u6837\u505a\u7684\u8ba1\u5212\u3002\u201d\n\u4f5b\u7f57\u91cc\u8fbe\u5dde\u6770\u514b\u900a\u7ef4\u5c14\u7684\u52a0\u96f7\u65af\u00b7\u51ef\u5c14\u65af(Gareth Cales)\u6700\u8fd1\u4ece\u5eb7\u5361\u65af\u7279(Comcast)\u8f6c\u5230\u4e86\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\uff0c\u56e0\u4e3a\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8\u5728\u4ed6\u6240\u5728\u7684\u5730\u533a\u6ca1\u6709\u6570\u636e\u4e0a\u9650\uff0c\u800c\u4e14\u4fc3\u9500\u6d3b\u52a8\u4f7f\u5176\u6210\u4e3a\u66f4\u4fbf\u5b9c\u7684\u9009\u62e9\u3002\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u6700\u6602\u8d35\u76841\u5343\u5146\u4f4d\u901f\u7387\u5957\u9910\u63d0\u4f9b\u65e0\u9650\u6570\u636e\u3002\n\u5728\u5927\u6d41\u884c\u4e4b\u524d\uff0c34\u5c81\u7684\u51ef\u5c14\u65af\u4ece\u4e8b\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\uff0c\u7ecf\u5e38\u51fa\u5dee\uff0c\u4ed6\u4ee5\u524d\u4ece\u672a\u60f3\u8fc7\u81ea\u5df1\u5728\u5bb6\u91cc\u4f7f\u7528\u4e92\u8054\u7f51\u3002\u4ed6\u9009\u62e9\u4e86AT&amp\uff1bT\uff0c\u800c\u4e0d\u662f\u5c06\u5eb7\u5361\u65af\u7279\u7684\u8d26\u5355\u589e\u52a030\u7f8e\u5143\uff0c\u65e0\u9650\u5236\u4f7f\u7528\u3002\n\u201c\u6211\u4e0d\u8ba4\u4e3a\u6211\u662f\u6700\u591a\u4ea7\u7684\u7f51\u6c11\uff0c\u201d\u51ef\u5c14\u65af\u8bf4\u3002\n\u9664\u4e86\u5e2e\u52a9\u4e92\u8054\u7f51\u63d0\u4f9b\u5546\u521b\u9020\u66f4\u591a\u6536\u5165\u5916\uff0c\u6570\u636e\u9650\u5236\u4e5f\u662f\u7f13\u89e3\u7f51\u7edc\u62e5\u5835\u548c\u538b\u529b\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5c3d\u7ba1\u538b\u529b\u5f88\u5927\uff0c\u4e92\u8054\u7f51\u7684\u4e3b\u5e72\u5728\u5927\u6d41\u884c\u521d\u671f\u8fd8\u662f\u633a\u597d\u7684\u3002\n\u4e1c\u5317\u5927\u5b66\u5e93\u91cc\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u9662(Khoury College Of Computer Sciences)\u526f\u6559\u6388\u5927\u536b\u00b7\u79d1\u592b\u5185\u65af(David Choffnes)\u8bf4\uff0c\u201c\u6211\u4eec\u7ecf\u5386\u8fc7\u8fd9\u79cd\u60c5\u51b5\uff0c\u800c\u4e14\u6ca1\u6709\u5e26\u5bbd\u4f7f\u7528\u4e0a\u9650\uff0c\u8fd9\u8ba9\u4f60\u8d28\u7591\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\u4eec\u3002\u201d\n\u4f9b\u5e94\u5546\u5c06\u5f3a\u52b2\u7684\u4e92\u8054\u7f51\u8868\u73b0\u5f52\u56e0\u4e8e\u5728\u7f51\u7edc\u4e0a\u5168\u5929\u5019\u5de5\u4f5c\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u8fdb\u4e00\u6b65\u6295\u8d44\u3002\u8d39\u7528\u7684\u5927\u5c0f\u662f\u4f9b\u5e94\u5546\u8bf4\u91cd\u5ea6\u7528\u6237\u7ecf\u5e38\u88ab\u8981\u6c42\u652f\u4ed8\u66f4\u591a\u8d39\u7528\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u3002\n\u6839\u636eOpenVault\u7684\u6570\u636e\uff0c9\u6708\u4efd\uff0c\u7f8e\u56fd\u5bb6\u5ead\u5e73\u5747\u4f7f\u7528\u4e86383.8 GB\u7684\u6570\u636e\u3002\u672c\u6708\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6d88\u8d39\u5df2\u7ecf\u589e\u52a0\u5230413.3 GB\u3002\u8fd9\u6bd41\u6708\u4efd\u7684361G\u6709\u6240\u589e\u52a0\uff0c\u8fd9\u662f\u5927\u6d41\u884c\u4e4b\u524d\u7684\u6700\u65b0\u6708\u5ea6\u4f7f\u7528\u8bb0\u5f55\u3002\n\u5eb7\u5361\u65af\u7279\u8bf4\uff0c\u5373\u4f7f\u662f\u5728\u5927\u6d41\u884c\u7684\u60c5\u51b5\u4e0b\uff0c95%\u7684\u5ba2\u6237\u4e5f\u6ca1\u6709\u8fbe\u5230\u5176\u4e0a\u9650\uff0c\u6700\u8fd1\u5b83\u5c06\u4e0a\u9650\u4ece1TB\u63d0\u9ad8\u5230\u4e861.2TB\u3002\u5eb7\u5361\u65af\u7279\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5eb7\u5361\u65af\u7279\u8ba2\u6237\u6765\u8bf4\uff0c\u4e0d\u9650\u91cf\u5957\u9910\u7684\u4ef7\u683c\u4e5f\u6709\u6240\u964d\u4f4e\u3002\n\u540c\u6837\uff0c\u636e\u4e00\u4f4d\u53d1\u8a00\u4eba\u79f0\uff0cCox\u5c06\u5176\u6570\u636e\u6d25\u8d34\u63d0\u9ad8\u4e8625%\uff0c\u81f3\u6bcf\u67081.25TB\uff0c\u5e76\u4e14\u5728\u5ba2\u6237\u9996\u6b21\u8d85\u8fc7\u4ed6\u4eec\u7684\u6570\u636e\u6d25\u8d34\u65f6\uff0c\u5b83\u5c06\u514d\u9664\u8d85\u65f6\u8d39\u3002\nVerizon Communications\u6d88\u8d39\u8005\u90e8\u95e8\u8d1f\u8d23\u4eba\u7f57\u5357\u00b7\u9093\u6069(Ronan Dunne)\u8bf4\uff0c\u5176Fios\u670d\u52a1\u7684\u5e73\u5747\u8ba2\u6237\u6bcf\u6708\u4f7f\u7528\u8d85\u8fc7500G\u7684\u7a7a\u95f4\uff0c\u800c\u4e0d\u4f1a\u5bf9\u5149\u7ea4\u7cfb\u7edf\u7684\u57fa\u7840\u8bbe\u65bd\u5f81\u7a0e\uff0c\u56e0\u6b64\u8be5\u516c\u53f8\u4e0d\u4f1a\u6536\u53d6\u8d39\u7528\u6765\u964d\u4f4e\u6d88\u8017\u3002\n\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u8003\u514b\u65af\u7684\u957f\u671f\u5ba2\u6237\u4e39\u5c3c\u5c14\u00b7\u6c83\u5c14\u5179(Daniel Waltz)\u662f\u4e00\u540d\u4e0d\u6d3b\u8dc3\u7684\u5546\u4e1a\u98de\u884c\u5458\uff0c\u6700\u8fd1\u5f00\u59cb\u5c31\u8bfb\u5546\u5b66\u9662\u3002\u4ed6\u8bf4\uff0c\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u4ed6\u5728\u51e0\u6b21\u8fbe\u5230\u4e0a\u9650\u540e\u5347\u7ea7\u5230\u4e86\u65e0\u9650\u5236\u8ba1\u5212\u3002\n\u968f\u7740\u4ed6\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5728\u5bb6\u91cc\uff0c\u4ed6\u7684\u4e92\u8054\u7f51\u4f7f\u7528\u91cf\u6fc0\u589e\uff0c\u4e3b\u8981\u662f\u7531\u4e8e\u865a\u62df\u8bfe\u7a0b\u548c\u6e38\u620f\u3002\n\u7531\u4e8e\u5347\u7ea7\uff0c\u6c83\u5c14\u8328\u7684\u8d26\u5355\u6bcf\u6708\u589e\u52a0\u4e86\u7ea650\u7f8e\u5143\uff0c\u8fbe\u5230\u7ea6161\u7f8e\u5143\uff0c\u4f46\u4ed6\u8bf4\uff0c\u4ed6\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u9762\u4e34\u8d85\u989d\u8d39\u7528\u4e86\u3002\u4ed6\u8fd8\u8bf4\uff0c\u4ed6\u611f\u89c9\u81ea\u5df1\u7684\u4e92\u8054\u7f51\u8d28\u91cf\u6709\u6240\u63d0\u9ad8\u3002\n\u5f53\u5eb7\u5361\u65af\u7279\u7684\u6570\u636e\u4e0a\u9650\u57287\u6708\u4efd\u6062\u590d\u65f6\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u6770\u514b\u900a\u7ef4\u5c14\u7684\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u6c99\u6069\u00b7\u8d1d\u5229(Shane Bailey)\u8bf4\uff0c\u5728\u4ed6\u9009\u62e9\u5347\u7ea7\u5230\u6bcf\u6708\u989d\u591630\u7f8e\u5143\u7684\u65e0\u9650\u5236\u5957\u9910\u4e4b\u524d\uff0c\u4ed6\u548c\u5bb6\u4eba\u6709\u51e0\u6b21\u63a5\u8fd1\u6216\u8d85\u8fc7\u4e86\u4e0a\u9650\u3002\n\u4ed6\u548c\u59bb\u5b50\u90fd\u5728\u5bb6\u91cc\u5de5\u4f5c\uff0c\u800c\u4ed6\u7684\u5b69\u5b50\u4eec\u5219\u5728\u5bb6\u91cc\u5b66\u4e60\uff0c\u7ecf\u5e38\u6d41\u5a92\u4f53\u7535\u89c6\u8282\u76ee\u6216\u73a9\u6559\u80b2\u6e38\u620f\u3002\n\u8d1d\u5229\u8bf4\uff0c30\u7f8e\u5143\u7684\u5347\u7ea7\u8ba9\u4ed6\u5b89\u5fc3\uff0c\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u8d85\u989d\u8d39\u7528\u4e86\u3002\u201c\u73b0\u5728\u5b83\u6bd4\u6211\u901a\u5e38\u5f00\u8f66\u4e0a\u73ed\u7528\u7684\u6c7d\u6cb9\u4fbf\u5b9c\uff0c\u201d\u4ed6\u8bf4\u3002\n\u51fa\u73b0\u57282020\u5e7410\u670826\u65e5\u5370\u5237\u7248\u4e0a\u7684\u201c\u5728\u5bb6\u5de5\u4f5c\u4eba\u5458\u9762\u5bf9\u6570\u636e\u4f7f\u7528\u4e0a\u9650\u201d\u5c06\u6570\u636e\u4e0a\u9650\u6dfb\u52a0\u5230\u60a8\u7684\u5728\u5bb6\u5de5\u4f5c\u4e2d\u3002", "note_en": "The  coronavirus pandemic led millions of Americans to turn their homes into offices and classrooms. It also forced many to change their habits to keep their internet bills in check.\n  Shea Dunn, a data-process analyst for  Target  who has been working from his Minneapolis home since March, said he never had to think about his household\u2019s internet consumption. That changed in early July, when he got a notice from his broadband provider,  Comcast    CMCSA  -0.11%  , informing him he was using too much data and was liable for a $50 fee if he kept exceeding his cap.\n  Mr. Dunn said he has been watching his internet usage very closely ever since to avoid being hit with an overage fee, especially at the end of each month. \u201cEven without downloading Xbox games anymore, I still receive messages that I\u2019m close to hitting the cap,\u201d Mr. Dunn said.\n  The amount of time consumers spend streaming TV, gaming and using Zoom or other videoconference platforms  substantially increased since the start of the pandemic, activities that often eat up large amounts of data.\n    The practice of limiting the internet usage of customers and charging heavy users more is common among many of the nation\u2019s internet providers. Doing so partly helps offset the revenue lost from subscribers abandoning their traditional pay-TV plans in favor of internet-based options\u2014 a phenomenon known as cord-cutting. Users who consistently need more data are encouraged to upgrade to a pricier plan.\n    Data caps also help keep the prices of internet packages stable by shifting the extra cost to heavy users, according to Mark Trudeau, chief executive of broadband-data firm OpenVault, which tracks more than a million U.S. subscribers. \u201cIt protects the majority of subscribers from having rates raised every year,\u201d he said.\n  As the pandemic forced Americans to shelter at home in March, several providers like Comcast and  AT&amp;T  temporarily suspended overage fees for some customers. Many, including Comcast and Cox Communications Inc., later reinstituted data limits. AT&amp;T\u2019s millions of DSL subscribers\u2014the technology that sends internet signals over copper telephone wires\u2014also now face monthly limits, while AT&amp;T fiber customers\u2019 data caps are waived through the end of the year.\n  Charter Communications    CHTR  -1.11%  is currently  prohibited from capping the internet usage of its customers as part of a deal with the Federal Communications Commission when it acquired Time Warner Cable. Charter this summer asked the FCC for these restrictions to be lifted early, which would give it the ability to institute data limits starting in May 2021.\n  A Charter spokeswoman said the company would weigh its options when the FCC conditions expire, \u201cbut is currently not considering implementing data caps and has no plan to do so.\u201d\n  Gareth Cales in Jacksonville, Fla., recently switched from Comcast to AT&amp;T, since AT&amp;T doesn\u2019t have a data cap in his area and a promotion makes it the less-expensive option. AT&amp;T\u2019s most-expensive 1-gigabit-speed plans offer unlimited data.\n  Before the pandemic, Mr. Cales, a 34-year-old who works in software development and traveled often for work, never before thought about his at-home internet usage. Rather than increasing his Comcast bill by $30 for unlimited use, he chose AT&amp;T.\n  \u201cI don\u2019t think I\u2019m the most prolific internet user,\u201d Mr. Cales said.\n    On top of helping internet providers generate more revenue, data limits are a way to alleviate congestion and strain on the network. The  internet\u2019s backbone held up pretty well during the early days of the pandemic, despite significant pressure.\n  \u201cWe\u2019ve lived through this scenario and did well without caps on bandwidth usage, which makes you question why they are needed at all,\u201d said David Choffnes, an associate professor at the Khoury College of Computer Sciences at Northeastern University.\n  Providers have attributed strong internet performance to round-the-clock work being done on the network, which was possible because of billions of dollars of further investment. The size of the cost is another reason why providers say heavy users are often asked to pay more.\n  In September, U.S. households used an average of 383.8 gigabytes of data, according to OpenVault. So far this month, consumption has increased to 413.3 gigabytes. This is up from 361 gigabytes in January, which had been the latest monthly record of usage prior to the pandemic.\n  Comcast said even with pandemic usage, 95% of its customers don\u2019t reach its limit, which it recently upped to 1.2 terabytes from 1 terabyte. For some Comcast subscribers, the price of unlimited packages has also been lowered, a spokeswoman said.\n  Similarly, Cox raised its data allowance by 25% to 1.25 terabytes a month, and it waives the overage fee the first time a customer exceeds their data allowance, according to a spokesman.\n  Verizon Communications  consumer unit chief Ronan Dunne said the average subscriber of its Fios service uses more than 500 gigabytes a month without taxing the fiber-optic system\u2019s infrastructure, so the company doesn\u2019t charge fees to reduce consumption.\n  Longtime Cox customer Daniel Waltz in Oklahoma, an inactive commercial pilot who recently started business school, said during the pandemic he upgraded to an unlimited plan after reaching the limit a few times.\n  As he spent more time at home, his internet usage shot up, mostly due to virtual classes and gaming.\n  Mr. Waltz\u2019s bill increased by about $50 a month to roughly $161 as a result of the upgrade, but he said he no longer has to worry about facing an overage fee. He also said he feels his internet quality improved.\n  When Comcast\u2019s data cap was reinstated in July, Shane Bailey, a web developer in Jacksonville, Fla., said he and his family came close or exceeded the limit a few times before he chose to upgrade to an unlimited plan for an additional $30 a month.\n  Both he and his wife are working from home, while his children are learning from home and often streaming TV shows or playing educational games.\n  Mr. Bailey said the $30 upgrade gave him the peace of mind of no longer having to worry about overage fees. \u201cRight now it\u2019s cheaper than the gas I would normally be using to drive to work,\u201d he said.\n  Appeared in the October 26, 2020, print edition as &#39;Workers at Home Face Caps on Data Use Add Data Caps to Your Work From Home.&#39;", "posttime": "2020-10-26 11:05:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e92\u8054\u7f51,working", "title": "\u968f\u7740\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546\u6062\u590d\u4ed6\u4eec\u5728\u75ab\u60c5\u5f00\u59cb\u65f6\u6682\u505c\u7684\u6570\u636e\u4e0a\u9650\uff0c\u5728\u5bb6\u5de5\u4f5c\u7684\u7528\u6237\u6b63\u5728\u9047\u5230\u4e92\u8054\u7f51\u4f7f\u7528\u9650\u5236", "title_en": "Users working from home are running into internet usage limits as ISPs reinstate data caps they suspended at the beginning of the pandemic", "transed": 1, "url": "https://www.wsj.com/articles/americans-working-from-home-face-internet-usage-limits-11603638000?mod=djemalertNEWS", "via": "", "real_tags": ["\u4e92\u8054\u7f51", "working"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031181, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8bb8\u591a\u5927\u578bWeb\u670d\u52a1\u4e2d\uff0c\u591a\u5c42\u65e0\u72b6\u6001\u548c\u6709\u72b6\u6001\u670d\u52a1\u7531\u8d1f\u8f7d\u5747\u8861\u5668\u5206\u9694\u3002\u8d1f\u8f7d\u5e73\u8861\u53ef\u4ee5\u4f7f\u7528\u4e13\u7528\u786c\u4ef6\u3001\u4f7f\u7528\u4e13\u7528\u8f6f\u4ef6\u8d1f\u8f7d\u5e73\u8861\u5668\u3001\u4f7f\u7528DNS\u6280\u5de7\u6216\u901a\u8fc7\u5ba2\u6237\u7aef\u4e2d\u7684\u8d1f\u8f7d\u5e73\u8861\u673a\u5236\u6765\u5b9e\u73b0\u3002\u5728\u5927\u578b\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684\u8d44\u6e90\u548c\u7ea6\u675f\u53ef\u80fd\u5dee\u522b\u5f88\u5927\u3002\u6709\u4e9b\u5c42\u662f\u65e0\u72b6\u6001\u7684\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6c34\u5e73\u6269\u5c55\u5230\u8bb8\u591a\u673a\u5668\u3002\u7531\u4e8e\u9700\u8981\u8bbf\u95ee\u72b6\u6001\u6216\u4e89\u7528\u67d0\u4e9b\u5176\u4ed6\u5171\u4eab\u8d44\u6e90\uff0c\u5176\u4ed6\u5c42\u53ef\u80fd\u4f1a\u53d7\u5230\u66f4\u591a\u9650\u5236\u3002\n\u96c6\u4e2d\u5f0f\u8d1f\u8f7d\u5e73\u8861\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5f88\u597d\u5730\u5c06\u8d1f\u8f7d\u5206\u5e03\u5728\u4e00\u7ec4\u673a\u5668\u4e0a\u3002\u5b83\u4eec\u8ddf\u8e2a\u5b83\u4eec\u53d1\u9001\u5230\u6bcf\u53f0\u673a\u5668\u7684\u8d1f\u8f7d\u91cf(\u901a\u5e38\u57fa\u4e8e\u7b80\u5355\u7684\u6d4b\u91cf\uff0c\u5982\u8fde\u63a5\u8ba1\u6570)\u3002\u56e0\u4e3a\u5b83\u4eec\u662f\u96c6\u4e2d\u5f0f\u7684\uff0c\u6240\u4ee5\u8d1f\u8f7d\u5e73\u8861\u5668\u901a\u5e38\u4e0d\u9700\u8981\u62c5\u5fc3\u4ece\u5176\u4ed6\u6765\u6e90\u53d1\u9001\u7684\u8d1f\u8f7d\u3002\u4ed6\u4eec\u5b8c\u5168\u63a7\u5236\u7740\u8377\u8f7d\u7684\u5206\u914d\u3002\n\u5c3d\u7ba1\u6709\u8fd9\u4e00\u4f18\u52bf\uff0c\u4e13\u7528\u8d1f\u8f7d\u5747\u8861\u5668\u901a\u5e38\u662f\u4e0d\u53d7\u6b22\u8fce\u7684\u3002\u5b83\u4eec\u589e\u52a0\u4e86\u6210\u672c\u3001\u5ef6\u8fdf\u548c\u590d\u6742\u6027\uff0c\u5e76\u53ef\u80fd\u5f15\u5165\u5355\u70b9\u6545\u969c\u3002\u5c06\u8d1f\u8f7d\u5e73\u8861\u4efb\u52a1\u4ea4\u7ed9\u6bcf\u4e2a\u4e0a\u6e38\u5ba2\u6237\u7aef\u4e5f\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u4f1a\u5e26\u6765\u4ece\u591a\u4e2a\u5730\u65b9\u516c\u5e73\u5e73\u8861\u8d1f\u8f7d\u7684\u6311\u6218\u3002\u5728\u5177\u6709\u5927\u91cf\u5ba2\u6237\u7aef\u548c\u76f8\u5f53\u540c\u7c7b\u8c03\u7528\u7684\u5927\u578b\u7cfb\u7edf\u4e2d\uff0c\u7eaf\u968f\u673a\u7cfb\u7edf(\u5982DNS\u5faa\u73af\u8c03\u5ea6)\u53ef\u4ee5\u975e\u5e38\u597d\u5730\u5de5\u4f5c\u3002\u5728\u8f83\u5c0f\u7684\u7cfb\u7edf\u4e2d\uff0c\u5728\u6bcf\u4e2a\u4e0b\u6e38\u670d\u52a1\u53ea\u80fd\u5904\u7406\u5c11\u91cf\u6216\u5e76\u53d1\u8bf7\u6c42\u7684\u7cfb\u7edf\u4e2d\uff0c\u4ee5\u53ca\u5728\u8bf7\u6c42\u662f\u5f02\u6784\u7684\u7cfb\u7edf\u4e2d\uff0c\u8d1f\u8f7d\u5e73\u8861\u901a\u5e38\u6bd4\u968f\u673a\u8d1f\u8f7d\u5e73\u8861\u66f4\u597d\u3002\n\u901a\u8fc7\u8de8\u6240\u6709\u5ba2\u6237\u7aef\u5206\u53d1\u6709\u5173\u7cfb\u7edf\u8d1f\u8f7d\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\u7684\u5206\u5e03\u5f0f\u8d1f\u8f7d\u5e73\u8861\uff0c\u81f3\u5c11\u5728\u4ee4\u4eba\u6ee1\u610f\u7684\u60c5\u51b5\u4e0b\u662f\u8fd9\u6837\u3002\u5728\u4e0d\u540c\u7684\u6e90\u4e4b\u95f4\u4e0d\u65ad\u5171\u4eab\u51c6\u786e\u7684\u8d1f\u8f7d\u4fe1\u606f\u7684\u5f00\u9500\u53ef\u80fd\u5f88\u9ad8\uff0c\u56e0\u6b64\u8ba9\u6bcf\u4e2a\u6e90\u5728\u4e00\u4e2a\u7f13\u5b58\u526f\u672c\u4e2d\u5de5\u4f5c\u662f\u5f88\u6709\u8bf1\u60d1\u529b\u7684\u3002\u6b64\u6570\u636e\u53ef\u4ee5\u4ece\u4e0b\u6e38\u6216\u5176\u4ed6\u5ba2\u6237\u7aef\u5b9a\u671f\u5237\u65b0\u3002\n\u201c\u4e24\u4e2a\u968f\u673a\u9009\u62e9\u7684\u529b\u91cf\uff1a\u6280\u672f\u548c\u7ed3\u679c\u7684\u8c03\u67e5\u201d\uff0cMitzenmacher et\u3002\u827e\u5c14\u3002\u8c03\u67e5\u4e86\u4e00\u4e9b\u4e0e\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u76f8\u5173\u7684\u7814\u7a76\u3002\u6574\u4e2a\u8c03\u67e5\u90fd\u5f88\u597d\u8bfb\uff0c\u4f46\u6700\u6709\u8da3\u7684\u7ed3\u679c\u4e4b\u4e00\u662f\u5173\u4e8e\u5ef6\u8fdf\u6570\u636e(\u5982\u4e0a\u9762\u63d0\u5230\u7684\u7f13\u5b58\u8d1f\u8f7d\u7ed3\u679c)\u5bf9\u8d1f\u8f7d\u5e73\u8861\u7684\u5f71\u54cd\u3002\u56de\u60f3\u8d77\u6765\uff0c\u7ed3\u679c\u76f8\u5f53\u5408\u4e4e\u903b\u8f91\uff0c\u4f46\u53ef\u80fd\u4e0e\u5927\u591a\u6570\u5de5\u7a0b\u5e08\u7684\u6700\u521d\u9884\u671f\u4e0d\u7b26\u3002\n\u4f7f\u7528\u9648\u65e7\u6570\u636e\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u4f1a\u5bfc\u81f4\u7fa4\u7ec4\u884c\u4e3a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u6c42\u5c06\u5411\u4ee5\u524d\u5b89\u9759\u7684\u4e3b\u673a\u805a\u96c6\u7684\u65f6\u95f4\u6bd4\u4f7f\u8be5\u4e3b\u673a\u771f\u6b63\u53d8\u5f97\u975e\u5e38\u7e41\u5fd9\u6240\u9700\u7684\u65f6\u95f4\u957f\u5f97\u591a\u3002\u4e0b\u4e00\u6b21\u5237\u65b0\u7f13\u5b58\u7684\u52a0\u8f7d\u6570\u636e\u5c06\u628a\u670d\u52a1\u5668\u653e\u5728\u8d1f\u8f7d\u5217\u8868\u7684\u6700\u524d\u9762\uff0c\u5e76\u4e14\u5b83\u5c06\u518d\u6b21\u53d8\u5f97\u5b89\u9759\u3002\u7136\u540e\u53c8\u5fd9\u788c\u8d77\u6765\uff0c\u56e0\u4e3a\u4e0b\u4e00\u7fa4\u725b\u7fa4\u770b\u5230\u8fd9\u91cc\u5f88\u5b89\u9759\u3002\u5fd9\u7740\u5462\u3002\u5b89\u9759\u3002\u5fd9\u7740\u5462\u3002\u5b89\u9759\u3002\u8bf8\u82e5\u6b64\u7c7b\u3002\n\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b8c\u5168\u653e\u5f03\u8d1f\u8f7d\u5e73\u8861\uff0c\u53ea\u9700\u968f\u673a\u9009\u62e9\u4e00\u53f0\u4e3b\u673a\u3002\u6839\u636e\u8d1f\u8f7d\u7387\u7684\u4e0d\u540c\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u8bb8\u591a\u5178\u578b\u7684\u8d1f\u8f7d\uff0c\u9009\u62e9\u968f\u673a\u4e3b\u673a\u4f1a\u964d\u4f4e\u5ef6\u8fdf\u5e76\u51cf\u5c11\u541e\u5410\u91cf\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u6d6a\u8d39\u670d\u52a1\u5668\u4e0a\u7684\u8d44\u6e90\uff0c\u800c\u8fd9\u4e9b\u8d44\u6e90\u6700\u7ec8\u4f1a\u4ee5\u4e0d\u5e78\u548c\u5b89\u9759\u544a\u7ec8\u3002\nMitzenmacher\u8c03\u67e5\u7684\u7814\u7a76\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\u5c1d\u8bd5\u4e24\u4e2a\u4e3b\u673a\uff0c\u7136\u540e\u9009\u62e9\u8d1f\u8f7d\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u8fd9\u53ef\u4ee5\u76f4\u63a5\u5b8c\u6210(\u901a\u8fc7\u67e5\u8be2\u4e3b\u673a)\uff0c\u4f46\u5728\u7f13\u5b58\u7684\u52a0\u8f7d\u6570\u636e\u4e0a\u4e5f\u8fd0\u884c\u5f97\u51fa\u5947\u5730\u597d\u3002\n\u4e3a\u4e86\u8bf4\u660e\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u5bf9\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7cfb\u7edf\u8fdb\u884c\u4e86\u6a21\u62df\u3002\u6bcf\u9694\u4e00\u79d2\u5c31\u6709\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe\u5177\u670910\u53f0\u670d\u52a1\u5668\u7684\u7cfb\u7edf\u3002\u6bcf8\u79d2\u4ece\u670d\u52a1\u5668\u4e0a\u7684\u961f\u5217\u4e2d\u5220\u9664\u6700\u65e9\u7684\u8bf7\u6c42(\u5982\u679c\u6709)\u3002\u8d1f\u8f7d\u5e73\u8861\u662f\u4f7f\u7528\u670d\u52a1\u5668\u961f\u5217\u957f\u5ea6\u7684\u7f13\u5b58\u526f\u672c\u5b8c\u6210\u7684\uff0c\u6bcfN\u79d2\u66f4\u65b0\u4e00\u6b21\u3002\u6211\u8003\u8651\u4e86\u56db\u79cd\u65b9\u6cd5\uff1a\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u670d\u52a1\u5668\uff0c\u9009\u62e9\u6700\u597d\u7684\u670d\u52a1\u5668\uff0c\u4e24\u4e2a\u968f\u673a\u9009\u62e9\u4e2d\u6700\u597d\u7684\u548c\u4e09\u4e2a\u968f\u673a\u9009\u62e9\u4e2d\u6700\u597d\u7684\u3002\n\u6b63\u5982\u60a8\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u5f53\u6709\u5b8c\u7f8e\u7684\u3001\u672a\u5ef6\u8fdf\u7684\u4fe1\u606f\u53ef\u7528\u65f6\uff0c\u9009\u62e9\u6700\u597d\u7684\u65b9\u6cd5\u6548\u679c\u6700\u597d\u3002\u5728\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u968f\u673a\u6311\u9009\u65b9\u6cd5\u7684\u6548\u679c\u5f88\u5dee\uff0c\u5bfc\u81f4\u4e86\u6240\u6709\u65b9\u6cd5\u4e2d\u6700\u7cdf\u7cd5\u7684\u6392\u961f\u65f6\u95f4\u3002\u968f\u7740\u6570\u636e\u5e74\u9f84\u7684\u589e\u52a0\uff0c\u6311\u9009\u6700\u597d\u7684\u65b9\u6cd5\u4f1a\u56e0\u4e3a\u7f8a\u7fa4\u6548\u5e94\u800c\u53d8\u5f97\u8d8a\u6765\u8d8a\u5dee\uff0c\u5f88\u5feb\u5c31\u4f1a\u8d85\u8fc7\u968f\u673a\u65b9\u6cd5\u6210\u4e3a\u6700\u5dee\u7684\u65b9\u6cd5\u3002\n\u4e09\u5c40\u56db\u80dc\u6392\u5728\u7b2c\u4e8c\u4f4d\uff0c\u8868\u73b0\u4e0d\u9519\u3002\u5b83\u83b7\u5f97\u4e86\u7b2c\u4e00\u540d\uff0c\u4f46\u968f\u7740\u5ef6\u8fdf\u7684\u589e\u52a0\uff0c\u5b83\u88ab\u8ba9\u7ed9\u4e862\u80dc2\u8d1f\u7684\u7ed3\u679c\u3002\u663e\u7136\uff0c\u5f53k\u63a5\u8fd1\u670d\u52a1\u5668\u6570\u91cf\u65f6\uff0ck\u4e2d\u6700\u4f73\u7684\u884c\u4e3a\u5c06\u63a5\u8fd1Best\u7684\u884c\u4e3a\u3002\u5728\u6b64\u6a21\u62df\u7ed3\u675f\u7684\u8fc7\u7a0b\u4e2d\uff0c2\u80dc2\u53d6\u59cb\u7ec8\u662f\u5f3a\u6709\u529b\u7684\u5f15\u5bfc\u8005\u3002\u5728\u7ed9\u5b9a\u8fd9\u4e9b\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5728\u5237\u65b0\u95f4\u969470\u5de6\u53f3\u5f00\u59cb\u8f93\u7ed9\u968f\u673a\u65b9\u6cd5\u3002\u5b83\u5728\u4ece10\u523070\u7684\u533a\u95f4\u5185\u662f\u660e\u663e\u7684\u9886\u5148\u8005\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u8868\u73b0\u3002\n\u4e8c\u9009\u4e00\u662f\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u7ed3\u5408\u4e86\u4e24\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\uff1a\u5b83\u4f7f\u7528\u5173\u4e8e\u8d1f\u8f7d\u7684\u771f\u5b9e\u4fe1\u606f\u6765\u9009\u62e9\u4e3b\u673a(\u4e0e\u968f\u673a\u4e0d\u540c)\uff0c\u4f46\u6bd4\u5176\u4ed6\u4e24\u79cd\u65b9\u6cd5\u66f4\u5f3a\u70c8\u5730\u62d2\u7edd\u7f8a\u7fa4\u884c\u4e3a\u3002\n\u770b\u770b\u4e24\u4e2a\u968f\u673a\u9009\u62e9\u7684\u529b\u91cf\uff0c\u4ee5\u83b7\u5f97\u66f4\u6709\u529b\u7684\u6570\u5b66\u8bba\u8bc1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u66f4\u4ee4\u4eba\u60ca\u8bb6\u7684\u5730\u65b9\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u771f\u7684\u5de5\u4f5c\u5f97\u5f88\u597d\u3002", "note_en": "In many large-scale web services, multiple layers of stateless and stateful services are seperated by load balancers. Load balancing can be done with dedicated hardware, with dedicated software load balancers, using DNS trickery or through a load-balancing mechanism in the client. In large systems, the resources and constraints at each layer can vary widely. Some layers are stateless, and easily scale horizontally to many machines. Other layers may be more constrained, either due to the need to access state or contention for some other shared resource.\n Centralized load balancing solutions can distribute load over a fleet of machines very well. They track the amount of load they are sending to each machine (usually based on a simple measurement like connection count). Because they are centralized, load balancers typically don&#39;t need to worry about load sent from other sources. They have complete control over the distribution of load.\n Despite this advantage, dediced load balancers are often undesirable. They add cost, latency, complexity, and may introduce a single point of failure. Handing the task of load balancing to each upstream client is also possible, but introduces the challenge of fairly balancing the load from multiple places. In large systems with large numbers of clients and fairly homogeneous calls, a purely random system like DNS round robin can work very well. In smaller systems, systems where each downstream service can only handle a small number or concurrent requests, and systems where requests are heterogeneous it&#39;s often desirable to load balance better than random.\n Perfect distributed load balancing could be done, at least in the happy case, by distributing information about system load across all the clients. The overhead of constantly sharing the exact load information between different sources can be high, so it&#39;s tempting to have each source work off a cached copy. This data can periodically be refreshed from downstream, or from other clients.\n  In  The Power of Two Random Choices: A Survey of Techniques and Results, Mitzenmacher et. al. survey some research very relevant to this problem. The entire survey is good reading, but one of the most interesting results is about the effects of delayed data (like the cached load results mentioned above) on load balancing. The results are fairly logical in retrospect, but probably don&#39;t match most engineers&#39; first expectations.\n Using stale data for load balancing leads to a herd behavior, where requests will herd toward a previously quiet host for much longer than it takes to make that host very busy indeed. The next refresh of the cached load data will put the server high up the load list, and it will become quiet again. Then busy again as the next herd sees that it&#39;s quiet. Busy. Quiet. Busy. Quiet. And so on.\n One possible solution would be to give up on load balancing entirely, and just pick a host at random. Depending on the load factor, that can be a good approach. With many typical loads, though, picking a random host degrades latency and reduces throughput by wasting resources on servers which end up unlucky and quiet.\n The approach taken by the studies surveyed by Mitzenmacher is to try two hosts, and pick the one with the least load. This can be done directly (by querying the hosts) but also works surprisingly well on cached load data.\n To illustrate how well this works, I ran a simulation of a very simplistic system. Every second one request arrives at a system with 10 servers. Every 8 seconds the oldest request (if any) is removed from the queue on the servers. Load balancing is done with a cached copy of the server queue lengths, updated every N seconds. I considered four approaches: chose a random server, chose the best server, best of two random choices and best of three random choices.\n  As you can expect, the  pick the best approach worked best when perfect undelayed information was available. In the same case, the random pick approach worked poorly, leading to the worst queue times of any of the approaches. As the age of the data increases, the  pick the best approach becomes worse and worse because of herding and soon overtakes the random approach as the worst one.\n Best of 3 starts in second place, and puts in a good performance. It gains first place, only to cede it to  best of 2 as the delay increases. Clearly, the behavior for  best of k will approach the behavior of  best as k approaches the number of servers.  Best of 2 remains the strong leader all the way to the end of this simulation. Given these parameters it would start losing to the random approach around a refresh interval of 70. It is the clear leader for intervals over the range from 10 to 70, which is an impressive performance for such a simple approach.\n Best of 2 is good because it combines the best of both worlds: it uses real information about load to pick a host (unlike random), but rejects herd behavior much more strongly than the other two approaches.\n Take a look at  The Power of Two Random Choices for a much stronger mathematical argument, and some more surprising places this algorithm works really well.", "posttime": "2020-10-26 10:57:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9009\u62e9,random,\u8d1f\u8f7d", "title": "\u4e24\u4e2a\u968f\u673a\u9009\u62e9\u7684\u529b\u91cf", "title_en": "The power of two random choices", "transed": 1, "url": "https://brooker.co.za/blog/2012/01/17/two-random.html", "via": "", "real_tags": ["\u9009\u62e9", "random", "\u8d1f\u8f7d"]}, {"category": "", "categoryclass": "", "imagename": "a1aa354cff0ef82605b6ecfb3c048cdd.jpeg", "infoid": 1031180, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "HBO\u7684\u5207\u5c14\u8bfa\u8d1d\u5229\u8ba9\u6211\u4eec\u5bf9\u6838\u53cd\u5e94\u53ef\u80fd\u4ea7\u751f\u7684\u6bc1\u706d\u6027\u540e\u679c\u6709\u4e86\u4e00\u4e2a\u521d\u6b65\u7684\u4e86\u89e3\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5373\u4f7f\u5728\u4eca\u5929\uff0c\u4ece\u9047\u96be\u8005\u4eba\u6570\u548c\u5f53\u5c40\u5f53\u65f6\u7684\u5904\u7406\u65b9\u5f0f\u6765\u770b\uff0c\u5207\u5c14\u8bfa\u8d1d\u5229\u4e8b\u6545\u4ecd\u88ab\u8ba4\u4e3a\u662f\u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6838\u707e\u96be\u4e4b\u4e00\u3002\u5982\u679c\u8fd9\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u5fc5\u987b\u8bf4\uff0c\u6b63\u662f\u8fd9\u8d77\u4e8b\u6545\u8ba9\u4e16\u754c\u610f\u8bc6\u5230\u4e86\u653e\u5c04\u6027\u548c\u6838\u53cd\u5e94\u7684\u98ce\u9669\u3002\u56e0\u6b64\uff0c\u5207\u5c14\u8bfa\u8d1d\u5229\u53ef\u80fd\u662f\u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6838\u4e8b\u4ef6\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u751a\u81f3\u662f\u6700\u7cdf\u7cd5\u7684\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6211\u4eec\u5982\u4f55\u8861\u91cf\u8fd9\u4e9b\u53ef\u6015\u7684\u4e8b\u4ef6\u3002\n\u5c31\u5728\u5207\u5c14\u8bfa\u8d1d\u5229\u4e8b\u6545\u53d1\u751f\u524d\u51e0\u5e74\uff0c\u65e0\u77e5\u3001\u8150\u8d25\u548c\u5b8c\u5168\u7f3a\u4e4f\u5e38\u8bc6\u5bfc\u81f4\u4e86\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u653e\u5c04\u6027\u4e8b\u6545\u4e4b\u4e00\uff0c\u4e5f\u7edd\u5bf9\u662f\u6574\u4e2a\u7f8e\u6d32\u5927\u9646\u6700\u4e25\u91cd\u7684\u4e8b\u6545\u3002\u88ab\u79f0\u4e3a\u534e\u96f7\u65af\u7684\u94b4-60\u4e8b\u6545\uff0c\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4eba\u7c7b\u611a\u8822\u7684\u9519\u8bef\u6700\u7ec8\u6c61\u67d3\u4e86\u51e0\u4e4e\u6574\u4e2a\u56fd\u5bb6\uff0c\u5e76\u4f7f\u6210\u5343\u4e0a\u4e07\u7684\u4eba\u66b4\u9732\u5728\u653e\u5c04\u6027\u5371\u9669\u4e2d\u3002\n\u8fd9\u4e00\u5207\u90fd\u53d1\u751f\u57281983\u5e7412\u67086\u65e5\u7684\u665a\u4e0a\uff0c\u5f53\u65f6\u534e\u96f7\u65af\u4e13\u79d1\u533b\u7597\u4e2d\u5fc3\u7684\u4e24\u540d\u7ef4\u4fee\u5de5Vicente Sotelo\u548cRicardo Hern\u00e1ndez\u88ab\u5141\u8bb8\u4ece\u533b\u9662\u7684\u4ed3\u5e93\u91cc\u968f\u5fc3\u6240\u6b32\u5730\u4e70\u5356\u4efb\u4f55\u4e1c\u897f\u3002\u5728\u5806\u79ef\u5982\u5c71\u7684\u5783\u573e\u4e2d\uff0c\u4ed6\u4eec\u770b\u5230\u4e86\u4e00\u53f0\u673a\u5668\uff0c\u5982\u679c\u4ed6\u4eec\u628a\u5b83\u5206\u6210\u51e0\u5757\u51fa\u552e\u7684\u8bdd\uff0c\u53ef\u4ee5\u7ed9\u4ed6\u4eec\u5e26\u6765\u5f88\u591a\u94b1\u3002\u8fd9\u53f0\u653e\u7597\u673a\u662f\u533b\u9662\u4ece\u5fb7\u514b\u8428\u65af\u5dde\u7684\u4e00\u5bb6\u516c\u53f8\u975e\u6cd5\u8d2d\u4e70\u7684\u3002\u90a3\u6b3e\u7279\u6b8a\u7684\u578b\u53f7\u5df2\u7ecf\u505c\u6b62\u6d41\u901a\uff0c\u56e0\u4e3a\u5b83\u6709\u5236\u9020\u7f3a\u9677\u3002\n\u957f\u8bdd\u77ed\u8bf4\uff0c\u6587\u68ee\u7279\u548c\u91cc\u5361\u591a\u51b3\u5b9a\u7528\u4ed6\u4eec\u4ec5\u6709\u7684\u51e0\u4e2a\u5de5\u5177\u548c\u4e13\u4e1a\u77e5\u8bc6\u6765\u62c6\u89e3\u8fd9\u53f0\u673a\u5668\uff1a\u7528\u9524\u5b50\u6572\u6253\u5b83\u3002\u5f53\u4ed6\u4eec\u5230\u8fbe\u673a\u5668\u7684\u5f15\u64ce\u5934\u65f6\uff0c\u4ed6\u4eec\u597d\u5947\u5730\u60f3\u770b\u770b\u90a3\u4e2a\u5927\u7ea6100\u516c\u65a4\u91cd\u7684\u5927\u7bb1\u5b50\u91cc\u88c5\u7684\u662f\u4ec0\u4e48\u3002\u4ed6\u4eec\u4e0d\u77e5\u9053\u7684\u662f\uff0c\u901a\u8fc7\u6253\u7834\u76d2\u5b50\uff0c\u4ed6\u4eec\u91ca\u653e\u4e866010\u7c92\u94b4-60\uff0c\u8fd9\u662f\u4e00\u79cd\u4eba\u5de5\u5408\u6210\u7684\u653e\u5c04\u6027\u94b4\u540c\u4f4d\u7d20\uff0c\u529b\u91cf\u4e3a1003\u5c45\u91cc\u3002\u5ba2\u89c2\u5730\u8bf4\uff0c\u957f\u65f6\u95f4\u63a5\u89e6\u4e00\u4efd\u5496\u55b1\u53ef\u80fd\u4f1a\u70b8\u4f24\u4f60\u7684\u4e00\u4e9b\u5668\u5b98\u3002\n\u5728\u6ee1\u8db3\u4e86\u4ed6\u4eec\u7684\u597d\u5947\u5fc3\u540e\uff0c\u8fd9\u4e24\u4e2a\u4eba\u628a\u516c\u53f8\u7684\u76ae\u5361\u8f66\u88c5\u4e0a\u8f66\uff0c\u5f53\u7136\u5305\u62ec\u673a\u5668\u4e0a\u7684\u788e\u7247\uff0c\u7136\u540e\u628a\u6240\u6709\u4e1c\u897f\u90fd\u5e26\u5230\u4e86\u4e00\u4e2a\u56de\u6536\u5783\u573e\u7bb1\u91cc\u3002\u4e00\u8def\u4e0a\uff0c\u673a\u5668\u7684\u5f15\u64ce\u5934\u7ee7\u7eed\u6563\u5e03\u7740\u94b4-60\u5f39\u4e38\u3002\u5361\u8f66\u7684\u540e\u90e8\u4e5f\u88c5\u6ee1\u4e86\u8fd9\u4e9b\u5c0f\u7684\u653e\u5c04\u6027\u788e\u7247\u3002\u4ed6\u4eec\u5f88\u4e50\u610f\u628a\u6240\u6709\u7684\u4e1c\u897f\u90fd\u4f4e\u4ef7\u5356\u51fa\u53bb\uff0c\u4e8e\u662f\u51b3\u5b9a\u5230\u6b64\u4e3a\u6b62\u3002\n\u6240\u4ee5\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u4eba\u4e0d\u4ec5\u63a5\u89e6\u5230\u4e86\u8fd9\u4e9b\u9ad8\u653e\u5c04\u6027\u7269\u8d28\uff0c\u800c\u4e14\u5728\u53bb\u5783\u573e\u7bb1\u7684\u8def\u4e0a\uff0c\u8fd9\u4e9b\u788e\u7247\u6563\u843d\u5728\u8857\u4e0a\uff0c\u57fa\u672c\u4e0a\u7559\u4e0b\u4e86\u4e00\u679a\u94b4-60\u70b8\u5f39\u3002\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9\u3002\u6587\u68ee\u7279\u628a\u76ae\u5361\u505c\u5728\u4ed6\u5bb6\u9644\u8fd1\uff0c\u540e\u6765\u624d\u53d1\u73b0\u7535\u6c60\u88ab\u5077\u4e86\u3002\u8fd9\u8f86\u73b0\u5df2\u5177\u6709\u653e\u5c04\u6027\u7684\u5361\u8f66\u88ab\u505c\u653e\u5728\u683c\u5170\u5fb7\u6cb3\u9644\u8fd1\u4e00\u4e2a\u4eba\u53e3\u7a20\u5bc6\u7684\u793e\u533a\u7ea6\u4e09\u4e2a\u6708\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u5783\u573e\u7bb1\u91cc\uff0c\u673a\u5668\u7684\u5f15\u64ce\u5934\u548c\u6240\u6709\u7684\u90e8\u4ef6\u90fd\u5806\u6210\u4e00\u5806\uff0c\u4e0d\u65ad\u5730\u88ab\u8d77\u91cd\u673a\u64cd\u7eb5\u3002\u8d77\u91cd\u673a\u7684\u78c1\u573a\u81ea\u52a8\u6355\u6349\u5230\u5f39\u4e38\u548c\u53d1\u52a8\u673a\u5934\u90e8\u7684\u653e\u5c04\u6027\uff0c\u6c61\u67d3\u4e86\u5b83\u4eec\u63a5\u89e6\u5230\u7684\u91d1\u5c5e\u3002\u5982\u679c\u8fd9\u8fd8\u4e0d\u591f\uff0c\u8fd9\u4e2a\u5783\u573e\u7bb1\u4e0e\u51e0\u5bb6\u51b6\u70bc\u5382\u8fbe\u6210\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u8fd9\u4e9b\u5de5\u5382\u5c06\u628a\u5e9f\u91d1\u5c5e\u7194\u5316\uff0c\u4ee5\u5efa\u9020\u5efa\u7b51\u6750\u6599\uff0c\u751a\u81f3\u684c\u5b50\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u5230\uff0c\u6240\u6709\u8fd9\u4e9b\u653e\u5c04\u6027\u91d1\u5c5e\u90fd\u76f4\u63a5\u8fdb\u5165\u4e86\u5de5\u5382\u3002\u636e\u4f30\u8ba1\uff0c\u5168\u56fd\u5404\u5730\u52a0\u5de5\u548c\u8fd0\u8f93\u4e862\u4e07\u5428\u653e\u5c04\u6027\u91d1\u5c5e\uff0c\u5176\u4e2d\u4e00\u4e9b\u751a\u81f3\u51fa\u53e3\u5230\u4e86\u7f8e\u56fd\u3002\n\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u53d1\u751f\u5728\u6587\u68ee\u7279\u548c\u91cc\u5361\u591a\u5f15\u7206\u94b4-60\u70b8\u5f39\u540e\u7684\u4e00\u5468\u5185\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u653e\u5c04\u6027\u7269\u8d28\u5c06\u88ab\u5e26\u5230\u5168\u56fd\u5404\u5730\uff0c\u800c\u6ca1\u6709\u4eba\u77e5\u9053\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u57281984\u5e741\u670816\u65e5\u66dd\u5149\u7684\uff0c\u5f53\u65f6\u51b6\u70bc\u516c\u53f8\u7684\u4e00\u8f86\u8fd0\u8f93\u8f66\u6b63\u5728\u65b0\u58a8\u897f\u54e5\u5dde\u9001\u8d27\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u53f8\u673a\u8ff7\u8def\u4e86\uff0c\u4e3a\u4e86\u8bd5\u56fe\u56de\u5230\u4ed6\u7684\u8def\u7ebf\u4e0a\uff0c\u4ed6\u7ecf\u8fc7\u4e86\u6d1b\u65af\u963f\u62c9\u83ab\u65af\u56fd\u5bb6\u5b89\u5168\u5b9e\u9a8c\u5ba4(Los Alamos National Security Lab)\u9644\u8fd1\uff0c\u66fc\u54c8\u987f\u9879\u76ee(\u539f\u5b50\u5f39)\u5c31\u662f\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u5ba4\u5f00\u53d1\u51fa\u6765\u7684\u3002\n\u5b9e\u9a8c\u5ba4\u6709\u653e\u5c04\u6027\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u63d0\u9192\u5f53\u5c40\uff0c\u8fd9\u6837\u4efb\u4f55\u653e\u5c04\u6027\u7269\u8d28\u90fd\u4e0d\u4f1a\u5728\u672a\u7ecf\u6388\u6743\u548c\u9002\u5f53\u5904\u7406\u7684\u60c5\u51b5\u4e0b\u79bb\u5f00\u5b9e\u9a8c\u5ba4\u3002\u56e0\u6b64\uff0c\u5f53\u5361\u8f66\u901a\u8fc7\u65f6\uff0c\u4f20\u611f\u5668\u7acb\u5373\u62cd\u6444\u4e86\u5927\u95e8\u7684\u7167\u7247\uff0c\u62c5\u5fc3\u5f53\u5c40\u53ef\u80fd\u53d1\u751f\u6838\u7206\u70b8\u3002\u7ecf\u8fc7\u5927\u91cf\u8c03\u67e5\uff0c\u56e2\u961f\u6700\u7ec8\u8bbe\u6cd5\u5728\u4e00\u5bb6\u6c7d\u8f66\u65c5\u9986\u627e\u5230\u4e86\u53f8\u673a\uff0c\u5361\u8f66\u505c\u5728\u5916\u9762\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u5f53\u4ed6\u51fa\u95e8\u65f6\uff0c\u4ed6\u53d1\u73b0\u4e00\u6574\u961f\u4eba\u90fd\u7a7f\u7740\u7279\u6b8a\u7684\u897f\u88c5\u5728\u5206\u6790\u4ed6\u7684\u5361\u8f66\u3002\n\u4ed6\u4eec\u53d1\u73b0\u5361\u8f66\u7684\u8f90\u5c04\u91cf\u7ea6\u4e3a1000\u96f7\u59c6\u3002\u8ba9\u6211\u4eec\u5ba2\u89c2\u5730\u770b\u5f85\u8fd9\u4e00\u70b9\uff1aX\u5149\u673a\u8f90\u5c040.2rems\uff1b\u4e00\u540dX\u5c04\u7ebf\u6280\u5e08\u4e00\u5e74\u53ea\u80fd\u66b4\u9732\u572850rems\u4ee5\u4e0b\uff1b300rems\u5230400rems\u7684\u66b4\u9732\u572850%\u7684\u2026\u75c5\u4f8b\u4e2d\u53ef\u80fd\u662f\u81f4\u547d\u7684\u3002\u8fd9\u8f86\u5361\u8f66\u7684\u8f90\u5c04\u91cf\u662f\u4e00\u5343\uff0c\u800c\u4e14\u5df2\u7ecf\u8fd9\u6837\u505a\u4e86\u51e0\u4e2a\u6708\u4e86\u3002\n\u7ecf\u8fc7\u5ba1\u8baf\uff0c\u5b9e\u9a8c\u5ba4\u5f53\u5c40\u51b3\u5b9a\u8054\u7cfb\u8d1f\u8d23\u6838\u5b89\u5168\u7684\u653f\u5e9c\u673a\u6784CNSNS\u3002\u4ed6\u4eec\u4e00\u8d77\u8ffd\u67e5\u4e86\u95ee\u9898\u7684\u6839\u6e90\uff0c\u5e76\u786e\u5b9a\u4ed6\u4eec\u6709\u4e24\u4e2a\u4e3b\u8981\u4efb\u52a1\uff1a\u627e\u5230\u76ae\u5361\u548c\u627e\u56de\u6563\u5e03\u5728\u58a8\u897f\u54e5\u548c\u7f8e\u56fd\u8fb9\u5883\u5404\u5730\u7684\u53d7\u6c61\u67d3\u91d1\u5c5e\u3002\u7f8e\u56fd\u653f\u5e9c\u4e3a\u4e86\u81ea\u5df1\u7684\u5229\u76ca\u505a\u4e86\u81ea\u5df1\u7684\u5de5\u4f5c\uff0c\u56de\u6536\u4e861000\u5428\u6c61\u67d3\u6750\u6599\u4e2d\u768490%\uff0c\u5e76\u5c06\u5176\u9001\u56de\u58a8\u897f\u54e5\u3002\u58a8\u897f\u54e5\u505a\u5f97\u4e0d\u662f\u5f88\u597d\u3002\n\u4e00\u65e6\u53d1\u73b0\u76ae\u5361\uff0c\u4ed6\u4eec\u51b3\u5b9a\u628a\u5b83\u4ece\u8fc7\u53bb\u51e0\u5468\u6765\u4e00\u76f4\u53d7\u5230\u8f90\u5c04\u7684\u793e\u533a\u5f00\u51fa\u53bb\u3002\u4ed6\u4eec\u6700\u7ec8\u628a\u5b83\u5e26\u5230\u4e86\u534e\u96f7\u65af\u6700\u5927\u7684\u516c\u56ed\uff0c\u628a\u5b83\u56fa\u5b9a\u5728\u6805\u680f\u4e0a(\u662f\u7684\uff0c\u6211\u4ece\u8fd9\u91cc\u90fd\u80fd\u542c\u5230\u4f60\u4eec\u7684\u96c6\u4f53\u8138\u638c)\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5728\u5269\u4e0b\u7684\u4e00\u4e07\u4e5d\u5343\u5428\u653e\u5c04\u6027\u7269\u8d28\u4e2d\uff0c\u4ed6\u4eec\u53ea\u56de\u6536\u4e86\u4e94\u5343\u5428\u3002\u4ed6\u4eec\u8fd8\u7ec4\u7ec7\u4e86\u4e00\u652f\u7531180\u540d\u5de5\u4eba\u7ec4\u6210\u7684\u56e2\u961f\u6765\u6e05\u7406\u8857\u9053\uff0c\u6e05\u9664\u53d1\u52a8\u673a\u5934\u90e8\u6563\u843d\u5728\u57ce\u5e02\u5404\u5904\u7684\u5c0f\u7403\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u7ed9\u4e86\u4ed6\u4eec\uff0c\u6211\u4e0d\u662f\u5f00\u73a9\u7b11\uff0c\u666e\u901a\u7684\u626b\u5e1a\uff0c\u6ca1\u6709\u4efb\u4f55\u4fdd\u62a4\u3002\n\u6211\u4eec\u53ef\u4ee5\u6df1\u5165\u8c03\u67e5\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u6709\u591a\u4e48\u611a\u8822\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u4f46\u6211\u4eec\u5c06\u6c38\u8fdc\u5446\u5728\u8fd9\u91cc\u3002\u6211\u4eec\u53ea\u80fd\u8bf4\uff0c\u5927\u591a\u6570\u6750\u6599\u5df2\u7ecf\u7528\u4e8e\u5168\u56fd\u5404\u5730\u7684\u5efa\u7b51\u5de5\u5730\uff0c\u66f4\u4e0d\u7528\u8bf4\u534e\u96f7\u65af\u7684\u8bb8\u591a\u8f90\u5c04\u5730\u533a\u6700\u7ec8\u8fd8\u662f\u6709\u4eba\u5c45\u4f4f\uff0c\u800c\u6ca1\u6709\u8003\u8651\u5230\u5373\u4f7f\u5728\u4eca\u5929\uff0c\u8f90\u5c04\u6c34\u5e73\u4ecd\u7136\u53ef\u80fd\u662f\u5371\u9669\u7684\u3002\n\u66b4\u9732\u5728\u94b4-60\u4e0b\u53ef\u80fd\u4f1a\u5bf9\u4eba\u4ea7\u751f\u4e0d\u540c\u7684\u540e\u679c\u3002\u5728\u77ed\u671f\u5185\uff0c\u5b83\u4f1a\u5f15\u8d77\u70e7\u4f24\u3001\u5455\u5410\u548c\u8179\u6cfb\uff0c\u8fd9\u5c31\u662f\u6587\u68ee\u7279\u7684\u60c5\u51b5\uff0c\u4ed6\u540e\u6765\u88ab\u620f\u79f0\u4e3a\u201c\u4eff\u751f\u4eba\u6587\u68ee\u7279\u201d\uff0c\u56e0\u4e3a\u4ed6\u6ca1\u6709\u53d1\u751f\u4ec0\u4e48\u4e25\u91cd\u7684\u4e8b\u60c5\u3002\u4e2d\u671f\u66b4\u9732\u4f1a\u5bfc\u81f4\u8840\u7ec6\u80de\u8ba1\u6570\u8fc7\u4f4e\u548c\u6682\u65f6\u6027\u4e0d\u5b55\u3002\u957f\u671f\u66b4\u9732\u5728\u534e\u96f7\u65af\uff0c\u51e0\u4e4e\u662f\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f1a\u5bfc\u81f4\u6c38\u4e45\u6027\u810a\u67f1\u635f\u4f24\u3001\u767d\u8840\u75c5\u3001\u6240\u6709\u7c7b\u578b\u7684\u764c\u75c7(\u4f46\u4e3b\u8981\u662f\u9aa8\u9abc)\u548c\u9057\u4f20\u75be\u75c5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4e8b\u6545\u53d1\u751f\u540e\u7684\u51e0\u5e74\u91cc\uff0c\u51fa\u751f\u65f6\u60a3\u6709\u7578\u5f62\u3001\u8111\u79ef\u6c34\u3001\u76ae\u80a4\u611f\u67d3\u3001\u5507\u88c2\u751a\u81f3\u6b7b\u80ce\u7684\u5a74\u513f\u6570\u91cf\u90fd\u5728\u589e\u52a0\uff0c\u66f4\u4e0d\u7528\u8bf4\u764c\u75c7\u60a3\u8005\u7684\u589e\u52a0\u4e86\u3002\n\u56e0\u6b64\uff0c\u5207\u5c14\u8bfa\u8d1d\u5229\u53ef\u80fd\u4f1a\u56e0\u4e3a\u9020\u6210\u7684\u7834\u574f\u800c\u88ab\u8ba4\u4e3a\u662f\u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6838\u4e8b\u6545\uff0c\u4f46\u534e\u96f7\u65af\u7684\u94b4-60\u4e8b\u6545\u8981\u5927\u5f97\u591a\uff0c\u6b63\u662f\u56e0\u4e3a\u4e0d\u53ef\u80fd\u771f\u6b63\u4e86\u89e3\u548c\u786e\u5b9a\u9047\u96be\u8005\u4eba\u6570\uff0c\u5b83\u7684\u5b9e\u9645\u5f71\u54cd\u8303\u56f4\uff0c\u4ee5\u53ca\u5b83\u4ecd\u5728\u5982\u4f55\u5f71\u54cd\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u7f8e\u6d32\u5927\u9646\u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6838\u4e8b\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u5386\u53f2\u4e0a\u7ba1\u7406\u6700\u5dee\u7684\u4e00\u6b21\u3002", "note_en": "HBO\u2019s  Chernobyl gave us a raw glimpse of the devastating consequences a nuclear reaction can have. Not only that, even today, the Chernobyl accident is still considered one of the worst nuclear disasters in history for the number of victims and how it was dealt with by the authorities at the time. If that\u2019s not enough, we must say that it was this accident that made the world aware of the risks of radioactivity and nuclear reactions. So, Chernobyl might\u2019ve passed through history as the worst nuclear incident, but it\u2019s actually not the only one or even the worst, depending on how we measure these horrid events.\n Just a couple of years before  Chernobyl, ignorance, corruption, and total lack of common sense led to one of the biggest radioactive accidents of all time, and definitely the worst in all the American Continent. Known as the Cobalt-60 accident of Ciudad Juarez, a small and kind of stupid human mistake ended up contaminating almost an entire country and exposing thousands and thousands of people to the perils of radioactivity.\n   It all happened the night of December 6th, 1983, when Vicente Sotelo and Ricardo Hern\u00e1ndez, two maintenance workers at the Medical Center of Specialties in Ciudad Juarez were allowed to take and sell whatever they wanted from the hospital\u2019s warehouse. Among loads of junk stored, they saw a machine that could give them some good money if they sold it in pieces. This radiotherapy machine had been bought illegally by the hospital from a company in Texas. That particular model had been taken out of circulation because it had manufacturing defects.\n Long story short, Vicente and Ricardo decided to disassemble the machine with the few tools and expertise they had: hitting it with a hammer. When they reached the engine head of the machine they were curious to see what was inside that huge box of approximately 100 kg. What they didn\u2019t know is that by breaking the box, they unleashed 6,010 pellets of cobalt-60, a synthetic radioactive isotope of cobalt with the force of 1,003 curies. To put it into perspective, being exposed for a significant amount of time to a single curie could fry some of your organs.\n    After satisfying their curiosity, the two men loaded the company\u2019s pick-up truck, including, of course, the pieces from the machine, and took everything to a recycling dumpster. Along the way, the machine&#39;s engine head continued to spread the cobalt-60 pellets. The back of the truck was also filled with these small radioactive pieces. They were happy to sell everything for a low price and decided to call it a day.\n So, by now, not only were these men exposed to these highly radioactive materials, but they also spread these pieces all over the street on the way to the dumpster and left basically a bomb of cobalt-60. Bear that in mind. Vicente, parked the pick-up near his house only to find out later on that the battery had been stolen. The now-radioactive truck was left parked for about three months in a densely-populated neighborhood near the Rio Grande.\n Meanwhile, in the dumpster, the machine&#39;s engine head and all the pieces went to a pile that was constantly manipulated with cranes. The magnetic field of the cranes automatically caught the radioactivity of the pellets and the engine head, contaminating the metal they got in touch with. If this wasn\u2019t enough, this dumpster had an agreement with several smelter factories that would take the scrap metal and melt it to build construction materials and even tables. As you can imagine, all this radioactive metal went directly to the factories. It\u2019s estimated that 20,000 tons of radioactive metal was processed and transported throughout the country and some of it even exported to the US.\n   All this happened within one week after Vicente and Ricardo detonated the cobalt-60 bomb and, for the next month, the radioactive materials would be taken all over the country without anybody knowing a thing. It all came to light on January 16, 1984, when one of the transporting trucks of the smelter companies was delivering stock in New Mexico. In a stroke of luck, the driver got lost and, in an attempt to go back to his route, he passed near the Los Alamos National Security Lab, the laboratory where the Manhattan Project ( atom bombs) was developed.\n The laboratory had radioactivity sensors that would alert authorities, so that no radioactive material would leave the laboratory without authorization and proper handling. So, when the truck passed through, the sensors immediately took pictures of the gates, concerning the authorities about a possible nuclear explosion. After a lot of research, the team finally managed to find the driver in a motel with the truck parked outside. When he went out the next morning, he found a whole squad wearing special suits analyzing his truck.\n   They discovered that the truck was radiating about 1,000 rems. Let\u2019s put this in perspective: x-ray machines radiate 0.2 rems; an x-ray technician can only be exposed up to 50 rems in one year; an exposure of 300 to 400 rems can be fatal on 50% of the cases\u2026 this truck was radiating a thousand and had been doing so for months.\n After an interrogation, the laboratory authorities decided to reach the CNSNS, the government agency in charge of nuclear security. Together, they tracked down the origin of the issue and determined they had two main missions: finding the pick-up truck and recovering the contaminated metals that had spread all across Mexico and the US border. The US government did their part, well, for their own benefit, recovering and sending back to Mexico 90% of the 1,000 tons of contaminated materials. Mexico didn\u2019t do so great.\n   Once the pick-up truck was found, they decided to take it out of the neighborhood it had radiated for the past weeks. They ended up taking it to the biggest public park in Juarez, securing it to a fence (yeah, I can hear your collective face palm from here). Not only that, of the remaining 19,000 tons of radioactive material, they only managed to recover 5,000 tons. They also put together a team of 180 workers to clean the streets and remove the small pellets the engine head had spread all over the city. To do so, they gave them, and I\u2019m not kidding, regular brooms and no protection whatsoever.\n We could go into every detail of how stupidly the situation was handled, but we would be here forever. We can just say that most of the material had already been used in building sites all over the country, not to mention that many of the radiated areas of Juarez were eventually populated without caring that even today it\u2019s possible that radiation levels are still dangerous.\n   Exposure to cobalt-60 can have different consequences in people. In a short term period, it can cause burns, vomit, and diarrhea, which was the case of Vicente, who was later on nicknamed \u201cVicente the Bionic Man\u201d because nothing serious happened to him. Medium-term exposure can cause a low blood cell count and temporary sterility. Long-term exposure, which is pretty much most of the cases in Juarez, can cause permanent spine damage, leukemia, all types of cancer (but mainly bone), and genetic disorders. As a matter of fact, in the years following the accident, there was a rise in the number babies born with deformities, hydrocephalus, skin infections, harelip, and even stillborn cases, not to mention an increase in cancer patients.\n So, Chernobyl might be considered the worst nuclear accident in history due to the damage it caused, but the Cobalt-60 accident of Ciudad Juarez is by far bigger, precisely because it\u2019s impossible to really know and determine the number of victims, the real reach it had, and how it\u2019s still affecting. Definitely, the worst nuclear incident in the history of the American continent and probably the most poorly managed one in history.", "posttime": "2020-10-26 10:57:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u6d32,chernobyl,\u653e\u5c04\u6027", "title": "\u58a8\u897f\u54e5\u5207\u5c14\u8bfa\u8d1d\u5229\uff0c\u7f8e\u6d32\u5927\u9646\u6700\u5927\u7684\u6838\u4e8b\u6545(2019\u5e74)", "title_en": "Mexican Chernobyl, the Biggest Nuclear Accident in the American Continent (2019)", "transed": 1, "url": "https://culturacolectiva.com/history/cobalt-60-ciudad-juarez-mexico-nuclear-accident", "via": "", "real_tags": ["\u7f8e\u6d32", "chernobyl", "\u653e\u5c04\u6027"]}, {"category": "", "categoryclass": "", "imagename": "3884453f3945027ebd4444634fa4c369.png", "infoid": 1031179, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136\u8fd9\u4e2a\u6807\u9898\u5047\u5b9a\u4e86\u7b54\u6848(\u6bd5\u7adf\uff0c\u7cdf\u7cd5\u7684\u8bf4\u5531\u610f\u5473\u7740\u8fd9\u4e2a\u5224\u51b3\u662f\u4e0d\u503c\u5f97\u7684)\uff0c\u4f46\u6211\u8ba4\u4e3aC++\u8ba9\u5b9e\u73b0\u5b89\u5168\u6027\u3001\u5185\u5b58\u5b89\u5168\u6216\u7ebf\u7a0b\u5b89\u5168\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u7684\u540d\u58f0\u4ecd\u7136\u662f\u5f53\u4e4b\u65e0\u6127\u7684\uff0c\u5c3d\u7ba1\u591a\u5e74\u6765\u5b83\u5df2\u7ecf\u53d8\u5f97\u597d\u4e86\u5f88\u591a\u3002\u6211\u7684\u610f\u601d\u662f\uff1a\u8be5\u7a0b\u5e8f\u7684c++-17\u7248\u672c\u6bd4\u4f7f\u7528c++0x\u8981\u597d\u51e0\u5e74\uff0c\u800c\u4e14\u5b83\u8ba9\u7ec6\u5fc3\u7684\u7a0b\u5e8f\u5458\u53ef\u4ee5\u7f16\u5199\u51fa\u5f88\u597d\u7684\u7a0b\u5e8f\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u591a\u6587\u4ef6\u5b57\u6570\u7edf\u8ba1\u4e3a\u4f8b\uff1a\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u53ca\u5176\u6240\u6709\u5b50\u76ee\u5f55\u4e2d\u6240\u6709&#34\uff1b.txt&34\uff1b\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5b57\u6570\uff0c\u5176\u4e2d\u7684\u5b57\u6570\u88ab\u5b9a\u4e49\u4e3a\u4ee5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u4e0eregexp&34\uff1b([a-z]{2\uff0c})&#34\uff1b\u5339\u914d\u7684\u5b57\u6570\u3002\n\u9996\u5148\uff0c\u6211\u5c06\u6d4f\u89c8\u8be5\u535a\u5ba2\u6587\u7ae0\u4e2d\u7684\u793a\u4f8b\uff0c\u5e76\u627e\u51fa\u4e00\u4e9b\u5269\u4f59\u7684\u9519\u8bef\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5728Rust\u4e2d\u6784\u5efa\u4e00\u4e2a(IMO)\u66f4\u597d\u7684\u7248\u672c\uff0c\u5b83\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u3001\u66f4\u7b80\u6d01\u3002\u8ba9\u6211\u4eec\u4ece\u5904\u7406\u6587\u4ef6\u5e76\u5c06\u8ba1\u6570\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u7684\u6b63\u6587\u5f00\u59cb\uff1a\n\u5f53\u4ece\u5b89\u5168\u89d2\u5ea6\u68c0\u67e5\u6b64\u4ee3\u7801\u65f6\uff0c\u6709\u51e0\u4ef6\u4e8b\u7acb\u5373\u6d6e\u73b0\u5728\u8111\u6d77\u4e2d\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\uff1a\uff1aRECURSIVE_DIRECTORY_Iterator\u547d\u4ee4\u6765\u6807\u8bc6\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u5728\u5904\u7406\u5b83\u4eec\u4e4b\u524d\u6d4b\u8bd5\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u540d\u79f0\u3002\u7136\u540e\uff0c\u5b83\u4f7f\u7528std\uff1a\uff1aifstream\u6253\u5f00\u6587\u4ef6\u3002\n\u4ece\u6211\u7528\u8bcd\u7684\u65b9\u5f0f\u6765\u770b\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u8fd9\u662fTTCTTOU\u7684\u9519\u8bef--\u68c0\u67e5\u65f6\u95f4\u5230\u4f7f\u7528\u65f6\u95f4(Time-to-Check-to-Time-of-Use)\u3002\u8be5\u7a0b\u5e8f\u9a8c\u8bc1\u8be5\u6761\u76ee\u662f\u5426\u4e3a\u5e38\u89c4\u6587\u4ef6\uff0c\u4f46\u7a0d\u540e\u5c06\u5176\u6253\u5f00\uff0c\u5e76\u5047\u5b9a\u68c0\u67e5\u7ed3\u679c\u6709\u6548\u3002\u6211\u4eec\u5e94\u8be5\u95ee\u95ee\u81ea\u5df1\uff1a\n\u5982\u679c\u6587\u4ef6\u5728\u76ee\u5f55\u5217\u8868\u548c\u6253\u5f00\u4e4b\u95f4\u88ab\u5220\u9664\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\n\u5982\u679c\u6587\u4ef6\u5df2\u66ff\u6362\u4e3a\u7ba1\u9053\u6216\u5176\u4ed6\u975e\u5e38\u89c4\u6587\u4ef6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5f88\u660e\u663e\uff0c\u7a0b\u5e8f\u5c06\u5c1d\u8bd5\u6253\u5f00\u5b83\u5e76\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff1b\u56e0\u6b64\uff0c\u4ece\u7a0b\u5e8f\u5458\u7684\u610f\u56fe\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\u5417\uff1f\u5b8c\u5168\u6ca1\u6709\uff0c\u4f46\u7c7b\u4f3c\u7684\u6f0f\u6d1e\u5df2\u7ecf\u5bfc\u81f4\u4e86\u4e25\u91cd\u7684\u5b89\u5168\u95ee\u9898\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4e0d\u786e\u5b9a-\u6211\u6253\u8d4c\u5176\u4ed6\u8bb8\u591aC++\u7a0b\u5e8f\u5458\u4e5f\u4e0d\u786e\u5b9a\u3002\u7b54\u6848\u662fstd\uff1a\uff1aifstream\u662f\u5b89\u5168\u7684\uff0c\u5b83\u7684\u884c\u4e3a\u65b9\u5f0f\u5c31\u50cf\u8bbf\u95ee\u4e86EOF\u4e00\u6837\uff0c\u4f46\u6211\u5e76\u4e0d\u786e\u5b9a\u8fd9\u4e00\u70b9\uff0c\u76f4\u5230\u6211\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e86\u5f88\u591a\u6b21\uff0c\u5e76\u7f16\u5199\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7a0b\u5e8f\u6765\u9a8c\u8bc1\u5b83\u3002\u5076\u7136\u7684\u6b63\u786e\u603b\u6bd4\u9519\u8bef\u597d\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u8be5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u4e89\u53d6\u66f4\u591a\u7684\u4e1c\u897f\u3002\u6700\u540e\uff0c\u5b83\u7684\u7f16\u5199\u65b9\u5f0f\u5bf9\u672a\u6765\u7684\u591a\u7ebf\u7a0b\u4e0d\u662f\u5f88\u6709\u5e2e\u52a9\u3002\u8fd9\u4e0d\u662f\u7ec3\u4e60\u7684\u91cd\u70b9\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u503c\u5f97\u8003\u8651\u7684\uff0c\u56e0\u4e3a\u8bb8\u591a\u73b0\u4ee3\u6570\u636e\u5904\u7406\u7a0b\u5e8f\u90fd\u91c7\u7528\u4e86\u4ece\u5355\u7ebf\u7a0b\u5230\u591a\u7ebf\u7a0b\u7684\u8fdb\u5316\u9053\u8def\u3002\u8fd9\u6837\u7684\u6784\u9020\u4f1a\u62db\u81f4\u7ebf\u7a0b\u9519\u8bef\uff1a\n(1)\u5b83\u5c06\u5b89\u5168\u5927\u5c0f\u8303\u56f4\u7684\u8ba1\u7b97\u4e0e\u8be5\u8303\u56f4\u7684\u4f7f\u7528\u5206\u5f00\uff1b(2)\u5b83\u65e0\u7f18\u65e0\u6545\u5730\u7834\u574f\u6027\u5730\u4fee\u6539WORD_ARRAY\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u6253\u5370\u524d10\u9879\u3002\u800c\u4e14\u5728C++\u4e2d\u4e3a\u4e8b\u7269\u6dfb\u52a0\u591a\u7ebf\u7a0b\u4ecd\u7136\u6709\u4e9b\u75db\u82e6\u3002(2)\u5b83\u5c06\u5b89\u5168\u5927\u5c0f\u8303\u56f4\u7684\u8ba1\u7b97\u4e0e\u8be5\u8303\u56f4\u7684\u4f7f\u7528\u5206\u5f00\uff1b(2)\u5b83\u65e0\u7f18\u65e0\u6545\u5730\u7834\u574f\u6027\u5730\u4fee\u6539word_array\uff0c\u53ea\u662f\u4e3a\u4e86\u4fbf\u4e8e\u6253\u5370\u524d10\u9879\u3002\u4ee5\u4e0b\u662f\u6211\u66f4\u559c\u6b22\u5c06Rust\u4f5c\u4e3a\u7cfb\u7edf\u8bed\u8a00\u7684\u4e00\u4e9b\u539f\u56e0\u3002\u5b83\u5e76\u4e0d\u662f\u7279\u522b\u77ed-Python\u6216shell\u7248\u672c\u7684\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u51e0\u884c\u4ee3\u7801\u6765\u8868\u793a\uff01\u4f46\u662f\u5b83\u7a0d\u5fae\u77ed\u4e86\u4e00\u70b9\uff0c\u800c\u4e14\u5b83\u66f4\u6e05\u695a\u54ea\u91cc\u88ab\u5077\u5de5\u51cf\u6599\u6216\u8005\u6b63\u786e\u5904\u7406\u4e86\u9519\u8bef\uff1a\u597d\u7684\uff0c\u8fd939\u884c\u4ee3\u7801\uff0c\u4f46\u4e0d\u5305\u62ecCargo.toml\u6587\u4ef6\uff0c\u5b83\u662f\u53e6\u59164\u884c\u975e\u6837\u677f\u6587\u4ef6(\u8fd9\u56db\u4e2a\u4f9d\u8d56\u9879\u76f8\u5f53\u7c7b\u4f3c\u4e8eC++\u7248\u672c\u4e2d\u7684#include\u884c\uff0c\u6240\u4ee5\u5e94\u8be5\u88ab\u8ba1\u7b97\u5728\u5185)\u3002(\u8fd9\u56db\u4e2a\u4f9d\u8d56\u9879\u76f8\u5f53\u7c7b\u4f3c\u4e8eC++\u7248\u672c\u4e2d\u7684#include\u884c\uff0c\u6240\u4ee5\u5e94\u8be5\u88ab\u8ba1\u7b97\u5728\u5185)\uff0c\u4f46\u4e0d\u5305\u62ecCargo.toml\u6587\u4ef6\uff0c\u5b83\u662f\u53e6\u4e00\u4e2a\u975e\u6837\u677f\u6587\u4ef6(\u8fd9\u56db\u4e2a\u4f9d\u8d56\u9879\u975e\u5e38\u7c7b\u4f3c\u4e8eC++\u7248\u672c\u4e2d\u7684#include\u884c\uff0c\u6240\u4ee5\u5e94\u8be5\u8ba1\u7b97\u5728\u5185)\u3002\n\u7a0d\u5fae\u77ed\u4e86\u4e00\u70b9\u3002\u4f46\u6211\u559c\u6b22Rust\u7248\u672c\u7684\u4e00\u70b9\u662f\uff0c\u5173\u4e8e\u9519\u8bef\u5904\u7406\u7684\u731c\u6d4b\u5c11\u4e86\u5f88\u591a\u3002\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u4e86\u5417\uff1f\u6211\u4eec\u77e5\u9053\u5b83\u88ab\u8df3\u8fc7\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u6253\u5f00\u7684\u7ed3\u679c\u4e0d\u597d\uff0cfilter_map\u4f1a\u4e22\u5f03\u8be5\u6587\u4ef6\u3002\u201c\u6211\u4eec\u77e5\u9053globwald\u6216\u6784\u9020\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u9519\u8bef\u90fd\u4f1a\u5f97\u5230\u5904\u7406\uff0c\u56e0\u4e3a\uff1f\u5982\u679c\u51fd\u6570\u8fd4\u56de\u9519\u8bef\uff0c\u5c06\u5bfc\u81f4\u51fd\u6570\u8fd4\u56de\u9519\u8bef\u3002\u529f\u80fd\u8d8a\u5f3a\u3002Take(N)\u60ef\u7528\u8bed\u6bd4C++\u7248\u672c\u4e2d\u7684\u7b49\u6548\u4ee3\u7801\u66f4\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u6761\u76ee\u5c11\u4e8eN\u9879\uff0c\u5b83\u5c31\u4f1a\u63d0\u524d\u8fd4\u56de\u3002\n\u867d\u7136\u73b0\u4ee3C++\u5141\u8bb8\u7ec6\u5fc3\u7684\u7a0b\u5e8f\u5458\u7f16\u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u4f46\u5b83\u4ecd\u7136\u5141\u8bb8\u7c97\u5fc3\u7684\u7a0b\u5e8f\u5458\u4ee5\u4ea7\u751f\u9519\u8bef\u7684\u65b9\u5f0f\u505a\u4e8b\u3002\u94c1\u9508\u5c31\u6ca1\u6709\u90a3\u4e48\u591a\u4e86\uff1a\u5b83\u4f1a\u7f20\u7740\u4f60\uff0c\u8ba9\u4f60\u66f4\u4ed4\u7ec6\u5730\u76d6\u4f4f\u89d2\u843d\u91cc\u7684\u7bb1\u5b50\u3002\n\u751f\u9508\u5e76\u4e0d\u80fd\u795e\u5947\u5730\u4f7f\u907f\u514dTTCTTOU\u95ee\u9898\u53d8\u5f97\u66f4\u5bb9\u6613-\u4f7f\u7528std\uff1a\uff1afs\uff1a\uff1aMetadata(Path)\u7f16\u5199\u4ee3\u7801\u4e0e\u5728C++\u7248\u672c\u4e2d\u4e00\u6837\u7b80\u5355\u3002\u4f46\u662f\u5b83\u786e\u5b9e\u589e\u5f3a\u4e86\u6211\u7684\u4fe1\u5fc3\uff0c\u5373\u5982\u679c\u8be5\u9519\u8bef\u5b58\u5728\uff0c\u4ee3\u7801\u5c31\u4f1a\u5904\u7406\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u95ee\u9898\u3002\u4f46\u5b83\u4ecd\u7136\u4f1a\u4ee5\u6c89\u7740\u7684\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u5b83\u4e5f\u5f88\u5bb9\u6613\u8f6c\u6362\u6210\u591a\u7ebf\u7a0b\u7a0b\u5e8f\uff1a\u53ea\u9700\u5c06FOR x\u5728\u2026\u2026\u4e2d\u3002\u5faa\u73af\u5230for_each\u4e2d\uff0c\u5e76\u4f7f\u7528raon crate.par_bridge()\u4f7ffor_each\u4e2d\u7684\u51fd\u6570\u5e76\u884c\u6267\u884c\u3002\n\u5f53\u7136\uff0c\u8fd9\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u6211\u4eec\u5fd8\u8bb0\u4e86\u5bf9\u91cd\u65b0\u63d2\u5165\u8ba1\u6570\u7684\u54c8\u5e0c\u8868\u4f7f\u7528\u4efb\u4f55\u9501\u5b9a\uff1a\n\u9519\u8bef[E0596]\uff1a\u65e0\u6cd5\u5c06`wordcounts`\u501f\u7528\u4e3a\u53ef\u53d8\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u662f`Fn`\u95ed\u5305\u4e2d\u7684\u6355\u83b7\u53d8\u91cf\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u4e48\u5c06\u5176\u5207\u6362\u5230\u5e76\u884c\u54c8\u5e0c\u8868\uff0c\u8981\u4e48\u4f7f\u7528\u4e92\u65a5\u6765\u4fdd\u62a4\u5b83\u3002\u6211\u5c06\u91c7\u53d6\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5728\u4f7f\u7528\u8868\u4e4b\u524d\u5c06\u5176\u9501\u5b9a\uff0c\u5e76\u8fdb\u884c\u8db3\u591f\u7684\u4f18\u5316\uff0c\u4f7f\u5176\u6bd4\u5355\u7ebf\u7a0b\u7248\u672c\u66f4\u5feb\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u5c06\u6bcf\u884c\u89e3\u6790\u4e3a\u5c0f\u5199\u5355\u8bcd\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u5411\u91cf\u4e2d\uff0c\u7136\u540e\u9501\u5b9a\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u6279\u91cf\u63d2\u5165\u8be5\u884c\u7684\u5355\u8bcd\uff1a\n\u4e0d\u9519--\u5927\u7ea6\u6709\u5341\u884c\u4ee3\u7801\u88ab\u4fee\u6539\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u5e76\u884c\u4ee3\u7801\u7248\u672c\u3002\nC++\u7248\u672c\u6709\u4e00\u4e9b\u4f18\u70b9\u53cd\u6620\u4e86Rust\u6807\u51c6\u5e93\u7684\u4e0d\u6210\u719f\u3002\u5b83\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u4f7f\u7528Partial_Sort\u6765\u51cf\u5c11\u6309\u8ba1\u6570\u6392\u5e8f\u7684\u5de5\u4f5c\u91cf\uff1b\u6211\u5fc5\u987b\u627e\u5230lazysorcrate\uff0c\u5b83\u4e0d\u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\n\u4e24\u8005\u90fd\u5f88\u5feb\uff1b\u6839\u636eC++\u7f16\u8bd1\u5668\u7684\u4e0d\u540c\uff0c\u9508\u8272\u7684\u53ef\u80fd\u66f4\u5feb\uff0c\u4e5f\u53ef\u80fd\u4e0d\u66f4\u5feb\u3002)(\u66f4\u65b0\uff1a\u66f4\u591a\u57fa\u51c6\uff0c\u7531@cb321\u5728\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u63d0\u793a\uff0c\u5e76\u5c06\u57fa\u51c6\u5207\u6362\u5230\u5bb9\u6613\u4e0b\u8f7d\u7684\u4e1c\u897f\uff1a\u67e5\u5c14\u65af\u00b7\u72c4\u66f4\u65af\uff1bA Tale of Two Cities&#34\uff1b(\u66f4\u65b0\uff1a\u66f4\u591a\u57fa\u51c6\uff0c\u7531@cb321\u5728\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u63d0\u793a)\uff1a\u67e5\u5c14\u65af\u00b7\u72c4\u66f4\u65af&#34\uff1b\u53cc\u57ce\u8bb0&#34\uff1b)-i7-7920HQ\uff0cMacOS Rust\u7248\u672c\uff1a90ms(rustc 1.47.0(18bf6b4f02020-10-07))C++\u7248\u672c\uff1a340ms(Apple clang\u7248\u672c12.0.0(clang-1200.0.32.2))-\u81f3\u5f3a(R)Gold6130(Skylake\uff0cUbuntu20.04)rut\uff1a76ms(rustc-1.47.0)C++\uff1a60ms(GCC\u7248\u672c9.3.0(Ubuntu 9.3.0-10ubuntu2))\uff0c-O3\uff0c\u65e0PGO\u3002\n\u5e76\u884c\u7248\u6709\u5f88\u591a\u66f4\u5927\u7684\u6587\u4ef6\uff0c\u4f7f\u7528\u56db\u6838\u5904\u7406\u5668\u53ef\u4ee5\u57280.307\u79d2\u5185\u6570\u51fa4\u4e2a2MB\u7684\u6837\u672c\u6587\u4ef6-\u8fd9\u4e0d\u662f\u5f88\u7ebf\u6027\u7684\u7f29\u653e\uff0c\u4f46\u5bf9\u4e8e\u51e0\u5206\u949f\u7684\u8c03\u6574\u6765\u8bf4\u8fd8\u4e0d\u9519\u3002\u540c\u65f6\uff0c\u5355\u7ebf\u7a0bC++\u7248\u672c\u5728MacOS\u4e0a\u505c\u7559\u4e86\u5927\u7ea63.55\u79d2\u3002\n\u5c3d\u7ba1Rust\u7248\u672c\u7684\u957f\u5ea6\u8f83\u77ed\uff0c\u4f46\u53ef\u80fd\u6bd4C++\u7248\u672c\u82b1\u4e86\u6211\u66f4\u957f\u7684\u65f6\u95f4\u6765\u7f16\u5199\u3002\u6211\u4e0d\u5f97\u4e0d\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5f04\u6e05\u695a\u8fd4\u56de\u4e86\u54ea\u4e9b\u51fd\u6570\uff0c\u4ee5\u4fbf\u5904\u7406\u5b83\u4eec\u53ef\u80fd\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u5e76\u4e14\u4e0d\u5f97\u4e0d\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u641c\u7d22\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u7b49\u5185\u5bb9\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u662f\u8fd9\u95e8\u8bed\u8a00\u7684\u65b0\u624b\u3002\u4f46\u662f\uff0c\u4f7f\u5176\u6b63\u786e\u5e76\u4f7f\u5176\u5e76\u884c\u6240\u9700\u7684\u65f6\u95f4\u8f83\u5c11\uff0c\u5c3d\u7ba1\u6211\u5728\u8fd9\u95e8\u8bed\u8a00\u65b9\u9762\u7ecf\u9a8c\u8f83\u5c11\u3002\u5728\u6211\u505a\u7684\u5f88\u591a\u4e8b\u60c5\u4e2d\uff0c\u6211\u90fd\u4f1a\u505a\u8fd9\u6837\u7684\u6743\u8861\u3002\n\u66f4\u65b0\uff1a\u6765\u81eaburntsushi\u7684\u4e00\u4e9b\u5f88\u597d\u7684\u53cd\u9988\u662f\u5173\u4e8e\u4e0d\u5fc5\u8981\u5730\u4f7f\u7528globwalt\u5f15\u5165\u4e86\u5f88\u591a\u989d\u5916\u7684\u4f9d\u8d56\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89c2\u70b9\uff0c\u8bf4\u660e\u4e86\u5728GitHub\u4e0a\u4f7f\u7528\u968f\u673a\u677f\u6761\u7bb1\u592a\u5bb9\u6613\u7684\u98ce\u9669--\u6216\u8005\uff0c\u53ef\u80fd\u662f\u5173\u4e8e\u62e5\u6709\u4e00\u4e2a\u4e0d\u90a3\u4e48\u6210\u719f\u7684stdlib\u7684\u56fa\u6709\u5371\u9669\u3002\u4ee3\u7801\u7684\u66f4\u65b0\u7248\u7f16\u8bd1\u8d77\u6765\u66f4\u5feb\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89c2\u70b9\uff1a", "note_en": "While that title presumes the answer (after all, a &#34;bad rap&#34; implies that the judgement is undeserved), I think C++&#39;s reputation for making it very difficult to achieve security or memory safety or thread-safety remains well-deserved, even though it&#39;s gotten a lot better over the years. I mean that: The c++-17 version of that program is years better than it would have been with c++0x, and it let a careful programmer write a nice program.\n The post used a simple multi-file word count as an example:\u00a0 Count all words in all &#34;.txt&#34; files in the current directory and all of its subdirectories, where words were defined as things matching the regexp\u00a0 &#34;([a-z]{2,})&#34; in a case-insensitive manner.\n First, I&#39;ll walk through the example from that blog post and identify some remaining bugs.\u00a0 And then we&#39;ll build up a (IMO) better version in Rust that&#39;s faster, safer, and more concise.\u00a0 Let&#39;s start with the body that processes the files and adds the counts to a hash table:\n  A few things immediately come to mind when examining this code from a safety perspective.\u00a0 First, it uses a\u00a0 filesystem::recursive_directory_iterator\u00a0to identify the files in the current directory, testing their types and names before processing them.\u00a0 It then opens the file using  std::ifstream.\n From the way I phrased this, you&#39;re probably already guessing that this is a TTCTTOU eror -- time-to-check-to-time-of-use. The program validates that the entry is a regular file, but then later opens it, and assumes that the result of the check holds. We should ask ourselves:\n  What happens if the file has been deleted between the directory listing and the open?\n What happens if the file has been replaced by, e.g., a pipe or other not regular_file?\nFor the second case, it&#39;s pretty clear that the program will try to open it and operate on it; this is therefore a bug with respect to the intent of the programmer. Is it a huge bug in this context? Not at all, but analogous bugs have led to serious security problems.  For the first case, I wasn&#39;t sure - and I bet many other C++ programmers aren&#39;t either. The answer is that the std::ifstream is safe, and will simply behave in the same way as if EOF was reached, but I wasn&#39;t certain about that until I googled it a lot and wrote a test program to verify it. Accidental correctness is better than being wrong, but we should strive for more in our programs.  Finally, the way it&#39;s written isn&#39;t very conducive to future multithreading. That&#39;s wasn&#39;t the point of the exercise, but I think it&#39;s worth thinking about as many modern data processing programs take an evolutionary path from single-threaded to multi-threaded. Constructs like this invite threading bugs:\n  (1) It separates the computation of a safe size range from the use of that range;\u00a0 (2) it destructively modifies the word_array for no reason other than to make it easy to print the first 10 items.\u00a0 And adding multithreading to things in C++ still remains somewhat painful.  Here are some reasons I&#39;m coming to prefer Rust as a systems language. It&#39;s not remarkably shorter - the Python or shell version of all this can be expressed in a few lines of code!\u00a0 But it&#39;s a bit shorter, and it&#39;s more clear where corners have been cut or errors properly handled:     Ok, that&#39;s 39 lines of code, but not counting the Cargo.toml file, which is another 4 of non-boilerplate (the four dependencies, which are fairly analogous to the #include lines in the C++ version, so should be counted).\n  A little shorter.\u00a0 But what I like about the Rust version is that there&#39;s a lot less guessing about the error handling.\u00a0 Did the file fail to open?\u00a0 We know it&#39;s skipped, because the  filter_map will discard that file if the result of the open is not ok.\u00a0 We know errors in  globwalk or constructing the regex are handled, because the  ? will cause the function to return an error if they return an error.\u00a0 The more functional  . take(N) idiom is a little more idiot-proof than the equivalent code in the C++ version, as we know it returns early if there are fewer than N items.\n  While modern C++ lets a careful programmer write a good program, it still lets a less-careful programmer do things in ways that create errors. Rust has less of that: it will nag you to cover corner cases more carefully.\n  Rust doesn&#39;t make it magically easier to avoid that TTCTTOU problem - it would have been just as easy to write the code using   std::fs::metadata(path) in the same way it was in the C++ version.\u00a0 But it does improve my confidence that were that bug present, the code would have handled the &#34;file doesn&#39;t exist&#34; problem. But it still would have opened a special file or directory with aplomb.  It&#39;s also very easy to convert to a multithreaded program:\u00a0 Just turn the for x in ... loop into a for_each, and use the  Rayon crate  .par_bridge() to cause the function in for_each to be executed in parallel.\n    Of course, that won&#39;t compile, because we&#39;ve forgotten to use any locking on the hash table into which we&#39;re inserting counts:\n  error[E0596]: cannot borrow `wordcounts` as mutable, as it is a captured variable in a `Fn` closure\n   So then we either switch it to a parallel hash table, or we guard it with a mutex. I&#39;ll take the simple approach of locking the table before using it, and do just enough optimization to make it faster than the single-threaded version. In this case, I parse each line into lowercased-words, which I store in a vector, before locking the hash table and then bulk-inserting the line&#39;s worth of words:\n    Not bad - about ten lines of code changed to make a basic parallel version of the code.\n  There are some advantages to the C++ version that reflect the immaturity of the Rust standard library.\u00a0 It was able to easily use a partial_sort to reduce the amount of work done sorting by counts; I had to find the lazysort crate, which isn&#39;t part of the standard library, which does the same thing.\n  Both are fast; depending on the C++ compiler, the rust one may or may not be faster.\u00a0 ( Updated:\u00a0 More benchmarks, prompted by @cb321 on hacker news, and switched the benchmark to something easily downloaded:\u00a0 Charles Dickens &#34; A Tale of Two Cities&#34;)   - I7-7920HQ, MacOS Rust version: 90ms (rustc 1.47.0 (18bf6b4f0 2020-10-07)) C++ version: 340ms (Apple clang version 12.0.0 (clang-1200.0.32.2)) - Xeon(R) Gold 6130 (skylake, Ubuntu 20.04) Rust: 76ms (rustc-1.47.0) C++: 60ms (gcc version 9.3.0 (Ubuntu 9.3.0-10ubuntu2)), -O3, no PGO\n With a lot of larger files, the parallel version can wordcount four 2mb sample files in 0.307 seconds using a quad-core CPU - not quite linear scaling, but not bad for a few minutes of tweaking.\u00a0 The single-threaded C++ version, meanwhile, is stuck taking about 3.55 seconds on MacOS.\n  Despite its shorter length, the Rust version probably took me longer to write than the C++ version would have.\u00a0 I had to spend more time figuring out what functions returned so I could handle their possible return types, and had to spend a bit more time googling for things like the filesystem metadata, probably because I&#39;m newer to the language. But making it correct and making it parallel took  less\u00a0time, even though I&#39;m less experienced in the language. I&#39;ll take that tradeoff in a lot of what I do.\n   Update:\u00a0 Some good feedback from burntsushi about the unnecessary use of globwalk introducing a lot of extra dependencies.\u00a0 This is a good point about the risks of making it too easy to use random crates off of github -- or, perhaps, about the dangers inherent in having a less-fully-fledged stdlib.\u00a0 An updated version of the code that&#39;s faster to compile is:", "posttime": "2020-10-26 10:56:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,isn", "title": "\u4e0d\uff0cC++\u4ecd\u7136\u4e0d\u652f\u6301", "title_en": "No, C++ still isn't cutting it", "transed": 1, "url": "https://da-data.blogspot.com/2020/10/no-c-still-isnt-cutting-it.html?m=1", "via": "", "real_tags": ["c++", "isn"]}, {"category": "", "categoryclass": "", "imagename": "994c862af7f1fa746b1f380f0e47d743.png", "infoid": 1031175, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Urvashi Reddy|\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961fAdam Berry|\u6280\u672f\u8d1f\u8d23\u4eba\uff0c\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961fRui Li|\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961f\u3002\nPinterest\u7684\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961f\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u5c0f\u7684\u53d8\u5316\uff0c\u5b83\u5bf9\u51cf\u5c11\u8de8\u7ba1\u9053\u7684\u6784\u5efa\u65f6\u95f4\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u5f71\u54cd\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5728GIT\u83b7\u53d6\u8fc7\u7a0b\u4e2d\u8bbe\u7f6erefspec\u9009\u9879\u53ef\u4ee5\u51cf\u5c1199%\u7684\u6784\u5efa\u65f6\u95f4\u3002\nPinterest\u7684\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961f\u8d1f\u8d23\u652f\u6301\u5728\u516c\u53f8\u6784\u5efa\u548c\u90e8\u7f72\u8f6f\u4ef6\u7684\u5de5\u7a0b\u5e08\u3002\u6211\u4eec\u7684\u56e2\u961f\u7ef4\u62a4\u7740\u5927\u91cf\u7684\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\uff0c\u5e76\u4e14\u7ecf\u5e38\u8fdb\u884c\u5927\u89c4\u6a21\u7684\u5de5\u4f5c--\u5c06Pinterest\u7684\u6240\u6709\u8f6f\u4ef6\u8fc1\u79fb\u5230Bazel\uff0c\u521b\u5efa\u540d\u4e3aHermez\u7684\u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\uff0c\u4ee5\u53ca\u7ef4\u62a4\u6bcf\u5929\u81f4\u529b\u4e8e\u51e0\u767e\u6b21\u7684monorepos\uff0c\u4ec5\u4e3e\u51e0\u4f8b\u3002\n\u6211\u4eec\u6240\u6709\u66f4\u5927\u7684\u52aa\u529b\u90fd\u662f\u4e3a\u4e86\u5b9e\u73b0\u8ba9Pinterest\u7684\u8f6f\u4ef6\u5f00\u53d1\u548c\u4ea4\u4ed8\u6210\u4e3a\u5feb\u901f\u800c\u8f7b\u677e\u7684\u4f53\u9a8c\u7684\u76ee\u6807\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u88ab\u63d0\u9192\uff0c\u5c0f\u7ec6\u8282\u4e5f\u53ef\u4ee5\u5bf9\u8fd9\u4e00\u76ee\u6807\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u88ab\u5ffd\u89c6\u7684Git\u9009\u9879\uff0c\u5b83\u6781\u5927\u5730\u7f29\u77ed\u4e86\u6301\u7eed\u96c6\u6210\u7ba1\u9053\u4e2d\u7684\u6784\u5efa\u65f6\u95f4\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u6539\u53d8\u662f\u5982\u4f55\u4ea7\u751f\u5982\u6b64\u5927\u7684\u5f71\u54cd\u7684\uff0c\u6211\u4eec\u9700\u8981\u5206\u4eab\u4e00\u4e9b\u5173\u4e8e\u6211\u4eec\u7684Monorepos\u548c\u6211\u4eec\u7684\u7ba1\u9053\u7684\u4fe1\u606f\u3002\n\u6211\u4eec\u5728Pinterest\u4e0a\u6709\u516d\u4e2a\u4e3b\u8981\u7684\u5b58\u50a8\u5e93\uff1a\u63d2\u63a5\u677f\u3001\u64ce\u5929\u67f1\u3001Cosmos\u3001Magnus\u3001iOS\u548cAndroid\u3002\u6bcf\u4e00\u4e2a\u90fd\u662f\u4e00\u4e2aMonorepo\uff0c\u5e76\u5305\u542b\u5927\u91cf\u7279\u5b9a\u4e8e\u8bed\u8a00\u7684\u670d\u52a1\u96c6\u5408\u3002\u63d2\u63a5\u677f\u548c\u516c\u53f8\u4e00\u6837\u53e4\u8001\uff0c\u4e5f\u662f\u6700\u5927\u7684\u5355\u56de\u8d2d\u3002\u63d2\u63a5\u677f\u6709\u8d85\u8fc7350K\u7684\u63d0\u4ea4\uff0c\u5b8c\u5168\u514b\u9686\u65f6\u5927\u5c0f\u4e3a20 GB\u3002\n\u514b\u9686\u5177\u6709\u5927\u91cf\u4ee3\u7801\u548c\u5386\u53f2\u8bb0\u5f55\u7684monorepos\u975e\u5e38\u8017\u65f6\uff0c\u800c\u4e14\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684\u6301\u7eed\u96c6\u6210\u7ba1\u9053\u4e2d\u5168\u5929\u9891\u7e41\u5730\u8fd9\u6837\u505a\u3002\u4ec5\u5bf9\u4e8e\u63d2\u63a5\u677f\uff0c\u6211\u4eec\u5728\u5de5\u4f5c\u65e5\u5c31\u505a\u4e86\u8d85\u8fc760K\u7684GIT\u62c9\u52a8\u3002\u6211\u4eec\u7684\u5927\u591a\u6570Jenkins\u7ba1\u9053\u914d\u7f6e\u811a\u672c(\u7528Groovy\u7f16\u5199)\u90fd\u4ece\u201c\u7b7e\u51fa\u201d\u9636\u6bb5\u5f00\u59cb\uff0c\u5728\u6b64\u9636\u6bb5\u6211\u4eec\u514b\u9686\u7a0d\u540e\u9636\u6bb5\u5c06\u6784\u5efa\u548c\u6d4b\u8bd5\u7684\u5b58\u50a8\u5e93\u3002\u4e0b\u9762\u662f\u5178\u578b\u7684\u201c\u7ed3\u8d26\u201d\u9636\u6bb5\uff1a\n\u5373\u4f7f\u6211\u4eec\u544a\u8bc9Git\u8fdb\u884c\u6d45\u5c42\u514b\u9686\uff0c\u4e0d\u8981\u83b7\u53d6\u4efb\u4f55\u6807\u8bb0\uff0c\u5e76\u83b7\u53d6\u6700\u540e50\u4e2a\u63d0\u4ea4\uff0c\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u6b64\u64cd\u4f5c\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u8bbe\u7f6erefspec\u9009\u9879\u3002\u6ce8\u610f\uff0c\u901a\u8fc7\u4e0d\u5728\u7ba1\u9053\u914d\u7f6e\u811a\u672c\u4e2d\u8bbe\u7f6e\u5b83\uff0c\u6211\u4eec\u544a\u8bc9Git\u83b7\u53d6\u6240\u6709refspecs\uff1a+refs/head/*\uff1arefs/remotes/Origin/*\u3002\u5728\u63d2\u63a5\u677f\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u64cd\u4f5c\u5c06\u83b7\u53d6\u8d85\u8fc72500\u4e2a\u5206\u652f\u3002\n\u53ea\u9700\u6dfb\u52a0refspec\u9009\u9879\u5e76\u6307\u5b9a\u6211\u4eec\u5173\u5fc3\u7684\u5f15\u7528(\u5728\u672c\u4f8b\u4e2d\u4e3amaster)\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5f15\u7528\u9650\u5236\u5728\u6211\u4eec\u5173\u5fc3\u7684\u5206\u652f\u4e0a\uff0c\u4ece\u800c\u8282\u7701\u5927\u91cf\u65f6\u95f4\u3002\u4e0b\u9762\u662f\u6211\u4eec\u7684\u7ba1\u9053\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff1a\n\u8fd9\u4e00\u7b80\u5355\u7684\u4e00\u884c\u66f4\u6539\u5c06\u6211\u4eec\u7684\u514b\u9686\u65f6\u95f4\u51cf\u5c11\u4e8699%\uff0c\u5e76\u56e0\u6b64\u663e\u8457\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u6784\u5efa\u65f6\u95f4\u3002\u590d\u5236\u4e86\u6211\u4eec\u6700\u5927\u7684\u56de\u8d2d\uff0c\u63d2\u63a5\u677f\u4ece40\u5206\u949f\u7f29\u77ed\u5230\u4e8630\u79d2\u3002\u8fd9\u8868\u660e\uff0c\u6709\u65f6\u5019\u6211\u4eec\u7684\u5c0f\u5c0f\u52aa\u529b\u4e5f\u80fd\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd\u3002\n\u50cf\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u56e2\u961f\u4e00\u6837\uff0c\u6211\u4eec\u4ece\u4e8b\u5bf9\u6211\u4eec\u7684\u65e5\u5e38\u4f53\u9a8c\u6709\u5f88\u5927\u5f71\u54cd\u7684\u5927\u578b\u670d\u52a1\u3002\u7136\u800c\uff0c\u6709\u65f6\u4ec5\u4ec5\u662f\u4e00\u884c\u4fee\u590d\u5c31\u53ef\u4ee5\u4ea7\u751f\u5de8\u5927\u7684\u4e0d\u540c\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u5c31\u662f\u7406\u89e3\u8fd9\u4e00\u70b9\u3002\n\u5982\u679c\u60a8\u70ed\u8877\u4e8e\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\uff0c\u8bf7\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\uff01\u6211\u4eec\u6b63\u5728\u62db\u8058\u6211\u4eec\u5de5\u7a0b\u751f\u4ea7\u529b\u56e2\u961f\u7684\u5de5\u7a0b\u5e08\u804c\u4f4d\u3002\n\u8981\u4e86\u89e3\u6709\u5173Pinterest\u5de5\u7a0b\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u5de5\u7a0b\u535a\u5ba2\uff0c\u5e76\u8bbf\u95ee\u6211\u4eec\u7684Pinterest\u5b9e\u9a8c\u5ba4\u7f51\u7ad9\u3002\u8981\u67e5\u770b\u548c\u7533\u8bf7\u7a7a\u7f3a\u673a\u4f1a\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u804c\u4e1a\u9875\u9762\u3002", "note_en": "Urvashi Reddy | Software Engineer, Engineering Productivity Team Adam Berry | Tech Lead, Engineering Productivity Team Rui Li | Software Engineer, Engineering Productivity Team\n The Engineering Productivity team at Pinterest came across a small change that had a large impact in reducing build times across pipelines. We found that setting the refspec option during git fetch reduced our build times by 99%.\n The Engineering Productivity team at Pinterest is responsible for supporting the engineers who build and deploy software at the company. Our team maintains a number of infrastructure services and often works on large scale efforts \u2014 migrating all software at Pinterest  to Bazel, creating a Continuous Delivery platform called  Hermez, and maintaining  the monorepos that get committed to a few hundred times a day, to name a few.\n All our larger efforts are designed to progress on the goal of making software development and delivery at Pinterest a fast and painless experience. Recently, we were reminded of how small details can also have a large impact on that goal. We discovered an overlooked Git option that significantly reduced the build times in our continuous integration pipelines. In order to understand how this small change had such a large impact, we need to share a little information on our monorepos and our pipelines.\n  We have six main repositories at Pinterest: Pinboard, Optimus, Cosmos, Magnus, iOS, and Android. Each one is a monorepo and houses a large collection of language-specific services. Pinboard is as old as the company and is the largest monorepo. Pinboard has more than 350K commits and is 20GB in size when cloned fully.\n Cloning monorepos that have a lot of code and history is time consuming, and we need to do it frequently throughout the day in our continuous integration pipelines. For Pinboard alone, we do more than 60K git pulls on business days. Most of our Jenkins pipeline configuration scripts (written in Groovy) start with a \u201cCheckout\u201d stage where we clone the repository that the later stages will build and test. Here\u2019s what a typical \u201cCheckout\u201d stage looks like:\n     Even though we\u2019re telling Git to do a shallow clone, to not fetch any tags, and to fetch the last 50 commits, we\u2019re still not running this operation as fast as we could be. That\u2019s because we aren\u2019t setting  the refspec option. Notice that by not setting it in the pipeline configuration script, we\u2019re telling Git to fetch all refspecs:  +refs/heads/*:refs/remotes/origin/*. In the case of Pinboard, that operation would be fetching more than 2,500 branches.\n By simply adding the refspec option and specifying which refs we care about (master, in our case), we can limit the refs to the branch we care about and save a lot of time. Here\u2019s what that looks like in our pipeline code:\n  This simple one line change reduced our clone times by 99% and significantly reduced our build times as a result. Cloning our largest repo, Pinboard went from 40 minutes to 30 seconds. It goes to show that sometimes our small efforts can have a big impact as well.\n  Like most developer productivity teams, we work on large services that have a big impact on our day-to-day experience. However, it\u2019s sometimes the one line fixes that can make a huge difference. Our work is about understanding that.\n If you have a passion for improving developer productivity, join our team! We\u2019re hiring for engineering roles on our Engineering Productivity team.\n To learn more about Engineering at Pinterest, check out our   Engineering Blog , and visit our   Pinterest Labs  site. To view and apply to open opportunities, visit our   Careers  page.", "posttime": "2020-10-26 09:26:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u66f4\u6539,change,pinterest", "title": "\u4e00\u884c\u4ee3\u7801\u7684\u66f4\u6539\u5c06\u6211\u4eec\u7684\u6784\u5efa\u65f6\u95f4\u7f29\u77ed\u4e8699%", "title_en": "A one-line change decreased our build times by 99%", "transed": 1, "url": "https://medium.com/pinterest-engineering/how-a-one-line-change-decreased-our-build-times-by-99-b98453265370", "via": "", "real_tags": ["\u4ee3\u7801", "\u66f4\u6539", "change", "pinterest"]}, {"category": "", "categoryclass": "", "imagename": "228472683f61b3c6ee640739a92e9f95.png", "infoid": 1031174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u516c\u53f8\u7684\u6210\u957f\u548c\u53d8\u5f97\u66f4\u6709\u4ef7\u503c\uff0c\u4ed6\u4eec\u80fd\u591f\u96c7\u4f63\u548c\u6295\u8d44\u4e8e\u65b0\u4ea7\u54c1\u548c\u65b0\u6280\u672f\u3002\u4f46\u4ed6\u4eec\u9700\u8981\u719f\u7ec3\u7684\u5de5\u4eba\u6765\u53d1\u5c55\u3002\n\u8fd9\u5c31\u662f\u6280\u672f\u56f0\u5883\uff1a\u5de5\u4f5c\u592a\u591a\uff0c\u5de5\u4eba\u4e0d\u591f\u3002\u5728\u5931\u4e1a\u7387\u8d85\u8fc78.4%(\u6839\u636e\u52b3\u5de5\u7edf\u8ba1\u5c40\u7684\u6570\u636e)\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u56fd\u5bb6\u8d70\u7740\u5927\u6d41\u884c\u7684\u94a2\u4e1d\uff0c\u8fd9\u5b8c\u5168\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u3002\n\u4f8b\u5982\uff0c\u8bb8\u591aFAANG\uff0c\u6216\u4e94\u5bb6\u6700\u8457\u540d\u7684\u7f8e\u56fd\u79d1\u6280\u516c\u53f8-Facebook\u3001\u82f9\u679c\u3001\u4e9a\u9a6c\u900a\u3001Netflix\u3001Alphabet(\u524d\u8eab\u4e3a\u8c37\u6b4c)-\u6b63\u5728\u96c6\u4f53\u589e\u52a0\u5458\u5de5\uff0c\u4ee5\u5e94\u5bf9\u7535\u5b50\u5546\u52a1\u5e26\u6765\u7684\u9700\u6c42\u6d8c\u5165\u3002\n\u636eCNN Business\u62a5\u9053\uff0c\u4e9a\u9a6c\u900a\u6700\u8fd1\u5ba3\u5e03\uff0c\u4ed6\u4eec\u6b63\u5728\u52a0\u5927\u5bf9\u4f01\u4e1a\u548c\u79d1\u6280\u5de5\u4f5c\u7684\u6295\u8d44\uff0c\u5e0c\u671b\u62db\u80583.3\u4e07\u540d\u65b0\u5458\u5de5\uff0c\u5e74\u85aa\u4e3a15\u4e07\u7f8e\u5143\u3002\u636e\u5f6d\u535a\u793e\u62a5\u9053\uff0cNetflix\u521b\u59cb\u4eba\u517c\u8054\u5e2d\u9996\u5e2d\u6267\u884c\u5b98\u91cc\u5fb7\u00b7\u9ed1\u65af\u5ef7\u65af\u8868\u793a\uff0c\u5728COVID\u5927\u6d41\u884c\u7684\u4e0d\u786e\u5b9a\u6027\u4e2d\uff0c\u516c\u53f8\u4e00\u76f4\u5728\u62db\u8058\uff0c\u5e76\u5c06\u7ee7\u7eed\u62db\u8058\u3002\nFacebook\u9996\u5e2d\u8fd0\u8425\u5b98\u8c22\u4e3d\u5c14\u00b7\u6851\u5fb7\u4f2f\u683c(Sheryl Sandberg)\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u544a\u8bc9CNBC\uff0c\u201c\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u9884\u8ba1\u52302020\u5e74\u5e95\u5c06\u518d\u62db\u80581\u4e07\u4eba\u3002\u201d\u5927\u591a\u6570\u53d7\u96c7\u4eba\u5458\u5c06\u62c5\u4efb\u9ad8\u85aa\u7684\u4ea7\u54c1\u548c\u5de5\u7a0b\u804c\u4f4d\u3002\n\u66f4\u4e0d\u7528\u8bf4Netflix\u7684\u5e02\u503c\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\u7ffb\u4e86\u4e00\u756a-\u4e00\u5e74\u524d\u5b83\u7684\u4ea4\u6613\u4ef7\u683c\u662f\u6bcf\u80a1254\u7f8e\u5143\uff0c\u73b0\u5728\u5f98\u5f8a\u5728500\u7f8e\u5143\u5de6\u53f3\u3002Alphabet\u540c\u671f\u4e0a\u6da8\u7ea650%\u3002\u4e9a\u9a6c\u900a\u4e0a\u6da8\u7ea680%\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6839\u636e\u53f2\u5bc6\u68ee\u79d1\u5b66\u6559\u80b2\u4e2d\u5fc3(Smithsonian Science Education Center)\u7684\u6570\u636e\uff0c2018\u5e74\u7f8e\u56fd\u6709240\u4e07\u4e2aSTEM\u5de5\u4f5c\u5c97\u4f4d\u7a7a\u7f3a\u3002\n\u4e0e\u5927\u591a\u6570\u4eba\u76f8\u6bd4\uff0c\u603b\u90e8\u4f4d\u4e8e\u7845\u8c37\u7684ID Tech\u66f4\u4e86\u89e3\u8fd9\u4e00\u6280\u80fd\u5dee\u8ddd\uff0c\u8be5\u516c\u53f8\u4e13\u95e8\u4ece\u4e8b\u6280\u672f\u6559\u80b2\uff0c\u5e76\u4e3a\u513f\u7ae5\u548c\u9752\u5c11\u5e74\u63d0\u4f9b\u5168\u5e74STEM\u9879\u76ee\uff0c\u8be5\u516c\u53f8\u53d1\u8d77\u4e86\u81ea\u5df1\u7684\u76f8\u5173\u8c03\u67e5\uff0c\u6536\u5230\u4e862000\u591a\u540d\u53d7\u8bbf\u8005\u7684\u56de\u590d\u3002\n\u8c03\u67e5\u7ed3\u679c\u5305\u62ec\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5728\u6709\u5b69\u5b50\u53c2\u52a0\u5728\u7ebf\u6216\u6df7\u5408\u9879\u76ee\u7684\u7236\u6bcd\u4e2d(\u5360\u6240\u6709\u53d7\u8bbf\u8005\u768482%)\uff0c56%\u7684\u7236\u6bcd\u5bf9\u4ed6\u4eec\u7684\u5b69\u5b50\u4eca\u5e74\u79cb\u5929\u63a5\u53d7\u7684\u6559\u80b2\u8d28\u91cf\u6ca1\u6709\u4fe1\u5fc3\u3002STEM\u8bfe\u7a0b\u7684\u8fd9\u4e00\u6570\u5b57\u751a\u81f3\u66f4\u9ad8\uff0c65%\u7684\u5bb6\u957f\u56de\u7b54\u8bf4\uff0c\u4ed6\u4eec\u4e0d\u76f8\u4fe1\u4e3a\u5b66\u751f\u63d0\u4f9b\u7684STEM\u8bfe\u7a0b\u7b26\u5408\u4ed6\u4eec\u7684\u6807\u51c6\u3002\n\u6b64\u5916\uff0c\u5728\u540c\u4e00\u9879\u8c03\u67e5\u4e2d\uff0c\u5927\u591a\u6570\u63a5\u53d7\u8c03\u67e5\u7684\u5bb6\u957f\u8868\u793a\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u7206\u53d1\u671f\u95f4\u7684\u8fd9\u4e2a\u79cb\u5929\uff0c\u4e0a\u5b66\u5bf9\u4ed6\u4eec\u7684\u5b66\u751f(55%)\u548c\u4ed6\u4eec\u81ea\u5df1(68%)\u6765\u8bf4\u538b\u529b\u66f4\u5927\u3002\u76f8\u5173\u7684\u95ee\u9898\u5305\u62ec\u5b66\u751f\u7f3a\u4e4f\u4e2a\u6027\u5316\u7684\u6ce8\u610f\u529b(57%)\u548c\u5b66\u751f\u5728\u4e0a\u5b66\u671f\u95f4\u611f\u5230\u65e0\u804a(43%)\u3002\n\u968f\u7740\u6559\u80b2\u7cfb\u7edf\u4ece\u65b0\u51a0\u80ba\u708e\u7684\u526f\u4f5c\u7528\u4e2d\u6447\u6447\u6b32\u5760\uff0c\u4e00\u4e2a\u5168\u65b0\u7684\u8bcd\u6c47\u51fa\u73b0\u4e86\uff0c\u4ece\u201c\u6d41\u884c\u75c5\u8c46\u835a\u201d\u5230\u201c\u75af\u72c2\u7684\u547c\u5524\u201d\u3002\u5b66\u6821\u548c\u6559\u5e08\u6b63\u5728\u52aa\u529b\u5e94\u5bf9\u6240\u6709\u6254\u5728\u4ed6\u4eec\u8eab\u4e0a\u7684\u4e8b\u60c5\uff0c\u4f46\u5e76\u6ca1\u6709\u4ec0\u4e48\u7075\u4e39\u5999\u836f\u3002\u5bb6\u957f\u4eec\u6b63\u5728\u4e89\u5148\u6050\u540e\u5730\u5bfb\u627e\u521b\u9020\u6027\u7684\u65b9\u6cd5\u6765\u8986\u76d6\u4e2d\u65ad\u7684\u5b66\u5e74\u3002\u8fd9\u5c31\u662f\u5c11\u6570\u8fd0\u8425\u5546\uff0c\u5982ID Tech\uff0c\u6b63\u5728\u4ecb\u5165\u586b\u8865\u6280\u80fd\u7f3a\u53e3\u3002\n\u201c\u73b0\u5728\u7684\u9700\u6c42\u662f\u5de8\u5927\u7684--\u5728\u4e3b\u8981\u79d1\u6280\u516c\u53f8\u7684\u9700\u6c42\u548c\u6211\u4eec\u6bcf\u5929\u6559\u7ed9\u5b69\u5b50\u7684\u4e1c\u897f\u4e4b\u95f4\u5b58\u5728\u7740\u5de8\u5927\u7684\u6280\u80fd\u5dee\u8ddd\u3002\u4ece\u5c0f\u5b9a\u671f\u6df1\u5165\u63a5\u89e6STEM\u4e3b\u9898\u5bf9\u6211\u4eec\u5b69\u5b50\u7684\u672a\u6765\u548c\u6211\u4eec\u56fd\u5bb6\u7684\u672a\u6765\u7edd\u5bf9\u81f3\u5173\u91cd\u8981\uff0c\u201cID Tech\u9996\u5e2d\u6267\u884c\u5b98\u3001\u4e09\u4e2a\u5b66\u9f84\u513f\u7ae5\u7684\u7236\u4eb2\u76ae\u7279\u00b7\u82f1\u683c\u62c9\u59c6-\u8003\u5947(Pete Ingram-Cauchi)\u8bf4\u3002\nID Tech\u6559\u6388\u4ece\u865a\u62df\u673a\u5668\u4eba\u5230Roblox\u548c3D\u6253\u5370\uff0c\u4ee5\u53caJava\u3001Python\u548cUnity\u7b49\u6309\u9700\u7f16\u7801\u8bed\u8a00\u7b49\u5c16\u7aef\u4e3b\u9898\u3002\u5b83\u6700\u8fd1\u8fd8\u63a8\u51fa\u4e86\u4e00\u9879\u6570\u5b66\u8f85\u5bfc\u670d\u52a1\uff0c\u4ee5\u56de\u5e94\u6d88\u8d39\u8005\u7684\u9700\u6c42\u3002ID Tech\u7684\u6821\u53cb\u7ecf\u5e38\u7ee7\u7eed\u4e3a\u4e9a\u9a6c\u900a(Amazon)\u3001\u8c37\u6b4c(Google)\u3001\u5fae\u8f6f(Microsoft)\u4ee5\u53caFacebook\u7b49\u516c\u53f8\u5de5\u4f5c\uff0c\u5728Facebook\uff0c\u524dID Tech\u8425\u5458\u79d1\u5c14\u00b7\u9c8d\u767b(Cole Bowden)\u62e5\u62b1\u4e86\u81ea\u5df1\u7684\u9053\u8def\uff0c\u4ece\u5b66\u751f\u5230\u6559\u5e08\uff0c\u518d\u5230\u73b0\u5728\u7684\u5de5\u7a0b\u5e08\u3002\n\u9876\u7ea7\u79d1\u6280\u516c\u53f8\u6b63\u5728\u5173\u6ce8\u8fd9\u4e00\u95ee\u9898\u3002\u6700\u8fd1\uff0cID Tech\u4e0eNVIDIA\u3001Salesforce\u3001\u8bfa\u57fa\u4e9a\u3001Hudson River Trading\u3001T-Mobile\u548cGoogle\u5408\u4f5c\uff0c\u57f9\u8bad\u4e86\u6765\u81ea\u5168\u56fd\u5404\u5730\u7684\u6570\u5343\u540d\u513f\u7ae5\u3002\u201c\u8fd9\u662f\u516c\u53f8\u76ee\u524d\u9700\u8981\u7684\u4eba\u624d\u7ba1\u9053\u3002\u800c\u4e14\u8fd9\u4e9b\u5de5\u4f5c\u90fd\u662f\u6709\u5229\u53ef\u56fe\u7684\u3002\u201c\u82f1\u683c\u62c9\u59c6-\u8003\u5947\u8bf4\u3002", "note_en": "As companies grow and become more valuable, they\u2019re able to hire and invest in new products and technologies. But they need skilled workers to grow.\n This is the Tech Dilemma: Too many jobs, not enough workers. Not exactly what you\u2019d expect with the country walking a pandemic tightrope with over 8.4% unemployment (according to the  Bureau of Labor Statistics).\n For instance, many of the FAANGs, or five of the most prominent American tech companies \u2013 Facebook, Apple, Amazon, Netflix, Alphabet (formerly known as Google) \u2013 are collectively adding employees to handle the influx of demand attributed to eCommerce.\n Amazon recently announced that they are ramping up investments in corporate and tech jobs, looking to hire 33,000 new employees with annual compensation packages at $150,000, according to  CNN Business. And Netflix founder and co-chief executive officer Reed Hastings said the company has been and will keep hiring through the uncertainty of the COVID pandemic, per  Bloomberg.\n Facebook COO, Sheryl Sandberg  told CNBC earlier in the year\u00a0\u201cthat the social media company expects to hire an additional 10,000 people by the end of 2020.\u201d The majority of the hires will be in highly-compensated product and engineering roles.\n Not to mention that the market cap of Netflix has doubled in the past year\u2014it was trading at $254 a share a year ago, and is now hovering around $500. Alphabet is up about 50% for the same period. And Amazon is up about 80%.\n All of that said, according to the  Smithsonian Science Education Center, 2.4 million STEM Jobs went unfilled in the U.S in 2018.\n Understanding this skills gap better than most, Silicon Valley-based  iD Tech, which specializes in tech education, and operator of year-round STEM-based programs for kids and teens, launched its own related survey, hearing back from more than 2,000 respondents.\n Findings included the fact that, among parents with children in an online or hybrid program (82% of all respondents), 56% of parents are not confident in the quality of education their children are receiving this fall. That number is even higher for STEM offerings, with 65% of parents responding that they don\u2019t believe STEM programs offered to their students meet their standards.\n Additionally, in the same survey, the majority of parents polled stated that schooling this fall during the COVID-19 pandemic was more stressful for their students (55%) and for themselves (68%). Related takeaways include a lack of individualized student attention (57%) and students being bored during the school day (43%).\n With an educational system reeling from the side effects of COVID-19, a whole new lexicon has emerged, from \u201cpandemic pods\u201d to \u201cZoom calls.\u201d Schools and teachers are working to handle all that is being thrown at them, but there is no silver bullet. Parents are scrambling to find creative ways to cover a disrupted school year. That is where a handful of operators, like iD Tech, are stepping in to fill the skills gap.\n \u201cThe need is enormous right now\u2014there is a massive skills gap between the needs that major tech companies have, and what we are teaching our kids every day. Gaining deep exposure to STEM topics on a regular basis at an early age is absolutely vital to the future of our kids, and to the future of our country,\u201d said Pete Ingram-Cauchi, CEO of iD Tech and father of three school-aged children.\n iD Tech teaches cutting-edge topics ranging from virtual robotics to Roblox and 3D printing, and in-demand coding languages like Java, Python, and Unity. It also recently launched a math tutoring service in response to consumer demand. iD Tech alumni often go on to work for companies like Amazon, Google, Microsoft, and also Facebook, where  Cole Bowden \u2013 former iD Tech camper \u2013 embraced his pathway and went from student to instructor to now engineer.\n Top tech companies are taking notice. Recently, iD Tech has collaborated with NVIDIA, Salesforce, Nokia, Hudson River Trading, T-Mobile, and Google to train up thousands of kids from all over the country. \u201cThis is the pipeline of talent that companies need, right now. And the jobs are lucrative,\u201d said Ingram-Cauchi.", "posttime": "2020-10-26 08:43:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56f0\u5883,dilemma", "title": "\u6280\u672f\u56f0\u5883\uff1a\u804c\u4f4d\u7a7a\u7f3a\uff0c\u5de5\u4eba\u7a00\u5c11\uff0c\u5bf9STEM\u6559\u80b2\u7f3a\u4e4f\u4fe1\u5fc3", "title_en": "Tech Dilemma: Unfilled jobs, few workers, lack of confidence in STEM education", "transed": 1, "url": "https://www.mactech.com/2020/10/07/the-tech-dilemma-unfilled-jobs-few-workers-lack-of-confidence-in-stem-education/", "via": "", "real_tags": ["\u56f0\u5883", "dilemma"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9664\u4e86\u5728\u654c\u4eba\u8eab\u4e0a\u5b89\u653e\u79d8\u5bc6\u76d1\u542c\u88c5\u7f6e(\u7a83\u542c\u5668)\u5916\uff0c\u65af\u5854\u897f\u7684\u4efb\u52a1\u8fd8\u5305\u62ec\u68c0\u67e5\u6216\u6e05\u626b\u91cd\u8981\u7684\u7269\u4f53\uff0c\u5982\u653f\u5e9c\u529e\u516c\u5ba4\u3001\u9152\u5e97\u548c\u5927\u4f7f\u9986\uff0c\u4ee5\u53d1\u73b0\u6765\u81ea\u56fd\u5185\u5916\u654c\u4eba\u7684\u7a83\u542c\u548c\u5176\u4ed6\u95f4\u8c0d\u6d3b\u52a8\u3002\u8fd9\u9879\u4efb\u52a1\u88ab\u79f0\u4e3aAufgabe X(\u4efb\u52a1X)\uff0c\u5176\u6280\u672f\u901a\u5e38\u88ab\u79f0\u4e3aKonterTechnik(\u5bf9\u7b56)\uff0c\u6216Operatieve Kontroll-und Suchtech ik(\u64cd\u4f5c\u68c0\u67e5\u548c\u641c\u7d22\u6280\u672f)\uff0c\u6216\u8005\u66f4\u4e00\u822c\u5730\u79f0\u4e3a\uff1aX-Technik(X-\u6280\u672f)\u3002\u8fd9\u9879\u4efb\u52a1\u88ab\u79f0\u4e3aAufgabe X(\u4efb\u52a1X)\uff0c\u5176\u6280\u672f\u901a\u5e38\u88ab\u79f0\u4e3aKonterTechnik(\u5bf9\u7b56)\u6216Operatieve Kontroll-und Suchtech ik(\u64cd\u4f5c\u68c0\u67e5\u548c\u641c\u7d22\u6280\u672f)\uff0c\u6216\u8005\u66f4\u4e00\u822c\u5730\u79f0\u4e3a\uff1aX-Technik(X\u6280\u672f)\u3002\n\u867d\u7136\u6709\u4e9b\u8bbe\u5907\u6709\u4ee3\u53f7\uff0c\u4f46\u65af\u5854\u897f\u4f7f\u7528\u7684\u6240\u6709\u6280\u672f\u90fd\u6709\u4e00\u4e2a\u9879\u76ee\u7f16\u53f7\u3002\u4ece\u4fdd\u52a0\u5229\u4e9a\u7b49\u5176\u4ed6\u56fd\u5bb6\u7684\u5b89\u5168\u90e8\u95e8\u8d2d\u4e70\u7684\u8bbe\u5907\u4e5f\u662f\u5982\u6b64\uff0c\u5c3d\u7ba1\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9879\u76ee\u7f16\u53f7\u4e0d\u8be6\u3002\u4e0a\u56fe\u663e\u793a\u4e86\u9879\u76ee\u7f16\u53f7\u662f\u5982\u4f55\u6784\u9020\u7684\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u544a\u8bc9\u6211\u4eec\u54ea\u4e2a\u90e8\u95e8\u8d1f\u8d23\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u662f\u7b2c33\u90e8\uff0c\u4e5f\u5c31\u662fAu\u00fcenstelle Beucha(Beucha\u524d\u54e8)\u30021977\u5e74\u524d\uff0c\u7701\u7565\u524d\u7f00\u6216\u4f7f\u7528\u524d\u7f00AB\uff0c\u540e\u4e24\u4e2a\u6570\u5b57\u5b9a\u4e49\u4e3b\u9898\u548c\u4e3b\u9898\u4e2d\u7684\u7ec4\u3002\u63a5\u4e0b\u6765\u7684\u4e24\u4e2a\u6570\u5b57\u5b9a\u4e49\u5b9e\u9645\u9879\u76ee(\u5728\u7ec4\u5185)\u3002\u5982\u679c\u8bbe\u5907\u662f\u5957\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u5219\u7834\u6298\u53f7\u540e\u9762\u7684\u6570\u5b57\u6307\u5b9a(\u5728\u5957\u4ef6\u5185)\u9879\u76ee\u7f16\u53f7\u3002\u6700\u540e\u4e24\u4f4d\u662f\u53ef\u9009\u7684\uff0c\u6307\u5b9a\u7248\u672c\u6216\u53d8\u4f53\u3002\n\u6839\u636e\u4e0e\u7a83\u542c\u5668(\u6216\u5185\u7f6e)\u4e00\u8d77\u4f7f\u7528\u7684\u9ea6\u514b\u98ce\u7684\u7c7b\u578b\u4ee5\u53ca\u7535\u8def\u4e2d\u653e\u5927\u7ea7\u7684\u6570\u91cf\uff0c\u67d0\u4e9b\u8bbe\u5907\u6bd4\u5176\u4ed6\u8bbe\u5907\u5177\u6709\u66f4\u597d\u7684\u97f3\u9891\u7075\u654f\u5ea6\uff0c\u4ece\u800c\u4f7f\u626c\u58f0\u5668\u79bb\u9ea6\u514b\u98ce\u66f4\u8fdc\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u5c06Abug\u7684\u97f3\u9891\u7075\u654f\u5ea6\u6307\u5b9a\u4e3a\u4ee5\u4e0b\u7ea7\u522b\u4e4b\u4e00(\u572875 kHz\u504f\u5dee\u4e0b\u6d4b\u91cf)\uff1a\n\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd(DDR)--\u524d\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8bb0\u5f55\u8054\u90a6\u4e13\u5458(DDR)\u7684\u6b63\u5f0f\u5730\u5740\uff1a\u5fb7\u56fd\u8054\u90a6\u9a7b\u65af\u5854\u585e\u820d\u5c14\u65af\u5171\u548c\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8bb0\u5f55\u4e13\u5458(DDR)--\u524d\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8bb0\u5f55\u8054\u90a6\u4e13\u5458(\u4ee5\u4e0b\u7b80\u79f0\u201c\u8054\u90a6\u4e13\u5458\u201d)\uff1a\u5fb7\u56fd\u8054\u90a6\u6c11\u4e3b\u5171\u548c\u56fd(DDR)--\u524d\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd(\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd)\u56fd\u5bb6\u5b89\u5168\u5c40\u8bb0\u5f55\u7684\u8054\u90a6\u4e13\u5458(\u4ee5\u4e0b\u7b80\u79f0\u201c\u5fb7\u610f\u5fd7\u8054\u90a6\u5171\u548c\u56fd\u201d)(\u4ee5\u4e0b\u7b80\u79f0\u201c\u5fb7\u610f\u5fd7\u8054\u90a6\u5171\u548c\u56fd\u8054\u90a6\u59d4\u5458\u201d)\uff0c\u7531\u524d\u5fb7\u610f\u5fd7\u6c11\u4e3b\u5171\u548c\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8bb0\u5f55\u59d4\u5458\u4f1a\u6210\u5458\u7ec4\u6210\u3002\u27a4\u7f51\u7ad9\u3002\nCentrales Kontrollsystem\u63a7\u5236\u7cfb\u7edf-\u7535\u5b50\u7cfb\u7edf\uff0c\u7531Stasi\u572820\u4e16\u7eaa60\u5e74\u4ee3\u4e2d\u671f\u5f00\u53d1\uff0c\u7528\u4e8e\u5904\u7406\u7535\u8bdd\u7a83\u542c\u548c\u6709\u7ebf\u9690\u853d\u7a83\u542c\u88c5\u7f6e(Bug)\u3002\u8be5\u7cfb\u7edf\u7531Ceko 2\u53f7\u63a5\u66ff\u3002\nEndstellengestell\u5fb7\u8bed\u5355\u8bcd\uff0c\u8868\u793a\u7ec8\u7aef\u5355\u5143\u6216\u884c\u5c3e\u8bbe\u5907\u3002\u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u7528\u4e8e\u6700\u7ec8(\u8fdc\u7a0b)\u76d1\u542c\u7ad9\u6216\u76d1\u6d4b\u7ad9\u3002\nHochrequenz\u5fb7\u8bed\u5355\u8bcd\u7684\u9ad8\u9891(HF)\uff0c\u4e5f\u79f0\u4e3a\u65e0\u7ebf\u7535\u9891\u7387(RF)\u3002\u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u7528\u4e8e\u8bc6\u522b\u65e0\u7ebf\u7535\u7a83\u542c\u5668\u3002\nHauptverwaltung Aufkl\u00e4rung\u4fa6\u5bdf\u603b\u5c40\u662f\u53f2\u5854\u897f\u7684\u4e00\u4e2a\u90e8\u95e8\uff0c\u8d1f\u8d23\u56fd\u5185\u5916\u95f4\u8c0d\u6d3b\u52a8\u548c\u5916\u56fd\u79d8\u5bc6\u884c\u52a8\u3002\nInoffizielle Mitarbeiter\u975e\u5b98\u65b9\u96c7\u5458-Stasi\u662f\u590d\u5458\u65b9\u6848\u5185\u5916\u7684\u6c11\u95f4\u544a\u5bc6\u8005\u7684\u540d\u5b57\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u59a5\u534f\u548c\u64cd\u7eb5\u7684\u65b9\u5f0f\u62db\u52df\u7684\u3002\nInfrarot\u5fb7\u8bed\u4e2d\u7684\u7ea2\u5916\u7ebf(IR)\u4e00\u8bcd\u3002\u5149\u8c31\u4e2d\u7ea2\u7aef\u7684\u5149\u7ebf\uff0c\u8089\u773c\u770b\u4e0d\u89c1\u3002\n\u524d\u4e1c\u5fb7(\u4e1c\u5fb7)\u56fd\u5bb6\u5b89\u5168\u90e8\u90e8\u957f\uff1b\u4e16\u754c\u4e0a\u6700\u6709\u6548\u548c\u6700\u4e13\u5236\u7684\u60c5\u62a5\u548c\u79d8\u5bc6\u8b66\u5bdf\u673a\u6784\u4e4b\u4e00\u3002\u8be5\u673a\u6784\u901a\u5e38\u88ab\u79f0\u4e3aStasi\uff0c\u662fStaats-Sinherheit\u7684\u7f29\u5199\uff0c\u603b\u90e8\u8bbe\u5728\u4e1c\u67cf\u6797\u3002\u65af\u5854\u897f\u4e0e\u4fc4\u7f57\u65af\u60c5\u62a5\u673a\u6784\u514b\u683c\u52c3\u5173\u7cfb\u5bc6\u5207\u3002\u27a4\u3001\u7ef4\u57fa\u767e\u79d1\u3001\u27a4\u3001\u7ef4\u57fa\u767e\u79d1\u5fb7\u56fd\u3002\nNiederfrequenz\u5fb7\u8bed\u5355\u8bcd\u7684\u97f3\u9891(AF)\uff0c\u4e5f\u79f0\u4e3a\u4f4e\u9891(LF)\u3002\u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u7528\u4e8e\u8bc6\u522b\u97f3\u9891\u9519\u8bef\u3002\n\u4e0d\u9700\u8981\u81ea\u5df1\u7684\u672c\u5730\u7535\u6e90\u7684\u9690\u853d\u76d1\u542c\u8bbe\u5907(Bug)\u7684\u88ab\u52a8\u5143\u7d20\u901a\u7528\u8868\u8fbe\u5f0f\u3002\u5b83\u901a\u5e38\u662f\u7531\u4ece\u9644\u8fd1\u4f4d\u7f6e\u53d1\u5c04\u5230\u5b83\u8eab\u4e0a\u7684\u80fd\u91cf\u63d0\u4f9b\u52a8\u529b\u7684\u3002\nTr\u00e4gerfrequenz\u5fb7\u8bed\u4e2d\u8f7d\u6ce2\u9891\u7387(CF)\u7684\u5355\u8bcd\uff0c\u901a\u5e38\u7f29\u5199\u4e3aCarrier\u3002\u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u7528\u4e8e\u8bc6\u522b\u8f7d\u4f53\u9519\u8bef\u3002\n2018\u5e745\u6708\u901a\u8fc7Detlev Vreisleben\u4eceBStU[4]\u83b7\u5f97\u7684\u6709\u7ebfStasi\u9519\u8bef\u7684\u793a\u610f\u56fe\u6982\u8ff0[3]\u30022018\u5e745\u6708\u901a\u8fc7Detlev Vreisleben\u4eceBStU[4]\u83b7\u5f97\u7684\u65e0\u7ebfStasi\u6f0f\u6d1e\u793a\u610f\u56fe\u6982\u8ff0\u3002Stasi\u7684DAS Telefon-ABH\u00f6rsystem des MFS(Aufgabe A)\u7535\u8bdd\u7a83\u542c\u7cfb\u7edf(\u4efb\u52a1A)\u3002\u5fb7\u6587\u30022017\u5e745\u67085\u65e5\uff0c\u5e95\u7279\u5f8bVreisleben[3]\u3002\u65af\u5854\u897f\u76d1\u542cMFS(Aufgabe B)\u623f\u95f4(\u4efb\u52a1B)\u7684Akustische Raumkontrolle des MFS(Aufgabe B)\u3002\u5fb7\u6587\u3002\u5e95\u7279\u5217\u592bVreisleben\uff0c2018\u5e742\u670827\u65e5[3]\u3002Optische Raumkontrolles des MFS(Aufgabe D)\u7531STASI\u76d1\u63a7\u5149\u5b66\u5ba4(\u4efb\u52a1D)\u3002\u5fb7\u6587\u30022017\u5e741\u670820\u65e5\uff0c\u5e95\u7279\u5217\u592bVreisleben[3]\u3002", "note_en": "Apart from  placing  covert listening devices (bugs)with their adversaries, the task of the Stasiwas also to check \u2013 or  sweep \u2013 important objects,such as government offices, hotels and embassies, in order todiscover bugs and other espionage activities from their adversaries,both foreign and domestic.This assignment was known as  Aufgabe X (assignment X) and the technology forit was commonly known as  Kontertechnik (countermeasures),or  Operatieve Kontroll- und Suchtechnik (operational check and searchtechnology), or more generally as:  X-Technik (X-technology).\n Although some devices have a codename, all technology that was used bythe Stasi, was given a project number. This was also the case for equipmentthat was bought from security services in other countries, such as Bulgaria,although in some cases the project number is unknown.      The diagram above shows how the project number is constructed.The first digit tells us which department was responsible for it. In thiscase it is department 33, which was  Au\u00dfenstelle Beucha (OutstationBeucha). Before 1977, the prefix &#39;3&#39; was omitted, or the prefix &#39;AB&#39; was used.The next two digits define the  theme and the  group withinthe theme. The next two digits define the actual project (within the group).If a device is part of a kit, the number behind the dash specifies the itemnumber (within the kit). The last two digits are optional, andspecify the version or variant.\n Depending on the type of microphone that was used with (or inside) a bug,and the number of amplifier stages in the circuit, some devices had abetter audio sensitivity than others, allowing the speaker to be furtheraway from the microphone. For this reason, the audio sensitivity of abug was often specified as one of the following classes (measured at75 kHz deviation):\n Bundesbeauftragte fur die Stasi-Unterlagen   Officially: Bundesbeauftragte f\u00fcr die Unterlagen des Staatssicherheitsdienstes der ehemaligen Deutschen Demokratischen Republik (  DDR) \u2014 Federal Commissioner for the Records of the State Security Service of the former German Democratic Republic (  GDR).  \u27a4\u00a0 Website\n  Centrales Kontrollsystem   Contral Control System \u2014 Electronic system, developed by the Stasi in the mid-1960s \u2014 for processing telephone taps and wired covert liestening devices (bugs). The system was succeeded by  CEKO 2.\n  Endstellengestell   German word for  terminating unit or  end-of-line device. In this context used for the final (remote) listening post or monitoring station.\n  Hochfrequenz   German word for High Frequency (HF), also known as Radio Frequency (RF). In this context used to identify radio bugs.\n  Hauptverwaltung Aufkl\u00e4rung   Main Directorate for Reconnaissance, a department of the Stasi, responsible for foreign and domestic espionage and for foreign covert operations.\n  Inoffizielle Mitarbeiter   Unofficial Employee \u2014 Stasi name for civil informants, inside and outside the DDR, often recruted by means of compromise and manipulation.\n  Infrarot   German word for Infra-Red (IR). Light rays at the  red end of the spectrum, invisible to the human eye.\n  Ministerium f\u00fcr Staatssicherheit   Ministery for State Security of the former DDR (East Germany); one of most effective and repressive intelligence and secret police agencies in the world. The agency is commonly known as  Stasi, which is the abbreviation of  Staats- Sicherheit, and had its headquarters in East-Berlin. The Stasi had strong ties with the Russian intelligence service   KGB.  \u27a4\u00a0 Wikipedia\u00a0  \u27a4\u00a0 Wikipedia Germany\n  Niederfrequenz   German word for Audio Frequency (AF), also known as Low Frequency (LF). In this context used to identify   audio bugs.\n  Passive Element   Common expression for a covert listening device (bug) that does not need its own local power source. It is commonly powered by energy that is beamed at it from a nearby location.\n    Tr\u00e4gerfrequenz   German word for Carrier Frequency (CF), commonly abbreviated to Carrier. In this context used to identify   carrier bugs.\n       Schematic overview of wired Stasi bugs  Obtained May 2018 from BStU  [4] via Detlev Vreisleben  [3].      Schematic overview of wireless Stasi bugs  Obtained May 2018 from BStU  [4] via Detlev Vreisleben  [3].      Das Telefon-Abh\u00f6rsystem des MfS (Aufgabe A)  Telephone tapping system of the Stasi (assignment A). German.  Detlev Vreisleben, 5 May 2017  [3].      Die akustische Raumkontrolle des MfS (Aufgabe B)  Room bugging by the Stasi (assignment B). German.  Detlev Vreisleben, 27 February 2018  [3].      Die optische Raumkontrolles des MfS (Aufgabe D)  Optical room monitoring by the Stasi (assignment D). German.  Detlev Vreisleben, 20 January 2017  [3].", "posttime": "2020-10-26 08:22:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5854\u897f,listening,stasi", "title": "\u53f2\u5854\u897f\u4f7f\u7528\u7684\u9690\u853d\u76d1\u542c\u8bbe\u5907", "title_en": "Covert Listening Devices Used by Stasi", "transed": 1, "url": "https://www.cryptomuseum.com/intel/stasi/index.htm", "via": "", "real_tags": ["\u5854\u897f", "listening", "stasi"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031172, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6307\u5357\u3001\u6f2b\u65e0\u8fb9\u9645\u7684\u6c89\u601d\u548c\u957f\u957f\u7684\u6587\u5b57\u5899", "note_en": "Guides, random musings, and long walls of text", "posttime": "2020-10-26 08:22:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u5de5\u5177,generative,\u6307\u5357", "title": "\u751f\u6210\u827a\u672f\u548c\u5b9e\u65f6\u7f16\u7801\u5de5\u5177\u5217\u8868", "title_en": "List of Generative Art and Live Coding Tools", "transed": 1, "url": "https://opinionatedguide.github.io#/Design/d5-gen", "via": "", "real_tags": ["\u827a\u672f", "\u5de5\u5177", "\u6307\u5357"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031170, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f7f\u7528\u997c\u5e72\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7ed9\u4f60\u6700\u597d\u7684\u7ecf\u9a8c\uff0c\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u3002\n\u60a8\u7684\u6d4f\u89c8\u5668\u4f3c\u4e4e\u4e0d\u652f\u6301\u5b83\u4eec\uff0c\u8fd9\u4f1a\u5f71\u54cd\u7f51\u7ad9\u529f\u80fd\u3002", "note_en": "We use cookies to ensure that we give you the best experience on our website.\n  It seems your browser doesn&#39;t support them and this affects the site functionality.", "posttime": "2020-10-26 08:21:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,compiling,\u7f51\u7ad9", "title": "\u5728\u4e0d\u4f7f\u7528\u5ef6\u7eed\u7684\u60c5\u51b5\u4e0b\u7f16\u8bd1", "title_en": "Compiling Without Continuations", "transed": 1, "url": "https://dl.acm.org/doi/10.1145/3062341.3062380", "via": "", "real_tags": ["\u7f16\u8bd1", "compiling", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031168, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "10\uff1a25-20\u4e2a\u4eba\u7535\u8111\u7684\u672a\u6765\u5728\u6211\u770b\u6765\u76f8\u5f53\u9eef\u6de1\u300220\u4e16\u7eaa80\u5e74\u4ee3\u4e2a\u4eba\u7535\u8111\u7684\u9ec4\u91d1\u65f6\u4ee3\u65e9\u5df2\u8fc7\u53bb\u3002\u5728\u8fc7\u53bb\u5341\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u542c\u8bf4\u548c\u770b\u5230\u653f\u5e9c\u548c\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u4f9b\u5e94\u5546\u4e00\u76f4\u5728\u53d1\u660e\u7684\u65b0\u65b9\u6cd5\u7684\u6548\u679c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u4e3a\u4e86\u9650\u5236\u6211\u4eec\u8ba1\u7b97\u673a\u7684\u80fd\u529b\u548c\u6548\u7528\u3002\u5728\u6211\u770b\u6765\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u6211\u4eec\u5728\u4ed6\u4eec\u7684\u751f\u6001\u7cfb\u7edf\u4e2d\u88ab\u5f81\u670d\uff0c\u6211\u4eec\u5bf9\u4ed6\u4eec\u7684\u4e91\u89e3\u51b3\u65b9\u6848\u7684\u4f9d\u8d56\u3002\u65e0\u8bba\u4ed6\u4eec\u7684\u5de5\u5177\u662fUEFI\uff0c\u8fd8\u662f\u6dd8\u6c70\u6709\u7528\u7684\u8f6f\u4ef6(\u5c31\u50cf\u4e0a\u5468YouTube Downloader\u7f51\u7ad9\u88abDMCA\u5173\u95ed\u90a3\u6837)\uff0c\u8fd8\u662f\u521b\u5efa\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c06\u8ba1\u7b97\u80fd\u529b\u4ece\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u8f6c\u79fb\u5230\u4e91\u4e2d\uff0c\u8fd8\u662f\u5176\u4ed6\u4e00\u4e9b\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u7684\u5b89\u5168\u786c\u4ef6\uff0c\u90fd\u65e0\u5173\u7d27\u8981\u3002\u95ee\u9898\u662f\uff0c\u4ed6\u4eec\u8ba9\u6211\u4eec\u8d8a\u6765\u8d8a\u96be\u7528\u7535\u8111\u505a\u6211\u4eec\u60f3\u505a\u7684\u4e8b\u3002\u4ed6\u4eec\u6210\u529f\u5730\u62ff\u8d70\u4e86\u6211\u4eec\u7684\u901a\u7528\u8ba1\u7b97\u673a\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u4ec5\u4ec5\u662f\u4e92\u8054\u7f51\u8bbe\u5907\u3002\n\u4e92\u8054\u7f51\u8bbe\u5907\u6709\u5b83\u7684\u4f4d\u7f6e\uff0c\u901a\u7528\u8ba1\u7b97\u673a\u4e5f\u6709\u5b83\u7684\u4f4d\u7f6e\u3002\u901a\u7528\u7535\u8111\u5141\u8bb8\u6211\u4eec\u62e5\u6709\u81ea\u5df1\u7684\u97f3\u4e50\u548c\u89c6\u9891--\u800c\u4e0d\u4ec5\u4ec5\u662f\u89c2\u770b\uff0c\u76f4\u5230Netflix\u4e0e\u6211\u4eec\u6700\u559c\u6b22\u7684\u661f\u7403\u5927\u6218\u7535\u5f71\u7684\u5408\u540c\u5230\u671f\uff0c\u6216\u8005\u82f9\u679c\u51b3\u5b9a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u963b\u6b62\u6211\u4eec\u8bbf\u95ee\u5176\u5e93\u5b58\u4e2d\u6211\u4eec\u6700\u559c\u6b22\u7684\u6b4c\u66f2\u3002\u901a\u7528\u8ba1\u7b97\u673a\u8fd8\u53ef\u4ee5\u8ba9\u6211\u4eec\u62e5\u6709\u653f\u5e9c\u3001\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u516c\u53f8\u4ee5\u53ca\u97f3\u4e50\u548c\u7535\u5f71\u4e1a\u4e0d\u613f\u62e5\u6709\u7684\u5e94\u7528\u7a0b\u5e8f--\u5982Kodi\u3001\u624b\u5239\u3001VLC\u64ad\u653e\u5668\u3001YouTube\u4e0b\u8f7d\u5668\u3001DVD\u5f00\u819b\u624b\u548c\u5f00\u6e90\u5206\u6563\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ec5\u4e3e\u51e0\u4f8b\u3002\n\u6211\u5bf9\u65b0\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u8bb8\u591a\u4e0d\u559c\u6b22\u4e4b\u5904\u90fd\u662f\u4ee5\u7626\u7684\u540d\u4e49\u5f3a\u52a0\u7ed9\u6211\u4eec\u7684\u3002\u6211\u53ea\u80fd\u731c\u6d4b\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u5236\u9020\u5546\u5bf9\u8f7b\u8584\u7684\u6267\u7740\u662f\u4e3a\u4e86\u76c8\u5229\uff0c\u56e0\u4e3a\u8fd9\u80af\u5b9a\u4e0d\u662f\u53ef\u7528\u6027\u7684\u95ee\u9898\u3002\u7531\u4e8e\u6c14\u6d41\u4e0d\u8db3\uff0c\u8d85\u8584\u7b14\u8bb0\u672c\u7535\u8111\u7684\u6563\u70ed\u8282\u6d41\u9600\u3002\u5b83\u4eec\u7684\u53ef\u7ef4\u4fee\u6027\u548c\u53ef\u5347\u7ea7\u6027\u4e5f\u8f83\u5dee\u3002\u6709\u4e9b\u6839\u672c\u4e0d\u80fd\u5347\u7ea7\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4f3c\u4e4e\u6bcf\u5e74\u90fd\u6709\u66f4\u9ad8\u6bd4\u4f8b\u7684\u7b14\u8bb0\u672c\u7535\u8111\u662f\u5b8c\u5168\u4e0d\u53ef\u5347\u7ea7\u7684\u3002\u7528\u6237\u53ef\u66f4\u6362\u7684\u7535\u6c60\u65e9\u5df2\u4e0d\u590d\u5b58\u5728\u3002\n\u7b14\u8bb0\u672c\u7535\u8111\u5236\u9020\u5546\u4e5f\u4ee5\u5b89\u5168\u7684\u540d\u4e49\u8bc1\u660e\u53ef\u7528\u6027\u4e0b\u964d\u662f\u5408\u7406\u7684\u3002\u6211\u5e94\u8be5\u79f0\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e3a\u5b89\u5168\u5267\u573a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7ed9\u5fae\u8f6f\u5e26\u6765\u7684\u597d\u5904\u4f3c\u4e4e\u6bd4\u8ba1\u7b97\u673a\u7528\u6237\u66f4\u591a\u3002\u8bb8\u591a\u4eba\u8bf4\uff0cUEFI\u662f\u4e00\u4e2a\u8fc7\u4e8e\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5b83\u63d0\u4f9b\u7684\u653b\u51fb\u9762\u6bd4BIOS\u5927\u5f97\u591a\uff0c\u800c\u4e14\u5728UEFI\u5b9e\u73b0\u4e2d\u53d1\u73b0\u4e86\u51e0\u4e2a\u5b89\u5168\u7f3a\u9677\uff0c\u4f3c\u4e4e\u5426\u5b9a\u4e86\u8bb8\u591a\u5047\u5b9a\u7684\u597d\u5904\u3002\u867d\u7136\u6211\u7406\u89e3\u56fa\u4ef6\u6076\u610f\u8f6f\u4ef6\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u6b63\u5f53\u7406\u7531\uff0c\u4f46\u5728\u6211\u770b\u6765\uff0cUEFI\u4f3c\u4e4e\u66f4\u591a\u7684\u662f\u5c06Linux\u9501\u5728\u7b14\u8bb0\u672c\u7535\u8111\u5e02\u573a\u4e4b\u5916\uff0c\u4ee5\u786e\u4fdd\u5fae\u8f6fWindows\u4fdd\u6301\u4e3b\u5bfc\u5730\u4f4d\u3002\u65e2\u7136\u5fae\u8f6f\u5df2\u7ecf\u8f93\u6389\u4e86\u8fd9\u573a\u6218\u6597\uff0c\u6211\u4eec\u8fd8\u80fd\u91cd\u65b0\u9009\u62e9\u5b89\u88c5\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u5417\uff1f\u6211\u6000\u7591\u3002\n\u6211\u77e5\u9053\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5e0c\u671b\u90fd\u5931\u53bb\u4e86\u3002\u4eba\u4eec\u60f3\u65b9\u8bbe\u6cd5\u7ed5\u8fc7\u538b\u8feb\u884c\u4e3a\u3002\u6211\u4e5f\u77e5\u9053\uff0c\u89e3\u51b3\u65b9\u6848\u6709\u65f6\u53ef\u80fd\u9700\u8981\u51e0\u5341\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u51fa\u73b0\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u53ef\u80fd\u4f1a\u5931\u53bb\u6574\u6574\u51e0\u4ee3\u4eba\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7cbe\u7b80\u7684\u3001\u8001\u5927\u54e5\u63a7\u5236\u7684\u8ba1\u7b97\u673a\u7684\u8d8b\u52bf\u8ba9\u6211\u771f\u6b63\u62c5\u5fc3\u7684\u539f\u56e0\u3002\u6211\u4e0d\u671f\u5f85\u5728\u4e0d\u4e45\u7684\u5c06\u6765\uff0c\u6211\u7684\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u88ab\u5982\u6b64\u9501\u5b9a\uff0c\u4ee5\u81f3\u4e8e\u6211\u65e0\u6cd5\u5b89\u88c5\u6211\u60f3\u8981\u7684\u8f6f\u4ef6\u3002\u8bb8\u591a\u4eba\u5df2\u7ecf\u5230\u8fbe\u4e86\u8fd9\u4e2a\u672a\u6765\uff0c\u53ef\u80fd\u751a\u81f3\u8fd8\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u4f46\u662f\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u6210\u529f\u5730\u907f\u514d\u4e86\u5b83\u3002\n\u4e5f\u8bb8\u6211\u5bf9Linux\u7684\u4f7f\u7528\u4f1a\u963b\u6b62\u5176\u4ed6\u4eba\u5df2\u7ecf\u5c48\u670d\u4e8e\u7684\u672a\u6765\uff0c\u4f46\u6211\u4e0d\u80fd\u6c38\u8fdc\u7ee7\u7eed\u8d2d\u4e70\u65e7\u7b14\u8bb0\u672c\u7535\u8111\u3002\u6211\u4e00\u76f4\u5728\u4f7f\u75282012\u5e74\u524d\u751f\u4ea7\u7684\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4e3a\u4e86\u907f\u514dUEFI\u548c\u5b89\u5168\u5f15\u5bfc\u3002\u6211\u77e5\u9053\u73b0\u5728\u8fd8\u53ef\u4ee5\u4e70\u5230\u65b0\u7684\u5f00\u653e\u5f0f\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4f46\u5728\u6211\u770b\u6765\uff0c\u5927\u591a\u6570\u7b14\u8bb0\u672c\u7535\u8111--System76\u3001Purisms\u7b49\u7b49--\u4ef7\u683c\u90fd\u8fc7\u9ad8\u4e86\u3002\u6211\u4e5f\u77e5\u9053\u60e0\u666e\u548c\u6234\u5c14\u7ee7\u7eed\u5bf9Linux\u66f4\u52a0\u53cb\u597d\u3002\u90a3\u80fd\u7528\u591a\u4e45\u5462\uff1f\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u5fcd\u53d7\u7b14\u8bb0\u672c\u7535\u8111\u7684\u7f3a\u70b9\uff0c\u4ee5\u6362\u53d6\u5b83\u4eec\u968f\u5fc3\u6240\u6b32\u5730\u4f7f\u7528\u3002\u73b0\u5728\uff0c\u7535\u8111\u6280\u672f\u5df2\u7ecf\u8fc7\u65f6\u4e5d\u5e74\u6216\u66f4\u4e45\u4e86\uff0c\u6211\u4ecd\u7136\u5728\u4f7f\u7528\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5b83\u4eec\u5927\u591a\u5e26\u6709USB2.0\u7aef\u53e3\u548c\u5185\u7f6eSATA\u56fa\u6001\u786c\u76d8\u3002\u8fd9\u610f\u5473\u7740\u6211\u8981\u5904\u7406\u975e\u5e38\u6162\u7684\u5907\u4efd\u3002\u6211\u4f3c\u4e4e\u6c38\u8fdc\u90fd\u5728\u5907\u4efd\u3002\u6700\u7ec8\uff0c2012\u5e74\u524d\u751f\u4ea7\u7684\u7b14\u8bb0\u672c\u7535\u8111\u5c06\u4f1a\u592a\u6162\uff0c\u65e0\u6cd5\u5b8c\u6210\u6211\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002\u5f53\u90a3\u4e2a\u65f6\u5019\u5230\u6765\u7684\u65f6\u5019\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u8fc7\u6e21\u5230\u5176\u4ed6\u4e8b\u60c5\u4e0a\u3002\n\u6211\u5728\u60f3\u522b\u7684\u4e1c\u897f\u53ef\u80fd\u662f\u6211\u81ea\u5df1\u9020\u7684\u53f0\u5f0f\u7535\u8111\u3002\u867d\u7136\u6211\u5df2\u7ecf\u4e03\u5e74\u6ca1\u6709\u62e5\u6709\u4e00\u53f0\u53f0\u5f0f\u8ba1\u7b97\u673a\u4e86\uff0c\u4f46\u51fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u6211\u6b63\u5728\u8ba4\u771f\u8003\u8651\u5efa\u9020\u4e00\u53f0\u3002\u6211\u8fd8\u60f3\u8981\u4e00\u53f0\u53ef\u4ee5\u518d\u4fee\u8865\u7684\u7535\u8111\u3002\u6211\u5e0c\u671b\u7528\u6211\u9009\u62e9\u7684\u4e3b\u677f\u6784\u5efa\u4e00\u53f0\u53f0\u5f0f\u8ba1\u7b97\u673a\u5c06\u4f7f\u6211\u80fd\u591f\u907f\u514d\u65e0\u6cd5\u7981\u7528\u5b89\u5168\u5f15\u5bfc\u7684Trusted Platform Module\u82af\u7247\u548cUEFI\u3002\u5173\u952e\u8bcd\u662f", "note_en": "10-25-20      The future of personal computing looks rather bleak to me. The golden age of personal computing in the 1980&#39;s is long over. During the past ten years or so, I have been hearing about and seeing the effects of new approaches that governments and computer hardware and software vendors have been inventing to limit the power and utility of our computers. As far as I can see, the end is our subjugation within their ecosystems and our dependence on their cloud solutions. Whether their tools are UEFI, the elimination of useful software (as in the DMCA take-down of the Youtube Downloader website last week), the creation of new operating systems that move computing power out of our computers and into the cloud, &#34;secure&#34; hardware that we cannot modify, or some other approach does not matter. The point is that they are making it harder and harder for us to do what we want with our computers. They are successfully taking away our general-purpose computers and replacing them with little more than Internet appliances.\n  While an Internet appliance has its place, so does a general-purpose computer. General-purpose computers allow us to own our music and videos--not just watch them until Netflix&#39;s contract for our favorite Star Wars movie expires or Apple decides to somehow prevent us from accessing our favorite song in its inventory. A general-purpose computer also allows us to own applications that governments, computer hardware and software companies, and the music and movie industries would rather we did not have--software like Kodi, Handbrake, VLC player, Youtube Downloader, DVD rippers, and open source decentralized applications, just to name a few.\n  Much of what I do not like about the new computer hardware has been thrust upon us in the name of thinness. I can only surmise that laptop manufacturers&#39; fixation with thinness is about profitability, because it certainly is not about usability. Thin laptops are thermally throttled due to insufficient airflow. They are also less repairable and upgradeable. Some are not upgradeable at all. In fact, it seems that a higher percentage of laptops are completely nonupgradeable every year. User-replaceable batteries are long gone.\n  Laptop manufacturers have also justified decreased usability in the name of security. I should call their solutions &#34;security theater&#34;, because they seem to benefit Microsoft more than computer users. Many have said that UEFI is an overly-complicated system that provides a much larger attack surface than BIOS, and several  security flaws in UEFI implementations have been found that seem to negate many of the supposed benefits. While I understand that firmware malware is a legitimate cause for concern, UEFI seems to me to have been more about locking Linux out of the laptop market to insure that Microsoft Windows remained dominant. Now that Microsoft has lost that battle, can we go back to having the option of installing whatever operating systems we want? I doubt it.\n  I know that all hope is not lost. People find ways around oppressive practices. I also know that solutions can sometimes take decades to appear. Whole generations can be lost in the mean time. This is why the trend toward stripped-down, Big-Brother-controlled computers has me genuinely worried. I am not looking forward to a near-term future in which my operating system is so locked down that I cannot install the software I want. Many have already reached this future, perhaps without even having realized it. But, so far, I have successfully avoided it.\n  Perhaps my use of Linux will forestall the future to which others have already succumbed, but I cannot continue buying old laptops forever. I have been using laptops manufactured before 2012 partly to avoid UEFI and secure boot. I know that new &#34;open&#34; laptops are still available, but most of them--the System76&#39;s, the Purisms, etc.--are overpriced in my opinion. I also know that HP and Dell continue to be more Linux friendly. How long with that last? For years, I have put up with the drawbacks of laptops in exchange for their use wherever I wanted. Now, nine or more years out of date in computer technology, I am still using laptops with mostly USB 2.0 ports and internal SATA SSD&#39;s. That means dealing with very slow backups. I seem to be forever making backups. Eventually, laptops manufactured before 2012 will be too slow to do the things I need to do. When that time comes, I will have to transition to something else.\n  I am thinking &#34;something else&#34; may be a desktop computer that I build myself. Although I have not owned a desktop computer in seven years, I am seriously considering building one for the reasons outlined above. I also want a computer that I can tinker with again. I am  hoping that building a desktop computer with my choice of motherboards will allow me to avoid Trusted Platform Module chips and UEFI in which secure boot cannot be disabled. The key word is &#34;hoping&#34;, because I have not yet researched enough to determine if one can still find motherboards upon which to base computers that are more fully under the user&#39;s control. Overwriting UEFI with Coreboot may also be a solution, but it seems rather drastic.\n  What worries me as much as the end of general-purpose computing for the masses is that so few seem to understand that it is ending. Many are content to use &#34;devices&#34; that are merely stripped-down Internet appliances masquerading as reasonable substitutes for what they have replaced. Has the word &#34;device&#34; been substituted for the word &#34;computer&#34; in an effort to erase even the memory of what we are losing? Many do not understand, because they are too young to ever have used a true general-purpose computer. They have no experience with anything but locked-down platforms--just as 96% of the generation before them knew nothing but Microsoft operating systems. To call this a tragedy is not being overly dramatic.", "posttime": "2020-10-26 08:21:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u53f0\u5f0f,desktop,\u7b14\u8bb0\u672c\u7535\u8111", "title": "\u6211\u6b63\u5728\u8ba4\u771f\u8003\u8651\u91cd\u65b0\u4f7f\u7528\u53f0\u5f0f\u7535\u8111", "title_en": "I am seriously considering going back to desktop computers", "transed": 1, "url": "http://misc-stuff.terraaeon.com/articles/locked-down-computers.html", "via": "", "real_tags": ["\u7535\u8111", "\u53f0\u5f0f", "desktop", "\u7b14\u8bb0\u672c\u7535\u8111"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031167, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5c06\u662f\u6211\u5728\u4e92\u8054\u7f51\u4e0a\u53d1\u8868\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u3002\u5e0c\u671b\u5b83\u662f\u6709\u8da3\u548c\u51c6\u786e\u7684\u3002\u5982\u679c\u4f60\u770b\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u6307\u51fa\uff01\n2016\u5e74\uff0c\u6211\u505a\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u8bd5\u56fe\u627e\u5230\u505c\u8f66\u7f5a\u5355\u7684\u70ed\u70b9\u5730\u533a\uff0c\u770b\u770b\u4e00\u70b9\u70b9\u6570\u636e\u662f\u5426\u53ef\u4ee5\u51cf\u5c11\u8fd9\u4e9b\u5730\u533a\u7684\u505c\u8f66\u7f5a\u5355\u3002\u6700\u540e\uff0c\u6211\u53ea\u6e05\u7406\u4e86\u4e00\u4e2a\uff0c\u4f46\u5b83\u662f\u829d\u52a0\u54e5\u6240\u6709\u7f5a\u5355\u6700\u591a\u7684\u5730\u65b9\u4e4b\u4e00\uff0c\u5bfc\u81f4\u505c\u8f66\u7f5a\u5355\u51cf\u5c11\u4e86\u5927\u7ea650%\u3002\n\u829d\u52a0\u54e5\u7528\u6765\u5b58\u50a8\u505c\u8f66\u7f5a\u5355\u7684\u7cfb\u7edf\u88ab\u79f0\u4e3aCanvas\u3002\u5b83\u662f\u829d\u52a0\u54e5\u5e02\u8fdd\u89c4\u3001\u901a\u77e5\u548c\u88c1\u51b3\u4e1a\u52a1\u6d41\u7a0b\u548c\u7cfb\u7edf\u652f\u6301\u7684\u7f29\u5199\uff0c\u7531IBM\u7ba1\u7406\u3002\u5b83\u6700\u8fd1\u7684\u4e00\u4efd\u5408\u540c\u59cb\u4e8e2012\u5e74\uff0c\u5c06\u4e8e2022\u5e74\u5230\u671f\uff0c\u6807\u4ef7\u8d85\u8fc71.9\u4ebf\u7f8e\u5143\u3002\n\u829d\u52a0\u54e5\u7684\u5927\u90e8\u5206\u5408\u540c\u53ca\u5176\u91c7\u8d2d\u8bf7\u6c42(RFP)PDF\u90fd\u5728\u7f51\u4e0a\u53d1\u5e03\u3002\u5728Canvas\u7684\u5408\u540c\u4e2d\uff0c\u5b83\u63d0\u4f9b\u4e86\u76f8\u5f53\u591a\u5173\u4e8eCanvas\u540e\u7aef\u57fa\u7840\u8bbe\u65bd\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5b83\u4f7f\u7528Oracle 10g\u7684\u4e8b\u5b9e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u4ee5\u901a\u8fc7IBM\u8fd0\u884c\u4e00\u4e9b\u7b80\u5355\u7684SQL\u6765\u6ee1\u8db3FOIA\u8bf7\u6c42\u3002\n\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4ee5\u53ca\u540e\u6765\u51e0\u4e2a\u5931\u8d25\u7684\u4fe1\u606f\u81ea\u7531\u6cd5\u8bf7\u6c42\uff0c\u6211\u53d1\u51fa\u4e86\u4ee5\u4e0b\u8bf7\u6c42\uff0c\u4ee5\u83b7\u53d62009\u5e741\u67081\u65e5\u81f32016\u5e743\u670810\u65e5\u7684\u505c\u8f66\u7f5a\u5355\u6570\u636e\uff1a\n\u8bf7\u5411\u6211\u63d0\u4f9b2009\u5e74\u81f3\u4eca\u6240\u6709\u505c\u8f66\u7f5a\u5355\u7684\u6240\u6709\u53ef\u80fd\u4fe1\u606f\u3002\u8fd9\u5e94\u5305\u62ec\u4e0e\u6c7d\u8f66(\u5236\u9020\u5546\u7b49)\u3001\u8f66\u724c\u3001\u7f5a\u5355\u3001\u7968\u52a1\u3001\u7f5a\u5355\u539f\u56e0\u3001\u8d22\u52a1\u4fe1\u606f(\u5df2\u652f\u4ed8\u7b49)\u3001\u6cd5\u5ead\u4fe1\u606f(\u6709\u4e89\u8bae\u7b49)\u3001\u60c5\u51b5(\u4f8b\u5982\uff0c\u65f6\u95f4\u3001\u5730\u70b9)\u548c\u7167\u7247/\u89c6\u9891\u76f8\u5173\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd9\u8fd8\u5e94\u8be5\u5305\u62ec\u5b58\u50a8\u5728Canvas\u4e2d\u7684\u4efb\u4f55\u4e0e\u7968\u8bc1\u76f8\u5173\u7684\u4fe1\u606f\u3002\n\u5927\u7ea6\u4e00\u4e2a\u6708\u540e\uff0c\u4e00\u4e2a\u53ebCarl\u7684\u5bb6\u4f19(\u7a7f\u7740\u82b1\u54e8\u7684\u897f\u88c5)\u9012\u7ed9\u6211\u4e00\u5f20CD\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u6781\u5176\u6df7\u4e71\u7684\u6570\u636e\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u5206\u53f7\u5206\u9694\u7684\u6587\u4ef6\uff0c\u540d\u4e3aA50462_TcktsIssdSince2009.txt\u3002\u8be5\u6587\u4ef6\u5305\u542b2009\u5e741\u67081\u65e5\u81f32016\u5e743\u670810\u65e5\u671f\u95f417,806,818\u5f20\u505c\u8f66\u7f5a\u5355\u548c\u8de8\u5ea6\u7684\u4fe1\u606f\u3002\nHead-5 A50462_TcktsIssdSince2009.txt\u7968\u53f7\uff1b\u8f66\u724c\u53f7\u7801\uff1b\u8f66\u724c\u72b6\u6001\uff1b\u8f66\u724c\u7c7b\u578b\uff1b\u7f5a\u5355\u5236\u4f5c\uff1b\u53d1\u653e\u65e5\u671f\uff1b\u8fdd\u7ae0\u4f4d\u7f6e\uff1b\u8fdd\u7ae0\u4ee3\u7801\uff1b\u8fdd\u7ae0\u63cf\u8ff0\uff1b\u5fbd\u7ae0\uff1b\u5355\u4f4d\uff1b\u7f5a\u5355\u961f\u5217\uff1b\u542c\u529b\u663e\u793a39596087\uff1bzzzz\uff1bIL\uff1bPAS\uff1bvolv\uff1b03/03/200311\uff1a25 am\uff1b3849W Congress\uff1b0976160F\uff1b\u8fc7\u671f\u8f66\u724c\u6216\u4e34\u65f6REGISTRATION\uff1b11870\uff1b701\uff1bPaid\uff1b40228076\uff1bzzzzzz\uff1bIL\uff1bTRK\uff1bFORD\uff1b03/01/2003 12\uff1a29 am\uff1b3448N OKETO\uff1b0964170A\uff1b\u5361\u8f66\u3001\u623f\u8f66\u3001\u516c\u4ea4\u8f66\u6216\u51fa\u79df\u8f66\u6216\u5c45\u6c11\u8857\uff1b17488\uff1b016\uff1b\u5b9a\u4e49\uff1b40480875\uff1bzzzz\uff1bIL\uff1bPAS\uff1bPont\uff1b03/01/200309\uff1a45 pm\uff1b8135S Perry\uff1b0964130\uff1bPark or block ALLEY\uff1b17575\uff1b006\uff1bNotice\uff1b40718783\uff1bzzzzzz\uff1bIL\uff1bPAS\uff1bISU\uff1b03/02/2003 06\uff1a02 pm\uff1b6928S Cornell\uff1b0976160F\uff1b\u8fc7\u671f\u8f66\u724c\u6216\u4e34\u65f6\u767b\u8bb0\uff1b7296\uff1b003\uff1b\u5df2\u652f\u4ed8\uff1b\u6709\u8d23\u4efb\n\u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6781\u5176\u6df7\u4e71\u548c\u4e0d\u53ef\u9884\u6d4b\u7684\u6570\u636e\u96c6\uff0c\u5f88\u96be\u51c6\u786e\u5730\u6620\u5c04\u5230\u7ecf\u5ea6/\u7ecf\u5ea6\uff0c\u8fd9\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u7efc\u5408GIS\u5206\u6790\u6240\u5fc5\u9700\u7684\u3002\u6709\u5f88\u591a\u5730\u7406\u7f16\u7801\u5668\u670d\u52a1\u53ef\u4ee5\u5728\u8fd9\u65b9\u9762\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4f46\u5b83\u4eec\u4e2d\u7684\u5927\u591a\u6570\u90fd\u6709\u5927\u7ea650%\u7684\u51c6\u786e\u7387\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7a0d\u5fae\u64e6\u6d17\u4e00\u4e0b\u7684\u5e2e\u52a9\u4e0b\uff0c\u8fd9\u4e00\u6570\u5b57\u53ef\u4ee5\u63d0\u9ad8\u5230\u63a5\u8fd190%\u3002\u53e6\u4e00\u4e2a\u5e16\u5b50\u6362\u4e2a\u65f6\u95f4\u3002\n\u6211\u7279\u522b\u611f\u5174\u8da3\u7684\u662f\u5bfb\u627e\u90a3\u4e9b\u6709\u7a81\u51fa\u70ed\u70b9\u7684\u5730\u533a\u3002\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u6700\u7ec8\u7f16\u5199\u4e86\u4e24\u7cfb\u5217(\u7e41\u7410\u7684)\u547d\u4ee4\uff0c\u4ee5\u786e\u5b9a\u4e00\u4e2a\u6f5c\u5728\u7684\u53ef\u4fee\u590d\u4f4d\u7f6e\u3002\n\u6700\u521d\uff0c\u6211\u6240\u505a\u7684\u5de5\u4f5c\u548c\u5206\u6790\u662f\u4f7f\u7528Unix\u547d\u4ee4\u548cgnplot\u7684\u7ec4\u5408\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u5df2\u7ecf\u5c06\u6211\u7684\u4ee3\u7801\u8fc1\u79fb\u5230python+matplotlib+sql\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u8fd9\u4e2a\u535a\u5ba2\uff0c\u6211\u60f3\u5c55\u793a\u4e00\u4e0b\u6700\u521d\u7684\u5206\u6790\u3002\n$Mawk-F&39\uff1b\uff1b&#39\uff1b&#39\uff1b{print$7}&#39\uff1ball_tickets.Orig.txt|sed-r&#39\uff1bs/^([0-9]*)[0-9][0-9](.*)/\\100\\2/&#39\uff1b|sed-r&#39\uff1bs/(Blvd|ST|AV|ave|RD)$//&#39\uff1b|SORT|uniq-c|SORT-nr 79320 1900W\u5965\u683c\u767b60059 1100N\u5dde50594 100N\u6c83\u5df4\u4ec044503 1400N\u5bc6\u5c14\u6c83\u57fa43121 1500N\u5bc6\u5c14\u6c83\u57fa43030 2800N\u767e\u8001\u6c4742294 2100S\u5f13\u7bad\u624b42116 1900W\u54c8\u91cc\u68ee\u3002\n$Mawk-F&39\uff1b\uff1b&#39\uff1b{\u6253\u5370$9\uff0c$7}&#39\uff1bA50462_TcktsIssdSince2009.txt|sed-r&39\uff1bs/(Blvd|ST|AV|AVE|RD)$//&#39\uff1b|SORT--PARALLEL=4|uniq-c|SORT-nr12510\u8fc7\u671f\u8f66\u724c\u6216\u4e34\u65f6\u767b\u8bb05050 W 55 9636\u4efb\u4f55\u65f6\u5019\u7981\u6b62\u505c\u8f66/\u7ad9\u7acb835 N\u5bc6\u6b47\u6839\u5dde8943\u4e2a\u8fc7\u671f\u8f66\u724c\u6216\u4e34\u65f6\u767b\u8bb01 W\u505c\u8f66\u573aA 6168\u4e2a\u8fc7\u671f\u8f66\u724c\u6216\u4e34\u65f6\u767b\u8bb01 W\u505c\u8f66\u573aE 5938\u968f\u65f6\u7981\u6b62\u505c\u8f66/\u7ad9\u7acb500 W\u9ea6\u8fea\u900a5663\u516c\u56ed\u6216\u516c\u5171\u6c7d\u8f66/\u51fa\u79df\u8f66/\u8f66\u53a2\u7ad9\u53f01166 N\u5dde5527\u4e2a\u8fc7\u671f\u8ba1\u4ef7\u5668\u6216\u8d85\u671f\u505c\u75595230 S Lake Park 4174\u968f\u65f6\u7981\u6b62\u505c\u8f66/\u7ad9\u7acb1901 W\u54c8\u91cc\u68ee4137\u524d\u540e\u8f66\u724c\u8981\u6c421 W\u505c\u8f66\u573aA\u3002\n\u8fd9\u4e24\u6bb5\u4ee3\u7801\u90fd\u7c97\u7565\u5730\u663e\u793a\u51fa1100N\u9053\u5fb7\u8857\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff0c1166N\u9053\u5fb7\u8857\u770b\u8d77\u6765\u7279\u522b\u53ef\u7591\u3002\n\u8fd9\u662f\u4e00\u4e2a\u51fa\u79df\u8f66\u7ad9\uff0c\u4ece\u665a\u4e0a7\u70b9\u5230\u65e9\u4e0a5\u70b9\uff0c\u6709\u4e09\u8f86\u8f66\u7684\u957f\u5ea6\u3002\u5728\u51fa\u79df\u8f66\u7ad9\u505c\u8f66\u662f100\u7f8e\u5143\u7684\u7f5a\u5355\u3002\n\u5f53\u8fd9\u4e2a\u5730\u65b9\u4e0d\u662f\u51fa\u79df\u8f66\u7ad9\u65f6\uff0c\u5b83\u5c31\u662f\u8ba1\u4ef7\u5668\u505c\u8f66--\u5728\u5df7\u5b50\u540e\u9762\u7684\u505c\u8f66\u8ba1\u4ef7\u5668\u3002\n\u5728\u8fd9\u91cc\u505c\u8f66\u53ef\u4ee5\u5728\u665a\u4e0a7\u70b9\u4ee5\u540e\u4ed8\u8d39\uff0c\u8fd9\u8ba9\u505c\u8f66\u770b\u8d77\u6765\u662f\u53ef\u4ee5\u63a5\u53d7\u7684-\u7279\u522b\u662f\u5728\u90a3\u91cc\u6f02\u6d6e\u7740\u201c\u829d\u52a0\u54e5\u516c\u56ed\u201d\u7684\u6807\u5fd7\u7684\u60c5\u51b5\u4e0b\u3002\n\u6df7\u4e71\u4f1a\u9020\u6210\u66f4\u591a\u7684\u6df7\u4e71--\u5982\u679c\u4e00\u4e2a\u505c\u8f66\u573a\u505c\u5728\u90a3\u91cc\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u8f66\u8ddf\u5728\u540e\u9762\u3002\u6070\u6070\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u5207\uff0c\u6211\u57284\u670812\u65e5\u8054\u7cfb\u4e86\u7b2c\u4e8c\u9009\u533a\u7684\u5e02\u8bae\u5458\u529e\u516c\u5ba4\uff0c\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u5f97\u5230\u4e86\u4ee5\u4e0b\u56de\u590d\uff1a\n\u5728\u6b64\u671f\u95f4\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u4e0d\u8981\u5728\u90a3\u91cc\u505c\u8f66\uff0c\u4ee5\u514d\u518d\u5f00\u7f5a\u5355\u3002\n\u6211\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\u9053\u5bcc\u94f6\u884c\u57283\u53f7\u51fa\u79df\u8f66\u7ad9\u53f0\u4e0a\u5b89\u88c5\u4e86\u989d\u5916\u7684\u4ea4\u901a\u6307\u793a\u724c\u3002\n\u65b0\u7684\u7684\u58eb\u7ad9\u6807\u5fd7\u4e3a\u4e00\u4e2a\u4ee5\u524d\u6ca1\u6709\u8fb9\u754c\u7684\u7684\u58eb\u7ad9\u5212\u5b9a\u4e86\u8fb9\u754c\u3002\u7981\u6b62\u505c\u8f66\u7684\u6807\u5fd7\u6e05\u695a\u5730\u8868\u660e\uff0c\u5728\u51fa\u79df\u8f66\u505c\u9760\u7ad9\u65f6\u95f4\u5185\u5728\u8fd9\u91cc\u505c\u8f66\u662f\u4e00\u79cd\u53ef\u7f5a\u6b3e\u7684\u8fdd\u6cd5\u884c\u4e3a\u3002\u5e72\u51c0\u5229\u843d\uff01\n\u6211\u6700\u8fd1\u51b3\u5b9a\u770b\u770b\u90a3\u4e2a\u5730\u65b9\u7684\u95e8\u7968\u6570\u91cf\u3002\u5229\u7528\u6765\u81ea\u53e6\u4e00\u4e2aFOIA\u8bf7\u6c42\u7684\u4e00\u7ec4\u65b0\u6570\u636e\uff0c\u6211\u4f7f\u7528Python\u3001PANAS\u548cSQL\u8fdb\u884c\u4e86\u4e00\u4e9b\u5206\u6790\u3002\u6211\u53d1\u73b0\uff0c\u65b0\u6807\u5fd7\u7684\u589e\u52a0\u6709\u6548\u5730\u5bfc\u81f41150\u81f31200\u5dde\u7acb\u5927\u8857\u4e4b\u95f4\u7684\u505c\u8f66\u7f5a\u5355\u51cf\u5c11\u4e8650%\u3002\u4e0e2016\u5e74\u76f8\u6bd4\uff0c2017\u5e74\u51cf\u5c11\u4e86\u7ea6400\u5f20\u7f5a\u5355\uff0c2018\u5e74\u5230\u76ee\u524d\u4e3a\u6b62\u51cf\u5c11\u4e86200\u5f20\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u90a3\u662f\u4ef7\u503c6\u4e07\u7f8e\u5143\u7684\u505c\u8f66\u7f5a\u5355\uff01\n\u603b\u800c\u8a00\u4e4b\uff0c\u829d\u52a0\u54e5\u7684\u505c\u8f66\u7f5a\u5355\u6570\u91cf\u6b63\u5728\u4e0a\u5347\uff0c\u8fd9\u9879\u5de5\u4f5c\u8868\u660e\uff0c\u5373\u4f7f\u662f\u5f88\u5c0f\u7684\u4e8b\u60c5\uff0c\u4e5f\u662f\u53ef\u4ee5\u505a\u7684\u3002\n\u8fd9\u9879\u5de5\u4f5c\u53ea\u5728\u4e00\u5c0f\u6bb5\u9053\u8def\u4e0a\u8fdb\u884c\uff0c\u4f46\u6211\u76f8\u4fe1\u7c7b\u4f3c\u7684\u5de5\u4f5c\u4e5f\u53ef\u4ee5\u5728\u7cfb\u7edf\u7684\u8303\u56f4\u5185\u8fdb\u884c\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ea\u662f\u4e00\u4e2a\u6316\u6398\u6570\u636e\u5e76\u76f4\u63a5\u4e0e\u6bcf\u4e2a\u75c5\u623f\u5408\u4f5c\u7684\u95ee\u9898\u3002\n\u8fd9\u91cc\u540e\u9762\u7684\u5206\u6790\u4e5f\u662f\u6839\u636e\u7a0e\u52a1\u5c40\u7ed9\u6211\u7684\u6700\u65b0\u6570\u636e\u96c6\u8fdb\u884c\u7684\u3002\u8fd9\u4e24\u4e2a\u6570\u636e\u96c6\u6709\u4e00\u7ec4\u4e0d\u540c\u7684\u5217\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u6570\u636e\u96c6\u4ecd\u7136\u9700\u8981\u7ec4\u5408\u3002\u6211\u5e0c\u671b\u80fd\u5c3d\u5feb\u505a\u5230\u8fd9\u4e00\u70b9\uff01", "note_en": "This&#39;ll be my first blog post on the internet, ever. Hopefully it&#39;s interesting and accurate. Please point out any mistakes if you see any!\n In 2016, I did some work in trying to find some hotspot areas for parking tickets to see if a bit of data munging could reduce those area&#39;s parking tickets. In the end, I only really got one cleaned up, but it was  one of the most-ticketed spots in all of Chicago and led to about a 50% reduction in parking tickets.\n   The system Chicago uses to store its parking tickets is called CANVAS. It&#39;s short for &#34;City of Chicago Violation, Noticing and Adjudication Business Process And System Support&#34; [sic] and managed by IBM. Its most recent contract started in 2012, expires in 2022, and has a pricetag of over $190 million.\n Most of Chicago&#39;s contracts and their Requests For Procurement (RFP) PDFs are published online. In CANVAS&#39;s contracts it gives a fair amount of info on CANVAS&#39;s backend infrastructure, including the fact that it uses Oracle 10g. In other words, a FOIA request can be fulfilled by IBM running some simple SQL.\n  With that information at hand, and a couple failed FOIA requests later, I sent this request to get the parking ticket data from Jan 1, 2009 to Mar 10, 2016:\n &#34;Please provide to me all possible information on all parking tickets between 2009 and the present day. This should include any information related to the car (make, etc), license plate, ticket, ticketer, ticket reason(s), financial information (paid, etc), court information (contested, etc), situational (eg, time, location), and photos/videos. Ideally, this should also include any relevant ticket-related information stored within CANVAS.\n      About a month later, a guy named Carl (in a fancy suit), handed me a CD with some  extremely messy data in a semicolon delimited file named  A50462_TcktsIssdSince2009.txt. The file had info on 17,806,818 parking tickets and spans from Jan 1, 2009 to Mar 10, 2016.\n  head -5 A50462_TcktsIssdSince2009.txtTicket Number;License Plate Number;License Plate State;License Plate Type;Ticket Make;Issue Date;Violation Location;Violation Code;Violation Description;Badge;Unit;Ticket Queue;Hearing Dispo39596087;zzzzzz;IL;PAS;VOLV;03/03/2003 11:25 am;3849 W CONGRESS;0976160F;EXPIRED PLATES OR TEMPORARY REGISTRATION;11870;701;Paid;40228076;zzzzzz;IL;TRK;FORD;03/01/2003 12:29 am;3448 N OKETO;0964170A;TRUCK,RV,BUS, OR TAXI RESIDENTIAL STREET;17488;016;Define;40480875;zzzzzz;IL;PAS;PONT;03/01/2003 09:45 pm;8135 S PERRY;0964130;PARK OR BLOCK ALLEY;17575;006;Notice;40718783;zzzzzz;IL;PAS;ISU;03/02/2003 06:02 pm;6928 S CORNELL;0976160F;EXPIRED PLATES OR TEMPORARY REGISTRATION;7296;003;Paid;Liable\n   What that amounts to is an extremely, extremely messy and unpredictable dataset that&#39;s incredibly to difficult to accurately map to lat/lon, which is needed for any sort of comprehensive GIS analysis. There are a bunch of geocoder services that can help out here, but most of them have about a 50% accuracy rate. That said, with the help of a bit of scrubbing, that number can be boosted to closer to 90%. Another post for another time.\n    I was particularly interested in finding areas that had hotspot areas that stood out. A lot of my time was spent just throwing hacky code at the problem and eventually wrote out two series of (hacky) commands that led to identifying a potentially fixable spot.\n Originally, the work and analysis I was doing was with a combination of unix commands and gnuplot. Since then, I&#39;ve migrated my code to python + matplotlib + SQL. But, for the sake of this blog, I wanted to show the original analysis.\n  $ mawk -F&#39;;&#39; &#39;{print $7}&#39; all_tickets.orig.txt | sed -r &#39;s/^([0-9]*)[0-9][0-9] (.*)/\\100 \\2/&#39; | sed -r &#39;s/ (BLVD|ST|AV|AVE|RD)$//&#39; | sort | uniq -c | sort -nr 79320 1900 W OGDEN  60059 1100 N STATE 50594 100 N WABASH 44503 1400 N MILWAUKEE 43121 1500 N MILWAUKEE 43030 2800 N BROADWAY 42294 2100 S ARCHER 42116 1900 W HARRISON\n  $ mawk -F&#39;;&#39; &#39;{print $9,$7}&#39; A50462_TcktsIssdSince2009.txt | sed -r &#39;s/ (BLVD|ST|AV|AVE|RD)$//&#39; | sort --parallel=4 | uniq -c | sort -nr12510 EXPIRED PLATES OR TEMPORARY REGISTRATION 5050 W 55TH 9636 PARKING/STANDING PROHIBITED ANYTIME 835 N MICHIGAN 8943 EXPIRED PLATES OR TEMPORARY REGISTRATION 1 W PARKING LOT A 6168 EXPIRED PLATES OR TEMPORARY REGISTRATION 1 W PARKING LOT E 5938 PARKING/STANDING PROHIBITED ANYTIME 500 W MADISON  5663 PARK OR STAND IN BUS/TAXI/CARRIAGE STAND 1166 N STATE 5527 EXPIRED METER OR OVERSTAY 5230 S LAKE PARK 4174 PARKING/STANDING PROHIBITED ANYTIME 1901 W HARRISON 4137 REAR AND FRONT PLATE REQUIRED 1 W PARKING LOT A\n Both bits of code roughly show that there&#39;s something going on at 1100N state street, and 1166 N State St looks particularly suspicious..\n    This is a taxi stand from 7pm to 5am for three cars\u2019 lengths. Parking in a taxi stand is a $100 ticket.\n When this spot isn\u2019t a taxi stand, it\u2019s metered parking \u2013 for a parking meter beyond an alleyway.\n It\u2019s possible to pay for parking here after 7pm, which makes it look like parking is acceptable \u2013 especially with the \u201cParkChicago\u201d sign floating there.\n Confusion creates more confusion \u2013 if one car parks there, then more cars follow. Cha-ching.\n  With all that in mind, I contacted the second ward\u2019s alderman\u2019s office on April 12 explaining this, and got back this response:\n   In the interim, I highly recommend that you do not park there to avoid any further tickets.\n      I don&#39;t know if you noticed the additional\u00a0signage installed\u00a0on State Street at the 3 Taxi Stand.\n      The new taxi stand sign sets a boundary for a previously unbounded taxi stand. The No Parking sign explicitly makes it clear that parking here during taxi stand hours is a fineable offense. Neat!\n   I recently decided to look at the number of tickets at that spot. Armed with a new set of data from another FOIA request, I did some analysis with python, pandas, and SQL. What I found is that the addition of a new sign effectively led to a 50% reduction in parking tickets between 1150 and 1200 N State St. Adding it all up, that&#39;s about 400 tickets fewer in 2017 and 200 so far in 2018 compared to 2016. All in all, that&#39;s about $60,000 worth in parking tickets!\n     All in all, the number of parking tickets is going up in Chicago, and this work shows that  something can be done, even if small.\n  This work is only on one small section of road, but I&#39;m convinced that similar work can be on a systematic scale. It&#39;s mostly just a matter of digging through data and working directly with each ward.\n The later analysis done here was also only done on the most recent dataset that the Department of Revenue they gave me. The two datasets have a different set of columns, so the two datasets need to be combined still. I hope to accomplish that soon!", "posttime": "2020-10-26 08:20:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "foia,data,\u7f5a\u5355", "title": "\u4f7f\u7528FOIA\u6570\u636e\u548cUnix\u5c06\u505c\u8f66\u7f5a\u5355\u7684\u4e3b\u8981\u6765\u6e90\u51cf\u534a(2018\u5e74)", "title_en": "Using FOIA Data and Unix to halve major source of parking tickets (2018)", "transed": 1, "url": "https://mchap.io/using-foia-data-and-unix-to-halve-major-source-of-parking-tickets.html", "via": "", "real_tags": ["foia", "data", "\u7f5a\u5355"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031165, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AA\u662f\u4e00\u672c\u65b0\u7684Amiga\u6708\u520a\u3002\u5b83\u662f\u5168\u5f69\u8272A4\u5370\u5237\u7684\uff0c\u6709\u5370\u5237\u7248\u548c\u6570\u5b57\u4e0b\u8f7d\u7248\u53ef\u4f9b\u9009\u62e9\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u672c\u6709\u8da3\u7684\u3001\u5f15\u4eba\u5165\u80dc\u7684\u6742\u5fd7\u6765\u53cd\u6620\u73b0\u4ee3\u7684Amiga\u573a\u666f\u3002\nAA\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fa\u7248\u7269\uff0c\u7531\u5bf9Amiga\u7684\u7231\u63a8\u52a8\u3002\u8981\u8ba9\u8fd9\u672c\u6742\u5fd7\u53d1\u884c\u5e76\u4ed8\u5370\uff0c\u6211\u4eec\u9700\u8981\u81f3\u5c11500\u4efd\u9884\u8d2d\uff0c\u4ee5\u8bc1\u660e\u5370\u5237\u6210\u672c\u3001\u4eba\u5458\u914d\u5907\u7684\u5408\u7406\u6027\uff0c\u5e76\u4e86\u89e3\u7528\u6237\u7fa4\u3002\u60a8\u53ef\u4ee5\u8ba2\u8d2d\u5355\u671f\u6216\u8ba2\u9605\u3002\u5982\u679c\u6211\u4eec\u6ca1\u6709\u8fbe\u5230\u7b2c\u4e00\u671f500\u540d\u8bfb\u8005\u7684\u9884\u8d2d\u76ee\u6807\uff0c\u90a3\u4e48\u5230\u76ee\u524d\u4e3a\u6b62\u8ba2\u8d2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u5c06\u5f97\u5230\u5168\u989d\u9000\u6b3e\u3002\u8ba2\u9605\u5370\u5237\u520a\u7269\u7684\u8bfb\u8005\u8fd8\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u8ba2\u9605\u4e2d\u5305\u542b\u7684\u6570\u5b57\u4e0b\u8f7d\u7248\u672c\u3002\u6ce8\uff1a\u5c01\u9762\u4e0a\u7684\u8f6f\u76d8\u56fe\u50cf\u662f\u4e3a\u4e86\u8fbe\u5230\u5e7d\u9ed8\u6548\u679c-\u4e0d\u5305\u62ec\u5b9e\u9645\u7684\u5c01\u9762\u5149\u76d8\uff0c\u4f46\u5c06\u6765\u53ef\u80fd\u4f1a\u8003\u8651\u3002\n\u5728\u8fd9\u91cc\u9884\u8ba2", "note_en": "AA is a new monthly Amiga magazine. It is printed in full colour A4, and is available in both print and digital download versions. We aim to provide a fun, engaging magazine to reflect the modern Amiga scene.\n AA is an independent publication fuelled by love for the Amiga.  For this magazine to launch and go to print  we need at least 500 pre-orders to justify  printing costs, staffing and get an idea of  user base.  You can order a  single issue or  subscribe.   If we do not hit our target pre-order total of 500 readers for Issue 1 then everybody who has ordered so far  will be fully refunded.  Readers who subscribe for Print Issues also get the  Digital Download version included free in their subscription.    NOTE: Image of a floppy disk on the front cover is for humorous effect - no actual Cover Disk is included but may be considered in the future.\n pre-Order Here", "posttime": "2020-10-26 08:20:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u56fd,printed,\u5370\u5237", "title": "14\u5e74\u540e\uff0c\u4e00\u672c\u65b0\u5370\u5237\u7684\u82f1\u56fdAmiga\u6742\u5fd7", "title_en": "After 14 years a new printed UK Amiga magazine", "transed": 1, "url": "https://www.amiga-addict.com/", "via": "", "real_tags": ["\u82f1\u56fd", "printed", "\u5370\u5237"]}]
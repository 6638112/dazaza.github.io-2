[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1068400, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u6211\u5df2\u7ecf\u52aa\u529b\u627e\u5230\u4e00\u4e2a\u7b80\u6d01\u7684\uff0c\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u89e3\u91ca\u7ec3\u4e60\u7c7b\u578b\u9a71\u52a8\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u4ec0\u4e48\u3002\u592a\u591a\uff0c\u5f53\u6709\u4eba\u95ee\u6211\u201c\u4f60\u662f\u600e\u4e48\u60f3\u8d77\u8fd9\u79cd\u65b9\u6cd5\u7684\uff1f\u201d\u6211\u53d1\u73b0\u6211\u4e0d\u80fd\u7ed9\u4ed6\u4eec\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7b54\u6848\u3002\u6211\u77e5\u9053\u5b83\u4e0d\u4ec5\u4ec5\u662f\u5728\u613f\u666f\u4e2d\u6765\u627e\u6211 - \u6211\u6709\u4e00\u4e2a\u8fed\u4ee3\u7684\u8bbe\u8ba1\u8fc7\u7a0b\uff0c\u4e0d\u9700\u8981\u91c7\u53d6\u8584\u8584\u7684\u7a7a\u6c14\u4e2d\u7684\u201c\u6b63\u786e\u201d\u7684\u65b9\u6cd5\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u6210\u529f\u5730\u5411\u4ed6\u4eba\u6c9f\u901a\u8be5\u8fc7\u7a0b\u3002\n \u7136\u800c\uff0c\u5927\u7ea6\u4e00\u4e2a\u6708\u524d\uff0c\u6211\u5728\u9759\u6001\u548c\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u4e2d\u7ecf\u5386\u4e86\u89e3\u6790json\u7684\u5dee\u5f02\uff0c\u6211\u53cd\u6620\u4e86Twitter\uff0c\u6700\u540e\uff0c\u6211\u610f\u8bc6\u5230\u4e86\u6211\u6b63\u5728\u5bfb\u627e\u7684\u4e1c\u897f\u3002\u73b0\u5728\u6211\u6709\u4e00\u4e2a\u5355\u8eab\uff0cSnappy\u53e3\u53f7\uff0c\u5c01\u88c5\u4e86\u4ec0\u4e48\u7c7b\u578b\u7684\u9a71\u52a8\u8bbe\u8ba1\u5bf9\u6211\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u66f4\u597d\uff0c\u4f46\u5b83\u53ea\u6709\u4e09\u4e2a\u5b57\u957f\uff1a\n   \u597d\u5427\uff0c\u6211\u4f1a\u627f\u8ba4\uff1a\u9664\u975e\u4f60\u5df2\u7ecf\u77e5\u9053\u4ec0\u4e48\u7c7b\u578b\u7684\u9a71\u52a8\u8bbe\u8ba1\uff0c\u5426\u5219\u6211\u7684\u5438\u5f15\u4eba\u7684\u53e3\u53f7\u53ef\u80fd\u5bf9\u4f60\u6765\u8bf4\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e00\u5207\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u535a\u5ba2\u5e16\u5b50\u7684\u5176\u4f59\u90e8\u5206\u3002\u6211\u5c06\u6b63\u662f\u5728\u8840\u8165\u7ec6\u8282\u4e2d\u7684\u610f\u601d\u89e3\u91ca - \u4f46\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u7ec3\u4e60\u4e00\u4e0b\u4e00\u822c\u7684\u4e00\u53a2\u60c5\u613f\u3002\n  \u5173\u4e8e\u9759\u6001\u7cfb\u7edf\u7684\u4e00\u4e2a\u7f8e\u5999\u7684\u4e8b\u60c5\u662f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u4ed6\u4eec\u80fd\u591f\u5b9e\u73b0\uff0c\u6709\u65f6\u751a\u81f3\u5bb9\u6613\uff0c\u4ee5\u56de\u7b54\u201c\u5b83\u53ef\u4ee5\u5199\u8fd9\u4e2a\u529f\u80fd\u662f\u53ef\u80fd\u7684\uff1f\u201d\u5bf9\u4e8e\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0bHaskell\u7c7b\u578b\u7b7e\u540d\uff1a\n  \u662f\u5426\u6709\u53ef\u80fd\u5b9e\u73b0foo\uff1f\u6eaf\u6e90\uff0c\u7b54\u6848\u662f\u5426\uff0c\u56e0\u4e3avoid\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u503c\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u4efb\u4f55\u529f\u80fd\u90fd\u4e0d\u53ef\u80fd\u4ea7\u751f\u7c7b\u578bvoid\u7684\u503c\u3002 1\u793a\u4f8b\u975e\u5e38\u65e0\u804a\uff0c\u4f46\u5982\u679c\u6211\u4eec\u9009\u62e9\u66f4\u73b0\u5b9e\u7684\u4f8b\u5b50\uff0c\u95ee\u9898\u4f1a\u66f4\u6709\u8da3\uff1a\n  \u6b64\u51fd\u6570\u4ece\u5217\u8868\u4e2d\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u662f\u5426\u6709\u53ef\u80fd\u5b9e\u65bd\uff1f\u5b83\u80af\u5b9a\u6ca1\u6709\u542c\u8d77\u6765\u5b83\u505a\u4e86\u4ec0\u4e48\u975e\u5e38\u590d\u6742\u7684\uff0c\u4f46\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u5b9e\u73b0\u5b83\uff0c\u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u6ee1\u8db3\uff1a\n  \u8b66\u544a\uff1a[-wincomplete-patterns]\u6a21\u5f0f\u5339\u914d\u5728\u201c\u5934\u201d\u7684\u7b49\u5f0f\u4e2d\u662f\u975e\u8be6\u5c3d\u65e0\u9057\u7684\uff1a\u6a21\u5f0f\u4e0d\u5339\u914d\uff1a[] \n\u6b64\u6d88\u606f\u6709\u52a9\u4e8e\u6307\u51fa\uff0c\u6211\u4eec\u7684\u529f\u80fd\u662f\u90e8\u5206\u7684\uff0c\u8fd9\u5c31\u662f\u8bf4\u5b83\u6ca1\u6709\u4e3a\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5b9a\u4e49\u3002\u5177\u4f53\u5730\uff0c\u5f53\u8f93\u5165\u662f[]\uff0c\u7a7a\u5217\u8868\u65f6\u672a\u5b9a\u4e49\u3002\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5217\u8868\u662f\u7a7a\u7684\uff0c\u5219\u65e0\u6cd5\u8fd4\u56de\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 - \u6ca1\u6709\u5143\u7d20\u8981\u8fd4\u56de\uff01\u56e0\u6b64\uff0c\u663e\u7740\u7684\uff0c\u6211\u4eec\u5b66\u4e60\u8be5\u529f\u80fd\u4e5f\u65e0\u6cd5\u5b9e\u73b0\u3002\n  \u5bf9\u4e8e\u6765\u81ea\u52a8\u6001\u952e\u5165\u7684\u80cc\u666f\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u4ee4\u4eba\u56f0\u60d1\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u5217\u8868\uff0c\u6211\u4eec\u53ef\u80fd\u975e\u5e38\u5e0c\u671b\u5f97\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u4e8b\u5b9e\u4e0a\uff0cHaskell\u7684\u201c\u83b7\u53d6\u540d\u5355\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u201d\u7684\u64cd\u4f5c\u5e76\u975e\u4e0d\u53ef\u80fd\uff0c\u5b83\u53ea\u662f\u9700\u8981\u4e00\u70b9\u989d\u5916\u7684\u4eea\u5f0f\u3002\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u4fee\u590d\u5934\u90e8\u529f\u80fd\uff0c\u6211\u4eec\u5c06\u4ece\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5f00\u59cb\u3002\n  \u6b63\u5982\u6240\u5efa\u7acb\u7684\u90a3\u6837\uff0c\u5982\u679c\u5217\u8868\u4e3a\u7a7a\uff0c\u5219\u5934\u90e8\u662f\u90e8\u5206\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5217\u8868\u662f\u7a7a\u7684\uff0c\u5219\u6ca1\u6709\u5143\u7d20\uff1a\u6211\u4eec\u5df2\u7ecf\u63d0\u51fa\u4e86\u4e00\u4e2a\u6211\u4eec\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\u627f\u8bfa\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u8be5\u56f0\u5883\u6709\u4e00\u79cd\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u53ef\u4ee5\u524a\u5f31\u6211\u4eec\u7684\u627f\u8bfa\u3002\u7531\u4e8e\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u6765\u7535\u8005\u5217\u8868\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5fc5\u987b\u7ec3\u4e60\u4e00\u70b9\u671f\u671b\u7ba1\u7406\uff1a\u5982\u679c\u6211\u4eec\u53ef\u4ee5\uff0c\u6211\u4eec\u4f1a\u5c3d\u529b\u56de\u5f52\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u6211\u4eec\u4fdd\u7559\u4e86\u4efb\u4f55\u8fd4\u56de\u7684\u6743\u5229\u3002\u5728Haskell\uff0c\u6211\u4eec\u4f7f\u7528\u53ef\u80fd\u7c7b\u578b\u7684\u53ef\u80fd\u6027\u8868\u793a\uff1a\n  \u8fd9\u4e3a\u6211\u4eec\u63d0\u51fa\u4e86\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u5934\u90e8\u7684\u81ea\u7531 - \u5b83\u5141\u8bb8\u6211\u4eec\u5728\u53d1\u73b0\u6211\u4eec\u65e0\u6cd5\u751f\u6210\u6bd5\u7adf\u6ca1\u6709\u4ea7\u751f\u7c7b\u578b\u7684\u503c\u65f6\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\uff1a\n  \u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u5bf9\u5427\uff1f\u6682\u65f6\uff0c\u662f\u7684...\u4f46\u662f\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u6709\u9690\u85cf\u7684\u6210\u672c\u3002\n \u5f53\u6211\u4eec\u5b9e\u65bd\u5934\u65f6\uff0c\u8fd4\u56de\u53ef\u80fd\u662f\u65e0\u7591\u7684\u65b9\u4fbf\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u5b9e\u9645\u4f7f\u7528\u5b83\u65f6\uff0c\u5b83\u53d8\u5f97\u660e\u663e\u4e0d\u592a\u65b9\u4fbf\uff01\u7531\u4e8e\u5934\u90e8\u603b\u662f\u6709\u53ef\u80fd\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u6b64\u8d1f\u62c5\u843d\u5728\u547c\u53eb\u8005\u8eab\u4e0a\uff0c\u4ee5\u5904\u7406\u8fd9\u79cd\u53ef\u80fd\u6027\uff0c\u6709\u65f6\uff0c\u964d\u538b\u7684\u4f20\u9012\u53ef\u80fd\u4f1a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u6cae\u4e27\u3002\u8981\u67e5\u770b\u4e3a\u4ec0\u4e48\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a\n getconfigurationDirectories :: io [filepath] getconfigurationdirectories = do configdirsstring\uff06lt;  -  getenv\uff06\uff0334; config_dirs\uff06\uff0334;\u8ba9configdirslist = split\uff06\uff0339;\uff0c\uff06\uff0339; configdirsstring\u4f55\u65f6\uff08null configdirslist\uff09$ throwe $ usererror\uff06\uff0334; config_dirs\u4e0d\u80fd\u4e3a\u7a7a\uff06\uff0334; pure configdirslist main :: io\uff08\uff09main = do configdirs\uff06lt;  -  getconfigurationDirectories\u6848\u4f8bHead CommendIns\u7684\u53ea\u662fCachedir  - \uff06gt; InitializeCache Cachedir\u4ec0\u4e48\u90fd\u6ca1\u6709 - \uff06gt;\u9519\u8bef\uff06\uff0334;\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f;\u5df2\u7ecf\u68c0\u67e5\u7684configdirs\u662f\u975e\u7a7a\u7684\uff06\uff0334; \n\u5f53getConfigurationDirectories\u4ece\u73af\u5883\u4e2d\u68c0\u7d22\u6587\u4ef6\u8def\u5f84\u5217\u8868\u65f6\uff0c\u5b83\u4e3b\u52a8\u68c0\u67e5\u5217\u8868\u662f\u975e\u7a7a\u7684\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u7528\u5934\u90e8\u4f7f\u7528\u5934\u90e8\u83b7\u53d6\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u53ef\u80fd\u4ecd\u7136\u9700\u8981\u6211\u4eec\u5904\u7406\u6211\u4eec\u6240\u77e5\u9053\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u4e8b\u60c5\uff01\u8fd9\u6709\u51e0\u4e2a\u539f\u56e0\u975e\u5e38\u7cdf\u7cd5\uff1a\n \u9996\u5148\uff0c\u8fd9\u53ea\u662f\u70e6\u4eba\u3002\u6211\u4eec\u5df2\u7ecf\u68c0\u67e5\u4e86\u8be5\u5217\u8868\u662f\u975e\u7a7a\u7684\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u5c06\u4ee3\u7801\u4e0e\u53e6\u4e00\u4e2a\u5197\u4f59\u652f\u7968\u6df7\u4e71\uff1f\n  \u5176\u6b21\uff0c\u5b83\u5177\u6709\u6f5c\u5728\u7684\u6027\u80fd\u6210\u672c\u3002\u867d\u7136\u5728\u8be5\u7279\u5b9a\u793a\u4f8b\u4e2d\u5197\u4f59\u68c0\u67e5\u7684\u6210\u672c\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u573a\u666f\uff0c\u5176\u4e2d\u5197\u4f59\u68c0\u67e5\u53ef\u4ee5\u52a0\u8d77\u6765\uff0c\u4f8b\u5982\u5b83\u4eec\u5728\u7d27\u5bc6\u7684\u5faa\u73af\u4e2d\u53d1\u751f\u3002\n  \u6700\u540e\uff0c\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u7b49\u5f85\u53d1\u751f\u7684\u9519\u8bef\uff01\u5982\u679c\u4fee\u6539\u4e86GetConfigurationDirectories\u4ee5\u505c\u6b62\u68c0\u67e5\u5217\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u6545\u610f\u6216\u65e0\u610f\u4e2d\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u7a0b\u5e8f\u5458\u53ef\u80fd\u4e0d\u8bb0\u5f97\u66f4\u65b0\u4e3b\u8981\uff0c\u7a81\u7136\u95f4\u201c\u4e0d\u53ef\u80fd\u201d\u7684\u9519\u8bef\u53d8\u5f97\u4e0d\u4ec5\u53ef\u80fd\uff0c\u800c\u4e14\u53ef\u80fd\u3002\n \u5bf9\u6b64\u5197\u4f59\u68c0\u67e5\u7684\u9700\u6c42\u57fa\u672c\u4e0a\u8feb\u4f7f\u6211\u4eec\u5728\u6211\u4eec\u7684\u7c7b\u578b\u7cfb\u7edf\u4e2d\u6253\u5b54\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u9759\u6001\u8bc1\u660e\u65e0\u6240\u4e8b\u4e8b\uff0c\u90a3\u4e48\u4fee\u6539\u5230GetConfigurationDirectories\uff0c\u505c\u6b62\u68c0\u67e5\u5217\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u65e0\u6548\uff0c\u9a8c\u8bc1\u5e76\u89e6\u53d1\u7f16\u8bd1\u65f6\u5931\u8d25\u3002\u4f46\u662f\uff0c\u6309\u7167\u5199\u4f5c\uff0c\u6211\u4eec\u88ab\u8feb\u4f9d\u9760\u6d4b\u8bd5\u5957\u4ef6\u6216\u624b\u52a8\u68c0\u67e5\u6765\u6355\u83b7\u9519\u8bef\u3002\n  \u663e\u7136\uff0c\u6211\u4eec\u7684\u4fee\u6539\u7248\u672c\u7684\u5934\u90e8\u7559\u4e0b\u4e86\u4e00\u4e9b\u9700\u8981\u7684\u4e1c\u897f\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u66f4\u667a\u80fd\uff1a\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u68c0\u67e5\u4e86\u8be5\u5217\u8868\u662f\u975e\u7a7a\u7684\uff0c\u5219\u5e94\u65e0\u6761\u4ef6\u5730\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u800c\u4e0d\u5f3a\u8feb\u6211\u4eec\u5904\u7406\u6211\u4eec\u6240\u77e5\u9053\u7684\u60c5\u51b5\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6211\u4eec\u600e\u6837\u624d\u80fd\u8fd9\u6837\u505a\uff1f\n   \u4e0a\u4e00\u8282\u8bf4\u660e\u4e86\uff0c\u901a\u8fc7\u524a\u5f31\u8fd4\u56de\u7c7b\u578b\u6240\u505a\u7684\u627f\u8bfa\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u90e8\u5206\u7c7b\u578b\u7b7e\u540d\u8f6c\u6362\u4e3a\u603b\u4f53\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u60f3\u8fd9\u6837\u505a\uff0c\u53ea\u5269\u4e0b\u4e00\u4ef6\u4e8b\u53ef\u4ee5\u66f4\u6539\uff1a\u53c2\u6570\u7c7b\u578b\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c[a]\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u52a0\u5f3a\u53c2\u6570\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u524a\u5f31\u8fd4\u56de\u7c7b\u578b\uff0c\u800c\u662f\u6d88\u9664\u9996\u5148\u5728\u7a7a\u540d\u5355\u4e0a\u8c03\u7528\u5934\u90e8\u7684\u53ef\u80fd\u6027\u3002 \n\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u8868\u793a\u975e\u7a7a\u5217\u8868\u7684\u7c7b\u578b\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6765\u81eadata.list.nonuspty\u7684\u73b0\u6709\u7684\u975e\u7a7a\u7c7b\u578b\u6b63\u597d\u3002\u5b83\u5177\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a\n  \u8bf7\u6ce8\u610f\uff0c\u975e\u7a7aA\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\uff0c\u53ef\u80fd\u662f\u7a7a\u7684[a]\u7684\u5143\u7ec4\u3002\u8fd9\u901a\u8fc7\u5c06\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u5217\u8868\u7684\u5c3e\u90e8\u5206\u5f00\u5b58\u50a8\u6765\u65b9\u4fbf\u5730\u7ed8\u5236\u975e\u7a7a\u5217\u8868\uff1a\u5373\u4f7f[A]\u7ec4\u4ef6\u662f[]\uff0c\u5fc5\u987b\u59cb\u7ec8\u5b58\u5728\u7ec4\u4ef6\u3002\u8fd9\u4f7f\u5f97\u5934\u90e8\u5b8c\u5168\u5fae\u4e0d\u8db3\u9053\u5b9e\u73b0\uff1a2\n  \u4e0e\u4e4b\u524d\u4e0d\u540c\uff0cGHC\u63a5\u53d7\u6b64\u5b9a\u4e49\u800c\u65e0\u9700\u6295\u8bc9 - \u6b64\u5b9a\u4e49\u662f\u5b8c\u5168\u7684\uff0c\u800c\u4e0d\u662f\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u66f4\u65b0\u6211\u4eec\u7684\u7a0b\u5e8f\u4ee5\u4f7f\u7528\u65b0\u7684\u5b9e\u73b0\uff1a\n getconfigurationDirectories :: IO\uff08nonempty filepath\uff09getconfigurationDirectories = do configdirsstring\uff06lt;  -  getenv\uff06\uff0334; config_dirs\uff06\uff0334;\u8ba9configdirslist = split\uff06\uff0339;\uff0c\uff06\uff0339; configdirsstring case nonempty configdirslist\u53ea\u662fnonemptyconfigdirslist  - \uff06gt;\u7eaf\u7cb9\u7684nonemptyconfigdirslist nother  - \uff06gt; Throwio $ userError\uff06\uff0334; config_dirs\u4e0d\u80fd\u4e3a\u7a7a\uff06\uff0334; main :: io\uff08\uff09main = do configdirs\uff06lt;  -  getconfigurationDirectories initializecache\uff08head configdirs\uff09\n \u8bf7\u6ce8\u610f\uff0c\u4e3b\u8981\u7684\u5197\u4f59\u652f\u7968\u73b0\u5728\u5b8c\u5168\u6d88\u5931\u4e86\uff01\u76f8\u53cd\uff0c\u6211\u4eec\u5728GetConfigurationDirectories\u4e2d\u5b8c\u6210\u4e00\u6b21\u68c0\u67e5\u4e00\u6b21\u3002\u5b83\u4f7f\u7528\u6765\u81eadata.list.nonusemy\u7684\u975e\u7a7a\u51fd\u6570\u6765\u6784\u9020\u6765\u81ea[a]\u7684\u975e\u7a7a\u7684A.NONEMPTY\uff0c\u5176\u5177\u6709\u4ee5\u4e0b\u7c7b\u578b\uff1a\n  \u4e5f\u8bb8\u4ecd\u5728\u90a3\u91cc\uff0c\u4f46\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u5f88\u65e9\u5c31\u5904\u7406\u4e86\u4ec0\u4e48\u610f\u601d\uff1a\u5728\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u8f93\u5165\u9a8c\u8bc1\u7684\u540c\u4e00\u4e2a\u5730\u65b9\u5c31\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u3002\u4e00\u65e6\u68c0\u67e5\u5df2\u901a\u8fc7\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u975e\u7a7a\u7684\u6587\u4ef6\u7b26\u503c\uff0c\u5b83\u4fdd\u7559\uff08\u5728\u7c7b\u578b\u7cfb\u7edf\u4e2d\uff01\uff09\u5217\u8868\u786e\u5b9e\u662f\u975e\u7a7a\u7684\u77e5\u8bc6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u7c7b\u578b\u7684\u975e\u7a7a\u95f2A\u503c\uff0c\u5c31\u50cf[a]\u7c7b\u578b\u7684\u503c\uff0c\u52a0\u4e0a\u5217\u8868\u975e\u7a7a\u7684\u8bc1\u660e\u3002\n \u901a\u8fc7\u52a0\u5f3a\u5934\u90e8\u53c2\u6570\u7684\u7c7b\u578b\u800c\u4e0d\u662f\u524a\u5f31\u5176\u7ed3\u679c\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u5b8c\u5168\u4ece\u4e0a\u4e00\u8282\u4e2d\u5220\u9664\u4e86\u6240\u6709\u95ee\u9898\uff1a \n\u4ee3\u7801\u6ca1\u6709\u5197\u4f59\u68c0\u67e5\uff0c\u56e0\u6b64\u4e0d\u80fd\u6709\u4efb\u4f55\u6027\u80fd\u5f00\u9500\u3002\n  \u6b64\u5916\uff0c\u5982\u679cGetConfigurationDirectories\u66f4\u6539\u4ee5\u505c\u6b62\u68c0\u67e5\u5217\u8868\u662f\u975e\u7a7a\u7684\uff0c\u5219\u5176\u8fd4\u56de\u7c7b\u578b\u4e5f\u5fc5\u987b\u66f4\u6539\u3002\u56e0\u6b64\uff0c\u4e3b\u8981\u5c06\u65e0\u6cd5\u8fdb\u884cTypeCreck\uff0c\u5728\u6211\u4eec\u8fd0\u884c\u8be5\u8ba1\u5212\u4e4b\u524d\u63d0\u9192\u6211\u4eec\u89e3\u51b3\u95ee\u9898\uff01\n \u66f4\u91cd\u8981\u7684\u662f\uff0c\u901a\u8fc7\u7528nonempty\u64b0\u5199\u5934\u90e8\u4ece\u65b0\u7684\u884c\u4e3a\u6062\u590d\u5934\u8111\u7684\u65e7\u884c\u4e3a\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff1a\n  \u8bf7\u6ce8\u610f\uff0c\u9006\u4e0d\u6b63\u786e\uff1a\u65e0\u6cd5\u4ece\u65e7\u7248\u672c\u83b7\u53d6\u65b0\u7248\u672c\u7684\u5934\u90e8\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u6240\u6709\u8f74\u4e0a\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u90fd\u662f\u4f18\u8d8a\u7684\u3002\n  \u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u4e0a\u9762\u7684\u793a\u4f8b\u4e0e\u6b64\u535a\u5ba2\u6587\u7ae0\u7684\u6807\u9898\u6709\u5173\u3002\u6bd5\u7adf\uff0c\u6211\u4eec\u53ea\u68c0\u67e5\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u9a8c\u8bc1\u5217\u8868\u662f\u975e\u7a7a\u7684 - \u6ca1\u6709\u89e3\u6790\u89c6\u7ebf\u3002\u8fd9\u79cd\u89e3\u91ca\u6ca1\u6709\u9519\uff0c\u4f46\u6211\u60f3\u63d0\u51fa\u53e6\u4e00\u4e2a\u89c6\u89d2\uff1a\u5728\u6211\u7684\u8111\u6d77\u4e2d\uff0c\u9a8c\u8bc1\u548c\u89e3\u6790\u4e4b\u95f4\u7684\u533a\u522b\u51e0\u4e4e\u5b8c\u5168\u662f\u5982\u4f55\u4fdd\u7559\u7684\u4fe1\u606f\u3002\u8003\u8651\u4ee5\u4e0b\u529f\u80fd\uff1a\n ValidatenOnusempty :: [a]  - \uff06gt; io\uff08\uff09validatenonempty\uff08_\uff1a_\uff09= pure\uff08\uff09validatenonempty [] = throwio $ userError\uff06\uff0334;\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\uff06\uff0334; Parsenonempty :: [a]  - \uff06gt; io\uff08nonempty a\uff09parsenonempty\uff08x\uff1axs\uff09= pure\uff08x\uff1a| xs\uff09parsenonempty [] = throwio $ usererror\uff06\uff0334;\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\uff06\uff0334;\n \u8fd9\u4e24\u4e2a\u51fd\u6570\u51e0\u4e4e\u76f8\u540c\uff1a\u68c0\u67e5\u6240\u63d0\u4f9b\u7684\u5217\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u662f\uff0c\u5219\u5b83\u4eec\u4e2d\u6b62\u4e86\u5177\u6709\u9519\u8bef\u6d88\u606f\u7684\u7a0b\u5e8f\u3002\u5dee\u5f02\u5b8c\u5168\u5728\u8fd4\u56de\u7c7b\u578b\u4e2d\uff1aValidAtenOnempty\u59cb\u7ec8\u8fd4\u56de\uff08\uff09\uff0c\u4e0d\u5305\u542b\u4fe1\u606f\u7684\u7c7b\u578b\uff0c\u4f46\u5e15\u7d22\u7eb3\u7ebd\u74e6\u65af\u8fd4\u56deNonempty A\u7684\u8f93\u5165\u7c7b\u578b\uff0c\u8fd9\u4e9b\u8f93\u5165\u7c7b\u578b\u4fdd\u7559\u4e86\u7c7b\u578b\u7cfb\u7edf\u4e2d\u6240\u83b7\u5f97\u7684\u77e5\u8bc6\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u68c0\u67e5\u4e86\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u5e15\u7d22\u7eb3\u7ebd\u9a6c\u514b\u62e8\u5907\u4e86\u6765\u7535\u8005\u8bbf\u95ee\u5b83\u6240\u5b66\u5230\u7684\u4fe1\u606f\uff0c\u800cValidAtenHempty\u521a\u521a\u629b\u5f03\u5b83\u3002 \n\u8fd9\u4e24\u4e2a\u529f\u80fd\u4f18\u96c5\u5730\u8bf4\u660e\u4e86\u9759\u6001\u7cfb\u7edf\u7684\u4f5c\u7528\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u89c6\u89d2\uff1aValidatenOnempty obeys\u8db3\u591f\u7684TypeChecker\uff0c\u4f46\u53ea\u6709Parsenempley\u5145\u5206\u5229\u7528\u5b83\u3002\u5982\u679c\u4f60\u770b\u5230\u4e3a\u4ec0\u4e48ParsenAnempty\u662f\u4f18\u9009\u7684\uff0c\u4f60\u660e\u767dMantra\u201c\u89e3\u6790\uff0c\u4e0d\u8981\u9a8c\u8bc1\u7684\u610f\u601d\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4f60\u4ecd\u7136\u662f\u5bf9\u5e15\u7d22\u7eb3\u514b\u7684\u540d\u5b57\u6301\u6000\u7591\u6001\u5ea6\u3002\u5b83\u771f\u7684\u89e3\u6790\u4e86\u4ec0\u4e48\uff0c\u8fd8\u662f\u5b83\u53ea\u662f\u9a8c\u8bc1\u5b83\u7684\u8f93\u5165\u5e76\u8fd4\u56de\u7ed3\u679c\uff1f\u867d\u7136\u5bf9\u89e3\u6790\u6216\u9a8c\u8bc1\u67d0\u4e9b\u4e1c\u897f\u7684\u7cbe\u786e\u5b9a\u4e49\u662f\u503c\u5f97\u7b80\u8a00\u7684\uff0c\u4f46\u6211\u8ba4\u4e3aParsennempty\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u6790\u5668\uff08\u5c3d\u7ba1\u662f\u4e00\u4e2a\u7279\u522b\u7b80\u5355\u7684\u89e3\u6790\u5668\uff09\u3002\n \u8003\u8651\uff1a\u4ec0\u4e48\u662f\u89e3\u6790\u5668\uff1f\u5b9e\u9645\u4e0a\uff0c\u89e3\u6790\u5668\u53ea\u662f\u6d88\u8017\u8f83\u5c11\u7ed3\u6784\u8f93\u5165\u7684\u529f\u80fd\uff0c\u5e76\u4ea7\u751f\u66f4\u591a\u7ed3\u6784\u5316\u8f93\u51fa\u3002\u901a\u8fc7\u5176\u672c\u8d28\uff0c\u89e3\u6790\u5668\u662f\u4e00\u4e2a\u90e8\u5206\u51fd\u6570 - \u57df\u4e2d\u7684\u67d0\u4e9b\u503c\u4e0e\u8303\u56f4\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u4e0d\u5bf9\u5e94 - \u56e0\u6b64\u6240\u6709\u89e3\u6790\u5668\u5fc5\u987b\u5177\u6709\u4e00\u4e9b\u6545\u969c\u6982\u5ff5\u3002\u901a\u5e38\uff0c\u5bf9\u89e3\u6790\u5668\u7684\u8f93\u5165\u662f\u6587\u672c\uff0c\u4f46\u8fd9\u7edd\u4e0d\u662f\u4e00\u4e2a\u8981\u6c42\uff0c\u5e15\u7d22\u7eb3\u59c6\u7a7a\u8d28\u91cf\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u54fc\u5531\u8005\u89e3\u6790\u5668\uff1a\u5b83\u5c06\u5217\u8868\u89e3\u6790\u4e3a\u975e\u7a7a\u5217\u8868\uff0c\u901a\u8fc7\u7528\u9519\u8bef\u6d88\u606f\u7ec8\u6b62\u7a0b\u5e8f\u6765\u89e3\u6790\u4e3a\u975e\u7a7a\u5217\u8868\u3002\n \u5728\u8fd9\u79cd\u7075\u6d3b\u7684\u5b9a\u4e49\u4e0b\uff0c\u89e3\u6790\u5668\u662f\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5f3a\u5927\u5de5\u5177\uff1a\u5b83\u4eec\u5141\u8bb8\u5728\u7a0b\u5e8f\u548c\u5916\u90e8\u4e16\u754c\u4e4b\u95f4\u7684\u8fb9\u754c\u4e0a\u5bf9\u8f93\u5165\u8fdb\u884c\u62e8\u51fa\u68c0\u67e5\uff0c\u5e76\u4e14\u4e00\u65e6\u6267\u884c\u8fd9\u4e9b\u68c0\u67e5\uff0c\u4ed6\u4eec\u4ece\u4e0d\u9700\u8981\u518d\u6b21\u68c0\u67e5\uff01 Haskellers\u5f88\u6e05\u695a\u8fd9\u4e00\u7535\u6e90\uff0c\u4ed6\u4eec\u5b9a\u671f\u4f7f\u7528\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u89e3\u6790\u5668\uff1a\n AESON\u5e93\u63d0\u4f9b\u4e86\u4e00\u79cd\u89e3\u6790\u5668\u7c7b\u578b\uff0c\u53ef\u7528\u4e8e\u5c06JSON\u6570\u636e\u89e3\u6790\u4e3a\u57df\u7c7b\u578b\u3002\n    \u50cf\u6301\u4e45\u6027\u548cpostgreSQL-Simply\u7684\u6570\u636e\u5e93\u5e93\u6709\u4e00\u4e2a\u673a\u5236\uff0c\u7528\u4e8e\u89e3\u6790\u5728\u5916\u90e8\u6570\u636e\u5b58\u50a8\u4e2d\u7684\u89e3\u6790\u503c\u3002\n  \u4ec6\u4eba\u751f\u6001\u7cfb\u7edf\u56f4\u7ed5Parsing Haskell\u6570\u636e\u7c7b\u578b\u4ece\u8def\u5f84\u7ec4\u4ef6\uff0c\u67e5\u8be2\u53c2\u6570\uff0cHTTP\u6807\u5934\u7b49\u5185\u6784\u5efa\u3002\n \u6240\u6709\u8fd9\u4e9b\u5e93\u4e4b\u95f4\u7684\u5171\u540c\u4e3b\u9898\u662f\u5b83\u4eec\u5750\u5728Haskell\u5e94\u7528\u7a0b\u5e8f\u548c\u5916\u90e8\u4e16\u754c\u4e4b\u95f4\u7684\u8fb9\u754c\u4e0a\u3002\u8fd9\u4e2a\u4e16\u754c\u5728\u4ea7\u54c1\u548c\u603b\u548c\u4e2d\u6ca1\u6709\u8bf4\u8bdd\uff0c\u4f46\u5728\u5b57\u8282\u7684\u6eaa\u6d41\u4e2d\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u4e00\u4e9b\u89e3\u6790\u3002\u5728\u5bf9\u6570\u636e\u884c\u4e8b\u4e4b\u524d\uff0c\u5bf9\u524d\u9762\u8fdb\u884c\u89e3\u6790\uff0c\u53ef\u4ee5\u8d70\u5f88\u957f\u7684\u8def\u8981\u907f\u514d\u8bb8\u591a\u7c7b\u522b\u7684\u9519\u8bef\uff0c\u5176\u4e2d\u4e00\u4e9b\u751a\u81f3\u53ef\u80fd\u662f\u5b89\u5168\u6f0f\u6d1e\u3002 \n\u5bf9\u524d\u9762\u89e3\u6790\u6240\u6709\u5185\u5bb9\u7684\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u5b83\u6709\u65f6\u9700\u8981\u5728\u5b9e\u9645\u4f7f\u7528\u4e4b\u524d\u957f\u65f6\u95f4\u89e3\u6790\u503c\u3002\u4ee5\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u89e3\u6790\u548c\u5904\u7406\u903b\u8f91\u540c\u6b65\u4e00\u70b9\u68d8\u624b\u800c\u6ca1\u6709\u5e7f\u6cdb\u7684\u6d4b\u8bd5\u8986\u76d6\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u53ef\u80fd\u662f\u8d39\u529b\u7684\u7ef4\u62a4\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u95ee\u9898\u53d8\u5f97\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0a\u9762\u7684\u975e\u7a7a\u767d\u793a\u4f8b\u6240\u793a\uff1a\u5982\u679c\u89e3\u6790\u548c\u5904\u7406\u903b\u8f91\u8d85\u51fa\u540c\u6b65\uff0c\u5219\u7a0b\u5e8f\u5c06\u65e0\u6cd5\u7f16\u8bd1\u3002\n  \u5e0c\u671b\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u60a8\u81f3\u5c11\u9500\u552e\u4e86\u89e3\u6790\u4f18\u4e8e\u9a8c\u8bc1\u7684\u60f3\u6cd5\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u6325\u4e4b\u4e0d\u53bb\u7684\u7591\u8651\u3002\u9a8c\u8bc1\u662f\u5426\u771f\u7684\u5982\u6b64\u7cdf\u7cd5\uff0c\u5982\u679c\u7c7b\u578b\u7cfb\u7edf\u5c06\u5f3a\u8feb\u60a8\u8feb\u4f7f\u60a8\u6700\u7ec8\u8fdb\u884c\u5fc5\u8981\u7684\u68c0\u67e5\uff1f\u4e5f\u8bb8\u9519\u8bef\u62a5\u544a\u5c06\u6709\u70b9\u5dee\uff0c\u4f46\u6709\u70b9\u5197\u4f59\u68c0\u67e5\u4e0d\u80fd\u4f24\u5bb3\uff0c\u5bf9\u5427\uff1f\n \u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002 ad-hoc\u9a8c\u8bc1\u5bfc\u81f4\u8bed\u8a00 - \u7406\u8bba\u5b89\u5168\u573a\u547c\u53eb\u730e\u67aa\u89e3\u6790\u7684\u73b0\u8c61\u3002\u57282016\u5e74\u7684\u8bba\u6587\u4e2d\uff0c\u5b9d\u8d1d\u4e03\u70ae\u5854\uff1aLangsec\u9519\u8bef\u7684\u5206\u7c7b\u4ee5\u53ca\u5982\u4f55\u5f00\u9664\u5b83\u4eec\uff0c\u5176\u4f5c\u8005\u63d0\u4f9b\u4ee5\u4e0b\u5b9a\u4e49\uff1a\n Shotgun\u89e3\u6790\u662f\u4e00\u4e2a\u7f16\u7a0b\u53cd\u56fe\u6848\uff0c\u89e3\u6790\u548c\u8f93\u5165\u9a8c\u8bc1\u4ee3\u7801\u4e0e\u5728\u8f93\u5165\u65f6\u7684\u5904\u7406\u4ee3\u7801\u629b\u51fa\u4e91\u7684\u5904\u7406\u4ee3\u7801\u548c\u4f20\u64ad\uff0c\u5e76\u5e0c\u671b\u6ca1\u6709\u4efb\u4f55\u7cfb\u7edf\u7684\u7406\u7531\uff0c\u5176\u4e2d\u4e00\u4e2a\u6216\u53e6\u4e00\u4e2a\u4eba\u4f1a\u6355\u83b7\u6240\u6709\u7684\u201c\u574f\u201d\u6848\u4f8b\u3002\n  Shotgun\u89e3\u6790\u5fc5\u7136\u5265\u593a\u4e86\u62d2\u7edd\u65e0\u6548\u8f93\u5165\u800c\u4e0d\u662f\u5904\u7406\u5b83\u7684\u80fd\u529b\u7684\u7a0b\u5e8f\u3002\u8f93\u5165\u6d41\u4e2d\u7684\u665a\u671f\u9519\u8bef\u5c06\u5bfc\u81f4\u5df2\u5904\u7406\u7684\u67d0\u4e9b\u90e8\u5206\u65e0\u6548\u8f93\u5165\uff0c\u7ed3\u679c\u662f\u7a0b\u5e8f\u72b6\u6001\u96be\u4ee5\u51c6\u786e\u9884\u6d4b\u3002\n \u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0d\u89e3\u6790\u5176\u6240\u6709\u8f93\u5165\u524d\u9762\u7684\u7a0b\u5e8f\u8fd0\u884c\u4e86\u5728\u8f93\u5165\u7684\u6709\u6548\u90e8\u5206\u4f5c\u7528\u7684\u98ce\u9669\uff0c\u53d1\u73b0\u4e0d\u540c\u7684\u90e8\u5206\u662f\u65e0\u6548\u7684\uff0c\u5e76\u4e14\u7a81\u7136\u9700\u8981\u56de\u6eda\u5b83\u5df2\u7ecf\u6267\u884c\u7684\u4efb\u4f55\u4fee\u6539\u4ee5\u4fbf\u4fdd\u6301\u4e00\u81f4\u6027\u3002\u6709\u65f6\u8fd9\u662f\u53ef\u80fd\u7684 - \u4f8b\u5982\u5728RDBMS\u4e2d\u56de\u6eda\u4e8b\u52a1 - \u4f46\u901a\u5e38\u5b83\u53ef\u80fd\u4e0d\u662f\u3002\n \u5b83\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u663e\u800c\u6613\u89c1\u7684\u662f\u9730\u5f39\u67aa\u89e3\u6790\u4e0e\u9a8c\u8bc1 - \u6bd5\u7adf\uff0c\u5982\u679c\u60a8\u5b8c\u6210\u6240\u6709\u9a8c\u8bc1\uff0c\u8bf7\u51cf\u8f7b\u9730\u5f39\u67aa\u89e3\u6790\u7684\u98ce\u9669\u3002\u95ee\u9898\u662f\u57fa\u4e8e\u9a8c\u8bc1\u7684\u65b9\u6cd5\u4f7f\u5f97\u975e\u5e38\u56f0\u96be\u6216\u65e0\u6cd5\u786e\u5b9a\u4e00\u5207\u662f\u5426\u5b9e\u9645\u9a8c\u8bc1\uff0c\u5982\u679c\u53ef\u80fd\u5b9e\u9645\u4e0a\u53d1\u751f\u4e86\u4e00\u4e9b\u6240\u8c13\u7684\u201c\u4e0d\u53ef\u80fd\u201d\u7684\u60c5\u51b5\u3002\u6574\u4e2a\u7a0b\u5e8f\u5fc5\u987b\u5047\u8bbe\u5728\u4efb\u4f55\u5730\u65b9\u63d0\u51fa\u5f02\u5e38\uff0c\u8fd9\u4e0d\u4ec5\u53ef\u80fd\u662f\u5fc5\u8981\u7684\u3002 \n\u89e3\u6790\u901a\u8fc7\u5c06\u7a0b\u5e8f\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\u89e3\u6790\u548c\u6267\u884c\u6765\u907f\u514d\u6b64\u95ee\u9898 - \u4ec5\u5728\u7b2c\u4e00\u4e2a\u9636\u6bb5\u53d1\u751f\u65e0\u6548\u8f93\u5165\u5bfc\u81f4\u7684\u6545\u969c\u3002\u6267\u884c\u671f\u95f4\u7684\u5269\u4f59\u6545\u969c\u6a21\u5f0f\u7684\u96c6\u5408\u6700\u5c0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5b83\u4eec\u6240\u9700\u7684\u6e29\u67d4\u7167\u987e\u6765\u5904\u7406\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u535a\u5ba2\u5e16\u5b50\u4e00\u76f4\u662f\u9500\u552e\u64ad\u653e\u7684\u4e1c\u897f\u3002 \u201c\u4f60\uff0c\u4eb2\u7231\u7684\u8bfb\u8005\uff0c\u5e94\u8be5\u662f\u89e3\u6790\uff01\u201d\u5b83\u8bf4\uff0c\u5982\u679c\u6211\u59a5\u5584\u5b8c\u6210\u4e86\u6211\u7684\u5de5\u4f5c\uff0c\u81f3\u5c11\u6709\u4e9b\u4eba\u5356\u6389\u4e86\u3002\u7136\u800c\uff0c\u5373\u4f7f\u4f60\u4e86\u89e3\u201c\u4ec0\u4e48\u201d\u548c\u201c\u4e3a\u4ec0\u4e48\u201d\uff0c\u4f60\u4e5f\u53ef\u80fd\u5bf9\u201c\u5982\u4f55\u201d\u89c9\u5f97\u7279\u522b\u6709\u4fe1\u5fc3\u3002\n  \u5047\u8bbe\u60a8\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u63a5\u53d7\u4ee3\u8868\u952e\u503c\u5bf9\u7684\u5143\u7ec4\u5217\u8868\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u60a8\u7a81\u7136\u610f\u8bc6\u5230\u5982\u679c\u5217\u8868\u5177\u6709\u91cd\u590d\u952e\uff0c\u5219\u4e0d\u786e\u5b9a\u60a8\u8be5\u600e\u4e48\u529e\u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u662f\u5217\u8868\u4e2d\u6ca1\u6709\u4efb\u4f55\u91cd\u590d\u9879\uff1a\n  \u4f46\u662f\uff0c\u8fd9\u4e2a\u68c0\u67e5\u5f88\u8106\u5f31\uff1a\u5b83\u5f88\u5bb9\u6613\u5fd8\u8bb0\u3002\u56e0\u4e3a\u5b83\u7684\u8fd4\u56de\u503c\u672a\u4f7f\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u59cb\u7ec8\u7701\u7565\u5b83\uff0c\u5e76\u4e14\u9700\u8981\u5b83\u4ecd\u7136\u53ef\u4ee5typecheck\u7684\u4ee3\u7801\u3002\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u9009\u62e9\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8be5\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u901a\u8fc7\u65bd\u5de5\u7981\u6b62\u91cd\u590d\u952e\uff0c\u4f8b\u5982\u5730\u56fe\u3002\u8c03\u6574\u51fd\u6570\u7684\u7c7b\u578b\u7b7e\u540d\u4ee5\u63a5\u53d7\u5730\u56fe\u800c\u4e0d\u662f\u5143\u7ec4\u5217\u8868\uff0c\u5e76\u6839\u636e\u60a8\u7684\u6b63\u5e38\u5b9e\u73b0\u5b83\u3002\n \u5b8c\u6210\u540e\uff0c\u60a8\u7684\u65b0\u529f\u80fd\u7684\u547c\u53eb\u7ad9\u70b9\u53ef\u80fd\u4f1a\u65e0\u6cd5\u8fdb\u884cTypeCreck\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u88ab\u4f20\u9012\u4e86\u5143\u7ec4\u5217\u8868\u3002\u5982\u679c\u547c\u53eb\u8005\u901a\u8fc7\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u7ed9\u51fa\u4e86\u503c\uff0c\u6216\u8005\u4ece\u5176\u4ed6\u51fd\u6570\u7684\u7ed3\u679c\u6536\u5230\u5b83\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u5c06\u7c7b\u578b\u4ece\u5217\u8868\u66f4\u65b0\u5230\u6620\u5c04\uff0c\u4e00\u76f4\u547c\u53eb\u94fe\u3002\u6700\u7ec8\uff0c\u60a8\u5c06\u8fbe\u5230\u521b\u5efa\u503c\u7684\u4f4d\u7f6e\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u627e\u5230\u5b9e\u9645\u5e94\u5141\u8bb8\u91cd\u590d\u7684\u5730\u65b9\u3002\u6b64\u65f6\uff0c\u60a8\u53ef\u4ee5\u63d2\u5165\u8c03\u7528CheckNoduplignKeys\u7684\u4fee\u6539\u7248\u672c\uff1a\n CheckNoduplicateKeys ::\uff08MonadError Apperror M\uff0cEQ K\uff09=\uff06gt; [\uff08k\uff0cv\uff09]  - \uff06gt; m\uff08map k v\uff09\n \u73b0\u5728\uff0c\u65e0\u6cd5\u7701\u7565\u68c0\u67e5\uff0c\u56e0\u4e3a\u5b83\u7684\u7ed3\u679c\u5b9e\u9645\u4e0a\u662f\u8be5\u7a0b\u5e8f\u6240\u5fc5\u9700\u7684\uff01 \n\u4f7f\u7528\u4f7f\u975e\u6cd5\u72b6\u6001\u4e0d\u8db3\u7684\u6570\u636e\u7ed3\u6784\u3002\u4f7f\u7528\u60a8\u5408\u7406\u7684\u6700\u7cbe\u786e\u7684\u6570\u636e\u7ed3\u6784\u6765\u6a21\u62df\u60a8\u7684\u6570\u636e\u3002\u5982\u679c\u4f7f\u7528\u5f53\u524d\u4f7f\u7528\u7684\u7f16\u7801\u6765\u89e3\u9664\u7279\u5b9a\u53ef\u80fd\u6027\u592a\u96be\u8fc7\uff0c\u8bf7\u8003\u8651\u5907\u7528\u7f16\u7801\uff0c\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u8868\u8fbe\u60a8\u8981\u5173\u5fc3\u7684\u5c5e\u6027\u3002\u4e0d\u8981\u5bb3\u6015\u91cd\u6784\u3002\n  \u5c3d\u53ef\u80fd\u5c06\u8bc1\u660e\u7684\u8d1f\u62c5\u63a8\u52a8\uff0c\u4f46\u6ca1\u6709\u8fdb\u4e00\u6b65\u3002\u5c06\u60a8\u7684\u6570\u636e\u8fbe\u5230\u60a8\u5c3d\u5feb\u6240\u9700\u7684\u6700\u7cbe\u786e\u7684\u8868\u793a\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5e94\u8be5\u53d1\u751f\u5728\u7cfb\u7edf\u7684\u8fb9\u754c\uff0c\u5728\u4efb\u4f55\u6570\u636e\u91c7\u53d6\u884c\u52a8\u4e4b\u524d\u3002 3.\n  \u5982\u679c\u4e00\u4e2a\u7279\u5b9a\u7684\u4ee3\u7801\u5206\u652f\u6700\u7ec8\u9700\u8981\u4e00\u6761\u6570\u636e\u7684\u66f4\u7cbe\u786e\u8868\u793a\uff0c\u5219\u4e00\u65e6\u9009\u62e9\u5206\u652f\uff0c\u5c31\u4f1a\u5c06\u6570\u636e\u89e3\u6790\u4e3a\u66f4\u7cbe\u786e\u7684\u8868\u793a\u3002\u660e\u667a\u5730\u4f7f\u7528\u548c\u7c7b\u578b\u5141\u8bb8\u60a8\u7684\u6570\u636e\u7c7b\u578b\u53cd\u6620\u548c\u9002\u5e94\u63a7\u5236\u6d41\u7a0b\u3002\n \u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u60a8\u5e0c\u671b\u62e5\u6709\u7684\u6570\u636e\u8868\u793a\u4e0a\u5199\u5165\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u60a8\u7ed9\u51fa\u7684\u6570\u636e\u8868\u793a\u3002\u7136\u540e\u8bbe\u8ba1\u8fc7\u7a0b\u6210\u4e3a\u6865\u63a5\u95f4\u9699\u7684\u8fd0\u52a8\uff0c\u901a\u5e38\u901a\u8fc7\u4ece\u4e24\u7aef\u5de5\u4f5c\uff0c\u76f4\u5230\u5b83\u4eec\u5728\u4e2d\u95f4\u7684\u67d0\u4e2a\u5730\u65b9\u9047\u5230\u3002\u4e0d\u8981\u5bb3\u6015\u5728\u4f60\u53bb\u7684\u65f6\u5019\u8fed\u4ee3\u8c03\u6574\u8bbe\u8ba1\u7684\u90e8\u4ef6\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u91cd\u6784\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u65b0\u7684\u4e1c\u897f\uff01\n  \u8ba9\u60a8\u7684\u6570\u636e\u7c7b\u578b\u901a\u77e5\u60a8\u7684\u4ee3\u7801\uff0c\u4e0d\u8981\u8ba9\u60a8\u7684\u4ee3\u7801\u63a7\u5236\u6570\u636e\u7c7b\u578b\u3002\u907f\u514d\u8bf1\u60d1\u53ea\u9700\u5728\u67d0\u5904\u7c98\u5728\u4e00\u4e2a\u5531\u7247\u4e2d\uff0c\u56e0\u4e3a\u60a8\u76ee\u524d\u6b63\u5728\u7f16\u5199\u7684\u529f\u80fd\u662f\u5fc5\u9700\u7684\u3002\u4e0d\u8981\u5bb3\u6015\u91cd\u6784\u4ee3\u7801\u4f7f\u7528\u6b63\u786e\u7684\u6570\u636e\u8868\u793a - \u7c7b\u578b\u7cfb\u7edf\u5c06\u786e\u4fdd\u60a8\u5df2\u4ecb\u7ecd\u4e86\u9700\u8981\u66f4\u6539\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u5e76\u4e14\u7a0d\u540e\u53ef\u80fd\u4f1a\u8282\u7701\u5934\u75bc\u3002\n  \u5904\u7406\u8fd4\u56dem\uff08\uff09\u7684\u51fd\u6570\uff0c\u6df1\u5ea6\u6000\u7591\u3002\u6709\u65f6\u8fd9\u4e9b\u662f\u771f\u6b63\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u8868\u73b0\u51fa\u6ca1\u6709\u6709\u610f\u4e49\u7684\u7ed3\u679c\u7684\u547d\u4ee4\u6548\u679c\uff0c\u4f46\u5982\u679c\u8be5\u6548\u679c\u7684\u4e3b\u8981\u76ee\u7684\u662f\u63d0\u9ad8\u9519\u8bef\uff0c\u90a3\u5c31\u53ef\u80fd\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n  \u4e0d\u8981\u5bb3\u6015\u5728\u591a\u6b21\u901a\u8fc7\u4e2d\u89e3\u6790\u6570\u636e\u3002\u907f\u514d\u9730\u5f39\u67aa\u89e3\u6790\u53ea\u610f\u5473\u7740\u60a8\u5728\u5b8c\u5168\u89e3\u6790\u4e4b\u524d\u4e0d\u5e94\u8be5\u5728\u8f93\u5165\u6570\u636e\u4e0a\u884c\u4e8b\uff0c\u800c\u4e0d\u662f\u60a8\u4e0d\u80fd\u4f7f\u7528\u4e00\u4e9bINP \n...... ", "note_en": "Historically, I\u2019ve struggled to find a concise, simple way to explain what it means to practice type-driven design. Too often, when someone asks me \u201cHow did you come up with this approach?\u201d I find I can\u2019t give them a satisfying answer. I know it didn\u2019t just come to me in a vision\u2014I have an iterative design process that doesn\u2019t require plucking the \u201cright\u201d approach out of thin air\u2014yet I haven\u2019t been very successful in communicating that process to others.\n However, about a month ago,  I was reflecting on Twitter about the differences I experienced parsing JSON in statically- and dynamically-typed languages, and finally, I realized what I was looking for. Now I have a single, snappy slogan that encapsulates what type-driven design means to me, and better yet, it\u2019s only three words long:\n   Alright, I\u2019ll confess: unless you already know what type-driven design is, my catchy slogan probably doesn\u2019t mean all that much to you. Fortunately, that\u2019s what the remainder of this blog post is for. I\u2019m going to explain precisely what I mean in gory detail\u2014but first, we need to practice a little wishful thinking.\n  One of the wonderful things about static type systems is that they can make it possible, and sometimes even easy, to answer questions like \u201cis it possible to write this function?\u201d For an extreme example, consider the following Haskell type signature:\n  Is it possible to implement  foo? Trivially, the answer is  no, as  Void is a type that contains no values, so it\u2019s impossible for  any function to produce a value of type  Void.  1 That example is pretty boring, but the question gets much more interesting if we choose a more realistic example:\n  This function returns the first element from a list. Is it possible to implement? It certainly doesn\u2019t sound like it does anything very complicated, but if we attempt to implement it, the compiler won\u2019t be satisfied:\n  warning: [-Wincomplete-patterns] Pattern match(es) are non-exhaustive In an equation for \u2018head\u2019: Patterns not matched: []\n This message is helpfully pointing out that our function is  partial, which is to say it is not defined for all possible inputs. Specifically, it is not defined when the input is  [], the empty list. This makes sense, as it isn\u2019t possible to return the first element of a list if the list is empty\u2014there\u2019s no element to return! So, remarkably, we learn this function isn\u2019t possible to implement, either.\n  To someone coming from a dynamically-typed background, this might seem perplexing. If we have a list, we might very well want to get the first element in it. And indeed, the operation of \u201cgetting the first element of a list\u201d isn\u2019t impossible in Haskell, it just requires a little extra ceremony. There are two different ways to fix the  head function, and we\u2019ll start with the simplest one.\n  As established,  head is partial because there is no element to return if the list is empty: we\u2019ve made a promise we cannot possibly fulfill. Fortunately, there\u2019s an easy solution to that dilemma: we can weaken our promise. Since we cannot guarantee the caller an element of the list, we\u2019ll have to practice a little expectation management: we\u2019ll do our best return an element if we can, but we reserve the right to return nothing at all. In Haskell, we express this possibility using the  Maybe type:\n  This buys us the freedom we need to implement  head\u2014it allows us to return  Nothing when we discover we can\u2019t produce a value of type  a after all:\n  Problem solved, right? For the moment, yes\u2026 but this solution has a hidden cost.\n Returning  Maybe is undoubtably convenient when we\u2019re  implementing  head. However, it becomes significantly less convenient when we want to actually use it! Since  head always has the potential to return  Nothing, the burden falls upon its callers to handle that possibility, and sometimes that passing of the buck can be incredibly frustrating. To see why, consider the following code:\n getConfigurationDirectories  ::  IO  [ FilePath ] getConfigurationDirectories  =  do  configDirsString  &lt;-  getEnv  &#34;CONFIG_DIRS&#34;  let  configDirsList  =  split  &#39;,&#39;  configDirsString  when  ( null  configDirsList )  $  throwIO  $  userError  &#34;CONFIG_DIRS cannot be empty&#34;  pure  configDirsList main  ::  IO  () main  =  do  configDirs  &lt;-  getConfigurationDirectories  case  head  configDirs  of  Just  cacheDir  -&gt;  initializeCache  cacheDir  Nothing  -&gt;  error  &#34;should never happen; already checked configDirs is non-empty&#34;\n When  getConfigurationDirectories retrieves a list of file paths from the environment, it proactively checks that the list is non-empty. However, when we use  head in  main to get the first element of the list, the  Maybe FilePath result still requires us to handle a  Nothing case that we know will never happen! This is terribly bad for several reasons:\n First, it\u2019s just annoying. We already checked that the list is non-empty, why do we have to clutter our code with another redundant check?\n  Second, it has a potential performance cost. Although the cost of the redundant check is trivial in this particular example, one could imagine a more complex scenario where the redundant checks could add up, such as if they were happening in a tight loop.\n  Finally, and worst of all, this code is a bug waiting to happen! What if  getConfigurationDirectories were modified to stop checking that the list is empty, intentionally or unintentionally? The programmer might not remember to update  main, and suddenly the \u201cimpossible\u201d error becomes not only possible, but probable.\n The need for this redundant check has essentially forced us to punch a hole in our type system. If we could statically  prove the  Nothing case impossible, then a modification to  getConfigurationDirectories that stopped checking if the list was empty would invalidate the proof and trigger a compile-time failure. However, as-written, we\u2019re forced to rely on a test suite or manual inspection to catch the bug.\n  Clearly, our modified version of  head leaves some things to be desired. Somehow, we\u2019d like it to be smarter: if we already checked that the list was non-empty,  head should unconditionally return the first element without forcing us to handle the case we know is impossible. How can we do that?\n   The previous section illustrated that we can turn that partial type signature into a total one by weakening the promise made in the return type. However, since we don\u2019t want to do that, there\u2019s only one thing left that can be changed: the argument type (in this case,  [a]). Instead of weakening the return type, we can  strengthen the argument type, eliminating the possibility of  head ever being called on an empty list in the first place.\n To do this, we need a type that represents non-empty lists. Fortunately, the existing  NonEmpty type from  Data.List.NonEmpty is exactly that. It has the following definition:\n  Note that  NonEmpty a is really just a tuple of an  a and an ordinary, possibly-empty  [a]. This conveniently models a non-empty list by storing the first element of the list separately from the list\u2019s tail: even if the  [a] component is  [], the  a component must always be present. This makes  head completely trivial to implement:  2\n  Unlike before, GHC accepts this definition without complaint\u2014this definition is  total, not partial. We can update our program to use the new implementation:\n getConfigurationDirectories  ::  IO  ( NonEmpty  FilePath ) getConfigurationDirectories  =  do  configDirsString  &lt;-  getEnv  &#34;CONFIG_DIRS&#34;  let  configDirsList  =  split  &#39;,&#39;  configDirsString  case  nonEmpty  configDirsList  of  Just  nonEmptyConfigDirsList  -&gt;  pure  nonEmptyConfigDirsList  Nothing  -&gt;  throwIO  $  userError  &#34;CONFIG_DIRS cannot be empty&#34; main  ::  IO  () main  =  do  configDirs  &lt;-  getConfigurationDirectories  initializeCache  ( head  configDirs )\n Note that the redundant check in  main is now completely gone! Instead, we perform the check exactly once, in  getConfigurationDirectories. It constructs a  NonEmpty a from a  [a] using the  nonEmpty function from  Data.List.NonEmpty, which has the following type:\n  The  Maybe is still there, but this time, we handle the  Nothing case very early in our program: right in the same place we were already doing the input validation. Once that check has passed, we now have a  NonEmpty FilePath value, which preserves (in the type system!) the knowledge that the list really is non-empty. Put another way, you can think of a value of type  NonEmpty a as being like a value of type  [a], plus a  proof that the list is non-empty.\n By strengthening the type of the argument to  head instead of weakening the type of its result, we\u2019ve completely eliminated all the problems from the previous section:\n The code has no redundant checks, so there can\u2019t be any performance overhead.\n  Furthermore, if  getConfigurationDirectories changes to stop checking that the list is non-empty, its return type must change, too. Consequently,  main will fail to typecheck, alerting us to the problem before we even run the program!\n What\u2019s more, it\u2019s trivial to recover the old behavior of  head from the new one by composing  head with  nonEmpty:\n  Note that the inverse is  not true: there is no way to obtain the new version of  head from the old one. All in all, the second approach is superior on all axes.\n  You may be wondering what the above example has to do with the title of this blog post. After all, we only examined two different ways to validate that a list was non-empty\u2014no parsing in sight. That interpretation isn\u2019t wrong, but I\u2019d like to propose another perspective: in my mind, the difference between validation and parsing lies almost entirely in how information is preserved. Consider the following pair of functions:\n validateNonEmpty  ::  [ a ]  -&gt;  IO  () validateNonEmpty  ( _ : _ )  =  pure  () validateNonEmpty  []  =  throwIO  $  userError  &#34;list cannot be empty&#34; parseNonEmpty  ::  [ a ]  -&gt;  IO  ( NonEmpty  a ) parseNonEmpty  ( x : xs )  =  pure  ( x :| xs ) parseNonEmpty  []  =  throwIO  $  userError  &#34;list cannot be empty&#34;\n These two functions are nearly identical: they check if the provided list is empty, and if it is, they abort the program with an error message. The difference lies entirely in the return type:  validateNonEmpty always returns  (), the type that contains no information, but  parseNonEmpty returns  NonEmpty a, a refinement of the input type that preserves the knowledge gained in the type system. Both of these functions check the same thing, but  parseNonEmpty gives the caller access to the information it learned, while  validateNonEmpty just throws it away.\n These two functions elegantly illustrate two different perspectives on the role of a static type system:  validateNonEmpty obeys the typechecker well enough, but only  parseNonEmpty takes full advantage of it. If you see why  parseNonEmpty is preferable, you understand what I mean by the mantra \u201cparse, don\u2019t validate.\u201d Still, perhaps you are skeptical of  parseNonEmpty\u2019s name. Is it really  parsing anything, or is it merely validating its input and returning a result? While the precise definition of what it means to parse or validate something is debatable, I believe  parseNonEmpty is a bona-fide parser (albeit a particularly simple one).\n Consider: what is a parser? Really, a parser is just a function that consumes less-structured input and produces more-structured output. By its very nature, a parser is a partial function\u2014some values in the domain do not correspond to any value in the range\u2014so all parsers must have some notion of failure. Often, the input to a parser is text, but this is by no means a requirement, and  parseNonEmpty is a perfectly cromulent parser: it parses lists into non-empty lists, signaling failure by terminating the program with an error message.\n Under this flexible definition, parsers are an incredibly powerful tool: they allow discharging checks on input up-front, right on the boundary between a program and the outside world, and once those checks have been performed, they never need to be checked again! Haskellers are well-aware of this power, and they use many different types of parsers on a regular basis:\n The  aeson library provides a  Parser type that can be used to parse JSON data into domain types.\n    Database libraries like  persistent and  postgresql-simple have a mechanism for parsing values held in an external data store.\n  The  servant ecosystem is built around parsing Haskell datatypes from path components, query parameters, HTTP headers, and more.\n The common theme between all these libraries is that they sit on the boundary between your Haskell application and the external world. That world doesn\u2019t speak in product and sum types, but in streams of bytes, so there\u2019s no getting around a need to do some parsing. Doing that parsing up front, before acting on the data, can go a long way toward avoiding many classes of bugs, some of which might even be security vulnerabilities.\n One drawback to this approach of parsing everything up front is that it sometimes requires values be parsed long before they are actually used. In a dynamically-typed language, this can make keeping the parsing and processing logic in sync a little tricky without extensive test coverage, much of which can be laborious to maintain. However, with a static type system, the problem becomes marvelously simple, as demonstrated by the  NonEmpty example above: if the parsing and processing logic go out of sync, the program will fail to even compile.\n  Hopefully, by this point, you are at least somewhat sold on the idea that parsing is preferable to validation, but you may have lingering doubts. Is validation really so bad if the type system is going to force you to do the necessary checks eventually anyway? Maybe the error reporting will be a little bit worse, but a bit of redundant checking can\u2019t hurt, right?\n Unfortunately, it isn\u2019t so simple. Ad-hoc validation leads to a phenomenon that the  language-theoretic security field calls  shotgun parsing. In the 2016 paper,  The Seven Turrets of Babel: A Taxonomy of LangSec Errors and How to Expunge Them, its authors provide the following definition:\n Shotgun parsing is a programming antipattern whereby parsing and input-validating code is mixed with and spread across processing code\u2014throwing a cloud of checks at the input, and hoping, without any systematic justification, that one or another would catch all the \u201cbad\u201d cases.\n  Shotgun parsing necessarily deprives the program of the ability to reject invalid input instead of processing it. Late-discovered errors in an input stream will result in some portion of invalid input having been processed, with the consequence that program state is difficult to accurately predict.\n In other words, a program that does not parse all of its input up front runs the risk of acting upon a valid portion of the input, discovering a different portion is invalid, and suddenly needing to roll back whatever modifications it already executed in order to maintain consistency. Sometimes this is possible\u2014such as rolling back a transaction in an RDBMS\u2014but in general it may not be.\n It may not be immediately apparent what shotgun parsing has to do with validation\u2014after all, if you do all your validation up front, you mitigate the risk of shotgun parsing. The problem is that validation-based approaches make it extremely difficult or impossible to determine if everything was actually validated up front or if some of those so-called \u201cimpossible\u201d cases might actually happen. The entire program must assume that raising an exception anywhere is not only possible, it\u2019s regularly necessary.\n Parsing avoids this problem by stratifying the program into two phases\u2014parsing and execution\u2014where failure due to invalid input can only happen in the first phase. The set of remaining failure modes during execution is minimal by comparison, and they can be handled with the tender care they require.\n  So far, this blog post has been something of a sales pitch. \u201cYou, dear reader, ought to be parsing!\u201d it says, and if I\u2019ve done my job properly, at least some of you are sold. However, even if you understand the \u201cwhat\u201d and the \u201cwhy,\u201d you might not feel especially confident about the \u201chow.\u201d\n  Suppose you are writing a function that accepts a list of tuples representing key-value pairs, and you suddenly realize you aren\u2019t sure what to do if the list has duplicate keys. One solution would be to write a function that asserts there aren\u2019t any duplicates in the list:\n  However, this check is fragile: it\u2019s extremely easy to forget. Because its return value is unused, it can always be omitted, and the code that needs it would still typecheck. A better solution is to choose a data structure that disallows duplicate keys by construction, such as a  Map. Adjust your function\u2019s type signature to accept a  Map instead of a list of tuples, and implement it as you normally would.\n Once you\u2019ve done that, the call site of your new function will likely fail to typecheck, since it is still being passed a list of tuples. If the caller was given the value via one of its arguments, or if it received it from the result of some other function, you can continue updating the type from list to  Map, all the way up the call chain. Eventually, you will either reach the location the value is created, or you\u2019ll find a place where duplicates actually ought to be allowed. At that point, you can insert a call to a modified version of  checkNoDuplicateKeys:\n checkNoDuplicateKeys  ::  ( MonadError  AppError  m ,  Eq  k )  =&gt;  [( k ,  v )]  -&gt;  m  ( Map  k  v )\n Now the check  cannot be omitted, since its result is actually necessary for the program to proceed!\n  Use a data structure that makes illegal states unrepresentable. Model your data using the most precise data structure you reasonably can. If ruling out a particular possibility is too hard using the encoding you are currently using, consider alternate encodings that can express the property you care about more easily. Don\u2019t be afraid to refactor.\n  Push the burden of proof upward as far as possible, but no further. Get your data into the most precise representation you need as quickly as you can. Ideally, this should happen at the boundary of your system, before  any of the data is acted upon.  3\n  If one particular code branch eventually requires a more precise representation of a piece of data, parse the data into the more precise representation as soon as the branch is selected. Use sum types judiciously to allow your datatypes to reflect and adapt to control flow.\n In other words, write functions on the data representation you  wish you had, not the data representation you are given. The design process then becomes an exercise in bridging the gap, often by working from both ends until they meet somewhere in the middle. Don\u2019t be afraid to iteratively adjust parts of the design as you go, since you may learn something new during the refactoring process!\n  Let your datatypes inform your code, don\u2019t let your code control your datatypes. Avoid the temptation to just stick a  Bool in a record somewhere because it\u2019s needed by the function you\u2019re currently writing. Don\u2019t be afraid to refactor code to use the right data representation\u2014the type system will ensure you\u2019ve covered all the places that need changing, and it will likely save you a headache later.\n  Treat functions that return  m () with deep suspicion. Sometimes these are genuinely necessary, as they may perform an imperative effect with no meaningful result, but if the primary purpose of that effect is raising an error, it\u2019s likely there\u2019s a better way.\n  Don\u2019t be afraid to parse data in multiple passes. Avoiding shotgun parsing just means you shouldn\u2019t act on the input data before it\u2019s fully parsed, not that you can\u2019t use some of the inp\n......", "posttime": "2021-06-26 15:53:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u6790,don,\u7c7b\u578b", "title": "\u89e3\u6790\uff0c\u4e0d\u8981\u9a8c\u8bc1\uff082019\uff09 ", "title_en": "Parse, Don't Validate (2019)", "transed": 1, "url": "https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/", "via": "", "real_tags": ["\u89e3\u6790", "don", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "37d4db356ff47f5020924c319f26a3fa.jpg", "infoid": 1068398, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e03\u91cc\u65af\u6258\u5c14\u5728\u53bb\u5e74\u7684\u6280\u672f\u6295\u8d44\u8005\u4e2d\u7279\u522b\u53d7\u6b22\u8fce - \u57282020\u5e74\u768441400\u4e07\u7f8e\u5143\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5730\u65b9\uff0c\u8fd9\u662f\u7b2c\u4e09\u5927U.K.\u7684\u79d1\u6280\u6295\u8d44\u3002\u6839\u636eWhiteCap\u76842019-2020\u751f\u6001\u7cfb\u7edf\u62a5\u544a\uff0c\u8be5\u5e02\u5728\u4f26\u6566\u5916\uff0c\u4f26\u6566\u5883\u5916\u4e5f\u62e5\u6709\u4f26\u6566\u5883\u5916\u6700\u5177\u91d1\u516c\u53f8\u521d\u521b\u516c\u53f8\u3002\n \u8be5\u5e02\u79c1\u8425\u548c\u516c\u5171\u90e8\u95e8\u5b9e\u73b0\u73b0\u4ee3\u5316\u57ce\u5e02\u7684\u52aa\u529b\u5df2\u7ecf\u5e2e\u52a9\u5b83\u5728U.K\u7684\u9876\u7ea7\u667a\u80fd\u57ce\u5e02\u4e2d\u6392\u540d\u3002\uff0c\u5438\u5f15\u4e86\u4e00\u79cd\u6280\u672f\u4f01\u4e1a\u5bb6\u3002\u5b83\u9760\u8fd1\u4f26\u6566\u7684\u610f\u601d\u662f\uff0c\u521b\u59cb\u4eba\u5bfb\u6c42\u66f4\u5b9e\u60e0\u7684\u4f4f\u5bbf\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u540c\u65f6\u8ba9\u4ed6\u4eec\u6316\u6398\u8d44\u672c\u7684\u8d22\u52a1\u8d44\u6e90\u3002\u5e03\u91cc\u65af\u6258\u5c14\u5927\u5b66\u4e5f\u62e5\u6709\u6b27\u6d32\u6700\u5927\u7684\u673a\u5668\u4eba\u90e8\u95e8\u3002\n   \u4f7f\u7528\u6298\u6263\u7801\u54c8\u535a\u5fb7\uff0c\u6bcf\u5e74\u6216\u4e24\u5e74\u989d\u5916\u7684\u7d27\u7f29\u6210\u5458\u8282\u770125\uff05\u3002\u6b64\u4f18\u60e0\u4ec5\u9002\u7528\u4e8eU.K.\u548c\u6b27\u6d32\u7684\u8bfb\u8005\uff0c\u5e76\u4e8e2021\u5e748\u670831\u65e5\u5230\u671f\u3002\n  \u5e03\u91cc\u65af\u6258\u5c14\u4e5f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u542f\u52a8\u52a0\u901f\u5668\uff0c\u5957\u623f\u3002\u52a0\u901f\u5668\u652f\u6301\u4e94\u6240\u6c90\u6d74\u5927\u5b66\uff0c\u5e03\u91cc\u65af\u6258\u5c14\uff0c\u57c3\u514b\u585e\u7279\uff0c\u5357\u5b89\u666e\u987f\u548c\u8428\u91cc\u7684\u5408\u4f5c\u52aa\u529b\u652f\u6301\u8d85\u8fc74,000\u540d\u4f01\u4e1a\u5bb6\uff0c\u5e76\u5e2e\u52a9\u4ed6\u4eec\u7684\u521d\u521b\u516c\u53f8\u7b79\u96c6\u4e8618\u4ebf\u82f1\u9551\u3002\u5176\u4ed6\u542f\u52a8\u652f\u6301\u5458\u5305\u62ec\u65b0\u7684\u79d1\u5b66\u521b\u5efaVC\u57fa\u91d1\uff0c\u7531\u4f01\u4e1a\u5bb6\u54c8\u5229\u65af\u7279\u514b\u5fb7\u514b\u7f57\u514b\uff08Techspark Engine Shed\uff09\u8bbe\u7f6e\u3002\n \u6765\u81ea\u5e03\u91cc\u65af\u6258\u5c14\u7684\u5173\u952e\u65b0\u5174\u521d\u521b\u516c\u53f8\u5305\u62ecGraphCore\uff0c\u5f00\u653e\u4eff\u751f\u5b66\uff0cUltraLeap\uff0c\u6c89\u6d78\u5f0f\u5b9e\u9a8c\u5ba4\u548c\u4e94\u4e2aAI\u3002\n \u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u6280\u672f\u751f\u6001\u7cfb\u7edf\u548c\u8be5\u57ce\u5e02\u7684\u6295\u8d44\u8005\u524d\u666f\uff0c\u6211\u4eec\u8c03\u67e5\u4e86\u57f9\u80b2\u5e03\u91cc\u65af\u6258\u5c14\u521d\u521b\u751f\u6001\u7cfb\u7edf\u7684\u521b\u59cb\u4eba\uff0c\u9886\u5bfc\u548c\u9ad8\u7ba1\u3002\n \u8be5\u8c03\u67e5\u663e\u793a\uff0c\u8be5\u5e02\u62e5\u6709\u5f3a\u5927\u7684\u53ef\u518d\u751f\uff0c\u96f6\u78b3\u548cFintech\u542f\u52a8\u666f\u89c2\u3002\u673a\u5668\u4eba\uff0cVR\uff0cBIO\uff0c\u91cf\u5b50\uff0c\u6570\u5b57\u548c\u6df1\u5ea6\u6280\u672f\u4e5f\u662f\u663e\u793a\u627f\u8bfa\u7684\u9886\u57df\u3002\u81f3\u4e8e\u6295\u8d44\u73b0\u573a\uff0c\u867d\u7136\u5e03\u91cc\u65af\u6258\u5c14\u6709\u4e00\u4e2a\u5065\u5eb7\u7684\u5929\u4f7f\u7f51\u7edc\uff0c\u4f46\u8fd9\u5ea7\u57ce\u5e02\u7f3a\u4e4f\u673a\u6784VC\uff0c\u4f46\u4e0e\u4f26\u6566\u53ea\u6709\u4e00\u4e2a\u9a7e\u9a76\u6216\u706b\u8f66\u9a91\u884c\uff0c\u8fd9\u5e76\u6ca1\u6709\u8bc1\u660e\u662f\u4e00\u4e2a\u91cd\u5927\u95ee\u9898\u3002 \n\u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f Bristol\u5728\u53ef\u518d\u751f\u548c\u96f6\u78b3\u521b\u65b0\uff0cFintech\u548c\u673a\u5668\u4eba\u65b9\u9762\u90fd\u662f\u5f3a\u5927\u7684\u3002\u5b83\u5728\u5de5\u4e1a4.0\u4e2d\u75b2\u8f6f\u3002\n \u8fd9\u662f\u5e03\u91cc\u65af\u6258\u5c14\u6700\u6709\u8da3\u7684\u521d\u521b\u516c\u53f8\uff1f Graphcore\uff0cLettus\u6210\u957f\uff0c\u5f00\u653e\u4eff\u751f\u5b66\uff0cUltraLeap\u548cYellowDog\u3002\n \u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u6211\u8ba4\u4e3a\u5f88\u591a\u5173\u4e8e\u91d1\u878d\u6c14\u7684\u4e13\u6ce8\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u5e03\u91cc\u65af\u6258\u5c14\u662f\u4e00\u4e2a\u5927\u578b\u52a8\u6001\u57ce\u5e02\u4e4b\u95f4\u7684\u4e00\u4e2a\u4f1f\u5927\u7684\u4e2d\u95f4\u5730\u9762\uff08\u52a0\u4e0a\u5b83\u79bb\u4f26\u6566\u4e0d\u8fdc\uff09\u548c\u6f02\u4eae\u7684\u4e61\u6751\u5730\u533a\u3002\u901a\u8fc7\u9065\u63a7\u5de5\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u671f\u5b83\u5c06\u5728\u672a\u6765\u51e0\u5e74\u5185\u5438\u5f15\u65b0\u5c45\u6c11\u3002\n \u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f Aimee Skinner\uff0cAbigail Frear\u548cStuart Harrison\u3002\n \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f U.K.\u521b\u65b0\u7684\u7b2c\u4e8c\u5927\u57ce\u5e02\u3002\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f Bristol\u5728\u5a92\u4f53/\u52a8\u753b\uff0cEdtech\uff0c\u793e\u4f1a\u5f71\u54cd\uff0c\u5065\u5eb7\u548c\u79d1\u5b66\u65b9\u9762\u90fd\u5f88\u5f3a\u5927\u3002\u6211\u6700\u5174\u594b\u7684\u662fEdtech\uff0c\u5e76\u901a\u8fc7\u5728\u7ebf\u5b66\u4e60\u6765\u5b9e\u73b0\u6570\u767e\u4e07\u5b66\u751f\u7684\u53ef\u80fd\u6027\u3002\u5b83\u5728\u786c\u4ef6\u548c\u91d1\u878d\u6c14\u4e2d\u8f83\u5f31\u3002 \n\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u6709\u51e0\u79cd\u975e\u5e38\u6d3b\u8dc3\u7684\u6280\u672f\u6295\u8d44\u7f51\u7edc\u6765\u81ea\u51e0\u4e2a\u89d2\u5ea6\uff0c\u4f8b\u5982\uff0c\u5927\u5b66\u9886\u5bfc\uff0c\u79c1\u4eba\u5929\u4f7f\u7ec4\u548c\u6280\u672f\u5b75\u5316\u5668\u3002\u4f1f\u5927\u7684\u4e8b\u60c5\u662f\u4ed6\u4eec\u90fd\u5728\u53d1\u52a8\u673a\u68da\u548c\u7845\u5ce1\u8c37\u7b49\u4e3e\u63aa\u4e2d\u5408\u4f5c\u548c\u5206\u4eab\u8d44\u6e90\uff0c\u60f3\u6cd5\u548c\u4e13\u4e1a\u77e5\u8bc6\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u8ddd\u79bb\u5e03\u91cc\u65af\u6258\u5c14\u6709\u5de8\u5927\u7684\u57ce\u5e02\u751f\u6d3b\u65b9\u5f0f\uff0c\u8ddd\u79bb\u4e61\u6751\u548c\u897f\u5357/\u5a01\u5c14\u58eb/\u5a01\u5c14\u58eb\u5ea6\u5047\u80dc\u5730\u6709\u7740\u5de8\u5927\u7684\u57ce\u5e02\u751f\u6d3b\u65b9\u5f0f\uff0c\u8ddd\u79bb\u5e02\u4e2d\u5fc3\u670920\u5206\u949f\u8def\u7a0b\u3002\n \u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f\u5e03\u91cc\u65af\u6258\u5c14PE\u4ff1\u4e50\u90e8\u7684Jerry Barnes;\u5728TechSpark\u7684Abby Frear;\u5728\u7f57\u514b\u9a6c\u514b\u65af\u5dde\u7684Briony Phillips; Jack Jordan-Connelly\u5728Setsquared\u3002\n \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u5b83\u6b63\u5728\u8fc5\u901f\u53d1\u5c55\uff0c\u6709\u5f88\u591a\u652f\u6301\uff0c\u56e0\u6b64\u5b83\u5c06\u66f4\u5927\uff0c\u5438\u5f15\u66f4\u591a\u7684\u6295\u8d44\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u56fd\u9645\u821e\u53f0\u4e0a\u6709\u4e94\u5e74\u3002\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f\u6211\u4eec\u7684\u6280\u672f\u751f\u6001\u7cfb\u7edf\u5728\u822a\u7a7a\u822a\u5929\u548c\u56fd\u9632\u90e8\u95e8\u7684\u5f3a\u52b2\u3002\u6211\u4eec\u5174\u594b\u4e8e\u8be5\u90e8\u95e8\u53ef\u7528\u7684\u6570\u5b57\u8f6c\u578b\u673a\u4f1a\u7684\u8303\u56f4\u548c\u89c4\u6a21\u3002\u8fd9\u4e00\u90e8\u95e8\u7684\u4e3b\u8981\u5f31\u70b9\u662f\u8f6c\u578b\u901f\u5ea6\u7f13\u6162\uff0c\u7279\u522b\u662f\u7531\u4e8e\u6d41\u884c\u75c5\u3002\n  \u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u4e0e\u82f1\u56fd\u79d1\u6280\u90e8\u95e8\u7684\u5e73\u5747\u6c34\u5e73\u76f8\u6bd4\uff0c\u5e03\u91cc\u65af\u6258\u5c14\u6709\u4e00\u4e2a\u975e\u5e38\u4f4e\u7684\u6210\u7acb\u516c\u53f8\uff084\uff05\u5bf98\uff05\uff09\uff0c\u79cd\u5b50\u9636\u6bb5\u516c\u53f8\u6bd4\u4f8b\u8f83\u9ad8\uff0842\uff05\u5bf937\uff05\uff09\uff0c\u6b7b\u4ea1\u7387\u8f83\u9ad8\uff0821\uff05\u4e0e17\uff05 \uff05\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u7279\u522b\u5e74\u8f7b\u7684\u751f\u6001\u7cfb\u7edf\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u7531\u4e8e\u8fd0\u8f93\u73af\u8282\uff0c\u5f3a\u5927\u7684\u751f\u6001\u7cfb\u7edf\u548c\u57ce\u5e02\u7f8e\u4e3d\u7684\u7f8e\u4e3d\uff0c\u4eba\u4eec\u642c\u51fa\u4f26\u6566\u7684\u4eba\u4eec\u5c06\u8fdb\u5165\u5e03\u91cc\u65af\u6258\u5c14\u3002 \n\u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u5982\u679c\u5e03\u91cc\u65af\u6258\u5c14\u51fa\u6765\u662f\u6b27\u6d32\u65e7\u91d1\u5c71\u7684\u8bdd\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\uff01\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f Bristol\u5728Medtech\uff0c\u517d\u533b\uff0c\u5de5\u4e1a\u9886\u57df\u662f\u5f3a\u5927\u7684\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u5df2\u7ecf\u642c\u8fdb\u53bb\u4e86\u3002\n  \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u6211\u4eec\u5c06\u5728\u4e94\u5e74\u5185\u770b\u5230\u5927\u89c4\u6a21\u589e\u957f\u3002\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f\u6211\u4eec\u7684\u90e8\u95e8\u5728\u7814\u7a76\u4eba\u5458\u4e4b\u95f4\u7684\u521b\u4e1a\u6c1b\u56f4\u4e2d\u662f\u8584\u5f31\u7684\uff0c\u56e0\u6b64\u6765\u81ea\u9886\u5148\u7684\u5927\u5b66\u7684\u6df1\u5ea6\u79d1\u6280\u7eba\u573a\u6d3b\u52a8\u7684\u4f4e\u5229\u7387\u3002\u6211\u4eec\u6700\u5174\u594b\u7684\u662f\uff0c\u6211\u4eec\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u770b\u5230\u7684\u6d3b\u52a8\u53d8\u5316\u548c\u6587\u5316\u8f6c\u5411\u521b\u65b0\u3002\n  \u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u6d45\u5c42\u79d1\u6280\u4e2d\u7b49\u5f3a\u5ea6;\u76ee\u524d\u6df1\u5165\u5f31\u6280\u672f\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u4eba\u4eec\u6b63\u5728\u642c\u8fdb\u53bb\u3002 \n\u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f\u65cb\u8f6c\u79d1\u5b66\uff0c\u79d1\u5b66\u521b\u9020\u548c\u79d1\u5b66\u5929\u4f7f\u7efc\u5408\u3002\n \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u6df1\u5ea6\u6280\u672f\u4e0e\u6295\u8d44\u7684\u5f53\u5730\u4f01\u4e1a\u5bb6\uff0c\u5b75\u5316\u5668\u548c\u6295\u8d44\u8005\u7fa4\u4f53\u975e\u5e38\u5f3a\u5927\u3002\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f Bristol\u5728\u65e0\u7ebf\uff085G\uff0c60 GHz\u7b49\uff09\u4e2d\u5f3a\u5927\uff0c\u534a\u5bfc\u4f53\uff08\u7279\u522b\u662f\u5904\u7406\u5668\uff0cAI / ML\u548c\u5e76\u884c\u67b6\u6784\uff09\uff0c\u673a\u5668\u4eba\u548c\u5176\u4ed6\u786c\u6280\u672f/\u6df1\u5ea6\u6280\u672f\u3002\n  \u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u5b83\u6709\u9650\u3002\u6709\u4e00\u4e9b\u5929\u4f7f\uff0c\u4f46\u5f88\u5c11\u6709\u96c6\u4e2d\u7684\u8d44\u91d1\u3002\n \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u975e\u5e38\u76f8\u4f3c\uff1a\u4eba\u4eec\u9009\u62e9\u751f\u6d3b\u5728\u5e03\u91cc\u65af\u6258\u5c14/\u6d74\u5ba4\u4ee5\u83b7\u5f97\u751f\u6d3b\u8d28\u91cf\u3002\u5927\u90e8\u5206\u5de5\u4f5c\u5df2\u7ecf\u662f\u5916\u90e8 - \u901a\u52e4\u5230\u4f26\u6566\u3002\n \u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f Nigel Toon\uff0cSimon Knowles\uff0cStan Boland\uff0cDavid May\u548cNick Sturge\u3002\n \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u66f4\u5f3a\u5927\uff0c\u5177\u6709\u66f4\u591a\u5904\u7406\u5668\u548c\u786c\u4ef6\u6d3b\u52a8\u3002 \n\u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f\u5e03\u91cc\u65af\u6258\u5c14\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u673a\u5668\u4eba\uff0c\u822a\u7a7a\u822a\u5929\u548c\u53ef\u518d\u751f\u80fd\u6e90\u3002\u6211\u6700\u5174\u594b\u5730\u4e86\u89e3\u5e03\u91cc\u65af\u6258\u5c14\u822a\u7a7a\u822a\u5929\u7684\u9057\u4ea7\u5982\u4f55\u8f6c\u5316\u4e3a\u672a\u6765\u7684\u884c\u4e1a\u754c\u5b9a\u516c\u53f8\u3002\u751f\u6001\u7cfb\u7edf\u5728\u6295\u8d44\u8005\u65b9\u9762\u8584\u5f31\uff0c\u867d\u7136\u4f26\u6566VCS\u8ddd\u79bb\u4f26\u6566VCS\u5c11\u4e8e\u4e24\u5c0f\u65f6\u7684\u706b\u8f66\u4e4b\u65c5\u3002\n  \u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f\u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f\u6211\u76f8\u4fe1\u5e03\u91cc\u65af\u6258\u5c14\u5c06\u53d8\u5f97\u66f4\u6709\u5438\u5f15\u529b\u3002\n \u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f\u5728UltraLeap\u7684Tom Carter\uff0c\u4ee5\u53ca\u5728\u5f00\u653e\u4eff\u751f\u7684\u4e54\u5c14\u5409\u5e03\u5fb7\u3002\n \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f\u9760\u8fd1\u4f26\u6566\u548c\u5251\u6865\u3002\n  \u54ea\u4e2a\u90e8\u95e8\u662f\u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u5f3a\u52b2\uff1f\u4f60\u6700\u5174\u594b\u7684\u662f\u4ec0\u4e48\uff1f\u5b83\u7f3a\u4e4f\u4ec0\u4e48\uff1f\u5e03\u91cc\u65af\u6258\u5c14\u62e5\u6709\u5f3a\u5927\u7684\u751f\u7269\u6280\u672f\uff0c\u91cf\u5b50\uff0c\u6570\u5b57\uff0c\u79d1\u5b66/\u6df1\u5ea6\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u3002\u6211\u662f\u8fd9\u4e2a\u6298\u8877\u7684\u57ce\u5e02\u5174\u594b\uff0c\u6709\u4ee4\u4eba\u5174\u594b\u7684\u4eba\uff0c\u601d\u8003\u4e0d\u540c\u7684\u4eba\u3002\n \u8fd9\u662f\u5e03\u91cc\u65af\u6258\u5c14\u6700\u6709\u8da3\u7684\u521d\u521b\u516c\u53f8\uff1f\u4efb\u4f55qtec\uff0csetsquared\u6216Unitdx\u6210\u5458\u548c\u6821\u53cb\u3002\n \u5e03\u91cc\u65af\u6258\u5c14\u7684\u79d1\u6280\u6295\u8d44\u8005\u662f\u4ec0\u4e48\uff1f\u4ed6\u4eec\u7684\u7126\u70b9\u662f\u4ec0\u4e48\uff1f\u975e\u5e38\u65e9\u8d77/\u65b0\u751f\uff0c\u5927\u591a\u662f\u5929\u4f7f\u3002 \n\u968f\u7740\u9065\u63a7\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u4f60\u8ba4\u4e3a\u4eba\u4eec\u4f1a\u7559\u5728\u5e03\u91cc\u65af\u6258\u5c14\u6216\u4ed6\u4eec\u4f1a\u642c\u51fa\u53bb\u5417\uff1f \u5176\u4ed6\u4eba\u4f1a\u642c\u8fdb\u53bb\u5417\uff1f \u53ef\u80fd\u642c\u8fdb\u6765\uff01 \u7f8e\u4e3d\u7684\u7eff\u8272\u7a7a\u95f4\uff0c\u5f88\u591a\u6709\u8da3\uff0c\u72ec\u7acb\u7684\u5546\u5e97\u3002 \uff08\u6070\u597d\uff09\u4ece\u4f26\u6566\u901a\u52e4\u3002  \u8c01\u662f\u57ce\u5e02\u7684\u4e3b\u8981\u521b\u4e1a\u4eba\u58eb\uff08\u4f8b\u5982\uff0c\u6295\u8d44\u8005\uff0c\u521b\u59cb\u4eba\uff0c\u5f8b\u5e08\uff0c\u8bbe\u8ba1\u5e08\uff09\uff1f \u5b75\u5316\u5668 -  QTEC\uff0cQTIC\uff0cSetsquared\u548cUnitDX; \u5e03\u91cc\u65af\u6258\u5c14\u79c1\u52df\u80a1\u6743\u4ff1\u4e50\u90e8; Harry DesteCroix\u3002  \u60a8\u8ba4\u4e3a\u8fd9\u5ea7\u57ce\u5e02\u7684\u6280\u672f\u573a\u666f\u5c06\u5728\u4e94\u5e74\u5185\uff1f \u55e1\u55e1\u58f0\u3002 \u66f4\u4f1f\u5927\u7684\u521d\u521b\u516c\u53f8\u548cvcs\u642c\u8fdb\u6765\u3002 ", "note_en": "Bristol proved especially popular among tech investors last year \u2014 local businesses raked in an impressive $414 million in 2020, making it the third-largest U.K. city for tech investment. The city also has the most fintech startups per head in the U.K. outside London, according to  Whitecap\u2019s 2019-2020 Ecosystem Report.\n Efforts by the city\u2019s private and public sectors to modernize the city have helped it rank among the  top smart cities in the U.K., attracting a bevy of tech entrepreneurs. Its proximity to London has meant that it is a good alternative for founders looking for a more affordable stay while letting them tap the capital\u2019s financial resources. The University of Bristol also has the largest robotics department in Europe.\n   Use discount code  HARBOURSIDE to  save 25% off an annual or two-year Extra Crunch membership. This offer is only available to readers in the U.K. and Europe, and expires on August 31, 2021.\n  Bristol is also home to an important startup accelerator,  SETsquared. A collaborative effort by the five universities of Bath, Bristol, Exeter, Southampton and Surrey, the accelerator has supported over 4,000 entrepreneurs and helped their startups raise a total of \u00a31.8 billion. Other startup support players include the new  Science Creates VC fund, set up by entrepreneur  Harry Destecroix,\u00a0and  TechSPARK  Engine Shed.\n Key emerging startups from Bristol include Graphcore, Open Bionics, Ultraleap, Immersive Labs and Five AI.\n To get a better idea of the state of the tech ecosystem and the investor outlook for this city, we surveyed founders, leaders and executives involved in nurturing Bristol\u2019s startup ecosystem.\n The survey revealed that the city has a robust renewable, zero-carbon and fintech startup landscape. Robotics, VR, bio, quantum, digital and deep tech are also areas showing promise. As for the investing scene, although Bristol has a healthy angel network, the city lacks institutional VC, but with London only a drive or train ride away, this has not proved a significant problem.\n     Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Bristol is strong in renewable and zero-carbon innovation, fintech and robotics. It\u2019s weak in industry 4.0.\n Which are the most interesting startups in Bristol? Graphcore, LettUs Grow, Open Bionics, Ultraleap and YellowDog.\n What are the tech investors like in Bristol? What\u2019s their focus? A lot of focus on fintech, I think.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? Bristol is a great middle ground between a large dynamic city (plus it\u2019s not far from London) and access to nice countryside area. With remote working we can expect it will attract new residents in the next few years.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? Aimee Skinner, Abigail Frear and Stuart Harrison.\n Where do you think the city\u2019s tech scene will be in five years? Second major city in U.K. innovation.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Bristol is strong in media/animation, edtech, social impact, health and science. I\u2019m most excited by edtech and the possibility to reach and positively impact millions of students via online learning. It\u2019s weaker in hardware and fintech.\n  What are the tech investors like in Bristol? What\u2019s their focus? There are several very active tech investment networks coming from several angles, e.g., university-led, groups of private angels and tech incubators. The great thing is they all collaborate and share resources, ideas and expertise in initiatives such as The Engine Shed and Silicon Gorge.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? More people are moving in, as Bristol has a great urban lifestyle with easy access to the countryside and Southwest/Wales holiday spots, and an international airport 20 minutes from the center.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? Jerry Barnes at Bristol PE Club; Abby Frear at TechSPARK; Briony Phillips at Rocketmakers; Jack Jordan-Connelly at SETsquared.\n Where do you think the city\u2019s tech scene will be in five years? It\u2019s developing rapidly with lots of support, so it will be bigger, attracting more investment and definitely more on the international scene five years from now.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Our tech ecosystem is strong in the aerospace and defense sector. We are excited by the scope and scale of digital transformation opportunities with AI available in this sector. The main weakness in this sector is the slow pace of transformation, especially now due to the pandemic.\n  What are the tech investors like in Bristol? What\u2019s their focus? Compared to the U.K. tech sector average, Bristol has a  very low proportion of established companies (4% versus 8%), a higher proportion of seed stage companies (42% versus 37%), and a higher death rate (21% versus 17%). It\u2019s a particularly young ecosystem.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? It is possible that people moving out of London will come into Bristol due to the transport links, strong ecosystem and beautiful nature of the city.\n Where do you think the city\u2019s tech scene will be in five years? I wouldn\u2019t be surprised if Bristol turns out to be San Francisco of Europe!\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What does it lack? Bristol is strong in the medtech, veterinary, industrial sectors.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? Others have moved in.\n  Where do you think the city\u2019s tech scene will be in five years? We will see massive growth in five years.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Our sector is weak in entrepreneurial ambition among researchers, and so suffers from low rates of deep tech spinout activity from leading universities. We are most excited by the step change in activity we have seen in the past two years and culture shift towards innovation.\n  What are the tech investors like in Bristol? What\u2019s their focus? Medium strength in shallow tech; currently weak in deep tech.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? People are moving in.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? Spin Up Science, Science Creates and Science Angel Syndicate.\n Where do you think the city\u2019s tech scene will be in five years? Very strong in deep tech with an invested local community of entrepreneurs, incubators and investors.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Bristol is strong in wireless (5G, 60 GHz, etc.), semiconductors (especially processors, AI/ML and parallel architectures), robotics and other hard tech/deep tech.\n  What are the tech investors like in Bristol? What\u2019s their focus? It\u2019s limited. There are some angels, but few locally focused funds.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? Much the same: People choose to live in Bristol/Bath for quality of life. Much of the work is already external \u2014 commuting to London.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? Nigel Toon, Simon Knowles, Stan Boland, David May and Nick Sturge.\n Where do you think the city\u2019s tech scene will be in five years? Much stronger, with more processor and hardware activity.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Bristol has a strong robotics, aerospace and renewables scene. I\u2019m most excited to see how the legacy in aerospace in Bristol will translate to future industry-defining companies. The ecosystem is weak on the investor side, though London VCs are less than a two-hour train journey away.\n  With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? I believe Bristol will become more attractive.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? Tom Carter at Ultraleap, and Joel Gibbard at Open Bionics.\n Where do you think the city\u2019s tech scene will be in five years? Getting closer to London and Cambridge.\n  Which sectors is Bristol\u2019s tech ecosystem strong in? What are you most excited by? What does it lack? Bristol has a strong biotech, quantum, digital, science-based/deep tech ecosystem. I\u2019m excited by this eclectic city with exciting people that think differently.\n Which are the most interesting startups in Bristol? Any QTEC, SETsquared, or UnitDX members and alumni.\n What are the tech investors like in Bristol? What\u2019s their focus? Very early/nascent, mostly angels.\n With the shift to remote working, do you think people will stay in Bristol or will they move out? Will others move in? Probably move in! Beautiful green spaces around, lots of interesting, independent shops. And (just about) commutable from London.\n Who are the key startup people in the city (e.g., investors, founders, lawyers, designers)? The incubators \u2014 QTEC, QTIC, SETsquared and UnitDX; Bristol Private Equity Club; Harry Destecroix.\n Where do you think the city\u2019s tech scene will be in five years? Buzzing. More great startups and VCs moving in.", "posttime": "2021-06-26 15:17:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6df1\u5ea6,leaders,\u6280\u672f", "title": "8\u4e2a\u521b\u59cb\u4eba\uff0c\u9886\u5bfc\u8005\u5f3a\u8c03\u91d1\u878d\u6c14\u548c\u6df1\u5ea6\u6280\u672f\u4f5c\u4e3a\u5e03\u91cc\u65af\u6258\u5c14\u7684\u6700\u9ad8\u9886\u57df ", "title_en": "\n\t\t\t\t8 founders, leaders highlight fintech and deep tech as Bristol\u2019s top sectors\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/25/8-founders-leaders-highlight-fintech-and-deep-tech-as-bristols-top-sectors/", "via": "", "real_tags": ["\u6df1\u5ea6", "leaders", "\u6280\u672f"]}, {"category": "", "categoryclass": "", "imagename": "cee1f3a3eb558739b3986835f4ad6078.jpg", "infoid": 1068397, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\n\u7ed3\u6784\u5316\u6c89\u79ef\u7269\u7684\u5178\u578b\u4f8b\u5b50\u7531\u5927Auk\u7684\u8089\u5934\uff08\u9885\u9aa8\u548c\u5599\uff09\u8868\u793a\uff0c\u4ee5\u53ca\u94f0\u63a5\u5f0f\u725b\u690e\u9aa8\u548c\u5b8c\u6574\u7684\u9676\u5668\uff08\u53ef\u80fd\u662f\u5176\u5185\u5bb9\uff09\u7684\u5b8c\u6574\u9676\u5668\uff0c\u6c89\u79ef\u5728Cnip\u7684\u9a7e\u9a76\u5ba4\u5899\u58c1\u540e\u9762\uff0c\u5728\u5218\u6613\u65af\uff08\u82cf\u683c\u5170\uff09\uff0c\u5728BC\u7b2c\u4e09\u4e16\u7eaa\uff08ARMIT Referenc ARMIT2006\uff1a198\uff06AMP\uff09\u7684\u5efa\u7b51\u8fc7\u7a0b\u4e2d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u201c\u57fa\u91d1\u4f1a\u5b58\u6b3e\u201d\u53ef\u80fd\u5728\u65b0\u5efa\u7b51\u53ca\u5176\u5c45\u6c11\u7684\u5949\u732e\u4e2d\u63d0\u4f9b\u4e86\u4fc3\u8fdb\u4f5c\u7528\u3002 Webley\uff06\uff0339; s\uff08\u53c2\u8003Webley2007\uff09\u5728\u82f1\u56fd\u5357\u90e8\u540e\u671f\u9752\u94dc\u65f6\u4ee3\u5faa\u73af\u9662\u7684\u7814\u7a76\u8868\u660e\uff0c\u5236\u5b9a\u4e86\u7c7b\u4f3c\u7684\u5b58\u6b3e\uff0c\u4ee5\u8868\u793a\u5efa\u7b51\u7269\u7684\u7ec8\u7ed3\uff06\uff0339\u3002\u5706\u5f62\u697c\u5c42\u4f3c\u4e4e\u5df2\u7ecf\u88ab\u5bb6\u5ead\u788e\u7247\u7cbe\u5fc3\u626b\u8fc7\u4e86\uff0c\u63d0\u4f9b\u4e86\u8fdb\u4e00\u6b65\u8bc1\u660e\u67d0\u4e9b\u7269\u54c1\u6545\u610f\u7559\u4e0b\u7684\u3002\u5728\u897f\u5357\u82cf\u683c\u5170\u7684Broxmouth\u7684\u540e\u671f\u94a2\u94c1\u65f6\u4ee3\u6c89\u964d\uff0c\u4f8b\u5982\uff0c\u789f\u5f62\u578b\u6750\u548c\u5185\u58c1\u9762\u7684\u5e95\u5c42\u8bc1\u660e\u4e86\u9891\u7e41\u7684\u626b\u9664\u9020\u6210\u7684\u4fb5\u8680\uff08B\u00fcster\uff06amp; armit\u53c2\u8003b\u00fcster\uff0carmit\uff0carmit\u548cMcKenzie2013;\u56fe1\uff09-A\u4f3c\u4e4e\u5df2\u7ecf\u63d0\u793a\u540e\u7eed\u94fa\u8bbe\u94fa\u780c\u7684\u5730\u677f\u8868\u9762\u3002\n  \u9057\u61be\u7684\u662f\uff0c\u5c06\u8fd9\u79cd\u8bc1\u636e\u6807\u8bb0\u4e3a\u7ed3\u6784\u5316\u5b58\u6b3e\uff0c\u8fd9\u53cd\u8fc7\u6765\u88ab\u7528\u4f5c\u4eea\u5f0f\u884c\u4e3a\u7684\u4ee3\u7406\uff0c\u901a\u5e38\u662f\u89e3\u91ca\u8fc7\u7a0b\u7ed3\u675f\u7684\u5730\u65b9\uff0c\u5e76\u4f7f\u6211\u4eec\u66f4\u63a5\u8fd1\u7406\u89e3\u8fd9\u79cd\u6750\u6599\u6c89\u79ef\u80cc\u540e\u7684\u52a8\u673a\u3002\u8003\u8651\u5230\u66f4\u5e7f\u6cdb\u7684\u201c\u7f13\u5b58\u7269\u4f53\u201d\u8303\u56f4\u5185\u7684\u8fd9\u4e9b\u6c47\u7f16\uff0c\u5e76\u5c06\u81ea\u5df1\u7684\u60c5\u7eea\u4f9d\u604b\u8bc6\u522b\u4e3a\u201c\u4e8b\u7269\u201d\uff08\u4f8b\u5982Bell\uff06amp; Spikins\u53c2\u8003\u94c3\u58f0\u548c\u5c16\u5cf02018\uff09\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u524d\u8fdb\u3002\n \u201c\u7ee7\u7eed\u503a\u5238\u201d\u7406\u8bba\u662f\u7531\u73b0\u4ee3\u4e27\u4eb2\u7814\u7a76\uff08\u4f8b\u5982Klass\u7b49\u4eba\uff09\u5236\u5b9a\u7684\u60b2\u4f24\u7684\u672c\u8d28\u3002\u4f20\u7edf\u65b9\u6cd5\u5f3a\u8c03\u4e86\u5bf9\u6b7b\u8005\u7684\u8131\u79bb\uff08\u5f17\u6d1b\u4f0a\u5fb7\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u3002\u53c2\u8003\u5f17\u6d1b\u4f0a\u5fb7\uff0cStrachey\u548cStrachey1957\uff09\uff0c\u6216\u8005\u65ad\u8a00\u60b2\u4f24\u8fdb\u7a0b\u901a\u8fc7\u4e00\u7cfb\u5217\u5355\u4e00\u7684\u4e00\u7cfb\u5217\u9636\u6bb5\u6765\u6062\u590d\u4e27\u4eb2\u524d\u7684\u5730\u4f4d\uff08Kubler-Ross\u53c2\u8003Kubler-Ross1969; Bownby\u53c2\u8003BowBy1973\uff0c\u53c2\u8003BowBy1980; Worden\u53c2\u8003Worden1991\uff09\u3002\u7136\u800c\uff0c\u60b2\u4f24\u6bd4\u201c\u6062\u590d\u201d\u7684\u7ebf\u6027\u8f68\u8ff9\u66f4\u590d\u6742\uff0c\uff08\u6709\u610f\u8bc6\u6216\u65e0\u610f\u8bc6\u5730\uff09\u4e2a\u4eba\u7ecf\u5e38\u5f62\u6210\u201c\u6301\u7eed\u503a\u5238\u201d\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u7ec8\u8eab\u5173\u7cfb\u6301\u7eed\u5230\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u66f4\u5927\u6216\u66f4\u5c0f\u7684\u5173\u7cfb\uff08 Shuchter\uff06amp; Zisook\u53c2\u8003Shuchter\uff0cZisook\uff0cStroebe\uff0cStroebe\u548cHansson1993\uff1a34;\u4e3a\u4e86\u5728\u8003\u53e4\u80cc\u666f\u4e0b\u5728\u6301\u7eed\u503a\u5238\u7406\u8bba\u4e2d\u7684\u5e94\u7528\uff0c\u8bf7\u53c2\u9605Croucher Reference Croucher2017\uff09\u3002\n \u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u63a2\u8ba8\u4e86\u8003\u53e4\u5b66\u5728\u8ba8\u8bba\u6b7b\u4ea1\uff0c\u6b7b\u4ea1\u548c\u4e27\u4eb2\u7684\u9002\u7528\u6027\uff0c\u533b\u7597\u4fdd\u5065\u4e13\u4e1a\u4eba\u58eb\uff08B\u00fcster\u7b49\u4eba\u53c2\u8003B\u00fcster\uff0c\u559d\u5496\u5561\uff0c\u65e5\u5185\uff0c\u7eff\u8272\u548cFaull2018; Croucher\u7b49\u4eba\u3002\u53c2\u8003\u514b\u529b\uff0cB\u00fcster\uff0c\u65e5\uff0c\u7eff\u8272\uff0cRaynsford\uff0c\u7537\u5b69\u548cFaull2020\uff09\u63ed\u793a\u4e86\u7269\u4f53\u662f\u7ef4\u6301\u6301\u7eed\u503a\u5238\u7684\u6838\u5fc3\uff1a\n \u5f53\u621125\u5c81\u7684\u65f6\u5019\uff0c\u6211\u7684\u5988\u5988\u7a81\u7136\u6b7b\u4e86\uff0c\u5c31\u5728\u5979\u53bb\u4e16\u4e4b\u524d\uff0c\u5979\u4e70\u4e86\u4e00\u5927\u6d74\u7f38[\u9ea6\u82bd\u725b\u5976\u996e\u6599]\uff0c\u5979\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u7ed9\u6211\uff0c\u56e0\u4e3a\u5979\u4e70\u4e86\u4e24\u4e2a\u63d0\u4f9b\u6216\u5176\u4ed6\u4e1c\u897f\uff0c\u6211\u4e0d\u80fd\u6254\u6389\u5b83\u3002\u5b83\u5728\u6a71\u67dc\u91cc\u4e94\u5e74\u4e86\uff01\u5b83\u662f\u575a\u5b9e\u7684\u3002\u4f46\u662f\u56e0\u4e3a\u5979\u4e70\u4e86\u5b83\uff0c\u5b83\u53d8\u5f97\u50cf\u4e00\u4e2a\u4eba\u5de5\u5236\u54c1[...... ......\u6211\u786e\u5b9e\u6254\u6389\u4e86\u5b83\uff0c\u6211\u60f3\u8fd9\u662f\u6211\u901a\u8fc7\u60b2\u4f24\u7684\u8c61\u5f81\uff08\u53c2\u4e0e\u800520\uff0c\u5728B\u00fcster\u7b49\u4eba\u53c2\u8003\u6587\u732eb\u00fcster \uff0c\u8e72\u4f0f\uff0c\u65e5\uff0c\u7eff\u8272\u548cfaull2018\uff1a269\uff09\u3002\n Horlicks-A\u6279\u91cf\u751f\u4ea7\u548c\u5ec9\u4ef7\u7684\u7269\u54c1\uff0c\u7531\u6b7b\u4ea1\u524d\u51e0\u5929\u6536\u8d2d\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u65e5\u5e38\u8d2d\u7269\u65c5\u884c\u7684\u4e00\u90e8\u5206\u662f\u901a\u8fc7\u201c\u793c\u7269\u7ed9\u4e88\u201d\u7684\u884c\u4e3a\uff08\u548c\u65f6\u5e8f\uff09\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u60c5\u7eea\u4e0a\u5145\u7535\u7684\u884c\u4e3a\u4eba\u5de5\u5236\u54c1'\uff1a\u4e24\u4e2a\u751f\u7269\u4e4b\u95f4\u7684\u6700\u540e\u4e00\u4e2a\u7269\u7406\u76f8\u4e92\u4f5c\u7528\u7684\u6750\u6599\u4f53\u73b0\u3002\u5931\u53bb\u7684\u53c2\u4e0e\u8005\u89e3\u91ca\u8bf4\uff0c\u867d\u7136\u4ed6\u4eec\u4e0d\u559c\u6b22Horlicks\uff08\u4e5f\u8bb8\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u6709\u4e0d\u6070\u5f53\u7684\u98df\u7269\uff09\uff0c\u4f46\u4ed6\u4eec\u4e0d\u80fd\u968f\u4fbf\u5730\u5904\u7406\u8fd9\u4e2a\u201c\u4eba\u5de5\u5236\u54c1\u201d\u3002\u8fd9\u4e0d\u518d\u53ea\u662f\u4e00\u7f50\u970d\u6d1b\u514b\u65af\uff1a\u5b83\u5df2\u88ab\u8f6c\u5316\u4e3a\u6df1\u523b\u6709\u95ee\u9898\u7684\u4e1c\u897f\u3002\n \u540c\u6837\u7684\u60c5\u7eea\u4ee5J.Brammer\uff08\u53c2\u8003Brammer2017\uff09\u7684\u8bdd\u6765\u56de\u5e94\uff0c\u5199\u4e0b\u4e86\u6e05\u9664\u5979\u5df2\u6545\u7684\u6bcd\u4eb2\u7684\u8270\u5de8\u4efb\u52a1\uff06\uff0339; \nWarning: Can only detect less than 5000 characters\n\u5728\u4efb\u4f55\u5730\u533a\u6216\u5730\u533a\u7684\u5730\u533a\uff0c\u6d89\u53ca\u575f\u5893\u6316\u6398\u7684\u5730\u533a\u4f20\u7edf\uff0c\u6709\u95ee\u9898\u7684\u4e1c\u897f\u7684\u5904\u7f6e\u53ef\u80fd\u76f8\u5f53\u76f4\u622a\u4e86\u5f53\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u4f34\u968f\u7740\u8eab\u4f53\uff08\u6216\u5176\u6b8b\u4f59\u7269\uff09\u7684\u6c89\u79ef\u3002\u4f46\u662f\u5f53\u6ca1\u6709\u575f\u5893\u5b58\u5165\u5b83\u4eec\u65f6\uff0c\u8fd9\u4e9b\u7269\u4f53\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u4f8b\u5982\uff0c\u53f2\u524d\u82f1\u56fd\u7684\u793e\u533a\u4e2d\u6709\u95ee\u9898\u7684\u4e1c\u897f\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u5176\u4e3b\u8981\u7684\u6b7b\u4ea1\u65b9\u5f0f\u6d89\u53ca\u8eab\u4f53\u7684\u5b8c\u5168\u5206\u6563\u901a\u8fc7\u5f39\u6027\uff1f\u4eba\u7c7b\u4ecd\u7136\u662f\u6709\u65f6\u7eb3\u5165\u7ed3\u6784\u6027\u6c89\u79ef\u7269\u3002\u5728\u5c11\u5e74\u57ce\u5821\u7684\u5751\u4e2d\u88ab\u5207\u5272\u7684\u80a1\u9aa8\u7c98\u5408\u5728\u51f9\u5751\u4e2d\uff0c\u591a\u585e\u7279\uff08\u80a1\u7968\u53c2\u8003\u80a1\u4efd2010\uff1a239\uff09\uff0c\u53ea\u63d0\u4f9b\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd9\u4e9b\u9aa8\u9abc\u80af\u5b9a\u4ee3\u8868\u6b7b\u8005\u7684\u4ee4\u724c\u6b8b\u4f59\uff0c\u4ece\u6563\u843d\u7684\u9057\u9ab8\u4e2d\u6536\u96c6\uff0c\u8fd9\u4e9b\u5c38\u4f53\u7684\u5c38\u4f53\u4ecd\u7136\u662f\u901a\u8fc7\u5f39\u6027\u7684\u5c38\u4f53\uff0c\u4f5c\u4e3a\u9ea6\u80af\u5229\uff08\u53c2\u8003\u9ea6\u80af\u5229\uff0cTarlow\u548cStutz2013\uff1a154\uff09\u7c7b\u4f3c\u5730\u4e89\u8bba\u8fd9\u4e00\u65f6\u671f\u7684\u706b\u846c\u5893\u846c\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0d\u719f\u6089\u7684\uff0c\u53731500\u5e74BC\u5728\u6b27\u6d32\u5927\u90e8\u5206\u6b27\u6d32\u5728\u6b27\u6d32\u7684\u6b27\u6d32\u8de8\u8d8a\u6b27\u6d32\u7684\u8270\u5de8\u7684\u8fdf\u5230\u4ee4\u4eba\u6cae\u4e27\uff0c\u968f\u7740\u6b66\u5668\u56e4\u79ef\u7684\u589e\u52a0\uff0c\u5f80\u5f80\u662f\u7ecf\u5e38\u76f8\u5173\u7684\u6b66\u5668\u56e4\u79ef\u7684\u589e\u52a0\u4e0e\u5b64\u7acb\u7684\u4eba\u4f53\u9aa8\u9abc\u5e76\u653e\u7f6e\u5728\u6c34\u6027\u4e0a\u4e0b\u6587\u4e2d\uff08Fitzpatrick\u53c2\u8003Fitzpatrick\uff0cCunliffe\u548cMiles1984; Bradley\u53c2\u8003Bradley\u548cFagan1996\uff1a306; Barrett\uff06amp; Createrham\u53c2\u8003Barrett\uff0cCenterham\uff0cBarrett\u548cKinnes1988\uff09\u3002\u76f8\u53cd\uff0c\u6b27\u6d32\u5927\u9646\u6b27\u6d32\u5927\u9646\u4e4c\u5c14\u6d85\u83f2\u5c14\u5fb7\uff08\u5e73\u5893\uff09\u5893\u5730\u7684\u51fa\u73b0\uff08C.1050 BC\uff09\u5728\u6cb3\u6d41\u4e2d\u6c89\u79ef\u7269\u4f53\u7684\u6c89\u79ef\u65f6\u6070\u9022\u4ee4\u4eba\u6cae\u4e27\uff08FO\n...... ", "note_en": "Deliberately deposited (or cached) objects are ubiquitous in the archaeological record, yet they are often classified under different categories, such as hoards, structured deposits, grave goods and cenotaph burials, and interpreted according to different criteria. Drawing on contemporary attitudes to death, dying and bereavement, and using later prehistoric Britain as a case study, this article brings the analysis of these objects together within a single interpretive framework, which asserts that much of this material represents the \u2018problematic stuff\u2019 left behind by the dead. This approach forces us to reconsider the traditional boundaries drawn between different aspects of the archaeological record and demonstrates the value that emotion has in our interpretations of past societies.\n    Copyright \u00a9 The Author(s), 2021. Published by Cambridge University Press on behalf of Antiquity Publications Ltd.\n  Various labels are assigned to the deliberately deposited objects recognised in the archaeological record, including hoards, structured deposits and grave goods. Hoards, often comprising metal objects, are usually defined on the basis of their isolated contexts and the perceived quality or quantity of their contents (e.g. Bradley  et al.   Reference Bradley, Haselgrove, Linden and Webley2013: 209). They are traditionally given over to finds specialists. In contrast, grave goods accompanying the dead, inhumed or cremated, lie within the realm of funerary archaeology. Finally, \u2018structured deposition\u2019 is a catch-all term given to objects cached in other contexts, often found on settlement sites, for example, in pits, ditches and buildings (cf. Hill   Reference Hill1995). Although these categories of objects are interpreted as the residue of ritual activity, the nature of such ritual behaviour is understood to be distinct in each case. The high material value of hoards leads to the interpretation of their deposition either for safe keeping or, more often, as propitiatory offerings (Bradley   Reference Bradley and Fagan1996: 305). Meanwhile, our tendency to focus on the human body relegates grave goods to the role of  accompanying the dead, either for use in the afterlife or as dedications by mourners (e.g. Parker Pearson   Reference Parker Pearson1999: 7). Structured deposits\u2014by nature a generic category\u2014have been interpreted in more varied and less specific ways (for an overview, see Garrow   Reference Garrow2012). The addition of descriptive terms to highlight differences in composition and depositional context\u2014for example, deliberate, formal, placed, ritual, selected, special, token (Brudenell &amp; Cooper   Reference Brudenell and Cooper2008: 15\u201316)\u2014adds yet more categories.\n The classification of assemblages described above, based on non-mutually exclusive characteristics, has created unhelpful divisions that hinder our understanding. Structured deposits that include disarticulated human bone, but which are found in settlements, for example, fall outside the focus of mainstream funerary archaeology, while groups of \u2018bodiless objects\u2019 within cemeteries\u2014that is, those objects which appear never to have accompanied the deposition of a body\u2014are frequently categorised as \u2018cenotaphs\u2019 (e.g. Nilsson Stutz &amp; Tarlow   Reference Nilsson Stutz, Tarlow, Tarlow and Nilsson Stutz2013: 6) in recognition of their probable mortuary associations. Such distinctions have served to elevate the presence of the physical remains of the human body over other types of material, and have thus limited the scope of our interpretations (Brudenell &amp; Cooper   Reference Brudenell and Cooper2008: 25\u201329). With this in mind, I discuss these various assemblage classes under the umbrella term \u2018cached object\u2019 (see Archaeological Institute of America  2020).\n Using later prehistoric Britain as a case study, I use contemporary theories of death, dying and bereavement to suggest that cached objects frequently represent the careful deposition of \u2018problematic stuff\u2019 left behind by the dead. This recognition is not intended to identify new types of deposit, nor necessarily to replace existing interpretations, but rather to unite previously divided materials under a common interpretive lens. The objective is to demonstrate that \u2018emotional value\u2019 is a legitimate consideration in our understanding of \u2018cached\u2019 objects in the archaeological record.\n In contrast to the monumental ritual landscapes of the preceding periods, the archaeological record of later prehistoric Britain, from around 1800 BC, is predominantly \u2018domestic\u2019 in character (Br\u00fcck   Reference Br\u00fcck1995: 245). With rare regional exceptions (e.g. the Arras Culture in East Yorkshire and the Aylesford-Swarling Culture in south-east England; Stead   Reference Stead1991; Fitzpatrick   Reference Fitzpatrick2007), visible normative burial rites and dedicated funerary monuments are rare (see Harding   Reference Harding2016). There are few formal cemeteries from this period and human remains are elusive. If recovered at all, bones are usually isolated and frequently deposited in settlement contexts (Br\u00fcck   Reference Br\u00fcck1995; Armit   Reference Armit, Bradbury and Scarre2017). Indeed, it seems likely that most of the dead were excarnated\u2014defleshed and disarticulated by natural or artificial means (Carr &amp; Kn\u00fcsel   Reference Carr, Kn\u00fcsel, Gwilt and Haselgrove1997)\u2014rather than interred in graves. At this time settlements became the focus of ritual activity, and the artefacts we find on such sites probably represent selective deposition, rather than the product of casual loss and discard (e.g. Hill   Reference Hill1995; Bradley   Reference Bradley2005: 33 &amp; 208\u2013209).\n This selectivity is indicated by the unusual distributions of artefacts on later prehistoric settlements in Britain, and the frequent occurrence of \u2018structured deposits\u2019: a catch-all term for caches of objects and animal bones (and occasionally human remains; Br\u00fcck   Reference Br\u00fcck1995; Armit   Reference Armit, Bradbury and Scarre2017) that were carefully selected and deposited in specific places (e.g. in ditch terminals, roundhouse entrance postholes, pits) at specific times. The term was originally coined in reference to an apparent patterning in the deposition of objects (such as pottery, bone and flint) at Neolithic ritual monuments (Richards &amp; Thomas   Reference Richards, Thomas, Bradley and Gardiner1984), but has since been adopted more widely to describe a variety of cached objects on domestic sites (e.g. Hill   Reference Hill1995).\n A typical example of a structured deposit is represented by the fleshed head (cranium and beak) of a great auk, along with articulated cattle vertebrae and a complete pottery vessel (possibly with its contents), deposited behind the wall of a wheelhouse at Cnip, on Lewis (Scotland), during its construction in the third century BC (Armit   Reference Armit2006: 198 &amp; 220\u201321). In this instance, this \u2018foundation deposit\u2019 presumably served a propitiatory role in the dedication of the new building and its inhabitants. Webley&#39;s (  Reference Webley2007) study of Late Bronze Age roundhouses in southern England demonstrates that similar deposits were made to signify the end of a building&#39;s life. Roundhouse floors appear to have been meticulously swept clean of domestic debris, providing further evidence that certain objects were deliberately left behind. At the Late Iron Age settlement at Broxmouth in south-east Scotland, for example, dished floor profiles and the undercutting of inner wall-faces attest to the erosion caused by frequent sweeping-out (B\u00fcster &amp; Armit   Reference B\u00fcster, Armit, Armit and McKenzie2013;  Figure 1)\u2014a process that appears to have prompted the subsequent laying of paved floor surfaces.\n  Unfortunately, the labelling of such evidence as structured deposits, which in turn is used as a proxy for ritual behaviour, is often where the interpretive process ends, and brings us no closer to understanding the motives behind the deposition of this material. Considering these assemblages within a broader spectrum of \u2018cached objects\u2019 and recognising our own emotional attachment to \u2018things\u2019 (e.g. Bell &amp; Spikins   Reference Bell and Spikins2018) may, however, help us to move forward.\n \u2018Continuing bonds\u2019 theory was developed by modern bereavement studies (e.g. Klass  et al.   Reference Klass, Silverman and Nickman1996; Walter   Reference Walter1996; Stroebe  et al.   Reference Stroebe, Abakoumkin, Stroebe and Schut2012), growing out of a dissatisfaction with common perceptions of the nature of grief. Traditional approaches emphasised the need for detachment from the deceased (Freud trans.   Reference Freud, Strachey and Strachey1957), or asserted that the grieving process progressed through a unilinear series of stages towards the restoration of a pre-bereavement status quo (Kubler-Ross   Reference Kubler-Ross1969; Bowlby   Reference Bowlby1973,   Reference Bowlby1980; Worden   Reference Worden1991). Grief, however, is far more complex than a linear trajectory of \u2018recovery\u2019, and (consciously or unconsciously) individuals often form \u2018continuing bonds\u2019 with the dead\u2014new types of relationships that endure to a greater or lesser extent throughout their lives (Shuchter &amp; Zisook   Reference Shuchter, Zisook, Stroebe, Stroebe and Hansson1993: 34; for the application of continuing bonds theory in an archaeological context, see Croucher   Reference Croucher2017).\n A recent study exploring the applicability of archaeology in discussions of death, dying and bereavement with healthcare professionals (B\u00fcster  et al.   Reference B\u00fcster, Croucher, Dayes, Green and Faull2018; Croucher  et al.   Reference Croucher, B\u00fcster, Dayes, Green, Raynsford, Boyes and Faull2020) reveals that objects are central to the maintenance of continuing bonds:\n my mum died very suddenly when I was 25 [\u2026] and just before she died, she&#39;d bought a big tub of Horlicks [a malted-milk drink powder] which she gave to me for some reason, because she bought two on offer or something, and I could not throw this away. It was in the cupboard for five years! And it was solid. But because she&#39;d bought it, it became like an artefact [\u2026] I did throw it away in the end, I suppose it was a symbol of my getting through the grief (participant 20, in B\u00fcster  et al.   Reference B\u00fcster, Croucher, Dayes, Green and Faull2018: 269).\n The jar of Horlicks\u2014a mass-produced and inexpensive item, acquired by the deceased only days before their death as part of a routine shopping trip\u2014was transformed through the act (and timing) of \u2018gift-giving\u2019 into an emotionally charged \u2018artefact\u2019: the material embodiment of the last physical interaction between two living individuals. The bereaved participant explained that, although they did not like Horlicks (and perhaps it would have felt inappropriate to consume it in any case), they could not casually dispose of this \u2018artefact\u2019. This was no longer  just a jar of Horlicks: it had been transformed into something deeply problematic.\n The same sentiments are echoed in the words of J. Brammer (  Reference Brammer2017), writing about the difficult task of clearing out her late mother&#39;s house:\n So, when is a doily not a doily? When it goes from being one of my mother&#39;s kitsch furniture accessories when she was alive, into a sacred reminder of her homeliness now that she&#39;s gone [\u2026] The significance of the doilies and anything she had touched, grew overnight [\u2026] I decided to honour her by framing and hanging them so her story could be woven into the walls of my home.\n Here we see previously old-fashioned and \u2018unnecessary\u2019 ephemera taking on new meanings and becoming problematic, not because of their material or aesthetic value, but because of their mnemonic power. If we accept the possibility for emotional attachment to even the most mundane objects, then, as Brudenell and Cooper (  Reference Brudenell and Cooper2008: 24) point out, \u201c any attempt to define rigid criteria for identifying \u2018special\u2019 deposits may ultimately miss the point\u201d.\n There are many examples in the archaeological record of attempts to maintain continuing bonds with the dead, not least in the erection of large funerary monuments that served as mnemonic devices for the living. Equally visible, particularly as structured deposits, but perhaps as yet unrecognised, is the disposal of the problematic stuff that bound the living and the dead together: material that was too entwined with the social identity of the dead to be reused by the living, yet too symbolically charged for casual discard as part of normal processes of waste management.\n The material value of certain artefacts has long been recognised, as signified, for example, through cultural preferences for particular raw materials, the time and skill involved in the manufacture of certain objects, or their rare and exotic nature. It is this form of value that is often prioritised in our understanding and categorisation of hoards. Increasingly, however, materiality (e.g. Meskell   Reference Meskell2005) and biographical (e.g. Gosden &amp; Marshall   Reference Gosden and Marshall1999; Joy   Reference Joy2009) approaches to the study of artefacts have also championed the symbolic value that certain objects may have possessed as material manifestations of distant lands, the product of technological transformations or their embodiment of other (intangible) properties. Interpretations of this nature often influence our understandings of grave goods. But recognition of problematic stuff as a legitimate and powerful response to even the most mundane objects, such as the aforementioned jar of Horlicks, dictates that we include another important value category in our discussion and interpretation: emotion ( Figure 2). It is through this lens that we might better understand the ritual behaviours that led to the caching of objects in the archaeological record. It is, of course, not necessarily the case that any object chosen for or warranting deposition in a controlled and structured way embodies a single value category. Indeed, once such artefacts are brought together, the resulting assemblages will themselves take on new meanings. But it is important to recognise the raw emotional power that everyday objects can acquire at certain times and places.\n In the few areas of Iron Age Britain where a normative visible burial rite exists, bodies are often associated with artefacts (grave goods). The inhumations and chariot burials of the Arras Culture of East Yorkshire, for example, contain some of the most spectacular objects known from this period, including brooches featuring enamel and coral inlay, and elaborate necklaces of glass and amber (Giles   Reference Giles2012). Many of these items presumably belonged to the deceased, or were sufficiently entwined with their social identity to necessitate removal from circulation upon their death.\n Yet, it is not just those items worn on the body that can assume problematic status. We must also consider other categories of artefact ( Figure 3). Objects also become problematic through their association  with the dead body, via, for example, their use in post-mortem care and mortuary rites. This category of object may well be represented by the toilet instruments (e.g. tweezers, nail cleaners and ear scoops) found in graves at Mill Hill (Deal), King Harry Lane (St Albans) and Biddenham Loop (near Bedford) in southern England, and at Arras and Wetwang Slack in East Yorkshire (Harding   Reference Harding2016: 179\u201380), as well as in later prehistoric graves on the Continent (Fontijn   Reference Fontijn2002: 200\u2013201). Notably, these objects have also been recovered from structured deposits in regions in which formal graves are absent: the nail-cleaner built into the wall of \u2018Hut II\u2019 at Hownam Rings in the Scottish Borders (Piggott   Reference Piggott1948: 211) represents one such example. Then come the items owned by the deceased: objects such as those represented in the modern-day quotations presented above. Analogies for these different categories of object have precedence elsewhere. In the medieval Christian church, for example, relics could comprise the physical remains of a saint&#39;s body (\u2018first class\u2019), objects owned or used by a saint (\u2018second class\u2019), or objects that had touched a first- or second-class relic (\u2018third-class\u2019) (Jestice   Reference Jestice and Jestice2004: 887).\n  We could also add an additional tier of problematic stuff: the artefacts associated with the past lives of those still living, such as previous social states transcended through certain rites of passage, or objects that represent \u201cthe paraphernalia of a specific kind of personhood\u201d (Fontijn   Reference Fontijn2002: 217). In a modern context, this might manifest itself in the reluctance of parents, for example, to dispose of the infant clothes of grown-up children, with one social media user lamenting that \u201cI have a bag for charity and a bag called \u2018I&#39;m not ready to let go yet\u2019\u201d. Other examples might include the retention by adults of teenage clothes that no longer fit or are no longer fashionable, or of cassette tapes that can no longer be played. While such phenomena will be difficult to recognise in the archaeological record, they might be glimpsed, for example, in the inclusion of worn-out objects or miniatures in (adult) graves. Miniature items are often interpreted as \u2018votives\u2019 (e.g. Green   Reference Green1987). Using a different interpretive lens, however, there is no reason to discount the possibility that such objects might represent a cherished childhood toy, such as the diminutive sword in its wooden scabbard found in the grave of two adults at the Roman cemetery of Cranmer House, Canterbury (Bennett   Reference Bennett, Frere, Bennett, Rady and Stow1987: 66). Problematic stuff might also be evidenced by the inclusion of adult-sized objects in children&#39;s graves; that is, objects\u2014such as the three copper rings interred with a child at Barrow Hills in Oxfordshire (Br\u00fcck   Reference Br\u00fcck2004: 314)\u2014that were destined for individuals who did not live long enough to wear them.\n In any region or period with mortuary traditions that involved the digging of graves, the disposal of problematic stuff would potentially have been fairly straightforward, as it could have accompanied the deposition of the body (or its remnants). But what happened to these objects when there was no grave in which to deposit them? What happened to problematic stuff in the communities of later prehistoric Britain, for example, whose predominant mode of disposal of the dead involved the complete dispersal of the body through excarnation? Human remains are themselves sometimes incorporated into structured deposits. The femur interred with a weaving comb and copper alloy fibula in a pit at Maiden Castle, Dorset (Sharples   Reference Sharples2010: 239), provides just one example. These bones surely represent \u2018token\u2019 remnants of the deceased, collected from the scattered remains of bodies that had been defleshed and disarticulated through excarnation, as McKinley (  Reference McKinley, Tarlow and Stutz2013: 154) similarly argues for cremation graves of this period. With this in mind, it is perhaps unsurprising that a downturn in the construction of barrows, and the associated interment of bodies and grave goods, across much of Europe after 1500 BC coincides with an increase in the deposition of weapon hoards, which are frequently associated with isolated human bones and placed in watery contexts (Fitzpatrick   Reference Fitzpatrick, Cunliffe and Miles1984; Bradley   Reference Bradley and Fagan1996: 306; Barrett &amp; Needham   Reference Barrett, Needham, Barrett and Kinnes1988). Conversely, the emergence of large Urnfield (flat grave) cemeteries across continental Europe in the Late Bronze Age ( c. 1050 BC) coincides with a downturn in the deposition of objects in rivers (Fo\n......", "posttime": "2021-06-26 15:10:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f13\u5b58,stuff,\u53c2\u8003", "title": "'\u6709\u95ee\u9898\u7684\u4e1c\u897f'\uff1a\u6b7b\u4ea1\uff0c\u8bb0\u5fc6\u548c\u7f13\u5b58\u5bf9\u8c61\u7684\u89e3\u91ca ", "title_en": "\u2018Problematic stuff\u2019: death, memory and the interpretation of cached objects", "transed": 1, "url": "https://www.cambridge.org/core/journals/antiquity/article/problematic-stuff-death-memory-and-the-interpretation-of-cached-objects/FEFB14E4C357F336710BA78CF27048AF", "via": "", "real_tags": ["\u7f13\u5b58", "stuff", "\u53c2\u8003"]}, {"category": "", "categoryclass": "", "imagename": "75a9cc1b6393d9a1e22cbfa337298e13.png", "infoid": 1068396, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528\u903b\u8f91\u65f6\u95f4\u6233\u4f5c\u4e3a\u503c\u7684\u7248\u672c\uff0c\u4ee5\u5141\u8bb8\u8de8\u670d\u52a1\u5668\u6392\u5e8f\u503c\n  \u5f53\u5b58\u50a8\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u7684\u503c\u65f6\uff0c\u9700\u8981\u4e00\u79cd\u4e86\u89e3\u5728\u53e6\u4e00\u4e2a\u4e4b\u524d\u5b58\u50a8\u7684\u503c\u5b58\u50a8\u7684\u65b9\u5f0f\u3002\u65e0\u6cd5\u4f7f\u7528\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u56e0\u4e3a\u58c1\u65f6\u949f\u4e0d\u662f\u4e24\u4e2a\u4e0d\u540c\u670d\u52a1\u5668\u7684\u5355\u8c03\u548c\u65f6\u949f\u503c\u4e0d\u5e94\u8fdb\u884c\u6bd4\u8f83\u3002\n \u8868\u793a\u5f53\u5929\u65f6\u95f4\u7684\u7cfb\u7edf\u65f6\u95f4\u6233\u7531\u901a\u5e38\u7528\u6676\u4f53\u632f\u8361\u5668\u6784\u5efa\u7684\u65f6\u949f\u673a\u68b0\u6d4b\u91cf\u3002\u8fd9\u79cd\u673a\u5236\u7684\u5df2\u77e5\u95ee\u9898\u662f\uff0c\u57fa\u4e8e\u6676\u4f53\u632f\u8361\u7684\u5feb\u901f\u6216\u6162\u901f\uff0c\u5b83\u53ef\u4ee5\u8fdc\u79bb\u5f53\u5929\u7684\u5b9e\u9645\u65f6\u95f4\u3002\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u8ba1\u7b97\u673a\u901a\u5e38\u5177\u6709\u50cfNTP\u8fd9\u6837\u7684\u670d\u52a1\uff0c\u5b83\u540c\u6b65\u4e92\u8054\u7f51\u4e0a\u5177\u6709\u4f17\u6240\u5468\u77e5\u7684\u65f6\u95f4\u6e90\u7684\u8ba1\u7b97\u673a\u65f6\u949f\u3002\u56e0\u6b64\uff0c\u7ed9\u5b9a\u670d\u52a1\u5668\u4e0a\u7cfb\u7edf\u65f6\u95f4\u7684\u4e24\u4e2a\u8fde\u7eed\u8bfb\u6570\u53ef\u4ee5\u6709\u65f6\u95f4\u5012\u9000\u3002\n \u7531\u4e8e\u8de8\u670d\u52a1\u5668\u7684\u65f6\u949f\u6f02\u79fb\u6ca1\u6709\u4e0a\u9650\uff0c\u56e0\u6b64\u65e0\u6cd5\u6bd4\u8f83\u4e24\u4e2a\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u95f4\u6233\n mvccstore mvccstore; Lamportclock\u65f6\u949f;\u516c\u5171\u670d\u52a1\u5668\uff08mvccstore mvccstore\uff09{this.clock =\u65b0\u7684Lamportclock\uff081\uff09;\u8fd9\u4e2a.mvccstore = mvccstore; }\n \u6bcf\u5f53\u670d\u52a1\u5668\u6267\u884c\u4efb\u4f55\u5199\u5165\u64cd\u4f5c\u65f6\uff0c\u5b83\u5e94\u8be5\u4f7f\u7528`tick\uff08\uff09`\u65b9\u6cd5\u524d\u8fdbLAMPORT\u65f6\u949f\n   \u8fd9\u6837\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u786e\u5b9a\u5728\u8bf7\u6c42\u4e4b\u540e\u6309\u4e0b\u5199\u5165\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u4e4b\u540e\u670d\u52a1\u5668\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u7531\u5ba2\u6237\u542f\u52a8\u3002\u670d\u52a1\u5668\u8fd4\u56de\u7528\u4e8e\u5c06\u503c\u5199\u5165\u5ba2\u6237\u7aef\u7684\u65f6\u95f4\u6233\u3002\u7136\u540e\uff0c\u8bf7\u6c42\u5ba2\u6237\u7aef\u4f7f\u7528\u6b64\u65f6\u95f4\u6233\u5bf9\u5176\u4ed6\u670d\u52a1\u5668\u8fdb\u884c\u4efb\u4f55\u8fdb\u4e00\u6b65\u5199\u5165\u3002\u8fd9\u6837\uff0c\u7ef4\u6301\u8bf7\u6c42\u7684\u56e0\u679c\u94fe\u3002 \n\u8003\u8651\u4f7f\u7528\u591a\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u7684\u7b80\u5355\u952e\u503c\u5b58\u50a8\u7684\u793a\u4f8b\u3002\u6709\u4e24\u4e2a\u670d\u52a1\u5668\uff0c\u84dd\u8272\u548c\u7eff\u8272\u3002\u6bcf\u4e2a\u670d\u52a1\u5668\u90fd\u8d1f\u8d23\u5b58\u50a8\u7279\u5b9a\u7684\u952e\u7ec4\u3002\u5f53\u6570\u636e\u5728\u4e00\u7ec4\u670d\u52a1\u5668\u4e0a\u5212\u5206\u6570\u636e\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u65b9\u6848\u3002\u4f7f\u7528LAMPORT\u65f6\u95f4\u6233\u4f5c\u4e3a\u7248\u672c\u53f7\u5b58\u50a8\u4e3a\u7248\u672c\u503c\u7684\u503c\u3002\n   \u63a5\u6536\u670d\u52a1\u5668\u5bf9\u5176\u81ea\u5df1\u7684\u65f6\u95f4\u6233\u8fdb\u884c\u6bd4\u8f83\u548c\u66f4\u65b0\u5e76\u4f7f\u7528\u5b83\u6765\u7f16\u5199\u7248\u672c\u5316\u7684\u952e\u503c\u3002 public int write\uff08string key\uff0cstring\u503c\uff0cint equestimestamp\uff09{//\u66f4\u65b0\u81ea\u5df1\u7684\u65f6\u949f\u6765\u53cd\u6620\u56e0\u679c\u5173\u7cfbint writeattimestamp = clock.tick\uff08equestTimestamp\uff09; mvccstore.put\uff08\u65b0\u7248\u672c\u7684key\uff08key\uff0cwriteattimestamp\uff09\uff0c\u503c\uff09;\u8fd4\u56dewriteattimestamp; }\n \u7528\u4e8e\u5199\u5165\u8be5\u503c\u7684\u65f6\u95f4\u6233\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u901a\u8fc7\u66f4\u65b0\u81ea\u5df1\u7684\u65f6\u95f4\u6233\u6765\u8ddf\u8e2a\u6700\u5927\u65f6\u95f4\u6233\u3002\u5b83\u4f7f\u7528\u6b64\u65f6\u95f4\u6233\u6765\u53d1\u51fa\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u5199\u5165\u3002\n  Lamportclock\u65f6\u949f=\u65b0\u7684Lamportclock\uff081\uff09; public void write\uff08\uff09{int server1writtenat = server1.write\uff08\uff06\uff0334;\u59d3\u540d\uff06\uff0334;\uff06\uff0334; alice\uff06\uff0334;\uff0cclock.getlatesttime\uff08\uff09\uff09; clock.updateto\uff08server1writtenat\uff09; int server2writtenat = server2.write\uff08\uff06\uff0334;\u6807\u9898\uff06\uff0334; servervices\uff06\uff0334;\uff0cclock.getlatesttime\uff08\uff09\uff09; clock.updateto\uff08server2writtenat\uff09; asserttrue\uff08server2writtenat\uff06gt; server1writtenat\uff09; }\n    \u5373\u4f7f\u5ba2\u6237\u7aef\u4e0e\u5e26\u6709\u9886\u5bfc\u8005\u548c\u8ffd\u968f\u8005\u7ec4\u7684\u9886\u5bfc\u8005\u901a\u4fe1\u7684\u5f53\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u6709\u76f8\u540c\u7684\u6280\u672f\u4e5f\u9002\u7528\u4e8e\u7279\u5b9a\u952e\u3002\u5ba2\u6237\u5411\u672c\u96c6\u56e2\u7684\u9886\u5bfc\u8005\u53d1\u9001\u8bf7\u6c42\uff0c\u5982\u4e0a\u6240\u8ff0\u3002 LAMPORT\u65f6\u949f\u5b9e\u4f8b\u7531\u8be5\u7ec4\u7684\u9886\u5bfc\u8005\u7ef4\u62a4\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u65b0\u4e0e\u4e0a\u4e00\u8282\u4e2d\u8ba8\u8bba\u7684\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u3002\n Lamport\u65f6\u949f\u5b58\u50a8\u7684\u503c\u4ec5\u90e8\u5206\u6392\u5e8f\u3002\u5982\u679c\u4e24\u4e2a\u5ba2\u6237\u7aef\u5b58\u50a8\u4e24\u4e2a\u5355\u72ec\u7684\u670d\u52a1\u5668\u4e2d\u7684\u503c\uff0c\u5219\u65f6\u95f4\u6233\u503c\u4e0d\u80fd\u7528\u4e8e\u5728\u670d\u52a1\u5668\u4e0a\u6392\u5e8f\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0cBob\u4e0a\u7684Bob\u5b58\u50a8\u7684\u6807\u9898\u5728\u65f6\u95f4\u62332\u5904\u3002\u4f46\u662f\u5982\u679cBob\u5b58\u50a8\u5728Alice\u4e0a\u6216\u5728Server Blue\u4e0a\u7684\u540d\u79f0\u4e2d\u5b58\u50a8\u4e86\u540d\u79f0\u4e4b\u540e\uff0c\u5219\u65e0\u6cd5\u786e\u5b9a\u3002\n \u5bf9\u4e8e\u5355\u4e2a\u9886\u5bfc\u8005 - \u8ddf\u968f\u670d\u52a1\u5668\u7ec4\uff0c\u5176\u4e2d\u4e00\u4e2a\u9886\u5bfc\u8005\u603b\u662f\u8d1f\u8d23\u5b58\u50a8\u503c\uff0c\u7248\u672c\u5316\u503c\u4e2d\u8ba8\u8bba\u7684\u57fa\u672c\u5b9e\u73b0\u8db3\u4ee5\u7ef4\u62a4\u56e0\u679c\u5173\u7cfb\u3002 \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u952e\u503c\u5b58\u50a8\u53ef\u4ee5\u4fdd\u7559\u6574\u6570\u7b26\u53f7\u3002 \u6bcf\u6b21\u4ece\u5199\u5bfc\u5411\u65e5\u5fd7\u5e94\u7528\u952e\u503c\u5199\u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u9012\u589e\u7248\u672c\u8ba1\u6570\u5668\u3002 \u7136\u540e\u5b83\u7528\u9012\u589e\u7248\u672c\u8ba1\u6570\u5668\u6784\u9020\u65b0\u5bc6\u94a5\u3002 \u53ea\u6709\u9886\u5bfc\u8005\u8d1f\u8d23\u9012\u589e\u7248\u672c\u8ba1\u6570\u5668\uff0c\u8ffd\u968f\u8005\u4f7f\u7528\u76f8\u540c\u7684\u7248\u672c\u53f7\u3002  int\u7248\u672c= 0; mvccstore mvccstore = new mvccstore\uff08\uff09; @Override\u516c\u5171\u5b8c\u6210\u80a5\u6599\uff06lt;\u54cd\u5e94\uff06gt; \u653e\uff08\u5b57\u7b26\u4e32\u952e\uff0c\u5b57\u7b26\u4e32\u503c\uff09{return server.propose\uff08new setvalueCommand\uff08key\uff0cvalue\uff09\uff09; \u79c1\u4eba\u54cd\u5e94applysetvaluecommand\uff08setvaluecommand setvaluecommand\uff09{getlogger\uff08\uff09\u3002\u4fe1\u606f\uff08\uff06\uff0334;\u8bbe\u7f6e\u952e\u503c\uff06\uff0334; + setvalueCommand\uff09; \u7248\u672c=\u7248\u672c+ 1; mvccstore.put\uff08\u65b0\u7248\u672c\u7684key\uff08setvaluecommand.getkey\uff08\uff09\uff0c\u7248\u672c\uff09\uff0csetvaluecommand.getValue\uff08\uff09\uff09; \u54cd\u5e94\u54cd\u5e94= response.success\uff08\u7248\u672c\uff09; \u56de\u590d\u54cd\u5e94; }  \u6570\u636e\u5e93\u5982[MongoDB]\u548c[\u87d1\u8782]\u4f7f\u7528Lamport\u65f6\u949f\u7684\u53d8\u578b\u6765\u5b9e\u73b0[MVCC]\u5b58\u50a8 ", "note_en": "Use logical timestamps as a version for a value to allow ordering of values across servers\n  When values are stored across multiple servers, there needs to be a way to know which values were stored before the other. The system timestamp can not be used, because  wall clocks are not monotonic and clock values from two different servers should not be compared.\n The system timestamp, which represents the time of the day, is measured by a clock machinery generally built with an crystal oscillator. The known problem with this mechanism is that it can drift away from the actual time of the day, based on how fast or slow the crystals oscillate. To fix this, computers typically have a service like  NTP which synchronizes computer clocks with well known time sources on the internet. Because of this, two consecutive readings of the system time on a given server can have time going backwards.\n As there is no upper bound on clock drift across servers, it is impossible to compare timestamps on two different servers\n MVCCStore mvccStore; LamportClock clock; public Server(MVCCStore mvccStore) { this.clock = new LamportClock(1); this.mvccStore = mvccStore; }\n Whenever a server carries out any write operation, it should advance the Lamport Clock, using the `tick()` method\n   This way, the server can be sure that the write is sequenced after the request and after any other action the server has carried out since the request was initiated by the client. The server returns the timestamp that was used for writing the value to the client. The requesting client then uses this timestamp to issue any further writes to other set of servers. This way, the causal chain of requests is maintained.\n  Consider an example of a simple key value store with multiple server nodes. There are two servers, Blue and Green. Each server is responsible for storing a specific set of keys. This is a typical scenario when data is partitioned across a set of servers. Values are stored as  Versioned Value with the Lamport Timestamp as a version number.\n   The receiving server compares and updates its own timestamp and uses it to write a versioned key value.   public int write(String key, String value, int requestTimestamp) { //update own clock to reflect causality  int writeAtTimestamp = clock.tick(requestTimestamp); mvccStore.put(new VersionedKey(key, writeAtTimestamp), value); return writeAtTimestamp; }\n The timestamp used for writing the value is returned to the client. The client keeps track of the maximum timestamp, by updating its own timestamp. It uses this timestamp to issue any further writes.\n  LamportClock clock = new LamportClock(1); public void write() { int server1WrittenAt = server1.write(&#34;name&#34;, &#34;Alice&#34;, clock.getLatestTime()); clock.updateTo(server1WrittenAt); int server2WrittenAt = server2.write(&#34;title&#34;, &#34;Microservices&#34;, clock.getLatestTime()); clock.updateTo(server2WrittenAt); assertTrue(server2WrittenAt &gt; server1WrittenAt); }\n    The same technique works even when the client is communicating with a leader with  Leader and Followers groups, with each group responsible for specific keys. The client sends requests to the leader of the group as detailed above. The Lamport Clock instance is maintained by the leader of the group, and is updated exactly the same way as discussed in the previous section.\n The values stored by Lamport Clock are only  partially ordered. If two clients store values in two separate servers, the timestamp values cannot be used to order the values across servers. In the following example, the title stored by Bob on server Green is at timestamp 2. But it can not be determined if Bob stored the title before or after Alice stored the name on server Blue.\n For a single leader-follower group of servers, where a leader is always responsible for storing values, the basic implementation discussed in  Versioned Value is enough to maintain causality.\n   In this case, the key value store keeps an integer version counter. It increments the version counter every time the key value write command is applied from the Write Ahead Log. It then constructs the new key with the incremented version counter. Only the leader is responsible for incrementing the version counter, and followers use the same version number.\n  int version = 0; MVCCStore mvccStore = new MVCCStore(); @Override public CompletableFuture&lt;Response&gt; put(String key, String value) { return server.propose(new SetValueCommand(key, value)); } private Response applySetValueCommand(SetValueCommand setValueCommand) { getLogger().info(&#34;Setting key value &#34; + setValueCommand);  version = version + 1; mvccStore.put(new VersionedKey(setValueCommand.getKey(), version), setValueCommand.getValue()); Response response = Response.success(version); return response; }\n Databases like  [mongodb] and  [cockroachdb] use variants of the Lamport Clock to implement  [mvcc] storage", "posttime": "2021-06-26 15:10:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lamport,\u5b58\u50a8", "title": "Lamport\u65f6\u949f ", "title_en": "Lamport Clock", "transed": 1, "url": "https://martinfowler.com/articles/patterns-of-distributed-systems/lamport-clock.html", "via": "", "real_tags": ["lamport", "\u5b58\u50a8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068395, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u514b\u91cc\u65af\u6258\u5f17\u00b7\u8bfa\u5170\u7684\u6bcf\u4e00\u4e2a\u7c89\u4e1d\u90fd\u77e5\u9053\u4efb\u4f55\u597d\u7684\u9b54\u672f\u4f0e\u4fe9\u90fd\u6709\u4e09\u4e2a\u884c\u4e3a\u3002\u7b2c\u4e00\u4e2a\u884c\u4e3a\u662f\u627f\u8bfa\uff0c\u9b54\u672f\u5e08\u505a\u4e00\u4e9b\u666e\u901a\u7684\u4e8b\u60c5\u3002\u7136\u540e\u8f6c\u5f2f\uff0c\u666e\u901a\u53d8\u5f97\u975e\u51e1\u3002\u7b2c\u4e09\u7ae0\u662f\u5a01\u671b\uff0c\u56de\u5f52\u975e\u51e1\u7684\u666e\u901a\u3002\n \u4e3a\u4e86\u907f\u514d\u4f7f\u7528\u8d2d\u4e70\uff0c\u501f\u7528\uff0c\u501f\u7528\uff0c\u6b7b\uff0c\u7f8e\u56fd\u5fc5\u987b\u6709\u8db3\u591f\u7684\u94b1\u6295\u8d44\u5347\u503c\u8d44\u4ea7\u3002\u5e7f\u6cdb\u6295\u8d44\u7684\u8d44\u4ea7\u901a\u5e38\u5728\u901a\u8d27\u81a8\u80c0\u540e\u6bcf\u5e74\u7684\u589e\u957f\u81f3\u5c11\u4e3a3\uff05\uff0c\u8fd9\u610f\u5473\u7740\u6295\u8d44200\u4e07\u7f8e\u5143\uff0c\u4e3a\u7f8e\u56fd\u5bb6\u5ead\u85aa\u6c34\u4e2d\u4f4d\u6570\u63d0\u4f9b\u7ea660,000\u7f8e\u5143\u7684\u5e74\u5ea6\u88ab\u52a8\u6536\u5165\u3002 1000\u4e07\u7f8e\u5143\u6295\u8d44\u89c4\u5b9a\u4e86300,000\u7f8e\u5143\u7684\u5e74\u5ea6\u88ab\u52a8\u6536\u5165\uff0c\u8fd9\u8fdb\u5165\u4e8690\u767e\u5206\u4f4d\u6570\u7684\u6536\u5165\u8005\u3002\u8fd9\u662f\u901a\u8fc7\u6295\u8d44\u8005\u7684\u52aa\u529b\u83b7\u5f97\u7684\u3002\u5982\u679c\u7eb3\u7a0e\u4eba\u5728\u6536\u5230\u5b83\u4eec\u65f6\u9500\u552e\u8fd9\u4e9b\u6536\u76ca\uff0c\u90a3\u4e48\u5979\u5c06\u652f\u4ed8\u8d44\u672c\u83b7\u5f97\u7a0e\u3002 \uff08\u5df2\u7ecf\u6bd4\u6b63\u5e38\u6536\u5165\u7387\u8f83\u4f4e\uff09\n \u901a\u8fc7\u4f7f\u7528\u8fd9\u4e00\u6218\u7565\uff0c\u6211\u4eec\u7684\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u751a\u81f3\u4e0d\u9700\u8981\u652f\u4ed8\u8f83\u4f4e\u7684\u8d44\u672c\u6536\u76ca\u7a0e\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u53ef\u4ee5\u548c\u5e73\u5730\u6297\u8bae\u7f8e\u56fd\u653f\u5e9c\u7684\u538b\u8feb\u7a0e\u5236\uff0c\u5c06\u9053\u8def\u548c\u533b\u9662\u548c\u516c\u5171\u6559\u80b2\u7684\u8d39\u7528\u727a\u7272\u5230\u5176\u8f83\u4f4e\u7684\u4e0a\u884c\u7684\u540c\u884c\uff0c\u800c\u662f\u5728\u8270\u82e6\u7684\u4f11\u5047\u548c\u6e38\u8247\u4e0a\u5ea6\u8fc7\u8d22\u5bcc\u3002\n  \u8fd9\u4e2a\u795e\u5947\u4f0e\u4fe9\u7684\u7b2c\u4e00\u4e2a\u884c\u4e3a\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u7684\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u5360\u636e\u4e86\u4ed6\u4eec\u7684\u9057\u4f20\u8d22\u5bcc\uff0c\u5e76\u8d2d\u4e70\u4e86\u5347\u503c\u8d44\u4ea7\u3002 100 000,000\u7f8e\u5143\u7684\u9057\u4f20\u901a\u5e38\u4f1a\u63d0\u4f9b\u81f3\u5c11600,000\u7f8e\u5143\u7684\u6536\u76ca\uff0c\u5176\u4e2d\u5927\u7ea6300,000\u7f8e\u5143\u5c06\u88ab\u633d\u6551\uff0c\u4ee5\u4fbf\u57fa\u91d1\u968f\u7740\u901a\u8d27\u81a8\u80c0\u800c\u589e\u957f\uff0c\u7559\u4e0b30\u4e07\u7f8e\u5143\u7684\u6536\u5165\uff08\u4ee5\u901a\u8d27\u81a8\u80c0\u589e\u957f\uff0c\u800c\u7701\u53bb\u4e86300,000\u7f8e\u5143\uff09\u3002\u4f46\u90a3\u6ca1\u6709\u51fa\u552e;\u7b2c\u4e00\u6b65\u662f\u4e70\uff0c\u4e0d\u5356\u3002\n  \u7b2c\u4e8c\u5e55\u4e5f\u5f88\u7b80\u5355\u3002\u6211\u4eec\u7684\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u73b0\u5728\u5e0c\u671b\u4ece\u4e0a\u9762\u7684\u6536\u5165\u4e2d\u82b1\u8d39300,000\u7f8e\u5143\uff0c\u903b\u8f91\u4e0a\u7684\u610f\u601d\u662f\u9500\u552e\u6536\u76ca\u5e76\u652f\u4ed815\uff05\u7684\u8d44\u672c\u6536\u76ca\u7684\u6536\u5165\u7a0e\u3002\n \u901a\u8fc7\u64a4\u56de300,000\u7f8e\u5143\u7684\u503a\u52a1\uff0c\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u5728\u6b64\u8f6c\u53d8\u4e3a\u975e\u51e1\u7684\u666e\u901a\u4eba\uff08\u8d44\u672c\u6536\u76ca300,000\u7f8e\u5143\uff09\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u5979\u5df2\u7ecf\u907f\u514d\u4e86\u4eca\u5e74\u7684\u8d44\u672c\u6536\u76ca\u7a0e\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5c1a\u672a\u88ab\u9500\u552e\uff0c\u56e0\u6b64\u672a\u7ecf\u9500\u552e\uff0c\u5e76\u4e14\u5979\u907f\u514d\u5411\u503a\u52a1\u7f34\u7eb3\u7a0e\u6b3e\uff0c\u56e0\u4e3a\u503a\u52a1\u4e0d\u5f81\u7a0e\u3002\u5c3d\u7ba1\u5728\u5979\u7684\u8d44\u4ea7\u5347\u503c\u4e2d\u652f\u4ed8\u4e8630\u4e07\u7f8e\u5143\uff0c\u4f46\u5979\u4eca\u5e74\u6ca1\u6709\u7a0e\u6536\u3002\n \u8fd9\u90e8\u5206\u4f0e\u4fe9\u6bcf\u5e74\u90fd\u91cd\u590d\uff0c\u76f4\u5230\u662f\u6700\u7ec8\u884c\u4e3a\u7684\u65f6\u5019\u3002 \n\u6211\u4eec\u7684\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u5141\u8bb8\u5979\u672a\u5b9e\u73b0\u7684\u6536\u76ca\u79ef\u7d2f\u5728\u5979\u751f\u547d\u7684\u8fc7\u7a0b\u4e2d\u3002\u8fd9\u5e94\u8be5\u610f\u5473\u7740\u4ed6\u4eec\u7ec8\u4e8e\u5356\u51fa\u7684\u65f6\u5019\u90fd\u5f81\u7a0e\uff0c\u4f46\u5176\u4e2d\u8c0e\u8a00\u7684\u6700\u540e\u4e00\u4f4d\u624b;\u4ed6\u4eec\u4ece\u672a\u51fa\u552e\u8fc7\u3002\u76f8\u53cd\uff0c\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u6b7b\u4ea1\uff0c\u4ecd\u7136\u62e5\u6709\u8d44\u4ea7\u3002\n \u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u975e\u5e38\u91cd\u8981\u7684\u53d8\u5f97\u666e\u901a\u3002\u6b23\u8d4f\u7684\u8d44\u4ea7\u73b0\u5728\u59cb\u7ec8\u5904\u4e8e\u52a0\u5927\uff0c\u6e05\u6d17\u672a\u5b9e\u73b0\u7684\u6536\u76ca\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u6ca1\u6709\u4efb\u4f55\u5185\u7f6e\u7a0e\u6536\uff0c\u6240\u4ee5\u9057\u4ea7\u5c31\u603b\u91d1\u989d\u6ca1\u6709\u7a0e\u6536\uff0c\u5305\u62ec\u521d\u59cb\u6295\u8d44\uff0c\u4e5f\u4e0d\u662f\u8d44\u4ea7\u7684\u5347\u503c\u3002\u7136\u540e\uff0c\u5e84\u56ed\u5229\u7528\u8d44\u4ea7\u7684\u8d5e\u8d4f\u507f\u8fd8\u503a\u52a1\u3002\u6821\u957f\u4ecd\u7136\u5b58\u5728\u3002\n \u56e0\u6b64\uff0c\u7ed3\u679c\u662f\u6ca1\u6709\u7a0e\u6536\u7684\u751f\u547d\u3002\u901a\u8fc7\u5347\u503c\uff0c\u989d\u5916\u8d22\u5bcc\u63d0\u4f9b\u4e86\u4e3b\u8981\u6295\u8d44\uff0c\u8fd9\u662f\u503a\u52a1\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u7684\u989d\u5916\u8d22\u5bcc\u3002\u5f53\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u6b7b\u4ea1\u65f6\uff0c\u6574\u4e2a\u8d22\u5bcc\u90fd\u9500\u552e\uff0c\u514d\u7a0e\uff0c\u503a\u52a1\u662f\u901a\u8fc7\u514d\u7a0e\u6536\u76ca\u652f\u4ed8\u7684\u3002\u6821\u957f\u4ecd\u7136\u662f\u6211\u4eec\u7684\u7231\u56fd\u7f8e\u56fd\u516c\u6c11\u7684\u540e\u4ee3\uff0c\u4ed6\u4eec\u5c06\u9075\u5faa\u4e70/\u501f\u7528/\u6b7b\u4ea1\uff0c\u4ee5\u907f\u514d\u7f34\u7eb3\u8fd9\u4e9b\u6295\u8d44\u7684\u6536\u5165\u7a0e\u3002 ", "note_en": "Every fan of Christopher Nolan knows that any good magic trick contains three acts. The first act is the pledge, where the magician does something ordinary. Then comes the turn, where the ordinary becomes extraordinary. The third act is the prestige, returning the extraordinary to the ordinary.\n In order to avoid taxation using Buy, Borrow, Die, an American must first have enough money to invest in appreciating assets.  Broadly invested assets often provide at least 3% growth every year after inflation, which means that $2 Million invested provides an annual passive income of about $60,000, the median American household salary. $10 Million invested provides approximately an annual passive income of $300,000, which is well into the 90th percentile of earners.  This is gained through no effort of the investor. If the taxpayer sells these gains as she receives them, then she will pay capital gains taxes. (already a lower rate than the normal income rates)\n By using this strategy, our Patriotic American Citizens don\u2019t even need to pay the lower capital gains taxes. Instead, they can peacefully protest the American government\u2019s oppressive taxation regime, leaving the expense of roads and hospitals and public education to their less-propertied counterparts, instead spending their wealth on hard-earned vacations and yachts.\n  The first act of this magic trick is very simple. Our Patriotic American Citizen takes their hard-inherited wealth and buys appreciating assets. $10,000,000 inherited will usually provide at least $600,000 in gains, approximately $300,000 of which will be saved so that the fund grows with inflation, leaving $300,000 of income (which grows with inflation, because the other $300,000 is saved). But that is not sold; the first step is  buy, not  sell.\n  The second act is also very simple. Our Patriotic American Citizen now wants to spend her $300,000 in income from above, which logically would mean selling the gains and paying 15% capital gains taxes on their income.\n The Patriotic American Citizen here turns the ordinary ( spending $300,000 in capital gains) into the extraordinary by withdrawing $300,000 in debt. By doing so, she has avoided paying taxes this year on her capital gains, because they have not been sold and are therefore unrealized, and she has avoided paying taxes on the debt because debt is not taxed.  She has paid no taxes this year, despite spending the $300,000 in appreciation of her assets.\n This part of the trick is repeated every year, until it is time for the final act.\n  Our Patriotic American Citizen has allowed her unrealized gains to accumulated over the course of her life. This should mean that they are all taxed when they are finally sold, but therein lies the final sleight of hand; they are never sold. Instead, the Patriotic American Citizen dies, still owning the assets.\n At this point, the extraordinary again becomes the ordinary. The appreciated assets are now at a stepped-up basis, washing away the unrealized gains. They are then sold, without any built-in taxes, so the estate pays  no taxes on the total amount, including not only the initial investment but also the appreciation of the asset. The estate then uses the appreciation of the assets to pay off the debt. The principal remains.\n The result, therefore, is a life without taxes. The principal investment provides, through appreciation, additional wealth, which the Patriotic American Citizen then matches in debt. When the Patriotic American Citizen dies, the whole wealth is sold, tax-free, and the debt is paid with the tax-free proceeds. The principal remains and is invested for the descendants of our Patriotic American Citizen, who will follow  Buy/Borrow/Die in order to avoid paying taxes on their income from these investments.", "posttime": "2021-06-26 15:10:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u501f\u6765,borrow,\u6295\u8d44", "title": "\u4e70\uff0c\u501f\u6765\uff0c\u6b7b ", "title_en": "Buy, Borrow, Die", "transed": 1, "url": "https://www.peoplestaxpage.org/buy-borrow-die", "via": "", "real_tags": ["\u501f\u6765", "borrow", "\u6295\u8d44"]}, {"category": "", "categoryclass": "", "imagename": "09a2785173e2a3d8fd72b13f8c104b98.jpg", "infoid": 1068394, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5341\u5e74\u524d\uff0c\u4eba\u7c7b\u5b66\u5bb6\u5728\u897f\u4f2f\u5229\u4e9a\u7684Denisova\u6d1e\u7a74\u4e2d\u53d1\u73b0\u4e86\u4e00\u7fa4\u672a\u77e5\u7684\u4e00\u7fa4\u672a\u77e5\u706d\u7edd\u7684\u4eba\u7c7b\u7684\u5316\u77f3\u7c89\u7ea2\u8272\u3002\u672c\u96c6\u56e2\u7684\u8363\u8a89\u88ab\u547d\u540d\u4e3a\u201cDenisovans\u201d\u3002\u73b0\u5728\uff0c\u5bf9\u6d1e\u7a74\u571f\u58e4\u4e2d\u7684DNA\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u5206\u6790\uff0c\u63ed\u793a\u4e86\u5b83\u4e5f\u4e3e\u529e\u4e86\u73b0\u4ee3\u4eba\u7c7b - \u8c01\u65e9\u65e9\u5230\u8fbe\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u53ef\u80fd\u66fe\u7ecf\u5728\u90a3\u91cc\u4f4f\u5728\u90a3\u91cc\uff0c\u5728\u90a3\u91cc\u53f8\u6cd5\u548c\u5c3c\u5b89\u5fb7\u7279\u4eba\u3002\n \u65b0\u7684\u7814\u7a76\u201c\u7ed9\u4e88\u4e86[\u7814\u7a76\u5458]\u524d\u6240\u672a\u6709\u7684\u6d1e\u5bdf\u529b\uff0c\u201d\u54e5\u672c\u54c8\u6839\u5927\u5b66\u5206\u5b50\u53e4\u751f\u5b66\u5bb6Mikkel Winther Pedersen\u8bf4\uff0c\u54e5\u672c\u54c8\u6839\u5927\u5b66\u7684\u5206\u5b50\u53e4\u751f\u5b66\u5bb6\u90fd\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u5de5\u4f5c\u3002 \u201c\u5b83\u5b57\u9762\u4e0a\u8868\u660e\u4e86\u4ed6\u4eec\u53ea\u80fd\u5728\u5047\u8bbe\u4e2d\u8fdb\u884c\u4e86\u4ec0\u4e48\u3002\u201d\n \u4f17\u6240\u5468\u77e5\uff0c\u4eba\u7c7b - \u5305\u62ec\u5c3c\u5b89\u5fb7\u7279\u4eba\u548c\u4e39\u5c3c\u65af\u74e6\u5c14\u65af\u81f3\u5c11\u5360\u636e\u4e86Denisova Cave\u81f3\u5c11300\u4e07\u5e74\u3002\u5728\u516b\u4e2a\u4eba\u4f53\u5316\u77f3\u4e2d\u51fa\u571f\u7684\u662f\u6709\u5c0f\u6307\uff0c\u6765\u81ea\u5c3c\u5b89\u5fb7\u7279\u4eba\u7684\u4e09\u4e2a\u9aa8\u5934\uff0c\u751a\u81f3\u4e00\u4e2a\u6765\u81ea\u4e00\u4e2a\u5c3c\u5b89\u5fb7\u7279\u4eba\u548c\u4e00\u4e2adenisovan\u7236\u6bcd\u7684\u5b69\u5b50\u3002\u6d1e\u7a74\u8fd8\u542b\u6709\u7cbe\u81f4\u7684\u77f3\u6750\u5de5\u5177\u548c\u73e0\u5b9d\uff0c\u8f83\u9ad8\u6c34\u5e73\u3002\u4f46\u6ca1\u6709\u53d1\u73b0\u73b0\u4ee3\u4eba\u4f53\u5316\u77f3\u3002\u90a3\u4e9b\u6587\u7269\uff0c\u5bf9\u6765\u81ea\u8fd9\u4e9b\u9aa8\u9abc\u7684DNA\u7684\u5e7f\u6cdb\u7814\u7a76\uff0c\u751a\u81f3\u4ece\u571f\u58e4\u4e2d\u7684DNA\u65e9\u671f\u7814\u7a76\u90fd\u5de9\u56fa\u4e86\u6d1e\u7a74\u5bf9\u62fc\u51d1\u4eba\u7c7b\u6f14\u53d8\u7684\u91cd\u8981\u6027\u3002\n \u4f46\u662f\uff0c\u516b\u4e2a\u5316\u77f3\u4e0d\u591a\u7ee7\u7eed\uff0c\u6240\u4ee5\u57c3\u7433\u5a1c\u624e\u74e6\u62c9\u662fMax Planck\u8fdb\u5316\u4eba\u7c7b\u5b66\u7814\u7a76\u6240\u7684\u7814\u7a76\u751f\uff0c\u4ee5\u53ca\u4e0e\u4fc4\u7f57\u65af\u7814\u7a76\u4eba\u5458\u5408\u4f5c\u7684\u540c\u4e8b\uff0c\u770b\u770b\u4e09\u8154\u6d1e\u7684\u571f\u58e4\u4e2d\u5b58\u5728\u4ec0\u4e48\u6837\u7684DNA \uff08\u89c1\u4e0b\u9762\u7684\u89c6\u9891\uff09\u3002\n \u7814\u7a76\u4eba\u5458\u4e00\u76f4\u5728\u7814\u7a76\u4ece\u571f\u58e4\u4e2d\u5206\u79bb\u7684DNA\u8d85\u8fc740\u5c81\uff0c\u5305\u62ec\u6765\u81eaPermafrost\u7684DNA\uff0c\u4f46\u53ea\u6709\u5728\u8fc7\u53bb4\u5e74\u4e2d\u53ea\u6709\u4efb\u4f55\u4eba\u53d1\u73b0\u53e4\u4ee3\u571f\u58e4\u4e2d\u706d\u7edd\u7684\u4eba\u7c7b\u7684DNA\u3002\n \u7814\u7a76\u4eba\u5458\u4e0e\u6b64\u524d\u5df2\u7ecf\u8fc7\u6d1e\u7a74\u7684\u53e6\u4e00\u4e2a\u4e13\u5bb6\u56e2\u961f\u5408\u4f5c\uff0c\u7814\u7a76\u4eba\u5458\u6316\u51fa\u4e86728\u79cd\u571f\u58e4\u6837\u54c1\u3002\u7ecf\u8fc72\u5e74\u7684\u5206\u6790\uff0c\u5176\u4e2d\u5b83\u4eec\u5206\u79bb\u5e76\u6d4b\u5e8f\u6837\u54c1\uff0c\u7814\u7a76\u4eba\u5458\u5728\u5176\u4e2d175\u4e2d\u53d1\u73b0\u4e86\u4eba\u7c7bDNA\u3002\u8fd9\u4f7f\u5f97\u7814\u7a76\u201c\u6700\u5927\uff0c\u6700\u5177\u7cfb\u7edf\u6027\uff0c\u6700\u5177\u7cfb\u7edf\u6027\uff0c\u201dMax Planck\u79d1\u5b66\u5bb6\u7684\u8003\u53e4\u79d1\u5b66\u5bb6Katerina Douka\u8868\u793a\uff0c\u8fd9\u662f\u4eba\u7c7b\u5386\u53f2\u79d1\u5b66\u5bb6\u7684\u8003\u53e4\u79d1\u5b66\u5bb6\uff0c\u4ed6\u6ca1\u6709\u53c2\u4e0e\u5de5\u4f5c\u3002\n    \u8fd9\u4e9b\u6570\u636e\u63ed\u793a\u4e86\u4e00\u79cd\u590d\u6742\u7684\u4eba\u7c7b\u548c\u52a8\u7269\u5c45\u6240\u7684\u5386\u53f2\uff0c\u4e0d\u540c\u7684\u7fa4\u4f53\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cZavala\u548c\u5979\u7684\u540c\u4e8b\u5728\u81ea\u7136\u754c\u4e2d\u642c\u5230\u4e86\u6d1e\u7a74\u3002\u4ed6\u4eec\u7684\u5de5\u4f5c\u8bc1\u5b9e\uff0cDenisovans\u662f\u6d1e\u7a74\u7684\u7b2c\u4e00\u4e2a\u4eba\u7c7b\u5c45\u6c11\uff0c\u5927\u7ea6300\u4e07\u5e74\u524d\u3002\u4ed6\u4eec\u572813\u4e07\u5e74\u524d\u6d88\u5931\u4e86\uff0c\u53ea\u6709\u4e00\u4e2a\u4e0d\u540c\u7684Denisovans\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5236\u9020\u8bb8\u591a\u77f3\u5de5\u5177\uff0c\u5927\u7ea630,000\u5e74\u540e\u3002 Neanderthals\u5728\u5927\u7ea617\u4e07\u5e74\u524d\u51fa\u73b0\u5728\u73b0\u573a\uff0c\u5728\u5404\u79cd\u5404\u6837\u7684\u65f6\u95f4\u70b9\u4f7f\u7528\u4e0d\u540c\u7684\u7fa4\u4f53\uff0c\u4e0eDenisovans\u6709\u4e9b\u91cd\u53e0\u3002 \n\u6700\u540e\u4e00\u4e2a\u5230\u8fbe\u7684\u662f\u73b0\u4ee3\u4eba\u7c7b\uff0c\u4ed6\u5728\u5927\u7ea645,000\u5e74\u524d\u51fa\u73b0\u3002\u7814\u7a76\u4eba\u5458\u62a5\u544a\u4e86\u4e0e\u6765\u81ea\u6240\u6709\u4e09\u4e2a\u4eba\u7c7b\u7fa4\u4f53\u7684DNA\u5bf9\u5e94\u7684\u571f\u58e4\u5c42\u3002 \u201c\u6bcf\u5c42\u7684\u65f6\u95f4\u6bb5\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5177\u4f53\u8bf4\u4ed6\u4eec\u91cd\u53e0\u662f\u5426\u4e0e\u5426\uff0c\u201d\u624e\u74e6\u62c9\u8bf4\u3002\u4f46\u662f\uff0cDouka\u8865\u5145\u9053\uff0c\u201c\u6211\u65e0\u6cd5\u60f3\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u5176\u4e2d\u4e09\u79cd\u4eba\u7c7b\u8fc7\u4e8e\u65f6\u95f4\u3002\u201d\n \u9274\u4e8e\u73e0\u5b9d\u548c\u590d\u6742\u7684\u6587\u7269\u5728\u540e\u6765\u7684\u5c42\u91cc\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u6d89\u5acc\u73b0\u4ee3\u3002\u4f46\u6ca1\u6709\u4eba\u77e5\u9053\u4ed6\u4eec\u65e9\u572845,000\u5e74\u524d\u5c31\u5230\u8fbe\u4e86 - \u6211\u4eec\u90fd\u4e0e\u6211\u4eec\u7684\u4e24\u79cd\u53e4\u8001\u7684\u8868\u5144\u5f1f\u91cd\u53e0\u4e86\u3002 \u201c\u5b83\u5efa\u8bae\u5728\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7684\u8fdb\u5316\u4eba\u7c7b\u5b66\u5bb6\u4e4b\u95f4\u5efa\u8bae\u53e4\u8001\u548c\u73b0\u4ee3\u4eba\u7c7b\u4e4b\u95f4\u66f4\u52a0\u590d\u6742\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u201d\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7684\u8fdb\u5316\u4eba\u7c7b\u5b66\u5bb6\u7f57\u6069\u00b7\u5e15\u8428\u65af\u8bf4\u3002\n \u571f\u58e4\u6837\u54c1\u8fd8\u4ea7\u751f\u6765\u81ea\u8bb8\u591a\u52a8\u7269\u7684DNA\u3002\u5927\u7ea617\u4e07\u5e74\u524d\uff0c\u6c14\u5019\u4ece\u66f4\u6e29\u6696\u5230\u5bd2\u51b7\uff0c\u5c3c\u5b89\u5fb7\u7279\u4eba\u642c\u8fdb\u53bb\uff0c\u6240\u4ee5\u4e0d\u540c\u7684\u9b23\u72d7\u548c\u718a\u3002\n Pinhasi\u8bf4\uff0c\u8fd9\u662f\u6765\u81ea\u5316\u77f3\u548c\u571f\u58e4\u6837\u672c\u7684\u57fa\u56e0\u7ec4\u6570\u636e\u7684\u7ec4\u5408\uff0c\u771f\u6b63\u4f7f\u65b0\u5de5\u4f5c\u8131\u9896\u800c\u51fa\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u8d85\u7ea7\u5316\u7684\u65b9\u5411[\u672a\u6765\u7684\u5de5\u4f5c]\u3002\u201d Douka\u540c\u610f\uff0c\u5e76\u8bf4\u65b0\u7684\u7814\u7a76\u5e94\u8be5\u5e2e\u52a9\u53e4\u4ee3\u571f\u58e4DNA\u6210\u4e3a\u201c\u4e3b\u6d41\u8003\u53e4\u5de5\u5177\u201d\u3002\u5979\u5df2\u7ecf\u60ca\u8bb6\u4e8e\u5b83\u7684\u8fdb\u5c55\uff0c\u5373\u4e0e\u5176\u4ed6\u7814\u7a76\u76f8\u7ed3\u5408\uff0c\u4f7f\u5f97\u6210\u4e3a\u53ef\u80fd\u3002 \u201c\u8ba9\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u57282010\u5e74\u6211\u4eec\u7edd\u5bf9\u6ca1\u6709\u8bc1\u636e\u8868\u660eDenisovans\u5b58\u5728\uff0c\u800c\u8fd9\u4e9b\u5404\u79cd\u6bcd\u4eb2\u89c1\u8fc7\uff0c\u66f4\u4e0d\u7528\u8bf4\u4ed6\u4eec\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u64b0\u5199\u4e86\u53cd\u590d\u548c\u5171\u5b58\u3002\u201d ", "note_en": "A decade ago, anthropologists shocked the world when they discovered a  fossil pinkie bone from a then-unknown group of extinct humans in Siberia\u2019s Denisova Cave. The group was named \u201cDenisovans\u201d in its honor. Now, an extensive analysis of DNA in the cave\u2019s soils reveals it also hosted modern humans\u2014who arrived early enough that they may have once lived there alongside Denisovans and Neanderthals.\n The new study \u201cgives [researchers] unprecedented insight into the past,\u201d says Mikkel Winther Pedersen, a molecular paleoecologist at the University of Copenhagen who was not involved with the work. \u201cIt literally shows what [before] they have only been able hypothesize.\u201d\n Humans\u2014including Neanderthals and Denisovans\u2014are known to have occupied Denisova Cave for at least 300,000 years. Among the eight human fossils unearthed there are the pinkie, three bones from Neanderthals, and even one from a child  with one Neanderthal and one Denisovan parent. The cave also contains sophisticated stone tools and jewelry at higher, later levels. But no modern human fossils have been found there. Those artifacts,  extensive studies of DNA from these bones, and even  one early study of DNA from soils have cemented the cave\u2019s importance for piecing together human evolution.\n But eight fossils are not much to go on, so Elena Zavala, a graduate student at the Max Planck Institute for Evolutionary Anthropology, and colleagues teamed up with Russian researchers to see what kind of DNA was present in the soils of the three-chamber cave (see video, below).\n Researchers have been studying DNA isolated from soils for more than 40 years, including  sequencing DNA from permafrost, but only in the past 4 years has anyone  found DNA from extinct humans in ancient soils.\n Working with another team of experts who had previously  dated the layers of the cave, the researchers dug out 728 soil samples. After 2 years of analysis, in which they isolated and sequenced the samples, the researchers found human DNA in 175 of them. That makes the study \u201cthe largest and most systematic of its kind,\u201d says Katerina Douka, an archaeological scientist at the Max Planck Institute for the Science of Human History who was not involved in the work.\n    The data reveal\u00a0 a complex history of human and animal habitation, with different groups moving in and out of the cave over time, Zavala and her colleagues report today in\u00a0 Nature. Their work confirms that Denisovans were the cave\u2019s first human inhabitants, about 300,000 years ago. They disappeared 130,000 years ago, only to be followed by a different group of Denisovans, who likely made many of the stone tools, some 30,000 years later. Neanderthals appeared on the scene about 170,000 years ago, with different groups using the cave at various points in time, some overlapping with the Denisovans.\n The last to arrive were modern humans, who showed up about 45,000 years ago. The soil layer that corresponds with that period contained DNA from all three human groups, the researchers report. \u201cThe time periods [of each layer] are quite large, so we can\u2019t concretely say if they overlapped or not,\u201d Zavala says. But, Douka adds, \u201cI cannot think of another site where three human species lived through time.\u201d\n Given the jewelry and sophisticated artifacts in later layers, some researchers had\u00a0 suspected moderns\u00a0had been there. But no one knew they had arrived as early as 45,000 years ago\u2014and overlapped with both of our archaic cousins. \u201cIt suggests a more complicated interplay between archaic and modern humans,\u201d says Ron Pinhasi, an evolutionary anthropologist at the University of Vienna who was not involved with the work.\n The soil samples also yielded DNA from many species of animals. About 170,000 years ago, the climate went from warmer to colder, and Neanderthals moved in, so did different species of hyenas and bears.\n It\u2019s the combination of genomic data from both the fossils and the soil samples that really makes the new work stand out, Pinhasi says. \u201cIt\u2019s a superpromising direction [for future work].\u201d Douka agrees, and says the new study should help ancient soil DNA become \u201ca mainstream archaeological tool.\u201d She is already amazed at the progress that it, combined with other studies, has made possible. \u201cLet\u2019s not forget that as recently as in 2010 we had\u00a0absolutely no evidence that Denisovans existed, and that these various hominins ever met, let alone that they interbred\u00a0repeatedly\u00a0and co-existed for millennia,\u201d she wrote in an email.", "posttime": "2021-06-26 15:09:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d1e\u7a74,cave,\u4eba\u7c7b", "title": "\u897f\u4f2f\u5229\u4e9a\u6d1e\u7a74\u4e3b\u6301\u4e86Neanderthals\uff0cDenisovans\u548c\u73b0\u4ee3\u4eba\u7c7b ", "title_en": "Siberian cave hosted Neanderthals, Denisovans, and modern humans", "transed": 1, "url": "https://www.sciencemag.org/news/2021/06/ancient-siberian-cave-hosted-neanderthals-denisovans-and-modern-humans-possibly-same", "via": "", "real_tags": ["\u6d1e\u7a74", "cave", "\u4eba\u7c7b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068393, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters", "note_en": "{ &#34;tiddlers&#34;: { &#34;$:/Acknowledgements&#34;: { &#34;title&#34;: &#34;$:/Acknowledgements&#34;, &#34;text&#34;: &#34;TiddlyWiki incorporates code from these fine OpenSource projects:\\n\\n* [[The Stanford Javascript Crypto Library|http://bitwiseshiftleft.github.io/sjcl/]]\\n* [[The Jasmine JavaScript Test Framework|http://pivotal.github.io/jasmine/]]\\n* [[Normalize.css by Nicolas Gallagher|http://necolas.github.io/normalize.css/]]\\n\\nAnd media from these projects:\\n\\n* World flag icons from [[Wikipedia|http://commons.wikimedia.org/wiki/Category:SVG_flags_by_country]]\\n&#34; }, &#34;$:/core/copyright.txt&#34;: { &#34;title&#34;: &#34;$:/core/copyright.txt&#34;, &#34;type&#34;: &#34;text/plain&#34;, &#34;text&#34;: &#34;TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n\\nCopyright (c) 2004-2007, Jeremy Ruston\\nCopyright (c) 2007-2020, UnaMesa Association\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n* Redistributions of source code must retain the above copyright notice, this\\n list of conditions and the following disclaimer.\\n\\n* Redistributions in binary form must reproduce the above copyright notice,\\n this list of conditions and the following disclaimer in the documentation\\n and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n contributors may be used to endorse or promote products derived from\\n this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#39;AS IS&#39;\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#34; }, &#34;$:/core/icon&#34;: { &#34;title&#34;: &#34;$:/core/icon&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path d=\\&#34;M64 0l54.56 32v64L64 128 9.44 96V32L64 0zm21.127 95.408c-3.578-.103-5.15-.094-6.974-3.152l-1.42.042c-1.653-.075-.964-.04-2.067-.097-1.844-.07-1.548-1.86-1.873-2.8-.52-3.202.687-6.43.65-9.632-.014-1.14-1.593-5.17-2.157-6.61-1.768.34-3.546.406-5.34.497-4.134-.01-8.24-.527-12.317-1.183-.8 3.35-3.16 8.036-1.21 11.44 2.37 3.52 4.03 4.495 6.61 4.707 2.572.212 3.16 3.18 2.53 4.242-.55.73-1.52.864-2.346 1.04l-1.65.08c-1.296-.046-2.455-.404-3.61-.955-1.93-1.097-3.925-3.383-5.406-5.024.345.658.55 1.938.24 2.53-.878 1.27-4.665 1.26-6.4.47-1.97-.89-6.73-7.162-7.468-11.86 1.96-3.78 4.812-7.07 6.255-11.186-3.146-2.05-4.83-5.384-4.61-9.16l.08-.44c-3.097.59-1.49.37-4.82.628-10.608-.032-19.935-7.37-14.68-18.774.34-.673.664-1.287 1.243-.994.466.237.4 1.18.166 2.227-3.005 13.627 11.67 13.732 20.69 11.21.89-.25 2.67-1.936 3.905-2.495 2.016-.91 4.205-1.282 6.376-1.55 5.4-.63 11.893 2.276 15.19 2.37 3.3.096 7.99-.805 10.87-.615 2.09.098 4.143.483 6.16 1.03 1.306-6.49 1.4-11.27 4.492-12.38 1.814.293 3.213 2.818 4.25 4.167 2.112-.086 4.12.46 6.115 1.066 3.61-.522 6.642-2.593 9.833-4.203-3.234 2.69-3.673 7.075-3.303 11.127.138 2.103-.444 4.386-1.164 6.54-1.348 3.507-3.95 7.204-6.97 7.014-1.14-.036-1.805-.695-2.653-1.4-.164 1.427-.81 2.7-1.434 3.96-1.44 2.797-5.203 4.03-8.687 7.016-3.484 2.985 1.114 13.65 2.23 15.594 1.114 1.94 4.226 2.652 3.02 4.406-.37.58-.936.785-1.54 1.01l-.82.11zm-40.097-8.85l.553.14c.694-.27 2.09.15 2.83.353-1.363-1.31-3.417-3.24-4.897-4.46-.485-1.47-.278-2.96-.174-4.46l.02-.123c-.582 1.205-1.322 2.376-1.72 3.645-.465 1.71 2.07 3.557 3.052 4.615l.336.3z\\&#34; fill-rule=\\&#34;evenodd\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/add-comment&#34;: { &#34;title&#34;: &#34;$:/core/images/add-comment&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-add-comment tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path fill-rule=\\&#34;evenodd\\&#34; d=\\&#34;M56 56H36a8 8 0 100 16h20v20a8 8 0 1016 0V72h20a8 8 0 100-16H72V36a8 8 0 10-16 0v20zm-12.595 58.362c-6.683 7.659-20.297 12.903-36.006 12.903-2.196 0-4.35-.102-6.451-.3 9.652-3.836 17.356-12.24 21.01-22.874C8.516 94.28 0 79.734 0 63.5 0 33.953 28.206 10 63 10s63 23.953 63 53.5S97.794 117 63 117c-6.841 0-13.428-.926-19.595-2.638z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/advanced-search-button&#34;: { &#34;title&#34;: &#34;$:/core/images/advanced-search-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-advanced-search-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M74.565 87.985A47.776 47.776 0 0148 96C21.49 96 0 74.51 0 48S21.49 0 48 0s48 21.49 48 48c0 9.854-2.97 19.015-8.062 26.636l34.347 34.347a9.443 9.443 0 010 13.36 9.446 9.446 0 01-13.36 0l-34.36-34.358zM48 80c17.673 0 32-14.327 32-32 0-17.673-14.327-32-32-32-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32z\\&#34;/&gt;&lt;circle cx=\\&#34;48\\&#34; cy=\\&#34;48\\&#34; r=\\&#34;8\\&#34;/&gt;&lt;circle cx=\\&#34;28\\&#34; cy=\\&#34;48\\&#34; r=\\&#34;8\\&#34;/&gt;&lt;circle cx=\\&#34;68\\&#34; cy=\\&#34;48\\&#34; r=\\&#34;8\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/auto-height&#34;: { &#34;title&#34;: &#34;$:/core/images/auto-height&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-auto-height tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path d=\\&#34;M67.987 114.356l-.029-14.477a4 4 0 00-2.067-3.494l-15.966-8.813-1.933 7.502H79.9c4.222 0 5.564-5.693 1.786-7.58L49.797 71.572 48.01 79.15h31.982c4.217 0 5.564-5.682 1.795-7.575L49.805 55.517l-1.795 7.575h31.982c4.212 0 5.563-5.67 1.805-7.57l-16.034-8.105 2.195 3.57V35.614l9.214 9.213a4 4 0 105.656-5.656l-16-16a4 4 0 00-5.656 0l-16 16a4 4 0 105.656 5.656l9.13-9.13v15.288a4 4 0 002.195 3.57l16.035 8.106 1.804-7.57H48.01c-4.217 0-5.564 5.682-1.795 7.574l31.982 16.059 1.795-7.575H48.01c-4.222 0-5.564 5.693-1.787 7.579l31.89 15.923 1.787-7.578H47.992c-4.133 0-5.552 5.504-1.933 7.501l15.966 8.813-2.067-3.494.029 14.436-9.159-9.158a4 4 0 00-5.656 5.656l16 16a4 4 0 005.656 0l16-16a4 4 0 10-5.656-5.656l-9.185 9.184zM16 20h96a4 4 0 100-8H16a4 4 0 100 8z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/blank&#34;: { &#34;title&#34;: &#34;$:/core/images/blank&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-blank tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;/&gt;&#34; }, &#34;$:/core/images/bold&#34;: { &#34;title&#34;: &#34;$:/core/images/bold&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-bold tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path fill-rule=\\&#34;evenodd\\&#34; d=\\&#34;M41.146 51.81V21.87h26.353c2.51 0 4.93.21 7.26.628 2.33.418 4.392 1.165 6.185 2.24 1.793 1.076 3.227 2.57 4.302 4.482 1.076 1.913 1.614 4.363 1.614 7.35 0 5.379-1.613 9.263-4.84 11.653-3.227 2.39-7.35 3.586-12.37 3.586H41.146zM13 0v128h62.028a65.45 65.45 0 0016.762-2.151c5.438-1.434 10.278-3.645 14.52-6.633 4.244-2.988 7.62-6.842 10.13-11.563 2.51-4.721 3.764-10.308 3.764-16.762 0-8.008-1.942-14.85-5.826-20.527-3.884-5.677-9.77-9.65-17.658-11.921 5.737-2.75 10.069-6.275 12.997-10.577 2.928-4.303 4.392-9.681 4.392-16.135 0-5.976-.986-10.995-2.958-15.059-1.972-4.063-4.75-7.32-8.336-9.77-3.585-2.45-7.888-4.213-12.907-5.289C84.888.538 79.33 0 73.235 0H13zm28.146 106.129V70.992H71.8c6.095 0 10.995 1.404 14.7 4.212 3.705 2.81 5.558 7.5 5.558 14.073 0 3.347-.568 6.096-1.703 8.247-1.136 2.151-2.66 3.854-4.572 5.11-1.912 1.254-4.123 2.15-6.633 2.688-2.51.538-5.139.807-7.888.807H41.146z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/cancel-button&#34;: { &#34;title&#34;: &#34;$:/core/images/cancel-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-cancel-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path fill-rule=\\&#34;evenodd\\&#34; d=\\&#34;M64 76.314l-16.97 16.97a7.999 7.999 0 01-11.314 0c-3.118-3.118-3.124-8.19 0-11.313L52.686 65l-16.97-16.97a7.999 7.999 0 010-11.314c3.118-3.118 8.19-3.124 11.313 0L64 53.686l16.97-16.97a7.999 7.999 0 0111.314 0c3.118 3.118 3.124 8.19 0 11.313L75.314 65l16.97 16.97a7.999 7.999 0 010 11.314c-3.118 3.118-8.19 3.124-11.313 0L64 76.314zM64 129c35.346 0 64-28.654 64-64 0-35.346-28.654-64-64-64C28.654 1 0 29.654 0 65c0 35.346 28.654 64 64 64zm0-16c26.51 0 48-21.49 48-48S90.51 17 64 17 16 38.49 16 65s21.49 48 48 48z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/chevron-down&#34;: { &#34;title&#34;: &#34;$:/core/images/chevron-down&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-chevron-down tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M64.053 85.456a7.889 7.889 0 01-5.6-2.316L2.473 27.16a7.92 7.92 0 010-11.196c3.086-3.085 8.105-3.092 11.196 0L64.05 66.344l50.382-50.382a7.92 7.92 0 0111.195 0c3.085 3.086 3.092 8.105 0 11.196l-55.98 55.98a7.892 7.892 0 01-5.595 2.317z\\&#34;/&gt;&lt;path d=\\&#34;M64.053 124.069a7.889 7.889 0 01-5.6-2.316l-55.98-55.98a7.92 7.92 0 010-11.196c3.086-3.085 8.105-3.092 11.196 0l50.382 50.382 50.382-50.382a7.92 7.92 0 0111.195 0c3.085 3.086 3.092 8.104 0 11.196l-55.98 55.98a7.892 7.892 0 01-5.595 2.316z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/chevron-left&#34;: { &#34;title&#34;: &#34;$:/core/images/chevron-left&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-chevron-left tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M47.544 64.053c0-2.027.77-4.054 2.316-5.6l55.98-55.98a7.92 7.92 0 0111.196 0c3.085 3.086 3.092 8.105 0 11.196L66.656 64.05l50.382 50.382a7.92 7.92 0 010 11.195c-3.086 3.085-8.105 3.092-11.196 0l-55.98-55.98a7.892 7.892 0 01-2.317-5.595z\\&#34;/&gt;&lt;path d=\\&#34;M8.931 64.053c0-2.027.77-4.054 2.316-5.6l55.98-55.98a7.92 7.92 0 0111.196 0c3.085 3.086 3.092 8.105 0 11.196L28.041 64.05l50.382 50.382a7.92 7.92 0 010 11.195c-3.086 3.085-8.104 3.092-11.196 0l-55.98-55.98a7.892 7.892 0 01-2.316-5.595z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/chevron-right&#34;: { &#34;title&#34;: &#34;$:/core/images/chevron-right&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-chevron-right tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M83.456 63.947c0 2.027-.77 4.054-2.316 5.6l-55.98 55.98a7.92 7.92 0 01-11.196 0c-3.085-3.086-3.092-8.105 0-11.196L64.344 63.95 13.963 13.567a7.92 7.92 0 010-11.195c3.086-3.085 8.105-3.092 11.196 0l55.98 55.98a7.892 7.892 0 012.317 5.595z\\&#34;/&gt;&lt;path d=\\&#34;M122.069 63.947c0 2.027-.77 4.054-2.316 5.6l-55.98 55.98a7.92 7.92 0 01-11.196 0c-3.085-3.086-3.092-8.105 0-11.196l50.382-50.382-50.382-50.382a7.92 7.92 0 010-11.195c3.086-3.085 8.104-3.092 11.196 0l55.98 55.98a7.892 7.892 0 012.316 5.595z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/chevron-up&#34;: { &#34;title&#34;: &#34;$:/core/images/chevron-up&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-chevron-up tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M63.947 44.544c2.027 0 4.054.77 5.6 2.316l55.98 55.98a7.92 7.92 0 010 11.196c-3.086 3.085-8.105 3.092-11.196 0L63.95 63.656l-50.382 50.382a7.92 7.92 0 01-11.195 0c-3.085-3.086-3.092-8.105 0-11.196l55.98-55.98a7.892 7.892 0 015.595-2.317z\\&#34;/&gt;&lt;path d=\\&#34;M63.947 5.931c2.027 0 4.054.77 5.6 2.316l55.98 55.98a7.92 7.92 0 010 11.196c-3.086 3.085-8.105 3.092-11.196 0L63.95 25.041 13.567 75.423a7.92 7.92 0 01-11.195 0c-3.085-3.086-3.092-8.104 0-11.196l55.98-55.98a7.892 7.892 0 015.595-2.316z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/clone-button&#34;: { &#34;title&#34;: &#34;$:/core/images/clone-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-clone-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M32.265 96v24.002A7.996 7.996 0 0040.263 128h79.74a7.996 7.996 0 007.997-7.998v-79.74a7.996 7.996 0 00-7.998-7.997H96V48h12.859a2.99 2.99 0 012.994 2.994v57.865a2.99 2.99 0 01-2.994 2.994H50.994A2.99 2.99 0 0148 108.859V96H32.265z\\&#34;/&gt;&lt;path d=\\&#34;M40 56h-7.993C27.588 56 24 52.418 24 48c0-4.41 3.585-8 8.007-8H40v-7.993C40 27.588 43.582 24 48 24c4.41 0 8 3.585 8 8.007V40h7.993C68.412 40 72 43.582 72 48c0 4.41-3.585 8-8.007 8H56v7.993C56 68.412 52.418 72 48 72c-4.41 0-8-3.585-8-8.007V56zM8 0C3.58 0 0 3.588 0 8v80c0 4.419 3.588 8 8 8h80c4.419 0 8-3.588 8-8V8c0-4.419-3.588-8-8-8H8zM19 16A2.997 2.997 0 0016 19.001v57.998A2.997 2.997 0 0019.001 80h57.998A2.997 2.997 0 0080 76.999V19.001A2.997 2.997 0 0076.999 16H19.001z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/close-all-button&#34;: { &#34;title&#34;: &#34;$:/core/images/close-all-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-close-all-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;path d=\\&#34;M28 111.314l-14.144 14.143a8 8 0 01-11.313-11.313L16.686 100 2.543 85.856a8 8 0 0111.313-11.313L28 88.686l14.144-14.143a8 8 0 0111.313 11.313L39.314 100l14.143 14.144a8 8 0 01-11.313 11.313L28 111.314zM28 39.314L13.856 53.457A8 8 0 012.543 42.144L16.686 28 2.543 13.856A8 8 0 0113.856 2.543L28 16.686 42.144 2.543a8 8 0 0111.313 11.313L39.314 28l14.143 14.144a8 8 0 01-11.313 11.313L28 39.314zM100 39.314L85.856 53.457a8 8 0 01-11.313-11.313L88.686 28 74.543 13.856A8 8 0 0185.856 2.543L100 16.686l14.144-14.143a8 8 0 0111.313 11.313L111.314 28l14.143 14.144a8 8 0 01-11.313 11.313L100 39.314zM100 111.314l-14.144 14.143a8 8 0 01-11.313-11.313L88.686 100 74.543 85.856a8 8 0 0111.313-11.313L100 88.686l14.144-14.143a8 8 0 0111.313 11.313L111.314 100l14.143 14.144a8 8 0 01-11.313 11.313L100 111.314z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/close-button&#34;: { &#34;title&#34;: &#34;$:/core/images/close-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-close-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path fill-rule=\\&#34;evenodd\\&#34; d=\\&#34;M65.086 75.41l-50.113 50.113c-3.121 3.121-8.192 3.126-11.316.002-3.118-3.118-3.123-8.19.002-11.316l50.114-50.114L3.659 13.982C.538 10.86.533 5.79 3.657 2.666c3.118-3.118 8.19-3.123 11.316.002l50.113 50.114L115.2 2.668c3.121-3.121 8.192-3.126 11.316-.002 3.118 3.118 3.123 8.19-.002 11.316L76.4 64.095l50.114 50.114c3.121 3.121 3.126 8.192.002 11.316-3.118 3.118-8.19 3.123-11.316-.002L65.086 75.409z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/close-others-button&#34;: { &#34;title&#34;: &#34;$:/core/images/close-others-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-close-others-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;path fill-rule=\\&#34;evenodd\\&#34; d=\\&#34;M64 128c35.346 0 64-28.654 64-64 0-35.346-28.654-64-64-64C28.654 0 0 28.654 0 64c0 35.346 28.654 64 64 64zm0-16c26.51 0 48-21.49 48-48S90.51 16 64 16 16 37.49 16 64s21.49 48 48 48zm0-16c17.673 0 32-14.327 32-32 0-17.673-14.327-32-32-32-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32zm0-16c8.837 0 16-7.163 16-16s-7.163-16-16-16-16 7.163-16 16 7.163 16 16 16z\\&#34;/&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/copy-clipboard&#34;: { &#34;title&#34;: &#34;$:/core/images/copy-clipboard&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-copy-clipboard tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34;&gt;&lt;rect width=\\&#34;33\\&#34; height=\\&#34;8\\&#34; x=\\&#34;40\\&#34; y=\\&#34;40\\&#34; rx=\\&#34;4\\&#34;/&gt;&lt;rect width=\\&#34;17\\&#34; height=\\&#34;8\\&#34; x=\\&#34;40\\&#34; y=\\&#34;82\\&#34; rx=\\&#34;4\\&#34;/&gt;&lt;rect width=\\&#34;17\\&#34; height=\\&#34;8\\&#34; x=\\&#34;40\\&#34; y=\\&#34;54\\&#34; rx=\\&#34;4\\&#34;/&gt;&lt;rect width=\\&#34;33\\&#34; height=\\&#34;8\\&#34; x=\\&#34;40\\&#34; y=\\&#34;96\\&#34; rx=\\&#34;4\\&#34;/&gt;&lt;rect width=\\&#34;12\\&#34; height=\\&#34;8\\&#34; x=\\&#34;40\\&#34; y=\\&#34;68\\&#34; rx=\\&#34;4\\&#34;/&gt;&lt;path d=\\&#34;M40 16H24c-4.419 0-8 3.59-8 8a8.031 8.031 0 000 .01v95.98a8.03 8.03 0 000 .01c0 4.41 3.581 8 8 8h80a7.975 7.975 0 005.652-2.34 7.958 7.958 0 002.348-5.652v-16.016c0-4.414-3.582-7.992-8-7.992-4.41 0-8 3.578-8 7.992V112H32V32h64v8.008C96 44.422 99.582 48 104 48c4.41 0 8-3.578 8-7.992V23.992a7.963 7.963 0 00-2.343-5.651A7.995 7.995 0 00104.001 16H88c0-4.41-3.585-8-8.007-8H48.007C43.588 8 40 11.582 40 16zm4-1.004A4.001 4.001 0 0148 11h32c2.21 0 4 1.797 4 3.996v4.008A4.001 4.001 0 0180 23H48c-2.21 0-4-1.797-4-3.996v-4.008z\\&#34;/&gt;&lt;rect width=\\&#34;66\\&#34; height=\\&#34;16\\&#34; x=\\&#34;62\\&#34; y=\\&#34;64\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;path d=\\&#34;M84.657 82.343l-16-16v11.314l16-16a8 8 0 10-11.314-11.314l-16 16a8 8 0 000 11.314l16 16a8 8 0 1011.314-11.314z\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/delete-button&#34;: { &#34;title&#34;: &#34;$:/core/images/delete-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22pt\\&#34; class=\\&#34;tc-image-delete-button tc-image-button\\&#34; viewBox=\\&#34;0 0 128 128\\&#34;&gt;&lt;g fill-rule=\\&#34;evenodd\\&#34; transform=\\&#34;translate(12)\\&#34;&gt;&lt;rect width=\\&#34;105\\&#34; height=\\&#34;16\\&#34; y=\\&#34;11\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;48\\&#34; height=\\&#34;16\\&#34; x=\\&#34;28\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;16\\&#34; height=\\&#34;112\\&#34; x=\\&#34;8\\&#34; y=\\&#34;16\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;88\\&#34; height=\\&#34;16\\&#34; x=\\&#34;8\\&#34; y=\\&#34;112\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;16\\&#34; height=\\&#34;112\\&#34; x=\\&#34;80\\&#34; y=\\&#34;16\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;16\\&#34; height=\\&#34;112\\&#34; x=\\&#34;56\\&#34; y=\\&#34;16\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;rect width=\\&#34;16\\&#34; height=\\&#34;112\\&#34; x=\\&#34;32\\&#34; y=\\&#34;16\\&#34; rx=\\&#34;8\\&#34;/&gt;&lt;/g&gt;&lt;/svg&gt;&#34; }, &#34;$:/core/images/done-button&#34;: { &#34;title&#34;: &#34;$:/core/images/done-button&#34;, &#34;tags&#34;: &#34;$:/tags/Image&#34;, &#34;text&#34;: &#34;&lt;svg width=\\&#34;22pt\\&#34; height=\\&#34;22\n......", "posttime": "2021-06-26 15:09:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u97f3\u9891,case,warning", "title": "\u4e00\u4e2a\u793e\u4ea4\u97f3\u9891\u7684\u718a\u6848\u4f8b ", "title_en": "A Bear Case for Social Audio", "transed": 1, "url": "https://elevis.io", "via": "", "real_tags": ["\u97f3\u9891", "case", "warning"]}, {"category": "", "categoryclass": "", "imagename": "dd8ae5ef336de416919c88322242bf71.png", "infoid": 1068392, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Neotron Pico\u57fa\u4e8eNeotron-32\u7684\u60f3\u6cd5\uff0c\u4f46\u662f\u4f7f\u7528\u4f4e\u6210\u672c\u7684\u8986\u76c6\u5b50PI PICO\u800c\u4e0d\u662f\u5fb7\u514b\u8428\u65af\u5ddeinliva-c launchpad\u3002\u5b83\u8fd8\u5ef6\u4f38\u5230\u5168\u90e8\u5fae\u578bATX\u5927\u5c0f\uff0c\u5e76\u6dfb\u52a0\u66f4\u591a\u7684\u6269\u5c55\u63d2\u69fd\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u8bbe\u8ba1\u548c\u6dfb\u52a0\u81ea\u5df1\u7684\u5916\u56f4\u8bbe\u5907\u3002\n   \u8986\u76c6\u5b50pi pico\u662f\u5fb7\u56fd\u8bd7\u7684\u6838\u5fc3\u3002\u5b83\u4f7f\u7528PIO StateMachines\u751f\u621012\u4f4d\u8d85\u7ea7VGA\u89c6\u9891\uff0c\u6570\u5b5716\u4f4d48 kHz\u7acb\u4f53\u58f0\u97f3\u9891\u3002\u5b83\u8fd8\u5177\u6709I\u00b2C\u548cSPI\u516c\u4ea4\u8f66\u3002 SPI\u82af\u7247\u9009\u62e9\u548cIRQS\u7531SPI-to-GPIO\u6269\u5c55\u5668\u5904\u7406\u3002\u8fd9\u63d0\u4f9b\u4e86\u516b\u4e2a\u82af\u7247\u9009\u62e9\u548c\u516b\u4e2aIRQ\uff0c\u4ee5\u652f\u6301\u6700\u591a\u516b\u4e2a\u6269\u5c55\u63d2\u69fd\u6216\u5916\u56f4\u8bbe\u5907\u3002\u516b\u4e2a\u82af\u7247\u9009\u62e9\u7528\u4e09\u6001\u603b\u7ebf\u6536\u53d1\u5668\u8fdb\u884c\u95e8\u63a7\uff0c\u5141\u8bb8PICO\u4e0eI / O Examander\u6216\u6240\u9009\u6269\u5c55\u63d2\u69fd\u8fdb\u884c\u901a\u8bdd\u3002\u7535\u8def\u677f\u6709\u4e00\u4e2aSD\u5361\uff0c\u9002\u7528\u4e8e\uff06\uff0339;\u63d2\u69fd1\uff06\uff0339;\u4f4d\u7f6e\uff0c\u4ee5\u53ca\uff06\uff0339\u4e2d\u7684\u677f\u7ba1\u7406\u63a7\u5236\u5668;\u63d2\u69fd0\uff06\uff0339;\u4f4d\u7f6e\uff0c\u79bb\u5f00\uff06\uff0339;\u63d2\u69fd2\uff06\uff0339;\u5230\uff06\uff0339;\u63d2\u69fd7\uff06\uff0339;\u53ef\u6269\u5c55\u3002\u6bcf\u4e2a\u6269\u5c55\u63d2\u69fd\u90fd\u5177\u6709I\u00b2C\u548cSPI\uff0c\u4ee5\u53ca\u72ec\u7279\u7684\u82af\u7247\u9009\u62e9\u548cIRQ\u4fe1\u53f7\u3002\n  Neotron Pico\u65e8\u5728\u8fd0\u884cNeotron OS  - \u4ee5\u9508\u8680\u7684CP / M\u6216MS-DOS\u76f8\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u5f00\u653e\u5f0f\u786c\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5c06\u60a8\u7684Neotron Pico\u7f16\u7a0b\u5230\u51e0\u4e4e\u4efb\u4f55\u4e8b\u60c5\u3002\n  12\u4f4d\uff084096\u8272\uff09VGA\u89c6\u9891\u8f93\u51fa\u80fd\u591f\u4e3a640x480 @ 60 Hz 16-\u989c\u8272\u548c320x240 @ 60 Hz 256\u8272\u56fe\u5f62\u6a21\u5f0f\n     PICO\u4e0a\u7684\u6709\u9650I / O\uff08\u6211\u4eec\u4f7f\u7528\u7684\u662f\u89c6\u9891\u8f93\u51fa\u7684\u4e00\u534a\u53ef\u7528\u5f15\u811a\uff09\uff0c\u4f7f\u7528Microchip MCP23S17 SPI\u8fdb\u884c\u8865\u5145\u5230GPIO\u6269\u5c55\u5668\u548c\u516b\u8fdb\u5236\u7f13\u51b2\u533a\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605I / O\u6269\u5c55\u5668\u90e8\u5206\u3002\n   Raspberry PI Silicon RP2040\u5728\u4e00\u7cfb\u5217\u6807\u51c6\u5206\u8fa8\u7387\uff08\u5305\u62ec640x480 @ 60 Hz\uff09\u7684\u8303\u56f4\u5185\u4ea7\u751f12\u4f4dVGA\u89c6\u9891\u3002\n  \u8be5\u8bbe\u8ba1\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8c03\u6574\u4ee5\u5220\u9664TPF133A / THS7316\u89c6\u9891\u7f13\u51b2\u5668\u548cTPD7S019\u7535\u5e73\u79fb\u4f4d\u5668/\u8fc7\u6ee4\u5668\uff0c\u800c\u662f\u5982\u679c\u60a8\u559c\u6b22DVI\u8f93\u51fa\uff08\u4f7f\u7528HDMI\u8fde\u63a5\u5668\uff09\uff0c\u8bf7\u4f7f\u75281bitsquared DVI PMOD\u677f\u3002 \n\u97f3\u9891\u5b50\u7cfb\u7edf\u901a\u8fc7\u7ecf\u5178\u7684\u84dd\u8272/\u7eff\u8272/\u7c89\u7ea2\u8272\u4e09\u500d3.5mm TRS\u63d2\u5b54\u63d0\u4f9b16\u4f4d48 kHz\u7acb\u4f53\u58f0\u97f3\u9891\u3002\u8f93\u5165\u548c\u8f93\u51fa\u91cf\u53ef\u4ee5\u662f\u8f6f\u4ef6\u63a7\u5236\u7684\u3002\n \u989d\u5916\u7684\u7ebf\u8def\u7ea7\u522b\u8f93\u51fa\u5f15\u811a\u62a5\u5934\uff08\u4f8b\u5982\uff0c\u7528\u4e8e\u989d\u5916\u7684RCA\u97f3\u9891\u63d2\u5b54 - \u96643.5mm\u8033\u673a\u63d2\u5b54\u8f93\u51fa\u5916\uff09\n \u5185\u90e8\u7ebf\u8def\u7ea7\u522b\u8f93\u5165\u5f15\u811a\u62a5\u5934\uff08\u4f8b\u5982\uff0c\u5f533.5mm Line In-In-In-In-In-In-Insion\u65f6\u7981\u7528CD-ROM\u97f3\u9891\uff09\n  \u4e0a\u7535\u590d\u4f4d\u6392\u5e8f\uff0c\u8f6f\u5173\u673a\uff0c\u7535\u538b\u76d1\u63a7\u548cPS / 2\u63a5\u53e3\u7531\u5355\u72ec\u7684STM32F0 SOC\u5904\u7406\u3002\n   \u8bf7\u6ce8\u610f\uff0c\u5728\u4e0a\u8868\u4e2d\uff0cUART\u4fe1\u53f7\u88ab\u8fde\u63a5\u4e3a\u6570\u636e\u7ec8\u7aef\u8bbe\u5907\uff08DTE\uff09\u3002\n \u6b64\u8bbe\u8ba1\u8fd8\u5e94\u4e0e\u4ee5\u4e0bSOC\u517c\u5bb9\uff08\u867d\u7136\u8f6f\u4ef6\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff09\uff1a\n  \u8bf7\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709STM32\u5f15\u811a\u90fd\u662f5VV\uff0cPS / 2\u534f\u8bae\u662f\u4e00\u4e2a5V\u5f00\u8def\u96c6\u7535\u6781\u7cfb\u7edf\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u60a8\u9009\u62e9\u7684\u4efb\u4f55\u4e00\u90e8\u5206\u67095V\u5bb9\u5bbd\u7684\u5f15\u811a\uff08\u5728\u6570\u636e\u8868\u4e2d\u6807\u8bb0\u4e3aFTT\u6216FTT\uff09\u7684PS / 2\u4e2a\u4fe1\u53f7\u3002\u4e0a\u9762\u7684\u6240\u6709\u90e8\u5206\u90fd\u5e94\u8be5\u662f\u597d\u7684\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u6d4b\u8bd5\u8fc7\u3002\u5982\u679c\u4f60\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\uff01 \n\u56e0\u4e3a\u6211\u4eec\u5728Pico\u4e0a\u4f7f\u7528\u4e86\u8fd9\u4e48\u591a\u9488\u8fdb\u884c\u4e86\u97f3\u9891\u548c\u89c6\u9891\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u8db3\u591f\u7684\u5f15\u811a\u6765\u7528\u4e8e\u82af\u7247\u9009\u62e9\u7ebf\u3002\u6211\u4eec\u5e0c\u671b\u5728SPI\u603b\u7ebf\u4e0a\u901a\u4fe1\u7684\u6bcf\u4e2a\u8bbe\u5907\u5fc5\u987b\u5177\u6709\u552f\u4e00\u7684\u82af\u7247\u9009\u62e9\u7ebf\uff0c\u56e0\u6b64\u6709\u9650\u7684\u7ebf\u8def\u8868\u793a\u6211\u4eec\u53ea\u80fd\u5177\u6709\u6709\u9650\u6570\u91cf\u7684SPI\u8bbe\u5907\u3002\n \u4f46\u662f\uff0c\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u4f5c\u5f0a\u5e76\u4f7f\u7528Microchip MCP23S17 I / O\u6269\u5c55\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u5177\u670916\u4e2aGPIO\u5f15\u811a\u7684SPI\u5916\u56f4\u8bbe\u5907\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u53d1\u9001\u5230SPI\u6765\u63a7\u5236\u3002\u5b83\u8fd8\u5177\u6709IRQ\u8f93\u51fa\uff0c\u5f53\u8f93\u5165\u5f15\u811a\u5339\u914d\u67d0\u4e2a\u72b6\u6001\u65f6\uff0c\u5b83\u4e5f\u88ab\u7f16\u7a0b\u4e3a\u89e6\u53d1\u3002\n \u5f53Pico\u5b8c\u6210\u4e0e\u6211\u4eec\u7684Select SPI\u8bbe\u5907\u4ea4\u8c08\u65f6\uff0c\u95ee\u9898\u4f1a\u53d1\u751f - \u8fd9\u662f\u5982\u4f55\u544a\u8bc9MCP23S17\u91ca\u653e\u5f53\u524d\u82af\u7247\u9009\u62e9\uff0c\u6ca1\u6709SPI\u603b\u7ebf\u6d41\u91cf\u4e5f\u5c06\u8fdb\u5165\u5f53\u524d\u9009\u62e9\u7684\u6269\u5c55\u63d2\u69fd\uff1f\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u5177\u6709\u542f\u7528\u5f15\u811a\u7684\u7b80\u53558\u4f4d\u7f13\u51b2\u533a\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u8fd9\u5141\u8bb8PICO\u7acb\u5373\u65ad\u5f00\u6240\u6709\u82af\u7247\u9009\u62e9\u4fe1\u53f7\uff0c\u800c\u4e0d\u7ba1MCP23S17\u7684\u8f93\u51fa\u5982\u4f55\u3002\u4e00\u65e6\u7981\u7528\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ea\u4e0eMCP23S17\u548cPico\u6253\u6270\u5b83\u6765\u6307\u6325\u5b83\u9009\u62e9\u5bf9\u6211\u4eec\u611f\u5174\u8da3\u7684\u4e0b\u4e00\u4e2a\u82af\u7247\u9009\u62e9\u3002\n \u4e2d\u65ad\u4e5f\u901a\u8fc7MCP23S17\u5904\u7406\u3002\u6211\u4eec\u5c06\u8bbe\u5907\u914d\u7f6e\u4e3a\u63d0\u4f9bIRQ\uff08EDGE\uff0c\u9ad8\u7535\u5e73\uff09\uff0c\u6bcf\u5f53\u516b\u4e2aIRQ\u8f93\u5165\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u65f6\uff08\u7528\u4e8e\u8fb9\u7f18\u6216\u7535\u5e73\u7684\u53ef\u7f16\u7a0b\uff0c\u6709\u6548\u9ad8/\u4e0a\u5347\u6216\u4f4e/\u4e0b\u964d\uff09\u3002\u5f53PICO\u4eceMCP23S17\u63a5\u6536IRQ\u65f6\uff0c\u5b83\u5fc5\u987b\u8fdb\u884c\u5f15\u811a\u8bfb\u53d6\uff08\u4f7f\u7528SPI\uff09\u4ee5\u627e\u51fa\u54ea\u4e2a\u8bbe\u5907\u5b9e\u9645\u63d0\u51fa\u4e2d\u65ad\u3002\u6b64\u6a21\u578b\u7c7b\u4f3c\u4e8eIBM PC\u4e2d\u4f7f\u7528\u7684\u6a21\u578b - \u82f1\u7279\u5c148088\u5fc5\u987b\u901a\u8fc7ISA\u603b\u7ebf\u4e0eIntel 8259A\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u4ea4\u8c08\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e9b\u4e2d\u65ad\u6548\u679c - \u9664\u975e\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684CPU\u662f\u975e\u5e38\u5feb\u901f\u7684\u516c\u5171\u6c7d\u8f66\u5f88\u6162\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u4e2d\u65ad\u5ef6\u8fdf\u662f\uff06\uff0339; t\u975e\u5e38\u597d\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5982\u679c\u53d1\u751f\u4e86\u5927\u578bSPI\u4ea4\u6613\uff08\u4f8b\u5982\u4eceSD\u5361\u4f20\u8f93512\u5b57\u8282\u5757\uff09\uff0c\u5219\u5728\u4e2d\u65ad\u89e6\u53d1\u65f6\uff0cPICO\u5c06\u5728\u53ef\u4ee5\u5728\u53ef\u4ee5\u4e0eMCP23S17\u901a\u4fe1\u4ee5\u5904\u7406IRQ\u4e4b\u524d\u5b8c\u6210\u3002\u6216\u8005\u5b83\u53ef\u4ee5\u8ba9SPI\u4ea4\u6613\u4e2d\u9014\u4e22\u5f03\u5e76\u7a0d\u540e\u91cd\u65b0\u5c1d\u8bd5\uff08\u5982\u679c\u60a8\u7684\u6269\u5c55\u8bbe\u5907\u53ef\u4ee5\u5bb9\u5fcd\u8fd9\u79cd\u7c97\u9c81\uff09\u3002\n + ------ + + ----- + | | ----------\u8f93\u51fa_\u672c--------------\u548cgt; | || | | || | + ---------- + | || | | | | || | | | ---- CS0 ---\uff06gt; | | ---- CS0 ----------------------------- + | | | | | | || | | | ---- CS1 ---\uff06gt; | B | ---- CS1 --------------------------- + || | | | | U | | || | | | ---- CS2 ---\uff06gt; | F | ---- CS2 -------------------------- + | || | | | | F | | | || | | | ---- CS3 ---\uff06gt; | E | ---- CS3 ------------------------ | || | | | | r | | | | || | | | ---- CS4 ---\uff06gt; | | ---- CS4 ------------------ + | | | || | | | | | | | | | || | | | ---- CS5 ---\uff06gt; | | ---- CS5 -------------- + | | | | || | | | | | | | | | | || | | | ---- CS6 ---\uff06gt; | | ---- CS6 ---------- + | | | | | || pico | | MCP23S17 | | | | | | | | | || | | | ---- CS7 ---\uff06gt; | | ---- CS7 ------ + | | | | | | || | | | + ----- + v v V V V V | | | | + --- + --- + --- --- + --- + --- + --- + --- + --- + | | ---- CS ----\uff06gt; | | | s | s | s | s | s | s | s | s || |\uff06lt; --- Irq ---- | | | l | l | l | l | l | l | l | L || |\uff06lt; === spi ===\uff06gt; | |\uff06lt; ============ spi ============\uff06gt; | O | O | O | O | O | O | O | O || | | | | T | T | T | T | T | T | T | T || | | | | | | | | | | | || | | | | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 || | | | + --- + --- + --- --- + --- + --- + --- + --- + --- + | | | |\uff06lt; --- Irq7 ---------------------- + | | | | | | || | | | | | | | | | || | | |\uff06lt; --- Irq6 ------------------------- + | | | | | || | | | | | | | | || | | |\uff06lt; --- Irq5 --------------------------- + | | | | || | | | | | | | || | | |\uff06lt; --- Irq4 ----------------------------- + | | | || | | | | | | || | | |\uff06lt; --- Irq3 --------------------------------- + | | || | | | | | || | | |\uff06lt; --- Irq2 ------------------------------------ + | || | | | | || | | |\uff06lt; --- Irq1 -------------------------------------- ---- + || | | | || | | |\uff06lt; --- Irq0 ----------------------------------- -------- ++ ------ + + ---------- +\n  \u4e03\u4e2a\u6269\u5c55\u5957\u63a5\u5b57\u5141\u8bb8\u60a8\u5728\u4ee5\u540e\u6dfb\u52a0\u57fa\u4e8eI\u00b2C\u6216SPI\u7684\u8bbe\u5907\u3002\u6bcf\u4e2a\u90fd\u63d0\u4f9b\u5355\u4e2a\u82af\u7247\u9009\u62e9\u548c\u5355\u4e2aIRQ\u7ebf - \u4e3b\u677f\u8bbe\u8ba1\u5e94\u786e\u4fdd\u6bcf\u4e2a\u63d2\u5ea7\u4e3a\u6bcf\u4e2a\u5957\u63a5\u5b57\u83b7\u5f97\u552f\u4e00\u7684\u4fe1\u53f7\u3002\u6bcf\u4e2a\u6269\u5c55\u8bbe\u5907\u8fd8\u5e94\u5305\u542bAT24C256\u6216\u7c7b\u4f3cEEPROM\u8bbe\u5907\u3002\u4e3a\u4e86\u5141\u8bb8\u626b\u63cf\u8fd9\u4e9bEEPROM\u5668\u4ef6\uff0c\u6bcf\u4e2a\u63d2\u69fd\u8fd8\u5305\u542b\u4e09\u4e2aEEPROM_ADDRESS\u5f15\u811a\uff0c\u4ee5\u552f\u4e00\u7684\u7ec4\u5408\u7ed1\u5b9a\u5230VCC\u6216GND\u3002\u8fd9\u4e9b\u5e94\u901a\u8fc7AT24C256\u7684EEPROM\u5730\u5740\u7ebf\u8fde\u63a5\uff0c\u4ece\u800c\u786e\u4fdd\u6bcf\u4e2a\u6269\u5c55\u5361\u5728\u552f\u4e00\u5730\u5740 -  0x50\u4e0a\u7684EEPROM\u5728Slot 0\u4e0a\u4ee5\u6700\u5927\u53ef\u80fd\u76840x57\u7528\u4e8e\u63d2\u69fd7.\u5728\u5176\u4e2d\u60a8\u7684\u7535\u8def\u677f\u8bbe\u5907\u7684\u8bbe\u5907\uff0c\u60a8\u5e94\u8be5\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u5b89\u88c5AT24C256 EEPROM\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u53d1\u73b0\u677f\u8f7d\u8bbe\u5907\uff0c\u5c31\u50cf\u5b83\u4eec\u5728\u6269\u5c55\u5361\u4e0a\u4e00\u6837\u3002\n \u6269\u5c55\u63d2\u69fd\u662f\u4e00\u4e2a\u7b80\u5355\u76842x10\u5934\u3002\u6211\u4eec\u5efa\u8bae\u4f7f\u7528TE\u5361\u8fb9\u7f18\u8fde\u63a5\u5668\uff0c\u4f46\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u540c\u6837\u4f7f\u7528\u4e24\u4e2a1x10\u5f15\u811a\u5934\u3002 \nSPI_COPI 1 2 GND SPI_CIPO 3 4 GND SPI_CLK 5 6 GND\u301cSPI_CS 7 8\u301cIRQ I2C_SDA 9 10 I2C_SCL EEPROM_ADDR0 11 12 EEPROM_ADDR1 EEPROM_ADDR2 13 14\u301c\u590d\u4f4d5V 15 16 5V 3V3 17 17 3V3 GND 19 20 GND\n \u56db\u4e2a\u6269\u5c55\u63d2\u69fd\u4e0eATX\u6848\u4f8b\u6269\u5c55\u62ec\u53f7\u7ed1\u5b9a\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528\u5e26\u6709\u5916\u90e8\u8fde\u63a5\u5668\u7684\u5361\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u662f\u5bf9\u9f50\u7684\uff06\uff0334; PCI\u65b9\u5f0f\uff06\uff0334;\u4e0e\u8fdc\u79bb\u7535\u8def\u677f\u7684\u7ec4\u4ef6\uff06\uff0339; s i / o\u533a\u57df\uff0c\u800c\u4e0d\u662f\uff06\uff0334; isa words and\uff0334;\u8fd9\u5c06\u5177\u6709\u9762\u5bf9I / O\u533a\u57df\u7684\u7ec4\u4ef6\u3002\u53e6\u5916\u4e09\u4e2a\u81a8\u80c0\u69fd\u53ef\u7528\u4e8e\u5185\u90e8\u4f7f\u7528\u3002\n  \u4e0b\u9762\u7ed9\u51fa\u7684\u6240\u6709I\u00b2C\u8bbe\u5907\u5730\u5740\u662f7\u4f4d\u503c\u3002\u6d88\u606f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f\u63a7\u5236\u5b57\u8282;\u8fd9\u5305\u62ec\u4f4d\u4e8e\u4e03\u4f4d\u7684\u8bbe\u5907\u5730\u5740\uff0c\u5e95\u90e8\u7684\u989d\u5916\u6bd4\u7279\u8868\u793a\u8bfb\u53d6\uff081\uff09\u6216\u5199\u5165\uff080\uff09\u3002\n \u7ed9\u51fa\u7684\u5b58\u50a8\u5668\u5730\u5740\u662f\u7528\u4e8e\u8bbf\u95eeI\u00b2C\u8bbe\u5907\u7684\u5185\u5bb9\u76848\u4f4d\u503c\uff0c\u901a\u5e38\u4f5c\u4e3a\u6d88\u606f\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5b57\u8282\u63d0\u4f9b\u3002\n      Mikro Electoronika\u5355\u51fb\u9002\u914d\u5668\uff0c\u5141\u8bb8\u5b89\u88c5\u8bb8\u591a\u70b9\u51fb\u677f\u8303\u56f4\n    ISA\u9002\u914d\u5361\uff08\u4ee5\u53f3\u89d2\u5ea6\u4e3a\u5355\u4f4d\uff0c\u5373\u5e73\u884c\u4e8e\u57fa\u677f\uff09 - \u7b80\u5355\u7684\u5fae\u63a7\u5236\u5668\u5e94\u80fd\u591f\u57288 MHz\u76848 MHz\u4e2d\u51fb\u4e2dISA\u603b\u7ebf\uff0c\u5e76\u4e3aNeotron\u6269\u5c55\u63d2\u69fd\u63d0\u4f9bSPI\u5916\u8bbe\u63a5\u53e3\n IDE\u63a5\u53e3\u5361\uff0c\u5141\u8bb8\u4f7f\u752840\u9488IDE\u786c\u76d8\u9a71\u52a8\u5668\u548cCD-ROM\u9a71\u52a8\u5668 - \u8fd9\u5c06\u4e0eISA\u603b\u7ebf\u9002\u914d\u5668\u975e\u5e38\u76f8\u4f3c \n\u8f6f\u76d8\u9a71\u52a8\u5668\u63a7\u5236\u5668\u5361 - \u4f7f\u7528ESPI Super I / O\u82af\u7247\uff0c\u6216\u6839\u636eISA\u9002\u914d\u5668\u8fde\u63a5\u4f20\u7edfISA\u603b\u7ebf\u8f6f\u4ef6\u63a7\u5236\u5668  \u7528\u4e8e\u7b2c\u4e8c\u76d1\u89c6\u5668\u8f93\u51fa\u7684\u89c6\u9891\u5361\uff0c\u6216\u8bb8\u57fa\u4e8eVGATONIC\u4e2d\u4f7f\u7528\u7684CPLD  $ git config  -  global filter.kicad_project.clean\uff06\uff0334; sed -e\uff06\uff0339; s / ^\u66f4\u65b0=\u3002* $ /\u66f4\u65b0=\u65e5\u671f/\uff06\uff0339;\uff06\uff0334; $ git config  -  global filter .kicad_project.smude cat $ git config  -  global filter.kicad_sch.clan\uff06\uff0334; sed -e\uff06\uff0339; s /\uff03\uff08pwr | flg\uff09[0-9] + /\uff03\\ 1\uff1f/\uff06\uff0339 ;\uff06\uff0334; $ git config  -  global filter.kicad_sch.smudge cat  \u8bf7\u6ce8\u610f\uff0cKICAD /\u578b\u53f7\u76ee\u5f55\u4e2d\u63d0\u4f9b\u7684\u578b\u53f7\u6765\u81ea\u5404\u79cd\u5236\u9020\u5546\u3002 \u4f7f\u7528\u6a21\u578b\u7684\u6761\u6b3e\u548c\u6761\u4ef6\u7531\u539f\u59cb\u5236\u9020\u5546/\u4f5c\u8005\u6307\u5b9a\u3002  \u9664\u975e\u60a8\u660e\u786e\u8bf4\u660e\u5426\u5219\uff0c\u9664\u4e86Apache-2.0\u8bb8\u53ef\u8bc1\u4e2d\u5b9a\u4e49\u7684\uff0c\u5426\u5219\u6545\u610f\u63d0\u4ea4\u60a8\u5728\u5de5\u4f5c\u4e2d\u7eb3\u5165\u5de5\u4f5c\u7684\u4efb\u4f55\u8d21\u732e\uff0c\u5747\u5e94\u5982\u4e0a\u6240\u8ff0\uff0c\u65e0\u9700\u4efb\u4f55\u5176\u4ed6\u6761\u6b3e\u6216\u6761\u4ef6\u3002 ", "note_en": "The Neotron Pico is based around the idea of the  Neotron-32, but using a low-cost Raspberry Pi Pico instead of a Texas Instuments Tiva-C Launchpad. It also stretches out to full micro-ATX size, and adds more expansion slots so that you can easily design and add your own peripherals.\n   The Raspberry Pi Pico is the core of the Neotron Pico. It uses PIO statemachines to generate 12-bit Super VGA video, and digital 16 bit 48 kHz stereo audio. It also has both I\u00b2C and SPI buses. SPI chipselects and IRQs are handled by an SPI-to-GPIO expander. This provides eight chip-selects and eight IRQs, to support up to eight expansion slots or peripherals. The eight chip-selects are gated with a tri-state bus transceiver, allowing the Pico to talk to either the I/O exander, or the selected expansion slot. The board has an SD Card fitted in the &#39;Slot 1&#39; position, and the Board Management Controller in the &#39;Slot 0&#39; position, leaving &#39;Slot 2&#39; through to &#39;Slot 7&#39; available for expansion. Each expansion slot has both I\u00b2C and SPI, along with unique chip-select and IRQ signals.\n  The Neotron Pico is designed to run the Neotron OS - a CP/M or MS-DOS alike OS written in Rust. But, being open-hardware, you can program your Neotron Pico to do pretty much anything.\n  12-bit (4096 colour) VGA video output Capable of 640x480 @ 60 Hz 16-colour and 320x240 @ 60 Hz 256-colour graphics modes\n     The limited I/O on the Pico (we are using half the available pins just for the video output) is supplemented using a Microchip MCP23S17 SPI to GPIO expander, and an octal buffer. See the  I/O Expanders section for more details.\n   The Raspberry Pi Silicon RP2040 generates 12-bit VGA video at a range of standard resolutions (including 640x480 @ 60 Hz).\n  The design could easily be adapted to remove the TPF133A/THS7316 video buffer and the TPD7S019 level shifter/filter, and instead use the  1BitSquared DVI PMOD board if you prefer a DVI output (using an HDMI connector).\n  The audio subsystem offers 16-bit 48 kHz stereo audio in and out through a classic blue/green/pink triple 3.5mm TRS jack. Input and Output volume can be software controlled.\n Extra line-level output pin header (e.g. for additional RCA audio jacks - operates in addition to 3.5mm headphone jack output)\n Internal line-level input pin header (e.g. for CD-ROM audio - disabled when 3.5mm line-in jack in-use)\n  Power-on Reset sequencing, soft shutdown, voltage monitoring and PS/2 interfacing is handled by a separate STM32F0 SoC.\n   Note that in the above table, the UART signals are wired as  Data Terminal Equipment (DTE).\n This design should also be pin-compatible with the following SoCs (although the software may need recompiling):\n  Note that not all STM32 pins are 5V-tolerant, and the PS/2 protocol is a 5V open-collector system, so ensure that whichever part you pick has 5V-tolerant pins (marked  FT or  FTt in the datasheet) for the PS/2 signals. All of the parts above  should be OK, but they haven&#39;t been tested. Let us know if you try one!\n      Because we used so many pins on the Pico for Audio and Video, we don&#39;t have enough pins to use for  Chip Select lines. Each device we wish to communicate with on the SPI bus must have a unique chip select line and so have limited lines means we could only have a limited number of SPI devices.\n However, in this design, we cheat and use a Microchip MCP23S17 I/O expander. This is an SPI peripheral with 16 GPIO pins that can be controlled by sending it commands over SPI. It also has an IRQ output which be programmed to fire when the input pins match a certain state.\n The problem would come when the Pico has finished talking to our select SPI device - how does it tell the MCP23S17 to release the current chip select, without the SPI bus traffic also going to the currently selected expansion slot? We resolve this by using a simple 8-bit buffer with an enable pin. This allows the Pico to disconnect all of the chip select signals at once, regardless of the output of the MCP23S17. Once this is disabled, we know we are talking to only the MCP23S17 and the Pico can command it to select the next chip select of interest to us.\n Interrupts are also processed through the MCP23S17. We configure the device to provide an IRQ (edge, active low) whenever any of the eight IRQ inputs are active (programmable for edge or level, active high/rising or low/falling). When the Pico receives an IRQ from the MCP23S17, it must do a read of the pins (using SPI) to find out which device actually raised the interrupt. This model is similar to that used in the IBM PC - where the Intel 8088 must talk to an Intel 8259A programmable interrupt controller over the ISA bus to find out which interrupt was raised - except that in our case, our CPU is very fast and our bus is pretty slow, so our interrupt latency isn&#39;t very good. Worse, if there is a big SPI transaction happening (such as transferring a 512 byte block from an SD card) when an interrupt fires, the Pico will have to wait for that to complete before it can talk to the MCP23S17 to handle the IRQ. That or it could just drop the SPI transaction mid-way through and re-try it later (if your expansion device can tolerate such rudeness).\n +------+ +-----+| |----------OUTPUT_EN--------------&gt;| || | | || | +----------+ | || | | | | || | | |----CS0---&gt;| |----CS0----------------------------------+| | | | | | || | | |----CS1---&gt;| B |----CS1------------------------------+ || | | | | U | | || | | |----CS2---&gt;| F |----CS2--------------------------+ | || | | | | F | | | || | | |----CS3---&gt;| E |----CS3----------------------+ | | || | | | | R | | | | || | | |----CS4---&gt;| |----CS4------------------+ | | | || | | | | | | | | | || | | |----CS5---&gt;| |----CS5--------------+ | | | | || | | | | | | | | | | || | | |----CS6---&gt;| |----CS6----------+ | | | | | || Pico | | MCP23S17 | | | | | | | | | || | | |----CS7---&gt;| |----CS7------+ | | | | | | || | | | +-----+ v v v v v v v v| | | | +---+---+---+---+---+---+---+---+| |----CS----&gt;| | | S | S | S | S | S | S | S | S || |&lt;---IRQ----| | | l | l | l | l | l | l | l | l || |&lt;===SPI===&gt;| |&lt;============SPI============&gt;| o | o | o | o | o | o | o | o || | | | | t | t | t | t | t | t | t | t || | | | | | | | | | | | || | | | | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 || | | | +---+---+---+---+---+---+---+---+| | | |&lt;---IRQ7-----------------------+ | | | | | | || | | | | | | | | | || | | |&lt;---IRQ6---------------------------+ | | | | | || | | | | | | | | || | | |&lt;---IRQ5-------------------------------+ | | | | || | | | | | | | || | | |&lt;---IRQ4-----------------------------------+ | | | || | | | | | | || | | |&lt;---IRQ3---------------------------------------+ | | || | | | | | || | | |&lt;---IRQ2-------------------------------------------+ | || | | | | || | | |&lt;---IRQ1-----------------------------------------------+ || | | | || | | |&lt;---IRQ0---------------------------------------------------++------+ +----------+\n  The seven expansion sockets allow you to add on I\u00b2C or SPI based devices at a later date. Each provides a single chip-select and a single IRQ line - the motherboard design should ensure each socket gets a unique signal for each of these. Each expansion device should also contain a AT24C256 or similar EEPROM device. To allow these EEPROM devices to be scanned, each slot also contains three  EEPROM_ADDRESS pins, tied to Vcc or GND in a unique combination. These should be connected through to the EEPROM address lines on your AT24C256, thus ensuring that each expansion card has its EEPROM at a unique address - 0x50 on Slot 0 through to a maximum possible 0x57 for Slot 7. Where your board has on-board devices, you should fit an AT24C256 EEPROM for each device so that the on-board devices can be discovered, exactly as if they were on an expansion card.\n The expansion slot is a simple 2x10 header. We suggest the use of a TE card-edge connector, but you could equally use two 1x10 pin-headers if desired.\n  SPI_COPI 1 2 GND SPI_CIPO 3 4 GND SPI_CLK 5 6 GND ~SPI_CS 7 8 ~IRQ I2C_SDA 9 10 I2C_SCL EEPROM_ADDR0 11 12 EEPROM_ADDR1 EEPROM_ADDR2 13 14 ~RESET 5V 15 16 5V 3V3 17 18 3V3 GND 19 20 GND\n Four expansion slots line up with the ATX case expansion brackets, allowing you to use cards with external connectors. Note that these are aligned the &#34;PCI way around&#34; with components facing away from the board&#39;s I/O area, rather than the &#34;ISA way around&#34; which would have the components facing the I/O area. A further three of the expansion slots are available for internal use only.\n  All I\u00b2C device address given below are 7-bit values. The first byte in a message is the  control byte; this is comprised of the device address in the top seven bits, and an extra bit at the bottom to indicate read (1) or write (0).\n The memory addresses given are 8-bit values used to access the contents of an I\u00b2C device, and are usually supplied as the second byte in a message.\n      A Mikro Electronika Click adaptor, allow many of the range of  Click boards to be fitted\n    An ISA adaptor card (taking an ISA card at right-angles, i.e. parallel to the base board) - a simple microcontroller should be able to bit-bang the ISA bus at 8 MHz and offer an SPI peripheral interface to the Neotron Expansion Slot\n An IDE interface card, allowing 40-pin IDE Hard Disk Drives and CD-ROM drives to be used - this will be quite similar to an ISA bus adaptor\n A floppy drive controller card - either using an eSPI Super I/O chip, or connecting a legacy ISA bus floppy controller as per the ISA adaptor\n A video card for a second monitor output, perhaps based on the CPLD used in the  VGAtonic\n     $ git config --global filter.kicad_project.clean &#34;sed -E &#39;s/^update=.*$/update=Date/&#39;&#34;$ git config --global filter.kicad_project.smudge cat$ git config --global filter.kicad_sch.clean &#34;sed -E &#39;s/#(PWR|FLG)[0-9]+/#\\1?/&#39;&#34;$ git config --global filter.kicad_sch.smudge cat\n      Please note that the models provided in the  Kicad/Models directory are from various manufacturers. Terms and conditions for the use of the models are as specified by the original manufacturer/author.\n  Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.", "posttime": "2021-06-26 15:09:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,pico,spi", "title": "Neotron Pico\uff1a\u7531Raspberry Pi Pico\u63d0\u4f9b\u52a8\u529b\uff0c\u4ee5\u5fae\u578bATX\u5f62\u72b6\u56e0\u5b50 ", "title_en": "Neotron Pico: powered by the Raspberry Pi Pico, in a micro-ATX form-factor", "transed": 1, "url": "https://github.com/Neotron-Compute/Neotron-Pico", "via": "", "real_tags": ["pico", "spi"]}, {"category": "", "categoryclass": "", "imagename": "ec4c30c6804e760578fc6c6029438909.jpg", "infoid": 1068391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\n\u5982\u679c\u6709\u4e00\u6b21\u4f1a\u8bae\uff0c\u5176\u4e2d\u5927\u578b\u7ba1\u7406\u4eba\u5458\u8ba8\u8bba\u5e76\u91cd\u89c6\u4e86\u6240\u6709\u9009\u9879\uff0c\u5219\u8be5\u4f1a\u8bae\u7684\u7968\u636e\u5c1a\u672a\u516c\u5f00\u3002\u7136\u800c\uff0c\u82cf\u8054\u4eba\u51b3\u5b9a\u5c1d\u8bd5\u4fee\u7406\u4efb\u52a1\u7684\u4e1c\u897f\u3002\u8fd9\u5c06\u610f\u5473\u7740\u5728\u5212\u4f24\u4e2d\u91cd\u5199\u5173\u4e8e\u5bf9\u63a5\u7a0b\u5e8f\u7684\u4e66\u7c4d\uff0c\u5e76\u5e0c\u671b\u5728\u6c9f\u901a\u7684\u540c\u65f6\u5728\u8f66\u7ad9\u4e0a\u653e\u5f03\u522b\u6709\u9519\u8bef\uff0c\u56e0\u4e3a\u5982\u679c\u522b\u7684\u4e1c\u897f\u51fa\u9519\u4e86\uff0c\u4fee\u590d\u673a\u7ec4\u4eba\u5458\u53ef\u80fd\u65e0\u6cd5\u5904\u7406\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u5927\u80c6\u7684\u4e3e\u52a8\u3002\n  \u7ef4\u4fee\u7279\u6d3e\u56e2\u7684\u7b2c\u4e00\u9636\u4e1a\u52a1\u662f\u5f04\u6e05\u695a\u4ed6\u4eec\u5c06\u5982\u4f55\u5230\u8fbe\u8f66\u7ad9\u3002\u5bf9\u4e8e\u5728\u66f4\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u66f4\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u8c46\u5b50\uff08\u7528\u4e8e\u6e21\u8fc7\u798f\u65af\u548c\u7a7a\u95f4\u7ad9\u76843\u4e2a\u5ea7\u4f4d\u8239\uff09\u5c06\u901a\u8fc7\u7279\u6d3e\u56e2\u63a7\u5236\uff08TSUP\uff09\u5728\u8f68\u9053\u524d\u51e0\u6b21\u4ece\u8f66\u7ad9\u63a5\u6536\u6765\u81ea\u7ad9\u7684\u4fe1\u606f\u8239\u5458\u5c06\u53ef\u89c1\u3002\u8be5\u901a\u4fe1\u5c06\u5305\u542b\u6709\u5173\u7a7a\u95f4\u7ad9\u8f68\u9053\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u5de5\u827a\u53ef\u4ee5\u7ed8\u5236\u4e00\u4e2aRendezvous\u8f68\u9053\u3002\u4e00\u65e6\u4e24\u8258\u5de5\u827a\u5206\u5f0020-25km\uff0c\u5c06\u5728\u8f66\u7ad9\u548c\u8239\u8236\u4e4b\u95f4\u5efa\u7acb\u76f4\u63a5\u7684\u901a\u4fe1\u7ebf\uff0c\u81ea\u52a8\u5316\u7cfb\u7edf\u5c06\u628a\u4e24\u4e2a\u5de5\u827a\u4e00\u8d77\u5e26\u5230\u4e00\u8d77\u5e76\u5b8c\u6210\u5bf9\u63a5\u3002[3]\n  \u867d\u7136\u6240\u6709Soyuz\u98de\u884c\u5458\u90fd\u63a5\u53d7\u4e86\u8bad\u7ec3\u8fdb\u884c\u624b\u52a8\u5bf9\u63a5\uff0c\u4f46\u81ea\u52a8\u5316\u7cfb\u7edf\u5f88\u5c11\u4f1a\u5931\u8d25\u3002\u5728\u90a3\u4e9b\u7f55\u89c1\u7684\u5931\u8d25\u4e2d\uff0c\u6700\u7cdf\u7cd5\u7684\u662f1982\u5e746\u6708\u5728Soyuz T-6\u4e0a\uff0c\u5f53\u8ba1\u7b97\u673a\u6545\u969c\u505c\u6b62\u4e86\u4ece\u8f66\u7ad9\u7684\u81ea\u52a8\u5bf9\u63a5\u8fc7\u7a0b\u4e2d\u505c\u6b62\u4e86\u81ea\u52a8\u5bf9\u63a5\u8fc7\u7a0b\u3002 Vladimir Dzhanibeskov\u7acb\u5373\u63a5\u7ba1\u4e86\u63a7\u5236\uff0c\u5e76\u63d0\u524d14\u5206\u949f\u5c06\u4ed6\u7684Soyuz\u4e0eSalyut 7\u520614\u5206\u949f[4]\u3002\u5f53\u7136\uff0cDzhanibekov\u662f\u98de\u884c\u5458\u62ef\u6551Salyut 7\u7684\u4efb\u4f55\u62df\u8bae\u4efb\u52a1\u7684\u4e3b\u8981\u5019\u9009\u4eba\u3002\n \u5fc5\u987b\u5f00\u53d1\u4e00\u4e2a\u5b8c\u5168\u65b0\u7684\u5bf9\u63a5\u6280\u672f\uff0c\u8fd9\u662f\u5728\u6807\u9898\u4e3a\u201c\u4e0e\u975e\u5408\u4f5c\u5bf9\u8c61\u7684\u5bf9\u63a5\u201d\u7684\u9879\u76ee\u4e0b\u5b8c\u6210\u7684\u3002 [5]\u5c06\u4f7f\u7528\u57fa\u4e8e\u5730\u57fa\u96f7\u8fbe\u6d4b\u91cf\u7ad9\u7684\u8f68\u9053\uff0c\u5e76\u4e14\u8be5\u4fe1\u606f\u5c06\u4f20\u9001\u5230\u8c46\u5b50\u5b50\uff0c\u7136\u540e\u5c06\u8be5\u4fe1\u606f\u7ed8\u5236\u4e86\u4e00\u4e2aRendezvous\u8bfe\u7a0b\u3002\u76ee\u6807\u662f\u5728\u8f66\u7ad9\u76845\u516c\u91cc\u5185\u83b7\u5f97\u8239\u8236\uff0c\u4ece\u54ea\u4e00\u70b9\u89c6\u4e3a\u624b\u52a8\u5bf9\u63a5\u3002 [3]\u8d23\u4efb\u53d1\u5c55\u8fd9\u4e9b\u65b0\u6280\u672f\u7684\u4eba\u7684\u7ed3\u8bba\u662f\uff0c\u5728\u5bf9\u8c46\u82b1\u7684\u9002\u5f53\u4fee\u6539\u540e\uff0c\u4f7f\u547d\u6210\u529f\u7684\u51e0\u7387\u4e3a70\uff05\u81f380\uff05\u3002 [2]\uff0c[3]\u82cf\u8054\u653f\u5e9c\u63a5\u53d7\u4e86\u98ce\u9669\uff0c\u8ba4\u4e3a\u8f66\u7ad9\u592a\u6709\u4ef7\u503c\uff0c\u53ea\u662f\u8ba9\u5b83\u4ece\u4e0d\u53d7\u63a7\u5236\u7684\u8f68\u9053\u4e0b\u964d\u3002\n    \u5bf9\u8c46\u8150\u7684\u4fee\u6539\u5f00\u59cb\u4e86\u3002\u81ea\u52a8\u5bf9\u63a5\u7cfb\u7edf\u5c06\u5b8c\u5168\u9664\u53bb\uff0c\u5e76\u5b89\u88c5\u5728\u9a7e\u9a76\u8231\u4e2d\u7684\u6fc0\u5149\u6d4b\u8ddd\u4eea\uff0c\u4ee5\u5e2e\u52a9\u673a\u7ec4\u786e\u5b9a\u5b83\u4eec\u7684\u8ddd\u79bb\u548c\u63a5\u8fd1\u901f\u7387\u3002\u8239\u5458\u8fd8\u5c06\u5e26\u6765\u591c\u89c6\u62a4\u76ee\u955c\uff0c\u4ee5\u9632\u4ed6\u4eec\u5728\u591c\u95f4\u4e0e\u8f66\u7ad9\u505c\u9760\u3002\u8239\u4e0a\u7684\u8239\u8236\u7684\u7b2c\u4e09\u5ea7\u5ea7\u4f4d\u88ab\u5220\u9664\uff0c\u5982\u98df\u7269\uff0c\u989d\u5916\u8bc1\u660e\u662f\u6279\u5224\u6027\u7684\u6c34\uff0c\u989d\u5916\u7528\u54c1\u88ab\u5e26\u5165\u8239\u4e0a\u3002\u901a\u8fc7\u62c6\u5378\u81ea\u52a8\u7cfb\u7edf\u548c\u7b2c\u4e09\u6905\u53ef\u633d\u6551\u7684\u91cd\u91cf\u7528\u4e8e\u5c06\u63a8\u8fdb\u5242\u7f50\u586b\u5145\u5230\u5176\u6700\u5927\u53ef\u80fd\u6c34\u5e73\u3002 [1]\uff0c[3]\uff0c[11]\n  \u5728\u9009\u62e9\u98de\u884c\u673a\u7ec4\u4eba\u5458\u65f6\uff0c\u4e24\u4ef6\u4e8b\u975e\u5e38\u91cd\u8981\u3002\u9996\u5148\uff0c\u98de\u884c\u5458\u5e94\u8be5\u6709\u7ecf\u9a8c\u5728\u8f68\u9053\u4e0a\u8fdb\u884c\u624b\u52a8\u5bf9\u63a5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u6a21\u62df\u5668\u4e2d\uff0c\u5176\u6b21\uff0c\u98de\u884c\u5de5\u7a0b\u5e08\u9700\u8981\u975e\u5e38\u719f\u6089Salyut 7\u7684\u7cfb\u7edf\u3002\u53ea\u6709\u4e09\u4e2a\u5b87\u822a\u5458\u5728\u8f68\u9053\u4e0a\u5b8c\u6210\u4e86\u624b\u52a8\u5bf9\u63a5\u3002 Leonid Kizim\uff0cYuri Malyshev\u548cVladimir Dzhanibekov\u3002 Kizim\u6700\u8fd1\u624d\u4ece\u6301\u7eed\u65f6\u95f4\u8fd4\u56de\u5230Salyut 7\u7684\u957f\u671f\u4f7f\u547d\uff0c\u5e76\u4e14\u4ecd\u7136\u4ece\u4ed6\u7684\u822a\u5929\u98de\u884c\u4e2d\u8fdb\u884c\u5eb7\u590d\uff0c\u8fd9\u5c06\u4ed6\u4f5c\u4e3a\u53ef\u80fd\u7684\u5019\u9009\u4eba\u7edf\u6cbb\u3002 Malyshev\u7684\u822a\u5929\u98de\u884c\u7ecf\u9a8c\u6709\u9650\uff0c\u6ca1\u6709\u63a5\u53d7\u8fc7\u8f66\u8f86\u6d3b\u52a8\uff08EVA\u6216SPACEWALK\uff09\uff0c\u8fd9\u662f\u5728\u4ee5\u540e\u7684\u4efb\u52a1\u4e2d\u6765\u589e\u52a0\u8be5\u8f66\u7ad9\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86\u7a7a\u95f4\u7ad9\u7684\u5eb7\u590d\u8fdb\u5c55\u987a\u5229\u3002[1]\n \u8fd9\u7559\u4e0b\u4e86Dzhanibekov\uff0c\u4ed6\u4eec\u6bcf\u6b21\u90fd\u5728\u56db\u6b21\u98de\u884c\u56db\u6b21\uff0c\u4f46\u6bcf\u6b21\u8bad\u7ec3\u957f\u671f\u4efb\u52a1\u548cEVA\u8bad\u7ec3\u3002\u7136\u800c\uff0c\u4ed6\u53d7\u5230\u4e86\u533b\u5b66\u754c\u7684\u957f\u671f\u822a\u73ed\u7684\u9650\u5236\u3002\u4f4d\u4e8e\u7279\u6d3e\u56e2\u6307\u6325\u5b98\u7684\u77ed\u540d\u5355\u7684\u9876\u7aef\uff0cDzhanibeskov\u5f88\u5feb\u88ab\u9001\u8fdb\u4e86\u533b\u751f\u7684\u7167\u987e\uff0c\u5728\u51e0\u4e2a\u661f\u671f\u7684\u533b\u7597\u6d4b\u8bd5\u548c\u8bc4\u4f30\u540e\uff0c\u6e05\u9664\u4e86\u4ed6\u7684\u98de\u884c\u6301\u7eed\u4e0d\u8d85\u8fc7100\u5929\u3002 [1] \n\u4e3a\u4e86\u6ee1\u8db3\u98de\u884c\u5de5\u7a0b\u5e08\u7684\u4f5c\u7528\uff0c\u5217\u8868\u751a\u81f3\u66f4\u77ed\uff1a\u53ea\u6709\u4e00\u4e2a\u4eba\u3002\u7ef4\u514b\u591a\u00b7\u8428\u7ef4\u57fa\u66fe\u5728\u8428\u83b1\u727974\u5929\u7684\u4efb\u52a1\u524d\u98de\u8fc7\u4e00\u6b21\u3002\u5728\u8be5\u7279\u6d3e\u56e2\u671f\u95f4\uff0c\u4ed6\u5c06\u4e3b\u6301\u4eba\u4e3e\u529e\u5230Dzhanibskov\u548c\u8499\u53e4\u7684\u7b2c\u4e00\u4e2a\u5b87\u822a\u5458\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8bbf\u95ee\u4e86Soyuz 39\u7684\u7535\u53f0\u3002\u6b64\u5916\uff0c\u4ed6\u5df2\u7ecf\u5728\u4e0b\u4e00\u4e2a\u57f9\u8bad\u8fc7\u7a0b\u4e2d\u5bf9Salyut 7\u7684\u957f\u671f\u4f7f\u547d\uff0c\u5df2\u5b89\u6392\u4e8e1985\u5e745\u670815\u65e5\u63a8\u51fa\u3002[1]\n \u52303\u6708\u4e2d\u65ec\uff0c\u8239\u5458\u5df2\u88ab\u7262\u7262\u51b3\u5b9a\u3002\u5f17\u62c9\u57fa\u7c73\u5c14\u8fbe\u6d77\u8d1d\u57fa\u65af\u79d1\u592b\u548cVictor Savinikh\u88ab\u9009\u4e2d\u8fc4\u4eca\u4e3a\u6b62\u5c1d\u8bd5\u6700\u5927\u80c6\uff0c\u6700\u590d\u6742\u7684\u7a7a\u95f4\u4fee\u590d\u52aa\u529b\u4e4b\u4e00\u3002 [1]\n  1985\u5e746\u67086\u65e5\uff0c\u4e0e\u8f66\u7ad9\u8054\u7cfb\u8fd1\u56db\u4e2a\u6708\u540e\uff0cSoyuz T-13\u4e0eVladimir Dzhanibskov\u4f5c\u4e3a\u6307\u6325\u5b98\u548cVictor Savinikh\u4f5c\u4e3a\u98de\u884c\u5de5\u7a0b\u5e08\u3002 [1]\uff0c[6]\u5728\u98de\u884c\u540e\u4e24\u5929\u540e\uff0c\u8be5\u8f66\u7ad9\u8fdb\u5165\u4e86\u89c6\u91ce\u3002\n \u5f53\u4ed6\u4eec\u8d70\u8fd1\u8be5\u7ad9\u65f6\uff0c\u4ece\u8239\u4e0a\u7684\u5b9e\u65f6\u89c6\u9891\u88ab\u4f20\u8f93\u5230\u5730\u9762\u63a7\u5236\u5668\u3002\u53f3\u8fb9\u662f\u4e00\u4e2a\u56fe\u50cf\u63a7\u5236\u5668\u4e4b\u4e00\u3002\n \u63a7\u5236\u5668\u6ce8\u610f\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u9519\u8bef\u7684\u4e1c\u897f\uff1a\u8f66\u7ad9\u7684\u592a\u9633\u9635\u5217\u5e76\u4e0d\u5e73\u884c\u3002\u8fd9\u8868\u660e\u4e86\u7cfb\u7edf\u7684\u4e25\u91cd\u5931\u8d25\uff0c\u8be5\u7cfb\u7edf\u5bf9\u592a\u9633\u80fd\u7535\u6c60\u677f\u671d\u5411\u592a\u9633\uff0c\u5e76\u7acb\u5373\u5bfc\u81f4\u4e86\u5bf9\u8f66\u7ad9\u7684\u6574\u4e2a\u7535\u6c14\u7cfb\u7edf\u7684\u62c5\u5fe7\u3002 [1]\n  Dzhanibeskov\uff1a\u201c\u8ddd\u79bb\uff0c200\u7c73\u3002\u5438\u5f15\u529b\u3002\u63a5\u8fd1\u7ad9\u76841.5\u7c73/\u79d2\uff0c\u8f66\u7ad9\u7684\u8f6c\u901f\u6b63\u5e38\uff0c\u5b9e\u9645\u4e0a\u662f\u7a33\u5b9a\u7684\u3002\u6211\u4eec\u6b63\u5728\u4e3e\u884c\uff0c\u7136\u540e\u5f00\u59cb\u8f6e\u6d41\u3002\u54e6\uff0c\u592a\u9633\u73b0\u5728\u5728\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5730\u65b9......\u90a3\u91cc\uff0c\u8fd9\u66f4\u597d\u3002\u5bf9\u63a5\u76ee\u6807\u5bf9\u9f50\u3002\u5728\u8239\u8236\u548c\u7ad9\u4e4b\u95f4\u7684\u8239\u8236\u4e4b\u95f4\u504f\u79fb\u5728\u6b63\u5e38\u53c2\u6570\u4e4b\u95f4\u3002\u653e\u6162\u901f\u5ea6......\u7b49\u5f85\u8054\u7cfb\u3002\u201c\n \u6084\u6084\u5730\uff0c\u6162\u6162\u5730\uff0c\u8239\u5458\u7684\u8c46\u5b50\u961f\u98de\u5411\u8f66\u7ad9\u7684\u524d\u5411\u5bf9\u63a5\u53e3\u3002 \n\u6210\u529f\u5bf9\u63a5\u5230\u8f66\u7ad9\u662f\u4e00\u573a\u4f1f\u5927\u7684\u80dc\u5229\uff0c\u5e76\u5728\u5386\u53f2\u4e0a\u7b2c\u4e00\u6b21\u5c55\u793a\uff0c\u6709\u53ef\u80fd\u5728\u7a7a\u95f4\u4e2d\u7684\u51e0\u4e4e\u4efb\u4f55\u7269\u4f53\u4e0e\u51e0\u4e4e\u4efb\u4f55\u7269\u4f53\u8fdb\u884c\u8bb2\u8bdd\uff0c\u4f46\u65e9\u671f\u5e86\u795d\u3002 \u8239\u5458\u4ece\u4ed6\u4eec\u5bf9\u63a5\u7684\u7ad9\u63a5\u6536\u6ca1\u6709\u786e\u8ba4\uff0c\u65e0\u8bba\u662f\u7535\u6c14\u8fd8\u662f\u7269\u7406\u3002 \u5173\u4e8e\u4f7f\u547d\u7684\u4e3b\u8981\u62c5\u5fc3\u4e4b\u4e00\uff0c\u5728\u8f66\u7ad9\u4e0d\u63a5\u89e6\u65f6\uff0c\u522b\u7684\u4e1c\u897f\u4f1a\u975e\u5e38\u51fa\u9519\uff0c\u5f88\u5feb\u5c31\u6210\u4e3a\u73b0\u5b9e\u3002  \u5173\u4e8e\u8f66\u961f\u5185\u90e8\u5173\u4e8e\u8f66\u7ad9\u538b\u529b\u7684\u5c4f\u5e55\u7f3a\u4e4f\u4fe1\u606f\u5bfc\u81f4\u8f66\u7ad9\u7684\u7f3a\u9677\u4ee4\u4eba\u62c5\u5fe7\uff0c\u4f46\u8239\u5458\u4ed4\u7ec6\u5730\u538b\u5236\u4e86\u524d\u65b9\u3002 \u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u4ed6\u4eec\u7684\u7b2c\u4e00\u6b65\u5c06\u5c1d\u8bd5\u5747\u8861\u8239\u8236\u548c\u8f66\u7ad9\u4e4b\u95f4\u7684\u538b\u529b\u3002 [1] [3] ", "note_en": "The following story happened in 1985 but subsequently vanished into obscurity. Over the years, many details have been twisted, others created. Even the original storytellers got some things just plain wrong. After extensive research, writer Nickolai Belakovski is able to present, for the first time to an English-speaking audience, the complete story of Soyuz T-13\u2019s mission to save Salyut 7, a fascinating piece of in-space repair history.\n  It\u2019s getting dark, and Vladimir Dzhanibekov is cold. He has a flashlight, but no gloves. Gloves make it difficult to work, and he needs to work quickly. His hands are freezing, but it doesn\u2019t matter. His crew\u2019s water supplies are limited, and if they don\u2019t fix the station in time to thaw out its water supply, they\u2019ll have to abandon it and go home, but the station is too important to let that happen. Quickly, the sun sets. Working with the flashlight by himself is cumbersome, so Dzhanibekov returns to the ship that brought them to the station to warm up and wait for the station to complete its pass around the night side of the Earth. [1]\n He\u2019s trying to rescue Salyut 7, the latest in a series of troubled yet increasingly successful Soviet space stations. Its predecessor, Salyut 6, finally returned the title of longest manned space mission to the Soviets, breaking the 84-day record set by Americans on Skylab in 1974 by 10 days. A later mission extended that record to 185 days. After Salyut 7\u2019s launch into orbit in April 1982, the first mission to the new station further extended that record to 211 days. The station was enjoying a relatively trouble-free start to life. [4]\n However, this was not to last. On February 11, 1985, while Salyut 7 was in orbit on autopilot awaiting its next crew, mission control (TsUP) noticed something was off. Station telemetry reported that there had been a surge of current in the electrical system, which led to the tripping of overcurrent protection and the shutdown of the primary radio transmitter circuits. The backup radio transmitters had been automatically activated, and as such there was no immediate threat to the station. Mission controllers, very tired now that the end of their 24-hour shift was approaching, made a note to call specialists from the design bureaus for the radio and electrical systems. The specialists would analyze the situation, and produce a report and recommendation, but for now the station was fine, and the next shift was ready to come on duty.[9]\n Without waiting for the specialists to arrive, or perhaps not bothering to call them in the first place, the controllers on the next shift decided to reactivate the primary radio transmitter. Perhaps the overcurrent protection had been tripped accidentally, and if not, then it should still be functional and should still activate if there really was a problem. The controllers, acting against established tradition and procedures of their office, sent the command to reactivate the primary radio transmitter. Instantly, a cascade of electrical shorts swept through the station, and knocked out not only the radio transmitters, but also the receivers. At 1:20pm and 51 seconds on February 11, 1985, Salyut 7 fell silent and unresponsive. [8][9]\n  The situation put flight controllers in an uncomfortable position. One option available to them was to simply abandon Salyut 7 and wait for its successor, Mir, to become available before continuing the manned space program. Mir was on schedule to be launched within one year, but waiting for Mir to become available would not only mean suspending the space program for a year; it also meant that a significant amount of scientific work and engineering tests planned for Salyut 7 would have to go undone. Moreover, admitting defeat would be an embarrassment for the Soviet space program, particularly painful considering the multitude of previous failures in the Salyut series as well as the apparent successes the Americans were enjoying with the Space Shuttle. [9]\n    There was only one other option: fly a repair crew to the station to fix it from the inside, manually. But this could easily become yet another failure. The standard procedures for docking to a space station were entirely automated and relied heavily on information from the station itself about its precise orbital and spatial coordinates. During those rare occurrences when the automated system failed and a manual approach was required, the failures were all within several hundred meters of the station. How does one approach a silent space station? [9] The lack of communication presented another problem: there was no way to know the status of the onboard systems. While the station was designed to fly autonomously, the automated systems could only cope with so many failures before human intervention would be required.\u00a0The station could be fine upon the repair crew&#39;s arrival, requiring no more repair work than replacing the damaged transmitters, or there could have been a fire on the station, or it could have depressurized from having been struck by space debris, etc.; there would be no way to know.[3]\n If there was a meeting in which top managers discussed and weighed all the options, the notes of that meeting have not been made public. What *is* known, however, is that the Soviets decided to attempt a repair mission. This would mean rewriting the book on docking procedures from scratch and hoping that nothing else went wrong aboard the station while communication was down, because if something else did go wrong, the repair crew might not be able to handle it. It was a bold move.\n  The first order of business for the repair mission was figuring out how they would get to the station. For an approach to the station under better circumstances, the Soyuz (a 3-seat ship used to ferry cosmonauts to and from space stations) would receive information from the station via mission control (TsUP) as soon as it reached orbit, long before the station would be visible to the crew. This communication would contain information about the orbit of the space station so that the visiting craft could plot a rendezvous orbit. Once the two craft were 20-25km apart, a direct line of communication would be established between the station and the ship, and the automated system would bring the two craft together and complete the docking.[3]\n  Although all Soyuz pilots were trained to perform a manual docking, it was rare for the automated system to fail. Of those rare failures, the worst was in June 1982 on Soyuz T-6 when a computer failure stopped the automated docking process 900m away from the station. Vladimir Dzhanibekov immediately took over controls and successfully docked his Soyuz with Salyut 7 a full 14 minutes ahead of schedule [4]. Naturally, Dzhanibekov was the leading candidate to pilot any proposed mission to rescue Salyut 7.\n An entirely new set of docking techniques had to be developed, and this was done under a project titled \u201cdocking with a non-cooperative object.\u201d [5] The station\u2019s orbit would be measured using ground-based radar, and this information would be communicated to the Soyuz, which would then plot a rendezvous course. The goal was to get the ship within 5km of the station, from which point it was deemed a manual docking was technically possible. [3] The conclusion of those responsible for developing these new techniques were that the odds of mission success were 70 to 80 percent, after proper modifications to the Soyuz. [2],[3] The Soviet government accepted the risk, deeming the station too valuable to simply let it fall from orbit uncontrolled.\n    Modifications to the Soyuz began. The automated docking system would be removed entirely, and a laser rangefinder installed in the cockpit to assist the crew in determining their distance and approach rate. The crew would also bring night vision goggles in case they had to dock with the station on the night side. The third seat of the ship was removed, and extra supplies, like food and, as would later prove critical, water, were brought on board. The weight saved by the removal of the automatic system and the third chair were used to fill the propellant tanks to their maximum possible level. [1],[3],[11]\n  When it came to selecting a flight crew, two things were very important. First of all, the pilot should have had experience performing a manual docking in orbit, not just in simulators, and secondly, the flight engineer would need to be very familiar with Salyut 7\u2019s systems. Only three cosmonauts had completed a manual docking in orbit. Leonid Kizim, Yuri Malyshev, and Vladimir Dzhanibekov. Kizim had only recently returned from a long duration mission to Salyut 7, and was still undergoing rehabilitation from his spaceflight, which ruled him out as a possible candidate. Malyshev had limited spaceflight experience, and had not trained for Extra-Vehicular Activity (EVA, or spacewalk), which would be required later in the mission to augment the station\u2019s solar panels, provided the rehabilitation of the space station went well.[1]\n This left Dzhanibekov, who had flown in space four times for a week or two each time, but had trained for long duration missions and for EVA. However, he was restricted from long duration flight by the medical community. Being at the top of the short list for mission commander, Dzhanibekov was quickly placed into the care of physicians who, after several weeks of medical tests and evaluation, cleared him for a flight lasting no more than 100 days. [1]\n To fulfill the role of flight engineer the list was even shorter: just one person. Victor Savinikh had flown once before, on a 74 day mission to Salyut 6. During that mission he played host to Dzhanibekov and Mongolia\u2019s first cosmonaut as they visited the station on Soyuz 39. Moreover, he was already in the process of training for the next long-duration mission to Salyut 7, which had been scheduled to launch on May 15, 1985. [1]\n By the middle of March, the crew had been firmly decided. Vladimir Dzhanibekov and Victor Savinikh were chosen to attempt one of the boldest, most complicated in-space repair efforts to date. [1]\n  On June 6, 1985, nearly four months after contact with the station had been lost, Soyuz T-13 launched with Vladimir Dzhanibekov as commander and Victor Savinikh as flight engineer. [1],[6] After two days of flight, the station came into view.\n As they approached the station, live video from their ship was being transmitted to ground controllers. To the right\u00a0is one of the images controllers saw.\n The controllers noticed something very wrong: the station\u2019s solar arrays weren\u2019t parallel. This indicated a serious failure in the system which orients the solar panels toward the sun, and immediately led to concerns about the entire electrical system of the station. [1]\n  Dzhanibekov: \u201cDistance, 200 meters. Engaging engines. Approaching the station at 1.5 m/s, rotational speed of the station is normal, it\u2019s practically stable. We\u2019re holding, and beginning our turn. Oh, the sun is in a bad spot now\u2026 there, that\u2019s better. Docking targets aligned. Offset between the ship and the station within normal parameters. Slowing down\u2026 waiting for contact.\u201d\n Silently, slowly, the crew\u2019s Soyuz flew toward the forward docking port of the station.\n  The successful docking to the station was a great victory, and demonstrated for the first time in history that it was possible to rendezvous and dock with virtually any object in space, but it was early to celebrate. The crew received no acknowledgement, either electrical or physical, from the station of their docking. One of the main fears about the mission, that something else would go seriously wrong while the station was out of contact, was quickly becoming a reality.\n A lack of information on the crew\u2019s screens about the pressure inside the station led to concerns that the station had de-pressurized, but the crew pressed ahead, carefully. Their first step would be to try to equalize the pressure between the ship and the station, if possible. [1][3]", "posttime": "2021-06-26 15:08:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82cf\u8054,\u4f7f\u547d,mission,\u8f66\u7ad9", "title": "\u4ee4\u4eba\u7740\u540d\u7684\u82cf\u8054\u4f7f\u547d\u62ef\u6551\u4e86\u4e00\u7ad9\u6b7b\u4e86\u7a7a\u95f4\u7ad9 ", "title_en": "The little-known Soviet mission to rescue a dead space station", "transed": 1, "url": "https://arstechnica.com/science/2014/09/the-little-known-soviet-mission-to-rescue-a-dead-space-station/", "via": "", "real_tags": ["\u82cf\u8054", "\u4f7f\u547d", "mission", "\u8f66\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "fb63d318e969d244824cd37a9c3a0d3f.png", "infoid": 1068389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\nWarning: Can only detect less than 5000 characters\n\u4e3a\u4e86\u9274\u5b9a\u901a\u8fc7\u5355\u72ec\u80bd\u6269\u589e\u7684CDR3\u6216\u5168\u80bd - \u6df7\u5408\u7269\uff0c\u5bf9\u6765\u81ea\u4f9b\u4f53D089\u548cD225\u7684\u6297\u539f\u523a\u6fc0\u7684PBMC\u8fdb\u884c\u6297\u539fTCR\u5206\u6790\uff0c\u4e0e\u6297\u539f\u7684\u523a\u6fc0\u540e\u7684\u7b2c7\u5929\uff0c\u7b2c21\u5929\uff08\u53c2\u89c1\u201c\u65b9\u6cd5\u201d\uff09 \u3002\u4e24\u4e2a\u6350\u8d60\u8005\u90fd\u5411PEP-7\u548cPEP-MIX\u5c55\u793a\u4e86\u9c81\u68d2IFN-\u03b3\u54cd\u5e94\uff0c\u4f46\u4e0d\u662fPEP-1\uff08\u56feS4\uff09\u3002\u5728\u4e09\u4e2a\u4e0d\u540c\u7684\u65f6\u95f4\u70b9\u5206\u6790\u72ec\u7279\u516c\u5171\u548c\u79c1\u4ebaCDR3S\u7684\u591a\u6837\u6027\u548c\u514b\u9686\u6269\u589e\uff08\u56fe3A\uff0cB\uff09\u3002\u65bd\u4e3b\u5747\u663e\u793a\u591a\u4e2a\u516c\u5171CDR3S\u7684\u514b\u9686\u6269\u589e\uff0c\u8bc6\u522bHCMV\uff0c\u4eba\u75b1\u75b9\u75c5\u6bd2-5\uff08HHV-5\uff09\u548c\u6d41\u611f - \u4e00\u79cd\u80bd\uff0c\u5f53\u7528PEP-7\u548c\u5168\u80bd\u6df7\u5408\u7269\u523a\u6fc0\u65f6\uff0c\u4f46\u6ca1\u6709PEP-1\uff08\u8868S2 \uff09\u3002\u5728\u4f9b\u4f53D089\u4e2d\u6269\u589eHCMV\u548cHHV-5 CDR3S\uff08\u56fe3A\uff0c\u9876\u90e8\u9762\u677f\uff09\uff0c\u800cD225\u663e\u793aHCMV\u548c\u6d41\u611fCDR3S\u7684\u81a8\u80c0\uff08\u56fe3A\uff0c\u5e95\u677f\uff09\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9bCDR3S\u672a\u88ab\u7a57-C1\u548cS2\u80bd\u5e93\u6216PEP-1\u6269\u589e\uff0c\u540e\u8005\u672a\u80fd\u5728\u8fd9\u4e9b\u4f9b\u4f53\u4e2d\u6fc0\u6d3bT\u7ec6\u80de\u3002\u6b64\u5916\uff0c\u5728\u4f9b\u4f53089\u548c225\u4e2d\u8bc6\u522bHCMV\u80bdNLVPMVATV\u7684CDR3S\u662f\u4e0d\u540c\u7684\uff0c\u8868\u660e\u76f8\u540c\u7684\u6297\u539f\u5728\u4e0d\u540c\u7684\u4f9b\u4f53\u4e2d\u63a5\u5408\u591a\u4e2a\u4ea4\u53c9\u53cd\u5e94\u6027TCR\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u8fd9\u4e24\u4e2a\u6350\u8d60\u8005\u4e2d\u5206\u6790\u4e86\u79c1\u4ebaCDR3s\uff0c\u4ee5\u9274\u5b9a\u65b0\u7684SARS-COV-2\u6297\u539f\u7279\u5f02\u6027CDR3\uff08\u56fe3B\uff09\u3002\u4f9b\u4f53089\u663e\u793a\u79c1\u6709CDR3S\u7f3a\u4e4f\u7279\u5f02\u6027\u6269\u589e\uff0c\u8868\u660e\u8be5\u4f9b\u4f53\u4e2d\u68c0\u6d4b\u5230\u7684\u9c81\u68d2CD8 T\u7ec6\u80de\u5e94\u7b54\u53ef\u80fd\u7531\u6269\u589e\u7684\u516c\u5171CDR3S\u63d0\u4f9b\u8d21\u732e\uff08\u56fe3B\uff0c\u9876\u90e8\u9762\u677f\uff09\u3002\u76f8\u53cd\uff0c\u901a\u8fc7PEP-7\u548cD225\u4e2d\u7684\u5168\u80bd\u6df7\u5408\u7269\u514b\u9686\u4e24\u4e2a\u79c1\u4ebaCDR3S\uff0c\u8868\u660eT\u7ec6\u80de\u53cd\u5e94\u6765\u81ea\u8be5\u4f9b\u4f53\u4e2d\u7684\u516c\u5171\u548c\u975e\u516c\u5171TCR\uff08\u56fe3B\uff0c\u5e95\u677f\uff09\u3002\u9274\u4e8eTCR\u5206\u6790\u5728Day-7\u53ca\u5176\u4e0a\u8fdb\u884c\uff0c\u6269\u589e\u7684CDR3S\u53ef\u4ee5\u884d\u751f\u81ea\u9884\u5148\u5b58\u5728\u7684\u548c\u5e7c\u7a1aT\u7ec6\u80de\u3002\u8868S2\u4e2d\u7ed9\u51fa\u4e86\u4e24\u79cd\u4f9b\u4f53\u4e2d\u68c0\u6d4b\u5230\u7684\u514b\u9686\u6269\u589e\u7684\u516c\u5171\u548c\u79c1\u4ebaCDR3\u7684\u5217\u8868\u3002\n \u5728\u7528\u6307\u5b9a\u7684\u80bd\u7684\u4e0d\u540c\u65f6\u95f4\u70b9\u5728\u4e0d\u540c\u65f6\u95f4\u70b9\u8fdb\u884cPBMC\u4f53\u5916\u523a\u6fc0\u540e\uff0c\u5728\u672a\u66dd\u5149\u4f9b\u4f53\u4e2d\u7684\u6563\u88c5TCR\u66f2\u76ee\u5206\u6790\u3002 \uff08a\uff09\u6269\u5c55\u516c\u5171CDR3-\u03b2S\u8bc6\u522bD089\uff08\u4e0a\u9762\u677f\uff09\u548cD225\uff08\u4e0b\u56fe\uff09\u4e2d\u7684\u5171\u7528\u6297\u539f\u3002 \uff08b\uff09\u6269\u5c55D089\uff08\u4e0a\u9762\u677f\uff09\u548cD225\uff08\u4e0b\u56fe\uff09\u4e2d\u7684\u79c1\u4ebaCDR3-\u03b2S\u3002 \uff08c\uff09D225\u4e2d\u7684V-J\u57fa\u56e0\u4f7f\u7528\u3002 \uff08d\uff09D089\u4e2d\u7684V-J\u57fa\u56e0\u4f7f\u7528\u3002\n \u8fdb\u4e00\u6b65\u7814\u7a76\u4f9b\u4f53089\u548c225\u7684TCR\u66f2\u76ee\u6982\u51b5\uff0c\u6211\u4eec\u5206\u6790\u4e86\u6279\u91cfCDR3\u6570\u636e\u4e2d\u7684VDJ\u57fa\u56e0\u4f7f\u7528\u3002\u5728D225\u4e2d\uff0c\u5728Pep7\u548c\u80bd\u6df7\u5408\u5904\u7406\u7684\u6837\u54c1\u4e2d\u663e\u7740\u8fc7\u5ea6\u5730\u8868\u793a\u4e24\u79cdV\u533a\u6bb5TRVB2\u548cTRVB30\uff0c\u5e76\u4e14J Gene Trbj2-1\u663e\u7740\u8fc7\u5ea6\u5730\u8868\u793a\uff08\u56fe3C\uff09\uff0c\u800c\u5728D089 TRBV12-4\u548cTRBJ1-2\u57fa\u56e0\u4e2d\u88ab\u6269\u589e\uff08\u56fe3D\uff09\u3002\n  \u4e3a\u4e86\u8868\u5f81\u6d3b\u5316T\u7ec6\u80de\u7684\u8868\u578b\u548c\u529f\u80fd\u72b6\u6001\u5e76\u63ed\u793a\u4e0d\u540c\u6cbb\u7597\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u6211\u4eec\u572810x\u5e73\u53f0\u4e0a\u8fdb\u884c\u5355\u7ec6\u80de\u6d4b\u5e8f\u3002\u4ece3500-4500\u7ec6\u80de\u83b7\u5f97\u7684\u5355\u7ec6\u80de\u8f6c\u5f55\u7ec4\u548cTCR\u6570\u636e\u9274\u5b9a\u4e863000-3500\u4e2a\u72ec\u7279\u7684\u6210\u7ee9\u5355\uff08\u53c2\u89c1\u201c\u65b9\u6cd5\u201d\uff09\u3002\u4f7f\u7528\u57fa\u4e8e\u56fe\u7684\u5747\u5300\u6b67\u7ba1\u8fd1\u4f3c\u548c\u6295\u5f71\uff08UMAP\uff09\u7684\u57fa\u4e8e\u56fe\u7684\u805a\u7c7b\uff0c\u6211\u4eec\u6355\u83b7\u4e864\u79cd\u4e0d\u540c\u7ec6\u80de\u7c7b\u578b\u7684\u8f6c\u5f55\u7ec4\uff08\u56fe4A\u548c\u8868S3\uff09\u3002\u6211\u4eec\u7684\u6d4b\u5b9a\u65b9\u6cd5\u5bcc\u96c6\u4e86T\u7ec6\u80de\u7684\u751f\u957f\u548c\u589e\u6b96\uff0c\u5bfc\u81f4\u572814\u5929\u57f9\u517b\u7684PBMC\u4e2d\u5b58\u5728\u7684\u5176\u4ed6\u514d\u75ab\u7ec6\u80de\u7c7b\u578b\u7684\u67af\u7aed\u3002\u5728\u6240\u6709\u6837\u54c1\u4e2d\u68c0\u6d4b\u5230\u4e09\u79cd\u7ec6\u80de\u7c7b\u578b\uff0cCD8\uff0c\u03b3/\u03b4\u548cNK-T\u3002\u4e0eDMSO\u548cPEP-7\u76f8\u6bd4\uff0c\u5176\u4e2dCD8 T\u7ec6\u80de\u7ea7\u5206\u4e3a\u301c60\uff05\uff0c\u5728\u7a57-C1\u548c\u7a57-S2\u4e2d\uff0cCD8 T\u7ec6\u80de\u7ea7\u5206\u522b\u5206\u522b\u4e3a50\uff05\u548c38\uff05\u3002\u76f8\u53cd\uff0cCD4\u96c6\u7fa4\u5728Spike-s\u4e2d\u6269\u5c55\n...... ", "note_en": "The COVID-19 pandemic has revealed a range of disease phenotypes in infected patients with asymptomatic, mild, or severe clinical outcomes, but the mechanisms that determine such variable outcomes remain unresolved. In this study, we identified immunodominant CD8 T-cell epitopes in the spike antigen using a novel TCR-binding algorithm. The predicted epitopes induced robust T-cell activation in unexposed donors demonstrating pre-existing CD4 and CD8 T-cell immunity to SARS-CoV-2 antigen. The T-cell reactivity to the predicted epitopes was higher than the Spike-S1 and S2 peptide pools in the unexposed donors. A key finding of our study is that pre-existing T-cell immunity to SARS-CoV-2 is contributed by TCRs that recognize common viral antigens such as Influenza and CMV, even though the viral epitopes lack sequence identity to the SARS-CoV-2 epitopes. This finding is in contrast to multiple published studies in which pre-existing T-cell immunity is suggested to arise from shared epitopes between SARS-CoV-2 and other common cold-causing coronaviruses. However, our findings suggest that SARS-CoV-2 reactive T-cells are likely to be present in many individuals because of prior exposure to flu and CMV viruses.\n     Uncovering the immunological responses to COVID-19 infection will help in designing and developing next-generation therapies and manage the treatment of critical COVID-19 patients. Many host factors associated with mild or severe disease symptoms have been reported. For example, leukopenia, exhausted CD8 T-cells, higher levels of T H2 cytokines in serum, a high titer of neutralizing antibodies, blunted interferon response, dysregulation of the myeloid cell compartment, activated NK cells, and the size of the na\u00efve T-cell compartment is associated with critically ill patients  1, 2, 3, 4, 5. This wide range of variable factors shares a common immunological underpinning\u2014that of a systemic dysregulation in immune homeostasis due to the failure of the host immune system to clear the virus during the early stages of the infection  6. Animal and human studies have demonstrated that susceptibility to respiratory virus infections is associated with compromised CD8 T-cell immunity  7, 8, 9, 10, 11. A delay in the activation of CD8 T-cells and a lack of early IFN-\u03b3 production by the innate immune arm leads to an increase in viral load triggering overactivation of the innate and the adaptive arm of the immune system leading to a loss of immune homeostasis resulting in severe disease phenotype, including death. Therefore, an early wave of strong CD8 T-cell response may delay viral titer build-up, allowing rapid clearance of the virus by the immune system without perturbing immune homeostasis.\n Healthy humans not exposed to COVID-19 show pre-existing CD4 and CD8 T-cell immunity to SARS-CoV-2 antigens  12, 13, 14. The pre-existing immunity to CD4 and CD8 T-cells was detected against structural and non-structural SARS-CoV-2 proteins by overlapping 15-mer peptide pools. The existence of a pool of SARS-CoV-2-reactive T-cells in unexposed individuals is thought to arise from coronaviruses that cause common cold  13, 15, 16. Whether pre-existing immunity provides any protection to SARS-CoV-2 infection or contributes to a faster recovery from infection remains speculative. Besides, it is unclear whether a pre-existing immunity, involving either CD4 or CD8 T-cells, or both, is required for maximal protection. Identifying robust pre-existing immunity against SARS-CoV-2 in the healthy population can be used as a measure to assess the mode of recovery and also viral spread in the global population.\n In this study, we identified strong CD8 T-cell-activating epitopes from SARS-CoV-2 spike protein by a combination of epitope prediction and T-cell activation assays in healthy donors unexposed to SARS-CoV-2. The rationale for identifying epitopes that favor CD8 T-cell activation was twofold. First, robust CD8 T-cell activating epitopes can be formulated as second-generation vaccines for short and long-term protection against viral infection. Second, detection of pre-existing immunity in healthy donors using epitopes that favor CD8 T-cell activation may provide a framework to understand the complex immune responses observed in clinical settings. It may also shed light on the differences in morbidity and mortality in different population groups across the globe.\n We developed a proprietary algorithm OncoPeptVAC to predict CD8 T-cell activating epitopes across the SARS-CoV-2 proteome. OncoPeptVAC predicts binding of the HLA-peptide complex to the T-cell receptor (TCR). We selected a cocktail of eleven 15-mer peptides with a broad class-I and class-II coverage and favorable TCR engagement predicted by the algorithm. The cocktail of peptides was tested for T-cell activation in healthy donors from the USA and India unexposed to COVID-19. We observed higher CD8 T-cell activation by the 11-peptide pool compared to the overlapping 15-mer peptide pools from the spike-S1 and S2 proteins. Homology analysis of the selected peptides with other coronavirus spike proteins indicated a lack of significant amino acid identity with any of the 11 peptides, suggesting engagement of one or more peptides in the pool to cross-reactive TCRs from other viruses, not particularly from a coronavirus. Bulk and single-cell TCR analysis revealed expanded clonotypes recognizing epitopes from CMV, Influenza-A, and other viruses to which most of us are exposed. Taken together, our findings support that strong pre-existing CD8 T-cell immunity in unexposed donors is contributed by cross-reactive TCRs from other viruses. Significantly, we discovered multiple immunodominant epitopes in our predicted pool of peptides that favored CD8 T-cell activation. Finally, we show that our cocktail of 11-peptides induced a robust immune response in convalescent patients demonstrating that these peptides are recognized by infected patients. Taken together, our study uncovered strong pre-existing CD8 T-cell immunity against SARS-CoV-2 using a small set of 11 epitopes that engaged cross-reactive TCRs recognizing epitopes from other viruses, not necessarily common cold viruses belonging to the coronavirus family as hypothesized by other studies. Additionally, our findings raise the possibility that many individuals carrying antigen-experienced T-cells against other viruses may be naturally protected against COVID-19 without prior SARS-CoV-2 infection.\n A deep CNN model OncoPeptVAC was implemented to predict the immunogenicity of peptides based only on the peptide and HLA sequences. A total of 8870 immunogenic and non-immunogenic peptide-HLA pairs were obtained from the IEDB  17. The BLOSUM encoding was used to represent the peptide and HLA molecules. The BLOSUM substitution scores encode evolutionary and physicochemical properties of the amino acids  18. In addition, hydrophobicity indices and predicted HLA binding scores were also used to represent the peptide and HLA sequences.\n OncoPeptVAC used the CNN model with multiple 2D convolutional layers combined with max-pooling to confirm the additive effect of different input features on the performance of the model. All the model versions were trained using fivefold cross-validation. The AUC of the final model was 0.87 based on a blind test dataset (Fig.\u00a0 1A). The prediction algorithm showed a sensitivity of 0.64 and a specificity of 0.84 based on the score cut-off of 0.2 (Fig.\u00a0 1B). By increasing the cut-off score to 0.5, the specificity could be further increased to 96.8 with a concomitant loss in sensitivity. OncoPeptVAC reduced the number of false positives significantly compared to the HLA-binding rank (Compare Fig.\u00a0 1B,C) reducing the number of epitopes by 30% that needed to be screened in a T-cell activation assay to identify true immunogenic epitopes. For example, to identify 50% (119 out of 238) of the immunogenic peptide-HLA pairs present in the blind test dataset, 256 top peptide-HLA pairs from OncoPeptVAC prediction needed to be screened, compared to 753 top peptide-HLA pairs predicted by netMHCpan-4.0.\n Identification of immunogenic epitopes from SARS-CoV-2 by OncoPeptVAC. ( A) ROC curves of OncoPeptVAC TCR-binding and netMHCpan-4.1 HLA binding algorithms. A blind dataset of non-immunogenic or immunogenic HLA class-I binding T-cell epitopes from IEDB was used to assess the performance of OncoPeptVAC (cyan). The HLA-binding affinity of the epitopes expressed as percentile rank\u2009&lt;\u20091% was used to assess the performance of netMHCpan-4.1 in predicting true immunogenic epitopes (orange). ( B) Separation of immunogenic from non-immunogenic epitopes by OncoPeptVAC score. ( C) Separation of immunogenic from non-immunogenic epitopes by HLA-binding percentile rank. ( D) Schematic showing the steps used to identify immunogenic epitopes from SARS-CoV-2 proteome. ( E) Number of immunogenic epitopes identified in different SARS-CoV-2 antigens. ( F) HLA-A, B and C-restricted epitopes from SARS-CoV-2 proteome.\n The prediction algorithm was applied to the SARS-CoV-2 proteome and screened against 23 class-I HLAs covering over 98% of the world population. A schematic of the in silico screening approach is shown in Fig.\u00a0 1D. Briefly, 9\u201311-mer peptides from the SARS-CoV-2 proteome were screened for TCR-binding against 23 HLA, and peptides with OncoPeptVAC score\u2009&gt;\u20090.2 were analyzed for class-I HLA binding. Peptide-HLA pairs with a high predicted binding affinity (&lt;\u20091 percentile rank) were selected, their length extended to 15-mer, and screened for class-II HLA binding (See \u201c Methods\u201d for details). Peptides with favorable TCR binding and class-I/II HLA binding features were selected for further validation. The number of predicted immunogenic epitopes from SARS-CoV-2 protein-coding genes is shown in Fig.\u00a0 1E. The distribution of OncoPeptVAC scores against different class-I HLA genes indicates a higher number of favorable TCR-binding peptides for HLA-B and C compared to HLA-A (Fig.\u00a0 1F). Natural biases in HLA restrictions have been reported for immunogenic HIV epitopes  19.\n  We performed T-cell activation assay using a set of 11 prioritized epitopes from the SARS-CoV-2 spike antigen (Table  1) in unexposed donors. We selected epitopes from the spike antigen because it is highly immunogenic and generates strong B and T-cell responses. Besides, identifying strong immunogenic epitopes from the spike antigen can become useful reagents to study mechanisms of immune toxicity, and for long-term immune monitoring studies in na\u00efve and vaccinated populations. The 15-mer peptides contained in the 11 selected epitopes cover different segments of the RBD and the non-RBD regions of the spike antigens and few peptides harbor ACE2 receptor binding sites (Fig.\u00a0 2A and Table  1). Many of the predicted peptides reside in flexible regions of the spike protein that could favor efficient processing and presentation. Only two out of the 11 peptides showed 100% identity to the 315 peptides present in the spike-S1 and S2 pools obtained from a commercial vendor (Table  2) (See the \u201c Methods\u201d section for the creation of the peptide pool).\n  T-cell reactivity to SARS-CoV-2 Spike peptide pools and OncoPeptVAC prioritized peptides. Reactivity was determined by intracellular IFN-\u03b3 staining and surface expression of 4-1BB by FACS after stimulation of PBMCs from unexposed donors (n\u2009=\u200914) using separate pools of Spike-S1 and S2 peptides and the 11-Peptide-mix predicted by OncoPeptVAC (see \u201c Methods\u201d). ( A) Structure of Spike\u2014ACE2 receptor complex showing the location of the 11-peptides predicted by OncoPeptVAC. ( B-C) T-cell activation after 48\u00a0h incubation with the peptides. ( D-E) T-cell activation after a 7-day incubation with the peptides. ( F) Kinetics and magnitude of CD8 T-cell activation in unexposed donor PBMCs. ( G,H) CD8 T-cell response of donors D167 and D089 to individual peptides from the 11-peptide-mix. Statistical significance determined by Wilcoxon matched pairs signed rank test in Figures ( B- E).\n  We screened PBMCs from 14 unexposed donors from the US collected between 2016\u20132018 and India (2015\u20132017), much before SARS-CoV-2 was recognized as a global pandemic (Table- S1). Activation of T-cells using the cocktail of 11 peptides (All-peptide mix) was compared to the responses from Spike-S1 (157 peptides) and S2 (158 peptides) pools (see \u201c Methods\u201d for assay details). At 48\u00a0h, the All peptide-mix induced a strong IFN-\u03b3 response in CD8 T-cells (Fig.\u00a0 2B left panel), and a weaker response in CD4 T-cells (Fig.\u00a0 2C, left panel). The IFN-\u03b3 response by the All peptide-mix was stronger in CD8 T-cells, compared to responses from spike-S1 and S2 peptide pools (Fig.\u00a0 2B, left panel). The 4-1BB response in both cell types was weaker at 48\u00a0h (Fig.\u00a0 2B,C right panels). IFN-\u03b3 levels increased in CD8 T-cells at day-7 by the All-peptide mix compared to the Spike peptide pools (Fig.\u00a0 2C, left panel). The higher expression of IFN-\u03b3 and 4-1BB in the CD4 and CD8 T-cells in certain donors at\u00a07-day suggested de novo activation (Fig.\u00a0 2D,E). At 48\u00a0h, 70% of the unexposed donors showed\u2009&gt;\u20090.5% IFN-\u03b3 response in CD8 T-cells to the predicted peptide mix suggesting recall to pre-existing antigen-experienced CD8 T-cells (Fig.\u00a0 2F). In most donors, the maximal response was detected by 7-days, but in donors D142 and D176 the response peaked at 48\u00a0h and declined thereafter (Fig.\u00a0 2F). Although the use of 15-mer peptides is expected to skew the response towards CD4 T-cells, we observed a stronger CD8 T-cell response to the Peptide-mix suggesting that the 15-mer peptide though added exogenously, was processed and presented by class-I HLAs efficiently. Taken together, the results demonstrate that the use of OncoPeptVAC identified potent CD8 T-cell epitopes in the spike antigen that could not have been detected by using large overlapping peptide pools used in T-cell activation assays.\n Next, we tested individual peptides from the mix to assess their contribution to T-cell activation. The magnitude and kinetics of IFN-\u03b3 and 4-1BB induction in CD8 T-cells by individual peptides were variable in different donors (Fig.\u00a0 2G,H and Figure  S1,  S2). Peptide-7 was an exceptionally strong CD8 T-cell epitope inducing IFN-\u03b3 in 3 out of 7 donors (Fig.\u00a0 2G,H and Supplementary Figure  S1E). Most immunogenic epitopes activated CD8 T-cells at 48\u00a0h and achieved\u2009&gt;\u20092% activation by 7-day. The early activation at 48\u00a0h suggested that these epitopes engaged pre-existing T-cell immunity in the unexposed donors. However, activation at day-7 could come from both pre-existing and na\u00efve T-cells. In many donors, a strong CD4 T-cell response was detected by individual peptides (Figure  S3-4). Interestingly, in many donors, both IFN-\u03b3 and 4-1BB expression was induced by multiple individual peptides, although the magnitude of response by the All-peptide mix was not always additive (compare donor responses to the All peptide mix, Fig.\u00a0 2F, with responses to individual peptides, Fig.\u00a0 2G,H and Figure  S1 for IFN-\u03b3 and Figure  S2A with S2B-H for 4-1BB) confirming that the T-cell activation potential of individual peptides could be masked, when present as a part of a larger peptide pool.\n Multiple studies have reported pre-existing T-cell immunity in unexposed donors using spike peptide pools and attributed the response to T-cells recognizing epitopes from common cold-causing coronaviruses to which a large section of the global population is exposed  12, 13, 15. Homology analysis of the selected epitopes (see \u201c Methods\u201d) indicated that 6 out of the 11 peptides share\u2009&gt;\u200967% sequence identity with SARS-CoV and only 1 (Peptide-11) out of the 11 peptides has over 70% identity with multiple coronaviruses (Table  3). Peptide-11 is in the S2 domain of the spike protein and showed\u2009\u2265\u20091% CD8 T-cell response at 48\u00a0h in 1 out of 7 donors tested (D167, Fig.\u00a0 2G). However, peptides 3, 6, 7, and 9 lacking significant identity to other coronaviruses (Table  3) showed\u2009\u2265\u20091% CD8 T-cell activation at 48\u00a0h in at least one donor out of 7 (Fig.\u00a0 2G,H and Figure  S1). Peptide-7 induced high CD8 T-cell activation at 48\u00a0h in two donors (D089 and D225 (Fig.\u00a0 2F and Figure  S1E). Taken together, the data suggest that pre-existing T-cell immunity to these peptides may be derived from cross-reactive TCRs recognizing other viruses.\n   To identify CDR3s amplified by individual peptides, or the All-peptide-mix, bulk TCR analysis was performed on antigen-stimulated PBMCs from donors D089 and D225 at days 7, 14, and 21 post-stimulation with antigens (see \u201c Methods\u201d). Both donors showed a robust IFN-\u03b3 response to Pep-7, and the Pep-Mix, but not to Pep-1 (Figure  S4). Diversity and clonal amplification of unique public and private CDR3s were analyzed at three different time points (Fig.\u00a0 3A,B). Both the donors showed clonal expansion of multiple public CDR3s recognizing HCMV, human herpes virus-5 (HHV-5), and Influenza-A peptides when stimulated with Pep-7 and All-peptide mix, but not with Pep-1 (Table  S2). HCMV and HHV-5 CDR3s were expanded in donor D089 (Fig.\u00a0 3A, top panel), whereas D225 showed expansion of HCMV and Influenza-A CDR3s (Fig.\u00a0 3A, bottom panel). Significantly, these CDR3s were not amplified by Spike-S1 and S2 peptide pools or by Pep-1, the latter failed to activate T-cells in these donors. Further, CDR3s recognizing HCMV peptide NLVPMVATV in donors 089 and 225 were different, suggesting that the same antigen engages multiple cross-reactive TCRs in different donors. Next, we analyzed private CDR3s in these two donors to identify novel SARS-CoV-2 antigen-specific CDR3 (Fig.\u00a0 3B). Donor 089 showed a lack of specific amplification of private CDR3s suggesting that the robust CD8 T-cell response detected in this donor may be contributed by the amplified public CDR3s (Fig.\u00a0 3B, top panel). In contrast, two private CDR3s were clonally amplified by Pep-7 and All-peptide mix in D225 suggesting that the T-cell response is derived from both public and non-public TCRs in this donor (Fig.\u00a0 3B, bottom panel). Given that the TCR analysis was performed on day-7 and beyond, the amplified CDR3s may be derived from both pre-existing and na\u00efve T-cells. A list of clonally amplified public and private CDR3s detected in the two donors is given in Table  S2.\n Bulk TCR repertoire analysis after in unexposed donors following in vitro stimulation of PBMCs at different time points with the indicated peptides. ( A) Expanded public CDR3-\u03b2s recognizing shared antigens in the D089 (upper panel) and D225 (lower panel). ( B) Expanded private CDR3-\u03b2s in D089 (upper panel) and D225 (lower panel). ( C) V\u2013J gene usage in D225. ( D) V\u2013J gene usage in D089.\n To further investigate the TCR repertoire profile of donors 089 and 225 we analyzed the VDJ gene usage in the bulk CDR3 data. In D225, two V segments TRVB2 and TRVB30, and a J gene TRBJ2-1 were significantly over-represented in Pep7 and Peptide-mix treated samples (Fig.\u00a0 3C), whereas in D089 TRBV12-4 and TRBJ1-2 genes were amplified (Fig.\u00a0 3D).\n  To characterize the phenotype and functional state of activated T-cells and reveal differences between the different treatments, we performed single-cell sequencing on a 10X platform. Single-cell transcriptomics and TCR data obtained from 3500\u20134500 cells identified 3000\u20133500 unique transcripts (see \u201c Methods\u201d). Using graph-based clustering of uniform manifold approximation and projection (UMAP) we captured transcriptomes of 4 distinct cell types (Fig.\u00a0 4A and Table  S3). Our assay method is enriched for the growth and proliferation of T-cells causing depletion of other immune cell types present in PBMC in a 14-day culture. Three cell types, CD8, \u03b3/\u03b4, and NK-T were detected in all the samples. Compared to DMSO and Pep-7 in which the CD8 T-cell fraction was\u2009~\u200960%, in spike-S1 and spike-S2 the CD8 T-cell fraction was 50% and 38% respectively. Conversely, the CD4 cluster was expanded in spike-S\n......", "posttime": "2021-06-26 14:26:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u53ef\u80fd,cov,cdr3s", "title": "SARS-COV-2\u53ef\u80fd\u7531\u4e8e\u524d\u66b4\u9732\u4e8e\u6d41\u611f\u75c5\u6bd2\u800c\u53ef\u80fd\u5b58\u5728\u7684\u53cd\u5e94\u6027T\u7ec6\u80de ", "title_en": "SARS-CoV-2 reactive T-cells likely present due to prior exposure to flu viruses", "transed": 1, "url": "https://www.nature.com/articles/s41598-021-92521-4", "via": "", "real_tags": ["\u75c5\u6bd2", "\u53ef\u80fd", "cov", "cdr3s"]}, {"category": "", "categoryclass": "", "imagename": "ca5244ffeb1ed2a8a6dfd51f0d78f46e.jpg", "infoid": 1068388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u4e8eMontr\u00e9al\u7684Healthtech Startup Alayacare\u5728D\u7cfb\u5217CAD\u4e2d\u83b7\u5f97\u4e862.25\u4ebf\u7f8e\u5143\u7684CAD\uff0c\u4ee5\u5efa\u7acb\u5176\u6700\u8fd1\u7684\u589e\u957f\uff0c\u5305\u62ec\u7f8e\u56fd\uff08\u7f8e\u56fd\uff09\u533b\u7597\u4fdd\u5065\u5e02\u573a\u3002\n \u8fd9\u4e00\u8f6e\u7531Al Gore\u7684\u4e00\u4ee3\u6295\u8d44\u7ba1\u7406\u9886\u5bfc\u3002\u5b83\u8fd8\u770b\u5230\u6765\u81ea\u591a\u4f26\u591a\u7684Klass Capital\uff0c\u5e76\u8fd4\u56de\u57fa\u4e8eQu\u00e9bec\u7684Alayacare\u6295\u8d44\u8005Inovia Capital\uff0cCDPQ\u548c\u6295\u8d44Qu\u00e9bec\u3002\n  Alayacare\u6210\u7acb\u4e8e2014\u5e74\uff0c\u4e3a\u5bb6\u5ead\u548c\u793e\u533a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u5546\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u7684\u5e73\u53f0\u3002 Startup\u7684\u4eba\u5de5\u667a\u80fd\uff08AI\uff09-Powered\u8f6f\u4ef6\u63d0\u4f9b\u8c03\u5ea6\uff0c\u62a5\u544a\uff0c\u4e34\u5e8a\u6587\u6863\uff0c\u8ba1\u8d39\uff0c\u62a4\u7406\u5de5\u4f5c\u8005\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c\u60a3\u8005\uff0c\u5bb6\u5ead\u6210\u5458\u548c\u62a4\u7406\u5de5\u4f5c\u8005\u7684\u4e13\u7528\u95e8\u6237\u3002\n \u901a\u8fc7\u5229\u7528\u6280\u672f\u548c\u6570\u636e\u6765\u52a0\u5f3a\u62a4\u7406\u5de5\u4f5c\u8005\u7684\u7ecf\u9a8c\uff0cAlayacare\u65e8\u5728\u6539\u5584\u60a3\u8005\u7684\u7ed3\u679c\u548c\u8f83\u4f4e\u7684\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u7684\u6210\u672c\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0cAlayacare\u58f0\u79f0\u5b83\u201c\u57fa\u672c\u4e0a\u6269\u5927\u4e86\u4e1a\u52a1\u201d\uff0c\u4fc3\u8fdb\u4e86\u4e16\u754c\u5404\u5730\u7684\u5341\u4ebf\u6b21\u60a3\u8005\u3002\n \u6839\u636eAlayAcare\u7684\u8bf4\u6cd5\uff0c\u536b\u751f\u5b66\u58eb\u516c\u53f8\u81ea\u53d1\u5e03\u4ee5\u6765\u7ecf\u5386\u4e86\u4e24\u4f4d\u6570\u7684\u589e\u957f\u3002\u7f8e\u56fd\u4ee3\u8868\u4e86Alayacare\u7684\u4e1a\u52a1\u589e\u957f\u6700\u5feb\u7684\u4e00\u90e8\u5206\uff1a\u521b\u4e1a\u516c\u53f8\u8868\u793a\uff0c\u5b83\u7684\u7f8e\u56fd\u4e1a\u52a1\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\uff0c\u5b83\u7684\u8fd0\u8425\u589e\u957f\u4e86\u4e03\u6b21\uff0c\u5728\u5bb6\u5ead\u533b\u7597\u4fdd\u5065\u7684\u9700\u6c42\u589e\u52a0\u3002\n  \u65b0\u9c9c\u7684\u9996\u90fd\uff0cAlayacare\u8ba1\u5212\u7ee7\u7eed\u901a\u8fc7\u57f9\u517b\u5176\u56e2\u961f\uff0c\u8ffd\u6c42\u66f4\u591a\u6536\u8d2d\uff0c\u5e76\u6295\u8d44\u4ea7\u54c1\u5f00\u53d1\uff0c\u7ee7\u7eed\u5176\u7f8e\u56fd\u548c\u5168\u7403\u6269\u5f20\u3002\u8be5\u542f\u52a8\u8868\u793a\uff0c\u5b83\u65e8\u5728\u5efa\u7acb\u201c\u66f4\u5b8c\u6574\u7684\u540e\u6025\u6027\u53d1\u884c\uff0c\u201d\u4ee5\u53ca\u5e2e\u52a9\u89e3\u51b3\u5458\u5de5\u77ed\u7f3a\u548c\u6d41\u5931\u7b49\u533b\u7597\u4fdd\u5065\u52b3\u52a8\u529b\u5e02\u573a\u95ee\u9898\u7684\u4ea7\u54c1\u3002\n Alayacare\u7684\u8f6f\u4ef6\u76ee\u524d\u7528\u4e8e\u8d85\u8fc7500\u4e2a\u5bb6\u5ead\u548c\u793e\u533a\u62a4\u7406\u7ec4\u7ec7\u3002 Alayacare\u5728\u52a0\u62ff\u5927\uff0c\u7f8e\u56fd\u548c\u6fb3\u5927\u5229\u4e9a\u7684\u529e\u4e8b\u5904\u96c7\u7528\u4e86450\u591a\u4eba\uff0c\u5e76\u8ba1\u5212\u5728\u672a\u6765\u51e0\u5e74\u4e2d\u4f7f\u7528\u65b0\u9c9c\u8d44\u672c\u589e\u52a0\u81f3\u5c11300\u591a\u4e2a\u3002 \n\u6839\u636e\u5168\u7403\u548c\u90ae\u5bc4\uff0c2.25\u4ebf\u7f8e\u5143\u7684\u56de\u5408\u75317500\u4e07\u7f8e\u5143\u7684\u4e8c\u7ea7\u8d44\u672c\u548c\u4ef7\u503c\u4e3a7500\u4e07\u7f8e\u5143\u7684\u201c\u5728\u9ad8\u4e5d\u4e2a\u6570\u5b57\u201d\u4e2d\u3002\u201c  2020\u5e748\u6708\uff0c\u5728\u6210\u529f\u7684\u878d\u8d44\u5e74\u5ea6\uff0cAlayacare\u5728CIBC Innovation Banking\u83b7\u5f97\u4e861500\u4e07\u7f8e\u5143\u7684\u503a\u52a1\u8bbe\u65bd\u3002 2019\u5e747\u6708\uff0cAlayacare\u5173\u95ed\u4e86\u7b2c\u4e00\u6b3e\uff0c5100\u4e07\u7f8e\u5143\u7684\u8fd111600\u4e07\u7cfb\u5217C\u8f6e\uff0c\u5e76\u4e8e2020\u5e741\u6708\uff0c\u542f\u52a8\u67094,790\u4e07\u7f8e\u5143\u7684C\u6269\u5c55\u3002  \u8be5\u542f\u52a8\u8fd8\u53ef\u4f5c\u4e3aHealthtech\u516c\u53f8Procura\uff0cArrow\uff0cCIMS\u548cAcutenet\u7684\u6bcd\u516c\u53f8\u3002 \u81ea2020\u5e74\u4ee5\u6765\uff0cAlayacare\u5df2\u7ecf\u83b7\u5f97\u4e86Procura\uff0cArrow\u548cAcutenet\u3002 \u542f\u52a8\u8ba1\u5212\u4ece\u672c\u8f6e\u4e2d\u4f7f\u7528\u4e00\u90e8\u5206\u6536\u76ca\u6765\u8ffd\u6c42\u66f4\u591a\u6536\u8d2d\u3002 ", "note_en": "Montr\u00e9al-based healthtech startup  AlayaCare has secured $225 million CAD in Series D funding to build on its recent growth, including in the United States (US) healthcare market.\n The round was led by Al Gore\u2019s Generation Investment Management. It also saw participation from Toronto\u2019s Klass Capital and return Qu\u00e9bec-based AlayaCare investors Inovia Capital, CDPQ, and Investissement Qu\u00e9bec.\n  Founded in 2014, AlayaCare provides an end-to-end platform for home and community healthcare providers. The startup\u2019s artificial intelligence (AI)-powered software offers scheduling, reporting, clinical documentation, billing, a care worker mobile app, and dedicated portals for patients, family members, and care workers.\n By leveraging tech and data to bolster the care worker experience, AlayaCare aims to improve patient outcomes and lower costs for healthcare providers. To date, AlayaCare claims it has \u201cscaled its business substantially,\u201d facilitating over a billion total patient visits around the world.\n According to AlayaCare,the healthtech company has experienced double-digit growth since its launch. The US represents the fastest-growing part of AlayaCare\u2019s business: the startup said its US operations grew by seven times over the last two years, amid an increase in demand for home healthcare.\n  Fresh capital in hand, AlayaCare plans to continue its US and global expansion by growing its team, pursuing more acquisitions, and investing in product development. The startup said it aims to build \u201ca more complete post-acute offering,\u201d as well as products that help address health care labour market issues like employee shortages and churn.\n AlayaCare\u2019s software is currently used by over 500 home and community care organizations. AlayaCare employs more than 450 people across its offices in Canada, the US, and Australia, and plans to use the fresh capital to add at least 300 more in the coming years.\n According to  The Globe and Mail, the $225 million round consists of $75 million in secondary capital and values AlayaCare \u201cin the high nine-figures.\u201d\n  In August 2020, AlayaCare secured a  $15 million debt facility from CIBC Innovation Banking, following a successful year of financing. In July 2019, AlayaCare closed the first,  $51 million portion of its nearly $116 million Series C round, and in January 2020, the startup secured a  $47.9 million Series C extension.\n The startup also serves as the parent company of healthtech firms Procura, Arrow, CIMS, and AcuteNet. Since 2020, AlayaCare has acquired  Procura,  Arrow, and  AcuteNet. The startup plans to use a portion of the proceeds from this round to pursue more acquisitions.", "posttime": "2021-06-26 13:44:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u5f00\u53d1,\u5bb6\u5ead,develops,alayacare", "title": "AlayAcare\uff0c\u5b83\u4e3a\u5bb6\u5ead\u548c\u793e\u533a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u5f00\u53d1\u4e86\u8c03\u5ea6\uff0c\u4e34\u5e8a\u6587\u6863\u548c\u8ba1\u8d39\u7684\u8f6f\u4ef6\uff0c\u63d0\u9ad8\u4e86225\u7c73CAD\u7cfb\u5217D. ", "title_en": "AlayaCare, which develops software for scheduling, clinical documentation, and billing for home and community healthcare providers, raises $225M CAD Series D", "transed": 1, "url": "https://betakit.com/alayacare-raises-225-million-cad-series-d-round/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u5f00\u53d1", "\u5bb6\u5ead", "develops", "alayacare"]}, {"category": "", "categoryclass": "", "imagename": "559d3d4453995ed5b56b1a265e49598c.jpeg", "infoid": 1068387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c71\u7f8a\u96c6\u56e2Sneakerheads\u7684\u7f51\u4e0a\u5e02\u573a\u7684\u6bcd\u516c\u53f8\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u7b79\u96c6\u4e861.95\u4ebf\u7f8e\u5143\uff0c\u901a\u8fc7\u79c1\u4eba\u6295\u8d44\u8005\u7ee7\u7eed\u63a8\u5165\u56fd\u9645\u5e02\u573a\u3002\n  \u8be5\u516c\u53f8\u57289\u6708\u4efd\u7b79\u96c6\u4e861\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\uff0c\u8be5\u516c\u53f8\u6700\u65b0\u7684\u878d\u8d44\u4ef7\u503c\u4e3a37\u4ebf\u7f8e\u5143\uff0c\u4f30\u503c\u8d85\u8fc7\u4e24\u500d\u3002\n  \u8be5\u516c\u53f8\u8fd8\u63d0\u4f9b\u4e86\u5173\u4e8e\u5176\u8d22\u52a1\u4e1a\u7ee9\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u79f0\uff0c\u5728\u8fc7\u53bb\u4e00\u5e74\u7684\u5c71\u7f8a\u5e73\u53f0\u4e0a\u9500\u552e\u4e8620\u4ebf\u7f8e\u5143\u7684\u5546\u54c1\u3002\u4e0e\u4e0a\u4e00\u5e74\u76f8\u6bd4\uff0c\u8be5\u671f\u95f4\u8fd0\u52a8\u978b\u7684\u9500\u552e\u989d\u7ffb\u4e86\u4e00\u756a\u3002\n  \u4f60\u4ece\u5c71\u7f8a\u4e70\u8fd0\u52a8\u978b\u6216\u670d\u88c5\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4f60\u7684\u8d2d\u4e70\u4e60\u60ef\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\u5982\u4f55\u53d8\u5316\uff1f\u52a0\u5165\u4e0b\u9762\u7684\u5bf9\u8bdd\u3002\n  \u5c71\u7f8a\u4ecd\u7136\u88ab\u79f0\u4e3a\u8d2d\u4e70\u6d41\u884c\u6216\u96be\u4ee5\u627e\u5230\u7684\u8fd0\u52a8\u978b\u7684\u5e73\u53f0\uff0c\u5e76\u4e14\u5b83\u7684\u6210\u529f\u5927\u90e8\u5206\u90fd\u53ef\u4ee5\u8ffd\u6eaf\u5230\u8fd0\u52a8\u978b\u548c\u8857\u5934\u6587\u5316\u7684\u6301\u7eed\u5347\u7ea7\u3002\u5bcc\u88d5\u7684\u8d2d\u7269\u8005\u5df2\u7ecf\u8bc1\u660e\u613f\u610f\u7a81\u7834\u6d41\u884c\u6b3e\u5f0f\u548c\u8272\u5f69\u5316\u7684\u96f6\u552e\u4ef7\uff0c\u4e3a\u8d2d\u4e70\u548c\u7ffb\u8f6c\u978b\u7684\u7ade\u4e89\u548c\u6709\u4e89\u8bae\u7684\u5e02\u573a\u3002\n    \u636eCowen\u79f0\uff0c\u5317\u7f8e\u7684\u8fd0\u52a8\u978b\u548c\u8857\u5934\u8f6c\u552e\u5e02\u573a\u8fbe\u5230\u4e86\u8d85\u8fc720\u4ebf\u7f8e\u5143\uff0c\u4f30\u8ba1\u5168\u7403\u5e02\u573a\u5c06\u8fbe\u523030\u4ebf\u7f8e\u5143\u52302030\u5e74\u3002\n  \u4e0eStockx LLC\u548ceBay eBay\u7b49\u7ade\u4e89\u5bf9\u624b\u4e0d\u540c\uff0c\u53ea\u80fd\u8f6c\u552e\u5e73\u53f0\uff0c\u5c71\u7f8a\u4e5f\u76f4\u63a5\u4ece\u5176\u8d85\u8fc7350\u4e2a\u54c1\u724c\u5408\u4f5c\u4f19\u4f34\u9500\u552e\uff0c\u5305\u62ecGucci\uff0cBalenciaga\u548cAlexander McQueen\u3002 \n2019\u5e74\uff0c\u8be5\u516c\u53f8\u5f00\u59cb\u6269\u5c55\u8d85\u8d8a\u8fd0\u52a8\u978b\u8fdb\u5165\u8c6a\u534e\u670d\u88c5\u548c\u914d\u9970\u3002 Goat Group\u7684\u9996\u5e2d\u6267\u884c\u5b98Eddy Lu\u5728\u9762\u8bd5\u4e2d\u8868\u793a\uff0c\u96f6\u552e\u5546\u4e00\u76f4\u5728\u6ce8\u610f\u6dfb\u52a0\u65b0\u7c7b\u522b\uff0c\u4ee5\u786e\u4fdd\u5e02\u573a\u4f9d\u7136\u7b26\u5408\u5176\u5e74\u8f7b\u5ba2\u6237\u7fa4\u7684\u6b32\u671b\u3002\n  \u201c\u6211\u4eec\u5173\u5fc3\u771f\u5b9e\u6027\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e0d\u521b\u9020\u6240\u6709\u8fd9\u4e9b\u5782\u76f4\u7684\u539f\u56e0\uff0c\u201d\u5362\u8bf4\u3002 \u201c\u6211\u4eec\u5bf9\u65f6\u5c1a\uff0c\u6587\u5316\u548c\u98ce\u683c\u6709\u4e00\u4e2a\u89c2\u70b9\u3002\u201d\n  \u5362\u8bf4\uff0c\u5c71\u7f8a\u5ba2\u6237\u7fa4\u662f\u5e74\u8f7b\uff0c\u65f6\u5c1a\u4e14\u8212\u9002\u7684\u6602\u8d35\u7269\u54c1\uff0c\u9646\u5148\u751f\u5730\u8d2d\u4e70\u3002\u5c71\u7f8a3000\u4e07\u5ba2\u6237\uff0c80\uff05\u662f\u5343\u79a7\u4e00\u4ee3\u548cZERES\u3002\n    \u4ed6\u8bf4\uff0c\u5bf9\u4e8e\u6d89\u53ca\u4fdd\u7559\u54c1\u724c\u8bda\u4fe1\u7684\u65f6\u88c5\u6807\u7b7e\uff0c\u4ed6\u8bf4\uff0c\u5c71\u7f8a\u5e02\u573a\u53ef\u4ee5\u5728\u66f4\u7b56\u5212\u5e73\u53f0\u4e0a\u83b7\u5f97\u66f4\u591a\u7b56\u5212\u5e73\u53f0\u7684\u8d2d\u7269\u8005\u3002 \u201c\u6211\u4eec\u5728NVIDIA\u663e\u5361\u548c\u7535\u6c60\u65c1\u8fb9\u7684\u4ea7\u54c1\u65c1\u8fb9\u6ca1\u6709\u9500\u552e\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u201d\u5362\u5148\u751f\u8bf4\u3002\n  \u5362\u5148\u751f\u8bf4\uff0c\u56fd\u9645\u5e02\u573a\u4ecd\u7136\u662f\u589e\u957f\u7684\u4e3b\u8981\u76ee\u6807\u3002\u6700\u65b0\u878d\u8d44\u56de\u5408\u7684\u90e8\u5206\u6536\u76ca\u5c06\u7528\u4e8e\u4eca\u5e74\u5f00\u8bbe\u56db\u4e2a\u989d\u5916\u7684\u5c65\u884c\u4e2d\u5fc3\u3002\u5176\u4e2d\u4e09\u4e2a\u4e2d\u5fc3\u5c06\u4f4d\u4e8e\u4e9a\u6d32\uff0c\u589e\u52a0\u4e86\u4e09\u4e2a\u73b0\u6709\u7684\u56fd\u9645\u8bbe\u65bd\u3002\u4ed6\u8bf4\uff0c\u65b0\u8bbe\u65bd\u5c06\u5e2e\u52a9\u964d\u4f4e\u4e0e\u56fd\u9645\u8fd0\u8f93\u76f8\u5173\u7684\u6210\u672c\uff0c\u5e76\u4f7f\u8fd0\u8f93\u901f\u5ea6\u66f4\u5177\u7ade\u4e89\u529b\u3002\n  \u96f6\u552e\u5546\u5728\u7f8e\u56fd\uff0c\u6b27\u6d32\u548c\u4e9a\u6d32\u670913\u4e2a\u5c65\u884c\u4e2d\u5fc3\uff0c\u5728\u8fd0\u9001\u5230\u5ba2\u6237\u4e4b\u524d\uff0c\u5b83\u53ef\u4ee5\u68c0\u67e5\u8f6c\u552e\u5546\u54c1\u7684\u771f\u5b9e\u6027\u548c\u8d28\u91cf\u3002\n  \u5c71\u7f8a\u96c6\u56e2\u6210\u7acb\u4e8e2015\u5e74\uff0c\u4ee5\u524d\u5728\u591a\u4e2a\u7b79\u6b3e\u8d5b\u4e2d\u7b79\u96c6\u4e86\u5927\u7ea63\u4ebf\u7f8e\u5143\uff0c\u8fc7\u53bb\u7684\u6295\u8d44\u8005\u5305\u62ecD1 Capital Partners LP\uff0cAccel\uff0cUpfront Ventures\u548c\u96f6\u552e\u5546\u811a\u8e0f\u8f66FL 3.63\uff05\u6700\u65b0\u7684\u8d44\u91d1\u5faa\u73af\u7531Park West Assuet Management\u9886\u5bfcLLC\u3002 \n\u51fa\u73b0\u57282021\u5e746\u670825\u65e5\uff0c\u5370\u5237\u7248\u4f5c\u4e3a\uff06\uff0339;\u5c71\u7f8a\u96c6\u56e2\u4ef7\u503c37\u4ebf\u7f8e\u5143\u3002\uff06\uff0339; ", "note_en": "Goat Group, parent company of an online marketplace for sneakerheads, said it has raised $195 million through private investors to continue its push into international markets.\n  The latest funding round values the company at $3.7 billion, more than double its valuation when the company  raised $100 million in September.\n  The company also provided detail about its financial performance, saying $2 billion of merchandise was sold on its Goat platform over the past year. Sales of sneakers during the period doubled compared with the previous year.\n  Do you buy sneakers or apparel from Goat? If so, how have your buying habits changed over the past year? Join the conversation below.\n  Goat remains best known as a platform to buy popular or hard-to-find sneakers, and much of its success can be traced to the continued  ascendancy of sneaker and streetwear culture. Wealthy shoppers have proved willing to shell out far more than the retail price of popular styles and colorways, fueling a competitive and controversial market for buying and flipping shoes.\n    The sneaker and streetwear resale market in North America hit more than $2 billion last year, according to Cowen, which estimates that the global market could reach $30 billion by 2030.\n  Unlike competitors such as StockX LLC and  eBay    EBAY  2.00%  which  are exclusively resell platforms, Goat also sells directly from its more than 350 brand partners, including Gucci, Balenciaga and Alexander McQueen.\n  In 2019, the company began expanding beyond sneakers into luxury apparel and accessories. Eddy Lu, Goat Group\u2019s chief executive, said in an interview that the retailer has been careful about adding new categories to ensure the marketplace remains in line with the desires of its young customer base.\n  \u201cWe care about authenticity, and that\u2019s why we don\u2019t create all of these verticals,\u201d Mr. Lu said. \u201cWe have a point of view on fashion, culture and style.\u201d\n  The Goat customer base is young, fashionable and comfortable wearing expensive items alongside their secondhand purchases, Mr. Lu said. Of Goat\u2019s 30 million customers, 80% are millennials and Gen Zers.\n    For fashion labels concerned about preserving brand integrity, the Goat marketplace offers access to those shoppers on a more curated platform, he said. \u201cWe\u2019re not selling their products next to  Nvidia graphics cards and batteries and things like that,\u201d Mr. Lu said.\n  International markets remain a primary target for growth, Mr. Lu said. Part of the proceeds from the latest funding round will be used to open four additional fulfillment centers this year. Three of those centers will be located in Asia, adding to three existing international facilities. The new facilities will help cut costs associated with international shipping and make shipping speeds more competitive, he said.\n  The retailer has 13 fulfillment centers across the U.S., Europe and Asia, where it checks the authenticity and quality of resale merchandise before shipping it to customers.\n  Goat Group, which was founded in 2015, previously raised about $300 million over multiple fundraising rounds, with past investors including D1 Capital Partners LP, Accel, Upfront Ventures and retailer  Foot Locker    FL  3.63%  The latest funding round was led by Park West Asset Management LLC.\n  Appeared in the June 25, 2021, print edition as &#39;Goat Group Valued at $3.7 Billion.&#39;", "posttime": "2021-06-26 13:02:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5c71\u7f8a,goat,\u8fd0\u52a8\u978b", "title": "\u5c71\u7f8a\u96c6\u56e2\uff0c\u5728\u7ebf\u8fd0\u52a8\u978b\u5e02\u573a\u5c71\u7f8a\u7684\u6bcd\u516c\u53f8\uff0c\u4f30\u4ef7\u4e3a3.7\u4ebf\u7f8e\u5143\u7684\u4f30\u4ef7\uff0c\u4e0a\u6da82\u500d\uff0c\u5f53\u516c\u53f8\u57289\u6708\u7b79\u96c6100\u4e07\u7f8e\u5143 ", "title_en": "GOAT Group, parent company of online sneaker marketplace GOAT, raises $195M Series F at a valuation of $3.7B, up 2x when the company raised $100M in September", "transed": 1, "url": "https://www.wsj.com/articles/goat-group-parent-of-sneaker-marketplace-valued-at-3-7-billion-in-latest-funding-round-11624532400?mod=djemalertNEWS", "via": "", "real_tags": ["\u5c71\u7f8a", "goat", "\u8fd0\u52a8\u978b"]}, {"category": "", "categoryclass": "", "imagename": "2abdb4598c84f733ef11024c5f245f72.jpeg", "infoid": 1068386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "//\uff0334;\u6216\u8005\u7b49\u4e8e\uff06\uff0334; x || = y; x || \uff08x = y\uff09; //\uff0334;\u548c\u548c\u7b49\u4e8e\uff06\uff0334; x\uff06amp;\uff06amp; = y; x\uff06amp;\uff06amp; \uff08x = y\uff09; //\uff0334; QQ\u7b49\u4e8e\uff06\uff0334; x ?? = y; x ?? \uff08x = y\uff09;\n const updateId = user =\uff06gt; {//\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u6b64\u64cd\u4f5cif\uff08\uff01user.id\uff09user.id = 1 //\u6216\u6b64user.id = user.id || 1 //\u6216\u4f7f\u7528\u903b\u8f91\u5206\u914d\u8fd0\u7b97\u7b26\u3002 user.id || = 1}\n    1_000_000_000 //\u554a\uff0c\u56e0\u6b64\u5f88\u5c11\u5341\u4ebf101_475_938.38 //\u8fd9\u662f\u6570\u4ebf\u6b21\u8ba9\u8d39\u7528= 123_00; // 123\u7f8e\u5143\uff0812300\u7f8e\u5206\uff0c\u663e\u7136\uff09\u8ba9\u8d39\u7528= 12_300; // 12,300\u7f8e\u5143\uff08WOAH\uff0c\u90a3\u8d39\u7528\uff01\uff09\u8ba9\u91d1\u989d= 12345_00; // 12,345\uff081234500\u7f8e\u5206\uff0c\u663e\u7136\uff09\uff0c\u8fbe\u5230123_4500; // 123.45\uff084\u56fa\u5b9a\u8d22\u52a1\uff09\uff0c\u79df\u7528= 1_234_500; // 1,234,500.\n    promise.any\uff08[\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a//v8.dev/&#39;\uff09.then\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u5bb6\u5ead\uff06\uff0339;\uff09\uff0c\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a //v8.dev/blog&#39;\uff09\u3002\u7136\u540e\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u535a\u5ba2\uff06\uff0339;\uff09\uff0cfetch\uff08\uff06\uff0339; https\uff1a//v8.dev/docs&#39;\uff09.thgh \uff08\uff08\uff09=\uff06gt;\uff06\uff0339; docs\uff06\uff0339;\uff09]\uff09\u3002\u7136\u540e\uff08\uff08first\uff09=\uff06gt; {//\u4efb\u4f55\u627f\u8bfa\u90fd\u5df2\u6ee1\u8db3\u3002Console.log\uff08\u7b2c\u4e00\uff09; //\u2192\uff06\uff0339;\u4e3b\u9875\uff06\uff0339;}\uff09\u3002catch\uff08\uff08\u9519\u8bef\uff09=\uff06gt; {//\u6240\u6709\u7684\u627f\u8bfa\u88ab\u62d2\u7edd\u4e86\u3002console.log\uff08\u9519\u8bef\uff09;}\uff09;\n       \u8ba9\u76ee\u6807= {};\u8ba9WR =\u65b0\u7684\u5f31ref\uff08\u76ee\u6807\uff09; // wr\u548ctarget areN\uff06\uff0339; t\u76f8\u540c//\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6ce8\u518c\u8868constregry = new finalizationregistry\uff08hettvalue =\uff06gt; {// ....}\uff09; registry.register\uff08MyObject\uff0c\uff06\uff0334;\u4e00\u4e9b\u4ef7\u503c\u548c\uff0334;\uff0cmyobject\uff09; // ......\u540e\u6765\uff0c\u5982\u679c\u4f60\u4e0d\u5728\u4e4e...... myObject`\u4e86...\u6ce8\u518c\u8868.unRegister\uff08MyObject\uff09;\n  \u7528\u2665hemanth.hm. ", "note_en": "//&#34;Or Or Equals&#34;x ||= y;x || (x = y); // &#34;And And Equals&#34;x &amp;&amp;= y;x &amp;&amp; (x = y); // &#34;QQ Equals&#34;x ??= y;x ?? (x = y);\n const updateID =   user =&gt; {  // We can do this  if (!user.id) user.id =  1  // Or this user.id = user.id ||  1  // Or use logical assignment operator. user.id ||=  1}\n    1_000_000_000  // Ah, so a billion 101_475_938.38  // And this is hundreds of millions let fee =  123_00;  // $123 (12300 cents, apparently) let fee =  12_300;  // $12,300 (woah, that fee!) let amount =  12345_00;  // 12,345 (1234500 cents, apparently) let amount =  123_4500;  // 123.45 (4-fixed financial) let amount =  1_234_500;  // 1,234,500\n    Promise.any([ fetch( &#39;https://v8.dev/&#39;).then( () =&gt;  &#39;home&#39;), fetch( &#39;https://v8.dev/blog&#39;).then( () =&gt;  &#39;blog&#39;), fetch( &#39;https://v8.dev/docs&#39;).then( () =&gt;  &#39;docs&#39;)]).then( ( first) =&gt; {  // Any of the promises was fulfilled.  console.log(first);  // \u2192 &#39;home&#39;}).catch( ( error) =&gt; {  // All of the promises were rejected.  console.log(error);});\n       let target = {}; let wr =  new WeakRef(target); //wr and target aren&#39;t the same // Creating a new registry const registry =  new FinalizationRegistry(  heldValue =&gt; {  // ....});registry.register(myObject,  &#34;some value&#34;, myObject); // ...some time later, if you don&#39;t care about `myObject` anymore...registry.unregister(myObject);\n  With \u2665  Hemanth.HM", "posttime": "2021-06-26 13:02:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "es2021,gt", "title": "ES2021\u529f\u80fd ", "title_en": "ES2021 Features", "transed": 1, "url": "https://h3manth.com/ES2021/", "via": "", "real_tags": ["es2021", "gt"]}, {"category": "", "categoryclass": "", "imagename": "a042f04ee890d6ddde13f09842445c23.png", "infoid": 1068385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u4ec5\u5728\u51e0\u884cJavaScript\u4e2d\u521b\u5efa\u8d85\u7ea7\u591a\u529f\u80fd\u751f\u6210/\u968f\u673a\u7f51\u683c\u5e03\u5c40\u3002\u4f7f\u7528\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u968f\u673a\u6570\uff0c\u6e90\u56fe\u50cf\uff0c\u7528\u6237\u8f93\u5165\u7b49\u548c\u8c10\u7f51\u683c\u751f\u6210\u548c\u8c10\u7f51\u683c\u3002\n \u6df7\u4e71\uff0c\u4f46\u5b8c\u7f8e\u5bf9\u9f50\u7684\u751f\u6210\u7f51\u683c\u4e16\u754c\u6b63\u5728\u7b49\u5f85\u6211\u4eec - \u8ba9\u6211\u4eec\u8d70\uff01\n \u6ce8\u610f\uff1a\u6211\u4ece\u4e94\u89d2\u661f\u6587\u4ef6\u4e2d\u83b7\u53d6\u4e86\u6211\u7684\u5386\u53f2\u6700\u559c\u6b22\u7684\u8bbe\u8ba1\u4ee3\u7406\u4eba\u4e4b\u4e00\u3002\u5728\u4ed6\u4eec\u4e3aGraphCore\u7684\u54c1\u724c\u5de5\u4f5c\u4e2d\uff0c\u5b83\u4eec\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u56db\u80a2\u66f2\u7ebf\u6765\u751f\u6210\u968f\u673a\u4e14\u89c6\u89c9\u76f8\u5e72\u7684\u6a21\u5f0f\u3002\u8f93\u51fa\u4ee4\u4eba\u60ca\u53f9\uff0c\u5e76\u4e14\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u521b\u5efa\u7684\u5947\u5999\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u6b64\u5904\u7684\u5de5\u4f5c\u6848\u4f8b\u7814\u7a76\uff01\n  \u9996\u5148\u662f\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u672c\u6559\u7a0b\u4e2d\u5b8c\u6210\u6211\u4eec\u6b63\u5728\u70f9\u996a\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u4e2a\u52a8\u753b\u7684Quadtree\u7f51\u683c\u4e2d\u7684\u52a8\u753b\u793a\u4f8b\uff1a\n   \u5c06\u4e00\u4e9b{x\uff0cy}\u6dfb\u52a0\u52302d\u7a7a\u95f4\u3002\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u70b9\u7684\u4f4d\u7f6e\u662f\u968f\u673a\u7684\uff0c\u4f46\u671d\u5411\u7126\u70b9\u504f\u7f6e\u3002\n   \u4f7f\u7528\u751f\u6210\u7684\u7f51\u683c\u533a\u57df\u6765\u5b9a\u4f4d\u4e1c\u897f\uff01\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4f7f\u7528\u6b63\u65b9\u5f62\u548c\u5706\u5708\u6765\u5f62\u6210\u7b80\u5355\u7684\u6a21\u5f0f\u3002\n  \u901a\u8fc7\u5c1d\u8bd5\u5177\u6709\u521b\u9020\u6027\u7684\u65b9\u5f0f\u6765\u5b9a\u4f4d\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u8d85\u7ea7\u6709\u8da3\u7684\u7f51\u683c\u5e03\u5c40\u3002\u6b64\u793a\u4f8b\u4f7f\u7528\u504f\u89c1\u968f\u673a\u6570\uff0c\u4f46\u5982\u679c\u662f\uff0c\u5219\u4f55\u65f6\u4f55\u5730\u6765\u81ea\u56fe\u50cf\u7684\u4eae\u5ea6\u503c\uff1f \n\u6211\u4eec\u53ef\u4ee5\u5728\u6590\u6ce2\u90a3\u514b\u62c9\u65af\uff0c\u4e00\u4e2a\u5706\u5f62\uff0c\u5e7f\u573a\uff0c\u65e0\u8bba\u5982\u4f55\u7684\u7167\u7247\u4e2d\u4f20\u9012\uff0c\u5e76\u6839\u636e\u5176\u50cf\u7d20\u503c\u751f\u6210\u6211\u4eec\u7684\u70b9\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\uff01\u4efb\u4f55\u7528\u4e8e\u57282D\u7a7a\u95f4\u4e2d\u5b9a\u4f4d\u5bf9\u8c61\u7684\u65b9\u6cd5\u90fd\u5c06\u8d77\u4f5c\u7528\u3002\u9ece\u601d\uff0c\u8d8a\u597d\u3002\n  \u6211\u4eec\u5728\u8fd9\u91cc\u770b\u5230\u7684\u7ec6\u5206\u9b54\u6cd5\u5168\u90e8\u7531\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\u5904\u7406\u3002\u6211\u559c\u6b22\u50cf\u5c0f\u5bb9\u5668\u4e00\u6837\u60f3\u5230\u56db\u8f6e\u8282\u3002\u4e00\u65e6Quadtree\u586b\u5145\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\uff0c\u5b83\u5c31\u4f1a\u5c06\u5176\u81ea\u8eab\u62c6\u5206\u4e3a\u56db\u4e2aQuadtrees\u3002\u4e00\u65e6\u90a3\u4e9bQuadtrees\u586b\u6ee1\uff0c\u4ed6\u4eec\u518d\u6b21\u5212\u5206\u81ea\u5df1\uff0c\u7b49\u7b49\u3002\n Quadtree\u53ef\u4ee5\u68d8\u624b\u53ef\u89c6\u5316\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u793a\u4f8b - \u5355\u51fb\u4ee5\u6dfb\u52a0\u5bf9\u8c61/\u70b9\u5e76\u89c2\u5bdfQuadtree Subdivides\u7684\u65b9\u5f0f\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0cQuadtree\u53ef\u4ee5\u5305\u542b\u7684\u6700\u5927\u9879\u76ee\u6570\u662f\u56db\u4e2a\u3002\n  \u975e\u5e38\u6ee1\u8db3......\u8fd9\u662f\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7684\u4e00\u5207\u5173\u4e8e\u8fd9\u4e00\u6559\u7a0b\u7684\u56db\u7ae0\uff0c\u4f46\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ed6\u4eec\u5982\u4f55\u5de5\u4f5c/\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\uff0c\u8bf7\u67e5\u770b\u4e39Shiffman\u7684\u8fd9\u6bb5\u89c6\u9891\u3002\n  \u867d\u7136\u4efb\u4f55\u4eba\u90fd\u662f\u6b22\u8fce\u6765\u9075\u5faa - \u672c\u6559\u7a0b\u975e\u5e38\u9002\u5408\u4e0eJavaScript\u8212\u9002\u7684\u4eba\uff0c\u719f\u6089SVG / HTML\u753b\u5e03\u3002\n   \u4e3a\u4e86\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u6709\u8da3\u7684\u4e1c\u897f - \u6211\u5df2\u7ecf\u5411\u6211\u7684\u751f\u6210-Utils repo\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684createqtgrid\u51fd\u6570\u3002\u6b64\u51fd\u6570\u9700\u8981\u4e00\u7cfb\u5217\u70b9\u5e76\u8fd4\u56de\u5373\u7528\u7684Quadtree\u7f51\u683c\u3002\u5982\u679c\u60a8\u5e0c\u671b\u6f5c\u5165\u6e90\u4ee3\u7801\uff0c\u5219\u5728\u6b64\u5b58\u50a8\u5e93\u4e2d\u53ef\u7528\u3002\n \u6211\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u7f62\u5de5\u7801\u5934\uff0c\u4f60\u53ef\u4ee5\u53c9\u5f00\u59cb\u3002\u8fd9\u652f\u7b14\u6709\u5373\u5c06\u5230\u6765\u7684\u793a\u4f8b\u6240\u9700\u7684\u6240\u6709JS\u5bfc\u5165/\u57fa\u672cCSS\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u6b22\u8fce\u60a8\u5728\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u73af\u5883\u4e2d\u5173\u6ce8\u3002 \n\u8981\u5f00\u59cb\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2aQuadtree\u7f51\u683c\uff0c\u5e76\u504f\u89c1\u968f\u673a\u5206\u5e03\u70b9\u3002\u504f\u89c1\u968f\u673a\u6570\u5728\u8fd9\u91cc\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u5f3a\u70c8\u7684\u89c6\u89c9\u7126\u70b9\u3002\u5177\u6709\u8bbd\u523a\u7684\u968f\u673a\u6027\uff0c\u8bbd\u523a\u7684\u662f\uff0c\u5f80\u5f80\u6709\u70b9\u65e0\u804a\u5730\u4e3a\u56db\u80a2\u7f51\u683c\u3002\u7f51\u683c\u533a\u57df\u770b\u8d77\u6765\u592a\u7edf\u4e00\uff0c\u56e0\u4e3a\u8be5\u70b9\u6563\u843d\u57282D\u7a7a\u95f4\u4e0a\u3002\n \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SVG\u5143\u7d20\u5448\u73b0\u6211\u4eec\u7684\u7f51\u683c\u533a\u57df\u3002\u8ba9\u6211\u4eec\u9996\u5148\u5b9a\u4e49SVG's ViewBox\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5c5e\u6027\uff1a\n  \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\uff06lt; svg\uff06gt;\u5143\u7d20\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528svg.js  - \u4e00\u4e2a\u5927\u5927\u7b80\u5316\u4e86\u52a8\u6001SVG\u811a\u672c\u7684JavaScript\u5e93\u3002\u5728\u6211\u7684\u751f\u6210SVG\u5165\u95e8\u5957\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728SVG.js\u4e2d\u9605\u8bfb\u66f4\u591a\u4fe1\u606f\u3002\n  \u73b0\u5728\u6211\u4eec\u6709\u6211\u4eec\u7684SVG\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e9b\u504f\u89c1\u7684\u968f\u673a\u70b9\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Randombias\u51fd\u6570\u3002\u6b64\u51fd\u6570\u57fa\u4e8e\u56db\u4e2a\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570\uff1a\n \u504f\u89c1 - \u6700\u5c0f\u503c\u548c\u6700\u5927\u6570\u91cf\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u5b57\uff0c\u8fd9\u662f\u201c\u7126\u70b9\u201d\n \u5f71\u54cd -  0  -  1\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8be5\u53c2\u6570\u786e\u5b9a\u8fd4\u56de\u7684\u6570\u5b57\u53ef\u80fd\u662f\u504f\u5dee\u7684\u5173\u95ed\u7a0b\u5ea6\u3002\n \u8ba9\u6211\u4eec\u5f39\u51fa\u4e00\u4e9b\u4ee3\u7801\u6765\u751f\u6210100\u4e2a\u968f\u673a\u70b9\uff0c\u91cd\u70b9\u671d\u5411\u89c6\u56fe\u6846\u7684\u4e2d\u5fc3\uff0c\u5e76\u4f7f\u7528svg.js\u5448\u73b0\u5b83\u4eec\uff1a \nconst\u70b9= [... array\uff08100\uff09]\u3002\u6620\u5c04\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u5bbd\u5ea6/ 2,1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u9ad8\u5ea6/ 2,1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\u8981\u70b9\u3002 foreach\uff08\uff08point\uff09=\uff06gt; {svg\u3002\u5706\u5708\uff082\uff09\u3002cx\uff08point .x\uff09\u3002cy\uff08point .y\uff09;}\uff09;\n    \u8fd9\u4e2a\u70b9\u5206\u5e03\u770b\u8d77\u6765\u5f88\u53ef\u7231\uff0c\u4f46\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u4ee3\u7801\uff0c\u4ee5\u4fbf\u7126\u70b9\u53ef\u4ee5\u53d8\u5316\u4e00\u70b9\u3002\u8ba9\u6211\u4eec\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1a\n const focus = {x\uff1a\u968f\u673a\uff080\uff0c\u5bbd\u5ea6\uff09\uff0cy\uff1a\u968f\u673a\uff080\uff0c\u9ad8\u5ea6\uff09\uff0c}; const\u70b9= [... array\uff08100\uff09]\u3002\u5730\u56fe\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u7126\u70b9.x\uff0c1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u7126\u70b9\uff0c1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\n \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u968f\u673a\u51fd\u6570\u6765\u5728\u7f51\u683c\u4e0a\u751f\u6210\u968f\u673a{x\uff0cy}\u7126\u70b9\u70b9\u3002\u66f4\u65b0\u4ee3\u7801\u540e\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u8fd9\u6837\u7684\u5185\u5bb9\uff1a\n  \u5b8c\u7f8e\u7684\uff01\u8fd9\u79cd\u805a\u7126\u5c1a\u968f\u673a\u7684\u5206\u5e03\u5c06\u975e\u5e38\u9002\u5408\u56db\u6805\u683c\u7f51\u683c\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\uff1a\n  \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u5bbd\u5ea6\u503c\uff0c\u9ad8\u5ea6\u503c\uff0c\u7ea7\u522b\u9650\u5236\u4ee5\u53ca\u6211\u4eec\u521a\u624d\u751f\u6210\u7684\u70b9\u7684CreateQTGrid\u3002\u6211\u4eec\u8fd8\u901a\u8fc7\u5dee\u8ddd\u5c5e\u6027\u6765\u7ed9\u7f51\u683c\u533a\u6709\u70b9\u547c\u5438\u5ba4\u3002\n \u7535\u5e73\u9650\u5236\uff08\u7531MaxQtlevels\u63a7\u5236\uff09\u5b9a\u4e49\u4e86Quadtree\u53ef\u4ee5\u7ec6\u5206\u7684\u6b21\u6570\u3002\u8f83\u9ad8\u7684\u503c\uff0c\u914d\u5bf9\u8f83\u9ad8\u7684\u70b9\uff0c\u5c06\u5bfc\u81f4\u66f4\u8be6\u7ec6\u7684\u7f51\u683c\u3002 \n\u5982\u679c\u60a8\u73b0\u5728\u7684console.log\uff08\u7f51\u683c\uff09\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u4e00\u4e2a\u5177\u6709\u5c11\u6570\u4e0d\u540c\u5c5e\u6027\u7684\u5bf9\u8c61 - \u4f46\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u5bf9\u7f51\u683c\u533a\u57df\u611f\u5174\u8da3\u3002\u8ba9\u6211\u4eec\u904d\u5386\u8fd9\u4e9b\u5e76\u6e32\u67d3SVG\uff06lt; rect\uff06gt;\u6bcf\u4e00\u4e2a\u4eba\uff1a\n    \u4f18\u79c0\u7684\u3002\u5c31\u662f\u8fd9\u6837\uff01\u6211\u4eec\u5df2\u6210\u529f\u5730\u751f\u6210\u4e86\u4e00\u4e2a\u7f8e\u4e3d\u7684\u751f\u6210\u7f51\u683c\uff0c\u968f\u65f6\u51c6\u5907\u5145\u6ee1\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc\u662f\u6211\u4eec\u5982\u4f55\u5c06\u5706\u5708\u6dfb\u52a0\u5230\u968f\u673a\u9009\u62e9\u7f51\u683c\u533a\u57df\uff1a\n  \u563f\uff0c\u8fd9\u662f\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u539f\u79cd\u827a\u672f\uff01\u6240\u6709\u53ea\u662f\u51e0\u884c\u4ee3\u7801\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u8fd9\u4e2a\u6f14\u793a\uff0c\u4f46\u4f5c\u4e3a\u4e0b\u4e00\u6b65\uff0c\u6211\u5efa\u8bae\u4f7f\u7528\u70b9\u6570\uff0c\u6700\u5927\u7ec6\u5206\u91cf\uff08maxqtevels\uff09\u548c\u70b9\u5206\u5e03\u903b\u8f91 - \u770b\u770b\u4f60\u53ef\u4ee5\u521b\u9020\u7684\u4e1c\u897f\uff01\n  \u5728\u751f\u6210\u7684Quadtree\u83dc\u5355\u4e0a\u63a5\u4e0b\u6765\u662f\u4e00\u4e9b\u57fa\u4e8e\u56fe\u50cf\u7684\u7f51\u683c\u3002\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u56fe\u50cf\u6587\u4ef6\u7684\u50cf\u7d20\u503c\u6765\u786e\u5b9a\u6211\u4eec\u7684\u5e95\u5c42\u70b9\u3002\n \u8981\u8bbe\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5728\u6700\u540e\u4e00\u4e2a\u6f14\u793a\u4e2d\u5b9a\u4e49\u7684SVG\u5143\u7d20\u548c\u5bbd\u5ea6/\u9ad8\u5ea6\u53d8\u91cf\u3002\u6ce8\u91ca\u51fa\u4e0a\u4e00\u70b9\uff0c\u6e32\u67d3\u4ee3\u7801\u6216\u53c9\u7b14\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u3002\u4f60\u7684\u6765\u7535\uff01\n \u597d\u7684\uff0c\u6240\u6709\u96c6\u5408\uff1f\u8ba9\u6211\u4eec\u627e\u5230\u5408\u9002\u7684\u5f62\u8c61\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u6f14\u793a\uff0c\u4ec5\u5305\u542b\u5b8c\u5168\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7684\u7b80\u5355\u56fe\u7247\u662f\u5b8c\u7f8e\u7684\u3002\u5f62\u72b6\uff08\u5706\u5f62\uff0c\u65b9\u5f62\uff0c\u87ba\u65cb\uff09\u7684\u57fa\u672c\u8f6e\u5ed3\u662f\u7406\u60f3\u7684\u3002\u60f3\u60f3\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\n  \u5982\u679c\u60a8\u4e0d\u559c\u6b22\u97ad\u6253\u4efb\u4f55\u81ea\u5b9a\u4e49\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u8d8a\u65e9\u7684\u4e00\u4e9b\u3002 *\u4ece\u5947\u602a\u7684\u6570\u5b57\u70e4\u7bb1\u4e2d\u5220\u9664\u9884\u5148\u5236\u9020\u7684\u5f62\u72b6...... * \n\u8fd9\u4e9b\u56fe\u50cf\u7684\u5927\u5c0f\u4e3a192x192px\uff0c\u5339\u914d\u793a\u4f8bSVG ViewBox\u548cQuadtree\u7f51\u683c\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c5e\u6027\u3002\u5c06\u56fe\u50cf\u793a\u4f8b\u683c\u5f0f\u5316\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ee5\u8282\u7701\u5fc5\u987b\u6267\u884c\u4efb\u4f55\u65f6\u9ae6\u7684\u8ba1\u7b97\u3002\u60a8\u4e0d\u5fc5\u4e3a\u6b64\u5206\u8fa8\u7387\u5de5\u4f5c\uff0c\u4f46\u8bf7\u5c1d\u8bd5\u5e76\u786e\u4fdd\u60a8\u7684\u56fe\u50cf\u5c3a\u5bf8\u5339\u914d\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c3a\u5bf8\u3002\n \u6ce8\u610f\uff1a\u867d\u7136\u8fd9\u4e9b\u6e90\u56fe\u50cf\u975e\u5e38\u5c0f\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u5c06\u6269\u5c55\u5230\u4efb\u4f55\u5927\u5c0f\u3002\n \u9009\u62e9\u56fe\u50cf\u540e\uff0c\u5f39\u56de\u4ee3\u7801\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u5143\u7d20\uff0c\u5c06\u5176\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u8bbe\u7f6e\u4e3aSVG Viewbox /\u7f51\u683c\uff0c\u5e76\u5c06\u5176\u4e0a\u4e0b\u6587\u5b58\u50a8\u5728\u65b0\u53d8\u91cf\u4e2d\u3002\u6211\u4eec\u5c06\u5728\u7247\u523b\u4e2d\u4f7f\u7528\u6b64\u753b\u5e03\u6765\u6e32\u67d3\u6211\u4eec\u7684\u56fe\u50cf\u5e76\u63d0\u53d6\u5176\u50cf\u7d20\u6570\u636e\u3002\n    \u4e00\u65e6\u56fe\u50cf\u52a0\u8f7d\uff0c\u6211\u4eec\u5c06\u5176\u6e32\u67d3\u4e3a\u6211\u4eec\u7684\u753b\u5e03\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u70b9\u6570\u7ec4\uff0c\u5e76\u5faa\u73af\u901a\u8fc7\u6240\u6709\u753b\u5e03\u7684\u50cf\u7d20\u3002\u5982\u679c\u50cf\u7d20\u5177\u6709\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u503c\u4e3a0\uff08\u9ed1\u8272\u50cf\u7d20\uff09\uff0c\u5219\u6211\u4eec\u5c06\u5176\u5750\u6807\u5b58\u50a8\u5728\u70b9\u6570\u7ec4\u4e2d - \u8fd9\u5c31\u662f\u6211\u4eec\u4f7f\u7528\u4ec5\u7531\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7ec4\u6210\u7684\u56fe\u50cf\u7684\u539f\u56e0\u3002\n \u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u6269\u5c55\u6b64\u4ee3\u7801\u4ee5\u5904\u7406\u5168\u5f69\u8272\u56fe\u50cf\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u4e3a\u6f14\u793a\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u7269\u3002\n \u8981\u5728\u6b64\u5904\u8fdb\u884c\u4e00\u4e9b\u53ef\u89c6\u53cd\u9988\uff0c\u8bf7\u8ba9\u6211\u4eec\u5728\u8fd9\u4e9b\u70b9\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6e32\u67d3SVG\u5708\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {CTX\u3002\u62d4\u8ff9\uff08IMG\uff0c0,0\uff09; const\u70b9= []; for\uff08\u8bbe\u5b9ax = 0; x\uff06lt;\u5bbd\u5ea6; x ++\uff09{for\uff08\u8bbe\u5b9a= 0; y\uff06lt; height; height; y ++\uff09{const {data} = ctx\u3002 getimagedata\uff08x\uff0cy\uff0c1,1\uff09; if\uff08\u6570\u636e[0] +\u6570\u636e[1] +\u6570\u636e[2] === 0\uff09{\u70b9\u3002\u63a8\uff08{x\uff0cy\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1}\uff09; SVG\u3002\u5706\u5708\uff081\uff09\u3002 cx\uff08x\uff09\u3002 cy\uff08y\uff09; }}}}; \n\u563f\uff0c\u770b\u770b\uff01\u5b83\u662f\u539f\u59cb\u56fe\u50cf\u53d8\u6210{x\uff0cy}\u70b9\u3002\u5b8c\u7f8e\u7684\u3002\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e9b\u70b9\u4f20\u9012\u7ed9\u6211\u4eec\u7684CreateQTGrid\u51fd\u6570\uff0c\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\u3002\u8fd9\u6b21\uff0c\u5c1d\u8bd5\u5c06MaxQtlevels\u8bbe\u7f6e\u4e3a\u7a0d\u9ad8\u7684\u6570\u5b57 - \u8fd9\u5e94\u8be5\u6709\u52a9\u4e8e\u5728\u7f51\u683c\u4e2d\u5e26\u51fa\u8be6\u7ec6\u4fe1\u606f\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {... const grid = createqtgrid\uff08{\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u70b9\uff0c\u95f4\u9699\uff1a1\uff0cmaxqtlevels\uff1a6}\uff09; }\n \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4e0e\u6f14\u793a\uff031\u76f8\u540c\u7684\u65b9\u5f0f\u5faa\u73af\u901a\u8fc7\u7f51\u683c\u533a\u57df\uff0c\u6e32\u67d3\u6bcf\u4e2aON\u7684SVG\u77e9\u5f62\uff1a\n    \u7f8e\u4e3d\u7684\uff01\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5e95\u5c42\u6e90\u56fe\u50cf\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6e90\u56fe\u50cf\u662f\u6590\u6ce2\u7eb3\u5951\u87ba\u65cb\u3002\u975e\u5e38\u82b1\u54e8\u7684\u786e\uff01\u8fd9\u662f\u8fd9\u4e2a\u7f51\u683c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5706\u5f62/\u77e9\u5f62\u7684\u4e1c\u897f\uff1a\n  \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u540c\u7684\u56fe\u50cf\u9700\u8981\u7565\u5fae\u4e0d\u540c\u7684maxqtlevels\u503c\u3002\u5c31\u50cf\u751f\u6210\u827a\u672f\u4e2d\u7684\u4e00\u5207\u4e00\u6837\uff0c\u6ca1\u6709\u5355\u4e00\u7684\u9b54\u6cd5\u53f7\u7801\u3002\u6700\u597d\u7684\u7ed3\u679c\u6765\u81ea\u5c4f\u5e55\u4e0a\u7684\u8bb8\u591a\u8c03\u6574\u548c\u772f\u773c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\u5728\u6211\u4eec\u7684Quadtree\u5192\u9669\u4e2d\uff0c\u6211\u4eec\u4e13\u95e8\u4f7f\u7528SVG\u6765\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\uff0c\u4f46\u4f3c\u4e4e\u6709\u70b9\u7f9e\u803b\u5730\u79bb\u5f00CSS\u7f51\u683c\uff0c\u5bf9\u5427\uff1f\n \u597d\u5427\uff0c\u6211\u6709\u4e00\u4e9b\u597d\u6d88\u606f\uff01 CreateQTGrid\u8fd4\u56de\u7684\u533a\u57df\u5bf9\u8c61\u4e5f\u5177\u6709COL\u548c\u884c\u503c\u3002\u4f7f\u7528\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u751f\u6210CSS\u7f51\u683c\u5e03\u5c40 - \u51c6\u5907\u7528\u4e8e\u5404\u79cd\u521b\u65b0\u8bbe\u8ba1\u3002 \n\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8fdb\u5165\u592a\u591a\u7ec6\u8282\uff0c\u56e0\u4e3a\u521b\u5efaCSS\u7f51\u683c\u5e03\u5c40\u7684\u8fc7\u7a0b\u4e0e\u524d\u4e00\u4e2a\u793a\u4f8b\u7684\u8fdb\u7a0b\u76f8\u540c\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u6587\uff0c\u663e\u793a\u5982\u4f55\u4f7f\u7528HTML / CSS\u7684CreateQtGrid\u51fd\u6570\uff1a  \u563f\uff0c\u6211\u4eec\u505a\u4e86\uff01 \u975e\u5e38\u611f\u8c22\u4f60\u7684\u9605\u8bfb\u76f4\u5230\u6700\u540e\u3002 \u6211\u77e5\u9053\u8fd9\u4e9b\u6982\u5ff5\u6709\u70b9\u6c89\u91cd\uff0c\u4f46\u8fd9\u91cc\u5b66\u5230\u7684\u6280\u672f\u5c06\u5728\u60a8\u7684\u751f\u6210\u827a\u672f\u5192\u9669\u4e2d\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\u3002  \u5982\u679c\u60a8\u5728\u672c\u6559\u7a0b\u4e2d\u6388\u8bfe\u7684\u5185\u5bb9\u9177\uff0c\u8bf7\u544a\u8bc9\u6211\uff01 \u6ca1\u6709\u6211\u7684\u559c\u7231\uff0c\u800c\u4e0d\u662f\u770b\u5230\u57fa\u4e8e\u6211\u7684\u6559\u7a0b\u7684\u4eba\u4eec\u505a\u4e9b\u4ec0\u4e48\u3002  \u6ce8\u518c\u6bcf\u6708\u66f4\u65b0\u5bf9\u6211\u7684\u65b0\u5185\u5bb9\uff0c\u9009\u62e9\u6211\u6700\u559c\u6b22\u7684\u65b0\u4ee3\u53f7\uff0c\u7f8e\u5473\u7684\u5b57\u4f53\uff0c\u65b9\u4fbf\u7684\u524d\u7aef+\u8bbe\u8ba1\u63d0\u793a\u7b49\u7b49\uff01 \u2728 ", "note_en": "In this tutorial, we will be learning to create super versatile generative/random grid layouts in just a few lines of JavaScript. Using a data structure called a Quadtree, we will produce harmonious grids based on random numbers, source images, user input, and more.\n The chaotic, yet perfectly aligned world of generative grids is waiting for us \u2014 let\u2019s go!\n Note: I picked up this technique from one of my all-time favorite design agencies,  Pentagram. In their branding work for  Graphcore, they use Quadtrees extensively to generate random yet visually coherent patterns. The output is stunning and is a fantastic example of what you can create with this method.  You can check out a case study of the work here!\n  First things first, let\u2019s go over exactly  what we are cooking up in this tutorial. Here\u2019s an animated example of a generative Quadtree grid in action:\n   Add some  { x, y } points to a 2D space. In this example, the point\u2019s positions are random but biased towards a focal point.\n   Use the resulting grid areas to position stuff! In the example above, I am using squares and circles to form a simple pattern.\n  By experimenting with creative ways to position the points, we can create some  super interesting grid layouts. This example uses biased random numbers, but what if, for example \u2014 the points came from the brightness values of an image?\n We could pass in a picture of a Fibonacci spiral, a circle, a square, whatever, and have our points generate based on its pixel values. The possibilities are endless! Any method for positioning objects in a 2D space will work.  The weirder, the better.\n  The subdividing magic we see here is all handled by a data structure called a  Quadtree. I like to think of Quadtrees as little containers. Once the Quadtree fills with a certain number of objects, it splits itself into four more Quadtrees. Once those Quadtrees fill up, they divide themselves again, and so on.\n Quadtrees can be tricky to visualize, so here is an interactive example \u2014 click to add objects/points and observe how the Quadtree subdivides. In this example, the maximum number of items a Quadtree can contain is  four.\n  Very satisfying indeed\u2026 this is everything we need to know about Quadtrees for this tutorial, but if you would like to learn more about how they work/how you can use them,  check out this video by Dan Shiffman.\n  Although anyone is, of course, welcome to follow along \u2014 this tutorial is perfect for folks comfortable with JavaScript and  familiar with SVG/HTML Canvas.\n   To keep things simple and let us focus on the fun stuff \u2014 I have added a handy  createQtGrid function to my  generative-utils repo. This function takes an array of points and returns a ready-to-use Quadtree grid. If you would like to dive into the source code, it is  available in this repository.\n I have also created a  starter CodePen that you can  fork to get started. This pen has all of the JS imports/basic CSS you need for the upcoming examples. As always, though, you are welcome to follow along in any environment you like.\n  To start, let\u2019s create a Quadtree grid with a biased random distribution of points. Biased random numbers work great here, as they provide a strong visual focus. Pure randomness, ironically, tends to look  a little boring for Quadtree grids. The grid areas look too uniform, as the points are scattered all over the 2D space.\n In this example, we will use an SVG element to render our grid areas. Let\u2019s start by defining a  width and  height property for the SVG\u2019s viewBox:\n  Next, let\u2019s create a new  &lt;svg&gt; element to render our grid. For this, we are going to use  svg.js \u2014 a JavaScript library that greatly simplifies dynamic SVG scripting.  You can read a little more about svg.js in my  Generative SVG Starter Kit.\n  Now that we have our SVG element, we can generate some biased random points. To do so, we can make use of the  randomBias function. This function returns a random number based on four arguments:\n Bias - any number between the minimum and maximum number, this is the \u201cfocus point\u201d\n Influence - A number between 0 - 1, this argument determines how close the returned number is likely to be to the bias.\n Let\u2019s pop some code in to generate 100 random points, with a focus towards the center of the viewBox, and use svg.js to render them:\n const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , width  /  2 ,  1 ) ,  y :  randomBias ( 0 , height , height  /  2 ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;  points . forEach ( ( point )  =&gt;  {  svg . circle ( 2 ) . cx (point .x ) . cy (point .y ) ;  } ) ;\n    This point distribution looks lovely, but we should update the code so that the focus point can vary a little. Let\u2019s make that happen:\n const focus  =  {  x :  random ( 0 , width ) ,  y :  random ( 0 , height ) ,  } ;   const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , focus .x ,  1 ) ,  y :  randomBias ( 0 , height , focus .y ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;\n In this snippet, we use the  random function to generate a random  { x, y } focus point on the grid. Once the code is updated, you should see something like this:\n  Perfect! This focused-yet-random distribution is going to look great for Quadtree grids. Let\u2019s create one:\n  In this snippet, we call  createQtGrid with a width value, a height value, a level limit, and the points we generated just now. We also pass in a  gap property to give the grid areas a little breathing room.\n The level limit (controlled by  maxQtLevels) defines how many times the Quadtree can subdivide. A higher value, paired with a higher number of points, will result in a more detailed grid.\n If you  console.log(grid) now, you should see an object with a few different properties \u2014 at this point, though, we are only interested in the grid areas. Let\u2019s iterate over these and render an SVG  &lt;rect&gt; for each one:\n    Excellent. That\u2019s it! We have successfully generated a beautiful generative grid, ready to be filled with anything you like. As a simple example, here\u2019s how we could add a circle to a random selection of the grid areas:\n  Hey, that\u2019s some pretty cool generative art! All in just a few lines of code, too. We are all done with this demo now, but as a next step, I suggest having a play with the number of points, maximum subdivision amount ( maxQtLevels), and the point distribution logic \u2014 see what you can create!\n  Next up on the generative Quadtree menu are some delicious image-based grids. For this example, we will be using the pixel values of image files to determine our underlying points.\n To get set up, we can re-use the SVG element and width/height variables defined in the last demo. Either comment out the previous point generation/render code or fork the pen and create a fresh canvas. Your call!\n Ok, all set? Let\u2019s find a suitable image. For our demo, a simple picture comprised of only entirely black or white pixels is perfect. The basic outline of a shape  (a circle, square, spiral) is ideal. Think something like this:\n  If you don\u2019t fancy whipping up any custom images, here are some I made earlier.  *Removes pre-made shapes from the weird digital oven\u2026*\n  These images are all  192x192px in size, matching the width/height attributes of the example SVG viewBox and Quadtree grid. The image examples are formatted this way to save on having to do any funky calculation. You don\u2019t have to work to this resolution, but try and make sure your image dimensions match the width/height dimensions defined in your code.\n Note: although these source images are quite small, the end result will scale to any size.\n Once you have chosen your image, pop back into the code and create a new  canvas element, setting its width and height to that of your SVG viewBox/grid and storing its  context in a new variable. We will use this canvas in a moment to render our image and extract its pixel data.\n    Once the image has loaded, we render it to our canvas, define a new  points array, and loop through all of the canvas\u2019s pixels. If a pixel has a red, green, and blue value of 0  (a black pixel), we store its coordinates in the points array \u2014 this is why we are using images comprised of only black or white pixels.\n Note: You could expand this code to handle full color images, but we are keeping things simple for the demo.\n To get some visual feedback on what is happening here, let\u2019s also render an SVG  circle at each of these points:\n img . onload  =  ( )  =&gt;  {  ctx . drawImage (img ,  0 ,  0 ) ;    const points  =  [ ] ;    for  ( let x  =  0 ; x  &lt; width ; x ++ )  {   for  ( let y  =  0 ; y  &lt; height ; y ++ )  {   const  { data  }  = ctx . getImageData (x , y ,  1 ,  1 ) ;   if  (data [ 0 ]  + data [ 1 ]  + data [ 2 ]  ===  0 )  {  points . push ( { x , y , width :  1 , height :  1  } ) ;   svg . circle ( 1 ) . cx (x ) . cy (y ) ;   }   }   }  } ;\n   Hey, look at that! It\u2019s the original image turned into  { x, y } points. Perfect. Let\u2019s pass these points to our  createQtGrid function, just like before. This time, try setting  maxQtLevels to a slightly higher number \u2014 this should help bring out the detail in the grid:\n img . onload  =  ( )  =&gt;  {   ...    const grid  =  createQtGrid ( {  width ,  height ,  points ,  gap :  1 ,  maxQtLevels :  6   } ) ;  }\n Now, we can loop through the grid areas in the same way as demo #1, rendering an SVG rectangle at each one:\n    Beautiful! We have created a generative grid layout based on an underlying source image. In this case, that source image is a Fibonacci spiral. Very fancy indeed! Here\u2019s what this grid looks like with some circles/rectangles placed on it:\n  It\u2019s worth noting that different images will need slightly different  maxQtLevels values. Like everything in generative art, there is no single magic number. The best results come from lots of tweaking and squinting at the screen.\n  So far in our Quadtree adventure, we have exclusively used SVG to render our grids, but it seems like a bit of a shame to leave CSS grid out of the party, right?\n Well, I have some good news! The  area objects that  createQtGrid returns also have  col and  row values. Using these values, we can easily create generative CSS grid layouts \u2014 ready to use for all kinds of innovative designs.\n I won\u2019t go into too much detail here, as the process for creating CSS grid layouts is identical to that of the previous examples, but here\u2019s a CodePen showing how to use the  createQtGrid function with HTML/CSS:\n    Hey, we made it! Thank you so much for reading until the end. I know some of these concepts are a little heavy, but the techniques learned here will serve you well on your generative art adventure.\n If you make anything cool with the stuff taught in this tutorial, please let me know! There\u2019s nothing I love more than seeing what folks make based on my tutorials.\n   Sign up for monthly updates on fresh content from me, a selection of my favorite new CodePens, tasty fonts, handy front-end + design tips, and more! \u2728", "posttime": "2021-06-26 13:02:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5177\u6709,generative,\u7f51\u683c", "title": "\u5efa\u7acb\u5177\u6709\u56db\u53c9\u6811\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40 ", "title_en": "Building Generative Grid Layouts with Quadtrees", "transed": 1, "url": "https://georgefrancis.dev/writing/generative-grid-layouts-with-quadtrees/", "via": "", "real_tags": ["\u5177\u6709", "\u7f51\u683c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2,000\u5c81\u7684\u7eaa\u5ff5\u7891\u7684Hypogeum  - \u5b83\u7684\u201cBackstage\u201d - \u4ee5\u4eba\u884c\u9053\u4e3a\u8bbf\u5ba2\u6062\u590d\n    \u5728\u7f57\u9a6c\u7684\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e38\u5ba2\u9996\u6b21\u53ef\u4ee5\u5145\u5206\u63a2\u7d22\u5730\u4e0b\u96a7\u9053\u548c\u5ba4\u4f19\u4f34\uff0c\u66fe\u7ecf\u4e3a\u6218\u6597\u505a\u597d\u51c6\u5907\u7684\u89d2\u9053\u548c\u91ce\u751f\u52a8\u7269\u3002\n \u5360\u573015000\u5e73\u65b9\u7c73\uff0c2000\u5e74\u5386\u53f2\u7684\u7eaa\u5ff5\u7891\u7684\u6865\u7403\u5bf9\u516c\u4f17\u5f00\u653e\uff0c\u540e\u8005\u5728\u610f\u5927\u5229\u65f6\u88c5\u5c4bTod\u8d44\u52a9\u7684\u6062\u590d\u9879\u76ee\u5b8c\u6210\u540e\u3002\n  \u867d\u7136\u4eba\u4eec\u80fd\u591f\u4e0b\u964d\u5230\u6865\u7403\u7f51\u7edc - \u8fd9\u662f\u5706\u5f62\u5267\u573a\u7684\u7ade\u6280\u573a\uff0c\u53e4\u4ee3\u5267\u573a\u7684\u7ade\u6280\u573a\u662f\u4ec0\u4e48 - \u81ea2010\u5e74\u4ee5\u6765\uff0c\u4ed6\u4eec\u53ea\u80fd\u8fdb\u5165\u4e00\u5c0f\u90e8\u5206\u3002\u73b0\u5728\u6709\u8d70\u9053\u8ba9\u6e38\u5ba2\u63a2\u7d22\u96a7\u9053\u548c\u8154\u5ba4\u3002\n \u7f57\u9a6c\u6597\u517d\u573a\u4e3b\u4efb\u963f\u5c14\u6cd5\u5c3c\u7eb3\u00b7\u7f57\u8428\u65af\uff08Alfonsina Russo\uff09\u8868\u793a\uff0c\u6700\u521d\u572819\u4e16\u7eaa\u6316\u6398\u7684\u4f4e\u9ea6\u7247\u662f\u5706\u5f62\u5267\u573a\u7684\u771f\u6b63\u7684\u201c\u540e\u53f0\u201d\u3002\n \u201c\u4eca\u5929\u6211\u4eec\u6b63\u5728\u7559\u5230\u4e00\u5ea7\u7eaa\u5ff5\u7891\u5185\u7684\u7eaa\u5ff5\u7891\uff0c\u201dRusso\u8bf4\u3002 \u201c\u4ece\u9879\u76ee\u4e2d\u51fa\u73b0\u4e86\u4ec0\u4e48\u6837\u7684\u662f\uff0c\u6865\u7403\u6709400\u5c81\u7684\u5386\u53f2\uff0c\u4ece\u5706\u5f62\u5267\u573a\u5728AD80\u5f00\u4e1a\u5230523\u5e74\u7684\u6700\u7ec8\u5c55\u4f1a\u3002\u201d\n \u5979\u8bf4\uff0c15\u6b21\u6062\u590d\u7684\u8d70\u5eca\u53d9\u8ff0\u4e86\u201c\u5386\u53f2\u8ffd\u8e2a\u201d\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5de6\u8f6c\u201c\u3002 \nTod's\u8463\u4e8b\u957f\u8fed\u6208\u5fb7\u62c9\u5c71\u8c37\u8868\u793a\uff0c\u8d85\u8fc780\u540d\u8003\u53e4\u5b66\u5bb6\uff0c\u5efa\u7b51\u5e08\u548c\u5de5\u7a0b\u5e08\u4eec\u53c2\u4e0e\u4e86\u4e24\u5e74\u7684\u9879\u76ee\u201c\u5e26\u56de\u5168\u4e16\u754c\u7231\u7684\u7eaa\u5ff5\u7891\u201d\u3002\n \u5f53\u610f\u5927\u5229\u6587\u5316\u90e8\u957fDario FrancesChini\u5ba3\u5e03\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u7684\u6279\u8bc4\uff0c\u4e3a\u7f57\u9a6c\u7eaa\u5ff5\u7891\u8fdb\u884c\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u3002 Hypogeum\u7684\u6062\u590d\u662f\u5728\u4e4d\u4e00\u770b\u7684\u4e09\u9636\u6bb5\u9879\u76ee\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u5f00\u59cb\u516b\u5e74\u524d\uff0c\u8fc4\u4eca\u4e3a\u6b62\u6258\u5fb7\u5171\u8ba1\u989d\u5916\u652f\u4ed82500\u4e07\u6b27\u5143\uff082100\u4e07\u82f1\u9551\uff09\u3002\n \u7b2c\u4e00\u9636\u6bb5\u4e13\u6ce8\u4e8e\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e05\u7406\uff0c\u4ee5\u53ca\u9884\u8ba1\u5c06\u4e8e2024\u5e74\u5b8c\u6210\u7684\u6700\u540e\u4e00\u90e8\u5206\u5c06\u6d89\u53ca\u6062\u590d\u753b\u5eca\u548c\u7167\u660e\u7cfb\u7edf\u4ee5\u53ca\u6dfb\u52a0\u65b0\u7684\u6e38\u5ba2\u4e2d\u5fc3\u3002\n \u201c\u62e5\u6709\u5b8c\u5168\u516c\u79c1\u5408\u4f5c\u6709\u6743\uff0c\u201dFranceschini\u8bf4\u3002 \u201c\u8be5\u9879\u76ee\u975e\u5e38\u91cd\u8981\uff0c\u5e76\u5c55\u793a\u4e86\u4e00\u5bb6\u610f\u5927\u5229\u516c\u53f8\u5982\u4f55\u51fa\u53e3\u4e16\u754c\u5404\u5730\u7684\uff0c\u7136\u540e\u5728\u5176\u56fd\u5bb6\u6295\u8d44\u4ee5\u4fdd\u62a4\u5176\u827a\u672f\u548c\u6587\u5316\u9057\u4ea7\u3002\u201d\n \u5176\u4ed6\u610f\u5927\u5229\u54c1\u724c\u5df2\u7ecf\u652f\u4ed8\u4e86\u5173\u952e\u7eaa\u5ff5\u7891\u7684\u88c5\u4fee\uff0c\u5305\u62ec\u4fee\u590dTrevi\u55b7\u6cc9\u548cBulgari\u7684Fendi\uff0c\u6062\u590d\u4e86\u897f\u73ed\u7259\u8bed\u6b65\u9aa4\u3002\n \u4e0e\u6b64\u540c\u65f6\uff0c\u9884\u8ba1\u5c06\u57282023\u5e74\u6062\u590d\u6597\u517d\u573a\u5730\u677f\u7684\u9879\u76ee\u3002\u65b0\u7684\u9ad8\u79d1\u6280\u9636\u6bb5\u53ef\u80fd\u4f1a\u4e3e\u529e\u6587\u5316\u6d3b\u52a8\uff0c\u5c06\u80fd\u591f\u5feb\u901f\u8986\u76d6\u6216\u63ed\u793a\u5730\u4e0b\u7f51\u7edc\uff0c\u5141\u8bb8\u4ed6\u4eec\u53d7\u5230\u9632\u6b62\u96e8\u6c34\u6216\u64ad\u51fa\u3002\n \u5728\u7f57\u9a6c\u65f6\u4ee3\uff0c\u4eba\u7fa4\u5c06\u586b\u8865\u7f57\u9a6c\u6597\u517d\u573a\u89c2\u770b\u89d2\u6597\u58eb\u51fb\u8d25\u52a8\u7269\uff0c\u5305\u62ec\u718a\uff0c\u8001\u864e\uff0c\u5927\u8c61\u548c\u7280\u725b\u3002 ", "note_en": "Hypogeum of 2,000-year-old monument \u2013 its \u2018backstage\u2019 \u2013 restored with walkways for visitors\n    For the first time, visitors to the Colosseum in Rome can fully explore the underground tunnels and chambers where gladiators and wild animals once prepared for battle.\n Spread across 15,000 square metres, the hypogeum of the 2,000-year-old monument is open to the public following the completion of a restoration project funded by the Italian fashion house Tod\u2019s.\n  Although people have been able to descend into the hypogeum network \u2013 which lies beneath what was the amphitheatre\u2019s arena and was invisible to spectators in ancient times \u2013 since 2010, they could enter only a small section. Now there are walkways allowing visitors to explore the tunnels and chambers.\n Alfonsina Russo, the director of the Colosseum, said the hypogeum, which was originally excavated in the 19th century, was the true \u201cbackstage\u201d of the amphitheatre.\n \u201cToday we are returning to the public a monument within a monument,\u201d Russo said. \u201cWhat emerged [from the project] is that the hypogeum had a 400-year-long history, from when the amphitheatre opened in AD80 to the final show in 523.\u201d\n She said the 15 restored corridors recounted \u201ctraces [of history] left over time\u201d.\n More than 80 archaeologists, architects and engineers were involved in the two-year project to \u201cbring back to the centre of attention a monument that the whole world loves\u201d, said Diego Della Valle, the chairman of Tod\u2019s.\n There was much criticism when Italy\u2019s culture minister, Dario Franceschini, announced several public-private partnerships for the renovation of Rome\u2019s monuments. The restoration of the hypogeum is the second part of a three-phase project on the Colosseum that began eight years ago and for which Tod\u2019s has paid a total of \u20ac25m (\u00a321m).\n The first phase focused on a clean-up of the Colosseum\u2019s facade, and the final part, expected to be completed in 2024, will involve restoring the galleries and lighting system as well as adding a new visitor centre.\n \u201cIt\u2019s right to have full public-private collaboration,\u201d Franceschini said. \u201cThe project is really important and demonstrates how an Italian company, which exports all over the world, then invests back in its country to protect its artistic and cultural heritage.\u201d\n Other Italian brands that have paid for the renovations of key monuments include Fendi, which restored the Trevi Fountain, and Bulgari, which restored the Spanish Steps.\n Meanwhile, a project to restore the  floor of the Colosseum to its former glory is expected to be completed in 2023. The new, hi-tech stage, which could host cultural events, will be able to quickly cover or uncover the underground networks, allowing them to be protected from the rain or to be aired out.\n In Roman times, crowds would fill the Colosseum to watch gladiators defeat animals including bears, tigers, elephants and rhinoceroses.", "posttime": "2021-06-26 13:01:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f57\u9a6c,tunnels,\u6062\u590d", "title": "\u7f57\u9a6c\u7684\u5730\u4e0b\u96a7\u9053\u5b8c\u5168\u5411\u516c\u4f17\u5f00\u653e ", "title_en": "Underground tunnels of Rome\u2019s Colosseum fully opened to public", "transed": 1, "url": "https://www.theguardian.com/world/2021/jun/25/underground-tunnels-of-romes-colosseum-fully-opened-to-public", "via": "", "real_tags": ["\u7f57\u9a6c", "tunnels", "\u6062\u590d"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1073794, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8f91Charles R. Gallistel\uff0c\u7f57\u683c\u65af\uff0c\u65b0\u6cfd\u897f\u5dde\u7acb\u5927\u5b66\uff0cPiscataway\uff0cNJ\uff0c\u5e76\u4e8e2008\u5e745\u670813\u65e5\u6279\u51c6\uff082007\u5e7410\u670817\u65e5\u63a5\u53d7\u5ba1\u67e5\uff09\n\u6210\u5e74\u4eba\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5b58\u50a8\u7684\u6982\u5ff5\u77e5\u8bc6\u5c06\u9879\u76ee\u5206\u5272\u6210\u76f8\u4e92\u5173\u8054\u7684\u5355\u5143\u6765\u6269\u5c55\u4ed6\u4eec\u6709\u9650\u7684\u5de5\u4f5c\u8bb0\u5fc6\u80fd\u529b\u3002\u4f8b\u5982\uff0c\u6210\u5e74\u4eba\u5728\u628a\u5b57\u6bcd\u4e32PBSBBCCNN\u5206\u89e3\u6210\u4e09\u4e2a\u8f83\u5c0f\u7684\u5355\u5143\u540e\uff0c\u4f1a\u66f4\u597d\u5730\u8bb0\u4f4f\u5b83\uff1a\u7535\u89c6\u9996\u5b57\u6bcd\u7f29\u5199PBS\u3001BBC\u548cCNN\u3002\u8fd9\u79cd\u5206\u5757\u662f\u901a\u8fc7\u6559\u5b66\u4e60\u5f97\u7684\u7b56\u7565\u5417\uff1f\u6211\u4eec\u901a\u8fc7\u8be2\u95ee\u672a\u7ecf\u8bad\u7ec3\u7684\u5a74\u513f\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u6982\u5ff5\u77e5\u8bc6\u6765\u589e\u52a0\u8bb0\u5fc6\uff0c\u63a2\u7d22\u4e86\u8fd9\u79cd\u80fd\u529b\u7684\u8d77\u6e90\u3002\u5728\u6ca1\u6709\u4efb\u4f55\u5206\u7ec4\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\uff0c14\u4e2a\u6708\u5927\u7684\u5a74\u513f\u4e00\u6b21\u53ea\u80fd\u8ffd\u8e2a\u4e09\u4e2a\u9690\u85cf\u7684\u7269\u4f53\uff0c\u8fd9\u8bc1\u660e\u4e86\u5de5\u4f5c\u8bb0\u5fc6\u7684\u6807\u51c6\u6781\u9650\u3002\u5728\u56db\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u7ed9\u4e88\u5a74\u513f\u77e5\u89c9\u3001\u6982\u5ff5\u3001\u8bed\u8a00\u6216\u7a7a\u95f4\u7ebf\u7d22\uff0c\u5c06\u66f4\u5927\u7684\u6570\u7ec4\u89e3\u6790\u4e3a\u66f4\u5c0f\u7684\u5355\u5143\uff0c\u4ece\u800c\u66f4\u6709\u6548\u5730\u5b58\u50a8\u5728\u8bb0\u5fc6\u4e2d\u65f6\uff0c\u5a74\u513f\u53ef\u4ee5\u8d85\u8fc7\u8fd9\u4e00\u9650\u5236\u3002\u8fd9\u9879\u7814\u7a76\u4e3a\u672a\u7ecf\u8bad\u7ec3\u7684\u8bed\u8a00\u524d\u53d7\u8bd5\u8005\u63d0\u4f9b\u4e86\u57fa\u4e8e\u6982\u5ff5\u77e5\u8bc6\u7684\u8bb0\u5fc6\u6269\u5c55\u7684\u8bc1\u636e\u3002\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u5728\u6ca1\u6709\u6307\u4ee4\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u6ca1\u6709\u5065\u58ee\u7684\u8bed\u8a00\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u672c\u7684\u8bb0\u5fc6\u8ba1\u7b97\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u90fd\u662f\u53ef\u7528\u7684\uff0c\u6bd4\u663e\u5f0f\u5143\u8bb0\u5fc6\u7b56\u7565\u7684\u53d1\u5c55\u65e9\u4e86\u51e0\u5e74\u3002\n\u6210\u4eba\uff081-6\u5c81\uff09\u548c\u5a74\u513f\uff087-11\u5c81\uff09\u7684\u5de5\u4f5c\u8bb0\u5fc6\u80fd\u529b\u4e25\u91cd\u53d7\u9650\uff0c\u4e24\u7ec4\u4eba\u4e00\u6b21\u53ea\u80fd\u8bb0\u4f4f\u5927\u7ea6\u4e09\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\u3002\u6210\u5e74\u4eba\u5f88\u5c11\u610f\u8bc6\u5230\u8fd9\u79cd\u9650\u5236\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u5c42\u6b21\u91cd\u65b0\u7ec4\u7ec7\u8981\u8bb0\u5fc6\u7684\u523a\u6fc0\uff0c\u4ece\u800c\u589e\u52a0\u6211\u4eec\u53ef\u4ee5\u5b58\u50a8\u7684\u9879\u76ee\u603b\u6570\u3002\u4f8b\u5982\uff0c\u5b57\u6bcd\u4e32PBSBBCCNN\u5728\u8bc6\u522b\u51fa\u6784\u6210\u5b83\u7684\u4e09\u4e2a\u719f\u6089\u7684\u7535\u89c6\u9996\u5b57\u6bcd\u7f29\u5199PBS\u3001BBC\u548cCNN\u540e\uff0c\u66f4\u5bb9\u6613\u56de\u5fc6\u8d77\u6765\u3002\u8fd9\u79cd\u5206\u5757\u9700\u8981\u4f7f\u7528\u4ee5\u524d\u83b7\u5f97\u7684\u6982\u5ff5\u5c06\u4e0d\u53ef\u5206\u5272\u7684\u6570\u7ec4\u89e3\u6790\u4e3a\u66f4\u5c0f\u7684\u5355\u5143\uff0c\u8fd9\u4e9b\u5355\u5143\u66f4\u6709\u6548\u5730\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5b58\u50a8\u7684\u8868\u793a\u73b0\u5728\u6709\u4e24\u4e2a\u5d4c\u5957\u7ea7\u522b\uff1a\u5757\uff08\u7535\u89c6\u9996\u5b57\u6bcd\u7f29\u5199\uff09\u53ca\u5176\u7ec4\u4ef6\uff08\u6bcf\u4e2a\u9996\u5b57\u6bcd\u7f29\u5199\u4e2d\u7684\u5b57\u6bcd\uff09\u3002\n\u6210\u5e74\u4eba\uff0812-17\u5c81\uff09\u5e7f\u6cdb\u4f9d\u8d56\u4e8e\u5206\u7ea7\u8bb0\u5fc6\u91cd\u7ec4\uff0c\u8fd9\u65e2\u662f\u4e00\u79cd\u663e\u6027\u7b56\u7565\uff0c\u4e5f\u662f\u4e00\u79cd\u65e0\u610f\u8bc6\u8bb0\u5fc6\u8fc7\u7a0b\uff0814\u300118\u300119\uff09\uff0c\u4f46\u5176\u8d77\u6e90\u4ecd\u7136\u662f\u4e2a\u8c1c\u3002\u5982\u679c\u63d0\u4f9b\u660e\u786e\u7684\u6559\u5b66\uff0820-22\u5c81\uff09\uff0c\u4e94\u5c81\u7684\u513f\u7ae5\u53ef\u4ee5\u5206\u5c42\u6784\u5efa\u8bb0\u5fc6\uff0c\u8fd9\u589e\u52a0\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u901a\u8fc7\u660e\u786e\u6559\u5b66\u83b7\u5f97\u7684\u6587\u5316\u5efa\u6784\u7684\u53ef\u80fd\u6027\u3002\u7814\u7a76\u8868\u660e\uff0c\u5a74\u513f\u4f1a\u6839\u636e\u77e5\u89c9\u6216\u7edf\u8ba1\u7279\u5f81\uff0823-25\uff09\u5bf9\u9879\u76ee\u8fdb\u884c\u5206\u7ec4\uff0c\u4f46\u8fd9\u79cd\u5206\u7ec4\u5e76\u4e0d\u80fd\u771f\u6b63\u6269\u5927\u57fa\u4e8e\u9879\u76ee\u7684\u8bb0\u5fc6\u9650\u5236\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u4fdd\u7559\u7ec4\u7684\u8868\u5f81#39\uff1b\u5355\u4e2a\u7ec4\u4ef6\u3002\u5c3d\u7ba1\u5a74\u513f\u5bf9\u7a7a\u95f4\u5206\u7ec4\u9879\u76ee\u7684\u8bb0\u5fc6\u80fd\u529b\u6bd4\u672a\u5206\u7ec4\u9879\u76ee\u7684\u8bb0\u5fc6\u80fd\u529b\u66f4\u5f3a\uff0826\uff09\uff0c\u4f46\u8fd9\u79cd\u80fd\u529b\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u7ec4\u5757\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u5916\u90e8\u7ebf\u7d22\uff0c\u800c\u4e0d\u662f\u5185\u90e8\u5b58\u50a8\u7684\u77e5\u8bc6\u3002\u56e0\u6b64\uff0c\u4eba\u7c7b\u5982\u4f55\u5728\u5148\u524d\u83b7\u5f97\u7684\u77e5\u8bc6\u7684\u57fa\u7840\u4e0a\u83b7\u5f97\u6269\u5c55\u5de5\u4f5c\u8bb0\u5fc6\u7684\u80fd\u529b\u5c1a\u4e0d\u6e05\u695a\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u901a\u8fc7\u68c0\u67e5\u672a\u7ecf\u8bad\u7ec3\u7684\u5a74\u513f\u7684\u8bb0\u5fc6\u80fd\u529b\u6765\u6d4b\u8bd5\u8fd9\u79cd\u80fd\u529b\u662f\u5426\u662f\u901a\u8fc7\u660e\u786e\u7684\u6307\u5bfc\u5b66\u4e60\u7684\u3002\n\u5728\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u8fdb\u884c\u7684\u6570\u5341\u9879\u5b9e\u9a8c\u4e2d\uff0c\u6210\u5e74\u4eba\u7684\u5de5\u4f5c\u8bb0\u5fc6\u80fd\u529b\u53d7\u5230\u9650\u5236\u3002\u4f8b\u5982\uff0c\u5728\u5c4f\u5e55\u4e0a\u77ed\u6682\u95ea\u73b0\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u9635\u5217\u4e2d\uff0c\u6210\u5e74\u4eba\u53ea\u80fd\u5728\u5c4f\u5e55\u6d88\u5931\u540e\u8bb0\u4f4f\u6709\u9650\u6570\u91cf\u7684\u9879\u76ee\uff086\uff09\u3002\u51e0\u5341\u5e74\u6765\uff0c\u8fd9\u4e2a\u6709\u9650\u7684\u6570\u5b57\u88ab\u8ba4\u4e3a\u662f7\u00b12\uff0816\uff09\u3002\u7136\u800c\uff0c\u6700\u8fd1\u7684\u5206\u6790\u8868\u660e\uff0c7\u00b12\u9ad8\u4f30\u4e86\u5de5\u4f5c\u8bb0\u5fc6\u5bb9\u91cf\u3002\u5f53\u91c7\u53d6\u63aa\u65bd\u963b\u6b62\u5206\u5757\u65f6\uff0c\u6210\u5e74\u4eba\u53ea\u80fd\u50a8\u5b58\u4e09\u5230\u56db\u79cd\u7269\u54c1\uff081\uff09\u3002\u8be5\u9650\u5236\u5e7f\u6cdb\u9002\u7528\u4e8e\u89c6\u89c9\u548c\u542c\u89c9\u5b9e\u4f53\uff0c\u5305\u62ec\u5f69\u8272\u5f62\u72b6\u3001\u5b9a\u5411\u7ebf\u3001\u53e3\u8bed\u5b57\u6bcd\u548c\u53e3\u8bed\u5355\u8bcd\uff0c\u7528\u4e8e\u540c\u65f6\u6216\u987a\u5e8f\u5448\u73b0\u7684\u9879\u76ee\uff08\u5ba1\u67e5\u8bf7\u53c2\u89c1\u53c2\u8003\u6587\u732e1\uff09\u2020\u3002\n\u5728\u51e0\u79cd\u65b9\u6cd5\u4e2d\uff0c\u5a74\u513f\u540c\u65f6\u8bb0\u5fc6\u7684\u9879\u76ee\u6570\u91cf\u4e5f\u7a81\u7136\u53d7\u5230\u9650\u5236\uff0c\u65e0\u8bba\u9879\u76ee\u662f\u6309\u987a\u5e8f\u5448\u73b0\u8fd8\u662f\u540c\u65f6\u5448\u73b0\uff087-11\uff09\u3002\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u3001\u4e24\u4e2a\u6216\u4e09\u4e2a\u7269\u4f53\u88ab\u85cf\u5728\u76d2\u5b50\u91cc\u65f6\uff0c10\u523020\u4e2a\u6708\u5927\u7684\u5a74\u513f\u4f1a\u8bb0\u4f4f\u5e76\u641c\u7d22\u6b63\u786e\u7684\u6570\u5b57\uff0c\u4f46\u5f53\u56db\u4e2a\u6216\u66f4\u591a\u7269\u4f53\u88ab\u85cf\u5728\u76d2\u5b50\u91cc\u65f6\uff0c\u4f1a\u5931\u8d25\uff087-9\uff09\u3002\u56e0\u4e3a\u7269\u4f53\u88ab\u9690\u85cf\u4e86\u51e0\u79d2\u949f\u751a\u81f3\u51e0\u5341\u79d2\u949f\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u8ba4\u4e3a\u662f\u5229\u7528\u5de5\u4f5c\u8bb0\u5fc6\u7684\u6781\u9650\uff0c\u800c\u4e0d\u662f\u6ce8\u610f\u529b\u7684\u6781\u9650\u3002\u5728\u76ee\u524d\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8be2\u95ee\u5a74\u513f\u662f\u5426\u80fd\u50cf\u6210\u5e74\u4eba\u4e00\u6837\uff0c\u901a\u8fc7\u7cbe\u795e\u91cd\u7ec4\u523a\u6fc0\u6765\u6269\u5c55\u8fd9\u79cd\u6709\u9650\u7684\u8bb0\u5fc6\u80fd\u529b\u3002\u6211\u4eec\u9884\u6d4b\uff0c\u5982\u679c\u4f7f\u7528\u5b58\u50a8\u7684\u6982\u5ff5\u77e5\u8bc6\u6269\u5c55\u8bb0\u5fc6\u4e0d\u9700\u8981\u663e\u5f0f\u8bad\u7ec3\uff0c\u90a3\u4e48\u5a74\u513f\u548c\u6210\u4eba\u4e00\u6837\uff0c\u5c06\u80fd\u591f\u8d85\u8fc7\u4e09\u9879\u9650\u5236\uff0c\u5e76\u8bb0\u4f4f\u56db\u4e2a\u5bf9\u8c61\uff0c\u4f46\u4ec5\u9650\u4e8e\u5bf9\u8c61\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5f62\u6210\u6709\u610f\u4e49\u7684\u6982\u5ff5\u7ec4\u7684\u6570\u7ec4\u3002\u5728\u6210\u5e74\u4eba\u4e2d\uff0c\u5f53\u523a\u6fc0\u9879\u76ee\u53ef\u4ee5\u6839\u636e\u6982\u5ff5\u3001\u77e5\u89c9\u6216\u7a7a\u95f4\u7ebf\u7d22\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u5c42\u6b21\u91cd\u7ec4\u662f\u53ef\u80fd\u7684\uff0812-19\uff09\u3002\u5728\u76ee\u524d\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u6d4b\u8bd5\u4e86\u8bed\u524d\u5a74\u513f#39\uff1b\u80fd\u591f\u4f7f\u7528\u5176\u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u91cd\u70b9\u662f\u4e09\u9879\u4e2d\u6700\u62bd\u8c61\u7684\u4e00\u9879\uff1a\u5c06\u6982\u5ff5\u77e5\u8bc6\u4f5c\u4e3a\u8bb0\u5fc6\u91cd\u7ec4\u7684\u57fa\u7840\u3002\n\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c14\u4e2a\u6708\u5927\u7684\u5a74\u513f\u770b\u7740\u4e00\u540d\u5b9e\u9a8c\u8005\u628a\u7269\u4f53\u85cf\u5728\u76d2\u5b50\u91cc\uff0c\u7136\u540e\u88ab\u5141\u8bb8\u641c\u7d22\u5b83\u4eec\u3002\u5728\u4e00\u4e9b\u8bd5\u9a8c\u4e2d\uff0c\u6211\u4eec\u9690\u85cf\u4e86\u56db\u4ef6\u7269\u54c1\uff0c\u8ba9\u5a74\u513f\u53d6\u56de\u5176\u4e2d\u4e24\u4ef6\uff0c\u7136\u540e\u8be2\u95ee\u5a74\u513f\u662f\u5426\u4f1a\u7ee7\u7eed\u5bfb\u627e\u5269\u4f59\u7684\u7269\u54c1\uff08\u8fd9\u4e9b\u7269\u54c1\u88ab\u79d8\u5bc6\u6263\u7559\uff09\u3002\u5728\u5176\u4ed6\u8bd5\u9a8c\u4e2d\uff0c\u6211\u4eec\u9690\u85cf\u4e86\u4e24\u5230\u56db\u4e2a\u7269\u4f53\uff0c\u8ba9\u5a74\u513f\u53d6\u56de\u6240\u6709\u7269\u4f53\uff0c\u5e76\u8be2\u95ee\u4ed6\u4eec\u662f\u5426\u4f1a\u5728\u76d2\u5b50\u9884\u8ba1\u4e3a\u7a7a\u65f6\u7ee7\u7eed\u641c\u7d22\u3002\u5982\u679c\u5a74\u513f\u80fd\u591f\u6210\u529f\u5730\u8bb0\u4f4f\u56db\u4e2a\u7269\u4f53\uff0c\u4ed6\u4eec\u5e94\u8be5\u5728\u8bd5\u9a8c\u4e2d\u641c\u7d22\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u5728\u76d2\u5b50\u9884\u671f\u4e3a\u7a7a\u65f6\u4ee5\u524d\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u6d4b\u91cf\u5a74\u513f#39\uff1b\u5de5\u4f5c\u8bb0\u5fc6\u663e\u793a\uff0c\u5f53\u4e00\u4e2a\u3001\u4e24\u4e2a\u6216\u4e09\u4e2a\u7269\u4f53\u88ab\u9690\u85cf\u65f6\uff0c\u5a74\u513f\u4f1a\u6210\u529f\uff0c\u4f46\u5982\u679c\u6709\u56db\u4e2a\u7269\u4f53\uff087-9\u4e2a\uff09\uff0c\u5a74\u513f\u5c31\u4f1a\u5931\u8d25\u3002\u5a74\u513f\u548c#39\u5c81\uff1b\u8fd9\u79cd\u65b9\u6cd5\u4e2d\u7684\u641c\u7d22\u4ec5\u53d6\u51b3\u4e8e\u8bb0\u5fc6\u5bf9\u8c61\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u53d6\u51b3\u4e8e\u5a74\u513f#39\uff1b\u5bf9\u7269\u4f53\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u7eaf\u767d\u7403\u4e0e\u5c0f\u73a9\u5177\uff09\u7684\u5174\u8da3\uff087\uff09\uff0c\u5230\u8fbe\u4e4b\u95f4\u7684\u65f6\u95f4\u5ef6\u8fdf\uff087,26\uff09\uff0c\u5e74\u9f84\uff0810\u523020\u4e2a\u6708\u4e4b\u95f4\uff09\uff089,29\uff09\uff0c\u6216\u8fde\u7eed\u53d8\u91cf\uff0c\u5982\u7269\u4f53\u603b\u9762\u79ef\uff087\uff09\u3002\n\u5728\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u4e8614\u4e2a\u6708\u5927\u7684\u5a74\u513f#39\uff1b\u56db\u4e2a\u5bf9\u8c61\u6570\u7ec4\u7684\u5185\u5b58\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u6570\u7ec4\u53ef\u4ee5\u6839\u636e\u6982\u5ff5\u6216\u77e5\u89c9\u7ebf\u7d22\u89e3\u6790\uff0c\u800c\u6570\u7ec4\u4e0d\u80fd\u3002\u5a74\u513f\uff08n=44\uff09\u770b\u5230\u7684\u73a9\u5177\u5bf9\u8c61\u8981\u4e48\u662f\u6982\u5ff5\u4e0a\u719f\u6089\u7684\uff08\u732b\u548c\u6c7d\u8f66\uff09\uff0c\u8981\u4e48\u662f\u65b0\u5947\u7684\uff08\u867e\u548c\u5766\u514b\uff09\uff0c\u8fd9\u662f\u7531\u7236\u6bcd\u8bc4\u5b9a\u7684\u3002\u5bf9\u8c61\u5728\u7a7a\u95f4\u4e0a\u5206\u7ec4\u6216\u4ea4\u9519\uff08\u56fe1\uff09\u3002\u4e0e\u4e4b\u524d\u7684\u8bb8\u591a\u5b9e\u9a8c\u4e0d\u540c\u7684\u662f\uff0c\u5a74\u513f\u65e0\u6cd5\u8bb0\u4f4f\u603b\u5171\u56db\u4e2a\u7269\u4f53\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u4e24\u7ec4\u6982\u5ff5\u4e0a\u719f\u6089\u7684\u7269\u4f53\u88ab\u5448\u73b0\u65f6\uff08\u603b\u5171=\u56db\u4e2a\u7269\u4f53\uff09\uff0c\u5a74\u513f\u80fd\u591f\u6210\u529f\u5730\u8fdb\u884c\u641c\u7d22\uff0c\u800c\u4e0d\u7ba1\u7269\u4f53\u662f\u4ec0\u4e48#39\uff1b\u7a7a\u95f4\u7ec4\u7ec7\u3002\u901a\u8fc7\u51cf\u53bb\u5a74\u513f#39\uff1b\u5f53\u76d2\u5b50\u9884\u8ba1\u4e3a\u7a7a\u65f6\uff08\u5373\uff0c\u4e24\u4e2a\u7269\u4f53\u88ab\u9690\u85cf\u4e14\u5747\u88ab\u53d6\u56de\u540e\uff0c\u4ee5\u53ca\u56db\u4e2a\u7269\u4f53\u88ab\u9690\u85cf\u4e14\u56db\u4e2a\u7269\u4f53\u88ab\u53d6\u56de\u540e\u00a7\uff09\u7684\u8bd5\u9a8c\u5e73\u5747\u641c\u7d22\uff0c\u4ee5\u53ca\u5f53\u76d2\u5b50\u9884\u8ba1\u5305\u542b\u66f4\u591a\u7269\u4f53\u65f6\uff08\u5373\uff0c\u56db\u4e2a\u7269\u4f53\u88ab\u9690\u85cf\u4e14\u4ec5\u53d6\u56de\u4e24\u4e2a\u7269\u4f53\u540e\uff09\u7684\u8bd5\u9a8c\u5e73\u5747\u641c\u7d22\u3002\u5f53\u5a74\u513f\u770b\u5230\u4e24\u53ea\u732b\u548c\u4e24\u8f86\u8f66\u88ab\u85cf\u8d77\u6765\uff0c\u5e76\u53d6\u56de\u4e00\u53ea\u732b\u548c\u4e00\u8f86\u8f66\u65f6\uff0c\u8fd9\u79cd\u201c\u641c\u7d22\u589e\u52a0\u201d\u7684\u6d4b\u91cf\u503c\u663e\u8457\u5927\u4e8e\u96f6[\u5728\u7a7a\u95f4\u4e0a\u5206\u7ec4\u7684\u719f\u6089\u6982\u5ff5\uff1at\uff0821\uff09=2.95\uff0cP=0.008\uff1b\u5728\u7a7a\u95f4\u4e0a\u4ea4\u9519\u7684\u719f\u6089\u6982\u5ff5\uff1at\uff0821\uff09=2.32\uff0cP=0.030]\u3002\u7136\u800c\uff0c\u5f53\u5a74\u513f\u770b\u5230\u85cf\u7740\u4e24\u53ea\u867e\u548c\u4e24\u4e2a\u6c34\u7bb1\uff0c\u5e76\u53d6\u56de\u4e00\u53ea\u867e\u548c\u4e00\u4e2a\u6c34\u7bb1\u65f6\uff0c\u53ea\u6709\u5f53\u6bcf\u7ec4\u4e2d\u7684\u5bf9\u8c61\u5f7c\u6b64\u76f4\u63a5\u76f8\u90bb\u65f6\uff0c\u5a74\u513f\u7684\u641c\u7d22\u80fd\u529b\u624d\u4f1a\u663e\u8457\u589e\u5f3a[\u65b0\u6982\u5ff5\u7a7a\u95f4\u5206\u7ec4\uff1at\uff0821\uff09=3.44\uff0cP=0.002\uff1b\u65b0\u6982\u5ff5\u7a7a\u95f4\u4ea4\u9519\uff1at\uff0821\uff09=0.08\uff0cP=0.94]\uff08\u56fe1\uff09\u3002\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\u5a74\u513f&#39\uff1b\u5bf9\u6982\u5ff5\u4e0a\u719f\u6089\u7684\u5bf9\u8c61\u7684\u8bb0\u5fc6\u662f\u5206\u5c42\u91cd\u7ec4\u7684\uff0c\u4e0d\u7ba1\u5bf9\u8c61\u662f\u4ec0\u4e48#39\uff1b\u4f46\u5f53\u76f8\u540c\u7684\u7269\u4f53\u76f8\u90bb\u5e76\u5f62\u6210\u77e5\u89c9\u5b8c\u5f62\u65f6\uff0c\u4ed6\u4eec\u5bf9\u6982\u5ff5\u4e0a\u65b0\u5947\u7269\u4f53\u7684\u8bb0\u5fc6\u624d\u88ab\u5206\u5c42\u91cd\u7ec4\u3002\u8fd9\u79cd\u6210\u529f\u548c\u5931\u8d25\u7684\u6a21\u5f0f\uff0c\u518d\u52a0\u4e0a\u6240\u6709\u7684\u5a74\u513f#39\uff1b\u4e4b\u524d\u8bb0\u5fc6\u56db\u4e2a\u7269\u4f53\u7684\u5931\u8d25\u8868\u660e\uff0c\u5f53\u6839\u636e\u6982\u5ff5\u6216\u77e5\u89c9\u4fe1\u606f\u5c06\u6570\u7ec4\u5206\u89e3\u6210\u66f4\u5c0f\u7684\u5355\u5143\u65f6\uff0c\u5a74\u513f\u4f1a\u8bb0\u4f4f\u66f4\u591a\u7684\u7269\u4f53\u3002\n\u652f\u6301\u5a74\u513f\u7684\u57fa\u672c\u6982\u5ff5\u77e5\u8bc6\u6709\u591a\u62bd\u8c61\uff1b\u5206\u7ea7\u8bb0\u5fc6\u91cd\u7ec4\uff1f\u5982\u679c\u5a74\u513f\u4f7f\u7528\u62bd\u8c61\u7c7b\u522b\u6765\u6784\u9020\u8bb0\u5fc6\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4ed6\u4eec\u6839\u636e\u6982\u5ff5CAT\u548cCAR\u89e3\u6790\u6570\u7ec4\uff09\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e5f\u5e94\u8be5\u6210\u529f\u4f7f\u7528\u76f8\u540c\u6982\u5ff5\u7c7b\u522b\u7684\u4e0d\u76f8\u540c\u6807\u8bb0\u3002\u4e3a\u4e86\u8be2\u95ee\u5a74\u513f\u662f\u5426\u80fd\u5728\u7cbe\u795e\u4e0a\u5bf9\u4e0d\u76f8\u540c\u7684\u7c7b\u522b\u6210\u5458\u8fdb\u884c\u5206\u7ec4\uff0c\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e00\u7ec4\u5355\u72ec\u7684\u5a74\u513f\uff08n=22\uff09\uff0c\u8fdb\u884c\u4e86\u53d7\u8bd5\u8005\u5185\u90e8\u6bd4\u8f83\uff0c\u6d89\u53ca\u4e24\u79cd\u60c5\u51b5\uff0c\u987a\u5e8f\u5e73\u8861\uff08\u56fe2\uff09\u3002\u5728\u8fd9\u4e24\u4e2a\u4ee3\u5e01\u4e2d\uff0c\u4e24\u79cd\u7c7b\u578b\u7684\u5a74\u513f\u770b\u5230\u4e86\u6765\u81ea\u4e24\u4e2a\u719f\u6089\u7c7b\u522b\u7684\u56db\u4e2a\u4e0d\u76f8\u540c\u7684\u7269\u4f53\uff08\u4f8b\u5982\uff0c\u4e00\u53ea\u76f4\u7acb\u7684\u6a59\u8272\u732b\u548c\u4e00\u53ea\u503e\u659c\u7684\u9ed1\u732b\uff1b\u4e00\u8f86\u7070\u8272\u7684\u8dd1\u8f66\u548c\u4e00\u8f86\u7eff\u8272\u7684\u65c5\u884c\u8f66\uff09\u3002\u4e0e\u5b9e\u9a8c1\u4e00\u6837\uff0c\u95ee\u9898\u662f\u5a74\u513f\u5728\u770b\u5230\u8fd9\u56db\u4e2a\u9690\u85cf\u7684\u7269\u4f53\u5e76\u53ea\u53d6\u56de\u5176\u4e2d\u4e24\u4e2a\u540e\u662f\u5426\u4f1a\u7ee7\u7eed\u641c\u7d22\u3002\u5a74\u513f\u6210\u529f\u4e86\uff0c\u5728\u770b\u5230\u4e24\u53ea\u4e0d\u76f8\u540c\u7684\u732b\u548c\u4e24\u8f86\u4e0d\u76f8\u540c\u7684\u6c7d\u8f66\u88ab\u85cf\u8d77\u6765\uff0c\u5e76\u4e14\u53ea\u53d6\u56de\u4e00\u53ea\u732b\u548c\u4e00\u8f86\u6c7d\u8f66\u540e\uff0c\u4ed6\u4eec\u7684\u641c\u7d22\u80fd\u529b\u663e\u8457\u589e\u5f3a[t\uff0821\uff09=2.99\uff0cP=0.007]\u3002\u5728\u56db\u4e2a\u4ee3\u5e01\u4e2d\uff0c\u540c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5a74\u513f\u770b\u5230\u4e86\u56db\u53ea\u4e0d\u540c\u7684\u732b\u6216\u56db\u8f86\u4e0d\u540c\u7684\u6c7d\u8f66\u3002\u7531\u4e8e\u6240\u6709\u5bf9\u8c61\u90fd\u6765\u81ea\u540c\u4e00\u6982\u5ff5\u7c7b\u522b\uff0c\u56e0\u6b64\u6ca1\u6709\u660e\u786e\u7684\u57fa\u7840\u6765\u89e3\u6790\u6570\u7ec4\u3002\u6211\u4eec\u53d1\u73b0\u5a74\u513f\u5728\u56db\u4e2a\u6807\u8bb0\u4e2d\u6ca1\u6709\u8868\u73b0\u51fa\u66f4\u591a\u7684\u641c\u7d22\uff0c\u4e00\u79cd\u7c7b\u578b\u7684\u6761\u4ef6[t\uff0821\uff09=\u22120.38\uff0cP=0.71]\uff0c\u4e0e\u5a74\u513f\u548c#39\u4e00\u81f4\uff1b\u4ee5\u524d\u5728\u6ca1\u6709\u5c42\u6b21\u91cd\u7ec4\u7ebf\u7d22\u7684\u60c5\u51b5\u4e0b\uff0c\u8bb0\u4e0d\u4f4f\u56db\u4e2a\u7269\u4f53\u3002\n\u8fd9\u4e9b\u53d1\u73b0\u8868\u660e\uff0c\u6982\u5ff5\u77e5\u8bc6\u589e\u52a0\u4e86\u5a74\u513f#39\uff1b\u8bb0\u5fc6\u529b\u7136\u800c\uff0c\u53e6\u4e00\u79cd\u89e3\u91ca\u662f\uff0c\u6211\u4eec\u7684\u4e00\u4e9b\u9635\u5217\u652f\u6301\u77e5\u89c9\u5206\u7ec4\uff0c\u800c\u5176\u4ed6\u9635\u5217\u5219\u4e0d\u652f\u6301\uff0c\u5e76\u4e14\u53ea\u6709\u77e5\u89c9\u7ebf\u7d22\u652f\u6301\u7ec4\u5757\uff08\u5373\uff0c\u4e0d\u9700\u8981\u6982\u5ff5\u77e5\u8bc6\uff09\u3002\u5728\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u5a74\u513f\u4e4b\u524d\u53ef\u80fd\u5bf9\u732b\u548c\u6c7d\u8f66\u6709\u66f4\u591a\u7684\u4f53\u9a8c\uff0c\u800c\u4e0d\u662f\u5bf9\u867e\u548c\u5766\u514b\uff0c\u8fd9\u53ef\u80fd\u4f7f\u4ed6\u4eec\u66f4\u5bb9\u6613\u6839\u636e\u719f\u6089\u7684\u611f\u77e5\u7279\u5f81\u7ec4\u6210\u5c0f\u7ec4\u3002\u5c3d\u7ba1\u5b9e\u9a8c2\u8868\u660e\u5a74\u513f\u6210\u529f\u5730\u4f7f\u7528\u4e86\u4e0d\u76f8\u540c\u7684\u6807\u8bb0\uff0c\u4f46\u5b83\u5e76\u4e0d\u6392\u9664\u77e5\u89c9\u5206\u7ec4\uff0c\u56e0\u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u732b\u5728\u77e5\u89c9\u4e0a\u6bd4\u4e00\u53ea\u732b\u548c\u4e00\u8f86\u6c7d\u8f66\u66f4\u76f8\u4f3c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u7b2c\u4e09\u7ec4\u5a74\u513f\uff08n=22\uff09\u5206\u522b\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u987a\u5e8f\u5e73\u8861\u3002\u5c31\u50cf\u5728EXP\u4e2d\u4e00\u6837\u30021\u548c2\u6211\u4eec\u6bd4\u8f83\u4e86\u5a74\u513f\u548c#39\uff1b\u5728\u770b\u5230\u56db\u4e2a\u9690\u85cf\u7684\u5bf9\u8c61\u5e76\u4ec5\u68c0\u7d22\u5176\u4e2d\u4e24\u4e2a\u540e\u8fdb\u884c\u641c\u7d22\uff0c\u5728\u770b\u5230\u4e24\u4e2a\u9690\u85cf\u7684\u5bf9\u8c61\u5e76\u68c0\u7d22\u4e24\u4e2a\u540e\u8fdb\u884c\u641c\u7d22\uff0c\u6216\u8005\u5728\u770b\u5230\u56db\u4e2a\u9690\u85cf\u7684\u5bf9\u8c61\u5e76\u68c0\u7d22\u56db\u4e2a\u540e\u8fdb\u884c\u641c\u7d22\u3002\u5173\u952e\u7684\u662f\uff0c\u5728\u5b9e\u9a8c3\u4e2d\uff0c\u9635\u5217\u603b\u662f\u5305\u542b\u76f8\u540c\u7684\u7b49\u95f4\u8ddd\u6a59\u8272\u7403\uff08\u56fe3\uff09\u3002\u5728\u4ee5\u524d\u7684\u7814\u7a76\u4e2d\uff0c\u5a74\u513f\u4f7f\u7528\u8fd9\u79cd\u9635\u5217\u65f6\u603b\u662f\u5931\u8d25\uff087-9\uff09\u3002\u7136\u800c\uff0c\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u8bed\u8a00\u6807\u8bb0\u4f7f\u611f\u77e5\u4e0a\u76f8\u540c\u7684\u5bf9\u8c61\u5728\u6982\u5ff5\u4e0a\u4e0d\u540c\u3002\u5728\u8eb2\u85cf\u4e4b\u524d\uff0c\u5b9e\u9a8c\u8005\u4f9d\u6b21\u6307\u5411\u6bcf\u4e2a\u7403\uff0c\u5728\u6982\u5ff5\u6807\u7b7e\u6761\u4ef6\u4e0b\u8bf4\uff0c\u201c\u770b\uff0c\u4e00\u4e2adax\uff01\u770b\uff0c\u4e00\u4e2adax\uff01\u770b\uff0c\u4e00\u4e2ablicket\uff01\u770b\uff0c\u4e00\u4e2ablicket\uff01\u201d\u5728\u901a\u7528\u6807\u7b7e\u6761\u4ef6\u4e0b\uff0c\u5979\u8bf4\uff1a\u201c\u770b\u8fd9\u4e2a\uff01\u770b\u8fd9\u4e2a\uff01\u770b\u90a3\u4e2a\uff01\u770b\u90a3\u4e2a\uff01\u201d\u4e4b\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u5a74\u513f\u5c06\u4f7f\u7528\u76f8\u540c\u8ba1\u6570\u540d\u8bcd\uff08\u4f46\u4e0d\u662f\u76f8\u540c\u7684\u901a\u7528\u6807\u7b7e\uff09\u7684\u7269\u4f53\u89c6\u4e3a\u540c\u4e00\u7c7b\u522b\u7684\u6210\u5458\uff0831\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u6d89\u53ca\u611f\u77e5\u4e0a\u672a\u5206\u7ec4\u7684\u6570\u7ec4\uff0c\u4f46\u53ea\u6709\u6982\u5ff5\u6807\u7b7e\u6761\u4ef6\u63d0\u4f9b\u4e86\u53e3\u5934\u8bc1\u636e\uff0c\u8bc1\u660e\u5bf9\u8c61\u662f\u4e0d\u540c\u7c7b\u522b\u7684\u6210\u5458[\u4e0e\u5b83\u4eec\u5171\u4eab\u9690\u85cf\u5c5e\u6027\u6216\u672c\u8d28\u4e00\u81f4\uff0832\uff0c33\uff09]\u3002\u6b63\u5982\u9884\u6d4b\u7684\u90a3\u6837\uff0c\u5a74\u513f\u5728\u6982\u5ff5\u6807\u7b7e\u6761\u4ef6[t\uff0821\uff09=2.21\uff0cP=0.039]\u4e0b\u7684\u641c\u7d22\u80fd\u529b\u663e\u8457\u589e\u5f3a\uff0c\u4f46\u5728\u4e00\u822c\u6807\u7b7e\u6761\u4ef6[t\uff0821\uff09=\u22120.18\uff0cP=0.86]\uff08\u56fe3\uff09\uff0c\u8868\u660e\u5a74\u513f\u6839\u636e\u5171\u4eab\u7684\u8bed\u8a00\u6807\u7b7e\u5bf9\u7269\u4f53\u8fdb\u884c\u5206\u7ec4\u3002\u5a74\u513f\u662f\u5426\u5148\u5728\u6982\u5ff5\u6027\u6807\u7b7e\u6216\u4e00\u822c\u6027\u6807\u7b7e\u6761\u4ef6\u4e0b\u63a5\u53d7\u6d4b\u8bd5\u6ca1\u6709\u5f71\u54cd\u3002\u56e0\u6b64\uff0c\u5728\u6982\u5ff5\u6807\u7b7e\u8bd5\u9a8c\u4e2d\u542c\u5230\u5bf9\u6bd4\u8ba1\u6570\u540d\u8bcd\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u5a74\u513f\u5728\u6240\u6709\u540e\u7eed\u8bd5\u9a8c\u4e2d\u5c06\u7403\u89c6\u4e3a\u4e24\u7ec4\uff1b\u76f8\u53cd\uff0c\u5206\u7ec4\u7684\u6548\u679c\u4f3c\u4e4e\u4ec5\u9650\u4e8e\u5728\u9690\u85cf\u524d\u7acb\u5373\u7ed9\u5bf9\u8c61\u8d34\u4e0a\u5bf9\u6bd4\u6807\u7b7e\u7684\u5bf9\u8c61\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5a74\u513f\u548c#39\u5c81\uff1b\u6982\u5ff5\u6807\u7b7e\u6761\u4ef6\u4e0b\u7684\u6210\u529f\u641c\u7d22\u6a21\u5f0f\u8868\u660e\uff0c\u5de5\u4f5c\u8bb0\u5fc6\u53ef\u4ee5\u901a\u8fc7\u6982\u5ff5\u7ebf\u7d22\u6269\u5c55\u5230\u5c42\u6b21\u91cd\u7ec4\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u4efb\u4f55\u89c6\u89c9\u57fa\u7840\u6765\u89e3\u6790\u523a\u6fc0\u6570\u7ec4\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6210\u5e74\u4eba\u6765\u8bf4\uff0c\u5206\u7ea7\u8bb0\u5fc6\u91cd\u7ec4\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u80fd\u591f\u5728\u8bb0\u5fc6\u4e2d\u5b58\u50a8\u4e00\u4e24\u4e2a\u989d\u5916\u7684\u9879\u76ee\uff0c\u8fd8\u80fd\u591f\u5b58\u50a8\u8fdc\u8fdc\u8d85\u8fc7\u901a\u5e38\u7684\u4e09\u9879\u6216\u56db\u9879\u5de5\u4f5c\u8bb0\u5fc6\u9650\u5236\u7684\u9879\u76ee\uff0814\uff09\u3002\u4e3a\u4e86\u8be2\u95ee\u5a74\u513f\u662f\u5426\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6709\u529b\u5730\u589e\u52a0\u5bb9\u91cf\uff0c\u6211\u4eec\u5bf9\u4e00\u7ec4\u5355\u72ec\u7684\u5a74\u513f\uff08n=22\uff09\u8fdb\u884c\u4e86\u53d7\u8bd5\u8005\u5185\u6bd4\u8f83\uff0c\u5305\u62ec\u4e24\u79cd\u60c5\u51b5\uff0c\u987a\u5e8f\u5e73\u8861\uff08\u56fe4\uff09\u3002\u5728\u4e09\u7ec4\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u516d\u4e2a\u76f8\u540c\u7684\u6a59\u8272\u7403\u5728\u7a7a\u95f4\u4e0a\u5206\u7ec4\uff0c\u8fd9\u6837\u4e24\u4e2a\u7403\u653e\u5728\u76d2\u5b50\u5de6\u4fa7\u7684\u5e73\u53f0\u4e0a\uff0c\u4e24\u4e2a\u653e\u5728\u76d2\u5b50\u9876\u90e8\uff0c\u4e24\u4e2a\u653e\u5728\u76d2\u5b50\u53f3\u4fa7\u7684\u5e73\u53f0\u4e0a\u3002\u8fd9\u79cd\u5b89\u6392\u63d0\u4f9b\u4e86\u7a7a\u95f4\u5206\u7ec4\u7ebf\u7d22\uff0826\uff09\uff0c\u7528\u4e8e\u5c06\u516d\u4e2a\u76f8\u540c\u7684\u7403\u5206\u6210\u4e09\u7ec4\uff0c\u6bcf\u7ec4\u4e24\u4e2a\u3002\u5728\u4e00\u7ec4\u516d\u4e2a\u6761\u4ef6\u4e0b\uff0c\u6240\u6709\u516d\u4e2a\u7403\u90fd\u653e\u5728\u76d2\u5b50\u9876\u90e8\u7684\u4e00\u7ec4\u4e2d\uff0c\u4e0d\u63d0\u4f9b\u5206\u7ec4\u7684\u7ebf\u7d22\uff0826\uff09\u3002\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6bd4\u8f83\u4e86\u5a74\u513f&#39\uff1b\u5f53\u76d2\u5b50\u9884\u8ba1\u5305\u542b\u66f4\u591a\u5bf9\u8c61\u65f6\uff08\u5373\uff0c\u5728\u516d\u4e2a\u5bf9\u8c61\u88ab\u9690\u85cf\u548c\u56db\u4e2a\u5bf9\u8c61\u88ab\u68c0\u7d22\u540e\uff09\u641c\u7d22\uff0c\u800c\u5f53\u76d2\u5b50\u9884\u8ba1\u4e3a\u7a7a\u65f6\uff08\u5373\uff0c\u5728\u56db\u4e2a\u5bf9\u8c61\u88ab\u9690\u85cf\u548c\u56db\u4e2a\u5bf9\u8c61\u88ab\u68c0\u7d22\u540e\uff0c\u4ee5\u53ca\u5728\u516d\u4e2a\u5bf9\u8c61\u88ab\u9690\u85cf\u548c\u516d\u4e2a\u5bf9\u8c61\u88ab\u68c0\u7d22\u540e\uff09\u641c\u7d22\u3002\u6211\u4eec\u53d1\u73b0\u5a74\u513f\u5728\u4e09\u7ec4\u4e24\u79cd\u60c5\u51b5\u4e0b[t\uff0821\uff09=3.02\uff0cP=0.006]\u7684\u641c\u7d22\u80fd\u529b\u663e\u8457\u589e\u5f3a\uff0c\u4f46\u5728\u4e00\u7ec4\u516d\u79cd\u60c5\u51b5\u4e0b[t\uff0821\uff09=0.55\uff0cP=0.589]\u7684\u641c\u7d22\u80fd\u529b\u6ca1\u6709\u663e\u8457\u589e\u5f3a\uff08\u56fe4\uff09\uff0c\u8fd9\u8868\u660e\uff0c\u5f53\u5b58\u5728\u7a7a\u95f4\u5206\u7ec4\u7ebf\u7d22\u65f6\uff0c\u5a74\u513f\u6210\u529f\u5730\u5c06\u516d\u4e2a\u7269\u4f53\u7684\u9690\u85cf\u4e0e\u56db\u4e2a\u7269\u4f53\u7684\u9690\u85cf\u533a\u5206\u5f00\u6765\uff0c\u4f46\u5728\u6ca1\u6709\u7a7a\u95f4\u5206\u7ec4\u7ebf\u7d22\u65f6\uff0c\u5a74\u513f\u5219\u6ca1\u6709\u3002\u8fd9\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u5a74\u513f\u5728\u8bb0\u5fc6\u6269\u5c55\u8fc7\u7a0b\u4e2d\u4f1a\u7ecf\u5386\u516d\u4e2a\u9879\u76ee\u7684\u6392\u5217\uff0c\u800c\u8003\u8651\u5230\u4ed6\u4eec\u5178\u578b\u7684\u4e09\u4e2a\u9879\u76ee\u7684\u80fd\u529b\uff0c\u8fd9\u4e9b\u9879\u76ee\u7684\u6570\u91cf\u662f\u53ef\u80fd\u7684\u4e24\u500d\uff0c\u8fd9\u8fdb\u4e00\u6b65\u4f7f\u672a\u7ecf\u8bad\u7ec3\u768414\u4e2a\u6708\u5927\u7684\u5a74\u513f\u4e0e\u6210\u4eba\u7684\u80fd\u529b\u4fdd\u6301\u4e00\u81f4\u3002\n\u8fd9\u4e9b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u8bc1\u636e\u8868\u660e\uff0c\u5728\u6ca1\u6709\u8bad\u7ec3\u548c\u53ef\u80fd\u6ca1\u6709\u610f\u8bc6\u52aa\u529b\u7684\u60c5\u51b5\u4e0b\uff0c\u5a74\u513f\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u4fe1\u606f\u6e90\uff0c\u5305\u62ec\u5b58\u50a8\u7684\u6982\u5ff5\u77e5\u8bc6\uff0c\u6765\u589e\u52a0\u4ed6\u4eec\u80fd\u8bb0\u4f4f\u7684\u9879\u76ee\u7684\u6570\u91cf\u3002\u8fd9\u4e00\u77e5\u8bc6\u4f7f\u5a74\u513f\u80fd\u591f\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u96c6\u5408\u4e2d\u8bc6\u522b\u66f4\u5c0f\u7684\u7fa4\u4f53\uff0c\u751a\u81f3\u5728\u611f\u77e5\u76f8\u540c\u7684\u9879\u76ee\u4e2d\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5728\u5934\u8111\u4e2d\u7ec4\u7ec7\u9879\u76ee\u4e3a\u6784\u5efa\u5185\u5b58\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u6709\u6548\u7684\u683c\u5f0f\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u5927\u7684\u5b58\u50a8\u5bb9\u91cf\u3002\n\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u4e8e\u5728\u5bb9\u91cf\u6709\u9650\u7684\u7cfb\u7edf\u4e2d\u5b58\u50a8\u5927\u91cf\u4fe1\u606f\u7684\u95ee\u9898\uff0c\u91cd\u6784\u5185\u5b58\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u3001\u65e9\u671f\u53d1\u5c55\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4e4b\u524d\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u5a74\u513f\u4f7f\u7528\u7a7a\u95f4\u3001\u77e5\u89c9\u548c\u6982\u5ff5\u4fe1\u606f\u5c06\u7269\u4f53\u4e0e\u6a21\u7cca\u573a\u666f\u5206\u5f00\uff0834,35\uff09\u3002\u4f8b\u5982\uff0c4.5\u4e2a\u6708\u5927\u7684\u5a74\u513f\u5c06\u4e00\u4e2a\u5305\u542b\u9ec4\u8272\u5706\u67f1\u4f53\u7684\u6570\u7ec4\u89e3\u6790\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\uff0834\uff09\u3002\u76ee\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u5a74\u513f\u4e0d\u4ec5\u5229\u7528\u8fd9\u79cd\u80fd\u529b\u5c06\u590d\u6742\u7684\u573a\u666f\u89e3\u6790\u4e3a\u4ed6\u4eec\u7684\u7ec4\u6210\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u5c06\u5355\u4e2a\u5bf9\u8c61\u60f3\u8c61\u4e3a\u5f62\u6210\u7edf\u4e00\u7684\u7fa4\u4f53\u3002\u8fd9\u4e00\u5206\u7ec4\u6269\u5927\u4e86\u5a74\u513f&#39\uff1b\u5de5\u4f5c\u8bb0\u5fc6\u5bb9\u91cf\uff0c\u540c\u65f6\u4ecd\u4fdd\u7559\u5355\u4e2a\u7ec4\u4ef6\u9879\u7684\u8868\u793a\u3002\u8fd9\u79cd\u5c42\u6b21\u7ed3\u6784\u91cd\u7ec4\u63d0\u4f9b\u4e86\u4e00\u79cd\u6269\u5c55\u5185\u5b58\u5b58\u50a8\u7684\u65b9\u6cd5\uff0c\u8d85\u8d8a\u4e86\u57fa\u4e8e\u9879\u76ee\u7684\u5de5\u4f5c\u5185\u5b58\u7684\u4e25\u683c\u9650\u5236\u3002\n\u5728\u76ee\u524d\u7684\u5b9e\u9a8c\u4e2d\u53d1\u73b0\u7684\u8bb0\u5fc6\u8fc7\u7a0b\u662f\u5426\u4e0e\u6210\u4eba\u7ecf\u5178\u7ec4\u5757\u7684\u8bb0\u5fc6\u8fc7\u7a0b\u76f8\u540c\uff1f\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u53d6\u51b3\u4e8e\u7ec4\u5757\u7684\u5b9a\u4e49\u3002\u5728\u4e00\u4e9b\u9605\u8bfb\u6750\u6599\u4e2d\uff0c\u5206\u5757\u9700\u8981\u5bf9PBSBBCCNN\u89e3\u6790\u4e3aPBS\u3001BBC\u548cCNN\u65f6\u6240\u6d89\u53ca\u7684\u7c7b\u578b\u8fdb\u884c\u6982\u5ff5\u4e0a\u7684\u91cd\u65b0\u7f16\u7801\u3002\u8fd9\u79cd\u91cd\u65b0\u7f16\u7801\u9700\u8981\u6bcf\u4e2a\u65b0\u521b\u5efa\u7684\u8868\u5f81\u5355\u5143\u5bf9\u5e94\u4e8e\u957f\u671f\u8bb0\u5fc6\u4e2d\u7684\u4e00\u4e2a\u73b0\u6709\u7684\u3001\u5355\u4e00\u7684\u6982\u5ff5\uff08\u4f8b\u5982\uff0cCNN\u662f\u96c7\u4f63Wolf Blitzer\u7684\u5a92\u4f53\u516c\u53f8\uff09\uff0836\uff0c37\uff09\u3002\u5bf9\u7ec4\u5757\u7684\u4e0d\u540c\u5b9a\u4e49\u4e5f\u9700\u8981\u6982\u5ff5\u77e5\u8bc6\uff0c\u4f46\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u7801\u3002\u4f8b\u5982\uff0c\u6210\u5e74\u4eba\u8bb0\u4f4f\u201c\u8304\u5b50\u3001\u87ba\u4e1d\u5200\u3001\u80e1\u841d\u535c\u3001\u6d0b\u84df\u3001\u9524\u5b50\u3001\u94b3\u5b50\u201d\u6bd4\u8bb0\u4f4f\u201c\u8304\u5b50\u3001\u82b1\u6930\u83dc\u3001\u80e1\u841d\u535c\u3001\u6d0b\u84df\u3001\u9ec4\u74dc\u3001\u897f\u846b\u82a6\u201d\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u8bb0\u4f4f\u4e24\u79cd\u6982\u5ff5\u7c7b\u578b\u7684\u4e09\u4e2a\u6807\u8bb0\u6bd4\u8bb0\u4f4f\u4e00\u79cd\u7c7b\u578b\u7684\u516d\u4e2a\u6807\u8bb0\u66f4\u5bb9\u6613\uff0838\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0e\u7edf\u4e00\u6982\u5ff5CNN\u7684\u4f8b\u5b50\u4e0d\u540c\uff0c\u8bb0\u5fc6\u6269\u5c55\u4f1a\u53d1\u751f\uff0c\u5c3d\u7ba1\u76ee\u524d\u8fd8\u6ca1\u6709\u7edf\u4e00\u6982\u5ff5\u201c\u8304\u5b50-\u80e1\u841d\u535c-\u6d0b\u84df\u201d\u5305\u542b\u6240\u6709\u4e14\u4ec5\u5305\u542b\u8fd9\u4e09\u4e2a\u9879\u76ee\u3002\u7ec4\u5757\u7684\u7b2c\u4e09\u4e2a\u5b9a\u4e49\u5b8c\u5168\u4e0d\u9700\u8981\u6982\u5ff5\u6027\u77e5\u8bc6\uff0c\u800c\u662f\u5141\u8bb8\u975e\u6982\u5ff5\u6027\u4fe1\u606f\uff08\u5982\u77e5\u89c9\u6216\u65f6\u7a7a\u76f8\u4f3c\u6027\uff09\u4f5c\u4e3a\u89e3\u6790\u6570\u7ec4\u7684\u57fa\u7840\uff081\uff09\u3002\u4f8b\u5982\uff0c\u6839\u636e\u6570\u5b57&#39\uff0c\u5c06\u7535\u8bdd\u3001\u4fe1\u7528\u5361\u548c\u793e\u4f1a\u4fdd\u9669\u53f7\u7801\u5206\u6210\u4e24\u5230\u56db\u4e2a\u6570\u5b57\u7ec4\u7684\u65e5\u5e38\u505a\u6cd5\uff1b\u65f6\u95f4\u6216\u7a7a\u95f4\u4e0a\u7684\u63a5\u8fd1\u3002\u91cd\u8981\u7684\u662f\uff0c\u88ab\u8bb0\u4f4f\u7684\u4e0d\u4ec5\u4ec5\u662f\u7fa4\u4f53\u7684\u6570\u91cf\uff0c\u8fd8\u6709\u7fa4\u4f53\u7684\u8eab\u4efd#39\uff1b\u7ec4\u4ef6\uff0c\u5c55\u793a\u4e86\u6240\u6d89\u53ca\u7684\u8868\u793a\u7684\u5c42\u6b21\u6027\u3002\u8fd9\u4e09\u79cd\u5b9a\u4e49\u4e4b\u95f4\u7684\u5dee\u5f02\u7a81\u663e\u51fa\uff0c\u5bf9\u4e8e\u4ec0\u4e48\u662f\u7ec4\u5757\uff0c\u4eba\u4eec\u7f3a\u4e4f\u5171\u8bc6\u3002\u7136\u800c\uff0c\u4e0a\u8ff0\u89c2\u70b9\u90fd\u540c\u610f\uff0c\u5185\u5b58\u6269\u5c55\u53d6\u51b3\u4e8e\u5c42\u6b21\u7ed3\u6784\u91cd\u7ec4\u3002\u76ee\u524d\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u5a74\u513f\u7684\u8bed\u524d\u8bb0\u5fc6\u81ea\u53d1\u5730\u53c2\u4e0e\u4e86\u8fd9\u4e00\u8fc7\u7a0b\u3002\n\u76ee\u524d\u6709\u51e0\u79cd\u8fdb\u4e00\u6b65\u8c03\u67e5\u7684\u9014\u5f84\u3002\u9996\u5148\uff0c\u5fc3\u7406\u5b66\u548c\u8ba4\u77e5\u79d1\u5b66\u4ecd\u7136\u7f3a\u4e4f\u4e00\u4e2a\u4ee4\u4eba\u4fe1\u670d\u7684\u673a\u5236\u6765\u89e3\u91ca\u5c42\u7ea7\u91cd\u7ec4\u5982\u4f55\u6269\u5c55\u5de5\u4f5c\u8bb0\u5fc6\u3002\u8fd9\u79cd\u7b97\u6cd5\u7684\u63d0\u51fa\u8d85\u51fa\u4e86\u76ee\u524d\u5de5\u4f5c\u7684\u8303\u56f4\u3002\u7136\u800c\uff0c\u6211\u4eec\u8bc1\u660e\uff0c\u591a\u79cd\u8bc1\u636e\u6765\u6e90\uff08\u6982\u5ff5\u3001\u77e5\u89c9\u3001\u8bed\u8a00\u548c\u7a7a\u95f4\uff09\u90fd\u53ef\u4ee5\u6fc0\u53d1\u672a\u7ecf\u8bad\u7ec3\u5a74\u513f\u7684\u8bb0\u5fc6\u6269\u5c55\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u9650\u5236\u95ee\u9898\u7a7a\u95f4\uff0c\u5e76\u63d0\u4f9b\u5bf9\u8bc4\u4f30\u672a\u6765\u7b97\u6cd5\u5efa\u8bae\u6709\u4ef7\u503c\u7684\u6570\u636e\u3002\u7b2c\u4e8c\uff0c14\u4e2a\u6708\u5927\u7684\u5a74\u513f\u53ef\u4ee5\u4f7f\u7528\u5c42\u6b21\u91cd\u7ec4\u6765\u6269\u5c55\u8bb0\u5fc6\uff0c\u800c\u5e74\u9f84\u5927\u5f97\u591a\u7684\u5b66\u9f84\u524d\u513f\u7ae5\u901a\u5e38\u9700\u8981\u660e\u786e\u7684\u6307\u5bfc\uff0820-22\uff09\uff0c\u8fd9\u4e00\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u8bb0\u5fc6\u91cd\u7ec4\u7684\u81ea\u613f\u63a7\u5236\u53ef\u80fd\u4f1a\u7ecf\u5386\u663e\u8457\u7684\u53d1\u5c55\u53d8\u5316\u3002\u672a\u6765\u7684\u5de5\u4f5c\u5c06\u9700\u8981\u7406\u89e3\u8bb0\u5fc6\u91cd\u7ec4\u7684\u5185\u6e90\u6027\u548c\u5916\u6e90\u6027\u63a7\u5236\u7684\u53d8\u5316\u3002\u7b2c\u4e09\uff0c\u5e94\u8be5\u63a2\u7d22\u65e9\u671f\u80fd\u529b\u7684\u9650\u5236\u3002\u7814\u7a76\u8868\u660e\uff0c\u6210\u5e74\u4eba\u6709\u610f\u8bc6\u5730\u521b\u9020\u51fa\u590d\u6742\u7684\u5fc3\u7406\u5c42\u6b21\u7ed3\u6784\uff0c\u5728\u8fd9\u79cd\u7ed3\u6784\u4e2d\uff0c\u51e0\u5341\u4e2a\u9879\u76ee\u53ef\u4ee5\u88ab\u4fdd\u5b58\u5728\u8bb0\u5fc6\u4e2d\uff0814\uff09\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5a74\u513f\u662f\u5426\u4e5f\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6216\u8005\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\n......", "note_en": "Edited by Charles R. Gallistel, Rutgers, The State University of New Jersey, Piscataway, NJ, and approved May 13, 2008 (received for review October 17, 2007)\n    Adults can expand their limited working memory capacity by using stored conceptual knowledge to chunk items into interrelated units. For example, adults are better at remembering the letter string PBSBBCCNN after parsing it into three smaller units: the television acronyms PBS, BBC, and CNN. Is this chunking a learned strategy acquired through instruction? We explored the origins of this ability by asking whether untrained infants can use conceptual knowledge to increase memory. In the absence of any grouping cues, 14-month-old infants can track only three hidden objects at once, demonstrating the standard limit of working memory. In four experiments we show that infants can surpass this limit when given perceptual, conceptual, linguistic, or spatial cues to parse larger arrays into smaller units that are more efficiently stored in memory. This work offers evidence of memory expansion based on conceptual knowledge in untrained, preverbal subjects. Our findings demonstrate that without instruction, and in the absence of robust language, a fundamental memory computation is available throughout the lifespan, years before the development of explicit metamemorial strategies.\n Working memory capacity is severely limited in adults ( 1\u2013 6) and infants ( 7\u2013 11), with both groups able to remember only about three separate items at once. One reason that adults are rarely conscious of this constraint is that we can hierarchically reorganize the to-be-remembered stimuli, thereby increasing the total number of items we can store. For example, the letter string PBSBBCCNN is much easier to recall after recognizing the three familiar television acronyms PBS, BBC, and CNN that comprise it. This chunking entails the use of previously acquired concepts to parse an undivided array into smaller units that are more efficiently stored in memory. The stored representation now has two nested levels: the chunks (the television acronyms) and their components (the letters within each acronym).\n Hierarchical memory reorganization is widely relied on by adults ( 12\u2013 17), both as an explicit strategy and as an unconscious memory process ( 14,  18,  19), but its origins remain a mystery. Five-year-old children can hierarchically structure memory if provided explicit instruction ( 20\u2013 22), raising the possibility that this process is a cultural construction acquired through explicit teaching. Infants have been shown to group items based on perceptual or statistical features ( 23\u2013 25), but such grouping does not truly expand item-based memory limits because it fails to preserve representations of the groups&#39; individual components. And although infants exhibit greater memory capacity for spatially grouped than ungrouped items ( 26), this ability differs from classical chunking because it relies on external cues rather than internally stored knowledge. Therefore, it remains unknown how humans attain the ability to expand working memory based on previously acquired knowledge. Here, we tested whether this ability is learned through explicit instruction by examining the memory capacity of untrained infants.\n Capacity limits on working memory have been demonstrated in adults in dozens of experiments using various methods. For example, adults shown briefly flashed arrays of letters and digits can only remember a limited number of items after the display disappears ( 6). For several decades this limited number was thought to be 7 \u00b1 2 ( 16). However, more recent analyses show that 7 \u00b1 2 overestimates working memory capacity. When measures are taken to block chunking, adults can store only three to four items ( 1). This limit applies broadly to visual and auditory entities including colored shapes, oriented lines, spoken letters, and spoken words, for items presented either simultaneously or sequentially (for review, see ref.  1)  \u2020.\n Across several methodologies, infants, too, show an abrupt limit on the number of items they can simultaneously remember, regardless of whether items are presented sequentially or simultaneously ( 7\u2013 11). For example, infants between 10 and 20 months old remember and search for the correct number when one, two, or three objects are hidden in a box, but fail when four or more objects are hidden ( 7\u2013 9). Because objects are hidden for durations of several seconds or even tens of seconds, these tasks are thought to tap working memory limits rather than attentional limits. In the present experiments we asked whether infants can expand this limited-capacity memory by mentally reorganizing stimuli, much as adults can. We predicted that if memory expansion using stored conceptual knowledge needs no explicit training, then infants, like adults, will be able to exceed the three-item limit and remember four total objects, but only for arrays in which objects can be conceived of as forming meaningful conceptual groups. In adults, hierarchical reorganization is possible when stimulus items can be grouped based on conceptual, perceptual, or spatial cues ( 12\u2013 19). In the present studies we tested preverbal infants&#39; ability to use each of these, focusing on the most abstract of the three: conceptual knowledge as a basis for memory reorganization.\n In our experiments 14-month-old infants watched an experimenter hide objects in a box, and then were allowed to search for them. On some trials we hid four objects, allowed infants to retrieve two of them, then asked whether infants would continue searching for the remaining objects (which were secretly withheld). On other trials we hid two or four objects, allowed infants to retrieve all of them, and asked whether they would continue searching when the box was expected to be empty. If infants can successfully remember four objects they should search longer on trials when the box was expected to contain more objects than when it was expected to be empty.  \u2021 Previous use of this method to measure infants&#39; working memory reveals that infants succeed when one, two, or three objects are hidden, but consistently fail with four ( 7\u2013 9). Infants&#39; searching in this method has been shown to depend solely on the number of objects remembered and not on infants&#39; interest in object types (e.g., plain white balls versus small toys) ( 7), time delays between reaches ( 7,  26), age (between 10 and 20 months) ( 9,  29), or continuous variables such as total object area ( 7).\n In our first experiment we compared 14-month-old infants&#39; memory for four-object arrays that could be parsed based on conceptual or perceptual cues to arrays that could not. Infants ( n = 44) saw toy objects that were either conceptually familiar (cats and cars) or novel (shrimps and tanks), as rated by parents. Objects were either spatially grouped or interleaved ( Fig. 1). In contrast to the many previous experiments showing that infants fail to remember four total objects, we found that infants searched successfully when two sets of two conceptually familiar objects were presented (total = four objects), regardless of the objects&#39; spatial organization. This success is most easily seen by subtracting infants&#39; average searching on trials when the box was expected to be empty (i.e., after two objects had been hidden and both retrieved, and after four objects had been hidden and four retrieved  \u00a7) from average searching on trials when the box was expected to contain more objects (i.e., after four objects had been hidden and only two retrieved). When infants saw two cats and two cars hidden and had retrieved one cat and one car, this measure of \u201cincreased searching\u201d was significantly greater than zero [familiar concepts spatially grouped:  t ( 21) = 2.95,  P = 0.008; familiar concepts spatially interleaved:  t ( 21) = 2.32,  P = 0.030]. However, when infants saw two shrimp and two tanks hidden and had retrieved one shrimp and one tank, infants only showed significant increased searching when the objects within each set were directly adjacent to one another [novel concepts spatially grouped:  t ( 21) = 3.44,  P = 0.002; novel concepts spatially interleaved:  t ( 21) = 0.08,  P = 0.94] ( Fig. 1). These results suggest that infants&#39; memory for conceptually familiar objects was hierarchically reorganized regardless of the objects&#39; spatial arrangement, but that their memory for conceptually novel objects was only hierarchically reorganized when identical objects were adjacent and formed a perceptual Gestalt. This pattern of success and failure, combined with all of infants&#39; previous failures to remember four objects, reveals that infants remembered a greater number of objects when arrays could be parsed into smaller units on the basis of conceptual or perceptual information.\n  How abstract is the underlying conceptual knowledge supporting infants&#39; hierarchical memory reorganization? If infants use abstract categories to structure memory (e.g., if they parse the array based on the concepts CAT and CAR), then they should also succeed with nonidentical tokens of the same conceptual category. To ask whether infants can mentally group nonidentical category members we tested a separate group of infants ( n = 22) on a within-subjects comparison involving two conditions, with order counterbalanced ( Fig. 2). In the two tokens, two types condition infants saw four nonidentical objects from two familiar categories (e.g., an upright orange cat and a reclining black cat; a gray sports coupe and a green station wagon). As in Exp. 1, the question was whether infants would continue searching after seeing these four objects hidden and retrieving just two of them. Infants succeeded, demonstrating significant increased searching after seeing two nonidentical cats and two nonidentical cars hidden and retrieving just one cat and one car [ t ( 21) = 2.99,  P = 0.007]. In the four tokens, one type condition these same infants saw arrays of four nonidentical cats or four nonidentical cars. Because all of the objects were from the same conceptual category, there was no clear basis for parsing the array. We found that infants failed to show increased searching in the four tokens, one type condition [ t ( 21) = \u22120.38,  P = 0.71], consistent with infants&#39; previous failures to remember four objects in the absence of cues for hierarchical reorganization.\n  These findings suggest that conceptual knowledge increased infants&#39; memory. However, an alternative explanation is that some of our arrays supported perceptual grouping, whereas others did not, and that only perceptual cues supported chunking (i.e., no conceptual knowledge was required). Infants in our first experiment likely had more previous experience with cats and cars than with shrimps and tanks, perhaps making it easier to form groups based on familiar perceptual features. And although Exp. 2 showed that infants succeed with nonidentical tokens, it does not rule out perceptual grouping because two different cats are more perceptually similar than a cat and a car. We therefore tested a third group of infants ( n = 22) in two conditions each, with order counterbalanced. As in Exps. 1 and 2 we compared infants&#39; searching after seeing four objects hidden and retrieving just two of them to their searching after seeing two objects hidden and retrieving two, or after seeing four hidden and retrieving four. Crucially, in Exp. 3 arrays always contained identical equi-spaced orange balls ( Fig. 3). In previous work, infants always fail with such arrays ( 7\u2013 9). However, in this experiment we made perceptually identical objects conceptually distinct through verbal labeling. Before hiding, the experimenter pointed to each ball in turn and, in the conceptual labels condition, said, \u201cLook, a dax! Look, a dax! Look, a blicket! Look, a blicket!\u201d In the generic labels condition she said, \u201cLook at this! Look at this! Look at that! Look at that!\u201d Previous studies show that infants treat objects referred to with the same count noun (but not the same generic label) as members of the same category ( 31). Thus both conditions involved perceptually ungrouped arrays, but only the conceptual labels condition provided verbal evidence that objects were members of distinct categories [consistent with them sharing a hidden property or essence ( 32, 33)]. As predicted, infants showed significant increased searching in the conceptual labels condition [ t ( 21) = 2.21,  P = 0.039] but not in the generic labels condition [ t ( 21) = \u22120.18,  P = 0.86] ( Fig. 3), suggesting that infants grouped objects based on shared linguistic labels. There was no effect of whether infants were tested in the conceptual labels or the generic labels condition first. Hence, hearing contrasting count nouns in the conceptual labels trials did not lead infants to treat balls as forming two sets on all subsequent trials; rather, the effect of grouping seemed limited to objects that had been given contrasting labels immediately before hiding. Overall, infants&#39; successful search pattern in the conceptual labels condition shows that working memory can be expanded via conceptual cues to hierarchical reorganization, even in the absence of any visual basis for parsing the stimulus array.\n  Finally, hierarchical memory reorganization is a powerful tool for adults because rather than merely enabling the storage in memory of an extra item or two, it enables the storage of items far exceeding the usual three- or four-item working memory limit ( 14). To ask whether infants can robustly increase capacity in this way we tested a separate group of infants ( n = 22) on a within-subjects comparison involving two conditions, with order counterbalanced ( Fig. 4). In the three sets of two condition, six identical orange balls were presented spatially grouped such that two balls were placed on a platform to the left of the box, two were placed atop the box, and two were placed on a platform to the right of the box. This arrangement provides spatial grouping cues ( 26) for dividing six identical balls into three sets of two. In the one set of six condition, all six balls were placed in a single set atop the box, providing no cues to grouping ( 26). In each condition, we compared infants&#39; searching when the box was expected to contain more objects (i.e., after six objects had been hidden and four were retrieved) versus when the box was expected to be empty (i.e., after four objects had been hidden and four retrieved, and after six had been hidden and six retrieved).  \u00b6 We found that infants showed significant increased searching in the three sets of two condition [ t ( 21) = 3.02,  P = 0.006], but not in the one set of six condition [ t ( 21) = 0.55,  P = 0.589] ( Fig. 4), suggesting that infants successfully differentiated the hiding of six from the hiding of four objects when spatial grouping cues were present, but not when they were absent. The finding that infants experience memory expansion with arrays of six items, double the number of items possible given their typical three-item capacity, further aligns the abilities of untrained 14-month-olds with those of adults.\n  These experiments provide evidence that, without training and in the likely absence of conscious effort, infants can use multiple sources of information, including stored conceptual knowledge, to increase the number of items they can remember. This knowledge allows infants to identify smaller groups within a larger collection, even among perceptually identical items. Mentally organizing items in this way provides a more efficient format for structuring memory, resulting in greater storage capacity.\n Our results suggest that the restructuring of memory is a fundamental and early-developing solution to the problem of storing large amounts of information in a limited-capacity system. Previous work has found that infants use spatial, perceptual, and conceptual information to segregate objects from ambiguous scenes ( 34,  35). For example, 4.5-month-old infants parse an array containing a yellow cylinder abutting a blue cube into two distinct objects ( 34). The present work shows that infants use this ability not only to parse complex scenes into their component objects, but also to conceive of individual objects as forming unified groups. This grouping expands infants&#39; working memory capacity while still preserving representations of the individual component items. This hierarchical restructuring offers a way of expanding memory storage beyond the strict constraints of an item-based working memory.\n Are the memory processes uncovered in the present experiments the same processes that underlie classical chunking in adults? The answer to this question depends on the definition of chunking. On some readings, chunking requires conceptual recoding of the type involved when parsing PBSBBCCNN into PBS, BBC, and CNN. Such recoding entails that each of the newly created representational units corresponds to an existing, unitary concept in long-term memory (e.g., CNN is the media corporation that employs Wolf Blitzer) ( 36,  37). A different definition of chunking also requires conceptual knowledge, but does not require recoding. For example, it is easier for adults to remember \u201ceggplant, screwdriver, carrot, artichoke, hammer, pliers\u201d than to remember \u201ceggplant, broccoli, carrot, artichoke, cucumber, zucchini\u201d because it is easier to remember three tokens of two conceptual types than six tokens of one type ( 38). In this case, unlike in the example of the unified concept CNN, memory expansion occurs even though there is no existing unified concept \u201ceggplant\u2013carrot\u2013artichoke\u201d that contains all and only these three items. A third definition of chunking requires no conceptual knowledge at all, but rather allows nonconceptual information such as perceptual or spatiotemporal similarity to serve as a basis for parsing the array ( 1). An example is the everyday practice of dividing phone, credit card, and social security numbers into groups of two to four digits based on the digits&#39; temporal or spatial proximity. Importantly, it is not just the number of groups that is remembered, but also the identity of the groups&#39; components, demonstrating the hierarchical nature of the representations involved. The differences between these three definitions highlight the lack of consensus as to what constitutes chunking. However, the above views all agree that memory expansion depends on hierarchical restructuring. The present experiments show that preverbal infant memory spontaneously engages in this process.\n Several avenues for further inquiry present themselves. First, psychology and cognitive science still lack a compelling mechanistic account of how hierarchical reorganization can expand working memory. The proposal of such an algorithm is beyond the scope of the present work. However, our demonstration that multiple sources of evidence (conceptual, perceptual, linguistic, and spatial) can each motivate memory expansion in untrained infants will help constrain the problem space and provide data that will be valuable in evaluating any future algorithmic proposals. Second, the result that 14-month-old infants can use hierarchical reorganization to expand memory, whereas much older, preschool-aged children often need explicit instruction to do so ( 20\u2013 22), suggests that the voluntary control of memory reorganization likely undergoes significant developmental change. Future work will be needed to understand shifts in the endogenous versus exogenous control of memory reorganization. Third, limits on early abilities should be explored. Adults have been shown to consciously create elaborate mental hierarchies in which dozens of items can be held in memory ( 14). It remains unknown whether infants can also do so, or how th\n......", "posttime": "2022-02-17 10:49:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u77e5\u8bc6,knowledge,\u5a74\u513f", "title": "\u6982\u5ff5\u77e5\u8bc6\u63d0\u9ad8\u5a74\u513f\u7684\u8bb0\u5fc6\u80fd\u529b\uff082008\u5e74\uff09", "title_en": "Conceptual knowledge increases infants' memory capacity (2008)", "transed": 1, "url": "https://www.pnas.org/content/105/29/9926", "via": "", "real_tags": ["\u77e5\u8bc6", "knowledge", "\u5a74\u513f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073793, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5728\u9a8c\u8bc1\u60a8\u7684\u8bf7\u6c42\uff0c\u8bf7\u7a0d\u5019\u3002\u3002\u3002", "note_en": "Please wait while your request is being verified...", "posttime": "2022-02-17 10:48:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u5b58,terror,\u9a8c\u8bc1", "title": "LinkedIn\u7684\u751f\u5b58\u6050\u60e7", "title_en": "The Existential Terror of LinkedIn", "transed": 1, "url": "https://shkspr.mobi/blog/2022/02/the-existential-terror-of-linkedin/", "via": "", "real_tags": ["\u751f\u5b58", "terror", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073792, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u6709\u4e00\u4e2a\u4e91\u7528\u4f8b\u2026\u2026\u4f60\u5982\u4f55\u4ece\u60f3\u6cd5\u5230\u5b9e\u73b0\uff1f\n\u5b9e\u73b0\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\u662f\u67b6\u6784\u56fe\u3002\u62e5\u6709\u67b6\u6784\u56fe\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u4f7f\u60a8\u80fd\u591f\u4e0e\u56e2\u961f\u5171\u4eab\u613f\u666f\uff0c\u4e0e\u4ed6\u4eec\u534f\u4f5c\uff0c\u8fed\u4ee3\u8bbe\u8ba1\uff0c\u5e76\u521b\u5efa\u6700\u7b26\u5408\u4e1a\u52a1\u7528\u4f8b\u8981\u6c42\u7684\u6700\u7ec8\u7248\u672c\u3002\n\u6709\u65f6\u4f60\u53ef\u80fd\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u4f46\u6709\u65f6\u4e00\u5f20\u7a7a\u767d\u7684\u753b\u5e03\u53ef\u80fd\u4f1a\u8ba9\u4eba\u5bb3\u6015\u3002\u8fd9\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u53c2\u8003\u4f53\u7cfb\u7ed3\u6784\u7684\u5f62\u5f0f\u627e\u5230\u4e00\u4e9b\u5e2e\u52a9\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5e76\u8fdb\u4e00\u6b65\u8c03\u6574\u4ee5\u9002\u5e94\u4f60\u7684\u7528\u4f8b\u3002\n\u4e00\u65e6\u7528\u4f8b\u4ee5\u67b6\u6784\u56fe\u7684\u5f62\u5f0f\u76f4\u89c2\u5730\u53cd\u6620\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u5b9e\u73b0\u5b83\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u5e2e\u52a9\uff0c\u4ece\u67b6\u6784\u5230\u5b9e\u73b0\u7684\u8f6c\u6362\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u6709\u70b9\u5413\u4eba\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u6b21\u5355\u51fb\u90e8\u7f72\u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u4f53\u7cfb\u7ed3\u6784\u7ec4\u4ef6\u90fd\u90e8\u7f72\u5230\u9879\u76ee\u4e2d\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u68d2\u7684\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u60a8\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\uff0c\u6211\u4eec\u63a8\u51fa\u4e86\u5168\u65b0\u7684\u8c37\u6b4c\u4e91\u67b6\u6784\u56fe\u8868\u5de5\u5177\u3002\n1.\u6784\u5efa\u67b6\u6784\u56fe\u3002\u8be5\u754c\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7ad9\u70b9\u4e2d\u6240\u6709\u8c37\u6b4c\u4e91\u4ea7\u54c1\u548c\u670d\u52a1\u7684\u5217\u8868\u3002\u5b83\u4eec\u662f\u6309\u7c7b\u522b\uff08\u8ba1\u7b97\u3001\u6570\u636e\u5e93\u7b49\uff09\u7ec4\u7ec7\u7684\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5355\u72ec\u641c\u7d22\u4ea7\u54c1\u3002\u65e0\u9700\u62c5\u5fc3\u627e\u5230\u6b63\u786e\u7684\u56fe\u6807\u6216\u4ece\u5176\u4ed6\u5730\u65b9\u4e0a\u4f20\u56fe\u50cf\u2014\u2014\u53ea\u9700\u4e13\u6ce8\u4e8e\u4f7f\u7528\u754c\u9762\u4e2d\u6240\u9700\u7684\u7ec4\u4ef6\u6784\u5efa\u67b6\u6784\u3002\u8be5\u754c\u9762\u8fd8\u5141\u8bb8\u60a8\u4e0e\u56e2\u961f\u548c\u540c\u4e8b\u5171\u4eab\u56fe\u8868\uff0c\u6216\u5c06\u5176\u6dfb\u52a0\u5230\u6587\u6863\u4e2d\u3002\n2.\u8bbf\u95ee\u9884\u6784\u5efa\u7684\u53c2\u8003\u4f53\u7cfb\u7ed3\u6784\uff1a\u6709\u65f6\u5019\u4f60\u53ea\u9700\u8981\u4e00\u4e2a\u793a\u4f8b\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\u56e0\u6b64\uff0c\u8be5\u5de5\u5177\u5305\u62ec10+\u4e2a\u9884\u6784\u5efa\u7684\u53c2\u8003\u67b6\u6784\uff0c\u7528\u4e8e\u5e38\u89c1\u7528\u4f8b\uff0c\u5982\u6570\u636e\u79d1\u5b66\u3001\u673a\u5668\u5b66\u4e60\u3001\u7f51\u7ad9\u3001CI/CD\u3001\u5fae\u670d\u52a1\u3001\u8ba1\u7b97\u7b49\u3002\n3.\u4e00\u952e\u90e8\u7f72\u3002\u4e00\u65e6\u4f60\u5bf9\u4f60\u7684\u67b6\u6784\u611f\u5230\u6ee1\u610f\uff0c\u4f60\u5c31\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u90e8\u7f72\u5b83\u3002\u53ea\u9700\u5355\u51fb\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5728\u8c37\u6b4c\u4e91\u4e2d\u90e8\u7f72\u6240\u6709\u67b6\u6784\u7ec4\u4ef6\u3002\u73b0\u5728\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u5b8c\u6574\u7684\u67b6\u6784\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u90e8\u7f72\u5b83\u4eec\u3002\u60f3\u8bd5\u8bd5\u5417\uff1f\n\u8fd8\u6709\u4e00\u4ef6\u4e8b\uff1a\u67b6\u6784\u56fe\u5de5\u5177\u4e0eGoogle Cloud Developer\u5907\u5fd8\u5355\u96c6\u6210\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u8f7b\u677e\u67e5\u770b\u4e0e\u56fe\u4e2d\u6bcf\u4e2a\u7ec4\u4ef6\u76f8\u5173\u7684\u56db\u4e2a\u5355\u8bcd\u7684\u63cf\u8ff0\u548c\u6587\u6863\u3002\n\u73b0\u5728\u82b1\u51e0\u5206\u949f\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u8868\uff08\u6216\u4e24\u4e2a\uff01\uff09\u4f7f\u7528\u67b6\u6784\u56fe\u5de5\u5177\n\u5728\u60a8\u6709\u673a\u4f1a\u63a2\u7d22\u8fd9\u4e9b\u65b0\u5de5\u5177\u4e4b\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u6536\u5230\u60a8\u7684\u6765\u4fe1\uff01\u6211\u6e34\u671b\u542c\u5230\u60a8\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u7684\u53cd\u9988\uff0c\u4ee5\u53ca\u60a8\u5bf9\u7c7b\u4f3c\u5185\u5bb9\u7684\u60f3\u6cd5\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u8ba9\u60a8\u7684\u5b66\u4e60\u8fc7\u7a0b\u66f4\u52a0\u8f7b\u677e\u3002\u5728LinkedIn\u6216Twitter@pvergadia\u4e0a\u4e0e\u6211\u5206\u4eab", "note_en": "You have a cloud use case\u2026 How do you go from idea to implementation?\n The first step in your implementation journey is the architecture diagram. Having an  architecture diagram is critical because it enables you to share the vision with the team, collaborate with them, iterate on the design, and create the final version that best meets the requirements for your business use case.\n Sometimes you may know where to start, but other times a blank canvas can be intimidating. That\u2019s when you can find some help in the form of a  reference architecture, which you can use as a starting point and tweak further to fit your use case.\n Once you have the use case reflected visually in the form of an architecture diagram you are ready to implement it in your project. But the translation process from architecture to implementation can also be a bit intimidating without some help. In these cases, it would be great to have a  one-click deploy to get all your architectural components into your project.\n To help you address these challenges, we are launching the brand new  Google Cloud Architecture Diagramming Tool.\n 1.  Build architecture diagrams. The interface provides a list of all the Google Cloud products and services in one spot. They are organized by category (compute, database, and so on) and you can also search for products individually. No need to worry about finding the right icon or uploading an image from somewhere else \u2013 just focus on building the architecture with the components you need right there in the interface. The interface also lets you share your diagram with your team and colleagues or add it to documentation.\n  2.  Access prebuilt reference architectures: Sometimes you just need a sample to start with. So the tool includes 10+ prebuilt reference architectures for common use cases such as data science, machine Learning, websites, CI/CD, microservices, compute, and more.\n  3.  Deploy with one click. Once you are happy with your architecture you need a simple way to just deploy it. You can deploy all the architecture components in Google Cloud with a single click. Right now, we have a few full architecture examples that you can deploy. Want to gives these a try?\n  One more thing: The Architecture Diagramming tool is\u00a0 integrated with the  Google Cloud Developer Cheat Sheet so you can easily check out the four-word descriptions and documentation linked to each component of your diagram.\n  Take a few minutes right now to create a simple diagram (or two!) with the  Architecture Diagramming Tool\nAfter you\u2019ve had a chance to explore these new tools, we want to hear from YOU! I am eager to hear your feedback on these resources and your ideas for similar content that will help make your learning journey easier. Share with me on  LinkedIn or on  Twitter @pvergadia", "posttime": "2022-02-17 10:46:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u67b6\u6784,cloud", "title": "\u8c37\u6b4c\u4e91\u67b6\u6784\u56fe\u8868\u5de5\u5177", "title_en": "Google Cloud architecture diagramming tool", "transed": 1, "url": "https://cloud.google.com/blog/topics/developers-practitioners/introducing-google-cloud-architecture-diagramming-tool", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u67b6\u6784", "cloud"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073791, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fdb\u5316\u4f7f\u7528\u6240\u6709\u7684\u6280\u5de7\u6765\u786e\u4fdd\u6211\u4eec\u7e41\u884d\u540e\u4ee3\u3002\u4f46\u662f\u4eba\u7c7b\u7684\u7231\u662f\u4e00\u4ef6\u975e\u5e38\u7f8e\u597d\u7684\u4e8b\u60c5\u3002\n\u5728\u8bbd\u523a\u559c\u5267\u300a\u5927\u5e1d\u300b\uff08the Great\uff09\u7684\u4e00\u96c6\u4e2d\uff0c\u70ed\u7231\u7406\u6027\u548c\u79d1\u5b66\u7684\u4fc4\u7f57\u65af\u5973\u7687\u51ef\u745f\u7433\uff08Catherine\uff09\u7684\u7edf\u6cbb\u51e0\u4e4e\u5d29\u6e83\uff0c\u5979\u7684\u4e08\u592b\u3001\u88ab\u7f62\u9edc\u7684\u7687\u5e1d\u5f7c\u5f97\uff08Peter\uff09\u95ef\u5165\u5979\u7684\u79c1\u4eba\u4f4f\u6240\uff0c\u51b3\u5fc3\u5c06\u5979\u76d1\u7981\u3002\u4f46\u770b\u5230\u5979\u54ed\u6ce3\u7edd\u671b\uff0c\u4ed6\u5fd8\u8bb0\u4e86\u81ea\u5df1\u7684\u62a5\u590d\u5fc3\uff0c\u62e5\u62b1\u4e86\u5979\u3002\u540e\u6765\uff0c\u4ed6\u544a\u8bc9\u5979\uff0c\u201c\u6211\u66f4\u60f3\u8981\u4f60\u7684\u5e78\u798f\uff0c\u800c\u4e0d\u662f\u6211\u81ea\u5df1\u7684\u5e78\u798f\u3002\u201d\u201c\u54c7\uff0c\u201d\u5979\u56de\u7b54\u9053\u3002\u201c\u7684\u786e\u5982\u6b64\uff0c\u201d\u5f7c\u5f97\u8bf4\u3002\u201c\u7231\u5bf9\u6211\u505a\u4e86\u4e00\u4ef6\u5947\u602a\u7684\u4e8b\u3002\u6211\u60f3\u77e5\u9053\uff0c\u5982\u679c\u4f60\u628a\u4e00\u4e2a\u66fe\u7ecf\u6df1\u7231\u8fc7\u7684\u7537\u4eba\u780d\u4e0b\u6765\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u9897\u4e0e\u4e00\u4e2a\u6ca1\u6709\u6df1\u7231\u8fc7\u7684\u7537\u4eba\u4e0d\u4e00\u6837\u7684\u5fc3\u5417\uff1f\u201d\n\u5f53\u7136\uff0c\u5982\u679c\u79d1\u5b66\u5bb6\u4eec\u53bb\u5bfb\u627e\uff0c\u5728\u5fc3\u810f\u4e2d\u4e0d\u4f1a\u53d1\u73b0\u5f3a\u70c8\u7231\u60c5\u7684\u6587\u5b57\u5370\u8bb0\u3002\u4f46\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u5f7c\u5f97\u53d1\u73b0\u4e86\u4ec0\u4e48\u3002\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u7231\u60c5\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u660e\u663e\u800c\u5e7f\u6cdb\u7684\u5f71\u54cd\u75d5\u8ff9\u3002\u201c\u7231\u662f\u5982\u6b64\u91cd\u8981\uff0c\u201d\u8fdb\u5316\u4eba\u7c7b\u5b66\u5bb6\u5b89\u5a1c\u00b7\u6885\u94a6\u8bf4\uff0c\u201c\u8fdb\u5316\u5df2\u7ecf\u8bc1\u660e\u9002\u5408\u8ba9\u4f60\u8eab\u4f53\u7684\u6bcf\u4e00\u4e2a\u673a\u5236\u90fd\u53c2\u4e0e\u8fdb\u6765\uff0c\u4ee5\u786e\u4fdd\u4f60\u5c3d\u53ef\u80fd\u5730\u4eb2\u5bc6\u548c\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u201d\nMachin\u7814\u7a76\u7231\u60c5\u7684\u9057\u4f20\u5b66\u548c\u795e\u7ecf\u5316\u5b66\uff0c\u5e76\u4e0e\u725b\u6d25\u5927\u5b66\u8457\u540d\u4eba\u7c7b\u5b66\u5bb6\u7f57\u5bbe\u00b7\u9093\u5df4\uff08Robin Dunbar\uff09\u5408\u8457\u4e86\u300a\u9093\u5df4\u7684\u6570\u5b57\u300b\uff08Dunbar\u2019s number\uff09\uff0c\u4ed6\u662f\u65b0\u4e66\u300a\u4e3a\u4ec0\u4e48\u6211\u4eec\u7231\uff1a\u6211\u4eec\u6700\u4eb2\u5bc6\u5173\u7cfb\u80cc\u540e\u7684\u65b0\u79d1\u5b66\u300b\u7684\u4f5c\u8005\u3002\u5728\u6700\u8fd1\u5bf9Nautilus\u7684\u91c7\u8bbf\u4e2d\uff0c\u5979\u8bf4\uff0c\u5979\u4ece\u5404\u79cd\u79d1\u5b66\u89d2\u5ea6\u5904\u7406\u4e86\u5404\u79cd\u5404\u6837\u7684\u7231\u60c5\u5173\u7cfb\uff0c\u4ee5\u89e3\u91ca\u7231\u60c5\u7684\u672c\u8d28\u3002\u5979\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u662f\u795e\u7ecf\u79d1\u5b66\u5bb6\uff0c\u4f60\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u7279\u522b\u7684\u7b54\u6848\u3002\u5982\u679c\u4f60\u662f\u5fc3\u7406\u5b66\u5bb6\uff0c\u4f60\u4f1a\u7ed9\u51fa\u53e6\u4e00\u4e2a\u7b54\u6848\u3002\u201d\u3002\u201c\u4f5c\u4e3a\u4e00\u540d\u4eba\u7c7b\u5b66\u5bb6\uff0c\u8fd9\u6709\u70b9\u50cf\u559c\u9e4a\u7684\u804c\u4e1a\u2014\u2014\u6211\u628a\u6240\u6709\u8fd9\u4e9b\u90fd\u6536\u96c6\u4e86\u8d77\u6765\u3002\u201d\u9ea6\u91d1\u5bf9\u6211\u7684\u95ee\u9898\u7684\u56de\u7b54\u6e05\u6670\u800c\u6709\u529b\uff0c\u5c3d\u7ba1\u5979\u5728\u82f1\u56fd\u7684\u65f6\u95f4\u4e00\u76f4\u6301\u7eed\u5230\u665a\u4e0a\u3002\n\u7231\u8fdb\u5316\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u6fc0\u52b1\u548c\u5956\u52b1\u6211\u4eec\u53c2\u4e0e\u5173\u7cfb\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u751f\u5b58\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u9002\u7528\u4e8e\u6211\u4eec\u7684\u751f\u6b96\u4f19\u4f34\u3001\u5b69\u5b50\uff0c\u4e5f\u9002\u7528\u4e8e\u6211\u4eec\u7684\u670b\u53cb\u3002\u4eba\u7c7b\u662f\u9ad8\u5ea6\u5408\u4f5c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5982\u6b64\u3002\u4e00\u4e2a\u7269\u79cd\u5c06\u662f\u5b64\u72ec\u7684\uff0c\u9664\u975e\u5b83\u5fc5\u987b\u4e0e\u4ed6\u4eba\u5408\u4f5c\u3002\u6ca1\u5173\u7cfb\uff0c\u53ea\u662f\u538b\u529b\u592a\u5927\u4e86\u3002\u4f60\u5fc5\u987b\u82b1\u5927\u91cf\u65f6\u95f4\u76d1\u63a7\u5176\u4ed6\u4eba\u7684\u884c\u4e3a\uff0c\u786e\u4fdd\u4f60\u53d1\u73b0\u4e86\u90a3\u4e9b\u8bd5\u56fe\u6b3a\u9a97\u4f60\u6216\u4ece\u4f60\u90a3\u91cc\u5077\u4e1c\u897f\u7684\u4eba\u3002\n\u8fdb\u5316\u516c\u53f8\u786e\u4fdd\u6211\u4eec\u5408\u4f5c\u7684\u65b9\u5f0f\u662f\u63d0\u51fa\u5316\u5b66\u8d3f\u8d42\u3002\u7231\u7684\u57fa\u7840\u662f\u56db\u79cd\u795e\u7ecf\u5316\u5b66\u7269\u8d28\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u4f46\u4ed6\u4eec\u4e00\u8d77\u6fc0\u52b1\u6211\u4eec\uff0c\u6216\u7ed9\u6211\u4eec\u8fdb\u5165\u793e\u4f1a\u5173\u7cfb\u7684\u4fe1\u5fc3\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u4f1a\u5bf9\u8fd9\u4e9b\u5316\u5b66\u7269\u8d28\u4e0a\u763e\u3002\u5f53\u6211\u4eec\u4e0e\u5bf9\u6211\u4eec\u7684\u751f\u5b58\u81f3\u5173\u91cd\u8981\u7684\u4eba\u4e92\u52a8\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u8fd9\u79cd\u559c\u60a6\u3001\u6b23\u5feb\u548c\u56de\u62a5\u3002\u8fd9\u662f\u751f\u7269\u8d3f\u8d42\u3002\u5c31\u597d\u50cf\u6211\u7ed9\u6211\u7684\u5b69\u5b50\u4eec\u4e00\u4e2a\u751c\u70b9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u505a\u4e86\u4e00\u4e9b\u597d\u4e8b\uff0c\u8fd9\u662f\u7cdf\u7cd5\u7684\u80b2\u513f\u65b9\u5f0f\uff0c\u4f46\u8fd9\u662f\u6709\u6548\u7684\u3002\n\u56e0\u4e3a\u8fdb\u5316\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u9057\u4f20\u57fa\u56e0\u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u8d3f\u8d42\u63a7\u5236\u7740\u6211\u4eec\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u662f\u4e00\u79cd\u826f\u6027\u63a7\u5236\u3002\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u5927\u591a\u6570\u65f6\u5019\uff0c\u8fd9\u79cd\u4f53\u9a8c\u662f\u53ef\u7231\u7684\u3001\u6e29\u6696\u7684\uff0c\u5bf9\u5065\u5eb7\u6709\u76ca\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u5bfb\u6c42\u7231\u3001\u6e34\u671b\u7231\u3001\u5bfb\u627e\u7231\u3001\u4fdd\u6301\u7231\u7684\u751f\u7406\u673a\u80fd\u662f\u4e00\u4e2a\u5f31\u70b9\u3002\u8fd9\u79cd\u672c\u80fd\u7684\u9700\u8981\u53ef\u4ee5\u88ab\u5229\u7528\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u8ba9\u6211\u4eec\u505a\u6211\u4eec\u4e0d\u4e00\u5b9a\u60f3\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u5c31\u662f\u7231\u7684\u4ee3\u4ef7\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u64cd\u7eb5\u3001\u8650\u5f85\u6216\u80c1\u8feb\u6211\u4eec\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u4e0e\u52a8\u7269\u7684\u533a\u522b\u3002\u52a8\u7269\u4e0d\u4f1a\u7528\u7231\u6765\u64cd\u7eb5\u4ed6\u4eba\u3002\u662f\u7684\u3002\n\u4f60\u8bf4\u7231\u60c5\u7684\u795e\u7ecf\u5316\u5b66\u7269\u8d28\u4e4b\u4e00\u50ac\u4ea7\u7d20\u7684\u57fa\u7ebf\u6c34\u5e73\u53ef\u4ee5\u9884\u6d4b\u516d\u4e2a\u6708\u540e\u4e00\u5bf9\u592b\u5987\u662f\u5426\u4f1a\u5728\u4e00\u8d77\uff0c\u8fd9\u5f88\u53ef\u6015\u3002\u4e3a\u4ec0\u4e48\u90a3\u4e48\u53ef\u6015\uff1f\n\u8bf4\u5230\u4e00\u6bb5\u611f\u60c5\uff0c\u5728\u4f60\u5f00\u59cb\u4e4b\u524d\u5c31\u77e5\u9053\u8fd9\u6bb5\u611f\u60c5\u7684\u4e00\u90e8\u5206\u662f\u5199\u5728\u661f\u661f\u4e0a\u7684\uff0c\u8fd9\u6709\u70b9\u5413\u4eba\u3002\u8fd9\u662f\u56e0\u4e3a\u50ac\u4ea7\u7d20\u6c34\u5e73\u8f83\u9ad8\u7684\u4eba\u901a\u5e38\u5bf9\u4eba\u9645\u5173\u7cfb\u66f4\u5f00\u653e\uff0c\u4ed6\u4eec\u66f4\u613f\u610f\u4e3a\u5efa\u7acb\u4e00\u6bb5\u5173\u7cfb\u800c\u52aa\u529b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5f88\u591a\u56e0\u7d20\u4f1a\u5f71\u54cd\u4e00\u6bb5\u5173\u7cfb\u662f\u5426\u80fd\u7ef4\u6301\u50ac\u4ea7\u7d20\u6c34\u5e73\u3001\u9057\u4f20\u3001\u6559\u517b\u3001\u4f60\u7684\u4f9d\u604b\u72b6\u51b5\u3001\u4f60\u5bb6\u4eba\u7684\u652f\u6301\u3002\u6240\u4ee5\u8fd9\u662f\u6211\u7684\u79c1\u4eba\u8c08\u8bdd\uff0c\u8bf4\uff0c\u201c\u54e6\uff0c\u5929\u54ea\uff0c\u4f60\u9047\u5230\u4e86\u4e00\u4e2a\u4eba\uff0c\u4f60\u89c9\u5f97\u4ed6\u4eec\u5f88\u68d2\uff0c\u4f46\u8fd9\u6bb5\u5173\u7cfb\u90e8\u5206\u5df2\u7ecf\u5199\u597d\u4e86\u3002\u201d\n\u5f53\u6211\u4eec\u4e0e\u5bf9\u6211\u4eec\u7684\u751f\u5b58\u81f3\u5173\u91cd\u8981\u7684\u4eba\u4e92\u52a8\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u8fd9\u79cd\u559c\u60a6\u3001\u6b23\u5feb\u548c\u56de\u62a5\u3002\n\u5bf9\u5f53\u4f60\u7b2c\u4e00\u6b21\u5760\u5165\u7231\u6cb3\u65f6\uff0c\u8fb9\u7f18\u7cfb\u7edf\u548c\u65b0\u76ae\u8d28\u7684\u5404\u4e2a\u533a\u57df\u90fd\u4f1a\u88ab\u6fc0\u6d3b\u3002\u4f46\u6211\u4eec\u4e5f\u770b\u5230\u4e86\u5931\u6d3b\u3002\u8fd9\u4e9b\u5931\u6d3b\u4e3b\u8981\u53d1\u751f\u5728\u4e0e\u201c\u7cbe\u795e\u5316\u201d\u76f8\u5173\u7684\u5927\u8111\u533a\u57df\u5fc3\u7406\u5316\u662f\u6307\u8bf4\u51fa\u67d0\u4eba\u610f\u56fe\u7684\u80fd\u529b\uff0c\u4f60\u9700\u8981\u5584\u4e8e\u5fc3\u7406\u5316\u6765\u53d1\u73b0\u8bf4\u8c0e\u8005\u6216\u9a97\u5b50\u3002\u8981\u60f3\u77e5\u9053\u67d0\u4eba\u662f\u5426\u5728\u6492\u8c0e\uff0c\u4f60\u9700\u8981\u5584\u4e8e\u7406\u89e3\u4ed6\u4eec\u7684\u52a8\u673a\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u7b2c\u4e00\u6b21\u5760\u5165\u7231\u6cb3\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e00\u70b9\u4f1a\u6d88\u5931\u3002\u5b83\u53ea\u662f\u51b3\u5b9a\u5b83\u4e0d\u4f1a\u518d\u5de5\u4f5c\u4e86\u3002\u56e0\u6b64\uff0c\u4f60\u7684\u670b\u53cb\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u4eba\u4e0d\u4e00\u5b9a\u5bf9\u4f60\u6709\u597d\u5904\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6b3a\u9a97\u4f60\u6216\u5bf9\u4f60\u6492\u8c0e\uff0c\u4f46\u4f60\u770b\u4e0d\u5230\u3002\n\u8fd9\u5f88\u6709\u8da3\u3002\u4e3a\u4ec0\u4e48\u4f1a\u6f14\u53d8\u6210\u8fd9\u6837\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u4fdd\u7559\u8fd9\u4e9b\u4e1c\u897f\uff1f\u8fd9\u662f\u5426\u4e0e\u50ac\u4ea7\u7d20\u964d\u4f4e\u4f60\u7684\u6291\u5236\u4f5c\u7528\u7684\u65b9\u5f0f\u76f8\u540c\uff1f\u4e5f\u8bb8\u8fd9\u662f\u4e3a\u4e86\u6d88\u9664\u4e00\u4e9b\u969c\u788d\uff0c\u5f53\u4f60\u6253\u7b97\u5f00\u59cb\u4e00\u6bb5\u5173\u7cfb\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u8bbe\u7f6e\u969c\u788d\u3002\u5982\u679c\u4f60\u603b\u662f\u7591\u795e\u7591\u9b3c\uff0c\u8ba4\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6b3a\u9a97\u4f60\u3001\u5077\u4f60\u7684\u4e1c\u897f\u6216\u5bf9\u4f60\u6492\u8c0e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7269\u79cd\u4e0d\u4f1a\u8d70\u5f97\u5f88\u8fdc\u3002\u6240\u4ee5\uff0c\u4e5f\u8bb8\u6211\u4eec\u5fc5\u987b\u6d88\u9664\u8fd9\u79cd\u80fd\u529b\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u5bf9\u6211\u4eec\u6240\u7231\u7684\u4eba\u6709\u4fe1\u5fc3\u548c\u8db3\u591f\u7684\u4fe1\u5fc3\uff0c\u6211\u4eec\u624d\u80fd\u7ee7\u7eed\u8fd9\u6837\u505a\u3002\u5f53\u4eba\u4eec\u542c\u4e00\u4f4d\u6709\u9b45\u529b\u7684\u5b97\u6559\u9886\u8896\u8bb2\u8bdd\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u540c\u6837\u7684\u60c5\u51b5\u3002\n\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u7231\u4e0a\u4e00\u4e2a\u4eba\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u4eba\uff1f\u6216\u8005\u6211\u5e94\u8be5\u95ee\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u5bf9\u4e00\u4e2a\u4eba\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u4eba\u6709\u6b32\u671b\uff1f\n\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u79cd\u611f\u5b98\u8f93\u5165\u3002\u6b32\u671b\u662f\u4e00\u79cd\u65e0\u610f\u8bc6\u7684\u60c5\u611f\u3002\u5b83\u5b8c\u5168\u53d1\u751f\u5728\u4f60\u5927\u8111\u7684\u8fb9\u7f18\u533a\u57df\u3002\u5b83\u53d1\u751f\u5728\u4f60\u770b\u5230\u6709\u4eba\u7a7f\u8fc7\u623f\u95f4\u7684\u7b2c\u4e00\u7eb3\u79d2\u4e4b\u5185\u3002\u4f60\u8981\u7528\u4f60\u6240\u6709\u7684\u611f\u5b98\u3002\u4ed6\u4eec\u4f1a\u544a\u8bc9\u4f60\u5173\u4e8e\u90a3\u4e2a\u4eba\u7684\u5065\u5eb7\uff0c\u4ed6\u4eec\u4fdd\u62a4\uff0c\u63d0\u4f9b\u7684\u80fd\u529b\uff0c\u5173\u4e8e\u4ed6\u4eec\u57fa\u56e0\u7684\u529b\u91cf\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u770b\u5230\u9762\u90e8\u7684\u4e0d\u5bf9\u79f0\u3002\u4f60\u4f1a\u542c\u5230\u4ed6\u4eec\u8bf4\u8bdd\u7684\u8bed\u6c14\u548c\u4ed6\u4eec\u8bf4\u7684\u8bdd\u3002\u4ed6\u4eec\u6240\u8bf4\u7684\u5f88\u597d\u5730\u8868\u660e\u4e86\u8ba4\u77e5\u80fd\u529b\u3001\u667a\u529b\u7684\u7075\u6d3b\u6027\u6216\u5e7d\u9ed8\u611f\u3002\n\u6700\u521d\uff0c\u4f60\u4f1a\u4e0d\u77e5\u4e0d\u89c9\u5730\u63a5\u53d7\u8fd9\u4e9b\u4fe1\u606f\u3002\u4f60\u8111\u5b50\u91cc\u7684\u7b97\u6cd5\u4f1a\u51b3\u5b9a\uff0c\u597d\u5427\uff0c\u8fd9\u4e2a\u4eba\u662f\u4f60\u7684\uff0c\u8fd8\u662f\u4e0d\u662f\u4f60\u7684\u3002\u6211\u4eec\u90fd\u6709\u4e00\u4e2a\u751f\u7269\u5e02\u573a\u4ef7\u503c\uff0c\u8fd9\u4e0e\u751f\u6b96\u6210\u529f\u7684\u53ef\u80fd\u6027\u6709\u5173\u3002\u5c31\u751f\u7269\u5e02\u573a\u4ef7\u503c\u800c\u8a00\uff0c\u4f60\u8d8a\u6709\u53ef\u80fd\u5728\u7e41\u6b96\u4e0a\u6210\u529f\uff0c\u4f60\u5c31\u8d8a\u5bcc\u6709\u3002\u5f53\u4f60\u770b\u5230\u623f\u95f4\u5bf9\u9762\u7684\u4eba\uff0c\u4f60\u4f1a\u60f3\uff0c\u201c\u5929\u54ea\uff0c\u4ed6\u4eec\u5b8c\u5168\u4e0d\u5728\u6211\u7684\u8303\u56f4\u4e4b\u5185\u3002\u201d\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u4f60\u5927\u8111\u7684\u60f3\u6cd5\uff0c\u6216\u8005\u201c\u6211\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u201d\u8fd9\u662f\u8ba1\u7b97\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4ece\u4f60\u7684\u7b97\u6cd5\u4e2d\u5f97\u5230\u4e00\u4e2a\u8bb0\u53f7\uff0c\u50ac\u4ea7\u7d20\u548c\u591a\u5df4\u80fa\u5c31\u4f1a\u88ab\u91ca\u653e\u51fa\u6765\uff0c\u7136\u540e\u4f60\u5c31\u53bb\u505a\u90a3\u79cd\u5316\u5b66\u5de5\u4f5c\uff0c\u90a3\u79cd\u6b32\u671b\u7684\u611f\u89c9\uff0c\u90a3\u79cd\u5728\u4e24\u4e2a\u4eba\u4e4b\u95f4\u4ea7\u751f\u7684\u5316\u5b66\u53cd\u5e94\u3002\u610f\u8bc6\u7684\u5927\u8111\u5728\u90a3\u4e4b\u540e\u5f88\u5feb\u5c31\u4f1a\u6d3b\u8dc3\u8d77\u6765\uff0c\u4f46\u6700\u521d\u7684\u65f6\u523b\u662f\u5b8c\u5168\u65e0\u610f\u8bc6\u7684\u3002\n\u539f\u56e0\u662f\u6211\u7ecf\u5e38\u88ab\u53eb\u9192\u3002\u6211\u505a\u4e86\u5f88\u591a\u516c\u5f00\u6f14\u8bb2\uff0c\u6211\u5411\u4eba\u4eec\u89e3\u91ca\u751f\u7269\u5b66\u6240\u8ba4\u4e3a\u7684\u62e9\u5076\u89c4\u5219\u3002\u4f46\u7279\u522b\u662f\u5f88\u591a\u5973\u6027\uff0c\u5f88\u96be\u63a5\u53d7\u5979\u4eec\u4ecd\u5728\u5bfb\u627e\u4fdd\u62a4\u8005\u548c\u63d0\u4f9b\u8005\u3002\u6211\u8bd5\u56fe\u89e3\u91ca\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u73b0\u5728\u80fd\u591f\u72ec\u7acb\uff0c\u7ecf\u6d4e\u4e0a\u72ec\u7acb\uff0c\u4f46\u4ed6\u4eec\u4ecd\u7136\u5728\u7537\u4eba\u8eab\u4e0a\u5bfb\u627e\u72ec\u7acb\u3002\u8fd9\u4e9b\u62e9\u5076\u89c4\u5219\u5728\u8fdb\u5316\u4e0a\u6781\u5176\u53e4\u8001\u3002\u6bcf\u5f53\u6211\u4eec\u770b\u5230\u4efb\u4f55\u7269\u79cd\u7684\u914d\u5076\u9009\u62e9\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u770b\u5230\u7684\u3002\u6709\u4e9b\u5973\u6027\u7ecf\u6d4e\u4e0a\u6bd4\u8f83\u8212\u9002\uff0c\u4e0d\u9700\u8981\u7537\u6027\uff0c\u539f\u56e0\u4e4b\u4e00\u662f\u5979\u4eec\u751f\u6d3b\u5728\u4e00\u79cd\u6027\u522b\u5e73\u7b49\u7684\u6587\u5316\u4e2d\u3002\u8fd9\u90e8\u5206\u6765\u81ea\u5973\u6743\u4e3b\u4e49\u3002\u4f46\u5973\u6743\u4e3b\u4e49\u5e76\u6ca1\u6709\u89e6\u53ca\u8fdb\u5316\u8bba\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5b83\u662f\u6700\u8fd1\u624d\u51fa\u73b0\u7684\u3002\u4f8b\u5982\uff0c\u5728\u8fc7\u53bb\u768470\u5e74\u91cc\uff0c\u5973\u6027\u53ea\u80fd\u63a7\u5236\u81ea\u5df1\u7684\u907f\u5b55\u65b9\u6cd5\u3002\u8fd9\u5728\u8fdb\u5316\u65f6\u4ee3\u7b97\u4e0d\u4e86\u4ec0\u4e48\u3002\u50cf\u62e9\u5076\u8fd9\u6837\u6839\u6df1\u8482\u56fa\u7684\u4e8b\u60c5\uff0c\u53ea\u6709\u5728\u4eba\u7c7b\u884c\u4e3a\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u624d\u5728\u7269\u79cd\u95f4\u51e0\u4e4e\u662f\u666e\u904d\u5b58\u5728\u7684\uff0c\u800c\u4e14\u4e16\u754c\u4e0a\u5f88\u591a\u56fd\u5bb6\u90fd\u4e0d\u5b58\u5728\u5e73\u7b49\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u89e6\u53ca\u5230\u8fd9\u4e00\u70b9\u3002\n\u4f60\u5199\u7684\u201c\u4ece\u8ba4\u77e5\u89d2\u5ea6\u6765\u770b\uff0c\u8de8\u6027\u522b\u5408\u4f5c\u662f\u6240\u6709\u5408\u4f5c\u4e2d\u4ee3\u4ef7\u6700\u9ad8\u7684\u201d\u662f\u4ec0\u4e48\u610f\u601d\n\u8fd9\u662f\u4eba\u4eec\u96be\u4ee5\u63a5\u53d7\u7684\u3002\u5728\u4f60\u5f97\u5230\u4e24\u6027\u4e4b\u95f4\u7684\u5408\u4f5c\u4e4b\u524d\uff0c\u4f60\u603b\u662f\u5728\u4e00\u4e2a\u6027\u522b\u5185\u90e8\u5f97\u5230\u5408\u4f5c\u3002\u53ea\u6709\u5f53\u4f60\u7cbe\u75b2\u529b\u7aed\u7684\u65f6\u5019\uff0c\u4f60\u624d\u4f1a\u88ab\u8feb\u4e0e\u5f02\u6027\u5408\u4f5c\u3002\u539f\u56e0\u662f\u6211\u4eec\u5728\u7528\u81ea\u5df1\u7684\u6027\u522b\u4ea4\u6613\u7c7b\u4f3c\u7684\u8d27\u5e01\u3002\n\u5f53\u6211\u4eec\u89c2\u5bdf\u6211\u4eec\u8fdb\u5316\u7684\u73af\u5883\u65f6\uff0c\u6700\u5927\u7684\u95ee\u9898\u662f\u513f\u7ae5\u4fdd\u80b2\u3002\u6211\u4eec\u6709\u8fd9\u4e9b\u9700\u8981\u629a\u517b\u7684\u5b69\u5b50\u3002\u4e3a\u4e86\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u9700\u8981\u5e2e\u52a9\u8fd9\u4e9b\u5b69\u5b50\u3002\u800c\u5973\u6027\u4f1a\u5148\u6c42\u52a9\u4e8e\u5979\u4eec\u7684\u5973\u6027\u4eb2\u5c5e\u3002\u5408\u4f5c\u5c31\u662f\u4e92\u60e0\u3002\u6211\u4eec\u60f3\u786e\u4fdd\u8d44\u4ea7\u8d1f\u503a\u8868\u662f\u5e73\u8861\u7684\u3002\u4f60\u4e0d\u60f3\u6210\u4e3a\u4e00\u4e2a\u603b\u662f\u5e2e\u7740\u5fd9\u5374\u4ec0\u4e48\u90fd\u6ca1\u5f97\u5230\u7684\u4eba\u3002\u4ece\u751f\u5b58\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u4e0d\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\n\u5bf9\u4e8e\u7537\u4eba\uff0c\u4f60\u503e\u5411\u4e8e\u5728\u6218\u6597\u4e2d\u4ea4\u6362\u8054\u76df\u3001\u652f\u6301\u548c\u5e2e\u52a9\u3002\u5f53\u4f60\u8ba9\u7537\u4eba\u548c\u5973\u4eba\u5408\u4f5c\u65f6\uff0c\u5c24\u5176\u662f\u5728\u4eba\u7c7b\u8fdb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5c31\u662f\u5728\u4ea4\u6362\u8fd9\u4e9b\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u5973\u6027\u4ecd\u7136\u9700\u8981\u513f\u7ae5\u4fdd\u80b2\u3002\u6211\u5e0c\u671b\u4f60\u80fd\u5e2e\u6211\u629a\u517b\u6211\u4eec\u7684\u5b69\u5b50\uff0c\u4f46\u8fd9\u4e2a\u7537\u4eba\u5728\u90a3\u91cc\uff0c\u56e0\u4e3a\u4ed6\u57fa\u672c\u4e0a\u60f3\u548c\u5979\u505a\u7231\uff0c\u751f\u66f4\u591a\u7684\u5b69\u5b50\u3002\u4f60\u662f\u5728\u7528\u6027\u6765\u6362\u53d6\u513f\u7ae5\u4fdd\u80b2\u3002\n\u8fd9\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u8d27\u5e01\u3002\u4f60\u7684\u5927\u8111\u5fc5\u987b\u8fdb\u884c\u8d27\u5e01\u8ba1\u7b97\u3002\u5f53\u6211\u4eec\u89c2\u5bdf\u5927\u8111\u8fdb\u5316\u7684\u65b9\u5f0f\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8ba4\u77e5\u7ed3\u6784\u7684\u53d1\u5c55\uff0c\u4f7f\u4f60\u80fd\u591f\u5f00\u59cb\u8fdb\u884c\u66f4\u590d\u6742\u7684\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5728\u57fa\u7840\u5c42\u9762\u4e0a\uff0c\u8de8\u6027\u522b\u5408\u4f5c\u6bd4\u5728\u6027\u522b\u5185\u90e8\u5408\u4f5c\u8981\u56f0\u96be\u5f97\u591a\u3002\n\u4f60\u8bf4\u6bcd\u4eb2\u548c\u7236\u4eb2\u5bf9\u5b69\u5b50\u7684\u4f9d\u604b\u662f\u6709\u533a\u522b\u7684\u3002\u4e3a\u4ec0\u4e48\u5462\n\u4f9d\u604b\u662f\u4e24\u4e2a\u4eba\u4e4b\u95f4\u6df1\u539a\u7684\u5fc3\u7406\u7ebd\u5e26\u3002\u6bcd\u4eb2\u7684\u4f9d\u604b\u7eaf\u7cb9\u662f\u57fa\u4e8e\u517b\u80b2\u3002\u8fd9\u79cd\u4f9d\u604b\u7684\u529b\u91cf\u5c06\u57fa\u4e8e\u5979\u517b\u80b2\u5b69\u5b50\u7684\u654f\u611f\u548c\u79ef\u6781\u7684\u65b9\u5f0f\u3002\u5bf9\u4e8e\u7236\u4eb2\u6765\u8bf4\uff0c\u57f9\u517b\u5f88\u91cd\u8981\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u5143\u7d20\u6765\u81ea\u5927\u8111\u76ae\u5c42\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u597d\u5427\uff0c\u6211\u8981\u7a81\u7834\u4f60\u7684\u53d1\u5c55\u754c\u9650\u3002\u6211\u8981\u8ba9\u4f60\u66f4\u6709\u97e7\u6027\u3002\u6211\u8981\u628a\u4f60\u63a8\u5411\u5bb6\u5ead\u4e4b\u5916\u7684\u4e16\u754c\u3002\u201d\u5168\u4e16\u754c\u6240\u6709\u7236\u4eb2\u7684\u5171\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u4ed6\u4eec\u5728\u5e2e\u52a9\u5b69\u5b50\u8fdb\u5165\u793e\u4f1a\u4e16\u754c\u4e2d\u626e\u6f14\u7740\u8fd9\u6837\u7684\u89d2\u8272\u3002\u8fd9\u662f\u4ed6\u4eec\u53c2\u4e0e\u53d1\u5c55\u7684\u57fa\u7840\u3002\n\u4eba\u4eec\u6709\u65f6\u4f1a\u89c9\u5f97\u8fd9\u5f88\u96be\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u8bf4\uff0c\u201c\u55ef\uff0c\u8fd9\u4e9b\u53ea\u662f\u6587\u5316\u6027\u522b\u89d2\u8272\u3002\u201d\u662f\u7684\uff0c\u4f60\u53ef\u4ee5\u8fd9\u4e48\u8bf4\uff0c\u4f46\u5b83\u4e5f\u6709\u4e00\u4e2a\u8fdb\u5316\u8bba\u7684\u89e3\u91ca\uff0c\u90a3\u5c31\u662f\u8fdb\u5316\u4e0d\u4f1a\u4ea7\u751f\u5197\u4f59\u3002\u5982\u679c\u4e0d\u9700\u8981\u7684\u8bdd\uff0c\u8fd9\u4e0d\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u5bf9\u67d0\u4ef6\u4e8b\u6709\u6295\u5165\u7684\u4eba\u626e\u6f14\u76f8\u540c\u7684\u89d2\u8272\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u6d6a\u8d39\u7cbe\u529b\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4eba\u7c7b\u513f\u7ae5\u9700\u8981\u5927\u91cf\u7684\u60c5\u611f\u3001\u8ba4\u77e5\u548c\u5b9e\u8df5\u6295\u5165\u6765\u57f9\u517b\u3002\u56e0\u6b64\uff0c\u7236\u6bcd\u8981\u5f88\u597d\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u7ed9\u5b69\u5b50\u63d0\u4f9b\u826f\u597d\u7684\u53d1\u5c55\u73af\u5883\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\n\u6211\u4eec\u770b\u5230\u7684\u662f\u5355\u4eb2\u6216\u540c\u6027\u4f34\u4fa3\u7236\u6bcd\u5927\u8111\u7684\u53d8\u5316\u3002\u4eba\u7c7b\u7684\u5927\u8111\u5177\u6709\u96be\u4ee5\u7f6e\u4fe1\u7684\u53ef\u5851\u6027\u3002\u6240\u6709\u7236\u6bcd\u90fd\u6709\u80fd\u529b\u57f9\u517b\u3001\u6311\u6218\u548c\u5efa\u7acb\u9002\u5e94\u529b\u3002\u6211\u4eec\u770b\u5230\u7684\u53d8\u5316\u4f7f\u5355\u4e2a\u4e2a\u4f53\u7684\u5927\u8111\u80fd\u591f\u50cf\u5988\u5988\u6216\u7238\u7238\u4e00\u6837\u5de5\u4f5c\u3002\u5982\u679c\u6211\u4eec\u770b\u770b\u521a\u679c\u7684\u963f\u5361\u4eba\uff0c\u5728\u90a3\u91cc\uff0c\u7236\u4eb2\u4eec\u82b160%\u7684\u65f6\u95f4\u4e0e\u5b69\u5b50\u8fdb\u884c\u8eab\u4f53\u63a5\u89e6\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u79cd\u4e0d\u540c\u7684\u80b2\u513f\u65b9\u5f0f\u3002\u548c\u6240\u6709\u4e8b\u60c5\u4e00\u6837\uff0c\u4e00\u4e9b\u517b\u80b2\u65b9\u5f0f\u662f\u751f\u7269\u7684\uff0c\u4e00\u4e9b\u662f\u73af\u5883\u548c\u80cc\u666f\u7684\u3002\u6211\u4eec\u5728\u7537\u6027\u8eab\u4e0a\u666e\u904d\u53d1\u73b0\u7684\u662f\uff0c\u4ed6\u4eec\u5728\u5c06\u5b69\u5b50\u63a8\u5411\u4e16\u754c\u7684\u8fc7\u7a0b\u4e2d\u53d1\u6325\u7740\u5efa\u7acb\u97e7\u6027\u7684\u4f5c\u7528\uff0c\u4f46\u4ed6\u4eec\u662f\u4ee5\u7279\u5b9a\u6587\u5316\u7684\u65b9\u5f0f\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u8fd9\u53d6\u51b3\u4e8e\u90a3\u4e2a\u4e16\u754c\u7684\u73af\u5883\u80cc\u666f\u3002\n\u53ea\u6709\u5f53\u4f60\u7cbe\u75b2\u529b\u7aed\u7684\u65f6\u5019\uff0c\u4f60\u624d\u4f1a\u88ab\u8feb\u4e0e\u5f02\u6027\u5408\u4f5c\u3002\n\u6bd4\u5982\u8bf4\uff0c\u5f53\u4f60\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\uff0c\u4f60\u5bf9\u7236\u6bcd\u6709\u4e00\u79cd\u5b89\u5168\u7684\u4f9d\u604b\u3002\u8fd9\u610f\u5473\u7740\u4f60\u6709\u654f\u611f\u7684\u7236\u6bcd\uff0c\u4ed6\u4eec\u77e5\u9053\u4f60\u7684\u60c5\u611f\u548c\u8eab\u4f53\u9700\u6c42\uff0c\u5e76\u6ee1\u8db3\u4e86\u8fd9\u4e9b\u9700\u6c42\u3002\u4f60\u662f\u5b89\u5168\u7684\uff0c\u4f60\u6ca1\u6709\u7126\u8651\uff0c\u4f60\u6ca1\u6709\u88ab\u9057\u5f03\u3002\u8fd9\u8ba9\u4f60\u7684\u5927\u8111\u6c89\u6d78\u5728\u50ac\u4ea7\u7d20\u3001\u591a\u5df4\u80fa\u548c\u03b2-\u5185\u5561\u80bd\u4e2d\uff0c\u4f60\u4f1a\u4ea7\u751f\u4f4e\u6c34\u5e73\u7684\u76ae\u8d28\u9187\uff0c\u4f60\u4f1a\u4ea7\u751f\u8fd9\u79cd\u9ad8\u6548\u7684\u5927\u8111\uff0c\u4f60\u4e0d\u4f1a\u770b\u5230\u795e\u7ecf\u5143\u6b7b\u4ea1\uff0c\u8fd9\u5c31\u662f\u5ffd\u89c6\u4f1a\u53d1\u751f\u7684\u60c5\u51b5\u3002\u5f53\u4f60\u5411\u524d\u8fc8\u8fdb\u65f6\uff0c\u4f60\u5c06\u62e5\u6709\u751f\u7269\u5b66\u57fa\u7840\u548c\u5fc3\u7406\u5b66\u57fa\u7840\uff0c\u80fd\u591f\u5efa\u7acb\u826f\u597d\u7684\u4f9d\u604b\u5173\u7cfb\uff0c\u5efa\u7acb\u5065\u5eb7\u7684\u5173\u7cfb\uff0c\u5e76\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4e00\u6bb5\u5173\u7cfb\u5bf9\u4f60\u6765\u8bf4\u4e0d\u5065\u5eb7\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u5e94\u8be5\u79bb\u5f00\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u60c5\u51b5\u6070\u6070\u76f8\u53cd\u3002\u6211\u4eec\u770b\u5230\u5927\u8111\u6c90\u6d74\u5728\u9ad8\u6d53\u5ea6\u7684\u76ae\u8d28\u9187\u4e2d\u3002\u6211\u4eec\u770b\u5230\u4e86\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u6b7b\u4ea1\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u770b\u5230\u5927\u8111\u4e2d\u90a3\u4e9b\u4eb2\u793e\u4f1a\u533a\u57df\u7684\u7070\u8d28\u548c\u767d\u8d28\u51cf\u5c11\u3002\u4ed6\u4eec\u4e0d\u5177\u5907\u505a\u8fd9\u4e00\u5207\u7684\u80fd\u529b\uff0c\u4e0d\u5177\u5907\u4e92\u60e0\u3001\u4fe1\u4efb\u548c\u540c\u7406\u5fc3\u3002\u4ed6\u4eec\u6240\u89c2\u5bdf\u5230\u7684\u884c\u4e3a\uff0c\u5373\u5173\u7cfb\u884c\u4e3a\uff0c\u5e76\u4e0d\u597d\uff0c\u8fd9\u662f\u4ed6\u4eec\u4eca\u540e\u5c06\u590d\u5236\u7684\u4e1c\u897f\u3002\u4f46\u4ed6\u4eec\u4e5f\u6ca1\u6709\u5f3a\u5927\u7684\u751f\u7269\u5b66\u57fa\u7840\u6765\u7ef4\u6301\u826f\u597d\u7684\u5173\u7cfb\u3002\n\u4f60\u8bf4\u6211\u4eec\u4f4e\u4f30\u4e86\u6765\u81ea\u53cb\u8c0a\u7684\u7231\u3002\u8fd9\u53ef\u80fd\u6b63\u5728\u5f00\u59cb\u6539\u53d8\u3002\u6700\u8fd1\u5728\u300a\u5927\u897f\u6d0b\u6708\u520a\u300b\u4e0a\u6709\u4e00\u7bc7\u5e7f\u4e3a\u9605\u8bfb\u7684\u6587\u7ae0\u63d0\u5230\u4e86\u8fd9\u7bc7\u9898\u4e3a\u201c\u662f\u4f60\u7684\u670b\u53cb\u4f24\u4e86\u4f60\u7684\u5fc3\uff1a\u6211\u4eec\u5e74\u7eaa\u8d8a\u5927\uff0c\u6211\u4eec\u8d8a\u9700\u8981\u670b\u53cb\uff0c\u4e5f\u8d8a\u96be\u7559\u4f4f\u4ed6\u4eec\u3002\u201d\u4f60\u89c9\u5f97\u8fd9\u4e2a\u6807\u9898\u600e\u4e48\u6837\uff1f\n\u6211\u4eec\u503e\u5411\u4e8e\u4f18\u5148\u8003\u8651\u6d6a\u6f2b\u5173\u7cfb\uff0c\u4e5f\u8bb8\u8fd8\u6709\u7236\u6bcd\u5173\u7cfb\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u53cb\u8c0a\u662f\u7406\u6240\u5f53\u7136\u7684\u3002\u4f46\u5b83\u4eec\u5bf9\u4f60\u6765\u8bf4\u975e\u5e38\u91cd\u8981\u3002\u5b83\u4eec\u662f\u4f60\u552f\u4e00\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u7684\u67cf\u62c9\u56fe\u5f0f\u5173\u7cfb\u3002\u4f60\u4e0d\u80fd\u9009\u62e9\u4f60\u7684\u5bb6\u4eba\uff0c\u4f46\u4f60\u53ef\u4ee5\u4e3b\u52a8\u9009\u62e9\u4f60\u7684\u670b\u53cb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684\u7814\u7a76\u8868\u660e\uff0c\u4e0e\u4f60\u7684\u7231\u4eba\u76f8\u6bd4\uff0c\u4f60\u66f4\u50cf\u4f60\u7684\u670b\u53cb\u3002\u5982\u679c\u4f60\u662f\u5973\u6027\uff0c\u4f60\u4e0e\u670b\u53cb\u7684\u611f\u60c5\u6bd4\u4e0e\u7231\u4eba\u7684\u611f\u60c5\u66f4\u4eb2\u5bc6\u3002\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u7537\u4eba\uff0c\u4f60\u7684\u670b\u53cb\u4f1a\u8ba9\u4f60\u5f88\u5bb9\u6613\u6210\u4e3a\u771f\u6b63\u7684\u4f60\u3002\n\u6240\u4ee5\u6211\u4eec\u7684\u670b\u53cb\u7ed9\u4e86\u6211\u4eec\u5f88\u591a\u3002\u6211\u4eec\u5ffd\u89c6\u4e86\u6211\u4eec\u7684\u53cb\u8c0a\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u53cb\u8c0a\u5f80\u5f80\u8d85\u8d8a\u4e86\u6211\u4eec\u7684\u6d6a\u6f2b\u5173\u7cfb\uff0c\u800c\u8fd9\u4e9b\u624d\u662f\u771f\u6b63\u7a33\u56fa\u7684\u57fa\u7840\u3002\u5728\u4f60\u7684\u751f\u6d3b\u4e2d\uff0c\u4e3a\u4e86\u4f60\u7684\u7cbe\u795e\u5065\u5eb7\u3001\u8eab\u4f53\u5065\u5eb7\u3001\u957f\u5bff\u548c\u5e78\u798f\uff0c\u4f60\u9700\u8981\u5b83\u4eec\u3002\u4f46\u6211\u786e\u5b9e\u8ba4\u4e3a\u6211\u4eec\u4f4e\u4f30\u4e86\u4ed6\u4eec\u3002\u4e3a\u4e86\u6211\u7684\u7814\u7a76\uff0c\u6211\u91c7\u8bbf\u4e86\u5f88\u591a\u4eba\uff0c\u5c24\u5176\u662f\u5f53\u6211\u91c7\u8bbf\u82f1\u56fd\u4eba\u65f6\uff0c\u6211\u4f1a\u95ee\u4ed6\u4eec\uff0c\u201c\u4f60\u7231\u4f60\u7684\u670b\u53cb\u5417\uff1f\u201d\u4ed6\u4eec\u4f1a\u8bf4\uff1a\u201c\u55ef\uff0c\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u7231\u4ed6\u4eec\u3002\u201d\u7136\u540e\u6211\u4f1a\u8bf4\uff0c\u201c\u4f60\u7231\u4f60\u7684\u72d7\u5417\uff1f\u201d\u201c\u54e6\uff0c\u4e0a\u5e1d\uff0c\u662f\u7684\uff01\u6211\u7231\u6211\u7684\u72d7\u3002\u201d\u6b63\u662f\u56e0\u4e3a\u8fd9\u4ef6\u4e8b\uff0c\u6211\u4eec\u624d\u4e0d\u8003\u8651\u6211\u4eec\u53ef\u4ee5\u7231\u670b\u53cb\u7684\u4e8b\u5b9e\u3002\u6211\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u662f\u82f1\u56fd\u7279\u6709\u7684\u4e1c\u897f\uff0c\u975e\u5e38\u514b\u5236\uff0c\u6211\u4eec\u4e0d\u4f1a\u627f\u8ba4\u8fd9\u4e00\u70b9\u3002\n\u54f2\u5b66\u5bb6\u963f\u5170\u00b7\u5fb7\u00b7\u6ce2\u987f\uff08Alain de Botton\uff09\u8ba4\u4e3a\uff0c\u6d6a\u6f2b\u4e3b\u4e49\u4e25\u91cd\u626d\u66f2\u4e86\u4eba\u4eec\u5bf9\u7231\u60c5\u7684\u770b\u6cd5\u4ee5\u53ca\u5bf9\u7231\u60c5\u7684\u671f\u5f85\u3002\u4f60\u89c9\u5f97\u600e\u4e48\u6837\uff1f\n\u6211\u540c\u610f\u4ed6\u7684\u770b\u6cd5\u3002\u8fd9\u79cd\u8bf4\u6cd5\u6beb\u65e0\u5e2e\u52a9\u3002\u9a91\u58eb\u738b\u5b50\u4ece\u57ce\u5821\u4e2d\u8425\u6551\u516c\u4e3b\u7684\u60f3\u6cd5\u3002\u5b83\u5efa\u7acb\u4e86\u4e00\u79cd\u96be\u4ee5\u7f6e\u4fe1\u7684\u7406\u60f3\u4e3b\u4e49\u89c2\u70b9\u548c\u975e\u5e38\u6027\u522b\u5316\u7684\u6d6a\u6f2b\u7231\u60c5\u89c2\uff0c\u8fd9\u5e76\u4e0d\u80fd\u53cd\u6620\u5927\u591a\u6570\u4eba\u7684\u73b0\u5b9e\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u4ece\u5438\u5f15\u4eba\u4eec\u7684\u6295\u5165\u4e2d\u770b\u51fa\uff0c\u4e16\u754c\u4e0a\u6709\u4e0d\u6b62\u4e00\u4e2a\u4eba\u5728\u7b49\u7740\u4f60\u3002\u6b64\u5916\uff0c\u4ece\u4eba\u7c7b\u5b66\u548c\u793e\u4f1a\u5b66\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u79cd\u9002\u7528\u4e8e\u793e\u4f1a\u7684\u53d9\u4e8b\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u53d7\u63a7\u7684\u53d9\u4e8b\uff1a\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u4eba\u4e0e\u53e6\u4e00\u4e2a\u4eba\u914d\u5bf9\uff0c\u6211\u4eec\u5236\u5b9a\u6240\u6709\u8fd9\u4e9b\u89c4\u5219\u3002\u6211\u4eec\u6709\u8fd9\u4e9b\u7231\u7684\u96f6\u548c\u89c2\u5ff5\u3002\u4f46\u662f\u6d6a\u6f2b\u7231\u60c5\u7684\u89c2\u5ff5\u5e76\u4e0d\u80fd\u53cd\u6620\u4eba\u4eec\u5b58\u5728\u7684\u73b0\u5b9e\uff0c\u5c24\u5176\u662f\u5728\u65e5\u76ca\u5355\u8eab\u7684\u60c5\u51b5\u4e0b\u3002\u6d6a\u6f2b\u7684\u7231\u662f\u6700\u5f3a\u5927\u7684\u7231\uff0c\u8fd9\u79cd\u60f3\u6cd5\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\uff0c\u56e0\u4e3a\u5b83\u8d2c\u4f4e\u4e86\u4f60\u751f\u6d3b\u4e2d\u6240\u6709\u5176\u4ed6\u53ef\u4ee5\u7231\u7684\u65b9\u5f0f\u3002\u6ca1\u6709\u4e00\u79cd\u6bd4\u6d6a\u6f2b\u7231\u60c5\u66f4\u5f31\uff0c\u4f46\u6211\u4eec\u4f3c\u4e4e\u8ba4\u4e3a\u5b83\u4eec\u6ca1\u6709\u6d6a\u6f2b\u7231\u60c5\u90a3\u4e48\u597d\u3002\u5b83\u4eec\u6ca1\u6709\u90a3\u4e48\u91cd\u8981\u3002\n\u8fd9\u79cd\u53d9\u8ff0\u4e5f\u4e0d\u80fd\u5e2e\u52a9\u4eba\u4eec\u6446\u8131\u8650\u5f85\u5173\u7cfb\u3002\u5982\u679c\u4f60\u544a\u8bc9\u4e00\u4e2a\u5b69\u5b50\uff0c\u7231\u5c31\u50cf\u7ae5\u8bdd\u6545\u4e8b\uff0c\u4f60\u4f1a\u88ab\u6df1\u6df1\u6253\u52a8\uff0c\u7231\u53ef\u4ee5\u514b\u670d\u4e00\u5207\u56f0\u96be\uff0c\u5e2e\u52a9\u514b\u670d\u4efb\u4f55\u969c\u788d\uff0c\u8fd9\u5728\u8650\u5f85\u7684\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4f60\u65e0\u6cd5\u63a7\u5236\u8fd9\u4e2a\u8650\u5f85\u4f60\u7684\u4eba\u3002\u5f53\u4f60\u8fd9\u4e48\u505a\u7684\u65f6\u5019\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u6beb\u65e0\u5e2e\u52a9\u7684\u6545\u4e8b\u3002\u8fd9\u662f\u4e00\u79cd\u53d9\u4e8b\uff0c\u5728\u4eca\u5929\u4e3b\u8981\u7531\u5546\u4e1a\u63a8\u52a8\u3002\u4f60\u53ef\u4ee5\u548c\u4f60\u7684\u7075\u9b42\u4f34\u4fa3\u4e3e\u884c\u5b8c\u7f8e\u7684\u5a5a\u793c\u3002\u8fd9\u5c31\u662f\u751f\u547d\u7684\u5168\u90e8\u3002\u6211\u542c\u8d77\u6765\u6709\u4e9b\u6124\u4e16\u5ac9\u4fd7\uff0c\u4f46\u6211\u5b8c\u5168\u540c\u610f\u6d6a\u6f2b\u7231\u60c5\u4e0d\u662f\u4e00\u79cd\u6709\u76ca\u7684\u53d9\u4e8b\u3002\n\u8fd9\u4e00\u70b9\u90fd\u6ca1\u6709\u8d1f\u9762\u5f71\u54cd\u3002\u4eba\u4eec\u8bf4\uff1a\u201c\u55ef\uff0c\u90a3\u4e00\u5b9a\u662f\u56e0\u4e3a\u4f60\u4e00\u751f\u90fd\u5728\u51b0\u51b7\u7684\u79d1\u5b66\u4e2d\uff0c\u5206\u6790\u4ec0\u4e48\u662f\u7231\u3002\u201d\u6211\u60f3\u5982\u679c\u8fd9\u5c31\u662f\u6211\u6240\u505a\u7684\uff0c\u6211\u60f3\u4f1a\u7684\u3002\u6211\u60f3\u5982\u679c\u4f60\u4e0d\u65ad\u5730\u5c06\u5176\u7b80\u5316\u4e3a\u4e00\u7ec4\u795e\u7ecf\u5316\u5b66\u7269\u8d28\u6216\u57fa\u56e0\u9a71\u52a8\u56e0\u7d20\uff0c\u6211\u60f3\u4e5f\u8bb8\u4f60\u4f1a\u3002\u4f46\u56e0\u4e3a\u6211\u662f\u4ece\u4eba\u7c7b\u5b66\u7684\u89d2\u5ea6\u6765\u505a\u8fd9\u4ef6\u4e8b\u7684\uff0c\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u548c\u4eba\u4eec\u8c08\u8bba\u4ed6\u4eec\u7684\u7231\uff0c\u6211\u53d1\u73b0\u7231\u662f\u4e00\u79cd\u795e\u5947\u7684\u73b0\u8c61\u3002\u6211\u7814\u7a76\u5f97\u8d8a\u591a\uff0c\u5c31\u8d8a\u656c\u754f\u5b83\u5728\u4eba\u7c7b\u4e2d\u7684\u590d\u6742\u6027\u3002", "note_en": "Evolution uses all its tricks to make sure we procreate. But love in humans is a many-splendored thing.\n  In an episode of the satirical comedy  The Great, the reign of the reason-and-science-loving Russian empress Catherine nearly collapses when her husband Peter, the deposed emperor, storms into her private quarters, determined to imprison her. But seeing her tearful and in despair, he forgets his vindictiveness and hugs her. Later, he tells her, \u201cI wanted your happiness more than my own.\u201d \u201cWow,\u201d she responds. \u201cIndeed,\u201d Peter says. \u201cLove has done a strange thing to me. I wonder if you cut a man who has loved fiercely, you will see a different-shaped heart from a man who has not?\u201d\n Of course, no literal imprint of fierce love would be found in the heart if scientists went looking. But it\u2019s safe to say that Peter was on to something. Love, scientists have shown, leaves noticeable and widespread traces of its impact on us. \u201cLove is so important,\u201d says evolutionary anthropologist Anna Machin, \u201cthat evolution has seen fit to engage every mechanism in your body to make sure you\u2019re as close and bonded as you can be.\u201d\n Machin, who studies the genetics and neurochemistry of love\u2014and has collaborated with the renowned Oxford anthropologist Robin Dunbar, of \u201c Dunbar\u2019s number\u201d\u2014is the author of a new book,  Why We Love: The New Science Behind Our Closest Relationships. In a recent interview with  Nautilus, she says she tackles the whole spectrum of loving relationships from a variety of scientific perspectives to explain the nature of love. \u201cIf you\u2019re a neuroscientist, you give one particular answer. If you\u2019re a psychologist, give another one,\u201d she said. \u201cAs an anthropologist\u2014it\u2019s a bit of a magpie profession\u2014I gather all that together.\u201d Machin\u2019s responses to my questions were articulate and energetic, despite how far into the evening it was for her in England.\n   The reason love evolved was to motivate and reward us for taking part in relationships, critical to our survival. That goes for our reproductive partners, children, and extending to our friends. Humans are highly cooperative because we have to be. A species will be solitary unless it absolutely has to cooperate with somebody else. And that\u2019s fine, except it\u2019s incredibly stressful. You have to spend a hell of a lot of time monitoring everybody else\u2019s behavior, making sure you\u2019re spotting those people who are trying to cheat you or steal from you.\n And the way evolution made sure we cooperate was to come up with chemical bribery. At the basis of love are four neurochemicals. Each has a different role but together they motivate us or to give us confidence to go into social relationships. Ultimately, we get addicted to those chemicals. We get this hit of joy, of euphoria, of reward when we interact with the people important to our survival. It\u2019s biological bribery. It\u2019s like if I give my kids a sweet because they\u2019ve done something good, which is bad parenting, but it works.\n  Because the only point of evolution is to pass genes down. This form of bribery is controlling us to make sure we do that. It\u2019s a benign control. For most people, most of the time, the experience is lovely and warming and beneficial in terms of health. Unfortunately, our biology to seek love, crave love, find love, keep love, is a weakness. That visceral need can be exploited, it can be used to make us do things we don\u2019t necessarily want to do. And that\u2019s the cost of love. It can be used to manipulate or abuse or coerce us. That\u2019s what separates us from the animals. Animals don\u2019t use love to manipulate others. We do.\n You say it\u2019s scary that a baseline level of oxytocin, one of the neurochemicals of love, can predict whether a couple will be together six months later. Why\u2019s that scary?\n When it comes to a relationship, it\u2019s a little bit scary to know that part of that relationship is written in the stars before you even started. That\u2019s because people with higher levels of oxytocin generally are more open to relationships, they are more committed to wanting to work toward a relationship. In fact, there are many things that go into whether a relationship will last\u2014oxytocin levels, genetics, upbringing, your attachment profile, the support of your family. So it\u2019s the private me talking, saying, \u201cOh my God, you meet someone, you think they\u2019re wonderful, but the relationship is partly already written.\u201d\n We get this hit of joy, of euphoria, of reward when we interact with the people important to our survival.\n  Yes. What happens when you fall in love for the first time is the activation of various areas of the limbic system and the neocortex. But we also see deactivations. These deactivations occur mainly in the brain area linked to \u201cmentalizing.\u201d Mentalizing is the ability to tell someone\u2019s intentions, and you need to be good at mentalizing to spot a liar or a cheat. To be able to tell if somebody is lying, you need to be good at understanding what their motivation is. But what happens when you fall in love for the first time is that bit shuts down. It just decides it\u2019s not going to work anymore. For that reason, your friends can see this person is not necessarily good for you, that maybe they\u2019re going to cheat on you or they\u2019re lying to you, but you cannot see it.\n  It\u2019s interesting. Why  would that have evolved? Why would that be something that was retained? Is it something to do with the same way that oxytocin lowers your inhibitions? Maybe it\u2019s to remove some of the hurdles that you might place in your own way when you\u2019re going to try and start a relationship. If you were constantly paranoid that everybody\u2019s going to cheat on you or steal from you or lie to you, the species wouldn\u2019t get very far. So maybe we have to remove that ability so that we have confidence and enough belief in the person that we fall in love with that we will carry on doing this. We see the same deactivation occurring when people listen to a charismatic religious leader.\n Why do we fall in love with one person and not another? Or maybe I should ask, Why do we have lust for one person and not another?\n That\u2019s very much a sensory input. Lust is an unconscious emotion. It takes place entirely in the limbic area of your brain. It happens within the first nanoseconds of you seeing somebody across a room. You\u2019re going to use all your senses. They\u2019re going to tell you things about that person\u2019s health, their ability to protect, to provide, about the strength of their genes, particularly if you\u2019re looking at sort of asymmetry within the face. You\u2019ll listen to the tone of voice and what they say. And what they say is a good indication of cognitive ability or flexibility of intellect, or sense of humor.\n Initially, you take in this information unconsciously. The algorithm in your head will decide, OK, this is somebody for you or this isn\u2019t somebody for you. We all have a biological market value on our head, which is linked to the likelihood of reproductive success. The more likely you are to be reproductively successful, the more wealthy you are in terms of your biological market value. That classic thing when you see someone across the room and you think either, \u201cOh my God, they\u2019re completely out of my league.\u201d That\u2019s basically what your brain\u2019s thinking or, \u201cI can do so much better.\u201d That\u2019s part of the calculation. If you get a tick from your algorithm, then oxytocin and dopamine are released and off you go, and you fill that chemical sort of job, that lustful feeling, that chemistry that develops between two people. The conscious brain kicks in pretty quickly after that, but the first moments are completely unconscious.\n  The reason for that is I often get called out. I do a lot of public speaking and I explain to people the rules of mate choice as biology sees them. But a lot of women, in particular, find it hard to accept that they are still looking for a protector and a provider. I try to explain that even though they are now capable of being independent, financially independent, they\u2019re still looking for that in the man. These mate-choice rules are evolutionarily incredibly ancient. Whenever we see mate choice in any species, this is what we see. One reason why some women are in a position where they\u2019re financially comfortable, and don\u2019t need a man for that, is because they live in a culture where there\u2019s a certain amount of gender equality. That has come about partly from feminism. But feminism hasn\u2019t touched evolution, partly because it\u2019s very recent. Women have only been able to control their contraception, for example, for about the last 70 years. That\u2019s nothing in evolutionary time. Something as deep-seated as mate choice only changes in human behavior when it\u2019s pretty much universal among the species, and there is not equality in a vast number of countries in the world, so it\u2019s not going to touch it.\n  What do you mean when you write that \u201ccross-sex cooperation is cognitively the costliest of all cooperation?\u201d\n This is something that people find difficult to accept. You always get cooperation within a sex before you get cooperation between the sexes. You\u2019re only driven to cooperate with the opposite sex when you\u2019ve exhausted your own. The reason is we\u2019re trading similar currencies in our own sex.\n When we look at the environment in which we evolved, the biggie was childcare. We have these dependent babies. To be able to function, you need help with those children. And women would turn to their female kin first to do that. Cooperation is all about reciprocity. We want to make sure the balance sheet is even. You don\u2019t want to be the one always doing all the helping and never getting anything back. From a survival point of view, that\u2019s not a good thing to do.\n With men, you tend to be trading things like alliance, support, help in fights. When you get men and women cooperating, particularly in the human evolutionary line, you are trading those different things. Women still want childcare. I would like you to help me raise our children, but the man is there because he basically wants to have sex and produce some more children with her. You\u2019re trading sex for childcare.\n So those are two different currencies. Your brain is having to do a currency calculation. And when we look at the way the brain has evolved, we see the development of cognitive architecture that enables you to start doing those more complex calculations. So cross-sex cooperation is so much harder at the fundamental level than cooperating within your sex.\n You say there\u2019s a difference between how mothers and fathers form attachment to their kids. How so?\n Attachment is a deep, psychological bond between two people. A mother\u2019s attachment is based purely on nurture. The strength of that attachment will be based upon the sensitive and positive way she nurtures that child. For a father, nurture is important, but there\u2019s an added element that comes from the cortical area of the brain. That\u2019s the bit saying, \u201cOK, I\u2019m going to push your developmental boundaries. I\u2019m going to make you more resilient. I\u2019m going to push you into the world beyond the family.\u201d What joins all fathers around the world is they have this role in scaffolding the child\u2019s entry into the social world. That\u2019s the underpinning of what they\u2019re involved in developmentally.\n People can sometimes find that difficult because they\u2019re like, \u201cWell, those are just culturally gendered roles.\u201d Yes, you can argue that, but it also has an evolutionary explanation, which is the fact that evolution doesn\u2019t do redundancy. It doesn\u2019t cause two individuals who have input into something to have the same role if that\u2019s not required because that\u2019s just a waste of energy. Bear in mind that human children take a huge amount of emotional, cognitive, and practical input to raise. So it\u2019s important that the parents fit together well and give that developmental environment.\n  What happens is we see changes in the brains of a single parent or a parent in a same-sex couple. The human brain is incredibly plastic. All parents have the ability to nurture, to challenge, to build resilience. We see changes that enable the brain in a single individual to behave in ways like a mom or dad. If we look at say, the Aka people in the Congo, where the fathers spend about 60 percent of their time in physical contact with their children, you will see a different way of parenting. As with everything, some parenting is biological, and some is environmental and contextual. What we found universally with men is they have a role in building resilience in pushing their child into the world, but they do that in a culturally specific way. It depends on the environmental context of what that world is.\n You\u2019re only driven to cooperate with the opposite sex when you\u2019ve exhausted your own.\n  Let\u2019s say you had a secure attachment to your parents when you\u2019re a child. That means you had sensitive parenting, they were aware of your emotional and physical needs, and met those needs. You were secure, you did not suffer anxiety, you did not suffer abandonment. That\u2019s bathing your brain in oxytocin and dopamine and beta endorphin, and you\u2019re producing low levels of cortisol, you\u2019re producing this highly efficient brain, you\u2019re not going to see neuronal death, which is what happens with neglect. When you go forward, you\u2019re going to have the biological underpinnings and the psychological underpinnings to be able to build good attachments, to build healthy relationships, and know when a relationship is not healthy for you, in which case you should leave.\n Unfortunately, the opposite happens. We see brains bathed in a high degree of cortisol. We see active neuronal death, which means you see reductions in gray and white matter in those pro-social areas of the brain. They do not go forward with those abilities to do all that, to do the reciprocity, the trust, the empathy. The behavior they have watched, which is relationship behavior, is not good and that\u2019s something that they will replicate going forward. But they also do not have the powerful biological underpinnings to enable them to be able to have good relationships.\n You say we underestimate the love that comes from friendships. That might be starting to change. There was a widely read article in   The Atlantic  recently that touched on this titled, \u201cIt\u2019s Your Friends That Break Your Heart: The older we get, the more we need our friends and the harder it is to keep them.\u201d How does that headline strike you?\n We tend to privilege romantic relationships and maybe parental relationships, but we take our friendships for granted. But they are incredibly important to you. They are the only platonic relationships you get to choose yourself. You don\u2019t get to choose your family but you get to actively choose your friends. In fact, our research shows that you are much more similar to your friends than you are to your lover. If you\u2019re a woman, you are more emotionally intimate with your friends than you are with your lover. If you\u2019re a man, your friends bring this ease of being able to really be you.\n So our friends provide a lot to us. And we neglect our friendships at our peril because often our friendships outlast our romantic relationships, and they are the ones that are really your stable foundation. You need them in your life for your mental health, your physical health, for your longevity, and your well-being. But I do think we underestimate them. I interview so many people for my research, and particularly when I interview British people, I\u2019ll ask them, \u201cDo you love your friends?\u201d And they\u2019ll go, \u201cHmmm, I don\u2019t know whether I love them.\u201d And then I\u2019ll say, \u201cWell, do you love your dog?\u201d \u201cOh God, yeah! I love my dog.\u201d And it\u2019s just this thing that we don\u2019t consider the fact that we could love our friends. And I think that\u2019s maybe a peculiarly British thing that\u2019s quite restrained that we wouldn\u2019t admit that.\n The philosopher Alain de Botton has argued that romanticism has severely distorted how people think about love and what to expect from it. What do you think of that?\n I agree with him. The narrative is unhelpful. This idea of the chivalrous prince rescuing his princess from a castle. It sets up an incredibly idealistic view and very gendered view of what romantic love is, which doesn\u2019t reflect the reality for most people. The idea that there is  the one\u2014well, we can quite clearly tell from the inputs that go into what attracts people that there\u2019s more than one person in the world for you. Also, from an anthropological and sociological point of view, it\u2019s a narrative that works for society because it\u2019s a controlled narrative: We can have everybody pairing up with one other person and we set in place all these rules. We have these zero-sum ideas of love. But the idea of romantic love doesn\u2019t reflect the reality of people\u2019s existence, particularly with increasing singledom. The idea that romantic love is the most powerful love is unhelpful because it demotes all the other ways that you can love in your life. And none of them are weaker than romantic love, but we seem to think that they\u2019re not as good. They\u2019re not as important.\n The narrative also doesn\u2019t help people get out of abusive relationships. If you tell a child that love is like a fairy tale, you\u2019ll get swept off your feet, that love lasts against all odds and will help get over any hurdle, that doesn\u2019t help in the context of abuse. It leads to the idea that you have no control over this person that is abusing you. When you do. So it\u2019s a really unhelpful narrative. And it\u2019s a narrative that\u2019s spun mostly today by commerce. You can have the perfect wedding with your soulmate. That\u2019s the be-all-and-end-all of life. I sound cynical, but I completely agree that romantic love is not a helpful narrative.\n  It hasn\u2019t affected it in a negative way at all. People say, \u201cWell, it must have been because you spend your life in cold science, analyzing what love is.\u201d I think if that\u2019s all I did, I think it would. I think if you reduced it constantly to a set of neurochemicals or a genetic driver, I think maybe you would. But because I do it from an anthropological perspective, and spend a lot of time talking to people about their love, I just find love an amazing phenomenon. The more I study it, the more in awe I am of its complexity in the human species.", "posttime": "2022-02-17 10:39:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u7269,biological,\u5927\u8111", "title": "\u7231\u662f\u751f\u7269\u8d3f\u8d42\uff1f", "title_en": "Love is biological bribery?", "transed": 1, "url": "https://nautil.us/love-is-biological-bribery-14058/", "via": "", "real_tags": ["\u751f\u7269", "\u5927\u8111"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073790, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e86\u89e3\u5927\u8111\u5982\u4f55\u5b66\u4e60\u53ef\u80fd\u4f1a\u5bfc\u81f4\u673a\u5668\u5177\u6709\u4eba\u7c7b\u4e00\u6837\u7684\u667a\u80fd\u80fd\u529b\u3002\u6b64\u524d\u6709\u4eba\u63d0\u51fa\uff0c\u5927\u8111\u53ef\u4ee5\u6839\u636e\u9884\u6d4b\u7f16\u7801\u7684\u539f\u7406\u8fd0\u4f5c\u3002\u7136\u800c\uff0c\u9884\u6d4b\u7cfb\u7edf\u662f\u5982\u4f55\u5728\u5927\u8111\u4e2d\u5b9e\u73b0\u7684\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u5355\u4e2a\u795e\u7ecf\u5143\u9884\u6d4b\u5176\u672a\u6765\u6d3b\u52a8\u7684\u80fd\u529b\u53ef\u80fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u5b66\u4e60\u673a\u5236\u3002\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u79cd\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\u53ef\u4ee5\u4ece\u4ee3\u8c22\u539f\u7406\u4e2d\u63a8\u5bfc\u51fa\u6765\uff0c\u6839\u636e\u4ee3\u8c22\u539f\u7406\uff0c\u795e\u7ecf\u5143\u9700\u8981\u6700\u5c0f\u5316\u81ea\u8eab\u7684\u7a81\u89e6\u6d3b\u52a8\uff08\u6210\u672c\uff09\uff0c\u540c\u65f6\u901a\u8fc7\u62db\u52df\u5176\u4ed6\u795e\u7ecf\u5143\u6765\u6700\u5927\u5316\u5bf9\u5c40\u90e8\u8840\u6db2\u4f9b\u5e94\u7684\u5f71\u54cd\u3002\u6211\u4eec\u5c55\u793a\u4e86\u8fd9\u79cd\u6570\u5b66\u63a8\u5bfc\u7684\u5b66\u4e60\u89c4\u5219\u5982\u4f55\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u5927\u8111\u542f\u53d1\u7b97\u6cd5\u4e4b\u95f4\u63d0\u4f9b\u7406\u8bba\u8054\u7cfb\uff0c\u4ece\u800c\u4e3a\u795e\u7ecf\u5143\u5b66\u4e60\u7684\u4e00\u822c\u7406\u8bba\u7684\u53d1\u5c55\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6b65\u9aa4\u3002\u6211\u4eec\u5728\u795e\u7ecf\u7f51\u7edc\u6a21\u62df\u548c\u6e05\u9192\u52a8\u7269\u8bb0\u5f55\u7684\u6570\u636e\u4e2d\u6d4b\u8bd5\u4e86\u8fd9\u79cd\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\u3002\u6211\u4eec\u7684\u7ed3\u679c\u8fd8\u8868\u660e\uff0c\u81ea\u53d1\u7684\u5927\u8111\u6d3b\u52a8\u4e3a\u795e\u7ecf\u5143\u5b66\u4e60\u9884\u6d4b\u76ae\u8d28\u52a8\u529b\u5b66\u63d0\u4f9b\u4e86\u201c\u8bad\u7ec3\u6570\u636e\u201d\u3002\u56e0\u6b64\uff0c\u5355\u4e2a\u795e\u7ecf\u5143\u5c06\u60ca\u559c\u6700\u5c0f\u5316\u7684\u80fd\u529b\uff0c\u5373\u5b9e\u9645\u6d3b\u52a8\u548c\u9884\u671f\u6d3b\u52a8\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u53ef\u80fd\u662f\u7406\u89e3\u5927\u8111\u4e2d\u8ba1\u7b97\u7684\u4e00\u4e2a\u91cd\u8981\u7f3a\u5931\u5143\u7d20\u3002\n\u795e\u7ecf\u79d1\u5b66\u6b63\u5904\u4e8e\u751f\u7269\u5b66\u5728\u8fbe\u5c14\u6587\u4e4b\u524d\u7684\u9636\u6bb5\u3002\u5b83\u6709\u65e0\u6570\u8be6\u7ec6\u7684\u89c2\u5bdf\u7ed3\u679c\uff0c\u4f46\u6ca1\u6709\u5355\u4e00\u7684\u7406\u8bba\u89e3\u91ca\u6240\u6709\u8fd9\u4e9b\u89c2\u5bdf\u7ed3\u679c\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u6211\u4eec\u751a\u81f3\u4e0d\u77e5\u9053\u8fd9\u6837\u7684\u5927\u8111\u7406\u8bba\u5e94\u8be5\u662f\u5728\u5206\u5b50\u6c34\u5e73\u4e0a\uff0c\u8fd8\u662f\u5728\u5927\u8111\u533a\u57df\u7684\u6c34\u5e73\u4e0a\uff0c\u6216\u8005\u5728\u4e24\u8005\u4e4b\u95f4\u7684\u4efb\u4f55\u5c3a\u5ea6\u4e0a\u3002\u7136\u800c\uff0c\u6df1\u5165\u7814\u7a76\u5728\u764c\u75c7\u68c0\u6d4b\u5230\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7b49\u4efb\u52a1\u4e2d\u53d6\u5f97\u663e\u8457\u6210\u679c\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4f1a\u63d0\u4f9b\u6709\u7528\u7684\u89c1\u89e3\u3002\u5c3d\u7ba1\u8fd9\u7c7b\u7f51\u7edc\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u8f93\u5165\u548c\u7ed3\u6784\uff0c\u4f46\u5b83\u4eec\u7684\u5927\u591a\u6570\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u884c\u4e3a\u90fd\u53ef\u4ee5\u901a\u8fc7\u5e95\u5c42\u7684\u901a\u7528\u5b66\u4e60\u7b97\u6cd5\uff08\u79f0\u4e3a\u53cd\u5411\u4f20\u64ad1\uff09\u6765\u7406\u89e3\u3002\n\u56e0\u6b64\uff0c\u66f4\u597d\u5730\u7406\u89e3\u5927\u8111\u4f7f\u7528\u7684\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u662f\u53d1\u5c55\u7edf\u4e00\u7684\u5927\u8111\u529f\u80fd\u7406\u8bba\u7684\u6838\u5fc3\u3002\u6709\u4e24\u79cd\u4e3b\u8981\u7684\u65b9\u6cd5\u6765\u7814\u7a76\u5927\u8111\u4e2d\u7684\u5b66\u4e60\u673a\u5236\uff1a\uff081\uff09\u5b9e\u9a8c\u6027\u7684\uff0c\u795e\u7ecf\u5143\u6d3b\u52a8\u7684\u6301\u7eed\u53d8\u5316\u662f\u7531\u7279\u5b9a\u7684\u5e72\u9884\u5f15\u8d77\u7684\uff1b\uff082\uff09\u8ba1\u7b97\u6027\u7684\uff0c\u7b97\u6cd5\u7684\u5f00\u53d1\u662f\u4e3a\u4e86\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u76ee\u6807\uff0c\u540c\u65f6\u4ecd\u7136\u6ee1\u8db3\u9009\u5b9a\u7684\u751f\u7269\u7ea6\u675f3,4\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u53e6\u4e00\u4e2a\u9009\u9879\u2014\uff083\uff09\u7406\u8bba\u63a8\u5bfc\uff0c\u5176\u4e2d\u5b66\u4e60\u89c4\u5219\u6e90\u81ea\u57fa\u672c\u7684\u7ec6\u80de\u539f\u7406\uff0c\u5373\u6700\u5927\u5316\u7ec6\u80de\u7684\u4ee3\u8c22\u80fd\u91cf\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u5927\u5316\u795e\u7ecf\u5143\u7684\u80fd\u91cf\u5e73\u8861\u4f1a\u4ea7\u751f\u4e00\u79cd\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\uff0c\u5728\u8fd9\u79cd\u89c4\u5219\u4e2d\uff0c\u795e\u7ecf\u5143\u4f1a\u8c03\u6574\u5176\u7a81\u89e6\u6743\u91cd\uff0c\u4ee5\u6700\u5c0f\u5316\u60ca\u559c\uff0c\u5373\u5b9e\u9645\u6d3b\u52a8\u548c\u9884\u6d4b\u6d3b\u52a8\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u79cd\u884d\u751f\u7684\u5b66\u4e60\u89c4\u5219\u4e0e\u4e00\u4e9b\u6700\u6709\u524d\u9014\u7684\u751f\u7269\u542f\u53d1\u5b66\u4e60\u7b97\u6cd5\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u6bd4\u5982\u9884\u6d4b\u7f16\u7801\u548c\u65f6\u95f4\u5dee\u5206\u5b66\u4e60\uff08\u89c1\u4e0b\u6587\uff09\uff0c\u57fa\u4e8eHebbian\u7684\u89c4\u5219\u53ef\u4ee5\u88ab\u89c6\u4e3a\u6211\u4eec\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u7684\u7279\u4f8b\uff08\u8ba8\u8bba\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u80fd\u5728\u591a\u4e2a\u5927\u8111\u542f\u53d1\u7b97\u6cd5\u4e4b\u95f4\u63d0\u4f9b\u7406\u8bba\u8054\u7cfb\uff0c\u5e76\u53ef\u80fd\u4e3a\u795e\u7ecf\u5143\u5b66\u4e60\u7684\u7edf\u4e00\u7406\u8bba\u7684\u53d1\u5c55\u63d0\u4f9b\u4e00\u4e2a\u6b65\u9aa4\u3002\n\u6709\u591a\u6761\u8bc1\u636e\u8868\u660e\uff0c\u5927\u8111\u4f5c\u4e3a\u4e00\u4e2a\u9884\u6d4b\u7cfb\u7edf\u8fd0\u884c5\u30016\u30017\u30018\u30019\u300110\u3002\u7136\u800c\uff0c\u5982\u4f55\u5728\u5927\u8111\u4e2d\u5b9e\u73b0\u7cbe\u786e\u7684\u9884\u6d4b\u7f16\u7801\u4ecd\u7136\u5b58\u5728\u4e89\u8bae\u3002\u5927\u591a\u6570\u63d0\u51fa\u7684\u673a\u5236\u90fd\u6d89\u53ca\u4e13\u95e8\u8bbe\u8ba1\u7684\u5e26\u6709\u201c\u9519\u8bef\u5355\u5143\u201d\u7684\u795e\u7ecf\u5143\u7535\u8def\uff0c\u4ee5\u4fbf\u6bd4\u8f83\u9884\u671f\u548c\u5b9e\u9645\u6d3b\u52a811\u300112\u300113\u300114\u3002\u8fd9\u4e9b\u6a21\u578b\u5047\u8bbe\u4e86\u4e00\u4e2a\u9884\u6d4b\u7535\u8def\uff0c\u4f46\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\uff0c\u5373\u5728\u795e\u7ecf\u5143\u5185\u6709\u4e00\u4e2a\u5185\u90e8\u9884\u6d4b\u6a21\u578b\u3002\u7531\u4e8e\u795e\u7ecf\u5143\u7684\u8bb8\u591a\u57fa\u672c\u5c5e\u6027\u5728\u6574\u4e2a\u8fdb\u5316\u8fc7\u7a0b\u4e2d\u9ad8\u5ea6\u4fdd\u5b8815\u300116\u300117\uff0c\u6211\u4eec\u8ba4\u4e3a\uff0c\u4f7f\u7528\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\u7684\u5355\u4e2a\u795e\u7ecf\u5143\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u57fa\u672c\u5355\u5143\uff0c\u4ece\u4e2d\u53ef\u4ee5\u6784\u5efa\u5404\u79cd\u9884\u6d4b\u6027\u5927\u8111\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u7684\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u65f6\u95f4\u5dee\u5206\u5b66\u4e60\u7b97\u6cd5\u6765\u83b7\u5f97\uff0c\u4f7f\u5176\u5728\u751f\u7269\u5b66\u4e0a\u66f4\u5408\u7406\u3002\u5173\u4e8e\u5982\u4f55\u5728\u5927\u8111\u4e2d\u5b9e\u73b0\u7c7b\u4f3c\u53cd\u5411\u4f20\u64ad\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u5dee\u5206\u5b66\u4e60\u662f\u6700\u6709\u524d\u9014\u7684\u60f3\u6cd5\u4e4b\u4e00\u3002\u5b83\u57fa\u4e8e\u795e\u7ecf\u5143\u6d3b\u52a8\u7684\u5dee\u5f02\u6765\u8fd1\u4f3c\u81ea\u4e0a\u800c\u4e0b\u7684\u9519\u8bef\u4fe1\u53f74\u300118\u300119\u300120\u300121\u300122\u300123\u300124\u3002\u8fd9\u79cd\u7b97\u6cd5\u7684\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u662f\u5bf9\u6bd4Hebbian\u5b66\u4e6025\u300126\u300127\uff0c\u5728\u67d0\u4e9b\u5047\u8bbe28\u4e0b\uff0c\u8fd9\u88ab\u8bc1\u660e\u76f8\u5f53\u4e8e\u53cd\u5411\u4f20\u64ad\u3002\u5bf9\u6bd4\u8d6b\u5e03\u5f0f\u5b66\u4e60\u8981\u6c42\u7f51\u7edc\u5728\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u5177\u6709\u76f8\u4e92\u8054\u7cfb\uff0c\u8fd9\u5141\u8bb8\u6d3b\u52a8\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u4f20\u64ad\uff08\u56fe1a\uff09\u3002\u5b66\u4e60\u5305\u62ec\u4e24\u4e2a\u72ec\u7acb\u7684\u9636\u6bb5\u3002\u9996\u5148\uff0c\u5728\u201c\u81ea\u7531\u9636\u6bb5\u201d\uff0c\u4e00\u4e2a\u6837\u672c\u523a\u6fc0\u6301\u7eed\u5448\u73b0\u7ed9\u8f93\u5165\u5c42\uff0c\u6d3b\u52a8\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\uff0c\u76f4\u5230\u52a8\u529b\u5b66\u6536\u655b\u5230\u5e73\u8861\uff08\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u8fbe\u5230\u7a33\u6001\u6c34\u5e73\uff09\u3002\u5728\u7b2c\u4e8c\u4e2a\u201c\u94b3\u5236\u9636\u6bb5\u201d\uff0c\u9664\u4e86\u5411\u8f93\u5165\u5448\u73b0\u523a\u6fc0\u5916\uff0c\u8f93\u51fa\u795e\u7ecf\u5143\u4e5f\u88ab\u94b3\u5236\u5728\u4ee3\u8868\u523a\u6fc0\u7c7b\u522b\u7684\u503c\u4e0a\uff08\u4f8b\u5982\uff0c0\u62161\uff09\uff0c\u7f51\u7edc\u518d\u6b21\u88ab\u5141\u8bb8\u6536\u655b\u5230\u5e73\u8861\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u94b3\u5236\uff08\\\uff08{hat{x}}\\\uff09\u548c\u81ea\u7531\uff08\\\uff08{check{x}}\\\uff09\u9636\u6bb5\u7684\u6d3b\u52a8\u4e4b\u95f4\u7684\u5dee\u5f02\u7528\u4e8e\u6839\u636e\u65b9\u7a0b\u5f0f\u4fee\u6539\u7a81\u89e6\u91cd\u91cf\uff08w\uff09\n\u5176\u4e2di\u548cj\u5206\u522b\u662f\u7a81\u89e6\u524d\u548c\u7a81\u89e6\u540e\u795e\u7ecf\u5143\u7684\u6307\u6570\uff0c\u03b1\u662f\u4ee3\u8868\u5b66\u4e60\u7387\u7684\u4e00\u4e2a\u5c0f\u6570\u5b57\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u8fd9\u53ef\u4ee5\u88ab\u89c6\u4e3a\u8c03\u6574\u6743\u91cd\uff0c\u4f7f\u81ea\u7531\u671f\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u66f4\u63a5\u8fd1\u94b3\u5236\u671f\u6240\u4ee3\u8868\u7684\u671f\u671b\u6d3b\u52a8\u3002\u8fd9\u79cd\u7b97\u6cd5\u660e\u663e\u7684\u751f\u7269\u5b66\u5408\u7406\u6027\u95ee\u9898\u662f\uff0c\u5b83\u8981\u6c42\u795e\u7ecf\u5143\u5728\u4e24\u4e2a\u4e0d\u540c\u9636\u6bb5\u7ecf\u5386\u4e24\u6b21\u5b8c\u5168\u76f8\u540c\u7684\u523a\u6fc0\uff0c\u5e76\u4e14\u795e\u7ecf\u5143\u9700\u8981\u201c\u8bb0\u4f4f\u201d\u524d\u4e00\u9636\u6bb5\u7684\u6d3b\u52a8\u3002\u6211\u4eec\u7684\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u901a\u8fc7\u9884\u6d4b\u81ea\u7531\u76f8\u7a33\u6001\u6d3b\u52a8\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u5bf9\u4e24\u4e2a\u5355\u72ec\u523a\u6fc0\u5448\u73b0\u7684\u8981\u6c42\u3002\na\u3001 \u7f51\u7edc\u793a\u610f\u56fe\u3002\u8bf7\u6ce8\u610f\uff0c\u6d3b\u52a8\u5728\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u6765\u56de\u4f20\u64ad\u3002b\u3001 \u5728\u81ea\u7531\u671f\u5bf9\u4e0d\u540c\u523a\u6fc0\uff08\u4ee5\u84dd\u8272\u9634\u5f71\u6807\u8bb0\uff09\u505a\u51fa\u53cd\u5e94\u7684\u795e\u7ecf\u5143\u6d3b\u52a8\u6837\u672c\u3002\u81ea\u7531\u76f8\u54cd\u5e94\u7528\u4e8e\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\uff0c\u4ee5\u6839\u636e\u65e9\u671f\u65f6\u95f4\u6b65\u7684\u6d3b\u52a8\u9884\u6d4b\u7a33\u6001\u6d3b\u52a8\uff08\u7528\u9634\u5f71\u533a\u57df\u6807\u8bb0\uff1b\u8be6\u60c5\u89c1\u6b63\u6587\uff09\u3002\u5e95\u90e8\u7684\u8f68\u8ff9\u663e\u793a\u8f93\u5165\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u70b9\u8868\u793a\u9884\u6d4b\u7684\u6d3b\u52a8\u3002c\u3001 \u795e\u7ecf\u5143\u5728\u7f51\u7edc\u8f93\u51fa\u88ab\u94b3\u5236\u7684\u60c5\u51b5\u4e0b\u5bf9\u65b0\u523a\u6fc0\u4f5c\u51fa\u53cd\u5e94\u7684\u6d3b\u52a8\u3002\u6700\u521d\uff0c\u7f51\u7edc\u53ea\u63a5\u6536\u8f93\u5165\u4fe1\u53f7\uff08\u81ea\u7531\u76f8\u4f4d\uff09\uff0c\u4f46\u7ecf\u8fc7\u51e0\u6b65\u4e4b\u540e\uff0c\u8f93\u51fa\u4fe1\u53f7\u4e5f\u4f1a\u51fa\u73b0\uff08\u94b3\u5236\u76f8\u4f4d\uff0c\u5e95\u90e8\u9ed1\u8272\u8f68\u8ff9\uff09\u3002\u7ea2\u70b9\u4ee3\u8868\u4ece\u521d\u59cb\u6d3b\u52a8\uff08\u9634\u5f71\u533a\u57df\uff09\u9884\u6d4b\u7684\u7a33\u6001\u81ea\u7531\u76f8\u6d3b\u52a8\u3002\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u865a\u7ebf\u663e\u793a\u4e86\u5728\u8f93\u51fa\u672a\u88ab\u94b3\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u795e\u7ecf\u5143\u5728\u81ea\u7531\u671f\u7684\u6d3b\u52a8\u3002\u7a81\u89e6\u91cd\u91cf\uff08w\uff09\u6839\u636e\u94b3\u5236\u671f\u7684\u7a33\u6001\u6d3b\u52a8\uff08\\\uff08{hat{x}}\\\uff09\u548c\u9884\u6d4b\u7684\u81ea\u7531\u671f\u6d3b\u52a8\uff08\\\uff08{tilde{x}}\\\uff09\u4e4b\u95f4\u7684\u5dee\u5f02\u6210\u6bd4\u4f8b\u8c03\u6574\u3002\n\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u9996\u5148\u6211\u4eec\u5c06\u63cf\u8ff0\u5982\u4f55\u901a\u8fc7\u4fee\u6539\u5bf9\u6bd4Hebbian\u5b66\u4e60\u7b97\u6cd5\u6765\u83b7\u5f97\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5728\u6a21\u62df\u548c\u6e05\u9192\u52a8\u7269\u8bb0\u5f55\u7684\u6570\u636e\u4e2d\u9a8c\u8bc1\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\uff0c\u5e76\u5c55\u793a\u6211\u4eec\u7684\u7ed3\u679c\u5982\u4f55\u4e3a\u81ea\u53d1\u6d3b\u52a8\u7684\u529f\u80fd\u63d0\u4f9b\u65b0\u7684\u542f\u793a\u3002\u6700\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u901a\u8fc7\u6700\u5927\u5316\u795e\u7ecf\u5143\u80fd\u91cf\u5e73\u8861\u6765\u63a8\u5bfc\u5b66\u4e60\u89c4\u5219\u7684\u8fc7\u7a0b\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u5bf9\u6bd4Hebbian\u5b66\u4e60\u7b97\u6cd5\u8981\u6c42\u7f51\u7edc\u5728\u4e24\u4e2a\u72ec\u7acb\u7684\u5b66\u4e60\u9636\u6bb5\u6536\u655b\u5230\u7a33\u6001\u5e73\u8861\uff0c\u56e0\u6b64\u5fc5\u987b\u4e24\u6b21\u5448\u73b0\u5b8c\u5168\u76f8\u540c\u7684\u523a\u6fc0\u3002\u7136\u800c\uff0c\u5b9e\u9645\u5927\u8111\u4e2d\u4e0d\u592a\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5efa\u8bae\u901a\u8fc7\u5c06\u4e24\u4e2a\u6d3b\u52a8\u9636\u6bb5\u5408\u5e76\u4e3a\u4e00\u4e2a\u9636\u6bb5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u662f\u53d7\u5230\u76ae\u5c42\u611f\u89c9\u5904\u7406\u7684\u542f\u53d1\u3002\u4f8b\u5982\uff0c\u5728\u89c6\u89c9\u533a\u57df\u4e2d\uff0c\u5f53\u5448\u73b0\u4e00\u5f20\u65b0\u56fe\u7247\u65f6\uff0c\u6700\u521d\u4f1a\u6709\u81ea\u4e0b\u800c\u4e0a\u7684\u9a71\u52a8\u6d3b\u52a8\uff0c\u5176\u4e2d\u4e3b\u8981\u5305\u542b\u523a\u6fc0\u7684\u89c6\u89c9\u5c5e\u6027\uff08\u4f8b\u5982\u8f6e\u5ed3\uff09\u3002\u968f\u540e\u662f\u5305\u542b\u66f4\u591a\u62bd\u8c61\u4fe1\u606f\u7684\u81ea\u4e0a\u800c\u4e0b\u8c03\u5236\uff0c\u4f8b\u5982\u201c\u8be5\u5bf9\u8c61\u662f\u7c7b\u522bx\u7684\u6210\u5458\u201d\u6216\u201c\u8be5\u5bf9\u8c61\u662f\u65b0\u9896\u7684\u201d\uff08\u8865\u5145\u56fe1\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u9996\u5148\u53ea\u8fd0\u884c\u81ea\u7531\u9636\u6bb5\u7684\u521d\u59cb\u90e8\u5206\uff0c\u8fd9\u4ee3\u8868\u4e86\u81ea\u4e0b\u800c\u4e0a\u7684\u523a\u6fc0\u9a71\u52a8\u6d3b\u52a8\uff0c\u7136\u540e\uff0c\u7ecf\u8fc7\u51e0\u6b65\u4e4b\u540e\uff0c\u7f51\u7edc\u8f93\u51fa\u88ab\u94b3\u5236\uff0c\u5bf9\u5e94\u4e8e\u81ea\u4e0a\u800c\u4e0b\u7684\u8c03\u5236\u3002\n\u8fd9\u91cc\u7684\u65b0\u89c1\u89e3\u662f\uff0c\u521d\u59cb\u81ea\u5e95\u5411\u4e0a\u7684\u6d3b\u52a8\u8db3\u4ee5\u8ba9\u795e\u7ecf\u5143\u9884\u6d4b\u81ea\u7531\u76f8\u6d3b\u52a8\u7684\u7a33\u6001\u90e8\u5206\uff0c\u5e76\u4e14\u9884\u6d4b\u7684\u81ea\u7531\u76f8\u548c\u94b3\u5236\u76f8\u4e4b\u95f4\u7684\u5931\u914d\u53ef\u4ee5\u7528\u4f5c\u6559\u5b66\u4fe1\u53f7\u3002\u4e3a\u4e86\u5728\u6211\u4eec\u7684\u6a21\u578b\u4e2d\u5b9e\u73b0\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5728\u81ea\u7531\u671f\u768412\u4e2a\u521d\u59cb\u65f6\u95f4\u6b65\uff08\\\uff08{check{x}{u{\uff081\uff09}\\\uff09\u5185\u7684\u6d3b\u52a8\uff0c\u2009...,\u2009 \\\uff08{check{x}{\uff0812\uff09}}\\\uff09\u7528\u4e8e\u9884\u6d4b\u5176\u5728\u65f6\u95f4\u6b65120\u7684\u7a33\u6001\u6d3b\u52a8\uff0c\\\uff08{check{x}{\uff08120\uff09}\\\uff09\uff08\u56fe1b\uff09\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u9996\u5148\u63d0\u51fa\u4e86\u81ea\u7531\u9636\u6bb5\u7684\u6837\u672c\u523a\u6fc0\u6765\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\uff0c\u4f8b\u5982\\\uff08{check{x}{\uff08120\uff09}\\approx{tilde{x}={\\lambda{\uff081\uff09}\\check{x}{\uff081\uff09}\uff0c+\\ldots+\\lambda{\uff0812\uff09}\\check{x}{\uff0812\uff09{b}\uff09\uff0c\u5176\u4e2d\\\uff08{tilde{x}\uff09\u8868\u793a\u9884\u6d4b\u7684\u6d3b\u52a8\uff0c\u03bb\u548cb\u5bf9\u5e94\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6a21\u578b\u7684\u7cfb\u6570\u548c\u504f\u79fb\u9879\uff0c\u62ec\u53f7\u4e2d\u7684\u9879\u5bf9\u5e94\u4e8e\u65f6\u95f4\u6b65\u957f\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u4e00\u7ec4\u65b0\u7684\u523a\u6fc0\u7269\uff0c\u4ec5\u5728\u524d12\u4e2a\u6b65\u9aa4\u4e2d\u8fd0\u884c\u81ea\u7531\u76f8\uff0c\u5e76\u4ece\u6b65\u9aa413\u5f00\u59cb\u94b3\u5236\u7f51\u7edc\u8f93\u51fa\uff08\u56fe1c\uff09\u3002\u7136\u540e\u5e94\u7528\u4e0a\u8ff0\u6700\u5c0f\u4e8c\u4e58\u6a21\u578b\u9884\u6d4b\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u81ea\u7531\u76f8\u7a33\u6001\u6d3b\u52a8\uff0c\u5e76\u6839\u636e\u9884\u6d4b\u548c\u94b3\u5236\u6d3b\u52a8\u4e4b\u95f4\u7684\u5dee\u5f02\u66f4\u65b0\u6743\u91cd\uff08\u65b9\u6cd5\uff09\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fee\u6539\u7a81\u89e6\u91cd\u91cf\uff0c\u5728\u65b9\u7a0b\u5f0f\uff081\uff09\u4e2d\uff0c\u6211\u4eec\u7528\u9884\u6d4b\u7684\u6d3b\u52a8\uff08\\\uff08{tilde{x}}\\\uff09\u66ff\u6362\u81ea\u7531\u671f\u7684\u6d3b\u52a8\uff1a\n\u7136\u800c\uff0c\u95ee\u9898\u662f\uff0c\u8fd9\u4e2a\u7b49\u5f0f\u610f\u5473\u7740\u4e00\u4e2a\u795e\u7ecf\u5143\u8fd8\u9700\u8981\u77e5\u9053\u5176\u6240\u6709\u7a81\u89e6\u524d\u795e\u7ecf\u5143\u7684\u9884\u6d4b\u6d3b\u52a8\uff08\\\uff08{tilde{x}{i}\\\uff09\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7528\u94b3\u5236\u9636\u6bb5\u7684\u5b9e\u9645\u7a81\u89e6\u524d\u6d3b\u52a8\uff08\\\uff08{hat{x}{i}}\uff09\u4ee3\u66ff\uff08\\\uff08{tilde{x}}{i}]\uff09\uff0c\u6211\u4eec\u5728\u7f51\u7edc\u6a21\u62df\u4e2d\u9a8c\u8bc1\u4e86\u8fd9\u4e00\u70b9\uff08\u89c1\u4e0b\u4e00\u8282\uff09\u3002\u8fd9\u79cd\u53d8\u5316\u5bfc\u81f4\u4ee5\u4e0b\u7b80\u5316\u7684\u7a81\u89e6\u53ef\u5851\u6027\u89c4\u5219\uff08\u65b9\u7a0b\u5f0f\uff083\uff09\uff09\uff1a\n$${\\Delta{w}{ij}={\\alpha\uff08{\\hat{x}}{i}}{\\hat{x}}{j}-{\\hat{x}{i}{i}{\\tilde{x}{j}}}={\\alpha{hat{x}{i}{j}{$$\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fee\u6539\u7a81\u89e6\u6743\u91cd\uff0c\u795e\u7ecf\u5143\u53ea\u4f1a\u5c06\u5176\u5b9e\u9645\u6d3b\u52a8\uff08\\\uff08{hat{x}{j}\uff09\u4e0e\u5176\u9884\u6d4b\u6d3b\u52a8\uff08\\\uff08{tilde{x}{uj}\uff09\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u5c06\u6b64\u5dee\u5f02\u6309\u6bd4\u4f8b\u5e94\u7528\u4e8e\u6bcf\u4e2a\u8f93\u5165\u8d21\u732e\uff08\\\uff08{hat{x}{uj}]\uff09\u3002\n\u4e3a\u4e86\u6d4b\u8bd5\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u662f\u5426\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u6807\u51c6\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4ee5\u4e0b\u6a21\u62df\u3002\u8be5\u795e\u7ecf\u7f51\u7edc\u6709784\u4e2a\u8f93\u5165\u5355\u5143\u30011000\u4e2a\u9690\u85cf\u5355\u5143\u548c10\u4e2a\u8f93\u51fa\u5355\u5143\uff0c\u5e76\u5728\u624b\u5199\u6570\u5b57\u8bc6\u522b\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff08MNIST 29\uff1b\u8865\u5145\u56fe2\u548c\u65b9\u6cd5\uff09\u3002\u8be5\u7f51\u7edc\u5b9e\u73b0\u4e861.9%\u7684\u9519\u8bef\u7387\uff0c\u8fd9\u4e0e\u4f7f\u7528\u53cd\u5411\u4f20\u64ad\u7b97\u6cd529\u8bad\u7ec3\u7684\u5177\u6709\u7c7b\u4f3c\u7ed3\u6784\u7684\u795e\u7ecf\u7f51\u7edc\u76f8\u4f3c\u3002\u8fd9\u8868\u660e\uff0c\u5177\u6709\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u7684\u7f51\u7edc\u53ef\u4ee5\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u975e\u7ebf\u6027\u5206\u7c7b\u4efb\u52a1\u3002\n\u4e3a\u4e86\u9a8c\u8bc1\u795e\u7ecf\u5143\u80fd\u591f\u6b63\u786e\u9884\u6d4b\u672a\u6765\u7684\u81ea\u7531\u76f8\u6d3b\u52a8\uff0c\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e86\u6837\u672c\u795e\u7ecf\u5143\u3002\u56fe2a\u663e\u793a\u4e86\u5728\u7b2c\u4e00\u6b21\u8bad\u7ec3\u540e\uff0c\u6240\u6709\u5341\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u5bf9\u6837\u672c\u6570\u5b57\u56fe\u50cf\u7684\u53cd\u5e94\u3002\u5728\u65f6\u95f4\u6b65\u957f1\u201312\u671f\u95f4\uff0c\u4ec5\u663e\u793a\u8f93\u5165\u4fe1\u53f7\uff0c\u7f51\u7edc\u5728\u7a7a\u95f2\u9636\u6bb5\u8fd0\u884c\u3002\u5728\u65f6\u95f4\u6b6513\uff0c\u8f93\u51fa\u795e\u7ecf\u5143\u88ab\u94b3\u5236\uff0c\u4e5d\u4e2a\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u8bbe\u7f6e\u4e3a0\uff0c\u4ee3\u8868\u6b63\u786e\u56fe\u50cf\u7c7b\u522b\u7684\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u8bbe\u7f6e\u4e3a1\u3002\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u56fe\u8fd8\u663e\u793a\u4e86\u6ca1\u6709\u94b3\u5236\u8f93\u51fa\uff08\u81ea\u7531\u76f8\uff09\u7684\u76f8\u540c\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u3002\u5b83\u8868\u660e\uff0c\u5728\u81ea\u7531\u9636\u6bb5\u5927\u7ea650\u6b65\u540e\uff0c\u7f51\u7edc\u8fbe\u5230\u7a33\u5b9a\u72b6\u6001\uff0c\u9884\u6d4b\u7684\u6d3b\u52a8\u5bc6\u5207\u5339\u914d\u3002\u5f53\u7f51\u7edc\u5b8c\u5168\u8bad\u7ec3\u65f6\uff0c\u81ea\u7531\u9636\u6bb5\u7684\u7f51\u7edc\u52a8\u529b\u5b66\u4ecd\u9700\u8981\u5927\u7ea650\u6b65\u624d\u80fd\u6536\u655b\u5230\u7a33\u5b9a\u72b6\u6001\uff08\u56fe2b\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1\u6240\u6709\u5355\u4f4d\u6700\u521d\u5728\u81ea\u7531\u9636\u6bb5\u5f00\u59cb\u65f6\u90fd\u4f1a\u589e\u52a0\u5176\u6d3b\u52a8\uff0c\u4f46\u5b83\u4eec\u540e\u6765\u4f1a\u6536\u655b\u5230\u63a5\u8fd10\uff0c\u4f46\u4ee3\u8868\u6b63\u786e\u7c7b\u522b\u7684\u4e00\u4e2a\u5355\u4f4d\u9664\u5916\u3002\u540c\u6837\uff0c\u81ea\u7531\u9636\u6bb5\u524d12\u6b65\u7684\u9884\u6d4b\u4e0e\u5b9e\u9645\u7684\u7a33\u6001\u6d3b\u52a8\u975e\u5e38\u543b\u5408\u3002\u9690\u85cf\u5355\u5143\u5728\u5927\u7ea650\u6b65\u540e\u4e5f\u6536\u655b\u5230\u7a33\u5b9a\u72b6\u6001\u3002\u56fe2c\u663e\u793a\u4e86\u4e00\u4e2a\u5177\u6709\u4ee3\u8868\u6027\u7684\u9690\u85cf\u795e\u7ecf\u5143\u5bf9\u4e94\u79cd\u6837\u672c\u523a\u6fc0\u7684\u53cd\u5e94\u3002\u56e0\u4e3a\u9690\u85cf\u5355\u5143\u53ea\u80fd\u901a\u8fc7\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u7a81\u89e6\u95f4\u63a5\u611f\u53d7\u94b3\u5236\u4fe1\u53f7\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u7a33\u6001\u6d3b\u52a8\u4e0d\u4e00\u5b9a\u50cf\u8f93\u51fa\u795e\u7ecf\u5143\u90a3\u6837\u53ea\u6536\u655b\u52300\u62161\u3002\u9690\u85cf\u795e\u7ecf\u5143\u7684\u5b9e\u9645\u548c\u9884\u6d4b\u7a33\u6001\u6d3b\u52a8\u5982\u56fe2d\u6240\u793a\u3002\u9884\u6d4b\u81ea\u7531\u76f8\u6d3b\u5ea6\u4e0e\u5b9e\u9645\u81ea\u7531\u76f8\u6d3b\u5ea6\u4e4b\u95f4\u7684\u5e73\u5747\u76f8\u5173\u7cfb\u6570\u4e3aR\u2009=\u20091.\u2009\u00b1\u20090.0001\u2009s\u3001 d.\uff08\u5bf9\u968f\u673a\u9009\u62e9\u7684200\u5f20\u6d4b\u8bd5\u56fe\u50cf\u8fdb\u884c1000\u4e2a\u9690\u85cf\u795e\u7ecf\u5143\u7684\u5e73\u5747\u53cd\u5e94\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u603b\u662f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u6570\u636e\u5b50\u96c6\u4e3a\u6bcf\u4e2a\u795e\u7ecf\u5143\u8bad\u7ec3\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\uff0c\u5e76\u5c06\u8be5\u6a21\u578b\u5e94\u7528\u4e8e\u65b0\u7684\u793a\u4f8b\uff0c\u7136\u540e\u7528\u4e8e\u66f4\u65b0\u6743\u91cd\uff08\u65b9\u6cd5\uff09\u3002\u56e0\u6b64\uff0c\u795e\u7ecf\u5143\u80fd\u591f\u6210\u529f\u5730\u5c06\u4ed6\u4eec\u7684\u9884\u6d4b\u63a8\u5e7f\u5230\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u523a\u6fc0\u3002\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u7f51\u7edc\u9519\u8bef\u7387\u5982\u56fe2e\u6240\u793a\u3002\u8fd9\u8868\u660e\u9884\u6d4b\u6027\u5b66\u4e60\u89c4\u5219\u8fd0\u884c\u826f\u597d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u80fd\u51c6\u786e\u9884\u6d4b\u5176\u672a\u6765\u7684\u6d3b\u52a8\u3002\na\u3001 \u5728\u7f51\u7edc\u8bad\u7ec3\u5f00\u59cb\u65f6\uff0c\u5341\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u5bf9\u6837\u672c\u523a\u6fc0\u7684\u53cd\u5e94\u3002\u7070\u8272\u9634\u5f71\u533a\u57df\u8868\u793a\u81ea\u7531\u9636\u6bb5\u7684\u8303\u56f4\uff08\u65f6\u95f4\u6b65\u957f1\u201312\uff09\u3002\u7ea2\u8272\u5b9e\u7ebf\u663e\u793a\u5728\u7b2c13\u6b65\u88ab\u94b3\u5236\u7684\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u3002\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u865a\u7ebf\u8868\u793a\u8f93\u51fa\u795e\u7ecf\u5143\u672a\u88ab\u94b3\u5236\u65f6\u7684\u81ea\u7531\u76f8\u6d3b\u52a8\u3002\u5706\u70b9\u8868\u793a\u6839\u636e\u521d\u59cb\u6d3b\u6027\uff08\u6b65\u9aa41-12\uff09\u9884\u6d4b\u7684\u81ea\u7531\u76f8\u7a33\u6001\u6d3b\u6027\u3002b\u3001 \u7f51\u7edc\u8bad\u7ec3\u540e\u76f8\u540c\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\u3002\u8bf7\u6ce8\u610f\uff0c\u81ea\u7531\u76f8\u548c\u9884\u6d4b\u7684\u6d3b\u52a8\u6536\u655b\u5230\u6240\u9700\u7684\u94b3\u5236\u6d3b\u52a8\u3002c\u3001 \u7f51\u7edc\u8bad\u7ec3\u540e\uff0c\u9690\u5c42\u4e2d\u4ee3\u8868\u6027\u795e\u7ecf\u5143\u5bf9\u4e94\u79cd\u4e0d\u540c\u523a\u6fc0\u7684\u53cd\u5e94\u3002\u5b9e\u7ebf\u548c\u865a\u7ebf\u5206\u522b\u8868\u793a\u56fa\u5b9a\u76f8\u548c\u81ea\u7531\u76f8\uff0c\u70b9\u8868\u793a\u9884\u6d4b\u7684\u6d3b\u6027\u3002d\u3001 \u9884\u6d4b\u81ea\u7531\u76f8\u6d3b\u52a8\u4e0e\u5b9e\u9645\u81ea\u7531\u76f8\u6d3b\u52a8\u3002\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u57281000\u4e2a\u9690\u85cf\u795e\u7ecf\u5143\u4e2d\uff0c\u53ea\u6709\u6bcf10\u4e2a\u88ab\u663e\u793a\uff0c\u4ee5\u56de\u5e9420\u4e2a\u6837\u672c\u56fe\u50cf\u3002\u4e0d\u540c\u7684\u989c\u8272\u4ee3\u8868\u4e0d\u540c\u7684\u795e\u7ecf\u5143\uff0c\u4f46\u7531\u4e8e\u989c\u8272\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e00\u4e9b\u795e\u7ecf\u5143\u53ef\u80fd\u5171\u4eab\u76f8\u540c\u7684\u989c\u8272\u3002\u70b9\u6cbf\u5bf9\u89d2\u7ebf\u7684\u5206\u5e03\u8868\u660e\u9884\u6d4b\u662f\u51c6\u786e\u7684\u3002e\u3001 \u5728\u4e0d\u540c\u7684\u8bad\u7ec3\u65f6\u671f\uff0c\u9519\u8bef\u7387\u964d\u4f4e\u3002\u9ec4\u7ebf\u548c\u7eff\u7ebf\u5206\u522b\u8868\u793a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u5b66\u4e60\u66f2\u7ebf\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6bcf\u4e2a\u65f6\u4ee3\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u4e8660000\u4e2a\u57f9\u8bad\u793a\u4f8b\u4e2d\u76842%\u3002\n\u6211\u4eec\u8fd8\u5728\u591a\u4e2a\u5176\u4ed6\u7f51\u7edc\u67b6\u6784\u4e2d\u6d4b\u8bd5\u4e86\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\uff0c\u8fd9\u4e9b\u67b6\u6784\u65e8\u5728\u53cd\u6620\u751f\u7269\u795e\u7ecf\u5143\u7f51\u7edc\u7684\u5176\u4ed6\u65b9\u9762\u3002\u9996\u5148\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u7ea6\u675f\uff0c\u537380%\u7684\u9690\u85cf\u795e\u7ecf\u5143\u662f\u5174\u594b\u6027\u7684\uff0c\u5269\u4e0b\u768420%\u53ea\u6709\u6291\u5236\u6027\u8f93\u51fa\u3002\u8fd9\u662f\u56e0\u4e3a\u89c2\u5bdf\u5230\u751f\u7269\u795e\u7ecf\u5143\u91ca\u653e\u5174\u594b\u6027\u6216\u6291\u5236\u6027\u795e\u7ecf\u9012\u8d28\uff0c\u800c\u4e0d\u662f\u4e24\u8005\u90fd\u91ca\u653e\uff08Dale\u5b9a\u5f8b30\uff09\uff0c\u7ea680%\u7684\u76ae\u5c42\u795e\u7ecf\u5143\u662f\u5174\u594b\u6027\u7684\u3002\u91c7\u7528\u8fd9\u79cd\u7ed3\u6784\u7684\u7f51\u7edc\u5b9e\u73b0\u4e862.66%\u7684\u9519\u8bef\u7387\uff08\u8865\u5145\u56fe3a\uff09\u3002\u6211\u4eec\u8fd8\u5728\u4e00\u4e2a\u6ca1\u6709\u5bf9\u79f0\u6743\u91cd\u7684\u7f51\u7edc\u4e2d\u6d4b\u8bd5\u4e86\u6211\u4eec\u7684\u7b97\u6cd5\uff0c\u5176\u6027\u80fd\u4e0e\u539f\u59cb\u7f51\u7edc\u7c7b\u4f3c\uff081.96%\uff0c\u8865\u5145\u56fe3b\uff09\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u5e26\u6709\u5c16\u5cf0\u795e\u7ecf\u5143\u7684\u7f51\u7edc\u4e2d\u5b9e\u73b0\u4e86\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\uff0c\u518d\u6b21\u83b7\u5f97\u4e862.46%\u7684\u7c7b\u4f3c\u9519\u8bef\u7387\uff08\u8865\u5145\u56fe4\uff09\u3002\u6211\u4eec\u7684\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u5728\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u4e2d\u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u6d4b\u8bd5\uff08\u56fe3a\uff09\uff0c\u5176\u7ed3\u6784\u5df2\u88ab\u8bc1\u660e\u7c7b\u4f3c\u4e8e\u89c6\u89c9\u7cfb\u7edf31\u300132\u4e2d\u7684\u795e\u7ecf\u5143\u5904\u7406\u3002\u5229\u7528\u8fd9\u4e2a\u5377\u79ef\u7f51\u7edc\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u66f4\u5177\u6311\u6218\u6027\u7684\u6570\u636e\u96c6\u4e0a\u6d4b\u8bd5\u4e86\u6211\u4eec\u7684\u7b97\u6cd5\uff0c\u8be5\u6570\u636e\u96c6\u662f\u53d7\u751f\u7269\u542f\u53d1\u7684\u7b97\u6cd5\uff1aCIFAR-10 33\u3002\u8be5\u6570\u636e\u96c6\u7531\u4ee3\u8868\u5341\u4e2a\u4e0d\u540c\u7c7b\u522b\uff08\u4f8b\u5982\u98de\u673a\u3001\u6c7d\u8f66\u3001\u9e1f\u7c7b\u548c\u732b\uff09\u7684\u5f69\u8272\u56fe\u50cf\u7ec4\u6210\u3002\u6211\u4eec\u5b9e\u73b0\u4e8620.03%\u7684\u9519\u8bef\u7387\uff0c\u4e0e\u4f7f\u7528\u65f6\u95f4\u53cd\u5411\u4f20\u64ad\uff08BPTT\uff09\u7b97\u6cd5\u8bad\u7ec3\u540c\u4e00\u7f51\u7edc\u7684\u9519\u8bef\u7387\u76f8\u5f53\uff08\u56fe3b\uff1b\u65b9\u6cd5\u548c\u4ee3\u7801\u4e2d\u63d0\u4f9b\u4e86\u8be6\u7ec6\u4fe1\u606f\uff0c\u91cd\u73b0\u7ed3\u679c\u53ef\u5728https://github.com/ykubo82/bioCHL/tree/master/conv)\u603b\u4e4b\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u7684\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u5728\u5404\u79cd\u751f\u7269\u52a8\u673a\u7684\u7f51\u7edc\u67b6\u6784\u4e2d\u8868\u73b0\u826f\u597d\u3002\na\u3001 \u63cf\u8ff0\u6211\u4eec\u7684\u5377\u79ef\uff08Conv.\uff09\u7f51\u7edc\u67b6\u6784\uff08\u65b9\u6cd5\uff09\u3002b\u3001 \u4f7f\u7528\u9884\u6d4b\uff08Pred.\uff09\u8bad\u7ec3\u7684\u5377\u79ef\u7f51\u7edc\u7684\u5b66\u4e60\u66f2\u7ebf\u5b66\u4e60\u89c4\u5219\uff08\u7eff\u8272\uff09\u548c\u4f7f\u7528BPTT\u8bad\u7ec3\u7684\u540c\u4e00\u7f51\u7edc\u7684\u5b66\u4e60\u66f2\u7ebf\uff0c\u7528\u4e8e\u6bd4\u8f83\u3002\u7ea2\u7ebf\u663e\u793a\u4e86BPTT\u7684\u5b66\u4e60\u66f2\u7ebf\uff0c\u4f7f\u7528\u4e0e\u6211\u4eec\u7684\u9884\u6d4b\u6a21\u578b\u76f8\u540c\u7684\u5b66\u4e60\u7387\uff08\u7ea2\u7ebf\uff1bLR:0.4,0.028,0.025\uff09\uff0cBPTT\u6240\u6709\u5c42\u7684\u5b66\u4e60\u7387\u4e3a0.1\uff08\u9ec4\u7ebf\uff09\uff0cBPTT\u6240\u6709\u5c42\u7684\u5b66\u4e60\u7387\u4e3a0.2\uff08\u7d2b\u7ebf\uff09\u3002\u8fd9\u8868\u660e\uff0c\u5728CIFAR-10\u4e0a\uff0c\u4f7f\u7528\u6211\u4eec\u7684\u9884\u6d4b\u5b66\u4e60\u89c4\u5219\u7684\u6df1\u5ea6\u7f51\u7edc\u7684\u6027\u80fd\u4e0eBPTT\u76f8\u5f53\u3002\n\u4e3a\u4e86\u6d4b\u8bd5\u771f\u5b9e\u795e\u7ecf\u5143\u662f\u5426\u4e5f\u80fd\u9884\u6d4b\u5176\u672a\u6765\u7684\u6d3b\u52a8\uff0c\u6211\u4eec\u5206\u6790\u4e86\u6e05\u9192\u5927\u9f20\u542c\u89c9\u76ae\u5c42\u7684\u795e\u7ecf\u5143\u8bb0\u5f55\uff08\u65b9\u6cd5\uff09\u3002\u4f5c\u4e3a\u523a\u6fc0\uff0c\u6211\u4eec\u5448\u73b0\u4e86\u516d\u4e2a\u97f3\u8c03\uff0c\u6bcf\u4e2a\u97f3\u8c031\u2009\u5b83\u5f88\u957f\uff0c\u4e2d\u95f4\u67091\u4e2a\u2009\u6301\u7eed20\u591a\u6b21\u7684\u6c89\u9ed8\u2009min.\uff08\u8865\u5145\u4fe1\u606f\uff09\u3002\u5bf9\u4e8e\u516d\u4e2a\u97f3\u8c03\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u6211\u4eec\u5206\u522b\u8ba1\u7b97\u4e86\u5e73\u5747\u8d77\u59cb\u548c\u504f\u79fb\u53cd\u5e94\uff0c\u4e3a\u6bcf\u4e2a\u795e\u7ecf\u5143\u63d0\u4f9b\u4e8612\u79cd\u4e0d\u540c\u7684\u6d3b\u52a8\u6a21\u5f0f\uff08\u56fe4a\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u523a\u6fc0\uff0c15-25\u5206\u949f\u7684\u6d3b\u52a8\u2009ms\u65f6\u95f4\u7a97\u7528\u4e8e\u9884\u6d4b30-40\u5e74\u5185\u7684\u5e73\u5747\u672a\u6765\u6d3b\u52a8\u2009window\u5973\u58eb\u3002\u6211\u4eec\u4f7f\u752812\u500d\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5176\u4e2d\u6765\u81ea11\u4e2a\u523a\u6fc0\u7684\u53cd\u5e94\u7528\u4e8e\u8bad\u7ec3\u6700\u5c0f\u4e8c\u4e58\u6a21\u578b\uff0c\u7136\u540e\u5e94\u7528\u6700\u5c0f\u4e8c\u4e58\u6a21\u578b\u9884\u6d4b\u5269\u4f59\u523a\u6fc0\u7684\u795e\u7ecf\u5143\u6d3b\u52a8\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5bf9\u6bcf\u4e2a\u795e\u7ecf\u5143\u91cd\u590d12\u6b21\u3002\u5b9e\u9645\u6d3b\u6027\u548c\u9884\u6d4b\u6d3b\u6027\u4e4b\u95f4\u7684\u5e73\u5747\u76f8\u5173\u7cfb\u6570\u4e3aR\u2009=\u20090.36\u2009\u00b1\u20090.05 s.e.m.\uff08\u56db\u53ea\u52a8\u726955\u4e2a\u7ec6\u80de\u7684\u5e73\u5747\u503c\uff1b\u56fe4b\uff09\u3002\u5355\u4e2a\u795e\u7ecf\u5143\u7684\u76f8\u5173\u7cfb\u6570\u5206\u5e03\u4e0e0\u663e\u8457\u4e0d\u540c\uff08t\u68c0\u9a8cP\u2009&\u4e66\u4fe1\u7535\u62a5\uff1b\u20090.0001; \u6240\u6709\u6d4b\u8bd5\u90fd\u662f\u53cc\u5411\u7684\uff1b\u63d2\u56fe\uff0c\u56fe4b\uff09\u3002\u8fd9\u8868\u660e\u795e\u7ecf\u5143\u5177\u6709\u53ef\u9884\u6d4b\u7684\u52a8\u529b\u5b66\uff0c\u5e76\u4e14\uff0c\u4ece\u6700\u521d\u7684\u795e\u7ecf\u5143\u53cd\u5e94\uff0c\u53ef\u4ee5\u4f30\u8ba1\u5b83\u4eec\u672a\u6765\u7684\u6d3b\u52a8\u3002\na\u3001 \u4ee3\u8868\u6027\u795e\u7ecf\u5143\u5bf9\u4e0d\u540c\u523a\u6fc0\u7684\u53cd\u5e94\u3002\u4e3a\u4e86\u53ef\u89c6\u5316\uff0c12\u4e2a\u54cd\u5e94\u4e2d\u53ea\u67095\u4e2a\u663e\u793a\u51fa\u6765\u3002\u7070\u8272\u9634\u5f71\u533a\u57df\u8868\u793a\u7528\u4e8e\u9884\u6d4b\u672a\u6765\u6d3b\u52a8\u7684\u65f6\u95f4\u7a97\u53e3\u3002\u5706\u70b9\u663e\u793a\u4e8630-40\u5e74\u7684\u9884\u6d4b\u5e73\u5747\u6d3b\u52a8\u2009ms\u65f6\u95f4\u7a97\u53e3\u3002\u989c\u8272\u5bf9\u5e94\u4e0d\u540c\u7684\u523a\u6fc0\u3002B\n......", "note_en": "Understanding how the brain learns may lead to machines with human-like intellectual capacities. It was previously proposed that the brain may operate on the principle of predictive coding. However, it is still not well understood how a predictive system could be implemented in the brain. Here we demonstrate that the ability of a single neuron to predict its future activity may provide an effective learning mechanism. Interestingly, this predictive learning rule can be derived from a metabolic principle, whereby neurons need to minimize their own synaptic activity (cost) while maximizing their impact on local blood supply by recruiting other neurons. We show how this mathematically derived learning rule can provide a theoretical connection between diverse types of brain-inspired algorithm, thus offering a step towards the development of a general theory of neuronal learning. We tested this predictive learning rule in neural network simulations and in data recorded from awake animals. Our results also suggest that spontaneous brain activity provides \u2018training data\u2019 for neurons to learn to predict cortical dynamics. Thus, the ability of a single neuron to minimize surprise\u2014that is, the difference between actual and expected activity\u2014could be an important missing element to understand computation in the brain.\n     Neuroscience is at the stage biology was at before Darwin. It has a myriad of detailed observations but no single theory explaining the connections between all of those observations. We do not even know if such a brain theory should be at the molecular level or at the level of brain regions, or at any scale between. However, looking at deep neural networks, which have achieved remarkable results in tasks ranging from cancer detection to self-driving cars, may provide useful insights. Although such networks may have different inputs and architectures, most of their impressive behaviour can be understood in terms of the underlying common learning algorithm, called backpropagation  1.\n A better understanding of the learning algorithm(s) used by the brain could thus be central to developing a unifying theory of brain function. There are two main approaches to investigating learning mechanisms in the brain: (1) experimental, where persistent changes in neuronal activity are induced by a specific intervention  2, and (2) computational, where algorithms are developed to achieve specific computational objectives while still satisfying selected biological constraints  3, 4. In this Article we explore an additional option\u2014(3) theoretical derivation\u2014where a learning rule is derived from basic cellular principles, that is, from maximizing the metabolic energy of a cell. Using this approach, we found that maximizing the energy balance by a neuron leads to a predictive learning rule, where a neuron adjusts its synaptic weights to minimize surprise\u2014that is, the difference between actual and predicted activity. Interestingly, this derived learning rule has a direct relation to some of the most promising biologically inspired learning algorithms, like predictive coding and temporal difference learning (see below), and Hebbian-based rules can be seen as a special case of our predictive learning rule ( Discussion). Thus, our approach may provide a theoretical connection between multiple brain-inspired algorithms and may offer a step towards the development of a unified theory of neuronal learning.\n There are multiple lines of evidence suggesting that the brain operates as a predictive system  5, 6, 7, 8, 9, 10. However, it remains controversial as to how exactly predictive coding could be implemented in the brain  4. Most of the proposed mechanisms involve specially designed neuronal circuits with \u2018error units\u2019 to allow for comparing expected and actual activity  11, 12, 13, 14. Those models assume a predictive circuit, but we propose an alternative, where there is an internal predictive model within a neuron. As many basic properties of neurons are highly conserved throughout evolution  15, 16, 17, we suggest that a single neuron using a predictive learning rule could provide an elementary unit from which a variety of predictive brains may be built.\n Interestingly, our predictive learning rule can also be obtained by modifying a temporal difference learning algorithm to be more biologically plausible. Temporal difference learning is one of the most promising ideas about how backpropagation-like algorithms could be implemented in the brain. It is based on using differences in neuronal activity to approximate top-down error signals  4, 18, 19, 20, 21, 22, 23, 24. A typical example of such algorithms is contrastive Hebbian learning  25, 26, 27, which was proven to be equivalent to backpropagation under certain assumptions  28. Contrastive Hebbian learning requires networks to have reciprocal connections between hidden and output layers, which allows activity to propagate in both directions (Fig.  1a). The learning consists of two separate phases. First, in the \u2018free phase\u2019, a sample stimulus is continuously presented to the input layer and the activity propagates through the network until the dynamics converge to an equilibrium (the activity of each neuron achieves a steady-state level). In the second \u2018clamped phase\u2019, in addition to presenting a stimulus to the input, the output neurons are also held clamped at values representing the stimulus category (for example, 0 or 1), and the network is again allowed to converge to an equilibrium. For each neuron, the difference between activity in the clamped ( \\({\\hat {x}}\\)) and free ( \\({\\check{x}}\\)) phases is used to modify the synaptic weights ( w) according to the equation\n  where  i and  j are indices of pre- and post-synaptic neurons respectively, and  \u03b1 is a small number representing the learning rate. Intuitively, this can be seen as adjusting weights to push each neuron\u2019s activity in the free phase closer to the desired activity represented by the clamped phase. The obvious biological plausibility issue with this algorithm is that it requires the neuron to experience exactly the same stimulus twice in two separate phases, and that the neuron needs to \u2018remember\u2019 its activity from the previous phase. Our predictive learning rule provides a solution to this problem by predicting the free-phase steady-state activity, thus eliminating the requirement for two separate stimulus presentations.\n a, Schematic of the network. Note that activity propagates back and forth between hidden and output layers.  b, Sample neuron activity in the free phase in response to different stimuli (marked with shades of blue). The free-phase responses are used to train a linear model to predict a steady-state activity from the activity at earlier time steps (marked by the shaded area; see main text for details). The bottom traces show the duration of the inputs, and dots represent predicted activity.  c, Activity of a neuron in response to a new stimulus with the network output clamped. Initially, the network receives only the input signal (free phase), but, after a few steps, the output signal is also presented (clamped phase, bottom black trace). The red dot represents the steady-state free-phase activity predicted from the initial activity (the shaded region). For comparison, the dashed line shows a neuron\u2019s activity in the free phase if the output is not clamped. Synaptic weights ( w) are adjusted in proportion to the difference between steady-state activity in the clamped phase ( \\({\\hat {x}}\\)) and the predicted free-phase activity ( \\({\\tilde {x}}\\)).\n For clarity here, first we will describe how our predictive learning rule can be obtained by modifying the contrastive Hebbian learning algorithm. Next, we will validate the predictive learning rule in simulation and in data recorded from awake animals, and we will show how our results shed new light on the function of spontaneous activity. The details of derivation of the learning rule by maximizing the neuron energy balance will be presented at the end.\n As mentioned earlier, the contrastive Hebbian learning algorithm requires a network to converge to steady-state equilibrium in two separate learning phases, so exactly the same stimulus has to be presented twice. However, this is unlikely to be the case in the actual brain. Here we propose to solve this problem by combining both activity phases into one, which is inspired by sensory processing in the cortex. For example, in visual areas, when presented with a new picture, there is initially bottom-up-driven activity containing mostly visual attributes of the stimulus (for example, contours). This is then followed by top-down modulation containing more abstract information, such as \u2018this object is a member of category  x\u2019 or \u2018this object is novel\u2019 (Supplementary Fig.  1). Accordingly, our algorithm first runs only the initial part of the free phase, which represents bottom-up stimulus-driven activity, and then, after a few steps, the network output is clamped, corresponding to top-down modulation.\n The novel insight here is that the initial bottom-up activity is enough to allow neurons to predict the steady-state part of the free-phase activity, and the mismatch between the predicted free phase and the clamped phase can then be used as a teaching signal. To implement this idea in our model, for each neuron, activity during 12 initial time steps of the free phase ( \\({\\check{x}_{(1)}}\\),\u2009...,\u2009 \\({\\check{x}_{(12)}}\\)) was used to predict its steady-state activity at time step 120,  \\({\\check{x}_{(120)}}\\) (Fig.  1b). Specifically, we first presented sample stimuli in the free phase to train a linear model, such that  \\({\\check{x}_{(120)}\\approx{\\tilde {x}} = {\\lambda _{(1)} \\check{x}_{(1)}, + \\ldots + \\lambda _{(12)} \\check{x}_{(12)} + {b}}}\\), where  \\({\\tilde {x}}\\) denote predicted activity,  \u03bb and  b correspond to coefficients and offset term of the least-squares model, and terms in brackets correspond to time steps. Next, a new set of stimuli was used for which the free phase was run only for the first 12 steps, and from step 13 the network output was clamped (Fig.  1c). The above least-squares model was then applied to predict the free-phase steady-state activity for each neuron, and the weights were updated based on the difference between predicted and clamped activity ( Methods). Thus, to modify the synaptic weights, in equation ( 1) we replace the activity in the free phase with predicted activity ( \\({\\tilde {x}}\\)):\n  However, the problem is that this equation implies that a neuron needs also to know the predicted activity of all its presynaptic neurons ( \\({\\tilde {x}_{i}}\\)), which may not be realistic. To solve this problem, we replaced ( \\({\\tilde {x}_{i}}\\)) by the actual presynaptic activity in the clamped phase ( \\({\\hat {x}_{i}}\\)), which we validated in network simulations (see the next section). This change leads to the following simplified synaptic plasticity rule (equation ( 3)):\n $${\\Delta {w}_{ij}} = {\\alpha ({\\hat {x}_{i}}{\\hat {x}_{j}} - {\\hat {x}_{i}}{\\tilde {x}_{j}})} = {\\alpha {\\hat {x}_{i}}({\\hat {x}_{j}} - {\\tilde {x}_{j}})}.$$\n Thus, to modify the synaptic weights, a neuron only compares its actual activity ( \\({\\hat {x}_{j}}\\)) with its predicted activity ( \\({\\tilde {x}_{j}}\\)), and applies this difference in proportion to each input contribution ( \\({\\hat {x}_{i}}\\)).\n  To test if the predictive learning rule can be used to solve standard machine learning tasks, we created the following simulation. The neural network had 784 input units, 1,000 hidden units and 10 output units, and it was trained on a handwritten digit recognition task (MNIST  29; Supplementary Fig.  2 and  Methods). This network achieved 1.9% error rate, which is similar to neural networks with comparable architecture trained with the backpropagation algorithm  29. This demonstrates that the network with the predictive learning rule can solve challenging nonlinear classification tasks.\n To verify that the neurons could correctly predict future free-phase activity, we took a closer look at sample neurons. Figure  2a presents the activity of all ten output neurons in response to an image of a sample digit after the first epoch of training. During time steps 1\u201312, only the input signal was presented and the network was running in the free phase. At time step 13, the output neurons were clamped, with the activity of nine neurons set to 0 and the activity of one neuron, representing the correct image class, set to 1. For comparison, this figure also shows the activity of the same neurons without clamped outputs (free phase). It illustrates that, after about 50 steps in the free phase, the network achieves a steady state, with predicted activity closely matching. When the network is fully trained, it still takes about 50 steps for the network dynamics in the free phase to converge to a steady state (Fig.  2b). Note that, although all units initially increase their activity at the beginning of the free phase, they later converge close to 0, except the one unit representing the correct category. Again, predictions made from the first 12 steps during the free phase closely matched the actual steady-state activity. The hidden units also converged to a steady state after about 50 steps. Figure  2c illustrates the response of one representative hidden neuron to five sample stimuli. Because hidden units experience the clamped signal only indirectly, through synapses from output neurons, their steady-state activity is not bound to converge only to 0 or 1, as in the case of output neurons. Actual and predicted steady-state activity for hidden neurons is presented in Fig.  2d. The average correlation coefficient between predicted and actual free-phase activity was  R\u2009=\u20091\u2009\u00b1\u20090.0001\u2009s.d. (averaged across 1,000 hidden neurons in response to 200 randomly selected test images). Note that we always used a cross-validation approach, where we trained a predictive model for each neuron on a subset of the data and applied that model to new examples, which were then used for updating the weights ( Methods). Thus, neurons were able to successfully generalize their predictions to new unseen stimuli. The network error rates for the training and test datasets are shown in Fig.  2e. This demonstrates that the predictive learning rule worked well, and each neuron accurately predicted its future activity.\n a, Activity of ten output neurons in response to a sample stimulus at the beginning of network training. The grey shaded area indicates the extent of the free phase (time steps 1\u201312). Solid red lines show activity of the neurons clamped at step 13. For comparison, dashed lines represent the free-phase activity if the output neurons had not been clamped. Dots show the predicted steady-state activity in the free phase based on initial activity (from steps 1\u201312).  b, Activity of the same neurons after network training. Note that the free-phase and predicted activities converged to the desired clamped activity.  c, Activity of a representative neuron in the hidden layer in response to five different stimuli after network training. Solid and dashed lines represent clamped and free phases, respectively, and dots show predicted activity.  d, Predicted versus actual free-phase activity. For clarity, only every 10th hidden neuron out of 1,000 is shown, in response to 20 sample images. Different colours represent different neurons, but some neurons may share the same colour due to the limited number of colours. The distribution of points along the diagonal shows that the predictions are accurate.  e, Decrease in error rate across training epochs. Yellow and green lines denote learning curves for the training and test datasets, respectively. Note that, in each epoch, we only used 2% of 60,000 training examples.\n  We also tested the predictive learning rule in multiple other network architectures, which were designed to reflect additional aspects of biological neuronal networks. First, we introduced a constraint that 80% of the hidden neurons were excitatory and the remaining 20% had only inhibitory outputs. This follows observations that biological neurons release either excitatory or inhibitory neurotransmitters, not both (Dale\u2019s law  30), and that ~80% of cortical neurons are excitatory. The network with this architecture achieved an error rate of 2.66% (Supplementary Fig.  3a). We also tested our algorithm in a network without symmetric weights, which resulted in a performance similar to the original network (1.96%, Supplementary Fig.  3b). Moreover, we implemented the predictive learning rule in a network with spiking neurons, which again achieved a similar error rate of 2.46% (Supplementary Fig.  4). Our predictive learning rule was further tested in a deep convolutional network (Fig.  3a), the architecture of which has been shown to resemble neuronal processing in the visual system  31, 32. Using this convolutional network, we tested our algorithm on a more challenging dataset for biologically inspired algorithms: CIFAR-10  33. This dataset consists of colour images representing ten different classes (for example, aeroplanes, cars, birds and cats). We achieved an error rate of 20.03%, which was comparable with that achieved training the same network using a backpropagation through time (BPTT) algorithm (Fig.  3b; details are provided in the  Methods and code to reproduce the results is available at  https://github.com/ykubo82/bioCHL/tree/master/conv). Altogether, this shows that our predictive learning rule performs well in a variety of biologically motivated network architectures.\n a, Depiction of our convolutional (Conv.) network architecture ( Methods).  b, Learning curve for the convolutional network trained using the predictive (Pred.) learning rule (green) and, for comparison, learning curves for the same network trained using BPTT. The red line shows a learning curve for BPTT using the same learning rates as in our predictive model (red line; LR: 0.4, 0.028, 0.025), BPTT with a learning rate of 0.1 for all layers (yellow line) and BPTT with a learning rate of 0.2 for all layers (violet line). This shows that, on CIFAR-10, the performance of the deep network using our predictive learning rule was comparable with that of BPTT.\n  To test whether real neurons could also predict their future activity, we analysed neuronal recordings from the auditory cortex in awake rats ( Methods). As stimuli we presented six tones, each 1\u2009s long and interspersed by 1\u2009s of silence, repeated continuously for over 20\u2009min. ( Supplementary Information). For each of the six tones we separately calculated the average onset and offset response, giving us 12 different activity profiles for each neuron (Fig.  4a). For each stimulus, the activity in the 15\u201325\u2009ms time window was used to predict average future activity within the 30\u201340\u2009ms window. We used 12-fold cross-validation, whereby responses from 11 stimuli were used to train the least-squares model, which was then applied to predict neuron activity for the one remaining stimulus. This procedure was repeated 12 times for each neuron. The average correlation coefficient between actual and predicted activity was  R\u2009=\u20090.36\u2009\u00b1\u20090.05 s.e.m. (averaged across 55 cells from four animals; Fig.  4b). The distributions of correlation coefficients for individual neurons were significantly different from 0 ( t-test  P\u2009&lt;\u20090.0001; all tests were two-sided; inset, Fig.  4b). This shows that neurons have predictable dynamics and, from an initial neuronal response, their future activity can be estimated.\n a, Response of a representative neuron to different stimuli. For visualization, only 5 out of 12 responses are shown. The grey shaded area indicates the time window that was used to predict future activity. Dots show the predicted average activity in the 30\u201340\u2009ms time window. Colours correspond to different stimuli.  b\n......", "posttime": "2022-02-17 10:35:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9884\u6d4b,learn,\u795e\u7ecf\u5143", "title": "\u795e\u7ecf\u5143\u901a\u8fc7\u9884\u6d4b\u672a\u6765\u7684\u6d3b\u52a8\u6765\u5b66\u4e60", "title_en": "Neurons learn by predicting future activity", "transed": 1, "url": "https://www.nature.com/articles/s42256-021-00430-y", "via": "", "real_tags": ["\u9884\u6d4b", "learn", "\u795e\u7ecf\u5143"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073789, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u767b\u5f55\u8868\u5355\u4e0b\u65b9\u7684\u7ea2\u8272\u6587\u672c\u4e3a&#34\uff1b\u610f\u5916\u9519\u8bef&#34; \u6211\u6b63\u4ece\u4e00\u4f4d\u540d\u53eb\u57c3\u91cc\u514b\u7684\u6280\u672f\u652f\u6301\u4eba\u5458\u7684\u8eab\u540e\u770b\u8fc7\u53bb\uff0c\u4ed6\u521a\u521a\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u767b\u5f55\u6211\u4eec\u7684\u4ea7\u54c1\u3002\u4ed6\u7684\u9694\u95f4\u770b\u8d77\u6765\u548c\u623f\u95f4\u91cc\u5176\u4ed6\u5927\u7ea680\u4e2a\u5206\u6563\u7684\u9694\u95f4\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u662f\u529e\u516c\u684c\u4e0a\u6709\u4e00\u4e2a\u5b9a\u5236\u7684\u673a\u68b0\u952e\u76d8\uff0c\u4e0a\u9762\u6709\u6ca1\u6709\u6807\u8bb0\u7684\u952e\u5e3d\u548c\u9713\u8679\u706f\u80cc\u5149\u3002\u6211\u4eec&#39\uff1b\u6211\u4e00\u76f4\u8fc7\u5f97\u5f88\u597d\uff0c\u4f46\u73b0\u5728\u4ed6\u56de\u5934\u770b\u7740\u6211\uff0c\u8138\u4e0a\u9732\u51fa\u80cc\u53db\u7684\u8868\u60c5\uff0c\u544a\u8bc9\u6211\u4ed6\u5728\u60f3\u4ec0\u4e48\uff1a\u201c\u8bf7\u544a\u8bc9\u6211\uff0c\u4f60\u6ca1\u6709\u6d6a\u8d39\u6211\u6574\u4e2a\u5468\u516d\u7684\u65f6\u95f4\u3002\u201d\n\u6211\u8f6c\u8fc7\u8eab\uff0c\u611f\u89c9\u81ea\u5df1\u5589\u5499\u53d1\u7d27\uff0c\u56e0\u4e3a\u6211\u770b\u5230\u623f\u95f4\u91cc\u5230\u5904\u90fd\u662f\u540c\u6837\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4ed6\u7684\u540c\u4e8b\u4eec\u5f00\u59cb\u56f0\u60d1\u5730\u62ac\u8d77\u5934\u6765\u3002\n2018\u5e74\uff0c\u4f11\u65af\u987f\u7684\u4e00\u4e2a\u95f7\u70ed\u7684\u5468\u516d\u4e0a\u5348\uff0c\u6211\u5728\u4e00\u5bb6It\u7ba1\u7406\u670d\u52a1\u63d0\u4f9b\u5546\uff08MSP\uff09\u7684\u7f51\u7edc\u8fd0\u8425\u4e2d\u5fc3\u5de5\u4f5c\u3002MSP\u5c06IT\u4f5c\u4e3a\u4e00\u9879\u670d\u52a1\u6765\u7ba1\u7406\u5176\u4ed6\u4e1a\u52a1\u2014\u2014\u4ece\u57df\u548c\u7f51\u7ad9\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u4e91\u670d\u52a1\uff0c\u5230\u5b89\u5168\u8fd0\u8425\u548c\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u3002\n\u8fd9\u5bb6\u516c\u53f8\u662f\u6211\u4eec\u6700\u65e9\u7684\u5ba2\u6237\u4e4b\u4e00\uff0c\u4e5f\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u5ba2\u6237\u4e4b\u4e00\u3002\u6211\u4eec&#39\uff1bd\u4e3a\u4ed6\u4eec\u7684\u652f\u6301\u56e2\u961f\u7ec4\u7ec7\u4e86\u4e00\u6b21\u5468\u672b\u57f9\u8bad\u8bfe\u7a0b\uff0c\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u7684\u521d\u521b\u516c\u53f8&39\uff1bs\u7684web\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u6709\u5173\u4ed6\u4eec\u7ba1\u7406\u7684\u7cfb\u7edf\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u54cd\u5e94\u652f\u6301\u8bf7\u6c42\u3002\u4f46\u73b0\u5728\uff0c\u53ea\u6709\u5c11\u6570\u4eba\u751a\u81f3\u53ef\u4ee5\u767b\u5f55\uff0c\u5f53\u6211\u5728\u9694\u95f4\u4e4b\u95f4\u8d70\u52a8\u65f6\uff0c\u770b\u5230\u6211\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u5c4f\u5e55\u4e0a\u90fd\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u9519\u8bef\uff0c\u6211\u611f\u5230\u6cae\u4e27\uff0c\u5f00\u59cb\u5728\u623f\u95f4\u91cc\u55e1\u55e1\u4f5c\u54cd\u3002\n\u6211\u4eec\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5411\u6211\u6325\u624b\u81f4\u610f&#34;\u563f\uff0c\u4f19\u8ba1\uff0c\u770b\u6765\u6211\u4eec\u6709\u9ebb\u70e6\u4e86&#34; \u4ed6\u4e00\u5982\u65e2\u5f80\u5730\u8868\u73b0\u51fa\u9547\u5b9a\uff0c\u4f46\u4ed6\u7684\u5fae\u7b11\u662f\u88ab\u8feb\u7684\u3002\u5c3d\u7ba1\u4ed6\u8bf4\u201c\u6211\u4eec\u201d\uff0c\u4f46\u4ed6\u7684\u610f\u601d\u662f\u201c\u4f60\u201d\uff0c\u56e0\u4e3a\u8fd9\u80af\u5b9a\u662f\u6211\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u51e0\u4e2a\u6708\u524d\u624d\u52a0\u5165\u8fd9\u4e2a\u56e2\u961f\uff0c\u4f46\u5f53\u65f6\u6211\u662f\u6574\u4e2a\u516b\u4eba\u516c\u53f8\u4e2d\u4ec5\u6709\u7684\u4e24\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e4b\u4e00\uff0c\u4e5f\u662f\u5f53\u5929\u552f\u4e00\u4e00\u540d\u3002\n\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u53d1\u73b0\u81ea\u5df1\u7edd\u671b\u5730\u8737\u7f29\u5728\u7b14\u8bb0\u672c\u7535\u8111\u524d\uff0c\u53cc\u624b\u98a4\u6296\uff0c\u5728\u4e00\u4e2a\u5bf9\u6211\u6765\u8bf4\u4ecd\u7136\u964c\u751f\u7684\u4ee3\u7801\u5e93\u4e2d\u641c\u7d22\uff0c\u6298\u78e8\u7740\u6211\u7684\u5927\u8111\u3002\u5728\u8fc7\u53bb\u4e00\u5468\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8fd9\u4e2a\u7cbe\u786e\u7684\u6784\u5efa\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u4eca\u5929\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u80fd&#39\uff1b\u6ca1\u6709\u4eba\u767b\u5f55\u5417\uff1f\n\u6bcf\u4e00\u79d2\u90fd\u50cf\u662f\u4e00\u4e2a\u6c38\u6052\u7684\u65f6\u523b\uff0c\u6211\u8bd5\u56fe\u63a7\u5236\u4f4f\u81ea\u5df1\u65e5\u76ca\u52a0\u5267\u7684\u6050\u614c\u3002\u201c\u4e13\u6ce8\uff0c\u4f60\u80fd\u505a\u5230\uff0c\u201d\u6211\u544a\u8bc9\u81ea\u5df1\u3002\u9519\u8bef\u6d88\u606f\u662f\u901a\u7528\u7684\uff0c\u5bf9\u7f29\u5c0f\u95ee\u9898\u8303\u56f4\u6ca1\u6709\u5e2e\u52a9\uff0c\u4f46\u6211\u77e5\u9053\u95ee\u9898\u4e00\u5b9a\u4e0e\u767b\u5f55\u529f\u80fd\u6709\u5173\uff0c\u56e0\u4e3a&#39\uff1b\u8fd9\u662f\u4eba\u4eec\u9677\u5165\u56f0\u5883\u7684\u5730\u65b9\u3002\n\u7136\u540e\u5b83\u51fb\u4e2d\u4e86\u6211\u3002\u4eca\u5929\u662f\u6211\u4eec\u7b2c\u4e00\u6b21&#39\uff1bd\u66fe\u7ecf\u6709\u4e00\u5927\u7fa4\u4eba\u540c\u65f6\u8bbf\u95ee\u8be5\u4ea7\u54c1\u3002\u6211\u8fd8\u5728\u5b66\u4e60\u4ee3\u7801\u5e93\uff0c\u4f46\u6211\u77e5\u9053\u6211\u4eec\u6709\u4e00\u4e9b\u4e0d\u6210\u719f\u7684\u5b89\u5168\u529f\u80fd\u8bbe\u7f6e\uff0c\u4ee5\u9632\u6b62\u592a\u591a\u9519\u8bef\u7684\u767b\u5f55\u5c1d\u8bd5\u3002\u679c\u4e0d\u5176\u7136\uff0c\u5f53\u6211\u767b\u5f55\u6570\u636e\u5e93\u65f6\uff0c\u6211\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u9519\u8bef\u5730\u8ddf\u8e2a\u4e86\u767b\u5f55\u5c1d\u8bd5\u7684\u603b\u6570\u3002\u5b83\u4e0d\u662f\u8ba1\u7b97\u6bcf\u4e2a\u7528\u6237\u7684\u6b21\u6570\uff0c\u800c\u662f\u8ba1\u7b97\u6574\u4e2a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u6b21\u5c1d\u8bd5\u6b21\u6570\u3002\u5de8\u5927\u7684\u638c\u5fc3\u3002\n\u6211\u6253\u7535\u8bdd\u7ed9\u56e2\u961f\u4e2d\u7684\u53e6\u4e00\u4f4d\u5de5\u7a0b\u5e08\uff0c\u786e\u8ba4\u6211\u770b\u5230\u4e86\u4ec0\u4e48\uff0c\u6211\u8981\u505a\u7684\u4e0d\u662f&#39\uff1bt\u5b8c\u5168\u75af\u4e86\uff0c\u7136\u540e\u542f\u52a8\u547d\u4ee4\uff0c\u6e05\u9664\u8ddf\u8e2a\u8fd9\u4e9b\u5c1d\u8bd5\u7684\u8868\u3002\u684c\u5b50\u7a7a\u4e86\u3002\u6211\u8ba9\u57c3\u91cc\u514b\u518d\u6b21\u5c1d\u8bd5\u767b\u5f55\uff0c\u6211\u5c4f\u4f4f\u547c\u5438\uff0c\u542c\u7740\u4ed6\u952e\u76d8\u7684\u5494\u55d2\u58f0\u3002\u4e00\u79d2\u949f\u540e\uff0c\u6211\u4eec\u4ea7\u54c1\u7684\u4eea\u8868\u76d8\u51fa\u73b0\u5728\u4ed6\u7684\u5c4f\u5e55\u4e0a&#34;\u6211&#39\uff1b\u6211\u52a0\u5165&#34; \u4ed6\u558a\u9053\u3002\n\u5f53\u6211\u542c\u5230\u8eab\u540e\u6709\u4eba\u8bf4&#34\uff1b\u6211\u4e5f\u521a\u8fdb\u53bb\u3002\u5b83\u73b0\u5728\u8d77\u4f5c\u7528\u4e86\u3002\"\n\u4e0a\u5348\u5269\u4e0b\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u5728\u623f\u95f4\u91cc\u8d70\u6765\u8d70\u53bb\u56de\u7b54\u95ee\u9898\uff0c\u5076\u5c14\u8e72\u5728\u4e00\u95f4\u5c0f\u9694\u95f4\u540e\u9762\uff0c\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u91cd\u65b0\u64e6\u62ed\u6570\u636e\u5e93\u8868\u548c\u989d\u5934\u4e0a\u7684\u6c57\u6c34\uff0c\u5bf9\u8fd9\u79cd\u8352\u8c2c\u7684\u60c5\u51b5\u5bf9\u81ea\u5df1\u54a7\u5634\u5927\u7b11\u3002\u5c3d\u7ba1\u6211\u4eec\u9669\u4e9b\u906d\u9047\u707e\u96be\uff0c\u4f46\u8bad\u7ec3\u6700\u7ec8\u8fd8\u662f\u53d6\u5f97\u4e86\u6210\u529f\u3002\n\u5b83&#39\uff1b\u4ece\u90a3\u5929\u8d77\u5df2\u7ecf\u4e09\u5e74\u534a\u4e86\uff0c\u611f\u89c9\u65f6\u95f4\u4e00\u7728\u773c\u5c31\u8fc7\u53bb\u4e86\u3002\n\u5468\u516d\u7684\u4eb2\u81ea\u57f9\u8bad\u8bfe\u7a0b\u5df2\u7ecf\u88ab\u6bcf\u6708\u7684\u529f\u80fd\u66f4\u65b0\u7f51\u7edc\u7814\u8ba8\u4f1a\u3001\u4e00\u4e2a\u677e\u5f1b\u7684\u793e\u533a\u3001\u6bcf\u4e24\u5468\u4e00\u6b21\u7684\u5ba2\u6237\u5165\u804c\u7535\u8bdd\u548c\u4e00\u4e2a\u4f18\u79c0\u7684\u6587\u6863\u7f51\u7ad9\u6240\u53d6\u4ee3\uff0c\u8be5\u7f51\u7ad9\u652f\u6301\u5168\u74031500\u591a\u4e2aMSP\u548c\u6570\u4e07\u7528\u6237\u3002\u8be5\u4ea7\u54c1\u6700\u521d\u53ea\u662f\u4e00\u7897\u6570\u5b57\u610f\u5927\u5229\u9762\uff0c\u73b0\u5728\u5df2\u7ecf\u8f6c\u53d8\u4e3a\u4e00\u7cfb\u5217\u7ecf\u8fc7\u826f\u597d\u6d4b\u8bd5\u7684\u5fae\u670d\u52a1\uff0c\u53ef\u4ee5\u6269\u5c55\u5230\u6536\u96c6\u6570\u5341TB\u7684\u914d\u7f6e\u6570\u636e\u3002\u6211\u4eec\u7684\u5f85\u529e\u4e8b\u9879\u8fc7\u53bb\u5f88\u77ed\uff0c\u53ef\u4ee5\u653e\u5728\u767d\u677f\u4e0a\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u7ba1\u7406\u56e2\u961f\u5236\u5b9a\u4e86\u4e00\u5e74\u7684\u8def\u7ebf\u56fe\uff0c\u5e76\u6bcf\u5929\u4e0e\u7528\u6237\u4f1a\u9762\uff0c\u6536\u96c6\u53ef\u7528\u6027\u53cd\u9988\u3002\u6211\u4eec\u7684\u5de5\u7a0b\u56e2\u961f\u5df2\u7ecf\u6210\u957f\u4e3a\u5177\u6709\u6210\u719f\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u7684\u4ea4\u4ed8\u673a\u5668\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u4eca\u5929\u770b\u5230\u7684\u662f\u56e2\u961f\u548c\u516c\u53f8\uff0c\u4f60\u76f8\u4fe1\u6211\u4eec\u77e5\u9053\u6211\u4eec\u4e00\u76f4\u5728\u505a\u4ec0\u4e48\u662f\u53ef\u4ee5\u539f\u8c05\u7684\u3002\u4f60&#39\uff1bd\u5f53\u7136\u4e5f\u5f88\u96be\u60f3\u8c61\u65e9\u671f\u7684\u4e8b\u7269\u662f\u591a\u4e48\u8106\u5f31\u548c\u5351\u5fae\u3002\u6709\u65f6\u6211\u81ea\u5df1\u751a\u81f3\u96be\u4ee5\u5ba2\u89c2\u5730\u8bb0\u4f4f\u5b83\uff0c\u800c\u6211\u5f53\u65f6\u5c31\u5728\u90a3\u91cc\uff01\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u559c\u6b22\u8fd9\u4e2a\u6545\u4e8b\u3002\u5b83\u5e2e\u52a9\u6211\u66f4\u6e05\u695a\u5730\u8bb0\u5f97\uff0c\u5c3d\u7ba1\u6000\u65e7\u7684\u8ff7\u96fe\u662f\u73ab\u7470\u8272\u7684\u3002\n\u4ed6\u4eec\u5f88\u8270\u96be\uff0c\u56e0\u4e3a\u4e00\u5207\u90fd\u5f88\u4e0d\u786e\u5b9a\u3002\u5f53\u6211\u52a0\u5165\u65f6\uff0c\u6211\u4eec\u53ea\u6709\u4e94\u4e2a\u4eba\uff1a\u4e24\u4f4d\u521b\u59cb\u4eba\u3001\u4e00\u4f4d\u9500\u552e\u4eba\u5458\u3001\u4e00\u4f4d\u5de5\u7a0b\u5e08\uff0c\u4ed6\u5728\u8fc7\u53bb\u516d\u4e2a\u6708\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\u4e00\u76f4\u5728\u6784\u5efa\u6838\u5fc3\u4ea7\u54c1\u7684\u539f\u578b\uff0c\u8fd8\u6709\u6211\u3002\u6211\u4eec\u6ca1\u6709&#39\uff1b\u6ca1\u6709\u4efb\u4f55\u8d44\u91d1\uff0c\u4ea7\u54c1\u51e0\u4e4e\u6ca1\u6709\u529f\u80fd\uff0c\u6211\u4eec\u6ca1\u6709&#39\uff1b\u6211\u4eec\u8fd8\u6ca1\u6709\u4ed8\u8d39\u5ba2\u6237\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u9700\u8981\u505a\u4ec0\u4e48\u624d\u80fd\u5f97\u5230\u4ed6\u4eec\u3002\n\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u9020\u6210\u4e86\u7d27\u5f20\u5c40\u52bf\u3002\u9500\u552e\u4eba\u5458\u5e0c\u671b\u6784\u5efa\u66f4\u591a\u7684\u6570\u636e\u91c7\u96c6\u5668\uff0c\u521b\u59cb\u4eba\u5e0c\u671b\u4e13\u6ce8\u4e8e\u5e73\u53f0\u96c6\u6210\uff0c\u6211\u4eec\u5de5\u7a0b\u5e08\u5e0c\u671b\u8fc7\u5ea6\u8bbe\u8ba1\u7528\u4e8e\u5b58\u50a8IT\u914d\u7f6e\u7684\u56fe\u5f62\u6570\u636e\u5e93\u3002\u6211\u4eec\u6b63\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u5de5\u4f5c\uff0c\u5e76\u5728\u8fd9\u4e4b\u540e\u521b\u9020\u4e86\u4e00\u4e2a\u6280\u672f\u503a\u52a1\u7684\u575f\u5893\u3002\u6bcf\u4e2a\u4eba\u90fd\u5f88\u5173\u5fc3\uff0c\u6bcf\u4e2a\u4eba\u90fd\u60f3\u8ba9\u5b83\u53d1\u6325\u4f5c\u7528\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5f88\u806a\u660e\u548c\u4efb\u6027\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u5f00\u59cb\u671d\u7740\u6211\u4eec\u8ba4\u4e3a\u9700\u8981\u7684\u65b9\u5411\u52aa\u529b\u3002\u6211\u8ba4\u4e3a\u8fd9\u79cd\u60c5\u51b5\u5728\u65e9\u671f\u521b\u4e1a\u516c\u53f8\u4e2d\u7ecf\u5e38\u53d1\u751f\uff0c\u53ea\u6709\u90a3\u4e9b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e78\u5b58\u4e0b\u6765\u7684\u521b\u4e1a\u8005\u6709\u7740\u5f3a\u70c8\u7684\u613f\u666f\uff0c\u5e76\u4e14\u80fd\u591f\u5c06\u8fd9\u79cd\u613f\u666f\u63a8\u9500\u7ed9\u65e9\u671f\u56e2\u961f\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u9648\u8bcd\u6ee5\u8c03\uff0c\u539f\u56e0\u662f\uff1a\u5982\u679c\u53ef\u4ee5&#39\uff1b\u4e0d\u8981\u90fd\u671d\u540c\u4e00\u4e2a\u65b9\u5411\u5212\u8239\uff0c\u4f60\u8d62\u4e86&#39\uff1b\u6211\u6ca1\u6709\u53d6\u5f97\u4efb\u4f55\u8fdb\u5c55\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u521b\u59cb\u4eba\u786e\u5b9e\u5bf9\u4ed6\u4eec\u60f3\u8981\u5f00\u53d1\u7684\u4ea7\u54c1\u6709\u7740\u5f3a\u5927\u7684\u613f\u666f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u80fd&#39\uff1b\u6211\u4eec\u65e0\u6cd5\u5728\u4e00\u591c\u4e4b\u95f4\u5b8c\u6210\u8fd9\u4e00\u5207\uff0c\u6240\u4ee5\u611f\u89c9\u5de5\u7a0b\u4f18\u5148\u7ea7\u51e0\u4e4e\u6bcf\u5929\u90fd\u5728\u53d8\u5316\u3002\u6211\u4eec\u6709\u5f88\u591a\u529f\u80fd\u53ea\u662f\u5b9e\u73b0\u4e86\u4e00\u534a\uff0c\u5f88\u8106\u5f31\uff0c\u6216\u8005\u6709\u7f3a\u9677\u3002\u6211\u4eec\u4e0d\u65ad\u5730\u6572\u6253\u4ea7\u54c1\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u6162\u6162\u5730\u5c06\u5176\u6572\u5b9a\uff0c\u540c\u65f6\u4ed6\u4eec\u79ef\u6781\u5730\u4e0e\u6f5c\u5728\u5ba2\u6237\u4f1a\u9762\uff0c\u5e76\u8bd5\u56fe\u5b8c\u6210\u6211\u4eec\u7684\u7b2c\u4e00\u7b14\u4ea4\u6613\u3002\u6211\u4eec\u8bd5\u56fe\u5728\u4e2d\u95f4\u76f8\u9047-\u5f97\u5230\u4ea7\u54c1\u5230& 34\uff1b\u8db3\u591f\u6709\u7528&#34\uff1b\u53bb\u6709\u4eba\u613f\u610f\u4ed8\u94b1\u7684\u5730\u65b9\u3002\n\u6211\u8bb0\u5f97\u5f53\u6211\u4eec\u8fbe\u6210\u7b2c\u4e00\u7b14\u4ea4\u6613\u65f6\uff0c\u6211\u76ee\u77aa\u53e3\u5446\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u5f53\u65f6\u7684\u4ea7\u54c1\u6709\u591a\u7b28\u91cd\u548c\u8106\u5f31\u3002\u4f46\u6211\u610f\u8bc6\u5230\uff0c\u5927\u591a\u6570\u65e9\u671f\u7684\u5ba2\u6237\u5e76\u6ca1\u6709\u8d2d\u4e70\u4ea7\u54c1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8d2d\u4e70\u7684\u662f\u6211\u4eec\u8bd5\u56fe\u6784\u5efa\u7684\u613f\u666f\u3002\u6211\u4eec\u6700\u65e9\u7684\u5ba2\u6237\u5c31\u50cf\u662f\u56e2\u961f\u7684\u5ef6\u4f38\u3002\u4e00\u6ef4\u9a8c\u8bc1\u8ba9\u4eba\u4e0a\u763e\uff0c\u5b83\u8ba9\u6211\u4eec\u6301\u7eed\u4e86\u66f4\u957f\u7684\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u65ad\u542c\u53d6\u5ba2\u6237\u7684\u610f\u89c1\uff0c\u5e76\u4e0d\u65ad\u5bf9\u4ea7\u54c1\u8fdb\u884c\u8fed\u4ee3\u3002\u4ea7\u54c1\u8d8a\u6765\u8d8a\u597d\uff0c\u65b0\u5ba2\u6237\u7684\u70b9\u6ef4\u53d8\u6210\u4e86\u6d93\u6d93\u7ec6\u6d41\u3002\n\u5728\u90a3\u4e9b\u65e5\u5b50\u91cc\uff0c\u5de5\u7a0b\u5b66\u9762\u4e34\u7740\u5de8\u5927\u7684\u538b\u529b\u3002\u6ca1\u6709\u4eba\u786e\u5207\u5730\u77e5\u9053\u6211\u4eec\u4e0b\u4e00\u6b65\u5e94\u8be5\u5543\u6389\u8def\u7ebf\u56fe\u7684\u54ea\u4e00\u90e8\u5206\uff0c\u4ee5\u53ca\u5728\u6709\u4eba\u8d2d\u4e70\u5b83\u4e4b\u524d\u5b83\u9700\u8981\u6709\u591a\u7cbe\u81f4\uff0c\u800c\u4e14\u6211\u4eec\u6709\u5927\u7ea62%\u7684\u5e26\u5bbd\u6765\u5b8c\u6210\u961f\u5217\u4e2d\u7684\u6240\u6709\u4efb\u52a1\u3002\n\u4e00\u5f00\u59cb\uff0c\u6211\u5e38\u5e38\u544a\u8bc9\u81ea\u5df1\uff0c&#34\uff1b\u4e00\u65e6\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c31\u53ef\u4ee5\u7a0d\u5fae\u5c11\u8e29\u6cb9\u95e8\u4e86&#34; \u8fd9\u662f\u4e00\u79cd\u8c2c\u8bba\u3002\u6211\u4eec\u76ee\u524d\u9762\u4e34\u7684\u6311\u6218\u53ea\u662f\u63a9\u76d6\u4e86\u5b83\u80cc\u540e\u65e0\u4f11\u6b62\u7684\u672a\u6765\u6311\u6218\u3002\u4e00\u65e6\u6211\u4eec\u5f97\u5230\u4e86\u7b2c\u4e00\u6279\u5ba2\u6237\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4ece\u5355\u7eaf\u7684&#34\uff1b\u6267\u884c\u548c\u4ea4\u4ed8&#34\uff1b\u6a21\u5f0f\u4e3a&#34\uff1b\u7ee7\u7eed\u8fd9\u6837\u505a\uff0c\u4f46\u4e5f\u8981\u4fee\u590d\u6240\u6709\u8fd9\u4e9b\u8be5\u6b7b\u7684\u9519\u8bef\uff0c\u5426\u5219\u6211\u4eec\u53ef\u80fd\u4f1a\u5931\u53bb\u8fd9\u4e2a\u5ba2\u6237&#34\uff1b\u6a21\u5f0f\n\u516c\u5e73\u5730\u8bf4\uff0c\u8fd9\u79cd\u538b\u529b\u662f\u81ea\u6211\u65bd\u52a0\u7684\uff0c\u800c\u4e0d\u662f\u6709\u5bb3\u7684\u5de5\u4f5c\u73af\u5883\u3002\u6211\u4eec\u4e0d\u60f3\u8ba9\u6211\u4eec\u7684\u961f\u53cb\u5931\u671b\uff0c\u8fd9\u8ba9\u6211\u4eec\u611f\u89c9\u6574\u4e2a\u4e16\u754c\u90fd\u5728\u6211\u4eec\u7684\u80a9\u4e0a\uff0c\u5f53\u4ea7\u54c1\u574f\u4e86\u7684\u65f6\u5019\uff0c\u6211\u7684\u7126\u8651\u75c7\u53d1\u4f5c\u7684\u6bd4\u4f8b\u8d85\u8fc7\u4e86\u6211\u5e94\u5f97\u7684\u6bd4\u4f8b\u3002\u6709\u4e00\u6b21\uff0c\u4e00\u4f4d\u65b0\u5ba2\u6237\u610f\u5916\u5730\u5c0650000\u4e2a\u7528\u6237\u7684CSV\u5bfc\u5165\u5230\u4ed6\u7684\u5b9e\u4f8b\u4e2d\uff0c\u70e7\u7a7f\u4e86AWS\u670d\u52a1\u9650\u5236\uff0c\u5e76\u5728\u4e0b\u5348\u5b8c\u5168\u6302\u65ad\u4e86\u8be5\u5b9e\u4f8b\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u6709\u4e00\u6bb5\u56db\u5929\u7684\u65f6\u95f4\uff0c\u51cc\u66683\u70b9\uff0c\u6211\u88ab\u76d1\u63a7\u8b66\u62a5\u5435\u9192\uff0c\u4e0d\u5f97\u4e0d\u722c\u4e0b\u5e8a\u8ba9\u5e94\u7528\u91cd\u65b0\u4e0a\u7ebf\uff0c\u7136\u540e\u4e00\u6574\u5929\u90fd\u5728\u7ea0\u7ed3\u4e8e\u5bfb\u627e\u6839\u672c\u539f\u56e0\u3002\u8fd9\u4e9b\u90fd\u662f\u5177\u6709\u6311\u6218\u6027\u4f46\u975e\u5e38\u5b9d\u8d35\u7684\u5b66\u4e60\u7ecf\u5386\u3002\u6ca1\u6709\u4ec0\u4e48\u6bd4\u4e00\u5468\u7684\u7761\u7720\u5265\u593a\u548c\u538b\u529b\u66f4\u80fd\u8ba9\u4f60\u611f\u53d7\u5230\u89c2\u5bdf\u529b\u7684\u91cd\u8981\u6027\u4e86\u3002\n\u5c3d\u7ba1\u8fd9\u662f\u4e00\u4e2a\u538b\u529b\u9505\uff0c\u4f46\u6ca1\u6709\u4ec0\u4e48\u6bd4\u548c\u65e9\u671f\u56e2\u961f\u4e00\u8d77\u5728\u6218\u58d5\u91cc\u66f4\u6709\u8da3\u7684\u4e86\u3002\u6bcf\u4e2a\u4eba\u90fd\u5728\u52aa\u529b\u5de5\u4f5c\u3002\u8fd9\u4e00\u613f\u666f\u96c4\u5fc3\u52c3\u52c3\uff0c\u4ee4\u4eba\u5174\u594b\uff0c\u611f\u89c9\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u5176\u4ed6\u4eba\u80fd\u591f\u770b\u5230\u7684\u672a\u6765\u3002\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e9b\u771f\u6b63\u4ece\u4ea7\u54c1\u4e2d\u83b7\u5f97\u4ef7\u503c\u7684\u5ba2\u6237\uff0c\u8fd9\u771f\u662f\u4ee4\u4eba\u632f\u594b\u3002\n\u5728\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e9b\u52a8\u529b\u5e76\u7b79\u96c6\u4e86\u4e00\u4e9b\u8d44\u91d1\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u53d1\u5c55\u56e2\u961f\u3002\u5f53\u65f6\u6211\u4eec\u96c7\u4f63\u7684\u6700\u521d\u51e0\u4e2a\u4eba\u603b\u662f\u6765\u81ea\u6211\u4eec\u7684\u4e2a\u4eba\u7f51\u7edc\u3002\u4ed6\u4eec\u8981\u4e48\u662f\u6211\u4eec\u5728\u5408\u4f5c\u7a7a\u95f4\u9047\u5230\u7684\u4eba\uff0c\u5df2\u7ecf\u548c\u6211\u4eec\u5546\u91cf\u8fc7\u4e86\uff0c\u8981\u4e48\u662f\u8001\u670b\u53cb\u6216\u719f\u4eba\u3002\n\u4e00\u65e6\u6211\u4eec\u53d8\u5f97\u66f4\u5927\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u5728\u6211\u4eec\u7684\u7f51\u7edc\u4e4b\u5916\u62db\u8058\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u56f0\u96be\u548c\u8017\u65f6\u7684\u8fc7\u7a0b\uff08\u5c24\u5176\u662f\u5bf9\u4e8e\u5de5\u7a0b\u62db\u8058\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7f16\u5199\u5de5\u4f5c\u7533\u8bf7\u3001\u53d1\u5e03\u804c\u4f4d\u5e7f\u544a\u3001\u719f\u6089\u7533\u8bf7\u4eba\u8ddf\u8e2a\u7cfb\u7edf\uff0c\u5e76\u4f7f\u6211\u4eec\u7684\u9762\u8bd5\u5faa\u73af\u6b63\u5f0f\u5316\u3002\u6211\u4eec\u82b1\u4e86\u516d\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u627e\u5230\u7b2c\u4e00\u4efd\u7f51\u7edc\u5de5\u7a0b\u4ee5\u5916\u7684\u5de5\u4f5c\u3002\u5728\u90a3\u4e4b\u524d\uff0c\u6211\u4eec\u6709\u4e24\u4f4d\u5019\u9009\u4eba\u8fdb\u5165\u5f55\u7528\u9636\u6bb5\uff0c\u5374\u53d1\u73b0\u81ea\u5df1\u5e76\u4e0d\u662f&#39\uff1b\u6211\u5bf9\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\u4e0d\u662f\u90a3\u4e48\u8ba4\u771f\uff0c\u4e00\u76f4\u5728\u901a\u8fc7\u62db\u8058\u6e20\u9053\u8fdb\u884c\u7ec3\u4e60\uff0c\u5e76\u5229\u7528\u6211\u4eec\u7684\u62a5\u4ef7\u4f5c\u4e3a\u7b79\u7801\u3002\u8fd9\u662f\u4e00\u6b21\u5f88\u597d\u7684\u5b66\u4e60\u7ecf\u5386\uff0c\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53d7\u8005\u5374\u8ba9\u4eba\u6cc4\u6c14\u3002\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u5c24\u5176\u662f\u5bf9\u65f6\u95f4\u548c\u7cbe\u529b\u6709\u9650\u7684\u5c0f\u578b\u521d\u521b\u516c\u53f8\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u5728\u6211\u4eec\u5efa\u7acb\u4e86\u6c42\u804c\u6e20\u9053\uff0c\u516c\u53f8\u7684\u5f62\u8c61\u5f00\u59cb\u589e\u957f\u4e4b\u540e\uff0c\u62db\u8058\u53d8\u5f97\u66f4\u5bb9\u6613\u4e86\u3002\u4e00\u65e6\u6211\u4eec\u96c7\u4f63\u4e86\u4e00\u4e9b\u53ef\u9760\u7684\u4eba\uff0c\u6211\u4eec\u7684\u96c6\u4f53\u5173\u7cfb\u7f51\u5c31\u6269\u5927\u4e86\uff0c\u6211\u4eec\u53c8\u5f00\u59cb\u5f97\u5230\u63a8\u8350\u3002\n\u968f\u7740\u56e2\u961f\u7684\u6210\u957f\uff0c\u6211\u4eec\u6240\u6709\u7684\u5185\u90e8\u548c\u5916\u90e8\u6d41\u7a0b\u90fd\u5f00\u59cb\u4e0d\u65ad\u53d1\u5c55\u3002\u56e2\u961f\u4e2d\u6709\u66f4\u591a\u7684\u4eba\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u66f4\u9ad8\u6548\u7684\u65b9\u5f0f\u8ba9\u4fe1\u606f\u5728\u516c\u53f8\u5185\u5916\u4f20\u64ad\u3002\u6211\u4eec\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\uff1a\u6539\u53d8\u56e2\u961f\u548c\u90e8\u95e8\u7684\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u786e\u4fdd\u6240\u6709\u4f1a\u8bae\u90fd\u6709\u660e\u786e\u7684\u76ee\u7684\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u8282\u594f\u5b89\u6392\uff0c\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u54ea\u79cd\u6c9f\u901a\u6e20\u9053\u662f\u4e3a\u4e86\u4ec0\u4e48\uff08\u4ec0\u4e48\u65f6\u5019\u653e\u677e\uff0c\u4ec0\u4e48\u65f6\u5019\u53d1\u90ae\u4ef6\uff0c\u4ec0\u4e48\u65f6\u5019\u505a\u5408\u6d41\u9875\u9762\uff09\uff0c\u8c03\u6574\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u4efb\u52a1\u8ddf\u8e2a\u5de5\u5177\uff0c\u4ee5\u66f4\u597d\u5730\u914d\u5408\u6211\u4eec\u7684\u5408\u4f5c\u65b9\u5f0f\u3002\u90a3\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u95e8\u827a\u672f\uff0c\u56e0\u4e3a\u6539\u53d8\u4e00\u4e2a\u8fc7\u7a0b\u4f1a\u5728\u56e2\u961f\u8c03\u6574\u65f6\u4ea7\u751f\u5fc3\u7406\u6469\u64e6\uff0c\u6240\u4ee5\u4f60\u53d1\u73b0\u4f60\u5fc5\u987b\u5e73\u8861\u6539\u53d8\u7684\u5fc5\u8981\u6027\u548c\u9891\u7387\uff0c\u4ee5\u53ca\u4f60\u8bd5\u56fe\u89e3\u51b3\u7684\u6c9f\u901a\u74f6\u9888\u7684\u4e25\u91cd\u6027\u3002\u5173\u952e\u662f\u8981\u5b9a\u671f\u4e0e\u56e2\u961f\u8fdb\u884c\u53cd\u601d\uff08\u56de\u987e\u662f\u6700\u597d\u7684\u65f6\u673a\uff09\uff0c\u5e76\u5c31\u5c0f\u578b\u5b9e\u9a8c\u6027\u8fed\u4ee3\u5728\u56e2\u961f\u4e2d\u5efa\u7acb\u5171\u8bc6&#34;\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u4e24\u5468\u5185\u5c1d\u8bd5\u4e00\u4e0b\u8fd9\u4e2a\u6539\u53d8\uff0c\u5982\u679c\u5b83&#39\uff1b\u8fd9\u4e0d\u7ba1\u7528\uff0c\u6211\u4eec&#39\uff1b\u6211\u8bd5\u8bd5\u522b\u7684&#34;\n\u6211\u4eec\u5f00\u59cb\u6162\u6162\u5730\u4ece\u56e2\u961f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u5de5\u7a0b\u5e08\u90fd\u77e5\u9053\u6240\u6709\u7684\u4ee3\u7801\uff0c\u8f6c\u53d8\u4e3a\u56e2\u961f\u4e2d\u5c11\u6570\u62e5\u6709\u8fd9\u4e9b\u9057\u7559\u77e5\u8bc6\u7684\u4eba\uff0c\u8f6c\u53d8\u4e3a\u56e2\u961f\u4e2d\u6ca1\u6709\u4eba\u77e5\u9053\u6240\u6709\u7684\u4ee3\u7801\u3002\u6b63\u662f\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u65e9\u671f\u7684\u4e00\u4e9b\u5de5\u7a0b\u51b3\u7b56\u548c\u4ee3\u7801\u5f00\u59cb\u770b\u8d77\u6765\u5b8c\u5168\u75af\u72c2\u3002\u8fd9\u662f\u4e00\u6b21\u8d85\u51e1\u7684\u4f53\u9a8c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u95ee\u9898\u5f80\u5f80\u662f\u6211\u81ea\u5df1\u9020\u6210\u7684\u3002\u51e0\u5e74\u524d\uff0c\u5728\u8003\u8651\u8bbe\u8ba1\u6298\u8877\u65b9\u6848\u65f6\uff0c\u6211\u544a\u8bc9\u81ea\u5df1\uff0c&#34\uff1b\u5982\u679c\u6211\u4eec\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898&#34; \u679c\u7136\uff0c\u6211\u4eec\u7ec8\u4e8e\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff01\n\u8fd9\u8ba9\u6211\u610f\u8bc6\u5230\u5f00\u53d1\u8fc7\u7a0b\u662f\u591a\u4e48\u8fdb\u5316\u3002\u968f\u7740\u6211\u4eec\u7684\u5efa\u8bbe\uff0c\u6211\u4eec\u6b63\u5728\u6162\u6162\u5b8c\u5584\u6211\u4eec\u5bf9\u4ea7\u54c1\u5982\u4f55\u4e3a\u5ba2\u6237\u5e26\u6765\u4ef7\u503c\u7684\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4fdd\u8bc1\u4f1a\u6709\u4e00\u4e9b\u6211\u4eec\u4e0d\u518d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u4f18\u5148\u7ea7\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6216\u8005\u6211\u4eec\u8fc7\u5ea6\u8bbe\u8ba1\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u786e\u5b9a\u8be5\u529f\u80fd\u4f1a\u671d\u7740\u4ec0\u4e48\u65b9\u5411\u53d1\u5c55\u3002\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u80fd\u5e94\u8be5\u653e\u5f03\u90a3\u4e9b\u53ea\u67090.5%\u7684\u5ba2\u6237\u7fa4\u5728\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u6216\u8005\u6dfb\u52a0\u6d4b\u8bd5\u5e76\u91cd\u6784\u90a3\u4e9b&#39\uff1b\u6211\u4eec\u5f88\u96be\u4e0e\u4e4b\u5408\u4f5c\uff0c\u4f46\u6211\u4eec\u7684\u4ea7\u54c1\u56e2\u961f\u5e0c\u671b\u6211\u4eec\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u8def\u7ebf\u56fe\u627f\u8bfa\u3002\u6ca1\u6709\u8db3\u591f\u7684\u5e26\u5bbd\u5728\u4e24\u4e2a\u65b9\u5411\u90fd\u80fd\u5b8c\u7f8e\u6267\u884c\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u627e\u5230\u4e00\u4e2a\u6298\u8877\u65b9\u6848\u3002\u4e0d\u8981\u56e0\u6b64\u800c\u6cae\u4e27\uff01\u8bb0\u4f4f\uff1a\u6bcf\u4e2a\u4eba\u90fd\u5728\u5411\u4ed6\u4eec\u8ba4\u4e3a\u5bf9\u516c\u53f8\u6709\u5229\u7684\u65b9\u5411\u52aa\u529b\u3002\u4ea7\u54c1\u56e2\u961f\uff08\u4ee5\u53ca\u5de5\u7a0b\u90e8\u95e8\u4ee5\u5916\u7684\u6240\u6709\u90e8\u95e8\uff09\u6700\u7ec8\u60f3\u8981\u7684\u90fd\u662f\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u2014\u2014\u5feb\u4e50\u7684\u5ba2\u6237\u548c\u6210\u529f\u7684\u7ed3\u679c\u2014\u2014\u56e0\u6b64\uff0c\u8ba9\u4ed6\u4eec\u610f\u8bc6\u5230\u4ed6\u4eec\u770b\u4e0d\u5230\u7684\u5730\u96f7\uff0c\u540c\u65f6\u4ed4\u7ec6\u503e\u542c\uff0c\u786e\u4fdd\u4f60\u6ca1\u6709\u5ffd\u89c6\u5927\u5c40\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u5b83&#39\uff1b\u5f53\u4eba\u4eec\u611f\u5230\u88ab\u503e\u542c\u65f6\uff0c\u5efa\u7acb\u5171\u8bc6\u5c31\u5bb9\u6613\u591a\u4e86\u3002\n\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u6211\u62ac\u8d77\u5934\uff0c\u610f\u8bc6\u5230\u6211\u73b0\u5728\u5728\u4e00\u5bb6\u201c\u771f\u6b63\u7684\u516c\u53f8\u201d\u3002\u6211\u4eec\u7b79\u96c6\u4e86\u591a\u8f6e\u8d44\u91d1\uff0c\u56e2\u961f\u4e2d\u6709100\u591a\u4eba\uff0c\u6211\u4eec\u6709\u6570\u5343\u540d\u5ba2\u6237\u3002\u6211\u6bcf\u5468\u4e0e\u5176\u4ed6\u90e8\u95e8\u8d1f\u8d23\u4eba\u4e3e\u884c\u4e00\u6b21\u7ba1\u7406\u5c42\u4f1a\u8bae\uff0c\u5411\u4ed6\u4eec\u4ecb\u7ecd\u56e2\u961fKPI\u7684\u6700\u65b0\u60c5\u51b5\uff0c\u6bcf\u6708\u4e0e\u9996\u5e2d\u8d22\u52a1\u5b98\u548c\u6211\u4eec\u7684\u5de5\u7a0b\u526f\u603b\u88c1\u4e3e\u884c\u4e00\u6b21\u4f1a\u8bae\uff0c\u5ba1\u67e5\u9884\u7b97\u548c\u62db\u8058\u8ba1\u5212\u3002\u6211\u4e0d\u518d\u6709\u90a3\u4e48\u591a\u7684\u7a7a\u95f4\u53bb\u601d\u8003\u4ee3\u7801\u548c\u67b6\u6784\uff0c\u56e0\u4e3a\u6211\u505a\u4e86\u5f88\u591a\u4e00\u5bf9\u4e00\u7684\u5de5\u4f5c\uff0c\u9762\u8bd5\u5019\u9009\u4eba\uff0c\u4e0e\u4ea7\u54c1\u7ba1\u7406\u56e2\u961f\u4f1a\u9762\uff0c\u8ba8\u8bba\u6539\u53d8\u8def\u7ebf\u56fe\u4f18\u5148\u7ea7\u3002\u6362\u8a00\u4e4b\uff0c\u5728\u4e00\u53f0\u8fd0\u8f6c\u826f\u597d\u7684\u673a\u5668\u4e0a\uff0c\u6211\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u5f97\u591a\u7684\u9f7f\u8f6e\uff0c\u5c31\u50cf\u516c\u53f8\u91cc\u5176\u4ed6\u4eba\u4e00\u6837\uff0c\u6b64\u65f6\u6b64\u523b\uff0c\u6211\u4e0d\u518d\u662f\u4efb\u52a1\u5173\u952e\u578b\u7684\u3002\n\u8fd9\u662f\u4e00\u79cd\u82e6\u4e50\u53c2\u534a\u7684\u611f\u89c9\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u5f88\u7f8e\u5999\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u6784\u5efa\u4e86\u4e00\u4e2a\u80fd\u591f\u72ec\u7acb\u5b58\u5728\u7684\u6d41\u7a0b\u548c\u4ea7\u54c1\uff0c\u8fd9\u4e00\u76f4\u662f\u6211\u4eec\u7684\u76ee\u6807\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u611f\u5230\u4e00\u79cd\u5931\u843d\u611f\u3002\u6211\u8fde\u7eed10\u4e2a\u5c0f\u65f6\u9519\u8fc7\u4e86\u9ed1\u5ba2\u653b\u51fb\u7684\u65e5\u5b50\uff0c\u90a3\u65f6\u79ef\u538b\u7684\u6587\u4ef6\u653e\u5728\u767d\u677f\u4e0a\uff0c\u6574\u4e2a\u56e2\u961f\u53ef\u4ee5\u56f4\u5750\u5728\u4e00\u5f20\u684c\u5b50\u4e0a\u3002\u6211\u6ca1\u6709\u4eb2\u81ea\u8ba4\u8bc6\u516c\u53f8\u91cc\u7684\u6bcf\u4e00\u4e2a\u4eba\uff0c\u4e5f\u6ca1\u6709\u8ba4\u51fa\u4f7f\u7528\u6211\u4eec\u4ea7\u54c1\u7684\u6bcf\u4e00\u5bb6\u516c\u53f8\u7684\u540d\u5b57\u3002\u6211\u751a\u81f3\u9519\u8fc7\u4e86\u65e9\u671f\u7684\u4e00\u5207\u662f\u591a\u4e48\u7834\u788e\u548c\u6df7\u4e71\uff0c\u5f53\u65f6\u4e00\u9635\u98ce\u4f3c\u4e4e\u4f1a\u5bfc\u81f4\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u8b66\u62a5\u54cd\u8d77\uff0c\u6216\u8005\u4f60\u9700\u8981\u622a\u65ad\u4e00\u4e2a\u884c\u4e3a\u4e0d\u5f53\u7684\u6570\u636e\u5e93\u8868\uff0c\u4ee5\u9632\u6b62\u4eb2\u81ea\u57f9\u8bad\u8bfe\u7a0b\u6f14\u53d8\u6210\u707e\u96be\u3002\n\u5728\u6211\u804c\u4e1a\u751f\u6daf\u7684\u65e9\u671f\uff0c\u6211\u53ea\u60f3\u6210\u4e3a\u4e00\u5bb6\u9ad8\u589e\u957f\u521d\u521b\u516c\u53f8\u7684\u4e00\u5458\u3002\u6211\u66fe\u7ecf\u8ba4\u4e3a\uff0c\u4e3a\u4e86\u53d6\u5f97\u6210\u529f\uff0c\u4e00\u5bb6\u521d\u521b\u516c\u53f8\u5fc5\u987b\u6b63\u786e\u5730\u505a\u51fa\u7edd\u5927\u591a\u6570\u6218\u7565\u51b3\u7b56\uff0c\u5c31\u597d\u50cf\u5efa\u7acb\u4e00\u5bb6\u4f1f\u5927\u7684\u516c\u53f8\u5c31\u50cf\u8e2e\u7740\u811a\u5c16\u8d70\u8fc7\u4e00\u6761\u94a2\u7d22\u3002\n\u73b0\u5728\u6211\u5df2\u7ecf\u6210\u4e3a\u4e86\u5176\u4e2d\u7684\u4e00\u5458\uff0c\u6211\u76f8\u4fe1\u8fd9\u4e0e\u5176\u8bf4\u662f\u8ba9\u6bcf\u4ef6\u4e8b\u90fd\u6b63\u786e\uff0c\u4e0d\u5982\u8bf4\u662f\u4e13\u6ce8\u4e8e\u4f60\u80fd\u63a7\u5236\u7684\uff1a\u8010\u5fc3\u548c\u575a\u6301\u3002\u65c5\u7a0b\u5f88\u957f\uff0c\u4e00\u8def\u4e0a\u4f60\u4f1a\u9047\u5230\u5f88\u591a\u9ebb\u70e6\u3002\u8fd9\u662f\u4e00\u4e2a\u6ca1\u5b8c\u6ca1\u4e86\u7684\u5faa\u73af\uff0c\u6bcf\u5929\u90fd\u51fa\u73b0\uff0c\u72af\u9519\u8bef\uff0c\u8ba4\u8bc6\u5230\u9519\u8bef\uff0c\u7136\u540e\u628a\u4f60\u5b66\u5230\u7684\u4e1c\u897f\u5e94\u7528\u5230\u7b2c\u4e8c\u5929\u505a\u5f97\u66f4\u597d\u3002\u5982\u679c\u4f60\u60f3\u6700\u5927\u5316\u4f60\u7684\u6210\u529f\u673a\u4f1a\uff0c\u627e\u521b\u59cb\u4eba\uff08\u6216\u8005\u6210\u4e3a\u521b\u59cb\u4eba\uff01\uff09\u4ed6\u4eec\u6709\u8c26\u900a\u548c\u575a\u97e7\u7684\u7cbe\u795e\uff0c\u81f4\u529b\u4e8e\u8fd9\u4e2a\u4e0d\u65ad\u8fdb\u6b65\u7684\u5faa\u73af\u3002\u7136\u540e\uff0c\u6bcf\u5929\u90fd\u9762\u5e26\u5fae\u7b11\uff0c\u51c6\u5907\u597d\u78e8\u78e8\u8e6d\u8e6d\u3002\u51e0\u5e74\u540e\uff0c\u5f53\u4f60\u56de\u9996\u5f80\u4e8b\u65f6\uff0c\u4f60\u4f1a\u60ca\u8bb6\u5730\u53d1\u73b0\u81ea\u5df1\u5df2\u7ecf\u8d70\u4e86\u8fd9\u4e48\u8fdc\u3002\n\u5982\u679c\u4f60\u6b63\u5728\u4e3a\u4f60\u7684\u56e2\u961f\u5bfb\u627e\u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u7406\u6216\u9ad8\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211&#39\uff1b\u6211\u6b63\u5728\u6162\u6162\u5730\u4ece\u6211\u73b0\u5728\u7684\u89d2\u8272\u8fc7\u6e21\u8fc7\u6765\uff0c\u5f88\u60f3\u804a\u5929\uff01", "note_en": "The red text beneath the login form read &#34;Unexpected error.&#34; I was looking over the shoulder of a support technician named Eric who had just tried logging in to our product for the first time. His cubicle looked identical to the other eighty or so scattered around the room except for the custom-built mechanical keyboard with unmarked keycaps and neon-backlight sitting on his desk. We&#39;d been getting along great, but now he was looking back at me with an expression of betrayal on his face that told me exactly what he was thinking: \u201cPlease tell me you haven\u2019t wasted my entire Saturday.\u201d\n I turned around and felt my throat tighten as I saw the same error message appearing all around the room and his colleagues starting to look up in confusion.\n  It was a sweltering Saturday morning in Houston in 2018, and I was in the network operations center for an IT managed service provider (MSP). MSPs manage IT as a service for other businesses - everything from domains and websites, email and cloud services, to security operations and network infrastructure.\n This company was one of our first ever customers and by far the largest. We&#39;d organized a weekend training session for their support team to learn how to use our startup&#39;s web app to rapidly locate information about the systems they managed so that they could respond more efficiently to support requests. But now, only a handful of them could even log in, and as I walked between the cubicles seeing the same error pop up on every screen I passed, I could feel frustration starting to buzz around the room.\n Our CEO waved me over. &#34;Hey man, it looks like we have a problem.&#34; He was projecting calm as always, but his smile was forced. Even though he said \u201cwe\u201d he meant \u201cyou\u201d because it was definitely  my problem. Despite joining the team just a few months ago, I was one of just two software engineers in the entire eight-person company at the time and the only one in the room that day.\n That&#39;s how I found myself desperately hunched over my laptop, hands shaking, searching through a codebase that still felt foreign to me, and wracking my brain. This exact build had worked fine when we were testing it during the past week. What was different about today? Why couldn&#39;t anybody log in?\n Every second felt like an eternity as I tried to keep my rising panic at bay. \u201cFocus, you can do this,\u201d I told myself. The error message was generic and unhelpful in narrowing down the problem, but I knew the issue must have something to do with the login functionality because that&#39;s where people were getting stuck.\n Then it hit me. Today was the first time we&#39;d ever had a large group of people accessing the product simultaneously. I was still learning the codebase, but I knew we had some half-baked security feature setup to prevent too many bad login attempts. Sure enough, when I logged into the database, I could see that we were incorrectly tracking the total number of login attempts. Instead of counting per user, it was counting each attempt across the whole system. Gigantic facepalm.\n I called the other engineer on the team to confirm what I was seeing and that what I was about to do wasn&#39;t completely crazy, and then fired off the command to wipe the table that tracked these attempts. The table emptied. I asked Eric to try to login again and held my breath as I listened to his clacking keyboard. A second later, the dashboard of our product appeared on his screen. &#34;I&#39;m in!&#34; he exclaimed.\n Relief flooded me as I heard someone behind me say &#34;I just got in too. It\u2019s working now.\u201d\n For the rest of the morning, I walked around the room answering questions, and occasionally crouching down behind a cubicle to discreetly re-wipe both the database table and the sweat off my forehead, grinning to myself at the ridiculousness of the situation. Despite our near-disaster, the training ended up being a success.\n It&#39;s been three and a half years since that day, and it feels like that time passed in a blink of an eye.\n In-person Saturday training sessions have been replaced by monthly feature update webinars, a Slack community, bi-weekly customer onboarding calls, and an outstanding documentation site to support more than 1500 MSPs and tens of thousands of users globally. The product that began as a bowl of digital spaghetti has transformed into a collection of well-tested microservices that can scale to collecting tens of terabytes of configuration data. Our backlog used to be so short it fit on a whiteboard. Now our product management team maintains a year-long roadmap and meets with users daily to collect usability feedback. And our engineering team has grown into a delivery machine with a mature software development lifecycle.\n In other words, if you were looking at the team and the company today, you would be forgiven for believing that we knew what we were doing all along. You&#39;d also definitely have trouble imagining just how fragile and humble things in the early days were. Sometimes I even have trouble remembering it objectively myself, and I was there! That&#39;s why I love this story. It helps me remember more clearly despite the rosy haze of nostalgia.\n  They were hard because everything was so uncertain. When I joined, there were just five of us: the two founders, a sales guy, an engineer who had been building out a prototype of the core product over the past six months or so, and me. We didn&#39;t have any funding, the product was barely functional, we didn&#39;t have any paying customers yet, and we didn&#39;t know what we needed to do to get them.\n This uncertainty created tension. The sales guy wanted to build more data collectors, the founders wanted to focus on platform integrations, and we engineers wanted to over engineer a graph database for storing IT configurations. We were working as fast as possible and creating a graveyard of technical debt in our wake. Everybody cared, everybody wanted to make it work, and everybody was smart and headstrong, which meant that we each would start tugging in the direction we thought things needed to go. I assume this happens a lot in early-stage startups, and the only ones that survive this have founders that have a strong vision and can sell that vision to the early team. It&#39;s a cliche for a reason: if you can&#39;t all start rowing in the same direction, you won&#39;t make any forward progress.\n Fortunately, the founders did have a powerful vision for the product they wanted to build. Unfortunately, we couldn&#39;t create it all overnight, so it felt like the engineering priorities shifted almost daily. We had many features that were only half-implemented, brittle, or buggy. We were continually hammering on different parts of the product, slowly beating it into shape, and simultaneously they were actively meeting with prospects and trying to close our first deal. We were trying to meet in the middle -- get the product to &#34;useful enough&#34; to where somebody would be willing to pay for it.\n I remember being dumbstruck when we closed our first deal because I knew just how buggy and brittle the product was at that time. But I realized that most of those early customers weren\u2019t buying because the product worked so much as they were buying into the vision for what we were trying to build. Our earliest customers were like an extension of the team in this way. A drip of validation was addicting, and it sustained us for a little bit longer. So we kept listening to our customers, and kept iterating on the product. The product got better, and the drip of new customers became a trickle.\n In those days, there was tremendous pressure on engineering. Nobody knew for sure which piece of the roadmap we should bite off next and how polished it needed to be until somebody would buy it, and we had about 2% of the bandwidth that we needed to finish all the tasks in our queue anyway.\n In the beginning, I used to tell myself, &#34;as soon as we solve this, we&#39;ll be able to take our foot off the gas just a little bit.&#34; This was a fallacy. The challenge currently facing us was simply obscuring the endless future challenges queued up behind it. Once we got our first couple of customers, we quickly shifted from pure &#34;execution-and-delivery&#34; mode to &#34;keep-doing-that-but-also-fix-all-these-damn-bugs-or-we-might-lose-this-customer&#34; mode.\n In fairness, this pressure was self-imposed versus a toxic work environment. We didn\u2019t want to let our teammates down, and this made it feel like the world was on our shoulders and led to more than my fair share of anxiety attacks when the product broke. One time a new customer imported a CSV of 50,000 users into his instance accidentally, burning through an AWS Service limit and completely hanging the instance up for the afternoon. A few months later, there was a four-day stretch where I was woken up by our monitoring alarm at 3 AM and had to crawl out of bed to get the app back online and then obsess the rest of the day over finding the root cause. These were challenging but invaluable learning experiences. Nothing burns the importance of observability into you more than a week of sleep deprivation and stress.\n Even though it was a pressure cooker, there was nothing more fun than being in the trenches with the early team. Everybody was working so hard. The vision was ambitious and exciting, and it felt like we could see a future that hardly anybody else seemed to be able to see. It was exhilarating to finally have some customers that were truly getting value out of the product.\n After we found some traction and raised some money, we started growing the team. The first few people we hired back then always came from our personal networks. They either were people we encountered at the co-working space, consulting with us already, or they were an old friend or acquaintance.\n Once we got a little bigger, we began hiring outside our networks. That was a lot harder and time-consuming (especially for engineering hiring) because we needed to write job requisitions, advertise positions, get familiar with an applicant tracking system, and formalize our interview loops. It took us six months to land our first outside-of-network engineering hire. Before that, we had two candidates get to the offer stage only to realize that they weren&#39;t that serious about joining our team and had been going through the hiring pipeline for practice and to use our offer as leverage. It was a good learning experience, but it was demoralizing to be on the receiving end of that. Don\u2019t do this, especially to small startups where time and energy are limited. Anyway, hiring got easier after we built out our applicant funnel and the profile of the company started to grow. Once we hired a few solid folks, our collective network grew and we started getting referrals again.\n As the team grew, all of our processes, both internal and external, started evolving constantly. More people on the team meant we needed more efficient ways for information to travel through and out of the company. There were many knobs we experimented with: changing how teams and departments were organized, making sure all meetings had a clear purpose and were scheduled at the right cadence, making sure everybody knew which communication channel was for what (when to Slack versus email versus make a Confluence page), and tweaking how we used our task tracking tools to better align with the way we were working together. There&#39;s an art to it because changing a process causes mental friction as the team adjusts, so you find that you have to balance the necessity and frequency of changes with the severity of the communication bottleneck you are trying to address. The key is just to reflect with the team regularly (retrospectives are the perfect time for this) and build consensus on the team for small, experimental iterations. &#34;Let&#39;s try this change out for the next two weeks, and if it&#39;s not working, we&#39;ll try something else.&#34;\n We started slowly shifting from every engineer on the team knowing everything about all the code, to the minority of the team having that legacy knowledge, to nobody on the team that knew about everything. It was around this point that some engineering decisions and code from the early days started to look completely insane. This was a transcendent experience to have because these were often problems of my own making. Years ago, when considering a design tradeoff I told myself, &#34;if we get to that point, it will be a good problem to have.&#34; And sure enough, we finally got to that point!\n It made me realize just how evolutionary the development process is. As we built, we were slowly refining our understanding of how the product delivered value to our customers. Thus, we were guaranteed to have stuff in there we didn\u2019t need anymore because priorities shifted, or we overengineered something because we weren\u2019t sure what direction the feature would take. We knew that we should probably back out that thing that only 0.5% of the customer base is using, or add tests and refactor that old service that&#39;s become difficult to work with, but our product team wanted us to stay focused on delivering roadmap promises. There was not enough bandwidth to perfectly execute in both directions and so you always have to work out a compromise. Don\u2019t get frustrated by this! Remember: everybody is tugging in the direction they think is right for the company. The product team (and all departments outside of engineering really) want the same overarching thing you want in the end \u2013 happy customers and a successful outcome \u2013 so it\u2019s important to make them aware of land mines they can\u2019t see and at the same time listen carefully to make sure you haven\u2019t lost sight of the larger picture. It&#39;s so much easier to build consensus when people feel heard.\n At some point, I looked up and realized I was now in a \u201creal company\u201d. We\u2019d raised multiple rounds of funding, there were 100+ people on the team, and we had thousands of customers. I had a weekly management meeting with other department heads where I gave an update on my team\u2019s KPIs, and a monthly meeting with the CFO and our VP of Engineering to review the budget and hiring plan. I didn\u2019t have as much headspace to think about code and architecture anymore because I was doing lots of one-on-ones, interviews with candidates, and meeting with the product management team to talk about shifting roadmap priorities. In other words, I had become a much smaller cog in a much more well-oiled machine, and just like everybody else in the company at this point, I wasn\u2019t mission-critical anymore.\n This was such a bittersweet feeling. On the one hand, it was wonderful because it meant we had been successful in building processes and a product together that could stand on their own, which was always the goal. On the other hand, I felt a sense of loss. I missed the days of hacking for 10 hours straight, when the backlog was on a whiteboard and the whole team could fit around one table. I missed personally knowing every single person in the company and recognizing the name of each company using our product. I even missed how broken and messy everything was in the early days when it seemed like a stiff gust of wind could cause an uptime alarm to go off, or you needed to truncate a misbehaving database table to prevent an in-person training session from devolving into a disaster.\n Early in my career, I wanted nothing more than to be part of a high-growth startup company. I used to think that in order to be successful a startup had to get the massive majority of strategic decisions correct, as if building a great company was like tiptoeing your way across a tightrope.\n Now that I\u2019ve actually been a part of one, I\u2019m convinced that it\u2019s much less about getting everything right so much as it is about focusing on what you can control: patience and persistence. The journey is long and you are going to mess up a lot along the way. It\u2019s an endless cycle of showing up every day, making mistakes, recognizing them, and then applying what you\u2019ve learned to do better the next day. If you want to maximize your chances of success, find founders (or be a founder!) that has the humility and fortitude to commit to this endless cycle of getting incrementally better. Then, just show up every day with a smile on your face, ready to grind. When you look back after a few years you\u2019ll be amazed at how far you\u2019ve come.\n  If you are looking for a software engineering manager or senior software engineer for your team, I&#39;m slowly transitioning out of my current role and would love to chat!", "posttime": "2022-02-17 10:29:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5de5\u7a0b\u5e08,early,\u56e2\u961f", "title": "\u65e9\u671f\u5de5\u7a0b\u5e08\u7684\u4e0d\u5e78\u906d\u9047", "title_en": "Misadventures of an early engineer", "transed": 1, "url": "https://www.dylanbarth.com/blog/early-engineer/", "via": "", "real_tags": ["\u5de5\u7a0b\u5e08", "early", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073788, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u89c4\u6a21\u5316\u751f\u4ea7\u517b\u6b96\u8089\u7c7b\u7684\u6311\u6218", "note_en": "Challenges of producing cultivated meat at scale", "posttime": "2022-02-17 10:29:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u4ea7,producing", "title": "\u89c4\u6a21\u5316\u751f\u4ea7\u683d\u57f9\u8089\u9762\u4e34\u7684\u6311\u6218", "title_en": "Challenges of producing cultivated meat at scale", "transed": 1, "url": "https://notes.invertedpassion.com/Goodness/Challenges+of+producing+cultivated+meat+at+scale", "via": "", "real_tags": ["\u751f\u4ea7", "producing"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073787, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Zig\u7f16\u8bd1\u5668\u7684\u5185\u90e8\u4ecb\u7ecd\u3002\u8fd9\u4e9b\u6587\u7ae0\u4ecb\u7ecd\u4e86\u5927\u591a\u6570\u7f16\u8bd1\u5668#34\uff1b\u524d\u7aef&#34\uff1b\u2014\u2014\u4ece\u6e90\u4ee3\u7801\u5230\u673a\u5668\u4ee3\u7801\u751f\u6210\u4e4b\u524d\u7684\u8fc7\u7a0b\u3002\n\u6ce8\u610f\uff1a\u8fd9\u4e9b\u662f\u81ea\u6258\u7ba1\u7f16\u8bd1\u5668\u7684\u5185\u90e8\u6784\u4ef6\uff0c\u4e5f\u79f0\u4e3a&#34\uff1b\u7b2c2\u9636\u6bb5\u548c\u7b2c34\u9636\u6bb5\uff1b\u7f16\u8bd1\u5668\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u5e76\u975e\u6240\u6709Stage2\u7ec4\u4ef6\u90fd\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u4e0e#34\u6df7\u5408\u4f7f\u7528\uff1b\u7b2c1\u9636\u6bb5\u548c\u7b2c34\u9636\u6bb5\uff1b\uff08C/C++\uff09\u7ec4\u4ef6\u3002", "note_en": "An introduction to the internals of the Zig compiler. The articles currentlycover an introduction of most of the compiler &#34;frontend&#34; -- the process fromsource code to just prior to machine code generation.\n Note: These are the internals for the self-hosted compiler, alsoknown as the &#34;stage2&#34; compiler. At the time of writing, not all of the stage2components are in production use and are still mixed with &#34;stage1&#34; (C/C++)components.", "posttime": "2022-02-17 10:28:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9f50\u683c,zig,\u673a\u5668", "title": "\u9f50\u683c", "title_en": "Zig", "transed": 1, "url": "https://mitchellh.com/zig", "via": "", "real_tags": ["\u9f50\u683c", "zig", "\u673a\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073786, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9996\u5148\u5c1d\u8bd5\u4e91\u8ba1\u7b97\uff0c\u5feb\u901f\u3001\u6613\u4e8e\u7ba1\u7406\u3001\u5b89\u5168\u7684Chrome OS\uff0c\u7528\u4e8ePC\u548cMac\u3002Chrome OS Flex\u662f\u4e00\u79cd\u514d\u8d39\u4e14\u53ef\u6301\u7eed\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u4f60\u73b0\u6709\u7684\u8bbe\u5907\u73b0\u4ee3\u5316\u3002\u5b83\u5f88\u5bb9\u6613\u5728\u4f60\u7684\u56e2\u961f\u4e2d\u90e8\u7f72\uff0c\u6216\u8005\u53ea\u662f\u7b80\u5355\u5730\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u770b\u770bcloud first OS\u80fd\u63d0\u4f9b\u4ec0\u4e48\u3002\n\u5728PC\u6216Mac\u4e0a\u4f53\u9a8cChrome OS Flex\u53ea\u9700\u4e00\u4e2aUSB\u9a71\u52a8\u5668\u3002\u53ea\u9700\u8981\u51e0\u5206\u949f\u5c31\u53ef\u4ee5\u51c6\u5907\u597d\uff0c\u6211\u4eec&#39\uff1b\u6211\u4f1a\u966a\u4f60\u8d70\u8fc7\u53bb\u3002\n\u521b\u5efa\u4e00\u4e2a\u53ef\u542f\u52a8\u7684Chrome OS Flex USB\u9a71\u52a8\u5668\uff0c\u5728\u5b89\u88c5\u4e4b\u524d\u5c1d\u8bd5Chrome OS Flex\u3002\n\u51c6\u5907\u597d\u540e\uff0c\u5728PC\u6216Mac\u4e0a\u5b89\u88c5Chrome OS Flex\u4ee5\u66f4\u6362\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u901a\u8fc7USB\u9a71\u52a8\u5668\u6216\u7f51\u7edc\u90e8\u7f72\uff0c\u5c06Chrome OS Flex\u90e8\u7f72\u5230\u7ec4\u7ec7\u4e2d\u7684\u66f4\u591a\u8bbe\u5907\u3002\n\u65e0\u8bba\u4f60\u662f\u5728\u5b66\u4e60Chrome OS\uff0c\u8fd8\u662f\u60f3\u52a0\u901f\u4f60\u7684\u4e91\u7b2c\u4e00OS\u90e8\u7f72\uff0cChrome OS Flex\u90fd\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5bb9\u6613\u3002\n\u5728\u73b0\u6709\u8bbe\u5907\u4e0a\u8f7b\u677e\u5c1d\u8bd5\u4f7f\u7528\u57fa\u4e8e\u4e91\u7684\u7ba1\u7406\u7684\u73b0\u4ee3\u8ba1\u7b97\u3002\u7acb\u5373\u5b89\u88c5Chrome OS Flex\uff0c\u4f53\u9a8c\u9002\u7528\u4e8eMac\u6216PC\u7684Chrome OS\u7684\u597d\u5904\u3002\n\u901a\u8fc7\u4f7f\u7528\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u73b0\u6709\u8bbe\u5907\u8fdb\u884c\u6539\u9020\uff0c\u51cf\u5c11\u7535\u5b50\u6d6a\u8d39\uff0c\u5ef6\u957f\u5176\u4f7f\u7528\u5bff\u547d\u3002\n\u5728\u4e13\u95e8\u6784\u5efa\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72cloud first\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7528\u4e8e\u4fe1\u606f\u4ead\u6216\u6570\u5b57\u6807\u724c\u7b49\u4e13\u7528\u7528\u4f8b\u3002\nChrome Enterprise Upgrade\u89e3\u9501\u4e86Chrome OS Flex\u8bbe\u5907\u7684\u5185\u7f6e\u4e1a\u52a1\u529f\u80fd\u3002\u5728\u57fa\u4e8e\u4e91\u7684\u8c37\u6b4c\u7ba1\u7406\u63a7\u5236\u53f0\u4e2d\uff0c\u4f7f\u7528Chrome Enterprise Upgrade\u4e0eChromebook\u4e00\u8d77\u4fdd\u62a4\u548c\u7ba1\u7406\u5b83\u4eec\u3002\n\u8fdc\u7a0b\u64e6\u9664\u6216\u7981\u7528\u8bbe\u5907\uff0c\u5e76\u542f\u7528\u767b\u5f55\u9650\u5236\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u7559\u5728\u6b63\u786e\u7684\u4eba\u624b\u4e2d\u3002\n\u901a\u8fc7\u6dfb\u52a0\u957f\u671f\u652f\u6301\u6e20\u9053\u9009\u9879\uff0c\u9009\u62e9\u9010\u6b65\u6216\u81ea\u52a8\u63a8\u51fa\u66f4\u65b0\u3002\n\u5728\u8c37\u6b4c\u7ba1\u7406\u63a7\u5236\u53f0\u4e2d\u8fdc\u7a0b\u7ba1\u7406\u8bbe\u5907\uff0c\u4f7f\u7528\u7b2c\u4e09\u65b9UEM\u89e3\u51b3\u65b9\u6848\uff0c\u6216\u4f7f\u7528Chrome\u7b56\u7565API\u8fdb\u884c\u5927\u89c4\u6a21\u7ba1\u7406\u3002\n\u8f93\u5165\u60a8\u7684\u4fe1\u606f\u4ee5\u83b7\u5f97\u5b89\u88c5\u8bf4\u660e\uff0c\u67e5\u770bChrome OS Flex\u8ba4\u8bc1\u8bbe\u5907\uff0c\u5e76\u4e86\u89e3\u6709\u5173\u5df2\u77e5\u95ee\u9898\u7684\u66f4\u591a\u4fe1\u606f\u3002\u5982\u4eca\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5904\u4e8e\u65e9\u671f\u8bbf\u95ee\u9636\u6bb5\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u3002\n\u8c37\u6b4c\u53ef\u80fd\u4f1a\u901a\u8fc7\u4e3a\u4ea7\u54c1\u3001\u89e3\u51b3\u65b9\u6848\u548c\u63d0\u4ea4\u7684\u95ee\u9898\u63d0\u4f9b\u7684\u7535\u8bdd\u53f7\u7801\u4e0e\u6211\u8054\u7cfb\n\u662f\u7684\uff0c\u8bf7\u4e3a\u6211\u6ce8\u518cChrome\u4f01\u4e1a\u7535\u5b50\u90ae\u4ef6\uff0c\u5305\u62ec\u65b0\u95fb\u3001\u4ea7\u54c1\u66f4\u65b0\u3001\u6d3b\u52a8\u4fe1\u606f\u7b49\u3002\u6211\u53ef\u4ee5\u968f\u65f6\u9000\u8ba2\u3002\n\u6b64\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u5904\u4e8e\u5f00\u53d1\u9891\u9053\u7684\u65e9\u671f\u8bbf\u95ee\u9636\u6bb5\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u3002\u8bf7\u9605\u8bfb\u5b89\u88c5\u6307\u5357\u4e86\u89e3\u4e0b\u4e00\u6b65\u3002\n\u67e5\u770b\u5b89\u88c5\u6307\u5357\n\u8c37\u6b4c\u4f7f\u7528cookies\u6765\u63d0\u4f9b\u670d\u52a1\u3001\u4e2a\u6027\u5316\u5e7f\u544a\u548c\u5206\u6790\u6d41\u91cf\u3002\u4f60\u53ef\u4ee5\u968f\u65f6\u5728\u8c37\u6b4c\u8bbe\u7f6e\u4e2d\u8c03\u6574\u9690\u79c1\u63a7\u5236\u3002\n\u6211\u4eec&#39\uff1bI\u2019\u6211\u60f3\u95ee\u51e0\u4e2a\u95ee\u9898\uff0c\u4ee5\u8fdb\u4e00\u6b65\u4e86\u89e3\u60a8\u5728Chrome\u4f01\u4e1a\u7f51\u7ad9\u4e0a\u7684\u4f53\u9a8c\u3002", "note_en": "Try the cloud-first, fast, easy-to-manage, and secure Chrome OS for PCs and Macs. Chrome\u00a0OS\u00a0Flex is a free and sustainable way to modernize devices you already own. It\u2019s easy to deploy across your fleet or simply try it to see what a cloud-first OS has to offer.\n    A USB drive is all you need to experience Chrome OS Flex on your PC or Mac. It only takes a few minutes to get set up, and we&#39;ll walk you through it.\n  Create a bootable Chrome OS Flex USB drive to try Chrome OS Flex prior to installing it.\n  When you\u2019re ready, install Chrome OS Flex on your PC or Mac to replace your operating system.\n  Deploy Chrome OS Flex to more devices in your organization via a USB drive or network deployment.\n  Whether you\u2019re just learning about Chrome OS or looking to accelerate your cloud-first OS deployment, Chrome OS Flex makes it easier than ever.\n  Easily try modern computing with cloud-based management on existing devices. Install Chrome OS Flex now and experience the benefits of Chrome OS for Macs or PCs.\n  Reduce e-waste and extend the life of your existing devices by transforming them with a modern OS.\n  Deploy a cloud-first OS on purpose-built hardware for specialized use cases like kiosks or digital signage.\n  Chrome Enterprise Upgrade unlocks the built-in business capabilities of Chrome OS Flex devices. Use Chrome Enterprise Upgrade to secure and manage them alongside Chromebooks in the cloud-based Google Admin console.\n  Remotely wipe or disable devices and enable sign-in restrictions to ensure data stays in the right hands.\n  Choose to roll out updates gradually or automatically with the added option for long-term support channel.\n      Manage devices remotely in Google Admin console, use 3rd party UEM solutions, or use Chrome Policy API to manage at scale.\n  Enter your information to get directed to installation instructions, see certified devices for Chrome OS Flex, and learn more about known issues. Today, the OS is in early access and you may experience some instability.\n      Google may contact me via the phone number provided for the product, solution, and question submitted\n Yes, sign me up for Chrome Enterprise emails with news, product updates, event information and more. I can unsubscribe at any time.\n    This operating system is still in early access on the dev channel\u2014you may experience some instability. Please read the installation guide for next steps.\n    View the installation guide\n        Google uses cookies to deliver its services, to personalize ads, and to analyze traffic. You can adjust your privacy controls anytime in your  Google settings.\n We&#39;d like to ask a few questions to learn more about your experience with the Chrome Enterprise website.", "posttime": "2022-02-17 10:24:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,\u8c37\u6b4c,google,chrome,release", "title": "\u8c37\u6b4c\u53d1\u5e03Chrome OS Flex", "title_en": "Google Release Chrome OS Flex", "transed": 1, "url": "https://chromeenterprise.google/os/chromeosflex/", "via": "", "real_tags": ["\u53d1\u5e03", "\u8c37\u6b4c", "google", "chrome", "release"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073785, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "3\u5e74\u524d\uff0c\u6211\u5f00\u59cb\u7814\u53d1\u5251\u4e0e\u5251\uff1bRavens\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5728\u7ebf\u591a\u73a9\u5bb6\u6e38\u620f\uff0c\u6539\u7f16\u81ea\u300a\u6211\u7231\u300b\u6218\u7565\u68cb\u76d8\u6e38\u620f\u300a\u6743\u529b\u7684\u6e38\u620f\uff1a\u68cb\u76d8\u6e38\u620f\u300b\uff08\u7b2c\u4e8c\u7248\uff09\uff0c\u7531Christian T.Petersen\u8bbe\u8ba1\uff0c\u7531Fantasy Flight Games\u51fa\u7248\u3002\u622a\u81f32022\u5e742\u6708\uff0c\u6bcf\u5929\u7ea6\u6709500\u540d\u73a9\u5bb6\u805a\u96c6\u5728\u8be5\u5e73\u53f0\u4e0a\uff0c\u81ea\u53d1\u5e03\u4ee5\u6765\uff0c\u5df2\u7ecf\u73a9\u4e862000\u591a\u4e2a\u6e38\u620f\u3002\u5f53\u6211\u505c\u6b62\u79ef\u6781\u5f00\u53d1S&amp\uff1bR\u3001 \u7531\u4e8e\u5f00\u6e90\u793e\u533a\u7684\u52aa\u529b\uff0c\u8be5\u5e73\u53f0\u4ecd\u5728\u589e\u52a0\u65b0\u529f\u80fd\u3002\n\u6211\u5728\u5f00\u53d1S&amp\uff1bR\u3001 \u6211\u60f3\u628a\u6211\u5b66\u5230\u7684\u4e00\u4e9b\u77e5\u8bc6\u5206\u4eab\u7ed9\u53ef\u80fd\u6709\u5174\u8da3\u505a\u7c7b\u4f3c\u9879\u76ee\u7684\u4eba\u3002\u5173\u4e8e\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6709\u5f88\u591a\u8bdd\u8981\u8bf4\uff0c\u4f46\u8fd9\u7bc7\u535a\u6587\u5c06\u91cd\u70b9\u4ecb\u7ecd\u6211\u5982\u4f55\u8bbe\u8ba1\u6e38\u620f\u4e2d\u7684\u7f51\u7edc\u90e8\u5206\u3002\u6211\u5c06\u9996\u5148\u4ee5\u66f4\u6b63\u5f0f\u7684\u65b9\u5f0f\u63cf\u8ff0\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u5c06\u7ee7\u7eed\u89e3\u91ca\u5982\u4f55\u5728s&amp\uff1bR\u3001 \u4ee5\u53ca\u63cf\u8ff0\u6211\u53d1\u73b0\u6216\u60f3\u8c61\u7684\u5176\u4ed6\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5176\u4f18\u70b9\u548c\u4f18\u70b9\uff1b\u6bcf\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\uff0c\u5e76\u603b\u7ed3\u51fa\u6211\u8ba4\u4e3a\u6700\u597d\u7684\u65b9\u6cd5\uff08\u5267\u900f\u8b66\u544a\uff1a\u8fd9\u662f\u6700\u540e\u4e00\u79cd\uff09\ud83d\udc40).\n\u5728\u5355\u4eba\u6e38\u620f\u4e2d\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u751f\u6d3b\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e2d\u3002\u73a9\u5bb6\u7684\u52a8\u4f5c\u5c06\u5e94\u7528\u4e8e\u6e38\u620f\u72b6\u6001\uff0c\u5bf9\u8be5\u6e38\u620f\u72b6\u6001\u7684\u4fee\u6539\u5c06\u53cd\u6620\u5728\u73a9\u5bb6\u7684\u5c4f\u5e55\u4e0a\u3002\u5728\u5728\u7ebf\u591a\u4eba\u6e38\u620f\u73af\u5883\u4e2d\uff0c\u60c5\u51b5\u5c31\u4e0d\u540c\u4e86\u3002\u6bcf\u4e2a\u73a9\u5bb6\u90fd\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u73a9\uff0c\u7535\u8111\u4e0a\u90fd\u6709\u81ea\u5df1\u5f53\u524d\u7684\u6e38\u620f\u4fe1\u606f\uff0c\u5e76\u4e14\u90fd\u6709\u81ea\u5df1\u7684UI\u6765\u663e\u793a\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u3002\n\u7528\u6237\u754c\u9762\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u7a0b\u5e8f\u3002\u3002\u3002\u6e38\u620f\u72b6\u6001\u6e38\u620f\u72b6\u6001\u7528\u6237\u754c\u9762\u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002\u3002\u3002\u6e38\u620f\u72b6\u6001\u67e5\u770b\u5668\u4e0d\u652f\u6301\u5b8c\u6574\u7684SVG 1.1\u3002UI\u6839\u636e\u6e38\u620f\u72b6\u6001\u7684\u672c\u5730\u526f\u672c\u5411\u73a9\u5bb6\u663e\u793a\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u3002\u5ba2\u6237\u7aef\u8d1f\u8d23\u4e0e\u670d\u52a1\u5668\u7684\u901a\u4fe1\uff0c\u65e2\u53d1\u9001\u73a9\u5bb6\u7684\u52a8\u4f5c\uff0c\u53c8\u63a5\u6536\u6709\u5173\u6e38\u620f\u72b6\u6001\u7684\u65b0\u4fe1\u606f\u3002\n\u6211\u4eec\u611f\u5174\u8da3\u7684\u95ee\u9898\u662f\u5982\u4f55\u5c06\u5ba2\u6237\u7aef\u6e38\u620f\u7684\u4e0d\u540c\u672c\u5730\u72b6\u6001\u4e0e\u670d\u52a1\u5668\u7684\u6e38\u620f\u72b6\u6001\u540c\u6b65\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff1a\u5f53\u670d\u52a1\u5668\u5c06\u73a9\u5bb6\u7684\u52a8\u4f5c\u5e94\u7528\u4e8e\u5176\u6e38\u620f\u72b6\u6001\u65f6\uff0c\u5b83\u5fc5\u987b\u5982\u4f55\u5c06\u5bf9\u6e38\u620f\u72b6\u6001\u7684\u4fee\u6539\u4f20\u8fbe\u7ed9\u5ba2\u6237\u7aef\u3002\n\u6700\u660e\u663e\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u4efb\u4f55\u64cd\u4f5c\u5e94\u7528\u4e8e\u6e38\u620f\uff0c\u5e76\u5c06\u6e38\u620f\u72b6\u6001\u7684\u4e0d\u540c\u66f4\u65b0\u4f20\u8f93\u7ed9\u5ba2\u6237\u7aef\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5b83\u7684\u4f5c\u7528\u3002\n\u5ba2\u6237\u7aefA\u5ba2\u6237\u7aefB\u670d\u52a1\u5668\u653b\u51fb\u738b&#39\uff1b\u4ed6\u548cFo\u4e00\u8d77\u7740\u9646\u3002\u3002\u3002\u4eceWint\u4e2d\u5220\u9664Footman\u3002\u3002\u3002\u5728King&#39\u4e2d\u6dfb\u52a0\u6b65\u5175\uff1bs\u6d1b\u6749\u77f6\u3002\u3002\u3002\u5728King&#39\u5f00\u59cb\u6218\u6597\uff1bs\u6d1b\u6749\u77f6\u3002\u3002\u3002\u4eceWint\u4e2d\u5220\u9664Footman\u3002\u3002\u3002\u5728King&#39\u4e2d\u6dfb\u52a0\u6b65\u5175\uff1bs\u6d1b\u6749\u77f6\u3002\u3002\u3002\u5728King&#39\u5f00\u59cb\u6218\u6597\uff1bs\u6d1b\u6749\u77f6\u3002\u3002\u3002\u67e5\u770b\u5668\u4e0d\u652f\u6301\u5b8c\u6574\u7684SVG 1.1\u3002\u8fd9\u662f\u5200\u5251&amp\uff1b\u4e4c\u9e26\u3002\u5b83\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u77e5\u9053\u60a8\u6b63\u5728\u5411\u4e0d\u540c\u7684\u5ba2\u6237\u53d1\u9001\u6216\u4e0d\u53d1\u9001\u54ea\u79cd\u6570\u636e\u3002\u8fd9\u4e5f\u4f7f\u5f97\u62e5\u6709\u79d8\u5bc6\u6570\u636e\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\uff08\u5373\uff0c\u5e94\u8be5\u53ea\u6709\u4e00\u90e8\u5206\u73a9\u5bb6\u77e5\u9053\u7684\u6570\u636e\uff09\u3002\u5982\u679c\u4e00\u540d\u73a9\u5bb6\u62bd\u5230\u4e00\u5f20\u724c\uff0c\u5e76\u5c06\u5176\u653e\u5728\u4ed6\u7684\uff08\u79d8\u5bc6\uff09\u624b\u4e2d\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u53ea\u5c06\u62bd\u5230\u7684\u724c\u4f20\u9001\u7ed9\u8be5\u73a9\u5bb6\uff0c\u8fd9\u6837\u5176\u4ed6\u73a9\u5bb6\u5c31\u4e0d\u4f1a\u77e5\u9053\u8fd9\u662f\u54ea\u5f20\u724c\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u7f3a\u70b9\u662f\uff0c\u5fc5\u987b\u5bf9\u6e38\u620f\u72b6\u6001\u7684\u6240\u6709\u53ef\u80fd\u66f4\u65b0\u8fdb\u884c\u7f16\u7801\u3002\u5f53\u7136\uff0c\u5728JS\u4e2d\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u81ea\u52a8\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f8b\u5982\u4f7f\u7528\u88c5\u9970\u7a0b\u5e8f\u6765\u63a7\u5236\u5bf9\u6e38\u620f\u72b6\u6001\u53d8\u91cf\u7684\u8bbf\u95ee\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u964d\u4f4e\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\n\u7b2c\u4e8c\u4e2a\u7f3a\u70b9\u662f\uff0c\u7531\u4e8e\u60a8\u53ef\u80fd\u4f1a\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u53d1\u9001\u591a\u4e2a\u66f4\u65b0\uff0c\u56e0\u6b64\u5728\u6536\u5230\u6240\u6709\u66f4\u65b0\u4e4b\u524d\uff0c\u5ba2\u6237\u7aef\u7684\u672c\u5730\u6e38\u620f\u72b6\u6001\u53ef\u80fd\u6682\u65f6\u5904\u4e8e\u65e0\u6548\u72b6\u6001\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u5728\u66f4\u65b0\u201c\u51ac\u57ce\u79fb\u9664\u6b65\u5175\u201d\u548c\u201c\u56fd\u738b\u6dfb\u52a0\u6b65\u5175\u201d\u4e4b\u95f4&#39\uff1b\u7740\u9646\u65f6\uff0c\u7f3a\u5c11\u4e00\u540d\u6b65\u5175\uff0c\u8fd9\u5c06\u4fee\u6539UI\u4e2d\u663e\u793a\u7684\u6b65\u5175\u6570\u91cf\u3002\u867d\u7136\u8fd9\u4e2a\u7279\u6b8a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u4e00\u4e2a\u7ec4\u5408\u66f4\u65b0\u6765\u89e3\u51b3\uff08\u4f8b\u5982\uff0c\u5c06\u6b65\u5175\u4ece\u51ac\u57ce\u79fb\u52a8\u5230\u56fd\u738b\u767b\u9646\uff09\uff0c\u4f46\u5e76\u975e\u6240\u6709\u66f4\u65b0\u90fd\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u3002\n\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u5408\u5e76\u7531\u4e8e\u8be5\u64cd\u4f5c\u800c\u5b8c\u6210\u7684\u6240\u6709\u66f4\u65b0\uff0c\u5e76\u7acb\u5373\u53d1\u9001\u5b83\u4eec\u3002\u8fd9\u5c31\u662f\u4e0b\u4e00\u79cd\u65b9\u6cd5\u7684\u672c\u8d28\u3002\n\u589e\u91cf\u66f4\u65b0\u4f20\u64ad\u65b9\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u662f\u8ba1\u7b97\u6e38\u620f\u7684\u65b0\u72b6\u6001\u4e0e\u5e94\u7528\u52a8\u4f5c\u4e4b\u524d\u7684\u6e38\u620f\u72b6\u6001\u4e4b\u95f4\u7684\u589e\u91cf\u3002\u7136\u540e\u5c06\u8be5\u589e\u91cf\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u5c06\u5176\u5e94\u7528\u4e8e\u81ea\u5df1\u7684\u672c\u5730\u6e38\u620f\u72b6\u6001\u3002\u8fd9\u5c31\u662f\u6e38\u620f\u5f15\u64ceboardgame\u7684\u65b9\u5f0f\u3002\u6728\u536b\u4e00\u5de5\u4f5c\u3002\n\u5ba2\u6237\u7aefA\u5ba2\u6237\u7aefB\u670d\u52a1\u5668\u653b\u51fb\u738b&#39\uff1b\u4ed6\u548cFo\u4e00\u8d77\u7740\u9646\u3002\u3002\u3002\u79fb\u9664\u300a\u56fd\u738b\u4e0e#39\u300b\u4e2d\u7684\u7537\u4ec6\uff1bs\u7740\u9646\uff0c\u3002\u3002\u3002\u79fb\u9664\u300a\u56fd\u738b\u4e0e#39\u300b\u4e2d\u7684\u7537\u4ec6\uff1bs\u7740\u9646\uff0c\u3002\u3002\u3002\u67e5\u770b\u5668\u4e0d\u652f\u6301\u5b8c\u6574\u7684SVG 1.1\u3002\u8fd9\u89e3\u51b3\u4e86\u524d\u9762\u65b9\u6cd5\u4e2d\u63cf\u8ff0\u7684\u4e24\u4e2a\u7f3a\u70b9\u3002\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u66f4\u65b0\u8fdb\u884c\u7f16\u7801\uff0c\u56e0\u4e3a\u4e00\u65e6\u60a8\u66f4\u6539\u4e86\u67d0\u4e9b\u5185\u5bb9\uff0c\u5b83\u5c06\u5728\u64cd\u4f5c\u5904\u7406\u540e\u5728\u589e\u91cf\u4e2d\u8fdb\u884c\u8ba1\u7b97\u3002\u60a8\u4e0d\u518d\u4f1a\u83b7\u5f97\u6682\u65f6\u7684\u65e0\u6548\u72b6\u6001\uff0c\u56e0\u4e3a\u66f4\u65b0\u5c06\u7acb\u5373\u4ee5\u539f\u5b50\u65b9\u5f0f\u5e94\u7528\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u5931\u53bb\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u7ba1\u7406\u79d8\u5bc6\u56fd\u5bb6\u5f88\u5bb9\u6613\u3002\u5982\u679c\u8981\u9632\u6b62\u67d0\u4e9b\u673a\u5bc6\u4fe1\u606f\u88ab\u53d1\u9001\u5230\u7279\u5b9a\u5ba2\u6237\u673a\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u5728\u5c06\u5176\u53d1\u9001\u5230\u5ba2\u6237\u673a\u4e4b\u524d\u8fc7\u6ee4\u6389\u4efb\u4f55\u6f5c\u5728\u7684\u79c1\u4eba\u4fe1\u606f\u3002\n\u5b83\u4f9d\u8d56\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5047\u8bbe\uff0c\u5373\u5904\u7406\u73a9\u5bb6\u7684\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6e38\u620f\u72b6\u6001\uff0c\u5e94\u7528\u4e00\u4e2a\u52a8\u4f5c\u5c06\u59cb\u7ec8\u4e3a\u6211\u4eec\u63d0\u4f9b\u76f8\u540c\u7684\u6e38\u620f\u7ed3\u679c\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u907f\u514d\u5c06\u6e38\u620f\u72b6\u6001\u7684\u66f4\u65b0\u4f20\u64ad\u7ed9\u5ba2\u6237\u7aef\u3002\u76f8\u53cd\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5e94\u7528\u5b83\u4ece\u5ba2\u6237\u673a\u6536\u5230\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u6b64\u64cd\u4f5c\u4f20\u64ad\u7ed9\u5ba2\u6237\u673a\uff0c\u7136\u540e\u5ba2\u6237\u673a\u53ef\u4ee5\u5e94\u7528\u8be5\u64cd\u4f5c\u6765\u6d3e\u751f\u81ea\u5df1\u7684\u65b0\u6e38\u620f\u72b6\u6001\u3002\u7531\u4e8e\u5e94\u7528\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5ba2\u6237\u7aef\u5c06\u8fbe\u5230\u4e0e\u670d\u52a1\u5668\u76f8\u540c\u7684\u6e38\u620f\u72b6\u6001\u30021.\n\u5ba2\u6237\u7aefA\u5ba2\u6237\u7aefB\u670d\u52a1\u5668\u653b\u51fb\u738b&#39\uff1b\u4ed6\u548cFo\u4e00\u8d77\u7740\u9646\u3002\u3002\u3002\u653b\u51fb\u56fd\u738b&#39\uff1b\u662f\u964d\u843d\u673a\u667a\u3002\u3002\u3002\u653b\u51fb\u56fd\u738b&#39\uff1b\u662f\u964d\u843d\u673a\u667a\u3002\u3002\u3002\u67e5\u770b\u5668\u4e0d\u652f\u6301\u5b8c\u6574\u7684SVG1.1\u3002\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u7f16\u5199\u989d\u5916\u7684\u7f51\u7edc\u903b\u8f91\u3002\u552f\u4e00\u9700\u8981\u5b9e\u73b0\u7684\u662f\u4f20\u64ad\u73a9\u5bb6\u6240\u505a\u7684\u52a8\u4f5c\u3002\n\u5176\u6b21\uff0c\u5e26\u5bbd\u6d88\u8017\u4e0e\u5bf9\u6e38\u620f\u72b6\u6001\u6240\u505a\u4fee\u6539\u7684\u5927\u5c0f\u65e0\u5173\u3002\u5982\u679c\u4e00\u4e2a\u73a9\u5bb6\u7684\u52a8\u4f5c\u5728\u6211\u4eec\u7684\u6e38\u620f\u72b6\u6001\u4e2d\u6539\u53d8\u4e861000\u4e2a\u5b9e\u4f53\uff0c\u670d\u52a1\u5668\u4ecd\u7136\u53ea\u9700\u8981\u4f20\u8f93\u52a8\u4f5c\uff0c\u800c\u4e0d\u9700\u8981\u4f20\u8f93\u66f4\u6539\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u786e\u5b9a\u6027\u9501\u6b65\u88ab\u7528\u4e8e\u5b9e\u65f6\u6218\u7565\u6e38\u620f\u7684\u539f\u56e0\uff0c\u6bd4\u5982\u300a\u5e1d\u56fd\u65f6\u4ee3\u300b\u3002\u867d\u7136\u56de\u5408\u5236\u6e38\u620f\uff08\u68cb\u76d8\u6e38\u620f\u66f4\u4e0d\u5e38\u89c1\uff09\u5728\u6267\u884c\u52a8\u4f5c\u65f6\u4f1a\u6709\u5f88\u591a\u79fb\u52a8\u5b9e\u4f53\uff0c\u4f46\u8fd9\u4e3a\u56de\u5408\u5236\u6e38\u620f\u5f00\u8f9f\u4e86\u65b0\u7684\u53ef\u80fd\u6027\u3002\n\u7b2c\u4e09\uff0c\u7531\u4e8e\u5b9e\u9645\u7684\u6e38\u620f\u4ee3\u7801\u662f\u5728\u5ba2\u6237\u7aef\u4e0a\u8fd0\u884c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6e38\u620f\u72b6\u6001\u8fdb\u884c\u4e0d\u540c\u66f4\u65b0\u7684\u52a8\u753b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u73a9\u5bb6\u7684\u52a8\u4f5c\u4f1a\u5c06\u4ed6\u4eec\u7684\u94b1\u51cf\u5c1110\uff0c\u7136\u540e\u589e\u52a040\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u64ad\u653e\u4e24\u4e2a\u4e0d\u540c\u7684\u52a8\u753b\uff0c\u800c\u5728\u4e4b\u524d\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u53ea\u4f1a\u4ece\u670d\u52a1\u5668\u6536\u5230\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u7b79\u96c6\u7684\u94b1\u662f30\uff0c\u8fd9\u963b\u6b62\u4e86\u5ba2\u6237\u7aef\u8fd9\u6837\u505a\u3002\n\u7b2c\u56db\uff0c\u5f53\u73a9\u5bb6\u51b3\u5b9a\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\u65f6\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u5c06\u52a8\u4f5c\u53d1\u9001\u5230\u670d\u52a1\u5668\u540e\u76f4\u63a5\u5c06\u5176\u5e94\u7528\u5230\u81ea\u5df1\u7684\u6e38\u620f\u72b6\u6001\uff0c\u800c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u7684\u786e\u8ba4\u3002\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u201c\u4e50\u89c2\u66f4\u65b0\u201d\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u4e3a\u73a9\u5bb6\u63d0\u4f9b\u65e0\u6ede\u540e\u4f53\u9a8c\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u76f8\u5f53\u4f18\u96c5\u3002\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u73a9\u5bb6\u884c\u4e3a\u7684\u4f20\u64ad\uff0c\u4e00\u65e6\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u6e38\u620f\u6027\uff0c\u800c\u4e0d\u9700\u8981\u63a5\u89e6\u7f51\u7edc\u4ee3\u7801\uff01\n\u4e0d\u8fc7\uff0c\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\u3002\u4e3a\u4e86\u786e\u4fdd\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5728\u5904\u7406\u4e00\u4e2a\u52a8\u4f5c\u540e\u5230\u8fbe\u76f8\u540c\u7684\u6e38\u620f\u72b6\u6001\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u5b83\u4eec\u6700\u521d\u90fd\u62e5\u6709\u5b8c\u5168\u76f8\u540c\u7684\u6e38\u620f\u72b6\u6001\u3002\u4e00\u5f00\u59cb\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u89c9\u5f97\u4e0d\u53ef\u80fd\u6709\u79d8\u5bc6\u72b6\u6001\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u7684\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u4f9d\u8d56\u4e8e\u6240\u6709\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u6e38\u620f\u72b6\u6001\u76f8\u540c\uff0c\u6211\u4eec\u600e\u4e48\u53ef\u80fd\u53ea\u6709\u670d\u52a1\u5668\u7aef\u7684\u72b6\u6001\uff1f\n\u901a\u8fc7\u5141\u8bb8\u5ba2\u6237\u673a\u4e0e\u670d\u52a1\u5668\u7565\u6709\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u4f18\u96c5\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u4e00\u4e2a\u52a8\u4f5c\u9700\u8981\u4e00\u4e2a\u6216\u591a\u4e2a\u5ba2\u6237\u7aef\u4e4b\u524d\u9690\u85cf\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u670d\u52a1\u5668\u901a\u8fc7\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6e38\u620f\u72b6\u6001\u7684\u8fd9\u4e00\u7279\u5b9a\u90e8\u5206\u6765\u534f\u8c03\u5dee\u5f02\u3002\n\u8ba9\u6211\u4eec\u7528\u300a\u5251\u4e0e\u5251\u300b\u4e2d\u7684\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e00\u70b9\uff1b\u4e4c\u9e26\u3002\u5f53\u4e00\u4e2a\u73a9\u5bb6\u5c06\u4ed6\u4eec\u7684\u519b\u961f\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u73a9\u5bb6\u7684\u9886\u5730\u65f6\uff0c\u4ed6\u4eec\u4f1a\u89e6\u53d1\u4e00\u573a\u6218\u6597\u3002\u89e3\u51b3S&amp\uff1bR\u6d89\u53ca\u4e24\u540d\u73a9\u5bb6\u540c\u65f6\u4ece\u4ed6\u4eec\u624b\u4e2d\u9009\u62e9\u4e00\u540d\u5c06\u519b\u6765\u9886\u5bfc\u4ed6\u4eec\u7684\u519b\u961f\u3002\u8fd9\u79cd\u673a\u5236\u4f1a\u5bfc\u81f4\u6fc0\u70c8\u7684\u5fc3\u667a\u6e38\u620f\uff0c\u4e24\u540d\u73a9\u5bb6\u90fd\u4f1a\u5c1d\u8bd5\u731c\u6d4b\u5bf9\u624b\u5c06\u9009\u62e9\u54ea\u79cd\u5c06\u519b\uff0c\u4ee5\u4fbf\u9009\u62e9\u5408\u9002\u7684\u8ba1\u6570\u5668\uff0c\u540c\u65f6\u6000\u7591\u5bf9\u624b\u662f\u5426\u4e0d\u4f1a\u8ba1\u5212\u8fd9\u6837\u505a\uff0c\u5e76\u9009\u62e9\u8ba1\u6570\u5668\u7684\u8ba1\u6570\u5668\uff0c\u8981\u6c42\u4f60\u9009\u62e9\u8ba1\u6570\u5668\u7684\u8ba1\u6570\u5668\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u663e\u7136\uff0c\u5982\u679c\u5bf9\u65b9\u7403\u5458\u8fd8\u6ca1\u6709\u505a\u51fa\u9009\u62e9\uff0c\u4fdd\u5bc6\u5bf9\u65b9\u7403\u5458\u7684\u9009\u62e9\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u5ba2\u6237A\u5ba2\u6237B\u670d\u52a1\u5668\u9009\u62e9\u6cf0\u6e29\u00b7\u5170\u5c3c\u65af\u7279\uff08A\uff09\u9009\u62e9\u5361\u7247\uff08A\uff09\u9009\u62e9\u6cf0\u6e29\u00b7\u5170\u5c3c\u65af\u7279\u9009\u62e9\u739b\u683c\u5229\u00b7\u6cf0\u745e\u5c14\uff08B\uff09\u9009\u62e9\u739b\u683c\u5229\u00b7\u6cf0\u745e\u5c14\u3002\u3002\u3002\uff08B\uff09 \u9009\u62e9\u4e00\u5f20\u5361\u7247\u3002\u3002\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6709\u76f8\u540c\u7684\u6e38\u620f\u72b6\u6001\uff0c\u5b89\u5168\u5730\u8fdb\u884c\u5ba2\u6237\u7aefB\u548c#39\uff1bs\u7684\u6e38\u620f\u72b6\u6001\u4e0d\u540c\u4e8e\u670d\u52a1\u5668&#39\uff1bs game state Viewer\u4e0d\u652f\u6301\u5b8c\u6574\u7684SVG 1.1\u3002\u5f53\u5ba2\u6237\u7aefA\u5c06\u5176\u64cd\u4f5c\u53d1\u9001\u5230\u670d\u52a1\u5668\uff08\u9009\u62e9Tywin Lannister\uff09\u65f6\uff0c\u6211\u4eec\u4f1a\u5c06\u6b64\u64cd\u4f5c\u4f20\u64ad\u7ed9\u4e24\u540d\u73a9\u5bb6\uff0c\u4f46\u4e0d\u4f1a\u5728\u4ece\u53d1\u9001\u5230\u5ba2\u6237\u7aefB\u7684\u6d88\u606f\u4e2d\u7b5b\u9009\u51fa\u6240\u9009\u7684\u9886\u5bfc\u8005\u4e4b\u524d\uff0c\u5ba2\u6237\u673aB\u7684\u6e38\u620f\u72b6\u6001\u4e0e\u670d\u52a1\u5668\u7684\u6e38\u620f\u72b6\u6001\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u4e0d\u77e5\u9053A\u9009\u62e9\u4e86\u54ea\u4e2a\u9886\u5bfc\u8005\u3002\u5f53\u5ba2\u6237B\u53d1\u9001\u4ed6\u4eec\u7684\u64cd\u4f5c\uff08\u9009\u62e9Margaery Tyrell\uff09\u65f6\uff0c\u6211\u4eec\u5e94\u7528\u76f8\u540c\u7684\u903b\u8f91\uff0c\u4ece\u53d1\u9001\u7ed9\u5ba2\u6237A\u7684\u6d88\u606f\u4e2d\u8fc7\u6ee4\u51fa\u6240\u9009\u7684\u9886\u5bfc\u8005\u3002\u7531\u4e8e\u4e24\u4e2a\u73a9\u5bb6\u90fd\u9009\u62e9\u4e86\u4ed6\u4eec\u7684\u9886\u5bfc\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u5176\u4ed6\u73a9\u5bb6\u7684\u9009\u62e9\u6765\u8c03\u548c\u6e38\u620f\u72b6\u6001\u7684\u5dee\u5f02\u3002\u5728\u8fd9\u4e2a\u5c0f\u52a8\u4f5c\u4e4b\u540e\uff0c\u6240\u6709\u7684\u5ba2\u6237\u673a\u90fd\u6709\u76f8\u540c\u7684\u6e38\u620f\u72b6\u6001\uff0c\u53ef\u4ee5\u51b3\u5b9a\u6027\u5730\u89e3\u51b3\u5269\u4f59\u7684\u6218\u6597\u3002\n\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5728A\u9009\u62e9\u4e86\u5ba2\u6237B\u7684\u8d1f\u8d23\u4eba\u540e\u4e0d\u5411\u5176\u53d1\u9001\u4efb\u4f55\u4fe1\u606f\uff0c\u4f46\u53d1\u9001\u6b64\u4fe1\u606f\u53ef\u4ee5\u5728B\u7684UI\u4e2d\u663e\u793aA\u5df2\u7ecf\u9009\u62e9\u4e86\u4ed6\u4eec\u7684\u8d1f\u8d23\u4eba\u3002\n\u5982\u679c\u6211\u5fc5\u987b\u5f00\u53d1\u5251&amp\uff1b\u4e4c\u9e26\u4ece\u65e0\u5230\u6709\uff0c\u6211\u4f1a\u7528\u786e\u5b9a\u6027\u7684\u65b9\u6cd5\u3002\u53ea\u9700\u5b9e\u73b0\u4e00\u6b21\u7f51\u7edc\uff0c\u5e76\u5b8c\u6210\u5b83\uff0c\u8fd9\u662f\u975e\u5e38\u4f18\u96c5\u548c\u5438\u5f15\u4eba\u7684\u3002\u56e0\u4e3aAGoT:TBG\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u6e38\u620f\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u9636\u6bb5\uff0c\u5fc5\u987b\u5c06\u6bcf\u4e2a\u4ea4\u4e92\u8fde\u63a5\u8d77\u6765\uff0c\u4ea7\u751f\u5927\u91cf\u6837\u677f\u4ee3\u7801\uff0c\u8fd9\u76f8\u5f53\u4e8e\u4ee3\u7801\u7684\u5f88\u5927\u4e00\u90e8\u5206\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u8bbe\u6cd5\u8f7b\u677e\u5730\u5c06\u52a8\u753b\uff08\u7247\u6bb5\u79fb\u52a8\u3001\u5361\u7247\u4ece\u624b\u5230\u677f\u79fb\u52a8\u7b49\uff09\u6dfb\u52a0\u5230UI\u4e2d\uff0c\u8fd9\u5bf9AGoT:TBG\u6ca1\u6709\u592a\u5927\u5e2e\u52a9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u6709\u5f88\u591a\u72b6\u6001\u66f4\u65b0\u3002\n\u4f7f\u7528\u786e\u5b9a\u6027\u65b9\u6cd5\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u521b\u5efa\u4e00\u4e2a\u5e93\u6765\u5904\u7406\u57fa\u4e8e\u56de\u5408\u7684\u6e38\u620f\u4e2d\u7684\u6240\u6709\u7f51\u7edc\u90e8\u5206\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6e38\u620f\u672c\u8eab\u7684\u673a\u5236\u3002\u6211\u5df2\u7ecf\u5f00\u59cb\u7814\u7a76\u8fd9\u6837\u4e00\u4e2a\u56fe\u4e66\u9986\u4e86Ravens\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u5916\u90e8\u73af\u5883\uff0c\u6211\u6ca1\u6709\u7ee7\u7eed\u5f00\u53d1\u5b83\u3002\n\u5982\u679c\u60a8\u5b9e\u9645\u4e0a\u6b63\u5728\u5b9e\u73b0\u4e00\u4e2a\u57fa\u4e8e\u56de\u5408\u7684\u591a\u4eba\u6e38\u620f\uff0c\u6211\u5e0c\u671b\u672c\u6587\u80fd\u591f\u5e2e\u52a9\u60a8\u9009\u62e9\u4e00\u4e2a\u5408\u7406\u7684\u67b6\u6784\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u6211\u5e0c\u671b\u5185\u5bb9\u548c\u5199\u4f5c\u8db3\u591f\u6709\u8da3\uff01\n\u867d\u7136\u6e38\u620f\u4e2d\u7684\u968f\u673a\u6027\uff08\u6d17\u724c\u3001\u63b7\u9ab0\u5b50\u7b49\uff09\u53ef\u80fd\u4f1a\u6253\u7834\u51b3\u5b9a\u8bba\u5c5e\u6027\uff0c\u4f46\u60a8\u53ef\u4ee5\u4f7f\u7528\u79cd\u5b50\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u6765\u786e\u4fdd\u968f\u673a\u63b7\u9ab0\u59cb\u7ec8\u662f\u76f8\u540c\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u3002\u21a9", "note_en": "3 years ago, I started developing   Swords &amp; Ravens, an open-source online multi-player adaptation of a strategy board game I love,  A Game of Thrones: The Board Game (Second Edition), designed by Christian T. Petersen and published by  Fantasy Flight Games. As of Febuary 2022, around 500 players gather daily on the platform and more than 2000 games have been played since its release. While I stopped actively developping S&amp;R, the platform is still seeing new features being added thanks to the work of the open-source community.\n  I\u2019ve learned a lot while developing S&amp;R, and I wanted to share some of the knowledge I\u2019ve gained to people that might be interested in doing a similar project. There is a lot to say about how it works but this blog post will focus on how I\u2019ve designed the networking part of the game. I\u2019ll first describe the problem in a more formal way. I\u2019ll continue by explaining how it\u2019s solved in S&amp;R, as well as describe other possible solutions that I\u2019ve discovered or imagined. I\u2019ll detail the advantages &amp; disadvantages of each method and conclude with which method I think is the best (Spoiler alert: it\u2019s the last one \ud83d\udc40).\n  In a single-player game, everything lives inside a single computer. The player\u2019s actions are applied to the game state, and modifications to this game state are reflected on the screen of the player. In an online multiplayer environment, things are different. Each player is playing on its own computer, which all have their own current information about the game, and which all have their own UI to display the current state of the game.\n           UI           Client A        Server            Pl...        Game State        Game State                 UI        Client B            Pl...        Game State               Viewer does not support full SVG 1.1  The  UI displays to the player the current state of the game, based on the local copy of the state of the game. The  Clients are responsible for the communication with the server, both to send the actions of the player and to receive new information about the game state.\n The problem we\u2019re interested in solving is how to synchronize the different local states of the game of the clients with the game state of the server. More specifically: when the server applies the action of a player to its game state, how must it communicate the modifications to the game state to the clients.\n  The most obvious solution is to apply any action received by the server to the game and transmit the different updates to the state of the game to the clients. The following diagram shows it in action.\n          Client A        Client B        Server             Attack King&#39;s Landing with Fo...                Remove Footman from Wint...        Add Footman in King&#39;s La...        Start Fight in King&#39;s La...          Remove Footman from Wint...        Add Footman in King&#39;s La...        Start Fight in King&#39;s La...        Viewer does not support full SVG 1.1  This is the method used by Swords &amp; Ravens. It\u2019s simple, intuitive and it\u2019s easy to know which kind of data you\u2019re sending or not to the different clients. This also makes it trivial to have secret data (i.e. data that should only be known to a subset of the players). If a player draws a card and place it in his (secret) hand, then you can transmit which card was drawn only to this player so that no other player knows which card it is.\n The first downside to this method is that you must code all the possible updates to the state of your game. While there are certainly ways to automate this in JS using, for example, decorators to control the access to the variables of your game state, it may make your code less readable.\n The second downside is that since you\u2019re possibly sending multiple updates for a single action, the local game state of a client might temporarily be in an invalid state before all the updates have been received. In the diagram shown above, between the update  Remove footman in Winterfell and  Add footman in Kings&#39; Landing, there is a missing Footman which would modify the count of Footman shown in the UI. Though this particular issue could be solved by sending a combined update (for example  Move Footman Footman from Winterfell to King&#39;s Landing), not all updates can easily be concatenated.\n A better way to address this would be to combine all the updates done because of the action and send them at once. This is essentially what the next method is about.\n  The delta-update propagation method works by computing the delta between the new state of the game and the state of the game before the action was applied. This delta is then sent to the clients so that they can apply it to their own local state of the game. This is how the game engine  boardgame.io works.\n          Client A        Client B        Server             Attack King&#39;s Landing with Fo...            Remove Footman in King&#39;s Landing,...        Remove Footman in King&#39;s Landing,...      Viewer does not support full SVG 1.1  This solves the 2 downsides described in the previous method. We no longer need to code all the possible updates, since once you change something, it will be computed in the delta after the action has been processed. You no longer get transient invalid states, since the updates will be applied at once, atomically.\n One thing we\u2019ve lost, though, is the easiness of managing secret state. If you want to prevent some secret information to be sent to a specific client, the server must filter the delta out of any potential private information before sending it to the clients.\n   It relies on the assumption that processing the actions of a player is deterministic, meaning that for a given state of the game, applying an action will always give us the same resulting state of the game. We can exploit this property to avoid having to propagate the updates to the state of the game to the clients. Instead, the server can apply the action it has received from the client, and then propagate this action to the clients who can then apply the action to derive their own new game state. Since applying the action is deterministic, the clients will arrive at the same state of the game as the server.  1\n          Client A        Client B        Server             Attack King&#39;s Landing with Fo...            Attack King&#39;s Landing wit...        Attack King&#39;s Landing wit...      Viewer does not support full SVG 1.1   First, we don\u2019t need to code additional network logic in our code. The only thing that needs to be implemented is the propagation of the action done by the players.\n Secondly, bandwidth consumption isn\u2019t tied to the size of the modifications done to the game state. If a single player action changes 1000 entities in our game state, the server will still only need to transmit the action and not the changes. This is actually  the reason why deterministic lockstep is used for real-time strategy games, such as Age of Empires. While it is quite uncommon for turn-based games (even less so for board games) to have lots of moving entities when performing an action, having this opens up new possibilities for turn-based games.\n Thirdly, since the actual gameplay code is run on the client, we can perform animations of the different updates done to the game state. For example, if a player action would reduce their amount of money by 10 and then raise it by 40, we could play 2 different animations client-side while with the previous solution, we would only receive from the server the fact that the amount of money was raised by 30, preventing the client from doing so.\n Fourthly, when the player decides to perform an action, the client can directly apply the action to its own game state after sending it to the server without waiting for confirmation from the server. This process, called \u201coptimistic update\u201d, allows us to provide a lag-free experience to the players.\n Overall, this solution is quite elegant. We just need to implement the propagation of the actions of the player and once it\u2019s done,  ta-da, we can focus on implementing the gameplay and don\u2019t need to touch the networking code at all!\n There is one big downside, though. To make sure that the clients and the server arrives at the same game state after processing an action, we must ensure that they both possess exactly the same game state initially. At first, this might make you think that it would be impossible to have secret state. Indeed, how could we have state that is only kept server-side if our networking solution relies on the game state being the same between all actors?\n  We can solve this issue quite elegantly by allowing the clients to slightly differ from the server. If an action requires state that was previously hidden to one or multiple clients, we can make the server reconciliates the difference by sending this specific part of the game state to the clients.\n Let\u2019s illustrate this with an example from Swords &amp; Ravens. When a player moves their army into the territory of another player, they trigger a combat. Resolving a combat in S&amp;R involves both players simultaneously choosing, from their hand, a general of their house to lead their armies. This mechanic leads to intense mind-games where both players try to guess which general their opponent will take so they can pick the appropriate counter, while wondering if their opponent will not plan for this and take the counter of the counter, requiring you to pick the counter of the counter of the counter, and so on.\n Obviously, it is important to keep secret the choice of one of the opposing players if the other player has not made their choice yet.\n           Client A        Client B        Server             Choose Tywin Lannister            (A) Choose a card        (A) Choose Tywin Lannister          Choose Margeary Tyrell            (B) Choose Margeary Tyrel...        (B) Choose a card...        Clients and server have the same game state, proceed safely        Client B&#39;s game state differs from Server&#39;s game state         Viewer does not support full SVG 1.1  When  Client A sends their action to the server (Choosing Tywin Lannister), we propagate this action to both players, but not before filtering the chosen leader out of the message sent to  Client B. At this point,  Client B\u2019s game state differs from  Server\u2019s game state since it does not know which leader  A has chosen. When  Client B sends their action (Choosing Margaery Tyrell), we apply the same logic and filter out the chosen leader out of the message sent to  Client A. Since both players have chosen their leaders, we can reconciliate the differences in game state by sending out the choice of the other players. After this little manoeuver, all clients have the same game state and can resolve the rest of the combat deterministically.\n Note that while we could have opted not to send anything to  Client B after  A had chosen their leader, sending this information makes it possible to display in the UI of  B that  A has already chosen their leader.\n  If I had to develop Swords &amp; Ravens from scratch, I would do it using a deterministic method. Having to implement the networking only once, and be done with it, is quite elegant and appealing. Since AGoT:TBG is quite a complex game with a lot of different phases, having to network every interaction produced a lot of boilerplate code, which amounts to a big portion of the code. On top of that, I never managed to easily add animations (pieces moving, cards moving from hand to board, \u2026) to the UI, which does not help a lot with AGoT:TBG where a single action can have a lot of state updates.\n Another nice thing about using a deterministic method is that you can easily make a library that handles all the networking part of a turn-based game, letting the developer focus on developing the mechanics of the game itself. I\u2019ve started working on such a library,  Ravens. Unfortunately, due to external circumstances, I have not continued developing it.\n If you\u2019re actually in the process of implementing a turn-based multiplayer game, I hope that this article was able to help you on choosing a sound architecture. If not, then I hope the content and the writing was interesting enough!\n Though having randomness in your game (shuffling, rolling dices, \u2026) might seem like it breaks the determinism property, you can use seeded pseudo-random number generator to make sure that a random roll will always be the same client-side and server-side. \u21a9", "posttime": "2022-02-17 10:17:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,turn", "title": "\u57fa\u4e8e\u56de\u5408\u7684\u6e38\u620f\u7684\u7f51\u7edc\u5316", "title_en": "Networking of a turn-based game", "transed": 1, "url": "https://longwelwind.net/blog/networking-turn-based-game/", "via": "", "real_tags": ["\u6e38\u620f", "turn"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073784, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136WebRTC\u5728\u5404\u79cd\u5404\u6837\u7684\u573a\u666f\u4e2d\u90fd\u975e\u5e38\u6210\u529f\uff0c\u4f46\u5b83\u5728\u5e7f\u64ad/\u6d41\u5a92\u4f53\u884c\u4e1a\u7684\u5e94\u7528\u5374\u76f8\u5bf9\u6ede\u540e\u3002\u76ee\u524d\u8fd8\u6ca1\u6709\u6807\u51c6\u534f\u8bae\uff08\u5982SIP\u6216RTSP\uff09\u7528\u4e8e\u4f7f\u7528WebRTC\u5c06\u5a92\u4f53\u63a5\u6536\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u4e2d\uff0c\u56e0\u6b64\u5185\u5bb9\u63d0\u4f9b\u5546\u4ecd\u7136\u4e25\u91cd\u4f9d\u8d56RTMP\u7b49\u534f\u8bae\u3002\u00b6\n\u8fd9\u4e9b\u534f\u8bae\u6bd4WebRTC\u65e7\u5f97\u591a\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cWebRTC\u7f3a\u4e4f\u4e00\u4e9b\u91cd\u8981\u7684\u5b89\u5168\u548c\u5f39\u6027\u529f\u80fd\uff0c\u5f00\u9500\u548c\u989d\u5916\u5ef6\u8fdf\u90fd\u5f88\u5c0f\u3002\u00b6\n\u5728\u8f83\u65e7\u7684\u534f\u8bae\u4e2d\uff0c\u7528\u4e8e\u63a5\u6536\u7684\u5a92\u4f53\u7f16\u89e3\u7801\u5668\u5f80\u5f80\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u7ecf\u8fc7\u534f\u5546\u3002WebRTC\u5305\u62ec\u5bf9\u7f16\u89e3\u7801\u5668\u534f\u5546\u7684\u652f\u6301\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51cf\u8f7b\u63a5\u6536\u8282\u70b9\u4e0a\u7684\u8f6c\u7801\uff08\u8fd9\u53ef\u80fd\u4f1a\u5f15\u5165\u5ef6\u8fdf\u5e76\u964d\u4f4e\u5a92\u4f53\u8d28\u91cf\uff09\u3002\u5728\u81ea\u9002\u5e94\u6bd4\u7279\u7387\u6d41\uff08ABR\uff09\u5b9e\u73b0\u4e2d\uff0c\u4f20\u7edf\u4e0a\u7528\u4e8e\u5448\u73b0\u591a\u4e2a\u683c\u5f0f\u526f\u672c\u7684\u670d\u52a1\u5668\u7aef\u8f6c\u7801\u53ef\u4ee5\u88abWebRTC\u5ba2\u6237\u7aef\u652f\u6301\u7684\u540c\u6b65\u5e7f\u64ad\u548cSVC\u7f16\u89e3\u7801\u5668\u6240\u53d6\u4ee3\u3002\u6b64\u5916\uff0cWebRTC\u5ba2\u6237\u7aef\u53ef\u4ee5\u6839\u636eRTCP\u53cd\u9988\u8c03\u6574\u5ba2\u6237\u7aef\u7f16\u7801\u53c2\u6570\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u7f16\u7801\u8d28\u91cf\u3002\u00b6\n\u672c\u6587\u6863\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u4e8eHTTP\u7684\u534f\u8bae\uff0c\u5141\u8bb8\u57fa\u4e8eWebRTC\u7684\u5185\u5bb9\u6444\u53d6\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u548c/\u6216CDN\u4e2d\u3002\u00b6\n\u672c\u4e92\u8054\u7f51\u8349\u6848\u5b8c\u5168\u7b26\u5408BCP 78\u548cBCP 79\u7684\u89c4\u5b9a\u3002\u00b6\n\u4e92\u8054\u7f51\u8349\u6848\u662f\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4\uff08IETF\uff09\u7684\u5de5\u4f5c\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u5c0f\u7ec4\u4e5f\u53ef\u4ee5\u5c06\u5de5\u4f5c\u6587\u4ef6\u4f5c\u4e3a\u4e92\u8054\u7f51\u8349\u7a3f\u5206\u53d1\u3002\u76ee\u524d\u4e92\u8054\u7f51\u4e0a\u7684\u8349\u7a3f\u5217\u8868\u4f4d\u4e8ehttps://datatracker.ietf.org/drafts/current/. \u00b6\n\u4e92\u8054\u7f51\u8349\u6848\u662f\u6709\u6548\u671f\u6700\u957f\u4e3a\u516d\u4e2a\u6708\u7684\u6587\u4ef6\u8349\u6848\uff0c\u53ef\u968f\u65f6\u7531\u5176\u4ed6\u6587\u4ef6\u66f4\u65b0\u3001\u66ff\u6362\u6216\u4f5c\u5e9f\u3002\u4e0d\u5e94\u5c06\u4e92\u8054\u7f51\u8349\u7a3f\u7528\u4f5c\u53c2\u8003\u8d44\u6599\u6216\u5f15\u7528as&#34\u4ee5\u5916\u7684\u5185\u5bb9\uff1b\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d&#34; \u00b6\n\u7248\u6743\uff08C\uff092021 IETF\u4fe1\u6258\u548c\u88ab\u8ba4\u5b9a\u4e3a\u6587\u4ef6\u4f5c\u8005\u7684\u4eba\u3002\u7248\u6743\u6240\u6709\u3002\u00b6\n\u672c\u6587\u4ef6\u53d7BCP 78\u548cIETF\u4fe1\u6258&#39\u7684\u7ea6\u675f\uff1bs\u4e0eIETF\u6587\u4ef6\u76f8\u5173\u7684\u6cd5\u5f8b\u89c4\u5b9a\uff08https://trustee.ietf.org/license-info)\u81ea\u672c\u6587\u4ef6\u51fa\u7248\u4e4b\u65e5\u8d77\u751f\u6548\u3002\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u8fd9\u4e9b\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4eec\u63cf\u8ff0\u4e86\u60a8\u5bf9\u672c\u6587\u4ef6\u7684\u6743\u5229\u548c\u9650\u5236\u3002\u4ece\u672c\u6587\u6863\u4e2d\u63d0\u53d6\u7684\u4ee3\u7801\u7ec4\u4ef6\u5fc5\u987b\u5305\u62ec\u7b80\u5316\u7684BSD\u8bb8\u53ef\u8bc1\u6587\u672c\uff0c\u5982\u7b2c4\u8282\u6240\u8ff0\u3002\u5982\u7b80\u5316BSD\u8bb8\u53ef\u8bc1\u6240\u8ff0\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u62c5\u4fdd\u3002\u00b6\nRTCWEB\u6807\u51c6\u5316JSEP\uff08[RFC8829]\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u63a7\u5236\u591a\u5a92\u4f53\u4f1a\u8bdd\u7684\u8bbe\u7f6e\u3001\u7ba1\u7406\u548c\u62c6\u5378\u7684\u673a\u5236\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528SDP\u63d0\u4f9b/\u5e94\u7b54\u6a21\u578b\u548c\u901a\u8fc7\u6709\u7ebf\u53d1\u9001\u7684\u6570\u636e\u7684\u6240\u6709\u683c\u5f0f\uff08\u5a92\u4f53\u3001\u7f16\u89e3\u7801\u5668\u3001\u52a0\u5bc6\u7b49\uff09\u5e94\u7528\u5b83\u3002\u6b64\u5916\uff0cWebRTC\u6709\u610f\u4e0d\u5728\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u6307\u5b9a\u4fe1\u4ee4\u4f20\u8f93\u534f\u8bae\u3002\u8fd9\u79cd\u7075\u6d3b\u6027\u5141\u8bb8\u5b9e\u65bd\u5e7f\u6cdb\u7684\u670d\u52a1\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u670d\u52a1\u901a\u5e38\u662f\u72ec\u7acb\u7684\u7b52\u4ed3\uff0c\u4e0d\u9700\u8981&#39\uff1b\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6\u670d\u52a1\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u4e5f\u4e0d\u9700\u8981\u5229\u7528\u73b0\u6709\u7684\u53ef\u4ee5\u4e0e\u5b83\u4eec\u901a\u4fe1\u7684\u5de5\u5177\u3002\u00b6\n\u5728\u5e7f\u64ad/\u6d41\u5a92\u4f53\u4e16\u754c\u4e2d\uff0c\u4f7f\u7528\u786c\u4ef6\u7f16\u7801\u5668\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u5730\u63d2\u5165\uff08SDI\uff09\u4f20\u8f93\u539f\u59cb\u5a92\u4f53\u7684\u7535\u7f06\uff0c\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\uff0c\u5e76\u5c06\u5176\u63a8\u9001\u5230\u4efb\u4f55\u6d41\u5a92\u4f53\u670d\u52a1\u6216CDN\u63a5\u6536\uff0c\u8fd9\u79cd\u60c5\u51b5\u5df2\u7ecf\u65e0\u5904\u4e0d\u5728\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e2aWebRTC\u670d\u52a1\u90fd\u91c7\u7528\u4e86\u5b9a\u5236\u7684\u4fe1\u4ee4\u4f20\u8f93\u534f\u8bae\uff0c\u8fd9\u963b\u788d\u4e86\u4f5c\u4e3a\u6444\u5165\u534f\u8bae\u7684\u5e7f\u6cdb\u91c7\u7528\u3002\u00b6\n\u867d\u7136\u6709\u4e00\u4e9b\u6807\u51c6\u4fe1\u4ee4\u534f\u8bae\u53ef\u4ee5\u4e0eWebRTC\u96c6\u6210\uff0c\u5982SIP\u6216XMPP\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u662f\u8bbe\u8ba1\u7528\u4e8e\u5e7f\u64ad/\u6d41\u5a92\u4f53\u670d\u52a1\uff0c\u4e5f\u6ca1\u6709\u5728\u8be5\u884c\u4e1a\u91c7\u7528\u7684\u8ff9\u8c61\u3002RTSP\u57fa\u4e8eRTP\uff0c\u5728\u529f\u80fd\u4e0a\u53ef\u80fd\u4e0eWebRTC\u6700\u63a5\u8fd1\uff0c\u4f46\u4e0eWebRTC SDP\u63d0\u4f9b/\u5e94\u7b54\u6a21\u5f0f\u4e0d\u517c\u5bb9\u3002\u00b6\n\u5728\u5c06\u5a92\u4f53\u6444\u5165\u6d41\u5a92\u4f53\u670d\u52a1\u7684\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5bf9\u670d\u52a1\u5668\u7aef\u8fdb\u884c\u4e00\u4e9b\u5047\u8bbe\uff0c\u4ece\u800c\u7b80\u5316WebRTC\u5408\u89c4\u8d1f\u62c5\uff0c\u5982WebRTC\u7f51\u5173\u6587\u4ef6[I-D.draft-alvestrand-rtcweb-gateways]\u4e2d\u6240\u8ff0\u3002\u00b6\n\u672c\u6587\u4ef6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u534f\u8bae\uff0c\u7528\u4e8e\u652f\u6301WebRTC\u4f5c\u4e3a\u5a92\u4f53\u6444\u53d6\u65b9\u6cd5\uff0c\u5373\uff1a\n\u5141\u8bb8\u5728\u4f20\u7edf\u5a92\u4f53\u5e73\u53f0\u548cWebRTC\u7aef\u5230\u7aef\u5e73\u53f0\u4e2d\u4ee5\u5c3d\u53ef\u80fd\u4f4e\u7684\u5ef6\u8fdf\u8fdb\u884c\u63a5\u6536\u3002\u00b6\n\u5173\u952e\u8bcd&#34\uff1b\u5fc5\u987b&#34&#34;\u4e0d\u5f97&#34&#34;\u5fc5\u9700\u7684&#34&#34;\u5e94&#34&#34;\u4e0d\u5f97&#34&#34;\u5e94\u8be5&#34&#34;\u4e0d\u5e94\u8be5&#34&#34;\u63a8\u8350&#34&#34;5\u6708&#34\u65e5\uff1b\uff0c\u548c&#34\uff1b\u53ef\u9009&#34\uff1b\u5728\u672c\u6587\u4ef6\u4e2d\uff0c\u5e94\u6309\u7167[RFC2119]\u4e2d\u6240\u8ff0\u8fdb\u884c\u89e3\u91ca\u3002\u00b6\nWHIP\u5ba2\u6237\u7aef\uff1aWebRTC\u5a92\u4f53\u7f16\u7801\u5668\u6216\u751f\u4ea7\u8005\uff0c\u901a\u8fc7\u7f16\u7801\u5a92\u4f53\u5e76\u5c06\u5176\u4f20\u9001\u5230\u8fdc\u7a0b\u5a92\u4f53\u670d\u52a1\u5668\uff0c\u5145\u5f53WHIP\u534f\u8bae\u7684\u5ba2\u6237\u7aef\u3002\u00b6\n\u5a92\u4f53\u670d\u52a1\u5668\uff1a\u4e0eWHIP\u5ba2\u6237\u7aef\u5efa\u7acb\u5a92\u4f53\u4f1a\u8bdd\u5e76\u63a5\u6536\u5176\u751f\u6210\u7684\u5a92\u4f53\u7684WebRTC\u5a92\u4f53\u670d\u52a1\u5668\u6216\u6d88\u8d39\u8005\u3002\u00b6\nWHIP resource\uff1a\u7531WHIP\u7aef\u70b9\u4e3a\u6b63\u5728\u8fdb\u884c\u7684\u6444\u53d6\u4f1a\u8bdd\u5206\u914d\u7684\u8d44\u6e90\uff0cWHIP\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u9001\u66f4\u6539\u4f1a\u8bdd\u7684\u8bf7\u6c42\uff08\u4f8b\u5982\uff0cICE\u64cd\u4f5c\u6216\u7ec8\u6b62\uff09\u3002\u00b6\nWHIP resource URL\uff1a\u7531WHIP\u7aef\u70b9\u5206\u914d\u7ed9\u7279\u5b9a\u5a92\u4f53\u4f1a\u8bdd\u7684URL\uff0c\u53ef\u7528\u4e8e\u6267\u884c\u7ec8\u6b62\u4f1a\u8bdd\u6216ICE\u91cd\u542f\u7b49\u64cd\u4f5c\u3002\u00b6\nWebRTC HTTP\u63a5\u6536\u534f\u8bae\uff08WHIP\uff09\u4f7f\u7528HTTP POST\u8bf7\u6c42\u6267\u884c\u5355\u53d1SDP\u63d0\u4f9b/\u5e94\u7b54\uff0c\u4ee5\u4fbf\u5728\u7f16\u7801\u5668/\u5a92\u4f53\u751f\u4ea7\u8005\uff08WHIP\u5ba2\u6237\u7aef\uff09\u548c\u5e7f\u64ad\u63a5\u6536\u7aef\u70b9\uff08\u5a92\u4f53\u670d\u52a1\u5668\uff09\u4e4b\u95f4\u5efa\u7acbICE/DTLS\u4f1a\u8bdd\u3002\u00b6\n\u8bbe\u7f6eICE/DTLS\u4f1a\u8bdd\u540e\uff0c\u5a92\u4f53\u5c06\u4ece\u7f16\u7801\u5668/\u5a92\u4f53\u5236\u4f5c\u8005\uff08WHIP\u5ba2\u6237\u7aef\uff09\u5355\u5411\u6d41\u5230\u5e7f\u64ad\u63a5\u6536\u7aef\u70b9\uff08\u5a92\u4f53\u670d\u52a1\u5668\uff09\u3002\u4e3a\u4e86\u964d\u4f4e\u590d\u6742\u6027\uff0c\u4e0d\u652f\u6301SDP\u91cd\u65b0\u534f\u5546\uff0c\u56e0\u6b64\u4e00\u65e6\u5b8c\u6210HTTP\u4e0a\u7684\u521d\u59cbSDP\u63d0\u4f9b/\u5e94\u7b54\uff0c\u5c31\u4e0d\u80fd\u6dfb\u52a0\u6216\u5220\u9664\u4efb\u4f55\u66f2\u76ee\u6216\u6d41\u3002\u00b6\n+-----------------++------------------++--------------++---------++---------++----+---------+---------+----+---------+--------------+--------------+--------------+----+----+--------------+--------------+----+--------------+----+----+----+----+----++----+| | | | | | | | | | | | | | | | | | | HTTP POST\uff08SDP\u63d0\u4f9b\uff09| | |+-------------------------+--------------++++|201\u5df2\u521b\u5efa\uff08SDP\u7b54\u6848\uff09| | |+&lt\uff1b--------------------------------------+| | |ICE\u8bf7\u6c42| |+--------------------------------------&gt\uff1b+| |ICE\u54cd\u5e94| |&lt\uff1b--------------------------------------+| |DTLS\u8bbe\u7f6e| |&lt==========================================&gt\uff1b| |RTP/RTCP\u6d41\u91cf| |+--------------------------------------&gt\uff1b| |HTTP DELETE |+---------------------------------------------------------------&gt\uff1b+|200\u597d|&lt-------------------------------------------------------------\u5341\u3001\n\u4e3a\u4e86\u8bbe\u7f6e\u6444\u53d6\u4f1a\u8bdd\uff0cWHIP\u5ba2\u6237\u7aef\u5c06\u6839\u636eJSEP\u89c4\u5219\u751f\u6210SDP\u63d0\u4f9b\uff0c\u5e76\u5411WHIP\u7aef\u70b9\u914d\u7f6e\u7684URL\u53d1\u51faHTTP POST\u8bf7\u6c42\u3002\u00b6\nHTTP POST\u8bf7\u6c42\u7684\u5185\u5bb9\u7c7b\u578b\u4e3aapplication/sdp\uff0c\u5e76\u5305\u542bsdp offer\u4f5c\u4e3a\u4e3b\u4f53\u3002WHIP\u7aef\u70b9\u5c06\u751f\u6210\u4e00\u4e2aSDP\u5e94\u7b54\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a201\u521b\u5efa\u7684\u54cd\u5e94\uff0c\u5176\u4e2d\u5185\u5bb9\u7c7b\u578b\u4e3aapplication/SDP\uff0cSDP\u5e94\u7b54\u4f5c\u4e3a\u4e3b\u4f53\uff0c\u4f4d\u7f6e\u5934\u6307\u5411\u65b0\u521b\u5efa\u7684\u8d44\u6e90\u3002\u00b6\nSDP\u62a5\u4ef7\u5e94\u4f7f\u7528sendonly\u5c5e\u6027\uff0cSDP\u5e94\u7b54\u5fc5\u987b\u4f7f\u7528RecVoOnly\u5c5e\u6027\u3002\u00b6\n\u4e00\u65e6\u5efa\u7acb\u4e86\u4f1a\u8bdd\uff0cICE\u540c\u610f\u65b0\u9c9c\u5ea6[RFC7675]\u5c06\u7528\u4e8e\u68c0\u6d4b\u7a81\u7136\u65ad\u5f00\u548cDTLS\u65ad\u5f00\uff0c\u4ee5\u7ec8\u6b62\u4efb\u4f55\u4e00\u65b9\u7684\u4f1a\u8bdd\u3002\u00b6\n\u8981\u663e\u5f0f\u7ec8\u6b62\u4f1a\u8bdd\uff0cWHIP\u5ba2\u6237\u7aef\u5fc5\u987b\u5bf9\u521d\u59cbHTTP POST\u7684Location\u5934\u4e2d\u8fd4\u56de\u7684\u8d44\u6e90URL\u6267\u884cHTTP DELETE\u8bf7\u6c42\u3002\u6536\u5230HTTP\u5220\u9664\u8bf7\u6c42\u540e\uff0c\u5c06\u5220\u9664WHIP\u8d44\u6e90\uff0c\u5e76\u91ca\u653e\u5a92\u4f53\u670d\u52a1\u5668\u4e0a\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u7ec8\u6b62ICE\u548cDTLS\u4f1a\u8bdd\u3002\u00b6\n\u7ec8\u6b62\u4f1a\u8bdd\u7684\u5a92\u4f53\u670d\u52a1\u5668\u5fc5\u987b\u6309\u7167[RFC7675]\u7b2c5.2\u8282\u4e2d\u7684\u7a0b\u5e8f\u7acb\u5373\u64a4\u9500\u540c\u610f\u3002\u00b6\nWHIP\u7aef\u70b9\u5fc5\u987b\u4e3a\u8d44\u6e90URL\u4e0a\u7684\u4efb\u4f55HTTP GET\u3001HEAD\u6216PUT\u8bf7\u6c42\u8fd4\u56deHTTP 405\u54cd\u5e94\uff0c\u4ee5\u4fbf\u4e3a\u672c\u534f\u8bae\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u4fdd\u7559\u5176\u4f7f\u7528\u3002\u00b6\nWHIP\u8d44\u6e90\u5fc5\u987b\u4e3a\u8d44\u6e90URL\u4e0a\u7684\u4efb\u4f55HTTP GET\u3001HEAD\u3001POST\u6216PUT\u8bf7\u6c42\u8fd4\u56deHTTP 405\u54cd\u5e94\uff0c\u4ee5\u4fbf\u4e3a\u672c\u534f\u8bae\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u4fdd\u7559\u5176\u4f7f\u7528\u3002\u00b6\nWHIP\u5ba2\u6237\u7684\u521d\u59cb\u62a5\u4ef7\u53ef\u4ee5\u5728\u5b8c\u6574\u7684ICE\u4f1a\u8bae\u7ed3\u675f\u540e\u53d1\u9001\uff0c\u5305\u62ec\u5b8c\u6574\u7684ICE\u5019\u9009\u4eba\u540d\u5355\uff0c\u6216\u8005\u53ea\u5305\u542b\u672c\u5730\u5019\u9009\u4eba\uff0c\u751a\u81f3\u662f\u7a7a\u540d\u5355\u3002\u00b6\n\u4e3a\u4e86\u7b80\u5316\u534f\u8bae\uff0c\u5728\u53d1\u9001SDP\u5e94\u7b54\u540e\uff0c\u4e0d\u652f\u6301\u4ece\u5a92\u4f53\u670d\u52a1\u5668ICE\u5019\u9009\u8005\u4ea4\u6362\u6536\u96c6\u7684\u6d93\u6d93\u6d41\u5019\u9009\u8005\u3002\u5728\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e4b\u524d\uff0cWHIP\u7aef\u70b9\u5e94\u6536\u96c6\u5a92\u4f53\u670d\u52a1\u5668\u7684\u6240\u6709\u5019\u9009ICE\uff0cSDP\u5e94\u7b54\u5e94\u5305\u542b\u5a92\u4f53\u670d\u52a1\u5668\u7684\u5019\u9009ICE\u7684\u5b8c\u6574\u5217\u8868\u3002\u5a92\u4f53\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528ICE lite\uff0c\u800cWHIP\u5ba2\u6237\u7aef\u5fc5\u987b\u5b9e\u73b0\u5b8c\u6574\u7684ICE\u3002\u00b6\nWHIP\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u5411WHIP\u8d44\u6e90URL\u53d1\u9001HTTP\u8865\u4e01\u8bf7\u6c42\u6765\u6267\u884c\u6d93\u6d41ICE\u6216ICE\u91cd\u542f[RFC8863]\uff0c\u8be5URL\u7684\u4e3b\u4f53\u5305\u542bMIME\u7c7b\u578b\u4e3a&#34\u7684SDP\u7247\u6bb5\uff1b\u5e94\u7528/\u6ef4\u51b0sdpfrag\u548c#34\uff1b\u6309\u7167[RFC8840]\u4e2d\u7684\u89c4\u5b9a\uff0c\u4f7f\u7528\u65b0\u7684ICE\u5019\u9009\u8005\u6216ICE ufrag/pwd\u91cd\u65b0\u542f\u52a8\u3002WHIP\u8d44\u6e90\u53ef\u80fd\u4e0d\u652f\u6301\u6d93\u6d41ICE\uff08\u5373ICE lite\u5a92\u4f53\u670d\u52a1\u5668\uff09\u6216ICE\u91cd\u542f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5fc5\u987b\u4e3a\u4efb\u4f55HTTP\u8865\u4e01\u8bf7\u6c42\u8fd4\u56de405 Method not Allowed\u54cd\u5e94\u3002\u00b6\n\u63a5\u6536\u5230\u5e26\u6709\u65b0ICE\u5019\u9009\u7684\u8def\u5f84\u8bf7\u6c42\u4f46\u4e0d\u6267\u884cICE\u91cd\u542f\u7684WHIP\u8d44\u6e90\u5fc5\u987b\u8fd4\u56de204\u65e0\u6b63\u6587\u7684\u65e0\u5185\u5bb9\u54cd\u5e94\u3002\u00b6\n\u8865\u4e01/resource/id HTTP/1.1Host:whip\u3002\u5b9e\u4f8bcomContent\u7c7b\u578b\uff1aapplication/Drickle ice sdpfragContent\u957f\u5ea6\uff1a548a=ice ufrag:EsAwa=ice pwd:P2uYro0UCOQ4zxjKXaWCBui1m=audio RTP/AVP 0a=mid:0a=\u5019\u9009\u8005\uff1a1387637174 1 udp 2122260223 192.0.2.1 61764\u5178\u578b\u4e3b\u673a\u751f\u62100 ufrag EsAw\u7f51\u7edcid 1a=\u5019\u9009\u8005\uff1a3471623853 1 udp 2122194687 198.51.100.1 61765\u5178\u578b\u4e3b\u673a\u751f\u62100 ufrag EsAw\u7f51\u7edcid2a=\u5019\u9009\uff1a473322822 1 tcp 1518280447 192.0.2.1 9\u5178\u578b\u4e3b\u673atcptype\u6d3b\u52a8\u751f\u62100 ufrag EsAw\u7f51\u7edcid 1a=\u5019\u9009\uff1a2154773085 1 tcp 151821491198.51.100.2 9\u5178\u578b\u4e3b\u673atcptype\u6d3b\u52a8\u751f\u62100 ufrag EsAw\u7f51\u7edcid 2a=\u5019\u9009\u7ed3\u675fHTTP/1.1 204\u65e0\u5185\u5bb9\n\u5982\u679cHTTP\u8865\u4e01\u8bf7\u6c42\u5bfc\u81f4ICE\u91cd\u542f\uff0c\u5219WHIP\u8d44\u6e90\u5c06\u8fd4\u56de\u4e00\u4e2a200 OK\uff0c\u5e26\u6709&#34\uff1b\u5e94\u7528/\u6ef4\u51b0sdpfrag\u548c#34\uff1b\u6b63\u6587\u5305\u542b\u65b0\u7684ICE\u7528\u6237\u540d\u7247\u6bb5\u548c\u5bc6\u7801\uff0c\u4ee5\u53ca\u53ef\u9009\u7684\u5a92\u4f53\u670d\u52a1\u5668\u7684\u65b0ICE\u5019\u9009\u96c6\u3002\u00b6\n\u7531\u4e8eWHIP\u5ba2\u6237\u7aef\u53d1\u9001\u7684HTTP\u8865\u4e01\u8bf7\u6c42\u53ef\u80fd\u4f1a\u88abWHIP\u8d44\u6e90\u65e0\u5e8f\u63a5\u6536\uff0c\u56e0\u6b64WHIP\u8d44\u6e90\u5e94\u8be5\u8ddf\u8e2aWHIP\u5ba2\u6237\u7aef\u4f7f\u7528\u7684ICE\u7528\u6237\u540d\u7247\u6bb5\u548c\u5ba2\u6237\u7aef\u7684\u5148\u524d\u503c\u3002\u5982\u679c\u5ba2\u6237\u7aef\u63a5\u6536\u5230HTTP\u8865\u4e01\u8bf7\u6c42\u65f6\u4f7f\u7528\u4e86\u4ee5\u524d\u4f7f\u7528\u7684ICE\u7528\u6237\u540d\u7247\u6bb5\u548c\u5bc6\u7801\uff0c\u5219WHIP\u7aef\u70b9\u5c06\u4e0d\u4f1a\u6267\u884c\u5e76\u91cd\u65b0\u542f\u52a8ICE\uff0c\u800c\u662f\u4f7f\u7528409\u51b2\u7a81\u54cd\u5e94\u62d2\u7edd\u8be5\u8bf7\u6c42\u3002\u00b6\n\u4e3a\u4e86\u964d\u4f4e\u5728\u5ba2\u6237\u7aef\u548c\u5a92\u4f53\u670d\u52a1\u5668\u4e2d\u5b9e\u73b0WHIP\u7684\u590d\u6742\u6027\uff0c\u5bf9WebRTC\u7684\u4f7f\u7528\u8fdb\u884c\u4e86\u4e00\u4e9b\u9650\u5236\u3002\u00b6\nSDP\u6346\u7ed1\u5305\u5e94\u7531WHIP\u5ba2\u6237\u7aef\u548c\u5a92\u4f53\u670d\u52a1\u5668\u4f7f\u7528\u3002\u6839\u636e[RFC8843]\uff0cWHIP\u5ba2\u6237\u521b\u5efa\u7684SDP\u62a5\u4ef7\u5fc5\u987b\u5728\u6240\u6709m-lines\u4e2d\u5305\u542bbundle only\u5c5e\u6027\u3002\u6b64\u5916\uff0cRTCP muxing\u8fd8\u5e94\u5f97\u5230WHIP\u5ba2\u6237\u7aef\u548c\u5a92\u4f53\u670d\u52a1\u5668\u7684\u652f\u6301\u3002\u00b6\n\u4e0e[RFC5763]\u4e0d\u540c\uff0cWHIP\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728SDP\u62a5\u4ef7\u4e2d\u4f7f\u7528setup:active\u7684\u8bbe\u7f6e\u5c5e\u6027\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cWHIP\u7aef\u70b9\u5fc5\u987b\u5728SDP\u5e94\u7b54\u4e2d\u4f7f\u7528setup:passive\u7684\u8bbe\u7f6e\u5c5e\u6027\u503c\u3002\u00b6\nWHIP\u7aef\u70b9\u548c\u5a92\u4f53\u670d\u52a1\u5668\u53ef\u80fd\u4e0d\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u5171\u5b58\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u4e0d\u540c\u5a92\u4f53\u670d\u52a1\u5668\u7684\u4f20\u5165\u8bf7\u6c42\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u3002WHIP\u5ba2\u6237\u7aef\u5e94\u901a\u8fc7\u5bf9WHIP\u7aef\u70b9URL\u7684\u521d\u59cbHTTP\u54cd\u5e94\u4e2d\u7684307\u4e34\u65f6\u91cd\u5b9a\u5411\u54cd\u5e94\u4ee3\u7801\u652f\u6301HTTP\u91cd\u5b9a\u5411\u3002WHIP\u8d44\u6e90URL\u5fc5\u987b\u662f\u6700\u7ec8URL\uff0c\u53d1\u9001\u7ed9\u5b83\u7684\u8865\u4e01\u548c\u5220\u9664\u8bf7\u6c42\u4e0d\u9700\u8981\u652f\u6301\u91cd\u5b9a\u5411\u3002\u00b6\n\u5728\u9ad8\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\uff0cWHIP\u7aef\u70b9\u53ef\u80fd\u4f1a\u8fd4\u56de503\uff08\u670d\u52a1\u4e0d\u53ef\u7528\uff09\u72b6\u6001\u4ee3\u7801\uff0c\u6307\u793a\u670d\u52a1\u5668\u5f53\u524d\u7531\u4e8e\u4e34\u65f6\u8fc7\u8f7d\u6216\u8ba1\u5212\u7ef4\u62a4\u800c\u65e0\u6cd5\u5904\u7406\u8bf7\u6c42\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5728\u4e00\u4e9b\u5ef6\u8fdf\u540e\u5f97\u5230\u7f13\u89e3\u3002\u00b6\nWHIP\u7aef\u70b9\u53ef\u80fd\u4f1a\u53d1\u9001\u4e00\u4e2aRetry After\u6807\u5934\u5b57\u6bb5\uff0c\u6307\u793a\u5728\u53d1\u51fa\u91cd\u5b9a\u5411\u8bf7\u6c42\u4e4b\u524d\u8981\u6c42\u7528\u6237\u4ee3\u7406\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\u3002\u00b6\nWHIP\u7aef\u70b9\u53ef\u4ee5\u5728\u5bf9WHIP\u7aef\u70b9url\u7684HTTP POST\u8bf7\u6c42\u7684201\u521b\u5efa\u7684\u54cd\u5e94\u4e2d\u8fd4\u56de\u5ba2\u6237\u7aef\u53ef\u7528\u7684ICE\u670d\u52a1\u5668\u914d\u7f6eurl\u548c\u51ed\u8bc1\u3002\u00b6\n\u6bcf\u4e2aICE\u670d\u52a1\u5668\u5c06\u5728\u5e26\u6709&#34\uff1brel&#34\uff1b\u5206\u914d\u503c\u4e3a&#34\uff1bice\u670d\u52a1\u5668&#34\uff1b\u5176\u4e2d\uff0c\u94fe\u63a5\u76ee\u6807URI\u662fICE\u670d\u52a1\u5668URL\uff0c\u51ed\u636e\u5728\u94fe\u63a5\u76ee\u6807\u5c5e\u6027\u4e2d\u7f16\u7801\u5982\u4e0b\uff1a\n\u7528\u6237\u540d\uff1a\u5982\u679c\u8fd9\u4e2a\u94fe\u63a5\u5934\u4ee3\u8868\u4e00\u4e2a\u56de\u5408\u670d\u52a1\u5668\uff0c\u90a3\u4e48creadential\u7c7b\u578b\u662f&#34\uff1b\u5bc6\u7801&#34\uff1b\uff0c\u7136\u540e\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u8981\u4e0e\u8be5\u56de\u5408\u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\u7684\u7528\u6237\u540d\u3002\u00b6\n\u51ed\u8bc1\uff1a\u5982\u679c\u51ed\u8bc1\u7c7b\u578b\u4e3a&#34\uff1b\u5bc6\u7801&#34\uff1b\uff0c\u51ed\u8bc1\u4ee3\u8868\u957f\u671f\u8eab\u4efd\u9a8c\u8bc1\u5bc6\u7801\uff0c\u5982[RFC8489]\u7b2c10.2\u8282\u6240\u8ff0\u3002\u00b6\ncreadential\u7c7b\u578b\uff1a\u5982\u679c\u6b64RTICEServer\u5bf9\u8c61\u8868\u793a\u56de\u5408\u670d\u52a1\u5668\uff0c\u5219\u6b64\u5c5e\u6027\u6307\u5b9a\u5f53\u8be5\u56de\u5408\u670d\u52a1\u5668\u8bf7\u6c42\u6388\u6743\u65f6\u5e94\u5982\u4f55\u4f7f\u7528\u51ed\u636e\u3002\u5982\u679c\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a&#34\uff1b\u5bc6\u7801&#34\uff1b\u3002\u00b6\n\u94fe\u63a5\uff1a\u6655\u7729\uff1a\u6655\u7729\u3002\u5b9e\u4f8b\u7f51\u94fe\u63a5\uff1a\u8f6c\uff1a\u8f6c\u3002\u5b9e\u4f8b\u7f51\u4f20\u8f93=udp\uff1brel=&#34\uff1b\u51b0\u670d\u52a1\u5668&#34\uff1b\uff1b\u7528\u6237\u540d=&#34\uff1b\u7528\u6237&#34\uff1b\uff1b\u5b66\u5386\uff1a&#34\uff1b\u6211\u7684\u5bc6\u7801&#34\uff1b\uff1b\u51ed\u8bc1\u7c7b\u578b\uff1a&#34\uff1b\u5bc6\u7801&#34\uff1b\uff1b\u94fe\u63a5\uff1a\u8f6c\uff1a\u8f6c\u3002\u5b9e\u4f8b\u7f51\u4f20\u8f93=tcp\uff1brel=&#34\uff1b\u51b0\u670d\u52a1\u5668&#34\uff1b\uff1b\u7528\u6237\u540d=&#34\uff1b\u7528\u6237&#34\uff1b\uff1b\u5b66\u5386\uff1a&#34\uff1b\u6211\u7684\u5bc6\u7801&#34\uff1b\uff1b\u51ed\u8bc1\u7c7b\u578b\uff1a&#34\uff1b\u5bc6\u7801&#34\uff1b\uff1b\u94fe\u63a5\uff1a\u8f6c\u8eab\uff1a\u8f6c\u8eab\u3002\u5b9e\u4f8b\u7f51\u4f20\u8f93=tcp\uff1brel=&#34\uff1b\u51b0\u670d\u52a1\u5668&#34\uff1b\uff1b\u7528\u6237\u540d=&#34\uff1b\u7528\u6237&#34\uff1b\uff1b\u5b66\u5386\uff1a&#34\uff1b\u6211\u7684\u5bc6\u7801&#34\uff1b\uff1b\u51ed\u8bc1\u7c7b\u578b\uff1a&#34\uff1b\u5bc6\u7801&#34\uff1b\uff1b\n\u6709\u4e9bwebrtc\u5b9e\u73b0\u4e0d\u652f\u6301\u5728\u521b\u5efa\u672c\u5730\u670d\u52a1\u540e\u66f4\u65b0ICE\u670d\u52a1\u5668\u914d\u7f6e\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e9b\u5ba2\u6237\u7aef\uff0cWHIP\u7aef\u70b9\u8fd8\u53ef\u4ee5\u5728\u5bf9\u53d1\u9001\u5230POST\u8bf7\u6c42\u4e4b\u524d\u53d1\u9001\u7684WHIP\u7aef\u70b9URL\u7684\u5df2\u9a8c\u8bc1\u9009\u9879\u8bf7\u6c42\u7684\u54cd\u5e94\u4e2d\u5305\u542bICE\u670d\u52a1\u5668\u914d\u7f6e\u3002\u00b6\n\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e7f\u64ad\u670d\u52a1\u6216\u5916\u90e8\u8f6e\u8f6c\u63d0\u4f9b\u5546\u5728WHIP\u5ba2\u6237\u7aef\u4e0a\u63d0\u4f9b\u7684\u957f\u671f\u51ed\u8bc1\u6765\u914d\u7f6eSTU/TURN\u670d\u52a1\u5668URL\uff0c\u8986\u76d6WHIP\u7aef\u70b9\u63d0\u4f9b\u7684\u503c\u3002\u00b6\n\u901a\u8fc7SDP\u62a5\u4ef7/\u5e94\u7b54\u4e2d\u7684\u534f\u5546\uff0c\u5a92\u4f53\u670d\u52a1\u5668\u548cWHIP\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u652f\u6301\u540c\u6b65\u5e7f\u64ad\u548c\u53ef\u4f38\u7f29\u89c6\u9891\u7f16\u7801\uff08\u5305\u62ecK-SVC\u6a21\u5f0f\uff09\u3002\u00b6\n\u5982\u679c\u5ba2\u6237\u652f\u6301simulcast\u5e76\u5e0c\u671b\u4f7f\u5176\u80fd\u591f\u53d1\u5e03\uff0c\u5219\u5fc5\u987b\u6839\u636e[RFC8853]\u7b2c5.3\u8282\u4e2d\u7684\u7a0b\u5e8f\u534f\u5546SDP\u62a5\u4ef7\u4e2d\u7684\u652f\u6301\u3002\u63a5\u53d7\u540c\u6b65\u5e7f\u64ad\u670d\u52a1\u7684\u670d\u52a1\u5668\u5fc5\u987b\u6839\u636e\u7a0b\u5e8f[RFC8853]\u7b2c5.3.2\u8282\u521b\u5efa\u7b54\u6848\u3002\u00b6\n\u4e3a\u4e86\u652f\u6301\u4e3aWHIP\u534f\u8bae\u5b9a\u4e49\u7684\u672a\u6765\u6269\u5c55\uff0c\u5b9a\u4e49\u4e86\u6ce8\u518c\u548c\u5ba3\u5e03\u65b0\u6269\u5c55\u7684\u901a\u7528\u8fc7\u7a0b\u3002\u00b6\nWHIP\u670d\u52a1\u5668\u652f\u6301\u7684\u534f\u8bae\u6269\u5c55\u5fc5\u987b\u5728\u53d1\u9001\u5230WHIP\u7aef\u70b9\u7684\u521d\u59cbHTTP POST\u8bf7\u6c42\u7684201\u521b\u5efa\u54cd\u5e94\u4e0a\u901a\u544a\u7ed9WHIP\u5ba2\u6237\u7aef\u3002WHIP\u7aef\u70b9\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u6269\u5c55\u8fd4\u56de\u4e00\u4e2a\u94fe\u63a5\u5934\uff0c\u6269\u5c55\u540d\u4e3a#34\uff1brel&#34\uff1b\u7c7b\u578b\u5c5e\u6027\u548cHTTP\u8d44\u6e90\u7684URI\uff0c\u8be5\u8d44\u6e90\u5c06\u53ef\u7528\u4e8e\u63a5\u6536\u4e0e\u8be5\u6269\u5c55\u76f8\u5173\u7684\u8bf7\u6c42\u3002\u00b6\n\u5bf9\u4e8eWHIP\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u534f\u8bae\u6269\u5c55\u90fd\u662f\u53ef\u9009\u7684\u3002WHIP\u5ba2\u6237\u7aef\u5fc5\u987b\u5ffd\u7565\u4efb\u4f55\u672a\u77e5\u7684\u94fe\u63a5\u5c5e\u6027&#34\uff1brel&#34\uff1b\u5c5e\u6027\u503c\u548cWHIP\u670d\u52a1\u5668\u4e0d\u5f97\u8981\u6c42\u4f7f\u7528\u4efb\u4f55\u6269\u5c55\u3002\u00b6\n\u6bcf\u4e2a\u534f\u8bae\u6269\u5c55\u5fc5\u987b\u6ce8\u518c\u4e00\u4e2a\u552f\u4e00\u7684&#34\uff1brel&#34\uff1bIANA\u4e0a\u4ee5\u524d\u7f00\u5f00\u5934\u7684\u5c5e\u6027\u503c\uff1a&#34\uff1burn:ietf:params:whip:&#34\uff1b\u3002\u00b6\n\u4f8b\u5982\uff0c\u4f7f\u7528\u4e2d\u6307\u5b9a\u7684\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u8fdb\u884c\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u6f5c\u5728\u6269\u5c55https://html.spec.whatwg.org/multipage/server-sent-events.html#server-\u53d1\u9001\u4e8b\u4ef6\u65f6\uff0c\u7528\u4e8e\u8fde\u63a5\u5230\u5df2\u53d1\u5e03\u6d41\u7684\u670d\u52a1\u5668\u7aef\u4e8b\u4ef6\u8d44\u6e90\u7684URL\u5c06\u5728\u521d\u59cbHTTP&#34\u4e2d\u8fd4\u56de\uff1b\u521b\u5efa201\u4e2a#34\u4e2a\uff1b\u56de\u7b54\u4e3a&#34\uff1b\u94fe\u63a5&#34\uff1b\u6807\u9898\u548ca&#34\uff1brel&#34\uff1b\u5c5e\u6027\u4e3a&#34\uff1burn:ietf:params:whip:server-sent-events&#34\uff1b\u3002\u00b6\nIANA\u5df2\u6839\u636e[RFC8288]\u7b2c4.2\u8282\u6ce8\u518c\u4e86\u4ee5\u4e0b\u94fe\u63a5\u5173\u7cfb\u7c7b\u578b\u3002\u00b6\n\u5173\u7cfb\u540d\u79f0\uff1aice\u670d\u52a1\u5668\u63cf\u8ff0\uff1a\u63cf\u8ff0ice\u4ee3\u7406\u53ef\u7528\u4e8e\u4e0e\u5bf9\u7b49\u65b9\u5efa\u7acb\u8fde\u63a5\u7684STUN\u548cTURN\u670d\u52a1\u5668\u3002\u53c2\u8003\uff1a\u5f85\u5b9a", "note_en": "While WebRTC has been very sucessful in a wide range of scenarios, its adoption in the broadcasting/streaming industry is lagging behind.Currently there is no standard protocol (like SIP or RTSP) designed for ingesting media into a streaming service using WebRTC and so content providers still rely heavily on protocols like RTMP for it. \u00b6\n These protocols are much older than WebRTC and by default lack some important security and resilience features provided by WebRTC with minimal overhead and additional latency. \u00b6\n The media codecs used for ingestion in older protocols tend to be limited and not negotiated. WebRTC includes support for negotiation of codecs, potentially alleviating transcoding on the ingest node (wich can introduce delay and degrade media quality). Server side transcoding that has traditionally been done to present multiple renditions in Adaptive Bit Rate Streaming (ABR) implementations can be replaced with simulcasting and SVC codecs that are well supported by WebRTC clients. In addition, WebRTC clients can adjust client-side encoding parameters based on RTCP feedback to maximize encoding quality. \u00b6\n  This document proposes a simple HTTP based protocol that will allow WebRTC based ingest of content into streaming servics and/or CDNs. \u00b6\n This Internet-Draft is submitted in full conformance with the provisions of BCP 78 and BCP 79. \u00b6\n Internet-Drafts are working documents of the Internet Engineering Task Force (IETF). Note that other groups may also distribute working documents as Internet-Drafts. The list of current Internet-Drafts is at   https://datatracker.ietf.org/drafts/current/. \u00b6\n Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as &#34;work in progress.&#34; \u00b6\n Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved. \u00b6\n This document is subject to BCP 78 and the IETF Trust&#39;s Legal Provisions Relating to IETF Documents (  https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License. \u00b6\n  RTCWEB standardized JSEP ( [ RFC8829]), a mechanishm used to control the setup, management, and teardown of a multimedia session, how to apply it using the SDP Offer/Answer model and all the formats for the data sent over the wire (media, codec, encryption, ...). Also, WebRTC intentionally does not specify a signaling transport protocol at application level. This flexibility has allowed the implementation of a wide range of services. However, those services are typically standalone silos which don&#39;t require interoperability with other services or leverage the existence of tools that can communicate with them. \u00b6\n In the broadcasting/streaming world, the usage of hardware encoders that make it very simple to plug in (SDI) cables carrying raw media, encode it in place, and push it to any streaming service or CDN ingest is already ubiquitous. It is the adoption of a custom signaling transport protocol for each WebRTC service has hindered broader adoption as an ingestion protocol. \u00b6\n While some standard signaling protocols are available that can be integrated with WebRTC, like SIP or XMPP, they are not designed to be used in broadcasting/streaming services, and there also is no sign of adoption in that industry. RTSP, which is based on RTP and may be the closest in terms of features to WebRTC, is not compatible with the WebRTC SDP offer/answer model. \u00b6\n In the specific case of media ingestion into a streaming service, some assumptions can be made about the server-side which simplifies the WebRTC compliance burden, as detailed in webrtc-gateway document  [ I-D.draft-alvestrand-rtcweb-gateways]. \u00b6\n This document proposes a simple protocol for supporting WebRTC as media ingestion method which is: \u00b6\n Allows for both ingest in traditional media platforms and ingest in WebRTC end-to-end platforms with the lowest possible latency. \u00b6\n The key words &#34;MUST&#34;, &#34;MUST NOT&#34;, &#34;REQUIRED&#34;, &#34;SHALL&#34;, &#34;SHALL NOT&#34;, &#34;SHOULD&#34;, &#34;SHOULD NOT&#34;, &#34;RECOMMENDED&#34;, &#34;MAY&#34;, and &#34;OPTIONAL&#34; in this document are to be interpreted as described in  [ RFC2119]. \u00b6\n WHIP client: WebRTC media encoder or producer that acts as a client of the WHIP protocol by encoding and delivering the media to a remote media server. \u00b6\n      Media Server: WebRTC media server or consumer that establishes the media session with the WHIP client and receives the media produced by it. \u00b6\n  WHIP resource: Allocated resource by the WHIP endpoint for an ongoing ingest session that the WHIP client can send requests for altering the session (ICE operations or termination, for example). \u00b6\n  WHIP resource URL: URL allocated to a specific media session by the WHIP endpoint which can be used to perform operations such as terminating the session or ICE restarts. \u00b6\n The WebRTC-HTTP ingest protocol (WHIP) uses an HTTP POST request to perform a single shot SDP offer/answer so an ICE/DTLS session can be established between the encoder/media producer (WHIP client) and the broadcasting ingestion endpoint (media server). \u00b6\n Once the ICE/DTLS session is set up, the media will flow unidirectionally from the encoder/media producer (WHIP client) to the broadcasting ingestion endpoint (media server). In order to reduce complexity, no SDP renegotiation is supported, so no tracks or streams can be added or removed once the initial SDP offer/answer over HTTP is completed. \u00b6\n  +-----------------+ +---------------+ +--------------+ +----------------+ | WebRTC Producer | | WHIP endpoint | | Media Server | | WHIP Resource | +---------+-------+ +-------+- -----+ +------+-------+ +--------|-------+ | | | | | | | | |HTTP POST (SDP Offer) | | | +------------------------&gt;+ | | |201 Created (SDP answer) | | | +&lt;------------------------+ | | | ICE REQUEST | | +-----------------------------------------&gt;+ | | ICE RESPONSE | | &lt;------------------------------------------+ | | DTLS SETUP | | &lt;==========================================&gt; | | RTP/RTCP FLOW | | +------------------------------------------&gt; | | HTTP DELETE | +------------------------------------------------------------&gt;+ | 200 OK | &lt;-------------------------------------------------------------x\n In order to setup an ingestion session, the WHIP client will generate an SDP offer according to the JSEP rules and do an HTTP POST request to the WHIP endpoint configured URL. \u00b6\n The HTTP POST request will have a content type of application/sdp and contain the SDP offer as the body. The WHIP endpoint will generate an SDP answer and return a 201 Created response with a content type of application/sdp and the SDP answer as the body and a Location header pointing to the newly created resource. \u00b6\n The SDP offer SHOULD use the sendonly attribute and the SDP answer MUST use the recvonly attribute. \u00b6\n Once a session is setup, ICE consent freshness  [ RFC7675] will be used to detect abrupt disconnection and DTLS teardown for session termination by either side. \u00b6\n To explicitly terminate the session, the WHIP client MUST perform an HTTP DELETE request to the resource URL returned in the Location header of the initial HTTP POST. Upon receiving the HTTP DELETE request, the WHIP resource will be removed and the resources freed on the media server, terminating the ICE and DTLS sessions. \u00b6\n A media server terminating a session MUST follow the procedures in  [ RFC7675] section 5.2 for immediate revocation of consent. \u00b6\n The WHIP endpoints MUST return an HTTP 405 response for any HTTP GET, HEAD or PUT requests on the resource URL in order to reserve its usage for future versions of this protocol specification. \u00b6\n The WHIP resources MUST return an HTTP 405 response for any HTTP GET, HEAD, POST or PUT requests on the resource URL in order to reserve its usage for future versions of this protocol specification. \u00b6\n The initial offer by the WHIP client MAY be sent after the full ICE gathering is complete with the full list of ICE candidates, or only contain local candidates or even an empty list of candidates. \u00b6\n In order to simplify the protocol, there is no support for exchanging gathered trickle candidates from media server ICE candidates once the SDP answer is sent. The WHIP Endpoint SHALL gather all the ICE candidates for the media server before responding to the client request and the SDP answer SHALL contain the full list of ICE candidates of the media server. The media server MAY use ICE lite, while the WHIP client MUST implement full ICE. \u00b6\n The WHIP client MAY perform trickle ICE or an ICE restarts  [ RFC8863] by sending a HTTP PATCH request to the WHIP resource URL with a body containing a SDP fragment with MIME type &#34;application/trickle-ice-sdpfrag&#34; as specified in  [ RFC8840] with the new ICE candidate or ICE ufrag/pwd for ICE restarts. A WHIP resource MAY not support trickle ICE (i.e. ICE lite media servers) or ICE restart, in that case, it MUST return a 405 Method Not Allowed response for any HTTP PATCH request. \u00b6\n A WHIP resource receving a PATH request with new ICE candidates, but which does not perform an ICE restart, MUST return a 204 No content response without body. \u00b6\n  PATCH /resource/id HTTP/1.1Host: whip.example.comContent-Type: application/trickle-ice-sdpfragContent-Length: 548a=ice-ufrag:EsAwa=ice-pwd:P2uYro0UCOQ4zxjKXaWCBui1m=audio RTP/AVP 0a=mid:0a=candidate:1387637174 1 udp 2122260223 192.0.2.1 61764 typ host generation 0 ufrag EsAw network-id 1a=candidate:3471623853 1 udp 2122194687 198.51.100.1 61765 typ host generation 0 ufrag EsAw network-id 2a=candidate:473322822 1 tcp 1518280447 192.0.2.1 9 typ host tcptype active generation 0 ufrag EsAw network-id 1a=candidate:2154773085 1 tcp 1518214911 198.51.100.2 9 typ host tcptype active generation 0 ufrag EsAw network-id 2a=end-of-candidatesHTTP/1.1 204 No Content\n If the HTTP PATCH request results in an ICE restart, the WHIP resource SHALL return a 200 OK with an &#34;application/trickle-ice-sdpfrag&#34; body containing the new ICE username fragment and password and, optionaly, the new set of ICE candidates for the media server. \u00b6\n   As the HTTP PATCH request sent by a WHIP client may be received out of order by the WHIP resource, the WHIP resource SHOULD keep track of the previous values of the ICE username fragment and client used by the WHIP client. If an HTTP PATCH request is received with a previously used ICE username fragment and password by the client, the WHIP endpoint SHALL NOT perform and ICE restart but reject the request with a 409 Conflict response instead. \u00b6\n In order to reduce the complexity of implementing WHIP in both clients and media servers, some restrictions regarding WebRTC usage are made. \u00b6\n SDP bundle SHALL be used by both the WHIP client and the media server. The SDP offer created by the WHIP client MUST include the bundle-only attribute in all m-lines as per  [ RFC8843]. Also, RTCP muxing SHALL be supported by both the WHIP client and the media server. \u00b6\n Unlike  [ RFC5763] a WHIP client MAY use a setup attribute value of setup:active in the SDP offer, in which case the WHIP endpoint MUST use a setup attribute value of setup:passive in the SDP answer. \u00b6\n WHIP endpoints and media servers MAY not be colocated on the same server so it is possible to load balance incoming requests to different media servers. WHIP clients SHALL support HTTP redirection via the 307 Temporary Redirect response code in the initial HTTP response to the WHIP endpoint URL. The WHIP resource URL MUST be a final one, and redirections are not required to be supported for the PATCH and DELETE request sent to it. \u00b6\n In case of high load, the WHIP endpoints MAY return a 503 (Service Unavailable) status code indicating that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay. \u00b6\n The WHIP endpoint MAY send a Retry-After header field indicating the minimum time that the user agent is asked to wait before issuing the redirected request. \u00b6\n The WHIP endpoint MAY return ICE server configuration urls and credentials usable by the client in the 201 Created response to the HTTP POST request to the WHIP endpoint url. \u00b6\n Each ICE server will be returned on a Link header with a &#34;rel&#34; attribribute value of &#34;ice-server&#34; where the Link target URI is the ICE server URL and the credentials are encoded in the Link target attributes as follows: \u00b6\n username: If this the Link header represents a TURN server, and creadential-type is &#34;password&#34;, then this attribute specifies the username to use with that TURN server. \u00b6\n  credential: If credentialType is &#34;password&#34;, credential represents a long-term authentication password, as described in  [ RFC8489], Section 10.2. \u00b6\n  creadential-type: If this RTCIceServer object represents a TURN server, then this attribute specifies how credential should be used when that TURN server requests authorization. The default value if the attribute is not present is &#34;password&#34;. \u00b6\n  Link: stun:stun.example.net; Link: turn:turn.example.net?transport=udp; rel=&#34;ice-server&#34;; username=&#34;user&#34;; credential: &#34;myPassword&#34;; credential-type: &#34;password&#34;; Link: turn:turn.example.net?transport=tcp; rel=&#34;ice-server&#34;; username=&#34;user&#34;; credential: &#34;myPassword&#34;; credential-type: &#34;password&#34;; Link: turns:turn.example.net?transport=tcp; rel=&#34;ice-server&#34;; username=&#34;user&#34;; credential: &#34;myPassword&#34;; credential-type: &#34;password&#34;;\n There are some webrtc implementations that do not support updating the ICE server configuration after the local offer has been created. In order to support these clients, the WHIP endpoint MAY also include the ICE server configuration on the responses to an authenticated OPTIONS request sent to the WHIP endpoint URL sent before the POST requests. \u00b6\n It COULD be also possible to configure the STUN/TURN server URLs with long term credentials provided by either the broadcasting service or an external TURN provider on the WHIP client overriding the values provided by the WHIP endpoint. \u00b6\n  Both simulcast and scalable video coding (including K-SVC modes) MAY be supported by both the media servers and WHIP clients through negotiation in the SDP offer/answer. \u00b6\n If the client supports simulcast and wants to enable it for publishing, it MUST negotiate the support in the SDP offer according to the procedures in  [ RFC8853] section 5.3. A server accepting a simulcast offer MUST create an answer accoding to the procedures  [ RFC8853] section 5.3.2. \u00b6\n In order to support future extensions to be defined for the WHIP protocol, a common procedure for registering and announcing the new extensions is defined. \u00b6\n Protocol extensions supported by the WHIP server MUST be advertised to the WHIP client on the 201 Created response to the initial HTTP POST request sent to the WHIP endpoint. The WHIP endpoint MUST return one Link header for each extension with the extension &#34;rel&#34; type attribute and the URI for the HTTP resource that will be available for receiving requests related to that extension. \u00b6\n Protocol extensions are optional for both WHIP clients and servers. WHIP clients MUST ignore any Link attribute with an unknown &#34;rel&#34; attribute value and WHIP servers MUST NOT require the usage of any of the extensions. \u00b6\n Each protocol extension MUST register an unique &#34;rel&#34; attribute values at IANA starting with the prefix: &#34;urn:ietf:params:whip:&#34;. \u00b6\n For example, taking a potential extension of server to client communication using server sent events as specified in https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events, the URL for connecting to the server side event resource for the published stream will be returned in the initial HTTP &#34;201 Created&#34; response with a &#34;Link&#34; header and a &#34;rel&#34; attribute of &#34;urn:ietf:params:whip:server-sent-events&#34;. \u00b6\n  The link relation types below have been registered by IANA per Section 4.2 of  [ RFC8288]. \u00b6\n Relation Name: ice-serverDescription: Describe the STUN and TURN servers that can be used by the ICE Agent to establish a connection with a peer.Reference: TBD \u00b6", "posttime": "2022-02-17 10:05:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "webrtc,http,whip", "title": "WebRTC HTTP\u6444\u53d6\u534f\u8bae\uff08WHIP\uff09", "title_en": "WebRTC-HTTP ingestion protocol (WHIP)", "transed": 1, "url": "https://www.ietf.org/archive/id/draft-ietf-wish-whip-01.html", "via": "", "real_tags": ["webrtc", "http", "whip"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073783, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fea\u58eb\u5c3c\u548c\u76ae\u514b\u65af\uff08Pixar\uff09\u7684\u65b0\u7247\u300a\u53d8\u7ea2\u300b\uff08Turning Red\uff09\u7684\u9884\u544a\u7247\u5728\u8fea\u58eb\u5c3c+3\u670811\u65e5\u64ad\u51fa\uff0c\u4ee513\u5c81\u7684\u4e3b\u89d2\u6885\u8273\u82b3\uff08Mei\uff09\u7ed3\u675f\uff0c\u5979\u8003\u8651\u4e86\u4e00\u4e2a\u75af\u72c2\u7684\u60f3\u6cd5\uff1a\u63a5\u53d7\u3002\u4e5f\u8bb8\u6211\u559c\u6b22\u8fd9\u4e2a\u65b0\u6211\u3002\u662f\u7684\uff0c\u5728\u5979\u7684\u4f8b\u5b50\u4e2d\uff0c\u201c\u65b0\u6211\u201d\u6b63\u5728\u53d8\u6210\u4e00\u53ea\u5927\u718a\u732b\uff0c\u5f53\u5979\u611f\u53d7\u5230\u5f3a\u70c8\u7684\u60c5\u611f\u65f6\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u666e\u904d\u7684\u3002\u4f46\u4e0d\u65ad\u91cd\u5851\u81ea\u6211\u3001\u627e\u5230\u81ea\u5df1\u7684\u793e\u533a\u3001\u5b66\u4f1a\u63a5\u53d7\u548c\u70ed\u7231\u81ea\u5df1\u7684\u672c\u8272\u7684\u4e3b\u9898\u662f\u6c38\u6052\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u4f60\u7684\u6545\u4e8b\u3002\u8fd9\u4e5f\u662fFirefox\u7684\u6545\u4e8b\u3002\n\u7531\u4e8e\u6211\u4eec\u7684\u6807\u5fd7\uff0cFirefox\u5bf9\u5c0f\u718a\u732b\u60c5\u6709\u72ec\u949f\uff0c\u4f46\u5b83\u7684\u5f71\u54cd\u66f4\u6df1\u8fdc\u3002\u300a\u53d8\u7ea2\u300b\u53d1\u751f\u57282002\u5e74\uff0c\u4e00\u4e2a\u5341\u51e0\u5c81\u7684\u5973\u5b69\u5728\u4fdd\u6301\u5979\u6bcd\u4eb2\u5b5d\u987a\u7684\u5973\u513f\u548c\u63a2\u7d22\u5979\u771f\u5b9e\u7684\u81ea\u6211\u4e4b\u95f4\u6323\u624e\u30022002\u5e74\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u805a\u5728\u4e00\u8d77\u521b\u5efa\u4e86Firefox\u3002\u6211\u4eec\u770b\u7740\u4e92\u8054\u7f51\uff0c\u60f3\u8c61\u7740\u6211\u4eec\u5e0c\u671b\u5b83\u6210\u4e3a\u4ec0\u4e48\u6837\u5b50\uff0c\u6211\u4eec\u5e0c\u671b\u5982\u4f55\u51fa\u73b0\uff0c\u4ee5\u53ca\u5982\u4f55\u9080\u8bf7\u6240\u6709\u4eba\u52a0\u5165\u6211\u4eec\u3002\nFirefox\u5e0c\u671b\u5e2e\u52a9\u5efa\u7acb\u4e00\u4e2a\u66f4\u597d\u7684\u4e92\u8054\u7f51\u2014\u2014\u4e00\u4e2a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u611f\u89c9\u5f88\u68d2\u7684\u7f51\u7edc\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5927\u80c6\u5730\u505a\u771f\u5b9e\u7684\u81ea\u5df1\uff0c\u5c55\u793a\u81ea\u5df1\u7684\u672c\u8272\u3002\u8fd9\u4e0d\u662f\u6211\u4eec\u4e00\u4e2a\u4eba\u80fd\u505a\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u6d4f\u89c8\u5668\uff0c\u628a\u7528\u6237\u653e\u5728\u7b2c\u4e00\u4f4d\u3002\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u975e\u76c8\u5229\u7684\u6d4f\u89c8\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u6709\u5229\u4e8e\u7528\u6237\u7684\u51b3\u5b9a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u76c8\u5229\u3002\n\u6211\u4eec\u81f4\u529b\u4e8e\u5f00\u6e90\u6280\u672f\uff0c\u6211\u4eec\u8c03\u67e5\u5bf9\u4e92\u8054\u7f51\u5065\u5eb7\u7684\u5a01\u80c1\uff0c\u6211\u4eec\u5728\u5f15\u5bfc\u4eba\u4eec\u901a\u8fc7\u7f51\u7edc\u7684\u540c\u65f6\u5f3a\u8c03\u4e92\u8054\u7f51\u7684\u4f18\u70b9\uff0c\u56e0\u4e3a\u4f60\u7684\u4fe1\u4efb\u5bf9\u6211\u4eec\u5f88\u91cd\u8981\u3002\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u6784\u5efa\u50cfFirefox\u8fd9\u6837\u7684\u4ea7\u54c1\uff0c\u5e2e\u52a9\u63d0\u4f9b\u6700\u597d\u7684\u7f51\u7edc\uff0c\u540c\u65f6\u4fdd\u6301\u4f60\u7684\u9690\u79c1\u81f3\u4e0a\uff0c\u8ba9\u4f60\u5728\u7f51\u4e0a\u81ea\u7531\u5730\u505a\u771f\u5b9e\u7684\u81ea\u5df1\uff0c\u65e0\u9700\u62c5\u5fc3\u3002\n\u5728Firefox\u521a\u8d77\u6b65\u7684\u65f6\u5019\uff0c\u4e92\u8054\u7f51\u5c31\u50cf\u5927\u591a\u6570\u4eba\u5728\u4e2d\u5b66\u65f6\u4e00\u6837\u8ba9\u4eba\u611f\u5230\u964c\u751f\u3001\u5174\u594b\u548c\u6050\u60e7\u3002\u8001\u5b9e\u8bf4\uff0c\u7f51\u7edc\u4e16\u754c\u4ecd\u7136\u7ecf\u5e38\u8ba9\u4eba\u611f\u5230\u964c\u751f\u3001\u5174\u594b\u548c\u6050\u60e7\u3002\u8fd9\u662f\u4ef6\u597d\u4e8b\u3002\u8fd9\u8ba9Firefox\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\u4e0d\u65ad\u5730\u81ea\u6211\u6539\u9020\uff0c\u968f\u7740\u6211\u4eec\u4e0e\u4e16\u754c\u7684\u53d1\u5c55\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u53d1\u5c55Firefox\u3002\u4f46\u6211\u4eec\u60f3\u8981\u5982\u4f55\u51fa\u73b0\u5e76\u6ca1\u6709\u6539\u53d8\u3002\n\u4e3a\u4e86\u5e86\u795d3\u670811\u65e5\u5728\u8fea\u58eb\u5c3c+\u4e0a\u64ad\u653e\u7684\u300a\u53d8\u7ea2\u300b\uff0c\u6211\u4eec\u6b63\u5728\u6839\u636e\u8fd9\u90e8\u7535\u5f71\u5236\u4f5c\u65b0\u7684Firefox\u684c\u9762\u914d\u8272\u548c\u624b\u673a\u58c1\u7eb8\uff0c\u4f5c\u4e3a\u901a\u8fc7\u6d4f\u89c8\u5668\u5c55\u793a\u4e2a\u6027\u7684\u53ef\u9009\u65b9\u5f0f\u3002\u6211\u4eec\u8fd8\u4e3a2002\u5e74\u6000\u65e7\u7684\u4e00\u5207\u521b\u9020\u4e86\u4e00\u4e2a\u76ee\u7684\u5730\uff0c\u5e76\u5c06\u4e0e\u4eba\u4eec\u8ba8\u8bba\u4ed6\u4eec\u7684\u65c5\u7a0b\uff0c\u5728\u7f51\u4e0a\u62e5\u62b1\u4ed6\u4eec\u7684\u771f\u5b9e\u9762\u76ee\u3002\n\u6211\u4eec\u77e5\u9053\u8fd9\u4e0d\u662f\u4e00\u5200\u5207\u7684\uff0c\u6211\u4eec\u7684\u7528\u6237\u90fd\u6709\u4e0d\u540c\u7684\u6545\u4e8b\u8981\u8bb2\u3002\u52a0\u5165\u6211\u4eec\u3002\u6211\u4eec\u6388\u6743\u4f60\u505a\u4f60\u81ea\u5df1\u3002\u5373\u4f7f\u4f60\u53d8\u6210\u4e86\u4e00\u53ea\u8fc7\u5ea6\u60c5\u7eea\u5316\u7684\u5927\u718a\u732b\u3002", "note_en": "The trailer for Disney and Pixar\u2019s new film, \u201cTurning Red,\u201d  streaming on Disney+ March 11, ends with Mei, its 13-year-old protagonist, considering a wild idea: acceptance.  Maybe I like this new me. Yes, in her case the \u201cnew me\u201d is becoming a giant red panda when she feels a strong emotion, which is decidedly not universal. But the themes of continually reinventing yourself, finding your community of people and learning to accept and love your true colors are timeless. It might be your story. It is also Firefox\u2019s story.\n Firefox has a soft spot for red pandas thanks to our logo, but it goes deeper than that. \u201cTurning Red\u201d takes place in 2002, where a teenage girl struggles between remaining her mother\u2019s dutiful daughter and exploring her true self. In 2002, we were coming together for the first time to create what would become Firefox. We were looking at the internet and imagining what we wanted it to be, how we wanted to show up and how we could invite everyone to join us.\n  Firefox wants to help build a better internet \u2014 a web that feels great for everybody, where everyone can boldly be their authentic selves and show their true colors. This is not something we can do alone, so we are a community-powered browser that puts our users first. As an independent, non-profit-backed browser, we get to make decisions that benefit our users, not just the bottom line.\n We\u2019re committed to open source technology, we investigate threats to internet health, and we highlight the best of the internet while guiding people through the web because your trust is important to us. One of the ways we do this is by building products like Firefox that help deliver the best of the web while keeping your privacy paramount, giving you the freedom to be your true self online, worry-free.\n Back when Firefox was starting out, the internet felt just as unknown, exciting and scary as middle school feels for most people. Honestly, the online world still often feels unknown, exciting and scary. And that is a good thing. This has allowed Firefox to continually reinvent itself over the years, and we will continue to evolve Firefox as we grow with the world. But how we want to show up has not changed.\n In celebration of \u201cTurning Red,\u201d streaming on Disney+ on March 11th, we are creating new Firefox desktop colorways and mobile wallpapers based on the movie as an optional way to show your personality through your browser. We\u2019ve also created  a destination for all things 2002 nostalgia and will be having conversations with people about their journeys to embrace their true colors online.\n And we know it isn\u2019t one size fits all, our users all have different stories to tell. Join us. We\u2019re empowering you to be you. Even if you poof into a giant, overly emotional red panda.", "posttime": "2022-02-17 10:04:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "firefox,ios,\u5e2e\u52a9,pixar", "title": "Firefox\u548cPixar\u52a8\u753b\u5de5\u4f5c\u5ba4\u8054\u624b\u5e2e\u52a9\u4f60\u5c55\u73b0\u81ea\u5df1\u7684\u771f\u5b9e\u9762\u76ee", "title_en": "Firefox And Pixar Animation Studios team up to help you show your true colors", "transed": 1, "url": "https://blog.mozilla.org/en/products/firefox/true-colors-with-firefox-pixar-animation-studios-turning-red/", "via": "", "real_tags": ["firefox", "ios", "\u5e2e\u52a9", "pixar"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073782, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u4e0b\u662fJasper Visser\u7684\u5ba2\u5ea7\u5e16\u5b50\uff0c\u4ed6\u662f\u4e00\u4f4d\u81ea\u5b66\u6210\u624d\u7684\u7a0b\u5e8f\u5458\uff0c\u4e5f\u662f\u4e00\u4f4d\u70ed\u8877\u4e8e\u53ef\u4f38\u7f29\u8f6f\u4ef6\u8bbe\u8ba1\u7684Rustacean\u3002Jasper\u662f\u90a3\u79cd\u624b\u5de5\u81ea\u52a8\u5316\u4e00\u5206\u949f\u4efb\u52a1\u7684\u7a0b\u5e8f\u5458\uff0c\u559c\u6b22\u5f00\u53d1\u5f00\u6e90\u9879\u76ee\u5e76\u4e3a\u4e4b\u505a\u51fa\u8d21\u732e\u3002\n\u5173\u4e8e\u751f\u9508\u7684\u66f4\u591a\u4fe1\u606f\uff0cScyllaDB\u7684\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u4e3e\u529e\u4e00\u4e2a\u5b9e\u8df5\u7814\u8ba8\u4f1a\uff0c\u6db5\u76d6\u751f\u9508\u9a71\u52a8\u7a0b\u5e8f\u548c\u793a\u4f8b\u4ee3\u7801\u3002\n\u4eca\u5929\uff0c\u6211\u5f88\u5174\u594b\u5730\u5ba3\u5e03\u4e86\u4e00\u4e2a\u6211\u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u91cc\u4e00\u76f4\u5728\u505a\u7684\u9879\u76ee\u3002\u6211\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u65f6\u95f4\u90fd\u5728\u4f7f\u7528Java\u548cSQL\u3002\u5728\u4e1a\u4f59\u65f6\u95f4\uff0c\u6211\u559c\u6b22\u4e86\u89e3\u65b0\u6280\u672f\u548c\u65b0\u8bed\u8a00\u3002\u6211\u5df2\u7ecf\u7f16\u5199\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u5927\u7ea65\u5e74\u524d\u5f00\u59cb\u4f7f\u7528Swift\uff0c\u8fd9\u662f\u4e00\u79cd\u7531\u82f9\u679c\u516c\u53f8\u521b\u5efa\u7684\u7528\u4e8e\u5236\u4f5ciOS/macOS\u5e94\u7528\u7a0b\u5e8f\u7684\u8bed\u8a00\u3002\u6211\u559c\u6b22\u521b\u5efa\u7528\u4f5c\u5176\u4ed6\u4eba\u9879\u76ee\u6784\u5efa\u5757\u7684\u5e93\u3002\u65af\u5a01\u592b\u7279\u770b\u8d77\u6765\u5f88\u50cfRust\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u50ac\u5316\u53cd\u5e94\u7684\u8bed\u8a00\u3002\n\u5728\u9605\u8bfb\u4e86\u4e00\u4e9b\u5173\u4e8e\u65af\u5a01\u592b\u7279\u53d1\u5c55\u7684RFC\u540e\uff0c\u6211\u9047\u5230\u4e86\u9508\u8ff9\u3002Swift\u5e0c\u671b\u5b9e\u73b0Rust\u7684\u529f\u80fd\uff0c\u5c24\u5176\u662f\u72ec\u7279\u7684\u6240\u6709\u6743\u6a21\u5f0f\u3002Rust\u4e0eSwift\u5927\u7ea6\u5728\u540c\u4e00\u5e74\u53d1\u5e03\u3002\u867d\u7136Swift\u66f4\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\uff08\u4f8b\u5982\uff0c\u6ca1\u6709\u5bff\u547d\uff09\uff0c\u4f46Rust\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u7075\u6d3b\u6027\u3001\u5b89\u5168\u6027\u548c\u901f\u5ea6\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22Rust\u7684\u6240\u6709\u6743\u4f53\u7cfb\u548c\u793e\u533a\u7684\u52aa\u529b\uff0c\u8ba9\u5b83\u5728\u4fdd\u6301\u5b89\u5168\u7684\u540c\u65f6\u4e0eC\u7684\u901f\u5ea6\u7ade\u4e89\u3002\u6211\u5728Rust\u4e2d\u505a\u4e86\u4e00\u4e9b\u526f\u9879\u76ee\uff0c\u5305\u62ecGRDB-ORM\uff0c\u5b83\u662fGRDB\u7684\u4e00\u4e2a\u5305\u88c5\uff0c\u53cd\u8fc7\u6765\u53c8\u662fSQLite\u7684\u4e00\u4e2a\u8584\u5305\u88c5\u3002GRDB-ORM\u751f\u6210\u9ad8\u901f\u3001\u5b89\u5168\u7684Swift\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0eSQLite\u6570\u636e\u5e93\u4ea4\u4e92\u3002\u5b83\u6839\u636e\u6570\u636e\u5e93\u7684\u5143\u6570\u636e\u751f\u6210Swift\u7ed3\u6784\u3002\u6211\u559c\u6b22\u62e5\u6709\u4e00\u4e2a\u4ece\u6570\u636e\u5e93\u5143\u6570\u636e\u4e2d\u6d3e\u751f\u4ee3\u7801\u7684\u53ef\u9760\u5e93\u7684\u60f3\u6cd5\u3002\n\u6211\u6700\u521d\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u5728iOS\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u5728\u4fdd\u6301\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5904\u7406\u5927\u91cf\u5199\u64cd\u4f5c\u7684\u6570\u636e\u5e93\u3002\u7531\u4e8e\u6c34\u5e73\u6269\u5c55\u662f\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u5fc5\u987b\u641c\u7d22\u4e00\u4e2a\u4e0d\u53d7\u6269\u5c55\u9650\u5236\u7684\u975e\u5173\u7cfb\u6570\u636e\u5e93\u3002\n\u4e0eGRDB-ORM\u5408\u4f5c\u662f\u4e00\u79cd\u4e50\u8da3\u3002\u751f\u6210\u7684\u4ee3\u7801\u786e\u4fdd\u4e86\u6211\u4e0d\u4f1a\u51fa\u73b0\u8fd0\u884c\u65f6\u95ee\u9898\u3002\u6211\u77e5\u9053\u6211\u5728\u670d\u52a1\u5668\u7aef\u4e5f\u9700\u8981\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\n\u6211\u9047\u5230\u4e86\u201c\u9521\u62c9\u5e03\u201d\uff0c\u6211\u7acb\u523b\u5c31\u559c\u6b22\u4e0a\u4e86\u5b83\u7684\u8bbe\u8ba1\uff1a\u591a\u53f0\u8ba1\u7b97\u673a\uff08\u8282\u70b9\uff09\u76f8\u4e92\u5bf9\u8bdd\uff0c\u4ea4\u6d41\u6700\u65b0\u7684\u66f4\u65b0\u3002\u4ee4\u6211\u5370\u8c61\u6df1\u523b\u7684\u662f\uff0cScyllaDB\u6bcf\u79d2\u53ef\u4ee5\u5904\u740610\u4ebf\u6b21\u63d2\u5165\uff0c\u5e76\u6b63\u5f0f\u652f\u6301\u7269\u5316\u89c6\u56fe\uff0c\u8fd9\u662fApache Cassandra\u4e2d\u975e\u5e38\u7f3a\u4e4f\u7684\u529f\u80fd\u3002\u518d\u52a0\u4e0a\u6269\u5c55\u548c\u6dfb\u52a0\u8282\u70b9\u4e00\u6837\u7b80\u5355\uff0c\u4f60\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u5f88\u68d2\u7684\u6570\u636e\u5e93\u3002\n\u4e00\u4e2a\u5f88\u68d2\u7684\u6570\u636e\u5e93\u5e94\u8be5\u4f1a\u6709\u5f88\u68d2\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u6211\u771f\u7684\u5f88\u9ad8\u5174\u770b\u5230\u8f66\u961f\u6700\u8fd1\u91ca\u653e\u4e86\u4e00\u540d\u5b98\u65b9\u7684\u94c1\u9508\u9521\u62c9\u53f8\u673a\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u56e2\u961f\u7528\u6700\u65b0\u7684\u6280\u672f\u5f00\u53d1\u4e86\u4e00\u4e2a\u751f\u9508\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5c24\u5176\u662fTokio\u6846\u67b6\u3002\u5b83\u662f\u5b8c\u5168\u5f02\u6b65\u7684\uff0c\u5e76\u63d0\u4f9b\u4e86\u5927\u91cf\u7684proc\u5b8f\uff0c\u4f7f\u5e93\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\uff0c\u6613\u4e8e\u8bbe\u7f6e\u3002\nrust scylla\u9a71\u52a8\u7a0b\u5e8f\u7684\u7ef4\u62a4\u4eba\u5458\u5bf9\u95ee\u9898\u505a\u51fa\u5feb\u901f\u54cd\u5e94\uff0c\u5e76\u4e50\u4e8e\u5206\u6790\u548c\u6539\u8fdb\u9a71\u52a8\u7a0b\u5e8f\u3002\u8fd9\u4fc3\u4f7f\u6211\u5199\u4e0b\u4e86Catalystal\uff0c\u8fd9\u662f\u4e00\u4e2a\u5efa\u7acb\u5728Scyllab\u5b98\u65b9Rust\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u4e0a\u7684\u901f\u5ea6\u6781\u5feb\u3001\u5b89\u5168\u7684ORM\uff08\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04\uff09\u3002\u6211\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u6211\u8ba8\u538c\uff1a\n\u274c \u8868\u548c\u7ed3\u6784\u4e4b\u95f4\u7684\u6620\u5c04\u4e0d\u6b63\u786e\u3002\u4f60\u901a\u5e38\u60f3\u8981\u4e00\u4e2aRust struct\uff0c\u5b83\u7528\u9521\u62c9\u7684\u8868\u683c\u4e00\u5bf9\u4e00\u5730\u6620\u5c04\u3002\u5982\u679c\u624b\u5de5\u521b\u5efaRust\u7ed3\u6784\uff0c\u5219\u53ef\u80fd\u4f1a\u5728\u5b57\u6bb5\u58f0\u660e\u4e2d\u8f93\u5165\u9519\u8bef\u3002\n\u5e93\u8fd8\u6ca1\u6709\u5b8c\u5168\u5b8c\u6210\uff1a\u8fd8\u4e0d\u652f\u6301\u6240\u6709\u7c7b\u578b\u3002\u8bf7\u968f\u65f6\u6dfb\u52a0\u65b0\u7c7b\u578b\u5e76\u63d0\u4ea4PR\uff01\nORM\u4e13\u95e8\u4f7f\u7528Rust\u9a71\u52a8\u7a0b\u5e8f\u7684\u9884\u5904\u7406\u8bed\u53e5\u7f13\u5b58\u3002\u8fd9\u610f\u5473\u7740\u9a71\u52a8\u7a0b\u5e8f\u5c06\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u91cd\u7528\u67e5\u8be2\uff0c\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u6267\u884c\u67e5\u8be2\u3002\u8981\u68c0\u67e5\u57fa\u4e8e\u6b64\u8868\u5b9a\u4e49\u751f\u6210\u7684\u5185\u5bb9\uff0c\u8bf7\u53c2\u9605\u6b64\u6587\u4ef6\u3002Rust\u7ed3\u6784\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u751f\u6210\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u751f\u6210\u4e00\u6b21\u6620\u5c04\uff0c\u5e76\u5728\u6ca1\u6709\u8fd0\u884c\u201c\u9521\u62c9\u535c\u201d\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u60a8\u7684\u677f\u6761\u7bb1\u3002\n\u786e\u4fdd\u201c\u9521\u62c9\u5e03\u201d\u6b63\u5728\u8fd0\u884c\u3002\u5bf9\u4e8e\u672c\u6559\u7a0b\uff0c\u6211\u5efa\u8bae\u5728Docker\u4e2d\u8fd0\u884cScyllab\u3002\u201c\u9521\u62c9\u5e03\u201d\u63d0\u4f9b\u4e86\u4e00\u95e8\u6781\u597d\u7684\u8bfe\u7a0b\uff0c\u6db5\u76d6\u4e86\u94c1\u9508\u9a71\u52a8\u7a0b\u5e8f\uff0c\u56e0\u6b64\u6211\u5728\u672c\u6307\u5357\u4e2d\u8df3\u8fc7\u4e86\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u7684\u4ecb\u7ecd\u3002\n\u8ba9\u6211\u901a\u8fc7\u4e00\u4e9b\u4ee3\u7801\u5411\u60a8\u5c55\u793a\u50ac\u5316\u7684\u53ef\u80fd\u6027\u3002\u5b8c\u6210\u4ee3\u7801\u7684\u9879\u76ee\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u683c\u5728Scyllab\u4e2d\u5b9a\u4e49\uff1a\n\u4f7f\u7528\u590d\u5236\u521b\u5efa\u952e\u7a7a\u95f4scylla_\u6620\u5c04={\n\u786e\u4fdd\u53ef\u4ee5\u901a\u8fc7\u7aef\u53e39042\u4ece\u672c\u5730\u4e3b\u673a\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cfSCYLLA_URI\u66f4\u6539\u6570\u636e\u5e93URL\u3002\n\u8ba9\u6211\u4eec\u628a\u624b\u5f04\u810f\uff0c\u4ece\u5236\u4f5c\u751f\u9508\u7684\u4e8c\u5143\u677f\u6761\u7bb1\u5f00\u59cb\uff1a\n\u521b\u5efa\u4e00\u4e2arustfmt\u3002\u8d27\u7269\u65c1\u8fb9\u7684toml\u6587\u4ef6\u3002toml\u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u5c06\u683c\u5f0f\u5316\u751f\u6210\u7684\u4ee3\u7801\u3002\u94c1\u9508\u3002toml\u6587\u4ef6\u5e94\u4ec5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u5728\u60a8\u6700\u559c\u6b22\u7684IDE\u4e2d\u6253\u5f00\u9879\u76ee\u5e76\u5bfc\u822a\u5230Cargo\u3002toml\u6587\u4ef6\u3002\u6dfb\u52a0\u5bf9\u50ac\u5316\u5242\u548c\u9521\u62c9\u677f\u6761\u7bb1\u7684\u4f9d\u8d56\u6027\uff1a\n[\u6784\u5efa\u4f9d\u8d56\u9879]\n\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5b83\u5c06\u4e0b\u8f7d\u4f9d\u8d56\u9879\u3002\u8fd9\u662f\u8ba9\u81ea\u52a8\u5b8c\u6210\u5728IDE\u4e2d\u5de5\u4f5c\u6240\u5fc5\u9700\u7684\uff08\u6211\u5fc5\u987b\u91cd\u65b0\u542f\u52a8IDE\uff09\u3002\u201c\u751f\u6210\u4f9d\u8d56\u9879\u201d\u90e8\u5206\u7528\u4e8e\u751f\u6210\u3002rs\u6587\u4ef6\u3002\u6784\u5efa\u4e2d\u7684\u4ee3\u7801\u3002\u5728\u4efb\u4f55\u6e90\u6587\u4ef6\u4e2d\u8fdb\u884c\u4ee3\u7801\u66f4\u6539\u65f6\uff0crs\u5c06\u6267\u884c\u3002\n\u521b\u5efa\u4e00\u4e2a\u6784\u5efa\u3002\u5728\u8d27\u7269\u65c1\u8fb9\u6709rs\u6587\u4ef6\u3002\u6c64\u59c6\u548c\u9c81\u65af\u7279\u798f\u7279\u3002toml\u6587\u4ef6\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\u3002rs\uff0c\u6211\u4eec\u8c03\u7528\u8868\u6620\u5c04\u5668\u6765\u751f\u6210\u7ed3\u6784\u3002\u5c06\u6b64\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u65b0\u6587\u4ef6\u4e2d\uff1a\n\u4f7f\u7528Catalystic_table_to_struct:\uff1atransformer:\uff1aDefaultTransformer\uff1b\n\u5b9a\u5236\u70b9\u3002DefaultTransformer\u4e0d\u662f\u667a\u80fd\u7684\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u60f3\u505a\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u53ef\u80fd\u9700\u8981\u5c06\u5176\u66f4\u6539\u4e3a\u7528\u6237\u7279\u5b9a\u7684\u8f6c\u6362\u5668\u3002\u6709\u5173\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u6b64\u6587\u4ef6\u3002\n\u5c06\u4e0b\u9762\u7684\u952e\u503c\u5bf9\u6dfb\u52a0\u4e3a\u73af\u5883\u53d8\u91cf\u3002\u60a8\u53ef\u4ee5\u5728IDE\u6216\u7ec8\u7aef\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5982\u679c\u60a8\u4ece\u4ee5\u4e0b\u4f4d\u7f6e\u8fd0\u884c\u8d27\u7269\uff1a\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8fd0\u884c\u7b80\u5355\u7684CRUD\u64cd\u4f5c\u3002\u6b64\u5904\u8fd8\u63d0\u4f9b\u4e86\u793a\u4f8b\u64cd\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2aCachingSession\uff0c\u4e00\u4e2a\u56f4\u7ed5\u5e38\u89c4Scyllab\u4f1a\u8bdd\u7684\u8584\u5305\u88c5\uff0c\u7528\u4e8e\u7f13\u5b58\u51c6\u5907\u597d\u7684\u8bed\u53e5\u3002\n\u4f7f\u7528Catalystal:\uff1aenv_property_reader:\uff1adatabase_url\uff1b\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u751f\u6210\u4e86\u53ef\u4ee5\u5728\u8fd9\u4e9b\u7ed3\u6784\u4e0a\u64cd\u4f5c\u7684\u6587\u4ef6\u548c\u4f1a\u8bdd\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528Person\u7ed3\u6784\u3002\u5728\u4e3b\u83dc\u5355\u4e2d\u6dfb\u52a0\u6b64\u65b9\u6cd5\u3002rs\u6587\u4ef6\uff1a\n///\u8fd9\u662f\u4e00\u4e2a\u4f60\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u4eba\u505a\u4ec0\u4e48\u7684\u4f8b\u5b50\n\u5f53\u4f60\u73b0\u5728\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4f60\u4f1a\u5728\u65e5\u5fd7\u4e2d\u770b\u5230\u5b83\u63d2\u5165\u4e86\u8fd9\u4e2a\u4eba\uff0c\u91cd\u65b0\u9009\u62e9\u4e86\u4ed6\uff0c\u66f4\u65b0\u5e76\u5220\u9664\u4e86\u6570\u636e\u5e93\u4e2d\u7684\u5185\u5bb9\u3002\u751f\u6210\u4e86\u5f88\u591a\u4ee3\u7801\uff0c\u6211\u5c06\u5f15\u5bfc\u60a8\u5b8c\u6210\u8fd9\u4e9b\u4ee3\u7801\u3002\n\u4ece\u6570\u636e\u5e93\u5143\u6570\u636e\u6d3e\u751f\u7684\u6587\u4ef6\u53ef\u80fd\u6709\u70b9\u96be\u4ee5\u627f\u53d7\u3002\u4e0b\u56fe\u7b80\u8981\u6982\u8ff0\u4e86\u751f\u6210\u7684\u5185\u5bb9\uff1a\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u8868\u751f\u6210\u4e86\u4e00\u4e9b\u7ed3\u6784\u3002\u7bad\u5934\u663e\u793a\u4e86\u53ef\u7528\u7684\u8f6c\u6362\u65b9\u6cd5\uff1a\n\u5982\u679c\u8981\u63d2\u5165person\uff0c\u9700\u8981PersonRef\uff0c\u5982\u679c\u8981\u66f4\u65b0\u884c\uff0c\u5219\u9700\u8981PrimaryKeyRef\u3002\n\u6709\u5173\u5982\u4f55\u4f7f\u7528\u6b64\u529f\u80fd\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u6b64\u6587\u4ef6\u3002\u5f53\u60a8\u60f3\u8981\u66f4\u65b0\u52a8\u6001\u5217\u65f6\uff0c\u5e94\u8be5\u4f7f\u7528UpdateableColumnRef\u679a\u4e3e\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u9884\u5b9a\u4e49\u7684\u67e5\u8be2\u751f\u6210\u4e86\u7ed3\u6784\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u7f16\u5199\u81ea\u5df1\u7684\u67e5\u8be2\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5b8f\u677f\u6761\u7bb1\u5b9e\u73b0\u3002\u8fd9\u5c31\u662f\u4f60\u60f3\u8981\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u4f8b\u5b50\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\u53ea\u652f\u6301\u9759\u6001\u67e5\u8be2\u3002\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u6784\u5efa\u67e5\u8be2\uff0c\u5e76\u5728\u7f16\u8bd1\u65f6\u68c0\u67e5\u5b83\uff01\n\u8ba9\u6211\u5411\u60a8\u5c55\u793a\u5982\u4f55\u7f16\u5199\u7f16\u8bd1\u65f6\u68c0\u67e5\u67e5\u8be2\u3002\u9996\u5148\u6dfb\u52a0\u53e6\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\uff1b\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u4ee5\u4fbf\u5b8f\u53ef\u4ee5\u627e\u5230\u5b9a\u4e49\u7ed3\u6784\u7684\u6a21\u5757\uff1a\nfn\u8be2\u95ee\u5e74\u9f84\u5927\u4e8e(\n\u5b8f\u5c06\u901a\u8fc7\u9009\u62e9\u6240\u6709\u5217\u6765\u66ff\u6362select*\u3002\u8fd9\u662f\u6709\u76ee\u7684\u7684\uff0c\u56e0\u4e3a\u4f7f\u7528*\u65f6\uff0c\u51c6\u5907\u597d\u7684\u8bed\u53e5\u53ef\u80fd\u4f1a\u4e0d\u540c\u6b65\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56deSelectMultiple\u7ed3\u6784\u3002\u67e5\u8be2\u5b8f\u53ef\u4ee5\u8bfb\u53d6\u6240\u9700\u7684\u67e5\u8be2\u7c7b\u578b\u3002\u4f7f\u7528SelectMultiple\u7ed3\u6784\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528SelectMultiple type\u9009\u62e9\u5185\u5b58\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff1a\n///\u6f14\u793a\u5982\u4f55\u7f16\u5199\u7f16\u8bd1\u65f6\u68c0\u67e5\u67e5\u8be2\u7684\u7b80\u5355\u65b9\u6cd5\n#[tokio:\uff1amain]\n\u5b8f\u5728\u786e\u5b9a\u67e5\u8be2\u7c7b\u578b\u65b9\u9762\u975e\u5e38\u806a\u660e\u3002\u5b83\u5c06\u62d2\u7edd\u5df2\u7ecf\u4f7f\u7528\u8868\u5230\u7ed3\u6784\u6620\u5c04\u5668\u9884\u5b9a\u4e49\u7684\u67e5\u8be2\uff0c\u56e0\u6b64\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u7f16\u5199\u5df2\u7ecf\u751f\u6210\u7684\u67e5\u8be2\u3002\n\u6211\u4eec\u7814\u7a76\u4e86\u5982\u4f55\u4eceScyllab/Cassandra\u8868\u751f\u6210Rust\u7ed3\u6784\u3002\u4f60\u53ef\u4ee5\u7528\u684c\u5b50\u6765\u642d\u5efa\u677f\u6761\u7bb1\u3002\u8fd9\u4e2a\u677f\u6761\u7bb1\u5c06\u786e\u4fdd\u4f60\u7684Rust structs\u59cb\u7ec8\u4e0e\u6570\u636e\u5e93\u540c\u6b65\u3002\n\ud83d\udca1  \u60a8\u53ef\u4ee5\u5728\u4e2d\u6dfb\u52a0\u751f\u6210\u7684\u6587\u4ef6\u3002gitignore\u6587\u4ef6\u3002\u5b83\u662f\u751f\u6210\u7684\uff0c\u5e76\u4e14\u5e94\u8be5\u59cb\u7ec8\u751f\u6210\u76f8\u540c\u7684\u8f93\u51fa\u3002\n\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u5c06\u4e0d\u8be6\u7ec6\u4ecb\u7ecdTransformer\u7279\u6027\uff0c\u4f46\u5c06\u5176\u7528\u4e8e\uff1a\n\u5b9e\u73b0\u53d8\u538b\u5668\u7279\u6027\u5e76\u4e0d\u96be\uff1b\u8bf7\u53c2\u9605\u793a\u4f8b\u6587\u4ef6\u4ee5\u4e86\u89e3\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u3002\n\u4f7f\u7528\u5b8f\u677f\u6761\u7bb1\uff0c\u53ef\u4ee5\u521b\u5efa\u7f16\u8bd1\u65f6\u68c0\u67e5\u7684\u67e5\u8be2\u3002\u5b83\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709\u65b9\u6cd5\u7684\u7279\u5b9a\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u7f16\u5199\u4e00\u4e2a\u8ba1\u7b97\u884c\u6570\u7684\u67e5\u8be2\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2aCount\u7ed3\u6784\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e0a\u8c03\u7528\u201cCount\u201d\u3002\u8fd9\u4e2a\u989d\u5916\u7684\u6b65\u9aa4\u786e\u4fdd\u67e5\u8be2\u5b8c\u5168\u6309\u7167\u60a8\u7684\u8981\u6c42\u8fdb\u884c\u3002\n\ud83d\udca1  \u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u751f\u6210\u7684\u5b9e\u4f53\u548c\u7f16\u8bd1\u65f6\u68c0\u67e5\u7684\u67e5\u8be2\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6784\u5efa\u4e86\u3002\u4e0d\u662f\u6bcf\u6b21\u66f4\u6539\u6e90\u6587\u4ef6\u65f6\u90fd\u4f1a\u6267\u884crs\u3002\u5728cql\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2arerun if changed\u547d\u4ee4\uff0c\u7136\u540e\u5b83\u5c06\u5728\u67b6\u6784\u66f4\u6539\u65f6\u81ea\u52a8\u8fd0\u884c\u3002\n\u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u6027\u662f\u7269\u5316\u89c6\u56fe\u548c\u57fa\u7840\u89c6\u56fe\u4e4b\u95f4\u7684\u6620\u5c04\u3002\u5982\u679c\u7269\u5316\u89c6\u56fe\u7684\u5217\u4e0e\u57fa\u7840\u89c6\u56fe\u5b8c\u5168\u76f8\u540c\uff08\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u4e3b\u952e\uff09\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5c06\u7269\u5316\u89c6\u56fe\u8f6c\u6362\u4e3a\u57fa\u7840\u8868\uff1a\n\u5b8f\u677f\u6761\u7bb1\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u67e5\u8be2\u57fa\u8868\u5b8f\u3002\u60a8\u53ef\u4ee5\u7f16\u5199\u81ea\u5b9a\u4e49\u67e5\u8be2\u6765\u67e5\u8be2\u7269\u5316\u89c6\u56fe\u3002\u5b8f\u7684\u8fd4\u56de\u7c7b\u578b\u5c06\u662f\u57fa\u8868\u7684\u7c7b\u578b\u3002\u5b8f\u5c06\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\uff0c\u4ee5\u67e5\u770b\u8f6c\u6362\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u5b89\u5168\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd9\u8868\u660e\u67e5\u8be2\u662f\u5728\u7269\u5316\u89c6\u56fe\u4e2d\u5b8c\u6210\u7684\uff0c\u4f46\u8fd4\u56de\u7c7b\u578b\u662f\u57fa\u8868\u7684\u7ed3\u6784\u3002\n\u751f\u6210\u7684\u4ee3\u7801\u8fd8\u5c06\u6267\u884c\u68c0\u67e5\uff0c\u4ee5\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u8f6c\u6362\uff0c\u5e76\u5728\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u4ee3\u7801\u3002\nCatalystic\u80fd\u591f\u505a\u5f88\u591a\u4e8b\u60c5\uff0c\u4f7f\u5176\u4e0e\u9521\u62c9\u4e92\u52a8\u975e\u5e38\u5bb9\u6613\u548c\u5b89\u5168\u3002\u5982\u679c\u5b9e\u65bd\uff0c\u6709\u51e0\u4ef6\u4e8b\u4f1a\u5f88\u6709\u7528\uff1a\n\u5e76\u975e\u6240\u6709\u7c7b\u578b\u90fd\u53d7\u652f\u6301\u3002\u867d\u7136\u652f\u6301\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u5b83\u7f3a\u4e4f\u5bf9UDT\u7684\u652f\u6301\u3002\n\u53ea\u8981\u67e5\u8be2\u662f\u9759\u6001\u7684\uff0c\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u68c0\u67e5\u67e5\u8be2\u3002\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u6709\u6761\u4ef6\u5730\u5411\u67e5\u8be2\u6dfb\u52a0\u6761\u4ef6\u3002\u6211\u4e0d\u786e\u5b9a\u662f\u5426\u6709\u53ef\u80fd\u53d6\u6d88\u8fd9\u4e00\u9650\u5236\u3002\nCatalystal\u63d0\u4f9b\u4e86\u6240\u6709\u529f\u80fd\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u5927\u91cf\u6d4b\u8bd5\u3002\u5982\u679c\u4f60\u8fd8\u6709\u95ee\u9898\uff0c\u5c31\u4ecehttps://github.com/Jasperav/catalytic/discussions\u6216\u8005\u770b\u770b\u793a\u4f8b\u6587\u4ef6\u5939\u3002\nRust\u662f\u4e00\u79cd\u5f88\u68d2\u7684\u8bed\u8a00\uff0c\u5728\u6211\u770b\u6765\uff0c\u5b83\u662f\u6700\u65b9\u4fbf\u7684\u8bed\u8a00\u3002\u201c\u9521\u62c9\u5e03\u9508\u8ff9\u201d\u9a71\u52a8\u7a0b\u5e8f\u5373\u4f7f\u4e0d\u662f\u6700\u5feb\u7684\uff0c\u4e5f\u5df2\u7ecf\u662f\u6700\u5feb\u7684\u201c\u9521\u62c9\u5e03\u201d\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u4e00\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u5b89\u5168\u6027\u3002\u52a0\u4e0aCatalystic\uff0cRust developer\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u5de5\u5177\u96c6\uff0c\u53ef\u4ee5\u4ee5\u53ef\u80fd\u6700\u5feb\u7684\u65b9\u5f0f\u5728Scyllab\u4e0a\u6784\u5efa\u3002\n\u9521\u62c9\u5e03\u7684\u53d1\u5c55\u4e5f\u5728\u98de\u901f\u53d1\u5c55\u30022022\u5e74\u9521\u62c9\u5cf0\u4f1a\u4e8e2\u67089\u65e5\u81f310\u65e5\u4e3e\u884c\uff0c\u4f7f\u7528\u9521\u62c9\u7684\u516c\u53f8\u4e3e\u884c\u4e86\u4f1a\u8c08\u3002Piotr Sarna\u7684\u6f14\u8bb2\u201c\u9521\u62c9\u53f8\u673a\uff1a\u4e00\u4e2a\u53f8\u673a\u7edf\u6cbb\u4ed6\u4eec\u6240\u6709\u4eba\u201d\u7279\u522b\u6709\u8da3\u3002\u4f60\u53ef\u4ee5\u6309\u9700\u89c2\u770b\u4ed6\u7684\u4f1a\u8bae\u548c\u6240\u6709\u6f14\u8bb2\u3002", "note_en": "The following is a guest post by Jasper Visser, a self-taught programmer and enthusiastic  Rustacean who is interested in scalable software design. Jasper is the kind of programmer who automates a 1-minute task by hand and likes to develop and contribute to open source projects.\n For more on Rust, the developers at ScyllaDB are hosting a hands-on workshop that covers the Rust driver and sample code.\n  Today, I\u2019m excited to unveil a project that I\u2019ve been working on for the past few months. The majority of my working days are spent working with Java and SQL. In my spare time, I like to check out new technology and languages. I have been coding for quite a while now, starting around 5 years ago with  Swift, a language created by Apple for making iOS/macOS apps. I like creating libraries which are used as building blocks for other people\u2019s projects. Swift looks quite a lot like Rust, the language that is used for Catalytic.\n I crossed paths with Rust after reading some RFCs regarding Swift\u2019s development. Swift wants to implement features Rust has, especially the unique Ownership model. Rust was released in about the same year as Swift. While Swift is a little more ergonomic (no lifetimes for example), Rust provides much more flexibility, safety and speed. I really like Rust\u2019s ownership system and the effort of the community to make it compete with the speed of C, while also remaining safe. I made some side projects in Rust, including  GRDB-ORM, a wrapper around  GRDB which is in turn a thin wrapper for SQLite. GRDB-ORM generates high speed and safe Swift code which can interact with an SQLite database. It generates  Swift structs based on the metadata of the database. I like the idea of having a reliable library which derives code from database metadata.\n My original goal was to build a server that would enable communication among iOS apps. The server needed a database which is able to handle a lot of writes while remaining scalable. Since scaling horizontally is an issue for relational databases, I had to search for a non-relational database that doesn\u2019t suffer from scaling limitations.\n It was a joy working with GRDB-ORM. The generated code ensured I wouldn\u2019t have runtime issues. I knew that I needed something similar on the server side as well.\n   I came across ScyllaDB and I immediately liked the design: multiple computers (nodes) talking to each other and communicating the latest updates. I was impressed to see that ScyllaDB can handle  1 billion inserts a second and officially supports  materialized views, a feature sorely lacking in Apache Cassandra. Combine that with the knowledge that scaling is as simple as adding nodes, and you have an awesome database.\n With an awesome database should come awesome drivers. I was really happy to see the team recently released an official Rust ScyllaDB driver. I think the team did a great job developing a Rust driver with the latest technology, in particular, the Tokio framework. It is fully async and provides a decent number of proc macros, making the library ergonomic and easy to setup.\n The maintainers of the rust-scylla-driver respond quickly to issues and are happy to  profile and improve the driver. That triggered me enough to write  Catalytic, a blazingly fast and safe ORM ( Object\u2013relational mapping) built on top of ScyllaDB\u2019s official Rust driver. I did this because I hate:\n  \u274c Incorrect mapping between table and Rust struct. You usually want to have a Rust struct which maps 1-on-1 with a table in ScyllaDB. If you create the Rust structs by hand, it is possible to make a typo in the field declaration.\n        The library isn\u2019t fully complete:  not all types are supported yet. Please feel free to add a new type and submit a PR!\n  The ORM exclusively uses the prepared statement cache of the Rust driver. This means the driver will reuse queries if it can, providing the\u00a0 fastest query execution possible.\u00a0 To check what is generated based on this  table definition, see  this file. The Rust structs are generated in a directory you specify. This means you can generate the mapping once and use your crate without a running ScyllaDB definition.\n  Make sure you have ScyllaDB running. For this tutorial I recommend running  ScyllaDB in Docker. ScyllaDB provides an excellent course that covers the  Rust driver, therefore I skipped the introduction of the driver in this guide.\n Let me show you the possibilities of Catalytic with the help of some code. The project with the finished code can be found  here. For this example, a simple table is defined in ScyllaDB:\n create keyspace scylla_mapping with replication = {\r &#39;class&#39;: &#39;SimpleStrategy&#39;,\r &#39;replication_factor&#39;: 3\r};\r\ruse scylla_mapping;\r\rcreate table person(name text, age int, email text, json_example text, primary key((name), age));\n Make sure your database is reachable from localhost with port 9042. You can change the database URL with the environment variable:  SCYLLA_URI.\n Let\u2019s get our hands dirty and start with creating a Rust binary crate:\n  Create a rustfmt.toml file next to the Cargo.toml file. This file will format the generated code. The rustfmt.toml file should only have this as content:\n  Open the project in your favorite IDE and navigate to the Cargo.toml file. Add dependencies on the Catalytic and Scylla crate:\n [build-dependencies]\rcatalytic = &#34;0.1&#34;\rcatalytic_table_to_struct = &#34;0.1&#34;\r[dependencies]\rcatalytic = &#34;0.1&#34;\rcatalytic_macro = &#34;0.1&#34;\rscylla = &#34;0.3&#34;\rtracing = &#34;0.1&#34;\rtracing-subscriber = &#34;0.2&#34;\n Run your executable, which will download the dependencies. This is required to get autocomplete working in the IDE (I had to restart my IDE). The build-dependencies section is for  a build.rs file. The code inside a build.rs will execute when code changes are made in any of the source files.\n Create a build.rs file next to the Cargo.toml and rustfmt.toml file. In this build.rs, we call the table mapper to generate Rust structs. Copy paste this code into the new file:\n use catalytic_table_to_struct::transformer::DefaultTransformer;\ruse std::env::current_dir;\r\rfn main() {\r // 1\r catalytic_table_to_struct::generate(\r // 2\r &amp;current_dir().unwrap().join(&#34;src&#34;).join(&#34;generated&#34;),\r // 3\r DefaultTransformer,\r );\r}\n A customization point. The  DefaultTransformer is not intelligent,\u00a0 so it\u00a0 probably needs to be changed to a user-specific transformer if you want to do more. For an example of how to do this, see  this file.\n   Add the key-value pair below as an environment variable.  You can do this in your IDE or in the terminal if you run cargo from that:\n   First, let\u2019s run simple  CRUD operations. Example operations also available  here. First we need a   CachingSession, a thin wrapper around a regular ScyllaDB session that caches prepared statements.\n  use catalytic::env_property_reader::database_url;\ruse scylla::statement::Consistency;\ruse scylla::{CachingSession, SessionBuilder};\r\rmod generated;\r\r#[tokio::main]\rasync fn main() {\r let session = create_session().await;\r}\r\rasync fn create_session() -&gt; CachingSession {\r // Make sure there is logging available when executing the statements\r tracing_subscriber::fmt::init();\r\r // Create a session:\r //\u00a0 \u00a0 \u00a0 - which can operate on a single node\r //\u00a0 \u00a0 \u00a0 - caches 1_000 queries in memory\r let session = CachingSession::from(\r SessionBuilder::new()\r .known_node(database_url())\r .default_consistency(Consistency::One)\r .build()\r .await\r .unwrap(),\r 1_000,\r );\r\r // Use the keyspace\r session\r .session\r .use_keyspace(&#34;scylla_mapping&#34;, false)\r .await\r .unwrap();\r session\r}\n Now that we have generated files and a session which can operate on those structs, let\u2019s try to do stuff with the Person struct. Add this method in your main.rs file:\n /// This is an example what you can do with a Person\r/// You can only do CRUD operations with structs which borrows values, not owned structs\rasync fn crud_person(session: &amp;CachingSession) -&gt; Result&lt;(), QueryError&gt; {\r // This is an owned struct\r // You can convert this to a primary key or a borrowed version\r let person = Person {\r name: &#34;Jeff&#34;.to_string(),\r age: 52,\r email: &#34; [email\u00a0protected]&#34;.to_string(),\r json_example: &#34;something&#34;.to_string(),\r };\r\r // Insert the person\r // First convert it to the borrowed version\r person.to_ref().insert(session).await?;\r\r // Select the person back in memory\r // This will return an owned struct\r let person_queried = person\r .primary_key()\r .select_unique_expect(session)\r .await\r .unwrap()\r .entity;\r\r assert_eq!(person, person_queried);\r\r // Update the email column of person\r // Updating and deleting should always be executed on the borrowed version of the primary key\r // since you can only update/delete 1 row\r let pk = person.primary_key();\r\r pk.update_email(session, &#34; [email\u00a0protected]&#34;).await?;\r\r // Delete the row in the database\r pk.delete(session).await?;\r\r Ok(())\r}\n   When you now run the application, you will see in the logging that it inserted the person, selected it back, updated and deleted stuff in the database. A lot of code is generated, which I will guide you through.\n  The file that is derived from the database metadata can be a little overwhelming. The diagram below provides a quick overview of what\u2019s generated:\n  As shown in the diagram above, a few structs are generated for every table in the database. The arrows show which conversion methods are available:\n If you want to insert a person, you would need a  PersonRef, and if you want to update a row, you would need a  PrimaryKeyRef.\n For examples on how to use this, see  this file. When you want to update dynamic columns, you should use the   UpdatableColumnRef enum.\n  Now that we have the structs generated with predefined queries, you might want to write your own query. That can be done with  macro crate.  This is the method you want to call and you can find  an example here. A big note:  only static queries are supported. This means you cannot build a query at runtime and check it at compile time!\n Let me show you how you can write a compile time checked query. First add another environment variable; this is needed so that the macro can find the modules in which the structs are defined:\n   fn query_persons_older_than(\r name: &amp;str,\r age: i32,\r) -&gt; Result&lt;SelectMultiple&lt;Person&gt;, SerializeValuesError&gt; {\r let result =\r catalytic_macro::query!(&#34;select * from person where name = ? and age &gt; ?&#34;, name, age);\r\r Ok(result)\r}\n The macro will replace the  select * by selecting all the columns. This is done on purpose, since  prepared statements can go out of sync when using  *. In this example above, the method returns a  SelectMultiple struct. The query macro can read what type of query you want. With the  SelectMultiple struct,  you can do the following:\n  The code below shows how you can select everything in memory with the SelectMultiple type:\n /// Demonstrates an easy way how to write a compile time checked query\rasync fn compile_time_checked_query(session: &amp;CachingSession) {\r // Generate a person, it can be asserted later that the persons are equal to the queried persons\r let person = Person {\r name: &#34;jhon&#34;.to_string(),\r age: 20,\r email: &#34;nothing special&#34;.to_string(),\r json_example: &#34;not important&#34;.to_string(),\r };\r\r // Remember, you can not insert an owned struct, borrowed values only\r person.to_ref().insert(session).await.unwrap();\r\r let persons = query_persons_older_than(&amp;person.name, person.age - 1).unwrap();\r\r // Since persons is of type SelectMultiple, functions are available to query multiple rows in the person table\r // Including paging, limiting and loading everything in memory\r // For now, just load everything into memory\r let persons = persons\r .select_all_in_memory(&amp;session, 10)\r .await\r .unwrap()\r .entities;\r\r assert_eq!(1, persons.len());\r assert_eq!(person, persons[0]);\r}\n  #[tokio::main]\rasync fn main() {\r let session = create_session().await;\r\r crud_person(&amp;session).await.unwrap();\r compile_time_checked_query(&amp;session).await; // This line is new\r}\n The macro is quite smart in determining what type of query it is. It will reject queries that are already predefined with the table-to-struct mapper, so you never write a query that has already been generated.\n  We looked at how we can generate Rust structs from ScyllaDB/Cassandra tables. You do this with the  table to struct crate. This crate will make sure your Rust structs will always be in sync with the database.\n  \ud83d\udca1  You can add the generated files in your .gitignore file. It is generated and should always produce the same output.\n For brevity, I won\u2019t elaborate on the   Transformer trait but use it to:\n  Implementing the transformer trait isn\u2019t hard; see the  example file to see how to do this.\n Using the  macro crate, you can create compile time checked queries. It returns a specific type with methods on it. So, if you write a query that counts the number of rows, it will return a   Count struct, on which you can call  \u2018count\u2019. This extra step ensures that\u00a0 the query does exactly as you want.\n \ud83d\udca1  Create a workspace and create a separate library containing the generated entities and compile time checked queries. This way, the build.rs isn\u2019t executed every time you change your source files. Add a  rerun if changed command to your cql file, then it will automatically run on schema change.\n Another very useful feature is the mapping between a materialized view and the base view. If you have a materialized view with exactly the same\u00a0 columns as the base view (different primary keys are permitted), you can convert the materialized view to the base table in two ways:\n There is a special   query_base_table macro in the macros crate. You can write your custom query which queries the materialized view. The returned type of the macro will be the type of the base table. The macro will do some checks to see if the conversion is safe at compile time. You can find an example  here. This shows that a query is done in a materialized view, but the return type is the struct of the base table.\n The generated code will also perform a check to see whether an auto conversion can take place and  generates code if it\u2019s safe to do so.\n  Catalytic is capable of doing a lot of things, making it very easy and safe to interact with ScyllaDB. There are a few things that would be useful if implemented:\n Not all types are supported yet. While the basic types are supported, it lacks support for\u00a0  UDT.\n Checking queries at compile time is possible, as long as the queries are static. This means you can not conditionally add conditions to the query. I am not sure whether\u00a0 it will ever be possible to lift this restriction.\n  Catalytic provides\u00a0 examples for all the functionality, along with lots of tests. If you still have a question, just start a discussion at  https://github.com/Jasperav/catalytic/discussions or look at the example folders.\n  Rust is an awesome language and, in my opinion, the most convenient one. The ScyllaDB Rust driver is already one of the fastest ScyllaDB drivers,  if not  the fastest. It also provides a lot of safety. Combined with Catalytic, the Rust developer now has a really powerful toolset to build on\u00a0 ScyllaDB, in probably the fastest way possible.\n ScyllaDB\u2019s development is also skyrocketing. Scylla Summit 2022 was held February 9-10, with talks from companies using ScyllaDB in production. Piotr Sarna\u2019s talk, \u201c ScyllaDB Rust Driver: One Driver to Rule Them All\u201d was particularly interesting. You can watch his session and all of the talks  on-demand.", "posttime": "2022-02-17 09:53:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,rust,orm", "title": "\u50ac\u5316\uff1a\u4e00\u79cd\u4e3a\u9521\u62c9\u548c\u5361\u6851\u5fb7\u62c9\u8bbe\u8ba1\u7684ORM\uff0c\u7528\u9508\u8ff9\u4e66\u5199", "title_en": "Catalytic: An ORM Designed for ScyllaDB and Cassandra Written in Rust", "transed": 1, "url": "https://www.scylladb.com/2022/02/15/introducing-catalytic-an-orm-designed-for-scylladb-and-cassandra-written-in-rust/#virtual-workshop", "via": "", "real_tags": ["\u8bbe\u8ba1", "rust", "orm"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073781, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u70b9\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u5185\u5e55\u4eba\u58eb\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\n\u5728\u767d\u5bab\u751f\u6d3b\u5e26\u6765\u7684\u8bf8\u591a\u8c03\u6574\u4e2d\uff0c\u9ea6\u514b\u62c9\u5947\u7684\u767d\u5bab\u8bb0\u8005\u5f17\u6717\u897f\u65af\u5361\u00b7\u94b1\u4f2f\u65af\u62a5\u9053\u79f0\uff0c\u7b2c\u4e8c\u4f4d\u5148\u751f\u9053\u683c\u00b7\u57c3\u59c6\u970d\u592b\u4e0d\u5141\u8bb8\u7ed9\u4ed6\u7684\u59bb\u5b50\u5361\u9a6c\u62c9\u00b7\u54c8\u91cc\u65af\u526f\u603b\u7edf\u53d1\u77ed\u4fe1\u3002\n\u5982\u679c\u4ed6\u771f\u7684\u60f3\u548c\u5979\u8bf4\u8bdd\uff0c\u4ed6\u7684\u5458\u5de5\u5fc5\u987b\u4e0e\u54c8\u91cc\u65af\u534f\u8c03\uff1b\u62a5\u9053\u79f0\uff0c\u5de5\u4f5c\u4eba\u5458\u4f1a\u53bb\u770b\u770b\u5979\u4ec0\u4e48\u65f6\u5019\u6709\u7a7a\uff0c\u7136\u540e\u4ece\u827e\u68ee\u8c6a\u5a01\u5c14\u884c\u653f\u529e\u516c\u5927\u697c\u7684\u529e\u516c\u5ba4\u8d70\u51fa\u6765\uff0c\u4e0e\u54c8\u91cc\u65af\u5728\u897f\u7ffc\u4f1a\u9762\u3002\n\u54c8\u91cc\u65af\u5728EEOB\u4e5f\u6709\u4e00\u4e2a\u4eea\u5f0f\u529e\u516c\u5ba4\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\u5979\u5728Emhoff&#39\uff1b\u5f53\u5979&#39\uff1b\u636e\u9ea6\u514b\u62c9\u5947\u8bf4\uff0c\u4ed6\u5728\u5927\u697c\u91cc\u3002\n\u636ePolitico\u62a5\u9053\uff0c\u9664\u4e86\u7f51\u7edc\u5b89\u5168\u98ce\u9669\u5916\uff0c\u5728\u653f\u5e9c\u53d1\u884c\u7684\u624b\u673a\u4e0a\u53d1\u77ed\u4fe1\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u300a\u603b\u7edf\u8bb0\u5f55\u6cd5\u300b\u8981\u6c42\u653f\u5e9c\u5c06\u6240\u6709\u4e66\u9762\u901a\u4fe1\u5b58\u6863\u3002\u62dc\u767b\u653f\u5e9c\u901a\u8fc7\u8f6f\u4ef6\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u8be5\u8f6f\u4ef6\u80fd\u591f\u6839\u636e\u516c\u5171\u8bb0\u5f55\u6cd5\u81ea\u52a8\u5f52\u6863\u77ed\u4fe1\uff0c\u4f46\u53ea\u6709\u67d0\u4e9b\u5458\u5de5\u5177\u6709\u77ed\u4fe1\u529f\u80fd\u3002\n\u57282018\u5e74&#34\uff1b\u65af\u8482\u82ac\u00b7\u79d1\u5c14\u4f2f\u7279\u548c#34\uff1b\u524d\u7b2c\u4e00\u592b\u4eba\u7c73\u6b47\u5c14\u00b7\u5965\u5df4\u9a6c\uff08Michelle Obama\uff09\u8c08\u5230\u5979\u5c06\u5982\u4f55\u901a\u8fc7\u4ed6\u4eec\u7684\u5e55\u50da\u957f\u4e0e\u4e08\u592b\u5c31\u5de5\u4f5c\u76f8\u5173\u4e8b\u5b9c\u8fdb\u884c\u6c9f\u901a\u3002\n&#34;\u5982\u679c\u6211\u60f3\u4f20\u9012\u771f\u6b63\u7684\u4fe1\u606f\uff0c\u6211\u4f1a\u901a\u8fc7\u5458\u5de5\u4f20\u8fbe\uff1b\u5979\u8bf4&#34;\u6240\u4ee5\u6211\u8ba9\u6211\u7684\u5e55\u50da\u957f\u548c\u4ed6\u7684\u5e55\u50da\u957f\u8c08\u4e86\u8c08\uff0c\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u907f\u514d\u4e86\u6211\u4eec\u5728\u5bb6\u91cc\u8ba8\u8bba\u4e8b\u60c5\u3002\u6240\u4ee5\u5728\u5546\u4e1a\u4e0a\u6211\u4eec\u6709\u4e2d\u95f4\u4eba&#34;\n\u57c3\u59c6\u970d\u592b\u80fd\u591f\u59cb\u7ec8\u5982\u4e00\u5730\u53d1\u77ed\u4fe1\u7684\u4eba\u662f\u4ea4\u901a\u90e8\u957f\u76ae\u7279\u00b7\u5e03\u8482\u5409\u683c\u7684\u4e08\u592b\u67e5\u65af\u6ed5\u00b7\u5e03\u8482\u5409\u683c\u3002\u57282020\u5e74\u7684\u7ade\u9009\u8fc7\u7a0b\u4e2d\uff0c\u4e24\u4eba\u4f5c\u4e3a\u5019\u9009\u4eba\u7684\u914d\u5076\u7ed3\u4e0b\u4e86\u4e0d\u89e3\u4e4b\u7f18\uff0cButtigieg\u544a\u8bc9Politico&#39\uff1b5\u6708\uff0c\u5c24\u91d1\u00b7\u4e39\u5c3c\u5c14\u65af\uff08Eugene Daniels\uff09\u4e0e\u57c3\u59c6\u970d\u592b\uff08Emhoff&#34\uff1b\u7ecf\u5e38\u4ea4\u6362\u77ed\u4fe1&#34;\n\u6ce8\u518c\u5185\u90e8\u901a\u77e5\uff01\u4e86\u89e3\u4f60\u60f3\u77e5\u9053\u7684\u6700\u65b0\u60c5\u51b5\u3002\n\u5f62\u6210&#39\u7684\u4e24\u6761\u4ea4\u53c9\u7ebf\uff1bX&#39\uff1b\u3002\u5b83\u8868\u793a\u5173\u95ed\u4ea4\u4e92\u6216\u53d6\u6d88\u901a\u77e5\u7684\u65b9\u6cd5\u3002", "note_en": "By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.\n    Among the many adjustments that come with life in the White House,  McClatchy White House correspondent Francesca Chambers reported that second gentleman Doug Emhoff is not allowed to text his wife, Vice President Kamala Harris.\n If he does want to talk to her, members of his staff have to coordinate with Harris&#39; staff to see when she has time available, then walk Emhoff from his office in the Eisenhower Executive Office Building to meet with Harris in the West Wing, according to the report.\n Harris also has a ceremonial office in the EEOB, and she has been known to stop by Emhoff&#39;s desk to say hello when she&#39;s in the building, according to McClatchy.\n   Aside from cyber security risks, texting on government-issued phones presents an issue because the Presidential Records Act requires that administrations archive all written communications,  Politico reported. The Biden administration has worked around this with software that automatically archives text messages in compliance with public records laws, but only certain staffers have texting capabilities.\n      In a  2018 interview on &#34;The Late Show with Stephen Colbert,&#34; former first lady Michelle Obama spoke about how she would communicate with her husband through their chiefs of staff about work-related matters.\n   &#34;If I wanted to deliver a real message, I did it through staffs,&#34; she said. &#34;So I had my chief of staff talk to his chief of staff which was the same thing, essentially, but it avoided us having discussions about stuff at home. So we had intermediaries when it came to business.&#34;\n One person that Emhoff can text consistently is Chasten Buttigieg, husband of Transportation Secretary Pete Buttigieg. The two  bonded on the 2020 campaign trail as spouses of candidates, and Buttigieg  told Politico&#39;s Eugene Daniels in May that he and Emhoff\u00a0&#34;trade texts quite often.&#34;\n  Sign up for notifications from Insider! Stay up to date with what you want to know.\n            Two crossed lines that form an &#39;X&#39;. It indicates a way to close an interaction, or dismiss a notification.", "posttime": "2022-02-17 09:51:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u80fd,emhoff,\u77ed\u4fe1", "title": "\u9053\u683c\u00b7\u57c3\u59c6\u970d\u592b\u4e0d\u80fd\u7ed9\u59bb\u5b50\u5361\u739b\u62c9\u00b7\u54c8\u91cc\u65af\u53d1\u77ed\u4fe1", "title_en": "Doug Emhoff isn't allowed to text wife Kamala Harris", "transed": 1, "url": "https://www.insider.com/kamala-harris-doug-emhoff-cant-text-2022-2", "via": "", "real_tags": ["\u4e0d\u80fd", "emhoff", "\u77ed\u4fe1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073779, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u6570\u636e\u8fc1\u79fb\u90fd\u662f\u4e8b\u5b9e\u3002\u9700\u6c42\u53d8\u66f4\u3001\u529f\u80fd\u6dfb\u52a0\u6216\u5220\u9664\u3001\u670d\u52a1\u5408\u5e76\u6216\u62c6\u5206\u3002\u968f\u7740\u5e94\u7528\u7a0b\u5e8f\u7684\u53d1\u5c55\uff0c\u5176\u80cc\u540e\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u968f\u4e4b\u53d1\u5c55\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u5b58\u50a8\u5728SpiceDB\u4e2d\u7684\u6743\u9650\u4fe1\u606f\u4e0e\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u5e93\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u6ca1\u6709\u533a\u522b\u3002\n\u5982\u679c\u4f60\u4e0d\u719f\u6089\u4e00\u822c\u7684\u5728\u7ebf\u8fc1\u79fb\u7b56\u7565\uff0c\u90a3\u4e48\u7f51\u4e0a\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u8d44\u6e90\u6db5\u76d6\u4e86\u4e00\u822c\u7684\u4e3b\u9898\uff1b\u6211\u4eec\u5c06\u53ea\u5173\u6ce8SpiceDB\uff0c\u4ee5\u53ca\u5982\u4f55\u9488\u5bf9\u5b83\u6240\u5305\u542b\u7684\u6570\u636e\u548c\u6a21\u5f0f\u6267\u884c\u8fc1\u79fb\u3002\n\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0bSpiceDB\u56e0\u65e0\u9700\u8fc1\u79fb\u800c\u5927\u653e\u5f02\u5f69\u7684\u51e0\u4e2a\u573a\u666f\uff1a\n\u5982\u679c\u4e0eSpiceDB\u5bf9\u8bdd\u7684\u670d\u52a1\u6b63\u5728\u88ab\u91cd\u6784\uff08\u5373\uff0c\u4e00\u4e2a\u6574\u4f53\u6b63\u5728\u88ab\u62c6\u5206\u4e3a\u4e00\u4e2a\u9762\u5411\u670d\u52a1\u7684\u4f53\u7cfb\u7ed3\u6784\uff09\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4e0d\u9700\u8981\u5bf9SpiceDB\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\n\u56e0\u4e3aSpiceDB\u662f\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u670d\u52a1\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u4efb\u4f55\u4e0e\u4e4b\u901a\u4fe1\u7684\u65b0\u670d\u52a1\u53ea\u9700\u8981\u8fde\u63a5\u5e76\u8fdb\u884c\u5fc5\u8981\u7684\u67e5\u8be2\u3002\u53ef\u4ee5\u653e\u5fc3\u7684\u662f\uff0c\u6388\u6743\uff08\u901a\u5e38\u662f\u5728\u8fd9\u4e00\u5c42\u6539\u53d8\u4f53\u7cfb\u7ed3\u6784\u7684\u4e00\u4e2a\u6311\u6218\u90e8\u5206\uff09\u4e0d\u4f1a\u6210\u4e3a\u8d1f\u62c5\u6216\u74f6\u9888\u3002\n\u4f7f\u7528SpiceDB\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u5173\u7cfb\uff0c\u4f46\u53ef\u4ee5\u68c0\u67e5\u6743\u9650\u3002\u6743\u9650\u662f\u9488\u5bf9\u5df2\u5b58\u50a8\u7684\u5173\u7cfb\u8ba1\u7b97\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u60a8\u5e0c\u671b\u5bf9\u6743\u9650\u8ba1\u7b97\u65b9\u5f0f\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u53ef\u4ee5\u5728\u4e0d\u8fdb\u884c\u4efb\u4f55\u8fc1\u79fb\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\uff1a\u53ea\u9700\u66f4\u65b0\u6a21\u5f0f\u5373\u53ef\u3002\n\u5b9a\u4e49\u7528\u6237{}\u5b9a\u4e49\u7ec4\u7ec7{\u5173\u7cfb\u7ba1\u7406\u5458\uff1a\u7528\u6237\u5173\u7cfb\u76f4\u63a5\u6210\u5458\uff1a\u7528\u6237\u6743\u9650\u6210\u5458=\u76f4\u63a5\u6210\u5458}\n\u60a8\u53ef\u4ee5\u5c06\u7ba1\u7406\u5458\u5305\u62ec\u4e3a\u6210\u5458\u5e76\u521b\u5efa\u65b0\u7684\u201c\u7ba1\u7406\u5458\u201d\u6743\u9650\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u8fc1\u79fb\uff1a\u5b9a\u4e49\u7528\u6237{}\u5b9a\u4e49\u7ec4\u7ec7{\u5173\u7cfb\u7ba1\u7406\u5458\uff1a\u7528\u6237\u5173\u7cfb\u76f4\u63a5_\u6210\u5458\uff1a\u7528\u6237\u6743\u9650\u7ba1\u7406\u5458=\u7ba1\u7406\u5458\u6743\u9650\u6210\u5458=\u76f4\u63a5_\u6210\u5458+\u7ba1\u7406\u5458}\n\u603b\u4f1a\u6709\u9700\u8981\u8fc1\u79fb\u7684\u60c5\u51b5\uff0c\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u60a8\u9700\u8981\u89c4\u5212\u8fc1\u79fb\u6b65\u9aa4\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u52a9\u4e8e\u5728\u7ebf\u8fc1\u79fb\u8ba1\u5212\u7684\u6a21\u5f0f\uff1a\n\u6240\u6709\u6a21\u5f0f\u5199\u5165\u90fd\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u5199\u5165\u6a21\u5f0f\u540e\u53d1\u751f\u7684\u4efb\u4f55\u5173\u7cfb\u5199\u5165\u90fd\u5c06\u5728\u8be5\u65b0\u6a21\u5f0f\u4e0b\u8fdb\u884c\u8bc4\u4f30\u3002\n\u4f46\u662f\uff0c\u4efb\u4f55\u5173\u7cfb\u8bfb\u53d6\u90fd\u5c06\u4f7f\u7528\u4e0e\u8bfb\u53d6\u8bf7\u6c42\u7248\u672c\u5339\u914d\u7684\u6a21\u5f0f\u7248\u672c\u3002\u8fd9\u786e\u4fdd\u68c0\u67e5\u4f7f\u7528\u6b63\u786e\u7684\u6a21\u5f0f\u8fdb\u884c\u8bc4\u4f30\uff0c\u4ee5\u907f\u514d\u65b0\u7684\u654c\u4eba\u95ee\u9898\u3002\n\u53ea\u6709\u5728\u6ca1\u6709\u5f15\u7528\u5173\u7cfb\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u4ece\u73b0\u6709\u67b6\u6784\u4e2d\u5220\u9664\u5173\u7cfb\u3001\u6743\u9650\u6216\u5bf9\u8c61\u5b9a\u4e49\u3002\n\u8bb0\u4f4f\u8fd9\u4e9b\uff0c\u4f60\u53ea\u9700\u8981\u5f00\u59cb\u4f7f\u7528\u4e00\u4e2a\u5408\u9002\u7684API\u5ba2\u6237\u7aef\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u5c06\u5047\u8bbe\u8fd9\u662f\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u7684\u6a21\u5f0f\uff1a\n\u5b9a\u4e49\u7528\u6237{}\u5b9a\u4e49\u6587\u6863{\u5173\u7cfb\u7f16\u5199\u5668\uff1a\u7528\u6237\u5173\u7cfb\u8bfb\u53d6\u5668\uff1a\u7528\u6237\u6743\u9650\u7f16\u8f91=\u7f16\u5199\u5668\u6743\u9650\u89c6\u56fe=\u8bfb\u53d6\u5668+\u7f16\u8f91}\n\u5b9a\u4e49\u7528\u6237{}\u5b9a\u4e49\u6587\u6863{\u5173\u7cfb\u7f16\u5199\u5668\uff1a\u7528\u6237\u5173\u7cfb\u8bfb\u53d6\u5668\uff1a\u7528\u6237\u5173\u7cfb\u6240\u6709\u8005\uff1a\u7528\u6237--\u6b65\u9aa41\u6743\u9650\u7f16\u8f91=\u7f16\u5199\u5668+\u6240\u6709\u8005--\u6b65\u9aa44\u6743\u9650\u89c6\u56fe=\u8bfb\u53d6\u5668+\u7f16\u8f91}\n\u5728\u66f4\u65b0spicedb\u65f6\uff0c\u521b\u5efa\u7684\u4efb\u4f55\u65b0\u6587\u6863\u90fd\u5e94\u5305\u542b\u65b0\u7684\u6240\u6709\u8005\u5173\u7cfb\u3002\n\u91cd\u65b0\u5efa\u7acb\u5173\u7cfb\uff0c\u5c31\u597d\u50cf\u5b83\u4ece\u4e00\u5f00\u59cb\u5c31\u5b58\u5728\u4e00\u6837\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5e93\u4e2d\u67e5\u627e\u8c01\u521b\u5efa\u4e86\u6587\u6863\uff0c\u5e76\u7528authzed\u7f16\u5199\u6240\u6709\u8005\u5173\u7cfb\u3002\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\u3002v1\u3002\u5199\u4f5c\u5173\u7cfb\u3002\u5982\u679c\u8fd9\u662f\u901a\u8fc7\u89e6\u6478\u5b8c\u6210\u7684\uff0c\u90a3\u4e48\u5b83\u5c06\u4e0d\u4f1a\u4e0e\u4e0a\u4e00\u6b65\u4e2d\u6240\u5199\u7684\u5173\u7cfb\u51b2\u7a81\u3002\n\u5f53\u6570\u636e\u5df2\u88ab\u56de\u586b\u3001\u786e\u8ba4\u6709\u6548\u4e14\u6b63\u5728\u5199\u5165\u65b0\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728\u5176\u4ed6\u6743\u9650\u8ba1\u7b97\u4e2d\u5305\u542b\u8be5\u5173\u7cfb\uff0c\u5e76\u66f4\u65b0\u67b6\u6784\u3002\u73b0\u5728\u5c31\u5f00\u59cb\u66f4\u65b0\u6a21\u5f0f\u53ef\u80fd\u662f\u5b89\u5168\u7684\uff1b\u6743\u9650\u8ba1\u7b97\u53ea\u4f1a\u5728\u56de\u586b\u5173\u7cfb\u65f6\u53d1\u751f\u53d8\u5316\u3002\n1\u5b9a\u4e49\u7528\u6237{2 3\u5b9a\u4e49\u6587\u6863{4\u5173\u7cfb\u7f16\u5199\u5668\uff1a\u7528\u62375--\u6b65\u9aa45:\u5220\u9664`\u5173\u7cfb\u8bfb\u53d6\u5668\uff1a\u7528\u6237`6 7\u6743\u9650\u7f16\u8f91=\u7f16\u5199\u56688\u6743\u9650\u89c6\u56fe=\u7f16\u8f91--\u6b65\u9aa41:\u5220\u9664`\u8bfb\u53d6\u5668+`9}\n\u5982\u679c\u6b64\u65f6\u901a\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u4e86\u4efb\u4f55\u95ee\u9898\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u66f4\u6539\u6062\u590d\u5230\u67b6\u6784\u6765\u6062\u590d\u6743\u9650\u3002\n\u5728\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5728\u7b2c2\u6b65\u505c\u7559\u591a\u957f\u65f6\u95f4\uff0c\u4ee5\u4fdd\u6301\u56de\u6eda\u66f4\u6539\u7684\u80fd\u529b\u3002\n\u5b9a\u4e49\u7528\u6237{}\u5b9a\u4e49\u7ec4{--\u6b65\u9aa41\u5173\u7cfb\u6210\u5458\uff1a\u7528\u6237--\u6b65\u9aa41}--\u6b65\u9aa41\u5b9a\u4e49\u6587\u6863{\u5173\u7cfb\u7f16\u5199\u5668\uff1a\u7528\u6237|\u7ec4#\u6210\u5458--\u6b65\u9aa44\u5173\u7cfb\u8bfb\u53d6\u5668\uff1a\u7528\u6237|\u7ec4#\u6210\u5458--\u6b65\u9aa44\u6743\u9650\u7f16\u8f91=\u7f16\u5199\u8005\u6743\u9650\u89c6\u56fe=\u8bfb\u53d6\u5668+\u7f16\u8f91}\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u7814\u7a76\u4e86\u4e00\u4e9b\u793a\u4f8b\uff0c\u5f88\u660e\u663e\uff0c\u5728SpiceDB\u4e2d\u7684\u8fc1\u79fb\u5e76\u4e0d\u6bd4\u5728\u901a\u7528DBMS\u4e2d\u7684\u8fc1\u79fb\u66f4\u5177\u6311\u6218\u6027\uff0c\u800c\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8981\u7b80\u5355\u5f97\u591a\u3002\n\u4f46\u6ca1\u6709\u7406\u7531\u5c31\u6b64\u6b62\u6b65\uff01\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86SpiceDB\u5bf9\u6743\u9650\u8ba1\u7b97\u7684\u5173\u6ce8\u662f\u5982\u4f55\u6d88\u9664\u67d0\u7c7b\u786c\u8fc1\u79fb\u95ee\u9898\u7684\u3002\u6211\u4eec\u8ba4\u4e3a\u6709\u66f4\u591a\u7684\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5316SpiceDB\u4e2d\u7684\u8fc1\u79fb\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u4e0e\u6211\u4eec\u8ba8\u8bba\u8fd9\u4e9b\u95ee\u9898\uff08\u6216\u8005\u60a8\u5bf9\u81ea\u5df1\u7684\u8fc1\u79fb\u6709\u7591\u95ee\uff09\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u987a\u9053\u62dc\u8bbf\u6211\u4eec\u7684discord\u5e76\u804a\u4e00\u804a\u5462\uff1f", "note_en": "Data migrations are a fact of life for any application. Requirements change, features are added or removed, services are merged together or split apart. As the application evolves, so too must the data behind it. In this regard, the permissions information you store in  SpiceDB is no different from any other data in any other database.\n If you\u2019re unfamiliar with online migration strategies in general, there are a few  good resources online that cover the general topic; we\u2019re going to focus just on SpiceDB and how to perform migrations against the data and schema it holds.\n  But first, let\u2019s highlight a couple of scenarios where SpiceDB shines because  no migrations are needed:\n  If the services that talk to SpiceDB are being refactored (i.e. a monolith is being split into a service oriented architecture), there is likely nothing you need to do with SpiceDB.\n  Because SpiceDB runs as a separate service, any new services that talk to it just need to connect and make the necessary queries. There\u2019s peace of mind knowing that authorization (typically a challenging part of changing architecture at this layer) won\u2019t be a burden or a bottleneck.\n  With SpiceDB, you  write relationships, but you  check permissions. Permissions are computed over the relationships that are already stored. This means that any changes you wish to make to how permissions are computed can be done without any migrations at all: simply update the schema.\n  definition user {} definition organization { relation administrator : user relation direct_member : user permission member  = direct_member}\n You can include administrators as members and create a new \u201cadmin\u201d permission without any migrations at all: definition user {} definition organization { relation administrator : user relation direct_member : user  permission admin  = administrator  permission member  = direct_member  + administrator}\n  There will always be cases where a migration is required, and when that happens you will need to plan out the migration steps. Here are some patterns to help with your online migration plan:\n  All Schema writes are  fully consistent. This means that any relationship writes that occur after the schema has been written will be evaluated under that new schema.\n Any relationship  reads, however, will use the revision of the schema that matches the revision of the read request.This ensures that checks evaluate with the correct schema to avoid  new enemy problems.\n   A relation, permission, or object definition can only be removed from an existing schema if there are no relationships referencing it.\n With these in mind, all you need to get started is an appropriate  API client.\n  The following examples will assume this is the schema we\u2019re starting out with:\n definition user {}  definition document { relation writer : user relation reader : user permission edit  = writer permission view  = reader  + edit}\n   definition user {}  definition document { relation writer : user relation reader : user  relation owner : user  -- step 1  permission edit  = writer  + owner  -- step 4 permission view  = reader  + edit}\n Any new documents that are created should include the new  owner relation when updating spicedb.\n Backfill the relationship as if it had been there from the beginning.In this case, we look up who created the document in the application\u2019s database, and write the owner relation with  authzed.api.v1.WriteRelationships.If this is done with  TOUCH then it won\u2019t conflict with the relationships written in the previous step.\n When the data has been backfilled, confirmed valid, and new data is being written, you can include the relation in other permission calculations and update the schema.It may be safe to go ahead and update the schema right away; the permission calculations will simply change as you backfill the relationships.\n   1 definition user {} 2  3 definition document { 4 relation writer : user  5  -- step 5: removed `relation reader: user` 6 7 permission edit  = writer  8 permission view  = edit  -- step 1: removed `reader +` 9}\n If there are any issues discovered via testing at this point, the data is all still there and permissions can be restored by reverting the change to the schema.\n You can stay at step 2 for as long as desired, in production, to retain your ability to roll back the change.\n   definition user {}   definition group {  -- step 1  relation member : user  -- step 1 }  -- step 1  definition document {  relation writer : user  | group #member  -- step 4  relation reader : user  | group #member  -- step 4 permission edit  = writer permission view  = reader  + edit}\n     Now that we have worked through some examples, it\u2019s clear that migrations in SpiceDB are no more challenging than migrations in a general purpose DBMS, and in some cases much simpler.\n But there is no reason to stop there!We\u2019ve seen how SpiceDB\u2019s focus on permission calculations makes a certain class of hard migration problems go away.We think that there are more ways we can simplify migrations in SpiceDB.If you\u2019re interested in discussing those with us (or you have a question about your own migrations), why not drop by our  discord and have a chat?", "posttime": "2022-02-17 09:45:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u5f0f,schema,\u5173\u7cfb", "title": "SpiceDB\u4e2d\u7684\u5728\u7ebf\u6a21\u5f0f\u8fc1\u79fb", "title_en": "Online Schema Migrations in SpiceDB", "transed": 1, "url": "https://authzed.com/blog/online-schema-migrations/", "via": "", "real_tags": ["\u6a21\u5f0f", "schema", "\u5173\u7cfb"]}]
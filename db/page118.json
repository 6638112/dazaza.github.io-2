[{"category": "", "categoryclass": "", "imagename": "9e488b20b43dd6bf65a3148080cf3f05.jpg", "infoid": 1068764, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u6ca1\u6709\u6c89\u6d78\u5728\u9ad8\u7aef\u89c6\u9891\u6e38\u620f\u6536\u85cf\u7684\u4e16\u754c\u4e2d\uff0c\u60a8\u53ef\u80fd\u5f88\u96be\u7406\u89e3\u4e3a\u4ec0\u4e48\u6709\u4eba\u5728\u4e0a\u5468\u65e5\u4ee5\u8d85\u8fc7 150 \u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5e26\u6709\u6536\u7f29\u5305\u88c5\u7684\u76d2\u88c5\u8d85\u7ea7\u9a6c\u91cc\u5965 64 \u526f\u672c\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u4e0e\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u5728\u6536\u96c6\u6e38\u620f\u5e76\u5173\u6ce8\u8fd9\u4e2a\u4e0e\u4e16\u9694\u7edd\u7684\u4e16\u754c\u7684\u4eba\u4ea4\u8c08\uff0c\u60a8\u4f1a\u53d1\u73b0......\u597d\u5427\uff0c\u4ed6\u4eec\u4e5f\u8ba4\u4e3a\u8fd9\u5f88\u96be\u7406\u89e3\u3002\u4ee4\u4eba\u56f0\u60d1\u7684\u90e8\u5206\u751a\u81f3\u4e0d\u662f\u82b1\u5728\u4e00\u4e2a\u6ca1\u4eba\u4f1a\u6253\u5f00\u7684\u89c6\u9891\u6e38\u620f\u76d2\u4e0a\u7684\u5de8\u989d\u8d44\u91d1\uff0c\u66f4\u4e0d\u7528\u8bf4\u73a9\u4e86\u3002\u81ea\u4ece 2019 \u5e74\u65e9\u671f\u5bc6\u5c01\u5370\u5237\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u4ee5\u8d85\u8fc7 10 \u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u552e\u51fa\u4ee5\u6765\uff0c\u9ad8\u7aef\u6e38\u620f\u6536\u85cf\u754c\u7684\u666e\u904d\u5171\u8bc6\u662f\uff0c\u6700\u7ec8\u7684\u4e03\u4f4d\u6570\u6e38\u620f\u9500\u552e\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u4f46\u5373\u4f7f\u5728\u4e24\u4e2a\u6708\u524d\u4ee5 660,000 \u7f8e\u5143\u7684\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u51fa\u552e\u540e\uff0c\u8bb8\u591a\u4eba\u4e5f\u4e0d\u8ba4\u4e3a\u534e\u800c\u4e0d\u5b9e\u7684\u767e\u4e07\u7f8e\u5143\u58c1\u5792\u4f1a\u8fd9\u4e48\u5feb\u88ab\u6253\u7834\u3002 \u201c\u8001\u5b9e\u8bf4\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u91cc\u7a0b\u7891\uff0c\u6211\u4eec\u76f4\u5230\u51e0\u5e74\u540e\u624d\u80fd\u901a\u8fc7\uff0c\u201dHeritage Auctions \u89c6\u9891\u6e38\u620f\u5bc4\u552e\u603b\u76d1 Valarie McLeckie \u544a\u8bc9 Ars\u3002\u7136\u800c\uff0c\u4e0d\u4ec5\u4ec5\u662f\u65f6\u673a\uff0c\u4e0e Ars \u4ea4\u8c08\u7684\u6e38\u620f\u6536\u85cf\u5bb6\u8868\u8fbe\u4e86\u8fd1\u4e4e\u666e\u904d\u7684\u9707\u60ca\uff0c\u56e0\u4e3a\u8fd9\u662f\u7b2c\u4e00\u6b3e\u552e\u4ef7\u5982\u6b64\u4e4b\u9ad8\u7684\u6e38\u620f\u3002\u8fc7\u53bb\uff0c\u5c11\u6570\u51e0\u6b3e\u552e\u4ef7 10 \u4e07\u7f8e\u5143\u6216\u4ee5\u4e0a\u7684\u6e38\u620f\u90fd\u6781\u4e3a\u7f55\u89c1\uff0c\u800c\u4e14\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5f15\u4eba\u6ce8\u76ee\u3002\u4f8b\u5982\uff0c\u585e\u5c14\u8fbe\u4f20\u8bf4\u65e9\u4e9b\u65f6\u5019\u5728 Heritage \u6700\u8fd1\u7684\u5468\u672b\u62cd\u5356\u4e2d\u6682\u65f6\u521b\u9020\u4e86 870,000 \u7f8e\u5143\u7684\u9500\u552e\u8bb0\u5f55\uff0c\u5728\u6e05\u5355\u4e2d\u88ab\u63cf\u8ff0\u4e3a\u201c\u6211\u4eec\u6709\u673a\u4f1a\u63d0\u4f9b\u7684\u6700\u65e9\u751f\u4ea7\u8fd0\u884c\u4e4b\u4e00\u7684\u552f\u4e00\u526f\u672c\u201d\u4e00\u4e2a\u6807\u5fd7\u6027\u7684\u6e38\u620f\u3002\u5f53\u7136\uff0c\u8d85\u7ea7\u9a6c\u91cc\u5965 64 \u662f\u62e5\u6709\u5927\u91cf\u7c89\u4e1d\u7684\u7279\u8bb8\u7ecf\u8425\u6743\u4e2d\u7684\u91cd\u8981\u6e38\u620f\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u9a6c\u91cc\u5965\u7b2c\u4e00\u6b21\u51fa\u73b0\u5728\u5bb6\u5ead\u89c6\u9891\u6e38\u620f\u4e2d\u2014\u2014\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u7684\u65e9\u671f\u5370\u5237\u66f4\u7c7b\u4f3c\u4e8e\u8d85\u4eba\u5728\u52a8\u4f5c\u6f2b\u753b#1 \u4e2d\u7684\u9996\u6b21\u51fa\u73b0\uff0c\u6f2b\u753b\u6536\u85cf\u7684\u5723\u676f\u3002\u662f\u7684\uff0c\u5f88\u96be\u627e\u5230\u4e00\u672c N64 \u7545\u9500\u4e66\u7684\u526f\u672c\uff0c\u5b83\u4e0d\u662f\u5728 90 \u5e74\u4ee3\u540e\u671f\u88ab\u67d0\u4e2a\u5b69\u5b50\u6495\u5f00\u5e76\u7acb\u5373\u64ad\u653e\u7684\u3002\u4f46\u8fd9\u5e76\u975e\u4e0d\u53ef\u80fd\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u4e2d\uff0c\u7968\u636e\u4ea4\u6362\u6240 PriceCharting.com \u5217\u51fa\u4e86 30 \u4efd\u201c\u5206\u7ea7\u201d\u5bc6\u5c01\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965 64\u300b\uff08\u5373\u90a3\u4e9b\u5df2\u7ecf\u88ab\u8bc4\u7ea7\u673a\u6784\u8bc4\u4f30\u5e76\u653e\u5165\u4fdd\u62a4\u677f\u7684\u526f\u672c\uff09\u7684\u516c\u5f00\u9500\u552e\u3002\u5728\u90a3\u6bb5\u65f6\u95f4\u91cc\uff0c\u6709\u6570\u5341\u672c\u989d\u5916\u7684\u5bc6\u5c01\u526f\u672c\u88ab\u201c\u539f\u59cb\u201d\u51fa\u552e\u4e14\u672a\u5206\u7ea7\u3002\u5728\u6b64\u6b21 156 \u4e07\u7f8e\u5143\u7684\u9500\u552e\u4e4b\u524d\uff0c\u8fd9\u4e9b\u5bc6\u5c01\u7684\u8d85\u7ea7\u9a6c\u91cc\u5965 64 \u76d2\u6ca1\u6709\u4e00\u4e2a\u4ee5\u8d85\u8fc7 38,400 \u7f8e\u5143\u7684\u4ef7\u683c\u552e\u51fa\u3002 \u201c\u76f4\u5230\u4e0a\u5468\u672b\uff0c\u6211\u8ba4\u4e3a\u5f88\u591a [\u8fd9\u4e9b\u9ad8\u7aef\u5bc6\u5c01\u6e38\u620f\u9500\u552e] \u90fd\u662f\u6709\u9053\u7406\u7684\uff0c\u201d\u89c6\u9891\u6e38\u620f\u5386\u53f2\u57fa\u91d1\u4f1a\u7684\u8054\u5408\u8463\u4e8b\u517c\u590d\u53e4\u6e38\u620f\u5546\u5e97 Pink Gorilla \u7684\u5171\u540c\u6240\u6709\u8005 Kelsey Lewin \u8bf4\u3002 \u201c\u6211\u80fd\u7406\u89e3\u5f88\u591a\u6602\u8d35\u4ea7\u54c1\u80cc\u540e\u7684\u903b\u8f91\u3002\u8fd9\u611f\u89c9\u5c31\u50cf\u6211\u7b2c\u4e00\u6b21\u4e0d\u7406\u89e3\u2018\u4e3a\u4ec0\u4e48\uff1f\u2019\u201d\n\u4e24\u5e74\u524d\u5356\u6389\u4e86\u4ef7\u503c 10 \u4e07\u7f8e\u5143\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u7684\u957f\u671f\u5bc6\u5c01\u6e38\u620f\u6536\u85cf\u5bb6 Bronty \u5bf9\u6b64\u63d0\u51fa\u4e86\u66f4\u597d\u7684\u89c2\u70b9\u3002 \u201c40 \u4e07\u7f8e\u5143\u7684\u7ed3\u679c\u6211\u53ef\u80fd\u5df2\u7ecf\u7406\u89e3\u4e86\u3002150 \u4e07\u7f8e\u5143\uff1f\u4ed6\u5988\u7684\u4ec0\u4e48\uff1f\u201d \u201c\u57fa\u672c\u4e0a\u53d1\u751f\u7684\u4e8b\u60c5\u662f\uff0c\u4eba\u4eec\u53e3\u888b\u91cc\u7684\u94b1\u6bd4\u8fc4\u4eca\u4e3a\u6b62\u6536\u96c6\u6e38\u620f\u7684\u94b1\u591a\u5f97\u591a\uff0c\u201d\u524d\u300a\u8fde\u7ebf\u300b\u6e38\u620f\u7f16\u8f91\u548c\u73b0\u4efb Digital Eclipse \u7f16\u8f91\u603b\u76d1 Chris Kohler \u8bf4\u3002 \u201c\u4ed6\u4eec\u8bf4\uff0c&#39;\u4f60\u4eec\u505a\u9519\u4e86\u3002&#39;\u201d \u79d1\u52d2\u4ece 90 \u5e74\u4ee3\u5341\u51e0\u5c81\u8d77\u5c31\u4e00\u76f4\u5728\u6536\u96c6\u7535\u5b50\u6e38\u620f\uff0c\u6216\u8005\u8bf4\u53ea\u8981\u7535\u5b50\u6e38\u620f\u6536\u96c6\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\u5b58\u5728\u3002\u4ed6\u8bf4\uff0c\u5728\u90a3\u6bb5\u65f6\u95f4\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u7edd\u5927\u591a\u6570\u7684\u6e38\u620f\u6536\u85cf\u5bb6\u5bf9\u4eca\u5929\u7684\u70ed\u8584\u8377\u6761\u4ef6\u3001\u6536\u7f29\u5305\u88c5\u5bc6\u5c01\u6807\u672c\u7684\u60f3\u6cd5\u5e76\u4e0d\u90a3\u4e48\u611f\u5174\u8da3\u3002\u76f8\u53cd\uff0c\u6700\u5927\u7684\u6536\u85cf\u5bb6\u901a\u5e38\u5e0c\u671b\u5728\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u5e73\u53f0\u4e0a\u62e5\u6709\u4e00\u5957\u5b8c\u6574\u7684\u3001\u53ef\u64ad\u653e\u7684\u6240\u6709\u4f5c\u54c1\uff0c\u53ef\u4ee5\u662f\u6563\u88c5\u7684\u58a8\u76d2\uff0c\u4e5f\u53ef\u4ee5\u662f\u672a\u5bc6\u5c01\u4f46\u201c\u5b8c\u6574\u76d2\u88c5\u201d\u7684\u526f\u672c\u3002\u6700\u7ec8\uff0c\u968f\u7740\u8fd9\u4e9b\u5b8c\u6210\u6536\u85cf\u5bb6\u7684\u6e05\u5355\u63a5\u8fd1\u5c3e\u58f0\uff0c\u4ed6\u4eec\u6700\u7ec8\u90fd\u5728\u4e89\u593a\u76f8\u540c\u7684\u7a00\u6709\u5934\u8854\u3002\u56e0\u6b64\uff0c\u50cfStadium Events \u6216Chase the Chuck Wagon \u8fd9\u6837\u4e0d\u8d77\u773c\u7684\u6e38\u620f\u4f1a\u4ee5\u6570\u767e\u6216\u6570\u5343\u7f8e\u5143\u7684\u4ef7\u683c\u5356\u7ed9\u9700\u8981\u5c11\u6570\u73b0\u5b58\u526f\u672c\u4e2d\u7684\u4e00\u4e2a\u6765\u5b8c\u6210\u4ed6\u4eec\u7684\u6536\u85cf\u7684\u6536\u85cf\u5bb6\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u5b8c\u6210\u8005\u6765\u8bf4\uff0c\u8fd9\u4e9b\u6e38\u620f\u5728\u6000\u65e7\u3001\u6e38\u620f\u73a9\u6cd5\u6216\u5386\u53f2\u610f\u4e49\u65b9\u9762\u51e0\u4e4e\u6ca1\u6709\u5185\u5728\u4ef7\u503c\u8fd9\u4e00\u4e8b\u5b9e\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u65e9\u5728 2018 \u5e74\u53ca\u4e4b\u524d\u5c31\u5b58\u5728\u7740\u4e13\u6ce8\u4e8e\u5bc6\u5c01\u7535\u5b50\u6e38\u620f\u7684\u6536\u85cf\u5bb6\uff0c\u4f46\u4ed6\u4eec\u53ea\u662f\u4e00\u4e2a\u5c0f\u4f17\u3002 \u201c\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u90fd\u6ca1\u6709\u6536\u96c6\u5bc6\u5c01\u6e38\u620f\uff0c\u201dLewin \u8bf4\u3002 \u201c\u5bc6\u5c01\u6e38\u620f\u5f53\u7136\u6bd4\u975e\u5bc6\u5c01\u6e38\u620f\u66f4\u8d5a\u94b1\uff0c\u4f46\u8d2d\u4e70\u5bc6\u5c01\u6e38\u620f\u7684\u4f20\u7edf\u590d\u53e4\u6e38\u620f\u6536\u85cf\u5bb6\u662f\u5982\u6b64\u4e4b\u5c11\uff0c\u6211\u4e2a\u4eba\u5e76\u4e0d\u89c9\u5f97\u8fd9\u5f71\u54cd\u4e86\u6211\u7684[\u6536\u96c6]\u80fd\u529b.\u201d", "note_en": "If you aren&#39;t immersed in the world of high-end video game collecting, it&#39;s probably hard to understand why  someone paid in excess of $1.5 million for a single, shrinkwrap-sealed boxed copy of  Super Mario 64 last Sunday. But if you talk to people who have been collecting games and following this insular world for decades, you&#39;ll find... well, they also think it&#39;s hard to understand.\n The confusing part isn&#39;t even the sheer amount of money being spent on a video game box that no one will ever open, much less play. Ever since an early sealed printing of  Super Mario Bros.  sold for over $100,000 in 2019, the general consensus in the world of high-end game collecting was that an eventual seven-figure game sale was inevitable. But even after  a $660,000  Super Mario Bros. sale two months ago, many didn&#39;t think the flashy million-dollar barrier would be broken so quickly. &#34;I honestly thought that this was a milestone that we wouldn&#39;t pass until years from now,&#34; Heritage Auctions Video Game Consignment Director Valarie McLeckie told Ars.\n More than the timing, though, game collectors that spoke to Ars expressed near-universal shock that  this was the first game to command such a high price. In the past, the small handful of games that have sold for $100,000 or more have all been extremely rare and notable in some way.  The Legend of Zelda that  temporarily set an $870,000 sales record earlier in Heritage&#39;s recent weekend auction, for instance, was described in the listing as &#34;the only copy from one of the earliest production runs that we&#39;ve ever had the opportunity to offer&#34; for an iconic game.\n  Sure,  Super Mario 64 is an important game in a franchise with a huge number of fans. But it&#39;s not the first home video game appearance of Mario\u2014early printings of  Super Mario Bros. are more analogous to Superman&#39;s first appearance in Action Comics #1, the holy grail of comic collecting.\n And yes, it&#39;s hard to find a copy of the N64 best-seller that wasn&#39;t torn open and played immediately by some kid the second they got it in the late &#39;90s. But it&#39;s not  impossible. Over the last two years, clearinghouse PriceCharting.com  lists 30 public sales of &#34;graded&#34; sealed copies of  Super Mario 64 (i.e., those which have been evaluated and put in a protective slab by a rating agency). Dozens of additional sealed copies  have been sold &#34;raw&#34; and ungraded in that time.\n None of those sealed  Super Mario 64 boxes sold for more than $38,400 before this $1.56 million sale.\n  &#34;I thought that a lot of [these high-end sealed-game sales] made sense up until this last weekend,&#34; said Kelsey Lewin, co-director of the  Video Game History Foundation and co-owner of retro game store  Pink Gorilla. &#34;I could understand the logic behind a lot of the expensive ones. This felt like the first one that I didn&#39;t understand the &#39;Why?&#39;&#34;\n Long-time sealed-game collector Bronty, who  sold that $100,000  Super Mario Bros. two years ago, put a finer point on it. &#34;A $400K result I might have understood. $1.5 million? What the fuck?&#34;\n  &#34;What&#39;s basically happening is that people are getting in with a lot more money in their pockets than has been going around in game collecting so far,&#34; says former Wired gaming editor and current Digital Eclipse Editorial Director Chris Kohler. &#34;And they&#39;re saying, &#39;You guys are doing it wrong.&#39;&#34;\n Kohler  has been collecting video games since he was a teenager in the &#39;90s, or about as long as video game collecting has existed as a hobby. For most of that time, he says, the vast majority of game collectors weren&#39;t all that animated by the idea of today&#39;s hot mint-condition, shrinkwrap-sealed specimens. Instead, the biggest collectors generally wanted to own a complete, playable set of all the titles on their favorite platforms, either as loose cartridges or unsealed but &#34;complete in box&#34; copies.\n  Eventually, as these completionist collectors got near the end of their checklists, they all ended up competing for the same rare titles. Thus, obscure games like   Stadium Events or   Chase the Chuck Wagon would sell for hundreds or thousands of dollars to collectors who needed one of the handful of extant copies in order to finish their collections. For these completionists, the fact that these titles had little-to-no intrinsic value in terms of nostalgia, gameplay, or historical significance was beside the point.\n  Collectors who focused on sealed video games existed in the long ago days of 2018 and prior, but they were a small niche. &#34;None of us were collecting sealed games before this,&#34; Lewin said. &#34;Sealed games of course went for more money than not-sealed games, but it was such a small amount of traditional retro game collectors that were buying the sealed games that I personally hadn&#39;t felt like it was affecting my ability [to collect].&#34;", "posttime": "2021-07-22 21:37:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9a6c\u91cc\u5965,\u62cd\u5356,collectors,\u6e38\u620f", "title": "\u6536\u85cf\u5bb6\u4e5f\u5bf9 156 \u4e07\u7f8e\u5143\u7684\u8d85\u7ea7\u9a6c\u91cc\u5965 64 \u62cd\u5356\u611f\u5230\u56f0\u60d1", "title_en": "Collectors are also confused about that $1.56M Super Mario 64 sale", "transed": 1, "url": "https://arstechnica.com/features/2021/07/collectors-are-as-confused-as-you-are-about-that-1-56m-super-mario-64-sale/", "via": "", "real_tags": ["\u9a6c\u91cc\u5965", "\u62cd\u5356", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "b89174ea0688f7d8919c79c8d2113702.jpg", "infoid": 1068763, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ESP32 \u7269\u8054\u7f51\u5904\u7406\u5668\u652f\u6301\u9ad8\u8fbe 8MB \u7684 PSRAM\uff0c\u8db3\u4ee5\u8fd0\u884c\u6700\u5c0f\u7248\u672c\u7684 Linux\u3002\u5b83\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5b9e\u9645\u5e94\u7528\uff0c\u4f46\u5c1d\u8bd5\u4e00\u4e0b\u53ef\u80fd\u5f88\u6709\u8da3\uff0c\u4e00\u4f4d\u5f00\u53d1\u4eba\u5458\u663e\u7136\u8bbe\u6cd5\u5728\u5e26\u6709\u8fde\u63a5\u5230 8MB PSRAM \u548c 2MB SPI \u95ea\u5b58\u7684 ESP32 \u53cc\u6838 Xtensa \u5904\u7406\u5668\u7684\u677f\u4e0a\u542f\u52a8 Linux 5.0.0\u3002\u4e0a\u9762\u7f29\u77ed\u7684\u542f\u52a8\u65e5\u5fd7\u663e\u793a\u4e86 ESP32-D0WD \u53cc\u6838 Xtensa \u5904\u7406\u5668\u6700\u7ec8\u542f\u52a8 Linux 5.0.0 \u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u8f93\u51fa\u3002\u4f46\u662f\u5f15\u5bfc\u8fc7\u7a0b\u6709\u4e9b\u590d\u6742\uff0c\u56e0\u4e3a\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u8df3\u8f6c\u5230\u201cJuice Vm\u201d\uff0c\u88ab\u63cf\u8ff0\u4e3a\u201c\u5c0f\u578b RISC-V \u865a\u62df\u673a\u201d\uff0c\u7136\u540e\u8c03\u7528 OpenSBI RISC-V \u5f00\u6e90\u4e3b\u7ba1\u4e8c\u8fdb\u5236\u63a5\u53e3\uff0c\u52a0\u8f7d Linux \u5185\u6838\u548c\u5c0f\u578b\u6587\u4ef6\u7cfb\u7edf\u3002\u5b8c\u6574\u7684\u542f\u52a8\u65e5\u5fd7\u548c\u4e8c\u8fdb\u5236\u6620\u50cf\u5728 Reddit \u7ebf\u7a0b\u548cWhycan \u4e0a\u4e0e\u540e\u8005\u4ee5\u4e2d\u6587\u5171\u4eab\u3002\u603b\u6620\u50cf\u5927\u5c0f\u7ea6\u4e3a 1.5 MB\uff0c\u51e0\u4e4e\u5b8c\u5168\u586b\u6ee1\u4e86\u7528\u4e8e\u6d4b\u8bd5\u7684\u7535\u8def\u677f\u4e2d\u4f7f\u7528\u7684 2MB \u95ea\u5b58\u3002\u663e\u7136\u652f\u6301 SPI \u548c UART \u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u542f\u52a8\u5230\u4e32\u884c\u63a7\u5236\u53f0\u3002\u795d\u4f60\u597d\u8fd0\u627e\u51fa\u5982\u4f55\u5904\u7406\u63d0\u4f9b\u7684\u4e24\u4e2a\u4e8c\u8fdb\u5236\u56fe\u50cf\uff0c\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b\u90fd\u6ca1\u6709\u4efb\u4f55\u89e3\u91ca\u3002\u8fd9\u5f88\u4ee4\u4eba\u56f0\u60d1\uff0c\u6700\u521d\uff0c\u6211\u4ec0\u81f3\u8ba4\u4e3a\u5b83\u663e\u793a Linux \u5728 ESP32-C3 RISC-V \u5904\u7406\u5668\u4e0a\u542f\u52a8\uff0c\u56e0\u4e3a Juice VM \u662f\u4e00\u4e2a RISC-V \u865a\u62df\u673a\uff0c\u4f5c\u4e3a\u65c1\u6ce8\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u542f\u52a8 FreeRTOS\u3001RT-Thread \uff0c\u548c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u3002\u4f46\u6211\u6700\u7ec8\u88ab\u544a\u77e5 JuiceVm rv64 \u865a\u62df\u673a\u5df2\u79fb\u690d\u5230 ESP-IDF \u5e76\u652f\u6301 ESP32\u3001ESP32-S2 \u548c ESP32-C3\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u7b2c\u4e00\u6b21\u6709\u4eba\u5728 ESP32 \u4e0a\u8fd0\u884c Linux\uff0c\u56e0\u4e3a\u53bb\u5e74\u5728 ESP32 \u4e0a\u6f14\u793a\u4e86\u8f83\u65e7\u7684 Ubuntu 9.04\u3002 Jean-Luc \u4e8e 2010 \u5e74\u4ee5\u517c\u804c\u65b9\u5f0f\u521b\u529e\u4e86 CNX Software\uff0c\u4e4b\u540e\u8f9e\u53bb\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u7406\u7684\u5de5\u4f5c\uff0c\u5e76\u4e8e 2011 \u5e74\u665a\u4e9b\u65f6\u5019\u5f00\u59cb\u5168\u804c\u64b0\u5199\u6bcf\u65e5\u65b0\u95fb\u548c\u8bc4\u8bba\u3002\u652f\u6301 CNX Software\uff01\u901a\u8fc7 PayPal \u6216\u52a0\u5bc6\u8d27\u5e01\u6350\u8d60\uff0c\u6210\u4e3a Patreon \u7684\u8d5e\u52a9\u4eba\uff0c\u6216\u8d2d\u4e70\u8bc4\u8bba\u6837\u672c", "note_en": "ESP32 IoT processor supports up to 8MB PSRAM which makes it just enough to run a minimal version of Linux. There\u2019s little practical application for it, but it may be fun to try, and one developer apparently managed to boot Linux 5.0.0 on a board with an ESP32 dual-core Xtensa processor connected to 8MB PSRAM and a 2MB SPI flash.\n  The shortened boot log above shown the bootloader output with ESP32-D0WD dual-core Xtensa processor eventually booting Linux 5.0.0. But the boot process is somewhat convoluted as the bootloader jumps to \u201c Juice Vm\u201d described as a \u201csmall RISC-V virtual machine\u201d which then calls  OpenSBI RISC-V Open Source Supervisor Binary Interface which loads the Linux kernel and a small file system.\n The full boot log and binary images were shared on a  Reddit thread and  Whycan with the latter in Chinese. The total image size is around 1.5 MB that almost entirely fills the 2MB flash used in the board used for testing. SPI and UART interfaces are clearly supported, but they don\u2019t seem to boot to a serial console just yet.\n Good luck finding out what to do with the two binary images provided, as there\u2019s no explanation at all of all this all works. It\u2019s quite confusing, and initially, I even thought it showed Linux booting on  ESP32-C3 RISC-V processor since Juice VM is a RISC-V virtual machine which, as a side note, can also be used to boot FreeRTOS, RT-Thread, and other OS. But I was eventually told JuiceVm rv64 virtual machine had been ported to the ESP-IDF with support for ESP32, ESP32-S2, and ESP32-C3.\n Note it\u2019s not the first time somebody runs Linux on ESP32, as last year the older  Ubuntu 9.04 was demonstrated on ESP32.\n Jean-Luc started CNX Software in 2010 as a part-time endeavor, before quitting his job as a software engineering manager, and starting to write daily news, and reviews full time later in 2011.\n Support CNX Software! Donate via    PayPal or    cryptocurrencies,    become a Patron on Patreon, or    buy review samples", "posttime": "2021-07-22 21:37:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,esp32,boot,\u542f\u52a8", "title": "Linux 5.0 \u663e\u793a\u5728 ESP32 \u5904\u7406\u5668\u4e0a\u542f\u52a8", "title_en": "Linux 5.0 shown to boot on ESP32 processor", "transed": 1, "url": "https://www.cnx-software.com/2021/07/18/linux-5-0-esp32-processor/", "via": "", "real_tags": ["linux", "esp32", "boot", "\u542f\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "322bdd08d50f88158b669ad67375c7e1.gif", "infoid": 1068762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60 (AI/ML) \u7b97\u6cd5\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u5f97\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u53d1\u5c55\uff0c\u7528\u4e8e\u8bca\u65ad\u548c\u6cbb\u7597\u5404\u79cd\u75be\u75c5 ([1][1])\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6b64\u7c7b\u7cfb\u7edf\u5177\u6709\u5f3a\u5927\u7684\u6280\u672f\u5b9e\u529b\uff0c\u4f46\u5b83\u4eec\u7684\u91c7\u7528\u4e00\u76f4\u5177\u6709\u6311\u6218\u6027\uff0c\u5b83\u4eec\u662f\u5426\u4ee5\u53ca\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u80fd\u591f\u771f\u6b63\u6539\u5584\u533b\u7597\u4fdd\u5065\u4ecd\u6709\u5f85\u89c2\u5bdf\u3002\u4e00\u4e2a\u6838\u5fc3\u539f\u56e0\u662f\u57fa\u4e8e AI/ML \u7684\u533b\u7597\u8bbe\u5907\u7684\u6709\u6548\u6027\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5176\u7528\u6237\u7684\u884c\u4e3a\u7279\u5f81\uff0c\u4f8b\u5982\uff0c\u4ed6\u4eec\u901a\u5e38\u5bb9\u6613\u53d7\u5230\u6709\u636e\u53ef\u67e5\u7684\u504f\u89c1\u6216\u7b97\u6cd5\u538c\u6076\u7684\u5f71\u54cd\uff08[2][2] \uff09\u3002\u8bb8\u591a\u5229\u76ca\u76f8\u5173\u8005\u8d8a\u6765\u8d8a\u591a\u5730\u5c06\u9884\u6d4b\u7b97\u6cd5\u7684\u6240\u8c13\u9ed1\u76d2\u6027\u8d28\u786e\u5b9a\u4e3a\u7528\u6237\u6000\u7591\u3001\u7f3a\u4e4f\u4fe1\u4efb\u548c\u7f13\u6162\u5438\u6536\u7684\u6838\u5fc3\u6765\u6e90\uff08[3][3]\uff0c[4][4]\uff09\u3002\u56e0\u6b64\uff0c\u7acb\u6cd5\u8005\u4e00\u76f4\u5728\u671d\u7740\u8981\u6c42\u5bf9\u9ed1\u76d2\u7b97\u6cd5\u51b3\u7b56\u63d0\u4f9b\u89e3\u91ca\u7684\u65b9\u5411\u53d1\u5c55\uff08[5][5]\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b66\u672f\u754c\u3001\u653f\u5e9c\u548c\u6c11\u95f4\u793e\u4f1a\u56e2\u4f53\u6b63\u5728\u5f62\u6210\u652f\u6301\u53ef\u89e3\u91ca\u7684 AI/ML \u7684\u8fd1\u4e4e\u5171\u8bc6\u3002\u8bb8\u591a\u4eba\u88ab\u8fd9\u79cd\u65b9\u6cd5\u6240\u5438\u5f15\uff0c\u4ee5\u5229\u7528\u4e0d\u53ef\u89e3\u91ca\u7684 AI/ML \u7684\u51c6\u786e\u6027\u4f18\u52bf\uff0c\u4f8b\u5982\u6df1\u5ea6\u5b66\u4e60\u6216\u795e\u7ecf\u7f51\u7edc\uff0c\u540c\u65f6\u8fd8\u652f\u6301\u900f\u660e\u5ea6\u3001\u4fe1\u4efb\u548c\u91c7\u7528\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u5171\u8bc6\uff0c\u81f3\u5c11\u9002\u7528\u4e8e\u533b\u7597\u4fdd\u5065\uff0c\u65e2\u5938\u5927\u4e86\u8981\u6c42\u9ed1\u76d2\u7b97\u6cd5\u53ef\u89e3\u91ca\u7684\u597d\u5904\uff0c\u53c8\u4f4e\u4f30\u4e86\u7f3a\u70b9\u3002\u9996\u5148\u533a\u5206\u53ef\u89e3\u91ca\u548c\u53ef\u89e3\u91ca\u7684 AI/ML \u5f88\u91cd\u8981\u3002\u8fd9\u662f\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u4e0d\u900f\u660e\u95ee\u9898\u2014\u2014\u4ece\u9ed1\u5323\u5b50\u751f\u6210\u7684 AI \u9884\u6d4b\u4f1a\u7834\u574f AI \u7684\u4fe1\u4efb\u3001\u95ee\u8d23\u5236\u548c\u5e94\u7528\u3002\u5178\u578b\u7684 AI/ML \u4efb\u52a1\u9700\u8981\u6784\u5efa\u4e00\u79cd\u7b97\u6cd5\u8f93\u5165\u5411\u91cf\uff08\u4f8b\u5982\u533b\u5b66\u56fe\u50cf\u7684\u50cf\u7d20\u503c\uff09\u5e76\u751f\u6210\u4e0e\u75be\u75c5\u53d1\u751f\uff08\u4f8b\u5982\u764c\u75c7\u8bca\u65ad\uff09\u76f8\u5173\u7684\u8f93\u51fa\u3002\u8be5\u7b97\u6cd5\u5728\u5177\u6709\u5df2\u77e5\u6807\u7b7e\u7684\u8fc7\u53bb\u6570\u636e\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u8f93\u5165\u4e0e\u8f93\u51fa\u76f8\u5173\u7684\u6570\u5b66\u51fd\u6570\u7684\u53c2\u6570\u662f\u4ece\u8be5\u6570\u636e\u4e2d\u4f30\u8ba1\u51fa\u6765\u7684\u3002\u5f53\u6211\u4eec\u5c06\u7b97\u6cd5\u79f0\u4e3a\u201c\u9ed1\u5323\u5b50\u201d\u65f6\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\uff0c\u5c06\u8f93\u5165\u4e0e\u8f93\u51fa\u76f8\u5173\u8054\u7684\u4f30\u8ba1\u51fd\u6570\u5728\u666e\u901a\u4eba\u7684\u6c34\u5e73\u4e0a\u662f\u65e0\u6cd5\u7406\u89e3\u7684\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u4f9d\u8d56\u4e8e\u5927\u91cf\u53c2\u6570\u3001\u590d\u6742\u7684\u7ec4\u5408\u53c2\u6570\uff0c\u6216\u53c2\u6570\u7684\u975e\u7ebf\u6027\u53d8\u6362\u3002\u53ef\u89e3\u91ca\u7684 AI/ML\uff08\u8fd9\u4e0d\u662f\u6211\u4eec\u4e3b\u8981\u6279\u8bc4\u7684\u4e3b\u9898\uff09\u5927\u81f4\u5982\u4e0b\uff1a\u5b83\u4f7f\u7528\u900f\u660e\uff08\u201c\u767d\u76d2\u201d\uff09\u800c\u4e0d\u662f\u4f7f\u7528\u9ed1\u76d2\u51fd\u6570\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u5f62\u5f0f\u7684\u51fd\u6570\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u5176\u53c2\u6570\u5bf9\u5e94\u4e8e\u4e0e\u8f93\u5165\u7279\u5f81\u548c\u8f93\u51fa\u76f8\u5173\u7684\u9644\u52a0\u6743\u91cd\uff0c\u6216\u8005\u4e00\u4e2a\u5206\u7c7b\u6811\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u76f4\u89c2\u7684\u57fa\u4e8e\u89c4\u5219\u7684\u51b3\u7b56\u7a7a\u95f4\u56fe\u3002\u8fd9\u79cd\u7b97\u6cd5\u88ab\u63cf\u8ff0\u4e3a\u53ef\u7406\u89e3\u7684\uff08[6][6]\uff09\u548c\u53ef\u5206\u89e3\u7684\uff08[7][7]\uff09\u3002\u53ef\u89e3\u91ca\u7684\u7b97\u6cd5\u53ef\u80fd\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u80fd\u7acb\u5373\u7406\u89e3\u7684\uff08\u4f8b\u5982\uff0c\u5373\u4f7f\u662f\u56de\u5f52\u4e5f\u9700\u8981\u4e00\u4e9b\u7ebf\u6027\u5173\u7cfb\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u88ab\u8bef\u89e3\uff09\u3002\u7136\u800c\uff0c\u53ef\u89e3\u91ca\u7684 AI/ML \u7b97\u6cd5\u7684\u4e3b\u8981\u5356\u70b9\u662f\u5b83\u4eec\u662f\u5f00\u653e\u7684\u3001\u900f\u660e\u7684\uff0c\u5e76\u4e14\u80fd\u591f\u901a\u8fc7\u5408\u7406\u7684\u52aa\u529b\u88ab\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u4e00\u4e9b\u5b66\u8005\u8ba4\u4e3a\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u53ea\u5e94\u4f7f\u7528\u53ef\u89e3\u91ca\u7684\u7b97\u6cd5\uff0c\u5c24\u5176\u662f\u5f53\u653f\u5e9c\u4f7f\u7528\u5b83\u4eec\u6765\u5206\u914d\u8d1f\u62c5\u548c\u6536\u76ca\u65f6\uff08[8][8]\uff09\u3002\u7136\u800c\uff0c\u8981\u6c42\u53ef\u89e3\u91ca\u6027\u5c06\u5bf9 ML \u4ea7\u751f\u91cd\u8981\u7684\u53d8\u5316\uff0c\u6b63\u5982\u4eca\u5929\u6240\u505a\u7684\u90a3\u6837\u2014\u2014\u672c\u8d28\u4e0a\uff0c\u6211\u4eec\u5b8c\u5168\u653e\u5f03\u4e86\u6df1\u5ea6\u5b66\u4e60\u53ca\u5176\u53ef\u80fd\u5e26\u6765\u7684\u4efb\u4f55\u597d\u5904\u3002\u53ef\u89e3\u91ca\u7684 AI/ML \u662f\u975e\u5e38\u4e0d\u540c\u7684\uff0c\u5c3d\u7ba1\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7ecf\u5e38\u88ab\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u53ef\u89e3\u91ca\u7684 AI/ML\uff0c\u6b63\u5982\u901a\u5e38\u4f7f\u7528\u7684\u672f\u8bed\uff0c\u5927\u81f4\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7528\u4e8e\u8fdb\u884c\u9884\u6d4b\u6216\u8bca\u65ad\u7684\u9ed1\u76d2\u6a21\u578b\uff0c\u7b2c\u4e8c\u4e2a\u89e3\u91ca\u6027\u7b97\u6cd5\u627e\u5230\u4e00\u4e2a\u53ef\u89e3\u91ca\u7684\u51fd\u6570\uff0c\u5b83\u975e\u5e38\u63a5\u8fd1\u9ed1\u76d2\u7684\u8f93\u51fa\u3002\u7b2c\u4e8c\u79cd\u7b97\u6cd5\u662f\u901a\u8fc7\u62df\u5408\u9ed1\u76d2\u7684\u9884\u6d4b\u800c\u4e0d\u662f\u539f\u59cb\u6570\u636e\u6765\u8bad\u7ec3\u7684\uff0c\u5b83\u901a\u5e38\u7528\u4e8e\u4e3a\u9ed1\u76d2\u8f93\u51fa\u5f00\u53d1\u4e8b\u540e\u89e3\u91ca\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u5b9e\u9645\u9884\u6d4b\uff0c\u56e0\u4e3a\u5b83\u901a\u5e38\u4e0d\u5982\u9ed1\u5323\u5b50\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u6839\u636e\u9ed1\u76d2\u7b97\u6cd5\u4e2d\u8f93\u5165\u6570\u636e\u7684\u54ea\u4e9b\u5c5e\u6027\u5bf9\u7279\u5b9a\u9884\u6d4b\u6700\u91cd\u8981\u6765\u7ed9\u51fa\u89e3\u91ca\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u63d0\u4f9b\u6613\u4e8e\u7406\u89e3\u7684\u7ebf\u6027\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u7ed9\u51fa\u4e0e\u9ed1\u76d2\u7b97\u6cd5\u76f8\u4f3c\u7684\u8f93\u51fa-box \u7b97\u6cd5\u7528\u4e8e\u76f8\u540c\u7684\u7ed9\u5b9a\u8f93\u5165 ([ 4 ][4])\u3002\u5176\u4ed6\u6a21\u578b\uff0c\u4f8b\u5982\u6240\u8c13\u7684\u53cd\u4e8b\u5b9e\u89e3\u91ca\u6216\u70ed\u56fe\uff0c\u4e5f\u662f\u53ef\u80fd\u7684\uff08[9][9]\uff0c[10][10]\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u89e3\u91ca\u7684 AI/ML \u901a\u5e38\u4f1a\u627e\u5230\u4e00\u4e2a\u90e8\u5206\u6a21\u4eff\u9ed1\u76d2\u884c\u4e3a\u7684\u767d\u76d2\uff0c\u7136\u540e\u5c06\u5176\u7528\u4f5c\u9ed1\u76d2\u9884\u6d4b\u7684\u89e3\u91ca\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e09\u70b9\u5f88\u91cd\u8981\uff1a\u7b2c\u4e00\uff0c\u4e0d\u900f\u660e\u51fd\u6570\u9ed1\u5323\u5b50\u4ecd\u7136\u662f AI/ML \u51b3\u7b56\u7684\u57fa\u7840\uff0c\u56e0\u4e3a\u5b83\u901a\u5e38\u662f\u6700\u51c6\u786e\u7684\u3002\u5176\u6b21\uff0c\u767d\u76d2\u5bf9\u9ed1\u76d2\u7684\u8fd1\u4f3c\u4e0d\u53ef\u80fd\u662f\u5b8c\u7f8e\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4e24\u8005\u4e4b\u95f4\u5c31\u6ca1\u6709\u533a\u522b\u4e86\u3002\u5b83\u4e5f\u4e0d\u662f\u4e13\u6ce8\u4e8e\u51c6\u786e\u6027\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u62df\u5408\u9ed1\u5323\u5b50\uff0c\u901a\u5e38\u53ea\u5728\u5c40\u90e8\u3002\u6700\u540e\uff0c\u63d0\u4f9b\u7684\u89e3\u91ca\u662f\u4e8b\u540e\u7684\u3002\u8fd9\u4e0e\u53ef\u89e3\u91ca\u7684 AI/ML \u4e0d\u540c\uff0c\u540e\u8005\u4f7f\u7528\u8d1f\u8d23\u751f\u6210\u8f93\u51fa\u7684\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u7ed9\u51fa\u89e3\u91ca\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6240\u6709\u8f93\u5165\u90fd\u662f\u4e8b\u5148\u5df2\u77e5\u548c\u56fa\u5b9a\u7684\u3002\u5f88\u5927\u4e00\u90e8\u5206\u57fa\u4e8e AI/ML \u7684\u533b\u7597\u8bbe\u5907\u5177\u6709\u8fd9\u6837\u7684\u529f\u80fd\u8fc4\u4eca\u4e3a\u6b62\uff0c\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40 (FDA) \u5df2\u6279\u51c6\u6216\u6279\u51c6\u4f7f\u7528\u4e0d\u53ef\u89e3\u91ca\u7684\u9ed1\u76d2\u6a21\u578b\uff0c\u4f8b\u5982\u6df1\u5ea6\u5b66\u4e60 ([1][1])\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u9ed1\u76d2\u6a21\u578b\u88ab\u8ba4\u4e3a\u5728\u8bb8\u591a\u533b\u7597\u4fdd\u5065\u5e94\u7528\u4e2d\u8868\u73b0\u66f4\u597d\uff0c\u8fd9\u4e9b\u5e94\u7528\u901a\u5e38\u5177\u6709\u5927\u91cf\u9ad8\u7ef4\uff0c\u4f8b\u5982\u56fe\u50cf\u8bc6\u522b\u6216\u57fa\u56e0\u9884\u6d4b\u3002\u4e0d\u7ba1\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u76ee\u524d\u8981\u6c42\u5bf9\u533b\u7597\u4fdd\u5065\u4e2d\u7684\u9ed1\u76d2 AI/ML \u7cfb\u7edf\u8fdb\u884c\u89e3\u91ca\u9700\u8981\u4f7f\u7528\u4e8b\u540e\u53ef\u89e3\u91ca\u7684 AI/ML \u6a21\u578b\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u6b64\u8b66\u544a\u4e0d\u8981\u4f7f\u7528\u7684\u3002 \u53ef\u89e3\u91ca\u7b97\u6cd5\u662f\u4e00\u4e2a\u76f8\u5bf9\u8f83\u65b0\u7684\u7814\u7a76\u9886\u57df\uff0c\u79d1\u6280\u516c\u53f8\u548c\u7814\u7a76\u4eba\u5458\u7684\u5927\u90e8\u5206\u6ce8\u610f\u529b\u90fd\u653e\u5728\u7b97\u6cd5\u672c\u8eab\u7684\u5f00\u53d1\u4e0a\u2014\u2014\u5de5\u7a0b\u2014\u2014\u800c\u4e0d\u662f\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u7684\u4eba\u4e3a\u56e0\u7d20\u3002\u53ef\u89e3\u91ca\u7684 AI/ML \u7684\u4e3b\u8981\u8bba\u70b9\u662f\u5b83\u6709\u52a9\u4e8e\u7528\u6237\u7406\u89e3\u3001\u5efa\u7acb\u4fe1\u4efb\u5e76\u652f\u6301\u95ee\u8d23\u5236\uff08[3][3]\u3001[4][4]\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d\u53ef\u89e3\u91ca\u7684 AI/ML \u7b97\u6cd5\u4e0d\u592a\u53ef\u80fd\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u2014\u2014\u81f3\u5c11\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u2014\u2014\u6709\u51e0\u4e2a\u539f\u56e0\u3002### Ersatz \u7406\u89e3\u53ef\u89e3\u91ca\u7684 AI/ML\uff08\u4e0e\u53ef\u89e3\u91ca\u7684 AI/ML \u4e0d\u540c\uff09\u63d0\u4f9b\u4e86\u4e8b\u540e\u7b97\u6cd5\u751f\u6210\u7684\u9ed1\u76d2\u539f\u7406\u9884\u6d4b\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u8fd9\u4e9b\u9884\u6d4b\u80cc\u540e\u7684\u5b9e\u9645\u539f\u56e0\u6216\u4e0e\u5b83\u4eec\u6709\u56e0\u679c\u5173\u7cfb\u3002\u56e0\u6b64\uff0c\u53ef\u89e3\u91ca\u6027\u7684\u660e\u663e\u4f18\u52bf\u662f\u201c\u50bb\u74dc\u7684\u9ec4\u91d1\u201d\uff0c\u56e0\u4e3a\u9ed1\u5323\u5b50\u7684\u4e8b\u540e\u5408\u7406\u5316\u4e0d\u592a\u53ef\u80fd\u6709\u52a9\u4e8e\u6211\u4eec\u5bf9\u5176\u5185\u90e8\u8fd0\u4f5c\u7684\u7406\u89e3\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u7559\u4e0b\u6211\u4eec\u66f4\u4e86\u89e3\u5b83\u7684\u9519\u8bef\u5370\u8c61\u3002\u6211\u4eec\u5c06\u6765\u81ea\u4e8b\u540e\u5408\u7406\u5316\u7684\u7406\u89e3\u79f0\u4e3a\u201c\u66ff\u4ee3\u7406\u89e3\u201d\u3002\u4e0e\u53ef\u4ee5\u4e8b\u5148\u786e\u8ba4 AI/ML \u7ed3\u679c\u7684\u89e3\u91ca\u8d28\u91cf\u7684\u53ef\u89e3\u91ca AI/ML \u4e0d\u540c\uff0c\u53ef\u89e3\u91ca AI/ML \u6ca1\u6709\u8fd9\u6837\u7684\u4fdd\u8bc1\u3002\u4e0d\u53ef\u80fd\u4e8b\u5148\u786e\u4fdd\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u8f93\u5165\uff0c\u76f8\u5173\u8f93\u51fa\u7684\u7528\u6237\u53ef\u4ee5\u7406\u89e3\u7531\u53ef\u89e3\u91ca\u7684 AI/ML \u7b97\u6cd5\u751f\u6210\u7684\u89e3\u91ca\u3002\u901a\u8fc7\u4e0d\u63d0\u4f9b\u6253\u5f00\u9ed1\u5323\u5b50\u7684\u7406\u89e3\uff0c\u6216\u63ed\u793a\u5176\u5185\u90e8\u8fd0\u4f5c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u63d0\u9ad8\u4fe1\u4efb\u5ea6\u548c\u6d88\u9664\u4efb\u4f55\u6f5c\u5728\u7684\u9053\u5fb7\u3001\u4f26\u7406\u6216\u6cd5\u5f8b\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u66ff\u4ee3\u7406\u89e3\u7684\u95ee\u9898\u53ef\u80fd\u4e0d\u662f\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u80fd\u4f1a\u53d1\u73b0\u901a\u8fc7\u9ed1\u76d2\u7b97\u6cd5\u7684\u8bb8\u591a\u4e0d\u540c\u8fd1\u4f3c\u6765\u751f\u6210\u53ef\u6d4b\u8bd5\u7684\u5047\u8bbe\u6709\u52a9\u4e8e\u63a8\u8fdb\u7814\u7a76\u6216\u6539\u8fdb AI/ML \u7cfb\u7edf\u3002\u4f46\u8fd9\u4e0e\u76d1\u7ba1\u673a\u6784\u8981\u6c42\u57fa\u4e8e AI/ML \u7684\u533b\u7597\u8bbe\u5907\u7684\u53ef\u89e3\u91ca\u6027\u4f5c\u4e3a\u5176\u8425\u9500\u6388\u6743\u7684\u524d\u63d0\u6761\u4ef6\u622a\u7136\u4e0d\u540c\u3002### \u7f3a\u4e4f\u7a33\u5065\u6027\u5bf9\u4e8e\u53ef\u4fe1\u4efb\u7684\u53ef\u89e3\u91ca\u7b97\u6cd5\uff0c\u5b83\u9700\u8981\u8868\u73b0\u51fa\u4e00\u5b9a\u7684\u7a33\u5065\u6027\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\u53ef\u89e3\u91ca\u6027\u7b97\u6cd5\u901a\u5e38\u5e94\u8be5\u4e3a\u76f8\u4f3c\u7684\u8f93\u5165\u751f\u6210\u76f8\u4f3c\u7684\u89e3\u91ca\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u975e\u5e38\u5c0f\u7684\u53d8\u5316\uff08\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u7684\u51e0\u4e2a\u50cf\u7d20\u4e2d\uff09\uff0c\u8fd1\u4f3c\u53ef\u89e3\u91ca\u7684 AI/ML \u7b97\u6cd5\u53ef\u80fd\u4f1a\u4ea7\u751f\u975e\u5e38\u4e0d\u540c\u4e14\u53ef\u80fd\u76f8\u4e92\u7ade\u4e89\u7684\u89e3\u91ca\uff0c\u5373\u4f7f\u4e13\u5bb6\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u8bc1\u660e\u6216\u7406\u89e3\u8fd9\u79cd\u5dee\u5f02.\u4f7f\u7528\u8fd9\u79cd\u57fa\u4e8e AI/ML \u7684\u533b\u7597\u8bbe\u5907\u7684\u533b\u751f\u81ea\u7136\u4f1a\u8d28\u7591\u8be5\u7b97\u6cd5\u3002### \u4e0e\u95ee\u8d23\u5236\u7684\u5fae\u5f31\u8054\u7cfb\u4eba\u4eec\u7ecf\u5e38\u8ba4\u4e3a\u53ef\u89e3\u91ca\u7684 AI/ML \u652f\u6301\u7b97\u6cd5\u95ee\u8d23\u5236\u3002\u5982\u679c\u7cfb\u7edf\u72af\u4e86\u9519\u8bef\uff0c\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u8ffd\u6eaf\u6211\u4eec\u7684\u6b65\u9aa4\u5e76\u63cf\u8ff0\u5bfc\u81f4\u9519\u8bef\u7684\u539f\u56e0\u548c\u8d23\u4efb\u4eba\u4f1a\u66f4\u5bb9\u6613\u3002\u867d\u7136\u8fd9\u901a\u5e38\u9002\u7528\u4e8e\u8bbe\u8ba1\u900f\u660e\u7684\u53ef\u89e3\u91ca AI/ML \u7cfb\u7edf\uff0c\u4f46\u5bf9\u4e8e\u53ef\u89e3\u91ca AI/ML \u7cfb\u7edf\u5374\u5e76\u975e\u5982\u6b64\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u89e3\u91ca\u662f\u4e8b\u540e\u7684\u57fa\u672c\u539f\u7406\uff0c\u53ea\u80fd\u4e0d\u5b8c\u7f8e\u5730\u8fd1\u4f3c\u9a71\u52a8\u51b3\u7b56\u7684\u5b9e\u9645\u529f\u80fd\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u53ef\u89e3\u91ca\u7684 AI/ML \u7cfb\u7edf\u53ef\u4ee5\u7528\u6765\u6df7\u6dc6\u6211\u4eec\u5bf9\u9519\u8bef\u7684\u8c03\u67e5\uff0c\u800c\u4e0d\u662f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5176\u6765\u6e90\u3002\u7531\u4e8e\u73b0\u4ee3 AI/ML \u7cfb\u7edf\u4f9d\u8d56\u4e8e\u591a\u4e2a\u7ec4\u4ef6\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u672c\u8eab\u53ef\u80fd\u90fd\u662f\u4e00\u4e2a\u9ed1\u5323\u5b50\uff0c\u56e0\u6b64\u9700\u8981\u4e8b\u5b9e\u53d1\u73b0\u8005\u6216\u8c03\u67e5\u5458\u8bc6\u522b\uff0c\u7136\u540e\u7ed3\u5408\uff0c\u8fdb\u4e00\u6b65\u524a\u5f31\u4e86\u53ef\u89e3\u91ca\u6027\u548c\u95ee\u8d23\u5236\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e00\u7cfb\u5217\u90e8\u5206\u4e8b\u540e\u89e3\u91ca\u3002\u56e0\u6b64\uff0c\u5c06\u53ef\u89e3\u91ca\u6027\u4e0e\u95ee\u8d23\u5236\u8054\u7cfb\u8d77\u6765\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u662f\u4e00\u79cd\u7ea2\u9cb1\u9c7c\u3002 \u53ef\u89e3\u91ca\u7684 AI/ML \u7cfb\u7edf\u4e0d\u4ec5\u4e0d\u592a\u53ef\u80fd\u4ea7\u751f\u901a\u5e38\u5439\u6367\u7684\u597d\u5904\uff0c\u800c\u4e14\u8fd8\u4f1a\u5e26\u6765\u989d\u5916\u7684\u6210\u672c\uff08\u4e0e\u53ef\u89e3\u91ca\u7cfb\u7edf\u6216\u4f7f\u7528\u9ed1\u76d2\u6a21\u578b\u76f8\u6bd4\uff09\u5355\u72ec\u800c\u4e0d\u8bd5\u56fe\u5408\u7406\u5316\u4ed6\u4eec\u7684\u8f93\u51fa\uff09\u3002### \u5728\u4e0d\u5b8c\u7f8e\u7684\u7528\u6237\u624b\u4e2d\u8bef\u5bfc\u5373\u4f7f\u89e3\u91ca\u770b\u8d77\u6765\u53ef\u4fe1\uff0c\u6216\u8005\u51e0\u4e4e\u53ef\u4fe1\uff0c\u5f53\u7ed3\u5408\u4e0d\u5b8c\u5168\u7406\u6027\u7528\u6237\u7684\u5148\u9a8c\u4fe1\u5ff5\u65f6\uff0c\u5b83\u4eec\u4ecd\u7136\u53ef\u80fd\u4f7f\u7528\u6237\u8fdc\u79bb\u771f\u6b63\u7684\u7406\u89e3\u6a21\u578b\u7684\u3002\u4f8b\u5982\uff0c\u666e\u901a\u7528\u6237\u5bb9\u6613\u53d7\u5230\u53d9\u4e8b\u8c2c\u8bef\u7684\u5f71\u54cd\uff0c\u7528\u6237\u4ee5\u8bef\u5bfc\u6027\u7684\u65b9\u5f0f\u7ec4\u5408\u548c\u91cd\u6784\u89e3\u91ca\u3002\u533b\u7597\u9006\u8f6c\u7684\u60a0\u4e45\u5386\u53f2\u2014\u2014\u53d1\u73b0\u533b\u7597\u5b9e\u8df5\u5e76\u975e\u4e00\u76f4\u6709\u6548\uff0c\u8981\u4e48\u672a\u80fd\u5b9e\u73b0\u5176\u9884\u671f\u76ee\u6807\uff0c\u8981\u4e48\u5e26\u6765\u7684\u5371\u5bb3\u5927\u4e8e\u6536\u76ca\u2014\u2014\u63d0\u4f9b\u4e86\u533b\u7597\u4fdd\u5065\u4e2d\u53d9\u8ff0\u8c2c\u8bef\u98ce\u9669\u7684\u4f8b\u5b50\u3002\u76f8\u5173\u5730\uff0c\u4ee5\u770b\u4f3c\u7b80\u5355\u7684\u4e8b\u540e\u57fa\u672c\u539f\u7406\u5f62\u5f0f\u8fdb\u884c\u7684\u89e3\u91ca\u53ef\u80fd\u4f1a\u4ea7\u751f\uff08\u8fc7\u5ea6\uff09\u81ea\u4fe1\u7684\u9519\u8bef\u611f\u89c9\u3002\u7531\u4e8e\u7528\u6237\u65e0\u6cd5\u901a\u8fc7 AI/ML \u7cfb\u7edf\u7ecf\u5e38\u63d0\u4f9b\u7684\u6982\u7387\u9884\u6d4b\u8fdb\u884c\u63a8\u7406\uff08[11][11]\uff09\uff0c\u6216\u8005\u7528\u6237\u5bf9\u81ea\u52a8\u5316\u6d41\u7a0b\u7684\u8fc7\u5ea6\u5c0a\u91cd\uff08[2][2]\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8fdb\u4e00\u6b65\u52a0\u5267\u8fd9\u79cd\u60c5\u51b5\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u53d8\u5f97\u66f4\u5177\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u89e3\u91ca\u6709\u591a\u4e2a\u53d7\u4f17\uff0c\u5e76\u4e14\u5f88\u96be\u751f\u6210\u5bf9\u6240\u6709\u4eba\u90fd\u6709\u5e2e\u52a9\u7684\u89e3\u91ca\u3002### \u81f3\u5c11\u5728\u67d0\u4e9b\u4efb\u52a1\u4e2d\u8868\u73b0\u4e0d\u4f73\u5982\u679c\u76d1\u7ba1\u673a\u6784\u51b3\u5b9a\u552f\u4e00\u53ef\u4ee5\u4e0a\u5e02\u7684\u7b97\u6cd5\u662f\u90a3\u4e9b\u5176\u9884\u6d4b\u53ef\u4ee5\u4ee5\u5408\u7406\u7684\u4fdd\u771f\u5ea6\u8fdb\u884c\u89e3\u91ca\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u9650\u5236\u5728 AI/ML \u7b97\u6cd5\u7684\u67d0\u4e2a\u5b50\u96c6\u4e0a\u3002\u4f8b\u5982\uff0c\u5728\u8fd9\u6837\u7684\u5236\u5ea6\u4e0b\uff0c\u5728\u6570\u636e\u7a7a\u95f4\u7684\u8db3\u591f\u5927\u7684\u533a\u57df\u4e2d\u96be\u4ee5\u8fd1\u4f3c\u7684\u9ad8\u5ea6\u975e\u7ebf\u6027\u6a21\u578b\u53ef\u80fd\u56e0\u6b64\u88ab\u7981\u6b62\u3002\u5728\u590d\u6742\u6a21\u578b\uff08\u5982\u6df1\u5ea6\u5b66\u4e60\u6216\u96c6\u6210\u65b9\u6cd5\uff09\u7684\u8868\u73b0\u5e76\u4e0d\u7279\u522b\u4f18\u4e8e\u5176\u7b80\u5355\u6a21\u578b\uff08\u5177\u6709\u7ed3\u6784\u5408\u7406\u7684\u6570\u636e\u548c\u6709\u610f\u4e49\u7684\u7279\u5f81\uff0c\u4f8b\u5982\u57fa\u4e8e\u76f8\u5bf9\u8f83\u5c11\u7684\u60a3\u8005\u533b\u7597\u8bb0\u5f55\u7684\u9884\u6d4b\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u5f88\u597d\uff08[8][ 8]\uff09\u3002\u4f46\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u5c24\u5176\u662f\u5728\u5177\u6709\u5927\u91cf\u9ad8\u7ef4\u7684\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\u56fe\u50cf\u8bc6\u522b\u6216\u57fa\u56e0\u5e8f\u5217\u5206\u6790\uff09\uff0c\u5c06\u81ea\u5df1\u9650\u5236\u5728\u53ef\u4ee5\u5145\u5206\u89e3\u91ca\u7684\u7b97\u6cd5\u4e0a\u53ef\u80fd\u4f1a\u8fc7\u5ea6\u9650\u5236\u6a21\u578b\u590d\u6742\u6027\u5e76\u7834\u574f\u51c6\u786e\u6027\u3002 \u5982\u679c\u53ef\u89e3\u91ca\u6027\u4e0d\u5e94\u8be5\u6210\u4e3a AI \u7684\u4e25\u683c\u8981\u6c42/ML \u533b\u7597\u4fdd\u5065\uff0c\u7136\u540e\u5462\uff1f\u50cf FDA \u8fd9\u6837\u7684\u76d1\u7ba1\u673a\u6784\u5e94\u8be5\u5173\u6ce8 AI/ML \u7cfb\u7edf\u7684\u90a3\u4e9b\u76f4\u63a5\u5173\u7cfb\u5230\u5176\u5b89\u5168\u6027\u548c\u6709\u6548\u6027\u7684\u65b9\u9762\u2014\u2014\u7279\u522b\u662f\u5b83\u5728\u5176\u76ee\u6807\u7528\u6237\u624b\u4e2d\u7684\u8868\u73b0\u5982\u4f55\uff1f\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u76d1\u7ba1\u673a\u6784\u5e94\u66f4\u52a0\u91cd\u89c6\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u81f3\u5c11\u5bf9\u4e8e\u4e00\u4e9b\u98ce\u9669\u8f83\u9ad8\u7684\u8bbe\u5907\uff0c\u800c\u4e0d\u662f AI/ML \u7cfb\u7edf\u662f\u5426\u53ef\u4ee5\u89e3\u91ca\uff08[12][12]\uff09\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5927\u591a\u6570\u57fa\u4e8e AI/ML \u7684\u533b\u7597\u8bbe\u5907\u5df2\u901a\u8fc7 510(k) \u9014\u5f84\u83b7\u5f97 FDA \u6279\u51c6\uff0c\u53ea\u9700\u8981\u8bc1\u660e\u4e0e\u5408\u6cd5\u4e0a\u5e02\uff08\u8c13\u8bcd\uff09\u8bbe\u5907\u7684\u5b9e\u8d28\u7b49\u6548\u6027\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4efb\u4f55\u4e34\u5e8a\u8bd5\u9a8c\uff08[13] ][13]).\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u4e2a\u4eba\u4e0e\u6a21\u578b\u4ea4\u4e92\u65f6\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u989d\u5916\u7684\u7075\u6d3b\u6027\u2014\u2014\u4f8b\u5982\uff0c\u5141\u8bb8\u4ed6\u4eec\u8bf7\u6c42 AI/ML \u8f93\u51fa\u4ee5\u83b7\u53d6\u8f93\u5165\u7684\u53d8\u5316\u6216\u9644\u52a0\u6570\u636e\u3002\u8fd9\u9f13\u52b1\u4e86\u7528\u6237\u7684\u652f\u6301\u5e76\u52a0\u5f3a\u4e86\u6a21\u578b\u7684\u7a33\u5065\u6027\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e0e\u5efa\u7acb\u4fe1\u4efb\u66f4\u5bc6\u5207\u76f8\u5173\u3002\u8fd9\u662f\u63d0\u4f9b\u6d1e\u5bdf\u6a21\u578b\u5185\u90e8\u5de5\u4f5c\u7684\u4e0d\u540c\u65b9\u6cd5\u3002\u8fd9\u79cd\u4ea4\u4e92\u8fc7\u7a0b\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u5e76\u4e0d\u65b0\u9c9c\uff0c\u5b83\u4eec\u7684\u8bbe\u8ba1\u53ef\u80fd\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u79cd\u8fc7\u7a0b\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u4f7f\u7528\u8ba1\u7b97\u673a\u51b3\u7b56\u8f85\u52a9\u5de5\u5177\u5728\u598a\u5a20\u751f\u5b58\u80fd\u529b\u7684\u9650\u5236\u4e0b\u8fdb\u884c\u4ea7\u524d\u54a8\u8be2\u7684\u5171\u4eab\u51b3\u7b56\u3002\u65b0\u751f\u513f\u79d1\u533b\u751f\u548c\u51c6\u7236\u6bcd\u53ef\u80fd\u4f1a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e00\u8d77\u4f7f\u7528\u51b3\u7b56\u5e2e\u52a9\uff0c\u4ee5\u663e\u793a\u5404\u79cd\u4e0d\u786e\u5b9a\u6027\u5c06\u5982\u4f55\u5f71\u54cd\u201c\u5728\u751f\u5b58\u80fd\u529b\u6781\u9650\u4e0b\u590d\u82cf\u5a74\u513f\u7684\u98ce\u9669\uff1a\u6536\u76ca\u6bd4\u201d\uff08[14][14]\uff09\u3002\u8fd9\u53cd\u6620\u4e86\u4e00\u79cd\u73b0\u8c61\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u8bc1\u636e\u8868\u660e\uff0c\u5141\u8bb8\u4e2a\u4eba\u4e0e\u7b97\u6cd5\u4ea4\u4e92\u4f1a\u51cf\u5c11\u201c\u7b97\u6cd5\u538c\u6076\u201d\uff0c\u5e76\u4f7f\u4ed6\u4eec\u66f4\u613f\u610f\u63a5\u53d7\u7b97\u6cd5\u7684\u9884\u6d4b\uff08[2][2]\uff09\u3002###\u4ece\u533b\u7597\u4fdd\u5065\u5230\u5176\u4ed6\u8bbe\u7f6e\u6211\u4eec\u7684\u8bba\u70b9\u7279\u522b\u9488\u5bf9\u533b\u7597\u4fdd\u5065\u7684\u60c5\u51b5\u3002\u8fd9\u90e8\u5206\u662f\u56e0\u4e3a\u533b\u7597\u4fdd\u5065\u5e94\u7528\u7a0b\u5e8f\u5f80\u5f80\u4f9d\u8d56\u4e8e\u5927\u89c4\u6a21\u7684\u9ad8\u7ef4\u9884\u6d4b\u7b97\u6cd5\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u575a\u6301\u4f7f\u7528\u8db3\u591f\u7b80\u5355\u7684\u89e3\u91ca\u8fdb\u884c\u826f\u597d\u7684\u9ed1\u76d2\u8fd1\u4f3c\u7684\u80fd\u529b\uff0c\u5e76\u4e14\u4e13\u4e1a\u6c34\u5e73\u5404\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u51c6\u786e\u5ea6\u635f\u5931\u7684\u53ef\u80fd\u6027\u5c31\u7279\u522b\u5927\u3002\u6b64\u5916\uff0c\u4e0e\u8bb8\u591a\u5176\u4ed6\u90e8\u95e8\u76f8\u6bd4\uff0c\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u9519\u8bef\u5206\u7c7b\u6210\u672c\u548c\u5bf9\u60a3\u8005\u7684\u6f5c\u5728\u4f24\u5bb3\u76f8\u5bf9\u8f83\u9ad8\u3002\u6700\u540e\uff0c\u533b\u7597\u4fdd\u5065\u4f20\u7edf\u4e0a\u6709\u591a\u79cd\u65b9\u5f0f\u6765\u8bc1\u660e\u4ea7\u54c1\u6216\u8fc7\u7a0b\u7684\u53ef\u9760\u6027\uff0c\u5373\u4f7f\u6ca1\u6709\u89e3\u91ca\u3002\u8bb8\u591a FDA \u6279\u51c6\u7684\u836f\u7269\u90fd\u662f\u5982\u6b64\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u533b\u7597 AI/ML \u66f4\u50cf\u662f\u4e00\u79cd\u4fe1\u7528\u5546\u54c1\uff0c\u5176\u4f7f\u7528\u7684\u8ba4\u77e5\u4fdd\u8bc1\u662f\u5bf9\u5176\u4ed6\u4eba\u7684\u4fe1\u4efb\uff0c\u800c\u4e0d\u662f\u5bf9\u5176\u8fd0\u4f5c\u65b9\u5f0f\u7684\u7406\u89e3\u3002\u4f8b\u5982\uff0c\u8bb8\u591a\u533b\u751f\u53ef\u80fd\u5bf9\u5bfc\u81f4 FDA \u76f8\u4fe1\u67d0\u79cd\u5904\u65b9\u836f\u662f\u5b89\u5168\u6709\u6548\u7684\u6f5c\u5728\u4e34\u5e8a\u8bd5\u9a8c\u8bbe\u8ba1\u6216\u7ed3\u679c\u975e\u5e38\u65e0\u77e5\uff0c\u4f46\u4ed6\u4eec\u77e5\u9053\u5b83\u5df2\u83b7\u5f97 FDA \u6279\u51c6\u5e76\u4e14\u5176\u4ed6\u4e13\u5bb6\u5bf9\u5176\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u5ba1\u67e5\u5e76\u4f7f\u7528\u5b83\u4e3a\u4fe1\u4efb\u8be5\u836f\u7269\u63d0\u4f9b\u4e86\u5fc5\u8981\u7684\u8ba4\u77e5\u4fdd\u8bc1\u3002\u4f46\u662f\uff0c\u5c31\u5176\u4ed6\u9886\u57df\u5171\u4eab\u5176\u4e2d\u7684\u4e00\u4e9b\u7279\u5f81\u800c\u8a00\uff0c\u6211\u4eec\u7684\u8bba\u70b9\u53ef\u80fd\u4f1a\u66f4\u5e7f\u6cdb\u5730\u9002\u7528\uff0c\u5e76\u4e14\u4e5f\u53ef\u4e3a\u533b\u7597\u4fdd\u5065\u4ee5\u5916\u7684\u76d1\u7ba1\u673a\u6784\u63d0\u4f9b\u4e00\u4e9b\u7ecf\u9a8c\u6559\u8bad\u3002### \u4f55\u65f6\u9700\u8981\u53ef\u89e3\u91ca\u7684 AI/ML \u533b\u7597\u4fdd\u5065\u662f\u4e00\u4e2a\u5e7f\u9614\u7684\u9886\u57df\u3002\u8bb8\u591a AI/ML \u9884\u6d4b\u90fd\u662f\u4e3a\u4e86\u652f\u6301\u8bca\u65ad\u6216\u6cbb\u7597\u3002\u4f8b\u5982\uff0cBiofouris \u7684 RhythmAnalytics \u662f\u4e00\u79cd\u5728\u5fc3\u7535\u56fe\u4e0a\u8bad\u7ec3\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff0c\u53ef\u4ee5\u9884\u6d4b\u8d85\u8fc7 15 \u79cd\u7c7b\u578b\u7684\u5fc3\u5f8b\u5931\u5e38\uff08[15][15]\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51c6\u786e\u6027\u5f88\u91cd\u8981\uff0c\u5f53\u9ed1\u76d2\u6bd4\u767d\u76d2\u83b7\u5f97\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u65f6\uff0c\u7406\u89e3\u5c31\u4e0d\u90a3\u4e48\u91cd\u8981\u4e86\u3002\u7136\u800c\uff0c\u5176\u4ed6\u533b\u7597\u5e94\u7528\u5219\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u60f3\u8c61\u4e00\u4e2a AI/ML \u7cfb\u7edf\uff0c\u5b83\u4f7f\u7528\u5bf9\u60a3\u8005\u80be\u810f\u635f\u4f24\u7a0b\u5ea6\u7684\u9884\u6d4b\u6765\u786e\u5b9a\u8c01\u6709\u8d44\u683c\u4f7f\u7528\u6709\u9650\u6570\u91cf\u7684\u900f\u6790\u673a\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u5b58\u5728\u5bf9\u6b63\u4e49\u7684\u603b\u4f53\u5173\u6ce8\u65f6\u2014\u2014\u5373\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u516c\u5e73\u5730\u5206\u914d\u8d44\u6e90\u2014\u2014\u5173\u4e8e\u5982\u4f55\u505a\u51fa\u51b3\u7b56\u7684\u4e8b\u524d\u900f\u660e\u5ea6\u53ef\u80fd\u7279\u522b\u91cd\u8981\u6216\u76d1\u7ba1\u673a\u6784\u8981\u6c42\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u7684\u6807\u51c6\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u7b80\u5355\u5730\u4f7f\u7528\u53ef\u89e3\u91ca\u7684 AI/ML\uff0c\u5e76\u6709\u660e\u786e\u7684\u9884\u5b9a\u7a0b\u5e8f\u548c\u51b3\u7b56\u539f\u56e0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u53ef\u89e3\u91ca\u7684 AI/ML \u4e0d\u592a\u51c6\u786e\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u66f4\u613f\u610f\u727a\u7272\u4e00\u4e9b\u51c6\u786e\u6027\uff0c\u5373\u6211\u4eec\u4e3a\u7a0b\u5e8f\u516c\u5e73\u4ed8\u51fa\u7684\u4ee3\u4ef7\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u76ee\u524d\u5bf9\u533b\u7597\u4fdd\u5065\u53ef\u89e3\u91ca\u6027\u7684\u70ed\u60c5\u53ef\u80fd\u88ab\u5938\u5927\u4e86\uff1a\u5b83\u7684\u597d\u5904\u4e0d\u662f\u5b83\u4eec\u51fa\u73b0\u4e86\u4ec0\u4e48\uff0c\u5176\u7f3a\u70b9\u503c\u5f97\u5f3a\u8c03\u3002\u81f3\u5c11\u5bf9\u4e8e\u57fa\u4e8e AI/ML \u7684\u5065\u5eb7\u533b\u7597\u8bbe\u5907\u800c\u8a00\uff0c\u6700\u597d\u4e0d\u8981\u5c06\u53ef\u89e3\u91ca\u6027\u89c6\u4e3a\u4e00\u9879\u786c\u6027\u8981\u6c42\uff0c\u800c\u662f\u5173\u6ce8\u5176\u5b89\u5168\u6027\u548c\u6709\u6548\u6027\u3002\u533b\u7597\u4fdd\u5065\u4e13\u4e1a\u4eba\u5458\u5e94\u8be5\u8b66\u60d5\u5411\u4ed6\u4eec\u63d0\u4f9b\u7684\u5173\u4e8e\u9ed1\u76d2 AI/ML \u6a21\u578b\u7684\u89e3\u91ca\u3002\u533b\u7597\u4fdd\u5065\u4e13\u4e1a\u4eba\u5458\u5e94\u52aa\u529b\u5c3d\u53ef\u80fd\u66f4\u597d\u5730\u4e86\u89e3 AI/ML \u7cfb\u7edf\uff0c\u5e76\u5c31 AI/ML \u5982\u4f55\u6539\u53d8\u533b\u7597\u4fdd\u5065\u9886\u57df\u8fdb\u884c\u81ea\u6211\u6559\u80b2\uff0c\u4f46\u9700\u8981\u53ef\u89e3\u91ca\u7684 AI/ML \u5f88\u5c11\u6709\u52a9\u4e8e\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002 1\u3002 [\u21b5][16]1. S. Benjamens, 2. P. Dhunnoo, 3. B. Mesk\u00f3, NPJ Digit\u3002\u533b\u5b66\u3002 3, 118 (2020)\u3002 [OpenUrl][17][PubMed][18]2\u3002 [\u21b5][19]1. BJ Dietvorst, 2. JP Simmons, 3. C. Massey\uff0c\u7ba1\u7406\u3002\u79d1\u5b66\u3002 64, 1155 (2018)\u3002 [OpenUrl][20]3. [\u21b5][21]1\u3002 AF Markus, 2. JA Kors, 3. PR Rijnbeek, J. Biomed\u3002\u901a\u77e5\u3002 113, 103655 (2021)\u3002 [OpenUrl][22][PubMed][18]4\u3002 [\u21b5][23]1\u3002 MT Ribeiro, 2. S. Singh, 3. C. Guestrin \uff0c\u5728 KDD &#39;16: Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (ACM, 2016), pp. 1135\u20131144\u3002 5. [\u21b5][24]1\u3002 A. Bohr, 2. K. Memarzadeh<!-- --> 1. S. Gerke\uff0c2. T. Minssen\uff0c3. IG Cohen\uff0c\u533b\u7597\u4fdd\u5065\u4eba\u5de5\u667a\u80fd\uff0cA. Bohr\uff0cK. Memarzadeh\uff0cEds\u3002 \uff08\u7231\u601d\u552f\u5c14\uff0c2020 \u5e74\uff09\uff0c\u7b2c 295-336 \u9875\u3002 6. [\u21b5][25]1\u3002 Y. Lou, 2. R. Caruana, 3. J. Gehrke\uff0c\u5728 KDD &#39;12: Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (ACM, 2012)\uff0c\u7b2c 150-158 \u9875\u3002 7. [\u21b5][26]1\u3002 ZC Lipton\uff0cACM \u961f\u5217 16, 1 (2018)\u3002 [OpenUrl][27]8\u3002 [\u21b5][28]1\u3002 C. \u9c81\u4e01\uff0c\u7eb3\u7279\u3002\u9a6c\u8d6b\u3002\u82f1\u7279\u5c14\u3002 1, 206 (2019)\u3002 [OpenUrl][29]9. [\u21b5][30]1. D. Martens, 2. F. \u6559\u52a1\u957f\uff0c\u7ba1\u7406\u3002\u4fe1\u606f\u7cfb\u7edf\u3002 Q. 38, 73 (2014)\u3002 [OpenUrl][31]10\u3002 [\u21b5][32]1. S. Wachter, 2. B. Mittelstadt, 3. C. Russell, Harv. J. \u6cd5\u5f8b\u6280\u672f\u3002 31, 841 (2018)\u3002 [OpenUrl][33]11\u3002 [\u21b5][34]1. RM \u54c8\u59c6\uff0c2. SL \u53f2\u5bc6\u65af\uff0cJ. Fam\u3002\u7ec3\u4e60\u3002 47, 44 (1998)\u3002 [OpenUrl][35][PubMed][36]12\u3002 [\u21b5][37]1. S. Gerke\uff0c2. B. Babic\uff0c3. T. Evgeniou\uff0c4. IG Cohen\uff0cNPJ Digit\u3002\u533b\u5b66\u3002 3, 53 (2020)\u3002 [OpenUrl][38]13\u3002 [\u21b5][39]1. UJ Muehlematter\uff0c2. P. Daniore\uff0c3. KN Vokinger\uff0cLancet Digit\u3002\u5065\u5eb7 3, e195 (2021)\u3002 [OpenUrl][40]14\u3002 [\u21b5][41]1\u3002 U. Guillen\uff0c2. H. Kirpalani\uff0cSemin\u3002\u80ce\u513f\u65b0\u751f\u513f\u533b\u5b66\u3002 23, 25 (2018)\u3002 [OpenUrl][42][PubMed][18]15\u3002 [\u21b5][43]Biofouris, RhythmAnalytics (2020)\uff1b [www.biofouris.com/solutions/][44]\u3002\u81f4\u8c22\uff1a\u6211\u4eec\u611f\u8c22 S. Wachter \u5bf9\u672c\u624b\u7a3f\u65e9\u671f\u7248\u672c\u7684\u53cd\u9988\u3002\u6240\u6709\u4f5c\u8005\u5747\u5bf9\u8bba\u6587\u7684\u5206\u6790\u548c\u8d77\u8349\u505a\u51fa\u4e86\u540c\u7b49\u8d21\u732e\u3002 F ......", "note_en": "Artificial intelligence and machine learning (AI/ML) algorithms are increasingly developed in health care for diagnosis and treatment of a variety of medical conditions ([ 1 ][1]). However, despite the technical prowess of such systems, their adoption has been challenging, and whether and how much they will actually improve health care remains to be seen. A central reason for this is that the effectiveness of AI/ML-based medical devices depends largely on the behavioral characteristics of its users, who, for example, are often vulnerable to well-documented biases or algorithmic aversion ([ 2 ][2]). Many stakeholders increasingly identify the so-called black-box nature of predictive algorithms as the core source of users' skepticism, lack of trust, and slow uptake ([ 3 ][3], [ 4 ][4]). As a result, lawmakers have been moving in the direction of requiring the availability of explanations for black-box algorithmic decisions ([ 5 ][5]). Indeed, a near-consensus is emerging in favor of explainable AI/ML among academics, governments, and civil society groups. Many are drawn to this approach to harness the accuracy benefits of noninterpretable AI/ML such as deep learning or neural nets while also supporting transparency, trust, and adoption. We argue that this consensus, at least as applied to health care, both overstates the benefits and undercounts the drawbacks of requiring black-box algorithms to be explainable.It is important to first distinguish explainable from interpretable AI/ML. These are two very different types of algorithms with different ways of dealing with the problem of opacity\u2014that AI predictions generated from a black box undermine trust, accountability, and uptake of AI.A typical AI/ML task requires constructing an algorithm that can take a vector of inputs (for example, pixel values of a medical image) and generate an output pertaining to, say, disease occurrence (for example, cancer diagnosis). The algorithm is trained on past data with known labels, which means that the parameters of a mathematical function that relate the inputs to the output are estimated from that data. When we refer to an algorithm as a \u201cblack box,\u201d we mean that the estimated function relating inputs to outputs is not understandable at an ordinary human level (owing to, for example, the function relying on a large number of parameters, complex combinations of parameters, or nonlinear transformations of parameters).Interpretable AI/ML (which is not the subject of our main criticism) does roughly the following: Instead of using a black-box function, it uses a transparent (\u201cwhite-box\u201d) function that is in an easy-to-digest form, for example, a linear model whose parameters correspond to additive weights relating the input features and the output or a classification tree that creates an intuitive rule-based map of the decision space. Such algorithms have been described as intelligible ([ 6 ][6]) and decomposable ([ 7 ][7]). The interpretable algorithm may not be immediately understandable by everyone (even a regression requires a bit of background on linear relationships, for example, and can be misconstrued). However, the main selling point of interpretable AI/ML algorithms is that they are open, transparent, and capable of being understood with reasonable effort. Accordingly, some scholars argue that, under many conditions, only interpretable algorithms should be used, especially when they are used by governments for distributing burdens and benefits ([ 8 ][8]). However, requiring interpretability would create an important change to ML as it is being done today\u2014essentially that we forgo deep learning altogether and whatever benefits it may entail.Explainable AI/ML is very different, even though both approaches are often grouped together. Explainable AI/ML, as the term is typically used, does roughly the following: Given a black-box model that is used to make predictions or diagnoses, a second explanatory algorithm finds an interpretable function that closely approximates the outputs of the black box. This second algorithm is trained by fitting the predictions of the black box and not the original data, and it is typically used to develop the post hoc explanations for the black-box outputs and not to make actual predictions because it is typically not as accurate as the black box. The explanation might, for instance, be given in terms of which attributes of the input data in the black-box algorithm matter most to a specific prediction, or it may offer an easy-to-understand linear model that gives similar outputs as the black-box algorithm for the same given inputs ([ 4 ][4]). Other models, such as so-called counterfactual explanations or heatmaps, are also possible ([ 9 ][9], [ 10 ][10]). In other words, explainable AI/ML ordinarily finds a white box that partially mimics the behavior of the black box, which is then used as an explanation of the black-box predictions.Three points are important to note: First, the opaque function of the black box remains the basis for the AI/ML decisions, because it is typically the most accurate one. Second, the white box approximation to the black box cannot be perfect, because if it were, there would be no difference between the two. It is also not focusing on accuracy but on fitting the black box, often only locally. Finally, the explanations provided are post hoc. This is unlike interpretable AI/ML, where the explanation is given using the exact same function that is responsible for generating the output and is known and fixed ex ante for all inputs.A substantial proportion of AI/ML-based medical devices that have so far been cleared or approved by the US Food and Drug Administration (FDA) use noninterpretable black-box models, such as deep learning ([ 1 ][1]). This may be because blackbox models are deemed to perform better in many health care applications, which are often of massively high dimensionality, such as image recognition or genetic prediction. Whatever the reason, to require an explanation of black-box AI/ML systems in health care at present entails using post hoc explainable AI/ML models, and this is what we caution against here.Explainable algorithms have been a relatively recent area of research, and much of the focus of tech companies and researchers has been on the development of the algorithms themselves\u2014the engineering\u2014and not on the human factors affecting the final outcomes. The prevailing argument for explainable AI/ML is that it facilitates user understanding, builds trust, and supports accountability ([ 3 ][3], [ 4 ][4]). Unfortunately, current explainable AI/ML algorithms are unlikely to achieve these goals\u2014at least in health care\u2014for several reasons.### Ersatz understandingExplainable AI/ML (unlike interpretable AI/ML) offers post hoc algorithmically generated rationales of black-box predictions, which are not necessarily the actual reasons behind those predictions or related causally to them. Accordingly, the apparent advantage of explainability is a \u201cfool's gold\u201d because post hoc rationalizations of a black box are unlikely to contribute to our understanding of its inner workings. Instead, we are likely left with the false impression that we understand it better. We call the understanding that comes from post hoc rationalizations \u201cersatz understanding.\u201d And unlike interpretable AI/ML where one can confirm the quality of explanations of the AI/ML outcomes ex ante, there is no such guarantee for explainable AI/ML. It is not possible to ensure ex ante that for any given input the explanations generated by explainable AI/ML algorithms will be understandable by the user of the associated output. By not providing understanding in the sense of opening up the black box, or revealing its inner workings, this approach does not guarantee to improve trust and allay any underlying moral, ethical, or legal concerns.There are some circumstances where the problem of ersatz understanding may not be an issue. For example, researchers may find it helpful to generate testable hypotheses through many different approximations to a black-box algorithm to advance research or improve an AI/ML system. But this is a very different situation from regulators requiring AI/ML-based medical devices to be explainable as a precondition of their marketing authorization.### Lack of robustnessFor an explainable algorithm to be trusted, it needs to exhibit some robustness. By this, we mean that the explainability algorithm should ordinarily generate similar explanations for similar inputs. However, for a very small change in input (for example, in a few pixels of an image), an approximating explainable AI/ML algorithm might produce very different and possibly competing explanations, with such differences not being necessarily justifiable or understood even by experts. A doctor using such an AI/ML-based medical device would naturally question that algorithm.### Tenuous connection to accountabilityIt is often argued that explainable AI/ML supports algorithmic accountability. If the system makes a mistake, the thought goes, it will be easier to retrace our steps and delineate what led to the mistake and who is responsible. Although this is generally true of interpretable AI/ML systems, which are transparent by design, it is not true of explainable AI/ML systems because the explanations are post hoc rationales, which only imperfectly approximate the actual function that drove the decision. In this sense, explainable AI/ML systems can serve to obfuscate our investigation into a mistake rather than help us to understand its source. The relationship between explainability and accountability is further attenuated by the fact that modern AI/ML systems rely on multiple components, each of which may be a black box in and of itself, thereby requiring a fact finder or investigator to identify, and then combine, a sequence of partial post hoc explanations. Thus, linking explainability to accountability may prove to be a red herring.Explainable AI/ML systems not only are unlikely to produce the benefits usually touted of them but also come with additional costs (as compared with interpretable systems or with using black-box models alone without attempting to rationalize their outputs).### Misleading in the hands of imperfect usersEven when explanations seem credible, or nearly so, when combined with prior beliefs of imperfectly rational users, they may still drive the users further away from a real understanding of the model. For example, the average user is vulnerable to narrative fallacies, where users combine and reframe explanations in misleading ways. The long history of medical reversals\u2014the discovery that a medical practice did not work all along, either failing to achieve its intended goal or carrying harms that outweighed the benefits\u2014provides examples of the risks of narrative fallacy in health care. Relatedly, explanations in the form of deceptively simple post hoc rationales can engender a false sense of (over)confidence. This can be further exacerbated through users' inability to reason with probabilistic predictions, which AI/ML systems often provide ([ 11 ][11]), or the users' undue deference to automated processes ([ 2 ][2]). All of this is made more challenging because explanations have multiple audiences, and it would be difficult to generate explanations that are helpful for all of them.### Underperforming in at least some tasksIf regulators decide that the only algorithms that can be marketed are those whose predictions can be explained with reasonable fidelity, they thereby limit the system's developers to a certain subset of AI/ML algorithms. For example, highly nonlinear models that are harder to approximate in a sufficiently large region of the data space may thus be prohibited under such a regime. This will be fine in cases where complex models\u2014like deep learning or ensemble methods\u2014do not particularly outperform their simpler counterparts (characterized by fairly structured data and meaningful features, such as predictions based on relatively few patient medical records) ([ 8 ][8]). But in others, especially in cases with massively high dimensionality\u2014such as image recognition or genetic sequence analysis\u2014limiting oneself to algorithms that can be explained sufficiently well may unduly limit model complexity and undermine accuracy.If explainability should not be a strict requirement for AI/ML in health care, what then? Regulators like the FDA should focus on those aspects of the AI/ML system that directly bear on its safety and effectiveness\u2014in particular, how does it perform in the hands of its intended users? To accomplish this, regulators should place more emphasis on well-designed clinical trials, at least for some higher-risk devices, and less on whether the AI/ML system can be explained ([ 12 ][12]). So far, most AI/ML-based medical devices have been cleared by the FDA through the 510(k) pathway, requiring only that substantial equivalence to a legally marketed (predicate) device be demonstrated, without usually requiring any clinical trials ([ 13 ][13]).Another approach is to provide individuals added flexibility when they interact with a model\u2014for example, by allowing them to request AI/ML outputs for variations of inputs or with additional data. This encourages buy-in from the users and reinforces the model's robustness, which we think is more intimately tied to building trust. This is a different approach to providing insight into a model's inner workings. Such interactive processes are not new in health care, and their design may depend on the specific application. One example of such a process is the use of computer decision aids for shared decision-making for antenatal counseling at the limits of gestational viability. A neonatologist and the prospective parents might use the decision aid together in such a way to show how various uncertainties will affect the \u201crisk:benefit ratios of resuscitating an infant at the limits of viability\u201d ([ 14 ][14]). This reflects a phenomenon for which there is growing evidence\u2014that allowing individuals to interact with an algorithm reduces \u201calgorithmic aversion\u201d and makes them more willing to accept the algorithm's predictions ([ 2 ][2]).### From health care to other settingsOur argument is targeted particularly to the case of health care. This is partly because health care applications tend to rely on massively high-dimensional predictive algorithms where loss of accuracy is particularly likely if one insists on the ability of good black-box approximations with simple enough explanations, and expertise levels vary. Moreover, the costs of misclassifications and potential harm to patients are relatively higher in health care compared with many other sectors. Finally, health care traditionally has multiple ways of demonstrating the reliability of a product or process, even in the absence of explanations. This is true of many FDA-approved drugs. We might think of medical AI/ML as more like a credence good, where the epistemic warrant for its use is trust in someone else rather than an understanding of how it works. For example, many physicians may be quite ignorant of the underlying clinical trial design or results that led the FDA to believe that a certain prescription drug was safe and effective, but their knowledge that it has been FDA-approved and that other experts further scrutinize it and use it supplies the necessary epistemic warrant for trusting the drug. But insofar as other domains share some of these features, our argument may apply more broadly and hold some lessons for regulators outside health care as well.### When interpretable AI/ML is necessaryHealth care is a vast domain. Many AI/ML predictions are made to support diagnosis or treatment. For example, Biofourmis's RhythmAnalytics is a deep neural network architecture trained on electrocardiograms to predict more than 15 types of cardiac arrhythmias ([ 15 ][15]). In cases like this, accuracy matters a lot, and understanding is less important when a black box achieves higher accuracy than a white box. Other medical applications, however, are different. For example, imagine an AI/ML system that uses predictions about the extent of a patient's kidney damage to determine who will be eligible for a limited number of dialysis machines. In cases like this, when there are overarching concerns of justice\u2014 that is, concerns about how we should fairly allocate resources\u2014ex ante transparency about how the decisions are made can be particularly important or required by regulators. In such cases, the best standard would be to simply use interpretable AI/ML from the outset, with clear predetermined procedures and reasons for how decisions are taken. In such contexts, even if interpretable AI/ML is less accurate, we may prefer to trade off some accuracy, the price we pay for procedural fairness.We argue that the current enthusiasm for explainability in health care is likely overstated: Its benefits are not what they appear, and its drawbacks are worth highlighting. For health AI/ML-based medical devices at least, it may be preferable not to treat explainability as a hard and fast requirement but to focus on their safety and effectiveness. Health care professionals should be wary of explanations that are provided to them for black-box AI/ML models. Health care professionals should strive to better understand AI/ML systems to the extent possible and educate themselves about how AI/ML is transforming the health care landscape, but requiring explainable AI/ML seldom contributes to that end.1.  [\u21b5][16]1.   S. Benjamens,     2.   P. Dhunnoo,     3.   B. Mesk\u00f3        , NPJ Digit. Med. 3, 118 (2020).        [OpenUrl][17][PubMed][18]2.  [\u21b5][19]1.   B. J. Dietvorst,     2.   J. P. Simmons,     3.   C. Massey        , Manage. Sci. 64, 1155 (2018).        [OpenUrl][20]3.  [\u21b5][21]1.   A. F. Markus,     2.   J. A. Kors,     3.   P. R. Rijnbeek        , J. Biomed. Inform. 113, 103655 (2021).        [OpenUrl][22][PubMed][18]4.  [\u21b5][23]1.   M. T. Ribeiro,     2.   S. Singh,     3.   C. Guestrin        , in KDD '16: Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (ACM, 2016), pp. 1135\u20131144.        5.  [\u21b5][24]1.   A. Bohr,     2.   K. Memarzadeh            <!-- -->        1.   S. Gerke,     2.   T. Minssen,     3.   I. G. Cohen        , in Artificial Intelligence in Healthcare,  A. Bohr,  K. Memarzadeh, Eds. (Elsevier, 2020), pp. 295\u2013336.        6.  [\u21b5][25]1.   Y. Lou,     2.   R. Caruana,     3.   J. Gehrke        , in KDD '12: Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (ACM, 2012), pp. 150\u2013158.        7.  [\u21b5][26]1.   Z. C. Lipton        , ACM Queue 16, 1 (2018).        [OpenUrl][27]8.  [\u21b5][28]1.   C. Rudin        , Nat. Mach. Intell. 1, 206 (2019).        [OpenUrl][29]9.  [\u21b5][30]1.   D. Martens,     2.   F. Provost        , Manage. Inf. Syst. Q. 38, 73 (2014).        [OpenUrl][31]10. [\u21b5][32]1.   S. Wachter,     2.   B. Mittelstadt,     3.   C. Russell        , Harv. J. Law Technol. 31, 841 (2018).        [OpenUrl][33]11. [\u21b5][34]1.   R. M. Hamm,     2.   S. L. Smith        , J. Fam. Pract. 47, 44 (1998).        [OpenUrl][35][PubMed][36]12. [\u21b5][37]1.   S. Gerke,     2.   B. Babic,     3.   T. Evgeniou,     4.   I. G. Cohen        , NPJ Digit. Med. 3, 53 (2020).        [OpenUrl][38]13. [\u21b5][39]1.   U. J. Muehlematter,     2.   P. Daniore,     3.   K. N. Vokinger        , Lancet Digit. Health 3, e195 (2021).        [OpenUrl][40]14. [\u21b5][41]1.   U. Guillen,     2.   H. Kirpalani        , Semin. Fetal Neonatal Med. 23, 25 (2018).        [OpenUrl][42][PubMed][18]15. [\u21b5][43]Biofourmis, RhythmAnalytics (2020); [www.biofourmis.com/solutions/][44].        Acknowledgments: We thank S. Wachter for feedback on an earlier version of this manuscript. All authors contributed equally to the analysis and drafting of the paper. F\n......", "posttime": "2021-07-22 21:37:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,explanations,\u89e3\u91ca", "title": "\u5f53\u5fc3\u4eba\u5de5\u667a\u80fd\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u89e3\u91ca", "title_en": "Beware explanations from AI in health care", "transed": 1, "url": "https://science.sciencemag.org/content/373/6552/284", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u89e3\u91ca"]}, {"category": "", "categoryclass": "", "imagename": "89bba62b5ee23fa50630f9c4a50ab567.jpg", "infoid": 1068760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56fd\u9645\u7279\u8d66\u7ec4\u7ec7\u662f\u5e2e\u52a9\u6253\u7834\u8bb0\u8005\u548c\u56fd\u5bb6\u5143\u9996\u6210\u4e3a NSO \u653f\u5e9c\u7ea7\u95f4\u8c0d\u8f6f\u4ef6 Pegasus \u76ee\u6807\u6d88\u606f\u7684\u7ec4\u7ec7\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u53d1\u5e03\u4e86\u4e00\u4e2a\u5de5\u5177\u6765\u68c0\u67e5\u60a8\u7684\u624b\u673a\u662f\u5426\u53d7\u5230\u5f71\u54cd\u3002\u8be5\u5de5\u5177\u65c1\u8fb9\u662f\u4e00\u7ec4\u5f88\u68d2\u7684\u8bf4\u660e\uff0c\u5b83\u4eec\u5e94\u8be5\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b8c\u6210\u4e00\u4e9b\u6280\u672f\u68c0\u67e5\u8fc7\u7a0b\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u6d89\u53ca\u5c06\u624b\u673a\u5907\u4efd\u5230\u5355\u72ec\u7684\u8ba1\u7b97\u673a\u5e76\u5bf9\u8be5\u5907\u4efd\u8fd0\u884c\u68c0\u67e5\u3002\u5982\u679c\u60a8\u5728\u65b0\u95fb\u53d1\u5e03\u540e\u4e00\u76f4\u76ef\u7740\u624b\u673a\u770b\uff0c\u5e76\u4e14\u6b63\u5728\u5bfb\u627e\u4f7f\u7528 Amnesty \u5de5\u5177\u7684\u6307\u5357\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\u8be5\u5de5\u5177\u662f\u57fa\u4e8e\u547d\u4ee4\u884c\u6216\u7ec8\u7aef\u7684\uff0c\u56e0\u6b64\u8fd0\u884c\u9700\u8981\u4e00\u5b9a\u7684\u6280\u672f\u6280\u80fd\u6216\u8010\u5fc3\u3002\u6211\u4eec\u8bd5\u56fe\u6db5\u76d6\u5f88\u591a\u60a8\u5728\u6b64\u5904\u542f\u52a8\u548c\u8fd0\u884c\u6240\u9700\u7684\u77e5\u8bc6\uff0c\u4f46\u5728\u5f00\u59cb\u4e4b\u524d\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u5185\u5bb9\u3002\u7b2c\u4e8c\u4e2a\u6ce8\u610f\u4e8b\u9879\u662f Amnesty \u6b63\u5728\u8fd0\u884c\u7684\u5206\u6790\u4f3c\u4e4e\u6700\u9002\u5408 iOS \u8bbe\u5907\u3002 Amnesty \u5728\u5176\u6587\u6863\u4e2d\u8868\u793a\uff0c\u5176\u5de5\u5177\u53ef\u4ee5\u5728 Android \u624b\u673a\u5907\u4efd\u4e0a\u8fd0\u884c\u7684\u5206\u6790\u662f\u6709\u9650\u7684\uff0c\u4f46\u8be5\u5de5\u5177\u4ecd\u7136\u53ef\u4ee5\u68c0\u67e5\u6f5c\u5728\u7684\u6076\u610f SMS \u6d88\u606f\u548c APK\u3002\u540c\u6837\uff0c\u6211\u4eec\u5efa\u8bae\u9075\u5faa\u5176\u8bf4\u660e\u3002\u8981\u68c0\u67e5\u60a8\u7684 iPhone\uff0c\u6700\u7b80\u5355\u7684\u5f00\u59cb\u65b9\u6cd5\u662f\u4f7f\u7528 iTunes \u6216 Mac \u6216 PC \u4e0a\u7684 Finder \u8fdb\u884c\u52a0\u5bc6\u5907\u4efd\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u627e\u5230\u8be5\u5907\u4efd\uff0cApple \u63d0\u4f9b\u4e86\u76f8\u5173\u8bf4\u660e\u3002 Linux \u7528\u6237\u53ef\u4ee5\u6309\u7167 Amnesty \u7684\u8bf4\u660e\u4f7f\u7528 libimobiledevice \u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u5907\u4efd\u3002\u5907\u4efd\u624b\u673a\u540e\uff0c\u60a8\u9700\u8981\u4e0b\u8f7d\u5e76\u5b89\u88c5 Amnesty \u7684 mvt \u7a0b\u5e8f\uff0cAmnesty \u8fd8\u63d0\u4f9b\u4e86\u76f8\u5173\u8bf4\u660e\u3002\u5982\u679c\u60a8\u4f7f\u7528 Mac \u8fd0\u884c\u68c0\u67e5\uff0c\u5219\u9996\u5148\u9700\u8981\u5b89\u88c5 Xcode\uff08\u53ef\u4ece App Store \u4e0b\u8f7d\uff09\u548c Python3\uff0c\u7136\u540e\u624d\u80fd\u5b89\u88c5\u548c\u8fd0\u884c mvt\u3002\u83b7\u53d6 Python3 \u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u540d\u4e3a Homebrew \u7684\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u7ec8\u7aef\u5b89\u88c5\u548c\u8fd0\u884c\u3002\u5b89\u88c5\u8fd9\u4e9b\u4e4b\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fd0\u884c Amnesty \u7684 iOS \u8bf4\u660e\u4e86\u3002\u4f60\u9700\u8981\u786e\u4fdd\u4f60\u7684 iPhone \u7684\u5907\u4efd\u662f\u7528\u5bc6\u7801\u52a0\u5bc6\u7684\n\u5982\u679c\u60a8\u5728\u5c1d\u8bd5\u89e3\u5bc6\u5907\u4efd\u65f6\u9047\u5230\u95ee\u9898\uff0c\u60a8\u5e76\u4e0d\u5b64\u5355\u3002\u5f53\u6211\u8bd5\u56fe\u5c06\u5b83\u6307\u5411\u6211\u7684\u5907\u4efd\u65f6\uff0c\u8be5\u5de5\u5177\u7ed9\u4e86\u6211\u9519\u8bef\uff0c\u5b83\u4f4d\u4e8e\u9ed8\u8ba4\u6587\u4ef6\u5939\u4e2d\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u5907\u4efd\u6587\u4ef6\u5939\u4ece\u8be5\u9ed8\u8ba4\u4f4d\u7f6e\u590d\u5236\u5230\u6211\u684c\u9762\u4e0a\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u5c06 mvt \u6307\u5411\u5b83\u3002\u6211\u7684\u547d\u4ee4\u6700\u7ec8\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\uff08\u4ec5\u7528\u4e8e\u8bf4\u660e\u76ee\u7684\u3002\u8bf7\u4f7f\u7528 Amnesty \u8bf4\u660e\u4e2d\u7684\u547d\u4ee4\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u53ef\u80fd\u5df2\u66f4\u65b0\u3002\uff09\u8fd0\u884c\u5b9e\u9645\u626b\u63cf\u65f6\uff0c\u60a8\u9700\u8981\u6307\u5411\u59a5\u534f\u6307\u6807\u6587\u4ef6\uff0c\u56fd\u9645\u7279\u8d66\u7ec4\u7ec7\u4ee5\u540d\u4e3a pegasus.stix2 \u7684\u6587\u4ef6\u5f62\u5f0f\u63d0\u4f9b\u3002\u90a3\u4e9b\u521a\u5f00\u59cb\u4f7f\u7528\u7ec8\u7aef\u7684\u4eba\u53ef\u80fd\u4f1a\u5bf9\u5982\u4f55\u5b9e\u9645\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u611f\u5230\u56f0\u60d1\uff0c\u4f46\u53ea\u8981\u4f60\u77e5\u9053\u6587\u4ef6\u5728\u54ea\u91cc\uff0c\u5b83\u5c31\u76f8\u5bf9\u7b80\u5355\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u6211\u5efa\u8bae\u5c06 stix2 \u6587\u4ef6\u4e0b\u8f7d\u5230 Mac \u7684\u4e0b\u8f7d\u6587\u4ef6\u5939\u3002\u7136\u540e\uff0c\u5f53\u60a8\u5230\u8fbe\u5b9e\u9645\u8fd0\u884c check-backup \u547d\u4ee4\u7684\u6b65\u9aa4\u65f6\uff0c\u6dfb\u52a0\u5230\u9009\u9879\u90e8\u5206\u3002\u4f5c\u4e3a\u53c2\u8003\uff0c\u6211\u7684\u547d\u4ee4\u6700\u7ec8\u770b\u8d77\u6765\u50cf\u8fd9\u6837\u3002 \uff08\u540c\u6837\uff0c\u8fd9\u4ec5\u7528\u4e8e\u8bf4\u660e\u76ee\u7684\u3002\u5c1d\u8bd5\u590d\u5236\u8fd9\u4e9b\u547d\u4ee4\u5e76\u8fd0\u884c\u5b83\u4eec\u5c06\u5bfc\u81f4\u9519\u8bef\uff09\uff1a\uff08\u4f5c\u4e3a\u53c2\u8003\uff0c ~/ \u6216\u591a\u6216\u5c11\u5145\u5f53\u7528\u6237\u6587\u4ef6\u5939\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u56e0\u6b64\u60a8\u4e0d\u8981\u5fc5\u987b\u6dfb\u52a0\u8bf8\u5982 /Users/mitchell \u4e4b\u7c7b\u7684\u5185\u5bb9\u3002\uff09\u540c\u6837\uff0c\u6211\u5efa\u8bae\u60a8\u9075\u5faa Amnesty \u7684\u8bf4\u660e\u5e76\u4f7f\u7528\u5176\u547d\u4ee4\uff0c\u56e0\u4e3a\u8be5\u5de5\u5177\u603b\u662f\u6709\u53ef\u80fd\u5df2\u66f4\u65b0\u3002 Twitter \u4e0a\u7684\u5b89\u5168\u7814\u7a76\u5458 @RayRedacted \u4e5f\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4e3b\u9898\uff0c\u4ecb\u7ecd\u4e86\u60a8\u5728\u8fd0\u884c\u8be5\u5de5\u5177\u65f6\u53ef\u80fd\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002\u8c03\u67e5\u6ca1\u6709\u53d1\u73b0\u7f8e\u56fd\u624b\u673a\u88ab Pegasus \u5165\u4fb5\u7684\u8bc1\u636e\n\u6700\u540e\uff0cAmnesty \u4ec5\u63d0\u4f9b\u5728 macOS \u548c Linux \u7cfb\u7edf\u4e0a\u5b89\u88c5\u8be5\u5de5\u5177\u7684\u8bf4\u660e\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u5728 Windows \u4e0a\u8fd0\u884c\u5b83\u7684\u4eba\uff0cThe Verge \u5df2\u7ecf\u786e\u8ba4\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u548c\u4f7f\u7528 Windows Subsystem for Linux (WSL) \u5e76\u9075\u5faa Amnesty \u7684 Linux \u8bf4\u660e\u6765\u4f7f\u7528\u8be5\u5de5\u5177\u3002\u4f7f\u7528 WSL \u9700\u8981\u4e0b\u8f7d\u548c\u5b89\u88c5 Linux \u53d1\u884c\u7248\uff0c\u6bd4\u5982 Ubuntu\uff0c\u8fd9\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5b83\u53ef\u4ee5\u5728\u60a8\u7b49\u5f85\u624b\u673a\u5907\u4efd\u65f6\u5b8c\u6210\u3002\u8fd0\u884c mvt \u540e\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u8b66\u544a\u5217\u8868\uff0c\u5176\u4e2d\u5217\u51fa\u4e86\u53ef\u7591\u6587\u4ef6\u6216\u884c\u4e3a\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8b66\u544a\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u60a8\u5df2\u88ab\u611f\u67d3\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u4e00\u4e9b\u5b8c\u5168\u5149\u660e\u6b63\u5927\u7684\u91cd\u5b9a\u5411\u51fa\u73b0\u5728\u5b83\u68c0\u67e5\u6211\u7684 Safari \u5386\u53f2\u8bb0\u5f55\u7684\u90e8\u5206\uff08sheets.google.com \u91cd\u5b9a\u5411\u5230 docs.google.com\uff0creut.rs \u91cd\u5b9a\u5411\u5230 reuters.com \u7b49\uff09\u3002\u540c\u6837\uff0c\u6211\u4e5f\u9047\u5230\u4e86\u4e00\u4e9b\u9519\u8bef\uff0c\u4f46\u8fd9\u53ea\u662f\u56e0\u4e3a\u8be5\u7a0b\u5e8f\u6b63\u5728\u68c0\u67e5\u6211\u624b\u673a\u4e0a\u672a\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u56f4\u7ed5 Pegasus \u7684\u6545\u4e8b\u53ef\u80fd\u8ba9\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5bf9\u6211\u4eec\u7684\u624b\u673a\u4ea7\u751f\u4e86\u6bd4\u5e73\u65f6\u66f4\u591a\u7684\u6000\u7591\uff0c\u65e0\u8bba\u6211\u4eec\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u6c11\u65cf\u56fd\u5bb6\u7684\u76ee\u6807\u3002\u867d\u7136\u8fd0\u884c\u8be5\u5de5\u5177\u53ef\u4ee5\uff08\u5e0c\u671b\uff09\u6709\u52a9\u4e8e\u7f13\u89e3\u4e00\u4e9b\u62c5\u5fe7\uff0c\u4f46\u5bf9\u4e8e\u8bb8\u591a\u7f8e\u56fd\u4eba\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u5fc5\u8981\u7684\u9884\u9632\u63aa\u65bd\u3002\u636e\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u62a5\u9053\uff0cNSO Group \u66fe\u8868\u793a\uff0c\u5176\u8f6f\u4ef6\u4e0d\u80fd\u7528\u4e8e\u5e26\u6709\u7f8e\u56fd\u53f7\u7801\u7684\u624b\u673a\uff0c\u800c\u4e14\u8c03\u67e5\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u8bc1\u636e\u8868\u660e Pegasus \u6210\u529f\u5165\u4fb5\u4e86\u7f8e\u56fd\u624b\u673a\u3002\u867d\u7136\u5f88\u9ad8\u5174\u770b\u5230 Amnesty \u4ee5\u53ef\u9760\u7684\u6587\u6863\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u5de5\u5177\uff0c\u4f46\u5b83\u786e\u5b9e\u6709\u52a9\u4e8e\u89e3\u51b3\u56f4\u7ed5 Pegasus \u7684\u9690\u79c1\u95ee\u9898\u3002\u6b63\u5982\u6211\u4eec\u6700\u8fd1\u770b\u5230\u7684\uff0c\u653f\u5e9c\u4e0d\u9700\u8981\u9488\u5bf9\u4f60\u624b\u673a\u7684\u9ea6\u514b\u98ce\u548c\u6444\u50cf\u5934\u6765\u83b7\u53d6\u79c1\u4eba\u4fe1\u606f\u2014\u2014\u5373\u4f7f\u4f60\u7684\u624b\u673a\u6ca1\u6709 Pegasus\uff0c\u6570\u636e\u7ecf\u7eaa\u4eba\u884c\u4e1a\u4e5f\u53ef\u80fd\u4f1a\u51fa\u552e\u4f60\u7684\u4f4d\u7f6e\u5386\u53f2\u8bb0\u5f55\u3002", "note_en": "Amnesty International \u2014 part of the group that helped break the news of journalists and  heads of state being  targeted by NSO\u2019s government-grade spyware, Pegasus \u2014 has  released a tool to check if your phone has been affected. Alongside the tool is  a great set of instructions, which should help you through the somewhat technical checking process. Using the tool involves backing up your phone to a separate computer and running a check on that backup. Read on if you\u2019ve been side-eyeing your phone since the news broke and are looking for guidance on using Amnesty\u2019s tool.\n The first thing to note is the tool is command line or terminal based, so it will take either some amount of technical skill or a bit of patience to run. We try to cover a lot of what you need to know to get up and running here, but it\u2019s something to know before jumping in.\n  The second note is that the analysis Amnesty is running seems to work best for iOS devices. In its documentation, Amnesty says the analysis its tool can run on Android phone backups is limited, but the tool can still  check for potentially malicious SMS messages  and APKs. Again, we recommend  following its instructions.\n To check your iPhone, the easiest way to start is by making  an encrypted backup either  using iTunes or Finder on a Mac or PC. You\u2019ll then need to locate that backup, which  Apple provides instructions for. Linux users can follow  Amnesty\u2019s instructions on how to use the libimobiledevice command line tool to create a backup.\n After getting a backup of your phone, you\u2019ll then need to download and install Amnesty\u2019s mvt program, which Amnesty  also provides instructions for.\n If you\u2019re using a Mac to run the check, you\u2019ll first need to install both Xcode, which can be downloaded from the App Store, and Python3 before you can install and run mvt. The easiest way to obtain Python3 is using a  program called Homebrew, which can be installed and run from the Terminal. After installing these, you\u2019ll be ready to run through  Amnesty\u2019s iOS instructions.\n You\u2019ll want to make sure your iPhone\u2019s backup is encrypted with a password\n If you run into issues while trying to decrypt your backup, you\u2019re not alone. The tool was giving me errors when I tried to point it to my backup, which was in the default folder. To solve this, I copied the backup folder from that default location into a folder on my desktop and pointed mvt to it. My command ended up looking like this:\n (For illustration purposes only. Please use commands from Amnesty\u2019s instructions, as it\u2019s possible the program has been updated.)\n  When running the actual scan, you\u2019ll want to point to an Indicators of Compromise file, which  Amnesty provides in the form of a file called pegasus.stix2. Those who are brand-new to using the terminal may get tripped up on how to actually point to a file, but it\u2019s relatively simple as long as you know where the file is. For beginners, I\u2019d recommend downloading the stix2 file to your Mac\u2019s Downloads folder. Then, when you get to the step where you\u2019re actually running the check-backup command, add\n  into the option section. For reference, my command ended up looking like this. (Again, this is for illustration purposes only. Trying to copy these commands and run them will result in an error):\n  (For reference, the ~/ is more or less acting as a shortcut to your user folder, so you don\u2019t have to add in something like /Users/mitchell.)\n Again, I\u2019d recommend following along with Amnesty\u2019s instructions and using its commands, as it\u2019s always possible that the tool will have been updated. Security researcher @RayRedacted on Twitter also has  a great thread going through some of the issues you may run into while running the tool and how to deal with them.\n The investigation didn\u2019t find evidence that US phones had been breached by Pegasus\n As a final note, Amnesty only provides instructions for installing the tool on macOS and Linux systems. For those looking to run it on Windows,  The Verge has confirmed the tool can be used by  installing and using Windows Subsystem for Linux (WSL) and following Amnesty\u2019s Linux instructions. Using WSL will require downloading and installing a Linux distro, like Ubuntu, which will take some time. It can, however, be done while you wait for your phone to backup.\n After running mvt, you\u2019ll see a list of warnings that either list suspicious files or behavior. It\u2019s worth noting that a warning doesn\u2019t necessarily mean you\u2019ve been infected. For me, some redirects that were totally above board showed up in the section where it checked my Safari history (sheets.google.com redirecting to docs.google.com, reut.rs redirecting to reuters.com, etc). Likewise, I got a few errors, but only because the program was checking for apps that I don\u2019t have installed on my phone.\n The story around Pegasus has likely left many of us regarding our phones with a bit more suspicion than usual, regardless of whether we\u2019re likely to be targeted by a nation-state. While running the tool could (hopefully) help to ease some fears, it\u2019s probably not a necessary precaution for many Americans. NSO Group has said its software cannot be used on phones with US numbers,  according to  The Washington Post, and the investigation didn\u2019t find any evidence that US phones had been successfully breached by Pegasus.\n While it\u2019s nice to see that Amnesty made this tool available with solid documentation, it only really helps to address the privacy concerns around Pegasus. As we\u2019ve seen recently, it doesn\u2019t take a government targeting your phone\u2019s microphone and camera to get private information \u2014 the  data broker industry could be  selling your location history even if your phone is Pegasus-free.", "posttime": "2021-07-22 21:36:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u8f6f\u4ef6,amnesty,phone", "title": "\u4f7f\u7528 Amnesty \u7684\u5de5\u5177\u68c0\u67e5\u60a8\u7684\u624b\u673a\u662f\u5426\u6709 Pegasus \u95f4\u8c0d\u8f6f\u4ef6", "title_en": "Check your phone for Pegasus spyware using Amnesty\u2019s tool", "transed": 1, "url": "https://www.theverge.com/2021/7/21/22587234/amnesty-international-nso-pegasus-spyware-detection-tool-ios-android-guide-windows-mac", "via": "", "real_tags": ["\u624b\u673a", "\u8f6f\u4ef6", "amnesty", "phone"]}, {"category": "", "categoryclass": "", "imagename": "8805f577c7593a97efabf363d24e8c15.jpg", "infoid": 1068759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8718\u86db\u4e1d\u636e\u8bf4\u662f\u5730\u7403\u4e0a\u6700\u575a\u56fa\u3001\u6700\u575a\u97e7\u7684\u6750\u6599\u4e4b\u4e00\u3002\u73b0\u5728\uff0c\u5723\u8def\u6613\u65af\u534e\u76db\u987f\u5927\u5b66\u7684\u5de5\u7a0b\u5e08\u8bbe\u8ba1\u4e86\u6dc0\u7c89\u6837\u4e1d\u6742\u4ea4\u86cb\u767d\uff0c\u5e76\u5728\u5de5\u7a0b\u7ec6\u83cc\u4e2d\u751f\u4ea7\u3002\u7531\u6b64\u4ea7\u751f\u7684\u7ea4\u7ef4\u6bd4\u4e00\u4e9b\u5929\u7136\u8718\u86db\u4e1d\u66f4\u575a\u56fa\u3001\u66f4\u575a\u97e7\u3002\u51c6\u786e\u5730\u8bf4\uff0c\u8fd9\u79cd\u88ab\u79f0\u4e3a\u201c\u805a\u5408\u6dc0\u7c89\u6837\u86cb\u767d\u201d\u7684\u4eba\u9020\u7ea4\u7ef4\u5e76\u4e0d\u662f\u7531\u7814\u7a76\u4eba\u5458\u5728\u6280\u672f\u4e0a\u751f\u4ea7\u7684\uff0c\u800c\u662f\u7531\u9ea6\u51ef\u7ef4\u80fd\u6e90\u3001\u73af\u5883\u4e0e\u5316\u5b66\u5de5\u7a0b\u7cfb\u6559\u6388\u5f20\u798f\u4e2d\u5b9e\u9a8c\u5ba4\u57fa\u56e0\u5de5\u7a0b\u7684\u7ec6\u83cc\u751f\u4ea7\u7684\u3002\u5de5\u7a0b\u5b66\u9662\u3002\u4e4b\u524d\u66fe\u4e0e\u5f20\u5408\u4f5c\u8fc7\u3002 2018 \u5e74\uff0c\u4ed6\u7684\u5b9e\u9a8c\u5ba4\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7ec6\u83cc\uff0c\u8fd9\u79cd\u7ec6\u83cc\u4ea7\u751f\u4e86\u4e00\u79cd\u91cd\u7ec4\u8718\u86db\u4e1d\uff0c\u5176\u6240\u6709\u91cd\u8981\u673a\u68b0\u7279\u6027\u7684\u6027\u80fd\u90fd\u4e0e\u5929\u7136\u5bf9\u5e94\u7269\u76f8\u5f53\u3002 \u201c\u5728\u6211\u4eec\u4e4b\u524d\u7684\u5de5\u4f5c\u4e4b\u540e\uff0c\u6211\u60f3\u77e5\u9053\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684\u5408\u6210\u751f\u7269\u5b66\u5e73\u53f0\u521b\u9020\u51fa\u6bd4\u8718\u86db\u4e1d\u66f4\u597d\u7684\u4e1c\u897f\uff0c\u201d\u5f20\u8bf4\u3002\u7814\u7a76\u56e2\u961f\uff0c\u5176\u4e2d\u5305\u62ec\u7b2c\u4e00\u4f5c\u8005\u674e\u656c\u5c27\uff0c\u535a\u58eb\u3002\u5f20\u5b9e\u9a8c\u5ba4\u7684\u5b66\u751f\u4fee\u6539\u4e86\u8718\u86db\u4e1d\u86cb\u767d\u7684\u6c28\u57fa\u9178\u5e8f\u5217\u4ee5\u5f15\u5165\u65b0\u7684\u7279\u6027\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u8718\u86db\u4e1d\u7684\u4e00\u4e9b\u5438\u5f15\u4eba\u7684\u7279\u5f81\u3002\u4e0e\u91cd\u7ec4\u8718\u86db\u4e1d\u7ea4\u7ef4\u76f8\u5173\u7684\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u6ca1\u6709\u5bf9\u5929\u7136\u8718\u86db\u4e1d\u5e8f\u5217\u8fdb\u884c\u91cd\u5927\u4fee\u6539\u2014\u2014\u662f\u9700\u8981\u5236\u9020 \u03b2-\u7eb3\u7c73\u6676\u4f53\uff0c\u8fd9\u662f\u5929\u7136\u8718\u86db\u4e1d\u7684\u4e3b\u8981\u6210\u5206\uff0c\u6709\u52a9\u4e8e\u5176\u5f3a\u5ea6\u3002 \u201c\u8718\u86db\u5df2\u7ecf\u627e\u5230\u4e86\u5982\u4f55\u7528\u6240\u9700\u6570\u91cf\u7684\u7eb3\u7c73\u6676\u4f53\u65cb\u8f6c\u7ea4\u7ef4\uff0c\u201d\u5f20\u8bf4\u3002 \u201c\u4f46\u662f\u5f53\u4eba\u7c7b\u4f7f\u7528\u4eba\u5de5\u7eba\u7eb1\u5de5\u827a\u65f6\uff0c\u5408\u6210\u4e1d\u7ea4\u7ef4\u4e2d\u7eb3\u7c73\u6676\u4f53\u7684\u6570\u91cf\u901a\u5e38\u4f4e\u4e8e\u5176\u5929\u7136\u5bf9\u5e94\u7269\u3002\u201d\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u56e2\u961f\u901a\u8fc7\u5f15\u5165\u9ad8\u5ea6\u503e\u5411\u4e8e\u5f62\u6210 \u03b2-\u7eb3\u7c73\u6676\u4f53\u7684\u6dc0\u7c89\u6837\u5e8f\u5217\u91cd\u65b0\u8bbe\u8ba1\u4e86\u4e1d\u5e8f\u5217\u3002\u4ed6\u4eec\u4f7f\u7528\u4e09\u4e2a\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u7684\u6dc0\u7c89\u6837\u86cb\u767d\u5e8f\u5217\u4f5c\u4e3a\u4ee3\u8868\u521b\u5efa\u4e86\u4e0d\u540c\u7684\u805a\u5408\u6dc0\u7c89\u6837\u86cb\u767d\u3002\u4e0e\u8718\u86db\u4e1d\u76f8\u6bd4\uff0c\u7531\u6b64\u4ea7\u751f\u7684\u86cb\u767d\u8d28\u5177\u6709\u66f4\u5c11\u7684\u91cd\u590d\u6c28\u57fa\u9178\u5e8f\u5217\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u66f4\u5bb9\u6613\u88ab\u5de5\u7a0b\u7ec6\u83cc\u751f\u4ea7\u3002\u6700\u7ec8\uff0c\u7ec6\u83cc\u4ea7\u751f\u4e86\u4e00\u79cd\u5177\u6709 128 \u4e2a\u91cd\u590d\u5355\u5143\u7684\u6df7\u5408\u805a\u5408\u6dc0\u7c89\u6837\u86cb\u767d\u3002\u5177\u6709\u76f8\u4f3c\u91cd\u590d\u5355\u5143\u7684\u8718\u86db\u4e1d\u86cb\u767d\u7684\u91cd\u7ec4\u8868\u8fbe\u5df2\u88ab\u8bc1\u660e\u662f\u56f0\u96be\u7684\u3002\u8d8a\u957f\uff0c\u6240\u5f97\u7ea4\u7ef4\u8d8a\u5f3a\u97e7\u3002 128 \u4e2a\u91cd\u590d\u86cb\u767d\u8d28\u4ea7\u751f\u4e86\u5177\u6709\u5343\u5146\u5e15\u5f3a\u5ea6\u7684\u7ea4\u7ef4\uff08\u7528\u4e8e\u8861\u91cf\u7834\u574f\u56fa\u5b9a\u76f4\u5f84\u7ea4\u7ef4\u6240\u9700\u7684\u529b\uff09\uff0c\u6bd4\u666e\u901a\u94a2\u66f4\u575a\u56fa\u3002\u8fd9\u79cd\u7ea4\u7ef4\u7684\u97e7\u6027\uff08\u8861\u91cf\u65ad\u88c2\u7ea4\u7ef4\u9700\u8981\u591a\u5c11\u80fd\u91cf\u7684\u6307\u6807\uff09\u9ad8\u4e8e Kevlar \u548c\u6240\u6709\u4ee5\u524d\u7684\u91cd\u7ec4\u4e1d\u7ea4\u7ef4\u3002\u5b83\u7684\u5f3a\u5ea6\u548c\u97e7\u6027\u751a\u81f3\u9ad8\u4e8e\u4e00\u4e9b\u62a5\u9053\u7684\u5929\u7136\u4e1d\u7ea4\u7ef4\u3002\n\u4e0e\u80fd\u6e90\u3001\u73af\u5883\u4e0e\u5316\u5b66\u5de5\u7a0b\u7cfb\u6559\u6388 Young-Shin Jun \u548c\u5979\u7684\u535a\u58eb\u5408\u4f5c\u3002\u6731\u4e9a\u5149\u5b66\u751f\uff0c\u8be5\u56e2\u961f\u8bc1\u5b9e\u805a\u5408\u7269\u7ea4\u7ef4\u7684\u9ad8\u673a\u68b0\u6027\u80fd\u786e\u5b9e\u6765\u81ea\u03b2-\u7eb3\u7c73\u6676\u4f53\u6570\u91cf\u7684\u589e\u52a0\u3002\u8fd9\u4e9b\u65b0\u86cb\u767d\u8d28\u548c\u7531\u6b64\u4ea7\u751f\u7684\u7ea4\u7ef4\u5e76\u4e0d\u662f\u5f20\u5b9e\u9a8c\u5ba4\u9ad8\u6027\u80fd\u5408\u6210\u7ea4\u7ef4\u6545\u4e8b\u7684\u7ed3\u675f\u3002\u4ed6\u4eec\u624d\u521a\u521a\u5f00\u59cb\u3002 \u201c\u8fd9\u8868\u660e\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u751f\u7269\u5b66\u6765\u751f\u4ea7\u80fd\u591f\u51fb\u8d25\u81ea\u7136\u754c\u4e2d\u6700\u597d\u7684\u6750\u6599\u7684\u6750\u6599\uff0c\u201d\u5f20\u8bf4\u3002\u66f4\u591a\u4fe1\u606f\uff1aJingyao Li \u7b49\u4eba\uff0c\u5fae\u751f\u7269\u5408\u6210\u805a\u5408\u7269\u6dc0\u7c89\u6837\u7ea4\u7ef4\u4fc3\u8fdb \u03b2-\u7eb3\u7c73\u6676\u4f53\u5f62\u6210\u5e76\u663e\u793a Gigapascal Tensile Strength\uff0cACS Nano\uff082021 \u5e74\uff09\u3002 DOI\uff1a10.1021/acsnano.1c02944", "note_en": "Spider silk is said to be one of the strongest, toughest materials on the Earth. Now engineers at Washington University in St. Louis have designed amyloid silk hybrid proteins and produced them in engineered bacteria. The resulting fibers are stronger and tougher than some natural spider silks.     To be precise, the artificial  \u2014dubbed &#34;polymeric amyloid&#34; fiber\u2014was not technically produced by researchers, but by bacteria that were genetically engineered in the lab of Fuzhong Zhang, a professor in the Department of Energy, Environmental &amp; Chemical Engineering in the McKelvey School of Engineering.\n Zhang has worked with   before. In 2018, his lab engineered bacteria that produced a recombinant spider silk with performance on par with its natural counterparts in all of the important mechanical properties.\n &#34;After our previous work, I wondered if we could create something better than spider silk using our synthetic biology platform,&#34; Zhang said.\n The research team, which includes first author Jingyao Li, a Ph.D. student in Zhang&#39;s lab, modified the amino acid sequence of spider silk proteins to introduce new properties, while keeping some of the attractive features of spider silk.\n A problem associated with recombinant spider silk fiber\u2014without significant modification from natural spider silk sequence\u2014is the need to create \u03b2-nanocrystals, a main component of natural spider silk, which contributes to its strength. &#34;Spiders have figured out how to spin fibers with a desirable amount of nanocrystals,&#34; Zhang said. &#34;But when humans use artificial spinning processes, the amount of nanocrystals in a synthetic silk fiber is often lower than its natural counterpart.&#34;\n  To solve this problem, the team redesigned the silk sequence by introducing amyloid sequences that have high tendency to form \u03b2-nanocrystals. They created different polymeric amyloid proteins using three well-studied amyloid sequences as representatives. The resulting proteins had less repetitive amino acid sequences than spider silk, making them easier to be produced by engineered bacteria. Ultimately, the bacteria produced a hybrid polymeric amyloid protein with 128 repeating units. Recombinant expression of spider silk protein with similar repeating units has proven to be difficult.\n    The longer the  , the stronger and tougher the resulting fiber. The 128-repeat proteins resulted in a fiber with gigapascal strength (a measure of how much force is needed to break a fiber of fixed diameter), which is stronger than common steel. The fibers&#39; toughness (a measure of how much energy is needed to break a fiber) is higher than Kevlar and all previous recombinant silk fibers. Its strength and toughness are even higher than some reported natural   silk fibers.\n In collaboration with Young- Shin Jun, professor in the Department of Energy, Environmental &amp; Chemical Engineering, and her Ph.D. student Yaguang Zhu, the team confirmed that the high mechanical properties of the polymeric   fibers indeed come from the enhanced amount of \u03b2-nanocrystals.\n These new proteins and the resulting fibers are not the end of the story for high-performance synthetic fibers in the Zhang lab. They are just getting started. &#34;This demonstrates that we can engineer biology to produce materials that beat the best material in nature,&#34; Zhang said.        More information:\t\t\t\t\t\t\t\t\t\t\t\tJingyao Li et al, Microbially Synthesized Polymeric Amyloid Fiber Promotes \u03b2-Nanocrystal Formation and Displays Gigapascal Tensile Strength,  ACS Nano (2021).  DOI: 10.1021/acsnano.1c02944", "posttime": "2021-07-22 21:36:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ea7\u751f,produced,\u7ea4\u7ef4", "title": "\u5fae\u751f\u7269\u4ea7\u751f\u7684\u7ea4\u7ef4\uff1a\u6bd4\u94a2\u66f4\u5f3a\uff0c\u6bd4\u51ef\u592b\u62c9\u5c14\u66f4\u575a\u97e7", "title_en": "Microbially produced fibers: Stronger than steel, tougher than Kevlar", "transed": 1, "url": "https://phys.org/news/2021-07-microbially-fibers-stronger-steel-tougher.html", "via": "", "real_tags": ["\u4ea7\u751f", "produced", "\u7ea4\u7ef4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068757, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c0f\u888b\u548c\u5bc6\u5c01", "note_en": "Pouches and Sealing", "posttime": "2021-07-22 21:36:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f14\u594f\u8005,sensitive,\u5c0f\u888b", "title": "\u5236\u4f5c\u654f\u611f\u7684\u6f14\u594f\u8005\u94a2\u7434\u888b", "title_en": "Making sensitive player piano pouched", "transed": 1, "url": "https://www.player-care.com/pouches-and-sealing.html", "via": "", "real_tags": ["\u6f14\u594f\u8005", "sensitive", "\u5c0f\u888b"]}, {"category": "", "categoryclass": "", "imagename": "9a13800eccf7dedb9f17eba4bccdf786.jpg", "infoid": 1068756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u636e\u663e\u793a\uff0c\u6bcf\u5f53\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u5f00\u59cb\u4e0b\u8dcc\u65f6\uff0cTether \u5c31\u4f1a\u7531 Bitfinex \u53d1\u884c\u5e76\u53d1\u9001\u5230\u53e6\u5916\u4e24\u5bb6\u4ea4\u6613\u6240\uff0c\u7528\u4e8e\u8d2d\u4e70\u6bd4\u7279\u5e01\u2014\u2014\u7136\u540e\u6bd4\u7279\u5e01\u4ef7\u683c\u4f1a\u4e0a\u6da8\u3002\u8be5\u56e2\u961f\u8fdb\u884c\u4e86 10,000 \u6b21\u6a21\u62df\uff0c\u770b\u770b\u8fd9\u662f\u5426\u662f\u5076\u7136\u53d1\u751f\u3002\u6ca1\u6709\u4eba\u7ed9\u51fa\u76f8\u540c\u7684\u56de\u62a5\u3002\u8fd9\u4e9b\u7b97\u6cd5\u5c06\u4e0e\u8fd9\u4e9b\u4ef7\u683c\u4e0a\u6da8\u540c\u65f6\u53d1\u751f\u7684 Tether \u6d41\u91cf\u5f52\u56e0\u4e8e\u5355\u4e2a\u5b9e\u4f53\u3002\u6b63\u5982\u4ed6\u4eec\u5728\u8bba\u6587\u4e2d\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u201c\u8fd9\u4e2a\u5927\u73a9\u5bb6\u2026\u2026\u8981\u4e48\u8868\u73b0\u51fa\u654f\u9510\u7684\u5e02\u573a\u65f6\u673a\uff0c\u8981\u4e48\u5bf9\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u4ea7\u751f\u4e86\u6781\u5927\u7684\u5f71\u54cd\u201d\u3002\u8fd9\u4e00\u6b21\uff0c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u4e0d\u662f\u51e0\u767e\u7f8e\u5143\uff0c\u800c\u662f\u51e0\u5343\u7f8e\u5143\u3002 2017 \u5e74 12 \u6708\uff0c\u5176\u4ef7\u683c\u8fbe\u5230\u8fd1 2 \u4e07\u7f8e\u5143\uff0c\u6bd4\u7279\u5e01\u5e02\u573a\u603b\u4ef7\u503c\u8d85\u8fc7 2370 \u4ebf\u7f8e\u5143\u3002 Griffin \u76f8\u4fe1\u81f3\u5c11\u6709\u4e00\u534a\u7684\u4ef7\u683c\u4e0a\u6da8\u662f\u4f7f\u7528 Tether \u5236\u9020\u7684\u3002\u4f46\u683c\u91cc\u82ac\u8fd8\u6ce8\u610f\u5230\u6570\u636e\u4e2d\u7684\u5176\u4ed6\u5185\u5bb9\uff1a\u201c\u5728\u6708\u5e95\u4e4b\u524d\uff0c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u5927\u5e45\u4e0b\u8dcc\u201d\u3002\u8fd9\u4e9b\u5d29\u6e83\u53d1\u751f\u5728 iFinex \u9700\u8981\u5728\u5176\u94f6\u884c\u8d26\u6237\u4e2d\u5b58\u5165\u7f8e\u5143\u4ee5\u652f\u6301\u5176\u58f0\u79f0 Tether \u7531\u771f\u5b9e\u8d27\u5e01\u652f\u6301\u7684\u65f6\u5019\u3002\u770b\u8d77\u6765\u8be5\u516c\u53f8\u5728\u6bcf\u4e2a\u6708\u672b\u90fd\u5728\u51fa\u552e\u5927\u91cf\u6bd4\u7279\u5e01\u2014\u2014\u8db3\u4ee5\u538b\u4f4e\u4ef7\u683c\u2014\u2014\u4ee5\u4fbf\u5411\u5ba1\u8ba1\u5e08\u5c55\u793a\u94f6\u884c\u7684\u8d44\u91d1\u3002\u968f\u7740\u6bd4\u7279\u5e01\u88ab\u56de\u8d2d\uff0c\u6bd4\u7279\u5e01\u4f1a\u8fc5\u901f\u6062\u590d\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u663e\u773c\u7684\u65f6\u673a\uff0c\u4e0d\u80fd\u7528\u5076\u7136\u6765\u89e3\u91ca\u201d\uff0c\u683c\u91cc\u82ac\u8bf4\u3002\u683c\u91cc\u82ac\u548c\u4ed6\u7684\u540c\u4e8b\u53d1\u8868\u8bba\u6587\u540e\uff0c\u201c\u4f3c\u4e4e\u4ec0\u4e48\u4e5f\u6ca1\u53d1\u751f\u201d\uff0c\u4ed6\u8bf4\u3002\u6295\u8d44\u8005\u786e\u5b9e\u8054\u7cfb\u4e86\u4ed6\uff0c\u4f46\u4e0d\u662f\u4e3a\u4e86\u611f\u8c22\u4ed6\u66b4\u9732\u4e86\u4ed6\u4eec\u6240\u9762\u4e34\u7684\u98ce\u9669\u3002 \u201c\u52a0\u5bc6\u9886\u57df\u7684\u4eba\u4eec\u5bf9\u6211\u4eec\u7684\u8bba\u6587\u5f88\u751f\u6c14\u201d\uff0c\u4ed6\u56de\u5fc6\u9053\u3002 \u201c\u6211\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a\u2018\u4f60\u4e0d\u660e\u767d\u5417\uff1f\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u56e0\u4e3a\u5b83\u4f7f\u4ef7\u683c\u4fdd\u6301\u5728\u9ad8\u4f4d\uff01&#39;\u201dTether \u53d1\u8868\u4e86\u63aa\u8f9e\u5f3a\u786c\u7684\u53cd\u9a73\uff0c\u5176\u4e2d\u5c06 50 \u9875\u7684\u8bba\u6587\u63cf\u8ff0\u4e3a\u57fa\u4e8e\u201c\u4e0d\u5b8c\u6574\u548c\u7cbe\u5fc3\u6311\u9009\u7684\u6570\u636e\u201d\u7684\u201c\u7b28\u62d9\u65ad\u8a00\u201d\u3002\u7136\u540e\u516c\u53f8\u6062\u590d\u8425\u4e1a\u3002 \u201c\u4ed6\u4eec\u5370\u5237\u4e86\u66f4\u591a\u7684 Tether\u201d\uff0c\u683c\u91cc\u82ac\u8bf4\u3002 \u201c\u4ed6\u4eec\u5370\u5237\u4e86\u66f4\u591a\u7684 Tether\u3002\u6bd4\u7279\u5e01\u4e0a\u6da8\u4e86\u5f88\u591a\u3002\u201d\u4ec5\u5728 2020 \u5e74\uff0cTether \u5c31\u5370\u5236\u4e86\u8d85\u8fc7 500 \u4ebf\u7f8e\u5143\u7684\u7a33\u5b9a\u5e01\uff1b\u73b0\u5728\u6709\u8d85\u8fc7 620 \u4ebf\u7f8e\u5143\u7684\u6d41\u901a\u91cf\u3002\u5728 2020 \u5e74 3 \u6708\u4e2d\u65ec\u81f3 2021 \u5e74 3 \u6708\u4e2d\u65ec\u4e4b\u95f4\uff0cTether \u5c06\u5176\u201c\u5e02\u503c\u201d\uff08\u53d1\u884c\u7684 Tether \u6570\u91cf\uff09\u589e\u52a0\u4e86\u7ea6 10 \u500d\u3002\u540c\u671f\uff0c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u4e0a\u6da8\u4e86\u7ea6 10 \u500d\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7ebd\u7ea6\u603b\u68c0\u5bdf\u957f Letitia James \u6b63\u5728\u5bf9 Tether \u8fdb\u884c\u8c03\u67e5\uff0c\u5979\u4e8e 2 \u6708\u7981\u6b62\u8be5\u516c\u53f8\u5728\u7ebd\u7ea6\u4ea4\u6613\uff0c\u5e76\u56e0\u201c\u9c81\u83bd\u548c\u975e\u6cd5\u63a9\u76d6\u5de8\u989d\u8d22\u52a1\u635f\u5931\u201d\u800c\u5bf9\u5176\u5904\u4ee5 1850 \u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002\u8a79\u59c6\u65af\u5728\u5979\u5173\u4e8e\u6b64\u6848\u7684\u58f0\u660e\u4e2d\u6307\u51fa\uff0c\u5728\u8c03\u67e5\u7684\u67d0\u4e9b\u65f6\u671f\u5185\uff0c\u201cTether \u5728\u4e16\u754c\u4efb\u4f55\u5730\u65b9\u90fd\u65e0\u6cd5\u4f7f\u7528\u94f6\u884c\u670d\u52a1\uff0c\u56e0\u6b64\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u6ca1\u6709\u50a8\u5907\u6765\u652f\u6301\u4ee5 1 \u7f8e\u5143\u7684\u6c47\u7387\u6d41\u901a\u7684 Tether\u6bcf\u4e2a\u7cfb\u7ef3\uff0c\u4e0e\u5b83\u7684\u9648\u8ff0\u76f8\u53cd\u3002\u201d\u5728 Tether \u5bf9 NYAG \u58f0\u660e\u7684\u56de\u5e94\u4e2d\uff0c\u8be5\u516c\u53f8\u5f3a\u8c03\u201c\u6839\u636e\u548c\u89e3\u6761\u6b3e\uff0c\u6211\u4eec\u627f\u8ba4\u6ca1\u6709\u4e0d\u5f53\u884c\u4e3a\u201d\uff0c\u5e76\u8868\u793a\uff1a\u201c\u6ca1\u6709\u53d1\u73b0 Tether \u5728\u6ca1\u6709\u652f\u6301\u7684\u60c5\u51b5\u4e0b\u53d1\u884c Tether \u6216\u64cd\u7eb5\u52a0\u5bc6\u4ef7\u683c\u201d\u3002 5 \u6708\uff0c\u4f5c\u4e3a\u4e0e Letitia James \u534f\u8bae\u7684\u4e00\u90e8\u5206\uff0cTether \u53d1\u5e03\u4e86\u4e00\u4efd\u7b80\u5355\u7684\u3001\u957f\u8fbe\u4e24\u9875\u7684\u50a8\u5907\u660e\u7ec6\u8868\u3002\u5b83\u58f0\u79f0 Tether \u4ef7\u503c\u7684 76% \u7531\u73b0\u91d1\u6216\u73b0\u91d1\u7b49\u4ef7\u7269\u8986\u76d6\u2014\u2014\u4f46\u5927\u90e8\u5206\u662f\u7b49\u4ef7\u7269\uff0c\u800c\u4e14\u5927\u90e8\u5206\u662f\u201c\u5546\u4e1a\u7968\u636e\u201d\uff08\u516c\u53f8\u503a\u52a1\uff0c\u7531\u672a\u77e5\u65b9\u4ee5\u672a\u77e5\u6761\u4ef6\u501f\u5165\uff09\u3002\u6bcf\u4e2a Tether \u80cc\u540e\u7684\u94f6\u884c\u5b9e\u9645\u73b0\u91d1\u4f3c\u4e4e\u4e0d\u5230 3 \u7f8e\u5206\u3002\u5728\u52a0\u5bc6\u5e02\u573a\uff0c\u6295\u673a\u8005\u7ee7\u7eed\u6566\u4fc3\u65b0\u6295\u8d44\u8005\u52a0\u5165\u4ed6\u4eec\u7684\u8ba1\u5212\uff0c\u6566\u4fc3\u8c28\u614e\u7684\u5a92\u4f53\u62a5\u9053\u88ab\u9a73\u65a5\u4e3a\u8bd5\u56fe\u901a\u8fc7\u865a\u5047\u4fe1\u606f\u64ad\u4e0b\u201cFUD\u201d\uff08\u6050\u60e7\u3001\u4e0d\u786e\u5b9a\u6027\u3001\u6000\u7591\uff09\u7684\u4f01\u56fe\u3002\u4f46\u7a33\u5b9a\u5e01\u5e26\u6765\u7684\u98ce\u9669\u73b0\u5728\u5df2\u7ecf\u53d8\u5f97\u4e0d\u53ef\u5ffd\u89c6\u3002\u672c\u6708\u521d\uff0c\u7f8e\u56fd\u201c\u4e09\u5927\u201d\u8bc4\u7ea7\u673a\u6784\u4e4b\u4e00\u60e0\u8a89\u8bc4\u7ea7\u8b66\u544a\u79f0\uff0c\u7a33\u5b9a\u5e01\u7684\u589e\u957f\u201c\u53ef\u80fd\u4f1a\u53ca\u65f6\u5bf9\u77ed\u671f\u4fe1\u8d37\u5e02\u573a\u7684\u8fd0\u4f5c\u4ea7\u751f\u5f71\u54cd\u201d\u3002\u5982\u679c\u5f88\u591a\u4eba\u7a81\u7136\u51b3\u5b9a\u5151\u73b0\u7531\u96be\u4ee5\u51fa\u552e\u7684\u516c\u53f8\u503a\u52a1\u652f\u6301\u7684\u4ee3\u5e01\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u65e0\u6cd5\u8fd9\u6837\u505a\u3002\u60e0\u8a89\u8b66\u544a\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u201c\u8d44\u4ea7\u4f20\u67d3\u201d\u2014\u2014\u5bf9\u7a33\u5b9a\u5e01\u7684\u6324\u5151\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u5bf9\u7528\u4e8e\u652f\u6301\u5b83\u7684\u4efb\u4f55\u8d44\u4ea7\u7684\u6324\u5151\u3002\u8fd9\u4e0e\u7f8e\u8054\u50a8\u4e3b\u5e2d\u6770\u7f57\u59c6\u9c8d\u5a01\u5c14\u7684\u8bc4\u8bba\u76f8\u547c\u5e94\uff0c\u4ed6\u5728 1 \u6708\u4efd\u8868\u793a\u7a33\u5b9a\u5e01\u201c\u53ef\u80fd\u5728\u4e00\u591c\u4e4b\u95f4\u53d8\u5f97\u5177\u6709\u7cfb\u7edf\u91cd\u8981\u6027\u201d\u3002\u4f46\u60e0\u8a89\u8ba4\u4e3a\u52a0\u5bc6\u5e02\u573a\u4e0d\u4f1a\u51fa\u73b0\u6551\u52a9\uff1a\u201c\u5f53\u5c40\u4e0d\u592a\u53ef\u80fd\u5e72\u9884\u5728\u53d1\u751f\u7834\u574f\u6027\u4e8b\u4ef6\u65f6\u62ef\u6551\u7a33\u5b9a\u5e01\u201d\u3002\u5468\u516d\uff087 \u6708 17 \u65e5\uff09\uff0c\u7f8e\u8054\u50a8\u548c\u8036\u9c81\u5927\u5b66\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u201c\u7a33\u5b9a\u5e01\u9020\u6210\u7684\u7cfb\u7edf\u6027\u98ce\u9669\u201d\u7684\u8bba\u6587\uff0c\u5728\u5468\u4e00\u7684\u4f1a\u8bae\u4e0a\uff0c\u7f8e\u56fd\u8d22\u653f\u90e8\u957f\u73cd\u59ae\u7279\u8036\u4f26\uff0c\u201c\u5f3a\u8c03\u9700\u8981\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\u201d\uff0c\u4ee5\u904f\u5236\u8fd9\u4e2a\u4e0d\u53d7\u76d1\u7ba1\u7684 1000 \u4ebf\u7f8e\u5143\u5e02\u573a\u7684\u98ce\u9669\u3002\u51b3\u7b56\u8005\u5904\u5904\u90fd\u5728\u8c08\u8bba\u201c\u5feb\u901f\u589e\u957f\u201d\uff0c\u4f46\u4e8b\u5b9e\u662f\uff0c\u6574\u4e2a\u52a0\u5bc6\u8d27\u5e01\u5e02\u573a\u5341\u591a\u5e74\u6765\u4e00\u76f4\u5b58\u5728\u7591\u95ee\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\u76d1\u7ba1\u673a\u6784\u9192\u5f97\u592a\u665a\u4e86\u3002*** \u5bf9\u6295\u8d44\u8005\u800c\u8a00\uff0c\u73b0\u5728\u5e02\u573a\u5728\u4fe1\u5ff5\u548c\u9057\u61be\u4e4b\u95f4\u5206\u88c2\u3002\u4ece 4 \u6708\u4e2d\u65ec\u8fbe\u5230\u9876\u5cf0\uff0c\u5f53\u65f6\u5b83\u7684\u4ef7\u683c\u77ed\u6682\u8d85\u8fc7 63,000 \u7f8e\u5143\uff0c\u6bd4\u7279\u5e01\u5df2\u7ecf\u4e0b\u8dcc\u964d\u5230\u4e0d\u5230\u4e00\u534a\uff0c\u6295\u8d44\u603b\u989d\u73b0\u5728\u5df2\u7ecf\u4e0b\u964d\u4e86\u4e24\u5468\u3002\u81ea 1 \u6708\u4ee5\u6765\uff0c\u6295\u8d44\u8005\u4e3a\u8d2d\u4e70\u6bd4\u7279\u5e01\u800c\u5f00\u8bbe\u7684\u8d85\u8fc7 1000 \u4e07\u4e2a\u201c\u94b1\u5305\u201d\u90fd\u5728\u6bd4\u7279\u5e01\u4e0a\u4e8f\u635f\u9650\u5236\u4f7f\u7528\u6216\u6316\u6398\u52a0\u5bc6\u8d27\u5e01\u3002\u4e0a\u4e2a\u6708\uff0c\u91d1\u878d\u884c\u4e3a\u76d1\u7ba1\u5c40 (FCA) \u7981\u6b62\u5168\u7403\u6700\u5927\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6240\u4e4b\u4e00\u5e01\u5b89\u5728\u82f1\u56fd\u5f00\u5c55\u53d7\u76d1\u7ba1\u7684\u6d3b\u52a8\uff0c\u800c\u5e7f\u544a\u6807\u51c6\u5c40 (ASA) \u5df2\u8981\u6c42\u79fb\u9664\u56db\u5bb6\u4e0d\u540c\u516c\u53f8\u4e0d\u8d1f\u8d23\u4efb\u5730\u5ba3\u4f20\u98ce\u9669\u7684\u5e7f\u544a\u3002\u6295\u673a\u662f\u4e00\u79cd\u76f4\u63a5\u7684\u6295\u8d44\u3002\u82f1\u683c\u5170\u94f6\u884c\u884c\u957f\u5b89\u5fb7\u9c81\u8d1d\u5229\u79f0\u52a0\u5bc6\u8d27\u5e01\u201c\u5371\u9669\u201d\uff0c\u5e76\u8868\u793a\u6295\u8d44\u8005\u201c\u5e94\u8be5\u51c6\u5907\u597d\u635f\u5931\u6240\u6709\u8d44\u91d1\u201d\u3002\u4f46\u5728\u8fd9\u4e2a\u4e0d\u900f\u660e\u4e14\u57fa\u672c\u4e0a\u4e0d\u53d7\u76d1\u7ba1\u7684\u4e1a\u52a1\u4e2d\uff0c\u4ecd\u7136\u53ef\u4ee5\u521b\u9020\u66f4\u591a\u901a\u8d27\u81a8\u80c0\u7684\u6761\u4ef6\u3002\u6b63\u5982\u7ea6\u7ff0\u683c\u91cc\u82ac\u8b66\u544a\u7684\u90a3\u6837\uff0c\u4ed6\u548c\u4ed6\u7684\u540c\u884c\u7814\u7a76\u7684\u6280\u672f\u201c\u4e0d\u662f\u5e02\u573a\u64cd\u7eb5\u7684\u552f\u4e00\u6765\u6e90\u201d\u3002\u65e0\u8bba\u521b\u9020\u7684\u4ef7\u683c\u591a\u4e48\u865a\u5e7b\uff0c\u5927\u91cf\u771f\u5b9e\u7684\u4eba\u73b0\u5728\u90fd\u5728\u62ff\u4ed6\u4eec\u7684\u50a8\u84c4\u5192\u9669\u3002\u793e\u4f1a\u4e0a\u7684\u4e00\u4e2a\u8bba\u575b\u8ba8\u8bba\u6bd4\u7279\u5e01\u7684\u7f51\u7edc Reddit \u62e5\u6709 300 \u4e07\u4f1a\u5458\u3002\u5728\u57c3\u9686\u9a6c\u65af\u514b\u62e5\u6709\u8d85\u8fc7 5500 \u4e07\u7c89\u4e1d\u7684 Twitter \u4e0a\uff0c\u7279\u65af\u62c9\u9996\u5e2d\u6267\u884c\u5b98\u53ef\u4ee5\u7528\u4e00\u4e2a\u8868\u60c5\u7b26\u53f7\u6765\u6539\u53d8\u4ef7\u683c\u3002\u91d1\u878d\u673a\u6784\u3001\u652f\u4ed8\u670d\u52a1\u548c\u4fe1\u7528\u5361\u63d0\u4f9b\u5546\u90fd\u52a0\u5165\u4e86\u3002 FCA \u6700\u65b0\u7684\u6d88\u8d39\u8005\u7814\u7a76\u4f30\u8ba1\uff0c\u5728\u82f1\u56fd\u8d2d\u4e70\u52a0\u5bc6\u8d27\u5e01\u7684\u4eba\u6570\u5df2\u589e\u81f3 230 \u4e07\u4eba\uff0c\u5176\u4e2d\u7ea6\u6709\u4e00\u534a\u8ba1\u5212\u8d2d\u4e70\u66f4\u591a\uff0c\u4f46\u201c\u5bf9\u52a0\u5bc6\u8d27\u5e01\u7684\u7406\u89e3\u6c34\u5e73\u6b63\u5728\u4e0b\u964d\uff0c\u8fd9\u8868\u660e\u4e00\u4e9b\u52a0\u5bc6\u7528\u6237\u53ef\u80fd\u4e0d\u5b8c\u5168\u7406\u89e3\u4ed6\u4eec\u5728\u4e70\u4ec0\u4e48\u201d\u3002\u683c\u91cc\u82ac\u8bf4\uff0c\u4ece\u94c1\u8def\u72c2\u70ed\u5230\u4e92\u8054\u7f51\u70ed\u6f6e\u7684\u5927\u89c4\u6a21\u6295\u673a\u65f6\u671f\u603b\u662f\u4ece\u5e7f\u6cdb\u5439\u6367\u7684\u65b0\u6280\u672f\u5f00\u59cb\u903b\u8f91\uff0c\u5e76\u4ee5\u719f\u6089\u7684\u65b9\u5f0f\u7ed3\u675f\u3002 \u201c\u5982\u679c\u4f60\u770b\u770b\u6295\u673a\u72c2\u6f6e\u7684\u5386\u53f2......\u5b83\u4eec\u603b\u662f\u4ee5\u4e00\u4e9b\u4eba\u8d5a\u4e86\u5f88\u591a\u94b1\u800c\u544a\u7ec8\uff0c\u901a\u5e38\u662f\u90a3\u4e9b\u65e9\u5230\u7684\u4eba\uff0c\u6700\u540e\u8fdb\u6765\u7684\u4eba\uff0c\u6700\u7ec8\u4f1a\u635f\u5931\u5f88\u591a\u3002\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u201d", "note_en": "The data showed that whenever Bitcoin\u2019s price began to fall, Tether was issued by Bitfinex and sent to two other exchanges, where it was used to buy Bitcoin \u2013 which would then rise in price. The team conducted 10,000 simulations see if this could be a chance occurrence. Not one gave the same returns. The algorithms attributed the Tether flows that occurred at the same times as these price rises to a single entity. As they explained in the paper, \u201cthis one large player\u2026 either exhibited clairvoyant market timing or exerted an extremely large price impact on Bitcoin\u201d. This time, Bitcoin\u2019s price wasn\u2019t pumped by a few hundred dollars, but by thousands of dollars. In December 2017, its price reached almost $20,000 dollars and the total value of the Bitcoin market exceeded $237bn. Griffin is confident that at least half of this price rise was manufactured using Tether. But Griffin also noticed something else in the data: \u201clarge crashes in the price of Bitcoin, prior to the end of the month\u201d. These crashes happened at the points when iFinex needed dollars in its bank account to support its claim that Tether was backed by real money. It looked very much as if the company was selling large amounts of Bitcoin at the end of each month - enough to push the price down - in order to show an auditor dollars in the bank. Bitcoin would then recover quickly, as it was repurchased. \u201cIt was very conspicuous timing, that could not be explained by chance\u201d, says Griffin. After Griffin and his colleagues published their paper, \u201cnothing seems to have happened\u201d, he says. Investors did contact him, but not to thank him for exposing the risks they faced. \u201cPeople in the crypto space were angry at our paper\u201d, he recalls. \u201cI got one email that said: &#39;Don&#39;t you understand? It&#39;s a  good thing, because it keeps the prices high!\u2019\u201d Tether issued a  strongly-worded rebuttal, in which it described the 50-page paper a &#34;clumsy assertion&#34; based on &#34;incomplete and cherry-picked data&#34;. Then the company went back to business. \u201cThey printed even more Tether\u201d, says Griffin. \u201cThey printed a lot more Tether. And Bitcoin rose, a lot.\u201d In 2020 alone, Tether printed more than $50bn of its own stablecoins; there are now more than $62bn in circulation. Between the middle of March 2020 and the middle of March 2021, Tether increased its \u201cmarket cap\u201d - the number of Tethers issued - by a factor of about ten. The price of Bitcoin increased, over the same period, by a factor of about ten. At the same time, Tether was being investigated by the New York Attorney General, Letitia James, who in February banned the company from trading in New York and fined it $18.5m for having \u201crecklessly and unlawfully covered-up massive financial losses\u201d. James noted in her statement about the case that for some of the period investigated, \u201cTether had no access to banking, anywhere in the world, and so for periods of time held no reserves to back tethers in circulation at the rate of one dollar for every tether, contrary to its representations.\u201d In Tether&#39;s response to the NYAG&#39;s statement, the company emphasised that &#34;under the terms of the settlement, we admit no wrongdoing&#34; and stated: &#34;there was no finding that Tether ever issued tethers without backing, or to manipulate crypto prices&#34;. In May, as part of its agreement with Letitia James, Tether issued a simple, two-page breakdown of its reserves. It claimed that 76 per cent of Tether\u2019s value was covered by cash or cash equivalents \u2013 but mostly equivalents, and mostly \u201ccommercial paper\u201c (corporate debt, borrowed by unknown parties on unknown terms). The actual cash in the bank behind each Tether appeared to be  less than three cents. In the crypto markets, speculators continue to urge new investors to join their scheme, and media coverage that urges caution is dismissed as an attempt to sow &#34;FUD&#34;, (Fear, Uncertainty, Doubt) through disinformation. But the risks posed by stablecoins have now become too big to ignore. At the beginning fo this month, Fitch Ratings \u2013 one of the \u201cbig three\u201d ratings agencies in the US \u2013  warned that the growth of stablecoins \u201c could, in time, have implications for the functioning of short-term credit markets\u201d. If a lot of people suddenly decided they want to cash in a token backed by hard-to-sell corporate debt, they might find themselves unable to do so. This, Fitch warned, could lead to \u201casset contagion\u201d - a run on a stablecoin could also mean a run on any assets used to back it. This echoes comments made by the Chair of the Federal Reserve, Jerome Powell, who  said in January that stablecoins \u201ccould become systemically important overnight&#34;. But Fitch does not see a bail-out happening for crypto markets: \u201c authorities are unlikely to intervene to save stablecoins in the event of a disruptive event\u201d. On Saturday (17 July), the Federal Reserve and Yale University  published a paper on \u201c  the systemic  risks created by stablecoins\u201d, and at a meeting on Monday the US Treasury Secretary, Janet Yellen, \u201cunderscored the need to  act quickly\u201d to curtail the risks from this unregulated $100bn market. Everywhere policymakers speak about \u201crapid growth\u201d, but the truth is that the whole cryptocurrency market has been questionable for more than a decade. The question now is whether regulators have woken up too late.\u00a0 *** As for investors, the market is now split between faith and regret. From its peak in mid-April, when it briefly commanded a price of over $63,000, Bitcoin has dropped to less than half that, and the total amount invested has now been falling for  two weeks. All of the more than ten million \u201cwallets\u201d opened by investors to buy Bitcoin since January have lost money on it as China \u2013 where Bitcoin has for most of its existence been mined, using the cheap electricity from the  state-sponsored coal industry \u2013 has restricted using or mining cryptocurrencies. Last month, the Financial Conduct Authority (FCA) banned one of the world&#39;s largest cryptocurrency exchanges, Binance, from regulated activity in the UK, while the Advertising Standards Authority (ASA) has requested the removal of adverts by  four different companies that irresponsibly promoted risky speculation as a straightforward investment. The governor of the Bank of England, Andrew Bailey, has called cryptocurrencies \u201cdangerous\u201d and said that investors \u201cshould be prepared to lose all their money\u201d. But in this opaque and largely unregulated business, the conditions for more inflation can still be created. As John Griffin warns, the techniques he and his peers have studied are &#34;not the only source of manipulation in the market\u201d. And however illusory the prices created, large numbers of real people are now risking their savings. A single forum on the social network Reddit for discussing Bitcoin has three million members. On Twitter, where Elon Musk has more than 55m followers, the Tesla CEO can move the price with a single emoji. Financial institutions, payments services and credit card providers have all jumped on board. The FCA&#39;s most recent  consumer research estimates that the number of people buying cryptocurrency in the UK had grown to 2.3 million people, around half of whom plan to buy more, but that &#34;the level of understanding of cryptocurrencies is declining, suggesting that some crypto users may not fully understand what they are buying&#34;. Griffin says periods of mass speculation \u2013 from Railway Mania to the dot-com boom \u2013 always begin with the widely touted promise of a new technology, and end in a familiar fashion. \u201cIf you look at the history of speculative frenzies... They always end with some people making lots of money, usually the people that got in early, and the people that got in at the end, end up losing a lot. I don&#39;t see why this would be any different.\u201d", "posttime": "2021-07-22 21:35:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bd4\u7279\u5e01,\u6dd8\u91d1\u70ed,gold,tether", "title": "\u6bd4\u7279\u5e01\u7684\u6dd8\u91d1\u70ed\u4e00\u76f4\u662f\u4e00\u79cd\u5e7b\u89c9", "title_en": "Bitcoin\u2019s gold rush was always an illusion", "transed": 1, "url": "https://www.newstatesman.com/business/finance/2021/07/bitcoins-gold-rush-was-always-illusion", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "\u6dd8\u91d1\u70ed", "gold", "tether"]}, {"category": "", "categoryclass": "", "imagename": "46a3ef8c28db7c83d281055945893d0f.png", "infoid": 1068755, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Epic Games \u6ca1\u6709\u900f\u9732\u4ea4\u6613\u6761\u6b3e\u3002 Sketchfab \u4ecd\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u54c1\u724c\u548c\u4ea7\u54c1\u8fd0\u8425\u3002 Epic Games \u8fd8\u8868\u793a\uff0c\u4e0e\u7b2c\u4e09\u65b9\u5de5\u5177\u7684\u6240\u6709\u96c6\u6210\u90fd\u5c06\u4fdd\u6301\u53ef\u7528\uff0c\u5305\u62ec\u4e0e Unity \u7684\u96c6\u6210\u3002\u8fd9\u7b14\u4ea4\u6613\u610f\u4e49\u91cd\u5927\uff0c\u56e0\u4e3a Epic Games \u4e00\u76f4\u5728\u5f00\u53d1\u548c\u6536\u8d2d\u4e00\u4e9b\u6700\u53d7\u6b22\u8fce\u7684\u521b\u4f5c\u5de5\u5177\u3002\u865a\u5e7b\u5f15\u64ce\u4e00\u76f4\u662f\u8fc7\u53bb\u51e0\u5341\u5e74\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u89c6\u9891\u6e38\u620f\u5f15\u64ce\u4e4b\u4e00\u3002\u6700\u8fd1\uff0c\u865a\u5e7b\u5f15\u64ce\u5df2\u88ab\u7528\u4e8e\u89c6\u9891\u6e38\u620f\u4ee5\u5916\u7684\u4e0d\u540c\u7528\u4f8b\uff0c\u4f8b\u5982\u7279\u6548\u3001\u865a\u62df\u4e16\u754c\u7684 3D \u63a2\u7d22\u3001\u6df7\u5408\u73b0\u5b9e\u9879\u76ee\u7b49\u3002\u4f46\u662f\u6ca1\u6709\u8d44\u4ea7\u7684\u5f15\u64ce\u662f\u975e\u5e38\u65e0\u7528\u7684\u3002\u8fd9\u5c31\u662f\u521b\u4f5c\u8005\u8981\u4e48\u8bbe\u8ba1\u81ea\u5df1\u7684 2D \u548c 3D \u8d44\u4ea7\u3001\u5916\u5305\u6b64\u8fc7\u7a0b\u6216\u76f4\u63a5\u8d2d\u4e70\u8d44\u4ea7\u7684\u539f\u56e0\u3002\u5b83\u5bfc\u81f4\u521b\u5efa\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u8d44\u4ea7\u548c\u521b\u9020\u8005\u751f\u6001\u7cfb\u7edf\u3002 Epic Games \u62e5\u6709\u81ea\u5df1\u7684\u865a\u5e7b\u5f15\u64ce\u5e02\u573a\uff0c\u4f46 Sketchfab \u591a\u5e74\u6765\u4e00\u76f4\u81f4\u529b\u4e8e\u6784\u5efa\u5177\u6709\u4e09\u5927\u91cd\u8981\u652f\u67f1\u7684\u6743\u5a01 3D \u5e02\u573a\u2014\u2014\u6280\u672f\u3001\u5f71\u54cd\u529b\u548c\u534f\u4f5c\u3002\u5728\u6280\u200b\u200b\u672f\u65b9\u9762\uff0cSketchfab \u53ef\u8ba9\u60a8\u5728\u4efb\u4f55\u5e73\u53f0\u4e0a\u67e5\u770b 3D \u6a21\u578b\u3002 Sketchfab \u67e5\u770b\u5668\u9002\u7528\u4e8e\u684c\u9762\u548c\u79fb\u52a8\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u4e3b\u8981\u6d4f\u89c8\u5668 \u2014 \u60a8\u53ef\u4ee5\u5728 Sketchfab \u4e0a\u67e5\u770b\u793a\u4f8b\u3002\u5b83\u4e5f\u9002\u7528\u4e8e VR \u8033\u673a\u3002\u60a8\u53ef\u4ee5\u4ece\u60a8\u6700\u559c\u6b22\u7684 3D \u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4f20 3D \u6a21\u578b\uff0c\u4f8b\u5982 Blender\u30013ds Max\u3001Maya\u3001Cinema 4D \u548c Substance Painter\u3002 Sketchfab \u8fd8\u53ef\u4ee5\u5c06\u4efb\u4f55\u683c\u5f0f\u8f6c\u6362\u4e3a glTF \u548c USDZ \u6587\u4ef6\u683c\u5f0f\u3002\u8fd9\u4e9b\u683c\u5f0f\u5728 Android \u548c iOS \u4e0a\u8fd0\u884c\u5f97\u7279\u522b\u597d\u3002\n\u8bf4\u5230\u89e6\u624b\u53ef\u53ca\uff0cSketchfab \u591a\u5e74\u6765\u53d1\u5c55\u8fc5\u731b\u3002 2018 \u5e74\uff0c\u8be5\u516c\u53f8\u5206\u4eab\u4e86\u4e00\u4e9b\u6307\u6807\u2014\u201410 \u4ebf\u6b21\u89c2\u770b\u3001200 \u4e07\u4f1a\u5458\u548c 300 \u4e07\u4e2a 3D \u6a21\u578b\u3002\u5927\u7ea6\u5728\u540c\u4e00\u65f6\u95f4\uff0c\u8be5\u516c\u53f8\u63a8\u51fa\u4e86\u4e00\u5bb6\u5546\u5e97\uff0c\u8ba9\u521b\u4f5c\u8005\u53ef\u4ee5\u76f4\u63a5\u5728\u5e73\u53f0\u4e0a\u4e70\u5356\u8d44\u4ea7\u3002\u6700\u540e\uff0cSketchfab \u4e3a\u4e00\u76f4\u4f7f\u7528 3D \u6a21\u578b\u7684\u516c\u53f8\u63a8\u51fa\u4e86\u4e00\u9879\u6709\u8da3\u7684\u529f\u80fd\u2014\u2014Sketchfab for Teams\u3002\u8fd9\u662f\u4e00\u79cd\u8f6f\u4ef6\u5373\u670d\u52a1\u6e38\u620f\uff0c\u53ef\u8ba9\u60a8\u4e0e\u56e2\u961f\u7684\u5176\u4ed6\u6210\u5458\u5171\u4eab Sketchfab \u5e10\u6237\u3002\u672c\u8d28\u4e0a\uff0c\u5b83\u6709\u70b9\u50cf\u5171\u4eab\u7684 Google Drive \u6587\u4ef6\u5939\u2014\u2014\u4f46\u9002\u7528\u4e8e 3D \u6a21\u578b\u3002\u901a\u8fc7\u4eca\u5929\u7684\u6536\u8d2d\uff0cEpic Games \u6b63\u5728\u7acb\u5373\u505a\u51fa\u4e00\u4e9b\u6539\u53d8\u3002\u4ece\u4eca\u5929\u5f00\u59cb\uff0c\u5546\u5e97\u8d39\u7528\u5df2\u4ece 30% \u964d\u81f3 12%\u2014\u2014\u5c31\u50cf\u5728 Epic Games Store \u4e0a\u4e00\u6837\u3002\u8be5\u516c\u53f8\u5728\u6536\u8d2d ArtStation \u540e\u4e5f\u7acb\u5373\u964d\u4f4e\u4e86 ArtStation \u7684\u4f63\u91d1\u3002\u81f3\u4e8e\u6bcf\u6708\u652f\u4ed8\u8ba2\u9605\u8d39\u7684 Sketchfab \u7528\u6237\uff0c\u73b0\u5728\u4e00\u5207\u90fd\u4fbf\u5b9c\u4e86\u4e00\u4e9b\u3002 Plus \u8ba1\u5212\u4e2d\u7684\u6240\u6709\u529f\u80fd\u73b0\u5728\u514d\u8d39\u63d0\u4f9b\uff0cPro \u8ba1\u5212\u4e2d\u7684\u6240\u6709\u529f\u80fd\u90fd\u53ef\u4f9b Plus \u8ba2\u9605\u8005\u4f7f\u7528\uff0c\u7b49\u7b49\u3002 Sketchfab \u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98 Alban Denoyel \u5728\u516c\u544a\u4e2d\u8868\u793a\u3002 \u201c\u52a0\u5165 Epic \u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u52a0\u901f Sketchfab \u548c\u6211\u4eec\u5f3a\u5927\u7684\u5728\u7ebf\u5de5\u5177\u96c6\u7684\u5f00\u53d1\uff0c\u540c\u65f6\u4e3a\u521b\u4f5c\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u6211\u4eec\u5f88\u81ea\u8c6a\u80fd\u4e0e Epic \u4e00\u8d77\u6784\u5efa Metaverse\uff0c\u5e76\u4f7f\u521b\u4f5c\u8005\u80fd\u591f\u66f4\u8fdb\u4e00\u6b65\u5730\u5f00\u5c55\u5de5\u4f5c\u3002\u201d\u968f\u7740\u5bf9 ArtStation \u548c Capturing Reality \u7684\u6536\u8d2d\uff0cEpic Games \u4e00\u76f4\u5904\u4e8e\u6536\u8d2d\u72c2\u6f6e\u4e4b\u4e2d\u3002\u5f88\u660e\u663e\uff0c\u8be5\u516c\u53f8\u5e0c\u671b\u4e3a\u6e38\u620f\u884c\u4e1a\u6784\u5efa\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u5f00\u53d1\u4eba\u5458\u5957\u4ef6\u3002", "note_en": "Epic Games isn\u2019t disclosing the terms of the deal. Sketchfab will still operate as a separate brand and offering. Epic Games also says that all integrations with third-party tools will remain available, including with Unity.\n The deal makes a ton of sense as Epic Games has been developing \u2014 and acquiring \u2014 some of the most popular creation tools. Unreal Engine has been one of the most popular video game engines of the past couple of decades.\n  More recently, Unreal Engine has been used for different use cases beyond video games, such as special effects, 3D explorations of virtual worlds, mixed reality projects and more.\n But an engine without assets is pretty useless. That\u2019s why creators either design their own 2D and 3D assets, outsource this process or buy assets directly. It led to the creation of an entire ecosystem of assets and creators.\n Epic Games has its own  Unreal Engine marketplace, but Sketchfab has been working on building the definitive 3D marketplace for many years with three important pillars \u2014\u00a0technology, reach and collaboration.\n On the technology front, Sketchfab lets you view 3D models on any platform. The Sketchfab viewer works with all major browsers on both desktop and mobile \u2014 you can see  an example on Sketchfab. It also works with VR headsets. You can upload 3D models from your favorite 3D modeling app, such as Blender, 3ds Max, Maya, Cinema 4D and Substance Painter.\n Sketchfab can also convert any format into glTF and USDZ file formats. Those formats work particularly well on Android and iOS.\n When it comes to reach, Sketchfab has grown tremendously over the years. In 2018, the company shared  some metrics \u2014 1 billion views, 2 million members and 3 million 3D models. Around the same time, the company launched  a store so that creators can buy and sell assets directly on the platform.\n Finally, Sketchfab launched an interesting feature for companies that work with 3D models all the time \u2014  Sketchfab for Teams. It\u2019s a software-as-a-service play that lets you share a Sketchfab account with the rest of the team. Essentially, it works a bit like a shared Google Drive folder \u2014\u00a0but for 3D models.\n With today\u2019s acquisition, Epic Games is making some immediate changes. Starting today, store fees have been reduced from 30% to 12% \u2014 just like on the Epic Games Store. The company lowered commissions on ArtStation immediately after  acquiring ArtStation, as well.\n As for Sketchfab users paying a monthly subscription fee, everything is a bit  cheaper now. All features in the Plus plan are now available for free, all features in the Pro plan are available to Plus subscribers, etc.\n \u201cWe built Sketchfab with a mission to empower a new era of creativity and provide a service for creators to showcase their work online and make 3D content accessible,\u201d Sketchfab co-founder and CEO Alban Denoyel said in the announcement. \u201cJoining Epic will enable us to accelerate the development of Sketchfab and our powerful online toolset, all while providing an even greater experience for creators. We are proud to work alongside Epic to build the Metaverse and enable creators to take their work even further.\u201d\n With the acquisitions of ArtStation and  Capturing Reality, Epic Games has been on an acquisition spree. It\u2019s clear that the company wants to build an end-to-end developer suite for the gaming industry.", "posttime": "2021-07-22 21:35:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "games,sharing,sketchfab", "title": "Epic Games \u6536\u8d2d\u4e86 3D \u6a21\u578b\u5171\u4eab\u5e73\u53f0 Sketchfab", "title_en": "Epic Games acquires Sketchfab, a 3D model sharing platform", "transed": 1, "url": "https://techcrunch.com/2021/07/21/epic-games-acquires-sketchfab-a-3d-model-sharing-platform/", "via": "", "real_tags": ["games", "sharing", "sketchfab"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068754, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[\u4e0d\u7b49\u4e8e]\uff1a2011 \u5e74 11 \u6708\uff0cRoman Yampolskiy \u901a\u8fc7\u6784\u9020\u65c5\u884c\u5546\u95ee\u9898\u7684\u53d8\u4f53\uff08\u5373\u6240\u8c13\u7684 Hashed-Path Traveling Salesperson Problem\uff0cHPTSP\uff09\u8bc1\u660e\u4e86 P \u4e0d\u7b49\u4e8e NP\u3002Yampolskiy \u8868\u660e HPTSP \u5177\u6709\u6709\u8da3\u7684\u6ca1\u6709\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u7684\u7279\u6027\u3002\u6b64\u5916\uff0c\u4ed6\u901a\u8fc7\u8bc1\u660e\u5173\u4e8e\u5b50\u8def\u7531\u7684\u672c\u5730\u4fe1\u606f\u4e0d\u8db3\u4ee5\u8ba1\u7b97\u6bcf\u6761\u8def\u7531\u7684\u5b8c\u6574\u503c\uff0c\u8868\u660e HPTSP \u5c5e\u4e8e NP \u7c7b\u3002\u8bba\u6587\u201cConstruction of an NP Problem with an Exponential Lower Bound\u201d\u53ef\u5728 http://arxiv.org/abs/1111.0305 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Arne Meier \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Not equal]\uff1a2011 \u5e74 11 \u6708\uff0cCraig Alan Feinstein \u8bc1\u660e P \u4e0d\u7b49\u4e8e NP\u3002\u8bba\u70b9\u51fa\u4eba\u610f\u6599\u5730\u7b80\u77ed\u3002\u5b83\u672c\u8d28\u4e0a\u8868\u660e\u65c5\u884c\u5546\u95ee\u9898\u4e0d\u80fd\u5728\u7ecf\u5178\u8ba1\u7b97\u673a\u4e0a\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\u3002\u8bba\u6587\u201c\u65c5\u884c\u5546\u95ee\u9898\u7684\u8ba1\u7b97\u590d\u6742\u6027\u201d\u53ef\u4ece http://arxiv.org/abs/cs/0611082 \u83b7\u5f97\u3002 \uff08\u611f\u8c22 Joshua Lockhart \u548c Mathieu Chapelle \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09[\u4e0d\u76f8\u7b49]\uff1a2011 \u5e74\u79cb\u5b63\uff0cJeffrey W. Holcomb \u5efa\u7acb\u4e86 P!=NP\u3002\u7f51\u7ad9 http://www.holcombtechnologies.com \u5305\u542b\u4e00\u7cfb\u5217\u8bba\u6587\uff0c\u8fd9\u4e9b\u8bba\u6587\u6c47\u96c6\u5728\u4e00\u8d77\u5efa\u7acbP!=NP\u3002\u8bba\u6587\u201c\u4f60\u7684\u7b54\u6848\u5230\u5e95\u6709\u591a\u968f\u673a\uff1f\u201d\u4f3c\u4e4e\u662f\u4e00\u7bc7\u7279\u522b\u91cd\u8981\u7684\u8bba\u6587\u3002\u8bc1\u660e\u4f9d\u8d56\u4e8e NP \u548c P \u4e4b\u95f4\u7684\u96c6\u5408\u5dee\u503c\u4e2d\u968f\u673a\u7b54\u6848\u7684\u5b58\u5728\u3002\uff08\u611f\u8c22 Peter Bro Miltersen \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2012 \u5e74 1 \u6708\uff0cDouglas Youvan \u5728\u67d0\u4e2a\u6a21\u578b\u4e2d\u5efa\u7acb\u4e86 P=NP\uff08\u5373\u4f3c\u4e4e\u5141\u8bb8\u65f6\u95f4\u65c5\u884c\u3002\u4ed6\u7684\u4e66\u201c\u968f\u7740\u901f\u5ea6\u63a5\u8fd1\u5149\u901f\uff0cP \u53d8\u5f97\u7b49\u6548\u4e8e\u4f7f\u7528\u96f6\u8d28\u91cf\u7c92\u5b50\u8fdb\u884c\u8ba1\u7b97\u7684 NP\u201d\u7684 Kindle \u7248\u5728 amazon.com \u4e0a\u6709\u552e\u3002 \uff08\u611f\u8c22 Gabriel Istrate \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2012 \u5e74 1 \u6708\uff0cGilberto Rodrigo Diduch \u8bc1\u660e P \u4e0d\u7b49\u4e8e NP\u3002\u4ed6\u7684\u8bba\u6587\u201cP vs NP\u201d\u6307\u51fa P vs NP \u95ee\u9898\u7684\u7b54\u6848\u662f\u7edd\u5bf9\u5426\uff1b\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e9b\u7c7b\u662f\u4e0d\u540c\u7684\u3002 Diduch \u7684\u8bba\u6587\u53d1\u8868\u5728 International Journal of Computer Science and Network Security (IJCSNS)\uff0c\u7b2c 12 \u5377\uff0c\u7b2c 165-167 \u9875\u3002 \uff08\u611f\u8c22 Gordon Royle \u63d0\u4f9b\u94fe\u63a5\u3002\uff09 [Not equal]\uff1a2012 \u5e74 2 \u6708\uff0cKoji Kobayashi \u8bc1\u660e\u4e86 P \u4e0d\u7b49\u4e8e NP\u3002\u4ed6\u7684\u8bba\u6587\u201cTopological approach to solve P vs NP\u201d\u8868\u660e\u6709\u4e00\u4e9b CNF \u516c\u5f0f\u4e0d\u80fd\u7b80\u5316\u4e3a\u591a\u9879\u5f0f\u5927\u5c0f\u7684 HornCNF \u516c\u5f0f\u3002\u5b83\u53ef\u4ee5\u5728 http://arxiv.org/abs/1202.1194 \u4e0a\u627e\u5230\u3002 [\u4e0d\u7b49\u4e8e]\uff1a2012 \u5e74 2 \u6708\uff0cFrank Vega Delgado \u8bc1\u660e\u4e86 P \u4e0d\u7b49\u4e8e NP\u3002\u4ed6\u4ece\u5047\u8bbe P=UP \u51fa\u53d1\uff0c\u5e76\u8bc1\u660e\u8fd9\u5bfc\u81f4 EXP=P\uff08\u4ece\u65f6\u95f4\u5c42\u6b21\u5b9a\u7406\u53ef\u77e5\u8fd9\u662f\u9519\u8bef\u7684);\u8fd9\u4e2a\u77db\u76fe\u610f\u5473\u7740 P \u4e0d\u7b49\u4e8e UP\uff08\u5b83\u5f62\u6210\u4e86 NP \u7684\u4e00\u4e2a\u5b50\u7c7b\uff09\u3002\u4ed6\u7684\u8bba\u6587\u201c\u5355\u5411\u51fd\u6570\u7684\u5b58\u5728\u201d\u53ef\u4ee5\u5728 http://the-point-of-view-of-frank.blogspot \u4e0a\u627e\u5230\u3002 com/.\u8be5\u8bc1\u660e\u7684\u4e00\u4e2a\u53d8\u4f53\u51fa\u73b0\u5728 IEEE \u62c9\u4e01\u7f8e\u6d32\u4ea4\u6613\u7684\u6807\u9898\u201cP vs UP\u201d\u4e0b\uff1b\u770b\u5230\u8fd9\u4e2a\u94fe\u63a5\u3002\u8bba\u6587\u201cP vs UP\u201d\u7684\u53e6\u4e00\u4e2a\u53d8\u4f53\u4ee5\u5047\u540d Asia Furones \u63d0\u4ea4\u7ed9\u4e86 arXiv\u3002 http://arxiv.org/abs/1205.3655 \u7684\u8bba\u6587\u5df2\u88ab arxiv \u7ba1\u7406\u5458\u64a4\u56de\uff0c\u56e0\u4e3a frank \u4f7f\u7528\u4e86\u7b14\u540d.vega@datys.cu \u53cd\u5bf9 arXiv \u653f\u7b56\u3002\u4ecd\u7136\u53ef\u4ee5\u5728 http://arxiv.org/abs/1205.3655v4 \u4e0a\u8bbf\u95ee\u4e00\u4e9b\u65e7\u7248\u672c\uff08\u611f\u8c22 Iris Delgado\u3001Juraj Burian \u548c Thomas Klimpel \u63d0\u4f9b\u4e86\u5176\u4e2d\u4e00\u4e9b\u94fe\u63a5\u3002\uff09[\u4e0d\u76f8\u7b49]\uff1a2012\u5e743\u6708\uff0cMinseong Kim\u8bc1\u660e\u96c6\u5408\u8bba\u7684Zermelo-Fraenkel\u516c\u7406\u4e0e\u9009\u62e9\u516c\u7406\u4e0d\u4e00\u81f4\uff0c\u7531\u6b64\u63a8\u5bfc\u51faP\u4e0d\u7b49\u4e8eNP\u3002\u8bba\u6587\u201cInconsistency of the Zermelo-Fraenkel\u5e26\u6709\u9009\u62e9\u516c\u7406\u7684\u96c6\u5408\u8bba\u53ca\u5176\u5bf9\u8ba1\u7b97\u590d\u6742\u6027\u7684\u5f71\u54cd\u201d\u53ef\u5728 http://arxiv.org/abs/1203.0494 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Gabriel Istrate \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2011 \u5e74 3 \u6708\uff0cAlgirdas Antano Maknickas \u8bc1\u660e\u4e86 P=NP\u3002\u4ed6\u7684\u8bba\u6587\u201cHow to solve kSAT in polynomial time\u201d\u4f7f\u7528\u6a21\u6570\u5f62\u5f0f\u7684\u591a\u5143\u903b\u8f91\u5206\u6790\u516c\u5f0f\u6765\u63a8\u5bfc\u51faNP-hard k-Satisfiability\u95ee\u9898\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u95ee\u9898\u3002\u672c\u6587\u7684\u7ed3\u8bba\u662f\uff0c\u5982\u679c\u5b58\u5728\u5b8c\u6574\u3001\u9002\u5f53\u548c\u6b63\u786e\u7684\u77e5\u8bc6\u57fa\u7840\uff0c\u5e76\u4e14\u83b7\u5f97\u6bcf\u9879\u77e5\u8bc6\u57fa\u7840\u7684\u65f6\u95f4\uff0c\u5219\u6bcf\u4e2a\u6570\u5b66\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u5339\u914d\u5c0f\u4e8e\u6b64\u9879\u76ee\u7684\u8ba1\u7b97\u65f6\u95f4\u3002\u8be5\u8bba\u6587\u53ef\u5728 http://arxiv.org/abs/1203.6020 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Juraj Burian \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2012 \u5e74 5 \u6708\uff0cMichel Feldmann \u5efa\u7acb\u4e86 P=NP\u3002\u4ed6\u7684\u8bba\u6587\u201c\u4ece\u7ecf\u5178\u4e0e\u91cf\u5b50\u7b97\u6cd5\u5230 P \u4e0e NP\u201d\u5c06 3-SAT \u7b80\u5316\u4e3a\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u800c\u5728\u7ecf\u5178\u8ba1\u7b97\u4e2d\u5f15\u5165\u8d1d\u53f6\u65af\u6982\u7387\u8bba\u3002\u6839\u636e\u7b97\u6cd5\u590d\u6742\u6027\u7406\u8bba\u8bc1\u660eP=NP\u3002\u8be5\u8bba\u6587\u53ef\u5728 http://arxiv.org/abs/1205.6658 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Anthony Leverrier\u3001Gr\u00e9gory Strubi \u548c Javaid Aslam \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2012 \u5e74\u590f\u5929\uff0c\u4e30\u7530\u4fe1\u606f\u6280\u672f\u4e2d\u5fc3\u7684 Junichiro Fukuyama \u8bc1\u660e P \u4e0d\u7b49\u4e8e NP\u3002\u8be5\u8bc1\u660e\u63a2\u7d22\u4e86\u6c49\u660e\u7684\u62d3\u6251\u7279\u6027\u7a7a\u95f4\uff0c\u6982\u62ec\u4e86\u5411\u65e5\u8475\u5f15\u7406\uff0c\u5e76\u4ee5\u7535\u8def\u7406\u8bba\u4e3a\u57fa\u7840\u3002\u8bba\u6587\u201c\u8ba1\u7b97\u6d3e\u7cfb\u662f\u96be\u4ee5\u5904\u7406\u7684\u201d\u53ef\u5728 https://junfukuyama.wordpress.com/ \u4e0a\u627e\u5230\u3002 2013 \u5e74 5 \u6708\uff0c\u4f5c\u8005\u5728 ArXive \u4e0a\u4e5f\u63d0\u4f9b\u4e86\u4ed6\u7684\u8bc1\u660e\uff0c\u7f51\u5740\u4e3a http://arxiv.org/abs/1305.3218\u3002 \uff08\u611f\u8c22 Uri Segal \u548c Maris Ozols \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2012 \u5e74 7 \u6708\uff0cSatoshi Tazawa \u8bc1\u660e\u4e86 P \u4e0d\u7b49\u4e8e NP\u3002\u8bc1\u660e\u786e\u5b9a\u6574\u6570\u5206\u89e3\u95ee\u9898\u7684\u51b3\u7b56\u95ee\u9898\u7248\u672c\u65e2\u4e0d\u5c5e\u4e8eP \u4e5f\u4e0d\u5c5e\u4e8eNP-\u5b8c\u5168\u3002\u7531\u6b64\u5f97\u51faP \u4e0d\u662fNP \u7684\u7ed3\u8bba\u3002 http://arxiv.org/abs/1207.2171 \u4e0a\u63d0\u4f9b\u4e86\u8bba\u6587\u201c\u6574\u6570\u5206\u89e3\u548c\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u65e2\u4e0d\u662f P \u4e5f\u4e0d\u662f NP \u5b8c\u5168\u7684\u201d\u3002\u8fd9\u7bc7\u8bba\u6587\u7684\u540e\u7eed\u7248\u672c\u7684\u6807\u9898\u662f\u201c\u7535\u8def\u590d\u6742\u5ea6\u548c\u5bf9\u79f0\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u201d\u3002\u8bba\u6587\u8868\u660e\uff0c\u901a\u8fc7\u5c06\u5e03\u5c14\u7535\u8def\u89e3\u91ca\u4e3a\u56fe\uff0c\u7535\u8def\u4e2d\u5c11\u91cf\u7684\u56fe\u81ea\u540c\u6784\u548c\u5927\u91cf\u7684\u5b50\u56fe\u81ea\u540c\u6784\u5efa\u7acb\u4e86\u6307\u6570\u7535\u8defNP\u5b8c\u5168\u95ee\u9898\u7684\u4e0b\u9650\u3002\u7531\u4e8e\u8be5\u7b56\u7565\u8fdd\u53cd\u4e86\u81ea\u7136\u8bc1\u660e\u4e2d\u7684\u5e9e\u5927\u6027\u6761\u4ef6\uff0c\u56e0\u6b64\u8be5\u7ed3\u679c\u8868\u660e P!=NP \u4e0e\u4f2a\u968f\u673a\u51fd\u6570\u7684\u5b58\u5728\u6ca1\u6709\u4efb\u4f55\u77db\u76fe\u3002 \uff08\u611f\u8c22 Adam Scherlis \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2012 \u5e74 7 \u6708\uff0cWen-Qi Duan \u8bc1\u660e\u4e86 P=NP\u3002\u4ed6\u7684\u8bba\u6587\u201cA Constructive Algorithm to Prove P=NP\u201d\u9996\u5148\u5c06\u65e0\u5411\u54c8\u5bc6\u987f\u5faa\u73af\u95ee\u9898\u7b80\u5316\u4e3a\u6210\u672c\u4e3a 0 \u6216 1 \u7684 TSP \u95ee\u9898\uff0c\u7136\u540e\u5f00\u53d1\u4e00\u79cd\u6709\u6548\u7684\u7b97\u6cd5\u6765\u8ba1\u7b97\u53d8\u6362\u540e\u7684 TSP \u7684\u6700\u4f18\u884c\u7a0b\u3002\u8fd9\u4ea7\u751f\u4e86\u65e0\u5411\u54c8\u5bc6\u987f\u5faa\u73af\u95ee\u9898\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\uff0c\u5e76\u5efa\u7acb\u4e86 P=NP\u3002\u8bba\u6587\u53ef\u5728 http:/ /arxiv.org/abs/1208.0542\u3002 [\u7b49\u5f0f]\uff1a2012\u5e749\u6708\uff0cSergey V. Yakhontov\u8bc1\u660e\u4e86P=NP\u3002\u8bc1\u660e\u662f\u6709\u5efa\u8bbe\u6027\u7684\uff0c\u5e76\u660e\u786e\u7ed9\u51fa\u4e86\u591a\u9879\u5f0f\u65f6\u95f4\u786e\u5b9a\u6027\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u786e\u5b9a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u975e\u786e\u5b9a\u6027\u5355\u9879\u662f\u5426\u5b58\u5728\u591a\u9879\u5f0f\u957f\u5ea6\u63a5\u53d7\u8ba1\u7b97\u8def\u5f84-\u78c1\u5e26\u56fe\u7075\u673a\u3002\u8be5\u8bba\u6587\u53ef\u4ece http://arxiv.org/abs/1208.0954 \u83b7\u5f97\u3002 \uff08\u611f\u8c22 Ricardo Mota Gomes \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09[\u65e0\u6cd5\u8bc1\u660e]\uff1a2012 \u5e74 11 \u6708\uff0cNatalia L. Malinina \u5c06\u8bba\u6587\u201c\u5173\u4e8e\u8bc1\u660e P=NP \u7684\u4e3b\u8981\u4e0d\u53ef\u80fd\u201d\u653e\u5230\u4e86 arxive\uff0c\u7f51\u5740\u4e3a http://arxiv.org /abs/1211.3492. \u5728\u7b2c 19 \u9875\uff0c\u5979\u5199\u9053\uff1a\u201c\u603b\u7ed3\u6240\u6709\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u5c06\u56fe\u5206\u4e3a\u4e09\u7c7b\u4ee5\u53ca\u8f6c\u6362\u65f6\u590d\u6742\u9876\u70b9\u7684\u884c\u4e3a\uff08\u5b83\u4eec\u53d8\u6210\u72ec\u7acb\u7684\u5faa\u73af\uff09\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u53ef\u9760\u7684\u4e8b\u5b9e\uff0c\u5373\u4e0d\u53ef\u80fd\u8bc1\u660e P=NP\u3002\u201d \uff08\u611f\u8c22 Freek van Walderveen \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2012 \u5e74 12 \u6708\uff0cLouis Coder \u8bc1\u660e\u4e86 P=NP\u3002\u8be5\u8bc1\u660e\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u786e\u5b9a\u4efb\u4f55\u7cbe\u786e 3-SAT \u516c\u5f0f\u7684\u53ef\u89e3\u6027\u72b6\u6001\uff08\u53ef\u89e3\u6216\u4e0d\u53ef\u6ee1\u8db3\uff09\u3002\u8bba\u6587 Polynomial Exact-3-SAT Solving Algorithm \u53ef\u5728 http://vixra.org/abs/1212.0109 \u4e0a\u4ee5 pdf \u683c\u5f0f\u83b7\u5f97\u30022013 \u5e74 12 \u6708\uff0cLouis Coder \u8bbe\u8ba1\u4e86\u4ed6\u7684\u7b97\u6cd5\u7684\u65b0\u7248\u672c\u3002\u8bba\u6587\u201cPolynomial SAT-Solver - Algorithm\u89e3\u91ca\u201d\u4e5f\u53ef\u4ee5\u5728 vixra.org \u4e0a\u4ee5 pdf \u683c\u5f0f\u63d0\u4f9b\u3002 \u3010\u76f8\u7b49\u3011\uff1a2013\u5e741\u6708\uff0cDmitriy Nuriyev\u5efa\u7acb\u4e86P=NP\u3002\u4ed6\u7684\u8bba\u6587\u201cA DP Approach to Hamiltonian Path Problem\u201d\u8bbe\u8ba1\u4e86\u4e00\u79cd\u591a\u9879\u5f0f\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u6709\u5411\u56fe\u4e2d\u7684\u54c8\u5bc6\u987f\u8def\u5f84\u3002\u7ed3\u679c\u662f\u901a\u8fc7\u4f7f\u7528\u539f\u59cb\u5f69\u8272\u8d85\u56fe\u7ed3\u6784\u83b7\u5f97\u7684\uff0c\u4ee5\u4fbf\u7ef4\u62a4\u548c\u66f4\u65b0\u5fc5\u8981\u7684 DP \u72b6\u6001\u3002\u6240\u5f97\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a O(n^8)\uff0c\u5176\u4e2d n \u8868\u793a\u6709\u5411\u56fe\u4e2d\u7684\u9876\u70b9\u6570\u3002\u8be5\u8bba\u6587\u53ef\u5728 http://arxiv.org/abs/1301.3093 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Florian Sikora \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2013 \u5e74 3 \u6708\uff0c\u5de5\u7a0b\u6280\u672f\u4e0e\u7269\u7406\u79d1\u5b66\u8fdb\u5c55\u56fd\u9645\u4f1a\u8bae\u5728\u9999\u6e2f\u4e3e\u884c\u3002\u672c\u6b21\u4f1a\u8bae\u8bba\u6587\u96c6\u5df2\u7531\u53d7\u4eba\u5c0a\u656c\u7684\u51fa\u7248\u793e Springer \u51fa\u7248Science\uff0c\u5e76\u5305\u542b Algirdas Antano Maknickas \u7684\u8bba\u6587 Linear Programming Formulation of Boolean Satisfiability Problem\uff0cMaknickas \u5c06\uff08NP \u96be\uff09\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u8f6c\u5316\u4e3a\uff08\u591a\u9879\u5f0f\u53ef\u89e3\u7684\uff09\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u3002\u8fd9\u5f53\u7136\u610f\u5473\u7740 P=NP\u3002\u8be5\u8bba\u6587\u53ef\u5728http://link.springer.com/chapter/10.1007/978-94-007-7684-5_22/\u3002 \uff08\u611f\u8c22 Ruben Ruiz Torrubiano \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2013 \u5e74 8 \u6708\uff0cRustem Chingizovich Valeyev \u786e\u5b9a P \u4e0d\u7b49\u4e8e NP\u3002\u8bc1\u660e\u8868\u660e TSP \u6700\u6709\u6548\u7684\u7b97\u6cd5\u662f\u7a77\u4e3e\u641c\u7d22\uff0c\u56e0\u6b64\u6307\u6570\u65f6\u95f4\u7b97\u6cd5\uff1b\u8fd9\u5f53\u7136\u610f\u5473\u7740 P \u4e0d\u7b49\u4e8e NP\u3002 \u8bba\u6587\u201cThe Lower Border of Complexity of Algorithm of the Elementary NP-Complete Task (The Most Condensed Version)\u201d\u5df2\u7ecf\u53d1\u8868\u5728 World Applied Sciences Journal \u7684\u7b2c 8 \u5377\u4e2d\uff0c\u662f\u4ee5 pdf \u683c\u5f0f\u63d0\u4f9b\u3002 [Equal]\uff1a2013 \u5e74 10 \u6708\uff0cFrederic Gillet \u5c55\u793a\u4e86 P=NP\u3002\u4ed6\u5c55\u793a\u4e86\u5728\u6d41\u7f51\u7edc\u4e0a\u5b9e\u73b0\u4fdd\u5b88\u903b\u8f91\u95e8\u5982\u4f55\u8ba9\u6211\u4eec\u4f7f\u7528\u6807\u51c6\u7684\u6700\u5c0f\u6210\u672c\u6d41\u65b9\u6cd5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3 3SAT \u548c 3 \u7ef4\u5339\u914d\u95ee\u9898. \u8bba\u6587\u201cSolving 3-SAT and 3-dimensional matching in polynomial time\u201d\u53ef\u5728 http://arxiv.org/abs/1310.1971 \u4e0a\u627e\u5230\u3002\u9644\u5f55\u3002 2013 \u5e74 11 \u6708\uff0c\u4f5c\u8005\u5728 arxive \u9875\u9762\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u8bc4\u8bba\uff1a\u5efa\u8bae\u7684\u65b9\u6cd5\u4e0d\u8d77\u4f5c\u7528\u3002\u66f4\u65b0\u4e86\u6587\u7ae0\uff0c\u5206\u6790\u4e86\u4e3a\u4ec0\u4e48\u5efa\u8bae\u7684\u901a\u7528\u65b9\u6cd5\u4e0d\u8d77\u4f5c\u7528\u3002\u52a0\u8f7d\u6b64\u66f4\u65b0\u7248\u672c\u540e\u5c06\u64a4\u56de\u8bba\u6587\u3002 \u3010\u7b49\u5f0f\u3011\uff1a2014\u5e741\u6708\uff0c\u5218\u6c49\u6797\u901a\u8fc7\u6784\u9020\u56feG=(V,E)\u4e2d\u54c8\u5bc6\u5c14\u987f\u7535\u8def\u95ee\u9898\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\uff0c\u5efa\u7acb\u4e86P=NP\uff1b\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(|V|^9)\u3002\u8bba\u6587\u201cA Algorithm for the Hamilton Circuit Problem\u201d\u53ef\u5728 http://arxiv.org/abs/1401.6423 \u4e0a\u627e\u5230\u3002 [\u7b49\u5f0f]\uff1a2014\u5e742\u6708\uff0cPawan Tamta\u3001BP Pande\u548cHS Dhami\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u6765\u8bc1\u660eP=NP\u5bf9\u56e2\u95ee\u9898\u3002\u4ed6\u4eec\u8868\u660e Clique \u95ee\u9898\u53ef\u4ee5\u5f52\u7ea6\u5230\u6700\u5927\u6d41\u7f51\u7edc\u62e6\u622a\u95ee\u9898\uff0c\u5e76\u4e14\u4ed6\u4eec\u56de\u987e\u4e86\u8fd9\u79cd\u5f52\u7ea6\uff0c\u4ece\u800c\u4e3a\u8be5\u96c6\u56e2\u95ee\u9898\u6f14\u5316\u51fa\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u3002\u8bba\u6587\u201cA Polynomial Time Solution to the Clique Problem\u201d\u53ef\u5728 http://arxiv.org/abs/1403.1178 \u4e0a\u627e\u5230\u3002 2015 \u5e74 4 \u6708\uff0cHector A. Cardenas\u3001Chester Holtz\u3001Maria Janczak\u3001Philip Meyers\u3001Nathaniel S. Potrepka \u53d1\u8868\u4e86\u5bf9\u8fd9\u79cd\u65b9\u6cd5\u7684\u53cd\u9a73\u3002\u4ed6\u4eec\u7684\u8bba\u6587\u201cA Refutation of the Clique-Based P=NP Proofs of LaPlante and Tamta-Pande-Dhami \u201c\u53ef\u4ece http://arxiv.org/abs/1504.06890 \u83b7\u5f97\u3002 \uff08\u611f\u8c22 Florian Sikora\u3001Lane Hemaspaandra \u548c Kirk Pruhs \u63d0\u4f9b\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2014 \u5e74 2 \u6708\uff0cPeng Cui \u8bc1\u660e\u4e86 P=NP\u3002\u8bba\u6587\u7684\u4e3b\u8981\u6210\u5206\u5305\u62ec\u4e00\u4e2a\u5728\u72ec\u88c1\u8005\u6d4b\u8bd5\u4e2d\u4f2a\u88c5\u7684\u5173\u952e\u95ee\u9898\u9a8c\u8bc1\u8005\u7684\u95ee\u9898\u5bf9\u5e73\u8861\u6210\u5bf9\u72ec\u7acb\u5206\u5e03\u548c\u65b9\u5dee\u98ce\u683c\u7684\u5b9a\u7406\uff0c\u4ee5\u6d88\u9664\u57fa\u4e8e Label-Cover \u53ca\u5176\u53cd\u5c04\u7248\u672c\u7684\u6240\u6709\u73a9\u5bb6\u7b54\u6848\u7684\u76f8\u5173\u6027\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u9700\u8981\u5b50\u7fa4\u5c5e\u6027\u7684\u76f4\u63a5\u6c42\u548c\u6280\u672f.\u53e6\u4e00\u65b9\u9762\uff0c\u4f5c\u8005\u8868\u660e\uff0c\u5f53 C \u7684\u652f\u6301\u7531\u4e09\u4e2a\u622a\u65ad\u504f\u7f6e\u7684\u6210\u5bf9\u72ec\u7acb\u5206\u5e03\u7684\u4f9d\u636e\u7ec4\u5408\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 SDP \u7b97\u6cd5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6709\u6548\u5730\u89e3\u51b3\u6b64\u7c7b k-CSP \u7684\u95f4\u9699\u95ee\u9898\uff0c\u5e76\u4e14\u4e09\u4e2a\u504f\u7f6e\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u3002\u8bba\u6587\u201cApproximation Resistance by Disguising Biased Distributions \u53ef\u5728 http://arxiv.org/abs/1401.6520 \u83b7\u5f97\u3002[\u4e0d\u7b49\u4e8e]\uff1a2014 \u5e74 2 \u6708\uff0cDaegene Song \u786e\u5b9a P \u4e0d\u7b49\u4e8e NP\u3002\u4e3b\u8981\u601d\u60f3\u662f\u8003\u8651P\uff08\u5206\u522b\u4e3aNP\uff09\u4f5c\u4e3a\u4e00\u7c7b\u786e\u5b9a\u6027\uff08\u5206\u522b\u4e3a\u975e\u786e\u5b9a\u6027\uff09\u591a\u9879\u5f0f\u65f6\u95f4\u7269\u7406\u8fc7\u7a0b\uff0c\u5e76\u8868\u73b0\u51fa\u91cf\u5b50\u7406\u8bba\u4e2d\u5c5e\u4e8eNP\u4f46\u4e0d\u80fd\u5305\u542b\u5728P\u4e2d\u7684\u7269\u7406\u8fc7\u7a0b\u3002 \u8bba\u6587\u201cThe P vs NP Problem in Quantum Physics&quot; \u53ef\u5728 http://arxiv.org/abs/1402.6970 \u83b7\u5f97\u3002 [\u4e0d\u7b49\u4e8e]\uff1a2014 \u5e74 3 \u6708\uff0cJoonmo Kim \u8bc1\u660e\u4e86 P \u4e0d\u7b49\u4e8e NP\u3002\u8be5\u8bc1\u660e\u4f7f\u7528\u4eba\u5de5\u8bbe\u8ba1\u7684\u56fe\u7075\u673a\u751f\u6210\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\uff0c\u5e76\u68c0\u67e5\u5b83\u4eec\u7684\u53ef\u6ee1\u8db3\u6027\u3002\u5728\u5047\u8bbe P \u7b49\u4e8e NP \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53f0\u673a\u5668\u5177\u6709\u4e00\u5b9a\u7684\u6027\u8d28\uff0c\u8fd9\u662f\u5b83\u5728\u6ca1\u6709\u5047\u8bbe\u7684\u60c5\u51b5\u4e0b\u6240\u4e0d\u5177\u5907\u7684\u3002\u8fd9\u5bfc\u81f4 P \u4e0d\u7b49\u4e8e NP\uff0c\u6309\u65b9\u5f0ftollens\u3002\u8bba\u6587\u201cP \u4e0d\u7b49\u4e8e NP by modus tollens\u201d\u53ef\u5728 http: //arxiv.org/abs/1403.4143\u3002 2014 \u5e74 4 \u6708\uff0cDan Hassin\u3001Adam Scrivener \u548c Yibo Zhou \u6ce8\u610f\u5230 Kim \u4f7f\u7528\u7684\u903b\u8f91\u4e0d\u4e00\u81f4\uff0c\u5e76\u63d0\u4f9b\u8bc1\u636e\u8bc1\u660e\u8be5\u8bc1\u660e\u65e0\u6548\u3002\u4ed6\u4eec\u7684\u53d1\u73b0\u53ef\u5728 http://arxiv.org/abs/1404.5352 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Szabolcs Ivan \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2014 \u5e74 9 \u6708\uff0cAnatoly Panyukov \u901a\u8fc7\u6784\u9020\u54c8\u5bc6\u987f\u56de\u8def\u95ee\u9898\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u8bc1\u660e\u4e86 P=NP\u3002\u8bba\u6587\u201cNP \u5b8c\u5168\u95ee\u9898\u7684\u591a\u9879\u5f0f\u53ef\u89e3\u6027\u201d\u53ef\u7528\u5728 http://arxiv.org/abs/1409.0375\u3002 \uff08\u611f\u8c22 Falk H\u00fcffner \u548c Florian Sikora \u63d0\u4f9b\u6b64\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2015 \u5e74 3 \u6708\uff0cMichael LaPlante \u901a\u8fc7\u6784\u9020\u56fe\u4e2d\u6700\u5927\u56e2\u95ee\u9898\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u5efa\u7acb\u4e86 P=NP\u3002\u8bba\u6587\u201cA Polynomial Time Algorithm\u7528\u4e8e\u89e3\u51b3\u96c6\u56e2\u95ee\u9898\u201d\u53ef\u5728 http://arxiv.org/abs/1503.04794 \u4e0a\u627e\u5230\u3002 2015 \u5e74 4 \u6708\uff0cHector A. Cardenas\u3001Chester Holtz\u3001Maria Janczak\u3001Philip Meyers\u3001Nathaniel S. Potrepka \u53d1\u8868\u4e86\u5bf9\u8fd9\u79cd\u65b9\u6cd5\u7684\u53cd\u9a73\u3002\u4ed6\u4eec\u7684\u8bba\u6587\u201cA Refutation of the Clique-Based P=NP Proofs of LaPlante and Tamta-Pande-Dhami \u201c\u53ef\u4ece http://arxiv.org/abs/1504.06890 \u83b7\u5f97\u3002 \uff08\u611f\u8c22 Santanu Bhowmick\u3001Adam Kurpisz\u3001Florian Sikora\u3001Lane Hemaspaandra \u548c Kirk Pruhs \u4ee5\u53ca\u5176\u4ed6\u51e0\u4e2a\u4eba\u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09[Equal]\uff1a2015 \u5e74 4 \u6708\uff0cAlejandro Sanchez \u51e0\u5185\u4e9a\u901a\u8fc7\u8bbe\u8ba1\u4e00\u4e2a\u91c7\u7528\u903b\u8f91\u7684\u7b97\u6cd5\u5efa\u7acb\u4e86 P=NP\u5408\u53d6\u8303\u5f0f\u4e2d\u7684\u516c\u5f0f\uff0c\u4ec5\u5f53\u516c\u5f0f\u53ef\u6ee1\u8db3\u65f6\u6210\u529f\u7ec8\u6b62\uff0c\u5e76\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fd0\u884c\u3002\u8fd9\u610f\u5473\u7740 P=NP\u3002\u8bba\u6587\u201cUnderstanding SAT is in P\u201d\u53ef\u5728 http://arxiv.org/abs/1504.00337 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Szabolcs Ivan \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2015 \u5e74 6 \u6708\uff0cFrank Vega \u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u590d\u6742\u5ea6\u7c7b\uff08\u79f0\u4e3a\u7b49\u4ef7-P\uff09\uff0c\u5b83\u4e0e P-versus-NP \u95ee\u9898\u6709\u5bc6\u5207\u5173\u7cfb\u3002\u7c7b\u7b49\u4ef7-P \u6709\u90a3\u4e9b\u5305\u542b\u6709\u5e8f\u5b9e\u4f8b\u5bf9\u7684\u8bed\u8a00\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u5c5e\u4e8e P \u4e2d\u7684\u4e00\u4e2a\u7279\u5b9a\u95ee\u9898\uff0c\u8fd9\u6837\u4e24\u4e2a\u5b9e\u4f8b\u5171\u4eab\u76f8\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5373\u76f8\u540c\u7684\u8bc1\u4e66\u3002 Vega \u7136\u540e\u8bc1\u660e (i) \u7b49\u4ef7-P = NP \u548c (ii) \u7b49\u4ef7-P = P\u3002\u8fd9\u4e24\u4e2a\u9648\u8ff0\u6e05\u695a\u5730\u6697\u793a P=NP\u3002\u8bba\u6587\u201cP \u4e0e NP \u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u201d\u53ef\u5728 https://hal \u4e0a\u627e\u5230\u3002 archives-ouvertes.fr/hal-01161668\u3002 [\u7b49\u5f0f]\uff1a2015\u5e7410\u6708\uff0c\u9ec4\u7389\u658c\u8bc1\u660e\u4e86\uff1a\u5bf9\u4e8e\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u88ab\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u63a5\u53d7\u7684\u4efb\u4f55\u8bed\u8a00L\uff0c\u5b58\u5728\u4e00\u4e2a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u63a5\u53d7L\u7684\u786e\u5b9a\u6027\u56fe\u7075\u673a\u3002\u8f93\u5165\u7684\u63a5\u53d7\u8ba1\u7b97\u6811\u4e2d\u7684\u975e\u786e\u5b9a\u6027\u79fb\u52a8\u7684\u6570\u91cf\u662f\u6709\u9650\u7684\uff0c\u88ab\u6784\u5efa\u548c\u7814\u7a76\u3002\u8fd9\u4e2a\u9650\u5236\u5efa\u7acb\u4e86 P \u548c NP \u4e4b\u95f4\u4e0e\u81ea\u7136\u6570\u76f8\u5173\u7684\u7c7b\u7684\u5c42\u6b21\u7ed3\u6784\u3002 NP \u4e2d\u7684\u4efb\u4f55\u8bed\u8a00\u4e5f\u88ab\u8fd9\u4e9b\u7c7b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684\u673a\u5668\u63a5\u53d7\uff0c\u5e76\u4e14 P\u5f62\u6210\u6700\u4f4e\u5c42\u7ea7\u3002\u8bba\u6587\u201cTesting a new idea to solve the P = NP problem with Math Induction\u201d\u53ef\u5728 https://peerj.com/preprints/1455/ \u83b7\u5f97\u3002 [\u4e0d\u7b49\u4e8e]\uff1a2016\u5e741\u6708\uff0cDaniel Uribe\u8bc1\u660e\u4e86P\u4e0d\u7b49\u4e8eNP\u3002\u4f7f\u7528\u6392\u5e8f\u7b97\u6cd5\u8ba8\u8bba\u4e86\u4f7f\u7528\u51b3\u7b56\u6811\u5206\u6790\u7b97\u6cd5\u8fd0\u884c\u65f6\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u3002\u7136\u540e\u5c06\u8be5\u65b9\u6cd5\u6269\u5c55\u5230\u6700\u4f18\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u53ef\u4ee5\u627e\u5230\u7f51\u7edc N \u4e2d\u6240\u6709\u5927\u5c0f\u4e3a q \u7684\u56e2\uff0c\u6216\u8005\u53ea\u662f\u7f51\u7edc N \u4e2d\u5927\u5c0f\u4e3a q \u7684\u7b2c\u4e00\u4e2a\u56e2\u3002 \u6700\u540e\uff0c\u8bc1\u660e\u4e86\u6b64\u7c7b\u51b3\u7b56\u6811\u7684\u4e0b\u754c\u4e0d\u5728 P \u4e2d\u3002\u8bba\u6587\u201cP vs. NP\u201d\u53ef\u5728 http://arxiv.org/abs/1601.03619 \u4e0a\u627e\u5230\u3002 2016\u5e742\u6708\uff0c\u5f17\u5170\u514b\u00b7\u7ef4\u52a0\uff08Frank Vega\uff09\u5efa\u7acb\u4e86\u4e00\u4e2a\u5bc6\u5207\u76f8\u5173\u7684\u7ed3\u679c\uff1a\u4ed6\u8bc1\u660eP=NP\u610f\u5473\u7740P=EXP\u3002\u7531\u4e8eP\u4e0d\u7b49\u4e8eEXP\uff0c\u8fd9\u5c31\u5f97\u51faP\u4e0d\u7b49\u4e8eNP\u3002\u8bba\u6587\u201cP\u7b49\u4e8eNP\uff1f \u201c\u53ef\u5728 https://hal.archives-ouvertes.fr/hal-01270398 \u83b7\u5f97\u3002 \uff08\u611f\u8c22 Hans Georg Sedig\u3001Clyde Kruskal \u548c\u5176\u4ed6\u4eba\u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2016 \u5e74 2 \u6708\uff0cMathias Hauptmann \u8868\u660e P \u4e0d\u7b49\u4e8e NP\u3002Hauptmann \u4ece\u5047\u8bbe P \u7b49\u4e8e Sigma-2-\u5f00\u59cbp\uff0c\u8bc1\u660e\u4e86 Sigma-2-p \u7684 McCreight \u548c Meyer \u8054\u5408\u5b9a\u7406\u7684\u4e00\u4e2a\u65b0\u53d8\u4f53\uff0c\u5e76\u6700\u7ec8\u5f97\u51fa\u4e86\u4e00\u4e2a\u77db\u76fe\u3002\u8fd9\u610f\u5473\u7740 P \u4e0d\u7b49\u4e8e NP\u3002\u8bba\u6587\u201c\u5173\u4e8e\u4ea4\u66ff\u548c\u8054\u5408\u5b9a\u7406\u201d\u53ef\u5728 http\uff1a //arxiv.org/abs/1602.04781\u3002 \uff08\u611f\u8c22 Rolf Niedermeier \u548c Ryan Dougherty \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09[Equal]\uff1a2016 \u5e74 3 \u6708\uff0cSteven Meyer \u5efa\u7acb\u4e86 P=NP\u3002Meyer \u901a\u8fc7\u5728\u968f\u673a\u8bbf\u95ee\u4e2d\u8bc1\u660e P \u7b49\u4e8e NP\uff0c\u4ece\u54f2\u5b66\u4e0a\u89e3\u51b3\u4e86 P \u5bf9 NP \u95ee\u9898\u4f7f\u7528\u5355\u4f4d\u4e58\u6cd5 (MRAM) \u6a21\u578b\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff0cP-versus-NP \u95ee\u9898\u88ab\u8bc1\u660e\u662f\u4e00\u4e2a\u79d1\u5b66\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u5b66\u95ee\u9898\u3002\u5f53\u524d\u5c06 P-versus-NP \u95ee\u9898\u5b9a\u4e49\u4e3a\u6d89\u53ca\u975e\u6765\u81ea\u516c\u7406\u81ea\u52a8\u673a\u7406\u8bba\u7684\u786e\u5b9a\u6027\u56fe\u7075\u673a (NDTM) \u53d7\u5230\u6279\u8bc4\u3002\u8be5\u95ee\u9898\u4e5f\u88ab\u8bc1\u660e\u65e2\u4e0d\u662f\u7eaf\u6570\u5b66\u4e5f\u4e0d\u662f\u5e94\u7528\u6570\u5b66\u4e2d\u7684\u95ee\u9898\u3002\u8bba\u6587\u201cP=?NP \u7684\u54f2\u5b66\u89e3\u51b3\u65b9\u6848\uff1aP \u7b49\u4e8e NP\u201d\u53ef\u5728 http://arxiv.org/abs/1603.06018 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Samuli Lepp\u00e4nen \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09[\u4e0d\u7b49\u4e8e]\uff1a2016 \u5e74 4 \u6708\uff0cJavier A. Arroyo-Figueoa \u8868\u660e P \u4e0d\u7b49\u4e8e NP\u3002Arroyo-Figueroa \u786e\u7acb\u4e86\u67d0\u4e00\u7c7b\u5355\u5411\u51fd\u6570\u7684\u5b58\u5728(i) \u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8ba1\u7b97\uff0c\u4ee5\u53ca (ii) \u901a\u8fc7\u4efb\u4f55\u591a\u9879\u5f0f\u6982\u7387\u7b97\u6cd5\u627e\u5230\u5176\u9006\u7684\u6982\u7387\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u8fd9\u662f\u901a\u8fc7\u7528\u4e00\u7ec4\u72ec\u7acb\u7684\u901a\u7528\u6563\u5217\u51fd\u6570\u6784\u9020 T \u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u4e00\u7cfb\u5217\u552f\u4e00\u968f\u673a\u4f4d\u77e9\u9635\u4e2d\u751f\u6210\u8d77\u59cb\u5750\u6807\u548c\u8def\u5f84\u3002\u5355\u5411\u51fd\u6570\u7684\u5b58\u5728\u610f\u5473\u7740 P \u4e0d\u7b49\u4e8e NP\u3002\u8bba\u6587\u201cThe Tau One-Way Functions Class: P != NP\u201d\u53ef\u5728 http://arxiv.org/abs/1604.03758 \u4e0a\u627e\u5230\u3002 \uff08\u611f\u8c22 Szabolcs Ivan \u548c Christian Lidstr\u00f6m \u63d0\u4f9b\u8fd9\u4e9b\u94fe\u63a5\u3002\uff09 [Equal]\uff1a2016 \u5e74\u590f\u5929\uff0cEli Halylaurin \u663e\u793a P=NP\u3002\u4e3b\u8981\u7ed3\u679c\u662f PSPACE \u5305\u542b\u5728 P \u4e2d\u3002\u56e0\u4e3a\u5df2\u7ecf\u77e5\u9053 P \u5305\u542b\u5728NP \u548c NP \u5305\u542b\u5728 PSPACE \u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6240\u9700\u7684 P=NP ......", "note_en": "[Not equal]: In November 2011, Roman Yampolskiy proved that P is not equal to NP, by constructing a variant ofthe Travelling Salesman Problem (the so-called Hashed-Path Traveling Salesperson Problem, HPTSP).Yampolskiy shows that HPTSP has the interesting property of having no polynomial time solution.Furthermore he shows that HPTSP is in the class NP by demonstrating that local information about sub-routes is insufficient to compute the complete value of each route. The paper  &#34;Construction of an NP Problem with an Exponential Lower Bound&#34; is available at http://arxiv.org/abs/1111.0305.  (Thanks to Arne Meier for providing this link.)  [Not equal]: In November 2011, Craig Alan Feinstein proved that P is not equal to NP. The argument is surprisingly short. It essentially shows that the Traveling Salesman Problem cannot be solved in polynomial-time on a classical computer.  The paper  &#34;The Computational Complexity of the Traveling Salesman Problem&#34; is available at http://arxiv.org/abs/cs/0611082.  (Thanks to Joshua Lockhart and Mathieu Chapelle for providing this link.)  [Not equal]: In fall 2011, Jeffrey W. Holcomb established P!=NP.The website  http://www.holcombtechnologies.com containsa sequence of papers that together establish P!=NP.The paper  &#34;Just How Random Are Your Answers?&#34;seems to be a particularly important one. The proof relies upon the existence of stochastic answers in the set difference between NP and P.  (Thanks to Peter Bro Miltersen for providing these links.)  [Equal]: In January 2012, Douglas Youvan established P=NP in a certain model (that seems to allow time travelling).The Kindle edition of his book &#34;As Velocity Approaches Light Speed, P Becomes Equivalent to NP for Computations Using Zero-Mass Particles&#34;is available for sale at amazon.com.  (Thanks to Gabriel Istrate for providing this link.)  [Not equal]: In January 2012, Gilberto Rodrigo Diduch proved that P is not equal to NP.His paper  &#34;P vs NP&#34; states that the answer to the P vs NP question is a categorical NO; these classes are different as their names suggest. Diduch&#39;s paper has been published in the International Journal of Computer Science and Network Security ( IJCSNS), Volume 12, pages 165-167.  (Thanks to Gordon Royle for providing the link.)  [Not equal]: In February 2012, Koji Kobayashi proved that P is not equal to NP.His paper  &#34;Topological approach to solve P versus NP&#34; shows that there are some CNF formulasthat cannot be reduced to HornCNF formulas of polynomial size. It is available at http://arxiv.org/abs/1202.1194.  [Not equal]: In February 2012, Frank Vega Delgado proved that P is not equal to NP.He starts from the assumption P=UP, and shows that this leads to EXP=P (which is known to be wrong fromthe time hierarchy theorem); this contradiction implies that P is not equal to UP (whichforms a subclass of NP).His paper  &#34;The existence of one-way functions&#34; is available at http://the-point-of-view-of-frank.blogspot.com/. A variant of the proof appeared under the title  &#34;P versus UP&#34; in the  IEEE Latin America Transactions; see this link. Yet another variant of the paper  &#34;P versus UP&#34; was submitted to the arXiv under the pseudonym Asia Furones.The paper at  http://arxiv.org/abs/1205.3655has been withdrawn by arxiv admin, due to use of pseudonym by frank.vega@datys.cu against arXiv policy.Some older versions can still be accessed at  http://arxiv.org/abs/1205.3655v4  (Thanks to Iris Delgado, Juraj Burian and Thomas Klimpel for providing some of these links.)  [Not equal]: In March 2012, Minseong Kim showed that the Zermelo-Fraenkel axioms of set theory together with the axiom ofchoice are inconsistent, and then deduced from this that P is not equal to NP.The paper &#34;Inconsistency of the Zermelo-Fraenkel set theory with the axiom of choice and its effects on the computational complexity&#34; is available at http://arxiv.org/abs/1203.0494.  (Thanks to Gabriel Istrate for providing this link.)  [Equal]: In March 2011, Algirdas Antano Maknickas proved that P=NP.His paper  &#34;How to solve kSAT in polynomial time&#34;uses multi-nary logic analytic formulas in modulo form to derive a polynomial time problemfor the NP-hard k-Satisfiability problem.The conclusions of the paper are that every mathematical problem is solvable in polynomial time if exist full, appropriate and correct knowledge basis for it and the time to get each item of knowledge basis is match less than calculation time on this items.The paper is available at http://arxiv.org/abs/1203.6020.  (Thanks to Juraj Burian for providing this link.)  [Equal]: In May 2012, Michel Feldmann established P=NP.His paper  &#34;From classical versus quantum algorithms to P versus NP&#34;reduces 3-SAT to a linear programming problem, while introducing Bayesian probability theory in classical computation.According to algorithmic complexity theory this proves that P=NP. The paper is available at http://arxiv.org/abs/1205.6658.  (Thanks to Anthony Leverrier, Gr\u00e9gory Strubi and Javaid Aslam for providing this link.)  [Not equal]: In summer 2012, Junichiro Fukuyama from the Toyota InfoTechnology Center proved that P is not equal to NP.The proof explores topological properties of a Hamming space, generalizes the sunflower lemma, and builds on circuit theory.The paper  &#34;Computing Cliques is Intractable&#34; is available at https://junfukuyama.wordpress.com/. In May 2013, the author made his proof also available on the ArXive, at http://arxiv.org/abs/1305.3218.  (Thanks to Uri Segal and Maris Ozols for providing these links.)  [Not equal]: In July 2012, Satoshi Tazawa proved that P is not equal to NP. The proof establishes that the decision problem version of integer factorization problem is neither in P nor NP-complete.From this result, the conclusion that P is not NP is reached. The paper  &#34;Integer factorization and Discrete Logarithm problem are neither in P nor NP-complete&#34; is available at http://arxiv.org/abs/1207.2171. Later versions of this paper carry the title  &#34;Relationship between circuit complexity and symmetry&#34;.The paper shows that by interpreting a Boolean circuit as a graph, the small number of graph automorphisms and the large number of subgraph automorphisms in the circuit establishes the exponential circuit lower bound for NP-complete problems. As this strategy violates the largeness condition in Natural proof, this result shows that P!=NP without any contradictions to the existence of pseudorandom functions.   (Thanks to Adam Scherlis for providing these links.)  [Equal]: In July 2012, Wen-Qi Duan proved that P=NP.His paper  &#34;A Constructive Algorithm to Prove P=NP&#34;first reduces the undirected Hamiltonian cycle problem into the TSP problem with cost 0 or 1, and thendevelops an effective algorithm to compute the optimal tour of the transformed TSP.This yields a polynomial time algorithm for the undirected Hamiltonian cycle problem, and established P=NP.The paper is available at http://arxiv.org/abs/1208.0542.  [Equal]: In September 2012, Sergey V. Yakhontov proved that P=NP.The proof is constructive, and explicitly gives a polynomial time deterministic algorithm that determines whether there exists a polynomial-length accepting computational path for a given non-deterministic single-tape Turing machine. The paper is available at http://arxiv.org/abs/1208.0954.  (Thanks to Ricardo Mota Gomes for providing this link.)  [Unprovable]: In November 2012, Natalia L. Malinina put the paper  &#34;On the principal impossibility to prove P=NP&#34;onto the arxive, at  http://arxiv.org/abs/1211.3492.On page 19, she writes:  &#34;Summarizing all that was said, it can be concluded that such dividing of the graphs into three classes and the behavior of the complicated vertexes at the converting (they turn into the independent cycles) gives us the infallible fact that it is impossible to prove that P=NP.&#34;  (Thanks to Freek van Walderveen for providing this link.)  [Equal]: In December 2012, Louis Coder proved that P=NP. The proof designs an algorithm that determines the solvability state (solvableor unsatisfiable) of any exact-3-SAT formula in polynomial time. The paper  Polynomial Exact-3-SAT Solving Algorithm is available as pdf on  http://vixra.org/abs/1212.0109.In December 2013, Louis Coder designed a new version of his algorithm.The paper  &#34;Polynomial SAT-Solver - Algorithm Explanation&#34; is availableas pdf on vixra.org as well.  [Equal]: In January 2013, Dmitriy Nuriyev established P=NP.His paper  &#34;A DP Approach to Hamiltonian Path Problem&#34; designs a polynomial worst case time Dynamic Programming algorithmfor computing a Hamiltonian Path in a directed graph. The result is obtained via the use of original colored hypergraph structures in order to maintain and update the necessary DP states. The running time of the resulting algorithm is O(n^8) where n denotes the number of vertices in the directed graph.The paper is available at http://arxiv.org/abs/1301.3093.  (Thanks to Florian Sikora for providing this link.)  [Equal]: In March 2013, the International Conference on Advances in Engineering Technologies and Physical Science was held in Hong Kong.The proceedings of this conference have been published by the respected publishing house  Springer Science, and contain the paper  Linear Programming Formulation of Boolean Satisfiability Problem by Algirdas Antano Maknickas.Maknickas translates the (NP-hard) satisfiability problem into a (polynomially solvable) linear programmingproblem.This of course implies P=NP.The paper is available at http://link.springer.com/chapter/10.1007/978-94-007-7684-5_22/.  (Thanks to Ruben Ruiz Torrubiano for providing this link.)  [Not equal]: In August 2013, Rustem Chingizovich Valeyev established that P is not equal to NP.The proof shows that the most effective algorithm for the TSP is exhaustive search, and hencean exponential time algorithm; this of course implies that P is not equal to NP.The paper  &#34;The Lower Border of Complexity of Algorithm of the Elementary NP-Complete Task (The Most Condensed Version)&#34;has been published in Volume 8 of the  World Applied Sciences Journal and is available as pdf.  [Equal]: In October 2013, Frederic Gillet showed that P=NP.He shows how the implementation of conservative logic gates on flow networks allows us to solve 3SAT and 3-dimensional matching problems in polynomial time by using standard minimum-cost flow methods.The paper  &#34;Solving 3-SAT and 3-dimensional matching in polynomial time&#34;is available at http://arxiv.org/abs/1310.1971. Addendum. In November 2013, the author added the following comment to the arxive page:The proposed method does not work. Updated the article with an analysis of why the general method suggested cannot work. Will withdraw the paper once this updated version is loaded.  [Equal]: In January 2014, Hanlin Liu established P=NP by constructing a polynomial time algorithm for theHamiltonian circuit problem in a graph G=(V,E); the algorithm has a time complexity of O(|V|^9).The paper  &#34;A Algorithm for the Hamilton Circuit Problem&#34; is available at http://arxiv.org/abs/1401.6423.  [Equal]: In February 2014, Pawan Tamta, B.P. Pande and H.S. Dhami proved P=NP by constructing a polynomial time algorithm for the clique problem. They show that the Clique Problem has a reduction to the Maximum Flow Network Interdiction Problem,and they review the reduction to evolve a polynomial time algorithm for the clique problem. The paper  &#34;A Polynomial Time Solution to the Clique Problem&#34; is available at http://arxiv.org/abs/1403.1178. In April 2015, Hector A. Cardenas, Chester Holtz, Maria Janczak, Philip Meyers, Nathaniel S. Potrepkapublished a refutation of this approach.Their paper  &#34;A Refutation of the Clique-Based P=NP Proofs of LaPlante and Tamta-Pande-Dhami&#34;is available at http://arxiv.org/abs/1504.06890.  (Thanks to Florian Sikora, Lane Hemaspaandra, and Kirk Pruhs for providing some of these links.)  [Equal]: In February 2014, Peng Cui proved P=NP.The main ingredients of the paper include a key issue in dictator test that disguises the questions of the verifier to a balanced pairwise independent distribution and a variance-style theorem to eliminate correlation of answers of all players based on Label-Cover and its reflection version, which does not rely on the technique of direct sum that requires the subgroup property. On the other hand, the author shows that the gap problem of this type of k-CSP can be solved by a SDP algorithm in polynomial time efficiently, when the support of C is combined by the grounds of three truncated biased pairwise independent distributions and the three biases satisfy certain conditions.  The paper  &#34;Approximation Resistance by Disguising Biased Distributions is available at http://arxiv.org/abs/1401.6520.  [Not equal]: In February 2014, Daegene Song established that P is not equal to NP.The main idea is to consider P (respectively NP) as a class of deterministic (respectively nondeterministic) polynomial-time physical processes, and to exhibit a physical process in quantum theory which belongs to NP but cannot be contained in P. The paper  &#34;The P versus NP Problem in Quantum Physics&#34; is available at http://arxiv.org/abs/1402.6970.  [Not equal]: In March 2014, Joonmo Kim proved that P is not equal to NP.The proof uses an artificially designed Turing Machine that generates the instances of the satisfiability problem, and checks their satisfiability. Under the assumption P equal NP, this machine has a certain property, which it doesnot have without the assumption. This leads to P not equal NP, by modus tollens. The paper  &#34;P not equal NP by modus tollens&#34; is available at http://arxiv.org/abs/1403.4143. In April 2014, Dan Hassin, Adam Scrivener and Yibo Zhou note that the logic that Kim uses is inconsistent and provide evidence that the proof is invalid. Their findings are available at http://arxiv.org/abs/1404.5352.  (Thanks to Szabolcs Ivan for providing these links.)  [Equal]: In September 2014, Anatoly Panyukov proved P=NP by constructing a polynomial time algorithm for the Hamiltonian circuit problem.The paper  &#34;Polynomial solvability of NP-complete problems&#34; is available at http://arxiv.org/abs/1409.0375.  (Thanks to Falk H\u00fcffner and Florian Sikora for providing this link.)  [Equal]: In March 2015, Michael LaPlante established P=NP by constructing a polynomial time algorithm for the maximum clique problem in a graph.The paper  &#34;A Polynomial Time Algorithm For Solving Clique Problems&#34; is available at http://arxiv.org/abs/1503.04794. In April 2015, Hector A. Cardenas, Chester Holtz, Maria Janczak, Philip Meyers, Nathaniel S. Potrepkapublished a refutation of this approach.Their paper  &#34;A Refutation of the Clique-Based P=NP Proofs of LaPlante and Tamta-Pande-Dhami&#34;is available at http://arxiv.org/abs/1504.06890.  (Thanks to Santanu Bhowmick, Adam Kurpisz, Florian Sikora, Lane Hemaspaandra, and Kirk Pruhs and several others for providing these links.)  [Equal]: In April 2015, Alejandro Sanchez Guinea established P=NP by designing an algorithm which takes a logical formula in conjunctive normal form, terminates successfully iff the formula is satisfiable, and runs in polynomial time.This implies P=NP.The paper  &#34;Understanding SAT is in P&#34;is available at http://arxiv.org/abs/1504.00337.  (Thanks to Szabolcs Ivan for providing these links.)  [Equal]: In June 2015, Frank Vega introduced a new complexity class (called  equivalent-P), which has a close relation to the P-versus-NP question.The class equivalent-P has those languages that contain ordered pairs of instances, where each one belongs to a specific problem in P, such that the two instances share a same solution, that is, the same certificate. Vega then demonstrates that (i) equivalent-P = NP and (ii) equivalent-P = P. These two statements clearly imply P=NP.The paper  &#34;Solution of P versus NP Problem&#34;is available at https://hal.archives-ouvertes.fr/hal-01161668.  [Equal]: In October 2015, Yubin Huang proved the following:For any language L accepted by a non-deterministic Turing machine in polynomial time, there exists adeterministic Turing machine that accepts L in polynomial time.A restricted Turing machine, whose maximum number of nondeterministic moves in the accept computationtree of inputs is limited, is constructed and studied.This limitation establishes a hierarchy of classes associated with natural numbers between P and NP.Any language in NP is also accepted by machines in each of these classes, and P forms the lowest hierarchy level.The paper  &#34;Testing a new idea to solve the P = NP problem with mathematical induction&#34;is available at https://peerj.com/preprints/1455/.  [Not equal]: In January 2016, Daniel Uribe proved that P is not equal to NP.The method for analyzing algorithmic runtime complexity using decision trees is discussed using the sorting algorithm. This method is then extended to optimal algorithms which may find all cliques of size q in network N, or simply the first clique of size q in network N. Finally, the lower bound of such decision trees is demonstrated to not be in P.  The paper  &#34;P vs. NP&#34;is available at http://arxiv.org/abs/1601.03619. In February 2016, Frank Vega established a closely related result: He showed that P=NP implies P=EXP.Since P is not equal to EXP, this yields that P is not equal to NP.The paper  &#34;Is P equal to NP?&#34;is available at https://hal.archives-ouvertes.fr/hal-01270398.  (Thanks to Hans Georg Sedig, Clyde Kruskal, and others for providing these links.)  [Not equal]: In February 2016, Mathias Hauptmann showed that P is not equal to NP.Hauptmann starts from the assumption that P equals Sigma-2-p, proves a new variant of the Union Theorem of McCreight and Meyer for Sigma-2-p, and eventually derives a contradiction.This implies P not equal to NP.The paper  &#34;On Alternation and the Union Theorem&#34; is available at http://arxiv.org/abs/1602.04781.  (Thanks to Rolf Niedermeier and Ryan Dougherty for providing these links.)  [Equal]: In March 2016, Steven Meyer established P=NP.Meyer solves the P-versus-NP problem philosophically by showing P is equal to NP in the random access with unit multiply (MRAM) model.More precisely, the P-versus-NP problem is shown to be a scientific rather than a mathematical problem.The assumptions involved in the current definition of the P-versus-NP problem as a problem involving non deterministic Turing Machines (NDTMs) from axiomatic automata theory are criticized. The problem is also shown to be neither a problem in pure nor applied mathematics. The paper  &#34;Philosophical Solution to P=?NP: P is Equal to NP&#34; is available at http://arxiv.org/abs/1603.06018.  (Thanks to Samuli Lepp\u00e4nen for providing these links.)  [Not equal]: In April 2016, Javier A. Arroyo-Figueroa showed that P is not equal to NP.Arroyo-Figueroa establishes the existence of a certain class of one-way functions that are (i) computable in polynomial time and (ii) with negligible probability of finding its inverse by any polynomial probabilistic algorithm. This is accomplished by constructing each member in T with a collection of independent universal hash functions that produce a starting coordinate and a path within a sequence of unique random bit matrices. The existence of one-way functions implies that P is not equal to NP. The paper  &#34;The Tau One-Way Functions Class: P != NP&#34; is available at http://arxiv.org/abs/1604.03758.  (Thanks to Szabolcs Ivan and Christian Lidstr\u00f6m for providing these links.)  [Equal]: In summer 2016, Eli Halylaurin showed P=NP.The main result is that PSPACE is included in P. Because it is already known that P is included in NP and NP is included in PSPACE, this implies the desired P=NP\n......", "posttime": "2021-07-22 21:35:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "np", "title": "P \u5bf9 NP \u9875\u9762\uff082016 \u5e74\uff09", "title_en": "The P-versus-NP Page (2016)", "transed": 1, "url": "https://www.win.tue.nl/~gwoegi/P-versus-NP.htm", "via": "", "real_tags": ["np"]}, {"category": "", "categoryclass": "", "imagename": "c92badb569fe05965c6d59abf9222795.png", "infoid": 1068753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u6539\u65e5\u5fd7\u5305\u542b\u6b64\u7248\u672c\u4e2d\u66f4\u6539\u7684\u5b8c\u6574\u5217\u8868\uff0c\u4f46\u8fd9\u91cc\u6709\u91cd\u70b9\u3002\u6b64\u7248\u672c\u7684\u4e3b\u8981\u91cd\u70b9\u662f\u653e\u5f03\u5bf9\u672c\u8eab\u4e0d\u518d\u53d7\u652f\u6301\u7684\u65e7\u7248 Node.js \u7684\u652f\u6301\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u5141\u8bb8\u6211\u4eec\u5728\u5185\u90e8\u8fdb\u884c\u4e00\u4e9b\u4e3b\u8981\u7684\u4f9d\u8d56\u66f4\u65b0\u3002\u8fd9\u9700\u8981\u65f6\u95f4\u548c\u7cbe\u529b\u624d\u80fd\u6b63\u786e\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u6b64\u7248\u672c\u4e2d\u6ca1\u6709\u5f88\u591a\u91cd\u8981\u7684\u65b0\u529f\u80fd - \u4f46\u80af\u5b9a\u6709\u5f88\u591a\u6709\u7528\u7684\u4e1c\u897f\u53ef\u4f9b\u4f7f\u7528\u3002\u6211\u4eec\u8fd8\u53d1\u5e03\u4e86 Node-RED Flow Debugger \u548c Linter \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u3002\u8fd9\u4e9b\u662f\u53ef\u9009\u63d2\u4ef6\uff0c\u53ef\u771f\u6b63\u63d0\u5347 Node-RED \u7f16\u8f91\u5668\u4e2d\u7684\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u3002\u5728\u6211\u4eec\u8ba8\u8bba\u5b83\u4eec\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u770b\u770b Node-RED \u6838\u5fc3\u4e2d\u7684\u65b0\u529f\u80fd\u3002\u6211\u4eec\u4e3a node-red \u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u884c\u9009\u9879\uff0c\u4ee5\u5e2e\u52a9\u60a8\u751f\u6210\u8bbe\u7f6e\u6587\u4ef6\u3002\u5b83\u4f1a\u8be2\u95ee\u60a8\u4e00\u7cfb\u5217\u5173\u4e8e\u60a8\u5e0c\u671b\u5982\u4f55\u914d\u7f6e Node-RED \u73af\u5883\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7528\u6237\u5b89\u5168\u6027\u3002\u8fd9\u4f7f\u5f97\u5f00\u59cb\u4f7f\u7528\u914d\u7f6e\u826f\u597d\u3001\u5b89\u5168\u7684 Node-RED \u73af\u5883\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\u968f\u7740\u65b0\u7684 node-red admin init \u547d\u4ee4\uff0c\u6211\u4eec\u91cd\u65b0\u7ec4\u7ec7\u4e86\u9ed8\u8ba4\u8bbe\u7f6e\u6587\u4ef6\u3002\u8bbe\u7f6e\u73b0\u5728\u5904\u4e8e\u66f4\u597d\u7684\u987a\u5e8f\uff0c\u6709\u66f4\u6e05\u6670\u7684\u90e8\u5206\u6765\u5e2e\u52a9\u7528\u6237\u5bfc\u822a\u3002\n\u6211\u4eec\u5df2\u66f4\u65b0\u9ed8\u8ba4\u8bbe\u7f6e\u6587\u4ef6\uff0c\u5c06\u6d41\u6587\u4ef6\u540d\u786c\u7f16\u7801\u4e3a flow.json\u3002\u4e4b\u524d\u6211\u4eec\u672a\u8bbe\u7f6e\u5b83\uff0c\u56e0\u6b64\u8fd0\u884c\u65f6\u5c06\u4f7f\u7528\u4e3b\u673a\u540d\u6765\u751f\u6210\u6d41\u6587\u4ef6\u540d\u3002\u5f53\u4eba\u4eec\u5728\u7f51\u7edc\u4e4b\u95f4\u79fb\u52a8\u65f6\uff0c\u8fd9\u4f1a\u5f15\u8d77\u4eba\u4eec\u7684\u6ce8\u610f\u3002\u7531\u4e8e\u8fd9\u662f\u5bf9\u9ed8\u8ba4\u8bbe\u7f6e\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u56e0\u6b64\u6240\u6709\u73b0\u6709\u5b89\u88c5\u5c06\u7ee7\u7eed\u50cf\u4ee5\u524d\u4e00\u6837\u8fd0\u884c\u3002\u6211\u4eec\u73b0\u5728\u6709\u5bf9 Monaco \u6587\u672c\u7f16\u8f91\u5668\u7684\u53ef\u9009\u652f\u6301\u3002\u8fd9\u5728 Function \u8282\u70b9\u548c\u5176\u4ed6\u5730\u65b9\u63d0\u4f9b\u4e86\u66f4\u4e30\u5bcc\u7684\u4ee3\u7801\u7f16\u8f91\u4f53\u9a8c\u3002\u76ee\u524d\uff0cNode-RED \u4ecd\u5c06\u9ed8\u8ba4\u4f7f\u7528 ACE \u7f16\u8f91\u5668\u3002\u8981\u542f\u7528 Monaco\uff0c\u60a8\u9700\u8981\u7f16\u8f91\u8bbe\u7f6e\u6587\u4ef6\u7684 editorTheme \u90e8\u5206\u4ee5\u5305\u542b\u8fd9\u6837\u7684 codeEditor \u90e8\u5206\uff1a\u6211\u4eec\u9488\u5bf9\u8bb8\u591a\u66f4\u5e38\u7528\u7684\u8282\u70b9\u6d4b\u8bd5\u4e86\u6b64\u7f16\u8f91\u5668\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e0e Monaco \u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u53ef\u80fd\u5b58\u5728 contrib \u8282\u70b9\u90a3\u91cc\u5047\u8bbe\u7f16\u8f91\u5668\u4f7f\u7528 ACE\u3002\u5982\u679c\u60a8\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\uff0c\u4ee5\u4fbf\u6211\u4eec\u5411\u6a21\u5757\u6240\u6709\u8005\u63d0\u51fa\u3002\u4e3a\u4e86\u8ba9\u8282\u70b9/\u63d2\u4ef6\u66f4\u8f7b\u677e\u5730\u8bbe\u7f6e\u5176 UI \u5143\u7d20\u7684\u6837\u5f0f\uff0c\u4ee5\u4fbf\u5b83\u4eec\u9075\u5faa\u5e94\u7528\u7684\u4efb\u4f55\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u7cfb\u5217 CSS \u53d8\u91cf\uff0c\u5b83\u4eec\u53ef\u7528\u4e8e\u9009\u53d6\u4e3b\u9898\u989c\u8272\u3002\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u8ba9 Function \u8282\u70b9\u66f4\u5bb9\u6613\u4f7f\u7528\u5916\u90e8\u6a21\u5757\u3002\u5728\u8bbe\u7f6e\u6587\u4ef6\u4e2d\u542f\u7528\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u914d\u7f6e Function \u8282\u70b9\u5728\u5176\u7f16\u8f91\u5bf9\u8bdd\u6846\u4e2d\u4f7f\u7528\u7684\u6a21\u5757\u3002\u6839\u636e\u5bf9\u8be5\u529f\u80fd\u7684\u53cd\u9988\uff0c\u6211\u4eec\u5728\u6b64\u7248\u672c\u4e2d\u8fdb\u884c\u4e86\u4ee5\u4e0b\u66f4\u6539\uff1a\n\u8be5\u529f\u80fd\u73b0\u5728\u9ed8\u8ba4\u4e3a\u65b0\u5b89\u88c5\u542f\u7528\u3002\u8981\u7981\u7528\u5b83\uff0c\u60a8\u9700\u8981\u5c06 functionExternalModules \u8bbe\u7f6e\u4e3a false\u3002 UI \u5df2\u7ecf\u8fc7\u91cd\u65b0\u8bbe\u8ba1\uff0c\u4ee5\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u6a21\u5757\u5217\u8868\u4ee5\u53ca\u5b83\u4eec\u5c06\u4f5c\u4e3a\u54ea\u4e9b\u53d8\u91cf\u53ef\u7528\u3002\u6211\u4eec\u5df2\u5c06\u5b89\u88c5\u6a21\u5757\u7684\u76ee\u5f55\u79fb\u56de\u7528\u6237\u76ee\u5f55\u7684\u9876\u5c42\u3002\u8fd9\u610f\u5473\u7740\u53ea\u6709\u4e00\u4e2a package.json \u5217\u51fa\u4e86\u60a8\u7684\u6240\u6709\u4f9d\u8d56\u9879\u3002\u7b2c\u4e00\u6b21\u8fd0\u884c 2.0 \u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5728\u65b0\u4f4d\u7f6e\u91cd\u65b0\u5b89\u88c5\u4efb\u4f55\u5916\u90e8\u6a21\u5757\u3002 Inject \u8282\u70b9\u5728\u5176\u7f16\u8f91\u5bf9\u8bdd\u6846\u4e2d\u6709\u4e00\u4e2a\u65b0\u6309\u94ae\uff0c\u5b83\u5c06\u4f7f\u7528\u7f16\u8f91\u5bf9\u8bdd\u6846\u4e2d\u7684\u503c\u800c\u4e0d\u662f\u5f53\u524d\u90e8\u7f72\u7684\u503c\u6765\u89e6\u53d1 Inject \u8282\u70b9\u3002\u8fd9\u4f7f\u5f97\u5728\u6d4b\u8bd5\u6d41\u7684\u540c\u65f6\u5feb\u901f\u6ce8\u5165\u4e0d\u540c\u7684\u503c\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\u8bf7\u6ce8\u610f\uff0c\u4e3b\u6d41\u7a0b\u89c6\u56fe\u4e2d\u7684\u6309\u94ae\u4ecd\u4f1a\u50cf\u5f80\u5e38\u4e00\u6837\u6ce8\u5165\u5f53\u524d\u90e8\u7f72\u7684\u503c\u3002 RBE\uff08\u6309\u5f02\u5e38\u62a5\u544a\uff09\u8282\u70b9\u662f\u8c03\u8272\u677f\u7684\u9690\u85cf\u5b9d\u77f3\u4e4b\u4e00\u3002\u9274\u4e8e\u5b83\u5728\u8bba\u575b\u4e0a\u56de\u7b54\u4e86\u591a\u5c11\u6b21\u95ee\u9898\uff0c\u5f88\u660e\u663e\u6211\u4eec\u9700\u8981\u8ba9\u5b83\u66f4\u5bb9\u6613\u88ab\u53d1\u73b0\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\u5728\u5e55\u540e\uff0c\u5b83\u4ecd\u7136\u4f7f\u7528 rbe \u8282\u70b9\u7c7b\u578b\uff0c\u56e0\u6b64\u73b0\u6709\u6d41\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u5982\u679c\u60a8\u641c\u7d22 rbe\uff0c\u5b83\u4ecd\u4f1a\u663e\u793a - \u56e0\u6b64\u9075\u5faa\u73b0\u6709\u6307\u5357\u7684\u7528\u6237\u4ecd\u4f1a\u627e\u5230\u5b83\u3002\n\u7ed9\u5b83\u547d\u540d\u8fc7\u6ee4\u5668\u5e94\u8be5\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u627e\u5230\u5b83\u5e76\u66f4\u672c\u80fd\u5730\u7406\u89e3\u5b83\u7684\u7528\u9014\u3002\u5b83\u8fd8\u6253\u5f00\u4e86\u5728\u672a\u6765\u6dfb\u52a0\u66f4\u591a\u8fc7\u6ee4\u9009\u9879\u7684\u9009\u9879\uff0c\u8fd9\u4e9b\u9009\u9879\u4e0d\u4f1a\u5728\u201cRBE\u201d\u540d\u79f0\u4e0b\u5b89\u88c5\u3002\u6211\u4eec\u5df2\u5220\u9664 node-red-node-tail \u4f5c\u4e3a\u9ed8\u8ba4\u4f9d\u8d56\u9879\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u7684\u6d41\u7a0b\u4f7f\u7528\u5b83\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u624b\u52a8\u5b89\u88c5\u8be5\u6a21\u5757\u4ee5\u6062\u590d\u8282\u70b9\u3002\u4e00\u4e2a\u65b0\u8bbe\u7f6e\u53ef\u7528\uff0cfileWorkingDirectory \u53ef\u7528\u4e8e\u5b9a\u4e49\u6587\u4ef6\u8282\u70b9\u7528\u4e8e\u89e3\u6790\u76f8\u5bf9\u8def\u5f84\u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u5982\u679c\u672a\u63d0\u4f9b\u8bbe\u7f6e\uff0c\u8282\u70b9\u5c06\u6267\u884c\u5b83\u4eec\u4e4b\u524d\u6240\u505a\u7684\u64cd\u4f5c - \u4f7f\u7528 Node-RED \u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002\u5728\u9650\u901f\u6a21\u5f0f\u4e0b\uff0cDelay \u8282\u70b9\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 msg.rate \u52a8\u6001\u8bbe\u7f6e\u5176\u901f\u7387\u3002 File In \u8282\u70b9\u6709\u4e00\u4e2a\u65b0\u9009\u9879\u53ef\u4ee5\u5728\u6bcf\u884c\u53d1\u9001\u6d88\u606f\u65f6\u5305\u542b\u6240\u6709\u5c5e\u6027 Exec \u8282\u70b9\u6709\u4e00\u4e2a\u65b0\u9009\u9879\u53ef\u4ee5\u5728 Windows \u4e0b\u8fd0\u884c\u65f6\u9690\u85cf\u63a7\u5236\u53f0\u7a97\u53e3 \u73b0\u5728\u53ef\u4ee5\u544a\u8bc9 Delay \u8282\u70b9\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5237\u65b0\u4e00\u5b9a\u6570\u91cf\u7684\u6392\u961f\u6d88\u606fmsg.flush\n\u4f7f\u7528 Node-RED \u4e4b\u7c7b\u7684\u5de5\u5177\u8fdb\u884c\u4f4e\u4ee3\u7801\u7f16\u7a0b\u7684\u597d\u5904\u4e4b\u4e00\u662f\uff0c\u5b83\u62bd\u8c61\u4e86\u8bb8\u591a\u6709\u5173\u4e8b\u7269\u5982\u4f55\u5de5\u4f5c\u7684\u6280\u672f\u7ec6\u8282\u3002\u5b83\u4f7f\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u89e3\u51b3\u624b\u5934\u7684\u95ee\u9898\u3002\u4f46\u4ec5\u4ec5\u56e0\u4e3a\u5b83\u662f\u4f4e\u4ee3\u7801\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u62e5\u6709\u5236\u4f5c\u9ad8\u8d28\u91cf\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u5de5\u5177\uff0c\u5e76\u5728\u4e8b\u60c5\u4e0d\u6b63\u5e38\u65f6\u5e2e\u52a9\u8c03\u8bd5\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u8fd8\u4e3a Node-RED \u53d1\u5e03\u4e86\u4e00\u5bf9\u65b0\u63d2\u4ef6\uff0c\u8fd9\u5c06\u4e3a\u6574\u4f53\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u5e26\u6765\u91cd\u5927\u53d8\u5316\u3002\u9996\u5148\u662f\u4e00\u4e2a Flow Debugger\u3002\u8fd9\u5c31\u50cf\u5e38\u89c4\u4ee3\u7801\u8c03\u8bd5\u5668\u4e00\u6837\uff0c\u4f46\u5728\u6d41\u7a0b\u7ea7\u522b\u3002\u60a8\u53ef\u4ee5\u5728\u8282\u70b9\u7aef\u53e3\uff08\u8f93\u5165\u6216\u8f93\u51fa\uff09\u4e0a\u8bbe\u7f6e\u65ad\u70b9\u3002\u7136\u540e\uff0c\u6bcf\u5f53\u6d88\u606f\u5230\u8fbe\u65ad\u70b9\u65f6\uff0c\u5b83\u4f1a\u5728\u8be5\u8282\u70b9\u6216\u6574\u4e2a\u8fd0\u884c\u65f6\u6682\u505c\u3002\u6682\u505c\u540e\uff0c\u5b83\u4f1a\u5411\u60a8\u663e\u793a\u5728\u6d41\u7a0b\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6392\u961f\u7684\u6d88\u606f\u6570\u91cf\uff0c\u5e76\u4e14\u5728\u4fa7\u8fb9\u680f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u6d88\u606f\u7684\u5904\u7406\u987a\u5e8f\u67e5\u770b\u6d88\u606f\u961f\u5217\u3002\u4ece\u90a3\u91cc\uff0c\u60a8\u53ef\u4ee5\u5728\u6d41\u7a0b\u4e2d\u9010\u6b65\u6267\u884c\u6bcf\u6761\u6d88\u606f\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u6d41\u7a0b\u4e2d\u5c06\u5176\u5220\u9664\u3002\u6211\u4eec\u53d1\u5e03\u7684\u7b2c\u4e8c\u4e2a\u63d2\u4ef6\u662f Flow Linter - nrlint\u3002\u8fd9\u53ef\u7528\u4e8e\u6839\u636e linter \u63d0\u4f9b\u7684\u5927\u91cf\u89c4\u5219\u6765\u8bc6\u522b\u6d41\u7a0b\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u672a\u8fde\u63a5\u5230 HTTP \u54cd\u5e94\u8282\u70b9\u7684 HTTP In \u8282\u70b9\uff0c\u5b83\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u7684\u8282\u70b9\u5728\u7269\u7406\u4e0a\u91cd\u53e0\u5e76\u53ef\u80fd\u76f8\u4e92\u906e\u6321\u3002\u6211\u4eec\u5728 eslint \u4e4b\u540e\u5bf9 linter \u8fdb\u884c\u4e86\u5efa\u6a21\uff0c\u6211\u4eec\u8fd8\u5c06\u5176\u6346\u7ed1\u5728\u53ef\u7528\u4e8e\u5bf9 Function \u8282\u70b9\u4e2d\u7684 JavaScript \u8fdb\u884c lint \u7684\u89c4\u5219\u4e4b\u4e00\u4e2d\u3002\n\u6211\u4eec\u5c06 linter \u8bbe\u8ba1\u4e3a\u4f7f\u7528 Worker \u7ebf\u7a0b\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c - \u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u4f1a\u5f71\u54cd\u7f16\u8f91\u5668\u7684\u6027\u80fd\u3002\u4fa7\u8fb9\u680f\u5411\u60a8\u663e\u793a linter \u7ed3\u679c\uff0c\u5e76\u8ba9\u60a8\u5feb\u901f\u5bfc\u822a\u5230\u9700\u8981\u6ce8\u610f\u7684\u6d41\u7a0b\u533a\u57df\u3002\u5728\u7f16\u8f91\u5668\u4e4b\u5916\uff0cnrlint \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u547d\u4ee4\u884c\u5de5\u5177\u5b89\u88c5\u548c\u8fd0\u884c\uff0c\u7528\u4e8e\u5904\u7406\u6d41 json \u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u7528\u4e8e\u9a8c\u8bc1\u6784\u5efa\u7ba1\u9053\u4e2d\u7684\u6d41\u3002\u4eca\u5929\u6211\u4eec\u6709\u4e00\u5957\u6700\u5c0f\u7684\u89c4\u5219\uff0c\u6700\u8fd1\u6765\u81ea\u793e\u533a\u7684\u610f\u89c1\u5f81\u96c6\u4ea7\u751f\u4e86\u4e00\u957f\u4e32\u4f1f\u5927\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u786e\u4fe1\u4f1a\u6709\u4e00\u4e9b\u66f4\u6df1\u5965\u7684\u89c4\u5219\u53ef\u80fd\u4e0d\u5c5e\u4e8e\u6838\u5fc3\u96c6\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u7b2c\u4e09\u65b9\u8282\u70b9\u53ef\u80fd\u5e0c\u671b\u4ecb\u7ecd\u6709\u5173\u5982\u4f55\u4f7f\u7528\u5176\u8282\u70b9\u7684\u6307\u5357\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u652f\u6301\u8fd9\u4e00\u70b9\uff0clinter \u89c4\u5219\u662f\u53ef\u63d2\u5165\u7684\u2014\u2014\u5141\u8bb8\u521b\u5efa\u81ea\u5b9a\u4e49\u89c4\u5219\u5e76\u901a\u8fc7 npm \u4e0e\u793e\u533a\u5171\u4eab\u3002\u6211\u4eec\u53bb\u5e74\u53d1\u5e03\u7684\u53d1\u5e03\u8ba1\u5212\u7684\u76ee\u6807\u662f\u5728 4 \u6708\u5e95\u53d1\u5e03 2.0\uff0c\u4e4b\u540e\u6bcf 3 \u4e2a\u6708\u53d1\u5e03\u4e00\u6b21\u5177\u6709\u91cc\u7a0b\u7891\u610f\u4e49\u7684\u7248\u672c\u3002\u9274\u4e8e\u6211\u4eec\u5df2\u7ecf\u6bd4 4 \u6708\u4efd\u7684\u76ee\u6807\u63d0\u524d\u4e86\u4e09\u4e2a\u6708\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5ba1\u89c6\u6211\u4eec\u7684\u53d1\u5e03\u8ba1\u5212\u3002 2.0 \u7248\u672c\u6709\u70b9\u72ec\u7279\u3002\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u63d0\u5347\uff0c\u5b83\u89e3\u9664\u4e86\u8bb8\u591a\u5185\u90e8\u66f4\u6539\u7684\u963b\u788d\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u9700\u8981\u62c5\u5fc3\u65e7\u7248\u672c\u7684 Node.js\u3002\u4f46\u6574\u7406\u8fd9\u4e9b\u5185\u90e8\u53d8\u5316\u7684\u65f6\u95f4\u6bd4\u9884\u671f\u7684\u8981\u957f\uff0c\u5305\u62ec\u4e00\u4e9b\u963b\u788d\u8fdb\u5c55\u7684\u4e0a\u6e38\u95ee\u9898\u3002\u6211\u4eec\u771f\u7684\u5f88\u60f3\u6062\u590d\u5230\u6b63\u5e38\u7684\u53d1\u5e03\u8282\u594f\u2014\u2014\u6709\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u53ef\u9884\u6d4b\u7684\u53d1\u5e03\u65e5\u671f\uff0c\u6211\u4eec\u90fd\u5728\u52aa\u529b\u3002\u8fd9\u662f\u6211\u4eec\u5728\u524d\u8fdb\u65f6\u4f1a\u5f04\u6e05\u695a\u7684\u4e8b\u60c5\u3002\u4f46\u662f\u4eca\u5929\uff0c\u6211\u4eec\u91cd\u65b0\u8bbe\u7f6e\u65f6\u949f\u5e76\u5c06\u6ce8\u610f\u529b\u8f6c\u79fb\u5230\u5c06\u4e8e 10 \u6708\u4e0b\u65ec\u53d1\u5e03\u7684 2.1\u3002\n\u5982\u679c\u60a8\u6709\u5174\u8da3\u5728 Node-RED \u4e2d\u770b\u5230\u67d0\u4e2a\u7279\u5b9a\u529f\u80fd\uff0c\u90a3\u4e48\u73b0\u5728\u662f\u8fdb\u5165\u8bba\u575b\u5e76\u5206\u4eab\u60a8\u7684\u53cd\u9988\u7684\u65f6\u5019\u4e86\u3002\u81f3\u4e8e 1.x \u6d41\uff0c\u5b83\u73b0\u5728\u5904\u4e8e\u7ef4\u62a4\u6a21\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u9519\u8bef\u62a5\u544a\u548c\u53ef\u7528\u4fee\u590d\uff0c\u6211\u4eec\u4ecd\u5c06\u5728\u9700\u8981\u65f6\u53d1\u5e03\u7ef4\u62a4\u7248\u672c\u3002\u5bf9\u4e8e\u90a3\u91cc\u7684\u8d21\u732e\u8005\uff0c\u6211\u4eec\u5c06\u56f4\u7ed5 github \u4e2d\u7684\u4ee3\u7801\u5206\u652f\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u53cd\u6620\u6211\u4eec\u73b0\u5728\u62e5\u6709\u7684\u4e0d\u540c\u6d41 - \u6211\u4eec\u5c06\u901a\u8fc7 slack \u4e2d\u7684 #core-dev \u9891\u9053\u5206\u4eab\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u6240\u4ee5\u8bf7\u8fc7\u6765\u6253\u4e2a\u62db\u547c\u91cd\u65b0\u611f\u5174\u8da3\u3002\u8981\u5bf9\u6b64\u5e16\u5b50\u53d1\u8868\u8bc4\u8bba\u6216\u7559\u4e0b\u53cd\u9988\uff0c\u8bf7\u5728 Twitter\u3001\u8bba\u575b\u4e0a\u8054\u7cfb\u6216\u52a0\u5165 Slack \u4e0a\u7684\u5bf9\u8bdd\u3002", "note_en": "The  Change Log has the full list of changes in this release, but here are the highlights.\n    The main focus of this release has been dropping support for old versions of Node.js that are themselves no longer supported. This in turn has allowed us to make some major dependency updates internally. This has required time and effort to do properly. As such, there are not a lot of big new features in this release - but there are certainly plenty of useful things to play with.\n We\u2019re also releasing the first versions of the Node-RED Flow Debugger and Linter. These are optional plugins that really step up the developer experience within the Node-RED editor. Before we get to them, lets look at what\u2019s new in the Node-RED core.\n     We\u2019ve added a new command-line option to  node-red to help you generate a settings file.\n It asks you a series of questions about how you want to configure your Node-RED environment, such as setting up user security.\n This makes it much easier to get started with a well configured, secure Node-RED environment.\n     Along with the new  node-red admin init command, we\u2019ve reorganised the default settings file. The settings are now in a better order, with clearer sections to help users navigate.\n   We\u2019ve updated the default settings file to hardcode the flow file name to  flows.json. Previously we left it unset, so the runtime would use the hostname to generate the flow file name. That would catch people out when moving between networks. As this is a change to the default settings file, all existing installs will continue to behave as they did before.\n   We now have optional support for the Monaco text editor. This gives a much richer code editing experience in the Function node and elsewhere.\n For now, Node-RED will still use the ACE editor by default. To enable Monaco you need to edit the  editorTheme section of your settings file to include a  codeEditor section like this:\n  We tested this editor against a lot of the more commonly used nodes to ensure they work with Monaco, but it is possible there are contrib nodes out there that assume the editor uses ACE. If you hit any problems, please let us know so we can raise with the module owner.\n   To make it easier for nodes/plugins to style their UI elements so they honour any custom theme applied, we\u2019ve added a selection of CSS Variables they can use to pick-up theme colours.\n    In the last release, we made it easier for the Function node to use external modules. Once enabled in your settings file, you could then configure what modules the Function node used in its edit dialog.\n Based on feedback on the feature we\u2019ve made the following changes in this release:\n The feature is now  enabled by default for new installs. To disable it you will need to set  functionExternalModules to  false.\n  The UI has been reworked to give a cleaner list of the modules and what variable they will be available as.\n    We have moved the directory the modules are install in back to the top-level of your user directory. This means there is a single  package.json that lists all of your dependencies. The first time you run 2.0, it will automatically reinstall any external modules in the new location.\n   The Inject node has a new button in its edit dialog that will trigger the Inject node with the values from the edit dialog, rather than the values currently deployed. That makes it much easier to quickly inject different values whilst testing a flow.\n Note the button in the main flow view will still inject the current deployed values as it always has.\n   The RBE (Report By Exception) node is one of the hidden gems of the palette. Given how many times its the answer to a question on the forum, it\u2019s clear we needed to make it more discoverable. With this release we have done two things:\n  Under the covers it still uses the  rbe node type, so existing flows will not be affected. Also that means it will still show up if you search for  rbe - so users following existing guides will still find it.\n Giving it the name  filter should help users find it and more instinctively understand what it is for. It also opens up the option of adding more filtering options in the future that wouldn\u2019t have fitted under the \u2018RBE\u2019 name.\n  We have removed  node-red-node-tail as a default dependency. This means you may need to manually install that module to get the node back if your flows use it.\n  A new settings is available,  fileWorkingDirectory that can be used to define the working directory used by the File nodes to resolve relative paths. If the setting isn\u2019t provided, the nodes will do what they did before - use the current working directory of the Node-RED process.\n  When in rate-limiting mode, the Delay node can now dynamically set its rate using  msg.rate.\n      The File In node has a new option to include all properties when sending a message per line\n  The Exec node has a new option to hide the console window when running under Windows\n  The Delay node can now be told to flush a set number of queued messages using  msg.flush\n  One\u00a0of the benefits of low-code programming with tools like Node-RED, is it abstracts away a lot of the technical detail of how things are working. It allows you to focus on solving the problem at hand.\n But\u00a0just because it\u2019s low-code, that doesn\u2019t mean you can\u2019t have the tools you need to make high quality applications and to help debug when things aren\u2019t going as they should.\n To\u00a0that end, we\u2019re also releasing a pair of new plugins for Node-RED that will bring a step-change to the overall developer experience.\n  First\u00a0up is a Flow Debugger. This acts like regular code debuggers, but at the flow level. You can set breakpoints on node ports, either inputs or outputs. Then, whenever a message arrives at a breakpoint, it pauses either at that node, or the entire runtime.\n Once paused, it\u00a0then shows you how many messages are queued up at each point in the flow and in the sidebar you can see the queue of messages in the order they will be processed. From there, you can step each message through the flow, or even delete it mid-flow.\n   The\u00a0second plugin we\u2019ve released is the Flow Linter - nrlint. This can be used to identify potential problems in the flow based on a large set of rules the linter provides. For example, it can warn if you have HTTP In nodes that aren\u2019t connected to HTTP Response nodes. Or if you have nodes that are physically overlapping and potentially obscuring each other.\n We\u2019ve\u00a0modelled the linter after  eslint which we also bundle in one of the rules that can be used to lint the JavaScript in your Function nodes.\n We\u2019ve\u00a0designed the linter to run in the browser using a Worker thread - meaning it doesn\u2019t impact the performance of the editor. The sidebar shows you the linter results and lets you quickly navigate to the areas of the flow that need attention.\n Outside\u00a0of the editor, nrlint can also be installed and run as a command-line tool against flow json files. This means it can be used to validate flows in build pipelines.\n Today\u00a0we have a minimal set of rules and a recent call for input from the community has generated a long list of great ideas.\n We\u2019re sure there will be some slightly more esoteric rules that perhaps don\u2019t belong in the core set. For example, some third party nodes may want to introduce guidance about how their nodes are used. So to support that, the linter rules are pluggable - allowing custom rules to be created and shared with the community via npm.\n   The release plan we published last year had targeted 2.0 to be released at the end of April and for subsequent milestone releases to happen every 3 months after that. Given we\u2019re already three months beyond that April target, we need to look again at our release planning.\n The 2.0 release has been somewhat unique. It\u2019s our first major version bump that has unblocked a number of internal changes as we no longer have to worry about old versions of Node.js. But it has taken longer than expected to sort out those internal changes, including a couple upstream issues that blocked progress for a while.\n We really want to get back to a regular release cadence - having a predictable release date that is well known and we all work towards. That\u2019s something we\u2019ll be figuring out as we move forward. But today, we reset the clock and shift our attention to 2.1 that will be released in late October.\n If there\u2019s a particular feature you\u2019re interested in seeing in Node-RED, then  now is the time to jump into the  forum and share your feedback.\n As for the 1.x stream, it is now in maintenance mode. That means we will still do maintenance releases as and when needed if there are bugs reported and fixes available.\n For the contributors out there, we\u2019ll be shuffling around our code branches in github to reflect the different streams we now have - we\u2019ll share more details via the  #core-dev channel in slack, so do come say hello if you\u2019re interested.\n  To comment or leave feedback on this post, get in contact on  Twitter, the  forum or join the conversation on  Slack.", "posttime": "2021-07-22 21:35:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "node,\u8282\u70b9", "title": "Node-RED 2.0", "title_en": "Node-RED 2.0", "transed": 1, "url": "https://nodered.org/blog/2021/07/20/version-2-0-released", "via": "", "real_tags": ["node", "\u8282\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "f26a99c5261f16f98ddd037fbe9af272.jpg", "infoid": 1068752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e00\u7cfb\u5217\u65e5\u76ca\u590d\u6742\u7684\u51e0\u4f55\u56fe\u5f62\u548c\u900f\u89c6\u56fe\u2014\u2014\u6536\u96c6\u5728\u4e00\u4efd 16 \u4e16\u7eaa\u7684\u6c34\u5f69\u624b\u7a3f\u4e2d\uff0c\u4fdd\u5b58\u5728\u6c83\u5c14\u82ac\u6bd4\u7279\u5c14\u7684\u8d6b\u5c14\u4f50\u683c\u5965\u53e4\u65af\u7279\u56fe\u4e66\u9986\u2014\u2014\u6ca1\u6709\u4f5c\u8005\u7684\u6ce8\u91ca\u3001\u7f16\u8f91\u7684\u5e8f\u8a00\u6216\u8fd0\u884c\u7684\u8bc4\u8bba\u3002\u6211\u4eec\u5bf9\u5176\u8d77\u6e90\u77e5\u4e4b\u751a\u5c11\u3002\u6211\u4eec\u6240\u62e5\u6709\u7684\u53ea\u662f\u5f62\u72b6\u548c\u989c\u8272\uff0c\u5076\u5c14\u51fa\u73b0\u7684\u56fe\u817e\uff08\u9e70\u3001\u516c\u9e21\uff0c\u751a\u81f3\u662f\u62ff\u7740\u98ce\u8f66\u4e4b\u7c7b\u7684\u4e1c\u897f\u7684\u63a8\u6746\uff09\u88ab\u65e0\u8fb9\u65e0\u9645\u7684\u7ebf\u6761\u548c\u89d2\u5ea6\u76f8\u5f62\u89c1\u7ecc\u3002\u4e0e\u624b\u7a3f\u540c\u65f6\u4ee3\u7684\u5176\u4ed6\u51e0\u4f55\u56fe\u50cf\u76f8\u6bd4\uff0c\u5b83\u4ecb\u4e8e\u5965\u53e4\u65af\u4e01\u00b7\u8d6b\u65af\u4e54\u6c83\u683c\u5c14 (Augustin Hirschovogel) \u7684\u51e0\u4f55\u5b66 (1543) \u548c\u6d1b\u4f26\u5179\u00b7\u65af\u6258\u5c14 (Lorenz Stoer) \u7684\u7a7a\u7075\u51e0\u4f55\u666f\u89c2 (1567) \u4e2d\u7684\u6e05\u9192\u7814\u7a76\u4e4b\u95f4\u3002\u867d\u7136\u624b\u7a3f\u4ecd\u7136\u662f\u4e2a\u8c1c\uff0c\u4f46\u67d0\u4e9b\u9875\u9762\u4e0e\u7ea6\u65af\u7279\u00b7\u5b89\u66fc\u4e3a\u7ebd\u4f26\u5821\u91d1\u5320\u6e29\u6cfd\u5c14\u00b7\u8d3e\u59c6\u5c3c\u7b56 (Wenzel Jamnitzer) \u7684 Perspectiva corporum regularium (1568) \u8680\u523b\u7684\u7248\u753b\u975e\u5e38\u76f8\u4f3c\uff0c\u5176\u4e2d\u4e00\u5f20\u56fe\u7247\u4e0a\u523b\u6709\u201cGeometria et Perspectiva Corporum Regularium\u201d\uff08\u51e0\u4f55\u4e0e\u900f\u89c6\u89c4\u5219\u4f53\uff09\uff0c\u5c3d\u7ba1\u8fd9\u662f\u6b64\u7c7b\u7814\u7a76\u7684\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u63cf\u8ff0\u6027\u540d\u79f0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4efd\u624b\u7a3f\u5c55\u793a\u4e86 Jamnitzer\u3001Albrecht D\u00fcrer\u3001Johannes Kepler \u548c Hans Lencker \u6240\u5c55\u793a\u7684\u5fb7\u56fd\u6587\u827a\u590d\u5174\u65f6\u671f\u5bf9\u51e0\u4f55\u5b9e\u4f53\u7684\u8ff7\u604b\uff0c\u8fd9\u4e0e\u7531 Piero della Francesca\u3001Paolo Uccello\u3001Leonardo da Vinci \u548c\u5176\u4ed6\u51e0\u4e2a\u4eba\u5728\u610f\u5927\u5229\u8fdb\u884c\u7684\u7c7b\u4f3c\u5b9e\u9a8c\u5e73\u884c\u2014\u2014\u90e8\u5206\u89c6\u89c9\u827a\u672f\u4e2d\u66f4\u5927\u7684\u201c\u900f\u89c6\u5d1b\u8d77\u201d\u4ee5\u53ca\u5bf9\u591a\u9762\u4f53\u7684\u65b0\u6570\u5b66\u8ff7\u604b\u3002\u6839\u636e\u6258\u9a6c\u65af\u00b7\u514b\u91cc\u65af\u6ed5\u68ee (Thomas Christensen) \u7684\u8bf4\u6cd5\uff0c\u4eba\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u4ece\u51e0\u4f55\u4f53\u4e2d\u5f97\u51fa\u201c\u4e0a\u5e1d\u5bf9\u5b87\u5b99\u7684\u79d8\u5bc6\u8bbe\u8ba1\u201d\u3002\u5982\u679c\u6ca1\u6709\u7cbe\u786e\u6216\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u5728\u5f62\u5f0f\u7684\u4e16\u754c\u4e2d\u6f02\u6cca\uff0c\u5982\u679c\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4e9b\u56fe\u753b\u7684\u987a\u5e8f\u6240\u5c55\u793a\u7684\u76f4\u89c2\u903b\u8f91\u3002\u5728\u91d1\u5b57\u5854\u548c\u7acb\u65b9\u4f53\u4e4b\u540e\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u4e8c\u5341\u9762\u4f53\u2014\u2014\u4e00\u4e2a\u6709 20 \u4e2a\u8fb9\u7684\u591a\u9762\u4f53\uff0c\u8fd9\u4e9b\u65e9\u671f\u5f62\u72b6\u7684\u6e10\u8fdb\u5916\u63a8\u3002\u7136\u540e\u662f\u201c\u5927\u5341\u4e8c\u9762\u4f53\u201d\u7684\u7f8e\u4e3d\u7684\u7ea2\u5b9d\u77f3\u8272\u53d8\u4f53\uff0c\u5728\u5176\u6316\u6398\u4e2d\u5305\u542b\u4e94\u89d2\u661f\u5f62\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u5316\u5408\u7269\uff1a\u516b\u9762\u4f53\u548c\u7acb\u65b9\u4f53\u7684\u7ec4\u5408\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u662f\u591a\u9762\u7684\uff0c\u51e0\u4e4e\u662f\u661f\u72b6\u7684\u3002\u968f\u7740\u51e0\u4f55\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56fe\u7eb8\u83b7\u5f97\u4e86\u4e16\u4fd7\u7684\u7ec6\u8282\uff1a\u4e00\u4e2a\u8986\u76d6\u7740\u4e09\u89d2\u5f62\u7f51\u683c\u7684\u7403\u9762\u88ab\u653e\u7f6e\u5728\u4e00\u4e2a\u6709\u89d2\u5ea6\u7684\u652f\u67b6\u4e0a\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u9644\u7740\u5728\u5730\u7403\u4e0a\uff0c\u5c06\u6570\u5b66\u53ef\u80fd\u6027\u7684\u62bd\u8c61\u9886\u57df\u7f6e\u4e8e\u575a\u5b9e\u7684\u5730\u9762\u4e0a\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u4e00\u4e2a\u6f02\u4eae\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u6de1\u9ec4\u8272\u7684\u7403\u4f53\uff0c\u5b83\u50cf\u7eb8\u706f\u7b3c\u6216\u88c5\u9970\u6027\u5265\u843d\u7684\u6a59\u8272\u4e00\u6837\u5f00\u69fd\u3002\u5b83\u5750\u843d\u5728\u4e00\u4e2a\u4e0d\u89c4\u5219\u7684\u7389\u6876\u4e0a\uff0c\u5806\u653e\u5728\u4e00\u5f20\u4f4e\u77ee\u7684\u7c89\u7ea2\u8272\u684c\u5b50\u4e0a\u3002\u5f62\u72b6\u5854\u7565\u5fae\u5411\u53f3\u503e\u659c\uff0c\u4e3a\u539f\u672c\u6beb\u65e0\u610f\u4e49\u7684\u8868\u9762\u96c6\u5408\u8d4b\u4e88\u6df1\u523b\u7684\u8fd0\u52a8\u611f\u3002\u5728\u5de6\u8fb9\uff0c\u817f\u62ac\u8d77\uff0c\u4e00\u6761\u767d\u8272\u7684\u9e61\u9e30\u53d1\u51fa\u4e86\u5b83\u7684\u8d5e\u8bb8\u58f0\u3002\u6700\u540e\u51e0\u9875\u521b\u9020\u4e86\u4e00\u4e2a\u76db\u5927\u7684\u7ed3\u5c40\uff1a\u683c\u5b50\u7403\u4f53\uff1b\u7ec6\u957f\u7684\u7c89\u5f69\u91d1\u5b57\u5854\uff0c\u7c7b\u4f3c\u4e8e\u67d0\u4eba\u68a6\u5bd0\u4ee5\u6c42\u7684\u53e4\u57ce\uff1b\u4e24\u4e2a\u5706\u73af\uff0c\u5207\u5272\uff0c\u76f8\u4e92\u8fde\u63a5\uff0c\u653e\u5728\u4e00\u4e2a\u57fa\u5ea7\u4e0a\uff0c\u5c31\u50cf\u4e00\u4e2a\u751c\u751c\u5708\u62e5\u62b1\u7684\u8d85\u73b0\u5b9e\u4e3b\u4e49\u96d5\u5851\uff1b\u4e00\u4e2a\u975e\u5e38\u51fa\u4eba\u610f\u6599\u548c\u73b0\u5b9e\u7684\u7435\u7436\uff0c\u6f02\u6d6e\u5728\u4e00\u53ea\u767e\u5408\u87fe\u870d\u4e0a\u65b9\uff1b\u7136\u540e\uff0c\u624b\u7a3f\u7684\u5012\u6570\u7b2c\u4e8c\u5e45\u900f\u89c6\u56fe\u2014\u2014\u4e00\u672c\u80ed\u8102\u7ea2\u4e66\uff0c\u5c01\u9762\u4e0a\u523b\u6709\u62bd\u8c61\u7684\u5f62\u72b6\uff0c\u6253\u5f00\u540e\u663e\u793a\u4e00\u4e2a\u67b6\u5b50\u4e0a\u7684\u5341\u5b57\u67b6\u3002\u5728\u8fd9\u4e2a\u7cfb\u5217\u4e2d\uff0c\u6c89\u6d78\u5728\u66f2\u7ebf\u548c\u66f2\u9762\u4e2d\u7684\u5355\u4e00\u57fa\u7763\u6559\u7b26\u53f7\u5524\u8d77\u4e86\u4e00\u79cd\u65e2\u4e16\u4fd7\u53c8\u795e\u5723\u7684\u51e0\u4f55\u611f\uff1a\u5c3d\u7ba1\u8bb8\u591a\u662f\u5b8c\u5168\u53f8\u7a7a\u89c1\u60ef\u7684\uff0c\u4f46\u8fd9\u4efd\u624b\u7a3f\u4e2d\u7684\u5f62\u5f0f\u4f3c\u4e4e\u8ba9\u6211\u4eec\u8d85\u8d8a\u4e86\u7406\u89e3\u7684\u9886\u57df\u3002", "note_en": "This sequence of increasingly complex geometrical figures and perspective drawings \u2014 collected in a sixteenth-century watercolor manuscript and preserved at the Herzog August Bibliothek in Wolfenb\u00fcttel \u2014 comes with no author&#39;s note, editor&#39;s preface, or running commentary. We know very little about its origins. All we have are shapes and color, with the occasional totem (eagle, rooster, and even a putto holding something like a pinwheel) dwarfed by the immensity of lines and angles.\n When compared to other geometric images contemporary to the manuscript, it inhabits a middle ground between the sober studies found in Augustin Hirschovogel&#39;s   Geometria (1543) and Lorenz Stoer&#39;s  ethereal geometric landscapes (1567). While the manuscript remains a mystery, certain pages share a strong resemblance to the etchings by Jost Amman for Nuremberg goldsmith Wenzel Jamnitzer&#39;s   Perspectiva corporum regularium (1568) \u2014 and one image bears the inscription &#34;Geometria et Perspectiva Corporum Regularium&#34; (Geometry and Perspective of the Regular Bodies), though this was a somewhat common descriptive name for studies of this kind.\n Indeed, the manuscript displays the German Renaissance fascination for geometrical solids demonstrated by Jamnitzer, Albrecht D\u00fcrer, Johannes Kepler, and Hans Lencker, which paralleled similar experiments in Italy conducted by Piero della Francesca, Paolo Uccello, Leonardo da Vinci, and  several others \u2014 part of a larger  &#34;rise of perspective&#34; in visual art and the  renewed mathematical fascination with polyhedra. According to  Thomas Christensen, it was thought that one could derive, from geometric solids, &#34;God&#39;s secret design for the universe&#34;.\n Without a precis or introduction, we might find ourselves adrift in a world of forms, were it not for the intuitive logic exhibited in the order of these drawings. After the pyramid and cube, we find an icosahedron \u2014 a polyhedron with twenty sides, the progressive extrapolation of those earlier shapes. Then a beautiful, ruby-painted variation of the &#34;great dodecahedron&#34;, which contains pentagrams in its excavations. And suddenly, compounds: combinations of octahedrons and cubes, faceted and almost stellated in certain instances.\n As the geometry becomes more complex, the drawings gain worldly details: a spherical surface covered with a triangular mesh is staged on an angular stand, the kind that you might find attached to a globe, situating the abstract realm of mathematical possibility against solid ground. A beautiful example in this regard features a pale-yellow sphere, which has been grooved like a paper lantern or  an ornamentally peeled orange. It sits on an irregular jade barrel, stacked on a low pink table. The tower of shapes leans slightly rightwards, lending a profound sense of movement to the otherwise meaningless collection of surfaces. On the left, leg raised, a white wagtail sounds its approving  chisick.\n The concluding pages create a grand finale: lattice spheres; elongated pastel pyramids that resemble someone&#39;s dream of an ancient city; two tori, cut, interlinked, and set upon a pedestal, like a surrealist sculpture of donuts hugging; a very unexpected and realistic lute, floating over a lily-padded toad; and then, the manuscript&#39;s penultimate perspective drawing \u2014 a carmine book, whose cover is inscribed with an abstract shape, opened to show a cross resting on a stand. At this point in the series, steeped in curves and surfaces, the singular Christian symbol summons a sense of geometry both profane and sacred: although many are utterly commonplace, the forms in this manuscript seem to transport us just beyond the realm of comprehension.", "posttime": "2021-07-22 21:35:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9e\u4f53,geometric,\u5f62\u72b6", "title": "\u5b9e\u4f53\u5bf9\u8c61\uff1a16 \u4e16\u7eaa\u7684\u51e0\u4f55\u548c\u900f\u89c6\u56fe", "title_en": "Solid Objects: 16th-Century Geometric and Perspective Drawings", "transed": 1, "url": "https://publicdomainreview.org/collection/solid-objects", "via": "", "real_tags": ["\u5b9e\u4f53", "geometric", "\u5f62\u72b6"]}, {"category": "", "categoryclass": "", "imagename": "b58f8d85b8bbce5ef3a6ff5a2002c229.jpg", "infoid": 1068751, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u516c\u5f00\u62a5\u9053\u53bb\u533f\u540d\u5316\u7684\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u540e\uff0c\u4e00\u540d\u516c\u4f17\u4eba\u7269\u88ab\u9a71\u9010\uff0c\u8fd9\u4f3c\u4e4e\u662f\u7b2c\u4e00\u6b21\uff0c\u516c\u5f00\u4e86\u6709\u5173\u4ed6\u751f\u6d3b\u7684\u654f\u611f\u548c\u4ee5\u524d\u79c1\u4eba\u7684\u7ec6\u8282\u3002\u6770\u5f17\u91cc\u00b7\u4f2f\u91cc\u5c14 (Jeffrey Burrill) \u4e3b\u6559\u662f\u7f8e\u56fd\u5929\u4e3b\u6559\u4e3b\u6559\u4f1a\u8bae (USCCB) \u7684\u79d8\u4e66\u957f\uff0c\u5b9e\u9645\u4e0a\u662f\u7f8e\u56fd\u6700\u9ad8\u7ea7\u522b\u7684\u975e\u4e3b\u6559\u795e\u7236\uff0c\u4e4b\u524d\u4ece\u6570\u636e\u7ecf\u7eaa\u4eba\u83b7\u5f97\u7684 Grindr \u4f7f\u7528\u8bb0\u5f55\u4e0e\u4ed6\u7684\u516c\u5bd3\u3001\u5de5\u4f5c\u5730\u70b9\u76f8\u5173\u8054\u3001\u5ea6\u5047\u5c4b\u3001\u5bb6\u5ead\u6210\u5458\u7684\u5730\u5740\u7b49\u3002 Grindr \u662f\u4e00\u4e2a\u540c\u6027\u604b\u8054\u64ad\u5e94\u7528\u7a0b\u5e8f\uff0c\u867d\u7136\u663e\u7136 Burrill \u7684\u6240\u6709\u884c\u4e3a\u90fd\u4e0d\u8fdd\u6cd5\uff0c\u4f46\u5929\u4e3b\u6559\u4f1a\u7684\u795e\u804c\u4eba\u5458\u7981\u6b62\u4efb\u4f55\u5f62\u5f0f\u7684\u6027\u5173\u7cfb\u3002 USCCB \u751a\u81f3\u4e0d\u9f13\u52b1\u5929\u4e3b\u6559\u5f92\u53c2\u52a0\u540c\u6027\u604b\u5a5a\u793c\u3002\u4f2f\u91cc\u5c14\u7684\u6848\u4ef6\u201c\u610f\u4e49\u91cd\u5927\u201d\uff0c\u7535\u5b50\u4fe1\u606f\u9690\u79c1\u4e2d\u5fc3\u6267\u884c\u8463\u4e8b\u827e\u4f26\u5df4\u7279\u52d2\u544a\u8bc9 Ars\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u660e\u786e\u800c\u7a81\u51fa\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u6211\u7684\u4e16\u754c\u4e2d\u7684\u4eba\u4eec\u3001\u9690\u79c1\u6743\u5021\u5bfc\u8005\u548c\u4e13\u5bb6\u591a\u5e74\u6765\u4e00\u76f4\u5728\u5c4b\u9876\u4e0a\u5c16\u53eb\u7684\u786e\u5207\u95ee\u9898\uff0c\u5373\u552f\u4e00\u53ef\u8bc6\u522b\u7684\u6570\u636e\u4e0d\u662f\u533f\u540d\u7684\u3002\u201d\u636e\u62a5\u9053\uff0c\u5bfc\u81f4 Burrill \u4e0b\u53f0\u7684\u6570\u636e\u662f\u901a\u8fc7\u5408\u6cd5\u9014\u5f84\u83b7\u5f97\u7684\u3002\u79fb\u52a8\u8fd0\u8425\u5546\u5c06\u4f4d\u7f6e\u6570\u636e\u51fa\u552e\u7ed9\u7ecf\u7eaa\u4eba\uff0c\u7ecf\u7eaa\u4eba\u5c06\u5176\u6c47\u603b\u5e76\u51fa\u552e\u7ed9\u4e00\u7cfb\u5217\u4e70\u5bb6\uff0c\u5305\u62ec\u5e7f\u544a\u5546\u3001\u6267\u6cd5\u90e8\u95e8\u3001\u8def\u8fb9\u670d\u52a1\uff0c\u751a\u81f3\u8d4f\u91d1\u730e\u4eba\u3002\u8fd0\u8425\u5546\u5728 2018 \u5e74\u88ab\u53d1\u73b0\u5411\u7ecf\u7eaa\u4eba\u51fa\u552e\u5b9e\u65f6\u4f4d\u7f6e\u6570\u636e\uff0c\u8fd9\u5f15\u8d77\u4e86\u56fd\u4f1a\u7684\u6124\u6012\u3002\u4f46\u5728\u8fd0\u8425\u5546\u516c\u5f00\u9053\u6b49\u5e76\u627f\u8bfa\u6539\u9769\u8fd9\u79cd\u505a\u6cd5\u540e\uff0c\u8c03\u67e5\u663e\u793a\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u4ecd\u5728\u4e0d\u8be5\u51fa\u73b0\u7684\u5730\u65b9\u51fa\u73b0\u3002\u4eca\u5e74\uff0cT-Mobile \u751a\u81f3\u6269\u5927\u4e86\u5176\u4ea7\u54c1\u8303\u56f4\uff0c\u5c06\u5ba2\u6237\u7684\u7f51\u7edc\u548c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u6570\u636e\u51fa\u552e\u7ed9\u7b2c\u4e09\u65b9\uff0c\u9664\u975e\u4eba\u4eec\u9009\u62e9\u9000\u51fa\u3002\u62ab\u9732 Burrill \u79c1\u4eba\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u60c5\u51b5\u7684\u51fa\u7248\u7269 The Pillar \u662f\u4e00\u4efd\u6db5\u76d6\u5929\u4e3b\u6559\u4f1a\u7684\u901a\u8baf\uff0c\u4f46\u5e76\u672a\u5177\u4f53\u8bf4\u660e\u5b83\u4ece\u4f55\u5904\u6216\u5982\u4f55\u83b7\u53d6 Burrill \u7684\u6570\u636e\u3002\u4f46\u5b83\u786e\u5b9e\u8bf4\u660e\u4e86\u5b83\u5982\u4f55\u5bf9\u805a\u5408\u6570\u636e\u8fdb\u884c\u53bb\u533f\u540d\u5316\uff0c\u4ee5\u5c06 Grindr \u5e94\u7528\u7a0b\u5e8f\u7684\u4f7f\u7528\u4e0e\u4f3c\u4e4e\u662f Burrill \u7684\u624b\u673a\u7684\u8bbe\u5907\u76f8\u5173\u8054\u3002 Pillar \u8868\u793a\uff0c\u5b83\u83b7\u5f97\u4e86 24 \u4e2a\u6708\u7684\u201c\u5546\u4e1a\u5e94\u7528\u4fe1\u53f7\u6570\u636e\u8bb0\u5f55\u201d\uff0c\u6db5\u76d6\u4e86 2018 \u5e74\u30012019 \u5e74\u548c 2020 \u5e74\u7684\u90e8\u5206\u65f6\u95f4\uff0c\u5176\u4e2d\u5305\u62ec Grindr \u4f7f\u7528\u60c5\u51b5\u548c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4f4d\u7f6e\u7684\u8bb0\u5f55\u3002\u8be5\u51fa\u7248\u7269\u5c06\u91cd\u70b9\u653e\u5728 Burrill \u7ecf\u5e38\u51fa\u73b0\u7684\u5730\u5740\u4e0a\uff0c\u5e76\u6311\u51fa\u51fa\u73b0\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u8bbe\u5907\u6807\u8bc6\u7b26\u3002\u4e3b\u8981\u5730\u70b9\u5305\u62ec Burrill \u5728 USCCB \u7684\u529e\u516c\u5ba4\u3001\u4ed6\u5728 USCCB \u62e5\u6709\u7684\u4f4f\u6240\u4ee5\u53ca USCCB \u5728\u4ed6\u51fa\u5e2d\u7684\u5176\u4ed6\u57ce\u5e02\u4e3e\u884c\u7684\u4f1a\u8bae\u548c\u6d3b\u52a8\u3002\u5206\u6790\u8fd8\u8003\u5bdf\u4e86\u66f4\u8fdc\u7684\u5176\u4ed6\u5730\u65b9\uff0c\u5305\u62ec\u4ed6\u7684\u5bb6\u5ead\u6e56\u8fb9\u522b\u5885\u3001\u5bb6\u4eba\u7684\u4f4f\u6240\uff0c\u4ee5\u53ca\u636e\u62a5\u9053\u4ed6\u4f4f\u5728\u5a01\u65af\u5eb7\u661f\u5dde\u5bb6\u4e61\u7684\u4e00\u5957\u516c\u5bd3\u3002\u53bb\u533f\u540d\u5316\u7684\u6570\u636e\u663e\u793a\uff0c\u51fa\u73b0\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u79fb\u52a8\u8bbe\u5907\uff08\u53ef\u80fd\u662f Burrill \u7684\u624b\u673a\uff0cThe Pillar \u8bf4\uff09\u51e0\u4e4e\u6bcf\u5929\u90fd\u5728\u4f7f\u7528 Grindr\u3002\u5b83\u8fd8\u8bf4\uff0c\u4e0e\u7267\u5e08\u7535\u8bdd\u201c\u76f8\u5173\u201d\u7684\u6570\u636e\u8868\u660e\u4ed6\u53bb\u8fc7\u540c\u6027\u604b\u9152\u5427\uff0c\u5305\u62ec\u5728\u51fa\u5dee\u9014\u4e2d\u3002 Pillar \u5728\u53d1\u5e03\u4e4b\u524d\u5c06\u8fd9\u4e00\u4fe1\u606f\u63d0\u4ea4\u7ed9\u4e86 USCCB\uff0c\u6628\u5929\uff0c\u4f1a\u8bae\u5ba3\u5e03 Burrill \u8f9e\u804c\u3002\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a\u6d88\u8d39\u8005\u9690\u79c1\u5de5\u7a0b\u4e3b\u7ba1\u5b89\u5fb7\u70c8\u65af\u00b7\u963f\u5217\u5854 (Andr\u00e9s Arrieta) \u544a\u8bc9 Ars\uff0c\u867d\u7136\u8fd9\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u901a\u8fc7\u6c47\u603b\u6570\u636e\u62ab\u9732\u516c\u4f17\u4eba\u7269\u5728\u7ebf\u6d3b\u52a8\u7684\u6848\u4f8b\uff0c\u4f46\u201c\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u60c5\u51b5\u7ecf\u5e38\u53d1\u751f\u201d\u666e\u901a\u5927\u4f17\u3002 \u201c\u6709\u4e9b\u516c\u53f8\u5229\u7528\u5bfb\u627e\u5e7f\u544a\u6807\u8bc6\u7b26\u80cc\u540e\u7684\u771f\u4eba\u3002\u201d\u6b64\u5916\uff0c\u4ee5 The Pillar \u7684\u65b9\u5f0f\u53bb\u533f\u540d\u5316\u6570\u636e\u975e\u5e38\u5bb9\u6613\u3002 Arrieta \u8bf4\uff0c\u8d2d\u4e70\u6570\u636e\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u5047\u88c5\u81ea\u5df1\u662f\u4e00\u5bb6\u516c\u53f8\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u7b5b\u9009\u6570\u636e\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u6280\u672f\u6280\u80fd\u3002\nArrieta \u8bf4\uff0c\u6765\u81ea Grindr \u7b49\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u4e0d\u4ec5\u6709\u53ef\u80fd\u4fb5\u72af\u4eba\u4eec\u7684\u9690\u79c1\uff0c\u8fd8\u6709\u53ef\u80fd\u4fb5\u72af\u4ed6\u4eec\u7684\u5b89\u5168\u3002 \u201c\u5f53\u4f60\u4e3a\u8fb9\u7f18\u5316\u4eba\u7fa4\u670d\u52a1\u65f6\uff0c\u4ed6\u4eec\u7684\u751f\u6d3b\u5728\u4e16\u754c\u8bb8\u591a\u5730\u533a\u90fd\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\uff0c\u6216\u8005\u4ed6\u4eec\u7684\u5de5\u4f5c\u751a\u81f3\u5728\u7f8e\u56fd\u4e5f\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\uff0c\u4f60\u9700\u8981\u6709\u975e\u5e38\u9ad8\u7684\u9690\u79c1\u548c\u5b89\u5168\u6807\u51c6\u3002\u652f\u67f1\u80fd\u591f\u53bb\u533f\u540d\u5316\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u9996\u5148\u4e0d\u662f\u771f\u6b63\u7684\u533f\u540d\u3002\u4e0e\u4e2a\u4eba\u59d3\u540d\u65e0\u5173\u4f46\u4ecd\u4fdd\u7559\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u6570\u636e\u5c31\u662f\u6240\u8c13\u7684\u201c\u5047\u540d\u6570\u636e\u201d\uff0c\u5df4\u7279\u52d2\u8bf4\u3002\u8981\u771f\u6b63\u533f\u540d\u5316\u6570\u636e\uff0c\u6709\u6709\u51e0\u79cd\u65b9\u6cd5\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u7b56\u7565\u88ab\u79f0\u4e3a\u201c\u5dee\u5f02\u9690\u79c1\u201d\uff0c\u5176\u4e2d\u5c06\u566a\u58f0\u6ce8\u5165\u6570\u636e\u4e2d\uff0c\u8fd9\u4f7f\u5f97\u5b83\u53ef\u7528\u4e8e\u7edf\u8ba1\u76ee\u7684\uff0c\u4f46\u4f1a\u963b\u788d\u5c06\u79bb\u6563\u6570\u636e\u70b9\u4e0e\u4e2a\u4eba\u8054\u7cfb\u8d77\u6765\u7684\u52aa\u529b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5047\u540d\u6570\u636e\u4f7f\u5c06\u4e2a\u4eba\u8bb0\u5f55\u4e0e\u4e2a\u4eba\u76f8\u5173\u8054\u76f8\u5bf9\u5bb9\u6613\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u96c6\u5408\u4e2d\u7684\u5185\u5bb9\u3002\u201c\u5f53\u4f60\u8c08\u8bba\u4f4d\u7f6e\u6570\u636e\u65f6\uff0c\u4ece\u6839\u672c\u4e0a\u4e0d\u53ef\u80fd\u6709\u53ef\u7528\u7684\u5047\u540d\uff0c\u56e0\u4e3a\u4f4d\u7f6e\u6570\u636e\u5370\u8bb0\u662f\u5982\u6b64\u5177\u6709\u542f\u53d1\u6027\uff0c\u201d\u5df4\u7279\u52d2\u8bf4\u3002 \u201c\u4e00\u65e6\u4f4d\u7f6e\u6570\u636e\u4e0e\u8bb0\u5f55\u76f8\u5173\u8054\uff0c\u5c31\u5f88\u5bb9\u6613\u5c06\u5176\u4e0e\u4e2a\u4eba\u8054\u7cfb\u8d77\u6765\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u5927\u591a\u6570\u4eba\u5728\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u57fa\u672c\u4e0a\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6307\u7eb9\u3002\u4ed6\u4eec\u4f4f\u5728\u5bb6\u91cc\uff0c\u53bb\u5de5\u4f5c\uff0c\u53bb\u67d0\u4e9b\u6709\u9650\u7684\u5730\u65b9\u3002\u6709\u7814\u7a76\u8868\u660e\uff0c\u4ec5\u6839\u636e\u6211\u4eec\u5728\u7ed9\u5b9a\u4e00\u5468\u5185\u53bb\u7684\u51e0\u4e2a\u5173\u952e\u4f4d\u7f6e\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u552f\u4e00\u5730\u8bc6\u522b\u51fa\u6765\u3002\u201d\u62dc\u767b\u603b\u7edf\u6700\u8fd1\u7684\u884c\u653f\u547d\u4ee4\u63d0\u8bf7\u6ce8\u610f\u5bf9\u7528\u6237\u6570\u636e\u7684\u76d1\u89c6\u4ee5\u53ca\u4ed6\u5411\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u63d0\u540d Lena Khan\uff0c\u8fd9\u8868\u660e\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u91c7\u53d6\u884c\u52a8\u3002 \u201c\u9700\u8981\u4e3a\u6b64\u7c7b\u6570\u636e\u63d0\u4f9b\u5b9e\u7528\u3001\u6280\u672f\u548c\u6cd5\u5f8b\u4fdd\u62a4\uff0c\u5e76\u4e3a\u4e2a\u4eba\u63d0\u4f9b\u4fdd\u62a4\uff0c\u4ee5\u9632\u6b62\u6b64\u7c7b\u6ee5\u7528\uff0c\u201d\u5df4\u7279\u52d2\u8bf4\u3002", "note_en": "In what appears to be a first, a public figure has been ousted after de-anonymized mobile phone location data was publicly reported, revealing sensitive and previously private details about his life.\n Monsignor Jeffrey Burrill was general secretary of the US Conference of Catholic Bishops (USCCB), effectively the highest-ranking priest in the US who is not a bishop, before records of Grindr usage obtained from data brokers was correlated with his apartment, place of work, vacation home, family members&#39; addresses, and more. Grindr is a gay hookup app, and while apparently none of Burrill\u2019s actions were illegal, any sort of sexual relationship is forbidden for clergy in the Catholic Church. The USCCB goes so far as to  discourage Catholics from even attending gay weddings.\n Burrill\u2019s case is \u201chugely significant,\u201d  Alan Butler, executive director of the Electronic Information Privacy Center, told Ars. \u201cIt\u2019s a clear and prominent example of the exact problem that folks in my world, privacy advocates and experts, have been screaming from the rooftops for years, which is that uniquely identifiable data is not anonymous.\u201d\n  The data that resulted in Burrill\u2019s ouster was  reportedly obtained through legal means. Mobile carriers sold\u2014and still sell\u2014location data to brokers who aggregate it and sell it to a range of buyers, including advertisers,  law enforcement, roadside services, and even  bounty hunters. Carriers were caught in 2018  selling real-time location data to brokers, drawing the ire of Congress. But after carriers issued public mea culpas and promises to reform the practice, investigations have revealed that phone location data is  still popping up in places it shouldn\u2019t. This year,  T-Mobile even broadened its offerings, selling customers&#39; web and app usage data to third parties unless people opt out.\n     The publication that revealed Burrill\u2019s private app usage, The Pillar, a newsletter covering the Catholic Church, did not say exactly where or how it obtained Burrill\u2019s data. But it did say how it de-anonymized aggregated data to correlate Grindr app usage with a device that appears to be Burrill\u2019s phone. The Pillar says it obtained 24 months&#39; worth of \u201ccommercially available records of app signal data\u201d covering portions of 2018, 2019, and 2020, which included records of Grindr usage and locations where the app was used. The publication zeroed in on addresses where Burrill was known to frequent and singled out a device identifier that appeared at those locations. Key locations included Burrill&#39;s office at the USCCB, his USCCB-owned residence, and USCCB meetings and events in other cities where he was in attendance. The analysis also looked at other locations farther afield, including his family lake house, his family members\u2019 residences, and an apartment in his Wisconsin hometown where he reportedly has lived.\n The de-anonymized data revealed that a mobile device that appeared at those locations\u2014likely Burrill\u2019s phone, The Pillar says\u2014used Grindr almost daily. It also says that data \u201ccorrelated\u201d with the priest\u2019s phone suggests that he visited gay bars, including while traveling for work. The Pillar presented this information to the USCCB in advance of publication, and yesterday, the conference  announced Burrill\u2019s resignation.\n  While this might be the first case of a public figure\u2019s online activities being revealed through aggregate data, \u201cit unfortunately happens very often\u201d to the general public,\u00a0 Andr\u00e9s Arrieta, director of consumer privacy engineering at the Electronic Frontier Foundation, told Ars. \u201cThere are companies who capitalize on finding the real person behind the advertising identifiers.\u201d Furthermore, de-anonymizing data in the way The Pillar did is trivially easy. All you need to do to buy the data, Arrieta said, is pretend to be a company. There are no special technical skills required to sift through the data, he added.\n    Data from apps like Grindr have the potential not just to violate people&#39;s privacy, Arrieta said, but their safety, too. &#34;When you are serving to a marginalized population whose lives are literally in danger in many areas of the world, or whose jobs are in danger even in the US, you need to have really high standards of privacy and security.\n The Pillar was able to de-anonymize the data because it wasn\u2019t truly anonymous in the first place. Data that is not connected to a person\u2019s name but still retains a unique identifier is what\u2019s known as &#34;pseudonymous data,&#34; Butler said. To truly anonymize data, there are several approaches. One common tactic is known as &#34;differential privacy,&#34; where noise is injected into the data, which makes it useful for statistical purposes but frustrates efforts to connect discrete data points to individuals. Pseudonymous data, on the other hand, makes associating individual records with an individual relatively easy, depending on what is in the set.\n  \u201cWhen you\u2019re talking about location data, it\u2019s fundamentally not possible to have workable pseudonymity, because location data fingerprints are so revealing,\u201d Butler said. \u201cOnce location data is linked to a record, then it\u2019s going to be easy to link that back to a person,\u201d he said. \u201cMost people have essentially a location fingerprint in their lives. They live at home, they go to work, they go to certain limited places. There have been studies that show that we\u2019re uniquely identifiable based just on a few key location points we go to in a given week.\u201d President Biden\u2019s  recent executive order, which called attention to the surveillance of user data and his  nomination of Lena Khan to the Federal Trade Commission suggests that there may be action coming soon. \u201cThere need to be practical, technical, and legal protections for this type of data, and protections for individuals, to prevent this type of abuse,\u201d Butler said.", "posttime": "2021-07-22 21:34:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7236,priest,\u6570\u636e", "title": "\u5728\u201c\u533f\u540d\u201d\u6570\u636e\u663e\u793a\u6d89\u5acc\u4f7f\u7528 Grindr \u540e\uff0c\u5929\u4e3b\u6559\u795e\u7236\u8f9e\u804c", "title_en": "Catholic priest quits after \u201canonymized\u201d data revealed alleged use of Grindr", "transed": 1, "url": "https://arstechnica.com/tech-policy/2021/07/catholic-priest-quits-after-anonymized-data-revealed-alleged-use-of-grindr/", "via": "", "real_tags": ["\u795e\u7236", "priest", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "0a4d1035667918caafe11e740fb3b66e.png", "infoid": 1068750, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u6b63\u5728\u53d1\u5e03\u7b2c\u4e00\u4e2a 1.0 \u540e\u7248\u672c\uff0c\u52aa\u529b\u5151\u73b0\u6211\u4eec\u6bcf 3 \u4e2a\u6708\u5b9a\u671f\u53d1\u5e03\u4e00\u6b21\u7684\u627f\u8bfa\uff0c\u7531\u4e8e\u4f1a\u8bae\u800c\u6709\u6240\u5ef6\u8fdf\uff0c\u5e76\u7279\u522b\u6ce8\u91cd\u4fdd\u6301\u8bed\u8a00\u7a33\u5b9a\u6027\u3002\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u4e86\u6700\u91cd\u8981\u6216\u6700\u6709\u8da3\u7684\u53d8\u5316\uff0c\u4f46\u6ca1\u6709\u63d0\u5230\u51e0\u4e2a\u9519\u8bef\u4fee\u6b63\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u53d1\u884c\u8bf4\u660e\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5305\u542b\u4e86\u81ea 1.0.0 \u7248\u672c\u4ee5\u6765\u7531 28 \u4e2a\u8d21\u732e\u8005\u53d1\u5e03\u7684 166 \u4e2a PR\u3002\u6211\u4eec\u611f\u8c22\u4e3a\u6539\u8fdb\u8bed\u8a00\u53ca\u5176\u6807\u51c6\u5e93\u6240\u505a\u7684\u6240\u6709\u52aa\u529b\uff01 \u2764\ufe0f Splats \u73b0\u5728\u53ef\u4ee5\u5d4c\u5165\u5230\u53ef\u679a\u4e3e\u7684\u6587\u5b57\u548c\u7c7b\u578b\u5b9a\u4e49\u4e2d (#10429)\u3002\u51e0\u4e2a\u4f8b\u5b50\uff1a t1 = { 1 , &#39;a&#39; } t2 = { true , * t1 } # =&gt; {true, 1, &#39;a&#39;} typeof ( t2 ) # =&gt; Tuple(Bool, Int32, Char) def f1 ( x : { Bool , * { Int32 , Char }}); end # \u4e5f\u9002\u7528\u4e8e\u7c7b\u578b\u6ce8\u91ca def f2 ( x : Tuple ( Bool , * { Int32 , Char })); end ae = &#39;a&#39; .. &#39;e&#39; ccae = [ &#39;&lt;&#39; , * ae , &#39;&gt;&#39; ] # =&gt; [&#39;&lt;&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39; e&#39;, &#39;&gt;&#39;] a = 1 .. 10 b = 5 .. 15 Set { * a , * b } # =&gt; Set{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15} while \u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u73b0\u5728\u662f\u4e3b\u4f53\u5185\u6240\u6709 break \u8868\u8fbe\u5f0f\u7684\u5e76\u96c6\uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u662f\u771f\u6b63\u7684\u6587\u5b57\uff0c\u5219\u52a0\u4e0a Nil\uff1b\u5982\u679c\u6761\u4ef6\u5931\u8d25\uff0cwhile \u8868\u8fbe\u5f0f\u5c06\u8fd4\u56de nil\u3002\u4e2d\u65ad\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u8ba1\u7b97\u7c7b\u4f3c\u4e8e\u5757\u5185\u7684\u4e2d\u65ad\u6216\u8fd4\u56de\uff08\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4e3a Nil\uff0c\u5982\u679c\u6709\u591a\u4e2a\u503c\uff0c\u5219\u4e3a\u5143\u7ec4\uff09\uff08#10566\uff09\u3002 # \u9996\u5148 STDIN \u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u884c first_non_blank_line = while line = \u5f97\u5230\u65ad\u884c\uff0c\u9664\u975e line \u3002\u7a7a\u767d\u7684\uff1f end puts first_non_blank_line \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u5b9e\u4f8b\u53d8\u91cf@top_level (#10682) \u8bbf\u95ee\u9876\u7ea7\u6a21\u5757\uff1a\nNumberLiteral \u73b0\u5728\u5305\u542b\u4e00\u4e2a to_number \u65b9\u6cd5\u6765\u83b7\u53d6\u7eaf\u6570\u5b57\uff0c\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u4e32\u5316 #10802\uff1a\u6211\u4eec\u5305\u542b\u4e86\u4e00\u4e2a\u5c0f\u7684\u7a81\u7834\u6027\u66f4\u6539\uff0c\u56e0\u4e3a\u6587\u6863\u548c\u5173\u4e8e Path#global? \u7684\u4ee3\u7801\u4e4b\u95f4\u5b58\u5728\u4e0d\u5339\u914d\u3002\u4ee5\u524d\u7684 Path#global \u73b0\u5728\u5df2\u88ab\u5f03\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f Path#global?\uff0c\u5176\u540d\u79f0\u66f4\u80fd\u4ee3\u8868\u5b83\uff08#10812\uff09\u3002\u6709\u4e00\u4e2a\u65b0\u7684\u5b8f\u65b9\u6cd5 ASTNode#nil\uff1f\u7528\u4e8e\u67e5\u8be2\u5bf9\u8c61\u662f NilLiteral \u8fd8\u662f Nop (#10850, #10616)\u3002\u6709\u4e00\u4e9b\u66f4\u6539\u4e0d\u5e94\u8be5\u5bf9\u7528\u6237\u4ea7\u751f\u76f4\u63a5\u5f71\u54cd\u3002\u9700\u8981\u6ce8\u610f\u7684\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u4e3a\u4e86\u5e2e\u52a9\u83b7\u5f97\u66f4\u597d\u7684\u9519\u8bef\u6d88\u606f\u548c\u6587\u6863\uff0c\u4e00\u4e9b\u65b9\u6cd5\u4f7f\u7528\u9884\u671f\u7c7b\u578b\u8fdb\u884c\u4e86\u6ce8\u91ca\u3002\u6dfb\u52a0\u952e\u5165\u6ce8\u91ca\u53ef\u80fd\u4f1a\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7834\u574f\u73b0\u6709\u4ee3\u7801\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u7acb\u5373\u544a\u8bc9\u6211\u4eec\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6b63\u5728\u589e\u52a0\u5bf9\u539f\u751f Windows \u7684\u652f\u6301\uff0c\u8fd9\u9700\u8981\u8fdb\u884c\u591a\u6b21\u91cd\u6784\u3002\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 new \u4ece\u4e0d\u540c\u7684\u8868\u793a\u4e2d\u521b\u5efa\u6570\u5b57\uff0c\u5982 Float32.new(&quot;1.1&quot;, whitespace:false) ((#10422)\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u65b0\u7684 Steppable \u6a21\u5757\u6982\u62ec\u4e86 Number#step\uff0c\u8be5\u6a21\u5757\u5305\u542b\u5728Char\u3001Number\u3001Time \u548c Time::Span (#10279). \u6700\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 #truncate \u548c Array\uff0c\u6709\u6548\u5730\u4ece\u4e24\u7aef\u79fb\u9664\u5143\u7d20 (#10712)\u3002\n\u6bb5\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u73b0\u5728\u5728 Crystal \u4e2d\u5b9e\u73b0\uff0c\u5b9e\u9645\u4e0a\u610f\u5473\u7740 Crystal \u7684\u7f16\u8bd1\u8fc7\u7a0b\u66f4\u7b80\u5355\uff1a\u5b83\u4e0d\u9700\u8981\u4ee5\u524d\u7684\u5916\u90e8 libcrystal\u3002\u5bf9\u4e8e\u5305\u7ef4\u62a4\u8005\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u6784\u5efa libcrystal.a\uff08\u5b83\u662f make deps \u914d\u65b9\u7684\u4e00\u90e8\u5206\uff09\u73b0\u5728\u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002\u6b64\u5e93\u7684 C \u4ee3\u7801\u5df2\u88ab\u5220\u9664\uff0c\u9700\u8981\u66f4\u65b0\u6253\u5305\u8bf4\u660e\u3002\u6784\u5efa\u4efb\u610f Crystal \u7a0b\u5e8f\u4e0d\u518d\u9700\u8981 make deps\uff1b\u73b0\u5728\u5b83\u53ea\u6784\u5efa llvm_ext.a\uff0c\u53ea\u9700\u8981\u94fe\u63a5\u5230 LLVM\uff08\u4f8b\u5982\u5728\u6784\u5efa\u7f16\u8bd1\u5668\u672c\u8eab\u65f6\uff09\u3002\u611f\u8c22 84codes\u3001\u5c3c\u53e4\u62c9\u6c7d\u8f66\u516c\u53f8\u548c\u6240\u6709\u5176\u4ed6\u8d5e\u52a9\u5546\u7684\u6301\u7eed\u652f\u6301\uff0c\u6211\u4eec\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u5207\u3002\u4e3a\u4e86\u4fdd\u6301\u548c\u52a0\u5feb\u53d1\u5c55\u901f\u5ea6\uff0c\u6350\u8d60\u548c\u8d5e\u52a9\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002 OpenCollective \u53ef\u7528\u4e8e\u6b64\u76ee\u7684\u3002\u5982\u679c\u60a8\u60f3\u6210\u4e3a\u76f4\u63a5\u8d5e\u52a9\u5546\u6216\u5bfb\u627e\u5176\u4ed6\u65b9\u5f0f\u6765\u652f\u6301 Crystal\uff0c\u8bf7\u8054\u7cfb Crystal@manas.tech\u3002\u6211\u4eec\u63d0\u524d\u611f\u8c22\u60a8\uff01\u6211\u4eec\u6b63\u5728\u53d1\u5e03\u7b2c\u4e00\u4e2a 1.0 \u540e\u7248\u672c\uff0c\u52aa\u529b\u5151\u73b0\u6211\u4eec\u6bcf 3 \u4e2a\u6708\u5b9a\u671f\u53d1\u5e03\u4e00\u6b21\u7684\u627f\u8bfa\uff0c\u7531\u4e8e\u4f1a\u8bae\u800c\u6709\u6240\u5ef6\u8fdf\uff0c\u5e76\u7279\u522b\u6ce8\u91cd\u4fdd\u6301\u8bed\u8a00\u7a33\u5b9a\u6027\u3002\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u4e86\u6700\u91cd\u8981\u6216\u6700\u6709\u8da3\u7684\u53d8\u5316\uff0c\u4f46\u6ca1\u6709\u63d0\u5230\u51e0\u4e2a\u9519\u8bef\u4fee\u6b63\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u53d1\u884c\u8bf4\u660e\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5305\u542b\u4e86\u81ea 1.0.0 \u7248\u672c\u4ee5\u6765\u7531 28 \u4e2a\u8d21\u732e\u8005\u53d1\u5e03\u7684 166 \u4e2a PR\u3002\u6211\u4eec\u611f\u8c22\u4e3a\u6539\u8fdb\u8bed\u8a00\u53ca\u5176\u6807\u51c6\u5e93\u6240\u505a\u7684\u6240\u6709\u52aa\u529b\uff01 \u2764\ufe0f Splats \u73b0\u5728\u53ef\u4ee5\u5d4c\u5165\u5230\u53ef\u679a\u4e3e\u7684\u6587\u5b57\u548c\u7c7b\u578b\u5b9a\u4e49\u4e2d (#10429)\u3002\u51e0\u4e2a\u4f8b\u5b50\uff1a t1 = { 1 , &#39;a&#39; } t2 = { true , * t1 } # =&gt; {true, 1, &#39;a&#39;} typeof ( t2 ) # =&gt; Tuple(Bool, Int32, Char) def f1 ( x : { Bool , * { Int32 , Char }}); end # \u4e5f\u9002\u7528\u4e8e\u7c7b\u578b\u6ce8\u91ca def f2 ( x : Tuple ( Bool , * { Int32 , Char })); end ae = &#39;a&#39; .. &#39;e&#39; ccae = [ &#39;&lt;&#39; , * ae , &#39;&gt;&#39; ] # =&gt; [&#39;&lt;&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39; e&#39;, &#39;&gt;&#39;] a = 1 .. 10 b = 5 .. 15 Set { * a , * b } # =&gt; Set{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15} while \u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u73b0\u5728\u662f\u4e3b\u4f53\u5185\u6240\u6709 break \u8868\u8fbe\u5f0f\u7684\u5e76\u96c6\uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u662f\u771f\u6b63\u7684\u6587\u5b57\uff0c\u5219\u52a0\u4e0a Nil\uff1b\u5982\u679c\u6761\u4ef6\u5931\u8d25\uff0cwhile \u8868\u8fbe\u5f0f\u5c06\u8fd4\u56de nil\u3002\u4e2d\u65ad\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u8ba1\u7b97\u7c7b\u4f3c\u4e8e\u5757\u5185\u7684\u4e2d\u65ad\u6216\u8fd4\u56de\uff08\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4e3a Nil\uff0c\u5982\u679c\u6709\u591a\u4e2a\u503c\uff0c\u5219\u4e3a\u5143\u7ec4\uff09\uff08#10566\uff09\u3002\n# \u9996\u5148 STDIN \u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u884c first_non_blank_line = while line = \u5f97\u5230\u65ad\u884c\uff0c\u9664\u975e line \u3002\u7a7a\u767d\u7684\uff1f end puts first_non_blank_line \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u5b9e\u4f8b\u53d8\u91cf@top_level (#10682) \u8bbf\u95ee\u9876\u5c42\u6a21\u5757\uff1aNumberLiteral \u73b0\u5728\u5305\u542b\u4e00\u4e2a to_number \u65b9\u6cd5\u6765\u83b7\u53d6\u7eaf\u6570\u5b57\uff0c\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u4e32\u5316 #10802\uff1a\u6211\u4eec\u5305\u542b\u4e86\u4e00\u4e2a\u5c0f\u7684\u7a81\u7834\u6027\u53d8\u5316\uff0c\u56e0\u4e3a\u6587\u6863\u548c\u5173\u4e8e Path#global? \u7684\u4ee3\u7801\u4e0d\u5339\u914d\u3002\u4ee5\u524d\u7684 Path#global \u73b0\u5728\u5df2\u88ab\u5f03\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f Path#global?\uff0c\u5176\u540d\u79f0\u66f4\u80fd\u4ee3\u8868\u5b83\uff08#10812\uff09\u3002\u6709\u4e00\u4e2a\u65b0\u7684\u5b8f\u65b9\u6cd5 ASTNode#nil\uff1f\u7528\u4e8e\u67e5\u8be2\u5bf9\u8c61\u662f NilLiteral \u8fd8\u662f Nop (#10850, #10616)\u3002\u6709\u4e00\u4e9b\u66f4\u6539\u4e0d\u5e94\u8be5\u5bf9\u7528\u6237\u4ea7\u751f\u76f4\u63a5\u5f71\u54cd\u3002\u9700\u8981\u6ce8\u610f\u7684\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u4e3a\u4e86\u5e2e\u52a9\u83b7\u5f97\u66f4\u597d\u7684\u9519\u8bef\u6d88\u606f\u548c\u6587\u6863\uff0c\u4e00\u4e9b\u65b9\u6cd5\u4f7f\u7528\u9884\u671f\u7c7b\u578b\u8fdb\u884c\u4e86\u6ce8\u91ca\u3002\u6dfb\u52a0\u952e\u5165\u6ce8\u91ca\u53ef\u80fd\u4f1a\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7834\u574f\u73b0\u6709\u4ee3\u7801\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u7acb\u5373\u544a\u8bc9\u6211\u4eec\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6b63\u5728\u589e\u52a0\u5bf9\u539f\u751f Windows \u7684\u652f\u6301\uff0c\u8fd9\u9700\u8981\u8fdb\u884c\u591a\u6b21\u91cd\u6784\u3002\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 new \u4ece\u4e0d\u540c\u7684\u8868\u793a\u5f62\u5f0f\u521b\u5efa\u6570\u5b57\uff0c\u5982 Float32.new(&quot;1.1&quot;, whitespace:false) ((#10422)\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u65b0\u7684 Steppable \u6a21\u5757\u6982\u62ec\u4e86 Number#step\uff0c\u8be5\u6a21\u5757\u5305\u542b\u5728 Char\u3001Number\u3001Time \u548c Time::Span (#10279) \u4e2d\u3002\u6700\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 #truncate \u548c Array\uff0c\u6709\u6548\u5730\u4ece\u4e24\u7aef\u5220\u9664\u5143\u7d20 (#10712)\u3002\u6bb5\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u73b0\u5728\u5728 Crystal \u4e2d\u5b9e\u73b0\uff0c\u5b9e\u9645\u4e0a\u610f\u5473\u7740 Crystal \u7684\u7f16\u8bd1\u8fc7\u7a0b\u66f4\u7b80\u5355\uff1a\u5b83\u4e0d\u9700\u8981\u4ee5\u524d\u7684\u5916\u90e8 libcrystal\u3002\u5bf9\u4e8e\u5305\u7ef4\u62a4\u8005\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u6784\u5efa libcrystal.a\uff08\u5b83\u662f make deps \u914d\u65b9\u7684\u4e00\u90e8\u5206\uff09\u73b0\u5728\u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002\u6b64\u5e93\u7684 C \u4ee3\u7801\u5df2\u88ab\u5220\u9664\uff0c\u9700\u8981\u66f4\u65b0\u6253\u5305\u8bf4\u660e\u3002\u6784\u5efa\u4efb\u610f Crystal \u7a0b\u5e8f\u4e0d\u518d\u9700\u8981 make deps\uff1b\u73b0\u5728\u5b83\u53ea\u6784\u5efa llvm_ext.a\uff0c\u53ea\u9700\u8981\u94fe\u63a5\u5230 LLVM\uff08\u4f8b\u5982\u5728\u6784\u5efa\u7f16\u8bd1\u5668\u672c\u8eab\u65f6\uff09\u3002\u611f\u8c22 84codes\u3001\u5c3c\u53e4\u62c9\u6c7d\u8f66\u516c\u53f8\u548c\u6240\u6709\u5176\u4ed6\u8d5e\u52a9\u5546\u7684\u6301\u7eed\u652f\u6301\uff0c\u6211\u4eec\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u5207\u3002\u4e3a\u4e86\u4fdd\u6301\u548c\u52a0\u5feb\u53d1\u5c55\u901f\u5ea6\uff0c\u6350\u8d60\u548c\u8d5e\u52a9\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002 OpenCollective \u53ef\u7528\u4e8e\u6b64\u76ee\u7684\u3002\u5982\u679c\u60a8\u60f3\u6210\u4e3a\u76f4\u63a5\u8d5e\u52a9\u5546\u6216\u5bfb\u627e\u5176\u4ed6\u65b9\u5f0f\u6765\u652f\u6301 Crystal\uff0c\u8bf7\u8054\u7cfb Crystal@manas.tech\u3002\u6211\u4eec\u63d0\u524d\u611f\u8c22\u60a8\uff01\u7531 Disqus \u63d0\u4f9b\u652f\u6301\u7684\u8bc4\u8bba", "note_en": "We are releasing the first post-1.0 release, making efforts to keep our promise of making regular releases each 3 months, a bit delayed because of the  conference, and with special focus on keeping the language stability. Below we list the most important or interesting changes, without mentioning the several bugfixes. For details visit the  release\u2019s notes.\n  In this release we included  166 PRs since the 1.0.0 release by 28 contributors. We thank all the effort put into improving the language and its stdlib! \u2764\ufe0f\n  Splats can now be embedded in enumerable literals and in type definitions ( #10429). A few examples:\n t1  =  { 1 ,  &#39;a&#39; } t2  =  { true ,  * t1 }  # =&gt; {true, 1, &#39;a&#39;} typeof ( t2 )  # =&gt; Tuple(Bool, Int32, Char) def  f1 ( x  :  { Bool ,  * { Int32 ,  Char }});  end  # Works in type annotations too def  f2 ( x  :  Tuple ( Bool ,  * { Int32 ,  Char }));  end ae  =  &#39;a&#39; .. &#39;e&#39; ccae  =  [ &#39;&lt;&#39; ,  * ae ,  &#39;&gt;&#39; ]  # =&gt; [&#39;&lt;&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;&gt;&#39;] a  =  1 .. 10 b  =  5 .. 15 Set { * a ,  * b }  # =&gt; Set{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}\n The type of a while expression is now the union of all break expressions within the body, plus  Nil if the condition isn\u2019t exactly the  true literal; the while expression returns  nil if the condition fails. The type of a break expression is computed similarly to a break inside a block or a return ( Nil if empty,  Tuple if multiple values) ( #10566).\n # First the first non-blank line in STDIN first_non_blank_line  =  while  line  =  gets  break  line  unless  line . blank?  end puts  first_non_blank_line\n  It is now possible to access the top level module with the special instance variable  @top_level ( #10682):\n  NumberLiteral now includes a  to_number method to obtain the pure number, without any  stringification  #10802:\n  We included a small breaking change, as there was a mismatch between the documentation and the code regarding  Path#global?. The former  Path#global is now deprecated in favor of  Path#global?, whose name better represents it ( #10812).\n There is a new macro method  ASTNode#nil? for querying if an object is the  NilLiteral or  Nop ( #10850,  #10616).\n  There were several changes that are not supposed to have a direct impact on the users. The most important one to note is that to help get better error messages and documentation, several methods were annotated with expected types. Adding typing annotations might break existing code in specific scenarios so, if this happens to you, please let us now. Also, we are growing the native Windows support, requiring several refactors.\n  It is now possible to create numbers from different representations using  new, as in  Float32.new(&#34;1.1&#34;, whitespace:false) (( #10422).\n      Also, we generalized  Number#step with a new   Steppable module, that is included in  Char,  Number,  Time and  Time::Span ( #10279).\n Finally, it is now possible to  #truncate and  Array, to efficiently remove elements from both ends ( #10712).\n        The segfault handler is now implemented in Crystal, in practice meaning that the compilation process of Crystal is simpler: it does not require the former external  libcrystal. For package maintainers, this means building  libcrystal.a (which was part of the  make deps recipe) is obsolete now. The C code for this library has been removed and packaging instructions need to be updated.  make deps is no longer necessary for building arbitrary Crystal programs; now it only builds  llvm_ext.a, only required for linking against LLVM (for example when building the compiler itself).\n   We have been able to do all of this thanks to the continued support of  84codes,  Nikola Motor Company and every other  sponsor. To maintain and increase the development pace, donations and sponsorships are essential.  OpenCollective is available for that. Reach out to  crystal@manas.tech if you\u2019d like to become a direct sponsor or find other ways to support Crystal. We thank you in advance!\n  We are releasing the first post-1.0 release, making efforts to keep our promise of making regular releases each 3 months, a bit delayed because of the  conference, and with special focus on keeping the language stability. Below we list the most important or interesting changes, without mentioning the several bugfixes. For details visit the  release\u2019s notes.\n  In this release we included  166 PRs since the 1.0.0 release by 28 contributors. We thank all the effort put into improving the language and its stdlib! \u2764\ufe0f\n  Splats can now be embedded in enumerable literals and in type definitions ( #10429). A few examples:\n t1  =  { 1 ,  &#39;a&#39; } t2  =  { true ,  * t1 }  # =&gt; {true, 1, &#39;a&#39;} typeof ( t2 )  # =&gt; Tuple(Bool, Int32, Char) def  f1 ( x  :  { Bool ,  * { Int32 ,  Char }});  end  # Works in type annotations too def  f2 ( x  :  Tuple ( Bool ,  * { Int32 ,  Char }));  end ae  =  &#39;a&#39; .. &#39;e&#39; ccae  =  [ &#39;&lt;&#39; ,  * ae ,  &#39;&gt;&#39; ]  # =&gt; [&#39;&lt;&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;&gt;&#39;] a  =  1 .. 10 b  =  5 .. 15 Set { * a ,  * b }  # =&gt; Set{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}\n The type of a while expression is now the union of all break expressions within the body, plus  Nil if the condition isn\u2019t exactly the  true literal; the while expression returns  nil if the condition fails. The type of a break expression is computed similarly to a break inside a block or a return ( Nil if empty,  Tuple if multiple values) ( #10566).\n # First the first non-blank line in STDIN first_non_blank_line  =  while  line  =  gets  break  line  unless  line . blank?  end puts  first_non_blank_line\n  It is now possible to access the top level module with the special instance variable  @top_level ( #10682):\n  NumberLiteral now includes a  to_number method to obtain the pure number, without any  stringification  #10802:\n  We included a small breaking change, as there was a mismatch between the documentation and the code regarding  Path#global?. The former  Path#global is now deprecated in favor of  Path#global?, whose name better represents it ( #10812).\n There is a new macro method  ASTNode#nil? for querying if an object is the  NilLiteral or  Nop ( #10850,  #10616).\n  There were several changes that are not supposed to have a direct impact on the users. The most important one to note is that to help get better error messages and documentation, several methods were annotated with expected types. Adding typing annotations might break existing code in specific scenarios so, if this happens to you, please let us now. Also, we are growing the native Windows support, requiring several refactors.\n  It is now possible to create numbers from different representations using  new, as in  Float32.new(&#34;1.1&#34;, whitespace:false) (( #10422).\n      Also, we generalized  Number#step with a new   Steppable module, that is included in  Char,  Number,  Time and  Time::Span ( #10279).\n Finally, it is now possible to  #truncate and  Array, to efficiently remove elements from both ends ( #10712).\n        The segfault handler is now implemented in Crystal, in practice meaning that the compilation process of Crystal is simpler: it does not require the former external  libcrystal. For package maintainers, this means building  libcrystal.a (which was part of the  make deps recipe) is obsolete now. The C code for this library has been removed and packaging instructions need to be updated.  make deps is no longer necessary for building arbitrary Crystal programs; now it only builds  llvm_ext.a, only required for linking against LLVM (for example when building the compiler itself).\n   We have been able to do all of this thanks to the continued support of  84codes,  Nikola Motor Company and every other  sponsor. To maintain and increase the development pace, donations and sponsorships are essential.  OpenCollective is available for that. Reach out to  crystal@manas.tech if you\u2019d like to become a direct sponsor or find other ways to support Crystal. We thank you in advance!\n  comments powered by  Disqus", "posttime": "2021-07-22 21:34:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c34\u6676,crystal,\u73b0\u5728", "title": "\u6c34\u6676 1.1.0", "title_en": "Crystal 1.1.0", "transed": 1, "url": "https://crystal-lang.org/2021/07/16/1.1.0-released.html", "via": "", "real_tags": ["\u6c34\u6676", "crystal", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068749, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u516b\u4e2a\u6708\u7684\u6f2b\u957f\u7b49\u5f85\uff0cNature \u73b0\u5728\u53d1\u5e03\u4e86 AlphaFold 2 \u8bba\u6587\u3002\u6b63\u6587\u6216\u591a\u6216\u5c11\u5730\u62a5\u544a\u4e86\u6211\u4eec\u8fd1\u4e00\u5e74\u6765\u6240\u77e5\u9053\u7684\u5185\u5bb9\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u82b1\u7d6e\uff0c\u5c3d\u7ba1\u5728\u8865\u5145\u4fe1\u606f\u4e2d\u4f34\u968f\u7740\u5bf9\u67b6\u6784\u7684\u7ec6\u81f4\u63cf\u8ff0\u3002\u4e5f\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4f5c\u8005\u5df2\u7ecf\u5728 Github \u4e0a\u53d1\u5e03\u4e86\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u5305\u62ec\u8fd0\u884c\u7ba1\u9053\u7684\u6240\u6709\u7ec6\u8282\u3002\u8fd9\u6b21\u6ca1\u6709\u5c0f\u5b57\uff1a\u60a8\u53ef\u4ee5\u5bf9\u4efb\u4f55\u86cb\u767d\u8d28\u8fdb\u884c\u63a8\u7406\uff08\u6211\u5df2\u7ecf\u68c0\u67e5\u8fc7\uff01\uff09\u3002\u4f60\u6ca1\u6709\u542c\u5230\u8fd9\u4e2a\u6d88\u606f\u5417\uff1f\u8ba9\u6211\u5237\u65b0\u4f60\u7684\u8bb0\u5fc6\u3002 2020 \u5e74 11 \u6708\uff0c\u6765\u81ea\u8c37\u6b4c DeepMind \u7684\u4eba\u5de5\u667a\u80fd\u79d1\u5b66\u5bb6\u56e2\u961f\u65e0\u53ef\u4e89\u8bae\u5730\u8d62\u5f97\u4e86\u7b2c 14 \u5c4a\u7ed3\u6784\u9884\u6d4b\u5173\u952e\u8bc4\u4f30\u7ade\u8d5b\uff0c\u8fd9\u662f\u4e00\u9879\u4e24\u5e74\u4e00\u5ea6\u7684\u76f2\u6d4b\uff0c\u8ba1\u7b97\u751f\u7269\u5b66\u5bb6\u8bd5\u56fe\u9884\u6d4b\u51e0\u79cd\u86cb\u767d\u8d28\u7684\u7ed3\u6784\uff0c\u8fd9\u4e9b\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u5df2\u901a\u8fc7\u5b9e\u9a8c\u786e\u5b9a\u4f46\u672a\u516c\u5f00\u53d1\u5e03\u3002\u4ed6\u4eec\u7684\u7ed3\u679c\u5982\u6b64\u60ca\u4eba\uff0c\u800c\u4e14\u8fd9\u4e2a\u95ee\u9898\u5bf9\u751f\u7269\u5b66\u6765\u8bf4\u5982\u6b64\u91cd\u8981\uff0c\u4ee5\u81f3\u4e8e\u6574\u4e2a\u4e16\u754c\u90fd\u5927\u5403\u4e00\u60ca\uff0c\u6574\u4e2a\u5b66\u79d1\u2014\u2014\u8ba1\u7b97\u751f\u7269\u5b66\u2014\u2014\u90fd\u60f3\u77e5\u9053\u521a\u521a\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u73b0\u5728\u6587\u7ae0\u5df2\u7ecf\u4e0a\u7ebf\uff0c\u5174\u594b\u4e4b\u60c5\u6ea2\u4e8e\u8a00\u8868\u3002\u6211\u4eec\u6709 70 \u591a\u9875\u671f\u5f85\u5df2\u4e45\u7684\u7b54\u6848\uff0c\u4ee5\u53ca\u6570\u5343\u884c\u4ee3\u7801\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u5b83\u4eec\u5c06\u6210\u4e3a\u8ba1\u7b97\u751f\u7269\u5b66\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002\u7136\u800c\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u6709\u8bb8\u591a\u65b0\u95ee\u9898\u3002\u65b0\u95fb\u7206\u51fa\u524d\u7684\u79d8\u8bc0\u662f\u4ec0\u4e48\uff0c\u4e3a\u4f55\u5982\u6b64\u6709\u6548\uff1f\u5b83\u662f\u4e00\u6bb5\u666e\u901a\u7528\u6237\u53ef\u4ee5\u5b9e\u9645\u8fd0\u884c\u7684\u4ee3\u7801\u5417\uff1f AlphaFold 2 \u7684\u7f3a\u70b9\u662f\u4ec0\u4e48\uff1f\u800c\u4e14\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u5bf9\u8ba1\u7b97\u751f\u7269\u5b66\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u6211\u4eec\u6240\u6709\u4eba\uff1f\u5728\u8fd9\u7bc7\u8bc4\u8bba\u4e2d\uff0c\u6211\u7684\u76ee\u6807\u662f\u4f5c\u4e3a\u6211\u516b\u4e2a\u6708\u524d\u535a\u5ba2\u6587\u7ae0\u7684\u5ef6\u7eed\uff0c\u6211\u8bd5\u56fe\u89e3\u51b3\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002\u9996\u5148\uff0c\u6211\u63d0\u4f9b\u4e86 AlphaFold 2 \u67b6\u6784\u7684\u9e1f\u77b0\u56fe\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6280\u672f\u8bf4\u660e\uff08SI \u5c3d\u53ef\u80fd\u8be6\u7ec6\uff0c\u751a\u81f3\u4ee3\u7801\u4e5f\u5f15\u7528\u4e86\u5176\u4e2d\u7684\u4e0d\u540c\u90e8\u5206\uff09\uff0c\u800c\u662f\u4fa7\u91cd\u4e8e\u67b6\u6784\u80cc\u540e\u7684\u76f4\u89c9\u3002\u6211\u5e0c\u671b\u8fd9\u80fd\u8986\u76d6\u90a3\u4e9b\u6ca1\u6709\u6df1\u5ea6\u5b66\u4e60\u548c\u751f\u7269\u4fe1\u606f\u5b66\u80cc\u666f\u4f46\u60f3\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u7684\u4eba\uff1b\u4ee5\u53ca\u90a3\u4e9b\u53ef\u80fd\u5177\u6709\u6b63\u786e\u80cc\u666f\u4f46\u5e0c\u671b\u5728\u6df1\u5165\u7814\u7a76\u4e4b\u524d\u5bf9\u5168\u6587\u8fdb\u884c\u6982\u8ff0\u7684\u4eba\u3002\u6839\u636e\u51b0\u51b7\u3001\u575a\u786c\u7684\u4e8b\u5b9e\uff0c\u6211\u5bf9\u5efa\u7b51\u80cc\u540e\u7684\u60f3\u6cd5\u8fdb\u884c\u4e86\u5b8c\u5168\u4e2a\u4eba\u7684\u8bc4\u4f30\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4f1a\u89e3\u91ca\u6211\u8ba4\u4e3a\u54ea\u4e9b\u60f3\u6cd5\u662f AlphaFold 2 \u6210\u529f\u7684\u5173\u952e\uff0c\u5e76\u63a8\u6d4b\u54ea\u4e9b\u56e0\u7d20\u4f7f\u8fd9\u4e2a\u56e2\u961f\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u800c\u5176\u4ed6\u8bb8\u591a\u4eba\u90fd\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u662f\u4e00\u4e2a\u6709\u5f3a\u70c8\u610f\u89c1\u7684\u4eba\uff0c\u4f46\u4ecd\u7136\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\u6211\u7684\u60f3\u6cd5\u53ef\u80fd\u5b8c\u5168\u671d\u7740\u9519\u8bef\u7684\u65b9\u5411\u53d1\u5c55\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u8ba4\u4e3a AlphaFold 2 \u7684\u6545\u4e8b\u63d0\u51fa\u4e86\u5f88\u591a\u6211\u4eec\u4f5c\u4e3a\u793e\u533a\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u503c\u5f97\u5728\u67d0\u5904\u9002\u5f53\u8003\u8651\u3002\u6700\u540e\uff0c\u6211\u91cd\u65b0\u5ba1\u89c6\u4e86\u6211\u516b\u4e2a\u6708\u524d\u63d0\u51fa\u7684\u4e00\u4e9b\u95ee\u9898\u3002\u8bba\u6587\u6216\u4ee3\u7801\u5df2\u7ecf\u56de\u7b54\u4e86\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u8fd0\u884c\u4ee3\u7801\u7684\u9650\u5236\u662f\u4ec0\u4e48\uff09\u3002\u8fd8\u6709\u4e00\u4e9b\u6ca1\u6709\u660e\u786e\u89e3\u51b3\uff0c\u4f46\u6211\u6709\u673a\u4f1a\u66f4\u6df1\u5165\u5730\u601d\u8003\u5b83\u4eec\uff0c\u6211\u8ba4\u4e3a\u6211\u6709\u4e00\u4e9b\u65b0\u9896\u7684\u89c1\u89e3\u3002\u8fd8\u6709\u4e00\u4e9b\u662f\u7531\u65b0\u4fe1\u606f\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5fc5\u987b\u4e00\u8d77\u56de\u7b54\u3002\u6211\u5411\u81ea\u5df1\u4fdd\u8bc1\uff0c\u8fd9\u6b21\u6211\u4f1a\u66f4\u7b80\u6d01\u2014\u2014\u6bd5\u7adf\u51e0\u4e2a\u6708\u540e\u6211\u5e94\u8be5\u5199\u6211\u7684\u535a\u58eb\u8bba\u6587\uff0c\u6211\u771f\u7684\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u53ef\u4ee5\u817e\u51fa\u65f6\u95f4\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u662f\u5426\u7ba1\u7406\u3002\n\u76f4\u5230\u5468\u56db\u65e9\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u4f73\u7b54\u6848\u662f\u4e00\u5f20\u56fe\u7247\uff0c\u65e9\u5728 11 \u6708\uff0cDeepMind \u7684\u65b0\u95fb\u7a3f\u4e2d\u5c31\u5df2\u53d1\u5e03\u3002\u8fd9\u79cd\u6a21\u5f0f\u5728\u5f53\u65f6\u5728\u4e92\u8054\u7f51\u4e0a\u6d41\u4f20\uff0c\u5e76\u4e14\u4ece\u90a3\u65f6\u8d77\u5c31\u51fa\u73b0\u5728\u4f17\u591a\u4f1a\u8bae\u548c\u8ba8\u8bba\u7ec4\u4e2d\u3002\u4f46\u662f\uff0c\u9057\u61be\u7684\u662f\uff0c\u5b83\u7f3a\u4e4f\u7ec6\u8282\uff0c\u5373\u4f7f\u662f\u77e5\u8bc6\u6700\u6e0a\u535a\u7684\u6df1\u5ea6\u5b66\u4e60\u4e13\u5bb6\u4e5f\u53ea\u80fd\u505a\u51fa\u6709\u6839\u636e\u7684\u731c\u6d4b\u3002 Nature \u6587\u7ae0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u76f8\u4f3c\u4f46\u7a0d\u5fae\u8be6\u7ec6\u7684\u56fe\u8868\uff0c\u6982\u8ff0\u4e86\u67b6\u6784\u7684\u4e0d\u540c\u90e8\u5206\u3002\u603b\u4f53\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u5c06\u5c1d\u8bd5\u7528\u51e0\u884c\u6765\u52fe\u52d2\u5b83\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089\u6df1\u5ea6\u5b66\u4e60\uff0c\u4ee5\u4e0b\u5185\u5bb9\u53ef\u80fd\u542c\u8d77\u6765\u6709\u70b9\u62bd\u8c61\uff0c\u4f46\u5b8c\u5168\u6ca1\u95ee\u9898\u3002\u7a0d\u540e\u6211\u5c06\u5e26\u60a8\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\u3002\u4e0d\u8fc7\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5c1d\u8bd5\u83b7\u53d6\u7f51\u7edc\u7684\u793a\u610f\u56fe\u3002\u4e3a\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u5c06\u56fe\u50cf\u5206\u6210\u4e09\u4efd\uff0c\u4ee3\u8868 AlphaFold 2 \u7cfb\u7edf\u7684\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\u3002\u9996\u5148\uff0cAlphaFold 2\u7cfb\u7edf\u5229\u7528\u8f93\u5165\u7684\u6c28\u57fa\u9178\u5e8f\u5217\u67e5\u8be2\u591a\u4e2a\u86cb\u767d\u8d28\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u6784\u5efa\u591a\u5e8f\u5217\u6bd4\u5bf9\uff08MSA\uff09\u3002\u7b80\u800c\u8a00\u4e4b\uff0cMSA \u53ef\u8bc6\u522b\u5728\u751f\u7269\u4f53\u4e2d\u5df2\u8bc6\u522b\u7684\u76f8\u4f3c\u4f46\u4e0d\u76f8\u540c\u7684\u5e8f\u5217\u3002\u8fd9\u53ef\u4ee5\u786e\u5b9a\u5e8f\u5217\u4e2d\u66f4\u53ef\u80fd\u53d1\u751f\u53d8\u5f02\u7684\u90e8\u5206\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u68c0\u6d4b\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002 AlphaFold 2 \u8fd8\u5c1d\u8bd5\u8bc6\u522b\u53ef\u80fd\u4e0e\u8f93\u5165\uff08\u201c\u6a21\u677f\u201d\uff09\u5177\u6709\u76f8\u4f3c\u7ed3\u6784\u7684\u86cb\u767d\u8d28\uff0c\u5e76\u6784\u5efa\u8be5\u7ed3\u6784\u7684\u521d\u59cb\u8868\u793a\uff0c\u79f0\u4e3a\u201c\u5bf9\u8868\u793a\u201d\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u79cd\u6c28\u57fa\u9178\u53ef\u80fd\u76f8\u4e92\u63a5\u89e6\u7684\u6a21\u578b\u3002\u5728\u56fe\u8868\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0cAlphaFold 2 \u5c06\u591a\u5e8f\u5217\u5bf9\u9f50\u548c\u6a21\u677f\uff0c\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u4e00\u4e2a\u8f6c\u6362\u5668\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u8ba8\u8bba Transformer \u9700\u8981\u4ec0\u4e48\uff0c\u4f46\u73b0\u5728\u60a8\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u201coracle\u201d\uff0c\u53ef\u4ee5\u5feb\u901f\u8bc6\u522b\u54ea\u4e9b\u4fe1\u606f\u7684\u4fe1\u606f\u91cf\u66f4\u5927\u3002\u8fd9\u90e8\u5206\u7684\u76ee\u6807\u662f\u6539\u8fdb MSA \u548c\u914d\u5bf9\u4ea4\u4e92\u7684\u8868\u793a\uff0c\u540c\u65f6\u4e5f\u5728\u5b83\u4eec\u4e4b\u95f4\u8fed\u4ee3\u5730\u4ea4\u6362\u4fe1\u606f\u3002\u66f4\u597d\u7684 MSA \u6a21\u578b\u5c06\u6539\u8fdb\u7f51\u7edc\u5bf9\u51e0\u4f55\u7684\u8868\u5f81\uff0c\u540c\u65f6\u6709\u52a9\u4e8e\u6539\u8fdb MSA \u6a21\u578b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u7ec4\u7ec7\u6210\u5757\uff0c\u8fed\u4ee3\u5730\u91cd\u590d\u76f4\u5230\u6307\u5b9a\u6570\u91cf\u7684\u5faa\u73af\uff08\u5df2\u53d1\u5e03\u6a21\u578b\u4e2d\u7684 48 \u4e2a\u5757\uff09\u3002\u8be5\u4fe1\u606f\u88ab\u5e26\u5230\u56fe\u8868\u7684\u6700\u540e\u4e00\u90e8\u5206\uff1a\u7ed3\u6784\u6a21\u5757\u3002\u8fd9\u6761\u590d\u6742\u7684\u7ba1\u9053\u91c7\u7528\u7cbe\u70bc\u7684\u201cMSA \u8868\u793a\u201d\u548c\u201c\u5bf9\u8868\u793a\u201d\uff0c\u5e76\u5229\u7528\u5b83\u4eec\u6765\u6784\u5efa\u7ed3\u6784\u7684\u4e09\u7ef4\u6a21\u578b\u3002\u4e0e\u4e4b\u524d\u6700\u5148\u8fdb\u7684\u6a21\u578b\u4e0d\u540c\uff0c\u8be5\u7f51\u7edc\u4e0d\u4f7f\u7528\u4efb\u4f55\u4f18\u5316\u7b97\u6cd5\uff1a\u5b83\u53ea\u9700\u4e00\u6b65\u5373\u53ef\u751f\u6210\u9759\u6001\u7684\u6700\u7ec8\u7ed3\u6784\u3002\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u957f\u4e32\u7b1b\u5361\u5c14\u5750\u6807\uff0c\u4ee3\u8868\u86cb\u767d\u8d28\u6bcf\u4e2a\u539f\u5b50\u7684\u4f4d\u7f6e\uff0c\u5305\u62ec\u4fa7\u94fe\u3002\u56e0\u6b64\uff0c\u56de\u987e\u4e00\u4e0b\uff1aAlphaFold 2 \u627e\u5230\u4e0e\u8f93\u5165\u76f8\u4f3c\u7684\u5e8f\u5217\uff0c\u4f7f\u7528\u7279\u6b8a\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u63d0\u53d6\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u8be5\u4fe1\u606f\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u751f\u6210\u7ed3\u6784\u7684\u795e\u7ecf\u7f51\u7edc\u3002\n\u6700\u540e\u4e00\u70b9\u662f\u8be5\u6a21\u578b\u4ee5\u8fed\u4ee3\u65b9\u5f0f\u5de5\u4f5c\u3002\u751f\u6210\u6700\u7ec8\u7ed3\u6784\u540e\uff0c\u5b83\u5c06\u83b7\u53d6\u6240\u6709\u4fe1\u606f\uff08\u5373 MSA \u8868\u793a\u3001\u5bf9\u8868\u793a\u548c\u9884\u6d4b\u7ed3\u6784\uff09\u5e76\u5c06\u5176\u4f20\u9012\u56de Evoformer \u5757\u7684\u5f00\u5934\uff0c\u5373\u6211\u4eec\u56fe\u8868\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\u8fd9\u5141\u8bb8\u6a21\u578b\u6539\u8fdb\u5176\u9884\u6d4b\uff0c\u5e76\u751f\u6210\u4e00\u4e9b\u60a8\u53ef\u4ee5\u5728\u6587\u7ae0\u9875\u9762\u4e2d\u627e\u5230\u7684\u6709\u8da3\u89c6\u9891\u3002\u4e0e\u5927\u591a\u6570\u751f\u7269\u4fe1\u606f\u5b66\u7a0b\u5e8f\u4e00\u6837\uff0cAlphaFold 2 \u914d\u5907\u4e86\u201c\u9884\u5904\u7406\u7ba1\u9053\u201d\uff0c\u8fd9\u662f\u8be5\u5b66\u79d1\u5bf9\u201c\u8c03\u7528\u5176\u4ed6\u4ee3\u7801\u7684 Bash \u811a\u672c\u201d\u7684\u672f\u8bed\u3002\u7ba1\u9053\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\u6765\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u7528\u8f93\u5165\u5e8f\u5217\u751f\u6210\u591a\u5e8f\u5217\u6bd4\u5bf9 (MSA) \u548c\u6a21\u677f\u5217\u8868\u3002\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u811a\u672c\u7565\u6709\u4e0d\u540c\uff0c\u4f46 AlphaFold 2 \u4e0e\u60a8\u7684\u82b1\u56ed\u54c1\u79cd\u86cb\u767d\u8d28\u7ed3\u6784\u9884\u6d4b\u9884\u5904\u7406\u7ba1\u9053\u5e76\u6ca1\u6709\u592a\u5927\u533a\u522b\u3002\u503c\u5f97\u89e3\u91ca\u591a\u5e8f\u5217\u200b\u200b\u6bd4\u5bf9\u7684\u542b\u4e49\u3002\u5728 MSA \u4e2d\uff0c\u6211\u4eec\u6253\u7b97\u9884\u6d4b\u5176\u7ed3\u6784\u7684\u86cb\u767d\u8d28\u7684\u5e8f\u5217\u5728\u4e00\u4e2a\u5927\u578b\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u6bd4\u8f83\uff08\u901a\u5e38\u7c7b\u4f3c\u4e8e UniRef\uff0c\u5c3d\u7ba1\u5728\u540e\u6765\u7684\u51e0\u5e74\u4e2d\uff0c\u4f7f\u7528\u6e90\u81ea\u5b8f\u57fa\u56e0\u7ec4\u5b66\u7684\u5e8f\u5217\u6765\u4e30\u5bcc\u8fd9\u4e9b\u6bd4\u5bf9\u662f\u5f88\u5e38\u89c1\u7684\uff09\u3002\u6f5c\u5728\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4e24\u4e2a\u6c28\u57fa\u9178\u7d27\u5bc6\u63a5\u89e6\uff0c\u5176\u4e2d\u4e00\u4e2a\u7684\u7a81\u53d8\u5c06\u7d27\u968f\u53e6\u4e00\u4e2a\u7684\u7a81\u53d8\uff0c\u4ee5\u4fdd\u6301\u7ed3\u6784\u3002\u8003\u8651\u4ee5\u4e0b\u793a\u4f8b\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u79cd\u86cb\u767d\u8d28\uff0c\u5176\u4e2d\u5e26\u8d1f\u7535\u8377\u7684\u6c28\u57fa\u9178\uff08\u4f8b\u5982\u8c37\u6c28\u9178\uff09\u9760\u8fd1\u5e26\u6b63\u7535\u8377\u7684\u6c28\u57fa\u9178\uff08\u4f8b\u5982\u8d56\u6c28\u9178\uff09\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u6c28\u57fa\u9178\u5e8f\u5217\u4e2d\u90fd\u76f8\u8ddd\u751a\u8fdc\u3002\u8fd9\u79cd\u5e93\u4ed1\u76f8\u4e92\u4f5c\u7528\u7a33\u5b9a\u4e86\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u3002\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u6c28\u57fa\u9178\u7a81\u53d8\u6210\u5e26\u6b63\u7535\u7684\u6c28\u57fa\u9178\u2014\u2014\u4e3a\u4e86\u4fdd\u6301\u8fd9\u79cd\u63a5\u89e6\uff0c\u7b2c\u4e8c\u4e2a\u6c28\u57fa\u9178\u5c06\u5728\u8fdb\u5316\u538b\u529b\u4e0b\u7a81\u53d8\u6210\u5e26\u8d1f\u7535\u7684\u6c28\u57fa\u9178\uff0c\u5426\u5219\u4ea7\u751f\u7684\u86cb\u767d\u8d28\u53ef\u80fd\u65e0\u6cd5\u6298\u53e0.\u5f53\u7136\uff0c\u771f\u5b9e\u60c5\u51b5\u5f88\u5c11\u50cf\u8fd9\u4e2a\u4f8b\u5b50\u90a3\u6837\u660e\u786e\uff0c\u4f46\u4f60\u660e\u767d\u4e86\u3002\u67e5\u627e\u6a21\u677f\u9075\u5faa\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u4f46\u53c8\u5bc6\u5207\u76f8\u5173\u7684\u539f\u5219\u3002\u6a21\u677f\u5efa\u6a21\u80cc\u540e\u7684\u54f2\u5b66\u53ef\u4ee5\u7528\u683c\u8a00\u201c\u592a\u9633\u5e95\u4e0b\u6ca1\u6709\u65b0\u9c9c\u4e8b\u201d\u6765\u7f16\u7801\u3002\u86cb\u767d\u8d28\u4f1a\u53d1\u751f\u53d8\u5f02\u548c\u8fdb\u5316\uff0c\u4f46\u5c3d\u7ba1\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u5b83\u4eec\u7684\u7ed3\u6784\u5f80\u5f80\u4fdd\u6301\u76f8\u4f3c\u3002\u4f8b\u5982\uff0c\u5728\u4e0b\u56fe\u4e2d\uff0c\u6211\u5c55\u793a\u4e86\u5bf9\u5e94\u4e8e\u4e0d\u540c\u751f\u7269\u4f53\u7684\u56db\u79cd\u4e0d\u540c\u808c\u7ea2\u86cb\u767d\u7684\u7ed3\u6784\u3002\u60a8\u53ef\u4ee5\u6b23\u8d4f\u5b83\u4eec\u770b\u8d77\u6765\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u662f\u5982\u679c\u60a8\u67e5\u770b\u5e8f\u5217\uff0c\u60a8\u4f1a\u53d1\u73b0\u5de8\u5927\u7684\u5dee\u5f02\u3002\u4f8b\u5982\uff0c\u53f3\u4e0b\u89d2\u7684\u86cb\u767d\u8d28\u4e0e\u5de6\u4e0a\u89d2\u7684\u86cb\u767d\u8d28\u53ea\u6709\u7ea6 25% \u7684\u6c28\u57fa\u9178\u76f8\u540c\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4fdd\u62a4\u53d1\u751f\u5728\u8f83\u5c0f\u7684\u8303\u56f4\u5185\uff0c\u5176\u4e2d\u86cb\u767d\u8d28\u7247\u6bb5\uff08\u4f8b\u5982\uff0c\u9176\u7684\u6d3b\u6027\u4e2d\u5fc3\uff09\u5728\u5176\u5468\u56f4\u73af\u5883\u8fdb\u5316\u65f6\u57fa\u672c\u4fdd\u6301\u4e0d\u53d8\u3002\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\uff1a\u4f7f\u7528\u6b63\u786e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8bc6\u522b\u5176\u4e2d\u4e00\u4e9b\u4fdd\u5b88\u7247\u6bb5\u5e76\u5c06\u5b83\u4eec\u7528\u4f5c\u6784\u5efa\u7ed3\u6784\u7684\u6307\u5357\u3002\u8fd9\u662f\u7ed3\u6784\u9884\u6d4b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff0cCASP14 \u4e2d\u7684\u76ee\u6807\u901a\u5e38\u6839\u636e\u53ef\u7528\u6a21\u677f\u7684\u6570\u91cf\u8fdb\u884c\u5206\u7c7b\u3002\u8fd9\u91cc\u6709\u4ec0\u4e48\u7279\u522b\u7684\u5417\uff1f\u5e76\u975e\u5982\u6b64\uff1aCASP14 \u7684\u5927\u591a\u6570\u53c2\u4e0e\u8005\u90fd\u9075\u5faa\u975e\u5e38\u76f8\u4f3c\u7684\u7b56\u7565\u3002\u4f7f\u7528\u76f8\u5173\u7a81\u53d8\u4ece MSA \u4e2d\u63d0\u53d6\u7ed3\u6784\u4fe1\u606f\u7684\u60f3\u6cd5\u5df2\u6709\u6570\u5341\u5e74\u5386\u53f2\uff0c\u800c\u6536\u96c6\u5176\u4ed6\u86cb\u767d\u8d28\u7247\u6bb5\u6765\u6a21\u62df\u76ee\u6807\u7ed3\u6784\u7684\u60f3\u6cd5\u751a\u81f3\u53ef\u80fd\u66f4\u65e9\u3002\u6211\u60f3\u8bf4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\u3002\n\u8fd9\u662f\u6545\u4e8b\u771f\u6b63\u5f00\u59cb\u7684\u5730\u65b9\u3002\u5de8\u5927\u7684 AlphaFold 2 \u795e\u7ecf\u7f51\u7edc\u7684\u7b2c\u4e00\u90e8\u5206 Evoformer \u7684\u4efb\u52a1\u662f\u4ece\u591a\u5e8f\u5217\u6bd4\u5bf9\u548c\u6a21\u677f\u4e2d\u63d0\u53d6\u6bcf\u4e00\u76ce\u53f8\u7684\u4fe1\u606f\u3002\u542c\u5230\u4ece\u591a\u5e8f\u5217\u6bd4\u5bf9\u4e2d\u63d0\u53d6\u4fe1\u606f\uff08\u201c\u534f\u540c\u8fdb\u5316\u5206\u6790\u201d\uff09\u591a\u5e74\u6765\u4e00\u76f4\u662f\u7ed3\u6784\u751f\u7269\u4fe1\u606f\u5b66\u7684\u4e3b\u8981\u8ffd\u6c42\uff0c\u60a8\u53ef\u80fd\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u4eba\u4eec\u5728 90 \u5e74\u4ee3\u5f00\u59cb\u7814\u7a76\u5b83\uff0c\u5c3d\u7ba1\u6210\u529f\u6709\u9650\u3002\u5728\u4e0a\u4e2a\u5341\u5e74\u4e4b\u521d\uff0c\u51e0\u4e2a\u5c0f\u7ec4\u5f00\u59cb\u786e\u5b9a\u4e00\u4e9b\u963b\u788d\u5148\u524d\u5c1d\u8bd5\u7684\u504f\u89c1\uff0c\u5e76\u5f00\u53d1\u4e86\u5f3a\u5927\u7684\u7edf\u8ba1\u673a\u5236\u6765\u7ea0\u6b63\u5b83\u4eec\u3002\u51e0\u5e74\u6765\u53d6\u5f97\u4e86\u4e00\u4e9b\u6301\u7eed\u7684\u8fdb\u5c55\u3002\u7136\u540e\uff0c\u5728 CASP13 (2018) \u4e2d\uff0c\u51e0\u4e2a\u5c0f\u7ec4\u8bc1\u660e\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u7a33\u5065\u7684\u7edf\u8ba1\u6570\u636e\uff1a\u4f60\u53ea\u9700\u8981\u8bad\u7ec3\u6df1\u5ea6\u6b8b\u5dee\u795e\u7ecf\u7f51\u7edc\u3002 AlphaFold 2 \u7684 Evoformer \u5f7b\u5e95\u6539\u9020\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5e76\u8fdb\u4e00\u6b65\u63a8\u8fdb\u4e86\u51e0\u4e2a\u6b65\u9aa4\u3002 Evoformer \u80cc\u540e\u7684\u4e2d\u5fc3\u601d\u60f3\u662f\u4fe1\u606f\u5728\u6574\u4e2a\u7f51\u7edc\u4e2d\u6765\u56de\u6d41\u52a8\u3002\u5728 AlphaFold 2 \u4e4b\u524d\uff0c\u5927\u591a\u6570\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u5c06\u91c7\u7528\u591a\u5e8f\u5217\u6bd4\u5bf9\u5e76\u8f93\u51fa\u4e00\u4e9b\u5173\u4e8e\u51e0\u4f55\u63a5\u8fd1\u5ea6\u7684\u63a8\u65ad\u3002\u56e0\u6b64\uff0c\u51e0\u4f55\u4fe1\u606f\u662f\u7f51\u7edc\u7684\u4ea7\u7269\u3002\u76f8\u53cd\uff0c\u5728 Evoformer \u4e2d\uff0c\u5bf9\u8868\u793a\u65e2\u662f\u4ea7\u54c1\u53c8\u662f\u4e2d\u95f4\u5c42\u3002\u5728\u6bcf\u4e2a\u5faa\u73af\u4e2d\uff0c\u8be5\u6a21\u578b\u5229\u7528\u5f53\u524d\u7684\u7ed3\u6784\u5047\u8bbe\u6765\u6539\u8fdb\u5bf9\u591a\u5e8f\u5217\u6bd4\u5bf9\u7684\u8bc4\u4f30\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u5bfc\u81f4\u65b0\u7684\u7ed3\u6784\u5047\u8bbe\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u8868\u793a\uff0c\u5e8f\u5217\u548c\u7ed3\u6784\uff0c\u4ea4\u6362\u4fe1\u606f\uff0c\u76f4\u5230\u7f51\u7edc\u8fbe\u5230\u53ef\u9760\u7684\u63a8\u7406\u3002\u8fd9\u4f5c\u4e3a\u793a\u4f8b\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u5047\u8bbe\u60a8\u67e5\u770b\u591a\u5e8f\u5217\u6bd4\u5bf9\u5e76\u6ce8\u610f\u5230\u4e00\u5bf9\u6c28\u57fa\u9178\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u8ba9\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a A \u548c B\u3002\u60a8\u5047\u8bbe A \u548c B \u5f88\u63a5\u8fd1\uff0c\u7136\u540e\u5c06\u6b64\u5047\u8bbe\u8f6c\u5316\u4e3a\u60a8\u7684\u7ed3\u6784\u6a21\u578b\u3002\u968f\u540e\uff0c\u60a8\u68c0\u67e5\u6240\u8ff0\u6a21\u578b\u5e76\u89c2\u5bdf\u5230\uff0c\u7531\u4e8e A \u548c B \u5f88\u63a5\u8fd1\uff0c\u56e0\u6b64 C \u548c D \u5f88\u53ef\u80fd\u5e94\u8be5\u63a5\u8fd1\u3002\u8fd9\u5bfc\u81f4\u4e86\u53e6\u4e00\u4e2a\u57fa\u4e8e\u7ed3\u6784\u7684\u5047\u8bbe\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 MSA \u4e2d\u641c\u7d22 C \u548c D \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u6765\u786e\u8ba4\u3002\u901a\u8fc7\u591a\u6b21\u91cd\u590d\u6b64\u64cd\u4f5c\uff0c\u60a8\u53ef\u4ee5\u5f88\u597d\u5730\u7406\u89e3\u7ed3\u6784\u3002\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u6b65\u662f\u4e3a MSA \u548c\u6a21\u677f\u5b9a\u4e49\u201c\u5d4c\u5165\u201d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u591a\u91cd\u5e8f\u5217\u6bd4\u5bf9\u6700\u7ec8\u662f\u6765\u81ea\u6709\u9650\u5b57\u6bcd\u8868\u7684\u7b26\u53f7\u5e8f\u5217\uff1a\u79bb\u6563\u53d8\u91cf\u7684\u4e3b\u8981\u4f8b\u5b50\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u4e0a\u662f\u8fde\u7eed\u7684\u8bbe\u5907\uff0c\u4f9d\u9760\u5dee\u5f02\u5316\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5b66\u4e60\u3002 \u201c\u5d4c\u5165\u201d\u662f\u6df1\u5ea6\u5b66\u4e60\u9b54\u6cd5\u4e66\u4e2d\u7684\u4e00\u4e2a\u6280\u5de7\uff0c\u5b83\u5141\u8bb8\u5c06\u79bb\u6563\u53d8\u91cf\u8f6c\u6362\u4e3a\u8fde\u7eed\u7a7a\u95f4\uff08\u201c\u5d4c\u5165\u7a7a\u95f4\u201d\uff09\uff0c\u4ece\u800c\u53ef\u4ee5\u8bad\u7ec3\u7f51\u7edc\u3002\u8fd9\u542c\u8d77\u6765\u5f88\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\u3002\u60a8\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u5c42\u63a5\u6536\u79bb\u6563\u8f93\u5165\u5e76\u8f93\u51fa\u4e00\u4e9b\u8fde\u7eed\u5411\u91cf\u7684\u795e\u7ecf\u5143\u3002\u5d4c\u5165\u53ef\u80fd\u662f\u9884\u8bad\u7ec3\u7684\uff0c\u8fd9\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406 (NLP) \u4e2d\u5f88\u5e38\u89c1\uff0c\u4f46\u66f4\u5e38\u89c1\u7684\u662f\uff0c\u5b83\u4e0e\u6211\u4eec\u8bd5\u56fe\u5b66\u4e60\u7684\u4efb\u4f55\u76ee\u6807\u4e00\u8d77\u8bad\u7ec3\u3002\u5728 AlphaFold 2 \u4e2d\uff0c\u5d4c\u5165\u662f\u666e\u901a\u7684\u5bc6\u96c6\u795e\u7ecf\u7f51\u7edc\u3002\n\u4e00\u65e6\u6211\u4eec\u7684 MSA \u548c\u6a21\u677f\u5904\u4e8e\u6b63\u786e\u7684\u201c\u5d4c\u5165\u7a7a\u95f4\u201d\uff0cEvoformer \u5c31\u8be5\u53d1\u6325\u5b83\u7684\u9b54\u529b\u4e86\u3002\u8981\u4e86\u89e3 Evoformer\uff0c\u60a8\u9996\u5148\u9700\u8981\u719f\u6089\u8fc4\u4eca\u4e3a\u6b62\u6700\u70ed\u95e8\u7684\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\uff1atransformer\u3002\u4e0d\u4e4f\u89e3\u91ca\u8fd9\u79cd\u67b6\u6784\u7684\u6750\u6599\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u5f88\u591a\uff08\u5982\u679c\u4e0d\u662f\u5927\u591a\u6570\uff09\u90fd\u4f1a\u6bd4\u6211\u7684\u8981\u597d\u3002\u5982\u679c\u60a8\u5bf9\u6df1\u5165\u5206\u6790\u611f\u5174\u8da3\uff0c\u6211\u4f1a\u63a8\u8350 Jay Alammar \u7684 The Illustrated Transformer\u3002\u5982\u679c\u60a8\u53ea\u60f3\u77e5\u9053\u6700\u4f4e\u9650\u5ea6\uff0c\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\u3002\u800c\u4e14\uff0c\u5982\u679c\u60a8\u5df2\u7ecf\u77e5\u9053\u50cf\u624b\u638c\u8fd9\u6837\u7684\u8f6c\u6362\u5668\uff0c\u8bf7\u6309 Ctrl+F \u5e76\u5728\u4e0b\u9762\u7684\u51e0\u6bb5\u4e2d\u627e\u5230\u201c\u56de\u5230 Evoformer\u201d\u8fd9\u53e5\u8bdd\u3002 Transformer \u67b6\u6784\u4e8e 2017 \u5e74\u7531 Google Brain \u7684\u4e00\u4e2a\u56e2\u961f\u5728\u4e00\u7bc7\u9898\u4e3a\u201cAttention is all you need\u201d\u7684\u8bba\u6587\u4e2d\u4ecb\u7ecd\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u4ece\u663e\u773c\u7684\u6807\u9898\u4e2d\u60f3\u8c61\u7684\u90a3\u6837\uff0c\u5173\u952e\u8981\u7d20\u662f\u4e00\u79cd\u79f0\u4e3a\u6ce8\u610f\u529b\u7684\u65b0\u9896\u673a\u5236\u3002\u6ce8\u610f\u7684\u76ee\u6807\u662f\u786e\u5b9a\u8f93\u5165\u7684\u54ea\u4e9b\u90e8\u5206\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u76ee\u6807\u66f4\u91cd\u8981\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u786e\u5b9a\u5b83\u5e94\u8be5\u6ce8\u610f\u8f93\u5165\u7684\u54ea\u4e9b\u90e8\u5206\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u6b63\u5728\u5c1d\u8bd5\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u751f\u6210\u56fe\u50cf\u6807\u9898\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\u8bad\u7ec3\u7f51\u7edc\u5904\u7406\u6574\u4e2a\u56fe\u50cf\u2014\u2014\u6bd4\u5982 512\u00d7512 \u56fe\u7247\u4e2d\u7684\u7ea6 250k \u50cf\u7d20\u3002\u8fd9\u53ef\u80fd\u6709\u6548\uff0c\u4f46\u6709\u4e00\u4e9b\u539f\u56e0\u8868\u660e\u5b83\u4e0d\u662f\u6700\u597d\u7684\u4e3b\u610f\u3002\u4e5f\u8bb8\u9996\u5148\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u662f\u6211\u4eec\u4eba\u7c7b\u6240\u505a\u7684\uff1a\u5f53\u6211\u4eec\u770b\u4e00\u5f20\u56fe\u7247\u65f6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u770b\u5230\u5b83\u201c\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u201d\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u5176\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u6a21\u5f0f\uff1a\u5b69\u5b50\u3001\u72d7\u3001\u98de\u76d8\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u6211\u4eec\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u8bbe\u8ba1\u5de7\u5999\u7684\u795e\u7ecf\u7f51\u7edc\u5c42\u6765\u6267\u884c\u8fd9\u9879\u4efb\u52a1\u3002\u800c\u4e14\uff0c\u6839\u636e\u7ecf\u9a8c\uff0c\u5b83\u4f3c\u4e4e\u5927\u5927\u63d0\u9ad8\u4e86\u6027\u80fd\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u56fe\u50cf\u5b57\u5e55\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u4f8b\u5b50\u3002\u4e0e\u539f\u59cb\u7684\u201cAttention is all you need\u201d\u8bba\u6587\u66f4\u76f8\u5173\u7684\u662f\u673a\u5668\u7ffb\u8bd1\u7684\u60c5\u51b5\uff0c\u5176\u4e2d\u6ce8\u610f\u529b\u63ed\u793a\u4e86\u5e8f\u5217\u7684\u54ea\u4e9b\u90e8\u5206\u5bf9\u5f53\u524d\u7ffb\u8bd1\u90e8\u5206\u5f88\u91cd\u8981\u3002\u53d8\u538b\u5668\u666e\u904d\u4f7f\u7528\u7684\u539f\u56e0\u8fd8\u6709\u5f88\u591a\u3002\u4f8b\u5982\uff0c\u5728\u673a\u5668\u7ffb\u8bd1\u4e2d\uff0c\u5b83\u4eec\u6709\u52a9\u4e8e\u6539\u5584\u201c\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u201d\uff0c\u8fd9\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u5e38\u89c1\u969c\u788d\u3002\u5728\u57fa\u4e8e\u5e8f\u5217\u7684\u6a21\u578b\u4e2d\uff0c\u76f8\u5bf9\u4e8e\u7ecf\u5178\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc (RNN) \u6a21\u578b\uff0c\u5b83\u4eec\u53ef\u4ee5\u663e\u7740\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u53d8\u538b\u5668\u5728\u5404\u79cd\u4efb\u52a1\u4e2d\u51ed\u7ecf\u9a8c\u8bc1\u660e\u4e86\u5353\u8d8a\u7684\u6027\u80fd\u3002\u7279\u522b\u662f\uff0c\u8fc7\u53bb\u4e00\u5e74\u4e2d\u5927\u90e8\u5206\u6700\u5f15\u4eba\u6ce8\u76ee\u7684 AI \u6210\u5c31\u90fd\u843d\u540e\u4e8e\u4ed6\u4eec\u2014\u2014\u4f8b\u5982\uff0cGPT-3 \u4e2d\u7684 GPT \u4ee3\u8868\u201c\u751f\u6210\u5f0f\u9884\u8bad\u7ec3\u53d8\u538b\u5668\u201d\u3002\u5728\u6211\u8ba4\u4e3a\u6211\u7684\u89e3\u91ca\u5b8c\u6574\u4e4b\u524d\uff0c\u6211\u786e\u5b9e\u89c9\u5f97\u6211\u5fc5\u987b\u63d0\u5230\u6700\u540e\u4e00\u4e2a\u514d\u8d23\u58f0\u660e\u3002\u53d8\u538b\u5668\u6ca1\u6709\u5728\u8bb8\u591a\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u662f\u6709\u539f\u56e0\u7684\u3002\u6ce8\u610f\u77e9\u9635\u7684\u6784\u5efa\u5bfc\u81f4\u4e86\u4e8c\u6b21\u5185\u5b58\u6210\u672c\u3002\u5373\u4f7f\u60a8\u62e5\u6709\u914d\u5907 80 GB \u4e13\u7528\u5185\u5b58\u7684\u4e0a\u4e00\u4ee3 NVIDIA A100\uff0c\u5b83\u4e5f\u53ef\u4ee5\u5f88\u5feb\u88ab\u586b\u6ee1\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u8c37\u6b4c\u8457\u540d\u7684\u5f20\u91cf\u5904\u7406\u5355\u5143 (TPU) \u7684\u5173\u952e\u4f18\u52bf\u4e4b\u4e00\u662f\u6bcf\u4e2a\u5185\u6838\u7684\u5927\u91cf\u5185\u5b58\u3002\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u968f\u7740\u65b0\u67b6\u6784\uff08\u4f8b\u5982 Performer \u6216 Perceiver\uff09\u7684\u5f15\u5165\u800c\u8fc5\u901f\u6539\u53d8\uff0c\u5b83\u4eec\u5c06\u8fd9\u79cd\u4e8c\u6b21\u6210\u672c\u964d\u4f4e\u4e3a\u4f2a\u7ebf\u6027\u6210\u672c\u3002\u4f46\u662f\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u5df2\u7ecf\u8d85\u8d8a\u4e86\u81ea\u5df1\u3002\u56de\u5230 Evoformer\u3002 Evoformer \u67b6\u6784\u4f7f\u7528\u7684\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e24\u4e2a\u53d8\u538b\u5668\uff08\u201c\u53cc\u5854\u67b6\u6784\u201d\uff09\uff0c\u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u901a\u4fe1\u901a\u9053\u3002\u6bcf\u4e2a\u5934\u90e8\u4e13\u95e8\u7528\u4e8e\u5b83\u6b63\u5728\u67e5\u770b\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6216\u8005\u662f\u591a\u5e8f\u5217\u6bd4\u5bf9\uff0c\u6216\u8005\u662f\u6c28\u57fa\u9178\u4e4b\u95f4\u6210\u5bf9\u76f8\u4e92\u4f5c\u7528\u7684\u8868\u793a\u3002\u5b83\u4eec\u8fd8\u5305\u542b\u8fde\u7eed\u8868\u793a\u7684\u4fe1\u606f\uff0c\u5141\u8bb8\u5b9a\u671f\u4ea4\u6362\u4fe1\u606f\u548c\u8fed\u4ee3\u7ec6\u5316\u3002\n\u8ba9\u6211\u4eec\u9996\u5148\u770b\u770b\u8d1f\u8d23 MSA \u7684\u8d1f\u8d23\u4eba\uff0c\u6211\u5c06\u5176\u79f0\u4e3a\u201cMSA \u8f6c\u6362\u5668\u201d\uff0c\u4ee5\u7eaa\u5ff5 Facebook AI Research 2 \u6708\u4efd\u53d1\u8868\u7684\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u7684\u60f3\u6cd5\u3002 MSA \u8f6c\u6362\u5668\u5728\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u86cb\u767d\u8d28\u7b26\u53f7\u77e9\u9635\u4e0a\u8ba1\u7b97\u6ce8\u610f\u529b\u3002\u4e3a\u4e86\u51cf\u5c11\u539f\u672c\u4e0d\u53ef\u80fd\u7684\u8ba1\u7b97\u6210\u672c\uff0c\u6ce8\u610f\u529b\u88ab\u201c\u5206\u89e3\u201d\u4e3a\u201c\u884c\u201d\u548c\u201c\u5217\u201d\u7ec4\u4ef6\u3002\u5373\uff0c\u7f51\u7edc\u9996\u5148\u5728\u6c34\u5e73\u65b9\u5411\u8ba1\u7b97\u6ce8\u610f\u529b\uff0c\u8ba9\u7f51\u7edc\u8bc6\u522b\u54ea\u4e9b\u6c28\u57fa\u9178\u5bf9\u66f4\u76f8\u5173\uff1b\u7136\u540e\u5728\u5782\u76f4\u65b9\u5411\u4e0a\uff0c\u786e\u5b9a\u54ea\u4e9b\u5e8f\u5217\u7684\u4fe1\u606f\u91cf\u66f4\u5927\u3002 AlphaFold 2 \u7684 MSA \u53d8\u6362\u5668\u6700\u91cd\u8981\u7684\u7279\u70b9\u662f\u884c\uff08\u6c34\u5e73\uff09\u6ce8\u610f\u529b\u673a\u5236\u7ed3\u5408\u4e86\u6765\u81ea\u201c\u5bf9\u8868\u793a\u201d\u7684\u4fe1\u606f\u3002\u5728\u8ba1\u7b97\u6ce8\u610f\u529b\u65f6\uff0c\u7f51\u7edc\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u504f\u7f6e\u9879\uff0c\u8be5\u504f\u7f6e\u9879\u662f\u76f4\u63a5\u6839\u636e\u5f53\u524d\u5bf9\u8868\u793a\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u8fd9\u4e2a\u6280\u5de7\u589e\u5f3a\u4e86\u6ce8\u610f\u529b\u673a\u5236\u5e76\u5141\u8bb8\u5b83\u7cbe\u786e\u5b9a\u4f4d\u76f8\u4e92\u4f5c\u7528\u7684\u6b8b\u57fa\u5bf9\u3002\u53e6\u4e00\u4e2a\u53d8\u538b\u5668\u5934\uff0c\u4f5c\u7528\u4e8e\u5bf9\u8868\u793a\u7684\u90a3\u4e2a\uff0c\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5de5\u4f5c\uff0c\u5f53\u7136\uff0c\u867d\u7136\u5f88\u591a\u7ec6\u8282\u4e0d\u540c\u3002\u8be5\u7f51\u7edc\u7684\u5173\u952e\u7279\u5f81\u662f\u6ce8\u610f\u529b\u4ee5\u6b8b\u5dee\u4e09\u89d2\u5f62\u7684\u5f62\u5f0f\u6392\u5217\u3002\u8fd9\u91cc\u7684\u76f4\u89c9\u662f\u52a0\u5f3a\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff0c\u8fd9\u662f\u5ea6\u91cf\u7a7a\u95f4\u7684\u516c\u7406\u4e4b\u4e00\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u806a\u660e\u7684\u60f3\u6cd5\uff0c\u56e0\u4e3a\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u7ed3\u6784\u9884\u6d4b\u7684\u7ecf\u5178\u95ee\u9898\u4e4b\u4e00\u662f\u8ddd\u79bb\u5206\u5e03\u4e0d\u80fd\u5d4c\u5165\u5230\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002\u4f3c\u4e4e\u8fd9\u4e2a\u6280\u5de7\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u8fd8\u6709\u66f4\u591a\u3002\u7ecf\u8fc7\u591a\u6b21\u8fed\u4ee3\uff08\u8bba\u6587\u4e2d\u7684 48 \u6b21\uff09\uff0c\u7f51\u7edc\u5efa\u7acb\u4e86\u86cb\u767d\u8d28\u5185\u90e8\u76f8\u4e92\u4f5c\u7528\u7684\u6a21\u578b\u3002\u73b0\u5728\uff0c\u662f\u65f6\u5019\u5efa\u7acb\u4e00\u4e2a\u7ed3\u6784\u4e86\u3002\u5982\u679c\u4f60\u4e86\u89e3\u8fd9\u4e48\u591a\uff0c\u4f60\u73b0\u5728\u53ef\u80fd\u77e5\u9053 AlphaFold 2 \u5904\u7406\u5e8f\u5217\u641c\u7d22\u6570\u636e\u4ee5\u751f\u6210\u4e24\u4e2a\u201c\u8868\u793a\u201d\uff1a\u591a\u5e8f\u5217\u6bd4\u5bf9 (MSA) \u7684\u8868\u793a\uff0c\u5b83\u6355\u83b7\u5e8f\u5217\u53d8\u5f02\uff1b\u4ee5\u53ca\u201c\u6b8b\u57fa\u5bf9\u201d\u7684\u8868\u793a\uff0c\u5b83\u6355\u83b7\u4e86\u54ea\u4e9b\u6b8b\u57fa\u53ef\u80fd\u5f7c\u6b64\u76f8\u4e92\u4f5c\u7528\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff1a\u6211\u4eec\u5982\u4f55\u4ece\u8fd9\u4e9b\u4e2d\u83b7\u5f97\u7ed3\u6784\uff1f\u8fd9\u662f\u7ed3\u6784\u6a21\u5757\u7684\u5de5\u4f5c\u7ed3\u6784\u6a21\u5757\u80cc\u540e\u7684\u60f3\u6cd5\u5728\u6982\u5ff5\u4e0a\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u901a\u8fc7......\u7684\u8bb8\u591a\u7ec6\u8282\u53d8\u5f97\u6df7\u4e71\u3002", "note_en": "Nature has now released that  AlphaFold 2 paper, after eight long months of waiting. The main text reports more or less what we have known for nearly a year, with some added tidbits, although it is accompanied by a painstaking description of the architecture in the  supplementary information. Perhaps more importantly, the authors have released the entirety of the code, including all details to run the pipeline,  on Github. And there is no small print this time: you can run inference on  any protein (I\u2019ve checked!).\n Have you not heard the news? Let me refresh your memory. In November 2020, a team of AI scientists from Google DeepMind \u00a0indisputably won the\u00a0 14 th\u00a0Critical Assessment of Structural Prediction\u00a0competition, a biennial blind test where computational biologists try to predict the structure of several proteins whose structure has been determined experimentally but not publicly released. Their results were so astounding, and the problem so central to biology, that it took the entire world by surprise and left an entire discipline, computational biology, wondering what had just happened.\n  Now that the article is live, the excitement is palpable. We have 70+ pages of long-awaited answers, and several thousand lines of code that will, no doubt, become a fundamental part of computational biology. At the same time, however, we have many new questions. What is the secret sauce before the news splash, and why is it so effective? Is it a piece of code that the average user can actually run? What are AlphaFold 2\u2019s shortcomings? And, most important of all, what will it mean for computational biology? And for all of us?\n In this commentary, which aims to be a continuation of  my blog post from eight months ago, I try to address some of these questions. First, I provide a bird\u2019s eye overview of the AlphaFold 2 architecture. This is not meant to be a technical exposition (the  SI is as detailed as you could wish, and even the code cites different sections of it), but focuses on the intuition behind the architecture. I want this to reach people without a background in either deep learning and bioinformatics who want to know what\u2019s going on; and those who may have the right background, but want an overview of the full paper before diving right into it.\n Following the cold, stone-hard facts, I give a completely personal assessment of the ideas behind the architecture. Namely, I explain which ideas I think were key to the success of AlphaFold 2, and speculate which factors made this team succeed where so many others have fallen short. I am a person of strong opinions, but nevertheless happy to declare that my thoughts may be going in completely the wrong direction. Still, I think the story of AlphaFold 2 raises a lot of questions that we have not addressed as a community and that deserve appropriate consideration somewhere.\n Finally, I revisit some of the questions that I raised  eight months ago. Some of these questions have been answered by the paper, or by the code ( e.g. what are the limitations to run the code). Some others are not solved explicitly, but I have had a chance to reflect upon them more deeply and I think I have some novel insight. And some others are matters that have arisen from the new information, and that I think we will have to answer together.\n I have promised myself that I will be more succinct this time \u2014 after all, in a few months I should be writing up my PhD thesis and I really don\u2019t have much time to spare. Let\u2019s see if I manage.\n   Until Thursday morning, the best answer we had was an image, published in DeepMind\u2019s  press release back in November. This schema made the rounds of the internet at the time, and has been featured in a multitude of conferences and discussion groups ever since. But, sadly, it was lacking in details, and even the most knowledgeable deep learning experts were only able to make educated guesses.\n  The  Nature article provides a very similar, but slightly more detailed diagram that outlines the different pieces of the architecture.\n  The overarching idea is quite simple, so I will try to sketch it in a few lines. If you are not familiar with deep learning, the following might sound slightly abstract, and that is perfectly fine. I will take you through the details later. For now, though, let us try to get a schematic picture of the network. For clarity, I have divided the image into thirds which represent the three main parts of the AlphaFold 2 system.\n First of all, the AlphaFold 2 system uses the input amino acid sequence to query several databases of protein sequences, and constructs a  multiple sequence alignment (MSA). Put simply, an MSA identifies similar, but not identical, sequences that have been identified in living organisms. This enables the determination of the parts of the sequence that are more likely to mutate, and allows us to detect correlations between them. AlphaFold 2 also tries to identify proteins that may have a similar structure to the input (\u201ctemplates\u201d), and constructs an initial representation of the structure, which it calls the \u201cpair representation\u201d. This is, in essence, a model of which amino acids are likely to be in contact with each other.\n In the second part of the diagram, AlphaFold 2 takes the multiple sequence alignment and the templates, and passes them through a  transformer. We will talk about what a transformer entails later, but for now you can understand it as an \u201coracle\u201d that can quickly identify which pieces of information are more informative. The objective of this part is to refine the representations for both the MSA and the pair interactions, but also to iteratively exchange information between them. A better model of the MSA will improve the network\u2019s characterization of the geometry, which simultaneously will help refine the model of the MSA. This process is organised in blocks that are repeated iteratively until a specified number of cycles (48 blocks in the published model).\n This information is taken to the last part of the diagram: the structure module. This sophisticated piece of the pipeline takes the refined \u201cMSA representation\u201d and \u201cpair representation\u201d, and leverages them to construct a three-dimensional model of the structure. Unlike the previous state-of-the-art models, this network does not use any optimisation algorithm: it generates a static, final structure, in a single step. The end result is a long list of Cartesian coordinates representing the position of each atom of the protein, including side chains.\n So, to recap: AlphaFold 2 finds similar sequences to the input, extracts the information using an especial neural network architecture, and then passes that information to another neural network that produces a structure.\n One last piece is that the model works iteratively. After generating a final structure, it will take all the information ( i.e. MSA representation, pair representation  and predicted structure) and pass it back to the beginning of the Evoformer blocks, the second part of our diagram. This allows the model to refine its predictions, and also produce some  funny videos that you can find in the article\u2019s page.\n   Like most bioinformatics programs, AlphaFold 2 comes equipped with a \u201cpreprocessing pipeline\u201d, which is the discipline\u2019s lingo for \u201ca Bash script that calls some other codes\u201d. The pipeline runs a number of programs for querying databases and, using the input sequence, generates a multiple sequence alignment (MSA) and a list of templates. Every program has a slightly different script, but AlphaFold 2\u2019s is not too different from your garden variety protein structure prediction preprocessing pipeline.\n It is worth explaining the meaning of a multiple sequence alignment. In an MSA, the sequence of the protein whose structure we intend to predict is compared across a large database (normally something like\u00a0 UniRef, although in later years it has been common to enrich these alignments with sequences derived from\u00a0 metagenomics). The underlying idea is that, if two amino acids are in close contact, mutations in one of them will be closely followed by mutations of the other, in order to preserve the structure.\n  Consider the following example. Suppose we have a protein where an amino acid with negative charge (say, glutamate) is near to an amino acid with positive charge (say, lysine), although they are both far away in the amino acid sequence. This Coulombic interaction stabilises the structure of the protein. Imagine now that the first amino acid mutates into a positively charged amino acid \u2014 in order to preserve this contact, the second amino acid will be under evolutionary pressure to mutate into a negatively charged amino acid, otherwise the resulting protein may not be able to fold. Of course, real situations are rarely as clear-cut as this example, but you get the idea.\n Finding templates follows a completely different, but closely related principle. The philosophy behind template modelling may be encoded in the maxim \u201cthere is nothing new under the sun\u201d. Proteins mutate and evolve, but their structures tend to remain similar despite the changes. In the image below, for example, I display the structure of four different myoglobin proteins, corresponding to different organisms. You can appreciate that they all look pretty much the same, but if you were to look at the sequences, you would find enormous differences. The protein on the bottom right, for example, only has ~25% amino acids in common with the protein on the top left.\n  In most cases, however, conservation occurs on a smaller scale, where pieces of the protein (say, the active centre of an enzyme) remain mostly unchanged while their surroundings evolve. Size does not really matter: using the right methods, it is possible to identify some of these conserved fragments and use them as a guide to construct the structure. This has been such an important ingredient in structural prediction that targets in CASP14 have classically been classified depending on the number of templates available.\n Is there anything especial in here? Not really: most of the participants at CASP14 followed very similar strategies. The idea of using correlated mutations to extract structural information from an MSA is decades old, and collecting pieces of other proteins to model your target\u2019s structure is perhaps older even. I would say that, so far, there is nothing new.\n  Here is where the story really gets going. The first section of the gigantic AlphaFold 2 neural network, the Evoformer, has the task of squeezing every ounce of information out of the multiple sequence alignment and the templates.\n You may not be surprised to hear that extracting information from the multiple sequence alignment (\u201ccoevolutionary analysis\u201d) has been a prime pursuit of structural bioinformatics for years. People started looking at it in the nineties, although with limited success. At the beginning of last decade, several groups started to identify a number of biases that had stymied prior attempts, and developed powerful statistical machinery to correct them. There was some consistent progress for several years. And then, in CASP13 (2018), several groups demonstrated that there was actually no need for robust statistics: you just needed to train deep residual neural networks.\n AlphaFold 2\u2019s Evoformer completely reinvents this process and takes it several steps further.\n The central idea behind the Evoformer is that the information flows back and forth throughout the network. Before AlphaFold 2, most deep learning models would take a multiple sequence alignment and output some inference about geometric proximity. Geometric information was therefore a  product of the network. In the Evoformer, instead, the pair representation is a both a product  and an intermediate layer. At every cycle, the model leverages the current structural hypothesis to improve the assessment of the multiple sequence alignment, which in turns leads to a new structural hypothesis, and so on, and so on. Both representations, sequence and structure, exchange information until the network reaches a solid inference.\n This is easier to understand as an example. Suppose that you look at the multiple sequence alignment and notice a correlation between a pair of amino acids. Let\u2019s call them A and B. You hypothesise that A and B are close, and translate this assumption into your model of the structure. Subsequently, you examine said model and observe that, since A and B are close, there is a good chance that C and D should be close. This leads to another hypothesis, based on the structure, which can be confirmed by searching for correlations between C and D in the MSA. By repeating this several times, you can build a pretty good understanding of the structure.\n   The first step in the network is to define \u201cembeddings\u201d for the MSA and templates. Bear in mind that multiple sequence alignments are ultimately sequences of symbols from a finite alphabet: a prime example of a discrete variable. Neural networks, on the other hand, are intrinsically continuous devices that rely on differentiation to learn from their training set. An \u201cembedding\u201d is a trick from the deep learning magic book that allows the transformation of a discrete variable to a continuous space (\u201cembedded space\u201d) so that the network can be trained.\n Complicated as this may sound, it is in fact very simple. You just need to define a layer of neurons that receives the discrete input and outputs some continuous vector. The embedding may be pretrained, as used to be common in natural language processing (NLP), but more commonly it is trained alongside whatever objective we are trying to learn. In AlphaFold 2, the embeddings are vanilla dense neural networks.\n  Once our MSA and templates are in the correct \u201cembedding space\u201d, it is time for the Evoformer to work its magic. To understand the Evoformer, you first need to be familiar with the hottest deep learning architecture to date: the  transformer. There is no shortage of material explaining this architecture, and quite frankly, many if not most will be better than mine. If you are interested in an in-depth analysis, I would recommend  The Illustrated Transformer, by Jay Alammar. If you just want to know the minimum, read below. And, if you already know transformers like the palm of your hand, hit Ctrl+F and find the sentence \u201cBack to the Evoformer\u201d a few paragraphs below.\n The transformer architecture was introduced in 2017 by a team at Google Brain, in a paper entitled \u201c Attention is all you need\u201c. As you will probably imagine from the conspicuous title, the key ingredient is a novel mechanism called  attention. The objective of attention is to identify which parts of the input are more important for the objective of the neural network. In other words, to identify which parts of the input  it should pay attention to.\n Imagine that you are trying to train a neural network to produce image captions. One possible approach is to train the network to process the whole image \u2014 say ~250k pixels in a 512\u00d7512 picture. This may work, but there are some reasons why it is not the best idea. Perhaps first of all, because this is not what we humans do: when we look into a picture, we do not see it \u201cas a whole\u201d. Instead, we segment it into different patterns: a child, a dog, a frisbee. Luckily, it turns out that we can train a cleverly-designed neural network layer to perform this task. And, empirically, it seems to improve the performance by a lot.\n  Image captioning is not the only example, by far. More related to the original \u201cAttention is all you need\u201d paper is the case of machine translation, where attention reveals which parts of the sequence are important for the current part of the translation.\n  There are a lot of other reasons why transformers are in common use. In machine translation, for example, they help ameliorate the \u201cvanishing gradient problem\u201d, a common hurdle during training. In sequence-based models, they can significantly speed up training with respect to classical recurrent neural network (RNN) models. Most important of all, transformers have empirically demonstrated superior performance in a variety of tasks. In particular, they are behind most of the splashiest AI achievements of the past year \u2014 for example, the GPT in  GPT-3 stands for \u201cGenerative Pre-training Transformer\u201d.\n I do feel I have to mention one last disclaimer before I consider my explanation complete. There is a reason why transformers have not been widely implemented in many fields. The construction of the attention matrix leads to a  quadratic memory cost. Even if you have a last-generation NVIDIA A100 with an 80 GB dedicated memory, that can get filled very quickly. Unsurprisingly, one of the crucial advantages of Google\u2019s celebrated  Tensor Processing Units (TPUs) is the massive amount of memory per core. This situation may change very quickly with the introduction of novel architectures such as the  Performer or the  Perceiver, which reduce this quadratic cost to a pseudo-linear one. But, anyway, I am getting ahead of myself.\n Back to the Evoformer. The Evoformer architecture uses not one, but two transformers (a \u201ctwo-tower architecture\u201d), with one clear communication channel between the two. Each head is specialised for the particular type of data it is looking at, either a multiple sequence alignment, or a representation of pairwise interactions between amino acids. They also incorporate the information of the contiguous representation, allowing for regular exchange of information and iterative refinement.\n Let us first look at the head that attends to the MSA, which I will term the \u201cMSA transformer\u201d, in honour to the  February paper by Facebook AI Research which implements a similar idea. The MSA transformer computes attention over a very large matrix of protein symbols. To reduce what would otherwise be an impossible computational cost, the attention is \u201cfactorised\u201d in \u201crow-wise\u201d and \u201ccolumn-wise\u201d components. Namely, the network first computes attention in the horizontal direction, allowing the network to identify which pairs of amino acids are more related; and then in the vertical direction, determining which sequences are more informative.\n The most important feature of AlphaFold 2\u2019s MSA transformer is that the row-wise (horizontal) attention mechanism incorporates information from the \u201cpair representation\u201d. When computing attention, the network adds a bias term that is calculated directly from the current pair representation. This trick augments the attention mechanism and allows it to pinpoint interacting pairs of residues.\n The other transformer head, the one that acts on the pair representation, works in a similar manner, although a lot of details differ, of course. The key feature of this network is that attention is arranged in terms of triangles of residues. The intuition here is to enforce the triangle inequality, one of the axioms of metric spaces. This is quite a clever idea since one of the classical problems of deep learning-based structure prediction was that distance distributions could not be embedded in three-dimensional space. It seems this trick fixes that and then some more.\n  After a number of iterations, 48 in the paper, the network has built a model of the interactions within the protein. Now, it is the time to build a structure.\n  If you got this far, you probably know by now that AlphaFold 2 processes the sequence search data to generate two \u201crepresentations\u201d: a representation of the multiple sequence alignment (MSA), which captures sequence variation; and a representation of the \u201cpairs of residues\u201d, which captures which residues are likely to interact with each other. The question is now: how do we get a structure from these? This is a job for the structure module\n The idea behind the structure module is conceptually very simple, but it gets muddy through the many, many details of the\n......", "posttime": "2021-07-22 21:34:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ed3\u6784,structure,\u5e8f\u5217", "title": "AlphaFold 2 \u6765\u4e86\uff1a\u7ed3\u6784\u9884\u6d4b\u5947\u8ff9\u7684\u80cc\u540e\u662f\u4ec0\u4e48", "title_en": "AlphaFold 2 is here: what\u2019s behind the structure prediction miracle", "transed": 1, "url": "https://www.blopig.com/blog/2021/07/alphafold-2-is-here-whats-behind-the-structure-prediction-miracle/", "via": "", "real_tags": ["\u7ed3\u6784", "structure", "\u5e8f\u5217"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068748, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u529e\u516c\u5ba4\u91cc\uff0c\u5f53\u4f60\u7684\u540c\u4e8b\u5728 Deep Work \u65f6\uff0c\u8fd9\u662f\u5f88\u660e\u663e\u7684\u3002\u4f60\u770b\u8fc7\u53bb\uff0c\u53d1\u73b0\u5979\u5bf9\u4e00\u4e9b\u4ee3\u7801\u5f88\u611f\u5174\u8da3\u3002\u5979\u5728\u533a\u57df\u5185\uff0c\u773c\u775b\u76ef\u7740\u5c4f\u5e55\u3002\u5982\u679c\u60a8\u7684\u95ee\u9898\u4e0d\u7d27\u6025\uff0c\u8bf7\u4fdd\u5b58\u4ee5\u5907\u540e\u7528\u3002\u5982\u679c\u4e8b\u60c5\u5f88\u7d27\u6025\uff0c\u4f60\u4f1a\u6253\u65ad\u5e76\u8ba9\u6240\u6709\u4eba\u90fd\u5728\u7532\u677f\u4e0a\u3002\u5f53\u60a8\u5728\u529e\u516c\u5ba4\u65f6\uff0c\u60a8\u7684\u540c\u4e8b\u4f11\u606f\u65f6\u4e5f\u5f88\u660e\u663e\u3002\u5979\u4f1a\u79bb\u5f00\u5979\u7684\u529e\u516c\u684c\u3002\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u4e0d\u7d27\u6025\u7684\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u4fdd\u5b58\u4ee5\u5907\u540e\u7528\u3002\u5982\u679c\u5b83\u5f88\u7d27\u6025\uff0c\u4f60\u53d1\u9001\u4e00\u4e2a\u9875\u9762\u5e76\u53bb\u5bfb\u627e\u3002\u4f7f\u7528\u5728\u5bb6\u5de5\u4f5c\uff0c\u60a8\u6ca1\u6709\u8fd9\u79cd\u76f8\u540c\u7c7b\u578b\u7684\u53ef\u89c1\u6027\u3002\u91cd\u65b0\u521b\u5efa\u5b83\u9700\u8981\u66f4\u591a\u7684\u52aa\u529b\uff0c\u4f46\u5b83\u53ef\u80fd\u662f\u503c\u5f97\u7684\uff0c\u5e76\u63d0\u4f9b\u8d85\u51fa\u961f\u53cb\u53ef\u89c1\u6027\u7684\u597d\u5904\u3002\u8fc7\u53bb\u51e0\u5468\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5c1d\u8bd5\u4f7f\u7528\u4e00\u7ec4 4 \u4e2a\u8868\u60c5\u7b26\u53f7\u6765\u8868\u793a\u6211\u4eec\u5f53\u524d\u7684\u5de5\u4f5c\u72b6\u6001\uff1a\u6df1\u5ea6\u5de5\u4f5c\u3001\u6df1\u5ea6\u4f11\u606f\u3001\u5916\u51fa (OOO)\u3001\u6b63\u5728\u5f00\u4f1a\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u81ea\u5b9a\u4e49\u4e3a\u6700\u9002\u5408\u60a8\u7684\u56e2\u961f\u7684\u72b6\u6001\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5728 Bytebase \u4f7f\u7528\u7684\uff1a\u6211\u4eec\u6d4b\u8bd5\u5b83\u7684\u6700\u521d\u76ee\u6807\u662f\u770b\u770b\u5b83\u662f\u5426\u4f1a\u4f7f\u534f\u4f5c\u66f4\u52a0\u65e0\u7f1d\u3002\u5c31\u50cf\u5728\u529e\u516c\u5ba4\u4e00\u6837\uff0c\u4e86\u89e3\u662f\u5426\u6709\u4eba\u53ef\u4ee5\u52a0\u5165\u5e76\u914d\u5bf9\u6216\u4ed6\u4eec\u662f\u5426\u4e0d\u53ef\u7528\u662f\u5f88\u6709\u7528\u7684\u3002\u5bf9\u67d0\u4eba\u6267\u884c ping \u64cd\u4f5c\u5374\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u5f97\u5230\u54cd\u5e94\u53ef\u80fd\u4f1a\u4ee4\u4eba\u8d39\u89e3\u3002\u5f53\u4f60\u5728\u505a\u67d0\u4e8b\u7684\u65f6\u5019\uff0c\u6536\u5230\u4e0d\u7d27\u6025\u7684\u4ea4\u6d41\u4f1a\u8ba9\u4eba\u5206\u5fc3\u3002\u4e86\u89e3\u961f\u53cb\u5728\u505a\u4ec0\u4e48\u53ef\u4ee5\u8ba9\u60a8\u8c03\u6574\u5f53\u5929\u7684\u8ba1\u5212\u3002\u901a\u8fc7 Slack Statuses\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u961f\u53cb\u4f55\u65f6\u5904\u4e8e\u6df1\u5ea6\u5de5\u4f5c\u3001\u4f11\u606f\u6216\u53ef\u4ee5\u52a0\u5165\u6211\u4eec\u3002\u8fd9\u662f\u4e00\u79cd\u51cf\u5c11\u534f\u4f5c\u6469\u64e6\u7684\u8f7b\u91cf\u7ea7\u65b9\u6cd5\u3002\n\u6709\u4e24\u4e2a\u56e0\u7d20\u5bfc\u81f4\u6211\u4eec\u6bcf\u4e2a\u4eba\u5728 Deep Work \u6216 Deep Break/Out of Office \u4e0a\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\uff1a\u4f5c\u4e3a\u4e00\u4e2a\u56e2\u961f\uff0c\u6211\u4eec\u7279\u522b\u91cd\u89c6 Deep Work \u548c Deep Breaks\u3002\u6df1\u5ea6\u5de5\u4f5c\u662f\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\u3002\u8fd9\u662f\u5bcc\u6709\u6210\u6548\u7684\uff0c\u5b83\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u3002 Deep Breaks \u8ba9\u6211\u4eec\u53ef\u4ee5\u5728\u5de5\u4f5c\u4e4b\u4f59\u5145\u7535\u5e76\u4eab\u53d7\u65f6\u5149\u3002\u5b83\u4eec\u5bf9\u4e8e\u9632\u6b62\u5026\u6020\u81f3\u5173\u91cd\u8981\u3002\u677e\u5f1b\u72b6\u6001\u5e2e\u52a9\u6211\u4eec\u8ba9\u5f7c\u6b64\u5bf9\u6211\u4eec\u5982\u4f55\u5ea6\u8fc7\u65f6\u95f4\u8d1f\u8d23\u3002\u72b6\u6001\u4e3a\u56e2\u961f\u63d0\u4f9b\u4e86\u53cd\u601d\u7684\u597d\u673a\u4f1a\u3002\u5f53\u961f\u53cb\u6ca1\u6709\u8db3\u591f\u7684\u4e0d\u95f4\u65ad\u7684 Deep Work \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u662f\u4ec0\u4e48\u7e41\u5fd9\u7684\u5de5\u4f5c\u6216\u5176\u4ed6\u6311\u6218\u9020\u6210\u4e86\u963b\u788d\u3002\u5f53\u961f\u53cb\u665a\u4e0a\u5341\u70b9\u5728\u201c\u6df1\u5ea6\u5de5\u4f5c\u201d\u65f6\uff0c\u8fd9\u4e5f\u503c\u5f97\u8ba8\u8bba\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f46\u91cd\u8981\u7684\u662f\u8981\u6709\u5145\u5206\u7684\u4f11\u606f\u65f6\u95f4\u4ee5\u907f\u514d\u5026\u6020\u3002\u665a\u4e0a\u5341\u70b9\u901a\u5e38\u662f\u4f11\u606f\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u56e2\u961f\u95ee\u8d23\u5236\u5e76\u4e0d\u662f\u4f7f\u7528 Slack \u72b6\u6001\u7684\u6700\u5927\u4f18\u52bf\u3002\u5f53\u6211\u5c06\u6211\u7684\u8868\u60c5\u7b26\u53f7\u8bbe\u7f6e\u4e3a\u201c\u6df1\u5ea6\u5de5\u4f5c\u201d\u65f6\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4e0a Twitter \u6216\u9605\u8bfb\u6587\u7ae0\u7b26\u5408\u6211\u7684\u6700\u5927\u5229\u76ca\u3002\u6211\u6b63\u5728\u4e3a\u63a5\u4e0b\u6765\u7684\u4e00\u6bb5\u65f6\u95f4\u8bbe\u5b9a\u6211\u7684\u610f\u56fe\u3002\u8fd9\u51cf\u5c11\u4e86\u6211\u65e0\u610f\u8bc6\u5730\u8fdb\u5165\u4e00\u4e9b\u5b9e\u9645\u4e0a\u4e0d\u7b26\u5408\u6211\u5f53\u5929\u4f18\u5148\u4e8b\u9879\u7684\u5154\u5b50\u6d1e\u7684\u53ef\u80fd\u6027\u3002\u540c\u6837\uff0c\u5f53\u6211\u5904\u4e8e\u201c\u6df1\u5ea6\u4f11\u606f\u201d\u72b6\u6001\u65f6\uff0c\u6211\u6700\u597d\u4e0d\u8981\u67e5\u770b Slack \u6216\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u7684\u961f\u53cb\u77e5\u9053\u6211\u6b63\u5728\u4f11\u606f\uff0c\u5982\u679c\u9700\u8981\u6211\u4f1a\u901a\u8fc7\u9875\u9762/\u7535\u8bdd\u8054\u7cfb\u6211\u3002\u5f53\u6211\u5c06\u6211\u7684\u8868\u60c5\u7b26\u53f7\u8bbe\u7f6e\u4e3a\u201c\u5bb6\u201d\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eca\u5929\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u6211\u4e0d\u5e94\u8be5\u5728\u968f\u673a\u65f6\u95f4\u8fdb\u6765\u548c\u7f16\u7801\u3002\u6211\u7684\u610f\u601d\u662f\u653e\u677e\uff0c\u800c\u4e0d\u662f\u5728\u6b63\u5e38\u65f6\u95f4\u4e4b\u5916\u505a\u968f\u673a\u5206\u6563\u7684\u5de5\u4f5c\u3002\n\u6211\u7684\u76ee\u6807\u662f\u6700\u5927\u5316\u6df1\u5ea6\u5de5\u4f5c\u548c\u6df1\u5ea6\u4f11\u606f\u3002\u5f53\u6211\u6ce8\u610f\u5230\u6211\u5df2\u7ecf\u201c\u5de5\u4f5c\u201d\u4e86\u4e00\u6bb5\u65f6\u95f4\u65f6\uff0c\u6211\u4f1a\u505c\u4e0b\u6765\u9009\u62e9\u6df1\u5ea6\u5de5\u4f5c\u6216\u6df1\u5ea6\u4f11\u606f\u65b9\u5411\u3002\u6df1\u5ea6\u5de5\u4f5c\u662f\u5de5\u4f5c\u65e5\u4e2d\u6700\u4ee4\u4eba\u6ee1\u610f\u548c\u6700\u6709\u6210\u5c31\u611f\u7684\u90e8\u5206\u3002\u662f\u65f6\u5019\u82b1\u65f6\u95f4\u89e3\u51b3\u95ee\u9898\u548c\u6784\u5efa\u4e86\u3002\u8fd9\u5f88\u6709\u8da3\uff0c\u4e5f\u5f88\u5145\u5b9e\u3002\u8fd9\u4e5f\u9700\u8981\u5f88\u591a\u7cbe\u529b\u2014\u2014\u4e0d\u53ef\u80fd\u6bcf\u5929\u90fd\u82b1\u4e00\u6574\u5929\u7684\u65f6\u95f4\u5728\u6df1\u5ea6\u5de5\u4f5c\u4e2d\u3002\u6df1\u5ea6\u4f11\u606f\u6216\u5b8c\u5168\u4e0d\u5408\u65f6\u5b9c\u7684\u65f6\u95f4\u4e5f\u5f88\u91cd\u8981\u3002\u4f7f\u7528 WFH \u4fdd\u62a4\u5b83\u4eec\u8981\u56f0\u96be\u5f97\u591a\uff0c\u56e0\u4e3a\u5f88\u5bb9\u6613\u8ba9\u81ea\u5df1\u56de\u5230\u5de5\u4f5c\u6a21\u5f0f\u3002\u4f46\u662f\u901a\u8fc7\u8bbe\u5b9a\u6211\u7684\u610f\u56fe\uff0c\u6211\u6709\u66f4\u591a\u7684\u4f11\u606f\u65f6\u95f4\uff0c\u6ca1\u6709\u5185\u759a\u6216\u611f\u89c9\u9700\u8981\u7acb\u5373\u56de\u590d\u6d88\u606f\u3002\u5728\u5c1d\u8bd5\u5c06 Slack Statuses \u4f5c\u4e3a\u8fdc\u7a0b\u5de5\u4f5c\u7684\u5de5\u5177\u540e\uff0c\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e9b\u6539\u8fdb\u7684\u673a\u4f1a\u3002\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u5f00\u59cb\u6df1\u5165\u5de5\u4f5c\u5e76\u5fd8\u8bb0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6211\u4eec\u7684\u610f\u56fe\u3002\u5373\uff0c\u4ece\u66f4\u6d45\u7684\u5de5\u4f5c\u5f00\u59cb\u7684\u4e8b\u60c5\u53d8\u6210\u4e86\u6211\u65e0\u6cd5\u56de\u590d\u6d88\u606f\u7684\u6df1\u5ea6\u5de5\u4f5c\u3002\u540c\u6837\uff0c\u5f53\u5bb6\u91cc\u51fa\u73b0\u67d0\u4e9b\u4e8b\u60c5\u65f6\uff0c\u6211\u65e0\u6cd5\u56de\u5e94\u7684\u4f11\u606f\u65f6\u95f4\u53ef\u80fd\u4f1a\u7a81\u7136\u5f00\u59cb\u3002\u8fd9\u79cd\u7f3a\u4e4f\u53ef\u89c1\u6027\u4f1a\u5bfc\u81f4\u6df7\u4e71\u3002\u5f53\u60a8\u5c06\u201c\u6df1\u5ea6\u5de5\u4f5c\u201d\u8bbe\u7f6e\u4e3a\u60a8\u7684\u7126\u70b9\u4e00\u5c0f\u65f6\u540e\uff0c\u5b83\u5c06\u6e05\u9664\u4e3a\u672a\u8bbe\u7f6e\u72b6\u6001\u7684\u72b6\u6001\u3002\u6700\u6709\u53ef\u80fd\u7684\u662f\uff0c\u60a8\u4ecd\u5728 Deep Work \u4e2d\uff0c\u4f46 Slack \u5e76\u672a\u518d\u6b21\u786e\u8ba4\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u8ba9\u72b6\u6001\u6c38\u8fdc\u4e0d\u4f1a\u6e05\u9664\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u4e0a\u8ff0\u95ee\u9898\uff08\u5fd8\u8bb0\u8bbe\u7f6e\u72b6\u6001\uff09\u3002\u6d1e\u5bdf\u529b\u5fc5\u987b\u57fa\u4e8e\u76f4\u89c9\u2014\u2014\u6ca1\u6709\u4e0e\u72b6\u6001\u4f7f\u7528\u76f8\u5173\u7684\u8ddf\u8e2a\u3002\u67e5\u770b\u5728 Deep Work \u548c Deep Break/Out of Office \u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u7ec6\u5206\u4ee5\u4e86\u89e3\u6211\u4eec\u5982\u4f55\u4e0d\u65ad\u6539\u8fdb\u4f1a\u5f88\u6709\u5e2e\u52a9\uff01\n\u4f7f\u7528\u72b6\u6001\u6765\u4fdd\u62a4\u6df1\u5ea6\u5de5\u4f5c\u548c\u6df1\u5ea6\u4f11\u606f\u4e0d\u53d7\u5e72\u6270\u662f\u5f88\u6709\u4ef7\u503c\u7684\u3002\u4e00\u4e2a\u56e2\u961f\u4f7f\u7528\u72b6\u6001\u6765\u4e3a\u4f60\u5982\u4f55\u5b89\u6392\u4f60\u7684\u4e00\u5929\u5236\u9020\u5185\u759a\u662f\u4e0d\u5065\u5eb7\u7684\u3002\u5982\u679c\u60a8\u7684\u5496\u5561\u4f11\u606f\u65f6\u95f4\u5f88\u957f\uff0c\u4f46\u60a8\u53ef\u4ee5\u5728 Slack \u4e2d\u56de\u590d\uff0c\u5219\u6ca1\u6709\u5fc5\u8981\u5e7f\u64ad\u60a8\u6b63\u5728\u201c\u4f11\u606f\u201d\u3002\u72b6\u6001\u4e0d\u662f\u4e3a\u4e86\u5fae\u89c2\u7ba1\u7406\uff0c\u800c\u662f\u7ed9\u4f60\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9009\u62e9\u6211\u4eec\u7684 Slack Status \u5efa\u8bae\u4e3a Deep Work\u3001Deep Break \u548c Out of Office\u3002\u6211\u4eec\u6545\u610f\u6ca1\u6709\u4e00\u4e2a\u7528\u4e8e\u201c\u5de5\u4f5c\u201d\u7684\uff0c\u56e0\u4e3a\u5b83\u88ab\u5047\u5b9a\u4e3a\u57fa\u7ebf\u60c5\u51b5\u5e76\u4e14\u592a\u6709\u5229\u4e8e\u5fae\u89c2\u7ba1\u7406\u3002\u60a8\u662f\u5426\u5c1d\u8bd5\u8fc7\u5c06 Slack \u72b6\u6001\u7528\u4f5c\u8fdc\u7a0b\u56e2\u961f\uff1f\u544a\u8bc9\u6211\u4eec\u60a8\u5728 hello@bytebase.io \u6216 @Bytebaseapp \u4e0a\u5b66\u5230\u4e86\u4ec0\u4e48\u3002 Bytebase \u662f\u4e00\u6b3e\u7b14\u8bb0\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u5e2e\u52a9\u60a8\u5728\u5728\u5bb6\u5de5\u4f5c\u65f6\u7406\u6e05\u601d\u8def\u3001\u786e\u5b9a\u4f18\u5148\u7ea7\u5e76\u5b8c\u6210\u66f4\u591a\u6df1\u5ea6\u5de5\u4f5c\u3002\u5728 https://bytebase.io \u8bf7\u6c42\u8bbf\u95ee\u3002", "note_en": "In the office, it\u2019s pretty obvious when your colleague is in  Deep Work. You look over and see that she\u2019s deep in some code. She\u2019s in the zone, with her eyes glued to the screen. If your question isn\u2019t urgent, you save it for later. If it\u2019s urgent, you interrupt and get all hands on deck.\n When you\u2019re in the office, it\u2019s also obvious when your colleague is on a break. She\u2019ll be away from her desk. If you have a non-urgent question, you save it for later. If it\u2019s urgent, you send a page and go looking.\n With Work From Home, you don\u2019t have this same type of visibility. It takes a little more effort to recreate it, but it can be worthwhile and provide benefits beyond teammate visibility.\n  The last few weeks, we\u2019ve been experimenting with using a set of 4 emojis to denote our current status at work: Deep Work, Deep Break, Out of Office (OOO), In a meeting.\n     You can customize them to the statuses that work best for your team. This is what we use at Bytebase:\n     Our original goal in testing this out was to see if it would make collaboration more seamless. Just like in the office, it\u2019s useful to know if someone is available to jump in and pair or if they\u2019re unavailable. It can be puzzling to ping someone and not get a response for a while. And it\u2019s distracting to receive non-urgent communication when you\u2019re in the middle of something. Knowing what teammates are up to lets you adapt your plan for the day.\n With Slack Statuses, we know when a teammate is in Deep Work, on a break, or available to jump in with us. It\u2019s a lightweight way to reduce friction to collaborating.\n   There are two factors that have resulted in each of us spending more time in Deep Work or in Deep Break/Out of Office:\n   As a team, we especially value Deep Work and Deep Breaks. Deep Work is when we problem-solve. It\u2019s productive and it\u2019s satisfying. Deep Breaks allow us to recharge and enjoy time outside of work. They\u2019re essential to prevent burnout. Slack Statuses help us hold one another accountable in how we spend our time.\n Statuses create a good opportunity for reflection as a team. When a teammate doesn\u2019t have enough uninterrupted Deep Work, we can look into what busy-work or other challenges are getting in the way. When a teammate is in \u201cDeep Work\u201d at ten at night, that can also be worth discussing. Everyone has their own working style but it\u2019s important to have time for full breaks in order to avoid burnout. Ten at night would usually be a break time.\n However, we found team accountability isn\u2019t the biggest advantage of using Slack Statuses.\n  When I set my emoji to be \u201cDeep Work,\u201d it\u2019s in my best interest to not actually be on twitter or reading articles. I\u2019m setting my intention for the next period of time. This reduces the likelihood that I mindlessly go down some rabbit hole that is not actually in line with my priorities for the day.\n Likewise, when I\u2019m on a \u201cDeep Break\u201d, I better not be checking Slack or email. My teammates know I\u2019m on a Deep Break and will reach me via page / call if I\u2019m needed.\n When I set my emoji to \u201cHome,\u201d this means I\u2019m done for the day. I shouldn\u2019t be coming in at a random time and coding. I\u2019m meant to be relaxing, not doing random scattered work outside of regular hours.\n My goal is to maximize Deep Work and Deep Breaks. When I notice I\u2019ve been \u201cworking\u201d for a while, I pause and choose either a Deep Work or Deep Break direction instead.\n  Deep Work is the most satisfying and fulfilling part of the work day. It\u2019s time spent problem-solving and building. It\u2019s fun and it\u2019s fulfilling. It also takes a lot of energy - it\u2019s not possible to spend your whole day in Deep Work every day.\n  Deep Breaks or time completely off the clock are essential too. They\u2019re a lot harder to protect with WFH because it\u2019s easy to let yourself drift back into work mode. But by setting my intention, I have more full breaks, without guilt or feeling like I need to respond to messages immediately.\n  After experimenting with Slack Statuses as a tool for remote work, we ran into a few opportunities for improvement.\n  We\u2019ve run into issues where we start Deep Work and forget to set that as our intention. I.e., something that started as more shallow work becomes Deep Work where I am not available to respond to messages. Likewise, a break where I\u2019m not available to respond can start suddenly when something comes up at home. This lack of visibility can lead to confusion.\n  When you set \u2018Deep Work\u2019 as your focus for one hour, it will clear to a state where no Status is set. Most likely, you\u2019re still in Deep Work but Slack doesn\u2019t re-affirm this. Our workaround is to have the Statuses never clear, but this results in the above problem (forgetting to set the Status).\n  Insights have to be based on intuition - there\u2019s no tracking linked to Status usage. It would be helpful to see a breakdown of time spent in Deep Work, and Deep Break/Out of Office to see how we can keep improving!\n  It\u2019s valuable to use Statuses to protect Deep Work and Deep Breaks from interruptions. It\u2019s not healthy for a team to use Statuses to create guilt around how you structure your day. If your coffee break goes long but you\u2019re available to respond in Slack, it\u2019s unnecessary to broadcast that you\u2019re on a \u201cbreak.\u201d Statuses aren\u2019t for micro-managing, they\u2019re for you. That\u2019s why we\u2019ve chosen our Slack Status suggestions to be Deep Work, Deep Break, and Out of Office. We intentionally do not have one for \u2018Working\u2019 because that\u2019s assumed to be the baseline case and is too conducive to micromanagement.\n  Have you tried using Slack Statuses as a remote team? Tell us what you\u2019ve learned at  hello@bytebase.io or  @Bytebaseapp.\n  Bytebase is a notes app that helps you clear your mind, prioritize, and do more Deep Work as you work from home. Request access at  https://bytebase.io.", "posttime": "2021-07-22 21:33:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fdc\u7a0b\u5de5\u4f5c,slack", "title": "\u6211\u5728\u8fdc\u7a0b\u5de5\u4f5c\u65f6\u5b66\u5230\u7684\u5173\u4e8e\u4f7f\u7528 Slack \u72b6\u6001\u7684\u77e5\u8bc6", "title_en": "What I learned about using Slack statuses when working remotely", "transed": 1, "url": "https://bytebase.io/blog/slack-status-remote-work/", "via": "", "real_tags": ["\u8fdc\u7a0b\u5de5\u4f5c", "slack"]}]
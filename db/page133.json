[{"category": "", "categoryclass": "", "imagename": "1361b06937bf19bb40267a3ec51319b0.jpg", "infoid": 1071210, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u4eca\u5929\u5ba3\u5e03\u63a8\u51fa Pixel 6 \u548c Pixel 6 Pro\uff0c\u4e0d\u8fc7\u6700\u597d\u5c06\u5176\u79f0\u4e3a\u9884\u89c8\u7248\u6216\u6311\u9017\u7248\u3002\u8c37\u6b4c\u6ca1\u6709\u53d1\u5e03\u5176\u65b0 Android \u624b\u673a\u7684\u6240\u6709\u7ec6\u8282\uff0c\u800c\u662f\u5c06\u91cd\u70b9\u653e\u5728\u65b0 Pixel \u4e2d\u7684\u65b0\u7247\u4e0a\u7cfb\u7edf (SoC) \u4e0a\u3002\u5b83\u88ab\u79f0\u4e3a Tensor SoC\uff0c\u4ee5 Google \u5728\u5176\u6570\u636e\u4e2d\u5fc3\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u5904\u7406\u5355\u5143 (TPU) \u547d\u540d\u3002 Tensor \u662f\u4e00\u4e2a SoC\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u5904\u7406\u5668\u3002\u56e0\u6b64\uff0c\u867d\u7136\u79f0\u5176\u4e3a Google \u8bbe\u8ba1\u662f\u516c\u5e73\u7684\uff0c\u4f46\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u54ea\u4e9b\u7ec4\u4ef6\u662f Google \u5236\u9020\u7684\uff0c\u54ea\u4e9b\u662f\u4ece\u5176\u4ed6\u4eba\u90a3\u91cc\u83b7\u5f97\u8bb8\u53ef\u7684\u3002\u8c37\u6b4c\u80af\u5b9a\u6709\u4e24\u4ef6\u4e8b\uff1a\u7528\u4e8e\u4eba\u5de5\u667a\u80fd\u64cd\u4f5c\u7684\u79fb\u52a8 TPU \u548c\u7528\u4e8e\u5b89\u5168\u7684\u65b0 Titan M2 \u82af\u7247\u3002\u5176\u4f59\u7684\uff0c\u5305\u62ec CPU\u3001GPU \u548c 5G \u8c03\u5236\u89e3\u8c03\u5668\uff0c\u4ecd\u7136\u662f\u4e2a\u8c1c\u3002\u4e0d\u90a3\u4e48\u795e\u79d8\uff1a\u624b\u673a\u672c\u8eab\u3002\u4e0a\u5468\uff0c\u6211\u5728\u8c37\u6b4c\u5c71\u666f\u57ce\u56ed\u533a\u82b1\u4e86\u5927\u7ea6\u4e00\u4e2a\u5c0f\u65f6\u67e5\u770b\u624b\u673a\u786c\u4ef6\uff0c\u5e76\u4e0e\u8c37\u6b4c\u786c\u4ef6\u4e3b\u7ba1 Rick Osterloh \u8c08\u8bba Tensor\u3002\u6bd5\u7adf\uff0c\u6211\u5bf9\u65b0\u6b3e Pixel 6 \u624b\u673a\u7684\u4e3b\u8981\u770b\u6cd5\u5f88\u7b80\u5355\u3002\u4eca\u5e74\u79cb\u5929\uff0c\u8c37\u6b4c\u5c06\u53d1\u5e03\u4e24\u6b3e\u7565\u6709\u4e0d\u540c\u7684 Pixel \u624b\u673a\uff1aPixel 6 \u548c Pixel 6 Pro\u3002\u5982\u679c\u6700\u7ec8\u7248\u672c\u4e0e\u6211\u4e0a\u5468\u770b\u5230\u7684\u539f\u578b\u7c7b\u4f3c\uff0c\u90a3\u4e48\u5b83\u4eec\u5c06\u662f\u7b2c\u4e00\u6b3e\u5728\u6784\u5efa\u8d28\u91cf\u65b9\u9762\u4e0d\u4f1a\u8ba9\u4eba\u89c9\u5f97\u81ea\u5df1\u662f\u6c99\u888b\u7684 Pixel \u624b\u673a\u3002 \u201c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u4e0d\u5177\u5907[\u8fc7\u53bb]\u8d85\u9ad8\u7aef\u6240\u9700\u7684\u6761\u4ef6\uff0c\u201dOsterloh \u627f\u8ba4\u9053\u3002 \u201c\u8fd9\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u89c9\u5f97\u6211\u4eec\u771f\u7684\u62e5\u6709\u5b83\u3002\u201d\u4e24\u79cd\u7248\u672c\u7684 Pixel \u90fd\u662f\u73bb\u7483\u4e09\u660e\u6cbb\uff0c\u5916\u89c2\u5408\u8eab\uff0c\u6700\u7ec8\u4e0e\u4e09\u661f\u3001\u534e\u4e3a\u548c\u82f9\u679c\u6240\u63d0\u4f9b\u7684\u4ea7\u54c1\u5904\u4e8e\u540c\u4e00\u6863\u6b21\u3002 \u201c\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4eec\u7edd\u5bf9\u6ca1\u6709\u8fdb\u5165\u65d7\u8230\u7ea7\u522b\uff0c\u8fd9\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u201d\u5965\u65af\u7279\u6d1b\u8bf4\u3002\u4ed6\u8fd8\u627f\u8ba4\u201c\u5b83\u80af\u5b9a\u4f1a\u662f\u4e00\u79cd\u9ad8\u4ef7\u4ea7\u54c1\u201d\uff0c\u6211\u8ba4\u4e3a\u8fd9\u610f\u5473\u7740 1,000 \u7f8e\u5143\u4ee5\u4e0a\u3002\u8c37\u6b4c\u53ea\u5206\u4eab\u4e86\u6bcf\u90e8\u624b\u673a\u7684\u4e00\u4e9b\u5173\u952e\u89c4\u683c\uff0c\u7ec6\u8282\u7559\u5f85\u4ee5\u540e\u2014\u2014\u53ef\u80fd\u662f 10 \u6708\u3002 \uff08\u4e0d\uff0c\u6ca1\u6709\u63d0\u5230\u6298\u53e0\u624b\u673a\u6216\u624b\u8868\u3002\uff09\u8c37\u6b4c\u4e5f\u4e0d\u5141\u8bb8\u6211\u4eec\u5728\u4f1a\u8bae\u671f\u95f4\u62cd\u6444\u8bbe\u5907\u7684\u7167\u7247\u6216\u89c6\u9891\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u77e5\u9053\u7684\uff1aPixel 6 Pro \u5c06\u914d\u5907 6.7 \u82f1\u5bf8 QHD+ \u663e\u793a\u5c4f\uff0c\u5237\u65b0\u7387\u4e3a 120Hz\u3002\u8be5\u5c4f\u5e55\u7684\u8fb9\u7f18\u7565\u5fae\u5f2f\u66f2\uff0c\u4e0e\u4fa7\u9762\u6709\u5149\u6cfd\u7684\u629b\u5149\u94dd\u5236\u5bfc\u8f68\u878d\u4e3a\u4e00\u4f53\u3002\u5b83\u7684\u80cc\u9762\u6709\u4e09\u4e2a\u6444\u50cf\u5934\uff1a\u4e00\u4e2a\u65b0\u7684\u5e7f\u89d2\u4e3b\u4f20\u611f\u5668\u3001\u4e00\u4e2a\u8d85\u5e7f\u89d2\u955c\u5934\u548c\u4e00\u4e2a 4 \u500d\u5149\u5b66\u53d8\u7126\u6298\u53e0\u957f\u7126\u955c\u5934\u3002\u9664\u4e86\u8bf4\u4e3b\u5e7f\u89d2\u4f20\u611f\u5668\u5438\u6536\u7684\u5149\u7ebf\u589e\u52a0\u4e86 150% \u4e4b\u5916\uff0c\u8c37\u6b4c\u5e76\u6ca1\u6709\u5206\u4eab\u76f8\u673a\u7684\u89c4\u683c\u3002\n\u5e38\u89c4 Pixel 6 \u5177\u6709 6.4 \u82f1\u5bf8 FHD+ \u5c4f\u5e55\uff0c\u5237\u65b0\u7387\u4e3a 90Hz\u3002\u5b83\u7684\u5c4f\u5e55\u975e\u5e38\u5e73\u6574\uff0c\u5e26\u6709\u78e8\u7802\u5bfc\u8f68\u3002\u5b83\u4e5f\u5931\u53bb\u4e86\u957f\u7126\u76f8\u673a\u3002\u5c3d\u7ba1\u8fd9\u4e24\u6b3e\u624b\u673a\u7684\u5185\u5b58\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u4e24\u8005\u90fd\u5c06\u914d\u5907\u65b0\u7684 Tensor SoC\u3001Titan M2 \u5b89\u5168\u82af\u7247\u548c\u663e\u793a\u5c4f\u6307\u7eb9\u4f20\u611f\u5668\u3002\u8fd9\u4e24\u79cd\u624b\u673a\u7684\u989c\u8272\u9009\u62e9\u4f1a\u7565\u6709\u4e0d\u540c\u3002\u4e0e\u504f\u5149\u8bbe\u8ba1\u7684\u60c5\u51b5\u4e00\u6837\uff0cPixel 6 \u548c 6 Pro \u7684\u5916\u89c2\u6bd4\u6cc4\u9732\u7684\u56fe\u50cf\u66f4\u6709\u610f\u4e49\u3002\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u201c\u76f8\u673a\u6746\u201d\uff0c\u8d2f\u7a7f\u624b\u673a\u7684\u6574\u4e2a\u5bbd\u5ea6\uff0c\u51e0\u4e4e\u6ca1\u6709\u51f8\u8d77\u7684\u91d1\u5c5e\u5bfc\u8f68\u53ef\u4ee5\u4fdd\u62a4\u73bb\u7483\u514d\u53d7\u5212\u4f24\u3002\u5728\u5927\u624b\u673a\u4e0a\u5904\u7406\u5927\u91cf\u76f8\u673a\u98a0\u7c38\u7684\u65b9\u6cd5\u53ea\u6709\u8fd9\u4e48\u591a\uff0c\u7528\u5965\u65af\u7279\u6d1b\u7684\u8bdd\u6765\u8bf4\uff0c\u8c37\u6b4c\u7684\u89e3\u51b3\u65b9\u6848\u662f\u201c\u5e86\u795d\u548c\u7a81\u51fa\u201d\u5b83\u4eec\u3002\u5982\u679c\u8c37\u6b4c\u6240\u505a\u7684\u53ea\u662f\u5c06 Pixel \u4ea7\u54c1\u7ebf\u4ece\u4e2d\u7aef\u7684\u4f4e\u8ff7\u4e2d\u62ef\u6551\u51fa\u6765\uff0c\u90a3\u5c06\u610f\u4e49\u91cd\u5927\uff0c\u4f46\u4e0d\u503c\u5f97\u63d0\u524d\u51e0\u4e2a\u6708\u63d0\u524d\u5ba3\u5e03\u3002 Pixel 6 \u548c 6 Pro \u6700\u91cd\u8981\u7684\u90e8\u5206\u662f Google \u5728\u5185\u90e8\u4f7f\u7528\u4e86\u65b0\u7684 Tensor SoC\u3002\u9ad8\u901a\u5b9e\u9645\u4e0a\u5784\u65ad\u4e86\u7f8e\u56fd Android \u8bbe\u5907\u7684\u5904\u7406\u5668\u3002\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u7531\u4e8e\u4e09\u661f\u3001\u8054\u53d1\u79d1\u548c\u534e\u4e3a\u90fd\u5728 Android \u624b\u673a\u4e2d\u4f7f\u7528\u82af\u7247\uff0c\u56e0\u6b64\u7ade\u4e89\u66f4\u52a0\u6fc0\u70c8\u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0cAndroid \u624b\u673a\u7684\u5904\u7406\u80fd\u529b\u88ab\u8ba4\u4e3a\u8fdc\u8fdc\u843d\u540e\u4e8e\u82f9\u679c\u5728\u5176 A \u7cfb\u5217\u82af\u7247\u4e0a\u4f7f\u7528\u81ea\u5df1\u7684\u5185\u90e8\u82af\u7247\u6240\u505a\u7684\u4e8b\u60c5\u3002\u7531\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u8c37\u6b4c\u662f\u5426\u6709\u53ef\u80fd\u5236\u9020\u51fa\u66f4\u5177\u7ade\u4e89\u529b\u7684\u82af\u7247\u6765\u533a\u5206\u5176\u4ea7\u54c1\uff0c\u8fd9\u5f15\u8d77\u4e86\u5f88\u591a\u4eba\u7684\u5174\u8da3\u3002\u4f46\u662f\u4e0d\u8981\u8ba9\u8fd9\u79cd\u5174\u8da3\u4f7f\u60a8\u8ba4\u4e3a Tensor \u5b8c\u5168\u7b49\u540c\u4e8e Apple \u7684 A \u7cfb\u5217\u82af\u7247\u3002 Tensor \u662f\u7247\u4e0a\u7cfb\u7edf\uff0c\u6df7\u5408\u4e86 Google \u81ea\u5df1\u8bbe\u8ba1\u7684\u7ec4\u4ef6\u548c\u5b83\u5df2\u83b7\u5f97\u8bb8\u53ef\u7684\u5176\u4ed6\u7ec4\u4ef6\u3002 \u201c\u6211\u4eec\u82b1\u4e86\u51e0\u5e74\u65f6\u95f4\uff0c\u4f46\u6211\u4eec\u7ec8\u4e8e\u5efa\u7acb\u4e86\u4e00\u4e2a\u6211\u4eec\u8ba4\u4e3a\u975e\u5e38\u91cd\u8981\u7684\u6280\u672f\u5e73\u53f0\u3002\u201d\n\u8c37\u6b4c\u6ca1\u6709\u5206\u4eab\u8c01\u8bbe\u8ba1\u4e86 CPU \u548c GPU\uff0c\u4e5f\u6ca1\u6709\u5206\u4eab\u4ed6\u4eec\u7684\u6027\u80fd\u57fa\u51c6\u2014\u2014\u5c3d\u7ba1\u5965\u65af\u7279\u6d1b\u8bf4\u5b83\u5e94\u8be5\u662f\u201c\u5e02\u573a\u9886\u5148\u7684\u201d\u3002 \uff08\u76ee\u524d\u6709\u4f20\u8a00\u79f0\uff0c\u4e09\u661f\u53ef\u80fd\u4f1a\u63d0\u4f9b\u90a3\u4e9b\u66f4\u6807\u51c6\u7684\u7ec4\u4ef6\u8bbe\u8ba1\u3002\uff09\u4ed6\u8865\u5145\u9053\uff0c\u201c\u4eba\u4eec\u770b\u5230\u7684\u6807\u51c6\u4ea7\u54c1\u5c06\u975e\u5e38\u5177\u6709\u7ade\u4e89\u529b\uff0c\u800c\u4eba\u5de5\u667a\u80fd\u4ea7\u54c1\u5c06\u5b8c\u5168\u4e0e\u4f17\u4e0d\u540c\u3002\u201d\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u672c\u5468\u7684\u516c\u544a\u8bd5\u56fe\u5c06\u53d9\u4e8b\u4ece\u5343\u5146\u8d6b\u5179\u8f6c\u5411\u624b\u673a\u4e2d\u7684\u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60\u2014\u2014\u5f53\u7136\uff0c\u8c37\u6b4c\u5728\u8fd9\u4e9b\u9886\u57df\u62e5\u6709\u5f88\u5927\u7684\u4f18\u52bf\u3002\u901a\u5e38\uff0c\u5f53\u60a8\u8003\u8651\u624b\u673a\u7684\u89c4\u683c\u65f6\uff0c\u60a8\u4f1a\u60f3\u5230\u4e09\u4e2a\u6838\u5fc3\uff1aCPU\u3001GPU \u548c RAM\u3002 SoC \u7684\u8fd9\u4e9b\u90e8\u5206\u5bf9\u60a8\u7684\u65e5\u5e38\u4f53\u9a8c\u5f71\u54cd\u6700\u5927 - \u624b\u673a\u7684\u611f\u89c9\u901f\u5ea6\u3001\u7535\u6c60\u7eed\u822a\u65f6\u95f4\u3001\u4e0e\u8702\u7a9d\u7f51\u7edc\u7684\u8fde\u63a5\u72b6\u51b5\u7b49\u7b49\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e9b\u534f\u5904\u7406\u5668\u6765\u5904\u7406\u79bb\u6563\u4efb\u52a1\uff0c\u4f8b\u5982\u56fe\u50cf\u5904\u7406\u6216\u5b89\u5168\u6027\u3002\u8c37\u6b4c\u672c\u8eab\u5df2\u7ecf\u5236\u9020\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u2014\u2014Titan M \u82af\u7247\u548c Pixel Visual Core \u5df2\u7ecf\u51fa\u73b0\u5728\u4ee5\u524d\u7684\u624b\u673a\u4e0a\u3002 \u201c\u5b83\u7edd\u5bf9\u4e0d\u540c\u4e8e\u53e6\u4e00\u4e2a\u534f\u5904\u7406\u5668\uff0c\u201dOsterloh \u8bf4\u3002 \u201c\u4e0e\u4efb\u4f55 SoC \u4e00\u6837\uff0c\u6211\u4eec\u5c06\u5f88\u591a\u6280\u672f\u6388\u6743\u7ed9\u5b83\uff0c\u4f46\u8fd9\u662f\u6211\u4eec\u7684\u8bbe\u8ba1\uff0c\u5b83\u4e13\u95e8\u8bbe\u8ba1\u7528\u4e8e\u63a8\u52a8\u6211\u4eec\u7684 ML \u548c AI \u5411\u524d\u53d1\u5c55\u3002\u201d\u8c37\u6b4c\u7684\u8bba\u70b9\u662f\uff0cTensor \u4e2d\u7684\u65b0\u82af\u7247\u662f\u65b0 Pixel \u624b\u673a\u53ef\u4ee5\u505a\u7684\u8bb8\u591a\u4e8b\u60c5\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u2014\u2014\u4e0e\u82f9\u679c A \u7cfb\u5217\u5904\u7406\u5668\u4e2d\u7684 Neural Core \u4e0d\u540c\u3002 \u201c\u672a\u6765\u7684\u8ba1\u7b97\u673a\u6b63\u53d8\u5f97\u6bd4\u8fc7\u53bb\u66f4\u52a0\u591a\u6837\u5316\uff0c\u201d\u5965\u65af\u7279\u6d1b\u8ba4\u4e3a\u3002\u591a\u5e74\u6765\uff0c\u4ed6\u4e00\u76f4\u5728\u6697\u793a\u6469\u5c14\u5b9a\u5f8b\u7684\u7ec8\u7ed3\u5c06\u610f\u5473\u7740\u8ba1\u7b97\u673a\u2014\u2014\u548c\u7535\u8bdd\u2014\u2014\u9700\u8981\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5236\u9020\u3002 \u201c\u8bbe\u8ba1\u4e2d\u4f1a\u6709\u66f4\u591a\u4e13\u95e8\u7684\u5b50\u5143\u7d20\uff0c\u4ee5\u4fbf\u80fd\u591f\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u505a\u4e8b\u3002\u8fd9\u662f\u539f\u59cb\u8ba1\u7b97\u80fd\u529b\u8017\u5c3d\u7a7a\u95f4\u6216\u589e\u957f\u901f\u5ea6\u6bd4\u6211\u4eec\u60f3\u8981\u7528 AI \u8fdb\u884c\u7684\u5904\u7406\u901f\u5ea6\u6162\u7684\u7ed3\u679c\uff0c\u201d\u4ed6\u8bf4\u3002\u8fd9\u4e9b\u82af\u7247\u4e2d\u6700\u91cd\u8981\u7684\u662f\u5f20\u91cf\u5904\u7406\u5355\u5143\u7684\u79fb\u52a8\u7248\u672c\u3002\u4e94\u5e74\u591a\u6765\uff0c\u8c37\u6b4c\u4e00\u76f4\u5728\u4e3a\u5176\u670d\u52a1\u5668\u7fa4\u5236\u9020 TPU\uff0c\u81f4\u529b\u4e8e\u66f4\u6709\u6548\u5730\u6267\u884c AI \u548c ML \u4efb\u52a1\u3002\u51e0\u5e74\u524d\uff0c\u5b83\u4e3a\u4f01\u4e1a\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u4e86 TPU \u7684\u201c\u8fb9\u7f18\u201d\u7248\u672c\uff0c\u4f46 Pixel 6 \u6807\u5fd7\u7740\u8c37\u6b4c\u9996\u6b21\u5c06\u79fb\u52a8 TPU \u653e\u5165\u624b\u673a\u4e2d\u3002\u90a3\u4e48 Tensor \u5185\u90e8\u7684\u65b0 TPU \u7a76\u7adf\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\u8c37\u6b4c\u6709\u4e00\u5c0f\u90e8\u5206\u6f14\u793a\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u524d\u4e24\u4e2a\u4e0e\u6444\u5f71\u6709\u5173\u3002\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u5236\u4f5c\u66f4\u597d\u7684\u7167\u7247\u5386\u6765\u662f Pixel \u624b\u673a\u7684\u5de8\u5927\u4f18\u52bf\uff0c\u4f46\u8fd1\u5e74\u6765\u8fdb\u5c55\u505c\u6ede\u4e0d\u524d\uff0c\u7ade\u4e89\u5bf9\u624b\u5df2\u7ecf\u8d76\u4e0a\u5e76\u8d85\u8d8a\u4e86 Pixel\u2014\u2014\u5e76\u4e14\u5728\u89c6\u9891\u65b9\u9762\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u5b83\u3002\n\u8c37\u6b4c\u663e\u7136\u60f3\u593a\u56de\u6842\u51a0\uff0c\u5e76\u8ba4\u4e3a TPU \u662f\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u65b9\u5f0f\u3002\u8c37\u6b4c\u5c55\u793a\u7684\u7b2c\u4e00\u4e2a\u6f14\u793a\u662f\u4e00\u5f20\u8e52\u8dda\u5b66\u6b65\u7684\u6a21\u7cca\u7167\u7247\u2014\u2014\u5b69\u5b50\u5728\u79fb\u52a8\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u5b69\u5b50\u4eec\u7684\u884c\u4e3a\u3002\u7167\u7247\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u662f\u76f8\u540c\u7684\uff0c\u4f46\u7a7f\u8fc7 Tensor \u7684 TPU\uff0c\u5b69\u5b50\u7684\u8138\u66f4\u6e05\u6670\u3002 \u201c\u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u4e2a\u975e\u5e38\u56f0\u96be\u7684\u667a\u80fd\u624b\u673a\u76f8\u673a\u7269\u7406\u95ee\u9898\u3002\u6211\u4eec\u6b63\u8bd5\u56fe\u5c06\u8fd9\u7c7b\u95ee\u9898\u8f6c\u5316\u4e3a\u6570\u636e\u95ee\u9898\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528 Tensor \u89e3\u51b3\u5b83\u4eec\u3002\u201d\u8fd9\u4e0d\u662f\u6df1\u5ea6\u9020\u5047\u3002 Pixel 6 \u7684\u4f5c\u7528\u662f\u8fd0\u884c\u4ece\u4e3b\u4f20\u611f\u5668\u62cd\u6444\u4e00\u5806\u7167\u7247\u5e76\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u5355\u4e2a HDR \u56fe\u50cf\u7684\u8fc7\u7a0b\u3002\u4f46\u662f\u73b0\u5728 Pixel 6 \u8fd8\u5177\u6709\u8d85\u5bbd\u6355\u6349\u529f\u80fd\uff0c\u53ef\u4ee5\u5feb\u901f\u3001\u66f4\u6e05\u6670\u5730\u6355\u6349\u7ec6\u8282\u3002\u7136\u540e TPU \u8bc6\u522b\u51fa\u6709\u4e00\u5f20\u8138\uff0c\u7136\u540e\u5c06\u8d85\u5bbd\u56fe\u50cf\u4e0e\u5176\u4f59\u56fe\u50cf\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u4f46\u5982\u4eca\uff0c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u56fe\u50cf\u6f14\u793a\u5374\u5be5\u5be5\u65e0\u51e0\u3002\u8c37\u6b4c\u672c\u8eab\u66fe\u627f\u8bfa\u5728 2017 \u5e74\u4ece\u7167\u7247\u4e2d\u79fb\u9664\u94fe\u73af\u56f4\u680f\uff0c\u4f46\u4ece\u672a\u4ea4\u4ed8\u3002 Tensor \u7684\u627f\u8bfa\u662f\u66f4\u5feb\u5730\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a SoC \u65e8\u5728\u66f4\u6709\u6548\u5730\u901a\u8fc7 TPU \u8fd0\u884c\u6570\u636e\u3002\u5728\u6211\u4eec\u6709\u673a\u4f1a\u4eb2\u81ea\u6d4b\u8bd5\u76f8\u673a\u4e4b\u524d\uff0c\u6301\u6000\u7591\u6001\u5ea6\u662f\u6b63\u786e\u7684\u3002\u8003\u8651\u5230 Pixel \u7cfb\u5217\u7684\u666e\u901a\u89c6\u9891\u5386\u53f2\uff0c\u6709\u5fc5\u8981\u5bf9 Pixel 6 \u7684\u89c6\u9891\u529f\u80fd\u6301\u6000\u7591\u6001\u5ea6\u2014\u2014\u4f46\u8c37\u6b4c\u7684\u7b2c\u4e8c\u4e2a\u6f14\u793a\u5e76\u6ca1\u6709\u8ba9\u6000\u7591\u53d8\u5f97\u5bb9\u6613\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e73\u5e95\u9505\uff0c\u7a7f\u8fc7\u6d77\u6ee9\uff0c\u5927\u90e8\u5206\u955c\u5934\u90fd\u5728\u5915\u9633\u7684\u4f59\u6656\u4e2d\u3002\u4f5c\u4e3a HDR \u89c6\u9891\uff0c\u5b83\u5177\u6709\u6311\u6218\u6027\u3002\u8c37\u6b4c\u4e3a Pixel 6\u3001Pixel 5 \u548c iPhone 12 Pro Max \u8bbe\u7f6e\u4e86\u4e00\u4e2a\u88c5\u5907\uff0c\u5e76\u7528\u6240\u6709\u4e09\u4e2a\u955c\u5934\u62cd\u6444\u4e86\u540c\u4e00\u4e2a\u955c\u5934\u3002\u6b63\u5982\u60a8\u5728 Google \u63d0\u4f9b\u7684\u6f14\u793a\u4e2d\u6240\u671f\u671b\u7684\u90a3\u6837\uff0c\u6765\u81ea Google \u65b0\u624b\u673a\u7684\u89c6\u9891\u770b\u8d77\u6765\u662f\u6700\u597d\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u6ca1\u6709\u50cf iPhone 12 Pro Max \u90a3\u6837\u4eba\u4e3a\u5730\u4f7f\u9634\u5f71\u53d8\u4eae\uff0c\u5e76\u4e14\u59cb\u7ec8\u4fdd\u6301\u66f4\u81ea\u7136\u7684\u767d\u5e73\u8861\u3002\u4e0e Pixel 5 \u76f8\u6bd4\uff0c\u8fd9\u4e0d\u7b97\u4ec0\u4e48\u3002\u53bb\u5e74\u7684 Pixel \u5c06\u6240\u6709\u5185\u5bb9\u8fc7\u5ea6\u9510\u5316\u4e3a\u62bd\u8c61\u827a\u672f\uff0c\u800c Pixel 6 \u770b\u8d77\u6765\u66f4\u52a0\u81ea\u7136\u3002\nOsterloh \u8868\u793a\uff0cPixel 6 \u7684\u89c6\u9891\u66f4\u597d\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u5c06 TPU \u4e0e\u6574\u4e2a\u56fe\u50cf\u5904\u7406\u652f\u67b6\u4fdd\u6301\u4e00\u81f4\u610f\u5473\u7740 Google \u5e94\u7528\u4e8e\u9759\u6b62\u56fe\u50cf\u7684\u76f8\u540c HDRNet \u5904\u7406\u73b0\u5728\u53ef\u4ee5\u5e94\u7528\u4e8e\u89c6\u9891\u4e2d\u7684\u6bcf\u4e00\u5e27\u3002\u6211\u770b\u5230\u7684\u6f14\u793a\u662f 30fps \u7684 4K\u3002\u5176\u4ed6\u6f14\u793a\u66f4\u5fae\u5999\uff0c\u4e0e\u5c06\u8bed\u97f3\u7ffb\u8bd1\u6210\u6587\u672c\u6709\u5173\uff0cTensor \u65e0\u9700\u4e92\u8054\u7f51\u8fde\u63a5\u5373\u53ef\u5728\u672c\u5730\u5904\u7406\u3002\u4e00\u65b9\u9762\uff0cPixel \u7684\u8bbe\u5907\u4e0a\u81ea\u52a8\u5b57\u5e55\u529f\u80fd\u4f3c\u4e4e\u66f4\u5feb\u3001\u66f4\u51c6\u786e\u2014\u2014\u751a\u81f3\u80fd\u591f\u4ece\u6b63\u5728\u64ad\u653e\u7684\u89c6\u9891\u4e2d\u5b9e\u65f6\u5c06\u6cd5\u8bed\u7ffb\u8bd1\u6210\u82f1\u8bed\u3002 \u201c\u6211\u4eec\u73b0\u5728\u80fd\u591f\u5728\u6211\u4eec\u7684\u8bbe\u5907\u4e0a\u8fd0\u884c\u6570\u636e\u4e2d\u5fc3\u8d28\u91cf\u6a21\u578b\uff0c\u201dOsterloh \u8bf4\u3002\u5728\u53e6\u4e00\u4e2a\u6f14\u793a\u4e2d\uff0cOsterloh \u5c55\u793a\u4e86\u8bf4\u8bdd\u6253\u5b57\u51e0\u4e4e\u662f\u5373\u65f6\u7684\uff0c\u800c\u4e14\u4ed6\u53ef\u4ee5\u5728\u8bf4\u8bdd\u7684\u540c\u65f6\u4f7f\u7528\u952e\u76d8\u7f16\u8f91\u5185\u8054\u5355\u8bcd\u2014\u2014\u4e24\u79cd\u8f93\u5165\u6cd5\u540c\u65f6\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002\u9664\u4e86TPU\uff0cPixel 6\u8fd8\u5c06\u642d\u8f7d\u65b0\u7248\u8c37\u6b4cTitan M\u5b89\u5168\u82af\u7247\u3002\u5728\u5ba3\u5e03 Pixel 6 \u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u8c37\u6b4c\u751a\u81f3\u8868\u793a\u201c\u51ed\u501f Tensor \u7684\u65b0\u5b89\u5168\u6838\u5fc3\u548c Titan M2\uff0cPixel 6 \u5c06\u5728\u6240\u6709\u624b\u673a\u4e2d\u62e5\u6709\u6700\u591a\u7684\u786c\u4ef6\u5b89\u5168\u5c42\u201d\uff0c\u5e76\u9644\u6ce8\u8bf4\u8be5\u58f0\u660e\u662f\u201c\u57fa\u4e8e\u72ec\u7acb\u786c\u4ef6\u5b89\u5168\u5b50\u7cfb\u7edf\u548c\u7ec4\u4ef6\u7684\u6570\u91cf\u3002\u201d\u6700\u540e\uff0cOsterloh \u8868\u793a\u5c06\u6709\u4e00\u53f0\u201c\u6c38\u8fdc\u5728\u7ebf\u7684\u8ba1\u7b97\u673a\u201d\uff0c\u53ef\u4ee5\u5904\u7406\u73af\u5883\u663e\u793a\u7b49\u4f4e\u7ea7\u522b\u3001\u4f4e\u529f\u8017\u7684\u8fc7\u7a0b\u3002\u7136\u800c\uff0cPixel 6 \u7684\u7535\u6c60\u5bff\u547d\u76ee\u6807\u4ecd\u7136\u53ea\u662f\u201c\u4e00\u6574\u5929\u201d\u3002\u5173\u4e8e AI \u548c ML \u7684\u4e8b\u60c5\u662f\u5b83\u53ef\u80fd\u4f7f\u641c\u7d22\u66f4\u51c6\u786e\uff0c\u7167\u7247\u66f4\u597d\uff0c\u4f46\u4e0d\u4e00\u5b9a\u4f1a\u6539\u5584\u624b\u673a\u4e0a\u53d1\u751f\u7684\u6240\u6709\u4e8b\u60c5\u3002 Osterloh \u5efa\u8bae\uff0c\u968f\u7740 TPU \u5360\u7528\u66f4\u591a\u7684 AI \u5468\u671f\uff0c\u8fd9\u53ef\u4ee5\u91ca\u653e\u5176\u4ed6\u82af\u7247\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u6027\u80fd\u3002\u53ef\u80fd\u662f\u8fd9\u6837\uff0c\u4f46\u4ecd\u7136\u5f88\u96be\u8ba9\u4eba\u5de5\u667a\u80fd\u6210\u4e3a\u624b\u673a\u7684\u5356\u70b9\u3002\u6240\u4ee5\u8c37\u6b4c\u6709\u5b83\u7684\u5de5\u4f5c\u8981\u505a\u3002\u5b9e\u9645\u4e0a\u66f4\u662f\u5982\u6b64\uff0c\u56e0\u4e3a\u81ea Google Pixel \u7cfb\u5217\u53d1\u5e03\u4ee5\u6765\uff0c\u5b83\u5728\u7f8e\u56fd\u7684\u5e02\u573a\u4efd\u989d\u4e00\u76f4\u5904\u4e8e\u4f4e\u4e2a\u4f4d\u6570\u7684\u6c34\u5e73\u3002\nOsterloh \u8868\u793a\uff0c\u6709\u4e86 Google Pixel 6\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c06\u4f1a\u6539\u53d8\u3002\u4ed6\u5df2\u7ecf\u51c6\u5907\u597d\u5f00\u59cb\u5728\u4ed6\u80fd\u83b7\u5f97\u7684\u4efb\u4f55\u5730\u65b9\u62a2\u5360\u5e02\u573a\u4efd\u989d\u2014\u2014\u65e0\u8bba\u662f\u6765\u81ea\u82f9\u679c\u8fd8\u662f\u4e09\u661f\u3002 \u201c\u8be5\u4ea7\u54c1\u73b0\u5728\u771f\u7684\u662f Google \u624b\u673a\uff0c\u201d\u5965\u65af\u7279\u6d1b\u8bf4\u3002 \u201c\u6240\u4ee5\u6211\u4eec\u51c6\u5907\u5728\u8425\u9500\u65b9\u9762\u6295\u5165\u5927\u91cf\u8d44\u91d1\uff0c\u6211\u4eec\u5e0c\u671b\u53d1\u5c55\u58ee\u5927\u3002\u201d\u5728\u4e0a\u5468\u7684\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\uff0c\u8c37\u6b4c\u9996\u5e2d\u8d22\u52a1\u5b98 Ruth Porat \u8b66\u544a\u6295\u8d44\u8005\u6ce8\u610f\u9ad8\u4e8e\u5e73\u5e38\u7684\u8425\u9500\u6210\u672c\uff1a\u201c\u6b64\u5916\uff0c\u6211\u4eec\u9884\u8ba1\u9500\u552e\u548c\u8425\u9500\u8d39\u7528\u5c06\u5728\u4eca\u5e74\u4e0b\u534a\u5e74\u66f4\u52a0\u91cd\u8981\uff0c\u90e8\u5206\u662f\u4e3a\u4e86\u652f\u6301\u4ea7\u54c1\u5728\u5047\u671f\u63a8\u51fa\u3002\u201d\u8fd9\u662f\u8c37\u6b4c\u7b2c\u4e00\u6b21\u771f\u6b63\u4e3a Pixel \u624b\u673a\u5168\u529b\u4ee5\u8d74\uff0c\u4f46\u8fd9\u5c31\u8db3\u591f\u4e86\u5417\uff1f\u81ea\u4ece\u8c37\u6b4c\u5f00\u59cb\u5236\u9020 Pixel \u624b\u673a\u5df2\u7ecf\u4e94\u5e74\u4e86\uff0c\u51e0\u4e4e\u6bcf\u4e00\u5e74\u6211\u90fd\u95ee\u8fc7\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u4e00\u4e9b\u53d8\u4f53\uff1a\u8c37\u6b4c\u771f\u7684\u8ba4\u771f\u5bf9\u5f85\u786c\u4ef6\u5417\uff1f\u5b83\u662f\u5426\u6253\u7b97\u6210\u4e3a\u771f\u6b63\u7684\u7ade\u4e89\u5bf9\u624b\u5e76\u8d5a\u5230\u771f\u6b63\u7684\u94b1\uff0c\u8fd8\u662f\u6574\u4e2a\u52aa\u529b\u53ea\u662f\u5bf9\u65e7\u7684 Nexus \u6218\u7565\u7684\u91cd\u65b0\u8c03\u6574\uff1f\u6216\u8005\uff0c\u4f7f\u7528\u66f4\u8fd1\u7684\u53c2\u8003\u8d44\u6599\uff0cPixel \u7cfb\u5217\u662f\u5426\u53ea\u662f\u5904\u4e8e\u4e00\u79cd\u201c\u98df\u54c1\u50a8\u85cf\u5ba4\u6a21\u5f0f\u201d\u4e2d\uff0c\u4fdd\u6301\u6d3b\u529b\uff0c\u4ee5\u9632\u4e07\u4e00\u771f\u7684\u9700\u8981\u5b83\uff1f Osterloh \u8bf4\uff0c\u8fd9\u79cd\u65b0\u578b Tensor \u82af\u7247\u7684\u5de5\u4f5c\u59cb\u4e8e\u56db\u5e74\u524d\u3002\u6216\u8bb8\u5e76\u975e\u5de7\u5408\uff0c\u5927\u7ea6\u56db\u5e74\u524d\uff0c\u8c37\u6b4c\u5ba3\u5e03\u6709\u610f\u6536\u8d2d HTC \u7684\u624b\u673a\u786c\u4ef6\u90e8\u95e8\u3002\u90a3\u4e00\u5b9a\u662f Google \u8ba4\u771f\u5bf9\u5f85 Pixel \u7cfb\u5217\u7684\u90a3\u4e00\u5e74\u2014\u2014\u76f4\u5230\u73b0\u5728\u6211\u4eec\u624d\u5f00\u59cb\u770b\u5230\u8fd9\u9879\u52aa\u529b\u7684\u6210\u679c\u3002\u5c31\u591f\u4e86\u5417\uff1f Pixel 6 \u662f\u5426\u4f1a\u8ba4\u771f\u4e89\u593a\u60f3\u8981\u6700\u597d\u7684\u624b\u673a\u5e76\u540c\u65f6\u83b7\u5f97\u53ef\u8861\u91cf\u7684\u5e02\u573a\u4efd\u989d\u7684\u53d1\u70e7\u53cb\u4eba\u7fa4\uff1f\u6211\u4eec\u73b0\u5728\u8fd8\u8fdc\u8fdc\u4e0d\u80fd\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u3002\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8981\u4e3a Pixel 6 \u5927\u8086\u5ba3\u4f20\u3002\u73b0\u5728\u8fd8\u4e3a\u65f6\u8fc7\u65e9\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u7684\u592a\u591a\u4e86\u3002\u4f46\u6211\u786e\u5b9e\u8ba4\u4e3a\u8c37\u6b4c\u60f3\u8981\u5f00\u59cb\u7092\u4f5c\u662f\u975e\u5e38\u6709\u8da3\u7684\u3002", "note_en": "Google is announcing the Pixel 6 and Pixel 6 Pro today, though it might be  better to call it a preview or a tease. Rather than releasing all the details on its new Android phones, Google is instead putting the focus on the new system on a chip (SoC) that will be inside the new Pixels. It\u2019s called the Tensor SoC, named after the Tensor Processing Units (TPU) Google uses in its data centers.\n Tensor is an SoC, not a single processor. And so while it\u2019s fair to call it Google-designed, it\u2019s also still unclear which components are Google-made and which are licensed from others. Two things are definitely coming from Google: a mobile TPU for AI operations and a new Titan M2 chip for security. The rest, including the CPU, GPU, and 5G modem, are all still a mystery.\n Less mysterious: the phones themselves. I spent about an hour at Google\u2019s Mountain View campus last week looking at the phone hardware and talking with Google\u2019s hardware chief Rick Osterloh about Tensor. After all that, my main takeaway about the new Pixel 6 phones is simple.\n   This fall, Google will release two slightly different Pixel phones: the Pixel 6 and the Pixel 6 Pro. If the final versions are anything like the prototypes I saw last week, they will be the first Pixel phones that don\u2019t feel like they\u2019re sandbagging when it comes to build quality. \u201cWe knew we didn\u2019t have what it took to be in the ultra high end [in the past],\u201d Osterloh admits. \u201cAnd this is the first time where we feel like we really have it.\u201d\n Both versions of the Pixel were glass sandwiches with fit-and-finish that are finally in the same league as what Samsung, Huawei, and Apple have to offer. \u201cWe\u2019ve definitively not been in the flagship tier for the past couple years, this will be different,\u201d says Osterloh. He also admits that \u201cit will certainly be a premium-priced product,\u201d which I take to mean north of $1,000.\n  Google is only sharing a few of the key specs for each phone, leaving the details for later \u2014 likely October. (And no, there was no mention of a  folding phone nor a  watch.) Google also wouldn\u2019t allow us to take photos or video of the devices during our meeting. In any case, here is what we do know:\n The Pixel 6 Pro will have a 6.7-inch QHD+ display with a 120Hz refresh rate. That screen is very slightly curved at the edges, blending into shiny, polished aluminum rails on the side. It has three cameras on the back: a new wide-angle main sensor, an ultrawide, and a 4X optical-zoom folded telephoto lens. Google isn\u2019t sharing specs on the camera beyond saying the main wide-angle sensor takes in 150 percent more light.\n The regular Pixel 6 has a 6.4-inch FHD+ screen with a 90Hz refresh rate. Its screen is perfectly flat, with matte-finished rails. It also loses the telephoto camera.\n Although there will be memory differences between the phones, both will have the new Tensor SoC, a Titan M2 security chip, and in-display fingerprint sensor. There will be slightly different color options for the two types of phones.\n As is often the case with polarizing designs, the look of the Pixel 6 and 6 Pro make a little more sense in person than in leaked images. There is a huge \u201ccamera bar\u201d that runs the full width of the phones, with a barely raised metal rail to protect the glass from scratches. There are only so many ways to handle massive camera bumps on big phones and Google\u2019s solution is to \u201ccelebrate and highlight\u201d them, in Osterloh\u2019s words.\n  If all Google were doing was rescuing the Pixel line from the doldrums of the midrange, that would be significant but not worth a months-early pre-announcement. The most important part of the Pixel 6 and 6 Pro is that Google is using that new Tensor SoC inside.\n Qualcomm has a virtual monopoly on processors in Android devices in the US. Worldwide, there is a little bit more competition as Samsung, MediaTek, and Huawei all have chips in Android phones. But on the whole, processing power on Android phones is rightfully thought of as woefully behind what Apple has done with its own in-house silicon on its A-Series line of chips.\n Because of that situation, there\u2019s a lot of interest to see if Google could potentially make a more competitive chip that could differentiate its products. But don\u2019t let that interest trick you into thinking that Tensor is exactly equivalent to Apple\u2019s A-Series chips. Tensor is the system on a chip, with a mix of components that Google itself has designed and others that it has licensed.\n \u201cIt took us a few years, but we\u2019ve finally built a technology platform that we think is really important.\u201d\n Google\u2019s not sharing who designed the CPU and GPU, nor is it sharing benchmarks on their performance \u2014 though Osterloh says that it should be \u201cmarket leading.\u201d (Current rumors suggest that it might be  Samsung providing those more standard component designs.) He adds, \u201cThe standard stuff people look at will be very competitive and the AI stuff will be totally differentiated.\u201d\n Instead, this week\u2019s announcement is an attempt to reframe the narrative away from gigahertz and toward artificial intelligence and machine learning in phones \u2014 areas where Google, of course, has a big advantage.\n Typically when you think about a phone\u2019s specs, you think of the core three: CPU, GPU, and RAM. Those pieces of the SoC are what impact your day-to-day experience the most \u2014 how fast the phone feels, how long it lasts on battery, how well it connects to a cellular network, and so on. After that, there are generally some co-processors off to the side that handle discrete tasks like image processing or security. Google itself has already made some of those \u2014 the Titan M chip and Pixel Visual Core have appeared on previous phones.\n \u201cIt\u2019s definitely very different than just another co-processor,\u201d Osterloh says. \u201cLike with any SoC, we license a lot of technology into it, but this is our design and it was designed specifically with the purpose of driving our ML and AI forward.\u201d Google\u2019s argument is that the new chips in Tensor are an essential part of many of the things the new Pixel phones can do \u2014 not unlike Apple\u2019s Neural Core in its A-Series processors.\n  \u201cThe computers of the future are becoming much more heterogenous than they have in the past,\u201d Osterloh argues. He has for years been signaling that the end of Moore\u2019s law will mean that computers \u2014 and phones \u2014 will need to be built differently. \u201cThere\u2019ll be a lot more specialized sub-elements to the design to be able to do things in specific ways. This is a consequence of raw computing power running out of headroom or growing more slowly than the kinds of processing we want to do with AI,\u201d he says.\n The most important of those chips is a mobile version of a Tensor Processing Unit. Google has been  making TPUs for its server farms for over five years now, dedicated to more efficiently performing AI and ML tasks. It offered  an \u201cedge\u201d version of its TPU for enterprise solutions a few years ago, but the Pixel 6 marks the first time Google has put a mobile TPU in a phone.\n So what can the new TPU inside Tensor actually  do? Google had a small handful of demos. The first two were, unsurprisingly, related to photography. Using ML to make better photos has historically been a huge advantage for Pixel phones, but in recent years progress has stagnated and competitors have caught and surpassed the Pixel \u2014 and far surpassed it when it comes to video.\n Google clearly wants to take back the crown and thinks the TPU is the way to do it. The first demo Google showed was a blurry photo of a toddler \u2014 the kid was moving because that is what kids do. A second version of the photo was the same but run through Tensor\u2019s TPU, and the kid\u2019s face was sharper.\n \u201cThis problem is a very difficult smartphone camera physics problem. We\u2019re trying to turn those kinds of problems into data problems, where we can solve them with Tensor.\u201d\n It wasn\u2019t a deepfake. What the Pixel 6 does is run the process of snapping a bunch of photos from the main sensor and combine them into a single, HDR image. But now the Pixel 6 also has the ultrawide grab a fast, sharper image to capture that detail. Then the TPU recognizes that there\u2019s a face, and then combines the ultrawide\u2019s image with the rest.\n But impressive image demos are a dime a dozen these days. Google itself  famously promised to remove chain link fences from photos in 2017 but never delivered. The promise of Tensor is to deliver better results more quickly, since the SoC is designed to more efficiently run data through the TPU.\n It\u2019s right to be skeptical until we get a chance to test the camera ourselves. It\u2019s  necessary to be skeptical of the Pixel 6\u2019s video abilities given the Pixel line\u2019s history of mediocre video \u2014 but Google\u2019s second demo didn\u2019t make skepticism easy.\n It was a simple pan across a beach, with the setting sun fully in frame for much of the shot. As an HDR video, it was challenging. Google set up a rig with the Pixel 6, Pixel 5, and iPhone 12 Pro Max and shot the same pan with all three. As you might expect in a demo provided by Google, video from Google\u2019s new phone looked the best.\n Specifically, it didn\u2019t artificially brighten shadows too much like the iPhone 12 Pro Max and also maintained a more natural white balance throughout. Compared to the Pixel 5, it was no contest. Last year\u2019s Pixel over-sharpened everything into abstract art while the Pixel 6 looked much more natural.\n The main reason the Pixel 6\u2019s video was better, according to Osterloh, is that putting the TPU in line with the whole image processing stand means that the same HDRNet process that Google applies to still images can now be applied to every single frame in video. The demo I saw was in 4K at 30fps.\n The other demos were a bit more subtle and were related to translating speech to text, which Tensor handled locally without needing an internet connection. In one, the Pixel\u2019s on-device auto-caption feature appeared to be a little faster and more accurate \u2014 and was even able to translate from French to English in real time from a playing video. \u201cWe\u2019re now able to run data-center quality models on our device,\u201d says Osterloh.\n In another demo, Osterloh showed that speaking to type was nearly instantaneous and that he could use the keyboard to edit words inline at the same time he was speaking \u2014 both input methods were active at the same time.\n In addition to the TPU, the Pixel 6 will also have a new version of Google\u2019s Titan M security chip. In the blog post announcing the Pixel 6, Google is going so far as to say that \u201cwith Tensor\u2019s new security core and Titan M2, Pixel 6 will have the most layers of hardware security in any phone,\u201d with a footnote that the claim is \u201cbased on a count of independent hardware security subsystems and components.\u201d\n Finally, Osterloh says there will be an \u201calways-on computer\u201d that will handle low-level, low-power processes like the ambient display. The battery life target for the Pixel 6 is still only \u201call day,\u201d however.\n  The thing about AI and ML is that it might make search more accurate and photos better, but it\u2019s not necessarily going to improve everything that happens on your phone. Osterloh suggests that as the TPU takes up more AI cycles, that could free up the other chips for more performance. That may be, but it\u2019s still hard to make AI a selling point for a phone.\n So Google has its work cut out for it. Doubly so, actually, since the Google Pixel line has languished in the low single digits of market share in the US ever since it was announced.\n With the Google Pixel 6, Osterloh says that\u2019s going to change. He\u2019s ready to start grabbing market share wherever he can get it \u2014 whether that be from Apple or Samsung. \u201cThe product is really, now, The Google Phone,\u201d Osterloh says. \u201cSo we are ready to invest a lot in marketing and we want to grow.\u201d\n In last week\u2019s earnings call, Google CFO Ruth Porat warned investors to keep a look out for higher than usual marketing costs: \u201cIn addition, we expect sales and marketing expenses to be more heavily weighted to the back half of the year in part to support product launches in the holiday season.\u201d\n It\u2019s the first time Google has truly pulled out all the stops for a Pixel phone, but will that be enough?\n It has been five years since Google started making Pixel phones and in nearly every single one of those years I\u2019ve asked some variation of the same question: is Google really serious about hardware? Does it intend to be a real competitor and make real money or is the entire effort just a rehashing of the old Nexus strategy? Or, to use a more recent reference, is the Pixel line just in a kind of \u201c Pantry Mode,\u201d kept alive just in case it\u2019s ever needed for real?\n Osterloh says that work on this new Tensor silicon began four years ago. Perhaps not coincidentally, it was about four years ago when  Google announced it intended to buy HTC\u2019s phone hardware division. That must have been the year Google got serious about the Pixel line \u2014 and it\u2019s only now that we\u2019re beginning to see the fruits of that effort.\n Will it be enough? Will the Pixel 6 seriously vie for the enthusiast crowd that wants the very best phone and also grab measurable market share at the same time? We are very far from being able to answer those questions right now.\n I am not going to tell you to get hyped up for the Pixel 6. It\u2019s too early and there\u2019s too much we don\u2019t know. But I do think it\u2019s very interesting that  Google wants to start building up hype.", "posttime": "2021-08-03 00:28:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8bbe\u8ba1,google,pixel", "title": "Google \u63a8\u51fa\u914d\u5907 6.4&quot; FHD+ 90Hz \u663e\u793a\u5c4f\u7684 Pixel 6 \u548c\u914d\u5907 6.7&quot; QHD+ 120Hz \u663e\u793a\u5c4f\u548c 4 \u500d\u5149\u5b66\u53d8\u7126\u7684 Pixel 6 Pro\uff0c\u914d\u5907 Google \u8bbe\u8ba1\u7684 Tensor SoC", "title_en": "Google unveils Pixel 6, with 6.4\" FHD+ 90Hz display, and Pixel 6 Pro, with 6.7\" QHD+ 120Hz display and 4x optical zoom, featuring a Google-designed Tensor SoC", "transed": 1, "url": "https://www.theverge.com/2021/8/2/22605094/google-pixel-6-pro-tensor-processor-specs-ai-ml?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u8bbe\u8ba1", "google", "pixel"]}, {"category": "", "categoryclass": "", "imagename": "6f5014a62f347d8303944d67bdbb46d3.png", "infoid": 1071209, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u9879\u76ee\u4f7f Linux \u5185\u6838\u6a21\u5757\u7f16\u7a0b\u6307\u5357\u5408\u7406\u5730\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u5e76\u63d0\u4f9b\u4e86\u6700\u65b0 5.x \u5185\u6838\u7248\u672c\u7684\u5de5\u4f5c\u793a\u4f8b\u3002\u8be5\u6307\u5357\u81ea 2001 \u5e74\u4ee5\u6765\u4e00\u76f4\u5b58\u5728\uff0c\u5e76\u4e14\u7f51\u7edc\u4e0a\u7684\u5927\u591a\u6570\u526f\u672c\u4ec5\u63cf\u8ff0\u65e7\u7684 2.6.x \u5185\u6838\u3002\u8fd9\u672c\u4e66\u53ef\u4ee5\u901a\u8fc7 https://sysprog21.github.io/lkmpg/\u514d\u8d39\u8bbf\u95ee\u3002\u539f\u59cb\u6307\u5357\u53ef\u4ee5\u5728 Linux \u6587\u6863\u9879\u76ee\u4e2d\u627e\u5230\u3002 Linux Kernel Module Programming Guide \u662f\u4e00\u672c\u514d\u8d39\u7684\u4e66\uff1b\u60a8\u53ef\u4ee5\u6839\u636e\u5f00\u653e\u8f6f\u4ef6\u8bb8\u53ef\u7684\u6761\u6b3e\u590d\u5236\u548c/\u6216\u4fee\u6539\u5b83\u3002\u672c\u4f5c\u54c1\u7684\u4f7f\u7528\u53d7\u53ef\u5728 LICENSE \u6587\u4ef6\u4e2d\u627e\u5230\u7684 Copyleft \u8bb8\u53ef\u7684\u7ea6\u675f\u3002\u8865\u5145\u793a\u4f8b\u4ee3\u7801\u5728 GNU GPL \u7248\u672c 2 \u4e0b\u83b7\u5f97\u8bb8\u53ef\uff0c\u4e0e Linux \u5185\u6838\u76f8\u540c\u3002", "note_en": "This project keeps the Linux Kernel Module Programming Guide reasonably up to date, with  working examples for recent 5.x kernel versions.The guide has been around since 2001 and most copies of it on the web only describe old 2.6.x kernels.\n The book can be freely accessed via  https://sysprog21.github.io/lkmpg/The original guide may be found at  Linux Documentation Project.\n  The Linux Kernel Module Programming Guide is a free book; you may reproduce and/or modify it under the terms of the  Open Software License.Use of this work is governed by a copyleft license that can be found in the  LICENSE file.\n The complementary sample code is licensed under GNU GPL version 2, as same as Linux kernel.", "posttime": "2021-08-03 00:28:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,programming,\u7f16\u7a0b,\u5185\u6838\u6a21\u5757,kernel", "title": "Linux \u5185\u6838\u6a21\u5757\u7f16\u7a0b\u6307\u5357\uff08\u9488\u5bf9 5.x \u5185\u6838\u66f4\u65b0\uff09", "title_en": "The Linux Kernel Module Programming Guide (Updated for 5.x Kernels)", "transed": 1, "url": "https://github.com/sysprog21/lkmpg/", "via": "", "real_tags": ["linux", "\u7f16\u7a0b", "\u5185\u6838\u6a21\u5757", "kernel"]}, {"category": "", "categoryclass": "", "imagename": "dfa23b87d27c4435f1f5b5ea2db68993.jpg", "infoid": 1071208, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0c\u5728\u6211\u5728\u7279\u62c9\u7ef4\u592b\u5927\u5b66\u4e0a\u7684\u4e00\u95e8\u6cd5\u8bed\u8bfe\u7a0b\u5f00\u59cb\u65f6\uff0c\u4e00\u4e2a\u65b0\u5b66\u751f\u8d70\u8fdb\u4e86\u6559\u5ba4\u3002\u4ed6\u7684\u8138\u770b\u8d77\u6765\u5f88\u719f\u6089\u3002 \u201c\u662f\u4e39\u00b7\u7f57\u66fc\uff0c\u201d\u6211\u81ea\u8a00\u81ea\u8bed\u9053\u3002\u7f57\u66fc\u662f\u4e00\u540d\u8db3\u7403\u8fd0\u52a8\u5458\uff0c\u66fe\u6548\u529b\u4e8e\u6211\u5fc3\u7231\u7684\u7279\u62c9\u7ef4\u592b\u9a6c\u5361\u6bd4\u7403\u961f\u3002 2008 \u5e74\uff0c\u4ed6\u5728\u7279\u62c9\u7ef4\u592b\u5fb7\u6bd4\u5bf9\u9635\u590f\u666e\u5c14\u7684\u6700\u540e\u65f6\u523b\u6253\u8fdb\u4e86\u4e00\u4e2a\u82f1\u52c7\u7684\u5236\u80dc\u7403\u3002\u5728\u90a3\u573a\u6bd4\u8d5b\u4e2d\uff0c\u6211\u548c Maccabi Ultras \u5750\u5728\u4e00\u8d77\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531\u6570\u767e\u540d\u534a\u88f8\u9752\u5c11\u5e74\u7ec4\u6210\u7684\u5fe0\u5b9e\u800c\u72c2\u70ed\u7684\u652f\u6301\u8005\u7ec4\u7ec7\u3002\u6211\u5728\u7ec8\u573a\u54e8\u54cd\u65f6\u5bf9\u590f\u666e\u5c14\u7403\u8ff7\u505a\u51fa\u7684\u4e0b\u6d41\u624b\u52bf\u7684\u8bb0\u5fc6\u4ecd\u7136\u975e\u5e38\u65b0\u9c9c\u3002\u7f57\u66fc\u7a7f\u8fc7\u6559\u5ba4\uff0c\u8003\u8651\u4e86\u4ed6\u7684\u9009\u62e9\uff0c\u6700\u540e\u8d70\u5411\u6211\u65c1\u8fb9\u7684\u7a7a\u4f4d\u3002\u6211\u793c\u8c8c\u5730\u70b9\u70b9\u5934\uff0c\u51b3\u5b9a\u514b\u5236\u81ea\u5df1\u3002\u4e00\u79d2\u949f\u540e\uff0c\u6211\u542c\u5230\u81ea\u5df1\u8bf4\uff0c\u201c\u4f60\u662f\u4e39\u00b7\u7f57\u66fc\uff0c\u201d\u540c\u65f6\u4ece\u51e0\u5398\u7c73\u7684\u8ddd\u79bb\u6307\u7740\u4ed6\u3002 \u201c\u6211\u6709\u65f6\u4f1a\u5728\u6bd4\u8d5b\u4e2d\u5531\u4f60\u7684\u6b4c\uff0c\u201d\u6211\u8865\u5145\u9053\u3002 \u201c\u4e39\u00b7\u7f57\u66fc\u4e39\u00b7\u7f57\u66fc\u4e39\u00b7\u7f57\u66fc\u54e6\uff0c\u5566\u5566\u5566\u4e39\u7f57\u66fc\u3002\u201d\u6211\u7b11\u4e86\u3002\u4ed6\u5728\u6905\u5b50\u4e0a\u4e0d\u8212\u670d\u5730\u52a8\u4e86\u52a8\u3002\u5728\u90a3\u4e00\u5e74\u7684\u8bfe\u95f4\u4f11\u606f\u65f6\uff0c\u6211\u5f3a\u8feb\u4ed6\u8fdb\u884c\u4e86\u957f\u65f6\u95f4\u7684\u8c08\u8bdd\uff0c\u6211\u53d1\u73b0\u5176\u4e2d\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u60c5\u662f\u652f\u6301\u8005\u770b\u5f85\u548c\u601d\u8003\u8db3\u7403\u7684\u60c5\u611f\u65b9\u5f0f\u4e0e\u7403\u5458\u548c\u6559\u7ec3\u81ea\u5df1\u7406\u89e3\u7684\u8bed\u8a00\u548c\u6982\u5ff5\u4e4b\u95f4\u5b58\u5728\u5de8\u5927\u5dee\u8ddd\u6e38\u620f\u3002\u6211\u4eec\u8c08\u5230\u7684\u6bcf\u573a\u6bd4\u8d5b\u90fd\u7a81\u7136\u5206\u6210\u4e86\u4e24\u573a\u5b8c\u5168\u4e0d\u540c\u7684\u6bd4\u8d5b\u3002\u5f53\u6211\u8c08\u5230\u610f\u5fd7\u529b\u3001\u6218\u6597\u548c\u62bd\u8c61\u7684\u5fc3\u7406\u52a8\u673a\u65f6\uff0c\u4ed6\u8c08\u5230\u4e86\u9886\u571f\u3001\u8fd0\u52a8\u548c\u5177\u4f53\u7684\u6218\u672f\u6311\u6218\u3002\u5f88\u660e\u663e\uff0c\u5c3d\u7ba1\u770b\u8fc7\u6570\u5343\u5c0f\u65f6\u7684\u8db3\u7403\u6bd4\u8d5b\uff0c\u6211\u5bf9\u6bd4\u8d5b\u51e0\u4e4e\u4e00\u65e0\u6240\u77e5\u3002\u4f5c\u4e3a\u4e00\u540d\u652f\u6301\u8005\uff0c\u4e0e\u73a9\u5bb6\u4f7f\u7528\u7684\u6982\u5ff5\u76f8\u6bd4\uff0c\u6211\u7684\u6982\u5ff5\u4ecd\u7136\u975e\u5e38\u57fa\u672c\u548c\u7b80\u5355\u3002\u8fd9\u5e76\u6ca1\u6709\u90a3\u4e48\u4e0d\u540c\uff0c\u6211\u5f00\u59cb\u610f\u8bc6\u5230\uff0c\u4ece\u6587\u5b66\u4e0a\u7684\u8bfb\u8005\u548c\u4f5c\u5bb6/\u5b66\u8005\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002\u8fd9\u4e48\u591a\u4eba\u88ab\u5df4\u5c14\u624e\u514b\u5c0f\u8bf4\u7684\u60c5\u8282\u8ff7\u4f4f\u4e86\uff0c\u4f46\u53c8\u6709\u591a\u5c11\u4eba\u50cf\u7f57\u5170\u00b7\u5df4\u7279\u5728\u300aS/Z\u300b\u4e2d\u90a3\u6837\u601d\u8003\u8fc7\u6587\u5b57\uff1f\u6211\u7ed9\u4e39\u770b\u4e86\u610f\u5927\u5229\u6587\u5b66\u7406\u8bba\u5bb6\u5f17\u5170\u79d1\u00b7\u83ab\u96f7\u8482\uff08\u4ed6\u6700\u8fd1\u88ab\u4e00\u4e9b\u4ee5\u524d\u7684\u5b66\u751f\u6307\u63a7\u6027\u4fb5\u72af\u3001\u8650\u5f85\u548c\u5f3a\u5978\uff09\u7684\u300a\u6b27\u6d32\u5c0f\u8bf4\u5730\u56fe\u96c6\u300b\u4e00\u4e66\u3002\u5728\u5176\u4e2d\u4e00\u7ae0\u4e2d\uff0c\u83ab\u96f7\u8482\u521b\u5efa\u4e86\u5730\u56fe\uff0c\u8ddf\u8e2a\u5df4\u5c14\u624e\u514b\u4eba\u7c7b\u559c\u5267\u4e2d\u5df4\u9ece\u5c0f\u8bf4\u4e2d\u4eba\u7269\u7684\u8fd0\u52a8\u3002\u4ed6\u58f0\u79f0\uff0c\u901a\u8fc7\u7ed8\u5236\u5730\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u201c\u6b63\u5e38\u201d\u9605\u8bfb\u672c\u4e66\u7684\u4eba\u770b\u4e0d\u5230\u7684\u5404\u79cd\u53d9\u4e8b\u548c\u4e3b\u9898\u6a21\u5f0f\u2014\u2014\u4f8b\u5982\u5df4\u5c14\u624e\u514b\u7684\u4e3b\u89d2\u503e\u5411\u4e8e\u5728\u57ce\u5e02\u7684\u54ea\u4e2a\u5730\u65b9\u5f00\u59cb\u60c5\u8282\uff0c\u4ed6\u4eec\u5728\u54ea\u91cc\u505c\u4e0b\u6765\u505a\u767d\u65e5\u68a6\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5728\u54ea\u91cc\u65f6\u6545\u4e8b\u7ed3\u675f\u3002\u6211\u8ba4\u4e3a\uff0c\u53ef\u4ee5\u7ed8\u5236\u5173\u4e8e\u8db3\u7403\u6bd4\u8d5b\u4e2d\u7403\u5458\u79fb\u52a8\u7684\u7c7b\u4f3c\u5730\u56fe\uff0c\u63ed\u793a\u5404\u79cd\u6a21\u5f0f\uff0c\u4f8b\u5982\u60a8\u7684\u7403\u961f\u503e\u5411\u4e8e\u4ece\u54ea\u91cc\u521b\u9020\u673a\u4f1a\uff0c\u6216\u8005\u4ed6\u4eec\u503e\u5411\u4e8e\u4ece\u54ea\u91cc\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u4e22\u7403\u3002\u5728\u5730\u56fe\u7684\u5e2e\u52a9\u4e0b\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u4ee5\u8272\u5217\u8db3\u7403\u652f\u6301\u8005\u5728\u6b64\u4e4b\u524d\u53ea\u6709\u5f53\u5730\u5c0f\u62a5\u5f0f\u7684\u4f53\u80b2\u62a5\u9053\uff0c\u4ed6\u4eec\u5c06\u80fd\u591f\u95ee\u81ea\u5df1\u5177\u4f53\u7684\u6218\u672f\u95ee\u9898\uff0c\u5e76\u66f4\u597d\u5730\u4e86\u89e3\u7403\u573a\u4e0a\u771f\u6b63\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u6211\u60f3\uff0c\u8fd9\u6837\u505a\u751a\u81f3\u53ef\u80fd\u6709\u52a9\u4e8e\u9632\u6b62\u6bcf\u4e2a\u5b63\u8282\u53d1\u751f\u4e00\u4e9b\u7eb5\u706b\u548c\u649e\u8f66\u4e8b\u4ef6\u3002\u51e0\u5468\u540e\uff0c\u6211\u6765\u5230\u4e39\u5bb6\uff0c\u89c2\u770b\u7279\u62c9\u7ef4\u592b\u9a6c\u5361\u6bd4\u548c\u6d77\u6cd5\u9a6c\u5361\u6bd4\u4e4b\u95f4\u7684\u6bd4\u8d5b\uff0c\u624b\u91cc\u62ff\u7740\u5fae\u578b\u5730\u56fe\u548c\u4e00\u652f\u56db\u8272\u7b14\u3002\u6211\u4ece\u8fd9\u4e9b\u8db3\u7403\u5730\u56fe\u4e2d\u5b66\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\uff08\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5206\u6790\u4ee5\u8272\u5217\u8db3\u7403\u7684\u534a\u6210\u529f\u535a\u5ba2\uff0c\u7531 Dan \u548c\u6211\u81ea\u5df1\u7ecf\u8425\uff0c\u540e\u6765\u4e5f\u662f Aya\uff0c\u4e00\u4f4d\u70ed\u8877\u4e8e\u6536\u96c6\u4ee5\u8272\u5217\u8db3\u7403\u7edf\u8ba1\u6570\u636e\u7684\u5211\u4e8b\u5f8b\u5e08\u65f6\u95f4\uff09\u662f\uff0c\u4e0e\u6bcf\u4e2a\u70ed\u8840\u8db3\u7403\u8ff7\u7684\u503e\u5411\u76f8\u53cd\uff0c\u6211\u5b9e\u9645\u4e0a\u559c\u6b22\u5e76\u559c\u6b22\u89c2\u770b\u9632\u5b88\u7403\u961f\u3002\u7814\u7a76 Dan \u548c\u6211\u5236\u4f5c\u7684\u7b2c\u4e00\u5f20\u5730\u56fe\uff0c\u6211\u60ca\u8bb6\u4e8e\u4e00\u652f\u6709\u6548\u7684\u9632\u5b88\u7403\u961f\u5728\u4e00\u573a\u80dc\u5229\u7684\u6bd4\u8d5b\u4e2d\u521b\u9020\u7684\u5730\u56fe\u7684\u7f8e\u4e3d\u548c\u5e72\u51c0\u2014\u2014\u51e0\u6761\u957f\u7ebf\uff08\u5feb\u901f\u53cd\u51fb\uff09\uff0c\u7136\u540e\u662f\u5bc6\u96c6\u800c\u72ed\u7a84\u7684\u70b9\u7ec4\u5408\uff08\u94f2\u7403\u548c\u6807\u9898\uff09\uff0c\u6574\u4f53\u5c31\u50cf\u4e00\u5e45\u6781\u7b80\u4e3b\u4e49\u7684\u62bd\u8c61\u753b\uff0c\u4e0e\u6ce2\u6d1b\u514b\u5f0f\u7684\u5206\u6563\u6df7\u4e71\u7684\u77ed\u7ebf\u548c\u70b9\u7531\u4e00\u652f\u9ad8\u538b\u529b\u7684\u8fdb\u653b\u56e2\u961f\u7ec4\u6210\u3002\u5728\u4e0e\u4e39\uff08\u4ed6\u81ea\u5df1\u662f\u4e00\u540d\u52e4\u594b\u7684\u9632\u5b88\u578b\u4e2d\u573a\u7403\u5458\uff0c\u804c\u4e1a\u751f\u6daf\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u5e95\u5c42\u8054\u76df\u9632\u5b88\u7403\u961f\u4e2d\u5ea6\u8fc7\uff09\u91cd\u65b0\u89c2\u770b\u6bd4\u8d5b\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u6211\u4eec\u5b9e\u9645\u4e0a\u90fd\u5bf9\u6bd4\u8d5b\u7684\u201c\u6b7b\u4ea1\u201d\u65f6\u523b\u66f4\u611f\u5174\u8da3\uff0c\u5176\u4e2d\u9632\u5b88\u7403\u5458\u7403\u961f\u4e0d\u6301\u7403\uff0c\u53ea\u5bf9\u8fdb\u653b\u7403\u961f\u7684\u52a8\u4f5c\u505a\u51fa\u53cd\u5e94\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6700\u4ee4\u4eba\u7740\u8ff7\u7684\u65f6\u523b\u662f\u56e2\u961f\u4f5c\u4e3a\u4e00\u4e2a\u7d27\u5bc6\u7684\u56e2\u961f\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u8fdb\u884c\u9632\u5b88\uff1a\u6839\u636e\u5bf9\u624b\u6301\u7403\u7684\u4f4d\u7f6e\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6709\u673a\u4f53\u5de6\u53f3\u8f6c\u5411\u7684\u7cbe\u786e\u7f16\u6392\u3002\u6211\u53d1\u73b0\u8fd9\u4e9b\u65f6\u523b\u2014\u2014\u4e2a\u4eba\u5929\u8d4b\u5728\u56e2\u961f\u9700\u6c42\u4e4b\u524d\u4f4e\u4e0b\u5934\uff0c\u6bd4\u8d5b\u4e0d\u518d\u4e0e\u89c2\u4f17\u548c\u4ed6\u4eec\u5bf9\u5947\u89c2\u7684\u9700\u6c42\u76f8\u5173\u2014\u2014\u795e\u5947\u3002\u9632\u5b88\u7403\u5458\u5168\u795e\u8d2f\u6ce8\u4e8e\u5f53\u4e0b\u3001\u534f\u8c03\u8fd0\u52a8\u3001\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u5b9e\u73b0\u7ed3\u679c\u7684\u6e34\u671b\u2014\u2014\u4e0d\u5931\u7403\u3002\n\u8fd9\u4e00\u53d1\u73b0\u5b8c\u5168\u6539\u53d8\u4e86\u6211\u7684\u89c2\u770b\u4e60\u60ef\uff0c\u5373\u4f7f\u6211\u56e0\u4e3a\u4e1a\u4f59\u5236\u56fe\u7684\u539f\u56e0\u6ca1\u6709\u89c2\u770b\u3002\u73b0\u5728\uff0c\u540c\u4e00\u652f\u7403\u961f\u6253\u8fdb\u4e24\u7403\u4ee5\u4e0a\u7684\u9ad8\u6c34\u5e73\u6bd4\u8d5b\u4e0d\u518d\u8ba9\u6211\u611f\u5174\u8da3\uff0c\u5e76\u4e14\u4e0d\u8010\u70e6\u5730\u4ece\u5c4f\u5e55\u4e0a\u6d88\u5931\u4e86\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u5728\u6211\u4eec\u7b2c\u4e00\u5b63\u7684\u5730\u56fe\u7ed8\u5236\u7ed3\u675f\u65f6\uff0c\u6211\u7a81\u7136\u610f\u8bc6\u5230\u6211\u6700\u559c\u6b22\u7684\u7ecf\u7406\u662f\u5730\u4f4d\u4f4e\u4e0b\u7684 Hapoel Ra&#39;anana \u7684 Haim Silvas\u3002\u8fd9\u5bb6\u987d\u56fa\u7684\u4ff1\u4e50\u90e8\u5e73\u5747\u6bcf\u573a\u6bd4\u8d5b\u53ea\u6709 360 \u540d\u89c2\u4f17\uff0c\u5e76\u4e14\u51ed\u501f\u9ad8\u5ea6\u7ec4\u7ec7\u5316\u548c\u7eaa\u5f8b\u4e25\u660e\u7684\u53cd\u51fb\u4f53\u7cfb\uff0c\u51fa\u4eba\u610f\u6599\u5730\u6392\u540d\u7b2c\u516d\uff0c\u53ea\u6253\u8fdb\u4e86\u9a6c\u5361\u6bd4\u5e38\u89c4\u8d5b\u8fdb\u7403\u7684\u4e00\u534a\u3002\u5728\u6700\u8fd1\u7684\u8db3\u7403\u4f11\u8d5b\u671f\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u53d1\u73b0\u632a\u5a01\u4f5c\u5bb6 Karl Ove Knausg\u00e5rd \u7684\u4e00\u672c\u65b0\u4e66\u76f4\u63a5\u6d89\u53ca\u5bf9\u9632\u5b88\u8db3\u7403\u7684\u70ed\u7231\u53ca\u5176\u4e0e\u6587\u5b66\u7684\u8054\u7cfb\u3002 \u300a\u4e3b\u573a\u4e0e\u5ba2\u573a\uff1a\u4e66\u5199\u7f8e\u4e3d\u7684\u6bd4\u8d5b\u300b\u4e00\u4e66\u7531 Knausg\u00e5rd \u548c\u745e\u5178\u4f5c\u5bb6 Fredrik Ekelund \u5728\u4e0a\u5c4a\u5df4\u897f\u4e16\u754c\u676f\u671f\u95f4\u53d1\u751f\u7684\u6f2b\u957f\u800c\u5f15\u4eba\u5165\u80dc\u7684\u4e66\u4fe1\u5f80\u6765\u7ec4\u6210\u3002\u867d\u7136\u53c2\u52a0\u4e86 2014 \u5e74\u91cc\u7ea6\u4e16\u754c\u676f\u7684\u57c3\u514b\u4f26\u5fb7\u652f\u6301\u5df4\u897f\uff0c\u5e76\u8ba4\u4e3a\u6bd4\u8d5b\u7684\u91cd\u70b9\u662f\u201c\u8fdb\u7403\u5e76\u7528\u7403\u505a\u6f02\u4eae\u7684\u4e8b\u60c5\uff0c\u7528\u811a\u8868\u73b0\u51fa\u50cf\u624b\u4e00\u6837\u7684\u63a7\u5236\u201d\uff0cKnausg\u00e5rd\uff0c\u770b\u7740\u4ed6\u5728\u745e\u5178\u519c\u6751\u7684\u5bb6\u4e2d\u53c2\u52a0\u6bd4\u8d5b\uff0c\u662f\u963f\u6839\u5ef7\u548c\u610f\u5927\u5229\u8fd9\u4e24\u4e2a\u4e16\u754c\u8db3\u575b\u6700\u6124\u4e16\u5ac9\u4fd7\u7684\u9632\u5b88\u7403\u961f\u7684\u5ba3\u8a93\u652f\u6301\u8005\u3002\u4ed6\u7231\u4ed6\u4eec\uff0c\u56e0\u4e3a\u4ed6\u4eec\u201c\u5229\u7528\u5bf9\u624b\u7684\u5f31\u70b9\u800c\u4e0d\u662f\u81ea\u5df1\u7684\u957f\u5904\u3002 . . . [T]\u4ed6\u4eec\u62e5\u6709\u6781\u7aef\u7684\u54c1\u8d28\uff0c\u4f46\u6709\u4e00\u70b9\u662f\u4ed6\u4eec\u4ece\u4e0d\u8fc7\u5ea6\u4f7f\u7528\u5b83\u4eec\uff0c\u4ece\u4e0d\u4e3a\u4e86\u7f8e\u800c\u505a\u4efb\u4f55\u7f8e\u7684\u4e8b\u60c5\uff0c\u53ea\u6709\u5728\u6709\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u3002\u800c\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u4f46\u5fcd\u4f4f\u4e86\u3002 . .\u5bf9\u6211\u5185\u5fc3\u6df1\u5904\u7684\u67d0\u4e9b\u4e1c\u897f\u5f88\u6709\u5438\u5f15\u529b\u3002\u201d\u4ed6\u58f0\u79f0\uff0c\u5438\u5f15\u514b\u7459\u65af\u52a0\u5fb7\u70ed\u7231\u9632\u5b88\u8db3\u7403\u7684\u662f\u4ed6\u7684\u65b0\u6559\u6559\u517b\u3002 \u201c\u6211\u662f\u4e00\u4e2a\u9aa8\u5b50\u91cc\u7684\u65b0\u6559\u5f92\uff0c\u201d\u4ed6\u5199\u9053\uff0c\u4ed6\u5bf9\u5df4\u897f\u961f\u7684\u538c\u6076\uff0c\u5df4\u897f\u961f\u662f\u5f00\u653e\u3001\u5feb\u4e50\u3001\u6742\u800d\u8db3\u7403\u7684\u5148\u9a71\u3002 \u201c\u6211\u662f\u90a3\u79cd\u5426\u8ba4\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u544a\u8bc9\u81ea\u5df1\u4e0d\u3002\u201d\u5df4\u897f\uff0c\u4ed6\u8865\u5145\u8bf4\uff0c\u6709\u4e9b\u9000\u7f29\uff0c\u5bf9\u4ed6\u6765\u8bf4\u8c61\u5f81\u7740\u5145\u6ee1\u6d3b\u529b\u7684\u751f\u6d3b\uff0c\u5145\u5206\u4f53\u9a8c\u7684\u751f\u6d3b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u963f\u6839\u5ef7\u53ca\u5176\u8db3\u7403\u5219\u622a\u7136\u76f8\u53cd\u3002\u5728\u4e66\u4e2d\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0c\u4ed6\u63d0\u5230\u4ed6\u7684\u53f2\u8bd7\u7cfb\u5217\u81ea\u4f20\u5c0f\u8bf4\u300a\u6211\u7684\u594b\u6597\u300b\u7684\u539f\u6807\u9898\u662f\u963f\u6839\u5ef7\u3002\u6beb\u4e0d\u5947\u602a\uff0c\u8fd9\u6837\u4e00\u4e2a\u8d85\u73b0\u5b9e\u4e3b\u4e49\u7cfb\u5217\u2014\u2014\u5176\u4e2d\u4e00\u4e2a\u4e2d\u5fc3\u4e3b\u9898\u662f\u8bd5\u56fe\u5c06\u65e5\u5e38\u751f\u6d3b\u4ece\u4e4f\u5473\u3001\u65e5\u5e38\u548c\u6b7b\u4ea1\u7684\u9b54\u638c\u4e2d\u62ef\u6551\u51fa\u6765\u2014\u2014\u7684\u4f5c\u8005\u5c06\u662f\u4e00\u540d\u5fe0\u5b9e\u7684\u8db3\u7403\u8ff7\u3002\u6bd5\u7adf\uff0c\u8fd9\u662f\u6700\u73b0\u5b9e\u7684\u8fd0\u52a8\u3002\u4e0e\u7bee\u7403\u548c\u7f51\u7403\u4e0d\u540c\uff0c\u7bee\u7403\u548c\u7f51\u7403\u6bcf\u9694\u51e0\u5206\u949f\u5c31\u4f1a\u4e3a\u88ab\u5ba0\u574f\u7684\u5ba2\u6237\u63d0\u4f9b\u4e00\u4e2a\u4eba\u5de5\u9ad8\u5cf0\uff08\u4e00\u4e2a\u7bee\u7b50\uff0c\u4e00\u4e2a\u70b9\uff09\uff0c\u8db3\u7403\u6ca1\u6709\u4f11\u606f\u65f6\u95f4\u3002\u7403\u8ff7\u5fc5\u987b\u8003\u8651\u4e00\u573a\u6301\u7eed\u4e0d\u65ad\u7684\u6bd4\u8d5b\uff0c\u800c\u5927\u591a\u6570\u65f6\u5019\u4ec0\u4e48\u90fd\u6ca1\u6709\u53d1\u751f\u3002\u5c31\u50cf\u73b0\u5b9e\u751f\u6d3b\u4e00\u6837\u3002\u4f46\u662f\uff0cKnausg\u00e5rd \u4e5f\u6709\u4e00\u4e2a\u79ef\u6781\u7684\u3001\u5ba1\u7f8e\u7684\u8bba\u636e\u6765\u652f\u6301\u9632\u5fa1\u6027\u8db3\u7403\u3002\u4ed6\u58f0\u79f0\uff0c\u610f\u5927\u5229\u6bd4\u8d5b\u7684\u72ac\u5112\u4e3b\u4e49\u5305\u542b\u7740\u53e6\u4e00\u79cd\u7f8e\u4e3d\u548c\u4f18\u96c5\u3002\u9632\u5b88\u4e0a\u7684\u80dc\u5229\u66f4\u52a0\u51b7\u6f20\uff0c\u56e0\u4e3a\u5b83\u662f\u7528\u66f4\u5c11\u7684\u8fdb\u653b\u7403\u5458\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5fc5\u7136\u4f1a\u66f4\u6709\u6548\u7387\uff0c\u4e5f\u4e0d\u4f1a\u90a3\u4e48\u7d2f\u3002\u5f53\u6211\u8bfb\u5230\u4ed6\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u6765\u4fe1\u65f6\uff0c\u6211\u60f3\u8d77\u4e86\u7f57\u9a6c\u548c\u4e9a\u7279\u5170\u5927\u4e4b\u95f4\u7684\u4e00\u573a\u6bd4\u8d5b\uff0c\u6211\u5728\u51e0\u5e74\u524d\u53bb\u610f\u5927\u5229\u65c5\u884c\u65f6\u5728\u770b\u53f0\u4e0a\u770b\u5230\u4e86\u8fd9\u573a\u6bd4\u8d5b\u3002\u6bd4\u8d5b\u4ee5\u975e\u5e38\u610f\u5927\u5229\u7684\u65b9\u5f0f\u5c55\u5f00\uff0c\u6bcf\u652f\u7403\u961f\u8f6e\u6d41\u8fdb\u884c\u7f13\u6162\u800c\u6709\u7ec4\u7ec7\u7684\u8fdb\u653b\uff0c\u6700\u540e\u7403\u5458\u5c06\u56de\u5230\u81ea\u5df1\u7684\u534a\u573a\uff0c\u9ad8\u8d35\u5730\u817e\u51fa\u7a7a\u95f4\u8ba9\u5bf9\u65b9\u5c1d\u8bd5\u8fdb\u653b\uff0c\u5c31\u50cf\u51fb\u5251\u4e00\u6837\u4e24\u4f4d\u5c0a\u8d35\u3001\u5e74\u8fc8\u7684\u8d35\u65cf\u4e4b\u95f4\u7684\u51b3\u6597\u3002\u6211\u81ea\u5df1\u4e0d\u662f\u65b0\u6559\u5f92\uff0c\u5b9e\u9645\u4e0a\u6211\u5728\u9632\u5b88\u8db3\u7403\u7684\u98ce\u683c\u4e2d\u627e\u5230\u4e86\u7985\u5b97\u7684\u4e1c\u897f\uff1a\u6c89\u601d\u800c\u4e0d\u662f\u884c\u52a8\u3002\u5728\u8fd9\u79cd\u98ce\u683c\u4e2d\uff0c\u4f60\u8bd5\u56fe\u4e3a\u4e86\u81ea\u5df1\u7684\u5229\u76ca\uff0c\u5728\u9002\u5f53\u7684\u65f6\u5019\uff0c\u4ee5\u6700\u6709\u6548\u7684\u65b9\u5f0f\uff0c\u5229\u7528\u4e00\u4e2a\u5484\u5484\u903c\u4eba\u3001\u72c2\u5984\u81ea\u5927\u7684\u5bf9\u624b\uff08\u4e00\u4e9b\u5df4\u585e\u7f57\u90a3\u6216\u62dc\u4ec1\u6155\u5c3c\u9ed1\uff09\u5bf9\u4f60\u65bd\u52a0\u7684\u529b\u91cf\uff0c\u5360\u636e\u4f60\u7684\u4e00\u534a\u6295\u7403\uff0c\u62d2\u7edd\u79bb\u5f00\u3002\u6b63\u5982 Knausg\u00e5rd \u548c Ekelund \u7684\u4e66\u4e00\u6837\u5f15\u4eba\u5165\u80dc\uff0c\u5b83\u7684\u8c08\u8bdd\u53ea\u5173\u6ce8\u4e16\u754c\u676f\u548c\u56fd\u9645\u8db3\u7403\uff0c\u56e0\u6b64\u5b8c\u5168\u5ffd\u7565\u4e86\u6bcf\u4e2a\u7403\u8ff7\u751f\u6d3b\u4e2d\u4e00\u4e2a\u91cd\u8981\u800c\u7d27\u8feb\u7684\u5143\u7d20\uff1a\u4ff1\u4e50\u90e8\u8db3\u7403\u3002\u5728\u56fd\u9645\u6bd4\u8d5b\u4e2d\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a\u7ecf\u7406\u4eba\u6d41\u52a8\u7387\u4f4e\uff0c\u6216\u8005\u56e0\u4e3a\u201c\u56fd\u5bb6\u7279\u8272\u201d\uff0c\u7403\u961f\u7684\u98ce\u683c\u591a\u5e74\u6765\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\uff0c\u7403\u8ff7\u53ef\u4ee5\u9009\u62e9\u6216\u6e29\u548c\u5730\u9002\u5e94\u4e00\u652f\u9002\u5408\u81ea\u5df1\u751f\u6d3b\u65b9\u5f0f\u7684\u7403\u961f\u3002\u751f\u6d3b\u3002\u5b8c\u5168\u4e0d\u540c\u7684\u662f\u4ff1\u4e50\u90e8\u8db3\u7403\u7684\u4e16\u754c\uff0c\u7ecf\u7406\u548c\u98ce\u683c\u51e0\u4e4e\u6bcf\u5e74\u90fd\u5728\u53d8\u5316\uff0c\u5982\u679c\u4ed6\u4ece\u5c0f\u5c31\u559c\u6b22\u7684\u7403\u961f\u7a81\u7136\u5f00\u59cb\u6253\u51fa\u4e0e\u4ed6\u6027\u683c\u5b8c\u5168\u76f8\u53cd\u7684\u98ce\u683c\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u9632\u5b88\u8db3\u7403\u7231\u597d\u8005\u53ef\u80fd\u4f1a\u9677\u5165\u56f0\u5883\u548c\u751f\u6d3b\u65b9\u5f0f\u3002\u53ef\u60b2\u7684\u662f\uff0c\u8fd9\u5c31\u662f\u4eca\u5e74\u53d1\u751f\u5728\u6211\u8eab\u4e0a\u7684\u4e8b\u60c5\uff0c\u5f53\u65f6\u4f20\u5947\u7684\u8377\u5170\u7403\u5458\u517c\u6559\u7ec3\u7ea6\u7ff0\u514b\u9c81\u4f0a\u592b\u7684\u513f\u5b50\u4e54\u8fea\u514b\u9c81\u4f0a\u592b\u88ab\u4efb\u547d\u4e3a\u9a6c\u5361\u6bd4\u7684\u7ecf\u7406\u3002\n\u8001\u514b\u9c81\u4f0a\u592b\u7684\u81ea\u4f20\u300a\u8f6e\u5230\u6211\u4e86\uff1a\u5168\u80fd\u8db3\u7403\u7684\u4e00\u751f\u300b\u4e8e 2016 \u5e74\u51fa\u7248\uff0c\u5373\u4ed6\u56e0\u80ba\u764c\u53bb\u4e16\u51e0\u4e2a\u6708\u540e\u3002\u514b\u9c81\u4f0a\u592b\u88ab\u8ba4\u4e3a\u662f\u201c\u5168\u9762\u8db3\u7403\u201d\u7684\u53d1\u660e\u8005\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u7684\u8fdb\u653b\u5f62\u5f0f\uff0c\u7403\u961f\u7684\u5927\u90e8\u5206\u6bd4\u8d5b\u65f6\u95f4\u90fd\u5728\u5bf9\u65b9\u534a\u573a\u7684\u6df1\u5904\u3002\u4ed6\u9996\u5148\u5728\u963f\u8d3e\u514b\u65af\u963f\u59c6\u65af\u7279\u4e39\u62c5\u4efb\u7403\u5458\uff0c\u540e\u6765\u5728\u5df4\u585e\u7f57\u90a3\u62c5\u4efb\u6559\u7ec3\u65f6\u5e94\u7528\u4e86\u8fd9\u79cd\u98ce\u683c\u3002\u4ed6\u7684\u513f\u5b50\u4e54\u8fea\u5728\u8fd9\u4e24\u5bb6\u5177\u4e50\u90e8\u7684\u9752\u8bad\u5b66\u9662\u957f\u5927\u3002\u76f4\u5230\u4eca\u5929\uff0c\u4ed6\u4eec\u90fd\u4e13\u6ce8\u4e8e\u8fdb\u653b\u6027\u7684\u3001\u65e0\u9650\u5236\u7684\u6bd4\u8d5b\u3002\u51fa\u4e8e\u5bf9\u65b0\u4e3b\u5e05\u7684\u5c0a\u91cd\uff0c\u4e5f\u4e3a\u4e86\u907f\u514d\u8fc7\u65e9\u5730\u8c34\u8d23\u4ed6\uff0c\u6211\u6700\u8fd1\u8d2d\u4e70\u4e86\u8001\u514b\u9c81\u4f0a\u592b\u7684\u81ea\u4f20\u5e76\u5f00\u59cb\u9605\u8bfb\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u5728\u7b2c 89 \u9875\u7684\u4e00\u6bb5\u5f88\u957f\u7684\u6bb5\u843d\u4e4b\u540e\u653e\u5f03\u4e86\u8fd9\u672c\u4e66\uff0c\u5176\u4e2d\u514b\u9c81\u4f0a\u592b\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5728\u4ed6\u770b\u6765\uff0c\u8db3\u7403\u4e2d\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u4e0d\u662f\u80dc\u5229\uff0c\u800c\u662f\u5a31\u4e50\u4eba\u7fa4\u3002\u5f53\u514b\u9c81\u4f0a\u592b\u7684\u513f\u5b50\u6709\u671b\u88ab\u4efb\u547d\u4e3a\u7403\u961f\u6559\u7ec3\u7684\u7b2c\u4e00\u7bc7\u62a5\u9053\u51fa\u73b0\u65f6\uff0c\u6211\u60f3\u8d77\u4e86\u8fc7\u53bb\u51e0\u5e74\u6211\u5728\u9a6c\u5361\u6bd4\u8eab\u4e0a\u4eab\u53d7\u5230\u7684\u6240\u6709\u7cbe\u5f69\u9632\u5b88\u8868\u73b0\uff1a\u5728\u7c97\u9c81\u7684\u7b56\u5212\u4e0b\u51fb\u8d25\u4e86\u51a0\u519b\u5bf9\u624b\u54c8\u666e\u5c14\u8d1d\u5c14\u8c22\u74e6\u585e\u5c14\u7ef4\u4e9a\u6559\u7ec3\u65af\u62c9\u7ef4\u8428\u00b7\u7ea6\u5361\u8bfa\u7ef4\u5947\uff1b\u5728\u6559\u7ec3\u4fdd\u7f57\u00b7\u7d22\u8428 (Paulo Sousa) \u7684\u5e26\u9886\u4e0b\uff0c\u5341\u4eba\u5728\u5fb7\u6bd4\u6218\u4e2d\u53d6\u5f97\u4e86\u82f1\u52c7\u7684\u80dc\u5229\u3002\u5e76\u4e14\uff0c\u5f53\u7136\u8fd8\u6709\u62b5\u6297\u529b\uff1a\u4ee4\u4eba\u96be\u5fd8\u7684\u5ba2\u573a\u6218\u5e73\u5df4\u585e\u5c14\uff0c\u5176\u4e2d\u9a6c\u5361\u6bd4\u5728\u6574\u573a\u6bd4\u8d5b\u4e2d\u4ec5\u4e24\u6b21\u79bb\u5f00\u672c\u65b9\u534a\u573a\u5e76\u6253\u5165\u4e24\u7403\uff0c\u5728\u4e16\u754c\u4ff1\u4e50\u90e8\u8db3\u7403\u6700\u4f1f\u5927\u7684\u821e\u53f0\u6b27\u6d32\u83b7\u5f97\u4e86\u4e00\u4e2a\u4e0d\u592a\u53ef\u80fd\u7684\u4f4d\u7f6e\u51a0\u519b\u8054\u8d5b\u3002\u62c5\u5fc3\uff0c\u6211\u548c\u4e39\u901a\u4e86\u7535\u8bdd\u3002\u81ea\u4ece\u6211\u4eec\u5728\u6cd5\u8bed\u8bfe\u4e0a\u7b2c\u4e00\u6b21\u89c1\u9762\u540e\uff0c\u4ed6\u5c31\u4ece\u6d3b\u8dc3\u7684\u6bd4\u8d5b\u4e2d\u9000\u4f11\uff0c\u73b0\u5728\u4f4f\u5728\u5fb7\u56fd\uff0c\u5728\u5fb7\u7d2f\u65af\u987f\u8fea\u7eb3\u6469\u62c5\u4efb\u5206\u6790\u5e08\u3002\u4e39\u8bd5\u56fe\u8ba9\u6211\u51b7\u9759\u4e0b\u6765\u3002 \u201c\u4f60\u8fd8\u575a\u6301\u4f60\u7236\u4eb2\u5bf9\u6587\u5b66\u7684\u770b\u6cd5\u5417\uff1f\u201d\u4ed6\u95ee\u3002\u6211\u7684\u7236\u4eb2\u6885\u7eb3\u8d6b\u59c6\u00b7\u8461\u8404\u7259\u4eba\u5728\u4ed6\u90a3\u4e2a\u65f6\u4ee3\u51fa\u7248\u4e86\u4e09\u90e8\u8352\u8c2c\u7684\u6469\u8428\u5fb7\u60ca\u609a\u5c0f\u8bf4\u3002 \u201c\u6211\u7edd\u5bf9\u4e0d\u786e\u5b9a\u4e54\u8fea\u00b7\u514b\u9c81\u4f0a\u592b\u662f\u5426\u5b8c\u5168\u91c7\u7eb3\u4e86\u4ed6\u7236\u4eb2\u7684\u8db3\u7403\u54f2\u5b66\uff0c\u201d\u4ed6\u8865\u5145\u9053\u3002 \u201c\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u4f1a\u597d\u7684\uff0c\u522b\u62c5\u5fc3\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u8bf7\u8bb0\u4f4f\uff0c\u5f53\u4e00\u652f\u7403\u961f\u6709\u5f88\u591a\u7403\u5458\u8fdb\u653b\u65f6\uff0c\u5f52\u6839\u7ed3\u5e95\u53ea\u662f\u4e3a\u4e86\u8ba9\u5bf9\u624b\u8fdc\u79bb\u7403\u95e8\u3002\u201d\u7f16\u8005\u6309\uff1a\u514b\u9c81\u4f0a\u592b\u5728\u7279\u62c9\u7ef4\u592b\u9a6c\u5361\u6bd4\u6267\u6559\u7684\u7b2c\u4e00\u4e2a\u8d5b\u5b63\u540e\u88ab\u66ff\u6362\u3002\u4ff1\u4e50\u90e8\u7684\u65b0\u6559\u7ec3\u5f17\u62c9\u57fa\u7c73\u5c14\u00b7\u4f0a\u7ef4\u5947\u66fe\u7ecf\u5728\u8461\u8404\u7259\u7684\u8d39\u5c14\u5357\u591a\u00b7\u6851\u6258\u65af\u624b\u4e0b\u5de5\u4f5c\uff0c\u6851\u6258\u65af\u5728\u6bcf\u573a\u5c0f\u7ec4\u8d5b\u90fd\u4ee5\u5e73\u5c40\u7ed3\u675f\u540e\u5e26\u9886\u7403\u961f\u8d62\u5f97\u4e86 2016 \u5e74\u6b27\u6d32\u676f\u51a0\u519b\u3002", "note_en": "A few years ago, at the beginning of a French course I was taking at Tel Aviv University, a new student entered the classroom. His face looked familiar. \u201cIt\u2019s Dan Roman,\u201d I murmured to myself. Roman was a footballer who played for Maccabi Tel Aviv, my beloved team. In 2008, he\u2019d set up a heroic, last-minute winning goal against Hapoel in the  Tel Aviv derby. I sat with the Maccabi Ultras that game, a devoted and fanatic supporters\u2019 organization composed of a couple hundred half-naked teenagers. The memory of the obscene gestures I\u2019d made toward the Hapoel fans at the final whistle was still wonderfully fresh.\n Roman crossed the classroom, considered his options, and finally went for the empty seat next to me. I nodded politely and decided to control myself. A second later, I heard myself saying, \u201cYou\u2019re Dan Roman,\u201d while pointing at him from a distance of mere centimeters. \u201cI sometimes sing your song during games,\u201d I added. \u201c Dan Roman Dan Roman Dan Roman Oooooh, La La La Dan Roman.\u201d I smiled. He shifted uncomfortably in his chair.\n One of the fascinating things I discovered in the long conversations I forced on him in breaks between lectures that year was the enormous gap between the emotional way that supporters see and think about football, and the language and concepts with which the players and coaches themselves understand the game. Every match that we spoke about suddenly split into two totally different games. While I talked about willpower, battle, and abstract psychological motives, he spoke about territory, movement, and concrete tactical challenges. It became clear that, despite having seen thousands of hours of football, I understood almost nothing about the game. As a supporter, my concepts remained very basic and unsophisticated when compared to those used by the people playing. This wasn\u2019t so different, I came to realize, from the gap between readers and writers/scholars in literature. So many people have been entranced by the plot in Balzac\u2019s novels, yet how many of them have thought about the text the way Roland Barthes does in  S/Z?\n I showed Dan the book  Atlas of the European Novel, by the Italian literary theorist Franco Moretti (who has recently been accused of sexual assault, abuse, and rape  by a number of former students). In one chapter, Moretti creates maps tracking the movement of the characters in the Paris novels from Balzac\u2019s  Human Comedy. By mapping, he claims, we can uncover various narrative and thematic patterns invisible to someone reading the book \u201cnormally\u201d\u2014such as where in the city Balzac\u2019s protagonists tend to start the plot, where they pause to daydream, and where they are when the story ends.\n  Similar maps, I thought, could be drawn about the movements of the players in football matches, revealing various patterns, like from where your team tends to create its chances, or where they tend to lose the ball over and over again. Aided by the maps, Israeli football supporters like myself, who until then had only local tabloid-style sport coverage, would be able to ask themselves concrete tactical questions and better understand what was really happening on the field. Doing so, I figured, might even help prevent a few arsons and bus-stoning incidents every season. A few weeks later I found myself at Dan\u2019s house, watching a match between Maccabi Tel Aviv and Maccabi Haifa, armed with miniature field maps and a four-colored pen.\n One of the first things I learned from these football maps (which over time became a semi-successful blog analyzing Israeli football, run by Dan, myself, and later also Aya, a criminal lawyer who is passionate about collecting Israeli football statistics in her spare time) was that in contrast to the inclination of every red-blooded football fan, I actually love and enjoy watching defensive teams. Studying the first maps Dan and I made, I was surprised at the beauty and cleanness of maps created by an effective defensive team in a winning match\u2014a few long lines (quick counterattacks), and then a dense and narrow assemblage of dots (tackles and headers), the whole resembling a minimalist abstract painting, so different from the Pollock-like scattered mess of short lines and dots made by a high-pressing, attacking team.\n   While rewatching play-by-plays with Dan\u2014a hardworking defensive midfielder himself, who spent most of his career in bottom-league defensive teams\u2014I realized we were both actually more interested in the \u201cdead\u201d moments of play, in which a defending team doesn\u2019t hold the ball and is only reacting to the movements of the attacking team. The most fascinating moments to me involved teams defending over an extended period as a tight group: an exact choreography veering left and right as one organism, according to where the opposition held the ball. I found these moments\u2014where individual talent bowed its head before the needs of the team, and the game ceased to relate to the spectators and their need for spectacle\u2014magical. Defending footballers are totally absorbed in the moment, in coordinated movement, in the desire to achieve the result\u2014to concede no goal\u2014at any cost.\n This discovery totally altered my viewing habits, even when I wasn\u2019t watching for reasons of amateur cartography. Now high-level games in which the same team scored more than two goals ceased to interest me and were impatiently banished from the screen. To my astonishment, by the end of our first season of mapping, it dawned on me that my favorite manager was Haim Silvas of lowly Hapoel Ra\u2019anana. The stubborn club had an average of just 360 spectators per game and had surprisingly clawed its way to sixth place thanks to a highly organized and disciplined counterattacking system, scoring only half the goals Maccabi did in the regular season.\n  During the recent football off-season I was happy to discover that a new book by Norwegian writer Karl Ove Knausg\u00e5rd deals directly with the love of defensive football and its connection with literature. The book,  Home and Away: Writing the Beautiful Game, is comprised of a long, fascinating exchange of letters between Knausg\u00e5rd and the Swedish author Fredrik Ekelund that took place during the last World Cup in Brazil.\n While Ekelund, who attended the 2014 World Cup in Rio, supports Brazil and thinks that the point of the game is \u201cto score goals and do beautiful things with the ball, exhibit control with feet as though they were hands,\u201d Knausg\u00e5rd, watching the games from his home in rural Sweden, is a sworn supporter of both Argentina and Italy, two of the most cynically defensive teams in world football. He loves them because they \u201cplayed on their opponents\u2019 weaknesses rather than their own strengths\u00ad.\u00a0.\u00ad\u00a0.\u00ad\u00a0. [T]hey possess extreme qualities, but there is something about their never using them in an excessive manner, about never doing anything beautiful for the sake of beauty, only if there is some outcome. And the fact that they can do so, but hold back\u00a0.\u00ad\u00a0.\u00ad\u00a0. appeals to something deep inside me.\u201d\n The something that draws Knausg\u00e5rd to love defensive football is, he claims, his Protestant upbringing. \u201cI am a Protestant deep into my bones,\u201d he writes of his distaste for the Brazilian team, pioneers of open, happy, juggling football. \u201cI am the kind to deny myself things, to tell myself no.\u201d Brazil, he adds, recoiling somewhat, symbolizes to him vibrant life, life experienced in full. Argentina and its football, on the other hand, are the polar opposite. In one of the letters in the book, he mentions that the original title of  My Struggle, his epic series of autobiographical novels, was  Argentina.\n It\u2019s not surprising that the author of such an ultrarealist series\u2014in which a central theme is the attempt to save everyday life from the clutches of tedium, routine, and death\u2014would be a sworn football fan. After all, it\u2019s the most realistic sport there is. Unlike, say, basketball and tennis, which offer their spoiled clientele an artificial peak every few moments (a basket, a point), football has no breaks. The fan must contemplate a game that goes on and on while most of the time nothing happens. Just like real life.\n But Knausg\u00e5rd, again, also has a positive, aesthetic argument in favor of defensive football. The cynicism of the Italian game, he claims, contains a different kind of beauty and elegance. A defensive victory is more nonchalant because it is achieved with fewer attacking players and so is necessarily both more efficient and less tiring. When I read his letters on this topic, I was reminded of a match between Roma and Atalanta, which I saw from the stands on a trip to Italy a few years ago. The game unfolded in a very Italian way, with each team sallying a slow, organized offensive in turn, at the end of which the players would go back to their own half, nobly vacating the space for the opposition\u2019s attempted attack, as in a fencing duel between two honorable, aging aristocrats. Not being Protestant myself, I actually find something Zen-like in the style of defensive football: contemplating and not acting. It\u2019s a style in which you try to appropriate for your own benefit, at the right moment and by the most effective means, the force wielded upon you by an aggressive, cocky opponent, some Barcelona or Bayern Munich, that is occupying your half of the pitch, refusing to leave.\n Fascinating as Knausg\u00e5rd and Ekelund\u2019s book certainly is, its conversation focuses only on the World Cup and international football, thus completely omitting one important, urgent element in the life of every football fan: club football. In internationals, maybe because of the low turnover of managers or because of \u201cnational characteristics,\u201d teams\u2019 styles hardly change over the course of years, and a fan can choose or gently adjust to a team whose playing style fits the way he lives his life. Utterly different is the world of club football, in which managers and styles change almost every year, and a defensive football lover like me can be caught in a dilemma if the team he\u2019s loved since childhood suddenly begins to play a style completely contrary to his character and way of life. Sadly, this is what happened to me this year, when Jordi Cruyff, son of the legendary Dutch player and coach Johan Cruyff, was appointed manager of Maccabi.\n Cruyff Sr.\u2019s autobiography,  My Turn: A Life of Total Football, was published in 2016, several months after his death from lung cancer. Cruyff is considered the inventor of \u201ctotal football,\u201d a highly exciting, attacking form of the game in which the team spends most of the game deep in the opponent\u2019s half. He applied this style first at Ajax Amsterdam as a player, and later at Barcelona as a coach. His son, Jordi, grew up in the youth academies of these two clubs. Both specialize, to this day, in an attacking, no-holds-barred game.\n Out of respect for the new manager, and to avoid condemning him prematurely, I recently purchased the elder Cruyff\u2019s autobiography and started reading it. Unfortunately, I abandoned the book after a long paragraph on page 89 in which Cruyff explains why, in his opinion, the most important thing in football is not victory, but entertaining the crowd.\n When the first reports of Cruyff\u2019s son\u2019s expected appointment as the team\u2019s coach emerged, I remembered all the wonderful defensive performances I\u2019d enjoyed from Maccabi in the last few years: a squeaky victory over title rivals Hapoel Be\u2019er Sheva, orchestrated by the gruff Serbian coach Slavi\u0161a Jokanovi\u0107; a heroic victory with ten men defending in the derby, led by coach Paulo Sousa. And, of course, the pi\u00e8ce de r\u00e9sistance: an unforgettable away draw at FC Basel, in which Maccabi left its own half only twice the entire game and scored two goals, clinching an unlikely spot at the greatest stage of world club football, the European Champions League.\n Concerned, I got on the phone with Dan. Since our first meeting in that French class, he\u2019s retired from active play and now lives in Germany, working as an analyst for Dynamo Dresden.\n Dan tried to calm me down. \u201cDo you still hold your father\u2019s opinions about literature?\u201d he asked. My father, Menahem Portugali, published three ridiculous Mossad thrillers in his day. \u201cI\u2019m by no means sure that Jordi Cruyff adopted his father\u2019s footballing philosophy to the letter,\u201d he added.\n \u201cBut in any case, it\u2019ll be fine, don\u2019t worry,\u201d he said. \u201cJust remember that when a team attacks with a lot of players, at the end of the day, it\u2019s only to keep its opponent away from the goal.\u201d\n Editor\u2019s note: Cruyff was replaced after his first season as coach at Maccabi Tel Aviv. The club\u2019s new coach, Vladimir Ivic, used to work under Portugal\u2019s Fernando Santos, who led his team to win the 2016 Euro championship after ending every group-stage match with a draw.", "posttime": "2021-08-03 00:27:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9632\u5b88,defensive,\u8db3\u7403", "title": "\u8d5e\u7f8e\u9632\u5b88\u8db3\u7403", "title_en": "In praise of defensive football", "transed": 1, "url": "https://popula.com/2018/07/10/in-praise-of-defensive-football/", "via": "", "real_tags": ["\u9632\u5b88", "defensive", "\u8db3\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071207, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7f16\u7a0b\u8bed\u8a00\u9886\u57df\u6ca1\u6709\u5f88\u591a\u975e\u5e38\u6709\u529b\u7684\u5b9e\u8bc1\u7ed3\u679c\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u6709\u5927\u91cf\u7684\u53d8\u91cf\u9700\u8981\u63a7\u5236\uff0c\u800c\u4e14\u7814\u7a76\u4eba\u5458\u53ef\u7528\u7684\u5927\u591a\u6570\u79d1\u76ee\u90fd\u662f CS \u672c\u79d1\u751f\u3002\u7136\u800c\uff0c\u6211\u6700\u8fd1\u53d1\u73b0\u4e86\u4e00\u4e2a\u5728\u4f17\u591a\u4ee3\u7801\u5e93\u4e2d\u590d\u5236\u7684\u7ed3\u679c\uff0c\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u4f7f\u5176\u6210\u4e3a\u8be5\u9886\u57df\u6700\u53ef\u9760\u7684\u53d1\u73b0\u4e4b\u4e00\uff1a\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u975e\u5e38\u5927\uff08\u6570\u767e\u4e07\u884c\u4ee3\u7801\uff09\u7684\u4ee3\u7801\u5e93\uff0c\u7528\u5185\u5b58\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u7f16\u5199\u7f16\u7a0b\u8bed\u8a00\uff08\u4f8b\u5982 C \u6216 C++\uff09\uff0c\u60a8\u53ef\u4ee5\u9884\u671f\u81f3\u5c11 65% \u7684\u5b89\u5168\u6f0f\u6d1e\u662f\u7531\u5185\u5b58\u4e0d\u5b89\u5168\u5f15\u8d77\u7684\u3002 Android\uff08\u5f15\u7528\uff09\uff1a\u201c\u6211\u4eec\u7684\u6570\u636e\u663e\u793a\uff0c\u50cf\u91ca\u653e\u540e\u4f7f\u7528\u3001\u53cc\u91cd\u91ca\u653e\u548c\u5806\u7f13\u51b2\u533a\u6ea2\u51fa\u7b49\u95ee\u9898\u901a\u5e38\u5360 Chrome \u548c Android \u4e2d\u9ad8\u5371\u5b89\u5168\u6f0f\u6d1e\u7684 65% \u4ee5\u4e0a\u3002\u201d Android \u7684\u84dd\u7259\u548c\u5a92\u4f53\u7ec4\u4ef6\uff08\u5f15\u7528\uff09\uff1a\u201c\u91ca\u653e\u540e\u4f7f\u7528 (UAF)\u3001\u6574\u6570\u6ea2\u51fa\u548c\u8d8a\u754c (OOB) \u8bfb/\u5199\u6784\u6210\u4e86 90% \u7684\u6f0f\u6d1e\uff0c\u5176\u4e2d OOB \u662f\u6700\u5e38\u89c1\u7684\u3002\u201d iOS \u548c macOS\uff08\u5f15\u7528\uff09\uff1a\u201c\u5728\u6574\u4e2a iOS 12 \u4e2d\uff0cApple \u4fee\u590d\u4e86 261 \u4e2a CVE\uff0c\u5176\u4e2d 173 \u4e2a\u662f\u5185\u5b58\u4e0d\u5b89\u5168\u3002\u8fd9\u662f\u6240\u6709\u6f0f\u6d1e\u7684 66.3%\u3002\u201d\u548c\u201c\u5728\u6574\u4e2a Mojave Apple \u4fee\u590d\u4e86 298 \u4e2a CVE\uff0c\u5176\u4e2d 213 \u4e2a\u662f\u5185\u5b58\u4e0d\u5b89\u5168\u3002\u8fd9\u662f\u6240\u6709\u6f0f\u6d1e\u7684 71.5%\u3002\u201d Chrome\uff08\u5f15\u7528\uff09\uff1a\u201cChromium \u9879\u76ee\u53d1\u73b0\u6211\u4eec\u5927\u7ea6 70% \u7684\u4e25\u91cd\u5b89\u5168\u6f0f\u6d1e\u662f\u5185\u5b58\u5b89\u5168\u95ee\u9898\u3002\u201d\u5fae\u8f6f\uff08\u5f15\u7528\uff09\uff1a\u201c\u5fae\u8f6f\u6bcf\u5e74\u5206\u914d\u7ed9 CVE \u7684\u6f0f\u6d1e\u4e2d\u7ea6\u6709 70% \u4ecd\u7136\u662f\u5185\u5b58\u5b89\u5168\u95ee\u9898\u201d\nFirefox \u7684 CSS \u5b50\u7cfb\u7edf\uff08\u5f15\u7528\uff09\uff1a\u201c\u5982\u679c\u6211\u4eec\u6709\u4e00\u53f0\u65f6\u95f4\u673a\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u4e00\u5f00\u59cb\u5c31\u7528 Rust \u7f16\u5199\u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u90a3\u4e48 51 (73.9%) \u4e2a\u9519\u8bef\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002\u201d Ubuntu \u7684 Linux \u5185\u6838\uff08\u5f15\u7528\uff09\uff1a\u201c\u8fc7\u53bb\u516d\u4e2a\u6708 Ubuntu \u5bf9 Linux \u5185\u6838\u7684\u5b89\u5168\u66f4\u65b0\u80cc\u540e\u7684 CVE \u4e2d\u6709 65% \u662f\u5185\u5b58\u4e0d\u5b89\u5168\u3002\u201d\u8fd9\u4e9b\u6570\u5b57\u4e0e\u6211\u4eec\u5728 0days \u4e2d\u770b\u5230\u7684\u88ab\u53d1\u73b0\u88ab\u5229\u7528\u7684\u60c5\u51b5\u4e00\u81f4\u3002\u8fd9\u4e00\u89c2\u5bdf\u7ed3\u679c\u5df2\u5728\u7531\u4e0d\u540c\u516c\u53f8\u6784\u5efa\u3001\u5f00\u59cb\u4e8e\u4e0d\u540c\u65f6\u95f4\u70b9\u5e76\u4f7f\u7528\u4e0d\u540c\u5f00\u53d1\u65b9\u6cd5\u7684\u4f17\u591a\u975e\u5e38\u5927\u7684\u4ee3\u7801\u5e93\u4e2d\u91cd\u73b0\u3002\u6211\u4e0d\u77e5\u9053\u4efb\u4f55\u53cd\u4f8b\u3002\u5b83\u4eec\u7684\u4e00\u4e2a\u5171\u540c\u70b9\u662f\u7528\u4e00\u79cd\u5185\u5b58\u4e0d\u5b89\u5168\u7684\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\uff1aC \u6216 C++\u3002\u57fa\u4e8e\u8fd9\u4e9b\u8bc1\u636e\uff0c\u6211\u51c6\u5907\u5f97\u51fa\u7ed3\u8bba\uff0c\u4f7f\u7528\u5185\u5b58\u4e0d\u5b89\u5168\u7684\u7f16\u7a0b\u8bed\u8a00\u5bf9\u5b89\u5168\u6027\u4e0d\u5229\u3002\u8fd9\u5c06\u662f\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u7ed3\u679c\uff01\u7528\u4e8e\u6539\u8fdb\u8f6f\u4ef6\u7684\u7ecf\u9a8c\u8bc1\u660e\u7684\u6280\u672f\u5e72\u9884\u5f88\u5c11\u89c1\u3002\u5185\u5b58\u4e0d\u5b89\u5168\u6f0f\u6d1e\u662f\u6211\u4eec\u77e5\u9053\u5982\u4f55\u901a\u8fc7\u9009\u62e9\u5185\u5b58\u5b89\u5168\u8bed\u8a00\u6765\u5b8c\u5168\u6d88\u9664\u7684\u552f\u4e00\u7c7b\u578b\u4e4b\u4e00\u3002\u7136\u800c\uff0c\u6211\u4eec\u4f5c\u4e3a\u7406\u6027\u7684\u7ecf\u9a8c\u4e3b\u4e49\u8005\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u770b\u770b\u8fd9\u4e9b\u8bc1\u636e\u662f\u5426\u771f\u7684\u503c\u5f97\u5f97\u51fa\u5185\u5b58\u4e0d\u5b89\u5168\u7f16\u7a0b\u8bed\u8a00\u5bf9\u5b89\u5168\u4e0d\u5229\u7684\u7ed3\u8bba\u3002\u6709\u4e9b\u6f0f\u6d1e\u53ea\u80fd\u5b58\u5728\u4e8e\u5185\u5b58\u5b89\u5168\u7684\u8bed\u8a00\u4e2d\uff08\u4f8b\u5982\uff0c\u5728\u4e0d\u53d7\u4fe1\u4efb\u7684\u8f93\u5165\u4e0a\u4f7f\u7528 eval\uff1beval \u5f80\u5f80\u53ea\u5b58\u5728\u4e8e\u975e\u5e38\u9ad8\u7ea7\u7684\u8bed\u8a00\u4e2d\uff0c\u5b83\u4eec\u90fd\u662f\u5185\u5b58\u5b89\u5168\u7684\uff09\u6240\u4ee5\u7b2c\u4e00\u7ec4\u5305\u542b\u81f3\u5c11 65% \u7684\u6f0f\u6d1e\u5728\u8fd9\u4e9b\u7c7b\u578b\u7684\u4ee3\u7801\u5e93\u4e2d\uff0c\u903b\u8f91\u4e0a\u7b2c\u4e8c\u7ec4\u5fc5\u987b\u5305\u542b 35% \u7684\u6f0f\u6d1e\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u5c06\u7f16\u7a0b\u8bed\u8a00\u66f4\u6539\u4e3a\u5185\u5b58\u5b89\u5168\u7684\u8bed\u8a00\uff0c\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u6d88\u9664 65% \u7684\u6f0f\u6d1e\u3002\u4f46\u662f\u5176\u4ed6\u96c6\u5408\u7684\u5927\u5c0f\u4f1a\u6539\u53d8\u5417\uff1f\n\u6211\u5047\u8bbe\u7b2c\u4e8c\u7ec4\u4fdd\u6301\u76f8\u540c\u7684\u5927\u5c0f\uff1a\u6ca1\u6709\u7406\u7531\u6216\u8bc1\u636e\u8ba4\u4e3a\u5c06 C++ \u79fb\u690d\u5230\u5185\u5b58\u5b89\u5168\u8bed\u8a00\u4f1a\u5bfc\u81f4\u989d\u5916\u7684 SQL \u6ce8\u5165\u3002\u6211\u4eec\u7684\u7b2c\u4e09\u7ec4\u662f\u7279\u5b9a\u4e8e\u5185\u5b58\u5b89\u5168\u8bed\u8a00\u7684\u6f0f\u6d1e\u3002\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u5b9e\u9645\u4f7f\u7528 eval \u662f\u975e\u5e38\u7f55\u89c1\u7684\uff0c\u4f46\u5b83\u7684\u8fd1\u4eb2\u201c\u4e0d\u5b89\u5168\u53cd\u5e8f\u5217\u5316\u201d\u786e\u5b9e\u53d1\u751f\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u3002\u4e3a\u4e86\u8c03\u67e5\u5b83\u7684\u9891\u7387\uff0c\u6211\u8c03\u67e5\u4e86Java \u5728Android \u4e0a\u7684\u4e0d\u5b89\u5168\u53cd\u5e8f\u5217\u5316\u3002\u6839\u636e\u6211\u56de\u987e\u7684\u7814\u7a76\uff0cAndroid \u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4f3c\u4e4e\u6709\u5341\u51e0\u4e2a\u8fd9\u6837\u7684\u3002\u57fa\u672c\u4e0a\u6bcf\u4e2a\u6708\u5b83\u90fd\u6709\u6bd4\u5b83\u4e00\u76f4\u4ee5\u6765\u7684\u6b64\u7c7b\u6f0f\u6d1e\u66f4\u591a\u7684\u5185\u5b58\u4e0d\u5b89\u5168\u95ee\u9898\u3002\u6240\u4ee5\u6211\u76f8\u4fe1\u8fd9\u4e2a\u73ed\u7ea7\u6bd4\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u73ed\u7ea7\u5c0f\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002\u603b\u4e4b\uff0c\u5b9e\u8bc1\u7814\u7a76\u652f\u6301\u8fd9\u6837\u7684\u547d\u9898\uff0c\u5373\u5728\u8fd9\u4e9b\u9879\u76ee\u4e2d\u4f7f\u7528\u5185\u5b58\u5b89\u5168\u7f16\u7a0b\u8bed\u8a00\u5c06\u5bfc\u81f4\u6f0f\u6d1e\u603b\u6570\u7684\u5927\u5e45\u51cf\u5c11\u3002\u50cf\u6240\u6709\u7ecf\u9a8c\u8bba\u65ad\u4e00\u6837\uff0c\u968f\u7740\u6211\u4eec\u83b7\u5f97\u66f4\u591a\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u88ab\u4fee\u6539\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4efb\u4e00\u65b9\u5f0f\u8bc1\u660e\u6211\u662f\u9519\u7684\uff1a\u5185\u5b58\u4e0d\u5b89\u5168\u6027\u6f0f\u6d1e\u7684\u6bd4\u7387\u8981\u4f4e\u5f97\u591a\uff0c\u6216\u8005 b) \u627e\u5230\u5177\u6709\u53ef\u6bd4\u89c4\u6a21\u7684\u5185\u5b58\u5b89\u5168\u7279\u5b9a\u6f0f\u6d1e\u7684\u4ee3\u7801\u5e93\uff08\u6bcf\u4e2a\u7248\u672c\u4fee\u590d\u4e86\u6570\u5341\u4e2a\uff09\u3002\u9664\u975e\u4f60\u6709\u8bc1\u636e\uff0c\u5426\u5219\u4e0d\u8981\u4e3a\u6709\u4eba\u53ef\u4ee5\u7f16\u5199 10 \u4e2a\u5047\u8bbe\u6027\u6982\u200b\u200b\u5ff5\u800c\u70e6\u607c\u6570\u767e\u4e07\u884c C \u6ca1\u6709\u65e0\u5904\u4e0d\u5728\u7684\u5185\u5b58\u4e0d\u5b89\u5168\u6f0f\u6d1e\u2014\u2014\u8fd9\u53ea\u662f\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u5e73\u9762\u7406\u8bba\u3002", "note_en": "There are  not a lot of very strong empirical results in the field ofprogramming languages. This is probablybecause there\u2019s a huge amount of variables to control for, and most of thesubjects available to researchers are CS undergraduates. However, I haverecently found a result replicated across numerous codebases, which as far as Ican tell makes it one of the most robust findings in the field:\n If you have a very large (millions of lines of code) codebase, written in amemory-unsafe programming language (such as C or C++), you can expectat least 65% of your security vulnerabilities to be caused by memoryunsafety.\n  Android ( cite): \u201cOur data shows that issues like use-after-free, double-free, and heap buffer overflows generally constitute more than 65% of High &amp; Critical security bugs in Chrome and Android.\u201d\n Android\u2019s bluetooth and media components ( cite): \u201cUse-after-free (UAF), integer overflows, and out of bounds (OOB) reads/writes comprise 90% of vulnerabilities with OOB being the most common.\u201d\n iOS and macOS ( cite): \u201cAcross the entirety of iOS 12 Apple has fixed 261 CVEs, 173 of which were memory unsafety. That\u2019s 66.3% of all vulnerabilities.\u201d and \u201cAcross the entirety of Mojave Apple has fixed 298 CVEs, 213 of which were memory unsafety. That\u2019s 71.5% of all vulnerabilities.\u201d\n Chrome ( cite): \u201cThe Chromium project finds that around 70% of our serious security bugs are memory safety problems.\u201d\n Microsoft ( cite): \u201c~70% of the vulnerabilities Microsoft assigns a CVE each year continue to be memory safety issues\u201d\n Firefox\u2019s CSS subsystem ( cite): \u201cIf we\u2019d had a time machine and could have written this component in Rust from the start, 51 (73.9%) of these bugs would not have been possible.\u201d\n Ubuntu\u2019s Linux kernel ( cite): \u201c65% of CVEs behind the last six months of Ubuntu security updates to the Linux kernel have been memory unsafety.\u201d\n And these numbers are in line with what we\u2019ve seen in 0days that have been discovered being exploited.\n This observation has been reproduced across numerous very large code bases,built by different companies, started at different points in time, and usingdifferent development methodologies. I\u2019m not aware of any counter-examples. Theone thing they have in common is being written in a memory-unsafe programminglanguage: C or C++.\n Based on this evidence, I\u2019m prepared to conclude that using memory-unsafeprogramming languages is bad for security. This would be an exciting result! Empirically demonstrated technical interventions to improve software are rare.And memory-unsafety vulnerabilities are one of the only kind that we know howto completely eliminate, by choosing memory-safe languages. However, it\u2019scritical we approach this question as rational empiricists, and see if theevidence really merits the conclusion that memory-unsafe programming languagesare bad for security.\n  There are vulnerabilities that can only exist in memory-safe languages (e.g.use of  eval on untrusted inputs;  eval tends to only exist in veryhigh-level languages, which are all memory-safe)\n So the first set contains at least 65% of the vulnerabilities in these types ofcodebases, and logically the second set must contain 35% of thevulnerabilities. So if we change programming language to something memory-safe,we get rid of at least 65% of our vulnerailities. But does the magnitude of theother sets change?\n I posit that the second set stays the same size: there\u2019s no reason or evidenceto think that porting C++ to a memory-safe language results in additional SQLinjection.\n Our third set is vulnerabilities that are specific to memory-safe languages.Actual use of  eval in production code is incredibly rare in my experience,however its cousin \u201cunsafe deserialization\u201d does occur in the real world.To investigate its frequency, I looked into Java\u2019s unsafe deserialization onAndroid. Based  on research I reviewed,Android as a whole appears to have had maybe a dozen of these. Basically everymonth it has more memory-unsafety issues than it\u2019s had vulnerabilities of thisclass all time. So I believe this class to be orders of magnitude smaller thanour first set.\n In conclusion, the empirical research supports the proposition that usingmemory-safe programming languages for these projects would result in agame-changing reduction in total number of vulnerabilities.\n Like all empirical claims, this is subject to revision as we obtain more data.You could prove me wrong by either a) finding very large codebases, written inmemory-unsafe languages which, after being subjected to substantial first- andthird-party security research, had a much lower ratio of memory-unsafetyinduced vulnerabilities, or b) finding codebases which have memory-safespecific vulnerabilities at a comparable scale (dozens fixed per release).Until you have the  evidence, don\u2019t bother with hypothetical notions thatsomeone can write 10 million lines of C without ubiquitious memory-unsafetyvulnerabilities \u2013 it\u2019s just Flat Earth Theory for software engineers.", "posttime": "2021-08-03 00:27:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,2020,\u5b89\u5168\u6027,\u5185\u5b58", "title": "\u5173\u4e8e C \u548c C++ \u7684\u5b89\u5168\u6027\uff0c\u79d1\u5b66\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u4ec0\u4e48\uff082020 \u5e74\uff09", "title_en": "What science can tell us about C and C++'s security (2020)", "transed": 1, "url": "https://alexgaynor.net/2020/may/27/science-on-memory-unsafety-and-security/", "via": "", "real_tags": ["c++", "2020", "\u5b89\u5168\u6027", "\u5185\u5b58"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071206, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": ";; Peter Norvig - \u6765\u81ea Erann Gat \u7684\u7f16\u7a0b\u6311\u6218\uff1a;; http://www.flownet.com/ron/papers/lisp-java/;;\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\u548c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u5217\u8868\uff0c\u627e\u51fa\u6240\u6709\u7684\u65b9\u6cd5\uff1b\uff1b\u6bcf\u4e2a\u7535\u8bdd\u53f7\u7801\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\u3002\u8fd0\u884c\uff1a (main &quot;word-list-file-name&quot; &quot;phone-number-file-name&quot;)(defvar *dict* nil &quot;\u4e00\u4e2a\u5c06\u7535\u8bdd\u53f7\u7801\uff08\u6574\u6570\uff09\u6620\u5c04\u5230\u8f93\u5165\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u5217\u8868\u7684\u54c8\u5e0c\u8868\u4ea7\u751f\u90a3\u4e2a\u6570\u5b57\u3002&quot;)(defun main (&amp;optional (dict &quot;dict&quot;) (nums &quot;nums&quot;) (dict-size 100)) &quot;\u8bfb\u53d6\u8f93\u5165\u6587\u4ef6 DICT \u5e76\u5c06\u5176\u52a0\u8f7d\u5230 *dict*\u3002\u7136\u540e\u5bf9\u4e8e NUMS \u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u6839\u636e\u7ffb\u8bd1\u89c4\u5219\uff0c\u5c06\u6570\u5b57\u7684\u6240\u6709\u7ffb\u8bd1\u6253\u5370\u6210\u5355\u8bcd\u5e8f\u5217\u3002\u201d (setf *dict* (load-dictionary dict dict-size)) (with-open-file (in nums) (loop for num = (read-line in nil) while num do (print-translations num (remove-if-not #&#39;digit-char-p num)))))(defun print-translations (num numbers &amp;optional (start 0)) words nil)) &quot;\u5c06 NUM \u7684\u6bcf\u4e2a\u53ef\u80fd\u7684\u7ffb\u8bd1\u6253\u5370\u6210\u4e00\u4e32\u5355\u8bcd\u3002DIGITS \u5fc5\u987b\u662f\u5220\u9664\u975e\u6570\u5b57\u7684 WORD\u3002\u5728\u9012\u5f52\u8c03\u7528\u4e2d\uff0cSTART \u662f DIGITS \u4e2d\u67e5\u627e\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e\uff0c\u800c WORDS \u662f\u4e3a (subseq DIGITS 0 START) \u627e\u5230\u7684\u5355\u8bcd\u5217\u8868\u3002\u6240\u4ee5\u5982\u679c START \u5230\u8fbe DI \u7684\u7ed3\u5c3eGITS\uff0c\u7136\u540e\u6211\u4eec\u5728 WORDS \u4e2d\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u5426\u5219\uff0c\u5bf9\u4e8e DIGITS \u7684\u6bcf\u4e2a\u524d\u7f00\uff0c\u5728\u5b57\u5178\u4e2d\u67e5\u627e\u6620\u5c04\u5230\u524d\u7f00\u503c\u7684\u5355\u8bcd\uff08\u589e\u91cf\u8ba1\u7b97\u4e3a N\uff09\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u8fd9\u6837\u7684\u5355\u8bcd\u5c1d\u8bd5\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u6269\u5c55\u89e3\u51b3\u65b9\u6848\u3002\u6709\u4e24\u4e2a\u5e76\u53d1\u75c7\uff1a\uff081\uff09\u89c4\u5219\u8bf4\u9664\u4e86\u5b57\u5178\u5355\u8bcd\u4e4b\u5916\uff0c\u60a8\u53ef\u4ee5\u5728\u8f93\u51fa\u4e2d\u4f7f\u7528\u5355\u4e2a\u6570\u5b57\uff0c\u4f46\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528\u4e24\u4e2a\u6570\u5b57\u3002\u53e6\u5916\uff08\u8fd9\u770b\u8d77\u6765\u5f88\u50bb\uff09\u4f60\u4e0d\u80fd\u5728\u4e00\u4e2a\u53ef\u4ee5\u51fa\u73b0\u4efb\u4f55\u5355\u8bcd\u7684\u5730\u65b9\u6709\u4e00\u4e2a\u6570\u5b57\u3002\u6211\u7528\u53d8\u91cf FOUND-WORD \u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff1b\u5982\u679c\u5faa\u73af\u540e\u4e3a\u5047\uff0c\u5e76\u4e14\u6700\u8fd1\u7684\u5355\u8bcd\u4e0d\u662f\u6570\u5b57\uff0c\u8bf7\u5c1d\u8bd5\u63a8\u9001\u6570\u5b57\u7684\u9012\u5f52\u8c03\u7528\u3002 (2) \u53e6\u4e00\u4e2a\u590d\u6742\u4e4b\u5904\u662f\uff0c\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u6574\u6570\u7684\u663e\u800c\u6613\u89c1\u7684\u65b9\u6cd5\u662f\u5c06 R \u6620\u5c04\u5230 2\uff0c\u5c06 ER \u6620\u5c04\u5230 02\uff0c\u8fd9\u5f53\u7136\u4e0e 2 \u662f\u76f8\u540c\u7684\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u5728\u6bcf\u4e2a\u6570\u5b57\u524d\u52a0\u4e00\u4e2a 1\uff0cR \u53d8\u4e3a 12 \u5e76\u4e14ER \u53d8\u6210 102\u3002&quot; (if (&gt;= start (length digits)) (format t &quot;~a:~{ ~a~}~%&quot; num (reverse words)) (let ((found-word nil) (n 1 )) ; \u524d\u5bfc\u96f6\u95ee\u9898\uff08\u5faa\u73af\u4ece\u4e0b\u9762\u5f00\u59cb\u7684 i \uff08\u957f\u5ea6\u6570\u5b57\uff09 do (setf n (+ (* 10 n) (nth-digit digits i))) (loop for word in (gethash n *dict*) do (setf found-word t) (print-translations num numbers (+ 1 i) (cons word words)))) (when (and (not found-word) (not (numberp (first words)))) (print- translations num numbers (+ start 1) (cons (nth-digit numbers start) words)))))(defun load-dictionary (file size) &quot;\u4ece\u5355\u8bcd\u6587\u4ef6\u4e2d\u521b\u5efa\u4e00\u4e2a\u54c8\u5e0c\u8868\uff08\u6bcf\u884c\u4e00\u4e2a\uff09\u3002\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u54c8\u5e0c\u8868\u5927\u5c0f\u7684\u63d0\u793a\u3002\u6bcf\u4e2a\u952e\u662f\u4e00\u4e2a\u5355\u8bcd\u7684\u7535\u8bdd\u53f7\u7801\uff1b\u6bcf\u4e2a\u503c\u662f\u5177\u6709\u8be5\u7535\u8bdd\u53f7\u7801\u7684\u5355\u8bcd\u5217\u8868\u3002\u201d ((table (make-hash-table :test #&#39;eql :si ze size))) (with-open-file (in file) (loop for word = (read-line in nil) while word do (push word (gethash (word-&gt;number word) table)))) \u8868)) (defun word-&gt;number (word) &quot;\u6309\u7167\u89c4\u5219\u5c06\u4e00\u4e2a\u5355\u8bcd\uff08\u5b57\u7b26\u4e32\uff09\u7ffb\u8bd1\u6210\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u3002&quot; (let ((n 1)) ;\u524d\u5bfc\u96f6\u95ee\u9898\uff08\u5faa\u73af\u4ece 0 \u4e0b\u9762\uff08\u957f\u5ea6\u5b57\uff09\u4e3a ch =\uff08\u5b57\u7b26\u5b57 i\uff09\u505a\uff08\u5f53\uff08alpha-char-p ch\uff09\uff08setf n\uff08+\uff08* 10 n\uff09\uff08char-&gt;digit ch\uff09\uff09 )))) n))(defun nth-digit (digits i) \u201c\u6570\u5b57\u5b57\u7b26\u4e32\u7684\u7b2c i \u4e2a\u5143\u7d20\uff0c\u4e3a 0 \u5230 9 \u7684\u6574\u6570\u3002\u201d (- (char-code (char numbers i)) # .(char-code #\\0)))(defun char-&gt;digit (ch) &quot;\u6839\u636e\u7535\u8bdd\u53f7\u7801\u89c4\u5219\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57\u3002&quot; (ecase (char-downcase ch) ((#\\e) 0 ) ((#\\j #\\n #\\q) 1) ((#\\r #\\w #\\x) 2) ((#\\d #\\s #\\y) 3) ((#\\f #\\ t) 4) ((#\\a #\\m) 5) ((#\\c #\\i #\\v) 6) ((#\\b #\\k #\\u) 7) ((#\\l #\\ o #\\p) 8) ((#\\g #\\h #\\z) 9)))", "note_en": ";; Peter Norvig - Programming Challange from Erann Gat:;;  http://www.flownet.com/ron/papers/lisp-java/;; Given a list of words and a list of phone numbers, find all the ways that;; each phone number can be expressed as a list of words.;; Run: (main &#34;word-list-file-name&#34; &#34;phone-number-file-name&#34;)(defvar  *dict* nil &#34;A hash table mapping a phone number (integer) to a list of words from the input dictionary that produce that number.&#34;)(defun  main (&amp;optional (dict &#34;dict&#34;) (nums &#34;nums&#34;) (dict-size 100)) &#34;Read the input file DICT and load it into *dict*. Then for each line in NUMS, print all the translations of the number into a sequence of words, according to the rules of translation.&#34; (setf *dict* (load-dictionary dict dict-size)) (with-open-file (in nums) (loop for num = (read-line in nil) while num do (print-translations num (remove-if-not #&#39;digit-char-p num)))))(defun  print-translations (num digits &amp;optional (start 0) (words nil)) &#34;Print each possible translation of NUM into a string of words. DIGITS must be WORD with non-digits removed. On recursive calls, START is the position in DIGITS at which to look for the next word, and WORDS is the list of words found for (subseq DIGITS 0 START). So if START gets to the end of DIGITS, then we have a solution in WORDS. Otherwise, for every prefix of DIGITS, look in the dictionary for word(s) that map to the value of the prefix (computed incrementally as N), and for each such word try to extend the solution with a recursive call. There are two complications: (1) the rules say that in addition to dictionary words, you can use a single digit in the output, but not two digits in a row. Also (and this seems silly) you can&#39;t have a digit in a place where any word could appear. I handle this with the variable FOUND-WORD; if it is false after the loop, and the most recent word is not a digit, try a recursive call that pushes a digit. (2) The other complication is that the obvious way of mapping strings to integers would map R to 2 and ER to 02, which of course is the same integer as 2. Therefore we prepend a 1 to every number, and R becomes 12 and ER becomes 102.&#34; (if (&gt;= start (length digits)) (format t &#34;~a:~{ ~a~}~%&#34; num (reverse words)) (let ((found-word nil) (n 1)) ; leading zero problem (loop for i from start below (length digits) do (setf n (+ (* 10 n) (nth-digit digits i))) (loop for word in (gethash n *dict*) do (setf found-word t) (print-translations num digits (+ 1 i) (cons word words)))) (when (and (not found-word) (not (numberp (first words)))) (print-translations num digits (+ start 1) (cons (nth-digit digits start) words))))))(defun  load-dictionary (file size) &#34;Create a hashtable from the file of words (one per line). Takes a hint for the initial hashtable size. Each key is the phone number for a word; each value is a list of words with that phone number.&#34; (let ((table (make-hash-table :test #&#39;eql :size size))) (with-open-file (in file) (loop for word = (read-line in nil) while word do (push word (gethash (word-&gt;number word) table)))) table))(defun  word-&gt;number (word) &#34;Translate a word (string) into a phone number, according to the rules.&#34; (let ((n 1)) ; leading zero problem (loop for i from 0 below (length word) for ch = (char word i) do (when (alpha-char-p ch) (setf n (+ (* 10 n) (char-&gt;digit ch))))) n))(defun  nth-digit (digits i) &#34;The i-th element of a character string of digits, as an integer 0 to 9.&#34; (- (char-code (char digits i)) #.(char-code #\\0)))(defun  char-&gt;digit (ch) &#34;Convert a character to a digit according to the phone number rules.&#34; (ecase (char-downcase ch) ((#\\e) 0) ((#\\j #\\n #\\q) 1) ((#\\r #\\w #\\x) 2) ((#\\d #\\s #\\y) 3) ((#\\f #\\t) 4) ((#\\a #\\m) 5) ((#\\c #\\i #\\v) 6) ((#\\b #\\k #\\u) 7) ((#\\l #\\o #\\p) 8) ((#\\g #\\h #\\z) 9)))", "posttime": "2021-08-03 00:27:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,alternative,word", "title": "Lisp \u4f5c\u4e3a Java \u7684\u66ff\u4ee3\u54c1 (2000)", "title_en": "Lisp as an Alternative to Java (2000)", "transed": 1, "url": "http://www.norvig.com/java-lisp.html", "via": "", "real_tags": ["java", "word"]}]
[{"category": "", "categoryclass": "", "imagename": "2daac4ecc2ed05b35411c7bc0c0ed620.png", "infoid": 1070619, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5468\u524d\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u6700\u65b0\u7684\u4ea7\u54c1\u7248\u672c\u4ee5\u53ca\u7531\u5bb9\u5668\u6280\u672f\u548c Docker \u63d0\u4f9b\u652f\u6301\u7684 Artifakt \u5e73\u53f0\u7684\u65b0\u4efb\u610f\u5e94\u7528\u529f\u80fd\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0cArtifakt \u4e00\u76f4\u4e13\u6ce8\u4e8e PHP \u5806\u6808\u3002\u4f46\u662f PHP \u5e76\u4e0d\u662f Web \u5e94\u7528\u7a0b\u5e8f\u7684\u552f\u4e00\u8bed\u8a00\u3002\u501f\u52a9\u65b0\u7684 Docker \u96c6\u6210\uff0c\u6211\u4eec\u6709\u8fdc\u5927\u7684\u8ba1\u5212\uff01\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u6253\u5305\u7684\u4e8b\u5b9e\u6807\u51c6\u91cd\u65b0\u6784\u5efa\u6211\u4eec\u7684 PaaS\uff0c\u5bf9\u4e8e\u5404\u79cd\u5f62\u5f0f\u548c\u89c4\u6a21\u7684\u5f00\u53d1\u56e2\u961f\u6765\u8bf4\u90fd\u662f\u4e2a\u597d\u6d88\u606f\u3002\u60a8\u4f1a\u5728\u6b64\u7248\u672c\u4e2d\u53d1\u73b0\u8bb8\u591a\u597d\u5904\uff0c\u73b0\u5728\u662f\u52a0\u5165\u5bb9\u5668\u53cb\u597d\u578b PaaS \u7684\u6700\u4f73\u65f6\u673a\u2014\u2014\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u3001\u66f4\u6539\u53ef\u8ffd\u6eaf\u6027\u3001\u8fd0\u884c\u65f6\u6027\u80fd\u3001\u5ba2\u6237\u4ef7\u503c\u3002\u66f4\u4e0d\u7528\u8bf4 Docker \u662f\u654f\u6377\u6027\u3001\u53cd\u8106\u5f31\u6027\u548c\u4e0a\u5e02\u65f6\u95f4\u7b49\u6838\u5fc3 DevOps \u539f\u5219\u7684\u6700\u4f73\u670b\u53cb\u3002\u4f46\u6240\u6709\u7684\u65c5\u7a0b\uff0c\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\uff0c\u90fd\u5e38\u5e38\u4f34\u968f\u7740\u6323\u624e\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u6df1\u5165\u63a2\u8ba8\u6211\u4eec\u5728 Docker \u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u9762\u4e34\u7684\u6311\u6218\u4ee5\u53ca\u6211\u4eec\u5438\u53d6\u7684\u6559\u8bad\u3002\u5982\u679c\u60a8\u5e0c\u671b\u8fc1\u79fb\u5230\u5bb9\u5668\uff0c\u8bf7\u9605\u8bfb\u4e00\u672c\u4e66\u2014\u2014\u6211\u76f8\u4fe1\u60a8\u4f1a\u627e\u5230\u81f3\u5c11\u4e00\u4e2a\u76f8\u5173\u7684\u89c2\u70b9\uff0c\u4e5f\u8bb8\u6211\u4eec\u5904\u7406\u67d0\u4e9b\u95ee\u9898\u548c\u6311\u6218\u7684\u65b9\u5f0f\u53ef\u4ee5\u5e2e\u52a9\u60a8\u907f\u514d\u6f5c\u5728\u7684\u9519\u8bef\u3002 PaaS \u89e3\u51b3\u65b9\u6848\u975e\u5e38\u65b9\u4fbf\u3002\u6211\u76f8\u4fe1\u4efb\u4f55\u4ece\u672c\u5730\u6216 IaaS \u8fc1\u79fb\u5176\u5e94\u7528\u7a0b\u5e8f\u7684\u4eba\u90fd\u4f1a\u540c\u610f\u3002\n\u8fd9\u79cd\u4fbf\u5229\u6c34\u5e73\u7684\u4e00\u90e8\u5206\u662f\u4f7f\u7528\u865a\u62df\u673a (VM)\u3002\u4e0d\u9519\u7684\u8f6f\u4ef6\uff0c\u975e\u5e38\u53ef\u9760\u7684\u62bd\u8c61\uff0c\u51e0\u5341\u5e74\u6765\u7684\u5b89\u5168\u548c\u6210\u719f\u3002\u73b0\u5728\u6ca1\u6709\u4eba\u79bb\u4e0d\u5f00\u5b83\u4eec\uff0c\u56e0\u6b64\u5b83\u4eec\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u8fd8\u4e0d\u591f\u3002\u865a\u62df\u673a\u7684\u9634\u6697\u9762\u662f\u5b83\u4eec\u5f80\u5f80\u4f1a\u6210\u957f\u4e3a\u79c1\u4eba\u5ba0\u7269\u3002\u65e5\u5e38\u7ef4\u62a4\u3001\u5b9a\u671f\u652f\u6301\u548c\u5076\u5c14\u7684\u751f\u547d\u652f\u6301\u9700\u8981\u5927\u91cf\u7684\u56fa\u5b9a\u6210\u672c\u4ee5\u53ca\u4eba\u529b\u63f4\u52a9\u3002\u73b0\u5728\uff0c\u5bf9\u4e8e\u75db\u82e6\u7684\u73b0\u5b9e\uff1a\u865a\u62df\u673a\u4e0d\u518d\u9002\u7528\u4e8e\u4e91\u57fa\u7840\u67b6\u6784\u3002\u5f53\u524d\u7684\u6761\u4ef6\u5bf9\u5b83\u4eec\u6765\u8bf4\u5f88\u82db\u523b\uff0c\u53ef\u80fd\u4f1a\u9002\u7528\u4e25\u683c\u7684\u6cd5\u89c4\uff0c\u867d\u7136\u6280\u672f\u683c\u5c40\u4e0d\u65ad\u53d1\u5c55\uff0c\u4f46\u865a\u62df\u673a\u4ecd\u7136\u5efa\u7acb\u5728\u4e0e 20 \u5e74\u524d\u76f8\u540c\u7684\u539f\u5219\u4e0a\u3002\u60a8\u5e94\u8be5\u59cb\u7ec8\u7262\u8bb0\u6240\u6709\u53ef\u80fd\u51fa\u9519\u7684\u573a\u666f\u5e76\u505a\u597d\u51c6\u5907\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u5bb9\u5668\u8fc1\u79fb\u4e2d\u53ef\u80fd\u4f1a\u51fa\u9519\u7684\u51e0\u4ef6\u4e8b\u60c5\u3002\u6211\u4eec\u4ee5\u524d\u542c\u8bf4\u8fc7\uff0c\u901f\u5ea6\u662f\u4e00\u5207\u6218\u6597\u4e4b\u6bcd\u3002\u4e0d\u4ec5\u5728\u6218\u7565\u4e0a\uff0c\u800c\u4e14\u4ece\u6784\u601d\u5230\u6267\u884c\u4e5f\u662f\u5982\u6b64\u3002\u53d8\u5316\u9700\u8981\u5feb\u901f\u53d1\u751f\uff0c\u8ddf\u4e0a\u751f\u6001\u7cfb\u7edf\u7684\u5feb\u901f\u53d1\u5c55\u3002\u6b63\u5982\u901a\u7528\u7535\u6c14\u524d\u9996\u5e2d\u6267\u884c\u5b98\u6770\u514b\u97e6\u5c14\u5947\u6240\u8bf4\uff1a\u4e0d\u662f\u5927\u5403\u5c0f\uff0c\u800c\u662f\u5feb\u5403\u6162\u3002\u4e00\u4e2a\u6267\u884c\u7f13\u6162\u7684\u597d\u4e3b\u610f\u610f\u5473\u7740\u6b7b\u5211\u3002\u5177\u6709\u826f\u597d\u6267\u884c\u529b\u7684\u574f\u4e3b\u610f\u610f\u5473\u7740\u60a8\u4ecd\u7136\u53ef\u4ee5\u8c03\u6574\u548c\u8bd5\u9a8c\u5e76\u5173\u95ed\u6210\u529f\u7684\u5e02\u573a\u5951\u5408\u70b9\u3002\u5982\u679c\u60a8\u4ece\u672a\u542c\u8bf4\u8fc7\u201c\u4f46\u662f\u2026\u2026\u5b83\u53ef\u4ee5\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884c\uff01\u201d\uff0c\u8bf7\u4e3e\u624b\u3002\u5728\u4e00\u4e2a\u8f6f\u4ef6\u9879\u76ee\u4e2d\u2014\u2014\u6211\u6000\u7591\u6211\u4f1a\u770b\u5230\u5f88\u591a\u4eba\u4e3e\u624b\u3002\u5f53\u7136\uff0c\u6211\u4eec\u62e5\u6709\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u3001\u6301\u7eed\u96c6\u6210\u548c\u6240\u6709\u73b0\u4ee3\u673a\u5668\u3002\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d\uff0c\u7b52\u4ed3\u5185\u90e8\u521b\u5efa\u4e86\u5c40\u90e8\u4f18\u5316\uff0c\u5b83\u4eec\u5f88\u6709\u7528\u3002\u771f\u6b63\u7684\u4ea4\u6613\u662f\u6253\u7834\u5b64\u5c9b\uff0c\u8ba9\u56e2\u961f\u8fbe\u5230\u8db3\u591f\u9ad8\u7684\u6210\u719f\u5ea6\uff0c\u8fd9\u6837\u201c\u4ed6\u4eec\u6784\u5efa\u5b83\uff0c\u4ed6\u4eec\u8fd0\u884c\u5b83\u201d\u3002\n\u6211\u4eec\u4e0d\u5e0c\u671b PaaS \u6210\u4e3a\u65b0\u7684\u201c\u73b0\u5728\u7684\u8fd0\u8425\u95ee\u9898\u201d\u5e76\u8bf4\u201c\u73b0\u5728\u7684\u652f\u6301\u95ee\u9898\u201d\u3002\u8fd8\u8bb0\u5f97\u201c\u707e\u96be\u5973\u5b69\u201d\u6a21\u56e0\u5417\uff1f\u8fd9\u662f\u4e00\u4e2a\u7b52\u4ed3\u7efc\u5408\u75c7\u51fa\u4e86\u95ee\u9898\uff01\u800c BlackOps \u66f4\u5371\u9669\uff0c\u4f60\u4e0d\u5e0c\u671b\u5f00\u53d1\u56e2\u961f\u81ea\u5df1\u8fd0\u884c\u5bb9\u5668\u5e76\u5728\u9632\u706b\u5899\u4e2d\u6233\u6d1e\u3002\u5bb9\u5668\u662f\u4e0a\u8ff0\u6240\u6709\u6311\u6218\u7684\u7b54\u6848\u2014\u2014\u4e00\u4e2a\u6210\u719f\u7684\uff0c\u751a\u81f3\u4e4f\u5473\u7684\u8f6f\u4ef6\u6253\u5305\u6807\u51c6\u3002\u4f46\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\u65e9\u5728 20 \u4e16\u7eaa\uff0c\u5168\u7403\u5316\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u771f\u6b63\u5177\u4f53\u7684\u7269\u8d28\u53d8\u5316\u6210\u4e3a\u53ef\u80fd\uff1a\u4e00\u4e2a\u7528\u4e8e\u8fd0\u8f93\u6c7d\u8f66\u3001\u98df\u7269\u7b49\u7684\u901a\u7528\u76d2\u5b50\u3002\u8fd9\u53ea\u662f\u5b9e\u73b0\u4e86\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684\u201c\u591a\u5f0f\u8054\u8fd0\u201d\u3002\u81ea 2014 \u5e74\u4ee5\u6765\uff0c\u8f6f\u4ef6\u5bb9\u5668\u5728 Docker Inc. \u65d7\u4e0b\u7684\u4e8b\u5b9e\u4e0a\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u8fc5\u901f\u6210\u719f\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u7b80\u5355\u800c\u6709\u6548\u7684\u627f\u8bfa\uff1a\u201c\u65e0\u8bba\u5e95\u5c42\u6267\u884c\u7cfb\u7edf\u662f\u4ec0\u4e48\uff0cDocker \u90fd\u53ef\u4ee5\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u4ee3\u7801\u9010\u5b57\u8282\u8fd0\u884c\u5b83\u3002\u201d\u5bb9\u5668\u5df2\u7ecf\u5728 Artifakt \u7684\u5f15\u64ce\u76d6\u4e0b\u8fd0\u884c\u4e86\u597d\u51e0\u4e2a\u6708\u2014\u2014\u5373\u4f7f\u662f\u6709\u72b6\u6001\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u6562\u8bf4\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u8fd0\u884c\u4e0d\u540c\u7684\u914d\u7f6e\u66f4\u6539\uff0c\u800c\u4e0d\u662f 10 \u5230 30 \u5206\u949f\u7684 VM \u914d\u7f6e\u3002\u5728\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u63a7\u5236\u53f0\u7248\u672c\u4e2d\uff0cArtifakt \u5c06\u5bb9\u5668\u4f5c\u4e3a\u90e8\u7f72\u5355\u5143\u516c\u5f00\u3002\n\u60a8\u53ef\u4ee5\u60f3\u8c61 Docker \u8fc1\u79fb\u5bf9\u6211\u4eec\u65e5\u5e38\u5de5\u4f5c\u7684\u5f00\u521b\u6027\u5f71\u54cd\u3002\u7f16\u6392 VM \u9700\u8981\u4e0e\u6211\u4eec\u7684\u4e91\u63d0\u4f9b\u5546\u5728\u67d0\u4e9b\u4e13\u6709\u6280\u672f\u4e0a\u8fdb\u884c\u5f3a\u8026\u5408\u3002\u5bf9\u4e8e AWS\uff0c\u5b83\u662f CloudFormation \u548c OpsWorks\u3002\u6211\u4eec\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u6765\u4e86\u89e3\u4e91\u7684\u590d\u6742\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u5fc3\u7231\u7684\u5ba2\u6237\u5c31\u4e0d\u5fc5\u8fd9\u6837\u505a\u4e86\u3002\u56e0\u6b64\uff0c\u5b8f\u4f1f\u7684\u91cd\u5199\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5f00\u6e90\u548c\u5f00\u653e\u683c\u5f0f\uff1aDockerfile\u3001docker-compose.yaml \u548c\u7a33\u5b9a\u7684 Docker API\u3002\u5982\u4f55\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884c\u5b8c\u5168\u76f8\u540c\u7684 Magento 2 \u5806\u6808\u5e76\u5c06\u5176\u6295\u5165\u751f\u4ea7\uff1f\u8fd9\u73b0\u5728\u5728 Artifakt \u4e2d\u662f\u53ef\u80fd\u7684\u3002\u81ea 7 \u6708\u521d\u53d1\u5e03 Stack v5 \u4ee5\u6765\uff0cMagento 2 \u662f\u6211\u4eec\u6b63\u5f0f\u652f\u6301\u7684\u4e5d\u4e2a\u8fd0\u884c\u65f6\u7684\u4e00\u90e8\u5206\u3002\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u6b64\u7248\u672c\u5c06\u6240\u6709\u6311\u6218\u96c6\u4e2d\u5728\u4e00\u4e2a\u5730\u65b9\uff1a\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5982\u4f55\u514b\u670d\u8fd9\u4e9b\u6311\u6218\u4ee5\u53ca\u8fd9\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u4ec0\u4e48\u3002\u65c5\u7a0b\u4ece\u7ecf\u5178\u7684 Docker \u4f18\u70b9\u5f00\u59cb\u3002\u6211\u4eec\u5df2\u7ecf\u88ab PaaS \u73af\u5883\u4e2d\u5bb9\u5668\u5316\u7684\u597d\u5904\u6240\u5438\u5f15\u3002\u6709\u4e9b\u65b9\u9762\u771f\u7684\u5f88\u5bb9\u6613\u5b9e\u73b0\u3002\u6210\u719f\u5ea6\u8db3\u591f\u9ad8\uff0c\u751f\u6001\u7cfb\u7edf\u6b63\u5728\u84ec\u52c3\u53d1\u5c55\uff0c\u4e91\u63d0\u4f9b\u5546\u5df2\u7ecf\u5728\u94fa\u5e73\u9053\u8def\u51e0\u5e74\u4e86\u3002\u6211\u4eec\u4e0d\u80fd\u7ecf\u5386\u6240\u6709\u7684\u5feb\u901f\u80dc\u5229\uff0c\u8bb8\u591a\u5728 2021 \u5e74\u4f1a\u76f4\u63a5\u67af\u71e5\u4e4f\u5473\uff0c\u6240\u4ee5\u8ba9\u6211\u4e13\u6ce8\u4e8e\u6700\u6709\u542f\u53d1\u6027\u7684\u3002\nArgo Workflows \u662f\u5b9e\u73b0\u53cd\u5e94\u5f0f GitOps \u7ba1\u9053\u7684\u7edd\u4f73\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u53e3\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5148\u5206\u89e3\u5b83\u3002 GitOps \u4f7f\u56e2\u961f\u80fd\u591f\u4ece Git \u8fdb\u884c\u548c\u6267\u884c\u66f4\u6539\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4ee3\u7801\u66f4\u6539\u3002\u6211\u4eec\u8c08\u8bba\u7684\u662f\u57fa\u7840\u8bbe\u65bd\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u7b49\u3002\u66fe\u7ecf\u521b\u5efa\u3001\u5347\u7ea7\u6216\u9000\u5f79\u7684\u673a\u5668\u7684\u6bcf\u4e00\u90e8\u5206\u90fd\u53ef\u4ee5\u94fe\u63a5\u56de Git \u63d0\u4ea4\u3002\u611f\u89c9\u975e\u5e38\u6fc0\u52a8\uff1f\u6211\u4eec\u77e5\u9053\u6211\u4eec\u662f\uff01\u6211\u4eec\u7684\u5de5\u4f5c\u6d41\u5f88\u597d\u5730\u9690\u85cf\u5728 Argo \u4e2d\uff0c\u5e76\u4e3a\u8bb8\u591a\u4e0d\u540c\u7684\u5806\u6808\u548c\u8bed\u8a00\u8fd0\u884c\u6211\u4eec\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u4f8b\u5982\u90e8\u7f72\u4f5c\u4e1a\u3002\u6211\u4eec\u7ec4\u7ec7\u5185\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8fc7\u53bb\u7684\u5de5\u4f5c\u6d41\u7a0b\u53ca\u5176\u65e5\u5fd7\uff0c\u4ece\u800c\u8f7b\u677e\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002\u65e5\u5fd7\u4e0d\u518d\u88ab\u5206\u6210\u591a\u5c42\u590d\u6742\u7684\u788e\u7247\uff0c\u6211\u4eec\u73b0\u5728\u53d7\u76ca\u4e8e\u4e00\u4e2a\u5171\u4eab\u7684\u7acb\u573a\uff0c\u5ba2\u6237\u652f\u6301\u548c\u5de5\u7a0b\u56e2\u961f\u53ef\u4ee5\u5728\u5176\u4e2d\u5e2e\u52a9\u5ba2\u6237\u8861\u91cf\u548c\u4f18\u5316\u4ed6\u4eec\u7684\u6d41\u7a0b\u3002\u672a\u6765\uff0c\u6211\u4eec\u4e5f\u671f\u5f85\u7740\u5c1d\u8bd5 Argo CD \u4ee5\u53ca\u5b83\u4e3a\u50cf Artifakt \u8fd9\u6837\u7684 PaaS \u4ea7\u54c1\u63d0\u4f9b\u7684\u8bb8\u591a\u673a\u4f1a\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0cDocker \u955c\u50cf\u6709\u5f88\u591a\u51fa\u9519\u7684\u5730\u65b9\u3002\u7531\u4e8e\u81ea\u52a8\u5316\u6d4b\u8bd5\u662f\u4e00\u79cd\u5f88\u597d\u7684\u4ee3\u7801\u5b9e\u8df5\uff0c\u540c\u6837\u7684\u539f\u5219\u4e5f\u9002\u7528\u4e8e Dockerfiles\u3002\u5b98\u65b9\u6587\u6863\u5df2\u7ecf\u4fdd\u8bc1\u4e86 Dockerfiles \u7684\u6b63\u786e\u6027\uff1a\u6240\u6709\u547d\u4ee4\u90fd\u5e94\u8be5\u8fd4\u56de 0 \u5426\u5219\u6784\u5efa\u5c06\u5931\u8d25\u3002\u6211\u4eec\u9700\u8981\u5728\u8fd9\u91cc\u6dfb\u52a0\u4e24\u4e2a\u7ef4\u5ea6\uff1a\u6709\u6548\u6027\u548c\u5185\u5bb9\u3002\u6709\u6548\u6027\u786e\u4fdd\u6211\u4eec\u5728\u7f16\u5199 Dockerfile \u548c\u8bed\u4e49\u5185\u5bb9\u68c0\u67e5\u65f6\u6709\u6b63\u786e\u7684\u98ce\u683c\u3002\u6211\u4eec\u53ef\u4ee5\u4ec5\u4f7f\u7528\u672c\u673a Dockerfile \u6307\u4ee4\u6765\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u5417\uff1f\u5dee\u4e0d\u591a\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4e5f\u4f1a\u5bfc\u81f4\u5177\u6709\u8bb8\u591a\u975e\u751f\u4ea7\u5c42\u7684\u81a8\u80c0\u56fe\u50cf\uff0c\u7136\u540e\u8fdb\u5165\u591a\u9636\u6bb5\u6784\u5efa\u7b49\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6784\u5efa\u6210\u529f\uff0c\u5b83\u73b0\u5728\u5fc5\u987b\u4ee5\u6b63\u786e\u7684\u6570\u91cf\u548c\u6570\u91cf\u52a0\u8f7d\u6b63\u786e\u7684\u8f6f\u4ef6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u9075\u5faa\u5173\u6ce8\u70b9\u5206\u79bb\u7684\u539f\u5219\uff0c\u5728\u6d4b\u8bd5\u3001\u9a8c\u8bc1\u548c\u8bed\u4e49\u68c0\u67e5\u4e4b\u95f4\u5212\u6e05\u754c\u9650\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u8bed\u6cd5 linting\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 hadolint\uff0c\u5b83\u662f Dockerfiles \u7684\u4e00\u4e2a\u7279\u5b9a\u7684 linter\u2014\u2014\u5b83\u8db3\u591f\u5f3a\u5927\u4f46\u6613\u4e8e\u4f7f\u7528\uff0c\u4e0e CI/CD \u5f88\u597d\u5730\u96c6\u6210\uff0c\u5e76\u5f97\u5230\u79ef\u6781\u7ef4\u62a4\u3002\u5f53\u7136\uff0c\u5b83\u672c\u8eab\u5c31\u5b58\u5728\u4e8e Docker \u955c\u50cf\u4e2d\uff01\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u57fa\u672c\u9009\u9879\uff1a hadolint - \u7528 HaskellUsage \u7f16\u5199\u7684 Dockerfile Linter\uff1a hadolint [-v|--version] [--no-fail] [--no-color] [-c|--config FILENAME] [- V|--verbose] [-f|--format ARG] [DOCKERFILE...] [--error RULECODE] [--warning RULECODE] [--info RULECODE] [--style RULECODE] [--ignore RULECODE ] [--trusted-registry REGISTRY\uff08\u4f8b\u5982docker.io\uff09] [--require-label LABELSCHEMA\uff08\u4f8b\u5982\u7ef4\u62a4\u8005\uff1a\u6587\u672c\uff09] [--strict-labels] [-t|--failure-threshold THRESHOLD] [-- file-path-in-report FILEPATHINREPORT] \u7528\u4e8e\u9519\u8bef\u548c\u6700\u4f73\u5b9e\u8df5\u7684 Lint Dockerfile \u4ece\u9ed8\u8ba4\u7684\u5e2e\u52a9\u5c4f\u5e55\u5f00\u59cb\uff0c\u6211\u4eec\u53d7\u5230\u4e86\u4e00\u7cfb\u5217\u4e0d\u9519\u7684\u9009\u9879\u548c\u793a\u4f8b\u7684\u6b22\u8fce\uff1a\u68c0\u67e5\u6240\u9700\u7684\u9009\u9879\uff0c\u4ee5\u4e0d\u540c\u683c\u5f0f\u8f93\u51fa\u62a5\u544a\uff0c\u58f0\u660e\u4e00\u4e2a\u79c1\u4eba\u53ef\u4fe1\u6ce8\u518c\u8868\u7b49\u3002\u5728\u4f7f\u7528\u9009\u9879\u5e76\u627e\u5230\u6b63\u786e\u7684\u5e73\u8861\u4e4b\u540e\uff0c\u5bf9\u7ecf\u8fc7\u6d4b\u8bd5\u7684 Dockerfile \u8fdb\u884c\u5fc5\u8981\u7684\u4fee\u590d\u3002\u4e3a\u4e86\u6f14\u793a hadolint \u6709\u591a\u597d\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6765\u81ea Docker \u57fa\u7840\u955c\u50cf\u7684\u8fd9\u4e2a\u7b80\u5355\u547d\u4ee4\uff1a\nHadolint \u7136\u540e\u901a\u8fc7\u5f15\u7528\u786e\u5207\u7684\u884c\uff0c\u7ee7\u7eed\u4e3a\u60a8\u63d0\u4f9b\u5177\u6709\u4e25\u91cd\u7a0b\u5ea6\uff08\u4ece\u6837\u5f0f\u5230\u9519\u8bef\uff09\u7684\u5efa\u8bae\u5217\u8868\uff0c\u8fd9\u6709\u591a\u6574\u6d01\uff1f\u4f8b\u5982\uff1a-:16 DL4006 \u8b66\u544a\uff1a\u5728\u5e26\u6709\u7ba1\u9053\u7684 RUN \u4e4b\u524d\u8bbe\u7f6e SHELL \u9009\u9879 -o pipefail\u3002\u5982\u679c\u60a8\u5728 alpine \u6620\u50cf\u4e2d\u4f7f\u7528 /bin/sh\uff0c\u6216\u8005\u5982\u679c\u60a8\u7684 shell \u7b26\u53f7\u94fe\u63a5\u5230 busybox\uff0c\u5219\u8003\u8651\u5c06\u60a8\u7684 SHELL \u663e\u5f0f\u8bbe\u7f6e\u4e3a /bin/ash\uff0c\u6216\u7981\u7528\u6b64\u68c0\u67e5\uff1a17 DL3008 \u8b66\u544a\uff1aapt get install \u4e2d\u7684\u56fa\u5b9a\u7248\u672c\u3002\u4ee3\u66ff `apt-get install &lt;package&gt;` \u4f7f\u7528 `apt-get install &lt;package&gt;=&lt;version&gt;`-:17 DL3059 \u4fe1\u606f\uff1a\u591a\u4e2a\u8fde\u7eed\u7684 `RUN` \u6307\u4ee4\u3002\u8003\u8651\u5408\u5e76\u3002\u5b98\u65b9 repo wiki \u4e2d\u5f15\u7528\u548c\u89e3\u91ca\u4e86\u6240\u6709\u89c4\u5219\uff0c70 \u548c\u8ba1\u6570\u3002\u5b83\u4eec\u5305\u62ec\u975e\u5e38\u57fa\u672c\u7684\u68c0\u67e5\uff08\u201c\u4e0d\u8981\u4f7f\u7528 apt-get \u5347\u7ea7\u201d\uff09\u5230\u9ad8\u5ea6\u4e13\u4e1a\u5316\u7684\u7528\u4f8b\uff08\u201c\u7eb1\u7ebf\u5b89\u88c5\u8fd0\u884c\u540e\u7eb1\u7ebf\u7f13\u5b58\u6e05\u7406\u4e22\u5931\u201d\uff09\u3002\u5728\u8fd9\u4e2a\u7247\u6bb5\u4e2d\uff0c\u6211\u4eec\u544a\u8bc9 hadolint \u626b\u63cf\u6211\u4eec\u7684 Dockerfile\uff0c\u901a\u8fc7\u68c0\u67e5\u5f3a\u5236\u6027\u6807\u7b7e\u4f5c\u8005\uff0c\u9664\u4e86\u89c4\u5219 DL4006\uff0c\u6700\u540e\uff0c\u53ea\u6709\u5728\u53cd\u9988\u5305\u542b\u8b66\u544a\u65f6\u624d\u4f1a\u5931\u8d25\uff0c\u4ece\u800c\u5ffd\u7565\u6837\u5f0f\u548c\u4fe1\u606f\u7ea7\u522b\u3002\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u6700\u540e\u4e00\u70b9\uff0chadolint \u8fd8\u652f\u6301 Dockerfile \u5185\u7684\u5185\u8054 #ignore \u6ce8\u91ca\uff0c\u4ece\u800c\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5728\u4e00\u7ec4 Dockerfile \u4e0a\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u8fd9\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u7aef\u3002\u7a0d\u540e\uff0c\u5f53\u6211\u4eec\u51c6\u5907\u597d\u5e94\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u826f\u597d\u5b9e\u8df5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u964d\u4f4e\u8981\u6ce8\u610f\u7684\u9519\u8bef\u9608\u503c\u3002\u62e5\u6709\u540c\u65f6\u5728\u8bed\u6cd5\u4e0a\u6b63\u786e\u4e14\u9075\u5faa\u826f\u597d\u5b9e\u8df5\u7684 Docker \u955c\u50cf\u662f\u5f88\u68d2\u7684\u3002\u73b0\u5728\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u68c0\u67e5\u5185\u5bb9\u7684\u6709\u6548\u6027\u3002\u6bd5\u7adf\uff0cPaaS \u4ea7\u54c1\u5e94\u8be5\u6709\u4e00\u5957\u5e94\u7528\u7684\u5185\u90e8\u89c4\u5219\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u53e6\u4e00\u4e2a\u6f02\u4eae\u7684\u5de5\u5177\uff0cGoogle \u81ea\u5df1\u7684 container-structure-test\u3002\u5b83\u662f Github \u4e2d GoogleContainerTools \u547d\u540d\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u8fd8\u6258\u7ba1\u4e00\u4e9b\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u548c\u4f7f\u7528\u7684\u8457\u540d\u9879\u76ee\uff1aSkaffold\u3001distroless\u3001Jib \u548c Kaniko\u3002 Container-structure-test \u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u8bfb\u53d6\u6d4b\u8bd5\u5957\u4ef6\u5e76\u5bf9\u7167\u5b83\u4eec\u68c0\u67e5\u73b0\u6709\u7684 Docker \u955c\u50cf\u3002\u5b83\u6709\u4e00\u4e2a\u547d\u4ee4\uff1atest\uff08\u4f60\u671f\u671b\u4ec0\u4e48\uff1f\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0e hadolint \u4e0d\u540c\uff0c\u5176\u4e2d\u7eaf\u6587\u672c Dockerfile \u5c31\u8db3\u591f\u4e86\u3002 Container-structure-test \u9700\u8981\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5de5\u4ef6\uff1aDocker \u955c\u50cf\uff0c\u6216\u5bfc\u51fa\u4e3a .tar \u6587\u4ef6\u3002\u50cf hadolint \u4e00\u6837\uff0c\u6d4b\u8bd5\u662f\u7528\u7eaf YAML \u7f16\u5199\u7684\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e91\u751f\u6001\u7cfb\u7edf\u4e2d\u7b2c\u4e8c\u6709\u7528\u7684\u6280\u80fd\uff08\u4ec5\u6b21\u4e8e Git\uff0c\u5bf9\u5427\uff1f\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684 YAML \u58f0\u660e\u6027\u6d4b\u8bd5\u793a\u4f8b\uff1a schemaVersion: &#39;2.0.0&#39;metadataTest: labels: - key: &#39;vendor&#39; value: &#39;Artifakt&#39; - key: &#39;author&#39; value: &quot;^\\\\w+([-+ .&#39;]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$&quot; isRegex: true \u5377: [] \u5165\u53e3\u70b9: [ &quot;/usr/local/bin/docker-entrypoint.sh&quot;]fileExistenceTests:- name: &#39;bash&#39; path: &#39;/bin/bash&#39; shouldExist: true \u6743\u9650: &#39;-rwxr-xr-x&#39; uid: 0 gid: 0 isExecutableBy: &#39;any&#39;commandTests: - name: &quot;debian based server&quot; command: &quot;which&quot; args: [ &quot;apt-get&quot;] expectedOutput: [&#39;/usr/bin/apt-get&#39;] \u5728\u8fd9\u4e2a\u5757\u4e2d\uff0c\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u5143\u6570\u636e\u3001\u6587\u4ef6\u548c\u547d\u4ee4\u7ed3\u679c\u7684\u56fe\u50cf\uff0c\u5206\u522b\u7531\u4e09\u4e2a\u4e3b\u8981\u952e metadataTest\u3001fileExistenceTests \u548c commandTests \u5b9a\u4e49\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u5bb9\u5668\u7ed3\u6784\u6d4b\u8bd5\u9700\u8981\u9884\u5148\u5b58\u5728\u7684\u6784\u5efa\u6b65\u9aa4\uff1f\u56e0\u4e3a\uff0c\u5728\u5e55\u540e\uff0c\u5b83\u5728\u5b9e\u65f6\u5bb9\u5668\u4e0a\u4f7f\u7528 docker exec \u547d\u4ee4\u6765\u8fd0\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u6d4b\u8bd5\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u662f\u9694\u79bb\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bb9\u5668\u53ea\u8fd0\u884c\u4e00\u4e2a\u6d4b\u8bd5\u3002\u5f53\u60a8\u4f7f\u7528 --save \u9009\u9879\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u4fdd\u7559\u5bb9\u5668\u65f6\uff0c\u6b64\u884c\u4e3a\u5f88\u5bb9\u6613\u770b\u5230\u3002\u8ba9\u6211\u4eec\u5728\u6211\u4eec\u7684\u5b98\u65b9\u955c\u50cf\u4e4b\u4e00\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u6d4b\u8bd5\uff1a caae8bd3159c 678b262bc2d6 &quot;NOOP_COMMAND_DO_NOT...&quot; 2 \u5206\u949f\u524d\u521b\u5efa\u4e86\u5b9e\u7528_einstein3b63b4f5fcd1 registry.artifakt.io/sylius:1.10-apache&quot;NOOP_262bc2d6 &quot;NOOP_COMMAND_DO_NOT...&quot; 2 \u5206\u949f\u524d\u9000\u51fa (0) 2 \u5206\u949f\u524d bold_tesla6e87be191af3 registry.artifakt.io/sylius:1.10-apache &quot;NOOP_COMMAND_DO_NOT...&quot; 2 \u5206\u949f\u524d\u521b\u5efa\u4e86angered_bouman\n\u5f53\u60a8\u60f3\u4f7f\u7528 docker \u65e5\u5fd7\u6216 docker diff \u68c0\u67e5\u4fdd\u5b58\u7684\u5bb9\u5668\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u53d7\u5230\u5f71\u54cd\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7f16\u5199\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u5bb9\u5668\u8db3\u591f\u65e0\u72b6\u6001\u6216\u4e0d\u4f1a\u6cc4\u6f0f\u610f\u5916\u6587\u4ef6\uff0c\u6216\u5bf9\u6d3b\u52a8\u5bb9\u5668\u8fdb\u884c\u4efb\u4f55\u5176\u4ed6\u8bc4\u4f30\u3002\u6b63\u5982\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u793a\u4f8b\u4e2d\u5df2\u7ecf\u63d0\u5230\u7684\uff0ccontainer-structure-test \u8bc4\u4f30\u4e86 3 \u7c7b\u5f00\u7bb1\u5373\u7528\u7684\u68c0\u67e5\uff1a\u56fe\u50cf\u5143\u6570\u636e\uff08\u6807\u7b7e\u3001\u5377\u3001\u5165\u53e3\u70b9\u7b49\uff09\u3001\u6587\u4ef6\u5b58\u5728\uff0c\u7136\u540e\u662f\u4efb\u610f\u547d\u4ee4\u7ed3\u679c\u3002\u9664\u4e86\u6d4b\u8bd5\u5b58\u5728\u6027\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u7f16\u5199\u6d4b\u8bd5\u6765\u68c0\u67e5\u6700\u7ec8 Docker \u6620\u50cf\u4e2d\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u5185\u5bb9\u3002\u60f3\u60f3\u53ef\u80fd\u5b58\u5728\u4e14\u5728\u751f\u4ea7\u4e2d\u7edd\u5bf9\u4e0d\u53d7\u6b22\u8fce\u7684\u5f00\u53d1\u5305\u3001\u7f16\u8bd1\u5668\u3001\u5de5\u5177\u3002\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\u6700\u540e\uff0c\u53e6\u4e00\u4e2a\u6709\u7528\u7684\u9009\u9879\u662f\u5c06 setup \u5173\u952e\u5b57\u4e0e\u6d4b\u8bd5\u547d\u4ee4\u7ed3\u5408\u4f7f\u7528\u3002\u6709\u4e9b\u6d4b\u8bd5\u53ea\u6709\u5728 Docker \u5165\u53e3\u70b9\u8fd0\u884c\u540e\u624d\u6709\u610f\u4e49\u3002\u6211\u4eec\u4e3a\u6b64\u4f7f\u7528\u8bbe\u7f6e\u5bc6\u94a5\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff1a - \u540d\u79f0\uff1a\u201c\u68c0\u67e5\u5df2\u5b89\u88c5\u7684\u6587\u4ef6\u5939\u79c1\u6709\u201d\u8bbe\u7f6e\uff1a[[\u201c/usr/local/bin/docker-entrypoint.sh\u201d]] \u547d\u4ee4\uff1a\u201cls\u201d\u53c2\u6570\uff1a[\u201c-la\u201d\uff0c\u201c/opt\u201d /drupal/web/sites/default/private&quot;] \u9884\u671f\u8f93\u51fa\uff1a[ &#39;lrwxrwxrwx 1 www-data www-data .+ /opt/drupal/web/sites/default/private -&gt; /data/web/sites/default/private &#39; ] \u5b98\u65b9\u6587\u6863\u548c\u9ad8\u7ea7\u6848\u4f8b\u4e2d\u8fd8\u6709\u66f4\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u6d4b\u8bd5\u5b88\u62a4\u7a0b\u5e8f\uff08\u54ce\u5440\uff01\uff09\uff0c\u6240\u4ee5\u6211\u9f13\u52b1\u60a8\u6df1\u5165\u7814\u7a76\u5b83\u3002\u5728\u5bb9\u5668\u5316\u7684\u9053\u8def\u4e0a\u6ca1\u6709\u9884\u6599\u5230\u8bb8\u591a\u6311\u6218\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u5206\u4eab\u5176\u4e2d\u7684\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6211\u4eec\u83b7\u5f97\u4e86\u5b9d\u8d35\u7684\u89c1\u89e3\u3002\n\u6211\u4eec\u6700\u5b8c\u6574\u7684\u8fd0\u884c\u65f6 Magento 2 \u548c Akeneo \u662f cron \u4f5c\u4e1a\u7684\u91cd\u5ea6\u7528\u6237\uff1a\u7d22\u5f15\u3001\u7f13\u5b58\u3001\u56fe\u50cf\u5927\u5c0f\u8c03\u6574\u3001\u5bfc\u5165/\u5bfc\u51fa\uff0c\u5e94\u6709\u5c3d\u6709\u3002 Docker \u5982\u4f55\u5904\u7406\u5f02\u6b65\u95f4\u6b47\u6027\u8fdb\u7a0b\uff1f\u5176\u5b9e\u4e0d\u597d\u5728 Docker 101 \u4e2d\u4f17\u6240\u5468\u77e5\uff0c\u4e0d\u5e94\u5728\u4e0e\u4e3b\u8fdb\u7a0b\u76f8\u540c\u7684\u5bb9\u5668\u4e2d\u8fd0\u884c cron\u3002\u9996\u5148\uff0cDocker \u53ea\u662f\u5347\u7ea7\u4e86\u4ed6\u4eec\u7684 Swarm \u7f16\u6392\u5c42\u6765\u8fd0\u884c cron \u4f5c\u4e1a\uff0c\u5c31\u50cf Kubernetes \u4e00\u6837\u3002\u8fd9\u53ef\u884c\uff0c\u4f46 Swarm \u4e0d\u5728\u6211\u4eec\u6700\u521d\u7684\u8def\u7ebf\u56fe\u4e0a\u3002\u5176\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8282\u70b9\u7ea7\u522b\u4f7f\u7528 cron \u5b88\u62a4\u7a0b\u5e8f\u4e3a\u6bcf\u4e2a cron \u4f5c\u4e1a\u8fd0\u884c\u989d\u5916\u7684\u5bb9\u5668\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u5176\u4f18\u70b9\u548c\u7f3a\u70b9\u3002\u53d7\u65f6\u95f4\u548c\u65e5\u7a0b\u7684\u9650\u5236\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u52a0\u5feb\u6b65\u4f10\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u5c06 crontab \u4fdd\u7559\u5728\u8282\u70b9\u7ea7\u522b\uff0c\u5e76\u4f7f\u7528 docker exec \u5c06\u547d\u4ee4\u8fd0\u884c\u5230\u5b9e\u65f6\u5bb9\u5668\u4e2d\u3002\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\uff0c\u6240\u4ee5\u73b0\u5728\u662f\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u9009\u62e9\u4e86\u6700\u540e\u4e00\u4e2a\u9009\u9879\uff0c\u7ed3\u679c\u7b80\u5355\u3001\u4f18\u96c5\uff0c\u5e76\u4e14\u5c0a\u91cd\u6211\u4eec\u70ed\u7231\u7684 Linux \u7cbe\u795e\u3002\u4ee5\u4e0b\u662f\u5c06 cron \u4f5c\u4e1a\u6ce8\u5165\u5b9e\u65f6\u5bb9\u5668\u7684\u4e09\u4e2a\u7b80\u5355\u6b65\u9aa4\uff1a \u7f16\u5199 docker exec \u5305\u88c5\u5668\uff0c\u5176\u4e2d 2 \u884c\u4ee3\u7801\u8db3\u4ee5\u5b9a\u4f4d &lt;cID&gt; \u5bb9\u5668\u3002\n2021-07-28T13:55:02.338665047Z \u5bb9\u5668 exec_create: sh -c uptime &gt; /tmp/uptime.txt a360afb6e (artifakt.io/image=616787838396.dkr.ecr.eu-west.com.com/ execID = 8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e\uff0c\u56fe\u50cf= 616787838396.dkr.ecr.eu-west-1.amazonaws.com / sylius\uff1a1.10\uff0c\u5356\u4e3b= Artifakt\uff092021-07-28T13\uff1a55\uff1a02.339417333Z\u5bb9\u5668exec_start\uff1aSH -c\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4&gt;\u7684/ tmp /uptime.txt a360afb6e\uff08artifakt.io/image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius\uff0cexecID = 8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e\uff0c\u56fe\u50cf= 616787838396.dkr.ecr.eu-\u897f1.amazonaws\u3002 com/sylius:1.10, vendor=Artifakt)2021-07-28T13:55:02.822814763Z \u5bb9\u5668 exec_die a360afb6e (artifakt.io/image=616787838396.dkr.ecr.eu-awyls.com=exec_die a360afb6e 8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e\uff0cexitCode=0\uff0cimage=616787838396.dkr.ecr.eu-west.com=\u8fd9\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u6267\u884c\u73af\u5883w.ifs1awyts.com.ifsamazon-1\u3002\u5c06\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u4fdd\u6301\u5728\u4e00\u4e2a\u5bb9\u5668\u5185\uff0c\u786e\u4fdd\u6574\u4f53\u7a33\u5b9a\u6027\u3002\u597d\u5427\uff0c\u79fb\u9664\u4e00\u4e2a\u5de5\u4f5c\u591a\u5e74\u7684\u9057\u7559\u5c42\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6240\u4ee5\uff0c\u8001\u5b9e\u8bf4\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u5b8c\u5168\u6210\u529f\u3002\u7136\u800c\uff0c\u6211\u4eec\u5c3d\u4e86\u6700\u5927\u52aa\u529b\uff0c\u8bbe\u6cd5\u4f7f\u8fd9\u4e00\u5c42\u5c3d\u53ef\u80fd\u65e0\u804a\u548c\u65e0\u5173\u7d27\u8981\u3002\u4ece OpsWorks \u5230 Docker \u7684\u8f6c\u53d8\u9700\u8981\u5c06\u5e73\u53f0\u89c4\u5219\u4ece\u8bf4\u660e\u4e66\u4e2d\u79fb\u5230 docker-compose YAML \u548c bash \u811a\u672c\u4e2d\u3002\u7ed3\u679c\u662f\u6211\u4eec\u6240\u6709\u90e8\u7f72\u7684\u552f\u4e00\u5206\u652f\u3002\u5feb\u8fdb\u5230\u6570\u5341\u6b21\u63d0\u4ea4\uff0c\u7ecf\u8fc7\u591a\u6b21\u8bd5\u9a8c\u548c\u9519\u8bef\u4e4b\u540e\uff0cOpsWorks \u73b0\u5728\u6240\u505a\u7684\u5c31\u662f\u5b89\u88c5 Docker \u5f15\u64ce\u548c\u4e00\u4e9b\u5bb9\u5668\u4f9d\u8d56\u9879\u3002\u5176\u4ed6\u4e00\u5207\u90fd\u7531 Docker API \u64cd\u4f5c\uff0c\u7531\u666e\u901a\u7684\u65e7 OpsWorks \u4f5c\u4e1a\u89e6\u53d1\uff0c\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u53ef\u9884\u6d4b\u3002\u5f53\u6211\u4eec\u63a5\u8fd1\u53d1\u5e03\u65f6\u95f4\u65f6\uff0c\u6211\u4eec\u7684 CEO \u770b\u4e86\u6211\u4eec\u7684\u6f14\u793a\u5e76\u8bf4\uff1a\u201c\u563f\uff0c\u5982\u679c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528 HTTPS \u5728\u672c\u5730\u8fd0\u884c\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u201d\u3002\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u7acb\u5373\u610f\u8bc6\u5230\u4e86\u8fd9\u4e2a\u673a\u4f1a\u3002\n\u5de5\u4f5c\u7ad9\u79bb\u751f\u4ea7\u8d8a\u8fd1\uff0c\u6211\u4eec\u53d1\u9001\u7684\u9519\u8bef\u5c31\u8d8a\u5c11\u3002\u8fd9\u662f\u8868\u8fbe 12 \u8981\u7d20\u5e94\u7528\u7a0b\u5e8f\u7b2c 10 \u7ae0\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a\u201cdev/prod parity\u201d \u8fd9\u662f\u6211\u4eec\u5982\u4f55\u505a\u5230\u7684\u3002\u53ea\u9700\u8981\u4e24\u4e2a\u989d\u5916\u7684\u7ec4\u4ef6\uff08\u5bb9\u5668\uff01\uff09\uff1aNginx-proxy \u548c Cert \u4f34\u4fa3\u3002\u6211\u4eec\u7528\u5b83\u4eec\u4fee\u8865\u4e86\u539f\u59cb\u7684 docker-compose.yaml\uff0c\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\u4fee\u6539\uff1a\u7248\u672c\uff1a&#39;3&#39;\u670d\u52a1\uff1a\u4ee3\u7406\uff1a\u56fe\u50cf\uff1ajwilder/nginx-proxy container_name\uff1abase-wordpress-proxy restart\uff1aalways ports\uff1a-\u201c 8000:80&quot; - &quot;8443:443&quot; \u5377\uff1a - /var/run/docker.sock:/tmp/docker.sock:ro - ./certs:/etc/nginx/certs proxy-companion: image: nginx-proxy -companion:latest restart: always environment: - &quot;NGINX_PROXY_CONTAINER=base-wordpress-proxy&quot; \u5377: - /var/run/docker.sock:/var/run/docker.sock:ro - ./certs:/etc/nginx /certs \u6700\u540e\uff0c\u91cd\u8981\u7684\u662f\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\u8fd8\u6709\u4e24\u4e2a\u73af\u5883\u3002\u53d8\u91cf\u4f7f\u8fd9\u4e2a\u8bbe\u7f6e\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u50cf\u8fd9\u6837\u6dfb\u52a0\u5b83\u4eec\uff1a\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0cnginx \u4f34\u4fa3\u4f1a\u67e5\u627e ca.cert \u5e76\u5728\u8fd0\u884c\u65f6\u4e3a\u60a8\u751f\u6210\u5b83\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\u3002\u7136\u540e\u6211\u4eec\u5fc5\u987b\u544a\u8bc9\u6d4f\u89c8\u5668\u50cf\u4efb\u4f55\u5176\u4ed6 CA \u4e00\u6837\u4fe1\u4efb\u8fd9\u4e2a ca.cert\u3002\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4ecd\u7136\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u3002\u6211\u4eec\u5c1d\u8bd5\u4e86\uff0c\u73af\u987e\u56db\u5468\uff0c\u5e76\u6446\u5f04\u7740 Let&#39;s Encrypt \u2014 \u6ca1\u6709\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u662f\u5f00\u7bb1\u5373\u7528\u7684\u3002\u60a8\u4e0d\u80fd\u4f7f\u7528 Let&#39;s Encrypt \u4f5c\u4e3a CA \u6765\u63d0\u4f9b\u672c\u5730\u4e3b\u673a\u8bc1\u4e66\u3002\u6700\u540e\uff0c\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\uff0c\u901a\u5e38\u4f1a\u5f04\u4e71\u672c\u5730\u6839\u8bc1\u4e66\u3002\u8fd9\u662f\u6211\u4eec\u627e\u5230\u7684\u5f00\u53d1\u4eba\u5458\u5b89\u88c5\u672c\u5730\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u4e00\u6b21\u5e76\u5728\u6240\u6709\u672c\u5730\u5f00\u53d1\u5806\u6808\u4e0a\u4f7f\u7528\u7684\u6700\u77ed\u8def\u5f84\u3002\u8bf7\u6ce8\u610f\uff0c\u4ee5\u4e0b\u6b65\u9aa4\u4ec5\u9002\u7528\u4e8e Google Chrome\u3002\n\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u597d\u7684\u5e73\u53f0\u53d8\u5f97\u66f4\u597d\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u6b63\u5728\u8003\u8651\u7684\u540e\u7eed\u6b65\u9aa4\u3002\u6570\u636e\u5f88\u96be\uff0c\u6211\u4eec\u4e25\u91cd\u4f9d\u8d56 AWS \u6301\u4e45\u6570\u636e\u3002\u8fd9\u5df2\u7ecf\u4e3a\u5f39\u6027\u548c\u53ef\u6269\u5c55\u6027\u521b\u9020\u4e86\u5947\u8ff9\u3002\u6211\u4eec\u7684\u5ba2\u6237\u9700\u8981\u4ed6\u4eec\u7684\u6570\u636e\u5b89\u5168\u548c\u5173\u95ed\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f00\u53d1\u4eba\u5458\u66f4\u559c\u6b22\u4fbf\u5229\u6027\u548c\u6613\u7528\u6027\u3002\u7531\u4e8e\u901f\u5ea6\u662f\u4e00\u79cd\u7ade\u4e89\u4f18\u52bf\uff0c\u6211\u4eec\u6b63\u5728\u671d\u7740\u66f4\u5feb\u7684\u90e8\u7f72\u8fc8\u8fdb\u3002 Docker \u955c\u50cf c ......", "note_en": "A couple of weeks back,  we announced our latest product release and the new any-app capabilities of the Artifakt platform, powered by container technology and Docker.\n For the last couple of years, Artifakt has been focusing on PHP stacks. But PHP is not the only language for web applications out there. With the new Docker integration, we have big plans ahead!\n Rebasing our PaaS on the defacto standard for application packaging is great news for developer teams of all shapes and sizes.\n You will find many perks in this release, it has never been a better time to come onboard a container-friendly PaaS\u2014infrastructure as code, changes traceability, runtime performance, customer value. Not to mention that Docker is best friends with core DevOps principles of agility, antifragility, and time-to-market.\n But all journeys, no matter the delightful outcome, often come with struggles. In this article, I want to dive into the challenges we faced during our Docker migration and the lessons we learned.\n If you are looking to migrate to containers, have a read\u2014I\u2019m sure you\u2019ll find at least one point to relate to and maybe the way we approached certain issues and challenges helps you avoid potential mistakes.\n  PaaS solutions are very convenient. I\u2019m sure anyone migrating its app from on-prem or IaaS will agree.\n Part of this convenience level is the use of Virtual Machines (VM). Nice piece of software, very solid abstraction, secure and mature for decades now. No one can do without them nowadays, so they are quite necessary. Nonetheless, this is just not enough.\n The dark side of VMs is they tend to grow as personal pets. The need for daily maintenance, regular support, and occasional life support calls for serious fixed costs, as well as human assistance.\n Now, for the bitter reality: VMs are not adapted to cloud infrastructure anymore. Current conditions are harsh on them, strict regulations may apply, and while the tech landscape evolves constantly, VMs are still built on the same principles as 20 years ago.\n  You should always keep in mind all scenarios that can go wrong and prepare. Let\u2019s have a look at just a couple of things that could go wrong in a container migration.\n  We have heard it before, speed is the mother of all battles. Not only in strategy but from ideation and down to execution as well. Change needs to happen fast, keeping up with the fast evolution of the ecosystem. As Jack Welch, former CEO of G.E said:\n  It is not the big eating the small, but rather the fast eating the slow. A good idea with slow execution means the death penalty. Bad ideas with good execution mean you can still pivot and experiment and close down on a winning market fit.\n  Raise your hand if you have never heard \u201cBut\u2026 It works on my laptop!\u201d in a software project\u2014I doubt I\u2019ll see many hands raised. Sure, we have infrastructure as code, continuous integration, and all the modern machinery. Don\u2019t get me wrong, there are local optimizations created inside silos, and they are useful. The real deal though is to break silos and take the team to a maturity level high enough, so that \u201cthey build it, they run it\u201d.\n We don\u2019t want the PaaS to be the new \u201cOps problem now\u201d and say \u201csupport problem now\u201d. Remember the \u201cdisaster girl\u201d meme? That\u2019s a silo syndrome gone wrong! And BlackOps is even more dangerous, you don\u2019t want the dev team to run containers themselves and  poke holes in your firewall.\n   Containers are the answer to all the challenges mentioned above\u2014a mature, even boring, standard of software packaging. But it was not always like that.\n Back in the 20th century, globalization was possible by one really concrete material change: a universal box to move cars, food, etc. This only enabled \u201cinter-modal transportation\u201d as we know it today.\n  Since 2014, software containers rapidly matured in a de facto solution under the flag of Docker Inc. with a simple yet working promise:\n \u201cWhatever is the underlying executing system, Docker can run it with the exact same code, byte by byte.\u201d\n  Containers have been running under the hood for many months now at Artifakt\u2014even for stateful stuff, dare we say. We now run different configuration changes in a matter of seconds, instead of 10 to 30 minutes of VM provisioning.\n With our next major console version, Artifakt moves to expose containers as units of deployments.\n  You can imagine the groundbreaking effect the Docker migration had on our daily work routine. Orchestrating VMs required strong coupling with our cloud provider on somewhat proprietary technologies. For AWS, it was CloudFormation and OpsWorks. We spent many hours ingesting layers of cloud complexity so that our beloved customers would not have to.\n As a result, the magnificent rewrite has us with open source and open formats: Dockerfile,  docker-compose.yaml, and the stable Docker API.\n How about running the exact same Magento 2 stack on the laptop and taking it to production? This is now possible in Artifakt.\n Magento 2 is part of the nine runtimes we officially support since our  Stack v5 release earlier in July. In many ways, this release focused all challenges in one place:\n  Let\u2019s take a look at how we overcome these challenges and where this leaves us.\n  The journey begins with the classic Docker goodness. We were already sold on the benefits of containerization in PaaS environments. Some aspects are really a no-brainer to implement. Maturity is high enough, the ecosystem is thriving, and cloud providers have already been paving the way for a couple of years now.\n We cannot go through all the quick wins and many would be straight-up boring in 2021, so let me focus on the most enlightening.\n  Argo Workflows is a wonderful tool to implement reactive GitOps pipelines. That\u2019s a mouthful, so let\u2019s break it down first. GitOps gives teams the ability to conduct and execute changes from Git, and not only code changes. We are talking about infrastructure, networking, storage, etc. Every piece of the machinery ever created, upgraded, or decommissioned can be linked back to a Git commit.\n Feeling excited? We know we are! Our workflows are nicely tucked inside Argo and run our base operations like deployment jobs for many different stacks and languages.\n Everyone inside our organization has access to past workflows and their logs, making troubleshooting a breeze. Instead of logs being fragmented in many layers of complexity, we now benefit from a shared stand where the Customer Support and Engineering teams can help customers measure and optimize their processes.\n In the future, we are also looking forward to trying Argo CD and the many opportunities it offers for a PaaS product like Artifakt.\n  Turns out there are many ways to go wrong with Docker images. As automated tests are a good practice in code, the same principle applies to Dockerfiles. Official documentation already ensures the correctness of Dockerfiles: all commands should return 0 or else the build will fail.\n What we need here is to add two more dimensions: validity and content. Validity ensures we have the right style in writing Dockerfiles and content checks on semantics.\n Could we do it all with only native Dockerfile instructions? Almost, but even then it would result in bloated images with many non-production layers, and then enters the multi-stage builds, etc.\n In other words, if the build succeeds, it must now onboard the correct software in the right amount and number.\n So, we chose to follow the principle of separation of concerns and draw a line between testing, validation, and semantic checks.\n For simple syntax linting, we went with  hadolint, a specific linter for Dockerfiles\u2014it is powerful enough yet gentle to onboard, integrates nicely with CI/CD, and is actively maintained. Of course, it lives in a Docker image itself! Let\u2019s take a peek at basic options:\n hadolint - Dockerfile Linter written in HaskellUsage: hadolint [-v|--version] [--no-fail] [--no-color] [-c|--config FILENAME] \t[-V|--verbose] [-f|--format ARG] [DOCKERFILE...] \t[--error RULECODE] [--warning RULECODE] [--info RULECODE] \t[--style RULECODE] [--ignore RULECODE] \t[--trusted-registry REGISTRY (e.g. docker.io)] \t[--require-label LABELSCHEMA (e.g. maintainer:text)] \t[--strict-labels] [-t|--failure-threshold THRESHOLD] \t[--file-path-in-report FILEPATHINREPORT] Lint Dockerfile for errors and best practices\n Right from the default help screen, we are welcomed with a bunch of nice options and examples: check required options, output report in a different format, declare a private trusted registry, etc.\n  After playing with options and finding the right balance, make the necessary fixes to tested Dockerfiles.\n To demonstrate how nice  hadolint is, let\u2019s take a look at this simple command from our Docker base images:\n  Hadolint then proceeds to give you a list of recommendations with a level of severity (from  style to  error), by referencing the exact line, how neat is this? For instance:\n -:16 DL4006 warning: Set the SHELL option -o pipefail before RUN with a pipe in it. If you are using /bin/sh in an alpine image or if your shell is symlinked to busybox then consider explicitly setting your SHELL to /bin/ash, or disable this check-:17 DL3008 warning: Pin versions in apt get install. Instead of `apt-get install &lt;package&gt;` use `apt-get install &lt;package&gt;=&lt;version&gt;`-:17 DL3059 info: Multiple consecutive `RUN` instructions. Consider consolidation.\n All rules, 70 and counting, are referenced and explained in the official  repo wiki. They include very basic checks (\u201cdo not use  apt-get upgrade\u201d) to highly specialized use cases (\u201cyarn cache clean missing after yarn install was run\u201d).\n   In this snippet, we tell  hadolint to scan our Dockerfile, by checking a mandatory label  author, except for rule DL4006, and, finally, only fail if feedback contains warnings, thus ignoring  style and  info level.\n One last bit for developers,  hadolint also supports inline  #ignore annotations inside a Dockerfile, making it easier to use the same command on a group of Dockerfiles.\n All in all, and to draw a conclusion, this gives us a nice start in testing. Later on, when we feel ready to apply a higher level of good practices we can decrease the error threshold to  notice.\n Having Docker images that are at the same time syntactically correct and following good practices is great. Now, we also needed to check for validity in content. After all, a PaaS product is expected to have a set of internal rules that are applied.\n For this, we use another nifty tool, Google\u2019s own  container-structure-test. It\u2019s part of the GoogleContainerTools namespace in Github, which also hosts some famous projects you may already know and use: Skaffold, distroless, Jib, and Kaniko.\n Container-structure-test is an open source project that reads a test suite and checks an existing Docker image against them. It has one command:  test (what did you expect?). Note that this differs from  hadolint where a plain text Dockerfile was enough. Container-structure-test needs a binary artifact: the Docker image, or an export as a .tar file. Like  hadolint, tests are written in plain YAML, which seems to be the second most useful skill in the cloud ecosystem (just behind Git, right?). Here is an interesting sample of declarative tests in YAML:\n schemaVersion: &#39;2.0.0&#39;metadataTest: labels:\t- key: &#39;vendor&#39; \tvalue: &#39;Artifakt&#39;\t- key: &#39;author&#39; \tvalue: &#34;^\\\\w+([-+.&#39;]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$&#34; \tisRegex: true volumes: [] entrypoint: [&#34;/usr/local/bin/docker-entrypoint.sh&#34;]fileExistenceTests:- name: &#39;bash&#39; path: &#39;/bin/bash&#39; shouldExist: true permissions: &#39;-rwxr-xr-x&#39; uid: 0 gid: 0 isExecutableBy: &#39;any&#39;commandTests: - name: &#34;debian based server&#34;\tcommand: &#34;which&#34;\targs: [ &#34;apt-get&#34;]\texpectedOutput: [&#39;/usr/bin/apt-get&#39;]\n In this block, we tested an image for metadata, files ,and command results, respectively defined by the three main keys  metadataTest,  fileExistenceTests, and  commandTests.\n But why does the container-structure-test expect a pre-existing build step? Because, under the hood, it uses  docker exec commands on live containers to run each test. The cherry on top is that tests are also guaranteed to be isolated because one container runs only one test.\n This behavior is easily visible when you run tests with the  --save option to keep the containers. Let\u2019s run the following test on one of our official images:\n   caae8bd3159c \t678b262bc2d6 \t&#34;NOOP_COMMAND_DO_NOT\u2026&#34; 2 minutes ago \tCreated \tpractical_einstein3b63b4f5fcd1 \tregistry.artifakt.io/sylius:1.10-apache &#34;NOOP_COMMAND_DO_NOT\u2026&#34; 2 minutes ago \tCreated \tadmiring_solomon44497e1d88cf \td10ef6baba46 \t&#34;which apt-get&#34; \t2 minutes ago \tExited (0) 2 minutes ago \tbold_tesla6e87be191af3 \tregistry.artifakt.io/sylius:1.10-apache &#34;NOOP_COMMAND_DO_NOT\u2026&#34; 2 minutes ago \tCreated \tangry_bouman\n This is really useful when you want to inspect saved containers and how they were impacted, either with  docker logs or  docker diff. Using this last command, we can easily write a test to ensure our container is stateless enough or does not leak unexpected files, or any other assessment on a live container.\n As we already mentioned in the first example, container-structure-test assesses 3 classes of checks out of the box: image metadata (labels, volumes, entrypoints, etc), file presences, and then arbitrary command results.\n On top of testing for presence, we also write tests to check for what we don\u2019t want in the final Docker image. Think of development packages, compilers, tooling that could lie around and are definitely not welcome in production. One way to prevent this would be like this:\n  Finally, another useful option is to use the  setup keyword in conjunction with test commands. Some tests only make sense after the Docker entrypoint has been running. We use the  setup key for this. See the sample below:\n - name: &#34;check mounted folder private&#34;\tsetup: [[&#34;/usr/local/bin/docker-entrypoint.sh&#34;]]\tcommand: &#34;ls&#34;\targs: [ &#34;-la&#34;, &#34;/opt/drupal/web/sites/default/private&#34;]\texpectedOutput: [ &#39;lrwxrwxrwx 1 www-data www-data .+ /opt/drupal/web/sites/default/private -&gt; /data/web/sites/default/private&#39; ]\n There are many more features in the official docs and advanced cases like testing daemons (yikes!), so I encourage you to dive into it.\n  Many challenges were not expected along the road of containerization, so we must share a few of them, as we gained valuable insights.\n  Our most complete runtimes, Magento 2 and Akeneo, are heavy users of cron jobs: indexing, caching, image resizing, import/export, you name it.\n How does Docker handle asynchronous intermittent processes? Not good, actually. It is well known in Docker 101 that  thou shall not run cron in the same container as the main process.\n   First, Docker just upgraded their Swarm orchestration layer to run cron jobs, just like Kubernetes. That could work, but Swarm was not on our initial roadmap.\n Secondly, we could run additional containers for each cron job, using a cron daemon at the node level. This method has its pros and cons. Being constrained by time and schedule, we had to move faster.\n Lastly, we could declare keep the crontab on the node level, and run the commands into the live container using  docker exec. This could work because we still run one application container per server, so that makes sense for now.\n We went for the last option, and the result was simple, elegant, and respectful of the Linux spirit we love. Here are the three simple steps to inject cron jobs into a live container:\n  Write a  docker exec wrapper, where really 2 lines are enough to target the   &lt;cID&gt; container.\n        2021-07-28T13:55:02.338665047Z container exec_create: sh -c uptime &gt; /tmp/uptime.txt a360afb6e (artifakt.io/image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius, execID=8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e, image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius:1.10, vendor=Artifakt)2021-07-28T13:55:02.339417333Z container exec_start: sh -c uptime &gt; /tmp/uptime.txt a360afb6e (artifakt.io/image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius, execID=8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e, image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius:1.10, vendor=Artifakt)2021-07-28T13:55:02.822814763Z container exec_die a360afb6e (artifakt.io/image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius, execID=8b14a4e96eb5175c74b689260e1b692af34f22260e9572fbd2bb2c2b663a3c1e, exitCode=0, image=616787838396.dkr.ecr.eu-west-1.amazonaws.com/sylius:1.10, vendor=Artifakt)\n This approach maintains the exact same execution environment while keeping the resource usage inside one container, ensuring overall stability.\n  Well, removing a legacy layer that worked for years is close to impossible. So, to be perfectly honest, we did not totally succeed. However, we tried our best and managed to make this layer as boring and irrelevant as possible.\n The shift from OpsWorks to Docker required moving platform rules out of cookbooks and into docker-compose YAML and bash scripts. The result is a unique branch for all our deployments.\n Fast forward to dozens of commits and after many trials and errors, all OpsWorks does now is to install the Docker Engine and a handful of container dependencies.\n Everything else is operated by Docker API, triggered by plain old OpsWorks jobs, that are more predictable than ever.\n   As we approached release time, our CEO looked at our demos and said, \u201cHey it would be nice if developers could run their apps locally with HTTPS\u201d. As developers ourselves, everyone on the team immediately understood the opportunity.\n The closer the workstation is to production, the fewer bugs we send. This is another way to express  chapter 10 of  12-factor apps: \u201cdev/prod parity\u201d\n Here is how we did it. Only two additional components (containers!) were required:  Nginx-proxy and  Cert companion. We patched the original  docker-compose.yaml with them, with no code modifications other than this:\n version: &#39;3&#39;services: proxy:\timage: jwilder/nginx-proxy\tcontainer_name: base-wordpress-proxy\trestart: always\tports: \t - &#34;8000:80&#34; \t - &#34;8443:443&#34;\tvolumes: \t - /var/run/docker.sock:/tmp/docker.sock:ro \t - ./certs:/etc/nginx/certs proxy-companion:\timage: nginx-proxy-companion:latest\trestart: always\tenvironment: \t - &#34;NGINX_PROXY_CONTAINER=base-wordpress-proxy&#34;\tvolumes: \t - /var/run/docker.sock:/var/run/docker.sock:ro \t - ./certs:/etc/nginx/certs\n Finally, it is important that our application container has two more  env. variables for this setup to work, so we added them like this:\n  On the first run, the  nginx companion looks for a  ca.cert and generates it for you on the fly, if it does not exist. We then have to tell browsers to trust this  ca.cert as any other CA. Sadly this still requires a manual setup.\n We tried, looked around, and fiddled with Let\u2019s Encrypt\u2014no solutions were working out of the box. You  cannot use Let\u2019s Encrypt as a CA to provide localhost certs.\n Finally, some extra steps were required, usually messing with local root certificates. Here is the shortest path we found for developers to install local certificate authority once and use it on all local development stacks. Note that the following steps work only on Google Chrome.\n    We still have many ways to make a good platform even better. Here are the next steps we are considering.\n  Data is hard, and we heavily rely on AWS persistent data. This already  works wonders for resiliency and scalability. Our customers need their data safe and close. Developers, on the other hand, favor convenience and ease of use.\n  As speed is a competitive advantage, we are making great strides toward faster deployments. Docker images c\n......", "posttime": "2021-07-30 20:46:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fc1\u79fb,migrated,docker", "title": "\u6211\u4eec\u8fc1\u79fb\u5230\u5bb9\u5668\u3002\u8fd8\u4e0d\u662f\u4e00\u5e06\u98ce\u987a", "title_en": "We migrated to containers. Not a smooth ride yet", "transed": 1, "url": "https://www.artifakt.com/blog/cloud/documenting-our-migration-to-docker/", "via": "", "real_tags": ["\u8fc1\u79fb", "migrated", "docker"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070618, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u662f\u5426\u66fe\u7ecf\u4e22\u5931\u8fc7\u91cd\u8981\u6570\u636e\uff1f\u6211\u6709\u3002\u5728\u6211\u521a\u521a\u5199\u5b8c\u7684\u4e00\u672c\u4e66\u4e22\u5931\u540e\uff0c\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u8fdb\u884c\u5907\u4efd\uff01", "note_en": "Have you ever lost important data? I have. I learned doing backups the hard way after I lost a entire book I had just finished writing!", "posttime": "2021-07-30 20:46:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b58\u50a8,store", "title": "\u6211\u5982\u4f55\u5b58\u50a8\u6211\u7684\u6587\u4ef6", "title_en": "How I store my files", "transed": 1, "url": "https://www.unixsheikh.com/articles/how-i-store-my-files-and-why-you-should-not-rely-on-fancy-tools-for-backup.html", "via": "", "real_tags": ["\u5b58\u50a8", "store"]}, {"category": "", "categoryclass": "", "imagename": "598529e701e92c8279e1a382695f82fc.jpeg", "infoid": 1070617, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u68c0\u6d4b\u5230\u7684 Android \u6076\u610f\u8f6f\u4ef6\uff0c\u5176\u4e2d\u4e00\u4e9b\u662f\u901a\u8fc7 Google Play \u5546\u5e97\u4f20\u64ad\u7684\uff0c\u5b83\u4f7f\u7528\u4e00\u79cd\u65b0\u9896\u7684\u65b9\u5f0f\u6765\u52a0\u901f\u4ece 100 \u591a\u4e2a\u94f6\u884c\u548c\u52a0\u5bc6\u8d27\u5e01\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u767b\u5f55\u51ed\u636e\u3002\u8be5\u6076\u610f\u8f6f\u4ef6\u88ab\u963f\u59c6\u65af\u7279\u4e39\u5b89\u5168\u516c\u53f8 ThreatFabric \u7684\u7814\u7a76\u4eba\u5458\u79f0\u4e3a Vultur\uff0c\u5b83\u662f\uff08\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff09\u6bcf\u5f53\u6253\u5f00\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\u65f6\u8bb0\u5f55\u8bbe\u5907\u5c4f\u5e55\u7684 Android \u5a01\u80c1\u4e4b\u4e00\u3002 ThreatFabric \u7684\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0cVultur \u4f7f\u7528 VNC \u5c4f\u5e55\u5171\u4eab\u5e94\u7528\u7a0b\u5e8f\u7684\u771f\u5b9e\u5b9e\u73b0\u5c06\u53d7\u611f\u67d3\u8bbe\u5907\u7684\u5c4f\u5e55\u955c\u50cf\u5230\u653b\u51fb\u8005\u63a7\u5236\u7684\u670d\u52a1\u5668\u3002\u57fa\u4e8e Android \u7684\u94f6\u884c\u6b3a\u8bc8\u6076\u610f\u8f6f\u4ef6\u7684\u5178\u578b\u4f5c\u6848\u624b\u6cd5\u662f\u5728\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\u5448\u73b0\u7684\u767b\u5f55\u5c4f\u5e55\u9876\u90e8\u53e0\u52a0\u4e00\u4e2a\u7a97\u53e3\u3002\u8fd9\u79cd\u7a97\u53e3\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u8986\u76d6\u201d\uff0c\u770b\u8d77\u6765\u4e0e\u94f6\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u76f8\u540c\uff0c\u8ba9\u53d7\u5bb3\u8005\u611f\u89c9\u4ed6\u4eec\u6b63\u5728\u5c06\u51ed\u636e\u8f93\u5165\u5230\u53d7\u4fe1\u4efb\u7684\u8f6f\u4ef6\u4e2d\u3002\u7136\u540e\u653b\u51fb\u8005\u6536\u96c6\u51ed\u636e\uff0c\u5c06\u5b83\u4eec\u8f93\u5165\u5230\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u7136\u540e\u63d0\u53d6\u8d44\u91d1\u3002 ThreatFabric \u7814\u7a76\u4eba\u5458\u5728\u8c08\u5230\u65b0\u7684 Vultur \u65b9\u6cd5\u65f6\u5199\u9053\uff1a\u201c\u79fb\u52a8\u5e73\u53f0\u4e0a\u7684\u94f6\u884c\u5a01\u80c1\u4e0d\u518d\u4ec5\u57fa\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u8986\u76d6\u653b\u51fb\uff0c\u800c\u662f\u6f14\u53d8\u6210\u7c7b\u4f3c RAT \u7684\u6076\u610f\u8f6f\u4ef6\uff0c\u7ee7\u627f\u4e86\u68c0\u6d4b\u524d\u53f0\u5e94\u7528\u7a0b\u5e8f\u4ee5\u5f00\u59cb\u5c4f\u5e55\u5f55\u5236\u7b49\u6709\u7528\u6280\u5de7\u3002\u201d\u4e00\u4e2a\u5e16\u5b50\u3002\u8fd9\u5c06\u5a01\u80c1\u5e26\u5230\u4e86\u53e6\u4e00\u4e2a\u5c42\u6b21\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u529f\u80fd\u4e3a\u8bbe\u5907\u4e0a\u7684\u6b3a\u8bc8\u6253\u5f00\u4e86\u5927\u95e8\uff0c\u7ed5\u8fc7\u4e86\u57fa\u4e8e\u7f51\u7edc\u9493\u9c7c MO \u7684\u68c0\u6d4b\uff0c\u9700\u8981\u4ece\u65b0\u8bbe\u5907\u8fdb\u884c\u6b3a\u8bc8\uff1aVultur \u6b3a\u8bc8\u53ef\u80fd\u53d1\u751f\u5728\u53d7\u5bb3\u8005\u7684\u53d7\u611f\u67d3\u8bbe\u5907\u4e0a\u3002\u8fd9\u4e9b\u653b\u51fb\u662f\u53ef\u6269\u5c55\u548c\u81ea\u52a8\u5316\u7684\uff0c\u56e0\u4e3a\u6267\u884c\u6b3a\u8bc8\u7684\u64cd\u4f5c\u53ef\u4ee5\u5728\u6076\u610f\u8f6f\u4ef6\u540e\u7aef\u7f16\u5199\u811a\u672c\u5e76\u4ee5\u5e8f\u5217\u547d\u4ee4\u7684\u5f62\u5f0f\u53d1\u9001\u3002\u4e0e\u8bb8\u591a Android \u94f6\u884c\u6728\u9a6c\u7a0b\u5e8f\u4e00\u6837\uff0cVultur \u4e25\u91cd\u4f9d\u8d56\u4e8e\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5185\u7f6e\u7684\u8f85\u52a9\u529f\u80fd\u670d\u52a1\u3002\u9996\u6b21\u5b89\u88c5\u65f6\uff0cVultur \u4f1a\u6ee5\u7528\u8fd9\u4e9b\u670d\u52a1\u6765\u83b7\u53d6\u5de5\u4f5c\u6240\u9700\u7684\u6743\u9650\u3002\u4e3a\u6b64\uff0c\u6076\u610f\u8f6f\u4ef6\u4f7f\u7528\u4ece\u5176\u4ed6\u6076\u610f\u8f6f\u4ef6\u7cfb\u5217\u4e2d\u83b7\u53d6\u7684\u8986\u76d6\u5c42\u3002\u4ece\u90a3\u65f6\u8d77\uff0cVultur \u4f1a\u76d1\u63a7\u6240\u6709\u89e6\u53d1\u65e0\u969c\u788d\u670d\u52a1\u7684\u8bf7\u6c42\u3002\u6076\u610f\u8f6f\u4ef6\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\u6765\u68c0\u6d4b\u6765\u81ea\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\u3002\u6076\u610f\u8f6f\u4ef6\u8fd8\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\u6765\u963b\u6b62\u7528\u6237\u4f7f\u7528\u4f20\u7edf\u63aa\u65bd\u5220\u9664\u5e94\u7528\u7a0b\u5e8f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6bcf\u5f53\u7528\u6237\u5c1d\u8bd5\u8bbf\u95ee Android \u8bbe\u7f6e\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u8be6\u7ec6\u4fe1\u606f\u5c4f\u5e55\u65f6\uff0cVultur \u90fd\u4f1a\u81ea\u52a8\u5355\u51fb\u540e\u9000\u6309\u94ae\u3002\u8fd9\u4f1a\u963b\u6b62\u7528\u6237\u8bbf\u95ee\u5378\u8f7d\u6309\u94ae\u3002 Vultur \u4e5f\u9690\u85cf\u4e86\u5b83\u7684\u56fe\u6807\u3002\n\u6076\u610f\u8f6f\u4ef6\u4fdd\u6301\u9690\u853d\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a\u5b89\u88c5\u5b83\u7684\u6728\u9a6c\u5e94\u7528\u7a0b\u5e8f\u662f\u529f\u80fd\u9f50\u5168\u7684\u7a0b\u5e8f\uff0c\u5b9e\u9645\u4e0a\u63d0\u4f9b\u771f\u6b63\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u5065\u8eab\u8ffd\u8e2a\u6216\u53cc\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u8fdb\u884c\u4e86\u4f2a\u88c5\u5c1d\u8bd5\uff0c\u4f46\u8be5\u6076\u610f\u8f6f\u4ef6\u81f3\u5c11\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8868\u660e\u5b83\u6b63\u5728\u8fd0\u884c\u7684\u8ff9\u8c61\u2014\u2014\u65e0\u8bba\u5b89\u88c5\u4e86\u4f55\u79cd\u6728\u9a6c\u5e94\u7528\u7a0b\u5e8f\uff0cVultur \u90fd\u4f1a\u4ee5\u6295\u5f71\u5c4f\u5e55\u7684\u5f62\u5f0f\u51fa\u73b0\u5728 Android \u901a\u77e5\u9762\u677f\u4e2d\u3002\u5b89\u88c5\u540e\uff0cVultur \u4f7f\u7528 Alpha VNC \u7684 VNC \u5b9e\u73b0\u5f00\u59cb\u5c4f\u5e55\u5f55\u5236\u3002\u4e3a\u4e86\u63d0\u4f9b\u5bf9\u5728\u53d7\u611f\u67d3\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684 VNC \u670d\u52a1\u5668\u7684\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u6076\u610f\u8f6f\u4ef6\u4f7f\u7528 ngrok\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u52a0\u5bc6\u96a7\u9053\u5c06\u9690\u85cf\u5728\u9632\u706b\u5899\u540e\u9762\u7684\u672c\u5730\u7cfb\u7edf\u66b4\u9732\u7ed9\u516c\u5171\u4e92\u8054\u7f51\u3002\u8be5\u6076\u610f\u8f6f\u4ef6\u7531\u540d\u4e3a dropper \u7684\u6728\u9a6c\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cThreatFabric \u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u5728 Google Play \u4e2d\u53d1\u73b0\u4e86\u4e24\u4e2a\u5b89\u88c5 Vultur \u7684\u6728\u9a6c\u5e94\u7528\u7a0b\u5e8f\u3002\u4ed6\u4eec\u603b\u5171\u5b89\u88c5\u4e86\u5927\u7ea6 5,000 \u4e2a\u88c5\u7f6e\uff0c\u8fd9\u5bfc\u81f4\u7814\u7a76\u4eba\u5458\u4f30\u8ba1 Vultur \u611f\u67d3\u7684\u6570\u91cf\u6709\u6570\u5343\u4e2a\u3002\u4e0e\u5927\u591a\u6570\u4f9d\u8d56\u7b2c\u4e09\u65b9\u6295\u653e\u5668\u7684 Android \u6076\u610f\u8f6f\u4ef6\u4e0d\u540c\uff0cVultur \u4f7f\u7528\u4e00\u79cd\u81ea\u5b9a\u4e49\u6295\u653e\u5668\uff0c\u540e\u6765\u88ab\u79f0\u4e3a Brunhilda\u3002 ThreatFabric \u7814\u7a76\u4eba\u5458\u5199\u9053\uff1a\u201c\u8fd9\u4e2a dropper \u548c Vultur \u90fd\u662f\u7531\u540c\u4e00\u4e2a\u5a01\u80c1\u6f14\u5458\u5c0f\u7ec4\u5f00\u53d1\u7684\u3002\u201d \u201c\u9009\u62e9\u5f00\u53d1\u81ea\u5df1\u7684\u79c1\u6709\u6728\u9a6c\uff0c\u800c\u4e0d\u662f\u79df\u7528\u7b2c\u4e09\u65b9\u6076\u610f\u8f6f\u4ef6\uff0c\u663e\u793a\u51fa\u8fd9\u4e00\u7fa4\u4f53\u7684\u5f3a\u70c8\u52a8\u673a\uff0c\u4e0e\u673a\u5668\u4eba\u4ee5\u53ca\u670d\u52a1\u5668\u4ee3\u7801\u4e2d\u5b58\u5728\u7684\u6574\u4f53\u9ad8\u6c34\u5e73\u7ed3\u6784\u548c\u7ec4\u7ec7\u76f8\u7ed3\u5408\u3002\u201d\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0cBrunhilda \u8fc7\u53bb\u66fe\u88ab\u7528\u6765\u5b89\u88c5\u4e0d\u540c\u7684 Android \u94f6\u884c\u6076\u610f\u8f6f\u4ef6\uff0c\u79f0\u4e3a Alien\u3002\u7814\u7a76\u4eba\u5458\u4f30\u8ba1\uff0cBrunhilda \u603b\u5171\u611f\u67d3\u4e86 30,000 \u591a\u53f0\u8bbe\u5907\u3002\u7814\u7a76\u4eba\u5458\u6839\u636e\u4e4b\u524d\u5728 Play \u5546\u5e97\u4e2d\u63d0\u4f9b\u7684\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\uff08\u5176\u4e2d\u4e00\u4e9b\u5b89\u88c5\u91cf\u8d85\u8fc7 10,000 \u4e2a\uff09\u4ee5\u53ca\u6765\u81ea\u7b2c\u4e09\u65b9\u5e02\u573a\u7684\u6570\u636e\u8fdb\u884c\u4e86\u4f30\u7b97\u3002 Vultur \u88ab\u7f16\u7a0b\u4e3a\u5728 103 \u4e2a Android \u94f6\u884c\u6216\u52a0\u5bc6\u8d27\u5e01\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5728\u524d\u53f0\u8fd0\u884c\u65f6\u8bb0\u5f55\u5c4f\u5e55\u3002\u610f\u5927\u5229\u3001\u6fb3\u5927\u5229\u4e9a\u548c\u897f\u73ed\u7259\u662f\u94f6\u884c\u673a\u6784\u53d7\u653b\u51fb\u6700\u591a\u7684\u56fd\u5bb6\u3002\u9664\u4e86\u94f6\u884c\u548c\u52a0\u5bc6\u8d27\u5e01\u5e94\u7528\u7a0b\u5e8f\u5916\uff0c\u8be5\u6076\u610f\u8f6f\u4ef6\u8fd8\u4f1a\u6536\u96c6 Facebook\u3001Facebook \u65d7\u4e0b\u7684 WhatsApp Messenger\u3001TikTok \u548c Viber Messenger \u7684\u51ed\u636e\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7684\u51ed\u636e\u6536\u96c6\u662f\u901a\u8fc7\u4f20\u7edf\u7684\u952e\u76d8\u8bb0\u5f55\u8fdb\u884c\u7684\uff0c\u5c3d\u7ba1 ThreatFabric \u5e16\u5b50\u6ca1\u6709\u89e3\u91ca\u539f\u56e0\u3002\n\u867d\u7136\u8c37\u6b4c\u5df2\u7ecf\u5220\u9664\u4e86\u6240\u6709\u5df2\u77e5\u5305\u542b Brunhilda \u7684 Play Market \u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u8be5\u516c\u53f8\u7684\u8bb0\u5f55\u8868\u660e\u65b0\u7684\u6728\u9a6c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002 Android \u7528\u6237\u5e94\u4ec5\u5b89\u88c5\u63d0\u4f9b\u6709\u7528\u670d\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u4e5f\u5e94\u5c3d\u53ef\u80fd\u4ec5\u5b89\u88c5\u6765\u81ea\u77e5\u540d\u53d1\u884c\u5546\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4eba\u4eec\u8fd8\u5e94\u8be5\u5bc6\u5207\u5173\u6ce8\u7528\u6237\u8bc4\u5206\u548c\u5e94\u7528\u7a0b\u5e8f\u884c\u4e3a\u662f\u5426\u6709\u6076\u610f\u7684\u8ff9\u8c61\u3002", "note_en": "Recently detected Android malware, some spread through the Google Play Store, uses a novel way to supercharge the harvesting of login credentials from more than 100 banking and cryptocurrency applications.\n The malware, which researchers from Amsterdam-based security firm ThreatFabric are calling Vultur, is among\u2014if not  the\u2014first Android threats to record a device screen whenever one of the targeted apps is opened. Vultur uses a real implementation of the VNC screen-sharing application to mirror the screen of the infected device to an attacker-controlled server, researchers with ThreatFabric said.\n    The typical modus operandi for Android-based bank-fraud malware is to superimpose a window on top of the login screen presented by a targeted app. The \u201coverlay,\u201d as such windows are usually called, appears identical to the user interface of the banking app, giving victims the impression they\u2019re entering their credentials into a trusted piece of software. Attackers then harvest the credentials, enter them into the app running on a different device, and withdraw money.\n \u201cBanking threats on the mobile platform are no longer only based on well-known overlay attacks, but are evolving into RAT-like malware, inheriting useful tricks like detecting foreground applications to start screen recording,\u201d ThreatFabric researchers wrote of the new Vultur approach in a  post.\n     This brings the threat to another level, as such features open the door for on-device fraud, circumventing detection based on phishing MO\u2019s that require fraud to be performed from a new device: With Vultur fraud can happen on the infected device of the victim. These attacks are scalable and automated since the actions to perform fraud can be scripted on the malware backend and sent in the form of sequenced commands.\n Vultur, like many Android banking trojans, relies heavily on  accessibility services built into the mobile OS. When first installed, Vultur abuses these services to obtain the permissions required to work. To do this, the malware uses an overlay taken from other malware families. From then on, Vultur monitors all requests that trigger the accessibility services.\n   The malware uses the services to detect requests that come from a targeted app. The malware also uses the services to stop the user from using traditional measures to delete the app. Specifically, whenever the user tries to access the app details screen in the Android settings, Vultur automatically clicks the back button. That blocks the user from accessing the uninstall button. Vultur also hides its icon.\n Another way the malware remains stealthy: trojanized apps that install it are full-featured programs that actually provide real services, such as fitness tracking or two-factor authentication. Despite the cloaking attempts, however, the malware provides at least one telltale sign that it\u2019s running\u2014whatever trojanized app installed Vultur will appear in the Android notification panel as projecting the screen.\n  Once installed, Vultur starts the screen recording, using VNC implementation from Alpha VNC. To provide remote access to the VNC server running on the infected device, the malware uses  ngrok, an app that uses an encrypted tunnel to expose local systems hidden behind firewalls to the public Internet.\n    The malware is installed by a trojanized app known as a dropper. So far, ThreatFabric researchers have found two trojanized apps in Google Play that install Vultur. They had combined installations of about 5,000, leading the researchers to estimate that the number of Vultur infections is numbered in the thousands. Unlike most Android malware, which relies on third-party droppers, Vultur uses a custom dropper that\u2019s come to be called Brunhilda.\n \u201cThis dropper and Vultur are both developed by the same threat actor group,\u201d ThreatFabric researchers wrote. \u201cThe choice of developing its own private trojan, instead of renting third-party malware, displays a strong motivation from this group, paired with the overall high level of structure and organization present in the bot as well as the server code.\u201d\n The researchers found that Brunhilda was used in the past to install different Android banking malware known as Alien. In all, the researchers estimate Brunhilda has infected more than 30,000 devices. The researchers based the estimate on malicious apps previously available in the Play Store\u2014some with more than 10,000 installations each\u2014as well as figures from third-party markets.\n Vultur is programmed to record screens when any of 103 Android banking or cryptocurrency apps are running in the foreground. Italy, Australia, and Spain were the countries with the most banking institutions targeted.\n  Besides banking and cryptocurrency apps, the malware also harvests credentials for Facebook, Facebook-owned WhatsApp messenger, TikTok, and Viber Messenger. Credential harvesting for these apps occurs through traditional keylogging, although the ThreatFabric post didn\u2019t explain why.\n While Google has removed all Play Market apps known to contain Brunhilda, the company\u2019s track record suggests that new trojanized apps will probably appear. Android users should only install apps that provide useful services and, even then, only apps from well-known publishers, when at all possible. People should also pay close attention to user ratings and app behavior for indications of malice.", "posttime": "2021-07-30 20:05:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u6b3a\u8bc8,fraud,\u5e94\u7528\u7a0b\u5e8f", "title": "\u540d\u4e3a Vultur \u7684\u65b0\u578b\u94f6\u884c\u6b3a\u8bc8\u6076\u610f\u8f6f\u4ef6\u611f\u67d3\u4e86\u6570\u5343\u53f0\u8bbe\u5907", "title_en": "New bank-fraud malware called Vultur infects thousands of devices", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/07/new-bank-fraud-malware-called-vultur-infects-thousands-of-devices/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u6b3a\u8bc8", "fraud", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "25fcfabace13adb5e0b4f32ba2db185d.jpg", "infoid": 1070616, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u5468\u56db\u8868\u793a\uff0c\u4ece PyPI \u5f00\u6e90\u5b58\u50a8\u5e93\u4e0b\u8f7d\u7684\u5f00\u6e90\u8f6f\u4ef6\u5305\u4f30\u8ba1\u6709 30,000 \u6b21\u5305\u542b\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u4e9b\u6076\u610f\u4ee3\u7801\u4f1a\u6697\u4e2d\u7a83\u53d6\u4fe1\u7528\u5361\u6570\u636e\u548c\u767b\u5f55\u51ed\u636e\uff0c\u5e76\u5728\u53d7\u611f\u67d3\u7684\u673a\u5668\u4e0a\u6ce8\u5165\u6076\u610f\u4ee3\u7801\u3002\u5728\u4e00\u7bc7\u5e16\u5b50\u4e2d\uff0c\u5b89\u5168\u516c\u53f8 JFrog \u7684\u7814\u7a76\u4eba\u5458 Andrey Polkovnichenko\u3001Omer Kaspi \u548c Shachar Menashe \u8868\u793a\uff0c\u4ed6\u4eec\u6700\u8fd1\u5728 PyPI \u4e2d\u53d1\u73b0\u4e86\u516b\u4e2a\u6267\u884c\u4e00\u7cfb\u5217\u6076\u610f\u6d3b\u52a8\u7684\u5305\u3002\u6839\u636e\u5728 https://pepy.tech\uff08\u4e00\u4e2a\u63d0\u4f9b Python \u5305\u4e0b\u8f7d\u7edf\u8ba1\u6570\u636e\u7684\u7ad9\u70b9\uff09\u4e0a\u7684\u641c\u7d22\uff0c\u7814\u7a76\u4eba\u5458\u4f30\u8ba1\u6076\u610f\u5305\u88ab\u4e0b\u8f7d\u4e86\u5927\u7ea6 30,000 \u6b21\u3002\u8fd9\u4e00\u53d1\u73b0\u662f\u8fd1\u5e74\u6765\u6ee5\u7528\u5f00\u6e90\u5b58\u50a8\u5e93\u63a5\u53d7\u80fd\u529b\u7684\u4e00\u957f\u4e32\u653b\u51fb\u4e2d\u7684\u6700\u65b0\u53d1\u73b0\uff0c\u6570\u767e\u4e07\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6bcf\u5929\u90fd\u4f9d\u8d56\u5f00\u6e90\u5b58\u50a8\u5e93\u3002\u5c3d\u7ba1\u5b83\u4eec\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u4f46\u5b58\u50a8\u5e93\u901a\u5e38\u7f3a\u4e4f\u5f3a\u5927\u7684\u5b89\u5168\u6027\u548c\u5ba1\u67e5\u63a7\u5236\uff0c\u5f53\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u611f\u67d3\u81ea\u5df1\u6216\u5c06\u6076\u610f\u4ee3\u7801\u6298\u53e0\u5230\u4ed6\u4eec\u53d1\u5e03\u7684\u8f6f\u4ef6\u4e2d\u65f6\uff0c\u8fd9\u4e00\u5f31\u70b9\u6709\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u7684\u4f9b\u5e94\u94fe\u653b\u51fb\u3002 JFrog \u9996\u5e2d\u6280\u672f\u5b98 Asaf Karas \u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u5199\u9053\uff1a\u201c\u5728 PyPI \u7b49\u6d41\u884c\u5b58\u50a8\u5e93\u4e2d\u4e0d\u65ad\u53d1\u73b0\u6076\u610f\u8f6f\u4ef6\u5305\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u8d8b\u52bf\uff0c\u53ef\u80fd\u5bfc\u81f4\u5e7f\u6cdb\u7684\u4f9b\u5e94\u94fe\u653b\u51fb\u3002\u201d \u201c\u653b\u51fb\u8005\u80fd\u591f\u4f7f\u7528\u7b80\u5355\u7684\u6df7\u6dc6\u6280\u672f\u6765\u5f15\u5165\u6076\u610f\u8f6f\u4ef6\uff0c\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u4fdd\u6301\u8b66\u60d5\u3002\u8fd9\u662f\u4e00\u4e2a\u7cfb\u7edf\u6027\u5a01\u80c1\uff0c\u9700\u8981\u7531\u8f6f\u4ef6\u5b58\u50a8\u5e93\u7684\u7ef4\u62a4\u8005\u548c\u5f00\u53d1\u4eba\u5458\u5728\u591a\u4e2a\u5c42\u9762\u79ef\u6781\u89e3\u51b3\u3002\u201d\u7814\u7a76\u4eba\u5458\u611f\u8c22 PyPI \u7ef4\u62a4\u8005 Dustin Ingram \u5728\u6536\u5230\u901a\u77e5\u540e\u201c\u5feb\u901f\u54cd\u5e94\u5e76\u5220\u9664\u4e86\u6076\u610f\u5305\u201d\u3002\u82f1\u683c\u62c9\u59c6\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\u661f\u671f\u56db\u8fd0\u6765\u7684\u4e0d\u540c\u5305\u88f9\u8fdb\u884c\u4e86\u4e0d\u540c\u79cd\u7c7b\u7684\u90aa\u6076\u6d3b\u52a8\u3002\u5176\u4e2d\u516d\u4e2a\u6709\u4e09\u4e2a\u6709\u6548\u8f7d\u8377\uff0c\u4e00\u4e2a\u7528\u4e8e\u6536\u96c6 Discord \u5e10\u6237\u7684\u8eab\u4efd\u9a8c\u8bc1 cookie\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u63d0\u53d6\u6d4f\u89c8\u5668\u5b58\u50a8\u7684\u4efb\u4f55\u5bc6\u7801\u6216\u652f\u4ed8\u5361\u6570\u636e\uff0c\u7b2c\u4e09\u4e2a\u7528\u4e8e\u6536\u96c6\u6709\u5173\u53d7\u611f\u67d3 PC \u7684\u4fe1\u606f\uff0c\u4f8b\u5982 IP \u5730\u5740\u3001\u8ba1\u7b97\u673a\u540d\u79f0\u548c\u7528\u6237\u540d\u3002\u5269\u4e0b\u7684\u4e24\u4e2a\u5305\u5305\u542b\u6076\u610f\u8f6f\u4ef6\uff0c\u5b83\u4eec\u8bd5\u56fe\u8fde\u63a5\u5230\u653b\u51fb\u8005\u6307\u5b9a\u7684 TCP \u7aef\u53e3 9009 \u4e0a\u7684 IP \u5730\u5740\uff0c\u7136\u540e\u6267\u884c\u5957\u63a5\u5b57\u4e2d\u53ef\u7528\u7684\u4efb\u4f55 Python \u4ee3\u7801\u3002\u73b0\u5728\u4e0d\u77e5\u9053 IP \u5730\u5740\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u4e0a\u9762\u662f\u5426\u5b58\u5728\u6076\u610f\u8f6f\u4ef6\u3002\u4e0e\u5927\u591a\u6570\u65b0\u624b Python \u6076\u610f\u8f6f\u4ef6\u4e00\u6837\uff0c\u8fd9\u4e9b\u5305\u4ec5\u4f7f\u7528\u4e86\u7b80\u5355\u7684\u6df7\u6dc6\uff0c\u4f8b\u5982\u6765\u81ea Base64 \u7f16\u7801\u5668\u7684\u6df7\u6dc6\u3002\u4ee5\u4e0b\u662f\u5305\u7684\u7ec6\u5206\uff1a\nKaras \u544a\u8bc9\u6211\uff0c\u524d\u516d\u4e2a\u7a0b\u5e8f\u5305\u6709\u80fd\u529b\u611f\u67d3\u5f00\u53d1\u4eba\u5458\u7684\u8ba1\u7b97\u673a\uff0c\u4f46\u65e0\u6cd5\u611f\u67d3\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u6076\u610f\u8f6f\u4ef6\u7f16\u5199\u7684\u4ee3\u7801\u3002 \u201c\u5bf9\u4e8e\u5141\u8bb8\u5728\u5b83\u4eec\u5b89\u88c5\u7684\u673a\u5668\u4e0a\u6267\u884c\u4ee3\u7801\u7684 pytagora \u548c pytagora2 \u5305\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u3002\u201d\u4ed6\u5728\u76f4\u63a5\u6d88\u606f\u4e2d\u8bf4\u3002 \u201c\u5728\u611f\u67d3\u5f00\u53d1\u673a\u5668\u540e\uff0c\u4ed6\u4eec\u5c06\u5141\u8bb8\u4ee3\u7801\u6267\u884c\uff0c\u7136\u540e\u653b\u51fb\u8005\u53ef\u4ee5\u4e0b\u8f7d\u6709\u6548\u8f7d\u8377\uff0c\u4ece\u800c\u4fee\u6539\u6b63\u5728\u5f00\u53d1\u7684\u8f6f\u4ef6\u9879\u76ee\u3002\u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u8fd9\u5b9e\u9645\u4e0a\u5df2\u7ecf\u5b8c\u6210\u3002\u201d\u4e0e\u5176\u82b1\u51e0\u5929\u65f6\u95f4\u5f00\u53d1\u6267\u884c\u65e5\u5e38\u4efb\u52a1\u7684\u4ee3\u7801\uff0c\u7f16\u7801\u4eba\u5458\u53ef\u4ee5\u8f6c\u800c\u4f7f\u7528 PyPI\u3001RubyGems \u6216 npm \u7b49\u5b58\u50a8\u5e93\u6765\u83b7\u53d6\u540c\u884c\u5df2\u7ecf\u5f00\u53d1\u7684\u6210\u719f\u5e94\u7528\u7a0b\u5e8f\u5305\u3002\u4f8b\u5982\uff0c\u5728 PyPI \u4e0a\u53ef\u7528\u7684 270 \u4e07\u4e2a\u8f6f\u4ef6\u5305\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u6765\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4ece\u4e92\u8054\u7f51\u4e0a\u6293\u53d6\u7684\u6570\u636e\u6765\u9884\u6d4b\u623f\u5c4b\u7684\u552e\u4ef7\u3001\u901a\u8fc7\u4e9a\u9a6c\u900a\u7684\u7b80\u5355\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u68c0\u67e5\u5f00\u6e90\u4ee3\u7801\u6f0f\u6d1e\u3002 PyPI \u4e3a\u7528 Python \u7f16\u5199\u7684\u8f6f\u4ef6\u63d0\u4f9b\u5305\uff0c\u800c RubyGems \u548c npm \u4e3a Ruby \u548c JavaScript \u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u5305\u3002\u8fd9\u4e00\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u4f7f\u5b58\u50a8\u5e93\u6210\u4e3a\u4f9b\u5e94\u94fe\u653b\u51fb\u7684\u7406\u60f3\u73af\u5883\uff0c\u8fd9\u79cd\u653b\u51fb\u4f7f\u7528\u88ab\u79f0\u4e3a\u57df\u540d\u62a2\u6ce8\u6216\u4f9d\u8d56\u6df7\u6dc6\u7684\u6280\u672f\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\u3002\u5b58\u50a8\u5e93\u4f9b\u5e94\u94fe\u653b\u51fb\u81f3\u5c11\u53ef\u4ee5\u8ffd\u6eaf\u5230 2016 \u5e74\uff0c\u5f53\u65f6\u4e00\u540d\u5927\u5b66\u751f\u5c06\u6076\u610f\u5305\u4e0a\u4f20\u5230 PyPI\u3002\u5728\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u4ed6\u7684\u5192\u540d\u9876\u66ff\u4ee3\u7801\u5728 17,000 \u591a\u4e2a\u4e0d\u540c\u7684\u57df\u4e0a\u6267\u884c\u4e86 45,000 \u591a\u6b21\uff0c\u5176\u4e2d\u8d85\u8fc7\u4e00\u534a\u7684\u65f6\u95f4\u4ed6\u7684\u4ee3\u7801\u88ab\u6388\u4e88\u4e86\u5168\u80fd\u7684\u7ba1\u7406\u6743\u9650\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u4f9b\u5e94\u94fe\u653b\u51fb\u5df2\u6210\u4e3a RubyGems \u548c npm \u7684\u5e38\u6001\u3002\u6700\u8fd1\u51e0\u4e2a\u6708\uff0c\u767d\u5e3d\u9ed1\u5ba2\u8bbe\u8ba1\u4e86\u4e00\u79cd\u65b0\u578b\u7684\u4f9b\u5e94\u94fe\u653b\u51fb\uff0c\u8be5\u653b\u51fb\u901a\u8fc7\u5c06\u6076\u610f\u7a0b\u5e8f\u5305\u4e0a\u4f20\u5230\u516c\u5171\u4ee3\u7801\u5b58\u50a8\u5e93\u5e76\u4e3a\u5b83\u4eec\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u8be5\u540d\u79f0\u4e0e\u5b58\u50a8\u5728\u67d0\u4e2a\u6d41\u884c\u8f6f\u4ef6\u7684\u5185\u90e8\u5b58\u50a8\u5e93\u4e2d\u7684\u7a0b\u5e8f\u5305\u76f8\u540c\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u4f9d\u8d56\u6df7\u6dc6\u653b\u51fb\u5df2\u7ecf\u8ba9\u82f9\u679c\u200b\u200b\u3001\u5fae\u8f6f\u548c\u5176\u4ed6 33 \u5bb6\u516c\u53f8\u9677\u5165\u56f0\u5883\u3002 JFrog \u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u57fa\u4e8e\u5f53\u524d\u5b58\u50a8\u5e93\u5b89\u5168\u72b6\u6001\uff0c\u4e92\u8054\u7f51\u672a\u6765\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u66f4\u591a\u653b\u51fb\u3002\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u8fd9\u9879\u7814\u7a76\u4e2d\u5206\u6790\u7684\u51e0\u4e4e\u6240\u6709\u4ee3\u7801\u7247\u6bb5\u90fd\u57fa\u4e8e\u5df2\u77e5\u7684\u516c\u5171\u5de5\u5177\uff0c\u53ea\u6709\u5c11\u6570\u53c2\u6570\u53d1\u751f\u4e86\u53d8\u5316\u3002\u201d \u201c\u6df7\u6dc6\u4e5f\u662f\u57fa\u4e8e\u516c\u5171\u6df7\u6dc6\u5668\u3002\u6211\u4eec\u5e0c\u671b\u770b\u5230\u66f4\u591a\u8fd9\u4e9b\u2018\u5f17\u5170\u80af\u65af\u5766\u2019\u6076\u610f\u8f6f\u4ef6\u5305\u4ece\u4e0d\u540c\u7684\u653b\u51fb\u5de5\u5177\u4e2d\u62fc\u63a5\u51fa\u6765\uff08\u5177\u6709\u66f4\u6539\u7684\u6e17\u6f0f\u53c2\u6570\uff09\u3002\u201d", "note_en": "Open source packages downloaded an estimated 30,000 times from the PyPI open source repository contained malicious code that surreptitiously stole credit card data and login credentials and injected malicious code on infected machines, researchers said on Thursday.\n In a  post, researchers Andrey Polkovnichenko, Omer Kaspi, and Shachar Menashe of security firm JFrog said they recently found eight packages in PyPI that carried out a range of malicious activity. Based on searches on  https://pepy.tech, a site that provides download stats for Python packages, the researchers estimate the malicious packages were downloaded about 30,000 times.\n   The discovery is the latest in a long line of attacks in recent years that abuse the receptivity of open source repositories, which millions of software developers rely on daily. Despite their crucial role, repositories often lack robust security and vetting controls, a weakness that has the potential to cause serious supply chain attacks when developers unknowingly infect themselves or fold malicious code into the software they publish. \u201cThe continued discovery of malicious software packages in popular repositories like PyPI is an alarming trend that can lead to widespread supply chain attacks,\u201d JFrog CTO Asaf Karas wrote in an email. \u201cThe ability for attackers to use simple obfuscation techniques to introduce malware means developers have to be concerned and vigilant. This is a systemic threat, and it needs to be actively addressed on several layers, both by the maintainers of software repositories and by the developers.\u201d\n The researchers thanked PyPI maintainer Dustin Ingram \u201cfor quickly responding and removing the malicious packages\u201d when notified. Ingram didn\u2019t immediately respond to a request for comment.\n Different packages from Thursday\u2019s haul carried out different kinds of nefarious activities. Six of them had three payloads, one for harvesting authentication cookies for Discord accounts, a second for extracting any passwords or payment card data stored by browsers, and the third for gathering information about the infected PC, such as IP addresses, computer name, and user name.\n The remaining two packages had malware that tries to connect to an attacker-designated IP address on TCP port 9009, and to then execute whatever Python code is available from the socket. It\u2019s not now known what the IP address was or if there was malware hosted on it.\n    Like most novice Python malware, the packages used only a simple obfuscation such as from Base64 encoders. Here\u2019s a breakdown of the packages:\n  Karas told me that the first six packages had the ability to infect the developer computer but couldn&#39;t taint the code developers wrote with malware.\n \u201cFor both the pytagora and pytagora2 packages, which allows code execution on the machine they were installed, this would be possible.\u201d he said in a direct message. \u201cAfter infecting the development machine, they would allow code execution and then a payload could be downloaded by the attacker that would modify the software projects under development. However, we don\u2019t have evidence that this was actually done.\u201d\n  Rather than spending days developing code that performs everyday tasks, coders can instead turn to repositories like PyPI, RubyGems, or npm to obtain mature app packages that peers have already developed. Among the 2.7 million packages available on PyPI, for example, are ones developers can use to make apps  \u200b\u200bpredict a home&#39;s selling price using data scraped from the Internet,  send emails through Amazon&#39; s Simple Email Service, or  check open source code for vulnerabilities. PyPI provides packages for software written in Python, while RubyGems and npm provide packages for Ruby and JavaScript apps.\n This crucial role makes repositories the ideal setting for supply-chain attacks, which have grown increasingly common using techniques\u00a0known as  typosquatting or  dependency confusion.\n  Repository supply-chain attacks date back to at least 2016, when a college student  uploaded malicious packages to PyPI. Over a span of several months, his imposter code was executed more than 45,000 times on more than 17,000 separate domains, and more than half the time his code was given all-powerful administrative rights.  Since then,  supply-chain attacks have become a  regular occurrence for\u00a0 RubyGems and  npm.  In recent months, white hat hackers have cooked up a new type of supply-chain attack that works by uploading malicious packages to public code repositories and giving them a name that\u2019s identical to a package stored in the internal repository for a popular piece of software. These so-called dependency confusion attacks have already  snared Apple, Microsoft, and 33 other companies. The JFrog researchers said that, based on the current state of repository security, the Internet is likely to see more attacks in the future.\n \u201cAlmost all of the code snippets analyzed in this research were based on known public tools, with only a few parameters changed,\u201d they wrote. \u201cThe obfuscation was also based on public obfuscators. We expect to see more of these \u2018Frankenstein\u2019 malware packages stitched from different attack tools (with changed exfiltration parameters).\u201d", "posttime": "2021-07-30 20:05:10", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f00\u53d1,\u4ee3\u7801,pypi,\u6076\u610f\u8f6f\u4ef6", "title": "\u6076\u610f PyPI \u5305\u7a83\u53d6\u5f00\u53d1\u8005\u6570\u636e\u5e76\u6ce8\u5165\u4ee3\u7801", "title_en": "Malicious PyPI packages caught stealing developer data and injecting code", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/07/malicious-pypi-packages-caught-stealing-developer-data-and-injecting-code/", "via": "", "real_tags": ["\u5f00\u53d1", "\u4ee3\u7801", "pypi", "\u6076\u610f\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "bc89c02950d0768bbcc84610d139e705.jpeg", "infoid": 1070613, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u4f01\u4e1a\u9762\u4e34\u8d8a\u6765\u8d8a\u5927\u7684\u9ed1\u5ba2\u98ce\u9669\uff0c\u4f01\u4e1a\u7f51\u7edc\u5b89\u5168\u8d1f\u8d23\u4eba\u7684\u6536\u5165\u4e0e\u53bb\u5e74\u76f8\u6bd4\u6709\u6240\u589e\u52a0\uff0c\u4f46\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u4ecd\u9700\u5411 IT \u8d1f\u8d23\u4eba\u6c47\u62a5\u3002\u4e13\u5bb6\u8868\u793a\uff0c\u8bb8\u591a\u4ee5\u524d\u6ca1\u6709\u9996\u5e2d\u4fe1\u606f\u5b89\u5168\u5b98\u7684\u516c\u53f8\u5728\u8fc7\u53bb\u51e0\u5e74\u90fd\u8058\u8bf7\u4e86\u4e00\u540d\u9996\u5e2d\u4fe1\u606f\u5b89\u5168\u5b98\uff0c\u8fd9\u63a8\u52a8\u4e86\u5bf9\u5177\u6709\u7ecf\u9a8c\u3001\u6280\u672f\u6280\u80fd\u548c\u5546\u4e1a\u77e5\u8bc6\u7684\u4e13\u4e1a\u4eba\u5458\u7684\u9700\u6c42\u3002\u5177\u6709\u8fd9\u4e9b\u8d44\u683c\u7684\u5b89\u5168\u9886\u5bfc\u8005\u53ef\u80fd\u5f88\u96be\u627e\u5230\uff0c\u8fd9\u63a8\u9ad8\u4e86\u5de5\u8d44\u3002\u6839\u636e\u730e\u5934\u516c\u53f8 Heidrick &amp; Struggles International \u5468\u56db\u53d1\u5e03\u7684\u4e00\u9879\u9488\u5bf9 354 \u540d CISO \u7684\u65b0\u8c03\u67e5\uff0c\u4eca\u5e74\u7f8e\u56fd CISO \u7684\u5de5\u8d44\u4e2d\u4f4d\u6570\u4e3a 509,000 \u7f8e\u5143\uff0c\u800c 2020 \u5e74\u4e3a 473,000 \u7f8e\u5143 \u5305\u62ec\u80a1\u6743\u6388\u4e88\u548c\u5956\u91d1\u5728\u5185\u7684\u603b\u85aa\u916c\u4e0a\u5347\u81f3 936,000 \u7f8e\u5143\u4ece 2020 \u5e74\u7684 784,000 \u7f8e\u5143\u8d77\u3002\u53bb\u5e74\u7684\u8c03\u67e5\u5305\u62ec 372 \u4f4d CISO \u7684\u56de\u7b54\u3002\u603b\u90e8\u4f4d\u4e8e\u5339\u5179\u5821\u7684 Highmark Health \u9996\u5e2d\u4fe1\u606f\u5b89\u5168\u5b98 Omar Khawaja \u8868\u793a\uff1a\u201c\u9700\u6c42\u589e\u52a0\u4e86\u5f88\u591a\uff0c\u4f46\u4f9b\u5e94\u5e76\u6ca1\u6709\u5b8c\u5168\u589e\u52a0\u3002\u201d Khawaja \u5148\u751f\u8bf4\uff0c\u8fd1\u5e74\u6765\uff0c\u4ed6\u770b\u5230\u51e0\u5bb6\u793e\u533a\u5b66\u9662\u3001\u5f53\u5730\u94f6\u884c\u548c\u5176\u4ed6\u516c\u53f8\u8bbe\u7acb\u4e86 CISO \u804c\u4f4d\u3002 Khawaja \u5148\u751f\u8bf4\uff0c\u5907\u53d7\u77a9\u76ee\u7684\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u5df2\u5bfc\u81f4\u4f01\u4e1a\u9ad8\u7ba1\u548c\u8463\u4e8b\u4f1a\u66f4\u52a0\u5173\u6ce8\u7f51\u7edc\u5b89\u5168\u3002 \u201c\u6709\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u548c\u76f4\u63a5\u7684\u4e1a\u52a1\u4e2d\u65ad\u3002\u5f88\u96be\u5ffd\u89c6\uff0c\u201d\u4ed6\u8bf4\u3002\u975e\u76c8\u5229\u7ec4\u7ec7\u5065\u5eb7\u4fe1\u606f\u5171\u4eab\u548c\u5206\u6790\u4e2d\u5fc3\u7684\u9996\u5e2d\u5b89\u5168\u5b98 Errol Weiss \u8868\u793a\uff0c\u96c7\u4f63\u6709\u9650\u7684\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7f51\u7edc\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u7684\u7ade\u4e89\u610f\u5473\u7740\u5c0f\u578b\u4f01\u4e1a\u53ef\u80fd\u4e0d\u5f97\u4e0d\u59a5\u534f\uff0c\u4ee5\u8f83\u4f4e\u7684\u85aa\u6c34\u96c7\u7528\u6ca1\u6709\u6240\u6709\u6240\u9700\u7ecf\u9a8c\u7684\u4eba\u5728\u533b\u7597\u4fdd\u5065\u516c\u53f8\u4e4b\u95f4\u5171\u4eab\u6709\u5173\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u7684\u4fe1\u606f\u3002 \u201c\u6211\u4eec\u6709\u592a\u591a\u7a7a\u7f3a\u804c\u4f4d\uff0c\u6839\u672c\u627e\u4e0d\u5230\u7ecf\u9a8c\u4e30\u5bcc\u7684 CISO\uff0c\u201d\u4ed6\u8bf4\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5bf9\u533b\u9662\u548c\u533b\u7597\u4fdd\u5065\u516c\u53f8\u7684\u7f51\u7edc\u653b\u51fb\u6709\u6240\u589e\u52a0\uff0c\u5728\u5458\u5de5\u5df2\u7ecf\u9677\u5165\u56f0\u5883\u7684\u65f6\u5019\u589e\u52a0\u4e86\u538b\u529b\u548c\u5b89\u5168\u9884\u7b97\u9700\u6c42\u3002\u6839\u636e Heidrick &amp; Struggles \u7684\u8c03\u67e5\uff0c38% \u7684 CISO \u5411\u5176\u516c\u53f8\u7684\u9996\u5e2d\u4fe1\u606f\u5b98\u62a5\u544a\uff0c\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u62a5\u544a\u5173\u7cfb\u3002\u7136\u800c\uff0cHeidrick &amp; Struggles \u5168\u7403\u7f51\u7edc\u5b89\u5168\u5b9e\u8df5\u5408\u4f19\u4eba\u517c\u8d1f\u8d23\u4eba Matt Aiello \u8868\u793a\uff0c\u4e00\u4e9b\u516c\u53f8\u6b63\u5728\u653e\u5f03\u5411\u9996\u5e2d\u4fe1\u606f\u5b98\u62a5\u544a\u7684\u7f51\u7edc\u5b89\u5168\u9886\u5bfc\u8005\u3002\u4f8b\u5982\uff0c\u5728\u6700\u8fd1\u7684\u4e24\u6b21\u62db\u8058\u641c\u7d22\u4e2d\uff0c\u516c\u53f8\u6700\u521d\u60f3\u62db\u8058\u4e00\u540d CISO\uff0c\u4ed6\u7684\u62a5\u544a\u7ea7\u522b\u4e0e CEO \u76f8\u5dee\u4e00\u4e2a\u7ea7\u522b\uff0c\u4f46\u6700\u7ec8\u8058\u8bf7\u4e86\u4e00\u540d\u76f4\u63a5\u5411 CEO \u62a5\u544a\u7684\u4eba\uff0c\u827e\u6d1b\u5148\u751f\u8bf4\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u4e24\u5bb6\u516c\u53f8\u7684\u8463\u4e8b\u4f1a\u90fd\u5e0c\u671b CISO \u5411 CEO \u62a5\u544a\u3002 Voya Financial \u7684 CISO Raj Badhwar \u5411\u516c\u53f8\u7684 CIO \u6c47\u62a5\u5de5\u4f5c\uff0c\u5e76\u7ba1\u7406\u7740\u81ea\u5df1\u7684\u5de5\u7a0b\u56e2\u961f\u3002\u4ed6\u8fd8\u7ecf\u5e38\u5411 Voya \u8463\u4e8b\u4f1a\u4ecb\u7ecd\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u7b49\u7f51\u7edc\u5a01\u80c1\u3002\u968f\u7740\u7f51\u7edc\u653b\u51fb\u53d8\u5f97\u66f4\u52a0\u7a81\u51fa\uff0c\u5df4\u5fb7\u74e6\u5c14\u5148\u751f\u8868\u793a\uff0c\u4ed6\u8ba4\u4e3a\u9996\u5e2d\u4fe1\u606f\u5b89\u5168\u5b98\u5c06\u4e0e\u9996\u5e2d\u6267\u884c\u5b98\u66f4\u5bc6\u5207\u5730\u5408\u4f5c\u3002\u6839\u636e\u4e13\u6ce8\u4e8e\u7f51\u7edc\u5b89\u5168\u7684\u62db\u8058\u516c\u53f8 Hitch Partners 3 \u6708\u4efd\u53d1\u5e03\u7684\u4e00\u9879\u8c03\u67e5\uff0c\u4e0e\u79c1\u8425\u516c\u53f8\u7684\u540c\u884c\u76f8\u6bd4\uff0c\u4e0a\u5e02\u516c\u53f8\u7684 CISO \u66f4\u6709\u53ef\u80fd\u5411 CIO \u62a5\u544a\u3002 Hitch Partners \u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u7ba1\u7406\u5408\u4f19\u4eba Michael Piacente \u8868\u793a\uff0c\u5982\u679c\u7f51\u7edc\u5b89\u5168\u8981\u6c42\u653e\u7f13\u6216\u963b\u788d\u4e86 CIO \u76d1\u7763\u7684\u6280\u672f\u9879\u76ee\uff0c\u8fd9\u4e24\u4e2a\u89d2\u8272\u4e4b\u95f4\u53ef\u80fd\u4f1a\u51fa\u73b0\u7d27\u5f20\u5173\u7cfb\u3002 Piacente \u5148\u751f\u8bf4\uff0c\u8bb8\u591a CISO \u804c\u4f4d\u7684\u5019\u9009\u4eba\u5bf9\u5411 CIO \u62a5\u544a\u7684\u5de5\u4f5c\u4e0d\u611f\u5174\u8da3\u3002 \u201cCISO \u9700\u8981\u80fd\u591f\u8bf4\u8fd9\u4e0d\u662f\u4fdd\u62a4\u6211\u4eec\u4f01\u4e1a\u7684\u65b9\u5f0f\u3002\u4ed6\u4eec\u4e0d\u80fd\u8ba9 CIO \u4ee5\u4efb\u4f55\u65b9\u5f0f\u6709\u5f71\u54cd\u529b\uff0c\u201d\u4ed6\u8bf4\u3002", "note_en": "As companies face growing hacking risks, corporate cybersecurity chiefs are earning more money compared with last year, but in many cases are still reporting to IT leaders.\n  Many companies that previously didn\u2019t have chief information security officers have hired one in the past few years, driving the need for professionals with experience, technical skills and business knowledge, experts say. Security leaders with these qualifications can be difficult to find, which has pushed salaries higher.\n  CISOs in the U.S. earned a median salary of $509,000 this year, compared with $473,000 in 2020, according to a new survey of 354 CISOs, published Thursday by executive search firm  Heidrick &amp; Struggles International  Total compensation, including equity grants and bonuses, rose to $936,000 from $784,000 in 2020. Last year\u2019s survey included responses from 372 CISOs.\n  \u201cThere\u2019s a lot more demand and the supply hasn\u2019t exactly increased,\u201d said Omar Khawaja, CISO at Pittsburgh-based Highmark Health. Mr. Khawaja said he has seen several community colleges, local banks and other companies create a CISO position in recent years.\n    High-profile ransomware attacks have caused corporate executives and boards to focus more on cybersecurity, Mr. Khawaja said. \u201cThere\u2019s a very tangible and direct business disruption. It\u2019s hard to ignore,\u201d he said.\n    Competition to hire a limited pool of experienced cybersecurity professionals means that smaller businesses may have to compromise, hiring someone at a lower salary without all the experience desired, said Errol Weiss, chief security officer at the Health Information Sharing and Analysis Center a nonprofit group that shares information about cybersecurity threats between healthcare companies.\n  \u201cWe\u2019ve got so many unfilled positions out there, it\u2019s just not possible to find that experienced CISO,\u201d he said.\n  Cyberattacks  on hospitals and healthcare companies increased during the coronavirus pandemic, adding pressure and security-budget demands at a time when staff were already struggling.\n    Thirty-eight percent of CISOs report to their companies\u2019 chief information officer, making it the most common reporting relationship, according to the Heidrick &amp; Struggles survey. However, some companies are moving away from cybersecurity leaders reporting to their chief information officer, said Matt Aiello, partner and leader of the global cybersecurity practice at Heidrick &amp; Struggles. In two recent hiring searches, for example, companies initially wanted to recruit a CISO who would report one level away from the CEO but ended up hiring someone who will report directly to the CEO, Mr. Aiello said. At both companies, the boards of directors wanted the CISO to report to the CEO, he added.\n  Raj Badhwar, CISO at  Voya FInancial  reports to the company\u2019s CIO, and runs his own engineering teams. He also presents frequently to Voya\u2019s board about cyber threats such as ransomware attacks. As cyberattacks become more prominent, Mr. Bhadwar said he thinks CISOs will work more closely with CEOs.\n  CISOs at publicly traded companies are much more likely to report to the CIO compared with their counterparts at privately held firms, according to a survey published in March by cybersecurity-focused recruiting firm Hitch Partners. There can be tension between the two roles if cybersecurity requirements slow down or impede a technology project overseen by the CIO, said Michael Piacente, co-founder and managing partner at Hitch Partners.\n  Many candidates for CISO positions aren\u2019t interested in a job reporting to a CIO, Mr. Piacente said. \u201cThe CISO needs to be able to say this is not the way to secure our enterprise. They can\u2019t have the CIO be influential in any way,\u201d he said.", "posttime": "2021-07-30 19:07:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u98ce\u9669,rising,ciso", "title": "\u9762\u5bf9\u4e0d\u65ad\u4e0a\u5347\u7684\u52d2\u7d22\u8f6f\u4ef6\u98ce\u9669\uff0c\u5bfb\u6c42\u7f51\u7edc\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u7684\u516c\u53f8\u6b63\u5728\u652f\u4ed8\u66f4\u9ad8\u7684\u85aa\u6c34\u5e76\u63d0\u4f9b\u66f4\u591a\u7684\u81ea\u4e3b\u6743", "title_en": "Faced with rising ransomware risks, companies seeking cybersecurity professionals are paying higher salaries and offering more autonomy", "transed": 1, "url": "https://www.wsj.com/articles/cybersecurity-chiefs-are-in-high-demand-as-companies-face-rising-hacking-threats-11627551000?mod=djemalertNEWS", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u98ce\u9669", "rising", "ciso"]}, {"category": "", "categoryclass": "", "imagename": "366fd75ce0fa75a6f823987d4604800d.jpg", "infoid": 1070612, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566\uff0c7 \u6708 30 \u65e5\uff08\u8def\u900f\u793e\uff09\u2014\u2014\u4e3b\u8981\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6240\u5e01\u5b89\u5468\u4e94\u8868\u793a\uff0c\u5b83\u5c06\u9010\u6b65\u51cf\u5c11\u5176\u5728\u6b27\u6d32\u7684\u671f\u8d27\u548c\u884d\u751f\u4ea7\u54c1\u4ea7\u54c1\uff0c\u6b64\u4e3e\u662f\u5728\u76d1\u7ba1\u673a\u6784\u65bd\u52a0\u524d\u6240\u672a\u6709\u7684\u538b\u529b\u4e4b\u540e\u505a\u51fa\u7684\u3002\u8be5\u4ea4\u6613\u6240\u5728\u5176\u7f51\u7ad9\u4e0a\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u4ece\u5373\u65e5\u8d77\uff0c\u5fb7\u56fd\u3001\u610f\u5927\u5229\u548c\u8377\u5170\u7684\u5e01\u5b89\u7528\u6237\u5c06\u65e0\u6cd5\u5f00\u8bbe\u65b0\u7684\u671f\u8d27\u6216\u884d\u751f\u4ea7\u54c1\u8d26\u6237\u3002\u5e01\u5b89\u8868\u793a\uff0c\u8fd9\u4e9b\u56fd\u5bb6/\u5730\u533a\u7684\u7528\u6237\u5c06\u6709 90 \u5929\u7684\u65f6\u95f4\u5173\u95ed\u672a\u5e73\u4ed3\u5934\u5bf8\u3002\u6b64\u4e3e\u6b63\u503c\u6765\u81ea\u5305\u62ec\u82f1\u56fd\u3001\u5fb7\u56fd\u3001\u9999\u6e2f\u548c\u610f\u5927\u5229\u5728\u5185\u7684\u4e16\u754c\u5404\u5730\u91d1\u878d\u5f53\u5c40\u5bf9\u5e01\u5b89\u65bd\u52a0\u8d8a\u6765\u8d8a\u5927\u7684\u538b\u529b\u3002\u9605\u8bfb\u66f4\u591a \u5728\u53f2\u65e0\u524d\u4f8b\u7684\u6253\u51fb\u884c\u52a8\u4e4b\u540e\uff0c\u5e01\u5b89\u5468\u4e00\u8868\u793a\u5c06\u505c\u6b62\u63d0\u4f9b\u6d89\u53ca\u6fb3\u5143\u3001\u6b27\u5143\u548c\u82f1\u9551\u7684\u52a0\u5bc6\u8d27\u5e01\u4fdd\u8bc1\u91d1\u4ea4\u6613\u3002\u9605\u8bfb\u66f4\u591a \u8be5\u4ea4\u6613\u6240\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u66fe\u8868\u793a\uff0c\u5728\u76d1\u7ba1\u673a\u6784\u6253\u51fb\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u5e73\u53f0\u7684\u201c\u80a1\u7968\u4ee3\u5e01\u201d\u4ea7\u54c1\u540e\uff0c\u5b83\u505c\u6b62\u9500\u552e\u4e0e\u80a1\u7968\u76f8\u5173\u7684\u6570\u5b57\u4ee3\u5e01\u3002\u9605\u8bfb\u66f4\u591a", "note_en": "LONDON, July 30 (Reuters) - Major cryptocurrency exchange Binance said on Friday it would wind down its futures and derivatives products offerings across Europe, a move that comes after unprecedented pressure from regulators.\n Binance users in Germany, Italy and the Netherlands will, with immediate effect, not be able to open new futures or derivatives products accounts, the exchange said in a statement on its website.\n Users from these countries will, from a date to be announced later, have 90 days to close their open positions, Binance said.\n The move comes amid growing pressure on Binance from financial authorities across the world, including Britain, Germany, Hong Kong and Italy.  read more\n In the wake of the unprecedented crackdown, Binance said on Monday it would stop offering cryptocurrency margin trading involving the Australian dollar, euro and sterling.   read more\n The exchange had said earlier this month it stopped selling digital tokens linked to shares, after regulators cracked down on the cryptocurrency exchange platform&#39;s &#34;stock tokens&#34; offerings.   read more", "posttime": "2021-07-30 19:06:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ea4\u6613,\u65e5\u671f,close,\u8868\u793a", "title": "\u5e01\u5b89\u8868\u793a\uff0c\u5728\u76d1\u7ba1\u538b\u529b\u4e0b\uff0c\u5b83\u5c06\u505c\u6b62\u5728\u6b27\u6d32\u7684\u671f\u8d27\u548c\u884d\u751f\u54c1\u4ea4\u6613\uff1b\u7528\u6237\u5c06\u6709 90 \u5929\u7684\u65f6\u95f4\u4ece\u7a0d\u540e\u6307\u5b9a\u7684\u65e5\u671f\u5f00\u59cb\u5173\u95ed", "title_en": "Binance says it will wind down futures and derivatives trading in Europe, amid regulatory pressure; users will have 90 days to close from a date specified later", "transed": 1, "url": "https://www.reuters.com/technology/crypto-exchange-binance-wind-down-futures-derivatives-offerings-europe-2021-07-30/", "via": "", "real_tags": ["\u4ea4\u6613", "\u65e5\u671f", "close", "\u8868\u793a"]}, {"category": "", "categoryclass": "", "imagename": "731284fa214e06122a77861c38d516b5.png", "infoid": 1070611, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e24\u79cd\u4ee4\u724c\u6a21\u5f0f\u89e3\u51b3\u4e86\u81f3\u5c11 80% \u7684\u5b89\u5168\u4ee4\u724c\u7528\u4f8b\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5c06\u60a8\u7684\u58f0\u660e\u5b58\u50a8\u5728\u672a\u52a0\u5bc6\u7684\u9875\u811a\u4e2d\u800c\u4e0d\u662f\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\u6765\u89e3\u51b3\u672a\u52a0\u5bc6\u7684\u5bf9\u79f0\u5bc6\u94a5\u8eab\u4efd\u9a8c\u8bc1\u3002 PASERK \u65e8\u5728\u4e3a\u8fd9\u4e9b\u60c5\u51b5\u63d0\u4f9b\u7b54\u6848\uff0c\u5e76\u4e3a PASETO \u5bc6\u94a5\u7684\u7f16\u7801\u63d0\u4f9b\u4e00\u81f4\u7684\u6807\u51c6\u3002\u5176\u4e2d [version] \u662f\u4e00\u4e2a\u6574\u6570\uff0c[data] \u662f\uff08\u901a\u5e38\u662f base64url \u7f16\u7801\u7684\uff09\u6709\u6548\u8d1f\u8f7d\u6570\u636e\uff0c\u800c [type] \u662f\u4e0b\u8868\u4e2d\u7684\u4e00\u9879\uff1a PASERK \u7684\u7248\u672c\u5fc5\u987b\u4e0e\u5176\u4f7f\u7528\u7684 PASETO \u7684\u7248\u672c\u5339\u914d\u4ee5\u3002\u4f8b\u5982\uff0c\u4e00\u4e2ak2.local\u3002 PASERK \u5fc5\u987b\u4e0e v2.local \u4e00\u8d77\u4f7f\u7528\u3002\u660e\u786e\u4e0d\u5141\u8bb8\u8de8\u7248\u672c\u652f\u6301\u3002\u4f5c\u4e3a\u8bbe\u8ba1\u6807\u51c6\u4e4b\u4e00\uff0cPASERK \u4e0e\u5176\u5173\u8054\u7684 PASETO \u4e00\u8d77\u53d1\u9001\u5230\u5e26\u5916\uff0c\u6216\u5305\u542b\u5728 PASETO \u7684\u9875\u811a\u4e2d\u5fc5\u987b\u662f\u5b89\u5168\u7684\u3002\u5f53\u9875\u811a\u4e2d\u4e0d\u5305\u542b PASERK \u65f6\uff0c\u7528\u6237\u5e94\u8be5\u5728\u9875\u811a\u4e2d\u5305\u542b PASERKID\uff08\u6216\u8005\uff0c\u5728 PASETO \u7684 v3/v4 \u4e2d\uff0c\u4f5c\u4e3a\u9690\u5f0f\u65ad\u8a00\uff09\u3002", "note_en": "These two token modes solve at least 80% of use cases for secure tokens. You caneven solve  unencrypted symmetric-key authentication by storing your claims inthe unencrypted footer, rather than encrypting them.\n   PASERK aims to provide an answer for these circumstances, as well as provide aconsistent standard for the encoding of PASETO keys.\n    Where  [version] is an integer,  [data] is the ( typically base64url-encoded)payload data, and  [type] is one of the items in the following table:\n \n The version of a PASERK  MUST match the version of the PASETO it&#39;s used with.For example, a  k2.local. PASERK must be used with  v2.local. tokens.Cross-version support is explicitly  NOT permitted.\n  As one of the design criteria, it must be safe for PASERKs to be sent out-of-bandwith its associated PASETO, or included in the footer of a PASETO.\n When PASERKs are not included in the footer, users  SHOULD include the PASERKID in the footer (or, in v3/v4 of PASETO, as an implicit assertion).", "posttime": "2021-07-30 19:06:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e73\u53f0,platform,paseto", "title": "Paserk\uff1a\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u5e8f\u5217\u5316\u5bc6\u94a5", "title_en": "Paserk: Platform Agnostic SERialized Keys", "transed": 1, "url": "https://github.com/paseto-standard/paserk", "via": "", "real_tags": ["\u5e73\u53f0", "platform", "paseto"]}, {"category": "", "categoryclass": "", "imagename": "69a80ebe4467a09d5b5ca6bd9e5284e0.jpg", "infoid": 1070610, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u62b5\u8fbe\u7684\u4fc4\u7f57\u65af\u6a21\u5757\u7684\u5f15\u64ce\u65e0\u610f\u4e2d\u542f\u52a8\u540e\uff0c\u56fd\u9645\u7a7a\u95f4\u7ad9 (ISS) \u53d8\u5f97\u4e0d\u7a33\u5b9a\u3002 \u201c\u4efb\u52a1\u63a7\u5236\u5c0f\u7ec4\u7ea0\u6b63\u4e86\u884c\u52a8\uff0c\u6240\u6709\u7cfb\u7edf\u90fd\u5728\u6b63\u5e38\u8fd0\u884c\uff0c\u201d\u7f8e\u56fd\u5b87\u822a\u5c40\u8bf4\u3002\u8fd9\u662f\u901a\u8fc7\u6fc0\u6d3b\u56fd\u9645\u7a7a\u95f4\u7ad9\u5176\u4ed6\u6a21\u5757\u4e0a\u7684\u63a8\u8fdb\u5668\u6765\u5b8c\u6210\u7684\u3002\u76ee\u524d\u6b63\u5728\u8fdb\u884c\u8c03\u67e5\u3002\u7f8e\u56fd\u548c\u4fc4\u7f57\u65af\u5b98\u5458\u5f3a\u8c03\uff0c\u7a7a\u95f4\u7ad9\u4e0a\u7684\u4e03\u540d\u673a\u7ec4\u4eba\u5458\u4ece\u672a\u5904\u4e8e\u4efb\u4f55\u5371\u9669\u4e4b\u4e2d\u3002\u6545\u969c\u53d1\u751f\u5728 Nauka \u6a21\u5757\u4e8e\u5468\u56db\u4e0e\u56fd\u9645\u7a7a\u95f4\u7ad9\u5bf9\u63a5\u4e09\u5c0f\u65f6\u540e\uff0c\u7ecf\u8fc7\u516b\u5929\u7684\u5730\u7403\u98de\u884c\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u5b98\u5458\u8868\u793a\uff0cNauka \u7684\u55b7\u6c14\u5f0f\u98de\u673a\u5728\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4 12 \u70b9 34 \u5206\uff08\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4 16 \u70b9 45 \u5206\uff09\u5f00\u59cb\u65e0\u6307\u4ee4\u53d1\u5c04\uff0c\u201c\u4f7f\u7a7a\u95f4\u7ad9\u504f\u79bb\u59ff\u6001 45 \u5ea6\u201d\u3002\u4fc4\u7f57\u65af Zvezda \u822a\u6bb5\u548c Progress \u8d27\u8f6e\u968f\u540e\u505a\u51fa\u53cd\u5e94\uff0c\u5c06\u7a7a\u95f4\u7ad9\u63a8\u56de\u6b63\u786e\u7684\u6307\u5411\u914d\u7f6e\u3002\u4e8b\u4ef6\u5728\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4 13 \u70b9 29 \u5206\u7ed3\u675f\u3002\n\u7f8e\u56fd\u5b87\u822a\u5c40\u56fd\u9645\u7a7a\u95f4\u7ad9\u9879\u76ee\u7ecf\u7406\u4e54\u5c14\u00b7\u8499\u5854\u5c14\u5df4\u8bfa (Joel Montalbano) \u8bf4\uff1a\u201c\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u662f\u4efb\u52a1\u63a7\u5236\u98de\u884c\u56e2\u961f\u7684\u51fa\u8272\u5de5\u4f5c\u3002\u201d \u201c\u90a3\u4e9b\u5bb6\u4f19\u518d\u6b21\u6210\u4e3a\u6447\u6eda\u660e\u661f\uff0c\u8ba9\u6211\u4eec\u91cd\u65b0\u83b7\u5f97\u4e86\u59ff\u6001\u63a7\u5236\u3002\u8fd9\u4e5f\u5411\u4f60\u5c55\u793a\u4e86\u6211\u4eec\u62e5\u6709\u591a\u4e48\u5f3a\u5927\u7684\u8f66\u8f86\uff0c\u4ee5\u53ca\u6211\u4eec\u5e94\u5bf9\u8fd9\u4e9b\u7a81\u53d1\u4e8b\u4ef6\u3001\u4ece\u5b83\u4eec\u4e2d\u6062\u590d\u5e76\u7ee7\u7eed\u524d\u8fdb\u7684\u80fd\u529b\uff0c\u201d\u4ed6\u544a\u8bc9\u8bb0\u8005\u3002\u5728\u4e8b\u4ef6\u53d1\u751f\u671f\u95f4\uff0c\u4e0e\u56fd\u9645\u7a7a\u95f4\u7ad9\u5de5\u4f5c\u4eba\u5458\u7684\u901a\u4fe1\u4e2d\u65ad\u4e86\u4e24\u6b21\uff0c\u5206\u522b\u662f\u56db\u5206\u949f\u548c\u4e03\u5206\u949f\u3002\u7136\u800c\uff0c\u7f8e\u56fd\u673a\u6784\u8868\u793a\u5b87\u822a\u5458\u662f\u5b89\u5168\u7684\u3002\u5b83\u8865\u5145\u8bf4\uff0c\u4ed6\u4eec\u201c\u771f\u7684\u6ca1\u6709\u611f\u89c9\u5230\u4efb\u4f55\u8fd0\u52a8\u201d\u3002\u8fd9\u4e00\u4e8b\u6545\u8feb\u4f7f\u7f8e\u56fd\u5b87\u822a\u5c40\u548c\u6ce2\u97f3\u516c\u53f8\u63a8\u8fdf\u4e86\u5468\u4e94\u5bf9\u6ce2\u97f3\u516c\u53f8 Starliner \u592a\u7a7a\u8231\u8fdb\u884c\u7684\u65e0\u4eba\u9a7e\u9a76\u8bd5\u98de\uff0c\u8be5\u592a\u7a7a\u8231\u65e8\u5728\u672a\u6765\u642d\u8f7d\u5b87\u822a\u5458\u3002 \u201c\u6211\u4eec\u5e0c\u671b\u7ed9\u56fd\u9645\u7a7a\u95f4\u7ad9\u8ba1\u5212\u65f6\u95f4\u6765\u8bc4\u4f30\u4eca\u5929\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u786e\u5b9a\u539f\u56e0\u5e76\u786e\u4fdd\u4ed6\u4eec\u771f\u7684\u51c6\u5907\u597d\u652f\u6301 Starliner \u7684\u53d1\u5c04\uff0c\u201d\u7f8e\u56fd\u5b87\u822a\u5c40\u5546\u4e1a\u4e58\u5458\u8ba1\u5212\u7ecf\u7406\u53f2\u8482\u592b\u65af\u8482\u5947\u89e3\u91ca\u8bf4\u3002 \u201c\u73b0\u5728\u6700\u65e9\u7684\u673a\u4f1a\u662f 8 \u6708 3 \u65e5\u661f\u671f\u4e8c\uff0c\u8fd9\u5c06\u662f\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4 13:20\uff08\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4 17:20\uff09\u7684\u53d1\u5c04\u30021300 \u4e07\u957f\u300120 \u5428\u7684 Nauka \u65e9\u4e9b\u65f6\u5019\u8fde\u63a5\u5230\u8f68\u9053\u5e73\u53f0\u7684\u540e\u90e8\uff0c\u8fde\u63a5\u4e0e\u8f66\u7ad9\u4e0a\u7684\u5176\u4ed6\u4e3b\u8981\u4fc4\u7f57\u65af\u6bb5\u3002\n\u8be5\u6a21\u5757\u672c\u5e94\u5728 2007 \u5e74\u4e0b\u6c34\uff0c\u4f46\u8be5\u8239\u4e00\u518d\u5ef6\u8bef\uff0c\u90e8\u5206\u539f\u56e0\u662f\u9884\u7b97\u56f0\u96be\uff0c\u4e5f\u56e0\u4e3a\u5de5\u7a0b\u5e08\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5927\u91cf\u6280\u672f\u95ee\u9898\u3002\u5373\u4f7f\u5728\u4e00\u5468\u524d\u4ece\u54c8\u8428\u514b\u65af\u5766\u7684\u62dc\u79d1\u52aa\u5c14\u822a\u5929\u53d1\u5c04\u573a\u53d1\u5c04\u5347\u7a7a\u540e\uff0c\u5b83\u4e5f\u9047\u5230\u4e86\u63a8\u8fdb\u95ee\u9898\uff0c\u9700\u8981\u83ab\u65af\u79d1\u7684\u7ba1\u5236\u5458\u91c7\u53d6\u53d8\u901a\u529e\u6cd5\u3002\u65b0\u6a21\u5757\u5c06\u663e\u7740\u589e\u52a0\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u53ef\u5c45\u4f4f\u4f53\u79ef\uff0c\u4f7f\u5176\u589e\u52a0 70 \u7acb\u65b9\u7c73\u3002\u5b87\u822a\u5458\u5c06\u5229\u7528\u989d\u5916\u7684\u7a7a\u95f4\u8fdb\u884c\u5b9e\u9a8c\u548c\u50a8\u5b58\u8d27\u7269\u3002\u4ed6\u4eec\u8fd8\u5c06\u628a\u5b83\u7528\u4f5c\u4f11\u606f\u533a\uff0c\u5b83\u8fd8\u6709\u53e6\u4e00\u4e2a\u5395\u6240\u4f9b\u5de5\u4f5c\u4eba\u5458\u5728\u8f66\u7ad9\u4f7f\u7528\u3002\u6b64\u5916\uff0c\u8be5\u6a21\u5757\u8fd8\u5e26\u6709\u4e00\u4e2a\u7531\u6b27\u6d32\u822a\u5929\u5c40 (Esa) \u63d0\u4f9b\u7684\u5927\u578b\u673a\u68b0\u81c2 (ERA)\u3002\u8fd9\u4e2a 11m \u957f\u7684\u88c5\u7f6e\u5c06\u80fd\u591f\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u4fc4\u7f57\u65af\u7aef\u7684\u6240\u6709\u5730\u65b9\u8fd0\u884c\u3002\u5728\u201c\u8098\u201d\u5173\u8282\u7684\u5e2e\u52a9\u4e0b\uff0c\u5b83\u5c06\u901a\u8fc7\u624b\u5728\u624b\u4e0a\u79fb\u52a8\u6765\u6539\u53d8\u4f4d\u7f6e\u3002\u7eb3\u4e4c\u5361\u7684\u5b89\u88c5\u6070\u9022\u4fc4\u7f57\u65af\u4e00\u76f4\u5728\u8d28\u7591\u5176\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u9879\u76ee\u4e2d\u7684\u672a\u6765\u89d2\u8272\u3002\n\u83ab\u65af\u79d1\u5b98\u5458\u6700\u8fd1\u8b66\u544a\u79f0\uff0c\u4ed6\u4eec\u7684\u4e00\u4e9b\u5728\u8f68\u786c\u4ef6\u5df2\u7ecf\u8d85\u8fc7 20 \u5e74\uff0c\u5e76\u6697\u793a\u8be5\u56fd\u53ef\u80fd\u4f1a\u5728 2025 \u5e74\u9000\u51fa\u7a7a\u95f4\u7ad9\u3002\u4fc4\u7f57\u65af\u5bf9\u52a0\u5165\u7f8e\u56fd\u9886\u5bfc\u7684\u6708\u7403\u5e73\u53f0\u51e0\u4e4e\u6ca1\u6709\u5174\u8da3\uff0c\u79f0\u4e3a\u7f51\u5173\uff0c\u5c06\u5728\u672c\u5341\u5e74\u665a\u4e9b\u65f6\u5019\u7ec4\u88c5\u3002", "note_en": "The International Space Station (ISS) was destabilised after engines of a newly arrived Russian module inadvertently fired up.\n &#34;Mission control teams corrected the action and all systems are operating normally,&#34;  US space agency Nasa said.\n This was done by activating thrusters on other modules of the ISS. An investigation is now under way.\n US and Russian officials stressed that the seven crew members aboard the space station were never in any danger.\n The malfunction happened three hours after the Nauka module docked with the ISS on Thursday, following an eight-day flight from Earth.\n Nasa officials said Nauka&#39;s jets started firing uncommanded at 12:34 EDT (16:45 GMT) &#34;moving the station 45 degrees out of attitude&#34;.\n The Russian Zvezda segment and a Progress freighter then responded to push the station back into its correct pointing configuration. The incident was over by 13:29 EDT.\n &#34;What we saw today was just an awesome job by the mission control flight teams,&#34; said Joel Montalbano, Nasa&#39;s ISS programme manager.\n &#34;Those guys were rock stars again and got us back in attitude control. That also shows you what a robust vehicle we have, and our ability to take these contingencies, recover from them and move on,&#34; he told reporters.\n Communications with the ISS crew were lost for two periods, of four minutes and seven minutes, during the incident. However, the US agency said that the astronauts were safe. They &#34;really didn&#39;t feel any movement&#34;, it added.\n   The mishap forced Nasa and Boeing to push back Friday&#39;s uncrewed test flight of Boeing&#39;s Starliner capsule, a vehicle intended to carry astronauts in the future.\n &#34;We wanted to give the ISS programme time to assess what had happened today, to determine the cause and make sure that they were really ready to support the Starliner launch,&#34; explained Steve Stich, the manager of Nasa&#39;s commercial crew programme.\n &#34;Right now the earliest opportunity would be Tuesday, 3 August, which would be a 13:20 EDT (17:20 GMT) launch.\n   The 13m-long, 20-tonne Nauka was earlier attached to the rear of the orbiting platform, linking up with the other major Russian segments on the station.\n The module should have launched in 2007, but the vessel suffered repeated slips in schedule, in part because of budget difficulties but also because engineers encountered a raft of technical problems during development.\n Even after it launched from the Baikonur Cosmodrome in Kazakhstan a week ago, it experienced propulsion issues that required workarounds from controllers in Moscow.\n  The new module will result in a significant boost in habitable volume for the ISS, raising it by 70 cubic metres.\n Cosmonauts will use the extra space to conduct experiments and to store cargo. They&#39;ll also use it as a rest area, and it has another toilet for crew to use on the station.\n In addition, the module carries with it a large robotic arm (ERA) supplied by the European Space Agency (Esa).\n This 11m-long device will be able to operate all around the Russian end of the ISS. With the aid of an &#34;elbow&#34; joint, it will shift position by moving hand over hand.\n Nauka&#39;s installation comes just as Russia has been questioning its future role in the ISS project.\n Moscow officials recently warned about the more-than-20-year age of some of their on-orbit hardware and intimated the country could pull out of the station in 2025. And Russia has shown little interest in joining the US-led lunar platform, known as the Gateway, which will be assembled later this decade.", "posttime": "2021-07-30 19:03:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u6a21\u5757,module,\u7a7a\u95f4\u7ad9", "title": "\u4fc4\u7f57\u65af\u6a21\u5757\u4e8b\u6545\u7834\u574f\u4e86\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u7a33\u5b9a", "title_en": "Russian module mishap destabilises International Space Station", "transed": 1, "url": "https://www.bbc.co.uk/news/science-environment-58021394", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u6a21\u5757", "module", "\u7a7a\u95f4\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070607, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u5728\u5de5\u4f5c\u4e2d\uff0c\u6211\u6b63\u5728\u7f16\u5199 bash \u811a\u672c\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u9700\u8981\u83b7\u53d6 Kubernetes \u8282\u70b9\u7684\u72b6\u6001\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u6b63\u5728\u8fd0\u884c\u6b64\u547d\u4ee4\uff1a\u4f5c\u4e3a\u811a\u672c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f7f\u7528 cut \u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u6765\u63d0\u53d6\u7b2c\u4e8c\u5217\u7684\u503c\uff1a#!/bin/bash result = $(kubectl get nodes node-0 | tail -n 1 ) state = $( echo $result | cut -d &#39; &#39; -f2 ) echo $state \u5728\u7b2c\u4e09\u884c\uff0c\u6211\u5c06 kubectl get nodes node-0 \u7684\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230\u5c3e\u90e8\u5e76\u4ec5\u5b58\u50a8\u8f93\u51fa\u7684\u7b2c\u4e8c\u884c\uff0c\u56e0\u4e3a\u7b2c\u4e00\u884c\u5305\u542b\u5217\u6807\u9898\u5e76\u4e14\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6ca1\u6709\u7528\u3002\u5728\u7b2c 4 \u884c\uff0c\u6211\u4f7f\u7528 cut \u547d\u4ee4\u6309\u5b57\u7b26\u7a7a\u95f4\u62c6\u5206\u5355\u8bcd\uff0c\u7531 -d &#39; &#39; \u6807\u5fd7\u6307\u793a\uff0c\u5e76\u63d0\u53d6\u7b2c\u4e8c\u5217\u7684\u503c\uff0c\u7531 -f2 \u6807\u5fd7\u6307\u793a\u3002\u5f53\u6211\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u6211\u770b\u5230\u4e86\u9884\u671f\u7684\u8f93\u51fa\uff1a\u4f46\u662f\uff0cshellcheck \u62b1\u6028\u811a\u672c\u7684\u7b2c 4 \u884c\uff08\u5b83\u4e5f\u62b1\u6028\u6700\u540e\u4e00\u884c\uff0c\u4f46\u8fd9\u4e0e\u672c\u6587\u65e0\u5173\uff09\uff1a\u5728 test.sh \u7b2c 4 \u884c\uff1astate=$ (echo $result | cut -d &#39; &#39; -f2) ^-- SC2086\uff1a\u53cc\u5f15\u53f7\u4ee5\u9632\u6b62\u901a\u914d\u548c\u5206\u8bcd\u3002\n\u4f46\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u6211\u73b0\u5728\u6240\u62e5\u6709\u7684\u53ea\u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8f93\u51fa\u3002\u4e3a\u4e86\u8c03\u8bd5\u8fd9\u4e2a\uff0c\u6211\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6253\u5370\u4e86 $result \u7684\u503c\uff1a\u6211\u590d\u5236\u4e86\u8fd9\u4e2a\u5e76\u8fd0\u884c\u5b83\u76f4\u63a5\u5728 bash shell \u4e0a\u526a\u5207 -d &#39; &#39; -f2 \u3002\u6211\u5f97\u5230\u4e86\u9884\u671f\u7684\u8f93\u51fa\u2014\u2014\u5c31\u7eea\u3002 $ result=&quot;node-0 Ready &lt;none&gt; 3d v1.11.1&quot;$ state=$(echo &quot;${result}&quot; | cut -d &#39; &#39; -f2)$ echo $stateReady \u6211\u80fd\u591f\u5f97\u5230\u60f3\u8981\u7684\u8f93\u51fa\u65f6\u95f4\u3002\u6211\u5728\u6211\u516c\u53f8\u7684 Slack \u4e2d\u8be2\u95ee\uff0c\u6700\u7ec8\u53d1\u73b0\u5982\u679c\u6211\u76f4\u63a5\u5728 shell \u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ result=$(kubectl get nodes node-0 | tail -n 1)$ echo &quot;$result&quot;node-0 Ready &lt;none&gt; 3d v1.11.1 \u6ce8\u610f\u533a\u522b\u4e86\u5417\uff1f\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e $result \u5468\u56f4\u5b58\u5728\u53cc\u5f15\u53f7\u3002\u5f53\u6211\u4eec\u5c06\u53d8\u91cf\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u65f6\uff0c\u6211\u4eec\u662f\u5728\u5f3a\u5236 bash \u6309\u539f\u6837\u6253\u5370\u53d8\u91cf\u5e76\u5f15\u7528 linuxdocumentation \u9879\u76ee\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7\u4fdd\u7559\u6240\u6709\u5305\u542b\u7684\u5b57\u7b26\u7684\u5b57\u9762\u503c\uff0c\u9664\u4e86\u7f8e\u5143\u7b26\u53f7\u3001\u53cd\u5f15\u53f7\uff08\u5411\u540e\u5355\u5f15\u53f7\uff0c`` ) \u548c\u53cd\u659c\u6760\u3002\n\u73b0\u5728\u95ee\u9898\u5df2\u7ecf\u786e\u5b9a\uff0c\u89e3\u51b3\u65b9\u6848\u5f88\u7b80\u5355\u2014\u2014\u5728\u4f7f\u7528 cut \u4e4b\u524d\u9700\u8981\u6324\u51fa\u5217\u4e4b\u95f4\u7684\u989d\u5916\u95f4\u8ddd\uff1a\u6211\u4ece\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u5b66\u5230\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u6559\u8bad\u662f\uff0c\u5f53\u5904\u7406\u5b57\u7b26\u4e32\u65f6\uff0c\u7eaf\u6587\u672c\u683c\u5f0f\u4e0d\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 kubectl \u53ef\u4ee5\u8f93\u51fa yaml \u548c json\u3002\u6211\u66f4\u559c\u6b22 json\uff0c\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u7528\u8089\u773c\u89e3\u6790\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528 jq \u4ee5\u7f16\u7a0b\u65b9\u5f0f\u64cd\u4f5c json \u8f93\u51fa\u3002\u56e0\u6b64\uff0c\u6211\u80fd\u591f\u5c06\u6211\u7684\u811a\u672c\u6700\u5c0f\u5316\u4e3a\u4e00\u884c\uff1a-o json \u6807\u5fd7\u6307\u793a Kubernetes API \u8fd4\u56de\u54cd\u5e94 json\uff0c\u6211\u4eec\u5c06\u7ed3\u679c\u901a\u8fc7\u7ba1\u9053\u4f20\u9012\u7ed9 jq \u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u5176\u4e2d\u8fc7\u6ee4\u5668\u7279\u5b9a\u4e8e Kubernetes\u3002\u901a\u5e38\u8ba4\u4e3a\u5c06 bash \u53d8\u91cf\u5305\u88c5\u5728 {} \u5468\u56f4\u662f\u4e00\u79cd\u5f88\u597d\u7684\u505a\u6cd5\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 echo ${result} \u4ee3\u66ff echo &quot;$result&quot; \u66f4\u5b89\u5168\uff0c\u53ef\u4ee5\u5e2e\u52a9\u907f\u514d\u6d89\u53ca\u5b57\u7b26\u4e32\u6269\u5c55\u7684\u9519\u8bef\u3002\u5982\u679c\u4f60\u5bf9 Kubernetes \u611f\u5174\u8da3\uff0ckubectl \u8fd8\u652f\u6301 -ojsonpath\uff0c\u5b83\u53ef\u4ee5\u8ba9\u4f60\u76f4\u63a5\u6307\u5b9a json \u8fc7\u6ee4\u5668\u5e76\u8fd4\u56de\u6700\u5c0f\u5316\u7684\u8f93\u51fa\u800c\u4e0d\u662f\u6574\u4e2a json \u5b57\u7b26\u4e32\u3002\u6211\u5c1d\u8bd5\u4f7f\u7528 jsonpath \u4f46\u5c31\u6211\u800c\u8a00\uff0c\u6211\u6ce8\u610f\u5230\u8d1f\u7d22\u5f15\u5f15\u8d77\u4e86\u6050\u614c\u3002\u6211\u8fd8\u6ca1\u6709\u5728 Kubernetesproject \u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u4e0a\u63d0\u4ea4\u5173\u4e8e\u6b64\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u6253\u7b97\u5728\u6211\u4f7f\u7528\u6700\u65b0\u7684 Kubernetes \u7ec4\u4ef6\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u540e\u63d0\u4ea4\u3002", "note_en": "Last week at work I was working on a bash script, part of which neededto get the status of a Kubernetes node. Specifically I was runningthis command:\n    As part of the script I was using  cut to extract the value of the second column by doing:\n #!/bin/bash result = $(kubectl get nodes node-0 |  tail  -n 1 ) state = $( echo  $result |  cut  -d  &#39; &#39;  -f2 ) echo  $state\n  On line three, I pipe the output of  kubectl get nodes node-0 to tail and store only the second line of the output since the firstline contains the column headings and is not useful in this case.\n On line four, I use the  cut command to split the words by thecharacter  space, indicated by the  -d &#39; &#39; flag and extract thevalue of the second column, indicated by the  -f2 flag. When I ranthe script I saw the output as expected:\n  However,  shellcheck complained aboutthe line number four of the script (it complained about the last lineas well, but that\u2019s not relevant to this post):\n In test.sh line 4:state=$(echo $result | cut -d &#39; &#39; -f2) ^-- SC2086: Double quote to prevent globbing and word splitting.\n    But to my surprise, all I had now was an empty string as output. Todebug this I printed the value of  $result by:\n     I copied this and ran piped it to  cut -d &#39; &#39; -f2 directly on thebash shell. And I got the expected output \u2013  Ready.\n  $ result=&#34;node-0 Ready &lt;none&gt; 3d v1.11.1&#34;$ state=$(echo &#34;${result}&#34; | cut -d &#39; &#39; -f2)$ echo $stateReady\n I was able to get the desired output this time. I asked in mycompany\u2019s Slack and eventually found out that if I ran the followingin the shell directly:\n $ result=$(kubectl get nodes node-0 | tail -n 1)$ echo &#34;$result&#34;node-0 Ready &lt;none&gt; 3d v1.11.1\n   Notice the difference yet? The difference is the presence of doublequotes around  $result. When we wrap a variable around double quoteswe are forcing bash to print the variable as is and to quote the linuxdocumentation project:\n Using double quotes the literal value of all characters enclosed ispreserved, except for the dollar sign, the backticks (backwardsingle quotes, ``) and the backslash.\n    Now that the problem had been identified, the solution was easy \u2013 Ineeded to squeeze out the extra spacing between the columns beforeusing  cut on it:\n  Another important lesson that I learned from this exercise is thatwhen manipulating strings plain text format isn\u2019t the bestoption.  kubectl can output in both  yaml and  json. I prefer json as it\u2019s easier to parse by the naked eye and I can use jq to manipulate  json outputprogrammatically. As a result I was able to minimize my script to asingle line:\n  The  -o json flag instructs the Kubernetes API to return the reponsein  json and we pipe the result to  jq for further processing, wherethe filters are specific to Kubernetes.\n  It\u2019s generally considered good practice to wrap bash variablesaround  {}. So instead of  echo &#34;$result&#34;, using  echo ${result}is safer and can help avoid bugs involving string expansion inbash.\n  If you\u2019re into Kubernetes,  kubectl also supports the  -ojsonpath that lets you directly specify the json filter and returnsthe minimized output instead of the entire json string. I tried using jsonpath but in my case I noticed that negative indexing raised a panic. I haven\u2019t yet filed an issue about this on the Kubernetesproject\u2019s issue tracker and intend to do so once I\u2019ve verified thiswith the latest Kubernetes components.", "posttime": "2021-07-30 18:16:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a7a\u683c,strings,\u8f93\u51fa", "title": "Bash \u4e2d\u7684\u7a7a\u683c\u548c\u5b57\u7b26\u4e32", "title_en": "Whitespaces and Strings in Bash", "transed": 1, "url": "https://indradhanush.github.io/blog/whitespaces-and-strings-in-bash/", "via": "", "real_tags": ["\u7a7a\u683c", "strings", "\u8f93\u51fa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070606, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7ef4\u57fa\u7684\u76ee\u7684\u662f\u4e3a\u5e0c\u671b\u5728 DPS8M \u6a21\u62df\u5668\u4e0b\u8fd0\u884c Multics \u7684\u7528\u6237\u63d0\u4f9b\u4fe1\u606f\u3002\u867d\u7136\u5b58\u5728\u5173\u4e8e Multics \u548c DPS8M \u6a21\u62df\u5668\u4e3b\u9898\u7684\u5176\u4ed6\u8d44\u6e90\uff0c\u4f46\u6b64 Wiki \u4e13\u95e8\u5173\u6ce8\u5982\u4f55\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u6a21\u62df\u5668\u548c Multics\u3001\u5982\u4f55\u914d\u7f6e\u548c\u7ba1\u7406\u5b83\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u5b83\u4e0d\u540c\u4e8e\u5173\u6ce8\u6a21\u62df\u5668\u672c\u8eab\u7684 DPS8M \u76f8\u5173\u7ad9\u70b9\uff0c\u4e5f\u4e0d\u540c\u4e8e\u63d0\u4f9b Multics \u5386\u53f2\u3001\u4fe1\u606f\u3001\u6000\u65e7\u7b49\u80cc\u666f\u4fe1\u606f\u7684 Multics \u76f8\u5173\u7ad9\u70b9\u3002\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\uff0c\u672c\u7f51\u7ad9\u94fe\u63a5\u5230\u8fd9\u4e9b\u5176\u4ed6\u7f51\u7ad9\uff0c\u800c\u4e0d\u662f\u590d\u5236\u4fe1\u606f\u3002\u8981\u5f00\u59cb\u5e76\u5728\u60a8\u7684\u4e3b\u673a\u7cfb\u7edf\u4e0a\u5b89\u88c5 Multics\uff0c\u8bf7\u9075\u5faa\u5165\u95e8\u94fe\u63a5\u3002 MR12.7 \u4e8e 2021 \u5e74 7 \u6708 28 \u65e5\u53d1\u5e03\u3002\u53ef\u4ee5\u5728\u8f6f\u4ef6\u53d1\u5e03\u516c\u544a (SRB) \u4e2d\u627e\u5230\u6b64\u7248\u672c\u4e2d\u7684\u65b0\u529f\u80fd\uff1a\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u78c1\u5e26\u3001SRB\u3001\u8f6f\u4ef6\u5b89\u88c5\u516c\u544a SIB\uff09\u548c\u5176\u4ed6\u53d1\u5e03\u5de5\u4ef6\uff1a\u53d1\u5e03\u5de5\u4ef6\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230 MR12.7 \u7684\u5feb\u901f\u5165\u95e8\uff1aMR12.7 \u5feb\u901f\u5165\u95e8\uff0c\u4f46\u4ec5\u5f53\u60a8\u8fd8\u6ca1\u6709 Multics \u7cfb\u7edf\u65f6\u624d\u4f7f\u7528\u5b83\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u5219\u5ffd\u7565\u5feb\u901f\u5165\u95e8\u5e76\u6309\u5982\u4e0b\u6240\u8ff0\u5347\u7ea7\u60a8\u7684\u7cfb\u7edf\u3002\u957f\u671f\u4ee5\u6765\uff0c\u5377\u5907\u4efd\u652f\u6301\u4e00\u76f4\u5141\u8bb8\u4ece\u5377\u6c60\u4e2d\u5206\u914d\u78c1\u5e26\uff0c\u4f46\u662f\u76f4\u5230\u6b64\u7248\u672c\u4e3a\u6b62\uff0c\u6b64\u652f\u6301\u8fd8\u6ca1\u6709\u6269\u5c55\u5230\u5c42\u6b21\u7ed3\u6784\u5907\u4efd\u5b88\u62a4\u7a0b\u5e8f\u3002\u5982\u679c\u4e3a\u589e\u91cf\u3001\u8ffd\u8d76\u6216\u5b8c\u6574\u5907\u4efd\u5b88\u62a4\u8fdb\u7a0b\u8bbe\u7f6e\u548c\u914d\u7f6e\u4e86\u5377\u6c60\uff0c\u5c06\u4ece\u914d\u7f6e\u7684\u6c60\u4e2d\u5206\u914d\u78c1\u5e26\u3002\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u6c60\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6bcf\u79cd\u5907\u4efd\u7c7b\u578b\u7684\u5355\u72ec\u6c60\u3002\u6709\u5173\u5c06\u5377\u6c60\u4e0e\u5c42\u6b21\u5907\u4efd\u547d\u4ee4\u4e00\u8d77\u4f7f\u7528\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 backup_dump\u3001start_dump\u3001catchup_dump \u548c complete_dump \u547d\u4ee4\u7684\u4fe1\u606f\u6bb5\u3002\u53e6\u8bf7\u53c2\u9605 Multics \u7ba1\u7406\u3001\u7ef4\u62a4\u548c\u64cd\u4f5c\u547d\u4ee4 (GB64) \u624b\u518c\u52d8\u8bef\u8868\u4e2d\u6709\u5173\u8fd9\u4e9b\u547d\u4ee4\u7684\u66f4\u65b0\u6587\u6863 -- gb64.errata.info\u3002\n\u5728\u6b64\u7248\u672c\u4e4b\u524d\uff0c\u4e0d\u53ef\u80fd\u5305\u542b\u5386\u53f2\u6ce8\u91ca\u6765\u8ddf\u8e2a\u4fe1\u606f\u6bb5\u4e2d\u7684\u66f4\u6539\u3002\u73b0\u5728\u4f7f\u7528 history_comment (hcom) \u547d\u4ee4\u7684\u66f4\u65b0\u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u3002\u8bf7\u53c2\u9605\u901a\u8fc7\u53d1\u51fa\u547d\u4ee4\u201chelp info_seg.hcom\u201d\u5728\u4fe1\u606f\u6bb5\u4e2d\u6dfb\u52a0\u5386\u53f2\u6ce8\u91ca\u7684\u8bf4\u660e\u3002\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u7cfb\u7edf mbuild\uff0c\u53ef\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u51c6\u5907\u6dfb\u52a0\u5230\u8f6f\u4ef6\u5e93\u4e2d\u7684\u5185\u5bb9\uff0c\u6216\u5bf9\u8fd9\u4e9b\u5e93\u4e2d\u7684\u8f6f\u4ef6\u8fdb\u884c\u66f4\u6539\u3002\u8be5\u7cfb\u7edf\u6709\u52a9\u4e8e\u7f16\u8bd1\u3001\u6e90/\u5bf9\u8c61\u5b58\u6863\u66f4\u65b0\u3001\u7ed1\u5b9a\u3001\u68c0\u67e5\u5386\u53f2\u6ce8\u91ca\u3001\u6267\u884c\u6e90\u6bd4\u8f83\u4ee5\u53ca\u5b89\u88c5\u5bf9\u7cfb\u7edf\u5e93\u7684\u66f4\u6539\u3002 validate_info_seg \u547d\u4ee4\u5df2\u66ff\u6362\u4e3a verify_info \u547d\u4ee4\u3002 help_ \u5b50\u4f8b\u7a0b\u73b0\u5728\u4f7f\u7528\u65b0\u7684 info_seg_ \u5b50\u4f8b\u7a0b\u6765\u89e3\u6790\u4fe1\u606f\u6bb5\uff0c\u5e76\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u7528\u6237\u754c\u9762\u6765\u663e\u793a\u8be5\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u81ea MR12.6e \u4ee5\u6765\u7684\u65b0\u529f\u80fd\u5217\u8868\u3002\u53ef\u4ee5\u5728 SRB \u4e2d\u627e\u5230\u81ea MR12.5 \u4ee5\u6765\u65b0\u529f\u80fd\u7684\u5b8c\u6574\u5217\u8868\u3002\u4e00\u4e2a\u65b0\u7684 input_history_ I/O \u6a21\u5757\u88ab\u6dfb\u52a0\u5230 bound_video_\uff0c\u5b83\u5141\u8bb8\u8c03\u7528\u548c\u6267\u884c\u4ee5\u524d\u7684\u8f93\u5165\u884c\uff0c\u4ee5\u53ca\u641c\u7d22\u4ee5\u524d\u7684\u8f93\u5165\u884c\u3002 Multics \u89c6\u9891\u7cfb\u7edf\u63d0\u4f9b\u5728\u8f93\u5165\u65f6\u7f16\u8f91\u8f93\u5165\u884c\u7684\u529f\u80fd\u3002\u5b83\u4f7f\u7528\u7c7b\u4f3c Emacs \u7684\u952e\u7ed1\u5b9a\u6765\u7f16\u8f91\u8f93\u5165\u884c\u3002\u4f46\u662f\uff0c\u5b83\u6ca1\u6709\u63d0\u4f9b\u4fdd\u5b58\u5148\u524d\u8f93\u5165\u884c\u3001\u8c03\u7528\u8fd9\u4e9b\u884c\u4ee5\u53ca\u91cd\u65b0\u6267\u884c\u5b83\u4eec\u7684\u673a\u5236\u3002\u65b0\u7684\u8f93\u5165\u5386\u53f2\u529f\u80fd\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 input_history.info \u548c input_history_.info\u3002\u65b0\u7684\u8c03\u7528\u547d\u4ee4\u4f7f\u7528\u547d\u4ee4\u884c\u4e2d\u7ed9\u51fa\u7684\u53c2\u6570\u8c03\u7528\u5b50\u4f8b\u7a0b\u3002\u5b83\u4f7f\u7528\u58f0\u660e\u7684\u5165\u53e3\u70b9\u8c03\u7528\u5e8f\u5217\u5c06\u6bcf\u4e2a\u547d\u4ee4\u53c2\u6570\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5b50\u7a0b\u5e8f\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\uff1b\u8c03\u7528\u5b50\u7a0b\u5e8f\uff1b\u7136\u540e\u663e\u793a\u4efb\u4f55\u8f93\u51fa\u503c\u3002\u66f4\u65b0\u4e86 library_pathname (lpn) \u547d\u4ee4/\u6d3b\u52a8\u51fd\u6570\uff0c\u4ee5\u5728\u4f5c\u4e3a\u6d3b\u52a8\u51fd\u6570\u8c03\u7528\u65f6\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u8def\u5f84\u540d\u3002\u6b64\u547d\u4ee4/AF \u4e5f\u5df2\u66f4\u65b0\u4e3a\u63a5\u53d7 -container \u63a7\u5236\u53c2\u6570\u3002", "note_en": "The purpose of this wiki is to provide information to users wishing to run  Multics under the  DPS8M simulator. While other resources exist on both the subject of Multics and the DPS8M simulator, this Wiki focuses specifically on how to install the simulator and Multics on your machine, how to configure it and administer it, and then how to use it. It differs from the DPS8M-related sites whose focus of attention is on the simulator itself, and from the Multics-related sites, which provide historical, informational, nostalgic, etc. background on Multics. Where appropriate, this site links to those other sites rather than duplicate information.\n  To get started and install Multics on your host system, follow the  Getting Started link.\n    MR12.7 was released on 07/28/2021. New features in this release can be found in the Software Release Bulletin (SRB):\n  You can find the tapes, SRB, the Software Installation Bulletin SIB), and other release artifacts here:   Release Artifacts.\n You can find a QuickStart for MR12.7 here:  MR12.7 QuickStart, but only use it if you don&#39;t already have a Multics system. If you do, then ignore the QuickStart and upgrade your system as described below.\n    The Volume Backup support has long allowed tapes to beallocated from a volume pool, however up until this release,this support was not extended to the Hierarchy Backupdaemons. If a volume pool is setup and configured for theincremental, catchup, or complete backup daemons, tapes willbe allocated from the configured pool. A single pool can beused, or separate pools per backup type can be employed.\n See the info segments for the backup_dump, start_dump,catchup_dump, and complete_dump commands for more info onusing volume pools with the hierarchy backup commands. Seealso the updated documentation on these commands in theMultics Administration, Maintenance, and Operations Commands(GB64) manual errata -- gb64.errata.info.\n  Prior to this release, it wasn&#39;t possible to include historycomments to track changes in info segments. Now with anupdated version of the history_comment (hcom) command, youcan. See the instructions for adding history comments ininfo segment by issuing the command &#34;help info_seg.hcom&#34;.\n  A new subsystem, mbuild, has been introduced that helpsdevelopers prepare additions to the software libraries, orchanges to software in those libraries. This system helpswith compilation, source/object archive updating, binding,checking history comments, performing source comparisons,and installing changes to the system libraries.\n   The validate_info_seg command has been replaced with the verify_info command. The help_ subroutine now uses a new info_seg_ subroutine to parse info segments, and provides a more powerful user interface for displaying that information.\n   Following is a list of new features since MR12.6e. The full list of new features since MR12.5 can be found in the SRB.\n  A new input_history_ I/O module was added to bound_video_that allows recall and execution of previous input lines, aswell as searching for prior input lines. The Multics videosystem provides functions for editing input lines as theyare typed. It uses Emacs-like key bindings to edit inputlines. However, it provides no mechanism for savingprevious input lines, recalling those lines, and reexecutingthem. The new input history functionality does just that.See input_history.info and input_history_.info for details.\n  A new call command invokes a subroutine with arguments givenin a command line. It uses the declared entrypoint callingsequence to convert each command argument to a correspondingsubroutine parameter&#39;s data type; invokes the subroutine;then displays any output values.\n  The library_pathname (lpn) command/active function wasupdated to return all matching pathnames when invoked as anactive function. This command/AF was also updated to acceptthe -container control argument.", "posttime": "2021-07-30 18:16:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,multics", "title": "Multics MR1\u200b\u200b2.7 \u53d1\u5e03", "title_en": "Multics MR12.7 released", "transed": 1, "url": "https://multics-wiki.swenson.org/index.php/Main_Page", "via": "", "real_tags": ["\u53d1\u5e03", "multics"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070605, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u7684\u5927\u578b\u6570\u5b57\u516c\u53f8\u5360\u636e\u4e86\u4e2d\u5fc3\u5730\u4f4d\uff0c\u901a\u8fc7 ToS\uff0c\u5b83\u4eec\u5141\u8bb8\u4ed6\u4eec\u5c06\u4ed6\u4eec\u7684\u5b9e\u8df5\u548c\u4ef7\u503c\u89c2\u8f6c\u5316\u4e3a\u4e8b\u5b9e\u4e0a\u7684\uff0c\u8fd9\u662f\u6211\u4eec\u5b58\u5728\u548c\u7ecf\u6d4e\u8bb8\u591a\u65b9\u9762\u7684\u6838\u5fc3\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u5728\u8fd9\u4e9b ToS \u4e0a\u4ee5\u4e0d\u591f\u6e05\u6670\u3001\u53ef\u8bfb\u548c\u8fde\u7eed\u7684\u65b9\u5f0f\u8fdb\u884c\u4ea4\u6d41\uff0c\u800c\u4e25\u683c\u7406\u89e3 ToS \u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6f14\u53d8\u5bf9\u4e8e\u6b23\u8d4f\u8fd9\u4e9b\u6570\u5b57\u73a9\u5bb6\u7684\u5b9e\u8df5\u548c\u5fe0\u8bda\u5ea6\u81f3\u5173\u91cd\u8981\u3002\u6bcf\u4e2a\u7528\u6237\uff0c\u4ee5\u4fbf\u4ed6\u80fd\u591f\u51c6\u786e\u5730\u8bc6\u522b\u4ed6\u540c\u610f\u7684\u5185\u5bb9\u3001\u4ed6\u5171\u4eab\u7684\u6570\u636e\u3001\u4ed6\u5bf9\u670d\u52a1\u7684\u6743\u5229\u4ee5\u53ca\u4ed6\u4fdd\u7559\u7684\u6743\u5229\uff1b\u5f53\u5c40\u4ee5\u6838\u5b9e\u8fd9\u4e9b\u5408\u540c\u6846\u67b6\u4e0e\u56fd\u5bb6\u548c\u8d85\u56fd\u5bb6\u6cd5\u5f8b\u7684\u517c\u5bb9\u6027\uff0c\u7279\u522b\u662f\u5728\u540e\u8005\u53d1\u751f\u53d8\u5316\u65f6\uff1b\u76d1\u7ba1\u673a\u6784\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u8bc4\u4f30\u5e73\u53f0\u7684\u52aa\u529b\uff0c\u4f46\u4e5f\u8981\u786e\u4fdd\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u6240\u505a\u7684\u5e76\u4e14\u4ed6\u4eec\u505a\u4ed6\u4eec\u6240\u8bf4\u7684\u3002\u6839\u636e DSA \u548c DMA \u6846\u67b6\u5185\u8ba8\u8bba\u7684\u7b2c\u4e00\u4e2a\u5efa\u8bae\uff0c\u5b83\u5728\u6570\u5b57\u53c2\u4e0e\u8005\u7684\u5b9e\u8df5\u4e2d\u521b\u9020\u4e86\u900f\u660e\u5ea6\u3002", "note_en": "Large digital companies today occupy a central position which, through the ToS, allows them to transform their practices and values \u200b\u200binto de facto which are at the heart of many aspects of our existence and our economies.\n However, they communicate in an insufficiently clear, readable and continuous manner on these ToS, whereas rigorously understanding the ToS and how they have evolved over time has become essential to appreciate the practices and loyalty of these digital players.\n  each user so that he can identify precisely what he has agreed upon, the data he has shared, the rights he has yielded to the services and the rights he has retained;\n the authorities in order to verify the compatibility of these contractual frameworks with national and supranational law, in particular when the latter evolve;\n regulators so that they can assess the efforts of the platforms, but also to make sure that they say what they do and that they do what they say. It creates transparency in the practices of digital players, in line with the first recommendations discussed within the framework of the DSA and the DMA.", "posttime": "2021-07-30 18:15:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6761\u6b3e,terms,tos", "title": "\u5f00\u653e\u6761\u6b3e\u5b58\u6863 - \u9075\u5faa\u670d\u52a1\u6761\u6b3e\u7684\u66f4\u6539", "title_en": "Open Terms Archive \u2013 Follow the changes to the terms of service", "transed": 1, "url": "https://www.opentermsarchive.org/", "via": "", "real_tags": ["\u6761\u6b3e", "terms", "tos"]}, {"category": "", "categoryclass": "", "imagename": "28a5bd80163fe23ff5fb7b7874be25ed.png", "infoid": 1070604, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u641c\u7d22\u201c\u8f6c\uff01\u8f6c\uff01\u8f6c\uff01\u201d\u5728 Google \u4e0a\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u662f The Byrds \u8868\u6f14 Pete Seeger \u540c\u540d\u6b4c\u66f2\u7684 YouTube \u89c6\u9891\u3002\u4f46\u7b2c\u4e00\u4e2a\u7ed3\u679c\u662f Google \u7684\u5185\u90e8\u8ba1\u7b97\u5668\u663e\u793a\u201c241217.524881\u201d\u3002\u901a\u8fc7\u4e00\u4e9b\u5b9e\u9a8c\uff0c\u8fd9\u4e2a\u6570\u5b57\u4f3c\u4e4e\u662f $$\\frac{\\Gamma(2\\pi+1)^2}{2 \\pi} \u7684\u6570\u503c\u8fd1\u4f3c\uff0c$$\u5176\u4e2d $\\Gamma$ \u4ee3\u8868\u6b27\u62c9\u4f3d\u739b\u529f\u80fd\u3002\u6211\u6709\u70b9\u7406\u89e3\u4e3a\u4ec0\u4e48 Google \u5c06\u201cTurn\u201d\u89e3\u91ca\u4e3a\u8868\u793a $2\\pi$\uff0c\u800c\u611f\u53f9\u53f7\u8868\u793a $x\uff01 := \\Gamma(x+1)$\uff0c\u56e0\u4e3a\u8fd9\u662f\u9636\u4e58\u51fd\u6570\u5bf9\u5b9e\u6570\u7684\u63d2\u503c\u7684\u4e00\u79cd\u76f8\u5bf9\u5e38\u89c1\uff08\u867d\u7136\u4e0d\u662f\u666e\u904d\u7684\uff09\u9009\u62e9\u3002\u4f46\u5728\u90a3\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u5e0c\u671b\u8c37\u6b4c\u89e3\u91ca\u201c\u8f6c\uff01\u8f6c\uff01\u8f6c\uff01\u201d\u6765\u8868\u793a $\\Gamma(2\\pi+1)^3 \\approx 18\\, 658\\, 774\\, 329$ \u800c\u4e0d\u662f\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u3002\u4e3a\u4ec0\u4e48\u4e0d\u662f\uff1f\u4e00\u4e2a\u53ef\u80fd\u7684\u90e8\u5206\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u4f60\u641c\u7d22\u201cTurn! Turn\u201d\uff0c\u90a3\u4e48\u4f60\u4f1a\u5f97\u5230\u9884\u671f\u7684\u7ed3\u679c $7735.248 \\approx \\Gamma(2\\pi+1) 2\\pi$\u3002\u4f46\u662f\u5982\u679c\u4f60\u641c\u7d22\u201c\u8f6c\uff01\u8f6c\uff01\u201d\u90a3\u4e48\u4f60\u4e0d\u4f1a\u5f97\u5230\u9884\u671f\u7684\u7ed3\u679c $\\Gamma(2\\pi+1)^2 \\approx 1\\, 515\\, 614$\u3002\u76f8\u53cd\uff0c\u60a8\u4f1a\u5f97\u5230 195.936\uff0c\u8fd9\u4f3c\u4e4e\u662f $\\Gamma(2\\pi+1)/(2\\pi)$ \u7684\u6570\u503c\u8fd1\u4f3c\u503c\u3002\u6b64\u5916\uff0c\u8c37\u6b4c\u5c06\u8f93\u5165\u91cd\u65b0\u89e3\u6790\u4e3a\u201cTurn ! (Turn !)\u201d\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u8868\u660e\u5b83\u5c06\u7b2c\u4e8c\u4e2a\u611f\u53f9\u53f7\u89e3\u91ca\u4e3a\u9636\u4e58\u7b26\u53f7\uff0c\u4f46\u7b2c\u4e00\u4e2a\u611f\u53f9\u53f7\u8868\u793a $a \uff01 b := b/a$\uff0c\u5373\u9664\u6cd5\uff0c\u4f46\u901a\u5e38\u7684\u53c2\u6570\u987a\u5e8f\u98a0\u5012\u4e86\u3002\u5982\u679c\u8c37\u6b4c\u89e3\u91ca\u201c\u8f6c\uff01\u8f6c\uff01\u8f6c\uff01\u201d\uff0c\u8fd9\u89e3\u91ca\u4e86\u539f\u59cb\u7ed3\u679c\u3002\u7b2c\u4e00\u4e2a\u611f\u53f9\u53f7\u4ee3\u8868\u53cd\u5411\u9664\u6cd5\uff08\u8fd0\u7b97\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4e58\u6cd5\uff09\uff0c\u4f46\u540e\u4e24\u4e2a\u611f\u53f9\u53f7\u4ee3\u8868\u9636\u4e58\uff1a$$2\\pi &quot;!&quot; (((2\\pi)!)\\ ((2\\pi)!)) = \\frac{\\Gamma(2\\pi+1)^2}{2\\pi}.$$ \u8fd9\u4e2a\u7b26\u53f7\u662f $a!b := b/a$ \u6807\u51c6\uff1f\u6211\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u3002\u8c01\u80fd\u89e3\u91ca\u8c37\u6b4c\u662f\u5982\u4f55\u89e3\u6790\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\uff1f \uff08\u8fd9\u662f\u90a3\u4e9b\u5c34\u5c2c\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u5176\u4e2d\uff08\u672a\u77e5\uff09\u89e3\u51b3\u65b9\u6848\u786e\u5b9a\u95ee\u9898\u662f\u5426\u662f Math Stack Exchange \u7684\u4e3b\u9898\u3002\u5982\u679c\u6211\u6000\u7591\u8be5\u89e3\u51b3\u65b9\u6848\u786e\u5b9e\u5f52\u7ed3\u4e3a\u4e0d\u5bfb\u5e38\u7684\u6570\u5b66\u7b26\u53f7\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u5728-Math SE \u7684\u4e3b\u9898\u3002\u4f46\u5982\u679c\u89e3\u51b3\u65b9\u6848\u53ea\u662f\u4e00\u4e9b\u9ed1\u76d2\u673a\u5668\u5b66\u4e60\u9b54\u6cd5\uff0c\u90a3\u4e48\u95ee\u9898\u53ef\u80fd\u4e0d\u662f\u4e3b\u9898\u3002\u6211\u4e0d\u592a\u786e\u5b9a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u505a\u4ec0\u4e48\u3002\uff09", "note_en": "If you  search for &#34;Turn! Turn! Turn!&#34; on Google, then the second result is  this YouTube video of The Byrds performing the Pete Seeger song of that name. But the first result is Google&#39;s internal calculator displaying &#34;241217.524881&#34;. With a bit of experimentation, it appears that this number is a numerical approximation to  $$\\frac{\\Gamma(2\\pi+1)^2}{2 \\pi},$$where  $\\Gamma$ represents the Euler gamma function.\n I sort of understand why Google is interpreting &#34; Turn&#34; to mean  $2\\pi$, and the exclamation mark to mean  $x! := \\Gamma(x+1)$, as this is a relatively common ( although not universal) choice of interpolation of the factorial function to the real numbers. But in that case, I would expect Google to interpret &#34;Turn! Turn! Turn!&#34; to represent  $\\Gamma(2\\pi+1)^3 \\approx 18\\, 658\\, 774\\, 329$ instead of the expression above.  Why isn&#39;t it?\n A possible partial solution: if you search &#34;Turn! Turn&#34; then you get the expected result  $7735.248 \\approx \\Gamma(2\\pi+1) 2\\pi$. But if you search &#34;Turn! Turn!&#34; then you do  not get the expected result  $\\Gamma(2\\pi+1)^2 \\approx 1\\, 515\\, 614$. Instead, you get 195.936, which appears to be the numerical approximation of  $\\Gamma(2\\pi+1)/(2\\pi)$. Moreover, Google reparses the input as &#34;Turn ! (Turn !)&#34;. To me, this suggests that it&#39;s interpreting the second explamation mark as a factorial symbol, but the first exclamation mark to mean  $a ! b := b/a$, i.e. division but with the usual order of arguments reversed. This explains the orginal result if Google is interpreting &#34;Turn! Turn! Turn!&#34; with the first exclamation mark representing reversed division (with a lower order-of-operations precedence than multiplication) but the second two exclamation marks representing factorial: $$2\\pi &#34;!&#34; (((2\\pi)!)\\ ((2\\pi)!)) = \\frac{\\Gamma(2\\pi+1)^2}{2\\pi}.$$\n Is this notation  $a!b := b/a$ standard? I&#39;ve never seen it before. Can anyone explain how Google is parsing this string?\n (This is one of those awkward questions where the (unknown) solution determines whether or not the question is on-topic for Math Stack Exchange. If the solution does indeed come down to unusual math notation, as I suspect, then the question is on-topic for Math SE. But if the resolution is just some black-box machine learning magic, then maybe the question isn&#39;t on topic. I&#39;m not quite sure what one does in this kind of situation.)", "posttime": "2021-07-30 18:15:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6c\u52a8,turn", "title": "\u4e3a\u4ec0\u4e48\u201c\u8f6c\uff01\u8f6c\u52a8\uff01\u8f6c\u52a8\uff01\u201d\u7b49\u4e8e 241217.524881\uff1f", "title_en": "Why does \u201cTurn! Turn! Turn!\u201d equal 241217.524881?", "transed": 1, "url": "https://math.stackexchange.com/questions/4207222/why-does-turn-turn-turn-equal-241217-524881", "via": "", "real_tags": ["\u8f6c\u52a8", "turn"]}, {"category": "", "categoryclass": "", "imagename": "751a1ba43a7c214a7dda306dd0989669.jpg", "infoid": 1070603, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Google Play \u6b63\u5728\u6539\u53d8\u5176\u4e0d\u5f53\u5185\u5bb9\u653f\u7b56\uff0c\u4ee5\u7981\u6b62\u5ba3\u4f20\u201c\u751c\u871c\u7ea6\u4f1a\u201d\u6216\u201c\u6709\u507f\u6027\u5173\u7cfb\u201d\u7684\u5e94\u7528\u3002\u4ece 9 \u6708 1 \u65e5\u8d77\uff0c\u5e94\u7528\u5546\u5e97\u5c06\u7981\u6b62\u63d0\u4f9b\u201c\u7cd6\u7239\u201d\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u901a\u5e38\u6d89\u53ca\u5e74\u957f\u7684\u7537\u6027\u63d0\u4f9b\u73b0\u91d1\u548c\u793c\u7269\u4ee5\u6362\u53d6\u4e0e\u5e74\u8f7b\u5973\u6027\u7684\u5173\u7cfb\u3002\u6279\u8bc4\u8005\u8bf4\u4ed6\u4eec\u4e0e\u5356\u6deb\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u5c3d\u7ba1\u4ea4\u6362\u5e76\u4e0d\u603b\u662f\u6d89\u53ca\u6027\u3002\u4ece 4 \u6708 22 \u65e5\u8d77\uff0c\u5b83\u5c06\u8981\u6c42\u5f00\u53d1\u8005\u63d0\u4f9b\u6709\u5173\u5176\u5e94\u7528\u7a0b\u5e8f\u6536\u96c6\u3001\u4f7f\u7528\u6216\u5171\u4eab\u7684\u4e2a\u4eba\u6216\u654f\u611f\u7528\u6237\u6570\u636e\u7684\u51c6\u786e\u4fe1\u606f\u3002\u8bb0\u8005\u5728 Play \u5546\u5e97\u4e2d\u53d1\u73b0\u4e86\u8bb8\u591a\u660e\u786e\u6216\u9690\u542b\u5730\u4fc3\u8fdb\u7cd6\u7ea6\u4f1a\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u4e00\u4e9b\u5b89\u88c5\u4e86\u6570\u5341\u4e07\u6b21\u3002\u62a5\u544a\u663e\u793a\uff0c\u8c37\u6b4c\u7684\u51b3\u5b9a\u53ef\u80fd\u662f\u51fa\u4e8e\u7f8e\u56fd\u7acb\u6cd5\u7684\u52a8\u673a\uff0c\u8be5\u7acb\u6cd5\u53ef\u4ee5\u4f7f\u5e73\u53f0\u5bf9\u4fc3\u8fdb\u5356\u6deb\u7684\u5185\u5bb9\u8d1f\u8d23\u3002\u8be5\u6cd5\u5f8b\u4e8e 2018 \u5e74\u751f\u6548\uff0c\u8bb8\u591a\u5e73\u53f0\u6536\u7d27\u4e86\u5bf9\u6027\u5de5\u4f5c\u7684\u89c4\u5b9a\u3002", "note_en": "Google Play is changing its inappropriate-content policy to ban apps promoting &#34;sugar dating&#34; or &#34; compensated sexual relationships &#34;.\n From 1 September, the app store will prohibit facilitating &#34;sugar-daddy&#34; services, often involving older men offering cash and gifts in exchange for a relationship with younger women.\n Critics say they differ little from prostitution, though the exchange does not always involve sex.\n   From 22 April, it will require developers to provide accurate information about the personal or sensitive user data their apps collect, use, or share.\n Journalists have identified a number of apps in the Play Store that explicitly or implicitly facilitate sugar dating, some with hundreds of thousands of installs.\n  Reports suggest Google&#39;s decision may be motivated by US legislation that can make platforms liable for content that facilitates prostitution.\n The law, which came into effect in 2018, has seen a number of platforms tighten rules on sex work.", "posttime": "2021-07-30 17:34:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,google,\u7981\u6b62,ban,\u63d0\u4f9b", "title": "\u8c37\u6b4c\u7981\u6b62 Play \u5546\u5e97\u4e2d\u7684\u7cd6\u7239\u5e94\u7528", "title_en": "Google to ban sugar-daddy apps from Play Store", "transed": 1, "url": "https://www.bbc.com/news/technology-58011672", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u7981\u6b62", "ban", "\u63d0\u4f9b"]}, {"category": "", "categoryclass": "", "imagename": "a59237b1692d8e98bf25c14d6630b715.jpg", "infoid": 1070602, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u8fd9\u5bb6\u975e\u6d32\u7535\u4fe1\u8fd0\u8425\u5546\u5ba3\u5e03\u5df2\u4e3a\u5176\u79fb\u52a8\u8d27\u5e01\u90e8\u95e8\u83b7\u5f97\u53e6\u4e00\u7b14\u6295\u8d44\uff1a\u5361\u5854\u5c14\u6295\u8d44\u5c40 (QIA) \u7684\u9644\u5c5e\u516c\u53f8\u5361\u5854\u5c14\u63a7\u80a1\u6709\u9650\u8d23\u4efb\u516c\u53f8\u3002\u8fd9\u5bb6\u4e2d\u4e1c\u516c\u53f8\u662f\u5361\u5854\u5c14\u56fd\u7684\u4e3b\u6743\u8d22\u5bcc\u57fa\u91d1\uff0c\u8d44\u4ea7\u8d85\u8fc7 3000 \u4ebf\u7f8e\u5143\u3002\u5b83\u5c06\u901a\u8fc7\u4ece Airtel Africa \u4e8c\u6b21\u8d2d\u4e70\u80a1\u7968\uff0c\u5411 AMC BV \u6295\u8d44 2 \u4ebf\u7f8e\u5143\u3002 AMC BV \u662f Airtel Africa \u7684\u5b50\u516c\u53f8\uff0c\u4e5f\u662f Airtel Africa \u5728 14 \u4e2a\u975e\u6d32\u56fd\u5bb6\uff08\u5305\u62ec\u80af\u5c3c\u4e9a\u3001\u4e4c\u5e72\u8fbe\u548c\u5c3c\u65e5\u5229\u4e9a\uff09\u7684\u591a\u4e2a\u79fb\u52a8\u8d27\u5e01\u4e1a\u52a1\u7684\u63a7\u80a1\u516c\u53f8\u3002\u79fb\u52a8\u8d27\u5e01\u90e8\u95e8\u7ecf\u8425\u7740\u975e\u6d32\u5927\u9646\u6700\u5927\u7684\u91d1\u878d\u670d\u52a1\u4e4b\u4e00\u3002\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u5bf9\u79fb\u52a8\u94b1\u5305\u7684\u8bbf\u95ee\u3001\u5bf9\u56fd\u9645\u6c47\u6b3e\u3001\u8d37\u6b3e\u548c\u865a\u62df\u4fe1\u7528\u5361\u7684\u652f\u6301\u3002\u6839\u636e\u7535\u4fe1\u8fd0\u8425\u5546\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u6295\u8d44\u6536\u76ca\u5c06\u7528\u4e8e\u51cf\u5c11\u503a\u52a1\uff0c\u5e76\u6295\u8d44\u4e8e\u5404\u81ea\u8fd0\u8425\u56fd\u5bb6\u7684\u7f51\u7edc\u548c\u9500\u552e\u57fa\u7840\u8bbe\u65bd\u3002\u8be5\u4ea4\u6613\u5c06\u5206\u4e24\u6279\u5b8c\u6210\u2014\u2014\u7b2c\u4e00\u6b21\u5b8c\u6210\u65f6\u6295\u8d44 1.5 \u4ebf\u7f8e\u5143\uff0c\u6700\u6709\u53ef\u80fd\u5728 8 \u6708\u4efd\u5b8c\u6210\u3002\u5269\u4f59\u7684 5000 \u4e07\u7f8e\u5143\u5c06\u5728\u7b2c\u4e8c\u6b21\u6536\u76d8\u65f6\u6295\u8d44\u3002 Airtel Africa \u58f0\u79f0 QIA \u5c06\u6301\u6709\u5c11\u6570\u80a1\u6743\uff0c\u540c\u65f6\u7ee7\u7eed\u6301\u6709\u591a\u6570\u80a1\u6743\u3002\u4e0e\u5176\u4ed6\u4ea4\u6613\u4e00\u6837\uff0c\u8fd9\u7b14\u4ea4\u6613\u5728\u73b0\u91d1\u548c\u65e0\u503a\u52a1\u57fa\u7840\u4e0a\u5bf9 Airtel Africa \u7684\u4f30\u503c\u4ecd\u4e3a 26.5 \u4ebf\u7f8e\u5143\u3002\u7136\u800c\uff0c\u8fd9\u6b21\u4e0d\u540c\u7684\u662f\uff0cQIA \u6709\u6743\u4efb\u547d\u4e00\u540d\u8463\u4e8b\u8fdb\u5165 AMC BV \u7684\u8463\u4e8b\u4f1a\uff0c\u5e76\u201c\u4eab\u6709\u67d0\u4e9b\u4e60\u60ef\u4fe1\u606f\u548c\u5c11\u6570\u65cf\u88d4\u4fdd\u62a4\u6743\u201d\u3002 Airtel Africa 2021 \u5e74\u7b2c\u4e00\u5b63\u5ea6\u7684\u6700\u65b0\u62a5\u544a\u663e\u793a\u51fa\u589e\u957f\u8ff9\u8c61\u3002\u8fd9\u5bb6\u7535\u4fe1\u8fd0\u8425\u5546\u7684\u6536\u5165\u540c\u6bd4\u589e\u957f 53.7%\uff0c\u5ba2\u6237\u7fa4\u589e\u957f 24.6%\uff0c\u8fbe\u5230 2310 \u4e07\u3002\u4ea4\u6613\u989d\u589e\u957f 64.4% \u81f3 147 \u4ebf\u7f8e\u5143\uff08\u5e74\u5316 590 \u4ebf\u7f8e\u5143\uff09\uff1b EBITDA \u4e3a 6000 \u4e07\u7f8e\u5143\uff08\u5e74\u5316 2.4 \u4ebf\u7f8e\u5143\uff09\uff0c\u5229\u6da6\u7387\u4e3a 48.8%\u3002\u8be5\u516c\u53f8\u8fd8\u521b\u9020\u4e86 1.24 \u4ebf\u7f8e\u5143\u7684\u6536\u5165\uff08\u5e74\u5316 4.96 \u4ebf\u7f8e\u5143\uff09\uff0c\u800c\u5176 2021 \u5e74\u7b2c\u4e00\u5b63\u5ea6\u7684\u7a0e\u524d\u5229\u6da6\u4e3a 1.85 \u4ebf\u7f8e\u5143\u3002 QIA \u9996\u5e2d\u6267\u884c\u5b98 Mansoor bin Ebrahim Al-Mahmoud \u8868\u793a\uff0c\u4e3b\u6743\u8d22\u5bcc\u57fa\u91d1\u5bf9 Airtel Africa \u7684\u6295\u8d44\u5c06\u6709\u52a9\u4e8e\u4fc3\u8fdb\u6492\u54c8\u62c9\u4ee5\u5357\u975e\u6d32\u7684\u91d1\u878d\u5305\u5bb9\u6027\u3002 \u201cAirtel Money \u5728\u4fc3\u8fdb\u7ecf\u6d4e\u6d3b\u52a8\u65b9\u9762\u53d1\u6325\u7740\u5173\u952e\u4f5c\u7528\uff0c\u5305\u62ec\u65e0\u6cd5\u83b7\u5f97\u4f20\u7edf\u91d1\u878d\u670d\u52a1\u7684\u5ba2\u6237\u3002\u6211\u4eec\u575a\u4fe1\u5176\u5728\u672a\u6765\u51e0\u5e74\u6269\u5927\u8fd9\u4e9b\u52aa\u529b\u7684\u4f7f\u547d\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\u3002\u4eca\u5e74 2 \u6708\uff0cAirtel Africa \u9996\u6b21\u516c\u5f00\u8868\u793a\u5e0c\u671b\u51fa\u552e AMC BV \u7684\u5c11\u6570\u80a1\u6743\u4ee5\u7b79\u96c6\u73b0\u91d1\u5e76\u51fa\u552e\u90e8\u5206\u8d44\u4ea7\u3002\u968f\u540e\u7684\u4e00\u4e2a\u6708\uff0c\u5b83\u4ee5 1.19 \u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u5c06\u9a6c\u8fbe\u52a0\u65af\u52a0\u548c\u9a6c\u62c9\u7ef4\u7684\u7535\u4fe1\u5854\u51fa\u552e\u7ed9\u4e86 Helios Towers\uff0c\u5e76\u4ece\u5916\u90e8\u6295\u8d44\u8005\u90a3\u91cc\u7b79\u96c6\u4e86 5 \u4ebf\u7f8e\u5143\u3002", "note_en": "Today, the African telecoms operator has announced that it has secured another investment for its mobile money arm: Qatar Holding LLC, an affiliate of the Qatar Investment Authority (QIA) . The Middle Eastern corporation is the sovereign wealth fund of the State of Qatar with over $300 billion assets. It is set to invest $200 million into AMC BV through a secondary  purchase  of shares from Airtel Africa.\n AMC BV is an Airtel Africa subsidiary and the holding company for several of Airtel Africa\u2019s mobile money operations across 14 African countries, including Kenya, Uganda and Nigeria . The mobile money arm operates one of the largest financial services on the continent.  It provides users access to mobile wallets, support for international money transfers, loans and virtual credit cards .\n   According to a statement released by the telecoms operator, the proceeds of the investment will  be used  to reduce debt and invest in network and sales infrastructure in the respective operating countries . The deal will close in two tranches \u2014 $150 million invested at the first close, most likely in \u00a0August. The remaining $50 million will  be invested  at second close.\n Airtel Africa claims QIA will hold a minority stake while it continues to hold the majority stake. This transaction still values Airtel Africa at $2.65 billion on a cash and debt-free basis like other deals.  However , what\u2019s different this time is that QIA  is entitled  to appoint a director to AMC BV\u2019s board and \u201cto certain customary information and minority protection rights .\u201d\n Airtel Africa\u2019s most recent report for Q1 2021 shows signs of growth. The telecoms operator saw a year on year revenue growth of 53.7%, pushed by a 24.6% growth in customer base to 23.1 million. Transaction value went up 64.4% to $14.7 billion ($59 billion annualised); and EBITDA stood at $60 million ($240 million annualised) at a margin of 48.8%.  The company also generated $124 million in revenue ($496 million annualised), while its profits before tax year-on-year for Q1 2021 stood at $185 million .\n Mansoor bin Ebrahim Al-Mahmoud, CEO of QIA, said the sovereign\u2019s wealth fund investment in Airtel Africa would help promote financial inclusion in Sub-Saharan Africa .  \u201cAirtel Money plays a critical role in facilitating economic activity, including for customers without access to traditional financial services . We  firmly  believe in its mission to expand these efforts over the coming years,\u201d he added.\n In February, Airtel Africa first made it known that it wanted to sell a minority stake in AMC BV to raise cash and sell off some assets.  The  subsequent  month, it sold off telecommunication towers in Madagascar and Malawi to Helios Towers for $119 million and raised  $500 million from outside investors.", "posttime": "2021-07-30 17:34:19", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "africa,\u6295\u8d44", "title": "Airtel Africa \u4e3a\u5176\u79fb\u52a8\u8d27\u5e01\u4e1a\u52a1\u4ece QIA \u83b7\u5f97\u989d\u5916 2 \u4ebf\u7f8e\u5143", "title_en": "\n\t\t\t\tAirtel Africa gets an extra $200M for its mobile money business from QIA\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/07/30/airtel-africa-gets-an-extra-200m-for-its-mobile-money-business-from-qia/", "via": "", "real_tags": ["africa", "\u6295\u8d44"]}, {"category": "", "categoryclass": "", "imagename": "8a7cd4c8336cb5d76fd5ee39ff5bb271.png", "infoid": 1070601, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u5c06\u6570\u636e\u63d0\u4f9b\u7ed9 MAC \u6216\u6570\u5b57\u7b7e\u540d\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u54c8\u5e0c\u51fd\u6570\u7684\u534f\u8bae\u65e0\u6cd5\u786e\u4fdd\u6574\u4e2a\u534f\u8bae\u7684\u67d0\u4e9b\u5c5e\u6027\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u89c4\u8303\u5316\u653b\u51fb\u3002\u89c4\u8303\u5316\u653b\u51fb\u7684\u6559\u79d1\u4e66\u793a\u4f8b\u662f\u9488\u5bf9\u8bf8\u5982 MD5 \u4e4b\u7c7b\u7684\u54c8\u5e0c\u51fd\u6570\u7684\u957f\u5ea6\u6269\u5c55\u653b\u51fb\u2014\u2014\u5b83\u4ee5\u7834\u574f Flickr API \u7b7e\u540d\u7684\u5b89\u5168\u6027\u800c\u95fb\u540d\u3002\u4f46\u662f\u8fd8\u6709\u4e00\u79cd\u66f4\u6709\u8da3\u7684\u653b\u51fb\u9700\u8981\u8003\u8651\uff0c\u5b83\u4f1a\u5f71\u54cd\u5b89\u5168\u4ee4\u724c\u683c\u5f0f\uff08PASETO\u3001DSSE \u7b49\uff09\u7684\u8bbe\u8ba1\uff0c\u5e76\u4e14\u7ecf\u5e38\u51fa\u73b0\u5728\u4eba\u4eec\u8bd5\u56fe\u6269\u5c55\u8ba4\u8bc1\u52a0\u5bc6 (AE) \u7684\u57fa\u672c\u6982\u5ff5\u4ee5\u5305\u62ec\u989d\u5916\u7684\u8ba4\u8bc1\uff08\u4f46\u672a\u52a0\u5bc6\uff09 ) \u6570\u636e\uff08\u4ece\u800c\u4ea7\u751f AEAD \u6a21\u5f0f\uff09\u3002\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u57fa\u672c\u7684 AE \u5b9a\u4e49\u5f00\u59cb\uff0c\u7136\u540e\u5c06\u5176\u6269\u5c55\u5230 AEAD\uff0c\u7136\u540e\u6253\u7834\u6211\u4eec\u7684\u6269\u5c55\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5176\u505a\u5f97\u66f4\u597d\u7684\u7b56\u7565\u3002\u6211\u4eec\u7ecf\u5e38\u5c06\u8fd9\u79cd\u5f62\u72b6\u79f0\u4e3a\u201cCBC+HMAC\u201d\uff08\u5c3d\u7ba1\u8fd9\u4e0e\u79f0\u4e3a CBC-MAC \u7684\u975e\u5e38\u4e0d\u540c\u7684\u60f3\u6cd5\u6df7\u6dc6\u4e86\u4e00\u4e9b\u9519\u522b\u5b57\uff09\u3002\u5f53 CBC+HMAC \u4e0e\u5177\u6709 256 \u4f4d\u5bc6\u94a5\u548c HMAC-SHA2 \u7684 AES \u5206\u7ec4\u5bc6\u7801\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5b83\u53d8\u4e3a AES-256-CBC+HMAC-SHA256\u3002\u591a\u5634\u554a\uff01\u5728\u73b0\u4ee3\u8bbe\u8ba1\u4e2d\uff0cAES-CTR \u901a\u5e38\u6bd4 AES-CBC \u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u60a8\u4e0d\u5fc5\u5904\u7406\u586b\u5145\uff08\u6216\u586b\u5145\u9884\u8a00\u673a\uff09\u3002\n\u73b0\u5728\u5927\u591a\u6570\u7cfb\u7edf\u66f4\u559c\u6b22 GCM \u800c\u4e0d\u662f CBC+HMAC \u6216 CTR+HMAC\u3002\u6211\u4e0d\u559c\u6b22 AES-GCM\uff08\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u7528\u4f8b\u662f\u201c\u6ca1\u6709\u786c\u4ef6\u52a0\u901f\u7684\u652f\u6301\u5e73\u53f0\u201d\uff09\uff0c\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5b83\u51e0\u4e4e\u4e0d\u662f\u6700\u7cdf\u7cd5\u7684\u9009\u62e9\u3002 AES-GCM\u662f\u4e13\u7528\u7684AEAD\u6a21\u5f0f\uff0c\u800cCBC+HMAC\u548cCTR+HMAC\u53ea\u63d0\u4f9bAE\u3002\u9644\u52a0\u6570\u636e\uff08AEAD \u4e2d\u7684 AD\uff09\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5c06\u52a0\u5bc6\u7684\u6709\u6548\u8d1f\u8f7d\uff08\u5bc6\u6587 + \u8eab\u4efd\u9a8c\u8bc1\u6807\u7b7e\uff09\u7ed1\u5b9a\u5230\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u3002\u8fd9\u5bf9\u4e8e\u51cf\u8f7b\u6df7\u6dc6\u4ee3\u7406\u653b\u51fb\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u989d\u5916\u6570\u636e\u5e76\u672a\u52a0\u5bc6\u3002 \uff08\u81f3\u5c11\uff0c\u5728\u8fd9\u4e2a\u7ea7\u522b\u4e0a\uff1b\u901a\u8fc7 HTTPS \u8fdb\u884c\u901a\u4fe1\u53ef\u80fd\u662f\u660e\u667a\u7684\uff01\uff09\u751f\u6210\u4e00\u4e2a\u4e0e\u5757\u5bc6\u7801\u7684\u5757\u5927\u5c0f\u76f8\u7b49\u7684\u968f\u673a\u968f\u673a\u6570\u3002 \uff08AES \u4e3a 16 \u5b57\u8282\u3002\uff09\u89e3\u5bc6\u57fa\u672c\u4e0a\u53cd\u5411\u8fd0\u884c\u7b2c 3 \u6b65\u548c\u7b2c 2 \u6b65\uff1a\u91cd\u65b0\u8ba1\u7b97 MAC\uff08\u4ee5\u6052\u5b9a\u65f6\u95f4\uff01\uff09\uff0c\u89e3\u5bc6\u5bc6\u6587\uff0c\u8fd4\u56de\u660e\u6587\u3002\u6269\u5c55\u6b64\u8bbe\u8ba1\u4ee5\u652f\u6301\u5176\u4ed6\u5df2\u9a8c\u8bc1\u6570\u636e\u7684\u6700\u660e\u663e\u65b9\u6cd5\u662f\u5c06\u5176\u9644\u52a0\u5230\u5bc6\u6587\u4e2d\u3002\u751f\u6210\u4e00\u4e2a\u4e0e\u5757\u5bc6\u7801\u7684\u5757\u5927\u5c0f\u76f8\u7b49\u7684\u968f\u673a\u968f\u673a\u6570\u3002 \uff08AES \u4e3a 16 \u4e2a\u5b57\u8282\u3002\uff09\n\u8ba1\u7b97 IV \u7684 HMAC-SHA2 \u8f93\u51fa\uff0c\u7136\u540e\u662f\u6765\u81ea\u6b65\u9aa4 2 \u7684\u5bc6\u6587\uff0c\u7136\u540e\u662f\u9644\u52a0\u7684\u5df2\u9a8c\u8bc1\u6570\u636e\u3002\u5047\u8bbe\u60a8\u6784\u5efa\u4e86\u8fd9\u4e2a\u6269\u5c55\u534f\u8bae\u6765\u52a0\u5bc6\u770b\u8d77\u6765\u50cf URI \u5b57\u7b26\u4e32\u7684\u6709\u6548\u8d1f\u8f7d\uff0c\u4f46\u60f3\u8981\u5c06\u4ee4\u724c\u7ed1\u5b9a\u5230\u7ed9\u5b9a\u7684\u6d4f\u89c8\u5668\u4f1a\u8bdd\uff0c\u56e0\u6b64\u60a8\u4f7f\u7528 HTTP User-Agent \u6807\u5934\u4f5c\u4e3a AAD\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u806a\u660e\u7684\u653b\u51fb\uff1a\u5982\u679c\u4f60\u53ef\u4ee5\u5c06\u5b57\u8282\u4ece\u6709\u6548\u8d1f\u8f7d\u8f6c\u79fb\u5230\u4f60\u7684\u7528\u6237\u4ee3\u7406\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4e2d\uff0c\u5b83\u4eec\u5c06\u4ea7\u751f\u76f8\u540c\u7684 HMAC \u6807\u7b7e\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230\u5305\u542b\u5728\u5176 HTTP \u8bf7\u6c42\u4e2d\u7684 User-Agent \u6765\u622a\u65ad\u5c3d\u53ef\u80fd\u591a\u7684\u6709\u6548\u8d1f\u8f7d\u3002 ...\u65e0\u9700\u4f7f\u73b0\u6709\u7684\u8eab\u4efd\u9a8c\u8bc1\u6807\u7b7e\u65e0\u6548\u2014\u2014\u53ea\u9700\u786e\u4fdd\u5c06\u5bc6\u6587\u7684\u6700\u540e 16 \u4e2a\u5b57\u8282\u6dfb\u52a0\u5230\u60a8\u7684\u7528\u6237\u4ee3\u7406\u5e76\u4ece\u6709\u6548\u8d1f\u8f7d\u4e2d\u5220\u9664\u5373\u53ef\u3002\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u4efb\u4f55\u65f6\u5019\u60a8\u5c06\u591a\u90e8\u5206\u6d88\u606f\u8f93\u5165\u6563\u5217\u51fd\u6570\u65f6\uff0c\u5982\u679c\u60a8\u4e0d\u5c0f\u5fc3\u5c06\u5176\u8f93\u5165\u6563\u5217\u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u5c31\u53ef\u80fd\u5f15\u53d1\u7410\u788e\u7684\u51b2\u7a81\u3002\u8fd9\u663e\u7136\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u54c8\u5e0c\u51fd\u6570\u662f\u786e\u5b9a\u6027\u7684\uff1a\u76f8\u540c\u7684\u8f93\u5165\u5c06\u59cb\u7ec8\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\u3002\u5982\u679c\u60a8\u53ef\u4ee5\u63a7\u5236\u591a\u90e8\u5206\u6d88\u606f\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u90e8\u5206\uff0c\u60a8\u53ef\u4ee5\u78b0\u649e\u8f93\u5165\u2014\u2014\u4ece\u800c\u5728\u8f93\u51fa\u4e2d\u521b\u5efa\u78b0\u649e\u3002\n\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u4efb\u4f55\u4f9d\u8d56\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u534f\u8bae\uff0c\u4f46\u6700\u660e\u663e\u7684\u662f\uff0cHMAC \u548c\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u90fd\u5728\u8303\u56f4\u5185\u3002\u4f46\u662f\uff0c\u201c\u5c0f\u5fc3\u201d\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462\uff1f\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5b89\u5168\u7684\u4f8b\u5b50\u3002\u65e9\u4e9b\u65f6\u5019\u6211\u63d0\u5230\u4e86 PASETO \u548c DSSE\u3002\u4ed6\u4eec\u90fd\u6709\u201cPAE\u201d\u7b97\u6cd5\u7684\u6982\u5ff5\uff0c\u65e8\u5728\u9632\u6b62\u89c4\u8303\u5316\u653b\u51fb\u3002\u5982\u679c\u60a8\u8f93\u5165\u4e0d\u540c\u6570\u91cf\u7684\u788e\u7247\uff0c\u5219\u8ba1\u6570\uff08\u524d 8 \u4e2a\u5b57\u8282\uff09\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u5c06\u6570\u636e\u4ece\u4e00\u5757\u79fb\u52a8\u5230\u53e6\u4e00\u5757\uff0c\u60a8\u5c06\u4e3a\u4e24\u5757\u751f\u6210\u4e0d\u540c\u7684\u957f\u5ea6\uff0c\u8fd9\u4e0d\u4f1a\u5bf9\u6563\u5217\u51fd\u6570\u4ea7\u751f\u8f93\u5165\u51b2\u7a81\u3002\u6ca1\u6709\u957f\u5ea6\u524d\u7f00\uff0c\u6211\u4eec\u4e0e\u4e0a\u9762\u5b9a\u4e49\u7684 CTR+HMAC \u6269\u5c55\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u5982\u679c\u6ca1\u6709\u8ba1\u6570\u524d\u7f00\uff0c\u5c31\u6709\u53ef\u80fd\u4e22\u5f03\u788e\u7247\uff0c\u7136\u540e\u5728\u5176\u4ed6\u4eba\u7684\u6709\u6548\u8f7d\u8377\u4e2d\u5305\u542b\u4e00\u4e2a\u865a\u62df\u7684\u201c\u957f\u5ea6\u201d\u4ee5\u521b\u5efa\u8f93\u5165\u78b0\u649e\u3002\n\u6beb\u4e0d\u5947\u602a\uff0c\u6211\u53d1\u73b0 DSSE \u5bf9 PAE \u7684\u5b9a\u4e49\u6709\u4e9b\u5947\u602a\u3002\u4f7f\u5b83\u4eec\u514d\u4e8e\u89c4\u8303\u5316\u653b\u51fb\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u7247\u6bb5\u7684\u6570\u91cf\u662f\u6052\u5b9a\u7684\u3002\u5982\u679c\u7247\u6bb5\u7684\u6570\u91cf\u662f\u53ef\u53d8\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c KEYID \u53ef\u9009\u5730\u5305\u542b\u5728\u7b7e\u540d\u4e2d\uff0c\u4f46\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4ed6\u4eec\u5fd8\u8bb0\u59cb\u7ec8\u5305\u542b\u786c\u7f16\u7801\u7684 0 \u957f\u5ea6\uff09\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6784\u5efa\u4e24\u4e2a\u4e0d\u540c\u7684\u6d88\u606f\u6765\u51fb\u200b\u200b\u8d25\u4ed6\u4eec\u7684 PAE \u98ce\u683c\u5728\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u4e2d\u4ea7\u751f\u76f8\u540c\u7684\u6563\u5217\u3002\u8fd9\u662f\u56e0\u4e3a DSSE \u5b9a\u4e49\u4e2d\u4e0d\u5305\u62ec\u4ef6\u6570\u3002 \uff08\u5982\u679c\u5b83\u4eec\u66fe\u7ecf\u652f\u6301\u53ef\u53d8\u6570\u91cf\u7684\u7ec4\u4ef6\uff0c\u5e76\u4e14\u672a\u80fd\u5728\u7b7e\u540d\u4e2d\u5305\u542b\u8ba1\u6570\uff0c\u5b83\u4eec\u5c06\u5f88\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3002\uff09 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 PAE\uff1f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e00\u79cd\u660e\u786e\u7684\u65b9\u5f0f\u6765\u5e8f\u5217\u5316\u4e24\u4e2a\u5b57\u6bb5\uff0cpayloadType \u548c payload\u3002 PAE \u5df2\u7ecf\u88ab\u8bb0\u5f55\u5e76\u4e14\u8db3\u591f\u597d\u3002\u65e0\u9700\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50\u3002 \u2026\u2026\u7136\u800c\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u4f7f\u7528 PASETO \u5bf9 PAE \u7684\u201c\u5df2\u7ecf\u8bb0\u5f55\u5e76\u4e14\u8db3\u591f\u597d\u201d\u7684\u5b9a\u4e49\u3002\u653b\u51fb\u8fd9\u79cd\u8bbe\u8ba1\u7684\u552f\u4e00\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\u7784\u51c6\u6574\u6570\u6ea2\u51fa\uff0c\u8fd9\u5c06\u9700\u8981\u53d1\u9001\u81f3\u5c11 2^63 \u4e2a\u5b57\u8282 - \u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u60a8\u66f4\u6709\u53ef\u80fd\u5bf9\u76ee\u6807\u8fdb\u884c DDoS \u653b\u51fb\u800c\u4e0d\u662f\u6210\u529f\u3002\n\u89c4\u8303\u5316\u653b\u51fb\u5728\u4e13\u5bb6\u5708\u4e4b\u5916\u7684\u52a0\u5bc6\u534f\u8bae\u8bbe\u8ba1\u4e2d\u6ca1\u6709\u5f97\u5230\u5e7f\u6cdb\u7406\u89e3\u6216\u5e7f\u6cdb\u8ba4\u53ef\u7684\u98ce\u9669\uff08\u5c3d\u7ba1\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u4eba\u5458\u81f3\u5c11\u77e5\u9053\u7279\u5b9a\u5b9e\u4f8b\uff0c\u5373\u957f\u5ea6\u6269\u5c55\uff09\u3002\u7f3a\u4e4f\u77e5\u8bc6\u8f6c\u79fb\u7684\u90e8\u5206\u539f\u56e0\u662f\u6240\u6709 AEAD \u6a21\u5f0f\u90fd\u901a\u8fc7\u8bbe\u8ba1\u6765\u9632\u5fa1\u5b83\uff0c\u5e76\u4e14\u5927\u591a\u6570\u624b\u5de5\u9a8c\u8bc1\u7684\u52a0\u5bc6\u7ed3\u6784\u4e0d\u4f1a\u6253\u6270\u989d\u5916\u7684\u9a8c\u8bc1\u6570\u636e\uff0c\u5927\u591a\u6570\u81ea\u5236\u7684\u52a0\u5bc6\u534f\u8bae\u751a\u81f3\u4e0d\u8fdb\u884c\u9a8c\u8bc1\u4ed6\u4eec\u7684\u5bc6\u6587\u6b63\u786e\uff0c\u5e76\u4e14\u2026\u2026\u6211\u5e0c\u671b\u4f60\u660e\u767d\u8fd9\u4e00\u70b9\u3002\u4e00\u76f4\u6709\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002\u6307\u671b\u4e0d\u662f\u8fd9\u4e2a\u7279\u5b9a\u9886\u57df\u7684\u4e13\u4e1a\u4e13\u5bb6\u7684\u4eba\u90fd\u80fd\u628a\u4ed6\u4eec\u90fd\u505a\u5bf9\uff0c\u5766\u7387\u5730\u8bf4\u662f\u4e0d\u5408\u7406\u7684\u3002", "note_en": "Canonicalization Attacks occur when a protocol that feeds data into a hash function used in a MAC or Digital Signature calculation fails to ensure some property that\u2019s expected of the overall protocol.\n The textbook example of a canonicalization attack is the  length-extension attack against hash functions such as MD5\u2013which famously broke the security of  Flickr\u2019s API signatures.\n But there\u2019s a more interesting attack to think about, which affects the design of security token formats ( PASETO,  DSSE, etc.) and comes up often when folks try to extend basic notions of authenticated encryption (AE) to include additional authenticated (but unencrypted) data (thus yielding an AEAD mode).\n Let\u2019s start with a basic AE definition, then extend it to AEAD poorly, then break our extension. Afterwards, we can think about strategies for doing it better.\n   We often refer to this shape as \u201cCBC+HMAC\u201d (although this is a few typos away from being confused with a very different idea called  CBC-MAC).\n When CBC+HMAC is used with the AES block cipher with 256-bit keys and HMAC-SHA2, it becomes AES-256-CBC+HMAC-SHA256. What a mouthful!\n  In modern designs, AES-CTR is often preferable to AES-CBC, since you don\u2019t have to deal with padding (or padding oracles).\n Most systems these days prefer GCM over CBC+HMAC or CTR+HMAC.  I don\u2019t like AES-GCM (especially if your use-case is \u201csupport platforms without hardware acceleration\u201d), but it\u2019s hardly the worst choice for most applications. AES-GCM is a dedicated AEAD mode, while CBC+HMAC and CTR+HMAC merely provide AE.\n   The main purpose of Additional Data (the AD in AEAD) is to bind an encrypted payload (ciphertext + authentication tag) to a given context. This is extremely helpful in mitigating  Confused Deputy attacks.\n Critically, this additional data is not encrypted. (At least, on this level; it\u2019s probably wise to communicate over HTTPS!)\n   Generate a random nonce equal to the block size of your block cipher. (16 bytes for AES.)\n Decryption basically runs steps 3 and 2 in reverse: Recalculate the MAC (in constant-time!), decrypt ciphertext, return plaintext.\n The most  obvious way to extend this design to support additional authenticated data is to append it to the ciphertext.\n  Generate a random nonce equal to the block size of your block cipher. (16 bytes for AES.)\n  Calculate the HMAC-SHA2 output of the IV followed by the ciphertext from step 2, then the additional authenticated data.\n   Let\u2019s say you built this extended protocol to encrypt a payload that looks like a URI string, but wanted to bind the token to a given browser session, so you use the HTTP User-Agent header as the AAD.\n   So here\u2019s the clever attack: If you can shift bytes from the payload into the prefix of your User-Agent string, they\u2019ll produce the same HMAC tag.\n Attackers can truncate as much of the payload as they want by prepending it to the User-Agent included in their HTTP request.\n     \u2026without invalidating the existing authentication tag\u2013just by ensuring that the last 16 bytes of ciphertext are prepended to your User-Agent and removed from the payload.\n More broadly, any time you have a multi-part message being fed into a hash function, if you aren\u2019t careful with how you feed it into the hash function, you can induce trivial collisions.\n  This is obviously true, because hash functions are deterministic: The same input will always produce the same output. If you can control one or more parts of a multi-part message, you can collide the input\u2013thereby creating a collision in the output.\n This can affect any protocol that depends on hash functions, but most obviously, HMAC and Digital Signature algorithms are in scope.\n But what does \u201cbeing careful\u201d look like? Let\u2019s look at a safe example.\n  Earlier I had mentioned PASETO and DSSE. They both have this notion of a \u201cPAE\u201d algorithm which aims to prevent canonicalization attacks.\n      If you feed in a different number of pieces, the count (the first 8 bytes) will differ.\n If you try to move data from one piece to another, you\u2019ll produce different lengths for both pieces, which will not yield an input collision to the hash function.\n  Without the length prefixes, we\u2019re no different than the CTR+HMAC extension we defined above.\n Without the count prefix, it\u2019s possible to drop pieces and then include a dummy \u201clength\u201d in the payload of others to create an input collision.\n  It should come as no surprise that I find  DSSE\u2019s definition of PAE to be somewhat bizarre.\n  The only thing that saves them from canonicalization attacks is that the number of pieces is constant.\n If the number of pieces was variable (e.g. if the  KEYID was optionally included in the signature, but they forgot to always include a hard-coded 0 length if it was absent), you could defeat their flavor of PAE by constructing two different messages that produce the same hash in the digital signature algorithm.\n This is because the number of pieces isn\u2019t included in the DSSE definition. (If they ever support a variable number of components, and fail to include the count in the signature, they\u2019ll be vulnerable.)\n  Why use PAE? Because we need an unambiguous way of serializing two fields, payloadType and payload. PAE is already documented and good enough. No need to reinvent the wheel.\n \u2026Yet, they didn\u2019t actually  use the \u201calready documented and good enough\u201d definition of PAE from PASETO.\n     The only conceivable way to attack this design is to aim for an integer overflow, which will require sending at least 2^63 bytes\u2013at which point, you\u2019re more likely to DDoS the target than succeed.\n  Canonicalization Attacks broadly aren\u2019t well-understood or widely appreciated risks with cryptography protocol design outside of specialist circles (although many application security folks are at least aware of specific instances, i.e. Length Extension).\n Part of the reason for this lack of knowledge transfer is that all of the AEAD modes defend against it by design, and most artisanal authenticated encryption constructions don\u2019t bother with additional authenticated data, and most home-made cryptography protocols don\u2019t even authenticate their ciphertexts correctly, and \u2026\n You get the point, I hope. There\u2019s unaddressed concerns all the way down. Expecting people who aren\u2019t specialized experts in this specific field to get all of them right is frankly unreasonable.", "posttime": "2021-07-30 17:25:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b7e\u540d,attacks,\u6269\u5c55", "title": "\u9488\u5bf9 Mac \u548c\u7b7e\u540d\u7684\u89c4\u8303\u5316\u653b\u51fb", "title_en": "Canonicalization Attacks Against Macs and Signatures", "transed": 1, "url": "https://soatok.blog/2021/07/30/canonicalization-attacks-against-macs-and-signatures/", "via": "", "real_tags": ["\u7b7e\u540d", "attacks", "\u6269\u5c55"]}]
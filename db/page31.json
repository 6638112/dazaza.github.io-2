[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072060, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u6b63\u5728\u5bf9\u51e0\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8bc4\u4f30\u3002\u5728\u5bf9 Apache Cassandra \u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u6027\u80fd\u6307\u6807\u4e2d\u7684\u5f02\u5e38\u6a21\u5f0f\u3002\u6211\u9075\u5faa\u4e86\u8fd9\u4e9b\u7ebf\u7d22\uff0c\u6700\u7ec8\u53d1\u73b0\u4e86\u4e00\u4e9b\u4e3b\u8981\u7684\u7ebf\u7a0b\u6c60\u8bbe\u8ba1\u95ee\u9898\uff0c\u5e76\u5728 Windows \u4e0a\u5b9e\u73b0\u4e86\u6f5c\u5728\u7684 18 \u500d\u6027\u80fd\u63d0\u5347\u3002\u6211\u4e00\u76f4\u5728\u7814\u7a76\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4f5c\u4e3a\u91cd\u65b0\u8bbe\u8ba1\u6d88\u606f\u4ea7\u54c1\u7684\u6f5c\u5728\u540e\u7aef\u3002\u867d\u7136\u6211\u5df2\u7ecf\u60f3\u5230\u4e86\u4e00\u4e9b\u5019\u9009\u4eba\uff0c\u4f46\u6211\u5e0c\u671b\u80fd\u591f\u5c55\u793a\u5bf9\u6570\u636e\u5e93\u9009\u9879\u7684\u5f3a\u5927\u63a2\u7d22\u3002\u867d\u7136 PostgreSQL \u662f SQL \u6570\u636e\u5e93\u4e2d\u7684\u6709\u529b\u7ade\u4e89\u8005\uff0c\u5e76\u4e14\u5728\u65e9\u671f\u5b9e\u9a8c\u4e2d\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u4f46\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u7406\u60f3\u7684 NoSQL \u5019\u9009\u8005\u3002 Apache Cassandra \u6bd4\u6700\u65b0\u7684 NewSQL \u548c\u952e\u503c\u6570\u636e\u5e93\u8981\u8001\u4e00\u4e9b\uff0c\u4f46\u5b83\u5728\u5f88\u591a\u65b9\u9762\u4f3c\u4e4e\u5728\u67b6\u6784\u4e0a\u90fd\u5f88\u7406\u60f3\uff1a\u6211\u7684\u76ee\u6807\u662f\u5c06\u6570\u636e\u5e93\u51e0\u4e4e\u5b8c\u5168\u7528\u4f5c\u201c\u53ea\u5199\u6570\u636e\u5b58\u50a8\u201d\u3002\u6d88\u606f\u4f20\u9012\u6709\u4e24\u4e2a\u4e3b\u8981\u8981\u6c42\uff1a\u6301\u4e45\u8bb0\u5f55\u5df2\u5b8c\u6210\u7684\u5de5\u4f5c\uff08\u63a5\u6536\u548c\u53d1\u9001\u7684\u6d88\u606f\uff09\u4ee5\u5141\u8bb8\u5d29\u6e83\u6062\u590d\uff0c\u4ee5\u53ca\u8bb0\u5f55\u66f4\u957f\u671f\u7684\u53ef\u641c\u7d22\u65e5\u5fd7\u3002 Cassandra \u5df2\u7ecf\u88ab\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u786e\u5b9a\u4e3a\u9996\u9009\u6570\u636e\u5e93\uff0c\u7406\u8bba\u4e0a\u5e94\u8be5\u975e\u5e38\u7b26\u5408\u8fd9\u4e9b\u8981\u6c42\u3002\u51ed\u501f\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u5206\u533a\u5199\u5165\u6027\u80fd\u53ca\u5176 LSMT \u6570\u636e\u7ed3\u6784\u80fd\u591f\u81ea\u52a8\u4ece\u8868\u4e2d\u538b\u7f29\u5df2\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u5b83\u4f3c\u4e4e\u662f\u4e00\u4e2a\u660e\u786e\u7684\u9886\u5bfc\u8005\u3002\u6211\u5728\u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u4e2d\u8bc4\u4f30\u7684\u4e3b\u8981\u5de5\u4f5c\u8d1f\u8f7d\u6d89\u53ca\u63a5\u6536\u6d88\u606f\u3001\u6355\u83b7\u5c5e\u6027\u3001\u8f6c\u6362\u6d88\u606f\u5e76\u53d1\u9001\u5b83\u4eec\u3002\n\u5728\u8bb8\u591a\u5ba2\u6237\u7cfb\u7edf\u4e2d\uff0c\u5c06\u6709\u4e00\u4e2a\u4e3b\u8981\u8def\u7531\u6309\u987a\u5e8f\u5904\u7406\u5927\u591a\u6570\u3002\u9700\u8981\u6301\u4e45\u5730\u8bb0\u5f55\u8fd9\u4e9b\u6d88\u606f\u7684\u63a5\u6536\u60c5\u51b5\uff0c\u8fd9\u4f7f\u5f97\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5355\u7ebf\u7a0b\u7528\u4f8b\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\u8fd8\u6709\u591a\u7ebf\u7a0b\u57fa\u51c6\u6d4b\u8bd5\u53ef\u4ee5\u4e3a\u5728\u591a\u6761\u8def\u7ebf\u4e0a\u66f4\u5747\u5300\u5730\u5206\u914d\u5de5\u4f5c\u7684\u5ba2\u6237\u8868\u5f81\u6027\u80fd\u3002 PostgreSQL \u5728\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u90fd\u53d6\u5f97\u4e86\u4f18\u5f02\u7684\u6210\u7ee9\uff0c\u4f46\u6211\u5e0c\u671b Cassandra\u2014\u2014\u51ed\u501f\u5176\u66f4\u7b80\u5355\u7684\u6a21\u578b\u548c\u6781\u81f4\u7684\u6027\u80fd\u2014\u2014\u80fd\u591f\u63d0\u4f9b\u66f4\u9ad8\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\u5355\u7ebf\u7a0b\u5199\u5165\u6027\u80fd\u5b58\u5728\u4e00\u4e9b\u76f8\u5173\u5f02\u5e38\u3002\u5b58\u5728\u51e0\u4e2a\u5173\u952e\u95ee\u9898\uff1a \u5355\u7ebf\u7a0b Cassandra \u57fa\u51c6\u6d4b\u8bd5\u5728\u786c\u4ef6\u4e0a\u8868\u73b0\u51fa\u6781\u5dee\u7684\u6027\u80fd\uff0c\u4e0e PostgreSQL \u663e\u793a\u7684\u7269\u7406\u6027\u80fd\u76f8\u6bd4\u3002\u5ef6\u8fdf\u4e0e\u6392\u961f\u7406\u8bba\u8868\u660e\u7684\u901a\u5e38\u6a21\u5f0f\u76f8\u53cd\uff1b\u5728\u591a\u7ebf\u7a0b\u7cfb\u7edf\u4e2d\uff0c\u66f4\u591a\u7684\u7ebf\u7a0b\u5e94\u8be5\u63d0\u4f9b\u66f4\u9ad8\u7684\u541e\u5410\u91cf\uff0c\u4f46\u4ee5\u589e\u52a0\u5ef6\u8fdf\u4e3a\u4ee3\u4ef7\u3002 Cassandra \u5c55\u793a\u4e86\u8fd9\u79cd\u6a21\u5f0f\u7684\u53cd\u8f6c\u3002\u541e\u5410\u91cf\u589e\u52a0\u8d85\u8fc7\u7ebf\u7a0b\u6570\u2014\u201410 \u500d\u7684\u7ebf\u7a0b\u63d0\u4f9b\u8fdc\u8fdc\u8d85\u8fc7 10 \u500d\u7684\u541e\u5410\u91cf\u8fd9\u4e00\u4e8b\u5b9e\u4e5f\u662f\u53ef\u7591\u7684\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u4e9b\u75c7\u72b6\u8ba9\u6211\u6000\u7591 Cassandra \u4e0a\u7684\u5355\u7ebf\u7a0b\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u6548\u7387\u4f4e\u4e0b\u7684\u95ee\u9898\u3002\n\u5bf9\u4e8e\u50cf\u6211\u8fd9\u6837\u4e0d\u719f\u6089\u7684\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u4e86\u89e3 Cassandra \u7684\u5185\u90e8\u6267\u884c\u8fc7\u7a0b\u5177\u6709\u5f88\u5927\u7684\u590d\u6742\u6027\u3002\u5177\u6709\u5f88\u5f3a\u7684\u5e76\u53d1\u6027\uff0c\u901a\u8fc7\u591a\u4e2a\u5de5\u4f5c\u6c60\u8de8\u591a\u4e2a\u7ebf\u7a0b\u5904\u7406\u6570\u636e\u5e93\u64cd\u4f5c\u3002\u9274\u4e8e\u8fd9\u79cd\u590d\u6742\u6027\uff0c\u68c0\u6d4b\u548c\u8ddf\u8e2a\u8bf7\u6c42\u5904\u7406\u4f3c\u4e4e\u662f\u7406\u89e3\u95ee\u9898\u7684\u552f\u4e00\u53ef\u884c\u9014\u5f84\u3002\u6240\u4ee5\u6211\u83b7\u53d6\u4e86\u6e90\u4ee3\u7801\uff0c\u6784\u5efa\u4e86 Cassandra \u5e76\u5f00\u59cb\u6dfb\u52a0\u81ea\u5b9a\u4e49\u65e5\u5fd7\u6765\u68c0\u6d4b\u95ee\u9898\u3002\u6211\u7684\u65e5\u5fd7\u8bb0\u5f55\u96c6\u4e2d\u5728\u8bb0\u5f55\u6574\u4e2a\u8bf7\u6c42\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u4ee5\u53ca\u8f6c\u79fb\u5230\u5de5\u4f5c\u6c60\u7684\u7ec4\u4ef6\u4efb\u52a1\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u80fd\u591f\u5728\u5fae\u79d2\u7ea7\u522b\u8ddf\u8e2a\u4efb\u52a1\u5b9e\u9645\u6267\u884c\u7684\u65f6\u95f4\uff0c\u4ee5\u5bfb\u627e\u5ef6\u8fdf\u3002\u8ddf\u8e2a\u663e\u793a\u5728\u8c03\u7528 StorageProxy.performLocally() \u548c\u5b9e\u9645\u6267\u884c LocalMutationRunnable \u4e4b\u95f4\u7684\u5e73\u5747\u5ef6\u8fdf\u4e3a 1.52 \u6beb\u79d2\u3002\u603b\u64cd\u4f5c\u65f6\u95f4\u5e73\u5747\u4e3a 2.06 \u6beb\u79d2\uff08\u5728 Message.Dispatcher processRequest() \u5904\u6d4b\u91cf\uff09\u3002\u8fd9\u8868\u660e\u5728 SEPExecutor \u4e2d\u7b49\u5f85\u7ebf\u7a0b\u8c03\u5ea6\u6240\u635f\u5931\u7684\u603b\u64cd\u4f5c\u65f6\u95f4\u7684\u7ea6 72%\u3002\u9274\u4e8e\u6211\u53d1\u73b0\u7684\u5ef6\u8fdf\uff0cSEPExecutor \u7ebf\u7a0b\u6c60\u6210\u4e3a\u8c03\u67e5\u7684\u7126\u70b9\u3002\u8fd9\u662f\u4e00\u4e2a Cassandra \u7279\u5b9a\u7684\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u5177\u6709\u663e\u7740\u7684\u5185\u90e8\u590d\u6742\u6027\u3002\u6211\u7528 SEPExecutor \u5c1d\u8bd5\u4e86\u8bb8\u591a\u7b28\u62d9\u7684\u5e72\u9884\u63aa\u65bd\uff0c\u4f46\u6ca1\u6709\u4e00\u6b21\u5b8c\u5168\u6210\u529f\u3002\n\u6211\u5f00\u59cb\u8be2\u95ee\u6709\u5173 SEPWorker.assign() \u5728\u4ece SPINNING \u8f6c\u6362\u5230\u201c\u5de5\u4f5c\u201d\u72b6\u6001\u65f6\u5982\u4f55\u4e0d\u89e3\u9664\u7ebf\u7a0b\u7684\u95ee\u9898\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u8bb0\u5f55\u4e86\u6211\u7684\u8c03\u67e5\u548c\u7ed3\u679c\uff0c\u6211\u5728 Cassandra JIRA \u9519\u8bef\u8ddf\u8e2a\u5668\u4e0a\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u6700\u521d\u5b83\u9047\u5230\u4e86\u4e00\u4e9b\u516c\u5e73\u7684\u95ee\u9898\uff0c\u4f46\u8001\u5b9e\u8bf4\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u6000\u7591\u3002 \uff08\u8001\u5b9e\u8bf4\uff0c\u8fd9\u5bf9\u4e8e\u4efb\u4f55\u9879\u76ee\u90fd\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u9879\u76ee\u62e5\u6709\u7684\u8d44\u6e90\u6709\u9650\uff0c\u800c\u4e14\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6536\u5230\u5927\u91cf\u611a\u8822\u7684\u95ee\u9898\u548c\u8bef\u62a5\u3002\uff09\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u6b63\u5728\u5bfb\u627e\u548c\u8ba8\u8bba\u5173\u4e8e JIRA \u95ee\u9898\u7684\u8fdb\u4e00\u6b65\u7ebf\u7d22\u3002 Cassandra \u7684\u4e00\u4f4d\u8d1f\u8d23\u4eba\u52a0\u5165\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u6b63\u5728\u8ba8\u8bba\u5178\u578b\u7684\u73af\u5883\u548c\u7528\u4f8b\u3002\u6211\u613f\u610f\u542c\u5230\u4e00\u4e9b\u89c1\u89e3\u6216\u89e3\u91ca\uff0c\u4f46\u6211\u81ea\u5df1\u575a\u4fe1\u8fd9\u91cc\u5f88\u53ef\u80fd\u4f1a\u627e\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u5bf9\u4efb\u52a1\u8c03\u5ea6\u884c\u4e3a\u548c\u7531\u6b64\u4ea7\u751f\u7684\u8c03\u5ea6\u5ef6\u8fdf\u7684\u8be6\u7ec6\u8ddf\u8e2a\u8868\u660e\uff0c\u5f53\u5de5\u4f5c\u4eba\u5458\u5df2\u7ecf\u53ef\u7528\u4f46\u505c\u5728\u201c\u65cb\u8f6c\u201d\u72b6\u6001\u65f6\u4f1a\u53d1\u751f\u5ef6\u8fdf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cCassandra \u7684 SEPExecutor \u7ebf\u7a0b\u6c60\u65e2\u6ca1\u6709\u542f\u52a8\u989d\u5916\u7684 worker\uff0c\u4e5f\u6ca1\u6709\u5524\u9192\uff08unpark\uff09\u6b63\u5728\u4f11\u7720\u7684 worker\u3002\u5728\u5355\u7ebf\u7a0b\u6761\u4ef6\u4e0b\uff0cworker \u4f1a\u5728\u6bcf\u6b21\u8bf7\u6c42\u540e\u7acb\u5373\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff1b\u6700\u591a\u9700\u8981 1.5 \u6beb\u79d2\u624d\u80fd\u5524\u9192\u4e0b\u4e00\u4e2a\uff01\u867d\u7136\u8fd9\u5bf9\u6211\u6765\u8bf4\u4f3c\u4e4e\u662f\u5f3a\u6709\u529b\u7684\u8bc1\u636e\uff0c\u4f46 Cassandra \u793e\u533a\u6307\u51fa\u7ebf\u7a0b\u6c60\u662f\u4e3a Linux \u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\uff08\u4ece\u65b0\u7248\u672c 4 \u5f00\u59cb\uff09\u4ed6\u4eec\u5df2\u7ecf\u653e\u5f03\u4e86\u5bf9 Windows \u4f5c\u4e3a\u5e73\u53f0\u7684\u652f\u6301\u3002\n\u6240\u4ee5\uff0c\u6211\u53bb\u62ff\u4e86\u4e00\u4e2a EC2 \u5b9e\u4f8b\u5e76\u8fdb\u884c\u4e86\u4e00\u4e9b Linux \u6d4b\u8bd5\u3002\u5728\u5355\u7ebf\u7a0b\u60c5\u51b5\u4e0b\uff0c\u6211\u80fd\u591f\u5728 Linux \u4e0a\u53d1\u73b0 +30.9% \u7684\u6027\u80fd\u6539\u8fdb\uff0c\u5728 10\u300150 \u548c 200 \u4e2a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\uff0c\u6539\u8fdb\u4ece\u5c0f\u5230\u5927\u4e0d\u7b49\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u89c9\u5f97\u6211\u5df2\u7ecf\u62a5\u544a\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef (CASSANDRA-16499)\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8865\u4e01\uff0c\u5e76\u663e\u793a\u4e86\u6027\u80fd\u6539\u8fdb\u548c\u975e\u56de\u5f52\u7684\u826f\u597d\u8bc1\u636e\u3002\u7136\u800c\uff0c\u63d0\u51fa\u4e86\u67b6\u6784\u95ee\u9898\uff0c\u8fd9\u662f\u6267\u884c\u5668\u7684\u9884\u671f\u8bbe\u8ba1\u2014\u2014\u5de5\u4f5c\u7ebf\u7a0b\u81ea\u7ec4\u7ec7\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u4ea4\u4e92\u6709\u9650\u3002\u6dfb\u52a0\u4e3b\u52a8\u5524\u9192\u884c\u4e3a\u5c06\u6d88\u9664\u6b64\u8bbe\u8ba1\u529f\u80fd\u3002 Cassandra \u9886\u5bfc\u5e76\u6ca1\u6709\u63a5\u53d7\u8865\u4e01\uff0c\u800c\u662f\u8981\u6c42\u5bf9\u53ef\u80fd\u7684\u7ebf\u7a0b\u6c60\u9009\u9879\u8fdb\u884c\u5168\u9762\u7684\u67b6\u6784\u91cd\u65b0\u8bc4\u4f30\u3002\u867d\u7136\u8fd9\u662f\u4e00\u6b21\u6709\u4ef7\u503c\u7684\u63a2\u7d22\uff0c\u4f46\u6211\u5728\u57fa\u51c6\u6d4b\u8bd5\u548c\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u4e86 Cassandra \u7684\u5176\u4ed6\u7f3a\u70b9\uff1a\u5e76\u884c\u63d0\u4ea4/fsync \u53ef\u80fd\u6548\u7387\u4f4e\u4e0b\u2014\u2014PostgreSQL \u80fd\u591f\u5728\u5355\u4e2a fsync() \u4e2d\u63d0\u4ea4\u591a\u4e2a\u7b49\u5f85\u4e8b\u52a1\uff0cCassandra \u53ef\u80fd\u5728\u8fd9\u65b9\u9762\u6709\u5c40\u9650\u6027\u6211\u4eec\u8ba8\u8bba\u4e86\u6211\u4eec\u7684\u6570\u636e\u5e93\u9009\u9879\uff0c\u4ee5\u53ca\u8fdb\u4e00\u6b65\u6295\u8d44 Cassandra \u4ee5\u53d1\u73b0\u548c\u4fee\u590d\u8fd9\u4e9b\u5176\u4ed6\u53ef\u80fd\u7684\u7f3a\u9677\u7684\u6f5c\u529b\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u5e73\u53f0\uff0c\u6211\u4eec\u5f88\u611f\u5174\u8da3\uff0c\u4f46\u6211\u4eec\u5f88\u96be\u505a\u51fa\u5546\u4e1a\u6848\u4f8b\u3002\n\u6240\u4ee5\u611f\u8c22\u9605\u8bfb\uff0c\u6211\u5e0c\u671b\u4f60\u89c9\u5f97\u8fd9\u5f88\u6709\u8da3\uff01\u5982\u679c\u6709\u4eba\u5e0c\u671b\u7ee7\u7eed\u8fd9\u9879\u5de5\u4f5c\uff0c\u6211\u5f88\u4e50\u610f\u8ba8\u8bba\u3002", "note_en": "Recently I was conducting an evaluation of several different databases for a messaging workload. While benchmarking Apache Cassandra, I noticed unusual patterns in performance metrics. I followed these clues and eventually found some major thread-pool design questions and a potential 18x performance gain realizable on Windows.\n  I had been investigating a range of different databases as potential backends to re-engineer a messaging product. While I had some candidates in mind already, I wanted to be able to show a robust exploration of database options.\n  While PostgreSQL was a strong contender among SQL databases and had given good results in early experiments, I was looking for the ideal NoSQL candidate.\n Apache Cassandra was a little older than the latest NewSQL &amp; key-value databases, but it seemed in in many ways architecturally ideal:\n  The paradigm I was aiming for was to use the database almost entirely as a \u2018write-only datastore\u2019. Messaging has two major requirements: durable recording of work done (messages received &amp; sent) to allow crash recovery, and recording a longer-term searchable log.\n Cassandra had already been identified by our engineers as a preferred database, and should theoretically have aligned very well with these requirements. With highly scalable partitioned write performance and its LSMT datastructure able to automatically compact completed work from the table, it seemed like a clear leader.\n  Key workloads I was assessing in the messaging system involved receiving messages, capturing properties, transforming the messages, and sending them on.\n In many customer systems there would be one major route processing a large majority in sequential order. The requirement to durably record receipt of these messages made this essentially a single-threaded usecase, so this was a major benchmark. There were also multi-threaded benchmarks to characterize performance for customers running a more even distribution of work across multiple routes.\n PostgreSQL had given excellent results across single- and multi-threaded benchmarks, but I had hopes that Cassandra \u2014 with its simpler model and extreme performance focus \u2014 would be able to deliver even higher.\n      However these results suggested some concerning anomalies in single-threaded write performance.\u00a0Several key concerns existed:\n The single-threaded Cassandra benchmark showed abysmally poor performance on the hardware, compared to what PostgreSQL had shown was physically possible.\n Latencies were inverted from the usual pattern that queueing theory indicates; in a multi-threaded system, more threads should give higher throughput but at the cost of increased latency. Cassandra showed an inversion of this pattern.\n Throughput increasing beyond the number of threads \u2014 the fact that 10x the threads gave far more than 10x the throughput was also suspicious.\n Taken together, these symptoms made me suspicious there might be some inefficiencies in single-thread workloads on Cassandra.\n  Understanding Cassandra\u2019s internal execution processes, to an unfamiliar engineer like myself, posed a significant degree of complexity. There is a strong degree of concurrency, with database operations processed across multiple threads via a number of worker pools.\n Given this complexity, instrumenting &amp; tracing the request processing seemed the only plausible route to understand the problem. So I fetched the source, built Cassandra &amp; started added custom logging to instrument the problem.\n My logging focused on recording the start &amp; end times of the overall request and of the component tasks devolved to worker pools. The aim here was to be able to track, at a microsecond level, when tasks were actually executing in order to look for delays.\n  Tracing showed an average delay of 1.52 ms between StorageProxy.performLocally() being called, and the LocalMutationRunnable actually executing.\n Total operation time averaged 2.06 ms (measured at Message.Dispatcher processRequest()). This suggested ~72% of the\u00a0 total operation time\u00a0being lost waiting for thread scheduling in SEPExecutor.\n Given the delays I found, the SEPExecutor thread pool became a focus of investigation. This is a Cassandra-specific custom thread pool with significant internal complexity.\n I tried a number of clumsy interventions with SEPExecutor, none of which were fully successful.\n I started asking questions about how SEPWorker.assign() doesn\u2019t unpark threads when transitioning from SPINNING to \u2018working\u2019 state.\n Having documented my investigation &amp; results so far, I raised an issue on the Cassandra JIRA bug-tracker. Initially it was met with some fair questions but to be honest a certain amount of skepticism. (To be honest this is very understandable for any project, given the limited resources projects have and the numbers of stupid questions &amp; false positives they likely receive.)\n   In the meantime I was finding &amp; discussing further clues on the JIRA issue. One of the Cassandra leads had joined the issue and was discussing typical environments &amp; usecases. I was open to hearing some insight or explanation, but believed strongly myself that there was likely something to be found here.\n  A detailed trace of task scheduling behavior and resultant scheduling delays, showed that delays occurred when a worker was already available but parked in a \u2018SPINNING\u2019 state.\n In this case, Cassandra\u2019s SEPExecutor thread pool neither started an extra worker, nor did it wake (unpark) the sleeping one.\n Under single-threaded conditions, workers would go to sleep immediately after each request; and take up to 1.5 milliseconds to wake up for the next one!\n    While this seemed like strong evidence to me, the Cassandra community noted that the thread-pool is designed for Linux and that (as of the new version 4) they had dropped support for Windows as a platform.\n So, I went and got an EC2 instance and undertook some Linux testing. I was able to find a +30.9% performance improvement on Linux \u00a0in the single-thread case, with improvements varying from small to marginal over 10, 50 and 200 thread cases.\n  At this point I felt that I\u2019d reported a clear bug ( CASSANDRA-16499), provided a patch, and shown good evidence of performance improvement and non-regression.\n However there were architectural questions raised, that this was the intended design of the executor \u2014 that worker threads self-organize with limited interaction between producers and consumers. And that adding a proactive wakeup behavior, would obviate this design feature.\n Rather than accepting the patch, the Cassandra lead asked for a comprehensive architectural reassessment of possible thread-pooling options.\n While it was a valuable exploration, the course of my benchmarking &amp; assessment had identified other drawbacks of Cassandra:\n possible inefficiency in parallel commit/ fsync \u2014 PostgreSQL is able to commit multiple waiting transactions in a single fsync(), Cassandra may have limitations here\n We discussed our database options, and potential of investing further in Cassandra to find &amp; fix these other likely deficits. It\u2019s a great platform, and we were interested, but it was hard for us to make a business case.\n So thanks for reading, and I hope you found this interesting! Should anyone wish to continue this work, I\u2019d be very happy to discuss.", "posttime": "2021-08-08 11:49:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,apache,deficits,cassandra", "title": "Apache Cassandra \u4e2d\u7684\u6027\u80fd\u7f3a\u9677", "title_en": "Performance Deficits in Apache Cassandra", "transed": 1, "url": "http://literatejava.com/database/performance-deficits-in-apache-cassandra/", "via": "", "real_tags": ["\u6027\u80fd", "apache", "deficits", "cassandra"]}, {"category": "", "categoryclass": "", "imagename": "408b4047570c242de9e82dda5d86deb0.jpg", "infoid": 1072057, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9996\u5148\uff0c\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u8ddf\u4e0a Amazon Web Services \u548c Elastic \u7684\u4f20\u5947\uff0c\u8fd9\u91cc\u662f\u6700\u7b80\u77ed\u7684\u56de\u987e\u3002\u51e0\u5e74\u524d\uff0cAWS \u57fa\u672c\u4e0a\u5206\u53c9\u4e86 ElasticSearch\uff0c\u5c06\u5176\u4f5c\u4e3a\u670d\u52a1\u63d0\u4f9b\uff0c\u8fd9\u8ba9\u5f00\u6e90\u793e\u533a\u975e\u5e38\u6cae\u4e27\u3002\u4f5c\u4e3a\u56de\u5e94\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\uff0cElastic \u51b3\u5b9a\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u66f4\u6539 ElasticSearch \u7684\u8bb8\u53ef\u4ee5\u9650\u5236\u5176\u4e0b\u6e38\u4f7f\u7528\uff0c\u8fd9\u518d\u6b21\u4ee4\u5f00\u6e90\u793e\u533a\u611f\u5230\u6cae\u4e27\u3002 AWS \u968f\u540e\u5ba3\u5e03\u5c06\u5206\u53c9\u8be5\u9879\u76ee\u4ee5\u4fdd\u6301\u5176\u5b8c\u5168\u5f00\u6e90\uff0c\u7a81\u7136\u6210\u4e3a\u8be5\u573a\u666f\u4e2d\u660e\u663e\u7684\u597d\u4eba\u3002\u6700\u540e\uff0c\u5c31\u5728\u51e0\u4e2a\u6708\u524d\uff0cAWS \u5728 Apache \u8bb8\u53ef\u4e0b\u53d1\u5e03\u4e86 OpenSearch\uff0c\u7248\u672c 2.0 (ALv2)\uff0c\u57fa\u672c\u4e0a\u5b8c\u6210\u4e86\u8fd9\u4e2a\u5faa\u73af\u3002 ElasticSearch \u548c AWS \u4e4b\u95f4\u7684\u6765\u56de\u5728\u672c\u5468\u7ee7\u7eed\u8fdb\u884c\uff0c\u8fd9\u4e00\u6b21 Elastic \u8fdb\u4e00\u6b65\u5c1d\u8bd5\u5173\u95ed\u5bf9 ElasticSearch \u7684\u8bbf\u95ee\u5e76\u5173\u95ed AWS\u3002\u4f5c\u4e3a\u56de\u5e94\uff0cAWS \u8868\u793a\u6b63\u5728\u52aa\u529b\u4f7f OpenSearch \u548c Elasticsearch \u7684\u5ba2\u6237\u7aef\u4e0e\u5f00\u6e90\u517c\u5bb9\u3002 AWS \u8868\u793a\uff0c\u201cOpenSearch \u65e8\u5728\u63d0\u4f9b\u4e0e Elasticsearch 7.10.2 \u7684\u5f00\u6e90\u53d1\u884c\u7248\uff08\u5373\u5b83\u7684\u884d\u751f\u8f6f\u4ef6\uff09\u7684\u8fde\u7ebf\u517c\u5bb9\u6027\u201d\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u8fc1\u79fb\u5230 OpenSearch\u3002\u867d\u7136 Elastic \u5bf9\u6b64\u65e0\u80fd\u4e3a\u529b\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e9b\u5e38\u7528\u7684\u5f00\u6e90\u5ba2\u6237\u7aef\u5e93\u8fdb\u884c\u66f4\u6539\u3002 \u201c\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0cElastic \u5411\u5176\u4e2d\u51e0\u4e2a\u5ba2\u6237\u7aef\u6dfb\u52a0\u4e86\u65b0\u903b\u8f91\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u62d2\u7edd\u8fde\u63a5\u5230 OpenSearch \u96c6\u7fa4\u6216\u8fd0\u884c Elasticsearch 7 \u5f00\u6e90\u53d1\u884c\u7248\u7684\u96c6\u7fa4\uff0c\u751a\u81f3\u90a3\u4e9b\u7531 Elastic \u81ea\u5df1\u63d0\u4f9b\u7684\u96c6\u7fa4\u3002\u867d\u7136\u5ba2\u6237\u7aef\u5e93\u4ecd\u7136\u662f\u5f00\u6e90\u7684\uff0c\u4f46\u5b83\u4eec\u73b0\u5728\u53ea\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230 Elastic \u7684\u5546\u4e1a\u4ea7\u54c1\uff0c\u201dAWS \u5199\u9053\u3002\u5982\u679c Elastic \u60f3\u8981\u91cd\u56de\u5f00\u6e90\u793e\u533a\u7684\u9752\u7750\uff0c\u8fd9\u80af\u5b9a\u4e0d\u662f\u8fd9\u6837\u7684\u65b9\u5f0f\u3002\u611f\u8c22@elastic \u5728\u4e0e@awscloud \u7684\u6218\u4e89\u4e2d\u8ba9\u6211\u4eec\u6240\u6709\u4eba\u90fd\u53d7\u5230\u4e86\u9644\u5e26\u635f\u5bb3\u3002\u5c06\u4f9d\u8d56\u9879\u56fa\u5b9a\u4e3a &gt;=7.0.0,&lt;8.0.0 \u5e76\u5728\u90e8\u7f72\u65f6\u81ea\u52a8\u83b7\u53d6\u6b64\u66f4\u65b0\u662f\u6211\u7684\u574f\u5904\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u4f7f\u7528 AWS \u7684\u4efb\u4f55\u4eba\u6765\u8bf4\uff0c\u7834\u574f ES python \u5305\u4ecd\u7136\u975e\u5e38\u7cdf\u7cd5\u3002 #elasticsearch pic.twitter.com/Vb5VatOXdl \u76f8\u53cd\uff0cAWS \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u518d\u6b21\u6210\u4e3a\u5f00\u6e90\u7684\u6551\u4e16\u4e3b\uff0c\u8fd9\u4e00\u6b21\u4f3c\u4e4e\u627f\u8bfa\u63d0\u4f9b\u201c\u4e00\u7ec4\u65b0\u7684\u5f00\u6e90\u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u5e94\u7528\u7a0b\u5e8f\u5230\u4efb\u4f55 OpenSearch \u6216 Elasticsearch \u96c6\u7fa4\u201d\uff0c\u8fd9\u4e9b\u96c6\u7fa4\u201c\u5c06\u5728\u6dfb\u52a0\u4ea7\u54c1\u68c0\u67e5\u4e4b\u524d\u4ece\u76f8\u5e94\u7684 Elastic \u7ef4\u62a4\u5ba2\u6237\u7aef\u7684\u6700\u65b0\u517c\u5bb9\u7248\u672c\u4e2d\u6d3e\u751f\u51fa\u6765\u3002\u201d\n\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u672c\u7740\u5f00\u653e\u6027\u548c\u4e92\u64cd\u4f5c\u6027\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u5c06\u5c3d\u5408\u7406\u52aa\u529b\u4fdd\u6301\u4e0e\u6240\u6709 Elasticsearch \u53d1\u884c\u7248\u7684\u517c\u5bb9\u6027\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u7531 Elastic \u751f\u4ea7\u7684\u53d1\u884c\u7248\u3002\u201d\u4e0e\u6b64\u540c\u65f6\uff0c\u867d\u7136 OpenSearch \u793e\u533a\u81f4\u529b\u4e8e\u521b\u5efa\u66ff\u4ee3\u5e93\uff0c\u4f46 AWS \u5efa\u8bae\u7528\u6237\u4e0d\u8981\u66f4\u65b0\u5230\u4efb\u4f55\u7531 Elastic \u7ef4\u62a4\u7684\u5ba2\u6237\u7aef\u7684\u6700\u65b0\u7248\u672c\uff0c\u4ee5\u514d\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u505c\u6b62\u8fd0\u884c\u3002\u4ee5\u5584\u610f\u5408\u6cd5\u5730\u6740\u6b7b\u4ed6\u4eec\u3002\u8fd9\u662f elasticsearch \u5e94\u8be5\u91c7\u53d6\u7684\u884c\u52a8\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\u793e\u533a\u7684\u6700\u4f73\u5229\u76ca\u3002\u4e0d\u8fc7\uff0c\u4ed6\u4eec\u5df2\u7ecf\u8868\u660e\u4e86\u81ea\u5df1\u7684\u7acb\u573a\u3002\u8fd9\u662f\u5173\u4e8e\u94b1\u7684\u3002 Facebook \u5f00\u6e90\u8ba1\u7b97\u5b8c\u6574\u6027\u5de5\u5177\uff1a\u300a\u6743\u529b\u7684\u6e38\u620f\u300b\u7c89\u4e1d\u6700\u7ec8\u5e94\u8be5\u5bf9 Facebook \u6700\u65b0\u7684\u5f00\u6e90\u9879\u76ee Winterfell \u611f\u5230\u6ee1\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a STARK \u7684\u8bc1\u660e\u8005\u548c\u9a8c\u8bc1\u8005\u3002\u9664\u4e86\u6587\u5316\u53c2\u8003\u4e4b\u5916\uff0cWinterfell \u662f\u53ef\u6269\u5c55\u7684\u900f\u660e\u77e5\u8bc6\u8bba\u8bc1 (STARK) \u8bc1\u660e\u8005\u548c\u9a8c\u8bc1\u8005\u7684\u5b9e\u73b0\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u4f7f\u666e\u901a\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u201c\u4ece\u901a\u5e38\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u8ba1\u7b97\u5b8c\u6574\u6027\u8bc1\u660e (CI) \u4e2d\u53d7\u76ca\u201d\u3002 - \u8981\u5b9e\u65bd\u7684\u5bc6\u7801\u5b66\u7684\u6df1\u5165\u77e5\u8bc6\u3002\u201d CI \u8bc1\u660e\u5141\u8bb8\u7528\u6237\u8fd0\u884c\u8ba1\u7b97\uff0c\u83b7\u5f97\u7ed3\u679c\uff0c\u7136\u540e\u201c\u8ba9\u4efb\u4f55\u4eba\u76f8\u4fe1\u4f60\u6b63\u786e\u5730\u8fdb\u884c\u4e86\u8ba1\u7b97\uff0c\u800c\u65e0\u9700\u4ed6\u4eec\u81ea\u5df1\u91cd\u65b0\u8fd0\u884c\u8ba1\u7b97\u3002\u201d\u5176\u4e2d\u7684\u4e00\u4e2a\u5b50\u96c6\u662f\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\uff0c\u5b83\u5141\u8bb8\u76f8\u540c\u7684\u529f\u80fd\uff0c\u540c\u65f6\u4e5f\u63a9\u76d6\u4e86\u8f93\u5165\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0e\u6700\u8fd1\u7684\u533a\u5757\u94fe\u8d8b\u52bf\u8d8a\u6765\u8d8a\u76f8\u5173\uff0c\u4f46 Facebook \u5199\u9053\u201cZKP \u5728\u533a\u5757\u94fe\u9886\u57df\u4e4b\u5916\u4e5f\u6709\u8bb8\u591a\u6f5c\u5728\u7684\u5e94\u7528\u201d\uff0c\u4f46\u7531\u4e8e\u6240\u9700\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u8ba1\u7b97\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u8d77\u98de\u3002 Facebook \u5728\u5176\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff1a\u201c\u6211\u4eec\u5f00\u53d1\u4e86 Winterfell \u6765\u5f25\u5408\u8fd9\u4e9b\u5dee\u8ddd\uff0c\u5e76\u4f7f\u5e38\u89c4\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528 ZKP\u3002\u201d Winterfell \u7528 Rust \u7f16\u5199\uff0c\u5df2\u53d1\u5e03\u5230 Crates.io\uff0c\u5e76\u9644\u5e26\u4e00\u4e2a\u7aef\u5230\u7aef\u6559\u7a0b\u548c\u4e00\u4e2a\u793a\u4f8b crate\u3002 Rust \u63a8\u52a8 GAT \u7a33\u5b9a\uff1a\u5728\u672c\u5468\u4e00\u7bc7\u5173\u4e8e\u63a8\u52a8 GAT \u7a33\u5b9a\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u7279\u5f81\u5de5\u4f5c\u7ec4\u7684\u6210\u5458 Jack Huey \u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u5411\u4ed6\u4eec\u7684\u8bfb\u8005\u4fdd\u8bc1\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u5426\u77e5\u9053\uff0c\u7406\u89e3\u5b83\uff0c\u6216\u8005\u4e0d\u77e5\u9053\uff0c\u6dfb\u52a0\u6cdb\u578b\u5173\u8054\u7c7b\u578b (GAT) \u7684\u4e3e\u63aa\u201c\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u201d\uff0c\u786e\u5b9e\u662f\u201c\u4e00\u4ef6\u5927\u4e8b\u201d\u3002\u663e\u7136\uff0cRust \u5c1d\u8bd5\u6dfb\u52a0 GAT \u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u2014\u2014RFC \u4e8e 2016 \u5e74 4 \u6708\u9996\u6b21\u5f00\u653e\uff0c\u751a\u81f3\u65e9\u4e8e\u5bf9 const \u6cdb\u578b\u7684\u63a8\u52a8\u3002\u5982\u679c\u4f60\u4ecd\u7136\u6000\u7591\u5b83\u7684\u91cd\u8981\u6027\uff0c\u4ed6\u4f1a\u6307\u51fa GitHub \u4e0a\u7684\u8ddf\u8e2a\u95ee\u9898\uff0c\u5e76\u6307\u51fa\u8fd9\u662f\u201cRust \u5b58\u50a8\u5e93\u4e0a\u6295\u7968\u6700\u591a\u7684\u95ee\u9898\u201d\u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u6d88\u606f\u662f generic_related_types \u529f\u80fd\u4e0d\u518d\u201c\u4e0d\u5b8c\u6574\u201d\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u6bcf\u665a\u6784\u5efa\u4e2d\u4f7f\u7528\u5b83\uff0c\u60a8\u5c06\u4e0d\u518d\u6536\u5230\u8b66\u544a\u3002\u6709\u5173\u4e3a\u4ec0\u4e48\u8fd9\u5f88\u91cd\u8981\u4ee5\u53ca GAT \u7a76\u7adf\u662f\u4ec0\u4e48\u7684\u5b8c\u6574\u63a8\u7406\uff0c\u8bf7\u524d\u5f80\u535a\u5ba2\u6587\u7ae0\u9605\u8bfb\u5bf9\u7f16\u8bd1\u5668\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u4ee5\u4f7f GAT \u5de5\u4f5c\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u56e2\u961f\u6b63\u5728\u5bfb\u627e\u60a8\u4ee5\u5e2e\u52a9\u7a33\u5b9a\u65b0\u529f\u80fd\u3002 \u201c\u6211\u4eec\u9700\u8981\u60a8\u6d4b\u8bd5\u6b64\u529f\u80fd\uff0c\u4e3a\u60a8\u53d1\u73b0\u7684\u4efb\u4f55\u9519\u8bef\u6216\u6f5c\u5728\u7684\u8bca\u65ad\u6539\u8fdb\u63d0\u4ea4\u95ee\u9898\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u544a\u8bc9\u6211\u4eec GAT \u5728 Zulip \u4e0a\u542f\u7528\u7684\u4e00\u4e9b\u6709\u8da3\u6a21\u5f0f\uff0c\u201d\u4ed6\u4eec\u5199\u9053\u3002 FSF \u60f3\u4e86\u89e3\u60a8\u5bf9 GitHub Copilot \u7684\u770b\u6cd5\uff1a\u867d\u7136\u6709\u4e9b\u4eba\u53ef\u80fd\u8ba4\u4e3a GitHub Copilot \u4f5c\u4e3a GitHub \u65b0\u7684\u201cAI \u914d\u5bf9\u7a0b\u5e8f\u5458\u201d\uff0c\u5728\u516c\u5f00\u53ef\u7528\u7684\u6e90\u4ee3\u7801\u4e0a\u63a5\u53d7\u57f9\u8bad\uff0c\u4f46\u901a\u5e38\u4e0d\u4f1a\u4fb5\u72af\u7248\u6743\uff0c\u4f46\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a (FSF) \u4e0d\u592a\u786e\u5b9a\u65b0\u7684\u201c\u670d\u52a1\u5373\u8f6f\u4ef6\u66ff\u4ee3\u54c1\u201d\u3002 FSF \u5728\u5176\u5173\u4e8e Copilot \u7684\u54f2\u5b66\u548c\u6cd5\u5f8b\u95ee\u9898\u7684\u767d\u76ae\u4e66\u547c\u5401\u4e2d\u5199\u9053\uff0c\u201cCopilot \u63d0\u51fa\u4e86\u8bb8\u591a\u5176\u4ed6\u9700\u8981\u66f4\u6df1\u5165\u7814\u7a76\u7684\u95ee\u9898\u201d\uff0c\u4f8b\u5982\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u662f\u5426\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5408\u7406\u4f7f\u7528\uff0c\u4ee5\u53ca\u4ee3\u7801\u662f\u5426\u521b\u5efa\u901a\u8fc7\u8be5\u5de5\u5177\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4fb5\u72af\u7248\u6743\u3002\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u5373\u4f7f\u4e00\u5207\u90fd\u53ef\u80fd\u5728\u6cd5\u5f8b\u4e0a\u6709\u95ee\u9898\uff0c\u4f46\u6fc0\u8fdb\u4e3b\u4e49\u8005\u60f3\u77e5\u9053\uff0c\u4e00\u5bb6\u4e13\u6709\u8f6f\u4ef6\u516c\u53f8\u5728\u4ed6\u4eec\u7684\u5de5\u4f5c\u4e2d\u6784\u5efa\u670d\u52a1\u662f\u5426\u5b58\u5728\u6839\u672c\u4e0d\u516c\u5e73\u7684\u95ee\u9898\u3002\u201d\u56e0\u6b64\uff0cFSF \u6b63\u5728\u5f81\u96c6\u6709\u5173\u8be5\u4e3b\u9898\u7684\u767d\u76ae\u4e66\u2014\u2014\u6709\u5173\u7279\u5b9a\u5174\u8da3\u9886\u57df\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u535a\u5ba2\u6587\u7ae0\u2014\u2014\u5e76\u5c06\u4e3a\u5df2\u53d1\u8868\u7684\u8bba\u6587\u652f\u4ed8 500 \u7f8e\u5143\u3002\u5220\u9664\u6240\u6709\u4ee3\u7801\u5e76\u91cd\u65b0\u5f00\u59cb\u7684\u5927 O \u8868\u793a\u6cd5\u662f\u4ec0\u4e48\uff1f\n\u7edf\u8ba1\u6570\u636e\uff1a\u5982\u679c\u6df1\u5165\u4e86\u89e3\u8fd9\u4e9b\u6570\u5b57\u8ba9\u60a8\u5174\u594b\u4e0d\u5df2\uff0c\u6211\u4eec\u6700\u8fd1\u53d1\u5e03\u4e86\u4e24\u4e2a\u7248\u672c\u6765\u6ee1\u8db3\u60a8\u7684\u7edf\u8ba1\u9700\u6c42\u3002\u9996\u5148\uff0c2021 \u5e74 Stack Overflow \u5f00\u53d1\u4eba\u5458\u8c03\u67e5\u5c31\u5728\u8fd9\u91cc\uff0c\u5168\u7403\u8d85\u8fc7 80,000 \u540d\u53d7\u8bbf\u8005\u63d0\u4f9b\u4e86\u7b54\u6848\uff0c\u4ece\u5f00\u53d1\u4eba\u5458\u7684\u5b66\u4e60\u65b9\u5f0f\u5230\u4ed6\u4eec\u4f7f\u7528\u6700\u591a\u7684\u8bed\u8a00\u548c\u6846\u67b6\uff0c\u4ee5\u53ca\u63d0\u4f9b\u6700\u9ad8\u85aa\u6c34\u7684\u8bed\u8a00\u548c\u6846\u67b6\u7b49\u65b9\u65b9\u9762\u9762\u3002\u5267\u900f\u8b66\u544a\uff1aRust \u8fde\u7eed\u7b2c\u516d\u5e74\u518d\u6b21\u5360\u636e\u201c\u6700\u53d7\u6b22\u8fce\u201d\u7684\u8bed\u8a00\u4f4d\u7f6e\u3002\u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u7ed3\u679c\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\u5c31\u5728\u6211\u4eec\u5728\u6b64\u671f\u95f4\uff0c\u672c\u5468 RedMonk \u7f16\u7a0b\u8bed\u8a00\u6392\u540d\u4e5f\u51fa\u6765\u4e86\uff0c\u5728\u8ba1\u7b97\u65b9\u9762\u663e\u793a\u51fa\u4e00\u4e2a\u57fa\u672c\u7a33\u5b9a\u7684\u9886\u57df\uff0cJavaScript \u4ecd\u7136\u6392\u540d\u7b2c\u4e00\uff0cJava \u4e0e Python \u4e00\u8d77\u56de\u5230\u4e86\u7b2c\u4e8c\u4f4d\u3002\u66f4\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u636e RedMonk \u79f0\uff0cGo\u3001Kotlin \u548c Rust \u7684\u76f8\u5bf9\u505c\u6ede\u4e0d\u524d\uff0c\u5b83\u8bf4\u201c\u53ef\u80fd\u53cd\u6620\u4e86\u7cfb\u7edf\u8bed\u8a00\u7684\u65b0\u51fa\u73b0\u7684\u73b0\u5b9e\u3002\u201d\u8fd9\u4e09\u8005\u88ab\u5f52\u4e3a\u201c\u9996\u9009\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u8bed\u8a00\u7684\u6311\u6218\u8005\u201d\uff0cRedMonk \u6307\u51fa Java \u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u8fdb\u5c55\u3002 \u201c\u56e0\u6b64\uff0c\u901a\u8fc7\u7ed3\u5408\u81ea\u8eab\u7684\u9002\u5e94\u6027\u548c\u4f01\u4e1a\u7684\u60ef\u6027\uff0cJava \u4fdd\u7559\u4e86\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u5e02\u573a\u7684\u5f88\u5927\u4efd\u989d\uff0c\u8fd9\u4f3c\u4e4e\u662f\u6709\u9053\u7406\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u6f5c\u5728\u6311\u6218\u8005\u2014\u2014Go\u3001Rust \u548c\u7531\u4e8e\u5171\u4eab JVM \u5e73\u53f0\uff0cKotlin \u5728\u8f83\u5c0f\u7a0b\u5ea6\u4e0a\u4e0e Java \u7684\u7ade\u4e89\u6bd4\u5f7c\u6b64\u4e4b\u95f4\u7684\u7ade\u4e89\u8981\u5c11\uff0c\u201d\u4ed6\u4eec\u5199\u9053\u3002 \u201c\u5982\u679c\u8fd9\u4e2a\u5047\u8bbe\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u671f\u671b Java \u80fd\u591f\u4fdd\u6301\u5176\u6027\u80fd\u548c\u672a\u6765\u4ece Go\u3001Kotlin \u548c Rust \u4e2d\u83b7\u5f97\u7684\u6536\u76ca\u2014\u2014\u5982\u679c\u6709\u7684\u8bdd\u2014\u2014\u5c06\u66f4\u96be\u83b7\u5f97\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e89\u593a\u8f83\u5c0f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6c60\u7684\u4efd\u989d\u3002\u201d\u5728\u5bb6\u5de5\u4f5c\u7684\u6700\u5927\u597d\u5904\u662f\uff0c\u60a8\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u5bf9\u4ee3\u7801\u5927\u558a\u5927\u53eb\u3002", "note_en": "First off, if you haven\u2019t kept up with the saga of  Amazon Web Services and  Elastic, here\u2019s the briefest of recaps. A few years ago,  AWS basically forked ElasticSearch to offer it as a service, much to the open source community\u2019s dismay. In response, and after some time, Elastic decided to  change the licensing on ElasticSearch earlier this year to restrict its downstream use, again, much to the open source community\u2019s dismay. AWS then announced it would  fork the project to keep it fully open source, suddenly  becoming the apparent good guy\u00a0in the scenario. Finally, just a few months ago,  AWS released OpenSearch under the Apache License, Version 2.0 (ALv2), essentially completing the circle.\n  The  back and forth between ElasticSearch and AWS continues this week, this time with Elastic making further attempts at closing off access to ElasticSearch and shutting out AWS. AWS, in response, has said that it is working on  keeping clients of OpenSearch and Elasticsearch compatible with open source.\n AWS says that \u201cOpenSearch aims to provide wire compatibility with open source distributions of Elasticsearch 7.10.2, the software from which it was derived,\u201d making it easy to migrate to OpenSearch. While Elastic can\u2019t do anything about that, they can make changes to some  open source client libraries that are commonly used.\n \u201cOver the past few weeks, Elastic added  new logic to several of these clients that rejects connections to OpenSearch clusters or to clusters running open source distributions of Elasticsearch 7, even those provided by Elastic themselves. While the client libraries remain open source, they now only let applications connect to Elastic\u2019s commercial offerings,\u201d AWS writes.\n If Elastic were looking to get back into the good graces of the open source community, this surely does not seem like the way.\n Kudos to  @elastic for making us all collateral damage in its war with  @awscloud. It\u2019s my bad for pinning dependencies as &gt;=7.0.0,&lt;8.0.0 and getting this update automatically on a deploy. But still, pretty crappy to break the ES python package for anyone using AWS.  #elasticsearch  pic.twitter.com/Vb5VatOXdl\n  Instead, AWS is again coming out as the savior of open source in this scenario, it would seem, this time promising to offer \u201ca set of new open source clients that make it easy to connect applications to any OpenSearch or Elasticsearch cluster\u201d that \u201cwill be derived from the last compatible versions of corresponding Elastic-maintained clients before product checks were added.\u201d\n \u201cIn the spirit of openness and interoperability, we will make reasonable efforts to maintain compatibility with all Elasticsearch distributions, even those produced by Elastic,\u201d they write.\n In the meantime, while the OpenSearch community works on creating the replacement libraries, AWS recommends that users do not update to the latest version of any Elastic-maintained clients, lest their applications potentially cease functioning.\n Legitimately killing them with kindness. This is the type of moves that elasticsearch should be making because it\u2019s in the best interest of the community. They have made their stance clear though. It\u2019s about the money.\n   Facebook Open Sources Computational Integrity Tool: You Game of Thrones fans should be ultimately pleased with Facebook\u2019s latest open source project  Winterfell, a STARK prover and verifier. Beyond the cultural reference,  Winterfell is an implementation of the  Scalable Transparent Arguments of Knowledge (STARK) prover and verifier, and more specifically makes it possible for the average developer to \u201cbenefit from proofs of computational integrity (CI) that would normally require an in-depth knowledge of cryptography to implement.\u201d CI proofs allow users to run a computation, get a result, and then \u201cconvince anyone that you did the computation correctly without their having to rerun the computation themselves.\u201d A subset of this is the zero-knowledge proof (ZKP), which allows the same functionality, while also obscuring the inputs. All of this becomes increasingly pertinent with the recent trend of blockchain, but Facebook writes that \u201cZKPs have numerous potential applications outside of the blockchain space as well\u201d but they haven\u2019t really taken off because of the expertise and computation required. \u201cWe developed Winterfell to bridge these gaps and to bring ZKPs within reach of regular developers,\u201d Facebook writes in its blog post. Written in Rust, Winterfell has been released to  Crates.io and comes with an end-to-end  tutorial as well as an  examples crate.\n   Rust Pushes for GATs Stabilization: In a blog post this week about  the push for GATs stabilization, Jack Huey, a member of the  Traits Working Group, assures their readers again and again that, whether they know it, understand it, or not, the move to add generic associated types (GATs) is \u201cvery exciting\u201d and a \u201cbig deal,\u201d indeed. Apparently, Rust has been trying to add GATs for quite some time now \u2014 the  RFC was first opened in April of 2016, predating even the push for const generics. And if you still doubt its importance, he points to the tracking issue on GitHub, noting it is the \u201cmost upvoted issue on the Rust repository.\u201d The main news here is that the generic_associated_types feature is no longer \u201cincomplete,\u201d which means you will no longer get a warning if you\u2019re trying to use it on the nightly build. For the full reasoning as to why this is important, and what exactly GATs are, head on over to the blog post to read about all the changes made to the compiler to get GATs to work, but beyond that, the team is looking to you to help stabilize the new feature. \u201cWe need you to test this feature, to file issues for any bugs you find or for potential diagnostic improvements. Also, we\u2019d love for you to just tell us about some interesting patterns that GATs enable over on  Zulip,\u201d they write.\n FSF Wants Your Thoughts on GitHub Copilot: While some may feel that  GitHub Copilot, the new \u201cAI pair programmer\u201d from GitHub trained on publicly available source code, is  generally not infringing copyright, the Free Software Foundation (FSF) is not so sure about the new \u201c Service as a Software Substitute.\u201d In its  call for white papers on philosophical and legal questions around Copilot, the FSF writes that \u201cCopilot raises many other questions which require deeper examination,\u201d such as whether a neural network trained in this manner can be considered fair use and if the code created by the tool can be considered to be infringing on copyrights. \u201cEven if everything might be legally copacetic,\u201d they write, \u201cactivists wonder if there isn\u2019t something fundamentally unfair about a proprietary software company building a service off their work.\u201d As such, the FSF is calling for white papers on the topic \u2014 see the blog post for a bulleted list of specific areas of interest \u2014 and will pay out $500 for published papers.\n What\u2019s the Big O Notation of deleting all of your code and starting over again?\n  The Stats Are In: If digging through the numbers excites you, we have two recent releases to satisfy your statistical desires. First,  the 2021 Stack Overflow Developer Survey is here, with answers from more than 80,000 respondents worldwide, offering insights into everything from how developers learn, to what languages and frameworks they use the most, to which ones offer the best pay. Spoiler alert: Rust once again takes the \u201cmost loved\u201d language spot, for the sixth year in a row. Click on through to the  full results to find out more. And while we\u2019re at it,  the RedMonk Programming Language Rankings also came out this week, showing a mostly stable field when it comes to their calculations, with JavaScript remaining number one, and Java moving back up to number two, alongside Python. More notably, according to RedMonk, is the relative stagnation of Go, Kotlin, and Rust, which it says \u201cmay reflect a new emerging reality of systems languages.\u201d The three are grouped together as \u201cwould-be challengers for the title of enterprise application language of choice,\u201d and RedMonk notes that Java does not seem to be going anywhere. \u201cIt seems plausible, therefore, that Java is retaining \u2014 through a combination of adaptability on its part and inertia on the enterprise\u2019s \u2014 a large share of the enterprise applications market, meaning that its would-be challengers \u2014 languages like Go, Rust and to a lesser extent Kotlin because of the shared JVM platform \u2014 are competing less with Java than with each other,\u201d they write. \u201cIf that hypothesis is correct, we should expect Java to sustain its performance and future gains from Go, Kotlin and Rust \u2014 if any \u2014 will be harder to come by as they compete for shares of a smaller pool of workloads.\u201d\n The best part of working from home is you can scream at your code as loud as you want.", "posttime": "2021-08-08 10:54:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "elasticsearch,saga,\u5f00\u6e90", "title": "Elasticsearch \u4f20\u5947\u4ecd\u5728\u7ee7\u7eed", "title_en": "The Elasticsearch Saga Continues", "transed": 1, "url": "https://thenewstack.io/this-week-in-programming-the-elasticsearch-saga-continues/", "via": "", "real_tags": ["saga", "\u5f00\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072056, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u529e\u516c\u684c\u4e0a\u7684\u7535\u8111\u901f\u5ea6\u5feb\u5f97\u4ee4\u4eba\u65e0\u6cd5\u7406\u89e3\u3002\u5b83\u4eec\u5728\u4e00\u79d2\u949f\u5185\u6267\u884c\u7684\u64cd\u4f5c\u6bd4\u4eba\u7c7b\u4e00\u767e\u5e74\u6267\u884c\u7684\u64cd\u4f5c\u8fd8\u591a\u3002\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a CPU \u6bcf\u79d2\u53ef\u4ee5\u6267\u884c\u6570\u5341\u4ebf\u6761\u6307\u4ee4\u7684\u65f6\u4ee3\uff0c\u5982\u679c\u8003\u8651\u5230\u591a\u6838\uff0c\u5219\u53ef\u4ee5\u6267\u884c\u6570\u767e\u4ebf\u6761\u6307\u4ee4\uff0c\u53ef\u4ee5\u4ee5\u6bcf\u79d2\u6570\u767e GB \u7684\u901f\u5ea6\u5c06\u6570\u636e\u4f20\u8f93\u5230 CPU \u7684\u5185\u5b58\uff0c\u4ee5\u53ca\u652f\u6301\u6d41\u5f0f\u8bfb\u53d6\u7684\u78c1\u76d8\u6bcf\u79d2\u5343\u5146\u5b57\u8282\u3002\u8fd9\u4e2a\u786c\u4ef6\u901f\u5ea6\u6781\u5feb\u7684\u65f6\u4ee3\uff0c\u4e5f\u662f\u7a0b\u5e8f\u4ece SSD \u6216 NVMe \u78c1\u76d8\u542f\u52a8\u9700\u8981\u51e0\u5341\u79d2\u7684\u65f6\u4ee3\uff1b\u81c3\u80bf\u7684 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5728\u5bbd\u5e26\u8fde\u63a5\u4e0a\uff0c\u4e5f\u9700\u8981\u51e0\u79d2\u949f\u624d\u80fd\u663e\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\uff1b\u4ee5\u6211\u4eec\u671f\u671b\u7684\u5343\u5206\u4e4b\u4e00\u901f\u5ea6\u5904\u7406\u6570\u636e\u7684\u7a0b\u5e8f\u3002\u8f6f\u4ef6\u6ede\u540e\u4e14\u7f13\u6162\u2014\u2014\u800c\u4e14\u60c5\u51b5\u51e0\u4e4e\u6ca1\u6709\u6539\u5584\u7684\u8ff9\u8c61\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u6211\u76f8\u4fe1\u4e3b\u8981\u539f\u56e0\u662f\u6211\u4eec\u5927\u591a\u6570\u5728 2000 \u5e74\u4e4b\u540e\u5f00\u59cb\u7f16\u7a0b\u7684\u4eba\u4ece\u672a\u5b66\u4f1a\u5982\u4f55\u5408\u7406\u4f7f\u7528\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684\u5927\u90e8\u5206\u57f9\u8bad\u90fd\u6559\u4f1a\u4e86\u6211\u4eec\u5ffd\u89c6\u7535\u8111\uff01\u5c3d\u7ba1\u6211\u4eec\u7684\u5de5\u4f5c\u8868\u9762\u4e0a\u662f\u521b\u5efa\u7a0b\u5e8f\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u7528\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a\u505a\u4e8b\uff0c\u4f46\u6211\u4eec\u66f4\u5f3a\u8c03\u5f00\u53d1\u8fc7\u7a0b\u548c\u9762\u5411\u5f00\u53d1\u7684\u5173\u6ce8\u70b9\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u7684\u7528\u6237\u4ea7\u54c1\u3002 SICP \u4e2d\u6709\u4e00\u53e5\u6211\u8ba4\u4e3a\u662f\u5bf9\u95ee\u9898\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u603b\u7ed3\uff1a\u201c\u7a0b\u5e8f\u5fc5\u987b\u662f\u4e3a\u4e86\u4eba\u4eec\u9605\u8bfb\u800c\u7f16\u5199\u7684\uff0c\u800c\u53ea\u662f\u987a\u4fbf\u8ba9\u673a\u5668\u6267\u884c\u3002\u201d\u8bb8\u591a\u7a0b\u5e8f\u5458\u53d1\u73b0\u8fd9\u53e5\u8bdd\u5f88\u660e\u667a\u4e14\u9f13\u821e\u4eba\u5fc3\uff0c\u4f46\u7528\u6237\u5bf9\u9605\u8bfb\u7a0b\u5e8f\u4e0d\u611f\u5174\u8da3\uff0c\u4ed6\u4eec\u5bf9\u5feb\u901f\u6267\u884c\u7a0b\u5e8f\u611f\u5174\u8da3\u3002\u5982\u679c\u6211\u4eec\u4ee5\u4e00\u79cd\u201c\u5076\u7136\u201d\u53ef\u6267\u884c\u7684\u65b9\u5f0f\u7f16\u5199\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u5f97\u5f88\u5feb\u3002\u8ba1\u7b97\u673a\u4e0d\u662f\u4e00\u4e2a\u53ef\u4ee5\u62bd\u8c61\u5316\u548c\u5ffd\u7565\u7684\u5b9e\u73b0\u7ec6\u8282\u2014\u2014\u5b83\u662f\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\u4e00\u4e2a\u5728\u8bbe\u8ba1\u4e2d\u6ca1\u6709\u4e3a\u76ee\u6807\u673a\u5668\u7559\u51fa\u7a7a\u95f4\u7684\u7a0b\u5e8f\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u6bd4\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u5f97\u6162\u3002\u4eba\u4eec\u8fc1\u79fb\u5230\u66f4\u5feb\u7684\u7a0b\u5e8f\u662f\u56e0\u4e3a\u66f4\u5feb\u7684\u7a0b\u5e8f\u5141\u8bb8\u7528\u6237\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\u770b\u770b\u8fc7\u53bb\u7684\u4f8b\u5b50\uff1a\u6700\u521d\u7684\u57fa\u4e8e Python \u7684 bittorrent \u5ba2\u6237\u7aef\u5f88\u5feb\u88ab\u901f\u5ea6\u66f4\u5feb\u7684 uTorrent \u53d6\u4ee3\uff1b Subversion \u5931\u53bb\u4e86\u4f5c\u4e3a\u4e3b\u8981 VCS \u7684\u5730\u4f4d\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a Git \u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u5feb\u5f97\u591a\uff1b\u6539\u8fdb\u7684 grep \u5b9e\u7528\u7a0b\u5e8f ack \u662f\u7528 Perl \u7f16\u5199\u7684\uff0c\u4f46\u968f\u7740\u901f\u5ea6\u66f4\u5feb\u7684 silversurfer \u548c ripgrep \u7684\u6d41\u884c\u5ea6\u8d8a\u6765\u8d8a\u4f4e\uff1b\u57fa\u4e8e Electron \u7684\u7f16\u8f91\u5668 Atom \u51e0\u4e4e\u88ab VSCode \u53d6\u4ee3\uff0cVSCode \u4e5f\u662f\u57fa\u4e8e Electron \u7684\uff0c\u4f46\u901f\u5ea6\u66f4\u5feb\uff1b Chrome \u4e4b\u6240\u4ee5\u6210\u4e3a\u6d4f\u89c8\u5668\u4e4b\u738b\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u5b83\u6bd4 Firefox \u548c Internet Explorer \u5feb\u5f97\u591a\u3002\u6700\u5feb\u7684\u9009\u62e9\u6700\u7ec8\u83b7\u80dc\u3002\u5982\u679c\u7ade\u4e89\u5bf9\u624b\u51fa\u73b0\u5e76\u4e14\u901f\u5ea6\u63d0\u9ad8\u4e86\u5341\u500d\uff0c\u60a8\u7684\u9879\u76ee\u4f1a\u5b58\u6d3b\u4e0b\u6765\u5417\uff1f\u53cd\u5bf9\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u9636\u6bb5\u8003\u8651\u8ba1\u7b97\u673a\u7684\u4e00\u4e2a\u5e38\u89c1\u8bba\u70b9\u662f\u201c\u8fc7\u65e9\u4f18\u5316\u662f\u4e07\u6076\u4e4b\u6e90\u201d\u3002\u7f13\u5b58\u53cb\u597d\u6027\u3001\u5206\u652f\u9884\u6d4b\u548c\u5e76\u884c\u6027\u7b49\u4e3b\u9898\u88ab\u6807\u8bb0\u4e3a\u201c\u4f18\u5316\u201d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u5e94\u8be5\u88ab\u6807\u8bb0\u4e3a\u201c\u5408\u7406\u4f7f\u7528\u201d\u3002\u6211\u4eec\u7528\u6237\u7684\u8ba1\u7b97\u673a\u6709\u8d44\u6e90\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u4ed6\u4eec\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u7684\u65b9\u5f0f\u8bbe\u8ba1\u6211\u4eec\u7684\u7a0b\u5e8f\u3002\u4ee5 CPU \u7f13\u5b58\u4e3a\u4f8b\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u663e\u793a\u4e86\u826f\u597d\u7684\u7f13\u5b58\u4f7f\u7528\u5bf9\u6027\u80fd\u7684\u5de8\u5927\u5f71\u54cd\u662f\u5bf9\u77e9\u9635\u7684\u5143\u7d20\u9010\u884c\u548c\u9010\u5217\u6c42\u548c\uff08\u8fd9\u662f\u4e00\u4e2a Rust Playground \u94fe\u63a5\uff0c\u6f14\u793a\u4e86\u8fd9\u4e00\u70b9\uff09\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9010\u884c\u6bd4\u9010\u5217\u5feb 12-16 \u500d\uff0c\u5373\u4f7f\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684 Big-O \u590d\u6742\u5ea6\u3002\u6027\u80fd\u7684\u5dee\u5f02\u4e0d\u662f\u7531\u4e8e\u62bd\u8c61\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u56e0\u7d20\uff0c\u800c\u662f\u7531\u4e8e\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u56e0\u7d20\uff1a\u66f4\u597d\u5730\u5229\u7528 CPU \u7f13\u5b58\u3002\u9010\u884c\u65b9\u6cd5\u5728\u7f13\u5b58\u4e2d\u5e26\u6765 16 \u4e2a\u6d6e\u70b9\u6570\uff0c\u5e76\u5728\u8fd4\u56de\u5185\u5b58\u4e4b\u524d\u4f7f\u7528\u5b83\u4eec\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u9010\u5217\u65b9\u6cd5\u4e5f\u5e26\u6765\u4e86 16 \u4e2a\u6d6e\u70b9\u6570\uff0c\u4f46\u5728\u8fd4\u56de RAM \u4e4b\u524d\u53ea\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\uff0c\u7559\u4e0b 15 \u4e2a\u672a\u4f7f\u7528\u7684\u503c\u2014\u2014\u8fd9\u662f 94% \u7684\u6d6a\u8d39\u3002\u5173\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u4e00\u4e9b\u4e8b\u60c5\u3002\u9996\u5148\uff0c\u7f16\u8bd1\u5668\u6ca1\u6709\u4e3a\u6211\u4eec\u4f18\u5316\u4ee3\u7801\u3002\u6211\u4eec\u7ecf\u5e38\u542c\u5230\u7a0b\u5e8f\u5458\u65e0\u6cd5\u51fb\u8d25\u4f18\u5316\u7f16\u8bd1\u5668\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u505a\u5230\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u5faa\u73af\u7684\u987a\u5e8f\uff0c\u4f46\u662f\u4f7f\u7528 LLVM \u540e\u7aef\u7684 Rust \u7f16\u8bd1\u5668\u6ca1\u6709\u8fd9\u6837\u505a\u3002\u4e5f\u8bb8\u8457\u540d\u7684\u8db3\u591f\u806a\u660e\u7684\u7f16\u8bd1\u5668\u4f1a\uff0c\u4f46\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\uff0c\u4ee5\u4e00\u79cd\u53ef\u4ee5\u6709\u6548\u5904\u7406\u7684\u65b9\u5f0f\u6392\u5217\u6570\u636e\u5c06\u4e0d\u662f\u7f16\u8bd1\u5668\u7684\u5de5\u4f5c\u2014\u2014\u800c\u662f\u6211\u4eec\u7684\u5de5\u4f5c\u3002\u5176\u6b21\uff0c\u5982\u679c\u5728\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u4e0d\u8003\u8651\u5b9e\u9645\u786c\u4ef6\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u83b7\u5f97\u8fd9\u79cd\u52a0\u901f\u3002\u6211\u4eec\u4e0d\u4f1a\u4e3a\u62bd\u8c61\u7684\u3001\u7406\u60f3\u5316\u7684\u6216\u865a\u6784\u7684\u673a\u5668\u7f16\u5199\u4ee3\u7801\uff1a\u6211\u4eec\u7f16\u5199\u5728\u6211\u4eec\u7528\u6237\u7684 CPU \u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u2014\u2014Intel\u3001AMD\u3001Apple \u7b49\u3002\u8fd9\u4e9b CPU \u6709\u7f13\u5b58\uff0c\u7f16\u5199\u4e0e\u786c\u4ef6\u800c\u4e0d\u662f\u53cd\u5bf9\u5b83\u3002\u7b2c\u4e09\uff0c16 \u500d\u7684\u52a0\u901f\u53ef\u80fd\u53ea\u662f\u590d\u6742\u6027\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u5e38\u6570\u56e0\u7d20\uff0c\u4f46\u5bf9\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u7a0b\u5e8f\u4f7f\u7528\u6109\u5feb\u548c\u6781\u5ea6\u4ee4\u4eba\u6cae\u4e27\u4e4b\u95f4\u7684\u533a\u522b\u3002\u6216\u8005\u5c0f\u989d AWS \u8d26\u5355\u548c\u5927\u989d AWS \u8d26\u5355\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6700\u540e\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u4f18\u5316\uff1a\u6211\u4eec\u6b63\u5728\u5229\u7528\u90a3\u91cc\u7684\u8d44\u6e90\u3002\u7528\u6237\u652f\u4ed8\u4e86\u4ed6\u4eec CPU \u7684\u5168\u4ef7\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7ed9\u4ed6\u4eec\u7269\u6709\u6240\u503c\u3002\n\u5728\u6211\u770b\u6765\uff0c\u4f18\u5316\u5c06\u5c1d\u8bd5\u5728\u53ef\u4ee5\u5bb9\u7eb3 16 \u4e2a\u7684\u7f13\u5b58\u884c\u4e2d\u6253\u5305 17 \u4e2a\u6d6e\u70b9\u6570\u3002\u5728\u9879\u76ee\u5f00\u59cb\u65f6\u8fd9\u6837\u505a\u786e\u5b9e\u4e3a\u65f6\u8fc7\u65e9\u3002\u6211\u5e0c\u671b\u5f88\u591a\u4eba\u4f1a\u60f3\u5230\u90a3\u53e5\u53e4\u8001\u7684\u683c\u8a00\u201c\u8ba9\u5b83\u5de5\u4f5c\uff0c\u8ba9\u5b83\u6b63\u786e\uff0c\u8ba9\u5b83\u5feb\u901f\u201d\uff0c\u5e76\u8ba4\u4e3a\u5728\u6211\u4eec\u7b2c\u4e00\u6b21\u7f16\u5199\u7a0b\u5e8f\u65f6\u5c06\u673a\u5668\u8003\u8651\u5728\u5185\u662f\u4e13\u6ce8\u4e8e\u201c\u8ba9\u5b83\u5feb\u901f\u201d\uff0c\u7136\u540e\u6211\u4eec\u624d\u5f00\u59cb\u201c\u8ba9\u5b83\u8d77\u4f5c\u7528\u201d\u3002\u6211\u660e\u767d\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u6309\u987a\u5e8f\u505a\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u7684\u7a0b\u5e8f\u5de5\u4f5c\u7136\u540e\u4f7f\u5b83\u6b63\u786e\uff0c\u5f53\u9700\u8981\u52a0\u5feb\u901f\u5ea6\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u610f\u8bc6\u5230\u6211\u4eec\u7684\u8bbe\u8ba1\u5bf9\u6211\u4eec\u4e0d\u5229\uff0c\u6211\u4eec\u5fc5\u987b\u64a4\u6d88/\u91cd\u505a\u5f88\u591a\u6211\u4eec\u6240\u505a\u7684\u5de5\u4f5c\u662f\u4e3a\u4e86\u4f7f\u7a0b\u5e8f\u6709\u6548\u5e76\u4f7f\u5176\u6b63\u786e\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u4ee5\u9762\u5411\u884c\u7684\u65b9\u5f0f\u6392\u5217\u6211\u4eec\u7684\u6570\u636e\uff0c\u5373\u7ed3\u6784\u6570\u7ec4\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u4e3a\u4e86\u52a0\u901f\u6211\u4eec\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u9762\u5411\u5217\u7684\u5b58\u50a8\uff0c\u5373\u6570\u7ec4\u7ed3\u6784\u3002\u5c06\u7a0b\u5e8f\u4ece\u4e00\u79cd\u5f62\u5f0f\u66f4\u6539\u4e3a\u53e6\u4e00\u79cd\u5f62\u5f0f\u662f\u4e00\u9879\u91cd\u5927\u7684\u91cd\u65b0\u67b6\u6784\u9879\u76ee\uff0c\u5982\u679c\u622a\u6b62\u65e5\u671f\u4e34\u8fd1\uff0c\u5e76\u4e14\u5e02\u573a\u4e0a\u7684\u8f6f\u4ef6\u66f4\u6162\uff0c\u683c\u8a00\u53d8\u6210\u201c\u8ba9\u5b83\u5de5\u4f5c\uff0c\u8ba9\u5b83\u6b63\u786e\uff0c\u68a6\u60f3\u8ba9\u5b83\u53d8\u5f97\u66f4\u5feb\u201d\u3002\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u7f16\u5199\u5728\u73b0\u4ee3\u673a\u5668\u4e0a\u8fd0\u884c\u5f97\u76f8\u5f53\u5feb\u7684\u4ee3\u7801\u5462\uff1f\u6211\u4eec\u5f00\u59cb\u517b\u6210\u4e60\u60ef\uff0c\u4e0d\u4ec5\u8981\u8003\u8651\u6211\u4eec\u7f16\u5199\u7684\u6a21\u578b\uff0c\u8fd8\u8981\u8003\u8651\u673a\u5236\uff1a\u8868\u793a\u6570\u636e\u7ed3\u6784\u9700\u8981\u591a\u5c11\u5b57\u8282\uff1f\u662f\u5426\u6709\u5f88\u591a\u6307\u9488\u4f1a\u5bfc\u81f4\u7f13\u5b58\u672a\u547d\u4e2d\uff1f\u6570\u636e\u7684\u7ec4\u7ec7\u65b9\u5f0f\u662f\u5426\u4f7f\u5206\u652f\u9884\u6d4b\u7ecf\u5e38\u6b63\u786e\uff1f\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5206\u5272\u5de5\u4f5c\u4f1a\u5f88\u5bb9\u6613\u5417\uff1f\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4ece\u6279\u6b21\u548c\u7cfb\u7edf\u7684\u89d2\u5ea6\u5f00\u59cb\u601d\u8003\u3002\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u4e3a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u4e00\u4e2a\u5206\u8bcd\u5668\uff1b\u5982\u679c\u6211\u4eec\u5c06\u4ee4\u724c\u89c6\u4e3a\u5b8c\u5168\u72ec\u7acb\u7684\u6570\u636e\u7247\u6bb5\uff0c\u5219\u6bcf\u4e2a\u4ee4\u724c\u90fd\u9700\u8981\u643a\u5e26\u4e0e\u4ee4\u724c\u5173\u8054\u7684\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\uff0cstruct Token { tag: Tag, text: String, ... }\uff09\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6807\u8bb0\u5316\u89c6\u4e3a\u4e00\u4e2a\u7cfb\u7edf\u5e76\u5c06\u6807\u8bb0\u89c6\u4e3a\u8be5\u7cfb\u7edf\u7684\u4f9d\u8d56\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6807\u8bb0\u751f\u6210\u5668\u4e2d\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u6c60\uff0c\u5e76\u4e14\u6807\u8bb0\u53ef\u4ee5\u5728\u6c60\u4e2d\u4e3a\u5176\u5173\u8054\u7684\u6587\u672c\u521b\u5efa\u4e00\u4e2a\u7d22\u5f15\u3002\u8fd9\u901a\u8fc7\u4e0d\u5fc5\u590d\u5236\u5b57\u7b26\u4e32\u6765\u8282\u7701\u5185\u5b58\u5e76\u4f7f\u4ee4\u724c\u66f4\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5728\u4e00\u4e2a\u7f13\u5b58\u884c\u4e2d\u5bb9\u7eb3\u66f4\u591a\u3002\u9762\u5411\u6570\u636e\u7684\u8bbe\u8ba1\u662f\u4e00\u79cd\u5173\u6ce8\u8fd9\u4e9b\u95ee\u9898\u7684\u7f16\u7a0b\u65b9\u6cd5\u3002\u76ee\u524d\uff0c\u5927\u591a\u6570\u9762\u5411\u6570\u636e\u7684\u8bbe\u8ba1\u4ece\u4e1a\u8005\u90fd\u5728\u6e38\u620f\u884c\u4e1a\u5de5\u4f5c\uff0c\u4f46\u8fd9\u4e9b\u89c1\u89e3\u5728\u5404\u4e2a\u9886\u57df\u90fd\u5f88\u6709\u4ef7\u503c\u3002 \uff08\u4f8b\u5982\uff0cAndy Kelly \u5728 Zig 0.8.0 \u53d1\u884c\u8bf4\u660e\u4e2d\u9ad8\u5ea6\u8bc4\u4ef7\u4e86\u9762\u5411\u6570\u636e\u7684\u8bbe\u8ba1\u3002\uff09\u5982\u679c\u60a8\u4ece\u672a\u63a5\u89e6\u8fc7\u9762\u5411\u6570\u636e\u7684\u8bbe\u8ba1\uff0c\u90a3\u53ef\u80fd\u4f1a\u6709\u70b9\u9707\u60ca\u2014\u2014\u5f88\u591a\u5e38\u89c1\u7684\u7f16\u7a0b\u7684\u667a\u6167\uff08\u4f8b\u5982\uff0c\u9c8d\u52c3\u53d4\u53d4\u7684 SOLID \u539f\u5219\uff09\u88ab\u51b7\u9177\u800c\u8270\u96be\u7684\u5de5\u7a0b\u6240\u56de\u907f\u548c\u53d6\u4ee3\u3002\u5b83\u770b\u8d77\u6765\u5f88\u53ef\u6015\u800c\u4e14\u4e0e\u4f17\u4e0d\u540c\uff0c\u4f46\u5982\u679c\u6211\u4eec\u8981\u4ea4\u4ed8\u7684\u8f6f\u4ef6\u901f\u5ea6\u4e0d\u4f1a\u6bd4\u5b83\u6162\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u505a\u7684\u3002", "note_en": "The computers sitting on our desks are incomprehensibly fast. They can perform more operations in one second than a human could in one hundred years. We live in an era of CPUs that can perform billions of instructions per second, tens of billions if we take multi-cores into account, of memory that can transfer data to the CPU at hundreds of gigabytes per second, of disks that support streaming reads of gigabytes per second. This era of incredibly fast hardware is also the era of programs that take tens of seconds to start from an SSD or NVMe disk; of bloated web applications that take many seconds to show a simple list, even on a broadband connection; of programs that process data at a thousandth of the speed we should expect. Software is laggy and sluggish \u2014 and the situation shows little signs of improvement. Why is that?\n I believe that the main reason is that most of us who started programming after, say the year 2000, have never learned how to make  reasonable use of the computational resources at our disposal. In fact, most of our training has taught us to ignore the computer!\n Although our job is ostensibly to create programs that let users  do stuff with their computers, we place a greater emphasis on the development process and dev-oriented concerns than on the final user product. SICP contains a quote that I find to be a good summarization of the problem: \u201cprograms must be written for people to read, and only incidentally for machines to execute.\u201d Many programmers find that quote wise and inspiring, but users are not interested in reading programs, they\u2019re interested in executing them, fast. We can\u2019t make programs that run fast if we write them in a way that is only \u201cincidentally\u201d executable. The computer is not an implementation detail that can be abstracted away and ignored \u2014 it\u2019s an integral part of the solution. A program that makes no room for the target machine in its design will inevitably run slower than one that does.\n People migrate to faster programs because faster programs allow users to do more. Look at examples from the past: the original Python-based bittorrent client was quickly overtaken by the much faster uTorrent; Subversion lost its status as the premier VCS to Git in large part because every operation was so much faster in Git; the improved grep utility, ack, is written in Perl and waning in popularity to the faster silversurfer and ripgrep; the Electron-based editor Atom has been all but replaced by VSCode, also Electron-based, but which is faster; Chrome became the king of browsers largely because it was much faster than Firefox and Internet Explorer. The fastest option eventually wins. Would your project survive if a competitor came along and was ten times faster?\n A common argument against taking the computer into account during the design phase of a program is \u201cpremature optimzation is the root of all evil.\u201d Topics such as cache-friendliness, branch prediction, and parallelism are labeled as \u201coptimization\u201d, but really they should be labeled as \u201creasonable use\u201d. Our users&#39; computers have resources and we should design our programs in a way that they use those resources.\n Take the CPU cache for example. A simple program that shows what a massive impact good cache usage can have on performance is to sum the elements of a matrix row-by-row vs. column-by-column (here\u2019s a  Rust Playground link that demonstrates this). In this example, the row-by-row is about 12\u201316 times faster than the column-by-column, even though they have same Big-O complexity. The difference in performance is not due to an abstract, computer science factor, but due to a very concrete one: better use of the CPU cache. The row-by-row approach brings 16 floats in cache and uses them all before going back to memory; by contrast the column-by-column approach also brings 16 floats, but only uses one of them before going back to RAM, leaving 15 values unused \u2014 that\u2019s 94% waste.\n   There are a few things we should note about this example. First, the compiler did not optimize the code for us. We often hear that programmers can\u2019t beat an optimizing compiler, but in this case we did. We only needed to change the order of the loops, but the Rust compiler which uses the LLVM backend, did not do it. Maybe the famed sufficiently smart compiler would, but for the foreseeable future, arranging data in a way that it can be processed efficiently will not be the compiler\u2019s job \u2014 it\u2019ll be ours. Second, we can\u2019t get that speed-up without taking the actual hardware into account in our solution. We do not write code for abstract, idealized, or fictitious machines: we write code that runs on the CPUs of our users \u2014 Intel, AMD, Apple, etc. These CPUs have caches and it\u2019s perfectly reasonable to write code that works well with the hardware rather than against it. Third, a 16x speed-up may only be a constant factor in complexity theory, but to a user it can be the difference between a program being pleasant to use and being extremely frustrating. Or the difference between a small and large AWS bill. And finally, we should not consider this to be an optimization: we\u2019re making use of a resource that\u2019s there. The users paid the full price of their CPU, let\u2019s try and give them their money\u2019s worth.\n In my mind, an optimization would be trying to pack 17 floats in a cache line that can fit 16. Doing this at the beginning of the project would indeed be premature.\n I expect that many will think of the old aphorism \u201cmake it work, make it right, make it fast\u201d and argue that taking the machine into account when first writing the program is focusing on \u201cmake it fast\u201d before we even got to \u201cmake it work\u201d. I get that, but if we do things in order and make our program work and then make it right, when it\u2019s time to make it fast, we often realize that our design works against us and we have to undo/redo a lot of the work we did to make the program work and to make it right.\n For example, we may have arranged our data in a row-oriented fashion aka array of structs and we realize that in order to speed up our program we would need column-oriented storage, aka struct of arrays. Changing a program from one form to the other is a major re-architecture project, and one that may not be feasible if there\u2019s a deadline approaching and that\u2019s more slow software on the market and the aphorism becomes \u201cmake it work, make it right, dream of making it fast\u201d.\n So how do we write code that runs reasonably quickly on modern machines? We start by getting into the habit of not just thinking about the model of what we write, but also the mechanics: how many bytes are needed to represent a data structure? Are there many pointers that will cause cache misses? Is the data organized in a way that the branch prediction will be right often? Would it be easy to slice the work among multiple threads?\n Another way is to start thinking in terms of batches and systems. Suppose we are writing a tokenizer for a programming language; if we think about tokens as completely independent pieces of data, each one needs to carry the string associated with the token (e.g.,  struct Token { tag: Tag, text: String, ... }). If instead we think of tokenization as a system and of tokens as dependents of this system, we can create a string pool in the tokenizer and tokens can have an index into the pool for their associated text. This saves memory by not having to duplicate strings and makes the tokens smaller, which means more can fit in one cache line.\n Data-orienteddesign is anapproach to programming that concerns itself with such questions. At the moment, most data-oriented design practitioners work in the game industry, but the insights are valuable in every field. (For example, Andy Kelly spoke highly of data-oriented design in the  Zig 0.8.0 release notes.) If you\u2019ve never been exposed to data-oriented design, it can be a bit of a shock \u2014 a lot of the common  wisdom of programming (e.g., Uncle Bob\u2019s SOLID principles) is eschewed and replaced with cold, hard engineering. It looks scary and different, but it\u2019s what we need to do if we are to deliver software that is not orders of magnitude slower than it can be.", "posttime": "2021-08-08 10:54:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5229\u7528\u8ba1\u7b97\u673a,reasonable,\u7a0b\u5e8f", "title": "\u5408\u7406\u5229\u7528\u8ba1\u7b97\u673a\u8d44\u6e90", "title_en": "Making Reasonable Use of Computer Resources", "transed": 1, "url": "https://vfoley.xyz/reasonable-use/", "via": "", "real_tags": ["\u5229\u7528\u8ba1\u7b97\u673a", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "a33eace70f80a409cee7f47989938014.jpg", "infoid": 1072055, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u72ec\u7acb\u524d\u4e00\u5e74\uff0c\u5927\u9646\u4f1a\u8bae\u521b\u5efa\u4e86\u90ae\u653f\u670d\u52a1\u2014\u2014\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u653f\u5e9c\u673a\u6784\uff0c\u800c\u662f\u4f5c\u4e3a\u82f1\u56fd\u90ae\u653f\u7cfb\u7edf\u7684\u51e0\u4e2a\u65b0\u7684\u72ec\u7acb\u66ff\u4ee3\u65b9\u6848\u4e4b\u4e00\u3002\u4e00\u4e2a\u4f18\u52bf\uff1a\u8fd9\u5141\u8bb8\u7f8e\u56fd\u6301\u4e0d\u540c\u653f\u89c1\u8005\u5728\u6ca1\u6709\u5f53\u5c40\u62e6\u622a\u4ed6\u4eec\u7684\u4fe1\u4ef6\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4ea4\u6d41\u3002\u5357\u65b9\u66b4\u6c11\u6ca1\u6536\u5e76\u70e7\u6bc1\u901a\u8fc7\u90ae\u4ef6\u53d1\u9001\u7684\u5e9f\u5974\u4e3b\u4e49\u6750\u6599\u3002\u90ae\u653f\u5c40\u957f\u62d2\u7edd\u5e72\u9884\uff0c\u5236\u5b9a\u4e86\u4e00\u9879\u4e8b\u5b9e\u4e0a\u7684\u653f\u7b56\uff0c\u5141\u8bb8\u5728\u5974\u96b6\u5dde\u5ba1\u67e5\u6b64\u7c7b\u6587\u732e\u3002\u81ea\u7531\u4e3b\u4e49\u5e9f\u5974\u4e3b\u4e49\u8005 Lysander Spooner \u5efa\u7acb\u4e86\u79c1\u4eba\u7684 American Letter Mail Co.\u3002\u653f\u5e9c\u7684\u53cd\u5e94\u662f\u53d6\u7f14\u5b83\uff0c\u5e76\u5728 1851 \u5e74\u5b9e\u9a8c\u7ed3\u675f\u3002\u5185\u6218\u5f00\u59cb\uff0c\u8054\u90a6\u548c\u90a6\u8054\u90fd\u91c7\u7528\u4e86\u81ea\u5df1\u7684\u90ae\u653f\u5ba1\u67e5\u5f62\u5f0f\u3002\u90ae\u653f\u5c40\u957f\u82b1\u4e86\u4e00\u5e74\u65f6\u95f4\u62d2\u7edd\u6295\u9012\u88ab\u8ba4\u4e3a\u4e0d\u5fe0\u4e8e\u5de5\u4f1a\u4e8b\u4e1a\u7684\u6587\u4ef6\u3002\u5eb7\u65af\u6258\u514b\u6cd5\u6848\u89c4\u5b9a\uff0c\u6545\u610f\u90ae\u5bc4\u6216\u63a5\u6536\u4efb\u4f55\u201c\u80ae\u810f\u7684\u4e66\u7c4d\u3001\u5c0f\u518c\u5b50\u3001\u56fe\u7247\u3001\u7eb8\u5f20\u3001\u4fe1\u4ef6\u3001\u6587\u5b57\u3001\u5370\u5237\u54c1\u6216\u5176\u4ed6\u4e0d\u96c5\u7684\u51fa\u7248\u7269\u201d\uff0c\u4ee5\u53ca\u4efb\u4f55\u907f\u5b55\u836f\u3001\u4efb\u4f55\u5815\u80ce\u836f\u6216\u4efb\u4f55\u6709\u5173\u83b7\u53d6\u6216\u4f7f\u7528\u907f\u5b55\u836f\u5177\u6216\u5815\u80ce\u836f\u3002\u6700\u9ad8\u6cd5\u9662\u652f\u6301\u653f\u5e9c\u7981\u6b62\u90ae\u5bc4\u201c\u5173\u4e8e\u5f69\u7968\u7684\u901a\u544a\u201d\u7684\u6743\u5229\u2014\u2014\u5e76\u4e14\uff0c\u53ea\u8981\u6709\u6388\u6743\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u548c\u68c0\u67e5\u5305\u88f9\u4ee5\u627e\u5230\u6b64\u7c7b\u6750\u6599\u3002\u8b66\u5bdf\u902e\u6355\u4e86\u81ea\u7531\u4e3b\u4e49\u8bb0\u8005\u6469\u897f\u00b7\u54c8\u66fc\u3001\u57c3\u5fb7\u6e29\u00b7C\u00b7\u6c83\u514b\u548c\u4e54\u6cbb\u00b7\u54c8\u66fc\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53d1\u8868\u548c\u90ae\u5bc4\u53cd\u5bf9\u5a5a\u5185\u5f3a\u5978\u7684\u5973\u6743\u4e3b\u4e49\u8bba\u70b9\u3002\u6839\u636e\u5eb7\u65af\u6258\u514b\u6cd5\u6848\uff0c\u4f5c\u8005\u5bf9\u6b64\u7c7b\u653b\u51fb\u7684\u63cf\u8ff0\u88ab\u89c6\u4e3a\u6deb\u79fd\u3002\n\u7f8e\u56fd\u8fdb\u5165\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u540e\uff0c\u5a01\u5c14\u900a\u653f\u5e9c\u4e25\u5389\u6253\u51fb\u53cd\u6218\u3001\u53cd\u5f81\u6587\u3002\u5728\u65e0\u653f\u5e9c\u4e3b\u4e49\u6742\u5fd7\u300a\u5730\u7403\u6bcd\u4eb2\u300b\u7684\u6848\u4f8b\u4e2d\uff0c\u653f\u5e9c\u4e0d\u4ec5\u7981\u6b62\u90ae\u5bc4\u6750\u6599\u2014\u2014\u5b83\u8fd8\u902e\u6355\u4e86\u7f16\u8f91\u827e\u739b\u00b7\u6208\u5fb7\u66fc\uff0c\u7f6a\u540d\u662f\u201c\u9634\u8c0b\u8bf1\u4f7f\u4eba\u4eec\u4e0d\u6ce8\u518c\u201d\u53c2\u52a0\u9009\u79c0\uff0c\u76d1\u7981\u5979\uff0c\u5e76\u6700\u7ec8\u5c06\u5979\u9a71\u9010\u51fa\u5883\u3002\u653f\u5e9c\u62e6\u622a\u4e86\u7a0e\u52a1\u62b5\u6297\u8005 Vivien Kellems\uff08\u7f57\u65af\u798f\u653f\u5e9c\u7684\u8457\u540d\u6279\u8bc4\u8005\uff09\u7684\u56fd\u9645\u901a\u4fe1\uff0c\u5e76\u5c06\u5176\u6cc4\u9732\u7ed9\u4e13\u680f\u4f5c\u5bb6 Drew Pearson \u548c\u4f17\u8bae\u5458 John M. Coffee\uff08\u534e\u76db\u987f\u5dde\u6c11\u4e3b\u515a\uff09\u3002\u5496\u5561\u5728\u4f17\u8bae\u9662\u5730\u677f\u4e0a\u5f15\u7528\u4e86\u5b83\uff0c\u540c\u65f6\u6307\u8d23\u51ef\u52d2\u59c6\u65af\u98a0\u8986\u3002\u4e2d\u592e\u60c5\u62a5\u5c40\u5f00\u59cb\u9605\u8bfb\u7f8e\u56fd\u548c\u82cf\u8054\u4eba\u4e4b\u95f4\u7684\u4fe1\u4ef6\u3002\u79d8\u5bc6\u8ba1\u5212\u8fc5\u901f\u6269\u5c55\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u76d1\u89c6\u540d\u5355\uff0c\u8be5\u673a\u6784\u6bcf\u5e74\u975e\u6cd5\u6253\u5f00 13,000 \u591a\u5c01\u4fe1\u4ef6\uff0c\u76f4\u5230\u8be5\u884c\u52a8\u4e8e 1973 \u5e74\u7ed3\u675f\u3002\u5728\u95ee\u9898\u88ab\u8fd0\u9001\u5230\u5206\u9500\u5546\u4e4b\u524d\uff0c\u7528\u4e00\u79cd\u53eb\u505a Skatole \u7684\u5316\u5b66\u7269\u8d28\u9ed1\u8c79\uff0c\u4ece\u800c\u7ed9\u4ed6\u4eec\u201c\u4e00\u79cd\u6700\u96be\u95fb\u7684\u6c14\u5473\u201d\u3002\u8be5\u5c40\u653e\u5f03\u4e86\u8be5\u7279\u5b9a\u8ba1\u5212\uff0c\u4f46\u627e\u5230\u4e86\u5176\u4ed6\u65b9\u6cd5\u6765\u4f7f\u7528\u90ae\u4ef6\u9a9a\u6270\u66ff\u4ee3\u6587\u4ef6\u3002\u5728 9/11 \u540e\u70ad\u75bd\u88ad\u51fb\u4e4b\u540e\uff0c\u653f\u5e9c\u521b\u5efa\u4e86\u90ae\u4ef6\u9694\u79bb\u63a7\u5236\u548c\u8ddf\u8e2a\u7cfb\u7edf\uff0c\u4ee5\u6536\u96c6\u51e0\u4e4e\u6240\u6709\u5bc4\u5f80\u7f8e\u56fd\u7684\u90ae\u4ef6\u7684\u5916\u90e8\u4fe1\u606f\u3002\u4e00\u4f4d\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u540e\u6765\u4e3a\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u603b\u7ed3\u4e86\u8be5\u8ba1\u5212\uff1a\u201c\u8ba9\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u7684\u90ae\u4ef6\uff0c\u4ee5\u4fbf\u5c06\u6765\u6211\u4eec\u53ef\u4ee5\u56de\u53bb\u770b\u770b\u4f60\u5728\u4e0e\u8c01\u4ea4\u6d41\u3002\u201d\u7f16\u8005\u6ce8\uff1a\u6211\u4eec\u9080\u8bf7\u8bc4\u8bba\u5e76\u8981\u6c42\u5b83\u4eec\u662f\u6587\u660e\u7684\u548c\u4e3b\u9898\u7684\u3002\u6211\u4eec\u4e0d\u5bf9\u8bc4\u8bba\u8fdb\u884c\u5ba1\u6838\u6216\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\uff0c\u8fd9\u4e9b\u8bc4\u8bba\u5f52\u53d1\u8868\u8bc4\u8bba\u7684\u8bfb\u8005\u6240\u6709\u3002\u8bc4\u8bba\u4e0d\u4ee3\u8868 Reason.com \u6216 Reason Foundation \u7684\u89c2\u70b9\u3002\u6211\u4eec\u4fdd\u7559\u968f\u65f6\u4ee5\u4efb\u4f55\u7406\u7531\u5220\u9664\u4efb\u4f55\u8bc4\u8bba\u7684\u6743\u5229\u3002\u4e3e\u62a5\u6ee5\u7528\u884c\u4e3a\u3002 \u201c\u79d8\u5bc6\u8ba1\u5212\u8fc5\u901f\u6269\u5c55\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u76d1\u89c6\u540d\u5355\uff0c\u8be5\u673a\u6784\u6bcf\u5e74\u975e\u6cd5\u6253\u5f00 13,000 \u591a\u5c01\u4fe1\u4ef6\uff0c\u76f4\u5230\u8be5\u884c\u52a8\u4e8e 1973 \u5e74\u7ed3\u675f\u201d\n\u60a8\u5c06\u7a7a\u6c14\u5439\u5165\u5185\u90e8\uff0c\u5c06\u73bb\u7483\u7ea4\u7ef4\u6210\u50cf\u5de5\u5177\u63d2\u5165\u7f1d\u9699\u4e2d\uff0c\u6574\u4e2a\u5185\u5bb9\u5c31\u50cf\u5e73\u653e\u5728\u684c\u5b50\u4e0a\u4e00\u6837\u6613\u4e8e\u9605\u8bfb\u3002\u5982\u679c\u9876\u90e8\u88ab\u5de7\u5999\u5730\u5bc6\u5c01\uff0c\u5728\u4e24\u7aef\u7684\u6298\u53e0\u5904\u6233\u4e00\u4e2a\u7f29\u7565\u56fe\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e2a\u5c0f\u6495\u88c2\u53e3\u63d2\u5165\u6210\u50cf\u7535\u7f06\u3002\u90a3\u662f\u5728 Bush/Bush Kreigswaffen \u63a2\u9669\u4e4b\u524d\u3002\u70ad\u75bd\u201c\u4e0d\u5e73\u7b49\u4f46\u9002\u5f53\u201d\u7684\u62a5\u590d\u53ef\u80fd\u4f7f X \u5c04\u7ebf\u548c\u4e2d\u5b50\u6fc0\u6d3b\u66f4\u5bb9\u6613\u83b7\u5f97\u8d44\u91d1\uff0c\u56e0\u4e3a\u53d1\u52a8\u6b66\u529b\u7684\u653f\u5ba2\u662f\u76f4\u63a5\u76ee\u6807\u3002\u4e0b\u6b21\u60a8\u6709\u673a\u4f1a\u6295\u7968\u53cd\u5bf9\u542f\u52a8\u6b66\u529b\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9\u3002\u4e0d\u8fc7\uff0c\u6211\u4ecd\u5728\u7b49\u5f85\u201c\u81ea\u7531\u4e3b\u4e49\u8005\u7684\u5267\u900f\u6295\u7968\u201d\u8ba9\u4e00\u5207\u53d8\u5f97\u66f4\u597d\u3002\u8fc7\u53bb\u7684\u9009\u4e3e\u6bd4\u4ee5\u524d\u7684\u9009\u4e3e\u5c11\u3002 50 \u5e74\u5bf9\u4e8e\u4e00\u4e2a\u653f\u515a\u53ca\u5176\u610f\u8bc6\u5f62\u6001\u6765\u8bf4\u8db3\u4ee5\u6539\u53d8\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u4e16\u754c\uff0c\u6240\u4ee5\u5f88\u660e\u663e\u6709\u4eba\u505a\u5f97\u4e0d\u5bf9\u3002\u6211\u4eec\u771f\u7684\u9700\u8981\u5148\u77e5\u9053\uff0c\u7279\u6717\u666e\u4eca\u5929\u662f\u8d5e\u6210\u8fd8\u662f\u53cd\u5bf9\uff1f\u56e0\u4e3a\u8fd9\u91cc\u7684\u5927\u91cf\u8bc4\u8bba\u8005\u4f1a\u6548\u4eff\u3002\u662f\u7684\uff0c\u5c31\u50cf\u7279\u6717\u666e\u7b2c\u4e00\u6b21\u9650\u5236\u8fdb\u51fa\u9ad8\u65b0\u51a0\u75c5\u6bd2\u5730\u533a\u7684\u65c5\u884c\u4e00\u6837\uff0cTDS \u4eba\u7fa4\u62a8\u51fb\u4ed6\u6392\u5916\u3002\u4e16\u754c\u4e0a\u54ea\u91cc\u4f1a\u6709\u4eba\u666e\u904d\u8ba4\u4e3a\u7279\u6717\u666e\u53ef\u80fd\u662f\u4ec7\u5916\u8005\uff1f\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u75af\u72c2\u7684\u8c1c...... Drumpf \u4e25\u5389\u7684\u79fb\u6c11\u9650\u5236\u65e0\u7591\u4fc3\u6210\u4e86\u8fd9\u4e2a\u56fd\u5bb6\uff08\u9664\u4e86\u50cf\u7ebd\u7ea6\u8fd9\u6837\u7684\u84dd\u8272\u5dde\uff09\u707e\u96be\u6027\u7684\u5927\u6d41\u884c\u53cd\u5e94\u3002\n\u60f3\u60f3\u6240\u6709\u60f3\u8981\u8de8\u8d8a\u8fb9\u754c\u5e76\u5e2e\u52a9\u6211\u4eec\u4e0d\u582a\u91cd\u8d1f\u7684\u533b\u9662\u7684\u9ad8\u6280\u80fd\u58a8\u897f\u54e5\u533b\u751f\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u88ab\u6254\u8fdb\u4e86\u771f\u6b63\u7684\u96c6\u4e2d\u8425\u3002\u597d\u5427\uff0c\u4f60\u6765\u8fd9\u91cc\u662f\u4e3a\u4e86\u628a\u5de6\u6d3e\u548c\u6c11\u4e3b\u515a\u4eba\u5f53\u4f5c\u4e00\u5f20\u4ed8\u8d39\u6d77\u62a5\u6216\u53ea\u662f\u4e00\u53ea\u53ef\u601c\u7684\u6258\u5c3c\u889c\u5b50\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u90fd\u662f\u4e00\u4e2a\u7b11\u8bdd\u3002\u4ed6\u4eec\u9519\u8fc7\u4e86\u4e00\u4e2a\u91cd\u8981\u4e14\u4ee3\u4ef7\u9ad8\u6602\u7684\u8ba1\u5212\u3002\u5728\u70ad\u75bd\u6050\u614c\u4e4b\u540e\uff0c\u90ae\u5c40\u5f00\u59cb\u5c06\u6240\u6709\u653f\u5e9c\u4fe1\u4ef6\u53d1\u9001\u5230\u4fc4\u4ea5\u4fc4\u5dde\u7684\u4e00\u4e2a\u8bbe\u65bd\uff0c\u7528\u8f90\u5c04\u6765\u6740\u6b7b\u4efb\u4f55\u53ef\u80fd\u6f5c\u4f0f\u5728\u91cc\u9762\u7684\u70ad\u75bd\u5b62\u5b50\u3002\u5b83\u975e\u5e38\u6602\u8d35\uff0c\u800c\u4e14\u4f1a\u51cf\u6162\u901a\u4fe1\u548c\u5305\u88f9\u7684\u901f\u5ea6\u3002\u81ea 2001 \u5e74\u4ee5\u6765\uff0c\u70ad\u75bd\u75c5\u4e00\u76f4\u6ca1\u6709\u901a\u8fc7\u90ae\u4ef6\u53d1\u9001\uff0c\u4f46\u4ed6\u4eec\u5c06\u7ee7\u7eed\u82b1\u8d39\u6570\u5341\u4ebf\u7f8e\u5143\u6765\u4fdd\u62a4\u4e00\u4e24\u4e2a\u653f\u5e9c\u5de5\u4f5c\u4eba\u5458\u514d\u53d7\u4f24\u5bb3\u3002\u611f\u8c22\u4e0a\u5e1d\uff0c\u653f\u5e9c\u786e\u4fdd\u6211\u65e0\u6cd5\u83b7\u5f97\u6216\u53d1\u9001\u53ef\u80fd\u5bf9\u6211\u6216\u96c6\u4f53\u66f4\u5927\u5229\u76ca\u4e0d\u5229\u7684\u4e1c\u897f\uff0c\u8fd9\u4e9b\u66f4\u5927\u7684\u597d\u5904\u7531\u5f53\u524d\u638c\u6743\u7684\u4efb\u4f55\u6d3e\u7cfb\u6216\u653f\u5e9c\u672c\u8eab\u7684\u795e\u5723\u6027\u51b3\u5b9a\u3002\u6ca1\u6709\u63d0\u5230\u6240\u6709\u5728\u4e8c\u6218\u671f\u95f4\u79bb\u5f00\u7f8e\u56fd\u548c\u6765\u5230\u7f8e\u56fd\u7684\u90ae\u4ef6\u90fd\u88ab\u68c0\u67e5\u4e86\uff0c\u8fea\u514b\u548c\u963f\u7433\u00b7\u8d39\u66fc\u5728\u6d1b\u65af\u963f\u62c9\u83ab\u65af\u4e0e\u5ba1\u67e5\u5458\u73a9\u800d\u3002\u7136\u540e\u662f\u7ea6\u585e\u91cc\u5b89\u5728\u7b2c 22 \u6761\u4e16\u754c\u5927\u6218\u4e2d\u5bf9\u610f\u5927\u5229\u6d77\u5cb8\u9644\u8fd1\u7684\u90ae\u4ef6\u8fdb\u884c\u5ba1\u67e5\u3002 Butcha \u4e0d\u53ef\u80fd\u62e5\u6709\u4e00\u5207\u2026\u2026\u4f60\u4f1a\u628a\u5b83\u653e\u5728\u54ea\u91cc\uff1f\u95ee\u9898\u3002\u7531\u4e8e\u7b2c\u56db\u4fee\u6b63\u6848\u2014\u2014\u4f5c\u4e3a\u963b\u6b62\u8fd9\u4e9b\u6ee5\u7528\u7684\u4e00\u79cd\u624b\u6bb5\u2014\u2014\u4ec5\u9002\u7528\u4e8e\u6a61\u76ae\u7cd6\u800c\u4e0d\u9002\u7528\u4e8e\u79c1\u8425\u90e8\u95e8\uff0c\u79c1\u6709\u5316 PO \u5c06\u5982\u4f55\u6539\u5584\u8fd9\u4e00\u70b9\uff1f\n\u6770\u897f\u7684\u53e6\u4e00\u7bc7\u5f15\u4eba\u6ce8\u76ee\u7684\u7cbe\u5f69\u6587\u7ae0\u3002\u8bf7\u6ce8\u610f\u539a\u539a\u7684 A \u7ea7\u4e8b\u5b9e\u5185\u5bb9\u5728\u8089\u6c41\u4e2d\u6e38\u52a8\uff0c\u56e0\u4e3a\u53ea\u6709\u901a\u8fc7\u4ed4\u7ec6\u4fee\u526a\u624d\u80fd\u83b7\u5f97\u90a3\u79cd\u8f9b\u8fa3\u7684\u7b80\u6d01\u611f\u3002\u7f8e\u98df\u62a5\u9053\uff01\u90ae\u653f\u670d\u52a1\uff0c\u9664\u4e86\u4e00\u4e9b\u8d26\u5355\u548c\u5783\u573e\u90ae\u4ef6\u4e4b\u5916\uff0c\u5b83\u4eec\u8fd8\u6709\u522b\u7684\u7528\u9014\u5417\uff1f\u8fd9\u771f\u662f\u4ee4\u4eba\u9707\u60ca\u3002", "note_en": "A year before independence, the Continental Congress creates the Postal Service\u2014not as a government agency, but as one of several new independent alternatives to the British postal system. One advantage: This allows American dissidents to communicate without the authorities intercepting their letters.\n  Southern mobs seize and burn abolitionist material sent through the mail. The postmaster general refuses to intervene, establishing a de facto policy of permitting the censorship of such literature in the slave states.\n  The libertarian abolitionist Lysander Spooner establishes the private American Letter Mail Co. The government reacts by outlawing it, and in 1851 the experiment ends.\n  The Civil War begins, and both the Union and the Confederacy adopt their own forms of postal censorship. The postmaster general spends a year refusing to deliver papers deemed disloyal to the Union cause.\n  The Comstock Act makes it illegal to knowingly mail or receive any &#34;filthy book, pamphlet, picture, paper, letter, writing, print, or other publication of an indecent character,&#34; as well as any contraceptives, any abortifacients, or any information about acquiring or using contraceptives or abortifacients.\n  The Supreme Court upholds the government&#39;s right to bar &#34;circulars concerning lotteries&#34; from the mail\u2014and, provided it has a warrant, to open and inspect packages to find such material.\n  Police arrest the libertarian journalists Moses Harman, Edwin C. Walker, and George Harman for publishing and mailing a feminist argument against marital rape. The author&#39;s description of such an assault is deemed obscene under the Comstock Act.\n  After the U.S. enters World War I, the Wilson administration cracks down on anti-war and anti-draft literature. In the case of the anarchist magazine  Mother Earth, the government doesn&#39;t just bar the material from the mail\u2014it arrests editor Emma Goldman for &#34;conspiracy to induce persons not to register&#34; for the draft, imprisons her, and eventually deports her.\n  The government intercepts the international correspondence of tax resister Vivien Kellems\u2014a prominent critic of the Roosevelt administration\u2014and leaks it to columnist Drew Pearson and Rep. John M. Coffee (D\u2013Wash.). Coffee quotes from it on the House floor while accusing Kellems of subversion.\n  The CIA starts reading correspondence between people in the U.S. and the Soviet Union. The covert program quickly extends to a much larger watchlist, with the agency illegally opening more than 13,000 letters a year until the operation ends in 1973.\n  As part of its campaign against the underground press, the FBI considers a scheme to spray copies of\u00a0 The Black Panther\u00a0with a chemical called Skatole before the issues are shipped to distributors, thus giving them &#34;a most offensive odor.&#34; The bureau drops that particular plan but finds other ways to harass alternative papers using the mails.\n  In the wake of the post-9/11 anthrax attacks, the government creates the Mail Isolation Control and Tracking system to collect the information on the exterior of virtually everything mailed in the United States. One cybersecurity specialist later sums up the program for\u00a0 The New York Times: &#34;Let&#39;s record everyone&#39;s mail so in the future we might go back and see who you were communicating with.&#34;\n    Editor&#39;s Note: We invite comments and request that they be civil and on-topic. We do not moderate or assume any responsibility for comments, which are owned by the readers who post them. Comments do not represent the views of Reason.com or Reason Foundation. We reserve the right to delete any comment for any reason at any time.  Report abuses.\n  \u201cThe covert program quickly extends to a much larger watchlist, with the agency illegally opening more than 13,000 letters a year until the operation ends in 1973\u201d\n You blow air inside, insert fiberglass imaging tool in a gap and the entire content is as easily readable as if flat on a table. If the top is craftily sealed, poke a thumbnail into a fold at either end and insert imaging cable through a small tear. That was before Bush/Bush Kreigswaffen expeditions. The anthrax \u201cunequal but apposite\u201d retaliation may have made X-raying and neutron activation all the more easier to fund, since force-initiating politicians were directly targeted. Remember this when next you have a chance to vote against the initiation of force.\n  I\u2019m still waiting for \u201cLibertarian spoiler votes\u201d to make everything all better, though. There were less this past Election that even in previous Elections.\n  And 50 years is long enough for a political party and its ideology to change a nation and a world, so obviously somebody\u2019s not doing something right.\n  We really need to know first, is Trump for or against this today? Because a ton of commenters here will then follow suit.\n Yeah, like when Trump first restricted travel to and from high COVID areas and the TDS crowd lambasted him for being xenophobic.\n Where in the world would folks get the general idea that Trump might be xenophobic? It\u2019s truly a deranged mystery\u2026\n  Drumpf\u2019s draconian immigration restrictions certainly contributed to this country\u2019s (except for blue states like NY) disastrous pandemic response.\n  Just think of all the highly skilled Mexican doctors who wanted to cross the border and help our overwhelmed hospitals. Instead they were thrown into literal concentration camps.\n  Well you\u2019re here to fluff the left and democrats as a paid poster or just a pathetic Tony sock. Either way you\u2019re a joke.\n  They missed an important and costly program. After the Anthrax scares, the post office began sending all government correspondence to a facility in Ohio to be blasted with radiation to kill any anthrax spores that may lurk inside. It is outrageously expensive and slows correspondence and packages. Anthrax hasn\u2019t been sent through the mail since 2001, but they will continue to spend billions to protect one or two government workers from harm.\n    Thank god the government makes sure I can\u2019t get or send things that might be bad for me or the collective greater good, that greater good determined by whatever faction currently holds power, or the sanctity of the government itself.\n  failed to mention all mail leaving the U.S. and coming to the U.S. during WWII was inspected\n That and Dick and Arline Feynman toying with the censors at Los Alamos. And then there was Yossarian\u2019s censoring of mail off the coast of Italy in World War Catch-22. Butcha can\u2019t have everything\u2026 where would you put it?\n  Question. Since the 4th amendment \u2013 as a means of stopping those abuses \u2013 only applies to gummint not to private sector, how would privatizing the PO improve this?\n  Another conspicuously brilliant article by Jesse. Note the thick slices of Grade-A factual content swimming in gravy thickened by the kind of spicy terseness obtainable only through careful trimming. Gourmet reporting!\n  The postal service, are they still a thing for anything other than a few bills and junk mail? That\u2019s truly shocking.", "posttime": "2021-08-08 10:54:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u6c11\u4f17,long,\u653f\u5e9c", "title": "\u7f8e\u56fd\u653f\u5e9c\u957f\u671f\u622a\u83b7\u6c11\u4f17\u4fe1\u4ef6\u7684\u803b\u8fb1\u5386\u53f2", "title_en": "The U.S. government's long and shameful history of intercepting people's letters", "transed": 1, "url": "https://reason.com/2021/07/15/postal-censorship-and-surveillance-a-timeline/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u6c11\u4f17", "long", "\u653f\u5e9c"]}, {"category": "", "categoryclass": "", "imagename": "6f428d4e05342e8377b82174d6bdd5c7.jpg", "infoid": 1072053, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u5c0f\u8d29\u6b63\u5728\u4ed6\u7684\u624b\u63a8\u8f66\u4e0a\u5207\u4e0b\u770b\u8d77\u6765\u50cf\u6811\u5e72\u7684\u4e1c\u897f\u3002\u8fd9\u662f\u5728\u73ed\u52a0\u7f57\u5c14\uff0c\u6211\u5c45\u4f4f\u7684\u5370\u5ea6\u5357\u90e8\u5361\u7eb3\u5854\u514b\u90a6\u7684\u57ce\u5e02\u3002\u6838\u5fc3\u662f\u4e73\u767d\u8272\uff0c\u76ae\u80a4\u662f\u68d5\u6a59\u8272\u3002\u4ed6\u4ee5\u5916\u79d1\u533b\u751f\u7684\u7cbe\u786e\u5ea6\u6c34\u5e73\u5730\u3001\u6210\u5708\u5730\u5207\u5272\uff0c\u8584\u5f97\u6211\u53ef\u4ee5\u770b\u7a7f\u788e\u7247\u3002 \u201c\u8fd9\u662f\u6839\u3002\u5b83\u53ef\u4ee5\u957f\u5230 5 \u82f1\u5c3a\u6df1\uff0c\u91cd\u8fbe 300 \u516c\u65a4\uff0c\u201d\u4ed6\u5728\u56de\u5e94\u6211\u7684\u9707\u60ca\u65f6\u89e3\u91ca\u9053\u3002\u4ed6\u8bf4\uff0c\u5b83\u6765\u81ea\u90bb\u8fd1\u7684\u5580\u62c9\u62c9\u90a6\uff0c\u6765\u81ea\u201c\u4ece\u68ee\u6797\u4e2d\u83b7\u53d6\u5b83\u201d\u7684\u4eba\u3002\u4ed6\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u4eba\u63d0\u53d6\u6839\uff0c\u4f46\u770b\u5230\u4e86\u5b83\u6765\u81ea\u7684\u6811\u3002 \u201c\u8fd9\u5c31\u50cf\u4e00\u4e2a\u767b\u5c71\u8005\u3002\u5b83\u9001\u82b1\u3002\u5b83\u751f\u957f\u5728\u6d77\u8fb9\u3002\u5b83\u5728\u5370\u5ea6\u5357\u90e8\u88ab\u79f0\u4e3a Bhoochakara Gadda\uff0c\u5728\u5317\u90e8\u88ab\u79f0\u4e3a Ram Kand Mool\u3002\u201d\u6839\u53ef\u4ee5\u8fd9\u4e48\u5927\u5417\uff1f\u5c24\u5176\u662f\u6500\u63f4\u8005\u6216\u85e4\u8513\u7684\u6839\uff1f\u6211\u8fd8\u6ca1\u6765\u5f97\u53ca\u95ee\u8c37\u6b4c\uff0c\u6211\u7684\u96f6\u98df\u5c31\u51c6\u5907\u597d\u4e86\u3002\u7528\u76d0\u3001\u8fa3\u6912\u7c89\u548c\u9178\u6a59\u8c03\u5473\uff1b\u6211\u4e08\u592b\u5403\u4e86\u7cd6\u548c\u9178\u6a59\u3002\u5b83\u677e\u8106\uff0c\u591a\u6c41\uff0c\u6e05\u723d\uff0c\u4f46\u6ca1\u6709\u81ea\u5df1\u7684\u5473\u9053\u3002\u90a3\u5929\u665a\u4e0a\uff0c\u6211\u7528\u8c37\u6b4c\u641c\u7d22\u4e86 Bhoochakara Gadda\u3002\u6ca1\u6709\u592a\u591a\u3002\u7ef4\u57fa\u767e\u79d1\u5c06\u8be5\u690d\u7269\u7684\u5b66\u540d\u786e\u5b9a\u4e3a Maerua oblongifolia\uff0c\u4f46\u6ca1\u6709\u5b83\u7684\u7167\u7247\u3002\u6211\u8bfb\u5230 Maerua oblongifolia \u662f\u4e00\u79cd\u4f4e\u77ee\u7684\u3001\u6728\u8d28\u7684\u3001\u4f4e\u77ee\u7684\u704c\u6728\uff0c\u89c1\u4e8e\u5370\u5ea6\u3001\u5df4\u57fa\u65af\u5766\u3001\u975e\u6d32\u90e8\u5206\u5730\u533a\u548c\u6c99\u7279\u963f\u62c9\u4f2f\uff0c\u5b83\u4eec\u7684\u5757\u830e\u4f5c\u4e3a\u96f6\u98df\u51fa\u552e\uff0c\u5e76\u5728 Siddha \u7684\u53e4\u8001\u533b\u5b66\u7cfb\u7edf\u4e2d\u7528\u4f5c\u5174\u594b\u5242\u3002\u7814\u7a76\u8bba\u6587\u663e\u793a\u4e86\u5b83\u7684\u53f6\u5b50\u548c\u82b1\u6735\uff0c\u4f46\u6ca1\u6709\u663e\u793a\u6839\u3002\u6240\u4ee5\u6211\u51b3\u5b9a\u6df1\u5165\u7814\u7a76\u3002\u6211\u8054\u7cfb\u4e86\u6211\u6240\u5728\u5dde\u7684\u4e00\u4f4d\u6728\u6750\u79d1\u5b66\u5bb6\u3001\u4e00\u4f4d\u98df\u54c1\u79d1\u5b66\u6559\u6388\u548c\u4e00\u4f4d\u6089\u8fbe (Siddha) \u5b9e\u8df5\u8005\u3002\u4ed6\u4eec\u6ca1\u6709\u770b\u5230\u90a3\u68f5\u6811\u3002\u6211\u5c06\u641c\u7d22\u8f6c\u5411\u5357\u90e8\u7684\u53e6\u4e00\u4e2a\u5dde\uff0c\u5b89\u5f97\u62c9\u90a6\u3002\u6211\u6253\u7535\u8bdd\u7ed9\u5b83\u7684\u90e8\u843d\u90e8\u95e8\uff0c\u4f46\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u7ebf\u7d22\u3002\u7136\u540e\u6211\u7ed9\u751f\u7269\u591a\u6837\u6027\u59d4\u5458\u4f1a\u4e3b\u5e2d\u7684\u4fe1\u606f\u906d\u5230\u4e86\u6c89\u9ed8\u3002\u6211\u4e0e\u4e00\u4f4d\u7814\u7a76\u8fc7\u8fd9\u68f5\u6811\u7684\u690d\u7269\u5b66\u7814\u7a76\u5458\u4ea4\u8c08\u8fc7\uff0c\u624d\u5f97\u77e5\u4ed6\u4ece\u672a\u4eb2\u773c\u89c1\u8fc7\u5b83\u3002\u5f88\u5feb\uff0c\u6211\u5c31\u4f1a\u77e5\u9053\uff0c\u6211\u65e0\u6240\u4e8b\u4e8b\u7684\u597d\u5947\u5fc3\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u8c1c\uff0c\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u56f0\u6270\u7740\uff0c\u6709\u65f6\u751a\u81f3\u6fc0\u6012\u4e86\u690d\u7269\u5b66\u5bb6\u3002\u51e0\u5341\u5e74\u6765\uff0c\u8fd9\u79cd\u5c0f\u5403\u4e00\u76f4\u5728\u8857\u5934\u5e7f\u6cdb\u51fa\u552e\u2014\u2014\u4ece\u5317\u90e8\u7684\u54c8\u91cc\u74e6\u5e02\u5230\u897f\u90e8\u7684\u6d66\u90a3\u548c\u5357\u90e8\u7684\u51e0\u4e2a\u5730\u65b9\u2014\u2014\u7136\u800c\uff0c\u4e0d\u77e5\u4f55\u6545\uff0c\u4f3c\u4e4e\u6ca1\u6709\u4eba\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u5f53\u6211\u770b\u5230 MS Rathore \u535a\u58eb\u7684\u8bba\u6587\u65f6\uff0c\u6211\u53d6\u5f97\u4e86\u7a81\u7834\uff0c\u4ed6\u4e8e 2011 \u5e74\u5728\u5b9e\u9a8c\u5ba4\u4e2d\u7e41\u6b96\u4e86 Maerua oblongifolia\u3002\u4ed6\u5728\u62c9\u8d3e\u65af\u5766\u90a6\u7684\u6c99\u6f20\u5dde\u591a\u6b21\u770b\u5230\u8fd9\u68f5\u6811\u3002 \u201c\u4f46\u6211\u6ca1\u6709\u542c\u8bf4\u6216\u770b\u5230\u6709\u4eba\u5403\u6839\uff0c\u201d\u79d1\u5b66\u5bb6\u5728\u7535\u8bdd\u4e2d\u8bf4\uff0c\u542c\u8d77\u6765\u5f88\u56f0\u60d1\u3002\n\u201c\u5b83\u7684\u6839\u7a00\u5c11\u4e14\u4e0d\u53ef\u98df\u7528\uff0c\u201d\u4ed6\u7684\u8bba\u6587\u5bfc\u5e08\u3001\u9000\u4f11\u7684\u690d\u7269\u5b66\u6559\u6388 NS Shekhawat \u535a\u58eb\u8865\u5145\u9053\u3002 \u201c\u751f\u957f\u5728\u5e72\u65f1\u5730\u533a\uff0c\u54ea\u6765\u90a3\u4e48\u591a\u6c34\u957f\u51fa\u5927\u6839\u80a5\u591a\u6c41\uff1f [\u5c0f\u5403] \u4e0d\u53ef\u80fd\u662f\u957f\u53f6\u6708\u6842\u3002\u201d\u4e24\u4eba\u7ed9\u6211\u53d1\u4e86\u8fd9\u68f5\u6811\u7684\u7167\u7247\uff0c\u8fd9\u4e0e\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u63cf\u8ff0\u4e0d\u7b26\u3002\u7167\u7247\u4e2d\u7684\u6839\u6e90\u662f\u5728\u5b9e\u9a8c\u5ba4\u91cc\u751f\u957f\u7684\uff0c\u592a\u5c0f\u4e86\uff0c\u65e0\u6cd5\u5f97\u51fa\u4efb\u4f55\u7ed3\u8bba\u3002\u6211\u5728\u5370\u5ea6\u690d\u7269\u5b66\u4f1a\u524d\u4e3b\u5e2d T Pullaiah \u535a\u58eb\u65c1\u8fb9\u8bb2\u8bdd\u3002\u5728\u4ed6 2019 \u5e74\u7684\u300a\u4e16\u754c\u836f\u7528\u690d\u7269\u767e\u79d1\u5168\u4e66\u300b\u4e2d\uff0c\u4ed6\u5c06\u8fd9\u79cd\u5c0f\u5403\u4e0e Ipomoea d igitata \u8054\u7cfb\u8d77\u6765\uff0c\u8fd9\u662f\u4e00\u79cd\u6500\u7f18\u690d\u7269\uff0c\u957f\u51fa\u5e26\u6709\u9ec4\u68d5\u8272\u76ae\u6bdb\u7684\u5927\u5757\u6839\u3002\u4ed6\u4e00\u5b9a\u662f\u770b\u5230\u4e86\u6839\uff0c\u6211\u60f3\u3002 \u201c\u4e0d\u3002\u8fd9\u662f\u4e8c\u624b\u77e5\u8bc6\u3002\u6211\u4eec\u662f\u6559\u6388\uff0c\u5fd9\u4e8e\u6559\u5b66\u548c\u884c\u653f\u5de5\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u4f9d\u9760\u73b0\u6709\u6587\u732e\u5f97\u51fa\u7ed3\u8bba\uff0c\u201d\u4ed6\u89e3\u91ca\u8bf4\u3002\u6240\u4ee5\u6211\u6253\u4e86\u66f4\u591a\u7684\u7535\u8bdd\uff0c\u5199\u4e86\u66f4\u591a\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u4e00\u4e2a\u65b0\u540d\u5b57\u51fa\u73b0\u4e86\uff0c\u6211\u6240\u6709\u7684\u7814\u7a76\u90fd\u4f5c\u5e9f\u4e86\u3002\u90a3\u4e00\u5e74\u662f 1994 \u5e74\u3002\u6c11\u65cf\u690d\u7269\u5b66\u5bb6 Koppula Hemadri \u535a\u58eb\u6b63\u5728\u5370\u5ea6\u5404\u5730\u201c\u6316\u6839\u201d\u4ee5\u786e\u8ba4\u8fd9\u79cd\u5c0f\u5403\u7684\u8d77\u6e90\u3002\u4ed6\u7528\u9f99\u820c\u5170\u7ed3\u675f\u4e86\u4ed6\u7684\u641c\u7d22\u3002\u8fd9\u4e9b\u591a\u8089\u690d\u7269\u770b\u8d77\u6765\u50cf\u82a6\u835f\uff0c\u4f46\u53ef\u4ee5\u957f\u5230 10 \u82f1\u5c3a\u5bbd\u548c\u4e24\u500d\u9ad8\u3002\u6709\u4e9b\u6709\u4e00\u4e2a\u7c97\u58ee\u7684\u830e\uff0c\u4e0a\u9762\u6709\u5e26\u523a\u7684\u53f6\u5b50\uff0c\u6bd4\u5982\u83e0\u841d\u3002\u6709\u4e9b\u770b\u8d77\u6765\u6ca1\u6709\u830e\u3002 \u201c\u6211\u5c1d\u5230\u4e86\u9f99\u820c\u5170\u7684\u6839\u90e8\uff0c\u5b83\u4e0e\u6839\u90e8\u76f8\u8fde\uff0c\u201d\u73b0\u5df2\u9000\u4f11\u5e76\u4f4f\u5728\u5b89\u5f97\u62c9\u90a6\u7684\u8d6b\u9a6c\u5fb7\u91cc\u535a\u58eb\u8bf4\u3002 \u201c\u5b83\u662f\u6dc0\u7c89\u8d28\u7684\uff0c\u6709\u70b9\u50cf\u90a3\u79cd\u5c0f\u5403\u3002\u4f46\u5728\u90a3\u4e4b\u540e\u6211\u6ca1\u6709\u8ffd\u6c42[\u9886\u5148]\u3002\u201d\u540c\u5e74\uff0c\u5728\u540c\u4e00\u4e2a\u5dde\uff0c\u690d\u7269\u5b66\u5bb6 Ali Moulali \u535a\u58eb\u8d70\u5f97\u66f4\u8fd1\uff1a\u201c\u6211\u544a\u8bc9\u4e00\u4f4d\u4f9b\u5e94\u5546\uff0c\u5982\u679c\u4ed6\u900f\u9732\u690d\u7269\u7684\u8eab\u4efd\uff0c\u6211\u4f1a\u591a\u4ed8\u4ed6 1,000-2,000 \u5362\u6bd4\uff0813-27 \u7f8e\u5143\uff09\u3002 \u201d \u4ed6\u72b9\u8c6b\u4e86\u4e00\u4e0b\uff0c\u8bf4\u9053\uff1a\u201c\u8fd9\u662f\u5317\u5948\u826f\u7684\u57fa\u5730\u3002\u201d \u201c\u8fd9\u5c31\u662f\u5f53\u5730\u5bf9\u9f99\u820c\u5170\u5236\u6210\u7684\u7ea4\u7ef4\u7684\u79f0\u547c\u3002\u4f9b\u5e94\u5546\u8fd8\u900f\u9732\uff0c\u5b83\u4e0d\u662f\u6839\uff0c\u800c\u662f\u751f\u957f\u5728\u5730\u4e0a\u7684\u4e1c\u897f\u3002\n\u5728\u540c\u4e00\u65f6\u671f\uff0c\u5f00\u82b1\u690d\u7269\u5206\u7c7b\u5b66\u5bb6 SR Yadav \u535a\u58eb\u9f13\u52b1\u4ed6\u5728\u897f\u90e8\u9a6c\u54c8\u62c9\u65bd\u7279\u62c9\u90a6\u7684\u5b66\u751f\u4ed4\u7ec6\u7814\u7a76 Ram Kand\uff0c\u8fd9\u662f\u5f53\u5730\u5c0f\u5403\u7684\u540d\u79f0\u3002\u4ed6\u7684\u4e24\u4e2a\u5b66\u751f\u2014\u2014\u535a\u58eb\u3002\u6b63\u5728\u7814\u7a76\u5206\u5b50\u751f\u7269\u5b66\u548c\u5206\u7c7b\u5b66\u7684 Mansingraj S Nimbalkar \u548c Vinod B Shimpale \u535a\u58eb\u7ee7\u7eed\u4e3a\u8fd9\u4e2a\u8c1c\u56e2\u63d0\u4f9b\u4e86\u6700\u79d1\u5b66\u7684\u89c1\u89e3\u3002 2010 \u5e74\uff0c\u7ecf\u8fc7\u957f\u65f6\u95f4\u7684\u89e3\u5256\u5b66\u7814\u7a76\uff0c\u4ed6\u4eec\u5bf9\u4e00\u7247\u5c0f\u5403\u8fdb\u884c\u4e86 DNA \u6761\u5f62\u7801\u7f16\u7801\uff0c\u53d1\u73b0\u5b83\u4e0e\u9f99\u820c\u5170\u7684\u5339\u914d\u5ea6\u8fbe 89%\u3002\u9f99\u820c\u5170\u6709\u591a\u79cd\u79cd\u7c7b\uff0c\u4f46\u5b9e\u9a8c\u5ba4\u6d4b\u8bd5\u5c06\u5176\u8303\u56f4\u7f29\u5c0f\u5230\u9f99\u820c\u5170 Sisalana\uff0c\u4e00\u79cd\u6709\u65f6\u7528\u6765\u5236\u4f5c\u7c7b\u4f3c\u9f99\u820c\u5170\u9152\u7684\u690d\u7269\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u4ed6\u4eec\u8fdb\u884c\u4e86\u5b9e\u5730\u8003\u5bdf\uff0c\u62d4\u51fa\u4e86\u5251\u9ebb\uff0c\u5374\u53d1\u73b0\u4e86\u7f51\u72b6\u7684\u6d45\u6839\u3002\u63a5\u4e0b\u6765\uff0c\u4ed6\u4eec\u5207\u6389\u4e86\u5b83\u7684\u53f6\u5b50\uff0c\u5b83\u5c31\u5728\u90a3\u91cc\uff1a\u6570\u767e\u4e07\u5370\u5ea6\u4eba\u4ece\u98df\u54c1\u8f66\u4e0a\u719f\u6089\u7684\u80a5\u539a\u3001\u767d\u8272\u3001\u6c34\u6c6a\u6c6a\u7684\u6811\u5e72\u3002\u4ed6\u4eec\u5403\u4e86\u4e00\u7247\uff0c\u5c31\u50cf\u62c9\u59c6\u5eb7\u5fb7\u4e00\u6837\u65e0\u5473\u548c\u677e\u8106\u3002\u7814\u7a76\u7ed3\u679c\u4e8e\u6b21\u5e74\u53d1\u8868\u5728\u300a\u5f53\u4ee3\u79d1\u5b66\u300b\u4e0a\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5bf9\u8fd9\u79cd\u5c0f\u5403\u7684\u8eab\u4efd\u8fd8\u5b58\u5728\u7591\u95ee\u5462\uff1f \u201c\u5b83\u662f\u54ea\u79cd\u9f99\u820c\u5170\u2014\u2014\u897f\u8428\u62c9\u7eb3\u9f99\u820c\u5170\u3001\u7f8e\u6d32\u9f99\u820c\u5170\u8fd8\u662f\u5176\u4ed6\u9f99\u820c\u5170\uff1f\u201d Shimpale \u535a\u58eb\u8bf4\u3002 \u201c\u5728\u4f9b\u5e94\u5546\u5411\u6211\u4eec\u5c55\u793a\u5de5\u5382\u4e4b\u524d\uff0c\u6211\u4eec\u65e0\u6cd5\u5f97\u51fa\u7ed3\u8bba\u3002\u4ed6\u4eec\u5c06\u6b64\u4f5c\u4e3a\u5546\u4e1a\u79d8\u5bc6\uff0c\u4ee5\u6fc0\u53d1\u4eba\u4eec\u5bf9\u5b83\u7684\u597d\u5947\u5fc3\u3002\u201d\u662f\u7684\uff0c\u4f9b\u5e94\u5546\u6240\u8bf4\u7684\u6709\u4e00\u4e2a\u6a21\u5f0f\uff1a\u5b83\u662f\u6839\uff1b\u5b83\u662f\u836f\u7528\u7684\uff1b\u4ed6\u4eec\u4ece 200 \u516c\u91cc\u5916\u7684\u68ee\u6797\u6216\u975e\u6d32\u5f97\u5230\u5b83\u3002\u4ed6\u4eec\u8bf4\u5370\u5ea6\u6559\u795e\u62c9\u59c6\u548c\u4ed6\u7684\u59bb\u5b50\u548c\u5144\u5f1f\u5728\u4ed6\u4eec\u88ab\u6d41\u653e\u5230\u68ee\u6797\u671f\u95f4\u4ee5\u62c9\u59c6\u5eb7\u5fb7\u4e3a\u751f\uff0c\u800c Bhoochakara Gadda \u662f\u4e00\u79cd\u751f\u957f\u5728\u5730\u4e0b\u7684\u751c\u871c\u751f\u7269\u3002\u5c1d\u8bd5\u6279\u91cf\u8d2d\u4e70\u4ed6\u4eec\u7684\u80a1\u7968\uff0c\u4ed6\u4eec\u53ea\u4f1a\u7559\u4e0b\u51e0\u7247\u3002\u8bd5\u63a2\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5c31\u4f1a\u63a8\u8f66\u79bb\u5f00\u3002 \u201c\u9a6c\u54c8\u62c9\u65bd\u7279\u62c9\u90a6\u7684\u68ee\u6797\u5b98\u5458\u66fe\u8bd5\u56fe\u76d1\u89c6\u4ed6\u4eec\uff0c\u4f46\u5f92\u52b3\u65e0\u529f\uff0c\u201d\u5b81\u5df4\u5c14\u5361\u535a\u58eb\u56de\u5fc6\u9053\u3002\u51fa\u4e8e\u4e00\u79cd\u9884\u611f\uff0c\u6211\u7ed9\u5361\u7eb3\u5854\u514b\u90a6 GS Yadav \u7684\u4e00\u4f4d\u9ad8\u7ea7\u68ee\u6797\u5b98\u5458\u6253\u7535\u8bdd\u3002 \u201c\u4f60\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u624d\u80fd\u4ece\u4efb\u4f55\u68ee\u6797\u4e2d\u79fb\u9664\u6216\u63d0\u53d6\u4efb\u4f55\u4e1c\u897f\uff0c\u201d\u4ed6\u660e\u786e\u5730\u8bf4\u3002\u4f46\u662f\u9f99\u820c\u5170\u5e76\u4e0d\u5b8c\u5168\u9002\u5408\u68ee\u6797\u652f\u67b6\u3002\u5b83\u5728\u5370\u5ea6\u5e7f\u6cdb\u751f\u957f\uff0c\u5728\u8def\u8fb9\uff0c\u94c1\u8def\u6cbf\u7ebf\uff0c\u4f5c\u4e3a\u56f4\u680f\u3002\u7136\u800c\uff0c\u5b83\u53ef\u80fd\u4e0d\u90a3\u4e48\u5065\u5eb7\u3002 \u201c\u9f99\u820c\u5170\u542b\u6709\u5927\u91cf\u751f\u7269\u78b1\u3002\u5982\u679c\u5927\u91cf\u98df\u7528\uff0c\u5b83\u53ef\u80fd\u4f1a\u4e2d\u6bd2\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4ed6\u4eec\u51fa\u552e\u8584\u7247\u7684\u539f\u56e0\uff0c\u201d\u73b0\u5df2\u9000\u4f11\u7684 Yadav \u535a\u58eb\u8b66\u544a\u8bf4\u3002\u6211\u8d8a\u6765\u8d8a\u786e\u4fe1\u9f99\u820c\u5170\u662f\u7b54\u6848\uff0c\u76f4\u5230\u73ed\u52a0\u7f57\u5c14\u7684\u8425\u517b\u4e0e\u6280\u672f\u52a9\u7406\u6559\u6388 Chenna Kesava Reddy Sangati \u535a\u58eb\u5c06\u5176\u79f0\u4e3a\u201c\u4e0d\u53ef\u80fd\u201d\u3002\u4ed6\u5bf9\u9f99\u820c\u5170\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u7814\u7a76\uff0c\u4ee5\u4ece\u5176 Albomarginata \u54c1\u79cd\u4e2d\u751f\u4ea7\u9152\u7cbe\u996e\u6599\u3002 \u201c\u6211\u5403\u8fc7 Bhoochakara Gadda\u3002\u5b83\u7684\u53e3\u611f\u66f4\u987a\u6ed1\uff0c\u54ac\u8d77\u6765\u66f4\u67d4\u8f6f\uff0c\u800c\u4e14\u4e0d\u662f\u5f88\u751c\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u800c\u8fd9\u79cd\u9f99\u820c\u5170\u975e\u5e38\u751c\u3001\u6da9\u3001\u7ea4\u7ef4\u8d28\uff0c\u800c\u4e14\u5f88\u96be\u54ac\u3002\u201d\u56db\u6708\uff0c\u5370\u5ea6\u7684\u7b2c\u4e8c\u6ce2\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u4e86\u3002\u8857\u4e0a\u7684\u4eba\u7fa4\u53d8\u5c11\u4e86\uff0c\u624b\u63a8\u8f66\u66f4\u5c11\u4e86\uff0c\u6211\u7b2c\u4e00\u6b21\u89c1\u5230\u7684\u5c0f\u8d29\u4e5f\u4e0d\u89c1\u4e86\u3002 \u201c\u4ed6\u53bb\u4e86\u4ed6\u7684\u6751\u5b50\uff0c\u201d\u5728\u540c\u4e00\u6761\u8857\u4e0a\u5356\u897f\u74dc\u7684\u4e00\u4e2a\u4eba\u544a\u8bc9\u6211\u3002\u4f46\u4ed6\u4f20\u9012\u4e86\u4f9b\u5e94\u5546\u7684\u8054\u7cfb\u7535\u8bdd\u3002\n\u7531\u4e8e\u62c5\u5fc3\u518d\u6b21\u5c01\u9501\uff0c\u8be5\u4f9b\u5e94\u5546\u5df2\u8fd4\u56de\u5317\u90e8\u8d3e\u574e\u5fb7\u90a6\u3002\u5927\u6d41\u884c\u6b63\u5728\u627c\u6740\u4ed6\u7684\u751f\u610f\uff0c\u4ed6\u60f3\u4ece\u6211\u8fd9\u91cc\u77e5\u9053\u4e8b\u60c5\u4ec0\u4e48\u65f6\u5019\u4f1a\u6062\u590d\u6b63\u5e38\u3002\u6211\u80fd\u8bf4\u4ec0\u4e48\uff1f\u6211\u4eec\u8f6c\u79fb\u4e86\u8bdd\u9898\uff0c\u4ed6\u8f7b\u677e\u5730\u8bf4\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u830e\u2026\u2026\u6211\u5168\u5e74\u90fd\u5728\u5356\u2026\u2026\u6211\u53ea\u5728\u7167\u7247\u548c\u7535\u8bdd\u4e2d\u770b\u5230\u8fc7\u8fd9\u79cd\u690d\u7269\u3002\u201d\u54e6\uff01 \u201c\u4f60\u80fd\u544a\u8bc9\u6211\u4f60\u4ece\u54ea\u91cc\u627e\u5230 Bhoochakara Gadda \u7684\u4eba\u7684\u7535\u8bdd\u53f7\u7801\u5417\uff1f\u201d\u6211\u95ee\u3002\u4ed6\u6c89\u9ed8\u4e86\u3002 \u201c\u8bf7\u4e0d\u8981\u95ee\u8fd9\u4e2a\u3002\u6ca1\u6709\u4eba\u4f1a\u544a\u8bc9\u4f60\u4efb\u4f55\u4e8b\u60c5\u3002\u8fd9\u5c31\u662f\u8fd9\u9879\u4e1a\u52a1\u7684\u65b9\u5f0f\uff0c\u201d\u4ed6\u544a\u8bc9\u6211\uff0c\u4e00\u5206\u949f\u90fd\u88ab\u6fc0\u6012\u4e86\u3002\u7136\u540e\u4ed6\u51b7\u9759\u4e86\u4e0b\u6765\u3002 \u201c\u6211\u591a\u5e74\u6765\u4e00\u76f4\u5728\u5403\u8fd9\u4e2a\u3002\u5b83\u51b7\u5374\u8eab\u4f53\u3002\u987e\u5ba2\u8bf4\u8fd9\u5bf9\u7cd6\u5c3f\u75c5\u6709\u597d\u5904\u3002\u8fd9\u4e0d\u8fdd\u6cd5\uff0c\u6211\u77e5\u9053\u3002\u201d\u5728\u8d28\u7591\u6211\u7ed9\u4ed6\u6253\u7535\u8bdd\u7684\u52a8\u673a\u540e\uff0c\u4ed6\u540c\u610f\u770b\u4e13\u5bb6\u4eec\u4e89\u8bba\u7684\u690d\u7269\u7167\u7247\u3002 \u201c\u6ca1\u6709\uff0c\u201d\u4ed6\u56de\u7b54\u3002\u6211\u5f88\u4f24\u5fc3\uff0c\u4f46\u6253\u7535\u8bdd\u56de\u6765\u611f\u8c22\u4ed6\u3002\u4f46\u968f\u540e\u4ed6\u8bf4\uff0c\u201c\u7167\u7247 3\u3002\u90a3\u662f\u690d\u7269\u3002\u201d\u8fd9\u662f\u9f99\u820c\u5170Sisalana\u3002\u4ed6\u4e5f\u540c\u610f\u4e86\u7b2c\u4e8c\u5f20\u7167\u7247\uff0c\u90a3\u5c31\u662f\u7f8e\u56fd\u9f99\u820c\u5170\u3002 1\u53f7\u7167\u7247\u4e0a\u6ca1\u6709\u5b57\uff0cMaerua oblongifolia\u3002 \u201c\u4ed6\u4eec\u526a\u4e0b\u6811\u53f6\uff0c\u5728\u6811\u5e72\u4e0a\u6d82\u4e0a\u7ea2\u8272\uff0c\u4ee5\u4fdd\u6301\u5176\u767d\u8272\uff0c\u201d\u4ed6\u89e3\u91ca\u9053\u3002\u6bd5\u7adf\uff0c\u8fd9\u662f\u4e00\u79cd\u9f99\u820c\u5170\u5c0f\u5403\u5417\uff1f\u6211\u5c06\u7b49\u5f85\u6700\u540e\u7684\u51b3\u5b9a\uff0c\u56e0\u4e3a\u6765\u81ea\u62c9\u8d3e\u65af\u5766\u90a6\u7684\u53e6\u4e00\u4f4d\u690d\u7269\u5b66\u5bb6 MS Shekhawat \u535a\u58eb\u5411\u6211\u4fdd\u8bc1\uff0c\u5728\u5927\u6d41\u884c\u7ed3\u675f\u540e\uff0c\u4ed6\u5c06\u8fdb\u5165\u7530\u95f4\uff0c\u8fde\u6839\u62d4\u8d77\u3001\u5207\u7247\u548c\u54c1\u5c1d\u6bcf\u4e2a\u53ef\u80fd\u5019\u9009\u8005\u7684\u6837\u672c\uff0c\u5e76\u4e14\u4e00\u52b3\u6c38\u9038\u5730\u89e3\u5f00\u8c1c\u56e2\u3002 Gastro Obscura \u6db5\u76d6\u4e86\u4e16\u754c\u4e0a\u6700\u7f8e\u5999\u7684\u98df\u7269\u548c\u996e\u6599\u3002\u6ce8\u518c\u6211\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6bcf\u5468\u53d1\u9001\u4e24\u6b21\u3002", "note_en": "A vendor was cutting slices off what looked like the trunk of a tree on his push-cart. This was in Bengaluru, the city in the south Indian state of Karnataka where I live. The core was a creamy white and the skin a brownish-orange. He cut horizontally, in circles, with the precision of a surgeon, so thin that I could see through the pieces.\n \u201cIt\u2019s a root. It can grow five feet deep and 300kg,\u201d he explained, in response to my shock. He sources it, he said, from the neighbouring state of Kerala, from people who \u201cget it from the forests.\u201d He hasn\u2019t seen anybody extract the root, but has seen the tree it comes from. \u201cIt\u2019s like a climber. It gives flowers. It grows near the sea. It\u2019s called  Bhoochakara Gadda in south India and  Ram Kand Mool up north.\u201d\n Can a root be this massive? Especially the root of a climber or vine? Before I could ask Google, my snack was ready. It was seasoned with salt, chili powder, and lime; my husband\u2019s had sugar and lime. It was crunchy, juicy, and refreshing, but had no taste of its own.\n That night, I googled  Bhoochakara Gadda. There wasn\u2019t much. Wikipedia identified the scientific name of the plant as  Maerua oblongifolia, but had no photos of it.  Maerua oblongifolia is a low, woody, undershrub found in India, Pakistan, parts of Africa, and Saudi Arabia, whose tubers are sold as snacks and used as a stimulant in the ancient medicine system of Siddha, I read. Research papers showed its leaves and flowers but not the root. So I decided to dig in.\n  I contacted a wood scientist, a professor of food science, and a Siddha practitioner, each from my state. They hadn\u2019t seen the tree. I pivoted my search to another state in the south, Andhra Pradesh. I called up its tribal department, but got no leads. Then my messages to the head of the biodiversity board were met with silence. I spoke to a botany researcher who had studied the tree, only to learn he had never seen it in person.\n Soon enough, I\u2019d learn that my idle curiosity was, in fact, a mystery that has baffled and, at times, infuriated botanists for decades. This snack has been widely sold on the streets for decades\u2014from the city of Haridwar in the north to Pune in the west and in several places in the south\u2014and yet, somehow, no one seems to know what it is.\n  I had a breakthrough a few months later when I came across a thesis paper by Dr. MS Rathore, who had propagated  Maerua oblongifolia in the lab in 2011. He had seen the tree many times in the desert state of Rajasthan. \u201cBut I haven\u2019t heard or seen anybody eating the root,\u201d the scientist said over a call, sounding puzzled.\n \u201cIts roots are sparse and inedible,\u201d added Dr. NS Shekhawat, his thesis adviser and a retired professor of botany. \u201cGrowing in dry regions, where will it have so much water to develop big roots and be fat and juicy? [The snack] can\u2019t be  Maerua oblongifolia.\u201d\n The duo sent me photos of the tree, which did not match the description on Wikipedia. And the roots in the photos were grown in a lab and too tiny to conclude anything.\n I spoke next to Dr. T Pullaiah, former president of The Indian Botanical Society. In his 2019  Encyclopaedia of World Medicinal Plants, he links this snack to   Ipomoea  d  igitata , a climber that grows a large tuberous root with a yellowish-brown coat. He must have seen the root, I thought. \u201cNo. It was second-hand knowledge. We are professors, busy between teaching and administrative work, so we rely on existing literature to come to conclusions,\u201d he explained.\n So I made more calls, wrote more emails. And a new name came up that nullified all my research.\n  The year was 1994. Ethnobotanist Dr. Koppula Hemadri was going around India \u201cdigging out roots\u201d to confirm the origins of this snack. He ended his search with agave. These are succulents that look like aloe vera but can grow up to 10 feet wide and twice as tall. Some have a stout stem topped with spiny leaves, like pineapples. Some appear stemless.\n \u201cI tasted the base of agave , that\u2019s attached to roots,\u201d remarked Dr. Hemadri, who\u2019s now retired and lives in Andhra Pradesh. \u201cIt was starchy and a bit like that snack. But I did not pursue [the lead] after that.\u201d\n  In the same year, in the same state, botanist Dr. Ali Moulali got closer: \u201cI told a vendor I would pay him Rs1,000-2,000 ($13-27) more if he revealed the identity of the plant. He hesitated and said, \u2018It\u2019s the base of  Kitta Nara.\u2019 \u201c That\u2019s what the fibre made from agave is locally called. The vendor also revealed that it wasn\u2019t a root, but something that grew just above the ground.\n In the same period, flowering-plant taxonomist Dr. SR Yadav was encouraging his students in the western state of Maharashtra to scrutinise  Ram Kand, which is the snack\u2019s local name there. Two of his students\u2014Dr. Mansingraj S Nimbalkar and Dr. Vinod B Shimpale, who were studying molecular biology and taxonomy\u2014went on to provide the most scientific insight into this mystery.\n In 2010, after a long anatomical study, they performed DNA barcoding on a slice of the snack and found it to match that of agave\u2019s by 89 percent. There are several species of agave, but the lab test narrowed it down to  Agave Sisalana, a plant sometimes used to make a tequila-like drink . They did a field visit soon after and plucked out a  Sisalana only to find mesh-like, shallow roots. Next, they chopped off its leaves and there it was: the fat, white, watery trunk familiar to millions of Indians from food carts. They ate a slice from it, and it was tasteless and crunchy just like  Ram Kand. The findings were  published in Current Science the following year.\n  So why is there still doubt about the identity of this snack? \u201cWhich species of agave is it\u2014 Sisalana or  Americana or any other?\u201d Dr. Shimpale says. \u201cWe can\u2019t conclude until the vendors show the plant to us. They keep this as a business secret to create curiosity around it.\u201d\n Yes, there is a pattern to what the vendors say: It\u2019s a root; it\u2019s medicinal; they get it from a forest 200 kilometers away or in Africa. They say the Hindu god Ram, and his wife and brother, subsisted on  Ram Kand during their exile in the forests, and that  Bhoochakara Gadda is a sweet-something growing underground. Try to buy their stock in bulk and they\u2019ll spare no more than a few slices. Probe them and they\u2019ll cart away. \u201cForest officials in Maharashtra have tried to spy on them, but it was futile,\u201d Dr. Nimbalkar recalls.\n Going on a hunch, I rang up a senior forest official in Karnataka, GS Yadav. \u201cYou need permission to remove or extract anything from any forest,\u201d he says clearly. But agave doesn\u2019t fully fit into the forest bracket. It grows widely in India, on roadsides, along railway tracks, as fencing. However, it may not be so healthy. \u201cAgave has lots of alkaloids. It can be poisonous if eaten in large quantities. Maybe that\u2019s why they sell thin slices,\u201d Dr. Yadav, now retired, warns.\n I felt increasingly certain that agave was the answer until Dr. Chenna Kesava Reddy Sangati, an assistant professor of nutrition &amp; technology in Bengaluru, dubbed it \u201cimpossible.\u201d He has researched agave extensively in order to produce an alcoholic beverage from its  Albomarginata variety. \u201cI have eaten  Bhoochakara Gadda. It has a smoother mouthfeel, is softer to bite, and is not very sweet,\u201d he says. \u201cWhereas this agave is highly sweet, astringent, fibrous, and hard to bite.\u201d\n   In April, the second wave of coronavirus in India had set in. Crowds on the street had thinned, push-carts were fewer, and the vendor I had first met was gone. \u201cHe has gone to his village,\u201d a man who sells watermelons on the same street told me. But he passed on the vendor\u2019s contact number.\n Fearing another lockdown, the vendor had returned to the northern state of Jharkhand. The pandemic was killing his business and he wanted to know from me when things will be normal. What could I say?\n We shifted the topic and he came clean easily: \u201cIt\u2019s a stem \u2026 I sell it year-round \u2026 I have seen the plant only in photos, on the phone.\u201d Oh! \u201cWill you give me the phone number of the person you source  Bhoochakara Gadda from?\u201d I asked. He went silent.\n \u201cAsk anything but this, please. Nobody will tell you anything. This is how this business is,\u201d he told me, getting irritated by the minute. Then he calmed down. \u201cI\u2019ve been eating this for years. It cools the body. Customers say it\u2019s good for diabetes. It\u2019s not illegal, I know.\u201d\n  After questioning my motives for calling him, he agreed to look at photos of the plants that experts were debating. \u201cNone,\u201d he replied. I was gutted but called back to thank him. But then he said, \u201cPhoto number 3. That\u2019s the plant.\u201d It was  Agave Sisalana. He okayed Photo number 2 as well, which was  Agave Americana. There was no word on Photo No. 1,  Maerua oblongifolia.\n \u201cThey cut the leaves and rub red color on the trunk to preserve its white color,\u201d he explained.\n So is this an agave snack, after all? I will wait for the final word, as Dr. MS Shekhawat, another botanist from Rajasthan, has assured me that after the pandemic is over, he will go into the field, uproot, slice, and taste a sample of each likely candidate, and resolve the mystery once and for all.\n Gastro Obscura covers the world\u2019s most wondrous food and drink.  Sign up for our email, delivered twice a week.", "posttime": "2021-08-08 10:53:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56f0\u6270,street,\u535a\u58eb", "title": "\u56f0\u6270\u690d\u7269\u5b66\u5bb6\u6570\u5341\u5e74\u7684\u795e\u79d8\u8857\u5934\u5c0f\u5403", "title_en": "The Mysterious Street Snack That Has Baffled Botanists for Decades", "transed": 1, "url": "https://www.atlasobscura.com/articles/indian-street-snack-root", "via": "", "real_tags": ["\u56f0\u6270", "street", "\u535a\u58eb"]}, {"category": "", "categoryclass": "", "imagename": "00011562e2bc5e42079a253a9a5a85f0.jpg", "infoid": 1072052, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bd4\u7279\u5e01\u662f\u5f53\u4eca\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u52a0\u5bc6\u8d27\u5e01\u3002\u8fd9\u4e9b\u6d89\u53ca\u5927\u91cf\u8ba1\u7b97\u80fd\u529b\u7684\u6570\u5b57\u8d27\u5e01\u4e0d\u662f\u7531\u4e2d\u592e\u94f6\u884c\u53d1\u884c\uff0c\u800c\u662f\u7531\u8ba1\u7b97\u673a\u201c\u5f00\u91c7\u201d\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u6267\u884c\u9a8c\u8bc1\u4ea4\u6613\u7684\u80fd\u6e90\u5bc6\u96c6\u578b\u5de5\u4f5c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6570\u5b57\u5206\u7c7b\u8d26\u4e2d\uff0c\u79f0\u4e3a\u533a\u5757\u94fe.\u6b63\u5982\u5f00\u91c7\u7164\u70ad\u6216\u9ec4\u91d1\u53d6\u51b3\u4e8e\u8c01\u5148\u83b7\u5f97\u5546\u54c1\u4e00\u6837\uff0c\u6570\u5b57\u91c7\u77ff\u4e5f\u662f\u5982\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u673a\u76f8\u4e92\u7ade\u4e89\uff0c\u6210\u4e3a\u7b2c\u4e00\u4e2a\u9a8c\u8bc1\u4ea4\u6613\u5757\u5e76\u8d62\u5f97\u5956\u52b1\u7684\u4eba\u3002\u968f\u7740\u6bcf\u53f0\u65b0\u8ba1\u7b97\u673a\u4e89\u593a\u5956\u54c1\uff0c\u7b97\u6cd5\u90fd\u4f1a\u8fdb\u884c\u8c03\u6574\u4ee5\u4f7f\u5176\u66f4\u96be\u83b7\u5f97\u3002\u5c31\u50cf\u7164\u70ad\u516c\u53f8\u96c7\u4f63\u66f4\u591a\u7164\u77ff\u5de5\u4eba\u4e00\u6837\uff0c\u52a0\u5bc6\u77ff\u5de5\u8d2d\u4e70\u66f4\u591a\u66f4\u5feb\u7684\u8ba1\u7b97\u673a\uff0c\u5f62\u6210\u4e00\u79cd\u519b\u5907\u7ade\u8d5b\uff0c\u63a8\u52a8\u4e86\u5bf9\u7535\u529b\u7684\u5de8\u5927\u9700\u6c42\u3002\u4e00\u4e9b\u53d1\u7535\u5546\u2014\u2014\u53d1\u73b0\u5411\u6bd4\u7279\u5e01\u91c7\u77ff\u4e1a\u52a1\u63d0\u4f9b\u7535\u529b\u6bd4\u5411\u7535\u7f51\u51fa\u552e\u7535\u529b\u53ef\u4ee5\u8d5a\u66f4\u591a\u7684\u94b1\u2014\u2014\u6b63\u5728\u8f6c\u79fb\u91cd\u70b9\u3002\u62e5\u6709\u6d77\u72f8\u53bf\u6d77\u72f8\u8c37\u6838\u7535\u7ad9\u7684\u80fd\u6e90\u6e2f\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\uff0c\u5b83\u5c06\u4e3a\u4fc4\u4ea5\u4fc4\u5dde\u7684\u6bd4\u7279\u5e01\u91c7\u77ff\u6570\u636e\u4e2d\u5fc3\u63d0\u4f9b\u6838\u7535\u3002\u5362\u585e\u6069\u53bf\u8428\u65af\u594e\u54c8\u7eb3\u84b8\u6c7d\u7535\u7ad9\u7684\u6240\u6709\u8005\u5854\u4f26\u80fd\u6e90\u516c\u53f8\u4e5f\u5728\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u8be5\u516c\u53f8\u4e0a\u4e2a\u6708\u8868\u793a\uff0c\u5c06\u5f00\u53d1\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u6765\u6316\u6398\u6570\u5b57\u8d27\u5e01\uff0c\u8be5\u6570\u636e\u4e2d\u5fc3\u6700\u591a\u53ef\u4f7f\u7528 300 \u5146\u74e6\uff0c\u5373\u6838\u7535\u7ad9\u5bb9\u91cf\u7684 12%\u3002\n\u4e00\u4e9b\u4eba\u5c06\u79fb\u52a8\u88c5\u7f6e\u5e26\u5165\u6cb9\u7530\uff0c\u8fde\u63a5\u4ed6\u4eec\u7684\u673a\u5668\u4ee5\u4f7f\u7528\u5929\u7136\u6c14\u8fd0\u884c\uff0c\u5929\u7136\u6c14\u662f\u77f3\u6cb9\u4ea7\u54c1\u7684\u526f\u4ea7\u54c1\uff0c\u5426\u5219\u4f1a\u88ab\u71c3\u70e7\u3002\u5176\u4ed6\u4eba\u62c5\u5fc3\u6240\u6709\u8fd9\u4e9b\u6570\u5b57\u91c7\u77ff\u7684\u5927\u91cf\u548c\u4e0d\u65ad\u589e\u957f\u7684\u78b3\u8db3\u8ff9 - \u6bd4\u7279\u5e01\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u52a9\u63a8\u5668\u57c3\u9686\u9a6c\u65af\u514b\u6700\u8fd1\u547c\u5401\u8be5\u884c\u4e1a\u89e3\u91ca\u5176\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u8d21\u732e - \u6b63\u8bd5\u56fe\u5bfb\u627e\u53ef\u518d\u751f\u80fd\u6e90\u6765\u4e3a\u4ed6\u4eec\u7684\u673a\u5668\u63d0\u4f9b\u52a8\u529b\u3002\u4eca\u5929\uff0cScrubgrass \u662f\u4e00\u4e2a 85 \u5146\u74e6\u7684\u84dd\u8272\u76d2\u5b50\uff0c\u5728 Scrubgrass Township \u7684\u5c71\u4e0a\u6709\u4e00\u4e2a\u9ed1\u8272\u7684\u70df\u56f1\uff0c\u770b\u8d77\u6765\u5f88\u50cf\u5b83\u5728 1993 \u5e74\u9996\u6b21\u5f00\u653e\u65f6\u7684\u6837\u5b50\u2014\u2014\u9664\u4e86\u540e\u9762\u88c5\u6ee1\u6bd4\u7279\u5e01\u77ff\u5de5\u7684\u62d6\u8f66\u3002\u8be5\u884c\u52a8\u6700\u521d\u4e0e\u4e00\u6ce2\u6b64\u7c7b\u5de5\u5382\u4e00\u8d77\u4e0a\u7ebf\uff0c\u8fd9\u4e9b\u5de5\u5382\u65e8\u5728\u89e3\u51b3\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5e9f\u5f03\u7164\u5806\u7684\u9057\u7559\u95ee\u9898\u3002\u8fd9\u4e9b\u5de5\u5382\u5229\u7528\u4e86 1990 \u5e74\u4ee3\u7684\u4e00\u9879\u65b0\u6280\u672f\u2014\u2014\u5faa\u73af\u6d41\u5316\u5e8a\uff0c\u53ef\u4ee5\u71c3\u70e7\u8fd9\u79cd\u4f4e\u54c1\u4f4d\u6750\u6599\u5e76\u63a7\u5236\u786b\u548c\u4e00\u6c27\u5316\u4e8c\u6c2e\u7684\u6392\u653e\u3002\u77f3\u7070\u77f3\u88ab\u6ce8\u5165\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6240\u4ea7\u751f\u7684\u7070\u70ec\u73b0\u5728\u5448\u78b1\u6027\uff0c\u901a\u5e38\u4f1a\u6563\u5e03\u5728\u5e9f\u7164\u6765\u6e90\u7684\u571f\u5730\u4e0a\u4ee5\u4e2d\u548c\u9178\u3002\u53bb\u5e74\uff0c\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u73af\u5883\u4fdd\u62a4\u90e8\u4f30\u8ba1\uff0c\u5728\u8fc7\u53bb\u7684 30 \u5e74\u91cc\uff0c\u5927\u7ea6 3,700 \u82f1\u4ea9\u7684\u571f\u5730\u88ab\u56de\u6536\u5229\u7528\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u5728\u5e9f\u7164\u53d1\u7535\u5382\u71c3\u70e7\u7684\u7164\u5806\u4e4b\u540e\uff0c\u8be5\u5dde\u8fd8\u5269\u4e0b\u5927\u7ea6 9,000 \u82f1\u4ea9\u7684\u5e9f\u7164\u5806\u3002\u6709\u4e9b\u6869\u6709\u6570\u767e\u82f1\u5c3a\u6df1\u3002 \u201c\u663e\u7136\u8fd8\u6709\u66f4\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u201dDEP \u79d8\u4e66\u5e15\u7279\u91cc\u514b\u9ea6\u514b\u5510\u7eb3\u53bb\u5e74\u5728\u5173\u4e8e\u6b64\u7c7b\u53d1\u7535\u5382\u6e29\u5ba4\u6c14\u4f53\u5f71\u54cd\u7684\u542c\u8bc1\u4f1a\u4e0a\u5bf9\u5dde\u7acb\u6cd5\u59d4\u5458\u4f1a\u8bf4\u3002\u5b83\u4eec\u6bcf\u5355\u4f4d\u80fd\u6e90\u6392\u653e\u7684\u4e8c\u6c27\u5316\u78b3\u6bd4\u666e\u901a\u71c3\u7164\u7535\u5382\u591a\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u71c3\u6599\u8d28\u91cf\u8fdc\u4f4e\u4e8e\u7eaf\u7164\u3002\u8fd9\u4e00\u76f4\u662f\u4e00\u4e2a\u6743\u8861\u2014\u2014\u6e05\u7406\u5e9f\u7164\u5806\u53ef\u4ee5\u6e05\u7406\u5468\u56f4\u7684\u6c34\uff0c\u5e76\u4fee\u590d\u96be\u770b\u548c\u5371\u9669\u7684\u571f\u5730\u3002\u4f46\u662f\u4e8c\u6c27\u5316\u78b3\u4f1a\u8fdb\u5165\u7a7a\u6c14\u4e2d\u3002\n\u5728 2019 \u5e74\uff0c\u5373\u6709\u53ef\u7528\u8054\u90a6\u6570\u636e\u7684\u6700\u540e\u4e00\u5e74\uff0cScrubgrass \u6392\u653e\u4e86 371,000 \u5428\u4e8c\u6c27\u5316\u78b3\uff0c\u76f8\u5f53\u4e8e 80,000 \u8f86\u6c7d\u8f66\u884c\u9a76\u4e00\u5e74\u7684\u6e29\u5ba4\u6c14\u4f53\u8db3\u8ff9\u3002 2012 \u5e74\uff0c\u5f53\u5de5\u5382\u5168\u901f\u8fd0\u8f6c\u65f6\uff0c\u5b83\u7684\u6392\u653e\u91cf\u63a5\u8fd1 100 \u4e07\u5428\u3002\u9ea6\u514b\u5510\u7eb3\u5148\u751f\u53bb\u5e74\u8bf4\uff1a\u201c\u5728\u5269\u4e0b\u7684\u5783\u573e\u5806\u4e2d\uff0c\u5927\u7ea6\u6709 40 \u4e2a\u5df2\u7ecf\u70b9\u71c3\u5e76\u6301\u7eed\u71c3\u70e7\uff0c\u4e25\u91cd\u5f71\u54cd\u4e86\u5f53\u5730\u7684\u7a7a\u6c14\u8d28\u91cf\uff0c\u5e76\u91ca\u653e\u4e86\u5927\u91cf\u7684\u4e8c\u6c27\u5316\u78b3\u548c\u5176\u4ed6\u6c61\u67d3\u7269\u3002\u201d\u5176\u4ed6\u4f30\u8ba1\u8868\u660e\u71c3\u70e7\u5806\u7684\u6570\u91cf\u8d85\u8fc7 90\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 DEP \u57fa\u672c\u4e0a\u514d\u9664\u5e9f\u7164\u7535\u5382\u8d2d\u4e70\u78b3\u4fe1\u7528\u989d\u5ea6\u4f5c\u4e3a\u5176\u52a0\u5165\u533a\u57df\u6e29\u5ba4\u6c14\u4f53\u5021\u8bae\uff08\u4e00\u4e2a\u591a\u5dde\u78b3\u9650\u989d\u548c\u4ea4\u6613\u8ba1\u5212\uff09\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002\u6700\u521d\u662f\u53e6\u4e00\u4e2a\u4eba\u7684\u75c5\uff0c\u4ed6\u7236\u4eb2\u7684\u75c5\uff0c\u8ba9\u65af\u5bbe\u585e\u5148\u751f\u6d89\u8db3\u5e9f\u7164\u884c\u4e1a\u3002\u4f5c\u4e3a\u4e00\u540d\u6765\u81ea Mon Valley \u7684\u91c7\u77ff\u5de5\u7a0b\u5e08\uff0c\u4ed6\u5728 1990 \u5e74\u4ee3\u521d\u671f\u4f4f\u5728\u5fb7\u514b\u8428\u65af\u5dde\uff0c\u5f53\u65f6\u4ed6\u7684\u7236\u4eb2\u751f\u75c5\u4e86\uff0cSpence \u5148\u751f\u5f00\u59cb\u957f\u9014\u65c5\u884c\u5230\u5339\u5179\u5821\u7167\u987e\u4ed6\u3002\u7a81\u7136\u95f4\uff0c\u4ed6\u5c0f\u65f6\u5019\u770b\u60ef\u7684\u5e9f\u7164\u5806\u770b\u8d77\u6765\u4e0d\u4e00\u6837\u4e86\u2014\u2014\u5b83\u4eec\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u673a\u4f1a\u3002 1994 \u5e74\uff0c\u65af\u5bbe\u585e\u5148\u751f\u5728 West Deer \u8d2d\u4e70\u4e86 500 \u4e07\u5428\u7684\u7164\u6e23\uff08\u5373\u6ca5\u9752\u5783\u573e\uff09\uff0c\u5e76\u4e0e\u7ef4\u5357\u6208\u53bf\u7684\u4e00\u5bb6\u5168\u65b0\u5de5\u5382\u7b7e\u8ba2\u4e86\u71c3\u70e7\u5e9f\u7164\u7684\u5408\u540c\u3002\u82b1\u4e86\u5341\u5e74\u7684\u65f6\u95f4\u5c06\u6240\u6709\u8fd9\u4e9b\u6750\u6599\u8fd0\u5f80\u5317 60 \u82f1\u91cc\u5230 Scrubgrass\u3002\u88ab\u70e7\u6bc1\u540e\uff0c\u4ea7\u751f\u7684\u7070\u70ec\u7528\u5361\u8f66\u8fd0\u56de\u897f\u9e7f\u5e76\u6563\u5e03\u5728\u571f\u5730\u4e0a\u3002\u5b83\u5728\u90a3\u91cc\u53c8\u538b\u5b9e\u4e86\u5341\u5e74\u3002\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u65af\u5bbe\u585e\u5148\u751f\u7ad9\u5728\u963f\u52d2\u683c\u5c3c\u53bf\u5317\u90e8\u90a3\u7247\u5e73\u5766\u7684\u571f\u5730\u4e0a\uff0c\u8fd9\u91cc\u73b0\u5728\u662f\u4e00\u5bf9\u8db3\u7403\u573a\u548c\u4e00\u4e2a\u5ba4\u5185\u8fd0\u52a8\u573a\u7684\u6240\u5728\u5730\uff0c\u4ed6\u8c08\u5230\u4e86\u6e05\u7406\u5e9f\u7164\u540e\u53ef\u80fd\u4f1a\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u7136\u540e\u4ed6\u6cbf\u7740\u8fd9\u6761\u8def\u5f00\u4e86\u56db\u5206\u4e4b\u4e00\u82f1\u91cc\uff0c\u5728\u90a3\u91cc\u4e00\u5806\u5e9f\u5f03\u7684\u7164\u5e9f\u6599\u8868\u660e\u8fd8\u6709\u591a\u5c11\u5de5\u4f5c\u8981\u505a\u3002\u73b0\u5728\u6bcf\u5929\u5411 Scrubgrass \u8fd0\u9001 50 \u8f86\u5361\u8f66\u7684\u53e6\u4e00\u4e2a\u200b\u200b West Deer \u5806\u4ee3\u8868\u4e86\u4e00\u4e2a\u7164\u77ff\u7684\u6b8b\u4f59\u7269\uff0c\u8be5\u7164\u77ff\u66fe\u7ecf\u5728\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u4e3a\u5efa\u9020\u7f8e\u56fd\u6469\u5929\u5927\u697c\u548c\u751f\u4ea7\u6b66\u5668\u63d0\u4f9b\u94a2\u94c1\u3002\u8be5\u77ff\u4e8e 1904 \u5e74\u5f00\u5de5\uff0c\u516b\u5e74\u540e\u5173\u95ed\uff0c\u5730\u4e0a\u7559\u4e0b\u4e86\u6210\u5806\u7684\u5e9f\u7164\u3002\u6bcf\u6b21\u4e0b\u96e8\u65f6\uff0c\u6b8b\u7559\u7269\u90fd\u4f1a\u5c06\u9178\u6027\u91cd\u91d1\u5c5e\u6d78\u5165\u571f\u58e4\u4e2d\uff0c\u4f7f\u6eaa\u6d41\u53d8\u6210\u6a59\u8272\u3002\u4f46\u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u4e2d\uff0c\u5728\u4e24\u8f6e\u878d\u8d44\u4e2d\u5438\u5f15\u6295\u8d44\u8005\u7684\u5e76\u4e0d\u662f\u73af\u5883\u65b9\u9762\u7684\u5584\u4e3e\uff0c\u8fd9\u4e9b\u878d\u8d44\u7684\u6536\u76ca\u8d85\u8fc7 1 \u4ebf\u7f8e\u5143\u3002 Stronghold Digital Mining \u7684\u9996\u5e2d\u6267\u884c\u5b98\u517c\u603b\u88c1 Greg Beard \u8868\u793a\uff0c\u5438\u5f15\u529b\u5728\u4e8e\u6bd4\u7279\u5e01\u4e1a\u52a1\uff0c\u8be5\u516c\u53f8\u662f\u4ed6\u4e0e Spence \u5148\u751f\u521b\u7acb\u7684\uff0c\u65e8\u5728\u5c06 Scrubgrass \u548c\u5176\u4ed6\u51e0\u5bb6\u5e9f\u7164\u5382\u8f6c\u53d8\u4e3a\u52a0\u5bc6\u8d27\u5e01\u4e2d\u5fc3\u3002\u5468\u4e8c\uff0cStronghold \u5411\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u63d0\u4ea4\u4e86\u6210\u4e3a\u4e0a\u5e02\u516c\u53f8\u7684\u6587\u4ef6\u3002\n2017 \u5e74\uff0c\u5de5\u5382\u5de5\u7a0b\u5e08\u6770\u592b\u00b7\u574e\u8d1d\u5c14\u4ece Spence \u5148\u751f\u5bb6\u56de\u5bb6\u540e\u5c31\u5f00\u59cb\u7814\u7a76\u6bd4\u7279\u5e01\u3002\u4ed6\u89c2\u770b\u4e86\u4e00\u6bb5 40 \u5206\u949f\u7684 YouTube \u89c6\u9891\uff0c\u5e76\u8bf4\u8fd9\u4e2a\u60f3\u6cd5\u4e00\u9488\u89c1\u8840\uff1a\u201c\u8fd9\u662f\u4e00\u79cd\u4ee5\u6743\u529b\u4e3a\u57fa\u7840\u7684\u8d27\u5e01\u3002\u201d\u5728\u4e9a\u9a6c\u900a\u4e0a\uff0c\u4ed6\u4e70\u4e86\u4e00\u4e2a 50 \u7f8e\u5143\u7684 U \u76d8\uff0c\u627f\u8bfa\u5f00\u91c7\u6bd4\u7279\u5e01\u3002\u4ed6\u5c06\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u5207\u6362\u5230\u4e00\u4e2a\u5b64\u7acb\u7684\u7f51\u7edc\u5e76\u63d2\u5165\u3002\u5f53\u65f6\uff0c\u6bd4\u7279\u5e01\u4ecd\u7136\u662f\u201c\u8fb9\u7f18\u201d\uff0c\u574e\u8d1d\u5c14\u5148\u751f\u8bf4\uff0c\u4ed6\u62c5\u5fc3\u4f1a\u56e0\u4e3a\u52a0\u5bc6\u8d27\u5e01\u7684\u58f0\u8a89\u800c\u611f\u67d3\u8ba1\u7b97\u673a\u75c5\u6bd2\u751a\u81f3\u88ab FBI \u5217\u5165\u76d1\u89c6\u540d\u5355\u3002\u4e3a\u6050\u6016\u4e3b\u4e49\u8f6c\u79fb\u8d44\u91d1\u3002 USB \u8bb0\u5fc6\u68d2\u5982\u5ba3\u4f20\u7684\u90a3\u6837\u53d1\u6325\u4f5c\u7528\uff0c\u51e0\u5468\u540e\uff0c\u574e\u8d1d\u5c14\u5148\u751f\u6295\u8d44 1,000 \u7f8e\u5143\u4e70\u4e86\u4e00\u53f0\u77ff\u673a\uff0c\u8fd9\u662f\u4e00\u53f0\u552f\u4e00\u7528\u4e8e\u8fd0\u884c\u8ba1\u7b97\u7684\u8ba1\u7b97\u673a\u3002\u5b83\u8fd0\u884c\u4e86\u4e00\u5468\uff0c\u4ea7\u751f\u4e86\u76f8\u5f53\u4e8e 6.65 \u7f8e\u5143\u7684\u6bd4\u7279\u5e01\u3002\u574e\u8d1d\u5c14\u5148\u751f\u7d27\u5f20\u5730\u5c06\u673a\u5668\u7684\u6570\u5b57\u94b1\u5305\u8fde\u63a5\u5230 Scrubgrass \u7684 PNC \u5e10\u6237\u4ee5\u8f6c\u79fb\u6218\u5229\u54c1\uff0c\u7136\u540e\u4ed6\u8d70\u8fdb\u529e\u516c\u5ba4\u68c0\u67e5\u5b83\u662f\u5426\u771f\u7684\u51fa\u73b0\u5728\u90a3\u91cc\u3002 \u201c\u6211\u7684\u5929\u554a\u3002\u6211\u4e0d\u6562\u76f8\u4fe1\u8fd9\u771f\u7684\u4f1a\u594f\u6548\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u653e\u5165\u5176\u4e2d\u7684 15,000 \u4e2a\uff0c\u201d\u4ed6\u544a\u8bc9\u65af\u5bbe\u585e\u5148\u751f\u3002\n\u6839\u636e\u574e\u8d1d\u5c14\u5148\u751f\u7684\u8ba1\u7b97\uff0c\u4ee5\u8fd9\u4e2a\u4ef7\u683c\uff0c\u7528 15,000 \u53f0\u673a\u5668\u5f00\u91c7\u6bd4\u7279\u5e01\u5c06\u4f7f\u5de5\u5382\u7684\u8425\u4e1a\u6536\u5165\u589e\u52a0\u7ea6 50%\u3002\u7b2c\u4e00\u53f0\u673a\u5668\u7684\u6536\u76ca\u7528\u4e8e\u8d2d\u4e70\u7b2c\u4e8c\u53f0\u673a\u5668\uff0c\u7136\u540e\u8fd9\u4e24\u53f0\u673a\u5668\u7528\u4e8e\u8d2d\u4e70\u7b2c\u4e09\u53f0\u673a\u5668\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u4eca\u5929\uff0c\u5927\u7ea6\u6709 3,000 \u540d\u52a0\u5bc6\u8d27\u5e01\u77ff\u5de5\u88c5\u5728\u53d1\u7535\u5382\u540e\u9762\u7684\u6539\u88c5\u96c6\u88c5\u7bb1\u4e2d\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u5f52 Stronghold \u6240\u6709\uff0c\u6709\u4e9b\u5c5e\u4e8e\u4ece\u53d1\u7535\u5382\u8d2d\u4e70\u7535\u529b\u7684\u5176\u4ed6\u77ff\u4e1a\u516c\u53f8\u3002\u53e6\u5916 5,000 \u53f0\u673a\u5668\u8ba1\u5212\u5728\u4e0b\u4e2a\u6708\u5230\u8fbe\u3002\u6839\u636e\u63d0\u4ea4\u7ed9\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u7684\u6587\u4ef6\uff0cStronghold \u8ba1\u5212\u5728\u660e\u5e74\u5e74\u5e95\u524d\u8fd0\u8425 57,000 \u540d\u77ff\u5de5\u3002 2020 \u5e74\uff0c\u5f53\u53d1\u7535\u5382\u5f88\u5c11\u8fd0\u884c\u65f6\uff0cStronghold \u4ece\u5176\u6bd4\u7279\u5e01\u4e1a\u52a1\u4e2d\u8d5a\u5230\u7684\u94b1\u6bd4\u901a\u8fc7\u5c06 Scrubgrass \u7684\u80fd\u6e90\u51fa\u552e\u7ed9\u7535\u7f51\u8d5a\u7684\u94b1\u8fd8\u591a\u3002\u4eca\u5e74\u524d\u4e09\u4e2a\u6708\uff0c\u8fd9\u79cd\u8d8b\u52bf\u53d1\u751f\u4e86\u9006\u8f6c\u3002\u5b83\u4ece\u7535\u529b\u9500\u552e\u4e2d\u83b7\u5f97\u4e86\u8fd1 200 \u4e07\u7f8e\u5143\uff0c\u4ece\u5176\u52a0\u5bc6\u6570\u636e\u4e2d\u5fc3\u83b7\u5f97\u4e86\u8d85\u8fc7 100 \u4e07\u7f8e\u5143\u3002 Spence \u5148\u751f\u4e0e\u4ed6\u7684\u5b69\u5b50\u4eec\u8c08\u8bba\u533a\u5757\u94fe\u3001\u6d89\u53ca\u5b58\u50a8\u548c\u9a8c\u8bc1\u5927\u91cf\u6570\u636e\u7684\u5bc6\u7801\u5b66\u30011960 \u5e74\u4ee3\u4eba\u4eec\u8c08\u8bba\u5851\u6599\u7684\u65b9\u5f0f\uff0c\u5c31\u50cf\u7535\u5f71\u201c\u6bd5\u4e1a\u751f\u201d\u4e00\u6837\u3002\u5bf9\u4e8e\u574e\u8d1d\u5c14\u5148\u751f\u6765\u8bf4\uff0c\u611f\u89c9\u5c31\u50cf\u4e92\u8054\u7f51\u7684\u5f00\u59cb\u4e00\u6837\uff1a\u4ed6\u77e5\u9053\u5b83\u5c06\u662f\u9769\u547d\u6027\u7684\u548c\u65e0\u5904\u4e0d\u5728\u7684\uff0c\u4f46\u613f\u666f\u4ecd\u7136\u6a21\u7cca\u3002 \u201c\u9762\u90e8\u8bc6\u522b\uff1f\u4e09\u7ef4\u6e32\u67d3\uff1f\u81ea\u52a8\u9a7e\u9a76\uff1f\u4eba\u5de5\u667a\u80fd\uff1f\u201d\u4ed6\u968f\u5730\u5410\u75f0\u3002 Spence \u5148\u751f\u7684\u5546\u4e1a\u4f19\u4f34 Beard \u5148\u751f\u66fe\u5728 Apollo Global Management Inc. \u7ba1\u7406\u80fd\u6e90\u6295\u8d44\uff0c\u4f46\u4ed6\u5e76\u4e0d\u90a3\u4e48\u70ed\u60c5\u3002\n\u201c\u6211\u4e0d\u786e\u5b9a\u4f60\u662f\u5426\u9700\u8981\u6210\u4e3a\u4e00\u4e2a\u4fe1\u5f92\uff0c\u201d\u4ed6\u8bf4\u3002\u4ed6\u5c06\u8fd9\u4e9b\u6570\u5b57\u63d2\u5165\u5230 Excel \u7535\u5b50\u8868\u683c\u4e2d\uff0c\u53d1\u73b0\u6316\u6398\u5177\u6709\u7ecf\u6d4e\u610f\u4e49\u3002\u8fd9\u5bf9\u4ed6\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002 Stronghold \u6b63\u5728\u8d2d\u4e70\u53e6\u4e00\u5bb6\u5e9f\u7164\u5382\uff0c\u5373\u4f4d\u4e8e\u78b3\u53bf\u7684 Panther Creek Energy Facility\uff0c\u5e76\u8ba1\u5212\u5728\u90a3\u91cc\u590d\u5236\u5176\u52a0\u5bc6\u8d27\u5e01\u6570\u636e\u4e2d\u5fc3\uff0c\u5e76\u6b63\u5728\u5bfb\u627e\u7b2c\u4e09\u5bb6\u3002\u867d\u7136\u6bd4\u7279\u5e01\u662f\u8be5\u64cd\u4f5c\u7684\u95ea\u4eae\u9970\u9762\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u662f\u8fbe\u5230\u76ee\u7684\u7684\u4e00\u79cd\u624b\u6bb5\u2014\u2014\u8ba9 Scrubgrass \u6709\u7406\u7531\u8fd0\u884c\u8d85\u8fc7\u7535\u7f51\u9700\u6c42\u7684\u8fd0\u884c\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u7ee7\u7eed\u71c3\u70e7\u5e9f\u7164\u3002\u5728\u6700\u521d\u7684 20 \u5e74\u91cc\uff0c\u8be5\u5de5\u5382\u51e0\u4e4e\u4e0d\u95f4\u65ad\u5730\u8fd0\u8f6c\u3002\u5b83\u4e0e\u5f53\u5730\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u7b7e\u8ba2\u4e86\u7535\u529b\u8d2d\u4e70\u534f\u8bae\uff0c\u8fd9\u610f\u5473\u7740\u5176\u8f93\u51fa\u6709\u4fdd\u8bc1\u7684\u9700\u6c42\u548c\u4fdd\u8bc1\u7684\u4ef7\u683c\u3002\u5f53\u8fd9\u4e00\u5207\u5728 2013 \u5e74\u7ed3\u675f\u65f6\uff0cScrubgrass \u52aa\u529b\u5728\u7ade\u4e89\u6fc0\u70c8\u7684\u7535\u529b\u5e02\u573a\u4e2d\u6323\u624e\uff0c\u7535\u529b\u4ef7\u683c\u4e0b\u964d\u7684\u90e8\u5206\u539f\u56e0\u662f\u9a6c\u585e\u52d2\u65af\u9875\u5ca9\u4f7f\u5929\u7136\u6c14\u6210\u4e3a\u6bd4\u7164\u70ad\u66f4\u4fbf\u5b9c\u7684\u7535\u529b\u71c3\u6599\uff0c\u66f4\u4e0d\u7528\u8bf4\u5e9f\u7164\u4e86\u3002\u690d\u7269\u2014\u2014\u5c24\u5176\u662f\u50cf Scrubgrass \u8fd9\u6837\u7684\u5c0f\u578b\u690d\u7269\uff0c\u5b83\u4eec\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u8fb9\u7f18\u72b6\u6001\u2014\u2014\u901a\u5e38\u53ea\u5728\u7535\u7f51\u9700\u6c42\u63d0\u9ad8\u4ef7\u683c\u8db3\u4ee5\u4f7f\u5176\u503c\u5f97\u7684\u9ad8\u5cf0\u65f6\u95f4\u8fd0\u884c\u3002\n\u62e5\u6709\u6301\u7eed\u7684\u9700\u6c42\uff0c\u4f8b\u5982\u9644\u52a0\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u610f\u5473\u7740 Scrubgrass \u4e0d\u9700\u8981\u5728\u7535\u529b\u4ef7\u683c\u4e0b\u964d\u65f6\u5173\u95ed\u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u5f53\u7535\u7f51\u9700\u8981\u65f6\uff0cScrubgrass \u53ef\u4ee5\u50cf\u7535\u6c60\u4e00\u6837\u5de5\u4f5c\u2014\u2014\u7acb\u5373\u5c06\u5176\u7535\u6e90\u5207\u6362\u5230\u7535\u7f51\u3002 \u201c\u6211\u8ba4\u4e3a 10 \u5e74\u540e\uff0c\u4eba\u4eec\u4f1a\u8bf4\uff0c&#39;\u6bd4\u7279\u5e01\u662f\u53d1\u7535\u5382\u7528\u6765\u8c03\u8282\u7535\u7f51\u7684\u4e1c\u897f\uff0c\u201d\u574e\u8d1d\u5c14\u5148\u751f\u8bf4\u3002\u4ed6\u5df2\u7ecf\u5728\u60f3\u529e\u6cd5\u5c06\u77ff\u5de5\u4ea7\u751f\u7684\u70ed\u91cf\u9001\u56de\u53d1\u7535\u5382\u3002 \uff08\u53bb\u5e74\u51ac\u5929\uff0c\u574e\u8d1d\u5c14\u5148\u751f\u7528\u6bd4\u7279\u5e01\u673a\u5668\u4e3a\u4ed6\u7684\u5bb6\u53d6\u6696\uff09\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u690d\u7269\u867d\u7136\u6ca1\u6709\u6625\u9e21\uff0c\u4f46\u611f\u89c9\u5b83\u4ecd\u5728\u8bd5\u56fe\u5f04\u6e05\u695a\u5b83\u662f\u4ec0\u4e48\u2014\u2014\u4e00\u4e2a\u4eba\u4eec\u4fee\u8865\u548c\u5b9e\u9a8c\u7684\u5730\u65b9\u3002 Shaffer \u5148\u751f\u7684\u5927\u90e8\u5206\u804c\u4e1a\u751f\u6daf\u90fd\u5728\u8be5\u5de5\u5382\u5ea6\u8fc7\uff0c\u4ed6\u81ea\u8c6a\u5730\u5ba3\u79f0\u4ed6\u7684\u540c\u4e8b\u4e0d\u662f\u201c\u5178\u578b\u7684\u7535\u5382\u4eba\u5458\u201d\u3002\u4e00\u4f4d\u524d\u9910\u5385\u7ecf\u7406\u8d1f\u8d23\u8fd0\u8425\u6570\u636e\u4e2d\u5fc3\u3002\u9664\u4e86\u591a\u5e74\u6765\u4ece\u4e8b\u5929\u7136\u6c14\u670d\u52a1\u548c\u5065\u5eb7\u6742\u5fd7\u7684\u4f01\u4e1a\u5bb6\u4e4b\u5916\uff0c\u65af\u5bbe\u585e\u5148\u751f\u5e76\u4e0d\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4eba\uff0c\u4ed6\u5728\u5bb6\u524d\u95e8\u5185\u6302\u4e86\u5e26\u6846\u7684 Scrubgrass \u7167\u7247\u3002 \u201c\u4ed6\u4eec\u5e94\u8be5\u5efa\u9020\u66f4\u591a\u8fd9\u6837\u7684\u5de5\u5382\uff0c\u800c\u4e0d\u662f\u66f4\u5c11\uff0c\u201d\u4ed6\u6700\u8fd1\u8bf4\u3002 \u201c\u8fd9\u5e76\u4e0d\u5b8c\u7f8e\u3002\u6211\u5411\u4f60\u627f\u8ba4\u8fd9\u4e00\u70b9\u3002\u4f46\u8fd9\u8be5\u6b7b\u7684\u597d\u3002\u201d\u66f4\u6b63\uff1a\u5728\u8fd9\u4e2a\u6545\u4e8b\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u300a\u516c\u62a5\u300b\u9519\u8bef\u5730\u4f30\u8ba1\u4e86\u5de5\u5382\u6bd4\u7279\u5e01\u5f00\u91c7\u7684\u6f5c\u5728\u6536\u5165\u3002", "note_en": "Bitcoin is the most widespread of the cryptocurrencies in use today. These digital currencies, which involve a huge amount of computing power, aren\u2019t issued by a central bank but are instead \u201cmined\u201d by computers that perform the energy-intensive work of validating transactions and adding them to a digital ledger, called the blockchain.\n Just as mining coal or gold is a matter of who gets to the commodity first, so too is digital mining, where computers race against each other to be the first to validate a block of transactions and win their reward.\n With each new computer vying for the prize, the algorithm adjusts to make getting it more difficult.\n Rather like a coal company hiring more coal miners, crypto miners buy more and faster computers, creating a kind of arms race that\u2019s driving a huge demand for power.\n  Already, some power generators \u2014 finding they can make more money supplying electricity to Bitcoin-mining operations than selling it to the grid \u2014 are shifting focus.\n Energy Harbor, which owns the Beaver Valley Nuclear Plant in Beaver County, announced earlier this month that it will supply nuclear power to a Bitcoin-mining data center in Ohio.\n Talen Energy, owner of the Susquehanna Steam Electric Station in Luzerne County, is doing the same. The company said last month that it will develop a data center to mine digital currency that could use up to 300 megawatts, or 12% of the nuclear plant\u2019s capacity.\n  Some are taking mobile units into the oil fields, hooking up their machines to run on natural gas, a byproduct of oil product that would otherwise be flared. Others, worried about the substantial and growing carbon footprint of all this digital mining \u2014 Bitcoin\u2019s highest profile booster Elon Musk recently called the industry to account for its contribution to climate change \u2014 are trying to find renewable sources of energy to power their machines.\n            Today, Scrubgrass, an 85-megawatt blue box with a black smokestack in the hills of Scrubgrass Township, looks much like it did when it first opened in 1993 \u2014 except for the trailers filled with Bitcoin miners in the back.\n The operation originally came online along with a wave of such plants that were supposed to tackle Pennsylvania\u2019s legacy of abandoned coal piles.\n The plants took advantage of a new technology in the 1990s \u2014 a circulating fluidized bed that made it possible to burn such low-grade material and control emissions of sulfur and nitrous oxides. Limestone is injected into the process, and the resulting ash, now alkaline, is often spread on the land where the waste coal came from to neutralize the acid.\n  Last year, the Pennsylvania Department of Environmental Protection estimated there are about 9,000 acres filled with waste coal piles in the state remaining, after some 3,700 acres have been reclaimed over the past three decades, mostly by the piles being burned in waste coal power plants. Some piles are hundreds of feet deep.\n \u201cThere is clearly more work to be done,\u201d DEP Secretary Patrick McDonnell told a state legislative committee last year during a hearing on the greenhouse gas impacts of such power plants. They emit more carbon dioxide than regular coal plants per unit of energy because the quality of their fuel is much lower than pure coal.\n That has always been the trade-off \u2014 cleaning up the waste coal piles cleans up the water around them and remediates unsightly and dangerous land. But the CO2 goes in the air.\n In 2019, the last year with available federal data, Scrubgrass emitted the equivalent of 371,000 tons of CO2 \u2014 the greenhouse gas footprint of 80,000 cars driving for a year. In 2012, when the plant was running at full force, it emitted close to a million tons.\n  \u201cOf the piles that remain,\u201d Mr. McDonnell said last year, \u201capproximately 40 have ignited and continually burn, significantly impacting local air quality and releasing significant amounts of carbon dioxide and other pollutants.\u201d Other estimates put the number of burning piles at more than 90.\n That\u2019s why the DEP essentially excused waste coal plants from buying carbon credits as part of its plan to join the Regional Greenhouse Gas Initiative, a multistate carbon cap-and-trade program.\n            It was another man\u2019s illness, his father\u2019s, that brought Mr. Spence into the waste coal business in the first place. A mining engineer from the Mon Valley, he was living in Texas in the early 1990s when his father got sick and Mr. Spence began to take extended trips to Pittsburgh to care for him.\n Suddenly, the waste coal piles that he was used to seeing as a kid looked different \u2014 they looked like an opportunity.\n In 1994, Mr. Spence bought a 5 million-ton gob \u2014 that is, garbage of bituminous \u2014 pile in West Deer and secured a contract with a brand new plant in Venango County to burn the waste coal.\n It took a decade to truck all of that material 60 miles north to Scrubgrass. After it was burned, the resulting ash was trucked back to West Deer and spread on the land. There it sat compacting for another decade.\n  Earlier this month, Mr. Spence stood on that flattened ground in northern Allegheny County, now home to a pair of soccer fields and an indoor sports complex, and talked about what\u2019s possible when waste coal is cleaned up.\n Then he drove a quarter mile down the road, where a mountain range of abandoned coal waste showed how much is left to be done.\n The other West Deer pile that now sends 50 trucks to Scrubgrass every day represents the remnants of a coal mine that once supplied steel to build U.S. skyscrapers and produce weapons during World War II. The mine opened in 1904 and shuttered eight decades later, leaving heaps of waste coal on the ground.\n Every time it rains, the remnants leach an acidic brew of heavy metals into the earth, turning streams orange.\n But it\u2019s not the environmental good-doing that hooked investors during two funding rounds that yielded more than $100 million over the past several months.\n The appeal was the Bitcoin operation, said Greg Beard, CEO and president of Stronghold Digital Mining, a company that he founded with Mr. Spence to turn Scrubgrass and several other waste coal plants into a crypto hub.\n On Tuesday, Stronghold filed documents with the Securities &amp; Exchange Commission to become a public company.\n            Jeff Campbell, the plant engineer, started researching Bitcoin as soon as he got home from Mr. Spence\u2019s house in 2017. He watched a 40-minute YouTube video and said the idea clicked into place: \u201cThis is currency that\u2019s underpinned by power.\u201d\n On Amazon, he bought a $50 USB stick that promised to mine Bitcoin. He switched his computer to an isolated network and plugged it in.\n At that time, Bitcoin was still \u201cfringe,\u201d Mr. Campbell said, and he worried about getting a computer virus or even ending up on an FBI watchlist because of cryptocurrency\u2019s reputation in moving funds for terrorism.\n  The USB stick worked as advertised, and after a few weeks, Mr. Campbell invested $1,000 and bought a mining machine, a computer whose sole purpose is to run computations. It ran for a week and generated the equivalent of $6.65 in Bitcoin.\n Nervously, Mr. Campbell linked the machine\u2019s digital wallet to Scrubgrass\u2019 PNC account to transfer the spoils, then he went into the office to check if it really showed up there.\n \u201cOh, my God. I can\u2019t believe this is really going to work,\u201d he said\n \u201cAll we need to do is put 15,000 of these in,\u201d he told Mr. Spence.\n According to Mr. Campbell\u2019s calculations, at that price, mining for Bitcoin with 15,000 machines would add about 50% to the plant\u2019s operating revenue.\n The earnings from the first machine funded the purchase of the second, then those two funded the third and so on.\n Today, there are about 3,000 cryptocurrency miners packed into retrofitted shipping containers behind the power plant, most of them owned by Stronghold and some that belong to other mining companies that buy power from the plant. Another 5,000 machines are scheduled to arrive next month. According to documents filed with the SEC, Stronghold is planning to operate 57,000 miners by the end of next year.\n  In 2020, when the power plant seldom ran, Stronghold made more money from its Bitcoin operations than by selling Scrubgrass\u2019s energy to the grid. During the first three months of this year, the trend reversed. It received almost $2 million from power sales and more than $1 million from its crypto datacenter.\n Mr. Spence talks to his kids about blockchain, the cryptography involved in storing and verifying huge swaths of data, the way people in the 1960s talked about plastics, a la the movie \u201cThe Graduate.\u201d\n  For Mr. Campbell it feels like the beginning of the internet did: He knows it\u2019s going to be revolutionary and ubiquitous, but the vision is still fuzzy. \u201cFacial recognition? Three-dimensional rendering? Autonomous driving? Artificial intelligence?\u201d he spitballs.\n Mr. Spence\u2019s business partner, Mr. Beard, who used to manage energy investing at Apollo Global Management Inc., isn\u2019t as exuberant.\n \u201cI\u2019m not sure that you need to be a believer,\u201d he said.\n He plugged the numbers into an Excel spreadsheet and saw that it makes economic sense to mine. That was enough for him.\n Stronghold is buying another waste coal plant, Panther Creek Energy Facility in Carbon County, with plans to replicate its cryptomining data center there, and is eyeing a third.\n            While Bitcoin is the shiny veneer of the operation, it\u2019s actually a means to an end \u2014 giving Scrubgrass a reason to run more than the electric grid needs so it can continue to burn waste coal.\n For the first 20 years, the plant ran nearly constantly. It had a power purchase agreement with the local utility, which meant there was a guaranteed demand and a guaranteed price for its output.\n When that ended, in 2013, Scrubgrass struggled to navigate the competitive power market, where the price of power was falling in part because the Marcellus Shale was making natural gas a cheaper fuel for electricity than coal, let alone waste coal.\n Plants \u2014 especially smaller ones like Scrubgrass that find themselves on the margin \u2014 often run only at peak times when the demand on the grid raises prices enough to make it worth their while.\n Having a constant demand, like the attached data center, means Scrubgrass doesn\u2019t need to shut down when prices for power fall. It also means that when the grid needs it, Scrubgrass can act like a battery \u2014 instantly switching its power to the grid.\n  \u201cI think 10 years from now, people are going to say, \u2018Bitcoin is the thing that power plants do to regulate the grid,\u201d Mr. Campbell said.\n He\u2019s already thinking of ways to route the heat produced by the miners back into the power plant. (Last winter, Mr. Campbell heated his home with Bitcoin machines).\n Meanwhile, the plant, although no spring chicken, feels like it\u2019s still trying to figure out what it is \u2014 a place where people tinker and experiment. Mr. Shaffer, who spent most of his career at the plant, proudly proclaims that his colleagues aren\u2019t \u201ctypical power plant people.\u201d A former restaurant manager runs the data center.\n Mr. Spence, not a typical anything except an entrepreneur whose ventures over the years ranged from natural gas services to a health magazine, hung the framed photo of Scrubgrass just inside the front door of his home.\n \u201cThey should be building more plants like this, not less,\u201d he said recently. \u201cIt\u2019s not perfect. I acknowledge that to you. But it\u2019s damn good.\u201d\n  Correction: In an earlier version of this story, the Post-Gazette incorrectly estimated potential revenue from bitcoin mining at the plant.", "posttime": "2021-08-08 09:55:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6bd4\u7279\u5e01,\u53d1\u7535\u5382,coal,scrubgrass", "title": "\u4e3a\u4ec0\u4e48\u5e9f\u7164\u53d1\u7535\u5382\u6b63\u5728\u201c\u4e3a\u6bd4\u7279\u5e01\u71c3\u70e7\u201d", "title_en": "Why a Waste-Coal Power Plant is 'Burning for Bitcoin'", "transed": 1, "url": "https://newsinteractive.post-gazette.com/burning-for-bitcoin/", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "\u53d1\u7535\u5382", "coal"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072050, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8ba8\u538c\u5904\u7406\u56fe\u50cf\u3002\u8fd9\u662f\u5236\u4f5c\u7f51\u7ad9\u548c\u64b0\u5199\u535a\u5ba2\u6587\u7ae0\u4e2d\u6700\u4e4f\u5473\u7684\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u65f6\u6211\u975e\u5e38\u5bb3\u6015\u5b83\uff0c\u4ee5\u81f3\u4e8e\u6211\u4e0d\u53d1\u5e03\u5e16\u5b50\uff0c\u56e0\u4e3a\u6211\u5fc5\u987b\u4e3a\u4ed6\u4eec\u5236\u4f5c\u8d44\u4ea7\u3002\u5982\u679c\u4f60\u96c6\u4e2d\u7cbe\u529b\u5236\u4f5c\u5b83\u4eec\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u4e0a\u4f20\u548c\u91cd\u65b0\u4e0a\u4f20\u7684\u5faa\u73af\uff0c\u76f4\u5230\u4f60\u83b7\u5f97\u6b63\u786e\u7684\u5206\u8fa8\u7387\u3001\u5927\u5c0f\u548c\u989c\u8272\u3002 Figma \u662f\u4e00\u79cd\u7528\u4e8e\u5236\u4f5c\u6a21\u578b\u7684\u8bbe\u8ba1\u5de5\u5177\u3002\u5b83\u5185\u7f6e\u7684\u4e00\u9879\u529f\u80fd\u662f\u80fd\u591f\u5c06\u60a8\u7684\u8bbe\u8ba1\u5bfc\u51fa\u4e3a\u56fe\u50cf\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6211\u7684\u5927\u90e8\u5206\u6a2a\u5e45\u3001\u56fe\u5f62\u4ee5\u53ca\u51e0\u4e4e\u6240\u6709\u7528\u4e8e\u7f51\u7edc\u7684\u5185\u5bb9\uff0c\u6211\u90fd\u5c06\u5b83\u4eec\u5236\u4f5c\u4e3a Figma\u3002\u6bcf\u6b21\u6211\u8fdb\u884c\u66f4\u6539\u65f6\uff0c\u6211\u90fd\u5fc5\u987b\u5c06\u56fe\u7247\u5bfc\u51fa\u5e76\u4e0a\u4f20\u3002\u5982\u679c\u5c3a\u5bf8\u4e0d\u6b63\u786e\uff0c\u6216\u989c\u8272\u9519\u8bef\uff0c\u6211\u5fc5\u987b\u5c06\u5176\u62d6\u8fc7\u6765\u5e76\u4e0a\u4f20\u5230\u5176\u4ed6\u5730\u65b9\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u4f1a\u5f97\u5230\u4e00\u5806\u76f8\u540c\u7684\u8d44\u4ea7\uff0c\u79f0\u4e3a\u201cimage\u201d\u3001\u201cimage_copy_1\u201d\u3001\u201cimage_copy_2\u201d\u3002\n\u7701\u53bb\u8fd9\u6574\u4e2a\u9ebb\u70e6\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u5728 Figma \u4e2d\u83b7\u5f97\u6307\u5411\u60a8\u8bbe\u8ba1\u7684\u56fe\u50cf\u94fe\u63a5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u7bc7\u535a\u6587\u4e2d\u7684\u6240\u6709\u56fe\u7247\u90fd\u4fdd\u5b58\u5728\u4e00\u4e2a Figma \u6587\u4ef6\u4e2d\uff0c\u5e76\u5df2\u4e0a\u4f20\u5230 Figmage\u3002\u5982\u679c\u5723\u8bde\u8282\u5feb\u5230\u4e86\uff0c\u6211\u5e0c\u671b\u6bcf\u5f20\u56fe\u7247\u90fd\u6709\u7ea2\u8272\u80cc\u666f\uff0c\u6211\u53ef\u4ee5\u5728\u4e0d\u89e6\u53ca\u6211\u7684\u7f51\u7ad9\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u548c\u53d1\u5e03\u66f4\u6539\u3002\u53d8\u5316\u662f\u77ac\u95f4\u53ef\u89c1\u7684\u3002\u6211\u4f7f\u7528 AWS Lambda \u548c S3 \u6784\u5efa\u4e86 Figmage \u7684\u56fe\u50cf\u6258\u7ba1\u3002\u4f5c\u4e3a\u4e00\u540d\u6280\u672f\u4eba\u5458\uff0c\u6211\u5fc5\u987b\u6743\u8861\u5229\u5f0a\uff1a \u6258\u7ba1\u5728 Figmage.com \u4e0a - \u56fe\u50cf\u6258\u7ba1\u5728 figmage \u57df\u800c\u4e0d\u662f\u60a8\u7684\u81ea\u5b9a\u4e49\u57df\u4e2d\u3002 Webflow \u505a\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u56fe\u50cf\u7684 SEO\uff0c\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u56fe\u50cf\u3002\u51b7\u542f\u52a8 - \u6211\u901a\u5e38\u53d1\u73b0\u56fe\u50cf\u9700\u8981 200 \u6beb\u79d2\u7684\u52a0\u8f7d\u65f6\u95f4\u3002\u8fd9\u662f AWS Lambda \u7684\u4e00\u822c\u54cd\u5e94\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5728\u51b7\u542f\u52a8\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\u6ca1\u6709\u4eba\u4f7f\u7528\u8be5\u670d\u52a1\uff09\uff0c\u53d1\u9001\u56fe\u50cf\u53ef\u80fd\u9700\u8981\u957f\u8fbe 2 \u79d2\u7684\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u52a0\u8f7d\u81f3\u5173\u91cd\u8981\u7684\u4e3b\u8981\u8d44\u4ea7\uff08\u4f8b\u5982\u80cc\u666f\uff09\uff0c\u6211\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528 Figmage\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u60a8\u59cb\u7ec8\u53ef\u4ee5\u5c06\u6700\u7ec8\u8d44\u4ea7\u4e0a\u4f20\u5230\u60a8\u9009\u62e9\u7684 Figma \u63d0\u4f9b\u5546\u3002\u5f53\u60a8\u4ecd\u5728\u5c1d\u8bd5\u6b63\u786e\u7684\u8d44\u4ea7\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06 figmage \u7528\u4f5c\u6e38\u4e50\u573a\u3002\n\u8fd9\u4e5f\u662f\u6211\u7b2c\u4e00\u4e2a\u76c8\u5229\u7684\u9879\u76ee\uff0c\u4f60\u53ef\u4ee5\u4ee5 20 \u7f8e\u5143\u7684\u4ef7\u683c\u83b7\u5f97 1000 \u5f20\u56fe\u50cf\u7684\u7ec8\u8eab\u6709\u9650\u4ea4\u6613\u3002", "note_en": "I hate working with images. It\u2019s the most tedious part of making websites and writing blog posts.\n In fact, sometimes I dread it so much, that I don\u2019t publish posts because I have to make the assets for them.\n  And if you muster up the energy to make them, it\u2019s a cycle of uploads and re-uploads till you get the right resolution, size and colors.\n  Figma is a design tool that\u2019s used to make mockups. One feature built-into it is the ability to export your designs as an image.\n So for most of my banners, and graphics and almost anything for the web, I make them Figma.\n  And everytime I make changes, I have to export the the picture out, and upload it.\n If a size is incorrect, or a color is wrong, I have to drag it over and upload it somewhere else. That also means you get a bunch of the same assets called \u201cimage\u201d, \u201cimage_copy_1\u201d, \u201cimage_copy_2\u201d.\n  Taking this entire hassle out, you can now just get an image link directly to your design in Figma.\n     In fact, all of the images in this blog post live in a Figma file and have been uploaded to Figmage.\n If Christmas rolls around, and I wanted every image to have a red background, I can make and publish the changes without even touching my website. The changes are seen in an instant.\n   I built Figmage\u2019s image hosting using AWS Lambda and S3. And as a technology person, I have to call out the trade-offs:\n Hosted on Figmage.com - The images are hosted with the figmage domain rather than your custom domain. Webflow does something similar. This may or may not work well with SEO for images.\n Cold-Start - I\u2019ve generally found that images take 200ms load. Which is the general response time for AWS Lambda. However, in a cold-start (e.g. nobody is using the service), it may take up-to 2 seconds to send an image. So for major assets that are critical to load (e.g. a background), I might not use Figmage.\n In any case, you can always upload your final assets to a provider of your choice from Figma. You can use figmage as a playground for when you\u2019re still experimenting with the right assets.\n It\u2019s also my first project that makes revenue, you can get a  limited lifetime deal for a 1000 images at $20.", "posttime": "2021-08-08 09:49:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u641e\u4e71,don,\u56fe\u50cf", "title": "Figmage\uff1a\u6211\u4e0d\u641e\u4e71\u56fe\u7247", "title_en": "Figmage: I don't mess with images", "transed": 1, "url": "https://heyraviteja.com/post/projects/figmage/", "via": "", "real_tags": ["\u641e\u4e71", "don", "\u56fe\u50cf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072048, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u6ca1\u6709\u4eba\u89c9\u5f97\u201c\u8fc7\u4f60\u6700\u597d\u7684\u5355\u8eab\u751f\u6d3b\u201d\u548c\u201c\u8ba9\u81ea\u5df1\u5feb\u4e50\u201d\u7684\u5efa\u8bae\u9002\u5f97\u5176\u53cd\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e 30 \u591a\u5c81\u7684\u5355\u8eab\u5973\u6027\uff1f\u6211\uff1a37\u4e2a\u5927\u57ce\u5e02\u7684\u5973\u804c\u4e1a\u3002\u4e00\u4e9b\u82b1\u54e8\u7684\u5b66\u4f4d\u3002\u4e00\u4efd\u7a33\u5b9a\u3001\u9ad8\u6536\u5165\u7684\u5de5\u4f5c\u3002\u62e5\u6709\u81ea\u5df1\u7684\u516c\u5bd3\u3002\u6709\u8da3/\u53e4\u602a\u7684\u7231\u597d\uff08\u767b\u5c71\u3001\u9a91\u81ea\u884c\u8f66\u3001\u6444\u5f71\uff09\u3002\u7ecf\u5e38\u53bb\u5947\u602a\u7684\u5730\u65b9\u65c5\u884c\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u4eba\uff08\u5927\u5b66\u6bd5\u4e1a\u540e\u53bb\u4e86Peace Corps\uff0c\u6240\u4ee5\u5728\u56fd\u5916\u72ec\u81ea\u4e00\u4eba\u5f88\u8212\u670d\uff09\u3002\u62e5\u6709\u4e0d\u540c\u4eba\u751f\u9636\u6bb5\u7684\u670b\u53cb\u3002\u505a\u4e86\u51e0\u5e74\u7684\u6cbb\u7597\uff0c\u6240\u4ee5\u6211\u60f3\u6211\u81f3\u5c11\u6709\u4e00\u4e9b\u81ea\u6211\u610f\u8bc6\u3002 \uff08\u56e0\u4e3a\u4eba\u4eec\u4f1a\u95ee\uff0c\u6211\u5728\u5339\u914d/\u7ea6\u4f1a\u65f6\u6ca1\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4e0d\u8ba4\u4e3a\u6211\u7684\u5916\u8868\u662f\u6211\u4ecd\u7136\u5355\u8eab\u7684\u552f\u4e00\u539f\u56e0\u3002\u800c\u4e14\u6211\u4f7f\u7528\u6700\u8fd1\u7684\u7167\u7247\u3002\uff09\u6211\u51e0\u4e4e\u62e5\u6709\u6211\u4e00\u76f4\u60f3\u8981\u7684\u751f\u6d3b\uff0c\u5408\u4f5c\u4f19\u4f34\u9664\u5916\u3002\u6211\u4e00\u76f4\u5728\u52aa\u529b\u6784\u5efa\u5b83\u3002\u4f46\u6211\u89c9\u5f97\u6211\u7684\u751f\u6d3b\u8d8a\u6210\u529f\u548c\u6709\u8da3\uff0c\u7537\u4eba\u5bf9\u6211\u4f5c\u4e3a\u957f\u671f\u5408\u4f5c\u4f19\u4f34\u7684\u5174\u8da3\u5c31\u8d8a\u5c11\u3002\u6211\u9047\u5230\u7684\u7537\u4eba\u8d8a\u5c11\uff0c\u5c31\u8d8a\u80fd\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u4e3a\u6211\u7684\u751f\u6d3b\u589e\u6dfb\u5149\u5f69\u3002\u4f46\u4ec5\u4ec5\u56e0\u4e3a\u6211\u4e00\u4e2a\u4eba\u6bd4\u8f83\u5feb\u4e50\uff0c\u4e0d\u9700\u8981\u201c\u9700\u8981\u201d\u4f34\u4fa3/\u53bb\u505a\u6211\u60f3\u505a\u7684\u4e00\u5207\uff0c\u800c\u4e0d\u7528\u7b49\u5f85\u6709\u4eba\u966a\u6211\u53bb\uff08\u65c5\u884c\uff0c\u4e70\u623f\u7b49\uff09\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4e0d\u60f3\u7231\u4e0a\u4e0b\u4e00\u4e2a\u4eba\u3002\u6211\u5f88\u60f3\u6709\u4e2a\u4eba\u4e00\u8d77\u5206\u62c5\u8d77\u8d77\u843d\u843d\uff1b\u4e00\u8d77\u63a2\u7d22\u4e16\u754c\uff1b\u6210\u4e3a\u961f\u53cb\uff0c\u5171\u521b\u4eba\u751f\uff1b\u54e6\uff0c\u5b9a\u671f\u6ee1\u8db3\u6027\u884c\u4e3a\u4e5f\u975e\u5e38\u597d\u3002\u7136\u800c\uff0c\u4f3c\u4e4e\u6211\u8d8a\u662f\u201c\u4e3a\u81ea\u5df1\u52aa\u529b\u201d\u8ba9\u6211\u73b0\u5728\u7684\u751f\u6d3b\u53d8\u5f97\u7f8e\u597d\uff0c\u5b83\u5c31\u8d8a\u4f7f\u6211\u4e0e\u6f5c\u5728\u7684\u5408\u4f5c\u4f19\u4f34\u758f\u8fdc\u3002\u6211\u66fe\u8ba9\u7537\u4eba\u544a\u8bc9\u6211\uff0c\u6211\u5f88\u5bb9\u6613\u8d70\u5f00\uff0c\u56e0\u4e3a\u6211\u201c\u4e0d\u9700\u8981\u201d\u4ed6\u4eec\u3002\u6211\u66fe\u6709\u8fc7\u7537\u4eba\u8bf4\u6211\u7684\u751f\u6d3b\u592a\u5b8c\u6574/\u5145\u5b9e\u800c\u65e0\u6cd5\u62e5\u6709\u4f34\u4fa3\u2014\u2014\u5c31\u50cf\u4ed6\u4eec\u5728\u5176\u4e2d\u6ca1\u6709\u7acb\u8db3\u4e4b\u5730\u3002\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u9700\u8981\u67d0\u4eba\u548c\u7b49\u5f85\u67d0\u4eba\u53ea\u662f\u4f60\u8fc7\u7740\u4e0d\u5feb\u4e50/\u5065\u5eb7\u7684\u5355\u8eab\u751f\u6d3b\u7684\u8ff9\u8c61\u3002\u6211\u89c9\u5f97\u6211\u6240\u505a\u7684\u6240\u6709\u4e8b\u60c5\u90fd\u662f\u4e3a\u4e86\u8ba9\u81ea\u5df1\u5feb\u4e50\u3001\u5065\u5eb7\u548c\u6210\u529f\uff08\u5728\u5de5\u4f5c\u4e2d\u83b7\u5f97\u664b\u5347\uff1b\u53bb\u58a8\u897f\u54e5\u722c\u4e00\u4e9b\u706b\u5c71\uff1b\u62dc\u8bbf\u6211\u4f4f\u5728\u4e0d\u540c\u57ce\u5e02\u7684\u5927\u5b66\u670b\u53cb\uff1b\u62a5\u540d\u53c2\u52a0 100 -\u82f1\u91cc\u81ea\u884c\u8f66\u9a91\u884c\uff09\u6b63\u5728\u79ef\u6781\u963b\u788d\u6211\u7684\u7ea6\u4f1a\u524d\u666f\uff0c\u56e0\u4e3a\u4e54\u3001\u5c71\u59c6\u6216\u5df4\u52c3\u7f57\u6839\u672c\u4e0d\u91cd\u89c6\u8fd9\u4e9b\u4e1c\u897f\u3002\u76f8\u53cd\uff0c\u6211\u770b\u5230\u90a3\u4e9b\u8bf4\u4ed6\u4eec\u60f3\u8981\u50cf\u6211\u8fd9\u6837\u7684\u5973\u4eba\u7684\u7537\u4eba\u5b9e\u9645\u4e0a\u9009\u62e9\u4e86\u90a3\u4e9b\u82b1\u66f4\u591a\u65f6\u95f4\u5728\u5916\u8868\u4e0a\uff08\u5934\u53d1\u3001\u6807\u8bb0\u3001\u65f6\u5c1a\uff09\u548c\u66f4\u591a\u65f6\u95f4\u89c2\u770b Bravo\u3001\u505a\u745c\u4f3d\u3001\u62e5\u62b1\u4ed6\u4eec\u7684\u91d1\u6bdb\u7684\u4eba\u3002\u8fd9\u4e9b\u5973\u4eba\u6b63\u5728\u7b49\u5f85\u4e00\u4e2a\u7537\u4eba\u72ec\u81ea\u65c5\u884c\u6216\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u5e76\u4e14\u901a\u5e38\u5bf9\u6b64\u5f88\u8bda\u5b9e\u3002 \uff08\u5728\u4eba\u4eec\u544a\u8bc9\u6211\u4e4b\u524d\uff0c\u5982\u679c\u6211\u53ea\u662f\u8fc7\u6211\u7684\u751f\u6d3b\uff0c\u6211\u4f1a\u5728\u6211\u6700\u4e0d\u671f\u671b\u7684\u65f6\u5019\u9047\u5230\u67d0\u4e2a\u4eba\uff1a\u597d\u5427\uff0c\u6211\u505a\u5230\u4e86\uff0c\u4f46\u6211\u6ca1\u6709\u3002\u6211\u4e0d\u7ecf\u5e38\u901a\u8fc7\u65c5\u884c\u6216\u7231\u597d\u9047\u5230\u5355\u8eab\u3001\u6709\u9b45\u529b\u7684\u7537\u4eba\u3002\u5927\u591a\u6570\u7537\u4eba\u6211\u9047\u5230\u662f\u642d\u6863\u3002\u5355\u8eab\u7684\u4eba\u6700\u7ec8\u8ba4\u4e3a\u6211\u662f\u4e00\u4e2a\u80be\u4e0a\u817a\u7d20\u9ad8\u7684\u4f19\u4f34\uff0c\u5e76\u4f1a\u53bb\u5bfb\u627e\u6211\u4e0a\u9762\u63cf\u8ff0\u7684\u4e0d\u90a3\u4e48\u5192\u9669\u7684\u5973\u6027\u3002\uff09\n\u5973\uff1a\u5176\u4ed6\u4eba\u6709\u8fd9\u79cd\u611f\u89c9\u5417\uff1f\u7537\u4eba\uff1a\u5982\u679c\u4e00\u4e2a\u5973\u4eba\u770b\u8d77\u6765\u5f88\u5fd9/\u6ee1\u8db3\uff0c\u5c31\u50cf\u5979\u4e0d\u9700\u8981\u4f60\u4e00\u6837\uff0c\u4f60\u4f1a\u7ee7\u7eed\u524d\u8fdb\u5417\uff1f\u4f60\u5982\u4f55\u8fc7\u4f60\u6700\u597d\u7684\u5355\u8eab\u751f\u6d3b\uff08\u8fd9\u672c\u8d28\u4e0a\u6d89\u53ca\u6ee1\u8db3\u4f60\u81ea\u5df1\u7684\u9700\u6c42\uff0c\u8ba9\u81ea\u5df1\u5fd9\u788c\u548c\u5145\u5b9e\uff09\u5e76\u4e14\u4ecd\u7136\u4e3a\u4f34\u4fa3\u7559\u4e0b\u201c\u7a7a\u95f4\u201d\uff1f\u4efb\u4f55\u57fa\u4e8e\u7ecf\u9a8c\u7684\u5b9e\u7528\u6280\u5de7\u6216\u5efa\u8bae\u90fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u8fd8\u6709\u5176\u4ed6\u667a\u6167/\u9f13\u52b1\u7684\u8bdd\u5417\uff1f\u4f60\u4ec0\u4e48\u65f6\u5019\u653e\u5f03\u7ea6\u4f1a/\u5bfb\u627e\uff1f\u5728\u4ec0\u4e48\u65f6\u5019\u4f60\u4f1a\u8ba9\u81ea\u5df1\u53d8\u5f97\u66f4\u4f20\u7edf\uff0c\u4ee5\u6269\u5927\u5bf9\u4f34\u4fa3\u7684\u770b\u6cd5\uff0c\u5373\u4f7f\u8fd9\u4e0d\u662f\u4f60\u53ea\u4e3a\u81ea\u5df1\u800c\u751f\u6d3b\u65f6\u4f1a\u505a\u7684\u4e8b\u60c5\uff1f TL;DR\uff1a\u5728\u4e00\u6bb5\u5feb\u4e50\u3001\u975e\u5e38\u5065\u5eb7\u7684\u957f\u671f\u5173\u7cfb\u548c\u4e00\u6bb5\u65f6\u95f4\u7684\u4f11\u606f\u4e4b\u540e\uff0c\u6211\u91cd\u65b0\u8fdb\u5165\u7ea6\u4f1a\u573a\u666f\u3002\u6211\u89c9\u5f97\u6211\u771f\u7684\u5f88\u4e86\u89e3\u81ea\u5df1\uff0c\u5bf9\u81ea\u5df1\u5f88\u6ee1\u610f\uff0c\u5e76\u4e14\u77e5\u9053\u6211\u60f3\u8981\u4e00\u4e2a\u4f34\u4fa3\u505a\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u7ea6\u4f1a\u4f1a\u66f4\u5bb9\u6613\u3002\u4f46\u8fd9\u4f3c\u4e4e\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u6211\u770b\u7740\u7537\u4eba\u548c\u90a3\u4e9b\u4f3c\u4e4e\u81ea\u5df1\u5e76\u4e0d\u5feb\u4e50\u7684\u5973\u4eba\u7ed3\u5bf9\uff0c\u5e76\u544a\u8bc9\u6211\u8bf8\u5982\u201c\u6211\u94a6\u4f69\u4f60\uff0c\u4f46\u4f60\u4e0d\u9700\u8981\u6211\u201d\u6216\u201c\u4f60\u7684\u751f\u6d3b\u201d\u4e4b\u7c7b\u7684\u8bdd\u3002\u91cc\u9762\u6ca1\u6709\u5176\u4ed6\u4eba\u7684\u7a7a\u95f4\u3002\u201d\u5176\u4ed6\u4eba\u5b9e\u9645\u4e0a\u5982\u4f55\u5e73\u8861\u8fc7\u4ed6\u4eec\u60f3\u8981\u7684\u5355\u8eab\u751f\u6d3b\uff08\u4f8b\u5982\uff0c\u5fc5\u987b\u81ea\u7ed9\u81ea\u8db3\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u8fd9\u6837\u505a\uff09\u548c\u4e3a\u4f34\u4fa3\u7559\u51fa\u7a7a\u95f4\uff1f\u6dfb\u52a0\uff0c\u622a\u81f3 8/4\u30018/7 \u7f16\u8f91\uff1a\u54c7\uff01\u65e0\u6cd5\u76f8\u4fe1\u6709\u7528\u548c\u652f\u6301\u7684\u8bc4\u8bba\u3002\u6211\u73b0\u5728\u5df2\u7ecf\u9605\u8bfb\u4e86\u6240\u6709\u8fd9\u4e9b\u3002\u611f\u8c22\u6240\u6709\u5728\u7ebf\u7a0b\u88ab\u9501\u5b9a\u540e\u53d1\u8868\u8bc4\u8bba\u6216\u7ed9\u6211\u53d1\u6d88\u606f\u7684\u4eba\uff08\u4ee5\u53ca\u5956\u52b1\uff0c\u5929\u54ea\uff01\uff09\u3002\u6211\u5e0c\u671b\u5176\u4ed6\u4eba\u53d1\u73b0\u8fd9\u4e2a\u7ebf\u7a0b\u548c\u6211\u4e00\u6837\u6709\u7528\u3002\u6211\u5e0c\u671b\u6211\u6709\u65f6\u95f4\u5728\u7ebf\u7a0b\u88ab\u9501\u5b9a\u4e4b\u524d\u8fdb\u884c\u66f4\u591a\u4e92\u52a8\uff0c\u5355\u72ec\u56de\u590d\u3002\u77e5\u9053\u6211\u5e76\u4e0d\u5b64\u5355\uff0c\u8fd9\u611f\u89c9\u5f88\u68d2\u3002\u6211\u4e5f\u5f88\u6b23\u8d4f\u7537\u58eb\u5766\u7387\u5730\u56de\u5e94\u60f3\u8981\u611f\u5230\u88ab\u9700\u8981/\u9700\u8981/\u4f18\u5148\u8003\u8651\u7684\u53cd\u5e94\u3002\u6bcf\u4e2a\u4eba\u5bf9\u60c5\u611f\u8106\u5f31\u6027/\u8054\u7cfb\u7684\u8bc4\u8bba\u90fd\u975e\u5e38\u6709\u5e2e\u52a9\uff1b\u8fd9\u662f\u6211\u77e5\u9053\u6211\u9700\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6709\u4e00\u5929\u6211\u53ef\u80fd\u4f1a\u5728\u6211\u6709\u65f6\u95f4\u8fdb\u4e00\u6b65\u6d88\u5316\u8fd9\u91cc\u6240\u6709\u6709\u7528\u7684\u8bc4\u8bba\u540e\u53d1\u8868\u4e00\u7bc7\u6587\u7ae0\u3002\u6709\u4e9b\u4eba\u8bc4\u8bba\u8bf4\u6211\u5217\u51fa\u4e86\u4e00\u5806\u4e0d\u4f1a\u4f7f\u6211\u6210\u4e3a\u5e16\u5b50\u4e2d\u6709\u4ef7\u503c\u7684\u5408\u4f5c\u4f19\u4f34\u7684\u4e1c\u897f\uff0c\u662f\u7684 - \u8fd9\u5c31\u662f\u5e16\u5b50\u7684\u5168\u90e8\u610f\u4e49\uff01\u6307\u51fa\u5f53\u4f60\u72ec\u81ea\u4e00\u4eba\u65f6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff08\u517b\u6d3b\u81ea\u5df1\u3001\u62e5\u6709\u793e\u533a\u3001\u72ec\u81ea\u5bfb\u627e\u5feb\u4e50\uff09\u4e0e\u6f5c\u5728\u5408\u4f5c\u4f19\u4f34\u6240\u770b\u91cd\u7684\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff08\u5c24\u5176\u662f\uff0c\u4e5f\u8bb8\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5973\u6027\u5bfb\u627e\u7537\u6027\uff09\uff01\u6700\u540e\uff0c\u8001\u5b9e\u8bf4\uff0c\u6211\u5e76\u4e0d\u662f\u8981\u8d2c\u4f4e\u5e16\u5b50\u4e2d\u7684\u67d0\u4e00\u884c\uff0c\u6211\u628a\u5b83\u7559\u5728\u8fd9\u91cc\uff0c\u6240\u4ee5\u8bc4\u8bba\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u6211\u4e0d\u60f3\u9690\u7792\u5b83\u3002\u6211\u7684\u8bb8\u591a\u6700\u4eb2\u5bc6\u7684\u670b\u53cb\u2014\u2014\u5176\u4e2d\u5927\u591a\u6570\u90fd\u53d7\u8fc7\u540c\u7b49\u6559\u80b2\u3001\u6210\u529f\u548c\u9ad8\u6536\u5165\u8005\u2014\u2014\u662f\u6211\u63cf\u8ff0\u7684\u90a3\u4e9b\u4e0d\u63a5\u53d7\u5355\u8eab\u751f\u6d3b\u7684\u5973\u6027\uff0c\u6211\u4ece\u672a\u8bf4\u8fc7\uff08\u5f53\u7136\u4e5f\u4e0d\u662f\u6697\u793a\uff09\u5973\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5ea6\u8fc7\u4ed6\u4eec\u7684\u7a7a\u95f2\u65f6\u95f4\u5e76\u4e0d\u806a\u660e\u6216\u5728\u4e13\u4e1a\u4e0a\u53d6\u5f97\u6210\u529f\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u8ba4\u8bc6\u7684\u8bb8\u591a\u76ee\u524d\u5904\u4e8e\u604b\u7231\u5173\u7cfb\u4e2d\u7684\u5973\u6027\u5e76\u6ca1\u6709\u4f18\u5148\u8003\u8651\u521b\u9020\u5979\u4eec\u81ea\u5df1\u6ee1\u610f\u7684\u7f8e\u597d\u751f\u6d3b\uff0c\u800c\u662f\u516c\u5f00\u8868\u793a\u5979\u4eec\u6b63\u5728\u7b49\u5f85\u4f34\u4fa3\u505a x\u3001y \u6216 z\u5e76\u5728\u6b64\u671f\u95f4\u82b1\u65f6\u95f4\u548c\u4ed6\u4eec\u7684\u7535\u89c6/\u5ba0\u7269\u4e00\u8d77\u51fa\u53bb\u73a9\u3002\u610f\u8bc6\u5230\u57fa\u4e8e\u67d0\u4eba\u9009\u62e9\u7684\u7535\u89c6\u53f0\u6216\u5065\u8eab\u8ba1\u5212\u7684\u5e7f\u6cdb\u6982\u62ec\u6ca1\u6709\u5e2e\u52a9\uff0c\u6211\u60f3\u76f4\u63a5\u5411\u6211\u5192\u72af\u7684\u6bcf\u4e2a\u4eba\u9053\u6b49\u3002", "note_en": "Does anyone else feel like the \u201clive your best single life\u201d and \u201cbe happy on your own\u201d advice backfires, especially for single women in their 30s?\n Me: 37 female professional in a big city. A few fancy degrees. A stable, high-earning job. Own my own condo. Interesting/quirky hobbies (mountaineering, cycling, photography). Travel a lot and to weird places, often alone (did Peace Corps after college, so I\u2019m very comfortable being solo in foreign countries). Have friends from different stages of life. Did several years of therapy and so I like to think I have at least have some self-awareness. (Because people will ask, I do not have trouble matching/getting dates, so I don\u2019t think my appearance is the sole reason I\u2019m still single. And I use recent pictures.)\n I have pretty much the life I always wanted, except for a partner. And I\u2019ve worked hard at building it. But I feel that the more successful and interesting my life is, the less men seem interested in me as a long-term partner. And the fewer men I meet could add to my life in a meaningful way.\n But just because I\u2019m relatively happy alone and do not \u201cneed\u201d a partner / go and do everything I want to do without waiting for someone to go with me (travel, buying a house, etc.), it doesn\u2019t mean I don\u2019t want to fall in love any less than the next person. I\u2019d love to have someone to share the ups and downs with; to explore the world with; to be a teammate and build a life with; oh and fulfilling sex on a regular basis is pretty darn nice too.\n However, it seems that the more I \u201cwork on myself\u201d to make my current life great, the more it estranges me from potential partners. I\u2019ve had men tell me that I\u2019m easy to walk away from because I don\u2019t \u201cneed\u201d them. I\u2019ve had men say that my life feels too complete/full to have a partner \u2014 like there\u2019s no place for them in it.\n But to me, needing someone and waiting on someone are just signs that you aren\u2019t living a happy/healthy single life. I feel like all the things I do to make myself happy, healthy, and successful on my own (get that promotion at work; go to Mexico to climb some volcanos; visit my college friends who live in different cities; sign up for a 100-mile bike ride) are actively hindering my dating prospects because Joe or Sam or Pablo doesn\u2019t value those things at all. Instead, I see the men that say that they want women like me actually picking the ones that spend more time on their appearance (hair, markup, fashion) and more time watching Bravo, doing yoga, cuddling with their goldendoodle. These women are waiting on a guy to travel or do anything by themselves, and are often honest about that.\n (And before people tell me I will meet someone when I least expect it if I just live my life: Well I do that but I haven\u2019t. I don\u2019t often met single, attractive men through travel or hobbies. Most men I come across are partnered. The single ones end up thinking of me as an adrenaline buddy and going for the less adventurous women I describe above.)\n Women: Does anyone else feel like this? Men: Is there truth to the fact that if a woman seems busy/content, like she doesn\u2019t need you, you\u2019ll move on?\n How do you live your best single life (which inherently involves meeting your own needs, keeping yourself busy and fulfilled) and still leave \u201cspace\u201d for a partner? Any practical tips or advice based on experience would be helpful.\n Any other words of wisdom/encouragement? At what point do you give up dating/looking? At what point do you make yourself more conventional to widen your shot at a partner, even if it\u2019s not what you\u2019d do if you were living your life just for yourself?\n TL;DR: I reentered the dating scene after a happy, pretty healthy long-term relationship and some time off. And I felt like I really know myself, am content with myself, and know what I want in a partner so I thought dating would be easier. But it\u2019s just seemed to make it more difficult as I watch men pair with women who don\u2019t seem to be as happy on their own and tell me things like \u201cI admire you, but you don\u2019t need me\u201d or \u201cyour life doesn\u2019t have space for anyone else in it.\u201d How do other people practically balance living the single life they would like to (eg, necessarily being self-sufficient because you have to be) and leaving space for a partner?\n  Addition, edited as of 8/4, 8/7: Wow! Cannot believe the helpful and supportive comments. I\u2019ve now read all of them. Thank you to everyone who\u2019s commented or who messaged me after the thread was locked (and for the awards, gosh!). I hope others find this thread as useful as I have. I wish I\u2019d had the time to interact more, respond individually, before the thread was locked.\n It feels amazing know I\u2019m not alone. I also appreciate the candidness of the men\u2019s responses about wanting to feel wanted/needed/prioritized. And everyone\u2019s comments on emotional vulnerability/connection were incredibly helpful; it\u2019s something I know I need to work on and I might do a post on that one day after I have time to further digest all the helpful comments here. Some people commented that I\u2019m listing a bunch of things that don\u2019t make me a valuable partner in the post, and well yes\u2014that was the whole point of the post! To point out that the things that are important when you\u2019re on your own (supporting yourself, having community, finding joy on your own) aren\u2019t really the same things that are valued by potential partners (especially, perhaps, in the case of women seeking men)!!\n Finally, I honestly didn\u2019t mean to be degrading with one of the lines in the post, which I\u2019ve left in here so the comments make sense and because I don\u2019t want to hide from it. Many of my closest friends \u2014 most of whom are equally educated, successful, and high earners \u2014 are the women I described as not embracing their single life and I didn\u2019t ever say (and certainly didn\u2019t mean to imply) that women that spend their free time differently aren\u2019t smart or professionally successful. The point I intended was that many of the women I know that are currently in relationships didn\u2019t prioritize creating an awesome life they were happy with on their own and instead openly said they were waiting for a partner to do x, y, or z and just spent time hanging out with their TV/pet in the meantime. Realize that broad generalizations based on someone\u2019s choice of tv station or fitness routine aren\u2019t helpful, and wanted to directly apologize to everyone I offended.", "posttime": "2021-08-08 09:48:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5355\u8eab\u751f\u6d3b,single,\u7ea6\u4f1a", "title": "\u4ec0\u4e48\u65f6\u5019\u8fc7\u201c\u6700\u597d\u7684\u5355\u8eab\u751f\u6d3b\u201d\u4f1a\u9002\u5f97\u5176\u53cd\uff1f", "title_en": "When does living your \u201cbest single life\u201d backfire?", "transed": 1, "url": "https://www.reddit.com/r/datingoverthirty/comments/ox15tw/when_does_living_your_best_single_life_backfire/", "via": "", "real_tags": ["\u5355\u8eab\u751f\u6d3b", "single", "\u7ea6\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "51aed8c1ce77e218e5d01841e519d78a.jpg", "infoid": 1072047, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea2007\u5e74\u4ee5\u6765\uff0c\u4e9a\u9a6c\u900a\u5df2\u552e\u51fa\u6570\u5343\u4e07\u53f0Kindle\uff0c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u6570\u4ee5\u5343\u4e07\u8ba1\u7684\u4eba\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8fd9\u4e9b Kindle \u4e2d\u7684\u8f6f\u4ef6\u6f0f\u6d1e\u800c\u88ab\u9ed1\u5ba2\u5165\u4fb5\u3002\u4ed6\u4eec\u7684\u8bbe\u5907\u53ef\u80fd\u4f1a\u53d8\u6210\u673a\u5668\u4eba\uff0c\u6216\u8005\u4ed6\u4eec\u7684\u79c1\u4eba\u672c\u5730\u7f51\u7edc\u53ef\u80fd\u4f1a\u53d7\u5230\u635f\u5bb3\uff0c\u751a\u81f3\u4ed6\u4eec\u7684\u8d26\u5355\u5e10\u6237\u4e2d\u7684\u4fe1\u606f\u4e5f\u53ef\u80fd\u88ab\u76d7\u3002\u8fdc\u7a0b\u8bbf\u95ee\u7528\u6237 Kindle \u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u901a\u8fc7\u7535\u5b50\u4e66\u3002\u6076\u610f\u56fe\u4e66\u53ef\u4ee5\u901a\u8fc7\u201c\u81ea\u52a9\u51fa\u7248\u201d\u670d\u52a1\u53d1\u5e03\u5e76\u5728\u4efb\u4f55\u865a\u62df\u56fe\u4e66\u9986\uff08\u5305\u62ec Kindle \u5546\u5e97\uff09\u4e2d\u514d\u8d39\u8bbf\u95ee\uff0c\u6216\u901a\u8fc7\u4e9a\u9a6c\u900a\u201c\u53d1\u9001\u5230 Kindle\u201d\u670d\u52a1\u76f4\u63a5\u53d1\u9001\u5230\u6700\u7ec8\u7528\u6237\u8bbe\u5907\u3002\u867d\u7136\u60a8\u53ef\u80fd\u5bf9\u67d0\u672c\u4e66\u7684\u5199\u4f5c\u4e0d\u6ee1\u610f\uff0c\u4f46\u6ca1\u6709\u4eba\u5e0c\u671b\u4e0b\u8f7d\u6076\u610f\u7684\u3002\u6ca1\u6709\u516c\u5f00\u8fd9\u6837\u7684\u573a\u666f\u3002\u9632\u75c5\u6bd2\u8f6f\u4ef6\u6ca1\u6709\u7535\u5b50\u4e66\u7684\u7b7e\u540d\u3002\u4f46\u662f\u2026\u2026\u6211\u4eec\u6210\u529f\u5236\u4f5c\u4e86\u4e00\u672c\u6076\u610f\u7684\u4e66\u3002\u5982\u679c\u4f60\u5728 Kindle \u8bbe\u5907\u4e0a\u6253\u5f00\u8fd9\u672c\u4e66\uff0c\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u6bb5\u9690\u85cf\u7684\u4ee3\u7801\u4ee5 root \u6743\u9650\u6267\u884c\u3002\u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u60a8\u53ef\u4ee5\u5047\u8bbe\u60a8\u5df2\u7ecf\u5931\u53bb\u4e86\u5bf9\u7535\u5b50\u9605\u8bfb\u5668\u7684\u63a7\u5236\u3002\u6211\u4eec\u53d1\u73b0\u7684\u95ee\u9898\u5df2\u4e8e 2021 \u5e74 2 \u6708\u62a5\u544a\u7ed9\u4e9a\u9a6c\u900a\uff0c\u5e76\u4e8e 2021 \u5e74 4 \u6708\u5728 5.13.5 \u7248\u672c\u7684 Kindle \u56fa\u4ef6\u4e2d\u4fee\u590d\u3002\u4fee\u8865\u540e\u7684\u56fa\u4ef6\u5c06\u81ea\u52a8\u5b89\u88c5\u5728\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u7684\u8bbe\u5907\u4e0a\u3002\u57fa\u672c\u4e0a\uff0cKindle OS \u662f\u4e00\u4e2a Linux \u5185\u6838\uff0c\u5176\u4e2d\u5305\u542b\u4e3b\u8981\u7531 busybox \u63d0\u4f9b\u7684\u4e00\u7ec4\u672c\u673a\u7a0b\u5e8f\u3001\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684 LIPC \u5b50\u7cfb\u7edf\u4ee5\u53ca\u7528\u4e8e\u7528\u6237\u754c\u9762 (UI) \u548c\u670d\u52a1\u7684 Java \u548c Webkit \u5b50\u7cfb\u7edf\u3002 LIPC \u662f\u4e00\u4e2a\u57fa\u4e8e D-Bus \u7684 IPC \u5e93\u53ca\u5176\u5c06\u6240\u6709 Kindle \u7ec4\u4ef6\u94fe\u63a5\u5728\u4e00\u8d77\u7684\u73af\u5883\u3002 Kindle \u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u6b64\u5e93\u6765\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u3001\u516c\u5f00\u5e94\u7528\u7a0b\u5e8f\u5c5e\u6027/\u8bbe\u7f6e\u3001\u4fa6\u542c\u6216\u53d1\u51fa\u4e8b\u4ef6\u3002\u4f8b\u5982\uff0c\u7528 HTML \u548c Javascript \u7f16\u5199\u7684 Webkit \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 LIPC \u4e0e Java \u670d\u52a1\u6216\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\u3002\u5927\u591a\u6570 UI \u662f\u7528 Java \u7f16\u5199\u7684\u3002 Java \u5b50\u7cfb\u7edf\uff08\u6846\u67b6\uff09\u4e3a\u670d\u52a1\u548c UI\uff08\u6240\u8c13\u7684\u5c0f\u518c\u5b50\uff09\u63d0\u4f9b LIPC \u5904\u7406\u7a0b\u5e8f\u3002\u6bd4\u5982 Kindle \u4e3b\u9875 UI \u7a97\u53e3\u5c31\u662f\u6846\u67b6\u7ba1\u7406\u7684 com.lab126.booklet.home \u5c0f\u518c\u5b50\u3002 Webkit \u5b50\u7cfb\u7edf\uff08HTML5 \u548c Javascript\uff09\u662f\u53e6\u4e00\u79cd\u521b\u5efa UI \u5143\u7d20\u7684\u65b9\u6cd5\u3002\u5185\u7f6e\u7684\u5b9e\u9a8c\u6d4f\u89c8\u5668\u662f Webkit \u5b50\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002 Pillow \u662f\u4e00\u4e2a\u5141\u8bb8\u4ece Javascript \u8bbf\u95ee LIPC \u7684\u5e93\u3002\nKindle \u7535\u5b50\u9605\u8bfb\u5668\u56fa\u4ef6\u7684\u6700\u65b0\u7248\u672c\uff085.13.4\uff09\u5df2\u5728\u4e9a\u9a6c\u900a\u5b98\u65b9\u7f51\u7ad9\u516c\u5f00\u4e0b\u8f7d\u3002\u6e90\u4ee3\u7801\u4e5f\u90e8\u5206\u53ef\u7528\u3002\u4f46\u662f\u6e90\u4ee3\u7801\u5bf9\u6211\u4eec\u7684\u7814\u7a76\u6ca1\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\u5b83\u4e3b\u8981\u7531\u7b2c\u4e09\u65b9\u5f00\u6e90\u9879\u76ee\u7ec4\u6210\uff0c\u5305\u62ec Linux \u5185\u6838\uff0c\u5e76\u5728\u4e9a\u9a6c\u900a\u4e0a\u8fdb\u884c\u4e86\u5c0f\u5e45\u8c03\u6574\u3002\u8d1f\u8d23\u89e3\u6790\u548c\u5448\u73b0\u7535\u5b50\u4e66\u7684\u7ec4\u4ef6\u6ca1\u6709\u6e90\u4ee3\u7801\u3002\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u662f\u53d1\u73b0\u7535\u5b50\u4e66\u89e3\u6790\u6846\u67b6\u4e2d\u7684\u6f0f\u6d1e\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u6709\u8db3\u591f\u7684\u56fa\u4ef6\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u771f\u6b63\u7684 Kindle \u8bbe\u5907\u3002\u8ba9\u6211\u4eec\u770b\u770b\u8d1f\u8d23\u5904\u7406\u7535\u5b50\u4e66\u7684\u7ec4\u4ef6\u3002 /mnt/us/documents \u662f\u5e38\u89c4\u7535\u5b50\u4e66\u76ee\u5f55\uff0c\u5f53\u60a8\u5728 Kindle \u8bbe\u5907\u4e0a\u4e0b\u8f7d\u65b0\u4e66\u65f6\u3002\u8c01\u5c06\u9996\u5148\u5904\u7406\u6587\u4ef6\uff1f /usr/bin/scanner \u670d\u52a1\u4f1a\u5b9a\u671f\u626b\u63cf\u6587\u6863\u76ee\u5f55\u4e2d\u7684\u65b0\u6587\u4ef6\uff0c\u5e76\u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\u4f7f\u7528\u201c\u63d0\u53d6\u5668\u201d\u5e93\u4e4b\u4e00\u4ece\u7535\u5b50\u4e66\u4e2d\u63d0\u53d6\u5143\u6570\u636e\u3002\u6240\u6709\u63d0\u53d6\u5668\u90fd\u5217\u5728 /var/local/appreg.db sqlite \u6570\u636e\u5e93\u4e2d\u3002\u6bcf\u79cd\u652f\u6301\u7684 Kindle \u7535\u5b50\u4e66\u683c\u5f0f\u90fd\u6709\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\uff1a\u5982\u679c\u626b\u63cf\u4eea\u4e0e\u6587\u4ef6\u6269\u5c55\u540d\u4e0d\u5339\u914d\u6216\u51fa\u73b0\u89e3\u6790\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5411\u7528\u6237\u663e\u793a\u7535\u5b50\u4e66\u3002\u6211\u4eec\u6ca1\u6709\u6df1\u5165\u7814\u7a76\u626b\u63cf\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u63d0\u53d6\u5143\u6570\u636e\u7684\u64cd\u4f5c\u8fc7\u4e8e\u7b80\u5355\uff0c\u65e0\u6cd5\u63d0\u793a\u89e3\u6790\u9519\u8bef\u3002\u626b\u63cf\u4eea\u5b8c\u6210\u5de5\u4f5c\u540e\uff0c\u4e3b\u5c4f\u5e55\u4e0a\u4f1a\u663e\u793a\u65b0\u4e66\u7684\u7f29\u7565\u56fe\u3002\u4ece\u8fd9\u4e00\u523b\u8d77\uff0cJava \u6846\u67b6\u8d1f\u8d23\u5728\u60a8\u5355\u51fb\u65f6\u6253\u5f00\u8fd9\u672c\u4e66\u3002\u53ef\u4ee5\u5728 /opt/amazon/ebook/lib \u56fa\u4ef6\u76ee\u5f55\u4e2d\u627e\u5230\u5b9e\u73b0\u6253\u5f00\u548c\u5448\u73b0\u7535\u5b50\u4e66\u903b\u8f91\u7684 Java \u5b58\u6863 (JAR) \u6587\u4ef6\u3002\u4e3b\u8981\u662f MobiReader-impl.jar\u3001YJReader-impl.jar\u3001PDFReader-impl.jar\u3001HTMLReader-impl.jar \u548c TopazReader-impl.jar \u6587\u4ef6\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u6211\u4eec\u51b3\u5b9a\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728 PDF \u6587\u4ef6\u683c\u5f0f\u4e0a\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u5e38\u89c1\u4f46\u540c\u65f6\u4e5f\u662f\u6700\u590d\u6742\u7684\u683c\u5f0f\u4e4b\u4e00\u3002\u6211\u4eec\u6765\u770b\u770bPDFReader-impl.jar\uff08com.amazon.ebook.booklet.pdfreader.impl.PDFModel\u7c7b\uff09\u4e2dPDF\u4e66\u7c4d\u6253\u5f00\u51fd\u6570\u7684\u5b9e\u73b0\uff1a\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u5bf9nativeOpenPDFDocument \u539f\u751f\u51fd\u6570\uff0c\u5176\u4e3b\u4f53\u4f4d\u4e8e /usr/java/lib/libPDFClientJNI.so \u5e93\u4e2d\u3002\nnativeOpenPDFDocument\u51fd\u6570\u542f\u52a8PDF\u670d\u52a1\u5668/usr/bin/pdfreader\uff0cfork\u8fdb\u7a0b\uff0c\u5e76\u901a\u8fc7\u5f00\u6e90HTTP\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u5e93/usr/lib/libsoup-2.4.so\u540c\u6b65\u5411\u5176\u53d1\u9001\u201copenBook\u201d\u6d88\u606f\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u5411 https://127.0.0.1:7667/command/openBook \u53d1\u9001 GET \u8bf7\u6c42\u3002 pdfreader \u670d\u52a1\u5668\u662f\u6211\u4eec\u7814\u7a76\u7684\u4e3b\u8981\u76ee\u6807\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5728\u6b64\u8fc7\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u6211\u4eec\u7684\u6709\u6548\u8d1f\u8f7d\u3002\u5728\u542f\u52a8\u65f6\uff0cpdfreader \u670d\u52a1\u5668\u901a\u8fc7 setuid \u8c03\u7528\u5c06\u81ea\u8eab\u964d\u4f4e\u5230\u201c\u6846\u67b6\u201d\u7528\u6237\uff08uid 9000\uff09\u7684\u6743\u9650\u3002\u7136\u540e\u5b83\u542f\u52a8\u4e00\u4e2a\u4fa6\u542c\u7aef\u53e3 7667 \u7684\u6c64\u670d\u52a1\u5668\uff0c\u4e3a\u9ad8\u7ea7 PDF \u64cd\u4f5c\u5b9a\u4e49\u4e86\u51e0\u5341\u4e2a\u5904\u7406\u7a0b\u5e8f\uff0c\u5305\u62ec\u6211\u4eec\u611f\u5174\u8da3\u7684\u201copenBook\u201d\u548c\u201cstartRendering\u201d\u3002 /usr/lib/libFoxitWrapper.so \u5e93\uff0c\u7f16\u5199\u7531 Amazon \u63d0\u4f9b\uff0c\u63d0\u4f9b\u7528\u4e8e\u5904\u7406 PDF \u6587\u4ef6\u7684 API\u3002 pdfreader \u5728\u5b83\u7684\u6c64\u5904\u7406\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u5e93\u3002\u4f8b\u5982\uff0c\u201copenBook\u201d\u5904\u7406\u7a0b\u5e8f\u5982\u4e0b\u6240\u793a\uff1a renderPageFromLibrary(uint32_t handle, uint32_t page, uint32_t width, uint32_t height, float scale, uint8_t Landscape, uint8_t* out) \u2013 \u6e32\u67d3 PDF \u9875\u9762\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u56fe\u50cf\u3002\u5f53\u88ab\u8c03\u7528\u65f6\uff0c\u6d41\u8fc7\u6ee4\u5668\u5f00\u59cb\u88ab\u89e3\u6790\u3002\u987e\u540d\u601d\u4e49\uff0clibFoxitWrapper.so \u662f\u7531 /usr/lib/libfpdfemb.so \u5e93\u5728 Kindle \u8bbe\u5907\u4e0a\u63d0\u4f9b\u7684\u6d41\u884c Foxit PDF SDK \u7684\u5305\u88c5\u5668\u3002 libfpdfemb.so \u662f Foxit Software Inc. \u4e13\u6709\u7684\u95ed\u6e90\u5e93\u3002 Foxit Embedded PDF SDK \u624b\u518c\u53ef\u4ee5\u5728 Internet \u4e0a\u627e\u5230\u3002\u6211\u4eec\u8bd5\u56fe\u4ece libFoxitWrapper.so \u5e93\u4e2d\u5bf9\u4e0a\u8ff0\u51fd\u6570\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u5e26\u6765\u4efb\u4f55\u7ed3\u679c\uff0c\u9664\u4e86\u4e00\u7ec4\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e00\u79cd\u66f4\u6709\u524d\u666f\u7684 PDF \u683c\u5f0f\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u5bf9\u8c61\u6216\u6d41\u8fc7\u6ee4\u5668\u4f5c\u4e3a\u6d4b\u8bd5\u76ee\u6807\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u51b3\u5b9a\u5bf9 libfpdfemb.so \u5e93\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\u3002\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7ecf\u5178\u7684\u6a21\u7cca\u6d4b\u8bd5\u6a21\u578b\u3002\u6a21\u7cca\u4efb\u4f55\u95ed\u6e90\u5e93\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u7f16\u5199\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5c06\u5e93\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5e76\u8c03\u7528\u76ee\u6807\u51fd\u6570\u3002\u8fd9\u4e2a\u52a0\u8f7d\u5668\u5c06\u4e00\u4e2a\u5e26\u6709\u6392\u5217\u6570\u636e\u7684\u6587\u4ef6\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u8bfb\u5165\u5b83\uff0c\u5e76\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u88ab\u6d4b\u51fd\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u52a0\u8f7d\u5668\u88ab\u68c0\u6d4b\u6216\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\uff0c\u4ee5\u6536\u96c6\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u4ee3\u7801\u8986\u76d6\u77e9\u9635\u3002\u7b2c\u4e09\u65b9\u6a21\u7cca\u5668/\u7f6e\u6362\u5668\u4e4b\u4e00\u7528\u4e8e\u6839\u636e\u8986\u76d6\u77e9\u9635\u751f\u6210\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u4e3a\u4e86\u5bf9 libfpdfemb.so \u5e93\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\uff0c\u6211\u4eec\u9009\u62e9\u4e86 American Fuzzy Lop (AFL) \u548c Quick emulator (Qemu) \u7684\u7ec4\u5408\u3002\u4e3b\u673a\u662fUbuntu\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u4ef6\u4e8b\u3002 Kindle \u8bbe\u5907\u57fa\u4e8e ARM \u5904\u7406\u5668\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u52a0\u8f7d\u5668\u662f\u4f7f\u7528 arm-linux-gnueabi-g++ \u7f16\u8bd1\u7684\u3002 Qemu \u5f88\u5bb9\u6613\u5728 x86 \u4e0a\u6a21\u62df ARM\u3002\n\u5728 libfpdfemb.so \u5e93\u4e2d\u5bf9\u5355\u8bcd\u201cCPDF\u201d\u548c\u201cCodec\u201d\u7684\u7b80\u5355\u641c\u7d22\u4f7f\u6211\u4eec\u80fd\u591f\u627e\u5230\u6240\u6709\u53ef\u80fd\u7684\u6d41\u8fc7\u6ee4\u5668/\u7f16\u89e3\u7801\u5668\uff1aPredictor\u3001Decrypt\u3001Flate\u3001Fax\u3001Lzw\u3001AsciiHex\u3001RunLen\u3001Ascii85\u3001Jpeg\u3001Jbig2\u548cJP\u3002\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u770b\u5176\u4e2d\u7684\u4e00\u4e2a\u3002 \ufffc\u5982\u60a8\u6240\u89c1\uff0c\u58f0\u660e\u4e86\u5e26\u6709 jbig2 \u8fc7\u6ee4\u5668\u7684\u56fe\u50cf Im1\u3002 Jbig2 \u662f\u4e00\u79cd\u7528\u4e8e\u53cc\u5c42\u56fe\u50cf\u7684\u56fe\u50cf\u538b\u7f29\u6807\u51c6\u3002 jbig2 \u7f16\u7801\u5668\u5c06\u8f93\u5165\u9875\u9762\u5206\u5272\u4e3a\u591a\u4e2a\u533a\u57df\uff1a\u6587\u672c\u3001\u534a\u8272\u8c03\u56fe\u50cf\u3001\u7ec6\u5316\u7b49\u3002\u8fd9\u4e9b\u533a\u57df\u4fdd\u5b58\u5728 JBIG2Globals \u6d41\u4e2d\u3002\u6e32\u67d3 PDF \u9875\u9762\u65f6\uff0clibfpdfemb.so \u4f1a\u89e3\u6790 JBIG2Globals \u6d41\u5e76\u91cd\u5efa\u56fe\u50cf\u3002\u5728 libfpdfemb.so \u5e93\u4e2d\u5b9a\u4e49\u7684 Jbig2Module \u5bf9\u8c61\u8d1f\u8d23\u89e3\u7801 jbig2 \u538b\u7f29\u56fe\u50cf\u3002\u5728\u5176\u4ed6\u8fc7\u6ee4\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 StartDecode \u51fd\u6570\u4f5c\u4e3a\u5165\u53e3\u70b9\u5bf9 jbig2 \u89e3\u7801\u7b97\u6cd5\u8fdb\u884c\u4e86\u6a21\u7cca\u6d4b\u8bd5\uff0c\u5e76\u6392\u5217\u4e86\u56fe\u50cf\u5927\u5c0f\uff08\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u53c2\u6570\uff09\u3001\u56fe\u50cf\u6d41\uff08src_buf\u3001src_size\uff09\u548c JBIG2Globals \u6d41\uff08global_data\u3001global_size\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u65b9\u770b\u5230\u6211\u4eec\u7528\u6765\u8c03\u7528 StartDecode \u7684\u5de5\u5177\u3002\u57fa\u53d8\u91cf\u662f libfpdfemb.so \u5e93\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002\u7ed3\u679c\uff0c\u6211\u4eec\u5728 JBIG2Globals \u89e3\u7801\u7b97\u6cd5\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u5806\u6ea2\u51fa\u6f0f\u6d1e\u3002\u56fe\u50cf\u4fe1\u606f\u533a\u57df\uff08\u524d 0x23 \u5b57\u8282\uff09\u3002\u56fe\u50cf\u5bbd\u5ea6\u4e3a 0x80\uff0c\u9ad8\u5ea6\u4e3a 1\uff0c\u6b65\u5e45\u4e3a 0x10\u3002\u6b65\u5e45\u8ba1\u7b97\u4e3a ((width + 31) &gt;&gt; 5) &lt;&lt; 2. \u201c\u7ec6\u5316\u201d\u533a\u57df\uff08\u4ece 0x23 \u5230 0x4D \u5b57\u8282\uff09\u3002\u8be5\u533a\u57df\u5305\u542b\u7528\u4e8e\u7ec6\u5316\u56fe\u50cf\u7684 jbig2 \u7f16\u7801\u4fe1\u606f\u3002\u7531\u4e8e\u53ea\u80fd\u7ec6\u5316\u56fe\u50cf\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u8fd8\u5305\u542b\u7ec6\u5316\u77e9\u5f62\u7684\u5750\u6807\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u63d0\u4f9b\u7684\u77e9\u5f62\u53c2\u6570\u662f\uff1awidth \u2013 0\uff0cheight \u2013 0x10\uff0cx \u2013 0\uff0cy \u2013 0x40000000\u3002\n\u8fd9\u662f\u4e00\u4e2a\u683c\u5f0f\u9519\u8bef\u7684\u6d41\u3002\u5728\u7ec6\u5316\u533a\u57df\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8d85\u5927\u7684\u77e9\u5f62\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u8be5\u7b97\u6cd5\u5c1d\u8bd5\u5c06\u57fa\u7840\u56fe\u50cf\u6269\u5c55\u5230\u65b0\u7684\u7ef4\u5ea6\u3002\u65b0\u56fe\u50cf\u7684\u9ad8\u5ea6\u91cd\u65b0\u8ba1\u7b97\u4e3a\u9ad8\u5ea6 + y\uff0c\u5e76\u4e3a\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u5206\u914d (height + y) * stride \u5806\u5185\u5b58\u3002\u4f46\u662f\u6269\u5c55\u51fd\u6570\u4e2d\u6709\u4e00\u4e2a\u9519\u8bef\u5bfc\u81f4\u5806\u6ea2\u51fa\uff1a\u8ba1\u7b97\u65b0\u56fe\u50cf\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f\u65f6\u9519\u8fc7\u4e86\u5bf9 INT_MAX \u7684\u68c0\u67e5\u3002 32 \u4f4d\u5bc4\u5b58\u5668\u6ea2\u51fa\uff0c\u4e3a\u56fe\u50cf\u5206\u914d 0x100 \u5b57\u8282\u800c\u4e0d\u662f 0x400000100\u3002\u8fd9\u610f\u5473\u7740\u901a\u8fc7\u4f7f\u7528\u7ec6\u5316\u533a\u57df\uff0c\u6211\u4eec\u53ef\u4ee5\u201c\u7ec6\u5316\u201d\u56fe\u50cf\u4e4b\u5916\u7684\u6570\u636e\uff0c\u5e76\u83b7\u5f97\u4efb\u610f\u5199\u5165\u539f\u8bed\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u7ec6\u5316\u533a\u57df\u4ece\u5806\u4e2d\u7684\u56fe\u50cf\u5f00\u59cb\u5904\u4ee5 0x1234 * 0x10 \u5b57\u8282\u7684\u504f\u79fb\u91cf\u8986\u76d6 0x10\uff08\u8de8\u6b65\uff09\u5b57\u8282\u3002\u6570\u636e blob\uff080x71 \u5230 0x79 \u5b57\u8282\uff09\u7531 jbig2 \u7b97\u6cd5\u89e3\u538b\u7f29\uff0c\u7136\u540e\u4e0e\u5806\u5185\u5bb9\u8fdb\u884c\u5f02\u6216\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u6570\u91cf\u7684\u7ec6\u5316\u533a\u57df\u5e76\u8986\u76d6\u5f7c\u6b64\u76f8\u8ddd\u4e00\u5b9a\u8ddd\u79bb\u7684\u90e8\u5206\u5185\u5b58\u3002\u6b64\u5916\uff0c\u5199\u5165\u662f\u901a\u8fc7 XOR \u64cd\u4f5c\u5b8c\u6210\u7684\u8fd9\u4e00\u4e8b\u5b9e\u5141\u8bb8\u6211\u4eec\u4ec5\u4fee\u590d\u5185\u5b58\u7684\u7279\u5b9a\u4f4d\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u5b57\uff0c\u5e76\u5728\u9700\u8981\u65f6\u7ed5\u8fc7 ASLR \u4fdd\u62a4\u3002\u5982\u524d\u6240\u8ff0\uff0clibfpdfemb.so \u5e93\u662f pdfreader \u8fdb\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u6570\u636e\u6bb5\u548c\u5806\u6bb5\u662f\u8bfb/\u5199/\u6267\u884c\u7684\u3002 ASLR \u5185\u7f6e\u4e8e Linux \u5185\u6838\u4e2d\uff0c\u7531\u53c2\u6570 /proc/sys/kernel/randomize_va_space \u63a7\u5236\u3002\u5b83\u5728 Kindle \u8bbe\u5907\u4e0a\u7684\u9ed8\u8ba4\u503c\u4e3a 1\uff0c\u8fd9\u610f\u5473\u7740\u6570\u636e\u6bb5\u7684\u57fa\u5730\u5740\u7d27\u8ddf\u5728\u53ef\u6267\u884c\u4ee3\u7801\u6bb5\u7684\u672b\u5c3e\u4e4b\u540e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6570\u636e\u6bb5\u548c\u5806\u6ca1\u6709\u968f\u673a\u5316\u3002\u8fd9\u4e24\u4e2a\u4e8b\u5b9e\u4f7f\u5f97\u5229\u7528\u53d1\u73b0\u7684 jbig2 \u6f0f\u6d1e\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\u3002\u6211\u4eec\u73b0\u5728\u5728 pdfreader \u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b58\u5728 RCE \u6f0f\u6d1e\u3002\u7528\u6237\u5c06 PDF \u4e66\u4e0b\u8f7d\u5230\u4ed6\u7684 Kindle \u8bbe\u5907\u3002\u5f53\u8fd9\u672c\u4e66\u88ab\u6253\u5f00\u65f6\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u6076\u610f\u8d1f\u8f7d\u3002 pdfreader \u8fdb\u7a0b\u5177\u6709\u6846\u67b6\u7528\u6237\u6743\u9650\uff1auid=9000(framework) gid=150(javausers) groups=150(javausers)\u3002\u5b83\u53ef\u4ee5\u53d1\u9001 LIPC \u6d88\u606f\uff0c\u8bbf\u95ee\u7279\u6b8a\u7684\u5185\u90e8\u6587\u4ef6\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u6709\u9650\u7684\u3002\u6211\u4eec\u60f3\u6210\u4e3a root \u6765\u91cd\u7f6e\u6240\u6709\u9650\u5236\u3002\u56e0\u6b64\uff0c\u7814\u7a76\u7684\u7b2c\u4e8c\u9636\u6bb5\u662f\u627e\u5230\u4e00\u4e2a LPE \u6f0f\u6d1e\uff0c\u8be5\u6f0f\u6d1e\u5141\u8bb8\u6846\u67b6\u7528\u6237\u5728 root \u7528\u6237\u4e0b\u8fd0\u884c\u4ee3\u7801\u3002\u9996\u5148\uff0c\u6211\u4eec\u8d8a\u72f1\u4e86\u6211\u4eec\u7684\u4e00\u4e2a Kindle\uff0c\u56e0\u4e3a\u4ec5\u4ec5\u4ece\u56fa\u4ef6\u4e2d\u83b7\u53d6\u6587\u4ef6\u6765\u641c\u7d22\u903b\u8f91 LPE \u662f\u4e0d\u591f\u7684\u3002\u6211\u4eec\u9700\u8981\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u548c\u6253\u5f00\u7684\u7aef\u53e3\uff0c\u5e76\u80fd\u591f\u8c03\u8bd5 Kindle \u670d\u52a1\u3002\n\u53ef\u4ee5\u5728 Internet \u4e0a\u627e\u5230\u67d0\u4e9b\u7248\u672c\u7684 Kindle \u56fa\u4ef6\u7684\u8f6f\u4ef6\u8d8a\u72f1\u3002\u4f46\u6700\u901a\u7528\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u4e32\u53e3\u8d8a\u72f1\u3002\u867d\u7136\u8fd9\u9700\u8981\u62c6\u5378\u8bbe\u5907\uff0c\u4f46\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u505a\u7684\u3002\u6211\u4eec\u62ff\u5230\u4e86\u4e00\u4e2a\u8d8a\u200b\u200b\u72f1\u7684\u8bbe\u5907\uff0c\u7136\u540e\u5206\u6790\u4e86\u62e5\u6709root\u6743\u9650\u7684\u670d\u52a1\uff0c\u4ee5\u53ca\u5b83\u4eec\u8bbf\u95ee\u7684\u8d44\u6e90\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5728 Kindle \u670d\u52a1\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u903b\u8f91\u9519\u8bef\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662f\u6743\u9650\u7ba1\u7406\u4e0d\u5f53\u3002\u592a\u597d\u4e86\uff0c\u65e0\u9700\u5bf9\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\u3002\u6846\u67b6\u7528\u6237\u5bf9 /var/tmp/framework \u76ee\u5f55\u5177\u6709\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\uff0c\u4ed6\u53ef\u4ee5\u5728\u5176\u4e2d\u521b\u5efa\u4efb\u4f55\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f\u7528\u6237\u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8bb0\u5f55\u7528\u6237\u6743\u9650\u7684 bash \u811a\u672c\u6587\u4ef6 payload.sh\uff1a\u6846\u67b6\u7528\u6237\u5bf9 /var/local/appreg.db sqlite \u6570\u636e\u5e93\u5177\u6709\u8bfb/\u5199\u8bbf\u95ee\u6743\u9650\uff0c\u8be5\u6570\u636e\u5e93\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u8868\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 /usr/lib/libsqlite3.so \u5e93\u6216\u7b80\u5355\u5730\u7f16\u8f91\u6587\u4ef6\u6765\u4fee\u590d\u6570\u636e\u5e93\u6761\u76ee\u3002\u6211\u4eec\u60f3\u8981\u4fee\u8865\u5c5e\u6027\u8868\u4e2d\u7684\u201c\u547d\u4ee4\u201d\u6761\u76ee\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u8865\u6761\u76ee com.lab126.browser\uff1a\u5c06\u503c\u5b57\u6bb5\u8bbe\u7f6e\u4e3a /var/tmp/framework/payload.sh \u800c\u4e0d\u662f /usr/bin/mesquite\u3002\u4ee5\u4e0b SQL \u8bf7\u6c42\u5b8c\u6210\u5de5\u4f5c\uff1a \u6846\u67b6\u53ef\u4ee5\u8bf7\u6c42\u7531 appmgrd \u670d\u52a1\u8868\u793a\u7684\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\u542f\u52a8\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 /usr/lib/liblipc.so \u5e93\u53d1\u9001 LIPC \u6d88\u606f\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64 shell \u547d\u4ee4\u7684\u4f5c\u7528\u76f8\u540c\uff1a\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\u8d1f\u8d23\u542f\u52a8\u5185\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002\u4e3a\u6b64\uff0c\u5b83\u4f1a\u4fa6\u542c\u9002\u5f53\u7684 LIPC \u4e8b\u4ef6\u3002\u8981\u542f\u52a8\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u4ece appreg.db \u8bfb\u53d6\u6761\u76ee com.lab126.browser\uff0c\u5e76\u6267\u884c\u503c\u5b57\u6bb5\u4e2d\u6307\u5b9a\u7684\u547d\u4ee4\u3002\u5f53\u6211\u4eec\u4fee\u8865\u8fd9\u4e2a\u6570\u636e\u5e93\u6761\u76ee\u65f6\uff0c\u6211\u4eec\u7684 payload.sh \u811a\u672c\u88ab\u542f\u52a8\u3002\nappmgrd \u670d\u52a1\u5177\u6709 root \u6743\u9650\u3002 \u201croot: uid=0(root) gid=0(root)\u201d\u5b57\u7b26\u4e32\u7531payload.sh\u8bb0\u5f55\u3002\u53ef\u4ee5\u4ece\u6211\u4eec\u62e5\u6709\u7684 pdfreader \u8fdb\u7a0b\u4e2d\u8f7b\u677e\u5229\u7528\u6240\u63cf\u8ff0\u7684 LPE \u6f0f\u6d1e\u3002 libsqlite3.so \u548c liblipc.so \u5e93\u5df2\u7ecf\u52a0\u8f7d\u5230\u8fdb\u7a0b\u5185\u5b58\u4e2d\u3002\u901a\u8fc7\u7ed3\u5408\u53d1\u73b0\u7684\u4e24\u4e2a\u6f0f\u6d1e\uff0c\u4efb\u4f55\u6076\u610f\u8d1f\u8f7d\u90fd\u53ef\u4ee5\u4ee5 root \u8eab\u4efd\u8fd0\u884c\u3002\u6211\u4eec\u6f14\u793a\u4e86\u7535\u5b50\u4e66\u5982\u4f55\u5145\u5f53\u6076\u610f\u8f6f\u4ef6\u3002\u7531\u4e8e\u6076\u610f\u8f6f\u4ef6\u4ee3\u7801\u662f\u4ee5 root \u7528\u6237\u6743\u9650\u6267\u884c\u7684\uff0c\u6253\u5f00\u8fd9\u6837\u7684\u4e66\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u5f25\u8865\u7684\u635f\u5bb3\u3002\u653b\u51fb\u8005\u53ef\u80fd\u5220\u9664\u4e86\u60a8\u7684\u7535\u5b50\u4e66\uff0c\u53ef\u80fd\u83b7\u5f97\u5bf9\u60a8\u4e9a\u9a6c\u900a\u5e10\u6237\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u80fd\u5c06\u60a8\u7684 Kindle \u8f6c\u6362\u4e3a\u673a\u5668\u4eba\uff0c\u653b\u51fb\u60a8\u672c\u5730\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u8bbe\u5907\uff0c\u7b49\u7b49\u3002\u6240\u63cf\u8ff0\u7684\u6f0f\u6d1e\u4e8e 2021 \u5e74 2 \u6708\u62a5\u544a\u7ed9\u4e9a\u9a6c\u900a\uff0c\u5e76\u4e8e 2021 \u5e74 4 \u6708\u5728 Kindle \u56fa\u4ef6\u7684 5.13.5 \u7248\u672c\u4e2d\u4fee\u590d\u3002", "note_en": "Since 2007, Amazon has sold tens of millions of Kindles, which is impressive. But this also means that tens of millions of people could have potentially been hacked through a software bug in those same Kindles. Their devices could be turned into bots or their private local networks could be compromised, and perhaps even information in their billing accounts can be stolen.\n  The easiest way to remotely reach a user\u2019s Kindle is through an e-book. A malicious book can be published and made available for free access in any virtual library, including the Kindle Store, via the \u201cself-publishing\u201d service, or sent directly to the end-user device via the Amazon \u201csend to kindle\u201d service. While you might not be happy with the writing in a particular book, nobody expects to download one that is malicious. No such scenarios have been publicized. Antiviruses do not have signatures for e-books. But\u2026 we succeeded in making a malicious book. If you were to open this book on a Kindle device, it could have caused a hidden piece of code to be executed with root rights. From this moment on, you can assume that you have lost control of your e-reader.\n  The issues we found were reported to Amazon in February 2021 and fixed in the 5.13.5 version of Kindle\u2019s firmware in April 2021. The patched firmware will be installed automatically on devices connected to the Internet.\n    Basically, the Kindle OS is a Linux kernel with a set of native programs mainly provided by busybox, the LIPC subsystem for inter-process communication, and the Java and Webkit subsystems for user interface (UI) and services.\n    The LIPC is a D-Bus-based IPC library and its environment that links all Kindle components together. A Kindle process can use this library to start apps, expose application properties/settings, listen for or emit events. For example, a Webkit application, written in HTML and Javascript, can use the LIPC to interact with a Java service or a native application.\n  Most of the UI is written in Java. The Java subsystem (the framework) provides LIPC handlers for both services and the UI (so-called Booklets). For example, the Kindle home UI window is the  com.lab126.booklet.home booklet managed by the framework.\n  The Webkit subsystem (HTML5 and Javascript) is another way to create UI elements. The built-in experimental browser is a part of the Webkit subsystem. The pillow is a library that allows access to the LIPC from Javascript.\n    The latest version (5.13.4) of the Kindle e-reader firmware is publicly available for download on the official Amazon website. The source code is also partially available there. But the source code did not help in our research because it mainly consists of third-party open-source projects, including the Linux kernel, with small Amazon tweaks. There is no source code for the components responsible for parsing and rendering e-books.\n  Our first goal was to discover a vulnerability in the e-book parsing framework. For this we have enough files from the firmware and there is no need for a real Kindle device.  Let\u2019s look at the components responsible for handling e-books.\n  The  /mnt/us/documents is the regular e-books\u2019 directory, when you download a new book on your Kindle device. Who is going to handle the file first? The  /usr/bin/scanner service periodically scans the document directory for new files and, depending on the file extension, uses one of the \u201cextractor\u201d libraries to extract metadata from the e-book. All extractors are listed in the  /var/local/appreg.db sqlite database. There is a handler for each of the supported Kindle e-book formats:\n    If the scanner does not match the file extension or a parsing error occurs, the e-book is not shown to the user.  We did not go deep into the scanning process because extracting metadata is too simple an operation to suggest parsing errors.\n  After the scanner does its job, a thumbnail of the new book is displayed on the home screen. From this moment on, the Java framework is responsible for opening the book when you click on it. Java archive (JAR) files that implement the logic for opening and rendering e-books can be found in the  /opt/amazon/ebook/lib firmware directory. Primarily, these are  MobiReader-impl.jar,  YJReader-impl.jar,  PDFReader-impl.jar,  HTMLReader-impl.jar and  TopazReader-impl.jar files. For further research, we decided to focus our attention on the PDF file format, as it\u2019s one of the most common, and yet at the same time, complex formats.\n  Let\u2019s take a look at the implementation of the PDF book opening function in the  PDFReader-impl.jar ( com.amazon.ebook.booklet.pdfreader.impl.PDFModel class):\n  As you can see, this function is only a wrapper over the  nativeOpenPDFDocument native function with the body in the  /usr/java/lib/libPDFClientJNI.so library.\n  The  nativeOpenPDFDocument function starts the PDF server  /usr/bin/pdfreader, forking the process, and synchronously sends it an \u201copenBook\u201d message via the open source HTTP client/server library  /usr/lib/libsoup-2.4.so. In fact, it sends a GET request to  https://127.0.0.1:7667/command/openBook.\n  The  pdfreader server is the main target of our research. Eventually, we will run our payload in the context of this process. At startup, the  pdfreader server lowers itself to the permissions of the \u201cframework\u201d user (uid 9000) with a  setuid call. Then it launches a soup server listening on port 7667, defining dozens of handlers for high-level PDF operations, including the \u201copenBook\u201d and \u201cstartRendering\u201d ones that we are interested in. The  /usr/lib/libFoxitWrapper.so library, written by Amazon, provides an API for working with PDF files. The  pdfreader uses this library in its soup handlers. For example, the \u201copenBook\u201d handler looks like this:\n    renderPageFromLibrary(uint32_t handle, uint32_t page, uint32_t width, uint32_t height, float scale, uint8_t landscape, uint8_t* out) \u2013 Renders the PDF page converting it to an image. When called, the stream filters begin to be parsed.\n    As the name implies,  libFoxitWrapper.so is a wrapper for a popular Foxit PDF SDK presented on Kindle devices by the  /usr/lib/libfpdfemb.so library. The  libfpdfemb.so is a closed-source library proprietary to Foxit Software Inc. The Foxit Embedded PDF SDK manual can be found on the Internet.\n    We tried to fuzz the mentioned functions from the  libFoxitWrapper.so library, but this approach did not bring any result, except for a set of null pointer exceptions. A more promising approach to the PDF format is to choose one specific object or stream filter as the target for the test. So, we decided to fuzz the  libfpdfemb.so library.\n  But first, let\u2019s take a look at the classic fuzzing model. The easiest way to fuzz any closed-source library is to write an executable file that loads the library into memory and calls the target functions. This loader takes a file with permuted data as a command line parameter, reads it in, and passes the data to the function under test. Next, the loader is instrumented or run on an emulator to collect the code coverage matrix for each test case. One of the third-party fuzzers/permutors is used to generate new test cases based on the coverage matrix.  To fuzz the  libfpdfemb.so library, we chose a combination of American Fuzzy Lop (AFL) and Quick emulator (Qemu). The host machine is Ubuntu.\n    We need to note one more thing. A Kindle device is based on an ARM processor. Therefore, our loader was compiled using  arm-linux-gnueabi-g++. The Qemu easily emulates ARM on x86.\n  A simple search for the words \u201cCPDF\u201d and \u201cCodec\u201d in the  libfpdfemb.so library allowed us to find all the possible stream filters/codecs:  Predictor,  Decrypt,  Flate,  Fax,  Lzw,  AsciiHex,  RunLen,  Ascii85,  Jpeg,  Jbig2 and  Jpx. Let\u2019s take a look at one of them with an example.\n      \ufffcAs you can see, an image  Im1 with jbig2 filter is declared. Jbig2 is an image compression standard for bi-level images. The jbig2 encoder segments the input page into regions: text, halftone images, refinement, and others. These regions are held in the  JBIG2Globals stream. When rendering a PDF page,  libfpdfemb.so parses the  JBIG2Globals stream and reconstructs the image.\n  The  Jbig2Module object, defined in the  libfpdfemb.so library, is responsible for decoding jbig2 compressed images.\n        Among other filters, we fuzzed the jbig2 decoding algorithm using the  StartDecode function as the entry point and permuted the image size ( width and  height arguments), the image stream ( src_buf,  src_size) and the  JBIG2Globals stream ( global_data,  global_size). Below you can see the harness we used to invoke the  StartDecode. The base variable is the address of the  libfpdfemb.so library in memory.\n  As a result, we discovered a valuable heap overflow vulnerability in the  JBIG2Globals decoding algorithm.\n          The image information region (first 0x23 bytes). The image width is 0x80, the height is 1 and the stride is 0x10. The stride is calculated as  ((width + 31) &gt;&gt; 5) &lt;&lt; 2.\n  The \u201crefinement\u201d region (from 0x23 to 0x4D bytes). This region contains jbig2 encoded information to refine the image. As only a part of the image can be refined, it also contains the coordinates of the refining rectangle. In our case, the provided rectangle parameters are: width \u2013 0, height \u2013 0x10, x \u2013 0, y \u2013 0x40000000.\n  This is a malformed stream. An oversized rectangle is defined in the refinement region.  What happens in this case? The algorithm tries to expand the base image to the new dimensions. The height of the new image is recalculated as  height + y, and  (height + y) * stride heap memory is allocated for the resized image. But there is a mistake in the expanding function that leads to a heap overflow: a missed check for  INT_MAX when calculating the size in memory of the new image. The 32-bit register overflows, and 0x100 bytes is allocated for the image instead of 0x400000100.\n    This means that by using refinement regions, we can \u201crefine\u201d the data outside of the image, and get the arbitrary write primitive. In the following example, the second refinement region overwrites 0x10 (stride) bytes at an offset 0x1234 * 0x10 bytes from the beginning of the image in the heap. The data blob (0x71 to 0x79 bytes) is decompressed by the jbig2 algorithm and then XORed with the heap content.\n    We can create any number of refinement regions and overwrite parts of memory that are at a distance from each another. In addition, the fact that the writing is done through a XOR operation allows us to fix only specific bits of memory, but not whole words, and bypass ASLR protection if required.\n  As mentioned previously, the  libfpdfemb.so library is part of the  pdfreader process. The data and heap segments of this process are read/write/execute. ASLR is built into the Linux kernel and is controlled by the parameter  /proc/sys/kernel/randomize_va_space. Its default value on Kindle devices is 1, which means the base address of the data segment is located immediately after the end of the executable code segment. In other words, there is no randomization for the data segment and the heap. These two facts make exploiting the discovered jbig2 vulnerability trivial.\n    We now have RCE vulnerability in the context of the  pdfreader process. A user downloads the PDF book to his Kindle device. When the book is opened, a malicious payload is launched.\n  The  pdfreader process has the framework user rights:  uid=9000(framework) gid=150(javausers) groups=150(javausers). It can send LIPC messages, access special internal files, but it is still limited. We want to be a root to reset all restrictions.  So, the second stage of the research is to find an LPE vulnerability that allows the framework user to run a code under the root user.\n  First, we jailbroke one of our Kindles because it is not enough just to have files from the firmware to search the logical LPE. We need to see running processes and opened ports, and to be able to debug Kindle services.\n  A software jailbreak for some versions of Kindle firmware can be found on the Internet. But the most general way is to jailbreak through the serial port. Although this requires disassembling the device, this is what we did.\n    We got a jailbroken device, and then analyzed the services that have root rights, as well as the resources they access. Eventually, we found a logical error, or more accurately, an improper privilege management, in one of the Kindle services. Great, there is no need to fuzz the device drivers.\n  The framework user has full access to  /var/tmp/framework directory, where he can create any executable file. Actually, this is the user\u2019s working directory. For example, we can create a bash script file  payload.sh that logs user privileges:\n  The framework user has read/write access to the  /var/local/appreg.db sqlite database that is essentially an application registry. This means that we can fix a database entry using the  /usr/lib/libsqlite3.so library or by simply editing the file. We want to patch one of the \u201ccommand\u201d entries in the  properties table.\n    For example, we can patch the entry  com.lab126.browser: set the  value field to  /var/tmp/framework/payload.sh instead of  /usr/bin/mesquite. The following SQL request does the work:\n  The framework can request the application manager, represented by the  appmgrd service, to start an arbitrary application. We can send an LIPC message to open the browser app using the  /usr/lib/liblipc.so library. This shell command does the same:\n  The application manager is responsible for launching built-in apps. To do this, it listens for the appropriate LIPC events. To start the browser app, it reads the entry  com.lab126.browser from the  appreg.db, and executes the command specified in the  value field. As we patched this database entry, our  payload.sh script is launched.\n  The  appmgrd service has root rights. The \u201croot: uid=0(root) gid=0(root)\u201d string is logged by the  payload.sh.\n  The described LPE vulnerability can be easily exploited from the  pdfreader process that we owned. The  libsqlite3.so and  liblipc.so libraries are already loaded into the process memory. By combining the two discovered vulnerabilities, any malicious payload can be run as root.\n    We demonstrated how an e-book can function as malware. As the malware code is executed with root user rights, just opening such a book could have led to irreparable damage. The attacker could have deleted your e-books, potentially gain full access to your Amazon account, could have converted your Kindle to a bot, attacked other devices in your local network, and more.\n  The described vulnerabilities were reported to Amazon in February 2021 and fixed in the 5.13.5 version of Kindle\u2019s firmware in April 2021.", "posttime": "2021-08-08 09:48:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u559c\u6b22,kindle", "title": "\u4f60\u559c\u6b22\u8bfb\u4e66\u5417\uff1f\u6211\u53ef\u4ee5\u7528\u7535\u5b50\u4e66\u63a5\u7ba1\u4f60\u7684 Kindle", "title_en": "Do you like to read? I can take over your Kindle with an e-book", "transed": 1, "url": "https://research.checkpoint.com/2021/i-can-take-over-your-kindle/", "via": "", "real_tags": ["\u559c\u6b22", "kindle"]}, {"category": "", "categoryclass": "", "imagename": "b88a5b565afc2527f334cdd1d19058d8.jpg", "infoid": 1072045, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u300a\u81ea\u6740\u5c0f\u961f\u300b\u9996\u6620\u4e4b\u524d\uff0c\u7c89\u4e1d\u7684\u70ed\u60c5\u4e00\u76f4\u5f88\u9ad8\uff0c\u8a79\u59c6\u65af\u201c\u4e0d\u8981\u79f0\u4e4b\u4e3a\u91cd\u542f\u201d\u5188\u6069\u7684\u4e00\u7fa4\u4e0d\u5408\u65f6\u5b9c\u7684\u8d85\u7ea7\u53cd\u6d3e\u5411 1967 \u5e74\u7684\u7ecf\u5178\u7535\u5f71\u201c\u80ae\u810f\u7684\u5341\u4e8c\u4eba\u201d\uff08\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u5f71\u54cd\uff09\u81f4\u656c\u3002\u8fd9\u79cd\u70ed\u60c5\u5e76\u6ca1\u6709\u9519\u3002 DCEU \u7684\u7b2c\u5341\u90e8\u662f\u5feb\u8282\u594f\u7684\u3001\u8840\u8165\u7684\u3001\u75af\u72c2\u7684\u4e0d\u656c\u7684\u5192\u9669\uff0c\u5de7\u5999\u5730\u5e73\u8861\u4e86\u8840\u8165\u548c\u611a\u8822\uff0c\u4ee5\u53ca\u540c\u7b49\u7a0b\u5ea6\u7684\u4e0d\u656c\u548c\u771f\u8bda\u3002\u60f3\u60f3\u7537\u5b69\u4eec\u62bd\u4e86\u7c7b\u56fa\u9187\u3002\u6b63\u5982\u6211\u4e4b\u524d\u6240\u5199\u7684\u90a3\u6837\uff0c\u300a\u81ea\u6740\u5c0f\u961f\u300b\u5e76\u4e0d\u662f 2016 \u5e74\u7531\u5927\u536b\u00b7\u827e\u5c14\u65af (David Ayers) \u6267\u5bfc\u7684\u7535\u5f71\u7684\u76f4\u63a5\u7eed\u96c6\u3002 Gunn \u60f3\u5c06\u7279\u8bb8\u7ecf\u8425\u6743\u63a8\u5411\u65b0\u7684\u65b9\u5411\u5e76\u5f15\u5165\u65b0\u89d2\u8272\u3002\u4f46\u4e54\u5c14\u00b7\u91d1\u7eb3\u66fc\u548c\u7ef4\u5965\u62c9\u00b7\u6234\u7ef4\u65af\u786e\u5b9e\u91cd\u65b0\u626e\u6f14\u4e86\u4ed6\u4eec 2016 \u5e74\u7684\u89d2\u8272\uff0c\u5206\u522b\u662f\u91cc\u514b\u00b7\u5f17\u62c9\u683c\u4e0a\u6821\uff0c\u53ef\u4ee5\u7406\u89e3\u7684\u662f\uff0c\u5c0f\u961f\u75b2\u60eb\u4e0d\u582a\u7684\u73b0\u573a\u9886\u5bfc\u8005\u548c\u60c5\u62a5\u5b98\u963f\u66fc\u8fbe\u00b7\u6c83\u52d2\u3002\u53f2\u8482\u592b\u00b7\u827e\u5409\u9970\u6f14\u7ea6\u7ff0\u00b7\u4f0a\u79d1\u8bfa\u83ab\u65af\uff0c\u76d1\u72f1\u770b\u5b88\u517c\u6c83\u52d2\u7684\u52a9\u624b\u3002\u4e0e 2016 \u5e74\u7684\u7535\u5f71\u4e00\u6837\uff0c\u540d\u4e49\u4e0a\u7684\u5c0f\u961f\u5b8c\u5168\u7531\u72af\u7f6a\u7684\u8d85\u7ea7\u6076\u68cd\u7ec4\u6210\uff0c\u7531 Flag \u9886\u5bfc\uff0c\u5728 Waller \u7684\u9886\u5bfc\u4e0b\u3002\u6c83\u52d2\u5728\u4ed6\u4eec\u7684\u8116\u5b50\u4e0a\u690d\u5165\u7eb3\u7c73\u70b8\u5f39\uff0c\u4ee5\u5408\u7406\u63a7\u5236\u4ed6\u4eec\uff0c\u5e76\u627f\u8bfa\u5982\u679c\u4ed6\u4eec\u7684\u4efb\u52a1\u6210\u529f\u5b8c\u6210\uff0c\u5c31\u4f1a\u7f29\u77ed\u4ed6\u4eec\u7684\u5211\u671f\u3002\u9664\u4e86\u7c89\u4e1d\u6700\u559c\u6b22\u7684\u54c8\u96f7\u594e\u56e0\uff08\u739b\u683c\u7279\u7f57\u6bd4\uff09\uff0c\u8fd9\u6b21\u7684\u5c0f\u961f\u8fd8\u5305\u62ecBloodsport\uff08\u4f0a\u5fb7\u91cc\u65af\u827e\u5c14\u5df4\uff09\uff0c\u53c8\u540d\u7f57\u4f2f\u7279\u675c\u6ce2\u4f9d\u65af\uff0c\u4e00\u540d\u53d7\u8fc7\u519b\u4e8b\u8bad\u7ec3\u7684\u96c7\u4f63\u5175\uff0c\u56e0\u7528\u6c2a\u77f3\u5b50\u5f39\u5c04\u6740\u8d85\u4eba\u800c\u5165\u72f1\u3002 Gunn \u8bf4\u4ed6\u6839\u636e\u4e0d\u540c\u7684\u7535\u5f71\u7c7b\u578b\u5851\u9020\u4e86\u8bb8\u591a\u5c0f\u961f\u89d2\u8272\uff0c\u800c Bloodsport \u5219\u662f 1960 \u5e74\u4ee3\u52a8\u4f5c\u82f1\u96c4\u53f2\u8482\u592b\u00b7\u9ea6\u594e\u56e0\u7684\u9891\u9053\u3002\u4ed6\u4e0e\u548c\u5e73\u7f14\u9020\u8005\uff08\u7ea6\u7ff0\u00b7\u585e\u7eb3\u9970\uff09\u6709\u4e00\u573a\u4e89\u5435\uff0c\u540e\u8005\u662f\u53e6\u4e00\u4f4d\u88ab\u63cf\u7ed8\u6210\u201c\u611a\u8822\u7684\u3001\u5144\u5f1f\u822c\u7684\u7f8e\u56fd\u961f\u957f\u201d\u7684\u9000\u4f0d\u519b\u4eba\uff0c\u636e\u79f0\u5176\u7075\u611f\u6765\u81ea 1970 \u5e74\u4ee3\u7684\u7535\u89c6\u5267\uff0c\u5982\u795e\u5947\u5973\u4fa0\u3002\u6770\u00b7\u8003\u7279\u5c3c\uff08Jai Courtney\uff09\u91cd\u65b0\u626e\u6f14\u56de\u65cb\u9556\u8239\u957f\u7684\u89d2\u8272\u3002\u8fd8\u6709 Ratcatcher 2\uff0c\u53c8\u540d Cleo Cazo (Daniela Melchior)\uff1b\u79c1\u5211\u9ed1\u5ba2\u8428\u51e1\u7279\uff08\u8fc8\u514b\u5c14\u00b7\u9c81\u514b\uff09\uff1b Nanaue\uff0c\u53c8\u540d\u9ca8\u9c7c\u738b\uff08\u7531 Rooker&#39;s Cliffhanger \u8054\u5408\u4e3b\u6f14\u897f\u5c14\u7ef4\u65af\u7279\u53f2\u6cf0\u9f99\u914d\u97f3\uff09\uff1b\u5e03\u83b1\u514b\u536b\uff08\u76ae\u7279\u00b7\u6234\u7ef4\u68ee\u9970\uff09\uff1b Javelin (Flula Borg), Weasel (Sean Gunn, James \u7684\u5f1f\u5f1f)\uff0c\u62df\u4eba\u5316\u7684\u9ec4\u9f20\u72fc\uff1b\u5916\u661f\u5927\u5c60\u6740\u51f6\u624b\u8499\u52a0\u5c14\uff08Mayling Ng\uff09\uff1b TDK\uff08\u5185\u68ee\u00b7\u83f2\u5229\u5b89\u9970\uff09\uff0c\u4e00\u4e2a\u624b\u81c2\u4e0e\u8eab\u4f53\u5206\u79bb\u7684\u8d85\u4eba\u7c7b\uff1b\u548c\u5706\u70b9\u4eba\uff08\u5927\u536b\u00b7\u8fbe\u65af\u9a6c\u5947\u5b89\uff09\uff0c\u4ed6\u6bd4\u4ed6\u6807\u5fd7\u6027\u7684\u5706\u70b9\u5957\u88c5\u548c\u5927\u5988\u95ee\u9898\u6240\u6697\u793a\u7684\u8981\u81f4\u547d\u5f97\u591a\u3002\u8fd9\u662f\u4e00\u4e2a\u6324\u6ee1\u4e86\u4eba\u7684\u5408\u594f\u6f14\u5458\uff0c\u719f\u6089 The Dirty Dozen \u7684\u4efb\u4f55\u4eba\u90fd\u77e5\u9053\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u6ce8\u5b9a\u4f1a\u6210\u4e3a\u70ae\u7070\u3002\u53e4\u6069\u5728\u4e0a\u6620\u524d\u7684\u91c7\u8bbf\u4e2d\u4e5f\u6697\u793a\u4e86\u5f88\u591a\uff0c\u8868\u8fbe\u4e86\u4ed6\u5f88\u9ad8\u5174\u5de5\u4f5c\u5ba4\u5141\u8bb8\u4ed6\u4ece DC \u6f2b\u753b\u6863\u6848\u4e2d\u6df1\u5165\u6316\u6398\u5e76\u5728\u4ed6\u8ba4\u4e3a\u5408\u9002\u7684\u65f6\u5019\u6740\u6b7b\u89d2\u8272\uff0c\u4ece\u800c\u786e\u4fdd\u8fd9\u90e8\u7535\u5f71\u540d\u526f\u5176\u5b9e\u3002\u5bfc\u6f14\u6beb\u4e0d\u72b9\u8c6b\u5730\u8868\u660e\u4ed6\u613f\u610f\u8fd9\u6837\u505a\u3002\u4efb\u52a1\u5f00\u59cb\u4e8e\u5c0f\u961f\u5728\u79d1\u5c14\u6258\u9a6c\u8033\u4ed6\u6d77\u6ee9\u7684\u707e\u96be\u6027\u90e8\u7f72\uff0c\u8fd9\u8ba9\u4eba\u60f3\u8d77\u62ef\u6551\u5927\u5175\u745e\u6069\u7684\u5f00\u573a\u5e8f\u5217\uff0c\u9664\u4e86\u66f4\u591a\uff08\u975e\u5e38\uff09\u9ed1\u8272\u5e7d\u9ed8\u3002\u6211\u4eec\u53ea\u80fd\u8bf4 Belle Reve \u76d1\u72f1\u5e76\u6ca1\u6709\u771f\u6b63\u53d1\u6325\u51fa\u4ed6\u4eec\u6700\u597d\u7684\u6c34\u5e73\u3002\u5e78\u5b58\u8005\u786e\u5b9e\u8bbe\u6cd5\u91cd\u65b0\u96c6\u7ed3\u5e76\u7ee7\u7eed\u6267\u884c\u4ed6\u4eec\u7684\u4efb\u52a1\uff1a\u6f5c\u5165\u540d\u4e3a Jotunheim \u7684\u6212\u5907\u68ee\u4e25\u7684\u76d1\u72f1\u2014\u2014\u524d\u4e8c\u6218\u7eb3\u7cb9\u636e\u70b9\u2014\u2014\u5e76\u9500\u6bc1\u4e0e\u795e\u79d8\u7684\u201c\u6d77\u661f\u8ba1\u5212\u201d\u76f8\u5173\u7684\u6240\u6709\u8bc1\u636e\u3002\u5c0f\u961f\u5fc5\u987b\u7ed1\u67b6\u75af\u72c2\u79d1\u5b66\u5bb6\u76d6\u4e4c\u65af\u00b7\u683c\u91cc\u592b\u65af\uff0c\u53c8\u540d\u601d\u60f3\u5bb6\uff08\u5f7c\u5f97\u00b7\u5361\u5e15\u5c14\u8fea\uff09\uff0c\u624d\u80fd\u8fdb\u5165\u7ea6\u987f\u6d77\u59c6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5f17\u62c9\u683c\u5728\u7d22\u5c14\u7d22\u91cc\u4e9a\uff08\u7231\u4e3d\u4e1d\u5e03\u62c9\u52a0\u9970\uff09\u4e2d\u627e\u5230\u4e86\u4e00\u4e2a\u610f\u60f3\u4e0d\u5230\u7684\u76df\u53cb\uff0c\u4ed6\u662f\u4e00\u7fa4\u5bfb\u6c42\u91cd\u65b0\u63a7\u5236\u4ed6\u4eec\u56fd\u5bb6\u653f\u5e9c\u7684\u53db\u519b\u7684\u9886\u8896\u3002\u73b0\u4efb\u603b\u7edf\u662f\u897f\u5c14\u7ef4\u5965\u00b7\u5362\u7eb3\u603b\u7edf\uff08\u80e1\u5b89\u00b7\u8fed\u6208\u00b7\u535a\u6258\u9970\uff09\uff0c\u4ed6\u5728\u519b\u4e8b\u653f\u53d8\u540e\u624d\u521a\u521a\u4e0a\u4efb\uff0c\u7531\u9a6c\u7279\u5965\u00b7\u82cf\u4e9a\u96f7\u65af\u5c11\u5c06\uff08\u534e\u91d1\u00b7\u79d1\u897f\u5965\u9970\uff09\u9886\u5bfc\u3002\nGunn \u613f\u610f\u727a\u7272\u89d2\u8272\uff0c\u8fd9\u786e\u4fdd\u4e86\u8fd9\u652f\u5c0f\u961f\u7684\u771f\u6b63\u5229\u5bb3\u5173\u7cfb\uff0c\u867d\u7136\u6709\u4e9b\u4eba\u663e\u7136\u6ce8\u5b9a\u8981\u6b7b\uff0c\u4f46\u7ec4\u5408\u4e2d\u6709\u4e00\u4e9b\u771f\u6b63\u7684\u60ca\u559c\u3002\u4e0e\u666e\u901a\u7684\u8d85\u7ea7\u82f1\u96c4\u7535\u5f71\u76f8\u6bd4\uff0c\u4ec5\u8fd9\u4e00\u70b9\u5c31\u662f\u4e00\u4e2a\u53ef\u559c\u7684\u53d8\u5316\uff0c\u5728\u90a3\u91cc\u82f1\u96c4\u51e0\u4e4e\u603b\u662f\u53d7\u5230\u60c5\u8282\u7684\u4fdd\u62a4\uff08\u5982\u679c\u53ea\u662f\u4e3a\u4e86\u786e\u4fdd\u53ef\u80fd\u7684\u7eed\u96c6\uff09\u3002\u5bfc\u6f14\u8fd8\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u53d1\u5c55\u5e78\u5b58\u7684\u5c0f\u961f\u6210\u5458\u4e4b\u95f4\u7684\u5173\u952e\u5173\u7cfb\uff0c\u8fd9\u4f7f\u5f97\u540e\u6765\u7684\u4e8b\u4ef6\u5728\u5c55\u5f00\u65f6\u66f4\u52a0\u51c4\u7f8e\u3002 Bloodsport \u548c Peacemaker \u7ade\u4e89\u6fc0\u70c8\uff0c\u5e76\u53c2\u4e0e\u4e86\u5927\u91cf\u4ee5\u777e\u4e38\u6fc0\u7d20\u4e3a\u71c3\u6599\u7684\u5355\u4eba\u4f5c\u6218\uff0c\u800c Flag \u548c Peacemaker \u5c3d\u7ba1\u5b58\u5728\u5dee\u5f02\uff0c\u4f46\u6709\u7740\u5171\u540c\u7684\u201c\u5144\u5f1f\u59d0\u59b9\u201d\u5386\u53f2\u3002 Ratcatcher 2 \u548c\u5979\u503c\u5f97\u4fe1\u8d56\u7684\u5ba0\u7269\u9f20 Sebastian \u662f\u8be5\u7ec4\u7ec7\u7684\u6838\u5fc3\uff0c\u4e0e King Shark \u6210\u4e3a\u670b\u53cb\u5e76\u4e0e Bloodsport \u5efa\u7acb\u4e86\u8054\u7cfb\u3002\u5c3d\u7ba1\u540e\u8005\u771f\u7684\u5f88\u8ba8\u538c\u8001\u9f20\uff0c\u4f46\u514b\u83b1\u5965\u76f8\u4fe1\u4ed6\u6709\u4f18\u70b9\uff0c\u56e0\u4e3a\u585e\u5df4\u65af\u8482\u5b89\u771f\u7684\u5f88\u559c\u6b22\u4ed6\u3002 \uff08Taika Waititi \u5728\u95ea\u56de\u4e2d\u5ba2\u4e32\u4e86 Cleo \u5df2\u6545\u7684\u7236\u4eb2\uff0c\u6700\u521d\u7684 Ratcather\u3002\uff09\u81f3\u4e8e Harley Quinn\uff0c\u5979\u5f97\u5230\u4e86\u4e00\u4e2a\u626d\u66f2\u7684\u53d9\u4e8b\u5f27\u7ebf\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u771f\u5b9e\u7684\u7070\u59d1\u5a18\u6545\u4e8b\uff0c\u5f53 Luna \u603b\u7edf\u88ab\u8ff7\u4f4f\u65f6\u2014\u2014\u5982\u679c\u7070\u59d1\u5a18\u662f\u4e00\u4e2a\u75af\u72c2\u7684\u3001\u96be\u4ee5\u9884\u6d4b\u7684\u7cbe\u795e\u75c5\u60a3\u8005.\u8003\u8651\u5230\u54c8\u96f7\u5bf9\u7537\u4eba\u7684\u53ef\u6015\u54c1\u5473\uff0c\u5b83\u7684\u7ed3\u5c40\u548c\u4f60\u9884\u671f\u7684\u4e00\u6837\u597d\u3002\u5c3d\u7ba1\u5979\u7684\u66b4\u529b\u7206\u53d1\uff0c\u731b\u79bd\u5c0f\u961f\u4e3a\u8fd9\u4e2a\u89d2\u8272\u626e\u6f14\u4e86\u67d0\u79cd\u6ce1\u6ce1\u7cd6\u7684\u751c\u871c\u3002\u8fd9\u91cc\u4ecd\u7136\u6709\u4e00\u4e9b\u751c\u871c\uff0c\u4f46\u7f57\u6bd4\u4e5f\u5c55\u793a\u4e86\u5979\u7684\u6027\u683c\u662f\u591a\u4e48\u5371\u9669\uff0c\u7cbe\u795e\u9519\u4e71\uff0c\u5728\u4e00\u89d2\u94b1\u4e0a\u5207\u6362\u60c5\u611f\u9f7f\u8f6e\uff0c\u901a\u8fc7\u4e00\u9635\u5f69\u8272\u82b1\u6735\u548c\u8774\u8776\u6765\u611f\u77e5\u5979\u9020\u6210\u7684\u6240\u6709\u5c60\u6740\u3002 Gunn \u5411 PG-13 Guardians of the Galaxy \u8bc1\u660e\u4e86\u4ed6\u53ef\u4ee5\u51fa\u6f14 B \u7ea7\u548c C \u7ea7\u6f2b\u753b\u4eba\u7269\u7684\u5408\u594f\u6f14\u5458\uff0c\u5e76\u4e14\u4ecd\u7136\u53ef\u4ee5\u5236\u4f5c\u51fa\u5145\u6ee1\u5a31\u4e50\u6027\u3001\u52a8\u611f\u5341\u8db3\u7684\u5927\u7247\uff0c\u5e76\u5e26\u6709\u5927\u91cf\u4e0d\u656c\u7684\u5e7d\u9ed8\u548c\u4e00\u4e1d\u5fc3\u610f\u3002\u4ed6\u7ed9\u300a\u81ea\u6740\u5c0f\u961f\u300b\u5e26\u6765\u4e86\u7c7b\u4f3c\u72e1\u733e\u7684\u81ea\u6211\u610f\u8bc6\u611f\uff0c\u4f46 R \u8bc4\u7ea7\u610f\u5473\u7740\u5bfc\u6f14\u53ef\u4ee5\u5728\u8840\u8165\u6218\u7ebf\u4e0a\u5168\u529b\u4ee5\u8d74\u3002\u8fd9\u4e0d\u662f\u4e00\u90e8\u9002\u5408\u5a07\u6c14\u7684\u7535\u5f71\u3002\u5e7d\u9ed8\u66f4\u9ed1\u6697\uff0c\u5c38\u4f53\u6570\u91cf\u66f4\u9ad8\uff0c\u7ed3\u5c40\u53d8\u5f97\u771f\u6b63\u75af\u72c2\uff0c\u51fa\u73b0\u4e86\u5de8\u5927\u7684\u5916\u661f\u6d77\u661f\uff08\u5f81\u670d\u8005\u65af\u5854\u7f57\uff0c\u6f2b\u753b\u4e2d\u7684\u53e6\u4e00\u4e2a\u6df1\u5ea6\u526a\u8f91\uff09\u3002\u5728 Gunn \u80fd\u5e72\u7684\u624b\u4e2d\uff0c\u8fd9\u4e00\u5207\u90fd\u7ed9\u4e86\u6211\u4eec\u4e00\u7fa4\u6211\u4eec\u90fd\u60f3\u770b\u5230\u7684\u8d85\u7ea7\u6076\u68cd\u53d8\u6210\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u82f1\u96c4\u3002 \u300a\u81ea\u6740\u5c0f\u961f\u300b\u73b0\u5df2\u5728\u5f71\u9662\u4e0a\u6620\uff0c\u5e76\u5728 HBO Max \u4e0a\u64ad\u653e\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u4ec5\u5728\u5df2\u63a5\u79cd\u75ab\u82d7\u7684\u60c5\u51b5\u4e0b\u624d\u5728\u5f71\u9662\u89c2\u770b\u7535\u5f71\u3002 HBO Max \u5df2\u7ecf\u4e0b\u4ee4\u5c06\u300a\u548c\u5e73\u5236\u9020\u8005\u300b\u5206\u62c6\u6210\u7cfb\u5217\uff0c\u585e\u7eb3\u548c\u827e\u5409\u5c06\u91cd\u65b0\u626e\u6f14\u4ed6\u4eec\u7684\u89d2\u8272\uff0c\u5c3d\u7ba1\u53e4\u6069\u8c28\u614e\u5730\u900f\u9732\u5b83\u662f\u5728\u7535\u5f71\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u8bbe\u7f6e\uff0c\u76f4\u5230\u81ea\u6740\u5c0f\u961f\u4e0a\u6620\u4e4b\u540e\u3002\u8be5\u7cfb\u5217\u8ba1\u5212\u4e8e 2022 \u5e74 1 \u6708\u9996\u64ad\u3002", "note_en": "Fan enthusiasm has been high leading up to the premiere of  The Suicide Squad, James &#34;Don&#39;t Call It a Reboot&#34; Gunn&#39;s band-of-misfit-supervillains homage to the classic 1967 film   The Dirty Dozen\u00a0(among many other influences). \u00a0That enthusiasm was not misplaced. This tenth installment in the DCEU is a fast-paced, blood-soaked, wildly irreverent escapade that skillfully balances gore and goofiness, with equal amounts of irreverence and sincerity. Think   The Boys\u00a0pumped up on a steroids.\n  As  I&#39;ve written previously,\u00a0 The Suicide Squad is not a direct sequel to the 2016 film directed by David Ayers. Gunn wanted to take the franchise in a new direction and introduce new characters. But\u00a0Joel Kinnaman and Viola Davis do reprise their 2016 roles as Col. Rick Flag, the squad&#39;s understandably jaded field leader, and Intelligence Officer Amanda Waller, respectively.\u00a0Steve Agee plays John Economos, prison warden and aide to Waller. \u00a0As with the 2016 film, the titular squad is composed entirely of criminal supervillains, led by Flag, under the authority of Waller. Waller plants nanite bombs in their necks to keep them reasonably under control, promising to shorten their sentences if their missions are successfully fulfilled.\n In addition to fan favorite Harley Quinn (Margot Robbie), the squad this time around includes Bloodsport (Idris Elba), aka Robert DuBois, a mercenary with military training who is in prison for shooting Superman with a kryptonite bullet. Gunn has said he modeled many of the squad characters after different film genres, and Bloodsport channels the 1960s action hero Steve McQueen. He has a a bickering rivalry with\u00a0Peacemaker (John Cena), another military veteran portrayed as a &#34;douchey, bro-y Captain America,&#34; purportedly inspired by 1970s TV series like  Wonder Woman.\n Jai Courtney reprises his role as Captain Boomerang. There&#39;s also Ratcatcher 2, aka Cleo Cazo (Daniela Melchior); vigilante hacker Savant (Michael Rooker); Nanaue, aka King Shark (voiced by Rooker&#39;s   Cliffhanger co-star Sylvester Stallone); Blackguard (Pete Davidson); Javelin (Flula Borg),\u00a0Weasel (Sean Gunn, James&#39; kid brother), an anthropomorphic weasel; alien mass murderer\u00a0Mongal (Mayling Ng);\u00a0TDK (Nathan Fillion), a metahuman whose arms detach from his body; and Polka-Dot Man (David Dastmalchian), who is far more deadly than his trademark polka-dot suit and big-time mommy issues would imply.\n    That is a jam-packed ensemble cast, and anyone familiar with  The Dirty Dozen knows that many of them are bound to become cannon fodder. Gunn had hinted as much in pre-release interviews, expressing his delight that the studio gave him permission to draw deep from the DC Comics archives and kill off characters as he saw fit, thereby ensuring the film lives up to its name.\n    The director wastes no time establishing that he&#39;s willing to do just that. The mission kicks off with the squad&#39;s disastrous deployment on a Corto Maltese beach that is reminiscent of the opening sequence in  Saving Private Ryan, except with a lot more (very) dark humor. Let&#39;s just say Belle Reve penitentiary hasn&#39;t really sent their best.\n The survivors do manage to regroup and carry on with their mission: to infiltrate a high-security prison call Jotunheim\u2014a former WW2 Nazi stronghold\u2014and destroy all evidence related to the mysterious &#34;Project Starfish.&#34; The squad must kidnap mad scientist Gaius Grieves, aka The Thinker (Peter Capaldi), to gain access to Jotunheim. Fortunately, Flag finds an unexpected ally in Sol Soria (Alice Braga), leader of a band of rebels seeking to regain control of their country&#39;s government. The current president is President Silvio Luna (Juan Diego Botto), who has only just assumed the role in the wake of a military coup, led by Major General Mateo Suarez (Joaquin Cosio).\n Gunn&#39;s willingness to sacrifice characters ensures that there are very real stakes for this squad, and while some are obviously doomed to die, there&#39;s a few genuine surprises in the mix. That alone is a welcome change from your average superhero movie, where heroes are almost always protected by the plot (if only to ensure a possible sequel).\n    The director is also careful to develop key relationships among the surviving squad members, which makes later events that much more poignant as they unfold. Bloodsport and Peacemaker are highly competitive and engage in a lot of testosterone-fueled one-up-manship, while Flag and Peacemaker have a shared &#34;brothers in arms&#34; history despite their differences. Ratcatcher 2, with her trusty pet rat, Sebastian, serves as the group&#39;s heart, befriending King Shark and forming a bond with Bloodsport. Even though the latter really hates rats, Cleo is confident there is good in him, if only because Sebastian really likes him. (Taika Waititi has a cameo in flashbacks as Cleo&#39;s late father, the original Ratcather.)\n As for Harley Quinn, she gets a twisted narrative arc that includes a literal Cinderella story when President Luna becomes enamored\u2014if Cinderella were a crazed, wildly unpredictable psychopath. It ends about as well as you&#39;d expect, given Harley&#39;s terrible taste in men.\u00a0 Birds of Prey played up a certain bubble-gum sweetness to the character, despite her violent outbreaks. There&#39;s still some of that sweetness here, but Robbie also shows just how dangerously unhinged her character is, switching emotional gears on a dime and perceiving all the carnage she inflicts through a burst of Technicolor flowers and butterflies.\n Gunn proved with the PG-13\u00a0 Guardians of the Galaxy that he could take an ensemble cast of B- and C-list comic book characters and still produce a wildly entertaining, action-packed blockbuster with tons of irreverent humor and a touch of heart. He brings a similar slyly self-aware sensibility to\u00a0 The Suicide Squad, but the R rating meant the director could pull out all the stops on the blood and gore front. This is not a film for the squeamishly inclined. The humor is darker, the body count is higher, and the finale becomes truly bonkers with the appearance of a giant alien starfish ( Starro the Conquerer, another deep cut from the comics). In Gunn&#39;s capable hands, it all comes together to give us the group of supervillains-turned-unexpected-heroes that we all wanted to see.\n The Suicide Squad is now playing in theaters, as well as streaming on HBO Max. We strongly recommend only watching movies in theaters if you are fully vaccinated. HBO Max has already ordered a   Peacemaker spinoff straight-to-series, with Cena and Agee reprising their roles, although Gunn was cagey about revealing whether it would be set before or after the film until after  The Suicide Squad&#39;s release. The series is slated for a January 2022 debut.", "posttime": "2021-08-08 09:02:18", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8a79\u59c6\u65af,james,\u5c0f\u961f", "title": "\u8bc4\u8bba\uff1a\u8a79\u59c6\u65af\u00b7\u53e4\u6069\u7684\u300a\u81ea\u6740\u5c0f\u961f\u300b\u5c31\u50cf\u6253\u7c7b\u56fa\u9187\u7684\u7537\u5b69", "title_en": "Review: James Gunn\u2019s The Suicide Squad is like The Boys on steroids", "transed": 1, "url": "https://arstechnica.com/gaming/2021/08/review-james-gunns-the-suicide-squad-is-like-the-boys-on-steroids/", "via": "", "real_tags": ["\u8a79\u59c6\u65af", "james", "\u5c0f\u961f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072043, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u653e\u5927\u7279\u5b9a\u5217\u8868\u6765\u96c6\u4e2d\u6ce8\u610f\u529b\uff0c\u7136\u540e\u7f29\u5c0f\u4ee5\u67e5\u770b\u66f4\u5e7f\u6cdb\u7684\u4e0a\u4e0b\u6587\u3002\u5927\u591a\u6570\u7b14\u8bb0\u5e94\u7528\u7a0b\u5e8f\u4f18\u5148\u8003\u8651\u6355\u83b7\u4fe1\u606f\u5e76\u5c06\u5176\u7ec4\u7ec7\u5230\u5916\u90e8\u7cfb\u7edf\u4e2d\u3002\u4fe1\u606f\u7ba1\u7406\u662f\u9996\u8981\u5173\u6ce8\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u662f\u6b21\u8981\u7684\u3002 Calculator \u628a\u89e3\u51b3\u95ee\u9898\u653e\u5728\u9996\u4f4d\u3002\u8fd9\u610f\u5473\u7740 Calculist \u53ef\u4ee5\u5e2e\u52a9\u60a8\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ba1\u7406\u4fe1\u606f\u3002 Calculist \u4f7f\u7528\u6700\u5c0f\u3001\u4e0d\u663e\u773c\u7684\u754c\u9762\u4fdd\u6301\u7b80\u5355\uff0c\u8ba9\u60a8\u7684\u601d\u7ef4\u7a7a\u95f4\u4e0d\u53d7\u5e72\u6270\u3002\u529f\u80fd\u5728\u60a8\u9700\u8981\u65f6\u5c31\u5728\u90a3\u91cc\uff0c\u5728\u60a8\u4e0d\u9700\u8981\u65f6\u9690\u85cf\u8d77\u6765\u3002\u5728\u5e55\u540e\uff0cCalculist \u662f\u4e00\u79cd\u4eba\u7c7b\u53ef\u8bfb\u7684\u6807\u8bb0\u8bed\u8a00\uff0cCalculist \u6587\u6863\u662f\u666e\u901a\u7684\u3001\u7248\u672c\u53ef\u63a7\u7684\u3001\u9762\u5411\u672a\u6765\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u3002\u6ca1\u6709\u590d\u6742\u7684\u540e\u7aef\u6570\u636e\u6a21\u578b\u6216\u4e0d\u900f\u660e\u7684\u5143\u6570\u636e\u3002\u53ea\u662f\u7b80\u5355\u3001\u900f\u660e\u7684\u7eaf\u6587\u672c\u3002 Calculist \u5728 MIT \u8bb8\u53ef\u4e0b\u4e5f\u662f\u5f00\u6e90\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u7684\u7b14\u8bb0\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u9501\u5b9a\u5230\u4e13\u6709\u7cfb\u7edf\u4e2d\u3002\u4f60\u7684\u7b14\u8bb0\u662f\u4f60\u7684\u3002", "note_en": "Focus your attention by zooming in to a specific list, and zoom out to see the broader context.\n    Most note-taking apps prioritize capturing and organizing information into an external system. Information management is framed as the primary concern, and problem solving is secondary.\n  Calculist puts problem solving first. That means Calculist helps you  focus on the important things rather than just manage information.\n    Calculist keeps it simple with a minimal, unobtrusive interface that gives your mind space to think,  free of distraction. Features are there when you need them and stay hidden when you don&#39;t.\n    Under the hood, Calculist is a human-readable  markup language, and Calculist documents are ordinary, version-controlable, future-proof  plain text files. No complicated backend data model or opaque metadata. Just simple, transparent plain text.\n  Calculist is also  open-source under the  MIT license, meaning your notes are never locked in to a proprietary system. Your notes are yours.", "posttime": "2021-08-08 08:47:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u51b3\u95ee\u9898,text,calculist", "title": "\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u7eaf\u6587\u672c\u7b14\u8bb0\u7cfb\u7edf", "title_en": "A plain text note-taking system for problem solving", "transed": 1, "url": "https://calculist.io/", "via": "", "real_tags": ["\u89e3\u51b3\u95ee\u9898", "text", "calculist"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u6cd5\u5c06 http \u8bf7\u6c42\u5f80\u8fd4\u4e0a\u6e38\uff1a\u62e8\u6253 tcp4 139.162.17.173:80\uff1ai/o \u8d85\u65f6", "note_en": "Unable to round-trip http request to upstream: dial tcp4 139.162.17.173:80: i/o timeout\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0003\u0004\u0010\u0005\u0002\u0000", "posttime": "2021-08-08 08:47:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u68a6\u60f3,dream,http", "title": "\u5b9e\u73b0\u68a6\u60f3\uff0c\u505a\u51fa\u6539\u53d8\uff0c\u642c\u5230\u76ae\u7279\u51ef\u6069\u5c9b (2018)", "title_en": "Live the Dream, Make the Change, Move to Pitcairn Island (2018)", "transed": 1, "url": "http://www.immigration.gov.pn/immigrate/index.html", "via": "", "real_tags": ["\u68a6\u60f3", "dream", "http"]}, {"category": "", "categoryclass": "", "imagename": "4ee50c744e71a530640b9eddf6c55688.jpg", "infoid": 1072041, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fc4\u7f57\u65af\u96c5\u7f57\u65af\u62c9\u592b\u5c14\u5730\u533a\u2014\u2014\u6211\u7684\u5cb3\u6bcd\u5854\u5b63\u626c\u5a1c\u6b63\u5728\u8c03\u67e5\u5979\u534a\u82f1\u4ea9\u7684\u5929\u5802\u3002\u5b83\u4f4d\u4e8e\u4e00\u6761\u6742\u8349\u4e1b\u751f\u7684\u5c0f\u8def\u7684\u5c3d\u5934\uff0c\u6cbf\u7740\u901a\u5f80\u83ab\u65af\u79d1\u7684\u4e3b\u8981\u9ad8\u901f\u516c\u8def\u7684\u4e00\u6761\u571f\u8def\u51e0\u82f1\u91cc\u3002\u8be5\u7269\u4e1a\u5305\u62ec\u4e00\u4e2a\u6ca1\u6709\u81ea\u6765\u6c34\u7684\u4e09\u5c45\u5ba4\u5c0f\u5c4b\u3001\u4e00\u4e2a\u83dc\u56ed\u548c\u4e00\u4e2a\u79cd\u6709\u7d2b\u4e01\u9999\u3001\u51b7\u6749\u548c\u677e\u6811\u7684\u4fee\u526a\u6574\u9f50\u7684\u8349\u576a\u3002\u5854\u5b63\u626c\u5a1c\u548c\u5979\u5df2\u6545\u7684\u4e08\u592b\u4e8e 1992 \u5e74\uff0c\u4e5f\u5c31\u662f\u82cf\u8054\u89e3\u4f53\u540e\u7684\u7b2c\u4e8c\u5e74\u5efa\u9020\u4e86\u522b\u5885\u6216\u907f\u6691\u522b\u5885\u3002\u5979\u8bb0\u5f97\u4ed6\u4eec\u4e58\u5750\u4e00\u8f86\u5361\u8f66\uff0c\u628a\u4ed6\u4eec\u7684\u5bb6\u5177\u653e\u5728\u4e86\u88ab\u5c0f\u9ea6\u548c\u71d5\u9ea6\u7530\u5305\u56f4\u7684\u4e24\u5c42\u697c\u5c0f\u623f\u5b50\u524d\u3002\u4e00\u5f00\u59cb\uff0c\u522b\u5885\u751a\u81f3\u6ca1\u6709\u6743\u529b\u3002 \u201c\u6211\u4eec\u5728\u6ca1\u6709\u7535\u7684\u60c5\u51b5\u4e0b\u751f\u6d3b\u5f97\u5f88\u597d\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u6211\u4eec\u4e00\u6574\u5929\u90fd\u5f88\u5fd9\uff0c\u5728\u6811\u6797\u91cc\u6563\u6b65\u63a2\u7d22\u3002\u665a\u4e0a\uff0c\u6211\u4eec\u4f1a\u5750\u5728\u7164\u6cb9\u706f\u65c1\u73a9\u5927\u5bcc\u7fc1\u3002\u201d\u5728\u4fc4\u7f57\u65af\u4eba\u7684\u60f3\u8c61\u4e2d\uff0c\u522b\u5885\u5360\u636e\u4e86\u8fd1\u4e4e\u795e\u8bdd\u822c\u7684\u5730\u4f4d\u3002\u66fe\u7ecf\u662f\u6709\u5730\u8d35\u65cf\u7684\u4fdd\u62a4\u533a\uff0c\u907f\u6691\u522b\u5885\u5728 19 \u4e16\u7eaa\u540e\u671f\u53d7\u5230\u57ce\u5e02\u4e13\u4e1a\u4eba\u58eb\u7684\u6b22\u8fce\u3002\u5728\u82cf\u8054\u65f6\u4ee3\uff0c\u4ece\u4f5c\u5bb6\u5230\u5de5\u5382\u5de5\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u522b\u5885\u3002\u5982\u4eca\uff0c\u522b\u5885\u53ef\u4ee5\u662f\u4efb\u4f55\u4e1c\u897f\uff0c\u4ece\u4e24\u5ba4\u5c0f\u5c4b\u5230\u5be1\u5934\u4eff\u5236\u7684\u6cd5\u56fd\u57ce\u5821\u3002\u6bcf\u5e74\u590f\u5929\uff0c\u4fc4\u7f57\u65af\u7684\u57ce\u5e02\u90fd\u7a7a\u8361\u8361\u7684\uff0c\u6570\u767e\u4e07\u4eba\u9003\u79bb\u95f7\u70ed\u3001\u72ed\u7a84\u7684\u516c\u5bd3\uff0c\u91cd\u65b0\u4e0e\u4ed6\u4eec\u5728\u4e61\u6751\u7684\u6839\u8054\u7cfb\u8d77\u6765\u3002\u83ab\u65af\u79d1\u4eba\u5854\u5b63\u626c\u5a1c\u6700\u521d\u88ab\u522b\u5885\u5438\u5f15\u662f\u56e0\u4e3a\u9644\u8fd1\u7684\u68ee\u6797\u76db\u4ea7\u6d46\u679c\u548c\u8611\u83c7\u3002\u540e\u6765\u5979\u624d\u5f00\u59cb\u4ece\u4e8b\u56ed\u827a\u5de5\u4f5c\u3002\u73b0\u5728\uff0c\u5854\u5b63\u626c\u5a1c\u548c\u5979\u7684\u4e08\u592b\u4e9a\u5386\u5c71\u5927\u5728\u8fd9\u5904\u623f\u4ea7\u5ea6\u8fc7\u4e86\u4ed6\u4eec\u7684\u590f\u5b63\u5468\u672b\uff0c\u5c3d\u7ba1 80 \u82f1\u91cc\u7684\u8f66\u7a0b\u53ef\u80fd\u9700\u8981\u957f\u8fbe\u56db\u4e2a\u5c0f\u65f6\u7684\u522b\u5885\u4ea4\u901a\u3002\u5979\u7ecf\u5e38\u60f3\u5230\u5356\u6389\u8fd9\u4e2a\u5730\u65b9\u3002 \u201c\u4f46\u6211\u5c31\u662f\u505a\u4e0d\u5230\uff0c\u56e0\u4e3a\u6211\u603b\u662f\u5728\u6625\u5929\u56de\u6765\uff0c\u60f3\u5728\u8fd9\u91cc\u505a\u5f88\u591a\u4e8b\u60c5\u5e76\u8fdb\u5165\u6811\u6797\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6211\u4e0d\u80fd\u5356\u6389\u5b83\uff0c\u5373\u4f7f\u5b83\u6d88\u8017\u4e86\u4f60\u592a\u591a\u7684\u4f53\u529b\u3002\u201d\n\u522b\u5885\u751f\u6d3b\u7684\u4e0d\u4fbf\u2014\u2014\u5916\u5c4b\u3001\u624b\u673a\u4fe1\u53f7\u4e0d\u7545\u548c\u53bb\u4e95\u91cc\u2014\u2014\u8fdc\u4e0d\u53ca\u5b83\u7684\u6cbb\u7597\u6548\u679c\u3002 \u201c\u5728\u8fd9\u91cc\uff0c\u90a3\u4e9b\u57ce\u5e02\u95ee\u9898\u5c31\u6d88\u5931\u4e86\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u91ce\u6027\u8ba9\u4f60\u5934\u8111\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e0d\u5fc5\u8981\u7684\u4e1c\u897f\u3002\u201d\u5728\u522b\u5885\u91cc\u603b\u6709\u4e00\u4e9b\u4e8b\u60c5\u53ef\u4ee5\u505a\uff0c\u800c\u538b\u529b\u5927\u7684\u57ce\u5e02\u5c45\u6c11\u6e34\u671b\u7684\u6b63\u662f\u8fd9\u79cd\u751f\u5b58\u6027\u7684\u4f53\u80b2\u6d3b\u52a8\u3002\u5728\u9644\u8fd1\u7684\u6751\u5e84\u91cc\uff0c\u5b89\u5fb7\u70c8\u00b7\u5e93\u5179\u6d85\u4f50\u592b\u5728\u6b63\u5348\u7684\u9633\u5149\u4e0b\u5927\u6c57\u6dcb\u6f13\uff0c\u4ed6\u5728\u7236\u6bcd\u53e4\u96c5\u7684\u623f\u5b50\u5916\u9762\u5806\u8d77\u4e86\u67f4\u706b\uff0c\u623f\u5b50\u7684\u7a97\u6237\u5468\u56f4\u6709\u590d\u6742\u7684\u6728\u5236\u54c1\u3002\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5b89\u5fb7\u70c8\u5931\u53bb\u4e86\u5728\u83ab\u65af\u79d1\u62c5\u4efb\u7ecf\u7406\u7684\u5de5\u4f5c\uff0c\u73b0\u5728\u6709\u65f6\u95f4\u4fee\u7406\u4ed6\u66fe\u7956\u7236\u4e00\u4e2a\u4e16\u7eaa\u524d\u5efa\u9020\u7684\u623f\u5b50\u3002\u5bb6\u5ead\u5b85\u57fa\u5730\u62e5\u6709\u4e00\u4e2a\u83dc\u56ed\u3001\u9e21\u548c\u4e94\u53ea\u5c71\u7f8a\u3002 \u201c\u5f53\u4f60\u4e60\u60ef\u4e86\u4e61\u6751\u751f\u6d3b\u65f6\uff0c\u5b83\u662f\u6d6a\u6f2b\u7684\uff0c\u201d\u5b89\u5fb7\u70c8\u8bf4\u3002 \u201c\u8fd9\u610f\u5473\u7740 80% \u7684\u5de5\u4f5c\u548c 20% \u7684\u6d6a\u6f2b\u751f\u6d3b\u3002\u4e0d\u5de5\u4f5c\uff0c\u4e0d\u73a9\u800d\u3002\u201d \u201c\u8fd9\u662f\u8fdc\u79bb\u57ce\u5e02\u3001\u55a7\u56a3\u3001\u4eba\u7fa4\u548c\u9a9a\u52a8\u7684\u771f\u6b63\u5047\u671f\u3002\u5f53\u4f60\u5728\u82b1\u56ed\u91cc\u5de5\u4f5c\u6216\u4e0e\u52a8\u7269\u4e00\u8d77\u5de5\u4f5c\u65f6\uff0c\u4f60\u5c31\u4f11\u606f\u4e86\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u6211\u65e0\u6cd5\u60f3\u8c61\u6ca1\u6709\u8fd9\u4e2a\u5730\u65b9\u6211\u7684\u751f\u6d3b\u3002\u201d\u6211\u5cb3\u6bcd\u7684\u4e00\u4f4d\u90bb\u5c45 Vladimir Beresnev \u975e\u5e38\u559c\u6b22\u4ed6\u7684\u522b\u5885\uff0c\u56e0\u6b64\u4ed6\u5b89\u88c5\u4e86\u7ba1\u9053\u548c\u4e2d\u592e\u4f9b\u6696\u7cfb\u7edf\uff0c\u4ee5\u4f7f\u5176\u5728\u51ac\u5929\u4e5f\u5f88\u8212\u9002\u3002\u4f46\u8fd9\u4f4d\u9000\u4f11\u7684\u624b\u98ce\u7434\u624b\u8bf4\uff0c\u4ed6\u7684\u4e24\u4e2a\u513f\u5b50\u5f88\u5c11\u53bb\u770b\u671b\u4ed6\u3002\n\u201c\u6211\u7684\u5c0f\u513f\u5b50\u8bf4\uff1a\u2018\u6211\u5df2\u7ecf\u4e94\u5e74\u6ca1\u6709\u56de\u6765\u4e86\uff0c\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u56de\u6765\u4e86\uff0c\u2019\u201d\u5f17\u62c9\u57fa\u7c73\u5c14\u8bf4\u3002 \u201c\u522b\u5885\u5e76\u4e0d\u9002\u5408\u6240\u6709\u4eba\u3002\u201d 1986 \u5e74\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u6210\u4e3a\u7b2c\u4e00\u4e2a\u4ece\u66fe\u7ecf\u62e5\u6709\u571f\u5730\u7684\u56fd\u8425\u519c\u573a\u8d2d\u4e70\u571f\u5730\u7684\u83ab\u65af\u79d1\u4eba\u3002\u9010\u6e10\u51fa\u73b0\u4e86\u5c0f\u5c4b\uff0c\u519c\u7530\u88ab\u79c1\u6709\u5316\uff0c\u522b\u5885\u4e3b\u4eba\u5f00\u59cb\u53d6\u4ee3\u5c0f\u6751\u5e84\u7684\u5c45\u6c11\u3002\u73b0\u5728\u53ea\u5269\u4e0b\u4e00\u4e2a\u6751\u6c11\u4e86\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u8bf4\uff0c\u4ed6\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u83ab\u65af\u79d1\u5ea6\u8fc7\u3002\u52a0\u6797\u5a1c\u00b7\u535a\u4e9a\u91cc\u8bfa\u5a03 (Galina Boyarinova) \u62e5\u6709\u4e0e\u5854\u5b63\u626c\u5a1c (Tatyana) \u76f8\u90bb\u7684\u623f\u4ea7\uff0c\u6bcf\u5468\u5728\u83ab\u65af\u79d1\u62c5\u4efb\u4f1a\u8ba1\u5e08\u3002\u5979\u8bf4\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5e74\u8f7b\u7684\u6bcd\u4eb2\uff0c\u5979\u7761\u5728\u5e8a\u8fb9\u7684\u65a7\u5934\u4e0a\uff0c\u5c3d\u7ba1\u5979\u6700\u7ec8\u9762\u4e34\u7684\u552f\u4e00\u5371\u9669\u662f\u4e00\u53ea\u6124\u6012\u7684\u516c\u5c71\u7f8a\u548c\u4e00\u4e9b\u6b63\u5728\u5bfb\u627e\u6708\u5149\u7684\u9189\u9152\u7267\u7f8a\u4eba\u3002\u5979\u7684\u5973\u513f\u5ac1\u7ed9\u4e86\u4e00\u4e2a\u5f53\u5730\u7537\u4eba\uff0c\u4ed6\u4eec\u5728\u6751\u91cc\u4e00\u5e74\u4e00\u5ea6\u7684\u6691\u5047\u4e3e\u884c\u4e86\u5a5a\u793c\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u62c9\u7740\u4ed6\u7684\u624b\u98ce\u7434\u3002 \u201c\u6211\u4eec\u8fc7\u53bb\u5e38\u5e38\u5728\u6811\u4e0b\u4e3a\u5047\u671f\u5b89\u6392\u9910\u684c\uff0c\u201d\u52a0\u6797\u5a1c\u7ad9\u5728\u5979\u522b\u5885\u7684\u95e8\u53e3\u8bf4\u3002\u4f46\u662f\u73b0\u5728\u6ca1\u6709\u4eba\u6765\u5e86\u795d\u8fd9\u4e2a\u8282\u65e5\u4e86\u3002\u51e0\u82f1\u91cc\u5916\u7684\u5c0f\u6728\u5c4b\u91cc\u7684\u4e61\u6751\u5546\u5e97\u4e5f\u4e0d\u89c1\u4e86\u3002\u6bcf\u5468\u4e24\u6b21\uff0cavtolavka - \u4e00\u5bb6\u6709\u8f6e\u5b50\u7684\u5546\u5e97 - \u8def\u8fc7\u3002 Galina \u8bb0\u5f97\u6751\u91cc\u7684 babushkas \u5982\u4f55\u4e3a\u8fd9\u4e2a\u573a\u5408\u7a7f\u4e0a\u4e1d\u7ef8\u8fde\u8863\u88d9\uff0c\u5e76\u5728\u4e00\u6839\u5927\u6728\u5934\u4e0a\u7b49\u5f85\u98df\u7269\u5361\u8f66\u3002\u4ed6\u4eec\u80cc\u8bf5\u201cHubba Bubba\u201d\u548c\u201c\u58eb\u529b\u67b6\u201d\u7b49\u5916\u8bed\uff0c\u4e3a\u5b59\u5b50\u5b59\u5973\u4e70\u96f6\u98df\u3002\n\u201c\u6211\u4eec\u7684\u5b69\u5b50\u8868\u6f14\u8282\u76ee\uff0c\u201d\u52a0\u6797\u5a1c\u8bf4\u3002 \u201c\u4ed6\u4eec\u4f1a\u5728\u79cb\u5343\u4e0a\u6302\u4e0a\u7a97\u5e18\uff0c\u821e\u53f0\u5c31\u5728\u8fd9\u91cc\u3002\u4ed6\u4eec\u81ea\u5df1\u5236\u4f5c\u670d\u88c5\uff0c\u5e76\u5411\u6751\u91cc\u6240\u6709\u7684\u5934\u5dfe\u5206\u53d1\u95e8\u7968\u3002\u201d\u4f46\u73b0\u5728\u65b0\u4e00\u4ee3\u4eba\u53c8\u56de\u5230\u4e86\u52a0\u6797\u5a1c\u524d\u95e8\u7684\u5431\u5431\u4f5c\u54cd\u7684\u79cb\u5343\u4e0a\u3002\u6211\u7684\u59bb\u5b50 Svetlana \u548c\u6211\u4eec 15 \u4e2a\u6708\u5927\u7684\u7537\u5b69 Leo \u5750\u5728\u5979\u5c0f\u65f6\u5019\u73a9\u7684\u540c\u4e00\u4e2a\u79cb\u5343\u4e0a\u3002\u52a0\u6797\u5a1c\u548c\u5979\u7684\u4e08\u592b\u60f3\u5728\u8fd9\u91cc\u9000\u4f11\u3002\u4e5f\u8bb8\u6709\u4e00\u5929\u5979\u4f1a\u544a\u8bc9 Leo \u4ed6\u5e26\u7740\u81ea\u5df1\u7684\u5b69\u5b50\u6765\u7b2c\u4e00\u6b21\u62dc\u8bbf\u5bb6\u5ead\u522b\u5885\u3002", "note_en": "YAROSLAVL REGION, Russia \u2014 My mother-in-law, Tatyana, surveys her half acre of paradise. It&#39;s located at the end of an overgrown path, a few miles down a dirt road off the main highway to Moscow. The property consists of a three-room cottage with no running water, a vegetable garden and a trim lawn bordered by lilacs, firs and pines.\n  Tatyana and her late husband built the dacha, or summer house, in 1992, the year after the Soviet Union collapsed. She remembers arriving in a truck that dropped off their furniture in front of the little two-story house surrounded by wheat and oat fields. In the beginning, the dacha didn&#39;t even have power.\n  &#34;We lived very well without electricity,&#34; Tatyana says. &#34;All day we were busy, walking in the woods exploring. And in the evenings, we would sit around a kerosene lamp and play Monopoly.&#34;\n     In the Russian imagination, the dacha occupies a near mythical place. Once the reserve of the landed nobility, the summer house gained popularity with urban professionals in the late 19th century; in the Soviet era the dacha became available to everyone, from writers to factory workers.\n    Nowadays, a dacha can be anything from a two-room shack to an oligarch&#39;s imitation French chateau. Every summer, Russian cities empty out as millions of people escape stuffy, cramped apartments to reconnect with their roots in the countryside.\n  Tatyana, a Muscovite, was initially drawn to the dacha because of the nearby forests with their bounties of berries and mushrooms. Only later did she take up gardening. Now, Tatyana and her husband Alexander  spend their summer weekends on the property, even though the 80-mile drive can take up to four hours with dacha traffic. She has often thought of selling the place.\n  &#34;But I just can&#39;t, because I always come back in the spring and want to do so much here and go into the woods,&#34; Tatyana says. &#34;For some reason I can&#39;t sell it, even though it takes so much out of you physically.&#34;\n    The inconveniences of dacha life \u2014 the outhouse, the spotty cellphone coverage and the trips to the well \u2014 are far outweighed by its therapeutic effects.\n  &#34;Here those city problems just disappear,&#34; says Tatyana. &#34;The wildness clears your mind of everything that&#39;s unnecessary.&#34;\n  There&#39;s always something to do at the dacha, and it&#39;s that existential, physical activity that stressed-out city dwellers crave.\n  In the nearby village, Andrei Kuznetsov is sweating in the midday sun as he piles up firewood outside his parents&#39; quaint house, which has intricate woodwork around the windows. During the pandemic, Andrei lost his job as a manager in Moscow and now has the time to fix up the house that his great-grandfather built a century ago. The family homestead boasts a vegetable garden, chickens and five goats.\n  &#34;Country living is romantic when you get used to it,&#34; Andrei says. &#34;That means 80% work and 20% romantic life. No work, no play.&#34;\n      &#34;This is a real vacation from the city, the noise, the people and the commotion. When you work in the garden or with the animals, you rest,&#34; she says. &#34;I can&#39;t imagine my life without this place.&#34;\n     One of my mother-in-law&#39;s neighbors, Vladimir Beresnev, loves his dacha so much that he installed plumbing and central heating to make it comfortable in the winter as well. But the retired accordion player says his two sons rarely visit.\n  &#34;My younger one said: &#39;I haven&#39;t been back for five years and won&#39;t be for another five,&#39;&#34; says Vladimir. &#34;The dacha isn&#39;t for everyone.&#34;\n  In 1986, Vladimir became the first Muscovite to buy a plot from the state-run farm that once owned the land here. Gradually cottages sprang up, the farmland was privatized and dacha owners started replacing the inhabitants of the hamlet. Now there is only one villager left, Vladimir says, and he spends most of his time in Moscow.\n    Galina Boyarinova, who owns the adjoining property to Tatyana&#39;s, works during the week as an accountant in Moscow.\n    As a young mother, she says, she slept with an ax next to her bed, even though the only dangers she ended up facing were an angry billy goat and some drunken shepherds looking for moonshine.\n  Her daughter married a local man, and they held their wedding on the village&#39;s annual summer holiday, with Vladimir playing his accordion.\n    &#34;We used to set up tables for the holiday right here under the trees,&#34; says Galina, standing at the gate to her dacha. But now there is nobody left to celebrate the holiday.\n  Also gone is the country store in a log cabin a few miles down the road. Twice a week, the  avtolavka \u2014 a shop on wheels \u2014 came trundling by. Galina remembers how the village   babushkas put on silk dresses for the occasion and waited for the food truck on a big log. They memorized foreign words like &#34;Hubba Bubba&#34; and &#34;Snickers&#34; to buy treats for their grandchildren.\n      &#34;Our kids put on shows,&#34; Galina says. &#34;They would hang up curtains on the swings, and the stage was right here. They made their own costumes and handed out tickets to all the babushkas in the village.&#34;\n    But now a new generation is returning to the creaky swing set at Galina&#39;s front gate. My wife Svetlana sits with our 15-month-old boy, Leo, on the same swings where she played as a girl.\n  Galina and her husband want to retire here. Maybe one day she will tell Leo about his first visit to the family dacha when he comes with his own child.", "posttime": "2021-08-08 08:45:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,russia,\u522b\u5885", "title": "Dacha \u662f\u4fc4\u7f57\u65af\u57ce\u5e02\u751f\u6d3b\u7684\u590f\u5b63\u89e3\u836f", "title_en": "The Dacha Is Russia's Summer Cure for Urban Life", "transed": 1, "url": "https://www.npr.org/2021/08/06/1020691361/the-dacha-is-russias-summer-cure-for-urban-life", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "russia", "\u522b\u5885"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072040, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\u662f\u65f6\u5019\u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684\u5b8f\u4e86\u3002\u4e0a\u4e00\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6807\u51c6\u5b8f\u6697\u793a\u4e86\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b8f\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u8fd9\u53ea\u662f\u5f00\u59cb\u3002 Common Lisp \u4e0d\u652f\u6301\u5b8f\uff0c\u56e0\u6b64\u6bcf\u4e2a Lisp \u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u6807\u51c6\u63a7\u5236\u7ed3\u6784\u53d8\u4f53\uff0c\u5c31\u50cf C \u652f\u6301\u51fd\u6570\u4e00\u6837\uff0c\u56e0\u6b64\u6bcf\u4e2a C \u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u7f16\u5199 C \u6807\u51c6\u5e93\u4e2d\u51fd\u6570\u7684\u7410\u788e\u53d8\u4f53\u3002\u5b8f\u662f\u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u5141\u8bb8\u60a8\u5728\u6838\u5fc3\u8bed\u8a00\u548c\u6807\u51c6\u5e93\u4e4b\u4e0a\u521b\u5efa\u62bd\u8c61\uff0c\u4f7f\u60a8\u66f4\u63a5\u8fd1\u80fd\u591f\u76f4\u63a5\u8868\u8fbe\u60a8\u60f3\u8981\u8868\u8fbe\u7684\u4e1c\u897f\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6b63\u786e\u7406\u89e3\u5b8f\u7684\u6700\u5927\u969c\u788d\u4e5f\u8bb8\u662f\u5b83\u4eec\u5f88\u597d\u5730\u96c6\u6210\u5230\u8bed\u8a00\u4e2d\u3002\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u53ea\u662f\u4e00\u79cd\u6709\u8da3\u7684\u51fd\u6570\u2014\u2014\u5b83\u4eec\u662f\u7528 Lisp \u91cd\u5199\u7684\uff0c\u5b83\u4eec\u63a5\u53d7\u53c2\u6570\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u5e76\u4e14\u5b83\u4eec\u5141\u8bb8\u60a8\u62bd\u8c61\u6389\u5206\u6563\u6ce8\u610f\u529b\u7684\u7ec6\u8282\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6709\u8fd9\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u5b8f\u5728\u4e0e\u51fd\u6570\u4e0d\u540c\u7684\u5c42\u6b21\u4e0a\u8fd0\u884c\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u62bd\u8c61\u3002\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5b8f\u548c\u51fd\u6570\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u5b8f\u5728\u8bed\u8a00\u4e2d\u7684\u7d27\u5bc6\u96c6\u6210\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u597d\u5904\u3002\u4f46\u540c\u65f6\uff0c\u5b83\u4e5f\u662f newLispers \u7ecf\u5e38\u6df7\u6dc6\u7684\u6765\u6e90\u3002\u4e0b\u9762\u7684\u6545\u4e8b\u867d\u7136\u5728\u5386\u53f2\u6216\u6280\u672f\u610f\u4e49\u4e0a\u5e76\u4e0d\u771f\u5b9e\uff0c\u4f46\u8bd5\u56fe\u901a\u8fc7\u8ba9\u60a8\u601d\u8003\u5b8f\u5982\u4f55\u5de5\u4f5c\u6765\u51cf\u8f7b\u6df7\u6dc6\u3002\u4ece\u524d\uff0c\u5f88\u4e45\u4ee5\u524d\uff0c\u6709\u4e00\u4e2a Lisp \u7a0b\u5e8f\u5458\u516c\u53f8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f88\u4e45\u4ee5\u524d Lisp \u6ca1\u6709\u5b8f\u3002\u4efb\u4f55\u4e0d\u80fd\u7528\u51fd\u6570\u5b9a\u4e49\u6216\u7528\u7279\u6b8a\u8fd0\u7b97\u7b26\u5b8c\u6210\u7684\u4e1c\u897f\uff0c\u6bcf\u6b21\u90fd\u5fc5\u987b\u5b8c\u6574\u5730\u7f16\u5199\uff0c\u8fd9\u76f8\u5f53\u62d6\u7d2f\u3002\u53ef\u60dc\u7684\u662f\uff0c\u8fd9\u5bb6\u516c\u53f8\u7684\u7a0b\u5e8f\u5458\u867d\u7136\u5f88\u806a\u660e\uff0c\u4f46\u4e5f\u5f88\u61d2\u60f0\u3002\u901a\u5e38\u5728\u4ed6\u4eec\u7684\u7a0b\u5e8f\u4e2d\u95f4\u2014\u2014\u5f53\u7f16\u5199\u4e00\u5806\u4ee3\u7801\u53d8\u5f97\u8fc7\u4e8e\u4e4f\u5473\u65f6\u2014\u2014\u4ed6\u4eec\u4f1a\u5199\u4e00\u4e2a\u6ce8\u91ca\u6765\u63cf\u8ff0\u4ed6\u4eec\u9700\u8981\u5728\u7a0b\u5e8f\u4e2d\u7684\u90a3\u4e2a\u5730\u65b9\u7f16\u5199\u7684\u4ee3\u7801\u3002\u66f4\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u61d2\u60f0\uff0c\u7a0b\u5e8f\u5458\u4eec\u4e5f\u8ba8\u538c\u56de\u53bb\u5b9e\u9645\u7f16\u5199\u6ce8\u91ca\u63cf\u8ff0\u7684\u4ee3\u7801\u3002\u5f88\u5feb\uff0c\u516c\u53f8\u5c31\u6709\u4e86\u4e00\u5927\u5806\u6ca1\u4eba\u80fd\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5145\u6ee1\u4e86\u5173\u4e8e\u4ecd\u7136\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801\u7684\u6ce8\u91ca\u3002\u65e0\u5948\u4e4b\u4e0b\uff0c\u5927\u8001\u677f\u8058\u8bf7\u4e86\u4e00\u540d\u521d\u7ea7\u7a0b\u5e8f\u5458Mac\uff0c\u4ed6\u7684\u5de5\u4f5c\u662f\u627e\u5230\u7b14\u8bb0\uff0c\u7f16\u5199\u6240\u9700\u7684\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u7a0b\u5e8f\u4e2d\u4ee3\u66ff\u7b14\u8bb0\u3002 Mac \u4ece\u6765\u6ca1\u6709\u8fd0\u884c\u8fc7\u8fd9\u4e9b\u7a0b\u5e8f\u2014\u2014\u5f53\u7136\uff0c\u5b83\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u6240\u4ee5\u4ed6\u4e0d\u80fd\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5b83\u4eec\u5df2\u7ecf\u5b8c\u6210\uff0cMac \u4e5f\u4e0d\u77e5\u9053\u8981\u4e3a\u5b83\u4eec\u63d0\u4f9b\u54ea\u4e9b\u8f93\u5165\u3002\u6240\u4ee5\u4ed6\u53ea\u662f\u6839\u636e\u7b14\u8bb0\u7684\u5185\u5bb9\u5199\u4e86\u4ed6\u7684\u4ee3\u7801\uff0c\u7136\u540e\u628a\u5b83\u53d1\u56de\u7ed9\u539f\u6765\u7684\u7a0b\u5e8f\u5458\u3002\u5728 Mac \u7684\u5e2e\u52a9\u4e0b\uff0c\u6240\u6709\u7a0b\u5e8f\u5f88\u5feb\u5c31\u5b8c\u6210\u4e86\uff0c\u516c\u53f8\u901a\u8fc7\u51fa\u552e\u8fd9\u4e9b\u7a0b\u5e8f\u8d5a\u4e86\u4e00\u5927\u7b14\u94b1\u2014\u2014\u8fd9\u4e48\u591a\u94b1\uff0c\u516c\u53f8\u53ef\u4ee5\u5c06\u5176\u7f16\u7a0b\u4eba\u5458\u7684\u4eba\u6570\u589e\u52a0\u4e00\u500d\u3002\u4f46\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6ca1\u6709\u4eba\u60f3\u5230\u8058\u8bf7\u4efb\u4f55\u4eba\u6765\u5e2e\u52a9 Mac\uff1b\u5f88\u5feb\uff0c\u4ed6\u5c31\u5355\u67aa\u5339\u9a6c\u5730\u534f\u52a9\u4e86\u51e0\u5341\u540d\u7a0b\u5e8f\u5458\u3002\u4e3a\u4e86\u907f\u514d\u82b1\u8d39\u6240\u6709\u65f6\u95f4\u5728\u6e90\u4ee3\u7801\u4e2d\u641c\u7d22\u6ce8\u91ca\uff0cMac \u5bf9\u7a0b\u5e8f\u5458\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u8fdb\u884c\u4e86\u5c0f\u5e45\u4fee\u6539\u3002\u6b64\u540e\uff0c\u6bcf\u5f53\u7f16\u8bd1\u5668\u9047\u5230\u6ce8\u91ca\u65f6\uff0c\u5b83\u90fd\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5c06\u6ce8\u91ca\u53d1\u9001\u7ed9\u4ed6\uff0c\u5e76\u7b49\u5f85\u4ed6\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u66ff\u6362\u4ee3\u7801\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5373\u4f7f\u6709\u4e86\u8fd9\u79cd\u53d8\u5316\uff0cMac \u4e5f\u5f88\u96be\u8ddf\u4e0a\u7a0b\u5e8f\u5458\u7684\u6b65\u4f10\u3002\u4ed6\u5c3d\u53ef\u80fd\u5c0f\u5fc3\u5730\u5de5\u4f5c\uff0c\u4f46\u6709\u65f6\u2014\u2014\u5c24\u5176\u662f\u5f53\u7b14\u8bb0\u4e0d\u6e05\u695a\u65f6\u2014\u2014\u4ed6\u4f1a\u72af\u9519\u8bef\u3002\u7136\u800c\uff0c\u7a0b\u5e8f\u5458\u6ce8\u610f\u5230\uff0c\u4ed6\u4eec\u5199\u7684\u7b14\u8bb0\u8d8a\u7cbe\u786e\uff0cMac \u53d1\u56de\u6b63\u786e\u4ee3\u7801\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002\u6709\u4e00\u5929\uff0c\u4e00\u4f4d\u7a0b\u5e8f\u5458\u5f88\u96be\u7528\u6587\u5b57\u63cf\u8ff0\u4ed6\u60f3\u8981\u7684\u4ee3\u7801\uff0c\u5728\u4ed6\u7684\u4e00\u4e2a\u7b14\u8bb0\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a Lisp \u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u4ed6\u60f3\u8981\u7684\u4ee3\u7801\u3002 Mac \u6ca1\u95ee\u9898\uff1b\u4ed6\u53ea\u662f\u8fd0\u884c\u7a0b\u5e8f\u5e76\u5c06\u7ed3\u679c\u53d1\u9001\u7ed9\u7f16\u8bd1\u5668\u3002\n\u4e0b\u4e00\u4e2a\u521b\u65b0\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u5458\u5728\u4ed6\u7684\u4e00\u4e2a\u5305\u542b\u51fd\u6570\u5b9a\u4e49\u548c\u6ce8\u91ca\u7684\u7a0b\u5e8f\u7684\u9876\u90e8\u653e\u4e86\u4e00\u6761\u6ce8\u91ca\uff0c\u4e0a\u9762\u5199\u7740\uff1a\u201cMac\uff0c\u4e0d\u8981\u5728\u8fd9\u91cc\u5199\u4efb\u4f55\u4ee3\u7801\uff0c\u4f46\u4fdd\u7559\u6b64\u51fd\u6570\u4ee5\u5907\u540e\u7528\uff1b\u6211\u5c06\u4f7f\u7528\u5b83\u5728\u6211\u7684\u5176\u4ed6\u4e00\u4e9b\u7b14\u8bb0\u4e2d\u3002\u201d\u540c\u4e00\u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6\u6ce8\u91ca\u8bf4\u8bf8\u5982\u201cMac\uff0c\u7528\u7b26\u53f7 x \u548c y \u4f5c\u4e3a\u53c2\u6570\u8fd0\u884c\u5176\u4ed6\u51fd\u6570\u7684\u7ed3\u679c\u66ff\u6362 thisnote\u201d\u3002\u8fd9\u79cd\u6280\u672f\u5f88\u5feb\u6d41\u884c\u8d77\u6765\uff0c\u4ee5\u81f3\u4e8e\u5728\u51e0\u5929\u4e4b\u5185\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u5305\u542b\u4e86\u51e0\u5341\u4e2a\u5b9a\u4e49\u51fd\u6570\u7684\u6ce8\u91ca\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u53ea\u80fd\u7531\u5176\u4ed6\u6ce8\u91ca\u4e2d\u7684\u4ee3\u7801\u4f7f\u7528\u3002\u4e3a\u4e86\u8ba9 Mac \u80fd\u591f\u8f7b\u677e\u6311\u9009\u51fa\u53ea\u5305\u542b\u4e0d\u9700\u8981\u4efb\u4f55\u7acb\u5373\u54cd\u5e94\u7684\u5b9a\u4e49\u7684\u6ce8\u91ca\uff0c\u7a0b\u5e8f\u5458\u7528\u6807\u51c6\u5e8f\u8a00\u6807\u8bb0\u5b83\u4eec\uff1a\u201cMac \u5b9a\u4e49\uff0c\u53ea\u8bfb\u201d\u3002\u8fd9\u2014\u2014\u56e0\u4e3a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5f88\u61d2\u60f0\u2014\u2014\u5f88\u5feb\u88ab\u7f29\u5199\u4e3a\u201cDEF.MAC.R/O\u201d\uff0c\u7136\u540e\u662f\u201cDEFMACRO\u201d\u3002\u5f88\u5feb\uff0cMac \u7684\u6ce8\u91ca\u4e2d\u5c31\u6ca1\u6709\u5b9e\u9645\u7684\u82f1\u8bed\u4e86\u3002\u4ed6\u4e00\u6574\u5929\u6240\u505a\u7684\u5c31\u662f\u9605\u8bfb\u548c\u56de\u590d\u6765\u81ea\u7f16\u8bd1\u5668\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u5305\u542b DEFMACRO \u6ce8\u91ca\u548c\u5bf9 DEFMACRO \u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u8c03\u7528\u3002\u7531\u4e8e\u7b14\u8bb0\u4e2d\u7684 Lisp \u7a0b\u5e8f\u5b8c\u6210\u4e86\u6240\u6709\u5b9e\u9645\u5de5\u4f5c\uff0c\u56e0\u6b64\u8ddf\u4e0a\u7535\u5b50\u90ae\u4ef6\u6ca1\u6709\u95ee\u9898\u3002\u9ea6\u514b\u7a81\u7136\u6709\u5f88\u591a\u65f6\u95f4\u5728\u4ed6\u7684\u529e\u516c\u5ba4\u91cc\uff0c\u4ed6\u4f1a\u5750\u5728\u529e\u516c\u5ba4\u91cc\u5e7b\u60f3\u7740\u767d\u8272\u7684\u6c99\u6ee9\u3001\u6e5b\u84dd\u7684\u6d77\u6c34\u548c\u5e26\u5c0f\u7eb8\u4f1e\u7684\u996e\u6599\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u7a0b\u5e8f\u5458\u610f\u8bc6\u5230\u6ca1\u6709\u4eba\u89c1\u8fc7 Mac \u5f88\u957f\u65f6\u95f4\u4e86\u3002\u5f53\u4ed6\u4eec\u6765\u5230\u4ed6\u7684\u529e\u516c\u5ba4\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u6240\u6709\u4e1c\u897f\u90fd\u8986\u76d6\u7740\u4e00\u5c42\u8584\u8584\u7684\u7070\u5c18\uff0c\u4e00\u5f20\u684c\u5b50\u4e0a\u6563\u843d\u7740\u5404\u79cd\u70ed\u5e26\u5730\u533a\u7684\u65c5\u6e38\u624b\u518c\uff0c\u7535\u8111\u4e5f\u5173\u673a\u4e86\u3002\u4f46\u662f\u7f16\u8bd1\u5668\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\u2014\u2014\u600e\u4e48\u4f1a\u5462\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0cMac \u5bf9\u7f16\u8bd1\u5668\u8fdb\u884c\u4e86\u6700\u540e\u4e00\u6b21\u66f4\u6539\uff1a\u7f16\u8bd1\u5668\u73b0\u5728\u4fdd\u5b58\u4e86 DEFMACRO \u6ce8\u91ca\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5e76\u5728\u5176\u4ed6\u6ce8\u91ca\u8c03\u7528\u65f6\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5411 Mac \u53d1\u9001\u6ce8\u91ca\u3002\u7a0b\u5e8f\u5458\u4eec\u51b3\u5b9a\u6ca1\u6709\u7406\u7531\u544a\u8bc9\u5927\u8001\u677f Mac \u4e0d\u518d\u6765\u529e\u516c\u5ba4\u4e86\u3002\u6240\u4ee5\u76f4\u5230\u4eca\u5929\uff0cMac \u62ff\u4e00\u4efd\u85aa\u6c34\uff0c\u4e0d\u65f6\u7ed9\u7a0b\u5e8f\u5458\u5bc4\u4e00\u5f20\u6765\u81ea\u4e00\u4e2a\u70ed\u5e26\u5730\u533a\u6216\u53e6\u4e00\u4e2a\u5730\u65b9\u7684\u660e\u4fe1\u7247\u3002\u7406\u89e3\u5b8f\u7684\u5173\u952e\u662f\u975e\u5e38\u6e05\u695a\u751f\u6210\u4ee3\u7801\u7684\u4ee3\u7801\uff08\u5b8f\uff09\u548c\u6700\u7ec8\u6784\u6210\u7a0b\u5e8f\u7684\u4ee3\u7801\uff08\u5176\u4ed6\u4e00\u5207\uff09\u4e4b\u95f4\u7684\u533a\u522b\u3002\u5f53\u60a8\u7f16\u5199\u5b8f\u65f6\uff0c\u60a8\u6b63\u5728\u7f16\u5199\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u5c06\u4f7f\u7528\u8fd9\u4e9b\u7a0b\u5e8f\u6765\u751f\u6210\u968f\u540e\u5c06\u88ab\u7f16\u8bd1\u7684\u4ee3\u7801\u3002\u53ea\u6709\u5728\u5b8f\u5b8c\u5168\u5c55\u5f00\u5e76\u7f16\u8bd1\u751f\u6210\u7684\u4ee3\u7801\u4e4b\u540e\uff0c\u7a0b\u5e8f\u624d\u80fd\u771f\u6b63\u8fd0\u884c\u3002\u5b8f\u8fd0\u884c\u7684\u65f6\u95f4\u79f0\u4e3a\u5b8f\u5c55\u5f00\u65f6\u95f4\uff1b\u8fd9\u4e0e\u8fd0\u884c\u65f6\u4e0d\u540c\uff0c\u5f53\u5e38\u89c4\u4ee3\u7801\uff08\u5305\u62ec\u5b8f\u751f\u6210\u7684\u4ee3\u7801\uff09\u8fd0\u884c\u65f6\u3002\u7262\u8bb0\u8fd9\u79cd\u533a\u522b\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5728\u5b8f\u6269\u5c55\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u4e0e\u8fd0\u884c\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u5728\u975e\u5e38\u4e0d\u540c\u7684\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u5373\uff0c\u5728\u5b8f\u6269\u5c55\u65f6\uff0c\u65e0\u6cd5\u8bbf\u95ee\u8fd0\u884c\u65f6\u5c06\u5b58\u5728\u7684\u6570\u636e\u3002\u50cf Mac \u4e00\u6837\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u77e5\u9053\u6b63\u786e\u7684\u8f93\u5165\u662f\u4ec0\u4e48\u800c\u65e0\u6cd5\u8fd0\u884c\u4ed6\u6b63\u5728\u5f00\u53d1\u7684\u7a0b\u5e8f\uff0c\u5728\u5b8f\u6269\u5c55\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u53ea\u80fd\u5904\u7406\u6e90\u4ee3\u7801\u4e2d\u56fa\u6709\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4ee5\u4e0b\u6e90\u4ee3\u7801\u51fa\u73b0\u5728\u7a0b\u5e8f\u4e2d\u7684\u67d0\u5904\uff1a \u901a\u5e38\u60a8\u4f1a\u8ba4\u4e3a x \u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u5c06\u4fdd\u5b58\u5728\u5bf9 foo \u7684\u8c03\u7528\u4e2d\u4f20\u9012\u7684\u53c2\u6570\u3002\u4f46\u662f\u5728\u5b8f\u6269\u5c55\u65f6\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u8fd0\u884c WHEN \u5b8f\u65f6\uff0c\u552f\u4e00\u53ef\u7528\u7684\u6570\u636e\u662f\u6e90\u4ee3\u7801\u3002\u7531\u4e8e\u7a0b\u5e8f\u5c1a\u672a\u8fd0\u884c\uff0c\u56e0\u6b64\u6ca1\u6709\u8c03\u7528 foo\uff0c\u56e0\u6b64\u6ca1\u6709\u4e0e x \u5173\u8054\u7684\u503c\u3002\u76f8\u53cd\uff0c\u7f16\u8bd1\u5668\u4f20\u9012\u7ed9 WHEN \u7684\u503c\u662f\u8868\u793a\u6e90\u4ee3\u7801\u7684 Lisp \u5217\u8868\uff0c\u5373 (&gt; x 10) \u548c (print &#39;big)\u3002\u5047\u8bbe WHEN \u5b9a\u4e49\u4e3a\uff0c\u5982\u60a8\u5728\u524d\u4e00\u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5b8f\u7684\u5185\u5bb9\uff1a\n\u7f16\u8bd1 foo \u4e2d\u7684\u4ee3\u7801\u65f6\uff0c WHEN \u5b8f\u5c06\u4ee5\u8fd9\u4e24\u79cd\u5f62\u5f0f\u4f5c\u4e3a\u53c2\u6570\u8fd0\u884c\u3002\u53c2\u6570condition \u5c06\u7ed1\u5b9a\u5230\u8868\u5355(&gt; x 10)\uff0c\u8868\u5355(print&#39;big) \u5c06\u88ab\u6536\u96c6\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u8be5\u5217\u8868\u5c06\u6210\u4e3a&amp;rest body \u53c2\u6570\u7684\u503c\u3002\u7136\u540e\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u5c06\u751f\u6210\u4ee5\u4e0b\u4ee3\u7801\uff1a\u901a\u8fc7\u63d2\u5165\u6761\u4ef6\u503c\u5e76\u5c06 body \u503c\u62fc\u63a5\u5230 PROGN \u4e2d\u3002\u5f53 Lisp \u88ab\u89e3\u91ca\u800c\u4e0d\u662f\u7f16\u8bd1\u65f6\uff0c\u5b8f\u6269\u5c55\u65f6\u95f4\u548c\u8fd0\u884c\u65f6\u4e4b\u95f4\u7684\u533a\u522b\u4e0d\u592a\u6e05\u695a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u65f6\u95f4\u4e0a\u662f\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\u3002\u6b64\u5916\uff0c\u8bed\u8a00\u6807\u51c6\u5e76\u6ca1\u6709\u5177\u4f53\u89c4\u5b9a\u89e3\u91ca\u5668\u5fc5\u987b\u5982\u4f55\u5904\u7406\u5b8f\u2014\u2014\u5b83\u53ef\u4ee5\u5728\u88ab\u89e3\u91ca\u7684\u8868\u5355\u4e2d\u5c55\u5f00\u6240\u6709\u5b8f\uff0c\u7136\u540e\u89e3\u91ca\u7ed3\u679c\u4ee3\u7801\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u5728\u89e3\u91ca\u8868\u5355\u65f6\u7acb\u5373\u5f00\u59cb\u5e76\u5728\u9047\u5230\u5b8f\u65f6\u5c55\u5f00\u5b8f\u3002\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b8f\u603b\u662f\u4f20\u9012\u4ee3\u8868\u5b8f\u5f62\u5f0f\u7684\u5b50\u5f62\u5f0f\u7684\u672a\u8ba1\u7b97\u7684 Lisp \u5bf9\u8c61\uff0c\u5e76\u4e14\u5b8f\u7684\u5de5\u4f5c\u4ecd\u7136\u662f\u751f\u6210\u53ef\u4ee5\u505a\u67d0\u4e8b\u800c\u4e0d\u662f\u76f4\u63a5\u505a\u4efb\u4f55\u4e8b\u60c5\u7684\u4ee3\u7801\u3002\u6b63\u5982\u4f60\u5728\u7b2c 3 \u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u5b8f\u786e\u5b9e\u662f\u7528 DEFMACROforms \u5b9a\u4e49\u7684\uff0c\u5c3d\u7ba1\u5b83\u4ee3\u8868\u2014\u2014\u5f53\u7136\u2014\u2014\u4ee3\u8868 DEFine MACRO\uff0c\u800c\u4e0d\u662f Definitionfor Mac\u3002 DEFMACRO \u7684\u57fa\u672c\u9aa8\u67b6\u4e0e DEFUN \u7684\u9aa8\u67b6\u975e\u5e38\u76f8\u4f3c\u3002\u4e0e\u51fd\u6570\u4e00\u6837\uff0c\u5b8f\u7531\u540d\u79f0\u3001\u53c2\u6570\u5217\u8868\u3001\u53ef\u9009\u7684\u6587\u6863\u5b57\u7b26\u4e32\u548c Lisp \u8868\u8fbe\u5f0f\u4e3b\u4f53\u7ec4\u6210\u3002 1\u7136\u800c\uff0c\u6b63\u5982\u6211\u521a\u624d\u6240\u8ba8\u8bba\u7684\uff0c\u5b8f\u7684\u5de5\u4f5c\u4e0d\u662f\u76f4\u63a5\u505a\u4efb\u4f55\u4e8b\u60c5\u2014\u2014\u5b83\u7684\u5de5\u4f5c\u662f\u751f\u6210\u7a0d\u540e\u4f1a\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u7684\u4ee3\u7801\u3002\u5b8f\u53ef\u4ee5\u4f7f\u7528 Lisp \u7684\u5168\u90e8\u529f\u80fd\u6765\u751f\u6210\u5b83\u4eec\u7684\u6269\u5c55\uff0c\u8fd9\u610f\u5473\u7740\u5728\u672c\u7ae0\u4e2d\u6211\u53ea\u80fd\u89e6\u53ca\u5b8f\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u7684\u76ae\u6bdb\u3002\u7136\u800c\uff0c\u6211\u53ef\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u7f16\u5199\u5b8f\u7684\u4e00\u822c\u8fc7\u7a0b\uff0c\u5b83\u9002\u7528\u4e8e\u4ece\u6700\u7b80\u5355\u5230\u6700\u590d\u6742\u7684\u6240\u6709\u5b8f\u3002\u5b8f\u7684\u5de5\u4f5c\u662f\u5c06\u5b8f\u5f62\u5f0f\u2014\u2014\u6362\u8a00\u4e4b\uff0c\u5176\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5b8f\u540d\u79f0\u7684 Lisp \u5f62\u5f0f\u2014\u2014\u7ffb\u8bd1\u6210\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u7684\u4ee3\u7801\u3002\u6709\u65f6\u60a8\u4f1a\u4ece\u60a8\u5e0c\u671b\u80fd\u591f\u7f16\u5199\u7684\u4ee3\u7801\u5f00\u59cb\u7f16\u5199\u5b8f\uff0c\u5373\u4f7f\u7528\u793a\u4f8b\u5b8f\u5f62\u5f0f\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u60a8\u5728\u591a\u6b21\u7f16\u5199\u76f8\u540c\u6a21\u5f0f\u7684\u4ee3\u7801\u540e\u51b3\u5b9a\u7f16\u5199\u5b8f\uff0c\u5e76\u610f\u8bc6\u5230\u53ef\u4ee5\u901a\u8fc7\u62bd\u8c61\u6a21\u5f0f\u4f7f\u4ee3\u7801\u66f4\u6e05\u6670\u3002\n\u65e0\u8bba\u60a8\u4ece\u54ea\u4e00\u7aef\u5f00\u59cb\uff0c\u5728\u5f00\u59cb\u7f16\u5199\u5b8f\u4e4b\u524d\uff0c\u60a8\u90fd\u9700\u8981\u5f04\u6e05\u695a\u53e6\u4e00\u7aef\uff1a\u60a8\u9700\u8981\u77e5\u9053\u81ea\u5df1\u4ece\u54ea\u91cc\u6765\u548c\u8981\u53bb\u54ea\u91cc\uff0c\u7136\u540e\u624d\u80fd\u5e0c\u671b\u7f16\u5199\u4ee3\u7801\u6765\u81ea\u52a8\u6267\u884c\u5b83\u3002\u56e0\u6b64\uff0c\u7f16\u5199\u5b8f\u7684\u7b2c\u4e00\u6b65\u662f\u7f16\u5199\u81f3\u5c11\u4e00\u4e2a\u5b8f\u8c03\u7528\u793a\u4f8b\u4ee5\u53ca\u8be5\u8c03\u7528\u5e94\u6269\u5c55\u5230\u7684\u4ee3\u7801\u3002\u4e00\u65e6\u60a8\u6709\u4e86\u4e00\u4e2a\u793a\u4f8b\u8c03\u7528\u548c\u6240\u9700\u7684\u6269\u5c55\uff0c\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u7b2c\u4e8c\u6b65\u4e86\uff1a\u7f16\u5199\u5b9e\u9645\u7684\u5b8f\u4ee3\u7801\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u5b8f\uff0c\u8fd9\u5c06\u662f\u7f16\u5199\u53cd\u5f15\u53f7\u6a21\u677f\u5e76\u5c06\u5b8f\u53c2\u6570\u63d2\u5165\u6b63\u786e\u4f4d\u7f6e\u7684\u5fae\u4e0d\u8db3\u9053\u7684\u4e8b\u60c5\u3002\u590d\u6742\u7684\u5b8f\u672c\u8eab\u5c31\u662f\u91cd\u8981\u7684\u7a0b\u5e8f\uff0c\u5177\u6709\u8f85\u52a9\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\u3002\u5728\u7f16\u5199\u4ee3\u7801\u5c06\u793a\u4f8b\u8c03\u7528\u8f6c\u6362\u4e3a\u9002\u5f53\u7684\u6269\u5c55\u4e4b\u540e\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u5b8f\u63d0\u4f9b\u7684\u62bd\u8c61\u4e0d\u4f1a\u201c\u6cc4\u6f0f\u201d\u5176\u5b9e\u73b0\u7684\u7ec6\u8282\u3002 Leakymacro \u62bd\u8c61\u5bf9\u4e8e\u67d0\u4e9b\u53c2\u6570\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u53c2\u6570\uff0c\u6216\u8005\u4f1a\u4ee5\u4e0d\u53d7\u6b22\u8fce\u7684\u65b9\u5f0f\u4e0e\u8c03\u7528\u73af\u5883\u4e2d\u7684\u4ee3\u7801\u4ea4\u4e92\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b8f\u53ef\u80fd\u4ee5\u5c11\u6570\u51e0\u79cd\u65b9\u5f0f\u6cc4\u6f0f\uff0c\u53ea\u8981\u60a8\u77e5\u9053\u68c0\u67e5\u5b83\u4eec\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5f88\u5bb9\u6613\u907f\u514d\u3002\u6211\u5c06\u5728\u201c\u5835\u6f0f\u201d\u4e00\u8282\u4e2d\u8ba8\u8bba\u5982\u4f55\u505a\u3002\u7f16\u5199\u5bf9\u5b8f\u53ca\u5176\u5e94\u6269\u5c55\u5230\u7684\u4ee3\u7801\u7684\u793a\u4f8b\u8c03\u7528\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8981\u4e86\u89e3\u8fd9\u4e2a\u4e09\u6b65\u8fc7\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u60a8\u5c06\u7f16\u5199\u4e00\u4e2a\u5b8f do-primes\uff0c\u5b83\u63d0\u4f9b\u7c7b\u4f3c\u4e8e DOTIMES \u548c DOLIST \u7684\u5faa\u73af\u6784\u9020\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u662f\u8fed\u4ee3\u6574\u6570\u6216\u5217\u8868\u5143\u7d20\uff0c\u800c\u662f\u8fed\u4ee3\u8fde\u7eed\u7684\u7d20\u6570\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u6709\u7528\u7684\u5b8f\u7684\u4f8b\u5b50\u2014\u2014\u5b83\u53ea\u662f\u4e00\u4e2a\u6f14\u793a\u8fc7\u7a0b\u7684\u5de5\u5177\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u4e24\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\uff0c\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7ed9\u5b9a\u6570\u5b57\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u53e6\u4e00\u4e2a\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u53c2\u6570\u7684\u7d20\u6570\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u90fd\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u4f46\u6548\u7387\u4f4e\u4e0b\u7684\u86ee\u529b\u65b9\u6cd5\u3002 (defun primep (number) (when (&gt; number 1) (loop for fac from 2 to (isqrt number) never (zerop (mod number fac)))))(defun next-prime (number) (loop for n from number)\u5f53 (primep n) \u8fd4\u56de n))\n\u73b0\u5728\u60a8\u53ef\u4ee5\u7f16\u5199\u5b8f\u3002\u6309\u7167\u524d\u9762\u6982\u8ff0\u7684\u8fc7\u7a0b\uff0c\u60a8\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u5b8f\u8c03\u7528\u793a\u4f8b\u4ee5\u53ca\u5b8f\u5e94\u8be5\u6269\u5c55\u5230\u7684\u4ee3\u7801\u3002\u5047\u8bbe\u60a8\u4ece\u5e0c\u671b\u80fd\u591f\u8fd9\u6837\u5199\u7684\u60f3\u6cd5\u5f00\u59cb\uff1a\u8868\u8fbe\u4e00\u4e2a\u5faa\u73af\uff0c\u8be5\u5faa\u73af\u5bf9\u6bcf\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e 0 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e 19 \u7684\u8d28\u6570\u6267\u884c\u4e00\u6b21\u5faa\u73af\u4f53\uff0c\u53d8\u91cf p \u4fdd\u5b58\u8d28\u6570\u3002\u4ee5\u6807\u51c6 DOLIST \u548c DOTIMES \u5b8f\u7684\u5f62\u5f0f\u5bf9\u8fd9\u4e2a\u5b8f\u8fdb\u884c\u5efa\u6a21\u662f\u6709\u610f\u4e49\u7684\uff1b\u9075\u5faa\u73b0\u6709\u5b8f\u6a21\u5f0f\u7684\u5b8f\u6bd4\u65e0\u7f18\u65e0\u6545\u5f15\u5165\u65b0\u8bed\u6cd5\u7684\u5b8f\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709 do-primes \u5b8f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 DO\uff08\u4ee5\u53ca\u4e4b\u524d\u5b9a\u4e49\u7684\u4e24\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\uff09\u7f16\u5199\u8fd9\u6837\u4e00\u4e2a\u5faa\u73af\uff0c\u5982\u4e0b\u6240\u793a\uff1a (do ((p (next-prime 0) (next-prime (1+ p)))) ((&gt; p 19)) (format t &quot;~d &quot; p)) \u73b0\u5728\u60a8\u5df2\u51c6\u5907\u597d\u5f00\u59cb\u7f16\u5199\u5c06\u4ece\u524d\u8005\u8f6c\u6362\u4e3a\u540e\u8005\u7684\u5b8f\u4ee3\u7801\u3002\u7531\u4e8e\u4f20\u9012\u7ed9\u5b8f\u7684\u53c2\u6570\u662f\u8868\u793a\u5b8f\u8c03\u7528\u6e90\u4ee3\u7801\u7684 Lisp \u5bf9\u8c61\uff0c\u56e0\u6b64\u4efb\u4f55\u5b8f\u7684\u7b2c\u4e00\u6b65\u90fd\u662f\u63d0\u53d6\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u8ba1\u7b97\u6269\u5c55\u6240\u9700\u7684\u4efb\u4f55\u90e8\u5206\u3002\u5bf9\u4e8e\u7b80\u5355\u5730\u5c06\u5176\u53c2\u6570\u76f4\u63a5\u63d2\u5165\u5230\u6a21\u677f\u4e2d\u7684\u5b8f\uff0c\u8fd9\u4e00\u6b65\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff1a\u53ea\u9700\u5b9a\u4e49\u6b63\u786e\u7684\u53c2\u6570\u6765\u4fdd\u5b58\u4e0d\u540c\u7684\u53c2\u6570\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4f3c\u4e4e\u5bf9 do-primes \u4e0d\u591f\u7528\u3002do-primes \u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5305\u542b\u5faa\u73af\u53d8\u91cf\u540d\u79f0 p \u7684\u5217\u8868\uff1b\u4e0b\u9650\u4e3a 0\uff1b\u4e0a\u9650\u4e3a 19\u3002\u4f46\u662f\u5982\u679c\u60a8\u67e5\u770b\u5c55\u5f00\u5f0f\uff0c\u6574\u4e2a\u5217\u8868\u5e76\u672a\u51fa\u73b0\u5728\u5c55\u5f00\u5f0f\u4e2d\uff1b\u4e09\u4e2a\u5143\u7d20\u88ab\u5206\u5f00\u5e76\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u5730\u65b9\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\u5b9a\u4e49 do-primes\uff0c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u5217\u8868\uff0c\u4e00\u4e2a &amp;rest \u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u4e3b\u4f53\u5f62\u5f0f\uff0c\u7136\u540e\u624b\u52a8\u62c6\u5206\u5217\u8868\uff0c\u5982\u4e0b\u6240\u793a\uff1a(defmacro do-primes (var-and-range &amp;rest body) (let ((var (first var-and-range)) (start (second var-and-range)) (end (third var-and-range))) `(do ((,var (next-prime ,start) ) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body))) \u7a0d\u540e\u6211\u5c06\u89e3\u91ca\u4e3b\u4f53\u5982\u4f55\u4ea7\u751f\u6b63\u786e\u7684\u6269\u5c55\uff1b\u73b0\u5728\u4f60\u53ef\u4ee5\u6ce8\u610f\u5230\u53d8\u91cf var\u3001start \u548c end \u6bcf\u4e2a\u90fd\u5305\u542b\u4e00\u4e2a\u503c\uff0c\u4ece var-and-range \u4e2d\u63d0\u53d6\uff0c\u7136\u540e\u63d2\u5165\u5230\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u4e2d\uff0c\u751f\u6210 do-primes \u7684\u6269\u5c55\u3002\u4f46\u662f\uff0c\u60a8\u4e0d\u9700\u8981\u201c\u624b\u52a8\u201d\u62c6\u5206 var-and-range\uff0c\u56e0\u4e3a\u5b8f\u53c2\u6570\u5217\u8868\u5c31\u662f\u6240\u8c13\u7684\u89e3\u6784\u53c2\u6570\u5217\u8868\u3002\u987e\u540d\u601d\u4e49\uff0c\u89e3\u6784\u6d89\u53ca\u5206\u89e3\u4e00\u4e2a\u7ed3\u6784\u2014\u2014\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u4f20\u9012\u7ed9\u5b8f\u7684\u8868\u5355\u7684\u5217\u8868\u7ed3\u6784\u3002\u5728\u89e3\u6784\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u53ef\u4ee5\u7528\u5d4c\u5957\u53c2\u6570\u5217\u8868\u66ff\u6362\u7b80\u5355\u7684\u53c2\u6570\u540d\u79f0\u3002\u5d4c\u5957\u53c2\u6570\u5217\u8868\u4e2d\u7684\u53c2\u6570\u5c06\u4ece\u5df2\u7ed1\u5b9a\u5230\u5217\u8868\u66ff\u6362\u7684\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u7684\u5143\u7d20\u4e2d\u83b7\u53d6\u5b83\u4eec\u7684\u503c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06 var-and-range \u66ff\u6362\u4e3a alist (var start end)\uff0c\u5217\u8868\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5c06\u81ea\u52a8\u89e3\u6784\u4e3a\u8fd9\u4e09\u4e2a\u53c2\u6570\u3002\u5b8f\u53c2\u6570\u5217\u8868\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528 &amp;body \u4f5c\u4e3a &amp;rest \u7684\u540c\u4e49\u8bcd\u3002\u5728\u8bed\u4e49\u4e0a &amp;body \u548c &amp;rest \u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u8bb8\u591a\u5f00\u53d1\u73af\u5883\u5c06\u4f7f\u7528 &amp;body \u53c2\u6570\u7684\u5b58\u5728\u6765\u4fee\u6539\u5b83\u4eec\u5982\u4f55\u7f29\u8fdb\u4f7f\u7528\u5b8f\u2014\u2014\u901a\u5e38 &amp;body \u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u7ec4\u6210\u5b8f\u4e3b\u4f53\u7684\u8868\u5355\u5217\u8868\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u7b80\u5316 do-primes \u7684\u5b9a\u4e49\uff0c\u5e76\u901a\u8fc7\u5982\u4e0b\u5b9a\u4e49\u5411\u4eba\u7c7b\u8bfb\u8005\u548c\u60a8\u7684\u5f00\u53d1\u5de5\u5177\u63d0\u4f9b\u6709\u5173\u5176\u9884\u671f\u7528\u9014\u7684\u63d0\u793a\uff1a\n(defmacro do-primes ((var start end) &amp;body body) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body)) \u9664\u4e86\u66f4\u7b80\u6d01\u4e4b\u5916\uff0c\u89e3\u6784\u53c2\u6570\u5217\u8868\u8fd8\u4e3a\u60a8\u63d0\u4f9b\u81ea\u52a8\u9519\u8bef\u68c0\u67e5\u2014\u2014\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684 do-primes\uff0cLisp \u5c06\u80fd\u591f\u68c0\u6d4b\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u662f\u4e09\u5143\u7d20\u5217\u8868\u7684\u8c03\u7528\uff0c\u5e76\u4e14\u4f1a\u7ed9\u51fa\u60a8\u4f1a\u6536\u5230\u4e00\u6761\u6709\u610f\u4e49\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5c31\u50cf\u60a8\u8c03\u7528\u4e86\u4e00\u4e2a\u53c2\u6570\u592a\u5c11\u6216\u592a\u591a\u7684\u51fd\u6570\u4e00\u6837\u3002\u6b64\u5916\uff0c\u5728 SLIME \u7b49\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u53ea\u8981\u60a8\u8f93\u5165\u51fd\u6570\u6216\u5b8f\u7684\u540d\u79f0\uff0c\u5c31\u4f1a\u6307\u793a\u9884\u671f\u7684\u53c2\u6570\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u89e3\u6784\u53c2\u6570\u5217\u8868\uff0c\u73af\u5883\u5c06\u80fd\u591f\u66f4\u5177\u4f53\u5730\u544a\u8bc9\u4f60\u5b8f\u8c03\u7528\u7684\u8bed\u6cd5\u3002\u4f7f\u7528\u539f\u59cb\u5b9a\u4e49\uff0cSLIME \u4f1a\u544a\u8bc9\u60a8 do-primes \u662f\u8fd9\u6837\u8c03\u7528\u7684\uff1a \u4f46\u662f\u4f7f\u7528\u65b0\u5b9a\u4e49\uff0c\u5b83\u53ef\u4ee5\u544a\u8bc9\u60a8\u8c03\u7528\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u89e3\u6784\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u5305\u542b &amp;optional\u3001&amp;key \u548c &amp;rest \u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u5305\u542b\u5d4c\u5957\u89e3\u6784\u5217\u8868\u3002\u4f46\u662f\uff0c\u60a8\u4e0d\u9700\u8981\u4efb\u4f55\u8fd9\u4e9b\u9009\u9879\u6765\u7f16\u5199 do-primes\u3002\u56e0\u4e3a do-primes \u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u5b8f\uff0c\u5728\u60a8\u89e3\u6784\u53c2\u6570\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5c06 themin \u63d2\u5165\u5230\u6a21\u677f\u4e2d\u4ee5\u83b7\u5f97\u6269\u5c55\u3002\u5bf9\u4e8e\u50cf do-primes \u8fd9\u6837\u7684\u7b80\u5355\u5b8f\uff0c\u7279\u6b8a\u7684\u53cd\u5f15\u53f7\u8bed\u6cd5\u662f\u5b8c\u7f8e\u7684\u3002\u56de\u987e\u4e00\u4e0b\uff0c\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u7c7b\u4f3c\u4e8e\u5e26\u5f15\u53f7\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u7279\u5b9a\u5b50\u8868\u8fbe\u5f0f\u524d\u9762\u52a0\u4e0a\u9017\u53f7\u6765\u201c\u53d6\u6d88\u5f15\u7528\u201d\u5b83\u4eec\uff0c\u53ef\u80fd\u540e\u8ddf at (@) \u7b26\u53f7\u3002\u5982\u679c\u6ca1\u6709 at \u7b26\u53f7\uff0c\u9017\u53f7\u4f1a\u5bfc\u81f4\u5305\u542b\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u7167\u539f\u6837\u3002\u5e26\u6709 at \u7b26\u53f7\u7684\u503c\u2014\u2014\u5fc5\u987b\u662f alist\u2014\u2014\u88ab\u201c\u62fc\u63a5\u201d\u5230\u5c01\u95ed\u5217\u8868\u4e2d\u3002\u8003\u8651\u53cd\u5f15\u53f7\u8bed\u6cd5\u7684\u53e6\u4e00\u79cd\u6709\u7528\u65b9\u6cd5\u662f\u7f16\u5199\u751f\u6210\u5217\u8868\u7684\u4ee3\u7801\u7684\u7279\u522b\u7b80\u6d01\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u601d\u8003\u65b9\u5f0f\u7684\u597d\u5904\u662f\u51e0\u4e4e\u53ef\u4ee5\u51c6\u786e\u4e86\u89e3\u5e55\u540e\u53d1\u751f\u7684\u4e8b\u60c5\u2014\u2014\u5f53\u8bfb\u8005\u9605\u8bfb\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u751f\u6210\u9002\u5f53\u5217\u8868\u7ed3\u6784\u7684\u4ee3\u7801\u3002\u4f8b\u5982\uff0c`(,ab) \u53ef\u80fd\u8bfb\u4f5c (list a &#39;b)\u3002\u8bed\u8a00\u6807\u51c6\u5e76\u6ca1\u6709\u5177\u4f53\u6307\u5b9a\u8bfb\u8005\u5fc5\u987b\u751f\u6210\u4ec0\u4e48\u4ee3\u7801\uff0c\u53ea\u8981\u5b83\u751f\u6210\u53f3\u8868\u7ed3\u6784\u5373\u53ef\u3002\n\u8868 8-1 \u663e\u793a\u4e86\u4e00\u4e9b\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\u4ee5\u53ca\u7b49\u6548\u7684\u5217\u8868\u6784\u5efa\u4ee3\u7801\uff0c\u4ee5\u53ca\u8ba1\u7b97\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u6216\u7b49\u6548\u4ee3\u7801\u65f6\u5f97\u5230\u7684\u7ed3\u679c\u3002 2 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53cd\u5f15\u53f7\u53ea\u662f\u4e00\u79cd\u65b9\u4fbf\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u65b9\u4fbf\u3002\u8981\u4e86\u89e3\u6709\u591a\u5927\uff0c\u8bf7\u5c06 do-primes \u7684\u53cd\u5f15\u53f7\u7248\u672c\u4e0e\u4ee5\u4e0b\u7248\u672c\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u7248\u672c\u4f7f\u7528\u663e\u5f0f\u5217\u8868\u6784\u5efa\u4ee3\u7801\uff1a (defmacro do-primes-a ((var start end) &amp;body body) (append &#39;(do) (list (list) (list var (list &#39;next-prime start) (list &#39;next-prime (list &#39;1+ var))))) (list (list (list &#39;&gt; var end)))) body))\u7247\u523b\uff0c do-primes \u7684\u5f53\u524d\u5b9e\u73b0\u4e0d\u80fd\u6b63\u786e\u5904\u7406\u67d0\u4e9b\u8fb9\u7f18\u60c5\u51b5\u3002\u4f46\u662f\u9996\u5148\u60a8\u5e94\u8be5\u9a8c\u8bc1\u5b83\u81f3\u5c11\u9002\u7528\u4e8e\u539f\u59cb\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u4f7f\u7528\u5b83\u6765\u95f4\u63a5\u6d4b\u8bd5\u5b83\u2014\u2014\u5927\u6982\uff0c\u5982\u679c\u7ed3\u679c\u884c\u4e3a\u662f\u6b63\u786e\u7684\uff0c\u5219\u6269\u5c55\u662f\u6b63\u786e\u7684\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728 REPL \u4e2d\u8f93\u5165\u539f\u59cb\u793a\u4f8b\u5bf9 do-primes \u7684\u4f7f\u7528\uff0c\u5e76\u770b\u5230\u5b83\u786e\u5b9e\u6253\u5370\u4e86\u6b63\u786e\u7684\u7d20\u6570\u7cfb\u5217\u3002 CL-USER&gt; (do-primes (p 0 19) (format t &quot;~d &quot; p))2 3 5 7 11 13 17 19NIL \u6216\u8005\u76f4\u63a5\u67e5\u770b\u7279\u5b9a\u8c03\u7528\u7684\u5c55\u5f00\u67e5\u770b\u5b8f\u3002\u51fd\u6570 MACROEXPAND-1 \u5c06\u4efb\u4f55 Lisp \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u6267\u884c\u4e00\u7ea7\u5b8f\u6269\u5c55\u7684\u7ed3\u679c\u3002 3 \u56e0\u4e3a MACROEXPAND-1 \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u4f20\u9012\u7ed9\u5b83\u4e00\u4e2a\u6587\u5b57\u5b8f\u5f62\u5f0f\uff0c\u4f60\u5fc5\u987b\u5f15\u7528\u5b83\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u67e5\u770b\u9884......", "note_en": "Now it&#39;s time to start writing your own macros. The standard macros Icovered in the previous chapter hint at some of the things you can dowith macros, but that&#39;s just the beginning. Common Lisp doesn&#39;tsupport macros so every Lisp programmer can create their own variantsof standard control constructs any more than C supports functions soevery C programmer can write trivial variants of the functions in theC standard library. Macros are part of the language to allow you tocreate abstractions on top of the core language and standard librarythat move you closer toward being able to directly express the thingsyou want to express.\n Perhaps the biggest barrier to a proper understanding of macros is,ironically, that they&#39;re so well integrated into the language. Inmany ways they seem like just a funny kind of function--they&#39;rewritten in Lisp, they take arguments and return results, and theyallow you to abstract away distracting details. Yet despite thesemany similarities, macros operate at a different level than functionsand create a totally different kind of abstraction.\n Once you understand the difference between macros and functions, thetight integration of macros in the language will be a huge benefit.But in the meantime, it&#39;s a frequent source of confusion for newLispers. The following story, while not true in a historical ortechnical sense, tries to alleviate the confusion by giving you a wayto think about how macros work.\n   Once upon a time, long ago, there was a company of Lisp programmers.It was so long ago, in fact, that Lisp had no macros. Anything thatcouldn&#39;t be defined with a function or done with a special operatorhad to be written in full every time, which was rather a drag.Unfortunately, the programmers in this company--thoughbrilliant--were also quite lazy. Often in the middle of theirprograms--when the tedium of writing a bunch of code got to be toomuch--they would instead write a note describing the code they neededto write at that place in the program. Even more unfortunately,because they were lazy, the programmers also hated to go back andactually write the code described by the notes. Soon the company hada big stack of programs that nobody could run because they were fullof notes about code that still needed to be written.\n In desperation, the big bosses hired a junior programmer, Mac, whosejob was to find the notes, write the required code, and insert itinto the program in place of the notes. Mac never ran theprograms--they weren&#39;t done yet, of course, so he couldn&#39;t. But evenif they had been completed, Mac wouldn&#39;t have known what inputs tofeed them. So he just wrote his code based on the contents of thenotes and sent it back to the original programmer.\n With Mac&#39;s help, all the programs were soon completed, and thecompany made a ton of money selling them--so much money that thecompany could double the size of its programming staff. But for somereason no one thought to hire anyone to help Mac; soon he was single-handedly assisting several dozen programmers. To avoid spending allhis time searching for notes in source code, Mac made a smallmodification to the compiler the programmers used. Thereafter,whenever the compiler hit a note, it would e-mail him the note andwait for him to e-mail back the replacement code. Unfortunately, evenwith this change, Mac had a hard time keeping up with theprogrammers. He worked as carefully as he could, but sometimes--especially when the notes weren&#39;t clear--he would make mistakes.\n The programmers noticed, however, that the more precisely they wrotetheir notes, the more likely it was that Mac would send back correctcode. One day, one of the programmers, having a hard time describingin words the code he wanted, included in one of his notes a Lispprogram that would generate the code he wanted. That was fine by Mac;he just ran the program and sent the result to the compiler.\n The next innovation came when a programmer put a note at the top ofone of his programs containing a function definition and a commentthat said, &#34;Mac, don&#39;t write any code here, but keep this functionfor later; I&#39;m going to use it in some of my other notes.&#34; Othernotes in the same program said things such as, &#34;Mac, replace thisnote with the result of running that other function with the symbols x and  y as arguments.&#34;\n This technique caught on so quickly that within a few days, mostprograms contained dozens of notes defining functions that were onlyused by code in other notes. To make it easy for Mac to pick out thenotes containing only definitions that didn&#39;t require any immediateresponse, the programmers tagged them with the standard preface:&#34;Definition for Mac, Read Only.&#34; This--as the programmers were stillquite lazy--was quickly shortened to &#34;DEF. MAC. R/O&#34; and then&#34;DEFMACRO.&#34;\n Pretty soon, there was no actual English left in the notes for Mac.All he did all day was read and respond to e-mails from the compilercontaining DEFMACRO notes and calls to the functions defined in theDEFMACROs. Since the Lisp programs in the notes did all the realwork, keeping up with the e-mails was no problem. Mac suddenly had alot of time on his hands and would sit in his office daydreamingabout white-sand beaches, clear blue ocean water, and drinks withlittle paper umbrellas in them.\n Several months later the programmers realized nobody had seen Mac forquite some time. When they went to his office, they found a thinlayer of dust over everything, a desk littered with travel brochuresfor various tropical locations, and the computer off. But thecompiler still worked--how could it be? It turned out Mac had madeone last change to the compiler: instead of e-mailing notes to Mac,the compiler now saved the functions defined by DEFMACRO notes andran them when called for by the other notes. The programmers decidedthere was no reason to tell the big bosses Mac wasn&#39;t coming to theoffice anymore. So to this day, Mac draws a salary and from time totime sends the programmers a postcard from one tropical locale oranother.\n   The key to understanding macros is to be quite clear about thedistinction between the code that generates code (macros) and thecode that eventually makes up the program (everything else). When youwrite macros, you&#39;re writing programs that will be used by thecompiler to generate the code that will then be compiled. Only afterall the macros have been fully expanded and the resulting codecompiled can the program actually be run. The time when macros run iscalled  macro expansion time; this is distinct from  runtime,when regular code, including the code generated by macros, runs.\n It&#39;s important to keep this distinction firmly in mind because coderunning at macro expansion time runs in a very different environmentthan code running at runtime. Namely, at macro expansion time,there&#39;s no way to access the data that will exist at runtime. LikeMac, who couldn&#39;t run the programs he was working on because hedidn&#39;t know what the correct inputs were, code running at macroexpansion time can deal only with the data that&#39;s inherent in thesource code. For instance, suppose the following source code appearssomewhere in a program:\n  Normally you&#39;d think of  x as a variable that will hold theargument passed in a call to  foo. But at macro expansion time,such as when the compiler is running the   WHEN macro, the onlydata available is the source code. Since the program isn&#39;t runningyet, there&#39;s no call to  foo and thus no value associated with x. Instead, the values the compiler passes to   WHEN arethe Lisp lists representing the source code, namely,  (&gt; x 10)and  (print &#39;big). Suppose that   WHEN is defined, as yousaw in the previous chapter, with something like the following macro:\n  When the code in  foo is compiled, the   WHEN macro will berun with those two forms as arguments. The parameter  conditionwill be bound to the form  (&gt; x 10), and the form  (print&#39;big) will be collected into a list that will become the value ofthe   &amp;rest  body parameter. The backquote expression willthen generate this code:\n  by interpolating in the value of  condition and splicing thevalue of  body into the   PROGN.\n When Lisp is interpreted, rather than compiled, the distinctionbetween macro expansion time and runtime is less clear becausethey&#39;re temporally intertwined. Also, the language standard doesn&#39;tspecify exactly how an interpreter must handle macros--it couldexpand all the macros in the form being interpreted and theninterpret the resulting code, or it could start right in oninterpreting the form and expand macros when it hits them. In eithercase, macros are always passed the unevaluated Lisp objectsrepresenting the subforms of the macro form, and the job of the macrois still to produce code that will do something rather than to doanything directly.\n   As you saw in Chapter 3, macros really are defined with   DEFMACROforms, though it stands--of course--for DEFine MACRO, not Definitionfor Mac. The basic skeleton of a   DEFMACRO is quite similar tothe skeleton of a   DEFUN.\n  Like a function, a macro consists of a name, a parameter list, anoptional documentation string, and a body of Lispexpressions. 1However, as I just discussed, the job of a macro isn&#39;t to do anythingdirectly--its job is to generate code that will later do what youwant.\n Macros can use the full power of Lisp to generate their expansion,which means in this chapter I can only scratch the surface of whatyou can do with macros. I can, however, describe a general processfor writing macros that works for all macros from the simplest to themost complex.\n The job of a macro is to translate a macro form--in other words, aLisp form whose first element is the name of the macro--into codethat does a particular thing. Sometimes you write a macro startingwith the code you&#39;d like to be able to write, that is, with anexample macro form. Other times you decide to write a macro afteryou&#39;ve written the same pattern of code several times and realize youcan make your code clearer by abstracting the pattern.\n Regardless of which end you start from, you need to figure out theother end before you can start writing a macro: you need to know bothwhere you&#39;re coming from and where you&#39;re going before you can hopeto write code to do it automatically. Thus, the first step of writinga macro is to write at least one example of a call to the macro andthe code into which that call should expand.\n Once you have an example call and the desired expansion, you&#39;re readyfor the second step: writing the actual macro code. For simple macrosthis will be a trivial matter of writing a backquoted template withthe macro parameters plugged into the right places. Complex macroswill be significant programs in their own right, complete with helperfunctions and data structures.\n After you&#39;ve written code to translate the example call to theappropriate expansion, you need to make sure the abstraction themacro provides doesn&#39;t &#34;leak&#34; details of its implementation. Leakymacro abstractions will work fine for certain arguments but notothers or will interact with code in the calling environment inundesirable ways. As it turns out, macros can leak in a small handfulof ways, all of which are easily avoided as long as you know to checkfor them. I&#39;ll discuss how in the section &#34;Plugging the Leaks.&#34;\n  Write a sample call to the macro and the code it should expandinto, or vice versa.\n   To see how this three-step process works, you&#39;ll write a macro do-primes that provides a looping construct similar to  DOTIMES and   DOLIST except that instead of iterating overintegers or elements of a list, it iterates over successive primenumbers. This isn&#39;t meant to be an example of a particularly usefulmacro--it&#39;s just a vehicle for demonstrating the process.\n First, you&#39;ll need two utility functions, one to test whether a givennumber is prime and another that returns the next prime numbergreater or equal to its argument. In both cases you can use a simple,but inefficient, brute-force approach.\n (defun primep (number) (when (&gt; number 1) (loop for fac from 2 to (isqrt number) never (zerop (mod number fac)))))(defun next-prime (number) (loop for n from number when (primep n) return n))\n Now you can write the macro. Following the procedure outlinedpreviously, you need at least one example of a call to the macro andthe code into which it should expand. Suppose you start with the ideathat you want to be able to write this:\n  to express a loop that executes the body once each for each primenumber greater or equal to 0 and less than or equal to 19, with thevariable  p holding the prime number. It makes sense to modelthis macro on the form of the standard   DOLIST and   DOTIMESmacros; macros that follow the pattern of existing macros are easierto understand and use than macros that introduce gratuitously novelsyntax.\n Without the  do-primes macro, you could write such a loop with  DO (and the two utility functions defined previously) like this:\n (do ((p (next-prime 0) (next-prime (1+ p)))) ((&gt; p 19)) (format t &#34;~d &#34; p))\n Now you&#39;re ready to start writing the macro code that will translatefrom the former to the latter.\n   Since the arguments passed to a macro are Lisp objects representingthe source code of the macro call, the first step in any macro is toextract whatever parts of those objects are needed to compute theexpansion. For macros that simply interpolate their argumentsdirectly into a template, this step is trivial: simply defining theright parameters to hold the different arguments is sufficient.\n But this approach, it seems, will not suffice for  do-primes.The first argument to the  do-primes call is a list containingthe name of the loop variable,  p; the lower bound,  0;and the upper bound,  19. But if you look at the expansion, thelist as a whole doesn&#39;t appear in the expansion; the three elementare split up and put in different places.\n You could define  do-primes with two parameters, one to holdthe list and a   &amp;rest parameter to hold the body forms, and thentake apart the list by hand, something like this:\n (defmacro do-primes (var-and-range &amp;rest body) (let ((var (first var-and-range)) (start (second var-and-range)) (end (third var-and-range))) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body)))\n In a moment I&#39;ll explain how the body generates the correctexpansion; for now you can just note that the variables  var, start, and  end each hold a value, extracted from var-and-range, that&#39;s then interpolated into the backquoteexpression that generates  do-primes&#39;s expansion.\n However, you don&#39;t need to take apart  var-and-range &#34;by hand&#34;because macro parameter lists are what are called  destructuringparameter lists. Destructuring, as the name suggests, involves takingapart a structure--in this case the list structure of the formspassed to a macro.\n Within a destructuring parameter list, a simple parameter name can bereplaced with a nested parameter list. The parameters in the nestedparameter list will take their values from the elements of theexpression that would have been bound to the parameter the listreplaced. For instance, you can replace  var-and-range with alist  (var start end), and the three elements of the list willautomatically be destructured into those three parameters.\n Another special feature of macro parameter lists is that you can use  &amp;body as a synonym for   &amp;rest. Semantically   &amp;body and  &amp;rest are equivalent, but many development environments will usethe presence of a   &amp;body parameter to modify how they indent usesof the macro--typically   &amp;body parameters are used to hold alist of forms that make up the body of the macro.\n So you can streamline the definition of  do-primes and give ahint to both human readers and your development tools about itsintended use by defining it like this:\n (defmacro do-primes ((var start end) &amp;body body) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body))\n In addition to being more concise, destructuring parameter lists alsogive you automatic error checking--with  do-primes defined thisway, Lisp will be able to detect a call whose first argument isn&#39;t athree-element list and will give you a meaningful error message justas if you had called a function with too few or too many arguments.Also, in development environments such as SLIME that indicate whatarguments are expected as soon as you type the name of a function ormacro, if you use a destructuring parameter list, the environmentwill be able to tell you more specifically the syntax of the macrocall. With the original definition, SLIME would tell you do-primes is called like this:\n  But with the new definition, it can tell you that a call should looklike this:\n  Destructuring parameter lists can contain   &amp;optional,   &amp;key,and   &amp;rest parameters and can contain nested destructuring lists.However, you don&#39;t need any of those options to write do-primes.\n   Because  do-primes is a fairly simple macro, after you&#39;vedestructured the arguments, all that&#39;s left is to interpolate theminto a template to get the expansion.\n For simple macros like  do-primes, the special backquote syntaxis perfect. To review, a backquoted expression is similar to a quotedexpression except you can &#34;unquote&#34; particular subexpressions bypreceding them with a comma, possibly followed by an at (@) sign.Without an at sign, the comma causes the value of the subexpressionto be included as is. With an at sign, the value--which must be alist--is &#34;spliced&#34; into the enclosing list.\n Another useful way to think about the backquote syntax is as aparticularly concise way of writing code that generates lists. Thisway of thinking about it has the benefit of being pretty much exactlywhat&#39;s happening under the covers--when the reader reads a backquotedexpression, it translates it into code that generates the appropriatelist structure. For instance,  `(,a b) might be read as (list a &#39;b). The language standard doesn&#39;t specify exactlywhat code the reader must produce as long as it generates the rightlist structure.\n Table 8-1 shows some examples of backquoted expressions along withequivalent list-building code and the result you&#39;d get if youevaluated either the backquoted expression or the equivalentcode. 2\n   It&#39;s important to note that backquote is just a convenience. But it&#39;sa big convenience. To appreciate how big, compare the backquotedversion of  do-primes to the following version, which usesexplicit list-building code:\n (defmacro do-primes-a ((var start end) &amp;body body) (append &#39;(do) (list (list (list var (list &#39;next-prime start) (list &#39;next-prime (list &#39;1+ var))))) (list (list (list &#39;&gt; var end))) body))\n As you&#39;ll see in a moment, the current implementation of do-primes doesn&#39;t handle certain edge cases correctly. Butfirst you should verify that it at least works for the originalexample. You can test it in two ways. You can test it indirectly bysimply using it--presumably, if the resulting behavior is correct,the expansion is correct. For instance, you can type the originalexample&#39;s use of  do-primes to the REPL and see that it indeedprints the right series of prime numbers.\n CL-USER&gt; (do-primes (p 0 19) (format t &#34;~d &#34; p))2 3 5 7 11 13 17 19NIL\n Or you can check the macro directly by looking at the expansion of aparticular call. The function   MACROEXPAND-1 takes any Lispexpression as an argument and returns the result of doing one levelof macro expansion. 3 Because   MACROEXPAND-1 is afunction, to pass it a literal macro form you must quote it. You canuse it to see the expansion of the pre\n......", "posttime": "2021-08-08 08:44:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6545\u4e8b,story,\u4ee3\u7801", "title": "Mac\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u6545\u4e8b\uff08Lisp\uff09", "title_en": "Mac: A Just-So Story (Lisp)", "transed": 1, "url": "https://gigamonkeys.com/book/macros-defining-your-own.html#the-story-of-mac-a-just-so-story", "via": "", "real_tags": ["\u6545\u4e8b", "story", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "08fa65d538d1ee23907af27a71760d24.jpg", "infoid": 1072038, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a \u8df3\u8f6c\u5230\u641c\u7d22 Canadair CL-415\uff08Superscooper\uff0c\u540e\u6765\u7684\u5e9e\u5df4\u8fea415\uff09\u662f\u4e00\u79cd\u4e24\u6816\u98de\u673a\uff0c\u6700\u521d\u7531\u52a0\u62ff\u5927\u822a\u7a7a\u516c\u53f8\u5236\u9020\uff0c\u968f\u540e\u7531\u5e9e\u5df4\u8fea\u548c\u7ef4\u4eac\u98de\u673a\u5236\u9020\u3002\u5b83\u57fa\u4e8eCanadair CL-215\uff0c\u4e13\u4e3a\u7a7a\u4e2d\u6d88\u9632\u800c\u8bbe\u8ba1\uff1b\u5b83\u53ef\u4ee5\u6267\u884c\u5404\u79cd\u5176\u4ed6\u89d2\u8272\uff0c\u4f8b\u5982\u641c\u6551\u548c\u516c\u7528\u4e8b\u4e1a\u8fd0\u8f93\u3002 CL-415 \u7684\u5f00\u53d1\u4e8e 1990 \u5e74\u4ee3\u521d\u5f00\u59cb\uff0c\u5c31\u5728 CL-215T \u6539\u88c5\u8ba1\u5212\u7684\u6210\u529f\u8bc1\u660e\u5bf9\u539f\u59cb CL-215 \u7684\u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u6a21\u578b\u7684\u53ef\u884c\u9700\u6c42\u4e4b\u540e\u4e0d\u4e45\u3002\u8be5\u98de\u673a\u4e8e 2003 \u5e74\u6295\u5165\u751f\u4ea7\uff0c\u9664\u4e86\u65b0\u53d1\u52a8\u673a\u5916\uff0c\u8fd8\u5bf9 CL-215 \u8fdb\u884c\u4e86\u5927\u91cf\u73b0\u4ee3\u5316\u6539\u9020\u548c\u6539\u8fdb\uff0c\u7279\u522b\u662f\u5728\u9a7e\u9a76\u8231\u548c\u7a7a\u6c14\u52a8\u529b\u5b66\u65b9\u9762\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u5230\u8be5\u8ba1\u5212\u7684\u751f\u4ea7\u9636\u6bb5\u5f00\u59cb\u65f6\uff0c\u5b83\u7531\u5e9e\u5df4\u8fea\u6240\u6709\uff0c\u5e9e\u5df4\u8fea\u4e00\u76f4\u751f\u4ea7\u5230 2015 \u5e74\u30022016 \u5e74 10 \u6708\uff0cCL-415 \u8ba1\u5212\u88ab Viking Aircraft \u6536\u8d2d\uff1b\u8be5\u516c\u53f8\u751f\u4ea7\u4e86\u8fdb\u4e00\u6b65\u73b0\u4ee3\u5316\u7684\u98de\u673a\u6a21\u578b\uff0c\u6307\u5b9a\u4e3a CL-515 \u6216 Viking Canadair 515 First Responder\u3002 [2] CL-215 \u4e8e 1966 \u5e74\u63a8\u51fa\uff0c\u662f\u7b2c\u4e00\u67b6\u4e13\u95e8\u8bbe\u8ba1\u4e3a\u6c34\u4e0a\u8f70\u70b8\u673a\u7684\u98de\u673a\u3002 [3] \u5728\u6700\u7ec8\u7684 CL-215 \u4e8e 1990 \u5e74 5 \u6708\u4ea4\u4ed8\u4e4b\u524d\uff0c\u603b\u5171\u5efa\u9020\u4e86 125 \u67b6\u98de\u673a\u3002 [4] \u5728 1987 \u5e74\u671f\u95f4\uff0c\u4e3a\u4e86\u54cd\u5e94\u5e02\u573a\u5bf9\u66f4\u9ad8\u6548\u3001\u66f4\u5f3a\u5927\u548c\u66f4\u53ef\u9760\u7684\u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u7684\u8d8b\u52bf\uff0cCanadair \u627f\u62c5\u4e86\u4ee5\u4e0b\u4efb\u52a1\u4f7f\u7528\u666e\u60e0\u52a0\u62ff\u5927 PW123AF \u53d1\u52a8\u673a\u6539\u88c5 17 \u67b6 CL-215 \u673a\u8eab\u3002\u8be5\u53d1\u52a8\u673a\u7684\u529f\u7387\u6bd4\u539f\u6765\u7684\u6d3b\u585e\u53d1\u52a8\u673a\u63d0\u9ad8\u4e86 15%\uff0c\u5e76\u63d0\u9ad8\u4e86\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u3002\u6539\u88c5\u540e\u7684\u98de\u673a\u88ab\u547d\u540d\u4e3a CL-215T\u3002 [5] \u5728\u65b0\u673a\u578b\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u516c\u53f8\u5b98\u5458\u627f\u8ba4\u5e02\u573a\u5bf9 CL-215T \u7684\u9700\u6c42\u5fae\u4e0d\u8db3\u9053\uff0c\u56e0\u6b64\u4e0d\u8db3\u4ee5\u8bc1\u660e\u5f00\u53d1\u5168\u65b0\u98de\u673a\u7684\u5408\u7406\u6027\u3002 [5] \u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u8fd8\u662f\u6709\u8bb8\u591a\u6539\u8fdb\uff0c\u5305\u62ec\u589e\u52a0\u4e86\u52a8\u529b\u98de\u884c\u63a7\u5236\u3001\u9a7e\u9a76\u8231\u5185\u7684\u7a7a\u8c03\uff0c\u4ee5\u53ca\u5404\u79cd\u5347\u7ea7\u7684\u7535\u6c14\u548c\u822a\u7a7a\u7535\u5b50\u7cfb\u7edf\u3002 CL-215T \u6539\u88c5\u6700\u663e\u7740\u7684\u5916\u90e8\u7279\u5f81\u662f\u673a\u7ffc\u548c\u5c3e\u7ffc\u7684\u7a7a\u6c14\u52a8\u529b\u5b66\u90e8\u4ef6\u3002 [4] \u5728\u8fdb\u884c\u4e86\u76f8\u5bf9\u6210\u529f\u7684 CL-215T \u8ba1\u5212\u540e\uff0c\u8be5\u516c\u53f8\u51b3\u5b9a\u5f00\u53d1\u98de\u673a CL-415 \u7684\u8fdb\u4e00\u6b65\u6539\u8fdb\u578b\u53f7\uff0c\u8be5\u578b\u53f7\u5c06\u5f62\u6210\u65b0\u7684\u751f\u4ea7\u7cfb\u5217\u30021993 \u5e74 12 \u6708 6 \u65e5\uff0cCL-415 1994 \u5e74 11 \u6708\u5f00\u59cb\u9996\u6b21\u4ea4\u4ed8\u3002 [6] \u4e00\u5e74\u540e\uff0c\u5f00\u59cb\u4f7f\u7528\u9b41\u5317\u514b\u653f\u5e9c\u62e5\u6709\u7684 CL-415 \u8fdb\u884c\u4e3a\u671f 180 \u5929\u7684\u7a7f\u8d8a 21 \u4e2a\u56fd\u5bb6\u7684\u9500\u552e\u4e4b\u65c5\u3002 [7] \u540c\u5e74\uff0c\u5e9e\u5df4\u8fea\u8868\u793a\uff0c\u5b83\u6b63\u5904\u4e8e CL-415 \u516d\u70b9\u6539\u8fdb\u8ba1\u5212\u7684\u89c4\u5212\u9636\u6bb5\uff0c\u8be5\u8ba1\u5212\u4e3b\u8981\u65e8\u5728\u4f7f\u5176\u80fd\u529b\u591a\u6837\u5316\u3002 [8] [9] \u5f88\u5feb\u5c31\u6536\u5230\u4e86\u6765\u81ea\u51e0\u4e2a\u56fd\u5bb6\u7684\u8fd9\u79cd\u7c7b\u578b\u7684\u8ba2\u5355\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u79df\u8d41\u548c\u8d2d\u4e70\u5b89\u6392\uff1b\u5230 1996 \u5e74 7 \u6708\uff0c\u636e\u62a5\u9053\u6709 37 \u67b6\u6837\u673a\u5728\u52a0\u62ff\u5927\u3001\u6cd5\u56fd\u3001\u610f\u5927\u5229\u548c\u897f\u73ed\u7259\u7684\u8fd0\u8425\u5546\u4e2d\u670d\u5f79\u3002 [10] \u4ece 1998 \u5e74\u5f00\u59cb\uff0cCL-415 \u5728\u4f4d\u4e8e\u5b89\u5927\u7565\u7701\u5317\u6e7e\u7684\u5317\u6e7e/\u6770\u514b\u52a0\u5170\u673a\u573a\u9644\u8fd1\u7684\u5e9e\u5df4\u8fea\u5b87\u822a\u516c\u53f8\u7684\u8bbe\u65bd\u4e2d\u7ec4\u88c5\uff0c\u5e76\u5728\u5c3c\u76ae\u8f9b\u6e56\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002 [11] \u5728 2010 \u5e74\u4ee3\uff0c\u6839\u636e\u822a\u7a7a\u822a\u5929\u671f\u520a Flight International \u7684\u8bf4\u6cd5\uff0c\u8be5\u7c7b\u578b\u7684\u9500\u552e\u51fa\u73b0\u4e0b\u6ed1\u3002\u5e9e\u5df4\u8fea\u4e8e 2015 \u5e74 10 \u6708\u5173\u95ed\u751f\u4ea7\u7ebf\u65f6\uff0c\u5171\u5b8c\u6210\u4e86 95 \u67b6 CL-415\uff0c\u5c3d\u7ba1\u8be5\u516c\u53f8\u5728\u6b64\u65e5\u671f\u4e4b\u540e\u7ee7\u7eed\u79ef\u6781\u63a8\u9500\u8be5\u673a\u578b\u5e76\u4e3a\u73b0\u6709\u673a\u961f\u63d0\u4f9b\u652f\u6301\u3002 [12] \u51e0\u5341\u5e74\u6765\uff0c\u5e9e\u5df4\u8fea\u7ecf\u5386\u4e86\u4e00\u6bb5\u663e\u7740\u6269\u5f20\u7684\u65f6\u671f\uff0c\u76f4\u5230 2010 \u5e74\u4ee3\u9047\u5230\u8d22\u52a1\u56f0\u96be\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u5f00\u53d1 C \u7cfb\u5217\u7a84\u4f53\u5ba2\u673a\u7684\u6210\u672c\u975e\u5e38\u9ad8\u3002 [13] [14] \u5c0f\u5f97\u591a\u7684\u7ef4\u4eac\u98de\u673a\u6700\u521d\u662f\u4f5c\u4e3a\u90e8\u4ef6\u5236\u9020\u4e13\u5bb6\u5f00\u59cb\u7684\uff0c\u5176\u4e2d\u5305\u62ec\u83b7\u5f97\u5e9e\u5df4\u8fea\u505c\u4ea7\u98de\u673a\u7cfb\u5217\u96f6\u4ef6\u7684\u8bb8\u53ef\u751f\u4ea7\uff0c\u5e2e\u52a9\u8fd0\u8425\u5546\u4fdd\u6301\u5b83\u4eec\u7684\u670d\u52a1\u3002 [15] [16] 2008\u5e74\uff0c\u5e9e\u5df4\u8fea\u548c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u8fbe\u6210\u4e00\u9879\u534f\u8bae\uff0c\u5e9e\u5df4\u8fea\u5c06\u5176\u65e9\u671f\u4e1b\u6797\u98de\u673a\u7684\u8bbe\u8ba1\u6587\u4ef6\u548c\u6240\u6709\u77e5\u8bc6\u4ea7\u6743\u51fa\u552e\u7ed9\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u3002 [17] [18]\u51762014\u5e74\u7684\u5355\u4f4d\u6210\u672c\u4e3a3690\u4e07\u52a0\u5143\u3002 [19]\n2016 \u5e74 6 \u6708 20 \u65e5\uff0c\u7ef4\u4eac\u822a\u7a7a\u5ba3\u5e03\u6b63\u5728\u4ece\u5e9e\u5df4\u8fea\u8d2d\u4e70 CL-415 \u578b\u53f7\u8bc1\u4e66\uff0c\u4ee5\u53ca\u8f83\u65e7\u7684 CL-215 \u548c CL-215T \u578b\u53f7\u3002 [20] [21] [22] \u6536\u8d2d\u4e8e 2016 \u5e74 10 \u6708 3 \u65e5\u5b8c\u6210\u3002 [23] \u6536\u8d2d\u540e\u4e0d\u4e45\uff0c\u7ef4\u4eac\u5f00\u59cb\u8bbe\u8ba1\u73b0\u4ee3\u5316\u7248\u672c\u7684\u98de\u673a\uff0c\u5373 CL-515\u3002 [16] [24] \u5b8c\u6210\u7684\u98de\u673a\u88ab\u79f0\u4e3a Viking Canadair 515 First Responder\u3002 [2] 2018 \u5e74 12 \u6708\uff0c\u80fd\u591f\u6a21\u62df\u6c34\u6597\u548c\u8f70\u70b8\u64cd\u4f5c\u7684\u5168\u98de\u884c CL-415 \u6a21\u62df\u5668\u83b7\u5f97\u4e86\u6b27\u6d32\u822a\u7a7a\u5b89\u5168\u5c40 (EASA) \u7684\u8ba4\u8bc1\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u98de\u884c\u5458\u57f9\u8bad\u901a\u5e38\u6d89\u53ca\u98de\u673a\u7684\u73b0\u573a\u98de\u884c\u3002 [25] CL-415 \u6709\u4e00\u4e2a\u66f4\u65b0\u7684\u9a7e\u9a76\u8231\u3001\u7a7a\u6c14\u52a8\u529b\u5b66\u589e\u5f3a\u548c\u6c34\u91ca\u653e\u7cfb\u7edf\u7684\u53d8\u5316\uff0c\u521b\u9020\u4e86\u4e00\u8258\u73b0\u4ee3\u6d88\u9632\u4e24\u6816\u98de\u8247\uff0c\u7528\u4e8e\u63a2\u6d4b\u548c\u6291\u5236\u68ee\u6797\u706b\u707e\u3002\u4e0e CL-215 \u76f8\u6bd4\uff0cCL-415 \u589e\u52a0\u4e86\u5de5\u4f5c\u91cd\u91cf\u548c\u901f\u5ea6\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u529b\u548c\u6027\u80fd\u3002\u7531\u4e8e\u5176\u4e00\u5bf9\u666e\u60e0\u52a0\u62ff\u5927 PW123AF \u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u7684\u529f\u7387\u589e\u52a0\uff0c\u6bcf\u4e2a\u53d1\u52a8\u673a\u80fd\u591f\u4ea7\u751f\u9ad8\u8fbe 1,775 \u5343\u74e6\u7684\u63a8\u529b\uff0c\u4e0e CL-215 \u7684\u5e03\u7f6e\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u53d1\u52a8\u673a\u7684\u4f4d\u7f6e\u66f4\u9760\u8fd1\u673a\u8eab\u3002 [4] \u867d\u7136\u8fd9\u79cd\u91cd\u65b0\u5b9a\u4f4d\u901a\u5e38\u4f1a\u964d\u4f4e\u6a2a\u5411\u7a33\u5b9a\u6027\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5728\u53f3\u4fa7\u6c34\u5e73\u7a33\u5b9a\u5668\u524d\u65b9\u589e\u52a0\u4e00\u4e2a\u5012\u7f6e\u7684\u56fa\u5b9a\u524d\u7f18\u7f1d\u7ffc\u6765\u7ea0\u6b63\u3002\u6b64\u5916\uff0c\u8be5\u578b\u53f7\u8fd8\u91c7\u7528\u4e86\u5c0f\u7ffc\uff0c\u4ee5\u63d0\u9ad8\u65b9\u5411\u7a33\u5b9a\u6027\u3002 [4] CL-415 \u53ef\u4ee5\u4ece\u9644\u8fd1\u7684\u6c34\u6e90\u4e2d\u8200\u51fa\u591a\u8fbe 6,140 \u5347\uff081,350 \u82f1\u52a0\u4ed1\uff1b1,620 \u7f8e\u5236\u52a0\u4ed1\uff09\u7684\u6c34\uff0c\u5982\u679c\u9700\u8981\uff0c\u5c06\u5176\u4e0e\u5316\u5b66\u6ce1\u6cab\u6df7\u5408\uff0c\u7136\u540e\u5c06\u5176\u6295\u5165\u706b\u4e2d\u800c\u65e0\u9700\u8fd4\u56de\u57fa\u5730\u4ee5\u8865\u5145\u5176\u5766\u514b\u3002 [4] CL-415 \u4e13\u95e8\u5f00\u53d1\u7528\u4e8e\u63d0\u4f9b\u5927\u91cf\u706d\u706b\u5242\u4ee5\u5feb\u901f\u54cd\u5e94\u706b\u707e\u7684\u80fd\u529b\u3002\u5b83\u50a8\u5b58\u5728\u5927\u6cb9\u7bb1\u5185\uff0c\u8fd9\u4e9b\u6cb9\u7bb1\u4e3b\u8981\u4f4d\u4e8e\u8239\u4f53\u5185\u7684\u673a\u8231\u5730\u677f\u4e0b\u65b9\uff0c\u5c3d\u7ba1\u673a\u8eab\u4e24\u4fa7\u90fd\u6709\u9ad8\u4e8e\u6b64\u9ad8\u5ea6\u7684\u96c6\u6c34\u7bb1\u3002 [4] \u673a\u8eab\u4e3a\u53ef\u9760\u6027\u548c\u4f7f\u7528\u5bff\u547d\u800c\u6253\u9020\uff0c\u5e7f\u6cdb\u4f7f\u7528\u8010\u8150\u8680\u6750\u6599\uff0c\u4e3b\u8981\u662f\u7ecf\u8fc7\u5904\u7406\u7684\u94dd\uff0c\u4fbf\u4e8e\u5728\u76d0\u6c34\u4e2d\u4f7f\u7528\u3002\u636e Flight International \u79f0\uff0cCL-415 \u5728\u6c34\u4e0a\u5177\u6709\u826f\u597d\u7684\u64cd\u63a7\u6027\uff0c\u4e0e\u5176\u4ed6\u51e0\u67b6\u4e24\u6816\u98de\u673a\u76f8\u6bd4\uff0c\u64cd\u4f5c\u8d77\u6765\u76f8\u5bf9\u5bb9\u6613\u3002 [4] CL-515 \u6700\u591a\u53ef\u5bb9\u7eb3 7,000 \u5347\uff081,850 \u7f8e\u5236\u52a0\u4ed1\uff09\uff0c\u5e76\u4e14\u91cd\u65b0\u586b\u5145\u65f6\u95f4\u4e3a 14 \u79d2\u3002 [2] \u98de\u673a\u9700\u8981 1,340 m (4,400 ft) \u7684\u53ef\u98de\u884c\u957f\u5ea6\u624d\u80fd\u4ece 15 m (49 ft) \u9ad8\u5ea6\u4e0b\u964d\uff0c\u5728 12 \u79d2 410 \u7c73\u957f\u7684\u98de\u884c\u4e2d\u6c72\u53d6 6,137 \u5347\uff081,350 \u82f1\u5236\u52a0\u4ed1\uff1b1,621 \u7f8e\u5236\u52a0\u4ed1\uff09\u6c34(1,350 ft) \u4ee5 70 \u8282\uff08130 \u516c\u91cc/\u5c0f\u65f6\uff1b81 \u82f1\u91cc/\u5c0f\u65f6\uff09\u7684\u901f\u5ea6\u5728\u6c34\u9762\u4e0a\u5954\u8dd1\uff0c\u7136\u540e\u722c\u56de 15 m\uff0849 \u82f1\u5c3a\uff09\u9ad8\u5ea6\u3002\u98de\u673a\u8fd8\u53ef\u4ee5\u5728\u8f83\u5c0f\u7684\u533a\u57df\u5185\u62fe\u53d6\u90e8\u5206\u8d1f\u8f7d\uff0c\u5e76\u4e14\u5728\u5fc5\u8981\u65f6\u53ef\u4ee5\u5728\u8200\u8d77\u7684\u540c\u65f6\u8f6c\u5f2f\u3002 [26] \u6c34\u5f39\u7cfb\u7edf\u7684\u7ba1\u7406\u901a\u8fc7\u98de\u884c\u4eea\u8868\u4e0a\u7684\u6c34\u72b6\u6001\u9762\u677f\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\uff0c\u76f4\u63a5\u63a7\u5236\u98de\u884c\u5458\uff1b\u53ef\u4ee5\u9009\u62e9\u5404\u79cd\u5206\u6563\u6a21\u5f0f\u548c\u5e8f\u5217\u3002\u8fd8\u5b58\u5728\u624b\u52a8\u64cd\u4f5c\u7684\u7d27\u6025\u503e\u5012\u6746\uff0c\u7ed5\u8fc7\u8be5\u7cfb\u7edf\u3002 [4] \u5e9e\u5df4\u8fea\u58f0\u79f0\u8be5\u673a\u578b\u6bcf\u98de\u884c\u5c0f\u65f6\u4f1a\u4ea7\u751f 6.9 \u6ef4\u6c34\u3002 [4] CL-415GR \u53d8\u4f53\u5177\u6709\u66f4\u9ad8\u7684\u64cd\u4f5c\u91cd\u91cf\uff0c\u800c CL-415 \u591a\u7528\u9014\u578b\u53f7\u53ef\u7528\u4e8e\u51c6\u519b\u4e8b\u641c\u6551\u4efb\u52a1\u548c\u516c\u7528\u8fd0\u8f93\u3002\u7531\u4e8e\u5176\u6c34\u8f70\u70b8\u673a\u548c\u706d\u706b\u5668\u7684\u6027\u80fd\u5927\u5927\u589e\u5f3a\uff0c\u8be5\u98de\u673a\u53d6\u81ea\u5176\u524d\u8eab\u7684\u7ef0\u53f7\uff0c\u56e0\u6b64\u83b7\u5f97\u4e86\u201c\u8d85\u7ea7\u94f2\u8fd0\u673a\u201d\u7684\u79f0\u53f7\u3002\u4e3a\u4e86\u8868\u5f70\u5176\u80fd\u529b\uff0c\u8be5\u98de\u673a\u4e8e 2006 \u5e74\u88ab\u897f\u73ed\u7259\u7684 Asociacion para la Promocion de Actividades Socioculturees (APAS) \u6388\u4e88 Batefuegos de oro\uff08\u91d1\u706d\u706b\u5668\uff09\uff1b\u8be5\u5956\u9879\u5f15\u7528\u90e8\u5206\u5185\u5bb9\u4e3a\u201c\u8fd9\u662f\u7a7a\u4e2d\u6253\u51fb\u68ee\u6797\u706b\u707e\u6700\u6709\u6548\u7684\u5de5\u5177\uff0c\u662f\u8bb8\u591a\u56fd\u5bb6\u7ec4\u7ec7\u6d88\u9632\u7684\u5173\u952e\u3002\u4e3a\u6ee1\u8db3\u68ee\u6797\u6d88\u9632\u9700\u6c42\u800c\u4e0d\u65ad\u6539\u8fdb\uff0c\u4f7f\u8fd9\u4e9b\u98de\u673a\u6210\u4e3a\u7a7a\u4e2d\u610f\u5473\u7740 30 \u591a\u5e74\u6765\u9700\u6c42\u6700\u5927\u3002\u201d [27] \u52301999\u5e74\uff0c\u8be5\u578b\u53f7\u5171\u83b7\u5f9751\u4e2a\u8ba2\u5355\uff1b\u636e\u62a5\u9053\uff0c\u8fd0\u8425\u5546\u4e3b\u8981\u5c06 CL-415 \u7528\u4e8e\u6d88\u9632\u548c\u6d77\u4e0a\u641c\u6551\u76ee\u7684\u3002 [28] \u5728\u5efa\u9020\u7684 95 \u67b6\u4e2d\uff0c\u636e\u62a5\u9053\u6709 7 \u67b6\u5728 2007 \u5e74 12 \u6708\u4e4b\u524d\u56e0\u6570\u8d77\u4e8b\u6545\u800c\u9000\u5f79\u3002 [29]\n\u589e\u5f3a\u578b\u7a7a\u4e2d\u6d88\u9632\u5458\u3002 [31] 2019 \u5e74\uff0c\u53d1\u5c04\u5ba2\u6237 Bridger Aerospace \u8ba2\u8d2d\u4e86 6 \u67b6 CL-415EAF Superscooper \u98de\u673a\uff0c\u5c06\u4e8e 2020 \u5e74 4 \u6708\u4ea4\u4ed8\u3002 [32] \u66f4\u65b0\u4e86\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u7684 CL-415 \u7684\u591a\u7528\u9014\u7248\u672c\u3002 [16] 2019 \u5e74 6 \u6708 21 \u65e5\uff0c\u5370\u5ea6\u5c3c\u897f\u4e9a\u56fd\u9632\u90e8\u5ba3\u5e03\u5c06\u8d2d\u4e70 6 \u67b6 CL-515\uff0c\u5c06\u4e8e 2024 \u5e74\u4ea4\u4ed8\u3002 [33] [34] 2019 \u5e74\u6570\u636e\uff0c\u6240\u6709\u5176\u4ed6\u6570\u636e\u5747\u4e3a 2016 \u5e74\u3002Air Spray\uff0c\u5e03\u6cd5\u7f57\u822a\u7a7a\u516c\u53f8\uff0cConair \u96c6\u56e2\uff0c\u653f\u5e9cNewfoundland and Labrador, Service a\u00e9rien gouvernemental (Quebec), Longview Aviation Asset Management Corp., Longview Aviation Services Inc., \u66fc\u5c3c\u6258\u5df4\u7701\uff0c\u81ea\u7136\u8d44\u6e90\u90e8\uff08\u5b89\u5927\u7565\u7701\uff09\uff0c\u73af\u5883\u90e8\uff08\u8428\u65af\u5580\u5f7b\u6e29\u7701\uff09 \u5bb9\u91cf\uff1a6,137 \u5347\uff081,350 \u82f1\u52a0\u4ed1\uff09 ; 1,621 \u7f8e\u56fd\u52a0\u4ed1\uff09\uff08\u6c34\u5f39\u8f70\u70b8\uff09\uff0c\u6700\u591a 18 \u540d\u4f1e\u5175\uff0c\u6700\u591a 2,903 \u516c\u65a4\uff086,400 \u78c5\uff09\u8d27\u7269\u52a8\u529b\u88c5\u7f6e\uff1a2 \u00d7 Pratt &amp; Whitney Canada PW123AF \u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\uff0c1,775 kW\uff082,380 hp\uff09\uff1a\u6bcf\u4e2a ISA+20\u00ba \u6241\u5e73\u87ba\u65cb\u6868-bladed Hamilton Sunstrand 14SF-19\uff0c\u76f4\u5f84 3.97 m\uff0813 ft 0 in\uff09 \u5b8c\u5168\u53ef\u9006\uff0c\u7fbd\u72b6\u53f6\u7247\u6e21\u8f6e\u822a\u7a0b\uff1a2,427 km\uff081,508 mi\uff0c1,310 nmi\uff09278 km/h\uff08150 kn\uff09\u8fdc\u7a0b\u5de1\u822a\n\u970d\u5c3c\u97e6\u5c14 EFIS\u3001Primus II \u5bfc\u822a/\u901a\u4fe1\u65e0\u7ebf\u7535\u7cfb\u7edf\u3001VOR\u3001ILS\u3001MKR\u3001ADF\u3001DME\u3001AA-300 \u65e0\u7ebf\u7535\u9ad8\u5ea6\u8ba1 ^\u201c\u4e24\u6816\u98de\u673a \u2013 \u72b6\u6001\u62a5\u544a \u2013 \u5e9e\u5df4\u8fea\u201d\u3002 2013 \u5e74 11 \u6708 8 \u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002^ abcdefghi Gerzanics, Mike\uff082009 \u5e74 8 \u6708 21 \u65e5\uff09\u3002 \u201c\u98de\u884c\u6d4b\u8bd5\uff1a\u5e9e\u5df4\u8fea 415 - \u8d85\u7ea7\u76f4\u5347\u673a\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 ^ ab \u53e4\u5c14\u5fb7\uff0c\u4f0a\u6069 CL-215 \u201c\u6c34\u5c04\u6d41\u201d\u3002 Flight International\uff0c1988 \u5e74 12 \u6708 31 \u65e5\u3002 23. ^ Jens Flottau\u3001Graham Warwick \u548c Guy Norris\uff082017 \u5e74 10 \u6708 27 \u65e5\uff09\u3002 \u201c\u7a7a\u4e2d\u5ba2\u8f66/\u5e9e\u5df4\u8fea C \u7cfb\u5217\u4ea4\u6613\u5177\u6709\u5e7f\u6cdb\u7684\u5f71\u54cd\u201d\u3002\u822a\u7a7a\u5468\u548c\u7a7a\u95f4\u6280\u672f\u3002 ^ \u201c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u6536\u8d2d\u5e9e\u5df4\u8fea\u7684\u8d44\u4ea7\u201d\u3002\u7fc5\u8180\u6742\u5fd7\u3002 2005 \u5e74 5 \u6708 5 \u65e5\u3002\u539f\u4ef6\u5b58\u6863\u4e8e 2014 \u5e74 5 \u6708 28 \u65e5\u3002 ^ \u7ef4\u4eac\u822a\u7a7a\u6709\u9650\u516c\u53f8\uff082006 \u5e74 2 \u6708 23 \u65e5\uff09\u3002 \u201cViking \u4ece\u5e9e\u5df4\u8fea\u83b7\u5f97 de Havilland Canada Heritage \u98de\u673a\u7684\u578b\u53f7\u8bc1\u4e66\u201d\uff08\u65b0\u95fb\u7a3f\uff09\u3002\n^ \u201c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u4e3a\u5e9e\u5df4\u8fea\u4e24\u6816\u52a8\u7269\u8d2d\u200b\u200b\u4e70\u578b\u53f7\u8bc1\u4e66\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 2016 \u5e74 6 \u6708 21 \u65e5\u3002^\u201c\u7ef4\u4eac\u822a\u7a7a\u6709\u9650\u516c\u53f8\u4ece\u5e9e\u5df4\u8fea\u624b\u4e2d\u6536\u8d2d\u4e86\u5168\u7403 CL-415 \u6c34\u4e0a\u98de\u673a\u8ba1\u5212\u201d\uff08\u65b0\u95fb\u7a3f\uff09\u3002\u7ef4\u4eac\u822a\u7a7a\u3002 2016 \u5e74 6 \u6708 20 \u65e5\u3002\u539f\u4ef6\u4e8e 2016 \u5e74 6 \u6708 23 \u65e5\u5b58\u6863\u3002^ ab\u201c\u5e0c\u814a\u8ba2\u5355\u6807\u5fd7\u7740 Canadair 415GR \u7684\u63a8\u51fa\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 1999 \u5e74 1 \u6708 13 \u65e5\u3002^\u201c\u52a0\u62ff\u5927\u822a\u7a7a CL-415\u201d\u3002 2007 \u5e74 12 \u6708 5 \u65e5\u5b58\u6863\u4e8e Wayback Machine baaa-acro.com\u3002\u68c0\u7d22\u65f6\u95f4\uff1a2011 \u5e74 7 \u6708 29 \u65e5\u3002^ Amy Laboda\uff082018 \u5e74 10 \u6708 12 \u65e5\uff09\u3002 \u201cViking Air Preps for Fire Season, \u66f4\u65b0 Water Scooper Line\u201d\u3002 AIN \u5728\u7ebf\u3002 ^ \u201cMMEA \u4f7f\u7528 198,000 \u5347\u6c34\u6765\u6251\u706d\u7f8e\u91cc\u7684\u68ee\u6797\u706b\u707e\u201d\u3002\u4f2f\u7eb3\u9a6c\u3002\u9a6c\u6765\u90ae\u62a5\u3002 2019 \u5e74 8 \u6708 16 \u65e5\u3002\u76ae\u514b\u52d2\u3001\u7f57\u6069\u548c\u62c9\u91cc\u00b7\u7c73\u5c14\u4f2f\u91cc\u3002\u52a0\u62ff\u5927\u822a\u7a7a\u516c\u53f8\uff1a\u7b2c\u4e00\u4e2a 50 \u5e74\u3002\u591a\u4f26\u591a\uff1aCANAV \u56fe\u4e66\uff0c1995 \u5e74\u3002ISBN 0-921022-07-7\u3002\n\u9a6c\u8428\u5229\u3001\u5f17\u96f7\u5fb7\u91cc\u514b\u548c\u585e\u7f2a\u5c14\u00b7\u666e\u96f7\u5854\u3002 \u201cBombardiers d&#39;eau/Canadair Scoopers\u3002\u201d\u7248\u672c Minimonde76\uff0c2012 \u5e74 5 \u6708\uff0cISBN 978-2-95418-180-6\u3002", "note_en": "Jump to navigation  Jump to search  The  Canadair CL-415 ( Superscooper, later  Bombardier 415) is an  amphibious aircraft built originally by  Canadair and subsequently by  Bombardier and  Viking Aircraft. It is based on the  Canadair CL-215 and is designed specifically for  aerial firefighting; it can perform various other roles, such as the  search and rescue and utility transport.\n Development of the CL-415 commenced in the early 1990s, shortly after the success of the  CL-215T retrofit programme had proven a viable demand for a  turboprop-powered model of the original CL-215. Entering production in 2003, in addition to its new engines, the aircraft featured numerous modernisation efforts and advances over the CL-215, particularly in terms of its cockpit and  aerodynamics, to yield improved performance. By the time the programme&#39;s production phase had commenced, it was owned by Bombardier, who continued production up until 2015. During October 2016, the CL-415 programme was acquired by Viking Aircraft; this company has produced a further modernised model of the aircraft, designated as the CL-515 or the Viking Canadair 515 First Responder.  [2]\n    Introduced during 1966, the CL-215 was the first aircraft specifically designed to be a  water bomber.  [3] A total of 125 aircraft were constructed prior to the final CL-215 being delivered during May 1990.  [4]\n During 1987, in response to prevailing market trends towards more efficient, powerful and reliable  turboprop powerplants, Canadair undertook the task of retrofitting 17  CL-215 airframes with the  Pratt &amp; Whitney Canada  PW123AF engines. This engine provided a 15 percent power increase over the original  piston engines, as well as enhanced reliability and safety. The retrofitted aircraft were designated  CL-215T.  [5] Speaking during the new model&#39;s development, company officials recognised that market demand for the CL-215T was marginal, and thus not enough to justify developing an all-new aircraft.  [5] Despite this, it featured numerous enhancements, including the addition of powered flight controls,  air conditioning in the  cockpit, as well as various upgraded electrical and avionics systems. The most notable external features of the CL-215T retrofit were the  aerodynamic additions to the  wings and  empennage.  [4]\n Having conducted the relatively successful CL-215T programme, the company decided to develop a further improved model of the aircraft  CL-415, which would take form as a new-build production series.On 6 December 1993, the CL-415 conducted its maiden flight, while the first deliveries commenced during November  1994.  [6] One year later, a 180-day sales tour traversing 21 countries commenced using a CL-415 owned by the  Quebec Government.  [7] That same year, Bombardier stated that it was in the planning phase of a six-point improvement plan for the CL-415, which was principally intended to diversify its capabilities.  [8]  [9]\n Orders for the type were promptly received from several countries, which included several  lease and purchase arrangements; by July 1996, 37 examples were reportedly in service with operators in Canada, France, Italy, and Spain.  [10]Starting in 1998, the CL-415 was being assembled at Bombardier Aerospace&#39;s facility near  North Bay/Jack Garland Airport in  North Bay, Ontario, and tested on  Lake Nipissing.  [11] During the 2010s, according to aerospace periodical  Flight International, there was a downturn in sales of the type. A total of ninety-five CL-415s had been completed when Bombardier closed down the production line in October 2015, although the company continued to actively market the type as well as to provide support for the existing fleet beyond this date.  [12]\n  For several decades, Bombardier had experienced a period of significant expansion until encountering financial hardship during the 2010s, largely brought on by the very high costs involved in developing the  CSeries narrow-body  airliner.  [13]  [14]The much smaller  Viking Aircraft started off as a component manufacturing specialist, which came to include the  licensed production of parts of several of Bombardier&#39;s discontinued aircraft range, helping operators to keep them in service.  [15]  [16]During 2008, Bombardier and Viking Air reached an arrangement under which the former sold the design documents and all intellectual property rights of its earlier bush planes to Viking.  [17]  [18]Its unit cost in 2014 was  C$36.9 million.  [19]\n On 20 June 2016, it was announced that Viking Air was in the process of purchasing the CL-415  type certificate from  Bombardier, along with the older CL-215 and CL-215T models.  [20]  [21]  [22] The acquisition was finalised on 3 October 2016.  [23] Shortly following the acquisition, Viking began work on the design of a modernised version of the aircraft, which became referred to as the  CL-515.  [16]  [24] The completed aircraft is referred to as the Viking Canadair 515 First Responder.  [2]\n During December 2018, a full-flight CL-415 simulator, capable of simulating water scoop and bombing operations, received  European Aviation Safety Agency (EASA) certification. Prior to this, pilot training had typically involved live flying of the aircraft.  [25]\n     The CL-415 has an updated cockpit, aerodynamics enhancements and changes to the water-release system as well, creating a modern  firefighting amphibious  flying boat for use in detecting and suppressing  forest fires. Compared to the CL-215, the CL-415 has increased operating weight and speed, yielding improved productivity and performance. Due to the increased power of its pair of  Pratt &amp; Whitney Canada PW123AF  turboprop engines, each capable of generating up to 1,775kw of thrust, these are located closer to the fuselage in comparison to the CL-215&#39;s arrangement.  [4] While this repositioning would typically reduce lateral stability on its own, this is rectified via the addition of an inverted fixed  leading edge  slat forward of the righthand horizontal stabiliser. Furthermore,  winglets have been adopted on this model for the purpose of improving directional stability.  [4]\n The CL-415 can scoop up to 6,140\u00a0l (1,350\u00a0imp\u00a0gal; 1,620\u00a0US\u00a0gal) of water from a nearby water source, mix it with a chemical foam if desired, and drop it on a fire without having to return to base to refill its tanks.  [4] The CL-415 was specifically developed to provide the capability to deliver large quantities of suppressant in quick response to fires. This is stored within large tanks which are located mostly beneath the cabin floor within the hull, although a header tank above this level is present on either side of the fuselage.  [4] The airframe is built for reliability and longevity, making extensive use of  corrosion-resistant materials, predominantly treated  aluminium, that facilitates its use in salt water. According to Flight International, the CL-415 has good handling on the water, being relatively easy to operate in comparison with several other amphibious aircraft.  [4] The CL-515 can hold up to 7,000 litres (1,850 US gallons), and has a refill time of 14 seconds.  [2]\n The aircraft requires 1,340\u00a0m (4,400\u00a0ft) of flyable length to descend from 15\u00a0m (49\u00a0ft) altitude, scoop 6,137\u00a0l (1,350\u00a0imp\u00a0gal; 1,621\u00a0US\u00a0gal) of water during a twelve-second 410-metre-long (1,350\u00a0ft) run on the water at 70  knots (130\u00a0km/h; 81\u00a0mph), then climb back to 15\u00a0m (49\u00a0ft) altitude. The aircraft can also pick up partial loads in smaller areas, and can turn while scooping if necessary.  [26] Management of the water bombing system is centralised via a water status panel on the flight instrumentation, giving direct control to the pilots; various dispersal patterns and sequences can be selected. A manually-operated emergency dump lever is also present, bypassing this system.  [4] Bombardier have claimed that the type performs 6.9 water drops for every flight hours of the type.  [4] The  CL-415GR variant features higher operating weights, while the CL-415 multi-role model is available for purposes in a paramilitary  search and rescue role and utility transport.\n   Derived from its predecessor&#39;s nickname, the aircraft has acquired the name &#34;Super Scooper&#34; in light of its greatly enhanced performance as a water bomber and fire suppresser. In recognition of its abilities, the aircraft was awarded in 2006 the  Batefuegos de oro (gold fire extinguisher) by the  Asociacion para la Promocion de Actividades Socioculturales (APAS) in Spain; the award citation in part read &#34;This is the most efficient tool for the aerial combat of forest fires, key to the organization of firefighting in a large number of countries. The continuous improvements to meet the needs of forest firefighting have made these aircraft the aerial means most in demand over more than 30 years.&#34;  [27]\n By 1999, a total of 51 orders had been secured for the type; operators have reportedly predominantly used the CL-415 for firefighting and maritime search and rescue purposes.  [28] Of the 95 built, seven had reportedly been removed from service as a result of several accidents by December 2007.  [29]\n     Enhanced Aerial Firefighter.  [31] In 2019, six CL-415EAF Superscooper aircraft were ordered by launch customer, Bridger Aerospace, due for delivery in April 2020.  [32]\n Updated multirole version of the CL-415 under development by  Viking Air of  British Columbia.  [16] On 21 June 2019, the  Indonesian Ministry of Defense announced it was purchasing six CL-515s for delivery in 2024.  [33]  [34]\n      2019 figures, all others 2016.  Air Spray,  Buffalo Airways,  Conair Group,  Government of Newfoundland and Labrador,  Service a\u00e9rien gouvernemental (Quebec), Longview Aviation Asset Management Corp., Longview Aviation Services Inc.,  Province of Manitoba,  Ministry of Natural Resources (Ontario),  Ministry of Environment (Saskatchewan)\n         Capacity: 6,137\u00a0l (1,350\u00a0imp\u00a0gal; 1,621\u00a0US\u00a0gal) (waterbombing), up to 18 paratroops, up to 2,903\u00a0kg (6,400\u00a0lb) of cargo\n           Powerplant: 2 \u00d7  Pratt &amp; Whitney Canada PW123AF  turboprop, 1,775\u00a0kW (2,380\u00a0hp) each ISA+20\u00baC Flat rated\n Propellers: 4-bladed Hamilton Sunstrand 14SF-19, 3.97\u00a0m (13\u00a0ft 0\u00a0in) diameter Fully reversible, feathering blades\n  Ferry range: 2,427\u00a0km (1,508\u00a0mi, 1,310\u00a0nmi) 278\u00a0km/h (150\u00a0kn) Long Range Cruise\n  Honeywell  EFIS, Primus II Nav/Comm Radio System, VOR, ILS, MKR, ADF, DME, AA-300 Radio Altimeter\n         ^    &#34;Amphibious aircraft \u2013 Status report \u2013 Bombardier&#34;. Archived from  the original on 8 November 2013.\n   ^     a     b     c     d     e     f     g     h     i    Gerzanics, Mike (21 August 2009).  &#34;FLIGHT TEST: Bombardier 415 - The superscooper&#34;. Flight International.\n ^     a     b  Goold, Ian  CL-215 &#34;Water Jet&#34;.  Flight International, 31 December 1988. p. 23.\n         ^    Jens Flottau, Graham Warwick and Guy Norris (27 October 2017).  &#34;Airbus/Bombardier C Series Deal Has Broad Implications&#34;.  Aviation Week &amp; Space Technology.\n   ^     &#34;Viking Air acquires assets of Bombardier&#34;.  Wings Magazine. 5 May 2005. Archived from  the original on 28 May 2014 .\n ^    Viking Air Limited (23 February 2006).  &#34;Viking Acquires Type Certificates for de Havilland Canada Heritage Aircraft from Bombardier&#34; (Press release).\n  ^     &#34;Viking Air to buy type certificates for Bombardier amphibians&#34;. Flight International. 21 June 2016.\n  ^     &#34;Viking Air Limited Acquires Worldwide CL-415 Waterbomber Program from Bombardier&#34; (Press release). Viking Air. 20 June 2016. Archived from  the original on 23 June 2016.\n      ^     a     b     &#34;Greek order marks launch of Canadair 415GR&#34;. Flight International. 13 January 1999.\n ^   &#34;Canadair CL-415.&#34;  Archived 5 December 2007 at the  Wayback Machine  baaa-acro.com. Retrieved: 29 July 2011.\n      ^    Amy Laboda (October 12, 2018).  &#34;Viking Air Preps for Fire Season, Updates Water Scooper Line&#34;.  AIN online.\n   ^     &#34;MMEA uses 198,000 litres of water to fight forest fire in Miri&#34;.  Bernama. The Malay Mail. 16 August 2019 .\n  Pickler, Ron and  Larry Milberry.  Canadair: The First 50 Years. Toronto: CANAV Books, 1995.   ISBN\u00a0 0-921022-07-7.\n  Marsaly, Frederic and Samuel Pretat.  &#34;Bombardiers d&#39;eau/ Canadair Scoopers.&#34;  Editions Minimonde76, May 2012,   ISBN\u00a0 978-2-95418-180-6.", "posttime": "2021-08-08 08:43:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "canadaair,canadair,\u98de\u673a", "title": "Canadaair CL-415 \u7a7a\u4e2d\u6d88\u9632\u5458", "title_en": "Canadair CL-415 Aerial Firefighter", "transed": 1, "url": "https://en.wikipedia.org/wiki/Canadair_CL-415", "via": "", "real_tags": ["canadaair", "canadair", "\u98de\u673a"]}]
[{"category": "", "categoryclass": "", "imagename": "2abdb4598c84f733ef11024c5f245f72.jpeg", "infoid": 1068386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "//\uff0334;\u6216\u8005\u7b49\u4e8e\uff06\uff0334; x || = y; x || \uff08x = y\uff09; //\uff0334;\u548c\u548c\u7b49\u4e8e\uff06\uff0334; x\uff06amp;\uff06amp; = y; x\uff06amp;\uff06amp; \uff08x = y\uff09; //\uff0334; QQ\u7b49\u4e8e\uff06\uff0334; x ?? = y; x ?? \uff08x = y\uff09;\n const updateId = user =\uff06gt; {//\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u6b64\u64cd\u4f5cif\uff08\uff01user.id\uff09user.id = 1 //\u6216\u6b64user.id = user.id || 1 //\u6216\u4f7f\u7528\u903b\u8f91\u5206\u914d\u8fd0\u7b97\u7b26\u3002 user.id || = 1}\n    1_000_000_000 //\u554a\uff0c\u56e0\u6b64\u5f88\u5c11\u5341\u4ebf101_475_938.38 //\u8fd9\u662f\u6570\u4ebf\u6b21\u8ba9\u8d39\u7528= 123_00; // 123\u7f8e\u5143\uff0812300\u7f8e\u5206\uff0c\u663e\u7136\uff09\u8ba9\u8d39\u7528= 12_300; // 12,300\u7f8e\u5143\uff08WOAH\uff0c\u90a3\u8d39\u7528\uff01\uff09\u8ba9\u91d1\u989d= 12345_00; // 12,345\uff081234500\u7f8e\u5206\uff0c\u663e\u7136\uff09\uff0c\u8fbe\u5230123_4500; // 123.45\uff084\u56fa\u5b9a\u8d22\u52a1\uff09\uff0c\u79df\u7528= 1_234_500; // 1,234,500.\n    promise.any\uff08[\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a//v8.dev/&#39;\uff09.then\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u5bb6\u5ead\uff06\uff0339;\uff09\uff0c\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a //v8.dev/blog&#39;\uff09\u3002\u7136\u540e\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u535a\u5ba2\uff06\uff0339;\uff09\uff0cfetch\uff08\uff06\uff0339; https\uff1a//v8.dev/docs&#39;\uff09.thgh \uff08\uff08\uff09=\uff06gt;\uff06\uff0339; docs\uff06\uff0339;\uff09]\uff09\u3002\u7136\u540e\uff08\uff08first\uff09=\uff06gt; {//\u4efb\u4f55\u627f\u8bfa\u90fd\u5df2\u6ee1\u8db3\u3002Console.log\uff08\u7b2c\u4e00\uff09; //\u2192\uff06\uff0339;\u4e3b\u9875\uff06\uff0339;}\uff09\u3002catch\uff08\uff08\u9519\u8bef\uff09=\uff06gt; {//\u6240\u6709\u7684\u627f\u8bfa\u88ab\u62d2\u7edd\u4e86\u3002console.log\uff08\u9519\u8bef\uff09;}\uff09;\n       \u8ba9\u76ee\u6807= {};\u8ba9WR =\u65b0\u7684\u5f31ref\uff08\u76ee\u6807\uff09; // wr\u548ctarget areN\uff06\uff0339; t\u76f8\u540c//\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6ce8\u518c\u8868constregry = new finalizationregistry\uff08hettvalue =\uff06gt; {// ....}\uff09; registry.register\uff08MyObject\uff0c\uff06\uff0334;\u4e00\u4e9b\u4ef7\u503c\u548c\uff0334;\uff0cmyobject\uff09; // ......\u540e\u6765\uff0c\u5982\u679c\u4f60\u4e0d\u5728\u4e4e...... myObject`\u4e86...\u6ce8\u518c\u8868.unRegister\uff08MyObject\uff09;\n  \u7528\u2665hemanth.hm. ", "note_en": "//&#34;Or Or Equals&#34;x ||= y;x || (x = y); // &#34;And And Equals&#34;x &amp;&amp;= y;x &amp;&amp; (x = y); // &#34;QQ Equals&#34;x ??= y;x ?? (x = y);\n const updateID =   user =&gt; {  // We can do this  if (!user.id) user.id =  1  // Or this user.id = user.id ||  1  // Or use logical assignment operator. user.id ||=  1}\n    1_000_000_000  // Ah, so a billion 101_475_938.38  // And this is hundreds of millions let fee =  123_00;  // $123 (12300 cents, apparently) let fee =  12_300;  // $12,300 (woah, that fee!) let amount =  12345_00;  // 12,345 (1234500 cents, apparently) let amount =  123_4500;  // 123.45 (4-fixed financial) let amount =  1_234_500;  // 1,234,500\n    Promise.any([ fetch( &#39;https://v8.dev/&#39;).then( () =&gt;  &#39;home&#39;), fetch( &#39;https://v8.dev/blog&#39;).then( () =&gt;  &#39;blog&#39;), fetch( &#39;https://v8.dev/docs&#39;).then( () =&gt;  &#39;docs&#39;)]).then( ( first) =&gt; {  // Any of the promises was fulfilled.  console.log(first);  // \u2192 &#39;home&#39;}).catch( ( error) =&gt; {  // All of the promises were rejected.  console.log(error);});\n       let target = {}; let wr =  new WeakRef(target); //wr and target aren&#39;t the same // Creating a new registry const registry =  new FinalizationRegistry(  heldValue =&gt; {  // ....});registry.register(myObject,  &#34;some value&#34;, myObject); // ...some time later, if you don&#39;t care about `myObject` anymore...registry.unregister(myObject);\n  With \u2665  Hemanth.HM", "posttime": "2021-06-26 13:02:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "es2021,gt", "title": "ES2021\u529f\u80fd ", "title_en": "ES2021 Features", "transed": 1, "url": "https://h3manth.com/ES2021/", "via": "", "real_tags": ["es2021", "gt"]}, {"category": "", "categoryclass": "", "imagename": "a042f04ee890d6ddde13f09842445c23.png", "infoid": 1068385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u4ec5\u5728\u51e0\u884cJavaScript\u4e2d\u521b\u5efa\u8d85\u7ea7\u591a\u529f\u80fd\u751f\u6210/\u968f\u673a\u7f51\u683c\u5e03\u5c40\u3002\u4f7f\u7528\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u968f\u673a\u6570\uff0c\u6e90\u56fe\u50cf\uff0c\u7528\u6237\u8f93\u5165\u7b49\u548c\u8c10\u7f51\u683c\u751f\u6210\u548c\u8c10\u7f51\u683c\u3002\n \u6df7\u4e71\uff0c\u4f46\u5b8c\u7f8e\u5bf9\u9f50\u7684\u751f\u6210\u7f51\u683c\u4e16\u754c\u6b63\u5728\u7b49\u5f85\u6211\u4eec - \u8ba9\u6211\u4eec\u8d70\uff01\n \u6ce8\u610f\uff1a\u6211\u4ece\u4e94\u89d2\u661f\u6587\u4ef6\u4e2d\u83b7\u53d6\u4e86\u6211\u7684\u5386\u53f2\u6700\u559c\u6b22\u7684\u8bbe\u8ba1\u4ee3\u7406\u4eba\u4e4b\u4e00\u3002\u5728\u4ed6\u4eec\u4e3aGraphCore\u7684\u54c1\u724c\u5de5\u4f5c\u4e2d\uff0c\u5b83\u4eec\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u56db\u80a2\u66f2\u7ebf\u6765\u751f\u6210\u968f\u673a\u4e14\u89c6\u89c9\u76f8\u5e72\u7684\u6a21\u5f0f\u3002\u8f93\u51fa\u4ee4\u4eba\u60ca\u53f9\uff0c\u5e76\u4e14\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u521b\u5efa\u7684\u5947\u5999\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u6b64\u5904\u7684\u5de5\u4f5c\u6848\u4f8b\u7814\u7a76\uff01\n  \u9996\u5148\u662f\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u672c\u6559\u7a0b\u4e2d\u5b8c\u6210\u6211\u4eec\u6b63\u5728\u70f9\u996a\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u4e2a\u52a8\u753b\u7684Quadtree\u7f51\u683c\u4e2d\u7684\u52a8\u753b\u793a\u4f8b\uff1a\n   \u5c06\u4e00\u4e9b{x\uff0cy}\u6dfb\u52a0\u52302d\u7a7a\u95f4\u3002\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u70b9\u7684\u4f4d\u7f6e\u662f\u968f\u673a\u7684\uff0c\u4f46\u671d\u5411\u7126\u70b9\u504f\u7f6e\u3002\n   \u4f7f\u7528\u751f\u6210\u7684\u7f51\u683c\u533a\u57df\u6765\u5b9a\u4f4d\u4e1c\u897f\uff01\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4f7f\u7528\u6b63\u65b9\u5f62\u548c\u5706\u5708\u6765\u5f62\u6210\u7b80\u5355\u7684\u6a21\u5f0f\u3002\n  \u901a\u8fc7\u5c1d\u8bd5\u5177\u6709\u521b\u9020\u6027\u7684\u65b9\u5f0f\u6765\u5b9a\u4f4d\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u8d85\u7ea7\u6709\u8da3\u7684\u7f51\u683c\u5e03\u5c40\u3002\u6b64\u793a\u4f8b\u4f7f\u7528\u504f\u89c1\u968f\u673a\u6570\uff0c\u4f46\u5982\u679c\u662f\uff0c\u5219\u4f55\u65f6\u4f55\u5730\u6765\u81ea\u56fe\u50cf\u7684\u4eae\u5ea6\u503c\uff1f \n\u6211\u4eec\u53ef\u4ee5\u5728\u6590\u6ce2\u90a3\u514b\u62c9\u65af\uff0c\u4e00\u4e2a\u5706\u5f62\uff0c\u5e7f\u573a\uff0c\u65e0\u8bba\u5982\u4f55\u7684\u7167\u7247\u4e2d\u4f20\u9012\uff0c\u5e76\u6839\u636e\u5176\u50cf\u7d20\u503c\u751f\u6210\u6211\u4eec\u7684\u70b9\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\uff01\u4efb\u4f55\u7528\u4e8e\u57282D\u7a7a\u95f4\u4e2d\u5b9a\u4f4d\u5bf9\u8c61\u7684\u65b9\u6cd5\u90fd\u5c06\u8d77\u4f5c\u7528\u3002\u9ece\u601d\uff0c\u8d8a\u597d\u3002\n  \u6211\u4eec\u5728\u8fd9\u91cc\u770b\u5230\u7684\u7ec6\u5206\u9b54\u6cd5\u5168\u90e8\u7531\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\u5904\u7406\u3002\u6211\u559c\u6b22\u50cf\u5c0f\u5bb9\u5668\u4e00\u6837\u60f3\u5230\u56db\u8f6e\u8282\u3002\u4e00\u65e6Quadtree\u586b\u5145\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\uff0c\u5b83\u5c31\u4f1a\u5c06\u5176\u81ea\u8eab\u62c6\u5206\u4e3a\u56db\u4e2aQuadtrees\u3002\u4e00\u65e6\u90a3\u4e9bQuadtrees\u586b\u6ee1\uff0c\u4ed6\u4eec\u518d\u6b21\u5212\u5206\u81ea\u5df1\uff0c\u7b49\u7b49\u3002\n Quadtree\u53ef\u4ee5\u68d8\u624b\u53ef\u89c6\u5316\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u793a\u4f8b - \u5355\u51fb\u4ee5\u6dfb\u52a0\u5bf9\u8c61/\u70b9\u5e76\u89c2\u5bdfQuadtree Subdivides\u7684\u65b9\u5f0f\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0cQuadtree\u53ef\u4ee5\u5305\u542b\u7684\u6700\u5927\u9879\u76ee\u6570\u662f\u56db\u4e2a\u3002\n  \u975e\u5e38\u6ee1\u8db3......\u8fd9\u662f\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7684\u4e00\u5207\u5173\u4e8e\u8fd9\u4e00\u6559\u7a0b\u7684\u56db\u7ae0\uff0c\u4f46\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ed6\u4eec\u5982\u4f55\u5de5\u4f5c/\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\uff0c\u8bf7\u67e5\u770b\u4e39Shiffman\u7684\u8fd9\u6bb5\u89c6\u9891\u3002\n  \u867d\u7136\u4efb\u4f55\u4eba\u90fd\u662f\u6b22\u8fce\u6765\u9075\u5faa - \u672c\u6559\u7a0b\u975e\u5e38\u9002\u5408\u4e0eJavaScript\u8212\u9002\u7684\u4eba\uff0c\u719f\u6089SVG / HTML\u753b\u5e03\u3002\n   \u4e3a\u4e86\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u6709\u8da3\u7684\u4e1c\u897f - \u6211\u5df2\u7ecf\u5411\u6211\u7684\u751f\u6210-Utils repo\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684createqtgrid\u51fd\u6570\u3002\u6b64\u51fd\u6570\u9700\u8981\u4e00\u7cfb\u5217\u70b9\u5e76\u8fd4\u56de\u5373\u7528\u7684Quadtree\u7f51\u683c\u3002\u5982\u679c\u60a8\u5e0c\u671b\u6f5c\u5165\u6e90\u4ee3\u7801\uff0c\u5219\u5728\u6b64\u5b58\u50a8\u5e93\u4e2d\u53ef\u7528\u3002\n \u6211\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u7f62\u5de5\u7801\u5934\uff0c\u4f60\u53ef\u4ee5\u53c9\u5f00\u59cb\u3002\u8fd9\u652f\u7b14\u6709\u5373\u5c06\u5230\u6765\u7684\u793a\u4f8b\u6240\u9700\u7684\u6240\u6709JS\u5bfc\u5165/\u57fa\u672cCSS\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u6b22\u8fce\u60a8\u5728\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u73af\u5883\u4e2d\u5173\u6ce8\u3002 \n\u8981\u5f00\u59cb\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2aQuadtree\u7f51\u683c\uff0c\u5e76\u504f\u89c1\u968f\u673a\u5206\u5e03\u70b9\u3002\u504f\u89c1\u968f\u673a\u6570\u5728\u8fd9\u91cc\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u5f3a\u70c8\u7684\u89c6\u89c9\u7126\u70b9\u3002\u5177\u6709\u8bbd\u523a\u7684\u968f\u673a\u6027\uff0c\u8bbd\u523a\u7684\u662f\uff0c\u5f80\u5f80\u6709\u70b9\u65e0\u804a\u5730\u4e3a\u56db\u80a2\u7f51\u683c\u3002\u7f51\u683c\u533a\u57df\u770b\u8d77\u6765\u592a\u7edf\u4e00\uff0c\u56e0\u4e3a\u8be5\u70b9\u6563\u843d\u57282D\u7a7a\u95f4\u4e0a\u3002\n \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SVG\u5143\u7d20\u5448\u73b0\u6211\u4eec\u7684\u7f51\u683c\u533a\u57df\u3002\u8ba9\u6211\u4eec\u9996\u5148\u5b9a\u4e49SVG's ViewBox\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5c5e\u6027\uff1a\n  \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\uff06lt; svg\uff06gt;\u5143\u7d20\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528svg.js  - \u4e00\u4e2a\u5927\u5927\u7b80\u5316\u4e86\u52a8\u6001SVG\u811a\u672c\u7684JavaScript\u5e93\u3002\u5728\u6211\u7684\u751f\u6210SVG\u5165\u95e8\u5957\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728SVG.js\u4e2d\u9605\u8bfb\u66f4\u591a\u4fe1\u606f\u3002\n  \u73b0\u5728\u6211\u4eec\u6709\u6211\u4eec\u7684SVG\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e9b\u504f\u89c1\u7684\u968f\u673a\u70b9\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Randombias\u51fd\u6570\u3002\u6b64\u51fd\u6570\u57fa\u4e8e\u56db\u4e2a\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570\uff1a\n \u504f\u89c1 - \u6700\u5c0f\u503c\u548c\u6700\u5927\u6570\u91cf\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u5b57\uff0c\u8fd9\u662f\u201c\u7126\u70b9\u201d\n \u5f71\u54cd -  0  -  1\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8be5\u53c2\u6570\u786e\u5b9a\u8fd4\u56de\u7684\u6570\u5b57\u53ef\u80fd\u662f\u504f\u5dee\u7684\u5173\u95ed\u7a0b\u5ea6\u3002\n \u8ba9\u6211\u4eec\u5f39\u51fa\u4e00\u4e9b\u4ee3\u7801\u6765\u751f\u6210100\u4e2a\u968f\u673a\u70b9\uff0c\u91cd\u70b9\u671d\u5411\u89c6\u56fe\u6846\u7684\u4e2d\u5fc3\uff0c\u5e76\u4f7f\u7528svg.js\u5448\u73b0\u5b83\u4eec\uff1a \nconst\u70b9= [... array\uff08100\uff09]\u3002\u6620\u5c04\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u5bbd\u5ea6/ 2,1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u9ad8\u5ea6/ 2,1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\u8981\u70b9\u3002 foreach\uff08\uff08point\uff09=\uff06gt; {svg\u3002\u5706\u5708\uff082\uff09\u3002cx\uff08point .x\uff09\u3002cy\uff08point .y\uff09;}\uff09;\n    \u8fd9\u4e2a\u70b9\u5206\u5e03\u770b\u8d77\u6765\u5f88\u53ef\u7231\uff0c\u4f46\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u4ee3\u7801\uff0c\u4ee5\u4fbf\u7126\u70b9\u53ef\u4ee5\u53d8\u5316\u4e00\u70b9\u3002\u8ba9\u6211\u4eec\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1a\n const focus = {x\uff1a\u968f\u673a\uff080\uff0c\u5bbd\u5ea6\uff09\uff0cy\uff1a\u968f\u673a\uff080\uff0c\u9ad8\u5ea6\uff09\uff0c}; const\u70b9= [... array\uff08100\uff09]\u3002\u5730\u56fe\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u7126\u70b9.x\uff0c1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u7126\u70b9\uff0c1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\n \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u968f\u673a\u51fd\u6570\u6765\u5728\u7f51\u683c\u4e0a\u751f\u6210\u968f\u673a{x\uff0cy}\u7126\u70b9\u70b9\u3002\u66f4\u65b0\u4ee3\u7801\u540e\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u8fd9\u6837\u7684\u5185\u5bb9\uff1a\n  \u5b8c\u7f8e\u7684\uff01\u8fd9\u79cd\u805a\u7126\u5c1a\u968f\u673a\u7684\u5206\u5e03\u5c06\u975e\u5e38\u9002\u5408\u56db\u6805\u683c\u7f51\u683c\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\uff1a\n  \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u5bbd\u5ea6\u503c\uff0c\u9ad8\u5ea6\u503c\uff0c\u7ea7\u522b\u9650\u5236\u4ee5\u53ca\u6211\u4eec\u521a\u624d\u751f\u6210\u7684\u70b9\u7684CreateQTGrid\u3002\u6211\u4eec\u8fd8\u901a\u8fc7\u5dee\u8ddd\u5c5e\u6027\u6765\u7ed9\u7f51\u683c\u533a\u6709\u70b9\u547c\u5438\u5ba4\u3002\n \u7535\u5e73\u9650\u5236\uff08\u7531MaxQtlevels\u63a7\u5236\uff09\u5b9a\u4e49\u4e86Quadtree\u53ef\u4ee5\u7ec6\u5206\u7684\u6b21\u6570\u3002\u8f83\u9ad8\u7684\u503c\uff0c\u914d\u5bf9\u8f83\u9ad8\u7684\u70b9\uff0c\u5c06\u5bfc\u81f4\u66f4\u8be6\u7ec6\u7684\u7f51\u683c\u3002 \n\u5982\u679c\u60a8\u73b0\u5728\u7684console.log\uff08\u7f51\u683c\uff09\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u4e00\u4e2a\u5177\u6709\u5c11\u6570\u4e0d\u540c\u5c5e\u6027\u7684\u5bf9\u8c61 - \u4f46\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u5bf9\u7f51\u683c\u533a\u57df\u611f\u5174\u8da3\u3002\u8ba9\u6211\u4eec\u904d\u5386\u8fd9\u4e9b\u5e76\u6e32\u67d3SVG\uff06lt; rect\uff06gt;\u6bcf\u4e00\u4e2a\u4eba\uff1a\n    \u4f18\u79c0\u7684\u3002\u5c31\u662f\u8fd9\u6837\uff01\u6211\u4eec\u5df2\u6210\u529f\u5730\u751f\u6210\u4e86\u4e00\u4e2a\u7f8e\u4e3d\u7684\u751f\u6210\u7f51\u683c\uff0c\u968f\u65f6\u51c6\u5907\u5145\u6ee1\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc\u662f\u6211\u4eec\u5982\u4f55\u5c06\u5706\u5708\u6dfb\u52a0\u5230\u968f\u673a\u9009\u62e9\u7f51\u683c\u533a\u57df\uff1a\n  \u563f\uff0c\u8fd9\u662f\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u539f\u79cd\u827a\u672f\uff01\u6240\u6709\u53ea\u662f\u51e0\u884c\u4ee3\u7801\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u8fd9\u4e2a\u6f14\u793a\uff0c\u4f46\u4f5c\u4e3a\u4e0b\u4e00\u6b65\uff0c\u6211\u5efa\u8bae\u4f7f\u7528\u70b9\u6570\uff0c\u6700\u5927\u7ec6\u5206\u91cf\uff08maxqtevels\uff09\u548c\u70b9\u5206\u5e03\u903b\u8f91 - \u770b\u770b\u4f60\u53ef\u4ee5\u521b\u9020\u7684\u4e1c\u897f\uff01\n  \u5728\u751f\u6210\u7684Quadtree\u83dc\u5355\u4e0a\u63a5\u4e0b\u6765\u662f\u4e00\u4e9b\u57fa\u4e8e\u56fe\u50cf\u7684\u7f51\u683c\u3002\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u56fe\u50cf\u6587\u4ef6\u7684\u50cf\u7d20\u503c\u6765\u786e\u5b9a\u6211\u4eec\u7684\u5e95\u5c42\u70b9\u3002\n \u8981\u8bbe\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5728\u6700\u540e\u4e00\u4e2a\u6f14\u793a\u4e2d\u5b9a\u4e49\u7684SVG\u5143\u7d20\u548c\u5bbd\u5ea6/\u9ad8\u5ea6\u53d8\u91cf\u3002\u6ce8\u91ca\u51fa\u4e0a\u4e00\u70b9\uff0c\u6e32\u67d3\u4ee3\u7801\u6216\u53c9\u7b14\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u3002\u4f60\u7684\u6765\u7535\uff01\n \u597d\u7684\uff0c\u6240\u6709\u96c6\u5408\uff1f\u8ba9\u6211\u4eec\u627e\u5230\u5408\u9002\u7684\u5f62\u8c61\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u6f14\u793a\uff0c\u4ec5\u5305\u542b\u5b8c\u5168\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7684\u7b80\u5355\u56fe\u7247\u662f\u5b8c\u7f8e\u7684\u3002\u5f62\u72b6\uff08\u5706\u5f62\uff0c\u65b9\u5f62\uff0c\u87ba\u65cb\uff09\u7684\u57fa\u672c\u8f6e\u5ed3\u662f\u7406\u60f3\u7684\u3002\u60f3\u60f3\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\n  \u5982\u679c\u60a8\u4e0d\u559c\u6b22\u97ad\u6253\u4efb\u4f55\u81ea\u5b9a\u4e49\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u8d8a\u65e9\u7684\u4e00\u4e9b\u3002 *\u4ece\u5947\u602a\u7684\u6570\u5b57\u70e4\u7bb1\u4e2d\u5220\u9664\u9884\u5148\u5236\u9020\u7684\u5f62\u72b6...... * \n\u8fd9\u4e9b\u56fe\u50cf\u7684\u5927\u5c0f\u4e3a192x192px\uff0c\u5339\u914d\u793a\u4f8bSVG ViewBox\u548cQuadtree\u7f51\u683c\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c5e\u6027\u3002\u5c06\u56fe\u50cf\u793a\u4f8b\u683c\u5f0f\u5316\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ee5\u8282\u7701\u5fc5\u987b\u6267\u884c\u4efb\u4f55\u65f6\u9ae6\u7684\u8ba1\u7b97\u3002\u60a8\u4e0d\u5fc5\u4e3a\u6b64\u5206\u8fa8\u7387\u5de5\u4f5c\uff0c\u4f46\u8bf7\u5c1d\u8bd5\u5e76\u786e\u4fdd\u60a8\u7684\u56fe\u50cf\u5c3a\u5bf8\u5339\u914d\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c3a\u5bf8\u3002\n \u6ce8\u610f\uff1a\u867d\u7136\u8fd9\u4e9b\u6e90\u56fe\u50cf\u975e\u5e38\u5c0f\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u5c06\u6269\u5c55\u5230\u4efb\u4f55\u5927\u5c0f\u3002\n \u9009\u62e9\u56fe\u50cf\u540e\uff0c\u5f39\u56de\u4ee3\u7801\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u5143\u7d20\uff0c\u5c06\u5176\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u8bbe\u7f6e\u4e3aSVG Viewbox /\u7f51\u683c\uff0c\u5e76\u5c06\u5176\u4e0a\u4e0b\u6587\u5b58\u50a8\u5728\u65b0\u53d8\u91cf\u4e2d\u3002\u6211\u4eec\u5c06\u5728\u7247\u523b\u4e2d\u4f7f\u7528\u6b64\u753b\u5e03\u6765\u6e32\u67d3\u6211\u4eec\u7684\u56fe\u50cf\u5e76\u63d0\u53d6\u5176\u50cf\u7d20\u6570\u636e\u3002\n    \u4e00\u65e6\u56fe\u50cf\u52a0\u8f7d\uff0c\u6211\u4eec\u5c06\u5176\u6e32\u67d3\u4e3a\u6211\u4eec\u7684\u753b\u5e03\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u70b9\u6570\u7ec4\uff0c\u5e76\u5faa\u73af\u901a\u8fc7\u6240\u6709\u753b\u5e03\u7684\u50cf\u7d20\u3002\u5982\u679c\u50cf\u7d20\u5177\u6709\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u503c\u4e3a0\uff08\u9ed1\u8272\u50cf\u7d20\uff09\uff0c\u5219\u6211\u4eec\u5c06\u5176\u5750\u6807\u5b58\u50a8\u5728\u70b9\u6570\u7ec4\u4e2d - \u8fd9\u5c31\u662f\u6211\u4eec\u4f7f\u7528\u4ec5\u7531\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7ec4\u6210\u7684\u56fe\u50cf\u7684\u539f\u56e0\u3002\n \u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u6269\u5c55\u6b64\u4ee3\u7801\u4ee5\u5904\u7406\u5168\u5f69\u8272\u56fe\u50cf\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u4e3a\u6f14\u793a\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u7269\u3002\n \u8981\u5728\u6b64\u5904\u8fdb\u884c\u4e00\u4e9b\u53ef\u89c6\u53cd\u9988\uff0c\u8bf7\u8ba9\u6211\u4eec\u5728\u8fd9\u4e9b\u70b9\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6e32\u67d3SVG\u5708\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {CTX\u3002\u62d4\u8ff9\uff08IMG\uff0c0,0\uff09; const\u70b9= []; for\uff08\u8bbe\u5b9ax = 0; x\uff06lt;\u5bbd\u5ea6; x ++\uff09{for\uff08\u8bbe\u5b9a= 0; y\uff06lt; height; height; y ++\uff09{const {data} = ctx\u3002 getimagedata\uff08x\uff0cy\uff0c1,1\uff09; if\uff08\u6570\u636e[0] +\u6570\u636e[1] +\u6570\u636e[2] === 0\uff09{\u70b9\u3002\u63a8\uff08{x\uff0cy\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1}\uff09; SVG\u3002\u5706\u5708\uff081\uff09\u3002 cx\uff08x\uff09\u3002 cy\uff08y\uff09; }}}}; \n\u563f\uff0c\u770b\u770b\uff01\u5b83\u662f\u539f\u59cb\u56fe\u50cf\u53d8\u6210{x\uff0cy}\u70b9\u3002\u5b8c\u7f8e\u7684\u3002\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e9b\u70b9\u4f20\u9012\u7ed9\u6211\u4eec\u7684CreateQTGrid\u51fd\u6570\uff0c\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\u3002\u8fd9\u6b21\uff0c\u5c1d\u8bd5\u5c06MaxQtlevels\u8bbe\u7f6e\u4e3a\u7a0d\u9ad8\u7684\u6570\u5b57 - \u8fd9\u5e94\u8be5\u6709\u52a9\u4e8e\u5728\u7f51\u683c\u4e2d\u5e26\u51fa\u8be6\u7ec6\u4fe1\u606f\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {... const grid = createqtgrid\uff08{\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u70b9\uff0c\u95f4\u9699\uff1a1\uff0cmaxqtlevels\uff1a6}\uff09; }\n \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4e0e\u6f14\u793a\uff031\u76f8\u540c\u7684\u65b9\u5f0f\u5faa\u73af\u901a\u8fc7\u7f51\u683c\u533a\u57df\uff0c\u6e32\u67d3\u6bcf\u4e2aON\u7684SVG\u77e9\u5f62\uff1a\n    \u7f8e\u4e3d\u7684\uff01\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5e95\u5c42\u6e90\u56fe\u50cf\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6e90\u56fe\u50cf\u662f\u6590\u6ce2\u7eb3\u5951\u87ba\u65cb\u3002\u975e\u5e38\u82b1\u54e8\u7684\u786e\uff01\u8fd9\u662f\u8fd9\u4e2a\u7f51\u683c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5706\u5f62/\u77e9\u5f62\u7684\u4e1c\u897f\uff1a\n  \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u540c\u7684\u56fe\u50cf\u9700\u8981\u7565\u5fae\u4e0d\u540c\u7684maxqtlevels\u503c\u3002\u5c31\u50cf\u751f\u6210\u827a\u672f\u4e2d\u7684\u4e00\u5207\u4e00\u6837\uff0c\u6ca1\u6709\u5355\u4e00\u7684\u9b54\u6cd5\u53f7\u7801\u3002\u6700\u597d\u7684\u7ed3\u679c\u6765\u81ea\u5c4f\u5e55\u4e0a\u7684\u8bb8\u591a\u8c03\u6574\u548c\u772f\u773c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\u5728\u6211\u4eec\u7684Quadtree\u5192\u9669\u4e2d\uff0c\u6211\u4eec\u4e13\u95e8\u4f7f\u7528SVG\u6765\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\uff0c\u4f46\u4f3c\u4e4e\u6709\u70b9\u7f9e\u803b\u5730\u79bb\u5f00CSS\u7f51\u683c\uff0c\u5bf9\u5427\uff1f\n \u597d\u5427\uff0c\u6211\u6709\u4e00\u4e9b\u597d\u6d88\u606f\uff01 CreateQTGrid\u8fd4\u56de\u7684\u533a\u57df\u5bf9\u8c61\u4e5f\u5177\u6709COL\u548c\u884c\u503c\u3002\u4f7f\u7528\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u751f\u6210CSS\u7f51\u683c\u5e03\u5c40 - \u51c6\u5907\u7528\u4e8e\u5404\u79cd\u521b\u65b0\u8bbe\u8ba1\u3002 \n\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8fdb\u5165\u592a\u591a\u7ec6\u8282\uff0c\u56e0\u4e3a\u521b\u5efaCSS\u7f51\u683c\u5e03\u5c40\u7684\u8fc7\u7a0b\u4e0e\u524d\u4e00\u4e2a\u793a\u4f8b\u7684\u8fdb\u7a0b\u76f8\u540c\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u6587\uff0c\u663e\u793a\u5982\u4f55\u4f7f\u7528HTML / CSS\u7684CreateQtGrid\u51fd\u6570\uff1a  \u563f\uff0c\u6211\u4eec\u505a\u4e86\uff01 \u975e\u5e38\u611f\u8c22\u4f60\u7684\u9605\u8bfb\u76f4\u5230\u6700\u540e\u3002 \u6211\u77e5\u9053\u8fd9\u4e9b\u6982\u5ff5\u6709\u70b9\u6c89\u91cd\uff0c\u4f46\u8fd9\u91cc\u5b66\u5230\u7684\u6280\u672f\u5c06\u5728\u60a8\u7684\u751f\u6210\u827a\u672f\u5192\u9669\u4e2d\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\u3002  \u5982\u679c\u60a8\u5728\u672c\u6559\u7a0b\u4e2d\u6388\u8bfe\u7684\u5185\u5bb9\u9177\uff0c\u8bf7\u544a\u8bc9\u6211\uff01 \u6ca1\u6709\u6211\u7684\u559c\u7231\uff0c\u800c\u4e0d\u662f\u770b\u5230\u57fa\u4e8e\u6211\u7684\u6559\u7a0b\u7684\u4eba\u4eec\u505a\u4e9b\u4ec0\u4e48\u3002  \u6ce8\u518c\u6bcf\u6708\u66f4\u65b0\u5bf9\u6211\u7684\u65b0\u5185\u5bb9\uff0c\u9009\u62e9\u6211\u6700\u559c\u6b22\u7684\u65b0\u4ee3\u53f7\uff0c\u7f8e\u5473\u7684\u5b57\u4f53\uff0c\u65b9\u4fbf\u7684\u524d\u7aef+\u8bbe\u8ba1\u63d0\u793a\u7b49\u7b49\uff01 \u2728 ", "note_en": "In this tutorial, we will be learning to create super versatile generative/random grid layouts in just a few lines of JavaScript. Using a data structure called a Quadtree, we will produce harmonious grids based on random numbers, source images, user input, and more.\n The chaotic, yet perfectly aligned world of generative grids is waiting for us \u2014 let\u2019s go!\n Note: I picked up this technique from one of my all-time favorite design agencies,  Pentagram. In their branding work for  Graphcore, they use Quadtrees extensively to generate random yet visually coherent patterns. The output is stunning and is a fantastic example of what you can create with this method.  You can check out a case study of the work here!\n  First things first, let\u2019s go over exactly  what we are cooking up in this tutorial. Here\u2019s an animated example of a generative Quadtree grid in action:\n   Add some  { x, y } points to a 2D space. In this example, the point\u2019s positions are random but biased towards a focal point.\n   Use the resulting grid areas to position stuff! In the example above, I am using squares and circles to form a simple pattern.\n  By experimenting with creative ways to position the points, we can create some  super interesting grid layouts. This example uses biased random numbers, but what if, for example \u2014 the points came from the brightness values of an image?\n We could pass in a picture of a Fibonacci spiral, a circle, a square, whatever, and have our points generate based on its pixel values. The possibilities are endless! Any method for positioning objects in a 2D space will work.  The weirder, the better.\n  The subdividing magic we see here is all handled by a data structure called a  Quadtree. I like to think of Quadtrees as little containers. Once the Quadtree fills with a certain number of objects, it splits itself into four more Quadtrees. Once those Quadtrees fill up, they divide themselves again, and so on.\n Quadtrees can be tricky to visualize, so here is an interactive example \u2014 click to add objects/points and observe how the Quadtree subdivides. In this example, the maximum number of items a Quadtree can contain is  four.\n  Very satisfying indeed\u2026 this is everything we need to know about Quadtrees for this tutorial, but if you would like to learn more about how they work/how you can use them,  check out this video by Dan Shiffman.\n  Although anyone is, of course, welcome to follow along \u2014 this tutorial is perfect for folks comfortable with JavaScript and  familiar with SVG/HTML Canvas.\n   To keep things simple and let us focus on the fun stuff \u2014 I have added a handy  createQtGrid function to my  generative-utils repo. This function takes an array of points and returns a ready-to-use Quadtree grid. If you would like to dive into the source code, it is  available in this repository.\n I have also created a  starter CodePen that you can  fork to get started. This pen has all of the JS imports/basic CSS you need for the upcoming examples. As always, though, you are welcome to follow along in any environment you like.\n  To start, let\u2019s create a Quadtree grid with a biased random distribution of points. Biased random numbers work great here, as they provide a strong visual focus. Pure randomness, ironically, tends to look  a little boring for Quadtree grids. The grid areas look too uniform, as the points are scattered all over the 2D space.\n In this example, we will use an SVG element to render our grid areas. Let\u2019s start by defining a  width and  height property for the SVG\u2019s viewBox:\n  Next, let\u2019s create a new  &lt;svg&gt; element to render our grid. For this, we are going to use  svg.js \u2014 a JavaScript library that greatly simplifies dynamic SVG scripting.  You can read a little more about svg.js in my  Generative SVG Starter Kit.\n  Now that we have our SVG element, we can generate some biased random points. To do so, we can make use of the  randomBias function. This function returns a random number based on four arguments:\n Bias - any number between the minimum and maximum number, this is the \u201cfocus point\u201d\n Influence - A number between 0 - 1, this argument determines how close the returned number is likely to be to the bias.\n Let\u2019s pop some code in to generate 100 random points, with a focus towards the center of the viewBox, and use svg.js to render them:\n const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , width  /  2 ,  1 ) ,  y :  randomBias ( 0 , height , height  /  2 ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;  points . forEach ( ( point )  =&gt;  {  svg . circle ( 2 ) . cx (point .x ) . cy (point .y ) ;  } ) ;\n    This point distribution looks lovely, but we should update the code so that the focus point can vary a little. Let\u2019s make that happen:\n const focus  =  {  x :  random ( 0 , width ) ,  y :  random ( 0 , height ) ,  } ;   const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , focus .x ,  1 ) ,  y :  randomBias ( 0 , height , focus .y ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;\n In this snippet, we use the  random function to generate a random  { x, y } focus point on the grid. Once the code is updated, you should see something like this:\n  Perfect! This focused-yet-random distribution is going to look great for Quadtree grids. Let\u2019s create one:\n  In this snippet, we call  createQtGrid with a width value, a height value, a level limit, and the points we generated just now. We also pass in a  gap property to give the grid areas a little breathing room.\n The level limit (controlled by  maxQtLevels) defines how many times the Quadtree can subdivide. A higher value, paired with a higher number of points, will result in a more detailed grid.\n If you  console.log(grid) now, you should see an object with a few different properties \u2014 at this point, though, we are only interested in the grid areas. Let\u2019s iterate over these and render an SVG  &lt;rect&gt; for each one:\n    Excellent. That\u2019s it! We have successfully generated a beautiful generative grid, ready to be filled with anything you like. As a simple example, here\u2019s how we could add a circle to a random selection of the grid areas:\n  Hey, that\u2019s some pretty cool generative art! All in just a few lines of code, too. We are all done with this demo now, but as a next step, I suggest having a play with the number of points, maximum subdivision amount ( maxQtLevels), and the point distribution logic \u2014 see what you can create!\n  Next up on the generative Quadtree menu are some delicious image-based grids. For this example, we will be using the pixel values of image files to determine our underlying points.\n To get set up, we can re-use the SVG element and width/height variables defined in the last demo. Either comment out the previous point generation/render code or fork the pen and create a fresh canvas. Your call!\n Ok, all set? Let\u2019s find a suitable image. For our demo, a simple picture comprised of only entirely black or white pixels is perfect. The basic outline of a shape  (a circle, square, spiral) is ideal. Think something like this:\n  If you don\u2019t fancy whipping up any custom images, here are some I made earlier.  *Removes pre-made shapes from the weird digital oven\u2026*\n  These images are all  192x192px in size, matching the width/height attributes of the example SVG viewBox and Quadtree grid. The image examples are formatted this way to save on having to do any funky calculation. You don\u2019t have to work to this resolution, but try and make sure your image dimensions match the width/height dimensions defined in your code.\n Note: although these source images are quite small, the end result will scale to any size.\n Once you have chosen your image, pop back into the code and create a new  canvas element, setting its width and height to that of your SVG viewBox/grid and storing its  context in a new variable. We will use this canvas in a moment to render our image and extract its pixel data.\n    Once the image has loaded, we render it to our canvas, define a new  points array, and loop through all of the canvas\u2019s pixels. If a pixel has a red, green, and blue value of 0  (a black pixel), we store its coordinates in the points array \u2014 this is why we are using images comprised of only black or white pixels.\n Note: You could expand this code to handle full color images, but we are keeping things simple for the demo.\n To get some visual feedback on what is happening here, let\u2019s also render an SVG  circle at each of these points:\n img . onload  =  ( )  =&gt;  {  ctx . drawImage (img ,  0 ,  0 ) ;    const points  =  [ ] ;    for  ( let x  =  0 ; x  &lt; width ; x ++ )  {   for  ( let y  =  0 ; y  &lt; height ; y ++ )  {   const  { data  }  = ctx . getImageData (x , y ,  1 ,  1 ) ;   if  (data [ 0 ]  + data [ 1 ]  + data [ 2 ]  ===  0 )  {  points . push ( { x , y , width :  1 , height :  1  } ) ;   svg . circle ( 1 ) . cx (x ) . cy (y ) ;   }   }   }  } ;\n   Hey, look at that! It\u2019s the original image turned into  { x, y } points. Perfect. Let\u2019s pass these points to our  createQtGrid function, just like before. This time, try setting  maxQtLevels to a slightly higher number \u2014 this should help bring out the detail in the grid:\n img . onload  =  ( )  =&gt;  {   ...    const grid  =  createQtGrid ( {  width ,  height ,  points ,  gap :  1 ,  maxQtLevels :  6   } ) ;  }\n Now, we can loop through the grid areas in the same way as demo #1, rendering an SVG rectangle at each one:\n    Beautiful! We have created a generative grid layout based on an underlying source image. In this case, that source image is a Fibonacci spiral. Very fancy indeed! Here\u2019s what this grid looks like with some circles/rectangles placed on it:\n  It\u2019s worth noting that different images will need slightly different  maxQtLevels values. Like everything in generative art, there is no single magic number. The best results come from lots of tweaking and squinting at the screen.\n  So far in our Quadtree adventure, we have exclusively used SVG to render our grids, but it seems like a bit of a shame to leave CSS grid out of the party, right?\n Well, I have some good news! The  area objects that  createQtGrid returns also have  col and  row values. Using these values, we can easily create generative CSS grid layouts \u2014 ready to use for all kinds of innovative designs.\n I won\u2019t go into too much detail here, as the process for creating CSS grid layouts is identical to that of the previous examples, but here\u2019s a CodePen showing how to use the  createQtGrid function with HTML/CSS:\n    Hey, we made it! Thank you so much for reading until the end. I know some of these concepts are a little heavy, but the techniques learned here will serve you well on your generative art adventure.\n If you make anything cool with the stuff taught in this tutorial, please let me know! There\u2019s nothing I love more than seeing what folks make based on my tutorials.\n   Sign up for monthly updates on fresh content from me, a selection of my favorite new CodePens, tasty fonts, handy front-end + design tips, and more! \u2728", "posttime": "2021-06-26 13:02:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5177\u6709,generative,\u7f51\u683c", "title": "\u5efa\u7acb\u5177\u6709\u56db\u53c9\u6811\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40 ", "title_en": "Building Generative Grid Layouts with Quadtrees", "transed": 1, "url": "https://georgefrancis.dev/writing/generative-grid-layouts-with-quadtrees/", "via": "", "real_tags": ["\u5177\u6709", "\u7f51\u683c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2,000\u5c81\u7684\u7eaa\u5ff5\u7891\u7684Hypogeum  - \u5b83\u7684\u201cBackstage\u201d - \u4ee5\u4eba\u884c\u9053\u4e3a\u8bbf\u5ba2\u6062\u590d\n    \u5728\u7f57\u9a6c\u7684\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e38\u5ba2\u9996\u6b21\u53ef\u4ee5\u5145\u5206\u63a2\u7d22\u5730\u4e0b\u96a7\u9053\u548c\u5ba4\u4f19\u4f34\uff0c\u66fe\u7ecf\u4e3a\u6218\u6597\u505a\u597d\u51c6\u5907\u7684\u89d2\u9053\u548c\u91ce\u751f\u52a8\u7269\u3002\n \u5360\u573015000\u5e73\u65b9\u7c73\uff0c2000\u5e74\u5386\u53f2\u7684\u7eaa\u5ff5\u7891\u7684\u6865\u7403\u5bf9\u516c\u4f17\u5f00\u653e\uff0c\u540e\u8005\u5728\u610f\u5927\u5229\u65f6\u88c5\u5c4bTod\u8d44\u52a9\u7684\u6062\u590d\u9879\u76ee\u5b8c\u6210\u540e\u3002\n  \u867d\u7136\u4eba\u4eec\u80fd\u591f\u4e0b\u964d\u5230\u6865\u7403\u7f51\u7edc - \u8fd9\u662f\u5706\u5f62\u5267\u573a\u7684\u7ade\u6280\u573a\uff0c\u53e4\u4ee3\u5267\u573a\u7684\u7ade\u6280\u573a\u662f\u4ec0\u4e48 - \u81ea2010\u5e74\u4ee5\u6765\uff0c\u4ed6\u4eec\u53ea\u80fd\u8fdb\u5165\u4e00\u5c0f\u90e8\u5206\u3002\u73b0\u5728\u6709\u8d70\u9053\u8ba9\u6e38\u5ba2\u63a2\u7d22\u96a7\u9053\u548c\u8154\u5ba4\u3002\n \u7f57\u9a6c\u6597\u517d\u573a\u4e3b\u4efb\u963f\u5c14\u6cd5\u5c3c\u7eb3\u00b7\u7f57\u8428\u65af\uff08Alfonsina Russo\uff09\u8868\u793a\uff0c\u6700\u521d\u572819\u4e16\u7eaa\u6316\u6398\u7684\u4f4e\u9ea6\u7247\u662f\u5706\u5f62\u5267\u573a\u7684\u771f\u6b63\u7684\u201c\u540e\u53f0\u201d\u3002\n \u201c\u4eca\u5929\u6211\u4eec\u6b63\u5728\u7559\u5230\u4e00\u5ea7\u7eaa\u5ff5\u7891\u5185\u7684\u7eaa\u5ff5\u7891\uff0c\u201dRusso\u8bf4\u3002 \u201c\u4ece\u9879\u76ee\u4e2d\u51fa\u73b0\u4e86\u4ec0\u4e48\u6837\u7684\u662f\uff0c\u6865\u7403\u6709400\u5c81\u7684\u5386\u53f2\uff0c\u4ece\u5706\u5f62\u5267\u573a\u5728AD80\u5f00\u4e1a\u5230523\u5e74\u7684\u6700\u7ec8\u5c55\u4f1a\u3002\u201d\n \u5979\u8bf4\uff0c15\u6b21\u6062\u590d\u7684\u8d70\u5eca\u53d9\u8ff0\u4e86\u201c\u5386\u53f2\u8ffd\u8e2a\u201d\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5de6\u8f6c\u201c\u3002 \nTod's\u8463\u4e8b\u957f\u8fed\u6208\u5fb7\u62c9\u5c71\u8c37\u8868\u793a\uff0c\u8d85\u8fc780\u540d\u8003\u53e4\u5b66\u5bb6\uff0c\u5efa\u7b51\u5e08\u548c\u5de5\u7a0b\u5e08\u4eec\u53c2\u4e0e\u4e86\u4e24\u5e74\u7684\u9879\u76ee\u201c\u5e26\u56de\u5168\u4e16\u754c\u7231\u7684\u7eaa\u5ff5\u7891\u201d\u3002\n \u5f53\u610f\u5927\u5229\u6587\u5316\u90e8\u957fDario FrancesChini\u5ba3\u5e03\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u7684\u6279\u8bc4\uff0c\u4e3a\u7f57\u9a6c\u7eaa\u5ff5\u7891\u8fdb\u884c\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u3002 Hypogeum\u7684\u6062\u590d\u662f\u5728\u4e4d\u4e00\u770b\u7684\u4e09\u9636\u6bb5\u9879\u76ee\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u5f00\u59cb\u516b\u5e74\u524d\uff0c\u8fc4\u4eca\u4e3a\u6b62\u6258\u5fb7\u5171\u8ba1\u989d\u5916\u652f\u4ed82500\u4e07\u6b27\u5143\uff082100\u4e07\u82f1\u9551\uff09\u3002\n \u7b2c\u4e00\u9636\u6bb5\u4e13\u6ce8\u4e8e\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e05\u7406\uff0c\u4ee5\u53ca\u9884\u8ba1\u5c06\u4e8e2024\u5e74\u5b8c\u6210\u7684\u6700\u540e\u4e00\u90e8\u5206\u5c06\u6d89\u53ca\u6062\u590d\u753b\u5eca\u548c\u7167\u660e\u7cfb\u7edf\u4ee5\u53ca\u6dfb\u52a0\u65b0\u7684\u6e38\u5ba2\u4e2d\u5fc3\u3002\n \u201c\u62e5\u6709\u5b8c\u5168\u516c\u79c1\u5408\u4f5c\u6709\u6743\uff0c\u201dFranceschini\u8bf4\u3002 \u201c\u8be5\u9879\u76ee\u975e\u5e38\u91cd\u8981\uff0c\u5e76\u5c55\u793a\u4e86\u4e00\u5bb6\u610f\u5927\u5229\u516c\u53f8\u5982\u4f55\u51fa\u53e3\u4e16\u754c\u5404\u5730\u7684\uff0c\u7136\u540e\u5728\u5176\u56fd\u5bb6\u6295\u8d44\u4ee5\u4fdd\u62a4\u5176\u827a\u672f\u548c\u6587\u5316\u9057\u4ea7\u3002\u201d\n \u5176\u4ed6\u610f\u5927\u5229\u54c1\u724c\u5df2\u7ecf\u652f\u4ed8\u4e86\u5173\u952e\u7eaa\u5ff5\u7891\u7684\u88c5\u4fee\uff0c\u5305\u62ec\u4fee\u590dTrevi\u55b7\u6cc9\u548cBulgari\u7684Fendi\uff0c\u6062\u590d\u4e86\u897f\u73ed\u7259\u8bed\u6b65\u9aa4\u3002\n \u4e0e\u6b64\u540c\u65f6\uff0c\u9884\u8ba1\u5c06\u57282023\u5e74\u6062\u590d\u6597\u517d\u573a\u5730\u677f\u7684\u9879\u76ee\u3002\u65b0\u7684\u9ad8\u79d1\u6280\u9636\u6bb5\u53ef\u80fd\u4f1a\u4e3e\u529e\u6587\u5316\u6d3b\u52a8\uff0c\u5c06\u80fd\u591f\u5feb\u901f\u8986\u76d6\u6216\u63ed\u793a\u5730\u4e0b\u7f51\u7edc\uff0c\u5141\u8bb8\u4ed6\u4eec\u53d7\u5230\u9632\u6b62\u96e8\u6c34\u6216\u64ad\u51fa\u3002\n \u5728\u7f57\u9a6c\u65f6\u4ee3\uff0c\u4eba\u7fa4\u5c06\u586b\u8865\u7f57\u9a6c\u6597\u517d\u573a\u89c2\u770b\u89d2\u6597\u58eb\u51fb\u8d25\u52a8\u7269\uff0c\u5305\u62ec\u718a\uff0c\u8001\u864e\uff0c\u5927\u8c61\u548c\u7280\u725b\u3002 ", "note_en": "Hypogeum of 2,000-year-old monument \u2013 its \u2018backstage\u2019 \u2013 restored with walkways for visitors\n    For the first time, visitors to the Colosseum in Rome can fully explore the underground tunnels and chambers where gladiators and wild animals once prepared for battle.\n Spread across 15,000 square metres, the hypogeum of the 2,000-year-old monument is open to the public following the completion of a restoration project funded by the Italian fashion house Tod\u2019s.\n  Although people have been able to descend into the hypogeum network \u2013 which lies beneath what was the amphitheatre\u2019s arena and was invisible to spectators in ancient times \u2013 since 2010, they could enter only a small section. Now there are walkways allowing visitors to explore the tunnels and chambers.\n Alfonsina Russo, the director of the Colosseum, said the hypogeum, which was originally excavated in the 19th century, was the true \u201cbackstage\u201d of the amphitheatre.\n \u201cToday we are returning to the public a monument within a monument,\u201d Russo said. \u201cWhat emerged [from the project] is that the hypogeum had a 400-year-long history, from when the amphitheatre opened in AD80 to the final show in 523.\u201d\n She said the 15 restored corridors recounted \u201ctraces [of history] left over time\u201d.\n More than 80 archaeologists, architects and engineers were involved in the two-year project to \u201cbring back to the centre of attention a monument that the whole world loves\u201d, said Diego Della Valle, the chairman of Tod\u2019s.\n There was much criticism when Italy\u2019s culture minister, Dario Franceschini, announced several public-private partnerships for the renovation of Rome\u2019s monuments. The restoration of the hypogeum is the second part of a three-phase project on the Colosseum that began eight years ago and for which Tod\u2019s has paid a total of \u20ac25m (\u00a321m).\n The first phase focused on a clean-up of the Colosseum\u2019s facade, and the final part, expected to be completed in 2024, will involve restoring the galleries and lighting system as well as adding a new visitor centre.\n \u201cIt\u2019s right to have full public-private collaboration,\u201d Franceschini said. \u201cThe project is really important and demonstrates how an Italian company, which exports all over the world, then invests back in its country to protect its artistic and cultural heritage.\u201d\n Other Italian brands that have paid for the renovations of key monuments include Fendi, which restored the Trevi Fountain, and Bulgari, which restored the Spanish Steps.\n Meanwhile, a project to restore the  floor of the Colosseum to its former glory is expected to be completed in 2023. The new, hi-tech stage, which could host cultural events, will be able to quickly cover or uncover the underground networks, allowing them to be protected from the rain or to be aired out.\n In Roman times, crowds would fill the Colosseum to watch gladiators defeat animals including bears, tigers, elephants and rhinoceroses.", "posttime": "2021-06-26 13:01:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f57\u9a6c,tunnels,\u6062\u590d", "title": "\u7f57\u9a6c\u7684\u5730\u4e0b\u96a7\u9053\u5b8c\u5168\u5411\u516c\u4f17\u5f00\u653e ", "title_en": "Underground tunnels of Rome\u2019s Colosseum fully opened to public", "transed": 1, "url": "https://www.theguardian.com/world/2021/jun/25/underground-tunnels-of-romes-colosseum-fully-opened-to-public", "via": "", "real_tags": ["\u7f57\u9a6c", "tunnels", "\u6062\u590d"]}, {"category": "", "categoryclass": "", "imagename": "51779d757729477ea50d56d7efeecdb7.jpeg", "infoid": 1068383, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5728\u6211\u7684\u56e2\u961f\u7684\u79ef\u538b\u677f\u4e0a\u6253\u5f00\u4e86\u4e00\u5f20\u673a\u7968\uff0c\u8981\u6c42\u7ed5\u8fc7API\u7684\u7f13\u5b58\u7cfb\u7edf\u7684\u80fd\u529b\u3002\u5bf9\u4e8e\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u7684\u524d\u7aef\u56e2\u961f\u4f7f\u7528\u6211\u7684\u56e2\u961f\u7684API\u5bf9Elasticsearch\u7684\u76f8\u5f53\u6c89\u91cd\u7684\u8981\u6c42\uff0c\u6211\u4eec\u7684API\u7f51\u5173\u7684\u4e00\u4e2a\u529f\u80fd\u662f\u7f13\u5b58\u91cd\u578b\u805a\u5408\u7684\u7ed3\u679c\u301c30\u79d2\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6bcf\u6b21\u5076\u5c14\u4ed6\u4eec\u90fd\u9700\u8981\u5728\u301c30\u79d2\u7f13\u5b58\u7a97\u53e3\u4e2d\u8fd0\u884c\u4e24\u4e2a\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u5e76\u5e0c\u671b\u66f4\u65b0\u7684\u7ed3\u679c\u96c6\u3002\n \u6253\u5f00\u7684\u8bf7\u6c42\u8bfb\u53d6\u7684\u5185\u5bb9\uff0c\u201cAPI\u9700\u8981\u4e00\u4e2a\u53c2\u6570\u4ee5\u7981\u7528\u67d0\u4e9b\u67e5\u8be2\u7684\u7f13\u5b58\u201d\u3002\u5728REST-ISH-FUL API\u5de5\u4f5c\u65f6\uff0c\u6709\u5927\u7ea6\u6570\u5b66\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7acb\u5373\u60f3\u5230\u7684\u7b2c\u4e00\u4e2a\u4eba\u662f\uff1a\n  \u4e8b\u5b9e\u8bc1\u660e\uff0c\u5df2\u7ecf\u5b58\u5728\u8fd9\u79cd\u7c7b\u578b\u7684\u6807\u51c6\uff0c\u7f13\u5b58\u63a7\u5236\u8bf7\u6c42\u6307\u4ee4\u3002\n  \u4f7f\u7528\u6807\u51c6\u6807\u9898\u7f13\u5b58\u63a7\u5236\uff1a\u4e0d\u4ec5\u9700\u8981\u66f4\u5c11\u7684API\u8bbe\u8ba1\u51b3\u7b56\uff0c\u800c\u4e14\u786e\u4fdd\u6211\u7684API\u7684\u5ba2\u6237\u65e0\u6cd5\u901a\u8fc7\u65b0\u65b9\u6cd5\u6765\u5b9e\u73b0\u5e38\u89c1\u4efb\u52a1\u7684\u65b0\u9014\u5f84\u6765\u66f4\u8f7b\u677e\u5730\u4f7f\u6211\u7684\u5de5\u4f5c\u66f4\u5bb9\u6613\u3002\n \u4f46\u662f\uff0c\u6211\u8981\u6307\u51fa\uff0c\u8fd9\u53ea\u662f\u56e0\u4e3a\u4f60\u51b3\u5b9a\u4f7f\u7528\u76f8\u5f53\u826f\u597d\u7684\u6807\u51c6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u7684\u7528\u6237\u5c06\u671f\u671b\u7684\u5176\u4ed6\u6807\u51c6\u3002\u5b83\u8fd8\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u7684\u7528\u6237\u77e5\u9053\u60a8\u9009\u62e9\u7684\u6807\u51c6\u7684\u5b58\u5728\u3002\n  \u65e0\u8bba\u60a8\u8ba4\u4e3a\u60a8\u7684API\u7684\u884c\u4e3a\u662f\u5426\u662f\u201c\u6807\u51c6\u201d\u6216\u201c\u9884\u671f\u201d\uff0c\u5c31\u4f1a\u5411\u60a8\u7684\u6587\u6863\u6dfb\u52a0\u884c\u4e3a\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u4eec\u7684Readme.md\u4e2d\u7684\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002\n ##\u7f13\u5b58Businingif\u5982\u679c\u60a8\u4e0d\u5e0c\u671b\u60a8\u7684\u67e5\u8be2\u7f13\u5b58\uff0c\u8bf7\u4f7f\u7528\u7f13\u5b58\u63a7\u5236\u6807\u9898\u3002\u7f13\u5b58\u63a7\u5236\uff1a\u65e0\u5546\u5e97 \n\u5982\u679c\u60a8\u6709\u4efb\u4f55\u7591\u95ee\u6216\u8bc4\u8bba\uff0c\u8bf7\u6309\u7167Twitter @Q_Vault\u6253\u51fb\u6211\u3002 \u5982\u679c\u6211\u5728\u6587\u7ae0\u4e2d\u72af\u4e86\u9519\u8bef\uff0c\u8bf7\u52a1\u5fc5\u8ba9\u6211\u77e5\u9053\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5f97\u5230\u7ea0\u6b63\uff01 ", "note_en": "I recently had a ticket opened on my team\u2019s backlog board requesting the ability to bypass our API\u2019s caching system. For context, our front-end team uses my team\u2019s API to make fairly heavy requests to ElasticSearch, and one of the features of our API gateway is to cache the results of heavy aggregations for ~30 seconds. It turns out, every once in a while they need to run two of the same query within the ~30-second caching window and want an updated result set.\n The request that was opened read something like, \u201cthe API needs a parameter to disable caching for certain queries\u201d. When working in a REST-ish-ful API there are approximately  math.MaxInt ways to accomplish that, and some of the first ones that immediately came to mind were:\n  As it turns out, there\u2019s already a standard for this sort of thing, the   Cache-Control request directives.\n  Using the standard header  Cache-Control: no-store not only makes my job easier by requiring fewer API design decisions but also ensures that my API\u2019s clients aren\u2019t surprised by a new way to accomplish a common task.\n I do want to point out, however, that just because you\u2019ve decided to use a fairly well-supported standard, doesn\u2019t mean there aren\u2019t other standards your users will expect. It also doesn\u2019t mean that your users are aware of the existence of the standard you\u2019ve chosen.\n  Regardless of whether or not you think your API\u2019s behavior is \u201cstandard\u201d or \u201cto be expected\u201d, just add the behavior to your docs anyway. For me, the following snippet in our  Readme.md was all we needed.\n ## Cache bustingIf you don&#39;t want your query cached, use the Cache-Control header.  Cache-Control: no-store\n Follow and hit me up on Twitter  @q_vault if you have any questions or comments. If I\u2019ve made a mistake in the article be sure to  let me know so I can get it corrected!", "posttime": "2021-06-26 12:19:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u68c0\u67e5,standards,api", "title": "\u5728\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e4b\u524d\u68c0\u67e5\u6807\u51c6 ", "title_en": "Check for Standards Before Creating a New One", "transed": 1, "url": "https://qvault.io/clean-code/use-existing-standards/", "via": "", "real_tags": ["\u68c0\u67e5", "standards", "api"]}, {"category": "", "categoryclass": "", "imagename": "4848fdd600d07b67d679e8b44181acd2.jpg", "infoid": 1068382, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "WDC\u8ddf\u8e2a\u53f7\u7801\uff1aWDC-21008\u4ea7\u54c1\u7ebf\uff1aWD\u6211\u7684\u4e66\u76f4\u64ad\u548cWD\u6211\u7684\u4e66\u5b9e\u65f6Duo\u53d1\u5e03\uff1a2021\u5e746\u670824\u65e5\n  Western Digital\u5df2\u7ecf\u786e\u5b9a\u4e86\u6211\u7684\u4e00\u4e9b\u9884\u8ba2\u548c\u6211\u7684\u4e66\u7c4d\u5b9e\u65f6Duo\u8bbe\u5907\u6b63\u5728\u901a\u8fc7\u5229\u7528\u8fdc\u7a0b\u547d\u4ee4\u6267\u884c\u6f0f\u6d1e\u6765\u635f\u5bb3\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u653b\u51fb\u8005\u5df2\u89e6\u53d1\u51fa\u5382\u91cd\u7f6e\uff0c\u4f3c\u4e4e\u5220\u9664\u4e86\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u6570\u636e\u3002\n \u6211\u4eec\u6b63\u5728\u67e5\u770b\u6211\u4eec\u4ece\u53d7\u5f71\u54cd\u5ba2\u6237\u6536\u5230\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u4ee5\u8fdb\u4e00\u6b65\u8868\u5f81\u653b\u51fb\u548c\u8bbf\u95ee\u673a\u5236\u3002\u6211\u4eec\u5ba1\u67e5\u7684\u65e5\u5fd7\u6587\u4ef6\u663e\u793a\uff0c\u653b\u51fb\u8005\u76f4\u63a5\u8fde\u63a5\u5230\u53d7\u5f71\u54cd\u7684\u6211\u7684\u4e66\u7c4d\u5b9e\u65f6\u8bbe\u5907\uff0c\u4ece\u4e0d\u540c\u56fd\u5bb6\u7684\u5404\u79cdIP\u5730\u5740\u3002\u8fd9\u8868\u793a\u901a\u8fc7\u76f4\u63a5\u8fde\u63a5\u6216\u901a\u8fc7\u901a\u8fc7UPnP\u624b\u52a8\u6216\u81ea\u52a8\u542f\u7528\u7684\u7aef\u53e3\u8f6c\u53d1\uff0c\u4eceInternet\u76f4\u63a5\u8bbf\u95ee\u53d7\u5f71\u54cd\u7684\u8bbe\u5907\u3002\n \u6b64\u5916\uff0c\u65e5\u5fd7\u6587\u4ef6\u663e\u793a\u5728\u67d0\u4e9b\u8bbe\u5907\u4e0a\uff0c\u653b\u51fb\u8005\u5b89\u88c5\u4e86\u4e00\u4e2a\u540d\u4e3a\u201c.nttpd\uff0c1-ppc-be-t1-z\u201d\u7684\u6587\u4ef6\u7684\u7279\u6d1b\u4f0a\u6728\u9a6c\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a\u6211\u6240\u4f7f\u7528\u7684PowerPC\u67b6\u6784\u7f16\u8bd1\u7684Linux ELF\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u9884\u8ba2Live\u548cLive Duo\u3002\u8be5\u7279\u6d1b\u4f0a\u6728\u9a6c\u7684\u6837\u672c\u5df2\u88ab\u6355\u83b7\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5206\u6790\uff0c\u5e76\u5df2\u4e0a\u4f20\u5230Virustotal\u3002\n \u6211\u4eec\u5bf9\u6b64\u4e8b\u4ef6\u7684\u8c03\u67e5\u5c1a\u672a\u53d1\u73b0Western Digital Cloud Services\uff0c\u56fa\u4ef6\u66f4\u65b0\u670d\u52a1\u5668\u6216\u5ba2\u6237\u51ed\u636e\u7684\u4efb\u4f55\u8bc1\u636e\u3002\u7531\u4e8e\u6211\u7684\u4e66\u7c4d\u76f4\u64ad\u8bbe\u5907\u53ef\u4ee5\u901a\u8fc7\u7aef\u53e3\u8f6c\u53d1\u76f4\u63a5\u63a5\u89e6\u5230\u4e92\u8054\u7f51\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u53ef\u80fd\u80fd\u591f\u901a\u8fc7\u7aef\u53e3\u626b\u63cf\u53d1\u73b0\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\u3002\n \u6211\u4eec\u660e\u767d\u5ba2\u6237\u7684\u6570\u636e\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u7406\u89e3\u4e3a\u4ec0\u4e48\u653b\u51fb\u8005\u89e6\u53d1\u51fa\u5382\u91cd\u7f6e;\u4f46\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u53d7\u5f71\u54cd\u7684\u8bbe\u5907\u7684\u6837\u672c\uff0c\u5e76\u8fdb\u4e00\u6b65\u8c03\u67e5\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u5ba2\u6237\u62a5\u544a\u8bf4\u6570\u636e\u6062\u590d\u5de5\u5177\u53ef\u80fd\u80fd\u591f\u4ece\u53d7\u5f71\u54cd\u7684\u8bbe\u5907\u6062\u590d\u6570\u636e\uff0c\u6211\u4eec\u76ee\u524d\u6b63\u5728\u8c03\u67e5\u8fd9\u4e9b\u5de5\u5177\u7684\u6709\u6548\u6027\u3002\n \u6211\u7684\u4e66\u7c4d\u76f4\u64ad\u7cfb\u5217\u4e8e2010\u5e74\u63a8\u51fa\u5e02\u573a\uff0c\u8fd9\u4e9b\u8bbe\u5907\u4e8e2015\u5e74\u83b7\u5f97\u4e86\u6700\u7ec8\u7684\u56fa\u4ef6\u66f4\u65b0\u3002 \n\u6b64\u65f6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5c06\u60a8\u7684\u4e66\u7c4d\u76f4\u64ad\u548c\u6211\u7684\u4e66\u5b9e\u65f6\u4e0e\u4e92\u8054\u7f51\u7684Live Duo\u65ad\u5f00\uff0c\u4ee5\u4fdd\u62a4\u60a8\u7684\u6570\u636e\u3002  \u6211\u4eec\u542c\u8bf4\u8fc7\u5ba2\u6237\u62c5\u5fc3\u5f53\u524d\u6211\u7684\u4e91OS 5\u548cMy Cloud Home\u7cfb\u5217\u8bbe\u5907\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 \u8fd9\u4e9b\u8bbe\u5907\u4f7f\u7528\u8f83\u65b0\u7684\u5b89\u5168\u67b6\u6784\uff0c\u4e0d\u53d7\u6b64\u653b\u51fb\u4e2d\u4f7f\u7528\u7684\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002 \u6211\u4eec\u5efa\u8bae\u60a8\u7b26\u5408Cloud OS 3\u7528\u6237\u5347\u7ea7\u5230OS 5\u4ee5\u7ee7\u7eed\u63a5\u6536\u8bbe\u5907\u7684\u5b89\u5168\u66f4\u65b0\u3002 ", "note_en": "WDC Tracking Number: WDC-21008  Product Line:\u00a0WD My Book Live and WD My Book Live Duo  Published:\u00a0June 24, 2021\n  Western Digital has determined that some My Book Live and My Book Live Duo devices are being compromised through exploitation of a remote command execution vulnerability. In some cases, the attackers have triggered a factory reset that appears to erase all data on the device.\n We are reviewing log files which we have received from affected customers to further characterize the attack and the mechanism of access. The log files we have reviewed show that the attackers directly connected to the affected My Book Live devices from a variety of IP addresses in different countries. This indicates that the affected devices were directly accessible from the Internet, either through direct connection or through port forwarding that was enabled either manually or automatically via UPnP.\n Additionally, the log files show that on some devices, the attackers installed a trojan with a file named \u201c.nttpd,1-ppc-be-t1-z\u201d, which is a Linux ELF binary compiled for the PowerPC architecture used by the My Book Live and Live Duo. A sample of this trojan has been captured for further analysis and it has been   uploaded to VirusTotal.\n Our investigation of this incident has not uncovered any evidence that Western Digital cloud services, firmware update servers, or customer credentials were compromised. As the My Book Live devices can be directly exposed to the internet through port forwarding, the attackers may be able to discover vulnerable devices through port scanning.\n We understand that our customers\u2019 data is very important. We do not yet understand why the attacker triggered the factory reset; however, we have obtained a sample of an affected device and are investigating further. Additionally, some customers have reported that data recovery tools may be able to recover data from affected devices, and we are currently investigating the effectiveness of these tools.\n The My Book Live series was introduced to the market in 2010 and these devices received their final firmware update in 2015.\n  At this time, we recommend you disconnect your My Book Live and My Book Live Duo from the Internet to protect your data on the device.\n We have heard customer concerns that the current My Cloud OS 5 and My Cloud Home series of devices may be affected. These devices use a newer security architecture and are not affected by the vulnerabilities used in this attack. We recommend that eligible My Cloud OS 3 users   upgrade to OS 5 to continue to receive security updates for your device.", "posttime": "2021-06-26 12:19:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e66\u7c4d,wd,\u8bbe\u5907", "title": "WD\u63a8\u8350\u7684\u5b89\u5168\u63aa\u65bd\u4e3aWD\u6211\u7684\u4e66\u7c4d\u76f4\u64ad\uff0c\u6211\u7684\u4e66\u5b9e\u51b5\u4e8c\u4eba ", "title_en": "WD Recommended Security Measures for WD My Book Live and WD My Book Live Duo", "transed": 1, "url": "https://www.westerndigital.com/support/productsecurity/wdc-21008-recommended-security-measures-wd-mybooklive-wd-mybookliveduo", "via": "", "real_tags": ["\u4e66\u7c4d", "wd", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "d1615bb7dc31e3f074082558ea885b96.jpg", "infoid": 1068381, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\nWarning: Can only detect less than 5000 characters\nWarning: Can only detect less than 5000 characters", "note_en": "Among certain philosophers it is a commonplace that dreams are radically private, that no one can follow you into them. A fragment from Heraclitus distills the problem: \u201cThe universe for those who are awake is single and common, while in sleep each person turns aside into a private universe.\u201d Hegel, commenting on this same fragment, says that \u201cthe dream is a knowledge of something of which I alone know.\u201d [1] Consider how you might teach a child to understand the meaning of the word \u201cdream.\u201d You cannot point anywhere and say, \u201cThat\u2019s a dream.\u201d Nor can you say at any moment to the child, \u201cLook, I\u2019m dreaming,\u201d and be doing it.\n The science of dreams\u2014first psychoanalysis, and then neuroscience\u2014has inherited this frame of reference. In 1900, Freud writes that dreams are \u201ccompletely asocial.\u201d A hundred years later, Yuval Nir and Giulio Tononi, two leaders in contemporary brain research, write that \u201cdreams \u2026 show that the human brain, disconnected from the environment, can generate an entire world of conscious experiences by itself.\u201d [2] Here, dreams are, by definition, that whole nocturnal life you cannot share, that  second life as Nerval wrote, with its unexpected villains and lovers, its indescribable moonscapes, its fantastical concatenations of memory, its unfathomable vehicles and dungeons, its transports of flight, and its corporeal crises when the limbs turn stiff and the monster is upon you. Dreams mean disconnection and disengagement from the framework of this our shared world, and immersion in them is so strange, so sorrowful, so disorienting, sometimes so very shameful, that we can barely coax them into the light even should we want to.\n And yet, despite this vision of dreams as paradigmatically distant, many of the world\u2019s cultures\u2014especially outside of the modern West\u2014have developed elaborate protocols by which dreams can be shared. The complexity of these protocols is confirmation, in one sense, of the claim that dreams are especially private, even more so than other forms of thinking. A society must work very hard indeed to make them sharable; they must be wrestled into this life from that nighttime one. But these protocols are also somehow a rebuke to the philosophers\u2019 skepticism: people build their own universes in dreams, except, as we\u2019ll see, they then go to great lengths to reconstruct and combine them into a shared one while awake. This seems to raise at least two questions. Why go to such great lengths to share dreams? And what happens to a culture, like our own, that doesn\u2019t practice dream sharing, that (a few isolated realms aside, perhaps the most important being psychoanalysis) has largely given up on it?\n The task of this essay is to consider what dream sharing looks like across the globe, particularly in certain small-scale societies where it has been elevated to the level of an art form (or, perhaps, beyond it). In dream sharing, something from the depths of sleep is harnessed for use in the public world, in the community of the awoken. For many cultures, as we\u2019ll see, dream sharing is a protocol for regular renegotiation of what might be termed the  social contract of sensuous imagining, the set of images and emotions and unseen realities that govern, even more than abstract ideas, \u2028an individual\u2019s relationship to society and to \u2028the cosmos.\n In the most familiar cases, dream-sharing protocols involve recounting the dream, and then asking someone to interpret it.  I dreamt of gathering wheat under a full moon. Interpretation: you will be married within the year. It\u2019s a process that people in our own culture still practice, both on the analyst\u2019s couch and at the kitchen table\u2014though in the wrong company telling a dream might get you dismissed as boring, and interpreting one might get you mocked for being superstitious.\n Historically, traditions of great intellectual subtlety have developed to interpret dreams, and to consider what interpreting a dream actually means. In the Palestinian Talmud, for instance, it\u2019s made quite clear that when it comes to prophetic dreams, what causes the fulfillment of a prophecy is not the dream itself (or its originator, God), but rather the  interpretation of the dream. If a rabbi interprets a dream as foretelling the death of the dreamer and then the dreamer dies, then it\u2019s the  rabbi\u2019s fault that he\u2019s died. [3] Similarly, Cicero writes that the dream-obsessed people of Telmessos blamed the interpreters, and not the dreamer, if a dream prediction turned out to be false; it wasn\u2019t the dream itself that was wrong\u2014such a phrase would have made no sense to the dreamers of Telmessos\u2014it was the interpretation that had failed. [4] Already in these instances some unexpected epistemological principles are being entertained. A dream and its interpretation do not follow one another directly in the way of a question and its answer. Each has its own life, its own path of causation, its own relationship to the truth. These overlap in places, and separate decisively in others. In some cases, the interpretation even overwhelms and redirects the dream.\n But this is only the beginning, for there are many cultures where recounting and interpreting is not the paradigm for dream sharing at all. Instead, dreams are understood to be sites of action; not texts but places, not a coded language but a part of reality. Often they connect individuals to cosmologies that bend space and time in ways closer to Einstein than Newton. The experienced reality of the dream\u2014not its purported meaning, but its spaces, timescales, transformations, felt experience\u2014is what\u2019s evoked, what\u2019s brought into the public realm of waking life, and what\u2019s made use of. It may be that a key task\u2014hunting, for example\u2014is accomplished in dreams before it can be accomplished in waking life. Or it may be, as among the Wayuu of Colombia and Venezuela, that the trajectory of a dream is altered by being retold in waking life, with the expectation that the next night, the dream itself will change, and, as a result, the person\u2019s waking life will too. [5] (A similar technique has been pioneered by the therapist Barry Krakow to work with trauma victims: by writing down in a journal happier endings to their recurrent nightmares, the patients could tame them \u2028in sleep.) [6]\n Among many Aboriginal peoples of Australia, dreams are understood to be important conduits into a metaphysical system often called in English the Dreamtime (though it is important to note that despite this nomenclature, the concept\u2019s exact relation to sleep dreams varies considerably among different Aboriginal traditions, and is a matter of some scholarly debate). [7] The Dreamtime, or Dreaming, is the heroic myth-world, and also the realm of laws, traditions, ideals. Aboriginal philosophy is subtle and sophisticated, in all likelihood ungraspable to the uninitiated; furthermore, the generalizations of anthropologists inevitably fail to capture the reality of a community in which myths and songs and ideas are created, negotiated, and modified by individuals, each with a distinctive cast of mind, some of them especially prodigious and brilliant dreamers. But we can trace some lineaments of this intellectual world, keeping in mind that they (and other traditions described in this essay) relate to individual practice the way a broad history of the novel might relate to the specific complexity of Proust or Dickens.\n   The Dreaming is both the primal world, the Creation, and also a world that continues to exist all around us, its separateness from everyday life a matter of temporary perspective rather than intractable fact. In many Australian cultures, dreams provide an essential point of connection. Conception occurs when a soul crosses over from one realm to the other in dreams; death doesn\u2019t truly occur until a person is sighted one last time in a dream; dreams produce insights about where to hunt, or they answer a question about lineage; sometimes they give birth to new songs and new rituals; they often provide a stage on which dreamers can glimpse the eternal and world-creating movements of their individual ancestors, whose inner essence their own bodies contain. The anthropologist Sylvie Poirier reports that among the Pintupi of the Western Desert, the dream-world and the waking world have to be regularly realigned with one another. She writes that once she was riding with a family in a car that broke down in the desert. The car got fixed, but for it to  really be fixed, it needed to be working again in the dream-world as well as the waking one. \u201cAs the engine started running again,\u201d Poirier recalls, \u201ca young woman pointed at her toddler and said, \u2018Might be that boy had a dream about that car and saw it working properly.\u2019\u201d [8]\n It would be a discredit to the Pintupi to say that for them, dreams are  merely prophetic. For the thing the dream predicts has already happened. Rather, the events of dreams and the events of waking life are required to be somehow in accord. And, what\u2019s more, if the boy did actually dream of the car working, then when it starts working, his family members have accomplished the very thing that Heraclitus and Hegel cannot accept: they\u2019ve  seen his dream, they can say \u201che is dreaming of a car working\u201d and also see a car working, and can understand these two phenomena as one and the same.\n In this society, where a boy must dream of a car working for the car to work, there is little that resembles what we might call dream interpretation. Sylvie Poirier, again: \u201cWhat possibly might be seen, at first, as a lack of interest in dream interpretation reveals, on closer examination, another local reality\u2014the paramount role of the action of dreaming itself in one\u2019s life itinerary and in the unfolding of reality.\u201d [9] Dream life and waking life do not exist in a hermeneutic relation to one another\u2014instead, they are interpenetrable and complementary planes of existence. Acting in one has an effect in the other\u2014which in turn has an effect again in the first, and on and on in a continuous cycle.\n Robin Ridington has shown, in a series of magnificent books and essays, how a Den\u00e9 people of the Canadian interior, the Dane-zaa (or Dunne-za), use dreaming to give shape to the substance and structure of their lives. Building on years of work with Dane-zaa Dreamer Charlie Yahey and other tradition-bearers, Ridington writes, \u201cCamps among the Dunne-za were always set up so that there was bush unbroken by human trails in the direction of the rising sun. People slept with their heads in this direction and received images in their dreams. These dream images were believed to have come down to them along the path of the sun. In order to cross trails with an animal in the bush, the hunter had first to make contact with the sun\u2019s path across the sky.\u201d [10] Animals had to be taken (or give themselves up) in dreams before they could be killed in waking life; indeed, the real hunt took place in dreams, and the waking hunt was only its fulfillment or realization. The details constituting this system of dream-knowing were in every instance intimately tied to the practical skills required to survive on the ecological knife-edge that is the boreal forest. (\u201cThat\u2019s hungry country up there,\u201d an ethnobotanist once told me, \u201cless food than the Kalahari.\u201d) For example, just as hunters had to receive dreams along the path of the sun, so in waking life they relied on the sun for orientation amid the vast expanses of taiga. To improve his status, a hunter not only needed to give gifts and perform feats; he needed to defeat his rivals in dream battles. [11]\n   For the Dane-zaa, as for many such dream-sharing cultures, the mixing of dreams and waking life occurred already at the very headwaters of history. In the mythtime, a boy is abandoned by his father on an island, and survives because he makes contact with his medicine animals in dreams. They teach him how to hunt in the remote place where he\u2019s been left to die. He then defeats his father and returns from the island to subdue the giant animals who once roamed the earth eating humans. He acquires the name Ts\u00e1\u00e1yaa and becomes a culture hero, sending the animals underground so that their subterranean bodies become the breathing, slumbering contours of the landscape. The remaining animals are smaller, and humans can hunt them, inaugurating a new era. In this new time, Ts\u00e1\u00e1yaa\u2019s actions have made it possible for humans to become the hunters rather than the hunted. In fact, his dreams become the template for making contact through visions with the sleeping animal giants, and enlisting their aid in the hunt of their smaller kin.\n A nomadic culture cannot afford to express itself in huge numbers of material artifacts. But a system of dreams and visions, a network of images, a world-picture mapping and ordering the perceivable world, imparted through language, retained in the imagination\u2014this can be carried easily, with no added burden to the back (though presumably the weight on mind and memory is prodigious and requires great training to bear). For a nomadic community, a cosmology and its dream manifestations are as a portable Chartres, a weightless Louvre, a repository of knowledge, history, and advice, of injunctions to change your life or keep it as it is, all expressed in sensuous, globalizing form. This vast place is entered every night and taken along every morning in the mind, and it is both an image of possibility and a theater of action. To dream of giant animals who help you hunt their shrunken descendants changes, profoundly, your relationship to the animals you see in waking life. So, too, failure to capture an animal might force a transformation in your relationship\u2014your allegiances, your supplications\u2014to the giant animals of your dreams. \u201cThe true art of these people,\u201d Ridington writes, \u201cwas their relationship to the world itself\u201d\u2014though perhaps  art is a pale analogy for a still more consequential form of representation, one that is simultaneously a world-picture and a decisive and causative component within the world itself. [12]\n And here we are ushered into the central mystery of dream sharing, the key to its being at once an avenue into the numinous and a mechanism of the law: the world-picture that is also the world. We have been habituated to a tradition that considers dreams to be essentially texts awaiting decipherment. [13] But in the examples above, on the contrary, dreams are treated as fully four-dimensional, as complete sensual realities in which the dreamer lives just as she lives in a four-dimensional, sensual reality while awake. In this lived reality of dreams, however, two paradoxical qualities are foregrounded in a way that they are not in waking existence. On the one hand, dreams appear extraordinarily pliable when seen from the outside, as for example what is described in the Upanishads: \u201cThis is how he dreams. He takes materials from the entire world, and taking them apart on his own and then on his own putting them back together, he dreams with his own radiance, his own light.\u201d On the other, seen from the inside, once the dreamer is in the dream, there is almost no escape, no agency, as in this description given by Isaac Tens, a Tsimshian shaman, who faints in the woods after seeing a giant owl fly down and grab hold of him: \u201cI dreamed that I was now flying way up into the Sky, and here I saw a great many strange things. And I knew that it was the owl which was flying me up by grasping my head. Then I suddenly awoke \u2026 When I returned to the house of my father, I told him what had happened to me. So he said to me, \u2018The reason this has happened to you, is that you will be a great Shaman Halait.\u2019\u201d [14]\n These qualities seem to hold true across all human dreaming, though it is in the thinking of dream-sharing societies that they tend to achieve their fullest description. What is the purpose of such precise reflection on the nature and content of dreaming? To talk about dreams in waking life is to talk about the state of mind in which the world-picture we have internalized (and even in some sense authored) has absolute power over us. Make no mistake: such a state of mind is not limited to dreams. How often in our waking lives does our capacity for distanced reflection disappear, our self-consciousness vanish in the face of fear, reflex, desire, engrossment? But immersion in the world-picture is elusive in waking life, pitching in and out, furtive precisely because we cannot achieve any distance from it when we experience it. Dreams, on the other hand, are a discrete manifestation of the world the imagination generates, sealed off by the envelope of sleep, and (at least sometimes) available to the memory afterward. (And let it be clear that  imagination is not meant here as a denigrating word, equivalent to  fiction or  superstition, but rather to describe those sensual forms\u2014images, sounds, feelings\u2014not perceived by the bodily senses). Dreams are instances where the imagination unfurls its full power over us, its capacity to situate us within an entire cosmos. Dreams show how the imagination mediates between perception and action, how it takes our experience of reality and directly transmutes it into a set of possible feelings, desires, and behaviors. And dreams are instances in which these powers of the imagination can be later contemplated, while waking, at a distance. To discuss dreams, tweak them, act them out, try to alter them and manipulate them in waking life\u2014this is an attempt to achieve distance from the imagination\u2019s world-picture so as to study and refine it.\n What is essential to understand is that this is not merely a question of ideology. The culture of modern universities, in which I was trained, has many extremely sophisticated vocabularies for discussing abstractions and their relationship to experience. But we are, in contrast, poor in any praxis that might help negotiate the relationship between the patterns of sensual cognition (images, figures, sounds, memories) and the perceptual, material world in which, while awake, we all act. For these sensuous forms of thought often feed directly into action or reaction, affect and emotion, bypassing entirely the abstract vocabulary by which we might describe their substructures. (Someone can have written a dissertation on structural racism and still find himself afraid of a Black man walking behind him on the street.) Dreams have historically been one place where such praxes have been developed, where the world-picture can be contemplated discretely, and modified when needed.\n One of the most explicit\u2014and most beautiful\u2014examples that I know by which dreams are socialized into waking life belonged until recently to the Ongees of the Andaman Islands. Vishvajit Pandya worked in the 1980s among these members of one of the last hunter-gatherer cultures in the Bay of Bengal. [15] Pandya explains that before going to bed, the Ongees narrated to one another their dreams from the night before, and their experiences of the day that had just ended, especially their time spent in the forest hunting and gathering food. But in doing so, they would  negotiate the content of their dreams, modifying it so that everyone\u2019s dream accounts might be gradually aligned with one another. One person might report having dreamt of fishing on the south beach of the island, another picking nuts on the west beach, then the first might suggest a compromise:  We both went fishing in our dreams, but on the west beach.\n The indigenous explanation for this extraordinary process, Pandya reports, is as follows. During dreaming, the inner self leaves the outer self (the body) and travels the island in order to recuperate the bits of being that a person has lost during the day. These bits of being are most commonly manifest as stray smells, marooned on bushes and trees by the body during its daytime passage around the island. As the inner self collects these smells in the d\n......", "posttime": "2021-06-26 11:37:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5206\u4eab,sharing,warning", "title": "\u8bba\u68a6\u60f3\u5206\u4eab\u53ca\u5176\u76ee\u7684\uff082020\u5e74\uff09 ", "title_en": "On Dream Sharing and Its Purpose (2020)", "transed": 1, "url": "https://www.cabinetmagazine.org/issues/67/spellberg1.php", "via": "", "real_tags": ["2020", "\u5206\u4eab", "sharing", "warning"]}, {"category": "", "categoryclass": "", "imagename": "9e9245a848f2e1b1766abbe9f7f8d580.jpg", "infoid": 1068380, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6295\u8d44\u52a0\u5bc6\u8d27\u610f\u5473\u7740\u627f\u62c5\u98ce\u9669\uff0c\u4f46\u9a97\u5c40\u4e0d\u5e94\u8be5\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5411FTC\u7684\u6d88\u8d39\u8005\u54e8\u51751\u63d0\u51fa\u8bc8\u9a97\u8005\u7684\u62a5\u544a\u5efa\u8bae\u8bc8\u9a97\u8005\u6b63\u5728\u52a0\u5bc6\u8d27\u5e01\u5468\u56f4\u5151\u73b0\uff0c\u5e76\u5c06\u4eba\u4eec\u7eb3\u5165\u7eaa\u5f55\u6570\u4e2d\u7684\u865a\u5047\u6295\u8d44\u673a\u4f1a\u3002\u81ea2020\u5e7410\u6708\u4ee5\u6765\uff0c\u62a5\u544a\u98d9\u5347\uff0c\u8fd17000\u4eba\u62a5\u544a\u8fd9\u4e9b\u9a97\u5c40\u7684\u4e8f\u635f\u8d85\u8fc78000\u4e07\u7f8e\u5143\u3002 2\u4ed6\u4eec\u62a5\u544a\u7684\u4e2d\u4f4d\u6570\u635f\u5931\uff1f $ 1,900\u3002\u4e0e\u540c\u671f\u76f8\u6bd4\uff0c\u540c\u671f\uff0c\u62a5\u544a\u7684\u62a5\u544a\u6570\u91cf\u5927\u7ea6\u662f\u5341\u4e8c\u6b21\uff0c\u62a5\u544a\u635f\u5931\u8fd11,000\uff05\u3002 3.\n \u6709\u4eba\u8bf4\u6709\u4e00\u4e2a\u72c2\u91ce\u7684\u897f\u90e8\u6c1b\u56f4\u5230\u4e86\u52a0\u5bc6\u6587\u5316\uff0c\u4e5f\u662f\u4e00\u4e2a\u795e\u79d8\u7684\u5143\u7d20\u3002 Cryptocurrency\u7231\u597d\u8005\u805a\u96c6\u5728\u7ebf\u804a\u5929\u4ed6\u4eec\u7684\u5171\u540c\u6fc0\u60c5\u3002\u968f\u7740\u8fd1\u6708\u7684\u6bd4\u7279\u5e01\u7684\u4ef7\u503c\u98d9\u5347\uff0c\u65b0\u6295\u8d44\u8005\u53ef\u80fd\u6e34\u671b\u8fdb\u5165\u884c\u52a8\u3002\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u626e\u6f14\u8bc8\u9a97\u8005\u624b\u4e2d\u3002\u4ed6\u4eec\u878d\u5165\u4e86\u7d22\u8d54\u7684\u573a\u666f\u4e2d\uff0c\u56e0\u4e3a\u8bb8\u591a\u4eba\u7684\u52a0\u5bc6\u8d27\u5e01\u662f\u672a\u77e5\u7684\u9886\u571f\u3002\u5728\u7ebf\uff0c\u4eba\u4eec\u53ef\u80fd\u4f3c\u4e4e\u53cb\u597d\uff0c\u613f\u610f\u5206\u4eab\u4ed6\u4eec\u7684\u201c\u63d0\u793a\u201d\u3002\u4f46\u8fd9\u4e5f\u53ef\u4ee5\u6210\u4e3a\u6551\u8c0e\u7684\u4e00\u90e8\u5206\uff0c\u8ba9\u4eba\u4eec\u6295\u8d44\u4ed6\u4eec\u7684\u8ba1\u5212\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5176\u4e2d\u4e00\u4e9b\u65b9\u6848\u57fa\u4e8e\u63a8\u8350\u94fe\uff0c\u5e76\u901a\u8fc7\u5e26\u5165\u90a3\u65f6\u62db\u8058\u65b0\u7684\u201c\u6295\u8d44\u8005\u201d\u7684\u4eba\u6765\u5de5\u4f5c\u3002\n \u8bb8\u591a\u4eba\u62a5\u544a\u8bf1\u5bfc\u4e86\u770b\u8d77\u6765\u50cf\u6295\u8d44\u6216\u91c7\u77ff\u52a0\u5bc6\u8d27\u673a\u4f1a\u7684\u7f51\u7ad9\uff0c\u4f46\u5374\u662f\u865a\u4f2a\u7684\u3002\u4ed6\u4eec\u7ecf\u5e38\u63d0\u4f9b\u51e0\u4e2a\u6295\u8d44\u5c42 - \u6240\u4ee5\u8d8a\u591a\uff0c\u6240\u8c13\u7684\u56de\u62a5\u8d8a\u5927\u3002\u7f51\u7ad9\u4f7f\u7528\u5047\u7684\u63a8\u8350\u548c\u52a0\u5bc6\u901a\u8d27\u8d39\u672f\u8bed\u770b\u8d77\u6765\u53ef\u4fe1\uff0c\u4f46\u627f\u8bfa\u5de8\u5927\uff0c\u4fdd\u8bc1\u9000\u8d27\u53ea\u662f\u8c0e\u8a00\u3002\u8fd9\u4e9b\u7f51\u7ad9\u751a\u81f3\u53ef\u80fd\u4f1a\u4f7f\u60a8\u7684\u6295\u8d44\u589e\u957f\u3002\u4f46\u662f\uff0c\u4eba\u4eec\u62a5\u544a\u8bf4\uff0c\u5f53\u4ed6\u4eec\u8bd5\u56fe\u64a4\u9500\u6240\u8c13\u7684\u5229\u6da6\u65f6\uff0c\u4ed6\u4eec\u88ab\u544a\u77e5\u8981\u9001\u66f4\u591a\u7684\u52a0\u5bc6 - \u5e76\u6700\u7ec8\u5f97\u5230\u4efb\u4f55\u56de\u62a5\u3002\n \u7136\u540e\uff0c\u6709\u201c\u8d60\u54c1\u8bc8\u9a97\u201d\uff0c\u636e\u79f0\u662f\u7531\u540d\u4eba\u6216\u5176\u4ed6\u5df2\u77e5\u4eba\u7269\u5728\u52a0\u5bc6\u8d27\u5e01\u7a7a\u95f4\u4e2d\u8d5e\u52a9\u7684\uff0c\u8fd9\u627f\u8bfa\u7acb\u5373\u4e58\u4ee5\u60a8\u53d1\u9001\u7684\u52a0\u5bc6\u8d27\u5e01\u3002\u4f46\u662f\uff0c\u4eba\u4eec\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u7a0d\u540e\u53d1\u73b0\u4ed6\u4eec\u53ea\u662f\u5c06\u4ed6\u4eec\u7684\u52a0\u5bc6\u76f4\u63a5\u9001\u5230\u8bc8\u9a97\u8005\u7684\u94b1\u5305\u3002\u4f8b\u5982\uff0c\u636e\u62a5\u9053\uff0c\u5728\u8fc7\u53bb\u7684\u516d\u4e2a\u6708\u91cc\uff0c\u4eba\u4eec\u66fe\u62a5\u544a\u8fc7200\u591a\u4e07\u7f8e\u5143\u7684\u52a0\u5bc6\u7535\u529b\u7ed9\u57c3\u9686\u9e9d\u9999\u60a3\u8005\u3002\n \u8bc8\u9a97\u8005\u751a\u81f3\u5728\u7ebf\u4f7f\u7528\u5728\u7ebf\u7ea6\u4f1a\u5c06\u4eba\u4eec\u653e\u5165\u52a0\u5bc6\u8d27\u5e01\u6295\u8d44\u8bc8\u9a97\u3002\u8bb8\u591a\u4eba\u636e\u62a5\u9053\uff0c\u5f53\u4ed6\u4eec\u7684\u65b0\u7231\u5f00\u59cb\u804a\u5929\u804a\u5929\u70ed\u6c34\u8d27\u673a\u4f1a\u65f6\uff0c\u4ed6\u4eec\u9047\u5230\u4e86\u957f\u9014\u7684\u5173\u7cfb\uff0c\u4ed6\u4eec\u968f\u540e\u91c7\u53d6\u884c\u52a8\u3002\u81ea20\u670820\u65e5\u4ee5\u6765\uff0c\u5927\u7ea620\uff05\u7684\u4eba\u62a5\u544a\u7684\u4eba\u4eec\u901a\u8fc7\u6d6a\u6f2b\u8bc8\u9a97\u9677\u5165\u52a0\u5bc6\u8d27\u5e01\uff0c\u8bb8\u591a\u62a5\u544a\u6765\u81ea\u8868\u793a\u4ed6\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u6b63\u5728\u6295\u8d44\u7684\u4eba\u4e2d\u3002 4.\n \u81ea2020\u5e7410\u6708\u4ee5\u6765\uff0c20\u81f349\u5c81\u7684\u4eba\u6570\u8d85\u8fc7\u4e94\u500d\u4ee5\u4e0a\u62a5\u544a\u5728\u52a0\u5bc6\u8d27\u5e01\u4e0a\u7684\u9057\u5f03\u8d27\u5e01\u8d85\u8fc7\u5e74\u9f84\u7ec4\u3002 5\u8fd9\u4e9b\u6570\u5b57\u5bf920\u591a\u5c81\u548c30\u591a\u5c81\u7684\u4eba\u7279\u522b\u5f15\u4eba\u6ce8\u76ee\uff1a\u8fd9\u4e2a\u5c0f\u7ec4\u62a5\u544a\u7684\u4eba\u5728\u6295\u8d44\u9a97\u5c40\u4e0a\u5931\u53bb\u4e86\u66f4\u591a\u7684\u8d44\u91d1\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u6b3a\u8bc8\uff0c\u5176\u4e2d6\u4e2a\u4ee5\u4e0a\u7684\u6295\u8d44\u8bc8\u9a97\u635f\u5931\u662f\u52a0\u5bc6\u8d27\u5e01\u3002 7\u76f8\u6bd4\u4e4b\u4e0b\uff0c50\u4eba\u548c\u5e74\u7eaa\u8f83\u5927\u7684\u4eba\u4e0d\u592a\u53ef\u80fd\u5728\u52a0\u5bc6\u8d27\u5e01\u6295\u8d44\u8bc8\u9a97\u4e0a\u62a5\u544a\u5931\u53bb\u7684\u94b1\u3002\u4f46\u662f\uff0c\u5f53\u8fd9\u4e2a\u7fa4\u4f53\u5bf9\u8fd9\u4e9b\u9a97\u5c40\u5931\u53bb\u91d1\u94b1\u65f6\uff0c\u4ed6\u4eec\u62a5\u544a\u7684\u4e2a\u4eba\u635f\u5931\u8f83\u9ad8\uff0c\u4e2d\u4f4d\u6570\u62a5\u544a\u4e8f\u635f3,250\u7f8e\u5143\u3002\n \u8981\u6e05\u695a\uff0c\u867d\u7136\u6295\u8d44\u8bc8\u9a97\u5c06\u5217\u8868\u4e2d\u7684\u6700\u6709\u5229\u53ef\u56fe\u7684\u65b9\u5f0f\u83b7\u5f97\u52a0\u5bc6\u8d27\u5e01\uff0c\u4f46\u8bc8\u9a97\u8005\u5c06\u4f7f\u7528\u4efb\u4f55\u6545\u4e8b\u7684\u6545\u4e8b\u6765\u8ba9\u4eba\u4eec\u53d1\u9001\u52a0\u5bc6\u3002\u8fd9\u5f80\u5f80\u6d89\u53ca\u5192\u5145\u653f\u5e9c\u6743\u5a01\u6216\u77e5\u540d\u4e1a\u52a1\u3002\u4f8b\u5982\uff0c\u8bb8\u591a\u4eba\u5df2\u7ecf\u544a\u8bc9FTC\uff0c\u4ed6\u4eec\u5c06\u73b0\u91d1\u88c5\u5165\u6bd4\u7279\u5e01ATM\u673a\u5668\uff0c\u4ee5\u652f\u4ed8\u58f0\u79f0\u4ece\u793e\u4f1a\u4fdd\u969c\u7ba1\u7406\u5c40\u7684\u8f6c\u79fb\u4eba\u5458\u3002\u5176\u4ed6\u4eba\u62a5\u544a\u7ed9\u8bc8\u9a97\u8005\u4e22\u5931\u4e86\u8bc8\u9a97\u8005\uff0c\u662f\u4e00\u4e2a\u7740\u540d\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6362\u3002\u4e8b\u5b9e\u4e0a\uff0c14\uff05\u7684\u62a5\u544a\u5bf9\u6240\u6709\u7c7b\u578b\u7684\u9a7e\u9a76\u5668\u7684\u635f\u5931\u73b0\u5728\u5904\u4e8e\u52a0\u5bc6\u8d27\u5e01\u4e2d\u3002 8. \n\u4ee5\u4e0b\u662f\u8981\u77e5\u9053\u5728\u52a0\u5bc6\u7535\u6e90\u7684\u60c5\u51b5\u4e0b\u64ad\u653e\u5b83\u7684\u4e1c\u897f\uff1a\n \u4fdd\u8bc1\u5de8\u5927\u9000\u8d27\u6216\u58f0\u660e\u7684\u627f\u8bfa\uff0c\u5373\u60a8\u7684\u52a0\u5bc6\u8d27\u5e01\u5c06\u4e58\u4ee5\u603b\u662f\u9a97\u5c40\u3002\n  \u52a0\u5bc6\u8d27\u5e01\u672c\u8eab\u5c31\u662f\u6295\u8d44\u3002\u5982\u679c\u4f60\u5e78\u8fd0\u5730\u5356\u6389\u5b83\u8d85\u8fc7\u4f60\u652f\u4ed8\u7684\u4e1c\u897f\uff0c\u4f60\u4f1a\u8d5a\u94b1\u3002\u65f6\u671f\u3002\u4e0d\u8981\u76f8\u4fe1\u90a3\u4e9b\u8bf4\u4ed6\u4eec\u77e5\u9053\u66f4\u597d\u7684\u4eba\u7684\u4eba\u3002\n  \u5982\u679c\u4e00\u4e2a\u6765\u7535\u8005\uff0c\u7231\u60c5\uff0c\u7ec4\u7ec7\u6216\u5176\u4ed6\u4eba\u575a\u6301\u7740\u52a0\u5bc6\u8d27\u5e01\uff0c\u4f60\u53ef\u4ee5\u6253\u8d4c\u5b83\u662f\u4e00\u4e2a\u9a97\u5c40\u3002\n \u8981\u4e86\u89e3\u6709\u5173\u52a0\u5bc6\u8d27\u5e01\u8bc8\u9a97\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eeFTC.gov/cryptoCurrency\u3002\u5982\u679c\u60a8\u53d1\u73b0\u9a97\u5c40\uff0c\u8bf7\u5728ReportFraud.ftc.gov\u5c06\u5176\u62a5\u544a\u7ed9FTC\u3002\n        \u60a8\u662f\u60a8\u9009\u62e9\u662f\u5426\u63d0\u4ea4\u8bc4\u8bba\u3002\u5982\u679c\u60a8\u8fd9\u6837\u505a\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u7528\u6237\u540d\uff0c\u6216\u8005\u6211\u4eec\u4e0d\u4f1a\u53d1\u5e03\u60a8\u7684\u8bc4\u8bba\u3002\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u6cd5\u6848\u6388\u6743\u6b64\u4fe1\u606f\u6536\u96c6\uff0c\u4ee5\u4fbf\u7ba1\u7406\u5728\u7ebf\u8bc4\u8bba\u3002\u8bc4\u8bba\u548c\u7528\u6237\u540d\u662f\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\uff08FTC\uff09\u516c\u5171\u8bb0\u5f55\u7cfb\u7edf\uff08PDF\uff09\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6237\u59d3\u540d\u4e5f\u662fFTC\u7684\u8ba1\u7b97\u673a\u7528\u6237\u8bb0\u5f55\u7cfb\u7edf\uff08PDF\uff09\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u53ef\u80fd\u7ecf\u5e38\u4f7f\u7528FTC\u7684\u9690\u79c1\u6cd5\u5236\u5ea6\u901a\u77e5\u4e2d\u6240\u8ff0\u7684\u8fd9\u4e9b\u8bb0\u5f55\u3002\u6709\u5173FTC\u5982\u4f55\u5904\u7406\u6211\u4eec\u6536\u96c6\u7684\u4fe1\u606f\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u3002 ", "note_en": "Investing in cryptocurrency means taking on risks, but getting scammed shouldn\u2019t be one of them. Reports to the FTC\u2019s Consumer Sentinel  1 suggest scammers are cashing in on the buzz around cryptocurrency and luring people into bogus investment opportunities in record numbers. Since October 2020, reports have skyrocketed, with nearly 7,000 people reporting losses of more than $80 million on these scams.  2 Their reported median loss? $1,900. Compared to the same period a year earlier, that\u2019s about twelve times the number of reports and nearly 1,000% more in reported losses.  3\n Some say there\u2019s a Wild West vibe to the crypto culture, and an element of mystery too. Cryptocurrency enthusiasts congregate online to chat about their shared passion. And with bitcoin\u2019s value soaring in recent months, new investors may be eager  to get in on the action. All of this plays right into the hands of scammers. They blend into the scene with claims that can seem plausible because cryptocurrency is unknown territory for many people. Online, people may appear to be friendly and willing to share their \u201ctips.\u201d But that can also be part of the ruse to get people to invest in their scheme. In fact, some of these schemes are based on referral chains, and work by bringing in people who then recruit new \u201cinvestors.\u201d\n Many people have reported being lured to websites that look like opportunities for investing in or mining cryptocurrencies, but are bogus. They often offer several investment tiers \u2013 the more you put in, the bigger the supposed return. Sites use fake testimonials and cryptocurrency jargon to appear credible, but promises of enormous, guaranteed returns are simply lies. These websites may even make it look like your investment is growing. But people report that, when they try to withdraw supposed profits, they are told to send even more crypto \u2013 and end up getting nothing back.\n Then, there are \u201cgiveaway scams,\u201d supposedly sponsored by celebrities or other known figures in the cryptocurrency space, that promise to immediately multiply the cryptocurrency you send. But, people report that they discovered later that they\u2019d simply sent their crypto directly to a scammer\u2019s wallet. For example, people have reported sending more than $2 million in cryptocurrency to Elon Musk impersonators over just the past six months.\n Scammers even use online dating to draw people into cryptocurrency investment scams. Many people have reported believing they were in a long-distance relationship when their new love started chatting about a hot cryptocurrency opportunity, which they then acted on. About 20% of the money people reported losing through romance scams since October 2020 was sent in cryptocurrency, and many of these reports were from people who said they thought they were investing.  4\n Since October 2020, people ages 20 to 49 were over five times more likely to report losing money on cryptocurrency investment scams than older age groups.  5 The numbers are especially striking for people in their 20s and 30s: this group reported losing far more money on investment scams than on any other type of fraud,  6 and more than half of their reported investment scam losses were in cryptocurrency.  7 In contrast, people 50 and older were far less likely to report losing money on cryptocurrency investment scams. But when this group did lose money on these scams, their reported individual losses were higher, with a median reported loss of $3,250.\n To be clear, while investment scams top the list as the most lucrative way to obtain cryptocurrency, scammers will use whatever story works to get people to send crypto. That often involves impersonating a government authority or a well-known business. For example, many people have told the FTC they loaded cash into Bitcoin ATM machines to pay imposters claiming to be from the Social Security Administration. Others reported losing money to scammers posing as Coinbase, a well-known cryptocurrency exchange. In fact, 14% of reported losses to imposters of all types are now in cryptocurrency.  8\n Here are some things to know to play it safe(er) when it comes to cryptocurrency:\n Promises of guaranteed huge returns or claims that your cryptocurrency will be multiplied are always scams.\n  The cryptocurrency itself  is the investment. You make money if you\u2019re lucky enough to sell it for more than you paid. Period. Don\u2019t trust people who say they know a better way.\n  If a caller, love interest, organization, or anyone else insists on cryptocurrency, you can bet it\u2019s a scam.\n To learn more about cryptocurrency scams, visit  ftc.gov/cryptocurrency. If you spot a scam, report it to the FTC at  ReportFraud.ftc.gov.\n        It is your choice whether to submit a comment. If you do, you must create a user name, or we will not post your comment. The Federal Trade Commission Act authorizes this information collection for purposes of managing online comments. Comments and user names are part of the Federal Trade Commission\u2019s (FTC)  public records system (PDF), and user names also are part of the FTC\u2019s  computer user records system (PDF). We may routinely use these records as described in the FTC\u2019s  Privacy Act system notices. For more information on how the FTC handles information that we collect, please read our  privacy policy.", "posttime": "2021-06-26 11:37:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "buzz,\u52a0\u5bc6", "title": "CrypTocurrency Buzz\u9a71\u52a8\u8bb0\u5f55\u6295\u8d44\u8bc8\u9a97\u635f\u5931 ", "title_en": "Cryptocurrency buzz drives record investment scam losses", "transed": 1, "url": "https://www.ftc.gov/news-events/blogs/data-spotlight/2021/05/cryptocurrency-buzz-drives-record-investment-scam-losses", "via": "", "real_tags": ["buzz", "\u52a0\u5bc6"]}, {"category": "", "categoryclass": "", "imagename": "b11a35a9a4c568bf5cf371d14a3b3a39.jpeg", "infoid": 1068379, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Tel Aviv-\u5927\u7ea6\u4e00\u534a\u7684\u6210\u5e74\u4eba\u611f\u67d3\u4e86\u5728\u4ee5\u8272\u5217\u7684Covid-19\u7684Delta Variant\u7206\u53d1\u4e2d\u88abPfizer Inc.\u75ab\u82d7\u5b8c\u5168\u63a5\u79cd\uff0c\u4fc3\u4f7f\u653f\u5e9c\u6062\u590d\u5ba4\u5185\u9762\u819c\u8981\u6c42\u548c\u5176\u4ed6\u63aa\u65bd\uff0c\u4ee5\u542b\u6709\u9ad8\u5ea6\u4f20\u9012\u7684\u5e94\u53d8\u3002\n  \u6839\u636eRAN BOLICER\u7684\u8bf4\u6cd5\uff0c\u4ee5\u8272\u5217\u536b\u751f\u5b98\u5458\u7684\u521d\u6b65\u8c03\u67e5\u7ed3\u679c\u8868\u660e\uff0cDELTA VARIANT\u9020\u6210\u4e86\u5927\u7ea690\uff05\u7684\u65b0\u611f\u67d3\uff0c\u8fbe\u5230\u653f\u5e9c\u7684Covid-19\u4e13\u5bb6\u54a8\u8be2\u5c0f\u7ec4\u3002\u4ed6\u8bf4\uff0c16\u5c81\u4ee5\u4e0b\u7684\u513f\u7ae5\u5c1a\u672a\u63a5\u79cd\u75ab\u82d7\uff0c\u5360\u636e\u4e86\u5927\u7ea6\u4e00\u534a\u88ab\u611f\u67d3\u7684\u4eba\u3002\n  \u672c\u5468\u653f\u5e9c\u6269\u5927\u4e86\u75ab\u82d7\u63a5\u79cd\u6d3b\u52a8\uff0c\u4ee5\u4fbf\u5728\u4ee5\u8272\u5217\u4e2d\u90e8\u5c0f\u9547\u7684\u5c0f\u5b66\u751f\u4e2d\u8df3\u8dc3\u611f\u67d3\u540e\u5305\u62ec\u6240\u670912\u81f315\u5c81\u7684\u5b69\u5b50\u3002\u81ea\u4ece\u5730\u7406\u4f4d\u7f6e\u5730\u548c\u5176\u4ed6\u4eba\u53e3\u7fa4\u4f53\u8fc5\u901f\u4f20\u64ad\u3002\n  \u4ee5\u8272\u5217\u7684\u6848\u4ef6\u6570\u91cf\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5168\u7403\u6807\u51c6\u76f8\u5bf9\u8f83\u4f4e\u3002\u4f46\u662f\uff0c\u65b0\u7684Covid-19\u6848\u4f8b\u4e8e6\u670810\u65e5\u5de6\u53f3\u4e0a\u5347\u5230200\u591a\u5de6\u53f3\u3002\n  \u4ee5\u8272\u5217\u5728\u53bb\u5e74\u8fc1\u79fb\u540e\uff0c\u5728\u642c\u5bb6\u540e\uff0c\u5c06\u91cd\u65b0\u8bc4\u4f30\u5176Covid-19\u6761\u4f8b\uff0c\u4ee5\u4fbf\u5728\u53bb\u5e74\u591a\u6b21\u9501\u5b9a\u4e4b\u540e\u5f00\u8f9f\u793e\u4f1a\u548c\u7ecf\u6d4e\u3002\n  \u60a8\u5c06\u6536\u53d6$ +\u7a0e\uff08\u5982\u679c\u9002\u7528\uff09\u4e3a\u534e\u5c14\u8857\u65e5\u8bb0\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u7684\u4efb\u4f55\u65f6\u95f4\u66f4\u6539\u5e10\u5355\u504f\u597d\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u3002\u60a8\u5c06\u5728\u7387\u6216\u6761\u6b3e\u7684\u4efb\u4f55\u53d8\u5316\u63d0\u524d\u901a\u77e5\u60a8\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u8c03\u7528\u5ba2\u6237\u670d\u52a1\u6765\u53d6\u6d88\u8ba2\u9605\u3002 ", "note_en": "TEL AVIV\u2014About half of adults infected in an outbreak of the Delta variant of Covid-19 in Israel were fully inoculated with the Pfizer Inc. vaccine, prompting the government to reimpose an indoor mask requirement and other measures to contain the highly transmissible strain.\n  Preliminary findings by Israeli health officials suggest about 90% of new infections were likely caused by the Delta variant, according to Ran Balicer, who leads an expert advisory panel on Covid-19 for the government. Children under 16, most of whom haven\u2019t been vaccinated, accounted for about half of those infected, he said.\n  The government this week expanded its vaccination campaign to include all 12- to 15-year-olds after a jump in infections among schoolchildren in a town in central Israel. It has since quickly spread geographically and to other groups of the population.\n  The number of cases in Israel is relatively low by global standards. But new cases of Covid-19 rose to over 200 on Thursday from around 10 a day for most of June.\n  Israel is now reassessing its Covid-19 regulations after moving to open up its society and economy following multiple lockdowns last year.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2021-06-26 11:37:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e09\u89d2\u6d32,variant,\u4ee5\u8272\u5217", "title": "\u4ee5\u8272\u5217\u7684\u4e09\u89d2\u6d32\u53d8\u5f02\u7206\u53d1\u611f\u67d3\u4e86\u4e00\u4e9b\u75ab\u82d7\u7684\u6210\u5e74\u4eba ", "title_en": "Delta Variant Outbreak in Israel Infects Some Vaccinated Adults", "transed": 1, "url": "https://www.wsj.com/articles/vaccinated-people-account-for-half-of-new-covid-19-delta-cases-in-israeli-outbreak-11624624326", "via": "", "real_tags": ["\u4e09\u89d2\u6d32", "variant", "\u4ee5\u8272\u5217"]}, {"category": "", "categoryclass": "", "imagename": "e673b43fbc649ad91ec5b8e0d56a2262.png", "infoid": 1068378, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u77e9\u9635\u5ba4\u5728#git\uff1ahunterwittenborn.com\u63d0\u4f9b\u4e86\u8ba8\u8bba\u6211\u7684\u4efb\u4f55\u4e00\u4e2a\u9879\u76ee\u3002 \u5982\u679c\u60a8\u9700\u8981\u4efb\u4f55\u5e2e\u52a9\uff0c\u8bf7\u968f\u610f\u8df3\u8dc3\u3002  \u611f\u8c22\u4ee5\u4e0b\u516c\u53f8\uff0c\u8fd9\u4e9b\u516c\u53f8\u6177\u6168\u5730\u6388\u4e88\u8d44\u6e90\u4ee5\u5e2e\u52a9MakedeB\u9879\u76ee\uff1a  Gitbook\uff1a\u7528\u4e8e\u6587\u4ef6\u6258\u7ba1\u3002 Gitbook\u5141\u8bb8\u60a8\u4ee5\u591a\u79cd\u683c\u5f0f\u521b\u5efa\u81ea\u5df1\u7684\u6587\u6863\uff0c\u5305\u62ecMarkdown\u548cWysiWyg\u7f16\u8f91\u5668\u3002 Gitbook\u8fd8\u4e0eGitHub\u548cGoogle Analytic\u7b49\u5176\u4ed6\u670d\u52a1\u672c\u8eab\u96c6\u6210\u4e86\u3002  Inedo\uff1a\u5bf9\u4e8e\u4ed6\u4eec\u7684\u901a\u7528\u5305\u7ba1\u7406\u5668\u548cDocker\u6ce8\u518c\u8868\u5de5\u5177\uff0cProget\u3002 PROGET\u7528\u4e8eMAKEDB\u9879\u76ee\uff0c\u4ee5\u7ba1\u7406Debian\u5305\u548cDocker\u56fe\u50cf\u3002 \u6b64\u5916\uff0cProget\u8fd8\u652f\u6301\u79c1\u4eba\u5b58\u50a8\u5e93\u548c\u6ce8\u518c\u673a\u6784\uff0c\u4ee5\u53ca\u4f17\u591a\u5305\u88c5\u683c\u5f0f\uff0c\u5305\u62ecRPM\uff0cNuget\u548cNPM\u3002 ", "note_en": "A Matrix room is available at  #git:hunterwittenborn.com for discussion of any of my projects. Feel free to hop in if you need any help.\n  Thank you to the following companies who have generously given resources to help the makedeb project:\n GitBook: For documentation hosting. GitBook lets you create your own documentation in multiple formats, including Markdown and a WYSIWYG editor. GitBook also natively integrates with other services such as GitHub and Google Analytics.\n Inedo: For their universal package manager and Docker registry tool,  ProGet. ProGet is used in the makedeb project to manage both Debian packages and Docker images. In addition, ProGet also supports private repositories and registries, as well as numerous package formats, including RPM, NuGet, and npm.", "posttime": "2021-06-26 10:55:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pkgbuild,create,\u5e2e\u52a9", "title": "Makedeb  - \u4ecePKGBuild\u521b\u5efaDebian Archives ", "title_en": "Makedeb \u2013 Create Debian Archives from PKGBUILDs", "transed": 1, "url": "https://github.com/hwittenborn/makedeb", "via": "", "real_tags": ["pkgbuild", "create", "\u5e2e\u52a9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068375, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u6765\u5230DUR\uff01 \u8bf7\u9605\u8bfbAUR\u4e0a\u7684ARCHWIKI\u6587\u7ae0\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u8d21\u732e\u7684PKGBuilds\u5fc5\u987b\u7b26\u5408Dur\u7528\u6237\u6307\u5357\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u88ab\u5220\u9664\uff01  \u8bb0\u5f97\u6295\u7968\u7ed9\u4f60\u6700\u559c\u6b22\u7684\u5305\u88f9\uff01  \u514d\u8d23\u58f0\u660e\uff1aDUR\u5305\u662f\u7528\u6237\u751f\u4ea7\u7684\u5185\u5bb9\u3002 \u63d0\u4f9b\u7684\u6587\u4ef6\u7684\u4efb\u4f55\u4f7f\u7528\u90fd\u662f\u60a8\u81ea\u5df1\u7684\u98ce\u9669\u3002 ", "note_en": "Welcome to the DUR! Please read the  ArchWiki article on the AUR for more information. Contributed PKGBUILDs  must conform to the  DUR User Guidelines otherwise they will be deleted!\n\t\t\tRemember to vote for your favorite packages!\n  DISCLAIMER:\t\t\tDUR packages are user produced content. Any use of the provided files is at your own risk.", "posttime": "2021-06-26 10:54:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "debian,dur", "title": "DUR\uff1aDebian\u7528\u6237\u5b58\u50a8\u5e93 ", "title_en": "DUR: The Debian User Repository", "transed": 1, "url": "https://dur.hunterwittenborn.com/", "via": "", "real_tags": ["debian", "dur"]}, {"category": "", "categoryclass": "", "imagename": "3767b53b96ce12403b22cbe2f7b08889.jpg", "infoid": 1068374, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7845\u8c37\u548c\u8f83\u5927\u7684\u6e7e\u533a\u79d1\u6280\u793e\u533a\u4e2d\uff0c\u4eba\u4eec\u7684\u5de5\u4f5c\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u8fc5\u901f\uff0c\u56e0\u4e3a\u751f\u6d3b\u5728\u79d1\u6280\u6ce1\u6cab\u4e4b\u5916\u7684\u8bf1\u60d1\u548c\u6c57\u6c34\u7684\u8bf1\u60d1\u53ef\u80fd\u4f1a\u5728\u5927\u6d41\u884c\u540e\u6301\u7eed\u5f88\u957f\u65f6\u95f4\u3002\n  \u6848\u4f8b\u5206\u6570\uff1a\u534f\u8bae\u7684\u62a5\u544a\u53d1\u73b0\uff0c\u5728\u4e91\u8ba1\u7b97\u516c\u53f8VMware\u5de5\u4f5c\u7684\u8d85\u8fc75,000\u540d\u5458\u5de5\uff0c\u53ea\u670999\u6b21\u5c55\u793a\u4e86\u516c\u53f8\u7684\u7b2c\u4e00\u5929\uff0c\u5728\u516c\u53f8\uff06\uff0339; S 16\u5efa\u7b51\u603b\u90e8\u5e15\u6d1b\u963f\u5c14\u6258\u3002\n  \u8be5\u7f51\u7ad9\u5171\u4eab\u7684\u4f30\u8ba1\u8868\u660e\uff0cVMware\uff06\uff0339;\u603b\u90e8\u53ef\u4ee5\u5bb9\u7eb3\u591a\u8fbe8,000\u540d\u5de5\u4eba\u3002\n  VMware Executive\u5bcc\u6717\u544a\u8bc9\u79d1\u6280\u65b0\u95fb\u51fa\u53e3\u3002 \uff08\u5bf9\u4e8e\u7eaa\u5f55\uff0c\u4ed6\u662f\u7b2c\u4e00\u5929\u5728\u90a3\u4e2a\u5c55\u793a\u7684\u4eba\u4e4b\u4e00\u3002\uff09\n           \u751a\u81f3\u7ed3\u675f\u4e86\u4e00\u4e2a\u89c4\u5219\uff0c\u5373\u5728\u529e\u516c\u5ba4\u91cc\u6234\u4e0a\u75ab\u82d7\u63a5\u79cd\u5de5\u4eba\u7684\u89c4\u5219\uff0c\u90ce\u544a\u8bc9\u8bae\u5b9a\u8bae\u7684\u4e00\u4e2a\u56e0\u7d20\u53ef\u80fd\u662f\u5438\u5f15\u4eba\u4eec\u56de\u5230\u7684\u95ee\u9898\uff0c\u6ca1\u6709\u6539\u53d8\u4eba\u7684\u6295\u7968\u3002\n    \u516c\u53f8\u7684\u5185\u90e8\u8c03\u67e5\u53d1\u73b0\uff0c\u4e09\u5206\u4e4b\u4e00\u7684VMware\u5de5\u4eba\u5e0c\u671b\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u5e76\u4e14\u8fd1\u4e09\u5206\u4e4b\u4e8c\u9700\u8981\u7075\u6d3b\uff0c\u6df7\u5408\u52a8\u529b\u3002\n   VMware ISN\uff06\uff0339; t\u552f\u4e00\u4e00\u4e2a\u3002\u8c03\u67e5\u7ed3\u679c\u662f\u5bf9\u9065\u8fdc\u5de5\u4f5c\u7684\u63a0\u593a\u8005\u7684\u8bc1\u660e\u3002\u751a\u81f3\u4e00\u4e2a\u8bbe\u6709\u4e00\u5806\u8bbe\u65bd\u7684\u529e\u516c\u5ba4\uff0c\u5bf9\u5de5\u4eba\u4e0d\u592a\u53ef\u53d6\uff0c\u800c\u4e0d\u662f\u5728\u5bb6\u91cc\u5de5\u4f5c\u7684\u7075\u6d3b\u6027\uff0c\u7279\u522b\u662f\u5728\u66f4\u5b9e\u60e0\u7684\u975e\u6e7e\u533a\u57ce\u5e02\u3002 \n\u4f8b\u5982\uff0c\u6761\u7eb9\u5458\u5de5\u540c\u610f\u5982\u679c\u5b83\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u4ee5\u5728\u6d77\u6e7e\u5730\u533a\u5883\u5916\u79fb\u52a8\uff0c\u540c\u610f10\uff05\u7684\u524a\u51cf\u3002  \u7ea6\u4e66\u4e9a\u535a\u7279\u662f\u4e00\u4e2a\u6709\u5173\u7684\u65b0\u95fb\u8bb0\u8005\u3002 \u4ed6\u5728\u6d1b\u6749\u77f6\u5730\u533a\u957f\u5927\uff0c\u53bb\u4e86UC Berkeley\uff0c\u5e76\u5728\u4eca\u5929\u62c5\u4efb\u7f8e\u56fd\u7684\u8bb0\u8005\uff0c\u5e76\u5728NPR\u7684\u97f3\u4e50\u4f5c\u5bb6\u3002 \u7535\u5b50\u90ae\u4ef6\uff1aJoshua.bote@sfgate.com. ", "note_en": "In-person work is fast becoming passe in the Silicon Valley and the larger Bay Area tech community, as the allure of living outside of the tech bubble and working in sweats will likely continue long after the pandemic.\n  Case in point:  A report by Protocol found that of the more than 5,000 employees that work at the cloud computing company VMware, only 99 showed up to the first day of in-office work at the company&#39;s 16-building headquarters in Palo Alto.\n  An estimate shared by the site suggests that VMware&#39;s headquarters could house as many as 8,000 workers.\n  Rich Lang, a VMware executive, told the tech news outlet that this was to be expected. (For the record, he was one of the people who showed up in-person on that first day.)\n           Even ending a rule that mandated mask-wearing inside the office for vaccinated workers, a factor that Lang told Protocol may have been an issue for drawing people back in, didn&#39;t change in-person turnout much.\n    An internal survey by the company found that a third of VMware workers wanted to work remotely for good and that almost two-thirds wanted flexible, hybrid work.\n   VMware isn&#39;t the only one. The survey results are a testament to the spoils of remote work. An office, even one with a bunch of amenities, is less desirable to workers than the flexibility of working from home, especially in more affordable, non-Bay Area cities.\n  Stripe employees, for example, agreed to a 10% pay cut if it meant they could move outside of the Bay Area.\n  Joshua Bote is a news reporter for SFGATE. He grew up in the Los Angeles area, went to UC Berkeley and has previously worked as a reporter at USA Today and a music writer at NPR.  Email: joshua.bote@sfgate.com", "posttime": "2021-06-26 10:54:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "vmware,valley,\u79d1\u6280", "title": "\u5728\u7845\u8c37\u7684VMware\u53ea\u67092\uff05\u7684\u4eba\u51fa\u73b0\u5728\u4eb2\u81ea\u5de5\u4f5c\u7684\u7b2c\u4e00\u5929 ", "title_en": "Just 2% at Silicon Valley's VMware showed up for the first day of in-person work", "transed": 1, "url": "https://www.sfgate.com/tech/article/VMWare-2-percent-worker-Silicon-Valley-remote-work-16274581.php", "via": "", "real_tags": ["vmware", "valley", "\u79d1\u6280"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068373, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u55e8\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\u91ca\u653eSquashfs-Tools-Ng 1.1.2\uff0c\u4ee5\u53ca\u5dee\u5f02\u91ca\u653e1.0.5\uff0c\u5176\u4e2d\u5305\u542b\u9519\u8bef\u4fee\u590d\u7684\u9519\u8bef\uff0c\u5176\u4e2d\u8fd4\u56de\u52301.0.4\u53d1\u884c\u6807\u7b7e\u7684\u5355\u72ec\u5206\u652f\u3002 1.1.2\u7248\u672c\u4e3b\u8981\u5305\u542b\u7528\u4e8etar2sqfs\u7684\u53e6\u4e00\u4e2a\u9519\u8bef\u4fee\u590d\uff0c\u5173\u4e8e\u5df2\u4f7f\u7528paralletCompression\u751f\u6210\u7684BZIP2\u538b\u7f29\u6863\u6848\uff0c\u5bfc\u81f4TAR\u5b58\u6863\u4e2d\u7684\u65e9\u671f\u6d41\u7ec8\u7aef\u3002\u6dfb\u52a0\u5230Libsquashfs\u7684\u5176\u4ed6\u4fee\u590d\uff0c\u5173\u4e8e\u8f93\u51fa\u5757\u5bf9\u9f50\u3002 inatiS\u5728\u5e93\u4e2d\u5b9e\u73b0\u7684\u529f\u80fd\uff0c\u4f46\u76ee\u524d\u672a\u66dd\u5149\u547d\u4ee4\u884c\u5de5\u5177\u3002\u6b64\u5916\uff0c\u6dfb\u52a0\u65b0\u7684\u7f16\u8bd1\u5668\u8b66\u544a\u6807\u5fd7\u5e76\u76f8\u5e94\u5730\u901a\u8fc7\u8fdb\u4e00\u6b65\u52a0\u5f3a\u6f5c\u5728\u6574\u6570\u6ea2\u51fa\uff0c\u5bf9\u9f50\u95ee\u9898\u548c\u67d0\u4e9bPrintf\u683c\u5f0f\u5b57\u7b26\u4e32\u6807\u5fd7\u89d2\u5339\u914d.As\u4e0a\u9762\u63d0\u5230\u7684\u4efb\u4f55\u9519\u8bef\u4fee\u590d\u76841.1.x\u5206\u652f\u4e5f\u4f1a\u5f71\u54cd\u8f83\u65e7\u76841.0.4\u7248\u672c\uff0c\u5df2\u6301\u7eed\u8fd4\u56de\u7ed9\u540d\u4e3a\uff06\uff0334;\u4fee\u590d-14.0\uff06\uff0334;\u56e0\u4e3a\u73b0\u5728\u90a3\u4e9b\u5df2\u7ecf\u53d8\u5f97\u5f88\u591a\uff0c\u6240\u4ee5\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u76841.0.5\u91ca\u653e\u7684tarball\u3002\u8fd9\u91cc\u8fd8\u63d0\u4f9b\u4e861.0.4\u7684Tarball\u7684\u5404\u79cd\u8865\u4e01\uff1ahttps://infraroot.at/pub/squashfs/patches-1.0.4/plase\u8bf7\u6ce8\u610f\uff0clibtool so-version\u4e3a1.0.5\u7684\u51b2\u7a81\u4e0e1.1 .1\u91ca\u653e\u3002\u5b83\u4eec\u5b9e\u73b0\u4e86\u5b8c\u5168\u76f8\u540c\u7684API\uff0c\u5e76\u5e94\u7406\u8bba\u4e0a\u517c\u5bb9Beaperfectly Abi\u517c\u5bb9\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u540e\u8005\u5185\u90e8\u91cd\u7ec4\u548c\u7ee9\u6548\u6539\u8fdb\uff0c\u800c\u524d\u8005\u5305\u542b\u540e\u9000\u4fee\u590d.Tarball\uff1ahttps://infraroot.at/pub/squashfs / squashfs-tools-ng-1.2.tar.xz https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.0.5.tar.xzsignature\uff1ahttps://infraroot.at/pub/ squashfs / scashfs-tools-ng-1.1.2.tar.xz.asc https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.0.5.tar.xz.ascsigned\u6807\u7b7e\uff1ahttps\uff1a// github.com/agentd/squashfs-tools-ng.git v1.1.2 https\uff1a//github.com/agentd/squashfs-tools-ng.git v1.0.5 https://git.infraroot.at/squashfs-tools- ng.git v1.1.2 https://git.infraroot.at/squashfs-tools-ng.git v1.0.5pre-compiled windows\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f7f\u7528Mingw Crosschain\u5efa\u9020\uff0c\u53ef\u5728\u6b64\u5904\u63d0\u4f9b\uff1ahttps://infraroot.at /pub/squashfs/windows/squashfs-tools-ng-1.1.2-mingw32.zip https\uff1a//infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.2- mimentw32 .zip.asc https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw32.zip https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng. -1.0.5-mingw32.zip.asc https://infraroot.at/pub/quashfs/windows/squashfs-tools-ng-1.2-mingw64.zip https://infraroot.at/pub/squashfs/windows / squashfs-tools-ng-1.1.2-mingw64.zip.asc https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw64.zip https://infraroot.at. /pub/squashfs/windows/squashfs-tools-nc.ascfixed\u4ece1.1.1\u52301.1.2\uff1a -  libsquashfs\uff1a\u5757\u5904\u7406\u5668\u4e2d\u7684\u4fdd\u7559\u5bf9\u9f50\u6807\u5fd7 -  libsquasqus\uff1a\u5757\u5199\u5165\u4e2d\u7684\u5757\u5757\u5bf9\u9f50\u5141\u8bb8\u8fde\u63a5\u7684Bzip2\u6d41 - \u4e00\u4e9b\u6587\u6863\u6f84\u6e05\uff0c\u5e76\u4e14\u62fc\u5199\u4fee\u590d - \u4f7f\u7528Automake\u6761\u4ef6\u7528\u4e8eZSTD\u6d41\u538b\u7f29\u652f\u6301 - \u989d\u5916\u7684\u7f16\u8bd1\u5668\u8b66\u544a\u5df2\u6253\u5f00\u548c\u5bfb\u5740 -  Libfstream\uff1a\u6dfb\u52a0Printf\u683c\u5f0f\u8bf4\u660e\u7b26\u5c5e\u6027 -  libfstream\uff1a\u9632\u6b62\u6f5c\u5728\u6574\u6570\u6ea2\u51fa -  libfstree\uff1a\u9632\u8303\u94fe\u63a5\u8ba1\u6570\u548cinode\u53f7\u6ea2\u51fa -  l IBFStree\uff1a\u9632\u6b62readlink\uff08\uff09\u4e2d\u53ef\u80fd\u7684\u6ea2\u51fa -  libcommon\uff1a\u6f5c\u5728\u7684Un-aligaled\u5728LZO Compressor-libsquashfs\u4e2d\u7684\u6570\u636e\u8bbf\u95ee\uff1a\u5728\u5143\u6570\u636e\u5904\u7406\u4e2d\u7684\u6f5c\u5728\u672a\u8ba1\u7b97\u7684\u6570\u636e\u8bbf\u95ee - \u67d0\u79cd\u683c\u5f0f\u5b57\u7b26\u4e32\u7c7b\u578b/\u7b7e\u540d\u4e0d\u5339\u914d\u57281.0.4\u52301.0.5\u4e2d\u53d1\u51fa\u7684\u4e00\u4e9b\u683c\u5f0f\u5b57\u7b26\u4e32\u7c7b\u578b/\u7b7e\u540d\u4e0d\u5339\u914d\u3002 \uff1a - \u4fee\u590d\u683c\u5f0f\u5b57\u7b26\u4e32\u7c7b\u578b/\u7b7e\u540d\u4e0d\u5339\u914d\u95ee\u9898 - \u6dfb\u52a0\u6bcf\u4e2a\u4ea4\u6362\u673a\u5757\u7684\u9ed8\u8ba4\u60c5\u51b5 - \u5728\u5404\u4e2a\u5730\u65b9\u5220\u9664\u4f11\u95f2\u8054\u5408\u56fd\u961f\u4f0d -  libsquashfs\uff1a\u6446\u8131\u6f5c\u5728\u7684\u672a\u5bf9\u51c6\u7684\u8bbf\u95ee\u548cvlas- libcommon\uff1a\u5220\u9664\u6f5c\u5728\u7684\u672a\u5bf9\u51c6\u8bbf\u95eelzo Compressor- Libfstree\uff1a\u9632\u8303\u94fe\u8def\u8ba1\u6570\u548cinode\u53f7\u6ea2\u51fa -  Backport\u6587\u6863\u6f84\u6e05\u548c\u62fc\u5199\u4fee\u590d -  FIX\uff1alibsquashfs\uff1a\u5141\u8bb8\u5728Windows\u4e0a\u9759\u6001\u94fe\u63a5 -  FIX\uff1alibsquashfs\uff1a\u6dfb\u52a0sqfs_free\uff08\uff09\u51fd\u6570 -  libsquashfs\uff1afign\uff1aset\uff1aset\u5904\u7406\u5668 -  libsquashfs\uff1a\u5982\u679c\u5728\u4f7f\u7528\u53ea\u8bfb\u6807\u5fd7\uff08Win32\uff09\u7684SQFS\u6620\u50cf\u6253\u5f00SQFS\u6620\u50cf\u65f6\u8bf7\u6c42 - \u6dfb\u52a0\u5171\u4eab\u8bfb\u53d6\u8bbf\u95ee\uff0c\u5219\u4fee\u590d\u5757\u5bf9\u9f50\uff08Win32\uff09\u95ee\u5019\uff0cDavid ", "note_en": "Hi,I am pleased to announce the release of squashfs-tools-ng 1.1.2, as well as asimultaneous release of 1.0.5 which contains bug-fixes that where back-portedto a separate branch off of the 1.0.4 release tag.The 1.1.2 release contains primarily another bug fix for tar2sqfs, regardingsupport for bzip2 compressed archives that have been generated with parallelcompression, resulting in premature stream terminations in the tar archive.Another fix for libsquashfs is added, regarding output block alignment. Thisis a feature that is implemented in the library, but currently not exposedthrough the command line tools.In addition, new compiler warning flags were added and addressed accordinglywith further hardening against potential integer overflows, alignment issues,and some printf format string signdness mismatches.As mentioned above, any bug-fixes on the 1.1.x branch that also affectthe older 1.0.4 release have been continuously back-ported to a separatebranch called &#34;fixes-1.0.0&#34;. Because those have become quite numerousby now, a new 1.0.5 release tarball was generated. Individual patches ontop of the 1.0.4 tarball are also available here:  https://infraroot.at/pub/squashfs/patches-1.0.4/Please note that the libtool so-version of 1.0.5 clashes with the one fromthe 1.1.1 release. They implement the exact same API and should in theory beperfectly ABI compatible, with the main difference being that the latercontains internal restructurings and performance improvements, while the formeronly contains back-ported fixes.Tarball:  https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.1.2.tar.xz  https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.0.5.tar.xzSignature:  https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.1.2.tar.xz.asc  https://infraroot.at/pub/squashfs/squashfs-tools-ng-1.0.5.tar.xz.ascSigned tag:  https://github.com/AgentD/squashfs-tools-ng.git v1.1.2  https://github.com/AgentD/squashfs-tools-ng.git v1.0.5  https://git.infraroot.at/squashfs-tools-ng.git v1.1.2  https://git.infraroot.at/squashfs-tools-ng.git v1.0.5Pre-compiled Windows binaries, built using a MinGW cross toolchain,are available here: https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.1.2-mingw32.zip https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.1.2-mingw32.zip.asc https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw32.zip https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw32.zip.asc https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.1.2-mingw64.zip https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.1.2-mingw64.zip.asc https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw64.zip https://infraroot.at/pub/squashfs/windows/squashfs-tools-ng-1.0.5-mingw64.zip.ascFixed from 1.1.1 to 1.1.2:- libsquashfs: preserve alignment flag in block processor- libsquashfs: broken block alignment in block write- allow concatenated Bzip2 streams- Some documentation clarifications and typo fixes- Use Automake conditional for zstd stream compression support- Additional compiler warnings were turned on and addressed- libfstream: Add printf format specifier attribute- libfstream: guard against potential integer overflows- libfstree: guard against link count and inode number overflow- libfstree: guard against possible overflow in readlink()- libcommon: potentially un-aligned data access in LZO compressor- libsquashfs: potentially unaligned data access in meta data handling- Some format string type/signedness mismatch issuesFixed from 1.0.4 to 1.0.5:- Fix format string type/signedness mismatch issues- Add default cases for every switch block- Remove casual un-const casting in various places- libsquashfs: get rid of potentially unaligned access and VLAs- libcommon: remove potentially un-aligned access in LZO compressor- libfstree: guard against link count and inode number overflow- Backport documentation clarifications and typo fixes- Fix: libsquashfs: allow static linking on Windows- Fix: libsquashfs: add sqfs_free() function- libsquashfs: fix: also preserve alignment flag in block processor- libsquashfs: fix block alignment if requested- added shared read access when opening sqfs image with read-only flags (win32)Regards,David", "posttime": "2021-06-26 10:54:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,tools,https", "title": "Squashfs-Tools-ng 1.1.2\u548c1.0.5\u53d1\u5e03 ", "title_en": "Squashfs-tools-ng 1.1.2 and 1.0.5 are released", "transed": 1, "url": "https://sourceforge.net/p/squashfs/mailman/message/37310325/", "via": "", "real_tags": ["\u53d1\u5e03", "tools", "https"]}, {"category": "", "categoryclass": "", "imagename": "5101d1cebd924355c69218fe3100f583.jpg", "infoid": 1068372, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u622a\u81f32021\u5e746\u670821\u65e5\uff0cIngenuity Mars Helicopter\u5df2\u6210\u529f\u98de\u884c8\u67b6\u98de\u884c\uff0c\u4ece\u673a\u573aD\u5230\u65b0\u673a\u573ae\u5357\u4e1c\u5357\u90e8\u7ea6525\u82f1\u5c3a\uff08160\u7c73\uff09\uff01\u8fd9\u6807\u5fd7\u7740\u806a\u660e\u624d\u667a\u7684\u8fd0\u8425\u793a\u8303\u9636\u6bb5\u7684\u7b2c\u4e09\u79cd\u98de\u884c\uff0c\u5176\u4e2d\u56e2\u961f\u5c06\u7ee7\u7eed\u63a8\u52a8\u98de\u673a\u7684\u98de\u884c\u4fe1\u5c01\uff0c\u540c\u65f6\u5b66\u4e60\u6709\u4ef7\u503c\u7684\u8fd0\u8425\u8bfe\u7a0b\u3002\u822a\u73ed8\u4e5f\u662f\u8f66\u8f86\u6267\u884c\u7684\u7b2c\u4e00\u6b21\u98de\u884c\uff0c\u56e0\u4e3a\u6267\u884c\u4e86\u98de\u884c\u63a7\u5236\u5668\u98de\u884c\u8f6f\u4ef6\u7684\u66f4\u65b0\uff0c\u5e76\u4e14\u6240\u6709\u9065\u6d4b\u90fd\u8868\u660e\u66f4\u65b0\u662f\u6210\u529f\uff01\n      \u57282021\u5e744\u67089\u65e5\uff0c\u5728Sol 49\u7684\u8c03\u8bd5\u671f\u95f4\u9996\u5148\u9047\u5230\u4e86\u5b83\u7684\u770b\u95e8\u72d7\u95ee\u9898\u3002\u95ee\u9898\u7684\u75c7\u72b6\u662f\u76f4\u5347\u673a\u65e0\u6cd5\u8fc7\u6e21\u8f6f\u4ef6\u5185\u7684\u201c\u98de\u884c\u72b6\u6001\u201d\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u79cd\u5185\u90e8\u72b6\u6001\u8fc7\u6e21\uff0c\u76f4\u5347\u673a\u4e0d\u80fd\u65cb\u8f6c\u5b83\u7684\u5200\u7247\u8fbe\u5230\u5168\u901f\uff0c\u56e0\u6b64\u4e0d\u80fd\u98de\u884c\u3002\u8be5\u95ee\u9898\u6e90\u4e8e\u6211\u4eec\u7684\u98de\u884c\u63a7\u5236\u5668\u5fae\u63a7\u5236\u5668\u548c\u6211\u4eec\u7684\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217\uff08FPGA\uff09\u4e4b\u95f4\u7684\u8ba1\u7b97\u673a\u4fdd\u62a4\u548c\u53ef\u9760\u6027\u529f\u80fd\u3002\u5728\u8bd5\u56fe\u8fc7\u6e21\u5230\u201c\u98de\u884c\u72b6\u6001\u201d\u65f6\uff0cFPGA\u7684\u770b\u95e8\u72d7\u5c06\u8fdd\u53cd\u5176\u4e25\u683c\u7684\u65f6\u673a\u8981\u6c42\uff0c\u5e76\u9632\u6b62\u806a\u660e\u624d\u667a\u7ee7\u7eed\u8ba1\u5212\u7684\u65cb\u8f6c/\u98de\u884c\u3002\u8be5\u56e2\u961f\u786e\u5b9a\u4e86\u4e00\u4e2a\u5e8f\u5217\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u7ee7\u7eed\u4f7f\u7528\u98de\u884c\u6d3b\u52a8\uff0c\u4f46\u5982\u679c\u770b\u95e8\u72d7\u518d\u6b21\u89e6\u53d1\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5c1d\u8bd5\u768415\uff05\u6982\u7387\u3002\n   \u806a\u660e\u7684\u56e2\u961f\u5f88\u81ea\u8c6a\u5730\u8bf4\uff0c\u4e0a\u5468\u6211\u4eec\u5b8c\u6210\u4e86\u76f4\u5347\u673a\u4e0a\u7684\u98de\u884c\u63a7\u5236\u5668\u5fae\u63a7\u5236\u5668\u7684\u98de\u884c\u8f6f\u4ef6\u66f4\u65b0\uff0c\u610f\u56fe\u6c38\u4e45\u4fee\u590d\u4e86\u770b\u95e8\u72d7\u95ee\u9898\u3002\u6b64\u8865\u4e01\u5728\u8fd0\u8425\u793a\u8303\u4e2d\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u53ef\u9760\u6027\uff0c\u786e\u4fddHeli\u548cRover\u56e2\u961f\u53ef\u4ee5\u5728\u672a\u6765\u8ba1\u5212\u6210\u529f\u7684\u822a\u73ed\u3002\u57286\u670818\u65e5\uff0c2021\u5e746\u670818\u65e5\u6162\u901f\u65cb\u8f6c\u56de\u5f52\u6d4b\u8bd5\u4e4b\u540e\uff0c\u822a\u73ed8\u7684\u822a\u73ed\u8bc1\u5b9e\uff0cFC\u98de\u884c\u8f6f\u4ef6\u66f4\u65b0\u662f\u6210\u529f\u7684\uff0c\u800c\u4e14\u806a\u660e\u624d\u667a\u51c6\u5907\u5145\u6ee1\u4fe1\u5fc3\u5730\u8fdb\u5165OPS\u6f14\u793a\u7684\u4e0b\u4e00\u4e2a\u822a\u73ed\u3002\n  \u4e0b\u4e00\u6b65\u4e3a\u806a\u660e\u624d\u667a\u56e2\u961f\u662f\u89e3\u51b3\u552f\u4e00\u5269\u4e0b\u7684\u98de\u884c\u8f6f\u4ef6\u66f4\u65b0\uff0c\u5b83\u5c06\u66f4\u65b0\u8bc6\u522b\u7684\u5927\u90e8\u5206\u5bfc\u822a\u8ba1\u7b97\u673a\u8f6f\u4ef6\u3002\u6b64\u66f4\u65b0\u5c06\u89e3\u51b36\u4e2a\u5f02\u5e38\u7684\u98de\u884c\uff0c\u5176\u4e2d\u56fe\u50cf\u5b9a\u65f6\u5ef6\u8fdf\u8868\u73b0\u4e3a\u98de\u673a\u4f30\u8ba1\u548c\u63a7\u5236\u6311\u6218\u3002\n \u5728\u5206\u67906\u4e2a\u5f02\u5e38\u7684\u822a\u73ed\u671f\u95f4\uff0c\u8be5\u56e2\u961f\u786e\u5b9a\u6355\u83b7\u989c\u8272RTE\u76f8\u673a\u56fe\u50cf\u7684\u8fc7\u7a0b\u53ef\u80fd\u4e00\u76f4\u8bf1\u5bfc\u6210\u50cf\u7ba1\u9053\u6545\u969c\uff0c\u8fd9\u5bfc\u81f4\u98de\u884c\u671f\u95f4\u9047\u5230\u7684\u4e0d\u7a33\u5b9a\u3002\u7403\u961f\u7684\u5047\u8bbe\u662f\u5927\u578bCPU\u6355\u83b7RTE\u768413\u767e\u4e07\u50cf\u7d20\u5f69\u8272\u56fe\u50cf\u6240\u6d89\u53ca\u7684\u8d1f\u8f7d\u53ef\u80fd\u5bfc\u81f4\u7f55\u89c1\u7684\u5bfc\u822a\u6444\u50cf\u673a\u56fe\u50cf\u5728\u7ba1\u9053\u4e2d\u4e22\u5f03\u3002\u90a3\u4e9b\u8fdd\u89c4\u8005\u3002\u76f8\u673a\u56fe\u50cf\u6ef4\u662f\u5bfc\u81f4\u98de\u884c\uff036\u5f02\u5e38\u7684\u539f\u56e0\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e487\u548c8\u822a\u73ed\u6ca1\u6709\u6355\u83b7\u7684\u5f69\u8272\u56fe\u50cf\u3002\u5f53\u7ba1\u9053\u4e2d\u7684\u56fe\u50cf\u65f6\u95f4\u6233\u53d8\u4e3a\u5220\u9664/\u8df3\u8fc7/\u8df3\u8fc7/\u8df3\u8fc7/\u8df3\u8fc7\u65f6\uff0c\u6b64\u66f4\u65b0\u5c06\u63d0\u4f9b\u76f4\u5347\u673a\u68c0\u6d4b\u548c\u66f4\u6b63\u7684\u673a\u5236\uff0c\u540c\u65f6\u8fd8\u91cd\u65b0\u542f\u7528\u9ad8\u5206\u8fa8\u738713\u767e\u4e07\u50cf\u7d20\u5f69\u8272\u56fe\u50cf\u3002\u8ba1\u5212\u5728\u672a\u6765\u51e0\u5929\u5185\u8fdb\u884c\u6b64\u66f4\u65b0\uff0c\u5176\u6b21\u662fin Engenuity\u7684\u7b2c\u4e5d\u6b21\u5728\u706b\u661f\u4e0a\u98de\u884c\u3002 ", "note_en": "As of June 21, 2021, Ingenuity Mars Helicopter has successfully flown its 8 th flight, traveling about 525 feet (160 meters) south-southeast from Airfield D to the new Airfield E! This marks the third flight in the Operations Demonstration Phase of Ingenuity, in which the team will continue to push the flight envelope of the aircraft while learning valuable operational lessons. Flight 8 was also the first flight the vehicle executed since performing an update of its Flight-Controller flight software and all telemetry indicates that the update was a success!\n      Ingenuity first encountered its watchdog issue during commissioning on Sol 49, April 9, 2021. The symptom of the problem is that the helicopter cannot transition into the \u201cflight-state\u201d within the software. Without this internal state transition, the helicopter cannot spin its blades up to full speed, and, therefore, cannot fly. The issue stems from a computer protection and reliability feature between our Flight Controller microcontrollers and our Field Programmable Gate Array (FPGA). When attempting to transition to the \u201cflight-state,\u201d the watchdog on the FPGA would detect violations to its strict timing requirements and prevent Ingenuity from continuing with its planned spin/flight. The team identified a sequence workaround that would allow us to proceed with flight activities, but we have a 15% probability of needing re-attempts if the watchdog triggered again.\n   The Ingenuity team is proud to say that last week we completed a flight software update of the Flight Controller microcontrollers on the helicopter, with the intent of permanently fixing the watchdog issue. This patch provides much needed reliability in the operations demonstration, ensuring that the heli and rover teams can plan for successful flights in the future. Following a 50 rpm slow-speed spin regression test on June 18, 2021, or Sol 116, Flight 8 confirmed that the FC flight software update was a success and that Ingenuity is ready to proceed with confidence into the next flights of the ops demo.\n  Up next for the Ingenuity team is to tackle the only remaining flight software update, which will update a large portion of the Ingenuity\u2019s navigation-computer software. This update will address the  Flight 6 anomaly, where image timing delays manifested into aircraft estimation and control challenges.\n During the course of analyzing the Flight 6 anomaly, the team determined that the process of capturing color RTE camera images may have been inducing the imaging pipeline glitch, which resulted in the instability encountered during Flight # 6. The team\u2019s hypothesis is that the large CPU load involved in capturing the\u00a0RTE\u2019s\u00a013-megapixel color images, could result in rare instances of navigation camera images being dropped in the pipeline. Those nav. camera image drops are what caused the Flight #6 anomaly.\u00a0\u00a0That is why Flights 7 and 8 did not have any color images captured. This update will provide a mechanism for the Helicopter to detect and correct when image timestamps in the pipeline become out-of-synch/are dropped/skipped, while also re-enabling the capture of high-resolution 13-megapixel color images.\u00a0 This update is planned to occur in the coming days, followed by Ingenuity\u2019s ninth flight on Mars.", "posttime": "2021-06-26 10:53:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u706b\u661f,\u76f4\u5347\u673a,helicopter,\u98de\u884c", "title": "\u706b\u661f\u76f4\u5347\u673a\uff1a\u822a\u73ed8\u6210\u529f\uff0c\u8f6f\u4ef6\u66f4\u65b0\u548c\u4e0b\u4e00\u6b65 ", "title_en": "Mars Helicopter: Flight 8 Success, Software Updates, and Next Steps", "transed": 1, "url": "https://mars.nasa.gov/technology/helicopter/status/308/flight-8-success-software-updates-and-next-steps/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u706b\u661f", "\u76f4\u5347\u673a", "\u98de\u884c"]}, {"category": "", "categoryclass": "", "imagename": "48986fe638f488f4f484b1ab1a5668b2.png", "infoid": 1068371, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f2f\u514b\u5229\u6587\u6863\u6458\u8981\u662f\u4e00\u79cd\u57fa\u4e8e\u5b66\u4e60\u7684\u5355\u4e00\u6587\u4ef6umileimarization\u7cfb\u7edf\u3002\u5b83\u57fa\u4e8eConstraintSfrom\u6784\u9020\u89e3\u6790\u548cRST\u8bdd\u8bed\u89e3\u6790\u538b\u7f29\u6e90\u6587\u6863\u6587\u672c\u3002\u6b64\u5916\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u8868\u5165\u4ee3\u8bcd\u6765\u63d0\u9ad8\u6f84\u6e05\uff0c\u5176\u5426\u5219\u5176\u5426\u5219\u8131\u9970\u6216\u4e0d\u6e05\u695a\u3002\n \u6ce8\u610f\uff1a\u5982\u679c\u60a8\u6240\u6709\u4eba\uff06\uff0339; revers in\u611f\u5174\u8da3\u7684\u662f\u7ebd\u7ea6\u65f6\u62a5dataSet\uff0c\u60a8\u65e0\u9700\u6267\u884c\u4ee5\u4e0b\u5927\u90e8\u5206\u8bbe\u7f6e\u548c\u9884\u5904\u7406\u3002\u76f8\u53cd\uff0c\u4f7f\u7528\u9884\u6784\u5efa\u7684.jar\u5e76\u5728\uff06\uff0334;\u7ebd\u7ea6\u65f6\u62a5\u6570\u636e\u96c6\uff06\uff0334\u4e2d\u8fd0\u884c\u547d\u4ee4; \uff06\uff0334\u4e0b\u7684\u90e8\u5206;\u57f9\u8bad\uff06\uff0334;\u4e0b\u9762\u3002\n   \uff06\uff0334;\u57fa\u4e8e\u5b66\u4e60\u7684\u5355\u4e00\u6587\u4ef6\u6458\u8981\uff0c\u538b\u7f29\u548c\u89c6\u529b\u5b50\u9650\u5236\uff06\uff0334; Greg Durritt\uff0cTaylor Berg-Kirkpatrick\u548cDan Klein\u3002 ACL 2016\u3002\n     \u8be5\u7a0b\u5e8f\u662f\u514d\u8d39\u8f6f\u4ef6\uff1a\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u7531\u8f6f\u4ef6\u57fa\u7840\uff0c\u200b\u200b\u8bb8\u53ef\u8bc1\u7248\u672c3\u7684\u7248\u672c\uff0c\u6216\uff08\u5728\u60a8\u7684\u9009\u9879\u4e2d\uff09\u7684\u4efb\u4f55\u66f4\u4ecb\u7ecd\u7248\u672c\u7684GNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u4e0b\u91cd\u65b0\u5206\u914d\u5b83\u548c/\u6216\u4fee\u6539\u3002\n \u8be5\u8ba1\u5212\u7684\u5206\u914d\u5e0c\u671b\u5b83\u5c06\u662f\u6709\u7528\u7684\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u4fdd\u4fee;\u751a\u81f3\u6ca1\u6709\u9ed8\u793a\u7684\u5a01\u80c1\u6216\u9002\u5408\u7279\u5b9a\u76ee\u7684\u7684\u4fdd\u8bc1\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605GNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u3002\n \u60a8\u5e94\u8be5\u6536\u5230GNU\u901a\u7528\u516c\u5171Licensealong\u7684\u526f\u672c\uff0c\u5e76\u4f7f\u7528\u6b64\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u53c2\u9605http://www.gnu.org/licenses/\n   \u7531\u4e8e\u5176\u5c3a\u5bf8\u5927\uff0c\u6a21\u578b\u4e0d\u5305\u62ec\u5728Github\u4e2d\u3002\u4ecehttp://nlp.cs.berkeley.edu/projects/summarizer.shtml\u4e0b\u8f7dNothounmodels\u3002\u57f9\u8bad\u7cfb\u7edf\uff08\u60a8\u9700\u8981EDU\u5206\u6bb5\u5668\uff0c\u8bdd\u8bed\u7a0b\u5e8f\u548cCoreference Model\uff09\u4ee5\u53ca\u8fd0\u884c\u5b83\uff08\u60a8\u9700\u8981EDU\u5206\u6bb5\u5668\uff0c\u8bdd\u8bed\u89e3\u6790\u5668\u548c\u5305\u542bCoreference Model\u7684\u6458\u8981\u6a21\u578b\uff09\u3002\u5176\u4e2d\u7684\u6240\u6709\u662f\u9884\u671f\u5728\u6a21\u578b/\u5b50\u76ee\u5f55\u4e2d\u3002 \n\u6211\u4eec\u8fd8\u9700\u8981Shane Bergsma\u548cDekang Lin\u5728\uff06\uff0334\u4e2d\u7684\u6570\u91cf\u548c\u6027\u522b\u6570\u636e\u4f20\u9012;\u5f15\u5bfc\u8def\u5f84\u7684\u4ee3\u8bcd\u5206\u8fa8\u7387\uff06\uff0334; .dowload\u8fd9\uff0cUntar / gzip\u5b83\uff0c\u5e76\u5c06\u5176\u653e\u5728Data / gender.data\uff08\u9ed8\u8ba4\u8def\u5f84\uff09 systemexpects\u5b83\u5728\uff09\u3002\n  \u5bf9\u4e8e\u6c42\u89e3ILPS\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u4f9d\u8d56\u4e8eGLPK\uff0c\u7279\u522b\u662fGLPK for Java.\u5bf9\u4e8eOS X\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5b89\u88c5GLPK\u7684\u65b9\u6cd5\u3002\u5728Linux\u4e0a\uff0c\u60a8\u5e94\u8be5\u8fd0\u884csudo apt-get install glpk-utils libglpk-dev libglpk-java\u3002\n libglpk-java\u548cjava\u672c\u673a\u754c\u9762\uff08JNI\uff09\u5e93\u90fd\u9700\u8981\u5728inyour java library\u8def\u5f84\u4e2d\uff08\u89c1\u4e0b\u9762\u7684\u65b9\u6cd5\uff09;\u8fd9\u4e9b\u5e93allowjava\u4e0e\u672c\u673aGLPK\u4ee3\u7801\u4ea4\u4e92\u3002\u6b64\u5916\uff0c\u5728\u8fd0\u884c\u4e2d\u6587\u65f6\uff0c\u5fc5\u987b\u5728\u6784\u5efa\u8def\u5f84\u4e0a\u5177\u6709GLPK-Java-1.1.0.jar;\u8fd9\u662f\u5728lib\u76ee\u5f55\u4e2d\u5305\u542b\u7684\uff0c\u5e76\u4e0e\u5206\u5e03\u5f0fjar\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u5982\u679c\u4f7f\u7528SBT\u6784\u5efa\uff0c\u5c06\u81ea\u52a8\u5305\u542b\u3002\n \u60a8\u53ef\u4ee5\u6d4b\u8bd5\u7cfb\u7edf\u662f\u5426\u53ef\u4ee5\u4f7f\u7528Run -Glpk-test.sh\u6210\u529f\u8c03\u7528GLPK\uff0c\u8fd9\u8bd5\u56fe\u89e3\u51b3\u5728edu.berkeley.nlp.summ.glpktest\u4e2d\u5b9a\u4e49\u7684\u5c0fILP\u3002\u811a\u672c\u5c1d\u8bd5\u4f7f\u7528/ usr / local / lib / jni\u589e\u5f3a\u52a8\u8def\u5f84\uff0c\u5176\u4e2d\u6709\u65f6\u662fjnilibrary\u4f4d\u4e8eOS X\u4e0a\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6b64\u811a\u672c\u62a5\u544a\u9519\u8bef\uff0c\u5219\u53ef\u80fd\u9700\u8981ToAugment java\u5e93\u8def\u5f84\u4e0e\u5176\u4e2d\u7684\u4f4d\u7f6eJNI\u6216Thelibglpk_java\u5e93\u5982\u4e0b\uff1a\n       \u60a8\u8fd8\u53ef\u4ee5\u5c06\u5176\u5bfc\u5165Eclipse\u5e76\u4f7f\u7528Scala IDE\u63d2\u4ef6\u7528\u4e8eEclipse http://scala-ide.org\n  \u4e24\u4e2a\u6700\u6709\u7528\u7684\u4e3b\u7c7b\u662fedu.berkeley.nlp.summ.main\u548cedu.berkeley.nlp.summ.summarizer\u3002\u524d\u8005\u662f\u4e00\u4e2a\u6d89\u53ca\u7684\u57f9\u8bad\u548c\u8bc4\u4f30\u7ebd\u7ea6\u65f6\u62a5\u8bed\u6599\u5e93\u7684\u7cfb\u7edf\uff08\u89c1Wepsfor\u5982\u4f55\u83b7\u53d6\u8fd9\u4e2a\u8bed\u6599\u5e93\uff09\uff0c\u540e\u8005\u53ea\u9700\u57f9\u8bad\u57f9\u8bad\u7684\u578b\u53f7\u800c\u4e14\u8fd0\u884c\u5b83\u3002\u8fd9\u4e24\u4e2a\u6587\u4ef6\u90fd\u5305\u542b\u5176\u529f\u80fd\u548c\u547d\u4ee4\u7ebf\u6027\u5316\u7684\u63cf\u8ff0\u3002\n \u5728Run -summarizer.sh\u4e2d\u5305\u542b\u5728\u65b0\u6570\u636e\u4e0a\u8fd0\u884c\u7684\u793a\u4f8b\u3002\u5728\u65b0\u6570\u636e\u4e0a\u8fd0\u884c\u6458\u8981\u7684\u4e3b\u8981\u6807\u51c6\u662f\u5c06\u6570\u636e\u9884\u5904\u7406\u4e0e\u9009\u533a\u89e3\u6790\uff0cner\u548ccoreference\u7684conll\u683c\u5f0f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7cfb\u7edf\uff0c\u8bf7\u53c2\u9605\u4f2f\u514b\u5229\u5b9e\u4f53\u89e3\u6790\u7cfb\u7edf\u3002\u6d4b\u8bd5/\u76ee\u5f55\u5df2\u5305\u542b\u4e00\u4e9b\u6b64\u7c7b\u6587\u4ef6\u3002 \n\u7136\u540e\u6458\u8981\u4e0eEDU\u5206\u6bb5\u548c\u8bdd\u8bed\u89e3\u6790\u8fdb\u884c\u4e86\u989d\u5916\u7684\u5904\u7406\u3002\u8fd9\u4e9b\u4f7f\u7528\u9ed8\u8ba4\u9ed8\u8ba4\u7684\u6a21\u578b/ edusegmenter.ser.gz\u548cmodels / discoursedep.ser.gz\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u4ea4\u6362\u673a\u63a7\u5236\u8fd9\u4e9b\u3002\n  Summarizer-full.ser.gz\uff1a\u4e00\u79cd\u5e26\u6765\u7684\u538b\u7f29\u6458\u8981\uff0c\u5177\u6709\u91cd\u5199\u4ee3\u8bcd\u7684\u80fd\u529b\u548c\u9644\u52a0\u7684\u523b\u5f55\u529f\u80fd\u548c\u7ea6\u675f\n   \u6211\u4eec\u7528\u4e8e\u57f9\u8bad\u548c\u8bc4\u4f30\u7684\u4e3b\u8981\u8bed\u6599\u5e93\u662f\u7ebd\u7ea6\u65f6\u62a5\u6ce8\u91ca\u8bed\u6599\u5e93\uff08Sandhaus\uff0c2007\uff09\uff0cLDC2008T19\u3002\u6211\u4eec\u5c06\u9884\u5904\u7406\u4f5c\u4e3a\u5bbf\u820d\u6ce8\u91ca\u5206\u53d1\uff0c\u9664\u4e86\u7528\u4e8e\u624b\u52a8\u62d2\u7edd\u5355\u8bcd\u7684\u67d0\u4e9b\u60c5\u51b5\uff08\u4f8b\u5982\uff0c\u5f53\u6388\u6743\u4f7f\u6211\u4eec\u7684\u6570\u636e\u4e0d\u53ef\u6062\u590d\u7684\u5355\u8bcd\uff0c\u9664\u4e86\u67d0\u4e9b\u60c5\u51b5\u4e4b\u5916\uff0c\u9664\u4e86\u6709\uff08Line\uff0cChar Start\uff0cChar End End End End End\uff09Triples\u3002\u4e00\u4e9b\u5206\u6563\u7684\u4ee4\u724c\u662f\u660e\u786e\u7684\uff0c\u52a0\u4e0a\u5927\u7ea61\uff05\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u65e0\u6cd5\u627e\u5230\u5408\u9002\u7684\u5bf9\u9f50\u3002\n \u8981\u51c6\u5907\u6570\u636e\u96c6\uff0c\u8bf7\u9996\u5148\u9700\u8981\u4ece2003-2007\u7684\u6240\u6709XML\u6587\u4ef6\u4e2d\u63d0\u53d6\u5230\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709XML\u6587\u4ef6\u3002\u5e76\u975e\u6240\u6709\u6587\u4ef6\u90fd\u6709\u6458\u8981\uff0c\u6240\u4ee5\u5e76\u975e\u6240\u6709\u8fd9\u4e9b\u90fd\u5c06\u4f7f\u7528\u3002\u63a5\u4e0b\u6765\uff0c\u8fd0\u884c\n  \u8fd9\u5c06\u91c7\u7528\u5217\u8f66\u65c1\u8def\u6ce8\u91ca\u6587\u4ef6\u5e76\u4f7f\u7528XML\u6570\u636e\u91cd\u5efa\u771f\u5b9e\u6587\u4ef6\uff0c\u5199\u5165\u8f93\u51fa\u76ee\u5f55\u3002\u4f7f\u7528EVAL\u800c\u4e0d\u662fTRIAINTO\u91cd\u5efa\u6d4b\u8bd5\u96c6\u3002\n  java -xmx3g -cp\uff06lt; jarpath\uff06gt; edu.berkeley.nlp.summ.preprocess.standofOnotationHandler \\ -Inputdir train_abstracts_standoff / -rawxmldir\uff06lt; path_to_flattene_nyt_xmls\uff06gt; -outputdir train_abstracts / \\ \\ -tagname\uff06\uff0334;\u6458\u8981\uff06\uff0334;\n   \u6211\u4eec\u5c06\u7cfb\u7edf\u4e0e\u80ed\u8102\u53d1\u5c04\u5668\u7684\u7248\u672c\u6346\u7ed1\u5728\u4e00\u8d77\u3002 Rouge-gillick.sh Hardcodes\u5728\u6b64\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u548cHirao\u7b49\u4eba\u3002 \uff082013\uff09\uff06\uff0339;\u5de5\u4f5c\u3002\u8be5\u7cfb\u7edf\u671f\u671b\u5728\u6267\u884c\u76ee\u5f55\u4e2d\u7684\u80ed\u8102/\u80ed\u8102/\u76ee\u5f55\u4e0b\uff0c\u4ee5\u53ca\u9002\u5f53\u7684\u6570\u636e\u6587\u4ef6\uff08\u6211\u4eec\u4e0e\u6b64\u7248\u672c\u4e2d\u7684ve Alsobundled\uff09\u3002 \n\u8bf7\u53c2\u9605edu.berkeley.nlp.summ.rougecomputer.evaluaterougenontok\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0e\u6211\u4eec\u7684\u8bc4\u4f30\u4e00\u81f4\u7684\u65b9\u5f0f\u8bc4\u4f30\u80ed\u8102\u7684\u65b9\u6cd5\u3002  java -xmx80g -cp\uff06lt; jarpath\uff06gt; -djava.library.path =\uff06lt;\u5e93\u8def\u5f84\uff06gt;\uff1a/ usr / local / lib / jni edu.berkeley.nlp.summ.main \\ -traindocspath\uff06lt; path_to_train_conll_docs\uff06gt; -trainabstractspath\uff06lt; path_to_train_summaries\uff06gt; \\ -evaldocspath\uff06lt; path_to_eval_conll_docs\uff06gt; -evalabstractspath\uff06lt; path_to_eval_summaries\uff06gt; -abstractsareconll \\ -modelpath\uff06\uff0334;\u6a21\u578b/\u8bad\u7ec3\u6a21\u578b.ser.gz\uff06\uff0334; -corefmodelpath\uff06\uff0334;\u6a21\u578b/ coref-to.ser.gz\uff06\uff0334; \\ -printSummaries -PrintSummariesFortk \\  \u5176\u4e2d\uff06lt; jarpath\uff06gt;\uff0c\uff06lt;\u5e93\u8def\u5f84\uff06gt;\uff0c\u5e76\u4e14\u76f8\u5e94\u5730\u5b9e\u4f8b\u5316\u6570\u636e\u8def\u5f84\u3002 \u7531\u4e8e\u901a\u8fc7\u6ce8\u91ca\u7f13\u5b5825,000\u6b21\u57f9\u8bad\u6587\u6863\uff0c\u7cfb\u7edf\u9700\u8981Lotof\u5185\u5b58\u3002  \uff08\u7531\u4e8e\u6b64\u91ca\u653e\u7684\u5fae\u5c0f\u53d8\u5316\uff0c\u7ed3\u679c\u4e0e\u672c\u6587\u4e2d\u7684\u7ed3\u679c\u7565\u6709\u4e0d\u540c\u3002\uff09 ", "note_en": "The Berkeley Document Summarizer is a learning-based single-documentsummarization system. It compresses source document text based on constraintsfrom constituency parses and RST discourse parses. Moreover, it can improvesummary clarity by reexpressing pronouns whose antecedents would otherwise bedeleted or unclear.\n NOTE: If all you&#39;re interested in is the New York Times dataset, you do  notneed to do most of the setup and preprocessing below. Instead, use the pre-built.jar and run the commands in the &#34;New York Times Dataset&#34; section under &#34;Training&#34;below.\n   &#34;Learning-Based Single-Document Summarization with Compression and Anaphoricity Constraints&#34;Greg Durrett, Taylor Berg-Kirkpatrick, and Dan Klein. ACL 2016.\n     This program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.\n This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See theGNU General Public License for more details.\n You should have received a copy of the GNU General Public Licensealong with this program. If not, see  http://www.gnu.org/licenses/\n   Models are not included in GitHub due to their large size. Download the latestmodels from  http://nlp.cs.berkeley.edu/projects/summarizer.shtml. Theseare necessary for both training the system (you need the EDU segmenter, discourseparser, and coreference model) as well as running it (you need the EDU segmenter,discourse parser, and summarization model, which contains the coreference model).All of these are expected in the models/ subdirectory.\n We also require  number and gender dataproduced by Shane Bergsma and Dekang Lin in in &#34;Bootstrapping Path-Based Pronoun Resolution&#34;.Download this, untar/gzip it, and put it at  data/gender.data (default path the systemexpects it to be at).\n  For solving ILPs, our system relies on GLPK, specifically  GLPK for Java.For OS X, the easiest way to install GLPK is with  homebrew. On Linux,you should run  sudo apt-get install glpk-utils libglpk-dev libglpk-java.\n Both the libglpk-java and Java Native Interface (JNI) libraries need to be inyour Java library path (see below for how to test this); these libraries allowJava to interact with the native GLPK code. Additionally, when running thesystem, you must have  glpk-java-1.1.0.jar on the build path; this isincluded in the lib directory and bundled with the distributed jar, and willcontinue to be included automatically if you build with sbt.\n You can test whether the system can call GLPK successfully with with run-glpk-test.sh, which tries to solve a small ILP defined in edu.berkeley.nlp.summ.GLPKTest. The script attempts to augment thelibrary path with  /usr/local/lib/jni, which is sometimes where the JNIlibrary is located on OS X. If this script reports an error, you may need toaugment the Java library path with the location of either the JNI or thelibglpk_java libraries as follows:\n       You can also import it into Eclipse and use the Scala IDE plug-in for Eclipse http://scala-ide.org\n  The two most useful main classes are  edu.berkeley.nlp.summ.Main and edu.berkeley.nlp.summ.Summarizer. The former is a more involved harnessfor training and evaluating the system on the New York Times corpus (see belowfor how to acquire this corpus), and the latter simply takes a trained modeland runs it. Both files contain descriptions of their functionality and command-linearguments.\n An example run on new data is included in  run-summarizer.sh. The mainprerequisite for running the summarizer on new data is having that data preprocessedin the CoNLL format with constituency parses, NER, and coreference. For a system thatdoes this, see the  Berkeley Entity Resolution System.The  test/ directory already contains a few such files.\n The summarizer then does additional processing with EDU segmentation and discourse parsing.These use the models that are by default located in  models/edusegmenter.ser.gz and models/discoursedep.ser.gz. You can control these with command-line switches.\n  summarizer-full.ser.gz: an extractive-compressive summarizer with the ability to rewrite pronounsand additional coreference features and constraints\n   The primary corpus we use for training and evaluation is the New York Times Annotated Corpus(Sandhaus, 2007), LDC2008T19. We distribute our preprocessing as standoff annotations whichreplace words with (line, char start, char end) triples, except for some cases where words areincluded manually (e.g. when tokenization makes our data non-recoverable from the originalfile). A few scattered tokens are included explicitly, plus roughly 1% of files that oursystem couldn&#39;t find a suitable alignment for.\n To prepare the dataset, first you need to extract all the XML files from 2003-2007 and flattenthem into a single directory. Not all files have summaries, so not all of these willbe used. Next, run\n  This will take the train standoff annotation files and reconstitutethe real files using the XML data, writing to the output directory. Use  eval instead of  trainto reconstitute the test set.\n  java -Xmx3g -cp &lt;jarpath&gt; edu.berkeley.nlp.summ.preprocess.StandoffAnnotationHandler \\ -inputDir train_abstracts_standoff/ -rawXMLDir &lt;path_to_flattened_NYT_XMLs&gt; -outputDir train_abstracts/ \\ -tagName &#34;abstract&#34;\n   We bundle the system with a version of the ROUGE scorer that will be called duringexecution.  rouge-gillick.sh hardcodes command-line arguments used in this work andin Hirao et al. (2013)&#39;s work. The system expects this in the  rouge/ROUGE/ directoryunder the execution directory, along with the appropriate data files (which we&#39;ve alsobundled with this release).\n See  edu.berkeley.nlp.summ.RougeComputer.evaluateRougeNonTok for a method you canuse to evaluate ROUGE in a manner consistent with our evaluation.\n   java -Xmx80g -cp &lt;jarpath&gt; -Djava.library.path=&lt;library path&gt;:/usr/local/lib/jni edu.berkeley.nlp.summ.Main \\ -trainDocsPath &lt;path_to_train_conll_docs&gt; -trainAbstractsPath &lt;path_to_train_summaries&gt; \\ -evalDocsPath &lt;path_to_eval_conll_docs&gt; -evalAbstractsPath &lt;path_to_eval_summaries&gt; -abstractsAreConll \\ -modelPath &#34;models/trained-model.ser.gz&#34; -corefModelPath &#34;models/coref-onto.ser.gz&#34; \\ -printSummaries -printSummariesForTurk \\\n where  &lt;jarpath&gt;,  &lt;library path&gt;, and the data paths are instantiated accordingly. The system requires a lotof memory due to caching 25,000 training documents with annotations.\n       (Results are slightly different from those in the paper due to minor changes for thisrelease.)", "posttime": "2021-06-26 10:11:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6587\u4ef6,document", "title": "\u4f2f\u514b\u5229\u6587\u4ef6\u6458\u8981 - \u57fa\u4e8e\u5b66\u4e60\u7684\u5355\u4e00\u6587\u4ef6\u6458\u8981 ", "title_en": "Berkeley Document Summarizer \u2013 learning-based, single-document summarization", "transed": 1, "url": "https://github.com/gregdurrett/berkeley-doc-summarizer", "via": "", "real_tags": ["\u6587\u4ef6", "document"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068370, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u6d41\u884c\u671f\u95f4\u793e\u4f1a\u89c4\u8303\u6025\u5267\u53d1\u751f\u53d8\u5316\u3002\u516d\u82f1\u5c3a\u7684\u758f\u8fdc\u548c\u9762\u7f69\u7a7f\u7740\u5728\u67d0\u4e9b\u793e\u533a\u4e2d\u7684\u4e8b\u5b9e\u4e0a\u7684\u89c4\u5219\uff0c\u800c\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u6234\u7740\u9762\u5177\u88ab\u89c6\u4e3a\u9a9a\u6270\u9080\u8bf7\u3002\u5728\u7687\u5bb6\u5b66\u4f1aB\u7684\u8bc9\u8bbc\u7a0b\u5e8f\u4e2d\u8fdb\u884c\u4e86\u4e00\u9879\u65b0\u7814\u7a76\uff0c\u8981\u6c42\u4eba\u4eec\u5982\u4f55\u5b66\u4e60\u65b0\u7684\u793e\u4f1a\u89c4\u8303\u4ee5\u53ca\u8fd9\u4e9b\u89c4\u8303\u7684\u7075\u6d3b\u6027\u3002\u4f7f\u7528\u4e00\u7cfb\u5217\u7b80\u5355\u7684\u89c6\u9891\u6e38\u620f\uff0c\u4f5c\u8005Uri Hertz\u8868\u660e\uff0c\u4e00\u4e9b\u89c4\u8303\u6bd4\u5176\u4ed6\u89c4\u8303\u66f4\u5bb9\u6613\u53d8\u5316\u3002\u6700\u4e0d\u7075\u6d3b\u7684\u884c\u4e3a\u6a21\u5f0f\u8bc1\u660e\u662f\u90a3\u4e9b\u79ef\u6781\u4f24\u5bb3\u4ed6\u4eba\u7684\u884c\u4e3a\u6a21\u5f0f\u3002\n \u4e3a\u4e86\u7814\u7a76\u4eba\u4eec\u5982\u4f55\u5b66\u4e60\u7fa4\u4f53\u671f\u671b\uff0c\u8d6b\u5179\u662f\u6d77\u6cd5\u5927\u5b66\u7684\u8ba4\u77e5\u795e\u7ecf\u79d1\u5b66\u5bb6\uff0c\u4ee5\u8272\u5217\uff0c\u62db\u8058\u4e86276\u540d\u53c2\u4e0e\u8005\u6765\u6f14\u594f\u7b80\u5355\u7684\u89c6\u9891\u6e38\u620f\u3002\u73a9\u5bb6\u56f4\u7ed5\u6570\u5b57\u7f51\u683c\u6536\u96c6\u661f\u661f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b\u6309\u94ae\u6765\u4e92\u76f8\u4e92\u52a8\u3002\u5728\u6bcf\u573a\u6bd4\u8d5b\u4e2d\uff0c\u4e00\u4e2a\u53c2\u4e0e\u8005\u4e0e\u5176\u4ed6\u51e0\u4e2a\u201c\u73a9\u5bb6\u201d\u4e00\u8d77\u64ad\u653e\uff0c\u5b9e\u9645\u4e0a\u662f\u9884\u7f16\u7a0b\u7684\u673a\u5668\u4eba\u3002\u6709\u56db\u79cd\u53ef\u80fd\u7684\u793e\u4f1a\u73af\u5883\u3002\u7b2c\u4e00\u4e2a\u73af\u5883\u662f\u79ef\u6781\u4f24\u5bb3\u7684\u6587\u5316\uff0c\u5176\u4e2d\u673a\u5668\u4eba\u7ecf\u5e38\u88ab\u6467\u6bc1\u5176\u4ed6\u73a9\u5bb6\u4ece\u6e38\u620f\u4e2d\u5f39\u51fa\u3002\u7b2c\u4e8c\u4e2a\u662f\u79ef\u6781\u5e2e\u52a9\u7684\u6587\u5316\uff0c\u5176\u4e2d\u70e7\u7126\u9891\u7e41\u4f46\u6709\u76ca\uff0c\u8d4b\u4e88\u4e86\u7206\u7834\u7684\u73a9\u5bb6\u5956\u52b1\u3002\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u73af\u5883\u662f\u88ab\u52a8\u7684\u793e\u4f1a\u6587\u5316\uff0c\u5176\u4e2d\u5206\u522b\u662f\u6709\u5bb3\u6216\u6709\u76ca\u7684\uff0c\u4f46\u673a\u5668\u4eba\u907f\u514d\u4e86\u5176\u4ed6\u73a9\u5bb6\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u4f7f\u7528\u4e0d\u540c\u7684\u793e\u4f1a\u73af\u5883\u626e\u6f14\u4e86\u4e24\u6b21\u6e38\u620f\u7684\u8bd5\u9a8c\u3002\n  \u65e0\u8bba\u54ea\u4e2a\u73af\u5883\u73a9\u5bb6\u90fd\u5f00\u59cb\uff0c\u4ed6\u4eec\u5f88\u5bb9\u6613\u9002\u5e94\u7b2c\u4e00\u6b21\u5ba1\u5224\u4e2d\u7684\u793e\u4f1a\u89c4\u8303\u3002\u7136\u540e\u5728\u7b2c\u4e8c\u6b21\u8bd5\u9a8c\u4e2d\uff0c\u5927\u591a\u6570\u53c2\u4e0e\u8005\u8f7b\u677e\u5207\u6362\u5230\u65b0\u7684\u793e\u4f1a\u89c4\u8303\uff0c\u4f8b\u5982\u4ece\u6709\u76ca\u7684ZPPAPPAPT\u5230ZAP\u907f\u514d\u8f6c\u6362\u3002 \u201c\u4f46\u662f\u4e00\u4e2a\u884c\u4e3a\u5bf9\u8fd9\u79cd\u53d8\u5316\u6709\u6240\u9002\u5e94\uff0c\u201d\u8d6b\u5179\u8bf4\u3002\u5728\u7b2c\u4e00\u6b21\u8bd5\u9a8c\u4e2d\u7ecf\u5386\u4e86\u79ef\u6781\u6709\u5bb3\u7684\u9cc4\u5c40\u7684\u4eba\u901a\u8fc7\u8bd5\u9a8c\uff0c\u5373\u4f7f\u793e\u4f1a\u89c4\u8303\u8f6c\u6362\u4e3aZAP\u907f\u514d\uff0c\u4e5f\u4f1a\u901a\u8fc7\u8bd5\u9a8c\u8fdb\u884c\u5206\u6790\u3002\u5927\u6d41\u884c\u4e2d\u7684\u4e00\u4e2a\u7c7b\u6bd4\u53ef\u80fd\u662f\u4f69\u65af\u4f69\u65af\u4f69\u6234\u9762\u5177\u7684\u4eba\uff0c\u5357\u52a0\u5dde\u5927\u5b66\uff08USC\uff09\u7684\u5fc3\u7406\u5b66\u5bb6\u5728\u6d1b\u6749\u77f6\u7684\u5fc3\u7406\u5b66\u5bb6Los Hackel\u8bf4\uff0c\u4ed6\u4eec\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u65b0\u5de5\u4f5c\u3002\u5728\u9762\u5bf9\u9762\u58c1\u677f\u73b0\u5728\u662f\u5e38\u6001\u7684\u793e\u533a\u4e2d\uff0c\u4ed6\u8bf4\uff0c\u5728\u9006\u5411\u573a\u666f\u4e2d\uff0c\u53ef\u80fd\u66f4\u96be\u5b66\u4e60\u5bbd\u5bb9\uff0c\u5728\u5176\u4e2d\u6ca1\u6709\u4eba\u53d7\u5230\u5f71\u54cd\u3002\n \u201c\u95ee\u9898\u662f\u8fd9\u79cd\u6548\u679c\u7684\u4e0b\u9762\u662f\u4ec0\u4e48\uff0c\u201d\u8d6b\u5179\u8bf4\u3002\u5728\u89c6\u9891\u6e38\u620f\u8bd5\u9a8c\u4e4b\u540e\uff0cHertz\u5c06\u591a\u79cd\u8ba4\u77e5\u6a21\u578b\u5e94\u7528\u4e8e\u6570\u636e\u3002\u6700\u80fd\u591f\u9884\u6d4b\u53c2\u4e0e\u8005\u8868\u73b0\u7684\u6a21\u578b\u662f\u5176\u4e2d\u73a9\u5bb6\u5b66\u4f1a\u6bd4\u4e0d\u540c\uff08ZAP\u907f\u514d\uff09\u6bd4\u6a21\u4eff\u52a8\u4f5c\uff08Zap\uff09\u7684\u73a9\u5bb6\uff08Zap\u907f\u514d\uff09\uff0c\u5e76\u4e14\u5176\u4e2d\u9633\u6027\u884c\u4e3a\u88ab\u5f52\u56e0\u4e8e\u4e2a\u4eba\uff0c\u800c\u8d1f\u884c\u4e3a\u5f52\u56e0\u4e8e\u8be5\u7ec4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73a9\u5bb6\u770b\u5230\u4e00\u4e2a\u84dd\u8272\u673a\u5668\u4eba\u7ed9\u53e6\u4e00\u4e2a\u673a\u5668\u4eba\u63d0\u4f9b\u6709\u76ca\u7684Zap\uff0c\u90a3\u4e48\u7403\u5458\u53ef\u80fd\u4f1a\u62c5\u5fc3\u84dd\u8272\u673a\u5668\u4eba\u4f5c\u4e3a\u4e2a\u4f53\u7684\u4e1c\u897f\u3002\u4f46\u5982\u679c\u540c\u4e00\u7403\u5458\u770b\u5230\u4e86\u84dd\u8272\u673a\u5668\u4eba\u6709\u5bb3\u5730\u70e7\u65ad\u53e6\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u7403\u5458\u5c06\u6210\u4e3a\u6574\u4e2a\u7ec4\u7684\u654c\u5bf9\u3002 \u201c\u6d88\u6781\u7684\u4e8b\u60c5\u5f80\u5f80\u4f1a\u8ba9\u4f60\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u66f4\u52a0\u6000\u7591\uff0c\u201d\u8d6b\u5179\u8bf4\u3002\u5408\u5e76\uff0c\u65e2\u6709\u6d3b\u8dc3\u548c\u8d1f\u9762\u7684\u884c\u4e3a\u90fd\u662f\u53cc\u91cd\u504f\u89c1\u7684\uff0c\u56e0\u6b64\u8d8a\u6765\u8d8a\u96be\u4ee5\u514b\u670d\uff0c\u8fd9\u4e5f\u8bb8\u662f\u4e3a\u4ec0\u4e48\u6709\u5bb3\u7684\u70e7\u7126\u662f\u6700\u96be\u4ee5\u6539\u53d8\u7684\u884c\u4e3a\u3002\u5728\u7b2c\u4e00\u6b21\u8bd5\u9a8c\u4e2d\u770b\u5230\u6709\u5bb3\u70e7\u70e4\u7684\u7403\u5458\u53ef\u80fd\u4f1a\u5047\u8bbe\u751a\u81f3\u5728\u7b2c\u4e8c\u6b21\u8bd5\u9a8c\u4e2d\u7684\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u80fd\u53d8\u5f97\u654c\u5bf9\u3002\n USC\u7684Hackel\u8bf4\uff0c\u4e86\u89e3\u4eba\u4eec\u52aa\u529b\u6539\u53d8\u7684\u4f55\u65f6\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u52aa\u529b\u6539\u53d8\u662f\u4e00\u79cd\u7d27\u8feb\u7684\u95ee\u9898\uff0c\u8fd9\u9879\u7814\u7a76\u63ed\u793a\u4e86\u4e00\u4e9b\u5149\u7ebf\u3002\u7f57\u5fb7\u5c9b\u5e03\u6717\u5927\u5b66\u7684\u795e\u7ecf\u79d1\u5b66\u5bb6orielfeldmelmhall\u6307\u51fa\uff0c\u6559\u5b66\u65b0\u7684\u548c\u73b0\u5b9e\u7684\u793e\u4f1a\u89c4\u8303\u5f80\u5f80\u5728\u5b9e\u9a8c\u5ba4\u6311\u6218\uff0c\u56e0\u4e3a\u53d7\u8bd5\u8005\u4e0e\u73b0\u6709\u7684\u4fe1\u4ef0\u8fbe\u6210\u3002\u8fd9\u4e9b\u65b9\u6cd5\u662f\u201c\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u6700\u806a\u660e\u7684\u90e8\u5206\uff0c\u201d\u5979\u8bf4\uff0c\u56e0\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e86\u89e3\u51b3\u65b9\u6cd5\uff1a\u4e00\u79cd\u89c6\u9891\u6e38\u620f\uff0c\u4ee5\u6d4b\u8bd5\u4ece\u4efb\u4f55\u719f\u6089\u7684\u793e\u4ea4\u73af\u5883\u4e2d\u5220\u9664\u7684\u793e\u4ea4\u884c\u4e3a\u3002\n \u63a5\u4e0b\u6765\uff0cHertz\u5e0c\u671b\u4f7f\u7528\u673a\u5668\u4eba\u7684\u6d3e\u7cfb\u8fd0\u884c\u7c7b\u4f3c\u7684\u5b9e\u9a8c\u6765\u6d4b\u8bd5\u53c2\u4e0e\u8005\u5982\u4f55\u5b66\u4f1a\u8bc6\u522b\u7fa4\u4f53\u3002 \u201c\u60f3\u60f3\u9ad8\u4e2d\u3002 \u201c\u4ed6\u8bf4\uff0c\u6709\u5f88\u9177\u7684\u5bb6\u4f19\u548c\u4e66\u5446\u5b50\u3002\u6ca1\u6709\u4eba\u53d1\u51fa\u4eba\u6c14\u624b\u518c\uff0c\u4f46\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u793e\u4f1a\u79e9\u5e8f\u3002 \u201c\u6211\u4eec\u5bf9\u4eba\u4eec\u5982\u4f55\u63a8\u65ad\u8fd9\u4e9b\u5f52\u56e0\u7684\u4eba\u7684\u4e8b\u60c5\uff0c\u201d\u8d6b\u5179\u8bf4\u3002\u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f3c\u4e4e\u5f88\u6e05\u695a\u7684\u662f\u201c\u79ef\u6781\u7684\u4e1c\u897f\u201d\u9a71\u52a8\u884c\u4e3a\u53d8\u9769\u3002 ", "note_en": "Social norms changed dramatically during the pandemic. Six-foot distancing and mask wearing became de facto rules in some communities, while elsewhere, wearing a mask was seen as an invitation for harassment. A new  study in  Proceedings of the Royal Society B asks how people learn new social norms and how flexible those norms can be. Using a series of simple video games, author Uri Hertz showed that some norms are easier to change than others. The least flexible behavioral patterns turned out to be those that actively harm others.\n To study how people learn group expectations, Hertz, a cognitive neuroscientist at the University of Haifa, Israel, recruited 276 participants to play a simple video game. Players moved around a digital grid collecting stars and could zap each other by pressing a button. In each game, a single participant played with several other \u201cplayers\u201d that were actually preprogrammed bots. There were four possible social environments. The first environment was a culture of active harm, in which the bots frequently zapped other players to eject them from the game. The second was a culture of active helping, in which zapping was frequent but beneficial, conferring a bonus on the zapped player.\u00a0The third and fourth environments were passive social cultures, where zapping was harmful or beneficial, respectively, but bots avoided zapping other players. Every participant played two trials of the game with different social environments.\n  No matter which environment players started out in, they readily adapted to match the social norms in their first trial. Then in the second trial, most participants easily switched to a new social norm, for instance transitioning from beneficial zapping to zap avoidance. \u201cBut one behavior was resilient to this change,\u201d Hertz says. People who experienced an actively harmful zapping environment in the first trial kept zapping through trial two, even when the social norm switched to zap avoidance. An analogy in the pandemic might be heckling people who wear masks, a kind of active harm, says Leor Hackel, a psychologist at the University of Southern California (USC) in Los Angeles, who was not involved in this new work. In communities where confronting mask wearers is now the norm, it might be harder to learn tolerance than in the reverse scenario, he says, in which nobody is heckled.\n \u201cThe question is what underlies this effect,\u201d Hertz says. After the video game trials, Hertz applied several cognitive models to the data. The model that best predicted how the participants behaved was one in which players learned to mimic actions (zapping) more easily than nonactions (zap avoidance), and in which positive behaviors were attributed to individuals while negative behaviors were attributed to the group. For instance, if a player saw a blue bot giving a beneficial zap to another bot, the player was likely to assume something nice about the blue bot as an individual. But if that same player saw the blue bot harmfully zapping another bot, then the player would become hostile to the whole group. \u201cNegative things tend to make you more suspicious towards everyone,\u201d Hertz says. Combined, behaviors that are both active and negative are doubly biased and thus harder to overcome, which is perhaps why harmful zapping was the hardest behavior to change. Players who had seen harmful zapping in the first trial might assume that even avoidant bots could become hostile at any moment in the second trial.\n Understanding when and why people struggle to change is a pressing question in psychology, on which this study sheds some light, USC\u2019s Hackel says. Neuroscientist Oriel FeldmanHall at Brown University in Rhode Island notes that teaching new and realistic social norms is often challenging in the lab because subjects arrive with existing beliefs. The methods are \u201cthe cleverest part of this experiment,\u201d she says, because they offer a workaround: a video game to test social behavior removed from any familiar social context.\n Next up, Hertz hopes to run similar experiments using cliques of bots to test how participants learn to recognize in-groups. \u201cThink about high school. There are the cool guys and the nerds,\u201d he says. Nobody hands out a popularity manual, yet everyone knows the social order. \u201cWe don\u2019t know a lot about how people infer these things that are group attributed,\u201d Hertz says. So far, what does seem clear is that \u201cbig active things\u201d drive behavioral change.", "posttime": "2021-06-26 10:11:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u884c\u4e3a,social,\u73a9\u5bb6", "title": "\u6709\u5bb3\u7684\u793e\u4f1a\u884c\u4e3a\u662f\u8f6c\u53d8\u6700\u8270\u96be\u7684 ", "title_en": "Harmful social behaviors are the toughest to shift", "transed": 1, "url": "http://blog.pnas.org/2021/06/harmful-social-behaviors-are-the-toughest-to-shift/", "via": "", "real_tags": ["\u884c\u4e3a", "social", "\u73a9\u5bb6"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1068514, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "o\u4e3b\u9875\r\ro cm\u9057\u4ea7\uff1a\u6280\u672f\r \r O CM-1 / CM-2\u8bbe\u8ba1\u9057\u4ea7\r\ro\u7269\u54c1\r\ro\u56fe\u50cf\u753b\u5eca\r\rO\uff06\uff0334; Feynman\uff06\uff0334;\rCM-1 T\u6064\n   \u57281987\u5e74\u63a8\u51fa\u4e09\u5341\u5e74\u540e\uff0cA CM-2\u4f5c\u4e3a\u5c55\u4f1a\u7684\u5c55\u89c8\uff1a\r \uff06\uff0334;\u601d\u7ef4\u673a\u5668\uff1a\u8ba1\u7b97\u673a\u5e74\u9f84\u7684\u827a\u672f\u548c\u8bbe\u8ba1\uff0c1959-1989\uff06\uff0334;\r2017\u5e7411\u670813\u65e5Moma Ny  -  2018\u5e744\u67088\u65e5\n  \u6211\u53c2\u52a0\u4e862017\u5e7411\u670814\u65e5\u5728MOMA\u7684\u5c0f\u7ec4\u8ba8\u8bba\uff1a\r \uff06\uff0334;\u601d\u7ef4\u673a\u5668\uff1a\u665a\u4e0a\u4e0eBeryl Korot\uff0cZabet Patterson\u548cTamiko Thiel\uff06\uff0334;\r\u89c2\u770b\u5f55\u97f3\uff06gt;\u8fd9\u91cc\n  \u53e6\u8bf7\u53c2\u9605CM-1 / CM-2\u8bbe\u8ba1\u9057\u4ea7\u4e0a\u7684\u9875\u9762\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u5982\u4f55\u7684\u6545\u4e8b\r \u8fde\u63a5\u673a\u5668\u6539\u53d8\u4e86\u53f2\u8482\u592b\u4e54\u5e03\u65af\u7684\u8bbe\u8ba1\u6f5c\u529b\u3002\n       \u8fde\u63a5\u673aCM-1\u662f\u7b2c\u4e00\u4e2a\u8bbe\u8ba1\u7528\u4e8e\u4eba\u5de5\u667a\u80fd\uff08AI\uff09\u95ee\u9898\u7684\u9996\u6b3e\u5546\u4e1a\u8d85\u7ea7\u8ba1\u7b97\u673a\u3002\u5177\u670965,536\u4e2a\u5904\u7406\u5668\u7684\u5927\u578b\u5e73\u884c\u8d85\u7ea7\u8ba1\u7b97\u673a\uff0c\u8fd9\u662f\u8111\u58f3\r \u4e39\u5c3c\u5e0c\u5c14\u8482\u65af\uff0c\u572820\u4e16\u7eaa80\u5e74\u4ee3\u521d\u6784\u5efa\u7684\uff0c\u800c\u4ed6\u662f\u4e00\u4e2a\u535a\u58eb\u751f\r Marvin Minsky\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\uff0c\u5e76\u5efa\u4e8e\u4ed6\u7684\u521d\u521b\u601d\u7ef4\u673a\u5668\u516c\u53f8\u3002\u79bb\u5f00\u4f20\u7edf\u7535\u8111\r \u67b6\u6784\u7684\u65f6\u95f4\uff0cCM-1\u5728\u4eba\u8111\u7684\u7ed3\u6784\u4e0a\u8fdb\u884c\u4e86\u5efa\u6a21\uff1a\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\r \u5355\u4e2a\u5f3a\u5927\u7684\u5904\u7406\u5668\u8981\u6267\u884c\u8ba1\u7b97\u4e00\u4e2a\u63a5\u4e00\u4e2a\uff0c\u6570\u636e\u5206\u5e03\u5728\r \u6210\u5343\u4e0a\u4e07\u7684\u7b80\u53551\u4f4d\u5904\u7406\u5668\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u8ba1\u7b97\uff0c\u79f0\u4e3a\u5355\u6307\u4ee4\u591a\u6570\u636e\uff08SIMD\uff09\u7684\u67b6\u6784\u3002\n  \u8ba9\u5904\u7406\u5668\u6bd4\u4ee5\u524d\u7684SIMD\u8bbe\u8ba1\u66f4\u5feb\u5730\u901a\u4fe1\u662f\u5185\u90e8\u7f51\u7edc\uff0c\u8bfa\u8d1d\u5c14\u5956\u7269\u7406\u5b66\u5bb6Richard Feynman\u5efa\u8bae\u768412\u7ef4Boolean N-Cube\u7ed3\u6784\uff0c\u4ed6\u82b1\u4e86\u4ed6\u7684\u590f\u5929\u4e0e\u6211\u4eec\u5408\u4f5c\u3002\u5728\u8fd9\u79cd\u786c\u8fde\u7ebf\u7269\u7406\u7ed3\u6784\u4e2d\uff0c\u8f6f\u4ef6\u6570\u636e\r \u5904\u7406\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u4f20\u8f93\u6570\u636e\u7684\u7ed3\u6784\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\r \u8bba\u95ee\u9898\u7684\u6027\u8d28\u3002\u5904\u7406\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u66f4\u91cd\u8981\r \u6bd4\u5904\u7406\u5668\u672c\u8eab\uff0c\u56e0\u6b64\u540d\u79f0\uff06\uff0334;\u8fde\u63a5\u673a\u3002\uff06\uff0334;\n  1987\u5e74\uff0cCM-1\u4ee5\u76f8\u540c\u7684\u5305\u88c5\u548c\u7c7b\u4f3c\u67b6\u6784\u66f4\u5f3a\u5927\u7684CM-2\u53d6\u4ee3\u3002 1991\u5e74\uff0cCM-1 / CM-2\u9ad8\u901f\u8bbe\u8ba1\u7531CM-5\u53d6\u4ee3\uff0c\u5f62\u5f0f\u548c\u67b6\u6784\u975e\u5e38\u4e0d\u540c\u3002\u4ed6\u4eec\u7684\u4e00\u5929\u4e2d\u6bcf\u4e00\u5929\u90fd\u8d62\u5f97\u4e86\u7740\u540d\u7684\u6208\u767b\u00b7\u8d1d\u5c14\u5956\uff0c\u662f\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u7684\u8d85\u7ea7\u8ba1\u7b97\u673a\uff0c1989\u5e74\u7684CM-2\u548c1993\u5e74\u7684CM-5\u3002 \n1983-1985\u6211\u6307\u793a\u5305\u88c5\u548c\u5de5\u4e1a\u8bbe\u8ba1\r\u8fde\u63a5\u673aCM-1\u5728\u601d\u7ef4\u673a\u68b0\u516c\u53f8\uff0c\u4e0e\u5de5\u4e1a\u8bbe\u8ba1\u987e\u95ee\u5408\u4f5c\r  Allen Hawthorne\u548cGordon Bruce\uff0c\u4ee5\u53ca\u673a\u68b0\u5de5\u7a0b\u987e\u95eeTed Bilodeau\u3002 CM-2\uff0c\u91ca\u653e\r1987\u5e74\uff0c\u662f\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u7ee7\u4efb\u8005\uff08\u5305\u62ec\u6d6e\u70b9\u786c\u4ef6\uff09\u5305\u542b\u5728\u540c\u4e00\u7269\u7406\u5305\u4e2d\u3002\n  \u673a\u5668\u7684\u5f62\u5f0f\u662f\u8868\u8fbe\u5176\u521b\u9020\u8005\u7684\u529f\u80fd\u548c\u6fc0\u60c5\uff1a\r\u5236\u4f5cA\uff06\uff0334\u7684\u68a6\u60f3;\u673a\u68b0SAPIENS\uff0c\uff06\uff0334;\u4e00\u4e2a\u65b0\u7684\u751f\u6d3b\uff0c\u601d\u7ef4\u673a\u5668\u3002\u6709\u5173\u89c6\u89c9\u8bbe\u8ba1\u540e\u9762\u7684\u8bbe\u8ba1\u5386\u53f2\uff0c\u7406\u8bba\u548c\u6982\u5ff5\u7684\u63cf\u8ff0\uff0c\u8bf7\u53c2\u9605\u6211\u7684\u6587\u7ae0\uff1a\n  Thiel\uff0cTamiko\u3002 \uff06\uff0334;\u8bbe\u8ba1\r \u8fde\u63a5\u673a\u5668\uff0c\uff06\uff0334; \uff08PDF\u6216HTML\uff09\u5728\u8bbe\u8ba1\u95ee\u9898\u4e2d\uff0cMIT Press\uff0cCambridge\uff0cMA\uff0cVol\u3002 10\uff0c\u7b2c1\u53f7\uff0c1994\u5e74\u6625\u5b63\u3002\u7b2c5-18\u9875\u3002\r \u91cd\u65b0\u53d1\u5e03\r\r\u8fd9\u672c\u4e66\uff06\uff0334;\u8bbe\u8ba1\u7684\u4e16\u754c\uff1a\u56fe\u50cf\uff0c\u7269\u4f53\uff0c\u73af\u5883\u3002\uff06\uff0334;\u7f16\u8f91\uff1aRichard Buchanan\uff0cDennis Doordan\u548cVictor Margolin\uff0c2010\u5e74\u3002\n    \u6211\u7684\u8001\u670b\u53cbJoanna Hoffman\u662f\u7b2c\u4e00\u4e2aMacintosh\u548c\u4e0b\u4e00\u53f0\u7535\u8111\u7684\u8425\u9500\u7ecf\u7406\uff0c\u53f2\u8482\u592b\u4e54\u5e03\u65af\uff06\uff0339; \uff06\uff0334;\u53f3\u624b\uff0c\uff06\uff0334;\u5982\u51ef\u7279Winslet\u6240\u793a\u7684\u8584\u819c\uff06\uff0334;\u53f2\u8482\u592b\u4e54\u5e03\u65af\u3002\uff06\uff0334; 1986\u5e74\uff0c\u5f53\u8fde\u63a5\u673a\u51fa\u6765\u65f6\uff0c\u4e54\u5e03\u65af\u8981\u6c42\u5979\u8ba9\u5176\u8bbe\u8ba1\u5e08\u521b\u5efa\u4ed6\u7684\u65b0\u7535\u8111\u3002\u4e54\u5b89\u5a1c\u56de\u7b54\u8bf4\uff0c\uff06\uff0334; Tamiko\u5df2\u7ecf\u592a\u665a\u4e86\uff0c\u6b27\u6d32\u6210\u4e3a\u827a\u672f\u5bb6\uff01\uff06\uff0334;\u4f46\u662f\u8fd9\u53f0\u673a\u5668\u5bf9\u4ed6\u6301\u4e45\u7684\u5370\u8c61\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u5c31\u4e1a\uff06\uff0339;\u8bbe\u8ba1\u4e0d\u4ec5\u4ec5\u662f\u6709\u7528\u7684 - \u4ed6\u4eec\u662f\u89c6\u89c9\u4e0a\u5d07\u9ad8\u7684\u3002\n        \uff06\uff0334;\u751a\u81f3\u6709\u7535\u8111\u8bbe\u8ba1\u7684\u82f1\u96c4\uff1a20\u4e16\u7eaa80\u5e74\u4ee3\u7684CM-1\u548cCM-2\u5e76\u884c\u8d85\u7ea7\u8ba1\u7b97\u673a\uff0c\u7531Tamiko Thiel\u9886\u5bfc\u7684\u56e2\u961f\u8bbe\u8ba1\uff0c\u4f18\u96c5\u800c\u4ee4\u4eba\u7740\u8ff7\u3002\u5728\u8036\u9c81\u65af\uff0c\u6e38\u5ba2\u7ecf\u5e38\u88ab\u673a\u623f\u505c\u4e0b\u6765\u6b23\u8d4f\u96d5\u5851\u7684\u4e1c\u897f\u3002\uff06\uff0334;\r Gelernter\uff0cDavid\u3002 \uff06\uff0334;\u8d85\u8d8a\u7070\u8272\u76d2\u5b50\uff0c\uff06\uff0334; ID\u6742\u5fd7\uff0c\u5377\u3002 45\uff032\uff0c3\u6708/ 4\u67081998\u5e74\uff0c\u7b2c60\u9875\u3002\n        \u572820\u4e16\u7eaa80\u5e74\u4ee3\u65e9\u671f/\u4e2d\u671f\uff0c\u4ec5\u8003\u8651AI\u548c\u5e76\u884c\u52a0\u5de5\uff0c\u4ec5\u8003\u8651\u8c61\u7259\u5854\u5b66\u8005\uff0c\u800c\u4e0d\u662f\u771f\u5b9e\u4e16\u754c\u7684\u8ba1\u7b97\u548c\u89e3\u51b3\u95ee\u9898\u3002 Danny Hillis\uff06\uff0339;\u7136\u800c\uff0c\u6fc0\u8fdb\u7684\u65b0\u65b9\u6cd5\u5438\u5f15\u4e86\u79d1\u5b66\u5bb6\u5bf9\u770b\u5230\u4ef7\u503c\u7684\u673a\u5668\u548c\u4e13\u6ce8\u4e8e\u6570\u636e\u672c\u8eab\u6240\u9700\u7684\u7ed3\u6784\u7684\u8ba1\u7b97\u8303\u4f8b\uff0c\u800c\u4e0d\u662f\u66f4\u5feb\uff0c\u66f4\u5feb\u7684\u4e32\u884c\u5904\u7406\u5668\u3002\n  \u4eca\u5929\uff06\uff0339; AI\u65f6\u95f4\u7ebf\u7684\u5386\u53f2\u7701\u7565\u4e86Danny\u548c\u5176\u4ed6\u79d1\u5b66\u5bb6\u5728\u601d\u7ef4\u673a\u5668\u548c\u8fde\u63a5\u673a\u5668\u4e0a\u505a\u7684\u5de5\u4f5c\u3002\u4ed6\u4eec\u7684\u8d21\u732e\u88ab\u9057\u5fd8\u4e86\u3002\u4f46\u662f\uff0c\u6211\u4e0e\u82e5\u5e72\u540c\u4e8b\u7684\u91c7\u8bbf\u63ed\u793a\u4e86\u601d\u60f3\uff0c\u7f16\u7a0b\u6280\u672f\uff0c\u8f6f\u4ef6\u548c\u786c\u4ef6\u4eca\u5929\u7684\u6280\u672f\u3002\u4e00\u4e9b\u4f8b\u5b50\uff1a \n\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5bb6Richard Feynman\u4f7f\u7528\u4e86\u8fde\u63a5\u673a\u5668\u6765\u5bf9\u65b0\u9886\u57df\u7684\u5f00\u521b\u6027\u60f3\u6cd5\u8fdb\u884c\u5de5\u4f5c\uff1a\u91cf\u5b50\u8ba1\u7b97\u3002\n  Brewster Kahle\u8c08\u8bba\u4ed6\u7684\u5b66\u671f\uff06\uff0334;\u5927\u6570\u636e\uff06\uff0334;\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8fde\u63a5\u673a\u5668\u5f00\u53d1\u7b2c\u4e00\u53f0\u81ea\u7136\u8bed\u8a00\u641c\u7d22\u5f15\u64ce\u3002\n  Danny Hillis\u8c08\u5230\u4e86\u8c37\u6b4c\u5982\u4f55\u6210\u4e3a\u4e16\u754c\uff06\uff0339; S\u9996\u653e\u641c\u7d22\u5f15\u64ce\u548cAI\u516c\u53f8\uff0c\u9996\u5148\u4f7f\u7528Sergey Brin\u5728\u8fde\u63a5\u673a\u5668\u4e0a\u5b66\u4e60\u7684\u5e76\u884c\u7f16\u7a0b\u6280\u672f\uff0c\u7136\u540e\u83b7\u53d6Danny\uff06\uff0339;\u8c01\u7684\u540e\u7eed\u516c\u53f8Metaweb  - \u8c01CTO John Giannandrea\u73b0\u5728\u662f\u8c37\u6b4c\u548c\uff0339;\n  \u5373\u4f7f\u662f\u4eca\u5929\u7684\u786c\u4ef6\uff0c\u4e5f\u662f\u7531\u672c\u8d28\u4e0a\u7684\u82af\u7247\u7ec4\u6210\uff0c\u8fd9\u4e9b\u82af\u7247\u662f\u7531NVIDIA\u6784\u5efa\u7684GPU\uff0c\u5b83\u73b0\u5728\u662f30\u5e74\u540e\u7684\u865a\u62df\u73b0\u5b9e\u7684\u6210\u529f\u3002\n            \u5728\u5176\u9ad8\u5ea6\uff0c\u6211\u5df2\u7ecf\u542c\u5230\u4e86\u5404\u79cd\u8fde\u63a5\u673a\uff08CM-1\uff0cCM-2\uff0cCM-2A\uff0cCM-200\u548c\u7ee7\u4efb\u6570CM-5\uff0c\u5728\u5168\u7403\u768470\u4e2a\u5b89\u88c5\u4e2d\u3002\u4ee5\u4e0b\u673a\u5668\r \u5df2\u4fdd\u5b58\u5728\u535a\u7269\u9986\u7cfb\u5217\u4e2d\u3002\u673a\u5668\u5e76\u975e\u603b\u662f\u5728\u5c55\u89c8\u9986 - \u89c1\u6ce8\u91ca\u3002\n  CM-2A\uff1aMus\u00e9eBolo\uff0c\u745e\u58eb\u6d1b\u6851\uff08\u6c38\u4e45\u5c55\u89c8\uff09\r \uff08\r CM-2A\u662f\u6807\u8bb0\u54c8\u91cc\u68ee\u7684\u5355\u4e2a\u7acb\u65b9\u4f53\u5305\u3002\uff09 ", "note_en": "o Main Page  \r\r\to  CM Legacy: Technology  \r \r o  CM-1/CM-2 Design Legacy  \r\r\to  Articles  \r\r\to  Image Galleries  \r\r\to  &#34;Feynman&#34;  \r\tCM-1 T-shirt\n   Thirty years after its launch in 1987, a CM-2 is on exhibit as part of the show:  \r &#34; Thinking Machines: Art and Design in the Computer Age, 1959-1989&#34; \rMoMA NY, November 13, 2017 - April 8, 2018\n  I participated in a panel discussion at MoMA on Nov. 14, 2017: \r &#34; Thinking Machines: An Evening with Beryl Korot, Zabet Patterson, and Tamiko Thiel&#34; \rWatch the recording  &gt; here\n  See also the pages on the  CM-1/CM-2 Design Legacy, and the untold story of how \r the Connection Machine  changed Steve Jobs sense of the potential of design.\n       The  Connection Machine CM-1 was the first commercial supercomputer designed expressly for problems of Artificial Intelligence (AI). A massively parallel supercomputer with 65,536 processors, it was the brainchild \r of Danny Hillis, conceived in the early 1980s while he was a doctoral student with\r Marvin Minsky at the MIT Artificial Intelligence Lab, and built at his start-up Thinking Machines Corporation. Departing from conventional computer \r architecture of the time, the CM-1 was modeled on the structure of a human brain: rather than relying on a\r single powerful processor to perform calculations one after another, the data was distributed over the\r tens of thousands of simple 1-bit processors, all of which could perform calculations simultaneously, an architecture known as Single Instruction Multiple Data (SIMD).\n  What enabled the processors to communicate faster than previous SIMD designs was the internal network, a 12-dimensional boolean n-cube structure suggested by Nobel Prize physicist  Richard Feynman, who spent his summers working with us. Within this hardwired physical structure, the software data\r structures for communication and transfer of data between processors could change as needed depending \r on the nature of the problem. The connections between processors were more important\r than the processors themselves, hence the name &#34;Connection Machine.&#34;\n  In 1987 the CM-1 was superceded by the more powerful CM-2 in the same package and similar architecture. In 1991 the CM-1/CM-2 hypercube design was superceded by the  CM-5, with a very different form and architecture. Each in their day won the prestigious  Gordon Bell Prize as the most powerful supercomputers in the world, the CM-2 in 1989 and the CM-5  in 1993.\n      From 1983-1985 I directed the packaging and industrial design of the \rConnection Machine CM-1 at Thinking Machines Corporation, working with industrial design consultants\r  Allen Hawthorne and  Gordon Bruce, and mechanical engineering consultant Ted Bilodeau. The CM-2, released\rin 1987, was a more advanced successor (including floating point hardware) contained in the same physical package.\n  The form of the machine was to express both its function and the passions of its creators: \rthe dream of producing a &#34;Machina Sapiens,&#34; a new genus of living, thinking machines. For a description of the design history, theory and concepts behind the visual design, see my article:\n  Thiel, Tamiko. &#34;The Design \r of the Connection Machine,&#34; ( pdf or  html) in Design Issues, MIT Press, Cambridge, MA, Vol. 10, No. 1, Spring 1994. pp. 5-18.    \r Republished in \r\rthe book &#34;The Designed World: Images, Objects, Environments.&#34; Editors: Richard Buchanan, Dennis Doordan and Victor Margolin, 2010.\n    My old friend  Joanna Hoffman was marketing manager for the first Macintosh and the NeXT computer, and Steve Jobs&#39; &#34;right hand,&#34; as depicted by Kate Winslet in the film &#34; Steve Jobs.&#34; In 1986, when the Connection Machine came out, Jobs asked her to get its designer to create his new  NeXT computer as well. To which Joanna replied, &#34; Too late, Tamiko has gone to Europe to become an artist!&#34; But the machine made a lasting impression on him, and from that point on, Jobs&#39; designs were not merely useful - they were visually sublime.\n        &#34;There have even been heroes of computer design: The CM-1 and CM-2 parallel supercomputers of the 1980s, designed by a team headed by Tamiko Thiel, were elegant and fascinating. At Yale, visitors stopped by the machine room often to admire the thing just as sculpture.&#34; \r Gelernter, David. &#34; Beyond the Grey Box,&#34; ID Magazine, Vol. 45 #2, March/April 1998, page 60.\n        In the early/mid 1980s both AI and parallel processing were considered of interest only for ivory tower academics, not for real world computing and problem solving. Danny Hillis&#39; radical new approach to computing, however, attracted scientists to Thinking Machines who saw the value and the promise of a computing paradigm that focused on the structures required by the data itself, rather than faster and faster serial processors.\n  Today&#39;s History of AI timelines omit the work that Danny and other scientists did at Thinking Machines and on the Connection Machines. Their contributions have been forgotten. But my interviews with several colleagues reveal how the ideas, the programming techniques, the software and the hardware shaped the technology of the world today. A few examples:\n  Nobel physicist Richard Feynman used the Connection Machine to work on his seminal ideas for a new field:  quantum computing.\n  Brewster Kahle talks about his term &#34;Big Data&#34; and how he used the Connection Machine to develop the first natural language search engine.\n  Danny Hillis talks about how Google became the world&#39;s premiere search engine and AI company, first using parallel programming techniques that Sergey Brin learned on a Connection Machine, and then with the acquisition of Danny&#39;s subsequent company MetaWeb - whose CTO John Giannandrea is now Google&#39;s head of AI.\n  Even the hardware enabling Deep Learning today consists of chips that are in essence miniature Connection Machines, as are the GPUs built by nVidia that enable the success of virtual reality now, 30 years later.\n            At its height, I have heard there were various Connection Machines (CM-1, CM-2, CM-2a, CM-200 and the successor CM-5 in a completely different package design) at 70 installations around the world. The following machines\r have been preserved in museum collections. Machines are not always on exhibit - see notes.\n  CM-2a:  Mus\u00e9e Bolo, Lausanne, Switzerland  (Permanent exhibit)  \r (\r The CM-2a is a single cube package by Mark Harrison.)", "posttime": "2021-06-29 23:02:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fde\u63a5,machines,cm", "title": "\u8fde\u63a5\u673aCM-1\u548cCM-2 ", "title_en": "The Connection Machines CM-1 and CM-2", "transed": 1, "url": "https://tamikothiel.com/cm/", "via": "", "real_tags": ["\u8fde\u63a5", "machines", "cm"]}, {"category": "", "categoryclass": "", "imagename": "2f42deaf9a7c80769eb7ac8d29340af7.jpg", "infoid": 1068513, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81ea7\u4ebfLinkedIn\u7528\u6237\u7684\u6570\u636e\u5728\u7ebf\u9500\u552e\uff0c\u4f7f\u8fd9\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684LinkedIn\u6570\u636e\u6cc4\u6f0f\u4e4b\u4e00\u3002\u5728\u4e0e\u5356\u65b9\u8fdb\u884c\u8054\u7cfb\u4e4b\u540e\uff0c\u6211\u4eec\u5df2\u66f4\u65b0\u4e86\u672c\u6587\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u5982\u4f55\u83b7\u5f97\u6570\u636e\u4ee5\u53ca\u5bf9LinkedIn\u7528\u6237\u7684\u53ef\u80fd\u5f71\u54cd\u3002\n \u8bb8\u591a\u4eba\u4fe1\u4efbLinkedIn\u4e0e\u5404\u79cd\u79c1\u4eba\u6570\u636e\uff0c\u5e0c\u671b\u5e76\u4fe1\u4efb\u4fe1\u606f\u4ecd\u7136\u5b89\u5168\u3002\u4f46\u8fd9\u662f\u4fe1\u4efb\u662f\u5426\u6709\u4fdd\u8bc1\uff1f\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u57282021\u5e74\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4e24\u4e2a\u72ec\u7acb\u7684\u4e8b\u4ef6\uff0c\u9519\u8bef\u7684\u6f14\u5458\u5229\u7528\u4e13\u4e1a\u7f51\u7edc\u5e73\u53f0\u6765\u6536\u96c6\u5927\u91cf\u7528\u6237\u6570\u636e\u3002\n \u8fd9\u79cd\u5f71\u54cd\u662f\u8fdc\u7a0b\uff0c\u4ece\u8eab\u4efd\u76d7\u7a83\u5230\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\uff0c\u793e\u4f1a\u5de5\u7a0b\u653b\u51fb\u7b49\u7b49\u3002\u5728\u6211\u4eec\u6f5c\u5165\u8fd9\u79cd\u6cc4\u6f0f\u7684\u540e\u679c\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u68c0\u67e5\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n  6\u670822\u65e5\uff0c\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u9ed1\u5ba2\u7684\u7528\u6237\u4ece7\u4ebf\u4e2aLinkedIn\u7528\u6237\u9500\u552e\u5e7f\u544a\u6570\u636e\u3002\u8bba\u575b\u7684\u7528\u6237\u53d1\u5e03\u4e86\u5305\u542b100\u4e07LinkedIn\u7528\u6237\u7684\u6570\u636e\u6837\u672c\u3002\u6211\u4eec\u68c0\u67e5\u4e86\u8be5\u6837\u672c\uff0c\u5e76\u53d1\u73b0\u5b83\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1a\n   \u7528\u6237\u58f0\u79f0\uff0c\u5b8c\u6574\u7684\u6570\u636e\u5e93\u5305\u542b7\u4ebfLinkedIn\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u6839\u636eLinkedIn\u62e5\u6709756\u4e07\u7528\u6237\uff0c\u6839\u636e\u5176\u7f51\u7ad9\uff0c\u8fd9\u610f\u5473\u774092\uff05\u7684LinkedIn\u7528\u6237\u53ef\u4ee5\u5728\u8fd9\u4e9b\u8bb0\u5f55\u4e2d\u627e\u5230\u3002\n \u4ee5\u4e0b\u662f\u6211\u4eec\u68c0\u67e5\u7684\u6837\u672c\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u8bb0\u5f55\u53ef\u4ee5\u5305\u542b\u591a\u5c11\u4fe1\u606f\uff1a\n  \u6839\u636e\u6211\u4eec\u7684\u5206\u6790\u548c\u4ea4\u53c9\u68c0\u67e5\u6570\u636e\u4e0e\u5176\u4ed6\u516c\u5f00\u53ef\u7528\u7684\u4fe1\u606f\uff0c\u5b83\u770b\u8d77\u6765\u6240\u6709\u6570\u636e\u90fd\u662f\u771f\u5b9e\u7684\u5e76\u4e0e\u771f\u6b63\u7684\u7528\u6237\u76f8\u5173\u8054\u3002\u6b64\u5916\uff0c\u6570\u636e\u8868\u786e\u5b9e\u662f\u6700\u65b0\u7684\uff0c\u6765\u81ea2020\u52302021\u7684\u6837\u672c\u3002 \n\u867d\u7136\u6211\u4eec\u5728\u6211\u4eec\u5ba1\u67e5\u7684\u6837\u672c\u4e2d\u6ca1\u6709\u627e\u5230\u767b\u5f55\u51ed\u636e\u6216\u8d22\u52a1\u6570\u636e\uff0c\u4f46\u4ecd\u6709\u4e00\u4e2a\u7528\u4e8e\u5265\u524a\u8d22\u52a1\u6536\u76ca\u7684\u574f\u884c\u52a8\u8005\u4fe1\u606f\u7684\u5b9d\u5e93\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u89e3\u91ca\u4e00\u4e0b\u3002\n  \u6211\u4eec\u76f4\u63a5\u5411\u7528\u6237\u81f4\u7535\uff0c\u8be5\u7528\u6237\u5728\u9ed1\u5ba2\u8bba\u575b\u4e0a\u53d1\u5e03\u6570\u636e\u3002\u4ed6\u58f0\u79f0\u901a\u8fc7\u5229\u7528LinkedIn API\u6765\u83b7\u5f97\u4eba\u4eec\u4e0a\u4f20\u5230\u7f51\u7ad9\u7684\u4fe1\u606f\u6765\u83b7\u5f97\u6570\u636e\u3002\n  \u6211\u4eec\u8fd8\u4e0eLinkedIn\u8fbe\u5230\u4e86\u8bc4\u8bba\u7684\u6700\u65b0\u6570\u636e\u6cc4\u6f0f\uff0c\u4f46\u5c1a\u672a\u542c\u5230\u3002\n  \u867d\u7136\u8fd9\u4e2a\u6700\u65b0\u7684LinkedIn\u6cc4\u6f0f\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u8d22\u52a1\u8bb0\u5f55\u6216\u767b\u5f55\u51ed\u636e\uff0c\u4f46\u4ecd\u5b58\u5728\u4e25\u91cd\u7684\u540e\u679c\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u5360\u636e\u4e86700\u4e07\u4eba\u7684\u98ce\u9669\uff1a\n  \u7f51\u7edc\u72af\u7f6a\u5206\u5b50\u53ef\u4ee5\u4f7f\u7528\u6cc4\u9732\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u4e0e\u5176\u4ed6\u6570\u636e\u4e2d\u627e\u5230\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e3a\u5176\u6f5c\u5728\u53d7\u5bb3\u8005\u521b\u5efa\u5b8c\u6574\u7684\u8be6\u7ec6\u914d\u7f6e\u6587\u4ef6\u3002\u6b64\u5916\uff0cBad Actors\u53ef\u4ee5\u4f7f\u7528\u53ef\u7528\u7684\u6570\u636e\uff0c\u7279\u522b\u662f\u7528\u6237\u540d\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u4e2a\u4eba\u4fe1\u606f\u6765\u83b7\u53d6\u5bf9\u5176\u4ed6\u5e10\u6237\u7684\u8bbf\u95ee\u6743\u9650\u3002\n \u6700\u91cd\u8981\u7684\u662f\uff0c\u6b64\u4fe1\u606f\u5c06LinkedIn\u7528\u6237\u516c\u5f00\u5230\u8f83\u9ad8\u7684\u884c\u52a8\u8005\u5265\u524a\u98ce\u9669\u3002\n   \u8fd9\u4f7f\u6211\u4eec\u6210\u4e3a\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u5982\u679c\u7528\u6237\u6570\u636e\u88ab\u7cdf\u7cd5\u7684\u6f14\u5458\u5229\u7528\u7528\u6237\u6570\u636e\uff0c\u516c\u53f8\u5e94\u8be5\u627f\u62c5\u8d23\u4efb\uff1f\u5728\u8fd9\u4e2a\u5177\u4f53\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f3c\u4e4e\u6ca1\u6709\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684LinkedIn\u670d\u52a1\u5668\u6216\u5728\u4f20\u7edf\u610f\u4e49\u4e0a\u6709\u5b8c\u6574\u7684\u201c\u8fdd\u7ea6\u201d\u3002\u4f46\u662f\uff0c\u76f8\u53cd\uff0c\u901a\u8fc7LinkedIn\u81ea\u5df1\u7684API\uff08\u5e94\u7528\u7a0b\u5e8f\u754c\u9762\uff09\u901a\u8fc7\u5a01\u80c1\u6f14\u5458\u6536\u83b7\u6570\u636e\u3002 \n\u6211\u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0c\u6211\u4eec\u4f1a\u518d\u8bf4\u4e00\u6b21\uff1a\u4efb\u4f55\u5bf9\u79c1\u4eba\u6570\u636e\u63a7\u5236\u7684\u4f01\u4e1a\uff0c\u4e2a\u4eba\u6216\u5b9e\u4f53\u90fd\u4f1a\u8ba9\u60a8\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002 \u8fd9\u79cd\u98ce\u9669\u662f\u5426\u6700\u5c0f\u6216\u5de8\u5927\u53d6\u51b3\u4e8e\u786e\u4fdd\u5b83\u7684\u6570\u636e\u4ee5\u53ca\u5b83\u4e22\u5931\u7684\u540e\u679c\u3002  \u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u8fd9\u79cd\u98ce\u9669\uff0c\u60a8\u9700\u8981\u9650\u5236\u5176\u4ed6\u4eba\u53ef\u7528\u7684\u6570\u636e\u91cf\u3002  \u8fd9\u53ef\u80fd\u5305\u62ec\u5b8c\u5168\u4ece\u6240\u6709\u793e\u4ea4\u7f51\u7edc\u4e2d\u83b7\u53d6\uff0c\u6216\u9650\u5236\u60a8\u5171\u4eab\u7684\u4fe1\u606f\u3002 \u4f7f\u7528\u65e0\u6cd5\u6536\u83b7\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f\u7684\u5229\u6da6\u4e5f\u81f3\u5173\u91cd\u8981\u3002 \u6211\u4eec\u5df2\u5ba1\u6838\u4e86\u4e00\u4e9b\u6700\u4f73\u9009\u62e9\uff1a  \u5b89\u5168\u6d4f\u89c8\u5668\uff0c\u5c0a\u91cd\u60a8\u7684\u9690\u79c1\uff0c\u4e0d\u4f1a\u6536\u96c6\u60a8\u7684\u5e7f\u544a\u7f51\u7edc\u6570\u636e  \u5b89\u5168\u548c\u79c1\u4eba\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u4e0d\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u9500\u552e\u6536\u4ef6\u7bb1\u6216\u68b3\u7406\u7684\u8bbf\u95ee  \u5f53\u7136\uff0c\u60a8\u5e94\u8be5\u4fdd\u6301\u8b66\u60d5\uff0c\u540c\u65f6\u7ee7\u7eed\u7ef4\u62a4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f\u3002 ", "note_en": "Data from 700 million LinkedIn users has been put up for sale online, making this one of the largest LinkedIn data leaks to date. And after making contact with the seller, we have updated this article with more information, including how the data was obtained and the possible impact on LinkedIn users.\n Many people trust LinkedIn with all sorts of private data, hoping and trusting that the information remains in safe hands. But is this trust warranted? So far in 2021, we have already seen two separate incidents where bad actors have exploited the professional networking platform to harvest vast amounts of user data.\n The implications of this are far-ranging, from identity theft to phishing attacks, social engineering attacks, and more. Before we dive into the consequences of this leak, let\u2019s first examine what happened.\n  On June 22nd, a user of a popular hacker advertised data from  700 Million LinkedIn users for sale. The user of the forum posted up a  sample of the data that includes  1 million LinkedIn users. We examined the sample and found it to contain the following information:\n   The user claims that the complete database contains the personal information of 700 Million LinkedIn users. Since LinkedIn has 756 million users, according to its website, this would mean that  92% of all LinkedIn users can be found in these records.\n Below is a small section of the sample we examined to show you how much information one record can contain:\n  Based on our analysis and cross-checking data from the sample with other publicly available information, it appears all  data is authentic and tied to real users. Additionally, the data  does appear to be up to date, with samples from 2020 to 2021.\n While we did not find login credentials or financial data in the samples we examined, there is still a treasure trove of information for bad actors to exploit for financial gain, as we\u2019ll explain more below.\n  We reached out directly to the user who is posting the data up for sale on the hacking forum. He claims the data was obtained by  exploiting the LinkedIn API to harvest information that people upload to the site.\n  We have also reached out to LinkedIn for comment on this latest data leak, but have not yet heard back.\n  While this latest LinkedIn leak did not contain any financial records or login credentials, there are still serious consequences. This is because it puts 700+ million people at risk of:\n  Cybercriminals can use the information found in the leaked files with other data in order to create  full detailed profiles of their potential victims. Additionally, bad actors can use the available data, particularly usernames, emails, and personal information, to gain access to other accounts.\n Above all else, this information exposes LinkedIn users to a higher risk of exploitation by bad actors.\n   This leads us to an interesting question. Should companies be held liable when user data is exploited by bad actors? In this specific case, it does not appear that LinkedIn servers were hacked or there was a full \u201cbreach\u201d in the traditional sense of the term. Instead, however, the  data was harvested through LinkedIn\u2019s own API ( application program interface) by threat actors.\n   We\u2019ve said it before and we\u2019ll say it again: any business, individual, or entity that has control over your private data puts you at risk. Whether this risk is minimal or vast depends on the data, who is securing it, and the consequences of it being lost.\n To minimize this risk, you need to  limit the amount of data that is available to others.\n This could include getting off of all social networks entirely, or limiting the information you share. Using products and services that don\u2019t harvest your personal information for profit is also crucial. We have reviewed some of the best options with:\n Secure browsers that respect your privacy and don\u2019t collect your data for advertising networks\n Secure and private email services that don\u2019t sell access to your inbox or comb through your emails\n And of course, you should remain vigilant to all potential attacks while continuing to safeguard your personal information.", "posttime": "2021-06-29 23:02:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,data", "title": "\u65b0\u7684LinkedIn\u6570\u636e\u6cc4\u6f0f\u8ba9700M\u7528\u6237\u66b4\u9732 ", "title_en": "New LinkedIn Data Leak Leaves 700M Users Exposed", "transed": 1, "url": "https://restoreprivacy.com/linkedin-data-leak-700-million-users/", "via": "", "real_tags": ["\u6570\u636e", "data"]}, {"category": "", "categoryclass": "", "imagename": "5b900a719c231f0a2f757c286159e04f.jpeg", "infoid": 1068512, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\n\u6211\u6709\u53ef\u80fd\u5728\u67d0\u79cd\u9b45\u529b\u6ce1\u6cab\u4e2d\u793e\u4ea4\uff0c\u4f46\u6211\u53ea\u80fd\u4ece\u4e00\u4e2a\u559c\u6b22\u65b0\u7684QR\u7801\u9910\u5385\u4f53\u9a8c\u7684\u4eba\u4e2d\u542c\u5230\u3002\u6211\u7684\u540c\u4e8b\u662f\u597930\u5c81\u7684\u5355\u8eab\u5973\u58eb\uff0c\u4ed6\u8bf4\uff0c\u5979\u559c\u6b22\u73b0\u5728\u8981\u6c42\u5ba2\u6237\u67e5\u770b\u83dc\u5355\uff0c\u8ba2\u5355\u548c\u652f\u4ed8\u7684\u9910\u9986\u901a\u8fc7QR\u7801\uff0c\u5b8c\u5168\u6d88\u9664\u4e86\u5927\u90e8\u5206\u670d\u52a1\u5668\u7684\u804c\u8d23\u3002 \uff08\u8fd9\u79cd\u64cd\u4f5c\u6a21\u5f0f\u53ef\u80fd\u5bf9\u81ea\u91cd\u65b0\u5f00\u653e\u4ee5\u6765\u9762\u4e34\u7684\u9910\u5385\u6709\u610f\u4e49\u3002\u6211\u4f1a\u6109\u5feb\u5730\u652f\u4ed8\u4e00\u5bb6\u5145\u8db3\u7684\u4eba\u5458\u9910\u5385\u7684\u4ef7\u683c\uff0c\u4ece\u800c\u652f\u4ed8\u751f\u6d3b\u5de5\u8d44\u3002\uff09\u6211\u7684\u540c\u4e8b\u4eec\u8bf4\uff0c\u6211\u7684\u540c\u4e8b\u4eec\u8bf4\uff0c\u5b83\u4f7f\u7528\u4e00\u7fa4\u670b\u53cb\u4eec\u66f4\u5bb9\u6613\u7528\u5206\u88c2\u652f\u7968\u6597\u4e89\uff0c\u5e76\u4e14\u5b83\u4e0e\u5173\u4e8e\u8c01\u5728\u8c01\u83b7\u5f97\u8d26\u5355\u7684\u4f19\u8ba1\u4eec\u7684\u5c34\u5c2c\u8c08\u8bdd\u3002\n      \u6211\u60f3\u6211\u53ef\u4ee5\u770b\u5230\u5979\u6765\u81ea\u54ea\u91cc\u3002\u5728\u8fbe\u5230\u81ea\u7136\u7ed3\u675f\u7684\u7cdf\u7cd5\u65e5\u671f\u6216\u793e\u4ea4\u4e92\u52a8\u671f\u95f4\uff0c\u7b49\u5f85\u6536\u5230\u5e76\u652f\u4ed8\u652f\u7968\u53ef\u4ee5\u611f\u5230\u53ef\u4e92\u52a8\u3002\u4f46\u4eba\u4eec\u4e0d\u5750\u5750\u4e0b\u7684\u9910\u9986\uff0c\u56e0\u4e3a\u4ed6\u4eec\u60f3\u8981\u4e00\u987f\u4ee5\u6781\u5ea6\u4fbf\u5229\u548c\u901f\u5ea6\u4e3a\u6807\u5fd7\u7684\u996d\u83dc\u3002\u968f\u7740\u51e0\u540d\u9910\u5385\u5de5\u4eba\u5728\u5927\u6d41\u884c\u671f\u95f4\u544a\u8bc9\u6211\uff0c\u9910\u5385\u51fa\u4e8e\u70ed\u60c5\u70b9\u8bc4\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u5bf9\u7269\u7406\u83dc\u5355\u8fdb\u884c\u4e86\u56f0\u6270\u7684\u4e50\u8da3\u662f\u5bf9\u7528\u9910\u7684\u7ecf\u9a8c\uff0c\u6211\u8ba9\u6211\u7684\u670b\u53cb\u5728\u65e9\u671f\u5927\u6d41\u884c\u665a\u5bb4\u4e0a\u6a21\u4eff\u5b83\u3002\u6211\u4eec\u90fd\u521a\u521a\u62e5\u6709\u6700\u5b64\u7acb\uff0c\u5c4f\u5e55\u4ecb\u5bfc\u7684\u4e00\u5e74\u3002\u5982\u679c\u6211\u4eec\u6709\u673a\u4f1a\u8ba9\u6211\u4eec\u719f\u6089\u7684\u793e\u4ea4\u4e92\u52a8\u66f4\u6709\u5f62\u548c\u4eba\u7c7b\uff0c\u800c\u4e14\u8f83\u5c11\u51b7\u9177\u7684\u4ea4\u6613\uff0c\u8ba9\u6211\u4eec\u5e26\u8d70\u5b83\u3002 ", "note_en": "Before the pandemic, I\u2019d shudder at the sight of a restaurant table full of people all staring at their phones. I was always happy not to be them or be sitting with them.  I always kept the lively conversation flowing at my table.  I had good boundaries between my on- and offline lives. But now, restaurants around the world have nonconsensually turned us all into the people I used to judge. I hate it. And it\u2019s time for us to go back.\n    It all started when outdoor dining resumed after initial waves of mandated closures last spring. Wary of wayward coronaviruses lingering on physical menus, restaurants taped QR codes to their tables and outsourced the act of menu delivery to the diner and her smartphone. This might have made sense when it still seemed possible that the coronavirus was largely spreading through surface transmission. But we now know that the risk of infection via a contaminated surface  is low. In tons of communities across the U.S., vaccination rates are high and COVID-19 case rates are low. People are attending indoor concerts, grinding at dance clubs, and heading back to the office. And yet, even as we eat and slobber and sneeze in restaurants seated at full capacity, in many of those establishments, we\u2019re still obliged to use our own smartphones to figure out what we want to eat. Why? Why should we be scared to go back to touching a communal piece of paper when we\u2019re already breathing one another\u2019s theoretically more dangerous air?\n        The obvious pitfalls of the QR code menu were well worth the aggravation as a temporary public health measure, and I truly feel for restaurant owners and workers who\u2019ve been forced to redesign their businesses every few months in response to changing municipal regulations and public health findings. But the QR code\u2019s continued ubiquity well into the era of the low surface transmission consensus and the full reopening of public spaces has me worried that digital-only menus will be one pandemic modification that becomes a permanent element of public life. Maybe restaurant owners will welcome the demise of physical menus as a way to eliminate one small but constant expense. Maybe their employees will relish their newfound freedom from the hassle of reprinting menus every time there\u2019s a new seasonal entree on offer. Maybe it will free servers from patrons who always seem to want to order the one dish that\u2019s out of stock. (It can be easily deleted from a digital menu as soon as it runs out.) Maybe diners who already love scrolling on their phones at restaurants will be more than happy to check out the menu there, too. Other customers may be content to touch one less surface that might be stained with food or invisibly smeared with another person\u2019s snot.\n      Not I! I\u2019m tired of having to navigate a new digital platform every time I eat out. I despise spending the first 10 minutes of a social engagement on my phone. I never again want to encounter, as I did last week, a QR code that leads to a website where  each of the seven menu pages is a separate PDF that must be clicked, zoomed in on, and closed before moving on to the next.\n  If you think I\u2019m being overdramatic, let me ask you this: Have you gone to a restaurant with your boomer parents during the pandemic? If not, have you ever had to teach your boomer parents how to set up a Roku or connect their printer to Bluetooth? Same tedious, excruciating, relationship-straining thing. One of my family members is in his late 70s, loves dining out, and only owns a flip phone with no internet connectivity. He\u2019s already excluded from much of our increasingly digital society; before the pandemic, the American restaurant was one of the few places left where he was entirely comfortable with the mores and knew exactly what was expected of him when he walked through the door. Now, he never knows what to anticipate or what he\u2019ll be asked to do when he goes out for lunch.\n      Default-digital menus are alienating for other kinds of customers, too. Critics have rightly noted that the  cashless trend in food and retail is prohibitive for customers who don\u2019t have bank accounts. Likewise, for a customer who doesn\u2019t have a smartphone or robust data plan\u2014including about  one-quarter of adults with household incomes below $30,000 per year\u2014a QR code menu means having to ask for special accommodations she never used to need. Ditto foreign travelers, whose smartphones may not work on U.S. soil. QR codes also  open the door for easily executed scams, malware, and digital surveillance. There is no good reason to add an exclusionary, risky, socially deadening digital step to an analog system that was working just fine before the pandemic hit.\n    Some restaurants have taken it even further, digitizing not just the menu but the entire dining experience. Two months ago, I ate outdoors at a Basque restaurant that used to have fantastic service on its outdoor patio. This time, it required diners to page through an extensive website that held its menu options. We had to place food and drink orders on an online platform and punch in our credit card information on our tiny phone keyboards with our big, dumb fingers. Then, we had to wait for a notification on our phones to tell us our drinks were ready to pick up indoors. When we decided to order a second bottle of cider midway through the meal, we had to place a whole new order online. It felt more like ordering takeout or shopping on Amazon than dining out.\n      It is possible that I socialize in some kind of Luddite bubble, but I\u2019ve only ever heard from one person who loves the new QR code restaurant experience. My colleague, a single woman in her 30s in D.C., said she likes the restaurants that now require customers to view the menu, order,  and pay via QR code, fully eliminating most of a server\u2019s responsibilities. (This mode of operation may make sense for restaurants that have faced  staffing shortages since reopening. I will happily pay higher prices at an adequately staffed restaurant that pays a living wage.) Since each diner orders and pays on her own, my colleague said, it\u2019s made it easier to dine with groups of friends who might have otherwise struggled with splitting a check, and it\u2019s preempted awkward conversations with guys on dates about who\u2019s getting the bill.\n      I suppose I can see where she\u2019s coming from. During a bad date or a social interaction that\u2019s reached its natural end, the wait to receive and pay the check can feel interminable. But people don\u2019t visit sit-down restaurants because they want a meal marked by extreme convenience and speed. As several restaurant workers have told me during the pandemic,  diners come to restaurants for hospitality. For me, the pleasure of poring over a physical menu is so integral to the experience of dining out that I  made my friends mimic it during an early-pandemic dinner over Zoom. We\u2019ve all just had the most isolated, screen-mediated year of our lives. If there\u2019s an opportunity for us to make a familiar social interaction more tangible and human, and less coldly transactional, let\u2019s take it.", "posttime": "2021-06-29 23:02:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u83dc\u5355,menus,\u9910\u5385", "title": "\u5e26\u56de\u83dc\u5355\uff0cQR\u7801\u662f\u53ef\u6015\u7684 ", "title_en": "Bring back menus, QR codes are terrible", "transed": 1, "url": "https://slate.com/human-interest/2021/06/bring-back-menus-end-qr-codes.html?via=rss", "via": "", "real_tags": ["\u83dc\u5355", "menus", "\u9910\u5385"]}, {"category": "", "categoryclass": "", "imagename": "4ac7b3fafb966aad80cfb00e4b0a8b41.png", "infoid": 1068511, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u5b89\u5168\u7684\u70b9\u5bf9\u70b9Wioguard VPN\u96a7\u9053\u5c06\u591a\u4e2a\u8bbe\u5907\u5f7c\u6b64\u76f8\u4e92\u8fde\u63a5\u3002\u5728\u5bb6\u91cc\uff0c\u529e\u516c\u5ba4\u6216\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u3002\n  Wiretrustee\u4f7f\u7528\u5728PION / ICE\u5e93\u4e2d\u5b9e\u73b0\u7684WebRTC Ice\u5728\u5efa\u7acb\u8bbe\u5907\u4e4b\u95f4\u7684\u5bf9\u7b49\u8fde\u63a5\u65f6\u53d1\u73b0\u8fde\u63a5\u5019\u9009\u8005\u3002\n  \u901a\u8fc7\u4fe1\u4ee4\u670d\u52a1\u5668\u5728\u5bf9\u7b49\u4f53\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u7684\u5185\u5bb9\u7528Wioguard\u952e\u52a0\u5bc6\uff0c\u4f7f\u5176\u65e0\u6cd5\u68c0\u67e5\u5b83\u4eec\u3002\u4fe1\u4ee4\u670d\u52a1\u5668\u4e0a\u7684\u6d88\u606f\u8def\u7531\u57fa\u4e8e\u516c\u5171Wiguard\u952e\u3002\n \u5076\u5c14\uff0c\u7531\u4e8e\u4e25\u683c\u7684NAT\uff08\u4f8b\u5982\u79fb\u52a8\u8fd0\u8425\u5546\u7ea7NAT\uff09\uff0cNAT-Traversal\u662f\u4e0d\u6210\u529f\u7684\u3002\u5bf9\u4e8e\u6b64\u4e8b\u9879\uff0c\u5bf9\u4e2d\u7ee7\u670d\u52a1\u5668\u56de\u9000\uff08\u8f6c\u5f2f\uff09\uff0c\u5e76\u4e14\u901a\u8fc7\u8f6c\u52a8\u670d\u52a1\u5668\u5efa\u7acb\u5b89\u5168\u7684Wireguard\u96a7\u9053\u3002 Coturn\u662f\u5df2\u6210\u529f\u7528\u4e8e\u4ee4\u4eba\u9707\u60ca\u7684\u4ee4\u4eba\u9707\u60ca\u548c\u7ffb\u8f6cWiretrustee\u8bbe\u7f6e\u3002\n  Wioguard\u5bc6\u94a5\u7ba1\u7406\u3002\u56e0\u6b64\uff0c\u60a8\u9700\u8981\u751f\u6210\u5bf9\u7b49\u952e\u5e76\u5728WireTrustee\u521d\u59cb\u5316\u6b65\u9aa4\u4e0a\u6307\u5b9a\u5b83\u4eec\u3002\u6b64\u529f\u80fd\u4f4d\u4e8e\u8def\u7ebf\u56fe\u4e0a\u3002\n \u5bf9\u7b49\u5730\u5740\u7ba1\u7406\u3002\u914d\u7f6eWiretrustee\u65f6\uff0c\u60a8\u5fc5\u987b\u6307\u5b9a\u552f\u4e00\u7684\u5bf9\u7b49\u672c\u5730\u5730\u5740\uff08\u4f8b\u5982\uff0c10.30.30.1/24\uff09\u3002\u6b64\u529f\u80fd\u4f4d\u4e8e\u8def\u7ebf\u56fe\u4e0a\u3002\n                      \u5bf9\u4e8eWindows Systems\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728PowerShell\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4f7f\u7528\u8be5\u670d\u52a1\u547d\u4ee4\u5c06WireTrustee\u914d\u7f6e\u4e3a\u670d\u52a1\uff1a \nCD C\uff1a\\ path \\ to \\ wiretrustee \\ bin\u3002 \\ wiretrustee.exe\u670d\u52a1--help\u3002 \\ wiretrustee.exe\u670d\u52a1\u5b89\u88c5\uff03\u8fd9\u5c06\u63d0\u793a\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u5b89\u88c5\u65b0\u670d\u52a1\n       sudo wiretrustee init \\ --stunurls stun\uff1astun.wiretrustee.com\uff1a3468\uff0cstun\uff1astun.l.google.com\uff1a19302 \\ --turnurls\uff06lt;\u8f6c\u52a8\u7528\u6237\uff06gt ;:\uff06lt;\u6253\u5f00\u5bc6\u7801\uff06gt; @turn\uff1astun\u3002 wiretrustee.com:3468 \\ --signaladdr statchsie.wiretrusteee.com:10000 \\ --wglocaladdr 10.30.30.1/24 \\  -  Lock\u7ea7\u4fe1\u606f\n  \u3002 \\ wiretrustee.exe init`  - \u9759\u9759\u8109\u6655\uff1astun.wiretrustee.com\uff1a3468\uff0cstun\uff1astun.l.google.com\uff1a19302` --turnurls\uff06lt;\u8f6c\u52a8\u7528\u6237\uff06gt ;:\uff06lt;\u8f6c/ gt; @turn\uff1a stun.wiretrustee.com:3468` --signaladdr statchsion.wiretrusteee.com\uff1a10000`  - \u5a01\u5c14\u79d1\u7f57\u5fb710.30.30.1/24` --log\u7ea7\u4fe1\u606f\n \u91cd\u8981\u7684\u662f\u8981\u63d0\u53caWlocalAddr\u53c2\u6570\u5fc5\u987b\u5728\u60a8\u7684\u7f51\u7edc\u4e0a\u662f\u552f\u4e00\u7684.g\u3002\u5982\u679c\u60a8\u5bf9Wlocaladdr = 10.30.30.1 / 24\u6709\u540c\u4f34A = 10.30.30.1 / 24\uff0c\u5219\u53e6\u4e00\u4e2a\u5bf9\u7b49\u4f53B\u53ef\u4ee5\u5177\u6709Wlocaladdr = 10.30.30.2 / 24\n \u5982\u679c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u60a8\u5df2\u7ecf\u62e5\u6709\u4e00\u4e2a\u751f\u6210\u7684Wioguard\u952e\uff0c\u53ef\u4ee5\u4f7f\u7528-wgkey parameter.if\u6307\u5b9a\u5b83\uff0c\u7136\u540e\u5c06\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u4e00\u4e2a\u65b0\u5bc6\u94a5\uff0c\u5e76\u4e14\u5b83\u5c06\u8f93\u51fa\u5230log.a\u65b0\u5bc6\u94a5\u914d\u7f6e\u5c06\u751f\u6210\u5e76\u5b58\u50a8\u5728/etc/wiretrustee/config.json\u4e0b\n       sudo wiretrustee\u5411\u4e0a - \u7ea7\u4fe1\u606f\uff03orsudo wiretrustee\u5411\u4e0a - \u7ea7\u4fe1\u606f\uff06amp; \uff03\u5728\u80cc\u666f\u4e2d\u8fd0\u884c\u5b83\n         \u8fd9\u5c06\u5728\u7aef\u53e310000\u4e0a\u542f\u52a8\u4fe1\u53f7\u670d\u52a1\u5668\uff0c\u4ee5\u9632\u60a8\u8981\u66f4\u6539\u7aef\u53e3\uff0c\u8bf7\u4f7f\u7528\u6807\u5fd7--port\u3002 \n\u6211\u4eec\u5c06\u4fe1\u53f7\u670d\u52a1\u5668\u6253\u5305\u5230Docker\u56fe\u50cf\u4e2d\u3002\u60a8\u53ef\u4ee5\u4eceDocker Hub\u4e2d\u62c9\u52a8\u56fe\u50cf\u5e76\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6267\u884c\u5b83\uff1a\n  \u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3aINFO\uff0c\u5982\u679c\u60a8\u9700\u8981\uff0c\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0Docker CMD\uff08\u5982\u9075\u5faa\uff09\u66f4\u6539\u5b83\uff1a\n   \u5728Infrastructure_files\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2aDocker-Compose\u793a\u4f8b\u6765\u8fd0\u884c\uff0cWireTrustee\u4fe1\u53f7\u670d\u52a1\u5668\u548cCoturn\u7684\u5b9e\u4f8b\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aTurnserver.conf\u6587\u4ef6\u4f5c\u4e3aCoturn Configuration\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u7f16\u8f91Turnserver.conf\u6587\u4ef6\u5e76\u66f4\u6539\u5176\u9886\u57df\u5c06\u5176\u8bbe\u7f6e\uff08\u9ed8\u8ba4\u4e3aWireTrustee.com\uff09\u5230\u60a8\u81ea\u5df1\u7684\u57df\u548c\u7528\u6237\u8bbe\u7f6e\uff08\u9ed8\u8ba4\u4e3aUserName1\uff1apassword1\uff09\u5230\u6b63\u786e\u7684\u51ed\u636e\u3002\n \u8be5\u793a\u4f8b\u8bbe\u7f6e\u4e3a\u4f7f\u7528WireTrustee\u548cCoturn\u7684\u5b98\u65b9\u6620\u50cf\uff0c\u60a8\u53ef\u4ee5\u5728[\u8fd0\u884c\u4fe1\u53f7\u670d\u52a1]\uff08\u8fd0\u884c\u4fe1\u53f7\u670d\u52a1\uff09\u548cCOTURN\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u627e\u5230\u6211\u4eec\u7684\u6587\u6863\u4ee5\u5728Docker\u4e2d\u8fd0\u884cDocker\u4e2d\u7684\u4fe1\u53f7\u670d\u52a1\u5668\u3002\n \u4ee5\u81ea\u5df1\u7684\u98ce\u9669\u8fd0\u884cCOTURN\uff0c\u6211\u4eec\u53ea\u662f\u63d0\u4f9b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u52a1\u5fc5\u9075\u5faa\u5b89\u5168\u6700\u4f73\u5b9e\u8df5\u5e76\u5728\u53ef\u4ee5\u5229\u7528\u6b64\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u53ef\u80fd\u9762\u4e34\u5927\u6570\u636e\u4f20\u8f93\u8d39\u7528\uff0c\u5e76\u914d\u7f6e\u6b63\u786e\u7684\u51ed\u636e\u3002\n \u6b64\u5916\uff0c\u5982\u679c\u60a8\u6709SSL\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539Docker Compose.yml\u6587\u4ef6\u4ee5\u6307\u5411\u4e3b\u673a\u4e2d\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06DomainName\u5207\u6362\u5230\u60a8\u81ea\u5df1\u7684SSL\u57df\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u4e86SSL\u8bc1\u4e66\uff0c\u4f60\u53ef\u4ee5\u5173\u6ce8Certbot\uff06\uff0339; s\u5b98\u65b9\u6587\u6863\u6765\u4ece\u8ba9\u6211\u4eec\u7684\u52a0\u5bc6\u751f\u6210\u4e00\u4e2a\uff0c\u6216\u8005\u6211\u4eec\u53d1\u73b0BigBlueButton\u63d0\u4f9b\u7684\u793a\u4f8b\u6db5\u76d6\u4e86\u4e0eLet\uff06\uff0339\u914d\u7f6eCoturn\u7684\u57fa\u7840\u77e5\u8bc6\u3002 S\u52a0\u5bc6\u8bc1\u4e66\u3002 ", "note_en": "Connect multiple devices to each other via a secure peer-to-peer Wireguard VPN tunnel. At home, the office, or anywhere else.\n  Wiretrustee uses WebRTC ICE implemented in  pion/ice library to discover connection candidates when establishing a peer-to-peer connection between devices.\n  Contents of the messages sent between peers through the signaling server are encrypted with Wireguard keys, making it impossible to inspect them.The routing of the messages on a Signalling server is based on public Wireguard keys.\n Occasionally, the NAT-traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT).For that matter, there is support for a relay server fallback (TURN) and a secure Wireguard tunnel is established via TURN server. Coturn is the one that has been successfully used for STUN and TURN in Wiretrustee setups.\n  Wireguard key management. In consequence, you need to generate peer keys and specify them on Wiretrustee initialization step. This feature is on the roadmap.\n Peer address management. You have to specify a unique peer local address (e.g. 10.30.30.1/24) when configuring Wiretrustee. This feature is on the roadmap.\n                      For Windows systems, we can use the service command to configure Wiretrustee as a service by running the following commands in Powershell:\n cd C: \\path \\to \\wiretrustee \\bin. \\wiretrustee.exe service --help. \\wiretrustee.exe service install   # This will prompt for administrator permissions in order to install a new service\n       sudo wiretrustee init \\ --stunURLs stun:stun.wiretrustee.com:3468,stun:stun.l.google.com:19302 \\ --turnURLs  &lt;TURN User &gt;: &lt;TURN password &gt;@turn:stun.wiretrustee.com:3468 \\ --signalAddr signal.wiretrustee.com:10000 \\ --wgLocalAddr 10.30.30.1/24 \\ --log-level info\n  . \\wiretrustee.exe init   `  --stunURLs stun:stun.wiretrustee.com:3468,stun:stun.l.google.com:19302  ` --turnURLs  &lt;TURN User &gt;: &lt;TURN password &gt;@turn:stun.wiretrustee.com:3468   `  --signalAddr signal.wiretrustee.com:10000  ` --wgLocalAddr 10.30.30.1/24   `  --log-level info\n It is important to mention that the  wgLocalAddr parameter has to be unique across your network.E.g. if you have Peer A with  wgLocalAddr=10.30.30.1/24 then another Peer B can have  wgLocalAddr=10.30.30.2/24\n If for some reason, you already have a generated Wireguard key, you can specify it with the  --wgKey parameter.If not specified, then a new one will be generated, and its corresponding public key will be output to the log.A new config will be generated and stored under  /etc/wiretrustee/config.json\n       sudo wiretrustee up --log-level info   # orsudo wiretrustee up --log-level info  &amp;   # to run it in background\n         This will launch the Signal server on port 10000, in case you want to change the port, use the flag --port.\n  We have packed the Signal server into docker image. You can pull the image from Docker Hub and execute it with the following commands:\n  The default log-level is set to INFO, if you need you can change it using by updating the docker cmd as followed:\n   Under infrastructure_files we have a docker-compose example to run both, Wiretrustee Signal server and an instance of  Coturn, it also provides a turnserver.conf file as a simple example of Coturn configuration.You can edit the turnserver.conf file and change its Realm setting (defaults to wiretrustee.com) to your own domain and user setting (defaults to username1:password1) to  proper credentials.\n The example is set to use the official images from Wiretrustee and Coturn, you can find our documentation to run the signal server in docker in [Running the Signal service](#Running the Signal service) and the Coturn official documentation  here.\n Run Coturn at your own risk, we are just providing an example, be sure to follow security best practices and to configure proper credentials as this service can be exploited and you may face large data transfer charges.\n Also, if you have an SSL certificate you can modify the docker-compose.yml file to point to its files in your host machine, then switch the domainname to your own SSL domain. If you don&#39;t already have an SSL certificate, you can follow  Certbot&#39;s official documentationto generate one from  Let\u2019s Encrypt, or, we found that the example provided by  BigBlueButton covers the basics to configure Coturn with Let&#39;s Encrypt certs.", "posttime": "2021-06-29 23:02:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u7f51\u72b6,wireguard,wiretrustee", "title": "WireTrustee\uff1a\u57fa\u4e8eWioguard\u7684\u7f51\u72b6\u7f51\u7edc ", "title_en": "Wiretrustee: WireGuard-Based Mesh Network", "transed": 1, "url": "https://github.com/wiretrustee/wiretrustee", "via": "", "real_tags": ["rust", "\u7f51\u72b6", "wireguard"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068509, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u4f7f\u7528\u4e86javascript\u6846\u67b6\uff0c\u4f60\u53ef\u80fd\u542c\u5230\u4e86\u8fd9\u53e5\u8bdd\uff06\uff0339;\u865a\u62dfDom\u662f\u5feb\u901f\u7684\uff0c\u5f80\u5f80\u8868\u793a\u610f\u5473\u7740\u5b83\u6bd4\u771f\u6b63\u7684dom\u3002\u5b83\uff06\uff0339;\u4ee4\u4eba\u60ca\u8bb6\u7684\u5f39\u6027\u6a21\u56e0 - \u4f8b\u5982\uff0c\u4eba\u4eec\u5df2\u7ecf\u95ee\u4e86\u5728\u5b83\u4e0d\u4f7f\u7528\u865a\u62dfDOM\u65f6\u5982\u4f55\u5feb\u901f\u5feb\u901f\u3002\n    \u5728\u8bb8\u591a\u6846\u67b6\u4e2d\uff0c\u60a8\u901a\u8fc7\u521b\u5efa\u6e32\u67d3\uff08\uff09\u51fd\u6570\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982\u6b64\u7b80\u5355\u7684React\u7ec4\u4ef6\uff1a\n    ...\u4f46\u7ed3\u679c\u662f\u76f8\u540c\u7684 - \u4ee3\u8868\u9875\u9762\u73b0\u5728\u5e94\u8be5\u5982\u4f55\u770b\u7684\u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u662f\u865a\u62dfDOM\u3002\u6bcf\u6b21\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff06\uff0339; s\u72b6\u6001\u66f4\u65b0\uff08\u4f8b\u5982\uff0c\u5f53\u540d\u79f0\u9053\u5177\u66f4\u6539\u65f6\uff09\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u3002\u6846\u67b6\uff06\uff0339;\u5de5\u4f5c\u7684\u5de5\u4f5c\u662f\u5c06\u65b0\u7684\u4f5c\u4e1a\u4e0e\u65e7\u7684\u4e00\u4e2a\u6838\u5bf9\uff0c\u4ee5\u5f04\u6e05\u695a\u5fc5\u9700\u7684\u53d8\u5316\u5e76\u5c06\u5b83\u4eec\u5e94\u7528\u4e8e\u771f\u6b63\u7684DOM\u3002\n   \u8bef\u89e3\u4e86\u5bf9\u865a\u62dfDOM\u6027\u80fd\u7684\u58f0\u660e\u8fd4\u56de\u6062\u590d\u7684\u542f\u52a8\u3002\u5728\u91cd\u65b0\u601d\u8003\u6700\u4f73\u5b9e\u8df5\u4e2d\uff0c2013\u5e742013\u5e74\u901a\u8fc7\u524d\u53cd\u5e94\u6838\u5fc3\u56e2\u961f\u6210\u5458PETE\u72e9\u730e\uff0c\u6211\u4eec\u5b66\u4f1a\u4e86\u4ee5\u4e0b\u5185\u5bb9\uff1a\n \u8fd9\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u5feb\u7684\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5927\u591a\u6570DOM\u64cd\u4f5c\u5f80\u5f80\u5f88\u6162\u3002\u5728DOM\u4e0a\u6709\u5f88\u591a\u8868\u73b0\u5de5\u4f5c\uff0c\u4f46\u5927\u591a\u6570DOM\u64cd\u4f5c\u90fd\u503e\u5411\u4e8e\u4e22\u5f03\u6846\u67b6\u3002\n  \u4f46\u662f\u6302\u5728\u4e00\u5206\u949f\uff01\u865a\u62dfDOM\u64cd\u4f5c\u8fd8\u8981\u9664\u4e86\u771f\u5b9eDOM\u4e0a\u7684\u6700\u7ec8\u64cd\u4f5c\u3002\u5982\u679c\u6211\u4eec\u5c06\u5176\u4e0e\u8f83\u4f4e\u6548\u7387\u7684\u6846\u67b6\u76f8\u6bd4\uff0c\u53ef\u80fd\u66f4\u5feb\u7684\u552f\u4e00\u65b9\u6cd5\uff082013\u5e74\u6709\u5f88\u591a\u4e1c\u897f\uff01\uff09\u6216\u4e89\u8bba\u7a3b\u8349\u4eba - \u66ff\u4ee3\u65b9\u6848\u662f\u505a\u4e00\u4e9b\u5b9e\u9645\u4e0a\u6ca1\u6709\u4eba\uff1a\n   \u53cd\u5e94\u4e0d\u662f\u9b54\u6cd5\u3002\u5c31\u50cf\u4f60\u53ef\u4ee5\u7528C\u4e22\u5f03\u5230\u6c47\u7f16\u7a0b\u5e8f\u5e76\u51fb\u8d25C\u7f16\u8bd1\u5668\uff0c\u4f60\u53ef\u4ee5\u4e22\u5f03\u5230\u539f\u59cb\u7684DOM\u64cd\u4f5c\u548cDOM API\u8c03\u7528\uff0c\u5982\u679c\u60a8\u60f3\u8981\uff0c\u5219\u4f1a\u51fb\u8d25\u53cd\u5e94\u3002\u4f46\u662f\uff0c\u4f7f\u7528C\u6216Java\u6216JavaScript\u662f\u4e00\u4e2a\u5e45\u5ea6\u7ee9\u6548\u7684\u987a\u5e8f\uff0c\u56e0\u4e3a\u60a8\u4e0d\u5fc5\u62c5\u5fc3......\u5173\u4e8e\u5e73\u53f0\u7684\u7ec6\u8282\u3002\u5982\u679c\u53cd\u5e94\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0d\u8003\u8651\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u9ed8\u8ba4\u72b6\u6001\u5feb\u3002 \n\u4e0d\u5b8c\u5168\u662f\u3002\u5b83\uff06\uff0339;\u66f4\u50cf\uff06\uff0339;\u865a\u62dfDOM\u901a\u5e38\u8db3\u591f\u5feb\uff0c\u4f46\u662f\u67d0\u4e9b\u8b66\u544a\u3002\n \u53cd\u5e94\u7684\u539f\u59cb\u627f\u8bfa\u662f\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e00\u4e2a\u72b6\u6001\u66f4\u6539\u65f6\u91cd\u65b0\u6e32\u67d3\u6574\u4e2a\u5e94\u7528\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u6027\u80fd\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u8ba4\u4e3a\uff06\uff0339;\u539f\u6765\u662f\u51c6\u786e\u7684\u3002\u5982\u679c\u662f\uff0c\u90a3\u91cc\uff06\uff0339; D\u662f\u4e0d\u9700\u8981\u7684\u4f18\u5316\uff0c\u5982\u5e94\u8be5\u662fComponentupdate\uff08\u8fd9\u662f\u4e00\u79cd\u5728\u5b89\u5168\u8df3\u8fc7\u7ec4\u4ef6\u65f6\u8bb2\u8ff0\u53cd\u5e94\u7684\u65b9\u5f0f\uff09\u3002\n \u5373\u4f7f\u4f7f\u7528\u4e86Componentupdate\uff0c\u66f4\u65b0\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff06\uff0339;\u5728\u4e00\u4e2aGO\u4e2d\u66f4\u65b0\u865a\u62dfDOM\u662f\u5f88\u591a\u5de5\u4f5c\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\uff0cReact\u56e2\u961f\u4ecb\u7ecd\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3aReact Fiber\u7684\u4e1c\u897f\uff0c\u4f7f\u5f97\u66f4\u65b0\u5c06\u88ab\u5206\u89e3\u4e3a\u8f83\u5c0f\u7684\u5757\u3002\u8fd9\u610f\u5473\u7740\u66f4\u65b0Don\uff06\uff0339; t\u963b\u6b62\u4e86\u957f\u65f6\u95f4\u7684\u4e3b\u7ebf\u7a0b\uff0c\u5c3d\u7ba1\u5b83\u6ca1\u6709\u51cf\u5c11\u66f4\u65b0\u7684\u603b\u5de5\u4f5c\u91cf\u6216\u66f4\u65b0\u6240\u9700\u7684\u65f6\u95f4\u3002\n   \u6700\u660e\u663e\u7684\u662f\uff0c\u5dee\u522b\u4e0d\u81ea\u7531\u3002\u60a8\u53ef\u4ee5\uff06\uff0339; t\u5c06\u66f4\u6539\u5e94\u7528\u4e8eReal DOM\uff0c\u800c\u65e0\u9700\u5c06\u65b0\u7684\u865a\u62dfDOM\u4e0e\u4e0a\u4e00\u4e2a\u5feb\u7167\u201c\u8fdb\u884c\u6bd4\u8f83\u3002\u8981\u91c7\u53d6\u65e9\u671f\u7684HellomeSsage\u699c\u6837\uff0c\u5047\u8bbe\u59d3\u540d\u9053\u5177\u4ece\uff06\uff0339\u6539\u53d8;\u4e16\u754c\uff06\uff0339; \uff06\uff0339;\u6bcf\u4e2a\u4eba\u548c\uff0339;\n \u4e24\u4e2a\u5feb\u7167\u90fd\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\uff06\uff0339; s a\uff06lt; div\u548cgt;\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4fdd\u6301\u76f8\u540c\u7684DOM\u8282\u70b9\n \u6211\u4eec\u679a\u4e3e\u65e7\u7684\u6240\u6709\u5c5e\u6027\uff06lt; div\uff06gt;\u548c\u65b0\u7684\uff0c\u770b\u770b\u662f\u5426\u6709\u4efb\u4f55\u9700\u8981\u66f4\u6539\uff0c\u6dfb\u52a0\u6216\u5220\u9664\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u6709\u4e00\u4e2a\u5c5e\u6027 - \u5177\u6709\u503c\uff06\uff0334\u7684\u7c7b\u540d;\u95ee\u5019\uff06\uff0334;\n \u4e0b\u964d\u5230\u5143\u7d20\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u6587\u672c\u5df2\u66f4\u6539\uff0c\u6240\u4ee5\u6211\u4eec\uff06\uff0339; ll\u9700\u8981\u66f4\u65b0\u771f\u6b63\u7684dom \n\u5728\u8fd9\u4e09\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u7b2c\u4e09\u4e2a\u5177\u6709\u503c\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u66f4\u65b0\u4e2d\u7684\u60c5\u51b5\u5982\u6b64 - \u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u7ed3\u6784\u4e0d\u53d8\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u7b2c3\u6b65\uff1a\n  \uff08\u8fd9\u51e0\u4e4e\u5b8c\u5168\u662fSvelte\u751f\u6210\u7684\u66f4\u65b0\u4ee3\u7801\u3002\u4e0e\u4f20\u7edf\u7684UI\u6846\u67b6\u4e0d\u540c\uff0cSvelte\u662f\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u5b83\u5728\u6784\u5efa\u65f6\u95f4\u5185\u77e5\u9053\u5982\u4f55\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6539\u53d8\uff0c\u800c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u6267\u884c\u5de5\u4f5c\u3002\uff09\n   \u53cd\u5e94\u548c\u5176\u4ed6\u865a\u62dfDOM\u6846\u67b6\u4f7f\u7528\u7684\u4e0d\u540c\u7b97\u6cd5\u5feb\u3002\u53ef\u4ee5\u8bf4\uff0c\u8f83\u5927\u7684\u5f00\u9500\u672c\u8eab\u5c31\u5728\u7ec4\u4ef6\u4e2d\u3002\u4f60\u4e0d\u4f1a\u5199\u8fd9\u6837\u7684\u4ee3\u7801......\n  ......\u56e0\u4e3a\u4f60\uff06\uff0339; d\u65e0\u8bba\u662fprops.foo\u8fd8\u662f\u6539\u53d8\u4e86\u6bcf\u6b21\u66f4\u65b0\u90fd\u4f1a\u4e0d\u5c0f\u5fc3\u91cd\u65b0\u8ba1\u7b97\u4ef7\u503c\u3002\u4f46\u662f\u5b83\u975e\u5e38\u5e38\u89c1\u7684\u662f\u505a\u51fa\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u548c\u5206\u914d\uff0c\u4f3c\u4e4e\u826f\u597d\u7684\u65b9\u5f0f\uff1a\n \u529f\u80fd\u6f6e\u6d41isticcomponent\uff08\u9053\u5177\uff09{const [\u88ab\u9009\u4e2d\uff0csetSelected] = Usestate\uff08null\uff09;\u8fd4\u56de\uff08\uff06lt; div\uff06gt;\uff06lt; p\uff06gt;\u88ab\u9009\u4e2d{\u88ab\u9009\u4e2d\u7684\u3002\u9009\u5b9a\u7684.name\uff1a\uff06\uff0339;\uff06\uff0339;\uff06\uff0339;\uff06lt; / p\uff06gt; {props.items\u3002\u5730\u56fe\uff08\u9879\u76ee= gt ;\uff06lt;\uff06lt; on onclick = {\uff08\uff09=\uff06gt; setSelected\uff08Item\uff09}\uff06gt; {Item .name}\uff06lt; /\u6309\u94ae\uff06gt;\uff06lt; / li\uff06gt;\uff09}\uff06lt; / button\uff06gt;\uff06lt; / button\uff06gt;\uff06lt; / uld;\uff06gt;\uff06lt; / div\uff06gt;\uff09; }\n \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u9635\u5217; li\uff06gt;\u5143\u7d20 - \u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684\u5185\u8054\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f - \u65e0\u8bbaprops.items\u662f\u5426\u5df2\u66f4\u6539\uff0c\u90fd\u4f1a\u53d1\u751f\u5728\u6bcf\u4e2a\u72b6\u6001\u7684\u53d8\u5316\u4e2d\u3002\u9664\u975e\u4f60\u548c\uff0339;\u6ca1\u6709\u826f\u597d\u5730\u75f4\u8ff7\u4e8e\u8868\u73b0\uff0c\uff06\uff0339;\u91cd\u7533\u6ca1\u6709\u4f18\u5316\u8fd9\u4e00\u70b9\u3002\u6ca1\u6709\u70b9\u3002\u5b83\uff06\uff0339;\u5f88\u5feb\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u4f60\u77e5\u9053\u66f4\u5feb\u7684\u662f\u4ec0\u4e48\uff1f\u4e0d\u662f\u8fd9\u6837\u505a\u7684\u3002\n  \u8fdd\u7ea6\u505a\u51fa\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u7684\u5371\u9669\uff0c\u5373\u4f7f\u8fd9\u9879\u5de5\u4f5c\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u4e5f\u662f\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6700\u7ec8\u5c06\u5c48\u670d\u4e8e\uff06\uff0339;\u6b7b\u4ea1\u7684\u6b7b\u4ea1\uff06\uff0339;\u6ca1\u6709\u660e\u786e\u7684\u74f6\u9888\uff0c\u7784\u51c6\u5b83\uff06\uff0339;\u65f6\u95f4\u4f18\u5316\u3002 \n\u91cd\u8981\u7684\u662f\u8981\u4e86\u89e3\u865a\u62dfDOM ISN\uff06\uff0339; t\u4e00\u4e2a\u529f\u80fd\u5f88\u91cd\u8981\u3002 \u5b83\uff06\uff0339; s\u4e00\u4e2a\u7ec8\u7aef\u7684\u624b\u6bb5\uff0c\u7ed3\u675f\u662f\u58f0\u660e\u6027\u7684\uff0c\u72b6\u6001\u9a71\u52a8\u7684ui\u5f00\u53d1\u3002 Virtual DOM\u662f\u6709\u4ef7\u503c\u7684\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u60a8\u5728\u4e0d\u8003\u8651\u72b6\u6001\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u6027\u80fd\u901a\u5e38\u8db3\u591f\u597d\u3002 \u8fd9\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u66f4\u591a\u7684\u65f6\u95f4\u5728\u521b\u9020\u6027\u4efb\u52a1\u4e0a\u800c\u4e0d\u662f\u7e41\u7410\u7684\u65f6\u95f4\u3002  \u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u865a\u62dfDOM\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u7c7b\u4f3c\u7684\u7f16\u7a0b\u6a21\u578b - \u5e76\u4e14\uff06\uff0339; svelte\u8fdb\u6765\u7684\u5730\u65b9\u3002 ", "note_en": "If you&#39;ve used JavaScript frameworks in the last few years, you&#39;ve probably heard the phrase &#39;the virtual DOM is fast&#39;, often said to mean that it&#39;s faster than the  real DOM. It&#39;s a surprisingly resilient meme \u2014 for example people have asked how Svelte can be fast when it doesn&#39;t use a virtual DOM.\n    In many frameworks, you build an app by creating  render() functions, like this simple  React component:\n    ...but the result is the same \u2014 an object representing how the page should now look. That object is the virtual DOM. Every time your app&#39;s state updates (for example when the  name prop changes), you create a new one. The framework&#39;s job is to  reconcile the new one against the old one, to figure out what changes are necessary and apply them to the real DOM.\n   Misunderstood claims about virtual DOM performance date back to the launch of React. In  Rethinking Best Practices, a seminal 2013 talk by former React core team member Pete Hunt, we learned the following:\n This is actually extremely fast, primarily because most DOM operations tend to be slow. There&#39;s been a lot of performance work on the DOM, but most DOM operations tend to drop frames.\n  But hang on a minute! The virtual DOM operations are  in addition to the eventual operations on the real DOM. The only way it could be faster is if we were comparing it to a less efficient framework (there were plenty to go around back in 2013!), or arguing against a straw man \u2014 that the alternative is to do something no-one actually does:\n   React is not magic. Just like you can drop into assembler with C and beat the C compiler, you can drop into raw DOM operations and DOM API calls and beat React if you wanted to. However, using C or Java or JavaScript is an order of magnitude performance improvement because you don&#39;t have to worry...about the specifics of the platform. With React you can build applications without even thinking about performance and the default state is fast.\n    Not exactly. It&#39;s more like &#39;the virtual DOM is usually fast enough&#39;, but with certain caveats.\n The original promise of React was that you could re-render your entire app on every single state change without worrying about performance. In practice, I don&#39;t think that&#39;s turned out to be accurate. If it was, there&#39;d be no need for optimisations like  shouldComponentUpdate (which is a way of telling React when it can safely skip a component).\n Even with  shouldComponentUpdate, updating your entire app&#39;s virtual DOM in one go is a lot of work. A while back, the React team introduced something called React Fiber which allows the update to be broken into smaller chunks. This means (among other things) that updates don&#39;t block the main thread for long periods of time, though it doesn&#39;t reduce the total amount of work or the time an update takes.\n   Most obviously,  diffing isn&#39;t free. You can&#39;t apply changes to the real DOM without first comparing the new virtual DOM with the previous snapshot. To take the earlier  HelloMessage example, suppose the  name prop changed from &#39;world&#39; to &#39;everybody&#39;.\n Both snapshots contain a single element. In both cases it&#39;s a  &lt;div&gt;, which means we can keep the same DOM node\n We enumerate all the attributes on the old  &lt;div&gt; and the new one to see if any need to be changed, added or removed. In both cases we have a single attribute \u2014 a  className with a value of  &#34;greeting&#34;\n Descending into the element, we see that the text has changed, so we&#39;ll need to update the real DOM\n Of these three steps, only the third has value in this case, since \u2014 as is the case in the vast majority of updates \u2014 the basic structure of the app is unchanged. It would be much more efficient if we could skip straight to step 3:\n  (This is almost exactly the update code that Svelte generates. Unlike traditional UI frameworks, Svelte is a compiler that knows at  build time how things could change in your app, rather than waiting to do the work at  run time.)\n   The diffing algorithms used by React and other virtual DOM frameworks are fast. Arguably, the greater overhead is in the components themselves. You wouldn&#39;t write code like this...\n  ...because you&#39;d be carelessly recalculating  value on every update, regardless of whether  props.foo had changed. But it&#39;s extremely common to do unnecessary computation and allocation in ways that seem much more benign:\n function  MoreRealisticComponent ( props )  {  const  [selected , setSelected ]  =  useState ( null ) ;  return  (  &lt;div &gt;  &lt;p &gt;Selected  {selected  ? selected .name  :  &#39;nothing&#39; } &lt; /p &gt;  &lt;ul &gt;  {props .items . map ( item  =&gt;  &lt;li &gt;  &lt;button onClick = { ( )  =&gt;  setSelected (item ) } &gt;  {item .name }  &lt; /button &gt;  &lt; /li &gt;  ) }  &lt; /ul &gt;  &lt; /div &gt;  ) ; }\n Here, we&#39;re generating a new array of virtual  &lt;li&gt; elements \u2014 each with their own inline event handler \u2014 on every state change, regardless of whether  props.items has changed. Unless you&#39;re unhealthily obsessed with performance, you&#39;re not going to optimise that. There&#39;s no point. It&#39;s plenty fast enough. But you know what would be even faster?  Not doing that.\n  The danger of defaulting to doing unnecessary work, even if that work is trivial, is that your app will eventually succumb to &#39;death by a thousand cuts&#39; with no clear bottleneck to aim at once it&#39;s time to optimise.\n    It&#39;s important to understand that virtual DOM  isn&#39;t a feature. It&#39;s a means to an end, the end being declarative, state-driven UI development. Virtual DOM is valuable because it allows you to build apps without thinking about state transitions, with performance that is  generally good enough. That means less buggy code, and more time spent on creative tasks instead of tedious ones.\n But it turns out that we can achieve a similar programming model without using virtual DOM \u2014 and that&#39;s where Svelte comes in.", "posttime": "2021-06-29 23:01:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u865a\u62df,dom", "title": "\u865a\u62dfDOM\u662f\u7eaf\u7cb9\u7684\u5f00\u9500\uff082018\uff09 ", "title_en": "Virtual DOM is pure overhead (2018)", "transed": 1, "url": "https://svelte.dev/blog/virtual-dom-is-pure-overhead", "via": "", "real_tags": ["\u865a\u62df", "dom"]}]
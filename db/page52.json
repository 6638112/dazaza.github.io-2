[{"category": "", "categoryclass": "", "imagename": "dd10ba5660ee165b98cc47ffafc0c795.jpg", "infoid": 1068652, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u68c0\u5bdf\u5b98\u661f\u671f\u4e00\u5ba3\u5e03\uff0c\u7f05\u56e0\u5dde\u4e00\u540d\u7f05\u56e0\u5dde\u901a\u8fc7\u4f7f\u7528\u7537\u5b69\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u6765\u83b7\u5f97\u8d26\u6237\u548c\u503a\u52a1\u7684\u8d26\u6237\u548c\u8d22\u4ea7\uff0c\u6b3a\u8bc8\u5730\u83b7\u5f97\u8d85\u8fc7225,000\u7f8e\u5143\u7684\u8d44\u91d1\u548c\u8d22\u4ea7\u3002\n \u7f8e\u56fd\u53f8\u6cd5\u90e8\u7684\u65b0\u7f55\u5e03\u4ec0\u5c14\u5dde\u5730\u533a\u529e\u516c\u5ba4\u5728\u4e00\u4efd\u65b0\u95fb\u53d1\u5e03\u4e2d\u8868\u793a\uff0c38\u5c81\u7684\u5927\u536b\u51ef\u6069\u961f\u5df2\u5411\u91d1\u5c5e\u6b3a\u8bc8\u6536\u8d39\u7b7e\u8ba2\u4e86\u4e00\u6761\u5185\u759a\uff0c\u5e76\u8ba1\u5212\u572810\u6708\u4efd\u88ab\u5224\u5211\u3002\n \u636e\u79f0\uff0cKeene\u66fe\u66fe\u4f7f\u7528\u4ed6\u5df2\u77e5\u7684\u672a\u6210\u5e74\u4eba\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\uff0c\u4ed6\u5728\u6cd5\u5ead\u6587\u4ef6\u548c\u9648\u8ff0\u4e2d\u88ab\u79f0\u4e3aJohn Doe\u3002\n  \u5f8b\u5e08\u7684\u529e\u516c\u5ba4\u8868\u793a\uff0cDoe\u7684\u6cd5\u5f8b\u76d1\u62a4\u4eba\u62a5\u544a\u4e86\u7f57\u5207\u65af\u7279\u8b66\u5bdf\u5c40\u7684\u94a6\u65af\u7279\u00b7\u51ef\u6069\uff0c\u636e\u636e\u79f0\uff0c2016\u5e7412\u6708\u81f32019\u5e748\u6708\u671f\u95f4\uff0c\u636e\u79f0\u5c06DOE\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u4e0e\u201c\u6536\u8d2d\uff0c\u201d\u516c\u7528\u4e8b\u4e1a\u670d\u52a1\u548c\u51e0\u5f20\u4fe1\u7528\u5361\u3002\u201c\n \u68c0\u5bdf\u5b98\u8fd8\u8ba4\u4e3a\uff0c\u8bb0\u5f55\u663e\u793aKeene\u4f7f\u7528\u4e86Doe\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\uff0c\u4ee5\u83b7\u5f97\u8d2d\u4e70\u96ea\u5730\u6469\u6258\u8f66\uff0c\u6469\u6258\u8f66\u548c\u51e0\u8f86\u6c7d\u8f66\u7684\u8d37\u6b3e\uff0c\u5305\u62ec\u8d2d\u4e70BMW SUV\u768456,000\u7f8e\u5143\u4ee5\u4e0a\u3002\n \u6839\u636e\u5f8b\u5e08\u7684\u529e\u516c\u5ba4\u7684\u8bf4\u6cd5\uff0c\u5f53\u636e\u79f0\u80af\u5b9a\u4f7f\u7528\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u5f00\u59cb\u65f6\uff0cDoE\u53ea\u67097\u5c81\u3002\n  \u4ee3\u7406\u7f8e\u56fd\u5f8b\u5e08John Farley\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u90a3\u4e9b\u6ee5\u7528\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u7684\u4eba\u72af\u4e0b\u6b3a\u8bc8\u7684\u4eba\u6b63\u5728\u72af\u4e0b\u4e25\u91cd\u7684\u8054\u90a6\u72af\u7f6a\u3002\u201d \n\u201c\u6211\u4eec\u4e0e\u6211\u4eec\u7684\u6267\u6cd5\u4f19\u4f34\u5bc6\u5207\u5408\u4f5c\uff0c\u4ee5\u4fdd\u62a4\u793e\u4f1a\u4fdd\u969c\u5236\u5ea6\u7684\u8bda\u4fe1\uff0c\u5e76\u8bc6\u522b\u548c\u8d77\u8bc9\u90a3\u4e9b\u4f7f\u7528\u5176\u4ed6\u4eba\u8eab\u4efd\u72af\u4e0b\u6b3a\u8bc8\u7684\u4eba\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\u3002  \u6770\u52d2\u66fc\u6770\u514b\uff0c\u8d1f\u8d23\u7763\u5bdf\u5c06\u519b\u7684\u6ce2\u58eb\u987f\u529e\u4e8b\u5904\u793e\u4f1a\u4fdd\u969c\u7ba1\u7406\u529e\u516c\u5ba4\u7684\u7279\u6b8a\u4ee3\u7406\u4eba\u8868\u793a\uff0cKeene\u7684\u6709\u7f6a\u8bf7\u6c42\u201c\u5c55\u793a\u4e86\u6211\u4eec\u62c5\u4efb\u7b26\u5408\u8d23\u4efb\u4eba\u7684\u627f\u8bfa\uff0c\u4ed6\u4eec\u6545\u610f\u6ee5\u7528\u4ed6\u4eba\u7684\u793e\u4f1a\u5b89\u5168\u4eba\u6570\u7684\u4e2a\u4eba\u83b7\u5f97\u3002\u201d  \u6839\u636e\u6709\u5173\u65b0\u95fb\u754c\u7684\u8bf4\u6cd5\uff0cKeene\u7684\u5f8b\u5e08\u5df2\u540c\u610f\u4e00\u4e2a\u4e09\u5e74\u7684\u8bd5\u7528\u5224\u51b3\uff0c\u5176\u4e2d18\u4e2a\u6708\u5728\u5bb6\u5ead\u9650\u5236\u4e0b\u4f5c\u4e3a\u8fa9\u8bc9\u534f\u8bae\u7684\u4e00\u90e8\u5206\u3002  \u8be5\u534f\u8bae\u6307\u51fa\uff0c\u867d\u7136Keene\u5df2\u7ecf\u5f00\u59cb\u507f\u8fd8\u91d1\u94b1\uff0c\u4f46\u4ed6\u4ecd\u7136\u6b20102,000\u7f8e\u5143\uff0cAP\u62a5\u544a\u3002 ", "note_en": "Prosecutors announced Monday that a Maine man has pleaded guilty to fraudulently obtaining more than $225,000 in funds and property by using a boy\u2019s Social Security number to obtain accounts and incur debt.\n The U.S. Attorney\u2019s Office for the District of New Hampshire said in  a press release that 38-year-old David Keene had entered into a guilty plea to a wire fraud charge and is scheduled to be sentenced in October.\n Keene had allegedly used the Social Security number of a minor he had known, who is referred to in court documents and statements only as John Doe.\n  The attorney\u2019s office said that Doe\u2019s legal guardian had reported Keene to the  Rochester Police Department, with credit reports showing that between December 2016 and August 2019, several accounts were opened in which Keene allegedly used Doe\u2019s Social Security number to \u201cacquire, among other things, utility services and several credit cards.\u201d\n Prosecutors also argued that records showed Keene had used Doe\u2019s Social Security number to obtain loans to purchase a snowmobile, motorcycle and several cars, including more than $56,000 to purchase a BMW SUV.\n When Keene allegedly began using the Social Security number, Doe was only 7 years old, according to the attorney\u2019s office.\n  Acting U.S. Attorney John Farley said in a statement, \u201cThose who misuse Social Security numbers to commit fraud are committing a serious federal crime.\u201d\n \u201cWe work closely with our law enforcement partners to protect the integrity of the Social Security system and to identify and prosecute those who use other people\u2019s identities to commit fraud,\u201d he added.\n   Jermaine Jack, acting special agent in charge of the Social Security Administration Office of the Inspector General\u2019s Boston office, said that Keene\u2019s guilty plea \u201cdemonstrates our commitment to hold accountable those who intentionally misuse the Social Security numbers of others for their own personal gain.\u201d\n According to  The Associated Press, Keene\u2019s lawyers have agreed to a three-year probation sentence with 18 months under home confinement as part of the plea deal.\n The agreement noted that while Keene has started paying back the money, he still owes roughly $102,000, the AP reported.", "posttime": "2021-06-30 00:40:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53f7\u7801,number,keene", "title": "\u7f05\u56e0\u6587\u4f7f\u7528\u7537\u5b69\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u5728\u6b3a\u8bc8\u4e2d\u7b79\u96c6\u8d85\u8fc7225\u7f8e\u5143 ", "title_en": "Maine man used boy's Social Security number to commit more than $225K in fraud", "transed": 1, "url": "https://thehill.com/homenews/state-watch/560699-maine-man-used-boys-social-security-number-to-commit-more-than-225k-in", "via": "", "real_tags": ["\u53f7\u7801", "number", "keene"]}, {"category": "", "categoryclass": "", "imagename": "07e1a87f1755f9a72a064ac67cb5d592.jpg", "infoid": 1068651, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u4e2d\u7684\u524d\u4e00\u96c6\u4e2d\uff0c\u6211\u5f00\u59cb\u4f7f\u7528\u8bbe\u7f6eNZCV\u6807\u5fd7\u7684\u6307\u4ee4\u6765\u63a7\u5236\u5982\u4f55\u63a7\u5236\u6d41\uff0c\u7136\u540e\u662f\u6807\u7b7e\u7684\u6761\u4ef6\u5206\u652f\u3002\u7ed9\u51fa\u7684\u793a\u4f8b\u662f\u6700\u7b80\u5355\u7684\uff0c\u5982\u679c\u662f......\u5426\u5219\uff0c\u5982\u679c...\u8bed\u53e5\u6216\u5c0f\u578b\u4ea4\u6362\u673a\u8bed\u53e5\u3002\u53ef\u4ee5\u5728\u56fe\u4e2d\u6982\u62ec\uff1a\n  \u672c\u6587\u4ecb\u7ecd\u4e86\u67e5\u770b\u5176\u4ed6\u4e3b\u8981\u7684\u63a7\u5236\u7c7b\u578b\uff0c\u6761\u4ef6\u5faa\u73af\u3002\n \u867d\u7136\u6761\u4ef6\u5faa\u73af\u53ef\u4ee5\u4f7f\u7528\u50cfSWIFT\u8fd9\u6837\u7684\u9ad8\u7ea7\u8bed\u8a00\u4ee5\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u7f16\u5199\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u57fa\u672c\u6a21\u5f0f\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6d4b\u8bd5\u662f\u5426\u5728\u5faa\u73af\u7684\u5934\u90e8\u6216\u5c3e\u90e8\u8fdb\u884c\u3002\n  \u5728SWIFT\u4e2d\uff0c\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5faa\u73af\u5f62\u5f0f\uff0c\u6d4b\u8bd5\u662f\u5426\u5728\u5c3e\u90e8\u6ee1\u8db3\u6761\u4ef6\u662ffor\u8bed\u53e5\uff1a\u7528\u4e8e\u7d22\u5f15\u57281 ... 100 {}\u4e2d\n ARM64\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684\u5178\u578b\u5b9e\u73b0\u53ef\u80fd\u9996\u5148\u8bbe\u7f6e\u5305\u542b\u5f00\u59cb\u7d22\u5f15\u503c\u548c\u7ed3\u675f\u7d22\u5f15\u7684\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u5faa\u73af\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u9012\u589e\u7d22\u5f15\u503c\uff0c\u5e76\u6d4b\u8bd5\u5b83\u662f\u5426\u4ecd\u7136\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6700\u7ec8\u7d22\u5f15\u3002\u5982\u679c\u5b83\u786e\u5b9e\uff0c\u7136\u540e\u5206\u652f\u56de\u5faa\u73af\u518d\u6b21\u6267\u884c\u5b83;\u5982\u679c\u6ca1\u6709\uff0c\u5219\u7ee7\u7eed\u4f7f\u7528\u4ee5\u4e0b\u64cd\u4f5c\u3002\n \u4ee5\u4e0b\u662f\u7d22\u5f15\u5b58\u50a8\u5728\u5bc4\u5b58\u5668x5\u4e2d\u7684\u793a\u4f8b\uff0c\u4ee5\u53cax4\uff1amov x5\uff0c\uff031 // start index = 1 mov x4\uff0c\uff03100 // endex = 100 for_loop\uff1a//\u6267\u884c\u6240\u9700\u7684\u7d22\u5f15\u5728\u5faa\u73af// ...\u6dfb\u52a0x5\uff0cx5\uff0c\uff031 //\u9012\u589e1 cmp x5\uff0cx4 //\u68c0\u67e5\u662f\u5426\u5df2\u8fbe\u5230\u7ec8\u7aef\u7d22\u5f15B.Le for_loop //\uff0c\u5982\u679cindex\uff06lt; = end index\uff0c\u5faa\u73af\u56de/ /\u4e0b\u4e00\u4e2a\u5faa\u73af\u540e\u7684\u4ee3\u7801\n  \u4fee\u6539\u4e3a\u8ba1\u7b97\u4e0b\u964d\u7684\u53d8\u4f53\uff0c\u8fd9\u5f88\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5c06\u7d22\u5f15\u4ece\u4e0a\u9650\u9012\u51cf\u76f4\u5230\u8fbe\u5230\u4e0b\u9650\u3002 \n\u5728Swift\u4e2d\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u5faa\u73af\u5f62\u5f0f\uff0c\u5176\u5728\u5934\u90e8\u4f7f\u7528\u7684\u662f\uff1a\u800cx\uff06lt; 100 {}\n ARM64\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684\u5178\u578b\u5b9e\u73b0\u53ef\u80fd\u9996\u5148\u8bbe\u7f6e\u5305\u542bX\u548c\u6700\u7ec8\u9650\u5236\u7684\u521d\u59cb\u503c\u7684\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u68c0\u67e5x\u662f\u5426\u5df2\u8fbe\u5230\u8be5\u7ec8\u7aef\u503c\u3002\u5982\u679c\u5b83\u6709\uff0c\u5219\u5728\u5faa\u73af\u540e\u5206\u652f\u5230\u4e0b\u4e00\u4e2a\u4ee3\u7801\u3002\u5426\u5219\u6267\u884c\u5faa\u73af\u4ee3\u7801\u5e76\u5728\u6267\u884c\u65e0\u6761\u4ef6\u5faa\u73af\u56de\u5230\u8d77\u59cb\u6d4b\u8bd5\u5e76\u518d\u6b21\u901a\u8fc7\u5faa\u73af\u4e4b\u524d\u9012\u589eX\u503c\u3002\n \u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5176\u4e2dx\u503c\u5b58\u50a8\u5728\u5bc4\u5b58\u5668x5\u4e2d\uff0cx4\uff1amov x5\uff0c\uff031 // start\u503c= 1 mov x4\uff0c\uff03100 // end\u503c= 100 wher_loop\uff1acmp x5\uff0cx4 / /\u68c0\u67e5\u662f\u5426\u5df2\u8fbe\u5230\u7ec8\u7aef\u503cB.gehing and_done //\u5982\u679c\u503c\uff06gt;\u7ec8\u7aef\u503c\uff0c\u7ed3\u675f\u5faa\u73af//\u6267\u884c\u5faa\u73af\u4e2d\u6240\u9700\u7684\u5185\u5bb9// ...\u6dfb\u52a0x5\uff0cx5\uff0c\uff031 //\u589e\u91cf\u503c\uff08\u6216\u5728\u7ec8\u6b62\u4e2d\u6240\u9700\u7684\u4efb\u4f55\u4e1c\u897f\uff09b with_loop //\u65e0\u6761\u4ef6\u5faa\u73af\u8fd4\u56dewhite_done\uff1a// next\u5faa\u73af\u540e\u7684\u4ee3\u7801\n  \u7ecf\u5178\u793a\u4f8b\u7684\u8fed\u4ee3\u901a\u8fc7\u8fd4\u56de\u7a7a\u7ec8\u6b62\u7684ASCII\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u8282\u5b57\u7b26\u8fed\u4ee3\u3002\n \u5728SWIFT\u4e2d\uff0c\u8fd9\u53ef\u80fd\u88ab\u79f0\u4e3a\uff1aVAR\u8f93\u51fa\uff1a[CCHAR] =\u9635\u5217\uff08\u91cd\u590d\uff1a0\uff0ccount\uff1a255\uff09\u8ba9S\uff1aString =\uff06\uff0334;\u6837\u672c\u5b57\u7b26\u4e32\uff06\uff0334; ascii_copy\uff08s\uff0c\uff06amp;\u8f93\u51fa\uff09\u8c03\u7528\uff1aextern int ascii_copy\u7684c\u5934\uff08const char *\uff0cchar *\uff09;\n \u6ce8\u518c\u7528\u6cd5\u9075\u5faa\uff1a// x1  - \u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5730\u5740// x0  - \u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5730\u5740/// x4  - \u957f\u5ea6\u8ba1\u7b97\u7684\u539f\u59cb\u8f93\u51fa\u5b57\u7b26\u4e32\u3002 // W5  - \u6b63\u5728\u5904\u7406\u7684\u5f53\u524d\u5b57\u7b26\u548c\u6c47\u7f16\u4ee3\u7801\u662f\uff1a_ascii_copy\uff1amov x4\uff0cx1 //\u5faa\u73af\uff0c\u76f4\u5230x1\u6307\u5411\u7684\u5b57\u8282\u662f\u975e\u96f6\u73af\uff1aldrb w5\uff0c[x0]\uff0c\uff031 //\u52a0\u8f7dASCII\u5b57\u7b26\u548c\u9012\u589e\u6307\u9488//\u4f7f\u7528W5 STRB W5\uff0c[x1]\uff0c\uff031 //\u5b58\u50a8\u5b57\u7b26\u5230\u8f93\u51fastr cmp w5\uff0c\uff030 //\u505c\u6b62\u51fb\u4e2d\u7a7a\u5b57\u7b26B.NE\u5faa\u73af//\u5faa\u73af\u5982\u679c\u5b57\u7b26ISN\uff06\uff0339; t null sub x0\uff0cx1\uff0cx4 //\u901a\u8fc7\u51cf\u53bbread //\u8fd4\u56de\u547c\u53eb\u8005\u6765\u83b7\u5f97\u957f\u5ea6\n  \u53ef\u4ee5\u4f7f\u7528\u8bbe\u7f6eNZCV\u6807\u5fd7\u7684\u6307\u4ee4\u6765\u5b9e\u73b0\u63a7\u5236\u4f20\u8f93\u8bed\u53e5\uff0c\u5982\u7ee7\u7eed\uff0c\u4e2d\u65ad\uff0c\u8fd4\u56de\u548c\u629b\u51fa\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6761\u4ef6\u5206\u652f\uff0c\u4f8b\u5982\u5faa\u73af\uff1a// do cmp x5\uff0cx4 //\u6bd4\u8f83\u4e24\u4e2a\u5bc4\u5b58\u5668b.gt break_loop //\u7a81\u7834\u5faa\u73af// do\u5176\u4ed6\u5185\u5bb9b\u5faa\u73af//\u91cd\u590d\u5faa\u73afbreak_loop\uff1a//\u65ad\u5f00\u5faa\u73af\u5e76\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u4ee3\u7801 \n\u8fd9\u4e9b\u6210\u8bed\u4e2d\u7684\u6240\u6709\u56db\u4e2a\u90fd\u5728\u5f53\u4eca\u7684\u6495\u88c2PDF\u4e2d\u6536\u96c6\uff1aARMControlflow1\n \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5f00\u59cb\u67e5\u770b\u4e00\u4e9b\u5e38\u89c1\u7684\u901a\u7528\u6ce8\u518c\u8bf4\u660e\u3002\n \u4e0a\u9762\u7684\u793a\u4f8bASCII\u5b57\u7b26\u4e32\u4ee3\u7801\u662f\u57fa\u4e8e\u4ee5\u4e0b\u4fee\u6539\u4ee3\u7801\u7684Alexander VON\uff0c\u4ee5\u4f34\u968f\u65af\u8482\u82ac\u53f2\u5bc6\u65af\u7684\u4e66\u3002\n  1\uff1a\u6784\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4ee5\u5f00\u53d1\u88c5\u914d\u4f8b\u7a0b\uff0c\u5305\u62ec\u89e3\u91ca\u4eceSWIFT\u8c03\u7528\u6c47\u7f16\u8bed\u8a00\uff0c\u5b8c\u6574\u7684Xcode\u9879\u76ee2\uff1a\u5bc4\u5b58\u5668\u89e3\u91ca3\uff1a\u4f7f\u7528\u6307\u94884\uff1a\u63a7\u5236\u6d41\u7a0b\n    \u624b\u672f\u547c\u53eb\u6807\u51c6\u7528\u4e8eARM 64\u4f4d\u67b6\u6784\uff08ARM\uff09\u4eceGitHub\u5199\u4f5cARM64\u4ee3\u7801\u7528\u4e8eApple\u5e73\u53f0\uff08Apple\uff09Stephen Smith\uff082020\uff09\u752864\u4f4dARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 5880 4. Daniel Kusswurm\uff08 2020\uff09\u73b0\u4ee3ARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 6266 5. ARM64\u6307\u4ee4\u96c6\u53c2\u8003\uff08ARM\uff09\u3002\n  \u53d1\u5e03\u5728Mac\uff0c\u6280\u672f\u548c\u6807\u8bb0\u7684Apple\u7845\uff0c\u81c2\uff0c\u6c47\u7f16\u5668\uff0c\u6c47\u7f16\u8bed\u8a00\uff0cM1\uff0cXcode\u3002\u4e66\u7b7e\u6c38\u4e45\u94fe\u63a5\u3002 ", "note_en": "In  the previous episode in this series, I started to look at how to control flow using an instruction which sets the NZCV flags, followed by a conditional branch to a label. The example given there is among the simplest, a series of  if \u2026 else if \u2026 statements or a small  switch statement. That can be summarised in the diagram:\n  This article moves on to look at the other main type of control, conditional loops.\n Although conditional loops can be written in several different ways using high-level languages like Swift, there are two basic patterns, depending on whether the test is made in the head or tail of the loop.\n  In Swift, the most widely used form of loop which tests whether the condition is met in the tail is the  for statement:  for index in 1...100 { }\n A typical implementation in ARM64 assembly language might start by setting up registers containing the start index value and the end index, then perform the code in the loop, incrementing the index value, and testing whether it remains less than or equal to the end index. If it does, then branch back to the loop to perform it again; if it doesn\u2019t, then continue with the following operations.\n Here\u2019s an example in which the index is stored in register X5, and the maximum index in X4:  \tMOV\tX5, #1 // start index = 1 MOV X4, #100 // end index = 100 for_loop:\t// do what you need in the loop // \u2026 ADD\tX5, X5, #1 // increment the index by 1 CMP\tX5, X4 // check whether end index has been reached B.LE for_loop // if index &lt;= end index, loop back // next code after loop\n  It\u2019s simple to modify that for variants which count down, for example, by decrementing the index from an upper limit until it reaches the lower limit.\n  In Swift, a common form of loop which performs testing at the head uses  while:  while x &lt; 100 { }\n A typical implementation in ARM64 assembly language might start by setting up registers containing the initial value of x and the end limit, then check whether x has reached that end value. If it has, then branch to the next code after the loop. Otherwise perform the loop code and increment the x value before performing an unconditional loop back to the starting test and passing through the loop again.\n Here\u2019s an example in which the x value is stored in register X5, and the end value in X4:  \tMOV\tX5, #1 // start value = 1 MOV X4, #100 // end value = 100 while_loop:\tCMP\tX5, X4 // check whether end value has been reached B.GE\t\twhile_done // if value &gt; end value, end loop // do what you need to in the loop // \u2026 ADD X5, X5, #1 // increment value (or whatever needed to progress towards termination) B\twhile_loop // unconditional loop back while_done: // next code after loop\n  A classic example of that is iterating through each of the single-byte characters in a null-terminated ASCII string.\n In Swift, this might be called as:  var output: [CChar] = Array(repeating: 0, count: 255) let s: String = &#34;Sample string&#34; ascii_copy(s, &amp;output) which calls the C header of:  extern int ascii_copy(const char *, char *);\n Register usage follows:  // X1 - address of output string // X0 - address of input string // X4 - original output string for length calc. // W5 - current character being processed and the assembly code is:  _ascii_copy:\tMOV \tX4, X1 // loop until the byte pointed to by X1 is non-zero loop:\tLDRB\t\tW5, [X0], #1 // load ASCII character and increment pointer // do whatever you need to the character in W5 STRB\t\tW5, [X1], #1 // store character to output str CMP\t\tW5, #0 // stop on hitting a null character B.NE\t\tloop // loop if character isn&#39;t null SUB\t\tX0, X1, X4 // get the length by subtracting the pointers RET\t\t// Return to caller\n  Control transfer statements such as  continue, break, return and  throw can be implemented using an instruction which sets the NZCV flags, then a conditional branch, such as  loop: // do things CMP\tX5, X4 // compare the two registers B.GT break_loop // break out of loop // do other things B\tloop // repeat loop break_loop:\t// break out of loop and continue with next code\n  All four of these idioms are collected together in today\u2019s tear-out PDF:  ARMcontrolflow1\n In the next article, I\u2019ll start looking at some common general-purpose register instructions.\n The example ASCII string code above is based on Alexander von Below\u2019s modified code to accompany Stephen Smith\u2019s book.\n  1: Building an app to develop assembly routines, including an explanation of calling assembly language from Swift, with a complete Xcode project  2: Registers explained  3: Working with pointers  4: Controlling flow\n    Procedure Call Standard for the Arm 64-bit Architecture (ARM) from  Github  Writing ARM64 Code for Apple Platforms (Apple) Stephen Smith (2020)  Programming with 64-Bit ARM Assembly Language, Apress, ISBN 978 1 4842 5880 4. Daniel Kusswurm (2020)  Modern Arm Assembly Language Programming, Apress, ISBN 978 1 4842 6266 5.  ARM64 Instruction Set Reference (ARM).\n  Posted in  Macs,  Technology and tagged  Apple silicon,  ARM,  assembler,  assembly language,  M1,  Xcode. Bookmark the  permalink.", "posttime": "2021-06-30 00:39:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u6761\u4ef6,arm,\u5faa\u73af", "title": "ARM\u7ec4\u4ef6\u4e2d\u7684\u4ee3\u7801\uff1a\u6761\u4ef6\u5faa\u73af ", "title_en": "Code in ARM Assembly: Conditional Loops", "transed": 1, "url": "https://eclecticlight.co/2021/06/29/code-in-arm-assembly-conditional-loops/", "via": "", "real_tags": ["\u4ee3\u7801", "\u6761\u4ef6", "arm", "\u5faa\u73af"]}, {"category": "", "categoryclass": "", "imagename": "82a97e1df33f144e6b8c1a7c595d2577.jpg", "infoid": 1068650, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u4ee5\u641c\u7d22\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5927\u6d77\u8c79\u9519\u8bef\uff0c\u662f\u7b2c\u4e00\u4e2a\u5c01\u9762\u542c\u529b\u8bbe\u5907\uff08\u6216\uff06\uff0334; bug\uff06\uff0334;\uff09\u4f7f\u7528\u88ab\u52a8\u6280\u672f\u6765\u4f20\u8f93\u97f3\u9891\u4fe1\u53f7\u3002\u5b83\u57281945\u5e748\u67084\u65e5\uff0c\u7f8e\u56fd\u5927\u4f7f\u82cf\u8054\u5230W.Verell Harriman\u63d0\u4f9b\u7684\u793c\u7269\u5185\u5bb9\u3002\u56e0\u4e3a\u5b83\u662f\u88ab\u52a8\u7684\uff0c\u9700\u8981\u6765\u81ea\u5916\u90e8\u6765\u6e90\u7684\u7535\u78c1\u80fd\u91cf\uff0c\u4ee5\u53d1\u52a8\u548c\u6d3b\u8dc3\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u5c04\u9891\u8bc6\u522b\uff08RFID\uff09\u6280\u672f\u7684\u524d\u8eab\u3002 [1] [2] [3]\n   \u8fd9\u4ef6\u4e8b\u662f\u7531\u82cf\u8054\u4fc4\u7f57\u65af\u53d1\u660e\u4ebaL\u00e9onTheremin\u8bbe\u8ba1\u7684\uff0c\u4e3a\u4ed6\u7684\u53d1\u660e\u53d1\u660e\uff0c\u7535\u5b50\u4e50\u5668\u6700\u4e3a\u719f\u6089\u3002\n  \u82cf\u8054\u4eba\u4f7f\u7528\u5d4c\u5165\u5f0f\u96d5\u523b\u5728\u7f8e\u56fd\u7684\u96d5\u523b\u6728\u8d28\u6591\u5757\u7684\u88c5\u7f6e\uff0c\u82cf\u8054\u4eba\u7aa5\u63a2\u7f8e\u56fd\u3002 1945\u5e748\u67084\u65e5\uff0c\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u7ed3\u675f\u524d\u51e0\u5468\uff0c\u82cf\u8054\u5e74\u8f7b\u5148\u950b\u7ec4\u7ec7\u7684\u4ee3\u8868\u56e2\u5411\u54c8\u91cc\u66fc\u5927\u4f7f\u96d5\u523b\u96d5\u523b\uff0c\u4f5c\u4e3aA\uff06\uff0334;\u53cb\u8c0a\u7684\u59ff\u6001\uff06\uff0334;\u5230\u82cf\u8054\uff06\uff0339;\u6218\u4e89\u76df\u53cb\u3002\u5b83\u5728\u5927\u4f7f\u548c\uff0339;\u83ab\u65af\u79d1\u5c45\u6c11\u5b66\u4e60\u4e2d\u6302\u4e86\u4e03\u5e74\uff0c\u76f4\u52301952\u5e74\u57281952\u5e74\u5728\u5927\u4f7f\u4e54\u6cbb\u00b7\u80af\u7eb3\u7684\u4efb\u671f\u5185\u66b4\u9732\u3002 [5]\n   \u8be5\u7269\u54c1\u7531\u8fde\u63a5\u5230\u5c0f\u56db\u5206\u4e4b\u4e00\u6ce2\u957f\u5929\u7ebf\u7684\u5fae\u5c0f\u7535\u5bb9\u819c\u7ec4\u6210;\u5b83\u6ca1\u6709\u7535\u6e90\u6216\u6709\u6e90\u7535\u5b50\u5143\u4ef6\u3002\u4ec5\u5f53\u4ece\u5916\u90e8\u53d1\u5c04\u5668\u53d1\u9001\u5230\u8bbe\u5907\u7684\u6b63\u786e\u9891\u7387\u7684\u65e0\u7ebf\u7535\u4fe1\u53f7\u65f6\uff0c\u8be5\u5668\u4ef6\u662f\u65e0\u6e90\u8154\u8c10\u632f\u5668\u3002\u5728NSA Parlance\u4e2d\u79f0\u4e3a\uff06\uff0334;\u7167\u660e\uff06\uff0334;\u65e0\u6e90\u8bbe\u5907\u3002\u58f0\u6ce2\uff08\u6765\u81ea\u5927\u4f7f\u548c\uff0339\u5185\u7684\u58f0\u97f3\uff09\u901a\u8fc7\u8584\u8584\u7684\u6728\u7bb1\uff0c\u649e\u51fb\u819c\u5e76\u5bfc\u81f4\u5b83\u632f\u52a8\u3002\u819c\u7684\u8fd0\u52a8\u53d8\u5316\u4e86\u7535\u5bb9\uff06\uff0334;\u770b\u5230\uff06\uff0334;\u7531\u5929\u7ebf\uff0c\u5176\u53c8\u8c03\u5236\u4e86\u51fb\u4e2d\u7684\u65e0\u7ebf\u7535\u6ce2\u5e76\u4e14\u88ab\u7269\u8d28\u91cd\u65b0\u4f20\u8f93\u3002\u63a5\u6536\u5668\u89e3\u8c03\u4fe1\u53f7\uff0c\u4f7f\u5f97\u53ef\u4ee5\u542c\u5230\u9ea6\u514b\u98ce\u62fe\u53d6\u7684\u58f0\u97f3\uff0c\u5c31\u50cf\u666e\u901a\u7684\u65e0\u7ebf\u7535\u63a5\u6536\u5668\u89e3\u8c03\u65e0\u7ebf\u7535\u4fe1\u53f7\u5e76\u8f93\u51fa\u200b\u200b\u58f0\u97f3\u4e00\u6837\u3002\n Theremin\uff06\uff0339; S\u8bbe\u8ba1\u4f7f\u542c\u529b\u88c5\u7f6e\u975e\u5e38\u96be\u4ee5\u68c0\u6d4b\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u5c0f\uff0c\u6ca1\u6709\u7535\u6e90\u6216\u6709\u6e90\u7535\u5b50\u5143\u4ef6\uff0c\u5e76\u4e14\u9664\u975e\u5b83\u79ef\u6781\u7167\u5c04\u8fdc\u7a0b\u7167\u5c04\uff0c\u5426\u5219\u6ca1\u6709\u8f90\u5c04\u4efb\u4f55\u4fe1\u53f7\u3002\u8fd9\u4e9b\u76f8\u540c\u7684\u8bbe\u8ba1\u529f\u80fd\u4ee5\u53ca\u8bbe\u5907\u7684\u6574\u4f53\u7b80\u5355\u6027\uff0c\u4f7f\u5176\u975e\u5e38\u53ef\u9760\uff0c\u5e76\u7ed9\u4e88\u4e86\u53ef\u80fd\u65e0\u9650\u7684\u64cd\u4f5c\u5bff\u547d\u3002\n  \u8be5\u88c5\u7f6e\u5305\u62ec9\u82f1\u5bf8\u957f\uff0823\u5398\u7c73\uff09\u5355\u6781\u5929\u7ebf\uff08\u56db\u5206\u4e4b\u4e00\u6ce2\uff0c\u7528\u4e8e330\u5146\u8d6b\u5179[MHz]\u9891\u7387\uff0c\u4f46\u5b83\u4e5f\u80fd\u591f\u5145\u5f53\u534a\u6ce2[\u4ee5660 MHz]\u6216\u5168\u6ce2[AT 1320 MHz];\u8d26\u6237\u6709\u6240\u4e0d\u540c\u3002\u9274\u4e8e\u5f53\u65f6\u7684\u65e0\u7ebf\u7535\u6280\u672f\uff0c330 MHz\u7684\u9891\u7387\u5f88\u53ef\u80fd\uff09\u3002\u5b83\u4f7f\u7528\u76f4\u7ebf\u6746\uff0c\u901a\u8fc7\u5c06\u7edd\u7f18\u886c\u5957\u5f15\u5165\u8154\uff0c\u5176\u4e2d\u5b83\u7ec8\u6b62\u4e8e\u5f62\u6210\u7535\u5bb9\u5668\u7684\u4e00\u4e2a\u677f\u7684\u5706\u76d8\u3002\u8154\u662f\u9ad8Q\u5706\u5f62\u9540\u94f6\u94dc\uff06\uff0334;\u7f50\u5b50\uff06\uff0334;\uff0c\u5185\u5f84\u4e3a0.775\u82f1\u5bf8\uff0819.7\u6beb\u7c73\uff09\u548c\u7ea611/16\u82f1\u5bf8\uff0817.5\u6beb\u7c73\uff09\u957f\uff0c\u5177\u6709\u7ea610\u7eb3\u970d\u4ea8\u7684\u7535\u611f\u3002 [7]\u5176\u524d\u4fa7\u7528\u975e\u5e38\u8584\u7684\uff083\u5bc6\u8033\u621675\u5fae\u7c73\uff09\u548c\u8106\u5f31\u7684\u5bfc\u7535\u819c\u5173\u95ed\u3002\u5728\u8154\u7684\u4e2d\u95f4\u662f\u4e00\u4e2a\u8611\u83c7\u5f62\u7684\u5e73\u9762\u8c03\u8c10\u67f1\uff0c\u5176\u9876\u90e8\u53ef\u8c03\uff0c\u4f7f\u5f97\u53ef\u4ee5\u8bbe\u5b9a\u819c\u540e\u8ddd\u79bb;\u819c\u548c\u67f1\u5f62\u6210\u53ef\u53d8\u7535\u5bb9\u5668\u4f5c\u7528\u4f5c\u7528\u4f5c\u4e3a\u51b7\u51dd\u5668\u9ea6\u514b\u98ce\u5e76\u63d0\u4f9b\u632f\u5e45\u8c03\u5236\uff08AM\uff09\uff0c\u5177\u6709\u7528\u4e8e\u91cd\u65b0\u8f90\u5c04\u4fe1\u53f7\u7684\u5bc4\u751f\u9891\u7387\u8c03\u5236\uff08FM\uff09\u3002\u8be5\u67f1\u5b50\u5c06\u673a\u52a0\u5de5\u69fd\u548c\u5f84\u5411\u7ebf\u8fdb\u5165\u5176\u9762\u90e8\uff0c\u53ef\u80fd\u63d0\u4f9b\u7528\u4e8e\u7a7a\u6c14\u6d41\u52a8\u7684\u901a\u9053\uff0c\u4ee5\u51cf\u5c11\u819c\u7684\u6c14\u52a8\u963b\u5c3c\u3002\u5929\u7ebf\u901a\u8fc7\u5176\u76d8\u5f62\u7aef\u7535\u5bb9\u5730\u8fde\u63a5\u5230\u67f1\u3002\u5305\u62ec\u5929\u7ebf\u5728\u5185\u7684\u5355\u4f4d\u7684\u603b\u91cd\u91cf\u4e3a1.1\u76ce\u53f8\uff0831\u514b\uff09\u3002\n \u8bbe\u8ba1\u5929\u7ebf\u7684\u957f\u5ea6\u548c\u8154\u7684\u5c3a\u5bf8\u4ee5\u4f7f\u91cd\u65b0\u5e7f\u64ad\u4fe1\u53f7\u6210\u4e3a\u7167\u660e\u9891\u7387\u66f4\u9ad8\u7684\u8c10\u6ce2\u3002 \n\u539f\u88c5\u8bbe\u5907\u4f4d\u4e8e\u9e70\u7684\u5599\u4e0b\u65b9\u7684\u9e70\u5599\u4e0a\u5448\u73b0\u7ed9W.Verell Harriman\uff08\u89c1\u4e0b\u6587\uff09;\u8d26\u6237\u662f\u5426\u6709\u6240\u4e0d\u540c\uff0c\u662f\u5426\u5b54\u94bb\u5165\u5599\uff0c\u4ee5\u5141\u8bb8\u58f0\u6ce2\u5230\u8fbe\u819c\u3002\u5176\u4ed6\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u5599\u540e\u9762\u7684\u6728\u6750\u6beb\u4e0d\u6f02\u4eae\uff0c\u4f46\u8db3\u591f\u8584\u7684\u662f\u901a\u8fc7\u58f0\u97f3\uff0c\u6216\u8005\u7a7a\u6d1e\u7684\u7a7a\u95f4\u7528\u4f5c\u58f0\u97f3\u677f\uff0c\u5c06\u58f0\u97f3\u4ece\u623f\u95f4\u96c6\u4e2d\u5728\u9ea6\u514b\u98ce\u4e0a\u3002\n  \u5728\u82f1\u56fd\u5927\u4f7f\u9986\u7684\u82f1\u56fd\u65e0\u7ebf\u7535\u8fd0\u8425\u5546\u4e2d\uff0c\u57281951\u5e74\uff0c\u5728\u82f1\u56fd\u5927\u4f7f\u9986\u4e0a\u65e0\u610f\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e2a\u9519\u8bef\u7684\u5b58\u5728\uff0c\u4ed6\u5728\u82cf\u7ef4\u57c3\u5728\u5927\u4f7f\uff06\uff0339; S Office\uff06\uff0339; s\u529e\u516c\u5ba4\u7684\u5e7f\u64ad\u65e0\u7ebf\u7535\u6d41\u91cf\u6e20\u9053\u4e0a\u65e0\u4eba\u77e5\u7684\u7f8e\u56fd\u5bf9\u8bdd\u3002 [9]\u7f8e\u56fd\u56fd\u52a1\u9662\u5458\u5de5\u80fd\u591f\u4f7f\u7528\u5177\u6709\u7b80\u5355\u4e8c\u6781\u7ba1\u68c0\u6d4b\u5668/\u89e3\u8c03\u5668\u7684\u672a\u7ecf\u8fc7\u7684\u5bbd\u5e26\u63a5\u6536\u5668\u6765\u518d\u73b0\u7ed3\u679c\uff0c[10]\u7c7b\u4f3c\u4e8e\u4e00\u4e9b\u573a\u5f3a\u4eea\u8868\u3002\n 1951\u5e743\u6708\uff0c\u4e24\u4e2a\u989d\u5916\u7684\u56fd\u52a1\u9662\u96c7\u5458John W. Ford\u548cJoseph Bezjian\u6d3e\u5f80\u83ab\u65af\u79d1\uff0c\u8c03\u67e5\u82f1\u56fd\u548c\u52a0\u62ff\u5927\u5927\u4f7f\u9986\u5efa\u7b51\u7269\u7684\u5176\u4ed6\u7591\u4f3c\u866b\u5b50\u3002\u4ed6\u4eec\u8fdb\u884c\u4e86\u6280\u672f\u76d1\u6d4b\u67dc\u53f0\uff06\uff0334;\u626b\u63a0\uff06\uff0334;\u5927\u4f7f\u548c\uff0339; S Office\uff0c\u5728\u8bbe\u7f6e\u97f3\u9891\u53cd\u9988\u7684\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u4fe1\u53f7\u53d1\u751f\u5668\u548c\u63a5\u6536\u5668\uff0c\u5982\u679c\u623f\u95f4\u7684\u58f0\u97f3\u5728\u7ed9\u5b9a\u9891\u7387\u4e0a\u4f20\u8f93\u3002\u5728\u8fd9\u6b21\u626b\u63cf\u671f\u95f4\uff0cBezjian\u53d1\u73b0\u4e86\u96d5\u523b\u96d5\u523b\u4e2d\u7684\u88c5\u7f6e\u3002 [10]\uff1a2\n \u8054\u90a6\u8c03\u67e5\u5c40\u5373\u5c06\u5206\u6790\u8bbe\u5907\uff0c\u5e76\u8058\u8bf7\u6765\u81ea\u82f1\u56fd\u9a6c\u53ef\u5c3c\u516c\u53f8\u7684\u4eba\u4eec\u5e2e\u52a9\u5206\u6790\u3002 Marconi Technician Peter Wright\uff0c\u82f1\u56fd\u79d1\u5b66\u5bb6\u548c\u540e\u6765\u7684MI5\u8fdd\u53cd\u5b98\u5458\uff0c\u8bad\u7ec3\u4e86\u8c03\u67e5\u3002 [10]\u4ed6\u80fd\u591f\u4ee5800 MHz\u7684\u7167\u660e\u9891\u7387\u53ef\u9760\u5730\u5b8c\u6210\u5de5\u4f5c\u3002\u5df2\u7ecf\u53d1\u73b0\u8be5\u8bbe\u5907\u7684\u53d1\u7535\u673a\u88ab\u8c03\u6574\u4e3a1800 MHz\u3002\n \u4e8b\u60c5\u7684\u819c\u6781\u8584\uff0c\u5728\u7f8e\u56fd\u4eba\u5904\u7406\u8fc7\u7a0b\u4e2d\u53d7\u635f;\u8d56\u7279\u4e0d\u5f97\u4e0d\u53d6\u4ee3\u5b83\u3002\n \u8bbe\u5907\u7684\u7b80\u5355\u6027\u5728\u5206\u6790\u8fc7\u7a0b\u4e2d\u5f15\u8d77\u4e86\u4e00\u4e9b\u521d\u59cb\u6df7\u6dc6;\u9664\u4e86\u5176\u4e3b\u8981\u4e00\u4e2a\u4e4b\u5916\uff0c\u5929\u7ebf\u548c\u8c10\u632f\u5668\u8fd8\u5177\u6709\u82e5\u5e72\u8c10\u632f\u9891\u7387\uff0c\u5e76\u4e14\u8c03\u5236\u90e8\u5206\u662f\u5e45\u5ea6\u8c03\u5236\u548c\u9891\u7387\u8c03\u5236\u3002\u8be5\u56e2\u961f\u5728\u5047\u8bbe\u819c\u4e0e\u8c03\u8c10\u67f1\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u4ee5\u589e\u52a0\u5171\u632f\u65f6\uff0c\u8be5\u56e2\u961f\u4e5f\u4e22\u5931\u4e86\u4e00\u4e9b\u65f6\u95f4\u3002\n  Wright\uff06\uff0339;\u8003\u8bd5\u5bfc\u81f4\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u82f1\u56fd\u7cfb\u7edf\u4ee3\u53f7\uff0c\u5728\u6574\u4e2a20\u4e16\u7eaa50\u5e74\u4ee3\u4f7f\u7528\u7684\u82f1\u56fd\u4eba\uff0c\u7f8e\u56fd\u4eba\uff0c\u52a0\u62ff\u5927\u4eba\u548c\u6fb3\u5927\u5229\u4e9a\u4eba\u4f7f\u7528\u3002 \n\u8fd8\u6709\u540e\u9762\u7684\u88c5\u7f6e\u6a21\u578b\uff0c\u4e00\u4e9b\u5185\u90e8\u7ed3\u6784\u66f4\u590d\u6742\uff08\u4e2d\u5fc3\u67f1\u5728\u819c\u4e0a\u8fde\u63a5\u5230\u87ba\u65cb\u4e0b\uff0c\u53ef\u80fd\u589e\u52a0Q\uff09\u3002\u6700\u5927\u5316Q\u7cfb\u6570\u662f\u5de5\u7a0b\u4f18\u5148\u7ea7\u4e4b\u4e00\uff0c\u56e0\u4e3a\u8fd9\u4f7f\u5f97\u5bf9\u7167\u660e\u4fe1\u53f7\u9891\u7387\u7684\u9009\u62e9\u6027\u66f4\u9ad8\uff0c\u56e0\u6b64\u66f4\u9ad8\u7684\u64cd\u4f5c\u8ddd\u79bb\u4ee5\u53ca\u66f4\u9ad8\u7684\u58f0\u5b66\u7075\u654f\u5ea6\u3002 [10]\n CIA\u5728\u8377\u5170Noordwijk\u7684\u8377\u5170\u96f7\u8fbe\u5b9e\u9a8c\u5ba4\uff08NRP\uff09\u4e2d\u7684\u79d8\u5bc6\u7814\u7a76\u8ba1\u5212\u4e8e1954\u5e74\u5230\u5927\u7ea61967\u5e74\uff0c\u6839\u636e\u5177\u6709\u63a2\u6d4b\u5668\u4e8c\u6781\u7ba1\u548c\u5c0f\u578b\u9ea6\u514b\u98ce\u653e\u5927\u5668\u7684\u5076\u6781\u5929\u7ebf\u521b\u5efa\u81ea\u5df1\u7684\u9690\u853d\u8046\u542c\u8bbe\u5907\u3002\u8be5\u5668\u4ef6\u662f\u5728\u7b80\u5355\u7684\u6905\u5b50\u7814\u7a76\u5408\u540c\u4e0b\u5f00\u53d1\u7684[11]\uff0c\u5e76\u4e14\u88ab\u79f0\u4e3a\u7b80\u5355\u7684\u6905\u5b50\u6807\u8bb0I\uff081955\uff09\uff0cMark II\uff081956\uff09\uff0cMark III\uff081958\uff09\uff0cMark IV\uff081961\uff09\u548cMark V\uff081962\uff09\u3002 [12]\u5c3d\u7ba1\u6700\u521d\u4ed6\u4eec\u65e0\u6cd5\u83b7\u5f97\u8c10\u632f\u8154\u8bdd\u53ef\u4ee5\u53ef\u9760\u5730\u5de5\u4f5c\uff0c\u4f46\u7531\u4e8e\u7814\u7a76\uff0c\u4e3a\u4e2d\u592e\u60c5\u62a5\u5c40\u5f00\u53d1\u4e86\u51e0\u79cd\u6d89\u53ca\u88ab\u52a8\u5143\u7d20\uff08PES\uff09\u7684\u4ea7\u54c1\u3002 1965\u5e74\uff0cNRP\u7ec8\u4e8e\u5f97\u5230\u4e86\u4e00\u4e2a\u53ef\u9760\u7684\u8109\u51b2\u8154\u8c10\u632f\u5668\uff0c\u4f46\u5230\u90a3\u65f6CIA\u4e0d\u518d\u5bf9\u88ab\u52a8\u88c5\u7f6e\u611f\u5174\u8da3\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6240\u6d89\u53ca\u7684\u9ad8\u6c34\u5e73\u7684RF\u80fd\u91cf\u3002 [13]\n 1960\u5e745\u6708\uff0c\u5728\u8054\u5408\u56fd\u5b89\u5168\u7406\u4e8b\u4f1a\u7684\u7b2c\u56db\u5929\u4f1a\u8bae\u4e0a\u63d0\u5230\u4e86\u8fd9\u4ef6\u4e8b\uff0c\u7531\u82cf\u8054\u4e8e1960\u5e74\u7684U-2\u4e8b\u4ef6\u53ec\u5f00\uff0c\u7f8e\u56fd\u95f4\u8c0d\u98de\u673a\u5df2\u8fdb\u5165\u5176\u9886\u571f\u5e76\u88ab\u51fb\u4e2d\u3002\u7f8e\u56fd\u5927\u4f7fHenry Cabot Lodge Jr.\u5c55\u793a\u4e86\u5de8\u5927\u7684\u5370\u7ae0\u4e2d\u7684\u55e1\u55e1\u58f0\u88c5\u7f6e\uff0c\u4ee5\u8bf4\u660e\u4e24\u56fd\u4e4b\u95f4\u7684\u95f4\u8c0d\u4e8b\u4ef6\u662f\u76f8\u4e92\u7684\uff0c\u5e76\u4e14\u636e\u79f0Nikita Khrushchev\u5c06\u8fd9\u4e00\u7279\u6b8a\u4e8b\u4ef6\u653e\u5927\u4f5c\u4e3a\u4e2d\u6b621960\u5e74\u5df4\u9ece\u5cf0\u4f1a\u7684\u501f\u53e3\u3002 [14] [15]\n    ^ hacking\u66b4\u9732\u7684Linux\uff1aLinux\u5b89\u5168\u79d8\u5bc6\uff06amp;\u89e3\u51b3\u65b9\u6848\uff08\u7b2c\u4e09\u7f16\u8f91\uff09\u3002\u9ea6\u683c\u52b3\u5c71\u5965\u65af\u672c\u5a92\u4f53\u3002 2008. p\u3002 298. ISBN 978-0-07-226257-5\u3002\n ^ Harford\uff0c\u8482\u59c6\uff082019\u5e748\u670821\u65e5\uff09\u3002 \uff06\uff0334;\u6211\u4eec\u6240\u6709\u4f7f\u7528\u7684\u51b7\u6218\u95f4\u8c0d\u6280\u672f\uff06\uff0334;\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u65b0\u95fb \u3002\n   ^\u4e54\u6cbbF. Kennan\uff0cMemoirs\uff0c1950-1963\uff0c\u7b2cII\u5377\uff08Little\uff0cBrown\uff06amp; Co.\uff0c1972\uff09\uff0cPP\u3002155,156\n ^ Poorglove\uff0cS. David\uff081966\u5e74\uff09\u3002 \uff06\uff0334;\u4f1f\u5927\u7684\u6d77\u8c79\u866b\uff06\uff0334;\u7535\u5b50\u8bbe\u8ba1\u3002\u6d77\u767b\u51fa\u7248\u516c\u53f8\u3002 14\uff0814-17\uff09\uff1a35\u3002 \n^\u68d5\u8272\uff08\uff1f\uff09\uff0c\u7f57\u4f2f\u7279\u3002 M.\uff081967\uff09\u3002 \uff06\uff0334;\u7535\u5b50\u70df\u6a90\uff06\uff0334\u3002 \u7535\u5b50\u4e16\u754c\u3002 Ziff-Davis\u51fa\u7248\u516c\u53f8\u3002 77\uff083-6\uff09\uff1a23\u3002  ^ a b c d murray\uff0c\u51ef\u6587\u3002 \uff06\uff0334;\u4f1f\u5927\u7684\u6d77\u8c79\u866b\u5b50\u6545\u4e8b\uff06\uff0334\u3002 \u8fdd\u53cd\u8d23\u4efb\u3002 \u8fdd\u53cd\u8d23\u4efb\u3002 2020\u5e7412\u670812\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002  ^\u8054\u5408\u56fd\u5b89\u5168\u7406\u4e8b\u4f1aVerbatim\u62a5\u544a860. S / PV.860 Page 15. 1960\u5e745\u670826\u65e5\u3002\u68c0\u7d222008-08-29\u3002  ^ Maurits Martijn\uff082015\u5e749\u670824\u65e5\uff09\u3002 \uff06\uff0334;\u64cd\u4f5c\u6276\u624b\u6905\uff1a\u4e00\u5bb6\u5c0f\u578b\u8377\u5170\u516c\u53f8\u5982\u4f55\u5e2e\u52a9CIA\u542c\u4fc4\u7f57\u65af\u4eba\u548c\uff0334; \uff08\u5728\u8377\u5170\uff09\u3002 \u901a\u8baf\u5458\u3002  \u82cf\u8054\u5982\u4f55\u5728\u7f8e\u56fd\u5927\u4f7f\u9986\u4e3e\u529e7\u5e74\uff0c\u54c8\u514b\u8fbe\uff0c\u4e9a\u5f53\u6cd5\u6bd4\u5965\uff0c2015\u5e7412\u6708 ", "note_en": "Jump to navigation  Jump to search  The Thing, also known as  the Great Seal bug, was one of the first  covert listening devices (or &#34;bugs&#34;) to use passive techniques to transmit an audio signal. It was concealed inside a gift given by the  Soviet Union to  W. Averell Harriman, the  United States Ambassador to the Soviet Union, on August 4, 1945. Because it was passive, needing electromagnetic energy from an outside source to become energized and active, it is considered a predecessor of radio-frequency identification ( RFID) technology.  [1]  [2]  [3]\n   The Thing was designed by Soviet Russian inventor  L\u00e9on Theremin,  [4] best-known for his invention of the  theremin, an electronic musical instrument.\n  The device, embedded in a carved wooden plaque of the  Great Seal of the United States, was used by the Soviets to spy on the US. On August 4, 1945, several weeks before the end of  World War II, a delegation from the  Young Pioneer organization of the Soviet Union presented the bugged carving to Ambassador Harriman, as a &#34;gesture of friendship&#34; to the Soviet Union&#39;s  war ally. It hung in the ambassador&#39;s  Moscow residential study for seven years, until it was exposed in 1952 during the tenure of Ambassador  George F. Kennan.  [5]\n   The Thing consisted of a tiny capacitive membrane connected to a small  quarter-wavelength  antenna; it had no power supply or  active electronic components. The device, a passive  cavity resonator, became active only when a  radio signal of the correct frequency was sent to the device from an external transmitter. This is referred to in NSA parlance as &#34;illuminating&#34; a passive device. Sound waves (from voices inside the ambassador&#39;s office) passed through the thin wood case, striking the membrane and causing it to vibrate. The movement of the membrane varied the  capacitance &#34;seen&#34; by the antenna, which in turn  modulated the radio waves that struck and were re-transmitted by the Thing. A receiver  demodulated the signal so that sound picked up by the microphone could be heard, just as an ordinary radio receiver demodulates radio signals and outputs sound.\n Theremin&#39;s design made the listening device very difficult to detect, because it was very small, had no power supply or active electronic components, and did not radiate any signal unless it was actively being irradiated remotely. These same design features, along with the overall simplicity of the device, made it very reliable and gave it a potentially unlimited operational life.\n  The device consisted of a 9-inch-long (23\u00a0cm)  monopole antenna (quarter-wave for 330  megahertz [MHz] frequencies, but it was also able to act as half-wave [at 660 MHz] or full-wave [at 1320 MHz]; the accounts differ. Given the radio technology of the time, the frequency of  330 MHz is most likely).  [6] It used a straight rod, led through an insulating bushing into a cavity, where it was terminated with a round disc that formed one plate of a capacitor. The cavity was a  high-Q round silver-plated copper &#34;can&#34;, with the internal diameter of 0.775 in (19.7\u00a0mm) and about 11/16 in (17.5\u00a0mm) long, with  inductance of about 10  nanohenry.  [7] Its front side was closed with a very thin (3  mil, or 75 micrometers) and fragile conductive membrane. In the middle of the cavity was a mushroom-shaped flat-faced tuning post, with its top adjustable to make it possible to set the membrane-post distance; the membrane and the post formed a variable capacitor acting as a  condenser microphone and providing  amplitude modulation (AM), with parasitic  frequency modulation (FM) for the re-radiated signal. The post had machined grooves and radial lines into its face, probably to provide channels for air flow to reduce pneumatic damping of the membrane. The antenna was capacitively coupled to the post via its disc-shaped end. The total weight of the unit, including the antenna, was 1.1 ounces (31 grams).\n The length of the antenna and the dimensions of the cavity were engineered in order to make the re-broadcast signal a higher  harmonic of the illuminating frequency.\n The original device was located with the can under the beak of the eagle on the Great Seal presented to W. Averell Harriman (see below); accounts differ on whether holes were drilled into the beak to allow sound waves to reach the membrane. Other sources say the wood behind the beak was undrilled but thin enough to pass the sound, or that the hollowed space acted like a  soundboard to concentrate the sound from the room onto the microphone.\n  The existence of the bug was discovered accidentally in 1951 by a British radio operator at the British embassy who overheard American conversations on an open radio Soviet air force radio traffic channel as the Soviets were beaming radio waves at the ambassador&#39;s office.  [9] An American State Department employee was then able to reproduce the results using an untuned wideband receiver with a simple diode detector/demodulator,  [10] similar to some field strength meters.\n Two additional State Department employees, John W. Ford and Joseph Bezjian, were sent to Moscow in March 1951 to investigate this and other suspected bugs in the British and Canadian embassy buildings. They conducted a  technical surveillance counter-measures &#34;sweep&#34; of the ambassador&#39;s office, using a  signal generator and a receiver in a setup that generates  audio feedback (&#34;howl&#34;) if the sound from the room is transmitted on a given frequency. During this sweep, Bezjian found the device in the Great Seal carving.  [10] : 2\n The  Federal Bureau of Investigation set about to analyze the device, and hired people from the British  Marconi Company to help with the analysis. Marconi technician  Peter Wright, a British scientist and later  MI5  counterintelligence officer, ran the investigation.  [10] He was able to get The Thing working reliably with an illuminating frequency of 800\u00a0MHz. The generator which had discovered the device was tuned to 1800\u00a0MHz.\n The membrane of the Thing was extremely thin, and was damaged during handling by the Americans; Wright had to replace it.\n The simplicity of the device caused some initial confusion during its analysis; the antenna and resonator had several resonant frequencies in addition to its main one, and the modulation was partially both amplitude modulated and frequency modulated. The team also lost some time on an assumption that the distance between the membrane and the tuning post needed to be increased to increase resonance.\n  Wright&#39;s examination led to development of a similar British system codenamed SATYR, used throughout the 1950s by the British, Americans, Canadians and Australians.\n There were later models of the device, some with more complex internal structure (the center post under the membrane attached to a helix, probably to increase  Q). Maximizing the Q-factor was one of the engineering priorities, as this allowed higher selectivity to the illuminating signal frequency, and therefore higher operating distance and also higher acoustic sensitivity.  [10]\n The  CIA ran a secret research program at the Dutch Radar Laboratory (NRP) in  Noordwijk in the  Netherlands from 1954 to approximately 1967 to create its own covert listening devices based on a  dipole antenna with a  detector diode and a small microphone amplifier. The devices were developed under the  Easy Chair research contract  [11] and were known as Easy Chair Mark I (1955), Mark II (1956), Mark III (1958), Mark IV (1961) and Mark V (1962).  [12] Although initially they could not get the resonant cavity microphone to work reliably, several products involving Passive Elements (PEs) were developed for the CIA as a result of the research. In 1965, the NRP finally got a reliably working pulsed cavity resonator, but by that time the CIA was no longer interested in passive devices, largely because of the high levels of RF energy involved.  [13]\n In May 1960, The Thing was mentioned on the fourth day of meetings in the  United Nations Security Council, convened by the Soviet Union over the  1960 U-2 incident where a U.S. spy plane had entered their territory and been shot down. The U.S. ambassador  Henry Cabot Lodge Jr. showed off the bugging device in the Great Seal to illustrate that spying incidents between the two nations were mutual and to allege that  Nikita Khrushchev had magnified this particular incident as a pretext to abort the  1960 Paris Summit.  [14]  [15]\n    ^      Hacking Exposed Linux: Linux Security Secrets &amp; Solutions (third\u00a0ed.). McGraw-Hill Osborne Media. 2008. p.\u00a0 298.  ISBN\u00a0  978-0-07-226257-5.\n ^    Harford, Tim (21 August 2019).  &#34;The Cold War spy technology which we all use&#34;. BBC News .\n   ^  George F. Kennan, Memoirs, 1950\u20131963, Volume II (Little, Brown &amp; Co., 1972), pp. 155, 156\n ^    Pursglove, S. David (1966).  &#34;Great Seal Bug&#34;.  Electronic Design. Hayden Publishing Company.  14 (14\u201317): 35 .\n ^    Brown(?), Robert. M. (1967).  &#34;Electronic Eavesdroping&#34;.  Electronics World.  Ziff-Davis Publishing Company.  77 (3\u20136): 23 .\n   ^     a     b     c     d    Murray, Kevin.  &#34;THE GREAT SEAL BUG STORY&#34;.  CounterEspionage. counterespionage.com. Archived from  the original on December 12, 2020 .\n    ^   United Nations Security Council  Verbatim Report  860.   S/PV.860 page 15. 26 May 1960. Retrieved 2008-08-29.\n ^    Maurits Martijn (24 September 2015).  &#34;Operatie Leunstoel: hoe een klein Nederlands bedrijf de CIA hielp om de Russen af te luisteren&#34; (in Dutch). De Correspondent.\n     How the Soviet Union spied on the US embassy for 7 years, Hackaday, Adam Fabio, December 2015", "posttime": "2021-06-30 00:39:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u542c\u529b,listening,\u8bbe\u5907", "title": "\u4e8b\u60c5\uff08\u542c\u529b\u8bbe\u5907\uff09 ", "title_en": "The Thing (Listening Device)", "transed": 1, "url": "https://en.wikipedia.org/wiki/The_Thing_(listening_device)", "via": "", "real_tags": ["\u542c\u529b", "listening", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "fd052027e7ca54e52026111560cb9809.jpg", "infoid": 1068649, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4ec0\u4e48\u5168\u56fd\u5404\u5730\u7684\u4eba\u592a\u5bb3\u6015\u516c\u5f00\u627f\u8ba4\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u7f57\u5bbeD'Angelo\u7684\u201c\u767d\u8106\u201d\u662f\u80e1\u8bf4\u516b\u9053\u5417\uff1f\u6216\u8005IBRAM KENDI\u7684\u201c\u6297\u62c9\u79d1\u4e3b\u4e49\u201d\u7248\u672c\u662f\u6765\u81ea\u79cd\u65cf\u4e3b\u4e49\u7684\u89e3\u91ca\u7684\u6700\u8fdc\u7684\u4e1c\u897f\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u5bb3\u6015\u652f\u6301\u4ee5\u8272\u5217\u5b58\u5728\u7684\u6743\u5229\uff1f\u751a\u81f3\u8c34\u8d23\u6297\u6897\u963b\uff1f\u6216\u634d\u536b\u90a3\u4e9b\u4e0d\u516c\u5e73\u5730\u8bfd\u8c24\u4e0a\u8ff0\u4efb\u4f55\u4eba\u7684\u4eba\uff1f\n   \u5f53\u6279\u5224\u7406\u8bba\u53d6\u4ee3\u6279\u5224\u6027\u601d\u7ef4\u65f6\uff0c\u5b83\u4fb5\u8680\u9053\u5fb7\uff0c\u964d\u4f4e\u62a4\u7406\uff0c\u5e76\u521b\u9020\u654c\u5bf9\u73af\u5883\u3002\u6700\u8fd1\u5bf9\u65af\u5766\u798f\u5927\u5b66\u7684\u8bc9\u8bbc\u8bf4\u660e\u4e86\u5982\u4f55\u3002\n \u5173\u4e8e\u4e0d\u5e73\u7b49\uff0c\u6b67\u89c6\uff0c\u504f\u89c1\u548c\u6b63\u4e49\u7684\u5408\u6cd5\u62c5\u5fe7\u662f\u666e\u904d\u7684\uff0c\u5e76\u4e14\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u65e0\u8bba\u6709\u4eba\u5bf9\u4e0a\u8ff0\u547d\u9898\u7684\u601d\u8003\uff0c\u6ca1\u6709\u4eba\u5e94\u8be5\u62c5\u5fc3\u8868\u8fbe\u4ed6\u4eec\u3002\u4f46\u662f\uff0c\u5728\u7f8e\u56fd\u4eab\u53d7\u7684\u81ea\u7531\u8868\u8fbe\u6587\u5316\u662f\u901a\u8fc7\u7efc\u5408\uff0c\u90aa\u6559\u7684\u601d\u60f3\u6539\u53d8\u4e86\uff0c\u8fd9\u5177\u6709\u51e0\u4e4e\u9b54\u6cd5\u80fd\u529b\uff0c\u4ee5\u521b\u9020\u6d41\u884c\u7684\u89e3\u91ca\u4e0d\u53d7\u6b22\u8fce\uff0c\u4ee5\u8d2c\u4f4e\u3002\u5b83\u4f3c\u4e4e\u5728\u5404\u4e2a\u9886\u57df\u65bd\u653e\u4e86\u4e00\u4e2a\u9690\u55bb\u7684\u5492\u8bed\uff0c\u5305\u62ec\u6559\u80b2\uff0c\u5a92\u4f53\uff0c\u65b0\u95fb\uff0c\u6280\u672f\uff0c\u751a\u81f3\u5fc3\u7406\u6cbb\u7597\u548c\u7cbe\u795e\u75c5\u5b66\u3002\n  \u5efa\u7acb\u73b0\u5728\u7684\u6d41\u884c\u672f\u8bed\u201c\u9192\u6765\u201d\uff0c\u6211\u6765\u7535\u8fd9\u4e2a\u610f\u8bc6\u5f62\u6001\uff0cW okecraft\u3002\u6211\u4f7f\u7528\u4e00\u4e2a\u5492\u8bed\u7684\u9690\u55bb\uff0c\u56e0\u4e3a\u4fe1\u5f92\u662f\u4f9d\u8d56\u903b\u8f91\uff0c\u7406\u6027\u548c\u79d1\u5b66\u7684\u9886\u57df\u7684\u4eba\uff0c\u4f46\u4ecd\u7136\u4f3c\u4e4e\u65e0\u6cd5\u770b\u5230\u8bb8\u591a\u6c83\u79d1\u592b\uff06\uff0339;\u5305\u62ec\u79cd\u65cf\u4e3b\u4e49\u548c\u6297\u62c9\u79d1\u4e3b\u4e49\u7684\u65b0\u5b9a\u4e49 - \u662f\u592a\u656c\u7684\u800c\u4e14\u5176\u8bb8\u591a\u57fa\u672c\u6982\u5ff5\uff08\u4f8b\u5982\u767d\u8106\u6027\uff0c\u767d\u8272\u7279\u6743\u548c\u5fae\u4e0d\u8db3\u9053\uff09\u662f\u4e0d\u5408\u4f53\u7684\u3002\n  \u79d1\u5b66\u8981\u6c42\u5176\u672f\u8bed\u5177\u6709\u7ebf\u6027\u5b9a\u4e49\u53ca\u5176\u623f\u5c4b\u624d\u80fd\u4f2a\u9020 - \u6362\u53e5\u8bdd\u8bf4\uff0c\u5fc5\u987b\u6709\u6761\u4ef6\uff0c\u5176\u4e2d\u4e00\u4e2a\u547d\u9898\u53ef\u4ee5\u8bc1\u660e\u9519\u8bef\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u601d\u60f3\u697c\u5b87\u4e0d\u9700\u8981\u4f2a\u9020\u6027\u3002\u4f8b\u5982\uff0c\u79c3\u53d1\u88ab\u5b9a\u4e49\u4e3a\u5168\u90e8\u6216\u90e8\u5206\u7f3a\u4e4f\u5934\u53d1\u7684\u5934\u76ae\u3002\u4e00\u4e2a\u4eba\u662f\u79c3\u5934\u7684\u903b\u8f91\u547d\u9898\u53ef\u4ee5\u901a\u8fc7\u5934\u53d1\u7684\u5934\u90e8\u5b58\u5728\u4f2a\u9020\uff08\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u9519\u8bef\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u610f\u8bc6\u5f62\u6001\u53ef\u80fd\u5c06\u79c3\u5934\u91cd\u65b0\u5b9a\u4e49\u4e3a\u201c\u5173\u4e8e\u4ea7\u751f\u548c\u6b63\u5e38\u5316\u79c3\u5934\u7684\u79c3\u5934\u7684\u60f3\u6cd5\u201d\u3002\u4fe1\u5f92\u53ef\u80fd\u58f0\u79f0\u6240\u6709\u7684\u5934\u90fd\u662f\u79c3\u5934\uff0c\u65e0\u8bba\u6709\u957f\u8c6a\u534e\u7684\u5934\u53d1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5934\u53d1\u53ef\u80fd\u662f\u62d2\u7edd\u63a5\u53d7\u4e00\u4e2a\uff06\uff0339\u7684\u79c3\u5934\u7684\u8bc1\u636e\u3002\n  \u5c3d\u7ba1\u6709\u4e0d\u5408\u7406\u7684\u547d\u9898\uff0c\u51ed\u501f\u8ba4\u77e5\u626d\u66f2\u7684\u6c83\u79d1\u592b\uff0c\u6b63\u5728\u8fdb\u5165\u5fc3\u7406\u79d1\u5b66\u548c\u4e34\u5e8a\u5b9e\u8df5\u3002\u8fd9\u662f\u8150\u8d25\u7684\u80fd\u529b\u548c\u4fb5\u8680\u804c\u4e1a\u9053\u5fb7\u3002\n \u4f8b\u5982\uff0c\u57282018\u5e74\uff0cAPA\u5236\u4f5c\u4e86\u5b83\u7684\u7b2c\u4e00\u7ec4\u201c\u4e0e\u7537\u5b50\u548c\u7537\u5b50\u7684\u5fc3\u7406\u5b9e\u8df5\u6307\u5357\u201d\uff0c\u5176\u4e2d\u8ba8\u538c\u201c\u4f20\u7edf\u9633\u521a\u5730\u201d\u662f\u201c\u6709\u5bb3\u7684\u201d\u3002 APA\u540e\u6765\u6f84\u6e05\u8bf4\uff0c\u6240\u8c13\u7684\u4f24\u5bb3\u662f\u7531\u201c\u6781\u7aef\u9648\u89c4\u5b9a\u578b\u884c\u4e3a\u201d\u4ea7\u751f\u7684\u5371\u5bb3\u3002\u4f46\u8fd9\u4ec5\u8bf4\u660e\u4e86\u8fd9\u4e2a\u547d\u9898\u7684\u4e0d\u660e\u6027\u6027\u8d28\u3002 \uff08\u201c\u4f20\u7edf\u7537\u6027\u6c14\u8d28\u201d\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u4ee5\u53ca\u201c\u6781\u7aef\u9648\u89c4\u5b9a\u578b\u884c\u4e3a\u201d\u7684\u5b9a\u4e49\uff1f\uff09 \n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6307\u5bfc\u65b9\u9488\u547c\u5401\u4e34\u5e8a\u533b\u751f\u5728\u4ed6\u4eec\u7684\u7537\u6027\u5ba2\u6237\u4e2d\u53d1\u5c55\u201c\u5bf9[\u7537\u6027]\u7279\u6743\u7684\u8ba4\u8bc6\u4ee5\u53ca\u7ef4\u6301\u7236\u6743\u5236\u6743\u529b\u7684\u4fe1\u4ef0\u548c\u884c\u4e3a\u7684\u6709\u5bb3\u5f71\u54cd\u3002\u201d\u6211\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u4e0d\u4ec5\u662f\u8fd9\u79cd\u53cd\u9a73 - \u56e0\u4e3a\u5ba2\u6237\u9700\u8981\u76f8\u4fe1\u4ed6\u4eec\u7684\u4f1a\u8bae\u4e0d\u4f1a\u81f4\u529b\u4e8e\u4ed6\u4eec\u7684\u6cbb\u7597\u5e08\u7684\u610f\u8bc6\u5f62\u6001 - \u4f46\u662f\u6307\u5bfc\u65b9\u9488\u8fdd\u53cd\u4e86APA\u81ea\u5df1\u7684\u9053\u5fb7\u8981\u6c42\uff0c\u5305\u62ec\u4e34\u5e8a\u5fc3\u7406\u5b66\u5bb6\u201c\u5c0a\u91cd\u5c0a\u4e25\u548c\u4ef7\u503c\u6240\u6709\u4eba\u201c\u5e76\u5c0a\u91cd\u6bcf\u4e2a\u4eba\u7684\u201d\u81ea\u51b3\u6743\u201c\u3002\n  \u73b0\u5728\u65af\u5766\u798f\u5927\u5b66\u7684\u54a8\u8be2\u548c\u5fc3\u7406\u670d\u52a1\uff08\u5e3d\u5b50\uff09\u6765\u81eaWokecraft\uff06\uff0339; s\u5492\u8bed\u3002\u5f53CAPS\u53d1\u8d77\u591a\u6837\u6027\uff0c\u516c\u5e73\u548c\u7eb3\u5165\u7a0b\u5e8f\u65f6\uff0c\u767d\u8106\u6027\u662f\u6240\u9009\u7684\u4e66\u7c4d\uff0c\u4eba\u5458\u88ab\u9694\u79bb\u6210\u201c\u4eb2\u548c\u529b\u7ec4\u201d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5206\u522b\u4e3e\u884c\u4e86\u3002\u90a3\u4e9b\u4e0d\u9002\u5408\u6c83\u79d1\u592b\u7684\u4eba\uff06\uff0339;\u5982\u679c\u65e0\u8bba\u662f\u88ab\u8bc6\u522b\u4e3a\u201c\u767d\u8272\u201d\u6216\u611f\u53d7\u5230\u7684\u90a3\u6837\uff0c\u90a3\u4e9b\u4e0d\u9002\u5408\u6c83\u79d1\u592b\u7684\u975e\u767d\u8272\u7c7b\u522b\u6240\u9700\u7684\u975e\u767d\u8272\u7c7b\u522b\u201c\u4eb2\u548c\u529b\u3002\u201d\n   \u72b9\u592a\u7cbe\u795e\u79d1\u533b\u751f\u7f57\u6069\u00b7\u963f\u5c14\u5e03\u51ef\u5c14\uff0cMD\u548c\u72b9\u592a\u5fc3\u7406\u6cbb\u7597\u5e08\u548c\u996e\u98df\u969c\u788d\u4e13\u5bb6Shilea Levin\u63a8\u56de\uff0c\u4f46\u662f\u4e0e\u53cd\u4e49\u77f3\u5934\uff08\u72b9\u592a\u4eba\uff09\u9047\u5230\u4e86\u72b9\u592a\u4eba\uff0c\u51ed\u501f\u4ed6\u4eec\u7684\u8d22\u5bcc\u548c\u7279\u6743\uff0c\u8eb2\u5728\u4ed6\u4eec\u7684\u201c\u767d\u8272\u201d\u8eab\u4efd\u540e\u9762\u3002\n \u5728\u5305\u62ec\u79cd\u65cf\u4e3b\u4e49\u548c\u53cd\u4e49\u7684\u56fe\u50cf\u4e2d\u5305\u542b\u7684zoombombing\u4e4b\u540e\uff0cAlbucher\u548cLevin\u88ab\u544a\u77e5\u53ea\u6709\u79cd\u65cf\u4e3b\u4e49\uff0c\u800c\u4e0d\u662f\u53cd\u72b9\u592a\u4e3b\u4e49\u503c\u5f97\u6765\u3002\u5f53\u5965\u5c14\u798f\u5f7b\u4eec\u62d2\u7edd\u6982\u5ff5\u65f6\uff0c\u5728\u8fd9\u4e9b\u4f1a\u8bae\u4e2d\u4e0d\u5e94\u8ba8\u8bba\u53cd\u72b9\u592a\u4e3b\u4e49\uff0c\u5de5\u4f5c\u4eba\u5458\u6307\u8d23\u4ed6\u6210\u4e3a\u4e00\u4e2a\u201c\u767d\u8272\u7279\u6743\u201d\u7684\u4eba\uff0c\u8bd5\u56fe\u4ece\u53cd\u9ed1\u8272\u79cd\u65cf\u4e3b\u4e49\u4e2d\u62c9\u7126\u70b9\u3002\u5373\u4f7f\u6821\u56ed\u5185\u51fa\u73b0\u53cd\u4e49\u77f3\u82f1\u6d82\u9e26\uff0c\u4ed6\u4eec\u7684\u8ba8\u8bba\u6297\u6e83\u75a1\u7684\u8981\u6c42\u4e5f\u88ab\u5426\u8ba4\u3002\n  \u5bf9\u4e8e\u5bf9Diangelo\u7684\u4e89\u8bba\u8868\u793a\u62c5\u5fe7\uff0c\u5e0c\u671b\u8ba8\u8bba\u4e00\u4e2a\u4eba\u7684\u7956\u5148\u7684\u6597\u4e89\u4e3a\u79cd\u65cf\u4e3b\u4e49\u505a\u51fa\u8d21\u732e\uff0c\u5e76\u4e14\u662f\u767d\u8106\u5f31\u6027\u7684\u8bc1\u636e\uff0cLevin\u88ab\u6807\u8bb0\u4e3a\u201c\u72b9\u592a\u4eba\uff0c\u767d\u4eba\uff0c\u5373\u5de8\u5927\u7684\u7279\u6743\u548c\u6743\u529b\u201d\uff0c\u4ed6\u5141\u8bb8\u5979\u201c\u8106\u5f31\u201d\u6765\u9632\u6b62\u5979\u4ece\u201c\u771f\u6b63\u7684\u81ea\u6211\u53cd\u601d\u201d\u3002\n  \u83b1\u6587\u7684\u4e24\u4e2a\u5927\u5c60\u6740\u5e78\u5b58\u8005\u7684\u5b69\u5b50\u5bf9\u88ab\u5265\u593a\u4e86\u81ea\u5df1\u7684\u6743\u5229\u7684\u7ecf\u9a8c\u5177\u6709\u5f3a\u70c8\u800c\u6d88\u6781\u7684\u53cd\u5e94\u3002\u572820\u4e16\u7eaa\uff0c\u7531\u4e8e\u975e\u72b9\u592a\u4eba\u88ab\u5f3a\u5236\u88ab\u5f52\u7c7b\u4e3a\u975e\u767d\u8272\uff0c\u201c\u6211\u7684\u4eba\u6c11\u88ab\u8c0b\u6740\uff0c\u56e0\u4e3a\u6211\u4eec\u88ab\u89c6\u4e3a\u767d\u4eba\u79cd\u65cf\u7684\u6c61\u67d3\u7269\uff0c\u201d\u5979\u8bf4\u3002\u572821\u4e16\u7eaa\uff0c\u5f53\u767d\u4eba\u65f6\uff0c\u73b0\u5728\u662f\u9053\u5fb7\u6c61\u67d3\u7684\u7c7b\u522b\uff0c\u65af\u5766\u798f\u7684\u975e\u72b9\u592a\u4eba\u88ab\u5f3a\u5236\u5730\u5206\u7c7b\u4e3a\u767d\u8272\u3002\n  \u4e0e\u6b64\u540c\u65f6\uff0c\u53cd\u72b9\u592a\u4e3b\u4e49\u60c5\u7eea\u548c\u53cd\u72b9\u592a\u4eba\u7684\u4ec7\u6068\u72af\u7f6a\u589e\u52a0\uff0c\u800c\u4e0d\u662f\u65af\u5766\u798f\u7cbe\u795e\u536b\u751f\u4e13\u4e1a\u4eba\u5458\uff0c\u800c\u4e0d\u662f\u51c6\u5907\u5bf9\u5f85\u72b9\u592a\u5b66\u751f\u4e89\u53d6\u8fd9\u79cd\u73b0\u5b9e\u7684\u72b9\u592a\u5b66\u751f\uff0c\u4ed6\u4eec\u6b63\u5728\u63a5\u53d7\u57f9\u8bad\uff0c\u5982\u4f55\u4f7f\u5176\u5ef6\u7eed\u3002 \nAlbucher\u548cLevin\u627e\u5230\u4e86\u79c1\u4eba\u652f\u6301\uff0c\u4f46\u6ca1\u6709\u4eba\u613f\u610f\u516c\u5f00\u53d1\u8a00\u3002\u53d6\u6d88\u6587\u5316\uff0c\u4f1f\u5927\u7684\u6267\u6cd5\u8005\uff0c\u505a\u4e86\u5de5\u4f5c\u3002\n  \u201c\u53d6\u6d88\u6587\u5316\u201d\u7684\u6279\u8bc4\u8005\u5e38\u5e38\u6ce8\u610f\u5230\u5f88\u5c11\u6709\u4eba\u771f\u6b63\u53d6\u6d88\u3002\u7136\u800c\uff0c\u771f\u6b63\u7684\u95ee\u9898\u662f\u6587\u5316\u3002\u4e5f\u8bb8\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u63cf\u8ff0\u7b26\u662f\u4e00\u79cd\u4e0d\u5f53\u5f71\u54cd\u7684\u6587\u5316\u3002\n \u7f8e\u56fd\u533b\u5b66\u534f\u4f1a\u7684\u9053\u5fb7\u89c4\u8303\u8981\u6c42\u533b\u7597\u4e13\u4e1a\u4eba\u5458\u4e0d\u8981\u4f7f\u7528\u4e0d\u5f53\u5f71\u54cd\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u4e0d\u5f97\u8feb\u4f7f\u540c\u4e8b\u4eec\u53c2\u4e0e\u5ba3\u4f20\u6d3b\u52a8\uff0c\u4e0d\u5e94\u60e9\u7f5a\u540c\u4e8b\uff0c\u516c\u7136\u6216\u9690\u7792\uff0c\u4ee5\u4fbf\u51b3\u5b9a\u4e0d\u53c2\u52a0\u3002 Levin\u548cAlbucher\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4f3c\u4e4e\u662f\u5bf9\u8be5\u6807\u51c6\u7684\u660e\u786e\u8fdd\u53cd - \u66f4\u4e0d\u7528\u8bf4\u8fdd\u53cd\u4e0a\u8ff0APA\u9053\u5fb7\u6807\u51c6\u3002\n  \u83b1\u4f5b\u58eb\u548c\u963f\u5c14\u5e03\u5f7b\u5e08\u90fd\u901a\u77e5\u4e86\u4eba\u529b\u8d44\u6e90\uff0c\u4f46DEI\u8ba1\u5212\u7684\u53cd\u4e49\u77f3\u5934\u53ea\u4f1a\u6076\u5316\uff0c\u6700\u7ec8\u660e\u786e\u65ad\u8a00\u201c\u72b9\u592a\u4eba\u4e0e\u767d\u8272\u81f3\u4e0a\u201d\u3002\u7ecf\u8fc7\u4e00\u5e74\u591a\u7684\u4e00\u4e2a\u4e0d\u53d7\u6b22\u8fce\u548c\u654c\u5bf9\u7684\u6c14\u5019\uff0cLevin\u548cAlbucher\u7ec8\u4e8e\u4e3a\u65af\u5766\u798f\u63d0\u51fa\u4e86\u6c11\u6743\u6848\u4ef6\u3002\n  \u65af\u5766\u798f\u5dde\uff06\uff0339; S\u54a8\u8be2\u4e2d\u5fc3\u53ef\u80fd\u5bfc\u81f4\u5305\u88c5\u8fdd\u53cd\u5176\u9053\u5fb7\u4e49\u52a1\uff0c\u4f46\u5b83\u8fdc\u79bb\u5355\u72ec\u7684\u4f26\u7406\u4e49\u52a1\u3002\u76f4\u5230\u4e0d\u5f53\u5f71\u54cd\u7684\u6587\u5316\u7ed3\u675f\u6216\u8db3\u591f\u7684\u4eba\u6253\u7834\u6c83\u79d1\u592b\u7684\u5492\u8bed - \u5e76\u613f\u610f\u906d\u53d7\u6f14\u8bb2\u7684\u540e\u679c - \u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u7cbe\u795e\u75c5\u5b66\u548c\u7cbe\u795e\u75c5\u7d20\u8d28\u7684\u6301\u7eed\u4e0b\u964d\u4ee5\u200b\u200b\u53ca\u6301\u7eed\u7684\u4e13\u4e1a\u8150\u8d25\u8150\u8d25\u4f26\u7406\u3002 \u2666 ", "note_en": "Why are people across the country too afraid to publicly admit that they think Robin D\u2019Angelo\u2019s \u201c white fragility\u201d is nonsense? Or that Ibram Kendi\u2019s version of \u201c antiracism\u201d is the farthest thing from an antidote to racism? Why are so many afraid to support Israel\u2019s right to exist? Or even condemn antisemitism? Or defend those who are unfairly maligned for doing any of the above?\n   When critical theory replaces critical thinking, it erodes  ethics, degrades care, and creates a hostile environment. A recent lawsuit against Stanford University illustrates how.\n Legitimate concerns about inequality,  discrimination, bigotry, and justice, are widespread, and there are many ways to address those concerns. Regardless of what anyone thinks about the above propositions, no one should  fear expressing them. But the culture of free expression once enjoyed in the U.S. has been transformed by a totalizing, cult-like ideology that has an almost magical ability to create popular interpretations impervious to disconfirmation. It appears to have cast a metaphorical spell over various fields, including  education, media, journalism, technology, and even  psychotherapy and psychiatry.\n  Building on the now-popular term \u201cwoke,\u201d I have come to call this ideology, w okecraft. I use the metaphor of a spell because among believers are people in fields that rely on logic, reason, and science but who nonetheless appear unable to see that many of wokecraft&#39;s definitions \u2014 including new definitions of    racism and  antiracism \u2014 are tautological, and many of its foundational concepts (such as  white fragility,  white privilege, and   microaggressions) are unfalsifiable.\n  Science requires its terms to have linear definitions and its premises to be falsifiable  \u2014 in other words, there must be conditions under which a proposition can be proven wrong. Ideological premises, on the other hand, do not require falsifiability. Baldness, for example, is defined as a scalp wholly or partly lacking hair. The logical proposition that a person is bald can be falsified (proven wrong) by the presence of a full head of hair. An  ideology, on the other hand, might redefine baldness as \u201cideas about baldness that produce and normalize baldness.\u201d Believers might claim that all heads are bald regardless of the presence of long and luxurious hair. In fact, hair might be evidence of a refusal to accept one&#39;s baldness.\n  Despite its unfalsifiable propositions, wokecraft, which relies on  cognitive distortions, is making its way into psychological science and clinical practice. And this is corrupting competence and eroding professional ethics.\n In 2018, for example, the APA produced its first set of \u201c Guidelines for Psychological Practice with Boys and Men,\u201d which infamously declared \u201ctraditional masculinity\u201d to be \u201charmful.\u201d The APA later clarified that the alleged harm resulted from \u201cextreme stereotypical behaviors.\u201d But that only illustrated the unempirical nature of the proposition. (How and when did \u201ctraditional masculinity\u201d come to be defined by \u201cextreme stereotypical behaviors\u201d?)\n  To make matters worse, the guidelines called on clinicians to develop in their male clients \u201cawareness of [male] privilege and the harmful impacts of beliefs and behaviors that maintain patriarchal power.\u201d I  argued then that not only was this  countertherapeutic \u2014 because clients need to trust that their sessions will not be devoted to their therapists\u2019 ideologies \u2014 but that the guidelines violated the APA\u2019s own  ethical requirements, including that clinical psychologists \u201crespect the dignity and worth of all people\u201d and respect each individual\u2019s right to \u201cself-determination.\u201d\n  Now Stanford University\u2019s Counseling and Psychological Services (CAPS) has come under wokecraft&#39;s spell. When CAPS initiated a Diversity, Equity, and Inclusion program,  White Fragility was the chosen book, and personnel were segregated into \u201caffinity groups,\u201d each of which met separately. Those who did not fit neatly into wokecraft&#39;s non-white categories were required to participate in a \u201cwhiteness accountability\u201d group for \u201cstaff who hold privilege via white  identity\u201d \u2014 regardless of whether they identified as \u201cwhite\u201d or felt such \u201caffinity.\u201d\n   Jewish psychiatrist Ron Albucher, MD, and Jewish psychotherapist and eating disorders specialist Sheila Levin pushed back, but were met with antisemitic tropes: Jews, with their wealth and privilege, were hiding behind their \u201cwhite\u201d identity.\n After a  zoombombing that included both racist and antisemitic images, Albucher and Levin were informed that only the racism, not antisemitism, was worth addressing. When Albucher vocally rejected the notion that antisemitism should not be discussed in these meetings, staff accused him of being a person with \u201cwhite privilege\u201d attempting to pull focus from anti-black racism. Even when antisemitic graffiti appeared on campus, their requests to discuss antisemitism were denied.\n  For expressing concern about DiAngelo\u2019s contention that wanting to discuss one\u2019s ancestors\u2019 struggles contributes to racism and is evidence of white fragility, Levin was labeled a \u201cJewish, white, cisgendered woman of great privilege and power\u201d who allowed her \u201cfragility\u201d to prevent her from \u201ctrue self-reflection.\u201d\n  The child of two Holocaust survivors, Levin had a strong and negative reaction to the experience of being denied the right to define herself. In the 20th century, having been forcibly classified as  non-white by non-Jews, \u201cmy people were murdered because we were seen as contaminants to the white race,\u201d she said. In the 21st century, when being white is now the morally contaminated category, non-Jews at Stanford forcibly classified Jews as  white.\n  Meanwhile, amid alarming increases in anti-Jewish sentiment and antisemitic hate crimes, rather than Stanford mental health professionals preparing themselves to treat Jewish students struggling with this reality, they are being trained in how to perpetuate it.\n Albucher and Levin found private support, but no one else was willing to publicly speak up. Cancel culture, the great enforcer, did its job.\n  Critics of the \u201ccancel culture\u201d moniker often note that few people are truly  canceled. The real problem, however, is the  culture. Perhaps a more accurate descriptor is  a culture of undue influence.\n The American Medical Association\u2019s  code of ethics requires medical professionals to   refrain from using undue influence. Specifically, they are not allowed to  pressure colleagues to participate in advocacy activities and should not punish colleagues, overtly or covertly, for deciding not to participate. What happened to Levin and Albucher appears to be a clear violation of that standard \u2014 not to mention a violation of the APA ethical standards mentioned above.\n  Both Levin and Albucher notified HR, but the antisemitic nature of the DEI program only worsened, eventually explicitly asserting that \u201cJews are connected to white supremacy.\u201d After more than a year of an unwelcoming and hostile climate, Levin and Albucher finally brought a civil rights case against Stanford.\n  Stanford&#39;s counseling center may lead the pack in breaching its ethical obligations, but it is far from alone. Until either the culture of undue influence ends or enough people break the spell of wokecraft \u2014 and are willing to suffer the consequences of speaking up \u2014 we are likely to see a continued decline in  psychiatric and psychotherapeutic quality of care along with a continued corruption of professional ethics. \u2666", "posttime": "2021-06-30 00:39:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fc3\u7406\u5065\u5eb7,health,\u53ef\u80fd", "title": "\u5fc3\u7406\u5065\u5eb7\u4e13\u4e1a\u4eba\u58eb\u5df2\u7ecf\u5f00\u59cb\u8d77\u8bc9\u65af\u5766\u798f ", "title_en": "Mental Health Professionals Have Begun Suing Stanford", "transed": 1, "url": "https://www.psychologytoday.com/us/blog/happiness-and-the-pursuit-leadership/202106/mental-health-professionals-bring-lawsuit-against", "via": "", "real_tags": ["\u5fc3\u7406\u5065\u5eb7", "health", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "429d852881df42f9a20d4f496ff71855.jpg", "infoid": 1068648, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Xbox\uff0c\u6211\u4eec\u7684\u4f7f\u547d\u5f88\u7b80\u5355\uff1a\u4e3a\u8fd9\u4e2a\u661f\u7403\u4e0a\u7684\u6bcf\u4e2a\u4eba\u5e26\u6765\u6e38\u620f\u7684\u5feb\u4e50\u548c\u793e\u533a\u3002\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u6e34\u671b\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u73a9\u4f60\u60f3\u8981\u7684\u6e38\u620f\uff0c\u4f60\u60f3\u8981\u7684\u4eba\uff0c\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u5730\u65b9\u3002\n \u6211\u4eec\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u7ed3\u5408Xbox\u7684\u6e38\u620f\u9057\u4ea7\u548cAzure\u7684\u529b\u91cf\u7684\u672a\u6765\u3002\u6211\u4eec\u5c06\u9ad8\u4fdd\u771f\u5ea6\uff0c\u6c89\u6d78\u5f0f\u6e38\u620f\u5e26\u5230\u5168\u74033\u4ebf\u540d\u4eba\u7684\u672a\u6765\u3002\u73b0\u5728\u6211\u4eec\u5411\u8fbe\u5230\u8fd9\u4e00\u613f\u666f\u8fc8\u51fa\u4e86\u4e00\u5927\u6b65\uff1a\u4ece\u4eca\u5929\u5f00\u59cb\uff0cXbox Cloud\u6e38\u620f\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u56fd\u5bb6\u7684Windows 10 PC\u548cApple\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\uff0cXbox Cloud Gaming\u53ef\u4f9b\u6240\u670922\u4e2a\u56fd\u5bb6\u4f7f\u7528\u3002\u5982\u679c\u60a8\u662f\u4f1a\u5458\u6216\u60f3\u8981\u6210\u4e3a\u4f1a\u5458\uff0c\u53ea\u9700\u8f6c\u5230PC\u6216\u79fb\u52a8\u8bbe\u5907\u4e0a\u7684Microsoft Edge\uff0cChrome\u6216Safari\u4e0a\u7684Xbox.com/play\u5373\u53ef\u4eceXbox\u6e38\u620f\u4f20\u9012\u5e93\u5f00\u59cb\u64ad\u653e\u6570\u767e\u573a\u6bd4\u8d5b\u3002\n \u501f\u52a9\u6570\u5341\u4ebf\u4e2a\u6d3b\u8dc3\u7684Windows 10 PC\uff0ciOS\u8bbe\u5907\u548cAndroid\u624b\u673a\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u60a8\u9009\u62e9\u7684\u4efb\u4f55\u5730\u65b9\u73a9\u6700\u6df1\uff0c\u6700\u6c89\u6d78\u5f0f\u6e38\u620f\u7684\u65b0\u673a\u4f1a\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u5c06Xbox\u4f53\u9a8c\u76f4\u63a5\u5e26\u5230\u60a8\u6700\u5e38\u4f7f\u7528\u7684\u8bbe\u5907\u4e0a\u3002\n \u6211\u4eec\u8fd8\u5bf9\u6574\u4f53\u4f53\u9a8c\u8fdb\u884c\u4e86\u91cd\u5927\u6539\u8fdb\uff1aXbox Cloud Gaming\u73b0\u5728\u652f\u6301\u81ea\u5b9a\u4e49Xbox\u7cfb\u5217X\u786c\u4ef6\u3002\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u6700\u5feb\uff0c\u6700\u5f3a\u5927\u7684Xbox\u786c\u4ef6\u5347\u7ea7\u4e86\u5168\u7403\u7684Microsoft DataCenters\uff0c\u4e3a\u60a8\u63d0\u4f9b\u66f4\u5feb\u7684\u8d1f\u8f7d\u65f6\u95f4\uff0c\u63d0\u9ad8\u5e27\u7387\uff0c\u4ee5\u53ca\u65b0\u4e00\u4ee3\u6e38\u620f\u7684\u4f53\u9a8c\u3002\u4e3a\u786e\u4fdd\u6700\u4f4e\u5ef6\u8fdf\uff0c\u6700\u5bbd\u7684\u8bbe\u5907\u4e0a\u7684\u6700\u9ad8\u8d28\u91cf\u4f53\u9a8c\uff0c\u6211\u4eec\u5c06\u4ee51080p\u548c\u9ad8\u8fbe60fps\u6d41\u6d41\u3002\u524d\u8fdb\u6211\u4eec\u5c06\u7ee7\u7eed\u521b\u65b0\u5e76\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u4ee5\u589e\u5f3a\u60a8\u7684\u4e91\u6e38\u620f\u4f53\u9a8c\u3002\n Cloud Gaming\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u63d0\u4f9b\u65e0\u7f1d\u64ad\u653e\u3002\u5f53\u60a8\u5728PC\u6216\u79fb\u52a8\u8bbe\u5907\u4e0a\u6d41\u5f0f\u4f20\u8f93\u6e38\u620f\u65f6\uff0c\u60a8\u7684\u6e38\u620f\u6b63\u5728Microsoft DataCenter\u4e2d\u7684Xbox Hardware\u64ad\u653e\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u8df3\u5165\u6e38\u620f\uff0c\u4e0e\u60a8\u7684\u670b\u53cb\u8054\u7cfb\uff0c\u5e76\u5728\u60a8\u59cb\u7ec8\u5b8c\u6210\u65f6\u64ad\u653eXbox\u7f51\u7edc\u3002\u8fd9\u662f\u5bf9\u7684\uff0c\u4f60\u7684\u6e38\u620f\u8282\u7701\u5728\u4f60\u73a9\u7684\u4efb\u4f55\u65f6\u5019\u90fd\u4e00\u6837\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4ece\u4f60\u79bb\u5f00\u7684\u5730\u65b9\u6361\u8d77\u6765\u3002\n \u56e0\u6b64\uff0c\u4f7f\u7528\u5df2\u4fdd\u5b58\u7684\u6e38\u620f\u6293\u53d6\u60a8\u7684PC\u548c\u6d41\u961f\u7684outliders\u6216Doom\u3002\u6216\u8005\uff0c\u5f53\u60a8\u6709\u4e00\u4e2a\u514d\u8d39\u7684\u534a\u5c0f\u65f6\u540e\uff0c\u60a8\u53ef\u4ee5\u89e6\u53d1Xbox.com/play\uff0c\u5e76\u5728MLB\u5c55\u793a\u4e2d\u83b7\u53d6\u6e38\u620f\u3002\n \u5f53\u6211\u4eec\u4e3a\u66f4\u591a\u8bbe\u5907\u5e26\u6765\u6e38\u620f\u65f6\uff0c\u6211\u4eec\u4e5f\u5728\u6f14\u53d8\u5982\u4f55\u73a9\u6e38\u620f\u3002\u4eca\u5929\u5173\u4e8e\u4ece\u4e91\u4e2d\u64ad\u653e\u7684\u4e00\u516d\u4e2a\u7403\u5458\u4e13\u95e8\u4f7f\u7528\u5df2\u542f\u7528\u7684\u81ea\u5b9a\u4e49\u89e6\u63a7\u63a7\u5236\u8d85\u8fc750\u573a\u6bd4\u8d5b - \u6211\u4e2a\u4eba\u7684\u7231\u662fMINECRAFT Dungeons\u3002\u5f53\u7136\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u517c\u5bb9\u7684Xbox\u65e0\u7ebf\u63a7\u5236\u5668\u6216\u8bb8\u591a\u652f\u6301\u7684\u63a7\u5236\u5668\u548c\u79fb\u52a8\u6e38\u620f\u914d\u4ef6\u4e4b\u4e00\u6765\u73a9\u4e91\u4e2d\u7684\u6e38\u620f\uff0c\u5305\u62ec\u7528\u4e8eiOS\u7684\u5168\u65b0\u9aa8\u5e72\u7f51\u3002\u4eca\u5929\u6807\u5fd7\u7740\u6211\u4eec\u5728\u6211\u4eec\u7684\u65c5\u7a0b\u4e2d\u4e3a\u6240\u6709\u6e38\u620f\u73a9\u5bb6\u5e26\u6765Xbox\u4f53\u9a8c\u7684\u5173\u952e\u91cc\u7a0b\u7891\uff0c\u6211\u4eec\u4e0d\u80fd\u7b49\u5f85\u4f60\u5f00\u59cb\u73a9\u3002\u6211\u8bb0\u5f97\u5927\u7ea6\u4e09\u5e74\u524d\uff0c\u6211\u7b2c\u4e00\u6b21\u62ff\u8d77\u7535\u8bdd\u5e76\u64ad\u653e\u4e91\u6e38\u620f\uff0c\u53ea\u4f7f\u7528\u89e6\u6478\u63a7\u5236\u3002\u8fd9\u662f\u6211\u6c38\u8fdc\u4e0d\u4f1a\u5fd8\u8bb0\u7684\u90a3\u4e00\u523b\uff0c\u56fe\u5f62\u7684\u7f8e\u4e3d\u4e0e\u6280\u672f\u7684\u521b\u9020\u6027\u6df7\u5408\u5728\u4e00\u8d77\u521b\u9020\u771f\u6b63\u795e\u5947\u7684\u4e1c\u897f\u3002\u6240\u4ee5\uff0c\u4ece\u56e2\u961fXbox\u5230\u4f60\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u901a\u8fc7\u4efb\u4f55\u5730\u65b9\u548c\u5404\u5904\u6e38\u620f\u6765\u9047\u5230\u66f4\u591a\u7684\u5feb\u4e50\u548c\u8fde\u63a5\u3002 ", "note_en": "At Xbox, our mission is simple: bring the joy and community of gaming to everyone on the planet. To achieve that, we aspire to empower everyone to play the games you want, with the people you want, anywhere you want.\n We are  creating a future that combines the gaming heritage of Xbox and the power of Azure. A future where we bring high fidelity, immersive games to the 3 billion players around the world. Now we\u2019re taking a big step forward to reaching that vision:  Starting today, Xbox Cloud Gaming is available to all Xbox Game Pass Ultimate members with Windows 10 PCs and Apple phones and tablets, via browser, across 22 countries. If you\u2019re a member or want to become a member, simply go to  xbox.com/play on Microsoft Edge, Chrome, or Safari on your PC or mobile device to start playing hundreds of games from the Xbox Game Pass library.\n With billions of active Windows 10 PCs, iOS devices and Android phones, we want you to have new opportunities to play the deepest, most immersive games whenever and wherever you choose. Simply put,  we\u2019re bringing the Xbox experience directly to the devices you use most.\n We\u2019re also making significant improvements to the overall experience:  Xbox Cloud Gaming is now powered by custom Xbox Series X hardware. We\u2019ve been upgrading Microsoft datacenters around the globe with the fastest, most powerful Xbox hardware to give you faster load times, improved frame rates, and an experience of a new generation of gaming. To ensure the lowest latency, highest quality experience across the broadest set of devices, we will be streaming at 1080p and up to 60fps. Going forward we\u2019ll continue to innovate and add more features to enhance your cloud gaming experience.\n Cloud gaming provides seamless play across your devices. When you\u2019re streaming games on a PC or mobile device, your game is playing from Xbox hardware in a Microsoft datacenter. This means you can jump into a game, connect with your friends, and play through the Xbox network just as you\u2019ve always done. That\u2019s right, your game saves are just the same wherever and whenever you play, so you can pick right back up from where you left off.\n So grab your PC and stream   Outriders  or   Doom  on your iPad using your saved game. Or, when you have a free half-hour, you can fire up  xbox.com/play and get a game in on   MLB The Show 21.\n As we bring games to more devices, we\u2019re also evolving how you can play your games. Today about one-in-six players who play from the cloud are exclusively using custom touch controls that are enabled for  more than 50 games \u2013 one I personally love is   Minecraft Dungeons. And of course, you can also play games from the cloud using a compatible Xbox Wireless Controller, or one of the many  supported controllers and  mobile gaming accessories,  including the all-new Backbone One for iOS.  Today marks a key milestone in our journey to bring the Xbox experience to all gamers, and we can\u2019t wait for you to begin playing. I remember about three years ago, the first time I picked up a phone and played a cloud game, using nothing but touch controls. It\u2019s a moment I\u2019ll never forget, where the beauty of the graphics mixed with the creativity of technology to create something truly magical. So, from Team Xbox to you, we hope you experience more joy and connection through gaming anywhere and everywhere.", "posttime": "2021-06-30 00:38:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,cloud", "title": "Xbox Cloud\u6e38\u620f ", "title_en": "Xbox Cloud Gaming", "transed": 1, "url": "https://news.xbox.com/en-us/2021/06/28/xbox-cloud-gaming-now-running-on-xbox-series-x/", "via": "", "real_tags": ["\u6e38\u620f", "cloud"]}, {"category": "", "categoryclass": "", "imagename": "c2a6f341de999619b42b2c9bc4484951.png", "infoid": 1068647, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5df2\u7ecf\u770b\u5230\u4e86Quentin Tarantino\u7684\u7535\u5f71inclourious Basterds\uff0c\u4f60\u53ef\u80fd\u4f1a\u8bb0\u5f97\u90a3\u4e2a\u5e26\u6709\u7eb3\u7cb9\u5b98\u5458\u7684\u82f1\u56fd\u95f4\u8c0d\u5367\u5e95\u7684\u9152\u5427\u573a\u666f\uff0c\u901a\u8fc7\u65e0\u610f\u8bc6\u7684\u59ff\u6001\u4e0b\u964d\u4ed6\u7684\u9762\u5177\u3002\n \u867d\u7136\u4ed6\u7a7f\u7740\u7eb3\u7cb9\u5236\u670d\u5e76\u8bb2\u5f97\u5fb7\u8bed\uff0c\u4f46\u4ed6\u901a\u8fc7\u4e00\u4e2a\u5c0f\u7ec6\u8282\u6765\u8d4b\u4e88\u81ea\u5df1\uff1a\u4ed6\u7684\u624b\u6307\u3002\u8ba2\u8d2d\u4e09\u4e2a\u54c1\u8131\u65f6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4ed6\u7684\u62c7\u6307\uff0c\u6307\u6570\u548c\u4e2d\u6307\uff08\u4f5c\u4e3a\u5fb7\u56fd\u4eba\uff09\uff0c\u4ed6\u4f7f\u7528\u4ed6\u7684\u73af\uff0c\u4e2d\u95f4\u548c\u98df\u6307\u3002\u684c\u5b50\u4e0a\u7684\u53e6\u4e00\u540d\u5b98\u5458\u7acb\u5373\u5c06\u8fd9\u79cd\u5fae\u5999\u7684\u7ec6\u8282\u89c6\u4e3a\u4ee4\u4eba\u65e0\u6cd5\u7406\u89e3\u7684Anglophone\u3002\n  \u6211\u4eec\u5728\u7f51\u4e0a\u5de5\u4f5c\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u4e00\u6837\u3002\u5982\u679c\u60a8\u5ffd\u7565\u4e86\u4e00\u4e9b\u6b21\u8981\u7684\u751f\u547d\u503c\uff0c\u8bf7\u653e\u5f03\u5b88\u536b\u5e76\u53d1\u51fa\u60a8\u7684\u8eab\u4efd\u5f88\u5bb9\u6613\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u8bbe\u5907\u68c0\u6d4b\u7684\u4e16\u754c\uff0c\u5e76\u5c55\u793a\u4e3a\u4ec0\u4e48\u4ee5\u53ca\u6a21\u4eff\u8bbe\u5907\u51e0\u4e4e\u4e0d\u53ef\u80fd\u3002\n \u5728\u6f5c\u5165\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u67e5\u770b\u4e3a\u4ec0\u4e48\u7cfb\u7edf\u5c1d\u8bd5\u68c0\u6d4b\u8bbe\u5907 - \u8fd9\u4e5f\u662f\u4eba\u4eec\u8bd5\u56fe\u68c0\u6d4b\u6216\u6a21\u62df\u8bbe\u5907\u7684\u7b54\u6848\u3002\n  \u5728\u6d4f\u89c8\u5668\u7684\u65e9\u671f\u548c\u6574\u4e2a\u540e\u7eed\u7684\u201c\u6d4f\u89c8\u5668\u6218\u4e89\u201d\u4e2d\uff0c\u65e0\u6570\u7684\u6d4f\u89c8\u5668\u4f9b\u5e94\u5546\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u9700\u8981\u4e86\u89e3\u4f9b\u5e94\u5546\u8fde\u63a5\u5230\u5176\u7f51\u7ad9\u7684\u54ea\u4e2a\u5ba2\u6237\uff0c\u5e76\u4e14\u4ed6\u4eec\u5f00\u59cb\u6839\u636e\u68c0\u6d4b\u5230\u7684\u6d4f\u89c8\u5668\u5b9a\u5236\u548c\u4f18\u5316\u54cd\u5e94\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u4e2a\u6280\u672f\u6027\u5fc5\u9700\u54c1\u3002\n \u5982\u679c\u60a8\u5ffd\u7565\u4e86\u4e00\u4e9b\u6b21\u8981\u7684\u751f\u547d\u503c\uff0c\u8bf7\u653e\u5f03\u5b88\u536b\u5e76\u53d1\u51fa\u60a8\u7684\u8eab\u4efd\u5f88\u5bb9\u6613\u3002\n \u6211\u4eec\u7684\u65e7\u670b\u53cb\u7528\u6237 - \u4ee3\u7406\u5b57\u7b26\u4e32\u662f\u4ece\u8fd9\u51e0\u5929\u7684\u751f\u5b58 - \u4f46\u73b0\u5728\u68c0\u6d4b\u548c\u9884\u9632\u6280\u672f\u73b0\u5728\u90fd\u66f4\u5148\u8fdb\u3002 \n\u5728\u68c0\u6d4b\u4fa7\uff0c\u5927\u591a\u6570\u7f51\u7ad9\u91c7\u7528\u68c0\u6d4b\u673a\u5236\u6765\u5e2e\u52a9\u4ed6\u4eec\u7684\u5ba2\u6237\u670d\u52a1\u3002\u4f8b\u5982\uff0cNetflix\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u7684\u5404\u79cd\u5206\u8fa8\u7387\u63d0\u4f9b\u4e86\u6570\u767e\u79cd\u4e0d\u540c\u7684\u89c6\u9891\u683c\u5f0f\uff0c\u4ece\u79fb\u52a8\u8bbe\u5907\u5230\u667a\u80fd\u7535\u89c6\u3002\u6ca1\u6709\u8bbe\u5907\u68c0\u6d4b\uff0c\u90a3\u5c06\u5982\u4f55\uff1f\n \u540c\u6837\u5730\uff0c\u8003\u8651\u4e3a\u7b14\u8bb0\u672c\u7535\u8111\u548c\u684c\u9762\u8bbe\u5907\u63d0\u4f9b\u5b8c\u5168\u6709\u80fd\u529b\u7684\u4ea7\u54c1\u7684\u516c\u53f8\uff0c\u5b83\u4eec\u53ea\u63d0\u4f9b\u7ed9\u79fb\u52a8\u7528\u6237\u7684\u6709\u9650\u7248\u672c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8981\u6c42\u7684\u95ee\u9898\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\uff0c\u7b54\u6848\u662f\u95ee\u9898\u3002\u60f3\u8981\u83b7\u5f97\u7279\u5b9a\u4e8e\u67d0\u4e9b\u8bbe\u5907\u7684\u66f4\u591a\u5143\u7d20\u7684\u4eba\u6216\u673a\u5668\u4eba\uff0c\u6216\u8005\u60f3\u8981\u7a81\u7834\u6240\u8c13\u7684\u201c\u8bbe\u5907\u6cb3\u5cb8\u201d\uff08\u4f8b\u5982\uff0c\u4ed6\u4eec\u4e0d\u60f3\u56e0\u79fb\u52a8\u8bbe\u5907\u800c\u6709\u9650\u5236\u7684\u53ef\u80fd\u6027\uff09\u3002\u540c\u6837\uff0c\u4e00\u4e9b\u5a01\u80c1\u6f14\u5458\u5e0c\u671b\u5229\u7528\u4e00\u4e9b\u5b89\u5168\u63aa\u65bd\u5bf9\u67d0\u4e9b\u8bbe\u5907\u4e0d\u90a3\u4e48\u7d27\u5f20\u3002\n \u8c01\u53ef\u4ee5\u963b\u6b62\u4eba\u4eec\u5229\u7528\u8bbe\u5907\u6b3a\u9a97\uff0c\u5982\u679c\u7f51\u7ad9\u4e0d\u80fd\u5411\u79fb\u52a8\u8bbe\u5907\u663e\u793a\u9a8c\u8bc1\u7801\uff0c\u5373\u4f7f\u8d85\u8fc7\u4e86\u901f\u7387\u9650\u5236\uff0c\u6216\u8005\u516c\u53f8\u4ec5\u63d0\u4f9b\u7279\u5b9a\u7684\u6298\u6263\u6216\u4ec5\u9002\u7528\u4e8e\u67d0\u4e9b\u7c7b\u578b\u7684\u8bbe\u5907\uff1f\n  \u8fd9\u5c06\u6211\u4eec\u5e26\u6765\u4e86\u4eca\u5929\u7684\u4e00\u5929\uff1a\u4e00\u4e2a\u9690\u55bb\u7684\u201c\u519b\u5907\u7ade\u8d5b\u201d\u5728\u8bd5\u56fe\u68c0\u6d4b\u8bbe\u5907\u7684\u4eba\u4e4b\u95f4\u51fa\u6765\u7684\u9876\u90e8\u548c\u8bd5\u56fe\u9632\u6b62\u8be5\u68c0\u6d4b\u7684\u4eba\u3002\u867d\u7136\u8fd9\u5bfc\u81f4\u4e86\u66f4\u9ad8\u7684\u673a\u5668\u5b66\u4e60\u6216AI\u7684\u9ad8\u7ea7\u6280\u672f\u6295\u8d44\uff0c\u4f46\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u4ee4\u4eba\u60ca\u8bb6\u5730\u6ca1\u6709\u5f15\u8d77\u5927\u91cf\u5173\u6ce8\uff0c\u5982\u8c37\u6b4c\u7684\u8bbe\u5907\u5206\u7c7b\u65b9\u6cd5\uff0c\u6bd5\u52a0\u7d22\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5b83\uff0c\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0\u90a3\u4e9b\u53ef\u4ee5\u8ba9\u4f60\u79bb\u5f00\u7684\u5c0f\u7ec6\u8282\u3002\n  \u4ece\u4fee\u6539\u7528\u6237\u4ee3\u7406\u5b57\u7b26\u4e32\u4ee5\u91c7\u7528\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\uff0c\u8bbe\u5907\u6b3a\u9a97\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0 - \u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u4e0d\u540c\u7684\u53d1\u73b0\u65b9\u5f0f\u3002\n  \u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u6b3a\u9a97\u8bbe\u5907\u548c\u66f4\u6539\u7528\u6237\u59d4\u6258\u5b57\u7b26\u4e32\u4e00\u6837\u7b80\u5355\uff1a\u6211\u4eec\u5bf9\u4ed6\u4eec\u8bf4\uff0c\u201c\u58f0\u79f0\u5f88\u4fbf\u5b9c;\u5c55\u793a\u4f60\u7684\u8bc1\u660e\uff01\u201c \n\u4f8b\u5982\uff0c\u5927\u591a\u6570\u6b3a\u9a97\u5c1d\u8bd5\u58f0\u79f0\u8be5\u8bbe\u5907\u662f\u79fb\u52a8\u7684\uff0c\u7acb\u5373\u8ba9\u6e38\u620f\u8fdc\u79bb\u6e38\u620f\u3002\u4ed6\u4eec\u5fd8\u8bb0\u4e86\u6a21\u4eff\u8bbe\u5907\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u56de\u7b54\u5173\u4e8e\u89e6\u6478\u652f\u6301\u7684\u95ee\u9898\u3002\n   var touch_capable =\uff08\uff06\uff0339; ontouchstart\uff06\uff0339;\u5728\u7a97\u53e3\uff09|| \uff08Navigator.maxTouchPoints\uff06gt; 0\uff09|| \uff08Navigator.msmaxTouchPoints\uff06gt; 0\uff09;\u5982\u679c\uff08touch_capable\uff09{\u8b66\u62a5\uff08\uff06\uff0334;\u652f\u6301\uff06\uff0334;\uff09;}\u5426\u5219{\u8b66\u62a5\uff08\uff06\uff0334;\u4e0d\u652f\u6301\uff06\uff0334;\uff09;}\n \u6b63\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u529f\u80fd\u548c\u4fe1\u606f\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5982\u679c\u60a8\u58f0\u79f0\u60a8\u7684\u8bbe\u5907\u662fApple iPhone 6\uff0c\u5219\u5fc5\u987b\u77e5\u9053\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u81f3\u5c11\u81f3\u5c11\u662fiPhone 6\u7684\u5c4f\u5e55\u5927\u5c0f\u3002\n \u4f60\u6709\u6ca1\u6709\u89c1\u8fc7iPhone 6\uff0c\u5176\u5c4f\u5e55\u5206\u8fa8\u7387\u4e3a1920\u00d71080\uff1f\u6211\u4eec\u8fd8\u6ca1\u6709\uff0c\u4e5f\u6ca1\u6709\u68c0\u6d4b\u7cfb\u7edf\uff01\n  \u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5982\u679c\u60a8\u5df2\u6210\u529f\u4f20\u9012Navigator.platform\u6d4b\u8bd5\uff0c\u5219\u6ca1\u6709\u4eba\u4f1a\u53d1\u73b0\u5b83\u5947\u602a\u7684\u662f\u60a8\u6709MacBook\u7684\u5947\u602a\uff1a\n  \u4f46\u662f\uff0c\u60a8\u4e0d\u80fd\u58f0\u79f0\u60a8\u6b63\u5728\u4f7f\u7528Max OS X\u548cWindows\u540c\u65f6\u4f7f\u7528\uff01\n \u5728\u6b3a\u9a97\u8bbe\u5907\u65f6\uff0c\u6709\u66f4\u591a\u7684\u5f02\u5e38\u5ffd\u7565\u3002\u5982\u679c\u60a8\u66fe\u4f7f\u7528\u8fc7\u79fb\u52a8\u6d4f\u89c8\u5668\uff08\u5f53\u7136\u662f\uff09\uff0c\u60a8\u77e5\u9053\u60a8\u65e0\u6cd5\u8c03\u6574\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u5b83\u603b\u662f\u6253\u5f00\uff0c\u6700\u5927\u5316\uff0c\u8986\u76d6\u6574\u4e2a\u5c4f\u5e55\u3002\u8fd9\u610f\u5473\u7740\u68c0\u6d4b\u7cfb\u7edf\uff0c\u7a97\u53e3\u7684x\u548cy\u503c\u5e94\u8be5\u59cb\u7ec8\u4e3a0\uff0c\u5982\u679c\u4e0d\u662f.. \n\u5173\u4e8e\u8bbe\u5907\u7279\u5b9a\u5c5e\u6027\u7684\u4f8b\u5b50\u53ef\u4ee5\u7ee7\u7eed\uff0c\u4f46\u73b0\u5728\u662f\u65f6\u5019\u5fae\u7b11\u4e86\u4e00\u70b9\u3002\n  \u60a8\u662f\u5426\u610f\u8bc6\u5230Emojis\uff0c\u540c\u65f6\u952e\u5165\u76f8\u540c\u7684\u65b9\u5f0f\uff0c\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e2d\u53ef\u89c6\u5316\u4e0d\u540c\uff1f\n \u4f8b\u5982\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5fae\u7b11\u7684\u8868\u60c5\u7b26\u53f7\uff0c\u4f7f\u7528\uff1a\u548c\uff09\uff0c\u60a8\u7684\u7cfb\u7edf\u5c06\u5176\u8f6c\u6362\u4e3a\u751c\u871c\u7684\u56fe\u7247\u3002 \ud83d\ude42\n   \u5047\u8bbe\u60a8\u7684\u5ba2\u6237\u58f0\u660e\u5b83\u5728Android\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u68c0\u6d4b\u7cfb\u7edf\u53ef\u4ee5\u83b7\u5f97EMOJI\u7684\u6563\u5217\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u771f\u6b63\u7684Android\u7cfb\u7edf\u4e2d\u83b7\u5f97\u7684\u6563\u5217\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u5b83\u4f1a\u7a81\u51fa\u663e\u793a\u60a8\u7684\u8bbe\u5907\u3002\u8fd9\u662f\u771f\u6b63\u7684\u9b54\u6cd5\uff01\u53ea\u9700\u4f7f\u7528U + 1F600\uff0c\u540c\u65f6\u751f\u6210\u53ef\u89c6\u5316\uff0c\u6dfb\u52a0\u4e00\u4e2a\u5b9a\u4e49\u5176\u4ed6\u4eba\u7684\u503c\u3002\n   \u8fd9\u91ccSHA256\u5728Windows 10 OS\u4e0a\u4ece\u4e0d\u540c\u7248\u672c\u7684Google Chrome\u83b7\u5f97\u7684\u76f8\u540c\u8868\u60c5\u7b26\u53f7\u4e2d\u3002\n   \u6bcf\u4e2a\u7cfb\u7edf\u90fd\u9644\u5e26\u4e86\u4e00\u4e9b\u9884\u5148\u5b89\u88c5\u7684\u5b57\u4f53\uff0c\u5177\u6709\u9ed8\u8ba4\u4f7f\u7528\u67d0\u4e9b\u7279\u5b9a\u7684\u5b57\u4f53\u3002\u4f8b\u5982\uff0c\u867d\u7136iOS 13 Academy\u96d5\u523b\u4e86\uff1a1.0\u5b57\u4f53\u9884\u88c5\uff0c\u4f46\u5b83\u6ca1\u6709Al Bayan Bold\u3002\u4f46\u662f\uff0c\u9ea6\u65af\u5361\u5854\u5229\u5a1c\u505a\u4e86\uff01\n \u540c\u6837\uff0c\u800cTahoma\u662fWindows XP\u4e2d\u7684\u9ed8\u8ba4\u5b57\u4f53\uff0c\u56e0\u4e3aVista\uff0c\u5b83\u662fSegoe UI\u3002 Microsoft\u7684Windows 10\u7684\u6700\u65b0\u5b57\u4f53\u5217\u8868\u9644\u5e26\uff1a \n\u201c\u8bf7\u6ce8\u610f\uff1a\u5e76\u975e\u6240\u6709\u684c\u9762\u5b57\u4f53\u90fd\u5c06\u5728Windows 10\u7684\u975e\u684c\u9762\u7248\u672c\u4e2d\uff0c\u5982Xbox\uff0cHololens\uff0cSurfaceHub\u7b49\u3002\u201d\n \u56e0\u6b64\uff0c\u5982\u679c\u63a2\u6d4b\u5b57\u4f53\u53ef\u4ee5\u7acb\u5373\u51b3\u5b9a\uff0c\u68c0\u6d4b\u7cfb\u7edf\u53ef\u4ee5\u7acb\u5373\u51b3\u5b9a\uff0c\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u770b\u5230\u5b57\u4f53\u5217\u51fa\u7684Microsoft\u7684\u9875\u9762\uff0c\u90a3\u4e48\u60a8\u4e0d\u662f\u6b63\u5e38\u7684Windows 10\u3002\n  \u622a\u81f3\u76ee\u524d\uff0c\u6211\u4eec\u5ba1\u67e5\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u6b3a\u9a97\u4e86\uff0c\u4f46\u5e76\u4e0d\u96be\u4ee5\u627e\u5230\u89e3\u51b3\u65b9\u6cd5\u3002\u901a\u8fc7\u8986\u76d6\u6d4f\u89c8\u5668\u548c\u8fd0\u8f93\u5b57\u4f53\uff0c\u8868\u60c5\u7b26\u53f7\u548c\u4e8c\u8fdb\u5236\u5c5e\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u60a8\u53ef\u4ee5\u89e3\u51b3\uff0c\u5c3d\u7ba1\u9700\u8981\u5927\u91cf\u7684\u52aa\u529b\u548c\u6210\u672c\u3002\n Google Picasso\u901a\u8fc7\u6267\u884c\u4e00\u4e9b\u4e25\u91cd\u4f9d\u8d56\u4e8eOS\u548c\u56fe\u5f62\u786c\u4ef6\u7684\u6e32\u67d3\u64cd\u4f5c\u6765\u4e86\u89e3\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u5206\u7c7b\u3002\n  2006\u5e74\uff0c\u8c37\u6b4c\u53cd\u6ee5\u7528\u56e2\u961f\u7684Elie Bursztein\u5206\u4eab\u4e86\u4ed6\u7684\u5de5\u4f5c\uff0c\u516c\u5f00\u5206\u4eab\u4e86\u6bd5\u52a0\u7d22\u7684\u5de5\u4f5c\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86Google\u5728Google Play\u4e2d\u4e89\u593a\u8bbe\u5907\u6b3a\u9a97\u7684\u5c1d\u8bd5\u3002\n Picasso\u65e8\u5728\u901a\u8fc7\u5728\u5927\u91cf\u4f9d\u8d56\u4e8e\u6d4f\u89c8\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u786c\u4ef6\u6765\u4e86\u89e3\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u5206\u7c7b\u3002\u901a\u8fc7\u4f7f\u7528\u79cd\u5b50\uff0cPicasso\u5728\u6bcf\u8f6e\u968f\u673a\u5730\u5728\u753b\u5e03\u4e0a\u521b\u5efa\u51e0\u4f55\u7b26\u53f7\u3002\u79cd\u5b50\uff0c\u5706\u5f62\uff0c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7b49\u503c\u662f\u6bd5\u52a0\u7d22\u8fd0\u884c\u7684\u6210\u5206\u3002\u56e0\u6b64\uff0cPicasso\u53ef\u4ee5\u83b7\u5f97\u7531\u5ba2\u6237\u7aef\u7684\u4e0d\u53ef\u5206\u5e03\u7684\u529f\u80fd\u751f\u6210\u7684\u56fe\u5f62\u8f93\u51fa\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u786c\u4ef6\u3002\u9664\u975eS /\u4ed6\u5728\u624b\u4e2d\u5177\u6709\u76f8\u540c\u7684\u8bbe\u7f6e\uff0c\u5426\u5219\u5bf9\u626c\u58f0\u5668\u65e0\u6cd5\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u3002\n  \u9664\u975e\u6570\u636e\u5e93\u5177\u6709\u901a\u8fc7\u4f7f\u7528\u6b63\u7248\u8bbe\u5907\u83b7\u5f97\u7684\u9884\u5148\u8ba1\u7b97\u503c\uff0c\u5426\u5219\u8be5\u7cfb\u7edf\u5e76\u4e0d\u610f\u5473\u7740\u4efb\u4f55\u5185\u5bb9\u3002\u6b64\u6570\u636e\u5e93\u7a0d\u540e\u5c06\u5176\u7528\u4f5c\u771f\u5b9e\u5f15\u7528\u3002 \n\u6211\u4eec\u5fc5\u987b\u6ce8\u610f\u6bd5\u52a0\u7d22\u5728\u8fd9\u91cc\u7684\u4e00\u4e9b\u91cd\u8981\u89c2\u70b9\u3002\u4f8b\u5982\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528HTML\u753b\u5e03\u4ea7\u751f\u56fe\u5f62\u5de5\u4f5c\u3002\u4eba\u4eec\u503e\u5411\u4e8e\u8ba4\u4e3a\u753b\u5e03\u7528\u4e8e\u589e\u52a0\u6307\u7eb9\u71b5\u4ee5\u83b7\u5f97\u552f\u4e00\u6027\u3002\u968f\u7740\u591a\u5e74\u524d\u7684MultiLogin\u5de5\u7a0b\u5e08\uff0c\u800c\u4e0d\u662f\u6709\u524d\u9014\u7684\u72ec\u7279\u6307\u7eb9\uff0cCanvas Hash\u5728\u8bbe\u7f6e\u4e2d\u4e0e\u786c\u4ef6\u76f8\u540c\u7684\u6210\u5206\u76f8\u540c\u3002 2006\u5e74\uff0cGoogle Guys\u5f00\u59cb\u4f7f\u7528Canvas\u6307\u7eb9\u7684\u6b64\u529f\u80fd\u6765\u5bf9\u8bbe\u5907\u8fdb\u884c\u5206\u7c7b\u4ee5\u4e86\u89e3\u8bbe\u5907\u6b3a\u9a97\u5c1d\u8bd5\u3002\n  \u867d\u7136\u8fd9\u76f8\u5f53\u53e4\u8001\u7684\u5de5\u4f5c\uff082006\u5e74\uff09\uff0c\u4f46\u5b83\u5df2\u7ecf\u7531CloudFlare\u6539\u7f16\u3002\u5f53\u6211\u4eec\u8003\u8651\u4ed6\u4eec\u7684\u5e02\u573a\u4efd\u989d\u6709\u591a\u91cd\u5927\u65f6\u95f4\u65f6\uff0c\u6bd5\u52a0\u7d22\u5c06\u4f5c\u4e3a\u8bbe\u5907\u6b3a\u9a97\u4f01\u56fe\u7684\u4e0d\u53ef\u8fa9\u62a4\u673a\u5236\u3002\n \u53ea\u8981\u5bf9\u4fa7\u5177\u6709\u7531\u6b63\u7248\u8bbe\u5907\u83b7\u5f97\u7684\u9884\u5148\u8ba1\u7b97\u7684\u6563\u5217\u7ec4\u6210\u7684\u6570\u636e\u5e93\uff0c\u4f3c\u4e4e\u96be\u4ee5\u9003\u79bb\u6bd5\u52a0\u7d22\u7684\u8bbe\u5907\u548c\u64cd\u4f5c\u7cfb\u7edf\u6b3a\u9a97\u5c1d\u8bd5\u3002\u96be\u9053\u4f60\u8ba4\u4e3a\u8c37\u6b4c\u548cCloudFlare\u6709\u8db3\u591f\u7684\u6570\u636e\u96c6\u6765\u68c0\u67e5\u8bbe\u5907\u771f\u5b9e\u6027\u5417\uff1f\n  \u6765\u81ea\u8bd7\u4ebaRumi\u7684\u8fd9\u53e5\u8bdd\u53ef\u4ee5\u4e3a\u6211\u4eec\u7684\u60c5\u51b5\u8fdb\u884c\u91cf\u8eab\u5b9a\u5236\u3002\u957f\u671f\u4ee5\u6765\uff0c\u6211\u4eec\u5efa\u8bae\u6211\u4eec\u7684\u7528\u6237\u5728Multilogin\u4e2d\u521b\u5efa\u6d4f\u89c8\u5668\u914d\u7f6e\u6587\u4ef6\u65f6\uff0c\u8bf7\u52a1\u5fc5\u9009\u62e9\u6d4f\u89c8\u5668\u914d\u7f6e\u6587\u4ef6\u5de5\u4f5c\u7684\u6b63\u786e\u64cd\u4f5c\u7cfb\u7edf\u3002\n  \u867d\u7136Multilogin\u91c7\u7528\u4e00\u4e9b\u6b65\u9aa4\u6765\u9632\u6b62\u901a\u8fc7\u5e26\u6709\u914d\u7f6e\u6587\u4ef6\u7684\u5b57\u4f53\u6765\u9632\u6b62\u68c0\u6d4b\u7cfb\u7edf\uff0c\u4f46\u63d0\u4f9b\u6b63\u5b97\u7684Canvas\u7ed3\u679c\u9ed8\u8ba4\u503c\u7b49;\u6700\u597d\u7684\u662f\u5c3d\u53ef\u80fd\u5730\u7559\u4e0b\u771f\u5b9e\u3002\u79bb\u5f00\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u610f\u5473\u7740\u68c0\u6d4b\u7cfb\u7edf\u7684\u4efb\u4f55\u5185\u5bb9;\u4f46\u662f\uff0c\u68c0\u6d4b\u5047\u8bbe\u8bbe\u7f6e\u4e4b\u95f4\u7684\u9519\u914d\u610f\u5473\u7740\u5f88\u591a\uff01\n \u5173\u952e\u89c4\u5219\u5728\u4eba\u7fa4\u4e2d\u6df7\u5408\uff0c\u4ee5\u514d\u6210\u4e3a\u624b\u6307\u6307\u5411\u7684\u4eba\u3002\u4ece\u4e00\u4e2a\u8bbe\u5907\u6b3a\u9a97\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6b63\u5982Rumi\u6240\u8bf4\uff0c\u6211\u4eec\u5efa\u8bae\uff1a\u4f3c\u4e4e\u662f\u4f60\u7684\u6216\u4f3c\u4e4e\u5c31\u50cf\u4f60\u4e00\u6837\uff01 ", "note_en": "If you\u2019ve seen Quentin Tarantino\u2019s film Inglourious Basterds, you probably remember the bar scene where a British spy undercover as a Nazi officer drops his mask through an unconscious gesture.\n Although he wears a Nazi uniform and speaks German well, he gives himself by a minor detail: his fingers. When ordering three more pints, instead of using his thumb, index and middle fingers (as Germans do), he uses his ring, middle and index finger. Another officer at the table immediately recognizes this subtle detail as unmistakably Anglophone.\n  The same goes for any of us working online. Dropping your guard and giving out your identity is easy if you overlook some minor-looking vital points. In this article, we will take a journey into the world of device detection, and show why and how  mimicking a device is getting almost impossible.\n Before diving in, let\u2019s have a quick look at why systems try to detect devices \u2013 which is also the answer to why people try to detect or emulate devices.\n  In the early days of browsers and throughout the subsequent \u2018browser wars\u2019, the myriad of browser vendors meant developers needed to understand which client developed by which vendor was connecting to their websites, and they started customizing and optimizing the response according to the browser detected. In this sense, it was a technical necessity.\n Dropping your guard and giving out your identity is easy if you overlook some minor-looking vital points.\n Our old friend the User-Agent string is a survival from these days \u2013 but nowadays detection and prevention techniques are both now much more advanced.\n On the detection side, most sites adopt detection mechanisms to help serve their clients. For example, Netflix supports hundreds of different video formats in various resolutions for each device, from mobile devices to smart TVs. Without device detection, how would that be possible?\n Likewise, think about companies who offer fully capable products to laptop and desktop devices, they offer only a limited version to mobile users.\n  The questions we asked so far brought us here, and the answer is the question. People or bots who want to get more elements specific to certain devices, or who want to break out of so-called \u2018device ghettoes\u2019 (eg they don\u2019t want to have restricted possibilities due to being a mobile device). Likewise, some threat actors want to take advantage of the fact that some security measures are not as tight for some devices.\n Who can stop people from utilizing device spoofing if a website cannot show captcha to mobile devices even if some rate limits are exceeded, or if a company offers specific discounts or products only to some types of devices?\n  This brings us to the present day: a metaphorical \u2018arms race\u2019 to come out top between those trying to detect devices and those trying to prevent that detection. While this has led to greater investment in advanced tech like machine learning or AI, there are some other methods that have surprisingly not drawn much attention, like Google\u2019s device classification method, Picasso. We\u2019ll look at it in detail at this shortly, but first, let\u2019s not forget those tiny details that can give you away in a second.\n  From modifying User-Agent strings to employing more advanced techniques, device spoofing is possible in different ways \u2013 but this also means different ways of discovery.\n  Many people think that spoofing a device is as easy as changing the User-Agent string: we say to them, \u201cclaiming is cheap; show your proof!\u201d\n For example, most spoofing attempts claiming that the device is mobile give the game away immediately. They forget to mimic device-specific features, such as answering questions about touch support negatively.\n   var touch_capable = ( &#39;ontouchstart&#39; in window ) || ( navigator.maxTouchPoints &gt; 0 ) || ( navigator.msMaxTouchPoints &gt; 0 );if(touch_capable) { alert(&#34;Supported&#34;);} else {\talert(&#34;Not Supported&#34;);}\n As we said, device-specific features and information are essential. If you claim that your device is Apple iPhone 6, you have to know device-specific details, at least the screen size of the iPhone 6.\n Have you ever seen an iPhone 6 that has a screen resolution of 1920\u00d71080? We have not and nor have detection systems!\n  Another example: no-one would find it odd that you have a MacBook, if you pass the navigator.platform test successfully:\n  However, you cannot claim that you\u2019re using Max OS X and Windows simultaneously!\n There are more anomalies overlooked while spoofing a device. If you have ever used a mobile browser (of course you have), you know you cannot resize the browser window. It\u2019s always opened, maximized, covering the whole screen. This means for a detection system that the X and Y values of the window should always be 0, and if not..\n Examples regarding device-specific attributes can go on, but it\u2019s time to smile a little.\n  Did you realize that emojis, while typed the same way, are visualized differently in different devices?\n For example, here is a smile emoji, using : and ) for it, and your system converts it to a sweet picture. \ud83d\ude42\n   Let\u2019s say your client claims that it runs on Android OS. A detection system can obtain the hash value of the emoji and compare it with one obtained from a genuine Android system. If the result is not the same, it highlights that you are spoofing your device. It is real magic! Just use a  U+1F600\u00a0and while producing visualization, add a value that defines you amongst others.\n   Here sha256 hashed out of same emoji obtained from different version of Google Chrome on Windows 10 OS.\n   Each system comes with some preinstalled fonts, with certain specific ones used as default. For example, while iOS 13 Academy has Engraved LET Plain:1.0 font preinstalled, it doesn\u2019t have Al Bayan Bold. However, macOS Catalina does!\n Likewise, while Tahoma was the default font in Windows XP, since Vista, it\u2019s been Segoe UI. Microsoft\u2019s  latest font list for Windows 10 comes with a note:\n \u201c Please note: Not all of the Desktop fonts will be in non-desktop editions of Windows 10 such as Xbox, HoloLens, SurfaceHub, etc.\u201d\n So detection systems that probe fonts can decide immediately you\u2019re not a normal Windows 10 if they don\u2019t see fonts listed Microsoft\u2019s page.\n  Up to this point, we examined some issues which give spoofing away, but are not to difficult to find a workaround for. By overriding the browser and shipping font, emoji and binary attributes, it\u2019s a problem that you can tackle, albeit requiring a lot of effort and cost to you.\n Google Picasso understands the browser\u2019s device classification by doing some rendering operations heavily dependent on the OS and graphic hardware.\n  In 2006, Elie Bursztein from the Google anti-abuse team shared his work called Picasso publicly to detail how Google fights device spoofing attempts in Google Play.\n Picasso is designed to understand the browser\u2019s device classification by doing some rendering operations heavily dependent on the browser\u2019s operating system and graphic hardware. By using a seed, Picasso creates geometric symbols on a canvas randomly in each round. Values like seed, round, width, and height are ingredients of Picasso\u2019s operation. In a result, Picasso can get a graphical output produced by the client\u2019s unclonable features like operating system and graphic hardware. The spoofer cannot prevent this unless s/he has the same setup in hand.\n  This system does not mean anything unless a database has precalculated values obtained by using genuine devices. This database is used as a true reference later on.\n  We have to note some important points of Picasso\u2019s work here. For example, it produces graphical work by using HTML canvas. Folks tend to think that canvas is used to increase fingerprint entropy to attain uniqueness.  As Multilogin engineers proved years ago, instead of promising unique fingerprints, canvas hash would be identical in setups with the same ingredients as hardware. In 2006, Google guys started to use this feature of canvas fingerprint to classify devices for understanding device spoofing attempts.\n  Although this is considerably old work (2006), it has been adapted by Cloudflare. When we think about how significant their market share is, Picasso would stand as an unpreventable mechanism for device spoofing attempts.\n As long as opposite sides have a database consisting of precalculated hashes obtained by genuine devices, it seems difficult to escape from Picasso for device and operating system spoofing attempts. Don\u2019t you think Google and Cloudflare have enough datasets to check device authenticity?\n  This quote from poet Rumi could have be tailor-made for our situation. For a long time, we have advised our users when creating browser profiles in Multilogin to be sure to select the correct operating system that the browser profiles work on.\n  Although Multilogin takes some steps to prevent detection systems by shipping fonts with profiles, deliver authentic canvas result default, etc.; the best is to stay authentic as it could be. Leaving operating systems does not mean anything to detection systems; however, detecting a mismatch between supposed settings means a lot!\n The key rule is blending in the crowd for not being the person pointed to by finger. From a device spoofing perspective, as Rumi says, we would suggest: Seem as you are or be as you seem!", "posttime": "2021-06-30 00:38:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u5907,device", "title": "\u6a21\u4eff\u8bbe\u5907\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u80fd ", "title_en": "Mimicking a device is becoming almost impossible", "transed": 1, "url": "https://multilogin.com/why-mimicking-a-device-is-almost-impossible/", "via": "", "real_tags": ["\u8bbe\u5907", "device"]}, {"category": "", "categoryclass": "", "imagename": "6fe6716aeb4784a13640f8db6d127319.jpg", "infoid": 1068645, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Levc\u662f\u7535\u529b\u8303\u56f4 - \u6269\u5c55\u5668\u4f26\u6566\u9ed1\u8272\u9a7e\u9a76\u5ba4\u7684\u516c\u53f8\uff0c\u63a8\u51fa\u4e86\u5b83\u7684\u7b2c\u4e00\u53f0\u7535\u52a8Campervan\u3002\u7535\u5b50\u9732\u8425\u8005\u57fa\u4e8e\u54c1\u724c\u73b0\u6709\u7684VN5\u8303\u56f4\u6269\u5c55\u8303\u56f4\u3002\n \u5b83\u53ef\u4ee5\u5bb9\u7eb3\u591a\u8fbe\u56db\u4e2a\u4eba\uff0c\u5728\u5f39\u51fa\u5c4b\u9876\u4e0a\u6709\u4e24\u4e2a\u7761\u7720\u7a7a\u95f4\uff0c\u800c\u7b2c\u4e8c\u6392\u53f0\u5ea7\u6905\u53ef\u4ee5\u6298\u53e0\u8d77\u6765\u4ee5\u8425\u9020\u4e00\u5f20\u53cc\u4eba\u5e8a\u3002\u5728\u540e\u90e8\uff0c\u7535\u5b50\u9732\u8425\u8f66\u8fd8\u8bbe\u6709\u4e00\u4f53\u5f0f\u7535\u52a8\u53a8\u623f\u548c\u4e2d\u592e\u6298\u53e0\u684c\u3002\n \u65b0\u7684Campervan\u4e0d\u4ec5\u4e0eVN5\u5206\u4eab\u9020\u578b\u7ebf\u7d22\uff0c\u8fd8\u4f7f\u7528\u4e0e\u5176\u5546\u4e1a\u5144\u5f1f\u59d0\u59b9\u76f8\u540c\u7684Ecity\u52a8\u529b\u7cfb\uff0c\u6280\u672f\u4e0a\u4f7f\u7535\u5b50\u9732\u8425\u8005\u6210\u4e3a\u6269\u5c55\u5668\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e0e\u5178\u578b\u7684\u7535\u6c60 - \u7535\u52a8\u8f66\uff08BEV\uff09\u7c7b\u4f3c\u4e8e\u65e5\u4ea7\u53f6\u7247\u6216TESLA\u578b\u53f73\uff0cE-CAMPER\u5728\u5176\u9600\u7f69\u4e0b\u5177\u6709\u6c7d\u6cb9\u53d1\u52a8\u673a\u53d1\u751f\u5668\uff0c\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u4e3a31kWh\u7535\u6c60\u5145\u7535\u3002\n  \u7531\u4e8e\u7535\u6c60\u5c3a\u5bf8\u76f8\u5bf9\u8f83\u5c0f\uff0c\u7535\u5b50\u9732\u8425\u673a\u5177\u670960\u82f1\u91cc\u7684\u7eaf\u7535\u6c14\u8303\u56f4\u3002\u7136\u800c\uff0cLevc\u58f0\u79f0Campervan\u5728\u4f7f\u7528\u8303\u56f4\u6269\u5c55\u5668\u65f6\u7684\u603b\u8303\u56f4\u53ef\u8fbe304\u82f1\u91cc\u3002\u6b64\u52a8\u529b\u603b\u6210\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u6d89\u53ca\u8303\u56f4\u5e76\u4e14\u9700\u8981\u5145\u503c\u65f6\u7684\u9650\u5236\u8f83\u5c11\uff0c\u4f46\u5f53\u7136\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u5316\u77f3\u71c3\u6599\u3002\n Levc Ceo Jofmann\u6982\u8ff0\u4e86\u5373\u5c06\u4e3e\u884c\u7684\u7535\u5b50\u9732\u8425\u8005\uff1a\u201cCampervan\u5e02\u573a\u6b63\u5728\u8fc5\u901f\u589e\u957f\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u8f66\u8f86\u7528\u4e8e\u6cbf\u6d77\u548c\u4e61\u6751\u5192\u9669\uff0c\u4f46\u901a\u5e38\u5305\u62ec\u56fd\u5bb6\u516c\u56ed\u548c\u4fdd\u62a4\u533a\uff0c\u4ed6\u4eec\u4ecd\u7136\u7531\u6c7d\u6cb9\u4f9b\u7535\u6216\u67f4\u6cb9\u53d1\u52a8\u673a\u3002\u201c\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u96f6\u6392\u653e\u80fd\u529b\u7684\u7535\u5b50\u9732\u8425\u8005\u63d0\u4f9b\u4e86\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u914d\u5907\u4e86\u9ad8\u8d28\u91cf\u7684\u529f\u80fd\uff0c\u53ef\u6839\u636e\u6ee1\u8db3\u4e00\u7cfb\u5217\u5ba2\u6237\u8981\u6c42\u6765\u5b9a\u5236\u3002\u201d\n \u82f1\u56fd\u7535\u5b50\u9732\u8425\u8005\u7684\u4ef7\u683c\u4ece62,250\u82f1\u9551\uff08\u4e0d\u5305\u62ec\u589e\u503c\u7a0e\uff09\u5f00\u59cb\uff0c\u968f\u65f6\u9884\u8ba1\u5c06\u5f00\u59cb\u4e8e\u4eca\u5e74\u5e74\u5e95\u3002\n \u65b0\u76842021 eV6\u7535\u52a8SUV\uff1a\u8be6\u60c5\uff0c\u56fe\u7247\uff0c\u4ef7\u683c\u548c\u9500\u552e\u65e5\u671fKia\uff06\uff0339; S\u65d7\u8230\u7535\u52a8\u8f66\u5728\u4e00\u6b21\u5145\u7535\u4e2d\u6700\u591a\u53ef\u8fbe316\u82f1\u91cc\uff0c\u4ec5\u572818\u5206\u949f\u5185\u4ece10-80\uff05\u5145\u7535;\u53ef\u5728...\u4e2d\u8ba2\u8d2d \n2021\u5e74\u8fbe\u5361\u6625\u5b63\u7535\u52a8\u6c7d\u8f66\uff1a\u82f1\u56fd\u53d1\u5c04\u4ecd\u88ab\u8ba4\u4e3a\u662f\u8fbe\u5361\u7684\u524a\u51cf\u7535\u52a8\u57ce\u5e02\u6c7d\u8f66\u662f\u6b27\u6d32\u6700\u4fbf\u5b9c\u7684\u96f6\u6392\u653e\u6a21\u5f0f\u4e4b\u4e00\uff0c\u4ece\u653f\u5e9c\u62e8\u6b3e\u540e\u7684\u521a\u521a\u8d85\u8fc710,500\u82f1\u9551\u3002  EcoTricity\u7535\u6c14\u516c\u8def\u5145\u7535\u7f51\u7edc\u7684\u5b8c\u6574\u6307\u5357\u9700\u8981\u5728Ecotricity\u7535\u6c14\u516c\u8def\u7f51\u7edc\u4e0a\u5411\u7535\u52a8\u8f66\u5145\u7535\uff1f \u8fd9\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u7684\u6210\u672c\u662f\u591a\u5c11\u4ee5\u53ca\u5982\u4f55\u652f\u4ed8 ", "note_en": "LEVC, the company behind the  electric range-extender London black cab, has unveiled its first electric campervan. The e-Camper is based on the brand\u2019s existing  VN5 range-extender van.\n It can accommodate up to four people, with sleeping space for two in the pop-up roof, while the second-row bench seats can be folded down to create a double bed. In the rear, the e-Camper also features an integrated electric kitchenette and central folding table.\n Not only does the new campervan share styling cues with the  VN5, but it also uses the same eCity powertrain as its commercial sibling, technically making the e-Camper a  range-extender. That means, unlike a typical  battery-electric vehicle (BEV) like a  Nissan Leaf or  Tesla Model 3, the e-Camper has a petrol-engine generator under its bonnet that can recharge the 31kWh battery when needed.\n  Due to that relatively small battery size, the e-Camper has a pure-electric range of 60 miles. However, LEVC claims the campervan has a total range of up to 304 miles when the range-extender is employed. The main advantage of this powertrain is there are fewer limitations when it comes to range and needing to recharge, but of course this solution does still require the use of fossil fuels.\n LEVC CEO Joerg Hofmann said of the forthcoming e-Camper: \u201cThe campervan market is growing rapidly and, despite these vehicles being used for coastal and countryside adventures, which often include national parks and protected areas, they&#39;re still powered by petrol or diesel engines.\u201d He added: \u201cOur zero-emissions-capable e-Camper offers the perfect solution and is well equipped with high-quality features that can be tailored to meet a range of customer requirements.\u201d\n Prices for the e-Camper in the UK start from \u00a362,250 (excluding VAT), with deliveries expected to begin towards the end of the year.\n New 2021 Kia EV6 electric SUV: details, pictures, price and on-sale date  Kia&#39;s flagship electric car is capable of up to 316 miles on a single charge and recharging from 10-80% in just 18 minutes; available to order in the \u2026\n 2021 Dacia Spring electric car: UK launch still being considered  Dacia\u2019s cut-price electric city car is one of the cheapest zero-emissions models in Europe, starting from just over \u00a310,500 after government grants in\u2026\n Complete guide to the Ecotricity Electric Highway charging network  Need to charge your electric vehicle on the Ecotricity Electric Highway network? Here\u2019s how it works, how much it costs and how to pay", "posttime": "2021-06-30 00:37:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u51fa,camper,\u8303\u56f4", "title": "Levc\u63a8\u51faE-Camper Range-Extender\u7535\u52a8\u9732\u53f0 ", "title_en": "LEVC unveils e-Camper range-extender electric camper", "transed": 1, "url": "https://www.drivingelectric.com/levc/40669/levc-unveils-e-camper-range-extender-electric-camper", "via": "", "real_tags": ["\u63a8\u51fa", "camper", "\u8303\u56f4"]}, {"category": "", "categoryclass": "", "imagename": "fd8dfc3656ed29b96269b1cca4e9254d.jpg", "infoid": 1068644, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\nWarning: Can only detect less than 5000 characters\nWarning: Can only detect less than 5000 characters\nZuckerman\u662f\u4e00\u4e2a\u6709\u4e89\u8bae\u7684\u4eba\u7269\uff0c\u51fa\u4e8e\u8d85\u8d8a\u5929\u6587\u5b66\u7684\u539f\u56e0\u3002\u9664\u4e86\u4f5c\u4e3a\u5929\u6587\u5b66\u7684\u6559\u6388\uff0cZuckerman\u662f\u4e00\u4e2a\u70ed\u60c5\u548c\u7ec8\u8eab\u7684\u53cd\u79fb\u6c11\u6d3b\u52a8\u5bb6\u3002\u901a\u8fc7Zuckerman\u7684\u6240\u6709\u60f3\u6cd5\uff0c\u6709\u4e00\u4e2a\u660e\u663e\u7684\u54f2\u5b66\u7ebf\u7a0b\uff1a\u4ed6\u7684\u957f\u671f\u53cd\u5bf9\u79fb\u6c11\u548c\u4ed6\u7684seti\u6000\u7591\u662f\u540c\u4e00\u786c\u5e01\u7684\u4e24\u9762\u3002\u8fd9\u5728\u7eb8\u8d28\u5357\u65b9\u5199\u5728\u4ed6\u7684\u4e66\u7c4d\u5916\u661f\u4eba\u4e2d\uff0c\u8fd9\u662f\u6e05\u695a\u7684\uff1a\u4ed6\u4eec\u5728\u54ea\u91cc\uff1f \uff08\u7b2c\u4e8c\u5c4a\uff0c1995\u5e74\uff09\uff0c\u4e00\u672c\u91c7\u7528\u8fc8\u514b\u5c14\u00b7\u54c8\u7279\uff08Michael Hart\uff09\u7684\u4e66\uff0c\u4ed6\u662f\u4e00\u4e2a\u516c\u5f00\u5021\u5bfc\u6cbf\u7740\u79cd\u65cf\u7ebf\u5206\u533a\u7f8e\u56fd\u7684\u767d\u8272\u6c11\u65cf\u4e3b\u4e49\u8005\u3002\u672c\u6587\uff0c\u201c\u6052\u661f\u6f14\u5316\uff1a\u5927\u4f17\u661f\u9645\u8fc1\u5f99\u7684\u52a8\u673a\u201d\uff081985\u5e74\uff09\u8ba4\u4e3a\uff0c\u9762\u5bf9\u6052\u661f\u53bb\u4e16\u7684\u5916\u661f\u6587\u660e\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u6700\u7ec8\u9003\u79bb\u4ed6\u4eec\u4e3a\u66f4\u73af\u4fdd\u7684\u7267\u573a\u7684\u5bb6\u5ead\u7cfb\u7edf\u3002\u4ed6\u5199\u9053\uff0c\u201c\u5927\u89c4\u6a21\u7684\u8fc1\u79fb\u4f3c\u4e4e\u662f\u6700\u6709\u53ef\u80fd\u7684\u3002\u201d\u4ed6\u8fd8\u62c5\u5fc3\u8fd9\u4e9b\u79fb\u6c11\u4eba\u53e3\u53ef\u80fd\u5728\u5b87\u5b99\u7684\u539f\u59cb\u89d2\u843d\u4e2d\u7684\u5f71\u54cd\uff1a\u5728\u4ed6\u7684\u8bba\u6587\u7ed3\u675f\u65f6\uff0c\u4ed6\u5728\u53d7\u5f71\u54cd\u7684\u793e\u4f1a\u62c5\u5fc3\u4fdd\u7559\u7684\u5371\u673a\u4e2d\uff0c\u4ed6\u603b\u7ed3\u4e86\u201c\u5728\u4e00\u4e2a\u5fc3\u7231\u7684\u5bb6\u5ead\u660e\u661f\u7684\u5371\u673a\u4e2d\u3002\u8352\u91ce\u5730\u533a\u201c\uff1f'\n Zuckerman\u7684\u6781\u7aef\u73af\u4fdd\u4e3b\u4e49\u53cd\u79fb\u6c11\u60c5\u7eea\u7684\u8054\u7cfb\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u4ed6\u7684\u6fc0\u52b1\u63a8\u5b9a\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u751f\u6d3b\u7684\u5730\u65b9\u662f\u7279\u6b8a\u7684\uff0c\u800c\u4f20\u5165\u7684\u79fb\u6c11\u4eba\u53e3\u5c06\u6b96\u6c11\u548c\u6c61\u67d3\u5b83\u3002\u5c06\u8fd9\u4e00\u539f\u5219\u5e94\u7528\u4e8e\u4ed6\u7684\u672c\u571f\u52a0\u5229\u798f\u5c3c\u4e9a\uff0c\u4ed6\u53cd\u5bf9\u79fb\u6c11\u3002\u5c06\u5b83\u5e94\u7528\u4e8e\u661f\u661f\uff0c\u5b83\u6307\u5bfc\u4ed6\u60f3\u8c61\u5176\u4ed6\u751f\u7269\u7684\u65b9\u5f0f\u3002 Zuckerman\u5e76\u4e0d\u8ba4\u4e3a\u4ee5\u548c\u5e73\u7684\u660e\u667a\u52a9\u4eba\uff0c\u751a\u81f3\u662f\u6bc1\u706d\u6027\u7684\u6218\u4e89\u6027\u5f3a\u70c8\u7684\u6218\u4e89\u529b\u91cf\u3002\u5bf9\u4e8eZuckerman\u6765\u8bf4\uff0c\u5916\u661f\u4eba\u662f\u9003\u79bb\u60b2\u5267\u7684\u79fb\u6c11\uff0c\u4ed6\u5c06\u6c38\u4e45\u5730\u548c\u4e0d\u53ef\u9006\u8f6c\u5730\u6b96\u6c11\u6b96\u6c11\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fbe\u5230\u4e86Zuckerman\u7684\u54f2\u5b66\u53cd\u5bf9\u6765\u5230Seti\uff1a\u56e0\u4e3a\u6211\u4eec\u7684\u592a\u9633\u7cfb\u4ecd\u7136\u4e0d\u7ed3n\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u5916\u661f\u4eba\u3002\n \u8fd9\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u5929\u6587\u793e\u533a\uff0c\u8bf4\u516c\u5e73\u5730\u8bf4\uff0c\u6ca1\u6709\u5bf9Loeb\u7684\u60f3\u6cd5\u70ed\u70c8\u53cd\u5e94\u3002\u5728'OUMUAMUA\u7684\u53d1\u73b0\u4e4b\u540e\uff0c\u6301\u6000\u7591\u6001\u5ea6\u7684\u610f\u89c1\u5f88\u5feb\u5c31\u5f00\u59cb\u6eda\u52a8\u3002 \u201c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b87\u5b99\u98de\u8239\uff0c\u201d\u5973\u738b\u5927\u5b66\u8d1d\u5c14\u6cd5\u65af\u7279\u7684\u5929\u6587\u5b66\u5bb6Michele Bannister\u8868\u793a\uff0c2017\u5e74\u5e95\u4e3a\u6709\u7ebf\u6742\u5fd7\u91c7\u8bbf\u3002\u66f4\u591a\u6700\u65b0\u8bba\u6587\u7ee7\u7eed\u8fd9\u4e00\u4e3b\u9898\uff1a\u5723\u8def\u6613\u65af\u534e\u76db\u987f\u5927\u5b66\u7684\u7269\u7406\u5b66\u6559\u6388Jonathan Katz\uff0c\u4e8e3\u67082021\u5e74\u51fa\u7248\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u5176\u79f0\u4e3a\u672c\u8eab\u7684\u6807\u9898\uff1a''\u52aa\u59c6\u7a46\u739b\u4e0d\u662f\u4eba\u4e3a\u7684\u3002 Twitter\u4e0a\u7684\u79d1\u5b66\u5bb6\u4eec\u8d8a\u6765\u8d8a\u5c11\uff1aBenjamin Weiner\uff0c\u4e9a\u5229\u6851\u90a3\u5927\u5b66\u7684\u5929\u6587\u5b66\u5bb6\uff0c\u88ab\u6307\u63a7\u4e3a\u201c\u4e0d\u826f\u884c\u4e3a\u201d\u548c\u201c\u8bef\u5bfc\u516c\u4f17\u201d\u3002\n \u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u8fd9\u79cd\u6279\u8bc4\u7387\u88ab\u5c16\u9510\u7684\u6551\u6d4e\uff0cDurin\n...... ", "note_en": "There\u2019s an iconic moment, filmed in the shadow of the Very Large Array in New Mexico, that many people who visit this giant telescope try to duplicate. A young astronomer sits cross-legged on the bonnet of her car, the towering line of radio dishes vanishing into the distance behind her. With her laptop in front of her, she\u2019s listening intently to a giant pair of headphones, held upside down so that the strap hangs below her chin. The shot is from the film  Contact (1997), and the astronomer,  Dr Eleanor Arroway (played by Jodie Foster), is listening, awestruck, to the first signal from an extraterrestrial intelligence. Having worked as a professional astronomer for more than a decade, I\u2019ve met a number of colleagues for whom the film was an important part of their childhood. Many modern astronomers are driven by the ideals that  Contact speaks to: the awe of discovery, and the search for company somewhere in this vast and empty Universe.\n On  19 October 2017, the astronomer Robert Weryk  spotted something rather extraordinary: a splinter of rock, just a few hundred metres across, tumbling through our inner solar system. Not much to write home about, you might think: there are more than 750,000 known asteroids and comets in our cosmic backyard, and countless millions more waiting to be discovered. But this object was very, very special. As his team would soon discover, this piece of flying cosmic debris could only have come from outside of our own solar system. The human race had found its first ever interstellar traveller.\n The object was soon named \u02bbOumuamua: Hawaiian for \u2018first distant messenger\u2019 or \u2018scout\u2019 (and pronounced the way one might write an ode to a cow: \u2018Oh, moo-er, moo-er\u2019). More than three years later, the debate over \u02bbOumuamua\u2019s true nature has spilled beyond the borders of academic astronomy and into the popular imagination. One reason why is obvious: a visitor from the stars \u2013 not in any metaphorical sense, but a real, tangible object right here, in our cosmic backyard \u2013 forces us to see ourselves as a small part of a wider Universe that exists far beyond our imaginative shores. There\u2019s another reason, too: in our current space-faring culture, just as we\u2019re launching missions to the planets and dreaming of visiting the stars, it\u2019s inevitable that a tantalising question would arise \u2013 what if \u02bbOumuamua is more than a simple inanimate object?\n The existence of extraterrestrial life is one of humanity\u2019s great driving questions. The ancient Greek philosophers before Socrates debated the \u2018plurality of worlds\u2019, and who among us hasn\u2019t looked up at the stars at some point and wondered if there wasn\u2019t someone, somewhere, looking back? In the latter half of the  20th century, this enduring fascination crystallised into a systematic scientific search effort, known as SETI: the Search for Extraterrestrial Intelligence. But after more than six decades of hunting for radio signals from nearby stars, we\u2019re as alone as we ever were. When we speculate about life elsewhere in the Universe, we\u2019re doing that most dangerous of things, from a scientific perspective: extrapolating from a single data point, that of human existence. This combination of a profound and universal yearning, undercut by a total absence of evidence, has allowed the question of extraterrestrials to become a cosmic blank canvas, onto which it\u2019s possible to project our hopes and our fears, our deepest insecurities and our loftiest desires. Our answer to the question of whether or not extraterrestrial intelligence might exist often tells us more about the baggage we bring than anything about the Universe as it really is.\n Victorians of the late  19th century, living in the era of ambitious engineering, looked at  Mars and saw globe-spanning canals \u2013 evidence, they believed, of a grand industrial civilisation mirroring their own. In the Cold War 1960s, as millions lived under the shadow of potential nuclear annihilation, \u2018neocatastrophism\u2019 \u2013 the theory that extraterrestrial civilisations are inevitably wiped out by violent events \u2013 emerged as an explanation for our apparent cosmic solitude. The Argentinian Trotskyist  J Posadas was convinced that advanced aliens would be socialists; more recently, the Vatican\u2019s then-chief astronomer Jos\u00e9 Gabriel Funes suggested in 2008 that extraterrestrials might share a close relationship with God. We scientists tend to believe that intelligent extraterrestrials will be builders of technology, fluent in the universal language of mathematics. In  Contact, the aliens announce their presence by beaming prime numbers at us, and many of our messages broadcast to the stars consist of physics and mathematics wrapped up in binary code. This perspective on aliens as scientific rationalists underlies most of modern SETI. It\u2019s a viewpoint that I happen to agree with. Then again, I\u2019m a scientist: of course  I do.\n These labours of imagination aren\u2019t intrinsically bad for science. Indeed, when faced with a new intellectual frontier, lacking in evidence but with plenty of tantalising questions, speculation is inevitable. It allows us to consider ideas that populate an intellectual landscape beyond our evidential horizons. Without speculation, our thinking would never develop and science would be stagnant. Many established scientific theories started out as pure conjecture: the Arabic intellectual Ibn  al-Khatib made his  suggestion that plagues result from contagion by minute bodies in   c 1362 CE, hundreds of years before microscopes provided evidence for his ideas. The ancient Greek philosopher Democritus proposed that matter was made of tiny \u2018atoms\u2019 more than  2,000 years before any proof arrived. Nicolaus Copernicus\u2019s theory that Earth orbits the Sun was made in 1543, decades before Galileo used his new telescope to show that Copernicus was correct. Speculation and imagination are very much the creative force driving the advancement of scientific knowledge.\n  But scientists are human, and our flights of imaginative fancy are inevitably influenced by our existing ideas, our politics and our ideologies. Nowhere is this clearer than the topic of extraterrestrial life: when we wonder about the other minds with whom we might share our Universe, we\u2019ve always tended to conjure up reflections of ourselves. And \u02bbOumuamua, a cosmic traveller flung out from some distant star system, has sparked the latest chapter of this long-running saga.\n The discovery that made history came in late 2017. The Panoramic Survey Telescope and Rapid Response System (Pan-STARRS) spotted a faint speck in the sky that didn\u2019t correspond to anything in the near-Earth object catalogues. Astronomers soon realised that this object was in the process of leaving our solar system: it had already swung around the Sun, and would soon pass Mars\u2019s orbit on the way out. The speck \u2013 initially given the memorable moniker \u2018P10Ee5V\u2019 \u2013 was moving fast, flying away from the Sun at around  100,000 kilometres per hour. Over the course of six days, astronomers around the world used telescopes to carefully track its motion: by combining these observations with some basic knowledge of gravity, it was possible to re-trace the object\u2019s steps, mapping out its entire orbit around the Sun. A message circulated around the astronomical world on  25 October 2017, describing the object \u2013 by now given the slightly improved name \u2018COMET C/2017 U1 (PANSTARRS)\u2019 \u2013 as \u2018very weird\u2019, and listing a few numbers that described the size and shape of its orbital path. The number that caused the uproar was something called the \u2018orbital eccentricity\u2019, measured to be around 1.2. This perfectly innocuous number had deeply cosmic implications.\n  The shape of a planet\u2019s orbit around a star is something called an \u2018ellipse\u2019, a sort of squashed circle. The amount that a planet\u2019s orbit deviates from a perfect circle is called its \u2018orbital eccentricity\u2019. Earth\u2019s orbit is only very slightly squashed, with an eccentricity  of 0.017. You\u2019d have to look very closely to see that we don\u2019t orbit around the Sun in a perfect circle. Pluto\u2019s orbit, on the other hand, is very squashed indeed: it looks egg-shaped and, at times, Pluto is closer to the Sun than Neptune is. Pluto\u2019s obviously wonky orbit has an eccentricity  of 0.25. These numbers can go higher: Eris, the second largest dwarf planet in our solar system has an orbital eccentricity  of 0.44, and little Sedna, three times further out than Neptune, comes in  at 0.85. Comets have some of the most eccentric orbits of all, spending most of their life out in the far frozen reaches of the solar system and only occasionally dipping close to the Sun. Halley\u2019s Comet has an orbital eccentricity  of 0.97, and NEOWISE (which lit up the skies in the summer of 2020) is almost as eccentric as they come,  at 0.999.\n At this point, you\u2019ll have noticed something. All of these objects, which are part of our solar system, have orbital eccentricities lower  than 1. When it comes to orbital eccentricity,  1 is the magic number. Once your orbit hits an eccentricity  of 1 (or higher), you\u2019re no longer gravitationally bound to the thing you\u2019re orbiting: strictly speaking, you aren\u2019t \u2018orbiting\u2019 at all, and are destined to fly off into the interstellar darkness.\n So \u2013 back to our weird speck, COMET C/2017 U1 (PANSTARRS). An orbital eccentricity  of 1.2 meant that there was no way that this object was in orbit around our Sun. It could only have come from outside our solar system: from interstellar space. What we had found was a visitor from another star system. A more dignified name was in order: it was soon dubbed 1I/\u02bbOumuamua.\n As you might imagine, all this got the world\u2019s attention. Within hours of the announcement, telescopes around the globe were pointed at \u02bbOumuamua, hoping to learn as much as possible about our visitor before it vanished forever into the dark. We quickly learned that the light reflecting from \u02bbOumuamua was reddish, similar to some asteroids in our own solar system that are covered in organic silicates, carbon and ice. Any sense of normality stopped there, however.\n The first oddity was the light curve \u2013 that is, the way \u02bbOumuamua changed brightness over time. Repeating every eight hours or so, \u02bbOumuamua got brighter, then dimmed, and then brightened again. This meant that \u02bbOumuamua must be a spinning asymmetrical object: it looked brightest when its largest surface was pointing towards us, and vice versa. What was surprising was the extreme difference between these two states. Normal, slightly misshapen asteroids get  maybe 20 or  30 per cent brighter and dimmer as they spin. The light from \u02bbOumuamua, on the other hand, was varying by a factor  of 10. \u02bbOumuamua had to be something very long and thin: a cigar-shape, or maybe a flat pancake, a few hundred metres wide but just tens of metres across. Completely different, in other words, from the mostly spherical (or dumpily potato-shaped) asteroids that populate our inner solar system. \u02bbOumuamua, our first interstellar visitor, was like nothing we\u2019d seen before.\n  This is the point at which many people \u2013 including some astronomers \u2013 started using the \u2018A\u2019-word.  Artificial. The comparison to a discarded rocket or a science-fiction flying saucer was inescapable: the rocket that took astronauts to the Moon, Saturn V, measured 110m by 10m \u2013 eerily similar to our interstellar visitor. Things got weirder still just a few months later. In the summer of 2018, the astronomer Marco Micheli published a  paper in  Nature announcing that his team had tracked \u02bbOumuamua\u2019s motion more accurately than ever before. Their headline finding was simple: \u02bbOumuamua was speeding up. The effect was subtle \u2013 they weren\u2019t seeing \u02bbOumuamua blasting off to the stars \u2013 but there was clearly something non-gravitational afoot. Something was pushing \u02bbOumuamua faster and faster. It wasn\u2019t long before SETI swung into action, and some of the best alien-hunting machines on the planet were turning their attention towards \u02bbOumuamua. Several radio telescopes focused on the object, hunting for any possible electronic chatter it might be putting out. The result, however, was silence.\n The astronomical community rose to the challenge of explaining \u02bbOumuamua, with more than  200 papers to date discussing our interstellar visitor. Explanations have ranged from the mundane (\u02bbOumuamua is the middle of a comet) to the esoteric (\u02bbOumuamua is a nugget of dark matter). Some groups proposed that the acceleration might be due to excess heat radiation: due to its unusual shape, \u02bbOumuamua could be radiating most of its heat behind it as it travelled. Such \u2018radiative anisotropy\u2019 has been known to push things around in deep space (most notably the Pioneer probe, the strange acceleration of which was a mystery for years). Other papers suggested \u02bbOumuamua\u2019s motion could be explained by \u2018outgassing\u2019 \u2013 the Sun boiling ice under the surface, producing gas that spurted out like a rocket engine. Comets \u2013 and even some asteroids \u2013 in our own solar system do this all the time. Observations indicated that \u02bbOumuamua had no coma \u2013 a nebulous envelope of gas \u2013 but this excluded only gasses that we can see. If \u02bbOumuamua was a chunk of frozen hydrogen, perhaps chipped off a distant star\u2019s equivalent of Pluto, all of the weird behaviour gets explained rather neatly.\n The problem is that \u02bbOumuamua is gone. By now it\u2019s billions of kilometres from Earth, and getting farther away all the time. Unless a very expensive chase mission is launched very soon, \u02bbOumuamua might remain shrouded in mystery forever.\n There\u2019s a name that, by now, has become conspicuous by its absence. If you\u2019ve read even one story about \u02bbOumuamua over the past four years, you\u2019ll almost certainly have come across it: Abraham \u2018Avi\u2019 Loeb, professor of science at Harvard University, and his claim that \u02bbOumuamua is an alien artefact.\n Together with his Harvard colleague, Shmuel Bialy, Loeb published the  paper \u2018Could Solar Radiation Pressure Explain \u02bbOumuamua\u2019s Peculiar Acceleration?\u2019 (2018). In other words, could the acceleration be caused by the pressure of sunlight? This innocuous hook was the precursor to a startling conclusion: the pressure from sunlight could work, but not if \u02bbOumuamua was a lump of rock. The strange acceleration could be chalked up to solar radiation pressure if \u02bbOumuamua was an artificial construction: a solar sail, built to traverse the galaxy on a wind of light.\n Loeb has done more than engage in purely dispassionate scientific theorising. What has led to him hitting headlines around the world is his evangelical mission to convince the public that aliens have visited. Loeb has written a long string of popular articles arguing that the best explanation for \u02bbOumuamua is an alien solar sail. He followed these up with a  book,  Extraterrestrial: The First Sign of Intelligent Life Beyond Earth (2021), in which he\u2019s even more vehement: in it, he writes \u2018\u02bbOumuamua must have been designed, built, and launched by an extraterrestrial intelligence.\u2019 In a recent interview promoting the book (headlined \u2018Astronomer Avi Loeb Says Aliens Have Visited, And He\u2019s Not Kidding\u2019), Loeb highlights what he calls a \u2018crisis\u2019 in science, saying that his colleagues in the astronomical community are \u2018not using common sense\u2019, and castigating his most vocal critics as \u2018mediocre scientists\u2019. In late June 2021, Loeb is scheduled to speak at Contact in the Desert, which describes itself as the \u2018world\u2019s largest UFO conference\u2019, where he\u2019ll share a stage with speakers discussing psychic remote viewing, crop circles and alien abduction.\n What\u2019s disturbing to many of Loeb\u2019s (many) critics isn\u2019t the ideas themselves, but the distinctly unscientific certainty with which he presents them to the public. He\u2019s said that the alien hypothesis is \u2018much more likely\u2019, and that his ideas are \u2018not speculative at all\u2019. But as is so often the case, Loeb\u2019s speculations \u2013 which is what they are \u2013 are informed by his existing ideas and politics. Loeb is heavily involved with the project Breakthrough Starshot, an engineering initiative founded in 2016 by the billionaire Yuri Milner with one goal: to build a solar sail, and send a probe to another star system. Loeb chairs the project\u2019s advisory committee and, as a result, since 2016 has been a vocal public advocate for solar-sail technology. Around a year later, \u02bbOumuamua came through our solar system, and ever since Loeb has been on a one-man mission to convince the world that we picked up the trail of an alien solar sail.\n  Loeb isn\u2019t the only scientist to fall prey to ideologically motivated speculation: in fact, we can see the same dynamic in the arguments of some of his detractors. In February 2021, the astrophysicist Benjamin Zuckerman of the University of California, Los Angeles published the  paper \u2018\u02bbOumuamua Is Not a Probe Sent to our Solar System by an Alien Civilization\u2019. Zuckerman\u2019s overarching theory is simple: \u02bbOumuamua can\u2019t be an alien spaceship, because aliens simply don\u2019t exist. Zuckerman is an ardent SETI sceptic, and the author of the  paper \u2018Why SETI Will Fail\u2019 (2002), in which he argues that extraterrestrial intelligence must at least be exceedingly rare, because otherwise they would have come to visit us.\n Zuckerman is a controversial figure, for reasons that go beyond the astronomical. As well as being a professor emeritus of astronomy, Zuckerman is an ardent and lifelong anti-immigration activist. There\u2019s a clear philosophical thread running through all of Zuckerman\u2019s ideas: his long-term opposition to immigration and his SETI scepticism are two sides of the same coin. This is made clear in a paper Zuckerman wrote in his  book  Extraterrestrials: Where Are They? (2nd ed, 1995), a book he co-edited with Michael Hart, a white nationalist who openly advocates for partitioning the United States along racial lines. The  paper, \u2018Stellar Evolution: Motivation for Mass Interstellar Migrations\u2019 (1985), argues that extraterrestrial civilisations, facing the death of their star, will inevitably end up fleeing their home systems for greener pastures. \u2018Massive migration seems the most likely possibility,\u2019 he writes. He also worries about the effect these migrant populations might have on our pristine corner of the Universe: at the end of his paper, he concludes \u2018in a crisis such as the death of one\u2019s beloved home star, would the affected society worry about preserving \u201cwilderness areas\u201d?\u2019\n The link to Zuckerman\u2019s extreme environmentalist anti-immigration sentiments is obvious. His motivating presumption is simple: the place we live is special, and incoming migrant populations will colonise and pollute it. Applying this principle to his native California, he opposes immigration. Applying it to the stars, it guides the way he imagines other beings. Zuckerman doesn\u2019t conceive of extraterrestrials as wise benefactors coming in peace, or even a warlike force hellbent on destruction. For Zuckerman, extraterrestrials are migrants fleeing tragedy, who will permanently and irreversibly colonise our homeland. And so we reach Zuckerman\u2019s philosophical opposition to SETI: because our solar system remains uncolonised, extraterrestrials must therefore not exist.\n The wider astronomical community, it\u2019s fair to say, hasn\u2019t responded warmly to Loeb\u2019s ideas. Sceptical opinions began to roll in soon after \u02bbOumuamua\u2019s discovery. \u2018It\u2019s not a spacecraft,\u2019 said Michele Bannister, an astronomer at Queen\u2019s University Belfast, in a late-2017 interview for  WIRED magazine. More up-to-date papers have continued this theme: Jonathan Katz, professor of physics at Washington University in  St Louis, published a  paper in March 2021, the title of which speaks for itself: \u2018\u02bbOumuamua Is Not Artificial\u2019. Scientists on Twitter were less measured: Benjamin Weiner, an astronomer at the University of Arizona, accused Loeb of \u2018bad behaviour\u2019 and \u2018misleading the public\u2019.\n This critique was thrown into sharp relief earlier this year, durin\n......", "posttime": "2021-06-30 00:33:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5916\u661f\u4eba,alien,\u79fb\u6c11", "title": "Oumuamua\uff0c\u5916\u661f\u4eba\u4eba\u5de5\u5236\u54c1\u6216\u661f\u9645\u788e\u7247\uff1f ", "title_en": "Oumuamua, alien artefact or interstellar debris?", "transed": 1, "url": "https://aeon.co/essays/aliens-science-and-speculation-in-the-wake-of-oumuamua", "via": "", "real_tags": ["\u5916\u661f\u4eba", "alien", "\u79fb\u6c11"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068643, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8f6f\u4ef6\u884c\u4e1a\u4e2d\uff0c\u6709\u4e00\u4e2a\u6545\u610f\u8bbe\u8ba1\u7684\u672f\u8bed\uff0c\u8fd9\u610f\u89c1\u4e86\u7528\u6237\u505a\u67d0\u4e8b\uff0c\u8fd9\u662f\u6709\u610f\u8bc6\u6216\u4e0b\u610f\u8bc6\u7684 - \u4e00\u4e2a\u201c\u9ed1\u6697\u7684\u6a21\u5f0f\u201d\u3002\u8fd9\u4e9b\u6a21\u5f0f\u7531\u793e\u4ea4\u5a92\u4f53\u7f51\u7edc\uff0c\u7535\u5b50\u5546\u52a1\uff0c\u89c6\u9891\u6e38\u620f\u548c\u66f4\u591a\u5730\u5229\u7528\u3002\n \u6211\u6b63\u5728\u91cd\u65b0\u5efa\u9020\u4e00\u4e2a\u540d\u4e3a\u201c\u4ed6\u5988\u7684\u4f60\u201d\u6a21\u5f0f\u7684\u65b0\u672f\u8bed\uff0c\u76ee\u524d\u96c7\u7528\u4e86Instagram\u3002\n \u6211\u559c\u6b22\u732b\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u4e92\u8054\u7f51Meme\u79f0\u4e3a\u201c\u793c\u8c8c\u7684\u732b\u201d\uff0c\u5426\u5219\u79f0\u4e3aOllie\u3002\u6211\u60f3\u5728\u4eca\u5929\u7684Instagram\u4e0a\u533f\u540d\u6d4f\u89c8Ollie\u7684\u4e00\u4e9b\u7167\u7247\uff0c\u4f46\u662f\u5728\u6211\u6cae\u4e27\u7684\u60c5\u51b5\u4e0b\uff0cInstagram\u5c06\u5728\u5bfc\u822a\u5230Ollie\u7684Instagram\u9875\u9762\u540e\uff0c\u6211\u5c06\u8feb\u4f7f\u6211\u767b\u5f555\u79d2\u949f\u3002\u9664\u975e\u6211\u662fA / B\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\uff0c\u5426\u5219\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u6b64\u4e3e\uff0c\u5e76\u5e94\u5728\u684c\u9762\u4e0a\u83b7\u5f97\u76f8\u540c\u7684\u884c\u4e3a\u3002\n \u7531\u4e8e\u6211\u662f\u4e00\u4e2a\u6280\u672f\u4eba\u5458\uff0c\u6211\u8bd5\u56fe\u53ea\u9700\u5220\u9664\u6d4f\u89c8\u5668\u68c0\u67e5\u5668\u4e2d\u7684\u6a21\u6001\u3002\u5b83\u6709\u70b9\u5de5\u4f5c\uff0c\u4f46\u6211\u65e0\u6cd5\u5728\u9875\u9762\u4e0a\u8fdb\u4e00\u6b65\u6eda\u52a8\u3002\u5c1d\u8bd5\u8fc7\u51e0\u6b21\u5c1d\u8bd5\u540e\uff0c\u6211\u518d\u4e5f\u65e0\u6cd5\u770b\u5230\u4e86Ollie\u7684\u9875\u9762\u3002\u6bcf\u6b21\u5c1d\u8bd5\u8bbf\u95ee\u5b83\u65f6\uff0c\u6211\u7acb\u5373\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762\u3002\n \u6211\u4e0d\u786e\u5b9a\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002 Instagram\u6293\u4f4f\u4e86\u6211\u8bd5\u56fe\u7ed5\u8fc7\u4ed6\u4eec\u7684\u767b\u5f55\u6a21\u6001\u5417\uff1f\u6211\u662f\u5426\u88ab\u963b\u6b62\u7ecf\u5e38\u52a0\u8f7d\u9875\u9762\uff1f\u6211\u77e5\u9053\u7684\u4e00\u4ef6\u4e8b\u662f\u5b83\u5904\u4e8eIP\u5c42\uff0c\u56e0\u4e3a\u6211\u65e0\u6cd5\u518d\u8bbf\u95ee\u4efb\u4f55\u6d4f\u89c8\u5668\u4e0a\u7684\u9875\u9762\u3002\n \u6211\u5c1d\u8bd5\u5728\u624b\u673a\u4e0a\u8bbf\u95ee\u9875\u9762\uff0c\u540c\u65f6\u4e0e\u6211\u7684\u65e0\u7ebf\u7f51\u7edc\u65ad\u5f00\u8fde\u63a5\uff0c\u5e76\u786e\u4fdd\u5b83\u7684\u5de5\u4f5c\u3002\u76f4\u5230\u6211\u5237\u65b0\u4e09\u6b21\u3002\n   \u81ea\u4ece\u8fd9\u7bc7\u6587\u7ae0\u83b7\u5f97\u4e86\u4e00\u7cfb\u5217\u5173\u6ce8\u7684\uff0c\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u4e0e\u9690\u79c1\u76f8\u5173\u7684\u4ea7\u54c1\uff0c\u5e76\u4e14\u9700\u8981Devop-Sy Programmer-Y-Y Generalist\uff0c\u8bf7\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff1acedw@pm.me ", "note_en": "In the software industry, there is a term for intentional designs which coerce the user into doing something, be it consciously or subconsciously - a \u2018dark pattern\u2019. These patterns are employed by social media networks, e-commerce, video games, and many more places.\n I\u2019m coining a new term called the \u2018Fuck You\u2019 pattern currently employed by Instagram.\n I like cats, and there\u2019s a popular Internet meme called \u2018Polite Cat\u2019 otherwise known as Ollie. I wanted to browse some pictures of Ollie anonymously on Instagram today, but to my dismay, Instagram would force me to login 5 seconds after navigating to  Ollie\u2019s Instagram page. Unless I\u2019m part of an A/B test, you can give this a try and should get the same behaviour on desktop.\n Since I\u2019m a technical person, I tried to simply remove the modal in the browser Inspector. It sort of worked, but I wasn\u2019t able to scroll any further on the page. After a few attempts, I could no longer even see Ollie\u2019s page. I was immediately redirected to the  login page every time I tried to access it.\n I was not sure why this happened. Did Instagram catch me trying to bypass their login modal? Was I blocked for trying to load the page too often? One thing I knew is that it was at the IP layer because I could no longer access the page on any browser.\n I tried accessing the page on my phone whilst disconnected from my wireless network, and sure enough it worked. Until I refreshed three times.\n   Since this post got a fair bit of attention, if you are working on a privacy-related product and are in need of a DevOp-sy programmer-y generalist, email me:  cedw@pm.me", "posttime": "2021-06-30 00:32:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ed6\u5988\u7684,fuck,\u9875\u9762", "title": "'\u4ed6\u5988\u7684\u4f60'\u6a21\u5f0f ", "title_en": "The 'Fuck You' Pattern", "transed": 1, "url": "https://cedwards.xyz/the-fuck-you-pattern/", "via": "", "real_tags": ["\u4ed6\u5988\u7684", "fuck", "\u9875\u9762"]}, {"category": "", "categoryclass": "", "imagename": "d9fc2a8e5577e58dd072408845f56252.png", "infoid": 1068642, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bcf\u4e2a\u90fd\u662f\u9876\u7ea7\u6587\u4ef6\u7684\u6587\u4ef6\u662f\u64cd\u4f5c\u7cfb\u7edf\uff01 \u5b83\u88ab\u7f16\u8bd1\u4e3a\u76f8\u5e94\u7684.img\u6587\u4ef6\u3002  \u6253\u5f00\u540e\uff0c\u8fd9\u662f\u6211\u5fc5\u987b\u6309Enter\u8fdb\u5165Boot\u83dc\u5355\u7684\u65f6\u5019\uff1a  \u7136\u540e\uff0c\u8fd9\u91cc\u6211\u5fc5\u987b\u6309F12\u9009\u62e9USB\u4f5c\u4e3a\u5f15\u5bfc\u8bbe\u5907\uff1a  \u6216\u8005\uff0c\u8981\u66f4\u6539\u542f\u52a8\u987a\u5e8f\u5e76\u9009\u62e9USB\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u6211\u4e0d\u5fc5\u6bcf\u6b21\u624b\u52a8\u9009\u62e9\u5b83\uff0c\u6211\u4f1a\u5728\uff06\uff0334\u4e0a\u51fb\u4e2df1;\u542f\u52a8\u4e2d\u65ad\u83dc\u5355\uff06\uff0334; \u5c4f\u5e55\uff0c\u7136\u540e\u5bfc\u822a\u5230\uff1a  \u60a8\u8fd8\u9700\u8981\u66f4\u6539\u542f\u52a8\u987a\u5e8f\u4ee5\u5c06USB\u4eceF12 BIOS\u83dc\u5355\u4e2d\u653e\u5165USB\u3002 \u8fd9\u6837\u4f60\u5c31\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u8981\u50cf\u75af\u5b50\u4e00\u6837\u51fb\u4e2dF12\u3002  TODO\uff1a\u52a0\u8f7dStage2\u4e0d\u4f7f\u7528\u5927\u56fe\u50cf\u94fe\u52a0\u8f7d\u5668\u7684\u5f15\u5bfc\u6247\u533a\u3002 \u4e3a\u4ec0\u4e48\uff1f  \u5982\u679c\u60a8\u6ca1\u6709Ubuntu\u6846\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u8fd0\u884c\uff1a \napt-get\u66f4\u65b0\uff06amp;\uff06amp; \\ apt-get\u5b89\u88c5-y git\uff06amp;\uff06amp; \\ git clone https://github.com/cirosantilli/x86-bare-metal-examples\uff06amp;\uff06amp; \\ CD X86-BALE-METAL-\u5b9e\u65bd\u4f8b\uff06amp;\uff06amp; \\ ./ configure -y\uff06amp;\uff06amp; \\\u5236\u4f5c\n \u4e3a\u4e86\u514b\u670d\u7f3a\u4e4fGUI\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528QEMU\u7684VNC\u5b9e\u73b0\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684SDL\uff0c\u800c\u4e0d\u662f\u5728\u4e3b\u673a\u4e0a\u53ef\u89c1--NET =\u4e3b\u673a\uff1a\n     \u8fd8\u5e94\u8be5\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u8fd0\u884cGUI\uff0c\u4f46\u6211\u6ca1\u6709\u6d4b\u8bd5\uff1ahttps://stackoverflow.com/questions/40658095/how-to-open-ubuntu-gui-inside-a-docker-image/ 57636624\uff0357636624\n \u8fd9\u5c06\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u6307\u4ee4\u4e2d\u7559\u4e0b\u60a8\uff0c\u8fd9\u662f\u6211\u4eec\u5f00\u59cb\u5b8f\u7684\u5f00\u59cb\u3002\n \u4f46\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u7b2c\u4e00\u4e2a\u6307\u4ee4QEMU\u6267\u884c\uff1a\u8fd9\u5b9e\u9645\u4e0a\u5c06\u662f\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u672c\u8eab\u4e4b\u524d\u8fd0\u884c\u7684BIOS\u8bbe\u7f6e\u4ee3\u7801\u3002\n  \u7136\u540e\u6211\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528GDB\u4eea\u8868\u677f\u67e5\u770b\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n  \u5b8f\u4e2d\u7684NI\u6b65\u9aa4\u3002\u4f46\u662f\uff0c\u60a8\u9700\u8981\u5728GDB\u4eea\u8868\u677f\u4e0a\u6253\u5370\u6c47\u7f16\u4ee3\u7801\uff0c\u4ee5\u67e5\u770b\u60a8\u7684\u4f4d\u7f6e \n\u901a\u8fc7\u7c7b\u4f3c\u7c7b\u4f3c\u7684GDB\u4eea\u8868\u677f\u8bbe\u7f6e\uff0c\u572889CBE7BE83F164927CAEBC9334BC42990E499CB1\u4e2d\u6211\u770b\u5230\u4e86\u4e00\u4e2a\u5b8c\u7f8e\u7684\u7a0b\u5e8f\u89c6\u56fe\uff0c\u5982\uff1a\n 1 / * https://github.com/cirosantilli/x86-bare-metal-examples#bios-hello-world * / 2 3 #include\uff06\uff0334; common.h\uff06\uff0334; 4\u5f00\u59cb5 mov $ msg\uff0c\uff05si 6 mov $ 0x0e\uff0c\uff05ah 7\u73af\uff1a8 lodsb 9\u6216\uff05al\uff0c\uff05al10 jz halt11 int $ 0x1012 jmp loop \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25000x00007C00__start + 0 CLI0x00007C01 __start + 1 ljmp $ 0xc031\uff0c$ 0x7c060x00007c08 __start + 8 mov\uff05eax\uff0c\uff05ds0x00007c0a __start + 10 mov\uff05eax\uff0c\uff05es0x00007c0c __start + 12 MOV\uff05EAX\uff0c\uff05FS0X00007C0E __START + 14 MOV\uff05EAX\uff0c\uff05GS0X00007C10 __start + 16 MOV\uff05EAX\uff0c\uff05EBP0X00007C12 __start + 18 MOV\uff05EAX\uff0c\uff05SS0X00007C14 __start + 20 MOV\uff05EBP\uff0c\uff05ESP\u2500\u2500\u2500\u5bc4\u5b58\u5668\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500cs0x00000000eSi 0x00000000 eSi 0x00000000 eSi 0x00000000 ex0x0000000000 ex0000000000 0x00000000 fs 0x00000000 gs 0x00000000\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500-_ S\uff1a4\uff08\u6ca1\u6709\u4e89\u8bba\uff09\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\uff06gt;\uff06gt;\uff06gt;\n \u8c03\u8bd5\u7b26\u53f7\u662f\u901a\u8fc7\u9996\u5148\u94fe\u63a5ELF\u6587\u4ef6\u800c\u83b7\u5f97\u7684\uff0c\u7136\u540e\u5728\u5b83\u4eec\u4e0a\u4f7f\u7528Objcopy\u6765\u751f\u6210\u6700\u7ec8\u56fe\u50cf\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06elf\u6587\u4ef6\u7528\u8c03\u8bd5\u4fe1\u606f\u4f20\u9012\u7ed9gdb\uff1ahttps://stackoverflow.com/questions/32955887/how-to-disassemble-16-bit-x86-boot-sector-code-in-gdb-with-xi -pc-it-get-tr / 32960272\uff0332960272\n   todo\uff1a\u68c0\u6d4b\u6211\u4eec\u662f\u5426\u81ea\u52a8\u4ece\u63a7\u5236\u5bc4\u5b58\u5668\u81ea\u52a8\u64ad\u653e16\u621632\u4f4d\u3002\u73b0\u5728\u6211\u6b63\u5728\u4f7f\u75282\u4e2a\u51fd\u657016\u548c32\u624b\u52a8\u5207\u6362\uff0c\u4f46\u5f88\u7cdf\u7cd5\u3002\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u6709CR0\uff0c\u5219\u65e0\u6cd5\u76f4\u63a5\u9605\u8bfb\u5b83\u4eec\uff1ahttp\uff1a//stackoverflow.com/a/31340294/895245\u5982\u679c\u6211\u4eec\u7684cr0\uff0c\u90a3\u4e48\u5982\u679ccr0\uff06amp\u5f88\u5bb9\u6613\u3002 1\u5728\u6302\u94a9\u5185\u3002\n \u6211\u4eec\u7684\u7a0b\u5e8f\u672c\u8eab\u4e0d\u4f1a\u6253\u5370\u5230\u5c4f\u5e55\u672c\u8eab\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u53ea\u662f\u4f7fCPU\u505c\u6b62\u3002\n \u6b64\u793a\u4f8b\u662f\u901a\u8fc7\u5b57\u8282\u7684printf byte\u751f\u6210\u7684\uff1a\u60a8\u65e0\u6cd5\u6bd4\u6b64\u66f4\u4f4e\u66f4\u4f4e\uff01\n  BYTES 510\u548c511\uff1a\u5f3a\u5236\u6027\u9b54\u6cd5\u5b57\u82820xAA55\uff0cBIOS\u9700\u8981\u8003\u8651\u6211\u4eec\u7684\u78c1\u76d8\u3002 \n\u5982\u679c\u660e\u663e\u76f8\u540c\uff0c\u4f46TODO\uff1a\u5b83\u53ef\u80fd\u4f1a\u5728\u771f\u6b63\u7684\u786c\u4ef6\u4e2d\u6d6a\u8d39\u66f4\u591a\u7684\u80fd\u91cf\uff1f\n \u6b64\u5173\u952e\u6587\u4ef6\u786e\u5b9a\u4e86\u6211\u4eec\u7684\u7a0b\u5e8f\u96c6\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u8bfb\u53d6\u8be5\u6587\u4ef6\u4e2d\u7684\u8bc4\u8bba\u5e76\u719f\u6089\u5b83\u3002\n Linux\u5185\u6838\u8fd8\u4f7f\u7528\u94fe\u63a5\u811a\u672c\u6765\u8bbe\u7f6e\u5176\u56fe\u50cf\u5185\u5b58\u5e03\u5c40\uff0c\u4f8b\u5982\uff1ahttps://github.com/torvalds/linux/blob/v4.2/arch/x86/boot/setup.ld\n \u5355\u7ea7\uff0c\u6240\u4ee5\u4ecd\u7136\u9650\u4e8e512\u5b57\u8282\u7684\u4ee3\u7801+\u6570\u636e\uff01 Todo\uff1a\u5e94\u8be5\u6613\u4e8e\u89e3\u51b3\uff0c\u4f7f\u7528BIOS\u78c1\u76d8\u8d1f\u8f7d\uff0c\u53d1\u9001\u62c9\u51fa\u8bf7\u6c42:-)\u8fd9\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u8c03\u6574\u7684\u6700\u4f73\u793a\u4f8b\uff1ahttp\uff1a//3zanders.co.uk/2017/10/18/11 -bootloader3.\n \u4f7f\u7528\u4f7f\u7528GCC\u7684-M\u4e0d\u4f1a\u4ea7\u751f\uff06\uff0334;\u771f\u5b9e\uff06\uff0334; 16\u4f4d\u4ee3\u7801\uff0c\u4f46\u4e0e0x66\u548c0x67\u524d\u7f00\u7684\u76f8\u5f5332\u4f4d\u4ee3\u7801\uff1ahttps\uff1a//wiki.osdev.org/x86-64_instruction_encoding#legacy_prefixes\n \u8bbe\u7f6e\u521d\u59cb\u72b6\u6001\u548c\u94fe\u63a5\u5668\u811a\u672c\u6bd4\u4e0e\u88c5\u914d\u66f4\u96be\u548c\u6613\u4e8e\u9519\u8bef\n \u56e0\u6b64\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ea\u9700\u8981\u4f7f\u7528\u591a\u91cd\u624b\u5177\uff0c\u800c\u662f\u514b\u670d\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u3002 \n00007c17\uff06lt; main\uff06gt ;:7c17\uff1a66 55\u63a8\u51fa\uff05EBP 7C19\uff1a66 89 E5 MOV\uff05ESP\uff0c\uff05EBP 7C1C\uff1a66 83 EC 10 Sub $ 0x10\uff0c\uff05ESP  \u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e9b\u6307\u4ee4\u7531\u524d\u7f000x66\u4fee\u6539\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u8868\u73b0\u5f97\u50cf32\u4f4d\u3002  \u5fc5\u987b\u5b58\u5728_start\u4ee5\u907f\u514d\u8b66\u544a\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u94fe\u63a5\u5668\u811a\u672c\u671f\u671b\u5b83  \u8fd9\u662f\u4e00\u4e2a\u9ed1\u5ba2\uff0c\u5b83\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u5feb\u901f\u548c\u810f\u6d4b\u8bd5\uff0c\u4f46\u53ea\u662f\u4e0d\u4f7f\u7528\u5b83\u3002  \u4e3aOS / Bootloader\u63d0\u4f9bAPI\uff0c\u5141\u8bb8\u60a8\u5c3d\u53ef\u80fd\u5feb\uff0c\u810fIO  \u6bcf\u4e2a\u4e2d\u65adID\u7ec4\u591a\u4e2a\u5177\u6709\u7c7b\u4f3c\u529f\u80fd\u7684\u51fd\u6570\uff0c\u4f8b\u5982\uff0c 10h\u7ec4\u4f7f\u7528\u89c6\u9891\u76f8\u5173\u529f\u80fd\u3002  http://www.cony.com/intr/int.htm Ralf Brown\u7684\u4e2d\u65ad\u5217\u8868\u3002 \u6bcf\u4e2a\u4eba\u90fd\u8bf4\u8fd9\u662f\u6700\u7ec8\u7684\u975e\u5b98\u65b9\u6c47\u7f16\u3002 \n\u5c06\u80cc\u666f\u989c\u8272\u66f4\u6539\u4e3a\u6574\u4e2a\u5c4f\u5e55\u7684\u7ea2\u8272\u5e76\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\uff1a  \u7136\u540e\uff0c\u6211\u4eec\u9009\u62e9\u7528CX\u548cDX\u7ed9\u51fa\u7684\u89d2\u843d\uff081,1\uff09\u548c\uff082,2\uff09\u4e0a\u7684\u77e9\u5f62\u4f5c\u7528\uff1a  \u5728\u7ea2\u8272\u524d\u666f\uff0c\u548c\u6574\u4e2a\u5c4f\u5e55\u5728\u7eff\u8272\u80cc\u666f\u4e2d\uff0c\u6ca1\u6709\u4efb\u4f55\u521d\u59cb\u6d77\u535a\u6d88\u606f\u3002  \u5728\u89c6\u9891\u6a21\u5f0f\u4e0b\u4f7f\u50cf\u7d20\uff081,1\uff09\u6e05\u9664\u7ea2\u989c\u8272\uff080CH\uff09\u7684\u50cf\u7d2013h\uff1a  \u901a\u8fc7\u952e\u76d8\u4ece\u7528\u6237\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c06\u5176\u9012\u589e\u4e00\u4e2a\uff0c\u7136\u540e\u5c06\u5176\u6253\u5370\u5230\u5c4f\u5e55\uff0c\u7136\u540e\u505c\u6b62\uff1a  \u5176\u4e2dA\u4ece\u7b2c\u4e00\u4e2a\u5757\u7684\u4ee3\u7801\u6253\u5370\uff0cB\u548c\u7b2c\u4e8c\u4e2a\u5757\u4e0a\u7684\u4ee3\u7801\u3002  \u8fd9\u5b9e\u9645\u4e0a\u5f88\u91cd\u8981\uff0c\u4ee5\u4fbf\u5728\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5728\u90a3\u91cc\u5f00\u59cb\u5806\u6808\uff0c\u56e0\u4e3a\u5806\u6808\u5411\u4e0b\u589e\u957f\u3002 \n\u572816\u4f4d\u6a21\u5f0f\u4e0b\uff0c\u5b83\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u73b0\u4ee3\u673a\u5668\u90fd\u6709\u6240\u6709\u53ef\u5bfb\u5740\u7684\u5185\u5b58\uff0c\u4f46\u572832\u4f4d\u4fdd\u62a4\u5b83\u65f6\uff0c\u5b83\u786e\u5b9e\u5982\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u4eff\u771f\u5668\u901a\u5e38\u6ca1\u6709\u6240\u67094GB\u3002 \u5f53\u7136\uff0c64\u4f4dRAM\u76ee\u524d\u6bd4\u4e16\u754c\u4e0a\u7684\u603bRAM\u5927\u3002  int 15\u8fd4\u56de\u5217\u8868\uff1a\u6bcf\u6b21\u8c03\u7528\u5b83\u65f6\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u533a\u57df\u3002  \u6c11\u610f\u8c03\u67e5\u65f6\u95f4\u8ba1\u6570\u5668\uff0cBIOS\u57280x046C\u4e2d\u4fdd\u6301\u6700\u65b0\uff0c\u9891\u7387\u4e3a18.2Hz\u3002  \u68c0\u67e5\u521d\u59cb\u72b6\u6001\u56fa\u4ef6\u901a\u8fc7\u6253\u5370\u591a\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff1a  AX = 00 000 00\u00d7= 00 00\u00d7= 00 00dx = 80 00 = 00 00 = 00 00 = 00 00 = 00 00 00 = 00 00 00\u00d753 ff 00 f0  DX\u4f3c\u4e4e\u662f\u552f\u4e00\u6709\u8da3\u7684\u5e38\u89c4\u5bc4\u5b58\u5668\uff1a\u56fa\u4ef6\u5b58\u50a8\u5f53\u524d\u78c1\u76d8\u53f7\u7684\u503c\uff0c\u4ee5\u5e2e\u52a9\u5728\u90a3\u91cc\u670915h\u3002 \u56e0\u6b64\u5b83\u901a\u5e38\u5305\u542b0x80\u3002  \u4e0e\u7ea2\u8272\u524d\u666f\u548c\u84dd\u8272\u80cc\u666f\u663e\u793a\u5728\u6e05\u9664\u5c4f\u5e55\u7684\u5de6\u4e0a\u89d2\u3002 \n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c060xB800\u79fb\u52a8\u5230\u6bb5\u5bc4\u5b58\u5668\u5e76\u4f7f\u7528\u6bb5\uff1a\u504f\u79fb\u5bfb\u5740\u4ee5\u8bbf\u95ee\u6b64\u5185\u5b58\u3002\n \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c060xb800\uff1a0000\u89c6\u4e3auint16_t\u6570\u7ec4\u6765\u663e\u793a\u5b57\u7b26\uff0c\u5176\u4e2d\u4f4e8\u5b57\u8282\u662fASCII\u5b57\u7b26\uff0c\u9ad88\u5b57\u8282\u662f\u6b64\u5b57\u7b26\u7684\u989c\u8272\u5c5e\u6027\u3002\n X86\u5904\u7406\u5668\u5177\u6709\u51e0\u79cd\u6a21\u5f0f\uff0c\u5bf9\u5904\u7406\u5668\u5982\u4f55\u5de5\u4f5c\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\n \u6db5\u76d6\u82f1\u7279\u5c14\u624b\u518c3.\u7279\u522b\u6709\u7528\u7684\u662f\uff06\uff0334;\u56fe2-3\u3002\u5904\u7406\u5668\u7684\u64cd\u4f5c\u6a21\u5f0f\u4e2d\u7684\u8f6c\u6362;\u56fe\u8868\u3002\n    \uff08\u6240\u6709\u6a21\u5f0f\uff09||\u91cd\u7f6e| v + -------------------- + |\u771f\u5b9e\u5730\u5740\uff08pe = 0\uff09| + -------------------- + ^ || PE | V + ----------------------- + |\u53d7\u4fdd\u62a4\uff08PE = 1\uff0cVM = 0\uff09| + ----------------------- + ^ ^ | || | VM | | v + -------------- + + ------------------- + | IA-32E | | Virtual-8086\uff08VM = 1\uff09| + ------------- + + -------------------- +\n   IA-32E\u8fc7\u6e21\u662f\u68d8\u624b\u7684\uff0c\u4f46\u5728\u82f1\u7279\u5c14\u624b\u518c\u7b2c3  -  9.8.5\uff06\uff0334\u4e0a\u6e05\u695a\u5730\u63cf\u8ff0;\u521d\u59cb\u5316IA-32E\u6a21\u5f0f\uff06\uff0334 ;:\n \u4ece\u53d7\u4fdd\u62a4\u6a21\u5f0f\u5f00\u59cb\uff0c\u901a\u8fc7\u8bbe\u7f6eCR0.pg = 0\u7981\u7528\u5206\u9875\u3002\u4f7f\u7528MOV CR0\u6307\u4ee4\u7981\u7528\u5206\u9875\uff08\u6307\u4ee4\u5fc5\u987b\u4f4d\u4e8e\u6807\u8bc6\u9875\u9762\u4e2d\uff09\u3002 \n\u901a\u8fc7\u8bbe\u7f6eCR4\u542f\u7528\u7269\u7406\u5730\u5740\u6269\u5c55\uff08PAE\uff09\u3002 PAE = 1.\u5f53\u5c1d\u8bd5\u521d\u59cb\u5316IA-32E\u6a21\u5f0f\u65f6\uff0c\u672a\u80fd\u542f\u7528PAE\u5c06\u5bfc\u81f4#gp\u6545\u969c\u3002  \u4f7f\u75284\u7ea7\u9875\u9762\u5730\u56fe\u8868\uff08PML4\uff09\u7684\u7269\u7406\u57fa\u5730\u5740\u52a0\u8f7dCR3\u3002  \u901a\u8fc7\u8bbe\u7f6eCR0.pg = 1.\u542f\u7528\u5206\u9875\u3002\u8fd9\u5bfc\u81f4\u5904\u7406\u5668\u5c06IA32_EFER.LMA\u4f4d\u8bbe\u7f6e\u4e3a1.\u542f\u7528\u5206\u9875\u548c\u4ee5\u4e0b\u6307\u4ee4\u7684MOV CR0\u6307\u4ee4\u5fc5\u987b\u4f4d\u4e8e\u6807\u8bc6\u6620\u5c04\u7684\u9875\u9762\u4e2d\uff08\u76f4\u5230\u6b64\u65f6\u95f4\u4e3a\u6b62 \u53ef\u4ee5\u5b9e\u73b0\u975e\u8eab\u4efd\u6620\u5c04\u9875\u9762\u7684\u5206\u652f\uff09\u3002  \u82f1\u7279\u5c14\u624b\u518c\u7b2c3\u5377\u4e2d\u5b9a\u4e49\u7684\u672f\u8bed - \u7b2c2\u7ae0\uff06\uff0334;\u7cfb\u7edf\u67b6\u6784\u6982\u8ff0\uff06\uff0334 ;:  \u5b9e\u6a21\u5f0f\uff0c\u4fdd\u62a4\u6a21\u5f0f\uff0c\u865a\u62df8086\u6a21\u5f0f\u548c\u7cfb\u7edf\u7ba1\u7406\u6a21\u5f0f\u3002 \u8fd9\u4e9b\u6709\u65f6\u88ab\u79f0\u4e3a\u9057\u7559\u6a21\u5f0f\u3002  \u8fd9\u8fdb\u4e00\u6b65\u8868\u660e\uff0c\u771f\u5b9e\u7684\uff0c\u53d7\u4fdd\u62a4\u548c\u865a\u62df\u6a21\u5f0f\u4e0d\u662f\u4e3b\u8981\u7684\u9884\u671f\u64cd\u4f5c\u6a21\u5f0f\u3002  \u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5f0f\u4e2d\u768432\u4f4d\u5bc4\u5b58\u5668\u4e0e\uff06\uff0334;\u64cd\u4f5c\u6570\u5927\u5c0f\u8986\u76d6\u524d\u7f00\uff06\uff0334; 0x66\u3002 \n20\u4f4d\u5185\u5b58\uff081MB\uff09\u800c\u4e0d\u662f\u901a\u5e38\u9002\u5408\u5bc4\u5b58\u5668\u768416\u4f4d\uff08256KB\uff09\u3002 \u4f8b\u5982\uff0c\u89e3\u51b3\uff1a  FS\u548cGS\u662f\u901a\u7528\u76ee\u7684\uff1a\u5b83\u4eec\u4e0d\u53d7\u4efb\u4f55\u6307\u793a\u9690\u542b\u5730\u5f71\u54cd\u3002 \u6240\u6709\u5176\u4ed6\u4eba\u90fd\u5c06\u88ab\u8fdb\u4e00\u6b65\u4e3e\u4f8b\u8bf4\u660e\u3002  CS\u8bbe\u7f6e\u4e3aLJMP\u6307\u4ee4\uff0c\u6211\u4eec\u5c06\u5176\u4f7f\u7528\u5b83\u6765\u8df3\u8fc7\u4ee3\u7801\u4e2d\u7684\u96f6\u7a7a\u767d\u3002  \u5728\u7b2c\u4e00\u4e2a\u4e4b\u540e\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u8282\u662f16\u4e2a\u5b57\u8282\uff0c\u5e76\u4f7f\u7528SP = 1\u8bbf\u95ee\u3002  SS\u4f1a\u5f71\u54cd\u4f7f\u7528SP\u7b49\u63a8\u9001\u548c\u6d41\u884c\u7684\u6307\u4ee4\uff1a\u8fd9\u4e9b\u5c06\u5b9e\u9645\u4f7f\u752816 * SS + SP\u4f5c\u4e3a\u5b9e\u9645\u5730\u5740\u3002  20\uff1aA0 63 7C MOV 0x7C63\uff0c\uff05AL34\uff1a26 A0 63 7C MOV\uff05ES\uff1a0x7C63\uff0c\uff05AL40\uff1a64 A0 63 7C MOV\uff05FS\uff1a0x7C63\uff0c\uff05AL4C\uff1a65 A0 63 7C MOV\uff05GS\uff1a0x7C63\uff0c\uff05AL58\uff1a 36 A0 63 7C MOV\uff05SS\uff1a0x7C63\uff0c\uff05Al  \u8fd9\u4f7f\u5f97DS\u6700\u6709\u6548\u7684\u6570\u636e\u8bbf\u95ee\uff0c\u56e0\u6b64\u662f\u4e00\u4e2a\u826f\u597d\u7684\u9ed8\u8ba4\u503c\u3002 \ntodo beavory\uff1a\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u4ece\u5904\u7406\u7a0b\u5e8f\u8c03\u7528\u4e2d\u65ad\u7684\u65e0\u9650\u5faa\u73af\uff1a  \u663e\u7136\u5b58\u5728\u4f8b\u5916\u65f6\uff0ciret\u8df3\u56de\u5230\u629b\u51fa\u5f02\u5e38\u672c\u8eab\u7684\u884c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4e4b\u540e\uff0c\u8fd9\u5bfc\u81f4\u5faa\u73af\uff1a  \u4f46\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5b83\u57280081\u505c\u6b62\uff1f \u5982\u679c\u6211\u4eec\u5c06\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a0x0090\uff0c\u5219\u5b83\u53ea\u8fd0\u884c\u4e00\u6b21\u3002  \u5b58\u50a8\u6bcf\u4e2a\u4e2d\u65ad\u7684\u5904\u7406\u7a0b\u5e8f\u7684\u5b9e\u6a21\u5f0f\u5185\u5b58\u8868\u3002  \u57fa\u5730\u5740\u8bbe\u7f6e\u5728\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\u5bc4\u5b58\u5668\uff08IDTR\uff09\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528LIDT\u6307\u4ee4\u8fdb\u884c\u4fee\u6539\u3002  idtr  - \uff06gt; + --------------------- + 0 |\u5730\u5740\uff082\u5b57\u8282\uff09| 2 |\u4ee3\u7801\u6bb5\uff082\u5b57\u8282\uff09| + --------------------- + + ---------------------- + 4 ----\uff06gt; |\u5730\u5740\uff082\u5b57\u8282\uff09| 6 |\u4ee3\u7801\u6bb5\uff082\u5b57\u8282\uff09| + --------------------- + + ---------------------- + 8 ----\uff06gt; |\u5730\u5740\uff082\u5b57\u8282\uff09| A |\u4ee3\u7801\u6bb5\uff082\u5b57\u8282\uff09| + ---------------------  \u8bbe\u7f6eiDtr\u7684\u503c\uff0c\u56e0\u6b64\u8bbe\u7f6eIVT\u7684\u57fa\u5730\u5740\uff1a \n\u6211\u60f3\u6211\u660e\u767dLIDT\u5c06\u4f5c\u4e3a\u8f93\u5165\u5b58\u50a8\u5730\u5740\uff0c\u5e76\u4e14\u8be5\u5730\u5740\u7684\u5185\u5b58\u5fc5\u987b\u5305\u542b\uff1a  4\u5b57\u8282\uff1aIVT\u7684\u57fa\u7840\u5730\u5740\u3002 \u5728\u5b9e\u6a21\u5f0f\u4e0b\u5ffd\u7565\u66f4\u9ad8\u7684\u5b57\u8282\uff0c\u56e0\u4e3a\u5730\u5740\u4e0d\u662f4\u5b57\u8282\u3002  \u6211\u4eec\u5fc5\u987b\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7f16\u7801\u6307\u4ee4\uff0c\u56e0\u6b64\u9700\u8981.Code32\u3002 16\u4f4d\u6a21\u5f0f32\u4f4d\u6307\u4ee4\u662f\u5177\u6709\u7279\u6b8a\u524d\u7f00\u7684\u53ef\u4f9b\u9009\u62e9\u3002  \u82f1\u7279\u5c14\u624b\u518c\u7b2c3  -  9.10\uff06\uff0334;\u521d\u59cb\u5316\u548c\u6a21\u5f0f\u5207\u6362\u793a\u4f8b\uff06\uff0334; \u786e\u5b9e\u5305\u542b\u5982\u4f55\u8fdb\u5165\u53d7\u4fdd\u62a4\u6a21\u5f0f\u7684\u5b98\u65b9\u793a\u4f8b\u3002  \u4ee3\u7801\u5728PDF\u5185\u90e8\uff0c\u5220\u9664\u6240\u6709\u683c\u5f0f\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u5df2\u5c06\u5176\u590d\u5236\u5230\u6b64\u4ed3\u5e93  TODO\u6ca1\u6709\u5df2\u77e5\u7684\u5de5\u5177\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7f16\u8bd1\u8be5\u8bed\u6cd5...\u867d\u7136MASM\u5e94\u8be5\u5173\u95ed\uff1a  \u9996\u5148\u9605\u8bfb\u5bfb\u547c\u6559\u7a0b\uff0c\u7279\u522b\u662f\uff1ahttps://cirosantilli.com/x86-paging#segation\u4ee5\u4e86\u89e3\u914d\u7f6eCPU\u6240\u9700\u7684\u5bc4\u5b58\u5668\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\u64cd\u7eb5\u7684\u611f\u89c9\uff0c\u4ee5\u53ca\u5206\u6bb5\u4e0e\u5206\u9875\u65b9\u5f0f\u3002 \n\u5982\u679c\u5728\u6bd4\u5141\u8bb8\u7684\u504f\u79fb\u91cf\u5927\u4e8e\u5141\u8bb8\u7684\u5f02\u5e38\u53d1\u751f\u7684\u504f\u79fb\u91cf\uff0c\u5219\u4f1a\u53d1\u751f\u8bbf\u95ee\uff0c\u8fd9\u5c31\u50cf\u4e2d\u65ad\u4e00\u6837\uff0c\u5e76\u4e14\u7531\u5148\u524d\u6ce8\u518c\u7684\u5904\u7406\u7a0b\u5e8f\u5904\u7406\u3002\n  + ---------- + -------- + ------------------------ + |\u7a0b\u5e8f1 |\u672a\u4f7f\u7528|\u7a0b\u5e8f2 | + ----------- + -------- + ------------------------ -  + ^ ^ ^ ^ | | | | START1 END1 START2 END2\n \u9664\u4e86\u5730\u5740\u8f6c\u6362\u4e4b\u5916\uff0c\u5206\u6bb5\u7cfb\u7edf\u8fd8\u7ba1\u7406\u4e86\u4fdd\u62a4\u73af\u7b49\u5176\u4ed6\u529f\u80fd\u3002 TODO\uff1a64\u4f4d\u6a21\u5f0f\u4e0b\u7684\u90a3\u4e9b\u5982\u4f55\u5b8c\u6210\uff1f\n \u4f8b\u5982\uff0c\u5728Linux 32\u4f4d\u4e2d\uff0c\u53ea\u6709\u4e24\u4e2a\u6bb5\u59cb\u7ec8\u4f7f\u7528\uff1a\u4e00\u4e2a\u5728\u5185\u6838\u7684\u73af0\u5904\uff0c\u53e6\u4e00\u4e2a\u5728\u6240\u6709\u7528\u6237\u8fdb\u7a0b\u7684\u7279\u67433\u5904\u5f7c\u6b64\u3002\n \u5728\u53d7\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u6bb5\u5bc4\u5b58\u5668CS\uff0cDS\uff0cSS\uff0cES\uff0cFS\u548cGS\u5305\u542b\u4e0e\u5b9e\u9645\u6a21\u5f0f\u4e2d\u7684\u7b80\u5355\u5730\u5740\u66f4\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b\u5355\u4e2a\u6570\u5b57\u3002\n   \u7c7b\u4f3c\u4e8e\u5b9e\u6a21\u5f0f\uff0c\u4f7f\u7528\u5e38\u89c4MOV\u52a9\u8bb0\u7b26\u6307\u4ee4\u5c06\u6b64\u6570\u636e\u7ed3\u6784\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e0a\u3002\n \u6bb5\u9009\u62e9\u5668\u7684\u7d22\u5f15\u5b57\u6bb5\u9009\u62e9\u8981\u4f7f\u7528\u54ea\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002 \n\u57fa\u5730\u5740\u8bbe\u7f6e\u4e3aLGDT\u6307\u4ee4\uff0c\u4ece\u5185\u5b58\u52a0\u8f7d6\u5b57\u8282\u7ed3\u6784\uff1a\n     \u82f1\u7279\u5c14\u624b\u518c\u53773  -  3.4.2\uff06\uff0334;\u6bb5\u9009\u62e9\u5668\uff06\uff0334;\u8bf4\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528GDT\u7684\u7b2c\u4e00\u6b21\u8f93\u5165\uff1a\n \u5904\u7406\u5668\u4e0d\u4f7f\u7528GDT\u7684\u7b2c\u4e00\u4e2a\u6761\u76ee\u3002\u5c06\u6307\u5411GDT\u7684\u6b64\u6761\u76ee\u7684\u6bb5\u9009\u62e9\u5668\uff08\u5373\uff0c\u5177\u67090\u7d22\u5f15\u7684\u6bb5\u9009\u62e9\u5668\u548c\u8bbe\u7f6e\u4e3a0\u7684\u6bb5\u9009\u62e9\u5668\u4e3a0\uff09\u4f5c\u4e3a\u201c\u7a7a\u6bb5\u9009\u62e9\u5668\u201d\u3002\u5904\u7406\u5668\u5728\u6bb5\u5bc4\u5b58\u5668\uff08\u9664CS\u6216SS\u5bc4\u5b58\u5668\u9664\u5916\uff09\u52a0\u8f7d\u4e3a\u7a7a\u9009\u62e9\u5668\u65f6\uff0c\u5904\u7406\u5668\u4e0d\u4f1a\u751f\u6210\u5f02\u5e38\u3002\u4f46\u662f\uff0c\u5b83\u786e\u5b9e\u751f\u6210\u4e86\u5f53\u6355\u83b7\u7a7a\u6863\u9009\u62e9\u5668\u7684\u6bb5\u5bc4\u5b58\u5668\u6765\u8bbf\u95ee\u5b58\u50a8\u5668\u65f6\u751f\u6210\u5f02\u5e38\u3002\u7a7a\u6863\u9009\u62e9\u5668\u53ef\u7528\u4e8e\u521d\u59cb\u5316\u672a\u4f7f\u7528\u7684\u6bb5\u5bc4\u5b58\u5668\u3002\u4f7f\u7528\u7a7a\u6bb5\u9009\u62e9\u5668\u52a0\u8f7dCS\u6216SS\u5bc4\u5b58\u5668\u4f1a\u5bfc\u81f4\u8981\u751f\u6210\u7684\u5e38\u89c4\u4fdd\u62a4\u5f02\u5e38\uff08#gp\uff09\u3002\n \u5728\u82f1\u7279\u5c14\u624b\u518c3  -  3.4.5\uff06\uff0334\u4e0a\u6e05\u695a\u5730\u63cf\u8ff0;\u6bb5\u63cf\u8ff0\u7b26\uff06\uff0334;\u7279\u522b\u662f\u56fe3-8\uff06\uff0334;\u6bb5\u63cf\u8ff0\u7b26\uff06\uff0334;\n \u7b2c\u4e00\u4e2a32\u4e2a\u5904\u7406\u7a0b\u5e8f\u7531\u5904\u7406\u5668\u4fdd\u7559\u5e76\u5177\u6709\u9884\u5b9a\u4e49\u7684\u542b\u4e49\uff0c\u5982\u82f1\u7279\u5c14\u624b\u518c\u7b2c3\u53773-3\u4e2d\u6240\u6307\u5b9a\u7684\u3002 \uff06\uff0334;\u82f1\u7279\u5c1464\u548cIA-32\u4e00\u822c\u4f8b\u5916\uff06\uff0334;\n \u5728Linux\u5185\u6838\u4e2d\uff0chttps://github.com/torvalds/linux/blob/v4.2/arch/x86/entry/entry_64.s\u5168\u90e8\u8bbe\u7f6e\uff1a\u6bcf\u4e2aidtentry divide_error\u8c03\u7528\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u3002\n DES\u4e0d\u4ec5\u9002\u7528\u4e8e\u96f6\u5206\uff0c\u5b83\u4eec\u4e5f\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u4e3e\u4f8b\u8bf4\u660e\u3002 \n\u6697\u793a\u5bfb\u547c\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u6253\u5370\u5e76\u4fee\u6539\u4e86\u5177\u6709\u4e24\u4e2a\u4e0d\u540c\u865a\u62df\u5730\u5740\u7684\u76f8\u540c\u7269\u7406\u5730\u5740\u3002  \u8fd9\u662f\u4ece\u9875\u9762\u6545\u969c\u5904\u7406\u7a0b\u5e8f\u6253\u5370\uff0c\u6211\u4eec\u901a\u8fc7\u5199\u5165\u672a\u6620\u5c04\u5730\u5740\u6765\u8bbe\u7f6e\u89e6\u53d1\u3002  \u770b\u6765\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u5728userlland\u6267\u884c\u671f\u95f4\u4fee\u6539\uff1ahttp\uff1a//stackoverflow.com/questions/12716419/can-you-enter-x64-32-bit-long-compatibility-sub-mode-outside -of-kernel\u6a21\u5f0f  \u8fd9\u4e2a\u56de\u8d2d\u4e2d\u76ee\u524d\u6ca1\u6709\u793a\u4f8b\uff0c\u56e0\u4e3a\u6211\u61d2\u5f97\u5236\u4f5c\u5b83\u4eec\u3002  \u89c2\u770bx86-64 cpu\u9774\u5b50\u5c31\u50cf\u770b\u7740amoeba\u6162\u6162\u5730\u53d1\u5c55\u5230\u72d7\u8eab\u4e0a\u3002  \u4e13\u7528\u7684\u8fdb\u51fa\u65b9\u6cd5\u79f0\u4e3a\uff0334;\u7aef\u53e3\u6620\u5c04IO\uff06\uff0334;\u4ee5\u53ca\u9b54\u6cd5\u5730\u5740\u7684\u65b9\u6cd5\uff06\uff0334;\u8bb0\u5fc6mapp\uff06\uff0334;  \u4ece\u754c\u9762\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u89c9\u5f97\u5185\u5b58\u6620\u5c04\u66f4\u4f18\u96c5\uff1a\u7aef\u53e3IO\u53ea\u662f\u521b\u5efa\u4e86\u7b2c\u4e8c\u4e2a\u5730\u5740\u7a7a\u95f4\u3002 \n\u6bcf\u5f53\u6309\u4e0b\u6216\u5411\u4e0a\u6309\u4e0b\u952e\u65f6\uff0c\u952e\u76d8\u5341\u516d\u8fdb\u5236scancode\u4f1a\u6253\u5370\u5230\u5c4f\u5e55\uff1a  \u59cb\u7ec8\u7acb\u5373\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u952e\u76d8\u952e\u76d8\uff1a\u7136\u540e\u6211\u4eec\u53ea\u662f\u8f6e\u8be2\u66f4\u6539\u5e76\u4ec5\u6253\u5370\u66f4\u6539\u3002  \u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u5173\u95ed\u8ba1\u7b97\u673a\u6216\u5220\u9664\u7b14\u8bb0\u672c\u7535\u6c60\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u5355\u72ec\u7684\u7535\u6c60\u7ee7\u7eed\u8fdb\u884c\u3002  RTC\u4e0d\u80fd\u9ad8\u4e8e\u51e0\u79d2\u949f\u7684\u51c6\u786e\u6027\u3002 \u4e3a\u6b64\uff0c\u8003\u8651\u5751\uff0c\u6216\u8005\u662fHPET\u3002  TODO\u6211\u8ba4\u4e3a\u8fd9\u4ece\u9891\u90530\u4e2d\u7684\u503c\u503c\u4e0b\u964d\uff0c\u56e0\u6b64\u5141\u8bb8\u5728\u5c06\u6765\u5b89\u6392\u4e00\u4e2a\u4e8b\u4ef6\u3002  \u8be5\u5751\u53ef\u4ee5\u751f\u6210\u5b9a\u671f\u4e2d\u65ad\uff08\u6216\u58f0\u97f3\uff01\uff09\uff0c\u7ed9\u5b9a\u9891\u7387\u5230IRQ0\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u771f\u5b9e\u6a21\u5f0f\u6620\u5c04\u5230\u4e2d\u65ad8\u3002  \u7aef\u53e343h\u7528\u4e8e\u63a7\u5236\u9664\u9891\u7387\u7684\u4fe1\u53f7\u5c5e\u6027\uff0c\u5728\u901a\u9053\u7aef\u53e3\uff0c\u5bf9\u4e8e3\u4e2a\u901a\u9053\u3002 \n\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u63a7\u5236\u5751\u7684\u9891\u7387\uff0c\u8be5\u9891\u7387\u56fa\u5b9a\u57280x1234dd\u3002\n \u76f8\u53cd\uff0c\u6211\u4eec\u63a7\u5236\u9891\u7387\u9664\u6570\u3002\u8fd9\u662f\u4e00\u79cd\u7ecf\u5178\u7c7b\u578b\u7684\u79bb\u6563\u7535\u5b50\u7535\u8def\uff1ahttps://en.wikipedia.org/wiki/frequency_divider\n \u9b54\u672f\u9891\u7387\u6765\u81ea\u5386\u53f2\u539f\u56e0\uff0c\u6839\u636eHTTPS://wiki.osdev.org/programmable_interval_timer\u91cd\u7528\u7535\u89c6\u786c\u4ef6\uff0c\u8fd9\u53cd\u8fc7\u6765\u53ef\u80fd\u53d7\u5230\u6676\u4f53\u632f\u8361\u5668\u7684\u4e00\u4e9b\u7269\u7406\u6027\u8d28\u7684\u5f71\u54cd\u3002\n \u53ef\u4ee5\u4f7f\u7528int 0x10\u548cah = 0x00\u8bbe\u7f6e\u6a21\u5f0f\uff0c\u5e76\u4f7f\u7528ah = 0x0f\u83b7\u5f97\n       \u989c\u8272\u7f16\u7801\u53ea\u662f\u4e00\u4e2a\u4efb\u610f\u8c03\u8272\u677f\uff0c\u9002\u54081\u5b57\u8282\uff0c\u5b83\u4e0d\u4f1a\u50cfR R R G G G B B\u4e00\u6837\u62c6\u5206\u989c\u8272\uff0c\u6216\u8005\u5728\uff1ahttps://en.wikipedia.org/wiki/8-bit_color\u3002\u76f8\u5173\uff1ahttp\uff1a//stackoverflow.com/questions/14233437/convert-normal-256-color-to-mode-13h-version-color.\n \u5728\u6211\u4eec\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528BIOS\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528VGA\u63a5\u53e3\u6765\u83b7\u53d6\u6211\u4eec\u7684\u7a0b\u5e8f\u8f93\u51fa\u3002\n  \u6240\u6709\u7b14\u8bb0\u672c\u7535\u8111\u6211\u7528UEFI\u6d4b\u8bd5\u4e86BIOS\uff0c\u56e0\u6b64UEFI\u5fc5\u987b\u5177\u6709\u5012\u9000\u517c\u5bb9\u6027\u7684BIOS\u4eff\u771f\u6a21\u5f0f\uff1ahttps://www.howtogeek.com/56958/htg-explains-how-uefi-will -replace-the-bios/ \n\u7531\u82f1\u7279\u5c14\u5236\u4f5c\uff0c\u4e3b\u8981\u662fMIT\u5f00\u6e90\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u4f9b\u5e94\u5546\u5c06\u7834\u89e3\u5c01\u95ed\u7684\u6e90\u7248\u672c\u3002\n  \u7531\u4e8e\u5b83\u662f\u5de8\u5927\u7684\uff0c\u5b83\u4e0d\u53ef\u907f\u514d\u5730\u5305\u542b\u9519\u8bef\u3002 Garret\u8868\u793a\uff0c\u82f1\u7279\u5c14\u6709\u65f6\u4e0d\u89c9\u5f97\u66f4\u65b0\u5177\u6709\u9519\u8bef\u4fee\u6b63\u7684\u56fa\u4ef6\u3002\n UEFI\u63d0\u4f9b\u4e0e\u5927\u591a\u6570\u4eba\u79f0\u4e4b\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u5927\u578bAPI\uff1a\n   http://www.rodsbooks.com/efi-programming/hello.html\u6700\u4f73\u6765\u6e90\u5230\u76ee\u524d\u4e3a\u6b62\uff1a\u5141\u8bb8\u6211\u7f16\u8bd1Hello World\uff01 todo\uff1a\u5982\u4f55\u5728qemu\u548c\u771f\u6b63\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\u5b83\uff1f\n \u6ca1\u6709\u56fe\u50cf\u8fd0\u884c\u7ed9\u51fa\u4e86UEFI shell\uff0c\u800cLinux\u5185\u6838\u6620\u50cf\u542f\u52a8\u4e86\u5f88\u591a\uff1ahttp\uff1a//unix.stackexchange.com//228053/32558\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u751f\u6210\u56fe\u50cf\u3002\n \u6765\u81ea\uff1ahttps://sourceforge.net/projects/edk2/files/ovmf/ovmf -ia32-r15214.zip/download todo\uff1a\u81ea\u52a8\u6784\u5efa\u5b83\u4ece\u6765\u6e90\u5efa\u7acb\u5b83\uff0c\u6446\u8131Blob\uff0c\u5f3a\u8feb\u5c06\u5176\u63a8\u79bb\u5386\u53f2\u3002\u5de5\u4f5c\u6784\u5efa\u8bbe\u7f6e\u8349\u56fe\uff1ahttps\uff1a//github.com/cirosantilli/linux-cheat/blob/b1c3740519eff18a7707de981ee3afea2051ba10/ovmf.sh\n \u5f00\u6e90Hippie\u81ea\u7531\u7231\u597d\u8de8\u5e73\u53f0\u56fa\u4ef6\uff0c\u8bd5\u56fe\u66ff\u6362BIOS\u548cUEFI\u7684\u66f4\u597d\u7684\u4eba\u7c7b\u3002 \nGRUB / README.ADOC TODO\u6e05\u7406\u5e76\u4e3e\u4f8b\u8bf4\u660e\u8be5\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u3002\u6709\u4e9b\u4e3b\u6301\u4eba\u9700\u8981\u51fa\u53bb\u3002\n \u81ea\u6211+1\uff1a\u91cd\u65b0\u52a0\u8f7d\u81ea\u5df1\uff0c\u51e0\u4e4e\u7acb\u5373\u91cd\u65b0\u52a0\u8f7dgrub\u5e76\u843d\u5728\u540c\u4e00\u4e2a\u83dc\u5355\u4e0a\n \u6b64\u793a\u4f8b\u8bf4\u660e\u4e86Chainloader GRUB\u547d\u4ee4\uff0c\u5b83\u53ea\u662f\u52a0\u8f7d\u5f15\u5bfc\u6247\u533a\u5e76\u8fd0\u884c\u5b83\uff1ahttps://www.gnu.org/software/grub/manual/grub/html_node/chainloader.html\n \u8fd9\u5c31\u662f\u60a8\u9700\u8981\u5f15\u5bfcSystems\uff0c\u5982Windows\uff0cGRUB\u4e0d\u4e86\u89e3\uff1a\u53ea\u662f\u6307\u5411\u4ed6\u4eec\u7684\u5206\u533a\uff0c\u8ba9\u4ed6\u4eec\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n  \u6784\u5efa\u540e\uff0cGRUB-MKRESCUES\u521b\u5efa\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\uff0cGRUB / ChainLoader / ISO / Boot / Main.img\u88ab\u653e\u7f6e\u5728\u5176\u4e2d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5185\u3002\n \u8fd9\u8bf4\u660eGRUB\u975e\u5e38\u4ee4\u4eba\u656c\u754f\u7684\u80fd\u529b\uff0c\u4e86\u89e3\u67d0\u4e9b\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\uff0c\u5e76\u4ece\u4e2d\u83b7\u53d6\u6587\u4ef6\uff0c\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u5728\u5177\u6709\u5355\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u6311\u9009\u3002\n \u5b83\u662f\u6559\u80b2\uff0c\u901a\u8fc7\u5728https://askubuntu.com/questions/69363/mount-single-partition-from-image-of-of-en\u4e2d\u5c55\u5f00\u751f\u6210\u7684grub / chainloader / main.img \n...... ", "note_en": "Each  .S file on the top-level is an operating system! It gets compiled to a corresponding  .img file.\n                 After turning on, this is when I have to press Enter to enter the boot menu:\n  Then, here I have to press F12 to select the USB as the boot device:\n    Alternatively, to change the boot order and choose the USB to have higher precedence so I don\u2019t have to manually select it every time, I would hit F1 on the &#34;Startup Interrupt Menu&#34; screen, and then navigate to:\n   You will also want to change the boot order to put the USB first from the F12 BIOS menu. This way you don\u2019t have to hit F12 like a madman every time.\n TODO: boot sectors that load STAGE2 are not working with the big image chainloader. TODO why?\n If you don\u2019t have an Ubuntu box, this is an easy alternative, for the first run:\n       apt-get update &amp;&amp; \\apt-get install -y git &amp;&amp; \\git clone https://github.com/cirosantilli/x86-bare-metal-examples &amp;&amp; \\cd x86-bare-metal-examples &amp;&amp; \\./configure -y &amp;&amp; \\make\n To overcome the lack of GUI, we can use QEMU\u2019s VNC implementation instead of the default SDL, which is visible on the host due to  --net=host:\n     It should also be possible to run a GUI inside the container, but I haven\u2019t tested:  https://stackoverflow.com/questions/40658095/how-to-open-ubuntu-gui-inside-a-docker-image/57636624#57636624\n This will leave you at the very first instruction executed by our program, which is the beginning of our  BEGIN macro.\n Note however that this is not the very first instruction QEMU executes: that will actually be BIOS setup code that runs before our program itself.\n  I then highly recommend that you use  GDB Dashboard to see what is going on.\n  ni steps within macros. But you will need to enable the printing of assembly code on GDB Dashboard to see where you are at\n With this God-like GDB Dashboard setup, at 89cbe7be83f164927caebc9334bc42990e499cb1 I see a perfect program view such as:\n 1 /* https://github.com/cirosantilli/x86-bare-metal-examples#bios-hello-world */ 2 3 #include &#34;common.h&#34; 4 BEGIN 5 mov $msg, %si 6 mov $0x0e, %ah 7 loop: 8 lodsb 9 or %al, %al10 jz halt11 int $0x1012 jmp loop\u2500\u2500\u2500 Assembly \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25000x00007c00 __start+0 cli0x00007c01 __start+1 ljmp $0xc031,$0x7c060x00007c08 __start+8 mov %eax,%ds0x00007c0a __start+10 mov %eax,%es0x00007c0c __start+12 mov %eax,%fs0x00007c0e __start+14 mov %eax,%gs0x00007c10 __start+16 mov %eax,%ebp0x00007c12 __start+18 mov %eax,%ss0x00007c14 __start+20 mov %ebp,%esp\u2500\u2500\u2500 Registers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 eax 0x0000aa55 ecx 0x00000000 edx 0x00000080 ebx 0x00000000 esp 0x00006f04 ebp 0x00000000 esi 0x00000000 edi 0x00000000 eip 0x00007c00 eflags [ IF ] cs 0x00000000 ss 0x00000000 ds 0x00000000 es 0x00000000 fs 0x00000000 gs 0x00000000\u2500\u2500\u2500 Stack \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500[0] from 0x00007c00 in __start+0 at bios_hello_world.S:4(no arguments)\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;&gt;&gt;\n Debug symbols are obtained by first linking ELF files, and then using  objcopy on them to generate the final image. We then pass the ELF files with the debug information to GDB:  https://stackoverflow.com/questions/32955887/how-to-disassemble-16-bit-x86-boot-sector-code-in-gdb-with-x-i-pc-it-gets-tr/32960272#32960272\n   TODO: detect if we are on 16 or 32 bit automatically from control registers. Now I\u2019m using 2 functions  16 and  32 to switch manually, but that sucks. The problem is that it\u2019s not possible to read them directly:  http://stackoverflow.com/a/31340294/895245 If we had  cr0, it would be easy to do with an  if cr0 &amp; 1 inside a hook-stop.\n Our program itself does not print anything to the screen itself, just makes the CPU halt.\n This example is generated with  printf byte by byte: you can\u2019t get more minimal than this!\n  bytes 510 and 511: mandatory magic bytes  0xAA55, which are required for BIOS to consider our disk.\n The outcome if visibly the same, but TODO: it likely wastes more energy in real hardware?\n This critical file determines the memory layout of our assembly, take some time to read the comments in that file and familiarize yourself with it.\n The Linux kernel also uses linker scripts to setup its image memory layout, see for example:  https://github.com/torvalds/linux/blob/v4.2/arch/x86/boot/setup.ld\n single stage, so still limited to 512 bytes of code + data! TODO: it should be easy to solve that with  BIOS disk load, send a pull request :-) Here is full example that we could also adapt:  http://3zanders.co.uk/2017/10/18/writing-a-bootloader3\n use use GCC\u2019s  -m which does not produce &#34;real&#34; 16 bit code, but rather 32-bit code with  0x66 and  0x67 prefixes:  https://wiki.osdev.org/X86-64_Instruction_Encoding#Legacy_Prefixes\n setting up the initial state and the linker script is much harder and error prone than with assembly\n Therefore, for most applications, you will just want to use  Multiboot instead, which overcomes all of those problems.\n    00007c17 &lt;main&gt;: 7c17: 66 55 push %ebp 7c19: 66 89 e5 mov %esp,%ebp 7c1c: 66 83 ec 10 sub $0x10,%esp\n This is because those instructions are modified by the prefix  0x66, which makes them behave like 32-bit.\n _start must be present to avoid a warning, since the default linker script expects it\n This is a hack, it can be more convenient for quick and dirty tests, but just don\u2019t use it.\n offers an API to the OS / bootloader, that allows you to do things like quick and dirty IO\n           Each  interrupt-id groups multiple functions with similar functions, e.g.  10h groups functions with video related functionality.\n   http://www.ctyme.com/intr/int.htm Ralf Brown\u2019s Interrupt List. Everyone says that this is the ultimate unofficial compilation.\n Change the background color to red for the entire screen and print an  a character:\n We then choose to act on the rectangle with corners (1, 1) and (2, 2) given by  cx and  dx:\n    on red foreground, and the entire screen in green background, without any initial SeaBIOS messages.\n Make the pixel at position (1, 1) clear red color (0Ch) in  Video mode 13h:\n Get one character from the user via the keyboard, increment it by one, and print it to the screen, then halt:\n where  a was printed from code on the first block, and  b from code on the second block.\n This is important in particular so that you can start your stack there when you enter  Protected mode, since the stack grows down.\n In 16-bit mode, it does not matter much, since most modern machines have all addressable memory there, but in 32-bit protected it does, as our emulator usually does not have all 4Gb. And of course, 64-bit RAM is currently larger than the total RAM in the world.\n int 15 returns a list: each time you call it a new memory region is returned.\n Polls time counter that BIOS keeps up to date at  0x046C with frequency 18.2Hz eighteen times.\n Check the initial state the firmware leaves us by printing the contents of several registers:\n    ax = 00 00bx = 00 00cx = 00 00dx = 80 00cs = 00 00ds = 00 00es = 00 00fs = 00 00gs = 00 00ss = 00 00cr0 = 53 FF 00 F0\n dx seems to be like the only interesting regular register: the firmware stores the value of the current disk number to help with  int 15h there. Thus it usually contains  0x80.\n with red foreground and blue background shows on the top left of the cleared screen.\n  We can then move 0xB800 to a segment register and use segment:offset addressing to access this memory.\n Then we can show characters by treating  0xB800:0000 as a  uint16_t array, where low 8 bytes is the ASCII character, and the high 8 bytes is the color attribute of this character.\n The x86 processor has a few modes, which have huge impact on how the processor works.\n Covered on the  Intel manual Volume 3. Specially useful is the &#34;Figure 2-3. Transitions Among the Processor\u2019s Operating Modes&#34; diagram.\n    (all modes)|| Reset|v+---------------------+| Real address (PE=0) |+---------------------+^|| PE|v+------------------------+| Protected (PE=1, VM=0) |+------------------------+^ ^| || | VM| |v v+--------------+ +---------------------+| IA-32e | | Virtual-8086 (VM=1) |+--------------+ +---------------------+\n   The IA-32e transition is trickier, but clearly described on the  Intel manual Volume 3 - 9.8.5 &#34;Initializing IA-32e Mode&#34;:\n Starting from protected mode, disable paging by setting  CR0.PG = 0. Use the  MOV CR0 instruction to disable paging (the instruction must be located in an identity-mapped page).\n Enable physical-address extensions (PAE) by setting CR4. PAE = 1. Failure to enable PAE will result in a  #GP fault when an attempt is made to initialize IA-32e mode.\n Load  CR3 with the physical base address of the Level 4 page map table (PML4).\n  Enable paging by setting  CR0.PG = 1. This causes the processor to set the  IA32_EFER.LMA bit to 1. The  MOV CR0 instruction that enables paging and the following instructions must be located in an identity-mapped page (until such time that a branch to non-identity mapped pages can be effected).\n The term defined in the  Intel manual Volume 3 - CHAPTER 2 &#34;SYSTEM ARCHITECTURE OVERVIEW&#34;:\n Real mode, protected mode, virtual 8086 mode, and system management mode. These are sometimes referred to as legacy modes.\n  This further suggests that real, protected and virtual mode are not the main intended modes of operation.\n It is possible to use 32-bit registers in this mode with the &#34;Operand Size Override Prefix&#34;  0x66.\n    20 bits of memory (1MB) instead of the 16 bits (256kB) that normally fits into registers. E.g., to address:\n fs and  gs are general purpose: they are not affected implicitly by any instructions. All others will be further exemplified.\n CS is set with the  ljmp instruction, and we use it to skip  .skip zero gaps in the code.\n The second byte is 16 bytes after the first, and is accessed with  SP = 1.\n SS affects instructions that use  SP such as  PUSH and  POP: those will actually use  16 * SS + SP as the actual address.\n  20: a0 63 7c mov 0x7c63,%al34: 26 a0 63 7c mov %es:0x7c63,%al40: 64 a0 63 7c mov %fs:0x7c63,%al4c: 65 a0 63 7c mov %gs:0x7c63,%al58: 36 a0 63 7c mov %ss:0x7c63,%al\n This makes  ds the most efficient one for data access, and thus a good default.\n TODO understand: attempt to create an infinite loop that calls the interrupt from the handler:\n          Apparently when there is an exception,  iret jumps back to the line that threw the exception itself, not the one after, which leads to the loop:\n  But then why does it stop at  0081? And if we set the initial value to  0x0090, it just runs once.\n    The real mode in-memory table that stores the address for the handler for each interrupt.\n  The base address is set in the interrupt descriptor table register (IDTR), which can be modified with the  lidt instruction.\n   IDTR -&gt; +-----------------------+0 |Address (2 bytes) |2 |Code segment (2 bytes) | +-----------------------+ +-----------------------+4 ----&gt; |Address (2 bytes) |6 |Code segment (2 bytes) | +-----------------------+ +-----------------------+8 ----&gt; |Address (2 bytes) |A |Code segment (2 bytes) | +-----------------------+... ...\n Set the value of the IDTR, and therefore set the base address of the  IVT:\n          I think I understand that  lidt takes as input a memory address, and the memory at that address must contain:\n 4 bytes: base address of the IVT. Higher byte is ignored in real mode, since addresses are not 4 bytes long.\n we have to encode instructions differently, thus a  .code32 is needed. 16-bit mode 32-bit instructions are encodable with a special prefix.\n   The  Intel manual Volume 3 - 9.10 &#34;INITIALIZATION AND MODE SWITCHING EXAMPLE&#34; does contain an official example of how to go into protected mode.\n  the code is inside the PDF, which breaks all the formatting, so we have copied it here to this repo\n TODO there is no known tool that can actually compile that syntax\u2026\u200b although MASM should be close:\n  First read the paging tutorial, and in particular:  https://cirosantilli.com/x86-paging#segmentation to get a feel for the type of register and data structure manipulation required to configure the CPU, and how segmentation compares to paging.\n   If an access is made at an offset larger than allowed an exception happens, which is like an interrupt, and gets handled by a previously registered handler.\n  +-----------+--------+--------------------------+| Program 1 | Unused | Program 2 |+-----------+--------+--------------------------+^ ^ ^ ^| | | |Start1 End1 Start2 End2\n Besides address translation, the segmentation system also managed other features such as  Protection rings. TODO: how are those done in 64-bit mode?\n In Linux 32-bit for example, only two segments are used at all times: one at ring 0 for the kernel, and one another at privilege 3 for all user processes.\n In protected mode, the segment registers  CS,  DS,  SS,  ES,  FS and  GS contain a data structure more complex than a simple address as in real mode, which contains a single number.\n   Like in real mode, this data structure is loaded on the registers with a regular  mov mnemonic instruction.\n The  Index field of the  Segment selector chooses which one of those segment descriptors is to be used.\n The base address is set with the  lgdt instruction, which loads from memory a 6 byte structure:\n     Intel manual Volume 3 - 3.4.2 &#34;Segment Selectors&#34; says that we can\u2019t use the first entry of the GDT:\n The first entry of the GDT is not used by the processor. A segment selector that points to this entry of the GDT (that is, a segment selector with an index of 0 and the TI flag set to 0) is used as a \u201cnull segment selector.\u201d The processor does not generate an exception when a segment register (other than the CS or SS registers) is loaded with a null selector. It does, however, generate an exception when a segment register holding a null selector is used to access memory. A null selector can be used to initialize unused segment registers. Loading the CS or SS register with a null segment selector causes a general-protection exception (#GP) to be generated.\n Clearly described on the  Intel manual Volume 3 - 3.4.5 &#34;Segment Descriptors&#34; and in particular Figure 3-8 &#34;Segment Descriptor&#34;.\n The first 32 handlers are reserved by the processor and have predefined meanings, as specified in the  Intel manual Volume 3 Table 3-3. &#34;Intel 64 and IA-32 General Exceptions&#34;.\n In the Linux kernel,  https://github.com/torvalds/linux/blob/v4.2/arch/x86/entry/entry_64.S sets them all up: each  idtentry divide_error call sets up a new one.\n DEs are not only for division by zero: they also happens on overflow. TODO example.\n  Implies that paging worked because we printed and modified the same physical address with two different virtual addresses.\n  This is printed from a page fault handler that we setup an triggered by writing to an unmapped address.\n It appears that it is possible for user programs to modify that during execution from userland:  http://stackoverflow.com/questions/12716419/can-you-enter-x64-32-bit-long-compatibility-sub-mode-outside-of-kernel-mode\n There are currently no examples in this repo because I was lazy to make them.\n  Watching an x86-64 CPU boot is like watching an amoeba slowly evolve into a dog.\n The dedicated  in and  out approach is called &#34;port mapped IO&#34;, and the approach of the magic addresses &#34;memory mapp&#34;\n From an interface point of view, I feel that memory mapped is more elegant: port IO simply creates a second addresses space.\n Whenever you press a key down or up, the keyboard hex scancode is printed to the screen:\n    The  in always returns immediately with the last keyboard keycode: we then just poll for changes and print only the changes.\n  This hardware must therefore use a separate battery to keep going when we turn off the computer or remove the laptop battery.\n   The RTC cannot give accuracy greater than seconds. For that, consider the  PIT, or the  HPET.\n TODO I think this counts down from the value value in channel 0, and therefore allows to schedule a single event in the future.\n The PIT can generate periodic interrupts (or  sound!) with a given frequency to  IRQ0, which on real mode maps to interrupt 8 by default.\n    Port  43h is used to control signal properties except frequency, which goes in the channel ports, for the 3 channels.\n   We don\u2019t control the frequency of the PIT directly, which is fixed at  0x1234DD.\n Instead, we control a frequency divisor. This is a classic type of discrete electronic circuit:  https://en.wikipedia.org/wiki/Frequency_divider\n The magic frequency comes from historical reasons to reuse television hardware according to  https://wiki.osdev.org/Programmable_Interval_Timer, which in turn is likely influenced by some physical properties of crystal oscillators.\n Modes can be set with  int 0x10 and  AH = 0x00, and get with  AH = 0x0F\n       The color encoding is just an arbitrary palette that fits 1 byte, it is not split colors like R R R G G G B B or anything mentioned at:  https://en.wikipedia.org/wiki/8-bit_color. Related:  http://stackoverflow.com/questions/14233437/convert-normal-256-color-to-mode-13h-version-color\n BIOS cannot be used when we move into  Protected mode, but we can use the VGA interface to get output out of our programs.\n  All  laptops I tested BIOS with had UEFI, so UEFI must have a BIOS emulation mode for backwards compatibility:  https://www.howtogeek.com/56958/htg-explains-how-uefi-will-replace-the-bios/\n Made by Intel, mostly MIT open source, which likely implies that vendors will hack away closed source versions.\n  Since it is huge, it inevitably contains bugs. Garret says that Intel sometimes does not feel like updating the firmware with bugfixes.\n UEFI offers a large API comparable to what most people would call an operating system:\n   http://www.rodsbooks.com/efi-programming/hello.html Best source so far: allowed me to compile the hello world! TODO: how to run it now on QEMU and real hardware?\n Running without image gives the UEFI shell, and a Linux kernel image booted fine with it:  http://unix.stackexchange.com/a/228053/32558, so we just need to generate the image.\n The blob  uefi/ovmf.fd IA32 r15214 was downloaded from:  https://sourceforge.net/projects/edk2/files/OVMF/OVMF-IA32-r15214.zip/download TODO: automate building it from source instead, get rid of the blob, and force push it away from history. Working build setup sketch:  https://github.com/cirosantilli/linux-cheat/blob/b1c3740519eff18a7707de981ee3afea2051ba10/ovmf.sh\n Open source hippie freedom loving cross platform firmware that attempts to replace BIOS and UEFI for the greater good of mankind.\n grub/README.adoc TODO cleanup and exemplify everything in that file. Some hosty stuff needs to go out maybe.\n self +1: reload ourselves, and almost immediately reload GRUB and fall on the same menu as before\n This example illustrates the  chainloader GRUB command, which just loads a boot sector and runs it:  https://www.gnu.org/software/grub/manual/grub/html_node/chainloader.html\n This is what you need to boot systems like Windows which GRUB does not know anything about: just point to their partition and let them do the job.\n  After build,  grub-mkrescue creates a few filesystems, and  grub/chainloader/iso/boot/main.img is placed inside one of those filesystems.\n This illustrates GRUB\u2019s awesome ability to understand certain filesystem formats, and fetch files from them, thus allowing us to pick between multiple operating systems with a single filesystem.\n It is educational to open up the generated  grub/chainloader/main.img with the techniques described at  https://askubuntu.com/questions/69363/mount-single-partition-from-image-of-en\n......", "posttime": "2021-06-30 00:31:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,programming,\u7f16\u7a0b,x86", "title": "X86 BALE\u91d1\u5c5e\u793a\u4f8b\uff1a\u6700\u5c0f\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b66\u4e60X86\u7cfb\u7edf\u7f16\u7a0b ", "title_en": "x86 Bare Metal Examples: Minimal operating systems, learn x86 system programming", "transed": 1, "url": "https://github.com/cirosantilli/x86-bare-metal-examples", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "\u7f16\u7a0b", "x86"]}, {"category": "", "categoryclass": "", "imagename": "2ad0c8ffc6d1239fc79898199f5f1c33.jpg", "infoid": 1068641, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb300,000\u5e74\u7684\u5404\u79cd\u5404\u6837\u4e0a\uff0cDenisova Cave\u5e87\u62a4\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u6bcd\u4f53\u3002\u4f46\u662f\uff0c\u53ea\u6709\u516b\u4e2a\u4eba - \u56db\u4e2aDenisovans\uff0c\u4e09\u4e2a\u5c3c\u5b89\u5fb7\u7279\u4eba\u548c\u5c3c\u5b89\u5fb7\u7279\u4eba/\u4e39\u5c3c\u65af\u961f\u7684\u5973\u513f - \u8fd9\u5f88\u96be\u8bb2\u8ff0\u6bcf\u4e2a\u7269\u79cd\u5728\u6d1e\u7a74\u4e2d\u7684\u6bcf\u79cd\u7269\u79cd\u65f6\u8bb2\u8ff0\u4e00\u4e2a\u8be6\u7ec6\u7684\u6545\u4e8b\u3002\u7136\u800c\uff0c\u6839\u636e\u6700\u8fd1\u7684\u9057\u4f20\u5b66\u7814\u7a76\uff0cDeNisovans\u662f\u7b2c\u4e00\u4e2a\uff0c\u8fbe\u5230\u4e8625\u4e07\u5e74\u524d\u7684\u7b2c\u4e00\u4e2a\u3002\u5f53\u6211\u4eec\u7269\u79cd\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u8fbe\u523045000\u5e74\u524d\uff0c\u4ed6\u4eec\u4ecd\u7136\u53ef\u80fd\u5df2\u7ecf\u5728\u90a3\u91cc\u3002\n \u65f6\u95f4\u8f74\u662f\u6700\u8fd1\u7814\u7a76\u7ebf\u7c92\u4f53DNA\uff08\u9057\u4f20\u7269\u8d28\u76f4\u63a5\u4ece\u6bcd\u5a74\u901a\u8fc7\u7684\u9057\u4f20\u7269\u8d28\uff09\u7684\u7ed3\u679c\u6df7\u5408\u5230\u8986\u76d6\u6d1e\u5e95\u7684\u6df1\u5c42\u6c89\u79ef\u7269\u4e2d\u3002\u636e\u8003\u53e4\u5b66\u5bb6Elena Zavala\u7684Max Planck\u8fdb\u5316\u4eba\u7c7b\u5b66\u7814\u7a76\u6240\u7684\u8fdb\u5316\u4f5c\u8005\uff0c\u53e4\u4ee3DNA\u7684\u53e4\u4ee3DNA\u7684\u788e\u7247\u53ef\u80fd\u6765\u81ea\u7caa\u4fbf\u7684\u6df7\u5408\u7269\uff0c\u5206\u89e3\u9057\u9ab8\uff0c\u5e76\u8131\u6389\u76ae\u80a4\u548c\u5934\u53d1\u4e0e\u6d1e\u7a74\u697c\u5c42\u7684\u6c61\u57a2\u6df7\u5408\u4e86\u7814\u7a76\u3002\n \uff06\uff0334;\u6211\u4eec\u77e5\u9053DNA\u53ef\u4ee5\u4e0e\u6c89\u79ef\u7269\u4e2d\u53d1\u73b0\u7684\u77ff\u7269\u7ed3\u5408\uff0c\u5e76\u4e14\u5728\u663e\u5fae\u955c\u4e0b\u68c0\u67e5\u6c89\u79ef\u7269\u65f6\uff0c\u6211\u4eec\u8fd8\u770b\u5230\u4e86\u5fae\u751f\u7269\uff0c\uff06\uff0334;\u5979\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u544a\u8bc9ARS\u3002 \uff06\uff0334;\u5c06\u6c89\u79ef\u7269\u7279\u5b9a\u8981\u7d20\u7684\u672a\u6765\u7814\u7a76\u5c06\u6709\u52a9\u4e8e\u63d0\u9ad8\u6211\u4eec\u5bf9\u6b64\u8fc7\u7a0b\u7684\u7406\u89e3\u3002\uff06\uff0334;\n Zavala\u548c\u5979\u7684\u540c\u4e8b\u5728\u6240\u6709\u4e09\u4e2a\u8154\u5ba4\u5185\u4ece\u6d1e\u7a74\u4e2d\u7684\u6bcf\u4e00\u5c42\u91c7\u6837\u6c89\u79ef\u7269\uff0c\u4ee510-15\u5398\u7c73\u95f4\u9694\u3002\u7136\u540e\u5b83\u4eec\u5c06\u6765\u81ea\u6bcd\u4f53\u548c\u5176\u4ed6\u54fa\u4e73\u52a8\u7269\u7269\u79cd\u7684\u7ebf\u7c92\u4f53DNA\u5e8f\u5217\u5206\u79bb\u51fa\uff0c\u5982\u731b\u72b8\u8c61\uff0c\u718a\u548c\u9b23\u72d7\u3002\u4e3a\u4e86\u9274\u5b9a\u5c5e\u4e8e175\u4e2aHominin MTDNA\u6837\u672c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684\u540c\u6027\u604b\uff0c\u5b83\u4eec\u5c06DNA\u7684\u7247\u6bb5\u4e0eDeNisovans\uff0cNeanderthals\u548c\u7f8e\u56fd\u4e0d\u540c\u7684\u57fa\u56e0\u7ec4\u7684\u7279\u5b9a\u90e8\u5206\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\n  \u5728\u4e00\u4e2a\u6c89\u79ef\u7269\u5c42\u4e2d\u5f00\u59cb\u5806\u79ef\u5728\u6d1e\u7a74\u697c\u5c42250,000\u4e4b\u524d\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u6700\u65e9\u7684Denisovan MTDNA\u75d5\u8ff9\u3002\u8fd9\u6bd4\u6765\u81ea\u6d1e\u7a74\u7684\u6700\u65e9\u7684Denisovan\u5316\u77f3\u5927\u5927\u5e74\u957f\uff0c\u8fd9\u662f\u5728194,000\u5230123,000\u5e74\u4e4b\u95f4\u7684\u6700\u65e9\u7684Denisovan Fossil\u3002\u6700\u65e9\u7684\u5c3c\u5b89\u5fb7\u7279\u4eba\u572817\u4e07\u5e74\u524d\u5728\u6d1e\u7a74\u4e2d\u51fa\u73b0\u4e86\u6d1e\u7a74\uff0c\u5e76\u4e14\u5927\u7ea640,000\u5e74\uff0c\u8fd9\u4e24\u4e2a\u6bcd\u7d20\u4f3c\u4e4e\u5df2\u7ecf\u5206\u4eab\u4e86\u6d1e\u7a74\u6216\u591a\u6216\u5c11\u3002\u80af\u5b9a\u662f\u5f88\u96be\u8bf4\u7684\uff0c\u56e0\u4e3a\u6c89\u79ef\u7269\u7684\u5c42\u53ea\u5206\u88c2\u4e86\u51e0\u5343\u5e74\u7684\u5757\u3002\u8fd9\u610f\u5473\u7740\u8003\u53e4\u5b66\u5bb6\u4e0d\u80fd\u8bf4\u8fd9\u4e24\u4e2a\u7269\u79cd\u662f\u5426\u662f\u5ba4\u53cb\uff0c\u6216\u8005\u4ed6\u4eec\u6bcf\u9694\u51e0\u5e74\u6216\u51e0\u4e2a\u4e16\u7eaa\u7684\u6d1e\u7a74\u4ea4\u66ff\u62e5\u6709\u6d1e\u7a74\u3002\n    \u201c\u65f6\u95f4\u8868\u7684\u51b3\u8bae\u592a\u7c97\u66b4\uff0c\u4ee5\u533a\u5206\u4e8b\u4ef6\u751a\u81f3\u662f1000\u5e74\u7684\u51b3\u8bae\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u8bf4DeNisovans\u548cNeanderthals\u5728\u4e2d\u95f4\u53e4\u77f3\u4e2d\u7684\u4e2d\u95f4\u53e4\u7f57\u57fa\u77f3\u5927\u5b66\uff0cWollongong Grankerd Richard Richarts\u662f\u4e00\u9879\u7814\u7a76\u7684\u5171\u540c\u8bb2\u8ff0\uff0c\u544a\u8bc9Ars\u3002\n \u65e0\u8bba\u5982\u4f55\uff0c\u5c3c\u5b89\u5fb7\u7279\u4eba\u7684\u5230\u6765\u90fd\u5728\u6c14\u5019\u53d8\u5316\u7684\u4e3b\u8981\u53d8\u5316\u4e4b\u5916\u3002\u5927\u7ea6\u670919\u4e07\u5e74\u524d\uff0c\u963f\u5c14\u6cf0\u5c71\u8109\u7684\u6c14\u5019\u53d8\u51b7\uff0c\u56e0\u4e3a\u4e16\u754c\u642c\u51fa\u4e86\u76f8\u5bf9\u6e29\u6696\u7684\u4e2d\u95f4\u7684\u95f4\u671f\u5e76\u8fdb\u5165\u4e86\u53e6\u4e00\u4e2a\u51b0\u6cb3\u65f6\u4ee3\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u70b9\u4ece\u51b0\u76d6\uff0c\u6d1e\u7a74\u7ec4\u7ec7\u548c\u4e16\u754c\u5404\u5730\u7684\u6d77\u6d0b\u6c89\u79ef\u7269\u9501\u5b9a\u7684\u5316\u5b66\u8bb0\u5f55\u4e2d\u3002 Denisova Cave\u7684\u5730\u677f\u62e5\u6709\u81ea\u5df1\u5728\u963f\u5c14\u6cf0\u6539\u53d8\u751f\u6d3b\u7684\u8bb0\u5f55\u3002\u5728\u8fd9\u4e00\u65f6\u671f\u7684\u5c42\u4e2d\uff0c\u624e\u74e6\u62c9\u548c\u5979\u7684\u540c\u4e8b\u53d1\u73b0\u6765\u81ea\u718a\u548c\u72fc\u7684\u7ebf\u7c92\u4f53DNA\uff0c\u66f4\u591a\u6765\u81ea\u9b23\u72d7\u548c\u73b0\u4ee3\u725b\u7684\u53e4\u8001\u4eb2\u621a\u3002 \n\u7136\u540e\uff0c13\u4e07\u5e74\u524d\uff0c\u6c14\u5019\u53d8\u4e3a\u6e29\u6696\u7684\u4e2d\u95f4\u5ce1\u8c37\u65f6\u671f\u3002\u9e7f\u548c\u91ce\u9a6c\u5728\u7ebf\u7c92\u4f53DNA\u8bb0\u5f55\u4e2d\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e38\u89c1\uff0c\u6700\u540e\u4e00\u7cfb\u5217\u7684Denisovans\u8ffd\u8e2a\u4ece\u6d1e\u7a74\u4e2d\u6d88\u5931\u4e86120,000\u5e74\u524d\u3002\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u6b7b\u4ea1\u6216\u521a\u521a\u79bb\u5f00\u3002\u636eZavala\u8868\u793a\uff0c\u8fd9\u662f\u7b54\u6848\uff0c\u53ef\u80fd\u57cb\u5728\u8be5\u5730\u533a\u7684\u5176\u4ed6\u7f51\u7ad9\u4e0a\u3002\n \u201c\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u66f4\u591a\u4e0eDenisovan\u548cNeanderthal\u7684\u7f51\u7ad9\u4ecd\u7136\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5185\uff0c\u201d\u5979\u544a\u8bc9Ars\u3002 \u201c\u4e39\u5c3c\u65af\u65e9\u671f\u7684\u8fd0\u52a8\u6216\u5931\u8e2a\u53ef\u80fd\u662f\u7531\u4e8e\u6c14\u5019\uff0c\u800c\u662f\u786e\u5b9a\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u8bc6\u522b\u4e0eDenisovan\u7684\u5176\u4ed6\u5730\u70b9\u7684\u7c7b\u4f3c\u53d8\u5316\u3002\u9700\u8981\u4ece\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u7684\u66f4\u591a\u7f51\u7ad9\u6765\u8ddf\u8e2aNeanderthals\u548cDenisovans\u7684\u4e0d\u540c\u7fa4\u4f53\u7684\u8fd0\u52a8\uff08\u548c\u5931\u8e2a\uff09\u3002\u201c\n  \u90e8\u5206\u539f\u56e0\u662f\uff0c\u56e0\u4e3a\u8003\u53e4\u5b66\u5bb6\u60f3\u77e5\u9053\u8c01\u5236\u9020\u4e86\u4ed6\u4eec\u5728\u6b27\u4e9a\u5927\u9646\u5468\u56f4\u7684\u5176\u4ed6\u7f51\u7ad9\u51fa\u571f\u7684\u77f3\u5de5\u5177\u3002 Denisova\u6d1e\u7a74\u65e5\u671f\u6700\u53e4\u8001\u7684\u5de5\u5177\u8fbe\u5230\u4e86\u53e4\u77f3\u65e9\u671f\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u4e9b\u65f6\u95f4\u8de8\u8d8a\u5927\u7ea6200,000\u523017\u4e07\u5e74\u524d\u3002 Denisovans\u5728\u90a3\u4e2a\u65f6\u671f\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u6709\u6d1e\u7a74\uff0c\u800cNeanderthals\u5728\u6700\u540e\u4e00\u70b9\u5730\u5c55\u793a\u4e86\u4e0a\u6da8\u3002\n \u8bc1\u636e\u4f3c\u4e4e\u8868\u660e\uff0c\u6d1e\u7a74\u65e9\u671f\u7684\u65e7\u77f3\u5668\u65f6\u4ee3\u522e\u5200\uff0c\u7f3a\u53e3\u5de5\u5177\u548c\u6838\u5fc3\u7684\u201c\u7b2c\u4e00\u548c\u4e3b\u8981\u5236\u9020\u5546\u201d\u662fDeNisovans\u3002\u4f46\u7531\u4e8e\u5c3c\u5b89\u5fb7\u7279\u4eba\u572817\u4e07\u5e74\u524d\u4e0d\u4e45\u62b5\u8fbe\u65f6\uff0c\u4ed6\u4eec\u53ef\u80fd\u81f3\u5c11\u5728\u6b64\u671f\u95f4\u7684\u540e\u671f\u81f3\u5c11\u53d6\u5f97\u4e86\u4e00\u4e9b\u77f3\u5de5\u5177\u3002\u7559\u4e0b\u8003\u53e4\u5b66\u5bb6\u7684\u95ee\u9898\u662fNeanderthals\u662f\u4eceDeNisovans\u5b66\u5230\u8fd9\u4e9b\u5236\u9020\u6280\u5de7\uff0c\u8d21\u732e\u4e86\u81ea\u5df1\u7684\u4e00\u4e9b\u60f3\u6cd5\uff0c\u6216\u72ec\u7acb\u5730\u5f00\u53d1\u4e86\u7c7b\u4f3c\u7684\u6280\u672f\u3002\u518d\u6b21\uff0c\u7b54\u6848\u53ef\u80fd\u4e0d\u4f1a\u6765\u81eaDenisova Cave\u672c\u8eab\u3002\n    \u201c\u6211\u4eec\u9700\u8981\u7684\u662f\u5176\u4ed6\u9057\u5740\u5305\u542b\u72ec\u7279\u7684\u4eba\u5de5\u5236\u54c1\uff0c\u53ea\u6709Denisovan\u6216Neanderthal\u5316\u77f3/ DNA\u6c89\u79ef\u5728\u65c1\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2aHominin\u7ec4\u94fe\u63a5\u5230\u7279\u5b9a\u7684\u5de5\u4ef6\u7ec4\u5408\uff0c\u201dRoberts\u544a\u8bc9Ars\u3002\n \u7c7b\u4f3c\u7684\u95ee\u9898\u4ecb\u4e8e\u9aa8\u9abc\u5de5\u5177\u548c\u88c5\u9970\u54c1\u7ea6\u4f1a\u5230\u6700\u8fd145,000\u5c81\uff0c\u4e00\u4e2a\u65f6\u671f\u79f0\u4e3a\u521d\u59cb\u65e7\u77f3\u5668\u65f6\u4ee3\u3002\u6211\u4eec\u7684\u7269\u79cd\u62b5\u8fbe\u6b27\u4e9a\u4e9a\u6d32\uff0c\u6709\u65f6\u572850,000\u523045,000\u5e74\u524d\uff0c\u4e3a\u81ea\u5df1\u7684\u4fe1\u7528\u4ee4\u4eba\u5174\u594b\u5730\u8d4b\u4e88\u56f0\u6270\u8fd9\u4e9b\u5c42\u7684Denisova\u6d1e\u7a74\u548c\u6b27\u6d32\u5176\u4ed6\u5730\u70b9\u7684\u76f8\u5bf9\u5148\u8fdb\u7684\u9aa8\u9abc\u5de5\u5177\u548c\u73e0\u5b9d\u3002\u4f46\u6709\u8bc1\u636e\u8868\u660e\u6211\u4eec\u53ef\u80fd\u4f1a\u968f\u7740\u5c3c\u5b89\u5fb7\u7279\u4eba\u6765\u56de\u4ea4\u6613\u4e00\u4e9b\u6280\u672f\u3002\n  \u751f\u6d3b\u5728Denisova Cave\u7684Neanderthals\u5927\u7ea680,000\u5e74\u524d\u53ef\u80fd\u6ca1\u6709\u5269\u4f59\u7684\u6587\u5316\u8bb0\u5fc6\u4e0e\u53e6\u4e00\u79cd\u51a0\u519b\u96c6\u56e2\u5206\u4eab\u6d1e\u7a74;\u6bd5\u7adf\uff0cDenisovans\u5728\u8be5\u70b9\u7684\u6700\u540e40,000\u5e74\u7f3a\u5e2d\u4e86Denisova Cave\u3002\u56e0\u6b64\uff0c\u6709\u8da3\u7684\u662f\uff0c\u6709\u8da3\u7684\u662f\uff0c\u5728\u4e00\u7fa4DeNisovans\uff0c\u4ece\u7b2c\u4e00\u4e2a\u4eba\u53e3\u547c\u53eb\u6d1e\u7a74\u5bb6\u5ead\u547c\u5524\u6d1e\u7a74\u4e4b\u5bb6\u65f6\uff0c\u8fd9\u5f88\u6709\u610f\u601d\uff0c\u81f3\u5c11\u670980,000\u5e74\u524d\u3002 \n\u201cDenisova 11- Neanderthal\u6bcd\u4eb2\u548cDenisovan\u7684\u5973\u513f\u7684\u9aa8\u5934\u788e\u7247\u5230Denisovans\u548cNeanderthals\u81f3\u5c11\u4e00\u52b3\u6c38\u9038\u5730\u53d8\u5f97\u975e\u5e38\u8212\u9002\uff01\u201d\u7f57\u4f2f\u8328\u544a\u8bc9ars\u3002\n \u8fd9\u4e9b\u5c42\u7684Denisovan\u7ebf\u7c92\u4f53DNA\u5728\u8fd9\u4e9b\u5c42\u7684\u6d1e\u5c42\u697c\u5c42\u7c7b\u4f3c\u4e8e\u53e6\u4e00\u4e2aDANISovan\u7684DNA\u8003\u53e4\u5b66\u5bb6\u4ece\u85cf\u9ad8\u9ad8\u539f\u4e0a\u4ece70,000\u81f345,000\u5c81\u7684\u9057\u5740\u4e2d\u56de\u6536\u7684DNA\u8003\u53e4\u5b66\u5bb6\u3002\u8fd9\u53ef\u80fd\u6697\u793a\u7b2c\u4e8c\u4e2aDenisovan\u8fbe\u5230\u963f\u5c14\u6cf0\u7684\u4eba\u53e3\u6700\u521d\u6765\u81ea\u54ea\u91cc\u3002\u7814\u7a76\u52a8\u7269\u7684\u53e4\u751f\u7269\u5b66\u5bb6\u4ece\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u4ecd\u7136\u5b58\u5728\uff0c\u6765\u81ea\u4e1c\u5357\u4e9a\u7684\u4e00\u4e9b\u5927\u578b\u54fa\u4e73\u52a8\u7269\u6cbf\u7740\u559c\u9a6c\u62c9\u96c5\u5c71\u5c71\u9e93\u8fc1\u79fb\u5230\u963f\u5c14\u6cf0\u5c71\u8109\u3002\n \u201c\u8fd9\u4e9b\u52a8\u7269\u7fa4\u4f53\u8fc1\u5f99\u53ef\u80fd\u4f1a\u4fc3\u4f7fDenisovans\u7684\u6563\u5e2d\u8fdb\u5165\u5176\u9057\u9ab8\u9996\u6b21\u53d1\u73b0\u7684\u5730\u533a\uff0c\u201dZavala\u548c\u5979\u7684\u540c\u4e8b\u5199\u9053\u3002\n  \u5f53\u53e6\u4e00\u4e2a\u4e39\u5c3c\u65af\u74e6\u5c14\u65af\u4ecd\u7136\u572845,000\u5e74\u524d\uff0c\u5f53\u53e6\u4e00\u4e2a\u539f\u59cb\u7269\u79cd - \u7f8e\u56fd\u5f00\u59cb\u5c06\u7ebf\u7c92\u4f53DNA\u8131\u843d\u5230Denisova\u6d1e\u7a74\u7684\u5730\u677f\u4e0a\u3002\n \u5728\u6d1e\u7a74\u4e2d\u7684\u4e00\u4e2a\u8154\u5ba4\u7684\u6837\u54c1\u4e2d\uff0cZavala\u548c\u5979\u7684\u540c\u4e8b\u53d1\u73b0\u4e86\u6765\u81eaDeNisovans\uff0cNeanderthals\u548cHomo Sapiens\u7684\u7ebf\u7c92\u4f53DNA\u5e8f\u5217\u572845,000\u523022,000\u5e74\u4e4b\u95f4\u7684\u5c42\u3002\u603b\u7684\u6765\u8bf4\uff0c\u5f53\u6211\u4eec\u7269\u79cd\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u5230\u8fbe\u65f6\uff0cDenisovans\u548cNeanderthals\u53ef\u80fd\u4ecd\u7136\u4ecd\u7136\u751f\u6d3b\u5728\u963f\u5c14\u6cf0\u5c71\u8109\u3002\n \u8fd9\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6;\u963f\u5c14\u6cf0\u5c71\u8109\u7684\u4f4d\u7f6e\u5305\u62ecDenisova Cave\uff0c\u4f7f\u5176\u6210\u4e3a\u5728\u975e\u6d32\uff0c\u6b27\u6d32\u548c\u4e9a\u6d32\u5404\u5730\u79fb\u52a8\u7684\u7269\u79cd\u7684\u5730\u7406\u4f1a\u8bae\u70b9\u3002\u6765\u81ea\u6d1e\u7a74\u7684\u9aa8\u9abc\u548c\u7ebf\u7c92\u4f53DNA\u5305\u62ec\u6765\u81ea\u975e\u6d32\u548c\u4e1c\u4e9a\u7684\u9b23\u72d7\u7269\u79cd\u4ee5\u53ca\u706d\u7edd\u7684\u6b27\u6d32\u9b23\u72d7\u7269\u79cd\u3002\u4f46\u5b83\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u521d\u59cb\u65e7\u77f3\u5668\u65f6\u4ee3\u7684\u9aa8\u9abc\u5de5\u5177\u53ef\u80fd\u662f\u591a\u6570\u52aa\u529b\u3002 ", "note_en": "At various points in the last 300,000 years, Denisova Cave has sheltered three different species of hominins. But with fossils from only eight individuals\u2014four Denisovans, three Neanderthals, and the daughter of a Neanderthal/Denisovan pairing\u2014it\u2019s hard to tell a detailed story about when each species lived in the cave. According to a recent genetic study, however, the Denisovans\u00a0were the first, arriving around 250,000 years ago. And they may still have been there when the first members of our species arrived around 45,000 years ago.\n That timeline is the result of a recent study of mitochondrial DNA (genetic material passed directly from mother to child) mixed into the deep layers of sediment covering the cave floor. The fragments of ancient DNA probably came from a mixture of feces, decomposing remains, and shed skin and hair that ended up mixed with the dirt of the cave floor, according to archaeologist Elena Zavala of the Max Planck Institute for Evolutionary Anthropology, lead author of the study.\n &#34;We know that DNA can bind to the minerals found in the sediments and we have also seen microfossils when examining the sediments under a microscope,&#34; she told Ars in an email. &#34;Future studies linking specific elements of the sediment to DNA preservation will help increase our understanding of this process.&#34;\n Zavala and her colleagues sampled sediment from every layer of the cave, in all three chambers, at 10-15 centimeter intervals. Then they isolated the sequences of mitochondrial DNA from hominins and other mammal species, like mammoths, bears, and hyenas. To identify which hominin each of the 175 hominin mtDNA samples belonged to, they compared the fragments of DNA to specific parts of the genome that differ among Denisovans, Neanderthals, and us.\n  In a sediment layer that began piling up on the cave floor 250,000 ago, they found the earliest traces of Denisovan mtDNA. That&#39;s substantially older than the earliest Denisovan fossil from the cave, which dated to between 194,000 and 123,000 years ago. The earliest Neanderthals showed up in the cave sometime before 170,000 years ago, and for about 40,000 years, the two hominin groups seem to have shared the cave more or less. It\u2019s hard to say for sure, because the layers of sediment only break time down into chunks of several thousand years. That means archaeologists can\u2019t say whether the two species were roommates or whether they alternated possession of the cave every few years, decades, or centuries.\n    \u201cThe resolution of the chronology is too coarse-grained to distinguish events at even 1000-year resolution, so we can\u2019t say whether Denisovans and Neanderthals were cohabiting in the cave at times during the Middle Palaeolithic,\u201d University of Wollongong archaeologist Richard Roberts, a coauthor of the study, told Ars.\n In any case, the arrival of the Neanderthals came on the heels of a major change in the climate. Around 190,000 years ago, the climate in the Altai Mountains turned colder as the world moved out of a relatively warm interglacial period and into another Ice Age. We know this from chemical records locked in ice sheets, cave formations, and marine sediments around the world. The floor of Denisova Cave holds its own record of changing life in the Altai. In layers from this period, Zavala and her colleagues found less mitochondrial DNA from bears and wolves, and more from hyenas and the ancient relatives of modern cattle.\n Then 130,000 years ago, the climate shifted back into a warmer interglacial period. Deer and wild horses become more common in the mitochondrial DNA record, and the last traces of the Denisovans disappear from the cave by 120,000 years ago. We have no way to know whether they died out or just left. That answer, according to Zavala, probably lies buried at other sites in the region.\n \u201cTo better understand these questions we need to find more sites with Denisovan and Neanderthal remains across this time period,\u201d she told Ars. \u201cIt\u2019s possible that the movement or disappearance of the earlier Denisovan was due to climate, but to determine this we would need to identify similar changes in other locations with Denisovan remains. More sites from this time period are needed to track the movements (and disappearances) of different populations of both Neanderthals and Denisovans.\u201d\n  These questions matter, in part, because archaeologists want to know who made the stone tools they\u2019ve unearthed at Denisova Cave and other sites around Eurasia. The oldest tools at Denisova Cave date to a period called the early Middle Paleolithic, which spans roughly 200,000 to 170,000 years ago. Denisovans had the cave to themselves for most of that period, and Neanderthals showed up just in time for the last bit of it.\n The evidence seems to suggest that the \u201cfirst and principal makers\u201d of the cave\u2019s early Middle Paleolithic scrapers, notched tools, and cores were Denisovans. But since Neanderthals arrived shortly before 170,000 years ago, they may have made at least some of the stone tools from later in the period. That leaves archaeologists with the question of whether Neanderthals learned these manufacturing techniques from Denisovans, contributed some ideas of their own, or developed similar technology independently. Again, the answers probably won\u2019t come from Denisova Cave itself.\n    \u201cWhat we need are other sites that contain distinctive artefacts and only Denisovan or Neanderthal fossils/DNA deposited alongside them, so that we can link each hominin group to a specific artifact assemblage,\u201d Roberts told Ars.\n Similar questions linger about bone tools and ornaments dating to a much more recent 45,000 years old, a period called the Initial Upper Paleolithic. Our species arrived in Eurasia sometime between 50,000 and 45,000 years ago, and it\u2019s tempting to give ourselves credit for the relatively advanced suite of bone tools and jewelry that litter these layers of Denisova Cave and other sites across Europe. But there\u2019s  evidence to suggest that we probably traded some technology back and forth with the Neanderthals.\n  The Neanderthals living in Denisova Cave around 80,000 years ago probably had no cultural memory left of sharing the cave with another hominin group; after all, Denisovans had been absent from Denisova Cave for the last 40,000 years at that point. So it\u2019s interesting to wonder what both sides thought when a group of Denisovans, genetically distinct from the first population to call the cave home, showed up at least 80,000 years ago.\n \u201cDenisova 11\u2014the bone fragment of the daughter of a Neanderthal mother and Denisovan father\u2014bears witness to Denisovans and Neanderthals becoming very cosy at least once!\u201d Roberts told Ars.\n The Denisovan mitochondrial DNA in these layers of the cave floor is similar to that from another Denisovan whose DNA archaeologists recovered from a 70,000 to 45,000-year-old site on the Tibetan Plateau. And that could hint at where the second Denisovan population to arrive in the Altai originally came from. Paleontologists studying animal remains from this time period suggest that some large mammals from southeast Asia migrated along the foothills of the Himalayas into the Altai Mountains.\n \u201cThese faunal migrations may have spurred the dispersal of Denisovans into the region in which their remains were first discovered,\u201d Zavala and her colleagues wrote.\n  This second wave of Denisovans was still around 45,000 years ago when another hominin species\u2014us\u2014began shedding mitochondrial DNA into the floor of Denisova Cave.\n In their samples from one chamber of the cave, Zavala and her colleagues found mitochondrial DNA sequences from Denisovans, Neanderthals, and Homo sapiens in a layer dating between 45,000 and 22,000 years ago. Altogether, that suggests that Denisovans, as well as Neanderthals, may still have been living in the Altai Mountains when the first members of our species arrived.\n That\u2019s not terribly surprising; the location of the Altai Mountains, including Denisova Cave, makes it a geographical meeting point for species moving around among Africa, Europe, and Asia. Bones and mitochondrial DNA from the cave include hyena species from Africa and East Asia as well as extinct European hyena species. But it could also mean that the bone tools of the Initial Upper Paleolithic may have been a multispecies effort.", "posttime": "2021-06-29 23:54:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "cave,players,\u6d1e\u7a74", "title": "\u6240\u6709\u4e3b\u8981\u7684\u7403\u5458\u90fd\u5728Denisovan Cave\u5ea6\u8fc7\u4e86\u65f6\u95f4 ", "title_en": "All the major players spent time in the Denisovan cave", "transed": 1, "url": "https://arstechnica.com/science/2021/06/denisovans-were-the-first-hominins-to-arrive-at-denisova-cave/", "via": "", "real_tags": ["cave", "players", "\u6d1e\u7a74"]}, {"category": "", "categoryclass": "", "imagename": "759a8321f06929ddff23db6057bc3776.jpeg", "infoid": 1068640, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b56\u5212Solarwinds\u4f9b\u5e94\u94fe\u653b\u51fb\u7684\u56fd\u5bb6\u5dde\u7acb\u9ed1\u5ba2\u906d\u5230\u4e86\u4e00\u4e2aMicrosoft\u5de5\u4f5c\u8005\u7684\u8ba1\u7b97\u673a\uff0c\u5e76\u4f7f\u7528\u4e86\u5728\u661f\u671f\u4e94\u4e0b\u5348\u665a\u4e9b\u65f6\u5019\u53d1\u8868\u7684\u7b80\u7ea6\u53d1\u8868\u4e2d\u53d1\u5e03\u7684\u9488\u5bf9\u516c\u53f8\u5ba2\u6237\u7684\u76ee\u6807\u653b\u51fb\u3002\n \u9ed1\u5ba2\u96c6\u56e2\u8fd8\u4f7f\u7528\u5bc6\u7801\u55b7\u6d82\u548c\u86ee\u529b\u6280\u672f\u635f\u5bb3\u4e86\u4e09\u4e2a\u5b9e\u4f53\uff0c\u8be5\u6280\u672f\u901a\u8fc7\u8f70\u51fb\u5177\u6709\u5927\u91cf\u767b\u5f55\u731c\u6d4b\u7684\u767b\u5f55\u670d\u52a1\u5668\u6765\u83b7\u5f97\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u5e10\u6237\u3002\u9664\u4e86\u4e09\u4e2a\u672a\u516c\u5f00\u7684\u5b9e\u4f53\u5916\uff0c\u5fae\u8f6f\u8868\u793a\uff0c\u5bc6\u7801\u55b7\u6d82\u6d3b\u52a8\u662f\u201c\u4e3b\u8981\u662f\u4e0d\u6210\u529f\u7684\u3002\u201d\u5fae\u8f6f\u5df2\u7ecf\u901a\u77e5\u6240\u6709\u76ee\u6807\uff0c\u65e0\u8bba\u662f\u653b\u51fb\u662f\u5426\u6210\u529f\u3002\n  \u8be5\u53d1\u73b0\u8fdb\u5165\u5fae\u8f6f\u7ee7\u7eed\u8c03\u67e5Nobelium\uff0c\u5fae\u8f6f\u7684\u59d3\u540d\u4e3a\u4f7f\u7528SolarWinds\u8f6f\u4ef6\u66f4\u65b0\u548c\u5176\u4ed6\u624b\u6bb5\u635f\u5bb3\u5c5e\u4e8e\u4e5d\u4e2a\u7f8e\u56fd\u673a\u6784\u548c100\u4e2a\u79c1\u8425\u516c\u53f8\u7684\u7f51\u7edc\u3002\u8054\u90a6\u653f\u5e9c\u8868\u793a\uff0cNobelium\u662f\u4fc4\u7f57\u65af\u653f\u5e9c\u8054\u90a6\u5b89\u5168\u670d\u52a1\u7684\u4e00\u90e8\u5206\u3002\n \u201c\u4f5c\u4e3a\u6211\u4eec\u5bf9\u6b64\u6301\u7eed\u6d3b\u52a8\u7684\u8c03\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u8fd8\u68c0\u6d4b\u5230\u5c5e\u4e8e\u6211\u4eec\u5ba2\u6237\u652f\u6301\u4ee3\u7406\u7684\u673a\u5668\u4e0a\u7684\u4fe1\u606f\u7a83\u53d6\u6076\u610f\u8f6f\u4ef6\uff0c\u4ee5\u83b7\u5f97\u5c11\u6570\u5ba2\u6237\u7684\u57fa\u672c\u5e10\u6237\u4fe1\u606f\uff0c\u201d\u5fae\u8f6f\u5728\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8bf4\u3002 \u201c\u6f14\u5458\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4ee5\u63a8\u51fa\u9ad8\u5ea6\u6709\u9488\u5bf9\u6027\u7684\u653b\u51fb\u4f5c\u4e3a\u5176\u66f4\u5e7f\u6cdb\u7684\u5e7f\u544a\u7cfb\u5217\u7684\u4e00\u90e8\u5206\u3002\u201d\n \u6839\u636e\u8def\u900f\u793e\uff0c\u5fae\u8f6f\u5728\u5176\u4e2d\u4e00\u5bb6\u65b0\u95fb\u53d1\u5e03\u4f1a\u7684\u8bb0\u8005\u4e4b\u540e\u53d1\u8868\u4e86\u8fdd\u7ea6\u62ab\u9732\uff0c\u8981\u6c42\u8be5\u516c\u53f8\u8be2\u95ee\u5176\u53d1\u9001\u7ed9\u76ee\u6807\u6216\u9ed1\u5ba2\u5ba2\u6237\u7684\u901a\u77e5\u3002\u5fae\u8f6f\u5e76\u6ca1\u6709\u900f\u9732\u5de5\u4eba\u7535\u8111\u7684\u611f\u67d3\uff0c\u76f4\u5230\u4e94\u6bb5\u53d1\u5e03\u7684\u7b2c\u56db\u6bb5\u3002\n    Reuters\u8868\u793a\uff0c\u53d7\u611f\u67d3\u7684\u4ee3\u7406\u5546\u53ef\u4ee5\u8bbf\u95ee\u7ed3\u7b97\u8054\u7cfb\u4fe1\u606f\u548c\u5ba2\u6237\u6240\u652f\u4ed8\u7684\u670d\u52a1\u3002 \u201c\u5fae\u8f6f\u8b66\u544a\u53d7\u5f71\u54cd\u7684\u5ba2\u6237\u8c28\u614e\u5bf9\u4ed6\u4eec\u7684\u7ed3\u7b97\u8054\u7cfb\u4eba\uff0c\u5e76\u8003\u8651\u66f4\u6539\u8fd9\u4e9b\u7528\u6237\u540d\u548c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4ee5\u53ca\u7981\u6b62\u767b\u5f55\u7684\u65e7\u7528\u6237\u540d\uff0c\u201d\u65b0\u95fb\u670d\u52a1\u62a5\u544a\u3002\n  \u5173\u4e8eSolarwinds\u7684\u4f9b\u5e94\u94fe\u653b\u51fb12\u6708\u6765\u4e86\u5149\u7ebf\u3002\u5728\u9ed1\u5ba2\u653b\u51fb\u57fa\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u7684\u516c\u53f8\u5e76\u63a7\u5236\u5176\u8f6f\u4ef6\u6784\u5efa\u7cfb\u7edf\u4e4b\u540e\uff0cNobelium\u5c06\u6076\u610f\u66f4\u65b0\u63a8\u5230\u7ea618,000\u4e2aSolarwinds\u5ba2\u6237\u3002 \uff06\uff0334;\u5fae\u8f6f\u62a5\u544a\u7684\u6700\u65b0\u7f51\u7edc\u653b\u51fb\u4e0d\u4f1a\u8ba9\u6211\u4eec\u7684\u516c\u53f8\u6216\u5ba2\u6237\u4ee5\u4efb\u4f55\u65b9\u5f0f\uff0c\uff06\uff0334; Solarwinds\u4ee3\u8868\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\u3002 \nSolarwinds\u4f9b\u5e94\u94fe\u653b\u51fb\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u8bfa\u8d1d\u5229\u635f\u5bb3\u5176\u76ee\u6807\u7684\u65b9\u5f0f\u3002\u53cd\u6076\u610f\u8f6f\u4ef6\u63d0\u4f9b\u5546Malwarebytes\u8868\u793a\uff0c\u5b83\u4e5f\u88abNobelium\u611f\u67d3\uff0c\u800c\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u5411\u91cf\uff0c\u8be5\u516c\u53f8\u672a\u8bc6\u522b\u3002\n Microsoft\u548c\u7535\u5b50\u90ae\u4ef6\u7ba1\u7406\u63d0\u4f9b\u5546Mimecast\u4e5f\u8868\u793a\uff0c\u4ed6\u4eec\u4e5f\u88ab\u8bfa\u8d1d\u91cc\u59c6\u780d\u6210\u4e86\uff0c\u7136\u540e\u7ee7\u7eed\u4f7f\u7528\u59a5\u534f\u6765\u7834\u89e3\u516c\u53f8\u7684\u5ba2\u6237\u6216\u5408\u4f5c\u4f19\u4f34\u3002\n \u5fae\u8f6f\u8868\u793a\uff0c\u5bc6\u7801\u55b7\u6d82\u6d3b\u52a8\u9488\u5bf9\u7279\u5b9a\u5ba2\u6237\uff0c\u5176\u4e2d57\uff05\u7684IT\u516c\u53f8\uff0c20\uff05\u7684\u653f\u5e9c\u7ec4\u7ec7\uff0c\u4ee5\u53ca\u5176\u4f59\u7684\u975e\u653f\u5e9c\u7ec4\u7ec7\uff0c\u667a\u5e93\u548c\u91d1\u878d\u670d\u52a1\u3002\u5927\u7ea645\uff05\u7684\u6d3b\u52a8\u4e13\u6ce8\u4e8e\u7f8e\u56fd\u5174\u8da3\uff0c10\uff05\u7684\u4eba\u6709\u9488\u5bf9\u6027\u7684\u82f1\u56fd\u5ba2\u6237\uff0c\u8f83\u5c0f\u7684\u6570\u91cf\u5728\u5fb7\u56fd\u548c\u52a0\u62ff\u5927\u3002\u603b\u800c\u8a00\u4e4b\uff0c36\u4e2a\u56fd\u5bb6\u7684\u5ba2\u6237\u662f\u9488\u5bf9\u6027\u7684\u3002\n \u8def\u900f\u793e\u5f15\u7528\u4e86\u4e00\u4e2aMicrosoft\u53d1\u8a00\u4eba\uff0c\u8868\u793a\uff0c\u5468\u4e94\u62ab\u9732\u7684\u8fdd\u89c4\u662fNobelium\uff06\uff0339;\u4e4b\u524d\u7684\u5fae\u8f6f\u7684\u6210\u529f\u653b\u51fb\u3002\u8be5\u516c\u53f8\u5c1a\u672a\u63d0\u4f9b\u5173\u952e\u7ec6\u8282\uff0c\u5305\u62ec\u4ee3\u7406\u8ba1\u7b97\u673a\u53d7\u5230\u635f\u5bb3\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u59a5\u534f\u662f\u5426\u5728\u5f52\u5c5e\u7f51\u7edc\u4e0a\u7684Microsoft\u7f51\u7edc\u6216\u627f\u5305\u5546\u8bbe\u5907\u4e0a\u51fb\u4e2dMicrosoft-Managed\u8ba1\u7b97\u673a\u3002\n  \u201c\u6211\u7684\u610f\u601d\u662f\uff0c\u8036\u7a23\uff0c\u5982\u679c\u5fae\u8f6f\u65e0\u6cd5\u4fdd\u7559\u81ea\u5df1\u7684\u5957\u4ef6\u6e05\u6670\u7684\u75c5\u6bd2\uff0c\u90a3\u4e48\u5176\u4f59\u7684\u4f01\u4e1a\u4e16\u754c\u5e94\u8be5\u5982\u4f55\uff1f\u201d\u72ec\u7acb\u5b89\u5168\u7814\u7a76\u5458Kenn White\u544a\u8bc9\u6211\u3002 \u201c\u4f60\u4f1a\u8ba4\u4e3a\u5ba2\u6237\u9762\u5411\u5ba2\u6237\u7684\u7cfb\u7edf\u5c06\u662f\u5176\u4e2d\u4e00\u4e9b\u6700\u786c\u5316\u7684\u7cfb\u7edf\u3002\u201d ", "note_en": "The nation-state hackers who orchestrated the SolarWinds supply chain attack compromised a Microsoft worker\u2019s computer and used the access to launch targeted attacks against company customers, Microsoft said in a terse statement published late on a Friday afternoon.\n The hacking group also compromised three entities using password-spraying and brute-force techniques, which gain unauthorized access to accounts by bombarding login servers with large numbers of login guesses. With the exception of the three undisclosed entities, Microsoft said, the password-spraying campaign was \u201cmostly unsuccessful.\u201d Microsoft has since notified all targets, whether attacks were successful or not.\n  The discoveries came in Microsoft\u2019s continued investigation into Nobelium, Microsoft\u2019s name for the sophisticated hacking group that used SolarWinds software updates and other means to compromise networks belonging to nine US agencies and 100 private companies. The federal government has said Nobelium is part of the Russian government\u2019s Federal Security Service.\n \u201cAs part of our investigation into this ongoing activity, we also detected information-stealing malware on a machine belonging to one of our customer support agents with access to basic account information for a small number of our customers,\u201d Microsoft said in a  post. \u201cThe actor used this information in some cases to launch highly targeted attacks as part of their broader campaign.\u201d\n According to Reuters, Microsoft published the breach disclosure after one of the news outlet\u2019s reporters asked the company about the notification it sent to targeted or hacked customers. Microsoft didn\u2019t reveal the infection of the worker\u2019s computer until the fourth paragraph of the five-paragraph post.\n    The infected agent, Reuters said, could access billing contact information and the services the customers paid for, among other things. \u201cMicrosoft warned affected customers to be careful about communications to their billing contacts and consider changing those usernames and email addresses, as well as barring old usernames from logging in,\u201d the news service reported.\n  The supply chain attack on SolarWinds  came to light in December. After hacking the Austin, Texas-based company and taking control of its software-build system, Nobelium  pushed malicious updates to about 18,000 SolarWinds customers. &#34;The latest cyberattack reported by Microsoft does not involve our company or our customers in any way,&#34; a SolarWinds representative said in an email.\n  The SolarWinds supply chain attack wasn\u2019t the only way Nobelium compromised its targets. Anti-malware provider Malwarebytes has said it  was also infected by Nobelium but through a different vector, which the company didn\u2019t identify.\n Both Microsoft and email management provider Mimecast have also said that they, too, were hacked by Nobelium, which then went on to use the compromises to hack the companies\u2019 customers or partners.\n Microsoft said that the password-spraying activity targeted specific customers, with 57 percent of them IT companies, 20 percent government organizations, and the rest nongovernmental organizations, think tanks, and financial services. About 45 percent of the activity focused on US interests, 10 percent targeted UK customers, and smaller numbers were in Germany and Canada. In all, customers in 36 countries were targeted.\n Reuters, citing a Microsoft spokesman, said that the breach disclosed Friday wasn\u2019t part of Nobelium&#39;s previous successful attack on Microsoft. The company has yet to provide key details, including how long the agent\u2019s computer was compromised and whether the compromise hit a Microsoft-managed machine on a Microsoft network or a contractor device on a home network.\n  \u201cI mean, Jesus, if Microsoft can\u2019t keep their own kit clear of viruses, how is the rest of the corporate world supposed to?\u201d Kenn White, independent security researcher, told me. \u201cYou would have thought that customer-facing systems would be some of the most hardened around.\u201d", "posttime": "2021-06-29 23:53:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u9ed1\u5ba2,hackers,\u5ba2\u6237", "title": "Solarwinds\u9ed1\u5ba2\u7834\u574f\u4e86\u65b0\u7684\u53d7\u5bb3\u8005\uff0c\u5305\u62ecMicrosoft\u652f\u6301\u4ee3\u7406\u4eba ", "title_en": "SolarWinds hackers breach new victims, including a Microsoft support agent", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/06/solarwinds-hackers-breach-new-victims-including-a-microsoft-support-agent/", "via": "", "real_tags": ["microsoft", "\u9ed1\u5ba2", "hackers", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "d97bfbb1efe8ada450d1f217c85eadbe.jpg", "infoid": 1068639, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bcf\u5e74\u6570\u5341\u4ebf\u6b21\uff0c\u4eba\u4eec\u8f6c\u5411\u8c37\u6b4c\u7684\u7f51\u9875\u641c\u7d22\u6846\uff0c\u4ee5\u5e2e\u52a9\u5f04\u6e05\u695a\u4ed6\u4eec\u7684\u76ae\u80a4\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u73b0\u5728\uff0c\u8c37\u6b4c\u6b63\u51c6\u5907\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u56fe\u50cf\u8bc6\u522b\u7b97\u6cd5\u6765\u63d0\u4f9b\u66f4\u591a\u4e13\u5bb6\u548c\u4e2a\u6027\u5316\u7684\u5e2e\u52a9\u3002\u672c\u516c\u53f8\u5f00\u53d1\u5546\u4f1a\u8bae\u4e0a\u4e2a\u6708\u7684\u7b80\u8981\u6f14\u793a\u663e\u793a\uff0c\u8be5\u670d\u52a1\u8868\u660e\u57fa\u4e8e\u4e0a\u4f20\u7167\u7247\u7684\u51e0\u79cd\u53ef\u80fd\u7684\u76ae\u80a4\u72b6\u51b5\u3002\n \u673a\u5668\u5728\u7814\u7a76\u4e2d\u5177\u6709\u5339\u914d\u6216\u4f18\u4e8e\u7684\u4e13\u5bb6\u76ae\u80a4\u79d1\u533b\u751f\uff0c\u5176\u4e2d\u7b97\u6cd5\u548c\u533b\u751f\u4ece\u8fc7\u53bb\u60a3\u8005\u5ba1\u67e5\u56fe\u50cf\u3002\u4f46\u662f\uff0c\u4ece\u673a\u5668\u5b66\u4e60\u548c\u5065\u5eb7\u673a\u5668\u5b66\u4e60\u548c\u5065\u5eb7\u7814\u7a76\u5458\u7f57\u897f\u90a6\u79d1\u533b\u751f\u548c\u7814\u7a76\u4eba\u5458\uff0c\u65af\u5766\u798f\u76ae\u80a4\u79d1\u533b\u751f\u548c\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u6ca1\u6709\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u6ca1\u6709AI\u56fe\u50cf\u5206\u6790\u5de5\u5177\u7684\u8bc1\u636e\u3002 \u201c\u8bb8\u591a\u4eba\u4e0d\u5728\u771f\u5b9e\u4e16\u754c\u7684\u73af\u5883\u4e2d\u7a81\u7136\u51fa\u73b0\uff0c\u201d\u5979\u8bf4\u3002\n \u8c37\u6b4c\u7684\u65b0\u5e94\u7528\u7a0b\u5e8f\u4e5f\u6ca1\u6709\u4e34\u5e8a\u9a8c\u8bc1\uff0c\u4f46\u516c\u53f8\u7684AI\u5b9e\u529b\u548c\u6700\u8fd1\u7684\u536b\u751f\u4fdd\u5065\u90e8\u95e8\u7684\u79ef\u7d2f\u4f7f\u5176AI\u76ae\u80a4\u79d1\u5e94\u7528\u7a0b\u5e8f\u663e\u7740\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u76ae\u80a4\u670d\u52a1\u5c06\u4ece\u5176\u5bb6\u5ead\u8349\u576a\u548c\u7f8e\u56fd\u6700\u5927\u7684\u5e02\u573a\u5f00\u59cb\u3002\u8be5\u670d\u52a1\u4e0d\u592a\u53ef\u80fd\u968f\u65f6\u5206\u6790\u7f8e\u56fd\u76ae\u80a4\u7455\u75b5\u3002\n \u5728\u5f00\u53d1\u4eba\u5458\u4f1a\u8bae\u4e0a\uff0c\u8c37\u6b4c\u8c37\u6b4c\u9996\u5e2d\u536b\u751f\u5b98Karen Desalvo\u8868\u793a\uff0c\u8be5\u516c\u53f8\u65e8\u5728\u63a8\u51fa\u5b83\u5728\u4eca\u5e74\u5e74\u5e95\u4e4b\u524d\u5728\u6b27\u76df\u63a8\u51fa\u76ae\u80a4\u79d1\u534f\u52a9\u5de5\u5177\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u9891\u8868\u660e\u67d0\u4eba\u7684\u624b\u81c2\u4e0a\u7684\u6807\u8bb0\u53ef\u80fd\u662f\u4e00\u4e2a\u9f39\u9f20\u7279\u8272\uff0c\u8bf4\u660e\u8fd9\u662f\u6b27\u76df\u7684\u6279\u51c6\u533b\u7597\u5668\u68b0\u3002\u540c\u6837\u7684\u7b14\u8bb0\u589e\u52a0\u4e86\u4e00\u4e2a\u8b66\u544a\uff1a\u201c\u5728\u7f8e\u56fd\u4e0d\u53ef\u7528\u3002\u201d\n    \u8be5\u516c\u53f8\u7684\u7f8e\u56fd - \u975e\u7b2c\u4e00\u7b56\u7565\u7a81\u51fa\u4e86\u5982\u4f55\u66f4\u5bb9\u6613\u8d62\u5f97\u6b27\u6d32\u7684\u533b\u7597\u5e94\u7528\u6279\u51c6\u800c\u4e0d\u662f\u7f8e\u56fd\u3002\u8c37\u6b4c\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u8be5\u516c\u53f8\u5e0c\u671b\u5728\u7f8e\u56fd\u63d0\u4f9b\u670d\u52a1\uff0c\u4f46\u5728\u53ef\u80fd\u8de8\u8d8a\u5927\u897f\u6d0b\u65f6\u6ca1\u6709\u65f6\u95f4\u7ebf;\u4ed6\u4eec\u62d2\u7edd\u53d1\u8868\u8bc4\u8bba\u8c37\u6b4c\u662f\u5426\u4e0e\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u6709\u5173\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u8c08\u5224\uff0c\u4f46\u627f\u8ba4\u8be5\u673a\u6784\u7684\u5ba1\u6279\u6d41\u7a0b\u53ef\u80fd\u66f4\u957f\u3002\n \u5c06\u6b27\u6d32\u4f20\u7edf\u7684\u7845\u8c37\u89c6\u56fe\u7ffb\u8f6c\u4f5c\u4e3a\u4e00\u4e2a\u7ea2\u78c1\u5e26\u6a2a\u5411\u654c\u5bf9\u7684\u65b0\u60f3\u6cd5\u3002 2012\u5e74\u548c2018\u5e74\u95f4\uff0cFacebook\u5728\u7231\u5c14\u5170\u6570\u636e\u76d1\u7ba1\u673a\u6784\u5ba1\u8ba1\u540e\u6ca1\u6709\u63d0\u4f9b\u6b27\u76df\u7684\u9762\u90e8\u8ba4\u53ef\u5efa\u8bae\uff0c\u8be5\u516c\u53f8\u8feb\u4f7f\u8be5\u516c\u53f8\u505c\u7528\u8be5\u529f\u80fd\u5e76\u5220\u9664\u5176\u6b27\u6d32\u6559\u80b2\u50a8\u5b58\u3002\u81ea2014\u5e74\u4ee5\u6765\uff0c\u8c37\u6b4c\u5df2\u88ab\u8981\u6c42\u5141\u8bb8\u6b27\u76df\u516c\u6c11\u8981\u6c42\u5c06\u5176\u5173\u4e8e\u4ed6\u4eec\u7684\u65e7\u94fe\u8def\u4ece\u516c\u53f8\u7684\u641c\u7d22\u5f15\u64ce\u64e6\u6d17\uff0c\u4ee5\u201c\u88ab\u9057\u5fd8\u7684\u6743\u5229\u201d\u3002\n \u8c37\u6b4c\u8868\u793a\uff0c\u5b83\u7684\u76ae\u80a4\u5e94\u7528\u7a0b\u5e8f\u88ab\u6279\u51c6\u201cCE\u6807\u8bb0\u4e3a\u6b27\u76df\u7684I\u7c7b\u533b\u7597\u5668\u68b0\u201d\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u5728\u96c6\u56e2\u548c\u5176\u4ed6\u56fd\u5bb6\u9500\u552e\u8ba4\u8bc6\u5230\u8be5\u6807\u51c6\u3002\u5728\u82f1\u56fd\u7684\u8463\u4e8b\u957f\u517c\u6570\u5b57\u5065\u5eb7\u54a8\u8be2\u516c\u53f8\u8463\u4e8b\u603b\u7ecf\u7406\u970d\u683c\u54c8\u7ef4\u8868\u793a\uff0c\u8be5\u516c\u53f8\u5c06\u9762\u4e34\u76f8\u5bf9\u8f83\u5c11\u7684\u969c\u788d\uff0c\u4ee5\u786e\u4fdd\u8be5\u6e05\u5173\u3002 \u201c\u4f60\u57fa\u672c\u4e0a\u586b\u5199\u4e86\u4e00\u79cd\u5f62\u5f0f\u548c\u81ea\u6211\u8ba4\u8bc1\uff0c\u201d\u4ed6\u8bf4\u3002\u8c37\u6b4c\u7684\u4f1a\u8bae\u4e0a\u4e2a\u6708\u5728\u66f4\u4e25\u683c\u7684\u6b27\u76df\u89c4\u5219\u4e4b\u524d\u4e3e\u884c\u4e86\u4e00\u5468\u524d\uff0c\u54c8\u7ef4\u8bf4\uff0c\u54c8\u7ef4\u8bf4\u9700\u8981\u8bb8\u591a\u5065\u5eb7\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5305\u62ec\u8c37\u6b4c\uff0c\u4ee5\u8868\u660e\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f\u6709\u6548\u7684\u3002\u9884\u5148\u5b58\u5728\u7684\u5e94\u7528\u7a0b\u5e8f\u76f4\u52302025\u5e74\u9075\u5b88\u65b0\u89c4\u5219\u3002 \n\u4e0a\u4e2a\u6708\u7684\u6f14\u793a\u662f\u7b80\u77ed\u7684\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u4e0d\u662f\u6700\u7ec8\u7684\uff0c\u4f46\u7f8e\u56fdAI\u536b\u751f\u8f6f\u4ef6\u7684\u4e13\u5bb6\u8868\u793a\uff0c\u5982\u679c\u5b83\u5e26\u6765\u76ae\u80a4\u5e94\u7528\u7a0b\u5e8f\u5bb6\u5ead\uff0c\u8c37\u6b4c\u53ef\u80fd\u4f1a\u9762\u4e34\u66f4\u591a\u53c2\u4e0e\u6d41\u7a0b\u3002 FDA\u7684\u53d1\u8a00\u4eba\u62d2\u7edd\u53d1\u8868\u8bc4\u8bba\u8c37\u6b4c\uff06\uff0339; S\u670d\u52a1\uff0c\u4f46\u662f\u8bf4\u58f0\u79f0\u7528\u4e8e\uff06\uff0334\u7684\u8f6f\u4ef6;\u4eba\u4eec\u7684\u8bca\u65ad\uff0c\u6cbb\u6108\uff0c\u9884\u9632\u6216\u6cbb\u7597\u4eba\u5458\uff06\uff0334;\u53ef\u88ab\u89c6\u4e3a\u533b\u7597\u8bbe\u5907\u5e76\u8981\u6c42\u4ee3\u7406\u6279\u51c6\u3002\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u7535\u8bdd\u8bf4\uff0c\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u8be5\u673a\u6784\u901a\u5e38\u9700\u8981\uff06\uff0334;\u67e5\u770b\u8f6f\u4ef6\uff06\uff0339; S\u9884\u671f\u7528\u9014\u548c\u4e3a\u4ea7\u54c1\u5236\u9020\u7684\u6743\u5229\u8981\u6c42\u3002\uff06\uff0334;\u53d1\u8a00\u4eba\u8865\u5145\u8bf4\uff0c\u8be5\u673a\u6784\u5df2\u53d1\u51fa\u6307\u5bfc\uff0c\u9f13\u52b1\u5404\u79cd\u4eba\u53e3\u6536\u96c6\u6570\u636e\u3002\n    \u6f14\u793a\u4e2d\u6240\u793a\u7684\u8bbe\u8ba1\u8981\u6c42\u4e00\u4e2a\u4eba\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u548c\u8ddd\u79bb\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u548c\u8ddd\u79bb\u5f39\u51fa\u4e09\u5f20\u7167\u7247\u3002\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u6dfb\u52a0\u53d7\u5f71\u54cd\u7684\u8eab\u4f53\u90e8\u4f4d\u7b49\u4fe1\u606f\uff0c\u5e76\u4e14\u5b83\u4eec\u5b58\u5728\u95ee\u9898\u3002\u70b9\u51fb\u201c\u63d0\u4ea4\u201d\u5411\u8c37\u6b4c\u7684\u56fe\u50cf\u63d0\u4ea4\u3002\u7136\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u663e\u793a\u201c\u5efa\u8bae\u7684\u6761\u4ef6\u201d\uff0c\u663e\u793a\u56fe\u50cf\u6240\u793a\u7684\u53ef\u80fd\u6761\u4ef6\u3002\u653b\u51fb\u4e00\u4e2a\u653b\u51fb\u5217\u8868\u8bf8\u5982\u75c7\u72b6\uff0c\u4f20\u67d3\u75c5\u548c\u6cbb\u7597\u65b9\u6848\u5982\u75c7\u72b6\uff0c\u4f20\u67d3\u6027\u548c\u6cbb\u7597\u65b9\u6848\u3002\u8c37\u6b4c\u8868\u793a\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u57f9\u8bad\u4e86\u201c\u6570\u5341\u4e07\u4e2a\u76ae\u80a4\u56fe\u50cf\u201d\uff0c\u53ef\u4ee5\u8bc6\u522b288\u6761\u75c5\u75c7\uff0c\u5305\u62ec\u76ae\u80a4\u764c\uff0c\u5360\u5e38\u89c1\u76ae\u80a4\u79d1\u768490\uff05\u3002\n FDA\u8c41\u514d\u4e00\u4e9b\u5065\u5eb7\u8f6f\u4ef6\uff0c\u5b83\u8ba4\u4e3a\u201c\u8f83\u4f4e\u98ce\u9669\u201d-Such\u4f5c\u4e3a\u201c\u5065\u5eb7\u201d\u5efa\u8bae\uff0c\u5982\u7cd6\u5c3f\u75c5\u7ba1\u7406\u6216\u6709\u5173\u5065\u5eb7\u75c7\u72b6\u7684\u4fe1\u606f - \u6765\u81ea\u533b\u7597\u8bbe\u5907\u6279\u51c6\u3002\u5b83\u9700\u8981\u5bf9\u4ed6\u4eba\u7684\u6279\u51c6\uff0c\u4f8b\u5982\u63d0\u4f9b\u7279\u5b9a\u8bca\u65ad\u7684\u90a3\u4e9b\uff0c\u6216\u7528\u4f5c\u542c\u8bca\u5668\u7b49\u533b\u7597\u8bbe\u5907\u7684\u5e94\u7528\u3002\u9700\u8981\u6e05\u9664\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u90a3\u4e9b\u4e0d\u96be\u4ee5\u67e5\u660e\u7684\u90a3\u4e9b\uff0c\u56e0\u4e3a\u533b\u7597\u8f6f\u4ef6\u548c\u7ba1\u7406\u5b83\u7684\u89c4\u5219\u76f8\u5bf9\u8f83\u65b0\u3002\n Bradley Thompson\u662f\u4e00\u5bb6\u4e0e\u7231\u666e\u65af\u5766\u8d1d\u514b\u5c14\u7eff\u8272\u7684\u76d1\u7ba1\u5f8b\u5e08\uff0c\u5728\u8bd5\u56fe\u786e\u5b9a\u4ed6\u4eec\u662f\u5426\u9700\u8981FDA\u7b7e\u540d\u65f6\uff0c\u8bf7\u5c11\u5c11\u6570\u5173\u952e\u95ee\u9898\u3002\u5b83\u4eec\u5305\u62ec\u8f6f\u4ef6\u7684\u8f93\u51fa\u5982\u4f55\u5411\u67d0\u4eba\u5448\u73b0\uff0c\u4ee5\u53ca\u516c\u53f8\u662f\u5426\u5236\u5b9a\u4e86\u7279\u5b9a\u7684\u533b\u7597\u7d22\u8d54\u3002\n \u8c37\u6b4c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u7a81\u51fa\u663e\u793a\u4e00\u4e2a\u53ef\u80fd\u7684\u76ae\u80a4\u72b6\u51b5\uff0c\u4ee5\u54cd\u5e94\u4e00\u4e2a\u4eba\u7684\u7167\u7247\uff0c\u5e76\u663e\u793a\u51fa\u8b66\u544a\u8bf4\u201c\u8fd9\u91cc\u5217\u51fa\u7684\u5efa\u8bae\u6761\u4ef6\u4e0d\u662f\u533b\u5b66\u8bca\u65ad\u201d\u3002\u4e00\u5bb6\u516c\u53f8\u53d1\u8a00\u4eba\u5c06\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f5c\u7528\u4e3a\u641c\u7d22\u5f15\u64ce\uff0c\u663e\u793a\u4e00\u4e2a\u4eba\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u8ba9\u4eba\u4eec\u4ed4\u7ec6\u9605\u8bfb\u5e76\u63d0\u53d6\u4ed6\u4eec\u81ea\u5df1\u7684\u7ed3\u8bba\u3002\n \u7136\u800c\uff0c\u8c37\u6b4c\u4e5f\u5f3a\u8c03\u4e86\u76ae\u80a4\u5e94\u7528\u7684\u533b\u7597\u5267\u3002\u536b\u751f\u5238\u7684Desalvo\u8868\u793a\uff0c\u8c37\u6b4c\u5f00\u53d1\u4e86\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u76ae\u80a4\u4e13\u5bb6\u6ca1\u6709\u8db3\u591f\u7684\u76ae\u80a4\u4e13\u5bb6\u6765\u5e2e\u52a9\u6bcf\u4e2a\u4eba\u90fd\u6709\u76ae\u80a4\u72b6\u51b5\u3002\u8c37\u6b4c\u7684\u535a\u5ba2\u5e16\u5b50\u5c06\u8be5\u5e94\u7528\u7a0b\u5e8f\u94fe\u63a5\u5230\u540c\u884c\u8bc4\u5ba1\u7684\u7814\u7a76\uff0c\u5176\u4e2d\u516c\u53f8\u7684\u6280\u672f\u4e0e\u533b\u751f\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u8bf4\uff1a\u201c\u6211\u4eec\u7684AI\u7cfb\u7edf\u53ef\u4ee5\u5b9e\u73b0\u4e0e\u7f8e\u56fd\u8463\u4e8b\u4f1a\u8ba4\u8bc1\u7684\u76ae\u80a4\u79d1\u533b\u751f\u76f8\u63d0\u5e76\u8bba\u7684\u51c6\u786e\u6027\u3002\u201d\n \u5938\u8000\u6c64\u666e\u68ee\u5f8b\u5e08\u7684\u5f8b\u5e08\u3002 \u201c\u771f\u7684\u6697\u793a\u8fd9\u81f3\u5c11\u662f\u4eba\u7c7b\u533b\u5e08\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u8bf4 - \u7d22\u8d54\u7684\u7c7b\u578b\u53ef\u80fd\u4f1a\u611f\u5174\u8da3\u3002 ", "note_en": "Billions of times each year, people turn to Google\u2019s web  search box for help figuring out what\u2019s wrong with their skin. Now,  Google is preparing to launch an app that uses image recognition  algorithms to provide more expert and personalized help. A brief demo at the company\u2019s developer conference  last month showed the service suggesting several possible skin conditions based on uploaded photos.\n Machines have  matched or  outperformed expert dermatologists in studies in which algorithms and doctors scrutinize images from past patients. But there\u2019s little evidence from clinical trials deploying such technology, and no AI image analysis tools are approved for dermatologists to use in the US, says Roxana Daneshjou, a Stanford dermatologist and researcher in  machine learning and health. \u201cMany don\u2019t pan out in the real world setting,\u201d she says.\n Google\u2019s new app isn\u2019t clinically validated yet either, but the company\u2019s AI prowess and recent buildup of its health care division make its AI dermatology app notable. Still, the skin service will start small\u2014and far from its home turf and largest market in the US. The service is not likely to analyze American skin blemishes any time soon.\n At the developer conference, Google\u2019s chief health officer, Karen DeSalvo, said the company aims to launch what it calls a dermatology assist tool in the European Union as soon as the end of this year. A video of the app suggesting that a mark on someone\u2019s arm could be a mole featured a caption saying it was an approved medical device in the EU. The same note added a caveat: \u201cNot available in the US.\u201d\n    The company\u2019s America-not-first strategy highlights how it can be easier to win approval for medical apps in Europe than in the US. A Google spokesperson said the company would like to offer the service in the US but didn\u2019t have a timeline on when it might cross the Atlantic; they declined to comment on whether Google has talked with the US Food and Drug Administration about the app but acknowledged the agency\u2019s approval process can be longer.\n That flips the traditional Silicon Valley view of Europe as a red-tape-strewn landscape hostile to new ideas. Between 2012 and 2018, Facebook did not offer face-recognition suggestions in the EU after an audit by Ireland\u2019s data regulator forced the company to deactivate the feature and delete its stockpile of European faceprints. Since 2014, Google has been required to allow EU citizens to request that old links about them be scrubbed from the company\u2019s search engine under the \u201c right to be forgotten.\u201d\n Google says its skin app is approved \u201cCE marked as a Class I medical device in the EU,\u201d meaning it can be sold in the bloc and other countries recognizing that standard. The company would have faced relatively few hurdles to secure that clearance, says Hugh Harvey, managing director at Hardian Health, a digital health consultancy in the UK. \u201cYou essentially fill in a form and self-certify,\u201d he says. Google\u2019s conference last month took place a week before tighter EU rules took effect that Harvey says require many health apps, likely including Google\u2019s, to show that an app is effective, among other things. Pre-existing apps have until 2025 to comply with the new rules.\n Last month\u2019s demo was brief, and the app\u2019s design is not final, but US experts on AI health software say that Google could face a more involved process from the FDA if it brings its skin app home. A spokesperson for the FDA declined to comment on Google&#39;s service but said software that claims to be used for &#34;diagnosis, cure, prevention, or treatment of people&#34; may be considered a medical device and require agency approval. To make that call, the spokesperson said the agency generally needs to &#34;review the software&#39;s intended use and the claims made for the product.&#34; The spokesperson added that the agency has issued guidance encouraging collection of data from diverse populations.\n    The design shown in the demo requires a person to snap three photos of their blemish from different angles and distances. The user can optionally add information such as the body part affected and how long they\u2019ve had the problem. Tapping \u201cSubmit\u201d zips the images off to Google. The app then displays \u201cSuggested conditions,\u201d showing possible conditions illustrated by images. Tapping on one brings up a list of key information such as symptoms, contagiousness, and treatment options. Google says the app was trained on \u201chundreds of thousands of skin images\u201d and can identify 288 conditions, including skin cancers, covering roughly 90 percent of common dermatology web searches.\n The FDA exempts some health software it deems \u201clower risk\u201d\u2014such as \u201cwellness\u201d advice like diabetes management or information about health symptoms\u2014from medical device approvals. It requires approval for others, such as those offering specific diagnoses, or apps that function as medical devices such as a stethoscope. The line between apps that need clearance and those that do not is hard to pinpoint because medical software and the rules governing it are relatively new.\n Bradley Thompson, a regulatory lawyer with Epstein Becker Green, asks clients a handful of key questions when trying to determine whether they\u2019ll need FDA sign-off. They include how the software\u2019s output is presented to a person and whether a company makes specific medical claims.\n Google\u2019s app does not highlight a single possible skin condition in response to a person\u2019s photos, and it displays a warning that \u201csuggested conditions listed here aren\u2019t a medical diagnosis.\u201d A company spokesperson likened the app to a search engine displaying results for a person to peruse and draw their own conclusions about.\n Yet Google has also emphasized the skin app\u2019s medical chops. DeSalvo, the health chief, said Google developed the app because there aren\u2019t enough skin specialists to help every person with skin conditions. Google\u2019s  blog post links the app to peer-reviewed studies in which the company\u2019s technology was compared to doctors, saying, \u201cour AI system can achieve accuracy that is on par with US board-certified dermatologists.\u201d\n That boast caught Thompson\u2019s lawyerly eye. \u201cThat really is suggesting this is at least comparable to what a human physician can do,\u201d he says\u2014the type of claim that might interest the FDA.", "posttime": "2021-06-29 23:53:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,google,\u7f8e\u56fd,\u8c37\u6b4c,\u5e94\u7528\u7a0b\u5e8f", "title": "\u8c37\u6b4c\u63a8\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u533b\u7597\u5e94\u7528\u7a0b\u5e8f - \u5728\u7f8e\u56fd\u4ee5\u5916 ", "title_en": "Google launches a new medical app\u2014outside the United States", "transed": 1, "url": "https://arstechnica.com/science/2021/06/google-launches-a-new-medical-app-outside-the-united-states/", "via": "", "real_tags": ["\u7a0b\u5e8f", "google", "\u7f8e\u56fd", "\u8c37\u6b4c", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "886f30418296e2e9002ebacfdafd950f.jpg", "infoid": 1068637, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u62a5\u9053\uff0c6\u670828\u65e5\uff0cars\u4ee4\u4eba\u9057\u61be\u7684\u662f\uff0c\u4ed6\u96be\u4ee5\u7406\u89e3\uff0c\u4ed6\u4e5f\u4ee4\u4eba\u9057\u61be\u5730\u4e86\u89e3\u8fd9\u7bc7\u6587\u7ae0\u7684\u4f5c\u54c1\uff0c\u4ed6\u5728\u7ebf\u4e92\u52a8\u9644\u8fd1\u7684\u624b\u67c4\uff0c\u636e\u62a5\u9053\uff0c\u5468\u672b\u5728\u7ebf\u4e92\u52a8\u3002\u6211\u4eec\u4eca\u5929\u91cd\u65b0\u4f20\u4e2d\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4ee5\u8bb0\u4f4f\u4ed6\u4eec\u5bf9\u7ecf\u5178\u6e38\u620f\u4eff\u771f\u754c\u548cARS\u7684\u5de8\u5927\u8d21\u732e\u3002\u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb2011\u4ef6\u5173\u4e8eBSNES\u5f00\u53d1\u51c6\u786e\u6027\u7684\u8ffd\u6c42\u3002\n  \u5982\u679c\u60a8\u6216\u60a8\u6240\u77e5\u7684\u4eba\u6b63\u5728\u52aa\u529b\u4e0e\u81ea\u6740\u601d\u60f3\u6597\u4e89\uff0c\u8bf7\u5728800-273-8255\u8054\u7cfb\u56fd\u5bb6\u81ea\u6740\u9884\u9632\u5bff\u547d\uff0c\u6216\u8fbe\u5230\u7c7b\u4f3c\u7684\u56fd\u9645\u70ed\u7ebf\u3002\u6211\u4eec\uff06\uff0339; D\u8fd8\u9f13\u52b1\u8bfb\u8005\u6350\u8d60\u7ed9\u7f8e\u56fd\u8054\u90a6\u7684\u81ea\u6740\u9884\u9632\uff0c\u5982\u679c\u4ed6\u4eec\uff06\uff0339\u6240\u642c\u5bb6\u3002\n   \u4f5c\u4e3aBSNES\u7684\u9996\u5e2d\u7f16\u7801\u5668\uff0c\u6211\u4e00\u76f4\u5728\u5c1d\u8bd5\u5728\u8fc7\u53bb\u768415\u5e74\u91cc\u5b8c\u5584\u8d85\u7ea7\u4efb\u5929\u5802\u4eff\u771f\u3002\u6211\u4eec\u73b0\u5728\u5904\u4e8e\u8fd9\u4e2a\u76ee\u6807\u7684\u89c2\u70b9\uff0c\u4f46\u6211\u4eec\u9762\u4e34\u7740\u6700\u540e\u4e00\u4e2a\u6311\u6218\uff1aSNES\u89c6\u9891\u5904\u7406\u5668\u7684\u51c6\u786e\u5468\u671f\u5b9a\u65f6\u3002\u83b7\u5f97\u6700\u7ec8\u7684\u4eff\u771f\u7cbe\u5ea6\u5c06\u9700\u8981\u793e\u533a\u52aa\u529b\uff0c\u6211\u5e0c\u671b\u6709\u4e9b\u4eba\u53ef\u4ee5\u5e2e\u52a9\u3002\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u56de\u987e\u6211\u4eec\u548c\uff0339\u7684\u8ddd\u79bb\u3002\u4eca\u5929\uff0cSnes\u4eff\u771f\u5728\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5730\u65b9\u3002\u7981\u6b62\u5bf9\u4eff\u771f\u7684\u4e0d\u5bfb\u5e38\u5916\u56f4\u8bbe\u5907\uff08\u4f8b\u5982\u57fa\u4e8e\u5149\u4f20\u611f\u5668\u7684\u9ad8\u5c14\u592b\u4ff1\u4e50\u90e8\uff0c\u8fd0\u52a8\u81ea\u884c\u8f66\u6216\u7528\u4e8e\u5728\u65e5\u672c\u7684\u6d3b\u8d5b\u9a6c\u6bd4\u8d5b\u4e0a\u653e\u7f6e\u771f\u5b9e\u8d4c\u6ce8\u7684\u62e8\u53f7\u8c03\u5236\u89e3\u8c03\u5668\uff09\uff0c\u6bcf\u4e2a\u5b98\u65b9\u8bb8\u53ef\u7684SNES\u6807\u9898\u90fd\u662f\u5b8c\u5168\u64ad\u653e\uff0c\u6ca1\u6709\u4f17\u6240\u5468\u77e5\u7684\u6e38\u620f\u6709\u4efb\u4f55\u8f89\u714c\u7684\u95ee\u9898\u3002\n SNES\u4eff\u771f\u4f7f\u6211\u7cbe\u786e\u7684\u662fi\uff06\uff0339;\u751a\u81f3\u88ab\u8ba4\u4e3a\u5c06\u6211\u7684\u4eff\u771f\u5668\u5206\u6210\u4e24\u4e2a\u7248\u672c\uff1aHigan\uff0c\u5b83\u4fa7\u91cd\u4e8e\u7edd\u5bf9\u51c6\u786e\u6027\u548c\u786c\u4ef6\u6587\u6863;\u548cBSNES\uff0c\u4e13\u6ce8\u4e8e\u6027\u80fd\uff0c\u529f\u80fd\u548c\u6613\u7528\u6027\u3002\n    \u6240\u4ee5\u5b83\uff0c\u5427\uff1f\u5728\u4e00\u4efd\u5de5\u4f5c\u4e2d\u505a\u5f97\u5f88\u597d\u7684\u8363\u8a89\uff0c\u8c22\u8c22\u4f60\u6240\u6709\u7684\u9c7c\uff1f\u597d\u5427......\u4e0d\u592a\u3002\n \u4eca\u5929\uff0c\u6211\u4eec\u4e3a\u51e0\u4e4e\u6bcf\u4e2a\u72ed\u5c0f\u5e26\u7684\u7ec4\u4ef6\u4eab\u53d7\u5faa\u73af\u7ea7\u522b\u51c6\u786e\u6027\u3002\u552f\u4e00\u7684\u4f8b\u5916\u662fPPU\uff08\u56fe\u7247\u5904\u7406\u5355\u5143\uff09\uff0c\u7528\u4e8e\u751f\u6210\u53d1\u9001\u5230\u5c4f\u5e55\u7684\u89c6\u9891\u5e27\u3002\u6211\u4eec\u5927\u591a\u4e86\u89e3PPU\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u731c\u6d4b\u4e00\u4e9b\u5bfc\u81f4\u5c11\u4e8e\u5b8c\u5168\u5b8c\u7f8e\u7684\u529f\u80fd\u3002\n \u5269\u4e0b\u7684\u95ee\u9898\u662f\u76f8\u5bf9\u8f83\u5c0f\u7684\u95ee\u9898\uff0c\u5728\u76db\u5927\u7684\u4e8b\u60c5\u65b9\u6848\u4e2d\u3002\u5982\u679c\u4f60\uff06\uff0339;\u91cd\u590d\u8ffd\u6c42\u8ffd\u6c42\u767e\u5206\u4e4b\u767e\u7684\u5fe0\u5b9e\u4eff\u771f\u5b8c\u5584\u7684\u5949\u732e\uff0c\u6211\u5e76\u4e0d\u80fd\u8ba9\u4f60\u8fdb\u4e00\u6b65\u6539\u5584SNES PPU\u4eff\u771f\u7684\u5fc5\u8981\u6027\u3002\u4e0e\u751f\u6d3b\u4e2d\u7684\u4efb\u4f55\u76ee\u6807\u4e00\u6837\uff0c\u6211\u4eec\u8d8a\u6765\u8d8a\u9760\u5b8c\u7f8e\uff0c\u56de\u62a5\u8d8a\u5c0f\u3002 \n\u6211\u53ef\u4ee5\u544a\u8bc9\u4f60\u4e3a\u4ec0\u4e48\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u91cd\u8981\uff1a\u5b83\u7684\u751f\u6d3b\u548c\uff0339;\u5de5\u4f5c\uff0c\u6211\u4e0d\u60f3\u8bf4\u6211\u8fd9\u9760\u8fd1\u5b8c\u6210\u800c\u6ca1\u6709\u5f97\u5230\u6700\u540e\u4e00\u5757\u3002\u6211\u53d8\u8001\u4e86\uff0c\u6211\u8d62\u4e86\uff0c\u6211\u8d62\u4e86\u3002\u6211\u5e0c\u671b\u8fd9\u4e2a\u6700\u540e\u7684\u4e8b\u60c5\u89e3\u51b3\u4e86\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5bf9\u6211\u7684\u9000\u4f11\u611f\u5230\u5145\u6ee1\u4fe1\u5fc3\uff0c\u56e0\u4e3aSNES\u4e00\u76f4\u5fe0\u5b9e\u5730\u901a\u8fc7\u4eff\u771f\u5b8c\u5168\u4fdd\u5b58\u3002\u6ca1\u6709\u77f3\u5934\u88ab\u9057\u5fd8\uff0c\u6ca1\u6709\u533a\u57df\u672a\u5b8c\u6210\u3002\u6211\u60f3\u8bf4\u5b83\uff06\uff0339\u6240\u505a\u7684\u3002\n \u5982\u679c\u60a8\uff06\uff0339;\u4ecd\u7136\u6709\u5174\u8da3\uff0c\u8bf7\u9605\u8bfb\u6df1\u5165\u6f5c\u5165\u95ee\u9898\u7684\u80cc\u666f\u548c\u6211\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u3002\n    \u7bad\u5934\u8868\u793aSNE\u4e2d\u7684\u5404\u79cd\u5904\u7406\u5668\u53ef\u4ee5\u5f7c\u6b64\u901a\u4fe1\u7684\u65b9\u5411\uff0c\u5e76\u4e14\u865a\u7ebf\u8868\u793a\u5b58\u50a8\u5668\u82af\u7247\u8fde\u63a5\u3002\n \u73b0\u5728\u8981\u5e26\u8d70\u7684\u5173\u952e\u662f\u8981\u6ce8\u610f\u7684\uff0c\u89c6\u9891\u548c\u97f3\u9891\u8f93\u51fa\u4e13\u95e8\u4ecePPU\u548cDSP\u53d1\u9001\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u50cf\u201c\u9ed1\u5323\u5b50\u201d\u4e00\u6837\uff0c\u6211\u4eec\u5728\u5185\u90e8\u6ca1\u6709\u4efb\u4f55\u53ef\u89c1\u6027\u3002\u540e\u6765\u8fd9\u5c06\u662f\u91cd\u8981\u7684\u3002\n  \u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6b63\u5728\u6a21\u4effCPU\uff06\uff0339; s\uff06\uff0334;\u4e58\u6cd5\uff06\uff0334;\u9700\u8981\u4e24\u4e2a\u5bc4\u5b58\u5668\uff08\u53d8\u91cf\uff09\u7684\u6307\u4ee4\u5c06\u5b83\u4eec\u4e58\u4ee5\uff0c\u5e76\u751f\u6210\u7ed3\u679c\u548c\u4e00\u4e9b\u8868\u793a\u7ed3\u679c\u72b6\u6001\uff08\u4f8b\u5982\u6ea2\u51fa\uff09\u7684\u6807\u5fd7\u3002\n \u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u8f6f\u4ef6\u7a0b\u5e8f\uff0c\u8be5\u8f6f\u4ef6\u7a0b\u5e8f\u5c06\u6bcf\u4e2a\u53ef\u80fd\u7684\u503c\u4ece0\u5230255\u4e58\u4ee5\u4e58\u6cd5\u5668\u548c\u591a\u6837\u6027\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8f93\u51fa\u4e58\u6cd5\u7684\u6570\u5b57\u548c\u6807\u5fd7\u7ed3\u679c\u3002\u8fd9\u5c06\u4ea7\u751f\u4e24\u4e2a65,536\u4e2a\u6761\u76ee\u8868\u3002\n    \u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u51c6\u786e\u5730\u786e\u5b9aCPU\u7ed3\u679c\u8bbe\u7f6e\u67d0\u79cd\u65b9\u5f0f\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6211\u4eec\u7684\u4eff\u771f\u5668\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u76f8\u540c\u7684\u6d4b\u8bd5\u65f6\uff0c\u6211\u4eec\u5728\u540c\u4e00\u65f6\u95f4\u4ea7\u751f\u5b8c\u5168\u76f8\u540c\u7684\u8868\u3002 \n\u73b0\u5728\u8ba9\uff06\uff0339; S\u8bf4CPU\u670916\u4f4dx 16\u4f4d\u4e58\u6cd5\u3002\u6d4b\u8bd5\u6bcf\u4e2a\u53ef\u80fd\u7684\u503c\u90fd\u4f1a\u4ea7\u751f40\u4ebf\u4e2a\u7ed3\u679c\uff0c\u8fd9\u5f00\u59cb\u63a8\u52a8\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u6d4b\u8bd5\u7684\u5b9e\u9645\u6d4b\u8bd5\u3002\u5982\u679cCPU\u5177\u670932\u4f4dx 32\u4f4d\u4e58\u6cd5\uff0c\u5219\u6d4b\u8bd5\u5b87\u5b99\u70ed\u6b7b\u524d\u7684\u6240\u6709\u8f93\u5165\u7ec4\u5408\u662f\u4e0d\u53ef\u884c\u7684\uff08\u81f3\u5c11\u6709\u5f53\u524d\u6280\u672f\uff0c\u81f3\u5c11\uff09\u3002\n \u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u6d4b\u8bd5\u6765\u83b7\u5f97\u66f4\u591a\u9009\u62e9\u6027\uff0c\u5e76\u5c1d\u8bd5\u4f55\u65f6\u4f55\u65f6\u53ef\u4ee5\u66f4\u6539\u6807\u8bb0\u53ef\u80fd\u4f1a\u66f4\u6539\u65f6\uff0c\u7ed3\u679c\u53ef\u80fd\u4f1a\u6ea2\u51fa\u3002\u5426\u5219\u6211\u4eec\uff06\uff0339; D\u6709\u4e00\u4e2a\u6c38\u8fdc\u4e0d\u4f1a\u5b8c\u6210\u7684\u6d4b\u8bd5\u3002\n \u4e58\u6cd5\u662f\u4e00\u4e2a\u76f8\u5f53\u7410\u788e\u7684\u64cd\u4f5c\uff0c\u4f46\u8fd9\u662f\u9006\u5411\u5de5\u7a0b\u80cc\u540e\u7684\u4e00\u822c\u8fc7\u7a0b\uff0c\u5b83\u5ef6\u4f38\u5230\u66f4\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982snes\uff06\uff0339;\u6c34\u5e73\u6d88\u9690DMA\uff08\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff09\u8f6c\u79fb\u5de5\u4f5c\u3002\u6211\u4eec\u521b\u5efa\u4e86\u8bd5\u56fe\u68c0\u6d4b\u5230\u8fb9\u7f18\u6848\u4f8b\u53d1\u751f\u7684\u60c5\u51b5\u7684\u6d4b\u8bd5\uff0c\u7136\u540e\u786e\u8ba4\u6211\u4eec\u7684\u4eff\u771f\u8868\u73b0\u4e0e\u771f\u6b63\u7684SNES\u76f8\u540c\u3002\n  SNES\u5305\u542b\u4e24\u4e2a\u632f\u8361\u5668\uff1a\u5728\u301c21MHz\u4e0a\u8fd0\u884c\u7684\u6676\u65f6\u949f\uff0c\u63a7\u5236CPU\u548cPPU;\u548c\u4e00\u4e2a\u5728\u301c24MHz\u4e0a\u8fd0\u884c\u7684\u9676\u74f7\u8c10\u632f\u5668\uff0c\u7528\u4e8e\u63a7\u5236SMP\u548cDSP\u3002\u76d2\u5f0f\u5207\u5272\u5668\u6709\u65f6\u4f1a\u4f7f\u7528\u301c21MHz CPU\u632f\u8361\u5668\uff0c\u6709\u65f6\u5305\u62ec\u5728\u4e0d\u540c\u9891\u7387\u4e0b\u8fd0\u884c\u7684\u81ea\u5df1\u7684\u632f\u8361\u5668\u3002\n  \u65f6\u949f\u662f\u4efb\u4f55\u7cfb\u7edf\u7684\u6838\u5fc3\u5b9a\u65f6\u5143\u7d20\uff0c\u5e76\u4e14SNES\u65e8\u5728\u4ee5\u67d0\u4e9b\u9891\u7387\u548c\u65f6\u95f4\u6267\u884c\u5404\u79cd\u4efb\u52a1\u3002\n \u5982\u679c\u60a8\u60f3\u8c61\u4e00\u4e2a100Hz\u65f6\u949f\uff0c\u5b83\u662f\u4e00\u79cd\u5e26\u6709\u6570\u5b57\u5f15\u811a\u7684\u8bbe\u5907\uff0c\u8be5\u8bbe\u5907\u8f6c\u6362\u4e3a\u903b\u8f91\u9ad8\uff08\u4f8b\u5982+5\u4f0f\uff09\uff0c\u7136\u540e\u8fd4\u56de\u5230\u6bcf\u79d2100\u6b21\u903b\u8f91\u4f4e\uff080\u4f0f\u6216\u5730\uff09\u3002\u56e0\u6b64\uff0c\u6bcf\u4e00\u79d2\uff0c\u9500\u7535\u538b\u90fd\u4f1a\u6ce2\u52a8200\u6b21\uff1a100\u4e2a\u4e0a\u5347\u65f6\u949f\u8fb9\u7f18\u548c100\u4e2a\u4e0b\u964d\u65f6\u949f\u8fb9\u7f18\u3002\n \u65f6\u949f\u5468\u671f\u901a\u5e38\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6c\u6362\uff0c\u56e0\u6b64100Hz\u65f6\u949f\u5c06\u4ea7\u751f\u6bcf\u79d2100\u4e2a\u65f6\u949f\u5468\u671f\u3002\u6709\u4e00\u4e9b\u7cfb\u7edf\u9700\u8981\u533a\u5206\u4e0a\u5347\u548c\u4e0b\u964d\u8fb9\u7f18\uff0c\u5e76\u4e14\u5bf9\u4e8e\u90a3\u4e9b\uff0c\u6211\u4eec\u5c06\u5176\u8fdb\u4e00\u6b65\u5206\u89e3\u6210\u534a\u5faa\u73af\u4ee5\u8868\u793a\u65f6\u949f\u4fe1\u53f7\u7684\u6bcf\u4e2a\u76f8\uff08\u9ad8\u6216\u4f4e\uff09\u3002 \n\u771f\u5b9e\u4eff\u771f\u5668\u7684\u5173\u952e\u76ee\u6807\u662f\u4ee5\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u4e14\u4e0e\u771f\u5b9e\u786c\u4ef6\u5b8c\u5168\u76f8\u540c\u3002\u5b83\u4e0d\u5f97\u4e0d\u5177\u4f53\u5730\u6267\u884c\u4efb\u52a1\u7684\u95ee\u9898\u3002\u91cd\u8981\u7684\u662f\uff0c\u5728\u7ed9\u51fa\u76f8\u540c\u7684\u8f93\u5165\u65f6\uff0c\u6a21\u62df\u5668\u4f1a\u751f\u6210\u4e0e\u771f\u5b9e\u786c\u4ef6\u76f8\u540c\u7684\u65f6\u673a\u76f8\u540c\u7684\u8f93\u51fa\u3002\n  \u6709\u65f6\uff0c\u64cd\u4f5c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u751f\u3002\u4f8b\u5982\uff0c\u62cd\u6444CPU\u4e58\u6cd5\u3002 SNE CPU\u5728\u516b\u4e2aCPU OPOD\u5faa\u73af\u4e2d\uff0cSNE CPU\u5728\u540e\u53f0\u8ba1\u7b97\u4e58\u6cd5\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u6682\u505c\u7b49\u5f85\u4e58\u6cd5\u6765\u5b8c\u6210\u4e58\u6cd5\u3002\u8fd9\u5141\u8bb8\u60a8\u7684\u4ee3\u7801\u5728\u7b49\u5f85\u4e58\u6cd5\u65f6\u624d\u80fd\u5b8c\u6210\u5176\u4ed6\u4e8b\u60c5\u3002\n \u4efb\u4f55\u5546\u4e1a\u53d1\u5e03\u7684\u8f6f\u4ef6\u90fd\u53ef\u80fd\u7b49\u5f85\u8fd9\u4e00\u70b9\u516b\u4e2a\u5468\u671f\uff0c\u56e0\u4e3a\u5982\u679c\u60a8\u5728\u5b83\u4e4b\u524d\u5c1d\u8bd5\u9605\u8bfb\u7ed3\u679c\uff06\uff0339;\u51c6\u200b\u200b\u5907\u597d\uff0c\u60a8\u5c06\u83b7\u5f97\u90e8\u5206\u8ba1\u7b97\u7684\u7ed3\u679c\u3002\u7136\u800c\uff0c\u65e9\u671f\u7684Snes\u4eff\u771f\u5668\u7acb\u5373\u7ed9\u51fa\u4e86\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u7b49\u5f85\u8fd9\u4e9b\u989d\u5916\u7684\u5468\u671f\u3002\n \u5f53Hobbyists\u5f00\u59cb\u901a\u8fc7\u4eff\u771f\u5668\u521b\u5efa\u548c\u6d4b\u8bd5Homebrew\u8f6f\u4ef6\u65f6\uff0c\u8fd9\u79cd\u5dee\u5f02\u5f00\u59cb\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\u3002\u8fd9\u4e9b\u8f6f\u4ef6\u4e2d\u7684\u4e00\u4e9b\uff0c\u4f8b\u5982\u8bb8\u591a\u65e9\u671f\u7684\u8d85\u7ea7\u9a6c\u91cc\u5965\u4e16\u754cROM\u9ed1\u5ba2\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u53ea\u5728\u8fd9\u4e9b\u65e9\u671f\u7684\u4eff\u771f\u5668\u4e0a\u6b63\u786e\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u771f\u6b63\u7684SNES\u786c\u4ef6\u3002\u90a3\u4e2a\uff06\uff0339;\u56e0\u4e3a\u5b83\u4eec\u662f\u7528\u4eff\u771f\u5668\u8bbe\u8ba1\u7684\u76f4\u63a5\uff08\u548c\u4e0d\u771f\u5b9e\u7684 - \u4e0e\u5b9e\u9645\u786c\u4ef6\uff09\u4e58\u6cd5\u7684\u8bbe\u8ba1\u3002\n \u968f\u7740\u4eff\u771f\u5668\u7684\u6539\u8fdb\uff0c\u8fd9\u6b3e\u65e7\u8f6f\u4ef6\u5df2\u7834\u574f\uff0c\u6211\u4eec\u5fc5\u987b\u968f\u540e\u5728\u6211\u4eec\u7684\u8f83\u65b0\u7684\u6a21\u62df\u5668\u4e2d\u63d0\u4f9b\u517c\u5bb9\u6027\u9009\u9879\uff0c\u4ee5\u4fbf\u4e0d\u4f1a\u5931\u53bb\u6b64\u8f6f\u4ef6\u3002\u662f\u7684\uff0c\u5c31\u50cf\u8981\u8bf4\u7684\u90a3\u6837\uff0c\u6211\u4eec\u7684\u4eff\u771f\u8005\u5fc5\u987b\u6a21\u4eff\u5176\u4ed6\u4eff\u771f\u5668\uff01\u6885\u5854\uff01\n    \u5173\u4e8eCPU\u4e58\u6cd5\u5ef6\u8fdf\u7684\u597d\u5904\u662f\u5b83\u975e\u5e38\u53ef\u9884\u6d4b\uff1a\u516b\u4e2a\u8ba1\u7b97\u5468\u671f\u5728\u8bf7\u6c42\u4e58\u6cd5\u540e\u7acb\u5373\u542f\u52a8\u3002\u901a\u8fc7\u7f16\u5199\u4ee3\u7801\u6765\u8bfb\u53d6\u6bcf\u4e2a\u5468\u671f\u540e\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u80fd\u591f\u786e\u8ba4SNES CPU\u6b63\u5728\u4f7f\u7528\u5c55\u4f4d\u7b97\u6cd5\u8fdb\u884c\u4e58\u6cd5\u3002\n  \u5176\u4ed6\u64cd\u4f5c\u5bf9\u6a21\u578b\u5e76\u4e0d\u90a3\u4e48\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u540e\u53f0\u5f02\u6b65\u53d1\u751f\u3002 SNES CPU\uff06\uff0339; S DRAM\u5237\u65b0\u662f\u4e00\u4e2a\u8fd9\u6837\u7684\u6848\u4f8b\u3002 \n\u5728\u6bcf\u4e2a\u626b\u63cf\u7ebf\u7684\u6e32\u67d3\u8fc7\u7a0b\u4e2d\uff0c\u5728\u67d0\u4e2a\u70b9\u5904\uff0c\u6574\u4e2aSNE CPU\u51bb\u7ed3\u77ed\u65f6\u95f4\uff0c\u968f\u7740RAM\u82af\u7247\u7684\u5185\u5bb9\u5237\u65b0\u3002\u9700\u8981\u8fd9\u662f\u56e0\u4e3a\u4f5c\u4e3a\u6210\u672c\u5207\u5272\u5ea6\u91cf\uff0cSNES\u4e3a\u5176\u4e3bCPU\u5b58\u50a8\u5668\u4f7f\u7528\u52a8\u6001RAM\uff08\u800c\u4e0d\u662f\u9759\u6001RAM\uff09\u3002\u5fc5\u987b\u5b9a\u671f\u5237\u65b0\u52a8\u6001RAM\uff0c\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4fdd\u6301\u5176\u5185\u5bb9\u3002\n  \u5f04\u6e05\u695a\u8fd9\u4e9b\u64cd\u4f5c\u7684\u7cbe\u786e\u65f6\u95f4\u7684\u5173\u952e\u6d1e\u5bdf\u662f\u5229\u7528SNES PPU\u7684\u6c34\u5e73\u548c\u5782\u76f4\u8ba1\u6570\u5668\u3002\u8fd9\u4e9b\u8ba1\u6570\u5668\u524d\u8fdb\u5e76\u5728\u6bcf\u4e2a\u6c34\u5e73\u548c\u5782\u76f4\u6d88\u9690\u65f6\u6bb5\u540e\u590d\u4f4d\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u7684\u7cbe\u786e\u5ea6\u53ea\u662fSnes\uff06\uff0339\u7684\u56db\u5206\u4e4b\u4e00; CPU\u632f\u8361\u5668\u9891\u7387;\u4e5f\u5c31\u662f\u8bf4\uff0c\u6c34\u5e73\u8ba1\u6570\u5668\u4ec5\u589e\u91cf\u4e00\u6b21\u6bcf\u56db\u4e2a\u65f6\u949f\u5468\u671f\u4e00\u6b21\u3002\n \u901a\u8fc7\u591a\u6b21\u8bfb\u53d6\u8ba1\u6570\u5668\uff0c\u6211\u80fd\u591f\u786e\u5b9a\u8ba1\u6570\u5668\u5bf9\u51c6\u7684\u65f6\u949f\u5468\u671f\u7684\u54ea\u4e2a\u56db\u5206\u4e4b\u4e00\u3002\u901a\u8fc7\u5c06\u6b64\u6d1e\u5bdf\u529b\u4e0e\u4e13\u95e8\u5236\u4f5c\u7684\u529f\u80fd\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u901a\u8fc7\u7cbe\u786e\uff0c\u7528\u6237\u6307\u5b9a\u7684\u65f6\u949f\u5468\u671f\u5faa\u73af\uff0c\u53ef\u4ee5\u5b8c\u5168\u5c06SNES CPU\u5b8c\u5168\u5bf9\u51c6\u5230\u6211\u60f3\u8981\u7684\u4efb\u4f55\u7cbe\u786e\u7684\u65f6\u949f\u5468\u671f\u4f4d\u7f6e\u3002\n \u901a\u8fc7\u8fed\u4ee3\u5faa\u73af\u4e2d\u7684\u4e00\u7cfb\u5217\u65f6\u949f\u5468\u671f\uff0c\u6211\u53ef\u4ee5\u5b8c\u5168\u786e\u5b9a\u53d1\u751f\u67d0\u4e9b\u64cd\u4f5c\uff08\u4f8b\u5982DRAM\u5237\u65b0\uff0cHDMA\u4f20\u8f93\uff0c\u4e2d\u65ad\u8f6e\u8be2\u7b49\uff09\uff0c\u5e76\u4e14\u6211\u80fd\u591f\u7cbe\u786e\u5730\u5728\u4eff\u771f\u4e0b\u518d\u73b0\u3002\n SNES SMP\u82af\u7247\u4e5f\u6709\u81ea\u5df1\u7684\u5b9a\u65f6\u5668\uff0c\u5e76\u4e14\u540c\u6837\u7684\u9006\u5411\u5de5\u7a0b\u4e5f\u6210\u529f\u5730\u53cd\u5bf9\u8be5\u5904\u7406\u5668\u3002\u6211\u53ef\u4ee5\u5355\u72ec\u82b1\u4e00\u6574\u7bc7\u6587\u7ae0\u8c08\u8bbaSMP\u6d4b\u8bd5\u5bc4\u5b58\u5668\uff0c\u8fd9\u5141\u8bb8\u7f16\u7801\u5668\u63a7\u5236SMP\u7684\u65f6\u949f\u5206\u9891\u5668\u53ca\u5176\u5b9a\u65f6\u5668\uff0c\u4ee5\u53ca\u5176\u4ed6\u53ef\u6015\u7684\u4e1c\u897f\u3002\u5c31\u8fd9\u6837\u8bf4\uff0c\u867d\u7136\u8fd9\u4e0d\u662f\u4e00\u79cd\u7b80\u5355\u6216\u5feb\u901f\u7684\u8fc7\u7a0b\uff0c\u4f46\u6211\u4eec\u6700\u7ec8\u80dc\u5229\u3002\n  \u5728\u9700\u8981\u88ab\u9a6f\u670d\u7684\u5404\u79cd\u6e38\u620f\u76d2\u5185\uff0c\u6709\u4e00\u7cfb\u5217SNES\u534f\u5904\u7406\u5668\u3002\u4ece\u4e13\u7528\u901a\u7528CPU\u5982Superfx\u548cSA-1\uff0c\u4e0eDSP-1\u548cCX4\u7b49\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\uff0c\u4e0eS-DD1\u548cSPC7110\u8fd9\u6837\u7684\u89e3\u538b\u7f29\u52a0\u901f\u5668\uff0c\u5230\u6765\u81eaSharp\u548cEpson\u7684\u5b9e\u65f6\u65f6\u949f\uff0c\u4ee5\u53ca\u66f4\u591a\u3002 ..\n \u8fd9\u610f\u5473\u7740SNES\u4eff\u771f\u5668\u9700\u8981\u80fd\u591f\u5904\u7406Superfx\u7684\u6307\u4ee4\u548c\u50cf\u7d20\u7f13\u5b58; SA-1\u7684\u5185\u5b58\u603b\u7ebf\u51b2\u7a81\u4ef2\u88c1\u5668\uff08\u5141\u8bb8SNES CPU\u548cSA-1\u540c\u65f6\u5171\u7528\u76f8\u540c\u7684ROM\u548cRAM\u82af\u7247\uff09; DSP-1\u548cCX4\u7684\u5d4c\u5165\u5f0f\u56fa\u4ef6; S-DD1\u548cSPC7110\u7684\u57fa\u4e8e\u9884\u6d4b\u7684\u7b97\u672f\u7f16\u7801\u5668;\u548c\u5947\u6570BCD\uff08\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\u5c0f\u6570\uff09\u7684\u5b9e\u65f6\u65f6\u949f\u8fb9\u7f18\u60c5\u51b5\u3002\u6162\u6162\u4f46\u80af\u5b9a\u5730\uff0c\u901a\u8fc7\u5e94\u7528\u4e0a\u8ff0\u6280\u672f\u6765\u786e\u5b9a\u6b63\u786e\u548c\u65f6\u95f4\uff0c\u6211\u4eec\u80fd\u591f\u63a5\u8fd1\u5b8c\u7f8e\u5730\u6a21\u62df\u6240\u6709\u8fd9\u4e9b\u82af\u7247\u3002 \n\u5b83\u5b9e\u9645\u4e0a\u91c7\u53d6\u4e86\u5de8\u5927\u7684\u52aa\u529b\uff0c\u6570\u5343\u7f8e\u5143\u6765\u4ece\u5404\u79cd\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u4e2d\u53d6\u51fa\u5e76\u63d0\u53d6\u7f16\u7a0b\u56fa\u4ef6\u3002\u5728\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0cNEC UPD772X\u7684\u4eff\u771f\u5bfc\u81f4\u4e86\u6765\u81eaHigan\u7684\u4ee3\u7801\uff0c\u7528\u4e8e\u633d\u6551\u65af\u8482\u82ac\u970d\u91d1\u7684\u540e\u671f\u6559\u6388\uff06\uff0339;\u58f0\u97f3\uff01\n \u5728\u53e6\u4e00\u4e2a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u53cd\u5411\u5de5\u7a0b\u5e08\u7684\u65e5\u7acbHG51B\u67b6\u6784\u7684\u6574\u4e2a\u6307\u4ee4\u96c6\uff0c\u56e0\u4e3a\u8fd9\u79cd\u67b6\u6784\u4ece\u672a\u88ab\u516c\u5f00\u8bb0\u5f55\u8fc7\u3002\u5728\u53e6\u4e00\u4e2a\u6e38\u620f\uff08Hayazashi Nidan Morita Shougi 2\uff09\u6700\u7ec8\u5305\u542b\u4e00\u4e2a\u5b8c\u6574\u768432\u4f4d\uff0c21MHz ARM6 CPU\uff0c\u4ee5\u52a0\u901f\u5176\u65e5\u672c\u56fd\u9645\u8c61\u68cb\u5f15\u64ce\uff01\n \u4ec5\u4fdd\u7559\u6240\u6709SNES\u534f\u5904\u7406\u5668\u662f\u4e00\u4e2a\u5145\u6ee1\u6311\u6218\u548c\u60ca\u559c\u7684\u591a\u5e74\u65c5\u7a0b\u3002\n  \u4e0d\u8981\u4e0eDSP-1\u76d2\u5f0f\u5207\u5272\u673a\u6df7\u6dc6\uff0c\u7d22\u5c3cS-DSP\uff08\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\uff09\u82af\u7247\u662f\u4eceSNES\u4ea7\u751f\u72ec\u7279\u7684\u58f0\u97f3\u3002\u8be5\u82af\u7247\u7ec4\u5408\u4e86\u516b\u4e2a\u8bed\u97f3\u901a\u9053\uff0c\u5177\u67094\u4f4dADPCM\u7f16\u7801\u4ee5\u4ea7\u751f16\u4f4d\u7acb\u4f53\u58f0\u4fe1\u53f7\u3002\n \u5728\u8868\u9762\u4e0a\uff0c\u5e76\u4e14\u6839\u636e\u524d\u9762\u7684\u7cfb\u7edf\u56fe\uff0cDSP\u6700\u521d\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u9ed1\u8272\u76d2\u5b50\uff1a\u60a8\u53ef\u4ee5\u914d\u7f6e\u8bed\u97f3\u901a\u9053\u548c\u6df7\u97f3\u5668\u8bbe\u7f6e\uff0c\u5e76\u5750\u4e0b\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5c06\u58f0\u97f3\u53d1\u9001\u5230\u626c\u58f0\u5668\u65f6\u3002\n \u4f46\u662f\u4e00\u4e2a\u5173\u952e\u7684\u529f\u80fd\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u901a\u8fc7BlarGG\u7684\u540d\u79f0\u6765\u5b8c\u5168\u53cd\u5411\u5de5\u7a0b\u5e08\u8fd9\u4e2a\u82af\u7247\uff1aEcho\u7f13\u51b2\u533a\u3002 SNES DSP\u5177\u6709\u4e00\u4e2a\u529f\u80fd\uff0c\u5c06\u4ece\u5148\u524d\u6837\u672c\u7684\u8f93\u51fa\u6df7\u5408\u5728\u4e00\u8d77\u4ee5\u4ea7\u751f\u56de\u58f0\u6548\u679c\u3002\u8fd9\u53d1\u751f\u5728\u97f3\u9891\u751f\u6210\u8fc7\u7a0b\u7684\u6700\u7ec8\uff08\u9664\u4e86\u53ef\u4ee5\u5e94\u7528\u4e8e\u9759\u9ed8\u6240\u6709\u97f3\u9891\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u6700\u7ec8\u9759\u97f3\u6807\u5fd7\u3002\uff09\n \u901a\u8fc7\u4ed4\u7ec6\u5faa\u73af\u5b9a\u65f6\u4ee3\u7801\u5e76\u76d1\u89c6\u8fd9\u4e9b\u56de\u58f0\u7ed3\u679c\uff0c\u53ef\u4ee5\u53d1\u73b0SNES DSP\u5c06\u91c7\u7528SNES DSP\u7684\u786e\u5207\u64cd\u4f5c\u987a\u5e8f\uff0c\u4ee5\u751f\u6210\u6bcf\u4e2a\u6837\u672c\uff0c\u5e76\u4ea7\u751f\u5468\u671f\u51c6\u786e\u7684\u4f4d\u5b8c\u7f8e\u97f3\u9891\u3002 ", "note_en": "Update, June 28, 2021: Ars was saddened to learn that the author of this piece, who also used the handle Near in online interactions,  reportedly took their own life over the weekend. We&#39;re republishing this piece today in memory of their towering contributions to the classic gaming emulation community and to Ars. You can also read  their 2011 piece on the quest for accuracy in bsnes development.\n  If you or someone you know is struggling with suicidal thoughts, please contact  the National Suicide Prevention Lifeline at 800-273-8255, or  reach out to a similar international hotline. We&#39;d also encourage readers to  donate to the American Federation for Suicide Prevention if they&#39;re so moved.\n   As the lead coder of  bsnes, I&#39;ve been attempting to perfect Super Nintendo emulation  for the past 15 years. We are now at a point where that goal is in sight, but there we face one last challenge: accurate cycle timing of the SNES video processors. Getting that final bit of emulation accuracy will require a community effort that I hope some of you can help with. But first, let me recap how far we&#39;ve come.  Today, SNES emulation is in a very good place. Barring unusual peripherals that are resistant to emulation (such as  a light-sensor based golf club, an  exercise bike, or a dial-up modem  used to place real-money bets on live horse races in Japan), every officially licensed SNES title is fully playable, and no game is known to have any glaring issues.\n SNES emulation has gotten so precise that I&#39;ve even taken to splitting my emulator into two versions:  higan, which focuses on absolute accuracy and hardware documentation; and  bsnes, which focuses on performance, features, and ease of use.\n    So that&#39;s it, right? Kudos on a job well done, thanks for all the fish? Well... not quite.\n Today, we enjoy cycle-level accuracy for nearly every component of the SNES. The sole exception is the PPUs (picture processing units), which are used to generate the video frames sent to your screen. We  mostly know how the PPUs work, but we have to make guesses for some functionality that result in less than total perfection.\n The remaining issues are relatively small ones, in the grand scheme of things. If you&#39;re not interested in the pursuit of one hundred percent faithful emulation perfection for its own sake, I am not going to be able to convince you of the need for improving SNES PPU emulation further. As with any goal in life, the closer we get to perfection, the smaller the returns.\n I can tell you why this is important to  me: it&#39;s my life&#39;s work, and I don&#39;t want to have to say I came  this close to finishing without getting the last piece of it right. I&#39;m getting older, and I won&#39;t be around forever. I want this final piece solved so that I can feel confident in my retirement that the SNES has been faithfully and completely preserved through emulation. No stone was left unturned, no area left unfinished. I want to say that it&#39;s  done.\n If you&#39;re still intrigued, read on for a deep dive into the background of the problem and my proposed solutions.\n    The arrows indicate the direction that the various processors in the SNES can communicate with one another, and the dotted lines represent memory chip connections.\n The key thing to take away right now is to note that the video and audio output are sent directly from the PPU and DSP specifically. That means they function like \u201cblack boxes\u201d where we don\u2019t have any visibility into what happens inside. This will be important later on.\n  Imagine you are emulating a CPU&#39;s &#34;multiply&#34; instruction, which takes two registers (variables), multiplies them together, and produces a result and some flags that represent the status of the result (such as  overflow).\n We could devise a software program that multiplies every possible value from 0 to 255 as both the multiplier and multiplicand. Then we could output both the numeric and flag results of the multiplication. This would produce two 65,536-entry tables.\n    By analyzing these tables, we could determine exactly how and when the CPU results were set certain ways. Then we could modify our emulators so, when running the same test, we produce exactly the same tables at the same times.\n Now let&#39;s say the CPU had 16-bit x 16-bit multiplications. Testing every possible value would generate 4 billion results, which is starting to push what is practical to test in a reasonable amount of time. If the CPU had 32-bit x 32-bit multiplications, it wouldn\u2019t be practical to test all combinations of inputs before the heat death of the universe (with current technology, at least).\n In cases like this, we would have to get more selective with our tests and try to determine exactly when flags might change, when results might overflow, and so forth. Otherwise we&#39;d have tests that would never complete.\n Multiplication is a fairly trivial operation, but this is the general process behind reverse engineering, and it extends to more complex operations such as how the SNES&#39; horizontal blanking DMA (direct memory access) transfers work. We create tests that try to detect what happens on edge cases, then confirm that our emulation behaves identically to a real SNES.\n  The SNES contains two oscillators: a crystal clock that runs at ~21MHz, which controls the CPU and PPUs; and a ceramic resonator that runs at ~24MHz, which controls the SMP and DSP. Cartridge coprocessors will sometimes use the ~21MHz CPU oscillator and sometimes include their own oscillators that run at different frequencies.\n  A clock is the core timing element of any system, and the SNES is designed to perform various tasks at certain frequencies and times.\n If you imagine a 100Hz clock, it is a device with a digital pin that transitions to logic high (+5 volts, for instance), and then back to logic low (0 volts, or ground) 100 times per second. So every second, the pin voltage will fluctuate 200 times total: 100 rising clock edges and 100 falling clock edges.\n A clock cycle is generally treated as one full transition, so a 100Hz clock would generate 100 clock cycles per second. There are some systems that require distinguishing between rising and falling edges, and for those, we break this further down into half-cycles to denote each phase (high or low) of the clock signal.\n The key goal of an authentic emulator is to perform tasks in exactly the same ways and at exactly the same times as the real hardware. It doesn&#39;t much matter specifically  how the tasks are performed. All that matters is that the emulator, when given the same inputs, generates the same outputs with the same timing as real hardware.\n  Sometimes, operations happen over time. Take SNES CPU multiplication, for instance. Rather than pausing to wait for multiplication to complete, the SNES CPU calculates the multiplication result one bit at a time in the background over eight CPU opcode cycles. This allows your code to possibly do other things while waiting on the multiplication to complete.\n Any commercially released software is likely to wait those eight cycles, because if you try to read the result before it&#39;s ready, you will get a partially computed result instead. Yet earlier SNES emulators gave correct results  immediately, without waiting these extra cycles.\n When hobbyists started creating and testing homebrew software via emulators, this discrepancy started to cause some problems. Some of this software, such as many early  Super Mario World ROM hacks, only worked correctly on these earlier emulators, and not on real SNES hardware. That&#39;s because they were designed with the emulator&#39;s immediate (and inauthentic-to-real-hardware) multiplication results in mind.\n As emulators improved, this old software broke, and we have had to subsequently offer compatibility options in our newer emulators in order to not lose this software to time. Yes, as surreal as it is to say, these days our emulators have to emulate other emulators! How meta!\n    The nice thing about the CPU multiplication delay is that it&#39;s very predictable: the eight computation cycles start immediately after requesting a multiplication. By writing code to read the results after every cycle, we were able to confirm that the SNES CPU was using the  Booth  algorithm for multiplication.\n  Other operations are not so simple to model, since they happen asynchronously in the background. The SNES CPU&#39;s DRAM refresh is one such case.\n During the rendering of every scanline, at a certain point, the entire SNES CPU freezes for a short duration as the contents of the RAM chip are refreshed. This is needed because, as a cost-cutting measure, the SNES used dynamic RAM (rather than static RAM) for its main CPU memory. Dynamic RAM must be periodically refreshed in order to preserve its contents over time.\n  The key insight to figuring out the precise timing of these operations was to take advantage of the SNES PPU\u2019s horizontal and vertical counters. These counters advance and are reset after each horizontal and vertical blanking period. However, their precision is only a quarter of the SNES&#39; CPU oscillator frequency; that is to say, the horizontal counter increments only once every four clock cycles.\n By reading the counters multiple times, I was able to determine which quarter of a clock cycle the counter was aligned with. By combining that insight with a specially crafted function that could step by a precise, user-specified number of clock cycles, it became possible to perfectly align the SNES CPU to any exact clock cycle position I wanted.\n By iterating over a range of clock cycles in a loop, I could determine exactly when certain operations (such as DRAM refresh, HDMA transfers, interrupt polling, etc.) would occur, and I was able to reproduce this precisely under emulation.\n The SNES  SMP chip has its own timers as well, and similar reverse engineering was successful against that processor as well. I could spend an entire article talking about the SMP TEST register alone, which allows coders to control the clock divider of the SMP and its timers, among other horrible things. Suffice it to say that, while it was not an easy or fast process, we were ultimately victorious.\n  There were a whole host of SNES coprocessors used inside various game cartridges that needed to be tamed as well. From dedicated general-purpose CPUs like the  SuperFX and  SA-1, to digital signal processors like the DSP-1 and Cx4, to decompression accelerators like the S-DD1 and SPC7110, to real-time clocks from Sharp and Epson, and more...\n That means an SNES emulator needs to be able to handle the instruction and pixel caches of the SuperFX; the memory bus conflict arbitrator of the SA-1 (which allowed the SNES CPU and SA-1 to share the same ROM and RAM chips simultaneously); the embedded firmware of the DSP-1 and Cx4; the prediction-based arithmetic coders of the S-DD1 and SPC7110; and the odd BCD (binary-coded decimal) edge cases of the real-time clocks. Slowly but surely, by applying the above techniques to determine correctness and timing, we were able to near-perfectly emulate all of these chips.\n It actually took a massive effort and thousands of dollars to decap and extract the programming firmware from the digital signal processors used in various games. In one instance, emulation of the NEC uPD772x led to  code from higan being used to save the late professor Stephen Hawking&#39;s voice!\n In another case, we had to reverse-engineer the entire instruction set of the Hitachi HG51B architecture, because this architecture was never publicly documented. In yet another, one game ( Hayazashi Nidan Morita Shougi 2) ended up containing a full-blown 32-bit, 21MHz ARM6 CPU to accelerate its Japanese chess engine!\n Preserving all of the SNES coprocessors alone was a multi-year journey full of challenges and surprises.\n  Not to be confused with the DSP-1 cartridge coprocessor, the Sony S-DSP (digital signal processor) chip is what generated the distinctive sound from the SNES. This chip combined eight voice channels with 4-bit ADPCM encoding to produce a 16-bit stereo signal.\n On the surface, and per the system diagram from earlier, the DSP initially looks like a black box: you configure the voice channels and mixer settings and sit back as it generates sound to be sent to your speakers.\n But one key feature allowed a developer by the name of blargg to fully reverse-engineer this chip: the echo buffer. The SNES DSP has a feature that mixes the outputs from previous samples together to produce an echo effect. This happens at the very end of the audio generation process (aside from one last final mute flag that can be applied to silence all audio output.)\n By writing carefully cycle-timed code and monitoring those echo results, it became possible to discover the exact order of operations the SNES DSP would take to generate each sample and to produce cycle-accurate, bit-perfect audio.", "posttime": "2021-06-29 23:53:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "snes,emulators", "title": "Snes\u4eff\u771f\u5668\u5982\u4f55\u4ece\u5b8c\u5168\u5b8c\u7f8e\u4e2d\u83b7\u5f97\u51e0\u4e2a\u50cf\u7d20 ", "title_en": "How SNES emulators got a few pixels from complete perfection", "transed": 1, "url": "https://arstechnica.com/gaming/2021/06/how-snes-emulators-got-a-few-pixels-from-complete-perfection/", "via": "", "real_tags": ["snes", "emulators"]}, {"category": "", "categoryclass": "", "imagename": "2f7755817120e09fbbd082aa669c32bc.png", "infoid": 1068636, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ad8\u901a\u516c\u53f8\u5df2\u5ba3\u5e03\u5411Snapdragon 888\u7684\u4e2d\u671f\u66f4\u65b0\uff0cSnapdragon 888 Plus\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u82af\u7247\uff0c\u4f5c\u4e3a2\u6708\u4efd\u5e02\u573a\u7684\u5148\u524d\u7248\u672c\uff0c\u53ea\u9700\u66f4\u5feb\u7684\u65f6\u949f\u901f\u7387\u3002\u90a3\u4e9b\u5bfb\u627e\u4e25\u8083\u751a\u81f3\u660e\u663e\u7684\u5347\u7ea7\u7684\u4eba\u5c06\u5931\u671b\u3002\u8fd9\u662f\u6700\u5c0f\u7684\uff06\uff0334;\u52a0\u4e0a\uff06\uff0334;\u5347\u7ea7\u9ad8\u901a\u516c\u53f8\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\n \u9ad8\u901a\u516c\u53f8\u8868\u793a\uff0cPrime CPU\u6838\u5fc3 - \u82af\u7247\u4e4b\u4e00\uff06\uff0339; S\u516b\u4e2a\u6838\u5fc3 - \u73b0\u5728\u53ef\u4ee5\u83b7\u5f973.0 GHz\uff0c\u8fd9\u662f\u5bf9\u57fa\u7840\u82af\u72472.84 GHz\u76845\uff05\u6539\u8fdb\u3002\u5728\u6838\u5fc3\u6838\u5fc3\u4e4b\u540e\uff08\u5904\u7406\u524d\u666f\u5904\u7406\u548c\u4e3b\u8981\u7ebf\u7a0b\u804c\u8d23\u7684\u4e1c\u897f\uff09\uff0c\u4e09\u4e2a\uff06\uff0334;\u4e2d\u7b49\uff06\uff0334;\u548c\u56db\uff06\uff0334;\u5c0f\uff06\uff0334;\u6838\u5fc3\u4fdd\u6301\u4e0d\u53d8\u3002\n \u8be5\u516c\u53f8\u8fd8\u63d0\u5230\u4e86\u548c\uff0334; AI\u53d1\u52a8\u673a\uff06\uff0334;\u73b0\u5728\u901f\u5ea6\u589e\u52a0\u4e8620\uff05\u3002\u8fd9\u662f\u4e00\u4e2a\u6a21\u7cca\u7684\u8861\u91cf\u6574\u4e2a\u7535\u8bddCPU\uff0cGPU\uff0cDSP\u548c\u8f6f\u4ef6\u5904\u7406AI\u4efb\u52a1\u7684\u65b9\u6cd5\u3002\u5b83\u6ca1\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u6307\u51fa\u90a3\u4e9b\u5df2\u7ecf\u66f4\u9ad8\u7684\u901f\u5ea6\uff0c\u826f\u597d\u7684\u8fd0\u6c14\u5c06\u8fc7\u5ea6\u666e\u904d\u7684ai\u8868\u73b0\u8054\u7cfb\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4efb\u4f55\u5b9e\u9645\u6027\u80fd\u6539\u8fdb\u3002\n \u8fd9\u662fSnapdragon 888 Plus\u7684\u6574\u4e2a\u66f4\u6539\u7684\u6574\u4e2a\u53d8\u5316\u3002\u53bb\u5e74\uff06\uff0339; S Snapdragon 865\u52a0\u4e0aWi-Fi 6e\u652f\u6301\uff0c\u589e\u52a0\u4e8610\uff05\u7684CPU\u548cGPU\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u5bf9\u6bd4\u8f83\u7684\u5931\u671b\u3002\u5b83\uff06\uff0339;\u88f8\u9732\u7684\u6700\u4f4e\u9ad8\u901a\u53ef\u4ee5\u505a\u51fa\u8bc1\u660e\u65b0\u7684\u82af\u7247\u53d1\u5e03\uff0c\u8fd9\u4e00\u66f4\u65b0\u53ef\u80fd\u53ea\u6709\u5c65\u884c\u5bf9\u5408\u4f5c\u4f19\u4f34\u7684\u8def\u7ebf\u56fe\u627f\u8bfa\u3002\n \u9ad8\u901a\u516c\u53f8\u8868\u793a\u534e\u7855\uff0c\u8363\u8a89\uff0c\u6469\u6258\u7f57\u62c9\uff0c\u4f53\u5185\u548c\u5c0f\u7c73\u88ab\u6392\u961f\u5230\u8239\u8236888\u52a0\u4e0a\u624b\u673a\uff0c\u5176\u4e2d\u5e94\u8be5\u5728Q3\u7684\u67d0\u4e2a\u65f6\u95f4\u51fa\u6765\u3002 ", "note_en": "Qualcomm has announced the mid-cycle update to the  Snapdragon 888, the  Snapdragon 888 Plus. As usual, this is the exact same chip as the previous version that hit the market in February, just with a faster clock rate. Those looking for a serious\u2014or even noticeable\u2014upgrade will be disappointed. This is the smallest &#34;Plus&#34; upgrade Qualcomm has ever done.\n Qualcomm says the Prime CPU core\u2014one of the chip&#39;s eight cores\u2014can now hit 3.0 GHz, which is a five percent improvement over the 2.84 GHz of the base chip. After the Prime core (which handles things like foreground processing and main thread duties), the three &#34;medium&#34; and four &#34;small&#34; cores remain unchanged.\n The company also mentioned that the &#34;AI Engine&#34; is now 20 percent faster. This is a nebulous measurement of how the entire phone\u2014CPU, GPU, DSP, and software\u2014processes AI tasks. It&#39;s not a single concrete object you can point to that has been clocked higher, and good luck tying overhyped AI performance to any actual performance improvements in the real world.\n That&#39;s the entirety of the changes to the Snapdragon 888 Plus. Last year&#39;s  Snapdragon 865 Plus added Wi-Fi 6E support and a 10 percent faster CPU and GPU, so this is a disappointment in comparison.\u00a0It&#39;s the bare minimum Qualcomm could do to justify a new chip release, and this update probably only exists to fulfill roadmap promises made to partners.\n Qualcomm says\u00a0Asus, Honor, Motorola, Vivo, and Xiaomi are lined up to ship Snapdragon 888 Plus phones, which should be out sometime in Q3.", "posttime": "2021-06-29 23:52:46", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "qualcomm,bare,\u82af\u7247", "title": "Qualcomm\u4e3a\u65b0\u7684Snapdragon 888 Plus SoC\u7684\u6700\u4f4e\u9650\u5ea6 ", "title_en": "Qualcomm does the bare minimum for the new Snapdragon 888 Plus SoC", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/06/qualcomms-new-snapdragon-888-plus-soc-has-a-new-name-not-much-else/", "via": "", "real_tags": ["qualcomm", "bare", "\u82af\u7247"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1028920, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53iPhone\u57282007\u5e741\u6708\u9996\u6b21\u63a8\u51fa\u65f6\uff0c\u5b83\u5e2d\u5377\u4e86\u4e16\u754c\u3002\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u6210\u529f\u5730\u5c06\u79fb\u52a8\u7535\u8bdd\u3001\u53ef\u4ee5\u4e0a\u7f51\u7684\u8ba1\u7b97\u673a\u548c21\u4e16\u7eaa\u7684\u968f\u8eab\u542c\u538b\u7f29\u6210\u53ef\u4ee5\u8f7b\u677e\u653e\u5165\u53e3\u888b\u7684\u8bbe\u5907\uff0c\u5176\u529f\u80fd\u7684\u5e7f\u5ea6\u662f\u53f2\u65e0\u524d\u4f8b\u7684\uff0c\u8fd9\u662f\u53f2\u65e0\u524d\u4f8b\u7684\uff0c\u81f3\u5c11\u662f\u6210\u529f\u5730\u538b\u7f29\u4e86\u4e00\u90e8\u624b\u673a\u3001\u4e00\u53f0\u53ef\u4ee5\u4e0a\u7f51\u7684\u8ba1\u7b97\u673a\u548c21\u4e16\u7eaa\u7684\u968f\u8eab\u542c\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u653e\u8fdb\u53e3\u888b\u91cc\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f\u5728SDK\u4e4b\u524d\uff0cSDK\u4f7f\u201c\u6709\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7528\u6765\u201d\u7684\u6d3b\u52a8\u6210\u4e3a\u53ef\u80fd\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u6700\u521d\u53cd\u5bf9\u7684SDK\u3002\n\u7136\u800c\uff0c\u8f83\u5c11\u88ab\u63d0\u53ca\u7684\u662f\uff0c\u82f9\u679c\u5bf9\u8fd9\u4e9b\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u529f\u80fd\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u4ee5\u53ca\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u7ed9\u4e88\u4e86\u5173\u6ce8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u7528\u6237\u5728\u542c\u97f3\u4e50\u7684\u65f6\u5019\u7b2c\u4e00\u6b21\u63a5\u5230\u7535\u8bdd\u662f\u4e00\u79cd\u4ee4\u4eba\u9707\u60ca\u7684\u4f53\u9a8c\uff0c\u81f3\u5c11\u5b83\u7a81\u663e\u4e86\u5f53\u65f6\u4eba\u4eec\u5bf9\u81ea\u5df1\u7684\u7535\u5b50\u4ea7\u54c1\u7684\u671f\u671b\u662f\u591a\u4e48\u7684\u4f4e\u3002\n\u8fd9\u662f\u4e00\u79cd\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u7406\u6240\u5f53\u7136\u7684\u7ecf\u5386\uff0c\u4f46\u76f8\u5bf9\u4e8e\u5f53\u65f6\u7684\u7ade\u4e89\uff0c\u5b83\u662f\u9769\u547d\u6027\u7684\u3002\u97f3\u4e50\u64ad\u653e\u65f6\u4f1a\u6709\u7535\u8bdd\u6253\u8fdb\u6765\u3002\u4f5c\u4e3a\u56de\u5e94\uff0ciPhone\u6de1\u51fa\u97f3\u4e50\uff0c\u540c\u65f6\u6de1\u5165\u6212\u6307\u3002\u901a\u8bdd\u53ef\u4ee5\u65e0\u7f1d\u63a5\u542c\uff0c\u4e00\u65e6\u901a\u8bdd\u7ed3\u675f\uff0c\u97f3\u4e50\u5c31\u4f1a\u6de1\u51fa\u3002\u5f88\u7b80\u5355\u3002\u5f88\u660e\u663e\u3002\n\u4e00\u65b9\u9762\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u60ca\u5929\u52a8\u5730\u4e4b\u5904\u3002\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u4e0d\u5e94\u8be5\u6709\u8fd9\u6837\u7684\u60c5\u51b5\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u660e\u786e\u7684\u8bc1\u636e\u8868\u660e\uff0c\u8bbe\u8ba1\u624b\u673a\u8f6f\u4ef6\u7684\u56e2\u961f\u5b9e\u9645\u4e0a\u4e0e\u4e3a\u97f3\u4e50\u64ad\u653e\u5668\u7f16\u5199\u8f6f\u4ef6\u7684\u540c\u4e8b\u8fdb\u884c\u4e86\u4ea4\u8c08\uff0c\u518d\u52a0\u4e0a\u6570\u767e\u4e2a\u7c7b\u4f3c\u884c\u4e3a\u7684\u4f8b\u5b50\uff0c\u8db3\u4ee5\u8ba9iPhone\u51e0\u4e4e\u5728\u4e00\u591c\u4e4b\u95f4\u5c31\u5c06\u7ade\u4e89\u6fc0\u70c8\u7684\u8001\u724c\u624b\u673a\u5e02\u573a\u62f1\u624b\u8ba9\u7ed9\u82f9\u679c--\u81f3\u5c11\u5728\u7f8e\u56fd\uff0c\u8fd9\u4e00\u9886\u5148\u5730\u4f4d\u6ca1\u6709\u88ab\u653e\u5f03\u3002IPhone\u4f18\u96c5\u7684\u96c6\u6210\u8bbe\u8ba1\u5f7b\u5e95\u5f7b\u5e95\u5730\u98a0\u8986\u4e86\u8fd9\u4e00\u683c\u5c40\uff0c\u4ee5\u81f3\u4e8e\u4eca\u5929\u7684\u5546\u5b66\u9662\u90fd\u5728\u6559\u6388\u8fd9\u4e00\u6848\u4f8b\u7814\u7a76\u3002\n\u7136\u800c\uff0c\u8fd9\u4ecd\u7136\u662f\u8be5\u884c\u4e1a\u5c1a\u672a\u5185\u90e8\u5316\u548c\u89c4\u6a21\u5316\u5e94\u7528\u7684\u6559\u8bad\u3002\n\u5728iPhone\u95ee\u4e16\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u6b63\u5904\u4e8e\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u9ec4\u91d1\u65f6\u4ee3\u7684\u65e9\u671f\u3002\u4ed6\u4eec\u9752\u7750\u7684\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u6b63\u9010\u6e10\u88ab\u4e3b\u6d41\u63a5\u53d7\uff0c\u800c\u4e14\u5176\u6570\u91cf\u6b63\u5728\u7206\u70b8\u5f0f\u589e\u957f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5168\u65b0\u7684\u8f6f\u4ef6\u7c7b\u522b\u662f\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u7684\uff0c\u5e76\u7531\u591a\u4e2a\u76f8\u4e92\u7ade\u4e89\u7684\u9879\u76ee\u8fc5\u901f\u586b\u8865\uff0c\u8fd9\u4e9b\u9879\u76ee\u6839\u636e\u8bb8\u53ef\u53d1\u5e03\uff0c\u8fd9\u4e9b\u9879\u76ee\u7684\u8981\u6c42\u548c\u4e49\u52a1\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u51e0\u4e4e\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u5f97\u5230\u4e86OSI\u7684\u6279\u51c6\u3002\n\u5f53\u65f6\u4e0d\u90a3\u4e48\u660e\u663e\uff0c\u4f46\u540c\u6837\u91cd\u8981\u7684\u662f\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684\u4e91\u5e02\u573a\u7684\u8bde\u751f\u3002\u5728\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af(Steve Jobs)\u7ad9\u5728\u821e\u53f0\u4e0a\u6325\u821e\u7740\u5149\u6ed1\u7684\u5c0f\u91d1\u5c5e\u677f\u548c\u73bb\u7483\u5927\u7ea6\u4e94\u4e2a\u6708\u524d\uff0c\u4e00\u5bb6\u4e3b\u8981\u4ee5\u9500\u552e\u56fe\u4e66\u800c\u95fb\u540d\u7684\u5728\u7ebf\u96f6\u552e\u5546\u53d1\u5e03\u4e86\u4e1a\u754c\u9996\u4e2a\u4e91\u8ba1\u7b97\u670d\u52a1\u7684\u975e\u5e38\u7c97\u7565\u7684\u6d4b\u8bd5\u7248\u3002\u5f53\u65f6\u6ca1\u6709\u4eba\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u4f46\u8fd9\u79cd\u7b80\u5355\u7684\u6309\u9700\u8ba1\u7b97\u670d\u52a1\uff0c\u4ee5\u53ca\u5b83\u7684\u76f4\u63a5\u524d\u8eab\u7b80\u5355\u53ef\u5bfb\u5740\u5b58\u50a8\uff0c\u5c06\u9884\u793a\u7740\u4e00\u79cd\u65b0\u8ba1\u7b97\u6a21\u5f0f\u7684\u5d1b\u8d77\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6700\u7ec8\u5c06\u540c\u5316\u4f01\u4e1a\u6280\u672f\u884c\u4e1a\u7684\u5176\u4f59\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u521b\u9020\u8005\u5b9a\u4f4d\u4e3a\u516c\u8ba4\u7684\u5e02\u573a\u9886\u5148\u8005\u3002\n\u7ed3\u679c\uff0c\u5f00\u53d1\u4eba\u5458\u4ece\u90a3\u65f6\u8d77\u5c31\u62e5\u6709\u4e86\u5927\u91cf\u7684\u5de5\u5177\u548c\u670d\u52a1\uff0c\u6bcf\u5929\u90fd\u6709\u66f4\u591a\u7684\u8f6f\u4ef6\u548c\u670d\u52a1\u9762\u4e16\u3002\u5f00\u53d1\u4eba\u5458\u60f3\u8981\u7684\u51e0\u4e4e\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u83b7\u5f97\uff0c\u8981\u4e48\u514d\u8d39\uff0c\u8981\u4e48\u53ea\u9700\u652f\u4ed8\u5927\u591a\u6570\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97\u7684\u91d1\u989d\uff0c\u5373\u4f7f\u53ea\u662f\u5728\u8bd5\u7528\u7684\u57fa\u7840\u4e0a\u4e5f\u662f\u5982\u6b64\u3002\u6b63\u5982\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u53ef\u80fd\u4f1a\u544a\u8bc9\u4ed6\u4eec\u7684\u90a3\u6837\uff0c\u201c\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86\u4f60\u9700\u8981\u7684\u4e00\u5207\u3002\u201d\n\u7136\u800c\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u624b\u673a\u548c\u97f3\u4e50\u64ad\u653e\u5668\u56e2\u961f\u7531\u4e00\u4e2a\u6709\u6743\u8ba9\u5b83\u4eec\u5f88\u597d\u5730\u4e00\u8d77\u73a9\u7684\u4e00\u65b9\u63a7\u5236\u7684\u5730\u65b9\uff0c\u73b0\u4ee3\u5f00\u53d1\u57fa\u7840\u8bbe\u65bd\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u3002\u5927\u591a\u6570\u5de5\u5177\u94fe\u90fd\u662f\u7531\u4e0d\u540c\u4f9b\u5e94\u5546\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u62fc\u51d1\u800c\u6210\u7684\uff0c\u4ece\u6d4b\u8bd5\u3001\u6784\u5efa\u3001\u96c6\u6210\u548c\u90e8\u7f72\u5230\u751f\u4ea7\uff0c\u7b2c\u4e00\u884c\u4ee3\u7801\u90fd\u662f\u4ece\u8fd9\u91cc\u7f16\u5199\u7684\u3002\n\u5e02\u573a\u5b9e\u9645\u4e0a\u544a\u8bc9\u5f00\u53d1\u4eba\u5458\u548c\u4ed6\u4eec\u7684\u96c7\u4e3b\u7684\u662f\uff0c\u5e02\u573a\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5c06\u4ece\u4ee3\u7801\u5728\u7248\u672c\u63a7\u5236\u4e2d\u7684\u6700\u65e9\u7684\u9752\u5c11\u5e74\u65f6\u671f\u4e00\u76f4\u5230\u5176\u6210\u5e74\u9636\u6bb5\u7684\u751f\u4ea7\u9636\u6bb5\u3002\u5b83\u544a\u8bc9\u4ed6\u4eec\uff0c\u8be5\u7cfb\u7edf\u53ef\u4ee5\u662f\u5065\u58ee\u7684\u3001\u81ea\u52a8\u5316\u7684\u548c\u65e5\u76ca\u667a\u80fd\u5316\u7684\u3002\u5b83\u8fd8\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5fc5\u987b\u81ea\u5df1\u5efa\u9020\u548c\u7ef4\u62a4\u5b83\u3002\n\u5f53\u7136\uff0c\u6ca1\u6709\u4e2d\u592e\u4f9b\u5e94\u5546\u80fd\u591f\u672c\u80fd\u5730\u6ee1\u8db3\u6240\u6709\u6700\u540e\u7684\u8fd0\u8425\u9700\u6c42\uff0c\u8fd9\u4e00\u70b9\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u662f\u5bf9\u5fae\u8f6f\u906d\u5230\u5f3a\u70c8\u53cd\u5bf9\u7684\u53cd\u5e94\uff0c\u56e0\u4e3a\u5fae\u8f6f\u8bd5\u56fe\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u901a\u8fc7\u8bd5\u56fe\u62e5\u6709\u6574\u4e2a\u5806\u6808\uff0c\u5c31\u50cf\u4ed6\u4eec\u5728\u4e0a\u4e2a\u5341\u5e74\u7684\u65e9\u671f\u62e5\u6709\u529e\u516c\u751f\u4ea7\u529b\u548c\u64cd\u4f5c\u7cfb\u7edf\u5e02\u573a\u4e00\u6837\uff0c\u5fae\u8f6f\u5411\u4e00\u4ee3\u6280\u672f\u4e70\u5bb6\u4f20\u6388\u4e86\u672c\u53ef\u4ee5\u4eceAmdahl\u548cIBM\u90a3\u91cc\u5b66\u5230\u7684\u6559\u8bad\u3002\n\u5f53\u7136\uff0c\u6ca1\u6709\u4efb\u4f55\u4f9b\u5e94\u5546\u80fd\u591f\u6216\u5c06\u6709\u80fd\u529b\u63d0\u4f9b\u6bcf\u4e00\u4ef6\u5fc5\u8981\u7684\u4e1c\u897f\u3002\u5373\u4f7f\u662f\u62e5\u6709\u6700\u591a\u6837\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\u7ec4\u5408\u548c\u53f2\u65e0\u524d\u4f8b\u7684\u53d1\u5e03\u8282\u594f\u7684AWS\uff0c\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\uff0c\u4e5f\u4e0d\u80fd\u62e5\u6709\u6bcf\u4e2a\u76f8\u5173\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8fc7\u7a0b\u592a\u5206\u6563\u4e86\uff1b\u6bcf\u4e2a\u4f01\u4e1a\u4f53\u7cfb\u7ed3\u6784\u90fd\u662f\u4e09\u5c42\u3001\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u662f\u5173\u7cfb\u7684\u3001\u6bcf\u4e2a\u4e1a\u52a1\u5e94\u7528\u7a0b\u5e8f\u90fd\u7528Java\u7f16\u5199\u5e76\u90e8\u7f72\u5230\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u7684\u65f6\u4ee3\u5df2\u7ecf\u8fc7\u53bb\u4e86\u3002\u4eca\u5929\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u552f\u4e00\u6700\u5177\u51b3\u5b9a\u6027\u7684\u7279\u5f81\u662f\uff0c\u6ca1\u6709\u5355\u4e00\u7684\u51b3\u5b9a\u6027\u7279\u5f81\uff0c\u5b83\u5bf9\u4e8e\u6545\u969c\u6765\u8bf4\u662f\u591a\u79cd\u591a\u6837\u7684\u3002\n\u788e\u7247\u5316\u4f7f\u5f97\u4f9b\u5e94\u5546\u4e0d\u53ef\u80fd\u5728\u672c\u5730\u63d0\u4f9b\u5b8c\u5168\u96c6\u6210\u5de5\u5177\u94fe\u6240\u9700\u7684\u7ec4\u4ef6\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u6ca1\u6709\u6539\u53d8\u8fd9\u6837\u4e00\u4e2a\u73b0\u5b9e\uff0c\u5373\u5f00\u53d1\u4eba\u5458\u88ab\u8feb\u4ece\u7f16\u5199\u4ee3\u7801\u4e2d\u501f\u7528\u65f6\u95f4\uff0c\u5e76\u5c06\u5176\u91cd\u65b0\u5b9a\u5411\u5230\u7ba1\u7406\u4e0e\u9ad8\u5ea6\u590d\u6742\u7684\u3001\u591a\u56e0\u7d20\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u94fe\u76f8\u5173\u7684\u95ee\u9898\u4e0a\uff0c\u8fd9\u4e9b\u5de5\u5177\u94fe\u901a\u8fc7\u7ba1\u9053\u80f6\u5e26\u548c\u6346\u7ed1\u7ebf\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u7684\u5dee\u8ddd\u3002\u5411\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4ed6\u4eec\u53ef\u80fd\u9700\u8981\u7684\u4efb\u4f55\u57fa\u7840\u8bbe\u65bd\u539f\u8bed\u7684\u540c\u4e00\u4e2a\u5e02\u573a\u540c\u65f6\u4e5f\u544a\u8bc9\u4ed6\u4eec\uff0c\u5c06\u5b83\u4eec\u62fc\u88c5\u5728\u4e00\u8d77\u662f\u5f00\u53d1\u4eba\u5458\u7684\u95ee\u9898\u3002\n\u5982\u679c\u6ca1\u6709\u3001\u4e5f\u4e0d\u53ef\u80fd\u6709\u76f8\u5f53\u4e8e\u82f9\u679c\u7684\u4f01\u4e1a\u4f9b\u5e94\u5546\u5230\u6765\uff0c\u4ee5\u786e\u4fdd\u4f01\u4e1a\u7535\u8bdd\u5e94\u7528\u56e2\u961f\u4e0e\u4f01\u4e1a\u97f3\u4e50\u64ad\u653e\u5668\u56e2\u961f\u5408\u4f5c\u5f97\u5f88\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u9884\u671f\u4f1a\u6709\u4ec0\u4e48\u8fdb\u5c55\u5462\uff1f\u73b0\u5728\u8fd8\u4e3a\u65f6\u8fc7\u65e9\uff0c\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5b63\u5ea6\u5e94\u8be5\u4f1a\u63d0\u4f9b\u7ebf\u7d22\uff0c\u8bf4\u660e\u8c01\u51c6\u786e\u5730\u8bc6\u522b\u4e86\u95ee\u9898\u7684\u6df1\u5ea6\uff0c\u5e76\u91c7\u53d6\u4e86\u63aa\u65bd\u6765\u89e3\u51b3\u5b83\u3002\u540c\u65f6\uff0c\u8fd9\u91cc\u6709\u4e94\u4e2a\u5f62\u5bb9\u8bcd\u6765\u63cf\u8ff0\u4e0b\u4e00\u4ee3\u5f00\u53d1\u4eba\u5458\u7684\u4f53\u9a8c\u3002\n\u5168\u9762\u6027\uff1a\u5f53\u4eca\u6700\u6210\u529f\u7684\u5e73\u53f0\u7684\u5355\u4e00\u5931\u8d25\u4e4b\u4e00\u662f\u4ed6\u4eec\u5c06\u7f16\u5199\u4ee3\u7801\u3001\u7136\u540e\u6784\u5efa\u548c\u90e8\u7f72\u4ee3\u7801\u7684\u8fc7\u7a0b\u89c6\u4e3a\u8fd1\u4e4e\u4e8b\u540e\u7684\u60f3\u6cd5\u3002\u4e00\u65e6\u5e94\u7528\u7a0b\u5e8f\u5230\u8fbe\u5e73\u53f0\uff0c\u5b83\u5c31\u4f1a\u5f97\u5230\u5f88\u597d\u7684\u7ba1\u7406\uff1b\u7136\u800c\uff0c\u65c5\u7a0b\u53ef\u80fd\u4f1a\u5f88\u8270\u96be\u3002\u7136\u800c\uff0c\u53d8\u5316\u7684\u65e9\u671f\u8ff9\u8c61\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u4f8b\u5982\uff0c\u60f3\u4e00\u60f3GitHub\u7684Actions\u4ea7\u54c1\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5c06\u4e00\u5ea7\u6865\u6881\u4ece\u4e00\u4e2a\u5b64\u5c9b\u5ef6\u4f38\u5230\u4e86\u751f\u4ea7\u73af\u5883\uff0c\u4e2d\u95f4\u6709\u57fa\u672c\u7684CI/CD\u529f\u80fd\u3002\u8fd9\u662f\u4f9b\u5e94\u5546\u5982\u4f55\u8d85\u8d8a\u5176\u6700\u521d\u7684\u6838\u5fc3\u80fd\u529b\u9886\u57df\uff0c\u6a2a\u5411\u6269\u5c55\u5176\u529f\u80fd\u57fa\u7840\u4ee5\u63d0\u4f9b\u66f4\u5168\u9762\u3001\u96c6\u6210\u7684\u5f00\u53d1\u4f53\u9a8c\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u4ece\u7248\u672c\u63a7\u5236\u5230\u76d1\u63a7\uff0c\u4ece\u6570\u636e\u5e93\u5230\u6784\u5efa\u7cfb\u7edf\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b\u7684\u6bcf\u4e2a\u90e8\u5206\u90fd\u9700\u8981\u66f4\u597d\u3001\u66f4\u5e73\u6ed1\u5730\u96c6\u6210\u3002", "note_en": "When the iPhone was first introduced in January of 2007, it took the world by storm. The first device to compress \u2013 successfully, at least \u2013 a mobile phone, a computer with internet access and the 21 century\u2019s equivalent of the Walkman into something that would easily fit into a pocket, the sheer breadth of its capabilities was without precedent. And this was before, notably, the SDK that made possible the \u201c there\u2019s an app for that\u201d campaign. An SDK, as an aside, that Steve Jobs was originally  opposed to.\n What was less remarked upon, however, was the attention Apple paid to how this dizzying array of capabilities worked together, and worked together well. The first time a call came in while a user was listening to music, in fact, was a startling experience, at least in how it highlighted what low expectations people had for their electronics at the time.\n It\u2019s an experience that is taken for granted now, but relative to the competition then it was revolutionary. Call comes in while music is playing. In response, the iPhone fades the music out while fading the ring in. The call can be taken seamlessly, and once ended the music fades back in. Simple. Obvious.\n On the one hand, there\u2019s nothing particularly earth shattering about that example. Or rather, there should not have been. But this clear evidence that the team that designed the mobile phone software had actually spoken with their colleagues writing the software for the music player, and hundreds more examples of similar behavior, was enough to hand the iPhone the established, hard fought market for mobile phones to Apple almost overnight \u2013 a lead that in the United States at least has not been relinquished. The iPhone\u2019s elegant, integrated design disrupted the landscape so thoroughly and completely that the case study is taught in business schools today.\n It is still, however, a lesson that the industry has yet to internalize and apply at scale.\n At the time that the iPhone was introduced, developers were in the early years of a golden age of software and hardware. The open source software they favored was gradually clawing its way towards mainstream acceptance, and the sheer volume of it was exploding. Entirely new categories of software, in fact, were being created from scratch and being quickly filled out by multiple competing projects released under licenses that varied in their requirements and obligations but were, in almost every case, OSI approved.\n Less apparent at the time but no less important was the birth of the cloud market as we know it today. Some five months before Steve Jobs stood on stage waving the sleek, tiny slab of metal and glass around, an online retailer primarily known for selling books released a very rough beta of the industry\u2019s first cloud computing service. No one knew it at the time, but this simple on demand compute service, along with its immediate predecessor, simple addressable storage, would herald the rise of a new computing model that would eventually assimilate the rest of the enterprise technology industry and position its creator as the accepted market leader.\n As a result, developers then and since have had a vast array of tools and services at their fingertips, with more software and services arriving by the day. Nearly anything that a developer could want is available, at either no cost or for an amount that is accessible for most, if only on a trial basis. As Steve Jobs might have told them, \u201cYou\u2019ve got everything you need.\u201d\n There\u2019s one problem, however. Where the phone and music player teams were controlled by a party with the authority to make them play nicely together, this isn\u2019t true of modern development infrastructure. Most toolchains, from where the first lines of code are written through test, build, integration and deployment all the way out to production, are made up of a patchwork quilt of products and services from different suppliers.\n What the market is telling developers and their employers alike, effectively, is that the market can provide a system that will shepherd code from its earliest juvenile days in version control through to its adult stage in production. It is telling them that the system can be robust, automated and increasingly intelligent. And it is also telling them that they have to build and maintain it themselves.\n It should come as no surprise, of course, that there is no central supplier capable of natively satisfying every last operational need. To some extent, this is a reaction to the backlash against Microsoft, for trying to be just that. By attempting to own the entire stack as they owned the office productivity and operating system markets in the early part of the last decade, Microsoft taught a generation of technology buyers lessons that could have been learned from Amdahl and IBM.\n No vendor is or will be in a position to provide every necessary piece, of course. Even AWS, with the most diverse application portfolio and historically unprecedented release cadence, can\u2019t meet every developer need and can\u2019t own every relevant developer community. The process of application development is simply too fragmented at this point; the days of every enterprise architecture being three tier and every database being relational and every business application being written in Java and deployed to an application server are over. The single most defining characteristic of today\u2019s infrastructure is that there is no single defining characteristic, it\u2019s diverse to a fault.\n Fragmentation makes it impossible for vendors to natively supply the requisite components for a fully integrated toolchain. That does not change the reality, however, that developers are forced to borrow time from writing code and redirect it towards managing the issues associated with highly complex, multi-factor developer toolchains held together in places by duct tape and baling wire. This, then, is the developer experience gap. The same market that offers developers any infrastructure primitive they could possibly want is simultaneously telling them that piecing them together is a developer\u2019s problem.\n  If there is and can be no Apple-equivalent enterprise vendor arriving to make sure the enterprise telephone app team plays nicely with the enterprise music player team, what progress can be expected? It\u2019s early, and the next few quarters should provide hints at who has accurately identified the depth of the problem and taken steps to address it. In the meantime, here are five adjectives that will describe the next generation of developer experience.\n Comprehensive: One of the singular failures of today\u2019s most successful platforms is the degree to which they treat the process of writing code, and then building it and deploying it, as near afterthoughts. Once the application gets to the platform it\u2019s in good hands; the journey, however, can be arduous. Early signs of change are visible, however. Consider the degree to which GitHub\u2019s Actions product, for example, extended a bridge from what had been an island to production environments, with base CI/CD capabilities in between. That\u2019s one example of how vendors are evolving beyond their original areas of core competency, extending their functional base horizontally in order to deliver a more comprehensive, integrated developer experience. From version control to monitoring, databases to build systems, every part of an application development workflow needs to be better and more smoothly integrated.", "posttime": "2020-10-15 06:31:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u4f53\u9a8c,experience,\u5f00\u53d1\u4eba\u5458", "title": "\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u5dee\u8ddd", "title_en": "The Developer Experience Gap", "transed": 1, "url": "https://redmonk.com/sogrady/2020/10/06/developer-experience-gap/", "via": "", "real_tags": ["\u5f00\u53d1", "\u4f53\u9a8c", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "a2d565a2aac08ffdaaf5dbbd0406132e.jpg", "infoid": 1028919, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b7e\u540d\u4ea4\u6362(SXG)\u662f\u4e00\u79cd\u4ea4\u4ed8\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u72ec\u7acb\u4e8e\u8d44\u6e90\u7684\u4ea4\u4ed8\u65b9\u5f0f\u6765\u9a8c\u8bc1\u8d44\u6e90\u7684\u6765\u6e90\u3002\u672c\u6587\u63d0\u4f9b\u4e86SXG\u7684\u6982\u8ff0\u3002\n\u57fa\u4e8eChromium\u7684\u6d4f\u89c8\u5668\u652f\u6301SXG(\u4ece\u7248\u672c\uff1aChrome 73\u3001Edge 79\u548cOpera 64\u5f00\u59cb)\u3002\n\u7b7e\u540d\u4ea4\u6362(SXG)\u5141\u8bb8\u7ad9\u70b9\u5bf9\u8bf7\u6c42/\u54cd\u5e94\u5bf9(HTTP\u4ea4\u6362)\u8fdb\u884c\u52a0\u5bc6\u7b7e\u540d\uff0c\u4ece\u800c\u4f7f\u6d4f\u89c8\u5668\u80fd\u591f\u72ec\u7acb\u4e8e\u5185\u5bb9\u7684\u5206\u53d1\u65b9\u5f0f\u6765\u9a8c\u8bc1\u5185\u5bb9\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027\u3002\u56e0\u6b64\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u5728\u5730\u5740\u680f\u4e2d\u663e\u793a\u6e90\u7ad9\u70b9\u7684URL\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u5185\u5bb9\u7684\u670d\u52a1\u5668\u7684URL\u3002\u5c06\u5185\u5bb9\u5f52\u5c5e\u4e0e\u5185\u5bb9\u5206\u53d1\u5206\u5f00\uff0c\u53ef\u6539\u8fdb\u5404\u79cd\u7528\u4f8b\uff0c\u5982\u9690\u79c1\u4fdd\u62a4\u9884\u53d6\u3001\u79bb\u7ebf\u4e92\u8054\u7f51\u4f53\u9a8c\u548c\u63d0\u4f9b\u6765\u81ea\u7b2c\u4e09\u65b9\u7f13\u5b58\u7684\u5185\u5bb9\u3002\nSXG\u5c01\u88c5\u5728\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u6709\u4e24\u4e2a\u4e3b\u8981\u7ec4\u4ef6\uff1aHTTP\u4ea4\u6362\u548c\u7b7e\u540d\u3002HTTP\u4ea4\u6362\u7531\u8bf7\u6c42URL\u3001\u5185\u5bb9\u534f\u5546\u4fe1\u606f\u548cHTTP\u54cd\u5e94\u7ec4\u6210\u3002\n\u683c\u5f0f\u7248\u672c\uff1a1B3Request\uff1aMethod\uff1aGet URI\uff1ahttps://example.org/Header\uff1aResponse\uff1aStatus\uff1a200Header\uff1aCache-Control\uff1aMax-Aage=604800\u6458\u8981\uff1ami-sha256-03=kcwVP6aOwYmA/j9JbUU0GbuiZdnjaBVB/1ag6miNUMY=Expires\uff1aMon\uff0cAug.24 2020 16\uff1a08\uff1a24 GMT Content-Type\uff1aText/HTML\uff1bCharset=Utf-8 Content-Encoding\uff1aMI-sha256-03 Date\uff1aMon\uff0cAug 17 2020 16\uff1a08\uff1a24 GMT Variable\uff1aAccept-Encoding Signature\uff1alabel\uff1bcert-sha256=*ViFgi0WfQ+NotPJf8PBo2T5dEuZ13NdZefPybXq/HhE=*\uff1bCert-URL=&#34\uff1bHttps://test.web.app/ViFgi0WfQ-NotPJf8PBo2T5dEuZ13NdZefPybXq_HhE&#34\uff1b\uff1bdate=1597680503\uff1bexpires=1598285303\uff1bintegrity=&#34\uff1bdigest/mi-sha256-03&#34\uff1b\uff1bsig=*MEUCIQD5VqojZ1ujXXQaBt1CPKgJxuJTvFlIGLgkyNkC6d7LdAIgQUQ8lC4eaoxBjcVNKLrbS9kRMoCHKG67MweqNXy6wJg=*\uff1bvalidity-url=&#34\uff1bhttps://example.org/webpkg/validity&#34\uff1b\u6807\u5934\u5b8c\u6574\u6027\uff1asha256-Gl9bFHnNvHppKsv+bFEZwlYbbJ4vyf4MnaMMvTitTGQ=\u4ea4\u6362\u5177\u6709\u6709\u6548\u7b7e\u540d\u3002\u6709\u6548\u8d1f\u8f7d[1256\u5b57\u8282]\uff1a&lt\uff1b\uff01&gt\uff1bSXG\u793a\u4f8b\u6b63\u6587{Background-color\uff1a#f0f0f2\uff1bMarch\uff1a0\uff1bPADDING\uff1a0\uff1b}\u60a8\u597d\u3002\n\u7b7e\u540d\u4e2d\u7684Expires\u53c2\u6570\u8868\u793aSXG\u7684\u5230\u671f\u65e5\u671f\u3002ASXG\u7684\u6709\u6548\u671f\u6700\u957f\u4e3a7\u5929\u3002\u5982\u679cSXG\u7684\u8fc7\u671f\u65e5\u671f\u5728\u672a\u6765\u8d85\u8fc77\u5929\uff0c\u6d4f\u89c8\u5668\u5c06\u62d2\u7edd\u8be5SXG\u3002\u5728\u7b7e\u540d\u7684HTTP Exchange\u89c4\u8303\u4e2d\u627e\u5230\u6709\u5173\u7b7e\u540d\u5934\u7684\u66f4\u591a\u4fe1\u606f\u3002\nSXG\u662f\u66f4\u5e7f\u6cdb\u7684WebPackaging\u89c4\u8303\u63d0\u6848\u5bb6\u65cf\u7684\u4e00\u90e8\u5206\u3002\u9664\u4e86SXG\uff0cWeb\u6253\u5305\u89c4\u8303\u7684\u53e6\u4e00\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u662fWeb\u6346\u7ed1\u5305(\u6346\u7ed1\u7684HTTP\u4ea4\u6362)\u3002Web\u6346\u7ed1\u5305\u662fHTTP\u8d44\u6e90\u548c\u89e3\u91ca\u6346\u7ed1\u5305\u6240\u9700\u7684\u5143\u6570\u636e\u7684\u96c6\u5408\u3002\nSXG\u548cWeb\u6346\u7ed1\u5305\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u4e00\u4e2a\u5171\u540c\u7684\u6df7\u6dc6\u4e4b\u5904\u3002SXGS\u548cWeb\u6346\u7ed1\u5305\u662f\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u6280\u672f\uff0c\u5e76\u4e0d\u76f8\u4e92\u4f9d\u8d56-Web\u6346\u7ed1\u5305\u65e2\u53ef\u4ee5\u4e0e\u7b7e\u540d\u7684\u4ea4\u6362\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u672a\u7b7e\u540d\u7684\u4ea4\u6362\u4e00\u8d77\u4f7f\u7528\u3002SXGS\u548cWeb\u6346\u7ed1\u5305\u7684\u5171\u540c\u76ee\u6807\u662f\u521b\u5efa\u4e00\u79cdWeb\u6253\u5305\u683c\u5f0f\uff0c\u5141\u8bb8\u6574\u4e2a\u7ad9\u70b9\u5171\u4eab\u4ee5\u4f9b\u79bb\u7ebf\u6d88\u8d39\u3002\nSXG\u662f\u57fa\u4e8eChromium\u7684\u6d4f\u89c8\u5668\u5c06\u5b9e\u73b0\u7684Web\u6253\u5305\u89c4\u8303\u7684\u7b2c\u4e00\u90e8\u5206\u3002\n\u6700\u521d\uff0cSXG\u7684\u4e3b\u8981\u7528\u4f8b\u53ef\u80fd\u662f\u4f5c\u4e3a\u9875\u9762\u4e3b\u6587\u6863\u7684\u4ea4\u4ed8\u673a\u5236\u3002\u5bf9\u4e8e\u6b64\u7528\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528&lt\uff1blink&gt\uff1b\u6216&lt\uff1ba&gt\uff1b\u6807\u8bb0\u4ee5\u53caLinkHeader\u5f15\u7528SXG\u3002\n\u5c3d\u7ba1\u7406\u8bba\u4e0a\u53ef\u4ee5\u4f7f\u7528&lt\uff1b\u811a\u672c&gt\uff1b\u6216&lt\uff1bimg&gt\uff1b\u6807\u8bb0\u5f15\u7528SXG\uff0c\u4f46\u8fd9\u4e0d\u662f\u4f7f\u7528SXG\u52a0\u8f7d\u5b50\u8d44\u6e90\u7684\u63a8\u8350\u65b9\u6cd5\u3002\u5bf9SXG\u5b50\u8d44\u6e90\u52a0\u8f7d\u7684\u5de5\u5177\u652f\u6301\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u56e0\u6b64\u672c\u6587\u6863\u4e0d\u6d89\u53ca\u6b64\u7528\u4f8b-\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u5728\u7b7e\u540dExchange\u5b50\u8d44\u6e90\u66ff\u4ee3\u4e2d\u9605\u8bfb\u66f4\u591a\u4fe1\u606f\u3002\n\u4e0e\u5176\u4ed6\u8d44\u6e90\u4e00\u6837\uff0cSXG\u53ef\u4ee5\u901a\u8fc7\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165\u5176URL\u6765\u52a0\u8f7d\u3002\n\u5185\u5bb9\u534f\u5546\u662f\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u6839\u636e\u5ba2\u6237\u7aef\u7684\u80fd\u529b\u548c\u504f\u597d\u5728\u76f8\u540c\u7684URL\u4e0a\u63d0\u4f9b\u76f8\u540c\u8d44\u6e90\u7684\u4e0d\u540c\u8868\u793a-\u4f8b\u5982\uff0c\u5c06\u8d44\u6e90\u7684gzip\u7248\u672c\u63d0\u4f9b\u7ed9\u4e00\u4e9b\u5ba2\u6237\u7aef\uff0c\u4f46\u5c06Brotli\u7248\u672c\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5ba2\u6237\u7aef\u3002\u5185\u5bb9\u534f\u5546\u4f7f\u5f97\u6839\u636e\u6d4f\u89c8\u5668\u7684\u529f\u80fd\u540c\u65f6\u63d0\u4f9b\u76f8\u540c\u5185\u5bb9\u7684SXG\u548c\u975eSXG\u8868\u793a\u6210\u4e3a\u53ef\u80fd\u3002\nWeb\u6d4f\u89c8\u5668\u4f7f\u7528AcceptRequest\u5934\u6765\u4f20\u8fbe\u5b83\u4eec\u652f\u6301\u7684MIME\u7c7b\u578b\u3002\u5982\u679c\u6d4f\u89c8\u5668\u652f\u6301SXGS\uff0c\u5219MIME\u7c7b\u578b\u5e94\u7528\u7a0b\u5e8f/\u7b7e\u540d\u4ea4\u6362\u5c06\u81ea\u52a8\u5305\u62ec\u5728\u6b64\u503c\u5217\u8868\u4e2d\u3002\n\u8be5\u5b57\u7b26\u4e32\u7684application/sign-exchange\uff1bv=b3\uff1bq=0.9\u90e8\u5206\u901a\u77e5Web\u670d\u52a1\u5668Chrome\u652f\u6301SXGS-\u5177\u4f53\u5730\u8bf4\u662fb3\u7248\u672c\u3002\u6700\u540e\u4e00\u90e8\u5206q=0.9\u8868\u793aQ\u503c\u3002\nQ\u503c\u4f7f\u7528\u4ece0\u52301\u7684\u5c0f\u6570\u4f4d\u6570\u8868\u793a\u6d4f\u89c8\u5668\u5bf9\u7279\u5b9a\u683c\u5f0f\u7684\u76f8\u5bf9\u504f\u597d\uff0c1\u4ee3\u8868\u6700\u9ad8\u4f18\u5148\u7ea7\u3002\u5f53\u6ca1\u6709\u4e3a\u683c\u5f0f\u63d0\u4f9bQ\u503c\u65f6\uff0c1\u662f\u9690\u542b\u7684\u503c\u3002\n\u5f53Accept\u62a5\u5934\u6307\u793a\u5e94\u7528\u7a0b\u5e8f/\u7b7e\u540d\u4ea4\u6362\u7684Q\u503c\u5927\u4e8e\u6216\u7b49\u4e8etext/html\u7684Q\u503c\u65f6\uff0c\u670d\u52a1\u5668\u5e94\u8be5\u670d\u52a1SXG\u3002\n\u4ee5\u4e0b\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u7528\u4e8e\u5339\u914d\u5e94\u7528\u4f5cSXG\u7684\u8bf7\u6c42\u7684Accept\u6807\u5934\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u5b50\u8868\u8fbe\u5f0f(\uff0c|$)\u4e0e\u7701\u7565\u4e86SXG\u7684q\u503c\u7684\u5934\u5339\u914d\uff1b\u6b64\u7701\u7565\u610f\u5473\u7740SXG\u7684q\u503c\u4e3a1\u3002\u5c3d\u7ba1\u7406\u8bba\u4e0aAccept\u6807\u5934\u53ef\u4ee5\u5305\u542b\u5b50\u5b57\u7b26\u4e32q=1\uff0c\u4f46\u5b9e\u9645\u4e0a\u6d4f\u89c8\u5668\u4e0d\u4f1a\u663e\u5f0f\u5217\u51fa\u5177\u6709\u9ed8\u8ba4\u503c1\u7684\u683c\u5f0f\u7684Q\u503c\u3002\n\u53ef\u4ee5\u901a\u8fc7\u5728Chrome DevTools\u7684\u201c\u7f51\u7edc\u201d\u9762\u677f\u7684\u201c\u7c7b\u578b\u201d\u5217\u4e2d\u67e5\u627e\u5df2\u7b7e\u540d\u7684\u4ea4\u6362\u6765\u6807\u8bc6\u5df2\u7b7e\u540d\u7684\u4ea4\u6362\u3002\n\u4ece\u9ad8\u5c42\u6b21\u4e0a\u8bb2\uff0c\u5b9e\u73b0SXG\u5305\u62ec\u751f\u6210\u5bf9\u5e94\u4e8e\u7ed9\u5b9aURL\u7684SXG\uff0c\u7136\u540e\u5c06\u8be5SXG\u63d0\u4f9b\u7ed9\u7528\u6237\u3002\u8981\u751f\u6210SXG\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u7b7e\u7f72SXG\u7684\u8bc1\u4e66\u3002\n\u8bc1\u4e66\u5c06\u5b9e\u4f53\u4e0e\u516c\u94a5\u76f8\u5173\u8054\u3002\u4f7f\u7528\u8bc1\u4e66\u5bf9SXG\u8fdb\u884c\u7b7e\u540d\u5141\u8bb8\u5185\u5bb9\u4e0e\u5b9e\u4f53\u76f8\u5173\u8054\u3002\nSXG\u7684\u751f\u4ea7\u4f7f\u7528\u9700\u8981\u652f\u6301CanSignHttpExchange\u6269\u5c55\u7684\u8bc1\u4e66\u3002\u6839\u636e\u89c4\u8303\uff0c\u5177\u6709\u6b64\u6269\u5c55\u7684\u8bc1\u4e66\u7684\u6709\u6548\u671f\u4e0d\u80fd\u8d85\u8fc790\u5929\uff0c\u5e76\u4e14\u8981\u6c42\u8bf7\u6c42\u57df\u914d\u7f6e\u4e86DNS CAArecord.\u3002\n\u6b64\u9875\u5217\u51fa\u4e86\u53ef\u4ee5\u9881\u53d1\u6b64\u7c7b\u8bc1\u4e66\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u3002SXG\u7684\u8bc1\u4e66\u53ea\u80fd\u901a\u8fc7\u5546\u4e1a\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u83b7\u5f97\u3002\nWeb Packager\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u57fa\u4e8eGo\u7684\u5de5\u5177\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u751f\u6210(\u6253\u5305)\u7b7e\u540d\u4ea4\u6362\u7684\u5de5\u5177\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u624b\u52a8\u521b\u5efaSXG\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u81ea\u52a8\u521b\u5efa\u548c\u670d\u52a1SXG\u7684\u670d\u52a1\u5668\u3002Web Packager\u76ee\u524d\u5904\u4e8eAlpha\u7248\u672c\u3002\n\u751f\u6210SXG\u6587\u4ef6\u540e\uff0c\u5c06\u5176\u4e0a\u4f20\u5230\u60a8\u7684\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528application/sign-exchange\uff1bv=b3MIME\u7c7b\u578b\u63d0\u4f9b\u5b83\u3002\nWeb Packagerserver(Webpkgserver)\u5145\u5f53\u670d\u52a1SXG\u7684\u53cd\u5411\u4ee3\u7406\u3002\u7ed9\u5b9aURL\u540e\uff0cwebpkgserver\u5c06\u83b7\u53d6URL\u7684\u5185\u5bb9\uff0c\u5c06\u5176\u6253\u5305\u4e3aSXG\uff0c\u5e76\u4f5c\u4e3a\u54cd\u5e94\u63d0\u4f9bSXG\u3002\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u8fd0\u884c\u5728localhost\uff1a8080\u4e0a\u7684webpkgserver\u5b9e\u4f8b\u5c06\u628ahttps://example.com\u7684\u5185\u5bb9\u4f5c\u4e3asxg\u8fd4\u56de\u3002/priv/doc/\u662fwebpkgserver\u7aef\u70b9\u7684\u9ed8\u8ba4\u540d\u79f0\u3002\u4f7f\u7528webpkgserver\u914d\u7f6e\u6587\u4ef6\u81ea\u5b9a\u4e49\u6b64\u7ec8\u7ed3\u70b9\u7684\u540d\u79f0\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u8bbe\u7f6e\u3002\n\u5728\u751f\u4ea7\u4e2d\uff0cwebpkgserver\u4e0d\u5e94\u4f7f\u7528\u516c\u5171\u7aef\u70b9\u3002\u76f8\u53cd\uff0c\u524d\u7aefWeb\u670d\u52a1\u5668\u5e94\u8be5\u5c06SXG\u8bf7\u6c42\u8f6c\u53d1\u5230webpkgserver\u3002\u8fd9\u4e9b\u5efa\u8bae\u5305\u542b\u6709\u5173\u5728\u524d\u7aef\u8fb9\u7f18\u670d\u52a1\u5668\u540e\u9762\u8fd0\u884cwebpkgserver\u7684\u66f4\u591a\u4fe1\u606f\u3002\nNginx SXG\u6a21\u5757\u751f\u6210\u5e76\u670d\u52a1\u4e8eSXG\u3002\u5df2\u7ecf\u4f7f\u7528Nginx\u7684\u7ad9\u70b9\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u6b64\u6a21\u5757\uff0c\u800c\u4e0d\u662fWeb Packager Server\u3002\nGen-SigneDexchange\u662fWebPackage\u89c4\u8303\u63d0\u4f9b\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u4f5c\u4e3a\u751f\u6210SXG\u7684\u53c2\u8003\u5b9e\u73b0\u3002\u7531\u4e8e\u529f\u80fd\u96c6\u6709\u9650\uff0cgen-signeexchange\u5bf9\u4e8e\u5c1d\u8bd5SXG\u5f88\u6709\u7528\uff0c\u4f46\u5bf9\u4e8e\u66f4\u5927\u89c4\u6a21\u548c\u751f\u4ea7\u7528\u9014\u5219\u4e0d\u5207\u5b9e\u9645\u3002", "note_en": "A signed exchange (SXG) is a delivery mechanism that makes it possible toauthenticate the origin of a resource independently of how it was delivered.This article provides an overview of SXGs.\n  SXGs are  supported by Chromium-based browsers(starting with versions: Chrome 73, Edge 79, and Opera 64).\n  Signed Exchanges (SXGs) allow a site to cryptographically sign arequest/response pair (an &#34;HTTP exchange&#34;) in a way that makes it possible forthe browser to verify the origin and integrity of the content independently ofhow the content was distributed. As a result, the browser can display the URL ofthe origin site in the address bar, rather than the URL of the server thatdelivered the content. Separating content attribution from content distributionadvances a variety of use cases such as privacy-preserving prefetching, offlineinternet experiences, and serving content from third-party caches.\n  An SXG is encapsulated in a  binary-encoded file that has twoprimary components: an HTTP exchange and a signature.The HTTP exchange consists of a request URL, content negotiation information,and an HTTP response.\n   format version: 1b3 request:  method: GET  uri: https://example.org/  headers: response:  status: 200  headers:  Cache-Control: max-age=604800  Digest: mi-sha256-03=kcwVP6aOwYmA/j9JbUU0GbuiZdnjaBVB/1ag6miNUMY=  Expires: Mon, 24 Aug 2020 16:08:24 GMT  Content-Type: text/html; charset=UTF-8  Content-Encoding: mi-sha256-03  Date: Mon, 17 Aug 2020 16:08:24 GMT  Vary: Accept-Encoding signature:   label;cert-sha256=*ViFgi0WfQ+NotPJf8PBo2T5dEuZ13NdZefPybXq/HhE=*;  cert-url=&#34;https://test.web.app/ViFgi0WfQ-NotPJf8PBo2T5dEuZ13NdZefPybXq_HhE&#34;;  date=1597680503;expires=1598285303;integrity=&#34;digest/mi-sha256-03&#34;;sig=*MEUCIQD5VqojZ1ujXXQaBt1CPKgJxuJTvFlIGLgkyNkC6d7LdAIgQUQ8lC4eaoxBjcVNKLrbS9kRMoCHKG67MweqNXy6wJg=*;  validity-url=&#34;https://example.org/webpkg/validity&#34; header integrity: sha256-Gl9bFHnNvHppKsv+bFEZwlYbbJ4vyf4MnaMMvTitTGQ=  The exchange has a valid signature. payload [1256 bytes]:   &lt;!    &gt;       SXG example               body  {   background-color : #f0f0f2 ;   margin : 0 ;   padding : 0 ;   }            Hello\n The  expires parameter in the signature indicates a SXG&#39;s expiration date. ASXG may be valid for at most 7 days. If the expiration date of an SXG is morethan 7 days in the future, the browser will reject it. Find more information onthe signature header in the  Signed HTTP Exchangesspec.\n  SXGs are a part of the broader  WebPackaging spec proposal family. In additionto SXGs, the other major component of the Web Packaging spec is  Web Bundles(&#34;bundled HTTP exchanges&#34;). Web Bundles are a collection of HTTP resources andthe metadata necessary to interpret the bundle.\n The relationship between SXGs and Web Bundles is a common point of confusion.SXGs and Web Bundles are two distinct technologies that don&#39;t depend on eachother\u2014Web Bundles can be used with both signed and unsigned exchanges. The commongoal advanced by both SXGs and Web Bundles is the creation of a &#34;web packaging&#34;format that allows sites to be shared in their entirety for offline consumption.\n SXGs are the first part of the Web Packaging spec that Chromium-based browsers will implement.\n  Initially, the primary use case of SXGs will likely be as a delivery mechanismfor a page&#39;s main document. For this use case, a SXG could be referenced usingthe  &lt;link&gt; or  &lt;a&gt; tags, as well as the   Linkheader.\n     Although a SXG could theoretically be referenced using a  &lt;script&gt; or  &lt;img&gt;tag, this is not the recommended approach to loading subresources usingSXG. Tooling support for the SXG subresource loading is less mature, andtherefore this use case is not covered in this document - however, you can readmore about it in  Signed Exchange subresourcesubstitution.\n Like other resources, a SXG can be loaded by entering its URL in the browser&#39;s address bar.\n   Contentnegotiationis a mechanism for serving different representations of the same resource at thesame URL depending on the capabilities and preferences of a client\u2014for example,serving the gzip version of a resource to some clients but the Brotli version toothers. Content negotiation makes it possible to serve both SXG and non-SXGrepresentations of the same content depending on a browser&#39;s capabilities.\n Web browsers use the  Acceptrequest header to communicate the  MIMEtypesthey support. If a browser supports SXGs, the MIME type application/signed-exchange will automatically be included in this list ofvalues.\n    The  application/signed-exchange;v=b3;q=0.9 portion of this string informs theweb server that Chrome supports SXGs\u2014specifically, version  b3. The last part q=0.9 indicates the q-value.\n The  q-value expresses a browser&#39;s relative preference for a particular formatusing a decimal scale from  0 to  1, with  1 representing the highestpriority. When a  q-value is not supplied for a format,  1 is the impliedvalue.\n  Servers should serve SXGs when the  Accept header indicates that the  q-valuefor  application/signed-exchange is greater than or equal to the  q-value for text/html.\n The following regular expression can be used to match the  Accept header ofrequests that should be served as SXG:\n   Note that the subexpression  (,|$) matches headers where the  q-value for SXGhas been omitted; this omission implies a  q-value of  1 for SXG. Although an Accept header could theoretically contain the substring  q=1,  inpracticebrowsers don&#39;t explicitly list a format&#39;s  q-value when it has the defaultvalue of  1.\n  Signed Exchanges can be identified by looking for  signed-exchange in the Type column of the  Network panel in Chrome DevTools.\n       At a high level, implementing SXGs consists of generating the SXG correspondingto a given URL and then serving that SXG to users. To generate a SXG you willneed a certificate that can sign SXGs.\n  Certificates associate an entity with a  publickey. Signing a SXG witha certificate allows the content to be associated with the entity.\n Production use of SXGs requires a certificate that supports the CanSignHttpExchanges extension. Per spec,certificates with this extension must have a validity period no longer than 90days and require that the requesting domain have a  DNS CAArecordconfigured.\n This  pagelists the  certificateauthorities that can issuethis type of certificate. Certificates for SXGs are only available through acommercial certificate authority.\n  Web Packager is an open-source,Go-based tool that is the de facto tooling for generating (&#34;packaging&#34;) signedexchanges. You can use it to manually create SXGs, or as a server thatautomatically creates and serves SXGs. Web Packager is currently in alpha.\n     Once the SXG file has been generated, upload it to your server and serve it withthe  application/signed-exchange;v=b3 MIME type.\n  The  Web Packagerserver, webpkgserver, acts as a  reverseproxy for serving SXGs. Given aURL,  webpkgserver will fetch the URL&#39;s contents, package them as an SXG, andserve the SXG in response.\n  In the above example, an instance of  webpkgserver running on  localhost:8080would return the contents of  https://example.com as an SXG.  /priv/doc/ isthe default name of the  webpkgserver endpoint. Use the  webpkgserver configurationfileto customize the name of this endpoint, as well as many other settings.\n In production,  webpkgserver should not use a public endpoint. Instead, thefrontend web server should forward SXG requests to  webpkgserver. These recommendationscontain more information on running  webpkgserver behind a frontend edgeserver.\n  The  NGINX SXG module generatesand serves SXGs. Sites that already use NGINX should consider using thismodule over Web Packager Server.\n gen-signedexchangeis a tool provided by the webpackage specification as a  referenceimplementation ofgenerating SXGs. Due to its limited feature set,  gen-signedexchange isuseful for trying out SXGs, but impractical for larger-scale and productionuse.", "posttime": "2020-10-15 06:30:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ea4\u6362,exchanges,sxg", "title": "\u7b7e\u540d\u4ea4\u6362(SXG)", "title_en": "Signed Exchanges (SXGs)", "transed": 1, "url": "https://web.dev/signed-exchanges/", "via": "", "real_tags": ["\u4ea4\u6362", "exchanges", "sxg"]}, {"category": "", "categoryclass": "", "imagename": "34ca74d95808231013233c451155ba12.jpeg", "infoid": 1028918, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bb8\u591a\u8fdc\u7a0b\u4f18\u5148\u7684\u516c\u53f8\u5df2\u7ecf\u5c06\u4ed6\u4eec\u7684\u4f1a\u8bae\u3001\u7ad9\u7acb\u3001\u5165\u804c\u548c\u542f\u52a8\u6539\u4e3a\u5f02\u6b65\u8fdb\u884c\u3002\u8fd9\u4e0d\u662f\u7075\u4e39\u5999\u836f\uff0c\u4f46\u5f53\u60a8\u7684\u56e2\u961f\u5206\u6563\u5728\u591a\u4e2a\u65f6\u533a\u65f6\uff0c\u8fd9\u5c31\u5f88\u6709\u610f\u4e49\u4e86\u3002\u53d7\u6b64\u542f\u53d1\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5f02\u6b65\u7ad9\u7acb\u4f1a\u8bae\u4e0e\u672c\u5730\u201cStackoverflow\u201d\u76f8\u7ed3\u5408\uff0c\u5e76\u63d0\u51fa\u4e86\u6211\u4eec\u6240\u79f0\u7684\u201c\u5f00\u53d1\u4eba\u5458\u65e5\u5fd7\u201d\u3002\n\u5f00\u53d1\u4eba\u5458\u65e5\u5fd7\u57fa\u672c\u4e0a\u662f\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u5728\u6784\u5efaParknav\u505c\u8f66\u9884\u6d4b\u5668\u65f6\u6bcf\u5929\u9047\u5230\u7684\u95ee\u9898\u7684\u5927\u8111\u8f6c\u50a8\u3002\u6211\u4eec\u7684\u5f00\u53d1\u56e2\u961f\u89c4\u6a21\u5f88\u5c0f\uff0c\u800c\u4e14\u6211\u4eec\u90fd\u8eab\u517c\u6570\u804c--\u56e0\u6b64\uff0c\u4e00\u4e9b\u4eba\u5728\u51e0\u4e2a\u6708\u5185\u6210\u4e3a\u5168\u5957\u5f00\u53d1\u4eba\u5458\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e3b\u8981\u662f\u5728\u540e\u7aef\u5de5\u4f5c\u3002\u6216\u8005\u8ba9\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002\u8fd9\u5c31\u662f\u5404\u79cd\u6709\u8da3\u7684\u95ee\u9898\u51fa\u73b0\u5728\u2026\u4e0a\u7684\u65f6\u5019\u3002\n\u6211\u4eec\u4e5f\u7528\u5b83\u4eec\u6765\u5927\u81f4\u4e86\u89e3\u6bcf\u4e2a\u4eba\u90fd\u5728\u505a\u4ec0\u4e48\uff0c\u6240\u4ee5\u6709\u65f6\u5f53\u6bcf\u4e2a\u4eba\u90fd\u592a\u5fd9\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u53d6\u4ee3\u6211\u4eec\u65e5\u5e38\u7684Zoom\u5355\u53e3\u76f8\u58f0\u3002\n\u67e5\u770b\u6240\u6709\u95f2\u7f6e\u6d88\u606f\uff0c\u9605\u8bfb\u6240\u6709\u90ae\u4ef6\uff0c\u7b7e\u51fa\u4ee3\u7801\u3002\u559d\u4e86\u676f\u5496\u5561\u3002\u5927\u5bb6\u90fd\u7761\u7740\u4e86\u3002\u6211\u4e3a\u8fd9\u4e00\u5929\u505a\u597d\u4e86\u51c6\u5907\u3002)\u3002\n\u8fdd\u89c4\u7684\u6c7d\u8f66\u4fee\u7406\u5382\u6709\u6700\u4f4e\u7535\u8d39\uff0c\u4f46\u6ca1\u6709\u6700\u9ad8\u7535\u8d39\u3002\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5b9a\u4ef7\u6a21\u5f0f\uff1a\u6c38\u8fdc\u53ea\u97002\u6b27\u5143/\u5c0f\u65f6(\u800c\u4e0d\u662f\u5178\u578b\u7684\u5b9a\u4ef7\u6a21\u5f0f\uff0c\u59825\u5c0f\u65f62\u6b27\u5143/\u5c0f\u65f6\uff0c\u7136\u540e10\u6b27\u5143/\u5929)\u3002\u4fee\u590d\u4e86\u4ee3\u7801\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u3002*IndicativeTariff*\u7684\u89e3\u6790\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u6dfb\u52a0\u4e86\u66f4\u591a\u6d4b\u8bd5\u3002\n\u5982\u4f55\u8bbe\u7f6eJMeter\u4f7f\u7528\u968f\u673a\u4f4d\u7f6e\uff1f\u6765\u81eacalc-server\u7528\u6237/\u968f\u673a\u4f4d\u7f6e\u8981\u5728JMeter\u4e2d\u751f\u6210\u5177\u6709N\u4e2aLong\u3001Lon\u5bf9\u7684CSV\uff0c\u8bf7\u4f7f\u7528CSV\u6570\u636e\u914d\u7f6e\u5143\u7d20\u5e76\u5c06\u5b83\u4eec\u5206\u914d\u7ed9HttpRequest\u4e2d\u7684Late\u3001Lon\u53d8\u91cf\uff0c\u5728\u9700\u8981\u5b83\u4eec\u7684\u4f4d\u7f6e\u4f7f\u7528${lat}\u548c${lon}\u3002\n\u6211\u4eec\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u5199\u5728Markdown\u4e2d\uff0c\u5e76\u5c06\u5b83\u4eec\u63a8\u9001\u5230\u4e13\u7528\u7684Git\u56de\u6536\u5e93--\u7c7b\u4f3c\u4e8eConcept(\u751a\u81f3\u662f\u79c1\u6709Stackoverflow)\u7684\u4e1c\u897f\u4e5f\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u662f\u5176\u4e2d\u4e00\u4e9b\u65e5\u5fd7\u6700\u7ec8\u5305\u542b\u4e86\u592a\u591a\u5173\u4e8e\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u4ee3\u7801\u5e93\u7684\u4fe1\u606f\u3002\u6211\u4eec\u8fd8\u60f3\u5728\u79bb\u7ebf\u65f6\u8bbf\u95ee\u5b83\u4eec\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u62e5\u6709\u4e00\u4e2a\u5b58\u50a8\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0e\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u7279\u522b\u76f8\u5173\u7684\u5e38\u89c1\u95ee\u9898\u8fdb\u884cgrep\uff0c\u8fd9\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u3002\u5b83\u8ba9\u6211\u4eec\u53d1\u73b0\u5176\u4ed6\u4eba\u4e5f\u89e3\u51b3\u4e86\u7684\u95ee\u9898\uff0c\u8ddf\u8e2a\u6bcf\u4e2a\u4eba\u90fd\u5728\u505a\u4ec0\u4e48\uff0c\u8fd8\u53ef\u4ee5\u56de\u5fc6\u6211\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u66fe\u7ecf\u5ea6\u8fc7\u7684\u5feb\u4e50\u65f6\u5149\u3002)\n\u95ee\u9898\u6765\u4e86\u3002\u6211\u4eec\u5728\u5c1d\u8bd5\u8fd0\u884c\u5730\u56fe\u63d0\u4f9b\u7a0b\u5e8f\u6d4b\u8bd5\u65f6\u9047\u5230\u6b64\u5f02\u5e38\u3002\u6211\u4eec\u53ef\u80fd\u9700\u8981\u66f4\u65b0\u5730\u7406\u5de5\u5177\uff1a\n\u539f\u56e0\uff1ajava.lang.IllegalArgumentException\uff1aorg.opengis.ferencing.datum.Datum.DatumFactory\u4e0d\u662fjava.desktop/javax.imageio.spi.ServiceRegistry.checkClassAllowed(ServiceRegistry.java:722)at java.desktop/javax.imageio.spi.ServiceRegistry.&lt\uff1binit&gt\uff1b(ServiceRegistry.java:117)at org.geotools.factory.FactoryRegistry.&lt\uff1binit&gt\uff1b(FactoryRegistry.java:155)at org.geotools.factory.FactoryRegistry.&lt\uff1binit&gt\uff1b\u7684ImageIOSPI\u7c7b\u3002(FactoryRegistry.java\uff1a146at org.geotools.factory.FactoryCreator.&lt\uff1binit&gt\uff1b(FactoryCreator.java:82)at org.geotools.referencing.ReferencingFactoryFinder.getServiceRegistry(ReferencingFactoryFinder.java:115)at org.geotools.referencing.ReferencingFactoryFinder.getFactories(ReferencingFactoryFinder.java:180)at org.geotools.referencing.ReferencingFactoryFinder.getCRSAuthorityFactories(ReferencingFactoryFinder.java:455)at org.geotools.referencing.DefaultAuthorityFactory.getBackingFactory(DefaultAuthorityFactory.java:89)at org.geotools.referencing.DefaultAuthorityFactory.&lt\uff1binit&gt\uff1b)\u3002(DefaultAuthorityFactory.java\uff1a69)at org.geotools.referencing.CRS.getAuthorityFactory(CRS.java:263)at org.geotools.referencing.CRS.decode(CRS.java:525)at org.geotools.referencing.CRS.decode(CRS.java:453)at com.parknav.common.geo.TransformHelper.&lt\uff1binit&gt\uff1b(TransformHelper.java:33)at com.parknav.common.geo.TransformHelper$LazyHolder.&lt\uff1bclinit&gt\uff1b(TransformHelper.java:216)\u2026\u3002\u518d\u676539\u6b21\u3002\n\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u5347\u7ea7GeoTools\uff0c\u5b83\u5c06\u8fc1\u79fb\u5230\u65b0\u7248\u672c\u7684JTS\u3002\u5206\u6790`gradle relencyInsight`\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u53d1\u73b0*hibernate-space\uff1a5.3.12 Final*\u548c*gt-main\uff1a18.2*\u9700\u8981JTS\u3002Spring Boot\u4f9d\u8d56\u7ba1\u7406\u63d2\u4ef6\u9009\u62e9\u4e86Hibernate\u7a7a\u95f4\u7248\uff0c[Spring Boot2.3.0\u5df2\u7ecf\u53d1\u5e03](https://github.com/spring-projects/spring-boot/releases/tag/v2.3.0.RELEASE))\u3002\u56e0\u6b64\uff1a\n*\u6211\u5c06Spring Boot\u5347\u7ea7\u52302.3.0*\u6211\u770b\u5230Hibernate-Spatial\u4f7f\u7528jts-1.16*\u53d1\u73b0Geotools 21.x\u4f7f\u7528\u76f8\u540c\u7684JTS\u7248\u672c\u3002\u5730\u7406\u5de5\u5177\u7684\u4e0b\u4e00\u4e2a\u7248\u672c\u4f7f\u7528jts-1.16.1\uff0c\u5b83\u53ef\u80fd\u4e0d\u4f1a\u7834\u574f\u4efb\u4f55\u4e1c\u897f\u3002\u6700\u521d\u505c\u7559\u5728\u5730\u7406\u5de5\u517721\u4e2d\u4ee5\u4f7fJTS\u7248\u672c\u5339\u914d\u3002Geotools 21.x\u662f\u7b2c\u4e00\u4e2a\u652f\u6301Java11\u7684\u7248\u672c\uff0c\u5982\u4e0b\u6240\u8ff0\uff1a[https://docs.geotools.org/latest/userguide/build/install/jdk.html]()\uff0c\u6240\u4ee5\u6ca1\u95ee\u9898\u3002*\u4ece*COMMON*\u9879\u76ee\u4e2d\u79fb\u9664\u663e\u5f0f\u4f9d\u8d56\u7248\u672c\u3002*\u4f7f\u7528org.locationtech\u66ff\u6362\u4e86\u6240\u6709\u51fa\u73b0\u7684com.vividSolutions\u3002", "note_en": "Many  remote- first companies have been moving their meetings, stand ups, onboarding and kick-offs to be asynchronous. It\u2019s not a silver bullet, but makes a lot of sense when your team is spread out across many timezones. Inspired by this, we\u2019ve tried to combine async standup meetings with a local \u201cStackoverflow\u201d and came up with what we call \u201cDeveloper Logs\u201d.\n  Developer Logs are basically brain-dumps of the issues our developers encounter on a daily basis while building our  Parknav parking predictor. Our dev team is small, and we all wear multiple hats \u2014 so it\u2019s not uncommon for someone to become a full-stack dev for a couple of months even though they are primarily working on the backend. Or for a backend developer to build some machine learning models. And that\u2019s when all kinds of interesting issues show up\u2026\n We also use these for general overview of what everyone is working on, so sometimes they replace our daily Zoom stand ups when everyone is too busy.\n Reviewed all slack messages, read all mail, checked out code. Had a coffee. Everyone\u2019s asleep. I braced myself for the day ;)\n   The offending garage has a minimum tariff but no maximum one. Seems like a valid pricing model: just 2\u20ac/hour forever (instead of a typical pricing model like 2\u20ac/hour for 5 hours and then 10\u20ac/day). Fixed the code and added some tests. There was a problem with the parsing of *IndicativeTariff* that I consider a bug. Added some more tests.\n How to set up JMeter to use random locations? User /randomLocations from calc-server to generate a csv with N lat,lon pairs In JMeter, use CSV Data Config element and assign them to lat,lon variables In HttpRequest, use ${lat} and ${lon} in places where they are needed.\n We write these logs in Markdown and push them to a dedicated Git repo \u2014 something like Notion (or even private Stackoverflow) would\u2019ve worked as well, but some of these logs end up with too much information on our infrastructure and code base. We also wanted to have access to them when we\u2019re offline.\n In general, having a repository that we can grep for common problems related specifically to our codebase has been invaluable. It lets us find the issues others have also solved, keep track of what everyone is working on, and also reminisce about the fun times some of us had ;)\n PROBLEM. We get this exception trying to run map-provider tests. Probably we need to update geotools:\n Caused by: java.lang.IllegalArgumentException: org.opengis.referencing.datum.DatumFactory is not an ImageIO SPI class  at java.desktop/javax.imageio.spi.ServiceRegistry.checkClassAllowed(ServiceRegistry.java:722)  at java.desktop/javax.imageio.spi.ServiceRegistry.&lt;init&gt;(ServiceRegistry.java:117)  at org.geotools.factory.FactoryRegistry.&lt;init&gt;(FactoryRegistry.java:155)  at org.geotools.factory.FactoryRegistry.&lt;init&gt;(FactoryRegistry.java:146)  at org.geotools.factory.FactoryCreator.&lt;init&gt;(FactoryCreator.java:82)  at org.geotools.referencing.ReferencingFactoryFinder.getServiceRegistry(ReferencingFactoryFinder.java:115)  at org.geotools.referencing.ReferencingFactoryFinder.getFactories(ReferencingFactoryFinder.java:180)  at org.geotools.referencing.ReferencingFactoryFinder.getCRSAuthorityFactories(ReferencingFactoryFinder.java:455)  at org.geotools.referencing.DefaultAuthorityFactory.getBackingFactory(DefaultAuthorityFactory.java:89)  at org.geotools.referencing.DefaultAuthorityFactory.&lt;init&gt;(DefaultAuthorityFactory.java:69)  at org.geotools.referencing.CRS.getAuthorityFactory(CRS.java:263)  at org.geotools.referencing.CRS.decode(CRS.java:525)  at org.geotools.referencing.CRS.decode(CRS.java:453)  at com.parknav.common.geo.TransformHelper.&lt;init&gt;(TransformHelper.java:33)  at com.parknav.common.geo.TransformHelper$LazyHolder.&lt;clinit&gt;(TransformHelper.java:216)  \u2026 39 more\n We\u2019ll have to upgrade geotools, which will move to a new version of JTS. Analyzed the dependencies with `gradle dependencyInsight` and found that JTS is required by *hibernate-spatial:5.3.12.Final* and *gt-main:18.2*. Hibernate-spatial version is selected by Spring Boot dependency management plugin and [Spring Boot 2.3.0 has been released]( https://github.com/spring-projects/spring-boot/releases/tag/v2.3.0.RELEASE) recently. Thus:\n * I upgraded Spring Boot to 2.3.0 * I saw that hibernate-spatial uses jts-1.16 * Found that geotools 21.x uses that same JTS version. Next versions of geotools use jts-1.16.1 which probably won\u2019t  break anything. Initially staying in geotools 21 to make jts versions match. Geotools 21.x is the first version  supporting Java 11, as stated here: [ https://docs.geotools.org/latest/userguide/build/install/jdk.html]() so it\u2019s ok. * Removed explicit dependency version from *common* project. * Replaced all occurrences of com.vividsolutions by org.locationtech.", "posttime": "2020-10-15 06:30:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u65e5\u5fd7,logs", "title": "\u5f00\u53d1\u4eba\u5458\u65e5\u5fd7\uff1a\u4e3a\u60a8\u7684\u5f00\u53d1\u56e2\u961f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u77e5\u8bc6\u5e93\u548c\u540c\u6b65\u5de5\u5177", "title_en": "Developer Logs: a simple knowledge base and sync tool for your dev team", "transed": 1, "url": "https://medium.com/aiincube-engineering/developer-logs-3535c67e7315", "via": "", "real_tags": ["\u5f00\u53d1", "\u65e5\u5fd7", "logs"]}, {"category": "", "categoryclass": "", "imagename": "93c25fa496a98a4a76268f48fbd98a8e.jpg", "infoid": 1028917, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u98ce\u9669\u5206\u6790\u534f\u4f1a(SRA)\u5c06\u98ce\u9669\u5b9a\u4e49\u4e3a\u53d1\u751f\u4e0d\u5e78\u4e8b\u4ef6\u7684\u53ef\u80fd\u6027\uff0c\u5728\u6570\u91cf\u4e0a\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u4e3a\u540e\u679c\u7684\u6982\u7387\u548c\u7a0b\u5ea6/\u4e25\u91cd\u7a0b\u5ea6\u7684\u7ec4\u5408\u3002\u6839\u636e\u8fd9\u4e2a\u57fa\u672c\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u98ce\u9669\u6b63\u5f0f\u5316\uff1a\n\u5a01\u80c1\u662f\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\uff0c\u8106\u5f31\u6027\u662f\u8003\u8651\u5230\u98ce\u9669\u6e90\u7684\u53d1\u751f\uff0c\u5bf9\u540e\u679c\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u4e25\u91cd\u6027\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u53ef\u4ee5\u51cf\u8f7b\u4e0a\u9762\u786e\u5b9a\u7684\u6240\u6709\u98ce\u9669\u7684\u63aa\u65bd\u3002\n\u6bcf\u9879\u7f13\u89e3\u63aa\u65bd\u90fd\u6709\u6210\u672c\uff0c\u5982\u679c\u6211\u4eec\u6709x$\u7684\u7279\u5b9a\u9884\u7b97\uff0c\u90a3\u4e48\u5206\u914d\u8981\u7f13\u89e3\u7684\u98ce\u9669\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\n\u5982\u679c\u6211\u4eec\u6709\u65e0\u9650\u7684\u9884\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9e\u65bd\u7f13\u89e3\u63aa\u65bd\u6765\u51cf\u8f7b\u6240\u6709\u4e0a\u8ff0\u98ce\u9669\u3002\u4f46\u5728\u9884\u7b97\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u51b3\u5b9a\u51cf\u8f7b\u54ea\u4e9b\u98ce\u9669\u3002\n\u4e0a\u8ff0\u95ee\u9898\u4e2d\u7684\u672a\u77e5\u53d8\u91cf\u662f\u79bb\u6563\u53d8\u91cf\uff0c\u5b83\u4eec\u662f\u6574\u6570\uff0c\u9650\u5236\u57280\u548c1\u4e4b\u95f4\uff0c\u8fd9\u662f\u4e00\u4e2a\u79bb\u6563\u4f18\u5316\u95ee\u9898\uff0c\u7531\u4e8e\u6ca1\u6709\u4e8c\u6b21\u9879\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u7ebf\u6027\u95ee\u9898\u3002\n\u8fd9\u79cd\u7279\u5b9a\u7684\u8d44\u6e90\u5206\u914d\u95ee\u9898\u79f0\u4e3a\u80cc\u5305\u95ee\u9898\uff0c\u51b3\u7b56\u8005\u5fc5\u987b\u5728\u56fa\u5b9a\u9884\u7b97\u4e0b\u4ece\u4e00\u7ec4\u9879\u76ee\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u65e9\u57281897\u5e74\uff0c\u4eba\u4eec\u5c31\u5bf9\u5b83\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u7814\u7a76\u3002\u56e0\u4e3a\u4eba\u4eec\u53ea\u80fd\u9009\u62e9\u8981\u5305\u542b\u6216\u4e0d\u5305\u542b\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u901a\u5e38\u79f0\u4e3a0-1\u80cc\u5305\u95ee\u9898\u3002\u6709\u8bb8\u591a\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528MIP\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u5176\u4ed6\u7ea6\u675f\u548c\u903b\u8f91\u8003\u8651\u65f6\uff0c\u5b83\u975e\u5e38\u7075\u6d3b\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u95ee\u9898\u662fNP\u5b8c\u5168\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u5df2\u77e5\u7684\u7b97\u6cd5\u65e2\u6b63\u786e\u53c8\u5feb\u901f(\u591a\u9879\u5f0f\u65f6\u95f4)\u6765\u89e3\u51b3\u80cc\u5305\u95ee\u9898\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\u3002\n\u5047\u8bbe\u4e00\u9879\u7f13\u89e3\u63aa\u65bd\u4f9d\u8d56\u4e8e\u53e6\u4e00\u9879\u63aa\u65bd\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u76f4\u5230\u5b9e\u73b0\u53e6\u4e00\u63aa\u65bdd5\u624d\u80fd\u5b9e\u73b0\u7279\u5b9a\u63aa\u65bdd1\u3002\u901a\u8fc7\u6dfb\u52a0\u65b0\u7684\u7ea6\u675f\uff0c\u53ef\u4ee5\u5728\u524d\u9762\u7684\u6a21\u578b\u4e2d\u5305\u62ec\u8fd9\u4e00\u8003\u8651\u4e8b\u9879\u3002\n\u4eba\u4eec\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u7684\u903b\u8f91\u8003\u8651\u56e0\u7d20\u6765\u8fdb\u4e00\u6b65\u4e30\u5bcc\u6a21\u578b\uff0c\u5047\u8bbe\u4e24\u4e2a\u7f13\u89e3\u8ba1\u5212\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u5b83\u4eec\u4e0d\u80fd\u540c\u65f6\u5b9e\u65bd\u3002\u5047\u8bbed1\u548cd4\u662f\u51b2\u7a81\u7684\u7f13\u89e3\u63aa\u65bd\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9d1\u6216d4\uff1a\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u8003\u8651\u4e09\u4e2a\u6216\u66f4\u591a\u76f8\u4e92\u51b2\u7a81\u7684\u51b3\u5b9a\uff0c\u5982\u679cd1\u3001d2\u548cd4\u4e0d\u517c\u5bb9\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\uff0c\u5219\u53ea\u9700\u6dfb\u52a0\u4ee5\u4e0b\u7ea6\u675f\uff1a\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u6dfb\u52a0\u7ea6\u675f\uff0c\u4ee5\u4fbf\u5bf9\u51b3\u7b56\u4e4b\u95f4\u7684\u590d\u6742\u4ea4\u4e92\u8fdb\u884c\u5efa\u6a21\uff0c\u7b49\u7b49\u3002\u5982\u679c\u6211\u4eec\u6709\u4e0d\u517c\u5bb9\u7684\u7ea6\u675f\uff0c\u5219\u53ef\u80fd\u6ca1\u6709\u4f18\u5316\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6574\u6570\u89c4\u5212\u662f\u79bb\u6563\u4f18\u5316\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u5b83\u5bfb\u6c42\u5bf9\u7ea6\u675f\u6761\u4ef6\u4e0b\u7684\u76ee\u6807\u51fd\u6570\u8fdb\u884c\u4f18\u5316\u3002LP\u683c\u5f0f\u662f\u4e00\u79cd\u4eba\u6027\u5316\u7684\u5efa\u6a21\u683c\u5f0f\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5c3d\u7ba1\u5176\u4ed6\u683c\u5f0f\u66f4\u9002\u5408\u5927\u89c4\u6a21\u95ee\u9898\u3002\n\u57fa\u672c\u7ed3\u6784\u975e\u5e38\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u95ee\u9898\u7684\u6570\u5b66\u516c\u5f0f\u4e2d\u7ffb\u8bd1\u51fa\u6765\u3002\u7b2c\u4e00\u90e8\u5206\u8be6\u7ec6\u8bf4\u660e\u4e86\u8981\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u4ee5\u53ca\u5b83\u662f\u6700\u5927\u5316\u95ee\u9898\u8fd8\u662f\u6700\u5c0f\u5316\u95ee\u9898\u3002\u7b2c\u4e8c\u90e8\u5206\u6307\u5b9a\u7ea6\u675f\uff0cLP\u6587\u4ef6\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u91cf\u7684\u7ea6\u675f\u3002\u6700\u540e\uff0c\u6700\u540e\u4e00\u8282\u6307\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\u3002\n\u4e00\u65e6\u95ee\u9898\u4ee5LP\u683c\u5f0f\u8868\u793a\u51fa\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u6587\u4ef6\u63d0\u4f9b\u7ed9MIP\u4f18\u5316\u5668\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u6700\u4f18\u89e3\u51b3\u65b9\u6848\u3002CBC\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4f18\u5316\u5668\uff1a\u4ee3\u8868Coin-or BRANCH\u548cCUT\uff0cCBC\u662f\u4e00\u4e2a\u7528C++\u7f16\u5199\u7684\u5f00\u6e90\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u89e3\u7b97\u5668\u3002\n\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570obj\uff1a420d1+160d2+4d3+135d4+4d5+210d6\uff0c\u6ee1\u8db3c0\uff1a90d1+80d2+30d3+45d4+4d5+50d6&lt\uff1b=150\u4e8c\u8fdb\u5236d1d2d3d4d5d6\nCBC\u63d0\u4f9b\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u547d\u4ee4\u884c\u8c03\u7528\u8be5\u6587\u4ef6\u6765\u4f18\u5316\u95ee\u9898\u3002\n\u6700\u4f18\u7b56\u7565\u5305\u62ec\u964d\u4f4e\u98ce\u96691\u30015\u548c6\u3002\u8be5\u7b56\u7565\u4e3a\u76ee\u6807\u51fd\u6570\u8d4b\u503c634\u3002\n\u6700\u5927\u5316*\u76ee\u6807\u51fd\u6570obj\uff1a420d1+160d2+4d3+135d4+4d5+210d6\uff0c\u670d\u4ecec0\uff1a90d1+80d2+30d3+45d4+4d5+50d6\uff1b=150c1\uff1ad5-d1\uff1b=0c2\uff1ad6+d5\uff1b=1\u4e8c\u8fdb\u5236d1d2d3d4d5d6\u3002\n\u65e2\u7136\u8fd9\u4f4d\u65b0\u624b\u5546\u4eba\u5df2\u7ecf\u4e86\u89e3\u4e86\u6df7\u5408\u6574\u6570\u89c4\u5212\u7684\u79d8\u5bc6\uff0c\u4ed6\u5c31\u53bb\u5e94\u7528\u4ed6\u65b0\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u6839\u636e\u6210\u672c\u548c\u9884\u671f\u4ef7\u683c\u6765\u4f18\u5316\u8fdb\u53e3\u54ea\u4e9b\u5546\u54c1\u3002\u4ed6\u51b3\u5b9a\u5206\u914d1000\u7f8e\u5143\u7684\u9884\u7b97\uff0c\u7136\u540e\u4ed6\u627e\u5230\u4e86\u6700\u4f18\u89e3\u51b3\u65b9\u6848\u3002\u4e00\u4f4d\u8001\u5546\u4eba\u770b\u5230\u8fd9\u4f4d\u65b0\u624b\u5728\u505a\u4ec0\u4e48\uff0c\u5c31\u7ed9\u4e86\u4ed61\u7f8e\u5143\u3002\n\u65b0\u624b\u5546\u4eba\u8bf4\uff1a\u201c\u4f60\u4e3a\u4ec0\u4e48\u7ed9\u62111\u7f8e\u5143\uff1f\u201d\u8001\u5546\u4eba\u8bf4\uff1a\u201c\u7528\u4f60\u7684\u65b0\u9884\u7b97\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u3002\u201d\u8fd9\u4f4d\u65b0\u624b\u5546\u4eba\u5f00\u609f\u4e86\u3002\n\u7531\u4e8eMIP\u95ee\u9898\u7684\u8c28\u614e\u6027\u8d28\uff0c\u5206\u914d\u7684\u9884\u7b97\u4e2d\u7684\u5fae\u5c0f\u53d8\u5316\u53ef\u80fd\u4f1a\u5bfc\u81f4\u89e3\u51b3\u65b9\u6848\u7684\u5de8\u5927\u5dee\u5f02\u3002", "note_en": "The Society for Risk Analysis (SRA) defines risk as to the possibility of an unfortunate occurrence, and quantitatively it can be defined as the combination of probability and magnitude/severity of consequences. From this basic definition, we can formalize the risk:\n    The Threat  is the probability of an event occurring and the Vulnerability  is uncertainty about and severity of the consequences, given the occurrence of a risk source.\n   Suppose for the sake of example, that we have identified the measures that may mitigate all the risks identified above.\n  Each mitigation measure has a cost, if we have a certain budget of x$ what is the optimal way to allocate which risk to mitigate?\n If we have an unlimited budget we could afford to mitigate all of the above risks by implementing the mitigation measures. But in the case of a limited budget, a decision should be made about which risk to mitigate.\n   The unknown variables in the above-stated problem are discrete variables, they are integer and restricted to 0 and 1. This is a discrete optimization problem, and since there is no quadratic term it is a linear problem.\n This particular resource allocation problem where the decision-makers have to choose from a set of items under a fixed budget is called the knapsack problem. It has been studied extensively from as early as 1897. And because one can choose only an item to be included or not it is usually called the 0\u20131 knapsack problem. Many algorithms and heuristics exist for solving this type of problem, we choose to use a MIP approach  because it is very flexible when we want to add other constraints and logical considerations.\n It should be noted that this problem is NP-complete, thus there is no known algorithm both correct and fast (polynomial-time) that can solve every case of the knapsack problem.\n  Suppose that a mitigation measure is a dependant on another. For instance, suppose that the implementation of a particular measure d1 cannot be done until the realization of another measure d5. One can include this consideration in the previous model by adding a new constraint.\n    One can further enrich the model by adding more logical considerations, suppose that two mitigation plans are incompatible, they can\u2019t be implemented at the same time. Let\u2019s say d1 and d4 are conflicting mitigation measures, we can choose either d1 or d4:\n  We can consider also three or more conflicting decisions, if d1, d2, and d4 are incompatible and we can choose only one of them, we can simply add the following constraint:\n   We can keep adding constraints in order to model complex interaction between the decision, etc. If we have incompatible constraints, it may be possible that there is no solution to the optimization problem.\n  Integer programming is a subset of discreet optimization, that seeks to optimize an objective function subject to constraints. The LP format is a human-friendly modeling format. In practice, though other formats are more adequate for large-scale problems.\n The basic constructs are really simple and can be translated directly from the mathematical formulation of the problem. The first section specifies the objective function to optimize and whether it\u2019s a maximization or minimization problem. The second section specifies the constraints, an LP file may contain an arbitrary number of them. Finally, the last section specifies the type of the variable.\n Once that the problem was formulated in LP format we can simply feed the file to a MIP optimizer and voil\u00e0 we have an optimal solution. One such an optimizer is CBC: standing for Coin-or branch and cut, CBC is an open-source mixed-integer linear programming solver written in C++.\n Maximize  \\ The objective function  obj: 420 d1 + 160 d2 + 4 d3 + 135 d4 + 4 d5 + 210 d6  Subject To  c0: 90 d1 + 80 d2 + 30 d3 + 45 d4 + 4 d5 + 50 d6 &lt;= 150  Binary  d1 d2 d3 d4 d5 d6  End\n CBC provides a stand-alone executable that can be called directly from the command line to optimize the problem.\n     The optimal strategy consists of mitigating  risks 1, 5, and 6. This strategy gives a value of  634 for the objective function.\n   Maximize*  \\ The objective function  obj: 420 d1 + 160 d2 + 4 d3 + 135 d4 + 4 d5 + 210 d6  Subject To  c0: 90 d1 + 80 d2 + 30 d3 + 45 d4 + 4 d5 + 50 d6 &lt;= 150 c1: d5 \u2013 d1 &gt;= 0  c2: d6 + d5 &lt;= 1  Binary  d1 d2 d3 d4 d5 d6  End\n    Now that the novice merchant had learned the secrets of Mixed-Integer Programming, he went to apply his newly gained knowledge to optimize which goods to import based on its cost and expected price. He decided to allocate a budget of 1000$ and then he found the optimal solution. An old merchant, seeing what the novice was doing, gave him 1$.\n The novice merchant said: \u201cWhy you gave me 1$ ?\u201d. The old merchant said: \u201cRedo your calculation with your new budget\u201d. The novice merchant  was enlightened.\n Due to the discreet nature of MIP problems, a small variation in the allocated budget can cause a huge difference in the solution.", "posttime": "2020-10-15 06:29:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f13\u89e3,integer", "title": "\u6700\u4f18\u98ce\u9669\u7f13\u89e3\u7b56\u7565\u7684\u6df7\u5408\u6574\u6570\u89c4\u5212", "title_en": "Mixed Integer Programming for optimal risk mitigation strategy", "transed": 1, "url": "https://www.vneuron.com/compliance/mixed-integer-programming-for-optimal-risk-mitigation-strategy/?w3tc_note=flush_all", "via": "", "real_tags": ["\u7f13\u89e3", "integer"]}, {"category": "", "categoryclass": "", "imagename": "d5e59e8546dd9ce199c13be775700a10.png", "infoid": 1028916, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6570\u5b57\u4ee3\u7406\u4e16\u754c\u4e2d\uff0c\u6218\u7565\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6982\u5ff5\uff0c\u5b83\u6d88\u8017\u4e86\u6211\u4eec\u56f4\u7ed5\u6d41\u7a0b\u3001\u8bbe\u8ba1\u548c\u6280\u672f\u9009\u62e9\u8fdb\u884c\u7684\u5927\u91cf\u5bf9\u8bdd\u3002\n\u5f53\u4f60\u505a\u5bf9\u7684\u65f6\u5019\uff0c\u5b83\u6709\u5f88\u5927\u7684\u4efd\u91cf\uff0c\u5f53\u4f60\u505a\u9519\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u66f4\u6709\u4efd\u91cf\u4e86\u3002\u6211\u53d1\u73b0\uff0c\u4ee5\u5bbd\u677e\u7684\u65b9\u5f0f\u9886\u5bfc\u6570\u5b57\u6218\u7565\u4f1a\u8bae\u53ef\u4ee5\u7f13\u89e3\u8fd9\u79cd\u538b\u529b\u3002\u4ee5\u5f00\u653e\u7684\u5fc3\u6001\uff0c\u6211\u4eec\u7684\u56e2\u961f\u53ef\u4ee5\u4e3a\u6211\u4eec\u7684\u5ba2\u6237\u5f00\u53d1\u66f4\u597d\u7684\u60f3\u6cd5\u548c\u89e3\u51b3\u65b9\u6848\u3002\n\u6700\u8fd1\uff0c\u6211\u6b63\u5728\u51c6\u5907\u4e00\u6b21\u5de5\u4f5c\u65c5\u884c\uff0c\u4ee5\u89e3\u51b3\u4e00\u4e2a\u5ba2\u6237\u9879\u76ee\u7684\u6218\u7565\u95ee\u9898\uff0c\u800c\u8fd9\u4e2a\u6218\u7565\u5bf9\u6211\u6765\u8bf4\u4ecd\u7136\u4e0d\u662f\u767e\u5206\u4e4b\u767e\u6e05\u695a\u3002\u6211\u4eec\u5df2\u7ecf\u4e0e\u56e2\u961f\u8fdb\u884c\u4e86\u521d\u6b65\u8ba8\u8bba\uff0c\u4f46\u6211\u4ecd\u7136\u4e0d\u786e\u5b9a\u6211\u4eec\u8981\u6784\u5efa\u4ec0\u4e48\u3002\u8fd9\u662f\u4ee4\u4eba\u4f24\u8111\u7b4b\u7684\uff0c\u539f\u56e0\u6709\u51e0\u4e2a\uff1a\n\u5982\u679c\u4f60\u4e0d\u80fd\u5728\u51fa\u53d1\u56de\u5bb6\u524d\u627e\u5230\u4e00\u4e2a\u660e\u786e\u7684\u7b54\u6848\u600e\u4e48\u529e\uff1f\n\u6211\u89e3\u51b3\u8fd9\u4e2a\u6a21\u68f1\u4e24\u53ef\u7684\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u6545\u610f\u4e0d\u5199\u4f1a\u8bae\u8bae\u7a0b\u3002\u6211\u77e5\u9053\u4f60\u5728\u60f3\u4ec0\u4e48\uff1a\u4e3a\u4ec0\u4e48\u4f60\u8981\u505a\u597d\u5931\u8d25\u7684\u51c6\u5907\uff0c\u8fd9\u662f\u4f60\u6e05\u5355\u4e0a\u7684\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u518d\u5199\u4e0b\u6765\u5462\uff1f\u8ddf\u7740\u6211\u3002\u5e7f\u6cdb\u7684\u5bf9\u8bdd\u5f88\u6709\u4ef7\u503c\uff0c\u56e0\u4e3a\u6709\u65f6\u5019\u6700\u597d\u7684\u8bae\u7a0b\u662f\u201c\u503e\u542c\u8bae\u7a0b\u201d\u3002\u6211\u4eec\u5728\u8fd9\u4e2a\u623f\u95f4\u91cc\u7684\u89d2\u8272\u4ec5\u4ec5\u662f\u901a\u8fc7\u8be2\u95ee\u6709\u5173\u6211\u4eec\u5ba2\u6237\u7684\u4e1a\u52a1\u6218\u7565\u3001\u9700\u6c42\u548c\u76ee\u6807\u7684\u95ee\u9898\u6765\u5438\u6536\u4fe1\u606f\u3002\u5b83\u53ef\u80fd\u4f1a\u8ba9\u4eba\u611f\u5230\u5c34\u5c2c\uff0c\u4e5f\u4f1a\u6709\u6c89\u9ed8\uff0c\u4f46\u6211\u76f8\u4fe1\u5b89\u9759\u662f\u5f3a\u5927\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u601d\u7ef4\u8f66\u8f6e\u8f6c\u52a8\u548c\u7a81\u7834\u6027\u60f3\u6cd5\u8bde\u751f\u7684\u5730\u65b9\u3002\n\u5728\u6211\u4eec\u5ba2\u6237\u7684\u6218\u7565\u4f1a\u8bae\u8fdb\u884c\u4e86\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u5f88\u660e\u663e\u6211\u4eec\u5df2\u7ecf\u5230\u4e86\u4e00\u4e2a\u9648\u8bcd\u6ee5\u8c03\u7684\u5730\u6b65\u3002\u6bcf\u4e2a\u4eba\u7684\u7cbe\u529b\u4f3c\u4e4e\u8f6c\u77ac\u5373\u901d\uff0c\u767d\u677f\u4e0a\u6f66\u8349\u5730\u5199\u7740\u7b14\u8bb0\u3002\u6211\u4eec\u8138\u4e0a\u75b2\u60eb\u7684\u8868\u60c5\u8868\u8fbe\u4e86\u6211\u4eec\u5171\u540c\u7684\u62c5\u5fe7\uff0c\u5373\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5c06\u8fd9\u4e00\u6c64\u4fe1\u606f\u8f6c\u5316\u4e3a\u53ef\u884c\u7684\u6570\u5b57\u5b58\u5728\u3002\u6b64\u2026\u3002\u73b0\u5728\u662f\u65f6\u5019\u628a\u503e\u542c\u7684\u8bae\u7a0b\u53d8\u6210\u884c\u52a8\u7684\u8bae\u7a0b\u4e86\u3002\n\u6211\u4eec\u7684\u56e2\u961f\u9700\u8981\u4f11\u606f\u4e00\u4e0b\u6765\u5145\u7535\uff0c\u521b\u610f\u4eba\u5458\u53bb\u6563\u6b65\uff0c\u6211\u4eec\u7684\u5ba2\u6237\u56de\u53bb\u5de5\u4f5c\uff0c\u6211\u5750\u5728\u4e00\u4e2a\u7a7a\u8361\u8361\u7684\u4f1a\u8bae\u5ba4\u91cc\uff0c\u51dd\u89c6\u7740\u8eba\u5728\u6211\u7684\u7b14\u8bb0\u9875\u4e2d\u7684\u8f89\u714c\uff0c\u4ee5\u53ca\u5728\u6211\u5934\u9876\u6f02\u6d6e\u7684\u6210\u5343\u4e0a\u4e07\u7684\u60f3\u6cd5\u3002\u6709\u5f15\u8bed\u3001\u56fe\u8868\u3001\u5185\u5bb9\u6bb5\u843d\u548c\u6574\u4e2a\u767d\u677f\u9700\u8981\u8003\u8651\u3002\u9762\u5bf9\u773c\u524d\u7684\u5927\u91cf\u6750\u6599\uff0c\u6211\u4e0d\u77e5\u6240\u63aa\uff0c\u5728\u91cd\u65b0\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u6c89\u6d78\u5728\u81ea\u5df1\u7684\u8eab\u4f53\u91cc\u3002\u8fd9\u9879\u4efb\u52a1\u5f88\u590d\u6742\uff0c\u6211\u60f3\u786e\u4fdd\u6211\u4eec\u4ee5\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u683c\u5f0f\u663e\u793a\u4fe1\u606f\uff0c\u540c\u65f6\u4e5f\u6355\u6349\u5230\u4e86\u9879\u76ee\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u6211\u7ed9\u6211\u4eec\u7684\u767d\u677f\u62cd\u4e86\u4e00\u5f20\u7167\u7247\uff0c\u628a\u5b83\u5168\u90e8\u64e6\u6389\uff0c\u628a\u5b83\u64e6\u5f97\u5e72\u5e72\u51c0\u51c0\u3002\u6211\u753b\u4e86\u56db\u6761\u5782\u76f4\u7ebf\uff0c\u521b\u5efa\u4e86\u4e94\u4e2a\u90e8\u5206\uff1a\u8c01\u3001\u4ec0\u4e48\u3001\u4e3a\u4ec0\u4e48\u3001\u5982\u4f55\u548c\u8c01\u3002\u65e9\u5728\u82f1\u8bed\u8bfe\u4e0a\uff0c\u6211\u4eec\u5728\u5b66\u4e60\u5982\u4f55\u9020\u53e5\u65f6\u5c31\u5b66\u5230\u4e86\u8fd9\u4e94\u4ef6\u4e8b\u3002\u4f46\u8fd9\u4e9b\u57fa\u672c\u53c2\u6570\u7ed9\u4e86\u6211\u601d\u7ef4\u53d1\u5c55\u6240\u9700\u7684\u7cbe\u795e\u7a7a\u95f4\uff0c\u7b56\u7565\u5f00\u59cb\u6d41\u52a8\u3002\n\u53ea\u7528\u4e86\u4e00\u4e2a\u5c0f\u65f6\u5c31\u628a\u6574\u4e2a\u4e0a\u5348\u79ef\u7d2f\u7684\u6240\u6709\u60f3\u6cd5\u5f52\u7c7b\u3002\u5f53\u4e3b\u9898\u56de\u6765\u540e\uff0c\u6211\u4eec\u4ed4\u7ec6\u68c0\u67e5\u4e86\u6bcf\u4e2a\u90e8\u5206\uff0c\u5254\u9664\u4e86\u4eae\u70b9\u3001\u5185\u5bb9\u548c\u58f0\u660e\uff0c\u6211\u4eec\u56f4\u7ed5\u7740\u76f8\u540c\u7684\u613f\u666f\u56e2\u7ed3\u8d77\u6765\u3002\u8fd9\u4e00\u6218\u7565\u5728\u7b80\u5355\u6027\u7684\u542f\u53d1\u4e0b\u53d8\u5f97\u6d3b\u8dc3\u8d77\u6765\u3002\u8fd9\u5e76\u4e0d\u662f\u8981\u544a\u8bc9\u4f60\u4eec\u6211\u662f\u4e00\u4e2a\u6218\u7565\u5deb\u5e08\uff0c\u56e0\u4e3a\u5728\u90a3\u4e2a\u65f6\u523b\u91cd\u8981\u7684\u662f\u4ece\u590d\u6742\u6027\u4e2d\u9000\u4e00\u6b65\uff0c\u5bfb\u6c42\u76f4\u622a\u4e86\u5f53\u7684\u7b54\u6848\u7684\u80fd\u529b\u3002\n\u6587\u5316\u94f8\u9020\u5382\u6218\u7565\u65b9\u6cd5\u7684\u5173\u952e\u662f\u5bf9\u6211\u4eec\u77e5\u9053\u7684\u4e1c\u897f\u5145\u6ee1\u4fe1\u5fc3\uff0c\u5bf9\u6211\u4eec\u4e0d\u77e5\u9053\u7684\u4e1c\u897f\u4fdd\u6301\u900f\u660e\u3002\u542c\u5ba2\u6237\u8bb2\u8ff0\u4ed6\u4eec\u7684\u6545\u4e8b\uff0c\u5e76\u5efa\u7acb\u4e00\u4e2a\u5408\u4f5c\u7a7a\u95f4\uff0c\u5c06\u5f15\u5bfc\u4f60\u671d\u7740\u4ee4\u4eba\u5174\u594b\u7684\u65b9\u5411\u524d\u8fdb\uff0c\u8fd9\u662f\u4f60\u4ece\u672a\u60f3\u8c61\u8fc7\u7684\u3002\n\u9700\u8981\u5e2e\u52a9\u5c06\u60a8\u7684\u516c\u53f8\u6216\u7ec4\u7ec7\u7684\u6570\u5b57\u6218\u7565\u4ed8\u8bf8\u5b9e\u8df5\u5417\uff1f\u8054\u7cfb\u6587\u5316\u94f8\u9020\u5382\u5f00\u59cb\u3002", "note_en": "In the digital agency world, strategy is a powerful concept that consumes so many of our conversations around process, design, and technology choices.\n  It carries a lot of weight when you get it right, and even more when you get it wrong. I\u2019ve found that a light-handed approach to leading digital strategy sessions can alleviate this pressure. With an open mindset, our team can develop better ideas and solutions for our clients.\n I was recently preparing for a work trip to tackle the strategy on a client\u2019s project that was still not 100% clear to me. We\u2019d had initial discussions with the team, but I still wasn\u2019t sure exactly what we were going to build. This was nerve-racking for a few reasons:\n What if you can\u2019t navigate a clear answer before your departing flight home?\n My approach to resolvingthis ambiguity was to intentionally not write an agenda for the meeting. I knowwhat you\u2019re thinking: why would you prepare to fail, which is concern numberthree on your list, and then write about it? Stick with me. Ambiguousconversations are valuable because sometimes the best agenda is an \u201cagenda tolisten.\u201d Our role in this room is simply to absorb information by asking questionsabout our client\u2019s business strategy, needs and goals. It can feel awkward andthere are silences, but it\u2019s my belief that the quietness is powerful, becauseit\u2019s where the mental wheels turn and breakthrough ideas are born.\n A few hours into our client\u2019s strategy session, it was clear that we\u2019d hit a stale point. Everyone\u2019s energy seemed to be fleeting and the whiteboard was scribbled with notes. The tired looks on our faces expressed the shared concern of how we were supposed to transform this soup of information into a viable digital presence. This \u2026 now this is where it\u2019s time to turn an agenda of listening into an agenda of action.\n Our team needed a break to recharge, the creative went on a walk, our client went back to work, and I sat in an empty conference room staring at the brilliance that laid within my pages of notes and in the thousands of thoughts floating above my head. There were quotes, diagrams, paragraphs of content, and that whole whiteboard to consider. Perplexed by the sheer amount of material in front of me, I immersed myself before starting over fresh. The task was complex, and I wanted to ensure we displayed the information in a digestible format that also captured what the project is all about.\n I took a picture of our whiteboard and erased it all, wiping it clean. I drew four vertical lines to create five sections: who, what, why, how and who. Those five things that we were taught when we were learning how to create sentences way back in English class. But these elementary parameters gave me the mental space I needed to evolve my thinking, and the strategy began to flow.\n It took only an hour tocategorize all the thoughts that had accumulated throughout the morning. When theteam came back and we went through each section and pulled out the highlights,content and statement, we became united around the same vision. The strategycame alive, sparked by simplicity. This isn\u2019t to tell you all that I\u2019m astrategic wizard because what mattered in that moment was the ability to stepback from complexity and seek straightforward answers.\n The key to Culture Foundry\u2019s strategy approach is being confident in what we know and transparent about what we don\u2019t. Listening to a client tell their story and establishing a collaborative space will guide you in exciting directions that you never imagined.\n Need help bringing yourcompany or organization\u2019s digital strategy to life?  Contact Culture Foundry toget started.", "posttime": "2020-10-15 06:29:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5236\u5b9a,strategy,\u6218\u7565", "title": "\u4ece\u7b80\u5355\u6027\u5f00\u59cb\u5236\u5b9a\u6218\u7565", "title_en": "Strategy from Simplicity", "transed": 1, "url": "https://www.culturefoundry.com/cultivate/purpose/strategy-from-simplicity/", "via": "", "real_tags": ["\u5236\u5b9a", "strategy", "\u6218\u7565"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028915, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c1d\u8bd5\u5168\u6570\u5b57\u8bbf\u95ee\uff0c\u4e86\u89e3\u4e3a\u4ec0\u4e48\u6709100\u591a\u4e07\u8bfb\u8005\u8ba2\u9605\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\n\u9009\u62e9\u8d2d\u4e70100\u5143\u7684\u8bd5\u7528\u8ba2\u9605\uff0c\u4e3a\u671f4\u5468\uff0c\u8bd5\u7528\u7ed3\u675f\u540e\u6bcf\u6708\u5c06\u6536\u53d67750\u5143\u7684\u8d39\u7528\u3002\n4\u5468\u5185\u53ef\u65e0\u9650\u5236\u4eab\u53d7\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u503c\u5f97\u4fe1\u8d56\u3001\u5c61\u83b7\u6b8a\u8363\u7684\u5546\u4e1a\u65b0\u95fb\u7684\u65e0\u9650\u91cf\u9ad8\u7ea7\u6570\u5b57\u8bbf\u95ee\u3002\n\u793c\u54c1-\u6bcf\u6708\u4e0e\u5bb6\u4eba\u3001\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u591a\u8fbe10\u7bc7\u6587\u7ae0", "note_en": "Try full digital access and see why over 1 million readers subscribe to the FT\n  Select  Purchase a Trial subscription for \u00a5100 for 4 weeks   You will be billed \u00a57,750 per month after the trial ends\n  For 4 weeks receive unlimited Premium digital access to the FT&#39;s trusted, award-winning business news\n  Gift Article \u2013 share up to 10 articles a month with family, friends and colleagues", "posttime": "2020-10-15 06:13:29", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8bfa\u8d1d\u5c14,\u7ecf\u6d4e\u5b66,\u62cd\u5356,bid,\u8bd5\u7528", "title": "\u4e2d\u6807\uff1a\u62cd\u5356\u7406\u8bba\u5982\u4f55\u593a\u5f97\u8bfa\u8d1d\u5c14\u7ecf\u6d4e\u5b66\u5956", "title_en": "Winning Bid: How Auction Theory Took the Nobel Memorial Prize in Economics", "transed": 1, "url": "https://www.ft.com/content/878bcc02-1e4d-4b88-a137-0ad1ddcc92e5", "via": "", "real_tags": ["\u8bfa\u8d1d\u5c14", "\u7ecf\u6d4e\u5b66", "\u62cd\u5356", "bid", "\u8bd5\u7528"]}, {"category": "", "categoryclass": "", "imagename": "a07a58c126890defc9bff2ee8318736f.jpeg", "infoid": 1028914, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u957f\u671f\u4ee5\u6765\uff0c\u8c37\u6b4c\u4e00\u76f4\u662fExpedia\u548cTripAdvisor\u7b49\u65c5\u6e38\u7f51\u7ad9\u65b0\u4e1a\u52a1\u7684\u6700\u5927\u63a8\u52a8\u529b\u4e4b\u4e00\u3002\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u8bf4\uff0cAlphabet\u90e8\u95e8\u4e5f\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u7ade\u4e89\u5a01\u80c1\u3002\n\u603b\u90e8\u4f4d\u4e8e\u67cf\u6797\u7684HomeToGo GmbH\u5c31\u662f\u8bb8\u591a\u65c5\u6e38\u4f01\u4e1a\u9762\u4e34\u56f0\u5883\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd9\u5bb6\u5ea6\u5047\u79df\u8d41\u7f51\u7ad9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u8c37\u6b4c(Google)\u5c06\u4eba\u4eec\u5f15\u5bfc\u81f3\u5176\u670d\u52a1\uff0c\u4f46\u5b83\u8bf4\uff0c\u4e1a\u52a1\u53d7\u5230\u4e86\u8c37\u6b4c\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u5bb6\u641c\u7d22\u516c\u53f8\u5728\u5ea6\u5047\u79df\u8d41\u7684\u8bb8\u591a\u641c\u7d22\u7ed3\u679c\u9875\u9762\u4e0a\u653e\u7f6e\u4e86\u4e00\u76d2\u6765\u81ea\u7b2c\u4e09\u65b9\u65c5\u6e38\u7f51\u7ad9\u7684\u5217\u8868\u3002\n\u6839\u636eHomeToGo\u5411\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d(The Wall Street Journal)\u63d0\u4f9b\u7684\u8ba1\u7b97\uff0c\u5728\u4eca\u5e74\u590f\u5929\u8fdb\u884c\u7684\u8c37\u6b4c\u641c\u7d22\u4e2d\uff0c\u5f53HomeToGo\u662f\u6700\u5e38\u89c1\u7684\u641c\u7d22\u7ed3\u679c\u65f6\uff0c\u4e0e\u6ca1\u6709\u663e\u793a\u65f6\u76f8\u6bd4\uff0c\u5f53HomeToGo\u662f\u6700\u5e38\u89c1\u7684\u641c\u7d22\u7ed3\u679c\u65f6\uff0c\u7528\u6237\u70b9\u51fb\u7387\u4e0b\u964d\u4e86\u56db\u5206\u4e4b\u4e09\u3002\n\u201c\u7a81\u7136\u4e4b\u95f4\uff0c\u8c37\u6b4c\u628a\u4e00\u4e2a\u4e0d\u592a\u597d\u7684\u4ea7\u54c1\u653e\u5728\u4e86\u6700\u91cd\u8981\u7684\u4f4d\u7f6e\uff0c\u4f60\u4f1a\u60f3\uff0c\u2018\u8fd9\u662f\u516c\u5e73\u7ade\u4e89\u5417\uff1f\u2019\u201dHomeToGo\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5e15\u7279\u91cc\u514b\u00b7\u5b89\u5fb7\u96f7(Patrick Andrae)\u8bf4\u3002\n\u50cfHomeToGo\u8fd9\u6837\u7684\u6279\u8bc4\u8005\u8bf4\uff0c\u8c37\u6b4c\u7684\u65c5\u884c\u7bb1\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u4e13\u4e1a\u641c\u7d22\u4ea7\u54c1\u8d8a\u6765\u8d8a\u591a\u5730\u5c06\u7528\u6237\u7559\u5728\u8c37\u6b4c\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u9f13\u52b1\u4ed6\u4eec\u4f7f\u7528\u8c37\u6b4c\u4ea7\u54c1\uff0c\u800c\u4e0d\u662f\u70b9\u51fb\u5176\u4ed6\u7f51\u7ad9\u8fdb\u884c\u4ea4\u6613\u3002\n\u8c37\u6b4c\u8868\u793a\uff0c\u5b83\u5411\u5176\u4ed6\u7f51\u7ad9\u53d1\u9001\u7684\u6d41\u91cf\u8d8a\u6765\u8d8a\u5927\uff0c\u5728\u65c5\u6e38\u4fe1\u606f\u65b9\u9762\uff0c\u5176\u641c\u7d22\u5f15\u64ce\u9762\u4e34\u7740\u6765\u81ea\u65c5\u6e38\u7f51\u7ad9\u7684\u6fc0\u70c8\u7ade\u4e89\u3002\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u8bf4\uff0c\u8c37\u6b4c\u5f00\u53d1\u4e86\u663e\u793a\u641c\u7d22\u7ed3\u679c\u7684\u65b0\u65b9\u5f0f\uff0c\u4ee5\u6ee1\u8db3\u7528\u6237\u5feb\u901f\u83b7\u53d6\u6709\u7528\u4fe1\u606f\u7684\u613f\u671b\u3002\u5979\u8bf4\uff1a\u201c\u5220\u9664\u8fd9\u4e9b\u641c\u7d22\u7ed3\u679c\u4f1a\u7ed9\u6d88\u8d39\u8005\u5e26\u6765\u66f4\u7cdf\u7cd5\u7684\u4f53\u9a8c\uff0c\u7ed9\u65c5\u6e38\u516c\u53f8\u5e26\u6765\u7684\u6d41\u91cf\u4e5f\u4f1a\u51cf\u5c11\u3002\u201d\n\u77e5\u60c5\u4eba\u58eb\u8868\u793a\uff0c\u968f\u7740\u5927\u897f\u6d0b\u4e24\u5cb8\u7684\u53cd\u5784\u65ad\u76d1\u7ba1\u673a\u6784\u8c03\u67e5\u6709\u5173\u8c37\u6b4c\u548c\u5176\u4ed6\u7845\u8c37\u5de8\u5934\u5229\u7528\u5176\u5f71\u54cd\u529b\u538b\u5236\u7ade\u4e89\u5bf9\u624b\u7684\u6307\u63a7\uff0c\u4e00\u4e2a\u7126\u70b9\u9886\u57df\u662f\u8fd9\u4e9b\u516c\u53f8\u6d89\u5acc\u6ee5\u7528\u4e92\u8054\u7f51\u770b\u95e8\u4eba\u7684\u89d2\u8272\uff0c\u4ee5\u60e9\u7f5a\u6f5c\u5728\u7ade\u4e89\u5bf9\u624b\u6216\u8feb\u4f7f\u5176\u505a\u51fa\u8ba9\u6b65\u3002\n\u636e\u534e\u5c14\u8857\u65e5\u62a5\u62a5\u9053\uff0c\u7f8e\u56fd\u53f8\u6cd5\u90e8\u6b63\u51c6\u5907\u5bf9\u8c37\u6b4c\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc\uff0c\u53ef\u80fd\u5728\u672a\u6765\u51e0\u5929\u5185\u3002\u534e\u5c14\u8857\u65e5\u62a5\u63f4\u5f15\u77e5\u60c5\u4eba\u58eb\u7684\u8bdd\u8bf4\uff0c\u8c37\u6b4c\u7684\u641c\u7d22\u505a\u6cd5\u53ef\u80fd\u662f\u8fd9\u7c7b\u8bc9\u8bbc\u7684\u5173\u952e\u7126\u70b9\u3002\n\u6b27\u76df\u6700\u9ad8\u53cd\u5784\u65ad\u673a\u6784\u5411\u8c37\u6b4c\u5f00\u51fa\u4e8690\u591a\u4ebf\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u90e8\u5206\u539f\u56e0\u662f\u8d2d\u7269\u7f51\u7ad9\u6307\u63a7\u8c37\u6b4c\u7528\u81ea\u5df1\u7684\u4ea7\u54c1\u5e7f\u544a\u76d2\u538b\u4f4e\u4e86\u641c\u7d22\u7ed3\u679c\u3002\u8c37\u6b4c\u5df2\u7ecf\u5bf9\u8fd9\u4e9b\u51b3\u5b9a\u63d0\u51fa\u4e0a\u8bc9\u3002\u6b27\u76df\u5b98\u5458\u66fe\u8868\u793a\uff0c\u8c03\u67e5\u4eba\u5458\u76ee\u524d\u6b63\u5728\u8c03\u67e5\u8be5\u516c\u53f8\u4f7f\u7528\u6570\u636e\u7684\u60c5\u51b5\uff0c\u5e76\u5df2\u6536\u5230\u5305\u62ecHomeToGo\u5728\u5185\u7684\u516c\u53f8\u7684\u6295\u8bc9\u3002\n\u8c37\u6b4c\u8868\u793a\uff0c\u5176\u4ea7\u54c1\uff0c\u5305\u62ec\u641c\u7d22\u6846\uff0c\u5bf9\u6d88\u8d39\u8005\u548c\u5176\u4ed6\u4f01\u4e1a\u90fd\u6709\u5229\u3002\u5728\u4e00\u7bc7\u5173\u4e8e\u7ade\u4e89\u95ee\u9898\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u7684\u201c\u4ea7\u54c1\u589e\u52a0\u4e86\u9009\u62e9\uff0c\u6269\u5927\u4e86\u7ade\u4e89\u201d\uff0c\u5e76\u201c\u4e3a\u5404\u5730\u7684\u5c0f\u4f01\u4e1a\u521b\u9020\u4e86\u516c\u5e73\u7684\u7ade\u4e89\u73af\u5883\u201d\u3002\n\u957f\u671f\u4ee5\u6765\uff0c\u65c5\u884c\u793e\u548c\u805a\u5408\u5668\u4e00\u76f4\u4f9d\u8d56\u8c37\u6b4c(Google)\u5efa\u7acb\u4e1a\u52a1\uff0c\u6bcf\u5e74\u603b\u5171\u82b1\u8d39\u6570\u5341\u4ebf\u7f8e\u5143\u5728\u8c37\u6b4c\u4e0a\u5ba3\u4f20\u4ed6\u4eec\u7684\u670d\u52a1\u3002\u4f46\u51e0\u4e4e\u540c\u6837\u957f\u7684\u65f6\u95f4\u91cc\uff0c\u65c5\u6e38\u516c\u53f8\u4e00\u76f4\u5728\u62b1\u6028-\u6709\u65f6\u662f\u5411\u7ade\u4e89\u76d1\u7ba1\u673a\u6784\u62b1\u6028-\u8c37\u6b4c\u4e00\u76f4\u5728\u4e0d\u516c\u5e73\u5730\u5f3a\u884c\u8fdb\u5165\u4ed6\u4eec\u7684\u5730\u76d8\u3002\n\u8c37\u6b4c\u5728\u6536\u8d2d\u4e86\u4e00\u5bb6\u65c5\u6e38\u8f6f\u4ef6\u516c\u53f8\u540e\uff0c\u4e8e2011\u5e74\u63a8\u51fa\u4e86\u4e00\u6b3e\u822a\u73ed\u641c\u7d22\u5de5\u5177\u3002\u540e\u6765\uff0c\u5b83\u5f00\u59cb\u589e\u52a0\u9152\u5e97\u641c\u7d22\u548c\u9884\u8ba2\u5de5\u5177\u30022018\u5e74\uff0c\u8be5\u516c\u53f8\u5f00\u59cb\u5728\u81ea\u5df1\u7684\u9884\u8ba2\u5de5\u5177\u4e2d\u5305\u62ec\u5ea6\u5047\u79df\u8d41\u5217\u8868\uff0c\u5e76\u4e8e\u53bb\u5e74\u5c06\u5b83\u4eec\u62c6\u5206\u5230\u5355\u72ec\u7684\u641c\u7d22\u7ed3\u679c\u6846\u4e2d\u3002\u8c37\u6b4c\u7684\u9152\u5e97\u5217\u8868\u662f\u4ed8\u8d39\u5e7f\u544a\uff1b\u5ea6\u5047\u79df\u8d41\u5217\u8868\u76ee\u524d\u662f\u514d\u8d39\u7684\u3002\n\u53bb\u5e74\u79cb\u5929\uff0cTripAdvisor Expedia Group Inc.\u3002Booking Holdings\u6307\u8d23\u8c37\u6b4c\u65b0\u7684\u9152\u5e97\u641c\u7d22\u529f\u80fd\u62bd\u8d70\u4e86\u8fd9\u4e9b\u516c\u53f8\u901a\u8fc7\u8c37\u6b4c\u6709\u673a\u641c\u7d22\u7ed3\u679c\u4e2d\u7684\u514d\u8d39\u94fe\u63a5\u83b7\u5f97\u7684\u6d41\u91cf\u3002\u4e24\u5bb6\u516c\u53f8\u62d2\u7edd\u7f6e\u8bc4\u3002\nTripAdvisor\u9996\u5e2d\u6267\u884c\u5b98\u65af\u8482\u82ac\u00b7\u8003\u5f17(Stephen Kaufer)\u5f53\u65f6\u5728\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\uff1a\u201c\u8c37\u6b4c\u53d8\u5f97\u66f4\u52a0\u5484\u5484\u903c\u4eba\u3002\u201d\n\u6210\u7acb\u4e8e2014\u5e74\u7684HomeToGo\u901a\u8fc7\u805a\u5408\u5176\u4ed6\u5ea6\u5047\u79df\u8d41\u7f51\u7ad9\u7684\u623f\u6e90\u4ee5\u53ca\u76f4\u63a5\u6765\u81ea\u4e00\u4e9b\u7269\u4e1a\u7ecf\u7406\u7684\u623f\u6e90\u5efa\u7acb\u4e86\u81ea\u5df1\u7684\u4e1a\u52a1\u3002\u8c37\u6b4c\u641c\u7d22\u662f\u5efa\u7acb\u8be5\u516c\u53f8\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u90e8\u5206\u662f\u901a\u8fc7\u5e7f\u544a\uff0c\u4f46\u4e5f\u6709\u7f51\u7ad9\u6539\u8fdb\uff0c\u4f7f\u5176\u80fd\u591f\u6500\u5347\u8c37\u6b4c\u7684\u641c\u7d22\u6392\u540d\u3002\u5b89\u5fb7\u70c8\u8bf4\uff0c\u56e0\u4e3a\u8bb8\u591a\u65c5\u6e38\u641c\u7d22\u90fd\u662f\u4ece\u8c37\u6b4c\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u65c5\u6e38\u7f51\u7ad9\u201c\u5bf9\u8c37\u6b4c\u6709\u4e00\u5b9a\u7684\u4f9d\u8d56\u201d\u3002\n\u5b89\u5fb7\u96f7\u8bf4\uff0c\u5f53\u8c37\u6b4c\u63a8\u51fa\u641c\u7d22\u5ea6\u5047\u79df\u8d41\u5217\u8868\u7684\u5de5\u5177\u65f6\uff0c\u4ed6\u770b\u5230HomeToGo\u7684\u4e1a\u52a1\u9762\u4e34\u5371\u9669\u3002\u8be5\u516c\u53f8\u7684\u6d41\u91cf\u4ecd\u5728\u589e\u52a0\uff0c\u4f46\u9ad8\u7ba1\u4eec\u8ba4\u4e3a\uff0c\u8c37\u6b4c\u7684\u5de5\u5177\u8ba9\u5b83\u5931\u53bb\u4e86\u6f5c\u5728\u7684\u589e\u957f\u30022019\u5e743\u6708\uff0cHomeToGo\u5411\u6b27\u76df\u6700\u9ad8\u53cd\u5784\u65ad\u76d1\u7ba1\u673a\u6784\u6b27\u76df\u59d4\u5458\u4f1a(European Commission)\u63d0\u51fa\u7533\u8bc9\uff0c\u6307\u63a7\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u6ee5\u7528\u5176\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u603b\u90e8\u4f4d\u4e8e\u5df4\u585e\u7f57\u90a3\u7684\u79df\u623f\u8054\u5408\u516c\u53f8(Rentures United)\u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba\u8a79\u59c6\u65af\u00b7\u5e03\u4f26\u65af(James Burrow)\u8868\u793a\uff0c\u8c37\u6b4c\u201c\u53ef\u80fd\u4f1a\u6253\u7834\u201d\u4e00\u4e9b\u65c5\u6e38\u9884\u8ba2\u516c\u53f8\u7684\u63a7\u5236\u3002\u79df\u623f\u8054\u5408\u516c\u53f8\u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u5df4\u585e\u7f57\u90a3\u7684\u516c\u53f8\uff0c\u5f00\u53d1\u5728\u65c5\u6e38\u7f51\u7ad9\u4e0a\u5217\u51fa\u77ed\u671f\u79df\u8d41\u623f\u4ea7\u7684\u8f6f\u4ef6\u3002\u201c\u66f4\u591a\u7684\u7ade\u4e89\u548c\u66f4\u591a\u7684\u9009\u62e9\u591a\u6837\u6027\u662f\u79ef\u6781\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4f60\u8ba4\u4e3a\u6709\u6ca1\u6709\u7406\u7531\u5bf9\u8c37\u6b4c\u8fdb\u884c\u53cd\u5784\u65ad\u8c03\u67e5\uff1f\u4e3a\u4ec0\u4e48\u6216\u8005\u4e3a\u4ec0\u4e48\u4e0d\uff1f\u52a0\u5165\u4e0b\u9762\u7684\u5bf9\u8bdd\u3002\n\u4e00\u4e9b\u5ea6\u5047\u5c4b\u63d0\u4f9b\u5546\u8bf4\uff0c\u8c37\u6b4c\u663e\u793a\u641c\u7d22\u7ed3\u679c\u7684\u65b0\u65b9\u5f0f\u4f24\u5bb3\u4e86\u4ed6\u4eec\u3002\u514b\u91cc\u65af\u8482\u00b7\u5361\u666e(Christi Kapp)\u548c\u4e08\u592b\u5728\u4f5b\u7f57\u91cc\u8fbe\u5dde\u57fa\u897f\u7c73\u5e02\u7ecf\u8425\u7740Kapp\u548cKappy B&amp\uff1bB\u3002\u5979\u8bf4\uff0c\u81ea\u4ece\u8c37\u6b4c\u7684\u9152\u5e97\u641c\u7d22\u5de5\u5177\u5f00\u59cb\u4e0e\u5e38\u89c4\u641c\u7d22\u7ed3\u679c\u4e00\u8d77\u51fa\u73b0\u4ee5\u6765\uff0c\u5979\u7f51\u7ad9\u7684\u76f4\u63a5\u6d41\u91cf\u548c\u76f4\u63a5\u9884\u8ba2\u91cf\u5927\u5e45\u4e0b\u964d\u3002\u5979\u8bf4\uff0c\u8fc7\u53bb\u56db\u5468\uff0c\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u5979\u7684B&amp\uff1bB\uff1b\u786e\u5207\u540d\u5b57\u768429\u6b21\u4e2d\uff0c\u53ea\u67094\u6b21\u5728\u5979\u7684\u7f51\u7ad9\u4e0a\u88ab\u70b9\u51fb\u3002\n\u5361\u666e\u5c06\u8fd9\u4e00\u4e0b\u964d\u5f52\u56e0\u4e8e\u8c37\u6b4c\u9152\u5e97\u641c\u7d22\u5de5\u5177\u7684\u51fa\u73b0\uff0c\u8be5\u5de5\u5177\u8ba9\u7528\u6237\u901a\u8fc7\u5728\u7ebf\u65c5\u884c\u793e\u8fdb\u884c\u9884\u8ba2\u3002\u5361\u666e\u901a\u8fc7\u65c5\u884c\u793e\u4e3a\u6bcf\u6b21\u9884\u8ba2\u652f\u4ed8\u4f63\u91d1\uff0c\u5982\u679c\u4eba\u4eec\u76f4\u63a5\u70b9\u51fb\u5979\u7684\u7f51\u7ad9\uff0c\u5979\u5c31\u4e0d\u5fc5\u652f\u4ed8\u4f63\u91d1\u3002\n\u5361\u666e\u8bf4\uff0c\u201c\u8fd9\u5c31\u50cf\u662f\u82b1\u94b1\u4e70\u4e86\u5728\u8def\u4e0a\u884c\u8d70\u7684\u6743\u5229\u3002\u201d\u201c\u7535\u8bdd\u7c3f\u6ca1\u6709\u4ece\u4f60\u7684\u4e1a\u52a1\u4e2d\u5206\u4e00\u676f\u7fb9\u3002\u201d\n\u5e94\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u7684\u8981\u6c42\uff0cHomeToGo\u5229\u7528\u641c\u7d22\u516c\u53f8\u5411\u7f51\u7ad9\u6240\u6709\u8005\u63d0\u4f9b\u7684\u6570\u636e\u4ee5\u53ca\u4e00\u5bb6\u641c\u7d22\u5206\u6790\u516c\u53f8\u7684\u5916\u90e8\u76d1\u6d4b\uff0c\u91cf\u5316\u4e86\u8c37\u6b4c\u5217\u8868\u6846\u7684\u5f71\u54cd\u3002\n\u57286\u6708\u81f39\u6708\u671f\u95f4\u7684\u641c\u7d22\u67e5\u8be2\u4e2d\uff0cHomeToGo\u662f\u684c\u9762\u4e0a\u6392\u540d\u7b2c\u4e00\u7684\u5e38\u89c4\u641c\u7d22\u7ed3\u679c\uff0c\u7528\u6237\u70b9\u51fb\u8fdb\u5165\u5ea6\u5047\u79df\u8d41\u7f51\u7ad9\u7684\u65f6\u95f4\u4e3a7.82%\uff1b\u5f53\u8c37\u6b4c\u7684\u5ea6\u5047\u79df\u8d41\u6846\u663e\u793a\u5728\u641c\u7d22\u7ed3\u679c\u9876\u90e8\u65f6\uff0c\u7528\u6237\u70b9\u51fb\u8fdb\u5165\u7684\u65f6\u95f4\u4e3a2.98%\u3002\u603b\u4f53\u800c\u8a00\uff0cHomeToGo\u4f30\u8ba1\uff0c\u4e0e\u8c37\u6b4c\u6ca1\u6709\u63d2\u5165\u5ea6\u5047\u79df\u8d41\u7bb1\u7684\u60c5\u51b5\u76f8\u6bd4\uff0c\u5176\u5e38\u89c4\u8c37\u6b4c\u641c\u7d22\u7684\u6d41\u91cf\u81f3\u5c11\u4e0b\u964d\u4e8620%\u81f330%\u3002\n\u5b89\u5fb7\u70c8\u8bf4\uff0c\u4ed6\u5bf9\u5bfb\u6c42\u52a0\u5165\u8c37\u6b4c\u7684\u5ea6\u5047\u79df\u8d41\u641c\u7d22\u5de5\u5177\u611f\u5230\u77db\u76fe\uff0c\u56e0\u4e3a\u4ed6\u5bf9\u7528\u6237\u7684\u9009\u62e9\u548c\u9884\u8ba2\u4f53\u9a8c\u7684\u63a7\u5236\u6743\u4f1a\u8f83\u5c0f\u3002\u4f46\u4ed6\u8868\u793a\uff0c\u7531\u4e8e\u6709\u5176\u4ed6\u4eba\u53c2\u4e0e\uff0c\u8be5\u516c\u53f8\u522b\u65e0\u9009\u62e9\u3002HomeToGo\u8868\u793a\uff0c\u81ea2019\u5e74\u4ee5\u6765\uff0c\u5b83\u4e00\u518d\u8981\u6c42\u6574\u5408\uff0c\u4f46\u8be5\u7f51\u7ad9\u5c1a\u672a\u6dfb\u52a0\u3002\n\u8c37\u6b4c\u8868\u793a\uff0c\u5b83\u6b63\u5728\u52aa\u529b\u5c06HomeToGo\u7b49\u5217\u8868\u805a\u5408\u5668\u7eb3\u5165\u5176\u65c5\u884c\u5de5\u5177\u4e2d\uff0c\u5e76\u9884\u8ba1\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5b89\u5fb7\u70c8\u8bf4\uff0c\u201c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4f60\u5fc5\u987b\u9075\u5b88\u5927\u4e2a\u5b50\u7684\u89c4\u5219\u3002\u201d\u201c\u5426\u5219\u4f60\u53ef\u80fd\u4f1a\u8f93\u6389\u6bd4\u8d5b\u3002\u201d", "note_en": "Google has long been one of the biggest drivers of new business for travel websites like  Expedia and Tripadvisor. Some of them say the  Alphabet    GOOG  -0.23%  unit is also a big competitive threat.\n  Berlin-based HomeToGo GmbH is an example of the bind facing many travel businesses. The vacation-rental website depends in part on Google to direct people to its service, but it says business has been affected by the search company\u2019s placing a box of listings from third-party travel sites atop many pages of search results for vacation rentals.\n  In Google searches conducted this past summer, the rate at which people clicked when HomeToGo was the top regular result fell as much as three-quarters when Google\u2019s vacation-rental listings box was present above, compared with when it wasn\u2019t, according to calculations HomeToGo provided to The Wall Street Journal.\n  \u201cSuddenly Google puts a less-good product more prominently above everything, and you\u2019re thinking, \u2018Is this fair competition?\u2019\u201d said Patrick Andrae, HomeToGo\u2019s co-founder and chief executive.\n    Critics like HomeToGo say that Google\u2019s travel boxes and other kinds of specialized search products increasingly keep users within the Google ecosystem, encouraging them to use Google products rather than clicking to other sites to transact business.\n    Google says it sends a growing volume of traffic to other websites and that, when it comes to travel information, its search engine faces tough competition from travel sites. A spokeswoman says Google developed new ways to display search results to satisfy users\u2019 desire for quick access to helpful information. \u201cRemoving these results would create a worse experience for consumers and send less traffic to travel companies,\u201d she said.\n  As antitrust regulators on both sides of the Atlantic investigate allegations that Google and other Silicon Valley giants have leveraged their heft to squash competitors, one area of focus is on the companies\u2019 alleged abuse of their role as internet gatekeepers to punish or extract concessions from potential rivals, according to people familiar with the matter.\n  The U.S. Justice Department is moving toward bringing an antitrust lawsuit against Google, potentially in the coming days, the Journal has reported. Google\u2019s search practices are likely to be a key focus of such a lawsuit, the  Journal report said, citing people familiar with the matter.\n  The European Union\u2019s top antitrust authority has issued Google  more than $9 billion in fines, in part following allegations by shopping websites that say Google pushed down their search results with its own box of product ads. Google has appealed those decisions. EU officials have said investigators are now looking into the company\u2019s use of data and have received complaints from companies including HomeToGo.\n  Google says its products, including the search boxes, benefit both consumers and other businesses. In a blog post on competition issues, the company says its \u201cproducts increase choice and expand competition\u201d and \u201clevel the playing field for small businesses everywhere.\u201d\n  Travel agents and aggregators have long depended on Google to build their businesses, and collectively spend billions of dollars a year advertising their services on the search engine. But for almost as long, travel companies have been complaining\u2014at times to competition regulators\u2014that Google has been muscling unfairly onto their turf.\n  Google launched a flight-search tool in 2011, after buying a travel-software company. Later, it began adding hotel-search and booking tools. In 2018, the company started including vacation rental listings in its own booking tools, and split them into separate search-results boxes last year. Google\u2019s hotel listings are paid ads; vacation-rental listings are currently free.\n    Last fall,  Tripadvisor  Expedia Group Inc. and  Booking Holdings   blamed Google\u2019s new hotel-search functions for siphoning away traffic the companies receive through free links in Google\u2019s organic search results. The companies declined to comment.\n  \u201cGoogle has gotten more aggressive,\u201d Tripadvisor Chief Executive Stephen Kaufer said during an earnings call at the time.\n    Founded in 2014, HomeToGo has built a business by aggregating listings from other vacation-rental sites, as well as directly from some property managers. Google search was an important component of building the company, in part with ads, but also with website improvements that enabled it to climb Google\u2019s search rankings. Because many travel searches start with Google, Mr. Andrae said travel sites have \u201ca certain reliance on Google.\u201d\n  Mr. Andrae said he saw a danger to HomeToGo\u2019s business when Google launched its tool to search vacation-rental listings. The company was still seeing increased traffic, but executives believed the Google tool cost it potential growth. In March 2019, HomeToGo filed a complaint to the European Commission, the EU\u2019s top antitrust regulator, alleging that the tech company was abusing its dominance.\n  James Burrows, chief executive and co-founder of Rentals United, a Barcelona-based company that makes software for listing short-term rental properties on travel sites, said that Google will \u201cpotentially break up the hold\u201d of some travel-booking companies. \u201cMore competition and more diversity in selection are positive things,\u201d he said.\n  Do you think there are grounds for an antitrust investigation into Google? Why or why not? Join the conversation below.\n  Some vacation-home providers say they have been hurt by Google\u2019s new way of displaying search results. Christi Kapp, who runs the Kapp and Kappy B&amp;B in Kissimmee, Fla., with her husband, said that direct traffic to her website and direct bookings have fallen significantly since Google\u2019s hotel-finder tool started appearing alongside regular search results. In the past four weeks, of the 29 Google searches for her B&amp;B\u2019s exact name, only four resulted in a click on her website, she said.\n  Ms. Kapp attributed the decline to the appearance of Google\u2019s hotel-finder tool, which sends users to book via online travel agents. Ms. Kapp pays a commission on each booking through the travel agents, something she doesn\u2019t have to do if people click directly on her website.\n  \u201cIt\u2019s like paying for the right to walk on the road,\u201d Ms. Kapp said. \u201cThe phone book didn\u2019t take a cut of your business.\u201d\n  At the Journal\u2019s request, HomeToGo quantified the effect of Google\u2019s listings box, using data the search company supplies to website owners as well as outside monitoring from a search-analytics company.\n  For search queries between June and September where HomeToGo was the top regular result on desktops, users clicked through to the vacation-rental site 7.82% of the time; when Google\u2019s vacation-rentals box was displayed atop search results, users clicked through 2.98% of the time. Overall, HomeToGo estimates that its traffic from regular Google searches is at least 20% to 30% lower than it would be if Google weren\u2019t inserting its vacation-rental boxes.\n  Mr. Andrae said he was ambivalent about seeking inclusion in Google\u2019s vacation-rental search tool because he would have less control over his users\u2019 options and booking experience. But with others participating, he said the company has had no choice. Since 2019, HomeToGo says, it has repeatedly asked to be integrated, but the site hasn\u2019t yet been added.\n  Google says it is working on including listings aggregators like HomeToGo in its travel tools, and expects to be able to do so in coming months.\n  \u201cYou are to a certain extent forced to play by the rules of the big guys,\u201d Mr. Andrae said. \u201cOtherwise you might lose out.\u201d", "posttime": "2020-10-15 06:12:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,google", "title": "HomeToGo\u8868\u793a\uff0c\u4eca\u5e74\u590f\u5929\uff0c\u5f53\u8c37\u6b4c\u7684\u5ea6\u5047\u79df\u8d41\u6846\u51fa\u73b0\u65f6\uff0c\u8c37\u6b4c\u641c\u7d22\u7528\u6237\u70b9\u51fbHomeToGo\u5217\u8868\u7684\u901f\u5ea6\u4e0b\u964d\u4e8675%", "title_en": "HomeToGo says the rate at which Google search users clicked HomeToGo's listing fell by as much as 75% this summer when Google's vacation rental box was present", "transed": 1, "url": "https://www.wsj.com/articles/google-a-longtime-ally-of-travel-sites-is-now-a-powerful-rival-11602671340?mod=djemalertNEWS", "via": "", "real_tags": ["\u8c37\u6b4c", "google"]}, {"category": "", "categoryclass": "", "imagename": "c3852a65db68fba437fad71a5c1ff321.png", "infoid": 1028913, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u6e90\u5546\u4e1a\u6a21\u5f0f\u4f20\u7edf\u4e0a\u88ab\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u6218\u7565\uff0c\u552f\u4e00\u901a\u5e38\u88ab\u63d0\u53ca\u7684\u6210\u529f\u6545\u4e8b\u662fRedHat\u3002\u968f\u7740\u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1(\u53c8\u540dIaaS\u6216\u4e91)\u63d0\u4f9b\u5546(\u5982AWS)\u901a\u8fc7\u83b7\u53d6\u5f00\u6e90\u8f6f\u4ef6\u521b\u9020\u7684\u4ef7\u503c\u8d5a\u53d6\u6570\u5341\u4ebf\u7f8e\u5143\uff0c\u5ba1\u67e5\u7ea7\u522b\u4e5f\u5728\u63d0\u9ad8\u3002\u8fd9\u6570\u5341\u4ebf\u7f8e\u5143\u4e3b\u8981\u6765\u81eaSaaS\u4f9b\u5e94\u5546(\u4ed6\u4eec\u53cd\u8fc7\u6765\u8d5a\u53d6\u4e86\u6570\u5341\u4ebf\u7f8e\u5143)\uff0c\u8fd9\u5f97\u76ca\u4e8e\u5728\u8fd9\u4e9bIaaS\u63d0\u4f9b\u5546\u4e0a\u6784\u5efa\u5176\u4ea7\u54c1\u6240\u9700\u7684\u524d\u671f\u8d44\u672c\u652f\u51fa\u7684\u51cf\u5c11\u3002\u5e38\u8bc6\u662f\uff0c\u9664\u4e86SaaS\u4e4b\u5916\uff0c\u4ee5\u4efb\u4f55\u65b9\u5f0f\u9500\u552e\u8f6f\u4ef6\u90fd\u662f\u611a\u8822\u7684\u3002\n\u867d\u7136\u8fd9\u79cd\u89c2\u70b9\u5e76\u975e\u6ca1\u6709\u4ef7\u503c\uff0c\u4f46\u73b0\u5b9e\u60c5\u51b5\u662f\uff0c\u6709\u8bb8\u591a\u6210\u529f\u7684\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u516c\u53f8\uff0c\u800c\u4e14\u6210\u529f\u7387\u6b63\u5728\u589e\u957f\u3002\u5f00\u653e\u6e90\u7801\u516c\u53f8\u4f3c\u4e4e\u6b63\u5728\u60f3\u529e\u6cd5\u83b7\u53d6\u4ed6\u4eec\u521b\u9020\u7684\u66f4\u5927\u6bd4\u4f8b\u7684\u4ef7\u503c\u3002\u4f5c\u4e3a\u4e4b\u524d\u4e0e\u4eba\u5171\u540c\u521b\u5efa\u4e86\u4e00\u5bb6SaaS\u516c\u53f8\uff0c\u4ee5\u53ca\u6700\u8fd1\u4e0e\u4eba\u5171\u540c\u521b\u5efa\u4e86\u4e00\u5bb6\u5f00\u6e90\u8f6f\u4ef6\u516c\u53f8\u7684\u4eba\uff0c\u6211\u60f3\u4ece\u4e0a\u5e02\u7684\u89d2\u5ea6\u6765\u63a2\u8ba8SaaS\u4e0e\u5f00\u6e90\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u8bf4\u660e\u5f00\u6e90\u6a21\u5f0f\u662f\u5982\u4f55\u6210\u529f\u7684\uff0c\u5e76\u5e2e\u52a9\u786e\u8ba4\u6211\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u53d7\u8650\u72c2\u3002\n\u6211\u5c06\u4eceSaaS\u7684\u7b80\u8981\u6982\u8ff0\u5f00\u59cb\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u6210\u4e3a\u5982\u6b64\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u6a21\u5f0f\u7684\uff0c\u5e76\u8c08\u5230\u9500\u552e\u5f00\u6e90\u8f6f\u4ef6\u7684\u4e0d\u540c\u5f00\u653e\u6838\u5fc3\u6a21\u5f0f\u53ef\u80fd\u6b63\u5728\u521b\u9020\u4e00\u4e2a\u53ef\u884c\u7684\u66ff\u4ee3\u5e02\u573a\u3002\nSaaS\u662f\u5982\u4f55\u6210\u4e3a\u4e3b\u8981\u7684\u8f6f\u4ef6\u4ea4\u4ed8\u65b9\u5f0f\u7684\uff1f\u4e0e\u5927\u591a\u6570\u5168\u884c\u4e1a\u7684\u8f6c\u53d8\u4e00\u6837\uff0c\u5b83\u7684\u51fa\u73b0\u662f\u56e0\u4e3a\u5bf9\u5f53\u65f6\u7684\u6a21\u5f0f-\u7531\u5185\u90e8IT\u90e8\u95e8\u5728\u5185\u90e8\u8fd0\u884c\u7684\u5546\u4e1a\u73b0\u6210(COTS)\u6216\u5b9a\u5236\u8f6f\u4ef6-\u4ea7\u751f\u4e86\u538b\u5012\u6027\u7684\u5931\u671b\u3002\u8be5\u6a21\u578b\u9700\u8981\u5927\u91cf\u7684\u5185\u90e8\u8d44\u6e90\u6765\u90e8\u7f72\u3001\u66f4\u65b0\u548c\u7ba1\u7406\u5b89\u88c5\u3002\u5b83\u8fd8\u9700\u8981\u4e00\u7b14\u53ef\u89c2\u7684\u524d\u671f\u8d44\u672c\u652f\u51fa\uff0c\u7528\u4e8e\u8f6f\u4ef6\u8bb8\u53ef\u6216\u5f00\u53d1\u6210\u672c\u3002\n\u4e5f\u8bb8\u4ece\u9884\u7f6e\u8f6f\u4ef6\u5230SaaS\u7684\u8f6c\u6298\u70b9\u6700\u80fd\u4ee3\u8868Salesforce\u7684\u201c\u65e0\u8f6f\u4ef6\u201d\u6807\u8bc6\u3002\u5f53\u7136\uff0cSalesforce\u8fc7\u53bb\u662f\uff0c\u73b0\u5728\u4ecd\u7136\u662f\u8f6f\u4ef6\uff0c\u4f46\u9a6c\u514b\u00b7\u8d1d\u5c3c\u5965\u592b\u7684\u5929\u624d\u6d1e\u5bdf\u529b\u662f\uff0c\u4ed6\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u632b\u6298\uff0c\u8ba9\u4e70\u5bb6\u76f8\u4fe1\u8fd9\u79cd\u65b0\u6a21\u5f0f\u662f\u5982\u6b64\u4e0d\u540c\uff0c\u5b83\u751a\u81f3\u4e0d\u5e94\u8be5\u88ab\u89c6\u4e3a\u8f6f\u4ef6\u3002\u636e\u63a8\u6d4b\uff0c\u8d1d\u5c3c\u5965\u592b\u5148\u751f\u4f5c\u4e3a\u7532\u9aa8\u6587\u7684\u9500\u552e\u4eba\u5458\u4eb2\u773c\u76ee\u7779\u4e86\u8fd9\u79cd\u632b\u6298\u611f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4ed6\u5bf9\u6b64\u5982\u6b64\u70ed\u60c5\u7684\u539f\u56e0\u3002\n\u6211\u4eec\u7684\u4e0e\u4f17\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6613\u7528\u6027\u3001\u5171\u62c5\u98ce\u9669\u7684\u5546\u4e1a\u6a21\u5f0f\u548c\u4f4e\u98ce\u9669\u627f\u8bfa--\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u8f6f\u4ef6\u6240\u4e0d\u5177\u5907\u7684\u3002\n\u8f6f\u4ef6\u4f7f\u547d\u7684\u7ed3\u675f\u548c\u6ca1\u6709\u8f6f\u4ef6\u7684\u6807\u5fd7\u6709\u6548\u5730\u4f20\u8fbe\u4e86\u6211\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u6211\u628a\u5fbd\u6807\u8d34\u5728\u6211\u4eec\u6240\u6709\u7684\u901a\u8baf\u6750\u6599\u4e0a\uff0c\u5e76\u5bf9\u5b83\u8fdb\u884c\u4e86\u76d1\u7ba1\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u4eba\u628a\u5b83\u62ff\u8d70\u3002(\u4e0d\u7ba1\u600e\u6837\uff0c\u4ed6\u4eec\u8fd8\u662f\u8fd9\u4e48\u505a\u4e86\u3002)\u3002\u6211\u6bcf\u5929\u90fd\u6234\u7740\u4e00\u4e2a\u6ca1\u6709\u8f6f\u4ef6\u7684\u6309\u94ae\uff0c\u5e76\u8981\u6c42\u6211\u4eec\u7684\u5458\u5de5\u4e5f\u8fd9\u6837\u505a\u3002(\u4ed6\u4eec\u8fd9\u4e48\u505a\u4e86\uff0c\u6709\u70b9\u4e0d\u60c5\u613f\u3002)\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6807\u5fd7\uff0c\u6211\u4eec\u7684\u8d21\u4f50\u516c\u5173\u6218\u7565(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\u4e5f\u662f\u670d\u52a1\u4e8e\u6211\u4eec\u5dee\u5f02\u5316\u6218\u7565\u7684\u7b56\u7565\u3002\n\u5b83\u8d77\u4f5c\u7528\u4e86\uff0c\u56e0\u4e3a\u4ed6\u662f\u5bf9\u7684\u3002SaaS\u4ea4\u4ed8\u6a21\u5f0f\u6539\u53d8\u4e86\u6e38\u620f\u89c4\u5219\uff0c\u6dd8\u91d1\u70ed\u5f00\u59cb\u4e86\u3002\nSaaS\u4f9b\u5e94\u5546\u65e0\u5904\u4e0d\u5728--\u62fc\u51d1\u5f00\u6e90\u8f6f\u4ef6\uff0c\u6dfb\u52a0\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4f18\u79c0\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u6258\u7ba1\u4ed6\u4eec\u73b0\u6709\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u7684\u7248\u672c\u3002\u4f9b\u5e94\u5546\u6258\u7ba1\u51cf\u5c11\u4e86\u4e70\u65b9\u7684\u8fd0\u8425\u8d1f\u62c5\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4f7f\u7528\u60c5\u51b5\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u8861\u91cf\uff0c\u6210\u672c\u53ef\u4ee5\u66f4\u7d27\u5bc6\u5730\u4e0e\u5ba2\u6237\u6536\u5230\u7684\u4ef7\u503c\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u73b0\u5728\u53ef\u4ee5\u6839\u636e\u4f7f\u7528\u60c5\u51b5(API\u8c03\u7528\u3001\u521b\u5efa\u7684\u7ebf\u7d22\u3001\u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\u7b49)\u8f7b\u677e\u786e\u5b9a\u4ef7\u683c\u3002\u5e76\u901a\u8fc7\u8ba2\u9605\u6a21\u5f0f\u968f\u65f6\u95f4\u6536\u8d39\u3002\u6d88\u9664\u4e86\u5ba2\u6237\u5728\u5b9e\u73b0\u4ef7\u503c\u4e4b\u524d\u5728\u8f6f\u4ef6\u4e0a\u82b1\u8d39\u5927\u91cf\u8d44\u672c\u7684\u98ce\u9669\u3002\n\u662f\u7684\uff0cSaaS\u4e4b\u6240\u4ee5\u6210\u529f\uff0c\u662f\u56e0\u4e3a\u5b83\u89e3\u51b3\u4e86\u4e4b\u524d\u6a21\u5f0f\u7684\u8bb8\u591a\u95ee\u9898\u3002\u7136\u800c\uff0c\u5982\u679c\u6ca1\u6709\u53e6\u4e00\u4e2a\u5de8\u5927\u7684\u53d1\u5c55\uff0c\u9ad8\u8d28\u91cf\u7684\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u7684\u6fc0\u589e\uff0c\u5b83\u662f\u5426\u4f1a\u53d8\u5f97\u5982\u6b64\u4e3b\u5bfc\u8fd8\u4e0d\u6e05\u695a\u3002SaaS\u6a21\u5f0f\u4e4b\u6240\u4ee5\u5982\u6b64\u6709\u5229\u53ef\u56fe\uff0c\u662f\u56e0\u4e3a\u5b83\u80fd\u591f\u6709\u6548\u5730\u5c06\u514d\u8d39\u5f00\u6e90\u8f6f\u4ef6\u8d27\u5e01\u5316\u3002\u51e0\u4e4e\u6bcf\u4e2aSaaS\u5806\u6808\u90fd\u5145\u65a5\u7740\u514d\u8d39\u7684\u5f00\u6e90\u7f16\u7a0b\u8bed\u8a00\u3001\u5e93\u3001\u6570\u636e\u5e93\u3001\u8d1f\u8f7d\u5e73\u8861\u5668\u3001Web\u670d\u52a1\u5668\u7b49\u3002\u8fc7\u53bb30\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0cOSS\u521b\u9020\u4e86\u5927\u91cf\u4ef7\u503c\uff0c\u800cSaaS/IaaS\u5360\u636e\u4e86\u5927\u90e8\u5206\u4ef7\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u6545\u4e8b\u3002\n\u73b0\u5728\u5f88\u96be\u907f\u514d\u5173\u4e8e\u5982\u4f55\u542f\u52a8\u548c\u8fd0\u8425SaaS\u4e1a\u52a1\u7684\u5efa\u8bae\u3002\u5728\u5b83\u7684\u5468\u56f4\u5f62\u6210\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u751f\u6001\u7cfb\u7edf\u3002Segment\u548cZapier\u7b49\u96c6\u6210\u63d0\u4f9b\u5546\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u4e9b\u6570\u636e\u5b64\u5c9b\u548cSaaS\u95f4\u5de5\u4f5c\u6d41\u9650\u5236\u3002\u50cfMixpanel\u8fd9\u6837\u7684\u5206\u6790\u516c\u53f8\u548cHubpot\u8fd9\u6837\u7684\u8425\u9500\u5e73\u53f0\u53ef\u4ee5\u8ba9\u4f60\u6839\u636e\u4f7f\u7528\u60c5\u51b5\u6216\u7f51\u7ad9\u4e92\u52a8\u6765\u5fae\u8c03\u4f60\u7684\u6f0f\u6597\u548c\u57f9\u80b2\u6f5c\u5728\u5ba2\u6237\u3002\u50cfStrip\u8fd9\u6837\u7684\u652f\u4ed8\u63d0\u4f9b\u5546\u964d\u4f4e\u4e86\u5f00\u59cb\u8d5a\u94b1\u7684\u95e8\u69db\uff0c\u5e76\u8fdb\u884c\u4e86\u5982\u6b64\u7684\u6295\u8d44\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u8f85\u52a9\u4ea7\u54c1\u6765\u4fc3\u8fdbSaaS\u516c\u53f8\u7684\u5f62\u6210\uff0c\u5e76\u53d1\u5e03\u4e86\u6df1\u5165\u7684\u6307\u5357\u3002\u5982\u679c\u4f60\u6b63\u5728\u4e3a\u4e00\u5bb6B2B\u8f6f\u4ef6\u516c\u53f8\u7b79\u96c6\u8d44\u91d1\uff0c\u90a3\u4e48\u5047\u5b9a\u5b83\u5c31\u662fSaaS\u3002\u5982\u4eca\uff0c\u5f88\u96be\u5411\u4e00\u4e2a\u5178\u578b\u7684\u6295\u8d44\u8005\u89e3\u91ca\u4efb\u4f55\u5176\u4ed6\u5546\u4e1a\u6a21\u5f0f\u3002\n\u7136\u800c\uff0c\u6211\u6700\u8fd1\u6ce8\u610f\u5230\u4e86\u6258\u9a6c\u65af\u00b7\u901a\u53e4\u65af(Thomas Tunguz)\u7684\u4e00\u7bc7\u6587\u7ae0(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5728\u4e00\u4e2a\u4e3b\u8981\u5173\u6ce8SaaS\u7684\u535a\u5ba2\u4e2d)\uff0c\u662f\u5173\u4e8e\u4e00\u5bb6\u91c7\u7528\u65b0\u8f6f\u4ef6\u4ea4\u4ed8\u6a21\u5f0f\u7684\u516c\u53f8(Mattermore)\uff1a\n\u5ba2\u6237\u53ef\u4ee5\u9009\u62e9\u6258\u7ba1\u6570\u636e\u5e93\u7684\u4f4d\u7f6e\u3001\u5982\u4f55\u4fdd\u62a4\u6570\u636e\u5e93\u3001\u76d1\u63a7\u6570\u636e\u5e93\u3001\u786e\u4fdd\u6570\u636e\u5e93\u7b26\u5408\u65b0\u7684\u6570\u636e\u9690\u79c1\u6cd5\u89c4\u3001\u9650\u5236\u8bbf\u95ee\u548c\u7ef4\u62a4\u6570\u636e\u5e93\u3002\u4ed6\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u4e91\u4e2d\u3001\u5728vPC\u4e2d\u6216\u5728\u5185\u90e8\u8fd0\u884c\u5b83\u3002\n\u540c\u65f6\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0e\u4efb\u4f55\u5176\u4ed6SaaS\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u4ea4\u4ed8\u3002\u5b83\u7684\u66f4\u65b0\u901f\u5ea6\u4e5f\u4e00\u6837\u5feb\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u662f\u5f00\u6e90\u7684\uff0c\u90a3\u5c31\u66f4\u597d\u4e86\u3002\u5ba2\u6237\u53ef\u4ee5\u5ba1\u6838\u4ee3\u7801\u3001\u6d3e\u751f\u4ee3\u7801\u4ee5\u5bf9\u5176\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u5e76\u5c06\u5176\u5d4c\u5165\u5230\u4efb\u4f55\u4f4d\u7f6e\u3002\n\u5c3d\u7ba1SaaS\u6709\u5f88\u591a\u597d\u5904\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u4e07\u80fd\u7684\u3002\u4e3b\u8981\u7684\u53cd\u5bf9\u610f\u89c1\u662f\uff0c\u56e0\u4e3a\u4f9b\u5e94\u5546\u6258\u7ba1\u8f6f\u4ef6(\u5305\u62ec\u6570\u636e)\uff0c\u6240\u4ee5\u7528\u6237\u5931\u53bb\u4e86\u5bf9\u5176\u6570\u636e\u7684\u63a7\u5236\u3002\u901a\u53e4\u65af\u6307\u51fa\uff0c\u8fd9\u79cd\u65b0\u7684\u6a21\u5f0f\u53ef\u80fd\u4f1a\u5e26\u6765SaaS\u7684\u597d\u5904\uff0c\u5373\u5728\u7528\u6237\u4fdd\u6301\u5bf9\u6570\u636e\u7684\u63a7\u5236\u7684\u540c\u65f6\uff0c\u964d\u4f4e\u8fd0\u884c\u8f6f\u4ef6\u7684\u8fd0\u8425\u6210\u672c\u3002\n\u8fd9\u8ba9\u6211\u60f3\u5230\u4e00\u79cd\u65b0\u7684\u8f6f\u4ef6\u4ea4\u4ed8\u6a21\u5f0f\u53ef\u80fd\u6b63\u5728\u83b7\u5f97\u7275\u5f15\u529b\u2026\u3002\u6211\u51e0\u5e74\u524d\u63d0\u5230\u8fc7\u7684\u4e00\u4e2a\uff0c\u2026\u3002\u8fd9\u662f\u7531\u4e8e\u91c7\u7528\u4e86\u5bb9\u5668\u548c\u8c03\u5ea6\u5668\u2026\u7b49\u65b0\u7684\u539f\u751f\u4e91\u6280\u672f\u800c\u6210\u4e3a\u53ef\u80fd\u7684\u3002\u5b83\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u6d88\u9664\u4e86SaaS\u548c\u5185\u90e8\u8f6f\u4ef6\u4e4b\u95f4\u7684\u4f20\u7edf\u533a\u522b\u3002\nJoseph Jacks\u662f\u8fd9\u4e00\u65b0\u6a21\u5f0f\u7684\u4e3b\u8981\u5021\u5bfc\u8005(\u4ee5\u81f3\u4e8e\u4ed6\u628a\u94b1\u653e\u5728\u5634\u8fb9)\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u4e00\u6a21\u5f0f\u662f\u5982\u6b64\u4f18\u8d8a\uff0c\u4ee5\u81f3\u4e8e\u5c06\u5728\u5927\u7ea620\u5e74\u5185\u541e\u566c5000\u591a\u4ebf\u7f8e\u5143\u7684SaaS\u3002\u8fd9\u662f\u4e00\u4e2a\u5927\u80c6\u7684\u8bf4\u6cd5\uff0c\u4f46\u66f4\u591a\u7684\u4eba\u6b63\u5728\u8ba8\u8bba\u4f20\u7edfSaaS\u4ea4\u4ed8\u6a21\u5f0f\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u672c\u8eab\u5c31\u4ee4\u4eba\u5174\u594b(\u7279\u522b\u662f\u5bf9\u4e8e\u6b63\u5728\u52aa\u529b\u4fc3\u8fdb\u8fd9\u4e00\u65b0\u6a21\u5f0f\u7684\u516c\u53f8\u7684\u4eba\u6765\u8bf4)\uff01\n\u9274\u4e8e\u8fd9\u662fSaaS\u7684\u4e3b\u8981\u4f18\u52bf\uff0c\u6211\u76f8\u4fe1Open Core(\u53c8\u540d\u5546\u4e1a\u5f00\u6e90\u8f6f\u4ef6\u201cCOSS\u201d)\u53d6\u4ee3\u5927\u91cfSaaS\u5e02\u573a\u7684\u552f\u4e00\u9014\u5f84\u5c31\u662f\u5927\u5e45\u964d\u4f4e\u8fd0\u884c\u8f6f\u4ef6\u7684\u8fd0\u8425\u8d1f\u62c5\u3002\u8981\u53d6\u4ee3\u73b0\u6709\u7684\u505a\u4e8b\u65b9\u5f0f\uff0c\u65b0\u7684\u6a21\u5f0f\u5fc5\u987b\u81f3\u5c11\u597d10\u500d\u3002\u4e5f\u8bb8\u4e00\u4e9b\u66f4\u597d\u7684\u8425\u9500(\u548c\u5e73\u9762\u8bbe\u8ba1)\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002", "note_en": "The Open Source business model has traditionally been thought of as losing strategy, with the only commonly referred to success story being RedHat. The level of  scrutiny has  increased as Infrastructure as a Service (aka, IaaS or Cloud) providers, like AWS make billions of dollars by capturing the value that Open Source Software creates. These billions come predominantly from SaaS vendors (who in turn are making billions) benefiting from the reduced upfront capital expenses required to build their offerings on these IaaS providers. Common sense is that it is foolish to sell software any way other than SaaS.\n While this perspective is not without merit, the reality is that there are  many successful Open Source Software companies and the rate of success is growing. It seems that Open Source companies are figuring out how to capture a larger percentage of the value they create. As someone who previously co-founded a  SaaS company and more recently co-founded an  Open Source Software company, I wanted to explore SaaS vs Open Source from a go-to-market perspective to illustrate how the Open Source model can succeed and help confirm that I am not just a masochist.\n I\u2019ll start with a brief overview of SaaS and how it came to be such a dominant model and touch on how different Open Core models for selling Open Source Software may be creating a viable alternative market.\n  How did SaaS become the dominant way to deliver software? Like most industry-wide shifts, it emerged due to overwhelming frustration with the then-current model - commercial off-the-shelf (COTS) or bespoke software that was run on-premises by in-house IT departments. This model required significant in-house resources to deploy, update and manage installations. It also required a significant upfront capital expenditure for the software license or development costs.\n  Perhaps the turning point from on-premises software to SaaS is best represented by Salesforce\u2019s \u201cNO SOFTWARE\u201d logo. Of course, Salesforce was and is still software but Marc Benioff\u2019s genius insight was that he could tap into the existing frustration and convince buyers that this new model was so different, it should not even be considered software. Presumably, Mr. Benioff had witnessed this frustration first hand as a sales person at Oracle, which is why he was so passionate about it.\n Our differentiators were ease of use, a business model of shared risk, and low-risk commitment \u2014 everything that software was not.\n The End of Software mission and the NO SOFTWARE logo effectively conveyed how we were different. I put the logo on all our communications materials and policed it to make sure no one removed it. (They did so anyway.) I wore a NO SOFTWARE button every day and asked our employees to as well. (They did so, somewhat reluctantly.) It wasn\u2019t just the logo that we used, our gonzo PR strategies (more on those later) were also tactics that served our differentiation strategy.\n It worked because he was right. The SaaS delivery model was a game changer and the gold rush was on.\n SaaS vendors emerged from everywhere - cobbling together open source software, adding business logic code, good UX and hosting their versions of existing software solutions. Vendor hosting reduced the buyer\u2019s operational burden of running and it also meant that usage could be more easily measured and the cost could be more closely tied to the value being received by the customer. The price could now be easily determined based on usage (api-calls, leads created, emails sent, etc.) and charged over time through a subscription model. The customer\u2019s risk of a large capital expenditure on software before realizing the value was removed.\n Yes, SaaS was successful due to the fact that it solved a lot of problems with the previous model. However, it is not clear if it would have become so dominant without another huge development, the proliferation of high quality, open source software. The SaaS model is so lucrative because it is able to effectively monetize free open source software. Almost every SaaS stack is full of free open source programming languages, libraries, databases, load balancers, web servers, etc.  The last 30 or so years have been a lopsided tale of OSS creating a lot of value and SaaS / IaaS capturing most of it.\n  It is now difficult to avoid advice on how to start and operate a SaaS business. There is a huge ecosystem developed around it. Integration providers like Segment and Zapier have addressed some of the data silo and inter-SaaS workflow limitations. Analytics companies like Mixpanel and marketing platforms like Hubspot allow you to fine-tune your funnel and nurturing of prospects based on usage or website interactions. Payment providers like Stripe have reduced the hurdles to start making money and are so invested, they have created  ancillary products to promote the formation of SaaS companies and published  in-depth guides. If you are raising money for a B2B software company, the presumption is that it would be SaaS. It\u2019s difficult to explain any other business model to a typical investor these days.\n However, I recently noticed  a post by Thomas Tunguz (in a blog primarily focused on SaaS, by the way) about a company (Mattermost) with a new software delivery model:\n Customers can choose where to host the database, how to secure it, monitor it, ensure it complies with new data privacy regulations, limit access, and service it. They can run it in their cloud, in a VPC or on premises.\n Meanwhile, the application is delivered as any other SaaS app. It\u2019s updated just as quickly. Even better when the app is open source. Customers can audit the code, fork it to customize it, and embed it wherever.\n For all its benefits, SaaS is not a panacea. The main objection is that because the vendor is hosting the software (which includes the data), the users lose control of their data. Mr. Tunguz points out that this new model may deliver the SaaS benefits of reducing the operational costs of running the software while the users\u2019 retain control of their data.\n It made me think a new software delivery model may be getting traction\u2026one I had  alluded to several years ago\u2026one that is made possible due to the adoption of new cloud-native technologies like containers and schedulers\u2026and one that in many cases removes the traditional distinctions between SaaS and on-premise software.\n Joseph Jacks, who is a leading evangelist of this new model (to the point where he is  putting money where his mouth is),believes this this model is so superior it  will eat $500+ billion of SaaS over ~20 years.This is a bold claim but just the fact that more people are talking about an alternative to the traditional SaaS delivery model is exciting (especially to someone who is at a company  trying to facilitate this new model)!\n I believe the only way Open Core (aka, Commercial Open Source Software \u201cCOSS\u201d) replaces a significant amount of the SaaS market is if the operational burden of running the software can be reduced dramatically, given that is the main advantage of SaaS. To replace an existing way of doing things the new model has to be at least 10x better. Perhaps some better marketing (and graphic design) would help, too.", "posttime": "2020-10-15 06:07:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u5f00\u653e,core", "title": "SaaS\u4e0e\u5f00\u653e\u6838\u5fc3\u8f6f\u4ef6\uff1a\u7b80\u4ecb", "title_en": "SaaS vs. Open Core Software: An Introduction", "transed": 1, "url": "https://gravitational.com/blog/open-core-vs-saas-intro/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u5f00\u653e", "core"]}, {"category": "", "categoryclass": "", "imagename": "c5203d1d7952daa93bea040b088aade1.png", "infoid": 1028912, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u4e0a\u6b21\u73a9\u7535\u8111\u6e38\u620f\u662f\u4ec0\u4e48\u65f6\u5019\uff1f\u6211\u771f\u7684\u5f88\u559c\u6b22\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u7684\u4e00\u53e5\u540d\u8a00--\u201c\u6211\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u53d8\u8001\u800c\u505c\u6b62\u73a9\u6e38\u620f\uff0c\u6211\u4eec\u53d8\u8001\u662f\u56e0\u4e3a\u6211\u4eec\u4e0d\u73a9\u4e86\u3002\u201d--\u4ed6\u751f\u6d3b\u5728\u7535\u8111\u6e38\u620f\u8fd8\u6ca1\u6709\u51fa\u73b0\u7684\u65f6\u4ee3\uff0c\u4f46\u8fd9\u53e5\u8bdd\u81f3\u4eca\u4ecd\u5728\u6d41\u884c\u3002\u6211\u4e0d\u7ecf\u5e38\u73a9\u6e38\u620f\uff0c\u4f46\u5f53\u6211\u73a9\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u786e\u4fdd\u5b83\u4eec\u662f\u6b63\u786e\u548c\u6700\u597d\u7684\u3002\u5b83\u4eec\u901a\u5e38\u662f\u8fc7\u53bb\u7684\u6e38\u620f\uff0c\u5176\u4e2d\u4e00\u4e9b\u6e38\u620f\u5c31\u662f\u4e0d\u4f1a\u8ba9\u2026\u53d8\u8001\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u662f\u6c38\u6052\u7684\u3002\u4eca\u5929\u6211\u5c06\u5411\u4f60\u4eec\u5c55\u793a\u4e00\u4e9bFreeBSD\u7cfb\u7edf\u4e0a\u7684\u8001\u5f0f\u6e38\u620f\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4eceFreeBSD\u4e0a\u7684\u201c\u539f\u751f\u201d\u6e38\u620f\u5f00\u59cb-\u5230\u4eca\u5929\u4e3a\u6b62\uff0cFreeBSD\u7aef\u53e3\u96c6\u5408\u4e2d\u6709\u8d85\u8fc71000\u4e2a\u6e38\u620f\u53ef\u7528\u3002\n\u901a\u8fc7\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5(\u4ecepkg-desr\u6587\u4ef6)\u83b7\u5f97\u8fd9\u4e9b\u6e38\u620f\u4e2d\u6bcf\u4e2a\u6e38\u620f\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u6211\u5047\u8bbe\u60a8\u7684FreeBSD\u7aef\u53e3\u6811\u4f4d\u4e8e/usr/ports\u76ee\u5f55\u4e0b\u3002\n%for I in/usr/ports/Games/*/pkg-desr&gt\uff1bdo&gt\uff1becho${i}&gt\uff1becho&gt\uff1bcat${i}&gt\uff1becho&gt\uff1bDone\\&gt\uff1b|grep\\&gt\uff1b--color=Always\\&gt\uff1b-A 100\\&gt\uff1b-E&#34\uff1b^/usr/ports/Games/.*/pkg-desr&#34\uff1b\\&gt\uff1b|less-R\u3002\n%for I in/usr/ports/Games/*/pkg-desr\uff1bdo echo${i}\uff1becho\uff1bcat${i}\uff1becho\uff1bDone|grep--color=Always-A 100-E&#34\uff1b^/usr/ports/Games/.*/pkg-description&#34\uff1b|LESS-R\u3002\n\u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u6e38\u620f\u5f00\u59cb-\u5728\u7ec8\u7aef\u4e0a\u73a9\u7684\u6587\u672c\u6e38\u620f\u3002\u6211\u53ea\u73a9\u4e86\u5176\u4e2d\u7684\u4e24\u4e2a\uff0c\u5b83\u4eec\u662f2048\u5e74\u548cctris\u6e38\u620f\u3002\n2048\u5e74\u901a\u5e38\u662f\u4e00\u4e2a\u5355\u72ec\u7684C\u6587\u4ef6-2048.c-from here-https://github.com/mevdschee/2048.c/blob/master/2048.c-\u60a8\u9700\u8981\u4f7f\u7528cc(1)\u547d\u4ee4\u7f16\u8bd1\u5b83-\u5c31\u50cf\u8fd9\u6837\u3002\n\u53e6\u4e00\u4e2actris\u5728FreeBSD\u7aef\u53e3\u4e2d\u53ef\u7528\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528pkg(8)\u547d\u4ee4\u901a\u8fc7\u5305\u6dfb\u52a0\u5b83\u3002\n\u8fd8\u6709\u5176\u4ed6\u51e0\u6b3e\u7ec8\u7aef\u6e38\u620f\uff0c\u6bd4\u5982FreeBSD\u7aef\u53e3\u4e2d\u7684\u4fc4\u7f57\u65af\u65b9\u5757--\u4f8b\u5982\uff0c\u5b83\u4eec\u662fbsdtris\u6216vitetris\u6e38\u620f\u3002\n\u5b83\u4eec\u4e5f\u662f\u7ec8\u7aef\u7684\u201c\u975e\u4ea4\u4e92\u5f0f\u201d\u6e38\u620f(\u6216\u8005\u6211\u4e5f\u53ef\u4ee5\u79f0\u5b83\u4eec\u4e3a\u7ec8\u7aef\u5c4f\u5e55\u4fdd\u62a4\u7a0b\u5e8f)\u3002\n\u6211\u6700\u559c\u6b22\u7684\u4e24\u79cd\u662fCMatrix\u548cPipes\u3002\u7b2c\u4e00\u4e2a\u53ef\u4eceFreeBSD\u7aef\u53e3\u83b7\u5f97\u3002\n\u524d\u6bb5\u65f6\u95f4\uff0c\u6211\u2018\u79fb\u690d\u2019\uff0c\u6216\u8005\u6211\u5e94\u8be5\u8bf4\uff0c\u4fee\u6539\u4e86\u7ba1\u9053\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u5728FreeBSD\u4e0a\u6b63\u5e38\u5de5\u4f5c\uff0c\u5b83\u53ef\u4ee5\u4ece-https://github.com/vermaden/pipes/blob/master/pipes.sh-\u8fd9\u91cc\u83b7\u5f97\u3002\n\u5176\u4e2d\u4e00\u4e2a\u66f4\u597d\u7684\u5f00\u6e90\u6e38\u620f\u662fWesnoth\u4e4b\u6218\uff0c\u5b83\u4e5f\u53ef\u4ee5\u5728FreeBSD\u7aef\u53e3\u4e2d\u83b7\u5f97\uff0c\u6240\u4ee5\u6dfb\u52a0\u5b83\u5f88\u5bb9\u6613\u3002\n\u5927\u591a\u6570Amiga\u6e38\u620f\u90fd\u5df2\u79fb\u690d\u5230DOS\uff0c\u4f7f\u7528DOSBOX(1)\u73a9DOS\u2018ports\u2019\u6bd4\u5728fs-uae(1)\u4eff\u771f\u5668\u4e0b\u73a9\u539f\u6765\u7684Amiga\u7248\u672c\u66f4\u65b9\u4fbf\u3001\u66f4\u5feb\u3002\u4e00\u4e9b\u6e38\u620f\uff0c\u5982\u201c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\u201d\uff0c\u5728\u539f\u59cb\u7684Amiga\u7248\u672c(\u4f8b\u5982\uff0cAmiga\u7248\u672c\u4e2d\u7684\u89c6\u91ce\u7a0d\u5927\u4e00\u4e9b-\u4f46\u8fd9\u53ea\u4f1a\u8ba9DOS\u6e38\u620f\u53d8\u5f97\u7a0d\u5fae\u56f0\u96be\u4e00\u70b9\uff0c\u56e0\u4e3a\u4f60\u770b\u5230\u7684\u66f4\u5c11)\u6bd4\u5728DOS\u7aef\u53e3\u4e0b\u66f4\u597d\u4e00\u4e9b\uff0c\u4f46\u4ecd\u7136\u6ca1\u6709\u90a3\u4e48\u5927\u7684\u5dee\u522b\uff0c\u7528fs-uae(1)\u548c\u624b\u52a8\u5207\u6362\u865a\u62df\u8f6f\u76d8\u6765\u7b49\u5f85\u6bcf\u573a\u6bd4\u8d5b\u5f00\u59cb\u5927\u7ea660\u79d2\u3002\n\u6b63\u5982\u4f60\u5728\u6700\u53f3\u8fb9\u770b\u5230\u7684\uff0c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\u6e38\u620f\u751a\u81f3\u5df2\u7ecf\u88ab\u79fb\u690d\u5230\u5fae\u8f6fXbox\u63a7\u5236\u53f0-SWOS-\u5728\u8fd9\u91cc\ud83d\ude42\u53ef\u4ee5\u4e70\u5230\u3002\n\u7136\u800c\uff0c(\u81f3\u5c11)\u6709\u4e00\u6b3eAmiga\u6e38\u620f\u8fd8\u6ca1\u6709\u79fb\u690d\u5230DOS\u4e0a\uff0c\u5b83\u662f\u7531\u4f20\u5947\u7684Team17\u5de5\u4f5c\u5ba4\u5236\u4f5c\u7684\u3002\u8fd9\u662f\u5168\u5730\u5f62\u8d5b\u8f66\u6bd4\u8d5b\u3002\u5f53\u4f60\u56de\u987e\u5b83\u7684\u8bc4\u8bba\uff0c\u5f53\u5b83\u53d1\u5e03\u65f6\uff0c\u5b83\u6ca1\u6709\u5f97\u5230\u90a3\u4e48\u9ad8\u7684\u5206\u6570\uff0c\u4f8b\u5982\uff0c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\uff0c\u4f46\u5b83\u662f\u4e3aAmiga\u5236\u4f5c\u7684\u66f4\u597d\u770b\u548c\u66f4\u6709\u8da3\u7684\u8d5b\u8f66\u6e38\u620f\u4e4b\u4e00\u3002\u4f46\u662f\u201c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\u201d\u57282007\u5e74\u88ab\u8bc4\u4e3a\u53f2\u4e0a\u5341\u5927\u6700\u91cd\u8981\u7684\u7535\u5b50\u6e38\u620f\u4e4b\u4e00\uff0c\u6240\u4ee5\u771f\u7684\u5f88\u96be\u8d85\u8d8a\u5b83\u3002\u5373\u4f7f\u662f\u660e\u667a\u7684\u6208\u5c14\u5fb7\u4e5f\u5f97\u5230\u4e86\u5f88\u591a\u5dee\u8bc4\u3002\n\u6700\u521d\u5b83\u6709\u4e24\u4e2a\u8f6f\u76d8\u7248\u672c\uff0c\u6240\u4ee5\u6bcf\u6b21\u60a8\u5728fs-uae(1)\u4e2d\u542f\u52a8\u6b64\u6e38\u620f\u65f6\uff0c\u60a8\u5c06\u9700\u8981\u66f4\u6539\u865a\u62df\u8f6f\u76d8\u2026\u3002\u8fd9\u662f\u771f\u6b63\u7684\u76ae\u5854\u997c\uff0c\u6211\u5fc5\u987b\u8bf4\uff0c\u2026\u3002\u66f4\u4e0d\u7528\u8bf4\u7b49\u5f85\u5b83\u5f00\u59cb\u768460\u79d2\u4e86\u3002\u4f46\u8fd8\u6709\u5176\u4ed6\u7684\u53ef\u80fd\u6027\u3002\u5168\u5730\u5f62\u8d5b\u8f66\u6e38\u620f\u4e5f\u662f\u4e3aAmiga CD32\u53d8\u4f53\u521b\u5efa\u7684\uff0c\u5b83\u4f7f\u7528CD-ROM\u5149\u76d8\u800c\u4e0d\u662f\u8f6f\u76d8\u3002\u8fd9\u6837\uff0c\u901a\u8fc7\u52a0\u8f7d\u5355\u4e2aISO\u6587\u4ef6\uff0c\u60a8\u4e0d\u518d\u9700\u8981\u5728\u6bcf\u6b21\u6e38\u620f\u5f00\u59cb\u65f6\u90fd\u5207\u6362\u8f6f\u76d8\u3002\u8036\uff01\n\u5e78\u8fd0\u7684\u662f\uff0c\u6240\u6709\u5730\u5f62\u8d5b\u8f66\u6e38\u620f\u7684fs-uae(1)\u914d\u7f6e\u4e5f\u4e0d\u957f\u4e5f\u4e0d\u590d\u6742\u3002\n\u7531\u4e8e\u5168\u5730\u5f62\u8d5b\u8f66\u6e38\u620f\u662f\u4eceISO\u6587\u4ef6\u5f00\u59cb/\u52a0\u8f7d\u7684\uff0c\u4fdd\u5b58/\u52a0\u8f7d\u6e38\u620f\u72b6\u6001\u4e0d\u662f\u5728\u6e38\u620f\u4e2d\u201c\u672c\u5730\u201d\u521b\u5efa\u7684\uff0c\u800c\u662f\u5728fs-uae(1)\u672c\u8eab\u4e2d\u4f7f\u7528\u4fdd\u5b58\u72b6\u6001\u548c\u52a0\u8f7d\u72b6\u6001\u9009\u9879\u8fdb\u884c\u5347\u7ea7\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u4e0d\u662f\u6240\u6709\u7684Amiga\u6e38\u620f\u90fd\u6709CD32\u7248\u672c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728fs-uae(1)\u4eff\u771f\u5668\u4e0a\u4f7f\u7528\u865a\u62df\u786c\u76d8\u9009\u9879\uff0c\u4ee5\u907f\u514d\u5207\u6362\u8f6f\u76d8\u3002\n\u901a\u8fc7\u4f7f\u7528\u5728FreeBSD\u4e0a\u4ee5DOSBOX\u5305(\u6216\u7aef\u53e3)\u5f62\u5f0f\u63d0\u4f9b\u7684DOSBox\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u73a9DOS\u6e38\u620f\u3002\nDOSbox\u4e2d\u7684\u6e38\u620f\u542f\u52a8\u975e\u5e38\u5feb\uff0c\u975e\u5e38\u4e0d\u9519\u3002\u5b83\u4eec\u8fd0\u884c\u8d77\u6765\u4e5f\u975e\u5e38\u987a\u7545\u3002\n\u5982\u60a8\u6240\u89c1\uff0c\u6211\u66f4\u559c\u6b22\u5c06\u6e38\u620f\u653e\u5728~/.doxbox\u76ee\u5f55\u4e4b\u5916\uff0c\u540c\u65f6\u53ea\u5728\u90a3\u91cc\u4fdd\u5b58\u914d\u7f6e\u6587\u4ef6\u3002\u4f46\u8fd9\u53ea\u662f\u201c\u7ec4\u7ec7\u201d\u7684\u9009\u62e9\u3002\u60a8\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u5982\u4f55\u4ee5\u53ca\u5728\u54ea\u91cc\u4fdd\u5b58\u6700\u9002\u5408\u60a8\u7684\u6e38\u620f\u3002\n\u4f7f\u7528DOSBox\u5185\u7f6e\u7684\u952e\u76d8\u91cd\u65b0\u6620\u5c04\u5668\u91cd\u65b0\u5b9a\u4e49\u6240\u6709\u952e\u76d8\u5feb\u6377\u952e\u4e5f\u975e\u5e38\u65b9\u4fbf\u3002\u4f8b\u5982\uff0c\u6211\u66f4\u559c\u6b22\u4f7f\u7528[Z]\u952e\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684[Ctrl]\u952e\u4f5c\u4e3aSenssible World of Socball\u4e2d\u7684\u2018Fire\u2019\u6309\u94ae\uff0c\u8fd9\u662f\u6211\u76ee\u524d\u552f\u4e00\u7684\u6620\u5c04\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u7531\u4e8eDOSBox\u4e3b\u914d\u7f6e\u6587\u4ef6\u4fdd\u5b58\u4e3a~/.dosbox/DOSBOX-${version}.conf\u6587\u4ef6(\u64b0\u5199\u672c\u6587\u65f6\u5176~/.dosbox/DOSBOX-0.74-3.conf)\uff0c\u56e0\u6b64\u91cd\u65b0\u6620\u5c04\u7684\u952e\u76d8\u5feb\u6377\u952e\u4fdd\u5b58\u5728~/.dosbox/mapper-${version}.map\u6587\u4ef6\u4e2d(\u64b0\u5199\u672c\u6587\u65f6\u5176~/.dosbox/mapper-0.74-3.map)\u3002\u8fd8\u8981\u8bb0\u4f4f\uff0c\u5982\u679c\u60a8\u5c06\u5728~(Home)dir\u800c\u4e0d\u662f~/.dosbox~dir\u4e2d\u542f\u52a8DOSBOX\uff0c\u90a3\u4e48DOSBOX\u5c06\u521b\u5efa~/mapper-0.74-3.map\u6587\u4ef6(\u5728\u60a8\u7684home\u76ee\u5f55\u4e2d)\uff0c\u800c\u4e0d\u662f\u6b63\u786e\u7684~/.dosbox/mapper-0.74-3.map place\u3002\n\u6211\u8fd8\u4e3a\u6bcf\u4e2a\u6e38\u620f\u5236\u4f5c\u4e86\u811a\u672c\u5305\u88c5\u5668\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u6216\u4f7f\u7528dMenu\u5feb\u901f\u542f\u52a8\u5b83\u4eec\u3002\n\u60a8\u53ef\u4ee5\u5728\u6211\u7684gihub\u5b58\u50a8\u5e93-https://github.com/vermaden/scripts-\u4e2d\u627e\u5230\u5b83\u4eec\u7684\u6e38\u620f-*\u811a\u672c\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002DOSBox\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u4e2arepo-https://github.com/vermaden/scripts/tree/master/dosbox-here\u4e0a\u7684DOSBOX\u76ee\u5f55\u4e2d\u3002\n\u6211\u6700\u559c\u6b22\u7684DOS(\u8d77\u6e90\u4e8eAmiga)\u6e38\u620f\u662f\u201c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\u201d\u3002\u6211\u5076\u5c14\u4e5f\u559c\u6b22\u73a9\u201c\u7b2c\u4e00\u5b9a\u5c45\u8005\u201d\u6e38\u620f\u548c\u201c\u4e3b\u9898\u533b\u9662\u201d\u3002\nDOSBox\u8fd8\u5141\u8bb8\u60a8\u4f7f\u7528\u952e\u76d8\u5feb\u6377\u952e\u8f7b\u677e\u5f55\u5236\u97f3\u9891(\u5f55\u5236\u4e3aWAV\u6587\u4ef6)\u548c\u89c6\u9891(\u5f55\u5236\u4e3aAVI\u6587\u4ef6)\u3002\n\u4f8b\u5982\uff0c\u6211\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8bb0\u5f55\u4e86\u6211\u7684\u8db3\u7403\u4e16\u754c\u8fdb\u7403\u7684\u56de\u653e(\u7136\u540e\u4f7f\u7528ffmpeg(1)\u5c06\u5176\u8f6c\u6362\u4e3aGIF)\u3002\n\u8fd9\u662f\u6211\u7528\u6765\u5c06DOSBox\u5236\u4f5c\u7684AVI\u6587\u4ef6\u8f6c\u6362\u6210GIF\u6587\u4ef6\u7684ffmpeg(1)\u5492\u8bed\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u6709\u4e9b\u6e38\u620f--\u201c\u660e\u667a\u7684\u8db3\u7403\u4e16\u754c\u201d\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00--\u6709\u4e0d\u6b62\u4e00\u79cd\u56fe\u5f62\u6a21\u5f0f\u6765\u8fd0\u884c\u5b83\u4eec\u3002\u5f53\u4f60\u5728\u6ca1\u6709\u4efb\u4f55\u5f00\u5173\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u6e38\u620f\u65f6\uff0c\u5b83\u4f1a\u5728\u4f4e\u56fe\u5f62\u6a21\u5f0f\u4e0b\u5f00\u59cb\uff0c\u8fd9\u662f\u901a\u8fc7\u67e5\u770b\u53f3\u4e0a\u89d2\u50cf\u7d20\u5316/\u865a\u7ebf\u7684\u201cS\u201d\u5fbd\u6807\u6765\u53d1\u73b0\u7684\u65b9\u6cd5\u3002\u573a\u5730\u4e0a\u7684\u7ebf\u6761\u4e5f\u6ca1\u6709\u6d88\u9664\u952f\u9f7f\u3002\n\u5f53\u60a8\u5c06/f\u6807\u5fd7\u6dfb\u52a0\u5230\u654f\u611f\u7684\u8db3\u7403\u4e16\u754c\u4e8c\u8fdb\u5236\u65f6\uff0c\u5b83\u5c06\u5728\u5168\u56fe\u5f62\u6a21\u5f0f\u4e0b\u542f\u52a8\uff0c\u2018S\u2019\u5b57\u6bcd\u73b0\u5728\u80cc\u9762\u4e3a\u7eaf\u7070\u989c\u8272\uff0c\u7403\u573a\u4e0a\u7684\u7ebf\u6761\u73b0\u5728\u4e5f\u662f\u6297\u952f\u9f7f\u7684\u3002\n\u201c\u7406\u667a\u7684\u8db3\u7403\u4e16\u754c\u201d\u5728\u6211\u7684\u79c1\u4eba\u6e38\u620f\u201c\u540d\u4eba\u5802\u201d\u4e2d\u5360\u6709\u7279\u6b8a\u7684\u4f4d\u7f6e\u3002\u8fd9\u662f\u6211\u552f\u4e00\u53ef\u4ee5\u8fde\u7eed\u73a926\u4e2a\u5c0f\u65f6\u7684\u6e38\u620f\uff0c\u53ea\u6709\u5403\u996d\u548c\u5c0f\u4fbf\u65f6\u624d\u80fd\u4f11\u606f\u3002\u2026\u3002\u4f46\u90a3\u662f\u572890\u5e74\u4ee3\u7684\u65e7\u963f\u7c73\u52a0\u65f6\u4ee3\u3002\n\u621120\u5e74\u524d\u73a9\u8fc7\u7684\u4e00\u4e2a\u975e\u5e38\u53e4\u8001\u4f46\u4e5f\u975e\u5e38\u597d\u7684\u903b\u8f91\u6e38\u620f\u662f\u6447\u6446\u6e38\u620f\u3002\u6211\u65e0\u6cd5\u5728\u201c\u6b63\u5e38\u201d\u6a21\u5f0f\u4e0b\u542f\u52a8\u8fd9\u4e2a\u6e38\u620f\uff0c\u56e0\u4e3a\u5b83\u6bcf\u6b21\u90fd\u662f\u5728\u201c\u7f51\u7edc\u201d\u6a21\u5f0f\u4e0b\u542f\u52a8\u7684\u3002\u5728\u641c\u7d22\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u6211\u53d1\u73b0\u4e86\u2026\u3002\u621114\u5e74\u524d\u5728Dosbox\u4e0a\u521b\u5efa\u7684bug-https://www.dosbox.com/comp_list.php?showID=2499-\u5728\u8fd9\u91cc\u3002\u5f53\u65f6\u6211\u4e0d\u80fd\u5f3a\u8feb\u6447\u6446\u6e38\u620f\u5728\u201c\u6b63\u5e38\u201d\u6a21\u5f0f\u4e0b\u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u628a\u5b83\u201c\u6807\u8bb0\u201d\u4e3a\u201c\u4e0d\u5de5\u4f5c\u201d\uff0c\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\u3002\n\u73b0\u5728\uff0c\u5f53\u6211\u68c0\u67e5\u9519\u8bef\u62a5\u544a\u65f6\uff0c\u6211\u770b\u5230\u4e86\u95ee\u9898\u7684\u6709\u7528\u89e3\u51b3\u65b9\u6848\u3002\u5f88\u9057\u61be\uff0c\u6211\u65e0\u6cd5\u767b\u5f55\u5e76\u201c\u8c22\u8c22\u201d\uff0c\u56e0\u4e3a\u6211\u4e0d\u8bb0\u5f97\u6211\u7684\u5bc6\u7801\uff0c\u5e76\u4e14DOSBox\u9875\u9762\u4e0d\u63d0\u4f9b\u5bc6\u7801\u91cd\u7f6e\u670d\u52a1\u3002\n\u4f3c\u4e4eSwing\u9700\u8981\u5c06\u5176\u6e38\u620f\u76ee\u5f55\u91cd\u65b0\u6302\u8f7d\u4e3aCD-ROM\u8bbe\u5907\u3002\u8fd9\u6837\u4e00\u6765\uff0cSwing\u5728\u201c\u6b63\u5e38\u201d\u6a21\u5f0f\u4e0b\u5f00\u59cb\uff0c\u5e76\u4e14\u73b0\u5728\u53ef\u4ee5\u8fdb\u884c\u672c\u5730\u5355\u4eba\u548c\u591a\u4eba\u6e38\u620f\u3002\n\u4e0a\u597d\u7684\u8001\u9152\u3002\u5728FreeBSD\u4e0a\u6709\u4e24\u4e2a\u8461\u8404\u9152\u7248\u672c\u3002\u670964\u4f4d\u7248\u672c\u4f5c\u4e3a\u4eff\u771f\u5668/WINE\u5305\uff0c32\u4f4d\u7248\u672c\u540d\u4e3a\u4eff\u771f\u5668/i386-WINE\u3002\u60a8\u5e0c\u671b\u4f7f\u7528\u540e\u8005\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u6e38\u620f\u90fd\u662f32\u4f4d\u7684\uff0c\u800c64\u4f4d\u7248\u672c\u7684WINE\u4e0d\u80fd\u8fd0\u884c\u5b83\u4eec\u768432\u4f4d\u6e38\u620f\u3002FreeBSD\u4e0a\u7684\u5b89\u88c5\u662f\u5178\u578b\u7684\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u65e7\u7684/\u7ecf\u5178\u7684\u89c6\u7a97\u6e38\u620f\u901a\u5e38\u4f1a\u5c06\u4f60\u4fdd\u5b58\u7684\u6e38\u620f\u76f4\u63a5\u4fdd\u5b58\u5728\u5b83\u4eec\u7684\u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\u7684\u540d\u4e3a\u2018SAVE\u2019\u6216\u2018SAVEDGAMES\u2019\u7684\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u57282005\u5e74\u5230\u73b0\u5728\u7684\u67d0\u4e2a\u65f6\u95f4\u91cc\uff0c\u6e38\u620f\u5f00\u53d1\u8005\u5f00\u59cb\u8ba4\u4e3a\u628a\u5b83\u4eec\u5b58\u50a8\u5728\u2018My Documents\u2019\u76ee\u5f55\u4e0b\u662f\u4e2a\u2018\u597d\u4e3b\u610f\u2019\u2026\u3002\u6211\u4e0d\u9700\u8981\u544a\u8bc9\u60a8\u6211\u662f\u5982\u4f55\u505a\u51fa\u8fd9\u4e2a\u201c\u51b3\u5b9a\u201d\u7684\uff0c\u4f46\u5728FreeBSD\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5c06\u4fdd\u5b58\u76f4\u63a5\u5728~home\u76ee\u5f55(\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\u662f/home/vermaden)\u76ee\u5f55\u4e2d\u521b\u5efa\u7684\u6e38\u620f\u76ee\u5f55\u3002\u554a!\u600e\u4e48\u8fd9\u4e48\u4e71\u5440\u3002\n\u8fd9\u53ef\u80fd\u662f\u6211\u5728FreeBSD\u4e0a\u4f7f\u7528winecfg\u5728WINE\u4e2d\u914d\u7f6e\u7684\u552f\u4e00\u5185\u5bb9-\u6211\u5c06\u2018my document\u2019\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a~/games.EXTRACT/profile\u76ee\u5f55\u3002\nDOSBox\u4e5f\u6bd4\u8461\u8404\u9152\u66f4\u9002\u5408\u73a9\u6e38\u620f\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u65b9\u4fbf\u7684[Alt]+[Enter]\u5feb\u6377\u952e\u5728\u5168\u5c4f\u548c\u7a97\u53e3\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u3002\u6709\u4e86WINE\uff0c\u6211\u9700\u8981\u4fdd\u7559\u4e24\u4e2a\u6e38\u620f\u201c\u542f\u52a8\u201d\u811a\u672c\u3002\u5206\u522b\u7528\u4e8e\u7a97\u53e3\u6a21\u5f0f\u548c\u5168\u5c4f\u6a21\u5f0f\u3002\n\u6211\u5728\u610f\u5927\u5229\u7684\u7b2c\u4e00\u8d5b\u6bb5\u7684\u6700\u597d\u6210\u7ee9\u662f\u201c\u53ea\u6709\u201d2\u520609\u79d284\uff0c\u6240\u4ee5\u6211\u7684\u901f\u5ea6\u4e0d\u591f\u5feb\uff0c\u65e0\u6cd5\u5728Youtube\u4e0a\u4ee52\u520605\u520675\u79d2\u7684\u6210\u7ee9\u6253\u7834\u5386\u53f2\u6700\u597d\u6210\u7ee9-https://youtu.be/iLLMIJzpoVk\u3002\n\u4e0b\u9762\u662f\u5176\u4ed6\u7ecf\u5178\u539f\u521b\u7684\u6ce2\u5c14\u591a\u4e4b\u95e8\u6e38\u620f\u3002\u8fd9\u662f\u53ef\u80fd\u7684\u53cc\u91cd\u804c\u4e1a\u7684\u4e13\u4e1a\u6cd5\u5e08-\u73b0\u5728\u4e0d\u53ef\u80fd\u5728\u589e\u5f3a\u7248\u3002\n\u4e0d\u592a\u53d7\u6b22\u8fce\u7684\u6e38\u620f\uff0c\u5982\u72ee\u5fc3\uff1a\u5341\u5b57\u519b\u7684\u9057\u4ea7\uff0c\u5728FreeBSD\u4e0a\u7684\u8461\u8404\u9152\u4e0b\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684\u6e38\u620f\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662fFallout\u7684S.P.E.C.I.A.L\u7cfb\u7edf\uff0c\u800c\u4e0d\u662f\u50cf\u5176\u4ed6\u9ed1\u5c9b\u6e38\u620f\u90a3\u6837\u7684\u201c\u9ad8\u7ea7\u5730\u4e0b\u57ce\u201d\u548c\u201c\u9f99\u201d\u7684\u201c\u5178\u578b\u201d\u9009\u62e9\u3002\n\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u60a8\u7684\u6e38\u620f\u4e0d\u80fd\u5728FreeBSD\u4e0a\u7684WINE\u4e0b\u8fd0\u884c\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u5c1d\u8bd5\u4f7f\u7528Project Homura Solution\u3002\u5b83\u4e5f\u53ef\u4ee5\u5728FreeBSD\u4e0a\u4ee5\u6e38\u620f/Homura\u5305(\u6216\u7aef\u53e3)\u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\n\u56e0\u4e3a\u6211\u771f\u7684\u8ba8\u538cAdobe Flash\u6280\u672f\u5728\u6d4f\u89c8\u7f51\u9875\u65f6\uff0c\u4f46\u6211\u76f8\u5f53\u559c\u6b22\u7d27\u51d1\u7684SWF\u6587\u4ef6\u4f5c\u4e3a\u7b80\u5355\u7684Flash\u6e38\u620f\uff0c\u4f7f\u7528\u8461\u8404\u9152\u548cAdobe\u7684Flash Player Projector\u3002\u6211\u8fd8\u4f7f\u7528WINE\u542f\u52a8Windows\u7248\u672c\u7684Flash Player\u6295\u5f71\u4eea\u7a0b\u5e8f\u3002\u5b83\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97-https://www.adobe.com/support/flashplayer/debug_downloads.html-\u5728\u8c03\u8bd5\u4e0b\u8f7d\u4e2d\u3002\n\u4e00\u4e2a\u4f8b\u5b50\u7684\u603b\u7763\u6251\u514b2\u6e38\u620f\u8fd0\u884c\u5728\u8461\u8404\u9152\u4e0b\u7684Flash\u64ad\u653e\u5668\u6295\u5f71\u4eea\u3002\n\u6240\u6709\u8fd9\u4e9b\u6e38\u620f\u90fd\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7f51\u7ad9\u4e0a\u627e\u5230Flash\u6e38\u620f\uff0c\u65b9\u6cd5\u662f\u5728\u6d4f\u89c8\u5668\u7684View Page Source\u4e2d\u67e5\u627e\u6307\u5411SWF\u6587\u4ef6\u7684\u94fe\u63a5\u3002\u6211\u4e0d\u80fd\u5728\u8fd9\u91cc\u53d1\u5e03\u8fd9\u4e9b\u6e38\u620f\u4ee5\u4f9b\u4e0b\u8f7d\uff0c\u4f46\u5982\u679c\u60a8\u5728\u627e\u5230\u5b83\u4eec\u65f6\u6709\u95ee\u9898\uff0c\u8bf7\u8ba9\u6211\u77e5\u9053\ud83d\ude42\n\u76f4\u63a5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u73a9\u7684\u4e00\u7c7b\u6e38\u620f\u3002\u8fd9\u7c7b\u6e38\u620f\u7684\u4f8b\u5b50\u53ef\u4ee5\u662fKrunker\u2026\u3002\n\u5982\u679c\u4f60\u5f88\u65e0\u804a\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\u5185\u7f6e\u4e8eChromium\u6d4f\u89c8\u5668\u4e2d\u7684Chrome Dinosaur\u6e38\u620f\u3002\u8981\u8bbf\u95ee\u5b83\uff0c\u8bf7\u5c1d\u8bd5\u6253\u5f00\u4e0d\u5b58\u5728\u7684\u9875\u9762\uff0c\u4f8b\u5982http://non-existing-site.com\u3002\n\u7136\u540e\uff0cChromium\u6d4f\u89c8\u5668\u5c06\u663e\u793aNo Internet(\u65e0\u4e92\u8054\u7f51)\u9519\u8bef\u4fe1\u606f\u3002\u73b0\u5728\u6309[\u5411\u4e0a]\u7bad\u5934\u5e76\u5f00\u59cb\u64ad\u653e\u3002\n\u5982\u679c\u4f60\u559c\u6b222048\u5e74\u7684\u6e38\u620f\uff0c\u800c\u4e14\u4f60\u786e\u5b9e\u6709\u4e92\u8054\u7f51\u8fde\u63a5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728DuckDuckGo\u9875\u9762\u73a92048\u3002\n\u6709\u65f6\u8461\u8404\u9152\u4e0d\u8d77\u4f5c\u7528\uff0c\u6e38\u620f\u53ea\u5728Windows\u6216Linux\u4e0a\u53ef\u7528\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5728\u8fd9\u91cc\u4f7f\u7528VirtualBox\u3002\u8bf7\u8bb0\u4f4f\u9009\u62e9/\u542f\u75283D\u52a0\u901f\u5e76\u5b89\u88c5VirtualBox Guest Additions\u4ee5\u83b7\u5f97\u826f\u597d\u7684\u6027\u80fd\u3002\n\u6240\u6709\u8fd9\u4e9b\u6e38\u620f\u57282011\u5e74\u6851\u8fea\u6865CPU\u578b\u53f7i7-2820QM\u7684\u8001\u5f0f\u82f1\u7279\u5c14\u9ad8\u6e05\u663e\u53613000\u4e0a\u90fd\u73a9\u5f97\u5f88\u6d41\u7545\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u7684ThinkPadW520\u9644\u5e26\u7684\u3002\n\u5982\u679c\u6211\u5fd8\u4e86\u5f20\u8d34\u4e00\u4e9b\u4e1c\u897f\uff0c\u6216\u8005\u4e0d\u660e\u663e\uff0c\u90a3\u4e48\u8bf7\u968f\u65f6\u8ba9\u6211\u77e5\u9053\u3002\u8fd9\u4e2a\u5e16\u5b50\u50cf\u5f80\u5e38\u4e00\u6837\u589e\u957f\u5f97\u66f4\u591a\uff0c\u5e94\u8be5\u662f\ud83d\ude42\u7684\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u6211\u9519\u8fc7\u4e86\u4e00\u4e9b\u91cd\u8981\u7684DOSBOX(1)/WINE(1)/fs-UAE(1)\u9009\u9879\uff0c\u90a3\u4e48\u8bf7\u8ba9\u6211\u77e5\u9053\u3002", "note_en": "When was the last time you played a computer game? I really like one of Benjamin Franklin quotes \u2013  \u201cWe do not stop playing because we grow old, we grow old because we stop playing.\u201d \u2013 he lived in times where computer games did not existed yet but the quote remains current. I do not play games a lot, but when I do I make sure that they are the right and best ones. They are often games from the past and some of these games just do not age \u2026 they are timeless actually. Today I will show you some oldschool gaming on FreeBSD system.\n      First we will start with \u2018native\u2019 games on FreeBSD \u2013 as of today there are more then thousand games available in the FreeBSD Ports collection.\n  You can get nice description for each of these games (from the   pkg-descr file) by using the below command. I assume that your FreeBSD Ports tree is under   /usr/ports directory.\n %  for I in /usr/ports/games/*/pkg-descr&gt; do&gt; echo ${I}&gt; echo&gt; cat ${I}&gt; echo&gt; echo&gt; echo&gt; done \\&gt; | grep \\&gt; --color=always \\&gt; -A 100 \\&gt; -E &#34;^/usr/ports/games/.*/pkg-descr&#34; \\&gt; | less -R\n  %  for I in /usr/ports/games/*/pkg-descr; do echo ${I}; echo; cat ${I}; echo; echo; echo; done | grep --color=always -A 100 -E &#34;^/usr/ports/games/.*/pkg-descr&#34; | less -R\n       Lets start with the most simple games \u2013 the text games played in terminal. I play only two of these and they are   2048 and   ctris games.\n The   2048 is generally a single C file \u2013   2048.c \u2013 from here \u2013  https://github.com/mevdschee/2048.c/blob/master/2048.c \u2013 you need to compile it with the   cc(1) command \u2013 like that.\n   The other one   ctris is available in the FreeBSD Ports or you can add it by package with   pkg(8) command.\n   There are also several other terminal games like  Tetris in the FreeBSD Ports \u2013 they are   bsdtris or   vitetris ones for example.\n  The are also terminal \u2018non-interactive\u2019 games (or maybe I should call them terminal screensavers alternatively).\n My favorite two are   cmatrix and   pipes. The first one is available from FreeBSD Ports.\n    Some time ago I \u2018ported\u2019 or should I say modified the   pipes so it will work properly on FreeBSD and its available from \u2013  https://github.com/vermaden/pipes/blob/master/pipes.sh \u2013 here.\n     One of the better open source games it the  Battle for Wesnoth which is also available in the FreeBSD Ports so adding package it easy.\n     Most AMIGA games have been ported to DOS and its generally more convenient and a lot faster to play the DOS \u2018ports\u2019 using   dosbox(1) instead of playing their original AMIGA versions under   fs-uae(1) emulator. Some games like  Sensible World of Soccer are better in original AMIGA version (little larger field view for example in the AMIGA version \u2013 but that only makes the DOS game little harder as you see less) then in DOS port but still the difference is not that huge to wait for each game start roughly 60 seconds with   fs-uae(1) and manually switching virtual floppies.\n  As you can see on the far right the  Sensible World of Soccer game has been even ported to the Microsoft XBOX console \u2013 SWOS \u2013 available here \ud83d\ude42\n There is however (at least) one AMIGA game that has not been ported to DOS and its made by the legendary TEAM17 studio. Its the  All Terrain Racing game. When you check its reviews back when it was released it did not get that high scores as  Sensible World of Soccer for example but its one of the better looking and fun racing games made for AMIGA. But  Sensible World of Soccer was named one of   The 10 Most Important Video Games of All Time on 2007 so it really hard to beat that. Even  Sensible Gold got a lot worse reviews.\n  Originally it came in two floppies version so everytime you will launch this game in   fs-uae(1) you will need to change the virtual floppy \u2026 which is real PITA I must say \u2026 not to mention 60 seconds of waiting for it to start. But there is other possibility. The  All Terrain Racing game was also created for the AMIGA CD32 variant which used CD-ROM discs instead of floppies. That way by loading single ISO file you do not need to switch floppies anymore each time the game starts. Yay!\n Fortunately the   fs-uae(1) config for  All Terrain Racing game is not long or complicated either.\n    As the  All Terrain Racing game is started/loaded from ISO file the save/load game state is not made \u2018natively\u2019 in the game but level up above \u2013 in the   fs-uae(1) itself with  SAVE STATE and  LOAD STATE options as shown below.\n  Not all AMIGA games are available as CD32 version but one may also use virtual  Hard Disk option on the   fs-uae(1) emulator to avoid switching floppies.\n   The DOS games can be very conveniently played by using the DOSBox which is available on FreeBSD as   dosbox packages (or port).\n  Games in DOSBox start very quickly which is very nice. They also run very smoothly.\n  Like you see I prefer to keep my games outside of the   ~/.doxbox directory while keeping only configuration files there. But that is just \u2018organizational\u2019 choice. Make your own choices how and where to keep the games that suits you best.\n Its also very convenient to redefine all keyboard shortcuts with DOSBox builtin keyboard remapper. For example instead of default  [CTRL] for \u2018FIRE\u2019 button in  Sensible World of Soccer I prefer to use  [Z] key instead and that is my only mapping currently.\n  Keep in mind that as the DOSBox main config file is kept as   ~/.dosbox/dosbox-${VERSION}.conf file (its   ~/.dosbox/dosbox-0.74-3.conf as of time of writing the article) the remapped keyboard shortcuts as kept in the   ~/.dosbox/mapper-${VERSION}.map file (its   ~/.dosbox/mapper-0.74-3.map as of time of writing the article). Also keep in mind that if you will start   dosbox in ~ (home) dir and not in   ~/.dosbox~dir then   dosbox will creates   ~/mapper-0.74-3.map file (in your home dir) instead of proper   ~/.dosbox/mapper-0.74-3.map place.\n I also made script wrappers for each game so I can launch them quickly both from command line or by using   dmenu.\n  You will find them all as   games-* scripts in my  GitHub repository \u2013  https://github.com/vermaden/scripts \u2013 available here. The DOSBox configuration files are in the   dosbox dir on the same repo \u2013  https://github.com/vermaden/scripts/tree/master/dosbox \u2013 here.\n My favorite DOS (originally from AMIGA) game is  Sensible World of Soccer. I also like to play first  Settlers game and  Theme Hospital occasionally.\n The DOSBox also allows you to easily record both audio (into WAV files) and video (into AVI files) with keyboard shortcuts.\n For example I have recorded replay of my  Sensible World of Soccer goals this way (then converted it to GIF using   ffmpeg(1) for this).\n  This is the   ffmpeg(1) spell that I used to convert the DOSBox made AVI file to GIF file.\n  Keep in mind that some games \u2013 and  Sensible World of Soccer is one of these games \u2013 have more then one graphical mode to run them. When you start the game without any switches then it starts in low graphics mode which is ways to spot on by looking at pixelated/dotted \u2018 S\u2018 logo on the top right corner. The lines on the field are also not antialiased.\n  When you add   /f flag to the  Sensible World of Soccer binary then it starts in full graphics mode and the \u2018 S\u2018 letter has now solid grey color on the back and lines on the field are also antialiased now.\n   The  Sensible World of Soccer has a special place in my private games \u2018Hall of Fame\u2019. Its the only game that I was able to play straight for 26 hours with breaks only for meals and pee \u2026 but that was in the old AMIGA times in the 90s.\n  One of the very old but also very nice logic games I played two decades ago was  Swing game. I was not able to start this game in \u2018normal\u2019 mode as it started in \u2018network\u2019 mode each time. While searching for a possible solution I found \u2026 my own bug on DOSBox created  14 years ago \u2013  https://www.dosbox.com/comp_list.php?showID=2499 \u2013 here. I was not able to force the  Swing game to start in \u2018normal\u2019 mode back then so I \u2018marked\u2019 it as \u2018non working\u2019 and moved on.\n Now when I checked the bug report I see useful solutions to the problem. Pity I am not able to login and \u2018thank\u2019 as I do not remember my password and DOSBox page does not offer password reset service.\n Seems that  Swing needs to have its game directory mounted again as CD-ROM device. That way  Swing starts in \u2018normal\u2019 mode and local Single and Multi Player games are now possible.\n     Good old WINE. On FreeBSD there are two WINE versions. There is 64bit version as   emulators/wine package and 32bit version names   emulators/i386-wine. You want to use the latter because most games are 32bit and the 64bit version of WINE is not able to run them 32bit games. The installation on FreeBSD is typical as shown below.\n  Old/classic Windows games usually keep your saved games directly in their installation folders under dirs named \u2018SAVE\u2019 or \u2018SAVEDGAMES\u2019 but in some time between 2005 and now the game developers started to think that its a \u2018great\u2019 idea to store them in your \u2018My Documents\u2019 directory \u2026 I do not have to tell you how I fell about that \u2018decision\u2019 but on FreeBSD it means that you will have saved games directories created directly in your ~ home directory (its   /home/vermaden in my case) directory. What a mess.\n  That is probably the only thing I configure in WINE on FreeBSD with   winecfg \u2013 I set \u2018My Documents\u2019 location to   ~/games.EXTRACT/profile directory instead.\n The DOSBox is also better for gaming then WINE because it allows convenient  [ALT]+[ENTER] shortcut to switch between fullscreen and windowed modes. With WINE I need to keep two game \u2018startup\u2019 scripts. Separate ones for  windowed mode and for  fullscreen mode.\n    My best time for  Stage 1 on  Italy was \u2018only\u2019 2:09.84 so I was not fast enough to beat the all time best with 2:05:75 immortalized here \u2013  https://youtu.be/iLLMIJzpoVk \u2013 on YouTube.\n Other classic \u2013 original  Baldur\u2019s Gate game below. It was possible to dual class into specialist mage \u2013 not possible now in  Enhanced Edition.\n    Less popular titles like  Lionheart: Legacy of the Crusader also work well under WINE on FreeBSD. Very unusual game as it used the S.P.E.C.I.A.L system from  Fallout instead of \u2018typical\u2019 choice like  Advanced Dungeons and Dragons like in other  Black Isle games.\n  If for some reason your game does not work under WINE on FreeBSD then you should try   Project Homura solution. Its also available as   games/homura package (or port) on FreeBSD.\n  As I really hate Adobe Flash technology when browsing the web pages but I quite like the compact SWF files as simple flash games using WINE and  Flash Player Projector from Adobe. I also use WINE to start the Windows version of that  Flash Player Projector program. Its available here \u2013  https://www.adobe.com/support/flashplayer/debug_downloads.html \u2013 in the debug downloads.\n   An example of  Governor of Poker 2 game running in the  Flash Player Projector under WINE.\n  All of these games can be found on various sites Flash games by looking in the  View Page Source in your browser and looking for the link to the SWF file. I can not post these games here for download but if you will have problem finding them then let me know \ud83d\ude42\n  A class of games that are played directly in the web browser. Examples of such games can be   Krunker \u2026\n    If you are VERY bored then you can also try the  Chrome Dinosaur Game built into the  Chromium browser. To access it try to open the page that does not exists like  http://non-existing-site.com for example.\n  The  Chromium browser will then display  No Internet error message. Press  [UP] arrow now and start to play.\n  If you liked the  2048 game and you DO have Internet connection you may also play  2048 directly at   DuckDuckGo page.\n   Sometimes WINE does not work and the game is available only for Windows or Linux. The solution is to use the  Virtualbox here. Remember to select/enable the 3D acceleration and install  Virtualbox Guest Additions for good performance.\n   All of these games were played smoothly on oldschool  Intel HD Graphics 3000 card from 2011 Sandy Bridge CPU model i7-2820QM as this is with what my  ThinkPad W520 came.\n If I forgot to post something or its not obvious then feel free to let me know. This post as usual grow more then it should \ud83d\ude42 Also if you think that I missed some important   dosbox(1)/  wine(1)/  fs-uae(1) options then let me know please.", "posttime": "2020-10-15 06:06:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u8001\u5f0f,gaming", "title": "FreeBSD\u4e0a\u7684\u8001\u5f0f\u6e38\u620f", "title_en": "Oldschool Gaming on FreeBSD", "transed": 1, "url": "https://vermaden.wordpress.com/2020/10/14/oldschool-gaming-on-freebsd/", "via": "", "real_tags": ["\u6e38\u620f", "\u8001\u5f0f", "gaming"]}, {"category": "", "categoryclass": "", "imagename": "9438fbac79b2cbad82a805d71ec1d152.png", "infoid": 1028911, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e00\u76f4\u5728\u5f00\u53d1\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u7684\u6838\u5fc3\u662f\u5b58\u50a8\u5927\u91cf\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4e3b\u8981\u662f\u901a\u8fc7\u4f7f\u7528\u5916\u952e\u548c\u65f6\u95f4\u6233\u5b57\u6bb5\u6765\u7ec4\u7ec7\u7684\u3002\u8868\u81ea\u5df1\u7684\u4e3b\u952e\u662f\u57fa\u4e8eUUID\u7684\uff0c\u5c06\u5916\u952e\u4e0e\u5355\u4e2a\u8bb0\u5f55\u672c\u8eab\u7684UUID\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u5b83\u6709\u4e00\u4e2a\u4f7f\u7528JSONB\u7c7b\u578b\u7684\u4e3b\u6570\u636e\u5b57\u6bb5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u6570\u636e\u3002\u8be5\u8868\u53ef\u4ee5\u770b\u5230\u9891\u7e41\u7684\u3001\u5b9a\u671f\u7684\u63d2\u5165\u548c\u5468\u671f\u6027\u7684\u5220\u9664\uff0c\u65e7\u6570\u636e\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5f97\u7a00\u758f\uff0c\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5916\u952e\uff0c\u53ef\u80fd\u4f1a\u6709\u6570\u4e07\u6761\u8bb0\u5f55\u5206\u5e03\u5728\u6570\u5341\u4e07\u6761\u8bb0\u5f55\u4e2d\uff0c\u6216\u8005\u5bf9\u4e8e\u5176\u4ed6\u5916\u952e\uff0c\u53ef\u80fd\u4f1a\u6709\u6570\u767e\u4e07\u6761\u5176\u4ed6\u8bb0\u5f55\u3002\n\u8fd9\u4e00\u5207\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5f53\u5f00\u59cb\u7f16\u5199\u4ece\u8be5\u8868\u751f\u6210\u6570\u636e\u56fe\u7684\u4ee3\u7801\u65f6\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u96be\u9898\u3002\n\u5982\u4f55\u786e\u4fddAPI\u4e0d\u4f1a\u8fd4\u56de\u592a\u591a\u6570\u636e\u5462\uff1f\u6570\u636e\u70b9\u8fc7\u591a\u53ea\u610f\u5473\u7740\u53d1\u9001\u7684\u6570\u636e\u6bd4\u7528\u6237\u53ef\u80fd\u9700\u8981\u7684\u8981\u591a\uff0c\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u7ed8\u56fe\u5de5\u5177\u4e0d\u5f97\u4e0d\u5904\u7406\u6bd4\u5b83\u60f3\u8981\u7684\u66f4\u591a\u7684\u6570\u636e\uff0c\u4ee5\u83b7\u5f97\u5feb\u901f\u3001\u54cd\u5e94\u7684\u6027\u80fd\u3002\n\u5982\u4f55\u624d\u80fd\u9ad8\u6548\u5730\u67e5\u627e\u6570\u636e\u800c\u4e0d\u8fd0\u884c\u67e5\u8be2\u5219\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u5462\uff1f\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6570\u636e\u7531API\u8fd4\u56de\u5230\u57fa\u4e8eReaction\u7684\u524d\u7aef\uff0c\u800cSnappy\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u53d6\u51b3\u4e8eSnappy API\u7684\u6027\u80fd\u3002\n\u5728\u5e94\u7528\u7a0b\u5e8f\u5386\u53f2\u7684\u65e9\u671f\uff0c\u6211\u5f97\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u6211\u5bf9\u8981\u67e5\u8be2\u7684\u6570\u636e\u70b9\u6570\u91cf\u6709\u4e00\u4e2a\u6700\u5927\u4e0a\u9650\uff0c\u6bd4\u5982500\u4e2a\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u67e5\u8be2\u4e0e\u67e5\u8be2\u5339\u914d\u7684\u8bb0\u5f55\u603b\u6570\uff0c\u7136\u540e\u4e00\u4e2a\u5c0f\u6574\u6570\u9664\u6cd5\u4f1a\u7ed9\u6211\u4e00\u4e2a\u67e5\u8be2\u65f6\u4f7f\u7528\u7684\u95f4\u9694\u3002\n\u4e00\u65e6\u786e\u5b9a\u4e86\u8bb0\u5f55\u8ba1\u6570\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u7528\u4e8e\u67e5\u8be2\u8bb0\u5f55\u6837\u672c\u7684\u95f4\u9694\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u67095000\u4e2a\u6570\u636e\u70b9\uff0c\u6211\u60f3\u8981\u5bf9\u5176\u4e2d\u7684500\u4e2a\u6570\u636e\u70b9\u8fdb\u884c\u91c7\u6837\uff0c\u90a3\u4e48\u6211\u9700\u8981\u6bcf10\u6761\u8bb0\u5f55\u8fdb\u884c\u4e00\u6b21\u67e5\u8be2\u3002\u8981\u627e\u5230\u90a3\u4e2a\u95f4\u9694\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\uff1a\n\u4e00\u65e6\u6709\u4e86\u95f4\u9694\uff0cPostgreSQL\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u6280\u672f\u6765\u9009\u62e9\u8be5\u95f4\u9694\u4e0a\u7684\u8bb0\u5f55\u3002ROW_NUMBER()\u662f\u4e00\u4e2a\u7a97\u53e3\u51fd\u6570\uff0c\u5b83\u4e3a\u7ed3\u679c\u96c6\u4e2d\u7684\u6bcf\u4e00\u884c\u5206\u914d\u4e00\u4e2a\u5e8f\u5217\u53f7\u3002\u4e00\u65e6\u4e3a\u6bcf\u6761\u8bb0\u5f55\u5206\u914d\u4e86\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\u53f7\uff0c\u5c31\u53ef\u4ee5\u5728WHERE\u5b50\u53e5\u4e2d\u4f7f\u7528\u8be5\u7f16\u53f7\u3002\n\u8fd9\u62db\u594f\u6548\u4e86\uff01\u5f53\u60a8\u5e0c\u671b\u4ece\u67d0\u4e2a\u7ed3\u679c\u96c6\u4e2d\u9009\u62e9\u6bcf\u7b2cn\u6761\u8bb0\u5f55\uff0c\u5e76\u4e14\u5e0c\u671b\u8ba9\u6570\u636e\u5e93\u800c\u4e0d\u662f\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u6267\u884c\u5de5\u4f5c\u65f6\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u884c\u7684\u901a\u7528\u6280\u672f\u3002\u4e0e\u5c06\u6240\u6709\u6570\u636e\u653e\u5165\u5e94\u7528\u7a0b\u5e8f\u5e76\u4f7f\u5176\u8d1f\u8d23\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u548c\u4fee\u526a\u4e0d\u9700\u8981\u7684\u884c\u76f8\u6bd4\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u8fd9\u6837\u7684\u6570\u636e\u7ba1\u7406\u51e0\u4e4e\u603b\u662f\u66f4\u5feb\u3001\u5360\u7528\u7684\u8d44\u6e90\u66f4\u5c11\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u6709\u51e0\u4e2a\u6027\u80fd\u95ee\u9898\uff0c\u5f53\u8868\u5f00\u59cb\u663e\u7740\u589e\u957f\u65f6\uff0c\u8fd9\u4e9b\u95ee\u9898\u5c31\u4f1a\u53d8\u5f97\u660e\u663e\u3002\n\u9996\u5148\uff0c\u62c9\u8ba1\u6570\u5e76\u4e0d\u4fbf\u5b9c\u3002MySQL\u7ef4\u62a4\u8868\u7684\u5168\u5c40\u8bb0\u5f55\u8ba1\u6570\uff0c\u4f5c\u4e3a\u5176MyISAM\u6570\u636e\u683c\u5f0f\u7684\u4e00\u90e8\u5206\u3002\u7136\u800c\uff0cPostgreSQL\u5bf9\u5176\u8868\u4f7f\u7528\u4e86\u4e00\u79cd\u79f0\u4e3a\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\u7b56\u7565\uff0c\u8fd9\u5b9e\u8d28\u4e0a\u610f\u5473\u7740\u6570\u636e\u5e93\u7684\u4e0d\u540c\u89c6\u56fe\u53ef\u80fd\u4f1a\u770b\u5230\u4e0d\u540c\u7684\u884c\u96c6\u3002\u56e0\u6b64\uff0c\u6ca1\u6709\u5355\u4e00\u7684\u3001\u7b80\u5355\u7684\u8bb0\u5f55\u8ba1\u6570\u53ef\u4f9b\u5b83\u4f9d\u9760\u3002\u56e0\u6b64\uff0c\u5f53\u60a8\u5728PostgreSQL\u4e2d\u5bf9\u8868\u4e2d\u7684\u8bb0\u5f55\u8fdb\u884c\u8ba1\u6570\u65f6\uff0c\u6570\u636e\u5e93\u9700\u8981\u5b9e\u9645\u904d\u5386\u6570\u636e\u5e76\u5bf9\u6240\u6709\u53ef\u89c1\u8bb0\u5f55\u8fdb\u884c\u8ba1\u6570\u3002\n\u5982\u679c\u60a8\u53ea\u662f\u60f3\u4f30\u8ba1\u8868\u4e2d\u7684\u603b\u884c\u6570\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u975e\u5e38\u4fbf\u5b9c\u5730\u83b7\u5f97\uff1a\n\u4f46\u662f\uff0c\u5f53\u60a8\u53ea\u60f3\u8ba1\u7b97\u8bb0\u5f55\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u5e76\u4e14\u8be5\u503c\u53ea\u662f\u4e00\u4e2a\u4f30\u8ba1\u503c\u65f6\uff0c\u8fd9\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\u3002\u8fd9\u662f\u67e5\u8be2\u89c4\u5212\u5668\u4f7f\u7528\u7684\u4f30\u8ba1\u503c\uff0c\u56e0\u6b64\u5b83\u901a\u5e38\u5e94\u8be5\u59cb\u7ec8\u5728\u5b9e\u9645\u503c\u768410%\u5de6\u53f3\uff0c\u4f46\u5b83\u4e0d\u592a\u53ef\u80fd\u5b8c\u5168\u5339\u914d\uff0c\u9664\u975e\u8868\u5927\u5c0f\u66f4\u6539\u5f88\u5c11\u3002\u8fd8\u6709\u5176\u4ed6\u8ba1\u6570\u7b56\u7565\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u6743\u8861\u6216\u56fa\u6709\u7684\u4e0d\u51c6\u786e\u6027\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6b64\u7528\u4f8b\uff0c\u4ec5\u4e3a\u4e86\u5728\u8ba1\u7b97\u6240\u9700\u7684\u67e5\u8be2\u95f4\u9694\u65f6\u83b7\u5f97\u8981\u4f7f\u7528\u7684\u8bb0\u5f55\u8ba1\u6570\u662f\u65e0\u6cd5\u56de\u907f\u7684\u524d\u671f\u65f6\u95f4\u548c\u8d44\u6e90\u6210\u672c\u3002\n\u8be5\u6280\u672f\u7684\u7b2c\u4e8c\u4e2a\u5f00\u9500\u90e8\u5206\u662f\u5728WHERE\u5b50\u53e5\u4e2d\u7ed3\u5408\u4f7f\u7528ROW_NUMBER()\u548c\u6a21\u6570(%)\u3002\u8fd9\u610f\u5473\u7740\u6570\u636e\u5e93\u5728\u8fd0\u884c\u67e5\u8be2\u65f6\u5fc5\u987b\u904d\u5386\u6bcf\u6761\u53ef\u80fd\u7684\u8bb0\u5f55\uff0c\u4ee5\u4fbf\u627e\u51fa\u54ea\u4e9b\u8bb0\u5f55\u6ee1\u8db3WHERE\u5b50\u53e5\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6709150000\u6761\u8bb0\u5f55\uff0c\u4f46\u4e00\u4e2a\u4eba\u53ea\u60f3\u8981\u5176\u4e2d\u7684500\u6761\uff0c\u90a3\u4e48\u6240\u6709150000\u6761\u8bb0\u5f55\u4ecd\u5c06\u88ab\u626b\u63cf\u3002\n\u8fd9\u4e9b\u56e0\u7d20\u52a0\u5728\u4e00\u8d77\uff0c\u4f7f\u5f97\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u4f5c\u4e3a\u9a71\u52a8UI\u7684API\u7684\u4e00\u90e8\u5206\u7279\u522b\u8fd0\u884c\u7684\u67e5\u8be2\u6765\u8bf4\u53d8\u5f97\u5f02\u5e38\u7f13\u6162\u3002\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u5148\u524d\u6280\u672f\u5728\u771f\u5b9e\u6570\u636e\u5e93\u4e0a\u8fdb\u884c\u67e5\u8be2\u7684\u771f\u5b9e\u793a\u4f8b\uff0c\u5e76\u4e14\u6b64\u793a\u4f8b\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u5b83\u4f7f\u7528\u7684\u7d22\u5f15(\u8de8\u6570\u636e\u5b57\u6bb5\u7684BTREE\u7d22\u5f15\uff0c\u56e0\u4e3a\u5728\u751f\u4ea7\u4e2d\uff0c\u6211\u4eec\u5c06\u7ed3\u679c\u9650\u5236\u4e3a\u5177\u6709\u4e00\u79cd\u7279\u5b9a\u7c7b\u578b\u6570\u636e\u7684\u5b57\u6bb5)\u5728\u6211\u8fd0\u884c\u6b64\u793a\u4f8b\u65f6\u5df2\u7ecf\u9884\u70ed\u5e76\u7f13\u5b58\u5728\u6570\u636e\u5e93\u7684\u5de5\u4f5c\u96c6\u4e2d\uff0c\u56e0\u6b64\u6b64\u7ed3\u679c\u662f\u6b64\u6280\u672f\u5728\u6b64\u6570\u636e\u5e93\u4e0a\u7684\u6700\u4f73\u60c5\u51b5\u3002\u5982\u679c\u8be5\u7d22\u5f15\u4e0d\u53ef\u7528\u6216\u672a\u4f7f\u7528\uff0c\u8003\u8651\u5230\u8be5\u7d22\u5f15\u7b5b\u9009\u5668\u62d2\u7edd\u4e86\u8fd1180,000\u884c\uff0c\u5219\u901f\u5ea6\u4f1a\u66f4\u6162\u3002\u8fd9\u592a\u6162\u4e86\uff0c\u4e0d\u80fd\u901a\u8fc7API\u8bf7\u6c42\u76f4\u63a5\u89e6\u53d1\uff0c\u56e0\u4e3a\u7528\u6237\u5c06\u7b49\u5f85\u534a\u5206\u949f\uff0c\u624d\u80fd\u8ba9\u6570\u636e\u5f00\u59cb\u663e\u793a\u5728\u4ed6\u4eec\u7684\u6d4f\u89c8\u5668\u4e2d\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0cPostgreSQL\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u6027\u80fd\u9009\u9879\u6765\u91c7\u6837\u8868\u4e2d\u7684\u968f\u673a\u6570\u636e\u96c6\u3002\u53ef\u4ee5\u5c06TABLESAMPLE\u5b50\u53e5\u653e\u5728\u67e5\u8be2\u7684FROM\u90e8\u5206\u4e2d\uff0c\u8be5\u67e5\u8be2\u5c06\u5bf9\u8868\u7684\u5b50\u96c6\u8fdb\u884c\u91c7\u6837\u3002\n\u8fd9\u5c06\u8fd4\u56de\u5927\u7ea65%\u7684MyTable\u884c\u7684\u5927\u81f4\u968f\u673a\u96c6\u5408\u3002\u5982\u679c\u9700\u8981\u7279\u5b9a\u7684\u884c\u6570\uff0c\u6709\u4e00\u4e2a\u6269\u5c55\u53ef\u4ee5\u63d0\u4f9b\uff0c\u5373TSM_SYSTEM_ROWS\u3002\n\u8fd9\u5c06\u4ece\u8868\u4e2d\u8fd4\u56de500\u884c\u7684\u968f\u673a\u96c6\u5408\u3002\u53ef\u4ee5\u5728\u4f7f\u7528TABLESAMPLE\u7684\u67e5\u8be2\u4e2d\u4f7f\u7528WHERE\u5b50\u53e5\uff0c\u4ee5\u4fbf\u53ea\u9009\u62e9\u611f\u5174\u8da3\u7684\u884c\uff0c\u4f46TABLESAMPLE\u5728WHERE\u5b50\u53e5\u4e4b\u524d\u5e94\u7528\uff0c\u8fd9\u4f7f\u5f97\u6b64\u65b9\u6cd5\u4e0d\u9002\u5408\u6211\u7684\u7528\u4f8b\u3002\u4f8b\u5982\uff1a\n\u8fd9\u5c06\u9996\u5148\u4ece\u6574\u4e2a\u6570\u636e\u96c6\u4e2d\u9009\u62e9500\u4e2a\u968f\u673a\u884c\uff0c\u7136\u540e\u5c1d\u8bd5\u4ece\u8be5\u96c6\u4e2d\u67e5\u627e\u4e0eWHERE\u5b50\u53e5\u5339\u914d\u7684\u8bb0\u5f55\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67e5\u8be2\u53ea\u8fd4\u56de\u975e\u5e38\u5c11\u4e14\u76f8\u5f53\u4e0d\u53ef\u9884\u6d4b\u7684\u5b9e\u9645\u9700\u8981\u7684\u6570\u636e\u884c\u6570\u3002\u6b64\u5916\uff0c\u56e0\u4e3a\u8bb0\u5f55\u662f\u968f\u673a\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e2d\u5747\u5300\u5206\u5e03\u3002\u5982\u679c\u51fa\u4e8e\u7edf\u8ba1\u539f\u56e0\u67e5\u8be2\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u5f88\u597d\uff0c\u4f46\u5f53\u4e3a\u56fe\u8868\u63d0\u53d6\u6570\u636e\u65f6\uff0c\u8fd9\u5e76\u4e0d\u7406\u60f3\u3002\n\u56e0\u6b64\uff0c\u867d\u7136TABLESAMPLE\u53ef\u80fd\u662f\u5728\u6574\u4e2a\u8868\u4e2d\u9009\u62e9\u968f\u673a\u8bb0\u5f55\u96c6\u7684\u4e00\u79cd\u975e\u5e38\u5feb\u901f\u7684\u65b9\u6cd5\uff0c\u4f46\u5f53\u6211\u4eec\u9700\u8981\u4e00\u7ec4\u5747\u5300\u5206\u5e03\u4e8e\u6574\u4e2a\u6570\u636e\u96c6\u7684\u884c\uff0c\u800c\u53ea\u9488\u5bf9\u8868\u603b\u6570\u636e\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u6211\u4eec\u5e0c\u671b\u5bf9\u5176\u9009\u62e9\u7684\u884c\u6570\u6709\u4e00\u4e9b\u53ef\u9884\u6d4b\u7684\u63a7\u5236\u65f6\uff0c\u5b83\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002\n\u5f53\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u968f\u673a\u9009\u62e9\u8868\u884c\u65f6\uff0c\u8fd8\u6709\u5176\u4ed6\u53ef\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5bf9\u4e8e\u9009\u62e9N\u4e2a\u6216\u63a5\u8fd1N\u4e2a\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u70b9\uff0c\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u4e2d\u6ca1\u6709\u4e00\u4e2a\u7279\u522b\u6709\u7528\uff0c\u5e76\u4e14\u4ece\u4e2d\u53ef\u4ee5\u627e\u5230\u7684\u7075\u611f\u6709\u9650\u3002\n\u4f5c\u4e3a\u5feb\u901f\u6982\u8ff0\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u53ea\u5728WHERE\u5b50\u53e5\u4e2d\u63d2\u5165\u4e0e\u968f\u673a\u6570\u7684\u6bd4\u8f83\uff1a\n\u8fd9\u5c06\u9009\u62e9\u603b\u884c\u7684\u5927\u7ea610%\uff0c\u4f46\u5b83\u9700\u8981\u5168\u8868\u626b\u63cf\u3002\u5982\u679c\u9700\u8981\u7279\u5b9a\u6570\u91cf\u7684\u968f\u673a\u884c\uff0c\u53ef\u4ee5\u5728ORDER BY\u5b50\u53e5\u4e2d\u4f7f\u7528\u968f\u673a\u5316\u6765\u5b9e\u73b0\u3002\u8fd9\u8981\u6162\u5f97\u591a\uff0c\u7279\u522b\u662f\u5728\u5927\u8868\u4e0a\uff0c\u56e0\u4e3a\u5168\u8868\u626b\u63cf\u4e4b\u540e\u662f\u67d0\u79cd\u6574\u8868\u626b\u63cf\uff0c\u4f46\u5b83\u786e\u5b9e\u53ef\u4ee5\u5de5\u4f5c\uff1a\n\u5982\u679c\u8868\u4f7f\u7528\u9012\u589e\u7684\u6574\u6570\u4e3b\u952e\u8fdb\u884c\u7d22\u5f15\uff0c\u5e76\u4e14\u952e\u4e2d\u6ca1\u6709\u592a\u591a\u95f4\u9699\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528ID\u8303\u56f4\u5185\u751f\u6210\u7684\u968f\u673a\u6570\u5e8f\u5217\u6765\u6267\u884c\u76f8\u5f53\u5feb\u901f\u7684\u968f\u673a\u8bb0\u5f55\u9009\u62e9\u3002\n\u5982\u679c\u9065\u6d4b\u8868\u4f7f\u7528\u6574\u6570\u4e3b\u952e\u7f16\u5236\u7d22\u5f15\uff0c\u5e76\u4e14\u5b83\u6709650000\u6761\u8bb0\u5f55\uff0c\u51e0\u4e4e\u6ca1\u6709\u95f4\u9699(\u6ca1\u6709\u5220\u9664\u4efb\u4f55\u5757)\uff0c\u5219\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u904d\u5386\u751f\u6210\u7684\u4e00\u7cfb\u5217\u6574\u6570\uff0c\u5e76\u5c06\u751f\u6210\u4e00\u7ec4\u4ecb\u4e8e1\u5230650000\u4e4b\u95f4\u7684\u4e0d\u540c\u7684\u968f\u673a\u6574\u6570\u3002\u60a8\u53ef\u4ee5\u5c06FROM\u5b50\u53e5\u4e2d\u7684\u4ee3\u7801\u89c6\u4e3a\u751f\u6210\u968f\u673a\u6570\u7ec4\u7684for\u5faa\u73af\u7684SQL\u7248\u672c\u3002\u7136\u540e\uff0c\u8fde\u63a5\u5c06\u8fd9\u4e9b\u6570\u5b57\u7528\u4f5c\u8bb0\u5f55ID\uff0c\u5b83\u5c06\u8fd4\u56de\u9650\u5236\u4e3a500\u6761\u8bb0\u5f55\u7684\u6700\u7ec8\u96c6\u5408\u3002\u6211\u4eec\u62c9\u51fa500\u6761\u4ee5\u4e0a\u7684\u8bb0\u5f55\uff0c\u4ee5\u9632\u51fa\u73b0\u4e00\u4e9b\u7f3a\u53e3\uff0c\u4ee5\u907f\u514d\u627e\u4e0d\u5230500\u6761\u8bb0\u5f55\u3002\u8003\u8651\u5230\u5df2\u7ecf\u63d0\u5230\u7684\u6ce8\u610f\u4e8b\u9879\uff0c\u6b64\u6280\u672f\u975e\u5e38\u5feb\u901f\uff0c\u867d\u7136\u5b83\u4e0d\u80fd\u5e94\u7528\u4e8e\u4f7f\u7528UUID\u7d22\u5f15\u7684\u8868\u7684\u60c5\u51b5\uff0c\u4f46\u6211\u8ba4\u4e3a\u53ef\u4ee5\u63a8\u5e7f\u6b64\u5b9e\u73b0\u601d\u60f3\u4e2d\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u4ee5\u63d0\u4f9b\u9002\u7528\u4e8e\u65f6\u95f4\u7d22\u5f15\u6570\u636e\u7684\u975e\u5e38\u5feb\u901f\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u5f97\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5728\u51e0\u6beb\u79d2\u5185\u8fd4\u56de\u8868\u4e2d\u67d0\u4e2a\u6570\u636e\u5b50\u96c6\u7684\u65f6\u95f4\u5206\u5e03\u6837\u672c\u3002\u5b83\u5229\u7528PostgreSQL\u901a\u8fc7\u51fd\u6570\u751f\u6210\u7cfb\u5217\u6570\u636e\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u5728\u6784\u5efa\u67e5\u8be2\u65f6API\u670d\u52a1\u5668\u5185\u90e8\u7684\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u67e5\u8be2\uff0c\u8be5\u67e5\u8be2\u5728\u6b63\u786e\u7d22\u5f15\u540e\uff0c\u5c06\u975e\u5e38\u5feb\u901f\u5730\u8fd4\u56de\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u53d6\u51b3\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u6240\u6709\u8bb0\u5f55\u90fd\u5e26\u6709\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u8be5\u65f6\u95f4\u6233\u4fdd\u7559\u4e86\u5b83\u4eec\u5728\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6570\u636e\u5e93\u672c\u8eab\u53ef\u4ee5\u751f\u6210\u4e00\u7cfb\u5217\u5747\u5300\u5206\u5e03\u5728\u6574\u4e2a\u6570\u636e\u8303\u56f4\u5185\u7684\u65f6\u95f4\u6233\uff0c\u5219\u67e5\u8be2\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u65f6\u95f4\u6233\u548c\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6233\u4e4b\u95f4\u7684\u95f4\u9694\u884c\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e00\u7ec4\u884c\u6570\u4e0d\u8d85\u8fc7\u6240\u9700\u7684\u6700\u5927\u503c\u96c6\uff0c\u4f46\u5982\u679c\u95f4\u9694\u592a\u5c0f\u800c\u65e0\u6cd5\u5728\u6bcf\u4e2a\u884c\u5185\u67e5\u627e\u6570\u636e\uff0c\u5219\u884c\u6570\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u5e76\u4e14PostgreSQL\u5904\u7406\u6b64\u67e5\u8be2\u7684\u901f\u5ea6\u5feb\u5f97\u51fa\u5947\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u4ece2020-09-01 00\uff1a00\uff1a00\uff1a00\u52302020-09-15 23\uff1a59\uff1a59\u671f\u95f4\u7684500\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u70b9\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u662f\u8ba1\u7b97\u51fa\u5728\u8fd9\u4e9b\u5f00\u59cb\u65f6\u95f4\u6233\u548c\u7ed3\u675f\u65f6\u95f4\u6233\u4e4b\u95f4\u9700\u8981\u591a\u5c11\u95f4\u9694\u624d\u80fd\u83b7\u5f97500\u6b65\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff1a\n\u6b64\u65b9\u6cd5\u5229\u7528PostgreSQL Generate_Series()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u83b7\u53d6\u8d77\u59cb\u503c\u3001\u7ed3\u675f\u503c\u548c\u95f4\u9694\uff0c\u5e76\u4ece\u5b83\u4eec\u751f\u6210\u4e00\u7ec4\u503c\u3002\n\u4f46\u662f\uff0cPostgreSQL\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u4fbf\u7684\u673a\u5236\u6765\u7ed5\u8fc7\u5b50\u67e5\u8be2\u7684\u8fd9\u4e00\u9650\u5236\u3002PostgreSQL\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9a\u4e49\u540c\u65f6\u5305\u542bJSONB\u548c\u6ca1\u6709\u65f6\u533a\u5b9e\u4f53\u7684\u65f6\u95f4\u6233\u7684\u7c7b\u578b\uff0c\u5bf9\u4e8e\u4e0a\u9762\u9047\u5230\u7684\u9650\u5236\u800c\u8a00\uff0c\u8fd9\u5c06\u88ab\u89c6\u4e3a\u5355\u4e2a\u6570\u636e\u9879\u3002\n\u7136\u540e\uff0c\u53ef\u4ee5\u91cd\u5199\u67e5\u8be2\u4ee5\u8fd4\u56de\u6b64\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5355\u4e2a\u5b9e\u4f8b\uff0c\u4ece\u800c\u6d88\u9664\u9519\u8bef\u5e76\u4f7f\u5176\u6309\u9884\u671f\u5de5\u4f5c\u3002\n\u5f53\u9488\u5bf9\u4e0e\u539f\u59cb\u7684\u57fa\u4e8erow_number()\u7684\u89e3\u51b3\u65b9\u6848\u76f8\u540c\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bc4\u4f30\u65f6\uff1a\n\u6211\u4f1a\u6ce8\u610f\u5230\uff0c\u5e73\u5747\u6765\u8bf4\uff0c\u5b83\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u90a3\u4e48\u5feb\u3002\u6211\u7528\u6765\u6267\u884c\u8fd9\u4e9b\u6d4b\u8bd5\u7684\u6570\u636e\u5e93\u5b9e\u4f8b\u662f\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684t3.microAmazon RDS\u5b9e\u4f8b\uff0c\u56e0\u6b64\u8ba1\u65f6\u7ed3\u679c\u6709\u4e00\u5b9a\u7684\u53ef\u53d8\u6027\uff0c\u5927\u591a\u6570\u7ed3\u679c\u4ece\u6bd4\u672c\u4f8b\u7a0d\u5fae\u5feb\u4e00\u70b9\u5230\u5927\u7ea69ms\u4e0d\u7b49\uff0c\u5e73\u5747\u63a5\u8fd18ms\u3002\u6b64\u5916\uff0c\u5982\u679c\u5728\u6267\u884c\u67e5\u8be2\u65f6\u7d22\u5f15\u4e0d\u5728\u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u5219\u5728\u4e0a\u8ff0\u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u7684\u67e5\u8be2\u6027\u80fd\u5bf9\u4e8e\u8be5\u7b2c\u4e00\u6b21\u67e5\u8be2\u4e0b\u964d\u5230\u7ea640ms\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u67e5\u8be2\u6700\u7ec8\u5e73\u5747\u53ea\u6bd4\u539f\u6765\u7684\u67e5\u8be2\u5feb\u5927\u7ea63250\u500d\u3002\n\u4e3a\u60a8\u7684\u6570\u636e\u96c6\u9002\u5f53\u5730\u8c03\u4f18\u60a8\u7684\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u60a8\u7684\u7f13\u51b2\u533a\u8db3\u591f\u5927\uff0c\u4ee5\u5bb9\u7eb3\u4e00\u4e2a\u5408\u7406\u7684\u5de5\u4f5c\u96c6\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u5982\u679c\u6570\u636e\u5e93\u5f15\u64ce\u5fc5\u987b\u4ece\u5b58\u50a8\u4e2d\u63d0\u53d6\u975e\u5e38\u5927\u91cf\u7684\u6570\u636e\uff0c\u90a3\u4e48\u7b49\u5f85IO\u64cd\u4f5c\u5c31\u4f1a\u5f71\u54cd\u6574\u4f53\u67e5\u8be2\u6027\u80fd\u3002\n\u5bf9\u4e8e\u7f3a\u5c11(data\uff1f&#39\uff1bload_avg&#39\uff1b\uff1a\uff1atext)\u8fc7\u6ee4\u5668\u7684\u57fa\u672c\u67e5\u8be2\uff0c\u6267\u884c\u65f6\u95f4\u8fdb\u4e00\u6b65\u51cf\u5c11\u4e86\u4e00\u534a\u3002\n\u8fd9\u5728\u6211\u4eec\u7684\u7528\u4f8b\u4e2d\u7528\u5904\u6709\u9650\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5177\u4f53\u9009\u62e9\u6b63\u5728\u7ed8\u5236\u7684\u6570\u636e\uff0c\u4f46\u5b83\u53ea\u662f\u7528\u6765\u8bf4\u660e\u57fa\u672c\u6280\u672f\u53ef\u4ee5\u6709\u591a\u5feb\u3002\n\u8fd9\u6bd4\u6211\u5f00\u59cb\u901a\u8fc7\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\u6240\u5e0c\u671b\u6216\u671f\u671b\u7684\u8981\u5feb\u5f97\u591a\u3002\u5141\u8bb8\u6570\u636e\u5e93\u751f\u6210\u95f4\u9694\uff0c\u7136\u540e\u63a5\u53d7\u6570\u636e\u5e93\u5728\u8be5\u95f4\u9694\u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u6761\u8bb0\u5f55\uff0c\u4ee5\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u7edd\u5bf9\u7cbe\u786e\u5468\u671f\u4e3a\u4ee3\u4ef7\uff0c\u5feb\u901f\u751f\u6210\u8de8\u603b\u65f6\u95f4\u96c6\u5747\u5300\u5206\u5e03\u7684\u7ed3\u679c\u96c6\u3002\u5728\u5b9e\u9a8c\u6d4b\u8bd5\u4e2d\uff0c\u6570\u636e\u70b9\u5f80\u5f80\u5206\u5e03\u5728\u65f6\u95f4\u95f4\u9694\u5468\u56f4\uff0c\u4f46\u5076\u5c14\u4f1a\u6709\u51e0\u5bf9\u70b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u843d\u5728\u65f6\u95f4\u95f4\u9694\u7684\u672b\u5c3e\uff0c\u4e0b\u4e00\u4e2a\u843d\u5728\u5f00\u59cb\u9644\u8fd1\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u5982\u679c\u9700\u8981\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u7cbe\u786e\u5468\u671f\uff0c\u6b64\u6280\u672f\u4ecd\u7136\u53ef\u4ee5\u63d0\u4f9b\u51fa\u8272\u7684\u7ed3\u679c\u3002\u53ea\u9700\u5728LIMIT\u5b50\u53e5\u524d\u6dfb\u52a0\u4e00\u4e2aORDER BY T.CREATED_AT\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u636e\u70b9\u90fd\u662f\u5728\u5176\u95f4\u9694\u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u3002\u5373\u3002\n\u800c\u4f7f\u7528ORDER BY\u65f6\uff0c\u6240\u9009\u62e9\u7684\u6570\u636e\u70b9\u867d\u7136\u4e0e\u524d\u4e00\u4e2a\u96c6\u5408\u6709\u663e\u8457\u91cd\u53e0\uff0c\u4f46\u7531\u8be5\u7279\u5b9a\u67e5\u8be2\u7684\u95f4\u9694(2592\u79d2\u7ea6\u4e3a43.2\u5206\u949f)\u5206\u9694\u5f97\u66f4\u52a0\u4e25\u683c\u3002\n\u4f7f\u7528order by\u4f1a\u964d\u4f4e\u6027\u80fd\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5f3a\u5236\u6570\u636e\u5e93\u5bf9\u6bcf\u4e2a\u95f4\u9694\u4e2d\u7684\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u3002\u7136\u800c\uff0c\u6210\u672c\u4e0d\u4e00\u5b9a\u662f\u4ee4\u4eba\u62c5\u5fe7\u7684\u539f\u56e0\uff1a\n\u524d\u9762\u63d0\u5230\u7684\u5173\u4e8e\u6570\u636e\u5e93\u8c03\u4f18\u7684\u8b66\u544a\u5c24\u5176\u9002\u7528\u4e8e\u6b64\u7248\u672c\u7684\u67e5\u8be2\u3002\u56e0\u4e3a\u6d89\u53ca\u5230\u6392\u5e8f\uff0c\u6240\u4ee5\u5b83\u5bf9\u5de5\u4f5c\u96c6\u4e2d\u7684\u6570\u636e\u7684\u5dee\u5f02\u66f4\u52a0\u654f\u611f\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u6570\u636e\u5728\u5de5\u4f5c\u96c6\u4e2d\uff0c\u8fd9\u4e2a\u67e5\u8be2\u4ecd\u7136\u6bd4\u57fa\u4e8erow_number()\u7684\u89e3\u51b3\u65b9\u6848\u5feb\u51e0\u500d\u3002\nSQL\u548cPostgreSQL\u90fd\u662f\u5de5\u5177\u5305\uff0c\u51e0\u4e4e\u603b\u662f\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u4e14\u968f\u7740\u4eba\u4eec\u5728\u671f\u671b\u7684\u7ed3\u679c\u4e0a\u6295\u5165\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u5c31\u6709\u53ef\u80fd\u5f97\u5230\u66f4\u6df1\u5c42\u6b21\u7684\u7ec6\u5fae\u5dee\u522b\u548c\u6539\u8fdb\u3002\u5bf9\u4e8e\u4ece\u8f83\u5927\u7684\u8868\u4e2d\u9009\u62e9\u65f6\u95f4\u5206\u5e03\u7684\u884c\u6837\u672c\uff0c\u53ef\u80fd\u6709\u6bd4\u6b64\u66f4\u597d\u7684\u6280\u672f\uff0c\u4f46\u6b64\u6280\u672f\u6bd4\u66f4\u5e7c\u7a1a\u7684\u7248\u672c\u5feb\u5f97\u591a\uff0c\u5e76\u4e14\u5b83\u4ee5\u63d0\u4f9b\u6781\u4f73\u7528\u6237\u4f53\u9a8c\u7684\u901f\u5ea6\u51c6\u786e\u5730\u4ea4\u4ed8\u4e86\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u7ed3\u679c\u3002\u540c\u65f6\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e8b\u60c5\u53ef\u80fd\u4f1a\u8ba9\u5b83\u53d8\u5f97\u66f4\u5feb\uff0c\u7279\u522b\u662f\u5728\u6574\u4e2a\u6570\u636e\u96c6\u589e\u957f\u7684\u60c5\u51b5\u4e0b\u3002\u4f8b\u5982\uff0c\u7531\u4e8e\u67e5\u8be2\u59cb\u7ec8\u96c6\u4e2d\u5728\u5355\u4e2a\u670d\u52a1\u5668ID\u4e0a\uff0c\u56e0\u6b64\u6309server_id\u8fdb\u884c\u5206\u533a\u53ef\u80fd\u662f\u6210\u529f\u7684\u3002\n\u4e0d\u8fc7\uff0c\u6700\u540e\uff0c\u81ea\u7531\u4f7f\u7528PostgreSQL\u7684\u89e3\u91ca\u5206\u6790\u6765\u7406\u89e3\u6570\u636e\u5e93\u5f15\u64ce\u5728\u6267\u884c\u67e5\u8be2\u65f6\u6240\u505a\u7684\u5de5\u4f5c\uff0c\u4ee5\u53ca\u5b9e\u9a8c\u548c\u5927\u91cf\u5931\u8d25\uff0c\u4ee5\u53ca\u968f\u7740\u89e3\u51b3\u65b9\u6848\u7684\u6539\u8fdb\u800c\u9010\u6b65\u8fdb\u884c\u7684\u5c0f\u6539\u8fdb\uff0c\u4f7f\u6211\u4eec\u4ece\u4e00\u4e2a\u8fd4\u56de\u5927\u91cf\u6570\u636e\u7684\u89e3\u51b3\u65b9\u6848\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u8fd4\u56de\u5927\u91cf\u6570\u636e\uff0c\u4f46\u7b49\u5f85\u8fd9\u4e9b\u7ed3\u679c\u7684\u65f6\u95f4\u957f\u5f97\u79bb\u8c31\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u4ecd\u7136\u4ee5\u6bd4\u6211\u5f00\u59cb\u91cd\u65b0\u5b9e\u73b0\u8be5\u67e5\u8be2\u65f6\u6240\u671f\u671b\u7684\u901f\u5ea6\u66f4\u5feb\u7684\u901f\u5ea6\u8fd4\u56de\u4e86\u5f88\u597d\u7684\u7ed3\u679c\uff0c\u8fd9\u5c06\u4f7f\u6211\u4eec\u4ece\u4e00\u4e2a\u8fd4\u56de\u5927\u91cf\u6570\u636e\u7684\u89e3\u51b3\u65b9\u6848\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u4ecd\u7136\u4ee5\u6bd4\u6211\u5f00\u59cb\u91cd\u65b0\u5b9e\u73b0\u8be5\u67e5\u8be2\u65f6\u6240\u671f\u671b\u7684\u901f\u5ea6\u66f4\u5feb\u7684\u901f\u5ea6\u8fd4\u56de\u5927\u91cf\u7ed3\u679c\u7684\u89e3\u51b3\u65b9\u6848\u3002", "note_en": "I have been working on an application that, at it\u2019s heart, stores a large amount of data that is organized primarily through the use of a foreign key and a timestamp field. The table\u2019s own primary key is UUID based, combining the foreign key with a UUID for the individual record itself, and it has a single primary data field that utilizes a JSONB type since it can receive arbitrary data. The table sees frequent, regular inserts, and periodic deletions, with old data being thinned out over time, but for each foreign key, there may be tens of thousands of records distributed amongst hundreds of thousands, or millions of other records for other foreign keys.\n  This was all very simple, but when the time came to start writing the code that generates data graphs from this table, I encountered a puzzle.\n How does one ensure that the API doesn\u2019t return too much data? Too many data points just means sending more data than the user probably needs, and it results in the graphing tool having to work with more data than it wants for quick, responsive performance, as well.\n And how does one, efficiently, find that data without running a query take takes a burdensome amount of time? In our case, the data is being returned to a React based front end by an API, and snappy application performance hinges on snappy API performance.\n  Early in the history of the application, I arrived at a solution. If I had a maximum cap on the number of data points to query, such as 500, I could query the total count of records which matched my query, and then a little integer division would give me an interval to use when querying.\n   Once the count of records is determined, an interval can be calculated which will be used to query the sample of records.\n i.e. if there are 5000 data points, and I want to sample 500 of them, then I need to query every 10th record. It looks something like this to find that interval:\n  Once one has an interval, there is a technique that can be used with Postgresql to select records on that interval. The   row_number() is a  window function that assigns a sequential number to each row in a result set. Once each record has a monotonically increasing sequential number assigned to it, that number can be used in a  WHERE clause.\n     This worked! It\u2019s a viable general technique when you want to select every nth record from some result set, and you want to make the database do the work instead of your application. It\u2019s also almost always faster and less resource intensive to do data management like this inside the database than it is to pull all of the data into your application and make it responsible for sorting through the data and pruning unneeded rows.\n  There are a couple of performance problems with this approach that become apparent when the table starts significantly growing.\n First, pulling a  count is not cheap. MySQL maintains a global record count for tables as part of it\u2019s MyISAM data format. PostgreSQL, however, uses something called a multi-version concurrency control strategy with its tables, which essentially means that different views of a database may see different sets of rows. Thus there is no one single, simple count of records for it to fall back on. Thus, when you count records in a table in PostgreSQL, the database is required to actually walk through the data and count all of the visible records.\n  If you simply want an estimate of the number of total rows in a table, there is a way to get that very cheaply:\n  This doesn\u2019t work when you want to count only a subset of records, though, and this value is only an estimate. It is the estimate that the query planner uses, so it should generally always be within about 10% of the real value, but it is unlikely to ever match exactly unless the table size changes only rarely.  There are other counting strategies, but they all have tradeoffs or inherent inaccuracies, so for this use case, there is no getting around paying that up-front time and resource cost just to get a count of records to use when calculating the query interval that is needed.\n The second expensive part of this technique is the use of  row_number() in combination with a modulo (%) in the  WHERE clause. This means that the database must traverse every possible record when running the query in order to figure out which ones satisfy the  WHERE clause. So if there are 150000 records, but one only wants 500 of them, all 150000 will still be scanned.\n These factors combine to make this approach brutally, unusably slow for queries that are intended to be ran ad hoc, and quickly, as part of an API driving a UI.\n  This is a real example of a query on a real database using the prior technique, and this example had the advantage that the index that it uses (a  BTREE index across the data field, since in production we are limiting results to fields that have one specific type of data) was already warm and cached in the database\u2019s working set when I ran this example, so this result was a best case for this technique, on this database. If that index were not available, or were not used, it would have been even slower given that this index filter rejected almost 180,000 rows. That\u2019s too slow to be triggered directly via an API request, as the user will be waiting a half-minute for data to even begin to show up in their browser.\n  It turns out that Postgresql offers a high performance option to sample a random set of data in a table. There is a   TABLESAMPLE clause that can be placed in the  FROM section of a query that will sample a subset of a table.\n  This would return a roughly random set of about 5% of  mytable\u2018s rows. If one wants a specific number of rows, there is an extension that can provide that,   tsm_system_rows.\n  This would return a random-ish set of 500 rows from the table. A  WHERE clause can be used in a query that uses  TABLESAMPLE in order to select only the rows of interest, but the  TABLESAMPLE is applied before the  WHERE clause, which makes this method unsuitable for my use case. As an example:\n  This would first select 500 random rows from the entire data set, and would then try to find records from that set which matched the  WHERE clause. This would probably result in the query only returning a very small, and fairly unpredictable number of rows of data that is actually wanted. Also, because the records are random, there is no guarantee that they are evenly distributed through the data set. This might be fine if the data is being queried for statistical reasons, but it isn\u2019t ideal when pulling data for graphs.\n So while TABLESAMPLE can be a very fast way to select a random set of records over an entire table, it doesn\u2019t work when we want a set of rows that is evenly distributed through the data set, but is only for a segment of the table\u2019s total data, and for which we want to have some predictable control over the number of rows selected.\n  There are other solutions available when the problem to be solved is the random selection of table rows, but none of them are particularly useful for the selection of N or close-to N evenly distributed data points, and there is limited inspiration that can be found from them.\n As a quick overview, the simplest approach is to just insert a comparison to a random number in the  WHERE clause:\n  This will select approximately 10% of the total rows, but it requires a full table scan. If one wants a specific number of random rows, one can do it with randomization in the  ORDER BY clause. This is much slower, particularly on a large table, because the full table scan is followed by a sort of the entire table, but it does work:\n  If the table is indexed with an incrementing integer primary key, and there aren\u2019t many gaps in the keys, it is possible to perform a rather fast random selection of records through the use of a generated sequence of random numbers within the range of IDs.\n  If the telemetries table were indexed with an integer primary key, and it had 650000 records with few gaps (no chunks has been deleted), the above code would loop over a generated series of 550 integers, and would produce a distinct set of random integers in the range of 1 to 650000. You can think of that code inside of the  FROM clause as a SQL version of a for loop that is generating an array of random numbers. Those numbers are then used as record IDs by the  JOIN, which will return a final set limited to 500 records. We pull a few more than 500 in case there are some gaps, to hedge against not finding 500 records.  This technique is very fast, given the caveats already mentioned, and while it can not be applied to the case of a table that is indexed with a UUID, it occurred to me that the core concept in this implementation idea could be generalized to provide a very fast solution that works for time indexed data.\n  The solution that I arrived at can return a time distributed sample of some subset of the data in a table in a handful of milliseconds. It leverages PostgreSQL\u2019s ability to generate series data via a function, along with a little math inside of the API server when it builds the query, to create a query that, when indexed properly, will return evenly distributed data very quickly.\n The idea hinges on the fact that all of the records carry a timestamp which preserves their position in the time series. So, if the database itself can generate a series of timestamps that is evenly distributed throughout the total range of the data, then a query can return a row for the interval between one timestamp and the next. This will result in a set of rows no larger than the maximum desired set, though it may be smaller if the intervals are just too small to find data within each, and Postgresql processes this query surprisingly quickly.\n So, if we imagine that we want to pull 500 data points of a specific type from the database, for the period between 2020-09-01 00:00:00 and 2020-09-15 23:59:59, then the first step is to figure out what interval is needed to get 500 steps between those starting and ending timestamps. This is simple math:\n      This approach leverages the PostgreSQL   GENERATE_SERIES() function, which takes a starting value, an ending value, and an interval, and generates a set of value from them.\n   Postgresql provides a convenient mechanism to circumvent this limitation on subqueries, however. Postgresql lets one define  custom types. Using this capability, a type can be defined which holds both a  JSONB and a  TIMESTAMP WITHOUT TIME ZONE entity, and this will count as a single data item for purposes of the restriction that was encountered above.\n  The query can then be rewritten to return a single instance of this custom type, which eliminates the error and lets it work as desired.\n  When this is evaluated against the same data set as the original  row_number() based solution:\n    I will note that it isn\u2019t actually quite that much faster on average. The database instance that I am conducting these tests with is a very small t3.micro Amazon RDS instance, so there ends up being some variability in the timings, with most results ranging from slightly faster than this example to about 9ms, and averaging close to 8ms. Also, if the index is not in the cache at the time that the query is executed, the performance of the query on first execution, in the above described test environment, drops to about 40ms for that first query.  In practice, for our application, this query ends up being  only about 3250X faster than the original on average.\n It is important to have your database  tuned properly for your data set, and that your buffers are large enough to hold a reasonable working set. If the database engine has to pull very large amounts of data from storage, overall query performance will suffer simply as a consequence of waiting on IO operations.\n  For the base query that lacks the  (data ? &#39;load_avg&#39;::text) filter, the execution time is further cut in half.\n  This is of limited utility in our use case, as we want to be able to specifically select the data that is being graphed, but it serves to illustrate just how fast the base technique can be.\n This is far faster than I had hoped or expected when I started working through a better solution to this problem. Allowing the database to generate an interval, and then accepting the first record that the database finds in that interval generates a result set that is distributed evenly across the total time set very quickly, at the cost of not being guaranteed an absolutely precise period between the data points. In testing this experimentally, data points tend to be distributed around the time interval, but there are occasional pairs of points where one falls near the end of it\u2019s interval, and the next near the beginning, or vice versa.\n If a precise period between data points is desired, this technique can still deliver excellent results. Simply adding an  ORDER BY t.created_at before the  LIMIT clause guarantees that each data point is the first one to be found in it\u2019s interval. i.e.\n    Whereas with the  ORDER BY, the data points that are selected, while having significant overlap with the previous set, are much more strictly separated by the interval for this particular query (2592 second is about 43.2 minutes).\n  There is a performance cost to utilizing  ORDER BY, since it forces the database to sort the results in each of the intervals. The cost is not necessarily a cause for concern, however:\n   The caveat mentioned earlier about database tuning especially applies with this version of the query. Since sorting is involved, it is much more sensitive to variance in the data that is in the working set. Even in the worst case, where none of the data is in the working set, though, this query is still several times faster than the  row_number() based solution.\n  SQL, and PostgreSQL, are toolkits where there is almost always more than one way to do it, and where it is possible to get more deeply nuanced and refined as one puts more time into the desired outcome. There may be better techniques than this for selecting a time distributed sample of rows from a larger table, but this technique is vastly faster than the more na\u00efve version, and it exactly delivers the results that our application requires, at a speed that provides a great user experience. At the same time, there are some things that might make it faster yet, particularly as the total data set grows. For example, since a query is always focused on a single server ID, partitioning by  server_id might be a win.\n In the end, though, liberal use of PostgreSQL\u2019s  EXPLAIN ANALYZE to understand what the database engine is doing as it executes queries, alongside experimentation and a lot of failures as well as small stepwise improvements as the solution was honed moved us from a solution that returned great data, but with an impractically long wait for those results, to a solution that still returns great results at a speed that was faster than I had hoped for when I started working on the reimplementation of this query.", "posttime": "2020-10-15 06:05:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u5e8f\u5217,evenly,\u6570\u636e", "title": "PostgreSQL\u4e2d\u65f6\u95f4\u5e8f\u5217\u8bb0\u5f55\u7684\u9ad8\u6548\u5747\u5300\u91c7\u6837", "title_en": "Efficient Evenly Distributed Sampling of Time Series Records in PostgreSQL", "transed": 1, "url": "https://blog.joshsoftware.com/2020/10/14/efficient-evenly-distributed-sampling-of-time-series-records-in-postgresql/", "via": "", "real_tags": ["\u5e8f\u5217", "evenly", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "bb8b6c268d4a6d018bcf32ac1d981208.png", "infoid": 1028909, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u8981\u603b\u7ed3\u6574\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u7684\u52aa\u529b\uff0c\u4f60\u4f1a\u8bf4\uff1a\u2018\u9879\u76ee\u5ef6\u8bef\u4e86\uff0c\u800c\u4e14\u88ab\u53d6\u6d88\u4e86\u2019\u3002\n\u6211\u4eec\u5df2\u7ecf\u8d70\u5230\u4e86\u7535\u8111\u5f88\u96be\u7684\u5c3d\u5934\u3002\u5728\u51e0\u6b21\u5173\u4e8e\u8f6f\u4ef6\u7684\u5404\u4e2a\u7ec4\u4ef6\u662f\u5982\u4f55\u5f62\u6210\u7684\u5bf9\u8bdd\u4e4b\u540e-\u4ece\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\u5230\u5bc6\u7801\u6563\u5217-\u6211\u60f3\u4ee5\u6784\u5efa\u8f6f\u4ef6\u4ea7\u54c1\u7684\u54f2\u5b66\u6765\u7ed3\u675f\u3002\n\u8fd9\u53ef\u80fd\u6709\u70b9\u5c34\u5c2c\uff0c\u4f46\u5373\u4f7f\u5728\u8fd9\u4e2a\u884c\u4e1a\u5de5\u4f5c\u4e86\u51e0\u5e74\uff0c\u6211\u4e5f\u4ece\u6765\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u79d1\u6280\u516c\u53f8\u4f1a\u5982\u6b64\u75f4\u8ff7\u4e8e\u901f\u5ea6\u3002\u8fd9\u79cd\u75f4\u8ff7\u5df2\u7ecf\u878d\u5165\u4e86\u8f6f\u4ef6\u7684\u8bed\u8a00\u4e2d\uff0c\u5728\u8f6f\u4ef6\u4e2d\uff0c\u5de5\u4f5c\u5468\u671f\u88ab\u79f0\u4e3a\u51b2\u523a\uff0c\u8fdb\u5ea6\u7684\u8861\u91cf\u6807\u51c6\u88ab\u79f0\u4e3a\u901f\u5ea6\u3002\u4f46\u662f\uff0c\u5feb\u901f\u4ea4\u4ed8\u8f6f\u4ef6\u771f\u7684\u90a3\u4e48\u91cd\u8981\u5417\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u6211\u81ea\u5df1\u4e0d\u6784\u5efa\u8f6f\u4ef6\uff0c\u4f46\u6211\u6bcf\u5929\u90fd\u5728\u6392\u9664\u6545\u969c\uff0c\u5929\u54ea\uff0c\u6211\u6709\u65f6\u771f\u5e0c\u671b\u5de5\u7a0b\u5e08\u4eec\u5de5\u4f5c\u5f97\u6162\u4e00\u70b9\u3002\n\u6211\u628a\u6211\u5173\u4e8e\u6784\u5efa\u8f6f\u4ef6\u65b9\u6cd5\u8bba\u7684\u95ee\u9898\u5e26\u7ed9\u4e86\u4e00\u4e2a\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u6709\u8fc7\u6fc0\u70c8\u8fa9\u8bba\u7684\u4eba\u3002David Heinemeier Hansson\u521b\u5efa\u4e86Ruby on rails\uff0c\u662fBasecamp\u7684\u8054\u5408\u521b\u59cb\u4eba\u548cCTO\uff0c\u4e5f\u662fRework\u7b49\u5546\u4e1a\u4e66\u7c4d\u7684\u4f5c\u8005\u3002\u4ed6\u8fd8\u4ee5\u76f4\u8a00\u4e0d\u8bb3\u5730\u53cd\u5bf9\u884c\u4e1a\u8d8b\u52bf\u800c\u95fb\u540d\uff0c\u65e0\u8bba\u8fd9\u4e9b\u8d8b\u52bf\u662f\u6280\u672f\u8d8b\u52bf\uff0c\u6bd4\u5982\u5fae\u670d\u52a1\u7684\u65e5\u76ca\u6d41\u884c\uff0c\u8fd8\u662f\u673a\u6784\u8d8b\u52bf\uff0c\u6bd4\u5982\u98ce\u9669\u6295\u8d44\u6210\u4e3a\u79d1\u6280\u884c\u4e1a\u53d1\u5c55\u4e1a\u52a1\u7684\u9ed8\u8ba4\u65b9\u5f0f\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u4eca\u5929\u8f6f\u4ef6\u662f\u5982\u4f55\u6784\u5efa\u7684\uff0c\u8fd9\u5bf9\u6784\u5efa\u4eba\u5458\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u6784\u5efa\u5b83\u3002\nWojtek Borowicz\uff1a\u8f6f\u4ef6\u65b9\u6cd5\u8bba\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u884c\u4e1a\u3002\u6709Scrum\u3001\u654f\u6377\u3001\u6559\u7ec3\u3001\u4e66\u7c4d\u7b49\u7b49\u3002\u4f46\u662f\u4f60\u548c\u4f60\u5728\u5927\u672c\u8425\u7684\u56e2\u961f\u4e0d\u9075\u5faa\u8fd9\u4e9b\u505a\u6cd5\u3002\u4e3a\u4ec0\u4e48\uff1f\nDHH\uff1a\u9996\u5148\uff0c\u6211\u4eec\u7684\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d7\u5230\u4e86\u654f\u6377\u5ba3\u8a00\u548c\u654f\u6377\u4ef7\u503c\u89c2\u7684\u542f\u53d1\u3002\u4e0e\u5176\u8bf4\u5b83\u662f\u53d7\u5230\u654f\u6377\u5b9e\u8df5\u7684\u542f\u53d1\uff0c\u4e0d\u5982\u8bf4\u5b83\u662f\u4eca\u5929\u5b58\u5728\u7684\u3002\n\u5f88\u591a\u654f\u6377\u8f6f\u4ef6\u65b9\u6cd5\u8bba\u90fd\u4e13\u6ce8\u4e8e\u4ea7\u54c1\u5f00\u53d1\u9886\u57df\uff0c\u800c\u8fd9\u4e9b\u9886\u57df\u5e76\u4e0d\u662f\u96be\u70b9\u6240\u5728\u3002\u5b83\u4eec\u592a\u591a\u5730\u662f\u5173\u4e8e\u7a0b\u5e8f\u7ed3\u6784\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8f6f\u4ef6\u672c\u8d28\u4e0a\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3001\u4e0d\u53ef\u77e5\u7684\u548c\u4e0d\u53ef\u6210\u5f62\u7684\u3002\u5b83\u51e0\u4e4e\u5c31\u50cf\u4e00\u79cd\u6c14\u4f53\u3002\u5b83\u53ef\u4ee5\u4ece\u76f8\u540c\u7684\u57fa\u672c\u7406\u5ff5\u9002\u7528\u4e8e\u5404\u79cd\u4e0d\u540c\u7684\u5f00\u53e3\u3002\u8bd5\u56fe\u4f30\u8ba1\u4e00\u4e2a\u7279\u6027\u9700\u8981\u591a\u957f\u65f6\u95f4\u7684\u60f3\u6cd5\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u4f60\u5728\u6784\u5efa\u4ec0\u4e48\uff0c\u800c\u4e14\u4eba\u7c7b\u5728\u4f30\u8ba1\u4efb\u4f55\u4e1c\u897f\u65b9\u9762\u90fd\u5f88\u7cdf\u7cd5\u3002\u8f6f\u4ef6\u5f00\u53d1\u7684\u5386\u53f2\u662f\u4e00\u4e2a\u5ef6\u8fdf\u6216\u53d6\u6d88\u7684\u9879\u76ee\u3002\u5982\u679c\u4f60\u8981\u603b\u7ed3\u6574\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u7684\u52aa\u529b\uff0c\u4f60\u4f1a\u8bf4\uff1a\u2018\u9879\u76ee\u5ef6\u8bef\u4e86\uff0c\u800c\u4e14\u88ab\u53d6\u6d88\u4e86\u2019\u3002\u53ef\u4ee5\u8bf4\uff0c\u8ba1\u5212\u5de5\u4f5c\u662f\u884c\u4e0d\u901a\u7684\u3002\n\u6211\u4eec\u5728\u5927\u672c\u8425\u7684\u6240\u4f5c\u6240\u4e3a\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u5851\u9020\uff0c\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u90a3\u662f\u6211\u4eec\u53d1\u73b0\u8270\u82e6\u5de5\u4f5c\u7684\u5730\u65b9\u3002\u6211\u4eec\u8bd5\u56fe\u53ea\u63a5\u53d7\u6838\u5fc3\u7ea6\u675f\uff0c\u5373\u4e0d\u53ef\u80fd\u9884\u5148\u51c6\u786e\u5730\u6307\u5b9a\u8f6f\u4ef6\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u60a8\u53ea\u80fd\u53d1\u73b0\u8f6f\u4ef6\u5e94\u8be5\u5728\u7ea6\u675f\u8303\u56f4\u5185\u505a\u4ec0\u4e48\u3002\u4f46\u8fd9\u4e5f\u4e0d\u50cf\u6211\u4eec\u9075\u5faa\u7684\u60f3\u6cd5\uff0c\u90a3\u5c31\u662f\u4e8b\u60c5\u505a\u5b8c\u4e86\u5c31\u505a\u4e86\u3002\u8fd9\u662f\u5bf9\u4ea7\u54c1\u7ba1\u7406\u601d\u60f3\u7684\u7edd\u5bf9\u653e\u5f03\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u8bf4\u7684\u662f\uff1a\u4e0d\u505a\u4f30\u8ba1\uff0c\u505a\u9884\u7b97\u3002\u6574\u987f\u7684\u6838\u5fc3\u662f\u9884\u7b97\u3002\u4e0d\u662f\u4e00\u4ef6\u4e8b\u8981\u82b1\u591a\u957f\u65f6\u95f4\uff0c\u800c\u662f\u4ec0\u4e48\u4e1c\u897f\u6709\u4ef7\u503c\u3002\u56e0\u4e3a\u4e00\u4ef6\u4e8b\u53ef\u80fd\u9700\u8981\u4e00\u5468\u6216\u56db\u4e2a\u6708\u3002\u5b83\u503c\u591a\u5c11\u94b1\uff1f\n\u6709\u4e9b\u4e1c\u897f\u53ef\u80fd\u503c\u5f97\u6574\u4e2a\u5de5\u4f5c\u5468\u671f-\u8fd9\u901a\u5e38\u662f\u6781\u9650-\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u516d\u5468\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5927\u6279\u91cf\u3002\u6216\u8005\u5b83\u7684\u4ef7\u503c\u53ef\u80fd\u4f1a\u4f4e\u4e8e\u8fd9\u4e2a\u6570\u5b57\u3002\u53ef\u80fd\u53ea\u6709\u4e00\u5468\uff0c\u4e5f\u53ef\u80fd\u662f\u4e24\u5468\u3002\u90a3\u53ea\u662f\u4e00\u5c0f\u6279\u3002\u8fd9\u91c7\u7528\u4e86\u6a21\u7cca\u7684\u9879\u76ee\u58f0\u660e\u201c\u8ba9\u6211\u4eec\u6dfb\u52a0\u7279\u6027A\u201d\uff0c\u5c06\u5176\u7f6e\u4e8e\u7ea6\u675f\u4e4b\u4e0b\uff0c\u5e76\u5c06\u8ba1\u7b97\u51fa\u5b9e\u73b0\u7684\u4efb\u52a1\u59d4\u6258\u7ed9\u505a\u8fd9\u9879\u5de5\u4f5c\u7684\u4eba\u3002\u8fd9\u662f\u8fd9\u91cc\u7684\u5173\u952e\u6d1e\u5bdf\u529b\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5927\u95ee\u9898\u7684\u5b9a\u4e49\u548c\u4e00\u4e2a\u56fa\u5b9a\u7684\u8fb9\u754c\uff0c\u4f60\u7ed9\u6709\u521b\u9020\u529b\u7684\u3001\u806a\u660e\u7684\u4eba\u5728\u8fd9\u4e9b\u6761\u4ef6\u4e0b\u63d0\u51fa\u89e3\u51b3\u65b9\u6848\u7684\u81ea\u7531\uff0c\u4ed6\u4eec\u4f1a\u505a\u51fa\u4ee4\u4ed6\u4eec\u975e\u5e38\u81ea\u8c6a\u7684\u51fa\u8272\u5de5\u4f5c\u3002\n2001\u5e74\uff0c\u4e00\u4e2a\u753117\u540d\u7537\u6027(\u662f\u7684\uff0c\u6ca1\u6709\u5973\u6027)\u7ec4\u6210\u7684\u5c0f\u7ec4\u53d1\u8868\u4e86\u4e00\u4efd\u6587\u4ef6\uff0c\u4e3a\u672a\u676520\u5e74\u7684\u8f6f\u4ef6\u5f00\u53d1\u8bbe\u5b9a\u4e86\u65b9\u5411\u3002\u4ed6\u4eec\u7684\u654f\u6377\u5ba3\u8a00\u89c4\u5b9a\u4e86\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u7684\u539f\u5219\u3002\u8fd9\u4e9b\u60f3\u6cd5\u662f\u57fa\u672c\u7684(\u4f8b\u5982\uff1a\u2018\u5de5\u4f5c\u8f6f\u4ef6\u662f\u8fdb\u6b65\u7684\u4e3b\u8981\u8861\u91cf\u6807\u51c6\u2019\u548c\u2018\u7b80\u5355\u6027\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u2019)\uff0c\u4f46\u5b83\u4eec\u50ac\u751f\u4e86\u654f\u6377\u6559\u7ec3\u3001\u987e\u95ee\u548c\u4f5c\u8005\u7684\u6574\u4e2a\u5b87\u5b99\u3002\n\u90a3\u4e48\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7684\u95ee\u9898\u5728\u4e8e\u4ed6\u4eec\u8fc7\u4e8e\u5173\u6ce8\u8bc4\u4f30\uff0c\u800c\u8fd9\u5728\u8f6f\u4ef6\u4e2d\u662f\u4e0d\u53ef\u80fd\u7684\uff1f\n\u6211\u4f1a\u8d70\u5f97\u66f4\u8fdc\uff0c\u8bf4\u8fd9\u79cd\u4f30\u8ba1\u662f\u80e1\u8bf4\u516b\u9053\u3002\u5373\u4f7f\u662f\u5728\u5904\u7406\u56fa\u5b9a\u8f93\u5165\u65f6\uff0c\u5b83\u4e5f\u662f\u5982\u6b64\u4e0d\u7cbe\u786e\uff0c\u4ee5\u81f3\u4e8e\u6beb\u65e0\u7528\u5904\u3002\u4f46\u4f60\u4e0d\u662f\u3002\u5728\u770b\u5230\u8f6f\u4ef6\u4e4b\u524d\uff0c\u6ca1\u6709\u4eba\u80fd\u591f\u51c6\u786e\u5730\u63cf\u8ff0\u8f6f\u4ef6\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u90a3\u79cd\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u59cb\u5de5\u4f5c\u4e4b\u524d\u5148\u53d1\u5236\u4eba\u5730\u63cf\u8ff0\u67d0\u4e8b\u5e94\u8be5\u505a\u4ec0\u4e48\u7684\u60f3\u6cd5\u662f\u80e1\u8bf4\u516b\u9053\u3002\u654f\u6377\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u63a5\u53d7\u4e86\u8fd9\u6837\u7684\u60f3\u6cd5\uff0c\u5373\u4f60\u9700\u8981\u8fd0\u884c\u8f6f\u4ef6\u6765\u83b7\u5f97\u53cd\u9988\uff0c\u4f46\u662f\u654f\u6377\u7684\u73b0\u4ee3\u5b9e\u73b0\u5e76\u6ca1\u6709\u63a5\u53d7\u4ed6\u4eec\u81ea\u5df1\u6559\u7ed9\u6211\u4eec\u7684\u8bfe\u7a0b\u3002\n\u4f46\u6280\u672f\u51e0\u4e4e\u75f4\u8ff7\u4e8e\u901f\u5ea6\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e13\u6ce8\u4e8e\u901f\u5ea6\uff0c\u4f46\u53c8\u4e0d\u80fd\u76f8\u4fe1\u4f30\u8ba1\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\u6211\u4eec\u8c08\u8bba\u7684\u662f\u8fdb\u6b65\u548c\u901f\u5ea6\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e24\u4ef6\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u4f60\u53ef\u4ee5\u8bd5\u7740\u8d8a\u6765\u8d8a\u5feb\u5730\u505a\u4e8b\u60c5\uff0c\u7136\u540e\u610f\u8bc6\u5230\u4f60\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u8d70\u5f97\u66f4\u8fdc\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u953b\u70bc\u8eab\u4f53\u7684\u5174\u8da3\u662f\u8d70\u5f97\u66f4\u8fdc\u3002\u5b83\u7684\u6700\u7ec8\u76ee\u6807\u662f\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u5927\u6279\u91cf\u5de5\u4f5c\uff0c\u8ba9\u5ba2\u6237\u548c\u5b9e\u65bd\u8005\u611f\u5230\u81ea\u8c6a\u548c\u9ad8\u5174\u3002\u800c\u8bd5\u56fe\u5c06\u53cd\u9988\u73af\u8def\u7f29\u5c0f\u5230\u4e0d\u53ef\u80fd\u7684\u5c0f\u5e76\u4e0d\u80fd\u6539\u5584\u8fd9\u4e00\u70b9\u3002\u6709\u4e00\u79cd\u89c2\u70b9\u8ba4\u4e3a\u6301\u7eed\u7684\u53cd\u9988\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u662f\u7684\uff0c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff01\u6211\u4e0d\u60f3\u56e0\u4e3a\u6211\u7684\u6240\u4f5c\u6240\u4e3a\u800c\u4e0d\u65ad\u5730\u88ab\u8bc4\u4ef7\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u505a\u77ed\u8dd1\u3002\u6309\u7167Scrum\u548c\u5176\u4ed6\u65b9\u6cd5\u8bba\u7684\u8981\u6c42\uff0c\u6bcf\u4e24\u5468\u91cd\u65b0\u5b89\u6392\u4e00\u6b21\u5de5\u4f5c\u662f\u4e00\u79cd\u5b8c\u5168\u4ee4\u4eba\u538b\u6291\u548c\u6df7\u4e71\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5b83\u53ea\u4f1a\u8ba9\u6bcf\u4e2a\u4eba\u7cbe\u75b2\u529b\u7aed\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u6210\u679c\u3002\u5927\u591a\u6570\u4eba\u4e0d\u53ef\u80fd\u5728\u4e24\u5468\u5185\u63d0\u4f9b\u771f\u6b63\u7684\u5927\u529f\u80fd\u3002\n\u771f\u6b63\u7684\u9b54\u529b\u5728\u4e8e\u5c06\u4f60\u7684\u5fc3\u6001\u4ece\u4f30\u8ba1\u8f6c\u53d8\u4e3a\u9884\u7b97\u3002\u522b\u60f3\u7740\u505a\u4e00\u4ef6\u4e8b\u8981\u82b1\u591a\u957f\u65f6\u95f4\u3002\u60f3\u60f3\u4f60\u613f\u610f\u4ed8\u51fa\u591a\u957f\u65f6\u95f4\u3002\u8fd9\u5c31\u98a0\u8986\u4e86\u6574\u4e2a\u60f3\u6cd5\u3002\u5b83\u8ba9\u9700\u6c42\u6d6e\u52a8\u3002\u6a21\u7cca\u7684\u9879\u76ee\u5b9a\u4e49\u5b9e\u9645\u4e0a\u66f4\u5207\u5408\u5b9e\u9645\u3002\u9ad8\u5ea6\u5177\u4f53\u7684\u9879\u76ee\u5b9a\u4e49\u901a\u5e38\u5f88\u5feb\u5c31\u4f1a\u8bef\u5165\u6b67\u9014\u3002\u8db3\u591f\u6a21\u7cca\u7684\u5b9a\u4e49\u4e3a\u4ece\u4e8b\u8fd9\u9879\u5de5\u4f5c\u7684\u4eba\u63d0\u4f9b\u4e86\u521b\u9020\u6027\u548c\u9009\u62e9\u6027\u3002\u5f53\u4f60\u8003\u8651\u5230\u8fd9\u4e24\u4ef6\u4e8b\u65f6\uff0c\u4f60\u5c31\u8d4b\u4e88\u4e86\u8fd9\u4e9b\u4eba\u6743\u529b\uff0c\u8ba9\u4ed6\u4eec\u80fd\u591f\u505a\u4ed6\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u80fd\u505a\u7684\u6700\u597d\u7684\u5de5\u4f5c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u9075\u5faa\u89c4\u8303\u3002\n\u6574\u4e2a\u654f\u6377\u53db\u9006\u90fd\u662f\u5173\u4e8e\u62d2\u7edd\u5927\u7684\u3001\u524d\u671f\u7684\u8bbe\u8ba1\u3002\u4f46\u6211\u8ba4\u4e3a\u654f\u6377\u8fd8\u6ca1\u6709\u5f97\u51fa\u8db3\u591f\u7684\u7ed3\u8bba\u3002\u5b83\u60f3\uff1a\u201c\u6211\u4eec\u4e0d\u60f3\u8981\u5927\u7684\u524d\u671f\u8bbe\u8ba1\u3002\u201d\u6211\u4eec\u53ea\u60f3\u8981\u4e00\u4e9b\u524d\u671f\u7684\u8bbe\u8ba1\u3002\u90a3\u4e5f\u597d\u4e0d\u5230\u54ea\u91cc\u53bb\u3002\u5f88\u591a\u8f6f\u4ef6\u65b9\u6cd5\u8bba\u90fd\u662f\u77ed\u89c6\u5730\u5173\u6ce8\u5b9e\u73b0\u7684\u6280\u672f\u9700\u6c42\u3002\u4f46\u8f6f\u4ef6\u9886\u57df\u7684\u8270\u82e6\u5de5\u4f5c\u662f\u5f04\u6e05\u695a\u5b83\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u8ba9\u5b83\u5de5\u4f5c\u3002\u6709\u4e00\u4e2a\u5173\u4e8e10\u500d\u7a0b\u5e8f\u5458\u7684\u795e\u8bdd\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u90a3\u4e9b\u5728\u5b9e\u73b0\u95ee\u9898\u65f6\u8868\u73b0\u51fa\u8272\u7684\u7a0b\u5e8f\u5458\u300210x\u7a0b\u5e8f\u5458\u662f\u91cd\u8ff0\u95ee\u9898\u7684\u7a0b\u5e8f\u5458\u3002\n\u5f53\u56e2\u961f\u88ab\u6346\u7ed1\u5728\u4e24\u5468\u7684\u5468\u671f\u3001\u8bc4\u4f30\u548c\u89c4\u8303\u5de5\u4f5c\u4e2d\u65f6\uff0c\u4ee3\u7801\u548c\u51b3\u7b56\u7684\u8d28\u91cf\u4f1a\u53d7\u5230\u5f71\u54cd\u5417\uff1f\n\u5f53\u7136\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\u3002\u5b83\u5bfc\u81f4\u4e86-\u6211\u7684\u610f\u601d\u662f\u6709\u70b9\u6cb9\u5634\u6ed1\u820c\u7684\u65b9\u5f0f\uff0c\u4f46\u4e0d\u662f\u90a3\u79cd\u6cb9\u5634\u6ed1\u820c\u7684\u4eba\u7c7b\u75db\u82e6\u3002\u5728\u8fd9\u6837\u7684\u5236\u5ea6\u4e0b\u5de5\u4f5c\u7684\u4eba\u53ea\u4f1a\u88ab\u5403\u6389\uff0c\u7136\u540e\u88ab\u5410\u51fa\u6765\u3002\u6bcf\u4e24\u5468\u4e0d\u65ad\u5730\u91cd\u65b0\u8bc4\u4f30\u4f60\u6b63\u5728\u505a\u7684\u6bcf\u4ef6\u4e8b\uff0c\u56e0\u4e3a\u90a3\u662f\u65b0\u7684\u51b2\u523a\u5468\u671f\u5f00\u59cb\u7684\u65f6\u5019-\u5b83\u8fdb\u884c\u5f97\u771f\u7684\u5f88\u5feb\uff0c\u65e0\u5904\u53ef\u53bb\u3002\n\u8fd9\u5c31\u662f\u6211\u4eec\u4e0d\u505a\u65e5\u5e38\u5355\u53e3\u76f8\u58f0\u7684\u539f\u56e0\u3002\u8fd9\u79cd\u4e0d\u65ad\u7684\u6405\u52a8\uff0c\u5728\u975e\u5e38\u7d27\u7684\u76ae\u5e26\u4e0a\u7ed5\u7740\u5708\u5b50\u8f6c\u3002\u6211\u8ba4\u4e3a\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e0d\u4eba\u9053\u7684\u3002\u96c5\u5c45\u4e50\u518d\u6b21\u8868\u793a\uff1a\u2018\u563f\uff0c\u4f60\u77e5\u9053\u5417\uff1f\u4f60\u8bd5\u56fe\u9884\u5148\u8ba1\u5212\u7684\u90a3\u4e2a\u4e3a\u671f\u4e24\u5e74\u7684\u8f6f\u4ef6\u9879\u76ee\uff1f\u90a3\u5b8c\u5168\u662f\u4e2a\u80e1\u8bf4\u516b\u9053\u7684\u4e3b\u610f\u3002\u8fd9\u592a\u79bb\u8c31\u4e86\u3002\u662f\u7684\uff0c\u5f53\u7136\uff01\u4f46\u662f\uff0c\u6700\u8fd1\u5b9e\u8df5\u7684\u654f\u6377\u65b9\u6cd5\u8bba\u77eb\u6789\u8fc7\u6b63\uff0c\u8d70\u5f97\u592a\u77ed\u4e86\u3002\u5b83\u8bf4\uff0c\u6bcf\u5929\u4e24\u5468\u7684\u5355\u53e3\u76f8\u58f0\u5c31\u662f\u8fd9\u4e2a\u795e\u5947\u7684\u5faa\u73af\u3002\u4e0d\u662f\u7684\u3002\u4eba\u4eec\u9700\u8981\u653e\u677e\u4e00\u4e0b\u3002\u4e00\u4e9b\u81ea\u4e3b\u6743\u3002\u4e00\u4e9b\u7a7a\u95f4\u3002\n\u901a\u8fc7\u5e7f\u6cdb\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u53d1\u73b0\u5927\u7ea6\u516d\u4e2a\u661f\u671f\u7ed9\u4e86\u6211\u4eec\u8db3\u591f\u7684\u547c\u5438\u548c\u601d\u8003\u7684\u7a7a\u95f4\u3002\u800c\u4e14\uff0c\u53ea\u8981\u4f60\u8bbe\u5b9a\u4e86\u754c\u9650\uff0c\u4f60\u6700\u7ec8\u5c31\u4f1a\u53d6\u5f97\u8fdb\u6b65\uff0c\u5373\u4f7f\u6bcf\u5929\u770b\u8d77\u6765\u5e76\u4e0d\u4e00\u5b9a\u662f\u8fd9\u6837\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u5728\u53cd\u9988\u5faa\u73af\u65b9\u9762\u53d7\u5230\u975e\u5e38\u4e25\u683c\u7ea6\u675f\u7684\u56e2\u961f\u4e2d\u6709\u66f4\u591a\u7684\u6d3b\u52a8\u3002\u4ed6\u4eec\u5728\u75af\u72c2\u5730\u6405\u62cc\uff0c\u4f46\u6700\u7ec8\u6ca1\u6709\u53d6\u5f97\u66f4\u591a\u8fdb\u5c55\u3002\u6709\u65f6\u5019\uff0c\u901f\u5ea6\u6700\u5feb\u7684\u7403\u961f\u770b\u8d77\u6765\u975e\u5e38\u51b7\u9759\u3002\u4ed6\u4eec\u5e76\u4e0d\u662f\u7ecf\u5e38\u5728\u67d0\u4e9b\u65b9\u6cd5\u8bba\u7684\u8dd1\u6b65\u673a\u4e0a\u6216\u5728\u4e00\u4e9b\u7a0b\u5e8f\u65f6\u949f\u4e0a\u8d70\u8d70\u505c\u505c\uff01\u4e01\uff01\u4e01\uff01\u6bcf\u9694\u4e94\u79d2\u3002\n\u4f60\u8ba4\u4e3a\u4f60\u7684\u5851\u9020\u65b9\u6cd5\u80fd\u5728\u66f4\u5927\u7684\u7ec4\u7ec7\u4e2d\u594f\u6548\u5417\uff1f\u4e00\u4e2a\u62e5\u6709500\u62165000\u540d\u5de5\u7a0b\u5e08\u800c\u4e0d\u662f50\u540d\u5de5\u7a0b\u5e08\u7684\u516c\u53f8\uff1f\n\u9996\u5148\uff0c\u60a8\u4e0d\u5e94\u8be5\u4ece\u80fd\u591f\u4ece5\u4e2a\u4eba\u6269\u5c55\u52305000\u4eba\u7684\u89d2\u5ea6\u6765\u8003\u8651\u8f6f\u4ef6\u65b9\u6cd5\u8bba\u3002\u8bd5\u56fe\u628a5000\u4eba\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4f4d\u6765\u8ba1\u5212\u5de5\u4f5c\u662f\u5f92\u52b3\u65e0\u76ca\u7684\uff0c\u800c\u4e14\u4e0d\u7ba1\u600e\u6837\uff0c\u6ca1\u6709\u4eba\u4f1a\u771f\u6b63\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u66f4\u6709\u8da3\u7684\u65b9\u6cd5\u662f\uff1a\u5bf9\u4e8e\u4efb\u4f55\u516c\u53f8\u6765\u8bf4\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5408\u9002\u7684\u56e2\u961f\u9650\u5236\u662f\u591a\u5c11\uff1f\u6bd4\u65b9\u8bf4\uff0c500\u4eba\u7684\u5927\u516c\u53f8\u5c31\u662f100\u4e2a5\u4eba\u7684\u56e2\u961f\u3002\u8fd9\u5c31\u662f\u4f60\u8fdb\u884c\u6bd4\u8f83\u7684\u65b9\u5f0f\u3002\n\u8fd9\u5e76\u4e0d\u662f\u8bf4\u516d\u5468\u662f\u4e00\u4e2a\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u6548\u7684\u795e\u5947\u6570\u5b57\u3002\u6211\u8ba4\u4e3a\u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u6570\u91cf\u60ca\u4eba\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u4e24\u5468\u7684\u65b9\u6cd5\u3002\u5b83\u8981\u6177\u6168\u5f97\u591a\u3002\u800c\u4e14\u66f4\u73b0\u5b9e\u7684\u662f\u4f60\u53ef\u4ee5\u8fd0\u9001\u6240\u6709\u7684\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u4e0d\u80fd\u5728\u516d\u5468\u5185\u4ea4\u4ed8\u5b8c\u6574\u7684\u529f\u80fd\uff0c\u90a3\u4e48\u60a8\u7684\u53cd\u9988\u5faa\u73af\u4ecd\u7136\u592a\u77ed\u3002\u5982\u679c\u6211\u4e0d\u80fd\u5728\u6211\u7684\u5468\u671f\u5185\u5b8c\u6210\u6574\u4e2a\u4e8b\u60c5\uff0c\u4ece\u5f00\u59cb\u5230\u5b9e\u73b0\uff0c\u518d\u5230\u53d1\u8d27\uff0c\u90a3\u4e48\u6211\u7684\u5468\u671f\u592a\u77ed\u4e86\u3002\n\u5982\u679c\u4f60\u4ece\u4e8b\u7684\u662f\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\uff0c\u8fd9\u65b9\u9762\u7684\u540d\u58f0\u5f88\u5dee\uff0c\u53ef\u80fd\u516d\u5468\u7684\u65f6\u95f4\u8fd8\u4e0d\u591f\u3002\u4e5f\u8bb8\u4f60\u9700\u8981\u66f4\u591a\u4e00\u70b9\u3002\u4e5f\u53ef\u80fd\u4e0d\u662f\u3002\u8fd9\u53d6\u51b3\u4e8e\u4f60\u662f\u5426\u80fd\u88c5\u8fd0\u4f60\u60f3\u88c5\u8fd0\u7684\u4e1c\u897f\u3002\u4f46\u6574\u4e2a\u884c\u4e1a\u5df2\u7ecf\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u8ba4\u4e3a\u2018\u54e6\uff0c\u4e24\u5468\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u65f6\u95f4\u6846\u67b6\u2019\u3002\u4ec0\u4e48\uff1f\u6211\u4eec\u600e\u4e48\u4f1a\u8fd9\u4e48\u80af\u5b9a\u5462\uff1f\u5373\u4f7f\u5bf9\u4e8e\u4e00\u5bb6\u62e5\u67095000\u540d\u5458\u5de5\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u516d\u5468\u4e5f\u662f\u4e00\u4e2a\u66f4\u73b0\u5b9e\u7684\u8d77\u70b9\u3002\n\u60a8\u8fd8\u8c08\u5230\u4e86\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u51fa\u73b0\u7684\u5176\u4ed6\u8d8b\u52bf\uff0c\u5982\u5fae\u670d\u52a1\u548c\u65e0\u670d\u52a1\u5668\u6216\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u3002\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u6709\u6ca1\u6709\u4ec0\u4e48\u8d8b\u52bf\u8ba9\u4f60\u89c9\u5f97\u5f88\u5438\u5f15\u4eba\u5462\uff1f\n\u8fd9\u662f\u4e2a\u5f88\u96be\u56de\u7b54\u7684\u95ee\u9898\u3002\u628a\u6211\u4e0d\u559c\u6b22\u7684\u72d7\u5c4e\u90fd\u6311\u51fa\u6765\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u663e\u7136\uff0c\u6211\u6709\u70b9\u504f\u89c1\uff0c\u56e0\u4e3a\u6211\u5728\u63a8\u52a8\u8fd9\u4e9b\u4e8b\u60c5\u3002\u6211\u6b63\u5728\u5b9e\u73b0Ruby on rails and Shape Up\uff0c\u6211\u5c06\u4e0e\u60a8\u5206\u4eab\u6211\u8ba4\u4e3a\u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u8f6f\u4ef6\u5f00\u53d1\u7684\u4e8b\u60c5\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6709\u5404\u79cd\u5404\u6837\u7684\u6280\u672f\u5806\u6808\u548cWeb\u5f00\u53d1\u65b9\u6cd5\u8ba9\u6211\u7b11\u4e86\u3002\u6211\u5f88\u9ad8\u5174\u770b\u5230\u6211\u4eec\u5728JavaScript\u5f00\u53d1\u65b9\u9762\u53d6\u5f97\u7684\u8fdb\u6b65\u3002\u5728\u524d\u7aef\u53d1\u751f\u7684\u5347\u7ea7\u5728\u539f\u5b50\u5c42\u9762\u4e0a\u5f88\u68d2\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u8bef\u5165\u6b67\u9014\u7684\u5730\u65b9\u5728\u4e8e\u5206\u5b50\u6c34\u5e73\u3002\u4eba\u4eec\u5728\u524d\u7aef\u91c7\u7528\u7684\u6846\u67b6\u548c\u65b9\u6cd5\u4e0d\u662f\u5f88\u597d\uff0c\u4f46\u6211\u8ba4\u4e3a\u652f\u6491\u6280\u672f\u6539\u8fdb\u7684\u662f\u4ee3\u7801\u8f6c\u6362\u5668\u3001\u591a\u91cd\u586b\u5145\u548cJavaScript\u7248\u672c\u7684\u6838\u5fc3\u8fdb\u5c55\u3002\n\u6211\u4eec\u5728\u7f51\u7edc\u4e0a\u6240\u505a\u7684\u5f88\u591a\u4e8b\u60c5\u90fd\u662f\u4e0e25\u5e74\u524d\u7684\u57fa\u672c\u539f\u7406\u4e00\u8d77\u5de5\u4f5c\u7684\u3002\u53d1\u751f\u7684\u6838\u5fc3\u521b\u65b0\u66f4\u591a\u7684\u662f\u8ba4\u8bc6\u5230\u5e94\u8be5\u628a\u91cd\u70b9\u653e\u5728\u54ea\u91cc\uff0c\u4ec0\u4e48\u662f\u91cd\u8981\u7684\uff0c\u4ec0\u4e48\u662f\u63a8\u52a8\u7684\u3002\u4f8b\u5982\uff0cWeb\u884c\u4e1a\u7684\u65b9\u6cd5\u8ba4\u4e3a\u524d\u7aef\u5f00\u53d1\u5e94\u8be5\u901a\u8fc7JSON\uff0c\u5176\u4e2d\u670d\u52a1\u5668\u7aef\u53ea\u8d1f\u8d23\u751f\u6210API\uff0c\u7136\u540eAPI\u8fd4\u56deJSON\uff0c\u8fd9\u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u8fc2\u56de\u505a\u6cd5\u3002\u6211\u4eec\u5e94\u8be5\u91cd\u65b0\u62e5\u62b1HTML\u3002\u5c06HTML\u653e\u5728\u6211\u4eec\u5de5\u4f5c\u7684\u4e2d\u5fc3\uff0c\u901a\u8fc7\u7f51\u7edc\u53d1\u9001HTML\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u65f6\u8fd4\u56de\u5b8c\u6574\u683c\u5f0f\u7684Web\u6587\u6863\uff0c\u7136\u540e\u8fd8\u53ef\u4ee5\u901a\u8fc7HTML\u8fdb\u884c\u540e\u7eed\u7684\u6c34\u5316\u6216\u66f4\u65b0\u3002\n\u6211\u60f3\u56de\u5230\u5fae\u670d\u52a1\u90e8\u95e8\u3002\u6211\u65e9\u4e9b\u65f6\u5019\u91c7\u8bbf\u7684\u4e00\u4f4d\u5de5\u7a0b\u5e08\u8c08\u5230\u5b83\u4eec\u662f\u5bf9\u5355\u4e00\u8f6f\u4ef6\u53d8\u5f97\u592a\u590d\u6742\u800c\u65e0\u6cd5\u7ef4\u62a4\u7684\u56de\u5e94\u3002\u4f60\u5bf9\u5fae\u670d\u52a1\u6709\u4ec0\u4e48\u4e0d\u6ee1\uff1f\n\u8ba9\u6211\u4eec\u4ece\u524d\u63d0\u5f00\u59cb\u3002\u5355\u7247\u8f6f\u4ef6\u53d8\u5f97\u5982\u6b64\u590d\u6742\u2026\u3002\u8fd9\u201c\u53d8\u6210\u201d\u4e86\u4ec0\u4e48\uff1f\u8fd9\u662f\u4e0d\u662f\u521a\u521a\u53d1\u751f\u5728\u6211\u4eec\u8eab\u4e0a\uff1f\u6211\u4eec\u662f\u5b8c\u5168\u65e0\u8f9c\u7684\u65c1\u89c2\u8005\u5417\uff1f\u590d\u6742\u6027\u5c31\u8fd9\u6837\u538b\u5728\u6211\u4eec\u8eab\u4e0a\uff0c\u800c\u6211\u4eec\u5374\u65e0\u80fd\u4e3a\u529b\uff1f\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u9a73\u65a5\u7684\u72d7\u5c41\u5047\u8bbe\u3002\u5f7b\u5934\u5f7b\u5c3e\u7684\u80e1\u8bf4\u516b\u9053\u3002\u4f60\u4e0d\u5fc5\u8ba9\u590d\u6742\u6027\u538b\u5012\u4f60\u3002\u4f60\u81ea\u5df1\u9009\u62e9\u5427\u3002\u4e00\u65e6\u4f60\u9009\u62e9\u4e86\u88ab\u590d\u6742\u6027\u6df9\u6ca1\uff0c\u90a3\u4e48\u4e00\u4e2a\u81ea\u7136\u7684\u53cd\u5e94\u5c31\u662f\u8bd5\u7740\u628a\u8fd9\u4e9b\u590d\u6742\u6027\u585e\u8fdb\u66f4\u591a\u4e0d\u540c\u7684\u76d2\u5b50\u91cc\uff0c\u56e0\u4e3a\u4f60\u5c31\u662f\u4e0d\u80fd\u4e00\u4e0b\u5b50\u5904\u7406\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u5bf9\u5417\uff1f\u4e0d\u5bf9!\u3002\u5148\u628a\u8fd9\u8be5\u6b7b\u7684\u4e8b\u5904\u7406\u597d\u3002\u4e3a\u4ec0\u4e48\u4e8b\u60c5\u4f1a\u8fd9\u4e48\u590d\u6742\uff1f\u5b83\u4eec\u4e00\u5b9a\u8981\u8fd9\u4e48\u590d\u6742\u5417\uff1f\u5b83\u4eec\u80fd\u4e0d\u80fd\u4e0d\u90a3\u4e48\u590d\u6742\u5462\uff1f\u5728\u6211\u770b\u6765\uff0c\u7b54\u6848\u662f\uff1a\u662f\u7684\uff0c\u4ed6\u4eec\u4e0d\u5fc5\u8fd9\u4e48\u590d\u6742\u3002\u662f\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u70b9\u4ec0\u4e48\u3002\u4e0d\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5c31\u5f97\u6295\u964d\u3002\n\u6211\u60f3\u5728\u8fd9\u91cc\u89e3\u51b3\u6839\u672c\u539f\u56e0\u3002Web\u5f00\u53d1\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e94\u8be5\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u7b80\u5355\u3002\u6211\u4eec\u5728\u538b\u7f29\u5927\u91cf\u9886\u57df\u7684\u6982\u5ff5\u5f00\u9500\u65b9\u9762\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u8fdb\u6b65\uff0c\u8fd9\u4e9b\u9886\u57df\u8fc7\u53bb\u975e\u5e38\u590d\u6742\uff0c\u4eba\u4eec\u9700\u8981\u975e\u5e38\u4ed4\u7ec6\u5730\u8003\u8651\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u4eba\u4eec\u4ecd\u7136\u4ee5\u5355\u4e00\u7684\u5e94\u7528\u7a0b\u5e8f\u7ed3\u675f\uff0c\u590d\u6742\u6027\u4f7f\u4ed6\u4eec\u4e0d\u582a\u91cd\u8d1f\uff0c\u8fd9\u662f\u4ed6\u4eec\u81ea\u5df1\u5236\u9020\u7684\u91ce\u517d\u3002\u4ed6\u4eec\u7684\u56de\u7b54\u662f\uff1a\u201c\u6211\u4eec\u53ef\u4ee5\u628a\u590d\u6742\u6027\u653e\u5728\u54ea\u91cc\uff1f\u201d\u800c\u4e0d\u662f\u8bd5\u56fe\u601d\u8003\u6211\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002\u4e0d\u5982\u6211\u4eec\u628a\u8ba8\u8bba\u96c6\u4e2d\u5728\u4e3a\u4ec0\u4e48\u6211\u4eec\u9996\u5148\u4f1a\u6709\u590d\u6742\u6027\u5462\uff1f\n\u5f00\u53d1\u4eba\u5458\u8c08\u8bba\u5076\u7136\u7684\u548c\u56fa\u6709\u7684\u590d\u6742\u6027\u3002\u610f\u5916\u7684\u590d\u6742\u6027\u5b58\u5728\u4e8e\u5b9e\u73b0\u4e2d\uff0c\u56fa\u6709\u7684\u590d\u6742\u6027\u5c31\u662f\u6211\u4eec\u5de5\u4f5c\u7684\u9886\u57df\u7684\u590d\u6742\u6027\u3002\u5927\u591a\u6570Web\u5e94\u7528\u7a0b\u5e8f\u7684\u56fa\u6709\u590d\u6742\u6027\u4e0e\u4ee5\u5f80\u4e00\u6837\u3002\u6211\u4eec\u5012\u9000\u7684\u5730\u65b9\u662f\u5f15\u5165\u4e86\u5927\u91cf\u7684\u610f\u5916\u590d\u6742\u6027\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u63a7\u5236\u5355\u7247\u5e94\u7528\u7a0b\u5e8f\u7684\u590d\u6742\u6027\uff0c\u7a76\u7adf\u662f\u4ec0\u4e48\u8ba9\u60a8\u8ba4\u4e3a\u60a8\u6709\u80fd\u529b\u5728\u73b0\u5728\u5fc5\u987b\u4ea4\u4e92\u548c\u5904\u7406\u7f51\u7edc\u4e0d\u53ef\u9760\u3001\u91cd\u8bd5\u3001\u4e24\u9636\u6bb5\u63d0\u4ea4\u4ee5\u53ca\u6240\u6709\u8fd9\u4e9b\u5728\u5904\u7406\u65b9\u6cd5\u8c03\u7528\u3001\u53c2\u6570\u548c\u8fd0\u884c\u5355\u4e2a\u8fdb\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\u65f6\u6839\u672c\u4e0d\u5b58\u5728\u7684\u670d\u52a1\u7fa4\u4e2d\u5206\u914d\u8fd9\u79cd\u590d\u6742\u6027\u3002\u5728\u590d\u6742\u6027\u7ea7\u522b\u4e0a\uff0c\u51e0\u4e4e\u6ca1\u6709\u6bd4\u5206\u53d1\u5e94\u7528\u7a0b\u5e8f\u66f4\u7cdf\u7cd5\u7684\u5371\u5bb3\u4e86\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u5904\u7406\u6700\u5c0f\u7684\u95ee\u9898\uff0c\u4e00\u65e6\u60a8\u5206\u53d1\u4e86\u5b83\uff0c\u5b83\u7684\u590d\u6742\u6027\u5c31\u4f1a\u589e\u52a0\u4e00\u4e2a\u6570\u91cf\u7ea7\u3002\n\u5176\u4ed6\u884c\u4e1a\u751a\u81f3\u653f\u754c\u4eba\u58eb\u90fd\u5c06\u79d1\u6280\u89c6\u4e3a\u521b\u65b0\u7684\u6e90\u6cc9\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u8d8a\u6765\u8d8a\u591a\u5730\u542c\u5230\u5f00\u53d1\u4eba\u5458\u8bf4\uff0c\u6574\u4e2a\u9886\u57df\u4ece\u6839\u672c\u4e0a\u6765\u8bf4\u90fd\u662f\u574f\u7684\u2026\u3002\n\u4e0d\uff0c\u4e0d\u3002\u8fd9\u6e90\u4e8e\u4e00\u79cd\u8bef\u89e3\uff0c\u5373\u5927\u591a\u6570\u8f6f\u4ef6\u5f00\u53d1\u90fd\u662f\u5de5\u7a0b\u5316\u7684\u3002\u6211\u4e0d\u76f8\u4fe1\u8fd9\u662f\u771f\u7684\u3002\u5f53\u4f60\u4ece\u4e00\u4e2a\u5de5\u7a0b\u5e08\u7684\u89d2\u5ea6\u6765\u770b\u8f6f\u4ef6\u5f00\u53d1\u65f6\uff0c\u662f\u7684\uff0c\u4e8b\u60c5\u770b\u8d77\u6765\u5f88\u7cdf\u7cd5\u3002\u7136\u540e\u5de5\u7a0b\u5e08\u4f1a\u8bf4\uff1a\u2018\u55ef\uff0c\u4f60\u4eec\u7684\u89c4\u683c\u771f\u7684\u5f88\u5bbd\u677e\u3002\u60a8\u7684\u5bb9\u5dee\u662f\u672a\u5b9a\u4e49\u7684\u3002\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u6240\u6709\u7684\u5de5\u7a0b\u8bc4\u4f30\uff0c\u8bf8\u5982\u6b64\u7c7b\u3002\u8fd9\u662f\u5bf9\u4ec0\u4e48\u662f\u8f6f\u4ef6\u5f00\u53d1\u7684\u6839\u672c\u8bef\u89e3\u3002\u8f6f\u4ef6\u5f00\u53d1\u4e0d\u662f\u4e0e\u642d\u5efa\u6865\u6881\u76f8\u540c\u610f\u4e49\u4e0a\u7684\u5de5\u7a0b\u3002\u5b83\u4eec\u4e0d\u4ec5\u4ec5\u662f\u540c\u4e00\u6839\u5b66\u79d1\u7684\u4e0d\u540c\u5206\u652f\u3002\n\u8bb8\u591a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6240\u4ece\u4e8b\u7684\u6574\u4e2a\u81ea\u6211\u538c\u6076\u662f\u5b8c\u5168\u6ca1\u6709\u751f\u4ea7\u529b\u7684\uff0c\u800c\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u5f97\u5230\u89e3\u51b3\u3002\u8fd9\u4e2a\u60f3\u6cd5\u8ba4\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u662f\u4e00\u4e2a\u5e74\u8f7b\u7684\u884c\u4e1a\uff0c\u5982\u679c\u6211\u4eec\u518d\u7ed9\u5b8330\u5e74\u7684\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\u5408\u89c4\u6027\u6216\u4efb\u4f55\u4e25\u683c\u7684\u8981\u6c42\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u51fa\u4e00\u4e2a\u6d6a\u6f2b\u5316\u7684\u5de5\u7a0b\u6982\u5ff5\uff0c\u4ed6\u4eec\u5728\u822a\u7a7a\u822a\u5929\u3001\u7535\u68af\u6216\u6865\u6881\u2026\u4e2d\u90fd\u6709\u8fd9\u6837\u7684\u6982\u5ff5\u3002\u4e0d\uff0c\u6211\u4eec\u4e0d\u662f\u3002\u8fd9\u662f\u4e00\u4e2a\u6839\u672c\u4e0d\u540c\u7684\u9886\u57df\uff0c\u9700\u8981\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\n\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u7b54\u6848\u3002\u6211\u4eec\u53ea\u662f\u5bb3\u6015\u62e5\u62b1\u4ed6\u4eec\u3002\u4f8b\u5982\uff0c\u5728\u4f20\u7edf\u5de5\u7a0b\u4e2d\uff0c\u4f30\u7b97\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u90e8\u5206\u3002\u4e8b\u60c5\u90fd\u662f\u6839\u636e\u9884\u4f30\u548c\u5173\u952e\u8def\u5f84\u56fe\u8fd0\u884c\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u5efa\u9020\u6469\u5929\u5927\u697c\u7684\u7b80\u5355\u65b9\u5f0f\u3002\u6d47\u6ce8\u6df7\u51dd\u571f\u540e\uff0c\u4f60\u4e0d\u9700\u8981\u91cd\u65b0\u914d\u7f6e\u5854\u67b6\u7684\u8fd0\u884c\u65b9\u5f0f\u3002\u8f6f\u4ef6\u5f00\u53d1\u5b8c\u5168\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u8f6f\u4ef6\u5728\u5f88\u591a\u65b9\u9762\u90fd\u66f4\u63a5\u8fd1\u4e8e\u5199\u4f5c\u3001\u6e38\u620f\u5236\u4f5c\u548c\u7535\u5f71\u7684\u521b\u4f5c\u8fc7\u7a0b\u3002\u4f60\u8bbe\u8ba1\u672a\u77e5\u4e8b\u7269\u7684\u7ecf\u5386\uff0c\u76f4\u5230\u4f60\u770b\u5230\u5b83\u624d\u77e5\u9053\u5b83\u662f\u597d\u662f\u574f\u3002\n\u770b\u770b\u7535\u5f71\u5236\u4f5c\u3002\u6211\u4eec\u62cd\u7535\u5f71\u5df2\u7ecf\u6709\u4e00\u767e\u5e74\u7684\u5386\u53f2\u4e86\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u5f04\u6e05\u695a\u521b\u4f5c\u8fc7\u7a0b\u5417\uff1f\u4e0d\uff01\u6211\u4eec\u6ca1\u6709\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5f88\u68d2\u7684\u5bfc\u6f14\uff0c\u4e00\u4e2a\u5f88\u68d2\u7684\u6f14\u5458\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u62cd\u4e00\u90e8\u5f88\u70c2\u7684\u7535\u5f71\u3002\u4e0e\u5efa\u7b51\u76f8\u6bd4\uff0c\u5927\u4f53\u4e0a\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u4f1f\u5927\u7684\u5efa\u7b51\u5e08\uff0c\u4e00\u4e2a\u4f1f\u5927\u7684\u5de5\u7a0b\u516c\u53f8\uff0c\u4e00\u4e2a\u4f1f\u5927\u7684\u603b\u627f\u5305\u5546\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u5ea7\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u5efa\u7b51\u3002\u4f60\u53ef\u80fd\u4f1a\u72af\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u4f46\u57fa\u672c\u7ed3\u6784\u5c06\u662f\u5065\u5168\u7684\uff0c\u9664\u975e\u6709\u4eba\u72af\u4e86\u4e00\u4e2a\u5b8c\u5168\u758f\u5ffd\u7684\u9519\u8bef\u3002\u5728\u7535\u5f71\u5236\u4f5c\u4e2d\uff0c\u5728\u97f3\u4e50\u4e2d\uff0c\u5728\u8f6f\u4ef6\u4e2d\uff0c\u4e8b\u60c5\u603b\u662f\u5931\u8d25\u7684\u3002\u5373\u4f7f\u77e5\u9053\u5982\u4f55\u6784\u5efa\u4e1c\u897f\u7684\u6280\u672f\u7684\u4f18\u79c0\u4eba\u5458\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u81f4\u529b\u4e8e\u67d0\u4ef6\u4e8b\u60c5\uff0c\u4ed6\u4eec\u6700\u7ec8\u4ecd\u7136\u4f1a\u5931\u8d25\u3002\n\u5de5\u7a0b\u5e08\u4eec\u5bf9\u53e6\u4e00\u4ef6\u4e8b\u975e\u5e38\u611f\u5174\u8da3\uff0c\u90a3\u5c31\u662f\u4ed6\u4eec\u5bf9\u7f16\u7a0b\u8bed\u8a00\u7684\u9009\u62e9\u3002\u6709\u597d\u7684\u8bed\u8a00\u548c\u574f\u7684\u8bed\u8a00\u5417\uff1f\n\u662f\u7684\uff0c\u5bf9\u4e00\u4e2a\u4eba\u6765\u8bf4\u3002\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u5bf9\u4e2a\u4eba\u6765\u8bf4\u53ef\u80fd\u66f4\u597d\uff0c\u4e5f\u53ef\u80fd\u66f4\u7cdf\u3002\u6211\u8ba4\u4e3a\u5ba2\u89c2\u4e0a\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u53d8\u5f97\u66f4\u597d\u6216\u66f4\u5dee\uff0c\u4f46\u8fd9\u79cd\u8ba8\u8bba\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u610f\u601d\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6709\u8da3\u7684\u8ba8\u8bba\u662f\u5173\u4e8e\u4e2a\u4eba\u771f\u76f8\u7684\u3002\n\u4f8b\u5982\uff0c\u5173\u4e8e\u7f16\u7a0b\u8bed\u8a00\u597d\u4e0e\u574f\u7684\u957f\u671f\u4e89\u8bba\u4e4b\u4e00\u662f\u60a8\u5e94\u8be5\u4f7f\u7528\u9759\u6001\u7c7b\u578b\u8fd8\u662f\u52a8\u6001\u7c7b\u578b\uff0c\u8fd8\u662f\u5e94\u8be5\u4f7f\u7528\u5f3a\u7c7b\u578b\u8bed\u8a00\u8fd8\u662f\u5f31\u7c7b\u578b\u8bed\u8a00\u3002\u5728Ruby\u4e2d\uff0c\u60a8\u6ca1\u6709\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u800c\u4e14\u6709\u4e00\u7c7b\u91cd\u6784\u6216\u9519\u8bef\u662f\u8be5\u65b9\u6cd5\u4e0d\u80fd\u5f88\u597d\u5730\u5904\u7406\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u60a8\u6709\u4e00\u4e9b\u7c7b\u4f3cJava\u7684\u4e1c\u897f\uff0c\u4ec5\u4e3e\u4e00\u4e2a\u6700\u5f3a\u7c7b\u578b\u8bed\u8a00\u7684\u6807\u51c6\u793a\u4f8b\uff0c\u5b83\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u4eba\uff0c\u4e0d\u540c\u7684\u5927\u8111\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u8981\u4e48\u8ddf\u4ed6\u4eec\u8bf4\u8bdd\uff0c\u8981\u4e48\u4e0d\u8ddf\u4ed6\u4eec\u8bf4\u8bdd\u3002\u5f53\u4f60\u89c2\u5bdf\u5b66\u4e60\u65b9\u5f0f\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u662f\u76f8\u4f3c\u7684\u3002\u6709\u4e9b\u4eba\u662f\u89c6\u89c9\u5b66\u4e60\uff0c\u6709\u4e9b\u4eba\u662f\u542c\u89c9\u5b66\u4e60\uff0c\u8fd9\u4e9b\u98ce\u683c\u5bf9\u4e2a\u4eba\u6765\u8bf4\u662f\u7edd\u5bf9\u6b63\u786e\u6216\u7edd\u5bf9\u9519\u8bef\u7684\u3002\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u89c6\u89c9\u5b66\u4e60\u8005\uff0c\u8bd5\u7740\u7528\u542c\u89c9\u6216\u89e6\u89c9\u7684\u65b9\u5f0f\u5b66\u4e60\u5bf9\u4f60\u6765\u8bf4\u662f\u884c\u4e0d\u901a\u7684\u3002\u5bf9\u6211\u6765\u8bf4\uff0cRuby\u662f\u4e00\u79cd\u6bd4\u6211\u5c1d\u8bd5\u8fc7\u7684\u4efb\u4f55\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u90fd\u4f18\u8d8a\u5f97\u591a\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u9002\u5408\u6211\u7684\u5927\u8111\u3002\n\u6211\u4eec\u5e94\u8be5\u5ba1\u89c6\u548c\u63a5\u53d7\u6765\u81ea\u4e0d\u540c\u5927\u8111\u7684\u4e2a\u4eba\u771f\u7406\uff0c\u4f46\u6211\u4eec\u4e0d\u5e94\u8be5\u56de\u907f\u4e0d\u540c\u5927\u8111\u7c7b\u578b\u7684\u4eba\uff0c\u4ed6\u4eec\u5728\u4e89\u8bba\u4ec0\u4e48\u662f\u66f4\u597d\u7684\uff0c\u4ec0\u4e48\u662f\u66f4\u574f\u7684\u3002\u610f\u89c1\u51b2\u7a81\u6709\u5de8\u5927\u7684\u4ef7\u503c\u3002\u5373\u4f7f\u4f60\u6709\u4e00\u4e2a\u4eba\uff0c\u50cf\u6211\u4e00\u6837\uff0c\u8bf4Ruby\u662f\u6709\u53f2\u4ee5\u6765\u6700\u4f1f\u5927\u7684\u8bed\u8a00\uff0c\u800c\u53e6\u4e00\u4e2a\u4eba\u8bf4Java\u662f\u6709\u53f2\u4ee5\u6765\u6700\u4f1f\u5927\u7684\u8bed\u8a00\u3002\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u5e94\u8be5\u62e5\u62b1\u7684\u4e1c\u897f\u3002\u5c31\u50cf\u539f\u5b50\u76f8\u4e92\u649e\u51fb\u4e00\u6837\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e86\u5149\u660e\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u80fd\u91cf\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u5174\u594b\u3002\u8fd9\u5f88\u597d\uff01\u5de5\u7a0b\u5e08\u662f\u5982\u6b64\u4ed6\u5988\u7684\u56de\u907f\u51b2\u7a81\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u65e0\u6cd5\u63a5\u53d7\u4e24\u4e2a\u610f\u89c1\u76f8\u5de6\u7684\u4eba\u800c\u4e0d\u540e\u9000\uff0c\u7136\u540e\u53bb\u201c\u53d6\u820d\u201d\uff01\u6743\u8861\u4e00\u4e0b\uff01\u8fd9\u8981\u770b\u60c5\u51b5\uff01\u8fd9\u5c31\u50cf\u54ed\u53d4\u53d4\u4e00\u6837\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u5b8c\u5168\u9002\u5f97\u5176\u53cd\u7684\u5b66\u4e60\u3001\u7075\u611f\u548c\u4efb\u4f55\u4e8b\u60c5\u7684\u65b9\u5f0f\u3002\n\u5f53\u6211\u8ba8\u8bba\u8f6f\u4ef6\u5f00\u53d1\u4ee5\u53ca\u6211\u7684\u9009\u62e9\u548c\u610f\u89c1\u65f6\uff0c\u6211\u4f1a\u6ee1\u6000\u4fe1\u5fc3\u5730\u53bb\u505a\uff0c\u76f8\u4fe1\u4ec0\u4e48\u5bf9\u6211\u662f\u6b63\u786e\u7684\u3002\u89c2\u4f17\u53ef\u4ee5\u51b3\u5b9a\u4ed6\u4eec\u66f4\u50cf\u8c01\u3002\u4ed6\u4eec\u53ef\u4ee5\u81ea\u5df1\u8bd5\u4e00\u8bd5\u3002\u4ed6\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u63d0\u51fa\u7684\u5173\u4e8e\u6211\u548cRuby Res\u604b\u60c5\u7684\u4e89\u8bba\u3002\n.", "note_en": "If you were to summarize the entire endeavor of software development, you\u2019d say: \u2018The project ran late and it got canceled\u2019.\n  We\u2019ve reached the end of Computers Are Hard. After several conversations about how individual components of software come to be \u2014 from printer drivers to password hashing \u2014 I wanted to wrap up with a look at the philosophy of building software products.\n It\u2019s perhaps a little embarrassing, but even after a couple of years in the industry, I never understood why tech companies are so obsessed with speed. And that obsession is baked into the very language of software, where work cycles are called sprints and measure of progress is called velocity. But is it really so fundamental to ship software fast? I don\u2019t know. I don\u2019t build software myself but I troubleshoot it every day and boy, do I sometimes wish engineers worked a little slower.\n I brought my questions about the methodology of building software to someone who\u2019s had his share of heated debates about the topic.  David Heinemeier Hansson created Ruby on Rails, is a co-founder and CTO of Basecamp, and an author of business books such as  Rework. He also has a reputation for speaking against the industry trends without mincing words, whether these trends are technical, like the rising popularity of microservices, or institutional, like venture capital becoming the default way of growing a business in tech. We talked about how software is built today, what does it mean for the people doing the building, and how it could be built instead.\n  Wojtek Borowicz: Software methodology is an industry of its own. There is Scrum, and Agile, and coaches, and books, and all of that. But you and your team at Basecamp don\u2019t follow these practices. Why?\n DHH: First of all, our approach to software development is heavily inspired by the Agile Manifesto and the Agile values. It is not so much inspired by the Agile practices as they exist today.\n A lot of Agile software methodologies focus on areas of product development that are not where the hard bits lie. They are so much about the procedural structures. Software, in most cases, is inherently unpredictable, unknowable, and unshaped. It\u2019s almost like a gas. It can fit into all sorts of different openings from the same basic idea. The notion of trying to estimate how long a feature is going to take doesn\u2019t work because you don\u2019t know what you\u2019re building and because humans are terrible at estimating anything. The history of software development is one of late or cancelled projects. If you were to summarize the entire endeavor of software development, you\u2019d say: \u2018The project ran late and it got canceled\u2019. Planning work doesn\u2019t work, so to speak.\n What we do at Basecamp we chose to label Shape Up, simply because that is where we find the hard work to be. We\u2019re trying to just accept the core constraint that it is impossible to accurately specify what software should do up front. You can only discover what software should do within constraints. But it\u2019s not like we follow the idea that it\u2019s done when it\u2019s done, either. That\u2019s an absolute abdication of product management thinking. What we say instead is: don\u2019t do estimates, do budgets. The core of Shape Up is about budgets. Not how long is something going to take but what is something worth. Because something could take a week or four months. What is it worth?\n Something could be worth the whole cycle of work \u2014 that\u2019s usually the limit \u2014 and for us this is six weeks. That\u2019s what we call a big batch. Or it could be worth less than that. Maybe only a week, maybe it\u2019s two weeks. That\u2019s a small batch. That takes the fuzzy project statement of \u2018let\u2019s add  Feature A\u2019, puts it under a constraint, and delegates figuring out implementation to the people doing the work. That\u2019s the key insight here. If you have a big problem definition and a fixed boundary and you give creative, intelligent people the freedom to come up with a solution within those terms, they will do wonderful work they are very proud of.\n In 2001 a group of 17 men (and, yes, zero women) published a document that set the course for the next 20 years of software development. Their  Agile Manifesto codified the principles of agile software development. The ideas were basic (for example: \u2018Working software is the primary measure of progress\u2019 and \u2018Simplicity is essential\u2019) but they spawned an entire universe of Agile coaches, consultants, and authors.\n So the problem with those methodologies is they put too much focus on estimating, which is inherently impossible with software?\n I\u2019d go even further and say that estimation is bullshit. It\u2019s so imprecise as to be useless, even when you\u2019re dealing with fixed inputs. And you\u2019re not. No one is ever able to accurately describe what a piece of software should do before they see the piece of software. This idea that we can preemptively describe what something should do before we start working on it is bunk. Agile was sort of onto this idea that you need running software to get feedback but the modern implementations of Agile are not embracing the lesson they themselves taught.\n But technology is almost religiously obsessed with speed. How does that work if you want to focus on speed but can\u2019t trust the estimations?\n We\u2019re talking about progress and speed. Those are actually two different things. You can try to do things faster and faster and realize you\u2019re actually not going any further. The interest for us in Shape Up is to go far. It\u2019s to end up with projects that deliver meaningful, large batches of work that customers and implementers are proud of and happy with. And that is not improved by trying to shrink feedback loops to be impossibly small. There\u2019s this idea that constant feedback is a good thing. Yes, within some reason! I don\u2019t want to be constantly evaluated on what I do. For example, we don\u2019t do sprints. Rejigging the work every two weeks as Scrum and other methodologies dictate is a completely oppressive and churning way of work that just exhausts everyone and doesn\u2019t actually deliver anything. Most people can\u2019t deliver real, big features in two weeks.\n The magic really is in shifting your mindset from estimates to budgets. Don\u2019t think about how long something takes. Think about how long are you willing to give something. This flips the entire idea. It lets the requirements float. The project definition that is vague is actually more realistic. Highly specific project definitions usually go astray very quickly. Vague enough definitions allow for creativity and selectivity for the people doing the work. And when you allow for those two things, you empower these people with the agency to do the best work they think they can do, not just follow the spec.\n The whole Agile rebellion was about rejecting big, upfront design. But I think Agile didn\u2019t take that conclusion far enough. It thought: \u2018we don\u2019t want big upfront design. We just want little upfront design\u2019. That\u2019s not really that much better. A lot of software methodology is myopically focused on the technical requirements of implementation. But the hard work in software is figuring out what it should do, not how to make it work. There is a mythology of the  10x programmer. But that\u2019s not the programmer who is heroic in their implementation of the problem. The 10x programmer is the programmer who restates the problem.\n  When teams are tied to the two-week cycles, estimations, and working to spec, do the quality of code and decision-making suffer?\n Certainly. But even more than that. It results in \u2014 and I mean it in a little bit of a glib way but not that glib \u2014 human suffering. People who work under such regimes are simply eaten up and spat out. To be constantly reevaluating everything you\u2019re doing every two weeks because that\u2019s when the new sprint cycle starts \u2014 it\u2019s going really fast, nowhere.\n This is why we don\u2019t do daily standups. This constant churn, just spinning around in a circle on a very tight leash. I think it\u2019s actually dehumanizing. Again, Agile said: \u2018Hey, you know what? That two-year software project you\u2019re trying to plan upfront? That\u2019s a completely bunk idea. It\u2019s way too far out\u2019. And yeah, absolutely! But then, Agile methodology as it\u2019s practiced lately, overcorrected and went way too short. It says two weeks with the daily standups is this magic cycle. No. People need some slack. Some autonomy. Some space.\n Through extensive experimentation we\u2019ve found that about six weeks gives us enough room to breathe and to think. And as long as you\u2019ve set boundaries, you end up making progress even if the day to day doesn\u2019t necessarily look like it. You may see more activity on a team that is very tightly leashed in terms of the feedback loops. They\u2019re frantically churning but don\u2019t end up making more progress. Sometimes, the teams that go the fastest are the teams that look very calm. They are not constantly on some methodology treadmill or on some procedural clock that goes ding! ding! ding! every five seconds.\n  Do you believe your Shape Up approach could work at a much larger organization? One that has 500 or 5,000 instead of 50 engineers?\n First of all, you shouldn\u2019t be thinking about software methodologies in terms of being able to scale from five people to five thousand. Trying to plan work for 5,000 people as one unit is a fool\u2019s errand and no one actually does that anyway. The more interesting approach is: what is the appropriate team limit in general, for any company? Large company of 500 is, let\u2019s say, a hundred teams of five. That\u2019s how you make the comparison.\n It\u2019s not to say that six weeks is some sort of a magic number that can work for everyone. I think it can actually work in a surprisingly large number of instances, far more often than the two weeks approach. It\u2019s far more generous. And far more realistic that you can ship whole things. But if you cannot ship complete features in six weeks, your feedback loop is still too short. If I can\u2019t make the whole thing happen, from inception, to implementation, to shipping, within the time frame I had for my cycle, my cycle is too short.\n If you work in native app development, which has a balls-up reputation, maybe six weeks is not enough time. Maybe you need a little more. Or maybe not. It depends on whether you can ship the things you want to ship. But the industry at large has already gelled around thinking \u2018oh, two weeks is a great time frame\u2019. What? How did we get to be so sure? Even for a 5,000 people company, six weeks is a more realistic starting point.\n You have also spoken in less than favorable terms about other trends that have emerged in software development, like microservices and serverless or Test-Driven Development. Are there any trends in software engineering that you actually find appealing?\n That\u2019s a tough question. It\u2019s much easier to pick out all the shit that I don\u2019t like.\n Obviously, I\u2019m a little biased because I am pushing those things. I\u2019m implementing Ruby on Rails and Shape Up and I\u2019m sharing the things that I think are how you should do software development. That doesn\u2019t mean there aren\u2019t other ways of doing it. There are all sorts of technology stacks and approaches to web development that give me a smile. I\u2019m very happy to see the advances we\u2019ve made in JavaScript development. The level-ups that have happened in front-end have been great at the atomic level. I think where we\u2019ve gone astray is the sort of molecule level. The frameworks and the approaches people take to front-end are not great but I think the underpinning technical improvements are with transpilers, polyfilling, and core progress on JavaScript over the versions.\n A lot of what we\u2019re doing with the web is working with fundamentals that are 25 years old. The core innovations that happened are more about recognizing where to put the emphasis, what\u2019s important, what to push for. For example, the web industry approach that front-end development should go through JSON, where the server side is just responsible for generating an API and then the API returns a JSON, is a bad detour. We should go back to embracing HTML. Have HTML at the center of what we do, send HTML over the wire so we\u2019re returning fully formed web documents on the first load, and then do subsequent hydration or updates through HTML as well.\n I wanted to go back to microservices. One of the engineers I spoke to earlier talked about them as a response to the monolithic software becoming too complex to maintain. What\u2019s your beef with microservices?\n Let\u2019s start with the premise. Monolithic software  becoming so complicated\u2026 what is this \u2018becoming\u2019? Is this just happening to us? Are we completely innocent bystanders? The complexity is just rolling over us and there\u2019s nothing we can do? That is a bullshit assumption that we need to refute. Complete and utter nonsense. You don\u2019t have to let complexity roll over you. You choose to. And once you\u2019ve chosen to be flooded with complexity, then a natural response is to try shove that complexity into more different boxes because you just can\u2019t handle it all at once, right? Wrong! Just deal with the fucking thing in the first place. Why are things so complicated? Do they have to be so complicated? Could they not be so complicated? In my opinion, the answers are: yeah, they don\u2019t have to be so complicated. Yeah, we can do something about it. No, it doesn\u2019t mean we have to just submit.\n I want to tackle the root cause here. Web development in large terms should be simpler than it ever was. We\u2019ve made tremendous steps forward in compressing conceptual overhead from a large number of domains that used to be very complicated and people needed to think very carefully about. That people somehow still end up with monolithic applications overwhelming them with complexity is a beast of their own making. Rather than try to think what can we do, the response is: \u2018where can we put the complexity?\u2019 How about we center the discussion around why we have the complexity in the first place?\n Developers talk about accidental and inherent complexity. Accidental complexity is in the implementation, inherent complexity is the complexity of the domain in which we\u2019re working. Inherent complexity in most web applications is the same it ever was. Where we regressed is in introducing a tremendous amount of accidental complexity. If you are unable to contain the complexity of a monolithic application, what on earth makes you think you are competent to distribute that complexity across a fleet of services that now have to interact and deal with network unreliability, retries, two-phase commits, and all these other complexities that simply do not exist when you deal with method calls, parameters, and the basics of running a singular process. There\u2019s very little worse harm you can do to an application on the complexity level than distribute it. You can take even the smallest problem and as soon as you distribute it, it grows an order of magnitude in complexity.\n Other industries and even politicians look up to tech as a source of innovation. Meanwhile, I hear developers more and more often say that the entire field is fundamentally broken\u2026\n No, no, no. This comes from a misconception that most software development is engineering. I don\u2019t believe it is. When you look at software development through the eyes of an engineer, yeah, things look broken. And then the engineer would go like: \u2018Well, your specs are really loose. Your tolerances are undefined\u2019. All these things, all the engineering assessment, blah, blah, blah. And it\u2019s a fundamental misunderstanding of what software development is. Software development is not engineering in the same sense as building a bridge. They\u2019re not just a different branch of the same root discipline.\n This whole self-loathing a lot of software engineers engage in is entirely unproductive and is never going to be resolved. The idea that software development is a young industry and if we just give it another 30 years of ISO compliance or whatever rigor, we\u2019re going to arrive at a romanticized notion of engineering they have in aerospace, or elevators, or bridges\u2026 no, we\u2019re not. This is a fundamentally different domain that requires a fundamentally different approach.\n We already have many of the answers. We\u2019re simply afraid of embracing them. For example, in traditional engineering estimates are a huge part. Things run on estimates and on critical path diagrams because that\u2019s simply the way you build a skyscraper. You don\u2019t get to reconfigure how the pylons go after you pour the concrete. Software development is nothing like that. Software in many ways is far closer to the creative process of writing, game making, movies. Experiences where you design the unknown and you don\u2019t know whether it\u2019s good or not until you see it.\n Look at movie making. We\u2019ve been making movies for a hundred years. Haven\u2019t we figured out the creative process yet? No! We haven\u2019t. You can take a great director, a great cast, and still make a totally shitty movie. Versus in building, largely speaking, if you take a great architect, a great engineering firm, and a great general contractor, you\u2019re gonna arrive at a building that works. You may make minor mistakes but the basic structure is going to be sound, unless someone makes a completely negligent error. In movie making, in music, in software things fail all the time. Even when good people who know the techniques of how to build things get together and work on something, they still end up failing.\n One more thing engineers feel strongly about is their choice of programming language. Is there such a thing as a good and a bad language?\n Yes, for a person. A programming language can be better or worse for an individual. I think they can also be better or worse on an objective level, but that discussion is almost uninteresting. The interesting discussion for me is one of personal truth.\n For example, one of the long-running debates about what makes a programming language good or not is whether you should use static or dynamic typing or strongly or weakly typed languages. In Ruby you don\u2019t have a statically typed language, and there\u2019s a certain class of refactorings or mistakes that approach does not do well with. On the other hand you have something like Java, just to take a standard example of the strongest-typed language, that works in a different way. For different people, with different brains, different languages either speak to them or they don\u2019t. It\u2019s similar when you look at learning styles. Some people learn visually, some people learn audibly, and these styles are absolutely right or wrong for the individual. If you are a visual learner, trying to learn in an audible or a tactile way just doesn\u2019t work for you. For me, Ruby is a far superior programming language to any other I ever tried because it fits my brain like a glove.\n We should look and embrace the personal truths that arise from different brains but we shouldn\u2019t shy away from people with different brain types arguing about what is better and what is worse. There is tremendous value in the clash of opinions. Even if you have one person, like me, who says Ruby is the greatest language ever and another person says Java is the greatest language ever. These are things we\u2019re supposed to embrace. It\u2019s like atoms hitting each other. Then we get light, we get energy, we get excitement. And that\u2019s good! Engineers are so fucking conflict-shy that they can\u2019t take two people disagreeing without backing off and going \u2018Trade offs! Trade offs! It depends!\u2019. It\u2019s like crying uncle, which I think is a completely counterproductive way to learning, to inspiration, to anything.\n When I debate software development and my choices and opinions, I do it with the full force of conviction about what\u2019s right for me. And the spectators can decide who they\u2019re more like. They can try for themselves. They can see whether the arguments I put forward about my romantic affair with Ruby res\n......", "posttime": "2020-10-15 05:48:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,heinemeier,hard", "title": "\u8ba1\u7b97\u673a\u5f88\u96be\uff1a\u4e0eDavid Heinemeier Hansson\u4e00\u8d77\u6784\u5efa\u8f6f\u4ef6", "title_en": "Computers Are Hard: Building Software With David Heinemeier Hansson", "transed": 1, "url": "https://medium.com/computers-are-hard/computers-are-hard-building-software-with-david-heinemeier-hansson-c9025cdf225e", "via": "", "real_tags": ["\u8f6f\u4ef6", "hard"]}, {"category": "", "categoryclass": "", "imagename": "f8ec440592574dbe79354c8951b32490.jpg", "infoid": 1028908, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u4eba\u5de5\u667a\u80fd\u5c31\u662f\u65b0\u7684\u7535\u3002\u201d\u81f3\u5c11\uff0c\u8fd9\u662f\u5b89\u5fb7\u9c81\u00b7\u5434(Andrew Ng)\u5728\u4eca\u5e74\u7684\u4e9a\u9a6c\u900a\u518d\u4fdd\u9669\uff1a\u706b\u661f\u5927\u4f1a\u4e0a\u63d0\u51fa\u7684\u5efa\u8bae\u3002\u5728\u4ed6\u7684\u4e3b\u65e8\u6f14\u8bb2\u4e2d\uff0cNg\u8ba8\u8bba\u4e86\u4eba\u5de5\u667a\u80fd(AI)\u7684\u5feb\u901f\u589e\u957f-\u5b83\u7a33\u6b65\u8fdb\u519b\u4e00\u4e2a\u53c8\u4e00\u4e2a\u884c\u4e1a\uff1b\u4eba\u5de5\u667a\u80fd\u7a81\u7834\u3001\u6280\u672f\u6216\u6050\u60e7\u7684\u65e0\u60c5\u51fa\u73b0\u5728\u6bcf\u5929\u7684\u5934\u6761\u65b0\u95fb\u4e2d\uff1b\u6765\u81ea\u5bfb\u6c42\u73b0\u4ee3\u5316\u7684\u8001\u724c\u4f01\u4e1a(\u89c1\u51e0\u5468\u524d\u7684\u7d22\u5c3c)\u4ee5\u53ca\u4e58\u5750\u4e13\u6ce8\u4e8e\u4eba\u5de5\u667a\u80fd\u7684\u521b\u59cb\u4eba\u6d6a\u6f6e\u7a7a\u964d\u5e02\u573a\u7684\u98ce\u9669\u6295\u8d44\u8005\u7684\u5de8\u989d\u6295\u8d44\u3002\n\u201c\u4eba\u5de5\u667a\u80fd\u662f\u4e0b\u4e00\u4e2a\u5927\u53d8\u9769\uff0c\u201dNg\u575a\u6301\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u5173\u6ce8\u8fd9\u573a\u53d8\u9769\u7684\u5c55\u5f00\u3002\n\u867d\u7136\u4eba\u5de5\u667a\u80fd\u53ef\u80fd\u662f\u65b0\u7684\u7535\u529b(\u4f5c\u4e3a\u5f57\u661f\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u6211\u4e0d\u9700\u8981\u592a\u591a\u7684\u8bf4\u670d\u529b)\uff0c\u4f46\u8be5\u9886\u57df\u8981\u5b9e\u73b0\u8fd9\u4e00\u6f5c\u529b\u4ecd\u7136\u5b58\u5728\u91cd\u5927\u6311\u6218\u3002\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u56e2\u961f\u4e0d\u80fd\u4f9d\u8d56\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u5728\u8fc7\u53bb20\u5e74\u4e2d\u4e00\u76f4\u5728\u4f7f\u7528\u7684\u5de5\u5177\u548c\u8fc7\u7a0b\u6765\u8fdb\u884c\u673a\u5668\u5b66\u4e60(ML)\u3002\n\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5de5\u5177\u548c\u8fc7\u7a0b\u7684\u4f9d\u8d56\u662f\u6709\u610f\u4e49\u7684--\u6570\u636e\u79d1\u5b66\u548c\u8f6f\u4ef6\u5de5\u7a0b\u90fd\u662f\u4e3b\u8981\u5de5\u5177\u662f\u4ee3\u7801\u7684\u5b66\u79d1\u3002\u7136\u800c\uff0c\u5728\u6570\u636e\u79d1\u5b66\u56e2\u961f\u4e2d\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u4e0e\u5728\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u4e2d\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u662f\u622a\u7136\u4e0d\u540c\u7684\u3002\u68c0\u67e5\u8fd9\u4e24\u4e2a\u5b66\u79d1\u4e4b\u95f4\u7684\u6838\u5fc3\u5dee\u5f02\u662f\u4e00\u6b21\u6709\u76ca\u7684\u7ec3\u4e60\uff0c\u6709\u52a9\u4e8e\u6f84\u6e05\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u601d\u8003\u5982\u4f55\u6784\u5efa\u6211\u4eec\u7684\u4eba\u5de5\u667a\u80fd\u5de5\u5177\u548c\u6d41\u7a0b\u3002\n\u5728Comet\uff0c\u6211\u4eec\u76f8\u4fe1\u91c7\u7528\u4e13\u95e8\u4e3a\u4eba\u5de5\u667a\u80fd\u8bbe\u8ba1\u7684\u5de5\u5177\u548c\u6d41\u7a0b\u5c06\u5e2e\u52a9\u4ece\u4e1a\u8005\u89e3\u9501\u5e76\u5b9e\u73b0Ng\u6240\u8bf4\u7684\u9769\u547d\u6027\u8f6c\u578b\u7c7b\u578b\u3002\n\u8f6f\u4ef6\u5de5\u7a0b\u662f\u4e00\u95e8\u5b66\u79d1\uff0c\u4ece\u5e7f\u4e49\u4e0a\u770b\uff0c\u5b83\u7684\u76ee\u6807\u662f\u8bbe\u8ba1\u548c\u5b9e\u73b0\u8ba1\u7b97\u673a\u53ef\u4ee5\u6267\u884c\u4ee5\u6267\u884c\u5b9a\u4e49\u7684\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u5047\u8bbe\u8f6f\u4ef6\u7a0b\u5e8f\u7684\u8f93\u5165\u5728\u9884\u671f\u7684(\u6216\u53d7\u7ea6\u675f\u7684)\u8f93\u5165\u8303\u56f4\u5185\uff0c\u5219\u5176\u884c\u4e3a\u662f\u53ef\u77e5\u7684\u3002\u57282015\u5e74ICML\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\uff0cLeon Bottou\u5f88\u597d\u5730\u9610\u8ff0\u4e86\u8fd9\u4e00\u70b9\uff1a\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u7b97\u6cd5\u6216\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u7684\uff0c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5982\u679c\u7ed9\u5b9a\u5173\u4e8e\u8f93\u5165\u7684\u7279\u5b9a\u5047\u8bbe\uff0c\u5f53\u7b97\u6cd5\u6216\u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u67d0\u4e9b\u5c5e\u6027\u5c06\u4e3a\u771f\u3002\n\u8f6f\u4ef6\u7a0b\u5e8f\u7684\u53ef\u8bc1\u660e\u6b63\u786e\u6027\u5851\u9020\u4e86\u6211\u4eec\u4e3a\u8fdb\u884c\u8f6f\u4ef6\u5de5\u7a0b\u800c\u6784\u5efa\u7684\u5de5\u5177\u548c\u8fc7\u7a0b\u3002\u8003\u8651\u8f6f\u4ef6\u7f16\u7a0b\u4ece\u53ef\u8bc1\u660e\u7684\u6b63\u786e\u6027\u4e2d\u5f97\u51fa\u7684\u4e00\u4e2a\u63a8\u8bba\u7279\u5f81\uff1a\u5982\u679c\u7a0b\u5e8f\u5bf9\u4e8e\u67d0\u4e9b\u8f93\u5165\u503c\u662f\u53ef\u8bc1\u660e\u6b63\u786e\u7684\uff0c\u5219\u8be5\u7a0b\u5e8f\u5305\u542b\u5bf9\u4e8e\u8fd9\u4e9b\u8f93\u5165\u503c\u4e5f\u662f\u53ef\u8bc1\u660e\u6b63\u786e\u7684\u5b50\u7a0b\u5e8f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u822c\u800c\u8a00\uff0c\u50cf\u654f\u6377\u8fd9\u6837\u7684\u5de5\u7a0b\u8fc7\u7a0b\u5bf9\u4e8e\u8f6f\u4ef6\u56e2\u961f\u6765\u8bf4\u662f\u6210\u529f\u548c\u9ad8\u6548\u7684\u3002\u5c06\u8fd9\u4e9b\u9879\u76ee\u5206\u89e3\u4e3a\u5b50\u4efb\u52a1\u662f\u53ef\u884c\u7684\u3002\u5927\u591a\u6570\u7011\u5e03\u548cScrum\u5b9e\u73b0\u8fd8\u5305\u542b\u5b50\u4efb\u52a1\u3002\n\u6211\u4eec\u770b\u5230\u8bb8\u591a\u6570\u636e\u79d1\u5b66\u56e2\u961f\u4f7f\u7528\u4e0e\u8fd9\u4e9b\u8f6f\u4ef6\u65b9\u6cd5\u76f8\u540c\u6216\u5927\u81f4\u76f8\u4f3c\u7684\u5de5\u4f5c\u6d41\u6d41\u7a0b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4eec\u7684\u6548\u679c\u4e0d\u662f\u5f88\u597d\u3002\u539f\u56e0\u5462\uff1f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u53ef\u8bc1\u660e\u7684\u6b63\u786e\u6027\u5e76\u4e0d\u5ef6\u4f38\u5230\u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60\u3002\u5728(\u6709\u76d1\u7763\u7684)\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u5bf9\u6240\u5efa\u7acb\u7684\u6a21\u578b\u552f\u4e00\u7684\u4fdd\u8bc1\u662f\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u662f\u6765\u81ea\u67d0\u4e2a\u5206\u5e03\u7684IID(\u72ec\u7acb\u540c\u5206\u5e03)\u6837\u672c\uff0c\u90a3\u4e48\u5728\u540c\u4e00\u5206\u5e03\u7684\u53e6\u4e00\u4e2aIID\u6837\u672c\u4e0a\u7684\u6027\u80fd\u5c06\u63a5\u8fd1\u4e8e\u8bad\u7ec3\u96c6\u7684\u6027\u80fd\u3002\u56e0\u4e3a\u4e0d\u786e\u5b9a\u6027\u662f\u673a\u5668\u5b66\u4e60\u7684\u56fa\u6709\u5c5e\u6027\uff0c\u5b50\u4efb\u52a1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u89c1\u7684\u4e0b\u6e38\u5f71\u54cd\u3002\n\u90e8\u5206\u7b54\u6848\u5728\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373(A)\u6211\u4eec\u611f\u5174\u8da3\u5e76\u4e14(B)\u670d\u4ece\u4e8e\u673a\u5668\u5b66\u4e60\u89e3\u51b3\u65b9\u6848(\u4f8b\u5982\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3001\u5bf9\u8c61\u8bc6\u522b\u3001\u6807\u8bb0\u56fe\u50cf\u548c\u751f\u6210\u6027\u8bed\u8a00\u6a21\u578b\u7b49)\u7684\u95ee\u9898\u6ca1\u6709\u660e\u786e\u7684\u53ef\u91cd\u73b0\u7684\u6570\u5b66\u6216\u7f16\u7a0b\u89c4\u8303\u3002\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u4ee3\u66ff\u89c4\u8303\u8f93\u5165\u5927\u91cf\u6570\u636e\uff0c\u4ee5\u4fbf\u68c0\u6d4b\u6a21\u5f0f\u5e76\u751f\u6210\u9884\u6d4b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u673a\u5668\u5b66\u4e60\u7684\u76ee\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7edf\u8ba1\u4ee3\u7406\uff0c\u4f5c\u4e3a\u8fd9\u4e9b\u4efb\u52a1\u4e4b\u4e00\u7684\u89c4\u8303\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u6536\u96c6\u7684\u6570\u636e\u662f\u771f\u5b9e\u4e16\u754c\u5206\u5e03\u7684\u4ee3\u8868\u6027\u5b50\u6837\u672c\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\u786e\u5207\u5730\u77e5\u9053\u8fd9\u4e00\u6761\u4ef6\u5f97\u5230\u4e86\u591a\u597d\u7684\u6ee1\u8db3\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u7b97\u6cd5\u548c\u6a21\u578b\u4f53\u7cfb\u7ed3\u6784\u975e\u5e38\u590d\u6742\uff0c\u8db3\u591f\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u4e0d\u80fd\u603b\u662f\u5c06\u5b83\u4eec\u62c6\u5206\u6210\u5b50\u6a21\u578b\u6765\u51c6\u786e\u5730\u7406\u89e3\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u4ece\u8fd9\u4e2a\u63cf\u8ff0\u4e2d\uff0c\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u53ef\u77e5\u6027\u7684\u969c\u788d\u5e94\u8be5\u662f\u6bd4\u8f83\u660e\u663e\u7684\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u6765\u8bf4\uff0c\u8fd9\u7c7b\u95ee\u9898\u7684\u56fa\u6709\u4e4b\u5904\u5728\u4e8e\u7f3a\u4e4f\u660e\u786e\u7684\u6570\u5b66\u89c4\u8303\u3002\u6211\u4eec\u5728\u6ca1\u6709\u89c4\u8303\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u7edf\u8ba1\u4ee3\u7406\u6b63\u5728\u79ef\u7d2f\u5927\u91cf\u7684\u73af\u5883\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u6570\u636e\u662f\u771f\u5b9e\u7684\u548c\u5177\u6709\u4ee3\u8868\u6027\u7684\u3002\u6211\u4eec\u7528\u6765\u4ece\u6536\u96c6\u7684\u6570\u636e\u4e2d\u63d0\u53d6\u6a21\u5f0f\u7684\u6a21\u578b\u975e\u5e38\u590d\u6742\uff0c\u6211\u4eec\u4e0d\u80fd\u53ef\u9760\u5730\u5c06\u5b83\u4eec\u62c6\u5206\u5f00\u6765\uff0c\u51c6\u786e\u5730\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6211\u5728Comet\u7684\u540c\u4e8bDhruv Nair\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u7684\u4e09\u90e8\u5206\u7cfb\u5217\u6587\u7ae0(\u8fd9\u91cc\u6709\u5230\u7b2c\u4e00\u90e8\u5206\u7684\u94fe\u63a5)\uff0c\u5982\u679c\u60a8\u60f3\u66f4\u6df1\u5165\u5730\u6316\u6398\u8fd9\u4e2a\u4e3b\u9898\u7684\u8bdd\u3002\n\u90a3\u4e48\uff0c\u8003\u8651\u4e00\u4e0b\u673a\u5668\u5b66\u4e60\u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u654f\u6377\u65b9\u6cd5\u7684\u542b\u4e49\u3002\u6211\u4eec\u4e0d\u53ef\u80fd\u5e0c\u671b\u5c06\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u5206\u89e3\u4e3a\u5b50\u4efb\u52a1\uff0c\u4f5c\u4e3a\u67d0\u4e2a\u66f4\u5927\u7684\u51b2\u523a\u7684\u4e00\u90e8\u5206\u6765\u5904\u7406\uff0c\u7136\u540e\u50cf\u4e50\u9ad8\u4e00\u6837\u62fc\u51d1\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u4ea7\u54c1\u3001\u5e73\u53f0\u6216\u529f\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u53ef\u9760\u5730\u9884\u6d4b\u5b50\u6a21\u578b\u6216\u6a21\u578b\u672c\u8eab\u5c06\u5982\u4f55\u5de5\u4f5c\u3002\n\u5434\u660c\u4fca\u4e5f\u5728Re\uff1aMars\u4e0a\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u8bdd\u9898\u3002\u4ed6\u900f\u9732\u4e86\u4ed6\u7684\u56e2\u961f\u662f\u5982\u4f55\u91c7\u7528\u4e13\u95e8\u4e3aML\uff1a1\u5929\u51b2\u523a\u8bbe\u8ba1\u7684\u5de5\u4f5c\u6d41\u7cfb\u7edf\u7684\uff0c\u7ed3\u6784\u5982\u4e0b\uff1a\nNg\u76841\u5929\u51b2\u523a\u65b9\u6cd5\u8bba\u53cd\u6620\u4e86\u4e00\u4e9b\u5bf9\u7406\u89e3\u548c\u8bbe\u8ba1\u5b9e\u8df5\u673a\u5668\u5b66\u4e60\u7684\u56e2\u961f\u81f3\u5173\u91cd\u8981\u7684\u4e1c\u897f\uff1a\u8fd9\u662f\u4e00\u95e8\u5185\u5728\u7684\u5b9e\u9a8c\u79d1\u5b66\u3002\u56e0\u4e3a\u6b63\u5728\u5efa\u9020\u7684\u7cfb\u7edf\u7f3a\u4e4f\u660e\u786e\u7684\u89c4\u8303\uff0c\u56e0\u4e3a\u6570\u636e\u6536\u96c6\u662f\u4e00\u95e8\u4e0d\u5b8c\u7f8e\u7684\u79d1\u5b66\uff0c\u800c\u4e14\u56e0\u4e3a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u975e\u5e38\u590d\u6742\uff0c\u6240\u4ee5\u5b9e\u9a8c\u662f\u5fc5\u8981\u7684\u3002\u4e0e\u56f4\u7ed5\u6570\u5468\u7684\u51b2\u523a\u6765\u6784\u5efa\u56e2\u961f\u6d41\u7a0b\u76f8\u6bd4\uff0c\u5feb\u901f\u6d4b\u8bd5\u8bb8\u591a\u4e0d\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\u3001\u529f\u80fd\u5de5\u7a0b\u9009\u62e9\u548c\u4f18\u5316\u65b9\u6cd5\u901a\u5e38\u66f4\u6709\u6210\u6548\uff0c\u76f4\u5230\u5f00\u59cb\u51fa\u73b0\u4ec0\u4e48\u5728\u8d77\u4f5c\u7528\u3001\u4ec0\u4e48\u6ca1\u6709\u8d77\u4f5c\u7528\u7684\u7c97\u7565\u56fe\u50cf\u30021\u5929\u7684\u51b2\u523a\u4f7f\u56e2\u961f\u53ef\u4ee5\u5feb\u901f\u884c\u52a8\uff0c\u5728\u77ed\u65f6\u95f4\u5185\u6d4b\u8bd5\u8bb8\u591a\u5047\u8bbe\uff0c\u5e76\u5f00\u59cb\u56f4\u7ed5\u5efa\u6a21\u4efb\u52a1\u5efa\u7acb\u76f4\u89c9\u548c\u77e5\u8bc6\u3002\n\u5047\u8bbe\u60a8\u91c7\u7528Andrew Ng\u76841\u5929\u51b2\u523a\u65b9\u6cd5\u6216\u7c7b\u4f3c\u7684\u65b9\u6cd5(\u60a8\u5e94\u8be5\u8fd9\u6837\u505a)\u3002\u60a8\u6b63\u5728\u8bbe\u7f6e\u65b0\u7684\u8d85\u53c2\u6570\uff0c\u8c03\u6574\u60a8\u7684\u529f\u80fd\u9009\u62e9\uff0c\u5e76\u6bcf\u665a\u8fd0\u884c\u5b9e\u9a8c\u3002\u60a8\u4f7f\u7528\u4ec0\u4e48\u5de5\u5177\u6765\u8ddf\u8e2a\u6bcf\u4e2a\u6a21\u578b\u57f9\u8bad\u7684\u8fd9\u4e9b\u51b3\u7b56\uff1f\u60a8\u5982\u4f55\u6bd4\u8f83\u5b9e\u9a8c\u4ee5\u4e86\u89e3\u4e0d\u540c\u914d\u7f6e\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1f\u4f60\u662f\u5982\u4f55\u4e0e\u540c\u4e8b\u5206\u4eab\u5b9e\u9a8c\u7684\uff1f\u4f60\u7684\u7ecf\u7406\u6216\u540c\u4e8b\u80fd\u53ef\u9760\u5730\u590d\u5236\u4f60\u6628\u5929\u505a\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5417\uff1f\n\u9664\u4e86\u8fc7\u7a0b\u4e4b\u5916\uff0c\u60a8\u7528\u6765\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u7684\u5de5\u5177\u4e5f\u5f88\u91cd\u8981\u3002\u5728Comet\uff0c\u6211\u4eec\u7684\u4f7f\u547d\u662f\u901a\u8fc7\u4e3a\u60a8\u63d0\u4f9b\u5b8c\u6210\u6b64\u4efb\u52a1\u7684\u5de5\u5177\uff0c\u5e2e\u52a9\u516c\u53f8\u4ece\u673a\u5668\u5b66\u4e60\u4e2d\u63d0\u53d6\u4e1a\u52a1\u4ef7\u503c\u3002\u6211\u4eec\u91c7\u8bbf\u7684\u5927\u591a\u6570\u6570\u636e\u79d1\u5b66\u56e2\u961f\u90fd\u5728\u4f7f\u7528git\u3001\u7535\u5b50\u90ae\u4ef6\u548c(\u4fe1\u4e0d\u4fe1\u7531\u4f60)\u7535\u5b50\u8868\u683c\u7684\u7ec4\u5408\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5b9e\u9a8c\u5468\u56f4\u7684\u6240\u6709\u5de5\u4ef6\u3002\n\u8003\u8651\u4e00\u4e2a\u5efa\u6a21\u4efb\u52a1\uff0c\u5176\u4e2d\u60a8\u8ddf\u8e2a20\u4e2a\u8d85\u53c2\u6570\u300110\u4e2a\u5ea6\u91cf\u3001\u6570\u5341\u4e2a\u4f53\u7cfb\u7ed3\u6784\u548c\u529f\u80fd\u5de5\u7a0b\u6280\u672f\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u5728\u5feb\u901f\u8fed\u4ee3\u5e76\u4e00\u5929\u8fd0\u884c\u6570\u5341\u4e2a\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u7684\u3002\u624b\u52a8\u8ddf\u8e2a\u6240\u6709\u8fd9\u4e9b\u5de5\u4ef6\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u5355\u8c03\u4e4f\u5473\u3002\u6784\u5efa\u4e00\u4e2a\u597d\u7684ML\u6a21\u578b\u5e38\u5e38\u7c7b\u4f3c\u4e8e\u8c03\u8c10\u4e00\u53f0\u670950\u4e2a\u65cb\u94ae\u7684\u6536\u97f3\u673a\u3002\u5982\u679c\u60a8\u6ca1\u6709\u8ddf\u8e2a\u60a8\u5c1d\u8bd5\u8fc7\u7684\u6240\u6709\u914d\u7f6e\uff0c\u90a3\u4e48\u5728\u5efa\u6a21\u7a7a\u95f4\u4e2d\u67e5\u627e\u4fe1\u53f7\u7684\u7ec4\u5408\u590d\u6742\u6027\u53ef\u80fd\u4f1a\u53d8\u5f97\u5f88\u9ebb\u70e6\u3002\n\u6211\u4eec\u57fa\u4e8e\u8fd9\u4e9b\u9700\u6c42(\u4ee5\u53ca\u6211\u4eec\u5728Google\u3001IBM\u4ee5\u53ca\u4f5c\u4e3a\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u548c\u8036\u9c81\u5927\u5b66\u7814\u7a76\u5c0f\u7ec4\u7684\u4e00\u90e8\u5206\u81ea\u5df1\u4ece\u4e8b\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u65f6\u6240\u9700\u8981\u7684)\u6784\u5efa\u4e86Comet\u3002\u6bcf\u6b21\u8bad\u7ec3\u6a21\u578b\u65f6\uff0c\u90fd\u5e94\u8be5\u6709\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u6355\u83b7\u5b9e\u9a8c\u7684\u6240\u6709\u5de5\u4ef6\uff0c\u5e76\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u67d0\u4e2a\u4e2d\u592e\u5206\u7c7b\u5e10\u4e2d\uff0c\u5728\u90a3\u91cc\u60a8\u53ef\u4ee5\u67e5\u627e\u3001\u6bd4\u8f83\u548c\u7b5b\u9009\u60a8(\u6216\u60a8\u7684\u56e2\u961f)\u7684\u6240\u6709\u5de5\u4f5c\u3002Comet\u5c31\u662f\u4e3a\u4e86\u5411\u673a\u5668\u5b66\u4e60\u7684\u5b9e\u8df5\u8005\u63d0\u4f9b\u8fd9\u4e00\u529f\u80fd\u800c\u6784\u5efa\u7684\u3002\n\u6d4b\u91cf\u5de5\u4f5c\u6d41\u6548\u7387\u662f\u51fa\u4e86\u540d\u7684\u56f0\u96be\uff0c\u4f46\u6211\u4eec\u7684\u7528\u6237\u62a5\u544a\u8bf4\uff0c\u4f7f\u7528Comet\u5e73\u5747\u8282\u7701\u4e8620-30%\u7684\u65f6\u95f4(\u6ce8\uff1aComet\u5bf9\u4e2a\u4eba\u548c\u7814\u7a76\u4eba\u5458\u514d\u8d39-\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u6ce8\u518c)\u3002\u8fd9\u6ca1\u6709\u8003\u8651\u5230\u72ec\u7279\u7684\u6d1e\u5bdf\u529b\u548c\u77e5\u8bc6\uff0c\u8fd9\u4e9b\u6d1e\u5bdf\u529b\u548c\u77e5\u8bc6\u6765\u81ea\u4e8e\u5bf9\u60a8\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\u7684\u76f4\u89c2\u7406\u89e3\u3001\u5b9e\u65f6\u6307\u6807\u8ddf\u8e2a\u3001\u56e2\u961f\u8303\u56f4\u7684\u534f\u4f5c\u548c\u5b9e\u9a8c\u6bd4\u8f83\u3002\u83b7\u53d6\u8fd9\u4e9b\u77e5\u8bc6\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u4e5f\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u80fd\u591f\u6784\u5efa\u66f4\u597d\u7684\u6a21\u578b\u3002\n\u5b8c\u5168\u5ffd\u7565\u6709\u5173ML\u5de5\u5177\u548c\u8fc7\u7a0b\u7684\u95ee\u9898\u662f\u5f88\u6709\u8bf1\u60d1\u529b\u7684\u3002\u5728\u4e00\u4e2a\u8d1f\u8d23\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3001\u8bed\u97f3\u52a9\u624b\u3001\u9762\u90e8\u8bc6\u522b\u548c\u66f4\u591a\u7a81\u7834\u6027\u6280\u672f\u7684\u9886\u57df\uff0c\u4eba\u4eec\u8df3\u5230\u81ea\u5df1\u5236\u9020\u8fd9\u4e9b\u5de5\u5177\u7684\u4e89\u6597\u4e2d\uff0c\u800c\u4e0d\u8003\u8651\u5982\u4f55\u6700\u597d\u5730\u5236\u9020\u5b83\u4eec\uff0c\u8fd9\u662f\u60c5\u6709\u53ef\u539f\u7684\u3002\n\u5982\u679c\u60a8\u786e\u4fe1\u8f6f\u4ef6\u5de5\u7a0b\u5806\u6808\u8db3\u591f\u597d\u5730\u5de5\u4f5c\u4e8e\u4eba\u5de5\u667a\u80fd\uff0c\u90a3\u4e48\u60a8\u5c06\u4e0d\u4f1a\u88ab\u8bc1\u660e\u662f\u5bf9\u662f\u9519\u3002\u6bd5\u7adf\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531\u4e0d\u786e\u5b9a\u6027\u5b9a\u4e49\u7684\u9886\u57df\u3002\u4f46\u4e5f\u8bb8\u6700\u597d\u662f\u4ee5\u6570\u636e\u79d1\u5b66\u5bb6\u8003\u8651\u5efa\u6a21\u4efb\u52a1\u7684\u65b9\u5f0f\u6765\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff1a\u53ef\u80fd\u7684\u672a\u6765\u7684\u6982\u7387\u5206\u5e03\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u662f\u6216\u591a\u6216\u5c11\u7684\u53ef\u80fd\u6027\uff1f\u50cf\u4eba\u5de5\u667a\u80fd\u8fd9\u6837\u5f3a\u5927\u548c\u6709\u524d\u9014\u7684\u9886\u57df\u5c06\u7ee7\u7eed\u4f9d\u8d56\u4e3a\u4e0d\u540c\u5b66\u79d1\u6784\u5efa\u7684\u5de5\u5177\u548c\u6d41\u7a0b\uff0c\u8fd8\u662f\u4f1a\u51fa\u73b0\u65b0\u7684\u5de5\u5177\u548c\u6d41\u7a0b\u6765\u6700\u5927\u9650\u5ea6\u5730\u589e\u5f3a\u4ece\u4e1a\u8005\u7684\u80fd\u529b\uff1f\n\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9bML\u5de5\u5177\u611f\u5174\u8da3\u6216\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u901a\u8fc7niko@comet.ml\u8054\u7cfb\u6211\u3002", "note_en": "\u201cAI is the new electricity.\u201d At least, that\u2019s what  Andrew Ng suggested at this year\u2019s  Amazon re:MARS conference. In his  keynote address, Ng discussed the rapid growth of artificial intelligence (AI) \u2014 its steady march into industry after industry; the unrelenting presence of AI breakthroughs, technologies, or fears in the headlines each day; the tremendous amount of investment, both from established enterprises seeking to modernize (see:  Sony, a couple of weeks ago) as well as from venture investors parachuting into the market riding a wave of AI-focused founders.\n  \u201cAI is the next big transformation,\u201d Ng insists, and we\u2019re watching the transformation unfold.\n  While AI may be the new electricity (and as a Data Scientist at  Comet, I don\u2019t need much convincing), significant challenges remain for the field to realize this potential.  In this blog post, I\u2019m going to talk about why data scientists and teams can\u2019t rely on the tools and processes that software engineering teams have been using for the last 20 years for machine learning  (ML).\n  The reliance on the tools and processes of software engineering makes sense \u2013 data science and software engineering are both disciplines whose principal tool is  code. Yet  what is being done in data science teams is radically different from what is being done in software engineering teams. An inspection of the core differences between the two disciplines is a helpful exercise in clarifying how we should think about structuring our tools and processes for doing AI.\n  At Comet, we believe the adoption of tools and processes designed specifically for AI will help practitioners unlock and enable the type of revolutionary transformation Ng is speaking about.\n    Software engineering is a discipline whose aim is, considered broadly, the design and implementation of programs that a computer can execute to perform a defined function. Assuming the input to a software program is within the expected (or constrained) range of inputs, its behavior is knowable. In a  talk at ICML in 2015, Leon Bottou formulated this well: in software engineering an algorithm or program can be proven  correct, in the sense that given particular assumptions about the input, certain properties will be true when the algorithm or program terminates.\n    The provable correctness of software programs has shaped the tools and processes we have built for doing software engineering. Consider one corollary characteristic of software programming that follows from provable correctness: if a program is provably correct for some input values, then the program contains sub-programs that are also provably correct for those input values. This is why engineering processes like  Agile are, broadly speaking, successful and productive for software teams. Breaking apart these projects into sub-tasks works. Most  waterfall and  scrum implementations also include sub-tasking as well.\n          We see a lot of data science teams using workflow processes that are identical or broadly similar to these software methodologies. Unfortunately, they don\u2019t work very well. The reason? The provable correctness of software engineering does not extend to AI and machine learning. In (supervised) machine learning, the only guarantee we have about a model we\u2019ve built is that if the training set is an  iid (independent and identically distributed) sample from some distribution, then performance on another iid sample from the same distribution will be  close to the performance on the training set. Because uncertainty is an intrinsic property of machine learning, sub-tasking can lead to unforeseeable downstream effects.\n        Part of the answer lies in the fact that the problems that are both (a) interesting to us and (b) amenable to machine learning solutions (self-driving cars, object recognition, labeling images, and generative language models, to name a few) do not have a clear reproducible mathematical or programmatic specification. In place of specifications, machine learning systems feed in lots of data in order to detect patterns and generate predictions. Put another way, the  purpose of machine learning is to create a statistical proxy that can serve as a specification for one of these tasks. We hope our collected data is a representative subsample of the real-world distribution, but in practice we cannot know exactly how well this condition is met. Finally, the algorithms and model architectures we use are complex, sufficiently complex that we cannot always break them apart into sub-models to understand precisely what is happening.\n    From this description, obstacles to the  knowability of machine learning systems should be somewhat obvious. Inherent to the types of problems amenable to machine learning is a lack of a clear mathematical specification. The statistical proxy we use in the absence of a specification is accumulating lots of environmental data we  hope is iid and representative. And the models we use to extract patterns from this collected data are sufficiently complex that we cannot reliably break them apart and understand precisely how they work. My colleague at Comet, Dhruv Nair, has written a three-part series on uncertainty in machine learning (here\u2019s a link to  Part I) if you\u2019d like to dig deeper into this topic.\n    Consider, then, the implications for something like the Agile methodology used on a machine learning project. We cannot possibly hope to break machine learning tasks into  sub-tasks, tackled as part of some larger sprint and then pieced together like legos into a whole product, platform, or feature, because we cannot reliably predict how the sub-models, or the model itself, will function.\n        Ng discussed this topic at re:MARS as well. He revealed how his team adopted a workflow system designed specifically for ML:  1 day sprints, structured as follows:\n        Ng\u2019s 1 day sprints methodology reflects something crucial to understanding and designing teams that practice machine learning: it is an inherently  experimental science. Because the systems being built lack a clear specification, because data collection is an imperfect science, and because machine learning models are incredibly complex,  experimentation is necessary. Rather than structuring team processes around a multi-week sprint, it is usually more fruitful to test out many different architectures, feature engineering choices, and optimization methods rapidly until a rough image of what is working and what isn\u2019t starts to emerge. 1 day sprints allow teams to move quickly, test many hypotheses in a short amount of time, and begin building intuition and knowledge around a modeling task.\n        Let\u2019s say you adopt Andrew Ng\u2019s 1 day sprints methodology or something similar ( and you should). You\u2019re setting new hyperparameters, tweaking your feature selections, and running experiments each night. What tool are you using to keep track of these decisions for each model training? How are you comparing experiments to see how different configurations are working? How are you sharing experiments with co-workers? Can your manager or co-worker reliably reproduce an experiment you ran yesterday?\n    In addition to processes, the tools you use to do machine learning matter as well. At Comet, our mission is to help companies extract business value from machine learning by providing a tool that does this for you. Most of the data science teams we speak to are stuck using a combination of git, emails, and (believe it or not) spreadsheets to record all of the artifacts around each experiment.\n    Consider a modeling task where you\u2019re keeping track of 20 hyperparameters, 10 metrics, dozens of architectures and feature engineering techniques, all while iterating quickly and running dozens of models a day. It can become incredibly tedious to manually track all of these artifacts. Building a good ML model can oftentimes resemble tuning a radio with 50 knobs. If you don\u2019t keep track of all of the configurations you\u2019ve tried, the combinatorial complexity of finding the signal in your modeling space can become cumbersome.\n    We\u2019ve built Comet based on these needs (and what we wanted when we were working on data science and machine learning ourselves, at Google, IBM, and as part of research groups at Columbia University and Yale University). Every time you train a model, there should be  something  to capture all of the artifacts of your experiment and save them in some central ledger where you can look up, compare, and filter through all of your (or your team\u2019s) work. Comet was built to provide this function to practitioners of machine learning.\n    Measuring workflow efficiency is a  notoriously difficult thing to do, but on average our users report\u00a0 20-30% time savings by using Comet (note: Comet is free for individuals and researchers \u2013  you can sign-up here). This doesn\u2019t take into account unique insights and knowledge that arise from having access to a visual understanding of your hyperparameter space, real-time metric tracking, team-wide collaboration and experiment comparison. Access to this knowledge enables time savings as well as, and perhaps more importantly, the ability to  build better models.\n        It is tempting to ignore questions about ML tools and processes altogether. In a field responsible for self-driving cars, voice assistants, facial recognition, and many more groundbreaking technologies, one may be forgiven for leaping into the fray of building these tools themselves and not considering how best to build them.\n    If you are convinced that the software engineering stack works  well enough for doing AI, you will not be proven definitively right or wrong. After all, this is a field defined by uncertainty. But perhaps it is best to consider this in the way a data scientist may consider a modeling task: what is the probability distribution of possible futures? What is more or less likely?  That a field as powerful and promising as AI will continue to rely on the tools and processes built for a different discipline, or that new ones will emerge to empower practitioners to the fullest?\n    If you are curious about these ML tools or have any questions, feel free to reach out to me at   niko@comet.ml .", "posttime": "2020-10-15 05:44:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u8fc7\u7a0b,engineering,\u56e2\u961f", "title": "\u4e3a\u4ec0\u4e48\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u548c\u5de5\u5177\u4e0d\u9002\u7528\u4e8e\u673a\u5668\u5b66\u4e60", "title_en": "Why software engineering processes and tools don\u2019t work for machine learning", "transed": 1, "url": "https://www.comet.ml/site/why-software-engineering-processes-and-tools-dont-work-for-machine-learning/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u8fc7\u7a0b", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "3a9d0f1ca607a77e7f3e349c3f66f02a.jpg", "infoid": 1028907, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u62dc\u767b\u7ade\u9009\u56e2\u961f\u6ca1\u6709\u8d28\u7591\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u7684\u771f\u5b9e\u6027\u3002", "note_en": "The Biden campaign did not dispute the veracity of the emails.", "posttime": "2020-10-15 05:44:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,twitter,\u56e2\u961f", "title": "Facebook\uff0cTwitter\u5c4f\u853d\u300a\u7ebd\u7ea6\u90ae\u62a5\u300b\u53d1\u5e16", "title_en": "Facebook, Twitter block the NY Post from posting", "transed": 1, "url": "https://www.nationalreview.com/news/twitter-cites-hacked-materials-policy-to-justify-censorship-of-ny-post-hunter-biden-article/", "via": "", "real_tags": ["facebook", "twitter", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "d9421ad3d565546b9f8de724a443bc0c.png", "infoid": 1028906, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u662f\u4e00\u4e2a\u5076\u7136\u7684DBA\uff0c\u975e\u5e38\u5f3a\u8c03\u5076\u7136\u3002&#34\uff1b\u6211\u4f5c\u4e3a\u4e00\u540d\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u6765\u5230PostgreSQL\uff0c\u4ed6\u975e\u5e38\u559c\u6b22\u7528SQL\u7f16\u7a0b\uff0c\u5e76\u4f7f\u7528\u6570\u636e\u5e93\u5e2e\u52a9\u89e3\u51b3\u6211\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u8fd8\u662f\u8981\u6295\u5165\u751f\u4ea7\uff0c\u56e0\u6b64\u6211\u5fc5\u987b\u5b66\u4f1a\u652f\u6301\u5b83\u4eec\u3002\nPostgreSQL\u76d1\u63a7\u548c\u6027\u80fd\u4f18\u5316\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u4e3b\u9898\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4f1a\u9605\u8bfb\u6211\u7684\u540c\u4e8bGreg Smith\u5728Ubuntu\u4e0a\u5bf9PostgreSQL13\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u65f6\u6240\u5199\u7684\u5185\u5bb9\uff0c\u5e76\u63d0\u9192\u6211\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u5b66\u4e60\uff01\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u51e0\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e0d\u53ef\u80fd\u516c\u6b63\u5730\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u60f3\u8bd5\u7740\u5206\u4eab\u4e00\u4e0b\u6211\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u8fdb\u5165\u8fd0\u8425\u89d2\u8272\u65f6\u6536\u96c6\u5230\u7684\u4e00\u4e9b\u89c1\u89e3\u3002\n\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u8c08\u5230\u4e86\u5982\u4f55\u4ec5\u901a\u8fc7\u67e5\u770b\u91cd\u8981\u7684\u7edf\u8ba1\u6570\u636e(CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u548c\u7f51\u7edc\u5229\u7528\u7387)\u5c31\u53ef\u4ee5\u4ece\u76d1\u89c6Postgres\u7cfb\u7edf\u4e2d\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u3002\u4f5c\u4e3a\u8d77\u70b9\uff0c\u8fd9\u4e9b\u5173\u4e8e\u8d44\u6e90\u5229\u7528\u7387\u7684\u7edf\u8ba1\u6570\u636e\u5f88\u6709\u5e2e\u52a9\uff1a\u5b83\u4eec\u53ef\u4ee5\u6307\u51fa\u7cfb\u7edf\u7684\u54ea\u4e2a\u90e8\u5206\u6709\u95ee\u9898\uff0c\u4f46\u53ef\u80fd\u5e76\u4e0d\u5b8c\u5168\u662f\u95ee\u9898\u6240\u5728\u3002\n\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\u63d0\u4f9b\u4e86PostgreSQL\u6570\u636e\u5e93\u6d3b\u52a8\u7684\u603b\u4f53\u60c5\u51b5\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u53d1\u73b0\u6027\u80fd\u548c\u53ef\u7528\u6027\u65b9\u9762\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u574f\u4e8b\u5f00\u59cb\u53d1\u751f\u4e4b\u524d\u63d0\u4f9b\u65e9\u671f\u8b66\u544a\u3002\n\u90a3\u4e48\uff0c\u8fd9\u4e9b\u6307\u6807\u544a\u8bc9\u60a8\u4ec0\u4e48\uff0c\u60a8\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u6765\u6210\u529f\u7ba1\u7406\u60a8\u7684PostgreSQL\u6570\u636e\u5e93\u5462\uff1f\n\u5bf9\u4e8e\u8fd9\u4e9b\u793a\u4f8b\uff0c\u6211\u4eec\u4f7f\u7528\u7531pgMonitor\u63d0\u4f9b\u652f\u6301\u7684\u76d1\u89c6\u5806\u6808\uff0c\u8be5\u5806\u6808\u53ef\u4ee5\u4e0epostgres\u64cd\u4f5c\u7b26\u4e00\u8d77\u5b89\u88c5\u3002\nPostgreSQL\u7684\u4e00\u4e2a\u5fc5\u9700\u914d\u7f6e\u53c2\u6570\u662fmax_connections\uff1a\u4efb\u4f55\u8d85\u8fc7\u6b64\u6570\u5b57\u7684\u8fde\u63a5\u90fd\u5c06\u5bfc\u81f4\u5ba2\u6237\u7aef\u8fde\u63a5\u5931\u8d25\u3002\u8fd9\u662f\u60a8\u9700\u8981\u76d1\u89c6\u6570\u636e\u5e93\u8fde\u63a5\u6570\u91cf\u7684\u7b2c\u4e00\u4e2a\u57fa\u672c\u539f\u56e0\uff1a\u8fc7\u591a\u7684\u8fde\u63a5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u505c\u673a\u4e8b\u4ef6\u3002\n\u8fde\u63a5\u8fc7\u591a\u8fd8\u4f1a\u5f71\u54cdPostgreSQL\u6570\u636e\u5e93\u7684\u6574\u4f53\u6027\u80fd\u3002\u8fd9\u5728Postgres\u4e2d\u662f\u4e00\u4e2a\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u7684\u95ee\u9898\uff0c\u4e8b\u5b9e\u4e0a\uff0cPostgreSQL14\u5c06\u5728\u8fd9\u4e00\u9886\u57df\u83b7\u5f97\u5de8\u5927\u7684\u6027\u80fd\u63d0\u5347\u3002\n\u67e5\u770b\u5230\u6570\u636e\u5e93\u7684\u8fde\u63a5\u603b\u6570\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u4f53\u7cfb\u7ed3\u6784\uff0c\u5e76\u786e\u5b9a\u6b63\u786e\u7684\u8bbe\u7f6e\u6765\u6700\u5927\u5316\u541e\u5410\u91cf\uff0c\u540c\u65f6\u9650\u5236\u5f00\u9500\u3002\n\u5173\u4e8e\u8fde\u63a5\u6545\u4e8b\u8fd8\u6709\u66f4\u591a\u7684\u5185\u5bb9\uff0c\u8fd9\u4e2a\u6545\u4e8b\u6d89\u53ca\u4e8b\u52a1\u4e2d\u7a7a\u95f2\u7684\u8fde\u63a5\u3002&#34\uff1b\u4e8b\u52a1\u4e2d\u7a7a\u95f2\u7684\u8fde\u63a5\u662f\u6307\u4e8b\u52a1\u6b63\u5728\u8fdb\u884c\u4e2d(\u4f8b\u5982\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\u6709\u4e00\u4e2a\u5f00\u59cb)\uff0c\u4f46\u5c1a\u672a\u63d0\u4ea4(\u63d0\u4ea4)\u6216\u56de\u6eda(\u56de\u6eda)\u3002\u5982\u679c\u4e8b\u52a1\u4e2d\u6709\u592a\u591a\u7a7a\u95f2\u7684\u8fde\u63a5\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u95ee\u9898\u548c\u6f5c\u5728\u7684\u7ef4\u62a4\u95ee\u9898\u3002\n\u5728\u4e8b\u52a1\u4e2d\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u8fde\u63a5\u53ef\u80fd\u4f1a\u963b\u6b62\u5bf9\u7cfb\u7edf\u8fdb\u884c\u9002\u5f53\u7684\u6e05\u7406\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53ef\u6015\u7684\u4e8b\u52a1ID\u56de\u7ed5\u95ee\u9898\u3002\u5982\u679c\u60a8\u770b\u5230\u4e8b\u52a1\u4e2d\u7684\u5ef6\u8fdf\u8fde\u63a5\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u60a8\u5e94\u8be5\u8c03\u67e5\u539f\u56e0\u5e76\u5c3d\u529b\u6d88\u9664\u5b83\u4eec\u3002\n\u4e8b\u52a1\u5904\u7406\u901f\u7387\uff0c\u65e0\u8bba\u662f\u4ee5\u6bcf\u79d2\u4e8b\u52a1\u5904\u7406\u91cf(TPS)\u8fd8\u662f\u4ee5\u6bcf\u5206\u949f\u4e8b\u52a1\u5904\u7406\u91cf(TPM)\u8861\u91cf\uff0c\u90fd\u4f1a\u8861\u91cf\u7cfb\u7edf\u7684\u603b\u4f53\u541e\u5410\u91cf\u3002\u901a\u5e38\uff0c\u6b64\u6307\u6807\u672c\u8eab\u5e76\u4e0d\u80fd\u544a\u8bc9\u60a8\u592a\u591a\u4fe1\u606f\uff1a\u4ea4\u6613\u7387\u53ef\u80fd\u4f1a\u6839\u636e\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u3001\u4e00\u5468\u4e2d\u7684\u67d0\u4e00\u5929\u7b49\u800c\u6709\u6240\u4e0d\u540c\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u6613\u7387\u6765\u5e2e\u52a9\u786e\u5b9a\u662f\u5426\u5b58\u5728\u8d1f\u8f7d\u9ad8\u5cf0\uff0c\u6216\u8005\u5c06\u5176\u4e0e\u53e6\u4e00\u4e2a\u6307\u6807(\u5982\u7f51\u7edc\u541e\u5410\u91cf)\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u786e\u5b9a\u60a8\u7684\u6027\u80fd\u662f\u5426\u53d7\u5230\u5f71\u54cd\u3002\n\u4e8b\u52a1\u7387\u53ef\u4ee5\u8ba9\u60a8\u5bf9\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u6709\u4e00\u4e2a\u6574\u4f53\u7684\u611f\u89c9\uff0c\u4f46\u662f\u9700\u8981\u4e0e\u53e6\u4e00\u4e2a\u6307\u6807\u7ed3\u5408\u4f7f\u7528\uff0c\u6216\u8005\u901a\u8fc7\u4f7f\u7528\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6bd4\u8f83\u6765\u5b9e\u73b0\u3002\n\u884c\u6d3b\u52a8\u53ef\u4ee5\u6307\u793a\u60a8\u6b63\u5728\u7ba1\u7406\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7c7b\u578b\uff0c\u662f\u8bfb\u53d6\u7e41\u91cd(SELECT)\u3001\u5199\u5165\u7e41\u91cd(INSERT/UPDATE/DELETE)\uff0c\u8fd8\u662f\u4e24\u8005\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u4e86\u89e3\u54ea\u79cd\u7c7b\u578b\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u7ed3\u5408\u5176\u4ed6\u6307\u6807\uff0c\u60a8\u53ef\u4ee5\u8c03\u6574\u6570\u636e\u5e93\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u3002\n\u4f8b\u5982\uff0c\u4e86\u89e3\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\u53ef\u4ee5\u5e2e\u52a9\u60a8\u8c03\u6574\u68c0\u67e5\u70b9\u7684\u53d1\u751f\u65f6\u95f4\u3002\u5728\u68c0\u67e5\u70b9\u671f\u95f4\uff0c\u6240\u6709\u810f\u6570\u636e(\u81ea\u4e0a\u4e00\u4e2a\u68c0\u67e5\u70b9\u4ee5\u6765\u4fee\u6539\u8fc7\u7684\u6570\u636e)\u90fd\u4f1a\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u662f\u4e00\u9879\u4ee3\u4ef7\u9ad8\u6602\u7684\u64cd\u4f5c\u3002\u4e86\u89e3\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\uff0c\u518d\u52a0\u4e0a\u60a8\u7684\u4e8b\u52a1\u7387\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u9009\u62e9\u9002\u5f53\u7684\u68c0\u67e5\u70b9\u8bbe\u7f6e\u3002\n\u8fd9\u5f88\u7b80\u5355\uff1a\u5982\u679cPostgreSQL\u4e0d\u80fd\u5199\u5165\u78c1\u76d8\uff0c\u60a8\u5c06\u505c\u673a\u3002\u8ddf\u8e2a\u78c1\u76d8\u5927\u5c0f\u5f88\u91cd\u8981\uff0c\u4f46\u4e86\u89e3\u54ea\u4e9b\u9879\u76ee\u6b63\u5728\u5360\u7528\u78c1\u76d8\u4e5f\u5f88\u6709\u5e2e\u52a9\u3002\n\u5bc6\u5207\u5173\u6ce8\u60a8\u7684\u603b\u4f53\u6570\u636e\u5e93\u5927\u5c0f\u662f\u6709\u597d\u5904\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c06\u6307\u793a\u60a8\u7684\u603b\u4f53\u6570\u636e\u589e\u957f\u7387\uff0c\u4ee5\u53ca\u4f55\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u91c7\u53d6\u5176\u4ed6\u6b65\u9aa4\uff0c\u4f8b\u5982\u8c03\u6574\u78c1\u76d8\u5927\u5c0f\u6216\u5c06\u6570\u636e\u5e93\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u3002\n\u6b64\u5916\uff0c\u8ddf\u8e2a\u9884\u5199\u65e5\u5fd7(WAL)\u5728\u78c1\u76d8\u4e0a\u7684\u5360\u7528\u91cf\u4e5f\u5f88\u597d\u3002\u5982\u679c\u60a8\u4f7f\u7528\u590d\u5236\u63d2\u69fd\uff0c\u5219\u8868\u660e\u590d\u5236\u63d2\u69fd\u672a\u5f97\u5230\u786e\u8ba4\u6216\u843d\u540e\u7684\u8ff9\u8c61\u662f\u6574\u4f53WAL\u65e5\u5fd7\u4fdd\u7559\u589e\u52a0\u3002\u5982\u679c\u7531\u4e8eWAL\u65e5\u5fd7\u8fc7\u591a\u5bfc\u81f4\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c\u60a8\u7684PostgreSQL\u5b9e\u4f8b\u5c06\u4f1a\u5b95\u673a\u3002\n\u8ddf\u8e2a\u6574\u4e2a\u7cfb\u7edf\u4ee5\u53caPostgreSQL\u7cfb\u7edf\u7684\u6bcf\u4e2a\u5355\u72ec\u7ec4\u4ef6\u7684\u78c1\u76d8\u4f7f\u7528\u91cf\u540c\u6837\u91cd\u8981\u3002\n\u6211\u5e0c\u671b\u5728\u6211\u804c\u4e1a\u751f\u6daf\u7684\u65e9\u671f\u66f4\u591a\u5730\u4e86\u89e3\u7f13\u5b58\u547d\u4e2d\u7387\uff0c\u56e0\u4e3a\u8fd9\u662f\u80fd\u591f\u6b63\u786e\u8c03\u6574PostgreSQL\u5b9e\u4f8b\u5927\u5c0f\u548c\u8c03\u4f18\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u6807\u3002\u7f13\u5b58\u547d\u4e2d\u7387\u662f\u5bf9\u60a8\u7684\u5de5\u4f5c\u6570\u636e\u96c6\u6709\u591a\u5c11\u9a7b\u7559\u5728\u5185\u5b58\u4e2d\u7684\u5ea6\u91cf\u3002\u5982\u679c\u60a8\u8bf7\u6c42\u4e0d\u5728\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0cPostgreSQL\u5c06\u4e0d\u5f97\u4e0d\u53bb\u4ece\u78c1\u76d8\u83b7\u53d6\u6570\u636e\uff0c\u8fd9\u662f\u4e00\u9879\u6210\u672c\u9ad8\u5f97\u591a\u7684\u64cd\u4f5c\u3002\u90a3\u4e48\uff0c\u60a8\u7684\u76ee\u6807\u662f\u5c1d\u8bd5\u4f7f\u7f13\u5b58\u547d\u4e2d\u7387\u5c3d\u53ef\u80fd\u63a5\u8fd1100%\u3002\n\u90a3\u4e48\uff0c\u60a8\u7684\u5de5\u4f5c\u6570\u636e\u96c6\u662f\u4ec0\u4e48\uff1f\u7b80\u5355\u5730\u8bf4\uff0c\u60a8\u7684\u5de5\u4f5c\u6570\u636e\u96c6\u5c31\u662f\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u7ed9\u5b9a\u65f6\u95f4\u6bb5\u5185\u8bbf\u95ee\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u7a0b\u5b89\u6392\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53ea\u67e5\u770b\u4eca\u5929\u6216\u5c06\u6765\u7684\u7ea6\u4f1a\u3002\u56e0\u6b64\uff0c\u6211\u7684\u5de5\u4f5c\u6570\u636e\u96c6\u7684\u6700\u5927\u5927\u5c0f\u5c06\u662f\u4ece\u73b0\u5728\u5230\u5c06\u6765\u7684\u6240\u6709\u8ba1\u5212\u9879\u76ee\u3002\u6211\u7684\u5b9e\u9645\u5de5\u4f5c\u6570\u636e\u96c6\u53ef\u80fd\u66f4\u5c0f\uff1a\u5e94\u7528\u7a0b\u5e8f\u66f4\u6709\u53ef\u80fd\u8bbf\u95ee\u79bb\u4eca\u5929\u66f4\u8fd1\u7684\u7ea6\u4f1a\uff0c\u800c\u4e0d\u662f\u66f4\u8fdc\u7684\u7ea6\u4f1a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7a97\u53e3\u7f29\u5c0f\u5230\u8fd9\u4e00\u8303\u56f4\u3002\n\u60a8\u5982\u4f55\u5e2e\u52a9\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387\uff1f\u6700\u7b80\u5355\u7684\u7b54\u6848\u662f\u589e\u52a0\u5185\u5b58\uff0c\u518d\u7ed3\u5408\u8c03\u4f18PostgreSQL SHARED_BUFFERS\u8bbe\u7f6e\u3002\u4f46\u662f\uff0c\u66f4\u957f\u8fdc\u7684\u7b54\u6848\u662f\u5b83\u5f88\u590d\u6742\uff0c\u9700\u8981\u4e86\u89e3\u60a8\u7684\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u4fbf\u7ed3\u5408PostgreSQL\u914d\u7f6e\u6765\u4f18\u5316\u60a8\u7684\u7269\u7406\u8d44\u6e90(\u5c3d\u7ba1Shared_Buffers\u5728\u8fd9\u65b9\u9762\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272)\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u60a8\u9700\u8981\u4e86\u89e3\u60a8\u7684\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u4fbf\u4f18\u5316\u60a8\u7684\u7269\u7406\u8d44\u6e90\u548cPostgreSQL\u914d\u7f6e(\u5c3d\u7ba1Shared_Buffers\u5728\u5176\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272)\u3002\u6b64\u5916\uff0c\u91cd\u65b0\u542f\u52a8\u540e\uff0cPostgreSQL\u5c06\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u5c06\u5de5\u4f5c\u6570\u636e\u96c6\u62c9\u5165\u5185\u5b58\uff0c\u4e0d\u8fc7\u60a8\u53ef\u4ee5\u4f7f\u7528pg_preware\u6765\u62b5\u6d88\u90e8\u5206\u8d1f\u62c5\u3002\n\u76d1\u63a7\u7f13\u5b58\u547d\u4e2d\u7387\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4ece\u6839\u672c\u4e0a\u8c03\u6574PostgreSQL\u6570\u636e\u5e93\uff0c\u4e86\u89e3\u60a8\u9700\u8981\u54ea\u4e9b\u786c\u4ef6\u8d44\u6e90\uff0c\u5e76\u5e2e\u52a9\u60a8\u66f4\u597d\u5730\u4e86\u89e3\u60a8\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbf\u95ee\u6a21\u5f0f\u3002\n\u901a\u5e38\uff0c\u5f53\u6211\u5fc5\u987b\u67e5\u770b\u9501\u65f6\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u4f1a\u7a81\u7136\u5145\u6ee1\u4e24\u79cd\u7c7b\u578b\u7684PostgreSQL\u9519\u8bef\u4e2d\u7684\u4e00\u79cd\uff1a&#34\uff1b\u65e0\u6cd5\u83b7\u53d6\u9501&#34\uff1b\u6216&#34\uff1b\u6b7b\u9501\u3002&#34\uff1b\u7136\u540e\u6211\u4f1a\u53bb\u8c03\u67e5PG_LOCKS\u8868\uff0c\u5e76\u5c1d\u8bd5\u67e5\u627e\u4efb\u4f55\u4f3c\u4e4e\u5f02\u5e38\u7684\u884c\u4e3a\u3002\n\u9501\u5b9a\u662fPostgreSQL\u7684\u81ea\u7136\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u662f\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236(MVCC)\u7684\u57fa\u672c\u90e8\u5206\u4e4b\u4e00\uff0c\u56e0\u6b64\u62e5\u6709\u9501\u662f\u975e\u5e38\u6b63\u5e38\u7684\u3002\u5bc6\u94a5\u4f4d\u662f\u4e0a\u9762\u7684\uff1a\u786e\u4fdd\u60a8\u53ef\u4ee5\u907f\u514d\u7531\u4e8e\u9501\u5b9a\u800c\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u6211\u4f1a\u9047\u5230\u7684\u6700\u5e38\u89c1\u7684\u9501\u5b9a\u9519\u8bef\u662f&#34\uff1b\u65e0\u6cd5\u83b7\u53d6\u9501\u5b9a\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u6211\u7684\u7cfb\u7edf\u5728\u8fd9\u4e00\u70b9\u4e0a\u5df2\u7ecf\u8fc7\u9971\u548c\u3002\u6211\u901a\u5e38\u4f1a\u56e0\u4e3a\u9519\u8bef\u7684\u4ee3\u7801\u800c\u89e6\u53d1\u6b7b\u9501(\u6211\u627f\u8ba4\uff1a\u6211\u786e\u5b9e\u7f16\u5199\u4e86\u4e00\u4e9b\u975e\u5e38\u590d\u6742\u7684\u94fe\u5f0f\u89e6\u53d1\u5668\uff0c\u8fd9\u901a\u5e38\u4f1a\u8d77\u4f5c\u7528)\u3002\n\u9501\u5b9a\u95ee\u9898\u53ef\u80fd\u5f88\u96be\u8bca\u65ad\uff0c\u66f4\u4e0d\u7528\u8bf4\u4fee\u590d\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u6d89\u53ca\u540c\u65f6\u5c1d\u8bd5\u6267\u884c\u7c7b\u4f3c\u64cd\u4f5c\u7684\u591a\u4e2a\u4f1a\u8bdd\u3002\u91cd\u8981\u7684\u662f\u8981\u5bc6\u5207\u5173\u6ce8\u7cfb\u7edf\u7684\u6574\u4f53\u9501\u5b9a\u884c\u4e3a\uff0c\u4ee5\u9632\u6b62\u9501\u4e89\u7528\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u51fa\u9519\u3002\nPostgreSQL9.0\u7684\u53d1\u5e03\u53ca\u5176\u5bf9\u6d41\u590d\u5236\u7684\u652f\u6301\u8ba9\u6211\u5174\u594b\u4e0d\u5df2\uff01\u5728\u5c06\u5176\u90e8\u7f72\u5230\u4e34\u65f6\u73af\u5883\u540e\uff0c\u6211\u65e0\u610f\u4e2d\u7ed9\u81ea\u5df1\u4e0a\u4e86\u4e00\u5802\u5173\u4e8e\u590d\u5236\u5ef6\u8fdf(\u4ee5\u53caWal\u56de\u6536)\u7684\u8bfe\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u590d\u5236\u5ef6\u8fdf\u662f\u590d\u5236\u526f\u672c\u6216\u6570\u636e\u5e93\u526f\u672c\u66f4\u65b0\u5230\u4e3b\u526f\u672c\u6240\u9700\u7684\u65f6\u95f4\u3002\u901a\u5e38\uff0c\u60a8\u5e0c\u671b\u6b64\u503c\u8f83\u5c0f\uff1a\u5982\u679c\u5b58\u5728\u5bfc\u81f4\u4e3b\u670d\u52a1\u5668\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\uff0c\u5219\u5e0c\u671b\u5207\u6362\u5230\u6570\u636e\u4e22\u5931\u5c3d\u53ef\u80fd\u5c11\u7684\u526f\u672c\u670d\u52a1\u5668\u3002\n(\u5982\u679c\u60a8\u5bf9\u6570\u636e\u4e22\u5931\u5f88\u654f\u611f\uff0c\u53ef\u4ee5\u8003\u8651\u540c\u6b65\u590d\u5236\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u9700\u8981\u6743\u8861)\u3002\n\u526f\u672c\u670d\u52a1\u5668\u53ef\u80fd\u8fdc\u8fdc\u843d\u540e\u4e8e\u4e3b\u670d\u52a1\u5668\u7684\u539f\u56e0\u6709\u5f88\u591a\uff1a\u7f51\u7edc\u9971\u548c\u3001\u526f\u672c\u670d\u52a1\u5668\u4e0a\u7684\u8ba1\u7b97\u80fd\u529b\u3001\u526f\u672c\u670d\u52a1\u5668\u5df2\u79bb\u5f00\u4e14\u672a\u91cd\u65b0\u8fde\u63a5\u7b49\u3002\u62e5\u6709\u5065\u5eb7\u7684Postgres\u7fa4\u96c6\u7684\u4e00\u90e8\u5206\u662f\u786e\u4fdd\u60a8\u7684\u526f\u672c\u670d\u52a1\u5668\u4e0d\u4f1a\u8fdc\u8fdc\u843d\u540e\u4e8e\u4e3b\u670d\u52a1\u5668\uff01\n\u5982\u679c\u6211\u4e0d\u5bf9\u5907\u4efd\u8bf4\u4e00\u53e5\u8bdd\uff0c\u90a3\u6211\u5c31\u662f\u73a9\u5ffd\u804c\u5b88\u4e86\u3002\u5728\u6211\u6240\u505a\u7684\u51e0\u4e4e\u6bcf\u4e00\u6b21\u6f14\u793a\u4e2d\uff0c\u6211\u90fd\u8bd5\u56fe\u63d2\u5165\u4e00\u53e5\u8bdd\uff0c\u8bf4\u660e\u4f7f\u7528pgBackRest\u8fd9\u6837\u7684\u5907\u4efd\u7ba1\u7406\u5de5\u5177\u5b9a\u671f\u5907\u4efd\u6570\u636e\u5e93\u7684\u91cd\u8981\u6027\u3002\u5982\u679c\u60a8\u7684\u7cfb\u7edf\u5728\u60a8\u8ba2\u9605\u7684\u671f\u9650\u5185\u672a\u6210\u529f\u5b8c\u6210\u5907\u4efd\uff0c\u60a8\u7edd\u5bf9\u5e94\u8be5\u4fee\u590d\u8be5\u95ee\u9898\u3002\u5907\u4efd\u4e0d\u4ec5\u5728\u53d1\u751f\u707e\u96be\u65f6\u81f3\u5173\u91cd\u8981\uff0c\u8fd8\u53ef\u7528\u4e8e\u5e2e\u52a9\u9ad8\u6548\u5730\u5f15\u5bfc\u5176\u4ed6\u7fa4\u96c6\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u4e0d\u540c\u7684\u76d1\u63a7\u6307\u6807\u6765\u5e2e\u52a9\u786e\u4fdd\u60a8\u7684PostgreSQL\u7cfb\u7edf\u4fdd\u6301\u5065\u5eb7\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u503e\u5411\u4e8e\u4ece\u67e5\u770b\u7cfb\u7edf\u7684CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u548c\u7f51\u7edc\u5229\u7528\u7387\u5f00\u59cb\uff0c\u4ee5\u4fbf\u5728\u5f00\u59cb\u8fdb\u4e00\u6b65\u6545\u969c\u6392\u9664\u4e4b\u524d\u63d0\u4f9b\u4e00\u4e2a\u8d77\u70b9\u3002\u968f\u7740\u6211\u53c2\u52a0\u4e86\u66f4\u591a\u7684Postgres\u6d3b\u52a8\uff0c\u5e76\u4e86\u89e3\u5230\u66f4\u591a\u5173\u4e8e\u5728\u7cfb\u7edf\u548c\u6570\u636e\u5e93\u7ba1\u7406\u65b9\u9762\u6bd4\u6211\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4eba\u5982\u4f55\u63cf\u8ff0\u4ed6\u4eec\u6240\u5bfb\u627e\u7684\u5185\u5bb9\u7684\u4fe1\u606f\uff0c\u6211\u6269\u5c55\u4e86\u6211\u7684\u5de5\u5177\u5305\uff0c\u4ee5\u8ddf\u8e2a\u548c\u5206\u6790\u6211\u5728\u4e0a\u9762\u8ba8\u8bba\u7684\u8bb8\u591a\u6307\u6807\u3002\n\u5982\u679c\u60a8\u6b63\u5728Kubernetes\u4e0a\u8fd0\u884cPostgreSQL\uff0c\u6216\u8005\u751a\u81f3\u6b63\u5728\u8003\u8651\u8fd9\u6837\u505a\uff0c\u6211\u9f13\u52b1\u60a8\u5728\u60a8\u7684\u73af\u5883\u4e2d\u8bbe\u7f6ePostgres\u76d1\u63a7\uff0c\u8bd5\u4e00\u8bd5\uff0c\u770b\u770b\u60a8\u53ef\u4ee5\u5728\u6545\u969c\u6392\u9664\u4e2d\u5f00\u53d1\u54ea\u4e9b\u6a21\u5f0f\uff01", "note_en": "I am an accidental DBA, with a huge emphasis on &#34;accidental.&#34; I came to PostgreSQL as an application developer who  really liked to program with SQL and use the database to help solve my problems. Nonetheless, these systems would enter into production, and as such I had to learn to support them.\n PostgreSQL monitoring and performance optimization is a vast topic. In fact, I&#39;ll read content like what my colleague Greg Smith wrote on  benchmarking PostgreSQL 13 on Ubuntu and be reminded that I have much more to learn! There&#39;s no way a few blog posts on the topic can do justice to it, but I want to try and share some of the insights I gleaned as the application developer thrust into an operations role.\n In the  previous post, I talked about how I could learn a lot from  monitoring my Postgres system just by looking at the  vital statistics: CPU, memory, disk, and network utilization. These stats about resource utilization were helpful as a starting point: they could indicate what part of the system was having an issue, but maybe not  exactly what the problem is.\n   These statistics provide an overall look at PostgreSQL database activity and can help you spot problems with performance and availability, and can provide &#34;early warnings&#34; before &#34;bad things&#34; start to happen.\n So, what do these metrics tell you, and how can you use them to successfully manage your PostgreSQL database?\n For these examples, we are using the   monitoring stack powered by   pgMonitor that can be installed alongside the   Postgres Operator.\n   One of the required configuration parameters for PostgreSQL is   max_connections: any connections beyond this number will cause the client connection to fail. This is the first fundamental reason why you need to monitor the number of connections to your database: too many connections may cause the appearance of downtime events in your application.\n Too many connections can also have an impact on your overall performance of your PostgreSQL database. This is a well studied problem in Postgres, and in fact,  PostgreSQL 14 will be receiving a huge performance boost in this area.\n Looking at the total number of connections to your database can help you to optimize your application&#39;s system architecture and determine the right settings to maximize your throughput while limiting overhead.\n  There is a bit more to the connection story, and this story involves connections that are &#34;idle in transaction.&#34; A connection that is  idle in transaction\u00a0is where a transaction is in process (e.g. there was a  BEGIN at some point) but has not yet been committed ( COMMIT) or rolled back ( ROLLBACK). If you have too many connections that are  idle in transaction, you can end up causing overall performance issues for your system and potentially maintenance issues.\n Connections that are idle in transaction can prevent proper vacuuming of your system, which in the fullness of time can lead to the  dreaded transaction ID wraparound problem. If you see lingering connections that are  idle in transaction, you should investigate the cause and do your best to eliminate them.\n  Transaction rate, whether it&#39;s measured in transactions per second (TPS) or transactions per minute (TPM), measures the overall throughput of your system. Usually, this metric by itself does not tell you much: transaction rate can vary based on time-of-day, day-of-week, etc. You can use transaction rate to help determine if there is a load spike, or couple it with another metric such as  network throughput\u00a0 to determine if your performance is being affected.\n Transaction rate can give you an overall sense of the entire performance of your database system, but needs to be combined either with another metric, or by using a time-over-time comparison.\n  Row activity can indicate the type of workload that you are managing, whether it&#39;s read heavy ( SELECT), write-heavy ( INSERT/ UPDATE/ DELETE), or balanced between the two. Knowing what type of workload, and in conjunction with other metrics, you can tune your database to maximize your application&#39;s performance.\n For example, knowing the type of workload you have can help you tune when  checkpoints should occur. During a checkpoint, all &#34;dirty data&#34; (data that was modified since the last checkpoint) is written to disk, which is a costly operation. Knowing the type of workload you have, coupled with your transaction rate, can help you select the appropriate  checkpoint settings.\n  It&#39;s quite simple: if PostgreSQL can&#39;t write to disk, you&#39;re going to have downtime. It&#39;s important to  keep track of disk size, but it&#39;s also helpful to know which items are taking up disk.\n It&#39;s good to keep an eye on your overall database size as that will indicate your overall data growth rate and when you may need to take additional steps, e.g. resizing your disk or moving your database to another instance.\n Additionally, it&#39;s also good to keep track of how much your  write-ahead logs (WAL) are taking up on disk. If you use  replication slots, a sign that a replication slot is not being acknowledged, or is falling behind, is an increase in overall WAL log retention. If you run out of disk space due to too many WAL logs, your PostgreSQL instance will go down.\n  It&#39;s as important to track how much disk your entire system is using as well as each of the individual components of your PostgreSQL system.\n    I wish I understood cache hit ratio more earlier on in my career, as this is a great metric for being able to properly size and tune your PostgreSQL instance. Cache hit ratio is a measurement of how much of your &#34;working data set&#34; resides in memory. If you make a request for data that is not in memory, PostgreSQL will have to go and fetch it from disk, which is a much more costly operation. Your goal, then, is to try to have your cache hit ratio be as close to 100% as possible.\n So, what is your &#34;working data set?&#34; Simply, your working data set is the data that your application is accessing over a given period of time. For example, let&#39;s say I have a simple scheduling application that only looks at appointments that are either today or in the future. Therefore, the maximum size of my working data set would be all scheduled items that are from today and into the future. My actually working data set is probably smaller: the application is more likely to access appoints that are closer to today rather than farther, so we can narrow our window down to that.\n How can you help to improve your cache hit ratio? The simplest answer is more memory, combined with tuning the PostgreSQL   shared_buffers setting. However, the longer answer is &#34;it&#39;s complicated&#34; and requires an understanding of your data workload in order to optimize your physical resources coupled with your PostgreSQL configuration (though  shared_buffers\u00a0plays a huge role in this). Additionally, after a restart, PostgreSQL will take some time to pull the working data set into memory, though you can use  pg_prewarm to offset some of this burden.\n Monitoring your cache hit ratio can help you to fundamentally tune your PostgreSQL database, understand what hardware resources you need, and help you to better understand your own application&#39;s access patterns.\n  Typically when I had to look at locks, it was because my application logs would suddenly fill up with one of two types of PostgreSQL errors: &#34;could not acquire lock&#34; or &#34;deadlocked.&#34; I would then go and investigate the  pg_locks table and try to look for any behavior that seemed off.\n Locking is a natural part of PostgreSQL as it is one of the fundamental pieces of  multi-version concurrency control (MVCC), so it is perfectly normal to have locks. The key bit is the above: ensuring that you can avoid errors due to locks. The most common locking error I would run into was &#34;could not acquire lock,&#34; typically as my system was oversaturated at that point. I usually triggered deadlocks due to bad code (I admit it: I did write some very complex chained triggers, which would usually do the trick).\n Locking issues can be tricky to diagnose, let alone fix, as they typically involve multiple sessions trying to do similar things at the same time. It&#39;s important to keep an eye on the overall locking behavior of your system to try to prevent lock contention from causing errors in your applications.\n  I was so excited for the release of  PostgreSQL 9.0 and its support for streaming replication! After getting it deployed to a staging environment, I inadvertently taught myself a lesson about replication lag ( and also WAL recycling).\n In short, replication lag is the amount of time it would take for a replica, or a copy of your database, to be up-to-date with the primary. Typically, you want this value to be small: if there is a scenario that causes a primary to be unavailable, you want to cut over to a replica with as little data loss as possible.\n (If you&#39;re sensitive to data loss, you might consider  synchronous replication though that also comes with tradeoffs).\n There are a variety of reasons why a replica could lag too far behind a primary: network saturation, computing power on the replica, the replica went away and has not reconnected, etc. Part of having a healthy Postgres cluster is ensuring that your replicas don&#39;t lag too far behind your primary!\n  I would be remiss if I didn&#39;t get a word in about backups. In almost every presentation I give, I try to sneak in a word about the importance of taking  regular backups of your database with a backup management tool like  pgBackRest. If your system has not completed a backup successfully within the period you subscribed, you should definitely fix that.\u00a0 Not only are backups critical in the event of a disaster, they can be used to  help efficiently bootstrap other clusters.\n   There are many different monitoring metrics that you can use to help ensure your PostgreSQL system stays healthy. For me, I tended to start with looking at my system&#39;s  CPU, memory, disk, and network utilization to provide a starting point before I began troubleshooting further. As I went to more Postgres events and learned more about how people way more experienced than me at systems and database administration described what they looked for, I expanded my toolkit to track and analyze many of the metrics I discussed in the above.\n If you&#39;re running  PostgreSQL on Kubernetes, or even thinking about it, I encourage you to  setu p  Postgres monitoring in your environment, give it a whirl, and see what patterns you can develop in troubleshooting!", "posttime": "2020-10-15 05:43:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u7a0b\u5e8f,postgresql,\u5f00\u53d1\u4eba\u5458,monitoring", "title": "\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684PostgreSQL\u76d1\u63a7", "title_en": "PostgreSQL Monitoring for App Developers", "transed": 1, "url": "https://info.crunchydata.com/blog/postgresql-monitoring-for-application-developers-dba-stats", "via": "", "real_tags": ["\u5f00\u53d1", "\u7a0b\u5e8f", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028905, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u4e0b\u662f\u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u7684\u6709\u5173\u7ef4\u62a4\u4e92\u8054\u7f51\u9690\u79c1\u7684\u57fa\u672c\u8bf4\u660e\u3002\u6211\u81ea\u5df1\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\u4e2d\u7684\u5927\u591a\u6570\uff0c\u5e76\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\u3002\u8fd9\u4e9b\u9879\u76ee\u5927\u591a\u662f\u5f00\u6e90\u9879\u76ee\u3002\u5982\u679c\u60a8\u89c9\u5f97\u6709\u7528\uff0c\u8bf7\u901a\u8fc7\u6350\u6b3e/\u4ee3\u7801\u5411\u7ef4\u62a4\u4eba\u5458\u6350\u6b3e\u3002\n\u4ece\u6d4f\u89c8\u5668\u9996\u9009\u9879\u7981\u7528\u8ddf\u8e2a\u3001\u6307\u7eb9\u8bc6\u522b\u3001\u52a0\u5bc6\u548c\u9065\u6d4b\u3002\u7ecf\u5e38\u6e05\u9664cookie\uff0c\u7981\u7528\u5bf9\u7f51\u7ad9\u7684\u4f4d\u7f6e\u8bbf\u95ee\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u906e\u76d6\u60a8\u7684\u7f51\u7edc\u6444\u50cf\u5934\u3002\n\u8fd9\u4e9b\u516c\u53f8\u5bf9\u4f60\u7684\u6570\u636e\u5b89\u5168\u5f88\u6709\u597d\u5904\uff0c\u4ed6\u4eec\u4ece\u4e16\u754c\u5404\u5730\u8058\u8bf7\u9876\u5c16\u7684\u5de5\u7a0b\u5e08\uff0c\u4f46\u5bf9\u4f60\u7684\u9690\u79c1\u6765\u8bf4\u66f4\u7cdf\u7cd5\uff0c\u7279\u522b\u662f\u3002\u5982\u679c\u4ed6\u4eec\u7684\u6536\u5165\u4f9d\u8d56\u4e8e\u5e7f\u544a\u7684\u8bdd\u3002\u5982\u679c\u4f60\u5fc5\u987b\u4f7f\u7528\u8c37\u6b4c\uff0c\u8fdb\u5165\u4f60\u7684\u8d26\u6237\u8bbe\u7f6e\uff0c\u5173\u95ed\u6240\u6709\u7684\u6d3b\u52a8\u63a7\u5236\u548c\u5e7f\u544a\u4e2a\u6027\u5316\u3002\u5728\u4eea\u8868\u677f\u4e0a\u5bf9\u5176\u4ed6\u5e10\u6237(\u82f9\u679c\u3001\u5fae\u8f6f\u7b49)\u8fdb\u884c\u7c7b\u4f3c\u7684\u8bbe\u7f6e\u3002\n\u8fd9\u4e00\u70b9\u6211\u600e\u4e48\u5f3a\u8c03\u90fd\u4e0d\u4e3a\u8fc7\u3002\u9664\u975e\u5f3a\u5236\u8981\u6c42\uff0c\u5426\u5219\u8bf7\u4e0d\u8981\u9009\u62e9\u6ce8\u518cGoogle/Microsoft/Facebook/Apple/Amazon\u7b49\u3002\u5982\u679c\u60a8\u9700\u8981\u7ee7\u7eed\u8fdb\u884c\u793e\u4ea4\u6ce8\u518c\uff0c\u8bf7\u6ce8\u610f\u60a8\u5141\u8bb8\u8be5\u670d\u52a1\u4f7f\u7528\u7684\u8303\u56f4\u548c\u4fe1\u606f\u3002\n\u5982\u679c\u60a8\u8981\u6ce8\u518c\u7684\u670d\u52a1\u5141\u8bb8(\u7b80\u5355)\u5220\u9664\u60a8\u7684\u5e10\u6237\uff0c\u8bf7\u4e8b\u5148\u8fdb\u884c\u8c03\u67e5\u3002\u7a0d\u540e\uff0c\u5f53\u60a8\u53d1\u73b0\u65e0\u6cd5\u5220\u9664\u60a8\u7684\u5e10\u6237\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u540e\u6094\u3002\u4e00\u4e9b\u5e10\u6237\u5220\u9664\u7a0b\u5e8f\u6709\u56f0\u96be\u7684\u7f51\u7ad9\uff1aAmazon(\u9700\u8981\u8054\u7cfb\u652f\u6301)\u3001Adobe\u3001TED\u3001Shopify\u7b49\u3002\n\u4e0d\u8981\u559c\u6b22/\u8bc4\u8bbaFacebook\u3001YouTube\u548c\u793e\u4ea4\u5e73\u53f0\u4e0a\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f7f\u7528E2E\u52a0\u5bc6\u7684\u4e66\u7b7e\u670d\u52a1\uff0c\u5982Firefox Sync\u3002\n\u5982\u4eca\u7684\u5e73\u53f0\u8ddf\u8e2a\u4e00\u5207\uff0c\u4ece\u4f60\u770b\u5230\u4e86\u4ec0\u4e48\uff0c\u4f60\u70b9\u51fb\u4e86\u4ec0\u4e48\uff0c\u5206\u4eab\u4e86\u4ec0\u4e48\uff0c\u8bc4\u8bba\u4e86\u4ec0\u4e48\uff0c\u751a\u81f3\u4f60\u5728\u63d0\u8981\u4e0a\u770b\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u9879\u76ee\u6709\u591a\u957f\u65f6\u95f4\u3002\u5c3d\u53ef\u80fd\u51cf\u5c11\u60a8\u7684\u6570\u5b57\u8db3\u8ff9\u3002\u4ece\u60a8\u7684\u5e10\u6237\u8bbe\u7f6e\u4e2d\u5bfc\u51faFacebook\u548cGoogle\u4e2d\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u7136\u540e\u5220\u9664\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u3002\n\u5728\u5c3d\u53ef\u80fd\u591a\u7684\u5e10\u6237\u4e0a\u542f\u7528\u591a\u56e0\u5b50\u8eab\u4efd\u9a8c\u8bc1\u3002\u4f7f\u7528FreeOTP\u6216Authy\u4e4b\u7c7b\u7684\u8eab\u4efd\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u5c06\u60a8\u7684\u7535\u8bdd\u53f7\u7801\u63d0\u4f9b\u7ed9\u670d\u52a1\u673a\u6784(\u4e0d\u8981\u5fd8\u8bb0\u4e3a\u91cd\u8981\u5ba2\u6237\u8bbe\u7f6e/\u5907\u4efd\u5fc5\u8981\u7684\u6062\u590d\u9009\u9879/\u4ee3\u7801\uff01)\u3002\n\u8fd9\u53ea\u662f\u4f60\u7684\u4e92\u8054\u7f51\u6d3b\u52a8\u4e2d\u6700\u53d7\u6b22\u8fce\u548c\u6700\u53ef\u9760\u7684\u9690\u79c1\u9009\u9879\u5217\u8868\u3002\u6709\u66f4\u591a\u9ad8\u7ea7\u63d0\u793a\u7684\u5168\u9762\u6307\u5357\u3001\u6587\u7ae0\u3001\u4e66\u7c4d\u548c\u7f51\u7ad9\uff1a\n\u4e00\u5b9a\u8981\u4ed4\u7ec6\u7814\u7a76\u6bcf\u4e00\u79cd\u9009\u62e9\uff0c\u4ee5\u786e\u5b9a\u54ea\u79cd\u9009\u62e9\u6700\u9002\u5408\u4f60\u3002\u5982\u679c\u60a8\u53d1\u73b0\u9519\u8bef\u6216\u60f3\u8981\u5c06\u5176\u4ed6\u670d\u52a1\u6dfb\u52a0\u5230\u6b64\u5217\u8868\u4e2d\uff0c\u8bf7\u8ba9\u6211\u77e5\u9053\u3002", "note_en": "The following are basic instructions for beginners on maintaining privacy on the Internet. I use most of these services myself and highly recommend using these. Most of these are open-source projects. Please contribute to the maintainers via donations/code if you find them useful.\n   Disable Tracking, Fingerprinting, Cryptominers and Telemetry from browser preferences. Clear cookies frequently, disable location access to sites and cover your webcam unless necessary.\n These companies are great for security of your data, they hire top engineers from around the world but are worse for your privacy, esp. if they rely on advertisement for their revenue. If you have to use Google, go to your account settings and turn off all the  activity controls and  ads personalization. Go through similar settings on your dashboard for other accounts- Apple, Microsoft, etc.\n I cannot stress this enough. Please do not ever, unless mandatory, choose &#34;Sign up with Google/Microsoft/Facebook/Apple/Amazon, etc&#34;. If you are required to continue with social signup, take care of what scopes and information you are permitting the service to use.\n Research beforehand if the service you&#39;re signing up for allows for an (easy) way to delete your account. You might regret later when you find out you can&#39;t delete your account. Some websites that have difficult account deletion procedure: Amazon (requires contacting support), Adobe, TED, Shopify, etc.\n  Don&#39;t like/comment on anything on Facebook, YouTube and social platforms. Use E2E-encrypted bookmark service like  Firefox Sync.\n Platforms these days track everything from what your see, what you click on, share or comment on, and even how long you looked at a particular item on your feed. Reduce your digital footprint as much as you can. Export your personal data from Facebook, Google from your account settings and work on deleting all of it.\n  Enable multi-factor authentication on as many accounts as you can. Use an authenticator app like  FreeOTP or  Authy instead of giving out your phone number to services ( Don&#39;t forget to set/backup necessary recovery options/codes for important accounts!).\n   This is just a list of the most popular and reliable options for privacy on your internet activities. There are comprehensive guides, articles, books and websites for more advanced tips:\n  Make sure to research every option thoroughly to determine which option is best for you. Let me know if you found a mistake or want to add another service to this list.", "posttime": "2020-10-15 05:43:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u521d\u5b66\u8005,guide,\u670d\u52a1", "title": "\u6570\u5b57\u9690\u79c1\u521d\u5b66\u8005\u6307\u5357", "title_en": "Beginner's Guide to Digital Privacy", "transed": 1, "url": "https://rsapkf.xyz/blog/beginners-guide-to-digital-privacy", "via": "", "real_tags": ["\u521d\u5b66\u8005", "guide", "\u670d\u52a1"]}]
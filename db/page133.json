[{"category": "", "categoryclass": "", "imagename": "25c16ae057adfd0b2589361f0d6c2081.jpg", "infoid": 1068212, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Jonathan Caballero\u53bb\u5e74\u4ee4\u4eba\u60ca\u8bb6\u7684\u53d1\u73b0\u3002\u572827\u5c81\u65f6\uff0c\u4ed6\u7684\u5934\u53d1\u53d8\u8584\u4e86\u3002\u8be5\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u610f\u8bc6\u5230\u751f\u6d3b\u5728MD Hyattsville\u7684\u5bb6\u91cc\u88ab\u4ea8\u5fb7\u65af\u5728\u5bb6\u4e2d\u5f98\u5f8a\u65f6\uff0c\u751f\u6d3b\u4e5f\u5728\u7ecf\u8fc7\u3002\n  \u6709\u5f88\u591a\u4e8b\u60c5\u8981\u505a\uff0c\u5f88\u591a\u5730\u65b9\u90fd\u53ef\u4ee5\u770b\u3002 Caballero\u8bbe\u60f3\u4e86\u4ed6\u53ef\u80fd\u5728\u54ea\u4e2a\u5de5\u4f5c\u65e5\u6e38\u6cf3\u800c\u4e0d\u662f\u957f\u957f\u7684\u8f66\u95f4\u3002\u56e0\u6b64\uff0c\u5f53\u4ed6\u7684\u96c7\u4e3b\u5f00\u59cb\u81f4\u7535\u4eba\u5458\u56de\u5230\u529e\u516c\u5ba4\u517c\u804c\u65f6\uff0c\u4ed6\u572845\u5206\u949f\u7684\u901a\u52e4\u4e2d\u62d2\u7edd\u4e86\u3002\u4ed6\u5f00\u59cb\u5bfb\u627e\u4e00\u4e2a\u5177\u6709\u66f4\u597d\u7684\u9065\u63a7\u5de5\u4f5c\u9009\u62e9\uff0c\u5e76\u8fc5\u901f\u964d\u843d\u591a\u4e2a\u4f18\u60e0\u3002\n  \uff06\uff0334;\u6211\u8ba4\u4e3a\u5927\u6d41\u884c\u5df2\u7ecf\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6539\u53d8\u4e86\u6211\u7684\u5fc3\u6001\uff0c\u5c31\u50cf\u6211\u73b0\u5728\u771f\u7684\u91cd\u89c6\u6211\u7684\u65f6\u95f4\uff0c\uff06\uff0334; Caballero\u8bf4\u3002\n     \u968f\u7740\u5927\u6d41\u884c\u7684\u751f\u547d\u5728\u7f8e\u56fd\u64a4\u9000\uff0c\u4eba\u4eec\u6b63\u5728\u7559\u4e0b\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u5bfb\u627e\u66f4\u591a\u7684\u94b1\uff0c\u66f4\u591a\u7684\u7075\u6d3b\u6027\u548c\u66f4\u591a\u7684\u5e78\u798f\u3002\u8bb8\u591a\u4eba\u6b63\u5728\u91cd\u65b0\u601d\u8003\u54ea\u4e9b\u5de5\u4f5c\u5bf9\u4ed6\u4eec\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4ed6\u4eec\u662f\u5982\u4f55\u5ea6\u8fc7\u7684\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5982\u4f55\u5ea6\u8fc7\u4ed6\u4eec\u7684\u65f6\u95f4\u3002\u636e\u52b3\u5de5\u90e8\u95e8\u79f0\uff0c\u5b83\u5bfc\u81f4\u8f9e\u804c\u6025\u5267\u589e\u957f -  400\u4e07\u4eba\u5728\u56db\u6708\u8f9e\u804c\u3002\n  \u5728\u6b63\u5e38\u65f6\u671f\uff0c\u4eba\u4eec\u5728\u5927\u6570\u5b57\u4e2d\u8f9e\u804c\u7684\u4f5c\u4e1a\u53d1\u51fa\u4e86\u4e30\u5bcc\u7684\u5de5\u4f5c\u3002\u4f46\u8fd9\u4e9b\u4e0d\u662f\u6b63\u5e38\u7684\u65f6\u671f\u3002\u5927\u6d41\u884c\u5bfc\u81f4\u4e86\u5386\u53f2\u4e0a\u6700\u7cdf\u7cd5\u7684\u7f8e\u56fd\u7ecf\u6d4e\u8870\u9000\uff0c\u6570\u767e\u4e07\u4eba\u4ecd\u7136\u6ca1\u6709\u5c31\u4e1a\u673a\u4f1a\u3002\u7136\u800c\uff0c\u96c7\u4e3b\u73b0\u5728\u62b1\u6028\u6025\u6027\u52b3\u52a8\u529b\u77ed\u7f3a\u3002\n    \uff06\uff0334;\u6211\u4eec\u6ca1\u6709\u770b\u5230\u6211\u4eec\u4eca\u5929\u7684\u60c5\u51b5\uff0c\uff06\uff0334; Daniel Zhao\u8868\u793a\uff0c\u52b3\u5de5\u7ecf\u6d4e\u5b66\u5bb6\uff0c\u5c31\u4e1a\u7ad9\u70b9Glassdoor\u3002\n     \u5927\u6d41\u884c\u5df2\u7ecf\u7ed9\u4e86\u4eba\u4eec\u6539\u53d8\u65b9\u5411\u7684\u5404\u79cd\u539f\u56e0\u3002\u6709\u4e9b\u4eba\uff0c\u7279\u522b\u662f\u5728\u9910\u9986\u5728\u4f4e\u5de5\u8d44\u5de5\u4f5c\u4e2d\u5de5\u4f5c\u7684\u4eba\u6b63\u5728\u7559\u4e0b\u66f4\u597d\u7684\u5de5\u8d44\u3002\u5176\u4ed6\u4eba\u53ef\u80fd\u5df2\u7ecf\u5728Weren\uff06\uff0339\u7684\u5de5\u4f5c\u4e2d\u5de5\u4f5c\u3002\u5728\u4ed6\u4eec\u9000\u51fa\u4e4b\u524d\u7b49\u5f85\u5927\u6d41\u884c\u3002\u6709\u4e9b\u5de5\u4eba\u6b63\u5728\u7559\u4e0b\u804c\u4f4d\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5bb3\u6015\u8fd4\u56de\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684\u5de5\u4f5c\u573a\u6240\u3002 \n4\u6708\u4efd\u4f11\u606f\u7684740,000\u4eba\u5728\u4f11\u95f2\u548c\u9152\u5e97\u4e1a\u4e2d\u52aa\u529b\uff0c\u5305\u62ec\u9152\u5e97\uff0c\u9152\u5427\u548c\u9910\u9986\uff0c\u4e3b\u9898\u516c\u56ed\u548c\u5176\u4ed6\u5a31\u4e50\u573a\u6240\u7684\u5de5\u4f5c\u3002\n  Jeremy Golembiewski\u6709\u5173\u4e3a\u4ec0\u4e48\u7684\u60f3\u6cd5\u3002\u4e0a\u5468\uff0c\u5728\u98df\u54c1\u670d\u52a126\u5e74\u540e\uff0c\u4ed6\u8f9e\u53bb\u4e86\u4ed6\u5728\u5723\u5730\u4e9a\u54e5\u7684\u65e9\u9910\u644a\u7684\u603b\u7ecf\u7406\u3002\u5927\u6d41\u884c\u4e0e\u5b83\u6709\u5f88\u591a\u5173\u7cfb\u3002\n  \u5de5\u4f5c\u5df2\u7ecf\u53d8\u5f97\u8fc7\u4e8e\u7d27\u5f20\uff0c\u7531\u72ed\u7a84\u7684\u4eba\u5458\u914d\u7f6e\u548c\u4e0e\u672a\u63a9\u853d\u5ba2\u6237\u7684\u6301\u7eed\u6218\u6597\u6807\u8bb0\u3002\u4ed6\u6536\u7f29\u4e86Covid-19\u5e76\u5c06\u5176\u5f52\u4e8e\u4ed6\u7684\u59bb\u5b50\u548c\u5cb3\u7236\u3002\n  \u5f53\u52a0\u5229\u798f\u5c3c\u4e9a\u572812\u6708\u7b2c\u4e8c\u6b21\u8fdb\u5165\u9501\u5b9a\u65f6\uff0cGolembiewski\u88ab\u6388\u4e88\u6bcf\u5468\u516d\u5929\u5de5\u4f5c\u6216\u4f11\u5047\u3002\u4ed6\u62ff\u8d70\u4e86\u4f11\u5047\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51b3\u5b9a\u3002\n    \u5728\u968f\u540e\u7684\u51e0\u4e2a\u6708\u91cc\uff0cGolembiewski\uff06\uff0339;\u751f\u6d3b\u53d1\u751f\u4e86\u53d8\u5316\u3002\u4ed6\u5728\u82b1\u65f6\u95f4\u505a\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u5728\u4ed6\u7684\u8f66\u5e93\u91cc\u4e3a\u4ed6\u7684\u4e24\u4e2a\u5e7c\u513f\u8bbe\u7acb\u6e38\u620f\u5ba4\uff0c\u4e3a\u5bb6\u5ead\u505a\u996d\u3002\u572842\u5c81\u65f6\uff0c\u5982\u679c\u4ed6\u5728\u9910\u5385\u6bcf\u5468\u4e00\u5468\uff0c\u5e76\u4e14\u5728\u9910\u5385\u6bcf\u5468\u4e3e\u884c50\u81f360\u5c0f\u65f6\uff0c\u90a3\u4e48\u4ed6\u7684\u751f\u6d3b\u53ef\u80fd\u4f1a\u50cf\u5f8060\u5c0f\u65f6\uff0c\u90a3\u4e48\u5e26\u7740\u5bb6\u91cc\u7684\u5bb6\u4eba\u90fd\u4f1a\u60f3\u5ff5\u611f\u6069\u8282\u665a\u5bb4\u548c\u5723\u8bde\u65e9\u6668\u3002\n  \uff06\uff0334;\u6211\u60f3\u770b\u770b\u6211\u76841\u5c81\u548c\u6211\u76845\u5c81\u7684\uff06\uff0339;\u5f53\u4ed6\u4eec\u51fa\u6765\u65f6\uff0c\u770b\u7740\u6811\u548c\u6240\u6709\u793c\u7269\u5728\u665a\u4e0a\u88c5\u914d\u548c\u653e\u7f6e\u51fa\u6765\uff0c\uff06\uff0334; Golembiewski\u8bf4\uff0c\u4ed6\u7684\u7b2c\u4e00\u4efd\u9910\u5385\u5de5\u4f5c16\u5c81\u7684\u9910\u5385\u5de5\u4f5c\u662f\u5728\u5bc6\u6b47\u6839\u5dde\u7684\u5927\u7537\u5b69\u8fde\u9501\u5e97\u7684\u6d17\u7897\u673a\u3002\n     \u56e0\u6b64\uff0cGolembiewski\u8f9e\u804c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u4ed6\u7684\u957f\u9910\u9986\u751f\u6daf\uff0c\u5e76\u5411\u5931\u4e1a\u68c0\u67e5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57ab\u5b50\uff0c\u4ee5\u601d\u8003\u4ed6\u548c\uff0339;\u8bf7\u4e0b\u4e00\u4e2a\u3002 \n\u6301\u7eed\u4e00\u4e2a\u6708\u6216\u4e24\u4e2a\u6708\uff0c\u4ed6\u524a\u51cf\u4e86\u4ed6\u7684\u7b80\u5386\uff0c\u52aa\u529b\u52aa\u529b\u53c2\u52a0\u4ed6\u7684\u7f29\u5199\uff0c\u5e76\u5f00\u59cb\u91c7\u8bbf\u4ed6\u5bf9\u4ed6\u65b0\u7684\u9886\u57df\u7684\u5de5\u4f5c\uff1a\u96f6\u552e\uff0c\u4fdd\u9669\uff0c\u6570\u636e\u8fdb\u5165\u3002\u4ed6\u80af\u5b9a\u7684\u4e00\u4ef6\u4e8b\uff1a\u4ed6\u89c9\u5f97\u4ed6\u60f3\u5de5\u4f5c40\u5c0f\u65f6\u3002\n      \u5728\u5927\u6d41\u884c\u4e2d\u7684\u504f\u8fdc\u5de5\u4f5c\u7684\u5de8\u5927\u8fc1\u79fb\u4e5f\u5bf9\u4eba\u4eec\u5982\u4f55\u601d\u8003\u4ed6\u4eec\u60f3\u8981\u5de5\u4f5c\u7684\u4f55\u65f6\u4f55\u5730\u8fdb\u884c\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\n  \uff06\uff0334;\u6211\u4eec\u6539\u53d8\u4e86\u3002\u5de5\u4f5c\u53d1\u751f\u4e86\u53d8\u5316\u3002\u6211\u4eec\u8003\u8651\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\uff06\uff0334; Tsedal Neeley\u8bf4\uff0c\u54c8\u4f5b\u5546\u5b66\u9662\u6559\u6388\u548c\u4e66\u7c4d\u504f\u8fdc\u5de5\u4f5c\u9769\u547d\u7684\u4f5c\u8005\uff1a\u4ece\u4efb\u4f55\u5730\u65b9\u53d6\u5f97\u6210\u529f\u3002\u5979\u8bf4\uff0c\u5de5\u4eba\u73b0\u5728\u6e34\u671b\u5728\u5927\u6d41\u884c\u4e2d\u7ed9\u4ed6\u4eec\u7684\u7075\u6d3b\u6027 - \u5979\u8bf4\u3002\n     Alyssa Casey\u662f\u8054\u90a6\u653f\u5e9c\u7684\u7814\u7a76\u5458\uff0c\u7ecf\u5e38\u60f3\u5230\u534e\u76db\u987f\uff0cD.C.\uff0c\u4e3a\u4f0a\u5229\u8bfa\u4f0a\u5dde\u9760\u8fd1\u7236\u6bcd\u548c\u5144\u5f1f\u59d0\u59b9\u3002\u4f46\u5979\u559c\u6b22\u5979\u7684\u5de5\u4f5c\u548c\u5979\u7684\u751f\u6d3b\u5728\u57ce\u5e02\uff0c\u4e0e\u670b\u53cb\u4e00\u8d77\u53c2\u52a0\u97f3\u4e50\u4f1a\uff0c\u9910\u9986\u548c\u6b22\u4e50\u65f6\u5149\u3002\n  \u4e0e\u53bb\u5e74\u7684\u6240\u6709\u8fd9\u4e00\u70b9\u5728\u4e00\u8d77\uff0c\u5979\u548c\u5979\u7684\u4e08\u592b\u5c31\u5728\u5047\u671f\u4e4b\u524d\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7684\u623f\u5b50\u79df\u4e86\u4e00\u6240\u623f\u5b50\uff0c\u5e76\u5728\u957f\u5927\u7684\u5927\u6d41\u884c\u51ac\u5929\u5f62\u6210\u4e86\u4e00\u4e2a\u5927\u6d41\u884c\u6ce1\u6cab\u3002\n  \u5b83\u66f4\u65b0\u4e86\u5979\u8ba9\u5bb6\u5ead\u6210\u4e3a\u4f18\u5148\u4e8b\u9879\u7684\u613f\u671b\u3002\u5979\u548c\u5979\u7684\u4e08\u592b\u73b0\u5728\u786e\u5b9a\u4ed6\u4eec\u60f3\u7559\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff0c\u5c3d\u7ba1\u5979\u53ef\u80fd\u8981\u6212\u6389\u5979\u7684\u5de5\u4f5c\uff0c\u5979\u4e00\u76f4\u5728\u4f11\u606f\u3002\n  \uff06\uff0334;\u6211\u8ba4\u4e3a\u5927\u6d41\u884c\u53ea\u662f\u5141\u8bb8\u65f6\u95f4\uff0c\uff06\uff0334;\u5979\u8bf4\u3002 \uff06\uff0334;\u4f60\u6709\u66f4\u591a\u7684\u65f6\u95f4\u601d\u8003\u4f60\u771f\u6b63\u60f3\u8981\u7684\u4e1c\u897f\u3002\uff06\uff0334; \nCaballero\u662fSoftware Developer\uff0c\u5f53\u4ed6\u53bb\u5e74\u4e3e\u529e\u4e86\u4e00\u4efd\u504f\u8fdc\u7684\u5de5\u4f5c\u65f6\uff0c\u4ed6\u6709\u4e00\u5929\u4ed6\u5fc5\u987b\u8fdb\u5165\u529e\u516c\u5ba4\u3002 \u4f4610\u4e2a\u6708\uff0c\u4ed6\uff06\uff0339;\u751a\u81f3\u53ea\u9700\u4e09\u5929\uff0c\u5373\u4f7f\u53ea\u662f\u4e09\u5929\u3002 \u4ed6\u751a\u81f3\u62e5\u6709\u4e00\u8f86\u8f66\uff0c\u4e5f\u6ca1\u6709\u516c\u5171\u4ea4\u901a\u7ed9\u4ed6\u7684\u529e\u516c\u5ba4\u3002  \u4ed6\u521a\u521a\u88ab\u63a5\u53d7\u7684\u65b0\u804c\u4f4d\u5c06\u4f7f\u4ed6\u5c3d\u53ef\u80fd\u591a\u5730\u5de5\u4f5c\u3002 \u6240\u4ee5\u5373\u4f7f\u4ed6\u4fee\u6b63\u4e86\u4ed6\u7684\u540e\u9662\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u4ed6\u7684\u72d7\u5efa\u9020\u4e00\u4e2a\u65b0\u7684\u6805\u680f\uff0c\u4ed6\u68a6\u60f3\u7740\u4ed6\u7684\u5730\u4e0b\u5ba4\u529e\u516c\u5ba4\u7684\u672a\u6765\uff0c\u4e5f\u8bb8\u5728\u6d77\u6ee9\u9644\u8fd1\u3002  \uff06\uff0334;\u6211\u786e\u5b9e\u9700\u8981\u652f\u4ed8\u8d26\u5355\uff0c\u6240\u4ee5\u6211\u5fc5\u987b\u5de5\u4f5c\uff0c\uff06\uff0334; \u4ed6\u8bf4\u3002 \u4f46\u4ed6\u73b0\u5728\u76f8\u4fe1\u5de5\u4f5c\u5fc5\u987b\u9002\u5e94\u751f\u6d3b\u3002 ", "note_en": "Jonathan Caballero made a startling discovery last year. At 27, his hair was thinning. The software developer realized that life was passing by too quickly as he was hunkered down at home in Hyattsville, Md.\n  There was so much to do, so many places to see. Caballero envisioned a life in which he might end a workday with a swim instead of a long drive home. So when his employer began calling people back to the office part time, he balked at the 45-minute commute. He started looking for a job with better remote work options and quickly landed multiple offers.\n  &#34;I think the pandemic has changed my mindset in a way, like I really value my time now,&#34; Caballero says.\n     As pandemic life recedes in the U.S., people are leaving their jobs in search of more money, more flexibility and more happiness. Many are rethinking what work means to them, how they are valued, and how they spend their time. It&#39;s leading to a dramatic increase in resignations \u2014 a record 4 million people quit their jobs in April alone, according to the Labor Department.\n  In normal times, people quitting jobs in large numbers signals a healthy economy with plentiful jobs. But these are not normal times. The pandemic led to the  worst U.S. recession in history, and millions of people are still out of jobs. Yet employers are now  complaining about acute labor shortages.\n    &#34;We haven&#39;t seen anything quite like the situation we have today,&#34; says Daniel Zhao, a labor economist with the jobs site Glassdoor.\n     The pandemic has given people all kinds of reasons to change direction. Some people, particularly those who  work in low wage jobs at restaurants, are leaving for better pay. Others may have worked in jobs that weren&#39;t a good fit but were waiting out the pandemic before they quit. And some workers are leaving positions because they fear returning to an unsafe workplace.\n    More than 740,000 people who quit in April worked in the leisure and hospitality industry, which includes jobs in hotels, bars and restaurants, theme parks and other entertainment venues.\n  Jeremy Golembiewski has ideas about why. Last week, after 26 years in food service, he quit his job as general manager of a breakfast place in San Diego. The pandemic had a lot to do with it.\n  Work had gotten too stressful, marked by scant staffing and constant battles with unmasked customers. He contracted COVID-19 and brought it home to his wife and father-in-law.\n  When California went into lockdown for a second time in December, Golembiewski was given the choice of working six days a week or taking a furlough. He took the furlough. It was an easy decision.\n    In the months that followed, Golembiewski&#39;s life changed. He was spending time doing fun things like setting up a playroom in his garage for his two young children and cooking dinner for the family. At age 42, he got a glimpse of what life could be like if he didn&#39;t have to put in 50 to 60 hours a week at the restaurant and miss Thanksgiving dinner and Christmas morning with his family.\n  &#34;I want to see my 1-year-old and my 5-year-old&#39;s faces light up when they come out and see the tree and all the presents that I spent six hours at night assembling and putting out,&#34; says Golembiewski, who got his first restaurant job at 16 as a dishwasher at the Big Boy chain in Michigan.\n     So instead of returning to work last week, Golembiewski resigned, putting an end to his long restaurant career and to  the unemployment checks that have provided him a cushion to think about what he&#39;ll do next.\n  With enough savings to last a month or two, he&#39;s sharpening his resume, working on his typing skills and starting to interview for jobs in fields that are new to him: retail, insurance, data entry. The one thing he&#39;s sure of: He wants to work a 40-hour week.\n      The great migration to remote work in the pandemic has also had a profound impact on how people think about  when and where they want to work.\n  &#34;We have changed. Work has changed. The way we think about time and space has changed,&#34; says Tsedal Neeley, a professor at Harvard Business School and author of the book  Remote Work Revolution: Succeeding From Anywhere. Workers now crave the flexibility given to them in the pandemic \u2014 which had previously been unattainable, she says.\n     Alyssa Casey, a researcher for the federal government, had often thought about leaving Washington, D.C., for Illinois, to be close to her parents and siblings. But she liked her job and her life in the city, going to concerts, restaurants and happy hours with friends.\n  With all of that on hold last year, she and her husband rented a house in Illinois just before the holidays and formed a pandemic bubble with their extended family for the long pandemic winter.\n  It has renewed her desire to make family a priority. She and her husband are now sure they want to stay in Illinois, even though she may have to quit her job, which she&#39;s been doing remotely.\n  &#34;I think the pandemic just allowed for time,&#34; she says. &#34;You just have more time to think about what you really want.&#34;\n      Caballero, the software developer, knew when he took a remote job last year that he&#39;d have to go into the office someday. But 10 months in, he&#39;s no longer up for the commute, even just three days a week. He doesn&#39;t even own a car, and there&#39;s no public transportation to his office.\n     The new position he&#39;s just accepted will allow him to work remotely as much as he likes. And so even as he&#39;s fixing up his backyard, building a new fence for his dog, he&#39;s dreaming of a future beyond his basement office, maybe near a beach.\n  &#34;I do need to pay bills, so I have to work,&#34; he says. But he now believes work has to accommodate life.", "posttime": "2021-06-25 19:12:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "recedes", "title": "\u968f\u7740\u5927\u6d41\u884c\u7684\u56de\u6536\uff0c\u6570\u767e\u4e07\u5de5\u4eba\u6b63\u5728\u8bf4\u201c\u6211\u6212\u70df\u201d ", "title_en": "As the Pandemic Recedes, Millions of Workers Are Saying 'I Quit'", "transed": 1, "url": "https://www.npr.org/2021/06/24/1007914455/as-the-pandemic-recedes-millions-of-workers-are-saying-i-quit", "via": "", "real_tags": ["recedes"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068211, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "5\u670812\u65e5\uff0c2021\u5e74\u7b2c19\u5377\uff0c\u7b2c2\u671f\u513f\u7ae5\u4f69\u6234\u592a\u9633\u955c\u88ab\u6807\u8bb0\u4e3aA\uff06\uff0334;\u5931\u8d25\uff0c\u5931\u8d25\u8005\uff0c\u65e0\u661f\u671f\uff0c\u4e0d\u6210\u529f\u7684\u4eba\u3002\uff06\uff0334;\u8fd9\u53ea\u662fImagenet\u8f6e\u76d8\u8d4c\u7684\u4f17\u591a\u7cfb\u7edf\u504f\u5dee\u4e4b\u4e00\uff0c\u8fd9\u662f\u4e00\u4e2a\u827a\u672f\u9879\u76ee\uff0c\u8be5\u9879\u76ee\u901a\u8fc7\u4ece\u539f\u59cbImageNet\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u5176\u8bc6\u522b\u7cfb\u7edf\u6765\u5e94\u7528\u4e8e\u7528\u6237\u63d0\u4ea4\u7684\u7167\u7247\u3002 7 Imagenet\u662f\u63a8\u8fdbAI\u7684\u4e50\u5668\u6570\u636e\u96c6\u4e4b\u4e00\uff0c\u5df2\u4ece\u5176\uff06\uff0334\u4e2d\u5220\u9664\u4e86\u8d85\u8fc7500\u4e07\u53ea\u56fe\u50cf;\u4eba\uff06\uff0334;\u81ea\u6b64\u5b9e\u4f8b\u62a5\u544a\u7684\u7c7b\u522b\u4ee5\u67652019\u5e74\u5e95\u30022019\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86Facebook\uff06\uff0339; S\u5e7f\u544a\u670d\u52a1\u7b97\u6cd5\u5982\u4f55\u51b3\u5b9a\u8c01\u663e\u793a\u7ed9\u5b9a\u7684\u5e7f\u544a\u5c55\u793a\u4e86\u57fa\u4e8e\u6bd4\u8d5b\uff0c\u6027\u522b\u548c\u7528\u6237\u5b97\u6559\u7684\u6b67\u89c6\u3002 1\u5173\u4e8e\u5546\u4e1a\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\uff08\u7279\u522b\u662f\u4e9a\u9a6c\u900a\uff06\uff0339;\u5728\u91cd\u65b0\u8bc6\u522b\uff09\u4e0a\u6709\u62a5\u544a\u504f\u5411\u4e8e\u9edd\u9ed1\u7684\u5973\u6027\u3002 6,22\n \u8fd9\u4e9b\u793a\u4f8b\u5728\u8fc5\u901f\u751f\u957f\u7684\u5de5\u4f5c\u4f53\u5185\u63d0\u4f9b\u4e86\u66b4\u9732\u4e0eAI\u7cfb\u7edf\u76f8\u5173\u8054\u7684\u504f\u5dee\u7684\u5feb\u901f\u751f\u957f\u7684\u5de5\u4f5c\u4f53\uff0c\u4f46\u504f\u7f6e\u7b97\u6cd5\u7cfb\u7edf\u4e0d\u662f\u4e00\u79cd\u65b0\u7684\u73b0\u8c61\u3002\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\uff0c1988\u5e74\u82f1\u56fd\u7684\u79cd\u65cf\u5e73\u7b49\u59d4\u5458\u4f1a\u53d1\u73b0\u4e86\u4e00\u6240\u82f1\u56fd\u533b\u5b66\u9662\u72af\u6709\u6b67\u89c6\u7f6a\uff0c\u56e0\u4e3a\u7528\u4e8e\u7b7e\u51fa\u8bbf\u8c08\u5019\u9009\u4eba\u7684\u7b97\u6cd5\u88ab\u504f\u5411\u4e8e\u5987\u5973\u548c\u7533\u8bf7\u4eba\u7684\u975e\u6b27\u6d32\u540d\u79f0\u3002 17.\n \u968f\u7740\u5404\u79cd\u90e8\u95e8\u7684AI\u5feb\u901f\u91c7\u7528\uff0c\u5305\u62ec\u5728\u53f8\u6cd5\u548c\u533b\u7597\u4fdd\u5065\uff0c\u6280\u672f\u4eba\u5458\u548c\u51b3\u7b56\u8005\u4e2d\u63d0\u51fa\u4e86\u5173\u4e8e\u7f3a\u4e4f\u4e0e\u57fa\u4e8eAI\u7684\u51b3\u5b9a\u76f8\u5173\u7684\u95ee\u8d23\u5236\u548c\u504f\u89c1\u7684\u62c5\u5fe7\u3002\u4eceAI\u7814\u7a76\u4eba\u5458\u548c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5230\u4ea7\u54c1\u9886\u5bfc\u8005\u548c\u6d88\u8d39\u8005\uff0c\u5404\u79cd\u5229\u76ca\u76f8\u5173\u8005\u90fd\u53c2\u4e0e\u4e86AI\u7ba1\u9053\u3002 AI\uff0c\u6570\u636e\u96c6\u548c\u7b56\u7565\u548c\u6743\u5229\u666f\u89c2\u5468\u56f4\u7684\u5fc5\u8981\u4e13\u4e1a\u77e5\u8bc6\uff0c\u8fd9\u4e9b\u4e13\u4e1a\u548c\u6743\u5229\u666f\u89c2\u5728\u8fd9\u4e9b\u5229\u76ca\u76f8\u5173\u8005\u4e4b\u95f4\u4e0d\u7edf\u4e00\u5730\u63d0\u4f9b\u7edf\u4e00\u7684\u504f\u89c1\u3002\u56e0\u6b64\uff0cAI\u7cfb\u7edf\u4e2d\u7684\u504f\u5dee\u53ef\u4ee5\u4e0d\u663e\u773c\u7684\u5316\u5408\u7269\u3002\n \u4f8b\u5982\uff0c\u8003\u8651\u8be5\u7ba1\u9053\u4e2dML\uff08\u673a\u5668\u5b66\u4e60\uff09\u5f00\u53d1\u4eba\u5458\u7684\u5173\u952e\u4f5c\u7528\u3002\u4ed6\u4eec\u88ab\u8981\u6c42\u63d0\u4f9b\uff1a\u9002\u5f53\u5730\u9884\u5904\u7406\u6570\u636e\uff0c\u4ece\u591a\u4e2a\u53ef\u7528\u7684\uff0c\u8c03\u8c10\u53c2\u6570\u548c\u8c03\u6574\u6a21\u578b\u67b6\u6784\u4e2d\u9009\u62e9\u6b63\u786e\u7684\u6a21\u578b\uff0c\u4ee5\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u8981\u6c42\u3002\u5047\u8bbeML Developer\u59d4\u6258\u5f00\u53d1AI\u6a21\u578b\u4ee5\u9884\u6d4b\u5c06\u9ed8\u8ba4\u7684\u8d37\u6b3e\u3002\u5728\u57f9\u8bad\u6570\u636e\u4e2d\u4e0d\u77e5\u4e0d\u89c9\uff0c\u5de5\u7a0b\u5e08\u53ef\u80fd\u53ea\u4f7f\u7528\u9a8c\u8bc1\u51c6\u786e\u6027\u65e0\u610f\u4e2d\u57f9\u8bad\u6a21\u578b\u3002\u5047\u8bbe\u57f9\u8bad\u6570\u636e\u5305\u542b\u592a\u591a\u8fdd\u7ea6\u7684\u5e74\u8f7b\u4eba\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u6a21\u578b\u53ef\u80fd\u5728\u5e94\u7528\u4e8e\u6d4b\u8bd5\u6570\u636e\u65f6\u5bf9\u5e74\u8f7b\u4eba\u9ed8\u8ba4\u8fdb\u884c\u7c7b\u4f3c\u7684\u9884\u6d4b\u3002\u56e0\u6b64\u9700\u8981\u6559\u80b2ML\u5f00\u53d1\u4eba\u5458\u5173\u4e8e\u53ef\u4ee5\u8815\u53d8\u5230AI\u7ba1\u9053\u7684\u5404\u79cd\u504f\u5dee\u3002\n \u5728AI\u7cfb\u7edf\u4e2d\u5b9a\u4e49\uff0c\u68c0\u6d4b\uff0c\u6d4b\u91cf\u548c\u7f13\u89e3\u504f\u5dee\u4e0d\u662f\u4e00\u9879\u5bb9\u6613\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7814\u7a76\u9886\u57df\u3002 4\u5404\u5730\u653f\u5e9c\uff0c\u975e\u8425\u5229\u7ec4\u7ec7\u548c\u884c\u4e1a\u6b63\u5728\u5f00\u5c55\u4e00\u4e9b\u52aa\u529b\uff0c\u5305\u62ec\u6267\u884c\u6cd5\u89c4\uff0c\u4ee5\u89e3\u51b3\u4e0e\u504f\u89c1\u6709\u5173\u7684\u95ee\u9898\u3002\u7531\u4e8e\u5de5\u4f5c\u8fdb\u884c\u4e86\u5728\u5404\u79cd\u793e\u4f1a\u673a\u6784\u548c\u9014\u5f84\u4e2d\u8ba4\u8bc6\u548c\u89e3\u51b3\u504f\u89c1\uff0c\u56e0\u6b64\u52aa\u529b\u786e\u4fdd\u8ba1\u7b97\u7cfb\u7edf\u65e8\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\n \u672c\u6587\u7684\u5e7f\u6cdb\u76ee\u6807\u662f\u6559\u80b2\u975eomain\u4e13\u5bb6\u548c\u4ece\u4e1a\u8005\uff0c\u5982ML\u5f00\u53d1\u4eba\u5458\uff0c\u8fd9\u4e9b\u4e13\u5bb6\u53ef\u4ee5\u5728AI\u7ba1\u9053\u7684\u4e0d\u540c\u9636\u6bb5\u53d1\u751f\u5404\u79cd\u7c7b\u578b\u7684\u504f\u5dee\uff0c\u5e76\u5efa\u8bae\u7528\u4e8e\u7f13\u89e3\u504f\u5dee\u7684\u6e05\u5355\u3002\u4e0e\u516c\u5e73\u7b97\u6cd5\u7684\u8bbe\u8ba1\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u6587\u5b66\u3002 4\u672c\u6587\u4f5c\u4e3a\u8f85\u52a9ML\u5f00\u53d1\u4eba\u5458\u7684\u6307\u793a\uff0c\u91cd\u70b9\u4e0d\u662f\u516c\u5e73AI\u7b97\u6cd5\u7684\u8bbe\u8ba1\uff0c\u800c\u662f\u5bf9\u5b9e\u9645\u65b9\u9762\u7684\u8bbe\u8ba1\uff0c\u800c\u662f\u5728\u95ee\u9898\u5236\u5b9a\uff0c\u6570\u636e\u521b\u5efa\uff0c\u6570\u636e\u5206\u6790\u548c\u8bc4\u4f30\u671f\u95f4\u53ef\u4ee5\u9075\u5faa\u9650\u5236\u548c\u6d4b\u8bd5\u504f\u5dee\u3002\u5177\u4f53\u800c\u8a00\uff0c\u8d21\u732e\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a\n \u2022AI\u7ba1\u9053\u4e2d\u504f\u5dee\u7684\u5206\u7c7b\u3002\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5c06\u5404\u79cd\u504f\u5dee\u7684\u7ed3\u6784\u7ec4\u7ec7\u63d0\u4f9b\u5728\u53ef\u4ee5\u8815\u53d8\u5230AI\u7ba1\u9053\u4e2d\u7684\u5404\u4e2a\u9636\u6bb5\uff0c\u4ece\u6570\u636e\u521b\u5efa\u548c\u95ee\u9898\u5236\u5b9a\u5230\u6570\u636e\u51c6\u5907\u548c\u5206\u6790\u3002 \n\u2022\u5f25\u5408\u7814\u7a76\u4e0e\u5b9e\u8df5\u4e4b\u95f4\u5dee\u8ddd\u7684\u6307\u5bfc\u65b9\u9488\u3002\u9610\u660e\u9610\u660e\u4e0e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7814\u7a76\u601d\u60f3\u76f8\u5173\u7684\u6311\u6218\u7684\u5206\u6790\uff0c\u4ee5\u53ca\u5efa\u8bae\u7684\u586b\u8865\u8fd9\u79cd\u5dee\u8ddd\u7684\u505a\u6cd5\u3002\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5e2e\u52a9ML\u5f00\u53d1\u4eba\u5458\u5728\u6d4b\u8bd5\u5404\u79cd\u504f\u89c1\u7684ML\u5f00\u53d1\u4eba\u5458\u7684\u6307\u5bfc\u65b9\u9488\u3002\n \u8fd9\u9879\u5de5\u4f5c\u7684\u76ee\u6807\u662f\u63d0\u9ad8\u504f\u89c1\u5468\u56f4\u7684\u610f\u8bc6\u548c\u5b9e\u8df5\u6280\u80fd\uff0c\u8fc8\u5411AI\u7cfb\u7edf\u7684\u660e\u667a\u4f7f\u7528\u548c\u91c7\u7528\u3002\n   \u5178\u578b\u7684AI\u7ba1\u9053\u4ece\u6570\u636e\u521b\u5efa\u9636\u6bb5\u5f00\u59cb\uff1a\uff081\uff09\u6536\u96c6\u6570\u636e; \uff082\uff09\u6ce8\u91ca\u6216\u6807\u8bb0; \uff083\uff09\u5c06\u5176\u51c6\u5907\u6216\u52a0\u5de5\u6210\u53ef\u7531\u5176\u4f59\u7ba1\u9053\u6d88\u8017\u7684\u683c\u5f0f\u3002 Let\uff06\uff0339; S\u5206\u6790\u4e86\u8fd9\u4e9b\u6b65\u9aa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e2d\u53ef\u4ee5\u5f15\u5165\u4e0d\u540c\u7c7b\u578b\u7684\u504f\u5dee\u3002\n      \u901a\u8fc7\u9009\u62e9\u7279\u5b9a\u7c7b\u578b\u7684\u5b9e\u4f8b\uff08\u4ee5\u53ca\u7531\u6b64\u5448\u73b0\u73b0\u5b9e\u4e16\u754c\u7684\u4ee3\u8868\u6027\u4ee3\u8868\u7684\u6570\u636e\u96c6\uff09\u6765\u521b\u5efa\u7684\u6570\u636e\u96c6\u4e2d\u51fa\u73b0\u7684\u504f\u5dee\u88ab\u79f0\u4e3a\u91c7\u6837\u504f\u5dee\u3002\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u6570\u636e\u96c6\u504f\u5dee\u4e4b\u4e00\u3002\u6570\u636e\u96c6\u901a\u5e38\u4f7f\u7528\u7279\u5b9a\u7684\u4e00\u7ec4\u5b9e\u4f8b\u521b\u5efa\u3002\u4f8b\u5982\uff0c\u56fe\u50cf\u6570\u636e\u96c6\u66f4\u559c\u6b22\u8857\u666f\u6216\u81ea\u7136\u573a\u666f\u3002\u56fe25\u6240\u793a\u7684\u9762\u90e8\u8bc6\u522b\u7b97\u6cd5\u53ef\u4ee5\u7528\u6bd4\u6df1\u8272\u76ae\u80a4\u7684\u9762\u5b54\u66f4\u591a\u7684\u8f7b\u76ae\u9762\u7684\u7167\u7247\u5582\u517b\uff0c\u4ece\u800c\u5bfc\u81f4\u8bc6\u522b\u8f83\u6df1\u76ae\u80a4\u7684\u9762\u5b54\u7684\u6027\u80fd\u5dee\u3002\u56e0\u6b64\uff0c\u91c7\u6837\u504f\u7f6e\u53ef\u4ee5\u5bfc\u81f4\u5b66\u4e60\u7b97\u6cd5\u7684\u5e7f\u6cdb\u6027\u5dee\u3002\n   \u6d4b\u91cf\u504f\u5dee\u7531\u4eba\u7c7b\u6d4b\u91cf\u4e2d\u7684\u8bef\u5dee\u5f15\u5165\uff0c\u6216\u56e0\u4e3a\u6355\u83b7\u6570\u636e\u4e2d\u7684\u4eba\u4eec\u67d0\u4e9b\u5185\u5728\u4e60\u60ef\u3002\u4f8b\u5982\uff0c\u8003\u8651\u521b\u5efa\u56fe\u50cf\u548c\u89c6\u9891\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u56fe\u50cf\u6216\u89c6\u9891\u53ef\u4ee5\u53cd\u6620\u6444\u5f71\u5e08\u4f7f\u7528\u7684\u6280\u672f\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u6444\u5f71\u5e08\u53ef\u80fd\u503e\u5411\u4e8e\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u62cd\u6444\u7269\u4f53\u7684\u7167\u7247;\u7ed3\u679c\uff0c\u6570\u636e\u96c6\u53ef\u80fd\u4ec5\u5305\u542b\u7279\u5b9a\u89d2\u5ea6\u7684\u5bf9\u8c61\u89c6\u56fe\u3002\u57282011\u5e74\u7684\u7eb8\u5f20\uff06\uff0334;\u65e0\u504f\u89c1\u7684\u770b\u770b\u6570\u636e\u96c6\u504f\u89c1\uff0c\uff06\uff0334; Antonio Torralba\u548cAlexei A. efros\u5c06\u6b64\u7c7b\u578b\u7684\u6d4b\u91cf\u504f\u5dee\u79f0\u4e3a\u6355\u83b7\u504f\u5dee\u3002 25.\n \u53e6\u4e00\u4e2a\u6d4b\u91cf\u6e90\u6781\u53ef\u80fd\u662f\u7528\u4e8e\u6355\u83b7\u6570\u636e\u96c6\u7684\u8bbe\u5907\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u7528\u4e8e\u6355\u83b7\u56fe\u50cf\u7684\u6444\u50cf\u673a\u53ef\u80fd\u6709\u7f3a\u9677\uff0c\u5bfc\u81f4\u8d28\u91cf\u5dee\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u504f\u7f6e\u7ed3\u679c\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u504f\u5dee\u88ab\u5e7f\u6cdb\u5730\u5206\u7c7b\u4e3a\u8bbe\u5907\u504f\u7f6e\u3002\n \u5728\u4f7f\u7528\u4ee3\u7406\u800c\u4e0d\u662f\u521b\u5efa\u6570\u636e\u96c6\u65f6\uff0c\u53ef\u4ee5\u53d1\u751f\u7b2c\u4e09\u79cd\u7c7b\u578b\u7684\u6d4b\u91cf\u504f\u5dee\u3002\u4f8b\u5982\uff0c\u7ecf\u5e38\u4f7f\u7528\u902e\u6355\u7387\u800c\u4e0d\u662f\u72af\u7f6a\u7387;\u535a\u58eb\u8bbf\u95ee\u548c\u836f\u7269\u7528\u4f5c\u533b\u7597\u6761\u4ef6\u7b49\u6307\u6807\u3002 \n\u6807\u7b7e\u504f\u5dee\u4e0e\u6807\u7b7e\u8fc7\u7a0b\u4e2d\u7684\u4e0d\u4e00\u81f4\u76f8\u5173\u8054\u3002\u4e0d\u540c\u7684\u6ce8\u91ca\u5668\u5177\u6709\u4e0d\u540c\u7684\u6837\u5f0f\u548c\u9996\u9009\u9879\uff0c\u53ef\u5728\u521b\u5efa\u7684\u6807\u7b7e\u4e2d\u53cd\u6620\u3002\u5f53\u4e0d\u540c\u7684\u6ce8\u91ca\u5668\u5206\u914d\u4e0d\u540c\u6807\u7b7e\u5230\u76f8\u540c\u7c7b\u578b\u7684\u7269\u4f53\uff08\u4f8b\u5982\uff0cGrass\u4e0e\u8349\u576a\uff0c\u7ed8\u753b\u4e0e\u56fe\u7247\uff09\u65f6\uff0c\u51fa\u73b0\u4e86\u6807\u7b7e\u504f\u7f6e\u7684\u5e38\u89c1\u5b9e\u4f8b\u3002 25.\n \u5f53\u8bc4\u4f30\u8005\u7684\u4e3b\u89c2\u504f\u5dee\u5f71\u54cd\u6807\u8bb0\u65f6\uff0c\u53ef\u4ee5\u53d1\u751f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u6807\u7b7e\u504f\u5dee\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u9879\u5173\u4e8e\u6587\u672c\u4e2d\u7ecf\u5386\u7684\u60c5\u7eea\u7684\u4efb\u52a1\u4e2d\uff0c\u6807\u7b7e\u53ef\u4ee5\u88ab\u8bf8\u5982\u6587\u5316\uff0c\u4fe1\u4ef0\u548c\u5185\u7701\u80fd\u529b\u7684\u589e\u503c\u7b26\u7684\u4e3b\u89c2\u504f\u597d\u504f\u89c1\u3002 24\u786e\u8ba4\u504f\u89c1\uff0c21\uff0c\u5176\u4e2d\u662f\u4eba\u7c7b\u641c\u7d22\uff0c\u89e3\u91ca\uff0c\u91cd\u70b9\u5173\u6ce8\u7684\u4eba\u7c7b\u503e\u5411\uff0c\u5e76\u4ee5\u786e\u8ba4\u4e00\u4e2a\uff06\uff0339; s\u5148\u5165\u4e3a\u4e3b\u7684\u65b9\u5f0f\u8bb0\u4f4f\u4fe1\u606f\uff0c\u4e0e\u8fd9\u79cd\u7c7b\u578b\u7684\u6807\u7b7e\u504f\u5dee\u5bc6\u5207\u76f8\u5173\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u57fa\u4e8e\u5148\u524d\u7684\u4fe1\u4ef0\u800c\u4e0d\u662f\u5ba2\u89c2\u8bc4\u4f30\u6765\u5206\u914d\u6807\u7b7e\u3002\n \u4ece\u5cf0\u503c\u7ed3\u675f\u6548\u679c\u53ef\u80fd\u51fa\u73b0\u7b2c\u4e09\u79cd\u6807\u7b7e\u504f\u7f6e\u3002\u8fd9\u662f\u4e00\u79cd\u4e0e\u5185\u5b58\u76f8\u5173\u7684\u8ba4\u77e5\u504f\u89c1\u7684\u7c7b\u578b\uff0c\u4eba\u4eec\u5728\u8fd9\u4e3b\u8981\u5224\u65ad\u4e86\u4e00\u7cfb\u5217\u7ecf\u9a8c\uff0c\u8fd9\u4e3b\u8981\u662f\u4ed6\u4eec\u5728\u5176\u5cf0\u503c\uff08\u5373\uff0c\u5b83\u6700\u5f3a\u70c8\u7684\u70b9\uff09\u548c\u7ed3\u675f\u65f6\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u6bcf\u4e00\u523b\u7684\u603b\u548c\u6216\u5e73\u5747\u503c\u4f53\u9a8c\u3002 15\u4f8b\u5982\uff0c\u67d0\u4e9b\u6ce8\u91ca\u5668\u53ef\u4ee5\u5728\u5206\u914d\u6807\u7b7e\u65f6\u5bf9\u5bf9\u8bdd\u7684\u6700\u540e\u4e00\u90e8\u5206\uff08\u800c\u4e0d\u662f\u6574\u4e2a\u5bf9\u8bdd\uff09\u63d0\u4f9b\u66f4\u591a\u91cd\u8981\u6027\u3002 24.\n   Torralba\u548ceFros\u5b9a\u4e49\u8d1f\u9762\u96c6\u504f\u5dee\uff0c\u56e0\u4e3a\u7531\u4e8e\u6ca1\u6709\u8db3\u591f\u7684\u6837\u672c\u4ee3\u8868\uff06\uff0334;\u4e16\u754c\u5176\u4ed6\u5730\u533a\u7684\u6837\u672c\u96c6\u3002\uff06\uff0334; 25\u4f5c\u8005\u8bf4\u660e\u4e86\u90a3\u4e2a\uff06\uff0334;\u6570\u636e\u96c6\u4e0d\u4ec5\u4ec5\u662f\u7531\u5b83\uff08\u6b63\u9762\u5b9e\u4f8b\uff09\u7684\u73b0\u8c61\uff08\u4f8b\u5982\uff0c\u5bf9\u8c61\uff0c\u573a\u666f\uff0c\u4e8b\u4ef6\uff09\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5b83\u4e0d\u662f\uff08\u8d1f\u5b9e\u4f8b\uff09\u3002\uff06\uff0334;\u56e0\u6b64\uff0c\u5b66\u4e60\u7684\u5206\u7c7b\u5668\u53ef\u4ee5\u5728\u68c0\u6d4b\u8d1f\u9762\u60c5\u51b5\u4e0b\u8868\u73b0\u4e0d\u4f73\u3002\n   \u57fa\u4e8e\u5982\u4f55\u5b9a\u4e49\u95ee\u9898\uff0c\u53ef\u4ee5\u51fa\u73b0\u504f\u5dee\u3002\u8003\u8651\u7531Karen Hao\u7684MIT\u6280\u672f\u8bc4\u8bba\u4e2d\u63d0\u51fa\u7684\u4ee5\u4e0b\u793a\u4f8b\u3002 13\u5047\u8bbe\u4fe1\u7528\u5361\u516c\u53f8\u5e0c\u671b\u4f7f\u7528AI\u9884\u6d4b\u5ba2\u6237\uff06\uff0339;\u4fe1\u8a89\u3002\u4e3a\u4e86\u8fd9\u6837\u505a\uff0c\u5fc5\u987b\u4ee5\u53ef\u4ee5\u4e3a\uff06\uff0334\u7684\u65b9\u5f0f\u5b9a\u4e49\u4fe1\u8a89\u3002\u9884\u6d4b\u6216\u4f30\u8ba1\u3002\uff06\uff0334;\u8be5\u95ee\u9898\u53ef\u4ee5\u6839\u636e\u516c\u53f8\u60f3\u8981\u7684\u662f\uff0c\u6700\u5927\u5316\u5176\u5229\u6da6\u7387\u6216\u6700\u5927\u9650\u5ea6\u5730\u507f\u8fd8\u507f\u8fd8\u7684\u8d37\u6b3e\u4eba\u6570;\u7136\u800c\uff0c\uff06\uff0334;\u8fd9\u4e9b\u51b3\u5b9a\u662f\u9488\u5bf9\u516c\u5e73\u6216\u6b67\u89c6\u4ee5\u5916\u7684\u5404\u79cd\u5546\u4e1a\u539f\u56e0\u800c\u5236\u5b9a\u7684\uff0c\uff06\uff0334;\u5eb7\u5948\u5c14\u5927\u5b66\u8bf4\uff0cSolan Barocas\u4e13\u95e8\u4ece\u4e8b\u516c\u5e73\u3002\n   \u4ee5\u524d\u7684\u4fe1\u7528\u6848\u4f8b\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u6846\u67b6\u6548\u5e94\u504f\u5dee\u3002 21\u57fa\u4e8e\u5982\u4f55\u5236\u5b9a\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u63d0\u51fa\u4fe1\u606f\uff0c\u6240\u83b7\u5f97\u7684\u7ed3\u679c\u53ef\u4ee5\u4e0d\u540c\uff0c\u4e5f\u8bb8\u504f\u7f6e\u3002\u53e6\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u4f8b\u5b50\u662fCompas\uff08\u66ff\u4ee3\u5236\u88c1\u7684\u60e9\u6559\u7f6a\u72af\u7ba1\u7406\u5206\u6790\uff09\u8fa9\u8bba8\u5173\u4e8eNorthpointe\u4e4b\u95f4\u7684\u516c\u5e73\u6027\u5b9a\u4e49\uff08\u73b0\u5728\u79f0\u4e3a\u7b49\u4ef7\u613f\u610f\uff09\uff0c\u8fd9\u63d0\u51fa\u4e86\u8bc4\u4f30\u7d2f\u72af\u98ce\u9669\u7684Compas\u5206\u6570\uff0c\u4ee5\u53caPropublica\u58f0\u79f0Compas\u7cfb\u7edf\u88ab\u504f\u89c1\u3002 Propublica\u58f0\u79f0NorthPointe\uff06\uff0339; S\u65b9\u6cd5\u56e0\u9ed1\u4eba\u88ab\u544a\u800c\u504f\u5411\uff0c\u56e0\u4e3a\u8be5\u7ec4\u4e0e\u8f83\u9ad8\u7684\u5047\u9633\u6027\u7387\u76f8\u5173\u3002\u6709\u51e0\u4e2a\u516c\u5e73\u5ea6\u7684\u6307\u6807\uff0cPropublica\u8868\u793a\uff0cNorthpointe\uff06\uff0339; S\u7cfb\u7edf\u8fdd\u53cd\u4e86\u5747\u8861\u7684\u8d54\u7387\u548c\u673a\u4f1a\u516c\u5e73\u6807\u51c6\u7684\u5e73\u7b49\u3002\u4ece\u9884\u6d4b\u7387\u5e73\u4ef7\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5317\u6e2f\u548c\uff0339;\u4e3b\u8981\u9632\u5b88\u662f\u8be5\u5206\u6570\u6ee1\u8db3\u7684\u516c\u5e73\u3002\u56e0\u6b64\uff0c\u57fa\u4e8e\u95ee\u9898\u7684\u65b9\u5f0f\u53ca\u5176\u6210\u529f\u5ea6\u91cf\u6765\u5b9e\u73b0\u504f\u5dee\u3002\n      \u901a\u8fc7\u9009\u62e9\u4e2a\u4f53\uff0c\u7ec4\u6216\u6570\u636e\u8fdb\u884c\u5206\u6790\u6765\u5f15\u5165\u6837\u54c1\u9009\u62e9\u504f\u538b\uff0c\u4ee5\u4fbf\u6837\u54c1\u4e0d\u4ee3\u8868\u65e8\u5728\u5206\u6790\u7684\u4eba\u53e3\u3002\u5177\u4f53\u800c\u8a00\uff0c\u7531\u4e8e\u5728\u6570\u636e\u96c6\uff08\u4f8b\u5982\uff0c\u7279\u5b9a\u80a4\u8272\uff0c\u6027\u522b\u7b49\uff09\u4e2d\u7684\u4e00\u4e9b\u53d8\u91cf\u4e0a\u8c03\u8282\uff0c\u5728\u6570\u636e\u5206\u6790\u671f\u95f4\u53d1\u751f\u6837\u54c1\u9009\u62e9\u504f\u5dee\uff0c\u8fd9\u53c8\u53ef\u4ee5\u4ea7\u751f\u865a\u5047\u76f8\u5173\u6027\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6790\u6bcd\u6027\u5bf9\u5de5\u8d44\u7684\u5f71\u54cd\u65f6\uff0c\u5982\u679c\u8be5\u7814\u7a76\u4ec5\u9650\u4e8e\u5df2\u7ecf\u96c7\u7528\u7684\u5987\u5973\uff0c\u90a3\u4e48\u5728\u53d7\u96c7\u4e8e\u5987\u5973\u7684\u8c03\u8282\u540e\uff0c\u6d4b\u91cf\u7684\u6548\u679c\u5c06\u88ab\u504f\u89c1\u3002 9\u5e38\u89c1\u7c7b\u578b\u7684\u6837\u672c\u9009\u62e9\u504f\u7f6e\u5305\u62ecBerkson\uff06\uff0339; S\u6096\u8bba20\u548c\u6837\u54c1\u622a\u65ad\u3002 9. \n\u5982\u679c\u7b97\u6cd5\u901a\u8fc7\u4e0d\u8003\u8651\u6570\u636e\u4e2d\u7684\u6240\u6709\u4fe1\u606f\uff0c\u6216\u8005\u5b83\u9519\u8fc7\u4e86\u7279\u5f81\u548c\u76ee\u6807\u8f93\u51fa\u4e4b\u95f4\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u5219\u504f\u5dee\u53ef\u4ee5\u5728AI\u6a21\u578b\u4e2d\u51fa\u73b0\u9519\u8bef\u7684\u5173\u7cfb\u3002 20\u6df7\u6dc6\u504f\u5dee\u6e90\u81ea\u5f71\u54cd\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5171\u540c\u539f\u56e0\u3002\u8003\u8651\u4e00\u4e2a\u65b9\u6848\uff0c\u5176\u4e2d\u5bf9\u7814\u7a76\u751f\u9662\u7684\u62db\u751f\u662f\u57fa\u4e8e\u6b64\u4eba\u548c\u4e4b\u524d\u7684\u7b49\u7ea7\u70b9\u5e73\u5747\u503c\u3002\u7136\u800c\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u56e0\u7d20\uff0c\u4f8b\u5982\u83b7\u5f97\u6559\u7ec3\u7684\u80fd\u529b\uff0c\u8fd9\u53cd\u8fc7\u6765\u53ef\u80fd\u53d6\u51b3\u4e8e\u6bd4\u8d5b\u7b49\u654f\u611f\u5c5e\u6027;\u8fd9\u4e9b\u56e0\u7d20\u53ef\u4ee5\u786e\u5b9a\u6210\u7ee9\u70b9\u5e73\u5747\u548c\u5165\u573a\u7387\u3002\u5982\u56fe16\u6240\u793a\uff0c\u5f15\u5165\u4e86\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u865a\u5047\u5173\u7cfb\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bfc\u81f4\u504f\u5dee\u3002\n \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6df7\u6dc6\u504f\u5dee\u662f\u7701\u7565\u7684\u53d8\u91cf\uff0c\u5f53\u67d0\u4e9b\u76f8\u5173\u7279\u5f81\u4e0d\u5305\u62ec\u5728\u5206\u6790\u4e2d\u65f6\u53d1\u751f\u3002\u8fd9\u4e5f\u4e0e\u6a21\u7279\u5e95\u5c42\u7684\u95ee\u9898\u6709\u5173\u3002\n \u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u6df7\u6742\u504f\u538b\u662f\u4ee3\u7406\u53d8\u91cf\u3002\u5373\u4f7f\u8bf8\u5982\u7ade\u8d5b\uff0c\u6027\u522b\u7b49\u7684\u654f\u611f\u53d8\u91cf\u4e5f\u4e0d\u88ab\u8003\u8651\u51b3\u7b56\uff0c\u5206\u6790\u4e2d\u4f7f\u7528\u7684\u67d0\u4e9b\u5176\u4ed6\u53d8\u91cf\u53ef\u80fd\u662f\uff06\uff0334;\u4ee3\u7406\uff06\uff0334;\u5bf9\u4e8e\u90a3\u4e9b\u654f\u611f\u7684\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u90ae\u653f\u7f16\u7801\u53ef\u80fd\u6307\u793a\u6bd4\u8d5b\uff0c\u56e0\u4e3a\u67d0\u79cd\u79cd\u65cf\u7684\u4eba\u4eec\u53ef\u80fd\u4e3b\u8981\u751f\u6d3b\u5728\u67d0\u4e2a\u8857\u533a\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u504f\u5dee\u901a\u5e38\u4e5f\u79f0\u4e3a\u95f4\u63a5\u504f\u7f6e\u6216\u95f4\u63a5\u8fa8\u522b\u3002\n   \u6709\u65f6\uff0c\u7531\u4e8e\u8bf8\u5982\u8ba1\u7b97\u80fd\u529b\u7684\u7cfb\u7edf\u4e0a\u7684\u7b97\u6cd5\u9650\u5236\u6216\u5176\u4ed6\u7ea6\u675f\u800c\u53d1\u751f\u504f\u5dee\u3002\u6b64\u7c7b\u522b\u4e2d\u7684\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u6761\u76ee\u662f\u7b97\u6cd5\u504f\u7f6e\uff0c\u5176\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u5355\u72ec\u8bf1\u5bfc\u6216\u7531\u7b97\u6cd5\u6dfb\u52a0\u7684BAIS\u3002\u57281996\u5e74\u7684\u7eb8\u5f20\uff06\uff0334;\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u504f\u89c1\uff0c\uff06\uff0334; Batya Friedman and Helen Nissenbaum 10\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a\u4f9d\u8d56\u4e8e\u822a\u73ed\u5206\u5e03\u7684\u968f\u673a\u6027\u7684\u8f6f\u4ef6\u5e76\u975e\u771f\u6b63\u968f\u673a;\u4f8b\u5982\uff0c\u901a\u8fc7\u5bf9\u5217\u8868\u7ed3\u675f\u6216\u5f00\u5934\u7684\u9879\u76ee\u504f\u5411\u9879\u76ee\uff0c\u7ed3\u679c\u53ef\u4ee5\u53d8\u504f\u89c1\u3002\n \u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u76f8\u5173\u504f\u5dee\u662f\u6392\u540d\u504f\u89c1\u3002 18\u4f8b\u5982\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6bcf\u4e2a\u5c4f\u5e55\u663e\u793a\u4e09\u4e2a\u7ed3\u679c\u7684\u641c\u7d22\u5f15\u64ce\u6765\u7279\u6743\uff0c\u524d\u4e09\u4e2a\u7ed3\u679c\u7565\u9ad8\u4e8e\u63a5\u4e0b\u6765\u7684\u4e09\u4e2a\u7ed3\u679c\u3002 10\u6392\u540d\u504f\u5dee\u4e5f\u4e0e\u5448\u73b0\u504f\u5dee\uff0c18\u6e90\u81ea\u4ecb\u7ecd\uff0c\u5176\u4e2d\u60a8\u53ea\u80fd\u5728\u5411\u7528\u6237\u5448\u73b0\u7684\u9879\u76ee\u4e0a\u63a5\u6536\u7528\u6237\u53cd\u9988\u3002\u5373\u4f7f\u5728\u793a\u51fa\u7684\u90a3\u4e9b\u4e2d\uff0c\u63a5\u6536\u7528\u6237\u53cd\u9988\u7684\u6982\u7387\u4e5f\u8fdb\u4e00\u6b65\u5f71\u54cd\u4e86\u9879\u76ee\u7684\u4f4d\u7f6e\u3002 2\n   \u51e0\u79cd\u7c7b\u578b\u7684\u504f\u5dee\u662f\u7531\u4eba\u7c7b\u8bc4\u4f30\u7b26\u4e2d\u56fa\u6709\u7684\u504f\u5dee\uff0c\u4ee5\u53ca\u9009\u62e9\u8fd9\u4e9b\u8bc4\u4f30\u8005\uff08\u6837\u54c1\u5904\u7406\u504f\u89c1\uff09\u3002\n   \u901a\u5e38\uff0c\u4eba\u7c7b\u8bc4\u4f30\u4eba\u5458\u5728\u9a8c\u8bc1AI\u6a21\u578b\u7684\u9a8c\u8bc1\u65b9\u9762\u3002\u73b0\u8c61\u5982\u786e\u8ba4\u504f\u5dee\uff0c\u5cf0\u503c\u7ec8\u70b9\u6548\u5e94\u548c\u5148\u524d\u4fe1\u4ef0\uff08\u4f8b\u5982\uff0c\u57f9\u517b\uff09\u53ef\u4ee5\u5728\u8bc4\u4f30\u4e2d\u4ea7\u751f\u504f\u89c1\u3002 15\u4eba\u7c7b\u8bc4\u4f30\u4eba\u5458\u4e5f\u53d7\u5230\u4ed6\u4eec\u53ef\u4ee5\u56de\u5fc6\u591a\u5c11\u4fe1\u606f\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u53ec\u56de\u504f\u5dee\u3002 \n\u6709\u65f6\uff0c\u53ef\u4ee5\u504f\u7f6e\u9009\u62e9\u7528\u4e8e\u8bc4\u4f30\u7b97\u6cd5\u7684\u6d4b\u8bd5\u96c6\u3002 3\u4f8b\u5982\uff0c\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d\uff0c\u67d0\u4e9b\u7279\u5b9a\u89c2\u4f17\uff08\u4f8b\u5982\uff0c\u90a3\u4e9b\u8bf4\u51fa\u67d0\u79cd\u8bed\u8a00\uff09\u7684\u7279\u5b9a\u89c2\u4f17\u53ef\u80fd\u4f1a\u663e\u793a\u51fa\u5e7f\u544a\uff0c\u6709\u4e9b\u5219\u53ef\u80fd\u4e0d\u4f1a\u3002\u56e0\u6b64\uff0c\u89c2\u5bdf\u5230\u7684\u6548\u679c\u4e0d\u4f1a\u4ee3\u8868\u5bf9\u4e00\u822c\u4eba\u7fa4\u7684\u771f\u6b63\u5f71\u54cd\u3002\u5728\u9009\u62e9\u6027\u5730\u4f7f\u67d0\u4e9b\u4eba\u7684\u8fc7\u7a0b\u4e2d\u5f15\u5165\u7684\u504f\u5dee\u88ab\u79f0\u4e3a\u4e00\u79cd\u6cbb\u7597\u7c7b\u578b\u79f0\u4e3a\u6837\u54c1\u5904\u7406\u504f\u5dee\u3002\n   \u504f\u5dee\u4e5f\u53ef\u4ee5\u4ece\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u9009\u62e9\u548c\u6807\u8bb0\u504f\u5dee\u5f15\u8d77\u3002 25\u901a\u5e38\uff0c\u4e0e\u6570\u636e\u96c6\u521b\u5efa\u9636\u6bb5\u76f8\u5173\u8054\u7684\u504f\u5dee\u4e5f\u53ef\u4ee5\u5728\u6a21\u578b\u8bc4\u4f30\u9636\u6bb5\u663e\u793a\u3002\u6b64\u5916\uff0c\u8bc4\u4f30\u504f\u5dee\u53ef\u80fd\u662f\u7531\u4e8e\u9009\u62e9\u4e0d\u9002\u5f53\u7684\u57fa\u51c6/\u6570\u636e\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002\n \u56fe1\u63d0\u4f9b\u4e86\u6cbf\u7740\u524d\u4e00\u8282\u4e2d\u8ba8\u8bba\u7684AI\u7ba1\u9053\u7684\u5404\u4e2a\u9636\u6bb5\u7684\u504f\u5dee\u5206\u7c7b\u7684\u56fe\u793a\u3002\n  \u5c3d\u7ba1AI\u793e\u533a\u5185\u90e8\u52aa\u529b\u89e3\u51b3\u4e86\u4e0e\u504f\u89c1\u76f8\u5173\u7684\u6311\u6218\uff0c\u4f46\u51e0\u4e2a\u5dee\u8ddd\u59a8\u788d\u4e86\u96c6\u4f53\u8fdb\u5c55\u3002\u4e0b\u4e00\u8282\u7a81\u51fa\u4e86\u8fd9\u4e9b\u5dee\u8ddd\u4e2d\u7684\u4e00\u4e9b\u3002\n   \u5df2\u7ecf\u63d0\u51fa\u4e86\u5bf9\u8ba1\u6570\u6570\u636e\u96c6\u504f\u7f6e\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5177\u6709\u5f3a\u8c03\u7ef4\u6301\u591a\u6837\u6027\u7684\u65b0\u6570\u636e\u96c6\u3002\u4f8b\u5982\uff0c\u591a\u6837\u6027\u7684DataSet\u7531\u8ddd\u79bb\u96c5\u864e\u7684\u4eba\u7684\u8fd1\u4e00\u767e\u4e07\u56fe\u50cf\u7ec4\u6210Flickr Creative Commons DataSet\uff0c\u4e13\u95e8\u7ec4\u88c5\uff0c\u4ee5\u5b9e\u73b0\u80a4\u8d28\uff0c\u9762\u90e8\u7ed3\u6784\uff0c\u5e74\u9f84\u548c\u6027\u522b\u7c7b\u522b\u7684\u7edf\u8ba1\u9636\u6bb5\u3002\u5728\u4ed6\u4eec\u76842019\u5e74\u7eb8\u4e0a\uff0c\uff06\uff0334;\u6316\u6398ai\uff0c\uff06\uff0334;\u7136\u800c\uff0cKate Crawford\u548cTrevor Paglen\u8d28\u7591\u4f7f\u7528\u7528\u4e8e\u521b\u5efa\u6b64\u6570\u636e\u96c6\u7684Cranio-Metrical\u529f\u80fd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u529f\u80fd\u4e5f\u53ef\u80fd\u662f\u79cd\u65cf\u504f\u89c1\u7684\u4ee3\u7406\u3002 7\u4f5c\u8005\u8fdb\u4e00\u6b65\u63d0\u4f9b\u4e86\u5bf9\u4e0e\u591a\u4e2a\u57fa\u51c6\u6570\u636e\u96c6\u6709\u5173\u7684\u95ee\u9898\u7684\u5173\u952e\u5ba1\u67e5\u3002\n \uff06\uff0334;\u673a\u5668\u5b66\u4e60\u7684\u516c\u5e73\u6027\uff06\uff0334;\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u7814\u7a76\u9886\u57df\u3002\u8fd8\u6709\u81f4\u529b\u4e8e\u4e3b\u9898\u7684\u4f1a\u8bae\u548c\u7814\u8ba8\u4f1a\u3002\u5b8c\u5168\u6982\u8ff0\u673a\u5668\u5b66\u4e60\u7684\u516c\u5e73\u8d85\u51fa\u4e86\u672c\u8c03\u67e5\u7684\u8303\u56f4\u3002\u5e7f\u6cdb\u6982\u8ff0\u4e86\u5728\u5206\u7c7b\u4e2d\u5b9e\u73b0\u516c\u5e73\u6027\u7684\u516c\u5e73\u548c\u65b9\u6cd5\u7684\u5404\u79cd\u7b97\u6cd5\u5b9a\u4e49\uff0c\u8bf7\u54a8\u8be2Barocas\u7b49\u4eba\u3002 4\u8fd8\u6709\u5f00\u6e90\u5de5\u5177\uff0c\u5982IBM\uff06\uff0339; S AI\u516c\u5e73360 5\uff0c\u4fc3\u8fdb\u4e86\u5bf9\u4e0d\u9700\u8981\u7684\u7b97\u6cd5\u504f\u5dee\u7684\u68c0\u6d4b\u548c\u51cf\u8f7b\u3002\u5c3d\u7ba1\u6709\u8fd9\u4e9b\u52aa\u529b\uff0c\u4f46\u6709\u7740\u663e\u7740\u7684\u5dee\u8ddd\uff0c\u6b63\u5982Pratik Gajane\u548cMykola Pechenizkiy\u5728\u4ed6\u4eec\u76842018\u5e74\u7eb8\u4e0a\u6240\u6307\u51fa\u7684\uff0c\uff06\uff0334;\u5173\u4e8e\u5728\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u4e2d\u7684\u6b63\u5f0f\u5316\u516c\u5e73\u3002 11.\n   \u5df2\u7ecf\u63d0\u51fa\u4e86\u7ec3\u4e60\u51c6\u5219\u6765\u51cf\u5c11AI\u7cfb\u7edf\u7684\u6f5c\u5728\u504f\u89c1\u3002\u8fd9\u4e9b\u5305\u62ec\uff06\uff0334;\u6570\u636e\u96c6\uff06\uff0334\u7684\u4e8b\u5b9e\u8868;\u6765\u81eaIBM\uff0c\u548c\uff06\uff0334;\u6570\u636e\u96c6\u7684\u6570\u636e\u8868\uff0c\uff06\uff0334;\u7528\u4e8e\u5206\u4eab\u6709\u5173\u7528\u4e8e\u57f9\u8badAI\u6a21\u578b\u7684\u6570\u636e\u96c6\u7684\u57fa\u672c\u4fe1\u606f\u7684\u65b9\u6cd5\u3002 12\u57282019\u5e74\u7684\u7eb8\u5f20\u4e2d\uff0cMargaret Mitchell\u7b49\u3002\u5efa\u8bae\u4f7f\u7528\u53d1\u5e03\u6a21\u578b\u7684\u8be6\u7ec6\u6587\u6863\u4ee5\u9f13\u52b1\u900f\u660e\u5ea6\u3002 19. \nKenneth Holstein\u7b49\u3002\u8bc6\u522b\u5728\u5b9e\u8df5\u4e2d\u56e2\u961f\u9762\u4e34\u7684\u6311\u6218\u548c\u5c55\u793a\u4e2d\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u7684\u6311\u6218\u548c\u8131\u8282\u9886\u57df\u3002 14\u63d0\u4ea4\u4eba\u6566\u4fc3\u672a\u6765\u7684\u7814\u7a76\u5e94\u8be5\u4e13\u6ce8\u4e8e\u652f\u6301\u4ece\u4e1a\u8005\u6536\u96c6\u548c\u7b56\u5212\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u3002\u4f5c\u8005\u8fdb\u4e00\u6b65\u770b\u5230\u4e86\u9700\u8981\u521b\u5efa\u7279\u5b9a\u4e8e\u57df\u7684\u6559\u80b2\u8d44\u6e90\uff0c\u6307\u6807\uff0c\u6d41\u7a0b\u548c\u5de5\u5177\u3002\u5728\u8fd9\u79cd\u7cbe\u795e\uff0c\u672c\u6587\u65e8\u5728\u6210\u4e3aML\u5f00\u53d1\u4eba\u5458\u5728\u7406\u89e3AI\u7ba1\u9053\u4e2d\u7684\u5404\u79cd\u504f\u89c1\u6765\u6e90\u7684\u6559\u80b2\u8d44\u6e90\u3002\n   \u867d\u7136\u53ef\u80fd\u65e0\u6cd5\u6d88\u9664\u6240\u6709\u504f\u5dee\u6765\u6e90\uff0c\u4f46\u6709\u4e00\u4e9b\u9884\u9632\u63aa\u65bd\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u504f\u7f6e\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u53ef\u4ee5\u5e2e\u52a9ML\u5f00\u53d1\u4eba\u5458\u5728\u8bc6\u522b\u6f5c\u5728\u504f\u89c1\u7684\u6f5c\u5728\u6765\u6e90\u4ee5\u53ca\u5e2e\u52a9\u907f\u514d\u4e0d\u9700\u8981\u7684\u504f\u5dee\u7684\u5f15\u5165\u65f6\uff1a\n \u2022\u5728\u5b9a\u4e49\u548c\u68c0\u6d4b\u504f\u5dee\u65b9\u9762\u7eb3\u5165\u7279\u5b9a\u4e8e\u57df\u7684\u77e5\u8bc6\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u8981\u4e86\u89e3\u6570\u636e\u96c6\u4e2d\u7684\u5404\u79cd\u529f\u80fd\u4e4b\u95f4\u7684\u7ed3\u6784\u4f9d\u8d56\u6027\u975e\u5e38\u91cd\u8981\u3002\u901a\u5e38\uff0c\u5b83\u6709\u52a9\u4e8e\u7ed8\u5236\u8bf4\u660e\u5174\u8da3\u7684\u5404\u79cd\u7279\u5f81\u53ca\u5176\u76f8\u4e92\u4f9d\u8d56\u6027\u7684\u7ed3\u6784\u56fe\u3002\u7136\u540e\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u8bc6\u522b\u504f\u5dee\u6e90\u3002 20.\n \u2022\u4e86\u89e3\u6570\u636e\u57fa\u4e8e\u5e94\u7528\u654f\u611f\u7684\u6570\u636e\u7684\u7279\u5f81\u4e5f\u5f88\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5e74\u9f84\u53ef\u80fd\u662f\u786e\u5b9a\u8c01\u83b7\u5f97\u8d37\u6b3e\u7684\u654f\u611f\u7279\u5f81\uff0c\u4f46\u4e0d\u4e00\u5b9a\u5728\u786e\u5b9a\u8c01\u83b7\u5f97\u533b\u7597\u3002\u6b64\u5916\uff0c\u53ef\u80fd\u5b58\u5728\u4ee3\u7406\u7279\u5f81\uff0c\u867d\u7136\u672a\u88ab\u8ba4\u4e3a\u662f\u654f\u611f\u7684\u7279\u5f81\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u7f16\u7801\u654f\u611f\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5448\u73b0\u504f\u7f6e\u9884\u6d4b\u3002\n \u2022\u5c3d\u53ef\u80fd\u7528\u4e8e\u5206\u6790\u7684\u6570\u636e\u96c6\u5e94\u4ee3\u8868\u6240\u8003\u8651\u7684\u771f\u6b63\u4eba\u53e3\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u5728\u6784\u5efa\u4ee3\u8868\u6027\u6570\u636e\u96c6\u4e2d\u8fdb\u884c\u62a4\u7406\u3002\n \u2022\u5fc5\u987b\u5236\u5b9a\u9002\u5f53\u7684\u6807\u51c6\u6765\u6ce8\u91ca\u6570\u636e\u3002\u89c4\u5219\u5fc5\u987b\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u5c3d\u53ef\u80fd\u5730\u4ece\u6ce8\u91ca\u5668\u4e2d\u83b7\u53d6\u4e00\u81f4\u7684\u6807\u7b7e\u3002\n \u2022\u8bc6\u522b\u53ef\u80fd\u4e0e\u611f\u5174\u8da3\u7684\u76ee\u6807\u7279\u5f81\u76f8\u5173\u8054\u7684\u6240\u6709\u529f\u80fd\u90fd\u5f88\u91cd\u8981\u3002\u7701\u7565\u5177\u6709\u76ee\u6807\u529f\u80fd\u4f9d\u8d56\u5173\u7cfb\u7684\u53d8\u91cf\u5bfc\u81f4\u504f\u7f6e\u4f30\u8ba1\u3002 \n\u2022\u4e0e\u8f93\u5165\u548c\u8f93\u51fa\u76f8\u5173\u8054\u7684\u529f\u80fd\u53ef\u80fd\u5bfc\u81f4\u504f\u7f6e\u4f30\u8ba1\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u5728\u9009\u62e9\u8f93\u5165\u65f6\uff0c\u901a\u8fc7\u9002\u5f53\u7684\u6570\u636e\u8c03\u8282\u548c\u968f\u673a\u5316\u7b56\u7565\u6d88\u9664\u8fd9\u4e9b\u6df7\u6dc6\u504f\u5dee\u6765\u6e90\u975e\u5e38\u91cd\u8981\u3002 20.  \u2022\u5c06\u6570\u636e\u5206\u6790\u9650\u5236\u4e3a\u6570\u636e\u96c6\u7684\u67d0\u4e9b\u622a\u77ed\u90e8\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u9700\u8981\u7684\u9009\u62e9\u504f\u5dee\u3002 \u56e0\u6b64\uff0c\u5728\u9009\u62e9\u7528\u4e8e\u5206\u6790\u7684\u6570\u636e\u5b50\u96c6\u65f6\uff0c\u5fc5\u987b\u6ce8\u610f\u4e0d\u8981\u5f15\u5165\u6837\u54c1\u9009\u62e9\u504f\u5dee\u3002  \u2022\u5728\u9a8c\u8bc1\u5982A / B\u68c0\u9a8c\u4e2d\u7684\u578b\u53f7\u7684\u6027\u80fd\u65b9\u9762\uff0c\u5fc5\u987b\u6ce8\u610f\u9632\u8303\u6837\u54c1\u5904\u7406\u504f\u5dee\u7684\u5f15\u5165\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u6d4b\u8bd5\u6a21\u578b\u7684\u6027\u80fd\u65f6\uff0c\u6d4b\u8bd5\u6761\u4ef6\u4e0d\u5e94\u8be5\u4f11\u606f  ...... ", "note_en": "May 12, 2021   Volume 19, issue 2      A child wearing sunglasses is labeled as a &#34;failure, loser, nonstarter, unsuccessful person.&#34; This is just one of the many systemic biases exposed by ImageNet Roulette, an art project that applies labels to user-submitted photos by sourcing its identification system from the original ImageNet database. 7 ImageNet, which has been one of the instrumental datasets for advancing AI, has deleted more than half a million images from its &#34;person&#34; category since this instance was reported in late 2019. 23 Earlier in 2019, researchers showed how Facebook&#39;s ad-serving algorithm for deciding who is shown a given ad exhibits discrimination based on race, gender, and religion of users. 1 There have been reports of commercial facial-recognition software (notably Amazon&#39;s Rekognition, among others) being biased against darker-skinned women. 6,22\n These examples provide a glimpse into a rapidly growing body of work that is exposing the bias associated with AI systems, but biased algorithmic systems are not a new phenomenon. As just one example, in 1988 the UK Commission for Racial Equality found a British medical school guilty of discrimination because the algorithm used to shortlist interview candidates was biased against women and applicants with non-European names. 17\n With the rapid adoption of AI across a variety of sectors, including in areas such as justice and health care, technologists and policy makers have raised concerns about the lack of accountability and bias associated with AI-based decisions. From AI researchers and software engineers to product leaders and consumers, a variety of stakeholders are involved in the AI pipeline. The necessary expertise around AI, datasets, and the policy and rights landscape that collectively helps uncover bias is not uniformly available among these stakeholders. As a consequence, bias in AI systems can compound inconspicuously.\n Consider, for example, the critical role of ML (machine learning) developers in this pipeline. They are asked to: preprocess the data appropriately, choose the right models from several available ones, tune parameters, and adapt model architectures to suit the requirements of an application. Suppose an ML developer was entrusted with developing an AI model to predict which loans will default. Unaware of bias in the training data, an engineer may inadvertently train models using only the validation accuracy. Suppose the training data contained too many young people who defaulted. In this case, the model is likely to make a similar prediction about young people defaulting when applied to test data. There is thus a need to educate ML developers about the various kinds of biases that can creep into the AI pipeline.\n Defining, detecting, measuring, and mitigating bias in AI systems is not an easy task and is an active area of research. 4 A number of efforts are being undertaken across governments, nonprofits, and industries, including enforcing regulations to address issues related to bias. As work proceeds toward recognizing and addressing bias in a variety of societal institutions and pathways, there is a growing and persistent effort to ensure that computational systems are designed to address these concerns.\n The broad goal of this article is to educate nondomain experts and practitioners such as ML developers about various types of biases that can occur across the different stages of the AI pipeline and suggest checklists for mitigating bias. There is a vast body of literature related to the design of fair algorithms. 4 As this article is directed at aiding ML developers, the focus is not on the design of fair AI algorithms but rather on practical aspects that can be followed to limit and test for bias during problem formulation, data creation, data analysis, and evaluation. Specifically, the contributions can be summarized as follows:\n \u2022 Taxonomy of biases in the AI pipeline. A structural organization of the various types of bias that can creep into the AI pipeline is provided, anchored in the various phases from data creation and problem formulation to data preparation and analysis.\n \u2022 Guidelines  for bridging the gap between research and practice. Analyses that elucidate the challenges associated with implementing research ideas in the real world are listed, as well as suggested practices to fill this gap. Guidelines that can aid ML developers in testing for various kinds of biases are provided.\n The goal of this work is to enhance awareness and practical skills around bias, toward the judicious use and adoption of AI systems.\n   A typical AI pipeline starts from the data-creation stage: (1) collecting the data; (2) annotating or labeling it; and (3) preparing or processing it into a format that can be consumed by the rest of the pipeline. Let&#39;s analyze how different types of bias can be introduced in each of these steps.\n      The bias that arises in a dataset that is created by selecting particular types of instances more than others (and thereby rendering the dataset underrepresentative of the real world) is called  sampling bias. This is one of the most common types of dataset biases. Datasets are often created with a particular set of instances. For example, image datasets prefer street scenes or nature scenes. 25 A face-recognition algorithm may be fed with more photos of light-skinned faces than dark-skinned faces, thereby leading to poor performance in recognizing darker-skinned faces. 6 Thus, sampling bias can result in poor generalization of learned algorithms.\n   Measurement bias is introduced by errors in human measurement, or because of certain intrinsic habits of people in capturing data. As an example, consider the creation of image and video datasets, where the images or videos may reflect the techniques used by the photographers. For example, some photographers might tend to take pictures of objects in similar ways; as a result, the dataset may contain object views from certain angles only. In their 2011 paper &#34;Unbiased Look at Dataset Bias,&#34; Antonio Torralba and Alexei A. Efros refer to this type of measurement bias as  capture bias. 25\n Another source of measurement bias could be a result of the device used to capture datasets. For example, cameras used to capture images may be defective, leading to poor-quality images and thereby contributing to biased results. These types of biases are broadly categorized as  device bias.\n A third type of measurement bias can occur when proxies are used instead of true values in creating the dataset. For example, arrest rates are often used instead of crime rates; doctor visits and medications are used as indicators of medical conditions, etc.\n   Label bias is associated with inconsistencies in the labeling process. Different annotators have different styles and preferences that get reflected in the labels created. A common instance of label bias arises when different annotators assign differing labels to the same type of object (e.g.,  grass vs.  lawn,  painting vs.  picture). 25\n Yet another type of label bias can happen when the subjective biases of evaluators affect labeling. For example, in a task of annotating emotions experienced in a text, the labels could be biased by the subjective preferences of annotators such as their culture, beliefs, and introspective capabilities. 24  Confirmation bias, 21 which is the human tendency to search for, interpret, focus on, and remember information in a way that confirms one&#39;s preconceptions, is closely related to this type of label bias. Thus, labels may be assigned based on prior belief rather than objective assessments.\n A third type of label bias can arise from the peak end effect. This is a type of memory-related cognitive bias in which people judge an experience based largely on how they felt at its peak (i.e., its most intense point) and at its end, rather than based on the total sum or average of every moment of the experience. 15 For example, some annotators may give more importance to the last part of a conversation (rather than the entire conversation) in assigning a label. 24\n   Torralba and Efros define  negative set bias as being introduced in the dataset as a consequence of not having enough samples representative of &#34;the rest of the world.&#34; 25 The authors state that &#34;datasets define a phenomenon (e.g., object, scene, event) not just by what it is (positive instances), but also by what it is not (negative instances).&#34; As a consequence, the learned classifiers can perform poorly in detecting negative instances.\n   Biases can arise based on how a problem is defined. Consider the following example presented in  MIT Technology Review by Karen Hao. 13 Suppose a credit card company wants to predict a customer&#39;s creditworthiness using AI. In order to do so, creditworthiness must be defined in a manner that can be &#34;predicted or estimated.&#34; The problem can be formulated based on what the company wants, say, to maximize its profit margin or to maximize the number of loans that get repaid; however, &#34;those decisions are made for various business reasons other than fairness or discrimination,&#34; says Cornell University&#39;s Solan Barocas, who specializes in fairness.\n   The previous creditworthiness example can be thought of as a type of  framing effect bias. 21 Based on how the problem is formulated and how information is presented, the results obtained can be different and perhaps biased. Another notable example is the COMPAS (Correctional Offender Management Profiling for Alternative Sanctions) debate 8 concerning the definition of fairness between Northpointe (now known as Equivant), which came up with COMPAS scores for assessing risk of recidivism, and  ProPublica, which claimed that the COMPAS system was biased.  ProPublica claimed that Northpointe&#39;s method was biased against black defendants as the group was associated with a higher false-positive rate. There are several metrics of fairness, and  ProPublica stated that Northpointe&#39;s system violated equalized odds and equality of opportunity fairness criteria. Northpointe&#39;s main defense was that scores satisfied fairness from the viewpoint of predictive rate parity. 4 Thus, bias can arise based on the way a problem and its success metrics are defined.\n      Sample selection bias is introduced by the selection of individuals, groups, or data for analysis in such a way that the samples are not representative of the population intended to be analyzed. 9 In particular, sample selection bias occurs during data analysis as a result of conditioning on some variables in the dataset (e.g., a particular skin color, gender, etc.), which in turn can create spurious correlations. For example, in analyzing the effect of motherhood on wages, if the study is restricted to women who are already employed, then the measured effect will be biased as a result of conditioning on employed women. 9 Common types of sample selection bias include Berkson&#39;s paradox 20 and sample truncation. 9\n   Bias can arise in the AI model if the algorithm learns the wrong relations by not taking into account all the information in the data or if it misses the relevant relations between features and target outputs. 20  Confounding bias originates from common causes that affect both inputs and outputs. Consider a scenario wherein admissions to a graduate school are based on the person&#39;s previous grade point average. There might be other factors, however, such as ability to get coaching, which in turn may be dependent on sensitive attributes such as race; and these factors may determine the grade point average and admission rates. 16 As a result, spurious relations between inputs and outputs are introduced and thus can lead to bias.\n A special type of confounding bias is the  omitted variable, which occurs when some relevant features are not included in the analysis. This is also related to the problem of model underfitting.\n Another type of confounding bias is the  proxy variable. Even if sensitive variables such as race, gender, etc. are not considered for decision making, certain other variables used in the analysis might serve as &#34;proxies&#34; for those sensitive variables. For example, zip code might be indicative of race, as people of a certain race might predominantly live in a certain neighborhood. This type of bias is also commonly referred to as  indirect bias or  indirect discrimination.\n   Sometimes, biases occur as a result of algorithmic limitations or other constraints on the system such as computational power. A notable entry in this category is  algorithm bias, which can be defined as bais that is solely induced or added by the algorithm. In their 1996 paper &#34;Bias in Computer Systems,&#34; Batya Friedman and Helen Nissenbaum 10 provide an example: Software that relies on randomness for fair distributions of results is not truly random; for example, by skewing selections toward items at the end or beginning of a list, the results can become biased.\n Another type of design-related bias is  ranking bias. 18 For example, a search engine that shows three results per screen can be understood to privilege the top three results slightly more than the next three. 10 Ranking bias is also closely related to presentation bias, 18 which is derived from the fact that you can receive user feedback only on items that have been presented to the user. Even among those that are shown, the probability of receiving user feedback is further affected by where the item is shown. 2\n   Several types of biases result from those inherent in human evaluators, as well as in the selection of those evaluators (sample treatment bias).\n   Often, human evaluators are employed in validating the performance of an AI model. Phenomena such as confirmation bias, peak end effect, and prior beliefs (e.g., culture) can create biases in evaluation. 15 Human evaluators are also constrained by how much information they can recall, which can result in  recall bias.\n   Sometimes, test sets selected for evaluating an algorithm may be biased. 3 For example, in recommendation systems, some specific viewers (e.g., those speaking a certain language) may be shown an advertisement, and some may not. As a consequence, the observed effects will not be representative of true effects on the general population. The bias introduced in the process of selectively subjecting some sets of people to a type of treatment is called  sample treatment bias.\n   Biases can also be induced from sample selection and label biases in the validation and test datasets. 25 In general, biases associated with the dataset-creation stage could show up in the model-evaluation stage as well. Additionally, evaluation bias can result from the selection of inappropriate benchmarks/datasets for testing.\n Figure 1 provides an illustration of the taxonomy of biases along the various stages of the AI pipeline as discussed in the previous sections.\n  Despite significant research efforts within the AI community to address bias-related challenges, several gaps impede the collective progress. The next section highlights some of these gaps.\n   Methods to counter dataset bias issues have been proposed, as have new datasets with an emphasis on maintaining diversity. For example, the diversity-in-faces dataset consists of almost a million images of people pulled from the Yahoo! Flickr Creative Commons dataset, assembled specifically to achieve statistical parity among categories of skin tone, facial structure, age, and gender. In their 2019 paper, &#34;Excavating AI,&#34; Kate Crawford and Trevor Paglen, however, question the use of cranio-metrical features used in creating this dataset, as these features could also be proxies for racial bias. 7 The authors further provide a critical review of issues pertaining to several benchmark datasets.\n &#34;Fairness in machine learning&#34; is an active area of research. There are also conferences and workshops dedicated to the theme. A complete overview of fairness in machine learning is beyond the scope of this survey. For an extensive overview of various algorithmic definitions of fairness and methods to achieve fairness in classification, consult Barocas et al. 4 There are also open-source tools such as IBM&#39;s AI Fairness 360 5 that facilitates detection and mitigation of unwanted algorithmic bias. Despite these efforts, there are notable gaps, as noted by Pratik Gajane and Mykola Pechenizkiy in their 2018 paper, &#34;On Formalizing Fairness in Prediction with Machine Learning. 11\n   Practice guidelines have been proposed for reducing the potential bias in AI systems. These include &#34;Factsheets for Datasets&#34; from IBM, and &#34;Datasheets for Datasets,&#34; an approach for sharing essential information about datasets used to train AI models. 12 In their 2019 paper, Margaret Mitchell et al. suggest the use of detailed documentation of released models in order to encourage transparency. 19\n Kenneth Holstein et al. identify areas of alignment and disconnect between the challenges faced by teams in practice and the solutions proposed in the fair ML research literature. 14 The authors urge that future research should focus on supporting practitioners in collecting and curating high-quality datasets. The authors further see a need for creating domain-specific educational resources, metrics, processes, and tools. In that spirit, this article aims to be an educational resource for ML developers in understanding various sources of biases in the AI pipeline.\n   While it may not be possible to eliminate all sources of bias, with certain precautionary measures, some bias issues can be reduced. Here are some key messages that could aid ML developers in identifying potential sources of bias and help in avoiding the introduction of unwanted bias:\n \u2022 Incorporation of domain-specific knowledge is crucial in defining and detecting bias. It is important to understand the structural dependencies among various features in the dataset. Often, it helps to draw a structural diagram illustrating various features of interest and their interdependencies. This can then help in identifying the sources of bias. 20\n \u2022 It is also important to understand which features of the data are deemed sensitive based on the application. For example, age may be a sensitive feature in determining who gets a loan, but not necessarily in determining who gets a medical treatment. Furthermore, there may be proxy features that, although not thought to be sensitive features, may still encode sensitive information so as to render biased predictions.\n \u2022 As far as possible, datasets used for analysis should be representative of the true population under consideration. Thus, care has to be taken in constructing representative datasets.\n \u2022 Appropriate standards have to be laid out for annotating the data. Rules have to defined so as to obtain consistent labels from annotators as much as possible.\n \u2022 Identifying all features that may be associated with the target feature of interest is important. Omitting variables that have dependencies with the target feature leads to a biased estimate.\n \u2022 Features that are associated with both input and output can lead to biased estimates. In such cases, it is important to eliminate these sources of confounding biases by appropriate data conditioning and randomization strategies in selecting input. 20\n \u2022 Restricting data analysis to some truncated portions of the dataset can lead to unwanted selection bias. Thus, in choosing subsets of data for analysis, care must be taken not to introduce sample selection bias.\n \u2022 In validating the performance of a model such as in A/B testing, care has to be taken to guard against the introduction of sample treatment bias. In other words, in testing the performance of a model, the test conditions should not be rest\n......", "posttime": "2021-06-25 19:12:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ai,\u504f\u5dee", "title": "AI\u7cfb\u7edf\u4e2d\u7684\u504f\u89c1 ", "title_en": "Biases in AI Systems", "transed": 1, "url": "https://queue.acm.org/detail.cfm?id=3466134", "via": "", "real_tags": ["ai", "\u504f\u5dee"]}, {"category": "", "categoryclass": "", "imagename": "c33c7284f7ee4e75734ce217d011080b.png", "infoid": 1068210, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Roberts Space Industries Star Citizen\u548cSquadron 42\u8def\u7ebf\u56fe\u3002 ", "note_en": "The Roberts Space Industries Star Citizen and Squadron 42 roadmaps.", "posttime": "2021-06-25 19:12:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "citizen,space", "title": "Star Citizen Progress Tracker v1.0 ", "title_en": "Star Citizen Progress Tracker v1.0", "transed": 1, "url": "https://robertsspaceindustries.com/roadmap/progress-tracker/teams", "via": "", "real_tags": ["citizen", "space"]}, {"category": "", "categoryclass": "", "imagename": "f2e6d3ea08ee529a5146ee9ecd4db897.jpeg", "infoid": 1068208, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e0a\u4e00\u8bfe\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u79cdLiveView\u7684\u9b54\u529b\uff01\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230LiveView\u5982\u4f55\u771f\u6b63\u6709\u6548\uff0c\u5e76\u4e14\u5728\u7528\u6237\u8fde\u63a5\u65f6\u5e55\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n \u8ba9\u6211\u4eec\u4ece\u4eea\u8868\u677f\u7684\u7b80\u5316\u7248\u672c\u5f00\u59cb\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ea\u6e32\u67d3Coinbase BTC-USD\u4ea4\u6613\u7684\u89c6\u56fe\u3002\n  defmodule poeticoinsweb.cryptodashboard do\u4f7f\u7528poeticoinsweb\uff0c\uff1alive_view alias poeticoins.product def mount\uff08_params\uff0c_session\uff0csocket\uff09do io.inspect\uff08self\uff08\uff09\uff0c\u6807\u7b7e\uff1a\uff06\uff0334; mount\uff06\uff0334;\uff09\u4ea7\u54c1= product.new\uff08\uff06 \uff0334;\u4e50\u961f\uff06\uff0334;\uff0c\uff06\uff0334; btc-usd\uff06\uff0334;\uff09trade = poeticoins.get_last_trade\uff08\u4ea7\u54c1\uff09\uff03if socket.connection\uff1f do\uff03poeticoins.subscribe_to_trades\uff08\u4ea7\u54c1\uff09\uff03\u7ed3\u675fsocket =\u5206\u914d\uff08\u63d2\u5ea7\uff0c\uff1a\u8d38\u6613\uff0c\u8d38\u6613\uff09{\uff1a\u786e\u5b9a\uff0c\u5957\u63a5\u5b57}\u7ed3\u675fdef\u6e32\u67d3\uff08\u5206\u914d\uff09do io.inspect\uff08self\uff08\uff09\uff0c\u6807\u7b7e\uff1a\uff06\uff0334; render\uff06\uff0334; render\uff06\uff0334; render\uff06\uff0334; 34;\uff09\u301cL\uff06\uff0334;\uff06\uff0334;\uff06\uff0334; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4ea7\u54c1\uff06lt; / b\uff06gt ;:\uff06lt;\uff05= @ trade.product.exchange_name\uff05\uff06gt; - \uff06lt;\uff05= @ trade.product.currency_pair\uff05\uff06gt; \uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u5728\uff06lt; / b\uff06gt ;:\uff06lt;\uff05= @ trade.traded_at\uff05\uff06gt;\uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4ef7\u683c\uff06lt; / b\uff06gt ;:\uff06lt;\uff05= @ trade.price\uff05\uff06gt;\uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4f53\u79ef\uff06lt; / b\uff06gt ;:\uff06lt;\uff05= @ trade.volume\uff05\uff06gt;\uff06lt; / p\uff06gt; \uff06\uff0334;\uff06\uff0334;\uff06\uff0334; End Def Handle_Info\uff08{\uff1anew_trade\uff0ctrade}\uff0c\u63d2\u5ea7\uff09do socket =\u5206\u914d\uff08\u63d2\u5ea7\uff0c\uff1a\u8d38\u6613\uff0c\u8d38\u6613\uff09{\uff1anoreply\uff0csocket}\u7ed3\u675f\n \u901a\u8fc7\u8c03\u7528io.inspect\uff08self\uff08\uff09\uff0c\u6807\u7b7e\uff1a\uff06\uff0334; ...\uff06\uff0334;\uff09\u5728inst / 3\u548crender / 1\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4f55\u65f6\u8c03\u7528\u8fd9\u4e9b\u56de\u8c03\u4ee5\u53ca\u8fdb\u7a0bPID\u662f\u4ec0\u4e48\u65f6\u5019\u3002\n \u8ba9\u6211\u4eec\u8fd8\u6682\u65f6\u8bc4\u8bba\u8bd7\u6b4c/ 3\u4e2d\u7684\u8bd7\u6b4cins.subscribe_to_trades\uff08\u4ea7\u54c1\uff09\u884c\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u4e0d\u4f1a\u5f97\u5230\u4efb\u4f55\u65b0\u7684\u8d38\u6613\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u5173\u6ce8\u751f\u547d\u5468\u671f\u7684\u7b2c\u4e00\u90e8\u5206\u3002\n  \u8ba9\u6211\u4eec\u9996\u5148\u5bf9Live\uff06\uff0334\u505a\u4e00\u4e2a\u7b80\u5355\u7684HTTP GET\u8bf7\u6c42; /\uff06\uff0334;\u8def\u7ebf\uff0c\u4f7f\u7528\u5377\u66f2\u7b49\u5de5\u5177\n $ curl -v\uff06\uff0334; http\uff1a// localhost\uff1a4000\uff06\uff0334;\uff06lt;\uff01doctype html\uff06gt;\uff06lt; html lang =\uff06\uff0334; en\uff06\uff0334;\uff06gt;\uff06gt;\uff06gt; \uff06lt; meta charset =\uff06\uff0334; UTF-8\uff06\uff0334;\u5185\u5bb9=\uff06\uff0334; dccycuw3ozesc2isvakutdkghydfakzrakic6mpgvj7yyfxaqutbis48\uff06\uff0334; csrf-param =\uff06\uff0334; _csrf_token\uff06\uff0334;\u65b9\u6cd5 -  param =\uff06\uff0334; _method\uff06\uff0334;\u540d\u79f0=\uff06\uff0334; CSRF-token\uff06\uff0334;\uff06gt; \uff06lt; script defer phx-track-static\u7c7b\u578b=\uff06\uff0334; text / javascript\uff06\uff0334; src =\uff06\uff0334; /js/app.js& n34;\uff06gt;\uff06lt; / script\uff06gt;\uff06lt; / head\uff06gt;\uff06lt;\u4e3b\u4f53\uff06gt; \uff06lt; div data-phx-main =\uff06\uff0334;\u771f\uff06\uff0334; data-phx-session =\uff06\uff0334; sfmynty ...\uff06\uff0334; data-phx-static =\uff06\uff0334; sfmynty ...\uff06\uff0334; data-phx-view =\uff06\uff0334; CryptodashboardLive\uff06\uff0334; id =\uff06\uff0334; phx-flyt1v20d4jijqbg\uff06\uff0334;\uff06gt; \uff06lt;\u4e3b\u8981\u89d2\u8272=\uff06\uff0334;\u4e3b\u8981\uff06\uff0334; Class =\uff06\uff0334;\u5bb9\u5668\uff06\uff0334;\uff06gt; \uff06lt; p class =\uff06\uff0334;\u8b66\u62a5\u63d0\u9192\u4fe1\u606f\uff06\uff0334;\u89d2\u8272=\uff06\uff0334;\u8b66\u62a5\uff06\uff0334; PHX\u70b9\u51fb=\uff06\uff0334; LV\uff1a\u6e05\u9664\u95ea\u5b58\uff06\uff0334; phx-value-key =\uff06\uff0334;\u4fe1\u606f\uff06\uff0334;\uff06gt;\uff06lt; / p\uff06gt; \uff06lt; p class =\uff06\uff0334;\u8b66\u62a5\u8b66\u62a5 - \u5371\u9669\uff06\uff0334;\u89d2\u8272=\uff06\uff0334;\u8b66\u62a5\uff06\uff0334; PHX\u70b9\u51fb=\uff06\uff0334; LV\uff1a\u6e05\u9664\u95ea\u5b58\uff06\uff0334; phx-value-key =\uff06\uff0334;\u9519\u8bef\uff06\uff0334;\uff06gt;\uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4ea7\u54c1\uff06lt; / b\uff06gt; coinbase  -  btc-usd\uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u5728\uff06lt; / b\uff06gt; 18\uff1a05\uff1a18.124448z\uff06lt; / b\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4ef7\u683c\uff06lt; / b\uff06gt ;:29315.3\uff06lt; / p\uff06gt; \uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4f53\u79ef\uff06lt; / b\uff06gt; 0.00673002\uff06lt; / p\uff06gt; \uff06lt; / main\uff06gt; \uff06lt; / div\uff06gt;\uff06lt; / body\uff06gt;\uff06lt; / html\uff06gt; \n\u6211\u4eec\u7acb\u5373\u6ce8\u610f\u5230\u5e94\u7528\u7a0b\u5e8f\u7b54\u6848\u6211\u4eec\u7684HTTP\u83b7\u53d6\u8bf7\u6c42\u4e0e\u5b8c\u5168\u5448\u73b0\u7684\u9875\u9762\uff01\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u652f\u6301\u4e0d\u4e00\u5b9a\u8fd0\u884cJavaScript\u7684\u5ba2\u6237\u7aef\uff0c\u8fd9\u4f7fLiveView\u4e5f\u975e\u5e38\u9002\u5408SEO\u3002\n  \u6211\u4eec\u8fdb\u884c\u4e86\u4e00\u4e2a\u6b63\u5e38\u7684HTTP GET\u8bf7\u6c42\uff0c\u8c03\u7528\u6302\u8f7d/ 3\u521d\u59cb\u5316\u8981\u5448\u73b0\u7684\u6570\u636e\uff0c\u7136\u540e\u5448\u73b0/ 1\u8fd4\u56de\u5448\u73b0\u7684\u5185\u5bb9\u3002\n  [info] get / [debug]\u4f7f\u7528phoenix.liveview.plug.elixir.poeticoinsweb.cryptodashlower / 2\u53c2\u6570\uff1a\uff05{}\u7ba1\u9053\uff1a[\uff1a\u6d4f\u89c8\u5668]\u6302\u8f7d\uff1a\uff03pID\uff06lt; 0.462.0\uff06gt;\u6e32\u67d3\uff1a\uff03pID\uff06lt; 0.462\u3002 0\uff06gt; [info]\u572840ms\u4e2d\u53d1\u9001200\n  \u901a\u8fc7\u6253\u5f00http\uff1a// localhost\uff1a4000\u9875\u4f7f\u7528\u6d4f\u89c8\u5668\uff0c\u6211\u4eec\u770b\u5230inst / 3\u548crender / 1\u79f0\u4e3a\u4e24\u6b21\u3002\n \u6302\u8f7d\uff1a\uff03pID\uff06lt; 0.599.0\uff06gt;\u6e32\u67d3\uff1a\uff03pID\uff06lt; 0.599.0\uff06gt; [info]\u57282ms [info]\u4e2d\u53d1\u9001\u4e86200\u4e2a\u8fde\u63a5\u5230Phoenix.liveview.socket\u572873\u03bcs\u4f20\u8f93\uff1awebsocket serializer\uff1aphoenix.socket.v2.jsonserializer\u53c2\u6570\uff1a\uff05{\uff06\uff0334; _csrf_token\uff06\uff0334; =\uff06gt; \uff06\uff0334; gqclprujpykadko2agcbkdmpssrun2ysubsgs1lb-gzixvqfulyv5npw\uff06\uff0334 ;,\uff06\uff0334; _mounts\uff06\uff0334; =\uff06gt; \uff06\uff0334; 0\uff06\uff0334;\uff06\uff0334; _track_static\uff06\uff0334; =\uff06gt; \uff05{\uff06\uff0334; 0\uff06\uff0334; =\uff06gt; \uff06\uff0334; http\uff1a// localhost\uff1a4000 / css / app.css\uff06\uff0334 ;,\uff06\uff0334; 1\uff06\uff0334; =\uff06gt; \uff06\uff0334; http\uff1a// localhost\uff1a4000 / js / app.js\uff06\uff0334;}\uff0c\uff06\uff0334; vsn\uff06\uff0334; =\uff06gt; \uff06\uff0334; 2.0.0\uff06\uff0334;}\u5b89\u88c5\uff1a\uff03pID\uff06lt; 0.612.0\uff06gt;\u6e32\u67d3\uff1a\uff03pid\uff06lt; 0.612.0\uff06gt;\n \u7b2c\u4e00\u6b21\u662f\u56de\u7b54HTTP GET\u8bf7\u6c42\uff0c\u4f7f\u7528\u6211\u4eec\u5728\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4e2d\u770b\u5230\u7684\u5b8c\u5168\u5448\u73b0\u7684HTML\u9875\u9762\u3002\u5f53\u6d4f\u89c8\u5668\u63a5\u6536\u5230HTML\u5185\u5bb9\u65f6\uff0c\u5b83\u4f1a\u52a0\u8f7dApp.js\u5e94\u7528\u7a0b\u5e8f\u7684JS\u3002\n //app.jsimport {socket} from\uff06\uff0334;\u51e4\u51f0\uff06\uff0334;\u4ece\uff06\uff0334\u5bfc\u5165{livesoction} from\uff06\uff0334; phoenix_live_view\uff06\uff0334; let csrftoken = document.querySelector\uff08\uff06\uff0334; meta [name =\uff06\uff0339; csrf -Token\uff06\uff0339;]\uff06\uff0334;\uff09\u3002getAttribute\uff08\uff06\uff0334;\u5185\u5bb9\uff06\uff0334;\uff09\u8ba9livesocket =\u65b0\u7684livesocket\uff08\uff06\uff0334; / live\uff06\uff0334; ocket\uff0c{params\uff1a{_csrf_token\uff1acsrftoken}} \uff09// connect\u5982\u679cpagelivesocket.connect\uff08\uff09\u4e0a\u6709\u4efb\u4f55LiveViews\uff08\uff09 \n\u8fd0\u884c\u6b64\u811a\u672c\uff0c\u6d4f\u89c8\u5668\u518d\u6b21\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u6b64\u65f6\u6253\u5f00WebSocket\u8fde\u63a5\uff0c\u4f20\u9012CSRF-\u4ee4\u724c\uff0c\u5728\uff06lt; meta\uff06gt\u4e2d\u5448\u73b0\u3002\u6807\u8bb0\u5728\u6807\u9898\u4e2d\u3002\u8fde\u63a5\u540e\uff0c\u670d\u52a1\u5668\u542f\u52a8\u72b6\u6001LiveView\u8fdb\u7a0b\u5e76\u547c\u53eb\u7b2c\u4e8c\u6b21\u65f6\u95f4\u6302\u8f7d/ 3\u5e76\u6e32\u67d3/ 1\uff0c\u901a\u8fc7WebSocket\u8fde\u63a5\u6309\u4e0b\u65b0\u5448\u73b0\u9875\u9762\u3002\n  \u8fd9\u4e00\u65b0\u7684\u6709\u72b6\u6001LiveView\u6d41\u7a0b\u53ea\u8981\u7528\u6237\u4fdd\u6301\u8fde\u63a5\uff0c\u5c06\u72b6\u6001\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\uff0c\u4ece\u6d4f\u89c8\u5668\u4e2d\u4fa6\u542c\u4e8b\u4ef6\u5e76\u5411\u6d4f\u89c8\u5668\u53d1\u9001\u6e32\u67d3\u66f4\u6539\uff0c\u6bcf\u6b21\u66f4\u65b0\u5957\u63a5\u5b57\u65f6\u90fd\u4f1a\u3002\n \u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u901a\u8fc7WebSocket\u8fde\u63a5\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u68c0\u67e5\u5668\u6765\u67e5\u770b\u4ea4\u6362\u6d88\u606f\u3002\n \u5728\u201c\u68c0\u67e5\u5458\u201d\u4e2d\uff0c\u5728\u201c\u7f51\u7edc\u201d\u9009\u9879\u5361\u4e0b\uff0c\u5237\u65b0\u9875\u9762\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u4e00\u4e2a\u8bf7\u6c42\u5217\u8868\n  \u9996\u5148\uff0c\u6211\u4eec\u5c06Get\u8bf7\u6c42\u4e0e\u670d\u52a1\u5668\u54cd\u5e94\u4e2d\u7684LocalHost\u548c\u5b8c\u6574\u7684HTML\u770b\u3002\n \u7136\u540e\uff0c\u6d4f\u89c8\u5668\u52a0\u8f7dApp.js JavaScript\u5e76\u901a\u8fc7WebSocket\u8fde\u63a5\u5230LiveView\u3002\u5efa\u7acbWebSocket\u8fde\u63a5\u540e\uff0c\u6d4f\u89c8\u5668\u7acb\u5373\u53d1\u9001PHX_JOIN\u6d88\u606f\u3002\n  LiveView\u4f7f\u7528\u5305\u542b\u5448\u73b0\u89c6\u56fe\u7684PHX_REPLY\u6d88\u606f\u56de\u590d\u3002\u5728\u6b64\u6d88\u606f\u4e2d\uff0c\u6211\u4eec\u627e\u4e0d\u5230\u7b80\u5355\u7684\u89c6\u56fe\u7684HTML\uff0c\u800c\u662f\u6211\u4eec\u627e\u5230\u4e86\u52a8\u6001\u503c\u548c\u6a21\u677f\u7684\u9759\u6001\u90e8\u5206\u3002\u9759\u6001\u90e8\u4ef6\u4fdd\u6301\u5728\u6d4f\u89c8\u5668\u7684\u5185\u5b58\u4e2d\uff0c\u5e76\u4e14\u53ea\u5c06\u52a8\u6001\u66f4\u6539\u4eceLiveView\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002 \n[...\uff06\uff0334; phx_reply\uff06\uff0334;\uff0c{\uff06\uff0334;\u54cd\u5e94\uff06\uff0334 ;: ... {\uff06\uff0334; 0\uff06\uff0334 ;:\uff06\uff0334;\u51b0\u7eb3\u548c\uff0334 ;,\uff06\uff0334; 1\uff06 \uff0334 ;:\uff06\uff0334; BTC-USD\uff06\uff0334 ;,\uff06\uff0334; 2\uff06\uff0334 ;:\uff06\uff0334; 2021-01-01 21\uff1a48\uff1a39.473797z\uff06\uff0334 ;,\uff06\uff0334; 3\uff06\uff0334 ;\uff1a\uff06\uff0334; 29265.33\uff06\uff0334 ;,\uff0334; 4\uff06\uff0334 ;:\uff06\uff0334; 0.35729453\uff06\uff0334 ;,\uff06\uff0334; s\uff06\uff0334 ;: [34;\uff06lt; p\uff06lt; p\uff06lt; ; B\uff06gt;\u4ea7\u54c1\uff06lt; / b\uff06gt;\uff1a\\ n\uff06\uff0334 ;,\uff06\uff0334; -  \\ n\uff06\uff0334;\uff06\uff0334; \\ n\uff06lt;\uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\uff06lt; / b\uff06gt ;:\uff06\uff0334;\uff0c\uff06\uff0334;\uff06lt; / p\uff06\uff0334;\uff06\uff0334;\uff06\uff0334;\uff06lt; / p\uff06\uff0334;\uff06lt; / p\uff06\uff0334; ; p\uff06gt;\uff06lt; b\uff06gt;\u4ef7\u683c\uff06lt; / b\uff06gt ;:\uff06\uff0334;\uff06\uff0334;\uff06lt; / p>\uff06lt; b\uff06gt;\u4f53\u79ef\uff06lt; / b\uff06gt ;:\uff06\uff0334 ;,\uff06\uff0334 ;\uff06lt; / p\uff06gt; \\ n\uff06\uff0334; ]}}]\n \u8981\u6b63\u786e\u5448\u73b0\u6b64\u89c6\u56fe\uff0c\u8bf7\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u7684LiveView JS\u4ee3\u7801\u53ea\u9700\u7528\u9759\u6001\u90e8\u5206\u5185\u63d2\u52a8\u6001\u503c\uff1a\n \uff06\uff0334;\uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\u4ea7\u54c1\uff06lt; / b\uff06gt;\uff1a\\ n\uff06\uff0334; +\uff06\uff0334;\u6597\u9e21\u961f\u548c\uff0334; +\uff06\uff0334; -  \\ n\uff06\uff0334; +\uff06\uff0334; BTC-USD\uff06\uff0334; +\uff06\uff0334; \\ n\uff06lt; / p\uff06gt;\uff06lt; p\uff06gt;\uff06lt; b\uff06gt;\uff06lt; / b\uff06gt ;:\uff06\uff0334; +\uff06\uff0334; 2021-01-01 21\uff1a48\uff1a39.473797Z\uff06\uff0334; + ......\n  \u8ba9\u6211\u4eec\u5220\u9664Mount / 3\u4e2d\u7684\u6ce8\u91ca\uff0c\u4ee5\u4fbfLiveView Process\u8ba2\u9605\u83b7\u53d6\u65b0\u4ea4\u6613\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5957\u63a5\u5b57\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u66f4\u65b0\u4e86\u3002\n def mount\uff08_params\uff0c_session\uff0csocket\uff09do io.inspect\uff08self\uff08\uff09\uff0c\u6807\u7b7e\uff1a\uff06\uff0334; mount\uff06\uff0334; support\uff06\uff0334;\uff09\u4ea7\u54c1= product.new\uff08\uff06\uff0334; coinbase\uff06\uff0334;\u548c\uff0334; btc- USD\uff06\uff0334;\uff09Trade = poeticoins.get_last_trade\uff08\u4ea7\u54c1\uff09\u5982\u679csocket.connected\uff1f do poeticoins.subscribe_to_trades\uff08\u4ea7\u54c1\uff09\u7ed3\u675fsocket =\u5206\u914d\uff08\u63d2\u5ea7\uff0c\uff1a\u8d38\u6613\uff0c\u8d38\u6613\uff09{\uff1a\u786e\u5b9a\uff0c\u5957\u63a5\u5b57}\u7ed3\u675f\n \u6211\u4eec\u73b0\u5728\u62e5\u6709\u6240\u6709\u5143\u7d20\u6765\u7406\u89e3\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528if socket.Connection\uff1f\u72b6\u51b5\u3002 socket.Connected\uff1f\u5728\u521d\u59cbHTTP GET\u8bf7\u6c42\u671f\u95f4\u662f\u5047\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba2\u9605\u83b7\u53d6\u65b0\u4ea4\u6613\uff0c\u56e0\u4e3a\u8be5\u8fc7\u7a0b\u5e76\u4e0d\u610f\u5473\u7740\u5728\u54cd\u5e94\u4e4b\u540e\u751f\u6d3b;\u6211\u4eec\u53ea\u60f3\u7528\u6700\u8fd1\u7684\u4ea4\u6613\u6e32\u67d3\u89c6\u56fe\u5e76\u5173\u95ed\u8fde\u63a5\u3002\n \u5f53\u6d4f\u89c8\u5668\u901a\u8fc7WebSocket\u8fde\u63a5\u5230\u6709\u72b6\u6001LiveView\uff0cSocket.Connected\uff1f\u662f\u771f\u7684\uff0c\u73b0\u5728\u662f\u65f6\u5019\u4e3aPubsub\u4e3b\u9898\u8ba2\u9605LiveView\u8fdb\u7a0b\u3002 \ndef handle_info\uff08{\uff1anew_trade\uff0ctrade}\uff0csocket\uff09do io.inspect\uff08self\uff08\uff09\uff0c\u6807\u7b7e\uff1a\uff06\uff0334;\u65b0\u8d38\u6613\uff06\uff0334;\uff09socket =\u5206\u914d\uff08\u63d2\u5ea7\uff0c\uff1a\u8d38\u6613\uff0c\u8d38\u6613\uff09{\uff1anoreply\uff0csocket}\u7ed3\u5c3e\n \u6bcf\u6b21\u8fdb\u7a0b\u63a5\u6536\u5230{\uff1anew_trade\uff0ctrade}\u6d88\u606f\u65f6\u8c03\u7528handle_info / 2\u3002\u6211\u4eec\u5728\u5957\u63a5\u5b57\u4e2d\u6253\u5370PID\u5e76\u5206\u914d/ 3\uff1a\u4ea4\u6613\u3002\u8be5\u89c6\u56fe\u91cd\u65b0\u5448\u73b0\uff0c\u8c03\u7528Render / 1\uff0c\u5e76\u5c06\u66f4\u6539\u63a8\u9001\u5230\u6d4f\u89c8\u5668\u3002\n \u901a\u8fc7\u5237\u65b0\u6d4f\u89c8\u5668\u4e0a\u7684\u9875\u9762\uff0c\u6211\u4eec\u770b\u5230\uff0c\u6b63\u5982\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u6bcf\u6b21\u90fd\u6709\u65b0\u8d38\u6613\u65f6\uff0c\u89c6\u56fe\u73b0\u5728\u5c31\u6b63\u786e\u66f4\u65b0\u3002\u4f7f\u7528\u6d4f\u89c8\u5668\u68c0\u67e5\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684LiveView\u8fdb\u7a0b\u53d1\u9001\u7684\u6d88\u606f\u3002\n \u5728\u521d\u59cbPHX_JOIN\u548cPHX_REPLY\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0DIFF\u6d88\u606f\uff0c\u6bcf\u6b21\u6536\u5230\u65b0\u4ea4\u6613\u65f6\u4ece\u670d\u52a1\u5668\u53d1\u9001\u7684\u66f4\u6539\u3002\n  LiveView\u80fd\u591f\u8ddf\u8e2a\u66f4\u6539\uff0c\u5e76\u4ec5\u5c06\u66f4\u6539\u7684\u503c\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002\n \u8c03\u67e5\u5176\u4e2d\u4e00\u4e2a\u5dee\u5f02\u6d88\u606f\uff0c\u6211\u4eec\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u9759\u6001\u90e8\u5206\uff0c\u53ea\u6709\u5957\u63a5\u5b57\u4e2d\u66f4\u6539\u7684\u52a8\u6001\u503c\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6709\u6548\u8f7d\u8377\u662f\u8d85\u7ea7\u7d27\u51d1\u7684\uff1a\u6211\u4eec\u53ea\u9700\u5177\u6709Trade.TraD_AT\uff08Diff\u6d88\u606f\u4e2d\u7684\u4f4d\u7f6e2\uff09\uff0cTrade.price\uff08\u4f4d\u7f6e3\uff09\u548c\u4ea4\u6613.Volume\uff08\u4f4d\u7f6e\u7f16\u53f74\uff09\u3002\n \u6bcf\u4e2a\u52a8\u6001\u90e8\u5206\u90fd\u6709\u81ea\u5df1\u7684\u4f4d\u7f6e\u7f16\u53f7\uff0cLiveView\u4f7f\u7528\u6b64\u804c\u4f4d\u4e86\u89e3DOM\u4e2d\u9700\u8981\u66f4\u65b0\u54ea\u4e2a\u5143\u7d20\u3002\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u7684js\u4ee3\u7801\u4f7f\u7528\u540d\u4e3amphor\u7684\u5e93\u5e94\u7528\u8fd9\u4e9b\u66f4\u6539\u3002 \n\u5728\u7ec8\u7aef\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u6bcf\u4e2a\u65b0\u7684\u4ea4\u6613\u7531Supper_Info / 2\u5904\u7406\uff0c\u8be5\u5957\u63a5\u5b57\u66f4\u65b0\u5957\u63a5\u5b57\uff0c\u7136\u540e\u8c03\u7528Retains / 1\u4ee5\u91cd\u65b0\u6e32\u67d3\u89c6\u56fe\u5e76\u5c06\u66f4\u6539\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002\n  \u6211\u4eec\u8fd8\u770b\u5230\uff0c\u670d\u52a1\u6211\u4eec\u6d4f\u89c8\u5668\u7684LiveView\u8fdb\u7a0b\u59cb\u7ec8\u76f8\u540c\uff08\u6bcf\u4e2a\u8fde\u63a5\u7528\u6237\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u5355\u4e00\u7684LiveView\u8fdb\u7a0b\uff0c\u5b83\u5728\u5185\u5b58\u4e2d\u4fdd\u6301\u72b6\u6001\u5e76\u8ddf\u8e2a\u66f4\u6539\uff0c\u53ea\u8981\u6211\u4eec\u4fdd\u6301\u8fde\u63a5\u3002\n   \u6211\u4eec\u7684\u6d4f\u89c8\u5668\u6700\u521d\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u4f7f\u4e00\u4e2a\u7b80\u5355\u7684HTTP\u83b7\u53d6\u5230Live Route\u3002\u670d\u52a1\u5668\u8c03\u7528inst / 3\u5e76\u6e32\u67d3/ 1\u56de\u8c03\uff0c\u4ee5\u521d\u59cb\u5316\u6570\u636e\u5e76\u4f7f\u7528\u5b8c\u5168\u5448\u73b0\u7684HTML\u9875\u9762\u7b54\u6848\u3002\u6d4f\u89c8\u5668\u5728App.js\u4e2d\u52a0\u8f7dHTML\u548c\u5e94\u7528\u7a0b\u5e8fJavaScript\uff0c\u5b83\u901a\u8fc7WebSocket\u8fde\u63a5\u5230\u670d\u52a1\u5668\u3002\u4e00\u65e6\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u72b6\u6001\u7684LiveView\u8fdb\u7a0b\uff0c\u53ea\u8981\u6211\u4eec\u8fde\u63a5\u5c31\u4f1a\u4fdd\u6301\u6d3b\u529b\u3002\u5728Mount / 3\u4e2dLiveView\u6d41\u7a0b\u8ba2\u9605\u4ee5\u83b7\u53d6\u4ea4\u6613\u6d88\u606f\u3002\n  \u6d4f\u89c8\u5668\u4f7f\u7528PHX_REPLY\u6d88\u606f\u53d1\u9001PHX_JOIN\u6d88\u606f\u548cLIVEVIEW\u7b54\u6848\uff0c\u5176\u4e2d\u6709\u5448\u73b0\u89c6\u56fe\uff0c\u5177\u6709\u52a8\u6001\u548c\u9759\u6001\u90e8\u5206\u3002\u6bcf\u4e2a\u52a8\u6001\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u3002\n  \u6bcf\u6b21LiveView\u8fdb\u7a0b\u4ecePubsub\u63a5\u6536\u65b0\u7684\u4ea4\u6613\u65f6\uff0c\u5b83\u5c06\u5b83\u5206\u914d/ 3\u5957\u63a5\u5b57\u548cLiveView\u7684\u65b0\u4ea4\u6613\u91cd\u65b0\u6e32\u67d3\u547c\u53eb\u6e32\u67d3/ 1\u3002\u53ea\u6709\u968f\u7740Diff\u6d88\u606f\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u7684\u52a8\u6001\u503c\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6709\u6548\u8f7d\u8377\u4fdd\u6301\u8d85\u7ea7\u7d27\u51d1\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684LiveView JS\u4ee3\u7801\u5c06\u91c7\u7528\u8fd9\u4e9b\u65b0\u503c\u5e76\u4f7f\u7528\u5f62\u4f53\u5e93\u4fee\u8865DOM\u3002\n  \u6b64\u89c6\u56fe\u662f\u88ab\u52a8\u7684\uff0c\u5b83\u53ea\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u65b0\u503c\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u7528\u6237\u4ea4\u4e92\u3002\u5728\u5373\u5c06\u5230\u6765\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u4f7f\u7528\u6309\u94ae\uff0c\u7ed1\u5b9a\u548c\u8868\u5355\u5c06\u4e8b\u4ef6\u4ece\u6d4f\u89c8\u5668\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\n  \u5305\u88c5\u6709\u5c0f\u65f6\u7684\u6df1\u5165\u6559\u7a0b\uff0c\u63d0\u793a\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u3002\u4e86\u89e3\u5982\u4f55\u6784\u5efa\u771f\u6b63\u7684\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\uff0c\u4eceElixir\u548cPhoenix LiveView\u4e2d\u83b7\u5f97\u6700\u5927\u7684\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\uff01 ", "note_en": "In the  previous lesson we got a taste of the LiveView\u2019s magic! In this lesson we are going to see how LiveView really works and what happens behind the scenes when a user connects.\n Let\u2019s start with a\u00a0 simplified version of our dashboard, a view that renders only the Coinbase BTC-USD trades.\n  defmodule PoeticoinsWeb.CryptoDashboardLive do use PoeticoinsWeb, :live_view alias Poeticoins.Product def mount(_params, _session, socket) do IO.inspect(self(), label: &#34;MOUNT&#34;) product = Product.new(&#34;coinbase&#34;, &#34;BTC-USD&#34;) trade = Poeticoins.get_last_trade(product) # if socket.connected? do # Poeticoins.subscribe_to_trades(product) # end socket = assign(socket, :trade, trade) {:ok, socket} end def render(assigns) do IO.inspect(self(), label: &#34;RENDER&#34;) ~L&#34;&#34;&#34; &lt;p&gt;&lt;b&gt;Product&lt;/b&gt;: &lt;%= @trade.product.exchange_name %&gt; - &lt;%= @trade.product.currency_pair %&gt; &lt;/p&gt; &lt;p&gt;&lt;b&gt;Traded at&lt;/b&gt;: &lt;%= @trade.traded_at %&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Price&lt;/b&gt;: &lt;%= @trade.price %&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Volume&lt;/b&gt;: &lt;%= @trade.volume %&gt;&lt;/p&gt; &#34;&#34;&#34; end def handle_info({:new_trade, trade}, socket) do socket = assign(socket, :trade, trade) {:noreply, socket} endend\n By calling\u00a0 IO.inspect(self(), label: &#34;...&#34;)\u00a0in both\u00a0 mount/3\u00a0and\u00a0 render/1\u00a0we see when these callbacks are invoked and what is the process\u00a0 PID.\n Let\u2019s also temporarily comment the the\u00a0 Poeticoins.subscribe_to_trades(product)\u00a0line in\u00a0 mount/3, in this way we\u2019ll not get any new trade message, so we can better focus just on the first part of the life-cycle.\n  Let\u2019s start by doing a simple HTTP GET request to the\u00a0  live &#34;/&#34;\u00a0route, with a tool like\u00a0 curl\n $ curl -v &#34;http://localhost:4000&#34;&lt;!DOCTYPE html&gt;&lt;html lang=&#34;en&#34;&gt;&lt;head&gt; &lt;meta charset=&#34;UTF-8&#34; content=&#34;DCcYcUw3OzEsC2ISVAkUTDkgHydfAkZrakIC6mpGVj7YyFXaQUTbis48&#34; csrf-param=&#34;_csrf_token&#34; method-param=&#34;_method&#34; name=&#34;csrf-token&#34;&gt; &lt;script defer phx-track-static type=&#34;text/javascript&#34; src=&#34;/js/app.js&#34;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div data-phx-main=&#34;true&#34; data-phx-session=&#34;SFMyNTY...&#34; data-phx-static=&#34;SFMyNTY...&#34; data-phx-view=&#34;CryptoDashboardLive&#34; id=&#34;phx-FlYt1v20d4jiJQBG&#34;&gt; &lt;main role=&#34;main&#34; class=&#34;container&#34;&gt; &lt;p class=&#34;alert alert-info&#34; role=&#34;alert&#34; phx-click=&#34;lv:clear-flash&#34; phx-value-key=&#34;info&#34;&gt;&lt;/p&gt; &lt;p class=&#34;alert alert-danger&#34; role=&#34;alert&#34; phx-click=&#34;lv:clear-flash&#34; phx-value-key=&#34;error&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Product&lt;/b&gt;: coinbase - BTC-USD &lt;/p&gt; &lt;p&gt;&lt;b&gt;Traded at&lt;/b&gt;: 2021-01-01 18:05:18.124448Z&lt;/p&gt; &lt;p&gt;&lt;b&gt;Price&lt;/b&gt;: 29315.3&lt;/p&gt; &lt;p&gt;&lt;b&gt;Volume&lt;/b&gt;: 0.00673002&lt;/p&gt; &lt;/main&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n We immediately notice that the app answers to our HTTP GET request with a fully rendered page! This means that we can support clients that do not necessarily run JavaScript, which makes LiveView also great for SEO.\n  We made a normal HTTP GET request,\u00a0 mount/3\u00a0is called to initialize the data to be rendered, then\u00a0 render/1\u00a0returns the rendered content.\n  [info] GET /[debug] Processing with Phoenix.LiveView.Plug.Elixir.PoeticoinsWeb.CryptoDashboardLive/2 Parameters: %{} Pipelines: [:browser]MOUNT: #PID&lt;0.462.0&gt;RENDER: #PID&lt;0.462.0&gt;[info] Sent 200 in 40ms\n  By opening the\u00a0 http://localhost:4000\u00a0page with a browser, we see that\u00a0 mount/3\u00a0and\u00a0 render/1\u00a0are called two times.\n MOUNT: #PID&lt;0.599.0&gt;RENDER: #PID&lt;0.599.0&gt;[info] Sent 200 in 2ms[info] CONNECTED TO Phoenix.LiveView.Socket in 73\u00b5s Transport: :websocket Serializer: Phoenix.Socket.V2.JSONSerializer Parameters: %{&#34;_csrf_token&#34; =&gt; &#34;GQclPRUJPykADko2AgcBKDMPSSRUN2YSUbsGs1lb-gzixvqfUlyv5nPw&#34;, &#34;_mounts&#34; =&gt; &#34;0&#34;, &#34;_track_static&#34; =&gt; %{&#34;0&#34; =&gt; &#34;http://localhost:4000/css/app.css&#34;, &#34;1&#34; =&gt; &#34;http://localhost:4000/js/app.js&#34;}, &#34;vsn&#34; =&gt; &#34;2.0.0&#34;}MOUNT: #PID&lt;0.612.0&gt;RENDER: #PID&lt;0.612.0&gt;\n The first time is to answer to the HTTP GET request, with the fully rendered html page that we saw in the previous example. When the browser receives the HTML content, it loads the\u00a0  app.js\u00a0application\u2019s JS.\n //app.jsimport {Socket} from &#34;phoenix&#34;import {LiveSocket} from &#34;phoenix_live_view&#34;let csrfToken = document.querySelector(&#34;meta[name=&#39;csrf-token&#39;]&#34;).getAttribute(&#34;content&#34;)let liveSocket = new LiveSocket(&#34;/live&#34;, Socket, {params: {_csrf_token: csrfToken}})// connect if there are any LiveViews on the pageliveSocket.connect()\n Running this script, the browser connects again to the server, this time opening a websocket connection, passing the\u00a0 csrf-token, rendered in the\u00a0 &lt;meta&gt;\u00a0tag in the header. Once connected, the server starts a stateful LiveView process and calls for the second time\u00a0 mount/3\u00a0and\u00a0 render/1, pushing the new rendered page via the websocket connection.\n  This new stateful LiveView process runs as long as the user stays connected, keeping the state in memory, listening to events from the browser and sending rendered changes to the browser, every time we update the\u00a0 socket.assigns\u00a0values.\n To better understand what happens over the WebSocket connection, we can use the browser inspector to see the exchanged messages.\n In the inspector, going under the\u00a0 Network\u00a0tab and refreshing the page, we see a list of requests\n  First we see the GET request to localhost and the full html in the server response.\n Then, the browser loads the\u00a0 app.js\u00a0javascript and connects to LiveView via WebSocket. Once the websocket connection is established, the browser immediately sends a\u00a0 phx_join\u00a0message.\n  LiveView replies with a\u00a0 phx_reply\u00a0message containing the rendered view. In this message we don\u2019t find the simple view\u2019s html, instead we find the dynamic values and the static parts of our template. The static parts are kept in the browser\u2019s memory and only the dynamic changes are sent to the browser from LiveView.\n [ ... &#34;phx_reply&#34;, {&#34;response&#34;: ... { &#34;0&#34;: &#34;coinbase&#34;, &#34;1&#34;: &#34;BTC-USD&#34;, &#34;2&#34;: &#34;2021-01-01 21:48:39.473797Z&#34;, &#34;3&#34;: &#34;29265.33&#34;, &#34;4&#34;: &#34;0.35729453&#34;, &#34;s&#34;: [ &#34;&lt;p&gt;&lt;b&gt;Product&lt;/b&gt;:\\n &#34;, &#34; -\\n &#34;, &#34;\\n&lt;/p&gt;\\n&lt;p&gt;&lt;b&gt;Traded at&lt;/b&gt;: &#34;, &#34;&lt;/p&gt;\\n&lt;p&gt;&lt;b&gt;Price&lt;/b&gt;: &#34;, &#34;&lt;/p&gt;\\n&lt;p&gt;&lt;b&gt;Volume&lt;/b&gt;: &#34;, &#34;&lt;/p&gt;\\n&#34; ] } }]\n To properly render this view, the LiveView JS code running on the browser, simply interpolates the dynamic values with the static parts:\n &#34;&lt;p&gt;&lt;b&gt;Product&lt;/b&gt;:\\n &#34; + &#34;coinbase&#34; + &#34; -\\n &#34; +&#34;BTC-USD&#34; + &#34;\\n&lt;/p&gt;\\n&lt;p&gt;&lt;b&gt;Traded at&lt;/b&gt;: &#34; + &#34;2021-01-01 21:48:39.473797Z&#34; + ...\n  Let\u2019s remove the comments in\u00a0 mount/3, so that the LiveView process subscribes to get new trades and we can see what happens when\u00a0 socket.assigns\u00a0is updated.\n def mount(_params, _session, socket) do IO.inspect(self(), label: &#34;MOUNT&#34;) product = Product.new(&#34;coinbase&#34;, &#34;BTC-USD&#34;) trade = Poeticoins.get_last_trade(product) if socket.connected? do Poeticoins.subscribe_to_trades(product) end socket = assign(socket, :trade, trade) {:ok, socket}end\n We now have all the elements to understand why we used the\u00a0 if socket.connected?\u00a0condition.\u00a0  socket.connected?\u00a0is\u00a0 false\u00a0during the initial HTTP GET request, in this case we don\u2019t want to subscribe to get new trades because the process is not meant to live after the response; we just want to render the view with the most recent trade and close the connection.\n When the browser connects, through a WebSocket, to a stateful LiveView,\u00a0 socket.connected?\u00a0is\u00a0 true\u00a0and it\u2019s now time to subscribe the LiveView process to the PubSub topic.\n def handle_info({:new_trade, trade}, socket) do IO.inspect(self(), label: &#34;NEW TRADE&#34;) socket = assign(socket, :trade, trade) {:noreply, socket}end\n handle_info/2\u00a0is called every time the process receives a\u00a0 {:new_trade, trade}\u00a0message. We print the PID and\u00a0 assign/3\u00a0the\u00a0 :trade\u00a0in the\u00a0 socket. The view gets re-rendered, calling\u00a0 render/1, and the changes are pushed to the browser.\n By refreshing the page on the browser we see that, as expected, the view is now correctly updated every time there is a new trade. With the browser inspector we can see the messages sent by LiveView process running on the server.\n After the initial\u00a0 phx_join\u00a0and\u00a0 phx_reply, we find\u00a0 diff\u00a0messages, which are the changes sent from the server every time a new trade is received.\n  LiveView is able to track the changes and send only the changed values to the browser.\n Looking into one of the diff messages, we don\u2019t see any static part, only the dynamic values that changed in\u00a0 socket.assigns. In this way the payload is super compact: we just have the\u00a0 trade.traded_at\u00a0(position number\u00a0 2\u00a0in the\u00a0 diff\u00a0message), the\u00a0 trade.price\u00a0(position number\u00a0 3) and\u00a0 trade.volume\u00a0(position number\u00a0 4).\n Each dynamic part has it\u2019s own position number and LiveView uses this positions to know which element needs to be updated in the DOM. The JS code running on the browser applies these changes using a library called\u00a0 Morphdom.\n In the terminal we see that each new trade is handled by\u00a0 handle_info/2\u00a0which updates the socket, then\u00a0 render/1\u00a0is called to re-render the view and send the changes to the browser.\n  We also see that the LiveView process, which serves our browser, is always the same (one process for each connected user). It\u2019s a single stateful LiveView process, that keeps its state in memory and tracks the changes, as long as we stay connected.\n   Our browser initially connects to the server making a simple HTTP GET request to the\u00a0 live\u00a0route. The server calls\u00a0 mount/3\u00a0and\u00a0 render/1\u00a0callbacks to initialize the data and answer with a fully rendered HTML page. The browser loads the html and the application javascript in\u00a0 app.js, and it connects via WebSocket to the server. Once connected, the server spawns a stateful LiveView process which stays alive as long as we are connected. In\u00a0 mount/3\u00a0the LiveView process subscribes to get trade messages.\n  The browser sends a\u00a0 phx_join\u00a0message and LiveView answers with a\u00a0 phx_reply\u00a0message in which there is the rendered view, with dynamic and static parts. Each dynamic part has a position.\n  Every time the LiveView process receives a new trade from PubSub, it\u00a0 assign/3\u00a0the new trade to the\u00a0 socket\u00a0and LiveView re-renders the view calling\u00a0 render/1. Only the dynamic values that change are sent to the browser with a\u00a0 diff\u00a0message, in this way the payload stays super compact. The LiveView JS code running in the browser takes these new values and patches the DOM using the\u00a0 Morphdom library.\n  At the moment this view is passive, it only receives new values from the server without any user interaction. In the coming lessons we\u2019ll see how to send events from the browser to the server using buttons, bindings and forms.\n  Packed with hours of in-depth tutorials, tips and app development.  Learn how to build a true real-time application, getting the most from Elixir and Phoenix LiveView!", "posttime": "2021-06-25 19:11:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "liveview", "title": "Phoenix LiveView\u5982\u4f55\u8fd0\u4f5c ", "title_en": "How Phoenix LiveView Works", "transed": 1, "url": "https://www.poeticoding.com/how-phoenix-liveview-works/", "via": "", "real_tags": ["liveview"]}, {"category": "", "categoryclass": "", "imagename": "15ef3e6dbbd660a916bf17b0c1f03420.jpg", "infoid": 1068206, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ade\u4e89\u548c\u5e02\u573a\u6743\u5a01\u5df2\u7ecf\u5bf92015\u5e74\u6765\u7684\u51e0\u5e74\u8fdb\u884c\u4e86\u51e0\u5e74\u7684\u5174\u8da3\u3002\n \u5b83\u8fd8\u5728eBay\u548cFacebook\u56de\u6765\u4e8e2019\u5e74\uff0c\u8bd5\u56fe\u6324\u538b\u5728\u5047\u88c5\u4e2d\u7684\u4ea4\u6613\uff0c\u53d1\u73b0\u5b83\u5728\u5176\u5e02\u573a\u4e0a\u84ec\u52c3\u53d1\u5c55\u3002\u5728\u7ee7\u7eed\u538b\u529b\u540e\uff0c\u90a3\u4e9b\u5e73\u53f0\u7684\u5e73\u53f0\u88ab\u6388\u4e88\u627f\u8bfa\u4ed6\u4eec\u505a\u5f97\u66f4\u591a\u3002\u867d\u7136\u5728Facebook\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u624d\u622a\u81f34\u67082021\u5e744\u6708\uff0c\u5360\u636e\u4e8616,000\u540d\u4e00\u76f4\u5728\u4ea4\u6613\u5047\u5ba1\u67e5\u7684\u7fa4\u4f53 - \u800cCMA\u8868\u8fbe\u4e86\u4e00\u5e74\u591a\u7684Facebook\u7684\u5931\u671b\uff0c\u4ee5\u91c7\u53d6\u6709\u610f\u4e49\u7684\u884c\u52a8\u3002\n   \u73b0\u5728\uff0cCMA\u5728\u5176\u7f51\u7ad9\u4e2d\u5177\u6709\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\uff0c\u5176\u4e2d\u6258\u7ba1\u7528\u6237\u8bc4\u8bba\u7684\u54ea\u4e9b\u63a7\u5236\u5e73\u53f0 - \u8bf4\u5b83\u5c06\u6536\u96c6\u8bc1\u636e\uff0c\u4ee5\u786e\u5b9a\u4ed6\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u4e0d\u8db3\u4ee5\u4fdd\u62a4\u8d2d\u7269\u8005\u514d\u53d7\u5047\u5ba1\u67e5\u7684\u4e0d\u8db3\u4ee5\u4fdd\u62a4\u82f1\u56fd\u6cd5\u5f8b\u3002\n \u8bef\u5bfc\u6d88\u8d39\u8005\u6216\u4e0d\u91c7\u53d6\u884c\u52a8\u4ee5\u9632\u6b62\u6d88\u8d39\u8005\u8bef\u5bfc\u7684\u4f01\u4e1a\u53ef\u80fd\u662f\u8fdd\u53cd\u65e8\u5728\u4fdd\u62a4\u6d88\u8d39\u8005\u514d\u53d7\u4e0d\u516c\u5e73\u8d38\u6613\u7684\u6cd5\u5f8b\u3002\n CMA\u8868\u793a\uff0c\u5b83\u5bf9\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u7684\u8c03\u67e5\u9075\u5faa\u5b83\u57285\u67082020\u5e745\u6708\u5f00\u59cb\u7684\u521d\u59cb\u63a2\u9488\uff0c\u5b83\u4fa7\u91cd\u4e8e\u8bc4\u4f30\u51e0\u4e2a\u5e73\u53f0\u7684\u5185\u90e8\u7cfb\u7edf\u548c\u6d41\u7a0b\u6765\u8bc6\u522b\u548c\u5904\u7406\u5047\u5ba1\u67e5\u3002\n \u8fd9\u9879\u5de5\u4f5c\u63d0\u51fa\u4e86\u5173\u4e8e\u4e24\u79cd\u79d1\u6280\u5de8\u5934\u662f\u5426\u5df2\u7ecf\u505a\u8fc7\u7684\u5177\u4f53\u95ee\u9898\uff1a\n \u68c0\u6d4b\u865a\u5047\u548c\u8bef\u5bfc\u6027\u8bc4\u8bba\u6216\u53ef\u7591\u7684\u884c\u4e3a\u6a21\u5f0f\u3002\u4f8b\u5982\uff0c\u540c\u4e00\u7528\u6237\u4e92\u76f8\u5ba1\u67e5\u4e86\u76f8\u540c\u7684\u4ea7\u54c1\u8303\u56f4\u7684\u4ea7\u54c1\u6216\u4f01\u4e1a\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u6216\u4f01\u4e1a\u4e4b\u95f4\u6ca1\u6709\u8fde\u63a5 - \u6216\u8005\u5ba1\u67e5\u8868\u660e\u5ba1\u9605\u8005\u5df2\u6536\u5230\u4ed8\u6b3e\u6216\u5176\u4ed6\u5956\u52b1\u7684\u5176\u4ed6\u52a8\u529b\u4e4b\u95f4\u79ef\u6781\u8bc4\u8bba\u3002 \n\u5bf9\u5ba1\u9605\u4eba\u5458\u6216\u4f01\u4e1a\u5b9e\u65bd\u5145\u5206\u7684\u5236\u88c1\uff0c\u4ee5\u963b\u6b62\u4ed6\u4eec\u548c\u5176\u4ed6\u4eba\u5728\u5176\u5e73\u53f0\u4e0a\u53d1\u5e03\u5047\u6216\u8bef\u5bfc\u6027\u8bc4\u8bba - \u5305\u62ec\u8bb8\u591a\u6b21\u53d1\u5e03\u8fd9\u4e9b\u7c7b\u578b\u7684\u8bc4\u8bba\u7684\u4eba\u3002\n \u8be5\u76d1\u7ba1\u673a\u6784\u8fd8\u8868\u793a\uff0c\u4e9a\u9a6c\u900a\u7684\u7cfb\u7edf\u5df2\u88ab\u201c\u5145\u5206\u5730\u9632\u6b62\u548c\u963b\u6b62\u4e00\u4e9b\u5356\u65b9\u4ece\u64cd\u7eb5\u4ea7\u54c1\u5217\u8868\u201d\u7684\u7cfb\u7edf - \u4f8b\u5982\u901a\u8fc7\u534f\u540c\u9009\u62e9\u5176\u4ed6\u4ea7\u54c1\u7684\u80af\u5b9a\u5ba1\u67e5\u3002\n \u55ef\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5c1a\u672a\u5728\u4e9a\u9a6c\u900a\u6d4f\u89c8\u4ea7\u54c1\u8bc4\u8bba\uff0c\u53ea\u80fd\u901a\u8fc7\u5ba1\u9605\u8005\u8ba4\u771f\u5730\u5236\u5b9a\u901f\u5ea6\uff0c\u4ece\u800c\u63d0\u53ca\u6e05\u695a\u5730\u4e0e\u6709\u5173\u9500\u552e\u9879\u76ee\u65e0\u5173\u7684\u4ea7\u54c1\u5c5e\u6027\uff1f\n \u867d\u7136\u7528\u6237\u8bc4\u8bba\u5728\u641c\u7d22\u672c\u5730\u4e1a\u52a1\u540e\u5f39\u51fa\u8c37\u6b4c\u6620\u5c04\uff0c\u4f46\u4e5f\u53ef\u4ee5\u663e\u793a5\u4e2a\u4e3b\u89d2\uff08\u62161\u4e3b\u9898\uff09\u884c\u4e3a\u7684\u201c\u5f02\u5e38\u6a21\u5f0f\u201d......\n \u8bc4\u8bba\u5176\u5bf9\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u7684\u62c5\u5fe7\u7684\u8c03\u67e5\uff0c\u65e0\u6cd5\u505a\u8db3\u4ee5\u6253\u51fb\u5047\u5ba1\u67e5\u7684\u95ee\u9898CMA\u7684\u9996\u5e2d\u6267\u884c\u5b98Andrea Costelli\u8fd9\u662f\u4e3a\u4e86\u8bf4\uff0c\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\uff1a\n \u201c\u6211\u4eec\u7684\u62c5\u5fc3\u662f\u901a\u8fc7\u9605\u8bfb\u5047\u5ba1\u67e5\uff0c\u6570\u767e\u4e07\u7684\u5728\u7ebf\u8d2d\u7269\u8005\u53ef\u4ee5\u8bef\u5bfc\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e9b\u5efa\u8bae\u5728\u82b1\u94b1\u3002\u540c\u6837\uff0c\u5982\u679c\u6709\u4e9b\u4f01\u4e1a\u53ef\u4ee5\u5047\u88c5\u4e94\u661f\u7ea7\u8bc4\u4ef7\uff0c\u90a3\u4e48\u5b83\u6839\u672c\u4e0d\u516c\u5e73\uff0c\u4ee5\u4fbf\u4e3a\u4ed6\u4eec\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u63d0\u4f9b\u6700\u5927\u7684\u7a81\u51fa\uff0c\u800c\u5b88\u6cd5\u7684\u4f01\u4e1a\u5931\u8d25\u3002\n \u201c\u6211\u4eec\u6b63\u5728\u8c03\u67e5\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u5e76\u672a\u505a\u8db3\u591f\u7684\u62c5\u5fe7\uff0c\u4ee5\u9632\u6b62\u6216\u5220\u9664\u5047\u5ba1\u67e5\u4ee5\u4fdd\u62a4\u5ba2\u6237\u548c\u8bda\u5b9e\u7684\u4f01\u4e1a\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u79d1\u6280\u5e73\u53f0\u627f\u62c5\u8d23\u4efb\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u4ed6\u4eec\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4f1a\u51c6\u5907\u91c7\u53d6\u884c\u52a8\u3002\u201c \n\u201c\u6211\u4eec\u7684\u4e25\u683c\u653f\u7b56\u660e\u786e\u5dde\u5ba1\u67e5\u5fc5\u987b\u57fa\u4e8e\u771f\u5b9e\u7684\u4f53\u9a8c\uff0c\u5f53\u6211\u4eec\u53d1\u73b0\u653f\u7b56\u8fdd\u89c4\u65f6\uff0c\u6211\u4eec\u91c7\u53d6\u884c\u52a8 - \u4ece\u5220\u9664\u6ee5\u7528\u5185\u5bb9\u6765\u7981\u7528\u7528\u6237\u5e10\u6237\u3002\u6211\u4eec\u671f\u5f85\u7ee7\u7eed\u4e0eCMA\u5408\u4f5c\uff0c\u66f4\u591a\u5730\u5206\u4eab\u6211\u4eec\u7684\u884c\u4e1a\u9886\u5148\u7684\u6280\u672f\u548c\u5ba1\u67e5\u56e2\u961f\u5982\u4f55\u5e2e\u52a9\u7528\u6237\u5728Google\u4e0a\u627e\u5230\u76f8\u5173\u4fe1\u606f\u548c\u6709\u7528\u7684\u4fe1\u606f\u3002\u201c\n  \u201c\u4e3a\u4e86\u5e2e\u52a9\u8d62\u5f97\u5ba2\u6237\u7684\u4fe1\u4efb\uff0c\u6211\u4eec\u6295\u5165\u4e86\u91cd\u5927\u8d44\u6e90\uff0c\u4ee5\u9632\u6b62\u5047\u5192\u6216\u6fc0\u52b1\u5ba1\u67e5\u51fa\u73b0\u5728\u6211\u4eec\u7684\u5546\u5e97\u3002\u6211\u4eec\u52aa\u529b\u786e\u4fdd\u51c6\u786e\u53cd\u6620\u5ba2\u6237\u4e0e\u4ea7\u54c1\u7684\u7ecf\u9a8c\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u534f\u52a9CMA\u53ca\u5176\u67e5\u8be2\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5176\u786e\u8ba4\uff0c\u6ca1\u6709\u9488\u5bf9\u6211\u4eec\u4e1a\u52a1\u7684\u53d1\u73b0\u3002\u6211\u4eec\u5728\u4fdd\u62a4\u6211\u4eec\u7684\u5546\u5e97\u65b9\u9762\u65e0\u60c5\uff0c\u5e76\u5c06\u91c7\u53d6\u884c\u52a8\uff0c\u4ee5\u963b\u6b62\u865a\u5047\u7684\u8bc4\u8bba\uff0c\u800c\u4e0d\u7ba1\u90a3\u4e9b\u8bd5\u56fe\u8fd9\u79cd\u6ee5\u7528\u7684\u4eba\u7684\u5927\u5c0f\u6216\u4f4d\u7f6e\u3002\u201c\n \u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684\u535a\u5ba2\u5e16\u5b50\u4e2d\uff0c\u4e9a\u9a6c\u900a\u53ef\u80fd\u610f\u8bc6\u5230CMA\u5bf9\u8be5\u95ee\u9898\u7684\u5173\u6ce8 - \u8ba8\u8bba\u4e86Bogus\u5728\u7ebf\u8bc4\u8bba\u7684\u95ee\u9898\uff0c\u58f0\u79f0\u5b83\u201c\u65e0\u60c5\u5730\u521b\u65b0\u5728\u6211\u4eec\u5546\u5e97\u4e2d\u53ea\u5141\u8bb8\u771f\u6b63\u7684\u4ea7\u54c1\u8bc4\u8bba\u201d;\u5e76\u63d0\u51fa\u4e00\u4e9b\u8bf4\u660e\u6027\u7edf\u8ba1\u6570\u636e\uff08\u4f8b\u5982\uff0c\u57282020\u5e74\uff0c\u5b83\u5728\u4efb\u4f55\u5ba2\u6237\u770b\u5230\u7684\u4efb\u4f55\u5ba2\u6237\u90fd\u770b\u5230\u8d85\u8fc7200\u7c73\u7684\u201c\u6000\u7591\u7684\u5047\u5ba1\u67e5\u201d\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u4f7f\u7528\u201c\u4e3b\u52a8\u68c0\u6d4b\u201d\uff09\u3002\n \u7136\u800c\uff0c\u535a\u5ba2\u6587\u7ae0\u4e5f\u6c89\u91cd\u5730\u5bf9\u9632\u5b88 - \u4e0e\u7535\u5b50\u5546\u52a1\u5de8\u5934\u5bfb\u6c42\u5411\u865a\u5047\u8bc4\u8bba\u95ee\u9898\u4f20\u64ad\u8d23\u4efb - \u4f8b\u5982\uff0c\u8bf4\uff0c\u4f8b\u5982\uff0c\u6709\u201c\u8d8a\u6765\u8d8a\u591a\u7684\u574f\u6f14\u5458\u8d8b\u52bf\uff0c\u8bd5\u56fe\u5728\u4e9a\u9a6c\u900a\u4ee5\u5916\u5f81\u6c42\u5047\u5ba1\u67e5\uff0c\u7279\u522b\u662f\u901a\u8fc7\u793e\u4ea4\u5a92\u4f53\u670d\u52a1\u201c\u3002\n \u5b83\u8bd5\u56fe\u5c06\u5047\u5ba1\u67e5\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a\u8303\u56f4\u7684\u95ee\u9898\uff0c\u9700\u8981\u534f\u8c03\uff0c\u6574\u4e2a\u884c\u4e1a\u8303\u56f4\u7684\u89e3\u51b3\u65b9\u6848 - \u5728\u4fdd\u7559\u5176\u6700\u6c89\u91cd\u7684\uff08\u672a\u547d\u540d\uff09\u7684\u201c\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u201d\uff08\u54b3\u55fdFacebook\u54b3\u55fd\uff09 - \u4f8b\u5982\uff0c\u4ed6\u4eec\u94fe\u6761\u4e2d\u7684\u8584\u5f31\u73af\u8282\uff1a\n \u201c\u6211\u4eec\u9700\u8981\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\uff0c\u8fd9\u4e9b\u516c\u53f8\u6b63\u5728\u52aa\u529b\u4fc3\u8fdb\u5047\u5ba1\u67e5\uff0c\u4ee5\u4fbf\u79ef\u6781\u6295\u8d44\u6b3a\u8bc8\u548c\u5047\u5ba1\u67e5\u63a7\u5236\uff0c\u4e0e\u6211\u4eec\u643a\u5e26\u4f34\u4fa3\uff0c\u4ee5\u963b\u6b62\u8fd9\u4e9b\u7cdf\u7cd5\u7684\u6f14\u5458\uff0c\u5e76\u5145\u5206\u5229\u7528\u6d88\u8d39\u8005\u7684\u8d2d\u7269\u3002\u5b83\u5c06\u5728\u884c\u4e1a\u548c\u6267\u6cd5\u65b9\u9762\u91c7\u53d6\u4e0d\u65ad\u7684\u521b\u65b0\u548c\u4f19\u4f34\u5173\u7cfb\uff0c\u4ee5\u5b8c\u5168\u4fdd\u62a4\u6d88\u8d39\u8005\u548c\u8bda\u5b9e\u7684\u9500\u552e\u4f19\u4f34\u3002\u201c\n \u4e9a\u9a6c\u900a\u7684\u535a\u5ba2\u804c\u4f4d\u8fd8\u547c\u5401\u6d88\u8d39\u8005\u4fdd\u62a4\u76d1\u7ba1\u673a\u6784\u201c\u4e16\u754c\u5404\u5730\u201d\u534f\u8c03\u63f4\u52a9\uff0c\u4ee5\u652f\u6301\u5176\u73b0\u6709\u7684\u52aa\u529b\uff0c\u4ee5\u652f\u6301\u201c\u7cdf\u7cd5\u7684\u6f14\u5458\u201d\uff0cAKA\u201c\u90a3\u4e9b\u8d2d\u4e70\u5ba1\u67e5\u7684\u4eba\u548c\u63d0\u4f9b\u7684\u670d\u52a1\u63d0\u4f9b\u5546\u201d\u3002 \n\u8be5\u516c\u53f8\u8fd8\u544a\u8bc9\u6211\u4eec\uff0c\u5b83\u8d62\u5f97\u4e86\u5bf9\u6b27\u6d32\u7684\u5047\u5ba1\u67e5\u63d0\u4f9b\u8005\u7684\u201c\u6570\u5341\u201d\u7981\u4ee4 - \u8865\u5145\u8bf4\u5b83\u4e0d\u4f1a\u5bb3\u7f9e\u5730\u91c7\u53d6\u6cd5\u5f8b\u884c\u52a8\u3002 \uff08\u4f8b\u5982\uff0c\u5b83\u6ce8\u610f\u5230\uff0c\u5b83\u4e8e6\u67089\u65e5\u63d0\u4ea4\u7684\u8bc9\u8bbc\u4e0e\u4f26\u6566\u5546\u6cd5\u5411\u7f51\u7ad9\uff0cAMZ Tigers\u548cTesterjob\u7684\u4e1a\u4e3b\u63d0\u4ea4 - \u5bfb\u6c42\u7981\u4ee4\u548c\u635f\u5bb3\u8d54\u507f\u3002\uff09\n \u6839\u636eCMA\u7684\u8c03\u67e5\u73b0\u5728\uff0c\u4e9a\u9a6c\u900a\u7684\u535a\u5ba2\u804c\u4f4d\u8981\u6c42\u76d1\u7ba1\u63f4\u52a9\u4ee5\u652f\u6301\u8bc9\u8bbc\uff0c\u4ee5\u652f\u6301\u8bc9\u8bbc\uff0c\u4ee5\u9632\u6b62\u5047\u5ba1\u67e5\u7684\u4f9b\u5e94\u5546\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5148\u53d1\u5236\u4eba\u7684\u8bf7\u6c42\uff0c\u5373CMA\u5c06\u5176\u51dd\u89c6\u65cb\u8f6c\u56deFacebook\u7684\u5e02\u573a - \u5e76\u56de\u987e\u5982\u4f55\u5047\u5ba1\u67e5\u7684\u8d38\u6613\u6b63\u5728\u90a3\u91cc\u770b\u3002\n  \u6211\u4eec\u81f4\u529b\u4e8e\u8be2\u95eeCMA\uff0c\u8be2\u95ee\u5176\u5bf9\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u7684\u8c03\u67e5\u662f\u5426\u4f1a\u6316\u6398\u5ba1\u67e5\u5176\u4ed6\u5730\u65b9\u6258\u7ba1\u7684\u4ea4\u6613\u56e2\u4f53\uff08\u4f8b\u5982\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\uff09\u7684\u89d2\u8272\uff0c\u53ef\u80fd\u5728\u52a0\u5267\u8fd9\u4e2a\u95ee\u9898\u65f6\u53d1\u6325\u4f5c\u7528\uff0c\u5e76\u5c06\u5728\u4efb\u4f55\u54cd\u5e94\u4e2d\u66f4\u65b0\u6b64\u7aef\u53e3\u3002\n CMA\u8d8a\u6765\u8d8a\u79ef\u6781\u5730\u5728\u89c4\u8303\u5927\u578b\u6280\u672f\u65b9\u9762\uff0c\u56e0\u4e3a\u5b83\u62e8\u6253\u4e86\u6570\u5b57\u5e02\u573a\uff0c\u4e3a\u8ba1\u5212\u7684\u82f1\u56fd\u5bf9\u7ade\u4e89\u6cd5\u7684\u6539\u9769\u8fdb\u884c\u51c6\u5907\uff0c\u770b\u8d77\u6765\u8fce\u6765\u8fce\u6765\u7ade\u4e89\u63aa\u65bd\u7684\u524d\u4efb\u653f\u6743\u3002\n \u770b\u95e8\u72d7\u5bf9\u5927\u578b\u6280\u672f\u6709\u8bb8\u591a\u5176\u4ed6\u5f00\u653e\u8c03\u67e5 - \u5305\u62ec\u8c37\u6b4c\u7684\u8ddf\u8e2a\u997c\u5e72\u7684\u8ba1\u5212\u5f03\u7528\u3002\u5b83\u8fd8\u6700\u8fd1\u53d1\u8d77\u4e86\u5bf9\u82f9\u679c\u548c\u8c37\u6b4c\u5bf9\u79fb\u52a8\u751f\u6001\u7cfb\u7edf\u7684\u4e3b\u5bfc\u5730\u4f4d\u7684\u5e02\u573a\u7814\u7a76\u3002\n \u8003\u8651\u5230\u770b\u95e8\u72d7\u7684\u91cd\u70b9\u662f\u4e3b\u8981\u5e73\u53f0 - \u4ee5\u53ca\u5bf9\u5047\u5ba1\u67e5\u7684\u957f\u671f\u5174\u8da3 - \u6709\u8da3\u7684\u662f\u63a8\u6d4biOS\u5236\u9020\u5546Apple\u662f\u5426\u53ef\u80fd\u9762\u4e34\u7740\u6b64\u95ee\u9898\u7684\u4e00\u4e9b\u82f1\u56fd\u5ba1\u67e5\u3002\n  \u4f8b\u5982\uff0c\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0cIOS App Developer\uff0cKosta Eleftheriou\uff0c\u9488\u5bf9Apple\u7684\u63d0\u4ea4\u7684\u8bc9\u8bbc - \u6307\u79f0\u5b83\u901a\u8fc7\u58f0\u79f0App Store\u662f\u4e00\u4e2a\u5b89\u5168\u53ef\u9760\u7684\u5730\u65b9\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u5b83\u5e76\u4e0d\u80fd\u4fdd\u62a4\u5408\u6cd5\u5f00\u53d1\u4eba\u5458\u514d\u53d7\u5229\u4e8e\u8bc8\u9a97\u8005\u7684\u5408\u6cd5\u5f00\u53d1\u4eba\u5458\u4ed6\u4eec\u7684\u8f9b\u52e4\u5de5\u4f5c\u3002 \nCMA\u5df2\u5bf9Apple\u7684App Store\u5f00\u653e\u8c03\u67e5\u3002 \u56e0\u6b64\uff0c\u5b83\u5c06\u5bc6\u5207\u5173\u6ce8\u5546\u5e97\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5728\u4e09\u6708\u56de\u6765\uff0c\u5b83\u5c06\u6b63\u5728\u8c03\u67e5\u82f9\u679c\u662f\u5426\u5bf9\u5f00\u53d1\u4eba\u5458\u5bf9\u7684\u4e0d\u516c\u5e73\u6216\u53cd\u7ade\u4e89\u6027\u672f\u8bed - \u8fd9\u6700\u7ec8\u5bfc\u81f4\u7528\u6237\u5c11\u9009\u62e9\u6216\u652f\u4ed8\u66f4\u9ad8\u4ef7\u683c\u7684\u5e94\u7528\u7a0b\u5e8f\u548c \u52a0\u8f7d\u9879\u3002  \u4f46\u662f\uff0c\u73b0\u5728\uff0c\u770b\u95e8\u72d7\u5bf9\u5047\u5ba1\u67e5\u95ee\u9898\u7684\u5173\u6ce8\u5df2\u88ab\u516c\u5f00\u5730\u4e13\u6ce8\u4e8e\u5176\u4ed6\u5730\u65b9\u3002 ", "note_en": "The Competition and Markets Authority has taken an interest in online reviews for several years, as far back as  2015.\n It also went after eBay and Facebook  back in 2019 to try to squeeze the trade in fake reviews it found thriving on their marketplaces. After  continuing to pressure those platforms the watchdog was given pledges they\u2019d do more. Albeit, in the case of Facebook, it took  until April 2021 for it to take  down 16,000 groups that had been trading fake reviews \u2014 and the CMA expressed disappointment that it had taken Facebook over a year to take meaningful action.\n   Now the CMA has Amazon and Google in its sites, both of which control platforms hosting user reviews \u2014 saying it will be gathering evidence to determine whether they may have broken UK law by taking insufficient action to protect shoppers from fake reviews.\n Businesses that mislead consumers or don\u2019t take action to prevent consumers being misled may be in breach of  UK laws intended to protect consumers from unfair trading.\n The CMA says its investigation into Amazon and Google follows an initial probe, which it started in May 2020, which was focused on assessing several platforms\u2019 internal systems and processes for identifying and dealing with fake reviews.\n That work raised specific concerns about whether the two tech giants have been doing enough to:\n Detect fake and misleading reviews or suspicious patterns of behaviour. For example, where the same users have reviewed the same range of products or businesses at similar times to each other and there is no connection between those products or businesses \u2013 or where the review suggests that the reviewer has received a payment or other incentive to write a positive review.\n  Impose adequate sanctions on reviewers or businesses to deter them and others from posting fake or misleading reviews on their platforms \u2013 including those\u00a0who have published these types of reviews many times.\n The regulator also said it\u2019s concerned that Amazon\u2019s systems have been \u201cfailing adequately to prevent and deter some sellers from manipulating product listings\u201d \u2014 such as, for example, by co-opting positive reviews from other products.\n And, well, who hasn\u2019t been browsing product reviews on Amazon, only to be drawn up short by a reviewer earnestly referring to product attributes that clearly bear no relation to the sale item in question?\n While the user reviews that pop up on, for example, Google Maps after a search for a local business can also display \u2018 unusual patterns\u2018 of 5-starring (or 1-starring) behaviour\u2026\n Commenting on its investigation into concerns that Amazon and Google are not doing enough to combat the problem of fake reviews the CMA\u2019s CEO Andrea Coscelli had this to say, in a statement:\n \u201cOur worry is that millions of online shoppers could be misled by reading fake reviews and then spending their money based on those recommendations. Equally, it\u2019s simply not fair if some businesses can fake 5-star reviews to give their products or services the most prominence, while law-abiding businesses lose out.\n \u201cWe are investigating concerns that Amazon and Google have not been doing enough to prevent or remove fake reviews to protect customers and honest businesses. It\u2019s important that these tech platforms take responsibility and we stand ready to take action if we find that they are not doing enough.\u201d\n   \u201cOur  strict policies clearly state reviews must be based on real experiences, and when we find policy violations, we take action \u2014 from removing abusive content to disabling user accounts. We look forward to continuing our work with the CMA to share more on how our industry-leading technology and review teams work to help users find relevant and useful information on Google.\u201d\n  \u201cTo help earn the trust of customers, we devote significant resources to preventing fake or incentivized reviews from appearing in our store. We work hard to ensure that reviews accurately reflect the experience that customers have had with a product. \u00a0 We will continue to assist the CMA with its enquiries and we note its confirmation that no findings have been made against our business. We are relentless in protecting our store and will take action to stop fake reviews regardless of the size or location of those who attempt this abuse.\u201d\n In a  blog post earlier this month, Amazon \u2014 likely aware of the CMA\u2019s attention on the issue \u2014 discussed the problem of bogus online reviews, claiming it \u201crelentlessly innovates to allow only genuine product reviews in our store\u201d; and offering up some illustrative stats (such as that, in 2020 alone, it stopped more than 200M \u201csuspected fake reviews\u201d before they were seen by any customers, mostly via the use of \u201cproactive detection\u201d).\n However the blog post was also heavily on the defensive \u2014 with the ecommerce giant seeking to  spread the blame for the fake reviews problem \u2014 saying, for example, that there\u2019s an \u201c increasing trend of bad actors attempting to solicit fake reviews outside Amazon, particularly via social media services\u201d.\n It sought to frame fake reviews as an industry-wide problem, needing a coordinated, industry-wide solution \u2014 while reserving its heaviest fire for (unnamed) \u201csocial media companies\u201d ( cough Facebook  cough) \u2014 and suggesting, for example, that they are the weak link in the chain:\n \u201cWe need social media companies whose services are being used to facilitate fake reviews to proactively invest in fraud and fake review controls, partner with us to stop these bad actors, and help consumers shop with confidence. It will take constant innovation and partnership across industries and law enforcement to fully protect consumers and our honest selling partners.\u201d\n Amazon\u2019s blog post also called for coordinated assistance from consumer protection regulators \u201caround the world\u201d to support its existing efforts to litigate against \u201cbad actors\u201d, aka \u201cthose who have purchased reviews and the service providers who provided them\u201d.\n The company also told us it has won \u201cdozens\u201d of injunctions against providers of fake reviews across Europe \u2014 adding that it won\u2019t shy away from taking legal action.  (It noted, for example, a lawsuit it filed on June 9 with the London Commercial Court against the owners of the websites, AMZ Tigers and TesterJob \u2014 seeking a prohibitory injunction and damages.)\n In light of the CMA\u2019s investigation being opened now, Amazon\u2019s blog post calling for regulatory assistance to support litigation against purveyors of fake reviews looks like a pre-emptive plea to the CMA to swivel its gaze back onto Facebook\u2019s marketplace \u2014 and check back in on how the trade in fake reviews is looking over there.\n  We reached out to the CMA to ask whether its investigation into Amazon and Google will dig into the role that review trading groups hosted elsewhere, such as on social media platforms, may play in exacerbating the issue and will update this port with any response.\n The CMA has been increasingly active in regulating Big Tech as it dials up attention on digital markets to prepare for planned UK reforms to competition law that look set to  usher in an ex ante regime for dealing with  competition-denting platform power.\n The watchdog has a number of other open investigations into Big Tech \u2014 including into  Google\u2019s planned deprecation of tracking cookies. It also recently initiated  a market study into Apple and Google\u2019s dominance of the mobile ecosystem.\n Given the watchdog\u2019s focus on major platforms \u2014 as well as its long standing interest in fake reviews \u2014 it\u2019s interesting to speculate whether iOS maker Apple may not face some UK scrutiny on this issue.\n  Earlier this year, for example, iOS app developer, Kosta Eleftheriou,  filed suit against Apple \u2014 alleging it enticed developers to build apps by claiming the App Store is a safe and trustworthy place but that it doesn\u2019t protect legitimate developers against scammers profiting from their hard work.\n The CMA already has an  open investigation into Apple\u2019s App Store. So it will be paying close attention to aspects of the store, saying back in March that it would be investigating whether Apple imposes unfair or anti-competitive terms on developers \u2014 which then ultimately result in users having less choice or paying higher prices for apps and add-ons.\n For now, though, the watchdog\u2019s attention toward the fake reviews issue has been publicly focused elsewhere.", "posttime": "2021-06-25 18:34:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,google,\u4e9a\u9a6c\u900a,\u8c37\u6b4c,\u9762\u4e34", "title": "\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u9762\u4e34\u82f1\u56fdCMA\u63a2\u6d4b\u5230\u865a\u5047\u8bc4\u8bba ", "title_en": "\n\t\t\t\tAmazon and Google face UK CMA probe over fake reviews\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/25/amazon-and-google-face-uk-cma-probe-over-fake-reviews/", "via": "", "real_tags": ["amazon", "google", "\u4e9a\u9a6c\u900a", "\u8c37\u6b4c", "\u9762\u4e34"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1071708, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5929\u771f\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u5e76\u4e0d\u662f\u7279\u522b\u56f0\u96be\u3002\u8fd9\u91cc\u7684\u6311\u6218\u662f\u50cf\u7f16\u5199\u6279\u5904\u7406\u67e5\u8be2\u4e00\u6837\u5b9e\u73b0\u5b83\uff0c\u4f46\u8981\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f8b\u5982 materialize \u6216 dida \u4e4b\u7c7b\u7684\u589e\u91cf\u7cfb\u7edf\u53ef\u4ee5\u5728\u65b0\u7f16\u8f91\u5230\u8fbe\u65f6\u6709\u6548\u5730\u66f4\u65b0\u7ed3\u679c\u3002\u4e0d\u662f\u56e0\u4e3a\u8fd9\u6bb5\u4ee3\u7801\u672c\u8eab\u7279\u522b\u6709\u7528\uff0c\u800c\u662f\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u89e3\u51b3\u54ea\u4e9b\u7c7b\u578b\u7684\u95ee\u9898\u7684\u754c\u9650\u3002\u8be5\u7ec3\u4e60\u6709\u70b9\u50cf GPU \u7f16\u7a0b\uff0c\u56e0\u4e3a\u907f\u514d\u987a\u5e8f\u7b97\u6cd5\u548c\u5171\u4eab\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u9700\u8981\u975e\u5e38\u5c0f\u5fc3\u5730\u5c06\u95ee\u9898\u7684\u5b9e\u9645\u57fa\u672c\u6570\u636e\u4f9d\u8d56\u9879\u4e0e\u5178\u578b\u7f16\u7a0b\u6280\u672f\u610f\u5916\u5f15\u5165\u7684\u6570\u636e\u4f9d\u8d56\u9879\u5206\u5f00\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u7f16\u8f91\u6811\uff0c\u6bcf\u4e2a\u7f16\u8f91\u90fd\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u7684\u63d2\u5165\u3002\u6bcf\u4e2a\u7f16\u8f91\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 id\uff0c\u4e3a\u4e86\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u8bf4\u5b83\u53ea\u662f\u4e00\u4e2a\u6574\u6570\u3002\u6bcf\u4e2a\u5176\u4ed6\u7f16\u8f91\u90fd\u6709\u4e00\u4e2a\u7236\u7f16\u8f91\u3002\u7f16\u8f91\u7684 id \u603b\u662f\u5927\u4e8e\u5176\u7236\u7ea7\u7684 id\u3002\u4e3a\u4e86\u6784\u5efa\u5b9e\u9645\u7684\u6587\u672c\uff0c\u6211\u4eec\u91c7\u7528\u8fd9\u68f5\u7f16\u8f91\u6811\uff0c\u6309 id \u5bf9\u6bcf\u4e2a\u7f16\u8f91\u7684\u5b50\u9879\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u6811\u8fdb\u884c\u9884\u5e8f\u904d\u5386\u3002\u521b\u5efa\u8868\u7f16\u8f91\uff08id \u6574\u6570\uff0cparent_id \u6574\u6570\uff0c\u5b57\u7b26\u6587\u672c\uff09\uff1b\u63d2\u5165\u7f16\u8f91\u503c\uff08 0 \uff0c null \uff0c &#39;a&#39; \uff09\uff1b\u63d2\u5165\u7f16\u8f91\u503c ( 1 , 0 , &#39;b&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 2 , 0 , &#39;e&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 3 , 1 , &#39;c&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 4 , 1 , &#39;d&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 5 , 2 , &#39;f&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 6 , 5 , &#39;g&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 7 , 5 , &#39;h&#39; );\u63d2\u5165\u7f16\u8f91\u503c ( 8 , 5 , &#39;i&#39; );\n\u9274\u4e8e\u6211\u4eec\u6b63\u5728\u5c1d\u8bd5\u5bf9\u8fd9\u7ec4\u7f16\u8f91\u8fdb\u884c\u6392\u5e8f\uff0c\u81ea\u7136\u7684\u53cd\u5e94\u662f\u4ece\u4ee5\u4e0b\u5185\u5bb9\u5f00\u59cb\uff1a\u4f46\u6211\u4eec\u7acb\u5373\u9677\u5165\u56f0\u5883\uff0c\u56e0\u4e3a\u6ca1\u6709\u660e\u663e\u7684\u6392\u5e8f\u952e\u3002\u8ba9\u6211\u4eec\u51b3\u5b9a\u4e00\u4e2a\u7f16\u8f91\u5e94\u8be5\u5728\u53e6\u4e00\u4e2a\u7f16\u8f91\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u7684\u4fe1\u606f\u9690\u542b\u5728\u6811\u7684\u5f62\u72b6\u4e2d\u3002\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u5b9e\u9645\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u5305\u542b\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u3002\u9012\u5f52\u8def\u5f84 (id, path , character) as ( select edits . id , edits . id , edits . character from edits where edits . parent_id is null union all select child . id , parent . path || &#39;,&#39; || child . id , child . character from edits as child, path as parent where child . parent_id = parent . id ) select * from path order by path \u3002\u5c0f\u8def ;\u8fd9\u5c31\u662f\u95ee\u9898\u7684\u672c\u8d28 - \u6309\u7167\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u8def\u5f84\u4e2d\u7684 id \u5bf9\u7f16\u8f91\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u4e8e\u5e73\u8861\u826f\u597d\u7684\u6811\u6728\uff0c\u8fd9\u5c06\u662f\u6545\u4e8b\u7684\u7ed3\u5c3e\u3002\u4f46\u662f\u7528\u4e8e\u6587\u672c\u7f16\u8f91 crdt \u7684\u6811\u5f80\u5f80\u975e\u5e38\u6df1\u548c\u72ed\u7a84\uff0c\u56e0\u6b64\u5b9e\u73b0\u8fd9\u4e9b\u8def\u5f84\u5c06\u4f7f\u5b58\u50a8\u6210\u672c\u770b\u8d77\u6765\u50cf O(N\u00b2)\u3002 \uff08\u5728\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53ea\u67e5\u770b\u5177\u6709\u591a\u4e2a\u5b69\u5b50\u7684\u8def\u5f84\u7684\u4e00\u90e8\u5206\u6765\u51cf\u5c11\u8fd9\u4e00\u70b9\u3002\u4f46\u6700\u574f\u7684\u60c5\u51b5\u4ecd\u7136\u662f O(N\u00b2)\uff09\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u663e\u5f0f\u5b58\u50a8\u5bc6\u94a5\u592a\u6602\u8d35\uff0c\u6211\u4eec\u53ea\u662f\u4f7f\u7528\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f\u3002\u521b\u5efa\u51fd\u6570 compare_edits (id1 integer , id2 integer ) \u5c06\u6bd4\u8f83\u8fd4\u56de\u4e3a ???;\u901a\u8fc7\u6bd4\u8f83 compare_edits( edit . id ) \u4ece\u7f16\u8f91\u987a\u5e8f\u4e2d\u9009\u62e9 *\uff1b\n\u589e\u91cf\u7ef4\u62a4\u8fd9\u6837\u7684\u6392\u5e8f\u8fd0\u7b97\u7b26\u4f1a\u5f88\u68d8\u624b\u3002\u53ef\u80fd\u5fc5\u987b\u663e\u5f0f\u5b58\u50a8\u4e00\u7ec4\u6bd4\u8f83\u3002\u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u5982\u4f55\u4ee5\u4e00\u79cd\u4f7f\u6240\u9700\u7684\u6bd4\u8f83\u96c6\u76f8\u5bf9\u4e8e\u8f93\u5165\u7684\u5fae\u5c0f\u53d8\u5316\u4fdd\u6301\u7a33\u5b9a\u7684\u65b9\u5f0f\u9009\u62e9\u652f\u70b9\u5e76\u4e0d\u660e\u663e\u3002\u4f46\u5b83\u53ef\u80fd\u662f\u53ef\u80fd\u7684\u3002\u5982\u679c\u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u8fd0\u7b97\u7b26\u4e0d\u53ef\u884c\uff0c\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u663e\u5f0f\u904d\u5386\u6811\u3002 with recursiverightmost_child(id, parent_id) as ( select max (id), edit . parent_id from edit where edit . parent_id is not null group by parent_id),rightmost_descendant(id, child_id) as ( select id, id from edit union select parent . parent_id , child . child_id \u4ece rightmost_child \u4e3a\u7236\u7ea7\uff0c rightmost_descendant \u4e3a child where parent . id = child . id ),rightmost_leaf(id, Leaf_id) as ( select id, max (child_id) as leaf_id from rightmost_descendant group by id),prev_sibling(id) , prev_id) as ( select edit . id , ( select max (sibling . id ) from edit as mirror where edit . parent_id = mirror . parent_id and edit . id &gt; mirror . id ) as prev_id from edit where prev_id is not null ), prev_edit(id, prev_id) as ( -- \u6ca1\u6709\u4e0a\u4e00\u4e2a\u5144\u5f1f\u59d0\u59b9\u7684\u7f16\u8f91\u5728\u4ed6\u4eec\u7684\u7236\u7ea7\u4e4b\u540e\u9009\u62e9 edit . id , edit . parent_id from edit where prev_sibling where prev_sibling . id = edit . id ) union all - - \u5176\u4ed6\u7f16\u8f91\u51fa\u73b0\u5728\u4ed6\u4eec\u4e0a\u4e00\u4e2a\u5144\u5f1f\u9009\u62e9\u7f16\u8f91\u7684\u6700\u53f3\u8fb9\u7684\u53f6\u5b50\u4e4b\u540e. id \uff0c rightmost_leaf \u3002 Leaf_id \u6765\u81ea edit\u3001prev_sibling\u3001rightmost_leaf\uff0c\u5176\u4e2d edit \u3002 id = prev_sibling \u3002 id \u548c prev_sibling \u3002 prev_id = rightmost_leaf \u3002 id ),position(id, position, character) as ( -- root is at position 0 select edit . id , 0 , edit . character from edit where edit . parent_id is null union all -- \u6240\u6709\u5176\u4ed6\u7f16\u8f91\u90fd\u5728\u4ed6\u4eec\u4e0a\u4e00\u6b21\u7f16\u8f91\u4e4b\u540eselect edit . id , position . position + 1 , edit . character from edit, prev_edit, position where edit . id = prev_edit . id and prev_edit . prev_id = position . id ) select * from position order by position .\u4f4d\u7f6e ;\u8ba9\u5144\u5f1f=\u7f16\u8f91\uff08\uff1f\u7f16\u8f91\u3002\u7f16\u8f91\u3002\uff08\u7f16\u8f91\u7236~\u7236\uff09\uff09\u5165\u53e3rightmost_child =\u7f16\u8f91\uff08\uff1f\u7f16\u8f91\u3002\u7f16\u8f91\u3002\uff08\u6700\u5927[\u7f16\u8f91~\u7236]\uff09\uff09\u5165\u53e3rightmost_leaf=\u4fee\u590d\uff08\u7f16\u8f91\uff08\uff1f\u7f16\u8f91\u3002\u7f16\u8f91\u3002\u7f16\u8f91\uff09 ) (?[rightmost_leaf] . (rightmost_leaf (?edit . ?leaf .edit . (max [leaf | (leaf rightmost_child)]))))) \u5165\u53e3prev = edits (?edit .edit .let prev_siblings = (edit\u5144\u5f1f) ( ?sibling . (when (edit &gt;sibling)sibling)) in if !!prev_siblings (max [prev_siblings] rightmost_leaf) (edit parent)) \u5165\u53e3\u4f4d\u7f6e = fix (root . 0) (?[position] . (position | (position) (?edit . ?pos . (edit ~prev) . (pos + 1))))) inedits (?edit . (edit position) .edit . (edit character)) \u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u53ef\u80fd\u4e0d\u5f97\u4e0d\u81f3\u5c11\u7ef4\u62a4\u4e00\u4e2a\u5173\u4e8e parent\u3001~parent \u548c character \u7684\u7d22\u5f15\uff0c\u53ef\u80fd\u8fd8\u6709\u8bb8\u591a\u4e2d\u95f4\u7ed3\u679c\u7684\u7d22\u5f15\u3002\u6709\u70b9\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u4ece\u4ee3\u7801\u4e2d\u6839\u672c\u65e0\u6cd5\u9884\u6d4b\u8fd9\u4e9b\u5c06\u662f\u4ec0\u4e48\u4ee5\u53ca\u5b83\u4eec\u5c06\u82b1\u8d39\u591a\u5c11\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cprev \u7684\u8f93\u51fa\u975e\u5e38\u7a33\u5b9a\uff0c\u56e0\u6b64\u5e94\u8be5\u5141\u8bb8\u5408\u7406\u6709\u6548\u7684\u589e\u91cf\u7ef4\u62a4\u3002\u4f46\u662f\u4f4d\u7f6e\u8f93\u51fa\u7684\u5f88\u5927\u4e00\u90e8\u5206\u4f1a\u5728\u6bcf\u6b21\u65b0\u7f16\u8f91\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u6b64\u7ef4\u62a4\u8d77\u6765\u6548\u7387\u4f4e\u4e0b\u3002\u8fd9\u662f\u56e0\u4e3a prev \u9690\u5f0f\u8868\u793a\u6392\u5e8f\uff0c\u5c31\u76f8\u90bb\u7f16\u8f91\u4e4b\u95f4\u7684\u76f8\u5bf9\u6392\u5e8f\u800c\u8a00\uff0c\u800c position \u901a\u8fc7\u5bf9\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u7f16\u53f7\u6765\u663e\u5f0f\u8868\u793a\u6392\u5e8f\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u6bcf\u4e2a\u65b0\u7684\u7f16\u8f91\u53ea\u6539\u53d8\u5b83\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u7f16\u8f91\u7684 prev \u503c\uff0c\u4f46\u589e\u52a0\u5b83\u53f3\u8fb9\u7684\u6bcf\u4e2a\u7f16\u8f91\u7684\u4f4d\u7f6e\u7f16\u53f7\u3002\n\u6211\u4eec\u4ece\u4e00\u4e2a\u7a7a\u5e8f\u5217\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u5728\u5176\u4e2d\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u5b58\u50a8\u7f16\u8f91\u3002\u5bf9\u4e8e\u6bcf\u6b21\u7f16\u8f91\uff0c\u6211\u4eec\u901a\u8fc7\u9996\u5148\u626b\u63cf\u5e8f\u5217\u627e\u5230\u5b83\u7684\u7236\u7ea7\uff0c\u7136\u540e\u5411\u53f3\u626b\u63cf\u627e\u5230\u6b63\u786e\u7684\u70b9\u63d2\u5165\u5b50\u7ea7\u6765\u5c06\u5176\u63d2\u5165\u5230\u5e8f\u5217\u4e2d\u3002\u5982\u679c\u5e8f\u5217\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2a b \u6811\uff0c\u90a3\u4e48\u8fd9\u4e9b\u626b\u63cf\u548c\u63d2\u5165\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u8ddf\u8e2a b \u6811\u6bcf\u4e2a\u5206\u652f\u4e2d\u7684\u5b57\u7b26\u6570\uff0c\u4ee5\u4fbf\u901a\u8fc7\u6cbf\u7740 b \u6811\u7684\u4e3b\u5e72\u8d70\u4e0b\u53bb\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u56de\u7b54\u8bf8\u5982\u201c\u7b2c 142 \u4e2a\u5b57\u7b26\u7684\u7f16\u8f91 ID \u662f\u4ec0\u4e48\u201d\u4e4b\u7c7b\u7684\u67e5\u8be2\u3002\u547d\u4ee4\u5f0f\u89e3\u51b3\u65b9\u6848\u6839\u636e\u67d0\u4e9b\u6709\u5e8f\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u4f4d\u7f6e\u9690\u5f0f\u8868\u793a\u6392\u5e8f\u3002\u5728\u6570\u636e\u7ed3\u6784\u7684\u5f00\u5934\u9644\u8fd1\u63d2\u5165\u65b0\u7f16\u8f91\u4e0d\u9700\u8981\u663e\u5f0f\u66f4\u65b0\u6bcf\u4e2a\u540e\u9762\u5143\u7d20\u7684\u4f4d\u7f6e - \u8be5\u4f4d\u7f6e\u9690\u542b\u5728\u6574\u4e2a\u7ed3\u6784\u4e2d\u3002\u4f7f\u7528\u9012\u5f52\u5e8f\u5217(last_id, characters, ids) as ( select edit . id , edit . character , array[ edit . id ] from edit where edit . parent_id is null union all select edit . id , -- insert edit.character and edit .id at insert_point substring ( sequence . characters , 1 , insert_point . insert_point - 1 ) || edit . character || substring ( sequence . characters , insert_point . insert_point ), sequence . ids [ 1 : insert_point . insert_point - 1 ] ||\u7f16\u8f91 . id || \u5e8f\u5217 . ids [ \u63d2\u5165\u70b9 . \u63d2\u5165\u70b9 :] \u6765\u81ea\u5e8f\u5217\uff0c\u7f16\u8f91\u8fde\u63a5\u6a2a\u5411\uff08\u9009\u62e9\u5408\u5e76\uff08\u5206\u949f\uff08i\uff09\uff0c\u6570\u7ec4\u957f\u5ea6\uff08\u5e8f\u5217\u3002ids\uff0c1\uff09+ 1\uff09\u4f5c\u4e3a\u63d2\u5165\u70b9\u6765\u81ea\u751f\u6210\u4e0b\u6807\uff08\u5e8f\u5217\u3002ids\uff0c1 ) as i -- \u4fa7\u5411\u7f16\u8f91\u8fde\u63a5\u7684\u7236\u7ea7\u7684\u6570\u7ec4\u626b\u63cf\uff08\u4ece generate_subscripts( sequence . ids , 1 ) \u4e2d\u9009\u62e9 j \u4f5c\u4e3a j where sequence . ids [j] = edit . parent_id ) as parent_ix on true -- \u5bf9\u7236\u7ea7\u7684\u6570\u7ec4\u626b\u63cfids[i] \u52a0\u5165\u6a2a\u5411\uff08\u4ece generate_subscripts( sequence . ids , 1 ) \u4e2d\u9009\u62e9 k\u4f5c\u4e3a k\uff0c\u7f16\u8f91\u4e3a o_edit \u5176\u4e2d\u5e8f\u5217\u3002 ids [k] = o_edit \u3002 parent_id \u548c\u5e8f\u5217\u3002 ids [i] = o_edit \u3002 id ) as o_parent_ix on true - \u627e\u5230 i &gt; parent_ix \u7684\u63d2\u5165\u70b9\u3002 j \u548c o_parent_ix \u3002 k &lt; parent_ix \u3002 j) \u4f5c\u4e3a\u5bf9 true where \u5e8f\u5217\u7684\u63d2\u5165\u70b9\u3002 last_id + 1 = \u7f16\u8f91\u3002 id ) select * from sequence order by last_id desclimit 1 ; Imp \u6ca1\u6709\u4efb\u4f55\u5e8f\u5217\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f2a\u9020\u4e00\u4e2a\u6709\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u81f3\u5c11\u770b\u770b\u4ee3\u7801\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002 // \u5904\u7406\u201c\u6570\u7ec4\u201d\u7684\u51fd\u6570let insert = ?[sequence] . \uff1f\u4f4d\u7f6e \u3002 \uff1f\u7269\u54c1 \u3002\u8ba9 old = \u5e8f\u5217 (?old_position . ?old_item . (if (old_position &gt;= position) (old_position + 1) old_position) . old_item ) in old | (position . item)inlet find_min_pos = ?[sequence] \u3002 \uff1f[\u6761\u4ef6] \u3002 ( let found = sequence (?pos . ?edit . (when (cond pos edit) pos)) in min [found] ) in// \u5b9e\u9645 crdt codelet sequence = fix (0 . root) (?[sequence] . let next_edit = 1 + (max [sequence (?pos . ?edit .edit)]) in if !(edits next_edit) \u5e8f\u5217 let parent_pos = find_min_pos [sequence] [?pos . ?edit . ((next_edit parent) = edit)] \u5728let insert_point = find_min_pos [sequence] [?o_pos . ?o_edit . ( let o_parent_pos = find_min_pos [sequence] [?pos . ?edit . ((o_edit parent) = edit)] in (o_pos &gt; parent_pos) &amp; (parent_pos &gt; o_parent_pos) )] in insert [sequence] (if !!insertion_point inserting_point (max [sequence (?pos . ?edit . pos)])) next_edit ) insequence (?pos . ?edit . pos .edit . (edit character))\n\u8fd9\u4f7f\u5f53\u524d\u8e69\u811a\u7684\u89e3\u91ca\u5668\u5c48\u670d\uff0c\u4f46\u6211\u8ba4\u4e3a\u53ef\u4ee5\u6709\u6548\u5730\u6267\u884c\u5b83\u3002\u5bf9\u4e8e sql \u548c imp \u7248\u672c\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u9010\u6b65\u7ef4\u62a4\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u6301\u4e45\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\u6570\u7ec4\uff0c\u90a3\u4e48\u63d2\u5165\u4e0d\u4f1a\u592a\u6602\u8d35\u3002\u5982\u679c\u6211\u4eec\u63d0\u793a\u8fd0\u884c\u65f6\u4e0d\u4f1a\u5220\u9664\u4efb\u4f55\u7f16\u8f91\u5e76\u4e14\u65b0\u7f16\u8f91\u7684 id \u7f16\u53f7\u4f1a\u589e\u52a0\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u63a8\u65ad\u5b83\u4e0d\u9700\u8981\u5b58\u50a8\u6570\u7ec4\u7684\u65e7\u503c\uff08\u53c2\u89c1\u4f8b\u5982 edelweiss\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u5b8c\u5168\u5076\u7136\u7684\u987a\u5e8f\u4f9d\u8d56\uff0c\u5931\u53bb\u4e86\u5229\u7528\u5e76\u884c\u6027\u6216\u77e2\u91cf\u5316\u7684\u80fd\u529b\uff0c\u4e5f\u5931\u53bb\u4e86\u5904\u7406\u4e71\u5e8f\u7f16\u8f91\u7684\u80fd\u529b\u3002\u4efb\u4f55\u4e0b\u6e38\u4ee3\u7801\u7684\u589e\u91cf\u7ef4\u62a4\u53ef\u80fd\u9700\u8981\u80fd\u591f\u533a\u5206\u5e8f\u5217\u7684\u8fde\u7eed\u7248\u672c\u3002\u8be5\u5e8f\u5217\u6309\u4e00\u4e2a\u952e\u8fdb\u884c\u6392\u5e8f\uff0c\u8be5\u952e\u5b9e\u73b0\u751a\u81f3\u6bd4\u8f83\u7684\u6210\u672c\u90fd\u5f88\u9ad8\u3002\u5feb\u901f\u547d\u4ee4\u5f0f\u89e3\u51b3\u65b9\u6848\u4f9d\u8d56\u4e8e\u4e0d\u9002\u5408\u589e\u91cf\u7ef4\u62a4\u7684\u5de7\u5999\u9690\u5f0f\u6bd4\u8f83\u3002\u867d\u7136\u7f16\u8f91\u7684\u76f8\u5bf9\u987a\u5e8f\u662f\u7a33\u5b9a\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c id=4 \u51fa\u73b0\u5728 id=12 \u4e4b\u524d\uff0c\u90a3\u4e48\u5b83\u603b\u662f\u5728\u5b83\u4e4b\u524d\uff09\uff0c\u4f46\u7edd\u5bf9\u4f4d\u7f6e\u975e\u5e38\u4e0d\u7a33\u5b9a\uff08\u5982\u679c\u63d2\u5165\u65b0\u7684\u7f16\u8f91\uff0c\u5219\u5fc5\u987b\u589e\u52a0\u5176\u540e\u6240\u6709\u5185\u5bb9\u7684\u4f4d\u7f6e\uff09\u3002\u56e0\u6b64\uff0c\u7edd\u5bf9\u4f4d\u7f6e\u7684\u4efb\u4f55\u660e\u786e\u8868\u793a\u90fd\u5c06\u5bfc\u81f4\u4e0b\u6e38\u5927\u91cf\u6d41\u5931\u3002\u540e\u4e00\u4e2a\u95ee\u9898\u5e76\u4e0d\u662f\u5173\u7cfb\u8bed\u8a00\u72ec\u6709\u7684\u2014\u2014\u7a33\u5b9a\u7684 id \u662f\u4efb\u4f55\u589e\u91cf\u7ef4\u62a4\u95ee\u9898\u7684\u6838\u5fc3\uff08\u4f8b\u5982\uff0c\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u589e\u91cf\u7b97\u6cd5\u901a\u5e38\u4f9d\u8d56\u4e8e\u6307\u5411\u6811\u8282\u70b9\u7684\u6307\u9488\u800c\u4e0d\u662f\u5b57\u7b26\u4f4d\u7f6e\uff09\u3002\u5173\u7cfb\u8bed\u8a00\u7684\u96be\u70b9\u5728\u4e8e\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u6307\u9488\u6807\u8bc6\u4f5c\u4e3a id\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u4e25\u683c\u7ea6\u675f\u7684\u6267\u884c\u987a\u5e8f\u3002\u4e5f\u8bb8\u4e00\u79cd\u9009\u62e9\u662f\u62e5\u6709\u4e00\u4e2a\u4e0b\u964d\u5230\u63d2\u5165\u548c\u5220\u9664\u7ea7\u522b\u7684\u9003\u751f\u8231\u53e3\u3002\u5728\u90a3\u4e2a\u7ea7\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u64cd\u4f5c\u5386\u53f2\u6784\u5efa\u7a33\u5b9a\u7684 id\uff0c\u7c7b\u4f3c\u4e8e\u4f7f\u7528\u6811\u8282\u70b9\u4f5c\u4e3a\u5e8f\u5217\u4e2d\u7684 id\u3002\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u5728\u58f0\u660e\u5c42\u4e2d\u65e0\u6cd5\u89c2\u5bdf\u5230 id \u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ee5\u4fbf\u63d2\u5165/\u5220\u9664\u7684\u987a\u5e8f\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u3002\n\u6211\u7684\u5de5\u4f5c\u76ee\u524d\u662f\u901a\u8fc7\u4e0e\u5728 github \u4e0a\u8d5e\u52a9\u6211\u7684\u4eba\u5206\u4eab\u60f3\u6cd5\u548c\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u6765\u8d44\u52a9\u7684\u3002", "note_en": "Doing this naively isn&#39;t particularly hard. The challenge here is to implement it as if writing a batch query, but in such a way that an incremental system like  materialize or  dida can efficiently update the result when new edits arrive. Not because this code would be particularly useful in itself, but because it helps discover the boundaries of what kinds of problems are possible to solve in this way.\n The exercise is a little like GPU programming, in that avoiding sequential algorithms and shared mutable data-structures requires very carefully separating the actual essential data dependencies of the problem from those accidentally introduced by typical programming techniques.\n   We have a tree of edits, each of which represents the insert of a single character.\n  Each edit has a unique id, which for the purpose of this simple example we&#39;ll say is just an integer.\n  Every other edit has a parent edit. The id of an edit is always greater than the id of its parent.\n To construct the actual text we take this tree of edits, sort the children of each edit by id, and then do an pre-order traversal of the tree.\n    create table  edit (id  integer , parent_id  integer , character  text ); insert into  edit  values  ( 0 ,  null ,  &#39;a&#39; ); insert into  edit  values  ( 1 ,  0 ,  &#39;b&#39; ); insert into  edit  values  ( 2 ,  0 ,  &#39;e&#39; ); insert into  edit  values  ( 3 ,  1 ,  &#39;c&#39; ); insert into  edit  values  ( 4 ,  1 ,  &#39;d&#39; ); insert into  edit  values  ( 5 ,  2 ,  &#39;f&#39; ); insert into  edit  values  ( 6 ,  5 ,  &#39;g&#39; ); insert into  edit  values  ( 7 ,  5 ,  &#39;h&#39; ); insert into  edit  values  ( 8 ,  5 ,  &#39;i&#39; );\n Given that we&#39;re trying to sort this set of edits, the natural reaction would be to start with something like:\n  But we&#39;re immediately stuck because there isn&#39;t an obvious sort key. The information that lets us decide whether one edit should become before or after another edit is implicit in the shape of the tree. To get an actual value to sort by, we would need to include all that information.\n with  recursive  path (id,  path , character)  as  (  select  edits . id ,  edits . id ,  edits . character  from  edits  where  edits . parent_id  is  null  union all select  child . id ,  parent . path  ||  &#39;,&#39;  ||  child . id ,  child . character  from  edits  as  child,  path  as  parent  where  child . parent_id  =  parent . id  ) select  *  from path order by path . path ;\n  This is the essence of the problem - sorting the edits by the ids in their path from the root. It&#39;s a beautiful solution, and for nicely balanced trees this would be the end of the story. But the trees for text editing crdts tend to be very deep and narrow so materializing these paths will make the storage cost look like O(N\u00b2).\n (We could maybe cut this down in the typical case by only looking at parts of the path with more than one child. But the worst case would still be O(N\u00b2))\n  In most languages, if explicitly storing the key was too expensive we&#39;d just sort using a custom comparison function instead.\n create function  compare_edits (id1  integer , id2  integer ) returns comparison  as  ???;  select  *  from  edit  order by  comparing compare_edits( edit . id );\n  It would be tricky to incrementally maintain such a sort operator. The set of comparisons would probably have to be explicitly stored. It&#39;s not obvious to me how to pick pivots in a way that makes the set of required comparisons stable with respect to small changes in the input. But it might be possible.\n  If using the builtin sort operator is not feasible, maybe we can explicitly traverse the tree ourselves.\n  with  recursiverightmost_child(id, parent_id)  as  (  select  max (id),  edit . parent_id  from  edit  where  edit . parent_id  is not  null  group by  parent_id),rightmost_descendant(id, child_id)  as  (  select  id, id  from  edit  union select  parent . parent_id ,  child . child_id  from  rightmost_child  as  parent, rightmost_descendant  as  child  where  parent . id  =  child . id ),rightmost_leaf(id, leaf_id)  as  (  select  id,  max (child_id)  as  leaf_id  from  rightmost_descendant  group by  id),prev_sibling(id, prev_id)  as  (  select  edit . id , (  select  max ( sibling . id )  from  edit  as  sibling  where  edit . parent_id  =  sibling . parent_id  and  edit . id  &gt;  sibling . id  )  as  prev_id  from  edit  where  prev_id  is not  null ),prev_edit(id, prev_id)  as  (  -- edits that have no prev siblings come after their parent  select  edit . id ,  edit . parent_id  from  edit  where  not  exists (  select  *  from  prev_sibling  where  prev_sibling . id  =  edit . id  )  union all  -- other edits come after the rightmost leaf of their prev sibling  select  edit . id ,  rightmost_leaf . leaf_id  from  edit, prev_sibling, rightmost_leaf  where  edit . id  =  prev_sibling . id  and  prev_sibling . prev_id  =  rightmost_leaf . id ),position(id, position, character)  as  (  -- root is at position 0  select  edit . id ,  0 ,  edit . character  from  edit  where  edit . parent_id  is  null  union all  -- every other edit comes after their prev edit  select  edit . id ,  position . position  +  1 ,  edit . character  from  edit, prev_edit, position  where  edit . id  =  prev_edit . id  and  prev_edit . prev_id  =  position . id ) select  * from  position order by  position . position ;\n   let sibling = edits (?edit . edit . (edit parent ~parent)) inlet rightmost_child = edits (?edit . edit . (max [edit ~parent])) inlet rightmost_leaf = fix (edits (?edit . edit . edit)) (?[rightmost_leaf] . (rightmost_leaf (?edit . ?leaf . edit . (max [leaf | (leaf rightmost_child)])))) inlet prev = edits (?edit . edit . let prev_siblings = (edit sibling) (?sibling . (when (edit &gt; sibling) sibling)) in if !!prev_siblings (max [prev_siblings] rightmost_leaf) (edit parent)) inlet position = fix (root . 0) (?[position] . (position | (position (?edit . ?pos . (edit ~prev) . (pos + 1))))) inedits (?edit . (edit position) . edit . (edit character))\n In either case, we&#39;re likely to have to maintain at least an index on  parent,  ~parent and  character and probably also indexes for many intermediate results too. It&#39;s somewhat concerning that it&#39;s not at all predictable from the code what those will be and how much they will cost.\n In the ideal case, the output of  prev is very stable and so should admit reasonably efficient incremental maintenance. But large parts of the output of  position will change on every new edit, so it is inherently inefficient to maintain.\n This is because  prev represents the ordering implicitly, in terms of relative ordering between adjacent edits, whereas  position represents the ordering explicitly by numbering each position in the sequence. In this problem, each new edit only changes the  prev value of the first edit to its right, but increments the  position number of every edit to its right.\n   We start with an empty sequence, in which we&#39;ll store the edits in the correct order.\n  For each edit, we insert it into the sequence by first scanning the sequence to find its parent, and then scanning to the right to find the correct point to insert the child.\n If the sequence is implemented as a b-tree then these scans and inserts are fairly cheap. We can also keep track of the number of characters in each branch of the b-tree so that queries like &#34;what is the edit id for the 142nd character&#34; can be efficiently answered by walking down the spine of the b-tree.\n  The imperative solution represents the ordering implicitly in terms of position in some ordered data-structure. Inserting a new edit near the beginning of the data-structure does not require explicitly updating the position of every later element - the position is implicit in the overall structure.\n   with  recursive sequence(last_id, characters, ids)  as  (  select  edit . id ,  edit . character , array[ edit . id ]  from  edit  where  edit . parent_id  is  null  union all select  edit . id ,  -- insert edit.character and edit.id at insertion_point  substring ( sequence . characters ,  1 ,  insertion_point . insertion_point - 1 )  ||  edit . character  ||  substring ( sequence . characters ,  insertion_point . insertion_point ),  sequence . ids [ 1 : insertion_point . insertion_point - 1 ]  ||  edit . id  ||  sequence . ids [ insertion_point . insertion_point :]  from  sequence, edit  join  lateral (  select  coalesce( min (i), array_length( sequence . ids ,  1 ) + 1 )  as  insertion_point  from  generate_subscripts( sequence . ids ,  1 )  as  i  -- array scan for parent of edit  join  lateral (  select  j  from  generate_subscripts( sequence . ids ,  1 )  as  j  where  sequence . ids [j]  =  edit . parent_id )  as  parent_ix on true  -- array scan for parent of ids[i]  join  lateral (  select  k  from  generate_subscripts( sequence . ids ,  1 )  as  k, edit  as  o_edit  where  sequence . ids [k]  =  o_edit . parent_id  and  sequence . ids [i]  =  o_edit . id )  as  o_parent_ix on true  -- find insertion point  where  i  &gt;  parent_ix . j  and  o_parent_ix . k  &lt;  parent_ix . j  )  as  insertion_point on true  where  sequence . last_id  +  1  =  edit . id ) select  *  from  sequence order by  last_id  desclimit  1 ;\n  Imp doesn&#39;t have any sequence data-structure, but we can fake one with relations to at least see what the code would look like.\n // functions for working with &#39;arrays&#39;let insert = ?[sequence] . ?position . ?item . let old = sequence (?old_position . ?old_item . (if (old_position &gt;= position) (old_position + 1) old_position) . old_item ) in old | (position . item)inlet find_min_pos = ?[sequence] . ?[cond] . ( let found = sequence (?pos . ?edit . (when (cond pos edit) pos)) in min [found] ) in// actual crdt codelet sequence = fix (0 . root) (?[sequence] . let next_edit = 1 + (max [sequence (?pos . ?edit . edit)]) in if !(edits next_edit) sequence let parent_pos = find_min_pos [sequence] [?pos . ?edit . ((next_edit parent) = edit)] in let insertion_point = find_min_pos [sequence] [?o_pos . ?o_edit . ( let o_parent_pos = find_min_pos [sequence] [?pos . ?edit . ((o_edit parent) = edit)] in (o_pos &gt; parent_pos) &amp; (parent_pos &gt; o_parent_pos) )] in insert [sequence] (if !!insertion_point insertion_point (max [sequence (?pos . ?edit . pos)])) next_edit ) insequence (?pos . ?edit . pos . edit . (edit character))\n This brings the current crappy interpreter to its knees, but I think that it is possible to execute it efficiently.\n For both the sql and imp versions it seems possible to incrementally maintain this. If we use a persistent data-structure to implement the array, then the inserts are not too expensive. If we hint to the runtime that no edits will be deleted and new edits will have increasing id numbers, then it can infer that it doesn&#39;t need to store old values of the arrays (see eg  edelweiss).\n On the other hand, we&#39;ve introduced a completely incidental sequential dependency, lost the ability to take advantage of parallelism or vectorization, and lost the ability to handle out-of-order edits. And incremental maintenance of any downstream code might require the ability to diff successive versions of the sequence.\n   The sequence is sorted by a key that is expensive to materialize or even compare. Fast imperative solutions rely on clever implicit comparisons that don&#39;t lend themselves to incremental maintenance.\n While the relative ordering of edits is stable (eg if  id=4 comes before  id=12 then it will always come before it) the absolute positions are very unstable (if a new edit is inserted, the positions of everything after it must be incremented). So any explicit representation of absolute position will cause massive churn downstream.\n The latter problem isn&#39;t unique to relational languages - stable ids are at the heart of any incremental maintenance problem (eg incremental algorithms in text editors often rely on pointers to tree nodes instead of character position). What makes life difficult in relational languages is that we can&#39;t use pointer identity as an id, because that requires a strongly-constrained execution order.\n Perhaps one option is to have an escape hatch that drops down to the level of inserts and deletes. At that level we can construct stable ids based on the history of operations, in a similar fashion to using tree nodes as ids into a sequence. We just have to guarantee that the details of the ids are not observable in the declarative layer so that the order of inserts/deletes does not affect the final result.\n My work is currently funded by sharing thoughts and work in progress with people who  sponsor me on github.", "posttime": "2021-08-06 12:05:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5173\u7cfb,ordering,\u7f16\u8f91", "title": "\u5173\u7cfb\u8bed\u8a00\u4e2d\u7684\u9690\u5f0f\u6392\u5e8f", "title_en": "Implicit Ordering in Relational Languages", "transed": 1, "url": "https://scattered-thoughts.net/writing/implicit-ordering-in-relational-languages", "via": "", "real_tags": ["\u5173\u7cfb", "ordering", "\u7f16\u8f91"]}, {"category": "", "categoryclass": "", "imagename": "ac1360095041925da55ebd2e07828d0b.jpg", "infoid": 1071706, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc\u516c\u53f8 Cloudflare Inc. \u7684\u80a1\u7968\u5728\u4eca\u5929\u7684\u76d8\u540e\u4ea4\u6613\u4e2d\u4e0b\u8dcc\uff0c\u6b64\u524d\u6295\u8d44\u8005\u5bf9\u8be5\u516c\u53f8\u7684\u8282\u62cd\u89c4\u6a21\u6ca1\u6709\u7559\u4e0b\u6df1\u523b\u5370\u8c61\u3002\u5728\u622a\u81f3 6 \u6708 30 \u65e5\u7684\u5b63\u5ea6\u4e2d\uff0cCloudflare \u62a5\u544a\u7684\u6536\u5165\u4e3a 1.524 \u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f 53%\u3002\u672c\u5b63\u5ea6\u51c0\u4e8f\u635f\u4e3a 3550 \u4e07\u7f8e\u5143\u6216\u6bcf\u80a1 2 \u7f8e\u5206\uff0c\u800c 2020 \u5e74\u540c\u4e00\u5b63\u5ea6\u4e3a 2610 \u4e07\u7f8e\u5143\u6216\u6bcf\u80a1 3 \u7f8e\u5206\u3002\u5206\u6790\u5e08\u6b64\u524d\u9884\u6d4b\u6536\u5165\u4e3a 1.46 \u4ebf\u7f8e\u5143\uff0c\u6bcf\u80a1\u4e8f\u635f\u4e3a 3 \u7f8e\u5206\u3002\u672c\u5b63\u5ea6\u7684\u4eae\u70b9\u5305\u62ec Cloudflare \u7684\u590d\u5408\u5e74\u589e\u957f\u7387\u589e\u957f\u4e86 68%\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u5c06\u5e74\u5316\u6536\u5165\u81f3\u5c11\u4e3a 100,000 \u7f8e\u5143\u7684\u5927\u5ba2\u6237\u6570\u91cf\u589e\u52a0\u5230 1,088 \u4e2a\u3002\u622a\u81f3\u672c\u5b63\u5ea6\u672b\uff0c\u8be5\u516c\u53f8\u76ee\u524d\u7ea6\u6709 19% \u7684\u5e78\u8fd0 1,000 \u5ba2\u6237\u4e3a\u4ed8\u8d39\u5ba2\u6237\u3002 Cloudflare \u5ba2\u6237\u603b\u6570\u73b0\u5728\u8d85\u8fc7 126,000\uff0c\u5176\u4e2d 48% \u7684\u6536\u5165\u6765\u81ea\u7f8e\u56fd\u4ee5\u5916\u3002\u8be5\u516c\u53f8\u73b0\u5728\u6bcf\u5929\u963b\u6b62\u8d85\u8fc7 870 \u4ebf\u4e2a\u7f51\u7edc\u5a01\u80c1\u3002 Cloudflare \u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u4fee\u00b7\u666e\u6797\u65af (Matthew Prince) \u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u4f5c\u4e3a\u4e0a\u5e02\u516c\u53f8\uff0c\u6211\u4eec\u8fce\u6765\u4e86\u6709\u53f2\u4ee5\u6765\u6700\u5f3a\u52b2\u7684\u5b63\u5ea6\uff0c\u6211\u4eec\u7684\u6536\u5165\u589e\u957f\u7ee7\u7eed\u52a0\u901f\uff0c\u540c\u6bd4\u589e\u957f 53%\u3002\u201d . \u201c\u65e0\u8bba\u6211\u4eec\u662f\u4e3a\u4e16\u754c\u4e0a\u6700\u590d\u6742\u7684\u7ec4\u7ec7\u63d0\u4f9b\u96f6\u4fe1\u4efb\u5b89\u5168\u89e3\u51b3\u65b9\u6848\uff0c\u8fd8\u662f\u901a\u8fc7 Cloudflare Workers \u5b9e\u73b0\u4e0b\u4e00\u4e2a\u5341\u4ebf\u7f8e\u5143\u7684\u4e1a\u52a1\uff0c\u6211\u4eec\u90fd\u5c06\u7ee7\u7eed\u4e13\u6ce8\u4e8e\u63d0\u4f9b\u5ba2\u6237\u6240\u4f9d\u8d56\u7684\u5b89\u5168\u3001\u53ef\u7f16\u7a0b\u7684\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u3002\u201d Cloudflare \u4f30\u8ba1\u4e0b\u4e00\u5b63\u5ea6\u7684\u6536\u5165\u5728 1.65 \u4ebf\u7f8e\u5143\u81f3 1.66 \u4ebf\u7f8e\u5143\u4e4b\u95f4\uff0c\u8c03\u6574\u540e\u7684\u6bcf\u80a1\u4e8f\u635f\u4e3a 4 \u7f8e\u5206\u81f3 3 \u7f8e\u5206\u3002\u5206\u6790\u5e08\u6b64\u524d\u9884\u8ba1\u6bcf\u80a1\u4e8f\u635f 2 \u7f8e\u5206\uff0c\u6536\u5165\u4e3a 1.574 \u4ebf\u7f8e\u5143\u3002\nCloudflare \u8868\u793a\uff0c\u4ed6\u4eec\u9884\u8ba1\u5168\u5e74\u6536\u5165\u5c06\u5728 6.29 \u4ebf\u7f8e\u5143\u81f3 6.33 \u4ebf\u7f8e\u5143\u4e4b\u95f4\uff0c\u8c03\u6574\u540e\u6bcf\u80a1\u4e8f\u635f\u5728 11 \u81f3 12 \u7f8e\u5206\u4e4b\u95f4\u3002\u5c3d\u7ba1\u5b63\u5ea6\u6570\u636e\u8d85\u51fa\u4e86\u5206\u6790\u5e08\u7684\u9884\u671f\u5e76\u4e14\u4e0e\u9884\u671f\u5927\u81f4\u76f8\u7b26\uff0c\u4f46\u6295\u8d44\u8005\u5e76\u672a\u7559\u4e0b\u6df1\u523b\u5370\u8c61\u3002 Cloudflare \u7684\u80a1\u4ef7\u5728\u76d8\u540e\u4ea4\u6613\u4e2d\u4e0b\u8dcc 5.5%\u3002\u4e0e\u6295\u8d44\u8005\u53ef\u80fd\u9884\u671f\u7684\u66f4\u597d\u76f8\u6bd4\uff0c\u6570\u636e\u5e76\u4e0d\u7cdf\u7cd5\u3002 Cloudflare \u4eca\u5e74\u8868\u73b0\u51fa\u8272\uff0c\u5176\u80a1\u4ef7\u4eca\u5e74\u8fc4\u4eca\u4e0a\u6da8\u4e86 63%\u3002\u4f34\u968f\u7740\u8fd9\u4e00\u6ea2\u4ef7\u800c\u6765\u7684\u662f\u5bf9\u5f3a\u52b2\u62a5\u544a\u7684\u9884\u671f\uff0c\u5c3d\u7ba1 Cloudflare \u5728\u524d\u56db\u4e2a\u5b63\u5ea6\u7684\u8868\u73b0\u8d85\u51fa\u4e86\u9884\u671f\uff0c\u4f46\u8fd9\u6b21\u7684\u5e45\u5ea6\u5e76\u4e0d\u5927\u3002\u52a0\u5165\u6211\u4eec\u7684 Cube \u4ff1\u4e50\u90e8\u548c Cube \u6d3b\u52a8\u4e13\u5bb6\u793e\u533a\uff0c\u8868\u8fbe\u60a8\u5bf9\u6211\u4eec\u4f7f\u547d\u7684\u652f\u6301\u3002\u52a0\u5165\u793e\u533a\uff0c\u5176\u4e2d\u5305\u62ec Amazon Web Services\uff0c\u5373\u5c06\u6210\u4e3a Amazon.com \u9996\u5e2d\u6267\u884c\u5b98 Andy Jassy\u3001\u6234\u5c14\u79d1\u6280\u516c\u53f8\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u8fc8\u514b\u5c14\u6234\u5c14\u3001\u82f1\u7279\u5c14\u9996\u5e2d\u6267\u884c\u5b98 Pat Gelsinger \u4ee5\u53ca\u66f4\u591a\u540d\u4eba\u548c\u4e13\u5bb6\u3002\u6211\u4eec\u5c06\u4e8e 6 \u6708 16 \u65e5\u4e3e\u884c\u7b2c\u4e8c\u6b21\u4e91\u521b\u4e1a\u5c55\u793a\u4f1a\u3002\u5355\u51fb\u6b64\u5904\u52a0\u5165\u514d\u8d39\u4e14\u5f00\u653e\u7684 Startup Showcase \u6d3b\u52a8\u3002", "note_en": "Shares in content delivery network company Cloudflare Inc. dropped in after-hours trading today after investors were not impressed by the size of the company\u2019s beat.\n For the quarter ending June 30, Cloudflare reported revenue of $152.4 million, up 53% year-over-year. Net loss in the quarter was $35.5 million or two cents per share compared with $26.1 million or three cents per share in the same quarter of 2020.\n Analysts had  been predicting revenue of $146 million and a loss per share of three cents.\n Highlights in the quarter included a 68% increase in Cloudflare\u2019s compound annual growth rate as the company increased its number of large customers, those with at least $100,000 in annualized revenue, to 1,088. As of the end of the quarter, the company now counts about 19% of the Fortunate 1,000 as paying customers.\n Total Cloudflare customers are now over 126,000, with 48% of revenue coming from outside of the U.S. The company is now blocking more than 87 billion cyber threats per day.\n \u201cWe had our strongest quarter ever as a public company, and our revenue growth continued to accelerate, growing 53% year-over-year,\u201d Matthew Prince, co-founder a chief executive officer of Cloudflare (pictured), said in  a statement. \u201cWhether we\u2019re offering zero trust security solutions to the world\u2019s most sophisticated organizations or enabling the next billion-dollar business with Cloudflare Workers, we remain focused on delivering secure, programmable network solutions that our customers rely on.\u201d\n Cloudflare is estimating revenue of between $165 million and $166 million for the quarter ahead and an adjusted loss per share of four cents to three cents. Analysts had  been predicting revenue of $157.4 million on a loss of two cents per share.\n For the full year, Cloudflare said that they expected revenue to come in at between $629 million and $633 million and an adjusted loss of between 11 and 12 cents per share.\n Despite beating analyst estimates with the quarterly figures and being roughly in line with expectations on estimates, investors were not impressed. Share in Cloudflare dropped 5.5% in after-hours trading.\n It wasn\u2019t so much that the figures were bad versus that investors may have expected better. Cloudflare has been a stellar performer this year, with its share price up 63% year to date. With that premium comes expectations of strong reports, and although Cloudflare has beaten predictions in its previous four quarters, it wasn\u2019t by a large margin this time.\n  Show your support for our mission by joining our Cube Club and Cube Event Community of experts. Join the community that includes Amazon Web Services and soon to be Amazon.com CEO Andy Jassy, Dell Technologies founder and CEO Michael Dell, Intel CEO Pat Gelsinger and many more luminaries and experts.\n We are holding our second cloud startup showcase on June 16.\u00a0 Click here to join the free and open Startup Showcase event.", "posttime": "2021-08-06 10:50:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u8d85\u51fa,paying,cloudflare", "title": "Cloudflare \u8d85\u51fa\u9884\u671f\uff0c\u7b2c\u4e8c\u5b63\u5ea6\u6536\u5165\u4e3a 1.524 \u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f 53%\uff0c48% \u6765\u81ea\u7f8e\u56fd\u4ee5\u5916\uff1b\u8d22\u5bcc 1,000 \u5f3a\u516c\u53f8\u4e2d\u7ea6\u6709 19% \u662f\u4ed8\u8d39\u5ba2\u6237", "title_en": "Cloudflare beats expectations with Q2 revenue of $152.4M, up 53% YoY, 48% came from outside of the US; says ~19% of Fortune 1,000 firms are paying customers", "transed": 1, "url": "https://siliconangle.com/2021/08/05/cloudflare-shares-drop-despite-beating-estimates-second-quarter-earnings/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u8d85\u51fa", "paying"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071705, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Berners-Lee \u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u7684\u513f\u5b50\uff0c1955 \u5e74\uff08\u4e0e\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u548c\u6bd4\u5c14\u00b7\u76d6\u8328\u540c\u5e74\uff09\u51fa\u751f\u4e8e\u4f26\u6566\uff0c\u5e76\u5728\u725b\u6d25\u5927\u5b66\u5b66\u4e60\u7269\u7406\u5b66\u3002\u5728 1980 \u5e74\u4ee3\u53d7\u96c7\u4e8e CERN \u671f\u95f4\uff0cBerners-Lee \u89c2\u5bdf\u5230\u8ddf\u8e2a\u8be5\u7ec4\u7ec7\u904d\u5e03\u5168\u7403\u7684\u6570\u5343\u540d\u7814\u7a76\u4eba\u5458\u7684\u9879\u76ee\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u591a\u4e48\u56f0\u96be\u3002\u6b63\u5982\u4ed6\u540e\u6765\u6240\u8bf4\uff1a\u201c\u5728\u90a3\u4e2a\u65f6\u4ee3\uff0c\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a\u6709\u4e0d\u540c\u7684\u4fe1\u606f\uff0c\u4f46\u4f60\u5fc5\u987b\u767b\u5f55\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u624d\u80fd\u83b7\u5f97\u5b83\u3002\u6b64\u5916\uff0c\u6709\u65f6\u60a8\u5fc5\u987b\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u5b66\u4e60\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002\u201d 1989 \u5e74 3 \u6708\uff0cBerners-Lee \u5411 CERN \u7684\u7ba1\u7406\u4eba\u5458\u63d0\u51fa\u4e86\u4e00\u4e2a\u4fe1\u606f\u7ba1\u7406\u7cfb\u7edf\u7684\u5efa\u8bae\uff0c\u8be5\u7cfb\u7edf\u4f7f\u7528\u8d85\u6587\u672c\u94fe\u63a5\u8fde\u63a5\u5230 Internet \u7684\u4e0d\u540c\u8ba1\u7b97\u673a\u4e0a\u7684\u6587\u6863\u3002 \uff08\u8d85\u6587\u672c\u662f 1963 \u5e74\u521b\u9020\u7684\u4e00\u4e2a\u672f\u8bed\uff0c\u5141\u8bb8\u4e00\u4e2a\u4eba\u901a\u8fc7\u5355\u51fb\u7f16\u7801\u7684\u5355\u8bcd\u6216\u77ed\u8bed\u6765\u83b7\u53d6\u6587\u6863\u6216\u4e00\u6bb5\u5185\u5bb9\u3002\uff09\u88ab\u4ed6\u7684\u8001\u677f\u6807\u8bb0\u4e3a\u201c\u6a21\u7cca\u4f46\u4ee4\u4eba\u5174\u594b\u201d\u7684\u63d0\u8bae\u6700\u521d\u672a\u88ab\u63a5\u53d7\u3002 Berners-Lee \u4e0e CERN \u7684\u6bd4\u5229\u65f6\u5de5\u7a0b\u5e08 Robert Cailliau \u5408\u4f5c\u5b8c\u5584\u4e86\u8be5\u63d0\u6848\uff0c1990 \u5e74\uff0c\u8fd9\u4f4d\u82f1\u56fd\u4eba\u7684\u8001\u677f\u7ed9\u4e86\u4ed6\u65f6\u95f4\u53c2\u4e0e\u8be5\u9879\u76ee\u3002\u5728\u6700\u521d\u5c06\u9879\u76ee\u79f0\u4e3a\u4fe1\u606f\u7ba1\u7406\u540e\uff0c\u4f2f\u7eb3\u65af-\u674e\u5c1d\u8bd5\u4e86\u8bf8\u5982\u4fe1\u606f\u77ff\u4e95\u548c\u4fe1\u606f\u7f51\u683c\u4e4b\u7c7b\u7684\u540d\u79f0\uff0c\u7136\u540e\u624d\u51b3\u5b9a\u4f7f\u7528\u4e07\u7ef4\u7f51\u3002\u5230 1990 \u5e74\u5e95\uff0cBerners-Lee \u4f7f\u7528\u53f2\u8482\u592b\u4e54\u5e03\u65af\u8bbe\u8ba1\u7684 NeXT \u8ba1\u7b97\u673a\u5f00\u53d1\u4e86\u4f5c\u4e3a Web \u57fa\u77f3\u7684\u5173\u952e\u6280\u672f\uff0c\u5305\u62ec\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00 (HTML)\uff1b\u8d85\u6587\u672c\u4f20\u8f93\u200b\u200b\u534f\u8bae (HTTP)\uff0c\u4e00\u7ec4\u7528\u4e8e\u901a\u8fc7 Web \u4f20\u8f93\u6570\u636e\u7684\u89c4\u5219\uff1b\u548c\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26 (URL)\uff0c\u6216\u7528\u4e8e\u67e5\u627e\u6587\u6863\u6216\u9875\u9762\u7684 Web \u5730\u5740\u3002\u4ed6\u8fd8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u6d4f\u89c8\u5668\u548c Web \u670d\u52a1\u5668\u8f6f\u4ef6\u3002 1991 \u5e74 8 \u6708 6 \u65e5\uff0c\u4f2f\u7eb3\u65af\u00b7\u674e (Berners-Lee) \u53d1\u5e03\u4e86\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u4e2a\u7f51\u7ad9\uff0cWeb \u5f00\u59cb\u4f5c\u4e3a Internet \u4e0a\u7684\u4e00\u9879\u516c\u5f00\u53ef\u7528\u670d\u52a1\u51fa\u73b0\u3002\u6070\u5982\u5176\u5206\u5730\uff0c\u8be5\u7ad9\u70b9\u662f\u5173\u4e8e\u4e07\u7ef4\u7f51\u9879\u76ee\u7684\uff0c\u63cf\u8ff0\u4e86 Web \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u5728\u4f2f\u7eb3\u65af-\u674e\u7684 NeXT \u8ba1\u7b97\u673a\u4e0a\u6258\u7ba1\u5728 CERN\uff0c\u8be5\u7ad9\u70b9\u7684 URL \u662f http://info.cern.ch\u3002 Berners-Lee \u5e76\u6ca1\u6709\u8bd5\u56fe\u4ece\u4ed6\u7684\u53d1\u660e\u4e2d\u83b7\u5229\uff0c\u5e76\u62d2\u7edd\u4e86 CERN \u8981\u6c42\u4e3a\u4ed6\u7684 Web \u6280\u672f\u7533\u8bf7\u4e13\u5229\u7684\u547c\u5401\u3002\u4ed6\u5e0c\u671b\u7f51\u7edc\u662f\u5f00\u653e\u548c\u514d\u8d39\u7684\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5feb\u5730\u6269\u5c55\u548c\u53d1\u5c55\u3002\u6b63\u5982\u4ed6\u540e\u6765\u8bf4\u7684\uff0c\u201c\u5982\u679c\u8fd9\u9879\u6280\u672f\u662f\u4e13\u6709\u7684\uff0c\u5e76\u4e14\u5728\u6211\u7684\u5b8c\u5168\u63a7\u5236\u4e4b\u4e0b\uff0c\u5b83\u53ef\u80fd\u4e0d\u4f1a\u8d77\u98de\u3002\u4f60\u4e0d\u80fd\u5efa\u8bae\u67d0\u7269\u6210\u4e3a\u4e00\u4e2a\u901a\u7528\u7a7a\u95f4\uff0c\u540c\u65f6\u4fdd\u6301\u5bf9\u5b83\u7684\u63a7\u5236\u3002\u201d 1993 \u5e74\uff0c\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u56fd\u5bb6\u8d85\u7ea7\u8ba1\u7b97\u5e94\u7528\u4e2d\u5fc3\u7684\u4e00\u4e2a\u56e2\u961f\u53d1\u5e03\u4e86 Mosaic\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u53d7\u5230\u516c\u4f17\u6b22\u8fce\u7684 Web \u6d4f\u89c8\u5668\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u91cc\uff0c\u96c5\u864e (1994)\u3001\u4e9a\u9a6c\u900a (1995)\u3001eBay (1995) \u548c\u8c37\u6b4c (1998) \u7b49\u7f51\u7ad9\u76f8\u7ee7\u63a8\u51fa\u3002\u6839\u636e Internet Live Stats \u7684\u6570\u636e\uff0c\u5230 2004 \u5e74 Facebook \u9996\u6b21\u4eae\u76f8\u65f6\uff0c\u5df2\u6709\u8d85\u8fc7 5100 \u4e07\u4e2a\u7f51\u7ad9\u3002\u4e0e\u6b64\u540c\u65f6\uff0c1994 \u5e74\uff0c\u4f2f\u7eb3\u65af-\u674e\u79bb\u5f00 CERN \u524d\u5f80\u9ebb\u7701\u7406\u5de5\u5b66\u9662\uff0c\u5728\u90a3\u91cc\u4ed6\u521b\u7acb\u4e86\u4e07\u7ef4\u7f51\u8054\u76df (W3C)\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ef4\u62a4 Web \u6807\u51c6\u7684\u7ec4\u7ec7\u3002\u8fd9\u4f4d\u4f4e\u8c03\u7684\u6709\u8fdc\u89c1\u7684\u4eba\u540e\u6765\u88ab\u300a\u65f6\u4ee3\u300b\u6742\u5fd7\u8bc4\u4e3a 20 \u4e16\u7eaa 100 \u4f4d\u6700\u91cd\u8981\u4eba\u7269\u4e4b\u4e00\uff0c\u5e76\u4e8e 2004 \u5e74\u88ab\u82f1\u56fd\u5973\u738b\u4f0a\u4e3d\u838e\u767d\u4e8c\u4e16\u5c01\u4e3a\u7235\u58eb\u3002 2009 \u5e74\uff0c\u4f2f\u7eb3\u65af-\u674e\u521b\u7acb\u4e86\u4e07\u7ef4\u7f51\u57fa\u91d1\u4f1a\uff0c\u8be5\u7ec4\u7ec7\u81f4\u529b\u4e8e\u786e\u4fdd\u7f51\u7edc\u9020\u798f\u4eba\u7c7b\u3002\u5728 2012 \u5e74\u4f26\u6566\u590f\u5b63\u5965\u8fd0\u4f1a\u5f00\u5e55\u5f0f\u4e0a\uff0c\u4ed6\u56e0\u53d1\u660e\u4e86\u7f51\u7edc\u800c\u611f\u5230\u8363\u5e78\uff0c\u5e76\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u8fd9\u662f\u7ed9\u6240\u6709\u4eba\u7684\u3002\u201d", "note_en": "The son of computer scientists, Berners-Lee was born in London in 1955 (the same year as Steve Jobs and Bill Gates) and studied physics at Oxford. While employed at CERN in the 1980s, Berners-Lee observed how tough it was to keep track of the projects and computer systems of the organization\u2019s thousands of researchers, who were spread around the globe. As he later stated: \u201cIn those days, there was different information on different computers, but you had to log on to different computers to get at it. Also, sometimes you had to learn a different program on each computer.\u201d\n   In March 1989, Berners-Lee gave managers at CERN a proposal for an information management system that used hypertext to link documents on different computers that were connected to the Internet. (Hypertext, a term coined in 1963, allows a person to get a document or piece of content by clicking on a coded word or phrase.) Labelled \u201cvague but exciting\u201d by his boss, the proposal at first wasn\u2019t accepted. Berners-Lee teamed up with Robert Cailliau, a Belgian engineer at CERN, to refine the proposal, and in 1990 the Englishman\u2019s boss gave him time to work on the project. After originally calling the project Information Management, Berners-Lee tried out names such as Mine of Information and Information Mesh before settling on WorldWideWeb.\n  By the end of 1990, Berners-Lee, using a Steve Jobs-designed NeXT computer, had developed the key technologies that are the bedrock of the Web, including Hypertext Markup Language (HTML), for creating Web pages; Hypertext Transfer Protocol (HTTP), a set of rules for transferring data across the Web; and Uniform Resource Locators (URLs), or Web addresses for finding a document or page. He also had devised a basic browser and Web server software.\n The beginning of the Web as a publicly available service on the Internet arrived on August 6, 1991, when Berners-Lee published the first-ever website. Fittingly, the site was about the World Wide Web project, describing the Web and how to use it. Hosted at CERN on Berners-Lee\u2019s NeXT computer, the site\u2019s URL was http://info.cern.ch.\n   Berners-Lee didn\u2019t try to cash in on his invention and rejected CERN\u2019s call to patent his Web technology. He wanted the Web to be open and free so it could expand and evolve as rapidly as possible. As he later said, \u201cHad the technology been proprietary, and in my total control, it would probably not have taken off. You can\u2019t propose that something be a universal space and at the same time keep control of it.\u201d\n In 1993, a team at the University of Illinois\u2019 National Center for Supercomputing Applications released Mosaic, the first Web browser to become popular with the general public. The next few years saw the launch of such websites as Yahoo (1994), Amazon (1995), eBay (1995) and Google (1998). By the time Facebook debuted in 2004, there were more than 51 million websites, according to  Internet Live Stats.\n Meanwhile, in 1994, Berners-Lee left CERN for the Massachusetts Institute of Technology, where he founded the World Wide Web Consortium (W3C), an organization that maintains standards for the Web. The low-profile visionary went on to be named one of Time Magazine\u2019s 100 Most Important People of the 20th Century, and in 2004 was knighted by Queen Elizabeth II. In 2009, Berners-Lee started the World Wide Web Foundation, an organization focused on ensuring the Web benefits humanity. During the opening ceremony at the 2012 Summer Olympics in London, he was honored for inventing the Web and tweeted, \u201cThis is for everyone.\u201d", "posttime": "2021-08-06 10:50:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e07\u7ef4\u7f51,years,web", "title": "\u4e07\u7ef4\u7f51\u4eca\u5929\u5df2\u7ecf 30 \u5c81\u4e86", "title_en": "The WWW is 30 years old today", "transed": 1, "url": "https://www.history.com/.amp/news/the-worlds-first-web-site", "via": "", "real_tags": ["\u4e07\u7ef4\u7f51", "years", "web"]}, {"category": "", "categoryclass": "", "imagename": "841844f98dd9f8ac68cd09ea6e8decec.gif", "infoid": 1071703, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u611f\u89c9\u5c31\u50cf\u6211\u66fe\u7ecf\u4e0e\u4e4b\u4ea4\u6613\u8fc7\u7684\u6bcf\u5bb6\u516c\u53f8\u548c\u7ec4\u7ec7\u6bcf\u5468\u90fd\u7ed9\u6211\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u751a\u81f3\u6bcf\u5929\u90fd\u6709\u4e00\u4e9b\u3002\u6709\u7684\u4e00\u5929\u591a\u6b21\u3002\u6211\u7684\u62b5\u62bc\u8d37\u6b3e\u7ecf\u7eaa\u4eba\u5728\u6211\u751f\u65e5\u548c\u5047\u671f\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u7684\u7259\u533b\u4e5f\u662f\u3002\u67d0\u4e9b\u96f6\u552e\u5546\u66f4\u9891\u7e41\u5730\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u5bb6\u5c45\u7528\u54c1\u516c\u53f8 Room &amp; Board \u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u5e0c\u671b\u6211\u80fd\u5347\u7ea7\u5230\u9002\u5408\u4f11\u606f\u5ba4\u7684\u5206\u533a\uff0c\u6216\u8005\u6073\u6c42\u6211\u8ba4\u8bc6\u6765\u81ea\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u624b\u5de5\u73bb\u7483\u5439\u5236\u5de5\u3002\u4ec5\u5728\u8fc7\u53bb\u7684\u4e00\u5468\u91cc\uff0c\u670d\u88c5\u96f6\u552e\u5546 Bonobos \u5c31\u7ed9\u6211\u53d1\u4e86\u4e5d\u6b21\u4fe1\u606f\uff0c\u515c\u552e Riviera \u77ed\u88e4\u3001\u6d41\u884c\u886c\u886b\uff0c\u751a\u81f3\u662f\u4ed6\u4eec\u627f\u8bfa\u4f1a\u201c\u5c55\u73b0\u6700\u597d\u7684\u81ea\u5df1\u201d\u7684\u659c\u7eb9\u68c9\u5e03\u88e4\u3002\u8fd9\u5f88\u8352\u8c2c\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u6211\u8981\u6c42\u63d0\u4f9b\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u548c\u6211\u7684\u62b5\u62bc\u8d37\u6b3e\u7ecf\u7eaa\u4eba\u4e00\u8d77\u5199\u4e86\u8d37\u6b3e\u3002\u6211\u4ece Room &amp; Board \u4e70\u4e86\u5bb6\u5177\uff0c\u4ece Bonobos \u4e70\u4e86\u88e4\u5b50\u3002\u800c\u4e14\uff0c\u662f\u7684\uff0c\u6211\u77e5\u9053\u6211\u53ef\u4ee5\u968f\u65f6\u53d6\u6d88\u8ba2\u9605\u6216\u963b\u6b62\u5b83\u4eec\u3002\u4f46\u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u591a\u7535\u5b50\u90ae\u4ef6\uff1f\u5ba2\u6237\u600e\u4e48\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u5f88\u6709\u5438\u5f15\u529b\uff1f\u660e\u786e\u5730\u8bf4\uff1a\u516c\u53f8\u5e0c\u671b\u4f60\u8d2d\u4e70\u4ed6\u4eec\u7684\u4e1c\u897f\uff0c\u800c\u7535\u5b50\u90ae\u4ef6\u662f\u8ba9\u4f60\u770b\u5230\u5b83\u7684\u597d\u65b9\u6cd5\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u60a8\u9996\u5148\u770b\u5230\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u7684\u539f\u56e0\u8fdc\u6bd4\u60a8\u60f3\u8c61\u7684\u8981\u590d\u6742\u5f97\u591a\uff0c\u6d89\u53ca\u5230\u5c42\u5c42\u5947\u602a\u7684\u4e92\u64cd\u4f5c\u6280\u672f\u4ee5\u53ca\u5728\u7535\u5b50\u90ae\u4ef6\u4e1a\u52a1\u4e2d\u4e3a\u4e89\u593a\u6743\u529b\u548c\u63a7\u5236\u6743\u800c\u8fdb\u884c\u7684\u770b\u4e0d\u89c1\u7684\u6597\u4e89\u3002\u7ed3\u679c\u2014\u2014\u66f4\u591a\u5173\u4e8e\u201c\u9002\u5408\u4f60\u7e41\u5fd9\u65e5\u7a0b\u7684\u88e4\u5b50\u201d\u7684\u4fe1\u4ef6\u2014\u2014\u4e0e\u5176\u8bf4\u662f\u4e00\u4e2a\u6709\u610f\u7684\u7b56\u7565\uff0c\u4e0d\u5982\u8bf4\u662f\u4e00\u4e2a\u5947\u602a\u7684\u88c5\u7f6e\u7684\u7528\u5c3d\u3002\u6211\u4eec\u90fd\u9677\u5165\u4e86\u56f0\u5883\u3002\u5173\u4e8e\u6536\u4ef6\u7bb1\uff0c\u60a8\u5fc5\u987b\u4e86\u89e3\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\uff0c\u60a8\u5bf9\u7535\u5b50\u90ae\u4ef6\u6240\u505a\u7684\u4e8b\u60c5\u4f1a\u76f4\u63a5\u5f71\u54cd\u60a8\u662f\u5426\u4f1a\u770b\u5230\u4e0b\u4e00\u5c01\u90ae\u4ef6\u3002\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u4f7f\u7528\u7684\u7535\u5b50\u90ae\u4ef6\u5e73\u53f0\u80cc\u540e\u7684\u4e09\u5927\u516c\u53f8\u2014\u2014\u8c37\u6b4c\uff08Gmail\uff09\u3001\u5fae\u8f6f\uff08Outlook \u548c Hotmail\uff09\u548c\u5a01\u745e\u68ee\uff08\u7f8e\u56fd\u5728\u7ebf\u548c\u96c5\u864e\u90ae\u7bb1\uff09\u2014\u2014\u90fd\u8bbe\u8ba1\u4e86\u4ed6\u4eec\u7684\u4ea7\u54c1\u6765\u4fdd\u62a4\u4f60\u7684\u6536\u4ef6\u7bb1\uff0c\u5e76\u4f7f\u7528\u6291\u5236\u4f60\u4e0d\u53d1\u9001\u90ae\u4ef6\u7684\u8f6f\u4ef6\u6765\u4fdd\u62a4\u4f60\u7684\u6536\u4ef6\u7bb1\u4e0d\u60f3\u3002\u6253\u5f00\u7535\u5b50\u90ae\u4ef6\u5e76\u5355\u51fb\u5176\u4e2d\u7684\u94fe\u63a5\u53ef\u80fd\u4f1a\u544a\u8bc9\u8f6f\u4ef6\u7684\u7b97\u6cd5\u60a8\u66f4\u60f3\u8981\u5b83\u3002\u6240\u4ee5\u53ef\u80fd\u4f1a\u5411\u4e0b\u6eda\u52a8\u7535\u5b50\u90ae\u4ef6\u7684\u6b63\u6587\uff0c\u6216\u8005\u82b1\u4e00\u5b9a\u7684\u65f6\u95f4\u9605\u8bfb\u5b83\uff0c\u6216\u8005\u7ed9\u5b83\u52a0\u6ce8\u661f\u6807\uff0c\u6216\u8005\u5c06\u5b83\u5f52\u6863\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d\u3002\u540c\u65f6\uff0c\u5ffd\u7565\u5176\u4ed6\u6d88\u606f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u90ae\u7bb1\u8f6f\u4ef6\u5f00\u59cb\u5783\u573e\u90ae\u4ef6\uff0c\u751a\u81f3\u963b\u6b62\u53d1\u4ef6\u4eba\u3002\u7535\u5b50\u90ae\u4ef6\u662f\u516c\u53f8\u76f4\u63a5\u8054\u7cfb\u5ba2\u6237\u7684\u5c11\u6570\u51e0\u79cd\u65b9\u5f0f\u4e4b\u4e00\u3002 Oracle \u8425\u9500\u7814\u7a76\u4e3b\u7ba1\u67e5\u5fb7\u00b7S\u00b7\u6000\u7279 (Chad S. White) \u544a\u8bc9\u6211\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7edd\u5927\u591a\u6570\u4eba\u8868\u793a\uff0c\u4ed6\u4eec\u5e0c\u671b\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u4e86\u89e3\u54c1\u724c\u4fe1\u606f\u3002\u8fd9\u5c31\u662f\u90ae\u7bb1\u8f6f\u4ef6\u5f00\u59cb\u7981\u6b62\u90ae\u4ef6\u7684\u539f\u56e0\u2014\u2014\u4ee5\u4fdd\u62a4\u4eba\u4eec\u514d\u53d7\u516c\u53f8\u53d1\u9001\u8fc7\u591a\u7535\u5b50\u90ae\u4ef6\u7684\u8bf1\u60d1\u3002\u4f5c\u4e3a\u56de\u5e94\uff0c\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4eba\u5458\u7740\u8ff7\u4e8e\u201c\u53ef\u4f20\u9012\u6027\u201d\uff0c\u6216\u8005\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u7684\u5185\u5bb9\u548c\u9891\u7387\u53ef\u80fd\u5982\u4f55\u5e2e\u52a9\u8fd9\u4e9b\u90ae\u4ef6\u9996\u5148\u771f\u6b63\u8fdb\u5165\u60a8\u7684\u6536\u4ef6\u7bb1\u3002\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u521b\u9020\u4e86\u65b0\u7684\u548c\u5947\u602a\u7684\u53cd\u9988\u5faa\u73af\uff0c\u5176\u4e2d\u4e00\u4e9b\u516c\u53f8\u548c\u67d0\u4e9b\u6d88\u606f\u53ef\u80fd\u6bd4\u4ee5\u524d\u66f4\u5bb9\u6613\u5230\u8fbe\u60a8\u7684\u6536\u4ef6\u7bb1\uff0c\u800c\u5176\u4ed6\u516c\u53f8\u5728\u60a8\u770b\u5230\u5b83\u4eec\u4e4b\u524d\u5c31\u88ab\u5783\u573e\u90ae\u4ef6\u3001\u88ab\u8c34\u8d23\u4e3a\u5783\u573e\u90ae\u4ef6\u3001\u88ab\u5220\u9664\u7b49\u3002\u7ed3\u679c\uff0c\u60a8\u7684\u4e2a\u4eba\u6536\u4ef6\u7bb1\u9010\u6e10\u53d8\u5f97\u4e0d\u518d\u50cf\u90ae\u7bb1\uff0c\u800c\u66f4\u50cf\u662f\u8fdb\u5165\u60a8\u7ef4\u62a4\u7684\u6bcf\u4e2a\u4e1a\u52a1\u5173\u7cfb\u7684\u866b\u6d1e\uff1a\u60a8\u7684\u94f6\u884c\uff1b\u60a8\u7684\u516c\u7528\u4e8b\u4e1a\u63d0\u4f9b\u5546\uff1b\u4f60\u7684\u8d85\u5e02\uff1b\u60a8\u6700\u559c\u6b22\u7684\u7cbe\u54c1\u5e97\u3001\u9910\u5385\u3001\u5bb6\u5c45\u7528\u54c1\u4f9b\u5e94\u5546\uff0c\u4ee5\u53ca\u6240\u6709\u5176\u4ed6\u5730\u65b9\u3002\u8fd9\u662f\u60a8\u81ea\u5df1\u7684\u6570\u5b57\u5546\u4e1a\u533a\uff1a\u6253\u5f00\u7535\u5b50\u90ae\u4ef6\u5c31\u50cf\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u6216\u624b\u673a\u4e0a\u8bbf\u95ee\u4e00\u4e2a\u5c0f\u5546\u573a\uff0c\u6bcf\u4e2a\u5546\u5e97\u90fd\u7d27\u6328\u7740\u5176\u4ed6\u5546\u5e97\u3002\u51e0\u5e74\u524d\uff0cGmail \u901a\u8fc7\u5f15\u5165\u4fc3\u9500\u6587\u4ef6\u5939\uff0c\u5c06\u5783\u573e\u90ae\u4ef6\u91cd\u65b0\u5b9a\u4f4d\u4e3a\u8425\u9500\uff0c\u4f7f\u8fd9\u4e2a\u6bd4\u55bb\u5177\u4f53\u5316\u3002\u5f53\u60a8\u6709\u5fc3\u60c5\u8d2d\u7269\u65f6\uff0c\u53ea\u9700\u53c2\u52a0\u4fc3\u9500\u6d3b\u52a8\u5e76\u67e5\u770b\u6240\u63d0\u4f9b\u7684\u5546\u54c1\uff08\u6216\u641c\u7d22\u6700\u559c\u6b22\u7684\u54c1\u724c\u4ee5\u67e5\u770b\u6700\u65b0\u5546\u54c1\uff09\u3002\u5982\u679c\u4f01\u4e1a\u548c\u79d1\u6280\u516c\u53f8\u5728\u540c\u4e00\u9875\u9762\u4e0a\uff0c\u8fd9\u5c06\u662f\u6545\u4e8b\u7684\u7ed3\u5c40\u3002\u7b97\u6cd5\u4f1a\u4e0d\u65ad\u53d8\u5316\uff0c\u76f4\u5230\u60a8\u4e0e\u8db3\u591f\u591a\u7684\u4fc3\u9500\u7535\u5b50\u90ae\u4ef6\u4e92\u52a8\uff0c\u60a8\u559c\u6b22\u7684\u6bcf\u5bb6\u5546\u5e97\u90fd\u4f1a\u53d1\u9001\u5b8c\u7f8e\u5b9a\u65f6\u7684\u6d88\u606f\uff0c\u6ee1\u8db3\u60a8\u7684\u5404\u79cd\u9700\u6c42\u548c\u613f\u671b\u3002\u6ee1\u8db3\uff0c\u9ad8\u5174\uff0c\u60a8\u8d2d\u4e70\u4e86\u5e7f\u544a\u7ed9\u60a8\u7684\u6bcf\u4ef6\u5546\u54c1\u3002\u5f53\u7136\uff0c\u5b9e\u9645\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u4eba\u4eec\u8ba4\u4e3a\u5e0c\u671b\u6536\u5230\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u516c\u53f8\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4f46\u5728\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u6d88\u8d39\u8005\u8868\u793a\u4ed6\u4eec\u6536\u5230\u4e86\u8fc7\u591a\u7684\u4fc3\u9500\u7535\u5b50\u90ae\u4ef6\u3002\u4e2a\u6027\u5316\u5e94\u8be5\u8ba9\u76f8\u5173\u7684\u4fe1\u606f\u901a\u8fc7\uff0c\u4e0d\u76f8\u5173\u7684\u4fe1\u606f\u5c31\u4f1a\u505c\u6ede\u4e0d\u524d\u3002\u4f46\u201c\u76f8\u5173\u6027\u201d\u7684\u542b\u4e49\u662f\u4e0d\u65ad\u53d8\u5316\u7684\u3002\u5982\u679c\u6211\u9700\u8981\u65b0\u88e4\u5b50\uff0c\u53ef\u80fd\u4f1a\u6b22\u8fce\u670d\u88c5\u5e7f\u544a\u3002\u5982\u679c\u6211\u4e0d\u8fd9\u6837\u505a\uff0c\u90a3\u5c31\u592a\u70e6\u4eba\u4e86\u3002\n\u5173\u4e8e\u6536\u4ef6\u7bb1\uff0c\u60a8\u5fc5\u987b\u4e86\u89e3\u7684\u7b2c\u4e8c\u4ef6\u4e8b\u662f\uff0c\u51b3\u5b9a\u7b97\u6cd5\u5141\u8bb8\u63a5\u6536\u54ea\u4e9b\u7535\u5b50\u90ae\u4ef6\u7684\u4e0d\u4ec5\u4ec5\u662f\u60a8\u7684\u4e2a\u4eba\u9009\u62e9\u3002\u5728\u51b3\u5b9a\u54ea\u4e9b\u90ae\u4ef6\u901a\u8fc7\u60a8\u7684\u6536\u4ef6\u7bb1\u65f6\uff0cGmail \u548c\u5176\u4ed6\u7535\u5b50\u90ae\u4ef6\u8fd8\u4f1a\u6c47\u603b\u6240\u6709\u7535\u5b50\u90ae\u4ef6\u7528\u6237\u7684\u884c\u4e3a\u3002\u5982\u679c\u6ca1\u6709\u8db3\u591f\u591a\u7684\u4eba\u53c2\u4e0e\uff0c\u90a3\u4e48\u53d1\u4ef6\u4eba\u7684\u8bb8\u591a\u6216\u5168\u90e8\u6d88\u606f\u53ef\u80fd\u65e0\u6cd5\u5230\u8fbe\u6536\u4ef6\u4eba\u3002\u5982\u679c\u5f88\u591a\u4eba\u8fd9\u6837\u505a\uff0c\u5b83\u53ef\u4ee5\u8986\u76d6\u4e2a\u4eba\u504f\u597d\u3002\u4f60\u7684\u6536\u4ef6\u7bb1\u5c31\u50cf\u4e00\u4e2a\u8d2d\u7269\u4e2d\u5fc3\uff0c\u662f\u7684\uff0c\u4f46\u5b83\u4f1a\u4e0d\u65ad\u5730\u6539\u53d8\u5f62\u72b6\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u4e3a\u76ee\u524d\u5728\u91cc\u9762\u7684\u8d2d\u7269\u8005\u5efa\u7acb\u5408\u9002\u7684\u5546\u5e97\u3002\u6d88\u8d39\u8005\u7535\u5b50\u90ae\u4ef6\u662f\u4e00\u9879\u96c6\u4f53\u4e8b\u52a1\uff0c\u7531\u8ba1\u7b97\u673a\u7cbe\u5fc3\u7b56\u5212\uff0c\u505a\u51fa\u9690\u85cf\u7684\u9009\u62e9\uff0c\u5f88\u5c11\u6709\u4eba\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\uff0c\u5305\u62ec\u4f01\u4e1a\u672c\u8eab\u3002\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u53d1\u4ef6\u4eba\u5e26\u6765\u707e\u96be\u6027\u7684\u540e\u679c\u3002\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u516c\u53f8 SparkPost \u7684\u6218\u7565\u603b\u76d1 April Mullen \u544a\u8bc9\u6211\uff0c\u4e00\u5bb6\u91d1\u878d\u670d\u52a1\u516c\u53f8\u6709\u6570\u767e\u4e07\u4efd\u62a5\u8868\u901a\u77e5\u88ab\u4e00\u5bb6\u4e3b\u8981\u7535\u5b50\u90ae\u4ef6\u63d0\u4f9b\u5546\u5c4f\u853d\uff0c\u5bfc\u81f4\u9700\u8981\u6602\u8d35\u7684\u6253\u5370\u5907\u4efd\u6765\u6ee1\u8db3\u76d1\u7ba1\u8981\u6c42\u3002\u50cf\u8fd9\u6837\u7684\u6545\u4e8b\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6574\u4e2a\u54a8\u8be2\u548c\u8f6f\u4ef6\u670d\u52a1\u90e8\u95e8\uff08\u79f0\u4e3a\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u63d0\u4f9b\u5546\uff09\u5982\u96e8\u540e\u6625\u7b0b\u822c\u6d8c\u73b0\u4ee5\u89e3\u51b3\u53ef\u4ea4\u4ed8\u6027\u95ee\u9898\u3002\u8425\u9500\u4eba\u5458\u5f53\u7136\u4f1a\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u4f46\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u8bd5\u56fe\u7406\u89e3\u548c\u9a6f\u670d Gmail \u548c\u96c5\u864e\u90ae\u4ef6\u8fd9\u4e9b\u5947\u602a\u7684\u3001\u4e0d\u53ef\u77e5\u7684\u673a\u5236\uff0c\u6700\u7ec8\u51b3\u5b9a\u4ed6\u4eec\u7684\u6d88\u606f\u662f\u5426\u80fd\u591f\u901a\u8fc7\u3002 Bonobos \u7b49\u54c1\u724c\u6839\u636e\u4ed6\u4eec\u80fd\u591f\u4ece\u4f20\u9012\u7684\u6d88\u606f\u4e2d\u63d0\u53d6\u7684\u6709\u9650\u4fe1\u53f7\uff08\u6216\u8005\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u7684\u5ba2\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u6216\u7f51\u7ad9\u4e0a\u660e\u786e\u8bbe\u7f6e\u7684\u504f\u597d\uff09\u8c03\u6574\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u6d3b\u52a8\u3002\u9274\u4e8e\u6240\u6709\u8fd9\u4e9b\u673a\u5236\uff0cWhite \u548c Mullen \u7b49\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4e13\u5bb6\u8ba4\u4e3a\u62e5\u6709\u6240\u6709\u63a7\u5236\u6743\u7684\u662f\u6d88\u8d39\u8005\u3002\u4ed6\u4eec\u4e89\u8fa9\u8bf4\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u4eba\u6536\u5230\u7535\u5b50\u90ae\u4ef6\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5b83\u4eec\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u6b63\u786e\u7684\u3002\u5373\u4f7f\u6211\u611f\u89c9\u5230\u6211\u6536\u5230\u4e86\u592a\u591a\u6765\u81ea Bonobos \u7684\u77ed\u88e4\u5e7f\u544a\u6216\u6765\u81ea Room &amp; Board \u7684\u8336\u51e0\u5e7f\u544a\uff0c\u4f46\u4e5f\u6709\u8db3\u591f\u591a\u7684\u5176\u4ed6\u4eba\u5bf9\u6b64\u611f\u5230\u6ee1\u610f\uff0c\u5426\u5219\u7535\u5b50\u90ae\u4ef6\u5c06\u65e0\u6cd5\u9001\u8fbe\u3002 \uff08Room &amp; Board \u62d2\u7edd\u5c31\u8fd9\u4e2a\u6545\u4e8b\u63a5\u53d7\u91c7\u8bbf\u3002Bonobos \u8425\u9500\u526f\u603b\u88c1 Helena Tse \u544a\u8bc9\u6211\uff0c\u8be5\u516c\u53f8\u7684\u9000\u8ba2\u7387\u201c\u4e0e\u884c\u4e1a\u6807\u51c6\u76f8\u6bd4\u975e\u5e38\u4f4e\u201d\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u5177\u4f53\u6570\u5b57\u3002\uff09\u6211\u53ef\u4ee5\u901a\u8fc7\u53d6\u6d88\u8ba2\u9605\u6216\u53d6\u6d88\u8ba2\u9605\u968f\u65f6\u5e2e\u52a9\u66f4\u6539\u8be5\u7b49\u5f0f\u3002\u4ee5\u8861\u91cf\u6211\u5174\u8da3\u7684\u673a\u5236\u8861\u91cf\uff0c\u6211\u4ecd\u7136\u611f\u5174\u8da3\u3002\u4f46\u662f\uff0c\u8fd9\u4e5f\u662f\u8352\u8c2c\u7684\u3002\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u5835\u585e\u6bcf\u4e2a\u4eba\u7684\u6536\u4ef6\u7bb1\u7684\u6839\u672c\u539f\u56e0\u662f\uff0c\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4ee3\u8868\u4e86\u516c\u53f8\u4e0e\u5176\u5ba2\u6237\u548c\u90ae\u7bb1\u670d\u52a1\u4e92\u52a8\u7684\u96c6\u4f53\u7ed3\u679c\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4e0d\u4ee3\u8868\u6211\u3002\u8bb8\u591a\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u54c1\u724c\u4f3c\u4e4e\u5bf9\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u7684\u4e13\u4e1a\u6280\u5de7\u5982\u6b64\u7740\u8ff7\uff0c\u4ee5\u81f3\u4e8e\u5c06\u5176\u4e0e\u5ba2\u6237\u4f53\u9a8c\u8131\u94a9\u3002\u5f53\u6211\u8ba9 Tse \u89e3\u91ca\u6211\u4e2a\u4eba\u53ef\u80fd\u4f1a\u6536\u5230\u8fd9\u4e48\u591a Bonobos \u7535\u5b50\u90ae\u4ef6\u7684\u8fc7\u7a0b\u65f6\uff0c\u5979\u5f15\u7528\u4e86 KPI\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u7ecf\u8425\u4f01\u4e1a\u7684\u7ee9\u6548\u6307\u6807\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u7528\u4e8e\u5224\u65ad\u5458\u5de5\u7ee9\u6548\u3002\u5979\u8fd8\u544a\u8bc9\u6211\uff0c\u8be5\u516c\u53f8\u201c\u4e0d\u65ad\u63a2\u7d22\u5982\u4f55\u6539\u8fdb\u6211\u4eec\u7684\u5de5\u5177\u5305\uff0c\u4ee5\u81ea\u52a8\u5316\u548c\u4f18\u5316\u9891\u7387\u4e1a\u52a1\u89c4\u5219\u3002\u201d\u50cf\u8fd9\u6837\u7684\u4e13\u4e1a\u5ba3\u8a00\u53ef\u80fd\u4f1a\u5728\u884c\u4e1a\u4f1a\u8bae\u4e0a\u5f15\u8d77\u70b9\u5934\uff0c\u4f46\u5b83\u8ba9\u6211\u626e\u6f14\u4e86\u6570\u636e\u751f\u6210\u8005\u7684\u89d2\u8272\uff0c\u800c\u4e0d\u662f\u4ed8\u8d39\u5ba2\u6237\u2014\u2014\u66f4\u4e0d\u7528\u8bf4\u4e00\u4e2a\u4e0d\u9700\u8981\u8fd9\u4e48\u591a\u9080\u8bf7\u6765\u53c2\u4e0e Riviera \u77ed\u88e4\u7684\u6d3b\u7740\u7684\u4eba\u4e86.\u7532\u9aa8\u6587\u7684 Chad White \u7528\u4e00\u79cd\u7a0d\u5fae\u4eba\u6027\u5316\u7684\u65b9\u5f0f\u6765\u8c08\u8bba\u7535\u5b50\u90ae\u4ef6\uff0c\u79f0\u4e4b\u4e3a\u5bf9\u8bdd\u3002\u4ed6\u8bf4\uff0c\u6253\u5f00\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u5c31\u50cf\u4e00\u4e2a\u4f1a\u8bdd\u70b9\u5934\u3002 \u201c\u4f60\u6b63\u5728\u548c\u67d0\u4eba\u8bf4\u8bdd\uff0c\u5982\u679c\u4f60\u770b\u5230\u6709\u4eba\u5728\u70b9\u5934\uff0c\u8fd9\u8868\u660e\u4ed6\u4eec\u6b63\u5728\u6ce8\u610f\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u4eec\u559c\u6b22\u5b83\uff0c\u4f46\u8fd9\u8868\u660e\u4ed6\u4eec\u6b63\u5728\u5173\u6ce8\u3002\u201d\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u4f46\u5bf9\u8bdd\u662f\u53cc\u5411\u7684\u3002\u6211\u6000\u7591\u666e\u901a\u4eba\u662f\u5426\u7406\u89e3\u4ed6\u4eec\u5728\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u505a\u51fa\u7684\u201c\u624b\u52bf\u201d\u4f1a\u88ab\u53d1\u4ef6\u4eba\u89c6\u4e3a\u611f\u5174\u8da3\u7684\u4fe1\u53f7\u2014\u2014\u5c24\u5176\u662f\u8425\u9500\u4eba\u5458\u3001\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u63d0\u4f9b\u5546\u548c\u90ae\u7bb1\u63d0\u4f9b\u5546\u5bf9\u5b83\u4eec\u7684\u89e3\u91ca\u65b9\u5f0f\u3002\u6000\u7279\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e0d\u540c\u610f\u6211\u7684\u89c2\u70b9\uff0c\u4f46\u4ed6\u786e\u5b9e\u627f\u8ba4\u8425\u9500\u4eba\u5458\u6709\u65f6\u4f1a\u8fc7\u4e8e\u6267\u7740\u4e8e\u4ed6\u4eec\u5e0c\u671b\u5ba2\u6237\u9075\u5faa\u7684\u201c\u9ec4\u91d1\u4e4b\u8def\u201d\u3002\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4eba\u5458\u53ef\u80fd\u6253\u7b97\u6253\u5f00\u5e76\u5355\u51fb\u4e00\u6761\u6d88\u606f\uff0c\u76f4\u63a5\u4fc3\u6210\u9500\u552e\u3002\u4f46\u6d88\u8d39\u8005\u884c\u4e3a\u6bd4\u8fd9\u8981\u6df7\u4e71\u5f97\u591a\u3002\u5c31\u50cf\u6211\u7684\u62b5\u62bc\u8d37\u6b3e\u7ecf\u7eaa\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\u63d0\u9192\u6211\u4ed6\u7684\u5b58\u5728\uff0c\u4e5f\u8bb8\u6211\u5e94\u8be5\u5bc6\u5207\u5173\u6ce8\u62b5\u62bc\u8d37\u6b3e\u5229\u7387\uff0c\u4ee5\u9632\u518d\u878d\u8d44\u6709\u5438\u5f15\u529b\uff0c\u6240\u4ee5\u4e00\u4e2a\u54c1\u724c\u7684\u7535\u5b50\u90ae\u4ef6\u53ef\u80fd\u53ea\u662f\u63d0\u9192\u6211\u6211\u6253\u7b97\u5728\u67d0\u4e9b\u65f6\u5019\u4e70\u88e4\u5b50\u89c2\u70b9\u3002\u6000\u7279\u544a\u8bc9\u6211\uff0c\u6709\u4e9b\u4eba\u4f1a\u6536\u5230\u6765\u81ea\u96f6\u552e\u5546\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u7136\u540e\u8f6c\u800c\u53bb\u5546\u5e97\u3002\u7238\u7238\u53ef\u80fd\u4f1a\u6536\u5230\u82b1\u5e97\u7684\u6bcd\u4eb2\u8282\u8425\u9500\u4fe1\u606f\uff0c\u5e76\u63d0\u9192\u5b69\u5b50\u4eec\u7ed9\u4ed6\u4eec\u7684\u7956\u6bcd\u5bc4\u4e00\u5f20\u5361\u7247\u3002\u5176\u4ed6\u4eba\u53ef\u80fd\u53ea\u662f\u5c06\u90ae\u4ef6\u50a8\u5b58\u5728\u4ed6\u4eec\u7684 Gmail \u4fc3\u9500\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u5728\u4ed6\u4eec\u60f3\u8d2d\u7269\u65f6\u4f7f\u7528\uff0c\u5c06\u6536\u4ef6\u7bb1\u672c\u8eab\u53d8\u6210\u8d2d\u7269\u4e4b\u65c5\u3002\u90ae\u7bb1\u63d0\u4f9b\u5546\u65e0\u6cd5\u5bfb\u627e\u8fd9\u4e9b\u7c7b\u578b\u7684\u4ea4\u4e92\u3002\n\u7535\u5b50\u90ae\u4ef6\u4e0d\u662f\u60a8\u60f3\u8981\u4ec0\u4e48\u7684\u6807\u5fd7\u3002\u5e76\u4e0d\u771f\u5730\u3002\u5b83\u4ee3\u8868\u4e86\u79d1\u6280\u516c\u53f8\u8ba4\u4e3a\u4f60\u60f3\u8981\u4ec0\u4e48\u7684\u75d5\u8ff9\uff0c\u5f3a\u52a0\u4e8e\u90a3\u4e9b\u522b\u65e0\u9009\u62e9\u53ea\u80fd\u91c7\u7528\u8fd9\u79cd\u7406\u7531\u7684\u54c1\u724c\uff0c\u4ee5\u514d\u4ed6\u4eec\u5b8c\u5168\u65e0\u6cd5\u63a5\u89e6\u5230\u4f60\u3002\u5f53\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u6709\u6548\u65f6\uff0c\u6536\u5230\u7684\u611f\u89c9\u5f88\u68d2\u3002\u4f46\u8981\u505a\u5230\u8fd9\u4e00\u70b9\u9700\u8981\u4e0d\u592a\u53ef\u80fd\u7684\u660e\u661f\u7ec4\u5408\uff1a\u60a8\u4e0d\u65ad\u53d8\u5316\u7684\u613f\u671b\u3001\u90ae\u7bb1\u63d0\u4f9b\u5546\u4e0d\u65ad\u53d8\u5316\u7684\u6570\u636e\u548c\u7b97\u6cd5\u3001\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u516c\u53f8\u4ee3\u8868\u54c1\u724c\u7a81\u7834\u56f0\u5883\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u54c1\u724c\u7784\u51c6\u60a8\u7684\u80fd\u529b\u5728\u6700\u4f73\u65f6\u523b\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002\u7ba1\u7406\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u4f73\u65b9\u6cd5\u53ef\u80fd\u662f\u4e0d\u518d\u76f8\u4fe1\u5b83\u53ef\u4ee5\u6216\u5e94\u8be5\u88ab\u7ba1\u7406\u3002\u6b63\u5982\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4eba\u5458\u8fc7\u4e8e\u5173\u6ce8\u6fc0\u52b1\u63aa\u65bd\u548c\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u53ef\u4f20\u9012\u6027\u4e00\u6837\uff0c\u4e5f\u8bb8\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u4eba\u4e5f\u8fc7\u4e8e\u5173\u6ce8\u610f\u4e49\u548c\u76f8\u5173\u6027\u3002\u8c01\u5728\u4e4e\u4f60\u4e3a\u4ec0\u4e48\u6536\u5230\u4e00\u5c01\u6216 10 \u5c01\u8425\u9500\u7535\u5b50\u90ae\u4ef6\uff1f\u5c31\u50cf\u60a8\u5bf9\u8717\u725b\u90ae\u4ef6\u5e7f\u544a\u6240\u505a\u7684\u90a3\u6837\uff0c\u4e5f\u8bb8\u60a8\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c11\u5730\u8003\u8651\u8fd9\u4e00\u70b9\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8425\u9500\u4eba\u5458\u4e0d\u542c\u3002\u4ed6\u4eec\u53ea\u80fd\u5728\u60a8\u70b9\u51fb\u65f6\u542c\u5230\u60a8\u7684\u58f0\u97f3\u3002", "note_en": "It feels like every company and organization I\u2019ve ever transacted with sends me email every week. Some every day, even. Some multiple times a day. My mortgage broker emails on my birthday and holidays. So does my dentist. Certain retailers email much more often. The home-furnishings company Room &amp; Board is one of them, hoping I\u2019ll upgrade to a lounge-worthy sectional or entreating me to meet artisanal glassblowers from Minnesota. In the past week alone, the clothing retailer Bonobos messaged me nine times, hawking Riviera shorts, trending shirts, and even a chino they promise will \u201cbring out your best self.\u201d\n It\u2019s ridiculous. Technically, I asked for these emails. I wrote loans with my mortgage broker. I\u2019ve bought furniture from Room &amp; Board and pants from Bonobos. And, yes, I\u2019m aware that I can unsubscribe or block them at any time. But why so  many emails? How is it possible that customers would find this appealing?\n To state the obvious: Companies want you to buy their stuff, and email is a good way to get it in front of you. Even so, the reason you see those emails in the first place is far more convoluted than you might think, involving layers of wonkily interoperating technology and unseen struggles for power and control in the email business. The result\u2014more missives about \u201cPants Tailored to Your Busy Schedule\u201d\u2014isn\u2019t an intentional strategy so much as the exhaust of a grotesque contraption. And we\u2019re all caught in the gears.\n The first thing you have to understand about your inbox is that the things you do with emails have a direct impact on whether you\u2019ll even see the next one. The three major companies behind the email platforms used by most Americans\u2014Google (Gmail), Microsoft (Outlook and Hotmail), and Verizon (AOL and Yahoo Mail)\u2014all have designed their products to protect your inbox with software that suppresses messages you don\u2019t want. Opening an email and clicking on a link inside it might tell the software\u2019s algorithms that you want more like it. So might scrolling down the body of an email, or spending a certain amount of time reading it, or starring it, or filing it into a folder. Ignoring other messages, meanwhile, can lead the mailbox software to start junking them, or even blocking the senders.\n Email is one of the few ways companies can reach their customers directly. In fact, people overwhelmingly say that the way they want to hear from brands is by email, Chad S. White, the head of research for Oracle Marketing, told me. That\u2019s why the mailbox software started suppressing messages\u2014to protect people from companies\u2019 temptation to send too many emails. In response, email marketers obsess over \u201cdeliverability,\u201d or how the content and frequency of their emails might help those messages actually hit your inbox in the first place. But  that process has created new and weird feedback loops, in which some companies and certain messages might be able to reach your inbox more readily than before, while others get junked\u2014condemned to spam, deleted, or the like\u2014before you see them.\n As a result, your personal inbox gradually has become less like a mailbox and more like a wormhole into every business relationship you maintain: your bank; your utility provider; your supermarket; your favorite boutiques, restaurants, housewares providers, and all the rest. It\u2019s your own digital commercial district: Opening up email is akin to visiting a little mall in your browser or on your phone, where every shop is right next to every other. A few years ago, Gmail made that metaphor concrete by introducing the promotions folder, recasting spam as marketing. When you\u2019re in the mood to shop, just drop into promotions and see what\u2019s on offer (or search for a favorite brand to see the latest wares).\n If businesses and tech companies were on the same page, this would be the end of the story. The algorithms churn until you\u2019ve interacted with enough promotional emails that every store you like delivers perfectly timed messages that cater to your every need and desire. Fulfilled, happy, you purchase every item advertised to you. Of course, this is not actually what happens. The irony of people\u2019s supposed desire to receive emails from their favorite companies is that  more than half of consumers in the United States and Canada say they receive too much promotional email. Personalization is supposed to make relevant messages get through and irrelevant ones falter. But what \u201crelevance\u201d means is constantly changing. If I need new pants, an apparel ad might be welcome. If I don\u2019t, it\u2019s just annoying.\n The second thing you have to understand about your inbox is that it\u2019s not just your individual choices that dictate which emails the algorithms let in. Gmail and others also aggregate the behavior of  all email users when deciding which messages get through to your inbox. If enough people don\u2019t engage, then many or all of a sender\u2019s messages might not reach their recipients. If many people do, it can override individual preferences. Your inbox is like a shopping mall, yes, but one that\u2019s constantly shape-shifting as it tries to erect the right stores for the shoppers currently inside. Consumer email is a collective affair, one orchestrated by computers making hidden choices few people can see directly, including businesses themselves.\n That can have catastrophic results for senders. April Mullen, a director of strategy at the email-sending firm SparkPost, told me about a financial-services firm that had millions of statement notices blocked by a major email provider, resulting in an expensive print backup to meet regulatory requirements. Stories like this one explain why a whole sector of consulting and software services, known as email service providers, has sprung up to address deliverability. Marketers send emails, sure, but they do so in the context of trying to understand and tame the weird, unknowable machinery of the Gmails and Yahoo Mails that, ultimately, decide whether their messages ever get through. Brands such as Bonobos adjust their email-marketing campaigns in accordance with the limited signals they are able to extract from the messages that get delivered (or, in some cases, the preferences their customers set explicitly on an app or a website).\n Given all that machinery, email-marketing experts such as White and Mullen feel like it\u2019s the consumers who have all the control. They argue that people like me receive emails because we  want them. That\u2019s partly true. Even if I sense that I\u2019m getting too many ads for shorts from Bonobos or end tables from Room &amp; Board, enough other folks must be fine with it, or the emails wouldn\u2019t arrive. (Room &amp; Board declined to be interviewed for this story. Helena Tse, the vice president of marketing at Bonobos, told me the company\u2019s unsubscribe rate is \u201cextremely low compared to the industry standard,\u201d but did not provide specific numbers.) I can help change that equation at any time by junking or unsubscribing. As measured by the machinery that measures my interest, I\u2019m still interested.\n But also, that is absurd. The fundamental reason marketing emails are clogging up everyone\u2019s inboxes is that email marketing represents the collective outcome of a company\u2019s interactions with its customers and the mailbox services; it does not, in other words, represent  me.\n Many email-sending brands seem to have become so obsessed with the professional gamesmanship of email marketing that they have decoupled it from the customer\u2019s experience. When I asked Tse to explain the process by which I, personally, might receive so many Bonobos emails, she cited KPIs, a type of performance indicator used to run businesses and, in many cases, judge employee performance. She also told me that the company \u201ccontinuously explores how to better our toolkit to automate and optimize the frequency business rules.\u201d A professional proclamation such as this might elicit nods at an industry conference, but it casts me in the role of a generator of data rather than a paying customer\u2014let alone a living person who doesn\u2019t need so many invitations to partake of Riviera shorts.\n Oracle\u2019s Chad White has a slightly more humane way of talking about email, calling it a conversation. Opening an email, he says, is like a conversational nod. \u201cYou\u2019re talking to someone, and if you see someone nodding, it indicates that they are paying attention. It doesn\u2019t mean they like it, but it shows that they are paying attention.\u201d That makes sense, but a conversation is a two-way street. I doubt that ordinary folks understand that the \u201cgestures\u201d they make in their email client are read as signals of interest by the senders\u2014especially in the way that marketers, email service providers, and mailbox providers interpret them.\n White disagreed with me on that point, but he did admit that marketers sometimes become overly wed to the \u201cgolden paths\u201d they hope customers will follow. An email marketer might intend a message to be opened and clicked, leading directly to a sale. But consumer behavior is a lot more chaotic than that. Just like the email from my mortgage broker reminds me that he exists, and that maybe I should keep my eye on mortgage rates in case a refinance is appealing, so an email from a brand might simply remind me that I meant to buy pants at some point. Some people, White tells me, receive an email from a retailer and go to the store instead. Dad might receive a Mother\u2019s Day marketing message from a florist and remind the kids to send a card to their grandmother. Others might just hoard messages in their Gmail promotions folder and dip in when they feel like shopping, turning the inbox into a shopping excursion in its own right. The mailbox providers can\u2019t look for those kinds of interactions.\n Email isn\u2019t a sign of what you want. Not really. It represents the traces of what technology companies think you want, as imposed upon the brands who have no choice but to adopt that rationale lest they lose access to you entirely. When a marketing email is effective, it feels great to receive. But getting it right requires an unlikely alignment of the stars: your shifting desires, the mailbox providers\u2019 changing data and algorithms, the email-sending companies\u2019 ability to cut through that murk on behalf of brands, and the brands\u2019 ability to target you with relevant messages at the optimal moment.\n The best way to manage this situation might be to stop believing that it can or should be managed. Just as the email marketers are too obsessed with incentives and the email service providers with deliverability, perhaps email recipients are too preoccupied with sense and relevance. Who cares why you got one marketing email, or 10? Like you do with snail-mail ads, maybe you should think about this as little as possible. The marketers aren\u2019t listening, anyway. They can only hear you when you click.", "posttime": "2021-08-06 10:45:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5546\u5e97,thinking,\u7535\u5b50\u90ae\u4ef6", "title": "\u5546\u5e97\u751a\u81f3\u5728\u8003\u8651\u6240\u6709\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\uff1f", "title_en": "What Are Stores Even Thinking with All These Emails?", "transed": 1, "url": "https://www.theatlantic.com/technology/archive/2021/08/why-stores-send-you-so-many-emails-spam/619670/", "via": "", "real_tags": ["\u5546\u5e97", "thinking", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "7a9ef95dba2909b1ca2a0c0f56e7b2e8.jpg", "infoid": 1071702, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c06\u5176\u89c6\u4e3a\u5229\u57fa\u95ee\u9898\u4f1a\u4f7f\u60a8\u7684\u516c\u53f8\u9762\u4e34\u5de8\u5927\u98ce\u9669\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u8ba9\u4eba\u4eec\u8d2d\u4e70\u3002\u8bb8\u591a\u7ec4\u7ec7\u5df2\u7ecf\u5f00\u59cb\u4e86\u89e3\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u8ba1\u5212\u7684\u4e1a\u52a1\u5fc5\u8981\u6027\u3002\u65e0\u6570\u65b0\u95fb\u62a5\u9053\u2014\u2014\u4ece\u9519\u8bef\u548c\u6b67\u89c6\u6027\u7684\u9762\u90e8\u8bc6\u522b\u5230\u4fb5\u72af\u9690\u79c1\uff0c\u518d\u5230\u5177\u6709\u6539\u53d8\u751f\u6d3b\u540e\u679c\u7684\u9ed1\u5323\u5b50\u7b97\u6cd5\u2014\u2014\u5df2\u5c06\u5176\u63d0\u4e0a\u4e86\u8463\u4e8b\u4f1a\u3001\u9996\u5e2d\u6267\u884c\u5b98\u548c\u9996\u5e2d\u6570\u636e\u548c\u5206\u6790\u5b98\u7684\u8bae\u7a0b\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u9886\u5bfc\u8005\u4e0d\u660e\u767d\u7684\u662f\uff0c\u89e3\u51b3\u8fd9\u4e9b\u98ce\u9669\u9700\u8981\u5728\u6574\u4e2a\u7ec4\u7ec7\u4e2d\u63d0\u9ad8\u5bf9\u8fd9\u4e9b\u98ce\u9669\u7684\u8ba4\u8bc6\u3002\u90a3\u4e9b\u660e\u767d\u8fd9\u4e00\u70b9\u7684\u4eba\u5f80\u5f80\u4e0d\u77e5\u9053\u5982\u4f55\u7ee7\u7eed\u3002\u5bf9\u4e8e\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u8fd9\u9700\u8981\u6210\u4e3a\u91cd\u4e2d\u4e4b\u91cd\u3002\u8d85\u8fc7 50% \u7684\u9ad8\u7ba1\u62a5\u544a\u79f0\uff0c\u9274\u4e8e\u5176\u76ee\u524d\u8bc6\u522b\u548c\u51cf\u8f7b\u8fd9\u4e9b\u98ce\u9669\u7684\u51c6\u5907\u6c34\u5e73\uff0c\u4ed6\u4eec\u5bf9\u5176\u7ec4\u7ec7\u4e2d\u4eba\u5de5\u667a\u80fd\u7684\u9053\u5fb7\u548c\u58f0\u8a89\u98ce\u9669\u5b58\u5728\u201c\u91cd\u5927\u201d\u6216\u201c\u6781\u7aef\u201d\u62c5\u5fe7\u3002\u8fd9\u610f\u5473\u7740\u5efa\u7acb\u4e00\u4e2a\u6bcf\u4e2a\u4eba\u90fd\u63a5\u53d7\u7684\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u8ba1\u5212\u5bf9\u4e8e\u90e8\u7f72\u4eba\u5de5\u667a\u80fd\u662f\u5fc5\u8981\u7684\u3002\u505a\u5f97\u597d\uff0c\u63d0\u9ad8\u610f\u8bc6\u65e2\u53ef\u4ee5\u5728\u6218\u672f\u5c42\u9762\u51cf\u8f7b\u98ce\u9669\uff0c\u53c8\u6709\u52a9\u4e8e\u6210\u529f\u5b9e\u65bd\u66f4\u901a\u7528\u7684\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u8ba1\u5212\u3002\u9996\u5148\uff0c\u91c7\u8d2d\u5b98\u5458\u662f\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u7684\u6700\u5927\u6765\u6e90\u4e4b\u4e00\uff0c\u4e5f\u662f\u6700\u5bb9\u6613\u88ab\u5ffd\u89c6\u7684\u6765\u6e90\u4e4b\u4e00\u3002 AI \u4f9b\u5e94\u5546\u9500\u552e\u5230\u60a8\u7ec4\u7ec7\u4e2d\u7684\u6bcf\u4e2a\u90e8\u95e8\uff0c\u5c24\u5176\u662f\u4eba\u529b\u8d44\u6e90\u3001\u8425\u9500\u548c\u8d22\u52a1\u90e8\u95e8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u4eba\u529b\u8d44\u6e90\u91c7\u8d2d\u5b98\u4e0d\u77e5\u9053\u5982\u4f55\u63d0\u51fa\u6b63\u786e\u7684\u95ee\u9898\u6765\u5ba1\u67e5 AI \u4ea7\u54c1\uff0c\u90a3\u4e48\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5728\u62db\u8058\u8fc7\u7a0b\u4e2d\u5f15\u5165\u6b67\u89c6\u53d7\u4fdd\u62a4\u5b50\u7fa4\u4f53\u7684\u98ce\u9669\u3002\u5176\u6b21\uff0c\u9ad8\u7ea7\u9886\u5bfc\u8005\u901a\u5e38\u4e0d\u5177\u5907\u53d1\u73b0\u7ec4\u7ec7 AI \u4e2d\u7684\u9053\u5fb7\u7f3a\u9677\u6240\u9700\u7684\u77e5\u8bc6\uff0c\u4ece\u800c\u4f7f\u516c\u53f8\u5728\u58f0\u8a89\u548c\u6cd5\u5f8b\u4e0a\u90fd\u9762\u4e34\u98ce\u9669\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4ea7\u54c1\u56e2\u961f\u51c6\u5907\u90e8\u7f72\u4eba\u5de5\u667a\u80fd\uff0c\u4f46\u9996\u5148\u9700\u8981\u5f97\u5230\u4e00\u4f4d\u5bf9\u4ea7\u54c1\u7684\u9053\u5fb7\u98ce\u9669\u77e5\u4e4b\u751a\u5c11\u7684\u9ad8\u7ba1\u7684\u6279\u51c6\uff0c\u90a3\u4e48\u54c1\u724c\u7684\u58f0\u8a89\uff08\u66f4\u4e0d\u7528\u8bf4\u9ad8\u7ba1\uff09\u53ef\u80fd\u9762\u4e34\u9ad8\u98ce\u9669\u3002\u7b2c\u4e09\uff0c\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u8ba1\u5212\u9700\u8981\u77e5\u8bc6\u6e0a\u535a\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u4e86\u89e3\u4eba\u5de5\u667a\u80fd\u7684\u9053\u5fb7\u98ce\u9669\uff0c\u4ed6\u4eec\u53ef\u80fd\u65e0\u6cd5\u7406\u89e3\u8ba1\u5212\u4e2d\u9610\u660e\u7684\u65b0\u804c\u8d23\uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u80fd\u7406\u89e3\u4f46\u4e0d\u4e86\u89e3\u5176\u91cd\u8981\u6027\uff0c\u4ece\u800c\u5bfc\u81f4\u4e0d\u8ba4\u771f\u5bf9\u5f85\u5b83\u4eec\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u60a8\u7684\u7ec4\u7ec7\u4e86\u89e3 AI \u7684\u9053\u5fb7\u3001\u58f0\u8a89\u548c\u6cd5\u5f8b\u98ce\u9669\uff0c\u4ed6\u4eec\u5c31\u4f1a\u660e\u767d\u5b9e\u65bd\u8de8\u7ec4\u7ec7\u7cfb\u7edf\u5730\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u8ba1\u5212\u7684\u91cd\u8981\u6027\u3002\u5f88\u597d\u5730\u521b\u5efa\u8fd9\u79cd\u8de8\u7ec4\u7ec7\u610f\u8bc6\u9700\u8981\u5de5\u4f5c\u3002\u5b83\u9700\u8981\u4e00\u81f4\u7684\u4fe1\u606f\uff0c\u8be5\u4fe1\u606f\u4e5f\u9488\u5bf9\u6bcf\u4e2a\u7fa4\u4f53\u7684\u5177\u4f53\u95ee\u9898\u91cf\u8eab\u5b9a\u5236\u3002\u6bd5\u7adf\uff0c\u6700\u9ad8\u7ba1\u7406\u5c42\u7684\u5229\u76ca\u548c\u804c\u8d23\u4e0d\u540c\u4e8e\u4ea7\u54c1\u6240\u6709\u8005\u548c\u8bbe\u8ba1\u5e08\u7684\u5229\u76ca\u548c\u804c\u8d23\uff0c\u4e5f\u4e0d\u540c\u4e8e\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u7684\u5229\u76ca\u548c\u804c\u8d23\u2014\u2014\u5bf9\u4ed6\u4eec\u6240\u6709\u4eba\u8bf4\u540c\u4e00\u79cd\u8bed\u8a00\u5bfc\u81f4\u4ed6\u4eec\u8c01\u4e5f\u4e0d\u8bf4\u3002\u8be5\u4fe1\u606f\u4e0d\u80fd\u662f\u80a4\u6d45\u7684\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u4eba\u4eec\u8ba4\u4e3a AI \u9053\u5fb7\u662f\u516c\u5173\u95ee\u9898\u6216\u5229\u57fa\u95ee\u9898\u3002\u5b83\u9700\u8981\u4e00\u4e2a\u660e\u786e\u7684\u6700\u9ad8\u5c42\u9886\u5bfc\uff0c\u8d1f\u8d23\u5236\u5b9a\u548c\u76d1\u7763\u6218\u7565\u7684\u6267\u884c\uff0c\u4ece\u800c\u5728\u6574\u4e2a\u7ec4\u7ec7\u8303\u56f4\u5185\u63d0\u9ad8\u610f\u8bc6\u2014\u2014\u5982\u679c\u4fe1\u606f\u4e0d\u662f\u6765\u81ea\u9ad8\u5c42\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u4e0d\u4f1a\u88ab\u8ba4\u771f\u5bf9\u5f85\u3002\u8fd9\u662f\u7ec4\u7ec7\u5e94\u8be5\u5f00\u59cb\u7684\u5730\u65b9\u3002\n\u786e\u4fdd\u6bcf\u4f4d\u5458\u5de5\u90fd\u4e86\u89e3\u98ce\u9669\u5e76\u611f\u53d7\u5230\u7ec4\u7ec7\u5185\u4eba\u5de5\u667a\u80fd\u7684\u6210\u529f\u81f3\u5173\u91cd\u8981\u3002\u4ed6\u4eec\u4e0d\u4ec5\u9700\u8981\u610f\u8bc6\u5230\u8fd9\u4e9b\u95ee\u9898\u7684\u5b58\u5728\uff0c\u8fd8\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u98ce\u9669\u5982\u4f55\u5f71\u54cd\u4ed6\u4eec\u7684\u7279\u5b9a\u5de5\u4f5c\u4ee5\u53ca\u5b83\u5982\u4f55\u9002\u5e94\u4ed6\u4eec\u7684\u5de5\u4f5c\u63cf\u8ff0\u3002\u5bf9\u4e8e\u4eba\u529b\u8d44\u6e90\u90e8\u95e8\u7684\u4eba\u6765\u8bf4\uff0c\u77e5\u9053\u4ed6\u4eec\u9700\u8981\u96c7\u7528\u9002\u5408\u8fd9\u4efd\u5de5\u4f5c\u7684\u4eba\u4ee5\u53ca\u53ef\u80fd\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u4eba\u662f\u4e00\u56de\u4e8b\uff0c\u540c\u65f6\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u8fd8\u8981\u610f\u8bc6\u5230\u4eba\u5de5\u667a\u80fd\u7684\u9053\u5fb7\u98ce\u9669\u3002\u8be5\u4eba\u5c06\u8bc6\u522b\u548c\u51cf\u8f7b\u8fd9\u4e9b\u98ce\u9669\u89c6\u4e3a\u5176\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u662f\u53e6\u4e00\u56de\u4e8b\uff0c\u4f8b\u5982\uff0c\u5979\u77e5\u9053\u8d1f\u8d23\u4efb\u5730\u5c65\u884c\u804c\u8d23\u5305\u62ec\u8981\u6c42\u63d0\u4f9b\u62db\u8058\u8f6f\u4ef6\u7684 AI \u4f9b\u5e94\u5546\u63d0\u4f9b\u6709\u5173\u4ed6\u4eec\u5982\u4f55\u8bc6\u522b\u548c\u51cf\u8f7b\u504f\u89c1\u7684\u6587\u6863\u3002\u4ed6\u4eec\u7684\u4eba\u5de5\u667a\u80fd\u3002\u60a8\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u516d\u9879\u63aa\u65bd\u6765\u5efa\u7acb\u7ec4\u7ec7\u610f\u8bc6\u5e76\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u652f\u6301\u3002 1\u3001\u6d88\u9664\u5bf9\u4eba\u5de5\u667a\u80fd\u548c\u4eba\u5de5\u667a\u80fd\u4f26\u7406\u7684\u6050\u60e7\u3002\u7ec4\u7ec7\u9762\u4e34\u7684\u4e00\u4e2a\u969c\u788d\u662f IT \u4ee5\u5916\u7684\u4eba\u53ef\u80fd\u4f1a\u88ab\u8fd9\u4e2a\u8bdd\u9898\u5413\u5012\u3002 \u201c\u4eba\u5de5\u667a\u80fd\u201d\u3001\u201c\u673a\u5668\u5b66\u4e60\u201d\u548c\u201c\u6b67\u89c6\u6027\u7b97\u6cd5\u201d\u4f3c\u4e4e\u662f\u4ee4\u4eba\u751f\u754f\u7684\u6982\u5ff5\uff0c\u5bfc\u81f4\u4eba\u4eec\u5b8c\u5168\u56de\u907f\u8fd9\u4e2a\u8bdd\u9898\u3002\u5982\u679c\u4e0d\u662f\u6280\u672f\u57fa\u7840\uff0c\u4eba\u4eec\u5fc5\u987b\u719f\u6089\u5e76\u719f\u6089\u8fd9\u4e9b\u6982\u5ff5\uff0c\u8fd9\u5bf9\u4e8e\u5efa\u7acb\u7ec4\u7ec7\u610f\u8bc6\u81f3\u5173\u91cd\u8981\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u5177\u5907\u57fa\u672c\u7684\u4eba\u5de5\u667a\u80fd\u7d20\u517b\u5e76\u4e0d\u662f\u5f88\u96be\u3002\u6bd5\u7adf\uff0c\u673a\u5668\u5b66\u4e60\u672c\u8d28\u4e0a\u662f\u4f8b\u4e3e\u5b66\u4e60\uff0c\u5927\u5bb6\u90fd\u8033\u719f\u80fd\u8be6\u3002\u540c\u6837\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u4f8b\u5b50\u800c\u64c5\u957f\u67d0\u4e8b\u4e5f\u662f\u6bcf\u4e2a\u4eba\u90fd\u719f\u6089\u7684\u3002\u5982\u679c\u60a8\u6b63\u5728\u5411\u4eba\u4eec\u4f20\u8fbe\u5982\u4f55\u521b\u5efa\u6b67\u89c6\u6027\u7b97\u6cd5\uff0c\u60a8\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e9b\u662f\u8f6f\u4ef6\u6ca1\u6709\u8db3\u591f\u7684\u793a\u4f8b\u53ef\u4f9b\u5b66\u4e60\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u8f6f\u4ef6\u4f1a\u51fa\u9519\uff08\u4f8b\u5982\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u9ed1\u4eba\u5973\u6027\u9762\u90e8\u793a\u4f8b\uff09\u4e3a\u60a8\u7684\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u5bfc\u81f4\u8be5\u8f6f\u4ef6\u5728\u6311\u9009\u9ed1\u4eba\u5973\u6027\u9762\u90e8\u65b9\u9762\u975e\u5e38\u7cdf\u7cd5\uff09\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u7684\u8bb8\u591a\u9053\u5fb7\u98ce\u9669\u53ca\u5176\u5404\u79cd\u6765\u6e90\u90fd\u53ef\u4ee5\u5411\u975e\u6280\u672f\u53d7\u4f17\u9610\u660e\uff0c\u5e76\u8ba9\u5458\u5de5\u6709\u4fe1\u5fc3\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002\u8981\u6c42\u60a8\u7684\u4eba\u529b\u8d44\u6e90\u548c\u8425\u9500\u4eba\u5458\u57fa\u672c\u719f\u6089 AI \u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca AI \u9053\u5fb7\u98ce\u9669\u7684\u4ea7\u751f\u65b9\u5f0f\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u7ec4\u7ec7\u5df2\u7ecf\u5bf9\u7f51\u7edc\u5b89\u5168\u98ce\u9669\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u8ba4\u8bc6\uff0c\u8fd9\u4e5f\u9700\u8981\u7f51\u7edc\u5b89\u5168\u7d20\u517b\uff0c\u5728\u516c\u53f8\u627f\u8bfa\u5b9e\u73b0\u5b83\u4e4b\u524d\uff0c\u8fd9\u4f3c\u4e4e\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u5458\u5de5\u4e0d\u4e86\u89e3\u57fa\u7840\u77e5\u8bc6\uff0c\u4ed6\u4eec\u5c06\u4e0d\u77e5\u9053\u5728\u4ed6\u4eec\u8fd9\u6837\u505a\u81f3\u5173\u91cd\u8981\u65f6\u63d0\u51fa\u6b63\u786e\u7684\u95ee\u9898\uff08\u4f8b\u5982 AI \u4f9b\u5e94\u5546\uff09\u3002 2. \u4e3a\u60a8\u7684\u542c\u4f17\u91cf\u8eab\u5b9a\u5236\u60a8\u7684\u6c9f\u901a\u65b9\u5f0f\u3002\u5c06\u81ea\u5df1\u89c6\u4e3a\u54c1\u724c\u58f0\u8a89\u7ba1\u5bb6\u7684\u9ad8\u7ea7\u9886\u5bfc\u8005\u6709\u5174\u8da3\u907f\u514d\u5a01\u80c1\u54c1\u724c\u58f0\u8a89\u7684\u98ce\u9669\u3002\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff0c\u4f7f\u7528\u201c\u9053\u5fb7\u548c\u58f0\u8a89\u98ce\u9669\u201d\u7684\u8bed\u8a00\u5bf9\u4e8e\u4ed6\u4eec\u4e86\u89e3 AI \u9053\u5fb7\u4e0e\u4ed6\u4eec\u7684\u62c5\u5fe7\u548c\u8d23\u4efb\u7684\u76f8\u5173\u6027\u5f88\u91cd\u8981\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4ea7\u54c1\u8bbe\u8ba1\u5e08\u66f4\u5173\u5fc3\u7684\u662f\u907f\u514d\u98ce\u9669\uff0c\u800c\u4e0d\u662f\u5236\u4f5c\u201c\u9177\u201d\u548c\u6709\u7528\u7684\u4ea7\u54c1\u3002\u901a\u8fc7\u8bbe\u8ba1\u6765\u89e3\u91ca\u4eba\u5de5\u667a\u80fd\u4f26\u7406\u5982\u4f55\u6539\u8fdb\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u4ef7\u503c\u9a71\u52a8\u578b\u6d88\u8d39\u8005\u548c\u4e00\u822c\u516c\u6c11\u6765\u8bf4\uff0c\u53ef\u80fd\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u63a5\u89e6\u53d7\u4f17\u7684\u65b9\u5f0f\u3002\u6700\u540e\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u9700\u8981\u6709\u6548\u7684\u7a33\u5065\u6a21\u578b\u3002\u8c08\u8bba\u4ed6\u4eec\u7684\u8bed\u8a00\u610f\u5473\u7740\u89e3\u91ca\u6709\u504f\u89c1\u7684\u7b97\u6cd5\u548c\u9ed1\u5323\u5b50\u95ee\u9898\u5982\u4f55\u964d\u4f4e\u5de5\u5177\u548c/\u6216\u5176\u91c7\u7528\u7684\u80fd\u529b\u3002\u6ca1\u6709\u4eba\u613f\u610f\u6784\u5efa\u4e00\u4e2a\u4e0d\u51c6\u786e\u6216\u672a\u4f7f\u7528\u7684\u6a21\u578b\u3002\u63d0\u4f9b\u6bcf\u4e2a\u53d7\u4f17\u90fd\u53ef\u4ee5\u4e0e\u4e4b\u76f8\u5173\u7684 AI \u51fa\u9519\u7684\u4f8b\u5b50\u548c\u6545\u4e8b\u4e5f\u5f88\u91cd\u8981\u3002\u8fd9\u4e0d\u4ec5\u9700\u8981\u6d89\u53ca\u516c\u5173\u707e\u96be\u3002\u4f8b\u5982\uff0c\u5b83\u8fd8\u53ef\u80fd\u5305\u62ec\u4e9a\u9a6c\u900a\u65e0\u6cd5\u5145\u5206\u51cf\u8f7b\u5176\u4eba\u5de5\u667a\u80fd\u62db\u8058\u8f6f\u4ef6\u4e2d\u7684\u504f\u89c1\uff0c\u8fd9\u4ee4\u4eba\u94a6\u4f69\u5730\u5bfc\u81f4\u4e9a\u9a6c\u900a\u505c\u6b62\u4e86\u8be5\u9879\u76ee\uff0c\u800c\u4e0d\u662f\u90e8\u7f72\u53ef\u80fd\u5bf9\u6c42\u804c\u8005\u548c\u54c1\u724c\u90fd\u6709\u5bb3\u7684\u4e1c\u897f\u3002\u6b64\u5916\uff0c\u60a8\u5e94\u8be5\u5c3d\u53ef\u80fd\u4f7f\u7528\u60a8\u6240\u5728\u884c\u4e1a\u7279\u6709\u7684\u793a\u4f8b\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4eba\u5de5\u667a\u80fd\u5df2\u7ecf\u610f\u8bc6\u5230\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u67d0\u4e9b\u9053\u5fb7\u98ce\u9669\uff0c\u4f46\u5982\u679c\u60a8\u4e0e\u91d1\u878d\u79d1\u6280\u516c\u53f8\u7684\u6210\u5458\u4ea4\u8c08\uff0c\u5458\u5de5\u5c06\u66f4\u591a\u5730\u4e0e\u540c\u884c\u516c\u53f8\u7684\u6545\u4e8b\u8054\u7cfb\u8d77\u6765\u3002\n3. \u5c06\u60a8\u5efa\u7acb\u7ec4\u7ec7\u610f\u8bc6\u7684\u5c1d\u8bd5\u4e0e\u516c\u53f8\u7684\u4f7f\u547d\u6216\u76ee\u7684\u8054\u7cfb\u8d77\u6765\u3002\u5982\u679c\u60a8\u7684\u4f7f\u547d/\u76ee\u7684\u5df2\u7ecf\u878d\u5165\u60a8\u7684\u7ec4\u7ec7\u6587\u5316\uff0c\u8bf7\u5c06\u60a8\u5bf9 AI \u9053\u5fb7\u7684\u8ba8\u8bba\u4e0e\u6b64\u76f8\u7ed3\u5408\u3002\u89e3\u91ca AI \u4f26\u7406/\u4f26\u7406\u98ce\u9669\u7ba1\u7406\u5982\u4f55\u8fdb\u4e00\u6b65\u6269\u5c55\u8be5\u4f7f\u547d\uff0c\u56f4\u7ed5\u60a8\uff08\u4e0d\uff09\u613f\u610f\u4e3a\u8ffd\u6c42\u8be5\u4f7f\u547d\u505a\u4ec0\u4e48\u7684\u4e00\u7cfb\u5217\u62a4\u680f\u3002\u4f8b\u5982\uff0c\u60a8\u7684\u4efb\u52a1\u53ef\u80fd\u662f\u63d0\u4f9b\u6700\u597d\u7684\u8d22\u52a1\u5efa\u8bae\u3002\u4f46\u662f\uff0c\u9664\u975e\u4eba\u4eec\u4fe1\u4efb\u60a8\uff0c\u5426\u5219\u60a8\u65e0\u6cd5\u63d0\u4f9b\u8be5\u5efa\u8bae\uff0c\u5982\u679c\u60a8\u5728\u90e8\u7f72 AI \u65f6\u758f\u5ffd\u5927\u610f\uff0c\u4eba\u4eec\u5c31\u65e0\u6cd5\u4fe1\u4efb\u60a8\u3002\u5f53 AI \u51fa\u9519\u65f6\uff0c\u5b83\u4f1a\u5927\u89c4\u6a21\u51fa\u9519\uff0c\u56e0\u6b64\u4e0e\u60a8\u7684\u7ec4\u7ec7\u6c9f\u901a\uff0c\u63d0\u4f9b\u6700\u4f73\u8d22\u52a1\u5efa\u8bae\u7684\u90e8\u5206\u53ef\u80fd\u9700\u8981\u4fdd\u62a4\u60a8\u7684\u5ba2\u6237\uff0c\u800c\u4fdd\u62a4\u4ed6\u4eec\u7684\u90e8\u5206\u9700\u8981 AI \u7684\u9053\u5fb7\u3001\u8d1f\u8d23\u4efb\u6216\u53ef\u4fe1\u8d56\u7684\u90e8\u7f72\uff0cAI \u9053\u5fb7\u4e0d\u518d\u88ab\u89c6\u4e3a\u4e0e\u60a8\u7684\u8fd0\u8425\u76f8\u5173\u8054\u7684\u4e1c\u897f\u3002\u76f8\u53cd\uff0c\u60a8\u4f20\u8fbe\u7684\u662f\u5b83\u662f\u60a8\u7684\u4f7f\u547d\u548c\u6838\u5fc3\u4ef7\u503c\u89c2\u7684\u8fdb\u4e00\u6b65\u5ef6\u4f38\u3002 4. \u4ee5\u53ef\u64cd\u4f5c\u7684\u65b9\u5f0f\u5b9a\u4e49 AI \u9053\u5fb7\u5728\u60a8\u7684\u7ec4\u7ec7\u4e2d\u7684\u542b\u4e49\u3002\u8bf4\u4f60\u201c\u4e3a\u4e86\u9690\u79c1\u201d\u6216\u201c\u5c0a\u91cd\u9690\u79c1\u201d\u662f\u4e00\u56de\u4e8b\u3002\u5b9e\u9645\u505a\u4e00\u4e9b\u4e8b\u60c5\u662f\u53e6\u4e00\u56de\u4e8b\u3002\u4e3a\u786e\u4fdd\u60a8\u7684 AI \u9053\u5fb7\u4ef7\u503c\u627f\u8bfa\u4e0d\u53ea\u662f\u516c\u5173\uff0c\u8bf7\u5c06\u8fd9\u4e9b\u627f\u8bfa\u4e0e\u9053\u5fb7\u62a4\u680f\u8054\u7cfb\u8d77\u6765\uff0c\u4f8b\u5982\u201c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5c06\u60a8\u7684\u6570\u636e\u51fa\u552e\u7ed9\u7b2c\u4e09\u65b9\u201d\u6216\u201c\u6211\u4eec\u5c06\u59cb\u7ec8\u533f\u540d\u4e0e\u7b2c\u4e09\u65b9\u5171\u4eab\u7684\u6570\u636e\u201d\u3002\u5982\u679c\u4f60\u6709\u4e00\u4efd\u7cbe\u5fc3\u8bbe\u8ba1\u7684 AI \u9053\u5fb7\u58f0\u660e\uff0c\u5b83\u5c06\u5305\u62ec\u90a3\u4e9b\u8d77\u5230\u53cc\u91cd\u4f5c\u7528\u7684\u62a4\u680f\u3002\u9996\u5148\uff0c\u4ed6\u4eec\u4f1a\u5411\u60a8\u7684\u56e2\u961f\u4f20\u8fbe\u60a8\u5b9e\u9645\u4e0a\u6b63\u5728\u505a\u4ec0\u4e48\uff08\u6216\u8ba1\u5212\u505a\u4ec0\u4e48\uff09\u5173\u4e8e\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u98ce\u9669\u7684\u4e8b\u60c5\u3002\u5176\u6b21\uff0c\u5b83\u7acb\u5373\u4f20\u8fbe\u51fa\u8fd9\u4e0d\u662f\u516c\u5173\u6216\u6a21\u7cca\u7684\u4e1c\u897f\u3002\u5f53\u4ef7\u503c\u89c2\u4ee5\u4e00\u79cd\u5c06\u5b83\u4eec\u4e0e\u884c\u52a8\u8054\u7cfb\u8d77\u6765\u7684\u65b9\u5f0f\u8868\u8fbe\u548c\u4f20\u8fbe\u65f6\uff0c\u8fd9\u4e9b\u4f20\u8fbe\u662f\u53ef\u4fe1\u4e14\u4ee4\u4eba\u96be\u5fd8\u7684\u3002\u8ba9\u60a8\u7684\u542c\u4f17\u7406\u89e3 AI \u9053\u5fb7\u5982\u4f55\u4e0d\u6a21\u7cca\u5e76\u4e14\u53ef\u4ee5\u5b9e\u65bd\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u89e3\u91ca\u533b\u7597\u4fdd\u5065\u4e2d\u9762\u4e34\u7684\u975e\u5e38\u771f\u5b9e\u548c\u68d8\u624b\u7684\u9053\u5fb7\u95ee\u9898\u4ee5\u53ca\u4ed6\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u65b9\u5f0f\u3002\u76f8\u5173\u5730\uff0c\u60a8\u53ef\u4ee5\u8ba8\u8bba\u533b\u7597\u4fdd\u5065\u884c\u4e1a\u5982\u4f55\u5c06\u9053\u5fb7\u98ce\u9669\u7f13\u89e3\u7eb3\u5165\u57fa\u7840\u8bbe\u65bd\u548c\u6d41\u7a0b\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u53ef\u4ee5\u5b8c\u6210\u3002 5. \u9080\u8bf7\u5404\u804c\u80fd\u90e8\u95e8\u4e2d\u503c\u5f97\u4fe1\u8d56\u548c\u6709\u5f71\u54cd\u529b\u7684\u6210\u5458\u52a0\u5165\u60a8\u7684\u884c\u5217\u3002\u4e00\u4e9b\u7ec4\u7ec7\uff0c\u5982\u5fae\u8f6f\uff0c\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u201c\u4eba\u5de5\u667a\u80fd\u9053\u5fb7\u51a0\u519b\u201d\u7cfb\u7edf\u3002\u8fd9\u4e9b\u4eba\u662f\u6574\u4e2a\u7ec4\u7ec7\u4e2d\u8d1f\u8d23\u63d0\u9ad8\u56e2\u961f\u5bf9 AI \u9053\u5fb7\u98ce\u9669\u610f\u8bc6\u7684\u4eba\u3002 AI Ethics Champion \u8ba1\u5212\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\uff0c\u5b83\u8d4b\u4e88\u5df2\u7ecf\u83b7\u5f97\u56e2\u961f\u4fe1\u4efb\u548c\u652f\u6301\u7684\u9886\u5bfc\u8005\u6743\u529b\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u6bd4\u9996\u5e2d\u5b66\u4e60\u5b98\u6216\u9996\u5e2d\u6570\u636e\u5b98\u6216\u9886\u5bfc\u7ec4\u7ec7\u610f\u8bc6\u6218\u7565\u7684\u4efb\u4f55\u4eba\u66f4\u4e86\u89e3\u5404\u81ea\u7684\u56e2\u961f\u3002 6. \u6301\u7eed\u6559\u80b2\u3002\u5efa\u7acb\u7ec4\u7ec7\u610f\u8bc6\u4e0d\u662f\u4f60\u5728\u5468\u4e09\u4e0b\u5348\u6216\u5468\u672b\u9759\u4fee\u65f6\u505a\u7684\u4e8b\u60c5\u3002\u5b83\u9700\u8981\u6301\u7eed\u548c\u591a\u6837\u5316\u7684\u63a5\u89e6\u70b9\uff0c\u5305\u62ec\u5185\u90e8\u548c\u5916\u90e8\u53d1\u8a00\u4eba\u3001\u7814\u8ba8\u4f1a\u3001\u65f6\u4e8b\u901a\u8baf\u7b49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4eba\u5de5\u667a\u80fd\u548c\u65b0\u5174\u6280\u672f\u901a\u5e38\u90fd\u5728\u8fc5\u901f\u53d8\u5316\u548c\u53d1\u5c55\uff0c\u4f34\u968f\u8fd9\u4e9b\u53d8\u5316\u7684\u662f\u9053\u5fb7\u98ce\u9669\u7684\u65b0\u6765\u6e90\u3002\u4e3a\u786e\u4fdd\u60a8\u7684\u7ec4\u7ec7\u4e0d\u4f1a\u843d\u540e\u592a\u591a\uff0c\u4e0d\u65ad\u6559\u80b2\u60a8\u7684\u5458\u5de5\u5c06\u662f\u62b5\u5fa1\u6280\u672f\u8fdb\u6b65\u6d6a\u6f6e\u7684\u5173\u952e\u5821\u5792\u3002\n\u5546\u4e1a\u9886\u8896\u77e5\u9053\uff0c\u5f04\u6e05\u695a\u5982\u4f55\u4ee5\u5b89\u5168\u548c\u5408\u4e4e\u9053\u5fb7\u7684\u65b9\u5f0f\u5f00\u53d1\u3001\u91c7\u8d2d\u548c\u90e8\u7f72\u4eba\u5de5\u667a\u80fd\u5bf9\u4e8e\u6301\u7eed\u589e\u957f\u548c\u4fdd\u6301\u7ade\u4e89\u4f18\u52bf\u81f3\u5173\u91cd\u8981\u3002\u91cd\u8981\u7684\u662f\u4e0d\u8981\u5c06\u6b64\u76ee\u6807\u4e0e\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u8981\u5b9e\u73b0\u7684\u6280\u672f\u76ee\u6807\u76f8\u6df7\u6dc6\u3002\u8d1f\u8d23\u4efb\u5730\u90e8\u7f72\u4eba\u5de5\u667a\u80fd\u2014\u2014\u65e0\u8bba\u662f\u7528\u4e8e\u5185\u90e8\u8fd8\u662f\u5916\u90e8\u76ee\u7684\u2014\u2014\u90fd\u9700\u8981\u610f\u8bc6\u5230\u4eba\u5de5\u667a\u80fd\u7684\u9053\u5fb7\u98ce\u9669\u548c\u7ec4\u7ec7\u5bf9\u51cf\u8f7b\u8fd9\u4e9b\u98ce\u9669\u7684\u6218\u7565\u7684\u8ba4\u540c\u3002", "note_en": "Treating it as a niche concern exposes your company to huge risks. Here\u2019s how to get people to buy in.\n  Many organizations have come around to seeing the business imperative of an AI ethical risk program. Countless news reports \u2014 from faulty and discriminatory facial recognition to privacy violations to black box algorithms with life-altering consequences \u2014 have put it on the agendas of boards, CEOs, and Chief Data and Analytics Officers. What most leaders don\u2019t understand, however, is that addressing these risks requires raising awareness of them across their entire organization. Those that do understand this often don\u2019t know how to proceed.\n  For companies that use AI, this needs to be a top priority. Over 50% of executives report \u201cmajor\u201d or \u201cextreme\u201d concern about the ethical and reputational risks of AI in their organization given its current level of preparedness for  identifying and mitigating those risks. That means that  building an AI ethical risk program that everyone is bought into is necessary for deploying AI  at all. Done well, raising awareness can both mitigate risks at the tactical level and lend itself to the successful implementation of a more general AI ethical risk program.\n    First, procurement officers are one of the greatest \u2014 and most overlooked \u2014 sources of AI ethical risks. AI vendors sell into most every department in your organization, but especially HR, marketing, and finance. If your HR procurement officers don\u2019t know how to ask the right questions to vet AI products then they may, for instance, import the risk of discriminating against protected sub-populations during the hiring process.\n  Second, senior leaders often don\u2019t have the requisite knowledge for spotting ethical flaws in their organization\u2019s AI, putting the company at risk, both reputationally and legally. For instance, if a product team is ready to deploy an AI but first needs the approval of an executive who knows little about the ethical risks of the product, the reputation of the brand (not to mention the executive) can be at high risk.\n  Third, an AI ethical risk program requires knowledgeable data scientists and engineers. If they don\u2019t understand the ethical risks of AI, they may either fail to understand their new responsibilities as articulated in the program, or they may understand them but not understand their importance, which in turn leads to not taking them seriously. On the other hand, if you have an organization that understands the ethical, reputational, and legal risks of AI they will understand the importance of implementing a program that systematically addresses those issues cross-organizationally.\n  Creating this cross-organizational awareness well requires work. It requires a consistent message that\u2019s also tailored to the specific concerns of each group. After all, the interests and responsibilities of the C-suite are different from those of product owners and designers which are different from those of data scientists and engineers \u2014 speaking in the same language to all of them results in speaking to none of them. The message can\u2019t be superficial, or it will result in people thinking AI ethics is either a PR issue or niche concern. And it needs a clear C-suite leader responsible for devising and overseeing the execution of a strategy that results in organization-wide awareness \u2014 this issue won\u2019t be taken seriously if the message doesn\u2019t come from the top. Here\u2019s where organizations should start.\n    It\u2019s crucial to ensure that every employee knows the risks and feels vested in the success of AI within the organization. They not only need to be aware that these issues exist, but they also need to know how those risks impact their particular job and how it fits in to their job description. It\u2019s one thing for someone in HR to know they need to hire people that are right for the job and what that might look like while also, incidentally, being aware of the ethical risks of AI. It\u2019s another for that person to see identifying and mitigating those risks as part of her job by, for instance, knowing that the responsible discharging of her responsibilities includes asking AI vendors that provide hiring software to provide documentation on how they identified and mitigated the biases in their AI.\n  Here are six measures you can take for building organizational awareness and buy-in the right way.\n  1. Remove the fear of AI and AI ethics. One barrier organizations face is that people outside of IT can be intimidated by the topic. \u201cArtificial intelligence,\u201d \u201cmachine learning,\u201d and \u201cdiscriminatory algorithms\u201d can seem like daunting concepts, which leads people to shy away from the topic altogether. It\u2019s crucial for building organizational awareness that people become familiar and comfortable with the concepts, if not the technical underpinnings.\n  Possessing basic AI literacy is, in one sense, not very difficult. After all, machine learning is, in essence, learning by example, which everyone is familiar with. Similarly, being bad at something because you didn\u2019t have enough examples is also familiar to everyone. If you\u2019re communicating to people how a discriminatory algorithm might be created, you can explain that some are the result of software that didn\u2019t have enough examples to learn and so the software makes mistakes (e.g. not having enough examples of black women\u2019s faces for your facial recognition software resulting in the software being really bad at picking out black women\u2019s faces). More generally, many of the ethical risks of AI and their various sources can be articulated to a non-technical audience and results in employees with the confidence they need to handle the issues.\n  Requiring your people in HR and marketing to have a basic familiarity with how AI works and how AI ethical risks arise may seem like a tall order. However, most organizations have created a great deal of awareness around cybersecurity risks, which also entails cybersecurity literacy, and this probably seemed like a virtual impossibility before companies committed to making it happen. But, if your people don\u2019t know the basics, they won\u2019t know to ask the right questions (e.g. of AI vendors) when it\u2019s crucial that they do so.\n  2. Tailor your communications to your audience. Senior leaders that see themselves as stewards of their brand\u2019s reputation are interested in avoiding risks that threaten that reputation. For them, speaking in the language of \u201cethical and reputational  risk\u201d is important for them to see the relevance of AI ethics to their concerns and responsibilities. Product designers, on the other hand, are less concerned about avoiding risk than with making \u201ccool\u201d and helpful products. Explaining how AI ethics by design improves their product, especially for the growing number of values-driven consumers and citizens generally, can be a highly effective way to reach that audience. Finally, data scientists and engineers want robust models that are effective. Talking their language means explaining how issues of biased algorithms and black boxes decrease the power of the tool and/or its adoption. No one wants to build an inaccurate or unused model.\n  Giving examples and stories of AI gone wrong that each audience can relate to is also important. This doesn\u2019t only need to involve PR disasters. It can also include, for instance, Amazon\u2019s inability to sufficiently mitigate the biases in their AI-powered hiring software which  admirably led Amazon to pull the plug on the project rather than deploying something that could be harmful to job applicants and the brand alike. Further, to the extent possible, you should use examples that are particular to your industry. There are cases in which AI has realized certain ethical risks in healthcare, but if you\u2019re talking to members of a fintech, employees will connect more with a story from a peer company.\n  3. Tie your attempts to build organizational awareness to your company\u2019s mission or purpose. If it\u2019s already built into your organizational culture what your mission/purpose is, integrate your discussion of AI ethics with that. Explain how AI ethics/ethical risk management is a further extension of that mission, a set of guardrails around what you\u2019re (not) willing to do in pursuit of that mission.\n  For example, your mission might be to provide the best financial advice possible. But you can\u2019t provide that advice unless people trust you and people can\u2019t trust you if you\u2019re negligent in your deployment of AI. When AI goes wrong, it goes wrong at scale, so communicating to your organization that part of providing the best financial advice possible entails protecting your clients, and that part of protecting them requires the ethical, responsible, or trustworthy deployment of AI, AI ethics is no longer seen as something bolted on to your operations. Instead, you communicate that it is a further extension of your mission and core values.\n  4. Define what AI ethics means in your organization in an operational way. It\u2019s one thing to say you\u2019re \u201cfor privacy\u201d or that you \u201crespect privacy.\u201d It\u2019s another thing to actually do something about it. To make sure your AI ethics value commitments aren\u2019t seen as mere PR, tie those commitments to ethical guardrails, e.g. \u201cwe will never sell your data to third-parties\u201d or \u201cwe will always anonymize data shared with third parties\u201d.\n  If you have a well-crafted AI ethics statement, it will include those guardrails, which play a dual role. First, they communicate to your team what you\u2019re actually doing (or plan to do) about the AI ethical risks. And second, it immediately communicates that this is not PR or something fuzzy. When values are articulated and communicated in a way that ties them to actions, those communications are credible and memorable.\n  One way to ease your audience into understanding how AI ethics is not fuzzy and is something that can be implemented is to explain the very real and tough ethical questions faced in healthcare and the ways they have tackled those issues. Relatedly, you can discuss how the healthcare industry has incorporated ethical risk mitigation into infrastructure and process so they can see it can be done.\n  5. Invite trusted and influential members across various functions to join you in your efforts. Some organizations, like Microsoft, have created a system of \u201cAI Ethics Champions.\u201d These are people throughout the organization that are charged with raising awareness of AI ethical risks with their teams. One important feature of an AI Ethics Champion program is that it empowers leaders who already have the trust and support of their team. Further, they know their respective teams better than, say, the Chief Learning Officer or the Chief Data Officer, or whomever leads the organizational awareness strategy.\n  6. Continuously educate. Building organizational awareness is not something you do on a Wednesday afternoon or a weekend retreat. It requires ongoing and diverse touchpoints, from internal and external speakers, workshops, newsletters, and so on. Indeed, AI and emerging technologies generally are rapidly changing and evolving, and with those changes come novel sources of ethical risk. To ensure that your organization doesn\u2019t fall too far behind, continuously educating your people will be a crucial bulwark against the rising tide of technological advances.\n  Business leaders know that figuring out how to develop, procure, and deploy AI in a safe and ethical manner is crucial for continued growth and maintaining a competitive edge. It is important that this goal is not confused with a technical goal for data scientists and engineers to achieve. The responsible deployment of AI \u2014 whether it is used for internal or external purposes \u2014 requires awareness of the ethical risks of AI and organizational buy-in to a strategy that mitigates them.", "posttime": "2021-08-06 10:44:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e86\u89e3,understand,ai", "title": "\u7ec4\u7ec7\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u4e86\u89e3 AI \u9053\u5fb7", "title_en": "Everyone in Your Organization Needs to Understand AI Ethics", "transed": 1, "url": "https://hbr.org/2021/07/everyone-in-your-organization-needs-to-understand-ai-ethics", "via": "", "real_tags": ["\u4e86\u89e3", "ai"]}]
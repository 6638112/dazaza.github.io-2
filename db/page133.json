[{"category": "", "categoryclass": "", "imagename": "a36a21fd4427c2ef9ba98c23ac2447ae.jpg", "infoid": 1067047, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ef\u6839\u636e\u8981\u6c42\u63d0\u4f9b\u91cf\u8eab\u5b9a\u5236\u7684\u5185\u5bb9\u3002\u901a\u8fc7https://www.tenproblems.com/about/\u7684\u5173\u4e8e\u9875\u9762\u7684\u8054\u7cfb\u8868\u683c\u63d0\u4ea4\u60a8\u7684\u6280\u672f\u89c4\u8303\u5e76\u83b7\u53d6\u60a8\u7684\u62a5\u4ef7\u3002 - \n  AI\u7d22\u5f15\u62a5\u544a\u66f2\u76ee\uff0c\u6c9f\u901a\uff0c\u84b8\u998f\u548c\u53ef\u89c6\u5316\u4e0e\u4eba\u5de5\u667a\u80fd\u76f8\u5173\u7684\u6570\u636e[1]\u3002 2021\u5e74\u62a5\u544a\u663e\u793a\u4e86Covid-19\u5bf9\u591a\u4e2a\u89c2\u70b9\u7684AI\u53d1\u5c55\u7684\u5f71\u54cd\u3002\u6280\u672f\u7ee9\u6548\u7ae0\u8282\u8ba8\u8bba\u4e86AI\u542f\u52a8\u5728\u5927\u6d41\u884c\u671f\u95f4\u5982\u4f55\u542f\u52a8\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6280\u672f\uff0c\u4ee5\u52a0\u901f\u4e0e...\u76f8\u5173\u7684\u643a\u5e26\u7684\u836f\u7269\u53d1\u73b0\uff0c\u800c\u6211\u4eec\u7684\u7ecf\u6d4e\u7ae0\u8282\u8868\u660e\uff0c\u7531\u4e8e\u8fd9\u4e24\u79cd\u90fd\u4f1a\u53d7\u5230\u5927\u6d41\u884c\u7684\u5f71\u54cd\u5e76\u6ca1\u6709\u53d7\u5230\u5927\u5927\u5f71\u54cd\u7684\u4e25\u91cd\u5f71\u54cd\u57282020\u5e74\u671f\u95f4\u3002\n \u8054\u5408\u56fd\u547c\u5401\u5404\u56fd\u653f\u5e9c\u5236\u5b9a\u56fd\u5bb6\u53ef\u6301\u7eed\u53d1\u5c55\u6218\u7565\uff0c\u7eb3\u5165\u653f\u7b56\u63aa\u65bd\uff0c\u4ee5\u5b9e\u73b02030\u5e74\u53ef\u6301\u7eed\u53d1\u5c55\u8bae\u7a0b\u3002\u867d\u7136AI\u6280\u672f\u53ef\u80fd\u652f\u6301\u5b9e\u73b0\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u7684\u7a81\u7834\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u5177\u6709\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\uff0c\u5373\u52a0\u5267\u4e0d\u5e73\u7b49\u548c\u5bf9\u4e2a\u4eba\uff0c\u793e\u4f1a\uff0c\u7ecf\u6d4e\u548c\u73af\u5883\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002\u4eba\u5de5\u60c5\u62a5\u6218\u7565\u7684\u8d44\u6e90\u6307\u5357\u662f\u4e00\u4e2a\u8054\u5408\u56fd\u51fa\u7248\u7269\uff0c\u9610\u660e\u4e86\u56fd\u5bb6\uff0c\u533a\u57df\u548c\u56fd\u9645\u4e00\u7ea7\u7684\u4eba\u5de5\u60c5\u62a5\u4f26\u7406\uff0c\u653f\u7b56\u548c\u6218\u7565\u4e0a\u7684\u73b0\u6709\u8d44\u6e90[2]\u3002\n \u4e3a\u4e86\u5e2e\u52a9\u4eba\u6027\u5730\u89e3\u51b3\u5408\u4f5c\u7684\u57fa\u672c\u95ee\u9898\uff0c\u79d1\u5b66\u5bb6\u9700\u8981\u91cd\u5efa\u4eba\u5de5\u667a\u80fd\u4f5c\u4e3a\u6df1\u523b\u7684\u793e\u4f1a[3]\u3002 AI\u5e94\u7528\u7684\u72b6\u6001\u53cd\u6620\u4e86\u7814\u7a76\u9886\u57df\u7684\u56fd\u5bb6\u3002\u5b83\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u6c89\u6d78\u5728\u4e00\u79cd\u65b9\u6cd5\u5b66\u7684\u4e2a\u4eba\u4e3b\u4e49\u4e2d\u3002\u6b63\u5982\u4ece\u4ecb\u7ecd\u6027\u6559\u79d1\u4e66\u90a3\u6837\u660e\u663e\uff0c\u89c4\u8303AI\u95ee\u9898\u662f\u4e00\u4e2a\u9762\u5bf9\u975e\u793e\u4f1a\u73af\u5883\u7684\u5b64\u72ec\u673a\u5668\u7684\u95ee\u9898\u3002 AI\u9700\u8981\u793e\u4f1a\u7406\u89e3\u548c\u5408\u4f5c\u667a\u80fd\u6765\u878d\u5165\u793e\u4f1a\u3002\n \u8be5\u5730\u533a\u5b58\u5728\u5404\u79cd\u7c7b\u578b\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5982\u76d1\u7763\uff0c\u65e0\u76d1\u7763\uff0c\u534a\u76d1\u7763\u548c\u5f3a\u5316\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u6df1\u5ea6\u5b66\u4e60\uff0c\u8fd9\u662f\u66f4\u5e7f\u6cdb\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u667a\u80fd\u5730\u5206\u6790\u5927\u89c4\u6a21\u7684\u6570\u636e\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e9b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u89c2\u70b9\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u589e\u5f3a\u5e94\u7528\u7a0b\u5e8f\u7684\u667a\u80fd\u548c\u80fd\u529b[4]\u3002\u56e0\u6b64\uff0c\u672c\u7814\u7a76\u7684\u4e3b\u8981\u8d21\u732e\u662f\u89e3\u91ca\u4e0d\u540c\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\u539f\u7406\u53ca\u5176\u5728\u5404\u79cd\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u9886\u57df\u7684\u9002\u7528\u6027\uff0c\u4f8b\u5982\u7f51\u7edc\u5b89\u5168\u7cfb\u7edf\uff0c\u667a\u80fd\u57ce\u5e02\uff0c\u533b\u7597\u4fdd\u5065\uff0c\u7535\u5b50\u5546\u52a1\uff0c\u519c\u4e1a\u7b49\u7b49\u3002\n \u4e3a\u59d4\u6258\u6240\u6709\u5177\u6709\u5f3a\u5927\u7684AI\u5de5\u5177\u7684\u9057\u4f20\u751f\u7269\u6765\u5b66\u4e60\uff0c\u90e8\u7f72\u548c\u89c4\u6a21AI\uff0c\u4ee5\u63d0\u9ad8\u4ed6\u4eec\u7684\u7e41\u8363\uff0c\u89e3\u51b3\u884c\u661f\u89c4\u6a21\u7684\u95ee\u9898\u5e76\u6fc0\u52b1\u4e0eAI\u7684\u4eba\u5851\u902021\u4e16\u7eaa\uff0c\u8499\u7279\u5229\u5c14.AI\u4e3a\u6240\u6709[5]\u4ecb\u7ecd\u6b64VIP AI 101 Cheamsheet\u3002\u8499\u7279\u5229\u5c14.AI\u6b63\u5728\u51c6\u5907\u5168\u7403\u6559\u80b2\u4e2d\u5fc3\u7f51\u7edc\uff0c\u4ee5\u4fbf\u5bf9AI\u4ea7\u751f\u5f71\u54cd\u7684\u5f71\u54cd\uff0c\u5e76\u4fc3\u8fdb\u5b89\u5168\u4eba\u9053\u4e3b\u4e49\u4eba\u5de5\u7efc\u5408\u60c5\u62a5\uff08AGI\uff09\u7684\u4f20\u67d3\u5a92\u4ecb\u3002\n \u4ece\u6b64\u7c7b\u4e00\u822c\u53c2\u8003\u6587\u732e\u5f00\u59cb\uff0c\u672c\u5c0f\u518c\u5b50\u8bc6\u522b\u51fa\u4e8e\u5728\u5b66\u672f\u7ea7\u522b\u7684\u5b66\u672f\u7ea7\u522b\uff0c\u4f1a\u8bae\u8bc9\u8bbc\u548c\u5b66\u751f\u8bba\u6587\u4e2d\u63d0\u51fa\u7684\u6700\u8fd1\u8d21\u732e\u7684\u5341\u4e2a\u76f8\u5173\u9886\u57df\u3002\u4e3a\u6bcf\u4e2a\u533a\u57df\u9009\u62e9\u4e86\u5341\u4e2a\u81ea\u7531\u8bbf\u95ee\u7684Internet\u53c2\u8003\uff0c\u5e76\u5728\u6bcf\u7ae0\u7ed3\u675f\u65f6\u63d0\u4f9b\u76f4\u63a5\u94fe\u63a5\uff0c\u4ee5\u4f9b\u81ea\u5df1\u7684\u54a8\u8be2\u3002\u6211\u4eec\u6240\u9009\u53c2\u8003\u6587\u732e\u4e0d\u6253\u7b97\u955c\u50cf\u7d22\u5f15\uff0c\u4e5f\u4e0d\u5efa\u7acb\u65b0\u9896\u7684\u5206\u7c7b\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u610f\u5473\u7740\u4ee3\u8868\u540c\u884c\u8bc4\u5ba1\uff0c\u591a\u6837\u5316\u548c\u79d1\u5b66\u97f3\u54cd\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u4ee5\u65e8\u5728\u9488\u5bf9\u975e\u4e13\u4e1a\u8bfb\u8005\u7684\u5782\u76f4\u4f20\u64ad\u3002\u5b83\u4eec\u8fd8\u80fd\u591f\u901a\u8fc7\u5728\u6bcf\u4e2a\u9009\u5b9a\u53c2\u8003\u7684\u7ed3\u5c3e\u62a5\u544a\u7684\u53c2\u8003\u4e66\u76ee\u4e2d\u8200\u53d6\u66f4\u591a\u7684\u53c2\u8003\u3002 \n\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684ADO\uff0c\u8fd9\u4e9b\u662f\u6211\u4eec\u5c06\u5728\u672c\u624b\u518c\u4e2d\u4ecb\u7ecd\u7684\u201c2020\u5e74\u4ee3\u4eba\u5de5\u667a\u80fd\u5341\u4e2a\u95ee\u9898\u201d\uff1a\n  \u6bcf\u4e2a\u95ee\u9898\u90fd\u6709\u81ea\u5df1\u7684\u4e13\u7528\u7ae0\u8282\uff0c\u7531\u4ecb\u7ecd\u6027\u90e8\u5206\u8fdb\u884c\u4e86\u4ecb\u7ecd\u6027\u90e8\u5206\uff0c\u8fd9\u662f\u5341\u4e2a\u9009\u5b9a\u7684\u53c2\u8003\u548c\u7ed3\u8bba\u90e8\u5206\u7684\u7b80\u77ed\u4ecb\u7ecd\u3002\n \u672c\u624b\u518c\u7684\u6700\u540e\u4e00\u7ae0\u5c06\u518d\u6b21\u62a5\u544a\u6bcf\u7ae0\u7684\u7ed3\u8bba\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u5b8c\u6574\u7684\u6267\u884c\u6458\u8981\u3002\n  [1] D.\u5f20\u7b49\u4eba\uff0c\u201cAI\u6307\u65702021\u5e74\u5ea6\u62a5\u544a\uff0c\u201dAI\u6307\u6570\u6307\u5bfc\u59d4\u5458\u4f1a\uff0c\u4ee5\u4eba\u4e3a\u672c\u7684AI\u7814\u7a76\u6240\uff0c\u65af\u5766\u798f\u5927\u5b66\uff0cCA\uff0cCA\uff0c3\u67082021\u5e743\u6708\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff1a//aiIndex.Stanford\u3002 EDU / WP-Content / Uploads / 2021/03 / 2021-AI-Index-Report_master.pdf\n [2] W. liu\u7b49\uff0c\u201c\u4eba\u5de5\u667a\u80fd\u8d44\u6e90\u6307\u5357\uff08AI\uff09\u7b56\u7565\u201d\uff0c\u8054\u5408\u56fd\uff0c6\u67082021\uff0c\u5728\u7ebf\u5728\u7ebf\uff0c\u5728\u7ebfhttps://sdgs.un.org/sites/default/files/2021-06/\u8d44\u6e90\uff0520guide\uff0520on\uff0520ai\uff0520strategies_june\uff05202021.pdf\n [3] A. Dafoe\u7b49\uff0c\u201c\u5408\u4f5cAI\uff1a\u673a\u5668\u5fc5\u987b\u5b66\u4f1a\u627e\u5230\u5171\u540c\u70b9\u201d\uff0cNature\uff0cVol 593,6\u67082021\u5e745\u67082021\u65e5\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebfhttps://media.nature.com/original/magazine-asset/ d41586-021-01170-0 / d41586-021-01170-0.pdf.\n [4] I.H. Sarker\uff0c\u201c\u673a\u5668\u5b66\u4e60\uff1a\u7b97\u6cd5\uff0c\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u548c\u7814\u7a76\u65b9\u5411\u201d\uff0cSN\u8ba1\u7b97\u673a\u79d1\u5b66\uff082021\uff092\uff1a160\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebfhttps://link.springer.com/content/pdf/10.1007/s42979-021-00592 -x.pdf. \n[5] V. Boucher\uff0c\u201cVIP AI 101 Cheamsheet\u201d\uff0cMontreal.ai Academy\uff0cPrepprint 8 Jun 2021\uff0c\u5728\u7ebf\u7f51\u5740\uff1ahttp://www.montreal.ai/ai4all.pdf ", "note_en": "Tailored content can be provided upon request. Submit your technical specification through the contact form in the About page at\u00a0 https://www.tenproblems.com/about/\u00a0and get your quote. \u2014\n  The AI Index Report tracks, collates, distills, and visualizes data related to artificial intelligence [1]. The 2021 report shows the effects of COVID-19 on AI development from multiple perspectives. The Technical Performance chapter discusses how an AI startup used machine-learning-based techniques to accelerate COVID-related drug discovery during the pandemic, and our Economy chapter suggests that AI hiring and private investment were not significantly adversely influenced by the pandemic, as both grew during 2020.\n The United Nations has called upon governments to develop national strategies for sustainable development, incorporating policy measures to achieve the 2030 Agenda for Sustainable Development. While AI technologies may support breakthroughs in achieving the Sustainable Development Goals, they may also have unanticipated consequences that will exacerbate inequalities and negatively impact individuals, societies, economies and the environment. The Resource Guide on Artificial Intelligence Strategies is a UN publication laying out existing resources on artificial intelligence ethics, policies and strategies on national, regional and international level [2].\n To help humanity solve fundamental problems of cooperation, scientists need to reconceive artificial intelligence as deeply social [3]. The state of AI applications reflects that of the research field. It has long been steeped in a kind of methodological individualism. As is evident from introductory textbooks, the canonical AI problem is that of a solitary machine confronting a non-social environment. AI needs social understanding and cooperative intelligence to integrate well into society.\n Various types of machine learning algorithms such as supervised, unsupervised, semi-supervised, and reinforcement learning exist in the area. Besides, the deep learning, which is part of a broader family of machine learning methods, can intelligently analyze the data on a large scale. In this paper, we present a comprehensive view on these machine learning algorithms that can be applied to enhance the intelligence and the capabilities of an application [4]. Thus, this study\u2019s key contribution is explaining the principles of different machine learning techniques and their applicability in various real-world application domains, such as cybersecurity systems, smart cities, healthcare, e-commerce, agriculture, and many more.\n For the purpose of entrusting all sentient beings with powerful AI tools to learn, deploy and scale AI in order to enhance their prosperity, to settle planetary-scale problems and to inspire those who, with AI, will shape the 21st Century, Montreal.ai introduces this VIP AI 101 CheatSheet for All [5]. Montreal.ai is preparing a global network of education centers to pioneer an impactful understanding of AI and to foster a vector for safe humanitarian Artificial General Intelligence (AGI).\n Starting from such general references,\u00a0this booklet identifies\u00a0ten relevant areas from very\u00a0recent contributions put forward at academic level in the form\u00a0journal articles, conference proceedings and students\u00a0theses. Ten freely accessible\u00a0internet\u00a0references have been\u00a0selected for each area and direct links are provided\u00a0at the end of each chapter for own consultation. Our selected references do not intend to mirror ranking indexes nor establish novel classifications.\u00a0On the contrary,\u00a0they are meant to represent peer-reviewed,\u00a0diverse and\u00a0scientifically-sound case studies for vertical dissemination aimed at non-specialist readers. They\u00a0will\u00a0also\u00a0be able to scoop\u00a0even more references through the bibliography\u00a0that is reported at the end of\u00a0each selected reference.\n Without further ado, these are the \u201c Ten Problems\u00a0for Artificial Intelligence\u00a0in the 2020s\u201d\u00a0that we are going to introduce\u00a0in this booklet:\n  Each problem has its own dedicated chapter made of an introductory section, a short presentation of the ten selected references and a conclusions section.\n The final chapter of this booklet will report the conclusions from each chapter again in order to provide a complete executive summary.\n  [1] D. Zhang et al., \u201cThe AI Index 2021 Annual Report,\u201d AI Index Steering Committee, Human-Centered AI Institute, Stanford University, Stanford, CA, March 2021, online at  https://aiindex.stanford.edu/wp-content/uploads/2021/03/2021-AI-Index-Report_Master.pdf\n [2] W. Liu et al., \u201cResource Guide ON ARTIFICIAL INTELLIGENCE (AI) STRATEGIES\u201d, United Nations, June 2021, online at  https://sdgs.un.org/sites/default/files/2021-06/Resource%20Guide%20on%20AI%20Strategies_June%202021.pdf\n [3] A. Dafoe et al., \u201cCooperative AI: machines must learn to find common ground\u201d, Nature, Vol 593, 6 May 2021, online at  https://media.nature.com/original/magazine-assets/d41586-021-01170-0/d41586-021-01170-0.pdf\n [4] I.H. Sarker, \u201cMachine Learning: Algorithms, Real\u2011World Applications and Research Directions\u201d, SN Computer Science (2021) 2:160, online at  https://link.springer.com/content/pdf/10.1007/s42979-021-00592-x.pdf\n [5] V. Boucher, \u201cVIP AI 101 Cheatsheet\u201d, Montreal.ai Academy, preprint 8 Jun 2021, online at  http://www.montreal.ai/ai4all.pdf", "posttime": "2021-06-20 23:14:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,2020,\u5e74\u4ee3,problems,ai", "title": "2020\u5e74\u4ee3\u4eba\u5de5\u667a\u80fd\u5341\u7684\u95ee\u9898 ", "title_en": "Ten Problems for Artificial Intelligence in the 2020s", "transed": 1, "url": "https://www.tenproblems.com/2020/01/16/ten-problems-for-artificial-intelligence-in-the-2020s/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "2020", "\u5e74\u4ee3", "problems", "ai"]}, {"category": "", "categoryclass": "", "imagename": "d5889c862bcb37688a8dcbd246565e32.png", "infoid": 1067046, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u51c6\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u8017\u65f6\u7684\uff0c\u56e0\u4e3a\u5efa\u7acb\u4e86\u8fd9\u4e9b\u73af\u5883\u6d89\u53ca\u5927\u91cf\u7684\u5de5\u4f5c\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u5efa\u7acb\u4e86\u4e00\u4e2a\u5de5\u4f5c\u6d41\u7a0b\uff0c\u51cf\u8f7b\u4e86\u5efa\u7acb\u57fa\u51c6\u7684\u6210\u672c\uff0c\u5e76\u5141\u8bb8\u6211\u66f4\u6709\u6548\u5730\u5206\u6790\u5355\u53cd\u5f62\u8c61\u3002\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u6db5\u76d6\u4e86\u6211\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e3a2021\u3002\n \u6027\u80fd\u8c03\u67e5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a\u8f6c\u5230\u6b65\u9aa43\uff0c\u76f4\u5230\u8fbe\u5230\u6240\u9700\u7684\u57fa\u51c6\u7ed3\u679c\uff0c\u4fdd\u6301\u8fd9\u4e9b\u4f18\u5316\u5e2e\u52a9\u3002\n \u8fd9\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0c\u6682\u505c/\u6062\u590d\u6216\u518d\u6b21\u590d\u5236\u3002\u624b\u52a8\u8bbe\u7f6e\u786c\u4ef6\u548c\u8f6f\u4ef6\u662f\u8017\u65f6\u548c\u9519\u8bef\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u60f3\u505a\u4e00\u6b21\u4e0d\u6b62\u4e00\u6b21\u3002\u7531\u4e8e\u73af\u5883\u7684\u5dee\u5f02\uff0c\u5b58\u5728\u5bf9\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u57fa\u51c6\u590d\u5236\u7684\u98ce\u9669\u5c06\u65e0\u6cd5\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\n \u9ad8\u5ea6\u5f00\u9500\u8fc7\u7a0b\u7684\u7ed3\u679c\u662f\uff0c\u6211\u4eec\u6700\u5c0f\u5316\u4ed6\u4eec\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u7ecf\u5e38\u50cf\u6211\u4eec\u4e00\u6837\u7ecf\u5e38\u8fd0\u884c\u8fc7\u7a0b\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u65e0\u6cd5\u56de\u7b54\u6211\u4eec\uff06\uff0339; d\u7684\u6240\u6709\u7ee9\u6548\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7406\u89e3\u662f\u6709\u9650\u7684\u3002\u6211\u4eec\u65e0\u6cd5\u53d1\u73b0\u4f7f\u6211\u4eec\u80fd\u591f\u8fdb\u884c\u6027\u80fd\u6539\u8fdb\u7684\u6240\u6709\u771f\u7406\u3002\n    \u4ec5\u8bbe\u7f6e\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e00\u6b21\uff0c\u5e76\u5728\u6309\u94ae\u7684\u6309\u94ae\u4e2d\u518d\u6b21\u8fd4\u56de\u5230\u8be5\u72b6\u6001\u3002\n    \u5b58\u50a8\u57fa\u51c6\u7ed3\u679c\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u8fd0\u884c\u90fd\u53ef\u4ee5\u5728\u672a\u6765\u8fdb\u4e00\u6b65\u5206\u6790\u3002\n  \u8f6c\u5230\u6b65\u9aa42\u4fee\u6539\u73af\u5883\uff08\u4f8b\u5982\uff0c\u5c06\u6982\u5ff5\u9a8c\u8bc1\u4fee\u8865\u7a0b\u5e8f\u5e94\u7528\u4e8e\u8f6f\u4ef6\uff09\u5e76\u91cd\u590d\u3002 \n\u7531\u4e8e\u7ee9\u6548\u8c03\u67e5\u88ab\u6355\u83b7\u5728Git\u5206\u652f\u4e2d\uff0c\u800c\u4e14\u5728\u6ca1\u6709\u5931\u53bb\u5386\u53f2\u7684\u60c5\u51b5\u4e0b\uff0c\u6613\u4e8e\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8c03\u67e5\u3002\n \u8fd9\u5b9e\u9645\u4e0a\u662f\u6211\u505a\u7684\uff01 Git\u63d0\u4f9b\u5b58\u50a8\u548c\u65f6\u95f4\u673a\u5668\u529f\u80fd\uff0c\u4ee5\u4fbf\u8f7b\u677e\u6682\u505c/\u6062\u590d\u6216\u590d\u5236\u6027\u80fd\u8c03\u67e5\u3002\n  ANSIBLE\u63d0\u4f9b\u4e86\u5c06\u786c\u4ef6\u548c\u8f6f\u4ef6\u7f6e\u4e8e\u6240\u9700\u72b6\u6001\u6240\u9700\u7684\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u4ee5\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Ansible\uff06\uff0339; S\u6740\u624b\u529f\u80fd\u662f\u7528\u4e8e\u5904\u7406\u5b89\u88c5\u5305\u7684\u4efb\u52a1\uff0c\u914d\u7f6e\u865a\u62df\u673a\u548c\u5bb9\u5668\u7b49\u7684\u5927\u578b\u751f\u6001\u7cfb\u7edf\u3002\u6211\u53d1\u73b0ansible\u6bd4python\u6216shell\u811a\u672c\u66f4\u9ad8\u6548\uff0c\u611f\u8c22Ansible\uff06\uff0339; s\u6a21\u5757\u96c6\u5408\u3002\n \u6211\u5728Virt-\u4efb\u52a1\u4e2d\u5f00\u59cb\u6536\u96c6Linux KVM\u5f00\u53d1\u7684Ansible\u4efb\u52a1\u3002\u5982\u679c\u60a8\uff06\uff0339;\u91cd\u65b0\u60f3\u77e5\u9053\u8fd0\u884c\u57fa\u51c6\u7684\u914d\u7f6e\u5982\u4e0a\u6837\u5b50\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u6784\u5efaQemu\u548c\u5ba2\u6237\u5185\u6838\u7684Ansible PlayBook\uff0c\u521b\u5efaFedora 34\u865a\u62df\u673a\uff0c\u8fd0\u884cFIO\u76d8I / O\u57fa\u51c6\uff0c\u5e76\u6536\u96c6\u7ed3\u679c\uff1a\n ---  - \u4e3b\u673a\uff1a\u4e3b\u673a\u4efb\u52a1\uff1a -  include_tasks\uff1atasks / build-qemu.yml vars\uff1a - \u56de\u8d2d\uff1ahttps\uff1a//gitlab.com/qemu-project/qemu.git  - \u7248\u672c\uff1av6.0.0  - \u540d\u79f0\uff1a\u521b\u5efa\u78c1\u76d8\u56fe\u7247include_tasks\uff1a\u4efb\u52a1/ virt-builder-create-image.yml vars\uff1a--os_version\uff1afedora-34  - \u5927\u5c0f\uff1a32g  - \u8f93\u51fa\uff1a/var/lib/libvirt/images/test.img  - \u683c\u5f0f\uff1araw  -  name\uff1abuild guest\u5185\u6838include_tasks\uff1a\u4efb\u52a1/ build-kernel.yml vyml\u540d\u79f0\uff1a\u6d4b\u8bd5\u72b6\u6001\uff1ashutdown ignore_errors\uff1ayes  -  name\uff1astart vm include_tasks\uff1a\u4efb\u52a1/ start-vm.yml vars\uff1a -  XML\uff1a\uff06\uff0334; {{\u67e5\u627e\uff08\uff06\uff0339;\u6587\u4ef6\uff06\uff0339 ;,\uff06\uff0339;\u6587\u4ef6/\u7684test.xml\uff06\uff0339;\uff09}}\uff06\uff0334; - \u4e3b\u673a\uff1a192.168.122.192  - \u4e3b\u673a\uff1aVMS\u4efb\u52a1\uff1a - \u540d\u79f0\uff1a\u5b89\u88c5FIO\u548crsync DNF\uff1a\u72b6\u6001\uff1a\u5f53\u524d\u540d\u79f0\uff1a -  fio  -  rsync  - \u540d\u79f0\uff1a\u8fd0\u884cfio\u811a\u672c\uff1afiles / fio.sh  - \u540d\u79f0\uff1a\u83b7\u53d6fio\u8f93\u51fa\u6587\u4ef6\u540c\u6b65\uff1aSRC\uff1aFIO-Output / DEST\uff1a\u7b14\u8bb0\u672c/ FIO-Output / Poll_source-Off\u6a21\u5f0f\uff1a\u62c9 - \u59d3\u540d\uff1a\u8fd0\u884cFIO\u811a\u672c\uff1a\u6587\u4ef6/ fio.sh -Enable  - \u540d\u79f0\uff1a\u83b7\u53d6FIO\u8f93\u51fa\u6587\u4ef6\u540c\u6b65\uff1aSRC\uff1aFIO\u8f93\u51fa/ dest\uff1a\u7b14\u8bb0\u672c/ fio-output / poll_source-on\u6a21\u5f0f\uff1apull  -  hosts\uff1ahosts\u4efb\u52a1\uff1a - \u540d\u79f0\uff1astop vm adv\uff1aname\uff1atest\u72b6\u6001\uff1a\u5173\u673a\n \u4e00\u4e2a\u91cd\u8981\u7684\u4e00\u70b9\u662fAnsible PlayBook\u8bbe\u7f6e\u5b8c\u6574\u73af\u5883\uff0c\u8fd0\u884c\u6240\u6709\u57fa\u51c6\uff0c\u5e76\u6536\u96c6\u7ed3\u679c\u3002\u4e0e\u8fd0\u884c\u5355\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u7684PlayBook\u4e0d\u540c\uff0c\u6b64\u4e00\u4e2a\u8fd0\u884c\u5168\u5957\u5957\u4ef6\uff0c\u4ee5\u4fbfPlayBook\u6355\u83b7\u4ea7\u751f\u7ed3\u679c\u7684\u6574\u4e2a\u73af\u5883\u3002\u5728\u8c03\u6574\u57fa\u51c6\u914d\u7f6e\u6216\u5c1d\u8bd5\u6982\u5ff5\u9a8c\u8bc1\u4f18\u5316\u65f6\uff0c\u8fd9\u79cd\u533a\u522b\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2aGit\u63d0\u4ea4\u90fd\u9700\u8981\u5305\u542b\u5b8c\u6574\u7684\u73af\u5883\uff0c\u4ee5\u4fbf\u6027\u80fd\u8c03\u67e5\u662f\u53ef\u91cd\u590d\u7684\uff0c\u5e76\u53ef\u5728\u5c06\u6765\u6062\u590d\u3002\n  \u6211\u6700\u8fd1\u5f00\u59cb\u4f7f\u7528jupyterlab\u7b14\u8bb0\u672c\u7535\u8111\u8fdb\u884c\u6570\u636e\u5206\u6790\u3002\u5b83\u4e3a\u7ed8\u5236\u7ed3\u679c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u73af\u5883\uff0c\u5e76\u5728\u6587\u6863\u4e2d\u7ec4\u7ec7\u5b83\u4eec\u3002 \n\u611f\u8c22jupyter\u5bb9\u5668\u56fe\u50cf\u7684\u5b98\u65b9jupyter\u5bb9\u5668\u56fe\u50cf\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ea\u9700\u4e00\u4e2a\u547d\u4ee4\u8fd0\u884c\u7684\u5b8c\u6574Python\u6570\u636e\u5206\u6790\u73af\u5883\uff1a\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u53ea\u5212\u4f24\u4e86jupyterlab\u7684\u8868\u9762\u3002\u5b83\u9002\u7528\u4e8e\u53ef\u89c6\u5316\u6570\u636e\uff0c\u5c3d\u7ba1\u6211\u5f53\u524d\u4f7f\u7528\u7684\u65b9\u5f0f\u4e0e\u5199Python Matplotlib\u811a\u672c\u5e76\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u5b83\u5e76\u4e0d\u5927\u3002\u5728\u65f6\u95f4\u6211\u548c\uff0339; LL\u5bf9\u5176\u4f18\u52bf\u548c\u52a3\u52bf\u6765\u66f4\u597d\u5730\u6b23\u8d4f\u3002\n  \u57fa\u4e8eGIT\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u81ea\u52a8\u5316\u57fa\u51c6\u8bbe\u7f6e\u548c\u5b58\u50a8\u7ed3\u679c\u53ef\u4ee5\u5f88\u957f\u7684\u8def\u8981\u51cf\u8f7b\u6027\u80fd\u8c03\u67e5\u7684\u9ad8\u5ea6\u5f00\u9500\u3002\u5982\u679ci\uff06\uff0339; m\u4e2d\u65ad\u6216\u9700\u8981\u5207\u6362\u5230\u4e0d\u540c\u7684\u673a\u5668\uff06\uff0339;\u5f88\u5bb9\u6613\u6062\u590d\u8c03\u67e5\u3002\u5177\u6709\u5b58\u50a8\u5728\u4e00\u8d77\u7684\u73af\u5883\u7684\u7ed3\u679c\u548c\u7ec6\u8282\u4f7f\u5f97\u53ef\u4ee5\u5728\u5c06\u6765\u91cd\u65b0\u5ba1\u89c6\u57fa\u51c6\u8fd0\u884c\u4ee5\u91cd\u73b0\u6216\u8c03\u6574\u5b83\u4eec\u3002 git\uff0cansible\u548cjupyter\u7684\u7ec4\u5408\u5f88\u597d\u5730\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4f46\u5982\u679c\u4f60\u719f\u6089\u5176\u4ed6\u5de5\u5177i\uff06\uff0339;\u559c\u6b22\u542c\u5230\uff01 ", "note_en": "Benchmarking computer systems is time-consuming because setting up thenecessary environment involves a lot of work. Over time I have built a workflowthat mitigates the cost of setting up benchmarks and allows me to analyzeperformance more effectively. This blog post covers my workflow as of 2021.\n Performance investigations often follow these steps: Go to Step 3 until the desired benchmark results are reached, keeping those optimizations that helped.\n This is a long process that is costly to pause/resume or replicate again in the future. Setting up hardware and software manually is both time-consuming and error-prone. Therefore we don&#39;t want to do it more than once. There is a risk that replicating the benchmark on another machine will fail to produce identical results due to differences in environments.\n The consequence of high-overhead processes is that we minimize their use since we cannot afford to run through the process as often as we&#39;d like. This means we cannot answer all the performance questions we&#39;d like to and therefore our understanding is limited. We cannot discover all the truths that would enable us to make performance improvements.\n    Set up hardware and software once only and be able to return to that state again in the future at the press of a button.\n    Store benchmark results so that each run is available for further analysis in the future.\n  Go to Step 2 to modify the environment (e.g. apply proof-of-concept patches to software) and repeat.\n Since the performance investigation is captured in a git branch it&#39;s easy to switch to another investigation without losing history.\n This is actually what I do! Git provides the storage and time machine functionality for easily pausing/resuming or replicating performance investigations.\n  Ansible provides the automation system necessary to put hardware and software into the desired state for benchmarking. Ansible&#39;s killer feature is the large ecosystem of modules for handling tasks like installing packages, configuring virtual machines and containers, etc. I find Ansible more productive than Python or shell scripting thanks to Ansible&#39;s modules collection.\n I&#39;ve begun collecting Ansible tasks for Linux KVM development in  virt-tasks. If you&#39;re wondering what the configuration for running a benchmark looks like, here is an Ansible playbook that builds QEMU and a guest kernel, creates a Fedora 34 virtual machine, runs the fio disk I/O benchmark, and collects the results:\n --- -  hosts : hosts  tasks :  -  include_tasks : tasks/build-qemu.yml  vars :  -  repo :  https://gitlab.com/qemu-project/qemu.git  -  version : v6.0.0  -  name : create disk image  include_tasks : tasks/virt-builder-create-image.yml  vars :  -  os_version : fedora-34  -  size : 32G  -  output : /var/lib/libvirt/images/test.img  -  format : raw  -  name : build guest kernel  include_tasks : tasks/build-kernel.yml  vars :  -  repo :  https://gitlab.com/stefanha/linux.git  -  version : cpuidle-haltpoll-virtqueue  -  config_src_path : files/.config  -  name : stop vm  virt :  name : test  state : shutdown  ignore_errors : yes  -  name : start vm  include_tasks : tasks/start-vm.yml  vars :  -  xml :  &#34; {{ lookup(&#39;file&#39;, &#39;files/test.xml&#39;) }} &#34;  -  host : 192.168.122.192 -  hosts : vms  tasks :  -  name : install fio and rsync  dnf :  state : present  name :  - fio  - rsync  -  name : run fio  script : files/fio.sh  -  name : fetch fio output files  synchronize :  src : fio-output/  dest : notebook/fio-output/poll_source-off  mode : pull  -  name : run fio  script : files/fio.sh --enable  -  name : fetch fio output files  synchronize :  src : fio-output/  dest : notebook/fio-output/poll_source-on  mode : pull -  hosts : hosts  tasks :  -  name : stop vm  virt :  name : test  state : shutdown\n An important point is that the Ansible playbook sets up the full environment, runs all benchmarks, and collects the results. Unlike a playbook that runs a single benchmark this one runs the full suite so that the playbook captures the entire environment that produced the results. This distinction is important when tweaking the benchmark configuration or trying out proof-of-concept optimizations. Each git commit needs to encompass the full environment so that the performance investigation is reproducible and can be resumed in the future.\n  I recently started using  JupyterLab notebooks for data analysis. It provides a convenient environment for graphing results and organizing them in documents.\n  Thanks to the official Jupyter container images you can get a full Python data analysis environment running with just one command:\n  So far I have only scratched the surface of JupyterLab. It works well for visualizing data although the way I currently use it is not much different from writing a Python matplotlib script and running it from the command-line. In time I&#39;ll get a better appreciation for its strengths and weaknesses.\n  A git-based workflow that automates benchmark setup and stores the results goes a long way towards mitigating the high overhead of performance investigations. If I&#39;m interrupted or need to switch to a different machine it&#39;s easy to resume the investigation. Having the results and details of the environment stored together makes it possible to revisit benchmark runs in the future to reproduce or tweak them. The combination of git, Ansible, and Jupyter achieves this workflow quite well, but if you&#39;re familiar with other tools I&#39;d love to hear!", "posttime": "2021-06-20 23:14:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u51c6,benchmarking", "title": "\u6211\u7684\u8868\u6f14\u57fa\u51c6\u5de5\u4f5c\u6d41\u7a0b ", "title_en": "My performance benchmarking workflow", "transed": 1, "url": "http://blog.vmsplice.net/2021/06/my-performance-benchmarking-workflow.html", "via": "", "real_tags": ["\u57fa\u51c6"]}, {"category": "", "categoryclass": "", "imagename": "ea3e2a9f3d310a6ae95b45d83a460c92.jpeg", "infoid": 1067045, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u7f8e\u56fd\u5df7\u9053\u4e0a\u7684\u5e73\u5747\u8f66\u8f86\u5e74\u9f84\u5347\u81f312.1\u5c81\uff0c\u4f5c\u4e3a\u5d07\u9ad8\u7684\u4ef7\u683c\uff0c\u63d0\u9ad8\u8d28\u91cf\u4fc3\u9500\u4e1a\u4e3b\u66f4\u957f\u65f6\u95f4\u6301\u6709\u4ed6\u4eec\u7684\u6c7d\u8f66\u3002\n  \u6839\u636e\u7814\u7a76\u516c\u53f8IHS Markit\u7684\u6570\u636e\u5728\u5468\u4e00\u53d1\u5e03\u7684\u6570\u636e\u6839\u636e\u200b\u200b\u6570\u636e\u53d1\u5e03\u7684\u6570\u636e\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u572812\u5e74\u4ee5\u4e0a\u7684\u666e\u901a\u8f66\u5e74\u4e0a\u6da8\u3002\u867d\u7136\u5728\u8fc7\u53bb\u768415\u5e74\u91cc\uff0c\u666e\u901a\u8f66\u8f86\u65f6\u4ee3\u7a33\u6b65\u4e0a\u5347\uff0c\u4f46\u7531\u4e8e\u65b0\u8f66\u9500\u91cf\u4e0b\u964d\uff0c\u51a0\u5fc3\u75c5\u5927\u6d41\u884c\u671f\u95f4\u7684\u8d8b\u52bf\u4fc3\u8fdb\u4e86\u51a0\u72b6\u75c5\u6bd2\u6d41\u884c\u75c5\u3002\n  \u8be5\u53d1\u73b0\u53cd\u6620\u4e86\u5728\u5176\u5bff\u547d\u5468\u671f\u4e2d\u7684\u529b\u91cf\u66f4\u5f3a\uff0c\u4ece\u8f83\u9ad8\u7684\u65b0\u8f66\u4ef7\u683c\u4e0a\u6da8\u591a\u5e74\u6765\u4e00\u76f4\u652f\u4ed8\u8fc4\u4eca\u4e3a\u6b62\u8fc4\u4eca\u4e3a\u6b62\u7684\u6c7d\u8f66\u6279\u6b21\uff0c\u6258\u5fb7\u00b7\u574e\u666e\uff08IHS\u552e\u540e\u89e3\u51b3\u65b9\u6848\u526f\u4e3b\u4efb\uff09\u6258\u5fb7\u574e\u666e\u8868\u793a\u3002\u4ed6\u8bf4\uff0c\u6539\u5584\u7684\u8f66\u8f86\u8d28\u91cf\u4e5f\u662f\u4e00\u4e2a\u56e0\u7d20\u3002\n  \u867d\u713620\u5e74\u524d\uff0c\u4e00\u8f86\u6c7d\u8f66\u53ef\u80fd\u4f1a\u53d1\u751f\u4e00\u6b21\u6216\u4e24\u6b21\uff0c\u6301\u7eed100,000\u82f1\u91cc\uff0c\u4f46\u4eca\u5929\u662f\u4e00\u8f86\u6c7d\u8f66\u66f4\u5e38\u89c1\u7684\u662f\u62e5\u6709\u591a\u4e2a\u4e1a\u4e3b\u5e76\u6301\u7eed200,000\u82f1\u91cc\u6216\u4ee5\u4e0a\u3002\n  \u201c\u8fd9\u5df2\u7ecf\u5ef6\u957f\u4e86\u8f66\u8f86\u7684\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e3a\u66f4\u591a\u4e70\u65b9\u521b\u9020\u4e86\u4ef7\u503c\uff0c\u4ee5\u4fbf\u5728\u8fde\u9501\u5e97\u4e0a\u4e0b\uff0c\u201dCamau\u5148\u751f\u3002 \u201c\u5bf9\u4e8e\u90a3\u4e2a\u7b2c\u4e8c\u6216\u7b2c\u4e09\u6216\u7b2c\u56db\u4e2a\u8001\u677f\uff0c\u9aa8\u9abc\u4e0a\u8fd8\u6709\u8089\u3002\u201d\n  \u60a8\u5c06\u6536\u53d6$ +\u7a0e\uff08\u5982\u679c\u9002\u7528\uff09\u4e3a\u534e\u5c14\u8857\u65e5\u8bb0\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u7684\u4efb\u4f55\u65f6\u95f4\u66f4\u6539\u5e10\u5355\u504f\u597d\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u3002\u60a8\u5c06\u5728\u7387\u6216\u6761\u6b3e\u7684\u4efb\u4f55\u53d8\u5316\u63d0\u524d\u901a\u77e5\u60a8\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u8c03\u7528\u5ba2\u6237\u670d\u52a1\u6765\u53d6\u6d88\u8ba2\u9605\u3002 ", "note_en": "The average age of vehicles on U.S. roadways rose to a record 12.1 years last year, as lofty prices and improved quality prompt owners to hold on to their cars longer.\n  It was the first time the average vehicle age rose above 12 years, according to data released Monday by research firm IHS Markit. While the average vehicle age has risen steadily over the last 15 years, the trend accelerated during the coronavirus pandemic partly because of  a drop in new-car sales, IHS said.\n  The finding reflects the stronger value of vehicles throughout their life cycles, from higher new-vehicle prices Americans have been paying for years to  steeper prices on the used-car lot, said Todd Campau, associate director of aftermarket solutions at IHS. Improved vehicle quality also is a factor, he said.\n  Whereas 20 years ago a car might have changed hands once or twice and lasted 100,000 miles, it is more common today for a car to have multiple owners and last for 200,000 miles or more, he said.\n  \u201cThat has extended the life cycle of the vehicle and created value for more buyers up and down the chain,\u201d Mr. Campau. \u201cFor that second or third or fourth owner, there\u2019s still meat on the bone.\u201d\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2021-06-20 23:13:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u65f6\u4ee3,age,\u8f66\u8f86", "title": "\u4f5c\u4e3a\u8f66\u8f86\u65f6\u4ee3\u51fb\u4e2d12\u5e74\uff0c\u7f8e\u56fd\u4eba\u6b63\u5728\u4fdd\u6301\u4ed6\u4eec\u7684\u6c7d\u8f66 ", "title_en": "Americans Are Keeping Their Cars Longer, as Vehicle Age Hits 12 Years", "transed": 1, "url": "https://www.wsj.com/articles/average-u-s-vehicle-age-hits-record-12-years-11623680640", "via": "", "real_tags": ["\u7f8e\u56fd", "\u65f6\u4ee3", "age", "\u8f66\u8f86"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067044, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9e\u7528\u5e38\u89c1\u7684LISP\u5305\u542b\u4ecb\u7ecd\u6027\u6750\u6599\u4ee5\u53ca\u4e14\u5b9e\u9645\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\u5355\u4f4d\u6d4b\u8bd5\u6846\u67b6\uff0cWeb\u670d\u52a1\u5668\uff0cSpamfilter\u548cID3\u6807\u8bb0\u89e3\u6790\u5668\u3002\n  Ansi Common Lisp\u662f\u4e00\u672cLisp\u521d\u5b66\u8005\u7684\u4e66\u3002\u5b83\u5177\u6709\u5728\u5e38\u89c1\u7684LISP\u4e2d\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u96f7\u793a\u8e2a\u5242\uff0c\u4ee5\u53ca\u4f7f\u7528\u5b8f\u751f\u6210HTML\u7684\u53e6\u4e00\u4e2a\uff08\u76f8\u5b9e\u7684\uff09\u793a\u4f8b\u3002\n ANSI Common Lisp\u5c06Lisp\u7f16\u7a0b\u548cANSI\u5e38\u89c1LISP\u7684\u5ba3\u4f20\uff0c\u6700\u65b0\u7684\u53c2\u8003\u624b\u518c\u4ecb\u7ecd\u3002\u521d\u5b66\u8005\u8ba4\u4e3a\u5b83\u7684\u4ed4\u7ec6\u89e3\u91ca\u548c\u6709\u8da3\u7684\u4f8b\u5b50\u4f7fLispProgramming\u6613\u4e8e\u5b66\u4e60\u3002\u4e13\u4e1a\u7a0b\u5e8f\u5458\u5c06\u6b23\u8d4fItsthorough\uff0c\u5b9e\u7528\u65b9\u6cd5\u3002\n  \u5728LISP\u4e0a\u662f\u201c\u5148\u8fdb\u7684LISP\u6280\u672f\u7efc\u5408\u7814\u7a76\uff0c\u5177\u6709\u81ea\u4e0b\u800c\u4e0a\u7684\u7f16\u7a0b\u4f5c\u4e3a\u7edf\u4e00\u7684\u201d\u3002\n \u672c\u4e66\u8fd8\u6db5\u76d6\u4e86\u4e0e\u81ea\u4e0b\u800c\u4e0a\u89c4\u5212\u76f8\u5173\u7684\u91cd\u8981\u79d1\u76ee\uff0c\u5305\u62ec\u529f\u80fd\u89c4\u5212\uff0c\u5feb\u901f\u539f\u578b\uff0c\u4e92\u52a8\u5f00\u53d1\u548c\u5d4c\u5165\u8bed\u8a00\u3002\u6700\u540e\u4e00\u7ae0\u91c7\u7528\u4e86\u6bd4\u4ee5\u524d\u7684LISP\u4e66\u7c4d\u66f4\u6df1\u5165\u7684\u89c6\u56fe\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\uff0c\u663e\u793a\u4e86\u5e38\u89c1\u7684LISP Objectsystem\u7684\u5de5\u4f5c\u6a21\u578b\u7684\u9010\u6b65\u6784\u5efa\uff08COLL\uff09\u3002\n  \u51ed\u501f\u4ed6\u51fa\u8272\u7684\u53e4\u602a\u7684\u6f2b\u753b\u548c\u72ec\u7acb\u4e16\u754c\u6e38\u620f\uff0cLongtimeLisper Conrad Barski\u6559\u4f60\u5e38\u89c1\u7684Lisp\u7684\u5965\u79d8\u3002\u60a8\u5c06\u542f\u52a8\u57fa\u7840\u77e5\u8bc6\uff0c\u5982\u5217\u8868\u64cd\u4f5c\uff0cI / O\u548c\u9012\u5f52\uff0c\u7136\u540e\u79fb\u52a8\u5230\u66f4\u590d\u6742\u7684\u4e3b\u9898\uff0c\u5982\u5b8f\uff0c\u66f4\u9ad8\u9636\u7f16\u7a0b\uff0c\u7279\u5b9a\u8bed\u8a00\u3002\u7136\u540e\uff0c\u5f53\u4f60\u7684\u5927\u8111\u8fc7\u70ed\u65f6\uff0c\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u52a8\u4f5c\u5305\u88c5\u7684\u6f2b\u753b\u4e66\u63d2\u66f2\u56de\u6eda\uff01\n \u60a8\u53ef\u4ee5\u901a\u8fc7\u540c\u4e00\u4f5c\u8005\u5728\u672c\u6559\u7a0b\u4e2d\u4e86\u89e3\u8fd9\u672c\u4e66\u7684\u98ce\u683c\uff1aLisp\u4e2d\u7684\u94f8\u9020\u5b62\u5b50 \n\u672c\u4e66\u662f\u5173\u4e8e\u5b8f\u7684\uff0c\u5373\u7f16\u5199\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u3002\u5b8f\u5c06Lisp\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u4f1f\u5927\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 useproperly\u65f6\uff0c\u5b8f\u4f7f\u96be\u4ee5\u95fb\u540d\u7684\u62bd\u8c61\uff0c\u7a0b\u5e8f\u5458\u4ea7\u54c1\u548c\u4ee3\u7801\u6548\u7387\u548c\u5b89\u5168\u6027\u7684\u60ca\u4eba\u58ee\u4e3e\u3002\u5b8f\u8ba9\u4f60\u505a\u4f60\u65e0\u6cd5\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u505a\u7684\u4e8b\u60c5\u3002\n \u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u4e00\u4e2a\u5e72\u71e5\u7684\u7f16\u7801\u624b\u518c\uff0c\u53ef\u5728\u4efb\u4f55\u6717\u683c\u675c\u5bab\u4e2d\u91cd\u65b0\u5212\u5206\u666e\u901aSensetechniques\uff0c\u8fd9\u672c\u4e66\u4e0d\u9002\u5408\u60a8\u3002\u8fd9\u672c\u4e66\u5173\u4e8e\u63a8\u52a8\u6211\u4eec\u5bf9\u7f16\u7a0b\u6240\u4e86\u89e3\u7684\u754c\u9650\u3002\u867d\u7136\u4e66\u7c4d\u6559\u5bfc\u6709\u7528\u7684\u5b8f\u89c2\u6280\u80fd\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7acb\u5373\u89e3\u51b3\u60a8\u7684\u7f16\u7a0b\u95ee\u9898\uff0c\u73b0\u5728\uff0c\u5b83\u4e5f\u88ab\u8bbe\u8ba1\u4e3a\u5a31\u4e50\u548c\u9677\u5165\u56f0\u5883\u3002\u5982\u679c\u4f60\u6709\u6ca1\u6709\u60f3\u8fc7Lisp\u751a\u81f3\u662f\u9488\u5bf9\u793e\u4f1a\u7684\u771f\u5b9e\u6027\uff0c\u8fd9\u5c31\u662f\u4f60\u4e00\u76f4\u5728\u5bfb\u627e\u7684\u4e66\u3002\n  \u4e13\u4e1a\u81ea\u52a8\u4ea4\u6613\uff1a\u7406\u8bba\u4e0e\u5b9e\u8df5\u4f7f\u7528CommonLISP\u6765\u63cf\u8ff0\u81ea\u52a8\u4ea4\u6613\u7cfb\u7edf\u7684\u5b9e\u65bd\u3002\n \u53cd\u6620\u4f5c\u8005Eugene Durenard\u5728\u8fd9\u4e00\u9886\u57df\u7684\u4e30\u5bcc\u7ecf\u9a8c\uff0c\u4e13\u4e1a\u7684\u81ea\u52a8\u4ea4\u6613\u63d0\u4f9b\u4e86\u5b9d\u8d35\u7684\u89c1\u89e3\u60a8\u4e0d\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u627e\u5230\u3002\u5b83\u63ed\u793a\u4e86\u4e00\u7cfb\u5217\u5173\u4e8e\u4eba\u5de5\u751f\u547d\u548c\u73b0\u4ee3\u63a7\u5236\u7406\u8bba\u7684\u5f53\u524d\u7814\u7a76\u7684\u4e00\u7cfb\u5217\u6982\u5ff5\u548c\u6280\u672f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u8ba1\u7684\u6709\u6548\u4ea4\u6613\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u4ee5\u4f18\u4e8e\u53d1\u5e03\u7684\u4ea4\u6613\u7cfb\u7edf\u7684\u9ad8\u5ea6\u3002\u5b83\u8fd8\u5de7\u5999\u5730\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u53ef\u5b89\u5b9a\u7cfb\u7edf\u4ea4\u6613\u67b6\u6784\u7684\u5b9e\u9645\u7f16\u7801\u548c\u5b9e\u73b0\u7684\u4fdd\u8bc1\u4fe1\u606f\u3002\n    \u666e\u901a\u7684LISP\u98df\u8c31\u662f\u4e00\u4e2a\u826f\u597d\u7684\u666e\u901a\u7684\u76f4\u89c9\uff0c\u5e94\u8be5\u4fdd\u6301\u5728ARM\u7684\u8303\u56f4\u5185\u3002\n  \u5e38\u89c1\u7684LISP\u98df\u8c31\u662f\u5173\u4e8e\u95ee\u9898\u7684\u95ee\u9898\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u95ee\u9898\u548c\u5728\u666e\u901aLISP\u4e2d\u7684\u4e16\u754c\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\u3002\u7531\u4f5c\u8005\u7f16\u5199\u7684WHOHAS\u5728\u8bb8\u591a\u6210\u529f\u7684\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u8fc7\u5e38\u89c1\u7684LISP\u8d85\u8fc7\u5341\u5e74\uff0c\u672c\u4e66\u6db5\u76d6\u4e86\u591a\u6837\u5316\u7684\u5730\u533a\uff0c\u4f5c\u4e3aWebProgramming\uff0c\u6570\u636e\u5e93\uff0c\u56fe\u5f62\u7528\u6237\u754c\u9762\uff0c\u96c6\u6210\u7684\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\uff0c\u591a\u7ebf\u7a0b\u548cMobileDevices\u4ee5\u53ca\u8c03\u8bd5\u6280\u672f\u4ee5\u53ca\u8c03\u8bd5\u6280\u672f\u4f18\u5316\uff0c\u5411namejust\u51e0\u4e2a\u3002\u5b83\u4e5f\u662f\u7b2c\u4e00\u4e2a\u5c06\u8bf8\u5982\u73af\u5883\u8bbf\u95ee\u6743\u9650\uff0c\u903b\u8f91\u8def\u5f84\uff0c\u7070\u5ea6\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4f20\u9012\uff0c\u6f02\u4eae\u7684\u6253\u5370\uff0csetfexce\u7684\u4ea4\u4ed8\uff0c\u6f02\u4eae\u6253\u5370\uff0csetfexce\u6216\u66f4\u6539\u5e38\u89c1LISP\u8bed\u6cd5\u7684\u666e\u901aLISP\u4e66\u7c4d\u3002\n \u666e\u901a\u7684LISP\u98df\u8c31\u662f\u7528\u6df7\u5408\u52a8\u624b\u7684\u98ce\u683c\u7f16\u5199\u7684\uff0c\u6ca1\u6709\u8936\u8fb9\u7684\u6563\u88c5\u54c1\uff0c\u5177\u6709\u7cbe\u786e\u7684\u4fe1\u606f\u548c\u666e\u5316\u7edd\u80b2\u3002 \n\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u5982\u4f55\u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8bf7\u4e0e\u5e93\u7248\u672c\u6df7\u5408\u7269\u8fdb\u884c\u6218\u6597\uff0c\u6216\u4f7f\u7528\u53ef\u91cd\u590d\u7684\u6784\u5efa\u6597\u4e89\uff0c\u90a3\u4e48\u8fd9\u672c\u4e66\u53ef\u4ee5\u62ef\u6551\u60a8\u7684\u65f6\u95f4\u3002  \u8be5\u6587\u672c\u5217\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6846\u67b6\u3002 \u5b83\u65e2\u9002\u7528\u4e8e\u4f2a\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u9002\u7528\u4e8e\u4ece\u6e90\u4ee3\u7801\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002  \u7406\u89e3\u548c\u4f7f\u7528\u6846\u67b6\u4e0d\u9700\u8981\u4efb\u4f55\u9ad8\u7ea7Lispknowledge\u3002 \u793a\u4f8b\u5728\u5f7c\u6b64\u6784\u5efa\u800c\u4e0d\u8fdb\u884cConceptualApps\u3002  \u91ce\u5916\u7684\u5e38\u89c1Lisp\u76f4\u63a5\u4eceTheAuthor\u83b7\u5f97\u3002 \u9500\u552e\u8fc7\u7a0b\u7531GumRoad\u7ba1\u7406\u3002  \u666e\u901a\u7684LISP Cookbook\u662f\u4e00\u4e2a\u534f\u4f5cRESSOURCE\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5404\u79cd\u4e3b\u9898\u4e0a\u4ee5\u6e05\u6670\u7684\u65b9\u5f0f\u8fdb\u884c\u5404\u79cd\u4e8b\u7269\uff0c\u4ece\u521b\u5efa\u4e00\u4e2a\u90e8\u7f72Web\u5e94\u7528\u7a0b\u5e8f\u7684\u9879\u76ee\u3002 ", "note_en": "Practical Common Lisp contains introductory material as well aspractical examples, such as a unit testing framework, web server, spamfilter and ID3 tag parser.\n  ANSI Common Lisp is a book for Lisp beginners. It has a niceexample of writing a simple ray tracer in Common Lisp, and another (ratherdated) example of using macros to generate HTML.\n ANSI Common Lisp combines an introduction to Lisp programming, and aconvenient, up-to-date reference manual for ANSI Common Lisp. Beginnerswill find that its careful explanations and interesting examples make Lispprogramming easy to learn. Professional programmers will appreciate itsthorough, practical approach.\n  On Lisp is \u201ca comprehensive studyof advanced Lisp techniques, with bottom-up programming as the unifyingtheme\u201d.\n The book also covers important subjects related to bottom-up programming,including functional programming, rapid prototyping, interactivedevelopment, and embedded languages. The final chapter takes a deeper lookat object-oriented programming than previous Lisp books, showing thestep-by-step construction of a working model of the Common Lisp ObjectSystem (CLOS).\n  With his brilliantly quirky comics and out-of-this-world games, longtimeLisper Conrad Barski teaches you the mysteries of Common Lisp. You\u2019ll startwith the basics, like list manipulation, I/O, and recursion, then move onto more complex topics like macros, higher order programming, anddomain-specific languages. Then, when your brain overheats, you can kickback with an action-packed comic book interlude!\n You can get an idea of the book\u2019s style in this tutorial by the same author:  Casting SPELs in Lisp\n  This book is about macros, that is programs that write programs. Macros arewhat make lisp the greatest programming language in the world. When usedproperly, macros enable amazing feats of abstraction, programmerproductivity, and code efficiency and security that are unheard ofelsewhere. Macros let you do things you simply cannot do in otherlanguages.\n If you are looking for a dry coding manual that re-hashes common-sensetechniques in whatever langue du jour, this book is not for you. This bookis about pushing the boundaries of what we know about programming. Whilethis book teaches useful macro skills that can help solve your programmingproblems today and now, it has also been designed to be entertaining andinspiring. If you have ever wondered what lisp or even programming itselfis really about, this is the book you have been looking for.\n  Professional Automated Trading: Theory and Practice uses CommonLisp to describe the implementation of automated trading systems.\n Reflecting author Eugene Durenard\u2019s extensive experience in this field,Professional Automated Trading offers valuable insights you won\u2019t findanywhere else. It reveals how a series of concepts and techniques comingfrom current research in artificial life and modern control theory can beapplied to the design of effective trading systems that outperform themajority of published trading systems. It also skillfully provides you withessential information on the practical coding and implementation of ascalable systematic trading architecture.\n    Common Lisp Recipes is a bookevery Common Lisper should keep within arm\u2019s reach.\n  Common Lisp Recipes is a collection of solutions to problemsand answers to questions you are likely to encounter when writingreal-world applications in Common Lisp. Written by an author whohas used Common Lisp in many successful commercial projects overmore than a decade, this book covers areas as diverse as webprogramming, databases, graphical user interfaces, integrationwith other programming languages, multi-threading, and mobiledevices as well as debugging techniques and optimization, to namejust a few. It is also the first Common Lisp book to tackle suchadvanced topics as environment access, logical pathnames, Graystreams, delivery of executables, pretty printing, setfexpansions, or changing the syntax of Common Lisp.\n Common Lisp Recipes is written in a style that mixes hands-on,no frills pragmatism with precise information and prudentmentorship.\n  If you are unsure how to create executables, fighting with library versionconflicts, or struggling with reproducible builds then this book can saveyou hours.\n The text lays out a framework that solves these issues. It works both forstandalone applications and for programs that run from source code.\n Understanding and using the framework does not require any advanced Lispknowledge. The examples build on one another without making conceptualleaps.\n  Common Lisp in the Wild is available  directly from theauthor. The sales process is managed by Gumroad.\n  The   Common Lisp Cookbook is a collaborative ressource that shows how to do various things in a clear fashion on a variety of topics, from creating a project to deploying a web application.", "posttime": "2021-06-20 23:13:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e66\u7c4d,lisp", "title": "\u5e38\u89c1\u7684Lisp\u4e66\u7c4d ", "title_en": "Common Lisp Books", "transed": 1, "url": "https://lisp-lang.org/books/", "via": "", "real_tags": ["\u4e66\u7c4d", "lisp"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067043, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "C\u53ef\u4ee5\u8bf4\u662f\u4e16\u754c\u4e0a\u6700\u6210\u529f\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5f53\u7136\uff0c\u5b83\u7684\u6210\u529f\u6709\r\u65e0\u4f11\u6b62\u5730\u8bf1\u60d1\u4eba\u4eec\u6539\u5584\u5b83\u3002\u56e0\u6b64\uff0cC\u53ef\u80fd\u662f\u65cf\u957f\r\u6700\u957f\u7684\u8bed\u8a00\u5217\u8868\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662fC ++\uff0cD\u7f16\u7a0b\u8bed\u8a00\uff0c\r\u6700\u8fd1\uff0c\u6700\u8fd1\u3002\u6709\u65e0\u9650\u7684\u8ba8\u8bba\u7ebf\u7a0b\u5982\u4f55\u4fee\u590dc\uff0c\u7ee7\u7eed\r\u56de\u523080\u5e74\u4ee3\u3002\n  \u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5730\u9762\u3002\u4ec0\u4e48\u53ef\u80fd\u88ab\u6dfb\u52a0\u5230\u8fd9\u6c64\uff1f\u6211\u662f\r\u5927\u591a\u6570\u6b64\u7c7b\u8ba8\u8bba\u56f4\u7ed5\u7ec6\u8282\u3002\u66f4\u6709\u8da3\u662f\u4ec0\u4e48\r\u6700\u5927\u7684\u57fa\u672c\u9519\u8bef\u3002\u6211\u4eec\u5e94\u8be5\u8003\u8651\u5230\u65f6\u4ee3\u7684\u80cc\u666f\r\u5b83\u4ea7\u751f\u7684c\uff0c\u4ee5\u53ca\u5b83\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u548c\u73af\u5883\r\u5176\u4e2d\u65e8\u5728\u4f7f\u7528\u5b83\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5b83\u662f\u4e3a16\u5c81\u5f00\u53d1\u7684\r\u4f4d\u673a\u5668\uff0c\u5177\u6709\u6781\u5176\u6709\u9650\u7684\u8d44\u6e90\u53ef\u7528\u3002\r\u6211\u60f3\u89e3\u96c7\u8fd9\u6837\u7684\u4e1c\u897f\r\u505a\u5783\u573e\u6536\u96c6\uff0c\u529f\u80fd\u7f16\u7a0b\uff0c\u52a8\u6001\u952e\u5165\u6216OOP\u3002\u90a3\u4e9b\u6ca1\u6709\u95ee\u9898c\r\u8bd5\u56fe\u89e3\u51b3\uff0c\u6240\u4ee5\u7f3a\u4e4f\u4ed6\u4eec\u4e0d\u662f\u9519\u8bef\u3002\n  \u4ec0\u4e48\u9519\u8bef\u5bfc\u81f4\u66f4\u591a\u7684\u60b2\u4f24\uff0c\u66f4\u591a\u7684\u9519\u8bef\uff0c\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u66f4\u65e0\u5c3d\u7684\u65f6\u95f4\r\u6d88\u8017\u7b49\u7b49\uff0c\u6bd4\u4efb\u4f55\u5176\u4ed6\u4eba\uff1f\u5f88\u591a\u4eba\u4f1a\u8bf4\r null\u6307\u9488\u3002\r\u6211\u4e0d\u540c\u610f\u3002\n    \u6211\u4e0d\u662f\u6307\u4ed6\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u8bed\u6cd5\u6216\u9690\u5f0f\u8f6c\u6362\r\u9635\u5217\u6307\u5411\u6307\u9488\u3002\u6211\u7684\u610f\u601d\u662f\u65e0\u6cd5\u5c06\u6570\u7ec4\u4f20\u9012\u7ed9\u51fd\u6570\r\u4f5c\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5373\u4f7f\u5b83\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002 C\u5c06\u9759\u9759\u5730\u8f6c\u6362\r\u6570\u7ec4\u662f\u6307\u9488\uff0c\u5e76\u5c06\u91cd\u5199\u51fd\u6570\u58f0\u660e\r\u6240\u4ee5\u5b83\u662f\u4e00\u4e2a\u6307\u9488\uff1a\n        \u8fd9\u4e2a\u770b\u4f3c\u65e0\u5bb3\u7684\u4fbf\u5229\u7279\u5f81\u662f\u65e0\u5c3d\u90aa\u6076\u7684\u6839\u6e90\u3002\r\u8fd9\u610f\u5473\u7740\u4e00\u65e6\u9635\u5217\u79bb\u5f00\u5b9a\u4e49\u7684\u8303\u56f4\uff0c\r\u4ed6\u4eec\u6210\u4e3a\u6307\u9488\uff0c\u5e76\u5931\u53bb\u4e86\u8d4b\u4e88\u7a0b\u5ea6\u7684\u4fe1\u606f\r\u6570\u7ec4 - \u6570\u7ec4\u7ef4\u5ea6\u3002\u5931\u53bb\u7684\u540e\u679c\u662f\u4ec0\u4e48\uff1f\r\u6b64\u4fe1\u606f\uff1f\n  \u5fc5\u987b\u4f7f\u7528\u66ff\u4ee3\u65b9\u6848\u3002\u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f0\u7ec8\u7ed3\u8005\u7684\u4e00\u4e2a\u539f\u56e0\u3002\r\u4e3a\u4e86\r\u5176\u4ed6\u9635\u5217\uff0c\u4ece\u4e0a\u4e0b\u6587\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u63a8\u65ad\u51fa\u6765\u3002\u81ea\u7136\uff0c\r\u6bcf\u79cd\u60c5\u51b5\u90fd\u4e0d\u540c\uff0c\u6240\u4ee5\u65e0\u4f11\u6b62\u7684\u9635\u5217\uff08\uff01\uff09\u9519\u8bef\u3002\n    C\u5b57\u7b26\u4e32\u51fd\u6570\u7684\u661f\u7cfb\uff0c\u4ece\u4e0d\u5b89\u5168\u7684strcpy\uff08\uff09\u5230Sprintf\uff08\uff09\u5411\u540e\uff0c\r\u662f\u76f4\u63a5\u7684\u7ed3\u679c\u3002\u4fee\u590d\u4e86\u8fd9\u4e00\u70b9\u6709\u5404\u79cd\u5404\u6837\u7684\u5c1d\u8bd5\uff0c\u4f8b\u5982\r \u5b89\u5168C\u5e93\u3002\r\u7136\u540e\u6709\u6240\u6709\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u56e0\u4e3a\u51fd\u6570\r\u9012\u7ed9\u4e86\u4e00\u4e2a\u6307\u9488\u6ca1\u6709\r\u60f3\u6cd5\uff0c\u9650\u5236\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u6ca1\u6709\u9635\u5217\u754c\u9650\u68c0\u67e5\u3002 \nC ++\u5728TOTO\u4e2d\u7ee7\u627f\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ece\u800c\u4ea7\u751f\u4e8610\u5e74\u4ee5\u4e0a\u7684\u4ea7\u5375\r\u5c1d\u8bd5\u521b\u5efa\u53ef\u7528\u7684\u5b57\u7b26\u4e32\u7c7b\u3002\u5373\u4f7f\u662f\u6700\u7ec8\u7684std :: string\u7ed3\u679c\r\u5b83\u9700\u8981\u59a5\u534f\uff0c\u5b83\u9700\u8981\u4e0eC 0\u7ec8\u6b62\u5b57\u7b26\u4e32\u517c\u5bb9\u3002\rC ++\u901a\u8fc7\u53d1\u660eSTD :: Vector\uff0c\u4ee5\u53ca\r\u8bb8\u591a\u7f16\u7a0b\u6307\u5357\u4f7f\u7528T []\u6837\u5f0f\u9635\u5217\u907f\u5f00\u3002\u4f46\u9057\u4ea7\rC\u9635\u5217\u7ee7\u7eed\u5728C ++\u4e2d\r \u4e0d\u5b89\u5168\u7684\u8fed\u4ee3\u5668\u8bbe\u8ba1\u3002\n  C99\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5b83\u4ecd\u7136\u5b58\u5728\u81f4\u547d\u7684\u9519\u8bef\r\u4e0d\u5c06\u6570\u7ec4\u7ef4\u5ea6\u4e0e\u6570\u7ec4\u6307\u5411\u6307\u9488\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\u578b\u3002\n  \u4f46\u4e00\u5207\u90fd\u6ca1\u6709\u4e22\u5931\u3002 C\u4ecd\u7136\u53ef\u4ee5\u4fee\u590d\u3002\u6240\u6709\u5b83\u9700\u8981\u7684\u662f\u4e00\u70b9\u65b0\u8bed\u6cd5\uff1a\n    \u610f\u5473\u7740\u6570\u7ec4\u88ab\u4f20\u9012\u4e3a\u6240\u8c13\u7684\u201c\u80d6\u6307\u9488\u201d\uff0c\u5373\u7531\u4e00\u4e2a\u7ec4\u6210\r\u6307\u5411\u9635\u5217\u7684\u5f00\u59cb\uff0c\u4ee5\u53ca\u6570\u7ec4\u7ef4\u5ea6\u7684size_t\u3002\r\u5f53\u7136\uff0c\u8fd9\u4e0d\u4f1a\u4fee\u590d\u4efb\u4f55\u73b0\u6709\u4ee3\u7801\uff0c\u4f46\u5b83\u5c06\u542f\u7528\u8981\u7f16\u5199\u7684\u65b0\u4ee3\u7801\r\u6b63\u786e\u53c8\u5f3a\u5927\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8bed\u6cd5\uff1a\n    \u53ef\u4ee5\u901a\u8fc7\u60ef\u4f8b\u548c\u7f16\u8bd1\u8005\u5f03\u7528\u3002\u751a\u81f3\u66f4\u597d\uff0c\u8fc7\u6e21\u5230\r\u53ef\u4ee5\u901a\u8fc7\u4f7f\u4e0e\u65e7\u4ee3\u7801\u517c\u5bb9\u7684\u58f0\u660e\u517c\u5bb9\u7684\u58f0\u660e\uff1a\n  #if newc.\r  extern void foo\uff08char a [..]\uff09;\r#elif c99\r  extern void foo\uff08size_t com\uff0cchar a [dim]\uff09;\r\uff03\u522b\u7684\r  extern void foo\uff08size_t dim\uff0cchar * a\uff09;\r\uff03\u4e07\u4e00\n  \u8fd9\u79cd\u53d8\u5316\u4e0d\u4f1a\u4ee5\u6240\u6709\u95ea\u4eae\u7684\u65b9\u5f0f\u5c06c\u8f6c\u5316\u4e3a\u73b0\u4ee3\u8bed\u8a00\r\u949f\u58f0\u548c\u53e3\u54e8\u3002\u5b83\u4ecd\u7136\u662fC\uff0c\u7cbe\u795e\u548c\u7ec3\u4e60\u3002\u5b83\u4f1a\r\u53ea\u9700\u51cf\u8f7bC\u7a0b\u5e8f\u5458\u5904\u7406\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u91cf\uff0c\u6709\u5bb3\u7684\u6765\u6e90\r\u866b\u5b50\u3002 \n\u6765\u81eaK + R\u7684\u76f8\u5173\u6587\u672cC\u7f16\u7a0b\u8bed\u8a005.3\u662f  \u201c\u5f53\u6570\u7ec4\u540d\u79f0\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u4e86\u4ec0\u4e48\u662f  \u9635\u5217\u5f00\u5934\u7684\u4f4d\u7f6e\u3002 \u5728\u88ab\u53eb\u529f\u80fd\u4e2d\uff0c  \u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u53d8\u91cf\u4e00\u6837\uff0c\u6240\u4ee5  \u6570\u7ec4\u540d\u79f0\u53c2\u6570\u662f\u771f\u6b63\u7684\u6307\u9488\uff0c\u5373\u5305\u542b\u5305\u542b\u7684\u53d8\u91cf  \u4e00\u4e2a\u5730\u5740\u3002\u201d  \u6765\u81eaC 99\u6807\u51c6\u7684\u76f8\u5173\u6587\u672c6.7.5.3.7\u662f  \u201c\u5c06\u53c2\u6570\u58f0\u660e\u4e3a\u201d\u7c7b\u578b\u201c  \u5e94\u8c03\u6574\u4e3a\u201c\u5408\u683c\u6307\u9488\u201d  \u201c  \u6765\u81eaStroupstrup\u7684C ++\u7f16\u7a0b\u8bed\u8a00\u7b2c\u4e00\u72487.1  \u201c\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6570\u7ec4\u540d\u79f0\u88ab\u8f6c\u6362\u4e3a\u6307\u9488\u3002\u201d ", "note_en": "C is arguably the world\u2019s most successful programming language. Its success has, of course,\rendlessly tempted people to improve upon it. Thus, C is probably the patriarch of the\rlongest list of languages. Notable among these are C++, the D programming language,\rand most recently, Go. There are endless discussion threads on how to fix C, going\rback to the 80\u2019s.\n  So this is well trod ground. What could possibly be added to this soup? I posit\rthat most such discussions center around detail. More interesting is what is\rthe largest fundamental mistake. We should take into account the context of the times\rthat spawned C, and the problems it was trying to solve and the environment\rin which it was intended to be used. Keep in mind it was developed for a 16\rbit machine, with extremely limited resources available.\rI\u2019d like to dismiss things like it doesn\u2019t\rdo garbage collection, functional programming, dynamic typing, or OOP. Those aren\u2019t problems C\rattempted to address, so the lack of them are not mistakes.\n  What mistake has caused more grief, more bugs, more workarounds, more endless hours\rconsumed, etc., than any other? Many people would say\r null pointers.\rI don\u2019t agree.\n    I don\u2019t mean them using the same syntax, or the implicit conversion of\rarrays to pointers. I mean the inability to pass an array to a function\ras an array, even if it is declared to be an array. C will silently convert\rthe array to be a pointer, and will rewrite the function declaration\rso it is semantically a pointer:\n        This seemingly innocuous convenience feature is the root of endless evil.\rIt means that once arrays leave the scope in which they are defined,\rthey become pointers, and lose the information which gives the extent\rof the array \u2014 the array dimension. What are the consequences of losing\rthis information?\n  An alternative must be used. For strings, it\u2019s the whole reason for the 0 terminator.\rFor\rother arrays, it is inferred programmatically from the context. Naturally,\revery situation is different, and so an endless array (!) of bugs ensues.\n    The galaxy of C string functions, from the unsafe strcpy() to sprintf() onwards,\ris a direct result. There are various attempts at fixing this, such as the\r Safe C Library.\rThen there are all the buffer overflows, because functions\rhanded a pointer have no\ridea what the limits are, and no array bounds checking is possible.\n  This problem was inherited in toto by C++, which consequently spawned 10+ years\rof attempts to create a usable string class. Even the eventual  std::string result\ris compromised by its need to be compatible with C 0-terminated strings.\rC++ addressed the more general array problem by inventing  std::vector , and\rmany programming guidelines eschew using  T[] style arrays. But the legacy of\rC arrays continues in C++ with the\r unsafe iterator design.\n  The C99 attempted to fix this problem, but the fatal error it made was still\rnot combining the array dimension with the array pointer into one type.\n  But all isn\u2019t lost. C can still be fixed. All it needs is a little new syntax:\n    meaning an array is passed as a so-called \u201cfat pointer\u201d, i.e. a pair consisting of a\rpointer to the start of the array, and a  size_t of the array dimension.\rOf course, this won\u2019t fix any existing code, but it will enable new code to be written\rcorrectly and robustly. Over time, the syntax:\n    can be deprecated by convention and by compilers. Even better, transitioning to the\rnew way can be done by making the declarations binary compatible with older code:\n  #if NEWC\r  extern  void foo( char a[..]);\r#elif C99\r  extern  void foo(size_t dim,  char a[dim]);\r#else\r  extern  void foo(size_t dim,  char *a);\r#endif\n  This change isn\u2019t going to transform C into a modern language with all the shiny\rbells and whistles. It\u2019ll still be C, in spirit as well as practice. It will\rjust relieve C programmers of dealing with one particular constant, pernicious source of\rbugs.\n    The relevant text from K+R\u2019s The C Programming Language 5.3 is\r\u201cWhen an array name is passed to a function, what is passed is the\rlocation of the beginning of the array. Within the called function,\rthis argument is a variable, just like any other variable, and so an\rarray name argument is truly a pointer, that is, a variable containing\ran address.\u201d\n  The relevant text from the C 99 Standard 6.7.5.3.7 is\r\u201cA declaration of a parameter as \u2018array of type\u2019\r\rshall be adjusted to \u2018qualified pointer to type\u2019\r\u201d\n  From Stroupstrup\u2019s The C++ Programming Language first edition 7.1\r\u201cand as usual, array names are converted to pointers.\u201d", "posttime": "2021-06-20 23:12:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9519\u8bef,biggest,\u6307\u9488", "title": "C\u6700\u5927\u7684\u9519\u8bef ", "title_en": "C's Biggest Mistake", "transed": 1, "url": "https://www.digitalmars.com/articles/C-biggest-mistake.html", "via": "", "real_tags": ["\u9519\u8bef", "biggest", "\u6307\u9488"]}]
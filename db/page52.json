[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1073488, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ec8\u4e8e\u5230\u4e86\uff0c\u7ea2\u8863\u4e3b\u6559\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u3002\n\u7ea2\u8863\u4e3b\u6559\nCardinal\u7684\u521b\u5efa\u9996\u5148\u662f\u4e3a\u4e86\u8ba9Rack\u6210\u4e3a\u4e00\u4e2a\u5408\u9002\u7684\u5f00\u6e90\u97f3\u9891\u63d2\u4ef6\u3002\n\u9700\u8981\u6307\u51fa\u7684\u662f\uff0cCardinal\u9879\u76ee\u53ca\u5176\u4f5c\u8005\u5e76\u4e0d\u5e0c\u671b\u539f\u59cb/\u5b98\u65b9\u6846\u67b6\u9879\u76ee\u6709\u4efb\u4f55\u4e0d\u597d\u7684\u5730\u65b9\u3002\nCardinal\u63d0\u4f9b\u4e863\u79cd\u63d2\u4ef6\u53d8\u4f53\u2014\u2014Main\u3001Synth\u548cFX\u3002\nFX\u548cSynth\u53d8\u4f53\u90fd\u67092\u4e2a\u97f3\u9891\u8f93\u51fa\uff0c\u800cMain\u67098\u4e2a\u3002\nMain\u63d0\u4f9b8\u4e2a\u97f3\u9891\u8f93\u5165\u548c\u8f93\u51fa\u4ee5\u53ca10\u4e2aCV\u8f93\u5165\u548c\u8f93\u51fa\u3002\nSynth\u63d0\u4f9b2\u4e2a\u97f3\u9891\u8f93\u51fa\uff0c\u4f46\u6ca1\u6709\u97f3\u9891\u8f93\u5165\u6216CV\u7aef\u53e3\u3002\n\u6700\u540e\uff0cFX\u63d0\u4f9b2\u4e2a\u97f3\u9891\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4f46\u6ca1\u6709CV\u7aef\u53e3\u3002\n\u7ea2\u8863\u4e3b\u6559\n\u9664\u4e86\u4e00\u4e9bbug\u4e4b\u5916\uff0cCardinal\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u7a33\u5b9a\u7684\u3002\n\u53c2\u6570\u6269\u5c55\u5668\u6a21\u5757\u5c1a\u672a\u6309\u65f6\u51c6\u5907\u597d\uff0c\u4f46\u5c06\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u5f88\u5feb\u63a8\u51fa\u3002\u57fa\u672c\u7684\n\u6211\u4eec\u60f3\u6dfb\u52a0\u51e0\u4e2a\u6a21\u5757\uff0c\u4f46\u6b63\u5728\u4ed4\u7ec6\u8bc4\u4f30\u5b83\u4eec\uff0c\u56e0\u4e3a\u6211\u4eec\u5728Cardinal\u4e2d\u6dfb\u52a0\u7684\u4efb\u4f55\u6a21\u5757\u90fd\u9700\u8981\u6c38\u8fdc\u4fdd\u7559\u5728\u90a3\u91cc\uff0c\u4ee5\u4fbf\u5411\u540e\u517c\u5bb9\u3002\n\u6211\u5e0c\u671b\u5c3d\u5feb\u5c1d\u8bd5\u7684\u662f\u53e6\u4e00\u79cd\u5904\u7406MIDI\u5230CV\u8f6c\u6362\u7684\u65b9\u6cd5\uff0c\u6211\u4e0d\u77e5\u9053&#39\uff1b\u6211\u4e0d\u559c\u6b22Rack\u76ee\u524d\u7684\u505a\u6cd5\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e2a\u9879\u76ee\u5e76\u4e14\u60f3\u5e2e\u5fd9\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u57fa\u672c\u7684\u5efa\u7b51\u8bf4\u660e\n\u76ee\u524d\u6211\u4eec\u90fd\u5728IRC\u7684#\u67a2\u673a\u5ba4\u3002\u5229\u4f2f\u62c9\u3002\u804a\u5929\u670d\u52a1\u5668\u3002\n\u5728\u8fd0\u884c\u65f6\u65e0\u6cd5\u5728\u73b0\u6709\u7684\u57fa\u6570\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0a\u5b89\u88c5\u65b0\u6a21\u5757\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5411\u6784\u5efa\u4e2d\u6dfb\u52a0\u65b0\u6a21\u5757\u3002\n\u5b89\u88c5\u8bf4\u660e\u53ef\u5728\n\u76ee\u524d\u8fd8\u6ca1\u6709\u4e3b\u8981\u7684\u5b98\u65b9\u5a92\u4f53\u5185\u5bb9\uff0c\n\u5b58\u5728\u4e00\u4e9bCC-0/\u516c\u5171\u57df\u57fa\u6570\u8865\u4e01\n\u5c31\u8fd9\u6837\uff0c\u4e0b\u8f7d\u3001\u5b89\u88c5\u5e76\u4eab\u53d7\u4e50\u8da3\u5427\uff01", "note_en": "It is finally here, the first release of  Cardinal. \r Has been slowly brewing behind the scenes, and now ready for the masses. \r First, some introductions...\n    Cardinal\r is a free and open-source virtual modular synthesizer plugin. \r It is based on the popular  VCV Rack\r but with a focus on being a fully self-contained plugin version.\n  Cardinal was created first and foremost as a way to have Rack as a proper open-source audio plugin. \r A proper audio plugin should be self-contained as much as possible, as to not interfere with the DAW/Host. Loading external modules clearly goes against this idea. \r Not to mention being  open-source, otherwise we are at the mercy of the wishes of a company for what we can and cannot do, which is not that great... \r (in case you were not aware, VCV&#39;s Rack plugin version, called &#34;Rack Pro&#34;, is a commercial closed-source product)\n  It needs to be said that Cardinal project and its authors do not wish anything bad to the original/official Rack project. \r In fact, Cardinal wouldn&#39;t exist if not for Rack v2 release. (which has many needed things to make a plugin version work) \r\r Cardinal and Rack should be able to co-exist friendly and peacefully, as they clearly have different targets. \r It is likely most people will prefer to use Rack Pro for its official support and its big module collection (including commercial ones). \r\r A feature comparison between Cardinal and Rack Pro can be seen\r  here.\n      Cardinal provides 3 plugin variants -  Main,  Synth and  FX. \r They are all equivalent in performance and behaviour, with only the IO and metadata that changes. \r This is because some hosts are very strict on which plugins are allowed as instruments vs FX, so separate variants of the same plugin are needed.\n  FX and  Synth variants both have 2 audio outputs, while  Main has 8. \r All variants have MIDI input and output support.\n  Main provides 8 audio inputs and outputs and 10 CV inputs and outputs. \r Note that due to VST2 format not supporting CV ports, this variant is not available for VST2.\n  Synth provides 2 audio outputs but no audio inputs or CV ports. \r Plugin type is set as &#34;instrument&#34;.\n  And finally  FX provides 2 audio inputs and outputs, but no CV ports. \r Plugin type is set as regular &#34;effect&#34;.\n        Additionally Cardinal\r  provides its own modules\r for DAW/Host automation, time position and internal plugin hosting.\n    With the exception of a few bugs, Cardinal can be considered stable. \r Though currently the following should be noted:\n    A parameter expander module was not ready on time for this release, but will come soon in a future release.   Fundamental\r is on a similar situation, there are some artwork license issues that prevent us from using Fundamental exactly as we want. \r We plan to redo Fundamental&#39;s panel graphics in a more liberal license, so it then can be included in Cardinal.\n  There are a few modules we want to add, but they are being evaluated carefully as going forward anything we add in Cardinal needs to remain there forever, for backwards compatibility. \r They must also have a GPLv3+ compatible license, which not all of them do. \r Not to mention a clear artwork/graphics license... it is amazing how many of these projects do not care or understand about software licenses :( \r Overall it makes packaging quite difficult, so it is natural that new modules are not added as fast as we wished for.\n  Something I hope to try soon is an alternative way to handle MIDI to CV conversion, as I don&#39;t like the way Rack does it at the moment. \r The current Cardinal &#34;core&#34; modules follow the same exact approach as the official Rack, to make the transition easier,\r but some kind of &#34;MIDI v2&#34; modules will be done eventually.\n    If you like the project and want to help out, there are basic building instructions\r  here, \r And an overview of the source code is available\r  here.\n  Currently we are all on  #cardinal IRC room in irc.libera.chat server. \r Come join us in your favorite IRC client or through a Matrix bridge.\n  Installing new modules on an existing Cardinal binary is not possible at run-time, but we can add new modules to the build. \r Details on this are available\r  here. \r Also check\r  this wiki page\r where we discuss possible modules to include.\n    Install instructions are available on\r  this wiki page. \r If you are using the KXStudio repositories you can simply install  cardinal-lv2,  cardinal-vst2 or  cardinal-vst3 packages as usual. \r Consult the wiki page linked above for details on other distributions, or otherwise use the prebuilt binaries on the\r  Cardinal releases page.\n  There is no Cardinal official media content as of yet,\r but if you are looking for tutorials just look for &#34;VCV Rack&#34; stuff which pretty much applies to Cardinal unchanged. \r Some modules will appear slightly different, or not be available, but the overall idea on how to use it is the same.\n  A few CC-0 / public domain Cardinal patches are present\r  directly in the source code. \r You can use those as your starting point, they are fully free to do what you want with.\n  And that is it, go download, install and have fun! \r If you find an issue or want to request a potentially useful feature, please use the\r  Cardinal issue tracker. \r And happy Valentine&#39;s day too. \\o/", "posttime": "2022-02-15 17:40:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u514d\u8d39,free,cardinal", "title": "Cardinal\uff1a\u514d\u8d39\u5f00\u6e90\u6a21\u5757\u5316synth\u63d2\u4ef6", "title_en": "Cardinal: Free and open-source modular synth plugin", "transed": 1, "url": "https://kx.studio/News/?action=view&url=cardinal-2202-is-now-released", "via": "", "real_tags": ["\u5f00\u6e90", "\u514d\u8d39", "free", "cardinal"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073487, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1995\u5e741\u67081\u65e5\uff0c\u534f\u8c03\u4e16\u754c\u65f615\u5206\uff0c\u5317\u6d77Draupner\u5929\u7136\u6c14\u5e73\u53f0\u4e0a\u7684\u5411\u4e0b\u770b\u6fc0\u5149\u8bb0\u5f55\u4e86\u6d4b\u91cf\u4eea\u5668\u68c0\u6d4b\u5230\u7684\u6700\u8457\u540d\u7684\u53cd\u5e38\u6ce2\u3002\u6ce2\u6d6a\u9ad825.6\u7c73\uff0c\u6ce2\u5cf0\u9ad818.5\u7c73\uff08\u65b9\u6846A\uff09\u3002\u636e\u4f30\u8ba1\uff0c\u8be5\u5730\u533a\u7684\u6709\u6548\u6ce2\u9ad8\u7ea6\u4e3a12\u7c73\u3002\u6d4b\u91cf\u7ed3\u679c\u8bc1\u5b9e\u4e86\u5de8\u5927\u6d41\u6c13\u6ce2\u7684\u5b58\u5728\uff0c\u6b64\u524d\u6c34\u624b\u4eec\u66fe\u8f76\u4e8b\u5730\u62a5\u9053\u8fc7\u8fd9\u79cd\u60c5\u51b5\u3002\u5b83\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u7814\u7a76\uff0c\u65e8\u5728\u786e\u5b9a\u5f53\u65f6\u7684\u6c14\u8c61\u548c\u6d77\u6d6a\u72b6\u51b5\uff0c\u5e76\u5bf9\u8fd9\u4e00\u4e8b\u4ef6\u63d0\u4f9b\u7269\u7406\u89e3\u91ca\u3002\n\u4e8c\u7ef4\u6ce2\u80fd\u8c31\uff1a\u6ce2\u80fd\u5728\u9891\u7387\u548c\u65b9\u5411\u4e0a\u7684\u5206\u5e03\u3002\u8fd9\u4e2a\u6570\u91cf\u662f\u4efb\u4f55\u73b0\u4ee3\u6ce2\u6d6a\u6a21\u578b\u7684\u9884\u6d4b\u53d8\u91cf\u3002\n\u6ce2\u5cf0\u9ad8\u5ea6\uff1a\u6ce2\u9876\u4e0e\u672a\u53d7\u5e72\u6270\u6c34\u9762\u4e4b\u95f4\u7684\u9ad8\u5ea6\u3002\n\u6709\u6548\u6ce2\u9ad8\uff1a\u6ce2\u8c31\u79ef\u5206\u5e73\u65b9\u6839\u7684\u56db\u500d\u3002\u5b83\u4e0e\u6700\u9ad8\u4e09\u5206\u4e4b\u4e00\u6ce2\u6d6a\u7684\u5e73\u5747\u9ad8\u5ea6\u5bc6\u5207\u76f8\u5173\u3002\n\u6d8c\u6d6a\uff1a\u6e90\u81ea\u9065\u8fdc\u98ce\u66b4\u4e14\u4e0d\u53d7\u5f53\u5730\u98ce\u5f71\u54cd\u7684\u6ce2\u6d6a\u7cfb\u7edf\u3002\n\u6ce2\u5cf0\u5468\u671f\uff1a\u5bf9\u5e94\u4e8e1D\u6ce2\u80fd\u8c31\u6700\u9ad8\u503c\u7684\u9891\u7387\u7684\u5012\u6570\u3002\nECMWF\u6700\u8fd1\u5236\u4f5c\u7684\u9ad8\u5206\u8fa8\u7387\u56de\u987e\u6027\u9884\u62a5\uff08\u4e8b\u540e\u9884\u6d4b\uff09\u4ee5\u524d\u6240\u672a\u6709\u7684\u7ec6\u8282\u5c55\u793a\u4e861995\u5e741\u67081\u65e5\u98ce\u573a\u3001\u6c14\u538b\u573a\u548c\u6ce2\u573a\u7684\u6f14\u53d8\uff0c\u5e76\u4e3aDraupner\u6ce2\u4e8b\u4ef6\u7684\u53d1\u751f\u63d0\u4f9b\u4e86\u65b0\u7684\u7ebf\u7d22\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u7531\u5411\u5357\u79fb\u52a8\u7684\u6781\u4f4e\u5c42\u9a71\u52a8\u7684\u6ce2\u6d6a\u4e0e\u5927\u91cf\u7684\u672c\u5730\u98ce\u751f\u6ce2\u6d6a\u7cfb\u7edf\u76f8\u4e92\u4f5c\u7528\uff0c\u4ea7\u751f\u4e86\u6709\u5229\u4e8e\u89c2\u6d4b\u5230\u7684\u5927\u578b\u6d41\u6c13\u6ce2\u7684\u6761\u4ef6\u3002\nCavaleri\u7b49\u4eba\uff082016a\uff09\u5bf9Draupner\u6ce2\u8d77\u6e90\u7684\u7814\u7a76\u8fdb\u884c\u4e86\u6982\u8ff0\u3002Sunde\uff081995\u5e74\uff09\u62a5\u544a\u4e86\u8be6\u7ec6\u7684\u5206\u6790\uff0cHaver\uff082004\u5e74\uff09\u603b\u7ed3\u4e86\u8be6\u7ec6\u7684\u5206\u6790\u3002\u636e\u7ecf\u5e38\u62a5\u9053\uff0c\u4f4d\u4e8e\u745e\u5178\u4e0a\u7a7a\u7684\u4e00\u4e2a\u4f4e\u538b\u4ea7\u751f\u4e86\u5f3a\u52b2\u7684\u897f\u5317\u6c14\u6d41\uff0c\u5bfc\u81f4\u5927\u91cf\u7684\u4e1c\u5357\u4f20\u64ad\u6ce2\u8986\u76d6\u6574\u4e2a\u5317\u6d77\u3002Adcock\u7b49\u4eba\uff082011\u5e74\uff09\u5229\u7528\u4e86\u57fa\u4e8eERA\u4e2d\u671f\u518d\u5206\u6790\u6570\u636e\u7684\u4e13\u95e8\u518d\u5206\u6790\u3002ERA\u8fc7\u6e21\u7cfb\u7edf\u4f7f\u7528ECMWF\u7684\u7efc\u5408\u9884\u6d4b\u7cfb\u7edf\uff08IFS\uff09\u7684\u6a21\u578b\u5468\u671f31r2\uff0c\u4ee5\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u8fd0\u884c\uff08TL799\uff0c\u5bf9\u5e94\u4e8e\u7ea625\u516c\u91cc\u7684\u6c34\u5e73\u7f51\u683c\u95f4\u8ddd\uff09\uff0c\u4ee5\u4ea7\u751f\u65b0\u7684\u60c5\u51b5\u8c03\u67e5\u3002\u7136\u800c\uff0c\u963f\u5fb7\u79d1\u514b\u7b49\u4eba\u7684\u6a21\u62df\u5206\u8fa8\u7387\u4ecd\u7136\u8fc7\u4e8e\u7c97\u7cd9\uff0c\u65e0\u6cd5\u6355\u6349\u4e8b\u4ef6\u7684\u7ec6\u8282\u3002\u8fd9\u91cc\u62a5\u9053\u4e86\u4e00\u4e2a\u65b0\u7684\u3001\u975e\u5e38\u8be6\u7ec6\u7684\u603b\u4f53\u60c5\u51b5\u63cf\u8ff0\uff0c\u8fd9\u662f\u4ee5\u524d\u6ca1\u6709\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u9ad8\u5206\u8fa8\u7387\u9884\u62a5\u7684\u5f53\u524d\u5206\u8fa8\u7387TCo1279\uff08\u76f8\u5f53\u4e8e\u7ea69 km\u7684\u6c34\u5e73\u7f51\u683c\u95f4\u8ddd\uff09\uff08H\u00f3lm et al.\uff0c2016\uff09\uff0c\u5229\u7528IFS\u5468\u671f41r1\u800c\u975e41r2\uff08\u76ee\u524d\u5df2\u7528\u4e8eTCo1279\u7684\u64cd\u4f5c\u5f15\u5165\uff09\u5bf9\u6c14\u8c61\u548c\u6ce2\u6d6a\u6761\u4ef6\u8fdb\u884c\u540e\u6d4b\uff0c\u83b7\u5f97\u4e86\u8be5\u6570\u636e\u3002\nDraupner\u98ce\u66b4\u88ab\u5efa\u6a21\u4e3a\u4e00\u7cfb\u5217\u9884\u6d4b\uff0c\u4eceTL799\u518d\u5206\u6790\u63d0\u4f9b\u7684\u521d\u59cb\u6761\u4ef6\u5f00\u59cb\u3002\u6a21\u62df\u4e2d\u4f7f\u7528\u7684\u6a21\u578b\u7248\u672c\u53d7\u76ca\u4e8e\u7528\u4e8eERA\u8fc7\u6e21\u7684IFS\u5468\u671f31r2\u548cIFS\u5468\u671f41r1\u4e4b\u95f4\u7684\u6240\u6709\u6a21\u578b\u5347\u7ea7\u3002\n\u672c\u6587\u62a5\u544a\u7684\u6240\u6709\u7ed3\u679c\u5747\u4ece\u5206\u6790\u5f00\u59cb\u83b7\u5f97\uff0c\u6709\u6548\u671f\u4e3a1995\u5e741\u67081\u65e500 UTC\u3002\u56fe1\u63d0\u4f9b\u4e861\u67081\u65e5\u6c14\u8c61\u6761\u4ef6\u7684\u987a\u5e8f\u89c6\u56fe\u3002\u4e00\u4e2a\u4f4e\u538b\u7cfb\u7edf\u96c6\u4e2d\u5728\u745e\u5178\u4e0a\u7a7a\u3002\u534f\u8c03\u4e16\u754c\u65f600\u65f6\uff08\u56fe1a\uff09\uff0c\u632a\u5a01\u6d77\u5cb8\u5916\u6e05\u6670\u53ef\u89c1\u6781\u4f4e\u3002\u5b83\u5e26\u6765\u4e86\u6765\u81ea\u5317\u65b9\u7684\u51b7\u7a7a\u6c14\u7684\u80fd\u91cf\u589e\u52a0\u3002\u5728Draupner\uff08\u7531\u6bcf\u4e2a\u9762\u677f\u4e2d\u5fc3\u9644\u8fd1\u7684\u9ed1\u8272\u4e09\u89d2\u5f62\u8868\u793a\uff09\uff0c\u98ce\u5411\u7ea6\u4e3a315\u00b0\uff08\u5373\u897f\u5317\u98ce\uff09\u3002\u5728\u63a5\u4e0b\u6765\u768412\u5c0f\u65f6\u5185\uff08\u56fe1b-c\uff09\uff0c\u6781\u5730\u4f4e\u538b\u8fc5\u901f\u5411\u5357\u79fb\u52a8\uff0c\u5176\u897f\u4fa7\u98ce\u901f\u589e\u52a0\u3002\u5b83\u5728\u5927\u7ea615 UTC\u65f6\u5230\u8fbe\u5fb7\u62c9\u666e\u7eb3\u7eac\u5ea6\uff08\u56fe1d\uff09\u3002\u5728\u5e73\u53f0\u533a\u57df\uff0c\u5f53\u65f610\u7c73\u7684\u98ce\u901f\u8d85\u8fc720\u7c73/\u79d2\uff0c\u65b9\u5411\u8f6c\u5411\u66f4\u5317\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5c0f\u65f6\u91cc\uff0c\u4f4e\u538b\u7ee7\u7eed\u5411\u5357\u548c\u4e1c\u5357\u79fb\u52a8\uff0c\u5927\u7ea6\u5728\u5348\u591c\u65f6\u5206\u5230\u8fbe\u9760\u8fd1\u5fb7\u56fd\u8fb9\u5883\u7684\u8377\u5170\u6d77\u5cb8\u3002\n\u5982\u56fe2\u6240\u793a\uff0c\u6781\u4f4e\u4e4b\u540e\u6709\u4e00\u5927\u7247\u5411\u5357\u4f20\u64ad\u7684\u6ce2\u3002\u5bf9\u4e8c\u7ef4\u6ce2\u6d6a\u80fd\u8c31\u7684\u8be6\u7ec6\u5206\u6790\u8868\u660e\uff0c\u5728\u7578\u5f62\u6ce2\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u5e73\u53f0\u4e0a\u5b58\u5728\u90e8\u5206\u6a2a\u6e21\u6d77\u51b5\u3002\u56fe\u4e2d\u8fd8\u663e\u793a\u4e86ECMWF\u5f53\u65f6\u83b7\u5f97\u7684\u5c11\u91cf\u73b0\u573a\u6ce2\u9ad8\u89c2\u6d4b\u503c\u3002\u5728Draupner\uff0c\u6700\u5927\u6a21\u62df\u6709\u6548\u6ce2\u9ad8\u63a5\u8fd111\u7c73\uff0c\u6bd4\u62a5\u544a\u9ad8\u5ea6\u4f4e\u7ea61\u7c73\u3002\u5728\u5206\u6790\u6781\u4f4e\u5c42\u7684\u8fd0\u52a8\u65f6\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u7ec6\u8282\u3002\n\u6839\u636e\u6a21\u578b\u8f93\u51fa\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f30\u8ba1\u51fa\u4f4e\u538b\u79fb\u52a8\u7684\u901f\u5ea6\u7ea6\u4e3a15 m/s\u3002\u8fd9\u5bf9\u4e8e\u52a8\u6001\u6ce2\u7684\u4ea7\u751f\u6765\u8bf4\u592a\u5feb\u4e86\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u6ce2\u7cfb\u7edf\u6765\u8bf4\uff0c\u5b83\u4ee5\u4e0e\u4f4e\u538b\u76f8\u540c\u7684\u901f\u5ea6\u79fb\u52a8\uff0c\u5e76\u6301\u7eed\u63a5\u6536\u6765\u81ea\u4f4e\u538b\u7684\u80fd\u91cf\u3002\u5bf9\u4e8e15m/s\u7684\u6ce2\u7fa4\u901f\u5ea6\uff0c\u76f8\u5e94\u7684\u6ce2\u5cf0\u5468\u671f\u7ea6\u4e3a19s\uff0c\u8fd9\u6bd4Draupner\u98ce\u66b4\u7814\u7a76\u4e2d\u901a\u5e38\u53d1\u73b0\u7684\u8981\u5927\u5f97\u591a\u3002\n\u7136\u800c\uff0c\u8003\u8651\u5230\u5f53\u65f6\u7684\u6c14\u8c61\u6761\u4ef6\uff0c\u53ef\u4ee5\u5047\u8bbe\u5728\u8be5\u9891\u7387\u8303\u56f4\u5185\u6216\u7565\u4f4e\u4e8e\u8be5\u9891\u7387\u8303\u56f4\u5185\u5b58\u5728\u6ce2\u80fd\u3002\u8fd9\u4e9b\u6ce2\u5206\u91cf\u968f\u7740\u98ce\u66b4\u79fb\u52a8\uff0c\u540c\u65f6\u63a5\u6536\u6765\u81ea\u4e0e\u5927\u90e8\u5206\u98ce-\u6d77\u9891\u8c31\u7684\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u7684\u80fd\u91cf\uff08\u800c\u4e0d\u662f\u76f4\u63a5\u6765\u81ea\u98ce\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u76f8\u901f\u5ea6\u9ad8\u4e8e\u98ce\u901f\uff09\u3002\u56e0\u6b64\uff0c\u6700\u9ad8\u6ce2\u6d6a\u7684\u533a\u57df\u9075\u5faa\u4f4e\u6f6e\u7684\u8f68\u8ff9\u3002Cavaleri\u7b49\u4eba\uff082016a\uff09\u5c06\u5176\u89e3\u91ca\u4e3a\u9891\u8c31\u4e2d\u7684\u201c\u52a8\u6001\u9501\u5b9a\u201d\u4f4e\u9891\u90e8\u5206\uff0c\u8be5\u90e8\u5206\u7531\u9891\u8c31\u4e2d\u7684\u98ce\u6d77\u90e8\u5206\u7684\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u63d0\u4f9b\uff0c\u5e76\u968f\u7740\u98ce\u66b4\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u79fb\u52a8\u3002\u53ea\u6709\u5728\u534f\u8c03\u4e16\u754c\u65f615\u5206\uff0c\u5f53\u4f4e\u6f6e\u4e2d\u5fc3\u7ecf\u8fc7Draupner\u533a\u57df\u9644\u8fd1\u65f6\uff0c\u201c\u9501\u5b9a\u201d\u4f4e\u9891\u6ce2\u5206\u91cf\u4e0e\u5927\u91cf\u672c\u5730\u98ce\u529b\u53d1\u7535\u7cfb\u7edf\u4e00\u8d77\u51fa\u73b0\u3002\n\u663e\u7136\uff0c\u9ad8\u6c34\u5e73\u5206\u8fa8\u7387\u662f\u8fd9\u4e00\u6700\u65b0\u6a21\u62df\u6210\u529f\u7684\u5173\u952e\u56e0\u7d20\u3002\u6b63\u5982Cavaleri\u7b49\u4eba\uff082016a\uff09\u6240\u793a\uff0c\u5728TL799\u4e0a\u8fdb\u884c\u540c\u6837\u7684\u5b9e\u9a8c\u5e76\u4e0d\u4f1a\u4ea7\u751f\u4e00\u4e2a\u660e\u786e\u7684\u6781\u4f4e\uff0c\u800c\u662f\u4e00\u4e2a\u5728\u745e\u5178\u4e0a\u7a7a\u7684\u5927\u5c3a\u5ea6\u73af\u6d41\u4e2d\u5d4c\u5165\u4e86\u7565\u5f3a\u98ce\u7684\u533a\u57df\u3002\u7c7b\u4f3c\u5730\uff0c\u901a\u8fc7\u5c06TL799\u8fd0\u884c\u4e0e\u4e13\u7528\u518d\u5206\u6790\u7684\u76f8\u5e94\u9884\u6d4b\u8fdb\u884c\u6bd4\u8f83\uff0c\u7ed3\u679c\u8868\u660e\uff0c\u81eaERA\u8fc7\u6e21\u4ee5\u6765\u7684\u6a21\u578b\u6539\u8fdb\u4e5f\u662f\u4e00\u4e2a\u4fc3\u6210\u56e0\u7d20\uff0c\u56e0\u4e3a\u4e0e\u65e7\u6a21\u578b\u76f8\u6bd4\uff0c\u5f3a\u98ce\u533a\u57df\u66f4\u53d7\u9650\u5236\u3002\n\u81f3\u4e8e\u8fd9\u4e00\u4e8b\u4ef6\u7684\u53ef\u9884\u6d4b\u6027\uff0c\u957f\u671f\u9884\u6d4b\u5e76\u4e0d\u64c5\u957f\u9884\u6d4b\u6781\u4f4e\u7684\u6f14\u53d8\u3002\u65e9\u671f\u5206\u6790\u6ca1\u6709\u76f8\u5173\u4fe1\u606f\u53ef\u80fd\u6709\u51e0\u4e2a\u539f\u56e0\uff0c\u5206\u8fa8\u7387\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u6781\u5730\u4f4e\u538b\u53ea\u6709\u5728\u5411\u5357\u79fb\u52a8\u65f6\uff0c\u624d\u80fd\u5728\u5206\u6790\u5730\u56fe\u4e0a\u770b\u5230\u3002\u5b83\u4ece\u9065\u8fdc\u7684\u5317\u65b9\uff08\u7ea666\u00b0N\uff09\u5230\u8377\u5170\u6d77\u5cb8\u7684\u6574\u4e2a\u98de\u884c\u8f68\u8ff9\u4e0d\u523024\u5c0f\u65f6\u3002\u5728\u534f\u8c03\u4e16\u754c\u65f61\u67081\u65e5\u4e4b\u524d\uff0c\u6ca1\u6709\u5173\u4e8e\u5176\u5b58\u5728\u7684\u7ebf\u7d22\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u53ef\u80fd\u7684\u9884\u6d4b\u3002\u8fd9\u8868\u660e\u7f3a\u4e4f\u89c2\u6d4b\uff0c\u7531\u4e8e\u4eba\u4eec\u5bf9\u5317\u6781\u7684\u5f3a\u70c8\u5174\u8da3\uff0c\u76ee\u524d\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u6b63\u5728\u5f97\u5230\u7f13\u89e3\u3002\u4f8b\u5982\uff0cEUMETNET\u5728\u8be5\u5730\u533a\u90e8\u7f72\u4e86\u989d\u5916\u7684\u6d77\u6d0b\u6d6e\u6807\uff0c\u53ef\u4ee5\u9ad8\u7cbe\u5ea6\u6d4b\u91cf\u8868\u9762\u538b\u529b\u3002\n\u57fa\u4e8e\u4e0a\u8ff0\u6a21\u62df\uff0cCavaleri\u7b49\u4eba\uff082016b\uff09\u5206\u6790\u4e86Draupner\u6ce2\uff0c\u501f\u9274\u4e86\u6700\u8fd1\u5173\u4e8e\u6781\u7aef\u6ce2\u5206\u5e03\u548c\u6ce2\u5cf0\u9ad8\u5ea6\u7684\u7814\u7a76\u6210\u679c\u3002\u4ece\u8fd9\u4e2a\u6709\u5229\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5fb7\u62c9\u666e\u7eb3\u4e8b\u4ef6\uff0c\u5c31\u50cf\u6587\u732e\u4e2d\u62a5\u9053\u7684\u5927\u591a\u6570\u5927\u6d6a\u4e00\u6837\uff0c\u5931\u53bb\u4e86\u8bb8\u591a\u56f4\u7ed5\u5b83\u7684\u795e\u79d8\u611f\uff1a\u8fd9\u6837\u7684\u6ce2\u6d6a\u662f\u5927\u98ce\u66b4\u7684\u4e00\u4e2a\u5e38\u89c4\u90e8\u5206\uff0c\u9047\u5230\u5b83\u4eec\u53ea\u662f\u4e00\u4e2a\u6982\u7387\u95ee\u9898\uff0c\u53d6\u51b3\u4e8e\u6240\u8003\u8651\u7684\u65f6\u7a7a\u5c3a\u5ea6\u3002\n\u5728\u6392\u6c34\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u6ce2\u6d6a\u6761\u4ef6\uff0c\u5305\u62ec\u9ad8\u5ea6\u548c\u5149\u8c31\u5f62\u72b6\uff0c\u4f7f\u5f97\u9047\u5230\u7279\u522b\u9ad8\u7684\u6ce2\u6d6a\u548c\u6ce2\u5cf0\u7684\u53ef\u80fd\u6027\u7279\u522b\u5927\u3002\u7531\u4e8e\u4e24\u4e2a\u4ea4\u53c9\u4f4e\u9891\u6ce2\u7cfb\u7edf\u7684\u5b58\u5728\uff0c\u8fd9\u79cd\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u53ef\u80fd\u4f1a\u589e\u52a0\u3002\u7531\u4e8e\u56fd\u9645\u5355\u9879\u4f53\u80b2\u8054\u5408\u4f1a\u6700\u8fd1\u7684\u6539\u8fdb\u548c\u5206\u8fa8\u7387\u7684\u63d0\u9ad8\uff0c\u53ea\u80fd\u5bf9\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8fdb\u884c\u9002\u5f53\u7684\u5efa\u6a21\u3002Cavaleri\u7b49\u4eba\uff082016b\uff09\u5f15\u5165\u4e86\u201c\u52a8\u529b\u6d8c\u6d6a\u201d\u7684\u6982\u5ff5\uff0c\u4ee5\u786e\u5b9a\u6ce2\u8c31\u4e2d\u968f\u98ce\u66b4\u79fb\u52a8\u800c\u4e0d\u63a5\u6536\u98ce\u80fd\u91cf\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u5176\u76f8\u901f\u5ea6\u8f83\u9ad8\uff0c\u4f46\u901a\u8fc7\u98ce\u6d77\u8c31\u6d3b\u8dc3\u90e8\u5206\u7684\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\uff0c\u6ce2\u8c31\u53d8\u5f97\u66f4\u5177\u80fd\u91cf\u3002\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u6bd4\u4eba\u4eec\u60f3\u8c61\u7684\u66f4\u5e38\u89c1\uff0c\u5c24\u5176\u662f\u5728\u5feb\u901f\u79fb\u52a8\u7684\u98ce\u66b4\u4e2d\u3002\nAdcock\uff0cT.A.A.\uff0cP.H.Taylor\uff0cS.Yan\uff0cQ.W.Ma&amp\uff1bP.A.E.M.\u6768\u68ee\uff0c2011\u5e74\uff1a\u5fb7\u62c9\u666e\u7eb3\u6ce2\u662f\u5426\u53d1\u751f\u5728\u6a2a\u6e21\u7684\u6d77\u6d0b\u4e2d\uff1f\u8fc7\u7a0b\u3002\u7687\u5bb6Soc\u7684\u3002A\u3001 467\u30023004\u20133021.\nL.\u5361\u74e6\u96f7\u5229\u3001F.\u82ad\u82ad\u91cc\u5965\u5c14\u3001A.\u8d1d\u5185\u5854\u4f50\u3001L.\u8d1d\u5c14\u6258\u8482\u3001J.-R.\u6bd4\u5fb7\u6d1b\u7279\u3001P.A.E.M.\u6768\u68ee\u548c\uff1bN.Wedi\uff0c2016a\uff1a\u300a\u5fb7\u62c9\u666e\u7eb3\u6d6a\u6f6e\uff1a\u5168\u65b0\u7684\u89c6\u89d2\u548c\u65b0\u5174\u7684\u89c6\u89d2\u300b\u3002\u5df2\u88ab\u300a\u5730\u7403\u7269\u7406\u7814\u7a76\u6742\u5fd7-\u6d77\u6d0b\u300b\u63a5\u53d7\u53d1\u8868\u3002\nL.\u5361\u74e6\u96f7\u5229\u3001F.\u82ad\u82ad\u91cc\u5965\u5c14\u3001A.\u8d1d\u5185\u5854\u4f50\u3001J.-R.\u6bd4\u5fb7\u6d1b\u7279\u548c\uff1bP.A.E.M.\u6768\u68ee\uff0c2016b\uff1a\u300a\u5fb7\u62c9\u666e\u7eb3\u6ce2\uff1a\u65b0\u5174\u89c2\u70b9\u548c\u975e\u7ebf\u6027\u7684\u4f5c\u7528\u300b\u3002\u63d0\u4ea4\u81f3\u300a\u7f8e\u56fd\u6c14\u8c61\u5b66\u4f1a\u516c\u62a5\u300b\u3002\nS.\u54c8\u5f17\uff0c2004\u5e74\uff1a1995\u5e741\u67081\u65e5\uff0c\u5728Draupner\u5bfc\u7ba1\u67b6\u4e0a\u6d4b\u91cf\u5230\u4e00\u4e2a\u53ef\u80fd\u7684\u7578\u5f62\u6ce2\u4e8b\u4ef6\u3002\u5e03\u5217\u65af\u7279\u6d41\u6c13\u6d77\u6d6a\u5de5\u4f5c\u5ba4\u3002\n\u970d\u59c6\uff0cE.\uff0cR.\u798f\u5e03\u65af\uff0cS.\u6717\uff0cL.\u9a6c\u683c\u52aa\u68ee\uff1bS.Malardel\uff0c2016\uff1a\u65b0\u8f66\u578b\u5468\u671f\u5e26\u6765\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u3002ECMWF\u901a\u8baf\u7b2c147\u53f7\uff0c\u7b2c14-19\u9875\u3002\nSunde\uff0cA.\uff0c1995\u5e74\uff1aKnjempeb\u00f8lger i Nordsj\u00f8en\uff08\u5317\u6d77\u7684\u6781\u7aef\u6ce2\u6d6a\uff09\uff0cV\u00e6r&amp\uff1b\u514b\u91cc\u739b\uff0c18\u5c81\u3002\uff08\u632a\u5a01\u8bed\uff09", "note_en": "On 1 January 1995 at 15 UTC, the most famous freak wave to be detected by a measuring instrument was recorded by a downward-looking laser at the North Sea Draupner gas platform. The wave was 25.6 m high, with an 18.5 m crest height (Box A). The significant wave height in the area is estimated to have been almost 12 m. The measurement confirmed the existence of giant rogue waves, which had previously been reported anecdotally by sailors. It prompted a number of studies which aimed to determine the meteorological and wave situation at the time and to provide a physical explanation of the event.\n 2D wave energy spectrum: The distribution of wave energy both in frequency and direction. This quantity is the prognostic variable of any modern wave model.\n  Crest height: The height between the top of the wave and the undisturbed water surface.\n  Significant wave height: Four times the square root of the integral of the wave spectrum. It closely corresponds to the average height of the highest one third of waves.\n Swell: A wave system originating from a distant storm and not affected by local winds.\n Wave peak period: The reciprocal of the frequency corresponding to the highest value of the 1D wave energy spectrum.\n High-resolution retrospective forecasts (hindcasts) recently produced at ECMWF show the evolution of wind, pressure and wave fields on 1 January 1995 in unprecedented detail and shed fresh light on how the Draupner wave event may have come about. They suggest that waves driven by a southward-moving polar low interacted with a substantial local wind-generated wave system to produce the conditions conducive to the observed large rogue wave.\n  An overview of studies into the origin of the Draupner wave is given by  Cavaleri et al. (2016a). A detailed analysis was reported by  Sunde (1995) and summarised by  Haver (2004). It is often reported that a depression located over Sweden generated a vigorous north-westerly flow leading to substantial south-east propagating waves covering the whole North Sea.  Adcock et al. (2011) made use of a dedicated reanalysis based on ERA-Interim reanalysis data. The ERA-Interim system, which uses model cycle 31r2 of ECMWF\u2019s Integrated Forecasting System (IFS), was run at an increased resolution (TL799, corresponding to a horizontal grid spacing of about 25 km) to produce a new investigation of the situation. However, the resolution of  Adcock et al.\u2019s simulation was still too coarse to capture the fine details of the event. A new, highly detailed description of the overall situation not previously available is reported here. It was obtained by hindcasting the meteorological and wave conditions using the current resolution of high-resolution forecasts, TCo1279, corresponding to a horizontal grid spacing of about 9 km ( H\u00f3lm et al., 2016), with IFS Cycle 41r1 rather than 41r2, which has now been used for the operational introduction of TCo1279.\n The Draupner storm was modelled as a series of forecasts starting from initial conditions provided by the dedicated TL799 reanalysis. The model version used in the simulation benefits from all model upgrades between IFS Cycle 31r2, used for ERA-Interim, and IFS Cycle 41r1.\n   All results reported here have been obtained starting from the analysis valid at 1 January 1995 00 UTC. Figure 1 provides a sequential view of the meteorological conditions on 1 January. A low-pressure system is centred over Sweden. At 00 UTC (Figure 1a), a polar low is clearly visible off the coast of Norway. It brings with it an energetic increased flux of cold air from the north. At Draupner (represented by the black triangle near the centre of each panel), the wind direction is about 315\u00b0 (i.e. from the northwest). Over the next 12 hours (Figure 1b\u2013c), the polar low moves rapidly southward, with increased wind speeds on its western flank. It reaches the Draupner latitude at about 15 UTC (Figure 1d). In the area of the platform, the 10-metre wind speed at that time exceeds 20 m/s, and the direction is turning more northerly. In the following hours the low keeps moving south and southeast, reaching the Dutch coast close to the German border at about midnight.\n  As shown in Figure 2, an extensive area of southward-propagating waves follows the polar low. A detailed analysis of the 2D wave energy spectra indicates the presence of partly crossing-sea conditions at the platform at the time of the freak wave event. The small number of in-situ wave height observations obtained at the time by ECMWF are also shown. At Draupner, the maximum modelled significant wave height is close to 11 m, about 1 m lower than the reported height. An interesting detail emerges when analysing the motion of the polar low.\n From the model output, it is straightforward to estimate that the speed at which the low was moving was about 15 m/s. This is too fast for dynamical wave generation to occur, i.e. for a wave system to move at the same speed as the low and to continuously receive energy from it. For a wave group speed of 15 m/s, the corresponding wave peak period is around 19 s, which is much larger than typically found in studies of the Draupner storm.\n However, given the prevailing meteorological conditions, it can be assumed that there was wave energy in this frequency range or just below it. These wave components were moving with the storm, while at the same time receiving energy from nonlinear interactions with the bulk of the wind-sea frequency spectrum (and not directly from the wind as their phase speed was higher than the wind speed). As a result, the area of the highest waves followed the trajectory of the low.  Cavaleri et al. (2016a) interpret this as a \u2018dynamically locked\u2019 low-frequency part of the spectrum, which is fed by non-linear interactions with the wind-sea part of the spectrum and moves with and at the same speed as the storm. It is only at 15 UTC, when the centre of the low passed near the Draupner area, that the \u2018locked\u2019 low-frequency wave components are present together with a substantial local wind-generated system.\n  It is clear that the high horizontal resolution is an essential element in the success of this latest simulation. As shown by  Cavaleri et al. (2016a), running the same experiment at TL799 does not produce a well-defined polar low but rather an area with slightly more intense winds embedded in the large-scale circulation caused by the depression over Sweden. Similarly, by comparing this TL799 run with the corresponding forecast from the dedicated reanalysis, it was shown that model improvements since ERA-Interim were also a contributing factor, since with the old model the area with intense wind was much more confined.\n As for the predictability of the event, longer-range forecasts were not very good at anticipating the evolution of the polar low. There might be several reasons why earlier analyses did not have the relevant information, resolution being one of them. The polar low was only noticeable in the analysis map when it was already on its way south. Its whole trajectory from the far north (about 66\u00b0 N), where it was identified, to the Dutch coast took less than 24 hours. There was no clue of its existence, and hence no possible prediction based on it, before 1 January 00 UTC. This points to a lack of observations, which is today possibly being alleviated as a result of a strong interest in the Arctic. For example, EUMETNET have deployed additional marine buoys in the area, which measure surface pressure with high accuracy.\n  Based on the simulations described above,  Cavaleri et al. (2016b) have analysed the Draupner wave, drawing on recent work on the distribution of extreme waves and crest heights. From this vantage point, the Draupner event, like probably most of the large waves reported in the literature, loses much of the mystery surrounding it: such waves are a regular part of large storms and coming across them is just a matter of probability depending on the spatial and temporal scales considered.\n In the case of the Draupner, the wave conditions, both in terms of height and spectral shape, made encountering a particularly high wave and crest particularly likely. The probability of such an event may have been enhanced by the presence of two crossing low-frequency wave systems that could only be properly modelled because of recent improvements in the IFS and the use of increased resolution.  Cavaleri et al. (2016b) have introduced the concept of \u2018dynamical swell\u2019 to identify the part of the wave spectrum which moves with the storm without receiving energy from the wind because of its higher phase speed, but which is made more energetic via nonlinear interactions from the active part of the wind-sea spectrum. This condition may be more common than had been thought, particularly in the case of fast-moving storms.\n  Adcock,  T.A.A.,  P.H. Taylor,  S. Yan,  Q.W. Ma &amp;  P.A.E.M. Janssen, 2011: Did the Draupner wave occur in a crossing sea?  Proc. of the Royal Soc. A,  467. 3004\u20133021.\n Cavaleri,  L.,  F. Barbariol,  A. Benetazzo,  L. Bertotti,  J.-R. Bidlot,  P.A.E.M. Janssen &amp;  N. Wedi, 2016a: The Draupner wave: a fresh look and the emerging view. Accepted for publication in  Journal of Geophysical Research \u2013 Oceans.\n Cavaleri,  L.,  F. Barbariol,  A. Benetazzo,  J.-R. Bidlot, &amp;  P.A.E.M. Janssen, 2016b: The Draupner wave: the emerging view and the role of non-linearity. Submitted to  Bulletin of the American Meteorological Society.\n Haver,  S., 2004: A possible freak wave event measured at the Draupner jacket January 1 1995.  Rogue Waves Workshop, Brest.\n H\u00f3lm,  E.,  R. Forbes,  S. Lang,  L. Magnusson &amp;  S. Malardel, 2016: New model cycle brings higher resolution.  ECMWF Newsletter  No. 147, 14\u201319.\n Sunde,  A., 1995: Kjempeb\u00f8lger i Nordsj\u00f8en (Extreme Waves in the North Sea),  V\u00e6r &amp; Klima,  18. (In Norwegian)", "posttime": "2022-02-15 17:35:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d6a\u6f6e,draupner,\u6ce2\u6d6a", "title": "\u5fb7\u62c9\u666e\u7eb3\u6d6a\u6f6e\uff082016\uff09", "title_en": "The Draupner Wave (2016)", "transed": 1, "url": "https://www.ecmwf.int/en/newsletter/148/meteorology/what-conditions-led-draupner-freak-wave", "via": "", "real_tags": ["\u6d6a\u6f6e", "draupner", "\u6ce2\u6d6a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073486, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u5728\u5206\u5e03\u538b\u7f29\u4e2d\uff0c\u4e00\u4e2a\u76ee\u6807\u662f\u4f7f\u7528\u5c11\u91cf\u4ee3\u8868\u70b9\u51c6\u786e\u603b\u7ed3\u6982\u7387\u5206\u5e03$\\mathbb{P}$\u3002\u901a\u8fc7\u4ece\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\u91c7\u6837$n$\u70b9\uff0c\u5e76\u7528$\\widetilde{\\mathcal{O}\uff081/\\sqrt{n}\uff09$\u5dee\u5f02\u5230$\\mathbb{P}$\u8bc6\u522b$\\sqrt{n}$\u70b9\uff0c\u63a5\u8fd1\u6700\u4f18\u7684\u7ec6\u5316\u7a0b\u5e8f\u5b9e\u73b0\u4e86\u8fd9\u4e00\u76ee\u6807\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5728\u6837\u672c\u91cf\u4e3a$n$\u65f6\u5b58\u5728\u4e8c\u6b21\u6216\u8d85\u4e8c\u6b21\u8ba1\u65f6\u95ee\u9898\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u7f3a\u9677\uff0c\u6211\u4eec\u5f15\u5165\u4e86compress++\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5143\u8fc7\u7a0b\uff0c\u7528\u4e8e\u52a0\u901f\u4efb\u4f55\u7ec6\u5316\u7b97\u6cd5\uff0c\u4f46\u8bef\u5dee\u6700\u591a\u4e3a4\u7f8e\u5143\u3002\u5f53\u4e0eDwivedi\u548cMackey\uff082021\uff09\u7684\u4e8c\u6b21\u65f6\u95f4\u6838\u51cf\u534a\u548c\u6838\u7ec6\u5316\u7b97\u6cd5\u76f8\u7ed3\u5408\u65f6\uff0cCompress++\u5728$\\mathcal{O}\uff08\\sqrt{log n/n}\uff09$\u79ef\u5206\u8bef\u5dee\u4e0b\u63d0\u4f9b$\\sqrt{n}$n}$\u70b9\uff0c\u5e76\u4e14\u5728$\\mathcal{O}\uff08n\\log 3 n\uff09$\u65f6\u95f4\u548c$\\mathcal{O}\uff08\\sqrt{n}\\log 2 n\uff09$\u7a7a\u95f4\u4e0a\u4f18\u4e8eMonte Carlomaxim\u5e73\u5747\u5dee\u5f02\u3002\u6b64\u5916\uff0c\u5728\u7ed9\u5b9a\u4efb\u4f55\u4e8c\u6b21\u65f6\u95f4\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\uff0cCompress++\u4eab\u53d7\u76f8\u540c\u7684\u8fd1\u4f3c\u7ebf\u6027\u65f6\u95f4\uff0c\u5e76\u901a\u8fc7\u5e73\u65b9\u6839\u56e0\u5b50\u51cf\u5c11\u4e86\u8d85\u4e8c\u6b21\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u5728\u6211\u4eec\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u4f7f\u7528\u9ad8\u7ef4\u8499\u7279\u5361\u7f57\u6837\u672c\u548c\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u9488\u5bf9\u5177\u6709\u6311\u6218\u6027\u7684\u5fae\u5206\u65b9\u7a0b\u540e\u9a8c\u6982\u7387\uff0cCompress++\u5728\u6570\u91cf\u7ea7\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u5339\u914d\u6216\u63a5\u8fd1\u5339\u914d\u5176\u8f93\u5165\u7b97\u6cd5\u7684\u7cbe\u5ea6\u3002", "note_en": "Download PDF  Abstract: In distribution compression, one aims to accurately summarize a probabilitydistribution $\\mathbb{P}$ using a small number of representative points.Near-optimal thinning procedures achieve this goal by sampling $n$ points froma Markov chain and identifying $\\sqrt{n}$ points with$\\widetilde{\\mathcal{O}}(1/\\sqrt{n})$ discrepancy to $\\mathbb{P}$.Unfortunately, these algorithms suffer from quadratic or super-quadraticruntime in the sample size $n$. To address this deficiency, we introduceCompress++, a simple meta-procedure for speeding up any thinning algorithmwhile suffering at most a factor of $4$ in error. When combined with thequadratic-time kernel halving and kernel thinning algorithms of Dwivedi andMackey (2021), Compress++ delivers $\\sqrt{n}$ points with$\\mathcal{O}(\\sqrt{\\log n/n})$ integration error and better-than-Monte-Carlomaximum mean discrepancy in $\\mathcal{O}(n \\log^3 n)$ time and $\\mathcal{O}(\\sqrt{n} \\log^2 n )$ space. Moreover, Compress++ enjoys the same near-linearruntime given any quadratic-time input and reduces the runtime ofsuper-quadratic algorithms by a square-root factor. In our benchmarks withhigh-dimensional Monte Carlo samples and Markov chains targeting challengingdifferential equation posteriors, Compress++ matches or nearly matches theaccuracy of its input algorithm in orders of magnitude less time.", "posttime": "2022-02-15 17:35:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u95f4,compression", "title": "\u8fd1\u7ebf\u6027\u65f6\u95f4\u7684\u5206\u5e03\u538b\u7f29", "title_en": "Distribution Compression in Near-Linear Time", "transed": 1, "url": "https://arxiv.org/abs/2111.07941", "via": "", "real_tags": ["\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073485, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8e\u5143\u7ec4\u8fed\u4ee3\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u57fa\u672c\u77e5\u8bc6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u5143\u7ec4\uff0c\u5e76\u53ef\u4ee5\u5f88\u597d\u5730\u5c06\u5176\u6253\u5370\u5230\u8f93\u51fa\u4e2d\u3002\u8fd8\u6709\u4e00\u4e2a\u7248\u672c\u5e26\u6709operator&lt&\u4e66\u4fe1\u7535\u62a5\uff1b\u3002\n\u4eca\u5929\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e86\u89e3\u5176\u4ed6\u4e00\u4e9b\u6280\u672f\u3002\u7b2c\u4e00\u4e2a\u662f\u6765\u81eaC++17\u7684std:\uff1aapply\uff0c\u5b83\u662f\u5143\u7ec4\u7684\u8f85\u52a9\u51fd\u6570\u3002\u4eca\u5929\u7684\u6587\u7ae0\u8fd8\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u7b56\u7565\uff0c\u4f7f\u8fed\u4ee3\u66f4\u901a\u7528\uff0c\u5e76\u5904\u7406\u5b9a\u5236\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6253\u5370\u3002\n\u8fd9\u662f\u5c0f\u7cfb\u5217\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\u8bf7\u53c2\u9605\u672c\u6587\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\uff0c\u5176\u4e2d\u6211\u4eec\u8ba8\u8bba\u4e86\u57fa\u7840\u77e5\u8bc6\u3002\nstd:\uff1atuple\u7684\u4e00\u4e2a\u65b9\u4fbf\u52a9\u624b\u662fC++17\u4e2d\u7684std:\uff1aapply\u51fd\u6570\u6a21\u677f\u3002\u5b83\u63a5\u53d7\u4e00\u4e2a\u5143\u7ec4\u548c\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528\u4ece\u5143\u7ec4\u4e2d\u83b7\u53d6\u7684\u53c2\u6570\u8c03\u7528\u8fd9\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\n#\u5305\u62ec&lt\uff1biostream&gt#\u5305\u62ec&lt\uff1btuple&gt\uff1bint sum\uff08int a\uff0cint b\uff0cint c\uff09{\u8fd4\u56dea+b+c\uff1b}\u65e0\u6548\u6253\u5370\uff08std:\uff1astring_\u89c6\u56fea\u3001std:\uff1astring_\u89c6\u56feb\uff09{std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1ba&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1bb&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b\uff09\\n&#34\uff1b\uff1b}int main\uff08\uff09{std:\uff1atuple number{1,2,3}\uff1b\u6807\u51c6\uff1acout&lt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6807\u51c6\uff1a\uff1a\u5e94\u7528\uff08\u603b\u548c\u3001\u6570\u5b57\uff09&lt&lt&#39;\\n&#39\uff1bstd\uff1a\uff1atuple strs{&#34\uff1bHello&#34\uff1b\uff0c&#34\uff1bWorld&#34\uff1b}\uff1bstd\uff1a\uff1a\u5e94\u7528\uff08\u6253\u5370\uff0cstrs\uff09\uff1b}\n\u5982\u60a8\u6240\u89c1\uff0cstd:\uff1aapply\u63a5\u53d7sum\u6216print\u51fd\u6570\uff0c\u7136\u540e\u201c\u5c55\u5f00\u201d\u5143\u7ec4\uff0c\u5e76\u4f7f\u7528\u9002\u5f53\u7684\u53c2\u6570\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002\n\u5173\u952e\u662fstd:\uff1aapply\u9690\u85cf\u4e86\u6240\u6709\u7d22\u5f15\u751f\u6210\u548c\u5bf9std:\uff1aget&lt&gt\uff1b\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u7528std:\uff1aapply\u66ff\u6362\u6253\u5370\u51fd\u6570\uff0c\u7136\u540e\u4e0d\u4f7f\u7528index_\u5e8f\u5217\u3002\n\u6211\u60f3\u5230\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\uff1a\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u51fd\u6570\u6a21\u677f\uff0c\u8be5\u6a21\u677f\u91c7\u7528Args\u3002\u3002\u3002\u5e76\u5c06\u5176\u4f20\u9012\u7ed9std:\uff1aapply:\n\u6a21\u677f&lt\uff1b\u5b57\u4f53\u540d\u3002\u3002\u3002Args&gt\uff1bvoid printImpl\uff08const Args&amp\uff1btupleArgs\uff09{size_t index=0\uff1bauto printElem=[&amp\uff1bindex]\uff08const auto&amp\uff1bx\uff09{if\uff08index++&gt\uff1b0\uff09std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b34\uff1b&gt\uff1bstd:\uff1acout&lt\uff1b&lt\uff1bx\uff1b\uff08\u666e\u5217\u7279\u83b1\u59c6\uff08\u56fe\u666e\u91cc\u683c\u65af\uff09\uff0c\u2026\uff09\uff1b]\u6a21\u677f&lt\uff1b\u5b57\u4f53\u540d\u3002\u3002\u3002Args&gt\uff1bvoid printTupleApplyFn\uff08const std\uff1a\uff1atuple&lt\uff1bArgs\u2026&gt\uff1b&gt\uff1b&gt\uff1b{std\uff1a\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&lt\uff1b&lt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b[34\uff1b]\n\u95ee\u9898\u5728\u4e8eout printImpl\u662f\u4e00\u4e2a\u53ef\u53d8\u51fd\u6570\u6a21\u677f\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5fc5\u987b\u5b9e\u4f8b\u5316\u5b83\u3002\u5f53\u6211\u4eec\u8c03\u7528std:\uff1aapply\u65f6\uff0c\u5b9e\u4f8b\u5316\u4e0d\u4f1a\u53d1\u751f\uff0c\u800c\u662f\u5728std:\uff1aapply\u5185\u90e8\u53d1\u751f\u3002\u5f53\u6211\u4eec\u8c03\u7528std:\uff1aapply\u65f6\uff0c\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u5982\u4f55\u8c03\u7528\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u9636\u6bb5\u5b83\u65e0\u6cd5\u6267\u884c\u6a21\u677f\u63a8\u5bfc\u3002\n#\u5305\u62ec&lt\uff1biostream&gt#\u5305\u62ec&lt\uff1btuple&gt\uff1b\u6a21\u677f&lt\uff1b\u5b57\u4f53\u540d\u3002\u3002\u3002Args&gt\uff1bvoid printImpl\uff08const Args&amp\uff1btupleArgs\uff09{size_t index=0\uff1bauto printElem=[&amp\uff1bindex]\uff08const auto&amp\uff1bx\uff09{if\uff08index++&gt\uff1b0\uff09std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b34\uff1b&gt\uff1bstd:\uff1acout&lt\uff1b&lt\uff1bx\uff1b\uff08\u666e\u5217\u7279\u83b1\u59c6\uff08\u56fe\u666e\u91cc\u683c\u65af\uff09\uff0c\u2026\uff09\uff1b]\u6a21\u677f&lt\uff1b\u5b57\u4f53\u540d\u3002\u3002\u3002Args&gt\uff1bvoid printTupleApplyFn\uff08const std:\uff1atuple&lt\uff1bArgs\u2026&gt\uff1b&gt\uff1btp\uff09{std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b34\uff1b\uff08&gt\uff1bstd:\uff1aapply\uff08printImpl&lt\uff1bArgs\u2026&gt\uff1b\uff0ctp\uff09\uff1b/&lt\uff1bstd:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&gt\uff1b\uff09\u548cint main\uff08\uff09{std:\uff1atuple tp{10,20,3.14}\uff1bprintTupleApplyFn\uff08tp\uff09\uff1b}\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5e2e\u52a9\u7f16\u8bd1\u5668\u521b\u5efa\u4e86\u8bf7\u6c42\u7684\u5b9e\u4f8b\u5316\uff0c\u56e0\u6b64\u5b83\u5f88\u4e50\u610f\u5c06\u5176\u4f20\u9012\u7ed9std:\uff1aapply\u3002\nstruct HelperCallable{template&lt\uff1btypename\u2026Args&gt\uff1bvoid\u64cd\u4f5c\u7b26\uff08\uff09\uff08const Args&amp\uff1btupleArgs\uff09{size_t index=0\uff1bauto printElem=[&amp\uff1bindex]\uff08const auto&amp\uff1bx\uff09{if\uff08index++&gt\uff1b0\uff09std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b34\uff1b&gt\uff1bstd:\uff1acout&lt\uff1b&lt\uff1bx\uff1b}\uff1b\uff08\u666e\u5217\u7279\u83b1\u59c6\uff08\u56fe\u666e\u91cc\u683c\u65af\uff09\uff0c\u2026\uff09\uff1b}\uff1b\u6a21\u677f&lt\uff1b\u5b57\u4f53\u540d\u3002\u3002\u3002Args&gt\uff1bvoid printTupleApplyFn\uff08const std\uff1a\uff1atuple&lt\uff1bArgs\u2026&gt\uff1b&gt\uff1b&gt\uff1b{std\uff1a\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\n\u73b0\u5728\uff0c\u6211\u4eec\u6240\u505a\u7684\uff0c\u53ea\u662f\u4f20\u9012\u4e00\u4e2a\u53ef\u5e2e\u52a9\u8c03\u7528\u7684\u5bf9\u8c61\uff1b\u5b83\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u53ef\u4ee5\u6beb\u65e0\u95ee\u9898\u5730\u4f20\u9012\u5b83\u3002\u6ca1\u6709\u6a21\u677f\u53c2\u6570\u63a8\u5bfc\u3002\u7136\u540e\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u7f16\u8bd1\u5668\u5c06\u8c03\u7528HelperCallable\uff08args\u2026\uff09\uff0c\u8c03\u7528\u8be5\u7ed3\u6784\u7684\u8fd0\u7b97\u7b26\uff08\uff09\u3002\u73b0\u5728\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u63a8\u65ad\u51fa\u7c7b\u578b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u63a8\u8fdf\u4e86\u95ee\u9898\u7684\u89e3\u51b3\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4ee3\u7801\u53ef\u4ee5\u4e0e\u52a9\u624b\u53ef\u8c03\u7528\u7c7b\u578b\u914d\u5408\u4f7f\u7528\u2026\u2026\u90a3\u4e48lambda\u5462\uff1f\n#\u5305\u62ec&lt\uff1biostream&gt#\u5305\u62ec&lt\uff1btuple&gt\uff1b\u6a21\u677f&lt\uff1btypename TupleT&gt\uff1bvoid printtupleappy\uff08const-TupleT&amp\uff1btp\uff09{std\uff1a\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b34\uff1b\uff08&#34\uff1bstd\uff1a\uff1aapply\uff08[]\uff08const-auto&amp\uff1b\u2026tupleArgs\uff09{size_-t index=0\uff1bauto-printElem=[&amp\uff1bindex]\uff08const-auto&amp\uff1bx\uff09{if\uff08index++gt\uff1b0\uff09std\uff1a\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&gt\uff1b34\uff1b&gt\uff1b&gt\uff1b\uff08\u666e\u5217\u7279\u83b1\u59c6\uff08\u56fe\u666e\u91cc\u683c\u65af\uff09\uff0c\u2026\uff09\uff1b}\uff0ctp\uff09\u6807\u51c6\uff1a\uff1acout&lt&lt&#34;)&#34; ; } intmain\uff08\uff09{std:\uff1atuple tp{10,20,3.14,42\u548c#34\uff1bhello\u548c#34\uff1b}\uff1bprintTupleApply\uff08tp\uff09\uff1b}\n\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6211\u4eec\u5728\u4e00\u4e2alambda\u4e2d\u6709\u4e00\u4e2alambda\u3002\u5b83\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4f7f\u7528\u8fd0\u7b97\u7b26\uff08\uff09\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7C++\u900f\u89c6\u56fe\u6765\u4e86\u89e3\u8f6c\u6362\uff1a\u8fd9\u4e2a\u94fe\u63a5\n\u56e0\u4e3a\u6211\u4eec\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u5f97\u5230\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\u5217\u8868\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f7f\u4ee3\u7801\u66f4\u7b80\u5355\u3002\n\u5185\u90e8lambda\u4e2d\u7684\u4ee3\u7801\u4f7f\u7528\u7d22\u5f15\u68c0\u67e5\u662f\u5426\u9700\u8981\u6253\u5370\u5206\u9694\u7b26\u2014\u2014\u5b83\u68c0\u67e5\u662f\u5426\u6253\u5370\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\n#\u5305\u62ec&lt\uff1biostream&gt#\u5305\u62ec&lt\uff1btuple&gt\uff1b\u6a21\u677f&lt\uff1btypename TupleT&gt\uff1bvoid printTupleApply\uff08const-TupleT&amp\uff1btp\uff09{std:\uff1aapply\uff08[]\uff08const-auto&amp\uff1bfirst\uff0cconst-auto&amp\uff1brestArgs\uff09{auto-printElem=[]\uff08const-auto&amp\uff1bx\uff09{std:\uff1acout&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1b&lt\uff1bx\uff1b}\uff1b\u6807\u51c6\uff1acout&lt&lt&#34;\uff08&#34\uff1b&lt\uff1b&lt\uff1b\u7b2c\u4e00\uff1b\uff08printElem\uff08restArgs\uff09\uff0c\u2026\uff09\uff1b\uff09\uff0ctp\uff09\uff1b\u6807\u51c6\uff1acout&lt&lt&#34;)&#34; ; } intmain\uff08\uff09{std:\uff1atuple tp{10,20,3.14,42\u548c#34\uff1bhello\u548c#34\uff1b}\uff1bprintTupleApply\uff08tp\uff09\uff1b}\n\u8fd9\u6bb5\u4ee3\u7801\u5728\u5143\u7ec4\u6ca1\u6709\u5143\u7d20\u65f6\u4f1a\u4e2d\u65ad\u2014\u2014\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728if constexpr\u4e2d\u68c0\u67e5\u5b83\u7684\u5927\u5c0f\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u73b0\u5728\u8ba9\u6211\u4eec\u8df3\u8fc7\u5b83\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u6253\u5370\u5143\u7ec4\u5143\u7d20\u3002\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u201c\u56fa\u5b9a\u201d\u51fd\u6570\uff0c\u6bcf\u4e2a\u53c2\u6570\u90fd\u88ab\u8c03\u7528\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u9610\u8ff0\u6211\u4eec\u7684\u60f3\u6cd5\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53d7\u901a\u7528\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a\n\u6a21\u677f&lt\uff1btypename TupleT\uff0ctypename Fn\uff0cstd:\uff1asize\\u t\u3002\u3002\u3002Is&gt\uff1b\u6bcf\u4e2a\u5143\u7ec4\u65e0\u6548\uff08\u5143\u7ec4&amp\uff1btp\uff0cFn&amp\uff1bFn\uff0c\u6807\u51c6\uff1a\uff1a\u7d22\u5f15\u5e8f\u5217&lt\uff1bIs\u2026&gt\uff1b\uff09{\uff08fn\uff08std\uff1a\uff1aget&lt\uff1bIs&gt\uff1b\uff08std\uff1a\uff1aforward&lt\uff1bTupleT&gt\uff1b\uff08tp\uff09\uff09\uff0c\u2026\uff09\uff1b}\u6a21\u677f&lt\uff1btypename TupleT\uff0ctypename Fn\uff0cstd:\uff1asize\\u t TupSize=std:\uff1atuple\\u size\\u v&lt\uff1b\u6807\u51c6\uff1a\uff1a\u79fb\u9664_cvref_t&lt\uff1bTupleT&gt&gt&gt\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7ec4\u65e0\u6548\uff08TupleT&amp\uff1btp\uff0cFn&amp\uff1bFn\uff09{\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7ec4impl\uff08std:\uff1aforward&lt\uff1bTupleT&gt\uff1b\uff08tp\uff09\uff0cstd:\uff1aforward&lt\uff1bFn&gt\uff1b\uff08Fn\uff09\uff0cstd:\uff1amake_index_sequence&lt\uff1bTupSize&gt\uff1b{}\n\u9996\u5148\uff0c\u4ee3\u7801\u4f7f\u7528\u901a\u7528\u5f15\u7528\uff08\u8f6c\u53d1\u5f15\u7528\uff09\u4f20\u9012\u5143\u7ec4\u5bf9\u8c61\u3002\u8fd9\u662f\u652f\u6301\u5404\u79cd\u7528\u4f8b\u6240\u5fc5\u9700\u7684\uff0c\u5c24\u5176\u662f\u5f53\u8c03\u7528\u65b9\u60f3\u8981\u4fee\u6539\u5143\u7ec4\u4e2d\u7684\u503c\u65f6\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528std:\uff1aforward\u3002\n\u8fd9\u662fC++20 trait\u4e2d\u7684\u4e00\u4e2a\u65b0\u52a9\u624b\u7c7b\u578b\uff0c\u5b83\u786e\u4fdd\u6211\u4eec\u4ece\u901a\u8fc7\u901a\u7528\u5f15\u7528\u83b7\u5f97\u7684\u7c7b\u578b\u4e2d\u83b7\u5f97\u201c\u771f\u5b9e\u201d\u7c7b\u578b\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5173\u4e8e\u5143\u7ec4\u8fed\u4ee3\u94fe\u63a5\u5230Stackoverflow\u7684\u95ee\u9898\u7684\u5f88\u597d\u7684\u603b\u7ed3\uff1a\n\u4f5c\u4e3aT&amp&amp\uff1b\u662f\u8f6c\u53d1\u5f15\u7528\uff0cT\u5c06\u662ftuple&lt&gt&amp\uff1b\u6216\u8005tuple&lt&gt\uff1b\u5eb7\u65af\u7279\uff1b\u5f53\u5de6\u503c\u4f20\u5165\u65f6\uff1b\u4f46\u662fstd:\uff1atuple_size\u53ea\u9002\u7528\u4e8etuple&lt&gt\uff1b\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u53bb\u6389\u5f15\u7528\u548c\u53ef\u80fd\u7684\u5e38\u91cf\u3002\u5728C++20\u6dfb\u52a0std:\uff1aremove_cvref_t\u4e4b\u524d\uff0c\u4f7f\u7528decation_t\u662f\u4e00\u79cd\u7b80\u5355\uff08\u5982\u679c\u8fc7\u5ea6\u6740\u622e\uff09\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u4eec\u8ba8\u8bba\u4e86\u4e00\u4e2a\u7d22\u5f15\u5e8f\u5217\u7684\u5b9e\u73b0\uff1b\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728std\uff1a\uff1aapply\u4e2d\u5c1d\u8bd5\u540c\u6837\u7684\u65b9\u6cd5\u3002\u5b83\u80fd\u4ea7\u751f\u66f4\u7b80\u5355\u7684\u4ee3\u7801\u5417\uff1f\n\u6a21\u677f&lt\uff1btypename TupleT\uff0ctypename Fn&gt\uff1b\u6bcf\u4e00\u4e2atuple2\uff08TupleT&amp\uff1bamp\uff1btp\uff0cFn&amp\uff1bFn\uff09{std:\uff1aapply\uff08[&amp\uff1bFn]\uff08auto&amp\uff1b\u2026args\uff09{\uff08Fn\uff08args\uff09\uff0c\u2026\uff09\uff1b}\u65e0\u6548\uff0c\u6807\u51c6\uff1a\u524d\u8fdb&lt\uff1bTupleT&gt\uff1b\uff08tp\uff09\uff1b}\n\u6a21\u677f&lt\uff1btypename TupleT\uff0ctypename Fn&gt\uff1b\u5bf9\u4e8e\u6bcf\u4e2atuple2\uff08TupleT&amp\uff1btp\uff0cFn&amp\uff1bFn\uff09{std:\uff1aapply\uff08[&amp\uff1bFn]&lt\uff1btypename\u2026T&gt\uff1b\uff08T&amp\uff1b\u2026args\uff09{\uff08Fn\uff08std:\uff1aforward&lt\uff1bT&gt\uff1b\uff08args\uff09\uff09\uff0c\u2026\uff09}\uff0c\u65e0\u6548\uff0c\u6807\u51c6\uff1a\u524d\u8fdb&lt\uff1bTupleT&gt\uff1b\uff08tp\uff09\uff1b}\n\u6b64\u5916\uff0c\u5982\u679c\u8981\u575a\u6301\u4f7f\u7528C++17\uff0c\u53ef\u4ee5\u5bf9\u53c2\u6570\u5e94\u7528decltype\uff1a\n\u6a21\u677f&lt\uff1btypename TupleT\uff0ctypename Fn&gt\uff1b\u6bcf\u4e00\u4e2atuple2\uff08TupleT&amp\uff1btp\uff0cFn&amp\uff1bFn\uff09{std:\uff1aapply\uff08[&amp\uff1bFn]\uff08auto&amp\uff1b\u2026args\uff09{\uff08Fn\uff08std:\uff1aforward&lt\uff1bdecltype\uff08args\uff09&gt\uff1b\uff08args\uff09\uff09\uff0c\u2026\uff09\uff1b}\uff0c\u6807\u51c6\uff1a\u524d\u8fdb&lt\uff1bTupleT&gt\uff1b\uff08tp\uff09\uff1b}\n\u80cc\u666f\u4efb\u52a1\u662f\u6253\u5370\u5143\u7ec4\u5143\u7d20\uff0c\u5e76\u627e\u5230\u8f6c\u6362\u5b83\u4eec\u7684\u65b9\u6cd5\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5386\u4e86\u53d8\u91cf\u6a21\u677f\u3001\u7d22\u5f15\u5e8f\u5217\u3001\u6a21\u677f\u53c2\u6570\u63a8\u5bfc\u89c4\u5219\u548c\u6280\u5de7\u3001std:\uff1aapply\u548c\u5220\u9664\u5f15\u7528\u3002\n\u6211\u5f88\u9ad8\u5174\u8ba8\u8bba\u53d8\u5316\u548c\u6539\u8fdb\u3002\u8bf7\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u4e2d\u544a\u8bc9\u6211\u4f60\u7684\u60f3\u6cd5\u3002\nC++\u6a21\u677f\uff1aDavid Vandevoorde\u3001Nicolai M. Josuttis\u3001Douglas Gregor\u7684\u5b8c\u6574\u6307\u5357\uff08\u7b2c\u4e8c\u7248\uff09\n\u6211&#39\uff1b\u5982\u679c\u4f60&#39\uff1b\u5bf9\u73b0\u4ee3C++\u6709\u5174\u8da3\uff01\u4e86\u89e3\u6700\u8fd1C++\u6807\u51c6\u7684\u6240\u6709\u4e3b\u8981\u7279\u5f81\uff01\u770b\u770b\u8fd9\u91cc\uff1a", "note_en": "In the previous article on the tuple iteration, we covered the basics. As a result, we implemented a function template that took a tuple and could nicely print it to the output. There was also a version with  operator &lt;&lt;.\n Today we can go further and see some other techniques. The first one is with  std::apply from C++17, a helper function for tuples. Today\u2019s article will also cover some strategies to make the iteration more generic and handle custom callable objects, not just printing.\n This is the second part of the small series. See the first article  here where we discuss the basics.\n  A handy helper for  std::tuple is the  std::apply function template that came in C++17. It takes a tuple and a callable object and then invokes this callable with parameters fetched from the tuple.\n  #include  &lt;iostream&gt;  #include  &lt;tuple&gt;    int  sum ( int  a ,  int  b ,  int  c )  {  return  a  +  b  +  c ;  } void  print ( std :: string_view  a ,  std :: string_view  b )  {  std :: cout  &lt;&lt;  &#34;(&#34;  &lt;&lt;  a  &lt;&lt;  &#34;, &#34;  &lt;&lt;  b  &lt;&lt;  &#34;) \\n &#34; ; }  int  main ()  {  std :: tuple  numbers  { 1 ,  2 ,  3 };  std :: cout  &lt;&lt;  std :: apply ( sum ,  numbers )  &lt;&lt;  &#39;\\n&#39; ;  std :: tuple  strs  { &#34;Hello&#34; ,  &#34;World&#34; };  std :: apply ( print ,  strs ); }\n  As you can see,  std::apply takes  sum or  print functions and then \u201cexpands\u201d tuples and calls those functions with appropriate arguments.\n    The critical thing is that  std::apply hides all index generation and calls to  std::get&lt;&gt;. That\u2019s why we can replace our printing function with  std::apply and then don\u2019t use  index_sequence.\n  The first approach that came to my mind was the following - create a variadic function template that takes  Args... and pass it to  std::apply:\n template  &lt; typename ...  Args &gt; void  printImpl ( const  Args &amp; ...  tupleArgs )  {  size_t  index  =  0 ;  auto  printElem  =  [ &amp; index ]( const  auto &amp;  x )  {  if  ( index ++  &gt;  0 )  std :: cout  &lt;&lt;  &#34;, &#34; ;  std :: cout  &lt;&lt;  x ;  };  ( printElem ( tupleArgs ),  ...); } template  &lt; typename ...  Args &gt; void  printTupleApplyFn ( const  std :: tuple &lt; Args ... &gt;&amp;  tp )  {  std :: cout  &lt;&lt;  &#34;(&#34; ;  std :: apply ( printImpl ,  tp );  std :: cout  &lt;&lt;  &#34;)&#34; ; }\n      The problem lies in the fact that out  printImpl is a variadic function template, so the compiler has to instantiate it. The instantiation doesn\u2019t happen when we call  std::apply, but inside  std::apply. The compiler doesn\u2019t know how the callable object will be called when we call  std::apply, so it cannot perform the template deduction at this stage.\n  #include  &lt;iostream&gt;  #include  &lt;tuple&gt;   template  &lt; typename ...  Args &gt; void  printImpl ( const  Args &amp; ...  tupleArgs )  {  size_t  index  =  0 ;  auto  printElem  =  [ &amp; index ]( const  auto &amp;  x )  {  if  ( index ++  &gt;  0 )  std :: cout  &lt;&lt;  &#34;, &#34; ;  std :: cout  &lt;&lt;  x ;  };  ( printElem ( tupleArgs ),  ...); } template  &lt; typename ...  Args &gt; void  printTupleApplyFn ( const  std :: tuple &lt; Args ... &gt;&amp;  tp )  {  std :: cout  &lt;&lt;  &#34;(&#34; ;  std :: apply ( printImpl &lt; Args ... &gt; ,  tp );  // &lt;&lt;   std :: cout  &lt;&lt;  &#34;)&#34; ; } int  main ()  {  std :: tuple  tp  {  10 ,  20 ,  3.14 };  printTupleApplyFn ( tp ); }\n  In the above example, we helped the compiler to create the requested instantiation, so it\u2019s happy to pass it to  std::apply.\n  struct  HelperCallable  {  template  &lt; typename ...  Args &gt;  void  operator ()( const  Args &amp; ...  tupleArgs )  {  size_t  index  =  0 ;  auto  printElem  =  [ &amp; index ]( const  auto &amp;  x )  {  if  ( index ++  &gt;  0 )  std :: cout  &lt;&lt;  &#34;, &#34; ;  std :: cout  &lt;&lt;  x ;  };  ( printElem ( tupleArgs ),  ...);  } }; template  &lt; typename ...  Args &gt; void  printTupleApplyFn ( const  std :: tuple &lt; Args ... &gt;&amp;  tp )  {  std :: cout  &lt;&lt;  &#34;(&#34; ;  std :: apply ( HelperCallable (),  tp );  std :: cout  &lt;&lt;  &#34;)&#34; ; }\n  Now, what we do, we only pass a  HelperCallable object; it\u2019s a concrete type so that the compiler can pass it without any issues. No template parameter deduction happens. And then, at some point, the compiler will call  HelperCallable(args...), which invokes  operator() for that struct. And it\u2019s now perfectly fine, and the compiler can deduce the types. In other words, we deferred the problem.\n So we know that the code works fine with a helper callable type\u2026 so how about a lambda?\n #include  &lt;iostream&gt;  #include  &lt;tuple&gt;   template  &lt; typename  TupleT &gt; void  printTupleApply ( const  TupleT &amp;  tp )  {  std :: cout  &lt;&lt;  &#34;(&#34; ;  std :: apply ([]( const  auto &amp; ...  tupleArgs )  {  size_t  index  =  0 ;  auto  printElem  =  [ &amp; index ]( const  auto &amp;  x )  {  if  ( index ++  &gt;  0 )  std :: cout  &lt;&lt;  &#34;, &#34; ;  std :: cout  &lt;&lt;  x ;  };  ( printElem ( tupleArgs ),  ...);  },  tp  )  std :: cout  &lt;&lt;  &#34;)&#34; ; } int  main ()  {  std :: tuple  tp  {  10 ,  20 ,  3.14 ,  42 ,  &#34;hello&#34; };  printTupleApply ( tp ); }\n   As you can see, we have a lambda inside a lambda. It\u2019s similar to our custom type with  operator(). You can also have a look at the transformation through C++ Insights:  this link\n  Since our callable object gets a variadic argument list, we can use this information and make the code simpler.\n  The code inside the internal lambda uses  index to check if we need to print the separator or not - it checks if we print the first argument. We can do this at compile-time:\n #include  &lt;iostream&gt;  #include  &lt;tuple&gt;   template  &lt; typename  TupleT &gt; void  printTupleApply ( const  TupleT &amp;  tp )  {  std :: apply  (  []( const  auto &amp;  first ,  const  auto &amp; ...  restArgs )  {  auto  printElem  =  []( const  auto &amp;  x )  {  std :: cout  &lt;&lt;  &#34;, &#34;  &lt;&lt;  x ;  };  std :: cout  &lt;&lt;  &#34;(&#34;  &lt;&lt;  first ;  ( printElem ( restArgs ),  ...);  },  tp  );  std :: cout  &lt;&lt;  &#34;)&#34; ; } int  main ()  {  std :: tuple  tp  {  10 ,  20 ,  3.14 ,  42 ,  &#34;hello&#34; };  printTupleApply ( tp ); }\n  This code breaks when tuple has no elements - we could fix this by checking its size in  if constexpr, but let\u2019s skip it for now.\n  So far we focused on printing tuple elements. So we had a \u201cfixed\u201d function that was called for each argument. To go further with our ideas, let\u2019s try to implement a function that takes a generic callable object. For example:\n   template  &lt; typename  TupleT ,  typename  Fn ,  std :: size_t ...  Is &gt; void  for_each_tuple_impl ( TupleT &amp;&amp;  tp ,  Fn &amp;&amp;  fn ,  std :: index_sequence &lt; Is ... &gt; )  {  ( fn ( std :: get &lt; Is &gt; ( std :: forward &lt; TupleT &gt; ( tp ))),  ...); } template  &lt; typename  TupleT ,  typename  Fn ,  std :: size_t  TupSize  =  std :: tuple_size_v &lt; std :: remove_cvref_t &lt; TupleT &gt;&gt;&gt; void  for_each_tuple ( TupleT &amp;&amp;  tp ,  Fn &amp;&amp;  fn )  {  for_each_tuple_impl ( std :: forward &lt; TupleT &gt; ( tp ),  std :: forward &lt; Fn &gt; ( fn ),  std :: make_index_sequence &lt; TupSize &gt; {}); }\n  First, the code uses universal references (forwarding references) to pass tuple objects. This is needed to support all kinds of use cases - especially if the caller wants to modify the values inside the tuple. That\u2019s why we need to use  std::forward in all places.\n     This is a new helper type from the C++20 trait that makes sure we get a \u201creal\u201d type from the type we get through universal reference.\n  Here\u2019s a good summary from a question about tuple iteration  link to Stackoverflow:\n As  T&amp;&amp; is a forwarding reference,  T will be  tuple&lt;...&gt;&amp; or  tuple&lt;...&gt; const&amp; when an lvalue is passed in; but  std::tuple_size is only specialized for  tuple&lt;...&gt;, so we must strip off the reference and possible const. Prior to C++20\u2019s addition of  std::remove_cvref_t, using  decay_t was the easy (if overkill) solution.\n  We discussed an implementation with index sequence; we can also try the same with std::apply. Can it yield simpler code?\n  template  &lt; typename  TupleT ,  typename  Fn &gt; void  for_each_tuple2 ( TupleT &amp;&amp;  tp ,  Fn &amp;&amp;  fn )  {  std :: apply  (  [ &amp; fn ]( auto &amp;&amp;  ... args )  {  ( fn ( args ),  ...);  },  std :: forward &lt; TupleT &gt; ( tp )  ); }\n   template  &lt; typename  TupleT ,  typename  Fn &gt; void  for_each_tuple2 ( TupleT &amp;&amp;  tp ,  Fn &amp;&amp;  fn )  {  std :: apply  (  [ &amp; fn ] &lt; typename  ... T &gt; ( T &amp;&amp;  ... args )  {  ( fn ( std :: forward &lt; T &gt; ( args )),  ...);  },  std :: forward &lt; TupleT &gt; ( tp )  ); }\n  Additionally, if you want to stick to C++17, you can apply  decltype on the arguments:\n template  &lt; typename  TupleT ,  typename  Fn &gt; void  for_each_tuple2 ( TupleT &amp;&amp;  tp ,  Fn &amp;&amp;  fn )  {  std :: apply  (  [ &amp; fn ]( auto &amp;&amp;  ... args )  {  ( fn ( std :: forward &lt; decltype ( args ) &gt; ( args )),  ...);  },  std :: forward &lt; TupleT &gt; ( tp )  ); }\n    The background task was to print tuples elements and have a way to transform them. During the process, we went through variadic templates, index sequence, template argument deduction rules and tricks, std::apply, and removing references.\n I\u2019m happy to discuss changes and improvements. Let me know in the comments below the article about your ideas.\n   C++ Templates: The Complete Guide (2nd Edition) by David Vandevoorde, Nicolai M. Josuttis, Douglas Gregor\n  I&#39;ve prepared a valuable bonus if you&#39;re interested in Modern C++!  Learn all major features of recent C++ Standards! Check it out here:", "posttime": "2022-02-15 17:28:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,std", "title": "C++\u6a21\u677f\uff1a\u5982\u4f55\u8fed\u4ee3STD:tuple\uff1aSTD:\u5e94\u7528\u548c\u66f4\u591a", "title_en": "C++ Templates: How to Iterate through std:tuple: std:apply and More", "transed": 1, "url": "https://www.cppstories.com/2022/tuple-iteration-apply/", "via": "", "real_tags": ["c++", "std"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073483, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566/\u591a\u4f26\u591a\uff0c2\u670814\u65e5\uff08\u8def\u900f\u793e\uff09-\u4e00\u4e2a\u81f4\u529b\u4e8e\u4f20\u64ad\u6cc4\u9732\u6570\u636e\u7684\u7f51\u7ad9\u79f0\uff0c\u5728\u4e00\u4e2a\u5e7f\u53d7\u8be5\u7ec4\u7ec7\u652f\u6301\u8005\u6b22\u8fce\u7684\u7b79\u6b3e\u5e73\u53f0\u636e\u79f0\u906d\u5230\u9ed1\u5ba2\u653b\u51fb\u540e\uff0c\u8be5\u7f51\u7ad9\u83b7\u5f97\u4e86\u5927\u91cf\u5173\u4e8e\u53cd\u5bf9\u5927\u6d41\u884c\u536b\u751f\u63aa\u65bd\u7684\u52a0\u62ff\u5927\u8fd0\u52a8\u6350\u8d60\u8005\u7684\u4fe1\u606f\u3002\n\u5206\u5e03\u5f0f\u62d2\u7edd\u673a\u5bc6\uff08DDoS\uff09\u5468\u65e5\u665a\u4e9b\u65f6\u5019\u5728\u5176\u7f51\u7ad9\u4e0a\u8868\u793a\uff0c\u5b83\u62e5\u6709\u6765\u81ea\u7f8e\u56fd\u57fa\u7763\u6559\u7b79\u6b3e\u7f51\u7ad9GiveSendGo\u768430\u5146\u5b57\u8282\u7684\u6350\u8d60\u8005\u4fe1\u606f\uff0c\u5305\u62ec\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u90ae\u653f\u7f16\u7801\u548c\u4e92\u8054\u7f51\u534f\u8bae\u5730\u5740\u3002\n\u968f\u7740\u6e25\u592a\u534e\u548c\u5176\u4ed6\u5730\u65b9\u7684\u5f53\u5c40\u8bd5\u56fe\u63a7\u5236\u5361\u8f66\u53f8\u673a\u9886\u5bfc\u7684\u96c6\u4f1a\uff0c\u4e3a\u52a0\u62ff\u5927\u6297\u8bae\u6d3b\u52a8\u63d0\u4f9b\u8d44\u91d1\u5df2\u6210\u4e3a\u4e00\u4e2a\u5173\u952e\u7684\u5173\u6ce8\u70b9\u3002\u5361\u8f66\u53f8\u673a\u5c01\u9501\u4e86\u52a0\u62ff\u5927\u5404\u5730\u7684\u57ce\u5e02\u548c\u8fc7\u5883\u70b9\uff0c\u8981\u6c42\u5305\u62ec\u603b\u7406\u8d3e\u65af\u6c40\u00b7\u7279\u9c81\u591a\u7684\u8bc1\u8bcd\u3002\nGiveSendGo\u53d1\u8a00\u4eba\u5728\u5468\u4e00\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\uff0c\u8be5\u7f51\u7ad9\u4ecd\u5728\u5411&#34\uff1b2022\u5e74\u548c#34\u5e74\u7684\u81ea\u7531\u62a4\u822a\uff1b\u800c\u4e14\u6350\u6b3e\u6ca1\u6709\u88ab\u9000\u8fd8\u3002\u8fd9\u4f4d\u53d1\u8a00\u4eba\u6ca1\u6709\u7acb\u5373\u5bf9\u9ed1\u5ba2\u884c\u4e3a\u672c\u8eab\u53d1\u8868\u8bc4\u8bba\u3002\n\u7136\u800c\uff0c\u8be5\u7f51\u7ad9\u4f3c\u4e4e\u5904\u4e8e\u79bb\u7ebf\u72b6\u6001\u3002\u7f51\u7ad9\u8bbf\u95ee\u8005\u6536\u5230\u4e00\u6761\u6d88\u606f\uff0c\u79f0\u5176\u6b63\u5728\u7ef4\u62a4\u548c&#34\uff1b\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u56de\u6765&#34;\nGiveSendGo\u6b64\u524d\u66fe\u58f0\u79f0\uff0c\u5b83\u4e0d\u53d7\u52a0\u62ff\u5927\u6cd5\u9662\u51bb\u7ed3\u8fd9\u4e9b\u8d44\u91d1\u7684\u547d\u4ee4\u7684\u7ea6\u675f\u3002\nDaily Dot digital news outlet\u7684\u4e00\u540d\u8bb0\u8005\u5728Twitter\u4e0a\u8868\u793a\uff0cGiveSendGo\u7f51\u7ad9\u4e00\u591c\u4e4b\u95f4\u906d\u5230\u9ed1\u5ba2\u653b\u51fb\uff0c\u5176\u5934\u7248\u88ab\u7535\u5f71#34\uff1b\u51b7\u51bb\u548c#34\uff1b\u4ee5\u53ca\u4e00\u4efd\u5ba3\u8a00\uff0c\u6307\u8d23\u5b83\u652f\u6301#34\uff1b\u6e25\u592a\u534e\u7684\u4e00\u6b21\u66b4\u52a8&#34;\n\u8def\u900f\u793e\u65e0\u6cd5\u7acb\u5373\u8bc1\u5b9e\u9ed1\u5ba2\u653b\u51fb\u548c\u6cc4\u5bc6\u6307\u63a7\uff0c\u5c3d\u7ba1\u5206\u5e03\u5f0f\u62d2\u7edd\u4fdd\u5bc6\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u662f\u53f3\u7ffc\u7ec4\u7ec7\u6cc4\u5bc6\u6570\u636e\u7684\u6258\u7ba1\u5730\uff0c\u5305\u62ec\u6781\u53f3\u7ffc\u7684\u7231\u56fd\u8005\u9635\u7ebf\u548c\u8a93\u8bcd\u5b88\u62a4\u8005\u3002\nDDoS\u8868\u793a\uff0c\u7531\u4e8e\u6350\u8d60\u8005\u4fe1\u606f\u5305\u542b\u654f\u611f\u7684\u4e2a\u4eba\u4fe1\u606f\uff0c\u5b83\u4e0d\u4f1a\u516c\u5f00\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u662f\u5c06\u5176\u63d0\u4f9b\u7ed9&#34\uff1b\u8bb0\u8005\u548c\u7814\u7a76\u4eba\u5458&#34;\nDDoS\u81ea\u79f0\u662f\u4e00\u5bb6\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u81f4\u529b\u4e8e\u4e3a\u516c\u4f17\u5229\u76ca\u514d\u8d39\u4f20\u8f93\u6570\u636e\u3002\n\u5728\u4e3b\u6d41\u4f17\u7b79\u5e73\u53f0GoFundMe\u963b\u6b62\u5411\u81ea\u79f0\u81ea\u7531\u62a4\u822a\u961f\u6350\u6b3e\u540e\uff0cGiveSendGo\u6210\u4e3a\u5411\u6297\u8bae\u8005\u7b79\u96c6\u8d44\u91d1\u7684\u4e3b\u8981\u6e20\u9053\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u8be5\u7ec4\u7ec7\u8868\u793a\u5df2\u4e3a\u6297\u8bae\u6d3b\u52a8\u7b79\u96c6\u4e86800\u4e07\u7f8e\u5143\u3002\n\u5317\u7f8e&#39\uff1b\u52a0\u62ff\u5927\u8fb9\u5883\u670d\u52a1\u673a\u67842019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u7ec4\u7ec7\u6700\u65b0\u7684\u8d38\u6613\u8054\u7cfb\u5728\u661f\u671f\u65e5\u665a\u4e9b\u65f6\u5019\u91cd\u65b0\u5f00\u653e\uff0c\u7ed3\u675f\u4e86\u4e3a\u671f\u516d\u5929\u7684\u5c01\u9501\uff0c\u52a0\u62ff\u5927\u8b66\u65b9\u5728\u6e05\u9664\u4e86\u6297\u8bae\u8005\u7684\u6218\u6597\u7ed3\u675fCVID-19\u9650\u5236\u4e4b\u540e\u3002\u9605\u8bfb\u66f4\u591a\n\u4f26\u6566\u62c9\u6590\u5c14\u00b7\u8428\u7279\u548c\u591a\u4f26\u591a\u5b89\u5a1c\u00b7\u6885\u52d2\u00b7\u5e15\u666e\u5c3c\u62a5\u9053\uff1b\u970d\u534e\u5fb7\u00b7\u6208\u52d2\u7f16\u8f91", "note_en": "LONDON/TORONTO, Feb 14 (Reuters) - A website devoted to disseminating leaked data says it was given reams of information about donors to a Canadian movement opposed to pandemic health measures after a fundraising platform popular with supporters of the group allegedly suffered a hack.\n Distributed Denial of Secrets (DDoS) said on its website late on Sunday that it had 30 megabytes of donor information from the U.S.-based Christian fundraising site GiveSendGo, including names, email addresses, ZIP codes and internet protocol addresses.\n The funding of the Canadian protests has emerged as a key point of interest as authorities in Ottawa and elsewhere try to get a grip on rallies led by truckers that have been blockading cities and border crossings across Canada with demands that include the deposition of Prime Minister Justin Trudeau.\n  In an email on Monday, a GiveSendGo spokesperson said that the site was still soliciting donations to the &#34;Freedom Convoy 2022&#34; campaign and that donations were not being refunded. The spokesperson did not immediately comment on the hack itself.\n The site, however, appeared to be offline. Website visitors were met with a message that it was under maintenance and &#34;we will be back very soon.&#34;\n GiveSendGo had previously asserted it was not subject to a Canadian court order that froze these funds.\n A journalist at the Daily Dot digital news outlet said on Twitter that the GiveSendGo site suffered a hack overnight and had its front page briefly replaced by a clip from the movie &#34;Frozen&#34; and a manifesto accusing it of supporting &#34;an insurrection in Ottawa.&#34;\n Reuters could neither immediately confirm the hack nor the leak claims, although Distributed Denial of Secrets has a long record of hosting leaked data from right-wing organizations, including the far-right Patriot Front and the Oath Keepers.\n DDoS said that because the donor information contained sensitive personal information, it would not be making the data available publicly but would instead be offering it to &#34;journalists and researchers.&#34;\n DDoS describes itself as a non-profit devoted to enabling the free transmission of data in the public interest.\n GiveSendGo became a prime conduit for money to the protesters after mainstream crowdfunding platform GoFundMe blocked donations to the self-declared Freedom Convoy. Earlier this month the group said it had raised $8 million for the protests.\n North America&#39;s busiest trade link reopened for traffic late on Sunday, ending a six-day blockade, Canada Border Services Agency said, after Canadian police cleared the protesters fighting to end COVID-19 restrictions.   read more\n  Reporting by Raphael Satter in London and Anna Mehler Paperny in Toronto; Editing by Howard Goller", "posttime": "2022-02-15 17:14:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,canada,\u7f51\u7ad9", "title": "\u636e\u62a5\u9053\uff0c\u9ed1\u5ba2\u88ad\u51fb\u4e8b\u4ef6\u540e\uff0c\u52a0\u62ff\u5927\u5361\u8f66\u8f66\u961f\u6350\u8d60\u8005\u7684\u540d\u5b57\u88ab\u6cc4\u9732", "title_en": "Names of Canada truck convoy donors leaked after reported hack", "transed": 1, "url": "https://www.reuters.com/world/us/leak-site-says-it-has-been-given-list-canada-truck-convoy-donors-after-reported-2022-02-14/", "via": "", "real_tags": ["\u9ed1\u5ba2", "canada", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073482, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0c\u4e00\u79cd\u73b0\u8c61\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002\u6709\u4eba\uff0c\u53ef\u80fd\u4e0d\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u8ba4\u4e3a\u9700\u8981\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u8fa8\u522b\u53e6\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u662f\u5426\u6709\u80fd\u529b\u62c5\u4efb\u5f00\u53d1\u4eba\u5458\u7684\u89d2\u8272\u3002\u4e8e\u662f\uff0c\u4ee3\u7801\u6d4b\u8bd5\u88ab\u53d1\u660e\u4e86\u3002\u4ece\u767d\u677f\u5206\u7c7b\u6811\uff0c\u5230fizzbuzz\uff0c\u5230\u7f16\u7801katas\uff0c\u518d\u5230\u5b9e\u9645\u5f00\u53d1\u4ea7\u54c1\uff0c\u5b83\u6709\u5f88\u591a\u79cd\u53e3\u5473\u3002\u6211\u4eec\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u516c\u53f8\u662f\u5426\u4e3a\u8fd9\u9879\u5de5\u4f5c\u4ed8\u8d39\uff0c\u6216\u8005\u4ed6\u4eec\u662f\u5426\u5f3a\u8feb\u4e00\u4e2a\u4eba\u5728\u89c2\u4f17\u9762\u524d\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u7684\u7ec6\u5fae\u5dee\u522b\u2014\u2014\u4f46\u8fd9\u4e00\u5207\u90fd\u4e0d\u662f\u91cd\u70b9\u3002\n\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u4e00\u79cd\u65b0\u73b0\u8c61\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u5b9e\u9645\u4e0a\u66f4\u7cdf\u3002\u5fb7\u592b\u96f7\u5c14\u6d4b\u8bd5\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u6f84\u6e05\u4e00\u4e0b\u3002\u6211\u662f\u4e2a\u5f88\u68d2\u7684\u8003\u751f\u3002\u6211\u662f\u90a3\u79cd\u559c\u6b22\u8003\u8bd5\u7684\u4e66\u5446\u5b50\u3002\u4f46\u90a3\u662f\u5728\u8fc7\u53bb\uff0c\u90a3\u65f6\u6211\u6ca1\u6709\u7b80\u5386\u6216\u7b80\u5386\uff0c\u6211\u9700\u8981\u8bc1\u660e\u6211\u505a\u4e86\u4ec0\u4e48\uff0c\u5b66\u5230\u4e86\u4ec0\u4e48\u3002\n\u5feb\u8fdb\u5230\u4eca\u5929\u3002\u5927\u591a\u6570\u5728DevRel\u9886\u57df\u5de5\u4f5c\u8d85\u8fc75\u5206\u949f\u7684\u4eba\u90fd\u6709\u4e00\u4e9b\u4f5c\u54c1\u96c6\u3001\u5728\u7ebf\u5c55\u793a\u548c\u5927\u91cf\u5de5\u4f5c\u3002\u8fd9\u53ef\u80fd\u53ea\u662f\u4ed6\u4eec\u5199\u7684\u535a\u5ba2\u5e16\u5b50\u7684\u4e00\u5806\u94fe\u63a5\uff0c\u6216\u51e0\u6b21\u4f1a\u8bae\u8c08\u8bdd\u7684\u89c6\u9891\u5217\u8868\uff0c\u751a\u81f3\u662f\u4ed6\u4eec\u4e0e\u4e0d\u540c\u793e\u533a\u5408\u4f5c\u7684\u4e00\u5806\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u3002\n\u8ba9\u6211\u4eec\u6682\u65f6\u56de\u907f\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5927\u591a\u6570\u9762\u8bd5\u516c\u53f8\u90fd\u76f8\u4fe1\u4f60\u6bd4\u4ed6\u4eec\u66f4\u9700\u8981\u4f60\u3002\u5bf9\u4e8e\u6280\u672f\u9886\u57df\u7684\u5927\u591a\u6570\u90e8\u95e8\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u8bef\u89e3\u3002\u5927\u591a\u6570\u7ec4\u7ec7\u90fd\u9700\u8981\u6709\u4eba\u6765\u586b\u8865\u8fd9\u4e2a\u804c\u4f4d\u3002\u5728\u5fb7\u592b\u96f7\u5c14\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u662f\u975e\u5e38\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5408\u683c\u7684\u4e2a\u4eba\u6bd4\u7a7a\u7f3a\u804c\u4f4d\u5c11\u5f97\u591a\u3002\n\u50cf\u8fd9\u6837\u7684\u8bef\u89e3\u5f80\u5f80\u4f1a\u5bfc\u81f4\u5bfb\u627e\u65b9\u6cd5\uff0c\u4ee5\u6beb\u65e0\u610f\u4e49\u7684\u65b9\u5f0f\u5ba1\u67e5\u6f5c\u5728\u7684\u5019\u9009\u4eba\u3002\u5f53\u6d89\u53ca\u5230\u5f00\u53d1\u4eba\u5458\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u6d4b\u8bd5\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u5728\u5de5\u4f5c\u65f6\u95f4\u6216\u5728\u4e0d\u540c\u6280\u672f\u80cc\u666f\u7684\u4eba\u7684\u76d1\u7763\u4e0b\u5b8c\u6210\u4e4b\u524d\u8bbe\u5b9a\u7684\u4efb\u52a1\u3002\u8fd9\u662f\u4f60\u5c55\u793a\u81ea\u5df1\u6709\u591a\u806a\u660e\u7684\u673a\u4f1a\u3002\n\u540c\u6837\uff0c\u4f60\u662f\u5e26\u7740\u7b80\u5386\u6765\u7684\u3002\u8fd9\u5e94\u8be5\u8db3\u591f\u597d\u4e86\u3002\u5927\u591a\u6570\u7ba1\u7406\u5de5\u4f5c\u4e0d\u9700\u8981\u67d0\u79cd\u6d4b\u8bd5\u3002\u5927\u591a\u6570\u4eba\u529b\u8d44\u6e90\u548c\u62db\u8058\u4eba\u5458\u90fd\u4e0d\u9700\u8981\u8003\u8bd5\u3002C\u7ea7\u5de5\u4f5c\u4e0d\u9700\u8981\u8003\u8bd5\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u6839\u636e\u62a5\u7eb8\u548c\u91c7\u8bbf\u5f97\u51fa\u7684\u3002\u4ed6\u4eec\u751a\u81f3\u6ca1\u6709Github\u5386\u53f2\u8bb0\u5f55\u6216\u76f8\u5173\u8bed\u8a00\u5217\u8868\u3002\n\u8ba9\u6211\u4eec\u56de\u5230\u5fb7\u592b\u96f7\u5c14\u3002\u5bf9\u4e8eDevRel\u4ece\u4e1a\u8005\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u6709\u4e00\u4efd\u6e05\u6670\u7684\u4e66\u9762\u8bb0\u5f55\uff0c\u751a\u81f3\u6bd4\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u8fd8\u8981\u591a\u3002\u6d4b\u8bd5\u7684\u4ef7\u503c\u5728\u54ea\u91cc\uff1f\u7ec3\u4e60\u62a5\u544a\uff1f\u4e00\u7bc7\u6d4b\u8bd5\u535a\u5ba2\u6587\u7ae0\uff1f\n\u8fd9\u90e8\u5206\u662fDevRel\u7684\u5f00\u53d1\u90e8\u5206\u3002\u5c3d\u7ba1\u5df2\u7ecf\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8bc1\u660e\u8fd9\u4e9b\u4e1c\u897f\u6ca1\u6709\u4ef7\u503c\uff0c\u4f46\u5f00\u53d1\u8005\u4e16\u754c\u5df2\u7ecf\u5c06\u5176\u7559\u7ed9\u4e86\u4e16\u754c\u4e0a\u7684DevRel\u5019\u9009\u4eba\u3002\n\u5982\u679c\u4e00\u4e2a\u7ec4\u7ec7\u65e0\u6cd5\u901a\u8fc7LinkedIn\u548c\u5feb\u901f\u641c\u7d22\u5c06\u5176\u6574\u5408\u8d77\u6765\uff0c\u90a3\u4e48\u4e5f\u8bb8\u662f\u65f6\u5019\u8ba4\u8bc6\u5230\uff0c\u4ed6\u4eec\u8fd8\u4e0d\u591f\u5148\u8fdb\uff0c\u65e0\u6cd5\u4e3a\u4e4b\u5de5\u4f5c\u3002\u5f53\u7136\uff0c\u5e94\u8058\u8005\u5e94\u8be5\u88ab\u8981\u6c42\u8bc1\u660e\u81ea\u5df1\u7684\u4ef7\u503c\u2014\u2014\u4f46\u6d4b\u8bd5\u5e76\u4e0d\u662f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u3002\u4e0d\u518d\u662f\u4e00\u4e2a\u591a\u5c42\u6b21\u7684\u9762\u8bd5\u7ed3\u6784\u3002\n\u7ed3\u675fDevRel\u5019\u9009\u6d4b\u8bd5\u3002\u7ed3\u675f\u5f00\u53d1\u4eba\u5458\u5019\u9009\u6d4b\u8bd5\u3002\u8fd9\u4f24\u5bb3\u4e86\u6bcf\u4e2a\u4eba\uff0c\u6d6a\u8d39\u4e86\u6bcf\u4e2a\u4eba\u7684\u65f6\u95f4\u3002", "note_en": "A few years ago, a phenomenon began to take hold. Someone, probably not a developer, thought there needed to be a way to discern if another developer had the chops to fill a developer role. So the Code Test was invented. It\u2019s seen many flavors, from the white board sorting tree, to fizzbuzz, to code katas, to actually working on the product. We can get into the nuance of whether companies pay for this work or if they force one to do it in front of an audience - but none of that is really the point.\n      Let\u2019s talk about a new phenomenon and why it\u2019s actually even worse. The DevRel test.\n  First, let me be clear. I\u2019m a great test taker. I was one of those nerdy kids who loved taking tests. But that was in the old days, when I didn\u2019t have a CV or a resum\u00e9 and I needed to prove what I had done and what I had learned.\n  Fast forward to today. Most people who have been in the DevRel field for more than 5 minutes have some sort of portfolio, an online presence, a body of work. This might just be a bunch of links to blog posts they\u2019ve written or a list of videos from a couple conference talks - even a bunch of social media posts they\u2019ve used to work with different communities.\n  Let\u2019s eschew for a moment the fact that most interviewing companies are functioning on the belief that you need them more than they need you. This is a misconception for most sections of the technology field. Most organizations need someone to fill a role. This is extremely true in the world of DevRel as there are many fewer qualified individuals than there are open positions.\n  Misconceptions like this often lead to finding ways to vet potential candidates in ways that don\u2019t make sense. When it comes to developers, a test is given. Often unpaid you are expected to perform the task set before you either on your time or while being overseen by people of varying technical backgrounds. This is your opportunity to show how clever you are.\n  Again, you came in with a resum\u00e9 or a CV. That should be good enough. Most management jobs do not require some kind of test. Most HR and recruiter roles do not require a test. C-level jobs do not require a test. All these are landed just based on the paper and the interview. They don\u2019t even have a Github history or list of relevant languages coded in.\n  So let\u2019s swing this back to DevRel. Even more than a developer, there is a clear paper trail on what a DevRel practitioner has done. Where is the value of a test? A practice presentation? A test blog post?\n  Part of this is the Dev part of DevRel. Even though it has been proven  again and  again and  again these things have no value, the developer world has bequeathed this to the DevRel candidates of the world.\n    If an organization can\u2019t piece it together from LinkedIn and a quick search, maybe it\u2019s time to realize they aren\u2019t a company advanced enough to work for. Sure, a candidate should be expected to prove their value - but tests aren\u2019t the way to do it. Not anymore than a multi-level interviewing structure.\n  End the DevRel candidate test. End the Developer candidate test. It\u2019s hurting everyone and wastes everyone\u2019s time.", "posttime": "2022-02-15 17:12:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u6d4b\u8bd5,tests", "title": "\u4ee3\u7801\u6d4b\u8bd5\u6beb\u65e0\u610f\u4e49\u2014\u2014\u5bf9DevRel\u6765\u8bf4\u66f4\u662f\u5982\u6b64", "title_en": "Code Tests are pointless \u2013 doubly so for DevRel", "transed": 1, "url": "https://devrelate.io/post/19-end-the-pointless-devrel-test", "via": "", "real_tags": ["\u4ee3\u7801", "\u6d4b\u8bd5", "tests"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073481, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "20\u591a\u5e74\u6765\u8086\u8650\u7f8e\u56fd\u897f\u90e8\u7684\u6781\u7aef\u5e72\u65f1\u73b0\u5728\u88ab\u5217\u4e3a\u81f3\u5c111200\u5e74\u6765\u6700\u5e72\u65f1\u768422\u5e74\u65f6\u671f\uff0c\u79d1\u5b66\u5bb6\u53d1\u73b0\uff0c\u4eba\u7c7b\u5bf9\u5730\u7403\u7684\u52a0\u70ed\u6b63\u5728\u52a0\u5267\u8fd9\u573a\u7279\u5927\u5e72\u65f1\u3002\n\u5728\u4ed6\u4eec\u7684\u7814\u7a76\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u8003\u5bdf\u4e86\u5317\u7f8e\u6d32\u897f\u5357\u90e8800\u5e74\u524d\u7684\u4e3b\u8981\u5e72\u65f1\uff0c\u5e76\u786e\u5b9a\u672c\u4e16\u7eaa\u8fc4\u4eca\u4e3a\u6b62\u8be5\u5730\u533a\u7684\u5e72\u65f1\u7a0b\u5ea6\u5df2\u7ecf\u8d85\u8fc7\u4e8616\u4e16\u7eaa\u672b\u7684\u7279\u5927\u5e72\u65f1\uff0c\u8fd9\u662f\u6709\u8bb0\u5f55\u4ee5\u6765\u6700\u5e72\u65f1\u768422\u5e74\u3002\u8be5\u7814\u7a76\u7684\u4f5c\u8005\u8fd8\u5f97\u51fa\u7ed3\u8bba\uff0c\u5e72\u65f1\u72b6\u51b5\u53ef\u80fd\u4f1a\u6301\u7eed\u5230\u4eca\u5e74\uff0c\u4ece\u8fc7\u53bb\u6765\u770b\uff0c\u53ef\u80fd\u4f1a\u6301\u7eed\u6570\u5e74\u3002\n\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5982\u679c\u6ca1\u6709\u5168\u7403\u53d8\u6696\uff0c\u76ee\u524d\u7684\u5e72\u65f1\u4e0d\u4f1a\u5982\u6b64\u4e25\u91cd\u3002\u4ed6\u4eec\u4f30\u8ba1\uff0c\u5e72\u65f1\u7684\u4e25\u91cd\u7a0b\u5ea6\u4e2d\u670942%\u662f\u7531\u4e8e\u6e29\u5ba4\u6c14\u4f53\u5728\u5927\u6c14\u4e2d\u79ef\u7d2f\u9020\u6210\u7684\u6e29\u5ea6\u5347\u9ad8\u3002\n\u52a0\u5dde\u5927\u5b66\u6d1b\u6749\u77f6\u5206\u6821\uff08UCLA\uff09\u6c14\u5019\u79d1\u5b66\u5bb6\u3001\u8be5\u7814\u7a76\u7684\u4e3b\u8981\u4f5c\u8005\u5e15\u514b\u00b7\u5a01\u5ec9\u59c6\u65af\uff08Park Williams\uff09\u8bf4\uff1a\u201c\u7814\u7a76\u7ed3\u679c\u786e\u5b9e\u4ee4\u4eba\u62c5\u5fe7\uff0c\u56e0\u4e3a\u5b83\u8868\u660e\uff0c\u7531\u4e8e\u6c14\u5019\u53d8\u5316\uff0c\u6211\u4eec\u73b0\u5728\u9762\u4e34\u7684\u5e72\u65f1\u72b6\u51b5\u8981\u4e25\u91cd\u5f97\u591a\u3002\u201d\u3002\u201c\u4f46\u8fd9\u4e5f\u6709\u76f8\u5f53\u5927\u7684\u7a7a\u95f4\u8ba9\u65f1\u60c5\u6076\u5316\u3002\u201d\n\u5a01\u5ec9\u59c6\u65af\u548c\u4ed6\u7684\u540c\u4e8b\u5c06\u76ee\u524d\u7684\u5e72\u65f1\u4e0e800\u5e74\u4ee3\u52301500\u5e74\u4ee3\u4e4b\u95f4\u6301\u7eed23\u5e74\u523030\u5e74\u7684\u5176\u4ed6\u4e03\u6b21\u7279\u5927\u5e72\u65f1\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\n\u4ece\u6570\u5343\u68f5\u6811\u4e0a\u63d0\u53d6\u7684\u6728\u82af\u4f7f\u79d1\u5b66\u5bb6\u5f97\u4ee5\u91cd\u5efa\u51e0\u4e2a\u4e16\u7eaa\u524d\u7684\u571f\u58e4\u6e7f\u5ea6\u3002\u4ed6\u4eec\u4f7f\u7528\u4e86\u4ece\u8499\u5927\u62ff\u5dde\u5230\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u518d\u5230\u58a8\u897f\u54e5\u5317\u90e8\u7ea61600\u4e2a\u5730\u70b9\u7684\u6811\u6728\u6570\u636e\u3002\n\u5468\u4e00\u53d1\u8868\u5728\u300a\u81ea\u7136\u6c14\u5019\u53d8\u5316\u300b\u6742\u5fd7\u4e0a\u7684\u8fd9\u9879\u7814\u7a76\u8865\u5145\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u7814\u7a76\uff0c\u8868\u660e\u968f\u7740\u5316\u77f3\u71c3\u6599\u7684\u71c3\u70e7\u7ee7\u7eed\u63a8\u9ad8\u6e29\u5ea6\uff0c\u52a0\u5267\u5e72\u71e5\u8d8b\u52bf\uff0c\u7f8e\u56fd\u897f\u90e8\u9762\u4e34\u91cd\u5927\u6311\u6218\u3002\n\u5a01\u5ec9\u59c6\u65af\u662f\u4e00\u4e2a\u56e2\u961f\u7684\u6210\u5458\uff0c\u8be5\u56e2\u961f\u57282020\u5e74\u53d1\u8868\u4e86\u4e00\u9879\u7c7b\u4f3c\u7684\u7814\u7a76\u3002\u5f53\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u81ea2000\u5e74\u4ee5\u6765\u7684\u5e72\u65f1\u662f\u7ee716\u4e16\u7eaa\u672b\u7684\u7279\u5927\u5e72\u65f1\u4e4b\u540e\u7b2c\u4e8c\u4e25\u91cd\u7684\u3002\u5728\u8fc7\u53bb\u4e24\u5e74\u91cc\uff0c\u7531\u4e8e\u666e\u904d\u5b58\u5728\u9ad8\u6e29\u548c\u5e72\u65f1\uff0c\u76ee\u524d\u7684\u5e72\u65f1\u5df2\u7ecf\u8d85\u8fc7\u4e86\u8fd9\u4e00\u6781\u9650\u3002\n\u4e00\u4e9b\u79d1\u5b66\u5bb6\u5c06\u897f\u90e8\u5730\u533a\u7684\u8fd9\u79cd\u8d8b\u52bf\u63cf\u8ff0\u4e3a\u201c\u5e72\u65f1\u5316\u201d\uff0c\u5e76\u8868\u793a\u8be5\u5730\u533a\u5fc5\u987b\u505a\u597d\u51c6\u5907\uff0c\u968f\u7740\u6c14\u6e29\u7ee7\u7eed\u6500\u5347\uff0c\u5e72\u71e5\u624d\u80fd\u7ee7\u7eed\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u4ece\u5e72\u65f1\u671f\u5230\u6e7f\u6da6\u671f\uff0c\u897f\u90e8\u5730\u533a\u5bb9\u6613\u51fa\u73b0\u6781\u7aef\u7684\u53d8\u5316\uff0c\u6bd4\u5982\u6e9c\u6e9c\u7403\u4e0a\u4e0b\u6ce2\u52a8\uff0c\u4f46\u968f\u7740\u6c14\u5019\u53d8\u5316\uff0c\u8fd9\u4e9b\u53d8\u5316\u73b0\u5728\u201c\u53e0\u52a0\u5728\u4e25\u91cd\u7684\u5e72\u65f1\u8d8b\u52bf\u4e0a\u201d\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u81ea2000\u5e74\u4ee5\u6765\uff0c\u5317\u7f8e\u897f\u5357\u90e8\u7684\u5e73\u5747\u6e29\u5ea6\u6bd4\u8fc7\u53bb50\u5e74\u7684\u5e73\u5747\u6e29\u5ea6\u9ad81.6\u534e\u6c0f\u5ea6\u3002\u6c14\u6e29\u5347\u9ad8\u52a0\u5267\u4e86\u5e72\u65f1\uff0c\u84b8\u53d1\u589e\u52a0\uff0c\u571f\u58e4\u5e72\u71e5\uff0c\u6eaa\u6d41\u548c\u6cb3\u6d41\u4e2d\u7684\u6c34\u6d41\u51cf\u5c11\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u8f83\u9ad8\u7684\u6e29\u5ea6\u4f1a\u4f7f\u5927\u6c14\u66f4\u52a0\u5e72\u6e34\uff0c\u571f\u58e4\u548c\u690d\u88ab\u4f1a\u53d8\u5f97\u5e72\u71e5\uff0c\u5c31\u50cf\u201c\u6211\u4eec\u6253\u5f00\u52a0\u70ed\u5668\u65f6\uff0c\u5ba4\u5185\u690d\u7269\u4f1a\u5e72\u6db8\u4e00\u6837\u3002\u201d\u3002\n\u79d1\u5b66\u5bb6\u6307\u51fa\uff0c\u79d1\u7f57\u62c9\u591a\u6cb3\u57282020\u548c2021\u5e74\u7684\u6c34\u6d41\u91cf\u5728\u4e00\u4e2a\u591a\u4e16\u7eaa\u7684\u8bb0\u5f55\u4e2d\u51cf\u5c11\u5230\u4e86\u4e24\u5e74\u5e73\u5747\u6700\u4f4e\u6c34\u5e73\u3002\n\u8fd9\u6761\u6cb3\u5411\u4e03\u4e2a\u5dde\u4f9b\u6c34\uff0c\u4ece\u6000\u4fc4\u660e\u5dde\u5230\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\uff0c\u518d\u5230\u58a8\u897f\u54e5\u5317\u90e8\u3002\u4f46\u5b83\u957f\u671f\u88ab\u8fc7\u5ea6\u4f7f\u7528\uff0c\u5e72\u65f1\u52a0\u5267\u4e86\u95ee\u9898\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u8be5\u56fd\u6700\u5927\u7684\u4e24\u5ea7\u6c34\u5e93\u7c73\u5fb7\u6e56\u548c\u9c8d\u5a01\u5c14\u6e56\u7684\u6c34\u4f4d\u964d\u81f3\u6709\u8bb0\u5f55\u4ee5\u6765\u7684\u6700\u4f4e\u6c34\u5e73\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff1a\u201c\u6211\u4eec\u9700\u8981\u4e86\u89e3\uff0c\u897f\u90e8\u7684\u6c34\u8d44\u6e90\u9884\u7b97\u6b63\u5728\u6211\u4eec\u811a\u4e0b\u8fc5\u901f\u53d8\u5316\u3002\u201d\u3002\u201c\u6211\u4eec\u9700\u8981\u4e3a\u4e00\u4e2a\u66f4\u52a0\u5e72\u71e5\u7684\u672a\u6765\u505a\u597d\u51c6\u5907\uff0c\u4e0d\u8981\u8fc7\u4e8e\u4f9d\u8d56\u5e0c\u671b\uff0c\u5f53\u5929\u6c14\u518d\u6b21\u53d8\u6e7f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6062\u590d\u6b63\u5e38\u7684\u6c34\u8d44\u6e90\u7ba1\u7406\u3002\u201d\n\u708e\u70ed\u5e72\u71e5\u7684\u5e74\u4efd\u5bf9\u6574\u4e2a\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u548c\u897f\u90e8\u7684\u4f9b\u6c34\u548c\u666f\u89c2\u9020\u6210\u4e86\u91cd\u5927\u635f\u5931\u3002\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u6c34\u5e93\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u6709\u6240\u51cf\u5c11\u3002\u5728\u72b9\u4ed6\u5dde\uff0c\u5927\u76d0\u6e56\u5df2\u7ecf\u4e0b\u964d\u5230\u521b\u7eaa\u5f55\u7684\u4f4e\u6c34\u5e73\u3002\u6781\u7aef\u9ad8\u6e29\u5bfc\u81f4\u4e86\u91ce\u706b\u7206\u70b8\u3002\u5728\u83ab\u54c8\u97e6\u6c99\u6f20\uff0c\u79d1\u5b66\u5bb6\u5c06\u9e1f\u7c7b\u6570\u91cf\u7684\u5927\u5e45\u4e0b\u964d\u5f52\u56e0\u4e8e\u6c14\u5019\u53d8\u5316\u5e26\u6765\u7684\u66f4\u70ed\u3001\u66f4\u5e72\u71e5\u7684\u6761\u4ef6\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u5373\u4f7f\u6ca1\u6709\u6c14\u5019\u53d8\u5316\uff0c\u8fc7\u53bb20\u5e74\u5bf9\u8be5\u5730\u533a\u6765\u8bf4\u81ea\u7136\u4e5f\u662f\u201c\u5384\u8fd0\u671f\u201d\u3002\u4f46\u4ed6\u8bf4\uff0c\u5982\u679c\u6ca1\u6709\u6c14\u5019\u53d8\u5316\u7684\u5f71\u54cd\uff0c\u201c\u8fd9\u573a\u5e72\u65f1\u751a\u81f3\u4e0d\u4f1a\u63a5\u8fd1\u6700\u4e25\u91cd\u7684\u7279\u5927\u5e72\u65f1\u3002\u201d\n\u4e00\u4e9b\u957f\u671f\u5e72\u65f1\u5305\u62ec1213\u5e74\u81f31237\u5e74\u548c1271\u5e74\u81f31300\u5e74\u7684\u5e72\u65f1\u3002\u5728\u90a3\u4e2a\u4e16\u7eaa\u91cc\uff0c\u4eba\u4eec\u8ba4\u4e3a\u5728\u56db\u89d2\u5730\u533a\u7684\u6751\u5e84\u91cc\u751f\u6d3b\u548c\u8015\u4f5c\u7684\u571f\u8457\u4eba\u56e0\u5e72\u65f1\u800c\u79bb\u5f00\u4e86\u60ac\u5d16\u8fb9\u7684\u5bb6\u56ed\u3002\n\u79d1\u5b66\u5bb6\u4eec\u7814\u7a76\u4e86\u6570\u767e\u540d\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u6570\u5341\u5e74\u6765\u6536\u96c6\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u94bb\u53d6\u957f\u5bff\u6811\u7684\u6728\u82af\uff0c\u5982\u9053\u683c\u62c9\u65af\u51b7\u6749\u3001\u76ae\u5c3c\u7fc1\u677e\u3001\u9ec4\u677e\u548c\u84dd\u6a61\u6811\u3002\n\u4ed6\u4eec\u53d1\u73b0\u76ee\u524d\u7684\u65f1\u707e\u5305\u62ec\u4e24\u5e74- 2002\u5e74\u548c2021\u5e74\uff0c\u8fd9\u662f\u8fc7\u53bb1200\u5e74\u4e2d\u6700\u5e72\u65f1\u7684\u4e00\u5e74\u3002\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u968f\u7740\u8fc7\u53bb\u4e00\u5e74\u5e72\u65f1\u7684\u6fc0\u589e\uff0c\u8fd922\u5e74\u7684\u5e73\u5747\u5e72\u65f1\u7a0b\u5ea6\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5927\u591a\u6570\u8f83\u957f\u7684\u7279\u5927\u5e72\u65f1\u3002\n16\u4e16\u7eaa\u672b\u7684\u5e72\u65f1\u572823\u5e74\u540e\u7a81\u7136\u7ed3\u675f\uff0c\u5f53\u65f6\u6f6e\u6e7f\u7684\u6761\u4ef6\u5e2d\u5377\u4e86\u6574\u4e2a\u5730\u533a\u3002\u4f46\u76ee\u524d\u7684\u65f1\u60c5\u6ca1\u6709\u51cf\u5f31\u7684\u8ff9\u8c61\u3002\n\u6839\u636e\u7f8e\u56fd\u5e72\u65f1\u76d1\u6d4b\u7f51\u7ad9\uff0c\u7f8e\u56fd\u897f\u90e896%\u7684\u5730\u533a\u73b0\u5728\u5f02\u5e38\u5e72\u65f1\u6216\u66f4\u4e25\u91cd\uff0c88%\u7684\u5730\u533a\u5904\u4e8e\u5e72\u65f1\u72b6\u6001\u3002\n\u79d1\u5b66\u5bb6\u9884\u6d4b\uff0c\u65f1\u707e\u5f88\u53ef\u80fd\u81f3\u5c11\u4f1a\u6301\u7eed\u5230\u4eca\u5e74\u3002\u4ed6\u4eec\u8003\u8651\u4e86\u4e00\u4e2a\u5047\u8bbe\u7684\u672a\u6765\u60c5\u666f\uff0c\u57fa\u4e8e\u8fc7\u53bb1200\u5e74\u6240\u670940\u5e74\u671f\u95f4\u7684\u571f\u58e4\u6e7f\u5ea6\uff0c\u7136\u540e\u53e0\u52a0\u4e86\u8fd1\u5e74\u6765\u53d1\u751f\u7684\u76f8\u540c\u6570\u91cf\u7684\u6c14\u5019\u53d8\u5316\u5bfc\u81f4\u7684\u5e72\u71e5\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u572894%\u7684\u6a21\u62df\u4e2d\uff0c\u5e72\u65f1\u81f3\u5c11\u6301\u7eed\u4e8623\u5e74\u3002\u572875%\u7684\u6a21\u62df\u4e2d\uff0c\u5e72\u65f1\u6301\u7eed\u4e8630\u5e74\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff1a\u201c\u5f53\u5b83\u5904\u4e8e\u975e\u5e38\u8017\u5c3d\u7684\u72b6\u6001\u65f6\uff0c\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u628a\u6876\u88c5\u6ee1\u3002\u201d\u3002\u201c\u8981\u5728\u672a\u6765\u51e0\u5e74\u5185\u7ed3\u675f\u8fd9\u573a\u65f1\u707e\uff0c\u9700\u8981\u975e\u5e38\u5e78\u8fd0\u3002\u5728\u8fc7\u53bb1200\u5e74\u7684\u6570\u636e\u4e2d\uff0c\u8fd9\u79cd\u5e78\u8fd0\u7684\u4f8b\u5b50\u53ea\u6709\u51e0\u4e2a\u3002\u201d\n\u5a01\u5ec9\u59c6\u65af\u4e0e\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u62c9\u8499\u7279\u00b7\u591a\u5c14\u8482\u5730\u7403\u89c2\u6d4b\u7ad9\u7684\u7814\u7a76\u4eba\u5458\u672c\u6770\u660e\u00b7\u5e93\u514b\u548c\u6770\u68ee\u00b7\u65af\u9ed8\u767b\u5408\u8457\u4e86\u8fd9\u9879\u7814\u7a76\u3002\u4ed6\u4eec\u4f7f\u752829\u4e2a\u6c14\u5019\u6a21\u578b\u6765\u4f30\u8ba1\u6c14\u5019\u53d8\u5316\u5e26\u6765\u7684\u66f4\u9ad8\u6e29\u5ea6\u7684\u5f71\u54cd\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u5f53\u4ed6\u4eec\u5206\u6790\u5e72\u65f1\u5728\u6ca1\u6709\u6c14\u5019\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u662f\u5982\u4f55\u6f14\u53d8\u7684\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u8be5\u5730\u533a\u5c06\u57282005\u5e74\u548c2006\u5e74\u7684\u96e8\u5b63\u6446\u8131\u5e72\u65f1\uff0c\u7136\u540e\u57282007\u5e74\u518d\u6b21\u51fa\u73b0\u5e72\u65f1\u3002\n\u79d1\u5b66\u5bb6\u4eec\u752810\u5e74\u7684\u8fd0\u884c\u5e73\u5747\u503c\u6765\u8bc4\u4f30\u957f\u671f\u8d8b\u52bf\uff0c\u56e0\u6b64\u4e00\u4e2a\u6f6e\u6e7f\u7684\u5e74\u4efd\uff0c\u6bd4\u59822019\u5e74\uff0c\u4e0d\u8db3\u4ee5\u7ed3\u675f\u5927\u90e8\u5206\u5e72\u65f1\u5e74\u4efd\u7684\u8fd0\u884c\u3002\n\u8fd9\u9879\u7814\u7a76\u96c6\u4e2d\u5728\u6574\u4e2a\u5730\u533a\uff0c\u4f46\u56e0\u5730\u533a\u800c\u5f02\u3002\u867d\u7136\u4ece\u4e9a\u5229\u6851\u90a3\u5dde\u5230\u843d\u57fa\u5c71\u8109\u7684\u5e72\u65f1\u6700\u4e3a\u4e25\u91cd\uff0c\u4f46\u7814\u7a76\u8868\u660e\uff0c\u52a0\u5dde\u5927\u90e8\u5206\u5730\u533a\u7ecf\u5386\u4e8622\u5e74\u6765\u6700\u5e72\u65f1\u7684\u65f6\u671f\u4e4b\u4e00\uff0c\u5c3d\u7ba1\u4e0d\u662f\u7edd\u5bf9\u6700\u5e72\u65f1\u7684\u65f6\u671f\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u8fd9\u9879\u7814\u7a76\u5e94\u8be5\u4f5c\u4e3a\u4e00\u4e2a\u8b66\u544a\uff0c\u5728\u672a\u6765\u7684\u51e0\u5e74\u548c\u51e0\u5341\u5e74\u91cc\uff0c\u5e72\u71e5\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff1a\u201c\u4e0a\u5343\u5e74\u53d1\u751f\u7684\u7279\u5927\u5e72\u65f1\u662f\u5728\u6ca1\u6709\u6c14\u5019\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u7684\u3002\u201d\u3002\u5f53\u8fd9\u79cd\u7279\u5927\u5e72\u65f1\u518d\u6b21\u53d1\u751f\u65f6\uff0c\u5b83\u4eec\u5c06\u201c\u53d1\u751f\u5728\u4e00\u4e2a\u7531\u4e8e\u4eba\u4e3a\u6c14\u5019\u53d8\u5316\u800c\u5bfc\u81f4\u5927\u6c14\u4eba\u4e3a\u53d8\u6696\u7684\u4e16\u754c\uff0c\u8fd9\u5c06\u662f\u7edd\u5bf9\u707e\u96be\u6027\u7684\u3002\u201d\n\u56fd\u5bb6\u5927\u6c14\u7814\u7a76\u4e2d\u5fc3\uff08National Center for Atmospheric Research\uff09\u7684\u6c14\u5019\u79d1\u5b66\u5bb6\u827e\u62c9\u00b7\u8f9b\u666e\u68ee\uff08Isla Simpson\uff09\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u3002\u5979\u8bf4\uff0c\u5979\u8ba4\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u662f\u53ef\u9760\u7684\uff0c\u8fd9\u4e9b\u53d1\u73b0\u5bf9\u4ee5\u524d\u7684\u79d1\u5b66\u505a\u51fa\u4e86\u91cd\u8981\u8d21\u732e\u3002\n\u8f9b\u666e\u68ee\u8bf4\uff1a\u201c\u9274\u4e8e\u8fc7\u53bb\u4e24\u5e74\u7684\u60c5\u51b5\u6709\u591a\u4e25\u91cd\uff0c\u8fd9\u6b21\u66f4\u65b0\u771f\u7684\u5f88\u6709\u7528\u3002\u201d\u3002\n\u5979\u8bf4\uff0c\u76ee\u524d\u7684\u5e72\u65f1\u90e8\u5206\u662f\u7531\u4e8e\u964d\u6c34\u91cf\u5c11\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u6c14\u6e29\u5347\u9ad8\u7684\u5f71\u54cd\u52a0\u5267\u4e86\u5e72\u65f1\uff0c\u8fd9\u662f\u201c\u975e\u5e38\u660e\u663e\u7684\u6c14\u5019\u53d8\u5316\u4fe1\u53f7\u201d\n\u8f9b\u666e\u68ee\u8bf4\uff1a\u201c\u5c31\u6e29\u5ea6\u800c\u8a00\uff0c\u6211\u4eec\u5df2\u7ecf\u6446\u8131\u4e8620\u4e16\u7eaa\u7684\u6c14\u5019\uff0c\u8fd9\u5c06\u5bf9\u84b8\u53d1\u548c\u571f\u58e4\u6e7f\u5ea6\u4ea7\u751f\u5f71\u54cd\u3002\u201d\u3002\u5979\u8865\u5145\u8bf4\uff0c\u4ece\u5e72\u65f1\u5230\u6e7f\u6da6\u4ecd\u7136\u4f1a\u6709\u81ea\u7136\u7684\u6ce2\u52a8\uff0c\u201c\u4f46\u7531\u4e8e\u4eba\u4e3a\u6c14\u5019\u53d8\u5316\uff0c\u5728\u957f\u671f\u5e72\u65f1\u5316\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6b63\u5728\u7ecf\u5386\u8fd9\u79cd\u53d8\u5316\uff0c\u8fd9\u5c06\u4f7f\u4e8b\u4ef6\u53d8\u5f97\u66f4\u52a0\u4e25\u91cd\u3002\u201d\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u8fd9\u9879\u7814\u7a76\u6307\u51fa\u4e86\u79d1\u7f57\u62c9\u591a\u6cb3\u7b49\u6c34\u6e90\u957f\u671f\u8fc7\u5ea6\u4f7f\u7528\u7684\u5b9e\u9645\u95ee\u9898\uff0c\u5728\u8fc7\u53bb\u4e00\u4e2a\u4e16\u7eaa\u91cc\uff0c\u79d1\u7f57\u62c9\u591a\u6cb3\u63a8\u52a8\u4e86\u4ece\u6d1b\u6749\u77f6\u5230\u51e4\u51f0\u57ce\u7b49\u57ce\u5e02\u7684\u53d1\u5c55\u3002\u4ed6\u8bf4\uff0c\u5730\u4e0b\u6c34\u7684\u666e\u904d\u67af\u7aed\u662f\u8be5\u5730\u533a\u5173\u952e\u6c34\u50a8\u5907\u8fc7\u5ea6\u6d88\u8017\u7684\u53e6\u4e00\u4e2a\u75c7\u72b6\u3002\n\u4ed6\u8bf4\uff0c\u897f\u65b9\u7684\u8bb8\u591a\u4eba\u53ef\u80fd\u611f\u89c9\u4e0d\u5230\u4ed6\u4eec\u6b63\u5728\u7ecf\u5386\u4e00\u573a\u7279\u5927\u5e72\u65f1\uff0c\u56e0\u4e3a\u201c\u6211\u4eec\u7684\u7cfb\u7edf\u4e2d\u73b0\u5728\u6709\u6240\u6709\u8fd9\u4e9b\u7f13\u51b2\u533a\uff0c\u6bd4\u5982\u5730\u4e0b\u6c34\u548c\u5927\u578b\u6c34\u5e93\u3002\u201d\n\u201c\u4f46\u6211\u4eec\u73b0\u5728\u6b63\u5728\u8fc5\u901f\u5229\u7528\u8fd9\u4e9b\u540e\u76fe\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u9762\u4e34\u7740\u572810\u5e74\u621620\u5e74\u5185\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u540e\u76fe\u7684\u771f\u6b63\u98ce\u9669\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u65e0\u8bba\u662f\u8fd9\u4e00\u4e8b\u4ef6\u5c1a\u672a\u7ed3\u675f\uff0c\u8fd8\u662f\u4e0b\u4e00\u6b21\u5927\u65f1\u707e\u5df2\u7ecf\u5f00\u59cb\u3002\u201d", "note_en": "The extreme dryness that has ravaged the American West for more than two decades now ranks as the driest 22-year period in at least 1,200 years, and scientists have found that this megadrought is being intensified by humanity\u2019s heating of the planet.\n In their research, the scientists examined major droughts in southwestern North America back to the year 800 and determined that the region\u2019s desiccation so far this century has surpassed the severity of a megadrought in the late 1500s, making it the driest 22-year stretch on record. The authors of the study also concluded that dry conditions will likely continue through this year and, judging from the past, may persist for years.\n The researchers found the current drought wouldn\u2019t be nearly as severe without global warming. They estimated that 42% of the drought\u2019s severity is attributable to higher temperatures caused by greenhouse gases accumulating in the atmosphere.\n \u201cThe results are really concerning, because it\u2019s showing that the drought conditions we are facing now are substantially worse because of climate change,\u201d said Park Williams, a climate scientist at UCLA and the study\u2019s lead author. \u201cBut that also there is quite a bit of room for drought conditions to get worse.\u201d\n  Williams and his colleagues compared the current drought to seven other megadroughts between the 800s and 1500s that lasted between 23 years and 30 years.\n   Wood cores extracted from thousands of trees enabled the scientists to reconstruct the soil moisture centuries ago. They used data from trees at about 1,600 sites across the region, from Montana to California to northern Mexico.\n   The  study, which was published Monday in the journal Nature Climate Change, adds to a growing body of research that shows the American West faces major challenges as the burning of fossil fuels continues to push temperatures higher,  intensifying the drying trend.\n  Williams was part of a team that published a similar  study in 2020. At the time, they found the drought since 2000  was the second-worst after the late 1500s megadrought. With widespread heat and dryness over the past two years, the current drought has passed that extreme mark.\n Some scientists describe the trend in the West as \u201c aridification\u201d and say the region must prepare for the drying to continue as temperatures continue to climb.\n Williams said the West is prone to extreme variability from dry periods to wet periods, like a yo-yo going up and down, but these variations are now \u201csuperimposed on a serious drying trend\u201d with climate change.\n  The average temperature in southwestern North America since 2000 has been 1.6 degrees Fahrenheit warmer than the average during the previous 50 years, the researchers said. The warmer temperatures have compounded the drought by increasing evaporation, drying soils and leaving less water flowing in streams and rivers.\n Higher temperatures make the atmosphere thirstier, drying out soil and vegetation in much the same way that \u201cour house plants dry out when we turn on the heater,\u201d Williams said.\n The scientists pointed out that the flow of the Colorado River during the 2020 and 2021 water years shrank to the lowest two-year average in  more than a century of recordkeeping.\n The river supplies water across seven states, from Wyoming to California, and to northern Mexico. But it has been chronically overused, and the drought has compounded the problems. Over the past year, its two largest reservoirs, Lake Mead and Lake Powell,  declined to their lowest levels on record.\n \u201cWe need to understand that the water budget of the West is changing beneath our feet rapidly,\u201d Williams said. \u201cWe need to be prepared for a much drier future and to not rely so much on hope that when it gets wet again, we can just go back to business-as-usual water management.\u201d\n The hot, dry years have taken a major toll on water supplies and landscapes throughout California and the West. California\u2019s reservoirs have  dropped during the past two years. In Utah, the Great Salt Lake has  declined to record-low levels. Extreme heat has contributed to  explosive wildfires. And in the Mojave Desert, scientists have attributed  major declines in bird populations to hotter, drier conditions brought on by climate change.\n   Even without climate change, the past two decades would have been a \u201cbad luck period\u201d naturally for the region, Williams said. But without the influence of climate change, he said, \u201cthis drought wouldn\u2019t even be coming close to matching the worst of the megadroughts.\u201d\n Some of the long droughts included those from 1213 to 1237 and from 1271 to 1300. During that century, the Indigenous people who lived and farmed in villages in the Four Corners region are thought to have  left their cliffside homes because of drought.\n  The scientists studied data compiled over decades by hundreds of other researchers, who extracted wood cores by boring into long-lived trees such as Douglas firs, pi\u00f1on pines, ponderosa pines and blue oaks.\n They found the current drought has included two years \u2014 2002 and 2021 \u2014 that rank among the driest in the past 1,200 years. And with the surge in drying over the past year, Williams said, these 22 years have already been drier on average than most of the longer megadroughts.\n The late 1500s drought ended abruptly after 23 years when wet conditions swept across the region. But the current drought shows no signs of subsiding.\n According to the  U.S. Drought Monitor website, 96% of the Western U.S. is now abnormally dry or worse, and 88% of the region is in drought.\n   The scientists projected it\u2019s highly likely the drought will continue at least through this year. They considered a hypothetical future scenario based on soil moisture during all 40-year periods in the past 1,200 years and then superimposed the same amount of climate change-driven drying that has occurred in recent years. They found that in 94% of their simulations, the drought continued for at least a 23rd year. And in 75% of the simulations, the drought lasted 30 years.\n \u201cWhen it\u2019s in a very depleted state, it takes a long time to fill the bucket back up,\u201d Williams said. \u201cIt would take exceptional luck to end this drought in the next few years. There\u2019s only been a couple of examples of that type of luck in the last 1,200 years of data that we have.\u201d\n Williams coauthored the study with researchers Benjamin Cook and Jason Smerdon of Columbia University\u2019s Lamont-Doherty Earth Observatory. They used 29 climate models to estimate the influence of higher temperatures unleashed by climate change.\n When they analyzed how the drought would have evolved without climate change, they found that the region would have emerged from drought during wet years in 2005 and 2006, and then drought would have set in again in 2007, Williams said.\n The scientists used a 10-year running average in assessing long-term trends, so a single wet year, such as 2019, wasn\u2019t enough to end the run of mostly parched years.\n The research focused on the entire region, but there were differences depending on the area. While the dryness has been most extreme in areas from Arizona to the Rocky Mountains, the study showed that much of California experienced one of the driest 22-year periods, though not the absolute driest.\n Williams said the research should serve as a warning that the drying could get much worse in the years and decades to come.\n \u201cThe big megadroughts that occurred last millennium occurred in the absence of climate change,\u201d Williams said. When such megadroughts return, they\u2019ll be occurring \u201cin a world where the atmosphere is also artificially warmer because of human-caused climate change, which would be absolutely catastrophic.\u201d\n Isla Simpson, a climate scientist at the National Center for Atmospheric Research who wasn\u2019t involved in the study, said she thinks the methods are solid and the findings make an important contribution to previous science.\n \u201cIt\u2019s really useful to have this update, given how severe the last two years have been,\u201d Simpson said.\n She said the current drought has occurred in part due to low precipitation, but it\u2019s really the effect of higher temperatures that has worsened the drying and is \u201cvery clear climate change signal.\u201d\n   \u201cWe have emerged out of the climate of the 20th century in terms of temperature, which will have an impact on evaporation and soil moisture,\u201d Simpson said. There will still be the natural swings from dry to wet, she added, \u201cbut we\u2019re experiencing this variability now within this long-term aridification due to anthropogenic climate change, which is going to make the events more severe.\u201d\n Williams said the research points to real problems in the chronic overuse of water sources like the Colorado River, which fueled the growth of cities from Los Angeles to Phoenix over the past century. He said the widespread depletion of groundwater is another symptom of overdrawing the region\u2019s critical water reserves.\n Many people in the West may not feel like they\u2019re living through a megadrought, he said, because \u201cwe have all of these buffers in our system now, like groundwater and large reservoirs.\u201d\n \u201cBut we are utilizing those backstops so rapidly right now that we\u2019re at real risk of those backstops not being there for us in 10 or 20 years,\u201d he said, \u201cwhen either this event still hasn\u2019t ended, or when the next megadrought has already begun.\u201d", "posttime": "2022-02-15 17:05:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c14\u5019\u53d8\u5316,megadrought", "title": "\u897f\u90e8\u5927\u5e72\u65f1\u662f1200\u5e74\u6765\u6700\u4e25\u91cd\u7684\uff0c\u6c14\u5019\u53d8\u5316\u52a0\u5267\u4e86\u8fd9\u79cd\u60c5\u51b5", "title_en": "Western megadrought is worst in 1,200 years, intensified by climate change", "transed": 1, "url": "https://www.latimes.com/environment/story/2022-02-14/western-megadrought-driest-in-1200-years", "via": "", "real_tags": ["\u6c14\u5019\u53d8\u5316"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073480, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ebd\u7ea6\u5e02\u8bae\u4f1a\u8bae\u5458\u67e5\u8be2", "note_en": "NYC Council Member Lookup", "posttime": "2022-02-15 17:04:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8b66\u5bdf\u5c40,surveillance,\u8bae\u4f1a", "title": "\u7ebd\u7ea6\u8b66\u5bdf\u5c40\u7684\u76d1\u63a7\u673a\u5668", "title_en": "The NYPD\u2019s Surveillance Machine", "transed": 1, "url": "https://nypd-surveillance.amnesty.org/", "via": "", "real_tags": ["\u8b66\u5bdf\u5c40", "\u8bae\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073478, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u610f\u8bc6\u5230\u9700\u8981\u4e00\u4e2a\u7531\u5de5\u7a0b\u5e08\u7ec4\u6210\u7684\u6587\u5b57\u56e2\u961f\u624d\u80fd\u4f7f\u6211\u4eec\u7684\u81ea\u6211\u7ba1\u7406\u7684Solr\u57fa\u7840\u8bbe\u65bd\u4fdd\u6301\u6700\u65b0\u5e76\u6b63\u5e38\u5de5\u4f5c\u540e\uff0c\u6211\u4eec\u6b63\u5728\u8f6c\u5411\u4e00\u4e2a\u6258\u7ba1\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u2014\u2014Elasticsearch\uff01\n\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u8fc1\u79fb\u5230Elasticsearch\uff0c\u5b83\u7531Amazon Web Services\uff08AWS\uff09\u6258\u7ba1\u548c\u7ba1\u7406\u3002\u8fd9\u4e24\u4e2a\u641c\u7d22\u5f15\u64ce\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u672f\u8bed\u3001\u6a21\u5f0f\u548c\u601d\u7ef4\u7684\u7ffb\u8bd1\u3002\n\u8d85\u8fc72021\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u4e00\u4e2a\u8f83\u5c0f\u7684\u641c\u7d22\u7d22\u5f15\u5b8c\u5168\u8fc1\u79fb\u5230\u5f39\u6027\u641c\u7d22\uff0c\u5e76\u4e14\u76ee\u524d\u6b63\u5728\u4f7f\u7528\u5f39\u6027\u641c\u7d22\u6765\u641c\u7d22\u4e00\u4e9b\u65b0\u7684\u641c\u7d22\u57df\u3002\u8fc4\u4eca\u4e3a\u6b62\u7684\u65c5\u7a0b\u6559\u4f1a\u4e86\u6211\u4eec\u5f88\u591aSolr\u548cElastic\u4e4b\u95f4\u7684\u5173\u952e\u533a\u522b\uff0c\u4ee5\u53ca\u4eba\u4eec\u53ef\u80fd\u4e0d\u77e5\u9053\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u9664\u975e\u4ed6\u4eec\u7ecf\u5386\u4e86\u7c7b\u4f3c\u7684\u8fc1\u79fb\u3002\n\u6211\u4eec\u628a\u8fd9\u7bc7\u535a\u6587\u653e\u5728\u4e00\u8d77\u662f\u4e3a\u4e86\u5e2e\u52a9\u5176\u4ed6\u6b63\u5728\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u7ec3\u4e60\u7684\u4eba\u3002\n\u6211\u4eec\u4ece2014\u5e74\u5f00\u59cb\u5728Canva\u4f7f\u7528Solr\uff0c\u5f53\u65f6\u5b83\u662f\u6700\u6d3b\u8dc3\u7684\u793e\u533a\u4e2d\u6700\u6210\u719f\u7684\u9009\u62e9\u3002\u73b0\u5728\uff0c\u57282022\u5e74\uff0cElasticsearch\u4e0d\u518d\u662f\u4e00\u4e2a\u4e4f\u5473\u4e14\u6709\u70b9\u4e0d\u53ef\u9760\u7684\u65b0\u624b\uff0c\u800c\u662f\u5df2\u7ecf\u8bc1\u660e\u81ea\u5df1\u662f\u4e00\u4e2a\u53ef\u9760\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u5f00\u53d1\u8005\u793e\u533a\u548c\u652f\u6301\u3002\n\u73b0\u5728\uff0c\u96c7\u4f63\u5177\u6709Elasticsearch\u7ecf\u9a8c\u7684\u5de5\u7a0b\u5e08\u53d8\u5f97\u66f4\u5bb9\u6613\u4e86\uff0c\u96c7\u4f63\u719f\u6089Solr\u7684\u4eba\u4e5f\u66f4\u96be\u4e86\u3002\n\u4ee5\u4e0b\u5404\u8282\u5e76\u6392\u6bd4\u8f83\u4e86\u6211\u4eec\u5982\u4f55\u4f53\u9a8cSolr\u548cElasticsearch\uff0c\u6211\u4eec\u5bf9\u5b83\u4eec\u7684\u559c\u7231\u548c\u6323\u624e\uff0c\u4ee5\u53ca\u6211\u4eec\u5e0c\u671b\u5728\u8fc1\u79fb\u4e4b\u524d\u4e86\u89e3Elasticsearch\u7684\u60c5\u51b5\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u5c06\u6709\u5229\u4e8e\u5e0c\u671b\u505a\u540c\u6837\u4e8b\u60c5\u7684\u56e2\u961f\u3002\n\u6211\u4eec\uff08\u4f5c\u4e3a\u5de5\u7a0b\u5e08\uff09\u4e0e\u6280\u672f\u4e92\u52a8\u7684\u5173\u952e\u533a\u522b\u5728\u4e8e\u57fa\u7840\u8bbe\u65bd\u7684\u7ba1\u7406\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u8981\u8003\u8651\u7684\u65b9\u9762\u3002\n\u5fc5\u987b\u5355\u72ec\u7ba1\u7406\u4ee5\u89e3\u51b3\u95ee\u9898\u3002\u5982\u679c\u4f60\u5728\u7ba1\u7406Solr\uff0c\u4f60\u8fd8\u5fc5\u987b\u7ba1\u7406Zookeeper\u3002\n\u81ea\u52a8\u7f29\u653e\u53ef\u4ee5\u6dfb\u52a0\u8282\u70b9\u4ee5\u4fdd\u6301\u6700\u5c0f\u590d\u5236\uff0c\u4f46\u4e0d\u652f\u6301\u5728AZs\uff08AWS\u53ef\u7528\u6027\u533a\u57df\uff09\u4e4b\u95f4\u8fdb\u884c\u5e73\u8861\u3002\n\u81ea\u52a8\u7f29\u653e\u4e0d\u4f1a\u5e73\u8861\u526f\u672c\u4ee5\u9632\u6b62\u5371\u9669\u7684\u62d3\u6251\u3002\u6211\u4eec\u89c2\u5bdf\u5230\u81ea\u52a8\u7f29\u653e\u7684\u51e0\u79cd\u4e0d\u826f\u884c\u4e3a\u3002\n\u4e24\u4e2a\u8282\u70b9\u88ab\u6307\u5b9a\u4e3a\u540c\u4e00\u788e\u7247\u7684\u526f\u672c\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5d29\u6e83\uff0c\u4f1a\u7ed9\u5e78\u5b58\u8005\u5e26\u6765\u5de8\u5927\u7684\u8d1f\u8f7d\uff0c\u901a\u5e38\u8fd8\u4f1a\u5bfc\u81f4\u5e78\u5b58\u8005\u6b7b\u4ea1\u3002\n\u5c06\u591a\u4e2a\u8282\u70b9\u4f5c\u4e3a\u526f\u672c\u6dfb\u52a0\u5230\u5355\u4e2a\u9886\u5bfc\u8005\uff0c\u540c\u65f6\u5bfc\u81f4\u9886\u5bfc\u8005\u5c1d\u8bd5\u5c06\u5176\u6570\u636e\u540c\u65f6\u5206\u53d1\u7ed9\u4e24\u4e2a\u65b0\u7684\u8ffd\u968f\u8005\u3002\u8fd9\u5076\u5c14\u4f1a\u8ba9\u9886\u5bfc\u5012\u53f0\u3002\n\u6211\u4eec\u6709\u4e00\u4e9b\u81ea\u6211\u7ba1\u7406\u7684\u811a\u672c\uff0c\u4ee5\u786e\u4fdd\u788e\u7247\u7684\u526f\u672c\u4f4d\u4e8e\u4e0d\u540c\u7684\u8282\u70b9\u4e2d\u5e76\u8de8AZ\uff0c\u4f46\u8fd9\u4e0d\u662f\u73b0\u6210\u7684\u3002\n\u788e\u7247\u6839\u636e\u590d\u5236\u503c\u653e\u7f6e\u5728\u8282\u70b9\u4e0a\uff0c\u590d\u5236\u503c\u5728\u7d22\u5f15\u521b\u5efa\u65f6\u5b9a\u4e49\uff0c\u6216\u7531\u7d22\u5f15\u6a21\u677f\u6307\u5b9a\u3002\nsolrconfig\u3002xml\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u8bbe\u7f6e\uff0c\u4f8b\u5982\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u624b\u6301\u5668\u3001zookeeper\u8d85\u65f6\u548c\u81ea\u52a8\u63d0\u4ea4\u95f4\u9694\u3002\n\u53ef\u4ee5\u4f7f\u7528\u5177\u6709\u8fd9\u4e9b\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u7684\u7d22\u5f15\u6a21\u677f\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u66f4\u6539\u6a21\u677f\u4e0d\u4f1a\u66f4\u6539\u6d3b\u52a8\u7d22\u5f15\u7684\u914d\u7f6e\u3002\u8981\u66f4\u6539\u6d3b\u52a8\u7d22\u5f15\u7684\u914d\u7f6e\uff0c\u5fc5\u987b\u76f4\u63a5\u5c06\u8bbe\u7f6e\u6216\u6620\u5c04\u5e94\u7528\u4e8e\u8be5\u7d22\u5f15\u3002\nElasticsearch\u5904\u7406\u7d22\u5f15\u914d\u7f6e\u7684\u65b9\u5f0f\u4e0eSolr\u76f8\u6bd4\u6709\u5f88\u5927\u53d8\u5316\u3002\u4e86\u89e3\u4ec0\u4e48\u662f\u7d22\u5f15\u6a21\u677f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u6709\u52a9\u4e8e\u5c06Solr\u914d\u7f6e\u6587\u4ef6\u8f6c\u6362\u4e3aElasticsearch\u4e0a\u4e0b\u6587\u3002\n\u7d22\u5f15\u6a21\u677f\u5305\u542b\u5b9a\u4e49\u7d22\u5f15\u7684\u8bbe\u7f6e\u548c\u6620\u5c04\u3002\u5b83\u4eec\u6307\u5b9a\u4e00\u4e2a\u7d22\u5f15\u6a21\u5f0f\uff08\u4f8b\u5982test-*\uff09\uff0c\u8be5\u6a21\u5f0f\u5e94\u7528\u4e8e\u4e0e\u8be5\u6a21\u5f0f\u5339\u914d\u7684\u6240\u6709\u65b0\u7d22\u5f15\u3002\n\u6620\u5c04\u5b9a\u4e49\u5b57\u6bb5\u4ee5\u53ca\u5b83\u4eec\u5e94\u8be5\u4f7f\u7528\u7684\u5206\u6790\u5668/\u6807\u8bb0\u5668\u3002\u6620\u5c04\u4e5f\u53ef\u4ee5\u6807\u8bb0\u4e3a&#34\uff1b\u52a8\u6001&#34\uff1b\uff1a&#34;\u4e25\u683c\u7684&#34\uff1b\uff0c\u8fd9\u8981\u6c42\u60a8\u663e\u5f0f\u5730\u6dfb\u52a0\u8981\u4e3a\u6620\u5c04\u7f16\u5236\u7d22\u5f15\u7684\u5b57\u6bb5\uff08\u5c31\u50cfSolr\u4e2d\u7684\u5927\u591a\u6570\u5b57\u6bb5\u4e00\u6837\uff09\uff1b\u5982\u679c\u8981\u7f16\u5236\u7d22\u5f15\u7684\u6587\u6863\u5305\u542b\u6620\u5c04\u4e2d\u672a\u5b9a\u4e49\u7684\u5b57\u6bb5\uff0c\u5219\u65e0\u6cd5\u7f16\u5236\u7d22\u5f15\u3002\n\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ec4\u4ef6\u6a21\u677f\u521b\u5efa\u7d22\u5f15\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u4e0d\u540c\u7684\u7ec4\u4ef6\u6a21\u677f\u53ef\u80fd\u5404\u81ea\u5b9a\u4e49\uff1a\n\u7136\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e09\u4e2a\u6a21\u677f\u521b\u5efa\u7d22\u5f15\u6a21\u677f\uff0c\u5c06\u5b83\u4eec\u7684\u7ec4\u5408\u914d\u7f6e\u5e94\u7528\u4e8e\u65b0\u7d22\u5f15\u3002\nElasticsearch\u548cSolr\u5177\u6709\u7c7b\u4f3c\u7684\u6807\u8bb0\u5316\u5668\u548c\u5206\u6790\u5668\uff0c\u4f46\u5bf9\u6a21\u5f0f\u7684\u5b9a\u4e49\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u81ea\u5df1\u7684\u7d22\u5f15\u884c\u4e3a\u3002\n&lt\uff1b\u5b57\u6bb5\u540d=&#34\uff1b\u54c1\u724c&#34\uff1b\u7c7b\u578b=&#34\uff1b\u7b80\u5355\u7684\u6587\u5b57&#34\uff1b\u7d22\u5f15=&#34\uff1b\u6b63\u786e&#34\uff1b\u5b58\u50a8=&#34\uff1b\u5047&#34\uff1b\u5fc5\u9700=&#34\uff1b\u5047&#34\uff1b\u591a\u503c=&#34\uff1b\u6b63\u786e&#34/&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u5b57\u6bb5\u7c7b\u578b\u540d\u79f0=&#34\uff1b\u7b80\u5355\u7684\u6587\u5b57&#34\uff1b\u7b49\u7ea7=&#34\uff1b\u7d22\u5c14\u3002\u6587\u672c\u5b57\u6bb5\u548c#34\uff1b\u4f4d\u7f6e\u589e\u91cf\u5dee\u8ddd=&#34\uff1b100&#34;&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u5206\u6790\u4eea&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6807\u8bb0\u5668\u7c7b=&#34\uff1b\u7d22\u5c14\u3002WhitespaceTokenizerFactory&#34/&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u8fc7\u6ee4\u7b49\u7ea7=&#34\uff1b\u7d22\u5c14\u3002\u5c0f\u5199\u5b57\u6bcdfilterFactory&#34/&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u8fc7\u6ee4\u7b49\u7ea7=&#34\uff1b\u7d22\u5c14\u3002ASCIIFoldingFilterFactory&#34/&gt&lt/\u5206\u6790\u4eea&gt&lt/fieldType&gt\uff1b\n{&#34\uff1b\u8bbe\u7f6e&#34\uff1b\uff1a{&#34\uff1b\u7b80\u5355\u6587\u672c&#34\uff1b{&#34\uff1b\u6807\u8bb0\u5668&#34\uff1b\uff1a&#34\uff1b\u6807\u51c6&#34\uff1b&#34\uff1b\u8fc7\u6ee4\u5668&#34\uff1b[&#34\uff1b\u5c0f\u5199&#34\uff1b&#34\uff1b&#&#34;\u6620\u5c04&#34\uff1b\uff1a{&#34\uff1b\u52a8\u6001&#34\uff1b\uff1a&#34\uff1b\u4e25\u683c&#34\uff1b&#34\uff1b\u5c5e\u6027&#34\uff1b\uff1a{&#34\uff1b\u54c1\u724c&#34\uff1b{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u6587\u672c&#34\uff1b}\n\u8981\u6c42\u5b57\u6bb5\u7531\u5b57\u6bb5\u540d\u663e\u5f0f\u5b9a\u4e49\uff0c\u6216\u4f5c\u4e3a\u52a8\u6001\u5b57\u6bb5\u5b9a\u4e49\uff0c\u4f8b\u5982title-*\u3002\n\u5bf9\u4e8e\u5927\u591a\u6570\u67e5\u8be2\uff0cSolr\u548cElasticsearch\u4e4b\u95f4\u6709\u76f4\u63a5\u7b49\u4ef7\u7269\uff0c\u4f46\u901a\u5e38\u5177\u6709\u4e0d\u540c\u7684\u6807\u7b7e\u548c\u67e5\u8be2\u7ed3\u6784\uff1b\n\u83b7\u53d6/\u641c\u7d22{&#34\uff1b\u67e5\u8be2&#34\uff1b{&#34\uff1b\u5e03\u5c14&#34\uff1b{&#34\uff1b\u5fc5\u987b&#34\uff1b[{&#34\uff1b\u5339\u914d&#34\uff1b{&#34\uff1b\u5934\u8854&#34\uff1b\uff1a&&#34\uff1b\u641c\u7d22&#34\uff1b}\uff0c{&#34\uff1b\u5339\u914d&#34\uff1b\uff1a{&#34\uff1b\u5185\u5bb9&#34\uff1b\uff1a&#34\uff1b\u5f39\u6027\u641c\u7d22&#34\uff1b}]&#34;\u8fc7\u6ee4\u5668&#34\uff1b\uff1a[{&#34\uff1b\u4efb\u671f&#34\uff1b\uff1a{&#34\uff1b\u72b6\u6001&#34\uff1b\uff1a&#34\uff1b\u51fa\u7248&#34\uff1b}\uff0c{&#34\uff1b\u8303\u56f4&#34\uff1b\uff1a{&#34\uff1b\u51fa\u7248\u65e5\u671f&#34\uff1b\uff1a{&#34\uff1bgte&#34\uff1b\uff1a&#34\uff1b2015-01-01&#34\uff1b}\n\u83b7\u53d6/\u641c\u7d22{&#34\uff1b#\u6e90&#34\uff1b\uff1a{&#34\uff1b\u5305\u62ec&#34\uff1b\uff1a[&#34\uff1b\u540d\u79f0&#34\uff1b&#34\uff1bid&#34\uff1b]&#34;\u67e5\u8be2&#34\uff1b\uff1a{&#34\uff1b\u672f\u8bed&#34\uff1b\uff1a{&#34\uff1b\u7528\u6237&#34\uff1b\uff1a&#34\uff1bkimchy&#34\uff1b}\nElasticsearch\u652f\u6301\u5c06\u5bf9\u8c61\u5b57\u6bb5\u6620\u5c04\u4e3a\u5d4c\u5957\u6570\u636e\u7c7b\u578b\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6620\u5c04\u7684\u5bf9\u8c61\u6355\u83b7\u7ed3\u6784\u5316\u6570\u636e\uff0c\u53ef\u4ee5\u5355\u72ec\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u6bb5\u96c6\u5408\u67e5\u8be2\u3002\n\u653e\u7f6emy-index-000001{&#34\uff1b\u6620\u5c04&#34\uff1b{&#34\uff1b\u5c5e\u6027&#34\uff1b{&#34\uff1b\u7528\u6237&#34\uff1b{&#34\uff1b\u7c7b\u578b&#34\uff1b&#34\uff1b\u5d4c\u5957&#34\uff1b&#\u5c5e\u6027&#34\uff1b{&#34\uff1b\u7b2c\u4e00&&&#34\uff1b#\u7c7b\u578b&&&#34\uff1b#&#34;\u6700\u540e&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u6587\u672c&#34\uff1b}&#34;\u7b2c34\u7ec4\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u5173\u952e\u5b57&#34\uff1b}}}\n\u628amy-index-000001/#u doc/1{&#34\uff1b\u7ec4&#34\uff1b&#34\uff1b\u7c89\u4e1d&#34\uff1b&#34\uff1b\u7528\u6237&#34\uff1b[{&#34\uff1b\u7b2c\u4e00&#34\uff1b&#34\uff1b\u7ea6\u7ff0&&#34\uff1b&#34\uff1b&#\u6700\u540e&#34\uff1b&&#\uff0c{&#34\uff1b\u7b2c\u4e00&#34\uff1b&#34\uff1b\u7231\u4e3d\u4e1d&#34\uff1b&#34\uff1b\u6700\u540e&#34\uff1b&#34\uff1b\u6000\u7279&#34\uff1b}\n//\u5339\u914d\u5177\u6709\u5339\u914d//first\u6216last of&#34\u7684\u4efb\u4f55\u7528\u6237\u5bf9\u8c61\u7684\u6587\u6863\uff1b\u7f57\u4f2f\u7279&#34\uff1b\u83b7\u53d6my-index-000001/#u search{&#34\uff1bquery&#34\uff1b{&#34\uff1bbool&#34\uff1b{&#34\uff1bmust&#34\uff1b\uff1a[{&#34\uff1bmatch&#34\uff1buser.&&&#34\uff1b&&&#34\uff1bRobert&#34\uff1b}}\u5339\u914d\u5177\u6709\u5355\u4e2a\u7528\u6237\u5bf9\u8c61\u7684\u6587\u6863\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5339\u914d//first of&#34\uff1b\u7b80&#34**\u548c**\u7b2c34\u9879\u4e2d\u7684\u6700\u540e\u4e00\u9879\uff1b\u53f2\u5bc6\u65af\u548c#34\uff1b\u83b7\u53d6my-index-000001/#u search{&#34\uff1bquery&#34\uff1b{&#34\uff1bbool&#34\uff1b{&#34\uff1bmust&#34\uff1b\uff1a[{&#34\uff1bmatch&#34\uff1buser.first&#34\uff1b&#Jane&#34\uff1b}\uff0c{&#34\uff1b\u5339\u914d&#34\uff1b\uff1a{&#34\uff1b\u7528\u6237\u3002\u6700\u540e&#34\uff1b\uff1a&#34\uff1b\u53f2\u5bc6\u65af&#34\uff1b}}}\n\u6211\u4eec\u5411Elasticsearch\u7684\u8fc1\u79fb\u89e3\u9501\u4e86\u4e00\u4e9b\u5411\u91cf\u641c\u7d22\u9009\u9879\uff0c\u901a\u8fc7\u5c06\u5411\u91cf\u7f16\u7801\u4e3a\u4e8c\u8fdb\u5236doc_\u503c\uff0c\u53ef\u4ee5\u5c06\u5b57\u6bb5\u6620\u5c04\u4e3a\u5bc6\u96c6\u548c\u7a00\u758f\u5411\u91cf\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0clucene\uff08\u4ee5\u53caElasticsearch\u548cSolr\uff09\u6b63\u5728\u8fd9\u4e00\u9886\u57df\u6dfb\u52a0\u529f\u80fd\uff0c\u5305\u62ecSolr\u6700\u8fd1\u5bf9HNSW\u5411\u91cf\u641c\u7d22\u7684\u652f\u6301\u3002\n\u7ef4\u62a4\u6587\u6863\u548cAPI\u53c2\u8003\uff0c\u4ee5\u53ca\u6d3b\u8dc3\u7684\u5728\u7ebf\u793e\u533a\u3002\u5c3d\u7ba1\u6211\u4eec\u975e\u5e38\u611f\u8c22Solr\u548cZookeeper\u7684Apache\u90ae\u4ef6\u5217\u8868\uff0c\u4f46\u62e5\u6709\u5728\u7ebf\u8bba\u575b\u662f\u4e00\u79cd\u80dc\u5229\u3002\n\u5982\u679c\u60a8\u60f3\u8981\u4e00\u4e2a\u975e\u7ed3\u6784\u5316\u641c\u7d22\uff0c\u53ef\u4ee5\u5c06\u4efb\u4f55\u5185\u5bb9\u653e\u5165\u7d22\u5f15\u4e2d\uff0c\u90a3\u4e48\u52a8\u6001\u5b57\u6bb5\u662f\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4f46\u662f\u5982\u679c\u60a8\u60f3\u8981\u4e00\u4e2a\u6709\u4fdd\u8bc1\u5b57\u6bb5\u7684\u7ed3\u6784\u5316\u641c\u7d22\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u7d22\u5f15\u4e4b\u524d\u8bbe\u7f6e\u5b83\u3002\nElasticsearch\u65e0\u6cd5\u6307\u5b9a\u6240\u6709\u6587\u6863\u90fd\u9700\u8981\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u6bb5\uff0c\u6216\u8005\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u6bb5\u5fc5\u987b\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u56e0\u4e3a\u60a8\u9700\u8981\u4e00\u4e2a\u5e26\u6709\u6545\u969c\u5904\u7406\u5668\u7684\u6444\u53d6\u7ba1\u9053\u3002\n\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff08\u800c\u4e14\u53ef\u80fd\u662f\uff09\uff0c\u4f46\u4eceSolr\u7684\u89d2\u5ea6\u6765\u770b\u3002xml\u6a21\u5f0f\u5230Elasticsearch&#39\uff1b\u5728JSON\u6a21\u677f\u4e2d\uff0c\u60a8\u5fc5\u987b\u4e3a\u6240\u6709\u6709\u89c1\u5730\u7684\u6ce8\u91ca\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u5bb6\uff0c\u6bd4\u5982\u6211\u4eec\u4e0d\u60f3\u4f7f\u7528\u5c0f\u5199\u7528\u6237\u540d\u7684\u539f\u56e0\u3002\n\u53e6\u4e00\u4ef6\u5c0f\u4e8b\u60c5\uff0c\u4f46\u6765\u81eaSolr\uff0c\u5728Solr\u4e2d\u5f88\u5bb9\u6613\u83b7\u5f97\u4e00\u4e2a\u56fe\uff0c\u5e76\u67e5\u770b\u54ea\u4e9b\u8282\u70b9\u5728\u54ea\u4e2a\u788e\u7247\u4e0a\u4ee5\u53ca\u5b83\u4eec\u7684\u5f53\u524d\u72b6\u6001\uff0cElasticsearch\u9700\u8981\u4e00\u79cd\u4e0d\u540c\u7684\u601d\u7ef4\u65b9\u5f0f\u6765\u8c03\u8bd5\u3002\u4f8b\u5982\uff0c\u5982\u679cElasticsearch\u96c6\u7fa4\u4e3a\u9ec4\u8272\uff0c\u5219\u5fc5\u987b\u5728\u6ca1\u6709\u6f02\u4eae\u56fe\u7247\u7684\u60c5\u51b5\u4e0b\u8c03\u8bd5\u5b83\u3002\n\u62bd\u8c61\u7684\u5947\u5999\u4e4b\u5904\u4f7finfra\u8d85\u7ea7\u5bb9\u6613\u8bbe\u7f6e\uff0c\u8fd9\u4f7f\u5f97\u786e\u5b9a\u54ea\u4e9b\u8282\u70b9\u6216\u5b9e\u4f8b\u51fa\u73b0\u6545\u969c\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u7528\u8282\u70b9\u548c\u7d22\u5f15\u7684\u5ea6\u91cf\u8bbe\u7f6e\u4e86\u4eea\u8868\u677f\uff0c\u4ee5\u4fbf\u80fd\u591f\u53d1\u73b0\u5f02\u5e38\u503c\u3002\n\u60a8\u53ef\u4ee5\u5c06\u989d\u5916\u7684\u6587\u4ef6\uff08\u4f8b\u5982\u5305\u542b\u540c\u4e49\u8bcd\u7684\u6587\u4ef6\uff09\u4e0a\u8f7d\u5230\u96c6\u5408\uff0c\u5e76\u6309id\u5f15\u7528\u5b83\u4eec\u3002\u4f46\u662f\uff0c\u6b64id\u662f\u5728\u4e0a\u8f7d\u65f6\u8bbe\u7f6e\u7684\uff0c\u4e0d\u53ef\u66f4\u6539\u6216\u6307\u5b9a\u3002\n\u8fd9\u4e9b\u662f\u4ece\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\u8fc1\u79fb\u5230Elasticsearch\u6846\u67b6\u4e2d\u5438\u53d6\u7684\u7ecf\u9a8c\u6559\u8bad\u3002\u6211\u4eec\u73b0\u5728\u6b63\u5728\u52aa\u529b\u5c06\u6211\u4eec\u89c4\u6a21\u66f4\u5927\u3001\u8bbe\u7f6e\u66f4\u5b8c\u5584\u7684\u670d\u52a1\uff0c\u4ee5\u53ca\u5b83\u4eec\u6574\u65747\u5e74\u7684\u6a21\u5f0f\uff0c\u8f6c\u53d8\u4e3aElasticsearch\uff01\n\u4ece\u6700\u521d\u7684\u8fc1\u79fb\u5f00\u59cb\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u4e0d\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u4ed4\u7ec6\u8bb0\u5f55\u8bbe\u7f6e\u7684\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u3002\u6211\u4eec\u4e5f\u611f\u8c22\u79fb\u6c11\u4e4b\u65c5\u6559\u4f1a\u6211\u4eec\u7684\u6240\u6709\u77e5\u8bc6\u3002\n\u56f4\u7ed5\u6211\u4eec\u8fc1\u79fb\u7684\u53e6\u4e00\u4e2a\u5927\u95ee\u9898\u662fElasticsearch\u548cOpenSearch\u4ea7\u54c1\u7684\u53d1\u5c55\u548c\u5dee\u5f02\u3002\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u662fElasticsearch 7.10\uff0c\u80fd\u591f\u8ffd\u8e2a\u4efb\u4f55\u4e00\u4e2a\u6d41\uff0c\u5e76\u5c06\u7ee7\u7eed\u5173\u6ce8\u4ed6\u4eec\u5404\u81ea\u7684\u641c\u7d22\u529f\u80fd\u548c\u6258\u7ba1\u9009\u9879\u3002\nBrandon Janson\uff0cNic Laver\uff0cYiwei Han\uff0cStuart Cam\uff1a\u4ed6\u5728\u6211\u4eec\u7684\u641c\u7d22\u5e73\u53f0\u4e0a\u5de5\u4f5c\uff0c\u8fc1\u79fb\u5173\u952e\u7684\u641c\u7d22\u7ec4\u4ef6\u3002", "note_en": "After realizing that it took a literal team of engineers to keep our self managed Solr infrastructure up to date and working, we are moving to a managed search solution \u2014 Elasticsearch!\n More specifically, we are migrating to Elasticsearch, which is hosted and managed by  Amazon Web Services (AWS). Both search engines have a lot of similarities, but do require some translation of terminology, patterns and thinking.\n Over 2021, we have migrated one of our smaller search indexes fully to Elasticsearch and are currently in the process of using Elasticsearch for some new search domains. The journey so far has taught us a lot about the key differences between Solr and Elastic, as well as the nuances that people may not be aware of unless they go through a similar migration.\n We have put together this blog post to help others who are considering such an exercise.\n  We have been using Solr since 2014 at Canva when it was easily the most established option with the most active community. Now, in 2022, Elasticsearch is no longer the unexciting and somewhat unreliable new kid on the block, but has proven itself to be a reliable search engine with a strong developer community and support.\n   It is now easier to hire engineers with Elasticsearch experience, and harder to hire people familiar with Solr.\n  The following sections provide side by side comparisons of how we experienced Solr and Elasticsearch, what we like and struggle with from each, and the things we wish we knew about Elasticsearch before the migration. We hope it will benefit teams looking to do the same thing as we did.\n     A key difference in how we (as engineers) interact with the technologies is how the infrastructure is managed. Here are aspects to consider.\n        Must be managed separately to Solr. If you\u2019re managing Solr, you must also manage  Zookeeper.\n     Autoscaling can add nodes to maintain minimum replication, but does not support balancing across AZs (AWS availability zones).\n The autoscaling does not balance replicas to prevent dangerous topologies. We observed several undesirable behaviours of the autoscaling.\n  Two nodes being assigned as replicas of the same shard resulting in a large load on the survivor if one crash, often also taking out the survivor.\n Adding multiple nodes as replicas to a single leader concurrently causing the leader to try and distribute its data to both new followers at once. This took down the leader occasionally.\n We have some self-managed scripts to ensure that replicas of a shard are in distinct nodes and across AZs, but this is not out of the box.\n  Shards are placed on nodes based on a replication value, defined on Index creation, or specified by an index template.\n    solrconfig.xml, which contains settings, such as custom default handers, zookeeper timeouts, and auto commit intervals.\n  You can create indexes using an  index template with default values for these settings, but changing the template does not change the configuration of live indexes. To change the configuration of a live index, you must apply settings or mappings directly to that index.\n  The way Elasticsearch handles the configuration of an index is a big change from Solr. Understanding what  index templates are and how they can be used helps translate the Solr configuration files to the Elasticsearch context.\n Index Templates contain the settings and the mappings that define an index. They specify an index pattern (such as  test-*) that is applied to all new indexes matching this pattern.\n Mappings define fields and the analyzers/tokenizers they should use. Mappings can also be labeled as  &#34;dynamic&#34;: &#34;strict&#34;, which requires you to explicitly add fields that are to be indexed to the mapping (like most fields in Solr); if a document to be indexed contains a field that is not defined in the mapping, it will fail to be indexed.\n  You can also create index templates using component templates. For example, different component templates might each define:\n  You could then create an index template using these three templates, applying their combined configuration to new indexes.\n  Elasticsearch and Solr have similar tokenizers and analyzers but define the schema differently and have their own indexing behaviours.\n  &lt;field name=&#34;brand&#34; type=&#34;simple_text&#34; indexed=&#34;true&#34; stored=&#34;false&#34; required=&#34;false&#34; multiValued=&#34;true&#34;/&gt; ... &lt;fieldType name=&#34;simple_text&#34; class=&#34;solr.TextField&#34;  positionIncrementGap=&#34;100&#34;&gt;  &lt;analyzer&gt;  &lt;tokenizer class=&#34;solr.WhitespaceTokenizerFactory&#34;/&gt;  &lt;filter class=&#34;solr.LowerCaseFilterFactory&#34;/&gt;  &lt;filter class=&#34;solr.ASCIIFoldingFilterFactory&#34;/&gt;  &lt;/analyzer&gt;  &lt;/fieldType&gt;\n  {  &#34;settings&#34;: {  &#34;simple_text&#34;: {  &#34;tokenizer&#34;: &#34;standard&#34;,  &#34;filter&#34;: [  &#34;lowercase&#34;,  &#34;asciifolding&#34;  ]  } ...  },  &#34;mappings&#34;: {  &#34;dynamic&#34;: &#34;strict&#34;,  &#34;properties&#34;: {  &#34;brand&#34;: {  &#34;type&#34;: &#34;text&#34;,  }  } ...  } }\n   Requires fields to be explicitly defined by a field name, or as a dynamic field, eg.  title-*.\n    For most queries, there are direct equivalents between Solr and Elasticsearch, but typically with different labels and query structure;\n                  GET /_search  {   &#34;query&#34;: {   &#34;bool&#34;: {   &#34;must&#34;: [   { &#34;match&#34;: { &#34;title&#34;: &#34;Search&#34;}},   { &#34;match&#34;: { &#34;content&#34;: &#34;Elasticsearch&#34; }}   ],   &#34;filter&#34;: [   { &#34;term&#34;: { &#34;status&#34;: &#34;published&#34; }},   { &#34;range&#34;: { &#34;publish_date&#34;: { &#34;gte&#34;: &#34;2015-01-01&#34;}}}   ]   }   }  }\n     GET /_search  {   &#34;_source&#34;: {   &#34;includes&#34;: [ &#34;name&#34;, &#34;id&#34; ]  },   &#34;query&#34; : {   &#34;term&#34; : { &#34;user&#34; : &#34;kimchy&#34; }   }  }\n    Elasticsearch supports mapping object fields as  nested data types. Objects mapped this way capture structured data, and can be queried both individually or as a collection of fields.\n  PUT my-index-000001 {  &#34;mappings&#34;: {  &#34;properties&#34;: {  &#34;user&#34;: {  &#34;type&#34;: &#34;nested&#34;,  &#34;properties&#34;: {  &#34;first&#34;: {  &#34;type&#34;: &#34;text&#34;  },  &#34;last&#34;: {  &#34;type&#34;: &#34;text&#34;  }  }   },  &#34;group&#34;: {  &#34;type&#34;: &#34;keyword&#34;  }  }  } }\n  PUT my-index-000001/_doc/1 {  &#34;group&#34; : &#34;fans&#34;,  &#34;user&#34; : [   {  &#34;first&#34; : &#34;John&#34;,  &#34;last&#34; : &#34;Smith&#34;  },  {  &#34;first&#34; : &#34;Alice&#34;,  &#34;last&#34; : &#34;White&#34;  }  ] }\n  // match documents that have any user objects that match  // first or last of &#34;Robert&#34; GET my-index-000001/_search {  &#34;query&#34;: {  &#34;bool&#34;: {  &#34;must&#34;: [  { &#34;match&#34;: { &#34;user.*&#34;: &#34;Robert&#34; }}  ]  }  } } // match documents that have individual user objects that match  // first of &#34;Jane&#34; **and** last of &#34;Smith&#34; GET my-index-000001/_search {  &#34;query&#34;: {  &#34;bool&#34;: {  &#34;must&#34;: [  { &#34;match&#34;: { &#34;user.first&#34;: &#34;Jane&#34; }},  { &#34;match&#34;: { &#34;user.last&#34;: &#34;Smith&#34; }}  ]  }  } }\n  Our migration to Elasticsearch unlocks some vector search options with the ability to map fields as dense and sparse vectors, by encoding vectors as binary doc_values. It is worth noting that  lucene (and hence both Elasticsearch and Solr) is adding features in this space, including  Solr\u2019s recent support for HNSW Vector search.\n  Maintained docs and API references, as well as an active online community. As much as we appreciate the Apache mailing lists for Solr and Zookeeper, having online forums is a win.\n   Dynamic fields are great if you want an unstructured search that lets you put anything into an index, but if you instead want a structured search with guaranteed fields, you must set this up before indexing.\n Elasticsearch doesn\u2019t have a way to specify that all documents require a given field, or that a given field must have only one value, for that you would need an ingest pipeline with a fail processor.\n  This seems like a small thing (and it probably is) but when going from Solr\u2019s  .xml schema to Elasticsearch&#39;s JSON templates, you must find a new home for all your insightful annotations, such as reasons why we don\u2019t want to lowercase  username.\n  Another small thing, but coming from Solr, where it easy to get a graph and see which nodes are on which shard and their current status, Elasticsearch requires a different way of thinking to debug. If an Elasticsearch cluster is yellow, for example, you must debug this without the pretty picture.\n The wonder of abstraction that makes the infra super easy to set up makes it  harder to work out which node or instances are failing. We, fortunately, have had success in setting up dashboard with metrics by node and by index so that outliers can be spotted.\n  You can upload extra files, such as those that contain synonyms, to a collection and reference them by  id. This  id, however, is set on upload and isn\u2019t mutable, or specifiable.\n  These are the lessons learnt from migrating the first of our search engines to the Elasticsearch framework. We are now tackling bringing our larger and more set up services, with their full 7 years of patterns, over to Elasticsearch!\n From our initial migrations, we\u2019re excited to not need to set up a zookeeper with careful logging settings. We also appreciate all the learnings that our migration journey has taught us.\n The remaining big question surrounding our migration is the development and divergence of offerings from Elasticsearch and OpenSearch. We are currently on  Elasticsearch 7.10, with the ability to pursue either stream, and will continue to watch their respective offerings carefully with respect to search features and managed options with interest.\n   Brandon Janson,  Nic Laver,  Yiwei Han,  Stuart Cam: who worked on our search platform, migrating key search components.", "posttime": "2022-02-15 16:52:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fc1\u79fb,solr", "title": "\u4eceSolr\u8fc1\u79fb\u5230Elasticsearch\u53ca\u5176\u5dee\u5f02", "title_en": "Migrating from Solr to Elasticsearch, and their differences", "transed": 1, "url": "https://canvatechblog.com/migrating-from-solr-to-elasticsearch-and-their-differences-c08863268c68?gi=355f870d2f0a", "via": "", "real_tags": ["\u8fc1\u79fb", "solr"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073476, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u4e2a\u62e5\u6709\u5982\u6b64\u591a\u4e13\u6709\u8bbe\u5907\u548c\u5355\u529f\u80fd\u673a\u5668\u7684\u5e02\u573a\u4e0a\uff0c\u624b\u5934\u6709\u6811\u8393Pi\u8fd9\u6837\u7684\u591a\u529f\u80fd\u8bbe\u5907\u53ef\u80fd\u4f1a\u6709\u5f88\u5927\u5e2e\u52a9\u3002\u6ca1\u6709\u4eba\u6bd4\u52a0\u91cc\u00b7\u514b\u7f57\u592b\u7279\u66f4\u6e05\u695a\u8fd9\u4e00\u70b9\uff0c\u4ed6\u6b63\u5728\u7528\u6811\u8393\u76ae4\u548c\u6811\u8393\u76aeHQ\u76f8\u673a\u4ece\u4ed6\u7684\u4e09\u773c\u663e\u5fae\u955c\u4e2d\u6355\u6349\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u753b\u9762\u3002\u514b\u7f57\u592b\u7279\u8bf4\uff0c\u73b0\u6210\u7684\u76f8\u673a\u975e\u5e38\u6602\u8d35\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8986\u76c6\u5b50\u76aeHQ\u76f8\u673a\u662f\u4e00\u79cd\u66f4\u5b9e\u60e0\u3001\u66f4\u5177\u53ef\u6bd4\u6027\u7684\u66ff\u4ee3\u54c1\u3002\n\u52a0\u91cc\u00b7\u514b\u7f57\u592b\u7279\u73b0\u5728\u4e13\u653b\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u4f46\u5bf9\u751f\u7269\u5b66\u4e00\u76f4\u6709\u7740\u6d53\u539a\u7684\u5174\u8da3\u3002\u514b\u7f57\u592b\u7279\u89e3\u91ca\u8bf4\uff0c\u4ed6\u5bf9\u5fae\u751f\u7269\u5b66\u7684\u63a2\u7d22\u59cb\u4e8e\u5b69\u63d0\u65f6\u4ee3\uff0c\u5f53\u65f6\u4ed6\u7956\u7236\u9001\u7ed9\u4ed6\u4e00\u53f0\u65e7\u663e\u5fae\u955c\u3002\u5982\u4eca\uff0c\u514b\u7f57\u592b\u7279\u62e5\u6709\u4e00\u79cd\u529f\u80fd\u66f4\u5f3a\u7684\u4e09\u76ee\u663e\u5fae\u955c\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u67e5\u770b\u6807\u672c\uff0c\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u6807\u672c\u3002\n\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u514b\u7f57\u592b\u7279\u4f7f\u7528\u6811\u8393\u76ae4\u5904\u7406\u6765\u81eaHQ\u6444\u50cf\u5934\u6a21\u5757\u7684\u8f93\u5165\uff0c\u8be5\u6a21\u5757\u901a\u8fc7C\u652f\u67b6\u8fde\u63a5\u5230\u663e\u5fae\u955c\u3002Pi 4\u6b63\u5728\u8fd0\u884c\u4e00\u4e2aGUI\u754c\u9762\u6765\u63a7\u5236\u6444\u50cf\u5934\uff0c\u5e76\u5c06\u89c6\u9891\u6587\u4ef6\u8f6c\u6362\u4e3a\u66f4\u517c\u5bb9\u7684\u683c\u5f0f\u3002mp4\u683c\u5f0f\u3002\u8fd9\u662f\u7531\u6811\u8393\u76ae4\u63d0\u4f9b\u7684\u989d\u5916\u80fd\u91cf\u5b9e\u73b0\u7684\u3002\n\u514b\u7f57\u592b\u7279\u8ba1\u7b97\u51fa\u76f8\u673a\u603b\u6295\u8d44\u7ea6\u4e3a115\u7f8e\u5143\uff0885\u82f1\u9551\uff09\uff0c\u4e0d\u8003\u8651Pi\u6216\u4e09\u76ee\u663e\u5fae\u955c\u7684\u6210\u672c\u3002\u6700\u7ec8\uff0c\u4ed6\u5b9a\u5236\u7684\u76f8\u673a\u8bbe\u5907\u4ee5\u6bcf\u79d230\u5e27\u7684\u901f\u5ea6\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u56fe\u50cf\u548c\u9ad8\u6e05\u89c6\u9891\u3002\u73b0\u6210\u7684\u66ff\u4ee3\u54c1\u8d77\u4ef7\u7ea6\u4e3a350\u82f1\u9551\uff08470\u7f8e\u5143\uff09\uff0c\u4ec5\u63d0\u4f9b\u7ea610 fps\u3002\n\u672c\u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u4ee3\u7801\u662f\u7528Python\u7f16\u5199\u7684\uff0c\u662f\u4f9b\u7528\u6237\u63a2\u7d22\u7684\u5f00\u6e90\u4ee3\u7801\u3002\u514b\u7f57\u592b\u7279\u548c#39\uff1bs\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528Python\u548ctKinter GUI\u6846\u67b6\u6784\u5efa\u7684\u3002\u514b\u7f57\u592b\u7279\u521b\u5efa\u4e86\u4e00\u4e2a\u7531\u4e94\u4e2a\u6309\u94ae\u7ec4\u6210\u7684\u7b80\u5355\u7528\u6237\u754c\u9762\uff0c\u53ef\u4ee5\u63a7\u5236\u76f8\u673a\u7684\u5f00/\u5173\u3001\u62cd\u7167\u548c\u5f00\u59cb/\u505c\u6b62\u5f55\u5236\u3002\n\u5982\u679c\u4f60\u60f3\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u8fd9\u4e2aRaspberry Pi\u9879\u76ee\uff0c\u8bf7\u8bbf\u95eeCroft\u7684GitHub\u9875\u9762\uff0c\u7559\u610f\u672a\u6765\u7684\u66f4\u65b0\u3002\u514b\u7f57\u592b\u7279\u8868\u793a\uff0c\u8ba1\u5212\u4e3aISO\u8bbe\u7f6e\u3001\u5ef6\u65f6\u529f\u80fd\u548c\u5e27\u901f\u7387\u8c03\u6574\u7b49\u6dfb\u52a0GUI\u63a7\u4ef6\u3002\u514b\u7f57\u592b\u7279\u4e5f\u5728\u8003\u8651\u589e\u52a0\u4e00\u4e2a\u6d41\u5a92\u4f53\u9009\u9879\uff0c\u4ee5\u4fbf\u89c6\u9891\u901a\u8bdd\u4e2d\u5206\u4eab\u89c6\u9891\u7247\u6bb5\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728YouTube\u4e0a\u67e5\u770b\u4ed6\u7684\u5b98\u65b9\u9891\u9053\uff0c\u770b\u770b\u4ed6\u7684\u4e00\u4e9b\u5f88\u9177\u7684\u5fae\u89c2\u53d1\u73b0\u3002", "note_en": "In a market with so many proprietary devices and one-function machines, it can be a big help to have something versatile like a   Raspberry Pi on hand. No one knows that better than  Gary Croft who\u2019s using a  Raspberry Pi 4 with a   Raspberry Pi HQ Camera to capture impressive footage from his trinocular microscope. According to Croft, off-the-shelf cameras are notably expensive but the Raspberry Pi HQ Camera has proved to be a more affordable and comparable alternative.\n  Gary Croft specializes in computer science these days but has always had an affinity for biology. Croft explains, his foray into microbiology began as a child with an old microscope gifted to him as a child from his grandfather. Today, Croft has a more capable trinocular microscope designed to not only view specimens but also record them.\n   In this project, Croft is using a Raspberry Pi 4 to process input from the HQ camera module which is connected to the microscope via the C mount. The Pi 4 is running a GUI interface to control the camera as well as convert the video files to a more compatible .mp4 format. Something enabled by the extra power provided by the Raspberry Pi 4.\n   Croft calculates the total camera investment at around $115 (\u00a385) without factoring in the cost of the Pi or the trinocular microscope. In the end, his custom camera rig produces high-quality images and HD video at 30 fps. Off the shelf alternatives start at around \u00a3350 ($470) and only provide approximately 10 fps.\n  The code used in this project is written in Python and is open source for users to explore. Croft&#39;s solution was built using Python and the tKinter GUI framework. Croft created a simple user interface of five buttons which handle turning the camera on / off, take picture and start / stop recording.\n  If you want to get a closer look at this  Raspberry Pi project, head over to Croft\u2019s  GitHub page and keep an eye out for future updates. Croft indicated plans for additional GUI controls for things like ISO settings, time-lapse features and frame rate adjustment. Croft is also looking into adding a streaming option so that the footage can be shared in video calls. In the meantime, you can check out his official channel on  YouTube to see some of his cool microscopic findings.", "posttime": "2022-02-15 16:42:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,hq,pi", "title": "Raspberry Pi\u4ee5115\u7f8e\u5143\u7684\u4ef7\u683c\u901a\u8fc7HQ\u6444\u50cf\u5934\u6355\u6349\u5230\u5fae\u89c2\u5947\u89c2", "title_en": "Raspberry Pi Captures Microscopic Wonders with HQ Camera for $115", "transed": 1, "url": "https://www.tomshardware.com/news/raspberry-pi-hq-camera-microscope-project", "via": "", "real_tags": ["hq", "pi"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073475, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\uff08Securities and Exchange Commission\uff09\u4eca\u5929\u6307\u63a7BlockFi Lending LLC\uff08BlockFi\uff09\u672a\u80fd\u767b\u8bb0\u5176\u96f6\u552e\u52a0\u5bc6\u501f\u8d37\u4ea7\u54c1\u7684\u62a5\u4ef7\u548c\u9500\u552e\u3002\u5728\u8fd9\u4e00\u9996\u6b21\u540c\u7c7b\u8bc9\u8bbc\u4e2d\uff0cSEC\u8fd8\u6307\u63a7BlockFi\u8fdd\u53cd\u4e861940\u5e74\u300a\u6295\u8d44\u516c\u53f8\u6cd5\u300b\u7684\u6ce8\u518c\u89c4\u5b9a\u3002\u4e3a\u4e86\u89e3\u51b3SEC\u7684\u6307\u63a7\uff0cBlockFi\u540c\u610f\u652f\u4ed85000\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u505c\u6b62\u5176\u672a\u6ce8\u518c\u7684\u8d37\u6b3e\u4ea7\u54c1BlockFi\u5229\u606f\u8d26\u6237\uff08BIAs\uff09\u7684\u8981\u7ea6\u548c\u9500\u552e\uff0c\u5e76\u8bd5\u56fe\u572860\u5929\u5185\u4f7f\u5176\u4e1a\u52a1\u7b26\u5408\u300a\u6295\u8d44\u516c\u53f8\u6cd5\u300b\u7684\u89c4\u5b9a\u3002BlockFi\u7684\u6bcd\u516c\u53f8\u8fd8\u5ba3\u5e03\uff0c\u5b83\u6253\u7b97\u6839\u636e1933\u5e74\u7684\u300a\u8bc1\u5238\u6cd5\u300b\u6ce8\u518c\u4e00\u79cd\u65b0\u8d37\u6b3e\u4ea7\u54c1\u7684\u53d1\u884c\u548c\u9500\u552e\u3002\u5728\u4eca\u5929\u5ba3\u5e03\u7684\u5e73\u884c\u884c\u52a8\u4e2d\uff0cBlockFi\u540c\u610f\u541132\u4e2a\u5dde\u989d\u5916\u652f\u4ed85000\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u4ee5\u89e3\u51b3\u7c7b\u4f3c\u6307\u63a7\u3002\n&#34;\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6d89\u53ca\u52a0\u5bc6\u501f\u8d37\u5e73\u53f0\u7684\u6b64\u7c7b\u6848\u4f8b\uff1bSEC\u4e3b\u5e2d\u52a0\u91cc\u00b7\u6839\u65af\u52d2\u8bf4&#34;\u4eca\u5929\u7684\u548c\u89e3\u8868\u660e\uff0c\u52a0\u5bc6\u5e02\u573a\u5fc5\u987b\u9075\u5b88\u4e45\u7ecf\u8003\u9a8c\u7684\u8bc1\u5238\u6cd5\uff0c\u59821933\u5e74\u7684\u300a\u8bc1\u5238\u6cd5\u300b\u548c1940\u5e74\u7684\u300a\u6295\u8d44\u516c\u53f8\u6cd5\u300b\u3002\u8fd9\u8fdb\u4e00\u6b65\u8868\u660e\uff0c\u59d4\u5458\u4f1a\u613f\u610f\u4e0e\u52a0\u5bc6\u5e73\u53f0\u5408\u4f5c\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u5982\u4f55\u9075\u5b88\u8fd9\u4e9b\u6cd5\u5f8b\u3002\u6211\u8981\u611f\u8c22\u5e76\u8d5e\u626c\u6211\u4eec\u51fa\u8272\u7684SEC\u5de5\u4f5c\u4eba\u5458\u548c\u5dde\u76d1\u7ba1\u673a\u6784\u5728\u8fd9\u9879\u548c\u89e3\u534f\u8bae\u4e0a\u7684\u52aa\u529b\u4e0e\u5408\u4f5c&#34;\n&#34;\u63d0\u4f9bBlockFi\u2019s BIAs\u7b49\u8bc1\u5238\u7684\u52a0\u5bc6\u501f\u8d37\u5e73\u53f0\u5e94\u7acb\u5373\u6ce8\u610f\u4eca\u5929\u7684\u51b3\u8bae\uff0c\u5e76\u9075\u5b88\u8054\u90a6\u8bc1\u5238\u6cd5\u548c#34\uff1b\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u6267\u6cd5\u90e8\u95e8\u8d1f\u8d23\u4eba\u683c\u6bd4\u5c14\u00b7S\u00b7\u683c\u96f7\u74e6\u5c14\u8bf4&#34;\u9075\u5b88\u6211\u4eec\u7684\u6ce8\u518c\u548c\u62ab\u9732\u8981\u6c42\u5bf9\u4e8e\u4e3a\u6295\u8d44\u8005\u63d0\u4f9b\u5728\u52a0\u5bc6\u8d44\u4ea7\u9886\u57df\u505a\u51fa\u660e\u667a\u6295\u8d44\u51b3\u7b56\u6240\u9700\u7684\u4fe1\u606f\u548c\u900f\u660e\u5ea6\u81f3\u5173\u91cd\u8981&#34;\n\u6839\u636eSEC\u7684\u547d\u4ee4\uff0c\u4ece2019\u5e743\u67084\u65e5\u5230\u4eca\u5929\uff0cBlockFi\u5411\u516c\u4f17\u63d0\u4f9b\u5e76\u51fa\u552e\u4e86\u504f\u89c1\u3002\u901a\u8fc7\u504f\u89c1\uff0c\u6295\u8d44\u8005\u5c06\u52a0\u5bc6\u8d44\u4ea7\u501f\u7ed9BlockFi\uff0c\u4ee5\u6362\u53d6\u8be5\u516c\u53f8\u627f\u8bfa\u6bcf\u6708\u652f\u4ed8\u53ef\u53d8\u5229\u606f\u3002\u8be5\u547d\u4ee4\u8ba4\u5b9a\uff0cBIAs\u662f\u9002\u7528\u6cd5\u5f8b\u4e0b\u7684\u8bc1\u5238\uff0c\u56e0\u6b64\uff0c\u8be5\u516c\u53f8\u88ab\u8981\u6c42\u767b\u8bb0\u5176BIAs\u7684\u8981\u7ea6\u548c\u9500\u552e\uff0c\u4f46\u672a\u80fd\u767b\u8bb0\u6216\u6709\u8d44\u683c\u83b7\u5f97SEC\u767b\u8bb0\u8c41\u514d\u3002\u6b64\u5916\uff0c\u8be5\u547d\u4ee4\u8fd8\u53d1\u73b0\uff0cBlockFi\u4f5c\u4e3a\u4e00\u5bb6\u672a\u6ce8\u518c\u7684\u6295\u8d44\u516c\u53f8\u8fd0\u8425\u4e8618\u4e2a\u6708\u4ee5\u4e0a\uff0c\u56e0\u4e3a\u5b83\u53d1\u884c\u4e86\u8bc1\u5238\uff0c\u8fd8\u6301\u6709\u6295\u8d44\u8bc1\u5238\uff08\u4e0d\u5305\u62ec\u73b0\u91d1\uff09\u603b\u8d44\u4ea7\u768440%\u4ee5\u4e0a\uff0c\u5305\u62ec\u5411\u673a\u6784\u501f\u6b3e\u4eba\u63d0\u4f9b\u7684\u52a0\u5bc6\u8d44\u4ea7\u8d37\u6b3e\u3002\n\u8be5\u547d\u4ee4\u8fd8\u53d1\u73b0\uff0cBlockFi\u5728\u5176\u7f51\u7ad9\u4e0a\u5c31\u5176\u8d37\u6b3e\u7ec4\u5408\u548c\u8d37\u6b3e\u6d3b\u52a8\u7684\u98ce\u9669\u6c34\u5e73\u53d1\u8868\u4e86\u865a\u5047\u548c\u8bef\u5bfc\u6027\u58f0\u660e\uff0c\u6301\u7eed\u4e24\u5e74\u591a\u3002\n\u5728\u4e0d\u627f\u8ba4\u6216\u5426\u8ba4SEC\u8c03\u67e5\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\uff0cBlockFi\u540c\u610f\u4e86\u4e00\u9879\u505c\u6b62\u4ee4\uff0c\u7981\u6b62\u5176\u8fdd\u53cd\u300a\u8bc1\u5238\u6cd5\u300b\u7684\u6ce8\u518c\u548c\u53cd\u6b3a\u8bc8\u89c4\u5b9a\u4ee5\u53ca\u300a\u6295\u8d44\u516c\u53f8\u6cd5\u300b\u7684\u6ce8\u518c\u89c4\u5b9a\u3002BlockFi\u8fd8\u540c\u610f\u505c\u6b62\u5728\u7f8e\u56fd\u63d0\u4f9b\u6216\u9500\u552eBIAs\u3002\nSEC\u7684\u8c03\u67e5\u7531\u683c\u6e29\u00b7\u5229\u5361\u591a\uff08Gwen Licardo\uff09\u3001\u514b\u96f7\u683c\u00b7\u97e6\u5c14\u7279\uff08Craig Welter\uff09\u548c\u80af\u5c3c\u65af\u00b7\u6208\u7279\u5229\u5e03\uff08Kenneth Gottlieb\uff09\u5728\u5e03\u4f26\u7279\u00b7W\u00b7\u5a01\u5c14\u7eb3\uff08Brent W.Wilner\uff09\u7684\u534f\u52a9\u4e0b\u8fdb\u884c\uff0c\u7531\u96f6\u552e\u6218\u7565\u5de5\u4f5c\u7ec4\u7ec4\u957f\u54c8\u6069\u00b7L\u00b7\u91d1\uff08Hane L.Kim\uff09\u76d1\u7763\uff1b\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u7ebd\u7ea6\u5730\u533a\u529e\u4e8b\u5904\u526f\u533a\u57df\u4e3b\u4efb\u52b3\u62c9\u00b7\u6c99\u6d1b\u592b\u00b7\u6885\u62c9\u73ed\uff1b\u8fd8\u6709\u7f51\u7edc\u90e8\u95e8\u8d1f\u8d23\u4eba\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u5229\u7279\u66fc\u3002SEC\u611f\u8c22\u4f5c\u4e3a\u5317\u7f8e\u8bc1\u5238\u7ba1\u7406\u8005\u534f\u4f1a\u6210\u5458\u7684\u5dde\u76d1\u7ba1\u673a\u6784\u7684\u534f\u52a9\u3002\n\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\uff08SEC\uff09\u6295\u8d44\u8005\u6559\u80b2\u4e0e\u5021\u5bfc\u529e\u516c\u5ba4\uff08Office of Investor Education and Advocation and Enforcement\uff09\u7684\u96f6\u552e\u6218\u7565\u5de5\u4f5c\u7ec4\uff08Retail Strategy Task Force\uff09\u53d1\u5e03\u4e86\u4e00\u4efd\u5173\u4e8e\u52a0\u5bc6\u8d44\u4ea7\u8ba1\u606f\u8d26\u6237\u7684\u6295\u8d44\u8005\u516c\u544a\u3002\u6295\u8d44\u8005\u53ef\u4ee5\u5728Investor\u4e0a\u627e\u5230\u6709\u5173\u52a0\u5bc6\u8d44\u4ea7\u7684\u66f4\u591a\u4fe1\u606f\u3002\u5dde\u957f\u3002", "note_en": "The Securities and Exchange Commission today charged BlockFi Lending LLC (BlockFi) with failing to register the offers and sales of its retail crypto lending product. In this first-of-its-kind action, the SEC also charged BlockFi with violating the registration provisions of the Investment Company Act of 1940. To settle the SEC\u2019s charges, BlockFi agreed to pay a $50 million penalty, cease its unregistered offers and sales of the lending product, BlockFi Interest Accounts (BIAs), and attempt to bring its business within the provisions of the Investment Company Act within 60 days. BlockFi\u2019s parent company also announced that it intends to register under the Securities Act of 1933 the offer and sale of a new lending product. In parallel actions announced today, BlockFi agreed to pay an additional $50 million in fines to 32 states to settle similar charges.\n &#34;This is the first case of its kind with respect to crypto lending platforms,&#34; SEC Chair Gary Gensler said. &#34;Today\u2019s settlement makes clear that crypto markets must comply with time-tested securities laws, such as the Securities Act of 1933 and the Investment Company Act of 1940. It further demonstrates the Commission\u2019s willingness to work with crypto platforms to determine how they can come into compliance with those laws. I\u2019d like to thank and commend our remarkable SEC staff and state regulators for their efforts and collaboration on this settlement.&#34;\n &#34;Crypto lending platforms offering securities like BlockFi\u2019s BIAs should take immediate notice of today\u2019s resolution and come into compliance with the federal securities laws,&#34; said Gurbir S. Grewal, Director of the SEC\u2019s Division of Enforcement. &#34;Adherence to our registration and disclosure requirements is critical to providing investors with the information and transparency they need to make well-informed investment decisions in the crypto asset space.&#34;\n According to the SEC\u2019s order, from March 4, 2019 until today, BlockFi offered and sold BIAs to the public. Through BIAs, investors lent crypto assets to BlockFi in exchange for the company\u2019s promise to provide a variable monthly interest payment. The order finds that BIAs are securities under applicable law, and the company therefore was required to register its offers and sales of BIAs but failed to do so or to qualify for an exemption from SEC registration. Additionally, the order finds that BlockFi operated for more than 18 months as an unregistered investment company because it issued securities and also held more than 40 percent of its total assets, excluding cash, in investment securities, including loans of crypto assets to institutional borrowers.\n The order also finds that BlockFi made a false and misleading statement for more than two years on its website concerning the level of risk in its loan portfolio and lending activity.\n Without admitting or denying the SEC\u2019s findings, BlockFi agreed to a cease-and-desist order prohibiting it from violating the registration and antifraud provisions of the Securities Act and the registration provisions of the Investment Company Act. BlockFi also agreed to cease offering or selling BIAs in the United States.\n The SEC\u2019s investigation was conducted by Gwen Licardo, Craig Welter, and Kenneth Gottlieb, with assistance from Brent W. Wilner, under the supervision of Hane L. Kim, Chief of the Retail Strategy Task Force; Lara Shalov Mehraban, Associate Regional Director of the SEC\u2019s New York Regional Office; and Kristina Littman, Chief of the Cyber Unit. The SEC appreciates the assistance of state regulators that are members of the North American Securities Administrators Association.\n The SEC\u2019s Office of Investor Education and Advocacy and Enforcement\u2019s Retail Strategy Task Force has issued an  Investor Bulletin on Crypto Asset Interest-bearing Accounts. Investors can find additional information about crypto assets at Investor.gov.", "posttime": "2022-02-15 16:40:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "agrees,blockfi", "title": "Blockfi\u540c\u610f\u652f\u4ed81\u4ebf\u7f8e\u5143\u7f5a\u6b3e\u5e76\u8fdb\u884c\u6ce8\u518c", "title_en": "Blockfi agrees to pay $100M in penalties and pursue registration", "transed": 1, "url": "https://www.sec.gov/news/press-release/2022-26", "via": "", "real_tags": ["agrees", "blockfi"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073474, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u548c\u535a\u5ba2\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u5173\u4e8e\u6211\u7684\u4fe1\u606f\u3001\u8054\u7cfb\u65b9\u5f0f\u3001\u793e\u4ea4\u5a92\u4f53\u94fe\u63a5\u4ee5\u53ca\u6211\u7684\u535a\u5ba2\u5e16\u5b50", "note_en": "Welcome to my personal website and blog, here you can find some information about me, contact, social media links as well as    my blog posts", "posttime": "2022-02-15 16:39:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u535a\u5ba2", "title": "Python\u589e\u5f3a\u8ba1\u5212\u5373\u5c06\u4e3a\u60a8\u5e26\u6765\u7684Python\u7279\u6027", "title_en": "Upcoming Python features brought to you by Python Enhancement Proposals", "transed": 1, "url": "https://martinheinz.dev/blog/67", "via": "", "real_tags": ["python", "\u535a\u5ba2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073473, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u4e2a\u535a\u5ba2\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u6211\u7684\u81ea\u52a8\u97f3\u4e50\u521b\u4f5c\u65b9\u6cd5\uff0c\u5305\u62ec\u7406\u8bba\u3001\u7b97\u6cd5\u548cPython\u5305\u5b9e\u73b0ch0p1n\u3002\n\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u60f3\u8c61\u4f60\u628a\u4e00\u53ea\u732b\u653e\u5728\u94a2\u7434\u4e0a\uff0c\u968f\u673a\u6309\u4e0b\u952e\u6765\u4ea7\u751f\u97f3\u4e50\u3002\u56e0\u6b64\uff0c\u97f3\u4e50\u662f\u9884\u5148\u786e\u5b9a\u7684\u7b97\u6cd5\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u4f60\u77ac\u95f4\u7684\u60c5\u7eea\u6216\u4f5c\u66f2\u6280\u5de7\u7684\u7ed3\u679c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a\u81ea\u52a8\u5408\u6210\u3002\n\u81ea\u52a8\u4f5c\u6587\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u6216\u8303\u4f8b\u30021\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u53d7\u5230\u4e86\u963f\u8bfa\u5fb7\u00b7\u52cb\u4f2f\u683c\u3001\u6d77\u56e0\u91cc\u5e0c\u00b7\u7533\u514b\u548c\u5a01\u5ec9\u00b7\u5361\u666e\u6797\u7406\u8bba\u7684\u542f\u53d1\u3002\u5173\u952e\u7684\u60f3\u6cd5\u662f\uff0c\u5728\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u4e0b\uff0c\u97f3\u4e50\u53ef\u4ee5\u4ece\u6709\u9650\u7684\u6750\u6599\u4e2d\u53d1\u5c55\u6216\u4ea7\u751f\u3002\u6211\u5c06\u5728\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u4e2d\u89e3\u91ca\u6211\u7684\u65b9\u6cd5\u7684\u7406\u8bba\u57fa\u7840\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8d1d\u591a\u82ac\u7b2c\u4e00\u9996\u94a2\u7434\u594f\u9e23\u66f2\u7684\u5f00\u5934\uff1a\n\u4e8b\u5b9e\u4e0a\uff0c\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u53ef\u4ee5\u4ec5\u901a\u8fc7\u8f6c\u7f6e\u7ea2\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u6765\u751f\u6210\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u521b\u4f5c\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u53ea\u9700\u8981\u5728\u7ea2\u8272\u6846\u67b6\u4e2d\u521b\u5efa\u7ed3\u6784\uff0c\u7136\u540e\u91cd\u7528\u6216\u7a0d\u5fae\u4fee\u6539\u5b83\u4ee5\u751f\u6210\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u4e24\u4e2a\u7ed3\u6784\u3002\n\u540c\u6837\u7684\u60c5\u51b5\u4e5f\u53d1\u751f\u5728\u5176\u4ed6\u5730\u65b9\u3002\u5982\u4e0b\u6240\u793a\uff0c\u56db\u4e2a\u6846\u67b6\u7ed3\u6784\u4e5f\u975e\u5e38\u76f8\u4f3c\uff1a\n\u8fd9\u79cd\u91cd\u590d\u4f7f\u7528\u662f\u5426\u53ea\u5b58\u5728\u4e8e\u8d1d\u591a\u82ac\u7684\u97f3\u4e50\u4e2d\uff1f\u4e0d\uff0c\u8fd9\u53ef\u80fd\u53d1\u751f\u5728\u6bcf\u4e00\u90e8\u97f3\u4e50\u4f5c\u54c1\u4e2d\u3002\u65e0\u8bba\u4e00\u90e8\u97f3\u4e50\u4f5c\u54c1\u6301\u7eed\u591a\u957f\u65f6\u95f4\uff0c\u6216\u8005\u5b83\u7684\u58f0\u97f3\u6709\u591a\u53d8\u5316\u591a\u7aef\uff0c\u5176\u6838\u5fc3\u6750\u6599\u7684\u6570\u91cf\u603b\u662f\u5f88\u5c11\u7684\u3002\n\u7136\u800c\uff0c\u6709\u65f6\u5019\uff0c\u4e00\u79cd\u6750\u6599\u53ef\u4ee5\u88ab\u4fee\u6539\u5f97\u592a\u591a\u4ee5\u81f3\u4e8e\u4f60\u51e0\u4e4e\u8ba4\u4e0d\u51fa\u6765\uff0c\u6bd4\u5982\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u8096\u90a6\u7684\u591c\u66f2\u4f5c\u54c19\u7b2c\u4e00\u9996\u7684\u5f00\u5934\uff1a\n\u8fd9\u4e24\u4e2a\u6846\u67b6\u7ed3\u6784\u770b\u8d77\u6765\u548c\u542c\u8d77\u6765\u90fd\u975e\u5e38\u4e0d\u540c\uff0c\u4f46\u5728\u6211\u7684\u65b9\u6cd5\u4e2d\uff0c\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u5728\u7ea2\u8272\u6846\u67b6\u4e2d\u8be6\u7ec6\u9610\u8ff0\u7ed3\u6784\u6765\u751f\u6210\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u5b8c\u5168\u4e0d\u76f8\u5173\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u7ed3\u6784\u6709\u4e00\u4e9b\u5171\u540c\u7684\u5f62\u6001\u7279\u5f81\uff0c\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u80cc\u666f\u548c\u58f0\u7ea7\u6570\uff0c\u5e76\u4e14\u4ece\u97f3\u4e50\u5f62\u5f0f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u786e\u5b9e\u662f\u7ea2\u8272\u6846\u67b6\u4e2d\u7ed3\u6784\u7684\u91cd\u590d\u30022.\n\u8bf7\u6ce8\u610f\uff0c\u5728\u58f0\u660e\u4e00\u4e2a\u7ed3\u6784\u53ef\u4ee5\u7531\u5176\u4ed6\u7ed3\u6784\u751f\u6210\u65f6\uff0c\u6211\u5e76\u6ca1\u6709\u65ad\u8a00\u8d1d\u591a\u82ac\u6216\u8096\u90a6\u5728\u4f5c\u66f2\u65f6\u786e\u5b9e\u8fd9\u6837\u505a\u6216\u6545\u610f\u8fd9\u6837\u505a\u3002\u76f8\u53cd\uff0c\u6211\u7684\u89c2\u70b9\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u97f3\u4e50\u751f\u6210\u7684\u89c6\u89d2\u6765\u6b63\u5f0f\u5316\u6216\u81ea\u52a8\u5316\u97f3\u4e50\u521b\u4f5c\u7684\u8fc7\u7a0b\u3002\n\u4e00\u65e6\u521b\u5efa\u4e86\u4e00\u4e2a\u7ed3\u6784\uff0c\u5c31\u53ef\u4ee5\u5bf9\u5176\u5e94\u7528\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u6765\u751f\u6210\u65b0\u7684\u7ed3\u6784\u3002\u6211\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e9b\u64cd\u4f5c\u3002\n\u6211\u8981\u8bb2\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u662f\u91cd\u590d\u3002\u5b83\u610f\u5473\u7740\u5728\u4e0d\u6539\u53d8\u5f62\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u4ee5\u65b0\u7684\u548c\u8c10\u65b9\u5f0f\u91cd\u590d\u4e00\u4e2a\u7ed3\u6784\u3002\n\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u662f\u7ea2\u8272\u6846\u67b6\u4e2d\u7ed3\u6784\u7684\u6362\u4f4d\u3002\u8fd9\u4e24\u79cd\u7ed3\u6784\u5177\u6709\u76f8\u540c\u7684\u5f62\u6001\uff0c\u5c3d\u7ba1\u5b83\u4eec\u9002\u5e94\u4e0d\u540c\u7684\u80cc\u666f\u548c\u58f0\u3002\n\u8096\u90a6\u7684\u591c\u66f2\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u4f34\u594f\u4e3b\u9898\u4e0e\u7ea2\u8272\u6846\u67b6\u4e2d\u7684\u4e3b\u9898\u91cd\u590d\uff1a\n\u5728\u91cd\u590d\u4e2d\uff0c\u6839\u636e\u4e00\u4e9b\u8bed\u97f3\u5f15\u5bfc\u89c4\u5219\uff0c\u4e00\u4e9b\u97f3\u8c03\u4f1a\u79fb\u52a8\u5230\u6700\u8fd1\u7684\u97f3\u8c03\u4ee5\u9002\u5e94\u65b0\u7684\u548c\u58f0\u30023\u5176\u4e2d\u4e00\u4e9b\u53d8\u5316\u5982\u4e0b\u6240\u793a\uff1a\n\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u662f\u7cbe\u5316\u3002\u8fd9\u610f\u5473\u7740\u5411\u7ed3\u6784\u4e2d\u6dfb\u52a0\u4f20\u9012\u6ce8\u91ca\u3001\u76f8\u90bb\u6ce8\u91ca\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u6ce8\u91ca\u3002\u8096\u90a6\u7684\u591c\u66f2\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5728\u91cd\u590d\u4e2d\u52a0\u5165\u4e86\u8bb8\u591a\u5143\u7ec4\uff1a\n\u6709\u65f6\uff0c\u8be6\u7ec6\u63cf\u8ff0\u66f4\u591a\u5730\u662f\u4ece\u5206\u6570\u4e2d\u63a8\u65ad\u51fa\u6765\u7684\uff0c\u800c\u4e0d\u662f\u8868\u73b0\u5728\u5206\u6570\u4e2d\u3002\u6d77\u56e0\u91cc\u5e0c\u00b7\u7533\u514b\uff08Heinrich Schenker\uff09\u7684\u7406\u8bba\u533a\u5206\u4e86\u97f3\u4e50\u7684\u8868\u5c42\u7ed3\u6784\u548c\u6df1\u5c42\u7ed3\u6784\uff0c\u8868\u5c42\u7ed3\u6784\u662f\u6df1\u5c42\u7ed3\u6784\u7ec6\u5316\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff1a\n\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u5206\u6570\u4e2d\uff0cb\u90e8\u5206\u53ef\u4ee5\u901a\u8fc7\u9610\u8ff0c\u90e8\u5206\u751f\u6210\u3002\n\u7cbe\u5316\u7684\u76f8\u53cd\u64cd\u4f5c\u662f\u7b80\u5316\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u8ff0\u5206\u6570\u4e2d\uff0cb\u90e8\u5206\u53ef\u4ee5\u51cf\u5c11\u4e3ac\u90e8\u5206\u3002\n\u6211\u8981\u8bf4\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u662f\u788e\u7247\u5316\u3002\u8fd9\u610f\u5473\u7740\u4ece\u6750\u6599\u4e2d\u53d6\u51fa\u4e00\u5757\u788e\u7247\u3002\n\u6b63\u5982\u8d1d\u591a\u82ac\u7684\u594f\u9e23\u66f2\u4e00\u6837\uff0c\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u662f\u7ea2\u8272\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\uff1a\n\u53ef\u4ee5\u4fee\u6539\u7ea2\u8272\u6846\u67b6\u4e2d\u7684\u7247\u6bb5\u4ee5\u751f\u6210\u6a59\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\uff1b\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u7247\u6bb5\u53ef\u4ee5\u4fee\u6539\u4ee5\u751f\u6210\u7eff\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u3002\u8fd9\u4e24\u5757\u788e\u7247\u53d6\u81ea\u7d2b\u8272\u6846\u67b6\u4e2d\u7684\u7ed3\u6784\u3002\n\u6709\u66f4\u591a\u7684\u64cd\u4f5c\u53ef\u4ee5\u5e94\u7528\u5230\u97f3\u4e50\u6750\u6599\u4e0a\uff0c\u4f46\u6211\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\u6211\u6240\u4ecb\u7ecd\u7684\u56db\u4e2a\u64cd\u4f5c\u5bf9\u4e8e\u672c\u535a\u5ba2\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n\u6839\u636e\u97f3\u4e50\u5f62\u5f0f\uff0c\u521b\u5efa\u548c\u751f\u6210\u7684\u7ed3\u6784\u53ef\u4ee5\u7ec4\u5408\u6210\u66f4\u5927\u7684\u7ed3\u6784\u3002\u97f3\u4e50\u5f62\u5f0f\u662f\u97f3\u4e50\u6750\u6599\u7ec4\u7ec7\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n\u4f8b\u5982\uff0c\u8d1d\u591a\u82ac\u594f\u9e23\u66f2\u7684\u5f00\u5934\u6709\u5f62\u5f0f\u53e5\u3002\u4e0b\u9762\u662f\u5a01\u5ec9\u00b7\u5361\u666e\u6797\u7684\u7cfb\u7edf\u662f\u5982\u4f55\u5206\u6790\u8fd9\u53e5\u8bdd\u7684\uff1a2\n\u8096\u90a6\u591c\u66f2\u7684\u5f00\u59cb\u662f\u4ece\u4e00\u4e2a\u66f4\u5927\u7684\u7ed3\u6784\u5f62\u5f0f\u590d\u5408\u65f6\u671f\uff0c\u8fd9\u662f\u8fdc\u6bd4\u53e5\u5b50\u590d\u6742\u3002\n\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u6df1\u5165\u8ba8\u8bba\u97f3\u4e50\u5f62\u5f0f\u7684\u95ee\u9898\u3002\u6211\u5f3a\u70c8\u63a8\u8350\u5a01\u5ec9\u00b7\u5361\u666e\u6797\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u4f18\u79c0\u6559\u67502\u3002\u6211\u7684\u91cd\u70b9\u662f\uff0c\u97f3\u4e50\u6750\u6599\u5e94\u8be5\u6839\u636e\u97f3\u4e50\u5f62\u5f0f\u8fdb\u884c\u7ec4\u5408\uff0c\u4ee5\u4ea7\u751f\u6709\u610f\u4e49\u7684\u97f3\u4e50\u3002\n\u6211\u4eec\u9996\u5148\u9700\u8981\u4e25\u683c\u5b9a\u4e49\u97f3\u4e50\u6750\u6599\u548c\u7ed3\u6784\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u6a21\u7cca\u5730\u8c08\u8bba\u8fd9\u4e9b\u3002\n\u8ba9\u6211\u4eec\u56de\u5230\u8d1d\u591a\u82ac\u7684\u594f\u9e23\u66f2\u3002\u4e0b\u9762\u662f\u5b83\u7684\u524d\u4e24\u4e2a\u680f\uff1a\n\u8fd9\u9996\u66f2\u5b50\u6709\u4e24\u79cd\u58f0\u97f3\u6216\u4e50\u53e5\u3002\u6bcf\u4e00\u6bb5\u97f3\u4e50\u90fd\u7531\u97f3\u7b26\u3001\u4f11\u6b62\u7b26\u6216\u548c\u5f26\u7ec4\u6210\uff0c\u800c\u548c\u5f26\u4e5f\u7531\u97f3\u7b26\u7ec4\u6210\u3002\u97f3\u7b26\u6709\u51e0\u4e2a\u5c5e\u6027\uff0c\u8fd9\u91cc\u53ea\u8003\u8651\u97f3\u9ad8\u548c\u6301\u7eed\u65f6\u95f4\u3002\u6211\u4eec\u5c06\u5206\u522b\u5904\u7406\u97f3\u7b26\u7684\u97f3\u9ad8\u548c\u6301\u7eed\u65f6\u95f4\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5c06\u97f3\u7b26\u8868\u793a\u4e3a\u5355\u4e2a\u5bf9\u8c61\u3002\n\u97f3\u9ad8\u53ef\u4ee5\u7528\u79d1\u5b66\u7684\u97f3\u9ad8\u7b26\u53f7\u6216MIDI\u97f3\u7b26\u6570\u5b57\u6765\u8868\u793a\u3002\u4e3a\u4e86\u4fbf\u4e8e\u64cd\u4f5c\uff0c\u901a\u5e38\u4f7f\u7528\u540e\u8005\u3002\u4f8b\u5982\uff0c\u97f3\u9ad8C4\u7531MIDI\u97f3\u7b26\u7f16\u53f760\u8868\u793a\u3002\n\u5728Python\u4e2d\uff0c\u548c\u5f26\u7684\u97f3\u9ad8\u5185\u5bb9\u53ef\u4ee5\u7528\u5217\u8868\u8868\u793a\u3002\u4f8b\u5982\uff0c\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528[&#39\uff1bC4&#39\uff1b\uff0c&#39\uff1bA-3&#39\uff1b\uff0c&#39\uff1bF3&#39\uff1b]\u6216[60,56,53]\u4ee3\u8868\u7ea2\u8272\u6846\u67b6\u4e2d\u548c\u5f26\u7684\u97f3\u9ad8\u5185\u5bb9\uff1a\n\u6301\u7eed\u65f6\u95f4\u53ef\u4ee5\u7528\u6570\u5b57\u8868\u793a\u3002\u4f8b\u5982\uff0c\u5b63\u5ea6\u7968\u636e\u7684\u6301\u7eed\u65f6\u95f4\u4e3a1\u3002\n\u4e00\u6761\u97f3\u4e50\u7ebf\u7684\u97f3\u9ad8\u5185\u5bb9\u53ef\u4ee5\u7528\u6211\u6240\u8bf4\u7684\u97f3\u9ad8\u7ebf\u6765\u8868\u793a\u3002\u5728Python\u4e2d\uff0c\u97f3\u9ad8\u7ebf\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u6210\u5458\u4e3a\u65e0\u3001\u6570\u5b57\u6216\u6570\u5b57\u5217\u8868\u3002\u4f7f\u7528Python\u5305\u7c7b\u578b\uff0c\u8282\u7ebf\u53ef\u4ee5\u5b9a\u4e49\u4e3a\uff1a\n\u4e00\u6761\u97f3\u4e50\u7ebf\u7684\u6301\u7eed\u65f6\u95f4\u5185\u5bb9\u53ef\u4ee5\u7528\u6301\u7eed\u65f6\u95f4\u7ebf\u6765\u8868\u793a\u3002\u5728Python\u4e2d\uff0c\u6301\u7eed\u65f6\u95f4\u884c\u662f\u6210\u5458\u4e3a\u6570\u5b57\u7684\u5217\u8868\u3002\n\u6700\u540e\uff0c\u548c\u58f0\u548c\u97f3\u9636\u53ef\u4ee5\u7528\u97f3\u9ad8\u7b49\u7ea7\u5217\u8868\u6765\u8868\u793a\u3002\u4f8b\u5982\uff0c\u5728Python\u4e2d\uff0cC\u5927\u8c03\u548c\u58f0\u53ef\u4ee5\u7528[&#39\uff1bC&#39\uff1b\uff0c&#39\uff1bE&#39\uff1b\uff0c&#39\uff1bG&#39\uff1b]\u6765\u8868\u793a\u6216\u8005[0,4,7]\u3002\n\u4f60\u53ef\u80fd\u7ecf\u5e38\u542c\u5230\u8fd9\u4e2a\u8bcd\u3002\u6bcd\u9898\u5728\u7ed3\u6784\u4e0a\u662f\u4e00\u6761\u97f3\u4e50\u7ebf\uff0c\u901a\u5e38\u957f\u5ea6\u8f83\u77ed\u3002\u4e3b\u9898\u662f\u97f3\u4e50\u7684\u57fa\u77f3\u3002\u5b83\u4eec\u53ef\u4ee5\u88ab\u91cd\u590d\u3001\u7ec6\u5316\u3001\u5206\u5272\u548c\u7ec4\u5408\uff0c\u4ece\u800c\u4ea7\u751f\u97f3\u4e50\u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u52cb\u4f2f\u683c\u5982\u4f55\u5206\u6790\u8d1d\u591a\u82ac\u594f\u9e23\u66f2\u7684\u5f00\u5934\uff1a5\n\u5728\u4ed6\u7684\u5206\u6790\u4e2d\uff0c\u8fd9\u9996\u66f2\u5b50\u7684\u65cb\u5f8b\u90e8\u5206\u53ea\u80fd\u7531\u4e09\u4e2a\u4e3b\u9898\u751f\u6210\u3002\n\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u56fe\u6848\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4e50\u8c31\u4e2d\u6709\u4e24\u79cd\u4e3b\u9898\uff1a\n\u7ea2\u8272\u6846\u67b6\u4e2d\u7684\u56fe\u6848\u53ef\u4ee5\u79f0\u4e3a\u4f34\u594f\u56fe\u6848\uff0c\u56e0\u4e3a\u5b83\u4eec\u51fa\u73b0\u5728\u8fd9\u9996\u591c\u66f2\u7684\u4f34\u594f\u884c\u4e2d\u3002\u5b83\u4eec\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4e3a\u548c\u58f0\u6bcd\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u5305\u542b\u548c\u58f0\u97f3\u7b26\u3002\u84dd\u8272\u6846\u67b6\u4e2d\u7684\u4e3b\u9898\u53ef\u4ee5\u79f0\u4e3a\u65cb\u5f8b\u4e3b\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u51fa\u73b0\u5728\u65cb\u5f8b\u7ebf\u4e2d\uff0c\u6216\u8005\u5982\u679c\u5b83\u4eec\u5305\u542b\u975e\u548c\u58f0\u97f3\u7b26\uff0c\u5219\u79f0\u4e3a\u975e\u548c\u58f0\u4e3b\u9898\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u5c06\u8ba8\u8bba\u53ef\u5e94\u7528\u4e8eMotif\u7684\u5e38\u89c1\u64cd\u4f5c\u7684\u5b9e\u73b0\u3002\n\u6211\u7684Python\u5305ch0p1n\u4e2d\u7684\u51fd\u6570transpose\uff08\uff09\u7528\u4e8e\u6cbf\u6bd4\u4f8b\u53d8\u6362\u56fe\u6848\u3002\n\u97f3\u9ad8\u4e3b\u9898=[60,67,76,72]#[#39\uff1bC4&#39\uff1b&#39\uff1bG4&#39\uff1b&#39\uff1bE5&#39\uff1b&#39\uff1bC5&#39\uff1b]\u6301\u7eed\u65f6\u95f4\u4e3b\u9898=[1,1,1,1]\n\u6211\u4eec\u53ef\u4ee5\u7528show\uff08\uff09\u5728score\u4e2d\u663e\u793a\u8fd9\u4e2a\u4e3b\u9898\uff0c\u5b83\u6784\u5efa\u5728Python\u5305music21\u4e0a\uff1a\n\u6765\u81each0p1n\u3002utils import show\uff08\u97f3\u9ad8\u7ebf=[pitch_motif]\u3001\u97f3\u957f\u7ebf=[duration_motif]\u3001\u7ec4=1\u3001#\u9ad8\u97f3\u6746\u952e\u4e2d\u7684\u58f0\u97f3\u6570=0\u3001\u7c73=\u548c#39\uff1b4/4\u548c#39\uff1b\u3001\u8c31\u53f7=[\u548c#39\uff1bg\u548c#39\uff1b\uff0c&#39\uff1bf\u548c#39\uff1b]\uff09\uff09\n\u6765\u81each0p1n\u3002motif import transpose pitch_motif_transposed=transpose\uff08pitch_motif=pitch_motif\uff0cscale=[0,2,4,5,7,9,11]\uff0cstep=1\uff09\n\u663e\u793a\uff08\u97f3\u9ad8\u7ebf=[pitch_motif_transposed]\uff0cduration_lines=[duration_motif]\uff0cgroup=1\uff0c#\u9ad8\u97f3\u6746\u952e\u4e2d\u7684\u58f0\u97f3\u6570=0\uff0cmeter=&#39\uff1b4/4&#39\uff1b\uff0c\u8c31\u53f7=[&#39\uff1bg&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b]\uff09\uff09\n\u770b\u8d77\u6765\u4e0d\u9519\u3002\u6bcf\u4e00\u4e2a\u97f3\u9ad8\u90fd\u5728C\u5927\u8c03\u97f3\u9636\u4e0a\u4e0a\u5347\u4e86\u4e00\u6b65\u3002\n\u7531\u4e8e\u548c\u58f0\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u97f3\u9636\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8f6c\u7f6e\uff08\uff09\u5728\u548c\u58f0\u4e2d\u91cd\u590d\u4e3b\u9898\uff0c\u6bd4\u5982G\u5927\u8c03\u548c\u58f0\uff1a\n\u97f3\u9ad8\u8c03\u6362=\u8c03\u6362\uff08\u97f3\u9ad8\u8c03\u6362=\u97f3\u9ad8\u8c03\u6362\uff0c\u97f3\u9636=[7,11,2]\uff0c#G\u5927\u8c03\u548c\u58f0\u9636=1\uff09\n\u8868\u6f14\uff08\u97f3\u9ad8\u7ebf\u6761=[\u97f3\u9ad8\u4e3b\u9898+\u97f3\u9ad8\u4e3b\u9898\u8f6c\u7f6e]\uff0c\u97f3\u957f\u7ebf\u6761=[\u97f3\u957f\u4e3b\u9898*2]\uff0c\u7ec4=1\uff0c\u952e=0\uff0c\u8282\u62cd=&#39\uff1b4/4&#39\uff1b\uff0c\u8c31\u53f7=[&#39\uff1bg&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b]\uff09\uff09\n\u6700\u521d\u7684\u4e3b\u9898\u5728\u7b2c\u4e00\u680f\uff0c\u7b2c\u4e8c\u680f\u8f6c\u7f6e\u3002\u4f60\u53ef\u4ee5\u770b\u5230G\u5927\u8c03\u548c\u58f0\u4e2d\u7684\u6bcf\u4e2a\u97f3\u9ad8\u662f\u5982\u4f55\u4e0a\u5347\u4e00\u6b65\u7684\u3002\n\u7136\u800c\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0ctranspose\uff08\uff09\u5e76\u4e0d\u597d\u7528\u3002\u4ecd\u7136\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5047\u8bbe\u6211\u4eec\u7528step=-1\u5c06motif\u5411\u4e0b\u8f6c\u4e00\u6b65\uff0c\u800c\u4e0d\u662f\u5411\u4e0a\u8f6c\u4e00\u6b65\uff1a\n\u7b2c\u4e8c\u5c0f\u8282\u4e2d\u7684\u8f6c\u7f6e\u4e3b\u9898\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u97f3\u9ad8\u7b49\u7ea7G\u6765\u5b8c\u5168\u5177\u4f53\u5316G\u5927\u8c03\u548c\u58f0\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7ch0p1n\u4e2d\u7684\u51fd\u6570lead\uff08\uff09\u6765\u6539\u5584\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u6765\u6e90\u4e8e\u58f0\u97f3\u5f15\u5bfc\u7684\u6982\u5ff5\uff0c\u610f\u601d\u662f\u4e00\u4e2a\u4e3b\u9898\u4e2d\u7684\u6bcf\u4e2a\u97f3\u7b26\u90fd\u4e00\u6b65\u4e00\u6b65\u5730\u5f15\u5bfc\u5230\u4e00\u4e2a\u7ed9\u5b9a\u548c\u58f0\u4e2d\u7684\u97f3\u7b26\u3002\n\u6765\u81each0p1n\u3002motif import lead pitch_motif=lead\uff08pitch_motif=pitch_motif\uff0charmony=[7,11,2]\uff0c35;G\u5927\u8c03\u548c\u58f0\u6b65\u6570=[-1,0]\uff0ccomplete=False\uff0cSimular=None\uff09\n\u6b65\u6570=[-1\uff0c0]\u610f\u5473\u7740\u6bcf\u4e2a\u97f3\u9ad8\u5982\u679c\u7b26\u5408\u548c\u58f0\uff0c\u5c06\u79fb\u52a8\u96f6\u6b65\uff0c\u540c\u65f6\u5411\u4e0b\u79fb\u52a8\u4e00\u6b65\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u97f3\u9ad8\u53ef\u80fd\u4f1a\u5728lead\uff08\uff09\u4e0b\u7684\u7ed9\u5b9a\u548c\u58f0\u4e2d\u751f\u6210\u591a\u4e2a\u97f3\u9ad8\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u97f3\u9ad8\u4e3b\u9898\u5217\u8868\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u3002\u7a0d\u540e\u6211\u5c06\u8ba8\u8bba\u5b8c\u6574\u53c2\u6570\u548c\u7c7b\u4f3c\u53c2\u6570\u3002\n#\u5408\u5e76itertools\u5bfc\u5165\u94fe\u5c55\u793a\u4e2d\u7684'pitch_Motions'\uff08pitch_lines=[\u5217\u8868\uff08\u94fe\uff08*pitch_Motions\uff09\uff09]\uff0cduration_lines=[duration_motif*2]\uff0cgroup=1\uff0ckey=0\uff0cmeter=&39\uff1b4/4&#39; ,  \u8c31\u53f7=[&#39\uff1bg&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b]\uff09\n\u867d\u7136\u7b2c\u4e00\u5c0f\u8282\u4e2d\u7684\u4e3b\u9898\u4e0e\u8f6c\u7f6e\uff08\uff09\u4ea7\u751f\u7684\u4e0d\u53ef\u63a5\u53d7\u7684\u4e3b\u9898\u76f8\u540c\uff0c\u6b65\u9aa4=-1\uff0c\u4f46\u7b2c\u4e8c\u5c0f\u8282\u4e2d\u7684\u4e3b\u9898\u662f\u597d\u7684\uff0c\u8fd9\u5145\u5206\u4f53\u73b0\u4e86G\u5927\u8c03\u548c\u58f0\u3002\n\u4f7f\u7528complete=True\uff0c\u6211\u4eec\u53ef\u4ee5\u7b5b\u9009\u51fa\u4e0d\u548c\u8c10\u5b8c\u6574\u6216\u4e0d\u5b8c\u5168\u5177\u4f53\u5316\u7ed9\u5b9a\u548c\u8c10\u7684\u97f3\u9ad8\u4e3b\u9898\uff1a\n\u97f3\u9ad8\u6bcd\u9898=\u5f15\u5bfc\uff08\u97f3\u9ad8\u6bcd\u9898=\u97f3\u9ad8\u6bcd\u9898\uff0c\u548c\u58f0=[7,11,2]\uff0c\u6b65\u6570=[1,0]\uff0c\u5b8c\u6574=\u6b63\u786e\uff0c\u76f8\u4f3c=\u65e0\uff09\n\u5728\u53c2\u6570\u76f8\u4f3c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7b5b\u9009\u51fa\u4e0e\u539f\u59cb\u57fa\u8c03\u8f6e\u5ed3\u4e0d\u540c\u7684\u57fa\u8c03\u56fe\u6848\u3002\u5728\u8fd9\u7bc7\u4ecb\u7ecd\u6027\u535a\u5ba2\u4e2d\uff0c\u6211\u5c06\u8df3\u8fc7\u8fd9\u4e00\u90e8\u5206\u3002\n\u51fd\u6570thread\uff08\uff09\u7528\u4e8e\u5728\u8fde\u7eed\u7684\u548c\u58f0\u4e2d\u91cd\u590d\u4e00\u4e2a\u4e3b\u9898\uff0c\u6216\u5728\u548c\u58f0\u4e2d\u7a7f\u63d2\u4e00\u4e2a\u4e3b\u9898\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u524d\u9762\u5b9a\u4e49\u7684\u4e3b\u9898\uff1a\n\u6765\u81each0p1n\u3002motif import thread pitch_motif=thread\uff08pitch_motif=pitch_motif\uff0cduration_motif=duration_motif\uff0c\u548c\u58f0=[5,9,0]\uff0c[7,11,2]\uff0c#F\uff0cG durations=[2,2]\uff0csteps=[1]\uff09show\uff08pitch lines=pitch_motif\uff0cduration_lines=[duration_motif]\u7ec4=1\uff0c\u952e=0\uff0c\u7c73=39\uff1b2/4&#39; ,  \u8c31\u53f7=[&#39\uff1bg&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b]\uff09\n\u4e3b\u9898\u7684\u524d\u4e24\u4e2a\u97f3\u7b26\u6539\u7f16\u4e3aF\u5927\u8c03\u548c\u58f0\uff0c\u800c\u6700\u540e\u4e24\u4e2a\u97f3\u7b26\u6539\u7f16\u4e3aG\u5927\u8c03\u548c\u58f0\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u53ea\u8ba8\u8bba\u4e86\u548c\u58f0\u4e3b\u9898\u3002\u4e3a\u4e86\u5904\u7406\u975e\u8c10\u6ce2\u56fe\u6848\uff0c\u8fd9\u662f\u66f4\u590d\u6742\u7684\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8003\u8651\u5982\u4f55\u7cbe\u5fc3\u5236\u4f5c\u56fe\u6848\u3002\n\u7b80\u5355\u5730\u8bf4\uff0c\u7cbe\u5316\u5c31\u662f\u7ed9\u4e3b\u9898\u6dfb\u52a0\u6ce8\u91ca\u3002ch0p1n\u4e2d\u7684\u51fd\u6570deployate\uff08\uff09\u6b63\u597d\u7528\u4e8e\u6b64\u76ee\u7684\u3002\n\u6765\u81each0p1n\u3002motif import deployate motif=deployate\uff08\u97f3\u9ad8=pitch_motif\uff0c\u6301\u7eed\u65f6\u95f4=duration_motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u6570=1\uff0c-1]\uff0c\u97f3\u9636=0,2,4,5,7,9,11]\uff0c\u4f4d\u7f6e=39\uff1b\u5de6&#39\uff1b\uff09\n\u8868\u6f14\uff08\u97f3\u9ad8\u7ebf=[pitch_motif+motif[0]]\uff0c\u6301\u7eed\u65f6\u95f4\u7ebf=[duration_motif+motif[1]]\uff0c\u7ec4=1\uff0c\u952e=0\uff0c\u97f3\u9636=&#39\uff1b4/4&#39\uff1b\uff0c\u8c31\u53f7=[&#39\uff1bg&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b]\uff09\uff09\n\u53c2\u6570\u5f15\u7528\u6307\u793a\u5728\u4f55\u5904\u6dfb\u52a0\u6ce8\u91ca\u6216\u9610\u8ff0\u4e3b\u9898\u3002\u4f8b\u5982\uff0creference=2\u8868\u793a\u5728\u7b2c\u4e09\u4e2a\u6ce8\u91ca\u5904\u6dfb\u52a0\u6ce8\u91ca\u3002\u6211\u4eec\u53ef\u4ee5\u8be6\u7ec6\u8bf4\u660e\u6700\u540e\u4e00\u70b9\uff1a\nmotif=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8#motif=\u97f3\u9ad8#motif\uff0c\u6301\u7eed\u65f6\u95f4#motif=\u6301\u7eed\u65f6\u95f4#motif\uff0c\u53c2\u8003=3\uff0c#\u6700\u540e\u4e00\u4e2a\u97f3\u7b26\u6b65\u6570=[-1\uff0c-1]\uff0c\u97f3\u9636=[0,2,4,5,7,9,11]\uff0c\u4f4d\u7f6e=&#39\uff1b\u5de6&#39\uff1b\uff09\n\u53c2\u6570\u6b65\u9aa4\u6307\u5b9a\u8981\u6dfb\u52a0\u7684\u97f3\u7b26\u7684\u97f3\u9ad8\u3002\u4f8b\u5982\uff0csteps=[-1\uff0c-1]\u8868\u793a\u53c2\u8003\u6ce8\u91ca\u5e94\u5411\u4e0b\u79fb\u52a8\u4e00\u6b65\u4ee5\u751f\u6210\u7b2c\u4e00\u4e2a\u6ce8\u91ca\uff0c\u7136\u540e\u6b64\u6ce8\u91ca\u5e94\u5411\u4e0b\u79fb\u52a8\u4e00\u6b65\u4ee5\u751f\u6210\u7b2c\u4e8c\u4e2a\u6ce8\u91ca\u3002\u8ba9\u6211\u4eec\u7528\u8fd9\u4e2a\u53c2\u6570\u6dfb\u52a0\u4e09\u4e2a\u964d\u5e8f\u6ce8\u91ca\uff1a\nmotif=\u7cbe\u81f4\uff08\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u957f#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u957f#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u957f#\u97f3\u9ad8#\u97f3\u957f#\u97f3\u9ad8#\u97f3\u9ad8#\u97f3\u9ad8\n\u901a\u8fc7\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u60a8\u8fd8\u53ef\u4ee5\u91cd\u590d\u4e00\u4e9b\u6ce8\u91ca\u6216\u4e3a\u4e3b\u9898\u6dfb\u52a0\u4f11\u606f\uff0c\u5982\u4ee5\u4e0b\u793a\u4f8b\u6240\u793a\uff1a\nmotif=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8_motif=\u97f3\u9ad8_motif\uff0c\u6301\u7eed\u65f6\u95f4_motif=\u6301\u7eed\u65f6\u95f4_motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u9aa4=[0,0\uff0c\u65e0]#\u91cd\u590d\u4e24\u6b21\u97f3\u7b26\uff0c\u7136\u540e\u6dfb\u52a0\u4f11\u606f\uff09\n\u53c2\u6570\u6bd4\u4f8b\u6307\u5b9a\u79fb\u52a8\u53c2\u8003\u6ce8\u91ca\u4ee5\u751f\u6210\u8981\u6dfb\u52a0\u7684\u6ce8\u91ca\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\uff0cscale=[0,2,4,5,7,9,11]\u8868\u793a\u5b83\u662fC\u5927\u8c03\u97f3\u9636\u3002\u6211\u4eec\u53ef\u4ee5\u7528C\u8272\u9636\u6765\u4ee3\u66ff\uff1a\nmotif=\u7cbe\u7ec6\uff08\u97f3\u9ad8#motif=\u97f3\u9ad8#motif\uff0c\u6301\u7eed\u65f6\u95f4#motif=\u6301\u7eed\u65f6\u95f4#motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u9aa4=[-1\uff0c-1]\uff0c\u97f3\u9636=\u5217\u8868\uff08\u8303\u56f4\uff0812\uff09\uff09\uff0c#C\u8272\u9636\u4f4d\u7f6e=&#39\uff1b\u5de6&#39\uff1b\uff09\n\u53c2\u6570\u4f4d\u7f6e\u6307\u5b9a\u6dfb\u52a0\u6ce8\u91ca\u76f8\u5bf9\u4e8e\u53c2\u8003\u6ce8\u91ca\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0cposition=&#39\uff1b\u5de6&#39\uff1b\u6307\u793a\u5c06\u6ce8\u91ca\u6dfb\u52a0\u5230\u53c2\u8003\u6ce8\u91ca\u7684\u5de6\u4fa7\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u53f3\u8fb9\u6dfb\u52a0\u6ce8\u91ca\uff1a\nmotif=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8#motif=\u97f3\u9ad8#motif\uff0c\u6301\u7eed\u65f6\u95f4#motif=\u6301\u7eed\u65f6\u95f4#motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u6570=[-1\uff0c-1]\uff0c\u97f3\u9636=[0,2,4,5,7,9,11]\uff0c\u4f4d\u7f6e=&#39\uff1b\u53f3\u4fa7&#39\uff1b#\u5728\u53f3\u4fa7\u6dfb\u52a0\u6ce8\u91ca\uff09\n\u8bf7\u6ce8\u610f\uff0c\u5e26\u6709&#39\uff1b\u5de6&#39\uff1b\u548c&#39\uff1b\u5bf9&#39\uff1b\uff0c\u6dfb\u52a0\u7684\u6ce8\u91ca\u91c7\u7528\u53c2\u8003\u6ce8\u91ca\u7684\u6301\u7eed\u65f6\u95f4\u3002\u5982\u679c\u4f60\u60f3\u4ece\u53c2\u8003\u6ce8\u91ca\u4e4b\u524d\u6216\u4e4b\u540e\u7684\u6ce8\u91ca\u4e2d\u63d0\u53d6\u6301\u7eed\u65f6\u95f4\uff0c\u8bf7\u4f7f\u7528&#39\uff1b\u524d&#39\uff1b\u6216&#39\uff1b\u63a5\u4e0b\u6765&#39\uff1b\u3002\u4f8b\u5982\nmotif=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8#motif=\u97f3\u9ad8#motif\uff0c\u6301\u7eed\u65f6\u95f4#motif=\u6301\u7eed\u65f6\u95f4#motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u6570=[-1\uff0c-1]\uff0c\u97f3\u9636=[0,2,4,5,7,9,11]\uff0c\u4f4d\u7f6e=&#39\uff1b\u4e0a\u4e00\u4e2a&#39\uff1b#\u4ece\u4e0a\u4e00\u4e2a\u97f3\u7b26\u4e2d\u9009\u53d6\u6301\u7eed\u65f6\u95f4\uff09\n\u53c2\u6570\u6bd4\u7387\u6307\u5b9a\u6dfb\u52a0\u7684\u7b14\u8bb0\u6301\u7eed\u65f6\u95f4\u7684\u767e\u5206\u6bd4\u3002\u4f8b\u5982\uff0c\u6bd4\u7387=1/2\u610f\u5473\u7740\u6dfb\u52a0\u7684\u6ce8\u91ca\u5360\u53c2\u8003\u6ce8\u91ca\u6301\u7eed\u65f6\u95f4\u768450%\uff1a\nmotif=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8#motif=\u97f3\u9ad8#motif\uff0c\u6301\u7eed\u65f6\u95f4#motif=\u6301\u7eed\u65f6\u95f4#motif\uff0c\u53c2\u8003=2\uff0c\u6b65\u9aa4=[-1\uff0c-1]\uff0c\u97f3\u9636=[0,2,4,5,7,9,11]\uff0c\u4f4d\u7f6e=&#39\uff1b\u5de6&#39\uff1b\uff0c\u6bd4\u7387=1/2#\u5360\u53c2\u8003\u97f3\u7b26\u6301\u7eed\u65f6\u95f4\u768450%\uff09\n\u7cbe\u7b80\u4e0e\u7cbe\u5316\u76f8\u53cd\u3002\u8fd9\u662f\u4ece\u4e00\u4e2a\u4e3b\u9898\u4e2d\u5220\u9664\u6ce8\u91ca\u3002ch0p1n\u7684\u76f8\u5e94\u51fd\u6570\u662freduce\uff08\uff09\u3002\n\u6765\u81each0p1n\u3002motif import reduce motif=reduce\uff08\u97f3\u9ad8motif=motif[0]\uff0c\u6301\u7eed\u65f6\u95f4motif=motif[1]\uff0c\u5f00\u59cb=2\uff0c\u7ed3\u675f=3\uff0c\u4f4d\u7f6e=&#39\uff1b\u53f3&#39\uff1b\uff09\n\u53c2\u6570start\u548cend\u6307\u5b9a\u8981\u5220\u9664\u7684\u6ce8\u91ca\u3002\u53c2\u6570\u4f4d\u7f6e\u6307\u5b9a\u8981\u5411\u5176\u6dfb\u52a0\u5df2\u5220\u9664\u6ce8\u91ca\u7684\u6301\u7eed\u65f6\u95f4\u7684\u53c2\u8003\u6ce8\u91ca\u3002\n\u80cc\u666f\u548c\u58f0\u4e3aFm\uff0c\u5706\u5708\u97f3\u7b26\u4e0d\u7b26\u5408\u548c\u58f0\uff0c\u56e0\u6b64\u4e3a\u975e\u548c\u58f0\u3002\n\u97f3\u9ad8\u4e3b\u9898=[65,68,72,77,80,79,77,76,77\uff0c\u65e0]\u6301\u7eed\u65f6\u95f4\u4e3b\u9898=[1,1,1,1,1.5,1/6,1/6,1/6,1,1]\n\u97f3\u9ad8\u4e3b\u9898\uff0c\u6301\u7eed\u65f6\u95f4\u4e3b\u9898=\u51cf\u5c11\uff08\u97f3\u9ad8\u4e3b\u9898\uff0c\u6301\u7eed\u65f6\u95f4\u4e3b\u9898\uff0c\u5f00\u59cb=5\uff0c\u7ed3\u675f=7\uff0c\u4f4d\u7f6e=&#39\uff1b\u5de6&#39\uff1b\uff09#\u4ee5\u4e0b\u663e\u793a\u76f8\u540c\uff08[pitch_motif]\uff0c[duration_motif]\uff0ckey=-4\uff09\n\u97f3\u9ad8\u4e3b\u9898\uff0c\u6301\u7eed\u65f6\u95f4\u4e3b\u9898=\u7cbe\u5fc3\u8bbe\u8ba1\uff08\u97f3\u9ad8\u4e3b\u9898\uff0c\u6301\u7eed\u65f6\u95f4\u4e3b\u9898\uff0c\u53c2\u8003=4\uff0c\u6b65\u6570=[-1\uff0c-1\uff0c-1]\uff0c\u97f3\u9636=[5,7,8,10,0,1,4]\uff0c\u4f4d\u7f6e=&#39\uff1b\u53f3&#39\uff1b\uff0c\u6bd4\u7387=1/4\uff09\n\u788e\u7247\u5316\u662f\u5c06\u4e00\u4e2a\u4e3b\u9898\u5206\u89e3\u6210\u51e0\u4e2a\u8f83\u77ed\u7684\u4e3b\u9898\uff0c\u6216\u4ece\u4e00\u4e2a\u4e3b\u9898\u4e2d\u63d0\u53d6\u4e00\u4e2a\u7247\u6bb5\u3002ch0p1n\u4e2d\u76f8\u5e94\u7684\u51fd\u6570\u662fdivide\uff08\uff09\u548cfragment\uff08\uff09\u3002\n\u97f3\u9ad8\u4e3b\u9898=[82,84,85,81,82,78]+[77]*4+[78,77,75,72,73,70]\u6301\u7eed\u65f6\u95f4\u4e3b\u9898=[0.5]*6+[1]*4+[0.5]*4+[2,1]\n\u4f7f\u7528divide\uff08\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u56fe\u6848\u5206\u6210\u4e09\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u8f83\u77ed\u56fe\u6848\uff1a\n&gt&gt&gt\uff1b\u4e3b\u9898[\uff08[82,84,85,81,82,78,77]\uff0c[0.5,0.5,0.5,0.5,0.5,1]\uff09\uff0c\uff08[77,77,77,78,77]\uff0c[1,1,1,0.5,0.5]\uff0c[75,72,73,70]\uff0c[0.5,0.5,2,1]\uff09]\n\u6765\u81each0p1n\u3002motif import fragment motif=fragment\uff08\u97f3\u9ad8\u3001\u6301\u7eed\u65f6\u95f4\u3001\u5f00\u59cb=6\u3001\u7ed3\u675f=9\u3001\u6bd4\u7387=1/2\u3001\u9002\u5408\u5ea6=&#39\uff1b\u53f3&#39\uff1b\uff09\u663e\u793a\uff08[motif[0]\uff0c[motif[1]\uff0c[key=-5\uff0cmeter=&#39\uff1b6/4&#39\uff1b\uff09\n\u53c2\u6570start\u548cend\u6307\u5b9a\u7247\u6bb5\u7684\u5f00\u59cb\u6ce8\u91ca\u548c\u7ed3\u675f\u6ce8\u91ca\u3002\u6bd4\u7387=1/2\u8868\u793a\u7247\u6bb5\u7684\u957f\u5ea6\u5e94\u8be5\u662f\u539f\u59cb\u56fe\u6848\u768450%\uff0c\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cfit=&#39\uff1b\u53f3&#39\uff1b\u8868\u793a\u5c3e\u97f3\u5e94\u8be5\u5ef6\u957f\u3002\n\u73b0\u5728\u662f\u65f6\u5019\u628a\u8fd9\u4e00\u5207\u653e\u5728\u4e00\u8d77\u4e86\u3002\u9996\u5148\uff0c\u6211\u4eec\u8bd5\u7740\u7528\u5c11\u91cf\u7684\u6750\u6599\uff0c\u5728\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u64cd\u4f5c\u4e0b\uff0c\u751f\u6210\u8d1d\u591a\u82ac\u594f\u9e23\u66f2\u7684\u5f00\u5934\u3002\n\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\u5e76\u4f7f\u6a21\u5f0f\u66f4\u52a0\u6e05\u6670\uff0c\u6211\u5c06\u4ece\u539f\u59cb\u4e50\u8c31\u4e2d\u5220\u9664\u542b\u7cca\u3001\u53d1\u97f3\u3001\u52a8\u6001\u3001\u4f18\u96c5\u97f3\u7b26\u548c\u5176\u4ed6\u4e00\u4e9b\u97f3\u7b26\uff1a\n\u8fd9\u9996\u66f2\u5b50\u7531\u4e24\u4e2a\u58f0\u90e8\u6216\u4e50\u8c31\u7ec4\u6210\uff0c\u9ad8\u97f3\u7ba1\u4e2d\u7684\u65cb\u5f8b\u7ebf\u548c\u4f4e\u97f3\u7ba1\u4e2d\u7684\u4f34\u594f\u7ebf\u3002\n\u603b\u4e4b\uff0c\u8981\u521b\u4f5c\u8d1d\u591a\u82ac\u594f\u9e23\u66f2\u7684\u5f00\u5934\uff0c\u6838\u5fc3\u6750\u6599\u662f\n\u65cb\u5f8b\u97f3\u9ad8\u4e3b\u9898=[65,68,72,77,80,77]\u65cb\u5f8b\u97f3\u957f\u4e3b\u9898=[1,1,1,1,2,2]\n#Fm\uff0cC7\uff0cFm\uff0cC7\uff0cFm\uff0cGdim\uff0cC7\u548c\u58f0=[[5,8,0]\uff0c[0,4,7,10]\uff0c[5,8,7,10]\uff0c[5,8,0]\uff0c[7,10,1]\uff0c[0,4,7,10]#F\u8c10\u6ce2\u5c0f\u8c03\u97f3\u9636=[5,7,8,10,0,1,4]\ndef\u751f\u6210\u8d1d\u591a\u82ac\u594f\u9e23\u66f2\uff08\u65cb\u5f8b\u3001\u97f3\u9ad8\u3001\u65cb\u5f8b\u3001\u97f3\u957f\u3001\u4f34\u594f\u3001\u4f34\u594f\u3001\u97f3\u9ad8\u3001\u548c\u58f0\u3001\uff0c\n......", "note_en": "In this blog, I will introduce my approach to automatic musical composition, including the theory, the algorithm, and a Python package implementation  ch0p1n.\n   As a trivial example, imagine that you put a cat on a piano to randomly press keys to generate music. The music is thus the result of a predetermined algorithm rather than of your instantaneous emotions or compositional skills. This is why it is called  automatic composition.\n Automatic composition has many different approaches or paradigms.  1 The approach I take is inspired by the theories of Arnold Schoenberg, Heinrich Schenker and William Caplin. The key idea is that  music can develop or be generated from limited materials under some common operations. I will explain the theoretical foundation of my approach in the following three sections.\n  Let\u2019s see an example, the beginning of Beethoven\u2019s first piano sonata:\n       In fact, the structure in the blue frame can be generated by merely transposing the structure in the red one. Therefore, to compose this piece, I need only to create the structure in the red frame, then reuse or slightly modify it to generate the structure in the blue frame, rather than create both structures from scratch.\n The same situation happens in other parts too. As indicated below, the four framed structures are also highly similar:\n  Does this kind of reuse exist only in Beethoven\u2019s music? No, this probably happens in every musical work.  No matter how long a musical work lasts or how varied it can sound, the amount of its core materials is always small.\n   Sometimes, however, a material can be modified so much that you can barely recognize it, as in the following example, the beginning of Chopin\u2019s nocturne Op.9 No.1:\n     The two framed structures look and sound quite different, but, in my approach, it is still that the structure in the blue frame can be generated by elaborating the structure in the red one, rather than that they are totally unrelated. It is so because the two structures have some morphological characteristics in common, they have the same background harmonic progression, and from the perspective of musical form, the structure in the blue frame is indeed a repetition of the structure in the red one.  2\n Please note that, in stating that a structure can be generated from other structure, I do not assert that Beethoven or Chopin actually did this or deliberately did this when composing music. Rather, my point is that we can use this music generation perspective to formalize or automate the process of musical composition.\n  Once a structure is created, some common operations can be applied to them to generate new structures. I will talk about some operations below.\n The first operation I will talk about is  repetition. It means repeating a structure in a new harmony without changing its morphology.\n   The structure in the blue frame is a  transposition of the structure in the red one. The two structures have the same morphology, although they are adapted to different background harmonies.\n The Chopin\u2019s nocturne is another example. The accompaniment motif in the blue frame is a repetition of the one in the red frame:\n  In the repetition, some pitches move to their nearest pitches to fit the new harmony, according to some  voice-leading rules.  3 Some of these changes are indicated below:\n     The next operation is  elaboration. It means adding passing notes, neighbor notes, and other types of notes to a structure. The Chopin\u2019s nocturne is an example, in which a lot of tuplets are added in the repetition:\n  Sometimes, elaborations are rather inferred from than showed in scores. Heinrich Schenker\u2019s theory differentiates music\u2019s superficial structure from its deep structure(s), and the superficial structure is the outcome of elaboration of a deep structure, as showed in the following example:  4\n  In the above score, for example, piece b can be generated by elaborating piece c.\n The opposite operation of elaboration is  reduction. For example, in the above score, piece b can be reduced to piece c.\n The last operation I will talk about is  fragmentation. It means taking a fragment from a material.\n As in the Beethoven\u2019s sonata, the structure in the blue frame is a fragment from the structure in the red one:\n       The fragment in the red frame can be modified to generate the structure in the orange frame; the fragment in the blue frame can be modified to generate the structures in the green frames. The two fragments are taken from the structure in the purple frame.\n There are more operations can be applied to musical materials, but I will stop here. The four operations I have introduced are enough for the purpose of this blog.\n  Created and generated structures can be combined into larger structures, according to musical forms. A  musical form is a way in which musical materials should be organized.\n For example, the beginning of the Beethoven\u2019s sonata has the form  sentence. Below is how this sentence is analyzed in William Caplin\u2019s system:  2\n  The beginning of the Chopin\u2019s nocturne is from a larger structure of the form  compound period, which is far more complex than sentence.\n I will not go deep into the subject of musical forms here. I highly recommend William Caplin\u2019s excellent textbook  2 on this topic. My key point is that musical materials should be combined according to musical forms to generate meaningful music.\n      We first need to strictly define musical  materials and  structures, which we have been talking about quite vaguely.\n Let\u2019s return to the Beethoven\u2019s sonata. Below is its first two bars:\n  This piece of music has two voices or musical lines. Each musical line consists of notes, rests or chords which consist of notes too. A note has several attributes, among which only pitch and duration will be considered here. Rather than represent notes as single objects, we will handle their pitch and durational contents separately.\n Pitches can be represented by  scientific pitch notations or  MIDI note numbers. Mostly, the latter are used, for ease of operation. For example, pitch C4 is represented by MIDI note number 60.\n  The pitch contents of a  chord can be represented by list in Python. For example, in Python we can use  [&#39;C4&#39;, &#39;A-3&#39;, &#39;F3&#39;] or  [60, 56, 53] to represent the pitch contents of the chord in the red frame:\n  Durations can be represented by numbers. For example, quarter note\u2019s duration is 1.\n The pitch contents of a  musical line can be represented by what I call  pitch line. In Python, a pitch line is a list whose members are  None, numbers or lists of numbers. With Python package  typing, pitch line can be defined as:\n  The durational contents of a musical line can be represented by  duration line. In Python, a duration line is a list whose members are numbers.\n Finally,  harmonies and  scales can be represented by lists of  pitch classes. For example, in Python C major harmony can be represented by  [&#39;C&#39;, &#39;E&#39;, &#39;G&#39;] or  [0, 4, 7].\n  You may have heard this term a lot. A  motif is structurally a musical line, usually short in length. Motifs are the building blocks of music. They can be repeated, elaborated, fragmented and combined to generate music.\n For example, the following is how Schoenberg analysed the beginning of the Beethoven\u2019s sonata:  5\n  In his analysis, the melody part of this piece can be generated from only three motifs.\n There are different kinds of motifs. For example, two kinds of motifs are framed in the following score:\n  The motifs in the red frames can be called  accompaniment motifs as they appear in the accompaniment line of this nocturne. They can also be called  harmonic motifs as they consist of only harmonic notes. The motifs in the blue frames can be called  melodic motifs as they appear in the melody line, or  non-harmonic motifs if they contain non-harmonic notes.\n In the following several sections, I will talk about the implementation of the common operations that can be applied to motifs.\n  The function  transpose() from my Python package  ch0p1n is for transposing a motif along a scale.\n  pitch_motif  =  [ 60 ,  67 ,  76 ,  72 ] # [&#39;C4&#39;, &#39;G4&#39;, &#39;E5&#39;, &#39;C5&#39;] duration_motif  =  [ 1 ,  1 ,  1 ,  1 ]\n  We can show this motif in score with  show(), which is built on Python package  music21:\n from  ch0p1n.utils  import  show show (  pitch_lines  =  [ pitch_motif ],  duration_lines  =  [ duration_motif ],  group  =  1 ,  # the number of voices in the treble staff  key  =  0 ,  meter  =  &#39;4/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n   from  ch0p1n.motif  import  transpose pitch_motif_transposed  =  transpose (  pitch_motif  =  pitch_motif ,  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  step  =  1 )\n   show (  pitch_lines  =  [ pitch_motif_transposed ],  duration_lines  =  [ duration_motif ],  group  =  1 ,  # the number of voices in the treble staff  key  =  0 ,  meter  =  &#39;4/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n  It looks good. Every pitch has moved up by one step along the C major scale.\n Since harmony is a special kind of scale, we can use  transpose() to repeat the motif in a harmony, say, the G major harmony:\n pitch_motif_transposed  =  transpose (  pitch_motif  =  pitch_motif ,  scale  =  [ 7 ,  11 ,  2 ],  # G major harmony  step  =  1 )\n  show (  pitch_lines  =  [ pitch_motif  +  pitch_motif_transposed ],  duration_lines  =  [ duration_motif  *  2 ],  group  =  1 ,  key  =  0 ,  meter  =  &#39;4/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n  The original motif is in the first bar, and the transposed the second. You can see how each pitch moves up by one step in the G major harmony.\n In some cases, however,  transpose() does not work well. Still in the above example, suppose we transpose the motif down rather than up by one step with  step = -1:\n  The transposed motif in the second bar is not acceptable because it contains no pitch class G to fully reify the G major harmony.\n  We can improve this situation with function  lead() from  ch0p1n. The function got its name from the concept of voice-leading, which means every note in a motif  leads by step to the note(s) in a given harmony.\n  from  ch0p1n.motif  import  lead pitch_motifs  =  lead (  pitch_motif  =  pitch_motif ,  harmony  =  [ 7 ,  11 ,  2 ],  # G major harmony  steps  =  [ - 1 ,  0 ],  complete  =  False ,  similar  =  None )\n steps = [-1, 0] means each pitch will move zero step if it fits the harmony, and at the same time one step downwards. In other words, each pitch may generate more than one pitch in the given harmony under  lead(), and the result returned is thus a list of pitch motifs rather than a single one. I will talk about parameters  complete and  similar later.\n    # to merge `pitch_motifs` from  itertools  import  chain show (  pitch_lines  =  [ list ( chain ( * pitch_motifs ))],  duration_lines  =  [ duration_motif  *  2 ],  group  =  1 ,  key  =  0 ,  meter  =  &#39;4/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n  While the motif in the first bar is as same as the unacceptable one generated by  transpose() with  step = -1, the motif in the second bar is good, which fully reifies the G major harmony.\n With  complete = True, we can screen out the pitch motifs which are not harmonically complete or do not fully reify the given harmony:\n pitch_motifs  =  lead (  pitch_motif  =  pitch_motif ,  harmony  =  [ 7 ,  11 ,  2 ],  steps  =  [ - 1 ,  0 ],  complete  =  True ,  similar  =  None )\n   With parameter  similar, we can screen out the pitch motifs which do not have the same contour as the original one. I will skip this part in this introductory blog.\n  The function  thread() is for repeating a motif in consecutive harmonies or  threading a motif through harmonies. Let\u2019s try it on the motif defined earlier:\n from  ch0p1n.motif  import  thread pitch_motifs  =  thread (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  harmonies  =  [[ 5 ,  9 ,  0 ],  [ 7 ,  11 ,  2 ]],  # F, G  durations  =  [ 2 ,  2 ],  steps  =  [ 1 ] ) show (  pitch_lines  =  pitch_motifs ,  duration_lines  =  [ duration_motif ],  group  =  1 ,  key  =  0 ,  meter  =  &#39;2/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n  The first two notes of the motif are adapted to the F major harmony, while the last two notes to the G major harmony.\n So far, I have talked only about harmonic motifs. To deal with non-harmonic motifs, which is more complex, we need first to consider how to elaborate motifs.\n  Simply speaking, elaboration is adding notes to a motif. The function  elaborate() from  ch0p1n serves the exact purpose.\n  from  ch0p1n.motif  import  elaborate motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ - 1 ,  - 1 ],  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;left&#39; )\n  show (  pitch_lines  =  [ pitch_motif  +  motif [ 0 ]],  duration_lines  =  [ duration_motif  +  motif [ 1 ]],  group  =  1 ,  key  =  0 ,  meter  =  &#39;4/4&#39; ,  clefs  =  [ &#39;g&#39; ,  &#39;f&#39; ] )\n    The argument  reference indicates where to add notes or elaborate the motif. For example,  reference = 2 means the notes are added at the third note. We can elaborate the last note instead:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  3 ,  # the last note  steps  =  [ - 1 ,  - 1 ],  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;left&#39; )\n  The argument  steps specifies the pitches of the notes to add. For example,  steps = [-1, -1] indicates that the reference note should move one step downwards to generate the first note, then this note should move one step downwards to generate the second note. Let\u2019s add three descending notes with this argument:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ 1 ,  1 ,  1 ],  # three descending notes  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;left&#39; )\n  With  steps, you can also repeat some note or add rests to a motif, as in the following example:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ 0 ,  0 ,  None ]  # repeat the note twice then add a rest )\n  The argument  scale specifies the scale along which to move the reference note to generate the notes to add. For example,  scale = [0, 2, 4, 5, 7, 9, 11] indicates that it is the C major scale. We can use C chromatic scale instead:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ - 1 ,  - 1 ],  scale  =  list ( range ( 12 )),  # C chromatic scale  position  =  &#39;left&#39; )\n  The argument  position specifies the position of the added notes relative to the reference note. For example,  position = &#39;left&#39; indicates that the notes are added at the left side of the reference note. We can add the notes at the right side:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ - 1 ,  - 1 ],  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;right&#39;  # add the notes at the right side )\n  Please note that, with  &#39;left&#39; and  &#39;right&#39;, the added notes take durations from the reference note. If you want that the durations are taken from the note before or after the reference note, use  &#39;previous&#39; or  &#39;next&#39;. For example,\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ - 1 ,  - 1 ],  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;previous&#39;  # take durations from the previous note )\n  The argument  ratio specifies the percentage of duration the added notes take. For example,  ratio = 1/2 means that the added notes take 50% of the duration of the reference note:\n motif  =  elaborate (  pitch_motif  =  pitch_motif ,  duration_motif  =  duration_motif ,  reference  =  2 ,  steps  =  [ - 1 ,  - 1 ],  scale  =  [ 0 ,  2 ,  4 ,  5 ,  7 ,  9 ,  11 ],  position  =  &#39;left&#39; ,  ratio  =  1 / 2  # take 50% of the duration of the reference note )\n   Reduction is the opposite of elaboration. It is removing notes from a motif. The corresponding function from  ch0p1n is  reduce().\n    from  ch0p1n.motif  import  reduce motif  =  reduce (  pitch_motif  =  motif [ 0 ],  duration_motif  =  motif [ 1 ],  start  =  2 ,  end  =  3 ,  position  =  &#39;right&#39; )\n  The arguments  start and  end specify the notes to remove. The argument  position specifies the reference note to which to add the durations of the removed notes.\n    The background harmony is Fm, and the circled notes are non-harmonic since they do not fit the harmony.\n     pitch_motif  =  [ 65 ,  68 ,  72 ,  77 ,  80 ,  79 ,  77 ,  76 ,  77 ,  None ] duration_motif  =  [ 1 ,  1 ,  1 ,  1 ,  1.5 ,  1 / 6 ,  1 / 6 ,  1 / 6 ,  1 ,  1 ]\n  pitch_motif ,  duration_motif  =  reduce (  pitch_motif ,  duration_motif ,  start  =  5 ,  end  =  7 ,  position  =  &#39;left&#39; ) # the same below show (  [ pitch_motif ],  [ duration_motif ],  key  =  - 4 )\n      pitch_motif ,  duration_motif  =  elaborate (  pitch_motif ,  duration_motif ,  reference  =  4 ,  steps  =  [ - 1 ,  - 1 ,  - 1 ],  scale  =  [ 5 ,  7 ,  8 ,  10 ,  0 ,  1 ,  4 ],  position  =  &#39;right&#39; ,  ratio  =  1 / 4 )\n   Fragmentation is breaking a motif up into several shorter motifs or taking a fragment from a motif. The corresponding functions from  ch0p1n are  divide() and  fragment().\n    pitch_motif  =  [ 82 ,  84 ,  85 ,  81 ,  82 ,  78 ]  +  [ 77 ] * 4  +  [ 78 ,  77 ,  75 ,  72 ,  73 ,  70 ] duration_motif  =  [ 0.5 ] * 6  +  [ 1 ] * 4  +  [ 0.5 ] * 4  +  [ 2 ,  1 ]\n With  divide(), we can divide this motif into, say, three shorter motifs of equal length:\n  &gt;&gt;&gt;  motifs [  ([ 82 ,  84 ,  85 ,  81 ,  82 ,  78 ,  77 ],  [ 0.5 ,  0.5 ,  0.5 ,  0.5 ,  0.5 ,  0.5 ,  1 ]),  ([ 77 ,  77 ,  77 ,  78 ,  77 ],  [ 1 ,  1 ,  1 ,  0.5 ,  0.5 ]),  ([ 75 ,  72 ,  73 ,  70 ],  [ 0.5 ,  0.5 ,  2 ,  1 ]) ]\n       from  ch0p1n.motif  import  fragment motif  =  fragment (  pitch_motif ,  duration_motif ,  start  =  6 ,  end  =  9 ,  ratio  =  1 / 2 ,  fit  =  &#39;right&#39; ) show ([ motif [ 0 ]],  [ motif [ 1 ]],  key  =  - 5 ,  meter  =  &#39;6/4&#39; )\n  The arguments  start and  end specify the start note and the end note of the fragment.  ratio = 1/2 indicates that the fragment\u2019s length should be 50% of the original motif, and to accomplish this,  fit = &#39;right&#39; indicates that the end note should be prolonged.\n  Now it is time to put it all together. Let\u2019s first try to generate the beginning of the Beethoven\u2019s sonata from a small amount of materials, under the operations that we have been talking about.\n To simplify the problem and to make patterns more discernible, I will remove slurs, articulations, dynamics, grace notes, and some other notes from the original score:\n  This piece consists of two voices or musical lines, the melody line in the treble staff and the accompaniment line in the bass staff.\n         In summary, to generate the beginning of the Beethoven\u2019s sonata, the core materials are\n    melodic_pitch_motif  =  [ 65 ,  68 ,  72 ,  77 ,  80 ,  77 ] melodic_duration_motif  =  [ 1 ,  1 ,  1 ,  1 ,  2 ,  2 ]\n    # Fm, C7, Fm, C7, Fm, Gdim, C7 harmonies  =  [  [ 5 ,  8 ,  0 ],  [ 0 ,  4 ,  7 ,  10 ],  [ 5 ,  8 ,  0 ],  [ 0 ,  4 ,  7 ,  10 ],  [ 5 ,  8 ,  0 ],  [ 7 ,  10 ,  1 ],  [ 0 ,  4 ,  7 ,  10 ] ] # F harmonic minor scale scale  =  [ 5 ,  7 ,  8 ,  10 ,  0 ,  1 ,  4 ]\n  def  generate_beethoven_sonata (  melodic_pitch_motif ,  melodic_duration_motif ,  accompaniment_pitch_motif ,  accompaniment_duration_motif ,  harmonies , \n......", "posttime": "2022-02-15 16:20:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f5c\u66f2,automatic,\u97f3\u9ad8", "title": "\u6211\u7684\u81ea\u52a8\u4f5c\u66f2\u65b9\u6cd5", "title_en": "My approach to automatic musical composition", "transed": 1, "url": "https://flujoo.github.io/en/my-approach-to-automatic-musical-composition/", "via": "", "real_tags": ["\u4f5c\u66f2", "automatic", "\u97f3\u9ad8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073471, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Matt Mullenweg\u662fWordPress\u80cc\u540e\u7684Automattic\u516c\u53f8\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u3002com\u8ba8\u8bba\u4e86\u201c\u5f02\u6b65\u5de5\u4f5c\u201d\u4ee5\u53ca\u4ed6\u8ba4\u4e3a\u6df7\u5408\u6a21\u5f0f\u5c06\u6d88\u4ea1\u7684\u539f\u56e0\n\u4e16\u754c\u5404\u5730\u7684\u516c\u53f8\u90fd\u5728\u52aa\u529b\u5bfb\u627e\u5de5\u4f5c\u7684\u672a\u6765\u3002Matt Mullenweg\u662fWordPress\u80cc\u540e\u7684Automattic\u516c\u53f8\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u3002com\u8bf4\uff0c\u4ed6\u7684\u5458\u5de5\u4eec\u5df2\u7ecf\u8fc7\u4e0a\u4e86\u8fd9\u79cd\u751f\u6d3b\u3002\n\u5728\u75ab\u60c5\u671f\u95f4\uff0c\u8bb8\u591a\u767d\u9886\u5df2\u7ecf\u4e60\u60ef\u4e86\u4e0d\u6b63\u5e38\u7684\u5de5\u4f5c\u65f6\u95f4\uff0c\u4ed6\u4eec\u6253\u4e71\u4e86\u4f20\u7edf\u76849-5\u4e0a\u73ed\u65f6\u95f4\uff0c\u4ee5\u9002\u5e94\u7167\u987e\u5b69\u5b50\u6216\u5176\u4ed6\u8d23\u4efb\u3002\u81eaAutomattic 2005\u5e74\u6210\u7acb\u4ee5\u6765\uff0c\u8fd9\u79cd\u7075\u6d3b\u6027\u4e00\u76f4\u662f\u5e38\u6001\u3002Automattic\u662f\u6240\u8c13\u7684\u5f02\u6b65\u5de5\u4f5c\u7684\u5148\u9a71\uff0c\u5b83\u4e0d\u4ec5\u4e3a\u5de5\u4eba\u63d0\u4f9b\u4e86\u4f4d\u7f6e\u4e0a\u7684\u7075\u6d3b\u6027\uff0c\u8fd8\u4e3a\u4ed6\u4eec\u7684\u5de5\u4f5c\u65f6\u95f4\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\u3002\u8be5\u516c\u53f8\u572897\u4e2a\u56fd\u5bb6\u62e5\u67091876\u540d\u5458\u5de5\uff0c\u4ed6\u4eec\u5728\u201c\u5f02\u6b65\u201d\u7684\u57fa\u7840\u4e0a\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u4ee5\u81ea\u884c\u8bbe\u5b9a\u65f6\u95f4\u8868\u3002\u867d\u7136\u4ed6\u4eec\u5fc5\u987b\u5b9e\u73b0\u76ee\u6807\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u63a7\u5236\u81ea\u5df1\u7684\u5de5\u4f5c\u65f6\u95f4\u548c\u5de5\u4f5c\u91cf\u3002\n\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5c06\u5411\u60a8\u6536\u53d6$+\u7a0e\uff08\u5982\u679c\u9002\u7528\uff09\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u90e8\u66f4\u6539\u8d26\u5355\u504f\u597d\u3002\u5982\u679c\u8d39\u7387\u6216\u6761\u6b3e\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff0c\u60a8\u5c06\u63d0\u524d\u6536\u5230\u901a\u77e5\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u81f4\u7535\u5ba2\u670d\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "Work     Matt Mullenweg, founder and CEO of Automattic, the company behind WordPress.com, talks about \u2018asynchronous work\u2019 and why he thinks hybrid models will die out\n   Companies everywhere are struggling to figure out the future of work. Matt Mullenweg, founder and CEO of Automattic, the company behind WordPress.com, says his employees  are already living it.\n  During the pandemic, many white-collar workers grew accustomed to  working unusual hours, scrambling their traditional 9-5 schedules to adjust for childcare or other responsibilities. Since Automattic\u2019s 2005 founding, such flexibility has been the norm. Automattic was a pioneer of so-called asynchronous work, which offers workers not only flexibility on their location, but on their hours, too. The company has 1,876 employees in 97 countries who work on an \u201casynchronous\u201d basis, meaning they set their own schedules. While they must hit their goals, they control when and how much they work.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2022-02-15 16:13:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6267\u884c\u5b98,lets", "title": "\u9996\u5e2d\u6267\u884c\u5b98\u8ba9\u4ed6\u7684\u5458\u5de5\u968f\u65f6\u968f\u5730\u5de5\u4f5c\u2014\u2014\u65e0\u8bba\u4ed6\u4eec\u60f3\u5728\u54ea\u91cc\u5de5\u4f5c", "title_en": "CEO Lets His Employees Work Whenever They Want\u2013From Wherever They Want", "transed": 1, "url": "https://www.wsj.com/articles/the-next-wave-in-remote-work-flexibility-in-locationand-hours-11643993475", "via": "", "real_tags": ["\u6267\u884c\u5b98", "lets"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073470, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0cGiveSendGo\u7684\u7f51\u7ad9\u79f0\u5176\u5904\u4e8e\u201c\u7ef4\u62a4\u4e2d\u201d\uff0c\u51e0\u5c0f\u65f6\u540e\u8be5\u7f51\u7ad9\u88ab\u52ab\u6301\u5e76\u91cd\u5b9a\u5411\u5230\u636e\u4fe1\u7531\u9ed1\u5ba2\u63a7\u5236\u7684\u9875\u9762\uff0c\u8be5\u9875\u9762\u4e0d\u518d\u52a0\u8f7d\u3002\u91cd\u5b9a\u5411\u7684\u9875\u97622019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\uff0c\u4ed6\u4eec\u5728\u52a0\u62ff\u5927\u9996\u90fd\u7684\u5361\u8f66\u53f8\u673a\u53cd\u5bf9\u5f3a\u5236\u6027\u7684CVID-19\u75ab\u82d7\u63a5\u79cd\uff0c\u9020\u6210\u4ea4\u901a\u548c\u8d38\u6613\u7684\u5e7f\u6cdb\u7834\u574f\u8d85\u8fc7\u4e00\u5468\u3002\n\u8be5\u9875\u9762\u8fd8\u5305\u542b\u4e00\u4e2a\u94fe\u63a5\uff0c\u6307\u5411\u4e00\u4e2a\u5305\u542b\u6570\u4e07\u6761\u8bb0\u5f55\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u8bb0\u5f55\u88ab\u79f0\u4e3a\u201c\u539f\u59cb\u6350\u8d60\u6570\u636e\u201d\uff0c\u6d89\u53ca\u90a3\u4e9b\u5411\u81ea\u7531\u62a4\u822a\u961f\u6350\u6b3e\u7684\u4eba\u3002\n\u4e0d\u4e45\u540e\uff0c\u975e\u8425\u5229\u6cc4\u5bc6\u7f51\u7ad9Distributed Denial of Secrets\u8868\u793a\uff0c\u5b83\u4eceGiveSendGo\u6536\u5230\u4e8630\u5146\u5b57\u8282\u7684\u6350\u8d60\u8005\u4fe1\u606f\uff0c\u5305\u62ec\u81ea\u6211\u62a5\u544a\u7684\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u90ae\u653f\u7f16\u7801\u548cIP\u5730\u5740\u3002\n\u5206\u5e03\u5f0f\u62d2\u7edd\u673a\u5bc6\u7f51\u7ad9\uff08Distributed Denial of Secrets\uff09\u8868\u793a\uff0c\u8fd9\u4e9b\u6570\u636e\u53ea\u4f1a\u63d0\u4f9b\u7ed9\u7814\u7a76\u4eba\u5458\u548c\u8bb0\u8005\u3002\u8be5\u7f51\u7ad9\u4ee5\u6258\u7ba1\u6d89\u53ca\u6781\u53f3\u7ffc\u56e2\u4f53\u7684\u4e00\u7cfb\u5217\u6cc4\u9732\u6570\u636e\u800c\u95fb\u540d\u3002\n\u636e\u8bb0\u8005\u7c73\u51ef\u5c14\u00b7\u5854\u4f26\uff08Mikael Thalen\uff09\u79f0\uff0c\u6b64\u6b21\u6f0f\u6d1e\u4e0e\u65e9\u4e9b\u65f6\u5019\u7684\u4e00\u6b21\u5b89\u5168\u6f0f\u6d1e\u662f\u4e0d\u540c\u7684\u3002\u5728\u90a3\u6b21\u5b89\u5168\u6f0f\u6d1e\u4e2d\uff0cGiveSendGo\u5c06\u4e00\u4e2a\u4e9a\u9a6c\u900a\u6258\u7ba1\u7684S3\u5b58\u50a8\u6876\u66b4\u9732\u5728\u4e86\u4e92\u8054\u7f51\u4e0a\uff0c\u5b58\u50a8\u4e86\u4e0a\u5343\u4efd\u8eab\u4efd\u8bc1\u4ef6\u3002\u5854\u4f26\u5728\u4e00\u591c\u4e4b\u95f4\u9996\u6b21\u62a5\u544a\u4e86\u6570\u636e\u6f0f\u6d1e\u3002\n\u4e0a\u4e2a\u6708\uff0c\u603b\u90e8\u4f4d\u4e8e\u9a6c\u8428\u8bf8\u585e\u5dde\u6ce2\u58eb\u987f\u7684GiveSendGo\u6210\u4e3a\u201c\u81ea\u7531\u62a4\u822a\u961f\u201d\u7684\u4e3b\u8981\u6350\u6b3e\u670d\u52a1\u673a\u6784\uff0cGoFundMe\u505c\u6b62\u4e86\u4f17\u5305\u6d3b\u52a8\uff0c\u5e76\u51bb\u7ed3\u4e86\u6570\u767e\u4e07\u7f8e\u5143\u7684\u6350\u6b3e\uff0c\u7406\u7531\u662f\u8b66\u65b9\u62a5\u544a\u79f0\u6e25\u592a\u534e\u5404\u5730\u53d1\u751f\u4e86\u66b4\u529b\u4e8b\u4ef6\u3002\u4e0a\u5468\u672b\uff0c\u52a0\u62ff\u5927\u4e00\u5bb6\u6cd5\u9662\u53d1\u5e03\u547d\u4ee4\uff0c\u7981\u6b62\u4f7f\u7528GiveSendGo\u52df\u96c6\u7684\u8d44\u91d1\uff0c\u8be5\u516c\u53f8\u8868\u793a\u5c06\u5bf9\u6b64\u8fdb\u884c\u6297\u8fa9\u3002\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u6297\u8bae\u8005\u4e3a\u81ea\u7531\u8f66\u961f\u7b79\u96c6\u4e86800\u591a\u4e07\u7f8e\u5143\u3002\n\u66f4\u65b0\u4ee5\u6f84\u6e05\u5206\u5e03\u5f0f\u62d2\u7edd\u673a\u5bc6\u7684\u6570\u636e\u662f\u9488\u5bf9\u81ea\u7531\u62a4\u822a\u6570\u636e\u7684\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u6bcf\u4e00\u573a\u6218\u5f79\u3002", "note_en": "On Monday, GiveSendGo\u2019s website said it was \u201cunder maintenance,\u201d hours after the site was hijacked and redirected to a page believed to be controlled by the hackers, which no longer loads. The redirected page condemned the truckers who descended on Canada\u2019s capital to oppose mandatory COVID-19 vaccinations, causing widespread disruption to traffic and trade for more than a week.\n The page also contained a link to a file containing tens of thousands of records of what was described as \u201craw donation data\u201d about those who donated to the Freedom Convoy.\n  A short time later, nonprofit leak site Distributed Denial of Secrets said it had received 30 megabytes of donor information from GiveSendGo, including self-reported names, email addresses, ZIP codes and IP addresses.\n Distributed Denial of Secrets, a site known for hosting sets of leaked data involving far-right groups, said that the data would only be provided to researchers and journalists.\n   The breach is separate from an earlier security lapse, in which GiveSendGo left exposed to the internet an Amazon-hosted S3 bucket  storing over a thousand identity documents, according to journalist Mikael Thalen, who  first reported the data breach overnight.\n The Boston, Massachusetts-based GiveSendGo became the primary donation service for the \u201cFreedom Convoy\u201d last month after GoFundMe halted the crowdsourcing campaign and froze millions of dollars in donations, citing police reports of violence across Ottawa. Over the weekend, a Canadian court issued an order halting access to the funds collected by GiveSendGo, which the company said it would defy.\n Earlier in the month, the protesters raised more than $8 million for the Freedom Convoy.\n Updated to clarify that the data given to Distributed Denial of Secrets was for the Freedom Convoy data, not every campaign.", "posttime": "2022-02-15 16:12:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u6350\u8d60\u8005,leak,\u6570\u636e", "title": "GiveSendGo\u5165\u4fb5\u540e\uff0c\u9ed1\u5ba2\u6cc4\u9732\u4e86\u201c\u81ea\u7531\u62a4\u822a\u201d\u6350\u8d60\u8005\u7684\u540d\u5b57", "title_en": "Hackers leak names of \u2018Freedom Convoy\u2019 donors after GiveSendGo breach", "transed": 1, "url": "https://techcrunch.com/2022/02/14/freedom-convoy-donor-leak-givesendgo/", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u6350\u8d60\u8005", "leak", "\u6570\u636e"]}]
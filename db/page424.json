[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1030064, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5dee\u5206\u6570\u636e\u6d41\u80cc\u540e\u7684\u52a8\u673a\u548c\u6280\u672f\u7ec6\u8282\uff0c\u5dee\u5206\u6570\u636e\u6d41\u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u5b9e\u65f6\u6570\u636e\u6d41\u4e4b\u4e0a\u7684\u8ba1\u7b97\u6846\u67b6\uff0c\u65e8\u5728\u9ad8\u6548\u5730\u5bf9\u5927\u91cf\u6570\u636e\u6267\u884c\u8ba1\u7b97\uff0c\u5e76\u5728\u6570\u636e\u66f4\u6539\u65f6\u7ef4\u62a4\u8ba1\u7b97\u3002\n\u5dee\u5206\u6570\u636e\u6d41\u7a0b\u5e8f\u770b\u8d77\u6765\u50cf\u8bb8\u591a\u6807\u51c6\u7684\u5927\u6570\u636e\u8ba1\u7b97\uff0c\u501f\u9274\u4e86MapReduce\u548cSQL\u7b49\u6846\u67b6\u7684\u4e60\u60ef\u7528\u6cd5\u3002\u4f46\u662f\uff0c\u4e00\u65e6\u60a8\u7f16\u5199\u5e76\u8fd0\u884c\u7a0b\u5e8f\uff0c\u60a8\u5c31\u53ef\u4ee5\u66f4\u6539\u8ba1\u7b97\u7684\u6570\u636e\u8f93\u5165\uff0c\u5e76\u4e14Differential DataFlow\u5c06\u7acb\u5373\u5728\u5176\u8f93\u51fa\u4e2d\u5411\u60a8\u663e\u793a\u76f8\u5e94\u7684\u66f4\u6539\u3002\u8fc5\u901f\u610f\u5473\u7740\u5728\u77ed\u77ed\u51e0\u6beb\u79d2\u5185\u3002\n\u8fd9\u79cd\u76f8\u5bf9\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u7f16\u5199\u7a0b\u5e8f\uff0c\u7136\u540e\u66f4\u6539\u8f93\u5165\uff0c\u5bfc\u81f4\u4e86\u4ee4\u4eba\u5174\u594b\u7684\u65b0\u7684\u53ef\u4f38\u7f29\u8ba1\u7b97\u7c7b\u7684\u8303\u56f4\u4e4b\u5e7f\uff0c\u4ee4\u4eba\u60ca\u8bb6\u3002\u6211\u4eec\u5c06\u5728\u672c\u6587\u6863\u4e2d\u5bf9\u5176\u8fdb\u884c\u63a2\u8ba8\uff01\n\u5dee\u5f02\u6570\u636e\u6d41\u6e90\u4e8e\u5fae\u8f6f\u7814\u7a76\u9662\u7684\u5de5\u4f5c\uff0c\u5728\u90a3\u91cc\u6211\u4eec\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u65e2\u53ef\u4ee5\u8ba1\u7b97\u53c8\u53ef\u4ee5\u589e\u91cf\u5730\u7ef4\u62a4\u975e\u5e73\u51e1\u7b97\u6cd5\u7684\u9ad8\u7ea7\u6846\u67b6\u3002", "note_en": "In this book we will work through the motivation and technical details behind  differential dataflow, a computational framework build on top of  timely dataflow intended for efficiently performing computations on large amounts of data and  maintaining the computations as the data change.\n Differential dataflow programs look like many standard &#34;big data&#34; computations, borrowing idioms from frameworks like MapReduce and SQL. However, once you write and run your program, you can  change the data inputs to the computation, and differential dataflow will promptly show you the corresponding changes in its output. Promptly meaning in as little as milliseconds.\n This relatively simple set-up, write programs and then change inputs, leads to a surprising breadth of exciting and new classes of scalable computation. We will explore it in this document!\n  Differential dataflow arose from  work at Microsoft Research, where we aimed to build a high-level framework that could both compute and incrementally maintain non-trivial algorithms.", "posttime": "2020-10-20 22:47:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5dee\u5206,differential,\u8ba1\u7b97", "title": "\u5dee\u5206\u6570\u636e\u6d41", "title_en": "Differential Dataflow", "transed": 1, "url": "https://timelydataflow.github.io/differential-dataflow/introduction.html", "via": "", "real_tags": ["\u5dee\u5206", "\u8ba1\u7b97"]}, {"category": "", "categoryclass": "", "imagename": "ebba69f4297e762af60b8f98f2e4d95d.png", "infoid": 1030063, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PyInstrument\u662f\u4e00\u4e2aPython\u5206\u6790\u5668\u3002\u5206\u6790\u5668\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4f18\u5316\u4ee3\u7801-\u4f7f\u5176\u901f\u5ea6\u66f4\u5feb\u3002\u8fd9\u542c\u8d77\u6765\u5f88\u660e\u663e\uff0c\u4f46\u662f\u8981\u83b7\u5f97\u6700\u5927\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u60a8\u5e94\u8be5\u4e13\u6ce8\u4e8e\u7a0b\u5e8f\u4e2d\u6700\u6162\u7684\u90e8\u5206\u3002PyInstrument\u4f1a\u5e2e\u52a9\u60a8\u627e\u5230\u5b83\uff01\n\u8981\u4eceGIT\u7b7e\u51fa\u8fd0\u884cPyInstrument\uff0c\u6709\u4e00\u4e2a\u6784\u5efa\u6b65\u9aa4\u3002\u770b\u770b\u5982\u4f55\u8d21\u732e\u66f4\u591a\u4fe1\u606f\u3002\n\u76f4\u63a5\u4ece\u547d\u4ee4\u884c\u8c03\u7528PyInstrument\u3002\u4e0d\u662f\u7f16\u5199python script.py\uff0c\u800c\u662f\u8f93\u5165pyInstrument script.py\u3002\u60a8\u7684\u811a\u672c\u5c06\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u4e14\u5728\u7ed3\u675f\u65f6(\u6216\u8005\u5f53\u60a8\u6309^C\u65f6)\uff0cPyInstrument\u5c06\u8f93\u51fa\u5f69\u8272\u6458\u8981\uff0c\u663e\u793a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u5728\u54ea\u91cc\u3002\n\u7528\u6cd5\uff1apyInstrument[\u9009\u9879]scriptfile[arg]...\u9009\u9879\uff1a--version show program\u7684\u7248\u672c\u53f7\u548cexit-h\uff0c--help\u663e\u793a\u6b64\u5e2e\u52a9\u6d88\u606f\u5e76\u9000\u51fa--load-prev=ID\u5982\u679c\u4e0d\u8fd0\u884c\u811a\u672c\uff0c\u8bf7\u52a0\u8f7d\u4ee5\u524d\u7684\u62a5\u8868-m module_name\u5c06\u5e93\u6a21\u5757\u4f5c\u4e3a\u811a\u672c\u8fd0\u884c\uff0c\u5982&#39\uff1bpython-m module&#39\uff1b-o OUTFILE\uff0c--outfile=OUTFILE save to&lt\uff1boutfile&gt\uff1b-r\u6e32\u67d3\u5668\uff0c--renender=\u6e32\u67d3\u5668\u5e94\u5982\u4f55\u5448\u73b0\u62a5\u8868\u3002\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\uff1atext&39\uff1b\u3001html&39\uff1b\u3001&#39\uff1bjson&39\uff1b\u6216\u5230\u6e32\u67d3\u5668\u7c7b\u7684python\u5bfc\u5165\u8def\u5f84-t\u3001--timeline\u5448\u73b0\u4e3a\u65f6\u95f4\u7ebf-\u4fdd\u7559\u987a\u5e8f\uff0c\u5e76\u4e14\u4e0d\u538b\u7f29\u91cd\u590d\u8c03\u7528--ide=expr glob\u6837\u5f0f\u6a21\u5f0f\uff0c\u5339\u914d\u8981\u9690\u85cf\u5176\u5e27\u7684\u6587\u4ef6\u8def\u5f84\u3002\u9ed8\u8ba4\u4e3a&#39\uff1b*/lib/*&#39\uff1b\u3002--Hide-regex=\u4e0e\u8981\u9690\u85cf\u5176\u5e27\u7684\u6587\u4ef6\u8def\u5f84\u5339\u914d\u7684REGEX regex\u3002\u5982\u679c--HIDE\u6ca1\u6709\u7ed9\u4e88\u8db3\u591f\u7684\u63a7\u5236\uff0c\u90a3\u5c31\u6709\u7528\u4e86\u3002--show-all(\u4ec5\u9650\u6587\u672c\u6e32\u67d3\u5668)\u663e\u793a\u5916\u90e8\u5e93\u4ee3\u7801--unicode(\u4ec5\u9650\u6587\u672c\u6e32\u67d3\u5668)\u5f3a\u5236Unicode\u6587\u672c\u8f93\u51fa--no-unicode(\u4ec5\u9650\u6587\u672c\u6e32\u67d3\u5668)\u5f3a\u5236ascii\u6587\u672c\u8f93\u51fa--color(\u4ec5\u9650\u6587\u672c\u6e32\u67d3\u5668)\u5f3a\u5236ansi\u5f69\u8272\u6587\u672c\u8f93\u51fa--no-color(\u4ec5\u9650\u6587\u672c\u6e32\u67d3\u5668)\u5f3a\u5236\u4e0d\u8f93\u51fa\u5f69\u8272\u6587\u672c\u3002\nProTip\uff1a-r html\u4f1a\u7ed9\u4f60\u4e00\u4e2aHTML\u683c\u5f0f\u7684\u4ea4\u4e92\u5f0f\u4e2a\u4eba\u8d44\u6599\u62a5\u544a--\u4f60\u771f\u7684\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u63a2\u7d22\uff01\n\u5b89\u88c5\u540e\uff0c\u5c06\uff1fPROFILE\u6dfb\u52a0\u5230\u8bf7\u6c42URL\u7684\u672b\u5c3e\u4ee5\u6fc0\u6d3b\u63a2\u67e5\u5668\u3002\u60a8\u7684\u8bf7\u6c42\u5c06\u7167\u5e38\u8fd0\u884c\uff0c\u4f46\u60a8\u4e0d\u4f1a\u5f97\u5230\u54cd\u5e94\uff0c\u800c\u662f\u4f1a\u5728\u7f51\u9875\u4e2d\u83b7\u5f97pyInstrument\u5bf9\u8bf7\u6c42\u7684\u5206\u6790\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199API\uff0c\u5f53\u60a8\u60f3\u8981\u5206\u6790\u67d0\u4e9b\u5185\u5bb9\u65f6\uff0c\u66f4\u6539URL\u5e76\u975e\u6613\u4e8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06PYINSTRUMENT_PROFILE_DIR=&#39\uff1bPROFILES=#39\uff1b\u6dfb\u52a0\u5230settings.py\u3002PyInstrument\u5c06\u5206\u6790\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u5e76\u5c06HTML\u8f93\u51fa\u4fdd\u5b58\u5230\u60a8\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5939\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\n\u5982\u679c\u8981\u6839\u636e\u8bf7\u6c42\u663e\u793a\u5206\u6790\u9875\u9762\uff0c\u53ef\u4ee5\u5c06PYINSTRUMENT_SHOW_CALLBACK\u5b9a\u4e49\u4e3a\u51fd\u6570\u7684\u865a\u7ebf\u8def\u5f84\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u786e\u5b9a\u662f\u5426\u5e94\u8be5\u663e\u793a\u9875\u9762\u3002\u60a8\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5df1\u7684\u51fd\u6570\u56de\u8c03(Request)\uff0c\u5b83\u5728settings.py\u4e2d\u8fd4\u56deTrue\u6216False\u3002\n\u4eceflask import Flask\uff0cg\uff0cmake_response\uff0c\u8bf7\u6c42app=flask(__Name__)@app\u3002BEFORE_REQUEST\u5b9a\u4e49BEFORE_REQUEST()\uff1a\u5982\u679c\u8bf7\u6c42\u4e2d\u7684&#34\uff1b\u914d\u7f6e\u6587\u4ef6&#34\uff1b\u3002\u53c2\u6570\uff1ag.profiler=profiler()g.profiler\u3002Start()@app\u3002AFTER_REQUEST\u5b9a\u4e49AFTER_REQUEST(Response)\uff1a\u5982\u679c\u6ca1\u6709hasattr(g\uff0c&#34\uff1bprofiler&#34\uff1b)\uff1a\u8fd4\u56de\u54cd\u5e94g.profiler\u3002Stop()output_html=g.profiler\u3002Output_html()\u8fd4\u56demake_response(Output_Html)\u3002\n\u8fd9\u5c06\u68c0\u67e5\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u7684\uff1fProfile\u67e5\u8be2\u53c2\u6570\uff0c\u5982\u679c\u627e\u5230\uff0c\u5219\u5f00\u59cb\u5206\u6790\u3002\u5728\u5206\u6790\u5668\u8fd0\u884c\u7684\u6bcf\u4e2a\u8bf7\u6c42\u4e4b\u540e\uff0c\u5b83\u521b\u5efahtml\u8f93\u51fa\u5e76\u8fd4\u56de\u8be5\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u54cd\u5e94\u3002\n\u6211\u5e0c\u671b\u6709\u66f4\u591a\u7684\u65b9\u5f0f\u4f7f\u7528PyInstrument\u8fdb\u884c\u5206\u6790--\u4f8b\u5982\u5176\u4ed6Web\u6846\u67b6\u3002\u9f13\u52b1\u4f7f\u7528PRS\uff01\nPyInstrument\u662f\u4e00\u4e2a\u7edf\u8ba1\u5206\u6790\u5668-\u5b83\u4e0d\u4f1a\u8ddf\u8e2a\u60a8\u7684\u7a0b\u5e8f\u8fdb\u884c\u7684\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u6bcf1ms\u8bb0\u5f55\u4e00\u6b21\u547c\u53eb\u5806\u6808\u3002\n\u4e0e\u5176\u4ed6\u5206\u6790\u5668\u76f8\u6bd4\uff0c\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4f18\u52bf\u3002\u9996\u5148\uff0c\u7edf\u8ba1\u5206\u6790\u5668\u6bd4\u8ddf\u8e2a\u5206\u6790\u5668\u5f00\u9500\u4f4e\u5f97\u591a\u3002\n\u25880.33s\u3002\n\u25880.43s\u3002\n\u2588\u25880.61s\n\u2588\u2588...\u2588\u25886.79s\u3002\n\u4f46\u4f4e\u5f00\u9500\u4e5f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4f1a\u626d\u66f2\u7ed3\u679c\u3002\u5f53\u4f7f\u7528\u8ddf\u8e2a\u63a2\u67e5\u5668\u65f6\uff0c\u8fdb\u884c\u5927\u91cfPython\u51fd\u6570\u8c03\u7528\u7684\u4ee3\u7801\u4f1a\u5927\u91cf\u8c03\u7528\u63a2\u67e5\u5668\uff0c\u4ece\u800c\u4f7f\u5176\u901f\u5ea6\u53d8\u6162\u3002\u8fd9\u4f1a\u626d\u66f2\u7ed3\u679c\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u60a8\u4f18\u5316\u7a0b\u5e8f\u7684\u9519\u8bef\u90e8\u5206\uff01\n\u6807\u51c6\u7684Python\u5206\u6790\u5668\u914d\u7f6e\u6587\u4ef6\u548ccProfile\u5411\u60a8\u663e\u793a\u4e00\u4e2a\u51fd\u6570\u5217\u8868\uff0c\u6309\u6bcf\u4e2a\u51fd\u6570\u82b1\u8d39\u7684\u65f6\u95f4\u6392\u5e8f\u3002\u8fd9\u5f88\u597d\uff0c\u4f46\u662f\u5f88\u96be\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002\u4e86\u89e3\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u539f\u56e0\u4ee5\u53ca\u6d89\u53ca\u5230\u7528\u6237\u4ee3\u7801\u7684\u54ea\u4e9b\u90e8\u5206\u4f1a\u66f4\u6709\u5e2e\u52a9\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u60f3\u5f04\u6e05\u695a\u4e3a\u4ec0\u4e48Django\u4e2d\u7684Web\u8bf7\u6c42\u901f\u5ea6\u5f88\u6162\u3002\u5982\u679c\u6211\u4f7f\u7528cProfile\uff0c\u6211\u53ef\u80fd\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a\n151940\u4e2a\u51fd\u6570\u8c03\u7528(147672\u4e2a\u57fa\u5143\u8c03\u7528)\uff0c\u6309\u4ee5\u4e0b\u987a\u5e8f\u6392\u5e8f\uff1a\u7d2f\u8ba1\u65f6\u95f4n\u8c03\u7528\u603b\u65f6\u95f4\u6bcf\u6b21\u8c03\u7528\u7d2f\u8ba1\u65f6\u95f4\u6bcf\u6b21\u8c03\u7528\u6587\u4ef6\u540d\uff1alineno(\u51fd\u6570)1 0.000 0.000 1.696 1.696\u914d\u7f6e\u6587\u4ef6\uff1a0(&lt\uff1b\u4ee3\u7801\u5bf9\u8c61&lt\uff1b\u6a21\u5757&gt\uff1b\u4f4d\u4e8e0x1053d6a30\uff0c\u6587\u4ef6&#34\uff1b./Manage.py&#34\uff1b\uff0c\u884c2&gt\uff1b)1 0.001 0.001 1.693 1.693 manage.py\uff1a2(&lt\uff1b\u6a21\u5757&gt\uff1b)1 0.000 0.000 1.586 1.586__init__.py\uff1a394(EXECUTE_FROM_COMMAND_LINE)1 0.000 0.000 1.586 1.586__INIT__.py\uff1a350(\u6267\u884c)1 0.000 0.000 1.142 1.142__INIT__.py\uff1a254(\u83b7\u53d6\u547d\u4ee4)430.013 0.000 1.124 0.026__INIT__.py\uff1a1(&lt\uff1b\u6a21\u5757&&gt;\uff1b)0.008 0.000 0.000 1.062 0.003 re.py\uff1a226(_COMPILE)158 0.005 0.000 1.048 0.007 SRE_COMPILLE.py\uff1a496(\u7f16\u8bd1)1 0.001 0.001 1.0421.042__init__.py\uff1a78(Get_Commands)1530.001 0.000 1.0360.007re.py\uff1a188(\u7f16\u8bd1)106/1020.000.000 1.0300.010_init_.py\uff1a52(_\u3002_getattr__)1 0.000 0.000 1.029 1.029__init__.py\uff1a31(_Setup)1 0.000 0.000 1.021 1.021__init__.py\uff1a57(_CONFIGURE_LOGGING)2 0.002 0.001 1.011 0.505log.py\uff1a1(&lt\uff1b\u6a21\u5757&gt\uff1b)\u3002\nPyInstrument\u8bb0\u5f55\u6574\u4e2a\u5806\u6808\uff0c\u56e0\u6b64\u8ddf\u8e2a\u6602\u8d35\u7684\u547c\u53eb\u8981\u65b9\u4fbf\u5f97\u591a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fd8\u9690\u85cf\u5e93\u6846\u67b6\uff0c\u8ba9\u60a8\u4e13\u6ce8\u4e8e\u5f71\u54cd\u6027\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f/\u6a21\u5757\u3002\n_._/_/\u8bb0\u5f55\uff1a14\uff1a53\uff1a35\u6837\u672c\uff1a13/_//_/\\/_/&#39\uff1b/\u6301\u7eed\u65f6\u95f4\uff1a3.131 CPU\u65f6\u95f4\uff1a0.195/_/v3.0.0b3\u7a0b\u5e8f\uff1a\u793a\u4f8b/django_example/manage.py runserver--\u65e0\u7ebf\u7a0b--noreload3.131&lt\uff1b\u6a21\u5757&gt\uff1bPy\uff1a2\u2514\u25003.118 EXECUTE_FROM_COMMAND_LINE Django/CORE/MANAGEMENT/__INIT__.py\uff1a378[473\u5e27\u9690\u85cf]Django\uff0csocketserver\uff0c\u9009\u62e9\u5668\uff0cwsgi...\u30022.836\u9009\u62e9\u9009\u62e9\u5668.py\uff1a365 0.126_GET_RESPONSE Django/CORE/Handler/base.py\uff1a96\u2514\u25000.126 HELLO_WORLD Django_Example/Views.py\uff1a4\u3002\nPyInstrument\u4f7f\u7528\u6302\u949f\u65f6\u95f4\u8bb0\u5f55\u6301\u7eed\u65f6\u95f4\u3002\u5f53\u60a8\u6b63\u5728\u7f16\u5199\u4e0b\u8f7d\u6570\u636e\u3001\u8bfb\u53d6\u6587\u4ef6\u548c\u4e0e\u6570\u636e\u5e93\u5bf9\u8bdd\u7684\u7a0b\u5e8f\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u65f6\u95f4\u90fd\u5305\u542b\u5728pyInstrument\u8ddf\u8e2a\u7684\u65f6\u95f4\u4e2d\u3002\n\u8fd9\u5728\u8c03\u8bd5\u6027\u80fd\u95ee\u9898\u65f6\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3aPython\u7ecf\u5e38\u88ab\u7528\u4f5c\u5176\u4ed6\u670d\u52a1\u4e4b\u95f4\u7684\u7c98\u5408\u5242\u8bed\u8a00\u3002\u95ee\u9898\u53ef\u80fd\u4e0d\u5728\u60a8\u7684\u7a0b\u5e8f\u4e2d\uff0c\u4f46\u60a8\u5e94\u8be5\u4ecd\u7136\u80fd\u591f\u627e\u5230\u7a0b\u5e8f\u8fd0\u884c\u7f13\u6162\u7684\u539f\u56e0\u3002\nPyInstrument\u6bcf1ms\u4e2d\u65ad\u4e00\u6b21\u7a0b\u5e8f\uff0c\u5e76\u5728\u8be5\u70b9\u8bb0\u5f55\u6574\u4e2a\u5806\u6808\u3002\u5b83\u4f7f\u7528C\u6269\u5c55\u548cPyEval_SetProfile\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u6bcf1ms\u53ea\u8bfb\u53d6\u4e00\u6b21\u8bfb\u6570\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6b64\u535a\u5ba2\u5e16\u5b50\u3002\n\u4f60\u53ef\u80fd\u4f1a\u5bf9\u7ec4\u6210\u4e00\u4efd\u62a5\u544a\u7684\u6837\u672c\u5982\u6b64\u4e4b\u5c11\u611f\u5230\u60ca\u8bb6\uff0c\u4f46\u522b\u62c5\u5fc3\uff0c\u8fd9\u4e0d\u4f1a\u964d\u4f4e\u51c6\u786e\u6027\u3002\u9ed8\u8ba4\u95f4\u96941ms\u662f\u8bb0\u5f55\u5806\u6808\u5e27\u7684\u4e0b\u9650\uff0c\u4f46\u5982\u679c\u5728\u5355\u4e2a\u51fd\u6570\u8c03\u7528\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u8f83\u957f\uff0c\u5219\u4f1a\u5728\u8be5\u8c03\u7528\u7ed3\u675f\u65f6\u8bb0\u5f55\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u6837\u672c\u5b9e\u9645\u4e0a\u88ab\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u5e76\u5728\u6700\u540e\u5f55\u5236\u4e0b\u6765\u3002\n\u6dfb\u52a0\u4e86\u5728C\u51fd\u6570\u4e2d\u8ddf\u8e2a\u65f6\u95f4\u7684\u529f\u80fd\u3002\u6b21\u8981\u6ce8\u610f-\u7531\u4e8ePython\u8bb0\u5f55\u5e27\u7684\u65b9\u5f0f\u6709\u9650\u5236\uff0cPyInstrument\u5c06C\u51fd\u6570\u8bb0\u5f55\u4e3a\u53f6\u5b50\u51fd\u6570\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002Python-&gt\uff1bC-&gt\uff1bPython\u8bb0\u5f55\u4e3aPython-&gt\uff1bPython\uff0c\u4f46Python-&gt\uff1bPython-&gt\uff1bC\u7684\u5c5e\u6027\u5c06\u6b63\u786e\u3002(#103)\u3002\n\u5728Django\u4e2d\u95f4\u4ef6\u4e0a\u6dfb\u52a0\u4e86PYINSTRUMENT_SHOW_CALLBACK\u9009\u9879\uff0c\u4ee5\u6dfb\u52a0\u663e\u793a\u914d\u7f6e\u6587\u4ef6\u7684\u6761\u4ef6(\u53ef\u7528\u4e8e\u5728\u5b9e\u65f6\u670d\u52a1\u5668\u4e0a\u8fd0\u884cpyInstrument\uff01)\u3002\n\u4fee\u590d\u4e86Django\u4e2d\u95f4\u4ef6\u4e2d\u7531\u4e8eUnicode\u9519\u8bef\u800c\u65e0\u6cd5\u5199\u5165\u6587\u4ef6\u7684\u9519\u8bef\u3002\n\u4fee\u590d\u4e86Windows\u4e0aDjango\u4e2d\u95f4\u4ef6\u7684\u9519\u8bef\uff0c\u5728\u8be5\u9519\u8bef\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u8bd5\u56fe\u5728\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e2d\u653e\u7f6e\u975e\u6cd5\u5b57\u7b26&#39\uff1b\uff1f&#39\uff1b\uff0c\u6240\u4ee5\u914d\u7f6e\u6587\u4ef6\u5c06\u5931\u8d25\u3002(#66)\u3002\n\u6dfb\u52a0--show\u548c--show-regex\u9009\u9879\uff0c\u4ee5\u6807\u8bb0\u8981\u663e\u793a\u7684\u67d0\u4e9b\u6587\u4ef6\u3002\u8fd9\u6709\u52a9\u4e8e\u5206\u6790\u7279\u5b9a\u6a21\u5757\u5185\u90e8\u7684\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u9690\u85cf\u3002\u4f8b\u5982\uff0cpyInstrument--show&#39\uff1b*/symmy/*&39\uff1bscript.py\u3002\nPyInstrument\u73b0\u5728\u5c06\u901a\u8fc7\u60a8\u9ed8\u8ba4\u4f7f\u7528\u7684\u5e93\u9690\u85cf\u8ddf\u8e2a\u3002\u56e0\u6b64\uff0c\u5b83\u4e0d\u4f1a\u5411\u60a8\u5c55\u793a\u901a\u8fc7\u5916\u90e8\u5185\u5bb9(\u5982urllib)\u5185\u90e8\u7684\u5927\u91cf\u6846\u67b6\uff0c\u800c\u662f\u8ba9\u60a8\u4e13\u6ce8\u4e8e\u60a8\u7684\u4ee3\u7801\u3002\n&#39\uff1b\u6761\u76ee&#39\uff1b\u4f1a\u663e\u793a\u9690\u85cf\u7ec4\u7684\u6846\u67b6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u77e5\u9053\u95ee\u9898\u51fa\u5728\u54ea\u4e2a\u547c\u53eb\u4e0a\u3002\n\u7ec4\u4e2d\u975e\u5e38\u6162\u7684\u5e27\u4e5f\u4f1a\u663e\u793a\u51fa\u6765\uff0c\u4f8b\u5982\u5957\u63a5\u5b57\u4e0a\u7684Read\u8c03\u7528\u3002\n\u5176\u4ed6\u6307\u6807\u663e\u793a\u5728\u8ddf\u8e2a\u9876\u90e8-\u65f6\u95f4\u6233\u3001\u6837\u672c\u6570\u3001\u6301\u7eed\u65f6\u95f4\u3001CPU\u65f6\u95f4\u3002\n\u9690\u85cf\u4ee3\u7801\u7531\u4ee3\u7801\u6587\u4ef6\u8def\u5f84\u4e0a\u7684--HIDE\u6216--HIDE-regex\u9009\u9879\u63a7\u5236\u3002\n--HIDE=expr glob\u6837\u5f0f\u6a21\u5f0f\uff0c\u5339\u914d\u8981\u9690\u85cf\u5176\u5e27\u7684\u6587\u4ef6\u8def\u5f84\u3002\u9ed8\u8ba4\u4e3a&#39\uff1b*/lib/*&#39\uff1b\u3002--Hide-regex=\u4e0e\u8981\u9690\u85cf\u5176\u5e27\u7684\u6587\u4ef6\u8def\u5f84\u5339\u914d\u7684REGEX regex\u3002\u5982\u679c--HIDE\u6ca1\u6709\u7ed9\u4e88\u8db3\u591f\u7684\u63a7\u5236\uff0c\u90a3\u5c31\u6709\u7528\u4e86\u3002\n\u56e0\u4e3a\u73b0\u5728\u6709\u51e0\u4e2a\u5448\u73b0\u9009\u9879\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u4f7f\u7528--load-prev-pyInstrument\u52a0\u8f7d\u524d\u4e00\u4e2a\u6027\u80fd\u5206\u6790\u4f1a\u8bdd\u6765\u4fdd\u5b58\u6700\u540e10\u4e2a\u4f1a\u8bdd\u3002\n(\u5185\u90e8)\u5f53\u8bb0\u5f55\u65f6\u95f4\u7ebf\u65f6\uff0c\u6846\u67b6\u6811\u73b0\u5728\u5b8c\u5168\u662f\u7ebf\u6027\u7684\uff0c\u5141\u8bb8\u521b\u5efa\u8d85\u7cbe\u786e\u7684\u6846\u67b6\u56fe\u3002\n(\u5185\u90e8)HTML\u6e32\u67d3\u5668\u5df2\u88ab\u91cd\u5199\u4e3aVue.js\u5e94\u7528\u7a0b\u5e8f\u3002\u6240\u6709\u63a7\u5236\u53f0\u7684\u6539\u8fdb\u4e5f\u9002\u7528\u4e8eHTML\u8f93\u51fa\uff0c\u53e6\u5916\u5b83\u8fd8\u5177\u6709\u4ea4\u4e92\u6027\u3002\n\u5927\u91cd\u6784\uff01\u5f55\u97f3\u673a\u5df2\u88ab\u79fb\u9664\u3002\u5e27\u5f55\u5236\u73b0\u5728\u662fProfiler\u5bf9\u8c61\u7684\u5185\u90e8\u3002\u8fd9\u610f\u5473\u7740\u5e27\u5bf9\u8c61\u66f4\u52a0\u901a\u7528\uff0c\u8fd9\u4e3a\u2026\u2026\u94fa\u5e73\u4e86\u9053\u8def\u3002\n\u5904\u7406\u5668\uff01\u8fd9\u4e9b\u662f\u6539\u53d8\u6811\u4ee5\u96d5\u523b\u8f93\u51fa\u7684\u51fd\u6570\uff0c\u6e32\u67d3\u5668\u4f7f\u7528\u5b83\u4eec\u5c06\u8f93\u51fa\u8fc7\u6ee4\u6210\u6b63\u786e\u7684\u5f62\u5f0f\u3002\u73b0\u5728\uff0c\u5206\u6790\u5668\u4e0d\u662f\u65f6\u95f4\u805a\u5408\u8bb0\u5f55\u5668\uff0c\u800c\u662f\u53ea\u4f7f\u7528\u65f6\u95f4\u7ebf\u6837\u5f0f\u7684\u8bb0\u5f55(\u8fd9\u65e0\u8bba\u5982\u4f55\u5f00\u9500\u66f4\u4f4e)\uff0c\u5e76\u4e14\u805a\u5408\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5904\u7406\u6b65\u9aa4\u6765\u5b8c\u6210\u7684\u3002\n\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0c\u73b0\u5728\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u66f4\u6539\u6811\u6765\u8fc7\u6ee4\u6389\u4e1c\u897f\uff0c\u5e76\u505a\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u7ec4\u5408\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u6846\u67b6\u3002\u5728v3.0\u4e2d\u8fd8\u4f1a\u6709\u66f4\u591a\u4f7f\u7528\u6b64\u529f\u80fd\u7684\u529f\u80fd\uff01\nImportlib\u6846\u67b6\u88ab\u79fb\u9664-\u60a8\u5c06\u6839\u672c\u770b\u4e0d\u5230\u5b83\u4eec\u3002\u4ed6\u4eec\u7684\u5b69\u5b50\u88ab\u4fdd\u7559\u4e0b\u6765\uff0c\u6240\u4ee5\u8fdb\u53e3\u53ea\u662f\u900f\u660e\u7684\u3002\n\u5f53\u8fd0\u884cpyInstrument--html\u5e76\u4e14\u60a8\u6ca1\u6709\u5c06\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230\u6587\u4ef6\u65f6\uff0cpyInstrument\u4f1a\u5c06\u63a7\u5236\u53f0\u8f93\u51fa\u5199\u5165\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8be5\u6587\u4ef6\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u901a\u8fc7\u547d\u4ee4\u884c\u4f7f\u7528pyInstrument\u8fd0\u884c\u6a21\u5757\u7684\u652f\u6301\u3002\u65b0\u7684\u8bed\u6cd5\u662f-m\u6807\u5fd7\uff0c\u4f8b\u5982pyInstrument-m\u6a21\u5757\u540d\u79f0\uff01\u666e\u745e\u3002\n\u4fee\u590d\u7531\u4e8e\u591a\u7ebf\u7a0b\u4f7f\u7528pyInstrument\u800c\u5bfc\u81f4\u7684\u5d29\u6e83\u3002\u4fee\u590d\u7a0b\u5e8f\u4f4d\u4e8eC\u6269\u5c55\u4e2d\uff0c\u4f4d\u4e8ehttps://github.com/joerick/pyinstrument_cext/pull/3\n\u4fee\u590d\u4e86\u7528\u4e8e\u5206\u6790\u5806\u6808\u4e0a\u6709\u5927\u91cf\u5e27\u7684\u7a0b\u5e8f\u65f6\u7684\u6700\u5927\u9012\u5f52\u9519\u8bef\u3002\nPyInstrument\u4f7f\u7528\u4e00\u79cd\u65b0\u7684\u5256\u6790\u6a21\u5f0f\u3002Pyinterument\u4e0d\u4f7f\u7528\u4fe1\u53f7\uff0c\u800c\u662f\u4f7f\u7528\u57fa\u4e8ePyEval_SetProfile\u7684\u65b0\u7edf\u8ba1\u5206\u6790\u5668\u3002\u8fd9\u610f\u5473\u7740\u5728\u4f7f\u7528PyInstrument\u65f6\u4e0d\u518d\u6709\u4e3b\u7ebf\u7a0b\u9650\u5236\uff0c\u4e0d\u518d\u6709IO\u9519\u8bef\uff0c\u4e5f\u4e0d\u9700\u8981\u5355\u72ec\u7684More&#39\uff1bsetprofile&#39\uff1b\u6a21\u5f0f\uff01\n\u6e32\u67d3\u5668\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7Profiler.output()\u4e0a\u7684renender\u53c2\u6570\u6216\u547d\u4ee4\u884c\u4e0a\u7684--renderer\u53c2\u6570\u81ea\u5b9a\u4e49PyInstrument\u4ee5\u4f7f\u7528\u66ff\u4ee3\u6e32\u67d3\u5668\u3002\n\u5f55\u97f3\u673a\u3002\u4e3a\u4e86\u652f\u6301PyInstrument\u7684\u5176\u4ed6\u4f7f\u7528\u6848\u4f8b(\u4f8b\u5982\u706b\u7130\u56fe\u8868)\uff0cPyInstrument\u73b0\u5728\u6709\u4e00\u4e2a\u65f6\u95f4\u7ebf\u8bb0\u5f55\u5668\u6a21\u5f0f\u3002\u6b64\u6a21\u5f0f\u4ee5\u7ebf\u6027\u65b9\u5f0f\u8bb0\u5f55\u6355\u83b7\u7684\u5e27\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728atimeline\u4e0a\u67e5\u770b\u7a0b\u5e8f\u6267\u884c\u60c5\u51b5\u3002\nPyInstrument\u547d\u4ee4\u3002\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c$pyInstrument script.py\u4eceShell\u5206\u6790python\u811a\u672c\u3002\u8fd9\u73b0\u5728\u7b49\u540c\u4e8epython-m pyInstrument\u3002\u8c22\u8c22@asmeurer\uff01\n\u5411Django\u754c\u9762\u6dfb\u52a0\u4e86PYINSTRUMENT_PROFILE_DIR\u9009\u9879\uff0c\u8be5\u9009\u9879\u4f1a\u5c06\u6240\u6709\u8bf7\u6c42\u7684\u914d\u7f6e\u6587\u4ef6\u8bb0\u5f55\u5230\u6307\u5b9a\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u3002\u7528\u4e8e\u5206\u6790API\u8c03\u7528\u3002\n\u8981\u4ecegit\u5b58\u50a8\u5e93\u6216\u6e90\u4ee3\u7801\u7b7e\u51fa\u8fd0\u884cpyInstrument\uff0c\u5fc5\u987b\u5148\u8fd0\u884c\u3002\n\u8fd9\u5c06\u7f16\u8bd1HTML\u8f93\u51fa\u6240\u9700\u7684Javascript\u4ee3\u7801\u3002\u60a8\u5c06\u9700\u8981\u5b89\u88c5\u8282\u70b9(\u7ba1\u9053\u5b89\u88c5\u4e0d\u9700\u8981\u8282\u70b9\uff0c\u56e0\u4e3a\u63a7\u5236\u76d8\u4e2d\u5df2\u7ecf\u9884\u7f6e\u4e86Javascript)\u3002", "note_en": "Pyinstrument is a Python profiler. A profiler is a tool to help you &#39;optimize&#39;your code - make it faster. It sounds obvious, but to get the biggest speedincrease you should  focus on the slowest part of your program.Pyinstrument helps you find it!\n      To run Pyinstrument from a git checkout, there&#39;s a build step.Take a look at  Contributing for more info.\n   Call Pyinstrument directly from the command line. Instead of writing python script.py, type  pyinstrument script.py. Your script will run asnormal, and at the end (or when you press  ^C), Pyinstrument will output acolored summary showing where most of the time was spent.\n  Usage: pyinstrument [options] scriptfile [arg] ...Options: --version show program&#39;s version number and exit -h, --help show this help message and exit --load-prev=ID Instead of running a script, load a previous report -m MODULE_NAME run library module as a script, like &#39;python -m module&#39; -o OUTFILE, --outfile=OUTFILE save to &lt;outfile&gt; -r RENDERER, --renderer=RENDERER how the report should be rendered. One of: &#39;text&#39;, &#39;html&#39;, &#39;json&#39;, or python import path to a renderer class -t, --timeline render as a timeline - preserve ordering and don&#39;t condense repeated calls --hide=EXPR glob-style pattern matching the file paths whose frames to hide. Defaults to &#39;*/lib/*&#39;. --hide-regex=REGEX regex matching the file paths whose frames to hide. Useful if --hide doesn&#39;t give enough control. --show-all (text renderer only) show external library code --unicode (text renderer only) force unicode text output --no-unicode (text renderer only) force ascii text output --color (text renderer only) force ansi color text output --no-color (text renderer only) force no color text output\n Protip:  -r html will give you a interactive profile report as HTML - youcan really explore this way!\n        Once installed, add  ?profile to the end of a request URL to activate theprofiler. Your request will run as normal, but instead of getting the response,you&#39;ll get pyinstrument&#39;s analysis of the request in a web page.\n If you&#39;re writing an API, it&#39;s not easy to change the URL when you want toprofile something. In this case, add  PYINSTRUMENT_PROFILE_DIR = &#39;profiles&#39;to your  settings.py. Pyinstrument will profile every request and save theHTML output to the folder  profiles in your working directory.\n If you want to show the profiling page depending on the request you can define PYINSTRUMENT_SHOW_CALLBACK as dotted path to a function used for determiningwhether the page should show or not.You can provide your own function callback(request) which returns True or Falsein your settings.py.\n    from  flask  import  Flask,  g,  make_response,  request app  =  Flask( __name__) @ app. before_request def  before_request():  if  &#34;profile&#34;  in  request. args:  g. profiler  =  Profiler()  g. profiler. start() @ app. after_request def  after_request( response):  if  not  hasattr( g,  &#34;profiler&#34;):  return  response  g. profiler. stop()  output_html  =  g. profiler. output_html()  return  make_response( output_html)\n This will check for the  ?profile query param on each request and if found,it starts profiling. After each request where the profiler was running itcreates the html output and returns that instead of the actual response.\n  I&#39;d love to have more ways to profile using Pyinstrument - e.g. otherweb frameworks. PRs are encouraged!\n   Pyinstrument is a statistical profiler - it doesn&#39;t track everyfunction call that your program makes. Instead, it&#39;s recording the call stackevery 1ms.\n That gives some advantages over other profilers. Firstly, statisticalprofilers are much lower-overhead than tracing profilers.\n \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  0.33s\n  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  0.43s\n \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  0.61s\n \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588...\u2588\u2588 6.79s\n But low overhead is also important because it can distort the results. Whenusing a tracing profiler, code that makes a lot of Python function callsinvokes the profiler a lot, making it slower. This distorts theresults, and might lead you to optimise the wrong part of your program!\n  The standard Python profilers   profile and   cProfile show you abig list of functions, ordered by the time spent in each function.This is great, but it can be difficult to interpret  why those functions aregetting called. It&#39;s more helpful to know why those functions are called, andwhich parts of user code were involved.\n For example, let&#39;s say I want to figure out why a web request in Django isslow. If I use cProfile, I might get this:\n 151940 function calls (147672 primitive calls) in 1.696 seconds Ordered by: cumulative time ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 1.696 1.696 profile:0(&lt;code object &lt;module&gt; at 0x1053d6a30, file &#34;./manage.py&#34;, line 2&gt;) 1 0.001 0.001 1.693 1.693 manage.py:2(&lt;module&gt;) 1 0.000 0.000 1.586 1.586 __init__.py:394(execute_from_command_line) 1 0.000 0.000 1.586 1.586 __init__.py:350(execute) 1 0.000 0.000 1.142 1.142 __init__.py:254(fetch_command) 43 0.013 0.000 1.124 0.026 __init__.py:1(&lt;module&gt;) 388 0.008 0.000 1.062 0.003 re.py:226(_compile) 158 0.005 0.000 1.048 0.007 sre_compile.py:496(compile) 1 0.001 0.001 1.042 1.042 __init__.py:78(get_commands) 153 0.001 0.000 1.036 0.007 re.py:188(compile) 106/102 0.001 0.000 1.030 0.010 __init__.py:52(__getattr__) 1 0.000 0.000 1.029 1.029 __init__.py:31(_setup) 1 0.000 0.000 1.021 1.021 __init__.py:57(_configure_logging) 2 0.002 0.001 1.011 0.505 log.py:1(&lt;module&gt;)\n  Pyinstrument records the entire stack, so tracking expensive calls is mucheasier. It also hides library frames by default, letting you focus on yourapp/module is affecting performance.\n _ ._ __/__ _ _ _ _ _/_ Recorded: 14:53:35 Samples: 131 /_//_/// /_\\ / //_// / //_&#39;/ // Duration: 3.131 CPU time: 0.195/ _/ v3.0.0b3Program: examples/django_example/manage.py runserver --nothreading --noreload3.131 &lt;module&gt; manage.py:2\u2514\u2500 3.118 execute_from_command_line django/core/management/__init__.py:378 [473 frames hidden] django, socketserver, selectors, wsgi... 2.836 select selectors.py:365 0.126 _get_response django/core/handlers/base.py:96 \u2514\u2500 0.126 hello_world django_example/views.py:4\n  Pyinstrument records duration using &#39;wall-clock&#39; time. When you&#39;re writing aprogram that downloads data, reads files, and talks to databases, all thattime is  included in the tracked time by pyinstrument.\n That&#39;s really important when debugging performance problems, since Python isoften used as a &#39;glue&#39; language between other services. The problem might notbe in your program, but you should still be able to find why it&#39;s slow.\n  Pyinstrument interrupts the program every 1ms and records the entire stack atthat point. It does this using a C extension and  PyEval_SetProfile, but onlytaking readings every 1ms. Check out  this blog post for more info.\n You might be surprised at how few samples make up a report, but don&#39;t worry,it won&#39;t decrease accuracy. The default interval of 1ms is a lower bound forrecording a stackframe, but if there is a long time spent in a single functioncall, it will be recorded at the end of that call. So effectively thosesamples were &#39;bunched up&#39; and recorded at the end.\n   Added the ability to track time in C functions. Minor note - Pyinstrumentwill record time spent C functions as &#39;leaf&#39; functions, due to a limitationin how Python records frames.  Python -&gt; C -&gt; Python is recorded as Python -&gt; Python, but  Python -&gt; Python -&gt; C will be attributed correctly.(#103)\n      Added PYINSTRUMENT_SHOW_CALLBACK option on the Django middleware toadd a condition to showing the profile (could be used to run pyinstrumenton a live server!)\n Fixed bug in the Django middleware where file would not be written becauseof a unicode error\n  Fixed bug with the Django middleware on Windows where profiling would failbecause we were trying to put an illegal character &#39;?&#39; in the profile path.(#66)\n  Add  --show and  --show-regex options, to mark certain files to bedisplayed. This helps to profile inside specific modules, while hidingothers. For example,  pyinstrument --show &#39;*/sympy/*&#39; script.py.\n    Pyinstrument will now hide traces through libraries that you&#39;re using by default. So instead of showing you loads of frames going through the internals of something external e.g. urllib, it lets you focus on your code.\n &#39;Entry&#39; frames of hidden groups are shown, so you know which call is the problem\n Really slow frames in the groups are shown too, e.g. the &#39;read&#39; call on the socket\n  Additional metrics are shown at the top of the trace - timestamp, number of samples, duration, CPU time\n Hidden code is controlled by the  --hide or  --hide-regex options - matching on the path of the code files.\n --hide=EXPR glob-style pattern matching the file paths whose frames to hide. Defaults to &#39;*/lib/*&#39;. --hide-regex=REGEX regex matching the file paths whose frames to hide. Useful if --hide doesn&#39;t give enough control.\n  Because there are a few rendering options now, you can load a previous profiling session using  --load-prev - pyinstrument keeps the last 10 sessions.\n  (internal) When recording timelines, frame trees are completely linear now, allowingfor the creation of super-accurate frame charts.\n (internal) The HTML renderer has been rewritten as a Vue.js app. All the console improvements apply to the HTML output too, plus it&#39;s interactive.\n   Big refactor! Recorders have been removed. The frame recording is now internal to the  Profiler object.This means the &#39;frame&#39; objects are more general-purpose, which paves the way for...\n Processors! These are functions that mutate the tree to sculpt the output.They are used by the renderers to filter the output to the correct form. Now, instead ofa time-aggregating recorder, the profiler just uses timeline-style recording (this islower-overhead anyway) and the aggregation is done as a processing step.\n The upshot of this is that it&#39;s now way easier to alter the tree to filter stuff out, anddo more advanced things like combining frames that we don&#39;t care about. More features tocome that use this in v3.0!\n Importlib frames are removed - you won&#39;t see them at all. Their children are retained, soimports are just transparent.\n    When running  pyinstrument --html and you don&#39;t pipe the output to a file, pyinstrument will write the console output to a temp file and open that in a browser.\n  Added support for running modules with pyinstrument via the command line. The new syntaxis the  -m flag e.g.  pyinstrument -m module_name!  PR\n  Fix crashes due to multi-threaded use of pyinstrument. The fix is in the C extension,over at  https://github.com/joerick/pyinstrument_cext/pull/3\n    Fix for max recursion error when used to profile programs with a lot of frames on the stack.\n    Pyinstrument uses a new profiling mode. Rather than usingsignals, pyintrument uses a new statistical profiler built onPyEval_SetProfile. This means no more main thread restriction, no moreIO errors when using Pyinstrument, and no need for a separate more&#39;setprofile&#39; mode!\n Renderers. Users can customize Pyinstrument to use alternative rendererswith the  renderer argument on  Profiler.output(), or using the  --rendererargument on the command line.\n Recorders. To support other use cases of Pyinstrument (e.g. flame charts),pyinstrument now has a &#39;timeline&#39; recorder mode. This mode records capturedframes in a linear way, so the program execution can be viewed on atimeline.\n  pyinstrument command. You can now profile python scripts from the shellby running  $ pyinstrument script.py. This is now equivalent to python -m pyinstrument. Thanks @asmeurer!\n  Added  PYINSTRUMENT_PROFILE_DIR option to the Django interface, whichwill log profiles of all requests to a file the specified folder. Usefulfor profiling API calls.\n  To run pyinstrument from the git repo or a source checkout, you must first run\n  This compiles the Javascript code needed for the HTML output. You will need node installed (Node isn&#39;t required for the pipinstall as the Javascript is already pre-built in the wheel).", "posttime": "2020-10-20 22:46:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u7edf\u8ba1,statistical,pyinstrument", "title": "PyInstrument-\u5173\u6ce8\u6162\u901f\u90e8\u5206\u7684\u7edf\u8ba1Python\u914d\u7f6e\u6587\u4ef6", "title_en": "PyInstrument \u2013 A statistical Python profile that focuses on the slow parts", "transed": 1, "url": "https://github.com/joerick/pyinstrument", "via": "", "real_tags": ["python", "\u7edf\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "febd33768c5e817e34a81b0bd750e291.png", "infoid": 1030062, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PermalLink GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\n\u6211\u4eec\u7684\u603b\u4f53\u76ee\u6807\u662f\u5c06CPython\u7684\u901f\u5ea6\u63d0\u9ad8(\u5927\u7ea6)5\u500d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5206\u56db\u4e2a\u4e0d\u540c\u7684\u9636\u6bb5\u6765\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6bcf\u4e2a\u9636\u6bb5\u5c06CPython\u7684\u901f\u5ea6\u63d0\u9ad8(\u5927\u7ea6)50%\u3002\n\u6bcf\u4e2a\u9636\u6bb5\u5c06\u4ee5CPython\u7684\u5355\u72ec\u7248\u672c\u4e3a\u76ee\u6807\u3002\u66f4\u5feb\u7684\u65f6\u95f4\u8868\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u53ef\u9884\u6d4b\u548c\u53ef\u9760\u7684\u6027\u80fd\u6539\u8fdb\u6bd4\u6324\u51fa\u6bcf\u4e2a\u7248\u672c\u7684\u6700\u5927\u6027\u80fd\u66f4\u91cd\u8981\u3002\u5f53\u7136\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u5ef6\u8fdf\u592a\u5e38\u89c1\u4e86\uff0c\u56e0\u6b64\u53ef\u80fd\u9700\u8981\u8df3\u8fc7\u4e00\u4e2a\u7248\u672c\u3002\n\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0c\u4e00\u4e9b\u5e73\u53f0\u4e0d\u5141\u8bb8\u8fd0\u884c\u65f6\u4ee3\u7801\u751f\u6210\u3002\u8fd9\u65b9\u9762\u7684\u4e3b\u8981\u4f8b\u5b50\u662f\u82f9\u679c\u79fb\u52a8\u8bbe\u5907\u7684iOS\u5e73\u53f0\u3002\u53ea\u6709\u524d\u4e24\u4e2a\u9636\u6bb5\u624d\u80fd\u5728\u8fd9\u4e9b\u5e73\u53f0\u4e0a\u63d0\u9ad8\u6027\u80fd\u3002\n\u5bf9\u4e8e\u8fd9\u4e9b\u5e73\u53f0\uff0cX5\u52a0\u901f\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f46\u662f\u901f\u5ea6\u5e94\u8be5\u53ef\u4ee5\u7ffb\u500d\u3002\n\u6700\u7ec8\u76ee\u6807\u662f\u6709\u51e0\u4e2a\u6267\u884c\u5c42\uff0c\u6bcf\u4e2a\u6267\u884c\u5c42\u90fd\u6839\u636e\u7a0b\u5e8f\u7684\u67d0\u4e2a\u5b50\u96c6\u8fdb\u884c\u5b9a\u5236\u3002\n3.10\u7684\u5173\u952e\u6539\u8fdb\u5c06\u662f\u4e00\u4e2a\u81ea\u9002\u5e94\u7684\u3001\u4e13\u95e8\u5316\u7684\u89e3\u91ca\u5668\u3002\u89e3\u91ca\u5668\u5c06\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9002\u5e94\u7c7b\u578b\u548c\u503c\uff0c\u5229\u7528\u7a0b\u5e8f\u4e2d\u7684\u7c7b\u578b\u7a33\u5b9a\u6027\uff0c\u800c\u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u4ee3\u7801\u751f\u6210\u3002\n\u6b64\u9636\u6bb5\u5c06\u5bf9\u8fd0\u884c\u65f6\u548c\u5173\u952e\u5bf9\u8c61\u8fdb\u884c\u8bb8\u591a\u6539\u8fdb\u3002\u7b2c\u4e8c\u9636\u6bb5\u7684\u7279\u70b9\u662f\u5927\u91cf\u8c03\u6574\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u6539\u8fdb\u3002\u8ba1\u5212\u7684\u6539\u8fdb\u5305\u62ec\uff1a\nSIMPLE&#34\uff1bJIT&34\uff1b\u7f16\u8bd1\u5668\u9002\u7528\u4e8e\u5c0f\u533a\u57df\u3002\u4f7f\u7528\u76f8\u5bf9\u7b80\u5355\u3001\u5feb\u901f\u7684\u7f16\u8bd1\u5668\u7f16\u8bd1\u5c0f\u533a\u57df\u7684\u4e13\u7528\u4ee3\u7801\u3002\nCPython\u662f\u4f7f\u7528\u5f00\u653e\u6e90\u7801\u7684\u534f\u4f5c\u6a21\u578b\u5f00\u53d1\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b9e\u73b0\u4e2d\u7684\u4efb\u4f55\u590d\u6742\u6027\u90fd\u5e94\u8be5\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531\u4f5c\u8005\u4ee5\u5916\u7684\u5176\u4ed6\u4eba\u8fdb\u884c\u7ef4\u62a4\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\uff1a\n\u5728C\u6216Python\u4e2d\u4e0d\u53ef\u80fd\u7684\u5730\u65b9\uff0c\u4f7f\u7528\u4ee3\u7801\u751f\u6210\u5668\u6765\u5206\u79bb\u5173\u6ce8\u70b9\u3002\u4f8b\u5982\uff1a\n\u6027\u80fd\u5e94\u8be5\u662f\u5408\u7406\u7684\u53ef\u9884\u6d4b\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u56e0\u4e3a\u7a0b\u5e8f\u6216\u6570\u636e\u7684\u5fae\u5c0f\u6539\u53d8\u800c\u5927\u91cf\u6539\u53d8\u3002\u6240\u6709\u4ee3\u7801\u7684\u6027\u80fd\u90fd\u5e94\u8be5\u63d0\u9ad8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5faa\u73af\u7e41\u91cd\u7684\u6570\u5b57\u4ee3\u7801\u3002\n\u4f8b\u5982\uff0c1 000 000\u4e2a\u6574\u6570\u7684\u5217\u8868\u548c999999\u4e2a\u6574\u6570\u7684\u5217\u8868\u548c1\u4e2a\u65e0\u7684\u5217\u8868\u7684\u8fed\u4ee3\u901f\u5ea6\u548c\u5185\u5b58\u4f7f\u7528\u5e94\u8be5\u8db3\u591f\u63a5\u8fd1\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u5bb9\u6613\u6d4b\u91cf\u5dee\u5f02\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u5728\u540c\u8d28\u5217\u8868\u4e0a\u7684\u8fed\u4ee3\u4e0d\u80fd\u6bd4\u5f02\u8d28\u5217\u8868\u7684\u8fed\u4ee3\u901f\u5ea6\u5feb\uff0c\u800c\u662f\u8bf4\u5728\u6027\u80fd\u4e0a\u4e0d\u5e94\u8be5\u6709\u5c16\u9510\u7684\u8fb9\u7f18\u3002\n\u4e0d\u80fd\u4fdd\u8bc1\u4f18\u5316\u7684\u4ee3\u7801\u4f1a\u8fd0\u884c\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u4ee3\u7801\u6574\u9f50\u5730\u5f52\u5165&#34\uff1bHOT&#34\uff1b\u548c&#34\uff1bCOLD&#34\uff1b\u7c7b\u522b\u3002\u4e3a\u4e86\u9632\u6b62\u6027\u80fd\u6025\u5267\u4e0b\u964d\uff0c\u5c06\u4ee3\u7801\u4ece\u4e00\u5c42\u63d0\u5347\u5230\u4e0b\u4e00\u5c42\u7684\u901f\u5ea6\u5fc5\u987b\u5f88\u5feb\u3002\n\u5feb\u901f\u7f16\u8bd1\u5e76\u4e0d\u662f\u6ca1\u6709\u4ee3\u4ef7\u7684\u3002\u751f\u6210\u7684\u4ee3\u7801\u7684\u8d28\u91cf\u53ef\u80fd\u4f1a\u964d\u4f4e\u3002\u5faa\u73af\u7e41\u91cd\u548c\u6570\u503c\u4ee3\u7801\u7684\u6027\u80fd\u53ef\u80fd\u6bd4\u91cd\u91cf\u7ea7\u4f18\u5316\u5668\u7684\u6027\u80fd\u66f4\u5dee\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u6027\u80fd\u5e94\u8be5\u66f4\u5065\u58ee\u3002\n\u76ee\u524d\uff0c\u901a\u8fc7\u63d0\u4f9b\u901a\u7528\u8ddf\u8e2a\u63a5\u53e3sys.settrace\u6765\u652f\u6301Python\u4e2d\u7684\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u3002\u4e3a\u4e86\u907f\u514d\u5728\u9ad8\u6027\u80fd\u89e3\u91ca\u5668\u4e2d\u5c1d\u8bd5\u652f\u6301\u8fd9\u79cd\u901a\u7528\u8ddf\u8e2a\u7684\u590d\u6742\u6027\uff0c\u6211\u4eec\u8ba1\u5212\u63d0\u4f9b\u4e00\u4e2aAPI\uff0c\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u5c06\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u70b9\u63d2\u5165\u5b57\u8282\u7801\u3002\u8fd9\u53ef\u4ee5\u5408\u5e76\u5230\u7b2c1\u5c42\u89e3\u91ca\u5668\u7684\u52a0\u901f\u9636\u6bb5\uff0c\u5141\u8bb8\u4ee5\u63a5\u8fd1\u5168\u901f\u7684\u901f\u5ea6\u8c03\u8bd5\u4ee3\u7801\uff0c\u4ee5\u4e0eCPython3.9\u76f8\u5f53\u7684\u901f\u5ea6\u8fdb\u884c\u6027\u80fd\u5206\u6790\uff0c\u800c\u65e0\u9700\u6027\u80fd\u5206\u6790\u3002", "note_en": "Permalink     GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n       The overall aim is to speed up CPython by a factor of (approximately) five.We aim to do this in four distinct stages, each stage increasing the speed of CPython by (approximately) 50%.\n  Each stage will be targetted at a separate release of CPython.A faster schedule is possible, but we believe that predicatable and reliable performance improvementsare more important than squeezing out the maximum performance for each release.Of course delays in software development are all too common,so a release might need to be skipped.\n  Some platforms do not allow runtime code generation, for security reasons.The prime example of this is the iOS platform for Apple mobile devices.Only the first two stages would help performance on those platforms.\n For these platforms a  x5 speedup will not be possible, but a doubling of speed should be.\n  The ultimate goal is to have several tiers of execution, each tailored to some subset of the program.See  tiers for more details.\n   The key improvement for 3.10 will be an adaptive, specializing interpreter.The interpreter will adapt to types and values during execution, exploitingtype stability in the program, without needing runtime code generation.\n  This stage will make many improvements to the runtime and key objects.Stage two will be characterized by lots &#34;tweaks&#34;, rather than any &#34;headline&#34; improvement.The planned improvements include:\n   Simple &#34;JIT&#34; compiler for small regions.Compile small regions of specialized code, using a relatively simple, fast compiler.\n     CPython is developed using an open-source, collaborative model.That means that any complexity in the implementation should be understandable, and maintainable by someone other than the author(s). In order to do this we will:\n Use code generators to separate concerns where not possible in C or Python. For example:\n  Performance should be reasonably predictable and not change by large amounts for small changes in program or data.Performance should improve for all code, not just loop-heavy and numeric code.\n For example, the iteration speed and memory use of a list of 1 000 000  ints and a list of 999 999  ints and one  None, should be close enough that the difference cannot be easily measured.That is not to say that iterating over homegenous lists cannot be faster than for heterogenous lists, but that there should be no sharp edges in performance.\n  There is no guarantee that optimized code will be run, nor that code falls neatly into &#34;hot&#34; and &#34;cold&#34; categories. In order to prevent sharp edges in performance, the promotion of code from one tier to the next must be fast.\n Fast compilation is not without cost. The quality of the generated code may be degraded.Performance may be worse on loop-heavy and numerical code, than for a heivyweight optimizer, but performance of application code should be more robust.\n  Currently debugging and profiling in Python are supporting by providing a general purpose tracing interface,  sys.settrace. However, this very slow.To avoid the complexity of trying to suport this general purpose tracing in a high performance interpreter, we plan to provide to an API for inserting debugging and profiling points into the bytecode at runtime. This can be incorporated into the &#34;quickening&#34; phase of the tier 1 interpreter, allowing debugging code at near full speed, and profiling at speeds comparable to CPython 3.9 without profiling.", "posttime": "2020-10-20 22:46:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u63d0\u901f,plan,\u4ee3\u7801", "title": "CPython\u63d0\u901f\u5b9e\u65bd\u65b9\u6848", "title_en": "Implementation plan for speeding up CPython", "transed": 1, "url": "https://github.com/markshannon/faster-cpython/blob/master/plan.md", "via": "", "real_tags": ["python", "\u63d0\u901f", "plan", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "4b7d9ecba1881eda1176c27aaa7da297.png", "infoid": 1030061, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Azure\u7b14\u8bb0\u672c\u9884\u5c55\u5c06\u4e8e2020\u5e7410\u67089\u65e5\u7ed3\u675f\uff0c\u56e0\u4e3a\u6211\u4eec\u4e13\u6ce8\u4e8e\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u6784\u5efa\u51fa\u8272\u7684Jupyter\u7b14\u8bb0\u672c\u4f53\u9a8c\uff0c\u5305\u62ecVisual Studio Code\u3001Azure\u3001GitHub\u548cCodespaces\u3002\n\u6211\u4eec\u975e\u5e38\u91cd\u89c6Azure\u7b14\u8bb0\u672c\u793e\u533a\u548c\u8fc7\u53bb4\u5e74\u6240\u521b\u9020\u7684\u4e00\u5207\u3002\u8fd9\u8ba9\u6211\u4eec\u7684\u56e2\u961f\u66f4\u52a0\u5174\u594b\u5730\u4e0e\u60a8\u5206\u4eab\u6211\u4eec\u6700\u65b0\u7684\u7b14\u8bb0\u672c\u4f53\u9a8c\u3002\n\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\u4ee5\u67e5\u627e\u6709\u5173\u8fd9\u4e9b\u4f53\u9a8c\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u4e0b\u8f7dAzure\u7b14\u8bb0\u672c\u7f51\u7ad9\u4e0a\u60a8\u5f53\u524d\u62e5\u6709\u7684\u4efb\u4f55\u5185\u5bb9\u7684\u8bf4\u660e\u3002\nAzure\u7b14\u8bb0\u672c\u662f\u9488\u5bf9Jupyter\u7b14\u8bb0\u672c\u7684\u6258\u7ba1\u670d\u52a1\uff0c\u65e0\u9700\u5b89\u88c5\u3002\u5b83\u4f7f\u60a8\u80fd\u591f\u5feb\u901f\u5f00\u59cb\u539f\u578b\u8bbe\u8ba1\u3001\u6570\u636e\u79d1\u5b66\u3001\u5b66\u672f\u7814\u7a76\u6216\u5b66\u4e60Python Orr\u7f16\u7a0b\u3002\u60a8\u53ef\u4ee5\u5c06\u4ee3\u7801\u3001\u964d\u4ef7\u3001\u56fe\u50cf\u3001\u89c6\u9891\u3001\u56fe\u5f62\u6574\u5408\u5230\u4e00\u79cd\u683c\u5f0f\u4e2d\uff0c\u5e76\u8f7b\u677e\u4e0e\u5408\u4f5c\u4f19\u4f34\u5171\u4eab\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u9879\u670d\u52a1\u662f\u514d\u8d39\u4f7f\u7528\u7684\uff0c\u8fd9\u4f7f\u5176\u6210\u4e3a\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\u7684\u7edd\u4f73\u73af\u5883\uff1a\n\u9700\u8981\u5b8c\u6574\u7684R\u3001Python(Anaconda)\u73af\u5883\u548cDON\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u60f3\u8981\u82b1\u65f6\u95f4\u5b89\u88c5\u6240\u6709\u4e1c\u897f\u3002\n\u9664\u4e86\u6b64\u5b58\u50a8\u5e93\u4e2d\u7684\u7b14\u8bb0\u672c(\u60a8\u4e5f\u53ef\u4ee5\u5728Azure\u7b14\u8bb0\u672c\u793a\u4f8b\u5e93\u4e2d\u627e\u5230)\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u5916\u90e8\u8d44\u6e90\uff1a\n\u6ce8\u610f\uff1a\u67e5\u770b\u7b14\u8bb0\u672c\u4e0d\u9700\u8981\u5e10\u6237\uff0c\u4f46\u9700\u8981Microsoft\u5e10\u6237(Outlook\u3001Hotmail\u3001Xbox\u7b49)\u624d\u80fd\u8fd0\u884c\u5b83\u4eec\u3002\u9700\u8981\u65f6\uff0c\u7cfb\u7edf\u5c06\u63d0\u793a\u60a8\u521b\u5efa\u5e10\u6237\u3002\n\u7b14\u8bb0\u672c\u4e2d\u6709\u8bb8\u591a\u6709\u8da3\u7684\u6570\u636e\u6765\u6e90\u53ef\u4f9b\u4f7f\u7528\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4e0d\u9519\u7684\u8d44\u6e90\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u670d\u52a1\u5fc5\u987b\u53ef\u4ee5\u8bbf\u95ee\u6570\u636e-\u60a8\u53ef\u4ee5\u4f7f\u7528Github\u3001Dropbox\u3001OneDrive\u3001Azure BLOBS\u3001SQLAzure\u7b49\u3002\n\u9488\u5bf9\u9519\u8bef\u3001\u529f\u80fd\u8bf7\u6c42\u7b49\u63d0\u4ea4\u95ee\u9898\u3002\u5982\u679c\u60a8\u9700\u8981\u7acb\u5373\u5e2e\u52a9\uff0c\u8bf7\u901a\u8fc7nbhelp@microsoft.com\u4e0e\u6211\u4eec\u8054\u7cfb\u3002\n\u4f60\u7684\u8001\u5e08\u662f\u5728\u4e0a\u5927\u8bfe\u8fd8\u662f\u60f3\u5f00\u7f51\u7edc\u7814\u8ba8\u4f1a\uff1f\u8bd5\u8fd0\u884c\u8be5\u7f51\u7ad9\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u8bf7\u901a\u8fc7nbhelp@microsoft.com\u901a\u77e5\u6211\u4eec\u7528\u6237\u7684\u65e5\u671f\u548c\u6570\u91cf\u3002\n\u4e86\u89e3\u60a8\u95ee\u9898\u7684\u80cc\u666f\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u5feb\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5728\u521b\u5efa\u95ee\u9898\u65f6\uff0c\u8bf7\u5c3d\u53ef\u80fd\u591a\u5730\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a\nJupyter\u5185\u6838(python36\u3001python2\u3001python3\u3001R\u7b49)\uff0c\u4ee5\u9632Jupyter\u7b14\u8bb0\u672c\u51fa\u73b0\u95ee\u9898\u3002\nJupyter(\u524d\u8eab\u4e3aIPython)\uff0c\u662f\u4e00\u79cd\u591a\u8bed\u8a00\u7684\u7c7b\u56fa\u9187REPL\u3002Azurenotebook\u662f\u4e00\u9879\u514d\u8d39\u670d\u52a1\uff0c\u63d0\u4f9bJupyter\u7b14\u8bb0\u672c\u548c\u652f\u6301\u56fe\u4e66\u9986\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ea\u9700\u767b\u5f55\u5373\u53ef\u4f7f\u7528\uff0c\u65e0\u9700\u5b89\u88c5\u6216\u8bbe\u7f6e\u3002\u6559\u5e08\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u7b14\u8bb0\u672c\u65b9\u4fbf\u5730\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u3002\u5b66\u751f\u4eec\u53ef\u4ee5\u5f97\u5230\u4ed6\u4eec\u81ea\u5df1\u7684\u79c1\u4eba\u62f7\u8d1d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8fd0\u884c\u8fd9\u4e9b\u62f7\u8d1d\u3002\u8fd9\u9879\u670d\u52a1\u662f\u7531Python Team@Microsoft\u63d0\u4f9b\u7684\uff0c\u5b83\u662fData Group\u7684\u4e00\u90e8\u5206\u3002", "note_en": "The Azure Notebooks preview is ending on  October 9th, 2020 as we focus on building great Jupyter notebooks experiences across our products, including Visual Studio Code, Azure, GitHub, Codespaces.\n We deeply value the Azure Notebooks community and all that was created over the past 4 years. This has our team all the more excited to share our latest notebooks experiences with you.\n Please visit  our site to find information on these experiences as well as instructions for downloading any content you currently have on the Azure Notebooks site.\n  Azure Notebooks is a hosted service for  Jupyter Notebooks thatrequires no installation. It enables you to get started quickly onprototyping, data science, academic research, or learning to program Python orR. You can combine code, markdown, images, videos, graphs, all in one formatand easily share with partners.\n Best of all, this service is free to use, making it a great environment for:\n Data scientists who need a full R, Python (Anaconda) environment and don&#39;twant to spend the time installing everything.\n   In addition to the notebooks in this repository, which you can also find on the Azure Notebooks samples library,there are some good external resources as well:\n  Note: You don&#39;t need an account to view notebooks, but you will need aMicrosoft account (Outlook, Hotmail, Xbox, etc) to run them. You will beprompted to create an account when needed.\n  There are many interesting sources of data to use in notebooks. A couple ofgood resources are:\n  Note that data must be accessible to the service \u2014 you can use Github, Dropbox,OneDrive, Azure blobs, SQLAzure, and more.\n    File an issue forbugs, feature requests, etc. If you need immediate assistance, ping us at nbhelp@microsoft.com.\n  Are you teacher giving a large class or want to give webinar? Test drive thesite and if possible give us a heads up on the date &amp; number of users at nbhelp@microsoft.com.\n  Knowing the context of your issue will help us solve it faster. Please includeas much of the following as you can when creating a issue:\n The Jupyter Kernel ( python36,  python2,  python3,  R, etc) in case ofproblems with a Jupyter Notebook.\n   Jupyter (formerly IPython), is a multi-lingual REPL on steroids. Azurenotebooks is a free service that provides Jupyter notebooks along withsupporting libraries as a service. It means you can just login and use it, noinstallation or setup is necessary. Instructors can also use the service byeasily sharing a notebook. Students get their own private copies that they canrun. The service is provided by the Python team @ Microsoft, which is part ofthe Data Group.", "posttime": "2020-10-20 22:46:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u7b14\u8bb0\u672c\u7535\u8111,azure,\u7b14\u8bb0\u672c", "title": "Azure\u7b14\u8bb0\u672c\u7535\u8111\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f", "title_en": "End of Life for Azure Notebooks", "transed": 1, "url": "https://github.com/microsoft/AzureNotebooks", "via": "", "real_tags": ["\u7535\u8111", "\u7b14\u8bb0\u672c\u7535\u8111", "azure", "\u7b14\u8bb0\u672c"]}, {"category": "", "categoryclass": "", "imagename": "657a56f0979feceb32bd257286139c3e.png", "infoid": 1030060, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8bf4\u7684\u662f\u8d35\u516c\u53f8\u7684\u7f51\u7ad9\u3002\u5f7b\u5e95\u68c0\u4fee\u7f51\u7ad9\u5df2\u7ecf\u53d8\u5f97\u5982\u6b64\u4f8b\u884c\u516c\u4e8b\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u5df2\u7ecf\u5bf9\u4e00\u904d\u53c8\u4e00\u904d\u6254\u6389\u6240\u6709\u4e1c\u897f\u7684\u75db\u82e6\u611f\u5230\u9ebb\u6728\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u662f\u4e00\u5bb6\u65b0\u516c\u53f8\u7684\u8054\u5408\u521b\u59cb\u4eba\u3002\u60a8\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u7f51\u7ad9\uff0c\u4f46\u662f\u60a8\u7684\u4ea7\u54c1\u5408\u4f5c\u4f19\u4f34\u5df2\u7ecf\u5728\u529f\u80fd\u4e0a\u843d\u540e\u4e86\uff0c\u6240\u4ee5\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u60a8\u3002\u4f60\u7684\u8ba1\u5212\u662f\u4ec0\u4e48\uff1f\u8003\u8651\u5230\u7d27\u5f20\u7684\u9884\u7b97\u548c\u65f6\u95f4\u8868\uff0c\u7eaa\u5f8b\u4e25\u660e\u7684\u4e3e\u63aa\u5c06\u662f\u5728\u5ec9\u4ef7\u7684\u7f51\u7ad9\u521b\u5efa\u5668\u4e2d\u5feb\u901f\u4f7f\u7528\u6a21\u677f\u3002\u4e00\u65e6\u4f60\u6709\u4e86\u66f4\u591a\u7684\u8d44\u6e90\uff0c\u4f60\u7684\u54c1\u724c\u3001\u5b9a\u4f4d\u548c\u58f0\u97f3\u90fd\u641e\u6e05\u695a\u4e86\uff0c\u4f60\u5c31\u53ef\u4ee5\u9010\u6b65\u8f6c\u5411\u66f4\u5b9a\u5236\u7684\u4e1c\u897f\u3002\n\u542c\u8d77\u6765\u662f\u4e2a\u4e0d\u9519\u7684\u8ba1\u5212\uff0c\u4f46\u4efb\u4f55\u8d70\u8fc7\u8fd9\u6761\u8def\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u5b83\u4ece\u6765\u6ca1\u6709\u770b\u8d77\u6765\u90a3\u4e48\u7b80\u5355\u3002\n\u9996\u5148\uff0c\u6a21\u677f\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u60a8\u9700\u8981\u7684\u90a3\u6837\u6301\u7eed\u5f88\u957f\u65f6\u95f4\u3002\u4f60\u610f\u8bc6\u5230\u8fd9\u79cd\u8bbe\u8ba1\u4e0d\u8d77\u4f5c\u7528\uff0c\u6216\u8005\u4f60\u7684\u7ade\u4e89\u5bf9\u624b\u51fa\u4eba\u610f\u6599\u5730\u91c7\u53d6\u4e86\u884c\u52a8\u3002\u6240\u4ee5\u4f60\u5f00\u59cb\u5c1d\u8bd5\u505a\u51fa\u6539\u53d8\u3002\u4ea4\u6362\u6587\u672c\u548c\u56fe\u50cf\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u4e00\u65e6\u4f60\u5f00\u59cb\u8c03\u6574\u5e03\u5c40\uff0c\u632b\u6298\u611f\u5c31\u5f00\u59cb\u663e\u73b0\u3002\u4f60\u8fd8\u6709\u8bb8\u8bb8\u591a\u591a\u7684\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\uff0c\u4f46\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u4f60\u65e0\u6cd5\u8ba9\u9875\u9762\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u770b\u8d77\u6765\u6070\u5230\u597d\u5904\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u540c\u6837\u7684\u529f\u80fd\u548c\u62a4\u680f\u4f7f\u5f97\u6a21\u677f\u5f88\u5bb9\u6613\u7ad9\u7acb\u8d77\u6765\uff0c\u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u5b83\u5f88\u96be\u8fed\u4ee3\u7684\u539f\u56e0\u3002\u4f60\u88ab\u56f0\u4f4f\u4e86\uff0c\u4e0d\u7ba1\u4f60\u662f\u5426\u51c6\u5907\u597d\u4e86\uff0c\u5904\u7406\u7ecf\u5178\u7f51\u7ad9\u5efa\u8bbe\u56f0\u5883\u7684\u65f6\u5019\u5230\u4e86\uff1a\n\u4f60\u4f1a\u539f\u5730\u8e0f\u6b65\uff0c\u5728\u4f60\u7684\u613f\u666f\u4e0a\u59a5\u534f\uff0c\u8fd8\u662f\u6295\u8d44\u4e8e\u53e6\u4e00\u4e2a\u53ef\u80fd\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff1f\n\u5728\u7814\u7a76\u4e86\u51e0\u5929\u66f4\u9ad8\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u540e\uff0c\u5f88\u660e\u663e\uff0c\u4f60\u5df2\u7ecf\u8d85\u51fa\u4e86\u4f60\u7684\u80fd\u529b\u8303\u56f4\u3002\u6709\u8fd9\u4e48\u591a\u4e0d\u540c\u7684\u4ea7\u54c1\uff0c\u6bcf\u6b21\u4f60\u5f00\u59cb\u79bb\u5f00\u6a21\u677f\uff0c\u4f60\u5c31\u4f1a\u4e0d\u65ad\u5730\u9047\u5230\u5de8\u5927\u7684\u5b66\u4e60\u66f2\u7ebf\u3002\u632b\u6298\u611f\u53c8\u6765\u4e86\uff0c\u6240\u4ee5\u4f60\u51b3\u5b9a\u6253\u7535\u8bdd\u7ed9\u90a3\u4e2a\u6280\u672f\u670b\u53cb\u3002\u4f60\u771f\u5e78\u8fd0\uff01\u5979\u6709\u5979\u6700\u559c\u6b22\u7684\u5de5\u5177\uff0c\u5979\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u79fb\u52a8\u4f60\u7684\u74f6\u9888\u3002\u4f60\u53ef\u80fd\u8ba4\u4e3a\u4e00\u65e6\u4e00\u5207\u90fd\u5b89\u6392\u597d\u4e86\uff0c\u4f60\u5c31\u53ef\u4ee5\u8bf4\u518d\u89c1\u4e86\uff0c\u4f46\u73b0\u5b9e\u662f\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u81ea\u7531\u3002\u968f\u7740\u56e2\u961f\u548c\u60f3\u6cd5\u7684\u589e\u957f\uff0c\u4f60\u5c06\u9700\u8981\u8d8a\u6765\u8d8a\u591a\u7684\u5e2e\u52a9\uff0c\u800c\u5979\u5c06\u662f\u552f\u4e00\u80fd\u505a\u51fa\u91cd\u5927\u6539\u53d8\u7684\u4eba\u3002\u60a8\u7684\u9879\u76ee\u5c06\u5f00\u59cb\u8fdb\u884c\u5f97\u8d8a\u6765\u8d8a\u6162\u3002\u4f46\u597d\u7684\u4e00\u9762\u662f\uff0c\u81f3\u5c11\u4f60\u80fd\u628a\u8fd9\u4ef6\u4e8b\u505a\u597d\u3002\u7ec8\u6709\u4e00\u5929\u3002\n\u4f46\u5982\u679c\u5979\u8d70\u4e86\u600e\u4e48\u529e\uff1f\u6ca1\u6709\u4eba\u559c\u6b22\u63d2\u624b\u522b\u4eba\u7684\u70c2\u644a\u5b50\uff0c\u6240\u4ee5\u7528\u4efb\u4f55\u65b0\u7684\u6280\u672f\u4e13\u5bb6\u719f\u6089\u7684\u5de5\u5177\u6765\u91cd\u5efa\u6700\u7ec8\u90fd\u4f1a\u66f4\u4fbf\u5b9c\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u88ab\u56f0\u5728\u8fd9\u4e2a\u6301\u7eed\u4e0d\u65ad\u7684\u6784\u5efa\u3001\u5783\u573e\u3001\u79fb\u52a8\u3001\u6784\u5efa\u5faa\u73af\u4e2d\uff0c\u8fd9\u6709\u4ec0\u4e48\u795e\u79d8\u4e4b\u5904\u5417\uff1f\u89e3\u51b3\u65b9\u6848\u5df2\u7ecf\u6539\u53d8\uff0c\u4f46\u6f5c\u5728\u7684\u6743\u8861\u5e76\u6ca1\u6709\u6539\u53d8\u3002\u6240\u6709\u7684\u9009\u62e9\u8981\u4e48\u8fc7\u4e8e\u57fa\u672c\u548c\u9650\u5236\u6027\uff0c\u8981\u4e48\u8fc7\u4e8e\u6280\u672f\u6027\u548c\u590d\u6742\u3002\n\u4e3a\u4ed6\u4eec\u7684\u521d\u521b\u516c\u53f8\u5efa\u7acb\u65e9\u671f\u8425\u9500\u7684\u521b\u59cb\u4eba\u5e76\u4e0d\u662f\u552f\u4e00\u7ecf\u5386\u8fc7\u8fd9\u79cd\u60c5\u51b5\u7684\u4eba\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6240\u6709\u7684\u8425\u9500\u8005\u90fd\u611f\u53d7\u5230\u4e86\u8fd9\u79cd\u75db\u82e6\u3002\n\u8fd9\u4e2a\u95ee\u9898\u5982\u6b64\u666e\u904d\uff0c\u4ee5\u81f3\u4e8e\u50ac\u751f\u4e86\u4e00\u5927\u7c7b\u88ab\u79f0\u4e3a\u767b\u9646\u9875\u9762\u751f\u6210\u5668\u7684\u4ea7\u54c1\u3002\n\u8425\u9500\u8005\u53d7\u591f\u4e86\u88ab\u8fb9\u7f18\u5316\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u613f\u610f\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u8d34\u4e0a\u4e3b\u8981\u662f\u54c1\u724c\u9875\u9762\u7684\u80f6\u5e26\uff0c\u53ea\u662f\u4e3a\u4e86\u5728\u7f51\u7edc\u5185\u5bb9\u65b9\u9762\u6709\u4e00\u4e9b\u8fd0\u8425\u4e0a\u7684\u72ec\u7acb\u6027\u3002\u5f53\u7136\uff0c\u767b\u9646\u9875\u9762\u751f\u6210\u5668\u53ef\u4ee5\u6709\u989d\u5916\u7684\u529f\u80fd\uff0c\u6bd4\u5982A/B\u6d4b\u8bd5\u548c\u5206\u6790\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u8425\u9500\u4eba\u5458\u8d2d\u4e70\u89e3\u51b3\u65b9\u6848\u7684\u771f\u6b63\u539f\u56e0\u3002\u8425\u9500\u4eba\u5458\u6b63\u5728\u5bfb\u627e\u4e00\u4e2a\u65e2\u80fd\u53d1\u6325\u521b\u610f\u53c8\u4e0d\u4f1a\u7834\u574f\u4efb\u4f55\u4e1c\u897f\u7684\u5730\u65b9\u3002\n\u6211\u4eec\u4e4b\u6240\u4ee5\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u767b\u5f55\u9875\u9762\u6784\u5efa\u5668\uff0cLanding Lion\uff0c\u5e76\u6700\u7ec8\u5b9e\u73b0\u4e86\u65e5\u843d\u3002\u6211\u4eec\u7684\u8bb8\u591a\u5ba2\u6237\u90fd\u5e0c\u671b\u80fd\u5728\u5176\u4e2d\u5efa\u7acb\u5b8c\u6574\u7684\u7f51\u7ad9\uff0c\u6709\u4e9b\u5ba2\u6237\u786e\u5b9e\u505a\u5230\u4e86\u3002\u5c3d\u7ba1\u5b83\u5728\u6279\u91cf\u7ba1\u7406\u65b9\u9762\u5b58\u5728\u8bb8\u591a\u7f3a\u70b9\uff0c\u4f46\u4ecd\u6709\u6570\u91cf\u60ca\u4eba\u7684\u5ba2\u6237\u613f\u610f\u6295\u5165\u989d\u5916\u7684\u624b\u5de5\u5de5\u4f5c\u6765\u6784\u5efa\u548c\u7ef4\u62a4\u5b8c\u6574\u7684\u7f51\u7ad9\u3002\u539f\u56e0\u5462\uff1f\u6211\u4eec\u7684\u7528\u6237\u4f53\u9a8c\u5b9e\u9645\u4e0a\u662f\u4e3a\u4ed6\u4eec\u8bbe\u8ba1\u7684-\u4ed6\u4eec\u662f\u806a\u660e\u7684\u3001\u7cbe\u901a\u6280\u672f\u7684\u591a\u9762\u624b\uff0c\u4ed6\u4eec\u60f3\u8981\u6446\u8131\u6a21\u677f\uff0c\u800c\u4e0d\u5fc5\u53bb\u62ff\u5b66\u4f4d\u3002\u4ed6\u4eec\u6700\u7ec8\u53ef\u4ee5\u5b8c\u5168\u6309\u7167\u4ed6\u4eec\u7684\u8bbe\u60f3\u5efa\u9020\uff0c\u800c\u4e14\u4ed6\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u81ea\u5df1\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u771f\u6b63\u7684\u95ee\u9898\u662f\uff0c\u5bf9\u4e8e\u6211\u4eec\u5176\u4f59\u7684\u5ba2\u6237\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u7f51\u7ad9\u88ab\u5c01\u9501\u4e86\u3002\u5b83\u4eec\u662f\u7531\u771f\u6b63\u7684\u6240\u6709\u8005\uff0c\u6280\u672f\u4e13\u5bb6\u7cbe\u5fc3\u5efa\u9020\u7684\u3002\u4f46\u662f\uff0c\u5305\u62ec\u7f51\u7ad9\u5728\u5185\u7684\u6574\u4e2a\u54c1\u724c\u4f53\u9a8c\u6700\u7ec8\u7531\u8c01\u8d1f\u8d23\u5462\uff1f\u8425\u9500\u4eba\u5458\u3002\n\u8425\u9500\u4eba\u5458\u9700\u8981\u4e00\u4e2a\u4e13\u95e8\u4e3a\u4ed6\u4eec\u8bbe\u8ba1\u7684\u7f51\u7ad9\u5efa\u9020\u8005\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u89e3\u51b3\u963b\u788d\u8425\u9500\u56e2\u961f\u6309\u7167\u81ea\u5df1\u7684\u65f6\u95f4\u8868\u6784\u5efa\u3001\u53d1\u8d27\u548c\u8fed\u4ee3\u6240\u6709\u7f51\u7edc\u5185\u5bb9\u7684\u95ee\u9898\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4fee\u590d\u7528\u6237\u4f53\u9a8c\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6446\u8131\u51e0\u4e4e\u6240\u6709\u9ad8\u7ea7\u7f51\u7ad9\u89e3\u51b3\u65b9\u6848\u4e2d\u90fd\u5b58\u5728\u7684\u5206\u79bb\u6a21\u677f\u548c\u5185\u5bb9\u7684\u7528\u6237\u4f53\u9a8c\u3002\u8fd9\u79cd\u65b9\u6cd5\u5411\u6700\u7ec8\u7528\u6237\u516c\u5f00\u4e86\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u4f53\u9a8c\uff1a\u4e00\u79cd\u662f\u8ba9\u6280\u672f\u4e13\u5bb6\u6784\u5efa\u6a21\u677f\uff0c\u53e6\u4e00\u79cd\u662f\u63d2\u5165\u5185\u5bb9\u7684\u57fa\u672c\u4f53\u9a8c(\u901a\u5e38\u662f\u8868\u5355)\u3002\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8d1f\u8d23\u5185\u5bb9\u7684\u4eba\u4e0d\u80fd\u66f4\u6539\u6a21\u677f-\u542c\u8d77\u6765\u719f\u6089\u5417\uff1f\n\u4e3a\u4e86\u5c3d\u53ef\u80fd\u5feb\u5730\u884c\u52a8\uff0c\u8d1f\u8d23\u5efa\u9020\u4ec0\u4e48\u7684\u4eba\u8fd8\u9700\u8981\u63a7\u5236\u5b83\u662f\u5982\u4f55\u5efa\u9020\u7684\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e13\u6ce8\u4e8e\u8bbe\u8ba1\u4e00\u79cd\u5355\u4e00\u7684\u3001\u4f18\u96c5\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u8fd9\u79cd\u4f53\u9a8c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f20\u6388\u7ed9\u6574\u4e2a\u7cbe\u901a\u6280\u672f\u7684\u591a\u9762\u624b\u56e2\u961f\u3002\u6311\u6218\u662f\u5728\u4e0d\u4f7f\u4ea7\u54c1\u96be\u4e8e\u5b66\u4e60\u7684\u60c5\u51b5\u4e0b\u4e3a\u9ad8\u7ea7\u7528\u4f8b\u63d0\u4f9b\u8db3\u591f\u7684\u529f\u80fd\u3002\u5b66\u4e60\u5efa\u7acb\u5b8c\u5168\u5b9a\u5236\u7684\u7f51\u7ad9\u5e94\u8be5\u4e0d\u4f1a\u6bd4\u5b66\u4e60\u8bbe\u8ba1\u5e7b\u706f\u7247\u6f14\u793a\u6587\u7a3f\u66f4\u590d\u6742\u3002\n\u6bcf\u5929\u90fd\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684\u7f51\u7ad9\u521b\u5efa\u8005\u5192\u51fa\u6765\uff0c\u5f88\u660e\u663e\uff0c\u6211\u4eec\u90fd\u5728\u5bfb\u627e\u66f4\u597d\u7684\u4e1c\u897f\u3002\u5982\u679c\u60a8\u5bf9\u5851\u9020\u6211\u4eec\u6784\u5efa\u3001\u8fd0\u8f93\u548c\u8fed\u4ee3Web\u5185\u5bb9\u7684\u65b9\u5f0f\u611f\u5174\u8da3\uff0c\u8bf7\u6ce8\u518c\u6211\u4eec\u7684Early Access\u8ba1\u5212\u3002\nMakeswift\u53ea\u80fd\u88ab\u9080\u8bf7\uff0c\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u65e9\u671f\u91c7\u7528\u8005\u6765\u5e2e\u52a9\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u4e16\u754c\u7ea7\u7684\uff0c\u65e0\u4ee3\u7801\u7684\u7f51\u7ad9\u5efa\u8bbe\u8005\u3002", "note_en": "I&#39;m talking about your company&#39;s website. Completely overhauling the website has become so routine that we&#39;ve become numb to the pain of throwing it all away, over and over again.\n    Imagine you&#39;re the cofounder of a new company. You need to set up a website, but your product partner is already behind on features so that leaves it solely up to you. What&#39;s your plan? Given the tight budget and schedule, the disciplined move would be to quickly use a template in an inexpensive website builder. You can graduate to something a little more custom once you have more resources and your brand, positioning, and voice figured out.\n  Sounds like a good plan, but anyone who&#39;s gone down this path knows it&#39;s never as simple as it seems.\n  For one, the template never lasts as long as you need it to. You realize the design isn&#39;t working, or your competitor just unexpectedly made a move. So you start trying to make changes. Swapping out the text and images comes easy, but as soon as you start adjusting the layout, frustration begins to set in. You&#39;ve got a million other things to do and for some reason you can&#39;t get the page to look right on mobile.\n  As it turns out, the same features and guard rails that made it easy to stand up the template have now become the reason it&#39;s hard to iterate. You&#39;re stuck, and whether or not you were ready, the time has come     to deal with the classic website building dilemma:\n  Do you stay put and compromise on your vision, or invest in another solution that     might     be better?\n  After researching more advanced solutions for a few days, it starts to become apparent that you&#39;re out of your depth. There are so many different products, and every time you begin stepping away from the template you&#39;re consistently met with a giant learning curve. Frustration sets in again so you decide to call that technical friend. You&#39;re in luck! She&#39;s got her favorite tool and she&#39;s available to help.\n  Unfortunately, all you&#39;re about to do is move your bottleneck. You may think once things are set up you can say your goodbyes, but the reality is you&#39;re never free. As your team and ideas grow you&#39;ll need more and more help, and she&#39;ll be the only one who can make the big changes. Your projects will start moving slower and slower. But on the bright side, at least you&#39;ll be able to get it done... eventually.\n  But what happens if she leaves? Nobody likes stepping into someone else&#39;s mess, so it ends up being cheaper to just rebuild using whatever tool the new technical expert is comfortable with.     Is it any mystery, then, why we&#39;re stuck in this constant build, trash, move, build cycle?         The solutions have changed, but the underlying trade-off hasn&#39;t.     All options are either too basic and restrictive, or too technical and complex.\n  Founders building out early marketing for their startups are not the only ones who experience this. At some point, all marketers feel this pain.\n  The problem is so widespread that it&#39;s given birth to a whole category of products called landing page builders.\n  Marketers are so fed up with being sidelined that they&#39;re willing to duct tape their site with     mostly     on-brand pages, just to have some operational independence when it comes to web content. Sure, landing page builders can have extra features bolted on like A/B testing and analytics, but they aren&#39;t the real reason marketers are out shopping for a solution. Marketers are looking for a place where they can get creative and not break anything.\n  We know this because we built and eventually sunset a landing page builder, Landing Lion. Many of our customers wished they could build full websites in it, and some actually did. Despite its many shortcomings around bulk management, a surprising number of customers were willing to put in extra manual work to build and maintain full websites. The reason? Our user experience was actually designed for them\u2014intelligent and tech-savvy generalists who wanted to break free from the template without having to go get a degree. They could finally build exactly what they envisioned and they could do it by themselves, quickly.\n  The real problem was that for the rest of our customers, their websites were locked down. They&#39;d been delicately constructed by the real owners, the technical experts. But who is ultimately responsible for the     entire     brand experience, website included? The marketers.\n  Marketers need a website builder designed just for them. Our mission is to tackle the issues holding back marketing teams from building, shipping, and iterating on     all     web content, on their own schedule.\n  To do this, we need to fix the user experience. More specifically, we need to move away from the split &#34;template &amp; content&#34; user experience found in nearly all advanced website solutions. This approach exposes two distinct experiences to the end user: One for a technical specialist to build a template, and another basic experience, usually a form, to plug in content. This creates a problem where the people responsible for the content can&#39;t change the template\u2014sound familiar?\n  To move as fast as possible, the people in charge of     what     to build need to also control     how     it&#39;s built.\n  That&#39;s why we&#39;re focused on designing a single, elegant user experience that can be easily taught to an entire team of tech-savvy generalists. The challenge is to provide enough power for advanced use cases without making the product difficult to     learn    . Learning to build completely custom websites should be no more complicated than learning to design a slide show presentation.\n  With what feels like a new website builder popping up everyday, it&#39;s apparent that we&#39;re all still searching for something better. If you&#39;re interested in shaping the way we build, ship, and iterate on web content, please sign up for our early access program.\n Makeswift is invite only and we&#39;re looking for early adopters to help us build a world-class, no-code website builder.", "posttime": "2020-10-20 22:45:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7ad9,website", "title": "\u4e3a\u4ec0\u4e48\u8981\u53e6\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5462\uff1f", "title_en": "Why build another website builder?", "transed": 1, "url": "https://www.makeswift.com/blog/why-build-another-website-builder", "via": "", "real_tags": ["\u7f51\u7ad9", "website"]}, {"category": "", "categoryclass": "", "imagename": "dbab06dfcc908cadf2fd3d3dd38355a6.jpg", "infoid": 1030058, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u4e24\u5e74\u7684\u5de8\u5927\u52aa\u529b\u548c\u957f\u8fbe\u4e00\u5e74\u7684\u6d4b\u8bd5\u7248\uff0c\u5305\u62ec\u8d85\u8fc725,000\u4e2a\u56e2\u961f\uff0c\u5176\u4e2d\u5305\u62ec\u90a3\u4e9b\u5728\u5185\u90e8\u901a\u4fe1\uff0cGrammarly\u548c\u6982\u5ff5\uff0c\u6211\u4eec\u7ec8\u4e8e\u51c6\u5907\u597d\u5411\u6bcf\u4e2a\u4eba\u5f00\u653e\u63a8\u4ecb\u3002\u867d\u7136\u4eca\u5929\u7684\u53d1\u5e03\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u91cc\u7a0b\u7891\uff0c\u4f46\u5b83\u4e5f\u53ea\u662f\u6211\u4eec\u671d\u7740\u6539\u53d8\u4e16\u754c\u5851\u9020\u548c\u5171\u4eab\u4fe1\u606f\u7684\u6700\u7ec8\u76ee\u6807\u8fc8\u51fa\u7684\u7b2c\u4e00\u6b65\u3002\n\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5728\u751f\u6d3b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u90fd\u5728\u4f7f\u7528\u6f14\u793a\u8f6f\u4ef6\u3002\u4e3a\u4ec0\u4e48\u8981\u518d\u5efa\u4e00\u5ea7\u5462\uff1f\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u4ece\u5c0f\u957f\u5927\u7684\u5de5\u5177\u5e76\u6ca1\u6709\u968f\u7740\u6211\u4eec\u4e00\u8d77\u957f\u5927\u3002\u9057\u7559\u7684\u6f14\u793a\u5de5\u5177\u8feb\u4f7f\u60a8\u91c7\u53d6\u53d8\u901a\u548c\u59a5\u534f\u7684\u65b9\u5f0f\uff0c\u8fd9\u4f1a\u51cf\u6162\u60a8\u7684\u901f\u5ea6\u5e76\u9650\u5236\u60a8\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u3002\n\u6211\u4eec\u6253\u9020\u7684Pitch\u662f\u4e00\u6b3e\u4e0d\u6298\u4e0d\u6263\u7684\u4f18\u79c0\u6f14\u793a\u8f6f\u4ef6--\u4e13\u4e3a\u50cf\u60a8\u8fd9\u6837\u7684\u9ad8\u7ea7\u7528\u6237\u548c\u56e2\u961f\u7684\u9700\u6c42\u800c\u8bbe\u8ba1\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4e00\u8d77\u5728\u4e00\u4e2a\u5730\u65b9\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u3002\u800c\u4e0d\u727a\u7272\u534f\u4f5c\u3001\u7f8e\u89c2\u6216\u901f\u5ea6\u3002\n\u9664\u4e86\u4eca\u5929\u7684\u53d1\u5e03\uff0c\u6211\u4eec\u8fd8\u5c06\u63a8\u51fa\u5b9e\u65f6\u89c6\u9891\u534f\u4f5c\uff0c\u8fd9\u662f\u4e00\u9879\u57fa\u4e8e\u6211\u4eec\u5ba2\u6237\u5df2\u7ecf\u559c\u7231\u7684\u65e0\u7f1d\u534f\u4f5c\u4f53\u9a8c\u7684\u9996\u521b\u529f\u80fd\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u63a8\u9500\u65f6\uff0c\u6211\u4eec\u5f00\u59cb\u6784\u5efa\u6700\u5feb\u3001\u6700\u5177\u534f\u4f5c\u6027\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u6f02\u4eae\u7684\u6f14\u793a\u6587\u7a3f\u3002\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u8ba9\u56e2\u961f\u80fd\u591f\u5728\u4e00\u4e2a\u5730\u65b9\u8ba8\u8bba\u60f3\u6cd5\u3001\u5171\u540c\u521b\u5efa\u3001\u59d4\u6d3e\u5de5\u4f5c\u548c\u8ddf\u8e2a\u8fdb\u5ea6\u3002\n\u4f60\u552f\u4e00\u4e0d\u80fd\u505a\u7684\u5c31\u662f\u9762\u5bf9\u9762\u5730\u804a\u5929\u3002\u76f4\u5230\u73b0\u5728\u3002\n\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5b9e\u65f6\u89c6\u9891\u534f\u4f5c\u3002\u5728\u6f14\u793a\u6587\u7a3f\u4e2d\u76f4\u63a5\u5f00\u59cb\u89c6\u9891\u547c\u53eb\uff0c\u5e76\u5b9e\u65f6\u534f\u4f5c\u3002\u4f7f\u7528\u5b83\u6765\u8ba8\u8bba\u7532\u677f\u3001\u53ec\u5f00\u56e2\u961f\u4f1a\u8bae\u6216\u7b80\u5355\u5730\u8fdb\u884c\u975e\u6b63\u5f0f\u804a\u5929\u3002\u5b9e\u65f6\u89c6\u9891\u534f\u4f5c\u4ea7\u751f\u4e86\u4e00\u79cd\u81ea\u53d1\u7684\u534f\u4f5c\u548c\u601d\u60f3\u7684\u81ea\u7531\u6d41\u52a8\uff0c\u8fd9\u662f\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5728\u4e0e\u56e2\u961f\u5728\u5171\u4eab\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u65f6\u6240\u5229\u7528\u7684\u3002\n\u5728\u6211\u4eec\u7684\u6574\u4e2a\u6d4b\u8bd5\u7248\u4e2d\uff0c\u5ba2\u6237\u5bf9Pitch\u7684\u6613\u7528\u6027\u548c\u521b\u5efa\u65b0\u6f14\u793a\u6587\u7a3f\u65f6\u8282\u7701\u7684\u65f6\u95f4\u8d5e\u4e0d\u7edd\u53e3\u3002\u7403\u573a\u7684\u6bcf\u4e00\u90e8\u5206\u90fd\u662f\u4e3a\u4e86\u5e2e\u52a9\u7403\u961f\u5feb\u901f\u79fb\u52a8\uff0c\u540c\u65f6\u6539\u5584\u4ed6\u4eec\u5de5\u4f5c\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u7279\u522b\u662f\uff1a\n\u65f6\u5c1a\u548c\u7075\u6d3b\u7684\u6a21\u677f\uff1a\u6211\u4eec\u4e3a\u521b\u5efa\u7f8e\u89c2\u3001\u4fe1\u606f\u4e30\u5bcc\u548c\u5b9e\u7528\u7684\u6a21\u677f\u800c\u81ea\u8c6a\u3002\u6211\u4eec\u7684\u6a21\u677f\u5e93\u73b0\u5728\u670940\u591a\u4e2a\u56f4\u7ed5\u89c6\u89c9\u4e3b\u9898\u548c\u771f\u5b9e\u7528\u4f8b\u6784\u5efa\u7684\u5b9a\u5236\u6a21\u677f\u3002\u4f7f\u7528\u6f14\u793a\u6587\u7a3f\u6837\u5f0f\uff0c\u53ea\u9700\u51e0\u79d2\u949f\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6a21\u677f\uff0c\u4f7f\u5176\u770b\u8d77\u6765\u50cf\u60a8\u7684\u6a21\u677f\u3002\n\u6781\u5176\u7b80\u5355\u7684\u7f16\u8f91\u4f53\u9a8c\uff1a\u65e0\u8bba\u60a8\u7684\u8bbe\u8ba1\u6280\u80fd\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u5c06\u7f16\u8f91\u5668\u8bbe\u8ba1\u4e3a\u521b\u5efa\u6f14\u793a\u6587\u7a3f\u7684\u6700\u5feb\u3001\u6700\u76f4\u89c2\u7684\u65b9\u5f0f\u3002\u7136\u540e\u6211\u4eec\u91cd\u65b0\u8bbe\u8ba1\u4e86\u5b83\uff0c\u8ba9\u5b83\u53d8\u5f97\u66f4\u597d\u3002\u5728\u719f\u6089\u6240\u6709\u6700\u4f73\u65b9\u5f0f\u7684\u540c\u65f6\uff0c\u4f7f\u7528Pitch\u7ed9\u4eba\u7684\u611f\u89c9\u662f\u5168\u65b0\u548c\u72ec\u7279\u7684\u3002\u6ca1\u6709\u5b66\u4e60\u66f2\u7ebf--\u53ea\u9700\u70b9\u51fb\u3001\u70b9\u51fb\u3001\u521b\u5efa\u5373\u53ef\u3002\nPitch\u4e0e\u5404\u79cd\u6765\u6e90\u65e0\u7f1d\u8fde\u63a5\uff0c\u5e2e\u52a9\u6bcf\u4e00\u526f\u7532\u677f\u770b\u8d77\u6765\u90fd\u662f\u6700\u597d\u7684\u3002\u9664\u4e86\u6211\u4eec\u76ee\u524d\u7684\u96c6\u6210\uff0c\u5982Unspash\uff0cGiphy\uff0cYouTube\u548cLoom\uff0c\u6211\u4eec\u6700\u8fd1\u8fd8\u5f15\u5165\u4e86\u5bf9Google Analytics\u548cGoogle Sheet\u7684\u652f\u6301\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u6700\u65b0\u4e14\u51c6\u786e\u7684\u56fe\u8868\uff0c\u800c\u65e0\u9700\u624b\u52a8\u590d\u5236\u548c\u7c98\u8d34\u4fe1\u606f\u3002\u8fd9\u53ea\u662f\u4e2a\u5f00\u7aef\u800c\u5df2\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u8fdb\u884c\u4e0b\u4e00\u6279\u96c6\u6210--Strike\u3001Typeform\u548cMailchip--\u5e76\u8ba1\u5212\u57282021\u5e74\u5411\u90a3\u4e9b\u53ef\u4ee5\u5728Pitch\u57fa\u7840\u4e0a\u6784\u5efa\u7684\u5f00\u53d1\u4eba\u5458\u548c\u5408\u4f5c\u4f19\u4f34\u5f00\u653ePitch\u3002\n\u968f\u7740\u6211\u4eec\u7684\u63a8\u51fa\uff0c\u6211\u4eec\u6b63\u5f0f\u63a8\u51fa\u4e86\u4e00\u4e2a\u514d\u8d39\u8ba1\u5212\u548c\u6211\u4eec\u7684\u9ad8\u7ea7\u8ba1\u5212\uff0cPitch Pro\u3002\n\u5bf9\u4e8e\u4e2a\u4eba\u548c\u5c0f\u56e2\u961f\u6765\u8bf4\u975e\u5e38\u7406\u60f3\uff0c\u6211\u4eec\u7684\u521d\u5b66\u8005\u8ba1\u5212\u662f\u5e76\u4e14\u5c06\u6c38\u8fdc\u662f\u514d\u8d39\u7684\u3002\u6211\u4eec\u4e0d\u60f3\u9650\u5236\u60a8\u7684\u56e2\u961f\u5236\u4f5c\u6f02\u4eae\u7684\u54c1\u724c\u5361\u7247\u7ec4\u7684\u80fd\u529b\uff1b\u56e0\u6b64\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u533a\u90fd\u6709\u65e0\u9650\u7684\u7528\u6237\u3001\u6f14\u793a\u6587\u7a3f\u3001\u6a21\u677f\u548c\u5b57\u4f53\u4e0a\u4f20\u3002\nPitch Pro\u9762\u5411\u9ad8\u7ea7\u7528\u6237\u548c\u5feb\u901f\u6210\u957f\u7684\u56e2\u961f\uff0c\u4ed6\u4eec\u5c06\u6f14\u793a\u6587\u7a3f\u4f5c\u4e3a\u5efa\u7acb\u4e1a\u52a1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u6838\u5fc3\u529f\u80fd\u5305\u62ec\u9644\u52a0\u6743\u9650\u3001\u89c6\u9891\u4e0a\u4f20\u548c\u65e0\u54c1\u724cPDF\u5bfc\u51fa\u3002Pitch Pro\u7684\u8d39\u7528\u662f\u6bcf\u4e2a\u7528\u6237\u6bcf\u670810\u7f8e\u5143\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4ed4\u7ec6\u67e5\u770b\u6bcf\u4e2a\u8ba1\u5212\u3002\n\u6211\u4eec\u5b66\u5230\u4e86\u5f88\u591a\u5173\u4e8e\u6784\u5efa\u4ea7\u54c1\u3001\u6269\u5c55\u56e2\u961f\u548c\u5904\u7406\u5ba2\u6237\u53cd\u9988\u7684\u77e5\u8bc6\u3002\u6211\u4eec\u7684\u4ea7\u54c1\u8def\u7ebf\u56fe\u4e0a\u786e\u5b9e\u6709\u6570\u5343\u4e2a\u6761\u76ee\u3002\u4ecd\u7136\u6709\u5f88\u591a\u6211\u4eec\u9700\u8981\u548c\u60f3\u8981\u5efa\u7acb\u7684\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u53d6\u5f97\u4e86\u663e\u8457\u7684\u8fdb\u5c55\uff0c\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u7248\u8fc7\u7a0b\u4e2d\u4ea4\u4ed8\u4e8672\u4e2a\u65b0\u529f\u80fd\uff0c210\u4e2a\u6539\u8fdb\u548c260\u4e2a\u9519\u8bef\u4fee\u590d\u3002\n\u6211\u4eec\u7684\u56e2\u961f\u4eca\u5e74\u589e\u957f\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6570\u91cf-\u4ece60\u4eba\u589e\u52a0\u523090\u4eba\uff0c\u540c\u65f6\u5b8c\u5168\u5904\u4e8e\u504f\u8fdc\u72b6\u6001\u3002\u6211\u4eec\u81ea\u5df1\u7684\u4ea7\u54c1\u5df2\u7ecf\u6210\u4e3a\u65b0\u5458\u5de5\u5165\u804c\u548c\u4fdd\u6301\u56e2\u961f\u8054\u7cfb\u7684\u91cd\u8981\u5de5\u5177\u3002\u6211\u4eec\u5bf92021\u5e74\u53ca\u4ee5\u540e\u6709\u7740\u8fdc\u5927\u7684\u62b1\u8d1f\u3002\u5982\u679c\u4f60\u4e3a\u4f60\u7684\u4e0b\u4e00\u6b21\u5192\u9669\u505a\u597d\u4e86\u51c6\u5907\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u542c\u5230\u4f60\u7684\u6d88\u606f\uff01\u6d4f\u89c8\u6211\u4eec\u7684\u804c\u4f4d\u9875\u9762\uff0c\u67e5\u770b\u6240\u6709\u7a7a\u7f3a\u804c\u4f4d\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u6bb5\u65c5\u7a0b\u4e2d\u6700\u6709\u56de\u62a5\u7684\u90e8\u5206\u662f\u4e0e\u5ba2\u6237\u5408\u4f5c\uff0c\u4ed6\u4eec\u5728\u65f6\u95f4\u548c\u6ce8\u610f\u529b\u4e0a\u90fd\u6177\u6168\u5f97\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u4e86\u89e3\u5230\u6211\u4eec\u7684\u4ea7\u54c1\u5df2\u7ecf\u5728\u5e2e\u52a9\u56e2\u961f\u66f4\u5feb\u3001\u66f4\u534f\u4f5c\u5730\u5de5\u4f5c\uff0c\u8fd9\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u5730\u611f\u5230\u9f13\u821e\u3002\u8fd9\u8ba9\u6211\u4eec\u5bf9\u6211\u4eec\u6b63\u5728\u5efa\u9020\u7684\u4e00\u5207\u66f4\u52a0\u5174\u594b\u3002\u8fd9\u91cc\u6709\u51e0\u4e2a\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86Pitch\u662f\u5982\u4f55\u652f\u6301\u5404\u79cd\u89c4\u6a21\u7684\u56e2\u961f\u7684\u3002\n\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u6f14\u793a\u8f6f\u4ef6\u5e76\u975e\u6613\u4e8b\u3002\u81ea\u5f00\u59cb\u4ee5\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u81f4\u529b\u4e8e\u5e73\u8861\u4e3a\u73b0\u4ee3\u6f14\u793a\u8f6f\u4ef6\u80fd\u591f\u548c\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u5960\u5b9a\u57fa\u7840\u548c\u6311\u6218\u6781\u9650\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u540c\u65f6\u52aa\u529b\uff1a\n\u652f\u6301\u60a8\u5728\u5176\u4e0a\u521b\u5efa\u7684\u6bcf\u4e00\u53f0\u8bbe\u5907\uff1a\u6211\u4eec\u7684iOS\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u5904\u4e8e\u6d4b\u8bd5\u9636\u6bb5\uff0c\u5e76\u5c06\u5f88\u5feb\u53d1\u5e03\uff1bAndroid\u4e5f\u5c06\u7d27\u968f\u5176\u540e\u3002\n\u5e2e\u52a9\u60a8\u8fde\u63a5\u4efb\u4f55\u7c7b\u578b\u7684\u60f3\u6cd5\uff1a\u6211\u4eec\u5728\u5a92\u4f53\u548c\u6570\u636e\u96c6\u6210\u65b9\u9762\u52a0\u500d\u52aa\u529b\uff0c\u4ee5\u5e2e\u52a9\u60a8\u7684\u6f14\u793a\u6587\u7a3f\u53d8\u5f97\u751f\u52a8\u6d3b\u6cfc\u3002\n\u5728\u6536\u5230\u53cd\u9988\u65f6\u95ed\u5408\u5faa\u73af\uff1a\u5373\u5c06\u63a8\u51fa\u7684\u529f\u80fd(\u5982\u6f14\u793a\u6587\u7a3f\u5206\u6790)\u5c06\u4f7f\u4f18\u5316\u60a8\u7684\u5de5\u4f5c\u53d8\u5f97\u5bb9\u6613\uff0c\u800c\u4e0d\u5fc5\u5c06\u60a8\u7684\u5361\u7247\u7ec4\u4e0a\u4f20\u5230\u53e6\u4e00\u6b3e\u8f6f\u4ef6\u3002\n\u4eca\u5929\u7684\u53d1\u5e03\u662f\u6570\u5343\u5c0f\u65f6\u7684\u5bf9\u8bdd\u3001\u96c6\u601d\u5e7f\u76ca\u4f1a\u8bae\u548c\u4e0e\u6f14\u793a\u6587\u7a3f\u521b\u4f5c\u8005\u4f1a\u9762\u7684\u7ed3\u679c\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u521b\u9020\u4e00\u4e9b\u4e1c\u897f\u6765\u91ca\u653e\u60a8\u56e2\u961f\u7684\u6700\u4f73\u601d\u7ef4\uff0c\u5e76\u5e2e\u52a9\u60a8\u968f\u65f6\u968f\u5730\u5206\u4eab\u77e5\u8bc6\u3002\u4f46\u8fd9\u53ea\u662f\u4e2a\u5f00\u59cb\u3002\u968f\u7740\u6211\u4eec\u7ee7\u7eed\u5efa\u8bbe\u63a8\u4ecb\uff0c\u6211\u4eec\u5e0c\u671b\u542c\u5230\u60a8\u7684\u6d88\u606f\u3002\u6211\u4eec\u4e00\u8d77\u8e0f\u4e0a\u4e86\u8fd9\u6bb5\u65c5\u7a0b\uff0c\u6211\u4eec\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u544a\u8bc9\u4f60\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002", "note_en": "After two years of immense effort and a year-long beta that included more than 25,000 teams, including those at Intercom, Grammarly, and Notion, we\u2019re finally ready to open Pitch up to everyone. While today\u2019s launch is a massive milestone, it\u2019s also just the first step toward our ultimate goal of transforming how the world shapes and shares information.\n Many of us have been using presentation software for the better part of our lives. Why build another one? It\u2019s simple: The tools we\u2019ve grown up with haven\u2019t grown up with us. Legacy presentation tools force you into workarounds and compromises that slow you down and limit what you can do.\n We\u2019ve built Pitch to be  uncompromisingly good presentation software \u2014 purpose-built for the needs of power users and teams like yours. Now you can get everything done, together, in one place. Without sacrificing on collaboration, aesthetics, or speed.\n Along with today\u2019s launch, we\u2019re also introducing live video collaboration, a first-of-its-kind feature that builds on the seamless collaboration experience our customers already love.\n   When we started Pitch, we set out to build the fastest and most collaborative way to create beautiful presentations. From the very beginning, we enabled teams to discuss ideas, co-create, delegate work, and track progress \u2014 all in one place.\n The only thing you couldn\u2019t do was chat face to face in Pitch. Until now.\n Today, we\u2019re introducing live video collaboration. Start a video call directly in a presentation and work together in real-time. Use it to discuss a deck, hold a team meeting, or simply have an informal chat. Live video collaboration generates the kind of spontaneous collaboration and free flow of ideas that many of us took advantage of when working in a shared space with our team.\n   Throughout our beta, customers raved about Pitch\u2019s ease of use and the time they saved when creating new presentations. Every part of Pitch was crafted to help teams move quickly while improving the end result of their work, in particular:\n Stylish and flexible templates: We pride ourselves on creating templates that are beautiful, informative, and practical. Our template gallery now has more than 40 custom-crafted templates built around visual themes and real-world use cases. With presentation styles, it takes literal seconds to customize our templates to make them look like yours.\n A powerfully simple editing experience: We designed our editor to be the fastest, most intuitive way to create presentations, no matter your design skills. And then we redesigned it to be even better. Working with Pitch feels new and unique while being familiar in all of the best ways. There\u2019s no learning curve \u2014 just point, click, create.\n   Pitch connects seamlessly with a variety of sources to help every deck look its best. In addition to our current integrations, like Unsplash, Giphy, YouTube, and Loom, we\u2019ve recently introduced support for Google Analytics and Google Sheets. Now you can easily create charts that are up-to-date and accurate without having to manually copy and paste information.   This is just the beginning. We\u2019re already working on our next batch of integrations \u2014 Stripe, Typeform, and Mailchimp \u2014 and in 2021, we plan to open Pitch up to developers and partners who can build on top of Pitch.\n  With our launch, we\u2019re officially introducing a free plan as well as our premium plan, Pitch Pro.\n  Ideal for individuals and small teams, our Starter plan is and will always be free. We don\u2019t want to limit your team\u2019s ability to make beautiful, on-brand decks; therefore each workspace comes with unlimited users, presentations, templates, and font uploads.\n Pitch Pro is for power users and fast-growing teams that use presentations as a way to build their business. Core features include additional permissions, video uploads, and unbranded PDF exports. Pitch Pro costs $10 per user, per month. You can take a closer look at each plan  here.\n  We\u2019ve learned a lot about building a product, scaling our team, and processing customer feedback. We literally have thousands of entries on our product roadmap. There&#39;s still plenty we need and want to build, but we\u2019ve made remarkable progress,  shipping 72 new features, 210 improvements, and 260 bug fixes throughout the course of our beta.\n Our team grew an incredible amount this year \u2014 from 60 to 90 while being fully remote. Our own product has become an essential tool for onboarding new hires and keeping teams connected. We have big ambitions for 2021 and beyond. If you\u2019re ready for your next adventure, we\u2019d love to hear from you!  Browse our jobs page to see all available positions.\n Hands down, the most rewarding part of this journey has been working with customers, who have been unbelievably generous with their time and attention. Knowing that our product is already helping teams work faster and more collaboratively has been unbelievably motivating. It gets us even more excited for everything we\u2019re building. Here are a few examples of how Pitch is supporting teams of all sizes.\n   Building presentation software from the ground up is no easy feat. Since starting out, we\u2019ve worked to balance laying the foundation with pushing the envelope for what modern presentation software can and should do. Over the next year, we\u2019ll continue that approach while we work to:\n Support every device you create on: Our iOS app is already in beta and will launch soon; Android will follow soon after.\n Help you connect any type of idea: We\u2019re doubling down on media and data integrations to help bring your presentations to life.\n Close the loop on receiving feedback: Upcoming features like presentation analytics will make it easy to optimize your work without having to upload your decks to yet another piece of software.\n Today\u2019s launch is the result of thousands of hours of conversations, brainstorming sessions, and meetings with presentation creators. We\u2019ve worked to create something that can unlock your team\u2019s best thinking and help you share that knowledge anywhere. But it\u2019s just the start. As we continue building Pitch, we want to hear from you. We\u2019re on this journey together, and we can\u2019t wait to show you what\u2019s next.", "posttime": "2020-10-20 22:44:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,pitch,\u56e2\u961f", "title": "Pitch\u53d1\u5e03", "title_en": "Pitch Launches", "transed": 1, "url": "https://pitch.com/blog/pitch-launches", "via": "", "real_tags": ["\u53d1\u5e03", "pitch", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "3878eae83a677de05b12902d8d537938.png", "infoid": 1030057, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u65e5\uff0c\u82f1\u56fd\u653f\u5e9c\u53d1\u8868\u4e86\u4e00\u4efd\u5173\u4e8e\u7aef\u5230\u7aef\u52a0\u5bc6\u548c\u516c\u5171\u5b89\u5168\u7684\u56fd\u9645\u58f0\u660e\uff0c\u7531\u7f8e\u56fd\u3001\u6fb3\u5927\u5229\u4e9a\u3001\u65b0\u897f\u5170\u3001\u52a0\u62ff\u5927\u3001\u5370\u5ea6\u548c\u65e5\u672c\u7684\u4ee3\u8868\u5171\u540c\u7b7e\u7f72\u3002\u8fd9\u4efd\u58f0\u660e\u5199\u5f97\u5f88\u597d\uff0c\u5f88\u503c\u5f97\u4e00\u8bfb\uff0c\u4f46\u6838\u5fc3\u662f\uff1a\n\u6211\u4eec\u547c\u5401\u79d1\u6280\u516c\u53f8[...]\u3002\u4f7f\u6267\u6cd5\u90e8\u95e8\u80fd\u591f\u4ee5\u53ef\u8bfb\u548c\u53ef\u7528\u7684\u683c\u5f0f\u8bbf\u95ee\u5185\u5bb9\uff0c\u5176\u4e2d\u6388\u6743\u662f\u5408\u6cd5\u9881\u53d1\u7684\uff0c\u662f\u5fc5\u8981\u7684\u548c\u76f8\u79f0\u7684\uff0c\u5e76\u53d7\u5230\u5f3a\u6709\u529b\u7684\u4fdd\u969c\u548c\u76d1\u7763\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u662f\u4e16\u754c\u4e0a\u4e03\u4e2a\u6700\u5927\u7684\u653f\u5e9c\u660e\u786e\u63d0\u51fa\u7684\u8981\u6c42\uff0c\u8981\u6c42\u5728\u7aef\u5230\u7aef\u52a0\u5bc6(E2EE)\u901a\u4fe1\u670d\u52a1\u4e2d\u8bbe\u7f6e\u540e\u95e8\uff1a\u4e00\u4e2a\u5f53\u5c40\u62e5\u6709\u5bc6\u94a5\u7684\u540e\u95e8\uff0c\u5141\u8bb8\u4ed6\u4eec\u6309\u9700\u67e5\u770b\u901a\u4fe1\u3002\u8fd9\u662f\u4e2a\u5927\u65b0\u95fb\uff0c\u4e0eMatrix\u76f4\u63a5\u76f8\u5173\uff0c\u56e0\u4e3aMatrix\u662f\u4e00\u79cd\u7aef\u5230\u7aef\u7684\u52a0\u5bc6\u901a\u4fe1\u534f\u8bae\uff0c\u5176\u6838\u5fc3\u56e2\u961f\u76ee\u524d\u96c6\u4e2d\u5728\u82f1\u56fd\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u540c\u60c5\u5f53\u5c40\u5728\u8fd9\u91cc\u7684\u56f0\u5883\uff1a\u6211\u4eec\u5b8c\u5168\u618e\u6076\u8650\u5f85\u513f\u7ae5\u3001\u6050\u6016\u4e3b\u4e49\u3001\u6cd5\u897f\u65af\u4e3b\u4e49\u548c\u7c7b\u4f3c\u7684\u4e1c\u897f-\u6211\u4eec\u6ca1\u6709\u5efa\u9020\u9ed1\u5ba2\u5e1d\u56fd\u6765\u5b9e\u73b0\u8fd9\u4e9b\u3002\u7136\u800c\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u8bd5\u56fe\u901a\u8fc7\u540e\u95e8\u6765\u51cf\u5c11\u6ee5\u7528\u662f\u6709\u6839\u672c\u7f3a\u9677\u7684\u3002\n\u540e\u95e8\u5fc5\u7136\u4f1a\u4e3a\u6bcf\u4e2a\u4eba\u7684\u52a0\u5bc6\u5f15\u5165\u4e00\u4e2a\u81f4\u547d\u7684\u5f31\u70b9\uff0c\u7136\u540e\u6210\u4e3a\u653b\u51fb\u8005\u7684\u7ec8\u6781\u9ad8\u4ef7\u503c\u76ee\u6807\u3002\u4efb\u4f55\u80fd\u591f\u786e\u5b9a\u7834\u89e3\u52a0\u5bc6\u6240\u9700\u7684\u79d8\u5bc6\u7684\u4eba\u90fd\u5c06\u83b7\u5f97\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u7edd\u5bf9\u786e\u5b9a\u540e\u95e8\u5bc6\u94a5\u5c06\u4f1a\u6cc4\u9732-\u65e0\u8bba\u662f\u901a\u8fc7\u5165\u4fb5\u3001\u793e\u4f1a\u5de5\u7a0b\u3001\u66b4\u529b\u653b\u51fb\u8fd8\u662f\u610f\u5916\u3002\u5373\u4f7f\u4f60\u5355\u65b9\u9762\u76f8\u4fe1\u4f60\u7684\u73b0\u4efb\u653f\u5e9c\u4f1a\u8d1f\u8d23\u6253\u5f00\u540e\u95e8\u7684\u94a5\u5319\uff0c\u4f46\u5355\u65b9\u9762\u76f8\u4fe1\u4ed6\u4eec\u7684\u7ee7\u4efb\u8005\u662f\u660e\u667a\u7684\u5417\uff1f\u8ba1\u7b97\u673a\u5b89\u5168\u53ea\u662f\u4e00\u4e2a\u7a0b\u5ea6\u95ee\u9898\uff0c\u8981\u60f3\u50cf\u8fd9\u6837\u5b89\u5168\u5730\u4fdd\u5b88\u79d8\u5bc6\uff0c\u552f\u4e00\u5b89\u5168\u7684\u65b9\u6cd5\u5c31\u662f\u8ba9\u5b83\u4ece\u4e00\u5f00\u59cb\u5c31\u4e0d\u5b58\u5728\u3002\n\u5982\u4eca\uff0c\u7aef\u5230\u7aef\u52a0\u5bc6\u662f\u4e00\u79cd\u5b8c\u5168\u65e0\u5904\u4e0d\u5728\u7684\u6280\u672f\uff1b\u8bd5\u56fe\u7acb\u6cd5\u7981\u6b62\u5b83\u5c31\u50cf\u8bd5\u56fe\u626d\u8f6c\u6f6e\u6d41\u6216\u5ba3\u5e03\u67d0\u4e00\u6570\u5b66\u5206\u652f\u662f\u975e\u6cd5\u7684\u3002\u5373\u4f7fMatrix\u786e\u5b9e\u6cc4\u9732\u4e86\u5176\u52a0\u5bc6\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u65b9\u6cd5\u6765\u989d\u5916\u4fdd\u62a4\u4ed6\u4eec\u7684\u5bf9\u8bdd-\u4ecePGP\u3001OTR\uff0c\u5230\u4f7f\u7528\u4e00\u6b21\u6027Pad\uff0c\u518d\u5230\u5171\u4eab\u5bc6\u7801\u4fdd\u62a4\u7684ZIP\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u3002\u6216\u8005\uff0c\u4ed6\u4eec\u53ef\u4ee5\u76f4\u63a5\u5207\u6362\u5230\u4ece\u53f8\u6cd5\u7ba1\u8f96\u533a\u8fd0\u884c\u7684E2EE\u804a\u5929\u7cfb\u7edf\uff0c\u800c\u4e0d\u9700\u8981\u540e\u95e8\u3002\n\u5404\u56fd\u653f\u5e9c\u4f7f\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u6765\u4fdd\u62a4\u81ea\u5df1\u7684\u6570\u636e\uff0c\u6b63\u662f\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u5e0c\u671b\u5176\u4ed6\u653f\u5e9c\u80fd\u591f\u7aa5\u63a2\u8fd9\u4e9b\u6570\u636e\u3002\u56e0\u6b64\uff0c\u653f\u5e9c\u4e3a\u540e\u95e8\u8fa9\u62a4\u4e0d\u4ec5\u662f\u865a\u4f2a\u7684\uff0c\u800c\u4e14\u4f1a\u7acb\u5373\u4f7f\u4ed6\u4eec\u81ea\u5df1\u7684\u653f\u5e9c\u6570\u636e\u9762\u4e34\u88ab\u6cc4\u9732\u7684\u98ce\u9669\u3002\u6b64\u5916\uff0c\u4e3a\u540e\u95e8\u521b\u5efa\u57fa\u7840\u8bbe\u65bd\u4e3a\u4e16\u754c\u5176\u4ed6\u5730\u533a\u6811\u7acb\u4e86\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u7cdf\u7cd5\u5148\u4f8b-\u5728\u8fd9\u4e9b\u56fd\u5bb6\uff0c\u4e0d\u90a3\u4e48\u5065\u5eb7\u7684\u653f\u5e9c\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u4f7f\u7528\u540c\u6837\u7684\u6280\u672f\uff0c\u4e25\u91cd\u635f\u5bb3\u5176\u516c\u6c11\u7684\u4eba\u6743\u3002\n\u6700\u540e\uff0c\u5728Matrix\u7684\u5177\u4f53\u6848\u4f8b\u4e2d\uff1aMatrix\u662f\u4e00\u4e2a\u52a0\u5bc6\u7684\u3001\u5206\u6563\u7684\u3001\u7531\u5f00\u6e90\u8f6f\u4ef6\u9a71\u52a8\u7684\u5f00\u653e\u7f51\u7edc\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u5176\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u3002\u5373\u4f7fMatrix\u6838\u5fc3\u56e2\u961f\u6709\u4e49\u52a1\u589e\u52a0\u4e00\u4e2a\u540e\u95e8\uff0c\u8fd9\u5bf9\u66f4\u5e7f\u6cdb\u7684\u4e16\u754c\u6765\u8bf4\u4e5f\u662f\u53ef\u89c1\u7684-\u800c\u4e14\u6ca1\u6709\u529e\u6cd5\u8ba9\u66f4\u5e7f\u6cdb\u7684\u7f51\u7edc\u91c7\u7528\u5b83\u3002\u8fd9\u53ea\u4f1a\u635f\u5bb3\u6838\u5fc3\u56e2\u961f\u7684\u53ef\u4fe1\u5ea6\uff0c\u5c06\u52a0\u5bc6\u5f00\u53d1\u63a8\u5411\u5176\u4ed6\u56fd\u5bb6\uff0c\u66f4\u5e7f\u6cdb\u7684\u7f51\u7edc\u5c06\u65e0\u5173\u7d27\u8981\u5730\u5411\u524d\u53d1\u5c55\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u6301E2EE\u7684\u73b0\u72b6\uff0c\u8fd9\u6837\u5b83\u624d\u80fd\u8ba999.9%\u7684\u4f18\u79c0\u6f14\u5458\u53d7\u76ca\u3002\u5982\u679c\u6211\u4eec\u5b9e\u65bd\u540e\u95e8\u5e76\u7834\u574f\u5b83\uff0c\u90a3\u4e48\u7cdf\u7cd5\u76840.1%\u7684\u4eba\u5c06\u7b80\u5355\u5730\u5207\u6362\u5230\u975e\u8d70\u540e\u95e8\u7684\u7cfb\u7edf\uff0c\u800c99.9%\u7684\u4eba\u5219\u4f1a\u53d8\u5f97\u8106\u5f31\u3002\n\u6211\u4eec\u4e5f\u4e0d\u662f\u552f\u4e00\u8fd9\u6837\u60f3\u7684\u4eba\uff1aGDPR(\u4e16\u754c\u9886\u5148\u7684\u6570\u636e\u4fdd\u62a4\u548c\u9690\u79c1\u6cd5\u89c4)\u660e\u786e\u547c\u5401\u5c06\u5065\u58ee\u7684\u52a0\u5bc6\u4f5c\u4e3a\u5fc5\u8981\u7684\u4fe1\u606f\u5b89\u5168\u63aa\u65bd\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7f8e\u56fd\u653f\u5e9c\u540e\u95e8\u7684\u98ce\u9669\u660e\u786e\u5bfc\u81f4\u6b27\u6d32\u6cd5\u9662(European Of Court Of Justice)\u5ba3\u5e03\u6b27\u76df-\u7f8e\u56fd\u6570\u636e\u7684\u9690\u79c1\u76fe\u724c\u65e0\u6548\u3002\u4e03\u56fd\u653f\u5e9c\u5728\u8fd9\u91cc\u7684\u7acb\u573a(\u4ee5\u53ca\u6b27\u76df\u4e13\u5458\u6700\u8fd1\u5173\u4e8e\u52a0\u5bc6\u201c\u95ee\u9898\u201d\u7684\u901a\u4fe1)\u662f\u5728\u4fdd\u62a4\u57fa\u672c\u9690\u79c1\u6743\u65b9\u9762\u7684\u91cd\u5927\u5012\u9000\u3002\n\u4e03\u56fd\u653f\u5e9c\u7684\u8fd9\u4e00\u58f0\u660e\u65e8\u5728\u4fdd\u62a4\u666e\u901a\u516c\u4f17\u514d\u53d7\u4e0d\u826f\u884c\u4e3a\u8005\u7684\u4f24\u5bb3\uff0c\u4f46\u5b83\u663e\u7136\u7834\u574f\u4e86\u597d\u7684\u884c\u4e3a\u8005\u3002\u6211\u4eec\u771f\u6b63\u9700\u8981\u7684\u662f\u6388\u6743\u7528\u6237\u548c\u7ba1\u7406\u5458\u5728\u4e0d\u7834\u574f\u9690\u79c1\u7684\u60c5\u51b5\u4e0b\u8bc6\u522b\u5e76\u4fdd\u62a4\u81ea\u5df1\u4e0d\u53d7\u4e0d\u826f\u884c\u4e3a\u5f71\u54cd\u3002\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u79cd\u6807\u51c6\u7684\u65b9\u5f0f\uff0c\u8ba9\u7528\u6237\u81ea\u5df1\u5efa\u7acb\u548c\u5206\u4eab\u4ed6\u4eec\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u770b\u770b\u5176\u4ed6\u7528\u6237\u3001\u6d88\u606f\u3001\u623f\u95f4\u3001\u670d\u52a1\u5668\u7b49\u662f\u5426\u4ee4\u4eba\u8ba8\u538c\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\u5982\u679c\u60a8\u53ef\u4ee5\u53ef\u89c6\u5316\u5e76\u9009\u62e9\u8981\u5e94\u7528\u4e8eMatrix\u89c6\u56fe\u7684\u7b5b\u9009\u5668\uff0c\u60c5\u51b5\u4f1a\u600e\u6837\uff1f\n\u5c31\u50cfWeb\u3001\u7535\u5b50\u90ae\u4ef6\u6216\u6574\u4e2a\u4e92\u8054\u7f51\u4e00\u6837\uff0cMatrix\u4e2d\u7684\u5185\u5bb9\u4e0d\u53ef\u80fd\u88ab\u5355\u65b9\u9762\u5ba1\u67e5\u6216\u5c4f\u853d\u3002\u4f46\u6211\u4eec\u80fd\u505a\u7684\u662f\u63d0\u4f9b\u4e00\u6d41\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u8ba9\u7528\u6237(\u4ee5\u53ca\u623f\u95f4/\u793e\u533a\u7248\u4e3b\u548c\u670d\u52a1\u5668\u7ba1\u7406\u5458)\u81ea\u5df1\u51b3\u5b9a\u4fe1\u4efb\u8c01\uff0c\u5141\u8bb8\u54ea\u4e9b\u5185\u5bb9\u3002\u8fd9\u8fd8\u5c06\u4e3a\u5f53\u5c40\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u6709\u5173\u975e\u6cd5\u5185\u5bb9\u7684\u58f0\u8a89\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u63d0\u4f9b\u4e00\u79cd\u5c0a\u91cd\u9690\u79c1\u7684\u673a\u5236\uff0c\u7ba1\u7406\u5458/MODS/\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8be5\u673a\u5236\u5c06\u975e\u6cd5\u5185\u5bb9\u8fdc\u79bb\u4ed6\u4eec\u7684\u670d\u52a1\u5668/\u5ba2\u6237\u7aef\u3002\n\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u6536\u96c6\u6709\u5173Matrix\u804a\u5929\u5ba4/\u7528\u6237/\u670d\u52a1\u5668/\u793e\u533a/\u5185\u5bb9\u7684\u58f0\u8a89\u6570\u636e\uff0c\u5e76\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u5c06\u5176\u53d1\u5e03\u7ed9\u66f4\u5e7f\u6cdb\u6216\u66f4\u7a84\u7684\u53d7\u4f17\uff0c\u4ece\u800c\u63d0\u4f9b\u4ed6\u4eec\u5bf9Matrix\u4e2d\u7684\u5185\u5bb9\u5728\u7ed9\u5b9a\u73af\u5883\u4e2d\u662f\u6b63\u9762\u8fd8\u662f\u8d1f\u9762\u7684\u4e3b\u89c2\u8bc4\u5206\u3002\n\u6b64\u58f0\u8a89\u6570\u636e\u4ee5\u9690\u79c1\u4fdd\u62a4\u7684\u65b9\u5f0f\u53d1\u5e03-\u5373\uff0c\u5982\u679c\u60a8\u77e5\u9053\u8981\u67e5\u8be2\u7684ID\uff0c\u5219\u53ef\u4ee5\u67e5\u627e\u58f0\u8a89\u6570\u636e\uff0c\u4f46\u6570\u636e\u4ee5\u5047\u540d\u65b9\u5f0f\u5b58\u50a8(\u4f8b\u5982\uff0c\u901a\u8fc7\u6563\u5217ID\u8fdb\u884c\u7d22\u5f15)\u3002\n\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8ba2\u9605\u4fe1\u8a89\u63d0\u8981\uff0c\u5e76\u5c06\u5b83\u4eec\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u4fbf\u544a\u77e5\u4ed6\u4eec\u5982\u4f55\u8fc7\u6ee4\u5176\u5185\u5bb9\u3002\u9988\u9001\u53ef\u4ee5\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\u6570\u636e\uff0c\u6216\u8005\u6765\u81ea\u4ed6\u4eec\u7684\u670b\u53cb\uff0c\u6216\u8005\u6765\u81ea\u53ef\u4fe1\u7684\u6765\u6e90(\u4f8b\u5982\uff0c\u4e8b\u5b9e\u6838\u67e5\u516c\u53f8)\u3002\u4ed6\u4eec\u7684\u6df7\u5408\u9972\u6599\u53ef\u4ee5\u4f5c\u4e3a\u81ea\u5df1\u7684\u9972\u6599\u91cd\u65b0\u53d1\u5e03\u3002\n\u4e3a\u4e86\u9632\u6b62\u7528\u6237\u9677\u5165\u4ed6\u4eec\u81ea\u5df1\u8bbe\u8ba1\u7684\u6d3e\u7cfb\u8fc7\u6ee4\u6c14\u6ce1\u4e2d\uff0c\u6211\u4eec\u5c06\u63d0\u4f9bUI\u6765\u53ef\u89c6\u5316\u5e76\u8b66\u544a\u4ed6\u4eec\u7684\u8fc7\u6ee4\u8303\u56f4--\u5e76\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8f7b\u677e\u800c\u6709\u8da3\u5730\u8f6c\u6362\u4ed6\u4eec\u7684\u89c2\u70b9\u3002\n\u7136\u540e\uff0c\u5728\u7279\u5b9a\u8f96\u533a\u8fd0\u884c\u670d\u52a1\u5668\u7684\u7ba1\u7406\u5458\u53ef\u4ee5\u9009\u62e9\u5728\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u4e0a\u5b9e\u65bd\u4ed6\u4eec\u9700\u8981\u7684\u4efb\u4f55\u89c4\u5219(\u4f8b\u5982\uff0c\u4ed6\u4eec\u53ef\u80fd\u60f3\u8981\u8ba2\u9605\u6765\u81ea\u53ef\u4fe1\u6765\u6e90(\u5982IWF)\u7684\u4fe1\u8a89\u9988\u9001\uff0c\u8bc6\u522b\u513f\u7ae5\u6027\u8650\u5f85\u5185\u5bb9\uff0c\u5e76\u4f7f\u7528\u5b83\u4ece\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u963b\u6b62\u5b83)\u3002\n\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6253\u51fb\u6ee5\u7528--\u540c\u6837\u7684\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u7528\u6765\u6388\u6743\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u6761\u4ef6\u8fc7\u6ee4\u6389\u5783\u573e\u90ae\u4ef6\u3001\u5ba3\u4f20\u3001\u4e0d\u60f3\u8981\u7684NSFW\u5185\u5bb9\u7b49\u3002\n\u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7684\u58f0\u8a89\u4f53\u7cfb\u3002\u5c3d\u7ba1\u8fd9\u53ef\u80fd\u4ee4\u4eba\u4e0d\u8212\u670d\uff0c\u4f46\u4e00\u4e2a\u4eba\u7684\u6050\u6016\u5206\u5b50\u662f\u53e6\u4e00\u4e2a\u4eba\u7684\u81ea\u7531\u6597\u58eb\uff0c\u4e0d\u540c\u7684\u53f8\u6cd5\u7ba1\u8f96\u533a\u6709\u4e0d\u540c\u7684\u6cd5\u5f8b--\u626e\u6f14\u4e0a\u5e1d\u548c\u88c1\u51b3\u5e76\u4e0d\u662fMatrix.org\u57fa\u91d1\u4f1a\u7684\u4e8b\u3002\u6bcf\u4e2a\u7528\u6237/\u7248\u4e3b/\u7ba1\u7406\u5458\u90fd\u5e94\u8be5\u53ef\u4ee5\u81ea\u7531\u5730\u505a\u51fa\u81ea\u5df1\u7684\u51b3\u5b9a\uff0c\u5e76\u51b3\u5b9a\u4e0e\u54ea\u4e9b\u58f0\u8a89\u6e90\u4fdd\u6301\u4e00\u81f4\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4e2a\u7cfb\u7edf\u5c06\u5e2e\u52a9\u7528\u6237\u5b9a\u4f4d\u6781\u7aef\u5185\u5bb9-\u58f0\u8a89\u6570\u636e\u7684\u9690\u79c1\u4fdd\u62a4\u6027\u8d28\u610f\u5473\u7740\u5b83\u53ea\u5bf9\u8fc7\u6ee4\u6389\u4f60\u672c\u6765\u53ef\u4ee5\u770b\u5230\u7684\u6750\u6599\u6709\u7528-\u800c\u4e0d\u662f\u5b9a\u4f4d\u65b0\u5185\u5bb9\u3002\n\u5c31\u8fd9\u4e0e\u7aef\u5230\u7aef\u52a0\u5bc6\u548c\u51cf\u5c11\u6ee5\u7528\u7684\u4ea4\u4e92\u65b9\u5f0f\u800c\u8a00\uff1a\u73b0\u5b9e\u60c5\u51b5\u662f\uff0cMatrix\u3001Web\u6216\u7535\u5b50\u90ae\u4ef6\u7b49\u516c\u5171\u7f51\u7edc\u4e2d\u7684\u7edd\u5927\u591a\u6570\u6ee5\u7528\u884c\u4e3a\u90fd\u662f\u4ece\u516c\u5171\u672a\u52a0\u5bc6\u57df\u4e2d\u770b\u5230\u7684\u3002\u8fb1\u9a82\u7684\u793e\u533a\u901a\u5e38\u60f3\u8981\u5438\u5f15/\u62db\u52df/\u57f9\u517b\u7528\u6237-\u8fd9\u610f\u5473\u7740\u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u524d\u95e8\uff0c\u8fd9\u5c06\u7531\u4e00\u4e2a\u58f0\u8a89\u7cfb\u7edf\u6765\u6807\u8bb0\uff0c\u6bd4\u5982\u4e0a\u9762\u63d0\u51fa\u7684\u4e00\u4e2a\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5b8c\u5168\u79c1\u4eba\u548c\u5b8c\u5168\u52a0\u5bc6\u7684\u793e\u533a\u901a\u5e38\u4ecd\u7136\u4e0e\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u6709\u63a5\u89e6\u70b9-\u5373\u4f7f\u90a3\u6837\uff0c\u4ed6\u4eec\u4e5f\u6781\u6709\u53ef\u80fd\u907f\u514d\u4efb\u4f55\u5047\u60f3\u7684\u540e\u5907\u670d\u52a1\u5668\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8c03\u67e5\u8fd9\u7c7b\u793e\u533a\u9700\u8981\u5f53\u5c40\u4f20\u7edf\u7684\u6e17\u900f\u548c\u76d1\u63a7\uff0c\u800c\u4e0d\u662f\u65e0\u6548\u7684\u540e\u95e8\u3002\n\u73b0\u5728\uff0c\u8fd9\u79cd\u65b9\u6cd5\u542c\u8d77\u6765\u53ef\u80fd\u5b8c\u5168\u662f\u79d1\u5e7b\u5c0f\u8bf4\uff0c\u800c\u4e14\u96c4\u5fc3\u52c3\u52c3\u5f97\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1(\u6211\u4eec\u7684\u4e13\u957f\uff01)-\u4f46\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u5f00\u59cb\u6210\u529f\u5730\u6784\u5efa\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u4e00\u76f4\u5728\u63d0\u70bc\u8fd9\u4e2a\u60f3\u6cd5\u3002MSC2313\u662f\u53d1\u5e03\u548c\u8ba2\u9605\u58f0\u8a89\u6570\u636e\u7684\u60f3\u6cd5\u7684\u7b2c\u4e00\u4e2a\u5207\u5165\u70b9-\u4ece\u7b80\u5355\u7684\u4e8c\u8fdb\u5236\u7981\u4ee4\u89c4\u5219\u5f00\u59cb\u3002\u5b83\u5df2\u7ecf\u5b9e\u73b0\u5e76\u6295\u5165\u751f\u4ea7\u4e00\u5e74\u591a\u4e86\uff0c\u7528\u6765\u7ef4\u62a4matrix.org\u548cmozilla.org\u793e\u533a\u4f7f\u7528\u7684\u5171\u4eab\u540d\u5355\u3002\u4e0b\u4e00\u6b65\u662f\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u652f\u6301\u53ef\u6df7\u5408\u7684\u58f0\u8a89\u6570\u636e\u8fde\u7eed\u4f53(\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e8c\u8fdb\u5236\u7981\u6b62\u5217\u8868)\uff0c\u4f7f\u5176\u4fdd\u62a4\u9690\u79c1\uff0c\u5e76\u5f00\u59cb\u5728\u5ba2\u6237\u7aefUX\u4e0a\u8fdb\u884c\u914d\u7f6e\u548c\u53ef\u89c6\u5316\u3002\n\u6700\u540e\uff1a\u6211\u4eec\u5c06\u7ee7\u7eed\u8058\u8bf7\u4e00\u652f\u4e13\u95e8\u7684\u58f0\u8a89\u56e2\u961f\uff0c\u5168\u804c\u81f4\u529b\u4e8e\u8fd9\u4e00\u70b9\u7684\u5efa\u8bbe\u3002\u8fd9\u662f\u5bf9Matrix\u672a\u6765\u7684\u4e00\u9879\u91cd\u5927\u6295\u8d44\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u662f\u5728\u70e7\u94b1\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u94b1-\u4f46\u8fd9\u5bf9\u8be5\u9879\u76ee\u7684\u957f\u671f\u6210\u529f\u81f3\u5173\u91cd\u8981\uff0c\u4e5f\u8bb8\u5bf9\u6574\u4e2a\u4e92\u8054\u7f51\u7684\u5065\u5eb7\u4e5f\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u6bd5\u7adf\uff0c\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u76f8\u5bf9\u58f0\u8a89\u7cfb\u7edf\u662fMatrix\u6240\u7279\u6709\u7684\uff0c\u800c\u4e14\u8bb8\u591a\u5176\u4ed6\u4eba(\u5206\u6563\u7684\u6216\u5176\u4ed6\u7684)\u663e\u7136\u4e5f\u8feb\u5207\u9700\u8981\u4e00\u4e2a\u3002\u6211\u4eec\u6b63\u5728\u79ef\u6781\u5bfb\u627e\u8d44\u91d1\u6765\u652f\u6301\u8fd9\u9879\u5de5\u4f5c\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u611f\u5230\u5bcc\u6709\u548c\u6148\u5584(\u6216\u8005\u653f\u5e9c\u60f3\u8981\u652f\u6301\u66f4\u5f00\u660e\u7684\u65b9\u6cd5)\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7[\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\u542c\u5230\u4f60\u7684\u6d88\u606f\uff01\n\u5728\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7528\u6237\u62e5\u6709\u51fa\u8272\u7684\u5728\u7ebf\u4fdd\u62a4\u5de5\u5177\uff0c\u4ed6\u4eec\u7684\u5b89\u5168\u4e0d\u4f1a\u56e0\u4e3a\u52a0\u5bc6\u540e\u95e8\u800c\u53d7\u5230\u635f\u5bb3\u3002\u5728\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7528\u6237\u62e5\u6709\u51fa\u8272\u7684\u5728\u7ebf\u4fdd\u62a4\u5de5\u5177\uff0c\u4ed6\u4eec\u7684\u5b89\u5168\u4e0d\u53d7\u52a0\u5bc6\u540e\u95e8\u7684\u5f71\u54cd\u3002", "note_en": "Last Sunday, the UK Government published an  international statement on end-to-end encryption and public safety, co-signed by representatives from the US, Australia, New Zealand, Canada, India and Japan. The statement is well written and well worth a read in full, but the central point is this:\n We call on technology companies to [...] enable law enforcement access to content in a readable and usable format where an authorisation is lawfully issued, is necessary and proportionate, and is subject to strong safeguards and oversight.\n In other words, this is an explicit request from seven of the biggest governments in the world to mandate a backdoor in end-to-end encrypted (E2EE) communication services: a backdoor to which the authorities have a secret key, letting them view communication on demand. This is big news, and is of direct relevance to Matrix as an end-to-end encrypted communication protocol whose core team is currently centred in the UK.\n Now, we sympathise with the authorities\u2019 predicament here: we utterly abhor child abuse, terrorism, fascism and similar - and we did not build Matrix to enable it. However, trying to mitigate abuse with backdoors is, unfortunately,  fundamentally flawed.\n Backdoors necessarily introduce a fatal weak point into encryption for  everyone, which then becomes the ultimate high value target for attackers. Anyone who can determine the secret needed to break the encryption will gain full access, and you can be absolutely sure   the backdoor key will leak - whether that\u2019s via intrusion, social engineering, brute-force attacks, or accident. And even if you unilaterally trust your current government to be responsible with the keys to the backdoor, is it wise to unilaterally trust their successors? Computer security is only ever a matter of degree, and the only safe way to keep a secret like this safe is for it not to exist in the first place.\n End-to-end encryption is nowadays a completely ubiquitous technology;  an attempt to legislate against it is like trying to turn back the tide or declare a branch of mathematics illegal. Even if Matrix did compromise its encryption, users could easily use any number of other approaches to additionally secure their conversations - from PGP, to OTR, to using one-time pads, to sharing content in password-protected ZIP files. Or they could just switch to a E2EE chat system operating from a jurisdiction without backdoors.\n Governments protect their own data using end-to-end encryption, precisely because they do not want other governments being able to snoop on them. So not only is it hypocritical for governments to argue for backdoors,  it immediately puts their own governmental data at risk of being compromised. Moreover, creating infrastructure for backdoors sets an incredibly bad precedent to the rest of the world - where less salubrious governments will inevitably use the same technology to the massive detriment of their citizens\u2019 human rights.\n Finally, in Matrix\u2019s specific case: Matrix is an encrypted decentralised open network powered by open source software, where anyone can run a server. Even if the Matrix core team were obligated to add a backdoor, this would be visible to the wider world - and  there would be no way to make the wider network adopt it. It would just damage the credibility of the core team, push encryption development to other countries, and the wider network would move on irrespectively.\n In short, we need to keep E2EE as it is so that it benefits the 99.9% of people who are good actors. If we enforce backdoors and undermine it, then the bad 0.1% percent simply will switch to non-backdoored systems while the 99.9% are left vulnerable.\n We\u2019re not alone in thinking this either: the GDPR (the world-leading regulation towards data protection and privacy) explicitly calls out robust encryption as a necessary information security measure. In fact, the risk of US governmental backdoors explicitly caused the  European of Court of Justice to invalidate the Privacy Shield for EU-&gt;US data. The position of the seven governments here (alongside  recent communications by the EU commissioner on the \u2018problem\u2019 of encryption) is a significant step back on the protection of the fundamental right of privacy.\n   This statement from the seven governments aims to protect the general public from bad actors, but it clearly undermines the good ones. What we  really need is something that empowers users and administrators to identify and protect themselves from bad actors, without undermining privacy.\n What if we had a standard way to let users themselves build up and share their own views of whether other users, messages, rooms, servers etc. are obnoxious or not? What if you could visualise and choose which filters to apply to your view of Matrix?\n Just like the Web, Email or the Internet as a whole, there is literally no way to unilaterally censor or block content in Matrix. But what we  can do is provide first-class infrastructure to let users (and room/community moderators and server admins) make up their own mind about who to trust, and what content to allow. This would also provide a means for authorities to publish reputation data about illegal content, providing a privacy-respecting mechanism that admins/mods/users can use to keep illegal content away from their servers/clients.\n  Anyone can gather reputation data about Matrix rooms / users / servers / communities / content, and publish it to as wide or narrow an audience as they like - providing their subjective score on whether something in Matrix is positive or negative in a given context.\n This reputation data is published in a privacy preserving fashion - i.e. you can look up reputation data if you know the ID being queried, but the data is stored pseudonymised (e.g. indexed by a hashed ID).\n Anyone can subscribe to reputation feeds and blend them together in order to inform how they filter their content. The feeds might be their own data, or from their friends, or from trusted sources (e.g. a fact-checking company). Their blended feed can be republished as their own.\n To prevent users getting trapped in a factional filter bubble of their own devising, we\u2019ll provide UI to visualise and warn about the extent of their filtering - and make it easy and fun to shift their viewpoint as needed.\n Admins running servers in particular jurisdictions then have the option to enforce whatever rules they need on their servers (e.g. they might want to subscribe to reputation feeds from a trusted source such as  the IWF, identifying child sexual abuse content, and use it to block it from their server).\n This isn\u2019t just about combating abuse - but the same system can also be used to empower users to filter out spam, propaganda, unwanted NSFW content, etc on their own terms.\n This forms a  relative reputation system. As uncomfortable as it may be, one man\u2019s terrorist is another man\u2019s freedom fighter, and different jurisdictions have different laws - and it\u2019s not up to the Matrix.org Foundation to play God and adjudicate. Each user/moderator/admin should be free to make up their own mind and decide which reputation feeds to align themselves with. That is not to say that this system would help users locate extreme content - the privacy-preserving nature of the reputation data means that it\u2019s only useful to filter  out material which would otherwise already be visible to you - not to locate new content.\n In terms of how this interacts with end-to-end-encryption and mitigating abuse: the reality is that the vast majority of abuse in public networks like Matrix, the Web or Email is visible from the public unencrypted domain. Abusive communities generally want to attract/recruit/groom users - and that means providing a public front door, which would be flagged by a reputation system such as the one proposed above. Meanwhile, communities which are entirely private and entirely encrypted typically still have touch-points with the rest of the world - and even then, the chances are extremely high that they will avoid any hypothetical backdoored servers. In short, investigating such communities requires traditional infiltration and surveillance by the authorities rather than an ineffective backdoor.\n Now, this approach may sound completely sci-fi and implausibly overambitious (our speciality!) - but we\u2019ve actually started successfully building this already, having been refining the idea over the last few years.  MSC2313 is a first cut at the idea of publishing and subscribing to reputation data - starting off with simple binary ban rules. It\u2019s been implemented and in production for over a year now, and is used to maintain shared banlists used by both matrix.org and mozilla.org communities. The next step is to expand this to support a blendable continuum of reputation data (rather than just binary banlists), make it privacy preserving, and get working on the client UX for configuring and visualising them.\n Finally: we are continuing to hire a dedicated Reputation Team to work full time on building this. This is a major investment in the future of Matrix, and frankly is burning money that we don\u2019t really have - but it\u2019s critical to the long-term success of the project, and perhaps the health of the Internet as a whole. There\u2019s nothing about a good relative reputation system which is particularly specific to Matrix, after all, and many other folks (decentralised and otherwise) are clearly in desperate need of one too. We are actively looking for funding to support this work, so if you\u2019re feeling rich and philanthropic (or a government wanting to support a more enlightened approach) we would  love to hear from you at   [email\u00a0protected]!\n Here\u2019s to a world where users have excellent tools to protect themselves online - and a world where their safety is not compromised by encryption backdoors.", "posttime": "2020-10-20 22:44:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "abuse,\u52a0\u5bc6", "title": "\u6253\u51fb\u77e9\u9635\u4e2d\u7684\u6ee5\u7528-\u6ca1\u6709\u540e\u95e8", "title_en": "Combating abuse in Matrix \u2013 without backdoors", "transed": 1, "url": "https://www.matrix.org/blog/2020/10/19/combating-abuse-in-matrix-without-backdoors", "via": "", "real_tags": ["abuse", "\u52a0\u5bc6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030056, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LocalCDN\u662f\u4e00\u79cdWeb\u6d4f\u89c8\u5668\u6269\u5c55\uff0c\u5b83\u6a21\u62df\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\u6765\u6539\u5584\u60a8\u7684\u5728\u7ebf\u9690\u79c1\u3002\u5b83\u62e6\u622a\u6d41\u91cf\uff0c\u5728\u672c\u5730\u67e5\u627e\u652f\u6301\u7684\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u6ce8\u5165\u73af\u5883\u3002\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u81ea\u52a8\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u4e8b\u5148\u914d\u7f6e\u3002\u8bf7\u968f\u610f\u4f7f\u7528\u4ee5\u4e0b\u6d4b\u8bd5\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4ee5\u786e\u5b9a\u60a8\u662f\u5426\u53d7\u5230\u9002\u5f53\u7684\u4fdd\u62a4\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u4e0b\u56fe\u6216\u9605\u8bfb\u6559\u7a0b\u6216\u6211\u4eec\u7684\u7ef4\u57fa\u9875\u9762\u3002\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4eceMozilla\u4e0b\u8f7d\u8be5\u6269\u5c55\u5e76\u8bd5\u7528\u3002\nLocalCDN\u652f\u6301100\u591a\u4e2a\u5e93\u548c27\u4e2aCDN\uff01\n\u5982\u679c\u60a8\u53d1\u73b0\u4e86\u4e0d\u53d7\u652f\u6301\u7684\u5e93\u6216CDN\uff0c\u8bf7\u968f\u65f6\u5728Codeberg\u4e0a\u6253\u5f00\u95ee\u9898\u6216\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002", "note_en": "LocalCDN is a web browser extension that emulates Content Delivery Networks to improve your online privacy. It intercepts traffic, finds supported resources locally, and injects them into the environment. All of this happens automatically, so no prior configuration is required. Feel free to use the following  testing utility to find out if you are properly protected. For more information, please look at the graphic below or read the  tutorial or our  Wiki pages. You can also  download the extension directly from Mozilla and just try it.\n  LocalCDN supports over 100 Libraries and 27 CDNs!         \n  If you have found an unsupported Library or CDN, feel free to open an issue at  Codeberg or send an  email.", "posttime": "2020-10-20 22:43:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u62df,extension,\u652f\u6301", "title": "LocalCDN-\u6a21\u62dfCDN\u4ee5\u6539\u5584\u60a8\u7684\u5728\u7ebf\u9690\u79c1\u7684\u6269\u5c55", "title_en": "LocalCDN \u2013 an extension that emulates CDN to improve your online privacy", "transed": 1, "url": "https://www.localcdn.org", "via": "", "real_tags": ["\u6a21\u62df", "extension", "\u652f\u6301"]}, {"category": "", "categoryclass": "", "imagename": "feddd3c63be51cbfdf0157dd7226aed9.jpg", "infoid": 1030055, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff0c\u6211\u4e5f\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u9ad8\u5927\u7684\u4eba\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6df1\u8c19\u6587\u5b66\u548c\u7406\u8bba\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u53ef\u80fd\u662f\u663e\u800c\u6613\u89c1\u7684\u89c2\u5bdf\u3002\u7136\u800c\uff0c\u6211\u53d1\u73b0\uff0c\u6709\u4e00\u79cd\u6f5c\u79fb\u9ed8\u5316\u7684\u76f4\u89c9\u662f\u4e13\u5bb6\u5bf9\u4e00\u4e2a\u9886\u57df\u7684\u7406\u89e3\u7684\u57fa\u7840\uff0c\u8fd9\u4e9b\u76f4\u89c9\u4ece\u6765\u6ca1\u6709\u5728\u6587\u732e\u4e2d\u76f4\u63a5\u9648\u8ff0\u8fc7\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u5bb9\u6613\u7528\u6587\u732e\u8981\u6c42\u7684\u4e25\u8c28\u6027\u6765\u8bc1\u660e\u3002\u56e0\u6b64\uff0c\u6d1e\u5bdf\u529b\u53ea\u5b58\u5728\u4e8e\u5bf9\u8bdd\u548c\u6f5c\u53f0\u8bcd\u4e2d\uff0c\u8fd9\u4f7f\u5f97\u666e\u901a\u8bfb\u8005\u65e0\u6cd5\u63a5\u89e6\u5230\u5b83\u4eec\u3002\n\u56e0\u4e3a\u6211\u4e0d\u9700\u8981\u5728\u4e92\u8054\u7f51\u4e0a\u53d1\u5e16\u7684\u4e25\u8c28(\u751a\u81f3\u4e0d\u9700\u8981\u662f\u6b63\u786e\u7684)\uff0c\u6240\u4ee5\u6211\u4f1a\u5728\u8fd9\u91cc\u8d34\u51fa\u4e00\u4e9b\u6211\u7406\u89e3\u7684\u76f4\u89c9\u3002\u5982\u679c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u8df3\u5230\u201c\u7814\u7a76\u5efa\u8bae\u201d\u90e8\u5206\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5178\u578b\u7684\u8bba\u6587\u6709\u5f88\u591a\u65b9\u5f0f\u5ffd\u7565\u4e86\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\u4e8b\u60c5\u3002\n\u7279\u522b\u662f\uff0c\u6211\u53d1\u73b0\u6709\u7edf\u8ba1\u5b66\u80cc\u666f\u7684\u4eba\u503e\u5411\u4e8e\u653e\u5f03\u6df1\u5ea6\u5b66\u4e60\uff0c\u56e0\u4e3a\u4ece\u4f20\u7edf\u7684\u7edf\u8ba1\u5b66\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u53ef\u80fd\u594f\u6548\u3002\u8fd9\u8ba9\u5b83\u53d8\u5f97\u975e\u5e38\u4ee4\u4eba\u6cae\u4e27\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u5f80\u5f80\u5bf9\u5176\u7ed3\u679c\u548c\u65b9\u6cd5\u7684\u770b\u6cd5\u6bd4\u4ed6\u4eec\u7ee7\u7eed\u6210\u529f\u7684\u4fdd\u8bc1\u8981\u9eef\u6de1\u5f97\u591a\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u5728\u8fd9\u91cc\u6211\u80fd\u5f25\u5408\u4e00\u4e9b\u5dee\u8ddd\u3002\n\u6211\u8981\u8bd5\u7740\u76f4\u89c2\u5730\u89e3\u91ca\u7684\u5173\u952e\u662f\uff0c\u4e3a\u4ec0\u4e48\u6a21\u578b\u8d8a\u5927\u8d8a\u6df1\uff0c\u5373\u4f7f\u5b83\u4eec\u6d88\u8017\u7684\u6570\u636e\u91cf\u4fdd\u6301\u4e0d\u53d8\u6216\u53d8\u5c0f\uff0c\u4e5f\u603b\u662f\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\u5176\u4e2d\u4e00\u4e9b\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u662f\u9519\u8bef\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u66f4\u6709\u53ef\u80fd\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u7684\u3002\u6211\u5728\u8fd9\u91cc\u63cf\u8ff0\u7684\u5f71\u54cd\u53ef\u80fd\u5f88\u91cd\u8981\uff0c\u5373\u4f7f\u5b83\u4eec\u53ef\u80fd\u4e0d\u662f\u4e3b\u8981\u539f\u56e0\u3002\u8fd9\u91cc\u4e0d\u4f1a\u6709\u4ec0\u4e48\u7279\u522b\u6b63\u5f0f\u7684\u4e1c\u897f\uff0c\u8fd9\u4f1a\u8ba9\u4e00\u4e9b\u4eba\u53d1\u75af\uff0c\u4e5f\u4f1a\u8ba9\u53e6\u4e00\u4e9b\u4eba\u677e\u4e00\u53e3\u6c14\u3002\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u4e00\u5207\u90fd\u4ee4\u4eba\u607c\u706b\uff0c\u90a3\u5c31\u53bb\u770b\u770b\u5173\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5f69\u7968\u7406\u8bba\u7684\u8bba\u6587\u5427\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u8fd9\u662f\u6700\u63a5\u8fd1\u6b63\u5f0f\u7406\u8bba\u7684\u4e1c\u897f\uff0c\u5b83\u6982\u62ec\u4e86\u5927\u90e8\u5206\u5185\u5bb9\uff0c\u76ee\u524d\u6b63\u5728\u53d6\u5f97\u8fdb\u5c55\u3002\n\u5982\u679c\u4f60\u4ece\u4e00\u4e2a\u5408\u7406\u7684\u4f4d\u7f6e\u5f00\u59cb\u4f60\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u5df2\u7ecf\u63a5\u8fd1\u597d\u7684\u4f4d\u7f6e\u4e86\uff0c\u5373\u4f7f\u5b83\u4eec\u5b8c\u5168\u662f\u968f\u673a\u7684\u3002\n\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u8ddd\u79bb\u662f\u4e00\u4e2a\u7edf\u8ba1\u5b66\u6982\u5ff5\u3002\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u7684\u5e73\u65b9\u53ea\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u548c\uff0c\u7edf\u8ba1\u6570\u636e\u544a\u8bc9\u6211\u4eec\u6240\u6709\u5927\u548c\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5b83\u4eec\u53d8\u6210\u6b63\u6001\u5206\u5e03\uff0c\u5e76\u4e14\u968f\u7740\u603b\u548c\u4e2d\u9879\u6570\u7684\u589e\u52a0\uff0c\u5b83\u4eec\u5728\u5e73\u5747\u503c\u5468\u56f4\u53d8\u5f97\u8d8a\u6765\u8d8a\u7d27\u3002\u8fd9\u610f\u5473\u7740\u5f53\u6d89\u53ca\u5230\u4efb\u4f55\u6570\u91cf\u7684\u884c\u4e3a\u826f\u597d\u7684\u968f\u673a\u6027\u65f6\uff0c\u9ad8\u7ef4\u4e2d\u7684\u6240\u6709\u8ddd\u79bb\u90fd\u5927\u81f4\u76f8\u540c\u3002\u5728\u6a21\u578b\u4e2d\uff0c\u53c2\u6570\u7531\u4e8e\u521d\u59cb\u5316\u800c\u4ee5\u968f\u673a\u53d8\u91cf\u5f00\u59cb\uff0c\u7531\u4e8e\u6570\u636e\u7684\u6027\u8d28\u800c\u4ee5\u968f\u673a\u53d8\u91cf\u7ed3\u675f\uff0c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u9002\u7528\u4e8e\u8fd9\u4e9b\u548c\u3002\u56e0\u6b64\uff0c\u9ad8\u7ef4\u6a21\u578b\u4e2d\u7684\u6240\u6709\u53c2\u6570\u96c6\u5f7c\u6b64\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u81f4\u76f8\u7b49\u3002\n\u5728\u6211\u4eec\u751f\u6d3b\u7684\u7ef4\u5ea6\u4e2d\uff0c\u6211\u4eec\u4e60\u60ef\u4e86\u8fd9\u6837\u7684\u60f3\u6cd5\uff0c\u6709\u4e9b\u4e1c\u897f\u6bd4\u5176\u4ed6\u4e1c\u897f\u66f4\u63a5\u8fd1\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5728\u8111\u6d77\u4e2d\u60f3\u5230\u50cf\u201c\u533a\u57df\u201d\u8fd9\u6837\u7684\u6982\u5ff5\uff0c\u5e76\u8003\u8651\u50cf\u53c2\u6570\u7684\u574f\u533a\u57df\u548c\u597d\u533a\u57df\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u4f46\u662f\u9ad8\u7ef4\u7a7a\u95f4\u662f\u975e\u5e38\u7d27\u5bc6\u76f8\u8fde\u7684\u3002\u4f60\u53ef\u4ee5\u4ece\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u8df3\u5230\u4efb\u4f55\u5730\u65b9\u3002\u6ca1\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5730\u65b9\u53ef\u4ee5\u5f00\u59cb\u3002\u5982\u679c\u968f\u673a\u521d\u59cb\u5316\u7684\u5927\u5c0f\u5927\u81f4\u6b63\u786e\uff0c\u5219\u6240\u6709\u5730\u65b9\u90fd\u76f8\u5f53\u597d\u3002\u65e0\u8bba\u60a8\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u60a8\u90fd\u63a5\u8fd1\u826f\u597d\u7684\u53c2\u6570\uff0c\u800c\u4e14\u4e0e\u5176\u4ed6\u4efb\u4f55\u53c2\u6570\u4e00\u6837\uff0c\u60a8\u4e5f\u5f88\u53ef\u80fd\u63a5\u8fd1\u826f\u597d\u7684\u53c2\u6570\u3002\u6211\u4eec\u9700\u8981\u7684\u552f\u4e00\u5047\u8bbe\u662f\uff0c\u6700\u7ec8\u6a21\u578b\u7684\u53c2\u6570\u6765\u81ea\u4e0e\u521d\u59cb\u5316\u65f6\u7684\u53c2\u6570\u5927\u81f4\u76f8\u540c\u7684\u5206\u5e03\uff0c\u8fd9\u662f\u76f8\u5f53\u6e29\u548c\u7684\u3002\n\u9ad8\u7ef4\u7a7a\u95f4\u4e0d\u592a\u53ef\u80fd\u6709\u5c40\u90e8\u6700\u4f18\u503c\uff0c\u4e5f\u53ef\u80fd\u6839\u672c\u6ca1\u6709\u6700\u4f18\u503c\u3002\n\u53ea\u9700\u56de\u60f3\u4e00\u4e0b\u4e00\u7ec4\u53c2\u6570\u5904\u4e8e\u6700\u4f73\u72b6\u6001\u6240\u9700\u7684\u6761\u4ef6\u3002\u6240\u6709\u7684\u68af\u5ea6\u90fd\u9700\u8981\u4e3a\u96f6\uff0c\u800cHessian\u9700\u8981\u662f\u534a\u6b63\u5b9a\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u9700\u8981\u88ab\u56f4\u5899\u5305\u56f4\u3002\u57284\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7a7f\u5899\u800c\u8fc7\u3002GPT3\u67091750\u4ebf\u4e2a\u53c2\u6570\u3002\u57281750\u4ebf\u4e2a\u7ef4\u5ea6\u4e2d\uff0c\u5899\u58c1\u8fdc\u8fdc\u4f4e\u4e8e\u4f60\u7684\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u5b8c\u5168\u89c2\u5bdf\u5b83\u4eec\uff0c\u90a3\u5c31\u50cf\u662f\u4e0a\u5e1d\u4fef\u89c6\u7740\u5355\u4e2a\u8d28\u5b50\u3002\n\u5982\u679c\u635f\u5931\u524d\u666f\u4e2d\u6709\u4efb\u4f55\u968f\u673a\u6027(\u5f53\u7136\u662f\u968f\u673a\u7684)\uff0c\u90a3\u4e48\u6a21\u578b\u5fc5\u987b\u9009\u62e9\u7684\u6570\u767e\u4e07\u6216\u6570\u5341\u4ebf\u4e2a\u65b9\u5411\u90fd\u4e0d\u592a\u53ef\u80fd\u540c\u65f6\u4e0a\u5761\u3002\u6709\u8fd9\u4e48\u591a\u65b9\u5411\u53ef\u4f9b\u9009\u62e9\uff0c\u4f60\u603b\u4f1a\u6709\u81f3\u5c11\u4e00\u4e2a\u65b9\u5411\u53ef\u9003\u3002\u8fd9\u662f\u5b8c\u5168\u4e0d\u53ef\u80fd\u7684\uff0c\u4efb\u4f55\u4e00\u4e2a\u5927\u6a21\u578b\u90fd\u80fd\u63a5\u8fd1\u4efb\u4f55\u4e00\u4e2a\u6700\u4f18\u6a21\u578b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6700\u4f18\u7684\u5b58\u5728\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u3002\u5982\u679c\u6ca1\u6709\u660e\u786e\u7684\u6b63\u5219\u5316\u6765\u9650\u5236\u503c\u7684\u5927\u5c0f\uff0c\u5f3a\u5236\u6b63\u66f2\u7387\uff0c\u5e76\u635f\u5bb3\u6a21\u578b\u7684\u6027\u80fd\uff0c\u6240\u6709\u771f\u5b9e\u7684\u6a21\u578b\u90fd\u4f1a\u53d1\u6563\u3002\n\u63d0\u524d\u505c\u6b62\u7684\u6b63\u5219\u5316\u6bd4\u4efb\u4f55\u624b\u5de5\u6311\u9009\u7684\u5148\u9a8c\u6b63\u5219\u5316\u90fd\u8981\u597d\uff0c\u5305\u62ec\u9690\u5f0f\u6b63\u5219\u5316\uff0c\u5982\u6a21\u578b\u5927\u5c0f\u3002\n\u7edf\u8ba1\u5b66\u5165\u95e8\u6559\u79d1\u4e66\u4e2d\u6709\u4e00\u534a\u662f\u5173\u4e8e\u5982\u4f55\u5904\u7406\u5171\u7ebf\u6027\u7684\u3002\u4f46\u662f\u5171\u7ebf\u6027\u53ea\u5728\u4f60\u5173\u5fc3\u5f52\u56e0\u7684\u60c5\u51b5\u4e0b\u624d\u91cd\u8981\uff0c\u800c\u4f60\u5e76\u4e0d\u5173\u5fc3\u3002\u5047\u8bbe\u4f60\u6709\u4e24\u4e2a\u8fd1\u4e4e\u5171\u7ebf\u7684\u8f93\u5165\u3002\u5728\u68af\u5ea6\u4e0b\u964d\u5f00\u59cb\u65f6\uff0c\u6bcf\u4e2a\u76f8\u5173\u8f93\u5165\u7684\u7cfb\u6570\u90fd\u5f97\u5230\u51e0\u4e4e\u76f8\u540c\u7684\u68af\u5ea6\u3002\u6700\u7ec8\u5b83\u4eec\u4e0d\u4f1a\uff0c\u6700\u7ec8\u5b83\u4eec\u7684\u68af\u5ea6\u4e4b\u95f4\u7684\u4e00\u4e9b\u5dee\u5f02\u5c06\u662f\u566a\u58f0\uff0c\u4ece\u800c\u8fc7\u5ea6\u62df\u5408\u3002\u6240\u4ee5\uff0c\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u4f60\u5c31\u505c\u4e0b\u6765\uff01\n\u8fd9\u610f\u5473\u7740\u5177\u6709n\u4e2a\u53c2\u6570\u548cn+1\u4e2a\u53c2\u6570\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u901a\u8fc7\u63d0\u524d\u505c\u6b62\u6709\u6548\u5730\u63a7\u5236\u3002\u60a8\u53ef\u80fd\u6709\u5f88\u591a\u5b9e\u9645\u4e0a\u672a\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u4f46\u662f\u540c\u6837\uff0c\u60a8\u5e76\u4e0d\u5173\u5fc3\u3002\u62e5\u6709\u4f4e\u7ef4\u6a21\u578b\u53ea\u4f1a\u4f7f\u6a21\u578b\u4ea7\u751f\u504f\u5dee\uff0c\u56e0\u4e3a\u5982\u679c\u4f4e\u7ef4\u6a21\u578b\u8d77\u4f5c\u7528\uff0c\u7531\u4e8e\u6e10\u53d8\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u63d0\u524d\u505c\u6b62\u4f1a\u81ea\u52a8\u9009\u62e9\u3002\u5f53\u60a8\u83b7\u5f97\u7684\u5927\u591a\u6570\u6e10\u53d8\u90fd\u662f\u566a\u6ce2\u65f6\uff0c\u9a8c\u8bc1\u96c6\u4f1a\u544a\u8bc9\u60a8\uff0c\u56e0\u6b64\u60a8\u53ea\u9700\u5ffd\u7565\u5b83\u4eec\u5e76\u505c\u6b62\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u5411\u5b83\u8d70\u53bb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u56f0\u5728\u8def\u4e0a\uff0c\u56e0\u4e3a\u6ca1\u6709\u5c40\u90e8\u6700\u4f18\u3002\n\u4e00\u65e6\u6211\u4eec\u5076\u7136\u53d1\u73b0\u4e86\u4e00\u7ec4\u5f88\u597d\u7684\u53c2\u6570\uff0c\u6211\u4eec\u5c31\u4f1a\u77e5\u9053\u5b83\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u505c\u4e0b\u6765\u4e86\u3002\n\u5c31\u8fd9\u6837\u3002\u4e00\u65e6\u4f60\u76f8\u4fe1\u4e86\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u76f4\u89c9\u5730\u53d1\u73b0\uff0c\u5373\u4f7f\u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\uff0c\u5927\u7684\u6a21\u578b\u4e5f\u603b\u662f\u66f4\u597d\uff0c\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b\u8d8b\u52bf\u90fd\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u771f\u5b9e\uff0c\u4f60\u62e5\u6709\u7684\u7ef4\u5ea6\u8d8a\u591a\u3002\n\u522b\u518d\u8bf4\u6700\u4f4e\u9650\u5ea6\u4e86\u3002\u4e0d\u8981\u518d\u8c08\u8bba\u60a8\u7684\u4f18\u5316\u7b97\u6cd5\u662f\u5982\u4f55\u5728\u6700\u5c0f\u503c\u9644\u8fd1\u8fd0\u884c\u7684\u3002\u4ece\u6765\u6ca1\u6709\u4eba\u628a\u4ed6\u4eec\u7684\u6a21\u578b\u8bad\u7ec3\u5230\u63a5\u8fd1\u6536\u655b\u7684\u7a0b\u5ea6\u3002\u4e9a\u5f53\u751a\u81f3\u4e0d\u80fd\u88ab\u8bc1\u660e\u662f\u6536\u655b\u7684\u3002\u6240\u6709\u7684\u771f\u4eba\u6a21\u7279\u90fd\u5206\u9053\u626c\u9573\u4e86\uff01\u4f60\u79bb\u6700\u4f4e\u9650\u5ea6\u8fd8\u5dee\u5f97\u8fdc\u5462\uff01\u522b\u518d\u8bf4Minima\u4e86\uff0c\u4ed6\u5988\u7684\uff01\u4e3a\u4ec0\u4e48\u8981\u8003\u8651\u6700\u4f4e\u9650\u5ea6\u5462\uff1f\uff01\u6700\u4f4e\u9650\u5ea6\u662f\u4e2a\u795e\u8bdd\uff01\n\u6bcf\u4e2a\u4eba\u90fd\u8bc1\u660e\u4e86\u4ed6\u4eec\u5173\u4e8e\u51f8\u51fd\u6570\u6781\u5c0f\u503c\u7684\u7ed3\u679c\uff0c\u7136\u540e\u8c08\u8bba\u5982\u4f55\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u6765\u8bc1\u660e\u5173\u4e8e\u975e\u51f8\u51fd\u6570\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u6df1\u5ea6\u6a21\u578b\u8db3\u591f\u63a5\u8fd1\u4e8e\u51f8\uff0c\u6240\u6709\u5e38\u89c1\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u5de5\u4f5c\uff0c\u56e0\u4e3a\u7ef4\u6570\u4f7f\u5f97\u5c40\u90e8\u6700\u4f18\u53d8\u5f97\u4e0d\u53ef\u80fd\u3002\u771f\u6b63\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u7684\u662f\u7b97\u6cd5\u7684\u884c\u4e3a\u5982\u4f55\u8fdc\u79bb\u6781\u5c0f\u503c\u3002\n\u4f18\u5316\u7b97\u6cd5\u6700\u597d\u88ab\u8ba4\u4e3a\u662f\u8981\u5b66\u4e60\u7684\u4e8b\u7269\u7684\u4f18\u5148\u961f\u5217\uff0c\u9700\u8981\u8bc1\u660e\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u60a8\u7684\u7b97\u6cd5\u9996\u5148\u5b66\u4e60\u597d\u7684\u4e1c\u897f\u3002\u5f53\u60a8\u7684\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8fbe\u5230\u9876\u5cf0\u65f6\uff0c\u5b83\u5f00\u59cb\u4e86\u89e3\u66f4\u591a\u4e0d\u597d\u7684\u4e1c\u897f\u800c\u4e0d\u662f\u597d\u7684\u4e1c\u897f\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u66f4\u5584\u4e8e\u5728\u574f\u4e8b\u4e4b\u524d\u5b66\u4e60\u597d\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5b9e\u73b0\u66f4\u4f4e\u7684\u635f\u5931\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u89e3\u91ca\u4e86\u5f88\u591a\u5176\u4ed6\u4ee4\u4eba\u56f0\u60d1\u7684\u73b0\u8c61\uff0c\u6bd4\u5982\u4e3a\u4ec0\u4e48\u84b8\u998f\u6548\u679c\u8fd9\u4e48\u597d\u3002\u84b8\u998f\u4f7f\u5b66\u751f\u6a21\u578b\u5728\u5b66\u4e60\u574f\u4e1c\u897f\u4e4b\u524d\u5148\u5b66\u4e60\u66f4\u591a\u7684\u597d\u4e1c\u897f\uff0c\u56e0\u4e3a\u6559\u5e08\u6a21\u578b\u5df2\u7ecf\u77e5\u9053\u66f4\u591a\u7684\u597d\u4e1c\u897f\u4e86\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6a21\u578b\u53ef\u4ee5\u4ece\u4e00\u4e2a\u8f83\u5f31\u7684\u6a21\u578b\u4e2d\u6709\u6548\u5730\u5b66\u4e60\u7684\u539f\u56e0\u3002", "note_en": "This is a big question, and I\u2019m not a particularly big person. As such, these are all likely to be obvious observations to someone deep in the literature and theory. What I find however is that there are a base of unspoken intuitions that underlie expert understanding of a field, that are never directly stated in the literature, because they can\u2019t be easily proved with the rigor that the literature demands. And as a result, the insights exist only in conversation and subtext, which make them inaccessible to the casual reader.\n Because I have no need of rigor to post on the internet, (or even a need to be correct) I\u2019m going to post some of those intuitions here as I understand them. If this is all obvious to you, skip to the section on \u201cSuggestions for Research\u201d because there are a lot of ways that I think typical papers ignore things that most researchers believe to be true.\n In particular I find that people from a statistics background tend to throw up their hands at deep learning, because from a traditional statistics perspective, none of it can possibly work. This makes it very frustrating that it does. As a result they tend to have a much more dim view of its results and methods than their continued success warrants, so I hope here that I can bridge some of that gap.\n The key thing I\u2019m going to try to intuitively explain is why models always get better when they are bigger and deeper, even when the amount of data they consume stays the same or gets smaller. Some of this might turn out to be wrong, but I think it\u2019s much more likely to be incomplete than to be wrong. The effects I describe here likely matter, even though it\u2019s possible they aren\u2019t the dominant causes. There is going to be nothing terribly formal here, which will madden some people, and relieve others. If you find this all irritatingly hand wavy, go read papers about the  lottery ticket theory of deep learning instead, because I think that\u2019s the closest thing to a formal theory that encapsulates most of this and is currently making progress.\n  If you start your parameters in a reasonable place, they\u2019re already close to good ones, even though they\u2019re totally random.\n In high dimensional spaces, distance is a statistical concept. Squared euclidean distance is just a big sum, and statistics tells us what happens to all big sums. They  become normal distributions, and they become relatively tighter and tighter around their mean as the number of terms in the sum increases. This means that when there is any amount of well behaved randomness involved, all distances in high dimensions are about the same. In a model, with parameters that begin as random variables due to initialization, and end as random variables due to the nature of the data, the central limit theorem applies to these sums. So all sets of parameters in a high dimensional model are about equally close to/far from each other.\n In the dimensions we live in, we\u2019re used to the idea that some things are closer together than other things, so we mentally think of concepts like \u201cregions\u201d and think about things like bad regions and good regions for parameters. But high dimensional spaces are extremely well connected. You can get to anywhere with a short jump from anywhere else. There are no bad places to start. If the magnitudes of the random initialization are about right, all places are reasonably good. No matter where you start, you\u2019re close to good parameters, and you\u2019re as likely to be close to good parameters as to any others. The only assumption we need for this to be formally true is that the parameters of the final models come from roughly the same distribution as the parameters at initialization, which is pretty mild.\n High dimensional spaces are unlikely to have local optima, and probably don\u2019t have any optima at all.\n  Just recall what is necessary for a set of parameters to be at a optimum. All the gradients need to be zero, and the hessian needs to be positive semidefinite. In other words, you need to be surrounded by walls. In 4 dimensions, you can walk through walls. GPT3 has 175 billion parameters. In 175 billion dimensions, walls are so far beneath your notice that if you observe them at all it is like God looking down upon individual protons.\n If there\u2019s any randomness at all in the loss landscape, which of course there is, it\u2019s vanishingly unlikely that all of the millions or billions of directions the model has to choose from will be simultaneously uphill. With so many directions to choose from you will always have at least one direction to escape. It\u2019s just completely implausible that any big model comes close to any optima at all. In fact it\u2019s implausible that an optimum exists. Without explicit regularization that bounds the magnitude of the values, forces positive curvature, and hurts performance of the model, all real models diverge.\n  Early stopping is better regularization than any hand picked a priori regularization, including implicit regularization like model size.\n Half of an introductory statistics textbook is about how to deal with collinearity. But collinearity only matters if you care about attribution, which you don\u2019t. Suppose you have two nearly collinear inputs. At the beginning of gradient descent, every correlated input\u2019s coefficient is getting nearly the same gradients. Eventually they won\u2019t, and eventually some of the difference between their gradients will be noise and thus overfitting. So when that happens you just stop!\n This means that the difference between having n parameters and n+1 parameters is something that is effectively controlled by early stopping. You might have a lot of effectively unused parameters, but again, you don\u2019t care. Having a low dimensional model just biases the model, because if a low dimensional model worked, early stopping would choose that automatically due to the way gradients work. The validation set tells you when most of the gradients you\u2019re getting are just noise, so you just ignore them and stop.\n  When we start walking to it, we can\u2019t ever get stuck along the way, because there are no local optima.\n Once we\u2019ve stumbled upon a good set of parameters, we\u2019ll know it and we can just stop.\n That\u2019s it. Once you believe all of these things, then it becomes intuitive that big models are always better even without more data, because all of these trends become more and more true the more dimensions you have.\n  Stop talking about minima. Stop talking about how your optimization algorithm behaves around a minimum. Nobody ever trains their model remotely close to convergence. ADAM doesn\u2019t even provably converge. All real models diverge! You are nowhere close to a minimum! Stop talking about minima already goddamnit! Why even think about minima?! Minima are a myth!\n Everybody proves their results for minima of a convex function, and then talks about how further research is necessary to prove results about non-convex functions. But this doesn\u2019t make any sense. Deep models are close enough to convex for all the usual things to work just because the dimensionality makes local optima impossible. What really needs further research is how algorithms behave very far from minima.\n An optimization algorithm is best thought of as a priority queue of things to learn, and the thing that\u2019s important to prove is that your algorithm learns the good things first. When your model peaks on the validation set, it is starting to learn more bad things than good things. If you have an optimization algorithm that is better at learning the good things before the bad things, then it will achieve a lower loss. For me this explains a lot of otherwise confusing phenomena, like why  distillation works so well. Distillation causes the student model to learn more of the good things before it learns the bad things, because the teacher model knows more good things than bad things already. This is why it\u2019s possible for a more powerful model to learn usefully from a weaker one.", "posttime": "2020-10-20 22:43:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u5b66\u4e60,learning,\u6a21\u578b", "title": "\u4e3a\u4ec0\u4e48\u6df1\u5ea6\u5b66\u4e60\u80fd\u594f\u6548\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u5e94\u8be5\u594f\u6548", "title_en": "Why Deep Learning Works Even Though It Shouldn\u2019t", "transed": 1, "url": "https://moultano.wordpress.com/2020/10/18/why-deep-learning-works-even-though-it-shouldnt/", "via": "", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u5b66\u4e60", "learning", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "b5d0f1167a86fdbbb8945644fc4c54f6.png", "infoid": 1030054, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Riak1.4\u5305\u62ec\u8ba1\u6570\u5668\u3002\u8fd9\u662f\u91cc\u4e9a\u514b\u6253\u7834\u5e38\u89c4\u7684\u4e00\u6b21\u7a81\u7834\u3002\u6211\u4eec\u603b\u662f\u8bf4\uff1a\u201c\u4f60\u7684\u6570\u636e\u5bf9Riak\u6765\u8bf4\u662f\u4e0d\u900f\u660e\u7684\u201d\uff0c\u4f46\u53cd\u9a73\u8bf4\u8fd9\u4e0d\u662f\u771f\u7684\u3002Riak\u77e5\u9053\u60a8\u9488\u5bf9Counter Key\u5b58\u50a8\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u5982\u4f55\u9012\u589e\u548c\u9012\u51cf\u3002\u4f60\u7528\u8ba1\u6570\u5668API\u544a\u8bc9Riakthis\u3002\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u83b7\u53d6\u3001\u53d8\u5f02\u548c\u653e\u7f6e\u8ba1\u6570\u5668\uff0c\u60a8\u53ea\u9700\u8bf4\uff1a\u9012\u589e5\u6216\u9012\u51cf100\u3002\u60a8\u4ece\u4e0d\u53d1\u9001avlock\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0cRiak\u77e5\u9053\u5982\u4f55\u5c06\u5e76\u53d1\u5199\u5165\u5408\u5e76\u5230\u8ba1\u6570\u5668\u3002\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u8ba1\u6570\u5668\u7684\u5144\u5f1f\u59d0\u59b9\uff0c\u4f60\u603b\u662f\u770b\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u503c\u3002\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u5199\u5165\uff0c\u6700\u7ec8\uff0c\u8ba1\u6570\u5668\u5c06\u53cd\u6620\u6240\u6709\u5199\u5165\u5e76\u8fbe\u5230\u4e00\u81f4\u7684\u503c\u3002\n\u8ba1\u6570\u5668\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u60a8\u4e0d\u80fd\u4ec5\u4ec5\u5728\u8ba1\u6570\u5668\u4e0a\u6784\u5efa\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u3002\u5bf9\u4e8eRiak2.0\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e9b\u66f4\u591a\u7684\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u901a\u8fc7\u6dfb\u52a0\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\uff0c\u60a8\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u5730\u5bf9\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5b58\u50a8\u9700\u6c42\u8fdb\u884c\u5efa\u6a21\uff0c\u800c\u4e0d\u5fc5\u518d\u7f16\u5199\u5144\u5f1f\u5408\u5e76\u51fd\u6570\u3002\n\u5f53\u6211\u4eec\u5728\u8fc7\u53bb\u8ba8\u8bba\u5411Riak\u6dfb\u52a0\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u6211\u4eec\u8c08\u5230\u4e86CRDT\u3002CRDT\u4ee3\u8868(\u4e0d\u540c\u7684)\u65e0\u51b2\u7a81\u590d\u5236\u6570\u636e\u7c7b\u578b\u3001\u6536\u655b\u590d\u5236\u6570\u636e\u7c7b\u578b\u3001\u4ea4\u6362\u590d\u5236\u6570\u636e\u7c7b\u578b\u7b49\u3002\u5173\u952e\u7684\u3001\u91cd\u590d\u7684\u77ed\u8bed\u8868\u660e\uff0c\u6211\u4eec\u6b63\u5728\u5904\u7406\u590d\u5236\u7684\u6570\u636e\u7c7b\u578b\u3002\n\u590d\u5236\u5bf9\u4e8eRiak\u6765\u8bf4\u662f\u6b63\u5e38\u7684\u3002\u5b83\u662fN\u503c\u5b9a\u4e49\u7684\u3002\u6570\u636e\u7c7b\u578b\u5728\u8ba1\u7b97\u4e2d\u76f8\u5f53\u5e38\u89c1\u3002\u96c6\u5408\u3001\u888b\u5b50\u3001\u5217\u8868\u3001\u5bc4\u5b58\u5668\u3001\u5730\u56fe\u3001\u8ba1\u6570\u5668\u2026\u3002\u7b49\u7b49\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u5269\u4e0bC\u6765\u5904\u7406\u4e86\u3002\n15\u5e74\u524d\uff0c\u5361\u6d1b\u65af\u00b7\u5df4\u594e\u7f57(Carlos Baquero)\u548c\u5f17\u6717\u897f\u7d22\u00b7\u7a46\u62c9(Franciso Moura)\u63d0\u51fa\u4e86\u57fa\u4e8e\u72b6\u6001(\u6216\u6536\u655bCRDT)\u7684CRDT\uff0c\u4f5c\u4e3a\u4e00\u79cd\u79f0\u4e3a\u8fde\u63a5\u534a\u683c\u7684\u4e1c\u897f\u7684\u5e94\u7528\uff1a\u504f\u5e8f\u96c6\u5408\u7684\u4e09\u5143\u7ec4\u3001\u6700\u5c0f\u5143\u7d20(\u5e95\u5c42\u5475\u5475)\u548c\u4e00\u4e2a\u4ea7\u751f\u6700\u5c0f\u4e0a\u754c\u7684\u51fd\u6570\u3002\u6b64\u51fd\u6570\u5fc5\u987b\u662f\u5e42\u7b49\u3001\u7ed3\u5408\u548c\u53ef\u4ea4\u6362\u7684\uff0c\u5e76\u4e14\u5f53\u5e94\u7528\u4e8e\u4e24\u4e2a\u96c6\u5408\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u5408\u5e76\u7684\u6216\u81f3\u5c11\u4e0a\u754c\u7684\u96c6\u5408\uff0c\u8be5\u96c6\u5408\u4e5f\u662f\u504f\u5e8f\u96c6\u5408\u7684\u5b9e\u4f8b\u3002\nRiak\u662f\u4e00\u4e2a\u6700\u7ec8\u4e00\u81f4\u7684\u7cfb\u7edf\u3002\u5b83\u975e\u5e38\u503e\u5411\u4e8eCAP\u9891\u8c31\u7684AP\u7aef\u3002\u6211\u4eec\u901a\u8fc7\u5411\u5907\u7528\u8282\u70b9\u6267\u884c\u8349\u7387\u4ef2\u88c1\u5199\u5165\u4e4b\u7c7b\u7684\u64cd\u4f5c\u6765\u5b9e\u73b0\u6b64\u53ef\u7528\u6027\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6ca1\u6709\u5206\u533a\u548c\u8bb8\u591a\u8282\u70b9\uff0c\u4ea4\u53c9\u6216\u5e76\u53d1\u5199\u5165\u4e5f\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\u3002\u4f20\u7edf\u4e0a\uff0cRiak\u4fdd\u7559\u6240\u6709\u503c\u5e76\u5c06\u5b83\u4eec\u5448\u73b0\u7ed9\u7528\u6237\u8fdb\u884c\u89e3\u6790\u3002\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5177\u6709\u89e3\u51b3\u51b2\u7a81\u7684\u786e\u5b9a\u6027\u65b9\u6cd5\u3002\u5b83\u53ef\u80fd\u662f\u9009\u62e9\u6700\u9ad8\u7684\u65f6\u95f4\u6233\uff0c\u6216\u8005\u8054\u5408\u5217\u8868\u4e2d\u7684\u6240\u6709\u503c\uff0c\u6216\u8005\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002\u65e0\u8bba\u5b83\u505a\u4ec0\u4e48\uff0c\u5b83\u90fd\u662f\u4e34\u65f6\u7684\uff0c\u5e76\u4e14\u662f\u4e13\u95e8\u4e3a\u624b\u5934\u7684\u6570\u636e\u6a21\u578b\u548c\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u7684\u3002\u4f46\u662f\u5b83\u5fc5\u987b\u770b\u8d77\u6765\u5c31\u50cfJOIN\u534a\u683c\u7684LUB\u51fd\u6570\uff1a\u5b83\u5fc5\u987b\u662f\u5e42\u7b49\u7684\u3001\u53ef\u4ea4\u6362\u7684\u548c\u7ed3\u5408\u7684\u3002\n\u5728Riak\u4e2d\uff0c\u6ca1\u6709\u51b2\u7a81\u7684C\u662f\u4e00\u79cd\u8c0e\u8a00\u3002\u4ecd\u7136\u5b58\u5728\u51b2\u7a81\uff0c\u53ea\u662f\u89e3\u51b3\u65b9\u6848\u662f\u6570\u636e\u7c7b\u578b\u8bbe\u8ba1\u7684\u4e00\u90e8\u5206\u3002\u5728\u6240\u6709\u4ee5\u4e0a\u7684C\u4e2d\uff0cConvergent\u5bf9\u6211\u4eec\u6765\u8bf4\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\u6211\u4eec\u4e3aRiak\u521b\u5efa\u7684\u6570\u636e\u7c7b\u578b\u5728\u5199\u5165\u548c\u8bfb\u53d6\u65f6\u5728\u670d\u52a1\u5668\u4e0a\u81ea\u52a8\u6536\u655b\u3002\u5982\u679c\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6570\u636e\u7c7b\u578b\u5bf9\u5176\u6570\u636e\u8fdb\u884c\u5efa\u6a21\uff0c\u5b83\u4eec\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u5144\u5f1f\u5173\u7cfb\u503c\uff0c\u4e5f\u4e0d\u9700\u8981\u7f16\u5199\u7279\u6b8a\u7684\u81ea\u5b9a\u4e49\u5408\u5e76\u51fd\u6570\u3002\n\u5982\u679c\u60a8\u5728Riak\u4e2d\u5b58\u50a8\u6570\u636e\uff0c\u5e76\u4e14\u5c06ALLOW_MULT\u8bbe\u7f6e\u4e3aTRUE\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u5904\u7406\u51b2\u7a81\u7684\u5199\u5165\u3002\u5982\u679c\u60a8\u5fc5\u987b\u5728\u4ee3\u7801\u4e2d\u5904\u7406\u5b83\uff0c\u5219\u5fc5\u987b\u7b80\u5316\u6570\u636e\u6a21\u578b\u6216\u7f16\u5199\u590d\u6742\u7684\u5408\u5e76\u51fd\u6570\u3002\n\u201c\u53d1\u7535\u673a\u62a5\u201d[2]\u4e2d\u7684\u7ecf\u5178\u4f8b\u5b50\u662f\u4e9a\u9a6c\u900a\u8d2d\u7269\u8f66\u3002\u5355\u4e2a\u7528\u6237\u5411\u8d2d\u7269\u8f66\u6dfb\u52a0\u4e24\u4e2a\u9879\u76ee\uff0c\u8fd9\u4e24\u4e2a\u9879\u76ee\u90fd\u6dfb\u52a0\u4e86\u4e0d\u540c\u5206\u533a\u7684\u670d\u52a1\u5668\u3002\u73b0\u5728\u6709\u4e24\u4e2a\u8d2d\u7269\u8f66\uff0c\u4e00\u4e2a\u88c5\u6709\u7269\u54c1A\uff0c\u53e6\u4e00\u4e2a\u88c5\u6709\u7269\u54c1B\u3002\u5408\u5e76\u903b\u8f91\u5f88\u7b80\u5355\uff1a\u8054\u5408\u8d2d\u7269\u8f66\u4ee5\u83b7\u5f97\u5355\u4e2a\u6b63\u786e\u7684\u503c\u3002\u4f46\u662f\u53bb\u6389\u7684\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\u5982\u679c\u7269\u54c1A\u662f\u7531A\u6dfb\u52a0\u7684\u800c\u8fd8\u6ca1\u6709\u770b\u5230\uff0c\u6216\u8005\u662f\u4ece\u7b2c\u4e8c\u8f66\u548c\u7b2c\u4e00\u8f66\u4e2d\u79fb\u8d70\u800c\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u4f60\u600e\u4e48\u80fd\u8bf4\u5b83\u4e0d\u5728\u7b2c\u4e8c\u8f66\u4e2d\u5462\uff1f\n\u4e5f\u8bb8\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u60a8\u9700\u8981\u6dfb\u52a0\u8d2d\u7269\u8f66\u4e2d\u6bcf\u4ef6\u5546\u54c1\u7684\u6570\u91cf\u3002\u73b0\u5728\uff0c\u60a8\u7684\u5408\u5e76\u51fd\u6570\u5fc5\u987b\u51b3\u5b9a\u4f55\u65f6\u5728\u4e00\u4e2a\u540c\u7ea7\u4e2d\u663e\u793a6\u4e2a\u201c\u53d1\u5237\u201d\u5b9e\u4f8b\uff0c\u5728\u53e6\u4e00\u4e2a\u540c\u7ea7\u4e2d\u663e\u793a4\u4e2a\u5b9e\u4f8b\uff0c\u5982\u679c\u7528\u6237\u6dfb\u52a0\u4e866\u4e2a\uff0c\u7136\u540e\u5220\u9664\u4e862\u4e2a\uff0c\u6216\u8005\u6dfb\u52a0\u4e864\u4e2a\uff0c\u7136\u540e\u53c8\u6dfb\u52a0\u4e862\u4e2a\u3002\u4e5f\u8bb8\u4f60\u5f00\u59cb\u6dfb\u52a0\u5893\u7891\u4e86\u3002\u6216\u8bb0\u5f55\u64cd\u4f5c(\u5982StateBox\u3002)\u3002\u4f46\u5f88\u5feb\u5c31\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002\u5982\u679c\u60a8\u9700\u8981\u8bb0\u5f55\u66f4\u591a\u4fe1\u606f\uff0c\u6216\u8005\u9700\u8981\u6539\u8fdb\u60a8\u7684\u6570\u636e\u6a21\u578b\uff0c\u90a3\u4e48\u60a8\u7684\u5408\u5e76\u529f\u80fd\u5fc5\u987b\u6269\u5c55\u3001\u8c03\u6574\u548c\u5904\u7406\u4e0d\u540c\u7248\u672c\u7684\u6570\u636e\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5b83\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\n\u800c\u4e14\u6bcf\u4e2a\u65b0\u7684\u6570\u636e\u6a21\u578b\u90fd\u9700\u8981\u65b0\u7684\u5373\u5e2d\u5408\u5e76\u529f\u80fd\uff0c\u5f53\u60a8\u8981\u5728Riak\u4e2d\u5b58\u50a8\u4e00\u4e9b\u5176\u4ed6\u6570\u636e\u65f6\uff0c\u6bd4\u5982\u7528\u6237\u914d\u7f6e\u6587\u4ef6\uff0c\u60a8\u9700\u8981\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u60a8\u7684\u6570\u636e\u6a21\u578b\u548c\u5408\u5e76\u903b\u8f91\u3002\n\u5f53\u7528\u7f16\u7a0b\u8bed\u8a00\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u7684\u9886\u57df\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u4e60\u60ef\u4e8e\u4ece\u4e00\u4e9b\u539f\u59cb\u6570\u636e\u7c7b\u578b(\u5982\u96c6\u5408\u3001\u6620\u5c04\u3001\u5bc4\u5b58\u5668\u3001\u6574\u6570\u3001\u5e03\u5c14\u503c\u7b49)\u7ec4\u6210\u72b6\u6001\u3002Riak\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u4f7f\u5f00\u53d1\u4eba\u5458\u6062\u590d\u4e86\u8fd9\u79cd\u80fd\u529b\u548c\u8868\u73b0\u529b\uff0c\u5e76\u51cf\u8f7b\u4e86\u4ed6\u4eec\u8bbe\u8ba1\u548c\u6d4b\u8bd5\u786e\u5b9a\u6027\u5408\u5e76\u51fd\u6570\u7684\u8d1f\u62c5\u3002\u5173\u952e\u662f\u6570\u636e\u5bf9\u4e8eRiak\u6765\u8bf4\u4e0d\u518d\u662f\u4e0d\u900f\u660e\u7684\u3002\u5f53\u60a8\u4f7f\u7528\u6570\u636e\u7c7b\u578b\u65f6\uff0cAPI Riak\u201c\u77e5\u9053\u201d\u60a8\u5b58\u50a8\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u4e3a\u60a8\u6267\u884c\u8bed\u4e49\u5408\u5e76\u3002Riak\u5df2\u7ecf\u68c0\u6d4b\u5230\u4e86\u51b2\u7a81\uff0c\u5b83\u4e5f\u80fd\u591f\u5229\u7528\u6570\u636e\u7c7b\u578b\u6765\u5904\u7406\u51b2\u7a81\u3002\n\u8bfb\u53d6\u6570\u636e\u7c7b\u578b\u503c\u65f6\uff0c\u60a8\u5c06\u53ea\u770b\u5230\u5355\u4e2a\u503c\u3002\u8be5\u503c\u6700\u7ec8\u4ecd\u7136\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u5b83\u5c06\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u88ab\u8d4b\u4e88\u6570\u636e\u5e93\u4e2d\u7684\u71b5\u91cf\uff0c\u5e76\u4e14\u5f53\u7cfb\u7edf\u5904\u4e8e\u9759\u6b62\u72b6\u6001\u65f6\uff0c\u6240\u6709\u7684\u503c\u90fd\u5c06\u6536\u655b\u5230\u5355\u4e00\u7684\u3001\u786e\u5b9a\u7684\u3001\u6b63\u786e\u7684\u503c\u3002\n\u6211\u4eec\u6709\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6839\u636eRiak\u4e2d\u7684\u952e\u5b58\u50a8\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9876\u7ea7\u7c7b\u578b\u3002\n\u96c6\u5408\uff1a\u5b83\u4eec\u662f\u4e8b\u7269\u7684\u96c6\u5408\u3002\u5728Riak\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5b58\u50a8\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5728Erlang\u4e2d\u7f16\u7801\u6587\u672c\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u3002\u4f60\u5b58\u50a8\u5728\u96c6\u5408\u4e2d\u7684\u4e1c\u897f\u53ef\u80fd\u662f\u56e2\u961f\u6216\u90e8\u95e8\u7684\u6210\u5458\uff0c\u793e\u4ea4\u7f51\u7edc\u4e0a\u7684\u8ffd\u968f\u8005\uff0c\u4e5f\u53ef\u80fd\u662f\u73b0\u5b9e\u4e16\u754c\u6536\u85cf\u4e2d\u7684\u7269\u54c1\u3002\n\u5730\u56fe\u3002\u6620\u5c04\u662f\u5c06\u6570\u636e\u7c7b\u578b\u7ec4\u5408\u6210\u66f4\u4e30\u5bcc\u3001\u66f4\u590d\u6742\u7ed3\u6784\u7684\u65b9\u6cd5\u3002\u6620\u5c04\u662f\u5b57\u6bb5\u7684\u96c6\u5408\u3002\u5b57\u6bb5\u662f\u540d\u79f0\u548c\u6570\u636e\u7c7b\u578b\u5bf9\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u5fc5\u5904\u7406\u5408\u5e76\u4e0d\u540c\u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u5982\u679c\u5c06\u4e24\u4e2a\u540c\u540d\u4f46\u7c7b\u578b\u4e0d\u540c\u7684\u5b57\u6bb5\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d\uff0c\u5219\u5b83\u4eec\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u6bb5\u3002\u60a8\u53ea\u80fd\u5728\u5730\u56fe\u4e2d\u5b58\u50a8\u6570\u636e\u7c7b\u578b\u3002\n\u60a8\u53ef\u4ee5\u5c06\u4efb\u4f55\u9876\u7ea7\u7c7b\u578b\u5b58\u50a8\u5728Map\u7684\u5b57\u6bb5\u4e2d\uff0c\u5305\u62ecMap\u3002\u6211\u4eec\u8fd8\u589e\u52a0\u4e86\uff1a\n\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u79cd\u7684\u8bed\u4e49\u90fd\u4e0d\u540c\u4e8e\u5b83\u4eec\u7684\u5e38\u89c4\u7ebf\u6027\u5bf9\u5e94\u7c7b\u578b\u3002\u867d\u7136\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u9009\u62e9\u7684\u8bed\u4e49\u662f\u6700\u76f4\u89c2\u3001\u6700\u6709\u7528\u7684\uff0c\u4e5f\u662f\u6700\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\n\u56e0\u4e3a\u6211\u4eec\u5c06\u6570\u636e\u7c7b\u578b\u5b58\u50a8\u5728Riak\u4e2d(\u751a\u81f3\u5728riak_Objects\u4e2d)\uff0c\u6240\u4ee5\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u6240\u6709\u6743\u8861\u90fd\u9002\u7528(\u5f53\u7136\uff0c\u7b2c\u4e8c\u6b21\u89e3\u6790\u9664\u5916)\u3002\u8fd9\u610f\u5473\u7740\u8ba1\u6570\u5668\u4e0d\u7528\u4e8e\u521b\u5efa\u552f\u4e00\u7684\u6709\u5e8fID\u3002\u800c\u4e14Set\u548cMap\u6ca1\u6709Redis\u5bf9\u5e94\u7269\u7684\u539f\u5b50\u548c\u963b\u585e\u64cd\u4f5c\u3002\n\u67dc\u53f0\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\u3002\u5b83\u4eec\u4ecd\u7136\u4e0d\u662f\u5e42\u7b49\u7684\u3002\u5982\u679cRiak\u4e3a\u8ba1\u6570\u5668\u64cd\u4f5c\u8fd4\u56de\u9519\u8bef\uff0c\u5219\u53ef\u80fd\u53ea\u662f\u90e8\u5206\u5931\u8d25\uff0c\u91cd\u8bd5\u53ef\u80fd\u5bfc\u81f4\u91cd\u590d\u8ba1\u6570\u3002\u4f46\u662f\uff0c\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u96c6\u5408\u6216\u5c06\u5b57\u6bb5\u6dfb\u52a0\u5230\u6620\u5c04\u662f\u5e42\u7b49\u7684\u3002\n\u6211\u4eec\u4e3aSet\u548cMap\u9009\u62e9\u7684\u8bed\u4e49\u662f\u201cadd wins\u201d\u3002\u672c\u6587\u4e5f\u5c06\u6b64\u79f0\u4e3a\u201c\u89c2\u5bdf\u5230\u7684\u79fb\u9664\u201d\uff0c\u4f46\u8fd9\u662fAdd\u5982\u4f55\u53d6\u80dc\u7684\u5b9e\u73b0\u7ec6\u8282(\u6211\u5c06\u5728\u4e0b\u9762\u4ecb\u7ecd\u5b83)\u3002\n\u5f53\u96c6\u5408\u4e0a\u7684\u4efb\u4f55\u4e00\u5bf9\u64cd\u4f5c\u662f\u5e76\u53d1\u7684\uff0c\u5176\u4e2d\u4e00\u5bf9\u6dfb\u52a0\u5143\u7d20\uff0c\u800c\u53e6\u4e00\u5bf9\u5220\u9664\u5143\u7d20\u65f6\uff0c\u6dfb\u52a0\u64cd\u4f5c\u83b7\u80dc\u3002\u5982\u679c\u5220\u9664\u64cd\u4f5c\u7d27\u8ddf\u5728\u6dfb\u52a0\u64cd\u4f5c\u4e4b\u540e\uff0c\u5219\u5220\u9664\u64cd\u4f5c\u6709\u6548\u3002\u4e0d\u540c\u5143\u7d20\u4e0a\u7684\u5e76\u53d1\u64cd\u4f5c\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u60a8\u7684\u9884\u671f\u4e0d\u8c0b\u800c\u5408\u3002\n\u5730\u56fe\u76f4\u63a5\u4ece\u96c6\u5408\u4e2d\u501f\u7528\u5176\u884c\u4e3a\u3002\u9664\u4e86\u6bcf\u6b21\u66f4\u65b0\u5b57\u6bb5\u7684\u5185\u5bb9(\u6bd4\u5982\uff0c\u5728\u201cLike\u201d\u5b57\u6bb5\u4e2d\u589e\u52a0\u8ba1\u6570\u5668\uff0c\u6216\u8005\u5728\u201cFolders\u201d\u5b57\u6bb5\u4e2d\u6dfb\u52a0\u597d\u53cb)\uff0c\u8fd9\u5c06\u88ab\u89c6\u4e3a\u201c\u6dfb\u52a0\u201d\u8be5\u5b57\u6bb5\u3002\u8fd9\u6837\uff0c\u540c\u65f6\u5220\u9664\u5b57\u6bb5\u548c\u66f4\u65b0\u5b57\u6bb5\u5c06\u4f7f\u66f4\u65b0\u83b7\u80dc\u3002\u518d\u52a0\u4e00\u6b21\u8d62\u3002\n\u96be\u4ee5\u56de\u7b54\u7684\u95ee\u9898\u662f\uff0c\u5f53\u5b57\u6bb5\u540c\u65f6\u66f4\u65b0\u548c\u5220\u9664\u65f6\uff0c\u5b83\u7684\u503c\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u7b54\u6848\u662f\u66f4\u65b0\u83b7\u80dc\uff0c\u5b57\u6bb5\u4fdd\u7559\uff0c\u5b83\u7684\u503c\u662f\u6240\u6709\u5e78\u5b58\u7684\u526f\u672c\u5408\u5e76\u540e\u7684\u503c\u3002\n\u5047\u8bbeMap\u5b57\u6bb5\u4e2d\u7684\u8ba1\u6570\u5668\u5728\u526f\u672cA\u5904\u9012\u589e\u52305\uff0c\u5e76\u590d\u5236\u5230B\u548cC\u3002\u540c\u65f6\uff0c\u8ba1\u6570\u5668\u5b57\u6bb5\u4eceA\u4e2d\u79fb\u9664\u5e76\u5728C\u5904\u9012\u589e3\uff0c\u5408\u5e76\u503c\u5c06\u4e3a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728A\u5904\u79fb\u9664\u4e0d\u4f1a\u9006\u8f6cA\u4e4b\u524d\u7684\u6240\u6709\u64cd\u4f5c\u3002\n\u8fd9\u4e2a\u8bed\u4e49\u6709\u4e00\u4e9b\u4ee4\u4eba\u60ca\u8bb6\u548c\u4e0d\u5b8c\u5584\u7684\u5730\u65b9\u3002\u5982\u679cAHAD\u5728\u4eceC\u5206\u533a\u4e4b\u540e\u4f46\u5728\u5220\u9664\u8ba1\u6570\u5668\u5b57\u6bb5\u4e4b\u524d\u5c06\u8ba1\u6570\u5668\u9012\u589e2\uff0c\u5219\u66f4\u65b0\u5c06\u4e22\u5931\u3002\u53ea\u6709B\u548cC\u770b\u5230\u7684A\u7684\u503c\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\u5220\u9664\u662f\u5f88\u68d8\u624b\u7684\u3002\n\u4ece\u64a4\u519b\u4e2d\u8fd8\u6709\u53e6\u4e00\u4e2a\u5947\u602a\u7684\u4f18\u52bf\uff0c\u53ef\u80fd\u4e5f\u4f1a\u4ee4\u4eba\u671b\u800c\u751f\u754f\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u526f\u672cA\u540c\u65f6\u534f\u8c03\u4ece\u5730\u56fe\u4e2d\u5220\u9664\u96c6\u5408\u5b57\u6bb5\uff0c\u800c\u526f\u672cB\u534f\u8c03\u5220\u9664\u540c\u4e00\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\u6839\u636e\u4e0a\u9762\u7684\u89c4\u5219\uff0c\u5b57\u6bb5updatescount\u4e3a\u201cadd\u201d(\u5bf9\u4e8eadd wins\u8bed\u4e49)\uff0c\u56e0\u6b64\u8be5\u5b57\u6bb5\u4ecd\u7136\u4fdd\u7559\u5728Map\u4e2d\uff0c\u5c3d\u7ba1\u5b83\u662f\u4e00\u4e2a\u7a7a\u96c6\u3002\n\u8fd9\u4e9b\u4ec5\u6620\u5c04\u7c7b\u578b\u5177\u6709\u7b80\u5355\u7684\u8bed\u4e49\u3002\u5bc4\u5b58\u5668\u662fLast WriteWins\uff0c\u4f7f\u7528\u5904\u7406\u5199\u5165\u7684\u8282\u70b9\u4e0a\u7684\u65f6\u95f4\u6233\u3002\u56e0\u6b64\uff0c\u6240\u6709\u5173\u4e8e\u65f6\u949f\u540c\u6b65\u7684\u58f0\u660e\u90fd\u9002\u7528\u3002\u65d7\u5e1c\u5f00\u59cb\u5173\u95ed\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u6253\u5f00\u3002\u5bf9\u4e8eWINS\u4e0a\u7684\u4efb\u4f55\u4e00\u5bf9\u5e76\u53d1\u7684\u3001\u51b2\u7a81\u7684\u64cd\u4f5c(ON|OFF)\u3002\u540c\u6837\uff0c\u540c\u6837\u7684\u6dfb\u52a0\u8d62\u5f97\u4e86\u8bed\u4e49\u3002\n\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u6240\u6709\u7684\u52a0\u6cd5\u64cd\u4f5c(\u5373\u9664\u4e86\u96c6\u5408\u6210\u5458\u548c\u6620\u5c04\u5b57\u6bb5\u5220\u9664\u4e4b\u5916\u7684\u6240\u6709\u64cd\u4f5c)\u90fd\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u5411Riak\u53d1\u9001\u64cd\u4f5c\u6765\u6267\u884c\u3002\u4e0d\u662f\u901a\u5e38\u7684GET\u3001MODIFY\u3001UPDATECYCLE\u3002\u8fd9\u79cd\u201c\u8fdc\u7a0b\u64cd\u4f5c\u201d\u662f\u5728Riak1.4\u4e2d\u5f15\u5165\u7684\uff0c\u5e26\u6709\u8ba1\u6570\u5668\uff0c\u5e76\u6269\u5c55\u5230\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\n\u4ecd\u7136\u6709\u4e24\u4e2a\u63a5\u53e3\uff0cPB\u548cHTTP\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0chttp API\u5c1a\u672a\u5b8c\u6210\uff0c\u56e0\u6b64\u6211\u5c06\u8ba8\u8bbaPBAPI\u3002\u5047\u8bbe\u4f1a\u6709\u5e73\u4ef7\u3002\nAPI\u5141\u8bb8\u60a8\u6307\u5b9a\u8981\u5728Riak\u4e2d\u590d\u5236\u526f\u672c\u7684\u6570\u636e\u7c7b\u578b\u4e0a\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8e\u8ba1\u6570\u5668\uff0c\u60a8\u53ea\u80fd\u53d1\u9001\u5e26\u6709\u91d1\u989d\u7684\u5355\u4e2a\u64cd\u4f5c\u201c\u589e\u91cf\u201d(\u5982\u679c\u662f\u51cf\u91cf\uff0c\u5219\u4e3a\u8d1f\u6570)\u3002\n\u60a8\u53ef\u4ee5\u53d1\u9001\u4e00\u4efd\u64cd\u4f5c\u6e05\u5355\u3002\u8be5\u5217\u8868\u53ef\u4ee5\u540c\u65f6\u5305\u542b\u6dfb\u52a0\u5143\u7d20X\u548c\u5220\u9664\u5143\u7d20Y\u64cd\u4f5c\u3002\u5982\u679c\u60a8\u8981\u5220\u9664\u5143\u7d20\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u9996\u5148\u83b7\u53d6\u96c6\u5408\u53ca\u5176\u4e0a\u4e0b\u6587\uff0c\u7136\u540e\u5c06\u4e0a\u4e0b\u6587\u4e0e\u5220\u9664\u64cd\u4f5c\u4e00\u8d77\u53d1\u9001\u3002\n\u6240\u6709\u64cd\u4f5c\u90fd\u5728\u534f\u8c03\u526f\u672c\u5904\u81ea\u52a8\u6267\u884c\u3002\u5982\u679c\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u64cd\u4f5c\u5931\u8d25(\u53ea\u6709\u5220\u9664\u53ef\u4ee5\u5931\u8d25\uff01)\u3002\u5219\u4e0d\u4f1a\u5e94\u7528\u4efb\u4f55\u64cd\u4f5c\u3002\n\u60a8\u53ef\u4ee5\u53d1\u9001\u4e00\u4efd\u64cd\u4f5c\u6e05\u5355\u3002\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u662f\u73b0\u573a\u64cd\u4f5c\uff0c\u8981\u4e48\u662f\u73b0\u573a\u66f4\u65b0\u64cd\u4f5c\u3002\u5916\u4e1a\u64cd\u4f5c\u5728\u5730\u56fe\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u5b57\u6bb5\u3002\u6211\u53d1\u73b0\u5c06Map\u770b\u4f5c\u662f(JSONlike\uff1f)\u3002\u6587\u4ef6\u3002\u73b0\u573a\u64cd\u4f5c\u4f1a\u66f4\u6539\u5730\u56fe\u7684\u6a21\u5f0f\u3002\n\u5b57\u6bb5\u66f4\u65b0\u64cd\u4f5c\u4f5c\u7528\u4e8e\u5b58\u50a8\u5728\u5730\u56fe\u4e2d\u7684\u6570\u636e\u3002\u60a8\u53ef\u4ee5\u5c06\u4efb\u610f\u6570\u91cf\u7684\u64cd\u4f5c\u5206\u6279\u53d1\u9001\u5230\u4e00\u8d77\u3002\u60a8\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528FieldOperations\u548cField Update Operations\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c06\u201c\u6e38\u620f\u72b6\u6001\u201d\u5efa\u6a21\u4e3a\u7279\u5b9a\u7528\u6237\u548c\u6e38\u620f\u7684\u201c\u5730\u56fe\u201d\u3002\u60a8\u53ef\u4ee5\u5728\u7528\u6237\u5f00\u59cb\u6e38\u620f\u65f6\u53d1\u9001\u64cd\u4f5c\uff0c\u521b\u5efa\u5730\u56fe\uff0c\u6dfb\u52a0\u70b9\u6570\u548c\u751f\u547d\u503c\u8ba1\u6570\u5668\u5b57\u6bb5\uff0c\u89e3\u9501\u6210\u5c31\u96c6\uff0c\u4ee5\u53ca\u5305\u542b\u4e24\u5957(\u76d4\u7532\u548c\u6b66\u5668)\u548c\u751f\u547d\u503c\u8ba1\u6570\u5668\u7684\u5e93\u5b58\u5730\u56fe\u3002\n\u968f\u7740\u6e38\u620f\u7684\u8fdb\u884c\uff0c\u66f4\u65b0\u591a\u4e2a\u8ba1\u6570\u5668\u3001\u4ece\u96c6\u5408\u4e2d\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u7b49\u64cd\u4f5c\u53ef\u4ee5\u4f5c\u4e3a\u6279\u5904\u7406\u53d1\u9001\uff0c\u8fd9\u4e9b\u6279\u5904\u7406\u5728\u534f\u8c03\u590d\u5236\u54c1\u5904\u81ea\u52a8\u6267\u884c\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u6620\u5c04\u4e2d\u7684\u503c\u4e4b\u95f4\u7684\u534f\u4e0d\u53d8\u91cf\u3002\n\u5bf9\u4e8eMap\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u4f7f\u7528\u4efb\u4f55\u4e00\u6279\u5305\u542bField\u6216SetElement Remove\u7684\u64cd\u4f5c\u53d1\u9001\u4e0a\u4e0b\u6587\u6587\u672c\uff0c\u65e0\u8bbaMap\u4e2d\u5d4c\u5957\u5f97\u6709\u591a\u6df1\u3002\n\u5982\u679c\u60a8\u53ea\u66f4\u65b0\u6620\u5c04\u4e2d\u7684\u5b57\u6bb5\uff0c\u5219\u4e0d\u9700\u8981\u9996\u5148\u83b7\u53d6\uff0c\u4e5f\u4e0d\u9700\u8981\u4e0a\u4e0b\u6587\uff0c\u60a8\u53ea\u9700\u53d1\u9001\u64cd\u4f5c\u5373\u53ef\u3002\n\u60a8\u4e0d\u9700\u8981\u663e\u5f0f\u521b\u5efa\u5b57\u6bb5\u3002\u66f4\u65b0\u534f\u8c03\u590d\u5236\u54c1\u4e2d\u4e0d\u5b58\u5728\u7684\u5b57\u6bb5\u5c06\u521b\u5efa\u5e76\u66f4\u65b0\u8be5\u5b57\u6bb5\u3002\u4f8b\u5982\uff0c\u5728Map at Key Game1\u7684Field&lt\uff1b&lt\uff1b\u201cgold\u201d&gt\uff1b\u4e2d\u7684\u8ba1\u6570\u5668\u4e0a\u52a010\uff0c\u5982\u679c\u8be5\u5b57\u6bb5\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u8be5\u5b57\u6bb5\uff0c\u7136\u540e\u9012\u589e10\u3002\n\u6211\u4eec\u4e0d\u5141\u8bb8\u60a8\u4ece\u4e0d\u5728\u90a3\u91cc\u7684\u96c6\u5408/\u5730\u56fe\u4e2d\u5220\u9664\u67d0\u4e9b\u5185\u5bb9\u3002\u7531\u4e8e\u4e0d\u80fd\u4fdd\u8bc1\u534f\u8c03\u60a8\u7684\u5220\u9664\u64cd\u4f5c\u7684\u526f\u672c\u5305\u542b\u60a8\u60f3\u8981\u5220\u9664\u7684\u503c(\u60f3\u8c61\u4e00\u4e2a\u7a7a\u7684\u540e\u5907\u4ee5\u63a5\u53d7\u8bf7\u6c42)\uff0c\u4e0a\u4e0b\u6587\u7528\u60a8\u770b\u5230\u7684\u503c\u201c\u64ad\u79cd\u201d\u5904\u7406\u526f\u672c\u3002\u5982\u679c\u60a8\u6ca1\u6709\u53d1\u9001\u4e0a\u4e0b\u6587\uff0c\u5e76\u4e14\u526f\u672c\u6ca1\u6709\u60a8\u60f3\u8981\u5220\u9664\u7684\u503c\uff0c\u5219\u64cd\u4f5c\u4f1a\u5931\u8d25\uff0c\u5e76\u51fa\u73b0\u201cPredition Failure\u201d\u9519\u8bef\u3002\u5220\u9664\u5143\u7d20\u6216\u5b57\u6bb5\u7684\u524d\u63d0\u6761\u4ef6\u662f\u5b83\u5b58\u5728\u3002\n\u7b2c\u4e8c\u4e2a\u539f\u56e0\u66f4\u4e3a\u5fae\u5999\uff0c\u9700\u8981\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282(\u7a0d\u540e\u6211\u5c06\u4ecb\u7ecd)\u624d\u80fd\u771f\u6b63\u7406\u89e3\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u53ea\u8981\u8bf4\u6ca1\u6709\u5220\u9664\u7684\u4e0a\u4e0b\u6587\u5c31\u8db3\u591f\u4e86\uff0c\u60a8\u53ef\u80fd\u4f1a\u5220\u9664\u6bd4\u8ba1\u5212\u66f4\u591a\u7684\u5185\u5bb9\u3002\u201c\u6dfb\u52a0\u6210\u529f\u201d\u8bed\u4e49\u57fa\u4e8e\u201c\u89c2\u5bdf\u5230\u7684\u5220\u9664\u201d\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u5220\u9664\u60a8\u770b\u5230\u7684\u5185\u5bb9\u3002\u4e0a\u4e0b\u6587\u544a\u8bc9\u5904\u7406\u64cd\u4f5c\u7684\u526f\u672c\u60a8\u6240\u770b\u5230\u7684\u5185\u5bb9\u3002\u5982\u679c\u8981\u5220\u9664\u7684\u5143\u7d20\u7684\u201cAdd\u201d\u5728\u60a8\u53d1\u9001Remove\u4e4b\u540e\u7531\u526f\u672c\u5904\u7406\u6216\u770b\u5230\uff0c\u5e76\u4e14\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u5219Remove\u5c06\u8d62\u5f97\u5e76\u53d1Add\u7684\u652f\u6301\u3002\u6709\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u8fd9\u6837\u505a\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bf7\u4f7f\u7528\u4e0a\u4e0b\u6587for removes\u3002\n\u4e0a\u4e0b\u6587\u662f\u96c6\u5408\u6216\u6620\u5c04\u7684\u7d27\u51d1\u4e8c\u8fdb\u5236\u7f16\u7801\u3002\u6211\u4eec\u5e0c\u671b\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u8fdb\u4e00\u6b65\u7b80\u5316\u5b83\u3002\n\u4e3b\u8981\u6210\u672c\u662f\u6570\u636e\u7c7b\u578b\u5360\u7528\u7a7a\u95f4\u3002\u5408\u5e76\u529f\u80fd\u6709\u4e00\u4e9b\u8ba1\u7b97\u6027\u5f00\u9500\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u5728\u60a8\u7684Riak\u670d\u52a1\u5668\u4e0a\u6267\u884c\uff0c\u800c\u4e0d\u662f\u5728\u60a8\u7684\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6d4b\u91cf\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u662friak_Objects\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f88\u597d\u5730\u5904\u7406Riak\u7684\u6240\u6709\u7cfb\u7edf\uff0c\u5982AAE\u3001\u4f01\u4e1a\u591a\u6570\u636e\u4e2d\u5fc3\u590d\u5236\u3001\u8bfb\u53d6\u4fee\u590d\u7b49\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9a6c\u4e0a\u5c31\u6709\u4e86Riak_Object\u7684\u5f00\u9500\u3002\n\u6570\u636e\u7c7b\u578b\u672c\u8eab\u81f3\u5c11\u548c\u5b83\u4eec\u5305\u542b\u7684\u5185\u5bb9\u4e00\u6837\u5927\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u7248\u672c\u5411\u91cf\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u5706\u70b9(\u89c1\u4e0b\u6587)\u3002\u6211\u4eec\u8bd5\u56fe\u7528\u6709\u6548\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u6765\u4fdd\u6301\u5b83\u4eec\u5c0f(\u6211\u4eec\u4f1a\u5728\u8fd9\u65b9\u9762\u4e0d\u65ad\u6539\u8fdb)\uff0c\u4f46\u5b83\u4eec\u6bd4\u4eba\u4eec\u6700\u521d\u60f3\u8c61\u7684\u8981\u5927\u3002\nIRL\uff1a\u4e00\u4e2a\u7248\u672c\u5411\u91cf\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u8005\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u5b83\u534f\u8c03\u4e86\u4e00\u4e2a\u589e\u91cf\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u4e3a8\u4e2a\u5b57\u8282\u3002\u81f3\u5c11\u9700\u8981N-Val\u6f14\u5458\u3002\nIRL\uff1a\u6bcf\u4e2a\u6210\u5458\u7684\u6210\u5458\u5927\u5c0f\u4e4b\u548c\u52a0\u4e0a\u4e00\u4e2a\u7248\u672c\u5411\u91cf\u548c\u5c0f\u6570\u7248\u672c\u5411\u91cf(\u6700\u591a\u4e3a\u96c6\u5408\u5411\u91cf\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u4e3a\u4e00\u5bf9{\u53c2\u4e0e\u8005\uff0c\u8ba1\u6570})\u3002\u7248\u672c\u5411\u91cf\u7684\u5927\u5c0f\u53d6\u51b3\u4e8eN-val\u3001MDC\u3001\u96c6\u7fa4\u6d41\u5931\u7b49\u3002\u540c\u6837\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u80058\u4e2a\u5b57\u8282\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ea\u5b58\u50a8\u6bcf\u4e2a\u53c2\u4e0e\u8005\u4e00\u6b21\u3002\n\u671f\u671b\u503c\uff1a\u952e\u7684\u5927\u5c0f\u4e4b\u548c\u52a0\u4e0a\u503c\u7684\u5927\u5c0f\u4e4b\u548c\u3002\nIRL\uff1a\u6bcf\u4e2a\u952e\u90fd\u662f\u4e00\u5bf9{name\uff0cint}\uff0c\u5176\u4e2dint\u6620\u5c04\u5230\u5b9e\u73b0\u5b57\u6bb5\u6570\u636e\u7c7b\u578b\u7684\u6a21\u5757\u3002\u6bcf\u4e2a\u6210\u5458\u4e5f\u6709\u5341\u8fdb\u5236\u65f6\u949f(\u4e0e\u96c6\u5408\u4e00\u6837)\u3002\n\u60a8\u73b0\u5728\u5df2\u7ecf\u8db3\u591f\u4e86\u89e3Riak\u7684\u6570\u636e\u7c7b\u578b\u4e86\u3002\u5982\u679c\u4f60\u771f\u7684\u60f3\u77e5\u9053\u9999\u80a0\u662f\u600e\u4e48\u505a\u7684\uff0c\u90a3\u5c31\u5f80\u4e0b\u770b\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\u503c\u5f97\u8bb0\u4f4f\u7684\u662f\uff0cVnode\u662fRiak\u4e2d\u7684\u5e76\u53d1\u5355\u4f4d\u3002\u6bcf\u5f53\u6211\u8bf4Actor\u65f6\uff0c\u6211\u6307\u7684\u662fVnode\u548cVnode ID\u3002Riak\u4e2d\u7684\u6b63\u786e\u6027\u53d6\u51b3\u4e8e\u5355\u4e2a\u6f14\u5458\u7684\u8fde\u7eed\u64cd\u4f5c\u3002\n\u8ba1\u6570\u5668\u662f\u79f0\u4e3aPN\u8ba1\u6570\u5668\u7684CRDT\uff0c\u5176\u4e2dP\u4e3a\u6b63\uff0cN\u4e3a\u8d1f\u3002\u5b83\u662f{\u53c2\u4e0e\u8005\uff0c\u6b63\uff0c\u8d1f}\u7684\u4e09\u5143\u7ec4\u7684\u5217\u8868\uff0c\u5176\u4e2d\u503c\u662f\u6240\u6709\u6b63\u7684\u548c\u4e0e\u6240\u6709\u8d1f\u7684\u548c\u4e4b\u95f4\u7684\u5dee\u503c\u3002\u53c2\u4e0e\u8005\u53ea\u80fd\u66f4\u65b0\u5217\u8868\u4e2d\u81ea\u5df1\u7684\u6761\u76ee\u3002\u5f53\u4e24\u4e2a\u8ba1\u6570\u5668\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u53d6\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684\u6b63\u503c\u548c\u8d1f\u503c\u7684\u6700\u5927\u503c\u3002\u5f53\u53c2\u4e0e\u8005\u53ea\u5728\u4e00\u4e2a\u8ba1\u6570\u5668\u4e2d\u65f6\uff0c\u6211\u4eec\u53ea\u5c06\u5176\u503c\u4fdd\u7559\u5728\u5408\u5e76\u7684\u8ba1\u6570\u5668\u4e2d\u3002\n\u6807\u5fd7\u5728\u903b\u8f91\u4e0a\u7b49\u540c\u4e8e\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u3002\u5143\u7d20\u7684\u5b58\u5728\u6216\u4e0d\u5b58\u5728\u5206\u522b\u7b49\u540c\u4e8e\u6807\u5fd7\u662f\u5426\u6253\u5f00\u6216\u5173\u95ed\u3002\u540c\u6837\u7684\u201c\u6dfb\u52a0WINS\u201d/\u201c\u89c2\u5bdf\u5230\u7684\u5220\u9664\u201d\u884c\u4e3a\u4e5f\u9002\u7528\uff0c\u9664\u4e86\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u89c2\u5bdf\u5230\u7684\u7981\u7528\u201d\u7684\u6807\u5fd7\u3002\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u6807\u5fd7\u770b\u8d77\u6765\u50cf\u5e03\u5c14\u503c\u3002\n\u5bc4\u5b58\u5668\u662f\u4e00\u5bf9{\u503c\uff0c\u65f6\u95f4\u6233}\u3002\u5b83\u4eec\u5728\u6700\u9ad8\u7684\u65f6\u95f4\u6233\u4e0a\u6c47\u805a\u3002\u5c31\u50cf\u5361\u6851\u5fb7\u62c9\u7684\u4ef7\u503c\u4e00\u6837\u3002\u5b83\u4eec\u9700\u8981\u7cbe\u786e\u540c\u6b65\u7684\u65f6\u949f\u3002\u5f53\u4e24\u4e2a\u5bc4\u5b58\u5668\u5408\u5e76\u65f6\uff0c\u5177\u6709\u6700\u9ad8\u65f6\u95f4\u6233\u7684\u5bf9\u662f\u5408\u5e76\u503c\u3002\n\u4efb\u4f55\u6536\u655b\u7684\u6216\u57fa\u4e8e\u72b6\u6001\u7684CRDT\u7684\u5173\u952e\u90e8\u5206\u662f\u5b83\u7684\u5408\u5e76\u529f\u80fd\u3002\u5408\u5e76\u51fd\u6570\u662fJOIN-Semi-Lattice\u7684Lub\uff0c\u5b83\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u7684\u8bed\u4e49\uff0c\u4ee5\u53ca\u5ba2\u6237\u53ef\u80fd\u4e0d\u5f97\u4e0d\u7f16\u5199\u7684\u6240\u6709\u4e34\u65f6\u51b2\u7a81\u89e3\u51b3\u65b9\u6848\u7684\u6cdb\u5316\u3002\n\u5bf9\u4e8e\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\uff0c\u4f18\u5316OR\u96c6\u5408[3]\u7684\u5408\u5e76\u51fd\u6570\u90fd\u975e\u5e38\u7b80\u5355\uff1a\u5b83\u4eec\u90fd\u5728\u96c6\u5408\u4e2d\u3002\u5f53\u4e00\u4e2a\u5143\u7d20\u53ea\u5728\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u96c6\u5408\u4e2d\u65f6\uff0c\u56f0\u96be\u5c31\u51fa\u73b0\u4e86\u3002\n\u5f53\u4e24\u4e2a\u526f\u672c\u5408\u5e76\u65f6\uff0c\u5176\u4e2d\u4e00\u4e2a\u5728\u5176\u96c6\u5408\u4e2d\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u5728\u90a3\u91cc\uff1f\u5b83\u53ef\u4ee5\u662f\uff1a\n\u5143\u7d20\u5df2\u6dfb\u52a0\u5230\u4e00\u4e2a\u590d\u672c\uff0c\u800c\u53e6\u4e00\u4e2a\u590d\u672c\u5c1a\u672a\u770b\u5230\u5b83\u3002\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u5143\u7d20\u53ea\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u624d\u80fd\u5f97\u5230\u6b63\u786e\u7684\u5408\u5e76\u503c\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u5728\u8fd9\u4e9b\u4e8b\u60c5\u4e0a\uff0c\u56e0\u679c\u5173\u7cfb\u5bfc\u81f4\u4e86\u8fd9\u4e00\u7ed3\u679c\u3002\u5408\u4e4e\u60c5\u7406\u7684\u662f\uff0c\u5982\u679c\u8be5\u5143\u7d20\u66fe\u7ecf\u5728\u96c6\u5408A\u4e2d\uff0c\u4f46\u4e0d\u518d\u5b58\u5728\uff0c\u90a3\u4e48\u5b83\u5c06\u88ab\u79fb\u9664\u3002\u6211\u4eec\u53ef\u4ee5\u5b58\u50a8\u79fb\u52a8\u7269\u54c1\u7684\u5893\u7891\u503c\uff0c\u4f46\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u96c6\u5408\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u5c0f\u3002\u6709\u4e00\u4e2a\u6210\u5458\u7684\u96c6\u5408\u66fe\u7ecf\u6709100\u4e2a\u6210\u5458\uff0c\u5176\u5927\u5c0f\u5c06\u4e0e\u6709100\u4e2a\u6210\u5458\u7684\u96c6\u5408\u7684\u5927\u5c0f\u76f8\u540c\u3002\n\u76f8\u53cd\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\u5c06\u4e00\u4e2a\u7248\u672c\u77e2\u91cf\u9644\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u5e76\u4e14\u6bcf\u6b21\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u4e3a\u6dfb\u52a0\u8be5\u5143\u7d20\u7684\u526f\u672c\u9012\u589e\u7248\u672c\u77e2\u91cf\u4e2d\u7684\u6761\u76ee\u3002\u6211\u4eec\u8fd8\u5b58\u50a8\u4e86\u5bf9\u5143\u7d20(\u4ece\u73b0\u5728\u5f00\u59cb\u6211\u5c06\u79f0\u4e4b\u4e3aDot[4])\u7684\u589e\u91cf\u6240\u4ea7\u751f\u7684{actioner\uff0ccount}\u5bf9\u3002\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u4e0e\u5143\u7d20\u76f8\u5173\u8054\u7684\u70b9\uff0c\u6211\u4eec\u4e5f\u4f1a\u4fdd\u7559\u5b83\u3002\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b[{actor1\uff0ccount}=dot1\uff0c{actor2\uff0ccount}=do2\uff0c\u2026]\u3002\uff0c\u5b83\u662f\u4e00\u4e2a\u7248\u672c\u5411\u91cf\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u6700\u5c0f\u65f6\u949f\uff0c\u5728\u6dfb\u52a0\u5143\u7d20\u65f6\u53ea\u5b58\u50a8\u70b9\u6216\u4e8b\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u9644\u52a0\u5230\u6574\u4e2a\u96c6\u5408\u7684\u7248\u672c\u5411\u91cf\u5c06\u59cb\u7ec8\u63a7\u5236\u6240\u6709\u5143\u7d20\u7684\u6240\u6709\u6700\u5c0f\u65f6\u949f\u3002\n\u5f53\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u5220\u9664\u8be5\u5143\u7d20\u53ca\u5176\u6700\u5c0f\u65f6\u949f\u3002\n\u73b0\u5728\uff0c\u5f53\u5408\u5e76\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u96c6\u5408\u3002\u6211\u4eec\u83b7\u53d6\u96c6\u5408A\u4e2d\u7684\u6240\u6709\u5143\u7d20\u548c\u4e0d\u5728\u96c6\u5408B\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u6700\u5c0f\u65f6\u949f\u4e0e\u96c6\u5408B\u7684\u96c6\u5408\u7248\u672c\u5411\u91cf\u8fdb\u884c\u6bd4\u8f83\u3002\u6bcf\u4e2a\u6700\u5c0f\u65f6\u949f\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u5143\u7d20\u90fd\u5df2\u4ece\u96c6\u5408B\u4e2d\u79fb\u9664\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fdb\u5165\u5408\u5e76\u7684\u96c6\u5408\u3002\u4f5c\u4e3a\u4e00\u79cd\u8f7b\u5fae\u7684\u4f18\u5316\uff0c\u6211\u4eec\u8fd8\u4ece\u7531\u96c6\u5408B\u2018sclock\u652f\u914d\u7684\u6700\u5c0f\u65f6\u949f\u4e2d\u4e22\u5f03\u4e86\u4efb\u4f55\u70b9\u3002\u8fd9\u4f7f\u6700\u5c0f\u65f6\u949f\u4fdd\u6301\u6700\u5c0f\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4ece\u96c6\u5408B\u7684\u96c6\u5408\u7248\u672c\u5411\u91cf\u4e2d\u51cf\u53bb\u6700\u5c0f\u65f6\u949f\uff0c\u5982\u679c\u7559\u4e0b\u4efb\u4f55\u70b9\uff0c\u5219\u5143\u7d20\u5728\u5408\u5e76\u7684\u96c6\u5408\u4e2d\uff0c\u5269\u4f59\u7684\u70b9\u4f5c\u4e3a\u65b0\u7684\u6700\u5c0f\u65f6\u949f\u3002\n\u6211\u4eec\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u5c06\u4e0d\u5728\u96c6\u5408A\u4e2d\u7684\u6240\u6709\u96c6\u5408B\u7684\u5143\u7d20\u4e0e\u96c6\u5408A\u7684\u96c6\u5408\u7248\u672c\u5411\u91cf\u8fdb\u884c\u6bd4\u8f83\u3002\n\u6211\u4eec\u4fdd\u7559\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5408\u5e76\u5b83\u4eec\u7684\u6700\u5c0f\u65f6\u949f\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u96c6\u5408\u7248\u672c\u5411\u91cf\u5408\u5e76\uff0c\u4ee5\u4fdd\u8bc1\u96c6\u5408\u7248\u672c\u5411\u91cf\u59cb\u7ec8\u652f\u914d\u6240\u6709\u6700\u5c0f\u65f6\u949f\u7684\u5c5e\u6027\u3002\n\u96c6\u5408\u88ab\u5b9e\u73b0\u4e3a\u7248\u672c\u5411\u91cf\u548c\u6765\u81ea\u5143\u7d20-&gt\uff1b\u6700\u5c0f\u65f6\u949f\u7684\u6620\u5c04\u5b57\u5178\u3002\n\u5c31\u5b9e\u73b0\u800c\u8a00\uff0cMap\u5c31\u50cf\u4e0a\u9762\u63cf\u8ff0\u7684\u96c6\u5408\u4e00\u6837\u3002\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684Map\u7248\u672c\u77e2\u91cf\u548c\u6bcf\u4e2a\u6761\u76ee\u7684\u6700\u5c0f\u65f6\u949f\u6765\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u4ec5\u4f4d\u4e8eamerge\u4e00\u4fa7\u7684Field\u3002\n\u5f53\u7136\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5f53\u4e00\u4e2a\u5143\u7d20\u540c\u65f6\u4f4d\u4e8e\u4e24\u4e2aMap\u4e2d\u65f6\uff1a\u6211\u4eec\u8c03\u7528\u6570\u636e\u7c7b\u578b\u7684\u5408\u5e76\u51fd\u6570\u6765\u83b7\u5f97\u5355\u4e2a\u6536\u655b\u7684\u503c\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u5408\u5e76\u4e24\u4e2a\u6620\u5c04\u7b49\u540c\u4e8e\u5408\u5e76\u4e24\u7ec4\u5b57\u6bb5\uff0c\u7136\u540e\u5bf9\u6240\u6709\u516c\u5171\u5b57\u6bb5\u503c\u8c03\u7528Merge\u3002\n[4]\u70b9\u72b6\u7248\u672c\u77e2\u91cf\uff1a\u4e50\u89c2\u590d\u5236\u7684\u903b\u8f91\u65f6\u949f\u52aa\u8bfa\u00b7\u666e\u96f7\u594e\u8428\u3001\u5361\u6d1b\u65af\u00b7\u5df4\u594e\u7f57\u3001\u4fdd\u7f57\u00b7\u585e\u5c14\u5409\u5965\u00b7\u963f\u5c14\u6885\u8fbe\u3001\u7ef4\u514b\u591a\u00b7\u65b9\u7279\u3001\u91cc\u5361\u591a\u00b7\u8d21\u8428\u5c14\u7ef4\u65af\u00b7http://arxiv.org/abs/1011.5808", "note_en": "Riak 1.4 included counters. This was a break from the norm inRiak. We\u2019ve always said: \u201cYour data is opaque to Riak\u201d, but withcounters that isn\u2019t true. Riak knows what you\u2019re storing against acounter key, and how to increment it and decrement it. You tell Riakthis with the counter API. You never fetch, mutate and put a counter,you just say:  increment by 5 or  decrement by 100. You never send avclock and most importantly, Riak knows how to merge concurrent writesto a counter. You never see siblings for a counter, you always see asingle value. No writes are lost and eventually, the counter willreflect all writes and reach a consistent value.\n  Counters are OK, but you can\u2019t build many application on justcounters. For Riak 2.0 we\u2019ve add some more data types. We believe withthe addition of these data types you can model many applications\u2019 datastorage needs with greater simplicity, and never have to write siblingmerge functions again.\n  When we\u2019ve talked in the past about adding data types to Riak we\u2019vespoken about  CRDTs. CRDT stands for (variously) Conflict-freeReplicated Data Type, Convergent Replicated Data Type, CommutativeReplicated Data Type, and maybe others. The key, repeated phrase showsthat we\u2019re dealing with Replicated Data Types.\n Replication is normal for Riak. It is what the N-Value defines. DataTypes are pretty common in computing. Sets, Bags, Lists, Registers,Maps, Counters\u2026etc. That leaves us with the C to deal with.\n  State based, or Convergent CRDTs were thought up 15 years ago byCarlos Baquero and Franciso Moura[1] as an application of somethingcalled a Join Semi-Lattice: A triple of a Partially Ordered Set, aLeast Element (Bottom hehehehehe) and a function that produces a LeastUpper Bound. This function must be idempotent, associative, andcommutative and when applied to two Sets returns a merged, or leastupper bound Set that is also an instance of the Partially Ordered Set.\n   Riak is an eventually consistent system. It leans very much toward theAP end of the CAP spectrum. We achieve this Availability with thingslike sloppy quorum writes to fallback nodes. However, even withoutpartitions and many nodes, interleaved or concurrent writes can leadto conflicts. Traditionally Riak keeps all values and presents them tothe user to resolve. The client application must have a deterministicway to resolve conflicts. It might be to pick the highest timestamp,or union all the values in a list, or something more complex. Whatever it does, it is ad hoc, and created specifically for the datamodel and application at hand. But it must look just like that LUBfunction of the Join Semi-Lattice: It must be idempotent, commutative,and associative.\n  In Riak, the Conflict-free C is kind of a lie. There\u2019s still conflict,it is just that the resolution is part of the data types&#39; design. Ofall the C\u2019s above, Convergent is the one that matters to us. The datatypes we\u2019ve created for Riak converge automatically, at write and readtime, on the server. If a client application can model its data usingthe data types we provide, they will never see sibling values or needto write ad hoc, custom merge functions.\n  If you\u2019re storing data in Riak, and you have  allow_mult set to true, then you need to handle conflicting writes. If you have tohandle it in your code you have to either simplify your data model orcode complex merge functions.\n  The classic example from the dynamo paper[2] is the Amazon shoppingcart. A single user adds two items to their cart, both adds hitdifferent partitioned servers. There are now two carts one with item A and one with item  B. The merge logic is simple: union the cartsto get a single correct value. But what of removes? How can you tellif item  A is absent from cart two because it was added by  A andnot yet seen, or removed from cart two and cart one was unaware?\n Maybe your application is slightly more complex, you need to add acount of how  many of each item are in the cart. Now your mergefunction has to decide when presented with 6 instances of \u201chairbrush\u201din one sibling and 4 in another if the user added 6 and then removed 2or added 4 and then added 2 more. Maybe you start to addtombstones. Or record operations (like StateBox.) But quickly it getscomplex. And what if you need to record more information, or evolveyour data model, your merge function must grow, adapt, work ondifferent versions of your data? It becomes very complex very quickly.\n And every new data model needs new ad hoc merge functions And when youcome to store some other data in Riak, say user profiles, you need tostart from scratch building up your data model and merge logic.\n  When modeling an application\u2019s domain in a programming languagedevelopers are used to composing state from a few primitive datatypes, like Sets, Maps, Registers, Integers, Booleans etc. Data Typesin Riak give the developer back that power and expressivity, andrelieve them of the burden of designing and testing deterministicmerge functions. The key is that the data is no longer opaque toRiak. When you use the Data Types API Riak \u201cknows\u201d what type of thingyou are storing and is able to perform that semantic merge foryou. Riak already detects conflicts, with Data Types it is able tomerge them too.\n When reading a Data Type value you will only ever see a singlevalue. That value is still Eventually Consistent, but it will be ascorrect as it can be given the amount of entropy in the database, andwhen the system is quiescent, all values will converge on a single,deterministic, correct value.\n  We have some Data Types that you can store against a Key in Riak, thatwe\u2019re calling Top Level Types.\n  Sets: Which are collections of things. In Riak we expect you tostore binaries, which is how we encode Strings of text in Erlang. Thekind of thing you\u2019d store in a Set might be the members of a team ordepartment, followers on social network, or maybe objects in some realworld collection.\n Maps. A Map is way to compose Data Types into a richer, more complexstructure. A Map is a collection of fields. A field is a name and DataType pair. This is so that we don\u2019t have to deal with merging fieldsof a different type. If two fields with the same name but differenttypes are added to a Map, then they\u2019re two different fields. You mayonly store Data Types in a Map.\n  You can store any of the top level types in a field in a Map,including a Map. And we\u2019ve also added:-\n   The semantics for each of these data types differs from their regular,linear counterparts. Though we think the semantics we have chosen arethe most intuitive and useful, and least surprising.\n  Since we\u2019re storing our data types in Riak, (in riak_objects even) allthe trade offs of Eventual Consistency apply (except of courseconflict resolution.) That means that the Counters are not forcreating unique, ordered IDs. And Sets and Maps do not have the atomicand blocking operations of their Redis counterparts.\n  Nothing has changed for counters. They\u2019re still not idempotent. IfRiak returns an Error for a counter operation, it may have onlypartially failed, and a retry may lead to a double count. However,adding an element to a Set, or a Field to a Map is idempotent.\n  The semantic we\u2019ve chosen for the Set and Map is \u201cAdd Wins\u201d. Theliterature also calls this \u201cObserved Remove\u201d but that is animplementation detail of how the Add Wins (and I\u2019ll cover it below.)\n  When any pair of operations on a Set are concurrent, and one adds anelement, while the other removes it, the add wins. If the removecausally follows the Add, then the Remove is effective. Concurrentoperations on different elements work as you\u2019d expect.\n  The Map borrows its behaviour directly from the Set. Except that everytime you update the contents of a field (say increment the counter inthe \u201clikes\u201d field, or add a buddy to the \u201cfollows\u201d field) then thatcounts as \u201cadding\u201d the field. This way a concurrent removal of a fieldwith an update to a field will see the update winning. Add wins again.\n The difficult to answer question is what should the value of a fieldbe when it is concurrently updated and removed. The answer is that theupdate wins, and the field remains, and it\u2019s value is that of allsurviving replicas\u2019 merged.\n Say a counter in a Map field is incremented to 5 at replica A andreplicated to B and C. Concurrently the counter field is removed fromA and incremented by 3 at C, the merged value will be 8. That is tosay the remove at A does not reverse all A\u2019s previous actions.\n There is something surprising and imperfect about this semantic. If Ahad incremented the counter by 2 after it was partitioned from C butbefore it removed the counter field, that update is lost. Only thevalues that B and C have seen for A will remain. Removes are tricky.\n There is another odd edge from removes that may also besurprising. Imagine that concurrently Replica A coordinates a removalof a Set Field from a Map while Replica B coordinates the removal ofall elements from that same Set. As per the rules above, field updatescount as \u201cAdds\u201d (for the add wins semantic) so the Field remains inthe Map, albeit as an empty Set.\n  These Map only types have simple semantics. The Register is Last WriteWins, using a timestamp on the node handling the write. All thecaveats about clock synchronization therefore apply. Flags start outOff, and you can turn them On. For any pair of concurrent, conflictingoperations (On | Off) On wins. Again, that same Add Wins semantic.\n   More on this later, but all additive operations (that is everythingexcept Set member and Map field removal) can be performed by simplysending operations to Riak. Not the usual Get, Modify, Updatecycle. This \u201caction at a distance\u201d was introduced in Riak 1.4 withcounters and extends to the new data types.\n  There are two APIs as ever, PB and HTTP. As of time of writing theHTTP API is unfinished so I\u2019ll talk about the PB API. Assume thatthere will be parity.\n The API allows you to specify operations to be performed on Data Typesat a replica in Riak. For counters you may only send a singleoperation, \u201cincrement\u201d with an amount (negative for decrement.)\n  You may send a list of operations. The list may contain both  Add ElementX and  Remove ElementY operations. If you are removingelements we strongly recommend that you first fetch the Set and it\u2019s context, and send the context with the remove operation(s.)\n  All operations are executed atomically at the coordinating replica. Ifany operation in the list fails (only removes can fail!) then none ofthe operations are applied.\n  You may send a list of operations. These are either  field operations,or  field update operations. Field operations Add or Remove fields fromthe Map. I find it helps to think of the Map as a schema for a (JSONlike?) document. Field operations alter the schema of the Map.\n Field Update Operations act on the data stored in the Map. You maysend any number of operations batched together. You may mix FieldOperations and Field Update Operations.\n For example, if you model Game State as a Map for a particular userand game. You could send an operation when the user starts a game thatcreates a Map, adds fields of  Counters for points and lives, a  Setfor achievements unlocked, and a  Map for inventory that contains two Sets (armor and weapons) and a  Counter for Hit Points.\n As the game is played operations that update multiple Counters, addand remove elements from Sets and so on can be sent as batches thatexecute atomically at the coordinating replica. This does not suggestthat you can enforce co-invariants between values in the Map.\n What counts for Sets counts for Maps, we  strongly recommend you send acontext with any batch of operations that contain a Field or Setelement Remove, no matter how deeply nested in the Map.\n If you are only updating Fields in the Map then you do not need tofetch first, and you do not need a context, you may just sendoperations.\n You do not need to explicitly create a field. Updating a field that isnot present at the coordinating replica will create and update thefield. For example,  adding 10 to the  Counter in Field  &lt;&lt;\u201dgold\u201d&gt;&gt;in the Map at key  Game1 will create the field if it is not present,and then increment by 10.\n   We don\u2019t allow you to remove something from a Set / Map that is notthere. Since there is no guarantee that the replica coordinating yourremove operation(s) contains the value(s) you want to remove (imaginean empty fallback spun up to accept the request) the context \u201cseeds\u201dthe handling replica with the values you\u2019ve seen. If you don\u2019t sendthe context, and the replica doesn\u2019t have the value(s) you want toremove, the operations fails with \u201cprecondition failure\u201d error. Aprecondition of removing an element or Field is that it is present.\n The second reason is more subtle and is going to need someimplementation specifics, which I\u2019ll cover later, to reallyunderstand. At this point it is enough to say that without a contextfor a remove, you may remove more than you planned to. The \u201cAdd Wins\u201dsemantic is based on \u201cObserved Remove\u201d, which means only remove thatwhich you have seen. The context tells the replica handling theoperation what you\u2019ve seen. If an \u201cAdd\u201d for the element you want toremove was handled or seen by the replica after you sent your remove,and there was no context, the remove would win over the concurrentadd. There maybe times you want this, but in general, use the contextfor removes.\n The context is a compact binary encoding of the Set or Map. We hope tominimize it further in future releases.\n  The main cost is that the Data Types take up space. There is somecomputational cost to the merge functions, that will be performed onyour Riak servers, rather than in your client application. We have yetto measure this.\n  We store the Data Types is  riak_objects. This is so they play nicewith all Riak\u2019s systems, like AAE, Enterprise Multi Data CenterReplication, read repair etc. So off the bat, we have the overhead ofa riak_object.\n The Data Types themselves are at least as big as what they contain,plus a version vector, plus some  Dots (see below.) We\u2019ve tried tokeep them small with an efficient binary representation (and we\u2019llkeep improving on that), but they are larger than one might firstimagine.\n   IRL: A version vector with two integers per actor that has coordinatedan increment. Each actor is 8 bytes. Expect at least  N-val actors.\n   IRL: The sum of the size of its members, plus a version vector, and aminimal version vector (at most the size of the Set vector, typicallyone  {actor, count} pair) per member. The size of the version vectordepends on N-Val, MDC, Cluster Churn etc. Again, 8 bytes per actor,though we only store each actor once.\n  Expect: The sum of the size of the keys plus the sum of the size ofthe values.\n IRL: Each key is a pair of  {name, int} where int maps to a modulethat implements the Data Type of the field. Each member also has aminimal clock (as for the Set.)\n     You know enough to use Riak&#39;s Data Types now. If you really want toknow how the sausage is made, read on.\n  It is worth remembering at this point that  Vnodes are the unit ofconcurrency in Riak. Whenever I say  Actor I mean  Vnode and  Vnode Id. Correctness in Riak depends on individual Actors acting serially.\n  The Counter is a CRDT called a PN-Counter, where P is Positive and Nis Negative. It is a list of triples of  {actor, positive, negative}where the value is the difference between the sum of all positives andthe sum of all negatives. An actor may only update its own entry inthe list. When two counters merge we take the maximum of positive andnegative for each actor. When an actor is only in one counter, we justkeep its value in the merged counter.\n  Flags are logically equivalent to a Set that can only contain oneelement. Whether the element is present or absent is equivalent towhether the flag is On or Off, respectively. The same \u201cAdd Wins\u201d /\u201cObserved Remove\u201d behavior applies, except with Flags we call it\u201cObserved Disable\u201d. To the user Flags look like Boolean values.\n  Registers are a pair of  {value, timestamp}. They converge on thehighest timestamp. Much like a value in Cassandra. They require wellsynchronized clocks. When two registers merge, the pair with thehighest timestamp is the merged value.\n  The crucial part of any convergent, or state based CRDT is its mergefunction. The merge function is the LUB of the Join-Semi-Lattice, andit is what defines the semantic of the data type, as well as being ageneralization of all those ad hoc conflict resolutions customersmight have had to write.\n The merge function for an optimized OR-Set[3] is pretty simple forany elements in both sets: they\u2019re in the set. The difficulties arisewhen an element is only in one of the two Sets being merged.\n  When two replicas merge, and one contains an element in its Set thatthe other does not, why is it there? It can either be:\n The element was added to one replica and the other is yet to see it\n We need to know why an element is only in one set to arrive at acorrect merged value. As ever in these things, causality to therescue. It stands to reason that if the element was once in Set A butis no longer, it was removed. We could store a tombstone value for theremoved item, but that means our sets never get smaller. A Set withone member that once had 100 members, would be the same size as a Setwith 100 members.\n Instead what we do is attach a  version vector to the Set, and everytime an element is added to the Set, we increment the entry in theversion vector for the replica that added the element. We also storethe  {actor, count} pair that results from the increment against theelement (which I\u2019m going to call the  Dot[4] from now on.) If thereis already a Dot associated with the element we keep that too. What weend up with looks like [{actor1, count}=Dot1, {actor2, count}=Dot2,\u2026], which is a versionvector, but it is a minimal clock, that stores only the Dots or events when the element was added. Note that the version vectorattached to the whole set will always dominate all the minimal clocksfor all elements.\n When an element is removed from the set we simply remove the Elementand its minimal clock.\n Now, when a merge occurs we compare the two sets. We take all theelements that are in  Set A and not in  Set B and compare theirminimal clocks to Set B\u2019s set version vector. Every element whoseminimal clock is dominated has been removed from Set B, and does notmake it into the merged set. As a slight optimization, we also dropany dots from the minimal clock that are dominated by Set B\u2019sclock. This keeps the minimal clock  minimal. You can think of it assubtracting the minimal clock from Set B\u2019s set version vector, if anyDots are left, the element is in the merged set with those remainingDots as the new minimal clock.\n We repeat the process the other way, comparing all Set B\u2019s elementsthat are not in Set A to Set A\u2019s set version vector.\n We keep all elements that are in both Sets, merging their minimalclocks. Finally we merge the two set version vectors to ensure theproperty that the Set version vector always dominates all minimalclocks is maintained.\n  Sets are implemented as a version vector, and a dictionary of mappingsfrom  element -&gt; minimal clock.\n  As far as implementation goes, Maps are just like the Set describedabove. They use the same Map version vector, and a minimal clock perentry to decide what to do with a Field that is only on one side of amerge.\n The main difference is of course when an element is in both Maps: wecall the Data Type\u2019s merge function to get a single, convergentvalue. Conceptually merging two Maps is the same as merging two Setsof Fields, and then calling merge on all common Fields&#39; values.\n    [4] Dotted Version Vectors: Logical Clocks for Optimistic ReplicationNuno Pregui\u00e7a, Carlos Baquero, Paulo S\u00e9rgio Almeida, Victor Fonte,Ricardo Gon\u00e7alves  http://arxiv.org/abs/1011.5808", "posttime": "2020-10-20 22:42:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "riak,guide,\u64cd\u4f5c", "title": "Riak\u4e2dCRDT\u7684\u6a21\u7cca\u6307\u5357(2013)", "title_en": "A Bluffers Guide to CRDTs in Riak (2013)", "transed": 1, "url": "https://gist.github.com/russelldb/f92f44bdfb619e089a4d", "via": "", "real_tags": ["riak", "guide", "\u64cd\u4f5c"]}, {"category": "", "categoryclass": "", "imagename": "de8bdb820e878a3f42e091e8bb738e30.jpg", "infoid": 1030053, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u67e5\u5c14\u65af\u00b7\u8fbe\u5c14\u6587\u521b\u7acb\u4e86\u73af\u7901\u5982\u4f55\u5f62\u6210\u7684\u201c\u7f8e\u4e3d\u201d\u7406\u8bba\u3002\u4f46\u662f\uff0c\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u4ed6\u7f3a\u4e4f\u4fe1\u606f\u7684\u5173\u952e\u90e8\u5206\u3002\n\u6d77\u6d0b\u5730\u8d28\u5b66\u5bb6\u548c\u6d77\u6d0b\u5b66\u5bb6\u5b89\u5fb7\u70c8\u00b7\u5fb7\u7f57\u514b\u65af\u52d2(Andr\u00e9Droxler)\u77e5\u9053\u8fbe\u5c14\u6587\u5173\u4e8e\u73af\u7901\u7684\u7406\u8bba\u662f\u4e0d\u6b63\u786e\u7684\u3002\u4f46\u7814\u7a76\u73ca\u745a\u790140\u591a\u5e74\u7684\u5fb7\u7f57\u514b\u65af\u52d2\u7406\u89e3\u4e3a\u4ec0\u4e48\u8fbe\u5c14\u6587\u7684\u6a21\u5f0f\u5728\u6559\u79d1\u4e66\u3001\u5927\u5b66\u8bb2\u5802\u3001\u81ea\u7136\u79d1\u5b66\u535a\u7269\u9986\u548c\u7ef4\u57fa\u767e\u79d1\u6761\u76ee\u4e2d\u4ecd\u7136\u5b58\u5728\u3002\n\u201c\u5f53\u4f60\u5c06\u4eca\u5929\u7684\u73ca\u745a\u7901\u536b\u661f\u56fe\u50cf\u4e0e\u4ed6\u7684\u5730\u56fe\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u8fd9\u51e0\u4e4e\u662f\u4e00\u6837\u7684\u3002\u5b83\u7684\u7cbe\u786e\u5ea6\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u201c\u3002\n\u6700\u8fd1\u4ece\u83b1\u65af\u5927\u5b66\u9000\u4f11\u7684\u5fb7\u6d1b\u514b\u65af\u52d2\u8bf4\uff1a\u201c\u5b83\u662f\u5982\u6b64\u7f8e\u4e3d\uff0c\u5982\u6b64\u7b80\u5355\u548c\u4ee4\u4eba\u6109\u60a6\uff0c\u4ee5\u81f3\u4e8e\u6bcf\u4e2a\u4eba\u90fd\u8fd8\u5728\u6559\u6388\u5b83\u3002\u201d\u201c\u5728\u5730\u7403\u79d1\u5b66\u548c\u6d77\u6d0b\u79d1\u5b66\u4e2d\u4f60\u80fd\u627e\u5230\u7684\u6bcf\u4e00\u672c\u4ecb\u7ecd\u6027\u4e66\u7c4d\u4ecd\u7136\u6709\u8fbe\u5c14\u6587\u7684\u6a21\u578b\u3002\u5982\u679c\u4ed6\u4eec\u5728\u6d77\u6d0b\u79d1\u5b66101\u8bfe\u4e0a\u6559\u6388\u4e00\u4ef6\u5173\u4e8e\u73ca\u745a\u7901\u6216\u78b3\u9178\u76d0\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u5c31\u4f1a\u6559\u6388\u8fd9\u4e2a\u6a21\u578b\u3002\nDroxler\u5728\u8d56\u65af\u5927\u5b66\u62c5\u4efb\u5730\u7403\u3001\u73af\u5883\u548c\u884c\u661f\u79d1\u5b66\u6559\u6388\u5df2\u670933\u5e74\u4e4b\u4e45\uff0c\u4ed6\u5e0c\u671b\u901a\u8fc7\u4e00\u7bc7\u5173\u4e8e\u73af\u7901\u8d77\u6e90\u7684\u8bba\u6587\u6765\u6f84\u6e05\u8fd9\u4e00\u70b9\u3002\u5fb7\u7f57\u514b\u65af\u52d2\u548c\u957f\u671f\u5408\u4f5c\u8005\u65af\u7279\u51e1\u00b7\u4e54\u91cc(St\u00e9phan Jorry)\u662f\u6cd5\u56fd\u6d77\u6d0b\u63a2\u7d22\u7814\u7a76\u6240\u7684\u6d77\u6d0b\u5730\u8d28\u5b66\u5bb6\u548c\u6d77\u6d0b\u5b66\u5bb6\uff0c\u4ed6\u4eec\u5728\u300a\u6d77\u6d0b\u79d1\u5b66\u5e74\u8bc4\u300b\u4e0a\u62a5\u544a\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002\n\u8fbe\u5c14\u6587\u5173\u4e8e\u73af\u7901\u5f62\u6210\u7684\u7406\u8bba\u53d1\u8868\u4e8e1842\u5e74\uff0c\u4e5f\u5c31\u662f\u4ed6\u4e58\u5750\u82f1\u56fd\u6d4b\u91cf\u8239HMS Beagle\u8fdb\u884c\u4f20\u5947\u822a\u884c\u516d\u5e74\u540e\u3002\u4f5c\u4e3a\u4e00\u540d\u8bad\u7ec3\u6709\u7d20\u7684\u5730\u8d28\u5b66\u5bb6\uff0c\u8fbe\u5c14\u6587\u5bf9\u4ed6\u5728\u6bd4\u683c\u5c14\u53f7\u4e0a\u7684\u4e94\u5e74\u4e2d\u9047\u5230\u7684\u5ca9\u77f3\u548c\u5730\u8c8c\u975e\u5e38\u611f\u5174\u8da3\u3002\u8fd9\u8258\u8239\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u8c03\u67e5\u6d77\u5cb8\u7ebf\u548c\u5bf9\u822a\u884c\u7684\u5371\u9669\uff0c\u8fd9\u8258\u8239\u7684\u547d\u4ee4\u5305\u62ec\u6536\u96c6\u73ca\u745a\u7901\u5468\u56f4\u6f6e\u6c50\u548c\u6d77\u6d0b\u6df1\u5ea6\u7684\u8be6\u7ec6\u89c2\u6d4b\u3002\nDroxler\u5728\u8c08\u5230\u7687\u5bb6\u6d77\u519b\u65f6\u8bf4\uff1a\u201c\u4ed6\u4eec\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u7ed8\u5236\u73ca\u745a\u7901\u5730\u56fe\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u822a\u8fd0\u975e\u5e38\u5371\u9669\u3002\u201d\u73af\u7901\u7279\u522b\u6709\u8da3\uff0c\u4e5f\u7279\u522b\u5371\u9669\u3002\u6709\u4e9b\u4e0a\u9762\u6709\u4f4e\u6d3c\u7684\u5c9b\u5c7f\uff0c\u4f46\u8bb8\u591a\u662f\u73ca\u745a\u8986\u76d6\u7684\u952f\u9f7f\u72b6\u5ca9\u77f3\u73af\uff0c\u5c31\u5728\u6c34\u9762\u4ee5\u4e0b\uff0c\u968f\u65f6\u51c6\u5907\u5c06\u7c97\u5fc3\u8fc7\u5f80\u7684\u8239\u53ea\u7684\u5e95\u90e8\u6495\u88c2\u51fa\u6765\u3002\u201c\u5b83\u4eec\u4ece\u6df1\u6d77\u5e73\u539f\u51fa\u6765\uff0c\u51e0\u4e4e\u6ca1\u6709\u6df1\u5ea6\uff0c\u201d\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\u3002\u201c\u6240\u4ee5\u4ed6\u4eec\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u7684\u786e\u5207\u4f4d\u7f6e\u3002\u201d\n\u548c\u6bcf\u4e00\u8258\u7687\u5bb6\u6d77\u519b\u8230\u8247\u4e00\u6837\uff0c\u6bd4\u683c\u5c14\u53f7\u643a\u5e26\u7740\u6807\u6709\u6bcf\u4e00\u4e2a\u5df2\u77e5\u73ca\u745a\u7901\u4f4d\u7f6e\u7684\u6d77\u56fe\uff0c\u8fbe\u5c14\u6587\u5728\u4ed61842\u5e74\u7684\u8bba\u6587\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u6d77\u56fe\u3002\n\u201c\u4ed6\u51fa\u7248\u4e86\u4e00\u5f20\u6f02\u4eae\u7684\u5730\u56fe\uff0c\u6c47\u96c6\u4e86\u5730\u7403\u4e0a\u6240\u6709\u5df2\u77e5\u7684\u73ca\u745a\u7901\uff0c\u201d\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\u3002\u201c\u5f53\u4f60\u5c06\u4eca\u5929\u7684\u73ca\u745a\u7901\u536b\u661f\u56fe\u50cf\u4e0e\u4ed6\u7684\u5730\u56fe\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u8fd9\u51e0\u4e4e\u662f\u4e00\u6837\u7684\u3002\u5b83\u7684\u7cbe\u786e\u5ea6\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u201c\u3002\n\u4f46\u4e0e\u7b80\u5355\u5730\u5c06\u73ca\u745a\u7901\u6807\u8bb0\u4e3a\u822a\u884c\u5371\u9669\u7684\u6d77\u519b\u5730\u56fe\u4e0d\u540c\uff0c\u8fbe\u5c14\u6587\u7cfb\u7edf\u5730\u5c06\u6bcf\u4e00\u79cd\u73ca\u745a\u7901\u5206\u4e3a\u4e09\u7c7b\u4e4b\u4e00\u3002\u4ed6\u79f0\u90a3\u4e9b\u9644\u7740\u5728\u9646\u5730\u4e0a\u7684\u73ca\u745a\u7901\u4e3a\u8fb9\u7f18\u7901\u77f3\u3002\u90a3\u4e9b\u4ece\u9646\u5730\u4e0a\u5206\u79bb\u5e76\u88ab\u6cfb\u6e56\u9694\u5f00\u7684\u73ca\u745a\u7901\u662f\u5821\u7901\u3002\u7b2c\u4e09\u7c7b\u662f\u73af\u7901\uff0c\u73af\u7901\u5305\u56f4\u4e86\u4e00\u4e2a\u4e2d\u592e\u6cfb\u6e56\uff0c\u4f46\u6ca1\u6709\u9646\u5730\u3002\n\u5f53\u65f6\uff0c\u5730\u8d28\u5b66\u5bb6\u8ba4\u4e3a\u5927\u9646\u6b63\u5728\u7a33\u6b65\u4ece\u5730\u7403\u4e0a\u5347\u8d77\uff0c\u6d77\u6d0b\u6b63\u5728\u7a33\u6b65\u4e0b\u6c89\u3002\u8fbe\u5c14\u6587\u6ce8\u610f\u5230\uff0c\u8fb9\u7f18\u73ca\u745a\u7901\u548c\u969c\u788d\u7901\u90fd\u503e\u5411\u4e8e\u73af\u7ed5\u706b\u5c71\u5c9b\uff0c\u4ed6\u63a8\u65ad\u73ca\u745a\u7901\u6700\u521d\u662f\u5728\u706b\u5c71\u5c9b\u8fb9\u7f18\u5f62\u6210\u7684\u3002\u5f53\u706b\u5c71\u6b7b\u4ea1\u5e76\u6162\u6162\u6c89\u5165\u6d77\u6d0b\u65f6\uff0c\u73ca\u745a\u7901\u4ecd\u7136\u5b58\u5728\uff0c\u9996\u5148\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u969c\u788d\u7901\uff0c\u6700\u7ec8\u5728\u706b\u5c71\u5b8c\u5168\u6c89\u6ca1\u540e\u6210\u4e3a\u4e00\u4e2a\u73af\u7901\u3002\n\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff0c\u8fbe\u5c14\u6587\u80fd\u591f\u7efc\u5408\u4ed6\u90a3\u4e2a\u65f6\u4ee3\u6240\u6709\u5173\u4e8e\u73ca\u745a\u7901\u7684\u77e5\u8bc6\uff0c\u5e76\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u3001\u5168\u9762\u548c\u4ee4\u4eba\u4fe1\u670d\u7684\u7406\u8bba\u6a21\u578b\uff0c\u8fd9\u8ba9\u4ed6\u611f\u5230\u656c\u754f\u3002\u800c\u73b0\u5728\u3002\n\u201c\u6d77\u5e73\u9762\u7684\u5468\u671f\u6027\u53d8\u5316\u63a8\u52a8\u4e86\u73af\u7901\u7684\u5f62\u6210\uff0c\u201d\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\u3002\u201c\u8fbe\u5c14\u6587\u6ca1\u6709\u6d77\u5e73\u9762\u4e0a\u5347\u548c\u4e0b\u964d\u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u51b0\u5ddd\u4f5c\u7528\u76f4\u523019\u4e16\u7eaa60\u5e74\u4ee3\u624d\u6210\u4e3a\u5e38\u8bc6\u3002\u201d\n\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff0c\u8fbe\u5c14\u6587\u5206\u7c7b\u7cfb\u7edf\u548c\u7406\u8bba\u7684\u7b80\u5355\u6027\u53ef\u80fd\u662f\u5176\u6301\u7eed\u5438\u5f15\u529b\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u81ea20\u4e16\u7eaa30\u5e74\u4ee3\u4ee5\u6765\uff0c\u5bf9\u73af\u7901\u5f62\u6210\u7684\u66f4\u51c6\u786e\u63cf\u8ff0\u5df2\u7ecf\u51fa\u73b0\uff0c\u4f46\u5b83\u8981\u590d\u6742\u5f97\u591a\uff0c\u652f\u6301\u5b83\u7684\u5927\u90e8\u5206\u8bc1\u636e\u90fd\u662f\u6700\u8fd1\u7684\uff0c\u8fd9\u4e9b\u8bc1\u636e\u6765\u81ea\u8fc7\u53bb40\u5e74\u6765\u6570\u5341\u6b21\u79d1\u5b66\u548c\u77f3\u6cb9\u5de5\u4e1a\u94bb\u63a2\u63a2\u9669\uff0c\u4ee5\u53ca\u6765\u81ea\u5730\u7403\u6c14\u5019\u548c\u6d77\u5e73\u9762\u5386\u53f2\u7684\u6c47\u7f16\u8bb0\u5f55\u3002\n\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff0c\u4eca\u5929\u7684\u73af\u7901\u5f62\u6210\u4e8e\u8fc7\u53bb50\u4e07\u5e74\uff0c\u662f\u7531\u6d77\u5e73\u9762\u6bcf10\u4e07\u5e74\u53d1\u751f\u4e00\u6b21\u7684\u4e94\u6b21\u5267\u70c8\u6ce2\u52a8\u6240\u9a71\u52a8\u7684\u3002\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u6d77\u5e73\u9762\u5347\u964d120\u7c73(\u7ea6394\u82f1\u5c3a)\u6216\u66f4\u591a\u3002\u4f46\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff0c\u4e3a\u4e86\u5145\u5206\u7406\u89e3\u6d77\u5e73\u9762\u53d8\u5316\u662f\u5982\u4f55\u9020\u6210\u73af\u7901\u7684\uff0c\u63d0\u65e9\u5f00\u59cb\u662f\u6709\u5e2e\u52a9\u7684\u3002\n\u201c\u5728\u8fc7\u53bb\u7684500\u4e07\u5e74\u91cc\uff0c\u5730\u7403\u7684\u6c14\u5019\u53d1\u751f\u4e86\u76f8\u5f53\u5927\u7684\u53d8\u5316\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u4ece\u5927\u7ea6500\u4e07\u5e74\u524d\u5230250\u4e07\u5e74\u524d\uff0c\u6211\u4eec\u7684\u6c14\u5019\u76f8\u5f53\u6e29\u6696\uff0c\u53d8\u5316\u4e0d\u5927\uff0c\u6d77\u5e73\u9762\u4fdd\u6301\u76f8\u5bf9\u6052\u5b9a\u3002\u5f53\u65f6\uff0c\u5730\u7403\u6b63\u5728\u5f62\u6210\u5e73\u9876\u7684\u5824\u5cb8\uff0c\u800c\u4eca\u5929\u6211\u4eec\u6709\u73af\u7901\u3002\u201c\n\u6d77\u5e73\u9762\u7a33\u6b65\u4f46\u7f13\u6162\u5730\u4e0a\u5347\uff0c\u4ea7\u751f\u73af\u7901\u7684\u5e73\u9876\u5824\u5cb8\u662f\u65e0\u6570\u4ee3\u73ca\u745a\u548c\u5176\u4ed6\u6d77\u6d0b\u751f\u7269\u751f\u6b7b\u76f8\u7ee7\u521b\u9020\u7684\uff0c\u5b83\u4eec\u7684\u9aa8\u9abc\u6dfb\u52a0\u5230\u6d45\u5c42\u5e73\u9876\u6d77\u6d0b\u751f\u6001\u7cfb\u7edf\u7684\u77ff\u5316\u5e95\u677f\u4e0a\u3002\u5e73\u9876\u94f6\u884c\u7a33\u6b65\u589e\u957f\uff0c\u4e0e\u6d77\u5e73\u9762\u540c\u6b65\uff0c\u76f4\u5230\u5927\u7ea6250\u4e07\u5e74\u524d\u6696\u671f\u7ed3\u675f\u3002\n\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff1a\u201c\u6c14\u5019\u5f00\u59cb\u5448\u5468\u671f\u6027\u6ce2\u52a8\u3002\u201d\u201c\u6696\u671f\u548c\u51b7\u671f\u4ea4\u66ff\u51fa\u73b0\uff0c\u4f46\u603b\u4f53\u6765\u8bf4\uff0c\u8d8b\u52bf\u662f\u5730\u7403\u6c14\u5019\u53d8\u5f97\u8d8a\u6765\u8d8a\u51b7\uff0c\u5e76\u88ab\u77ed\u6682\u7684\u6e29\u6696\u6ce2\u52a8\u6240\u6253\u65ad\u3002\u201d\n\u5728\u6b64\u671f\u95f4\uff0c\u51b0\u76d6\u4e0d\u65ad\u52a0\u539a\u3002\u968f\u7740\u51b0\u7684\u79ef\u7d2f\uff0c\u6d77\u5e73\u9762\u4e0b\u964d\uff0c\u9732\u51fa\u4e86\u5e73\u5766\u7684\u78b3\u9178\u76d0\u6cb3\u5cb8\u7684\u9876\u90e8\uff0c\u5b83\u4eec\u50cf\u6f02\u767d\u7684\u77f3\u5934\u53f0\u5730\u4e00\u6837\u4ece\u6d77\u6d0b\u4e2d\u5347\u8d77\u3002\u5f53\u96e8\u6c34\u843d\u5728\u88f8\u9732\u7684\u6cb3\u5cb8\u4e0a\u65f6\uff0c\u5b83\u4f1a\u6162\u6162\u6eb6\u89e3\u78b3\u9178\u76d0\uff0c\u800c\u79ef\u6c34\u52a0\u901f\u4e86\u8fd9\u4e00\u8fc7\u7a0b\u3002\u6c34\u5751\u548c\u6c60\u5858\u9010\u6e10\u523b\u51fa\u7897\u72b6\u51f9\u9677\u3002\u5728\u8d85\u8fc7200\u4e07\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u767d\u8272\u7684\u53f0\u5730\u53d8\u6210\u4e86\u73af\u5f62\u7684\u5854\u697c\uff0c\u4e2d\u5fc3\u51f9\u9677\u88ab\u638f\u7a7a\u3002\nDroxler\u8bf4\uff1a\u201c\u5730\u7403\u4e0a\u7684\u51b0\u91cf\u5728\u5927\u7ea650\u4e07-60\u4e07\u5e74\u524d\u8fbe\u5230\u6700\u521d\u7684\u6700\u5927\u503c\uff0c\u5f53\u65f6\u4e00\u82f1\u91cc\u539a\u7684\u51b0\u8986\u76d6\u4e86\u829d\u52a0\u54e5\uff0c\u800c\u7ebd\u7ea6\u4f4d\u4e8e\u5317\u7f8e\u5de8\u5927\u51b0\u76d6\u7684\u5357\u7f18\uff0c\u4e0e\u73b0\u4ee3\u5357\u6781\u6d32\u76f8\u5f53\u3002\u201d\u5317\u7f8e\u3001\u82cf\u683c\u5170\u3001\u65af\u582a\u7684\u7eb3\u7ef4\u4e9a\u548c\u897f\u4f2f\u5229\u4e9a\u7684\u51b0\u592a\u591a\u4e86\uff0c\u6d77\u5e73\u9762\u6bd4\u73b0\u5728\u4f4e120\u7c73\u5230130\u7c73\u3002\n\u5728\u8fc7\u53bb\u768450\u4e07\u5e74\u91cc\uff0c\u6d77\u5e73\u9762\u53d1\u751f\u4e86\u4e94\u6b21\u620f\u5267\u6027\u7684\u6ce2\u52a8\uff0c\u9a71\u52a8\u56e0\u7d20\u662f\u5730\u7403\u5f62\u6210\u5317\u65b9\u5927\u51b0\u76d6\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u51b0\u76d6\u5bf9\u8f7b\u5fae\u6c14\u5019\u53d8\u5316\u7684\u654f\u611f\u6027\uff0c\u6bd4\u5982\u7531\u4e8e\u5730\u7403\u8f68\u9053\u548c\u503e\u659c\u5ea6\u7684\u8f7b\u5fae\u53d8\u5316\uff0c\u964d\u843d\u5728\u9065\u8fdc\u5317\u534a\u7403\u7684\u65e5\u5149\u91cf\u51fa\u73b0\u4e86\u6ce2\u52a8\u3002\u5728\u8fc7\u53bb\u768450\u4e07\u5e74\u91cc\uff0c\u6d77\u5e73\u9762\u51fa\u73b0\u4e86\u4e94\u6b21\u620f\u5267\u6027\u7684\u6ce2\u52a8\uff0c\u539f\u56e0\u662f\u5730\u7403\u5f62\u6210\u4e86\u5de8\u5927\u7684\u5317\u65b9\u51b0\u76d6\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u51b0\u76d6\u5bf9\u8f7b\u5fae\u6c14\u5019\u53d8\u5316\u7684\u654f\u611f\u6027\u3002\n\u4ed6\u8bf4\uff1a\u201c\u56e0\u4e3a\u8fd9\u4e9b\u5927\u51b0\u76d6\u5f62\u6210\u4e8e\u5317\u7f8e\uff0c\u800c\u4e0d\u662f\u5728\u6781\u70b9\u4e0a\uff0c\u800c\u662f\u96c6\u4e2d\u5728\u76f8\u5bf9\u8f83\u4f4e\u7684\u7eac\u5ea6\uff0c\u5927\u7ea6\u5317\u7eac65\u5ea6\uff0c\u5b83\u4eec\u79ef\u7d2f\u4e86\u5de8\u5927\u7684\u51b0\u91cf\uff0c\u4f7f\u6d77\u5e73\u9762\u4e0b\u964d\u4e86120\u7c73\u4ee5\u4e0a\u3002\u201d\u201c\u4f46\u540c\u65f6\uff0c\u5b83\u4eec\u80fd\u591f\u5f88\u5feb\u878d\u5316\u3002\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u89c2\u5bdf\u5230\uff0c\u6d77\u5e73\u9762\u7684\u8fd9\u4e9b\u5468\u671f\u6027\u7684\u9ad8\u632f\u5e45\u6ce2\u52a8\u3002\u7b2c\u4e00\u6b21\u5927\u79cb\u5343\u5927\u7ea6\u662f\u572845\u4e07\u5e74\u524d\uff0c\u4ece\u6211\u4eec\u4eca\u5929\u7684\u96f6\u4e0b135\u7c73\u5230+10\u7c73\u3002\u201c\u3002\n\u5728\u6bcf\u4e00\u6b21\u6446\u52a8\u4e2d\uff0c\u638f\u7a7a\u7684\u5e73\u9876\u6cb3\u5cb8\u5728\u6d77\u5e73\u9762\u4e0a\u5347\u5230\u63a5\u8fd1\u6700\u9ad8\u6c34\u5e73\u7684\u6696\u671f\u88ab\u91cd\u65b0\u6df9\u6ca1\u3002\u5728\u90a3\u4e9b\u65f6\u671f\uff0c\u5c31\u50cf\u4eca\u5929\u4e00\u6837\uff0c\u73ca\u745a\u91cd\u65b0\u6b96\u6c11\u4e86\u88ab\u4fb5\u8680\u7684\u6cb3\u5cb8\u7684\u6700\u9ad8\u90e8\u5206\uff0c\u7279\u522b\u662f\u6cbf\u7740\u5b83\u4eec\u51f8\u8d77\u7684\u5916\u7f18\u3002\n\u5fb7\u7f57\u514b\u65af\u52d2\u8bf4\uff1a\u201c\u73b0\u5728\u4f60\u5728\u5b83\u4eec\u51f8\u8d77\u7684\u8fb9\u7f18\u4e0a\u52a0\u78b3\u9178\u76d0\uff0c\u4f60\u5c31\u521b\u9020\u4e86\u73b0\u4ee3\u7684\u73af\u7901\u3002\u201d\u201c\u4f46\u8fd9\u6bb5\u9ad8\u6d77\u5e73\u9762\u7684\u65f6\u95f4\u4e0d\u4f1a\u8d85\u8fc7\u4e00\u4e07\u5e74-\u4e00\u4e07\u4e24\u5343\u5e74\uff0c\u800c\u4e14\u8fd8\u4f1a\u518d\u5f80\u4e0b\u8d70\u3002\u6240\u4ee5\u73b0\u5728\u4f60\u5728\u8fb9\u7f18\u589e\u52a0\u4e86\u4e00\u4e9b\u73ca\u745a\u7901\uff0c\u4f46\u5f53\u6d77\u5e73\u9762\u4e0b\u964d\u65f6\uff0c\u518d\u6b21\u6eb6\u89e3\u4e86\u6cfb\u6e56\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u6bcf\u4e2a\u5468\u671f\u90fd\u5728\u8fdb\u4e00\u6b65\u589e\u5f3a\u5f62\u6001\uff0c\u5728\u8fb9\u7f18\u751f\u957f\uff0c\u5728\u4e2d\u95f4\u6eb6\u89e3\u3002\u201c\n\u5fb7\u7f57\u514b\u65af\u52d2\u548c\u4e54\u91cc\u7684\u6df1\u5165\u7814\u7a76\u5305\u542b\u4e86\u6570\u5341\u5e45\u63d2\u56fe\uff0c\u5176\u4e2d\u5305\u62ec\u8fbe\u5c14\u6587\u7684\u539f\u59cb\u56fe\u753b\u4e0e\u5f53\u4ee3\u5730\u56fe\u548c\u536b\u661f\u56fe\u50cf\u7684\u4e00\u4e9b\u6bd4\u8f83\u3002\u8fd9\u7bc7\u8bba\u6587\u5229\u7528\u4e86\u6570\u5341\u6b21\u63a2\u9669\u6536\u96c6\u7684\u6570\u5341\u5e74\u6d77\u6d0b\u5730\u8d28\u6570\u636e\uff0c\u5305\u62ec\u4e24\u4f4d\u5408\u8457\u8005\u6700\u8fd1\u5728\u5370\u5ea6\u6d0b\u83b7\u5f97\u7684\u6570\u636e\u96c6\u3002\n\u8fd9\u9879\u5de5\u4f5c\u7684\u8d44\u91d1\u6765\u81ea\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u3001\u8377\u5170\u7687\u5bb6\u58f3\u724c\u516c\u53f8\u3001\u9053\u8fbe\u5c14\u516c\u53f8\u3001\u9a6c\u5c14\u4ee3\u592b\u73af\u5883\u4fdd\u62a4\u5c40\u3001\u5357\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\uff0c\u4ee5\u53caIFREMER\u7684\u88ab\u52a8\u8fb9\u9645\u63a2\u7d22\u5b9e\u9a8c\u5ba4\u7814\u7a76\u8ba1\u5212\u3001\u6cd5\u56fd\u56fd\u5bb6\u79d1\u5b66\u7814\u7a76\u4e2d\u5fc3\u3001\u96f7\u6069\u5927\u5b66\u3001\u897f\u5e03\u5217\u5854\u5c3c\u5927\u5b66\u3001\u76ae\u57c3\u5c14\u548c\u739b\u4e3d\u00b7\u5c45\u91cc\u5927\u5b66\u4ee5\u53ca\u6cd5\u56fd\u77f3\u6cb9\u5b66\u9662\u3002", "note_en": "Charles Darwin created a \u201cbeautiful\u201d theory of how atolls form. But, say researchers, he lacked a key piece for information.\n Marine geologist and oceanographer Andr\u00e9 Droxler knows Darwin\u2019s theory about atolls is  incorrect. But Droxler, who\u2019s studied  coral reefs for more than 40 years, understands why Darwin\u2019s model persists in textbooks, university lecture halls, natural science museums, and Wikipedia entries.\n \u201cIt\u2019s amazing, when you compare satellite images of reefs today versus his map. It\u2019s almost the same. It\u2019s unbelievably accurate.\u201d\n \u201cIt\u2019s so beautiful, so simple and pleasing that everybody still teaches it,\u201d says Droxler, who recently retired from Rice University. \u201cEvery introductory book you can find in earth science and marine science still has Darwin\u2019s model. If they teach one thing about reefs or carbonates in marine science 101, they teach that model.\u201d\n Droxler, a professor of earth, environmental, and planetary sciences at Rice for 33 years, is hoping to set the record straight with a paper about the origins of atolls. Droxler and longtime collaborator St\u00e9phan Jorry, a marine geologist and oceanographer at the French Research Institute for Exploration of the Sea, report their work in the   Annual Review of Marine Science.\n  Darwin\u2019s theory about the formation of atolls was published in 1842, six years after his  legendary voyage aboard the British survey ship  HMS Beagle. A geologist by training, Darwin was keenly interested in the rocks and landforms he encountered in his five years aboard the  Beagle. The ship\u2019s primary mission was surveying coastlines and hazards to navigation, and the ship\u2019s orders included collecting detailed observations of the tides and ocean depths around a coral atoll.\n \u201cThey spent a lot of time mapping reefs because they were such hazards to shipping,\u201d Droxler says of the Royal Navy. Atolls were particularly interesting and dangerous. Some were topped with low-lying islands but many were jagged rings of coral-topped rock that sat just below the water\u2019s surface, ready to rip the bottom out of unwary passing ships. \u201cThey come out of the abyssal plain of the ocean to almost no depth,\u201d Droxler says. \u201cSo they needed to know exactly where they were located.\u201d\n The  Beagle, like every Royal Navy vessel, carried charts with the marked location of every known reef, and Darwin put these to use in his 1842 paper.\n   \u201cHe published a beautiful map that compiled all the known reefs on Earth,\u201d Droxler says. \u201cIt\u2019s amazing, when you compare satellite images of reefs today versus his map. It\u2019s almost the same. It\u2019s unbelievably accurate.\u201d\n But unlike navy maps that simply marked reefs as hazards to navigation, Darwin systematically classified each into one of three categories. Those attached to land, he called fringing reefs. Those detached from land and separated by a lagoon were barrier reefs. The third category was atolls, ring reefs that enclosed a central lagoon but no land.\n At the time, geologists believed continents were steadily rising out of the Earth and oceans were steadily sinking. Darwin noticed that both fringing and barrier reefs tended to surround volcanic islands, and he reasoned reefs initially formed on the fringe of volcanic islands. When the volcano died and slowly sank back into the ocean, the reef remained, first becoming a separated barrier reef and eventually, after the volcano sank entirely, an atoll.\n Droxler says he\u2019s awed by Darwin\u2019s ability to synthesize all that was known about reefs in his day and come up with such a simple, comprehensive, and compelling theoretical model. And yet.\n \u201cCyclic changes in sea level drive atoll formation,\u201d Droxler says. \u201cDarwin had no concept that sea level could go up and down, because glaciation didn\u2019t become common knowledge until the 1860s.\u201d\n  Droxler says the simplicity of Darwin\u2019s classification system and theory could play a role in its continued appeal. A more accurate description of atoll formation has been around since the 1930s, but it is considerably more complicated and much of the evidence to support it is more recent, coming in the past 40 years from dozens of scientific and oil industry drilling expeditions as well as from the compiled record of Earth\u2019s climate and sea level history.\n Today\u2019s atolls formed in the past 500,000 years, Droxler says, driven by five wild swings in sea level that occurred every 100,000 years. In each cycle, sea level rose and fell by 120 meters (about 394 feet) or more. But to fully appreciate how changing sea level created atolls, it helps to start much earlier, Droxler says.\n \u201cThe Earth\u2019s climate has changed quite dramatically in the last 5 million years,\u201d he says. \u201cFrom about 5 million years ago to 2.5 million years ago, we had a rather warm climate that did not change very much, and sea level remained relatively constant. At that time, the Earth was producing flat-topped banks where today we have atolls.\u201d\n Sea level rose steadily but slowly, and the flat-topped banks that would give birth to atolls were created by countless generations of corals and other sea creatures that lived and died, adding their skeletons to the mineralized floor of the shallow, flat-topped marine ecosystem. The flat-top banks grew steadily, keeping pace with sea level until the warm period ended about 2.5 million years ago.\n \u201cThe climate began to fluctuate into cycles,\u201d Droxler says. \u201cThere were alternate periods of warm and cold, but overall, the trend was that the Earth\u2019s climate got colder and colder and colder, interrupted by short warm swings.\u201d\n  Throughout this period, ice caps were thickening. As ice accumulated, sea level fell, exposing the tops of the flat carbonate banks, which rose out of the ocean like bleached stone mesas. When rain fell atop the exposed banks, it slowly dissolved the carbonate, and standing water sped up the process. Puddles and ponds gradually carved bowl-like depressions. And over 2 million years, this process turned white mesas into ring-like towers with hollowed-out central depressions.\n \u201cIce volume on Earth reached its initial maximum around 500,000-600,000 years ago, when a mile of ice covered Chicago, and New York was at the southern edge of a massive ice sheet on North America, comparable to modern Antarctica,\u201d Droxler says. \u201cThere was so much ice in North America, Scotland, Scandinavia, and Siberia that sea level was reaching 120 meters to 130 meters below what it is today.\u201d\n The five dramatic swings in sea level that occurred in the past half-million years were driven by Earth\u2019s ability to form large northern ice sheets, and by the sensitivity of those ice sheets to slight climatic changes, like fluctuations in the amount of sunlight landing in the far Northern Hemisphere due to slight changes in the planet\u2019s orbit and tilt.\n \u201cBecause these big ice sheets formed in North America, not on the pole, but centered in relatively low latitude about 65 degrees north, they accumulated huge ice volumes that lowered sea level by more than 120 meters,\u201d he says. \u201cBut also, they were able to melt very quickly. And so we observe, now, these cyclic high-amplitude swings of sea level. And the first big swing was about at 450,000 years ago, when it went from minus-135 meters to plus-10 meters of what we have today.\u201d\n During each swing, the hollowed out flat-topped banks were resubmerged during warm periods, when sea level rose near its highest level. During those periods, as today, coral recolonized the highest parts of the eroded banks, in particular along their raised outer rims.\n \u201cNow you\u2019re adding carbonate on to their raised rim, and you\u2019re creating the modern atolls,\u201d Droxler says. \u201cBut this period of high sea level doesn\u2019t last for more than 10,000-12,000 years, and it goes down again. So now you are adding some reef on the rim, but then dissolving the lagoon again when sea level retreats. So you are enhancing the morphology even more with each cycle now, growing on the margin and dissolving in the middle.\u201d\n Droxler\u2019s and Jorry\u2019s in-depth study contains dozens of illustrations, including some comparisons of Darwin\u2019s original drawings with contemporary maps and satellite imagery. And the paper draws on decades of marine geological data compiled from dozens of expeditions, including recent datasets acquired by both coauthors in the Indian Ocean.\n Funding for the work came from the National Science Foundation, Royal Dutch Shell, Total, the Environmental Protection Agency of the Maldives, the University of South Florida, and the Passive Margins Exploration Laboratories research program of IFREMER, the French National Center for Scientific Research, the University of Rennes, the University of Western Brittany, Pierre and Marie Curie University, and the French Institute of Petroleum.", "posttime": "2020-10-20 22:41:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73af\u7901,theory,\u6d77\u5e73\u9762", "title": "\u8fbe\u5c14\u6587\u5173\u4e8e\u73af\u7901\u7684\u7406\u8bba\u662f\u201c\u7f8e\u4e3d\u7684\u201d\uff0c\u4f46\u5374\u662f\u9519\u8bef\u7684\u3002", "title_en": "Darwin\u2019s theory about atolls is \u2018beautiful\u2019 but wrong", "transed": 1, "url": "https://www.futurity.org/darwins-theory-atolls-2454202-2/", "via": "", "real_tags": ["\u73af\u7901", "theory", "\u6d77\u5e73\u9762"]}, {"category": "", "categoryclass": "", "imagename": "8e77f040d37fd76761e6b57f203fb02c.jpeg", "infoid": 1030052, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u56de\u8d2d\u5305\u542b\u95ee\u9898\u8ddf\u8e2a\u5668\u3001\u793a\u4f8b\u548c\u4e0ePEP 622\u76f8\u5173\u7684\u65e9\u671f\u5de5\u4f5c\uff1a\u7ed3\u6784\u6a21\u5f0f\u5339\u914d\u3002PEP\u672c\u8eab\u7684\u66f4\u65b0\u5e94\u5728PEPS\u56de\u8d2d\u4e2d\u8fdb\u884c\u3002\nBrandt Bucher\u7f16\u5199\u7684\u5b8c\u6574\u53c2\u8003\u5b9e\u73b0\u53ef\u4ee5\u4f5c\u4e3aCPython repo\u7684\u5206\u652f\u83b7\u5f97\u3002\u8fd9\u5f88\u5bb9\u6613\u8f6c\u6362\u4e3aPull\u8bf7\u6c42\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u613f\u4ece\u6e90\u4ee3\u7801\u6784\u5efaCPython\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4eba\uff0c\u8bf7\u5355\u51fb\u672c\u81ea\u8ff0\u6587\u4ef6\u9876\u90e8\u7684\u6309\u94ae\u3002\nMatch\u8bed\u53e5\u63a5\u53d7\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u5176\u4e0e\u4f5c\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2aCASE\u5757\u7ed9\u5b9a\u7684\u540e\u7ee7\u5b57\u7b26\u8fdb\u884c\u6bd4\u8f83\u3002\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u7c7b\u4f3c\u4e8eC\u3001Java\u6216JavaScript(\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00)\u4e2d\u7684switch\u8bed\u53e5\uff0c\u4f46\u529f\u80fd\u8981\u5f3a\u5927\u5f97\u591a\u3002\nDef http_error(Status)\uff1a\u5339\u914d\u72b6\u6001\uff1a\u6848\u4f8b400\uff1a\u8fd4\u56de&#34\uff1b\u9519\u8bef\u8bf7\u6c42&#34\uff1b\u6848\u4f8b401\uff1a\u8fd4\u56de&#34\uff1b\u672a\u7ecf\u6388\u6743&#34\uff1b\u6848\u4f8b403\uff1a\u8fd4\u56de&#34\uff1b\u7981\u6b62&#34\uff1b\u6848\u4f8b404\uff1a\u8fd4\u56de&#34\uff1b\u672a\u627e\u5230&#34\uff1b\u6848\u4f8b418\uff1a\u8fd4\u56de&#34\uff1bi&#39\uff1bm\u8336\u58f6&#34\uff1b\u6848\u4f8b_\uff1a\u8fd4\u56de&#34\uff1b\u5176\u4ed6&#34\uff1b\n\u6ce8\u610f\u6700\u540e\u4e00\u5757\uff1a&#34\uff1b\u53d8\u91cf\u540d&#34\uff1b_\u5145\u5f53\u901a\u914d\u7b26\uff0c\u4ece\u4e0d\u4f1a\u5931\u8d25\u3002\n#\u4e3b\u9898\u4e3a(x\uff0cy)\u5143\u7ec4\u5339\u914d\u70b9\uff1acase(0\uff0c0)\uff1aprint(&#34\uff1bOrigin&#34\uff1b)case(0\uff0cy)\uff1aprint(f&#34\uff1bY={y}&#34\uff1b)case(x\uff0c0)\uff1aprint(f&#34\uff1bx={x}&#34\uff1b)case(x\uff0cy)\uff1aprint(f&#34\uff1bx={x}\uff0cY={y}&#34\uff1b)case_\uff1a\u63d0\u9ad8\u503c\u9519\u8bef(&#34\uff1b\u4e0d\u662f\u70b9&#34\uff1b)\u3002\n\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u90a3\u4e2a\uff01\u7b2c\u4e00\u4e2a\u6a21\u5f0f\u6709\u4e24\u4e2a\u6587\u5b57\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e0a\u9762\u663e\u793a\u7684\u6587\u5b57\u6a21\u5f0f\u7684\u6269\u5c55\u3002\u4f46\u662f\u63a5\u4e0b\u6765\u7684\u4e24\u4e2a\u6a21\u5f0f\u7ed3\u5408\u4e86\u4e00\u4e2a\u6587\u5b57\u548c\u4e00\u4e2a\u53d8\u91cf\uff0c\u53d8\u91cf\u4ece\u4e3b\u9898(\u70b9)\u6355\u83b7\u4e00\u4e2a\u503c\u3002\u7b2c\u56db\u4e2a\u6a21\u5f0f\u6355\u83b7\u4e24\u4e2a\u503c\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u6982\u5ff5\u4e0a\u7c7b\u4f3c\u4e8e\u89e3\u5305\u8d4b\u503c(x\uff0cy)=point\u3002\n\u5982\u679c\u4f7f\u7528\u7c7b\u6765\u7ec4\u7ec7\u6570\u636e(\u4f8b\u5982\uff0c\u6570\u636e\u7c7b)\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u7c7b\u540d\u540e\u8ddf\u7c7b\u4f3c\u4e8e\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\uff0c\u4f46\u5177\u6709\u6355\u83b7\u53d8\u91cf\u7684\u529f\u80fd\uff1a\n\u4ece\u6570\u636e\u7c7b\u5bfc\u5165DataClass@DataClass\u7c7bPoint\uff1ax\uff1aint y\uff1aint def Where is(Point)\uff1aMatch Point\uff1aCase Point(0\uff0c0)\uff1aPrint(&#34\uff1bOrigin&#34\uff1b)Case Point(0\uff0cy)\uff1aPrint(f&#34\uff1bY={y}&#34\uff1b)Case Point(x\uff0c0)\uff1aPrint(f&#34\uff1bX={x}&#34\uff1b)Case Point()\uff1a\u6253\u5370(&#34\uff1b\u5176\u4ed6&#34\uff1b)case_\uff1a\u6253\u5370(&#34\uff1b\u4e0d\u662f\u70b9&#34\uff1b)\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u3002\u4ee5\u4e0b\u6a21\u5f0f\u7b49\u4ef7(\u5e76\u4e14\u90fd\u5c06y\u5c5e\u6027\u7ed1\u5b9a\u5230var\u53d8\u91cf)\uff1a\n\u6a21\u5f0f\u53ef\u4ee5\u4efb\u610f\u5d4c\u5957\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u5165\u56f4\u7684\u70b9\u5217\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5339\u914d\u5b83\uff1a\nMatch Points\uff1acase[]\uff1aPrint(&#34\uff1bNo Points&#34\uff1b)case[Point(0\uff0c0)]\uff1aPrint(&#34\uff1bthe Origin&#34\uff1b)case[Point(x\uff0cy)]\uff1aPrint(f&#34\uff1bSingle Point{x}\uff0c{y}&34\uff1b)case[Point(0\uff0cy1)\uff0cPoint(0\uff0cy2)]\uff1aPrint(f&#34\uff1bY\u8f74\u4e0a{y1}\uff0c{y2}&#34\uff1b)\u4e24\u4e2a\u6848\u4f8b_\uff1a\u6253\u5370(&#34\uff1b\u5176\u4ed6&#34\uff1b)\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u6dfb\u52a0IF\u5b50\u53e5\uff0c\u79f0\u4e3a\u5b88\u536b\u3002\u5982\u679cGuard\u4e3afalse\uff0c\u5219Match\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u4e2aCASE\u5757\u3002\u8bf7\u6ce8\u610f\uff0c\u503c\u6355\u83b7\u53d1\u751f\u5728\u8bc4\u4f30\u4fdd\u62a4\u4e4b\u524d\uff1a\n\u5339\u914d\u70b9\uff1a\u6848\u4f8b\u70b9(x\uff0cy)\uff0c\u5982\u679cx==y\uff1a\u6253\u5370(f&#34\uff1bY=X at{x}&#34\uff1b)\u6848\u4f8b\u70b9(x\uff0cy)\uff1a\u6253\u5370(f&#34\uff1b\u4e0d\u5728\u5bf9\u89d2\u7ebf&#34\uff1b)\u3002\n\u4e0e\u89e3\u5305\u8d4b\u503c\u4e00\u6837\uff0c\u5143\u7ec4\u548c\u5217\u8868\u6a21\u5f0f\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u542b\u4e49\uff0c\u5b9e\u9645\u4e0a\u5339\u914d\u4efb\u610f\u5e8f\u5217\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u4f8b\u5916\u662f\u5b83\u4eec\u4e0d\u5339\u914d\u8fed\u4ee3\u5668\u6216\u5b57\u7b26\u4e32\u3002(\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4e3b\u9898\u5fc5\u987b\u662f\u96c6\u5408\u7684\u5b9e\u4f8b\u3002abc.Sequence)\u3002\n\u5e8f\u5217\u6a21\u5f0f\u652f\u6301\u901a\u914d\u7b26\uff1a[x\uff0cy\uff0c*rest]\u548c(x\uff0cy\uff0c*rest)\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u89e3\u5305\u8d4b\u503c\u4e2d\u7684\u901a\u914d\u7b26\u3002*\u4e4b\u540e\u7684\u540d\u79f0\u4e5f\u53ef\u4ee5\u662f_\uff0c\u56e0\u6b64(x\uff0cy\uff0c*_)\u5339\u914d\u81f3\u5c11\u4e24\u4e2a\u9879\u7684\u5e8f\u5217\uff0c\u800c\u4e0d\u7ed1\u5b9a\u5176\u4f59\u9879\u3002\n\u6620\u5c04\u6a21\u5f0f\uff1a{&#34\uff1b\u5e26\u5bbd&#34\uff1b\uff1ab\uff0c&#34\uff1b\u5ef6\u8fdf&#34\uff1b\uff1al}\u4eceDICT\u6355\u83b7&#34\uff1b\u5e26\u5bbd&#34\uff1b\u548c&#34\uff1b\u5ef6\u8fdf&#34\uff1b\u503c\u3002\u4e0eSequencepatterns\u4e0d\u540c\uff0c\u989d\u5916\u7684\u952e\u88ab\u5ffd\u7565\u3002\u8fd8\u652f\u6301\u901a\u914d\u7b26**REST\u3002(\u4f46\u662f**_\u4f1a\u662f\u591a\u4f59\u7684\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u3002)\u3002\n\u6a21\u5f0f\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u5e38\u91cf\u3002\u8fd9\u4e9b\u540d\u79f0\u5fc5\u987b\u7528\u70b9\u5206\u9694\uff0c\u4ee5\u9632\u6b62\u5b83\u4eec\u88ab\u89e3\u91ca\u4e3a\u6355\u83b7\u53d8\u91cf\uff1a\n\u4ece\u679a\u4e3e\u5bfc\u5165\u679a\u4e3e\u7c7b\u989c\u8272(\u679a\u4e3e)\uff1a\u7ea2\u8272=0\u7eff\u8272=1\u84dd\u8272=2\u5339\u914d\u989c\u8272\uff1a\u6848\u4f8b\u989c\u8272\u3002\u7ea2\u8272\uff1a\u6253\u5370(&#34\uff1b\u6211\u770b\u5230\u7ea2\u8272\uff01&#34\uff1b)\u8868\u58f3\u989c\u8272\u3002\u7eff\u8272\uff1a\u6253\u5370(\u8349\u4e3a\u7eff\u8272)\u8868\u58f3\u989c\u8272\u3002\u84dd\u8272\uff1a\u5370\u82b1(#34\uff1bI&39\uff1bI&I\u2018\u6211\u611f\u89c9\u5230\u4e86\u5fe7\u90c1\uff1a(&#34\uff1b)\u3002\n\u5b57\u9762\u503cNone\u3001False\u548cTrue\u88ab\u7279\u6b8a\u5904\u7406\uff1a\u4e0e\u4e3b\u9898\u7684\u6bd4\u8f83\u662f\u4f7f\u7528is\u5b8c\u6210\u7684\u3002\u8fd9\u662f\uff1a\n\u7c7b\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u7c7b\u53d8\u91cf__MATCH_ARGS__\u6765\u8986\u76d6\u4ece\u4f4d\u7f6e\u53c2\u6570\u5230\u5c5e\u6027\u7684\u6620\u5c04\u3002\u8bf7\u53c2\u9605PEP\u4e2d\u7684\u76f8\u5173\u5185\u5bb9\u3002", "note_en": "This repo contains an issue tracker, examples, and early work related to PEP 622: Structural Pattern Matching.Updates to the PEP itself should be made in the PEPs repo.\n     A full reference implementation written by Brandt Bucher is availableas a  fork ofthe CPython repo. This is readily converted to a  pullrequest.\n For those who prefer not to build a CPython binary from source there&#39;sa Binder playground -- click the button at the top of this readme.\n    A  match statement takes an expression and compares it to successivepatterns given as one or more  case blocks. This is superficiallysimilar to a  switch statement in C, Java or JavaScript (an manyother languages), but much more powerful.\n  def  http_error( status):  match  status:  case  400:  return  &#34;Bad request&#34;  case  401:  return  &#34;Unauthorized&#34;  case  403:  return  &#34;Forbidden&#34;  case  404:  return  &#34;Not found&#34;  case  418:  return  &#34;I&#39;m a teapot&#34;  case  _:  return  &#34;Something else&#34;\n Note the last block: the &#34;variable name&#34;  _ acts as a  wildcard andnever fails to match.\n    # The subject is an (x, y) tuple match  point:  case ( 0,  0):  print( &#34;Origin&#34;)  case ( 0,  y):  print( f&#34;Y=  { y }&#34;)  case ( x,  0):  print( f&#34;X=  { x }&#34;)  case ( x,  y):  print( f&#34;X=  { x }, Y=  { y }&#34;)  case  _:  raise  ValueError( &#34;Not a point&#34;)\n Study that one carefully! The first pattern has two literals, and canbe thought of as an extension of the literal pattern shown above. Butthe next two patterns combine a literal and a variable, and thevariable  captures a value from the subject ( point). The fourthpattern captures two values, which makes it conceptually similar tothe unpacking assignment  (x, y) = point.\n If you are using classes to structure your data (e.g. data classes)you can use the class name followed by an argument list resembling aconstructor, but with the ability to capture variables:\n from  dataclasses  import  dataclass @ dataclass class  Point:  x:  int  y:  int def  whereis( point):  match  point:  case  Point( 0,  0):  print( &#34;Origin&#34;)  case  Point( 0,  y):  print( f&#34;Y=  { y }&#34;)  case  Point( x,  0):  print( f&#34;X=  { x }&#34;)  case  Point():  print( &#34;Somewhere else&#34;)  case  _:  print( &#34;Not a point&#34;)\n We can use keyword parameters too. The following patterns are allequivalent (and all bind the  y attribute to the  var variable):\n  Patterns can be arbitrarily nested. For example, if we have a shortlist of points, we could match it like this:\n match  points:  case []:  print( &#34;No points&#34;)  case [ Point( 0,  0)]:  print( &#34;The origin&#34;)  case [ Point( x,  y)]:  print( f&#34;Single point   { x },   { y }&#34;)  case [ Point( 0,  y1),  Point( 0,  y2)]:  print( f&#34;Two on the Y axis at   { y1 },   { y2 }&#34;)  case  _:  print( &#34;Something else&#34;)\n We can add an  if clause to a pattern, known as a &#34;guard&#34;. If theguard is false,  match goes on to try the next  case block. Notethat value capture happens before the guard is evaluated:\n match  point:  case  Point( x,  y)  if  x  ==  y:  print( f&#34;Y=X at   { x }&#34;)  case  Point( x,  y):  print( f&#34;Not on the diagonal&#34;)\n  Like unpacking assignments, tuple and list patterns have exactly thesame meaning and actually match arbitrary sequences. An importantexception is that they don&#39;t match iterators or strings.(Technically, the subject must be an instance of collections.abc.Sequence.)\n Sequence patterns support wildcards:  [x, y, *rest] and  (x, y, *rest) work similar to wildcards in unpacking assignments. Thename after  * may also be  _, so  (x, y, *_) matches a sequenceof at least two items without binding the remaining items.\n Mapping patterns:  {&#34;bandwidth&#34;: b, &#34;latency&#34;: l} captures the &#34;bandwidth&#34; and  &#34;latency&#34; values from a dict. Unlike sequencepatterns, extra keys are ignored. A wildcard  **rest is alsosupported. (But  **_ would be redundant, so it not allowed.)\n  Patterns may use named constants. These must be dotted namesto prevent them from being interpreted as capture variable:\n from  enum  import  Enum class  Color( Enum):  RED  =  0  GREEN  =  1  BLUE  =  2 match  color:  case  Color. RED:  print( &#34;I see red!&#34;)  case  Color. GREEN:  print( &#34;Grass is green&#34;)  case  Color. BLUE:  print( &#34;I&#39;m feeling the blues :(&#34;)\n The literals  None,  False and  True are treated specially:comparisons to the subject are done using  is. This:\n Classes may override the mapping from positional arguments toattributes by setting a class variable  __match_args__.Read about it in the PEP.", "posttime": "2020-10-20 22:41:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,matching,\u6a21\u5f0f", "title": "Python\u4e2d\u7684\u6a21\u5f0f\u5339\u914d", "title_en": "Pattern Matching in Python", "transed": 1, "url": "https://github.com/gvanrossum/patma", "via": "", "real_tags": ["python", "matching", "\u6a21\u5f0f"]}, {"category": "", "categoryclass": "", "imagename": "1f9438ff8402d0d607007a95505458eb.jpg", "infoid": 1030051, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u9a6c\u91cc\u5170\u5dde\u5df4\u5c14\u7684\u6469\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684Robert Moffit\u7f16\u8f91\uff0c\u5e76\u7531\u7f16\u8f91\u59d4\u5458\u4f1a\u6210\u5458Jose A.Scheinkman\u4e8e2020\u5e749\u670821\u65e5\u63a5\u53d7(2020\u5e744\u67088\u65e5\u6536\u5230\u4f9b\u5ba1\u67e5)\u3002\n\u5728\u8fc7\u53bb\u7684\u4e00\u4e2a\u4e16\u7eaa\u91cc\uff0c\u5173\u4e8e\u4e2a\u4f53\u5728\u8ba4\u77e5\u8981\u6c42\u9ad8\u7684\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u7684\u5e74\u9f84\u6a21\u5f0f\u662f\u5982\u4f55\u53d8\u5316\u7684\uff0c\u6211\u4eec\u77e5\u4e4b\u751a\u5c11\u3002\u8861\u91cf\u8fd9\u79cd\u751f\u547d\u5468\u671f\u7ee9\u6548\u6a21\u5f0f\u53ca\u5176\u968f\u65f6\u95f4\u7684\u52a8\u6001\u53d8\u5316\u7684\u4e3b\u8981\u56f0\u96be\u4e0e\u6784\u5efa\u53ef\u9760\u7684\u8861\u91cf\u6807\u51c6\u6709\u5173\uff0c\u8be5\u8861\u91cf\u6807\u51c6\u53ef\u4ee5\u8de8\u4e2a\u4eba\u548c\u968f\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u4e14\u4e0d\u53d7\u6280\u672f\u53d8\u5316\u6216\u5176\u4ed6\u73af\u5883\u56e0\u7d20\u7684\u5f71\u54cd\u3002\u8fd9\u9879\u7814\u7a76\u57fa\u4e8e\u5bf9\u804c\u4e1a\u56fd\u9645\u8c61\u68cb\u6bd4\u8d5b\u6570\u636e\u7684\u5206\u6790\uff0c\u4e3a\u8fc7\u53bb125\u5e74\u8ba4\u77e5\u8868\u73b0\u7684\u751f\u547d\u5468\u671f\u6a21\u5f0f\u7684\u52a8\u6001\u53d8\u5316\u63d0\u4f9b\u4e86\u8bc1\u636e\u3002\u76f8\u5bf9\u4e8e\u57fa\u4e8e\u56fd\u9645\u8c61\u68cb\u5f15\u64ce\u5efa\u8bae\u7684\u5404\u81ea\u6700\u4f18\u8d70\u6cd5\u7684\u5ba2\u89c2\u57fa\u51c6\uff0c\u5bf9\u8d85\u8fc724,000\u573a\u6e38\u620f\u4e2d\u7684\u4e2a\u4eba\u9010\u6b65\u8d70\u6cd5\u6027\u80fd\u8fdb\u884c\u8bc4\u4f30\u3002\u8fd9\u5229\u7528\u4e86\u4e25\u683c\u53ef\u6bd4\u8f83\u7684\u4efb\u52a1\u7684\u4f18\u52bf\uff0c\u5e76\u4e0e\u76f8\u540c\u7684\u6027\u80fd\u57fa\u51c6\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e3a\u540c\u4e00\u4e2a\u4eba\u5728\u4e0d\u540c\u5e74\u9f84\u7684\u957f\u65f6\u95f4\u5185\u63d0\u4f9b\u4e86\u7cbe\u786e\u548c\u53ef\u6bd4\u8f83\u7684\u4e2a\u4eba\u8868\u73b0\u8861\u91cf\u6807\u51c6\u3002\u901a\u8fc7\u5bf9\u76f8\u540c\u4e2a\u4f53\u7684\u91cd\u590d\u89c2\u5bdf\uff0c\u53ef\u4ee5\u5c06\u5e74\u9f84\u6a21\u5f0f\u4ece\u7279\u6b8a\u53d8\u5f02\u4e2d\u89e3\u8131\u51fa\u6765\uff0c\u5e76\u5206\u6790\u5e74\u9f84\u6a21\u5f0f\u662f\u5982\u4f55\u968f\u7740\u65f6\u95f4\u548c\u51fa\u751f\u961f\u5217\u7684\u53d8\u5316\u800c\u53d8\u5316\u7684\u3002\u8fd9\u4e9b\u53d1\u73b0\u8bb0\u5f55\u4e86\u751f\u547d\u5468\u671f\u4e2d\u7684\u9a7c\u5cf0\u5f62\u8868\u73b0\u6982\u51b5\uff0c\u4ee5\u53ca\u4e0e\u961f\u5217\u6548\u5e94\u800c\u4e0d\u662f\u65f6\u671f\u6548\u5e94\u76f8\u5173\u7684\u5411\u5e74\u8f7b\u5e74\u9f84\u7684\u957f\u671f\u8f6c\u53d8\u3002\u8fd9\u79cd\u8f6c\u53d8\u53ef\u4ee5\u901a\u8fc7\u66f4\u591a\u7684\u7ecf\u9a8c\u6765\u5408\u7406\u5316\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0e\u6570\u5b57\u5316\u76f8\u5173\u7684\u6559\u80b2\u548c\u57f9\u8bad\u8bbe\u65bd\u53d8\u5316\u7684\u7ed3\u679c\u3002\n\u8001\u9f84\u5316\u662f\u8bb8\u591a\u56fd\u5bb6\u52b3\u52a8\u529b\u5e02\u573a\u9762\u4e34\u7684\u5173\u952e\u6311\u6218\u3002\u867d\u7136\u8d44\u672c\u6df1\u5316\u548c\u6559\u80b2\u6c34\u5e73\u7684\u63d0\u9ad8\u603b\u4f53\u4e0a\u503e\u5411\u4e8e\u63d0\u9ad8\u52b3\u52a8\u751f\u4ea7\u7387(1\uff0c2)\uff0c\u4f46\u7531\u4e8e\u6280\u672f\u53d8\u9769\u548c\u6570\u5b57\u5316\uff0c\u5de5\u4f5c\u73af\u5883\u8fc5\u901f\u53d8\u5316\uff0c\u8ba4\u77e5\u8981\u6c42\u9ad8\u7684\u4efb\u52a1\u53d8\u5f97\u66f4\u52a0\u666e\u904d\u548c\u91cd\u8981(3\u21d3-5)\u3002\u73b0\u6709\u7684\u8bc1\u636e\u8868\u660e\uff0c\u8ba4\u77e5\u6280\u80fd\u662f\u5728\u751f\u547d\u65e9\u671f\u5f62\u6210\u7684(6\uff0c7)\uff0c\u4f46\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5173\u4e8e\u4e2a\u4f53\u5728\u8ba4\u77e5\u8981\u6c42\u9ad8\u7684\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u5728\u751f\u547d\u5468\u671f\u4e2d\u5982\u4f55\u53d8\u5316\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u751f\u547d\u5468\u671f\u8868\u73b0\u6a21\u5f0f\u5728\u8fc7\u53bb\u4e00\u4e2a\u4e16\u7eaa\u91cc\u662f\u5982\u4f55\u53d8\u5316\u7684\uff0c\u4eba\u4eec\u77e5\u4e4b\u751a\u5c11\u3002\n\u6d4b\u91cf\u8ba4\u77e5\u8868\u73b0\u7684\u751f\u547d\u5468\u671f\u6a21\u5f0f\u53ca\u5176\u957f\u671f\u52a8\u6001\u7684\u4e3b\u8981\u56f0\u96be\u4e0e\u6784\u5efa\u53ef\u9760\u7684\u8868\u73b0\u6d4b\u91cf\u6709\u5173\uff0c\u8be5\u6d4b\u91cf\u5bf9\u4e8e\u4e0d\u540c\u961f\u5217\u7684\u4e2a\u4f53\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u5177\u6709\u53ef\u6bd4\u6027\uff0c\u5e76\u4e14\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5177\u6709\u53ef\u6bd4\u6027\u3002\u7ecf\u6d4e\u5b66\u4e2d\u7684\u7ecf\u9a8c\u6027\u5de5\u4f5c\u4f20\u7edf\u4e0a\u96c6\u4e2d\u5728\u4e2a\u4eba(8\uff0c9)\u3001\u56e2\u961f(10)\u6216\u516c\u53f8(11\uff0c12)\u5c42\u9762\u4e0a\u5173\u4e8e\u52b3\u52a8\u751f\u4ea7\u7387\u7684\u5de5\u4f5c\u76f8\u5173\u4fe1\u606f\u3002\u6765\u81ea\u8fd9\u7bc7\u6587\u732e\u7684\u8bc1\u636e\u8868\u660e\uff0c\u751f\u547d\u5468\u671f\u7684\u751f\u4ea7\u7387\u66f2\u7ebf\u662f\u9a7c\u5cf0\u72b6\u7684\uff0c\u5c3d\u7ba1\u5173\u4e8e\u8001\u5e74\u4eba\u751f\u4ea7\u7387\u4e0b\u964d\u7684\u8bc1\u636e\u76f8\u5f53\u590d\u6742\uff0c\u8fd9\u53ef\u80fd\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u80cc\u666f(13\u21d3-15)\u3002\u540c\u6837\uff0c\u57fa\u4e8e\u6c47\u603b\u6570\u636e\u7684\u7814\u7a76\u901a\u5e38\u53d1\u73b0\u9a7c\u5cf0\u72b6\u7684\u751f\u547d\u5468\u671f\u751f\u4ea7\u529b\u5256\u9762(16\u21d3-18)\u3002\u7136\u800c\uff0c\u4e0e\u5de5\u4f5c\u76f8\u5173\u7684\u751f\u4ea7\u529b\u6d4b\u91cf\u5bf9\u4e8e\u8861\u91cf\u8ba4\u77e5\u8981\u6c42\u9ad8\u7684\u4efb\u52a1\u7684\u8868\u73b0\u5e76\u4e0d\u7406\u60f3\uff0c\u800c\u4e14\u5728\u53ef\u6bd4\u6027\u3001\u6280\u672f\u5de5\u4f5c\u73af\u5883\u3001\u52b3\u52a8\u529b\u5e02\u573a\u5236\u5ea6\u548c\u9700\u6c42\u56e0\u7d20\u65b9\u9762\u90fd\u53d7\u5230\u9650\u5236\uff0c\u8fd9\u4e9b\u56e0\u7d20\u90fd\u8868\u73b0\u51fa\u968f\u65f6\u95f4\u548c\u8de8\u6280\u80fd\u7ec4\u7684\u53d8\u5316(1\uff0c19)\u3002\u8003\u8651\u5230\u6280\u80fd\u9700\u6c42\u53d8\u5316\u7684\u8c03\u67e5\u53d1\u73b0\uff0c\u6709\u8bc1\u636e\u8868\u660e\uff0c\u7ee9\u6548\u6f5c\u529b\u572835\u5c81\u81f344\u5c81(20\u5c81)\u5de6\u53f3\u8fbe\u5230\u5cf0\u503c\uff0c\u4f46\u4ec5\u9650\u4e8e\u8f83\u77ed\u7684\u89c2\u5bdf\u671f\uff0c\u8fd9\u963b\u788d\u4e86\u5bf9\u5e74\u9f84-\u7ee9\u6548\u66f2\u7ebf\u968f\u65f6\u95f4\u548c\u8de8\u961f\u5217\u7684\u52a8\u6001\u5206\u6790\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u4e0e\u5728\u5b58\u5728\u81ea\u6211\u9009\u62e9\u548c\u5de5\u4f5c\u76f8\u5173\u4efb\u52a1\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u8861\u91cf\u751f\u4ea7\u529b\u6216\u7ee9\u6548\u6709\u5173(21\uff0c22)\u3002\u5173\u4e8e\u79d1\u5b66\u521b\u9020\u529b\u7684\u76f8\u5173\u5de5\u4f5c\u8bb0\u5f55\u4e86\u7531\u4e8e\u6280\u672f\u53d8\u5316\uff0c\u751f\u547d\u5468\u671f\u7ee9\u6548\u968f\u65f6\u95f4\u53d1\u751f\u7684\u91cd\u5927\u53d8\u5316(23\uff0c24)\uff0c\u8fd9\u6392\u9664\u4e86\u5728\u8fd9\u4e00\u80cc\u666f\u4e0b\u5206\u6790\u5e74\u9f84-\u7ee9\u6548\u6982\u51b5\u7684\u957f\u671f\u6f14\u53d8(25)\u3002\n\u8ba4\u77e5\u5fc3\u7406\u5b66\u5df2\u6709\u7684\u5de5\u4f5c\u4ece\u4e0d\u540c\u7684\u7ef4\u5ea6\u6d4b\u91cf\u4e86\u8ba4\u77e5\u7ee9\u6548\u3002\u6a2a\u65ad\u9762\u7814\u7a76\u7684\u7ed3\u679c\u8868\u660e\uff0c\u5728\u4e3b\u8981\u4e0e\u4fe1\u606f\u5904\u7406\u4e2d\u7684\u901f\u5ea6\u3001\u8bb0\u5fc6\u3001\u89c6\u89c9\u5316\u6216\u63a8\u7406\u6709\u5173\u7684\u4efb\u52a1\u4e2d(\u4e0e\u6d41\u4f53\u667a\u529b\u6709\u5173)\u7684\u8868\u73b0\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u4e0b\u964d\uff0c\u800c\u5728\u4f9d\u8d56\u7ecf\u9a8c\u548c\u79ef\u7d2f\u7684\u77e5\u8bc6(\u4e0e\u7ed3\u6676\u667a\u529b\u6709\u5173)\u7684\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u76f4\u523050\u5c81\u621650\u5c81\u4ee5\u4e0a(26\u300127\u5c81)\u65f6\u624d\u4f1a\u589e\u52a0\u3002\u5bf9\u4e13\u5bb6\u7ee9\u6548\u7684\u7814\u7a76\u5f3a\u8c03\u4e86\u5b9e\u8df5\u7684\u4f5c\u7528(28)\uff0c\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660e\uff0c\u667a\u529b\u548c\u5b9e\u8df5\u5728\u51b3\u5b9a\u7ee9\u6548\u65b9\u9762\u76f8\u4e92\u4f5c\u7528(29)\uff0c\u4ece\u800c\u5171\u540c\u5f71\u54cd\u7ec8\u751f\u7ee9\u6548\u6982\u51b5(30\uff0c31)\u3002\u795e\u7ecf\u5b66\u8bc1\u636e\n\u4ee5\u524d\u5173\u4e8e\u56fd\u9645\u8c61\u68cb\u80cc\u666f\u4e0b\u8ba4\u77e5\u8868\u73b0\u53d8\u5316\u7684\u5de5\u4f5c\u8981\u4e48\u662f\u57fa\u4e8e\u5bf9\u4e0d\u540c\u5e74\u9f84\u548c\u529b\u91cf\u7684\u68cb\u624b\u8fdb\u884c\u7684\u6a2a\u622a\u9762\u884c\u4e3a\u5b9e\u9a8c\uff0c\u4fa7\u91cd\u4e8e\u51b3\u7b56\u901f\u5ea6\u548c\u5de5\u4f5c\u8bb0\u5fc6\u7684\u6d4b\u91cf(44)\uff0c\u8981\u4e48\u662f\u57fa\u4e8e\u4f7f\u7528\u8bc4\u7ea7\u4fe1\u606f\u4f5c\u4e3a\u4e1a\u4f59\u68cb\u624b\u5e74\u9f84\u548c\u7cbe\u795e\u8868\u73b0\u4e4b\u95f4\u5173\u7cfb\u8868\u73b0\u7684\u4ee3\u7406\u7684\u4e2a\u4eba\u4e4b\u95f4\u7684\u5dee\u5f02(29\uff0c30\uff0c43\uff0c45)\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8fd9\u91cc\u7684\u5206\u6790\u4f7f\u7528\u4e86\u957f\u65f6\u95f4\u548c\u591a\u4e2a\u961f\u5217\u7684\u4e2a\u4f53\u5185\u5dee\u5f02\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u79fb\u52a8\u8d28\u91cf\u7684\u53ef\u6bd4\u8f83\u548c\u5ba2\u89c2\u7684\u8861\u91cf\u6807\u51c6\u6765\u8861\u91cf\u8ba4\u77e5\u8868\u73b0\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728\u8f83\u957f\u7684\u65f6\u95f4\u8303\u56f4\u5185\u63a2\u7d22\u5e74\u9f84-\u8868\u73b0\u6982\u51b5\u7684\u52a8\u6001\u53d8\u5316\u3002\n\u4f30\u8ba1\u7ed3\u679c\u63ed\u793a\u4e86\u5173\u4e8e\u8fc7\u53bb125\u5e74\u8ba4\u77e5\u8868\u73b0\u7684\u751f\u547d\u5468\u671f\u5206\u5e03\u53ca\u5176\u52a8\u529b\u5b66\u7684\u51e0\u4e2a\u6d1e\u5bdf\u529b\u3002\u56fe1A\u663e\u793a\u4e86\u901a\u8fc7\u7ed8\u5236\u5e74\u9f84\u5206\u5e03\u7684\u975e\u53c2\u6570\u4f30\u8ba1\u7684\u7ed3\u679c\uff0c\u4f7f\u7528\u4e0d\u53d7\u989d\u5916\u63a7\u5236\u53d8\u91cf\u9650\u5236\u7684\u5c40\u90e8\u7ebf\u6027\u56de\u5f52\uff0c\u5e76\u4f7f\u7528\u4e16\u754c\u51a0\u519b\u53ca\u5176\u5bf9\u624b\u7684\u6c47\u96c6\u6837\u672c\u7684\u6570\u636e\uff0c\u663e\u793a\u4e86\u8868\u73b0\u7684\u751f\u547d\u5468\u671f\u6a21\u5f0f\u3002\u56fe1A\u663e\u793a\u4e86\u901a\u8fc7\u7ed8\u5236\u5e74\u9f84\u5206\u5e03\u7684\u975e\u53c2\u6570\u4f30\u8ba1\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4ee5\u989d\u5916\u7684\u63a7\u5236\u53d8\u91cf\u4e3a\u6761\u4ef6\u7684\u5c40\u90e8\u7ebf\u6027\u56de\u5f52\uff0c\u4ee5\u53ca\u4f7f\u7528\u4e16\u754c\u51a0\u519b\u53ca\u5176\u5bf9\u624b\u7684\u6c47\u96c6\u6837\u672c\u7684\u6570\u636e\u3002\u6027\u80fd\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u5448\u73b0\u51fa\u9a7c\u5cf0\u72b6\u7684\u6a21\u5f0f\u3002\u4e2a\u4eba\u8868\u73b0\u572820\u5c81\u51fa\u5934\u4e4b\u524d\u6025\u5267\u589e\u52a0\uff0c\u7136\u540e\u8fbe\u5230\u4e00\u4e2a\u5e73\u53f0\u671f\uff0c\u572835\u5c81\u5de6\u53f3\u8fbe\u5230\u5cf0\u503c\uff0c\u5728\u8f83\u9ad8\u5e74\u9f84\u65f6\u6301\u7eed\u4e0b\u964d\u3002\u65b0\u51fa\u73b0\u7684\u751f\u547d\u5468\u671f\u8868\u73b0\u6a21\u5f0f\u4e0e\u5148\u524d\u6587\u732e\u4e2d\u7684\u51e0\u4e2a\u53d1\u73b0\u76f8\u5bf9\u5e94\uff0c\u8fd9\u4e9b\u53d1\u73b0\u57fa\u4e8e\u4e2a\u4f53\u4e4b\u95f4\u7684\u5dee\u5f02\u6216\u4f7f\u7528\u4e0e\u5de5\u4f5c\u76f8\u5173\u7684\u8861\u91cf\u6807\u51c6\u6765\u4f30\u8ba1\u5e74\u9f84\u5206\u5e03\u3002\n\u4e3a\u4e86\u6392\u9664\u751f\u547d\u5468\u671f\u6027\u80fd\u6a21\u5f0f\u7684\u4f30\u8ba1\u662f\u7531\u7b2c\u4e09\u4e2a\u56e0\u7d20\u9a71\u52a8\u7684\uff0c\u6211\u4eec\u4f30\u8ba1\u4e86\u66f4\u4e30\u5bcc\u7684\u591a\u5143\u56de\u5f52\u6a21\u578b\u7684\u89c4\u683c\uff0c\u8be5\u6a21\u578b\u63a7\u5236\u4e86\u68cb\u5b50\u7684\u989c\u8272\u3001\u6e38\u620f\u4e2d\u6bcf\u4e2a\u73a9\u5bb6\u7684\u8d70\u52a8\u6b21\u6570(\u4ee5\u89e3\u51b3\u75b2\u52b3)\u3001\u6e38\u620f\u7279\u5b9a\u4e8e\u73a9\u5bb6\u7684\u5e73\u5747\u590d\u6742\u6027\uff0c\u4ee5\u53ca\u51fa\u751f\u961f\u5217\u3001\u65e5\u5386\u5468\u671f\u548c\u73a9\u5bb6\u5047\u4eba\u3002\u8fd9\u4e9b\u4f30\u8ba1\u5728\u9a7c\u5cf0\u5f62\u7684\u5e74\u9f84\u6a21\u5f0f\u65b9\u9762\u5f97\u51fa\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c\uff0c\u8868\u73b0\u5728\u5e74\u8f7b\u65f6\u63d0\u9ad8\uff0c\u5728\u8001\u5e74\u65f6\u4e0b\u964d\u3002\u56fe1B\u8bf4\u660e\u4e86\u7acb\u65b9\u5e74\u9f84\u89c4\u683c\u7684\u4f30\u8ba1\u5e74\u9f84\u5206\u5e03(\u4f30\u8ba1\u503c\u8f7d\u4e8eSI\u9644\u5f55\uff0c\u8868S1)\u3002\u4e0e\u524d\u4eba\u7684\u7814\u7a76\u7ed3\u679c\u76f8\u5e73\u884c\u7684\u662f\uff0c\u7528\u5e74\u9f84\u7acb\u65b9\u89c4\u8303\u548c\u4e00\u7ec4\u5e7f\u6cdb\u7684\u63a7\u5236\u53d8\u91cf\u5f97\u5230\u7684\u6027\u80fd\u5cf0\u503c\u572835\u5c81\u5de6\u53f3\uff0c\u968f\u540e\u7684\u4e0b\u964d\u5728\u591a\u53d8\u91cf\u56de\u5f52\u4e2d\u8981\u5c0f\u5f97\u591a\u3002\u5bf9\u4e8e\u5177\u6709\u5e74\u9f84\u4ed3\u7684\u89c4\u683c\u800c\u4e0d\u662f\u5e74\u9f84\u7684\u4e8c\u6b21\u578b\u89c4\u683c\uff0c\u4e5f\u83b7\u5f97\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c(SI\u9644\u5f55\uff0c\u56fe1)\u3002S1\u548c\u8868S1)\u3002\n\u8fd9\u4e9b\u7ed3\u679c\u6ca1\u6709\u8bf4\u660e\u68cb\u624b\u5728\u8fc7\u53bb125\u5e74\u91cc\u7684\u8868\u73b0\u53d8\u5316\u3002\u56fe2A\u4e2d\u63cf\u7ed8\u7684\u65e0\u6761\u4ef6\u4f30\u8ba1\u663e\u793a\uff0c\u51fa\u751f\u8f83\u665a\u7684\u961f\u5217\u7684\u5e73\u5747\u8868\u73b0\u8981\u9ad8\u5f97\u591a\u3002\u4e0e19\u4e16\u7eaa70\u5e74\u4ee3\u5de6\u53f3\u51fa\u751f\u7684\u7403\u5458\u76f8\u6bd4\uff0c70\u5e74\u4ee3\u540e\u51fa\u751f\u7684\u7403\u5458\u7684\u8868\u73b0\u63d0\u9ad8\u4e86\u5927\u7ea68\u4e2a\u767e\u5206\u70b9(\u4ece44%\u7684\u6700\u4f73\u8d70\u6cd5\u589e\u52a0\u5230\u5927\u7ea652%\u7684\u6700\u4f73\u8d70\u6cd5)\u3002\u5bf9\u4e8e\u8f83\u65b0\u51fa\u751f\u7684\u961f\u5217\uff0c\u5e74\u8f7b\u7684\u751f\u547d\u5468\u671f\u8868\u73b0\u7279\u5f81\u6bd4\u5e74\u9f84\u8f83\u5927\u7684\u961f\u5217\u589e\u957f\u5f97\u66f4\u5feb\u3002\u5728\u56fe2B\u4e2d\u53ef\u4ee5\u770b\u5230\u6309\u5386\u5e74\u5212\u5206\u7684\u6027\u80fd\u6a21\u5f0f\u7684\u7c7b\u4f3c\u52a0\u901f\u3002\u7ee9\u6548\u572820\u4e16\u7eaa\u671f\u95f4\u7a33\u6b65\u589e\u957f\uff0c\u4f46\u6570\u636e\u4e5f\u663e\u793a\uff0c\u572820\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u7ee9\u6548\u589e\u957f\u7684\u5e45\u5ea6\u66f4\u5927\u3002\u8fd9\u6070\u9022\u4e00\u4e2a\u9636\u6bb5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u65b0\u7684\u4fe1\u606f\u6280\u672f\u548c\u5bb6\u7528\u7535\u8111\u4e0a\u5f3a\u5927\u800c\u8d1f\u62c5\u5f97\u8d77\u7684\u56fd\u9645\u8c61\u68cb\u5f15\u64ce\u7684\u53ef\u7528\u6027\u4f7f\u5f97\u56fd\u9645\u8c61\u68cb\u7279\u5b9a\u7684\u77e5\u8bc6\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u6781\u5927\u5730\u6539\u53d8\u4e86\u68cb\u624b\u7684\u51c6\u5907\u53ef\u80fd\u6027\u3002\u8fd9\u4e9b\u65b0\u6280\u672f\u7684\u53ef\u7528\u53ef\u80fd\u901a\u8fc7\u63d0\u4f9b\u4ed6\u4eec\u5728\u804c\u4e1a\u751f\u6daf\u65e9\u671f\u83b7\u5f97\u66f4\u591a\u7ec3\u4e60\u7684\u53ef\u80fd\u6027\uff0c\u6539\u5584\u4e86\u6700\u8fd1\u961f\u5217\u4e2d\u7403\u5458\u7684\u8868\u73b0\uff0c\u4f46\u4e5f\u53ef\u80fd\u901a\u8fc7\u4e3a\u8f83\u8001\u961f\u5217\u7684\u7403\u5458\u63d0\u4f9b\u66f4\u597d\u7684\u8bad\u7ec3\u8bbe\u65bd\uff0c\u4f7f\u4ed6\u4eec\u540c\u6837\u53d7\u76ca\u3002\u5bf9\u4e8e\u4e16\u754c\u51a0\u519b\u548c\u5bf9\u624b\u6765\u8bf4\uff0c\u7ed3\u679c\u5728\u8d28\u91cf\u548c\u6570\u91cf\u4e0a\u90fd\u975e\u5e38\u76f8\u4f3c\uff0c\u4ed6\u4eec\u7684\u4eba\u5185\u5dee\u5f02\u8981\u5927\u5f97\u591a\uff0c\u8fd9\u8868\u660e\u5173\u4e8e\u5e74\u9f84\u5206\u5e03\u4ee5\u53ca\u8de8\u65f6\u95f4\u548c\u961f\u5217\u7684\u5dee\u5f02\u7684\u7814\u7a76\u7ed3\u679c\u5e76\u4e0d\u662f\u7531\u7279\u5b9a\u7684\u4e9a\u6837\u672c\u63a8\u52a8\u7684(SI\u9644\u5f55\uff0c\u56fe4)\u3002S2-S4)\u3002\n\u4e3a\u4e86\u5f04\u6e05\u8fd9\u4e9b\u52a8\u6001\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u5f71\u54cd\u5e74\u9f84-\u8868\u73b0\u66f2\u7ebf\uff0c\u56fe3\u7ed8\u5236\u4e86\u4e0d\u540c\u51fa\u751f\u961f\u5217\u548c\u65e5\u5386\u65f6\u671f\u7684\u5e74\u9f84\u66f2\u7ebf\u3002\u56fe3A\u4e2d\u7684\u51fa\u751f\u961f\u5217\u7684\u7ed3\u679c\u6a21\u5f0f\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u53d1\u73b0\uff0c\u5373\u8f83\u665a\u51fa\u751f\u7684\u961f\u5217\u7684\u8868\u73b0\u6709\u6240\u63d0\u9ad8\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u8f83\u65e9\u51fa\u751f\u7684\u961f\u5217\u5728\u6240\u6709\u5e74\u9f84\u7ec4\u4e2d\u7684\u589e\u957f\u76f8\u5f53\u4e00\u81f4\uff0c\u4f46\u8f83\u665a\u51fa\u751f\u7684\u961f\u5217\u5728\u8f83\u5e74\u8f7b\u7684\u5e74\u9f84\u7ec4\u4e2d\u8868\u73b0\u7684\u589e\u957f\u66f4\u4e3a\u660e\u663e\u3002\u5728\u6574\u4e2a\u5e74\u9f84\u6bb5\u5185\uff0c\u6027\u80fd\u7684\u63d0\u9ad8\u5e76\u4e0d\u76f8\u7b49\n\u62bd\u6837\u7684\u7ed3\u679c\u662f\uff0c\u62bd\u6837\u662f\u57fa\u4e8e\u4e16\u754c\u51a0\u519b\u4e00\u751f\u4e2d\u53c2\u52a0\u7684\u6240\u6709\u6bd4\u8d5b\uff0c\u4e16\u754c\u51a0\u519b\u7ec4\u5e94\u8be5\u6bd4\u5bf9\u624b\u7ec4\u8868\u73b0\u51fa\u66f4\u5c11\u7684\u9009\u62e9\u3002\u7136\u800c\uff0c\u5173\u4e8e\u5e74\u9f84-\u8868\u73b0\u6a21\u5f0f\u53ca\u5176\u5728\u961f\u5217\u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u800c\u4e0d\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4e24\u7ec4\u7684\u7ed3\u679c\u90fd\u662f\u786e\u51ff\u7684(SI\u9644\u5f55\uff0c\u56fe3)\u3002S2\u3001S8\u548cS9)\u3002\u4e3a\u4e86\u66f4\u8be6\u7ec6\u5730\u8c03\u67e5\u9009\u62e9\u5bf9\u4f7f\u7528\u57fa\u7ebf\u6837\u672c\u83b7\u5f97\u7684\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u4e16\u754c\u51a0\u519b\u7684\u5bf9\u624b\u8eab\u4e0a\uff0c\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff0c\u751f\u547d\u5468\u671f\u4e2d\u7684\u6027\u80fd\u4fe1\u606f\u66f4\u52a0\u7a00\u758f\uff0c\u5e76\u6536\u96c6\u4e86\u8fd9\u4e9b\u5bf9\u624b\u5728\u57fa\u7840\u6837\u672c\u4e2d\u8fdb\u884c\u7684\u6240\u6709\u6bd4\u8d5b\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u7684\u6570\u636e\u3002\u8fd9\u5141\u8bb8\u4f7f\u7528\u6765\u81ea\u66ff\u4ee3\u6837\u672c\u7684\u6570\u636e\u590d\u5236\u7ed3\u679c\uff0c\u5e76\u63a2\u7d22\u6b63\u9762\u9009\u62e9\u5728GAM\u4e2d\u7684\u4f5c\u7528\u3002\n.", "note_en": "Edited by Robert Moffit, John Hopkins University, Baltimore, MD, and accepted by Editorial Board Member Jose A. Scheinkman September 21, 2020 (received for review April 8, 2020)\n    Little is known about how the age pattern in individual performance in cognitively demanding tasks changed over the past century. The main difficulty for measuring such life cycle performance patterns and their dynamics over time is related to the construction of a reliable measure that is comparable across individuals and over time and not affected by changes in technology or other environmental factors. This study presents evidence for the dynamics of life cycle patterns of cognitive performance over the past 125 y based on an analysis of data from professional chess tournaments. Individual move-by-move performance in more than 24,000 games is evaluated relative to an objective benchmark that is based on the respective optimal move suggested by a chess engine. This provides a precise and comparable measurement of individual performance for the same individual at different ages over long periods of time, exploiting the advantage of a strictly comparable task and a comparison with an identical performance benchmark. Repeated observations for the same individuals allow disentangling age patterns from idiosyncratic variation and analyzing how age patterns change over time and across birth cohorts. The findings document a hump-shaped performance profile over the life cycle and a long-run shift in the profile toward younger ages that is associated with cohort effects rather than period effects. This shift can be rationalized by greater experience, which is potentially a consequence of changes in education and training facilities related to digitization.\n  Aging represents a key challenge for labor markets in many countries. While capital deepening and rising education levels tend to increase labor productivity on the aggregate ( 1,  2), the work environment changes rapidly with cognitively demanding tasks becoming more prevalent and important due to technological change and digitization ( 3  \u21d3\u2013 5). Existing evidence suggests that cognitive skills are formed early in life ( 6,  7), but surprisingly little is known about how individual performance in cognitively demanding tasks varies over the life cycle and about how these life cycle performance patterns have changed over the past century.\n The main difficulty of measuring life cycle patterns of cognitive performance and their long-run dynamics is related to the construction of a reliable performance measure that is comparable across the life cycle for individuals of different cohorts and over time. Empirical work in economics has traditionally focused on work-related information about labor productivity at the level of individuals ( 8,  9), at the team level ( 10), or at the firm level ( 11,  12). The evidence from this literature suggests that life cycle productivity profiles are hump shaped, although the evidence for a productivity decline at older ages is rather mixed, which might depend on the specific context ( 13  \u21d3\u2013 15). Likewise, studies based on aggregate data have typically found hump-shaped life cycle productivity profiles ( 16  \u21d3\u2013 18). Work-related measures of productivity are not ideal for measuring performance in cognitively demanding tasks, however, and are limited in terms of comparability, technological work environment, labor market institutions, and demand factors, which all exhibit variation over time and across skill groups ( 1,  19). Investigations that account for changes in skill demand have found evidence for a peak in performance potential around ages of 35 to 44 y ( 20) but are limited to short observation periods that prevent an analysis of the dynamics of the age\u2013performance profile over time and across cohorts. An additional problem is related to measuring productivity or performance in the presence of self-selection and variation in job-related tasks ( 21,  22). Related work on scientific creativity has documented substantial shifts in life cycle performance over time due to changes in technology ( 23,  24), which has precluded analyzing the long-run evolution of age\u2013performance profiles in this context ( 25).\n Existing work in cognitive psychology has measured cognitive performance in various dimensions. The results of cross-sectional studies have shown that performance in tasks that are primarily related to speed, memory, visualization, or reasoning in information processing (related to fluid intelligence) exhibits a decline with age, whereas performance in tasks that rely on experience and accumulated knowledge (related to crystallized intelligence) increases until age 50 or above ( 26,  27). Research on expert performance has emphasized the role of practice ( 28), and recent work has shown that intelligence and practice interact in determining performance ( 29), thereby jointly affecting lifetime performance profiles ( 30,  31). Neurological evidence suggests that learning and adaptability are related to biological changes over the life cycle ( 32,  33). However, measures of cognitive performance often involve abstract tasks that are unfamiliar to subjects and unrelated to their professional activity. Moreover, they are typically only available at one point in life (e.g., for military conscripts), which has prevented their use for studying age-related variability and period\u2013cohort decompositions ( 34). Due to the lack of direct measures of cognitive performance that exhibit within-person variation over a sufficiently large age spectrum and that are comparable across individuals and over time, longitudinal studies for cognitive performance profiles over the life span, in particular over long horizons, are missing.\n This paper develops an empirical strategy to estimate the age profile of performance in cognitively demanding tasks and its dynamics over the past 125 y, based on the performance of professionals in high-stakes environments related to their profession. Concretely, the empirical strategy is based on the analysis of data from professional chess tournaments involving world champions and their opponents. These data have several features that make them ideal for measuring age\u2013performance profiles and their long-run dynamics. First, chess has been used in psychology and neuroscience as a paradigmatic cognitive task that combines processes related to perception, memory, and problem solving ( 35,  36). Chess has a complex neural basis of automated processes related to identifying the configuration of pieces and their relations on the board, which involve circuits of different brain regions ( 37,  38). Mounting evidence from psychology suggests that becoming an expert in chess and other cognitively demanding tasks is not just related to higher innate cognitive abilities but also to training and the accumulation of experience ( 35,  39  \u21d3  \u21d3\u2013 42). The quality of a particular move thus reflects an ideal measure of performance in a demanding cognitive task of the sort that is gaining importance in the labor market. Second, chess data are of exceptionally high quality and allow for measuring individual performance with extreme accuracy, at the level of individual moves during a chess game. In particular, performance in chess can be measured against an objective benchmark, the move that a chess engine suggests as the best-possible move when facing the exact same decision problem. This allows for constructing a measure of performance by comparing actual individual moves with the optimal move for a given configuration. Third, the exact same benchmark can be applied to each configuration, and the benchmark does not change over time. In contrast to the use of ratings that change over time and with the performance of others ( 43), the use of move-level performance has the advantage of measuring performance in a fully comparable way across individuals and regardless of the temporal or environmental context. This implies that performance can be compared directly within individuals and across individuals, as well as over long periods of time, providing a unique possibility to investigate the consequences of technological change and digitization across cohorts and over time: for instance, in the context of the emergence of chess engines that changed education and preparation facilities. Fourth, the analysis of performance in a task that is observed repeatedly for the same individuals allows for decomposing age patterns based on within-individual variation from variation across different cohorts and over time. Fifth, in terms of external validity, performance estimates based on professional chess players are likely to constitute an upper bound of cognitive performance over the life cycle. The resulting measure thus provides a unique opportunity to isolate age\u2013performance patterns and analyze their dynamics over time and across cohorts.\n We use data from more than 24,000 chess games between 1890 and 2014 for the best players in the world, with more than 1.6 million move-by-move observations. The data are based on all games played by world champions in history throughout their entire lives and contain performance information for world champions and their respective opponents. The high stakes related to financial rewards and reputation rule out incentive problems. At the same time, the analysis delivers an estimate of the life cycle patterns of cognitive performance and its dynamics over time and across cohorts.\n The empirical strategy is based on the comparison of individual performance against an objective benchmark\u2014the optimal move for a given configuration suggested by a chess engine\u2014as a measure of cognitive performance that is fully comparable over long time ranges. Longitudinal data for the same individuals over the life cycle allow disentangling age patterns from cohort and period effects in a nonlinear specification. This enables an exploration of the long-run dynamics of the age\u2013performance profile across periods and cohorts. In particular, the analysis applies flexible panel regression models to estimate the age profile of cognitive performance and its changes across groups of birth cohorts and periods (  Materials and Methods).\n Previous work on the variation of cognitive performance in the context of chess either has been based on behavioral experiments with a cross-section of chess players of various ages and strength, focusing on measures of decision speed and working memory ( 44), or has been based on variation between individuals using rating information as a proxy for performance in the relation between age and mental performance among amateur chess players ( 29,  30,  43,  45). In contrast, the analysis here uses within-individual variation over a long range of time and many cohorts and measures cognitive performance using a comparable and objective measure based on move quality. This allows for exploring the dynamics of the age\u2013performance profile over a long time horizon.\n The estimation results reveal several insights about the life cycle profile of cognitive performance and its dynamics over the past 125 y.  Fig. 1 A shows the life cycle pattern of performance by plotting the results of nonparametric estimates of the age profile using a local linear regression without conditioning on additional control variables and using data for the pooled sample of world champions and their opponents. Performance reveals a hump-shaped pattern over the life cycle. Individual performance increases sharply until the early 20s and then reaches a plateau, with a peak around 35 y and a sustained decline at higher ages. The emerging life cycle performance pattern corresponds to several findings in the previous literature that have estimated the age profile on the basis of variation between individuals or using work-related measures.\n  To rule out that the estimate of the life cycle performance pattern is driven by third factors, we estimated richer specifications of a multivariate regression model that controls for the color of chess pieces, the number of moves per player in a game (to account for fatigue), and the player-specific average complexity of a game, as well as birth cohort, calendar period, and player dummies. These estimates deliver similar results in terms of a hump-shaped age pattern, with performance increasing during young ages and decreasing during older ages.  Fig. 1 B illustrates the estimated age profile for the cubic specification of age (estimates are presented in   SI Appendix, Table S1). Paralleling the previous findings, the performance peak obtained with a cubic specification for age and an extensive set of control variables is at an age of around 35 y. The subsequent decline is much less pronounced in the multivariate regressions. Similar results are obtained for a specification with age bins instead of a quadratic specification for age (  SI Appendix, Fig. S1 and Table S1).\n These results do not account for changes in the performance of chess players over the past 125 y. Unconditional estimates depicted in  Fig. 2 A show that the average performance was substantially higher for later-born birth cohorts. The increase in performance among players of the cohorts born after the 1970s compared with players born around the 1870s corresponds to approximately eight percentage points (from 44% optimal moves to approximately 52% optimal moves). For more recent birth cohorts, the life cycle performance profile has increased more rapidly at younger ages than for older cohorts. A similar acceleration is visible in  Fig. 2 B for performance patterns by calendar year. Performance increased steadily over the course of the twentieth century, but the data also reveal a steepening of the performance increase during the 1990s. This coincides with a phase when new information technology and the availability of powerful and affordable chess engines on home computers made chess-specific knowledge widely available and dramatically changed players\u2019 preparation possibilities. The availability of these new technologies may have improved the performance of players in more recent cohorts by providing them with the possibility to gain more practice early in their careers but might have equally benefited players of older cohorts by providing them with better training facilities. The results are qualitatively and quantitatively very similar for world champions, for whom there is considerably more within-person variation, and for opponents, suggesting that the findings regarding the age profile and the variation across time and cohorts are not driven by a particular subsample (  SI Appendix, Figs. S2\u2013S4).\n  In order to disentangle whether and how these dynamics affected the age\u2013performance profile,  Fig. 3 plots the age profile for different birth cohorts and calendar periods. The resulting pattern for birth cohorts in  Fig. 3 A confirms the finding that performance increased for later birth cohorts. However, while the increase was rather uniform across all age groups for the earlier-born cohorts, the increase in performance is more pronounced among younger ages for the later-born cohorts. Performance did not increase equally across the entire age spectrum, but younger cohorts experienced a faster increase early in life. The age profile for different calendar periods shown in  Fig. 3 B reveals that the increase in performance over time was associated with an upward shift of the entire age profile during more recent periods. Similar to the cohort patterns, the age gradient has become steeper, particularly for ages below 20. For the remaining age spectrum, performance increased fairly uniformly over time.\n  The unconditional estimates in  Fig. 3 do not account for systematic variation across players and games. To account for this, an extended version of the multivariate regression model with the same controls as before was estimated that also allows for systematic variation in the age profile for different birth cohorts and for different calendar periods. The corresponding estimates are visualized in  Fig. 4 (results for the specification with age groups are shown in   SI Appendix, Fig. S5). Similar to the unconditional estimates, the results reveal evidence for a hump-shaped age profile. The combined estimates for changes in performance across birth cohort bins and calendar period bins reveal that the age profile exhibits substantial variation across birth cohorts. In particular, for later-born cohorts, the performance profile is higher and the increase in performance is considerably steeper during younger ages. Considering calendar period, there is much less discernible variation in the levels of the age profile, although the age profile is mildly steeper at young ages in more recent periods. Taken together, this suggests that the age profile exhibits more variation across cohorts and that the unconditional results for variation across calendar periods may partly pick up this variation across cohorts.\n The finding of a hump-shaped pattern in cognitive performance is robust to alternative performance measures, model specifications, and time periods. Very similar results were obtained when using as a performance measure the average (logarithmic) distance between actual moves and best moves in terms of pawn units (  SI Appendix, Table S2). The results of the cubic specifications reveal a hump-shaped age pattern with a peak at an age of around 40 y for the specification with controls, which is comparable with the baseline results for the share of optimal moves as dependent variable. The results for the specification with age bins deliver a significant increase in performance with age for younger chess players below 35 y (  SI Appendix, Table S1). Performance decreases above the age of 45 y, although the decline is not statistically significant. Qualitatively similar results are obtained for the propensity to make important mistakes as a dependent variable. Here, the results reveal a u-shaped age pattern (  SI Appendix, Figs. S6 and S7), although older players do not appear to make more important mistakes (ref.  15 also has a similar finding).\n A possible concern about the external validity of these results is related to the sample of games played by chess world champions and their opponents and the potential problem of positive selection into a professional activity based on playing strength ( 21,  46,  47). Conceptually, positive selection of players into the sample would imply that measured cognitive performance and in particular, the performance beyond the peak age of 35 to 45 y constitute an upper bound when interpreting the implications of the results for the general population. In fact, there is little evidence for selection of top chess players on the basis of other factors than performance. Over the entire sample period, becoming a successful world class chess player was exclusively meritocratic, and it required no particular parental, cultural, geographic, or socioeconomic background and involved no restrictions by social class or birth ( 48). *\n As a consequence of the sampling, which is based on all games played by world champions throughout their lives, the group of world champions should exhibit less selection than the group of opponents. Nevertheless, the results about the age\u2013performance pattern and its shift across cohorts rather than over time are robustly found for both groups (  SI Appendix, Figs. S2, S8, and S9). To investigate the influence of selection on the results obtained with the baseline sample in more detail, we focus on the opponents of the world champions for whom the performance information over the life cycle is more sparse and collected data of all games played by these opponents in the base sample over their entire life. This allows replicating the results with data from an alternative sample and exploring the role of positive selection in gam\n......", "posttime": "2020-10-20 22:40:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,\u8868\u73b0,cycle", "title": "\u957f\u671f\u8ba4\u77e5\u8868\u73b0\u7684\u751f\u547d\u5468\u671f\u6a21\u5f0f", "title_en": "Life cycle patterns of cognitive performance over the long run", "transed": 1, "url": "https://www.pnas.org/content/early/2020/10/13/2006653117", "via": "", "real_tags": ["\u8ba4\u77e5", "\u8868\u73b0", "cycle"]}, {"category": "", "categoryclass": "", "imagename": "242d5b901db6d77ac11016a4df7fb453.jpg", "infoid": 1030049, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u73b0\u5728\u9762\u4e34\u7f8e\u56fd\u653f\u5e9c\u7684\u7b2c\u4e00\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc\uff0c\u53f8\u6cd5\u90e8\u5ba3\u5e03\u6253\u7b97\u5bf9\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u63d0\u8d77\u8bc9\u8bbc\u3002\n\u8c37\u6b4c\u7684\u641c\u7d22\u548c\u5e7f\u544a\u4e1a\u52a1\u5df2\u6210\u4e3a\u53cd\u5784\u65ad\u76d1\u7ba1\u673a\u6784\u611f\u5174\u8da3\u7684\u5173\u952e\u9886\u57df\u3002\n\u5468\u4e8c\uff0c\u7f8e\u56fd\u53f8\u6cd5\u90e8\u5bf9\u8c37\u6b4c\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc\uff0c\u91cd\u70b9\u5173\u6ce8\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u5728\u5728\u7ebf\u641c\u7d22\u9886\u57df\u7684\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u6839\u636e\u5468\u4e8c\u4e0a\u5348\u63d0\u4ea4\u7684\u4e00\u4efd\u516c\u5f00\u7684\u6848\u4ef6\u6458\u8981\uff0c11\u540d\u5171\u548c\u515a\u5dde\u603b\u68c0\u5bdf\u957f\u5df2\u52a0\u5165\u53f8\u6cd5\u90e8\uff0c\u6210\u4e3a\u8be5\u6848\u7684\u539f\u544a\uff1a\u963f\u80af\u8272\u5dde\u3001\u4f5b\u7f57\u91cc\u8fbe\u5dde\u3001\u4f50\u6cbb\u4e9a\u5dde\u3001\u5370\u7b2c\u5b89\u7eb3\u5dde\u3001\u80af\u5854\u57fa\u5dde\u3001\u8def\u6613\u65af\u5b89\u90a3\u5dde\u3001\u5bc6\u897f\u897f\u6bd4\u5dde\u3001\u5bc6\u82cf\u91cc\u5dde\u3001\u8499\u5927\u62ff\u5dde\u3001\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u548c\u5fb7\u514b\u8428\u65af\u5dde\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u7684\u6d88\u606f\u4f20\u51fa\u540e\uff0c\u8c37\u6b4c\u7684\u80a1\u4ef7\u51e0\u4e4e\u6ca1\u6709\u53d8\u52a8\u3002\u622a\u81f3\u5468\u4e8c\u4e0a\u5348\uff0c\u80a1\u4ef7\u5c0f\u5e45\u4e0a\u6da8\u3002\n\u8bc9\u8bbc\u79f0\uff0c\u7f8e\u56fd\u53f8\u6cd5\u90e8\u548c\u5404\u5dde\u6b63\u5728\u6839\u636e\u201c\u8c22\u5c14\u66fc\u6cd5\u201d(Sherman Act)\u7b2c2\u6761\u63d0\u8d77\u8bc9\u8bbc\uff0c\u6307\u63a7\u8c37\u6b4c\u5728\u901a\u7528\u641c\u7d22\u670d\u52a1\u3001\u641c\u7d22\u5e7f\u544a\u548c\u901a\u7528\u641c\u7d22\u6587\u672c\u5e7f\u544a\u5e02\u573a\u4e0a\u975e\u6cd5\u7ef4\u6301\u5784\u65ad\u3002\u4ed6\u4eec\u58f0\u79f0\u8c37\u6b4c\u901a\u8fc7\u53cd\u7ade\u4e89\u548c\u6392\u4ed6\u6027\u505a\u6cd5\u7ef4\u6301\u4e86\u5176\u5784\u65ad\u5730\u4f4d\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u662f\u5bf9\u8be5\u516c\u53f8\u957f\u8fbe\u4e00\u5e74\u591a\u7684\u5546\u4e1a\u884c\u4e3a\u8c03\u67e5\u7684\u7ed3\u679c\u3002\u8c37\u6b4c\u6b64\u524d\u66fe\u662f\u7f8e\u56fd\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a(Federal Trade Commission)\u5c31\u5176\u641c\u7d22\u4ea7\u54c1\u8fdb\u884c\u7684\u53cd\u5784\u65ad\u8c03\u67e5\u7684\u5bf9\u8c61\uff0c\u4f46\u8be5\u673a\u6784\u4e8e2013\u5e74\u5728\u6ca1\u6709\u6307\u63a7\u7684\u60c5\u51b5\u4e0b\u7ed3\u675f\u4e86\u8fd9\u9879\u8c03\u67e5\u3002\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b(The Wall Street Journal)\u540e\u6765\u516c\u5e03\u7684\u4e00\u4efd\u6cc4\u9732\u7684\u6587\u4ef6\u663e\u793a\uff0c\u5de5\u4f5c\u4eba\u5458\u57fa\u4e8e\u51e0\u4e2a\u7406\u7531\u5efa\u8bae\u63d0\u8d77\u8bc9\u8bbc\u3002\n\u7f8e\u56fd\u53f8\u6cd5\u90e8\u7684\u8bc9\u8bbc\u6807\u5fd7\u7740\u8c37\u6b4c\u9996\u6b21\u5728\u672c\u56fd\u8054\u90a6\u5c42\u9762\u53d7\u5230\u4e25\u91cd\u7684\u53cd\u5784\u65ad\u6307\u63a7\u3002\u9664\u963f\u62c9\u5df4\u9a6c\u5dde\u5916\uff0c\u6bcf\u4e2a\u5dde\u7684\u603b\u68c0\u5bdf\u957f\u4e5f\u4e00\u76f4\u5728\u8c03\u67e5\u8c37\u6b4c\u7684\u505a\u6cd5\u3002\u52a0\u5dde\u603b\u68c0\u5bdf\u957f\u5c1a\u672a\u8bc1\u5b9e\u5176\u8c03\u67e5\uff0c\u4f46Politico\u4e0a\u4e2a\u6708\u62a5\u9053\u79f0\uff0c\u8be5\u5dde\u5df2\u542f\u52a8\u81ea\u5df1\u7684\u8c03\u67e5\uff0c\u72ec\u7acb\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u9886\u5bfc\u7684\u591a\u4e2a\u5dde\u7684\u52aa\u529b\u3002\n\u5728\u661f\u671f\u4e8c\u4e0e\u8bb0\u8005\u7684\u901a\u8bdd\u4e2d\uff0c\u7f8e\u56fd\u53f8\u6cd5\u90e8\u5b98\u5458\u8bf4\uff0c\u4ed6\u4eec\u7ee7\u7eed\u4e0e\u6700\u521d\u6ca1\u6709\u52a0\u5165\u8bc9\u8bbc\u7684\u5dde\u4fdd\u6301\u6c9f\u901a\u6e20\u9053\u7545\u901a\uff0c\u5e76\u8868\u793a\u8fd9\u4e9b\u6267\u6cd5\u8005\u5bf9\u8bc9\u8bbc\u4e2d\u7684\u95ee\u9898\u8868\u793a\u4e86\u5e7f\u6cdb\u652f\u6301\u3002\n\u8c37\u6b4c\u53d1\u8a00\u4eba\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u53f8\u6cd5\u90e8\u4eca\u5929\u63d0\u8d77\u7684\u8bc9\u8bbc\u5b58\u5728\u4e25\u91cd\u7f3a\u9677\u3002\u4eba\u4eec\u4f7f\u7528\u8c37\u6b4c\u662f\u56e0\u4e3a\u4ed6\u4eec\u9009\u62e9\u4e86--\u800c\u4e0d\u662f\u56e0\u4e3a\u4ed6\u4eec\u662f\u88ab\u8feb\u8fd9\u6837\u505a\u7684\uff0c\u4e5f\u4e0d\u662f\u56e0\u4e3a\u4ed6\u4eec\u627e\u4e0d\u5230\u5176\u4ed6\u9009\u62e9\u3002\u6211\u4eec\u4eca\u5929\u4e0a\u5348\u4f1a\u6709\u4e00\u4efd\u66f4\u5168\u9762\u7684\u58f0\u660e\u3002\n\u5728\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\uff0c\u53f8\u6cd5\u90e8\u526f\u53f8\u6cd5\u90e8\u957f\u6770\u5f17\u91cc\u00b7\u7f57\u68ee(Jeffrey Rosen)\u8868\u793a\uff0c\u5728\u8be5\u673a\u67842019\u5e74\u5f00\u59cb\u7684\u6570\u5b57\u5e73\u53f0\u5ba1\u67e5\u4e2d\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u6807\u5fd7\u7740\u4e00\u4e2a\u91cc\u7a0b\u7891\uff0c\u4f46\u4e0d\u662f\u4e00\u4e2a\u505c\u6b62\u70b9\u3002\u4ed6\u8868\u793a\uff0c\u8be5\u90e8\u95e8\u5c06\u7ee7\u7eed\u8c03\u67e5\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u4e92\u8054\u7f51\u5e73\u53f0\u662f\u5426\u5b58\u5728\u6f5c\u5728\u7684\u4e0d\u5f53\u884c\u4e3a\u3002", "note_en": "Google now faces its first antitrust lawsuit by the U.S. government as the Department of Justice announced its intent to press charges against the tech giant.\n  Google&#39;s search and advertising businesses had emerged as key areas of interest for antitrust regulators.\n The Department of Justice filed its antitrust  lawsuit against  Google Tuesday, focusing on the tech giant&#39;s dominance in online search.\n Eleven Republican state attorneys general have joined the DOJ as plaintiffs in the case: Arkansas, Florida, Georgia, Indiana, Kentucky, Louisiana, Mississippi, Missouri, Montana, South Carolina and Texas, according to an open docket of the case filed Tuesday morning.\n  Google&#39;s stock barely moved following news of the suit. Shares were slightly positive as of Tuesday morning.\n The DOJ and states are bringing the complaint under Section 2 of the Sherman Act, alleging Google has unlawfully maintained monopolies in markets for &#34;general search services, search advertising, and general search text advertising,&#34; according to the lawsuit. They claim Google has maintained its monopoly through &#34;anticompetitive and exclusionary practices.&#34;\n The lawsuit is the culmination of a more than year-long investigation into the company&#39;s business practices. Google was previously the subject of a U.S. antitrust investigation by the Federal Trade Commission over its search product, but the agency  closed that probe in 2013 without charges. A leaked document published by  The Wall Street Journal later showed staff had recommended bringing a case on several grounds.\n The DOJ lawsuit marks the first time a serious antitrust charge has been brought against Google on the federal level in its home country. Attorneys general from every state besides Alabama have also been probing Google&#39;s practices. California&#39;s attorney general has not confirmed its investigation, but  Politico reported last month that the state had opened its own probe separate from the multistate effort led by Texas.\n On a call with reporters Tuesday, DOJ officials said they continue to keep lines of communication open to states that had not initially joined the suit and said that those enforcers expressed broad support for the issues in the suit.\n  &#34;Today&#39;s lawsuit by the Department of Justice is deeply flawed,&#34; a Google spokesperson said in a statement. &#34;People use Google because they choose to -- not because they&#39;re forced to or because they can&#39;t find alternatives. We will have a fuller statement this morning.&#34;\n On the press call, DOJ Deputy Attorney General Jeffrey Rosen said the suit marked &#34;a milestone but not a stopping point&#34; in the agency&#39;s review of digital platforms that began in 2019. He said the department would continue to look into dominant internet platforms for potential misconduct.", "posttime": "2020-10-20 22:40:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u8c37\u6b4c,google,rust,justice", "title": "\u7f8e\u56fd\u53f8\u6cd5\u90e8\u5c06\u5bf9\u8c37\u6b4c\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc", "title_en": "US Department of Justice to file antitrust lawsuit against Google", "transed": 1, "url": "https://www.cnbc.com/2020/10/20/doj-antitrust-lawsuit-against-google.html", "via": "", "real_tags": ["\u7f8e\u56fd", "\u8c37\u6b4c", "google", "rust", "justice"]}, {"category": "", "categoryclass": "", "imagename": "c57d46dd414914f73e3202f1582a4a5a.jpeg", "infoid": 1030048, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6f2b\u957f\u7684\u8c03\u67e5\u4e4b\u540e\uff0c\u79d1\u6280\u8bc9\u8bbc\u5bfb\u6c42\u6253\u7834\u516c\u53f8\u5bf9\u641c\u7d22\u6d41\u91cf\u7684\u63a7\u5236\u3002\n\u5468\u4e8c\uff0c\u53f8\u6cd5\u90e8\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc\uff0c\u6307\u63a7\u8c37\u6b4c\u5728\u641c\u7d22\u548c\u641c\u7d22\u5e7f\u544a\u9886\u57df\u4ece\u4e8b\u53cd\u7ade\u4e89\u884c\u4e3a\uff0c\u4ee5\u7ef4\u62a4\u5784\u65ad\u5730\u4f4d\u3002\u641c\u7d22\u548c\u641c\u7d22\u5e7f\u544a\u662f\u8c37\u6b4c\u5e9e\u5927\u4f01\u4e1a\u96c6\u56e2\u7684\u57fa\u77f3\u3002\n\u8fd9\u8d77\u671f\u5f85\u5df2\u4e45\u7684\u6848\u4ef6\u63d0\u4ea4\u7ed9\u534e\u76db\u987f\u7279\u533a\u7684\u4e00\u5bb6\u8054\u90a6\u6cd5\u9662\uff0c\u6807\u5fd7\u7740\u7f8e\u56fd20\u591a\u5e74\u6765\u5bf9\u4e00\u5bb6\u516c\u53f8\u5728\u79d1\u6280\u884c\u4e1a\u7684\u4e3b\u5bfc\u5730\u4f4d\u63d0\u51fa\u7684\u6700\u6fc0\u8fdb\u7684\u6cd5\u5f8b\u6311\u6218\uff0c\u6709\u53ef\u80fd\u64bc\u52a8\u7845\u8c37\u4e43\u81f3\u66f4\u8fdc\u7684\u5730\u65b9\u3002\u8c37\u6b4c\u66fe\u7ecf\u662f\u516c\u4f17\u7684\u5ba0\u513f\uff0c\u4f46\u5b83\u5438\u5f15\u4e86\u76f8\u5f53\u591a\u7684\u5173\u6ce8\u2026\u2026", "note_en": "Tech     Lawsuit follows lengthy investigation and seeks to break company\u2019s grip over search traffic\n   The Justice Department filed an antitrust lawsuit Tuesday alleging that Google engaged in anticompetitive conduct to preserve monopolies in search and search advertising that form the cornerstones of its vast conglomerate.\n  The long-anticipated case, filed in a Washington, D.C., federal court, marks the most aggressive U.S. legal challenge to a company\u2019s dominance in the tech sector in more than two decades, with the potential to shake up Silicon Valley and beyond. Once a public darling, Google attracted considerable scrutiny...", "posttime": "2020-10-20 22:40:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,rust,department,\u641c\u7d22", "title": "\u53f8\u6cd5\u90e8\u5c06\u5bf9\u8c37\u6b4c\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc", "title_en": "Justice Department to File Antitrust Suit Against Google", "transed": 1, "url": "https://www.wsj.com/articles/justice-department-to-file-long-awaited-antitrust-suit-against-google-11603195203", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "rust", "\u641c\u7d22"]}]
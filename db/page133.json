[{"category": "", "categoryclass": "", "imagename": "22c5234eea20fc4caa13187851de03ad.jpg", "infoid": 1068503, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e9b\u751f\u7269\u51b2\u51fb\u8005\u8ba1\u5212\u514d\u8d39\u8d60\u9001\u5982\u4f55\u514d\u8d39\u5236\u4f5c\u80f0\u5c9b\u7d20\u7684\u6307\u793a\u3002 ", "note_en": "These biohackers plan to give away their instructions for how to make insulin for free.", "posttime": "2021-06-29 22:59:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51b2\u51fb,aim,\u514d\u8d39", "title": "\u751f\u7269\u51b2\u51fb\u8005\u7784\u51c6\u5927\u578b\u5236\u836f\u7684\u8840\u7f18\u83cc\u7d20\u80f0\u5c9b\u7d20 ", "title_en": "Biohackers take aim at big pharma\u2019s stranglehold on insulin", "transed": 1, "url": "https://www.freethink.com/shows/just-might-work/how-to-make-insulin", "via": "", "real_tags": ["\u51b2\u51fb", "aim", "\u514d\u8d39"]}, {"category": "", "categoryclass": "", "imagename": "1cdb23c6ae6f962ae669af6b1e38af29.jpg", "infoid": 1068502, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "r\u5e38\u5e38\u5f88\u6df1\uff0c\u4f46\u6700\u4ee4\u4eba\u6cae\u4e27\u7684\u4e8b\u60c5\u4e4b\u4e00\u662f\u5b83\u771f\u6b63\u7684\u6001\u5ea6\u3002\u5728\u4e16\u754c\u7684\u5927\u591a\u6570\u5730\u533a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u9ed1\u767d\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u4eba\u7684\u80a4\u8272\u5177\u6709\u5f88\u5c11\u7684\u751f\u7269\u5b66\u610f\u4e49\u3002\u5b83\u4ec5\u4ec5\u662f\u634d\u536b\u764c\u75c7\u7684\u7d2b\u5916\u7ebf\uff08\u6697\u6591\u7684\u7d2b\u5916\u7ebf\uff09\u548c\u4fc3\u8fdb\u7d2b\u5916\u7ebf\u5728\u5408\u6210\u7ef4\u751f\u7d20D\uff08\u6d45\u8272\u76ae\u80a4\uff09\u4e2d\u7684\u6709\u76ca\u4f5c\u7528\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u8d8a\u522b\u4eba\u7684\u7956\u5148\u751f\u6d3b\u5728\u8d64\u9053\u4e2d\uff0c\u76ae\u80a4\u82cd\u767d\u7684\u82cd\u767d\u53d1\u5c55\u6210\u4e3a\u3002\n  \u5c3d\u7ba1\u5982\u6b64\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5728\u975e\u6d32\u751f\u6d3b\u5728\u975e\u6d32\u7684\u7956\u5148\uff0c\u90a3\u91cc\u7684\u5927\u9646\u624d\u8ffd\u6c42\u3002\u4eca\u5929\u5927\u591a\u6570\u975e\u975e\u6d32\u4eba\u90fd\u6d3b\u7740\u8ffd\u8e2a\u4ed6\u4eec\u5bf9\u5927\u7ea660\u4e07\u5e74\u524d\u6beb\u65e0\u51c6\u5907\u7684\u4e16\u754c\u95ef\u5165\u7684\u975e\u6d32\u4eba\u7684\u5927\u90e8\u5206\u7956\u5148\u3002\u5b9e\u9645\u4e0a\uff0c\u82f1\u56fd\u53d1\u73b0\u7684\u7269\u79cd\u6700\u53e4\u8001\u7684\u4ee3\u8868\u4fdd\u7559\u4e86\u4ed6\u975e\u6d32\u7956\u5148\u7684\u9ed1\u76ae\u80a4\u3002\u975e\u6d32\u662f\u4eba\u7c7b\u957f\u5927\u7684\u5730\u65b9 - \u5728\u8fd9\u4e00\u5929\u53d1\u73b0\u4eba\u7c7b\u9057\u4f20\u591a\u6837\u6027\u7684\u5927\u90e8\u5206\u3002\n \u521a\u521a\u5f00\u59cb\u63a2\u7d22\u975e\u6d32\u9057\u4f20\u4e30\u5bcc\u6027\u7684\u4e25\u91cd\u52aa\u529b\u3002\u8fdf\u5230\u603b\u6bd4\u4e0d\u5230\u597d\u3002\u4e09\u767e\u4e07\u975e\u6d32\u57fa\u56e0\u7ec4\uff083\uff09\u9879\u76ee\uff0c\u4e00\u4e2a\u5927\u9646\u7684\u52aa\u529b\uff0c\u5efa\u8bae\u4e3a\u8be5\u5730\u65b9\u4e3a\u6b27\u6d32\uff0c\u5317\u7f8e\u548c\u4e9a\u6d32\u90e8\u4f4d\u505a\u4e9b\u4ec0\u4e48\uff0c\u5373\u76ee\u5f55\u5e76\u5206\u6790\u4f4f\u5728\u90a3\u91cc\u7684\u4eba\u7684\u9057\u4f20\u591a\u6837\u6027\u3002\u8fd9\u5c06\u662f\u79d1\u5b66\u4e0a\u7684\u8ff7\u4eba\uff0c\u56e0\u4e3a\u5b83\u5c06\u6709\u52a9\u4e8e\u9610\u660eH. Sapiens\u7684\u53d1\u5c55\u65b9\u5f0f\u3002\u4f46\u5b83\u4e5f\u5c06\u662f\u533b\u5b66\u4e0a\u7684\u91cd\u8981\u6027\u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u5e2e\u52a9\u4fb5\u8680\u90a3\u79cd\u79cd\u65cf\u4e3b\u4e49\u7684\u9ed1\u767d\u501f\u53e3\u3002\n  \u9057\u4f20\u591a\u6837\u6027\u5e26\u6765\u4e86\u9057\u4f20\u75be\u75c5\u7684\u591a\u6837\u6027\u3002\u56ca\u6027\u7ea4\u7ef4\u5316 - \u5728\u975e\u6d32\u7684\u4efb\u4f55\u6848\u4f8b\u4e2d\u6bd4\u6b27\u6d32\u7684\u4efb\u4f55\u6848\u4f8b - \u901a\u5e38\u7531\u6765\u81ea\u6b27\u6d32\u7248\u672c\u7684\u6d89\u53ca\u7684\u4e0d\u540c\u7a81\u53d8\u9020\u6210\u7684\uff0c\u56e0\u6b64\u7531\u897f\u65b9\u5f00\u53d1\u7684\u6d4b\u8bd5\u9519\u5931\u3002\u5728\u5357\u975e\u5360\u9057\u4f20\u5931\u4f24\u7684\u52a0\u7eb3\u8d1f\u8d23\u7684\u7a81\u53d8\u662f\u672a\u77e5\u7684\u3002\u7b49\u7b49\u3002\u5b83\u8fd8\u4e3a\u75be\u75c5\u5e26\u6765\u4e86\u591a\u6837\u6027\u7684\u9057\u4f20\u53cd\u5e94\u3002\u514d\u75ab\u7cfb\u7edf\u7684\u4e00\u4e9b\u5206\u5b50\u7ec6\u8282\uff0c\u4f8b\u5982\uff0c\u5730\u7406\u5b66\u3002\u4e86\u89e3\u975e\u6d32\u7684\u53d8\u5f02\u5c06\u6539\u5584\u5bf9\u611f\u67d3\u7684\u514d\u75ab\u529b\u7684\u7406\u89e3\uff0c\u5e2e\u52a9\u975e\u6d32\u4eba\u548c\u975e\u6d32\u4eba\u3002\n  \u66f4\u591a\u7684\u9057\u4f20\u4fe1\u606f\u4e5f\u5c06\u5728\u8fdb\u5316\u4e0a\u6295\u5c04\u5149\u7ebf\u3002\u4ece\u975e\u6d32\u7684\u65e9\u671fH. Sapiens\u79fb\u6c11\u9047\u5230\u4e86\u5176\u4ed6\u4eba\u7c7b\u7684\u65c5\u884c\u3002\u8fd9\u4e9b\u662f\u672c\u4e16\u7eaa\u53e4\u4ee3\u6210\u5458\u7684\u975e\u6d32\u8fc1\u79fb\u7684\u540e\u4ee3\u3002\u8fd9\u4e9b\u5176\u4ed6\u7c7b\u578b\u7684\u4eba\u7c7b\uff0c\u5c3c\u5b89\u5fb7\u7279\u4eba\u548cDeNisovans\u4e2d\u7684\u81f3\u5c11\u6709\u4e24\u4e2a\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u4e9a\u6d32\u4eba\u548c\u4e00\u4e9b\u57fa\u56e0\u4ecd\u7136\u5b58\u5728\u4e8e\u73b0\u4ee3\u4e9a\u6d32\u4eba\u548c\u6b27\u6d32\u4eba\u4e2d\uff0c\u505a\u5404\u79cd\u5de5\u4f5c\uff0c\u5305\u62ec\u4fdd\u62a4\u5b83\u4eec\u514d\u53d7\u75be\u75c5\u3002\u521d\u6b65\u5206\u6790\u8868\u660e\uff0c\u90a3\u4e9b\u7559\u5728\u975e\u6d32\u80cc\u540e\u7684\u4eba\u540c\u6837\u5730\u6d89\u53ca\u53c8\u4e00\u4e2a\u4eba\u7c7b\u7684\u4eba\u7c7b - \u4f46\u5176\u4e2d\u4e00\u4e2a\u6ca1\u6709\u5316\u77f3\u8bb0\u5f55\u4ecd\u7136\u5b58\u5728\u3002\n \u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u8bbd\u523a\u610f\u5473\u3002\u53ea\u8981\u4eba\u4eec\u6240\u62e5\u6709\uff0c\u4ec7\u5916\u53ef\u80fd\u5b58\u5728\u4ec7\u5916\u5fc3\u7406\u3002\u4f46\u79cd\u65cf\u4e3b\u4e49\u6001\u5ea6\u572819\u4e16\u7eaa\u5f97\u5230\u4e86\u5bf9\u7269\u7406\u4eba\u7c7b\u5b66\u548c\u4f18\u73cd\u7684\u70ed\u60c5\u7684\u70ed\u60c5\u3002\u524d\u8005\u8bd5\u56fe\u6839\u636e\u9057\u4f20\u7ee7\u627f\u7684\u53ef\u89c1\u7279\u5f81\uff0c\u5982\u80a4\u8272\uff0c\u5934\u90e8\u5f62\u72b6\u548c\u9762\u90e8\u7279\u5f81\u7b49\u53ef\u89c1\u7279\u5f81\u5bf9\u4eba\u7c7b\u8fdb\u884c\u5206\u7c7b\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u4e2d\u7acb\u7684\u5206\u6790\uff0c\u90a3\u5c06\u662f\u4e0d\u660e\u7684\u3002\u4f46\u5f80\u5f80\u4e0d\u662f\u4e2d\u7acb\u7684\u3002\u5b83\u4e0d\u4ec5\u88ab\u5f52\u7c7b\uff0c\u4f46\u6392\u540d\u3002\u767d\u76ae\u80a4\u6b27\u6d32\u4eba\u5c06\u81ea\u5df1\u653e\u5728\u5e95\u90e8\u7684\u9876\u7ea7\u548c\u9ed1\u8272\u76ae\u80a4\u7684\u975e\u6d32\u4eba\u3002\u5c06\u4f18\u5316\u5b66\u6dfb\u52a0\u5230\u8be5\u6df7\u5408\u4e2d\uff0c\u7ed3\u679c\u662f\u6709\u6bd2\u7684\u3002\n 3\u4e2a\u9879\u76ee\u4e0d\u4f1a\u5355\u72ec\u63a8\u7ffb\u8fd9\u4e9b\u8bef\u89e3\u7684\u9057\u4ea7\uff0c\u4ee5\u53ca\u4ed6\u4eec\u52a0\u5f3a\u7684\u504f\u89c1\u3002\u8ba9\u4ed6\u4eec\u5174\u8d77\u7684\u601d\u60f3\u4ecd\u7136\u592a\u591a\u7684\u601d\u60f3\u4ecd\u7136\u975e\u5e38\u6839\u6df1\u8482\u56fa\uff0c\u56e0\u4e3a\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u5b83\u6765\u63a5\u8fd1\u5b83\u3002\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u601d\u60f3\u5f00\u653e\u7684\u4eba\u6765\u8bf4\uff0c\u4e00\u7fa421\u4e16\u7eaa\u7684\u975e\u6d32\u79d1\u5b66\u5bb6\u63ed\u793a\u4e86\u4eba\u7c7b\u7684\u771f\u5b9e\uff0c\u5149\u8363\u7684\u9057\u4f20\u591a\u6837\u6027\u6bd4\u4efb\u4f55\u5176\u4ed6\u4eba\u5728\u81ea\u5df1\u7684\u5927\u9646\u4e0a\u90fd\u662f\u4e00\u4e2a\u8bef\u5bfc\u7ef4\u591a\u5229\u4e9a\u4eba\u8bef\u5bfc\u7684\u5353\u8d8a\u7684\u53cd\u9a73\u6b27\u6d32\u5148\u751f\u3002 \u25a0 \n\u672c\u6587\u51fa\u73b0\u5728\u6807\u9898\u548c\uff0334\u4e0b\u6253\u5370\u7248\u7684\u9886\u5bfc\u90e8\u5206;\u77e5\u9053Thyself\uff06\uff0334; ", "note_en": "R  often run deep, but one of the most depressing things about it is how superficial it really is. In most parts of the world it is literally a matter of black and white. A person\u2019s skin colour, however, has little biological significance. It is merely a balance between defending the lower layers of the dermis from cancer-causing ultraviolet light (which favours dark skin) and promoting the beneficial role of ultraviolet in the synthesis of vitamin D (which favours light skin). The farther someone\u2019s ancestors lived from the equator, the paler their skin evolved to be.\n  Go back far enough, though, and everyone\u2019s ancestors lived in Africa, the continent where  Homo sapiens originated. Most non-Africans alive today trace the bulk of their ancestry to Africans who burst forth on an unprepared world about 60,000 years ago. Indeed, the oldest representative of the species yet found in Britain retained the dark skin of his African forebears. Africa is where humanity grew up\u2014and where the bulk of human genetic diversity is found to this day.\n Only now is a serious effort beginning to explore Africa\u2019s genetic richness. Better late than never. The  Three Million African Genomes (3 ) project, a continent-wide endeavour, proposes to do for the place what has already been done for Europe, North America and parts of Asia\u2014namely to catalogue and analyse the genetic diversity of those who live there. That will be scientifically fascinating, for it will help elucidate how  H. sapiens evolved. But it will be medically important, too. It may even help erode that black-and-white excuse for racism.\n  Genetic diversity brings with it diversity of genetic disease. Cystic fibrosis\u2014in any case rarer in Africa than in Europe\u2014is often caused there by a different mutation from the one involved in the European version, and is thus missed by tests developed in the West. A mutation responsible in Ghana for 40% of inherited deafness is unknown in South Africa. And so on. It also brings a diversity of genetic response to disease. Some of the molecular details of the immune system, for example, vary with geography. Understanding that variation in Africa will improve understanding of immunity to infection, helping Africans and non-Africans alike.\n  More genetic information will also cast light on evolution. Early  H. sapiens migrants from Africa encountered other species of human being on their travels. These were descendants of previous migrations out of Africa of archaic members of the genus. At least two of these other types of human, the Neanderthals and the Denisovans, interbred with the newcomers, and some of their genes are still found in modern Asians and Europeans, doing various jobs including protecting them from disease. Preliminary analysis suggests that those who remained behind in Africa similarly interbred with yet another species of human\u2014but one of which no fossil record remains.\n There is an irony in all this. Xenophobia has probably existed for as long as people have. But racist attitudes were reinforced in the 19th century by an enthusiasm for physical anthropology and eugenics. The former attempted to classify human beings on the basis of visible characteristics, such as skin colour, head shape and facial features, that are genetically inherited. If this had been a neutral analysis, it would have been unexceptional. But often it was not neutral. It not only classified, but ranked. White-skinned Europeans put themselves at the top\u2014and black-skinned Africans at the bottom. Add eugenics to that mix and the result was toxic.\n The 3  project will not, alone, overthrow the legacy of these misadventures and the prejudices they reinforced. The thinking that gave rise to them is still too deeply ingrained in too many minds for it to do that by itself\u2014even, probably, for it to come close. But to those whose minds are open, a group of 21st-century African scientists revealing that the true, glorious genetic diversity of human beings lies in their own continent more abundantly than in any other will be a superb rebuttal to the doctrines of those misguided Victorian European gentlemen.  \u25a0\n This article appeared in the Leaders section of the print edition under the headline &#34;Know thyself&#34;", "posttime": "2021-06-29 22:59:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u975e\u6d32,\u57fa\u56e0\u7ec4,genome", "title": "\u4e3a\u4ec0\u4e48\u975e\u6d32\u57fa\u56e0\u7ec4\u9879\u76ee\u5982\u6b64\u6709\u7528 ", "title_en": "Why the African genome project is so useful", "transed": 1, "url": "https://www.economist.com/leaders/2021/06/26/why-the-african-genome-project-is-so-useful", "via": "", "real_tags": ["\u975e\u6d32", "\u57fa\u56e0\u7ec4", "genome"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068501, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u65b02021-06-29\uff1a\u6f84\u6e05\u4e86Instant\u5982\u4f55\u4f7f\u7528ISO-8601\u65e5\u5386\u3002\u5217\u51fa\u4e86\u67d0\u4e9b\u7c7b\u7684\u5c5e\u6027\u3002\n  \u65e5\u671f\uff0cJavaScript\u7684\u5f53\u524d\u65e5\u671f\u65f6\u95f4API\u662f\u96be\u4ee5\u4f7f\u7528\u7684\u3002 ECMAScript\u63d0\u6848\u201cTemporal\u201d\u662f\u4e00\u4e2a\u65b0\u7684\u548c\u66f4\u597d\u7684\u65e5\u671f\u65f6\u95f4API\u548c\u76ee\u524d\u5728\u821e\u53f03.\u5b83\u662f\u7531Philipp Dunkel\uff0cMaggie Johnson-Pint\uff0cMatt Johnson-Pint\uff0cBrian Terlson\uff0cShane Carr\uff0cUjjwal Sharma\uff0cPhilip Chimeno\uff0c\u6770\u68ee\u521b\u9020\u7684\u5a01\u5ec9\u59c6\u65af\uff0c\u8d3e\u65af\u6c40\u8865\u52a9\u91d1\u3002\n   \u4f46\u662f\uff0c\u5b83\u4e0d\u662f\u4e00\u4e2a\u8be6\u5c3d\u7684\u6587\u6863\uff1a\u6709\u5173\u8bb8\u591a\u7ec6\u8282\uff0c\u60a8\u5fc5\u987b\u54a8\u8be2\u65f6\u95f4\u7684\uff08\u4f18\u79c0\uff09\u6587\u6863\u3002\n       \u65f6\u95f4\u65e5\u671f\u65f6\u95f4API\u53ef\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u65f6\u95f4\u8bbf\u95ee\u3002\u5f88\u9ad8\u5174\u4f7f\u7528\uff1a\n \u6240\u6709\u5bf9\u8c61\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u66f4\u6539\u5b83\u4eec\u4f1a\u4ea7\u751f\u65b0\u7684\u503c\uff0c\u7c7b\u4f3c\u4e8e\u5b57\u7b26\u4e32\u5982\u4f55\u5728JavaScript\u4e2d\u5de5\u4f5c\u3002\n  \u65f6\u95f4\u503c\u6709\u51e0\u4e2a\u4e13\u95e8\u7c7b\u522b\uff08\u65e5\u671f\u65f6\u95f4\u503c\u4e0e\u65f6\u533a\uff0c\u65e5\u671f\u65f6\u95f4\u503c\u6ca1\u6709\u65f6\u533a\uff0c\u65e5\u671f\u503c\uff0c\u6ca1\u6709\u65f6\u533a\u7b49\uff09\u3002\u8fd9\u6709\u51e0\u4e2a\u597d\u5904\uff1a\n  \u8be5\u5e16\u5b50\u4ece\u80cc\u666f\u77e5\u8bc6\u5f00\u59cb\u3002\u8fd9\u5c06\u6709\u52a9\u4e8e\u4f60\u7684\u5269\u4f59\u90e8\u5206\uff0c\u4f46\u6ca1\u6709\u5b83\uff0c\u4f60\u5e94\u8be5\u6ca1\u95ee\u9898\u3002 \n\u63a5\u4e0b\u6765\uff0c\u6982\u8ff0\u65f6\u95f4API\u7684\u6240\u6709\u7c7b\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u5408\u9002\u3002\n    \u660e\u663e\u7684\u592a\u9633\u65f6\u95f4\uff08\u672c\u5730\u8868\u89c2\u65f6\u95f4\uff09\uff1a\u6d4b\u91cf\u65f6\u95f4\u6700\u65e9\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5c06\u5f53\u524d\u65f6\u95f4\u57fa\u4e8e\u592a\u9633\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u4e2d\u5348\u662f\u592a\u9633\u76f4\u63a5\u5f00\u9500\u65f6\u3002\n \u5e73\u5747\u592a\u9633\u65f6\u95f4\uff08\u672c\u5730\u5e73\u5747\u65f6\u95f4\uff09\uff1a\u6b64\u65f6\u95f4\u8868\u7ea0\u6b63\u4e86\u660e\u663e\u7684\u592a\u9633\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u4f7f\u5e74\u5ea6\u7684\u6bcf\u4e00\u5929\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002\n \u6807\u51c6\u65f6\u95f4\u548c\u65f6\u533a\uff1a\u6807\u51c6\u65f6\u95f4\u6307\u5b9a\u5982\u4f55\u540c\u6b65\u5730\u7406\u533a\u57df\u5185\u7684\u65f6\u949f\u3002\u5b83\u6210\u7acb\u4e8e19\u4e16\u7eaa\uff0c\u4ee5\u652f\u6301\u5929\u6c14\u9884\u62a5\u548c\u706b\u8f66\u65c5\u884c\u3002\u572820\u4e16\u7eaa\uff0c\u6807\u51c6\u65f6\u95f4\u662f\u5168\u7403\u8303\u56f4\u7684\u6807\u51c6\u548c\u5730\u7406\u533a\u57df\u6210\u4e3a\u65f6\u533a\u3002\n \u58c1\u949f\u65f6\u95f4\u662f\u65f6\u533a\u5185\u7684\u5f53\u524d\u65f6\u95f4\uff08\u5982\u5899\u4e0a\u7684\u65f6\u949f\u6240\u793a\uff09\u3002\u58c1\u949f\u65f6\u95f4\u4e5f\u88ab\u79f0\u4e3a\u672c\u5730\u65f6\u95f4\u3002\n  UTC\uff0cZ\u548cGMT\u662f\u6307\u5b9a\u7c7b\u4f3c\u7684\u65f6\u95f4\u7684\u65b9\u5f0f\uff0c\u4f46\u7ec6\u5fae\u4e0d\u540c\uff1a\n UTC\uff08\u534f\u8c03\u4e16\u754c\u65f6\uff09\u662f\u6240\u6709\u65f6\u95f4\u533a\u57fa\u4e8e\u7684\u65f6\u95f4\u6807\u51c6\u3002\u5b83\u4eec\u76f8\u5bf9\u4e8e\u5b83\u6307\u5b9a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u56fd\u5bb6\u6216\u5730\u533a\u5c06UTC\u4f5c\u4e3a\u5f53\u5730\u65f6\u533a\u3002 \nZ\uff08Zulu\u65f6\u533a\uff09\u662f\u4e00\u4e2a\u5e38\u89c4\u7528\u4e8e\u822a\u7a7a\u548c\u519b\u961f\u7684\u519b\u4e8b\u65f6\u533a\uff0c\u4f5c\u4e3aUTC + 0\u7684\u53e6\u4e00\u4e2a\u540d\u79f0\u3002\n GMT\uff08\u683c\u6797\u5a01\u6cbb\u9ece\u660e\uff09\u662f\u5728\u4e00\u4e9b\u6b27\u6d32\u548c\u975e\u6d32\u56fd\u5bb6\u4f7f\u7528\u7684\u65f6\u533a\u3002\u5b83\u662fUTC\u52a0\u96f6\u65f6\u95f4\uff0c\u56e0\u6b64\u4e0eUTC\u5177\u6709\u540c\u4e00\u65f6\u95f4\u3002\n    \u65f6\u95f4\u7684\u65f6\u533a\u57fa\u4e8eIANA\u65f6\u533a\u6570\u636e\u5e93\uff08\u77ed\uff1aTZ\u6570\u636e\u5e93\uff09\u3002 IANA\u4ee3\u8868\u4e92\u8054\u7f51\u5206\u914d\u7684\u53f7\u7801\u6743\u9650\u3002\u5728\u8be5\u6570\u636e\u5e93\u4e2d\uff0c\u6bcf\u4e2a\u65f6\u533a\u90fd\u6709\u4e00\u4e2a\u6807\u8bc6\u7b26\u548c\u5b9a\u4e49UTC\u6b21\u504f\u79fb\u7684\u89c4\u5219\u3002\u5982\u679c\u65f6\u533a\u5177\u6709\u6807\u51c6\u65f6\u95f4\u548c\u590f\u4ee4\u65f6\uff0c\u504f\u79fb\u91cf\u5728\u4e00\u5e74\u5185\u53d1\u751f\u53d8\u5316\uff1a\n const\u6807\u51c6\u65f6\u95f4=\u4e34\u65f6.zoneddateTime.from\uff08{\uff1a\uff06\uff0339;\u6b27\u6d32/\u82cf\u9ece\u4e16\uff06\uff0339;\uff1a1995\uff0c\uff1a11\uff0c\uff1a30\uff0c\uff1a3\uff0c\uff1a24\uff0c}\uff09; assert.equal\uff08standardtime.tostring\uff08\uff09\uff0c \uff06\uff0339; 1995-11-30T03\uff1a24\uff1a00 + 01\uff1a00 [\u6b27\u6d32/\u82cf\u9ece\u4e16]\uff06\uff0339;\uff09; //\uff08a\uff09const daylightsavingtime = temporal.zoneddatetime.from\uff08{\uff1a\uff06\uff0339;\u6b27\u6d32/\u82cf\u9ece\u4e16\uff06\uff0339;\uff1a1995\uff0c\uff1a5\uff0c\uff1a30\uff0c\uff1a3\uff0c\uff1a24\uff0c}\uff09; assert.equal\uff08Daylightsavingtime .tostring\uff08\uff09\uff0c\uff06\uff0339; 1995-05-30t03\uff1a24\uff1a00 + 02\uff1a00 [\u6b27\u6d32/\u82cf\u9ece\u4e16]\uff06\uff0339;\uff09; //\uff08b\uff09\n \u5728\u6807\u51c6\u65f6\u95f4\u5185\uff0c\u6b27\u6d32/\u82cf\u9ece\u4e16\u65f6\u533a\u7684\u65f6\u95f4\u504f\u79fb\u662f+1\uff1a00\uff08\u7b2ca\u884c\uff09\u3002\u5728\u590f\u4ee4\u65f6\uff0c\u65f6\u95f4\u504f\u79fb\u662f+2\uff1a00\uff08B\u7ebf\uff09\u3002\n  IANA\u7f51\u7ad9\u4e0a\u7684\u201c\u65f6\u533a\u6570\u636e\u5e93\u201d\u662f\u4e00\u4e2a\u65f6\u533a\u540d\u79f0\u5217\u8868\u3002\n Wikipedia\u4e0a\u7684\u201cTZ\u6570\u636e\u5e93\u65f6\u533a\u5217\u8868\u201d\u662f\u53e6\u4e00\u4e2a\u65f6\u533a\u540d\u79f0\u5217\u8868\u3002 \n\u201c\u65f6\u95f4\u5dee\u201d\uff08\u201cZeitverschiebung\u201d\uff09\u5217\u51fa\u4e86\u57ce\u5e02\u7684\u65f6\u533a\u7b49 - \u4f8b\u5982\uff0c\u65e7\u91d1\u5c71\u7684\u65f6\u533a\u662f\u7f8e\u56fd/ Los_Angeles\u3002\n  \u6309\u65f6\u95f4\u652f\u6301\u7684\u65e5\u5386\u57fa\u4e8e\u6807\u51c6Unicode Unicode\u516c\u5171\u533a\u57df\u6570\u636e\u5b58\u50a8\u5e93\uff08CLDR\uff09 - \u7b49\uff1a\n  ISO8601\u7531\u5927\u591a\u6570\u897f\u65b9\u56fd\u5bb6\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7QuotialAl.now.now.zonedDateTemiso\uff08\uff09\u7b49\u65b9\u6cd5\u6765\u83b7\u5f97\u989d\u5916\u7684\u652f\u6301\uff08\uff09\uff08\uff09\uff08\u8fd4\u56de\u7cfb\u7edf\u65f6\u533a\u548cISO-8601\u65e5\u5386\u4e2d\u7684\u5f53\u524d\u65e5\u671f\u548c\u6302\u949f\u65f6\u95f4\uff09\u3002\n  \u6807\u51c6ISO-8601\u548cRFC 3339\u6307\u5b9a\u4e86\u5982\u4f55\u8868\u793a\u5b57\u7b26\u4e32\u4e2d\u7684\u65e5\u671f\u3002\u76ee\u524d\uff0c\u5b83\u4eec\u662f\u7f3a\u5c11yemporal\u6240\u9700\u7684\u529f\u80fd\uff1a\n       \u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u65e5\u671f\u65f6\u95f4\u5b57\u7b26\u4e32\u7684\u6837\u5b50\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8bb8\u591a\u8fd9\u4e9b\u90e8\u4ef6\u5f80\u5f80\u4f1a\u4e22\u5931\uff1a\n const zdt = temporal.zoneddatetime.from\uff08{\uff1a\uff06\uff0339;\u975e\u6d32/\u5185\u7f57\u6bd5\u548c\uff0339;\uff1a2019,\uff1a11\uff0c\uff1a30\uff0c\uff1a8\uff0c\uff1a55\uff0c\uff1a0\uff0c\uff1a0\uff0c\uff1a0\uff0c\uff1a0\uff0c\uff1a123\uff0c\uff1a456\uff0c\uff1a789\uff0c} \uff09; assert.equal\uff08zdt.tostring\uff08{\uff1a\uff06\uff0339;\u59cb\u7ec8\uff06\uff0339;\uff1a\uff06\uff0339; nanosecond\uff06\uff0339;}\uff09\uff0c\uff06\uff0339; 2019-11-30t08\uff1a55\uff1a00.123456789 + 03\uff1a00 [\u975e\u6d32/\u5185\u7f57\u6bd5] [U-CA = ISO8601]\uff06\uff0339\uff09;\n     \u672c\u8282\u6982\u8ff0\u4e86\u65f6\u95f4API\u7684\u7c7b\u3002\u5b83\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u65f6\u7a7a\uff08Temporal.Instant\uff0cTemporal.ZonedDateTime\u7b49\uff09\u8bbf\u95ee\u3002 \n\u58c1\u949f\u65f6\u95f4\uff08\u4e5f\u79f0\u4e3a\u672c\u5730\u65f6\u95f4\u6216\u65f6\u949f\u65f6\u95f4\uff09\u5728\u5168\u7403\u8303\u56f4\u5185\u53d8\u5316\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u65f6\u949f\u7684\u65f6\u533a\u3002\n \u7eaa\u5143\u65f6\u95f4\u662f\u8868\u793a\u786e\u5207\u65f6\u95f4\u7684\u4e00\u79cd\u65b9\u5f0f\uff1a\u5b83\u662f\u4e00\u4e2a\u6570\u5b57\u8ba1\u6570\u65f6\u95f4\u5355\u4f4d\uff08\u5982\u7eb3\u79d2\uff09\u6216Unix\u65f6\u671f\uff081970\u5e741\u67081\u65e5\u5348\u591cUTC\uff09\u3002\n   \u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u521b\u5efa\u5b9e\u4f8b\u3002\u5b83\u63a5\u53d7\u5b8c\u5168\u6307\u5b9a\u65e5\u671f\u65f6\u95f4\u503c\u6240\u9700\u7684\u6700\u5c0f\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u5728\u4e24\u4e2a\u7c7b\u7684\u7528\u4e8e\u786e\u5207\u65f6\u95f4\uff0c\u5373\u65f6\u548cZonedDateme\u7684\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u672c\u8eab\u901a\u8fc7epoch\u7eb3\u79d2\u6307\u5b9a\u3002\n const epochnanoseconds = 6046761644163000000n; Const TimeZone =\uff06\uff0339;\u7f8e\u56fd/ Los_Angeles\uff06\uff0339 ;; //\u65e7\u5f17\u6717\u897f\u65af\u79d1\u5e38ZDT1 =\u65b0\u7684\u4e34\u65f6.zoneddatetime\uff08epochnanoseconds\uff0ctimezone\uff09; ssuert.equal\uff08zdt1.tostring\uff08\uff09\uff0c\uff06\uff0339; 2161-08-12t09\uff1a00\uff1a44.163-07\uff1a00 [\u7f8e\u56fd/ Los_Angeles]\uff06 \uff0339;\uff09;\n \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5b9e\u4f8b\u3002\u4ece\uff08\uff09\u3002\u5b83\u8d85\u8f7d\uff1a\u5927\u591a\u6570\u7c7b\u90fd\u652f\u6301\u5176\u53c2\u6570\u7684\u4e09\u79cd\u503c\u3002\n \u9996\u5148\uff0c\u5982\u679c\u53c2\u6570\u662f\u540c\u4e00\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5219\u514b\u9686\u8be5\u5b9e\u4f8b\uff1a\n   const zdt3 = temporal.zoneddatetime.from\uff08{\uff1a\uff06\uff0339;\u7f8e\u56fd/ los_angeles\uff06\uff0339;\uff1a2161\uff0c\uff1a8\uff0c\uff1a12\uff0c\uff1a9\uff0c\uff1a0\uff0c\uff1a4\uff0c\uff1a44\uff0c\uff1a163\uff0c\uff1a0\uff0c\uff1a0\uff0c} \uff09; assert.equal\uff08zdt3.tostring\uff08\uff09\uff0c\uff06\uff0339; 2161-08-12t09\uff1a00\uff1a44.163-07\uff1a00 [\u7f8e\u56fd/ LOS_ANGELES]\uff06\uff0339;\uff09; \n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728DINE A\u4e2d\u6307\u5b9a\u504f\u79fb\u91cf\uff0c\u4f46\u5b83\u4ee5\u884cB\u7ebf\u663e\u793a\u3002  recisoday\uff1a\u53c2\u8003ISO\u65e5\uff0c\u7528\u4e8e\u6d88\u9664\u6b67\u4e49\u65f6\u4f7f\u7528ISO-8601\u65e5\u5386\u4ee5\u5916\u7684\u65e5\u5386  Refisoyear\uff1a\u53c2\u8003ISO\u5e74\uff0c\u7528\u4e8e\u6d88\u9664\u6b67\u4e49\u65f6\u4f7f\u7528ISO-8601\u65e5\u5386\u4ee5\u5916\u7684\u65e5\u5386  Instant\u5728\u5185\u90e8\u4f7f\u7528UTC\u548cISO-8601\u65e5\u5386\uff08\u4f8b\u5982\uff0c\u7528\u4e8e.tostring\uff08\uff09\uff09\uff0c\u4f46\u5b83\u4eec\u672a\u5b58\u50a8\u5728\u5b9e\u4f8b\u4e2d\u3002  Object Temporal.Now\u6709\u51e0\u79cd\u5de5\u5382\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u8868\u793a\u5f53\u524d\u65f6\u95f4\u7684\u65f6\u95f4\u503c\uff1a  \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Temporal.now\u6765\u8bbf\u95ee\u7cfb\u7edf\u7684\u5f53\u524d\u65f6\u533a\u3002 \u6b64\u65f6\u523b\u53ef\u4ee5\u6539\u53d8 - \u4f8b\u5982\uff0c\u5f53\u7cfb\u7edf\u65c5\u884c\u65f6\uff1a  Class Instant\u8868\u793a\u5168\u7403\u786e\u5207\u65f6\u95f4\u3002 \u5b83\u7684\u65f6\u95f4\u6807\u51c6\u662fUTC\u3002 \u5b83\u4e3b\u8981\u662f\u7531\u4e8e\u65f6\u4ee3\u4ee5\u6765\u7684\u7eb3\u79d2\u7684\u5bb9\u5668\u3002 \u8fd9\u4e5f\u53cd\u6620\u4e86\u5b83\u6ca1\u6709\u5177\u6709\u5982\u3002\u6027\u548c.hour\uff08\u54ea\u79cdZoneddatetime\u548cPlaindatetime\uff09\u7684\u5c5e\u6027\u3002 \n\u5bf9\u4e8e\u67d0\u4e9b\u64cd\u4f5c\uff08\u4f8b\u5982.TOSTRING\uff08\uff09\uff09\uff0cInstant\u5185\u90e8\u4f7f\u7528ISO-8601\u65e5\u5386\uff0c\u4f46\u8be5\u65e5\u5386\u672a\u5b58\u50a8\u5728\u5b9e\u4f8b\u4e2d\u3002\n            \u590f\u4ee4\u65f6\u53ef\u80fd\u64ad\u653e\u89d2\u8272\u7684\u65f6\u95f4\u8ba1\u7b97\uff08\u201c\u4e00\u5c0f\u65f6\u540e\u201d\uff09\n //\u6fb3\u5927\u5229\u4e9a\u58a8\u5c14\u672c\u7684\u5f53\u524d\u65f6\u95f4\uff08\u5728ISO-8601\u65e5\u5386\u4e2d\uff09Const ZonedDatetime = Temporal.Now.Now.zonedDateteMiSo\uff08\uff06\uff0339;\u6fb3\u5927\u5229\u4e9a/\u58a8\u5c14\u672c\uff06\uff0339;\uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 2021-06-27T10\uff1a46\uff1a31.179753181 + 10\uff1a00 [\u6fb3\u5927\u5229\u4e9a/\u58a8\u5c14\u672c]\uff06\uff0339;\uff09;\n        \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u65f6\u533a\uff0c\u5219\u65f6\u95f4\u8c03\u7528\u5b83\u201c\u5e73\u539f\u201d\u3002\u6709\u4e09\u4e2aTimeZone\u7684\u8bfe\u7a0b\uff1aPlaindateTime\uff0cPlaindate\u548c\u51cc\u4e71\u3002\u4ed6\u4eec\u662f\u65f6\u95f4\u7684\u62bd\u8c61\u8868\u73b0\u3002\n  \u65f6\u533a\u65e0\u5173\u65f6\u7684\u65f6\u95f4\u8ba1\u7b97\uff08\u201c1998\u5e745\u6708\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u4e09\u201d\uff09\u3002\n const zoneddatetime = temporal.now.now.zoneddatetemeiso\uff08\uff06\uff0339;\u4e9a\u6d32/\u65b0\u897f\u4f2f\u5229\u4e9a\u4eba\u548c\uff0339;\uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 2021-06-27T10\uff1a46\uff1a31.179 + 07\uff1a00 [\u4e9a\u6d32/ novosibirsk]\uff06\uff0339;\uff09; //\u83b7\u5f97\u5899\u949f\u65f6\u95f4\u4f5c\u4e3a\u5b57\u7b26\u4e32const plaindatetime = zoneddatetime.toplabaindatetime\uff08\uff09assert.equal\uff08plaindatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 2021-06-27t10\uff1a46\uff1a31.179\uff06\uff0339;\uff09;\n                // bastille day const bastilleday = youpalal.plainmonthday.from\uff08{\uff1a7\uff0c\uff1a14}\uff09; assert.equal\uff08bastilleday.tostring\uff08\uff09\uff0c\uff06\uff0339; 07-14\uff06\uff0339;\uff09; // Bastille Day\u4e8e1989\u5e74\u5728\u5df4\u9ece\u5eb7\u65af\u7279Zoneddatetime = Bastilleday .toplaindate\uff08{:1989}\uff09.tozoneddatetime\uff08\uff06\uff0339;\u6b27\u6d32/\u5df4\u9ece\uff06\uff0339;\uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 1989 -07-14T00\uff1a00\uff1a00 + 02\uff1a00 [\u6b27\u6d32/\u5df4\u9ece]\uff06\uff0339;\uff09; \n\u5305\u542b\u5b8c\u6574\u65e5\u671f\u7684\u6240\u6709\u65f6\u95f4\u7c7b\u90fd\u4f7f\u7528\u65e5\u5386\u6765\u5e2e\u52a9\u5b83\u4eec\u4f7f\u7528\u5404\u79cd\u8ba1\u7b97\u3002\u5927\u591a\u6570\u4ee3\u7801\u5c06\u4f7f\u7528ISO-8601\u65e5\u5386\uff0c\u4f46\u4e5f\u652f\u6301\u5176\u4ed6\u65e5\u5386\u7cfb\u7edf\u3002\n  const pd1 = new youpalal.plaindate\uff081992,2,24\uff0c\uff06\uff0339; ISO8601\uff06\uff0339;\uff09; Const PD2 =\u65b0\u7684\u4e34\u65f6.Plaindate\uff081992,2,24\uff0c{\uff1a\uff06\uff0339; ISO8601\uff06\uff0339;}\uff09; const pd3 =\u65b0\u7684\u4e34\u65f6.plaindate\uff081992,2,24\uff0c\u65b0\u7684\u4e34\u65f6.calendar\uff08\uff06\uff0339; iso8601\uff06\uff0339;\uff09\uff09;\n  \u65f6\u533a\u7684\u5b9e\u4f8b\u4ee3\u8868\u65f6\u533a\u3002\u5b83\u4eec\u652f\u6301IANA\u65f6\u533a\uff0cUTC\u548cUTC\u62b5\u6d88\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\uff0cIANA\u65f6\u533a\u662f\u6700\u4f73\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u590f\u4ee4\u65f6\u3002\n  const zdt1 = new temporal.zoneddatetime\uff080n\uff0c\uff06\uff0339;\u7f8e\u56fd/\u5229\u9a6c\uff06\uff0339;\uff09; const zdt2 = new temporal.zoneddatetime\uff080n\uff0c{\uff1a\uff06\uff0339;\u7f8e\u56fd/\u5229\u9a6c\uff06\uff0339;}\uff09; const zdt3 =\u65b0\u7684\u4e34\u65f6.zoneddatetime\uff080n\uff0cnew temporal.timezone\uff08\uff06\uff0339;\u7f8e\u56fd/\u5229\u9a6c\uff06\uff0339;\uff09\uff09;\n  \u6301\u7eed\u65f6\u95f4\u8868\u793a\u65f6\u95f4\u957f\u5ea6 - \u4f8b\u59823\u5c0f\u65f645\u5206\u949f\u3002\n              \u4f46\u662f\uff0c.TOString\uff08\uff09\u4e0d\u4f1a\u8ba9\u60a8\u9690\u85cf\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5206\u949f - \u5982\u679c\u8fd9\u662f\u60a8\u60f3\u8981\u7684\uff0c\u5219\u5fc5\u987b\u5c06ZonedDateTime\u8f6c\u6362\u4e3aPlaindate\uff1a\n   \u6240\u6709\u65f6\u95f4\u65e5\u671f\u65f6\u95f4\u503c\u90fd\u6709.tojson\uff08\uff09\u65b9\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e32\u8054\u5230JSON\uff1a \nconst zdt = temporal.zoneddatetime.from\uff08\uff06\uff0339; 2019-12-01T12\uff1a00 [\u4e9a\u6d32/\u65b0\u52a0\u5761]\uff06\uff0339;\uff09; //\u76f4\u63a5\u4e25\u683c\u5b8c\u6210\u5206\u533a\u65e5\u671f\u65f6\u95f4\uff1aassert.equal\uff08json.stringify\uff08zdt\uff09\uff0c\uff06\uff0339;\uff06\uff0334; 2019-12-01T12\uff1a00\uff1a00 + 08\uff1a00 [\u4e9a\u6d32/\u65b0\u52a0\u5761]\uff06\uff0334; \uff06\uff0339;\uff09; //\u4e25\u683c\u5728\u5bf9\u8c61\u5185\u8fdb\u884c\u5206\u533a\u65e5\u671f\u65f6\u95f4\uff1aconst obj = {\uff1azdt}; assert.equal\uff08json.stringify\uff08obj\uff09\uff0c\uff06\uff0339; {\uff06\uff0334; starttime\uff06\uff0334;\uff1a\uff06\uff0334; 2019- 12-01T12\uff1a00\uff1a00 + 08\uff1a00 [\u4e9a\u6d32/\u65b0\u52a0\u5761]\uff06\uff0334;}\uff06\uff0339;\uff09;\n \u5982\u679c\u8981\u4f7f\u7528\u65e5\u671f\u65f6\u95f4\u503c\u89e3\u6790JSON\uff0c\u5219\u9700\u8981\u8bbe\u7f6eJSON REVIVER\u3002\n  \u65f6\u95f4\u7684\u652f\u6301\u5c06\u65e5\u671f\u65f6\u95f4\u503c\u8f6c\u6362\u4e3a\u4eba\u7c7b\u53ef\u8bfb\u5b57\u7b26\u4e32\u7c7b\u4f3c\u4e8eIntl.dateTimeFormat\u7684\uff1a\n const zdt = temporal.zoneddatetime.from\uff08\uff06\uff0339; 2019-12-01T12\uff1a00 [\u6b27\u6d32/\u67cf\u6797]\uff06\uff0339;\uff09; assert.equal\uff08zdt.tolocalestring\uff08\uff09\uff0c\uff06\uff0339; 12/1/2019 \uff0c12:00:00 GMT + 1\uff06\uff0339;\uff09; assert.equal\uff08zdt.tolocalestring\uff08\uff06\uff0339; de-de\uff06\uff0339;\uff09\uff0c\uff06\uff0339; 1.12.2019\uff0c12:00:00 Mez\uff06\uff03 39;\uff09; assert.equal\uff08zdt.tolocalestring\uff08\uff06\uff0339; en-gb\uff06\uff0339; {\uff1a\uff06\uff0339; long\uff06\uff0339;\uff1a\uff06\uff0339; numeric\uff06\uff0339 ;,\uff1a\uff06\uff0339; long\uff06 \uff0339;\uff0c\uff1a\uff06\uff0339;\u6570\u5b57\uff06\uff0339;\uff0c}\uff09\uff0c2019\u5e7412\u67081\u65e5\u661f\u671f\u65e5\u548c\uff0339;\uff09;\n       \u53e6\u4e00\u65b9\u9762\uff0cInstant\u516c\u5f00\u7684\u4e00\u4e2a\u5b57\u6bb5\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4 - \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u65e5\u671f\uff1a\n    \u5927\u591a\u6570\u65e5\u671f\u65f6\u95f4\u8bfe\u7a0b\u652f\u6301\u4e30\u5bcc\u7684\u5b57\u6bb5\uff0c\u5982.dayofweek\uff0c.month\u548c.calendar\u3002\u503c\u5f97\u6ce8\u610f\u7684\u5f02\u5e38\u662f\u5373\u65f6\u7684\uff0c\u5176\u65f6\u533a\u548c\u65e5\u5386\u662f\u56fa\u5b9a\u7684\uff0c\u5176\u8bbe\u7f6e\u548c\u72b6\u6001\u57fa\u4e8e\u65f6\u4ee3\u65f6\u95f4\u3002\n \u5728\u6240\u6709\u5176\u4ed6\u65e5\u671f\u65f6\u95f4\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u51fa\u5382\u51fd\u6570.from\uff08\uff09\u6765\u914d\u7f6e\u5b9e\u4f8b\uff1a \nconst zoneddatetime = temporal.zoneddatetime.from\uff08{\uff1a\uff06\uff0339;\u975e\u6d32/\u62c9\u5404\u65af\uff06\uff0339;\uff1a1995\uff0c\uff1a12\uff0c\uff1a12\uff0c\uff1a7\uff0c\uff1a3\uff0c\uff1a3\uff0c\uff1a3\uff0c\uff1a3\uff1a\uff1a30\uff0c\uff1a0\uff0c\uff1a3\uff0c\uff1a500\uff0c} \uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 1995-12-07T03\uff1a24\uff1a30.0000035 + 01\uff1a00 [\u975e\u6d32/\u62c9\u53e4\u65af]\uff06\uff0339;\uff09;\n   \u5982\u679c\u6211\u4eec\u60f3\u66f4\u6539\u5b57\u6bb5\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7.with\uff08\uff09\uff1a\n    const dates = [temporal.zoneddateTeme.from\uff08\uff06\uff0339; 2022-12-01t12\uff1a00 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339;\uff09\uff0cyourthalal.zoneddatetime.from\uff08\uff06\uff0339; 2001-12-01T12\uff1a00 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339;\uff09\uff0c\u4e34\u65f6.zoneddatetime.from\uff08\uff06\uff0339; 2009-12-01t12\uff1a00 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339;\uff09\uff0c]; dates.sort\uff08temporal.zoneddatetime.com\u644a\uff09 ; assert.deepequal\uff08dates.map\uff08d =\uff06gt; d.tostring\uff08\uff09\uff09\uff0c[\uff06\uff0339; 2001-12-01T12\uff1a00\uff1a00 + 03\uff1a30 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339 ;,\uff06\uff03 39; 2009-12-01T12\uff1a00\uff1a00 + 03\uff1a30 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339 ;,\uff06\uff0339; 2022-12-01T12\uff1a00\uff1a00 + 03\uff1a30 [\u4e9a\u6d32/\u5fb7\u9ed1\u5170]\uff06\uff0339 ;\uff0c]\uff09;\n   const Instant = temporal.instant.from\uff08\uff06\uff0339; 1970-01-01T00\uff1a00\uff1a01Z\uff06\uff0339;\uff09; const zoneddatetime = Instant.tozoneddatetemeiso\uff08\uff06\uff0339;\u6b27\u6d32/\u9a6c\u5fb7\u91cc\uff06\uff0339;\uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 1970-01-01t01\uff1a00\uff1a01 + 01\uff1a00 [\u6b27\u6d32/\u9a6c\u5fb7\u91cc]\uff06\uff0339;\uff09; const plaindatetetime1 = zoneddatetime.toplaindatetime\uff08\uff09; serret.equal\uff08plaindatetime1.tostring\uff08\uff09\uff0c\uff06\uff0339; 1970-01-01t01\uff1a00\uff1a01\uff06\uff0339;\uff09; const timezone = temporal .timezone.from\uff08\uff06\uff0339;\u6b27\u6d32/\u9a6c\u5fb7\u91cc\uff06\uff0339;\uff09; const plaindatetetime2 = timezone.getplaindateTemefor\uff08\u5373\u65f6\uff09; assert.equal\uff08plaindatetime2.tostring\uff08\uff09\uff0c\uff06\uff0339; 1970-01-01T01\uff1a00\uff1a01\uff06\uff0339;\uff09;\n  const zoneddatetime = temporal.zoneddatetime.from\uff08\uff06\uff0339; 2019-12-01T12\uff1a00 [\u6b27\u6d32/\u660e\u65af\u514b]\uff06\uff0339;\uff09; const Instant = zoneddatetime.toinstant\uff08\uff09; assert.equal\uff08Instant.tostring\uff08\uff09\uff0c\uff06\uff0339; 2019-12-01T09\uff1a00\uff1a00\uff1a00Z\uff06\uff0339;\uff09; const plaindatetime = zoneddatetime.toplaindatetime\uff08\uff09; assert.equal\uff08plaindateTeme.tostring\uff08\uff09\uff0c\uff06\uff0339; 2019-12-01T12\uff1a00\uff1a00\uff06\uff0339;\uff09;\n  const plaindatetetime = temporal.plaindatetime\u3002\uff08\uff06\uff0339; 1995-12-07T03\uff1a24\uff1a30\uff06\uff0339;\uff09; const zoneddatetime = plaindateTime.tozoneddatetime\uff08\uff06\uff0339;\u6b27\u6d32/\u67cf\u6797\uff06\uff0339;\uff09; assert.equal\uff08zoneddatetime.tostring\uff08\uff09\uff0c\uff06\uff0339; 1995-12-07T03\uff1a24\uff1a30 + 01\uff1a00 [\u6b27\u6d32/\u67cf\u6797]\uff06\uff0339;\uff09; const Instant = zoneddatetime.toinstant\uff08\uff09; assert.equal\uff08Instant.tostring\uff08\uff09\uff0c\uff06\uff0339; 1995-12-07T02\uff1a24\uff1a30z\uff06\uff0339;\uff09;\n     const secoverure = temporal.zoneddatetime.from\uff08\uff06\uff0339; 2017-05-08T12\uff1a55 [\u6b27\u6d32/\u67cf\u6797]\uff06\uff0339;\uff09; //\u6155\u5c3c\u9ed1const aslival = temporal.zoneddatetime.from\uff08\uff06\uff0339; 2017-05-08T17\uff1a10 [\u7f8e\u56fd/ Los_Angeles]\uff06\uff0339;\uff09; //\u897f\u96c5\u56feConst\u98de\u884c\u65f6\u95f4=\u51fa\u53d1\u3002intilt.until\uff08\u62b5\u8fbe\uff09; assert.equal\uff08\u98de\u884c\u65f6\u95f4.Tostring\uff08\uff09\uff0c\uff06\uff0339; pt13h15m\uff06\uff0339;\uff09; \n\u4e3a\u4e86\u8ba1\u7b97\u52b3\u52a8\u8282\uff089\u6708\u4efd\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u4e00\uff09\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u5f85\u52a0\u51659\u67081\u65e5\u7684\u6570\u5929\uff0c\u4ee5\u4fbf\u5230\u8fbe\u5de5\u4f5c\u65e51\uff08\u661f\u671f\u4e00\uff09\u3002\n const mod =\uff08a\uff0cb\uff09=\uff06gt; \uff08\uff08A\uff05b\uff09+ b\uff09\uff05b;\u529f\u80fd\uff08\u5e74\uff09{const firstofseptember = temporal.plaindate.from\uff08{\u5e74\uff0c\uff1a9\uff0c\uff1a1\uff0c}\uff09; //\u5230\u5468\u4e00\u5230\u51e0\u5929\u4e86\uff1f const monday = 1; Const Daystoadd = Mod\uff08\u661f\u671f\u4e00 -  Firstofseptember.Dayofweek\uff0c7\uff09;\u8fd4\u56defirstofseptember.add\uff08{\uff1adaystoadd}\uff09; issert.equal\uff08getlaborday\uff082021\uff09.tostring\uff08\uff09\uff0c\uff06\uff0339; 2021-09-06\uff06\uff0339;\uff09; assert.equal\uff08getlaborday\uff082022\uff09.tostring\uff08 \uff09\uff0c\uff06\uff0339; 2022-09-05\uff06\uff0339;\uff09;\n   \u867d\u7136\u8fd9\u4e00\u63d0\u8bae\uff06\uff0339; s api\u672a\u88ab\u9884\u671f\u66f4\u6539\uff0c\u4f46\u8be5\u63d0\u6848\u7684\u5b9e\u65bd\u8005\u5728IETF\u6807\u51c6\u5316\u65f6\u533a/\u65e5\u5386\u5b57\u7b26\u4e32\u5e8f\u5217\u5316\u683c\u5f0f\u4e4b\u524d\uff0c\u8be5\u63d0\u6848\u7684\u5b9e\u65bd\u8005\u4e0d\u5f97\u53d1\u51fa\u672a\u53d1\u5e03\u7684\u65f6\u95f4\u5b9e\u73b0\u3002\u67e5\u770b\uff031450\u66f4\u65b0\u3002\n \u63d0\u6848\u94fe\u63a5\u5230\u5408\u91d1\u3002\u8b66\u544a\uff1a\u805a\u586b\u5145\u9002\u7528\u4e8e\u4e0eAPI\u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u5b83\u5e94\u8be5\u88ab\u8ba4\u4e3a\u5df2\u88ab\u8ba4\u4e3a\u5df2\u88ab\u8d2c\u503c\uff08\u901a\u8fc7\u66f4\u597d\u7684\u5b9e\u73b0\u66ff\u6362\uff09\u800c\u4e0d\u662f\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u3002\n  \u5b98\u65b9\u65f6\u95f4\u6587\u6863\u76ee\u524d\u5728GitHub\u4e0a\u6258\u7ba1\uff0c\u4f46\u6700\u7ec8\u5c06\u88ab\u79fb\u52a8\u5230MDN Web Docs\u3002\n \u9057\u7559\u65e5\u671fAPI\u5728\u201c\u4e0d\u8010\u70e6\u7a0b\u5e8f\u5458JavaScript\u201d\u4e66\u7c4d\u201cJavaScript\u201d\u7684\u4e00\u7ae0\u4e2d\u3002 ", "note_en": "Update 2021-06-29: Clarified how  Instant uses the ISO-8601 calendar. Listed the properties of some classes.\n  Date, JavaScript\u2019s current date time API is  infamously difficult to use.  The ECMAScript proposal \u201cTemporal\u201d is a new and better date time API and currently at stage 3. It was created by  Philipp Dunkel,  Maggie Johnson-Pint,  Matt Johnson-Pint,  Brian Terlson,  Shane Carr,  Ujjwal Sharma,  Philip Chimento,  Jason Williams, and  Justin Grant.\n   However, it is not an exhaustive documentation: For many details, you will have to consult  the (excellent) documentation for Temporal.\n       The Temporal date time API is accessible via the global variable  Temporal. It is a pleasure to use:\n All objects are immutable. Changing them produces new values, similarly to how strings work in JavaScript.\n  There are several specialized classes for Temporal values (date time values with time zones, date time values without time zones, date values without time zones, etc.). That has several benefits:\n  The post starts with background knowledge. That will help you with the remainder of the post, but you should be fine without it.\n Next, there is an overview of all the classes of the Temporal API and how they fit together.\n    Apparent solar time (local apparent time): One of the earliest ways of measuring time was to base the current time on the position of the sun. For example, noon is when the sun is directly overhead.\n Mean solar time (local mean time): This time representation corrects the variations of apparent solar time so that each day of the year has the same length.\n Standard time and time zones: Standard time specifies how the clocks within a geographical region are to be synchronized. It was established in the 19th century to support weather forecasting and train travel. In the 20th century, standard time was defined globally and geographical regions became  time zones.\n Wall-clock time is the current time within a time zone (as shown by a clock on the wall). Wall-clock time is also called  local time.\n  UTC, Z, and GMT are ways of specifying time that are similar, but subtly different:\n UTC (Coordinated Universal Time) is the time standard that all times zones are based on. They are specified relative to it. That is, no country or territory has UTC as its local time zone.\n Z (Zulu Time Zone) is a military time zone that is often used in aviation and the military as another name for UTC+0.\n GMT (Greenwich Mean Time) is a time zone used in some European and African countries. It is UTC plus zero hours and therefore has the same time as UTC.\n    Temporal\u2019s time zones are based on  the IANA Time Zone Database (short: tz database). IANA stands for Internet Assigned Numbers Authority. In that database, each time zone has an identifier and rules defining offsets for UTC times. If a time zone has standard time and daylight saving time, the offsets change during a year:\n const standardTime = Temporal.ZonedDateTime.from({  :  &#39;Europe/Zurich&#39;,  :  1995,  :  11,  :  30,  :  3,  :  24,});assert.equal( standardTime.toString(),  &#39;1995-11-30T03:24:00+01:00[Europe/Zurich]&#39;);  // (A) const daylightSavingTime = Temporal.ZonedDateTime.from({  :  &#39;Europe/Zurich&#39;,  :  1995,  :  5,  :  30,  :  3,  :  24,});assert.equal( daylightSavingTime.toString(),  &#39;1995-05-30T03:24:00+02:00[Europe/Zurich]&#39;);  // (B)\n In standard time, the time offset for the  Europe/Zurich time zone is +1:00 (line A). In daylight saving time, the time offset is +2:00 (line B).\n  \u201cTime Zone Database\u201d on the IANA website is a list of time zone names.\n \u201cList of tz database time zones\u201d on Wikipedia is another list of time zone names.\n \u201cTime Difference\u201d (\u201cZeitverschiebung\u201d) lists time zones for cities etc. \u2013 for example, the time zone for San Francisco is  America/Los_Angeles.\n  The calendars supported by Temporal are based on the standard  Unicode Unicode Common Locale Data Repository (CLDR) \u2013 among  others:\n  iso8601 is used by most western countries and gets extra support in Temporal, via methods such as  Temporal.now.zonedDateTimeISO() (which returns the current date and wall-clock time in the system time zone and ISO-8601 calendar).\n  The standards ISO-8601 and RFC 3339 specify how to represent dates in strings. Currently, they are missing functionality that is needed and  added by Temporal:\n       The following code shows what a full date time string looks like. In practice, many of these parts will often be missing:\n const zdt = Temporal.ZonedDateTime.from({  :  &#39;Africa/Nairobi&#39;,  :  2019,  :  11,  :  30,  :  8,  :  55,  :  0,  :  123,  :  456,  :  789,});assert.equal( zdt.toString({ :  &#39;always&#39;,  :  &#39;nanosecond&#39;}),  &#39;2019-11-30T08:55:00.123456789+03:00[Africa/Nairobi][u-ca=iso8601]&#39;);\n     This section gives an overview of the classes of the Temporal API. They can all be accessed via the global variable  Temporal ( Temporal.Instant,  Temporal.ZonedDateTime, etc.).\n    Wall-clock time (also called  local time or  clock time) varies globally, depending on the time zone of a clock.\n Epoch time is one way of representing exact time: It\u2019s a number counting time units (such as nanoseconds) before or since  Unix epoch (midnight UTC on January 1, 1970).\n   On one hand, we can create instances via the constructor. It accepts the minimal amount of data needed to fully specify the date time value. For example, in the case of the two classes for exact time,  Instant and  ZonedDateTime, the time itself is specified via epoch nanoseconds.\n const epochNanoseconds =  6046761644163000000n; const timeZone =  &#39;America/Los_Angeles&#39;;  // San Francisco const zdt1 =  new Temporal.ZonedDateTime(epochNanoseconds, timeZone);assert.equal( zdt1.toString(),  &#39;2161-08-12T09:00:44.163-07:00[America/Los_Angeles]&#39;);\n On the other hand, we can create instances via the static factory method  .from(). It is overloaded: Most classes support three kinds of values for its parameter.\n First, if the parameter is an instance of the same class, then that instance is cloned:\n   const zdt3 = Temporal.ZonedDateTime.from({  :  &#39;America/Los_Angeles&#39;,  :  2161,  :  8,  :  12,  :  9,  :  0,  :  44,  :  163,  :  0,  :  0,});assert.equal( zdt3.toString(),  &#39;2161-08-12T09:00:44.163-07:00[America/Los_Angeles]&#39;);\n   Note that we didn\u2019t need to specify the offset in line A, but it is shown in line B.\n    refIsoDay: reference ISO day, used for disambiguation when using calendars other than the ISO-8601 calendar\n refIsoYear: reference ISO year, used for disambiguation when using calendars other than the ISO-8601 calendar\n Instant uses UTC and an ISO-8601 calendar internally (e.g. for  .toString()), but they are not stored in instances.\n    The object  Temporal.now has several factory methods for creating Temporal values representing the current time:\n      We can use  Temporal.now to access the current time zone of the system. This time zone can change \u2013 for example, when the system travels:\n        Class  Instant represents global exact time. Its time standard is UTC. It is mostly a container for nanoseconds since epoch. That is also reflected by it not having properties such as  .year and  .hour (which  ZonedDateTime and  PlainDateTime have).\n For some operations (such as  .toString()),  Instant internally uses an ISO-8601 calendar, but that calendar is not stored in instances.\n            Time computations where daylight saving time may play a role (\u201cone hour later\u201d)\n // Current time in Melbourne, Australia (in ISO-8601 calendar) const zonedDateTime = Temporal.now.zonedDateTimeISO(  &#39;Australia/Melbourne&#39;);assert.equal( zonedDateTime.toString(),  &#39;2021-06-27T10:46:31.179753181+10:00[Australia/Melbourne]&#39;);\n        If a class doesn\u2019t have a time zone, Temporal calls it \u201cplain\u201d. There are three timezone-less classes:  PlainDateTime,  PlainDate, and  PlainTime. They are abstract representations of time.\n  Time computations when the time zone doesn\u2019t matter (\u201cThe first Wednesday of May 1998\u201d).\n const zonedDateTime = Temporal.now.zonedDateTimeISO(  &#39;Asia/Novosibirsk&#39;);assert.equal( zonedDateTime.toString(),  &#39;2021-06-27T10:46:31.179+07:00[Asia/Novosibirsk]&#39;); // Get the wall-clock time as a string const plainDateTime = zonedDateTime.toPlainDateTime()assert.equal( plainDateTime.toString(),  &#39;2021-06-27T10:46:31.179&#39;);\n                // Bastille Day const bastilleDay = Temporal.PlainMonthDay.from({ :  7,  :  14});assert.equal( bastilleDay.toString(),  &#39;07-14&#39;); // Bastille Day in 1989 in Paris const zonedDateTime = bastilleDay .toPlainDate({ :  1989}) .toZonedDateTime( &#39;Europe/Paris&#39;);assert.equal( zonedDateTime.toString(),  &#39;1989-07-14T00:00:00+02:00[Europe/Paris]&#39;);\n   All Temporal classes that contain full dates use calendars to help them with various computations. Most code will use the ISO-8601 calendar, but other calendar systems are supported, too.\n  const pd1 =  new Temporal.PlainDate( 1992,  2,  24,  &#39;iso8601&#39;); const pd2 =  new Temporal.PlainDate( 1992,  2,  24, { :  &#39;iso8601&#39;}); const pd3 =  new Temporal.PlainDate( 1992,  2,  24,  new Temporal.Calendar( &#39;iso8601&#39;));\n  Instances of  TimeZone represent time zones. They support IANA time zones, UTC, and UTC offsets. For most use cases, IANA time zones are the best choice because they enable proper handling of daylight saving time.\n  const zdt1 =  new Temporal.ZonedDateTime( 0n,  &#39;America/Lima&#39;); const zdt2 =  new Temporal.ZonedDateTime( 0n, { :  &#39;America/Lima&#39;}); const zdt3 =  new Temporal.ZonedDateTime( 0n,  new Temporal.TimeZone( &#39;America/Lima&#39;));\n  A duration represents a length of time \u2013 for example, 3 hours and 45 minutes.\n              However,  .toString() doesn\u2019t let you hide minutes in this case \u2013 you have to convert the  ZonedDateTime to a  PlainDate if that is what you want:\n   All Temporal date time values have a  .toJSON() method and can therefore be stringified to JSON:\n const zdt = Temporal.ZonedDateTime.from(  &#39;2019-12-01T12:00[Asia/Singapore]&#39;); // Stringifying a zoned date time directly:assert.equal(  JSON.stringify(zdt),  &#39;&#34;2019-12-01T12:00:00+08:00[Asia/Singapore]&#34;&#39;); // Stringifying a zoned date time inside an object: const obj = { : zdt};assert.equal(  JSON.stringify(obj),  &#39;{&#34;startTime&#34;:&#34;2019-12-01T12:00:00+08:00[Asia/Singapore]&#34;}&#39;);\n If you want to parse JSON with date time values, you need to set up  a JSON reviver.\n  Temporal\u2019s support for converting date time values to human readable strings is similar to   Intl.DateTimeFormat\u2019s:\n const zdt = Temporal.ZonedDateTime.from(  &#39;2019-12-01T12:00[Europe/Berlin]&#39;);assert.equal( zdt.toLocaleString(),  &#39;12/1/2019, 12:00:00 PM GMT+1&#39;);assert.equal( zdt.toLocaleString( &#39;de-DE&#39;),  &#39;1.12.2019, 12:00:00 MEZ&#39;);assert.equal( zdt.toLocaleString( &#39;en-GB&#39;, {  :  &#39;long&#39;,  :  &#39;numeric&#39;,  :  &#39;long&#39;,  :  &#39;numeric&#39;, }),  &#39;Sunday, 1 December 2019&#39;);\n       On the other hand, one of the fields exposed by  Instant provides us with the epoch time in milliseconds \u2013 which we can use to create a date:\n    Most date time classes support a rich set of fields such as  .dayOfWeek,  .month, and  .calendar. The notable exception is  Instant, whose time zone and calendar is fixed and whose setup and state is based on epoch time.\n In all other date time classes, we can use the static factory function  .from() to configure instances:\n const zonedDateTime = Temporal.ZonedDateTime.from({  :  &#39;Africa/Lagos&#39;,  :  1995,  :  12,  :  7,  :  3,  :  24,  :  30,  :  0,  :  3,  :  500,});assert.equal( zonedDateTime.toString(),  &#39;1995-12-07T03:24:30.0000035+01:00[Africa/Lagos]&#39;);\n   If we want to change the fields, we need to create a new value via  .with():\n    const dates = [ Temporal.ZonedDateTime.from( &#39;2022-12-01T12:00[Asia/Tehran]&#39;), Temporal.ZonedDateTime.from( &#39;2001-12-01T12:00[Asia/Tehran]&#39;), Temporal.ZonedDateTime.from( &#39;2009-12-01T12:00[Asia/Tehran]&#39;),];dates.sort(Temporal.ZonedDateTime.compare);assert.deepEqual( dates.map(  d =&gt; d.toString()), [  &#39;2001-12-01T12:00:00+03:30[Asia/Tehran]&#39;,  &#39;2009-12-01T12:00:00+03:30[Asia/Tehran]&#39;,  &#39;2022-12-01T12:00:00+03:30[Asia/Tehran]&#39;, ]);\n   const instant = Temporal.Instant.from( &#39;1970-01-01T00:00:01Z&#39;); const zonedDateTime = instant.toZonedDateTimeISO( &#39;Europe/Madrid&#39;);assert.equal( zonedDateTime.toString(),  &#39;1970-01-01T01:00:01+01:00[Europe/Madrid]&#39;); const plainDateTime1 = zonedDateTime.toPlainDateTime();assert.equal( plainDateTime1.toString(),  &#39;1970-01-01T01:00:01&#39;); const timeZone = Temporal.TimeZone.from( &#39;Europe/Madrid&#39;); const plainDateTime2 = timeZone.getPlainDateTimeFor(instant);assert.equal( plainDateTime2.toString(),  &#39;1970-01-01T01:00:01&#39;);\n  const zonedDateTime = Temporal.ZonedDateTime.from(  &#39;2019-12-01T12:00[Europe/Minsk]&#39;); const instant = zonedDateTime.toInstant();assert.equal( instant.toString(),  &#39;2019-12-01T09:00:00Z&#39;); const plainDateTime = zonedDateTime.toPlainDateTime();assert.equal( plainDateTime.toString(),  &#39;2019-12-01T12:00:00&#39;);\n  const plainDateTime = Temporal.PlainDateTime.from(  &#39;1995-12-07T03:24:30&#39;); const zonedDateTime = plainDateTime.toZonedDateTime( &#39;Europe/Berlin&#39;);assert.equal( zonedDateTime.toString(),  &#39;1995-12-07T03:24:30+01:00[Europe/Berlin]&#39;); const instant = zonedDateTime.toInstant();assert.equal( instant.toString(),  &#39;1995-12-07T02:24:30Z&#39;);\n     const departure = Temporal.ZonedDateTime.from(  &#39;2017-05-08T12:55[Europe/Berlin]&#39;);  // Munich const arrival = Temporal.ZonedDateTime.from(  &#39;2017-05-08T17:10[America/Los_Angeles]&#39;);  // Seattle const flightTime = departure.until(arrival);assert.equal( flightTime.toString(),  &#39;PT13H15M&#39;);\n    To compute Labor Day (first Monday in September) for a given year, we need to figure out how many days to add to September 1 in order to get to weekday 1 (Monday).\n const mod =  ( a, b) =&gt; ((a % b) + b) % b;  function  ( year) {  const firstOfSeptember = Temporal.PlainDate.from({ year,  :  9,  :  1, });  // How many days until Monday?  const MONDAY =  1;  const daysToAdd = mod(MONDAY - firstOfSeptember.dayOfWeek,  7);  return firstOfSeptember.add({ : daysToAdd});}assert.equal( getLaborDay( 2021).toString(),  &#39;2021-09-06&#39;);assert.equal( getLaborDay( 2022).toString(),  &#39;2022-09-05&#39;);\n   Although this proposal&#39;s API is not expected to change, implementers of this proposal MUST NOT ship unflagged Temporal implementations until IETF standardizes timezone/calendar string serialization formats. See  #1450 for updates.\n The proposal links to a polyfill. Caveat: The polyfill works well for playing with the API, but it should be considered deprecated (to be replaced by better implementations soon) and not be used in production.\n  The official Temporal documentation is currently  hosted on GitHub, but will eventually be moved to  MDN Web Docs.\n The legacy  Date API is documented in  a chapter in the book \u201cJavaScript for impatient programmers\u201d.", "posttime": "2021-06-29 22:58:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "javascript,java,\u65f6\u95f4,started", "title": "\u65f6\u95f4\uff1aJavaScript\u65b0\u7684\u65e5\u671f\u65f6\u95f4API\u5165\u95e8 ", "title_en": "Temporal: Getting started with JavaScript's new date time API", "transed": 1, "url": "https://2ality.com/2021/06/temporal-api.html", "via": "", "real_tags": ["java", "\u65f6\u95f4", "started"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068500, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9053\u6b49\uff0c\u4f46\u6211\u4eec\u7684\u76ee\u7684\u662f\u51fa\u9519\u4e86\u3002 ", "note_en": "Apologies, but something went wrong on our end.", "posttime": "2021-06-29 22:58:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u8f6f\u4ef6,\u542f\u52a8,serial,\u76ee\u7684", "title": "\u4e32\u884c\u542f\u52a8\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7684\u9080\u8bf7 ", "title_en": "Confessions of a serial startup software developer", "transed": 1, "url": "https://betterprogramming.pub/dont-write-code-for-a-startup-1eead038c372", "via": "", "real_tags": ["\u5f00\u53d1", "\u8f6f\u4ef6", "\u542f\u52a8", "serial", "\u76ee\u7684"]}, {"category": "", "categoryclass": "", "imagename": "9f353b4e755a8e3b5da91a9e054c2edf.jpeg", "infoid": 1068499, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba4\u8bc6\u5230\u68ee\u6797\u751f\u6001\u7cfb\u7edf\uff0c\u5c31\u50cf\u793e\u4f1a\uff0c\u6709\u667a\u529b\u7684\u5143\u7d20\u4f1a\u6709\u52a9\u4e8e\u6211\u4eec\u7559\u4e0b\u4ed6\u4eec\u662f\u60f0\u6027\u548c\u53ef\u9884\u6d4b\u7684\u65e7\u6982\u5ff5\u3002\n   Suzanne Simard\u662f\u82f1\u56fd\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u68ee\u6797\u751f\u6001\u5b66\u6559\u6388\u3002\u5979\u7684\u6700\u65b0\u4e66\u662f\u201c\u627e\u5230\u6bcd\u6811\u201d\uff085\u67082021\u5e74\uff09\u3002 SIMARD\u7684\u751f\u547d\u548c\u5de5\u4f5c\u662fRichard Powers 2018\u5e74\u666e\u5229\u7b56\u5956\u83b7\u5956\u5c0f\u8bf4\u4e2d\u7684\u6838\u5fc3\u89d2\u8272\u7684\u4e3b\u8981\u7075\u611f\uff0c\u201c\u5938\u5927\u4e86\u201d\u3002\n \u963f\u897f\u5c3c\u4e01\u5c71\uff0c\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7701 -  11\u6708\u3002\u96ea\u8986\u76d6\u4e86\u843d\u77f6\u5c71\u8109\u3002\u6211\u5728\u4e00\u4e2a\u72ec\u594f\u7684\u504f\u8fdc\u7684\u6ed1\u96ea\u4e4b\u65c5\uff0c\u6682\u505c\u5728\u5806\u79ef\u7684\u539f\u59cb\u7535\u7ebf\u4e2d\u3002\u82cf\u5c14\u672c\u5c71\u6749\u6728\u5728\u96ea\u5730\u548c\u51b0\u7684\u94f8\u9020\u4e2d\u5f2f\u66f2\uff0c\u767d\u94f6\u677e\u6811\u88ab\u6dd8\u6c70\u7684\u9aa8\u5934\uff0c\u6b7b\u4e8e\u5c71\u677e\u7532\u866b\u548c\u6c14\u5019\u53d8\u5316\u538b\u529b\u5f15\u8d77\u7684\u5c71\u866b\u7532\u866b\u548c\u6c34\u75b1\u751f\u9508\u3002\n \u6211\u6000\u5b55\u4e86\u4e09\u4e2a\u6708\u3002\u5728\u6211\u4eec\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u7684\u4e08\u592b\u5510\u5199\u4e86\u4ed6\u7684\u8bba\u6587\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u5bc2\u5bde\uff0c\u6211\u662f36\u5c81\u7684\u771f\u76f8\u65e0\u8a00\u8d8a\u7684\u66d9\u5149\uff0c\u4ed639\u5c81\uff0c\u5b69\u5b50\u4eec\u6765\u4e86\u3002\u8fdb\u5165Assiniboine\u662f\u6211\u5bf9\u8fd9\u4ef6\u793c\u7269\u7684\u5e86\u795d\u6d3b\u52a8\u3002\n \u7532\u866b\u5728\u5e93\u6d1b\u5c14\u8513\u5ef6\u8d77\u6765\u3002\u56db\u5e74\u4ee5\u524d\uff0c1992\u5e74\uff0c\u7206\u53d1\u5df2\u7ecf\u5f00\u59cb\u5728\u897f\u5317\u90e8\uff0c\u5728\u65af\u76ae\u8428\u8fea\u9ad8\u539f\u8352\u91ce\u7701\u7ea7\u516c\u56ed;\u51ac\u5b63\u6c14\u6e29\u589e\u52a0\u4e86\u51e0\u5ea6\uff0c\u6700\u51b7\u7684\u6708\u4efd\u505c\u6b62\u843d\u4e0b-30\u6444\u6c0f\u5ea6\u4ee5\u4e0b\uff0c\u8ba9\u7532\u866b\u5e7c\u866b\u8301\u58ee\u6210\u957f\u5728\u8001\u5316\u677e\u6811\u7684\u539a\u539a\u7684\u97e7\u76ae\u7599\u7629\u4e2d\u3002\n Lodgepole Pine\u5728\u8fd9\u79cd\u666f\u89c2\u4e2d\u643a\u5e26\u7532\u866b\uff0c\u81ea\u7136\u5730\u5728\u5927\u7ea6\u4e00\u4e2a\u4e16\u7eaa\u540e\u5c48\u670d\uff0c\u4e3a\u4e0b\u4e00\u4ee3\u521b\u9020\u7a7a\u95f4\u3002\u7531\u4e8e\u6811\u6728\u4e0b\u964d\uff0c\u5f53\u7136\uff0c\u7701\u7565\u7684\u71c3\u6599\u548c\u91ce\u706b\u88ab\u95ea\u7535\u6216\u4eba\u70b9\u71c3\u3002\u706b\u7130\u4ece\u6811\u8102\u9525\u4e2d\u91ca\u653e\u4e86\u677e\u6811\u79cd\u5b50\uff0c\u5e76\u523a\u6fc0\u4e86\u5343\u5c81\u7684\u6839\u7cfb\u4e2d\u7684\u767d\u6768\u82bd\uff0c\u4ed6\u4eec\u7684\u6e7f\u53f6\u964d\u4f4e\u4e86\u5e74\u8f7b\u68ee\u6797\u7684\u53ef\u71c3\u6027\u3002\u7531\u4e8e\u900f\u8fc7\u666f\u89c2\u7684\u706b\u7130\uff0c\u5b83\u5728\u8fd9\u4e9b\u963f\u65af\u5f6d - \u514b\u62c9\u5fb7\u7684\u5174\u8da3\u522b\u5904\u5f7c\u5f97\u4e86\uff0c\u7559\u4e0b\u4e86\u4e0d\u540c\u8001\u5e74\u68ee\u6797\u7684\u9a6c\u8d5b\u514b\uff0c\u8fd9\u672c\u8eab\u5c31\u662f\u5bf9\u672a\u6765\u7684\u706b\u707e\u62b5\u6297\u529b\u3002\n \u4f46\u572818\u4e16\u7eaa\u540e\u671f\uff0c\u6b27\u6d32\u5b9a\u5c45\u8005\u901a\u8fc7\u5c06\u68ee\u6797\u8499\u592a\u5947\u71c3\u70e7\u5230\u5730\u9762\u6765\u5bfb\u627e\u91d1\u8272\u7684\u68ee\u6797\u8499\u592a\u5947\uff0c\u9020\u6210\u4e00\u5757\u5de8\u5927\u7684\u65b0\u677e\u6811\u67b6\uff0c\u5747\u5300\u7684\u706b\u707e\u6291\u5236\u548c\u9664\u8349\u5242\u55b7\u6d12\u7684\u5747\u5300\u6027\u5e76\u4e0d\u662f\u5e72\u6270\u5229\u6da6\u3002\u968f\u7740\u8fd9\u4e9b\u677e\u6811100\u5c81\u548c\u6c14\u5019\u6e29\u6696\uff0c\u7532\u866b\u4eba\u53e3\u7206\u70b8\uff0c\u666f\u89c2\u50cf\u8840\u6db2\u4e00\u6837\u6c79\u6d8c\u6f8e\u6e43\u3002 \n\u5f53\u6211\u5728\u6b7b\u7684\u767d\u6ee8\u677e\u6811\u4e2d\u6ed1\u52a8\u65f6\uff0c\u7a7a\u6c14\u5f7b\u5e95\u51b2\u8fdb\u4e86\u6211\u7684\u80ba\u90e8\uff0c\u9189\u9152\u8ffd\u968f\u8f68\u9053\u548c\u843d\u5728\u5ca9\u77f3\u548c\u6811\u4e95\u5468\u56f4\u7684\u65b0\u8f6c\u5f2f\u3002\u5510\u6b63\u5728\u4e0b\u5348\u5efa\u9020\u4e00\u4e2a\u6447\u7bee\u3002\u6ee1\u8db3\u5df2\u7ecf\u7b3c\u7f69\u7740\u6211\u4eec\u4e24\u8005\u3002\u4f46\u5728\u5cf0\u4e4b\u95f4\u7684\u9a6c\u978d\u5fc3\u4e2d\uff0c\u6211\u505c\u4e0b\u6765\u68c0\u67e5\u65b0\u96ea\u7684\u4e00\u4e9b\u8f68\u9053\uff0c\u611f\u53d7\u5230\u719f\u6089\u7684\u6050\u60e7\u3002\u722a\u5370\u4e0e\u789f\u5b50\u4e00\u6837\u5927\uff0c\u722a\u5b50\u6df1\u5165\u3002\n  \u6211\u5728\u8fc7\u53bb\u7684\u4f20\u7403\u4e0a\u6ed1\u8fc7\u4e86\u3002\u5f88\u5feb\uff0c\u4f46\u6211\u8ff7\u5931\u4e86\u3002\u5f53\u6211\u5708\u56de\u5230\u4e2d\u5fc3\u65f6\uff0c\u6211\u98a4\u6296\u7740\u56de\u5230\u539f\u6765\u7684\u8f68\u9053\u4e0a\uff0c\u5df2\u7ecf\u5728\u6f02\u6d41\u7684\u96ea\u4e2d\u51b7\u51bb\u4e86\u3002\u5e76\u7528\u65b0\u9c9c\u7684\u5370\u5237\u54c1\u8986\u76d6\u3002\n  \u6211\u672c\u80fd\u5730\u4fdd\u6301\u6ed1\u96ea\u901a\u884c\u8bc1\u3002\u8d64\u88f8\u7684\u9ad8\u5c71\u843d\u53f6\u677e\uff0c\u805a\u96c6\u5728\u5cf0\u503c\u4e0b\u65b9\u7684\u7897\u4e2d\uff0c\u4ed6\u4eec\u7684\u91d1\u8272\u9488\u5df2\u7ecf\u4e0b\u964d\uff0c\u5728\u6211\u8eab\u540e\u3002\u5728\u8fd9\u91cc\uff0c\u4e9a\u6c34\u5e73\u6749\u6728\u5728\u5c0f\u578b\u6811\u6797\u4e2d\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5b83\u4eec\u7684\u6570\u5b57\u968f\u7740\u6211\u7684\u4e0b\u964d\u800c\u589e\u52a0\u3002\u5728\u6211\u7684\u80cc\u4e0a\u5e26\u774030\u78c5\u7684\u7535\u8bdd\u552e\u4ef7\u7d27\u5f20\u6211\u7684\u817f\u3002\u6211\u7684\u5b9d\u5b9d\uff0c\u6ca1\u6709\u5927\u4e8e\u4e00\u76ce\u53f8\u7684\u9ec4\u91d1\uff0c\u6ca1\u6709\u6254\u6389\u6211\u7684\u5e73\u8861\u3002\u6211\u628a\u81c0\u90e8\u6263\u7d27\u8d34\u5728\u51b0\u51b7\uff0c\u7834\u788e\u7684\u5730\u5f62\u4e0a\u7a33\u5b9a\uff0c\u6162\u6162\u8f6c\u52a8\uff0c\u4e00\u6b21\u4e00\u4e2a\u73af\u8282\u3002\n \u6211\u5728\u4e1c\u8fb9\u505a\u4e86\u4e00\u4e2a\u5927\u7684\u6a2a\u5411\u9003\u907f\u5c71\u6c9f\uff0c\u5728\u56de\u5934\u4e4b\u524d\u907f\u514d\u9661\u5ced\u7684\u90e8\u5206\u3002\u5f88\u96be\u770b\uff0c\u56e0\u4e3a\u6811\u6728\u7d27\u5f20\u3002\u5e74\u8f7b\u7684\u5c0f\u5c4b\u677e\u6811\u3002\u51e0\u5341\u5e74\u6765\u4e00\u5b9a\u662f\u706b\u707e\u3002\u6211\u5f88\u5feb\u518d\u6b21\u8dd1\u53bb\u68c0\u67e5\u6211\u7684\u6307\u5357\u9488\u3002\u5982\u679c\u6211\u6ca1\u6709\u88ab\u5b9a\u5411\u5e76\u56de\u5230\u4e3b\u8981\u8def\u7ebf\uff0c\u8fd9\u53ef\u80fd\u4f1a\u53d8\u5f97\u6025\u3002\n \u6211\u7684\u6050\u60e7\u5efa\u7acb\u4e86\u4e00\u4e9b\u5173\u4e8e\u6211\u7684\u7814\u7a76\u7684\u80cc\u666f\u632b\u8d25\u611f\u3002\u6211\u8d8a\u6765\u8d8a\u591a\u7684\u8bc1\u636e\u8868\u660e\u68ee\u6797\u6709\u667a\u6167 - \u4ed6\u4eec\u662f\u770b\u6027\u548c\u4ea4\u9645\u7684 - \u4f46\u6211\u6ca1\u6709\u613f\u610f\u63a5\u53d7\u5efa\u7acb\u3002\u7814\u7a76\u5458\u4f1a\u5ffd\u89c6\u6211\uff0c\u6216\u8005\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5632\u7b11\u6211\u8c08\u8bba\u690d\u7269\u7684\u611f\u89c9\u3002\n \u4e0d\uff0c\u6211\u6000\u5b55\u4e86\uff0c\u9700\u8981\u4fdd\u6301\u5b89\u9759\u4fdd\u62a4\u6211\u7684\u5b69\u5b50\uff0c\u6211\u751f\u547d\u4e2d\u6700\u73cd\u8d35\u7684\u4e1c\u897f\u3002\u6700\u8fd1\u7684CBC\u65e0\u7ebf\u7535\u8bdd\u9762\u8bd5\u5438\u5f15\u4e86\u4e00\u4e9b\u6765\u81ea\u5f53\u5730\u7684\u81ea\u7136\u4e3b\u4e49\u8005\u548c\u73af\u4fdd\u4e3b\u4e49\u8005\u7684\u5174\u8da3\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u5fd7\u540c\u9053\u5408\u7684\u68ee\u6797\uff0c\u4f46\u5b83\u4e0e\u7701\u7ea7\u8d44\u672c\u6c89\u9ed8\u3002\u751a\u81f3\u6ca1\u6709\u90a3\u4e48\u591a\u4f5c\u4e3a\u653f\u7b56\u5bb6\u4f19\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u60f3\u77e5\u9053\u662f\u5426\u6709\u9762\u8bd5\u662f\u503c\u5f97\u7684\u3002\u6216\u8005\u5728\u4f1a\u8bae\u4e0a\u8c08\u8bba\u8fd9\u4e00\u4e8b\u4ef6\u3002\u6211\u4e0d\u80fd\u6bd4\u6211\u6240\u62e5\u6709\u7684\u66f4\u591a;\u73b0\u5728\u6709\u592a\u591a\u7684\u8d4c\u6ce8\u3002\n \u6211\u8df3\u56de\u4e86\u5927\u7ea6300\u82f1\u5c3a\uff0c\u4ece\u65e9\u671f\u7684\u6ed1\u96ea\u8005\u627e\u5230\u4e86\u65e7\u8f68\u9053\u3002\u72fc\u6253\u5370\u8d8a\u8fc7\u5b83\u4eec\u4e09\u6b21\u3002\u5b83\u770b\u8d77\u6765\u50cf\u81f3\u5c11\u4e94\u53ea\u52a8\u7269\u3002 \n\u6211\u6ed1\u8fc7\u66f4\u8fdc\u3002 Lodgepole\u6749\u6728\u6811\u6728\u7a00\u758f\uff0c\u4ed6\u4eec\u7684\u6d6e\u80bf\u51a0\u8d8a\u6765\u8d8a\u9760\u8fd1\u5730\u9762\u3002\u5e94\u8be5\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u8bcd\uff0c\u4f60\u77e5\u9053\u7684\u662f\u54c0\u60bc\u7684\u7c7b\u578b\u3002\u5341\u5e74\u6765\uff0c\u8fd14500\u4e07\u82f1\u4ea9\u7684\u6210\u719f\u6749\u6728\u68ee\u6797\u5c06\u88ab\u6b7b\u4ea1\uff0c\u8fd9\u662f\u82f1\u56fd\u54e5\u4f26\u6bd4\u4e9a\u68ee\u6797\u5730\u533a\u7684\u4e09\u5206\u4e4b\u4e00\u3002\u7532\u866b\u5c06\u7ee7\u7eed\u901a\u8fc7\u4fc4\u52d2\u5188\u5dde\u7684\u4fc4\u52d2\u5188\u5dde\u7684\u767d\u7968\uff0c\u897f\u7ea2\u67ff\u548c\u5e9e\u5fb7\u8428\u677e\u6811\u5480\u56bc\uff0c\u5e76\u5c06\u5f00\u59cb\u5728\u52a0\u62ff\u5927\u7684\u5317\u7f8e\u5317\u7f8e\u7684\u5317\u7f8e\u68ee\u6797\u4e2d\u4fb5\u67d3\u6770\u514b\u677e\u6742\u4ea4\u79cd\uff0c\u5728\u5317\u7f8e\u6d32\u7684\u603b\u4f53\u6d41\u884c\u75c5\u533a\u57df\u5927\u81f4\u5927\u5c0f\u7684\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3002\u5b83\u5c06\u8d85\u8d8a\u5386\u53f2\u8bb0\u5f55\u7684\u4efb\u4f55\u6606\u866b\u7206\u53d1\uff0c\u5e76\u4e3a\u5728\u9053\u8def\u4e0a\u6bc1\u574f\u91ce\u706b\u63d0\u4f9b\u71c3\u6599\u3002\n \u6211\u901a\u8fc7\u4e86\u4e00\u5757\u88f8\u9732\u7684\u767d\u6768\u6811\u3002\u5370\u5237\u54c1\u5728\u84b8\u6c7d\u5c3f\u6db2\u4e2d\u7194\u5316\u3002\u6df1\u6a59\u9ec4\u3002\u6211\u7559\u5728\u72ed\u7a84\u7684\u5c71\u8c37\uff0c\u80be\u4e0a\u817a\u7d20\u4e2d\u7684\u4e3b\u8981\u8def\u7ebf\u8ba9\u6211\u7684\u5305\u88c5\u6253\u706b\u673a\u3002\u72fc\u7fa4\u5728\u524d\u9762\u5446\u5728\u5916\u9762\uff0c\u7559\u4e0b\u4e86\u75d5\u8ff9\u3002\n \u4ed6\u4eec\u7684\u66f2\u76ee\u76f4\u63a5\u4e3a\u4e3b\u8981\u7684\u5317\u884c\u5c0f\u5f84\uff0c\u6211\u7a81\u7136\u5e73\u9759\u4e0b\u6765\u3002\u72fc\u6ca1\u6709\u8ffd\u6c42\u6211;\u4ed6\u4eec\u5e26\u9886\u6211\u8d70\u51fa\u5c71\u8c37\u3002\u968f\u7740Vista\u6269\u5927\u7684\uff0c\u6211\u7684\u5c0f\u5f84\u4f1a\u878d\u5165\u5357\u65b9\u3002\u6211\u8f6c\u8fc7\u8eab\u6765\uff0c\u72fc\u8f68\u9053\u7a81\u7136\u8f6c\u5411\u5317\u65b9\u3002\u5f53\u4ed6\u4eec\u6d88\u5931\u5728\u6811\u4e0a\u65f6\uff0c\u4e00\u9635\u98ce\u5439\u8fc7\u5b83\u4eec\u3002\n  \u6211\u4e3a\u6211\u54e5\u54e5\u9001\u4e86\u4e00\u652f\u8721\u70db\uff0c\u5728\u90a3\u4e9b\u72fc\u7fa4\u4e2d\u4e3a\u4ed6\u7684\u7cbe\u795e\u3002 Lodgepole Pines\u8eab\u6750\u9ad8\u5927\uff0c\u5f3a\u58ee\uff0c\u4ed6\u4eec\u7684\u5d07\u9ad8\u7684\u51a0\u5195\u906e\u853d\u4e86\u6211\uff0c\u800c\u4ed6\u4eec\u575a\u51b3\u770b\u8fc7\u4e00\u4e9b\u4e9a\u9ad8\u5c71\u7684\u6749\u6728\u3002\u6211\u9700\u8981\u5728\u8fd9\u91cc\u5f98\u5f8a\u5728\u8fd9\u91cc\u5ce1\u8c37\u6447\u6eda\u548c\u7ed3\u6676\u7684\u6811\u51a0\u548c\u72fc\u7fa4\u4e00\u8d77\u805a\u96c6\u5728\u4e00\u8d77\u3002\u592a\u9633\u722c\u8fc7\u82b1\u5c97\u5ca9\u5cf0\uff0c\u6211\u671d\u7740\u5b83\u503e\u659c\u3002\u6211\u62d4\u51fa\u4e86\u4e00\u4e2a\u4e09\u660e\u6cbb\uff0c\u51c6\u5907\u6c38\u8fdc\u4fdd\u6301\u7740\u3002\u6211\u611f\u5230\u6b22\u8fce\uff0c\u6574\u4f53\u3002\u7eaf\u51c0\uff0c\u5e72\u51c0\uff0c\u65e0\u6c61\u67d3\u3002\n \u5f53\u6211\u5403\u4e86\u65f6\uff0c\u6211\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6811\u6728 - \u8fd9\u4e9b\u767d\u6768\u548c\u677e\u6811 - \u5c06\u652f\u6301\u4e00\u4e2a\u83cc\u6839\u771f\u83cc\uff0c\u4e3a\u90bb\u8fd1\u6811\u63d0\u4f9b\u78b3\uff08\u6216\u6c2e\u6c14\uff09\u3002\u4e0e\u81ea\u5df1\u7269\u79cd\u7684\u4e2a\u4eba\u5206\u4eab\uff0c\u7279\u522b\u662f\u81ea\u5df1\u7684\u9057\u4f20\u5bb6\u5ead\uff0c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u660e\u663e\u7684\u76ca\u5904\u3002\u6811\u6728\u5206\u6563\u4e86\u5927\u90e8\u5206\u79cd\u5b50 - \u4ee5\u91cd\u529b\u6216\u98ce\u6216\u5947\u602a\u7684\u9e1f\u7c7b\u6216\u677e\u9f20 - \u5728\u4ed6\u4eec\u7684\u5c0f\u5c40\u57df\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5373\u65f6\u90bb\u5c45\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u662f\u76f8\u5173\u7684\u3002\n \u5728\u8fd9\u4e2a\u8349\u5730\u8fb9\u7f18\u805a\u96c6\u7684\u677e\u6811\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u5bb6\u5ead\u7684\u4eb2\u5c5e\uff0c\u4ed6\u4eec\u7684\u57fa\u56e0\u7531\u9065\u8fdc\u7684\u7236\u4eb2\u7684\u82b1\u7c89\u6f02\u79fb\u591a\u6837\u5316\u3002\u8fd9\u4e9b\u7236\u6bcd\u6811\u5206\u4eab\u4e86\u5b83\u4eec\u5468\u56f4\u7684\u4e00\u4e9b\u6811\u6728\u7684\u4e00\u4e9b\u57fa\u56e0\uff0c\u5e76\u6cbf\u7740\u78b3\u4e92\u76f8\u4f20\u9012\u78b3\u9178\u76d0\u4ee5\u589e\u52a0\u4ed6\u4eec\u81ea\u5df1\u7684\u540e\u4ee3\u7684\u751f\u5b58\uff0c\u6709\u52a9\u4e8e\u786e\u4fdd\u8fd9\u4e9b\u57fa\u56e0\u88ab\u8f6c\u79fb\u5230\u540e\u4ee3\u3002\u540e\u6765\u7684\u7814\u7a76\u8868\u660e\uff0c\u67b6\u5b50\u4e2d\u81f3\u5c11\u6709\u4e00\u534a\u7684\u677e\u6811\u7684\u6839\u90e8\u88ab\u79fb\u690d\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u8f83\u5927\u7684\u6811\u6728\u5c06\u8f83\u5c0f\u7684\u6811\u6728\u8865\u8d34\u7740\u78b3\u7684\u8f83\u5c0f\u3002\u8840\u6db2\u6bd4\u6c34\u539a\u3002\u8fd9\u662f\u4ece\u4e2a\u4eba\u9009\u62e9\u7684\u89d2\u5ea6\u6765\u5b8c\u7f8e\u7684\u610f\u4e49\u3002\u8fd9\u662f\u8fbe\u5c14\u6587\u3002\n \u4f46\u6211\u7684\u4f5c\u54c1\u8868\u660e\u4e00\u4e9b\u78b3\u4e5f\u642c\u5230\u4e86\u65e0\u5173\u7684\u4eba\uff0c\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u7269\u79cd\u3002\u4ece\u6866\u6728\u5230\u51b7\u6749\u5e76\u518d\u6b21\u56de\u6765\u3002\u6211\u770b\u7740\u767d\u8272\u7684\u767d\u6768\uff0c\u5b83\u7684\u6811\u76ae\u5728\u9633\u5149\u4e0b\u6652\u592a\u9633\uff0c\u5e76\u60f3\u77e5\u9053\u5b83\u662f\u5426\u4f1a\u5728\u5176\u51a0\u4e4b\u4e0b\u7684\u51b7\u6749\u4e0a\u6c47\u96c6\u78b3\u3002\u5176\u4ed6\u65b9\u5f0f\u4e5f\u662f\uff1a\u6749\u6728\u5230\u767d\u70bd\u706f\u3002 \n\u83cc\u6839\u771f\u83cc\u662f\u4e00\u822c\u4e3b\u4e49\u8005 - \u4ed6\u4eec\u6b96\u6c11\u690d\u7269\u6839\u7ec4\u7ec7\uff0c\u6709\u65f6\u751a\u81f3\u7ec6\u80de\u5185\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6295\u5165\u8bb8\u591a\u6811\u79cd\u6765\u5bf9\u51b2\u4ed6\u4eec\u7684\u751f\u5b58\u8d4c\u6ce8\uff0c\u4ee5\u53ca\u4e00\u4e9b\u78b3\u5c06\u8f6c\u5411\u964c\u751f\u4eba\u7684\u969c\u788d\u53ea\u662f\u5c06\u5176\u8f6c\u79fb\u5230\u4eb2\u5c5e\u7684\u6210\u672c\u7684\u4e00\u90e8\u5206\u3002\n \u4f46\u8fd9\u4e0d\u662f\u6211\u7684\u6811\u6728\u6240\u663e\u793a\u7684\u3002\u4ed6\u4eec\u5411\u6211\u63d0\u4f9b\u4e86\u8bc1\u636e\u8868\u660e\u78b3\u8fd0\u52a8\u7684\u6a21\u5f0f\u4e0d\u4ec5\u4ec5\u662f\u5076\u7136\u7684\uff0c\u53ef\u79fb\u52a8\u76db\u5bb4\u7684\u4e0d\u5e78\u7ed3\u679c\u3002\u4e0d\uff0c\u6211\u7684\u6811\u6728\u6b63\u5728\u5c55\u793a\u6e38\u620f\u4e2d\u6709\u5f88\u591a\u76ae\u80a4\u3002\u4e00\u904d\u53c8\u4e00\u904d\u5730\uff0c\u5b9e\u9a8c\u8868\u660e\uff0c\u78b3\u4ece\u6e90\u6811\u79fb\u52a8\u5230\u6c34\u69fd\u6811 - \u4ece\u5bcc\u4eba\u5230\u4e00\u4e2a\u7a77\u4eba - \u5e76\u4e14\u6811\u6728\u5bf9\u79fb\u52a8\u7684\u5730\u70b9\u548c\u591a\u5c11\u78b3\u6709\u4e00\u4e9b\u63a7\u5236\u3002\n \u201c\u4e3a\u4ec0\u4e48\u8001\u677e\u5b50\u4f1a\u5bf9\u8fd9\u4e9b\u9e1f\u7c7b\u548c\u52a8\u7269\u7684\u751f\u6b96\u6210\u529f\u76f8\u4fe1\uff1f\u201d\n \u4e00\u53ea\u677e\u9f20\u5728\u4e00\u4e2aKnotty juniper\u7684\u5206\u652f\u4e2d\u558b\u558b\u4e0d\u4f11\uff0c\u7b49\u7740\u6211\u6254\u6389\u6211\u7684\u4e09\u660e\u6cbb\u7684\u788e\u7247\u3002\u5b83\u5728\u677e\u6811\u9876\u90e8\u7684\u514b\u62c9\u514b\u7684\u80e1\u6843\u5939\u5b50\u4e2d\u4e00\u76f4\u5173\u6ce8\u514b\u62c9\u514b\u7684\u80e1\u6843\u5939\u5b50\uff0c\u53ef\u80fd\u5728\u5599\u4e0a\u6709\u4e00\u4e2a\u767d\u73ed\u677e\u79cd\u5b50\u3002\u4e4c\u9e26 - \u4e00\u79cd\u4e5f\u5782\u6d8e\u7684\u7269\u79cd\uff0c\u5bcc\u542b\u80fd\u91cf\u7684\u79cd\u5b50 - \u5495\u565c\u5495\u565c\u3002\n \u767d\u73ed\u5821\u6749\u6728\u53d6\u51b3\u4e8e\u6240\u6709\u8fd9\u4e9b\u7269\u79cd\u7b49\uff0c\u5305\u62ec\u7070\u718a\uff0c\u6563\u5e03\u5176\u6c89\u91cd\u7684\u79cd\u5b50\u3002\u4e3a\u4ec0\u4e48\u65e7\u7684\u677e\u6811\u4f1a\u5c06\u4ed6\u4eec\u7684\u751f\u6b96\u6210\u529f\u76f8\u4fe1\u8fd9\u4e9b\u9e1f\u7c7b\u548c\u52a8\u7269\uff0c\u5176\u5bf9\u79cd\u5b50\u7684\u5174\u8da3\u53ea\u662f\u98df\u7269\uff1f\u9700\u8981\u4e00\u4e9b\u79cd\u5b50\u9700\u8981\u7559\u4e0b\u6765\u53d1\u82bd\u5e76\u6210\u957f\u4e3a\u540e\u4ee3\uff0c\u4ee5\u786e\u4fdd\u6210\u529f\u7684\u957f\u8001\u7e41\u6b96;\u4e3a\u4ec0\u4e48\u8981\u4fe1\u4efb\u8db3\u591f\u7684\u7559\u4e0b\uff1f\u5982\u679c\u8fd9\u4e9b\u79cd\u5b50\u5206\u6563\u5668\u4e2d\u7684\u4e00\u4e2a\u6d88\u5931\uff0c\u4e5f\u8bb8\u5728\u706b\u707e\u4e2d\u6216\u5728\u4e00\u4e2a\u7279\u522b\u4e25\u9177\u7684\u51ac\u5929\u671f\u95f4\uff0c\u90a3\u4e48\u5176\u4ed6\u4eba\u53ef\u80fd\u4f1a\u63d0\u4f9b\u8d27\u7269\u3002\u5728\u540c\u4e00\u9759\u8109\u4e2d\uff0c\u4e3a\u4ec0\u4e48\u6811\u6728\u5c06\u78b3\u901a\u7ed9\u901a\u6d41\u7f51\u7edc\u771f\u83cc - \u4e00\u79cd\u6742\u5fd7\u6216cortinarius  - \u7136\u540e\u53ef\u4ee5\u5c06\u78b3\u4f20\u9012\u7ed9\u4e00\u4e2a\u4e0d\u76f8\u5173\u7684\u6811\uff1f\u4ece\u677e\u6811\u5230\u6797\u4e0b\u4e9a\u6c34\u672c\u5b50\u6749\u6728\uff1f\n \u6211\u628a\u6211\u7684\u5916\u58f3\u5e26\u5230\u4e86\u677e\u9f20\uff0c\u4e4c\u9e26\u548c\u80e1\u6843\u5939\u5b50\u8d76\u5230\u4e86\u6b4c\u5267\u5956\u3002\u5c3e\u90e8\u62bd\u6410\uff0c\u677e\u9f20\u7a81\u7834\u4e86\u5b83\u7684\u6811\u6869\u3002\u6b63\u5982\u65e7\u767d\u94f6\u677e\u6811\u5f88\u9ad8\u5174\u4e3a\u9e1f\u7c7b\u548c\u677e\u9f20\u5582\u517b\u79cd\u5b50\uff0c\u5c31\u53d6\u51b3\u4e8e\u4e00\u4e2a\u4ee5\u4e0a\u7684\u5206\u6563\uff0c\u5fc5\u987b\u5bf9\u6258\u7ba1\u8bb8\u591a\u6784\u6210\u8fde\u63a5\u7f51\u7edc\u7684\u83cc\u6839\u771f\u83cc\u7269\u79cd\u65f6\u5fc5\u987b\u5b58\u5728\u7c7b\u4f3c\u7684\u8fdb\u5316\u4f18\u52bf\uff0c\u8ba9\u5b83\u53d7\u76ca\u5728\u4e00\u4e2a\u5143\u7d20\u4e22\u5931\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u4e0d\u540c\u7684\u5957\u4ef6\u4f5c\u4e3a\u4fdd\u9669\u3002\n \u53ef\u80fd\u66f4\u91cd\u8981\u7684\u662f\u771f\u83cc\u8fc5\u901f\u7e41\u6b96\u7684\u80fd\u529b\u3002\u4ed6\u4eec\u7684\u77ed\u6682\u7684\u751f\u547d\u5468\u671f\u5c06\u4f7f\u4ed6\u4eec\u80fd\u591f\u9002\u5e94\u5feb\u901f\u53d8\u5316\u7684\u73af\u5883 - \u706b\u707e\u548c\u98ce\u548c\u6c14\u5019 - \u6bd4\u575a\u5b9a\u4e0d\u79fb\u7684\u6811\u6728\u66f4\u5feb\uff0c\u957f\u671f\u7684\u6811\u6728\u53ef\u4ee5\u7ba1\u7406\u3002\u6700\u53e4\u8001\u7684\u5ca9\u77f3\u5c71\u675c\u677e\u5206\u522b\u5728\u72b9\u4ed6\u5dde\u548c\u7231\u8fbe\u8377\u5dde\u5de6\u53f3\u7ea6\u67091500\u5c81\uff0c\u6700\u53e4\u8001\u7684\u767d\u94f6\u6e56\u6cca\u5de6\u53f3\uff0c\u5360\u57301,300\u68f5\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8fd9\u91cc\u7684\u6811\u6728\u5c06\u82b1\u51e0\u5341\u5e74\u6765\u751f\u4ea7\u4ed6\u4eec\u7684\u7b2c\u4e00\u9525\u548c\u79cd\u5b50\uff0c\u7136\u540e\u6bcf\u6b21\u5076\u5c14\u8fd9\u6837\u505a\uff0c\u4f46\u6bcf\u6b21\u4e0b\u96e8\u90fd\u53ef\u4ee5\u4ea7\u751f\u8611\u83c7\u548c\u5b62\u5b50\uff0c\u53ef\u80fd\u4f7f\u5176\u57fa\u56e0\u6bcf\u5e74\u91cd\u65b0\u7ec4\u5408\u5176\u57fa\u56e0\u3002 \n\u4e5f\u8bb8\u5feb\u901f\u5faa\u73af\u7684\u771f\u83cc\u53ef\u4ee5\u4e3a\u6811\u6728\u8fc5\u901f\u8c03\u6574\u4ee5\u5e94\u5bf9\u53d8\u5316\u548c\u4e0d\u786e\u5b9a\u6027\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u3002\u9664\u4e86\u7b49\u5f85\u4e0b\u4e00\u4ee3\u6811\u6728\u4ee5\u968f\u7740\u6c14\u5019\u53d8\u5316\u7684\u542b\u91cf\u52a0\u70ed\u548c\u5e72\u71e5\u7684\u66f4\u5177\u9002\u5e94\u6027\u7684\u65b9\u5f0f\u518d\u751f\uff0c\u800c\u662f\u6811\u6728\u5728\u5171\u751f\u4e2d\u7684\u83cc\u6839\u771f\u83cc\u53ef\u4ee5\u53d1\u5c55\u5f97\u591a\uff0c\u4ee5\u83b7\u5f97\u8d8a\u6765\u8d8a\u7d27\u5bc6\u7684\u8d44\u6e90\u3002\u4e5f\u8bb8\u662fSuillus\u548cBoletus\u548cCortinarius Fungi\u53ef\u4ee5\u7acb\u5373\u56de\u5e94\u66f4\u52a0\u751f\u6210\u5c71\u677e\u7532\u866b\u7206\u53d1\u7684\u53d8\u6696\u51ac\u5929\uff0c\u5e2e\u52a9\u6811\u6728\u4ecd\u7136\u6536\u96c6\u517b\u5206\u548c\u6c34\u6765\u4fdd\u6301\u6297\u6027\u6c34\u5e73\u3002\n \u201c\u4e5f\u8bb8\u5feb\u901f\u5faa\u73af\u771f\u83cc\u53ef\u4ee5\u4e3a\u6811\u6728\u8fc5\u901f\u8c03\u6574\u4ee5\u5e94\u5bf9\u6539\u53d8\u548c\u4e0d\u786e\u5b9a\u6027\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u3002\u201d\n \u4e4c\u9e26\u8d62\u5f97\u4e86\u6211\u7684\u4e09\u660e\u6cbb\u5730\u58f3\u7684\u6218\u6597\uff0c\u5e76\u5728\u7fbd\u6bdb\u548c\u67af\u840e\u7684\u5377\u53d1\u4e2d\u65cb\u8f6c\u8fc7\u514b\u62c9\u514b\u7684\u80e1\u6843\u5939\u5b50\u3002\u677e\u9f20\u4e0d\u4ec5\u4ec5\u662f\u6162\uff0c\u5b83\u5e76\u4e0d\u5e0c\u671b\u4ece\u9e1f\u7684\u5599\u4e2d\u7f20\u7ed5\u4efb\u4f55\u4e1c\u897f\u3002\u5728\u9e1f\u7c7b\u57cb\u846c\u65f6\uff0c\u5b83\u5fc5\u987b\u653e\u5f03\u767d\u7968\u79cd\u5b50\u3002\u6216\u8005\u5b83\u53ef\u4ee5\u5728\u677e\u6811\u7684\u5206\u652f\u4e2d\u7559\u4e0b\u8611\u83c7\u3002\u5982\u679c\u5b83\u4e0d\u5f97\u4e0d\u53ea\u4f9d\u8d56\u4e8e\u4ed6\u4eec\u5ffd\u7565\u7684\u767d\u94f6\u6749\u6728\u79cd\u5b50\uff0c\u90a3\u5c31\u4e0d\u4f1a\u50cf\u4e4c\u9e26\u548c\u80e1\u6843\u5939\u5b50\u90a3\u6837\u957f\u4e45\u3002\u540c\u6837\uff0c\u771f\u83cc\u53ef\u4ee5\u5bf9\u51b2\u5b83\u7684\u8d4c\u6ce8\uff0c\u52fe\u52d2\u51fa\u817f\u6216\u7fbd\u6bdb\u4e0a\u7684\u5b62\u5b50\uff0c\u6216\u6355\u6349\u5230\u65b0\u5bbf\u4e3b\u7684\u4e0a\u5347\u673a\u3002\n \u5982\u679c\u771f\u83cc\u4ece\u4e00\u68f5\u6811\u4e2d\u83b7\u5f97\u6bd4\u5176\u81ea\u8eab\u7684\u751f\u957f\u548c\u751f\u5b58\u7684\u9700\u8981\u66f4\u591a\u7684\u78b3\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u5411\u5176\u4ed6\u7f51\u7edc\u6811\u6728\u63d0\u4f9b\u591a\u4f59\u7684\u9700\u8981\uff0c\u5e76\u4e14\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u4ee5\u4f7f\u5176\u78b3\u6295\u8d44\u7ec4\u5408 - \u5728\u83b7\u5f97\u57fa\u672c\u8d44\u6e90\u4e2d\u7684\u4fdd\u9669\u3002\u771f\u83cc\u53ef\u4ee5\u5728\u590f\u5b63\u4e2d\u95f4\u7684\u5bcc\u542b\u767d\u6768\u6811\u751f\u4ea7\u7684\u78b3\u78b3\uff0c\u4ee5\u786e\u4fdd\u5b83\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5065\u5eb7\u4e3b\u6301\u4eba - \u5149\u5408\u78b3\u6e90 - \u4ee5\u9632\u6709\u707e\u96be\u548c\u6b7b\u4ea1\u3002\u5c31\u50cf\u5728\u5e02\u573a\u5d29\u6e83\u7684\u60c5\u51b5\u4e0b\u6295\u8d44\u80a1\u7968\u4e00\u6837\u3002\n \u771f\u83cc\u53ef\u80fd\u4e0d\u5728\u4e4e\u5bbf\u4e3b\u6240\u5728\u7684\u7269\u79cd\uff0c\u53ea\u8981\u5176\u81f3\u5c11\u4e00\u4e2a\u78b3\u6e90\u4fdd\u6301\u4e0d\u53ef\u884c\u3002\u6295\u8d44\u4e0d\u540c\u7684\u690d\u7269\u793e\u533a\u662f\u4e00\u4e2a\u4f4e\u4e8e\u4e00\u4e2a\u7269\u79cd\u7684\u8f83\u4f4e\u98ce\u9669\u7b56\u7565\u3002\u73af\u5883\u538b\u529b\u8d8a\u5f3a\u5927\uff0c\u90a3\u4e9b\u771f\u83cc\u7684\u6210\u529f\u5c31\u8d8a\u6765\u8d8a\u4e0e\u591a\u6811\u79cd\u3002\n \u201c\u4e5f\u8bb8\u6866\u6728\u548c\u51b7\u6749\u5728\u56da\u72af\u7684\u56f0\u5883\u4e2d\uff0c\u56e2\u4f53\u5408\u4f5c\u7684\u597d\u5904\u8d85\u8fc7\u4e86\u4e2a\u522b\u7279\u6743\u7684\u6210\u672c\u3002\u201d\n  \u867d\u7136\u6211\u7684\u4ee4\u4eba\u8d39\u89e3\u4e86\u6211\uff0c\u4f46\u6709\u4e9b\u4e1c\u897f\u4ecd\u7136\u4e0d\u592a\u9002\u5408\u3002\u5f53\u6211\u7684\u5305\u88c5\u7136\u540e\u8f6c\u5411\u6cbf\u7740\u5e03\u83b1\u6069\u7279\u514b\u91cc\u514b\u6cbf\u7740\u5357\u65b9\u7684\u53c9\u5b50\u8f6c\u5411\u53c9\u5b50\uff0c\u6211\u60f3\u5230\u4e86\u66f4\u591a\u7684\u4e92\u52a8\u7269\u79cd\uff1a\u6574\u4e2a\u690d\u7269\uff0c\u52a8\u7269\uff0c\u771f\u83cc\u548c\u7ec6\u83cc\u7684\u6574\u4e2a\u793e\u533a\u3002\u4e2a\u4f53\u9009\u62e9\u53ef\u80fd\u4f1a\u89e3\u91ca\u8367\u5149\u5047\u5355\u80de\u83cc\u5982\u4f55\u4e0e\u6866\u6811\u7684\u83cc\u6839\u771f\u83cc\u76f8\u4e92\u4f5c\u7528\uff0c\u4ee5\u51cf\u5c11\u9053\u683c\u62c9\u65af\u51b7\u6749\u7684\u5c38\u4f53\u751f\u6839\u75be\u75c5\u3002\u53ef\u4ee5\u9009\u62e9\u4e5f\u5728\u96c6\u56e2\u7ea7\u522b\u8fd0\u884c\uff1f \n\u5b58\u5728\u5408\u4f5c\u793e\u7684\u7269\u79cd - \u50cf\u793e\u56e2\u4eba\u7fa4\u7684\u50cf\u4f1a - \u5b58\u5728\u5417\uff1f\u591a\u6811\u79cd\u88ab\u7f51\u7edc\u94fe\u63a5\u5230\u4e92\u52a9\u7684\u7f51\u7edc\u76f8\u5173\u7684\u5730\u65b9\uff0c\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u6751\u5e84\u629a\u517b\u5b69\u5b50\u7684\u65b9\u5f0f\uff0c\u5c3d\u7ba1\u6709\u8fd9\u79cd\u516c\u4f1a\u53ef\u80fd\u6709\u9a97\u5b50\u7684\u98ce\u9669\uff1f\u5982\u679c\u6211\u4eec\u7684\u884c\u4e3a\u7531TAT\u575a\u5b9a\u7edf\u6cbb\uff0c\u8fd9\u79cd\u5171\u4eab\u5c06\u8d77\u4f5c\u7528\uff0c\u5c31\u50cf\u6866\u6811\u548c\u51b7\u6749\u4e4b\u95f4\u7684\u53cc\u5411\u8f6c\u79fb\u4ee5\u53ca\u5b83\u4eec\u7684\u4e92\u60e0\u539f\u5219\u4e00\u6837\uff0c\u6539\u53d8\u590f\u5b63\u8fc7\u7a0b\u4e2d\u51c0\u8f6c\u79fb\u7684\u65b9\u5411\u3002 quid pro quo\u3002\n \u4f46\u8d38\u6613\u4e2d\u957f\u671f\u73ed\u6b21\u5462\uff1f\u6bd4\u5982\u51b7\u6749\u6700\u7ec8\u751f\u957f\u9ad8\u4e8e\u6866\u6811\u3002 Quid pro quo\u7684\u53c2\u4e0e\u89c4\u5219\u4f1a\u6539\u53d8\uff0c\u4ee5\u53ca\u5f53\u4ed6\u4eec\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u7684\u65f6\u5019\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u4eba\u7c7b\u7684\u751f\u6d3b\u76f8\u6bd4\u5982\u4f55\u4e0e\u5e74\u9f84\u53d8\u6362\uff1f\u5982\u679c\u6709\u4eba\u5e2e\u52a9\u6211\u6258\u513f\uff0c\u5982\u679c\u5979\u9065\u8fdc\u7684\u8bdd\uff0c\u6211\u5982\u4f55\u507f\u8fd8\u5979\uff1f\u9274\u4e8e\u672a\u6765\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u6211\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e24\u68f5\u6811\u79cd\u7c7b\u5c06\u5728\u957f\u671f\u5185\u7ee7\u7eed\u8d38\u6613\u78b3\u3002\n \u4e5f\u8bb8\u6866\u6811\u548c\u51b7\u6749\uff0c\u800cArmillaria Ostoyae\u771f\u83cc\u548c\u8367\u5149\u5047\u5355\u80de\u83cc\uff0c\u5728\u56da\u72af\u7684\u56f0\u5883\u4e2d\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u56e2\u4f53\u5408\u4f5c\u7684\u597d\u5904\u8d85\u8fc7\u4e86\u4e2a\u522b\u7279\u6743\u7684\u6210\u672c\u3002\u7814\u7a76\u8868\u660e\uff0c\u5373\u4f7f\u5bf9\u4ed6\u4eba\u7684\u80cc\u53db\u53ef\u80fd\u5bfc\u81f4\u66f4\u597d\u7684\u4e2a\u4eba\u5956\u52b1\uff0c\u4e5f\u5e38\u5e38\u5728\u7fa4\u4f53\u4e2d\u9009\u62e9\u5408\u4f5c\u3002\u7531\u4e8e\u6765\u81ea\u963f\u7c73\u62ff\u5229\u4e9a\u7684\u611f\u67d3\u7684\u9ad8\u98ce\u9669\u800c\u6ca1\u6709\u6866\u6811\u4e0d\u80fd\u5728\u6ca1\u6709\u6866\u6811\u7684\u60c5\u51b5\u4e0b\u751f\u5b58\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u51b7\u6749\u7684\u60c5\u51b5\u4e0b\uff0c\u6866\u6811\u4e0d\u80fd\u751f\u5b58\uff0c\u56e0\u4e3a\u592a\u591a\u7684\u6c2e\u4f1a\u79ef\u805a\u5728\u571f\u58e4\u4e2d\uff0c\u5bfc\u81f4\u571f\u58e4\u9178\u5316\u548c\u6866\u6728\u4e0b\u964d\u3002\n \u201c\u751f\u6001\u7cfb\u7edf\u7c7b\u4f3c\u4e8e\u4eba\u7c7b\u793e\u4f1a - \u4ed6\u4eec\u6784\u5efa\u4e86\u5173\u7cfb\u3002\u90a3\u4e9b\u8d8a\u5f3a\uff0c\u7cfb\u7edf\u8d8a\u6709\u5f39\u6027\u3002\u201c\n \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c0f\u8367\u5149\u5047\u5355\u80de\u83cc\u7ec6\u83cc\u670d\u52a1\u4e86\u4e24\u79cd\u529f\u80fd\uff1a\u5b83\u4eec\u4ea7\u751f\u4e86\u6291\u5236\u6811\u6728\u4e2d\u5c38\u4f53\u6839\u6e90\u75be\u75c5\u7684\u8513\u5ef6\u7684\u5316\u5408\u7269\uff0c\u786e\u4fdd\u4ecd\u7136\u662f\u793e\u533a\u7684\u78b3\u80fd\u6e90\u6765\u6e90\uff0c\u5e76\u4e14\u5b83\u4eec\u4f7f\u7528\u78b3\u6e17\u51fa\u7684\u78b3\u83cc\u6839\u7f51\u7edc\u3002\u8fd9\u4ecd\u7136\u662f\u5728\u5404\u79cd\u7269\u79cd\u7ea7\u522b\u7684\u9009\u62e9\uff0c\u8fd8\u662f\u5728\u672c\u96c6\u56e2\u7684\u6c34\u5e73\uff1f\n \u5206\u6563\u6ce8\u610f\u529b\uff0c\u6211\u5b9e\u9645\u4e0a\u76f4\u63a5\u8fdb\u5165\u4e86\u51e0\u4f4d\u8ffd\u8e2a\u4e86\u65e9\u4e9b\u65f6\u5019\u5f15\u5bfc\u6211\u7684\u65e0\u7ebf\u7535\u8863\u88e4\u7684\u751f\u7269\u5b66\u5bb6\u3002\u4ed6\u4eec\u5f88\u597d\u5730\u4e86\u89e3\u5305\u88c5;\u9886\u5bfc\u8005\u662f\u4e00\u4f4d\u8001\u72fc\u3002\n \u6211\u95ee\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u6b63\u5728\u8ddf\u8e2a\u72fc\u3002\u968f\u7740\u5c71\u5cf0\u7684\u9634\u5f71\u589e\u957f\u66f4\u957f\u65f6\u95f4\uff0c\u5f15\u7ebf\u8ddf\u8e2a\u5668\uff0c\u4e00\u4e2a\u5e26\u6709\u9ed1\u8272\u9a6c\u5c3e\u8fab\u7684\u7626\u8863\u670d\uff0c\u4e00\u4e2a\u7626\u8eab\u7684\u5973\u4eba\uff0c\u5e76\u544a\u8bc9\u6211\u5173\u4e8e\u51ef\u5c14\u6c83\u592b\u5728\u516c\u56ed\u7684\u538b\u529b\uff0c\u4ee5\u7f13\u89e3\u9a6f\u9e7f\u7684\u8870\u843d\u3002\u5f53\u5979\u8bf4\u8bdd\u65f6\uff0c\u5979\u628a\u5979\u7684\u592a\u9633\u955c\u63a8\u56de\u5979\u7684\u5934\u4e0a\uff0c\u8f90\u5c04\u7740\u6fc0\u70c8\u7684\u667a\u6167\u3002 \n\u201c\u8fd9\u662f\u6e05\u6f88\u7684\uff0c\u201d\u6211\u56de\u7b54\u8bf4\uff0c\u8fce\u63a5\u5979\u7684\u76ee\u5149\u3002\u53d1\u82bd\u7684\u67f3\u6811\u548c\u6864\u6728\u5bf9\u9a7c\u9e7f\u6709\u5438\u5f15\u529b\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u79cd\u7fa4\u6b63\u5728\u589e\u52a0\u548c\u5438\u5f15\u72fc\u3002\u95ee\u9898\u662f\uff0c\u72fc\u4e5f\u6355\u730e\u5c71\u9a6f\u9e7f\uff0c\u7531\u4e8e\u6816\u606f\u5730\u7684\u635f\u5931\u548c\u4e0e\u4eba\u7684\u4e92\u52a8\uff0c\u6025\u5267\u4e0b\u964d\u3002\n \u5979\u5728\u5979\u7684\u6ed1\u96ea\u677f\u4e0a\u8f6c\u79fb\u5e76\u68c0\u67e5\u4e86\u5979\u7684\u96ea\u5d29\u706f\u5854\uff0c\u5979\u70b9\u5934\u70b9\u5934\u3002\n \u201c\u662f\u7684\uff0c\u96ea\u5730\u5728\u6e05\u6f88\u7684\u526a\u5207\u4e2d\u53d8\u5f97\u5982\u6b64\u6df1\uff0c\u9a6f\u9e7f\u4e0d\u80fd\u8d85\u8d8a\u72fc\uff0c\u201d\u5979\u8bf4\uff0c\u671d\u7740\u6bcd\u4eb2\u72fc\u8d70\u4e86\u7684\u9053\u8def\u3002\u968f\u7740\u7532\u866b\u6740\u6b7b\u7684\u677e\u6811\u6b63\u5728\u633d\u6551\u7532\u866b\u6740\u5bb3\u7684\u677e\u6811\uff0c\u8d8a\u6765\u8d8a\u6e05\u695a\u3002\n \u201c\u5f97\u8d70\u4e86\uff0c\u6211\u4eec\u4f1a\u5931\u53bb\u5b83\u4eec\uff0c\u201d\u5979\u7684\u52a9\u624b\u8bf4\uff0c\u5728\u8ddf\u8e2a\u88c5\u7f6e\u4e0a\u772f\u7740\u773c\u775b\uff0c\u62e7\u7d27\u4ed6\u7684\u5305\u88c5\u4e0a\u7684\u80f8\u5e26\u3002\u7814\u7a76\u4eba\u5458\u7684\u773c\u775b\u7f29\u5c0f\u4e86\u524d\u65b9\u7684\u4f20\u9012\u3002\n \u201c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u72fc\uff0c\u9a6f\u9e7f\uff0c\u6811\u6728\u548c\u771f\u83cc\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u521b\u9020\u751f\u7269\u591a\u6837\u6027\uff0c\u5c31\u50cf\u4f0d\u5fb7\u98ce\uff0c\u9ec4\u94dc\uff0c\u6253\u51fb\u4e50\u5668\u548c\u5f26\u97f3\u4e50\u5bb6\u7ec4\u88c5\u6210\u4e00\u4e2a\u4ea4\u54cd\u4e50\u56e2\u7684\u7ba1\u5f26\u4e50\u961f\u4e00\u6837\u3002\u201d\n \u201c\u770b\u5230\u4f60\uff0c\u201d\u5979\u8bf4\uff0c\u6211\u4e5f\u8bf4\u518d\u89c1\uff0c\u6b23\u8d4f\u5979\u575a\u5b9a\u4e0d\u79fb\u7684\u8ffd\u6c42\u3002\u5f53\u4ed6\u4eec\u51fa\u73b0\u65f6\uff0c\u4ed6\u4eec\u50cf\u4ed6\u4eec\u4e00\u6837\u65e0\u7f1d\u5730\u84b8\u53d1\u5230\u677e\u6811\u4e2d\uff0c\u63d0\u9192\u6211\uff0c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8f7b\u677e\u6d88\u5931\u5728\u8fd9\u91cc\u6ca1\u6709\u75d5\u8ff9\u3002\u6b63\u662f\u5728\u4e2d\u5348\u3002\u6211\u5fc5\u987b\u7ee7\u7eed\u79fb\u52a8\uff0c\u6216\u8005\u6211\u4f1a\u5728\u9ed1\u6697\u4e2d\u6ed1\u96ea\u3002\n \u6cbf\u7740\u5e03\u83b1\u6069\u514b\u91cc\u514b\u7684\u8e2a\u8ff9\u5feb\u901f\u8f7b\u67d4\u5730\u4e0b\u5761\uff0c\u800c\u5f53\u6211\u6447\u6447\u6b32\u5760\u7684\u677e\u6811\u65f6\uff0c\u6211\u7684\u80cc\u90e8\u548c\u96ea\u5d29\u8f68\u9053\u843d\u540e\u4e8e\u6211\uff0c\u6211\u5f88\u611f\u6fc0\u72fc\u751f\u7269\u5b66\u5bb6\u7528\u4ed6\u4eec\u7684\u6ed1\u96ea\u677f\u6324\u5728\u5c0f\u5f84\u4e0a\u3002\u6211\u5230\u8fbe\u6211\u7684\u8f66\uff0c\u56e0\u4e3a\u5929\u7a7a\u7684\u7c89\u7ea2\u8272\u548c\u7d2b\u8272\u6761\u7eb9\u9010\u6e10\u6d88\u5931\u5728\u6c89\u79ef\u5730\u58f3\u7684\u503e\u659c\u5e8a\u5355\u4e0a\u3002 \n\u751f\u6001\u7cfb\u7edf\u7c7b\u4f3c\u4e8e\u4eba\u7c7b\u793e\u4f1a - \u4ed6\u4eec\u5efa\u7acb\u5728\u4eba\u9645\u5173\u7cfb\u4e0a\u3002\u90a3\u4e9b\u8d8a\u5f3a\uff0c\u7cfb\u7edf\u7684\u5f39\u6027\u8d8a\u5927\u3002\u7531\u4e8e\u6211\u4eec\u7684\u4e16\u754c\u7cfb\u7edf\u7531\u4e2a\u4f53\u751f\u7269\u7ec4\u6210\uff0c\u56e0\u6b64\u4ed6\u4eec\u6709\u80fd\u529b\u6539\u53d8\u3002\u6211\u4eec\u751f\u7269\u9002\u5e94\uff0c\u6211\u4eec\u7684\u57fa\u56e0\u8fdb\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7ecf\u9a8c\u4e2d\u5b66\u4e60\u3002\u7cfb\u7edf\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u90e8\u5206 - \u6811\u6728\u548c\u771f\u83cc\u548c\u4eba\u6c11 - \u4e0d\u65ad\u54cd\u5e94\u5f7c\u6b64\u548c\u73af\u5883\u3002\u6211\u4eec\u5728\u534f\u4f1a\u4e2d\u53d6\u5f97\u6210\u529f - \u6211\u4eec\u4f5c\u4e3a\u751f\u4ea7\u6027\u7684\u793e\u4f1a\u7684\u6210\u529f - \u53ea\u662f\u4e0e\u5176\u4ed6\u4e2a\u4eba\u548c\u7269\u79cd\u7684\u503a\u5238\u7684\u529b\u91cf\u4e00\u6837\u597d\u3002\u51fa\u4e8e\u7531\u6b64\u4ea7\u751f\u7684\u9002\u5e94\u548c\u8fdb\u5316\u51fa\u73b0\u4e86\u5e2e\u52a9\u6211\u4eec\u751f\u5b58\uff0c\u751f\u957f\u548c\u8301\u58ee\u6210\u957f\u7684\u884c\u4e3a\u3002\n \u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u72fc\uff0c\u9a6f\u9e7f\uff0c\u6811\u6728\u548c\u771f\u83cc\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u521b\u9020\u751f\u7269\u591a\u6837\u6027\uff0c\u5c31\u50cf\u4f0d\u5fb7\u98ce\uff0c\u9ec4\u94dc\uff0c\u6253\u51fb\u4e50\u5668\u548c\u5f26\u97f3\u4e50\u5bb6\u7ec4\u88c5\u6210\u4e00\u4e2a\u4ea4\u54cd\u4e50\u56e2\u7684\u7ba1\u5f26\u4e50\u961f\u4e00\u6837\u3002\u6216\u8005\u6211\u4eec\u7684\u5927\u8111\uff0c\u7531\u795e\u7ecf\u5143\uff0c\u8f74\u7a81\u548c\u795e\u7ecf\u9012\u8d28\u7ec4\u6210\uff0c\u4ea7\u751f\u601d\u60f3\u548c\u540c\u60c5\u3002\u6216\u5144\u5f1f\u59d0\u59b9\u52a0\u5165\u7684\u65b9\u5f0f\u514b\u670d\u75be\u75c5\u6216\u6b7b\u4ea1\u7b49\u521b\u4f24 - \u6574\u4f53\u5927\u4e8e\u96f6\u4ef6\u7684\u603b\u548c\u3002\n \u68ee\u6797\u4e2d\u7684\u751f\u7269\u591a\u6837\u6027\u51dd\u805a\u529b\uff0c\u4e50\u56e2\u7684\u97f3\u4e50\u5bb6\uff0c\u4e00\u4e2a\u5bb6\u5ead\u7684\u6210\u5458\u901a\u8fc7\u5bf9\u8bdd\u548c\u53cd\u9988\uff0c\u901a\u8fc7\u56de\u5fc6\u548c\u5b66\u4e60\u8fc7\u53bb\uff0c\u751a\u81f3\n...... ", "note_en": "Recognizing that forest ecosystems, like societies, have elements of intelligence would help us leave behind the old notion that they are inert and predictable.\n   Suzanne Simard is a professor of forest ecology at the University of British Columbia. Her latest book is \u201cFinding the Mother Tree\u201d (May 2021). Simard\u2019s life and work were the primary inspiration for a central character in Richard Powers\u2019s 2018 Pulitzer Prize-winning novel, \u201cThe Overstory.\u201d\n MOUNT ASSINIBOINE, British Columbia \u2014\u00a0November. Snow blanketed the Rocky Mountains. I was on a solo backcountry ski trip, pausing in the pristine cordillera of the Healy Pass. Subalpine firs were bent over in casts of snow and ice, and the whitebark pines were spread-eagled like bouquets of bones, dead from mountain pine beetle and blister rust caused by the stress of climate change.\n I was three months pregnant. In our year apart while my husband Don wrote his dissertation, perhaps because of our loneliness, there came a wordless dawning of the truth that I was 36 and he was 39, and the time for children had come. Skiing into Assiniboine was my celebration of this gift.\n The beetles were on a rampage in the couloir. Four years earlier, in 1992, the outbreak had started northwest of here, in Spatsizi Plateau Wilderness Provincial Park; winter temperatures had increased by a few degrees and the coldest months stopped dropping below -30 Celsius, allowing the beetle larvae to thrive in the thick phloem of the aging pines.\n Lodgepole pine had coevolved with the beetles in this landscape, naturally succumbing, after about a century, to create space for the next generation. As the trees declined, fuel accumulated as a matter of course, and wildfires were ignited by lightning or people. Flames released pine seeds from resinous cones and stimulated aspens to sprout from thousand-year-old root systems, their moist leaves reducing the flammability of the young forest. As fire fingered through the landscape, it petered out in these aspen-clad glades, leaving a mosaic of different-aged forests that was itself resistant to future fires.\n But in the late 1800s, European settlers disrupted this balance by burning the forest montage to the ground in search of gold, creating a vast blanket of new pine stands whose uniformity was later enhanced by fire suppression and herbicide spraying that ensured the aspens wouldn\u2019t interfere with profits. As these pine trees turned 100 and the climate warmed, the beetle populations exploded, and the landscape ran red like blood flowing through water.\n The air rushed cleanly into my lungs as I glided among the dead whitebark pines, intoxicated to be following tracks and carving new turns around rockfalls and tree wells. Don was taking the afternoon to build a cradle. Contentment had enveloped us both. But in the heart of the saddle between peaks, I stopped to check some tracks in the fresh snow and felt a familiar rush of fear. The paw prints were as large as saucers, claw marks an inch deep.\n  I skied away, across the pass. Soon, though, I was lost. When I circled back to the center, I shuddered to be back to my original tracks, already frozen in the drifting snow. And covered with fresh prints.\n  I instinctively kept skiing down the pass. Naked alpine larch, clustered in bowls below the peaks, their golden needles already fallen, were behind me. Down here, the subalpine firs were knotted together in small groves, their numbers increasing as I descended. Telemarking with 30 pounds on my back strained my legs. My baby, no bigger than an ounce of gold, didn\u2019t throw off my balance. I cinched up the hip buckle to stabilize myself on the icy, broken terrain and turned slowly, one link at a time.\n I made a large traverse to the east to evade a ravine, avoiding a steep section before heading back. It was hard to see because the trees were tightly spaced. Younger lodgepole pines. There must have been a fire a few decades back. Soon I was off course again and checked my compass. If I didn\u2019t stay oriented and get back to the main route, this could get dire.\n My fear built on some background frustration about my research. I had growing evidence that forests have intelligence \u2014 that they are perceptive and communicative \u2014 but I didn\u2019t feel ready to take on the establishment. The fellows would ignore me or, worse, laugh at my talk of the sentience of plants.\n No, I was pregnant and needed to stay quiet to protect my child, the most precious thing in my life. A recent CBC radio interview had drawn some interest from local naturalists and environmentalists and even a few like-minded foresters, but it was met with silence from the provincial capital. Without even so much as an email from the policy guys, I wondered whether giving interviews was worth it. Or talks at conferences, for that matter. I couldn\u2019t go public more than I already had; there was too much at stake now.\n I skied back about 300 feet and found old tracks from earlier skiers. The wolf prints crossed them three times. It looked like at least five animals.\n I skied farther. The lodgepole pine trees grew sparser, and their puffy crowns reached closer to the ground. There should be a special word for the type of mourning you know is to come. In a decade, almost 45 million acres of mature pine forest would be dead, representing about a third of the forested area of British Columbia. The beetles would continue to chew their way through whitebark, western white and ponderosa pines, through the U.S. from Oregon to Yellowstone, and would start infesting the jack-pine hybrids across the boreal forest of Canada, producing a total epidemic across North America in an area roughly the size of California. It would surpass any insect outbreak in recorded history and provide fuel for devastating wildfires down the road.\n I passed a grove of bare aspens. The prints were melting in steaming urine. Dark orange-yellow. I kept to the main route out of the narrow valley, adrenaline making my pack lighter. The wolves stayed in front, just out of sight, leaving only traces.\n Their tracks headed straight for the main northbound trail, and I suddenly calmed. The wolves were not pursuing me; they were leading me out of the valley. As the vista widened, my trail converged with one from the south. I turned onto it, while the wolf tracks veered abruptly north. A gust of wind blew over them as they disappeared into the trees.\n  I lit a candle in the snow for my brother and for his spirit in those wolves. The lodgepole pines were tall and strong, and their lofty crowns shadowed me while they steadfastly watched over some sub-alpine firs. I needed to linger here where canyon rock and crystallized tree crowns and packs of wolves had come together. The sun climbed over the granite peaks, and I tilted my face toward it. I pulled out a sandwich, ready to stay forever. I felt welcomed, whole. Pure and clean and untroubled.\n As I ate, I wondered why trees \u2014 these aspens and pines \u2014 would support a mycorrhizal fungus that provides carbon (or nitrogen) to a neighboring tree. Sharing with individuals of its own species, especially its own genetic family, seemed like an obvious benefit. Trees disperse most of their seeds \u2014 by gravity or wind or the odd bird or squirrel \u2014 in their small local area, meaning that many individuals in an immediate neighborhood are related.\n The pines clustered at the edge of this meadow were probably relatives of the same family, their genes diversified by pollen drifting in from distant fathers. These parent trees shared some of the genes of the trees around them, and passing along carbon to each other to increase the survival of their seedlings, their own offspring, would help ensure those genes got passed to future generations. A later study would show that the roots of at least half the pines in a stand are grafted together, and the larger trees subsidize the smaller ones with carbon. Blood runs thicker than water. This makes perfect sense from an individual-selection perspective. It\u2019s Darwinian.\n But my work was showing that some carbon also moved to unrelated individuals, ones of an entirely different species. From birch to fir and back again. I looked at the white aspen, its bark basking in the sun, and wondered if it shuffled carbon to the firs under its crown. The other way around too: firs to aspens.\n Mycorrhizal fungi are generalists \u2014 they colonize plant root tissue, sometimes even intracellularly. They might invest in many tree species to hedge their bets for survival, and the off chance that some carbon would move to a stranger was simply part of the cost of moving it to relatives.\n But this was not what my trees were showing. They were offering me evidence that the pattern of carbon movement was not just by chance, an unfortunate consequence of the moveable feast. No, my trees were demonstrating that they had a lot of skin in the game. Over and over, the experiments showed that carbon moved from a source tree to a sink tree \u2014 from a rich to a poor one \u2014 and that the trees had some control over where and how much carbon moved.\n \u201cWhy would the old pines trust their reproductive success to these birds and animals?\u201d\n A squirrel chattered in the branch of a knotty juniper, waiting for me to toss it scraps of my sandwich. It kept an eye on the Clark\u2019s nutcracker at the top of a pine, probably with a whitebark pine seed in its beak. A raven \u2014 a species that also coveted those energy-rich seeds \u2014 gurgled a song.\n Whitebark pine depends on all these species and more, including grizzly bears, to scatter its heavy seeds. Why would the old pines trust their reproductive success to these birds and animals, whose interest in the seeds was only as food? A few seeds needed to be left to germinate and grow into offspring to ensure the successful reproduction of the elders; why trust that enough would remain? If one of these seed dispersers disappeared, perhaps in a fire or during a particularly harsh winter, then others might deliver the goods. In the same vein, why would a tree pass carbon to a generalist networking fungus \u2014 a Suillus or Cortinarius \u2014 that could then pass the carbon to an unrelated tree? From the pine to the understory subalpine fir?\n I threw my crust toward the squirrel, and the raven and nutcracker swooped to jockey for the prize. Tail twitching, the squirrel launched off its stump. Just as the old whitebark pines were glad to feed their seeds to birds and squirrels, depending on more than one for dispersal, there must be a similar evolutionary advantage to a tree hosting many mycorrhizal fungal species making up the linking network, letting it benefit from a diverse suite as insurance in case one element got lost.\n Maybe even more important was the fungi\u2019s ability to reproduce rapidly. Their short life cycle would enable them to adapt to the rapidly changing environment \u2014 fire and wind and climate \u2014 much faster than the steadfast, long-lived trees could manage. The oldest Rocky Mountain juniper is about 1,500 years old and the oldest whitebark pine around 1,300, in Utah and Idaho, respectively. Meanwhile, the trees here would take decades to produce their first cones and seeds and then do so only sporadically thereafter, but their fungal network could spawn mushrooms and spores each time it rained, potentially enabling its genes to recombine several times a year.\n Maybe the fast-cycling fungi could provide a way for the trees to adjust swiftly to cope with change and uncertainty. Instead of waiting for the next generation of trees to reproduce with more adaptive ways of coping with the soils warming and drying as the climate changes, the mycorrhizal fungi with which the trees are in symbiosis could evolve much faster to acquire increasingly tightly bound resources. Perhaps the Suillus and Boletus and Cortinarius fungi could respond more immediately to the warming winters that had spawned the mountain pine beetle outbreak and help the trees still gather nutrients and water to maintain a level of resistance.\n \u201cMaybe the fast-cycling fungi could provide a way for the trees to adjust swiftly to cope with change and uncertainty.\u201d\n The raven won the battle for my sandwich crust and spiraled past the Clark\u2019s nutcracker in a cloud of feathers and squawks. Not only was the squirrel too slow, it had no hope of wresting anything from the beak of a bird. It would have to unearth whitebark seeds instead, after the birds buried them. Or it could feast on a mushroom left drying in the branches of a pine. It wouldn\u2019t live long with neighbors like the raven and nutcracker if it had to rely only on whitebark pine seeds they\u2019d overlooked. Likewise, the fungus could hedge its bets, hitching its spores on legs or feathers, or catching an updraft to colonize new hosts.\n If the fungus acquires more carbon from one tree than it needs for its own growth and survival, then it could supply the excess to the other networked trees in need and, in so doing, diversify its carbon portfolio \u2014 insurance in acquiring essential resources. The fungus could shuttle carbon produced by a rich aspen to a poor pine in the middle of the summer to ensure it had two different healthy hosts \u2014 sources of photosynthetic carbon \u2014 in case there was a calamity and one died. Like investing in stocks along with bonds in case the market crashed.\n The fungus might not care what species the hosts were, as long as at least one of its carbon sources remained viable. Investing in diverse plant communities is a lower-risk strategy than investing in just one species. The more stressful the environment, the more successful those fungi are at associating with multiple tree species.\n \u201cMaybe birch and fir are in a prisoner\u2019s dilemma where the benefits of group cooperation outweigh the costs of individual prerogatives.\u201d\n  Though my puzzling elated me, something still didn\u2019t quite fit together. As I shouldered my pack and turned to the fork that led south along Bryant Creek, I thought about the greater group of interacting species: the whole community of plants, animals, fungi and bacteria. Individual selection might explain how the fluorescent Pseudomonads interacted with the mycorrhizal fungi of birch to reduce Armillaria root disease in Douglas fir. Could selection also operate at the group level?\n Do cooperative guilds of species \u2014 like guilds of people in societies \u2014 exist? Where multiple tree species are linked by a network for mutual aid, in the way it takes a village to raise a child, despite a risk that there might be cheaters in such guilds? This sharing would work if our behavior was ruled by steadfast tit for tat, like the two-way transfer between birch and fir and their principle of reciprocity, changing the direction of net transfer over the course of the summer. Quid pro quo.\n But what about longer-term shifts in trade? Such as when firs eventually grow taller than birches. Would the quid pro quo rule of engagement change, and how might this compare to our human lives when they become more complex and our relationships transform with age? If someone helps me with childcare, how do I repay her if she moves far away? I wondered why two tree species would continue to trade carbon over the long term, given the uncertainty of the future.\n Maybe birch and fir, and Armillaria ostoyae fungus and fluorescent Pseudomonads, are in a prisoner\u2019s dilemma where, in the long run, the benefits of group cooperation outweigh the costs of individual prerogatives. Studies show time and again that cooperation is commonly chosen in groups, even when betrayal of others could lead to a better individual reward. Fir can\u2019t survive without birch due to a high risk of infection from Armillaria , and birch can\u2019t survive in the long run without fir because too much nitrogen would accumulate in the soil, causing the soil to acidify and birch to decline.\n \u201cEcosystems are similar to human societies \u2014 they\u2019re built on relationships. The stronger those are, the more resilient the system.\u201d\n In this scenario, the little fluorescent Pseudomonad bacteria serve two functions: They produce compounds that inhibit the spread of Armillaria root disease among the trees, ensuring there is still a source of carbon energy for the community, and they transform nitrogen using the carbon exuded by the mycorrhizal network. Was this still in line with selection at the individual species level, or was it at the level of the group?\n Distracted, I practically skied straight into a couple of biologists tracking the radio-collared wolves that had been guiding me earlier. They knew the pack well; the leader was an old mother wolf.\n I asked why they were tracking the wolves. As the shadows of the peaks grew longer, the lead tracker, a lean, windburned woman with a dark ponytail, told me about the pressure to cull wolves in the park to alleviate the decline of caribou. She pushed her sunglasses back on her head as she spoke, radiating a fierce intelligence.\n \u201cIt\u2019s the clear-cutting,\u201d I responded, meeting her gaze. The sprouting willows and alders were attractive browse for moose, so their populations were increasing and attracting wolves. The problem was that the wolves also hunted mountain caribou, which were in precipitous decline due to habitat loss and interactions with people.\n She nodded in agreement as she shifted on her skis and checked that her avalanche beacon was on.\n \u201cYes, the snow gets so deep in the clear-cuts, the caribou can\u2019t outrun the wolves,\u201d she said, looking toward the trail where the mother wolf had gone. And there were more and more clear-cuts as the beetle-killed pines were being salvaged.\n \u201cGotta go or we\u2019ll lose them,\u201d her assistant said, squinting at a tracking device and tightening the chest strap on his pack. The researcher\u2019s eyes narrowed toward the pass ahead.\n \u201cWe can think of an ecosystem of wolves, caribou, trees and fungi creating biodiversity just as an orchestra of woodwind, brass, percussion and string musicians assemble into a symphony.\u201d\n \u201cSee ya,\u201d she said, and I said goodbye too, appreciating her unwavering pursuit. They evaporated into the pines as seamlessly as they had appeared, reminding me that a person could easily disappear out here without a trace. It was past noon. I had to keep moving or I\u2019d be skiing the last miles in the dark.\n The trail along Bryant Creek was fast and gently downhill, and as I raced past swaying pines, the sun at my back and the avalanche tracks falling behind me, I was grateful the wolf biologists had packed down the trail with their skis. I reached my car as the sky\u2019s pink and purple stripes faded to black across the tilted sheets of sedimentary crust.\n Ecosystems are similar to human societies \u2014 they\u2019re built on relationships. The stronger those are, the more resilient the system. And since our world\u2019s systems are composed of individual organisms, they have the capacity to change. We creatures adapt, our genes evolve, we can learn from experience. A system is ever-changing because its parts \u2014 the trees and fungi and people \u2014 are constantly responding to one another and to the environment. Our success in coevolution \u2014 our success as a productive society \u2014 is only as good as the strength of the bonds with other individuals and species. Out of the resulting adaptation and evolution emerge behaviors that help us survive, grow and thrive.\n We can think of an ecosystem of wolves, caribou, trees and fungi creating biodiversity just as an orchestra of woodwind, brass, percussion and string musicians assemble into a symphony. Or how our brains, composed of neurons, axons and neurotransmitters, produce thought and compassion. Or the way brothers and sisters join to overcome a trauma like illness or death \u2014 the whole greater than the sum of the parts.\n The cohesion of biodiversity in a forest, the musicians in an orchestra, the members of a family growing through conversation and feedback, through memories and learning from the past, even \n......", "posttime": "2021-06-29 22:57:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u68ee\u6797,intelligent,\u6811\u6728", "title": "\u806a\u660e\u7684\u68ee\u6797 ", "title_en": "The Intelligent Forest", "transed": 1, "url": "https://www.noemamag.com/the-intelligent-forest", "via": "", "real_tags": ["\u68ee\u6797", "\u6811\u6728"]}]
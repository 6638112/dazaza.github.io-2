[{"category": "", "categoryclass": "", "imagename": "5193efd73d4b285bcceb7a8d517ad1d1.jpeg", "infoid": 1032244, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PermalLink GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\n\u6211\u7ecf\u5e38\u5141\u8bb8\u81ea\u5df1\u5377\u5165\u5173\u4e8e\u8f6f\u4ef6\u518d\u8bb8\u53ef\u7684\u8ba8\u8bba\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u6211\u770b\u5230\u5728Andover\u4e0a\u91cd\u590d\u4e86\u540c\u6837\u7684\u6709\u95ee\u9898\u7684\u4e3b\u5f20\u3002\u8ba8\u8bba\u603b\u662f\u5f15\u5411\u76f8\u540c\u7684\u5730\u65b9\uff0c\u7ed3\u679c\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u6700\u597d\u5199\u4e0b\u6211\u7684\u7acb\u573a\uff0c\u5e76\u56de\u7b54\u51e0\u4e2a\u5e38\u89c1\u7684\u53cd\u9a73\u3002\n\u6211\u9996\u5148\u8981\u8bf4\u7684\u662f\uff0c\u6211\u662f\u4e00\u4e2a\u76f8\u5f53\u7cdf\u7cd5\u7684\u6d3b\u52a8\u5bb6\uff0c\u6211\u628a\u8fd9\u5f52\u56e0\u4e8e\u6211\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e00\u4e2a\u975e\u5e38\u52a1\u5b9e\u7684\u4eba\u3002\u867d\u7136\u6211\u53cd\u5bf9\u4e00\u5207\u5f62\u5f0f\u7684\u77e5\u8bc6\u4ea7\u6743\uff0c\u4f46\u5f88\u5c11\u6709\u4eba\u8fd9\u6837\u505a\u3002\u6211\u5b9a\u671f\u53d1\u5e03\u7248\u6743\u5f52\u6211\u6240\u6709\u7684\u8f6f\u4ef6\u3002\u6211\u4e3a\u7248\u6743\u5a92\u4f53\u4ed8\u8d39\u6d88\u8d39\u3002\u6211\u901a\u5e38\u907f\u514d\u4fb5\u72af\u7248\u6743\u3002\u6211\u751a\u81f3\u634f\u4f4f\u9f3b\u5b50\u7b7e\u4e86\u51e0\u9879\u4e13\u5229\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4ef6\u6743\u5b9c\u4e4b\u8ba1\uff0c\u6211\u4e0d\u613f\u610f\u6b7b\u5728\u8fd9\u5ea7\u5c71\u4e0a\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u5f53\u63d0\u5230UNLICENSE\u5e76\u5728\u5c3d\u53ef\u80fd\u591a\u7684\u5730\u65b9\u5e94\u7528UNLICENSE\u65f6\uff0c\u6211\u5bf9\u77e5\u8bc6\u4ea7\u6743\u7684\u53cd\u5bf9\u8868\u73b0\u51fa\u4e86\u4e00\u4e9b\u975e\u5e38\u8f7b\u677e\u7684\u5021\u5bfc\u3002\u4f46\u5373\u4f7f\u662f\u8fd9\u4e00\u70b9\u4e5f\u88ab\u5b9e\u9645\u7684\u8003\u8651\u653e\u5728\u4e00\u8fb9\uff0c\u56e0\u4e3a\u6211\u901a\u5e38\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u672a\u7ecf\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u53cc\u91cd\u8bb8\u53ef\uff0c\u56e0\u4e3a\u6709\u4e9b\u4eba\u5bb3\u6015\u672a\u7ecf\u8bb8\u53ef\u3002\n\u6211\u53cd\u5bf9\u77e5\u8bc6\u4ea7\u6743(\u4e13\u5229\u3001\u7248\u6743\u3001\u5546\u6807\u3001\u5546\u6807\u6743\u7b49)\u3002\u5b83\u672c\u8eab\u65e2\u6709\u601d\u60f3\u4e0a\u7684\u987e\u8651\uff0c\u4e5f\u6709\u73b0\u5b9e\u4e0a\u7684\u987e\u8651\u3002\n\u4ece\u610f\u8bc6\u5f62\u6001\u4e0a\u8bb2\uff0c\u8fd9\u5f88\u7b80\u5355\uff1a\u6211\u4e0d\u76f8\u4fe1\u60f3\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u8d22\u4ea7\u5b8c\u5168\u62e5\u6709\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u8ba4\u4e3a\u8d22\u4ea7\u662f\u66b4\u529b\u89e3\u51b3\u7a00\u7f3a\u8d44\u6e90\u51b2\u7a81\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u4f46\u662f\uff0c\u60f3\u6cd5\u5e76\u4e0d\u7a00\u7f3a\uff0c\u56e0\u6b64\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u8d22\u4ea7\uff0c\u56e0\u6b64\u4e0d\u5e94\u8be5\u88ab\u89c6\u4e3a\u8d22\u4ea7\u3002\u8fd9\u662f\u6240\u6709\u77e5\u8bc6\u4ea7\u6743\u8d56\u4ee5\u5b58\u5728\u7684\u57fa\u672c\u5047\u8bbe\uff0c\u56e0\u6b64\uff0c\u6211\u4ece\u57fa\u672c\u539f\u5219\u4e0a\u62d2\u7edd\u5b83\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6784\u6210\u77e5\u8bc6\u4ea7\u6743\u7684\u6cd5\u9662\u548c\u653f\u7b56\u5df2\u7ecf\u53d8\u5f97\u8150\u8d25\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5728\u4e16\u754c\u5404\u5730\u4ea7\u751f\u4e25\u91cd\u7684\u8d1f\u9762\u540e\u679c\u3002\u5176\u4e2d\u4e00\u4e2a\u5927\u95ee\u9898\u662f\u91cd\u8981\u836f\u54c1\u7684\u6210\u672c\u3002\u4f46\u6211\u8dd1\u9898\u4e86\uff0c\u4fe1\u606f\u98df\u5229\u4e3b\u4e49\u6bd4\u6211\u6240\u80fd\u8bb2\u5230\u7684\u66f4\u8be6\u7ec6\u3002\u5f53\u7136\uff0c\u6709\u4eba\u53cd\u5bf9\u8fd9\u4e00\u70b9\u3002\u4f8b\u5982\uff0c\u7f3a\u4e4f\u5784\u65ad\u4fdd\u62a4\u53ef\u80fd\u4f1a\u963b\u6b62\u4eba\u4eec\u81ea\u5df1\u5236\u9020\u836f\u7269\uff0c\u7f3a\u4e4f\u7ecf\u6d4e\u6fc0\u52b1\u3002\u4f46\u6211\u603b\u662f\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u7ad9\u4e0d\u4f4f\u811a\u7684\u8bba\u70b9\uff0c\u56e0\u4e3a\u5386\u53f2\u4e0a\u6709\u5f88\u591a\u4f8b\u5b50\u8868\u660e\uff0c\u5373\u4f7f\u6ca1\u6709\u5784\u65ad\u4fdd\u62a4\u7684\u5956\u52b1\uff0c\u4eba\u4eec\u4e5f\u5728\u5f00\u53d1\u91cd\u8981\u7684\u836f\u7269\u3002\u4fe1\u606f\u5c01\u5efa\u4e3b\u4e49\u5728\u8fd9\u65b9\u9762\u7684\u63a2\u7d22\u6bd4\u6211\u66f4\u597d\u3002\n\u4ece\u8fd9\u4e00\u53cd\u5bf9\u610f\u89c1\u6765\u770b\uff0c\u6211\u53cd\u5bf9\u7248\u6743\u5de6\u6d3e\u7684\u7406\u7531\u5f88\u7b80\u5355\uff1a\u7248\u6743\u5de6\u6d3e\u9700\u8981\u7248\u6743\u624d\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u56e0\u6b64\uff0c\u6211\u53cd\u5bf9\u5b83\u3002\n\u5bf9\u6211\u53cd\u5bf9\u7248\u6743\u5de6\u6d3e\u7684\u4e00\u4e2a\u5e38\u89c1\u53cd\u9a73\u662f\uff0c\u5927\u591a\u6570\u4e25\u8083\u7684\u7248\u6743\u5de6\u6d3e\u652f\u6301\u8005\u4e5f\u662f\u77e5\u8bc6\u4ea7\u6743\u7684\u53cd\u5bf9\u8005(\u6216\u8005\u81f3\u5c11\u662f\u53cd\u5bf9\u7248\u6743)\u3002\u56e0\u6b64\uff0c\u6211\u6240\u9700\u8981\u7684\u5c31\u662f\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u624d\u80fd\u6e05\u9192\u8fc7\u6765\uff0c\u652f\u6301\u7248\u6743\u4f5c\u4e3a\u5bf9\u6297\u7248\u6743\u672c\u8eab\u7684\u6218\u672f\u6b66\u5668\u3002\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e9b\u95ee\u9898\u3002\n\u9996\u5148\uff0c\u5982\u679c\u6211\u53cd\u5bf9\u7248\u6743\u672c\u8eab\uff0c\u90a3\u4e48\u4f7f\u7528\u6211\u53cd\u5bf9\u7248\u6743\u672c\u8eab\u7684\u76f8\u540c\u5236\u5ea6\u771f\u7684\u53ef\u4ee5\u5417\uff1f\u6211\u8ba4\u4e3a\u201c\u662f\u201d\u662f\u7edd\u5bf9\u6709\u9053\u7406\u7684\u7b54\u6848\uff0c\u4f46\u6211\u8ba4\u4e3a\u201c\u4e0d\u201d\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u53ef\u80fd\u7c7b\u4f3c\u4e8e\u548c\u5e73\u4e3b\u4e49\u8005\u7684\u7acb\u573a\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u5e76\u4e0d\u8ba4\u4e3a\u81ea\u5df1\u662f\u548c\u5e73\u4e3b\u4e49\u8005\u3002\n\u5176\u6b21\uff0c\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5047\u8bbe\uff0c\u4e00\u4e2a\u6ca1\u6709\u77e5\u8bc6\u4ea7\u6743\u7684\u4e16\u754c\u548c\u4e00\u4e2a\u5c06\u56db\u4e2a\u8f6f\u4ef6\u81ea\u7531\u5199\u5165\u6cd5\u5f8b(\u6709\u6548\u5730\u4f7f\u7248\u6743\u666e\u904d\u5b58\u5728)\u7684\u4e16\u754c\u5c06\u662f\u7c7b\u4f3c\u7684\u4e16\u754c\u3002\u6211\u8ba4\u4e3a\u4ed6\u4eec\u4e0d\u4f1a\u662f\u8fd9\u6837\u7684\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u6ca1\u6709\u77e5\u8bc6\u4ea7\u6743\u7684\u4e16\u754c\u91cc\uff0c\u6211\u4f1a\u652f\u6301\u4eba\u4eec\u53d1\u5e03\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u6743\u5229\uff0c\u540c\u65f6\u4f7f\u5176\u6e90\u4ee3\u7801\u53d8\u5f97\u6a21\u7cca\u6216\u65e0\u6cd5\u83b7\u5f97\u3002\u8fd9\u660e\u663e\u8fdd\u53cd\u4e86\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u6240\u63cf\u8ff0\u7684\u56db\u4e2a\u57fa\u672c\u81ea\u7531\u3002\u7136\u800c\uff0c\u5728\u4e00\u4e2a\u6ca1\u6709\u77e5\u8bc6\u4ea7\u6743\u7684\u4e16\u754c\u91cc\u505a\u8fd9\u4ef6\u4e8b\u662f\u5408\u6cd5\u7684-\u4f46\u53ef\u80fd\u4e0d\u662f\u9053\u5fb7\u7684-\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u6709\u76f8\u53cd\u7684\u4e00\u9762\uff1a\u5728\u4e00\u4e2a\u6ca1\u6709\u77e5\u8bc6\u4ea7\u6743\u7684\u4e16\u754c\u91cc\uff0c\u7528\u6237\u5c06\u53ef\u4ee5\u81ea\u7531\u5730\u5bf9\u6240\u8bf4\u7684\u7a0b\u5e8f\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\uff0c\u800c\u4e0d\u7528\u62c5\u5fc3\u6cd5\u5f8b\u62a5\u590d\u3002\n\u7b2c\u4e09\uff0c\u53cd\u5bf9\u7248\u6743\u4e3b\u4e49\u6709\u73b0\u5b9e\u7684\u7406\u7531\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u53d1\u5e03\u6e90\u4ee3\u7801\u65f6\uff0c\u6211\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u4f7f\u7528\u5b83\uff0c\u65e0\u8bba\u5b83\u662f\u5176\u4ed6\u4e2a\u4eba\u8fd8\u662f\u5927\u516c\u53f8\u3002\u8003\u8651\u5230\u5f53\u524d\u7684\u77e5\u8bc6\u4ea7\u6743\u5236\u5ea6\uff0c\u4f01\u4e1a\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u90fd\u4f1a\u53d7\u5230\u6fc0\u52b1\uff0c\u53cd\u5bf9\u4f7f\u7528\u7248\u6743\u8f6f\u4ef6\u3002\u56e0\u6b64\uff0c\u516c\u53f8\u7ecf\u5e38\u907f\u514d\u4f7f\u7528\u7248\u6743\u8f6f\u4ef6\uff0c\u5c24\u5176\u662f\u56fe\u4e66\u9986\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u516c\u53f8\u5728\u81ea\u7531/\u5f00\u6e90\u8f6f\u4ef6\u4e16\u754c\u672c\u8eab\u4e5f\u626e\u6f14\u7740\u5de8\u5927\u7684\u89d2\u8272\uff0c\u8fd9\u5bfc\u81f4\u4e86\u7cfb\u7edf\u7684\u7f51\u7edc\u6548\u5e94\uff0c\u4fc3\u4f7f\u4eba\u4eec\u5f3a\u70c8\u5730\u503e\u5411\u4e8e\u4f7f\u7528\u8bb8\u53ef\u8bb8\u53ef\u3002\u56e0\u6b64\uff0c\u6487\u5f00\u610f\u8bc6\u5f62\u6001\u548c\u6fc0\u8fdb\u4e3b\u4e49\u4e0d\u8c08\uff0c\u5982\u679c\u6211\u7528\u7248\u6743\u8bb8\u53ef\u51fa\u7248\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u5b83\u5c31\u4e0d\u592a\u53ef\u80fd\u88ab\u4eba\u4eec\u4f7f\u7528\uff0c\u8fd9\u662f\u5f88\u73b0\u5b9e\u7684\uff0c\u8fd9\u963b\u788d\u4e86\u6211\u7684\u76ee\u6807\u3002\n\u7b2c\u56db\uff0c\u4f7f\u7528\u7248\u6743\u4fdd\u62a4\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u610f\u5473\u7740\u6211\u7684\u6700\u9ad8\u76ee\u6807\u662f\u4fdd\u62a4\u56db\u9879\u57fa\u672c\u81ea\u7531\u3002\u4f46\u6211\u7684\u6700\u9ad8\u613f\u671b\u5b9e\u9645\u4e0a\u662f\u7ed3\u675f\u77e5\u8bc6\u4ea7\u6743\u672c\u8eab\uff0c\u4ece\u800c\u7ed3\u675f\u56fd\u5bb6\u5bf9\u5784\u65ad\u6743\u7684\u5f3a\u5236\u6267\u884c\u3002\n\u6b63\u5982\u6211\u4e0a\u9762\u6240\u8bf4\u7684\uff0c\u6211\u662f\u4e00\u4e2a\u76f8\u5f53\u7cdf\u7cd5\u7684\u6d3b\u52a8\u5bb6\u3002\u4e00\u4e2a\u597d\u7684\u6d3b\u52a8\u5bb6\u613f\u610f\u653e\u5f03\u4e00\u5207\u6765\u6362\u53d6\u5021\u5bfc\u3002\u4f46\u6211\u66f4\u5173\u5fc3\u7684\u662f\u5c3d\u53ef\u80fd\u591a\u5730\u5206\u4eab\u6211\u7684\u4ee3\u7801\u3002\n\u5982\u679c\u8f6f\u4ef6\u81ea\u7531\u662fFSF\u6240\u63cf\u8ff0\u7684\u56db\u9879\u57fa\u672c\u81ea\u7531\uff0c\u90a3\u4e48\uff0c\u4e0d\uff0c\u6211\u4e0d\u652f\u6301\u3002\u7136\u800c\uff0c\u6211\u786e\u5b9e\u652f\u6301\u8f6f\u4ef6\u81ea\u7531\uff0c\u56e0\u4e3a\u6211\u4f1a\u5021\u5bfc\u5176\u4ed6\u4eba\u5c3d\u53ef\u80fd\u5730\u63d0\u4f9b\u8fd9\u79cd\u81ea\u7531\u3002\u6211\u751a\u81f3\u53ef\u4ee5\u8bf4\uff0c\u5265\u593a\u7528\u6237\u7684\u8fd9\u4e9b\u57fa\u672c\u81ea\u7531\u662f\u4e0d\u9053\u5fb7\u7684\u3002\u4f46\u6211\u4e0d\u4f1a\u652f\u6301\u6cd5\u5f8b\u6765\u6267\u884c\u5b83\u4eec\uff0c\u56e0\u4e3a\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u6837\u7684\u6cd5\u5f8b\u5e94\u8be5\u5b58\u5728\uff0c\u800c\u4e0d\u9700\u8981\u6709\u60f3\u6cd5\u53ef\u4ee5\u62e5\u6709\u7684\u6982\u5ff5\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u6211\u5f97\u51fa\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\uff0c\u4f46\u5728\u7f51\u6c11\u4e2d\u4f3c\u4e4e\u7ecf\u5e38\u88ab\u5ffd\u89c6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6cd5\u5f8b\u548c\u9053\u5fb7\u4e0d\u662f\u4e00\u4f53\u7684\u3002\u4e00\u4e2a\u4eba\u53ef\u4ee5\u53cd\u5bf9\u7528\u6cd5\u5f8b\u6765\u9650\u5236\u4e00\u4e9b\u4e0d\u53d7\u6b22\u8fce\u7684\u884c\u4e3a\uff0c\u540c\u65f6\u53d1\u73b0\u8fd9\u79cd\u884c\u4e3a\u662f\u4e0d\u9053\u5fb7\u7684\u3002\n\u6284\u88ad\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u6211\u575a\u51b3\u53cd\u5bf9\u527d\u7a83\uff0c\u5373\u4f7f\u8bb8\u53ef\u8bc1\u5141\u8bb8\u3002\u4f46\u6211\u4e5f\u53cd\u5bf9\u7528\u6cd5\u5f8b\u6765\u904f\u5236\u527d\u7a83\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u627f\u8ba4\u601d\u60f3\u662f\u8d22\u4ea7\u7684\u6cd5\u5f8b\u3002\n\u8fd9\u901a\u5e38\u51fa\u73b0\u5728\u8ba8\u8bba\u4e2d\uff0c\u4eba\u4eec\u5728\u8bb8\u53ef\u4e0b\u53d1\u5e03\u5141\u8bb8\u4e00\u4e9b\u4e0d\u826f\u884c\u4e3a(\u5982\u6284\u88ad)\u7684\u8f6f\u4ef6\uff0c\u7136\u540e\u5728\u6284\u88ad\u53d1\u751f\u65f6\u62b1\u6028\u3002\u4eba\u4eec\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u7528\u4e00\u4e9b\u5439\u6bdb\u6c42\u75b5\u7684\u5e9f\u8bdd\u6765\u56de\u5e94\uff0c\u55ef\uff0c\u8fd9\u5c31\u662f\u4f60\u4f7f\u7528\u8bb8\u53ef\u8bc1\u5141\u8bb8\u8fd9\u79cd\u884c\u4e3a\u7684\u7ed3\u679c\u3002\u4f46\u8fd9\u5b8c\u5168\u5ffd\u7565\u4e86\u4e00\u4e2a\u7ec6\u5fae\u7684\u5dee\u522b\uff0c\u5373\u4e00\u4e2a\u4eba\u53ef\u80fd\u51fa\u4e8e\u9053\u5fb7\u539f\u56e0\u53cd\u5bf9\u67d0\u4e9b\u884c\u4e3a\uff0c\u4f46\u53ef\u80fd\u4e0d\u60f3\u91ca\u653e\u56fd\u5bb6\u5728\u963b\u6b62\u5b83\u65b9\u9762\u7684\u5168\u90e8\u5f3a\u5236\u6027\u529b\u91cf\u3002\n\u539f\u5219\u4e0a\uff0c\u6211\u5bf9\u4efb\u4f55\u514d\u8d39\u7248\u6743\u8bb8\u53ef\u90fd\u6ca1\u610f\u89c1\uff0c\u56e0\u4e3a\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u662f\u4f60\u80fd\u9009\u62e9\u9000\u51fa\u77e5\u8bc6\u4ea7\u6743\u4f53\u7cfb\u7684\u6700\u8fd1\u8ddd\u79bb\u3002\u7136\u800c\uff0c\u6211\u7279\u522b\u4f7f\u7528\u672a\u6388\u6743\u662f\u56e0\u4e3a\u5b83\u5f15\u8d77\u4e86\u4eba\u4eec\u5bf9\u7248\u6743\u672c\u8eab\u7684\u95ee\u9898\u7684\u6ce8\u610f\uff0c\u540c\u65f6\u5b83\u672c\u8eab\u4e5f\u662f\u65e0\u7248\u6743\u7684\u3002\u5177\u4f53\u5730\u8bf4\uff0cunLicense.org\u7684\u7b2c\u4e00\u53e5\u8bdd\u662f\u8fd9\u6837\u5199\u7684\uff1a\n\u672a\u6388\u6743\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u7528\u4e8e\u5426\u8ba4\u5bf9\u60a8\u7f16\u5199\u7684\u8f6f\u4ef6\u7684\u7248\u6743\u5784\u65ad\u5174\u8da3\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u5c06\u60a8\u7684\u8f6f\u4ef6\u5949\u732e\u7ed9\u516c\u6709\u9886\u57df\u7684\u6a21\u677f\u3002\n\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u65e0\u8bc1\u7684\u8fc7\u7a0b\u4e2d\u6709\u4e00\u79cd\u6fc0\u8fdb\u4e3b\u4e49\u7684\u6c14\u606f\u3002\u8fd9\u5c31\u662f\u6211\u9009\u62e9\u5b83\u800c\u4e0d\u662f\u5176\u4ed6\u65e0\u7248\u6743\u8bb8\u53ef\u7684\u539f\u56e0\u3002", "note_en": "Permalink     GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n       I regularly allow myself to get drawn into discussions on softwarelicensing, largely because I see the same problematic claims repeated over andover. Invariably, the discussion leads to the same places with varying results.So I think it&#39;s best to write down my position and answer a few commonrebuttals.\n I&#39;ll start by saying that I am a rather terrible activist, and I attribute thisto the fact that I see myself as a deeply practical person. While I opposeall forms of intellectual property, this opposition is rarely practiced. Iregularly publish software that is copyrighted by me. I pay for and consumecopyrighted media. I generally avoid violating copyright. I&#39;ve even held mynose and signed a couple patents, because that was the expedient thing to doand it wasn&#39;t a hill I was willing to die on.\n In practice, my opposition to intellectual property appears in some very lightadvocacy when it comes up and the application of the UNLICENSEin as many places as possible.But even that gets pushed aside by practical concerns, as I typically duallicense software under both the MIT and the UNLICENSE, because some folks are afraid of the UNLICENSE.\n My opposition to intellectual property (patents, copyright, trademarks, tradesecrets, etc.) itself comes from both ideological and practical concerns.\n Ideologically, it&#39;s pretty simple: I don&#39;t believe that ideas can bemeaningfully owned as property. That is, I see property as a means tonon-violently resolve conflict over scarce resources. But ideas are not scarce,and thus, to me, they are not property and thus should not be treated asproperty. This is a fundamental assumption on which all intellectual propertyrests, and so, I reject it from first principles.\n Practically, the courts and policies that make up intellectual property lawhave become corrupt, and this can have significant negative consequences aroundthe world. One of the big ones is the cost of important drugs. But I digress, Information Feudalismcovers this in more detail than I ever could. There are of course objections tothis. For example, the lack of monopoly protections might prevent people frommaking the drugs themselves, lacking financial incentive. But I&#39;ve always foundthis to be a weak argument, as there are plenty of examples in history of people developing important medication even without the reward of monopoly protection.Information Feudalism explores this better than I could.\n From this opposition, my opposition to copyleft follows simply: copyleftrequires copyright to function, and thus, I oppose it.\n  A common rebuttal to my opposition to copyleft is that most serious copyleftproponents are  also opponents of intellectual property too (or at least,oppose copyright). And thus, all that is required is for me to understand thishack in order to come to my senses and support copyleft as a tactical weaponagainst copyright itself. But there are some problems here.\n Firstly, if I oppose copyright itself, then is it really okay to usethe same system I oppose against itself? I think &#34;yes&#34; is absolutely adefensible answer, but I think &#34;no&#34; is as well. It is perhaps analogous to thestance of a pacifist. With that said, I don&#39;t consider myself a pacifist.\n Secondly, this somewhat assumes that a world without intellectual property anda world in which the four software freedoms were codified into law (effectivelymaking copyleft universal) would be similar worlds. I don&#39;t think they wouldbe. For example, in a world without intellectual property, I would support the right of persons to publish binary programs while making its source codeobfuscated or impossible to attain. This is a clear violation of the four essential freedomsas described by the Free Software Foundation. Yet, it would be legal---butperhaps not ethical---to do it in a world in which intellectual property doesnot exist. However, there is a flip side to this: in a world withoutintellectual property, users would be free to reverse engineer said programswithout fear of legal reprisal.\n Thirdly, there are practical reasons to oppose copyleft. Namely, when I publishsource code, one of my main goals is for as many people as possible to use it,regardless of whether it&#39;s other individuals or giant corporations. Given thecurrent intellectual property regime, corporations are incentivized against theuse of copyleft software in a large variety of circumstances. Thus, copyleftsoftware, particularly libraries, is regularly avoided by corporations. Sincesome of these corporations also play a huge role in the FOSS world itself, thisleads to systemic network effects that push folks strongly towards the use ofpermissive licenses. Thus, putting aside ideology and activism, it is simply areality that if I publish a library with a copyleft license, it&#39;s less likelyto be used by folks, which is inhibits my goal.\n Fourthly, the use of copyleft somewhat implies that my highest goal is thepreservation of the four essential freedoms. But my highest desire is actuallyto end intellectual property itself and thus the state&#39;s enforcement ofmonopoly power.\n As I said above, I&#39;m a pretty terrible activist. A good activist is willing togive things up in exchange for advocacy. But I care more about sharing my codeas much as possible.\n  If software freedom is the four essential freedoms as described by the FSF,then, no, I don&#39;t. However, I do support software freedom in the sense thatI would advocate for others to provide that freedom as much as possible. Imight even go as far to say that it would be unethical to deny those essentialfreedoms to users. But I would not support laws to enforce them because I don&#39;tthink such laws should exist without requiring the notion that ideas can beowned.\n This leads to an important distinction that I draw but that seems routinelyignored among denizens of the web. Namely, that laws and ethics are not one inthe same. One can be opposed to using a law to inhibit some undesirablebehavior while simultaneously finding that behavior unethical.\n A good example of this is plagiarism. I am categorically opposed to plagiarism,even if the license allows it. But I am also opposed to using laws to inhibitplagiarism, again, because it requires laws that recognize ideas as property.\n This commonly comes up in discussions where folks release software under alicense that allows some bad behavior (like plagiarism) and then complainwhen that plagiarism happens. People inevitably respond with some low browblame-the-victim nonsense, &#34;well, that&#39;s what you get for using a license thatallows it.&#34; But this completely neglects the nuance that one might be opposedto some behavior on ethical grounds but might not want to unleash the fullcoercive power of the state on preventing it.\n  In principle, I&#39;m okay with any copyfreelicense, because it is in practice as close as you can get to opting out of theintellectual property system. However, I specifically use the UNLICENSE becauseit draws attention to the problems with copyright itself while also itselfbeing copyfree. Specifically, the first sentence from unlicense.org reads:\n The Unlicense is a template for  disclaiming copyright monopoly interestin software you&#39;ve written; in other words, it is a template for dedicatingyour software to the public domain.\n Thus, there is a flair of activism involved in using the UNLICENSE. That&#39;s whyI choose it over other copyfree licenses.", "posttime": "2020-10-30 14:40:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u8bb8\u53ef,licensing,\u7248\u6743", "title": "\u8f6f\u4ef6\u8bb8\u53ef\u548c\u6211\u5bf9\u7248\u6743\u7684\u53cd\u5bf9", "title_en": "Software licensing and my opposition to copyleft", "transed": 1, "url": "https://github.com/BurntSushi/notes/blob/master/2020-10-29_licensing-and-copyleft.md", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u8bb8\u53ef", "licensing", "\u7248\u6743"]}, {"category": "", "categoryclass": "", "imagename": "48e8186e18838e2481c8bcce1da45e46.jpg", "infoid": 1032243, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u4ece\u81ea\u884c\u8f66\u4e0a\u6454\u4e0b\u6765\uff0c\u4f60\u5f88\u53ef\u80fd\u4f1a\u7559\u4e0b\u90a3\u6bb5\u7ecf\u5386\u7684\u7535\u5f71\u8bb0\u5fc6\uff1a\u98ce\u5439\u8fc7\u4f60\u7684\u5934\u53d1\uff0c\u8def\u4e0a\u7684\u9e45\u5375\u77f3\uff0c\u7136\u540e\u662f\u75bc\u75db\u3002\n\u8fd9\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u60c5\u8282\u8bb0\u5fc6\u3002\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u5728\u201c\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u9662\u9662\u520a\u201d\u4e0a\u62a5\u9053\uff0c\u73b0\u5728\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u786e\u5b9a\u4e86\u4eba\u8111\u4e2d\u4f7f\u8fd9\u79cd\u8bb0\u5fc6\u6210\u4e3a\u53ef\u80fd\u7684\u7ec6\u80de\u3002\n\u8fd9\u4e9b\u7ec6\u80de\u88ab\u79f0\u4e3a\u65f6\u95f4\u7ec6\u80de\uff0c\u5f53\u8bb0\u5fc6\u5f62\u6210\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u8bb0\u5fc6\u4e0a\u8d34\u4e0a\u4e00\u79cd\u65f6\u95f4\u6233\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u56de\u5fc6\u4e00\u7cfb\u5217\u4e8b\u4ef6\u6216\u7ecf\u5386\u3002\n\u8fd9\u9879\u7814\u7a76\u7684\u8d44\u6df1\u4f5c\u8005\u3001\u8fbe\u62c9\u65af\u5fb7\u514b\u8428\u65af\u5927\u5b66\u897f\u5357\u533b\u5b66\u4e2d\u5fc3(University Of Texas Southwest Medical Center)\u7684\u795e\u7ecf\u5916\u79d1\u533b\u751f\u5e03\u62c9\u5fb7\u5229\u00b7\u83b1\u52a0\u535a\u58eb(Dr.Bradley Lega)\u8bf4\uff0c\u901a\u8fc7\u8ba9\u65f6\u95f4\u7ec6\u80de\u521b\u5efa\u8de8\u65f6\u95f4\u7684\u7d22\u5f15\uff0c\u4f60\u53ef\u4ee5\u5c06\u6240\u6709\u4e1c\u897f\u4ee5\u4e00\u79cd\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\u3002\n\u51e0\u5341\u5e74\u524d\uff0c\u5728\u556e\u9f7f\u52a8\u7269\u4e2d\u53d1\u73b0\u4e86\u65f6\u95f4\u7ec6\u80de\u3002\u4f46\u662f\u8fd9\u9879\u65b0\u7684\u7814\u7a76\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u6700\u7ec8\u7684\u4ef2\u88c1\u8005\u6c38\u8fdc\u662f\u4eba\u8111\uff0c\u7ebd\u7ea6\u5927\u5b66\u6bd4\u683c\u65af\u795e\u7ecf\u79d1\u5b66\u6559\u6388\u683c\u5965\u5c14\u57fa\u00b7\u5e03\u5179\u8428\u57fa\u535a\u58eb(Dr.Gy\u00f6rgy Buzs\u00e1ki)\u8bf4\u3002Buzs\u00e1ki\u4e0d\u662f\u8fd9\u9879\u7814\u7a76\u7684\u4f5c\u8005\uff0c\u4f46\u786e\u5b9e\u7f16\u8f91\u4e86\u624b\u7a3f\u3002\n\u83b1\u52a0\u548c\u4ed6\u7684\u56e2\u961f\u901a\u8fc7\u7814\u7a7627\u540d\u6b63\u5728\u7b49\u5f85\u4e25\u91cd\u766b\u75eb\u624b\u672f\u7684\u4eba\u7684\u5927\u8111\uff0c\u53d1\u73b0\u4e86\u65f6\u95f4\u7ec6\u80de\u3002\u4f5c\u4e3a\u624b\u672f\u524d\u51c6\u5907\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u60a3\u8005\u5728\u6d77\u9a6c\u4f53\u548c\u53e6\u4e00\u4e2a\u6d89\u53ca\u5bfc\u822a\u3001\u8bb0\u5fc6\u548c\u65f6\u95f4\u611f\u77e5\u7684\u5927\u8111\u533a\u57df\u653e\u7f6e\u4e86\u7535\u6781\u3002\n\u5728\u5b9e\u9a8c\u4e2d\uff0c\u60a3\u8005\u7814\u7a76\u4e86\u7b14\u8bb0\u672c\u7535\u8111\u5c4f\u5e55\u4e0a\u51fa\u73b0\u768412\u621615\u4e2a\u5355\u8bcd\u7684\u5e8f\u5217\uff0c\u65f6\u95f4\u7ea6\u4e3a30\u79d2\u3002\u7136\u540e\uff0c\u5728\u4f11\u606f\u540e\uff0c\u4ed6\u4eec\u88ab\u8981\u6c42\u56de\u5fc6\u4ed6\u4eec\u6240\u770b\u5230\u7684\u5355\u8bcd\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u6d4b\u91cf\u5355\u4e2a\u8111\u7ec6\u80de\u7684\u6d3b\u52a8\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5728\u6bcf\u4e2a\u5355\u8bcd\u5e8f\u5217\u7684\u7279\u5b9a\u65f6\u95f4\u90fd\u4f1a\u6709\u5c11\u91cf\u7684\u58f0\u97f3\u88ab\u6fc0\u53d1\u3002\n\u83b1\u52a0\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u7684\u65f6\u95f4\u5355\u5143\u5728\u8fd9\u4e2a\u5927\u7ea630\u79d2\u7684\u7a97\u53e3\u5185\u6807\u51fa\u4e86\u79bb\u6563\u7684\u65f6\u95f4\u6bb5\u3002\n\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u65f6\u95f4\u6233\u4f3c\u4e4e\u53ef\u4ee5\u5e2e\u52a9\u4eba\u4eec\u56de\u5fc6\u8d77\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u770b\u5230\u8fc7\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4ee5\u53ca\u6309\u4ec0\u4e48\u987a\u5e8f\u770b\u8fc7\u3002\u5f53\u6211\u4eec\u91cd\u6e29\u4ece\u81ea\u884c\u8f66\u4e0a\u6454\u4e0b\u6765\u7684\u7ecf\u5386\u65f6\uff0c\u5927\u8111\u53ef\u80fd\u4e5f\u4f1a\u4f7f\u7528\u540c\u6837\u7684\u65b9\u6cd5\u3002\nBuzs\u00e1ki\u8bf4\uff0c\u8fd9\u4e9b\u7ed3\u679c\u6709\u52a9\u4e8e\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6d77\u9a6c\u4f53\u53d7\u635f\u7684\u4eba\u53ef\u80fd\u4f1a\u7ecf\u5386\u5947\u602a\u7684\u8bb0\u5fc6\u95ee\u9898\u3002\n\u4ed6\u8bf4\uff0c\u5728\u4e00\u9879\u5b9e\u9a8c\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u6bd4\u8f83\u4e86\u4e00\u7fa4\u521a\u521a\u5728\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821\u5b8c\u6210\u65c5\u884c\u7684\u4eba\u7684\u8bb0\u5fc6-\u8fd9\u6b21\u65c5\u884c\u5305\u62ec\u51e0\u4e2a\u5206\u9636\u6bb5\u7684\u6d3b\u52a8\u3002\n\u6240\u6709\u7684\u53c2\u4e0e\u8005\u90fd\u8bb0\u5f97\u4ed6\u4eec\u505a\u8fc7\u7684\u5927\u90e8\u5206\u4e8b\u60c5\uff0c\u5305\u62ec\u9501\u4e0a\u4e00\u8f86\u81ea\u884c\u8f66\uff0c\u4ece\u996e\u6c34\u673a\u91cc\u559d\u6c34\u3002\n\u4f46\u662f\uff0c\u6d77\u9a6c\u4f53\u53d7\u635f\u7684\u4eba\u65e0\u6cd5\u5c06\u8fd9\u4e9b\u4e8b\u4ef6\u6309\u6b63\u786e\u7684\u987a\u5e8f\u6392\u5217\u3002Buzs\u00e1ki\u8bf4\uff0c\u8fd9\u4e9b\u5e8f\u5217\u5728\u6709\u6d77\u9a6c\u635f\u4f24\u7684\u4eba\u4e2d\u662f\u5b8c\u5168\u548c\u7edd\u5bf9\u6d88\u5931\u7684\u3002\n\u8fd9\u9879\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u5927\u8111\u6ca1\u6709\u65f6\u95f4\u7ec6\u80de\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u80fd\u591f\u5728\u5934\u8111\u4e2d\u91cd\u65b0\u521b\u5efa\u6574\u4e2a\u65c5\u7a0b\u3002\n\u4f46\u662f\uff0c\u5e03\u8428\u57fa\u8bf4\uff0c\u5c3d\u7ba1\u65f6\u95f4\u5355\u5143\u5728\u521b\u5efa\u5e8f\u5217\u65b9\u9762\u5f88\u5173\u952e\uff0c\u4f46\u5b83\u4eec\u771f\u7684\u4e0d\u50cf\u65f6\u949f\u90a3\u6837\uff0c\u4ee5\u7a33\u5b9a\u7684\u901f\u5ea6\u6ef4\u7b54\u4f5c\u54cd\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u65f6\u95f4\u7ec6\u80de\u7684\u6ef4\u7b54\u58f0\u548c\u6ef4\u7b54\u58f0\u4e0d\u65ad\u52a0\u901f\u6216\u51cf\u6162\uff0c\u8fd9\u53d6\u51b3\u4e8e\u60c5\u7eea\u7b49\u56e0\u7d20\u3002\n\u5e03\u8428\u57fa\u8bf4\uff0c\u5f53\u4f60\u4e0d\u5f97\u4e0d\u7b49\u5f85\u9009\u4e3e\u65f6\uff0c\u90a3\u4e48\u6bcf\u5929\u90fd\u662f\u6f2b\u957f\u7684\u4e00\u5929\u3002\u5f53\u6211\u4eec\u95eeCOVID\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\u65f6\uff0c\u540c\u6837\u7684\u60c5\u51b5\u4e5f\u662f\u5982\u6b64\u3002\u5b83\u975e\u5e38\u975e\u5e38\u6162\u3002\u4f46\u662f\u5f53\u4f60\u73a9\u5f97\u5f00\u5fc3\u7684\u65f6\u5019\uff0c\u65f6\u95f4\u8fc7\u5f97\u98de\u5feb\u3002", "note_en": "If you fall off a bike, you&#39;ll probably end up with a cinematic memory of the experience: the wind in your hair, the pebble on the road, then the pain.\n  That&#39;s known as an episodic memory. And now researchers have identified cells in the human brain that make this sort of memory possible, a team  reports in the journal  Proceedings of the National Academy of Sciences.\n  The cells are called time cells, and they place a sort of time stamp on memories as they are being formed. That allows us to recall sequences of events or experiences in the right order.\n  &#34;By having time cells create this indexing across time, you can put everything together in a way that makes sense,&#34; says  Dr. Bradley Lega,  the study&#39;s senior author and a neurosurgeon at the University of Texas Southwestern Medical Center in Dallas.\n        Time cells were  discovered in rodents decades ago. But the new study is critical because &#34;the final arbitrator is always the human brain,&#34; says  Dr. Gy\u00f6rgy Buzs\u00e1ki, Biggs Professor of Neuroscience at New York University. Buzs\u00e1ki is not an author of the study but did edit the manuscript.\n  Lega and his team found the time cells by studying the brains of 27 people who were awaiting surgery for severe epilepsy. As part of their pre-surgical preparation, these patients had electrodes placed in the hippocampus and another area of the brain involved in navigation, memory and time perception.\n  In the experiment, the patients studied sequences of 12 or 15 words that appeared on a laptop screen during a period of about 30 seconds. Then, after a break, they were asked to recall the words they had seen.\n  Meanwhile, the researchers were measuring the activity of individual brain cells. And they found a small number that that would fire at specific times during each sequence of words.\n  &#34;The time cells that we found, they are marking out discrete segments of time within this approximately 30-second window,&#34; Lega says.\n  These time stamps seemed to help people recall when they had seen each word, and in what order, he says. And the brain probably uses the same approach when we&#39;re reliving an experience like falling off a bike.\n    The results help explain why people who have damage to the hippocampus may experience odd memory problems, Buzs\u00e1ki says.\n        In one  experiment, he says, scientists compared the memories of a group of people who had just finished a tour at the University of California, San Diego \u2013 a tour that included several staged events.\n  All of the participants remembered most of the things they had done, including locking up a bike and getting a drink from a water fountain.\n  But people with damage to the hippocampus were unable put these events in the right order. &#34;These sequences are completely and absolutely gone in people with hippocampal lesions,&#34; Buzs\u00e1ki says.\n  The new study suggests that&#39;s because their brains don&#39;t have time cells, which would allow them to re-create the entire tour in their minds.\n  But even though time cells are critical in creating sequences, Buzs\u00e1ki says, they really aren&#39;t like clocks, which tick at a steady pace. Instead, the ticks and tocks of time cells are constantly speeding up or slowing down, depending on factors like mood.\n  &#34;When you have to wait for the elections, then every day is a long day,&#34; Buzs\u00e1ki says. &#34;The same thing is true when we are asking when is COVID over. It&#39;s very, very slow. But when you are having a good time, time flies.&#34;", "posttime": "2020-10-30 14:40:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u65f6\u95f4,cells", "title": "\u5728\u4eba\u8111\u4e2d\u53d1\u73b0\u7684\u201c\u65f6\u95f4\u7ec6\u80de\u201d\uff1a\u4e3a\u4ec0\u4e48\u6709\u4e9b\u8bb0\u5fc6\u770b\u8d77\u6765\u50cf\u7535\u5f71", "title_en": "'Time Cells' Discovered in Human Brains: Why Some Memories Seem Like Movies", "transed": 1, "url": "https://www.npr.org/sections/health-shots/2020/10/29/929133717/why-some-memories-seem-like-movies-time-cells-discovered-in-human-brains", "via": "", "real_tags": ["\u7535\u5f71", "\u65f6\u95f4", "cells"]}, {"category": "", "categoryclass": "", "imagename": "6931f30de39fc77a555100f6d5ca5711.jpg", "infoid": 1032242, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f17\u96f7\u5fb7\u00b7\u963f\u4ec0\u83ab\u5c14(Fred Ashmore)\u6b63\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5c3c\u5fb7\u5c14\u65af\u90ca\u5916\u5e72\u65f1\u7684\u4f4e\u6c99\u6f20\u4e2d\uff0c\u5185\u534e\u8fbe\u5dde\u53c2\u5dee\u4e0d\u9f50\u7684\u5357\u70b9\u4e0e\u4e9a\u5229\u6851\u90a3\u5dde\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u8fb9\u754c\u4ea4\u754c\u5904\uff0c\u4ed6\u611f\u89c9\u5230\u5b83\u51b2\u5237\u4e86\u4ed6\u3002\u4e00\u79cd\u56f0\u60d1\u878d\u5316\u4e3a\u6050\u614c\u3002\u4ed6\u7b4b\u75b2\u529b\u5c3d\uff0c\u4ed6\u77e5\u9053\u8fd9\u4f1a\u8ba9\u4e00\u5207\u53d8\u5f97\u66f4\u7cdf\u3002\u90a3\u662f\u51cc\u66681\u70b9\u5de6\u53f3\uff0c\u4ed6\u5df2\u7ecf\u5f00\u8f66\u5c06\u8fd124\u5c0f\u65f6\u4e86\uff0c\u4ee5\u8d85\u8fc7\u6bcf\u5c0f\u65f6100\u82f1\u91cc\u7684\u901f\u5ea6\u5411\u897f\u98de\u9a70\u3002\u5bf9\u4e8e\u5e78\u8fd0\u7684\u8def\u6bb5\uff0c\u5f53\u9053\u8def\u7545\u901a\uff0c\u963f\u4ec0\u83ab\u5c14\u8e29\u4e0b\u6cb9\u95e8\u65f6\uff0c\u4ed6\u53ef\u4ee5\u8ba9\u4ed6\u7684\u94f6\u8272\u798f\u7279\u91ce\u9a6cGT\u8fbe\u5230\u6bcf\u5c0f\u65f6159\u82f1\u91cc-\u8fd9\u662f\u8fd9\u8f86\u8f66\u7684\u6700\u9ad8\u65f6\u901f\uff0c\u4ed6\u53d1\u73b0\u3002\u73b0\u5728\uff0c\u5728\u6f06\u9ed1\u7684\u591c\u8272\u4e2d\uff0c\u4ed6\u53ef\u4ee5\u770b\u5230\u5239\u8f66\u706f\u7684\u95ea\u5149\uff0c\u4e00\u6761\u65c5\u884c\u8005\u7684\u6cb3\u6d41\u6d8c\u5165\u4e00\u6761\u7f13\u6162\u79fb\u52a8\u7684\u961f\u4f0d\u4e2d\u3002\n\u6ca1\u8fc7\u591a\u4e45\uff0c\u963f\u4ec0\u83ab\u5c14\u5c31\u6cbf\u7740\u6c99\u6f20\u9ad8\u901f\u516c\u8def\u7f13\u7f13\u524d\u884c\uff0c\u611f\u89c9\u5173\u952e\u7684\u51e0\u5206\u949f\u4e00\u5206\u4e00\u79d2\u5730\u8fc7\u53bb\uff0c\u4f38\u957f\u8116\u5b50\u60f3\u770b\u770b\u524d\u65b9\u6709\u4ec0\u4e48\u3002\u5c31\u5728\u8fd9\u65f6\uff0c\u4ed6\u6ce8\u610f\u5230\u540e\u5907\u7bb1\u7a81\u7136\u6253\u5f00\uff0c\u4e00\u79cd\u65b0\u7684\u6050\u60e7\u5360\u636e\u4e86\u4e0a\u98ce\u3002\u52a0\u5dde\u98df\u54c1\u548c\u519c\u4e1a\u90e8\u7684\u5b98\u5458\u6b63\u5728\u641c\u67e5\u8fdb\u5165\u8be5\u5dde\u7684\u8f66\u8f86\u3002\u4ed6\u770b\u7740\u524d\u9762\u7684\u4e00\u8f86\u8f66\u505c\u4e86\u4e0b\u6765\uff0c\u7136\u540e\u88ab\u4eba\u4ece\u4e0a\u5f80\u4e0b\u770b\u3002\u5982\u679c\u4ed6\u4eec\u5bf9\u6211\u7684\u8f66\u8fd9\u6837\u505a\uff0c\u963f\u4ec0\u83ab\u5c14\u60f3\uff0c\u6211\u53ef\u80fd\u62ff\u4e0d\u56de\u5b83\u4e86\u3002\n\u4ece\u5916\u89c2\u4e0a\u770b\uff0c\u4ed6\u7684\u91ce\u9a6c\u770b\u8d77\u6765\u548c\u8def\u4e0a\u7684\u4efb\u4f55\u4e00\u8f86\u8f66\u90fd\u6ca1\u4ec0\u4e48\u4e24\u6837\u3002\u91cc\u9762\u662f\u53e6\u4e00\u4e2a\u6545\u4e8b\u3002\u5b89\u77f3\u7684\u4eea\u8868\u76d8\u4e0a\u6563\u5e03\u7740\u4e00\u7cfb\u5217\u8bbe\u5907\uff0c\u5305\u62ec\u4e00\u53f0CB\u6536\u97f3\u673a\uff0c\u4e00\u53f0\u5b89\u88c5\u4e86Waze\u548cGoogle\u5730\u56fe\u7684\u5e73\u677f\u7535\u8111\uff0c\u4ee5\u53ca\u4e00\u53f0\u8fd0\u884c\u8ba1\u65f6\u5668\u7684iPhone\u3002\u6321\u98ce\u73bb\u7483\u5185\u4fa7\u8d34\u7740\u96f7\u8fbe\u63a2\u6d4b\u5668\uff0c\u524d\u683c\u6805\u548c\u540e\u4fdd\u9669\u6760\u4e0a\u662f\u6fc0\u5149\u5e72\u6270\u5668\u7684\u4f20\u611f\u5668\u3002\u66f4\u5f15\u4eba\u6ce8\u76ee\u7684\u662f\uff0c\u7ed1\u5728\u963f\u4ec0\u83ab\u5c14(Ashmore)\u65c1\u8fb9\u548c\u540e\u9762\u7684\u5de8\u5927\u6cb9\u7bb1\u91cc\u6ee1\u662f\u6c7d\u6cb9\uff0c\u8fd9\u662f\u524d\u6392\u548c\u540e\u6392\u4e58\u5ba2\u5ea7\u4f4d\u672c\u5e94\u653e\u7684\u5730\u65b9\u3002\u4e00\u7cfb\u5217\u8f6f\u7ba1\u5c06\u5b83\u4eec\u4e0e\u540e\u5907\u7bb1\u4e2d\u7684\u53e6\u4e00\u4e2a\u5de8\u5927\u7684\u6cb9\u7bb1\u8fde\u63a5\u5230\u6c7d\u8f66\u7684\u4e3b\u71c3\u6599\u7bb1\u3002\u4e00\u540d\u68c0\u67e5\u5b89\u77f3\u94bb\u673a\u7684\u8b66\u5b98\u5f97\u51fa\u7ed3\u8bba\u8bf4\u4ed6\u9a7e\u9a76\u7684\u662f\u4e00\u679a\u5de8\u5927\u7684\u6c7d\u6cb9\u5f39\uff0c\u8fd9\u662f\u60c5\u6709\u53ef\u539f\u7684\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u4e00\u8f86\u5b9a\u5236\u7684\u6c7d\u8f66\uff0c\u76ee\u7684\u53ea\u6709\u4e00\u4e2a\uff1a\u5b8c\u6210\u7f8e\u56fd\u6c7d\u8f66\u6587\u5316\u4e2d\u6700\u4f1f\u5927\u7684\u5730\u4e0b\u58ee\u4e3e\u4e4b\u4e00--\u201c\u70ae\u5f39\u8dd1\u201d--\u5e76\u4e14\u6bd4\u5386\u53f2\u4e0a\u4efb\u4f55\u4eba\u90fd\u8981\u5feb\u3002\u975e\u5b98\u65b9\u7684\uff0c\u672a\u7ecf\u6279\u51c6\u7684\uff0c\u548c\u60ca\u4eba\u7684\u975e\u6cd5\uff0c\u70ae\u5f39\u5df2\u7ecf\u662f\u6c7d\u8f66\u77e5\u8bc6\u7684\u4e3b\u8981\u8fd1\u534a\u4e2a\u4e16\u7eaa\u4e4b\u524d\uff0c\u963f\u4ec0\u83ab\u5c14\u7684\u5c1d\u8bd5\u53bb\u5e74\u6625\u672b\u3002\u89c4\u5219\u5f88\u7b80\u5355\uff1a\u53f8\u673a\u4ece\u66fc\u54c8\u987f\u51fa\u53d1\uff0c\u5728\u4e1c31\u8857\u7684\u7ea2\u7403\u8f66\u5e93(Red Ball Garage)\u5f00\u59cb\uff0c\u6700\u540e\u5230\u8fbe\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u96f7\u4e1c\u591a\u6d77\u6ee9(Redondo Beach)\u7684\u6ce2\u6258\u83f2\u8bfa(Portofino)\u9152\u5e97\u3002\u4e2d\u95f4\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d6\u51b3\u4e8e\u4ed6\u4eec\u3002\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0c\u8fd9\u573a\u6bd4\u8d5b\u9700\u8981\u51e0\u4e4e\u4ee4\u4eba\u9707\u60ca\u7684-\u800c\u4e14\u662f\u65e0\u4f11\u6b62\u7684\u521b\u9020\u6027-\u65e0\u89c6\u4ea4\u901a\u6cd5\u3002\n\u51e0\u5341\u5e74\u6765\uff0c\u8f66\u961f\u4e00\u76f4\u5728\u9010\u6b65\u7f29\u77ed\u5b8c\u62102800\u82f1\u91cc\u6240\u9700\u7684\u65f6\u95f4-\u81ea1971\u5e74\u4ee5\u6765\u5c06\u7eaa\u5f55\u7f29\u77ed\u4e86\u8fd110\u4e2a\u5c0f\u65f6\uff0c\u76f4\u5230\u505c\u987f\u572827\u5c0f\u65f625\u5206\u949f\u3002\u4f46\u5728\u5bc6\u5207\u5173\u6ce8\u8fd9\u9879\u8fd0\u52a8\u7684\u70ae\u5f39\u7231\u597d\u8005\u7fa4\u4f53\u4e2d\uff0c\u4e00\u79cd\u4f20\u7edf\u667a\u6167\u7684\u53cd\u54cd\u5df2\u7ecf\u54cd\u8d77\uff1a\u7eaa\u5f55\u51e0\u4e4e\u4e0d\u53ef\u80fd\u964d\u5f97\u66f4\u4f4e\u4e86\u3002\u9053\u8def\u4e0a\u7684\u6c7d\u8f66\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u5de5\u7a0b\u548c\u6280\u672f\u4e0a\u7684\u6bcf\u4e00\u6b21\u521b\u65b0-\u66f4\u597d\u7684\u71c3\u6cb9\u7ecf\u6d4e\u6027\uff0c\u66f4\u5927\u7684\u9a6c\u529b\uff0c\u6570\u5b57\u5bfc\u822a\u7684\u51fa\u73b0-\u4f3c\u4e4e\u90fd\u53ea\u4f1a\u589e\u52a0\u95ee\u9898\u3002\u70ae\u5f39\u6b63\u5728\u649e\u5411\u4eba\u7c7b\u6240\u80fd\u8fbe\u5230\u7684\u6781\u9650\u3002\n\u4f46\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u8fd9\u79cd\u5fae\u79ef\u5206\u53d1\u751f\u4e86\u53d8\u5316\u3002\u51a0\u72b6\u75c5\u6bd2\u7684\u5230\u6765\u548c\u968f\u4e4b\u800c\u6765\u7684\u5c01\u9501\u4f7f\u7f8e\u56fd\u7684\u9053\u8def\u7a7a\u65e0\u4e00\u4eba\uff0c\u8fd9\u662f\u524d\u6240\u672a\u6709\u7684\u3002\u4ea4\u901a-\u4efb\u4f55\u70ae\u5f39\u8dd1\u6b65\u4e2d\u6700\u4ee4\u4eba\u56f0\u60d1\u548c\u4e0d\u53ef\u9884\u6d4b\u7684\u53d8\u91cf-\u7a81\u7136\u53d8\u6210\u4e86\u4e00\u4e2a\u51e0\u4e4e\u4e0d\u6210\u95ee\u9898\u7684\u95ee\u9898\u3002\u9053\u8def\u7545\u901a\u65e0\u963b\uff0c\u53bb\u5e74\u6625\u5929\uff0c\u5f53\u7f8e\u56fd\u4eba\u8e72\u4e0b\u8eab\u5b50\u65f6\uff0c\u4e00\u7fa4\u70ae\u5f39\u75f4\u8ff7\u8005\u53d1\u73b0\u4e86\u4e00\u4e2a\u96be\u5f97\u7684\u673a\u4f1a\u3002\u4ed6\u4eec\u770b\u5230\u4e86\u5f17\u96f7\u5fb7\u00b7\u963f\u4ec0\u83ab\u5c14(Fred Ashmore)\u6240\u770b\u5230\u7684\uff1a\u8bb0\u5f55\u5c31\u5728\u90a3\u91cc\uff0c\u7b49\u5f85\u7d22\u53d6\u3002\n\u73b0\u5728\uff0c\u5f53\u4ed6\u5728\u8fb9\u5883\u68c0\u67e5\u7ad9\u7684\u9ed1\u6697\u4e2d\u65e0\u6240\u4e8b\u4e8b\u65f6-\u8fd8\u6709\u4e0d\u5230300\u82f1\u91cc-\u963f\u4ec0\u83ab\u5c14\u53ef\u4ee5\u611f\u89c9\u5230\u4ed6\u521b\u9020\u7eaa\u5f55\u7684\u673a\u4f1a\u6b63\u5728\u6e9c\u8d70\u3002\u6bcf\u4e00\u79d2\u90fd\u5f88\u91cd\u8981\u3002\u5f53\u4ed6\u51fa\u53d1\u65f6\uff0c\u4ed6\u77e5\u9053\u8981\u60f3\u8fbe\u5230\u7eaa\u5f55\u9700\u8981\u603b\u7684\u5e73\u5747\u65f6\u901f\u63a5\u8fd1110\u82f1\u91cc-\u8fd9\u610f\u5473\u7740\u5728\u6cbf\u9014\u6bcf\u505c\u4e00\u5206\u949f\uff0c\u4ed6\u5c31\u5fc5\u987b\u4ee5220\u82f1\u91cc\u7684\u4e0d\u53ef\u80fd\u901f\u5ea6\u884c\u9a76\u4e00\u5206\u949f\u624d\u80fd\u4fdd\u6301\u5728\u76ee\u6807\u4f4d\u7f6e\u3002\n\u4ed6\u5df2\u7ecf\u9192\u4e86\u4e00\u5929\u591a\u4e86--\u81ea\u4ece\u79bb\u5f00\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u540e\uff0c\u4ed6\u7684\u5ea7\u4f4d\u51e0\u4e4e\u6ca1\u6709\u52a8\u8fc7--\u611f\u89c9\u5230\u4e86\u7761\u7720\u4e0d\u8db3\u5e26\u6765\u7684\u5e7d\u95ed\u6050\u60e7\u75c7\u3002\u5f53\u4ed6\u5728\u7f13\u6162\u79fb\u52a8\u7684\u961f\u4f0d\u4e2d\u7b49\u5f85\u8f6e\u5230\u4ed6\u7684\u65f6\u5019\uff0c\u4ed6\u60f3\u8c61\u7740\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\u6beb\u65e0\u7591\u95ee\uff0c\u4ed6\u4f1a\u88ab\u9001\u8fdb\u76d1\u72f1\u3002\u4f46\u963f\u4ec0\u83ab\u5c14\u751a\u81f3\u5df2\u7ecf\u4e3a\u6b64\u505a\u597d\u4e86\u51c6\u5907\uff1a\u4ed6\u5e26\u7740\u73b0\u91d1\u51c6\u5907\u4fdd\u91ca\u3002\n\u8b66\u5b98\u8f7b\u6572\u53f8\u673a\u7684\u4fa7\u7a97\uff0c\u7136\u540e\u6ce8\u610f\u5230\u91ce\u9a6c\u8f66\u4e0a\u7684\u5fb7\u514b\u8428\u65af\u8f66\u724c\u3002\u4ed6\u95ee\u5b89\u77f3\u5728\u52a0\u5dde\u7684\u4e1a\u52a1\u662f\u4ec0\u4e48\u3002\u201c\u6211\u521a\u5728\u8fd9\u91cc\u627e\u4e86\u4efd\u5de5\u4f5c\uff0c\u201d\u4ed6\u56de\u7b54\u8bf4\u3002\u201c\u6211\u8981\u642c\u5bb6\u4e86\u3002\u201d\u8fd9\u540d\u8b66\u5b98\u751a\u81f3\u6ca1\u6709\u518d\u770b\u4e00\u773c\u8f66\u5185\uff0c\u5c31\u91c7\u53d6\u4e86\u6577\u884d\u4e86\u4e8b\u7684\u8bed\u6c14\uff0c\u5306\u5306\u6d4f\u89c8\u4e86\u4e00\u4efd\u6c34\u679c\u548c\u852c\u83dc\u6e05\u5355\uff0c\u8be2\u95ee\u5b89\u77f3\u662f\u5426\u5c06\u5176\u4e2d\u4efb\u4f55\u4e00\u79cd\u5e26\u8fc7\u4e86\u8fb9\u5883\u3002\u5c31\u5728\u90a3\u65f6\uff0c\u963f\u4ec0\u83ab\u5c14\u610f\u8bc6\u5230\u4ed6\u7684\u62c5\u5fc3\u662f\u5f92\u52b3\u7684\u3002\u4ed6\u8981\u907f\u514d\u4e00\u591c\u7262\u72f1\u4e4b\u707e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u8ba4\u4e3a\u901f\u5ea6\u7eaa\u5f55\u4ecd\u6709\u53ef\u80fd\u4fdd\u6301\u3002\u4ed6\u5ef6\u8bef\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4f46\u968f\u7740\u963f\u4ec0\u83ab\u5c14\u88ab\u6325\u624b\u793a\u610f\uff0c\u4ed6\u7684\u6050\u60e7\u8ba9\u4f4d\u4e8e\u4e00\u79cd\u6fc0\u52a8\u4eba\u5fc3\u7684\u7d27\u8feb\u611f\u3002\u4ed6\u731b\u51fb\u6cb9\u95e8\uff0c\u65f6\u901f\u8868\u5f88\u5feb\u5c31\u6ee1\u4e86\u3002\u6c99\u6f20\u5728\u4ed6\u9762\u524d\u53d8\u5f97\u5e73\u5766\uff0c\u4ed6\u62fc\u547d\u60f3\u628a\u5931\u53bb\u7684\u65f6\u95f4\u8865\u56de\u6765\u3002\n\u7f8e\u56fd\u516c\u8def\u65c5\u884c\u7684\u6d6a\u6f2b\u690d\u6839\u4e8e\u4e00\u4e2a\u7b80\u5355\u800c\u53e4\u8001\u7684\u6982\u5ff5\uff1a\u53ea\u6709\u5f00\u8f66-\u7406\u60f3\u7684\u7f13\u6162\u3001\u873f\u8712\u884c\u9a76-\u624d\u80fd\u5145\u5206\u6b23\u8d4f\u8fd9\u4e2a\u56fd\u5bb6\u7684\u8fbd\u9614\u3002\u4ece\u5934\u9876\u98de\u8fc7\uff0c\u4f60\u4f1a\u66f4\u5feb\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u4f46\u4f60\u4e5f\u4f1a\u9519\u8fc7\u4e2d\u95f4\u7684\u4e00\u5207\u3002\u70ae\u5f39\u957f\u8dd1\u98a0\u8986\u4e86\u8fd9\u4e00\u60f3\u6cd5\uff0c\u9080\u8bf7\u6211\u4eec\u770b\u5230\uff0c\u5373\u4f7f\u5728\u56db\u8f6e\u4e0a\u7ecf\u5386\u8fc7\uff0c\u8fd9\u4e2a\u56fd\u5bb6\u4e5f\u53ef\u4ee5\u770b\u8d77\u6765\u76f8\u5f53\u5c0f\uff0c\u751a\u81f3\u53ef\u4ee5\u88ab\u5f81\u670d-\u4e00\u4e9b\u4f60\u53ef\u4ee5\u62e5\u62b1\u7684\u4e1c\u897f\u3002\n\u70ae\u5f39\u662f\u7ec8\u6781\u7684\u516c\u8def\u65c5\u884c\uff0c\u5c3d\u7ba1\u5b83\u629b\u5f03\u4e86\u901a\u5e38\u7684\u516c\u8def\u65c5\u884c\u60ef\u4f8b\uff1a\u6ca1\u6709\u505c\u7559\u62cd\u7167\uff0c\u6ca1\u6709\u7ed5\u9053\u54c1\u5c1d\u4e16\u754c\u4e0a\u6700\u68d2\u7684\u714e\u997c\uff0c\u6ca1\u6709\u653e\u4e0b\u9876\u90e8\u5bf9\u7740\u6536\u97f3\u673a\u5927\u558a\u5927\u53eb\u3002\u8fd9\u4e9b\u65c5\u884c\u662f\u4ee4\u4eba\u5174\u594b\u7684\u6218\u672f\uff0c\u8ba1\u5212\u7cbe\u786e\u5230\u5206\u949f\uff0c\u4f8b\u5982\uff0c\u56f4\u7ed5\u66fc\u54c8\u987f\u7684\u7ea2\u7eff\u706f\u5468\u671f\u548c\u519c\u6751\u52a0\u6cb9\u7ad9\u7684\u9ad8\u5cf0\u4f7f\u7528\u65f6\u95f4\u3002\u4e00\u4f4d\u7ade\u4e89\u5bf9\u624b\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u51c6\u5907\u536b\u661f\u5730\u56fe\u548c\u590d\u6742\u7684\u7535\u5b50\u8868\u683c\uff0c\u6784\u5efa\u65f6\u95f4\u8868\uff0c\u5c06\u8fd9\u4e2a\u56fd\u5bb6\u5206\u6210\u4e94\u82f1\u91cc\u7684\u589e\u91cf\u3002\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u90fd\u662f\u4e3a\u4e86\u907f\u514d\u81ea\u53d1\u6027\u3002\n\u7136\u800c\uff0c1971\u5e74\uff0c37\u5c81\u7684\u6c7d\u8f66\u8bb0\u8005\u5e03\u7f57\u514b\u00b7\u8036\u8328(Brock Yates)\u4ece\u7ebd\u7ea6\u5e02\u51fa\u53d1\uff0c\u524d\u5f80\u6d1b\u6749\u77f6\uff0c\u6b63\u662f\u4e00\u79cd\u81ea\u53d1\u7684\u884c\u4e3a\u50ac\u751f\u4e86\u8fd9\u573a\u6bd4\u8d5b\u3002\u5728\u4ed6\u6784\u601d\u8fd9\u6b21\u65c5\u884c\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u56fd\u5bb6\u6b63\u5904\u4e8e\u5bf9\u6c7d\u8f66\u5b89\u5168\u7684\u6050\u614c\u4e4b\u4e2d\uff0c\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u6d88\u8d39\u8005\u6743\u76ca\u5021\u5bfc\u8005\u62c9\u5c14\u592b\u00b7\u7eb3\u5fb7(Ralph Nader)\u548c\u4ed6\u7684\u540d\u8457\u201c\u4efb\u4f55\u901f\u5ea6\u90fd\u4e0d\u5b89\u5168\u201d(Unsafe At Any Speed)\u5f15\u53d1\u7684\u3002\u8fd9\u4e00\u8b66\u62a5\u5e2e\u52a9\u50ac\u5316\u4e86\u4ea4\u901a\u90e8\u548c\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u7684\u6210\u7acb\uff0c\u5e76\u4fc3\u4f7f\u6570\u5341\u4e2a\u5dde\u901a\u8fc7\u4e86\u5b89\u5168\u5e26\u6cd5\u5f8b\u3002\u63a8\u52a8\u56fd\u5bb6\u9650\u901f\u4e3a\u6bcf\u5c0f\u65f655\u82f1\u91cc-\u4ece\u5b89\u5168\u548c\u8282\u7ea6\u71c3\u6599\u7684\u89d2\u5ea6\u6765\u770b\u90fd\u662f\u5408\u7406\u7684-\u4e5f\u5f97\u5230\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u652f\u6301\u3002\n\u8036\u8328\u662f\u516c\u6c11\u6297\u547d\u548c\u81ea\u7531\u610f\u5fd7\u4e3b\u4e49\u601d\u60f3\u7684\u7ec8\u751f\u634d\u536b\u8005\uff0c\u4ed6\u5bf9\u7f8e\u56fd\u7684\u9053\u8def\u6709\u7740\u4e0d\u540c\u7684\u770b\u6cd5\u3002\u8036\u8328\u60f3\u8981\u8bc1\u660e\uff0c\u7f8e\u56fd\u4eba\u5728\u5dde\u9645\u516c\u8def\u4e0a\u9ad8\u901f\u5b89\u5168\u9a7e\u9a76\u662f\u53ef\u80fd\u7684\uff0c\u5c31\u50cf\u5fb7\u56fd\u4eba\u5728\u9ad8\u901f\u516c\u8def\u4e0a\u6240\u505a\u7684\u90a3\u6837\u3002\u201c\u662f\u7684\uff0c\u8ba9\u9a7e\u8f66\u9ad8\u901f\u51fa\u884c\u6210\u4e3a\u73b0\u5b9e\uff01\u201d\u8036\u8328\u5199\u9053\u3002\u201c\u516c\u5f00\u7684\u975e\u6cd5\u884c\u4e3a\u6240\u786e\u8ba4\u7684\u771f\u7406\u548c\u6b63\u4e49\u3002\u201d\n\u8036\u8328\u4e0e\u4e24\u4e2a\u670b\u53cb\u548c\u4ed614\u5c81\u7684\u513f\u5b50\u51fa\u53d140\u5c0f\u65f651\u5206\u949f\u540e\uff0c\u4ed6\u5230\u8fbe\u4e86\u6d1b\u6749\u77f6\u3002\u8fd9\u573a\u4e0d\u95f4\u65ad\u7684\u9a7e\u9a76\u662f\u8036\u8328\u7b56\u5212\u7684\u4e00\u9879\u5927\u80c6\u8ba1\u5212\u7684\u8bd5\u8fd0\u884c\uff1a\u4e00\u573a\u6a2a\u8de8\u7f8e\u56fd\u7684\u591a\u7ad9\u6bd4\u8d5b\uff0c\u5c06\u4e00\u52b3\u6c38\u9038\u5730\u8bc1\u660e\uff0c\u6709\u80fd\u529b\u7684\u8f66\u624b\u9a7e\u9a76\u80fd\u5e72\u7684\u6c7d\u8f66\u53ef\u4ee5\u6bd4\u4efb\u4f55\u4eba\u60f3\u8c61\u7684\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u5730\u7a7f\u8d8a\u7f8e\u56fd\u3002\u6216\u8005\uff0c\u5c31\u50cf\u8036\u8328\u6240\u8bf4\u7684\uff1a\u201c\u4ece\u7ebd\u7ea6\u5230\u6d1b\u6749\u77f6\uff0c\u662f\u4e00\u573a\u72c2\u8f70\u6ee5\u70b8\u3001\u5927\u8086\u62a8\u51fb\u6708\u7403\u3001\u64cd\u4ed6\u5988\u7684\u5f53\u6743\u6d3e\u7684\u9686\u9686\u58f0\u3002\u201d\u6bd4\u8d5b\u7684\u8d77\u70b9\u5c06\u662f\u66fc\u54c8\u987f\u4e1c31\u8857\u7684\u7ea2\u7403\u8f66\u5e93(Red Ball Garage)\uff0c\u8036\u8328\u7684\u96c7\u4e3b\u201c\u6c7d\u8f66\u4e0e\u53f8\u673a\u201d(Car&Driver)\u6742\u5fd7\u5728\u90a3\u91cc\u4fdd\u7559\u4e86\u4e00\u652f\u6d4b\u8bd5\u8f66\u961f\u3002\u6bd4\u8d5b\u7684\u76ee\u7684\u5730\u662f\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u96f7\u4e1c\u591a\u6d77\u6ee9\u7684\u6ce2\u6258\u83f2\u8bfa\u9152\u5e97\uff0c\u5b83\u7684\u4e3b\u4eba\u662f\u8036\u8328\u7684\u4e00\u4f4d\u670b\u53cb\u3002\u4ed6\u628a\u8fd9\u573a\u6bd4\u8d5b\u547d\u540d\u4e3a\u7f50\u5934\u7403\u8d1d\u514b\u6d77\u5230\u95ea\u8000\u6d77\u7eaa\u5ff5\u676f\u51b2\u523a\u6bd4\u8d5b(Cannonball Baker Sea-to-Shining-Sea Memorial Trophy Dash)\u3002\n\u8fd9\u4e2a\u540d\u5b57\u662f\u4e3a\u4e86\u5411\u7f8e\u56fd\u8010\u529b\u8d5b\u8f66\u4e4b\u7236\u6b27\u6587\u00b7\u8d1d\u514b\u81f4\u656c\uff0c\u4ed6\u4ee553\u5c0f\u65f630\u5206\u949f\u7684\u6210\u7ee9\u4fdd\u6301\u4e86\u8fd140\u5e74\u7684\u8de8\u6d32\u7eaa\u5f55\u3002\u9996\u5c4a\u70ae\u5f39\u957f\u8dd1\u662f\u5728\u8036\u8328\u6700\u521d\u7684\u8d8a\u91ce\u4e4b\u65c5\u516d\u4e2a\u6708\u540e\u4e3e\u884c\u7684\uff0c\u5171\u67098\u652f\u961f\u4f0d\u548c23\u540d\u53c2\u4e0e\u8005\u53c2\u52a0\u3002\u53c2\u8d5b\u8005\u4e2d\u6709\u4e00\u540d\u7a7a\u4e58\u4eba\u5458\uff0c\u4e24\u540d\u9910\u9986\u8001\u677f\uff0c\u4ee5\u53ca\u4e00\u540d\u8054\u5408\u77f3\u6cb9\u516c\u53f8(Union Oil)\u7684\u516c\u5173\u4e13\u4e1a\u4eba\u58eb\uff0c\u4ed6\u4eec\u5750\u5728\u7279\u62c9\u65af\u79d1\u6c7d\u8f66\u4e4b\u5bb6(Travco Motor Home)\u3002\u9a7e\u9a76\u4e00\u8f86\u6cd5\u62c9\u5229\u4ee3\u6258\u7eb3\uff0c\u8036\u8328\u548c\u4ed6\u7684\u961f\u53cb\uff0c\u4e00\u4f4d\u540d\u53eb\u4e39\u00b7\u683c\u5c3c\u7684\u804c\u4e1a\u8d5b\u8f66\u624b\uff0c\u4ee535\u5c0f\u65f654\u5206\u949f\u7684\u6210\u7ee9\u6253\u7834\u4e86\u8d1d\u514b\u7684\u7eaa\u5f55\u3002\u5f53\u8036\u8328\u5bf9\u6bd4\u8d5b\u7684\u534a\u5f00\u73a9\u7b11\u7684\u7f16\u5e74\u53f2\u51fa\u73b0\u5728\u201c\u8d5b\u8f66\u548c\u8f66\u624b\u201d\u4e0a\u65f6\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u5f15\u8d77\u4e86\u8f70\u52a8\u3002\n\u4f46\u5230\u4e861979\u5e74\uff0c\u70ae\u5f39\u6bd4\u8d5b\u66f4\u50cf\u662f\u5609\u5e74\u534e\uff0c\u800c\u4e0d\u662f\u7ade\u4e89\uff0c\u56e2\u961f\u4f2a\u88c5\u6210\u6025\u6551\u5458\u3001\u4e0b\u73ed\u7684\u8b66\u5bdf\uff0c\u751a\u81f3\u8fd8\u6709\u4e00\u7fa4\u536b\u661f\u8ddf\u8e2a\u548c\u56de\u6536\u4e13\u5bb6\u3002\u5c3d\u7ba1\u8036\u8328\u4f3c\u4e4e\u548c\u4efb\u4f55\u4eba\u4e00\u6837\u559c\u6b22\u8fd9\u573a\u6df7\u4e71-\u6bd5\u7adf\u4ed6\u5f00\u7684\u662f\u5047\u6551\u62a4\u8f66-\u4f46\u4ed6\u4e5f\u538c\u5026\u4e86\n\u5728\u8036\u8328\u505c\u6b62\u6bd4\u8d5b\u540e\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u5f00\u59cb\u9010\u6e10\u6d88\u5931\uff0c\u7eaa\u5f55\u521b\u9020\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u30021983\u5e74\uff0c\u88ab\u79f0\u4e3a\u7f8e\u56fd\u5feb\u8f66(U.S.Express)\u7684\u540e\u7eed\u8d5b\u4e8b\u521b\u9020\u4e8632\u5c0f\u65f67\u5206\u949f\u7684\u65b0\u7eaa\u5f55\uff0c\u4f46\u5728\u90a3\u4e4b\u540e\uff0c\u8fd1\u56db\u5206\u4e4b\u4e00\u4e2a\u4e16\u7eaa\u6ca1\u6709\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u5c1d\u8bd5\u3002\u5f53\u7136\uff0c\u5728\u540c\u4e00\u65f6\u671f\uff0c\u8fd9\u90e8\u8ba9\u8036\u8328\u60ca\u6115\u4e0d\u5df2\u7684\u7535\u5f71\u6210\u4e3a\u72c2\u70ed\u7684\u70ed\u95e8\u5f71\u7247\uff0c\u5728\u65b0\u4e00\u4ee3\u6c7d\u8f66\u7231\u597d\u8005\u4e2d\u6d41\u4f20\uff0c\u5c31\u50cf\u4e00\u4ef6\u901d\u53bb\u7684\u65f6\u5149\u7684\u9057\u7269\uff0c\u5e76\u5411\u6570\u5341\u540d\u60f3\u8981\u6210\u4e3a\u70ae\u5f39\u624b\u7684\u4eba\u704c\u8f93\u901f\u5ea6\u7684\u4fe1\u6761\u3002\u4ed6\u4eec\u6240\u9700\u8981\u7684\u5c31\u662f\u6709\u4eba\u8fc8\u51fa\u7b2c\u4e00\u6b65\u3002\n\u4e9a\u7279\u5170\u5927\u90ca\u533a\u7684\u72c2\u70ed\u5c11\u5e74\u57c3\u5fb7\u00b7\u535a\u5229\u5b89(Ed Bolian)\u5c31\u662f\u90a3\u4e9b\u75f4\u8ff7\u4e8e\u70ae\u5f39\u7684\u4eba\u4e4b\u4e00\u30022004\u5e74\uff0c\u4ed6\u8054\u7cfb\u4e86\u70ed\u60c5\u4f46\u575a\u6301\u7684\u8036\u8328\uff1a\u4ee5\u73b0\u5728\u4e0a\u8def\u7684\u6c7d\u8f66\u6570\u91cf\uff0c\u66f4\u4e0d\u7528\u8bf4\u8b66\u5bdf\u7684\u6570\u91cf\uff0c\u8981\u6253\u7834\u65e7\u7eaa\u5f55\u6216\u7a81\u783430\u5c0f\u65f6\u7684\u56f4\u5899\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u4f46\u662f\u70ae\u5f39\u8fd8\u6ca1\u6709\u6b7b\u30022006\u5e745\u6708\uff0c\u5f53\u62c9\u529b\u8d5b\u53f8\u673a\u4e9a\u5386\u514b\u65af\u00b7\u7f57\u4f0a(Alex Roy)\u548c\u534e\u5c14\u8857\u94f6\u884c\u5bb6\u6234\u592b\u00b7\u9a6c\u8d6b(Dave Maher)\u9a7e\u9a76\u4e00\u8f86\u589e\u538b\u76842000 BMW M5\u4ece\u7ea2\u7403\u8f66\u5e93\u5230\u5723\u83ab\u5c3c\u5361\u7801\u5934(Santa Monica Pier)\u65f6\uff0c\u8fd9\u4e00\u6d3b\u52a8\u83b7\u5f97\u4e86\u80fd\u91cf\u7684\u9707\u52a8\uff0c\u7528\u65f631\u5c0f\u65f64\u5206\u949f\u3002\u7f57\u4f0a\u548c\u9a6c\u8d6b\u7684\u5954\u8dd1\u5c06\u6bd4\u8d5b\u5e26\u5165\u4e86\u73b0\u4ee3--\u4f46\u5bf9\u4e8e\u50cf\u535a\u5229\u5b89\u8fd9\u6837\u7684\u666e\u901a\u8d5b\u8f66\u624b\u6765\u8bf4\uff0c\u8fd9\u9879\u7eaa\u5f55\u4f3c\u4e4e\u662f\u53ef\u4ee5\u8fbe\u5230\u7684\u3002\u7f57\u4f0a\u5bf9\u8fd9\u9879\u8bb0\u5f55\u7684\u8ffd\u9010\u5df2\u7ecf\u82b1\u8d39\u4e86\u6570\u5341\u4e07\u7f8e\u5143\uff0c\u751a\u81f3\u8fd8\u5f97\u5230\u4e86\u4e00\u67b6\u79df\u6765\u7684\u4fa6\u5bdf\u673a\u7684\u5e2e\u52a9\uff0c\u8fd9\u67b6\u4fa6\u5bdf\u673a\u5728\u4ed6\u524d\u9762\u98de\u884c\uff0c\u4ee5\u8b66\u60d5\u8b66\u5bdf\u3002\u5728\u968f\u540e\u7684\u91c7\u8bbf\u4e2d\uff0c\u7f57\u4f0a\u7528\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684\u8bed\u8a00\u63cf\u8ff0\u4e86\u8fd9\u6b21\u7ade\u9009-\u4f60\u4f1a\u5931\u8d25\uff0c\u4f60\u4f1a\u88ab\u6355\uff0c\u4f60\u4f1a\u6b7b-\u4e5f\u8bb8\u662f\u5e0c\u671b\u5413\u8dd1\u4efb\u4f55\u53ef\u80fd\u8bd5\u56fe\u6253\u7834\u4ed6\u7684\u65b0\u7eaa\u5f55\u7684\u6f5c\u5728\u8ffd\u968f\u8005\u3002\n\u535a\u5229\u5b89\u5e76\u6ca1\u6709\u88ab\u5413\u5012\u3002\u4ed6\u82b1\u4e86\u6570\u5e74\u65f6\u95f4\u5c06\u70ae\u5f39\u5206\u89e3\u6210\u4e00\u7cfb\u5217\u4ed6\u53ef\u4ee5\u5206\u6790\u548c\u89e3\u51b3\u7684\u5b50\u95ee\u9898\uff1a\u4ea4\u901a\u3001\u65f6\u95f4\u3001\u8def\u7ebf\u3001\u6cb9\u8017\u7b49\u7b49\u3002\u5bf9\u8fd9\u4e00\u72ec\u7279\u76ee\u6807\u7684\u8ffd\u6c42\u4f7f\u4ed6\u5ea6\u8fc7\u4e8620\u591a\u5c81\uff0c\u5c3d\u7ba1\u4ed6\u52aa\u529b\u5bfb\u627e\u652f\u6301\u4ed6\u7684\u526f\u9a7e\u9a76\u548c\u4eba-\u6216\u8005\u53ea\u662f\u4e3a\u4e86\u5411\u4ed6\u4fdd\u8bc1\u4ed6\u6ca1\u6709\u75af\u3002\u7f57\u4f0a\u7684\u5954\u8dd1\u5e26\u6765\u7684\u5173\u6ce8\u8fc5\u901f\u6d88\u5931\uff0c\u5c31\u50cf\u5b83\u5230\u8fbe\u7684\u901f\u5ea6\u4e00\u6837\u5feb\u3002\u5c31\u535a\u5229\u5b89\u6240\u77e5\uff0c\u518d\u4e5f\u6ca1\u6709\u4eba\u5bf9\u70ae\u5f39\u611f\u5174\u8da3\u4e86\u3002\n\u6700\u7ec8\uff0c\u535a\u5229\u5b89\u51c6\u5907\u597d\u4e86\u6295\u7bee\u30022013\u5e74\uff0c\u7ecf\u8fc7\u5341\u5e74\u7684\u7814\u7a76\u548c4.5\u4e07\u7f8e\u5143\u7684\u6295\u8d44-\u201c\u6211\u7684\u6bcf\u4e00\u5206\u94b1\u201d-\u4ed6\u8bd5\u9a7e\u4e86\u4e00\u8f86\u6539\u88c5\u76842004\u6b3e\u6885\u8d5b\u5fb7\u65af-\u5954\u9a70CL55AMG\u3002\u4e0e\u4ed6\u7684\u526f\u9a7e\u9a76\u6234\u592b\u00b7\u5e03\u83b1\u514b(Dave Black)\u4ee5\u53ca\u4ed6\u4eec\u7684\u9886\u822a\u5458\u548c\u77ad\u671b\u5458\u9ec4\u4e39(Dan Huang)\u4e00\u8d77\uff0c\u535a\u5229\u5b89\u4ee528\u5c0f\u65f650\u5206\u949f\u7684\u6210\u7ee9\u6253\u7834\u4e86\u7eaa\u5f55\u548c30\u5c0f\u65f6\u5927\u5173\u3002\n\u535a\u5229\u5b89\u6539\u53d8\u4e86\u6e38\u620f\u89c4\u5219\u3002\u201c\u6001\u5ea6\u6bd4\u4ec0\u4e48\u90fd\u91cd\u8981\uff0c\u201d\u53e6\u4e00\u540d\u70ae\u5f39\u624b\u544a\u8bc9\u6211\u3002\u201c\u2018\u6211\u4eec\u8981\u51fa\u53bb\u8dd1\u8fd9\u4e48\u5feb\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u88ab\u902e\u6355\uff0c\u4f46\u6211\u4eec\u4f1a\u5192\u8fd9\u4e2a\u9669\u3002\u2019\u4ee5\u524d\u6ca1\u6709\u4eba\u771f\u7684\u8fd9\u4e48\u505a\u8fc7\u3002\u201c\u3002\u5982\u679c\u4ed6\u4eec\u88ab\u6293\u5230\uff0c\u535a\u5229\u5b89\u548c\u4ed6\u7684\u56e2\u961f\u4e0d\u4f1a\u53ea\u6536\u5230\u5f88\u591a\u6602\u8d35\u7684\u95e8\u7968\u3002\u5728\u8bb8\u591a\u5dde\uff0c\u7b80\u5355\u7684\u8d85\u901f\u8fdd\u89c4\u884c\u4e3a\u548c\u66f4\u4e25\u91cd\u7684\u8d5b\u8f66\u548c\u9c81\u83bd\u72af\u7f6a\u4e4b\u95f4\u5b58\u5728\u533a\u522b\uff0c\u8fd9\u4e9b\u7f6a\u884c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e25\u91cd\u7684\u76d1\u7981\u3002\u5982\u679c\u535a\u5229\u5b89\u7ecf\u8fc7\u7684\u6240\u6709\u53bf\u90fd\u51b3\u5b9a\u8d77\u8bc9\u4ed6-\u603b\u517194\u4e2a-\u4ed6\u53ef\u80fd\u4f1a\u5728\u76d1\u72f1\u91cc\u5ea6\u8fc7\u4f59\u751f\u3002\u201c\u5176\u4ed6\u6bcf\u4e2a\u4eba\u90fd\u5728\u5f00\u7f5a\u5355\uff0c\u201d\u8fd9\u4f4d\u70ae\u5f39\u624b\u8bf4\u3002\u201c\u57c3\u5fb7\u6253\u7b97\u4ee5\u2018\u73b0\u5728\u5c31\u902e\u6355\u6211\u2019\u7684\u901f\u5ea6\u3002\u201d\n\u535a\u5229\u5b89\u6210\u5c31\u7684\u6d88\u606f\u4e00\u4f20\u5f00\uff0c\u4ed6\u5c31\u88ab\u4fe1\u606f\u6df9\u6ca1\u4e86\u3002\u4ed6\u5728\u8138\u4e66\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2a\u79c1\u4eba\u5c0f\u7ec4\uff0c\u73b0\u5728\u5df2\u7ecf\u53d1\u5c55\u523050\u591a\u540d\u6210\u5458\uff0c\u6240\u6709\u4eba\u90fd\u5728\u4ea4\u6362\u7b14\u8bb0\uff0c\u6bd4\u8f83\u6c7d\u8f66\uff0c\u5e76\u4e3a\u81ea\u5df1\u7684\u8dd1\u6b65\u505a\u51c6\u5907\u3002\u535a\u5229\u5b89\u544a\u8bc9\u6211\uff1a\u201c\u6211\u80fd\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u662f\u4e3a\u4e86\u627e\u5230\u5176\u4ed6\u50cf\u6211\u4e00\u6837\u7684\u75af\u5b50\uff0c\u5e76\u628a\u4ed6\u4eec\u5e26\u5230\u540c\u4e00\u4e2a\u623f\u95f4\u91cc\uff0c\u6211\u505a\u5230\u4e86\u3002\u201d\u4ed6\u8eab\u6750\u7626\u957f\uff0c\u548c\u853c\u53ef\u4eb2\uff0c35\u5c81\uff0c\u603b\u662f\u5f6c\u5f6c\u6709\u793c\uff0c\u5e26\u6709\u4e00\u53e3\u6175\u61d2\u7684\u5357\u65b9\u53e3\u97f3\u548c\u4e00\u526f\u4ee4\u4eba\u8212\u7f13\u7684\u7537\u4e2d\u97f3\u3002\u5728\u7a7a\u95f2\u65f6\u95f4\uff0c\u4ed6\u5728\u4e3b\u65e5\u5b66\u6821\u6559\u4e66\u3002\u4ed6\u4e5f\u6070\u597d\u662f\u975e\u5b98\u65b9\u4f46\u5b98\u65b9\u7684\u6559\u7236\uff0c\u73b0\u4ee3\u70ae\u5f39\u7684\u5b88\u95e8\u4eba\u548c\u4fdd\u62a4\u8005\u3002\n\u535a\u5229\u5b89\u7ec4\u7ec7\u6d3b\u52a8\uff0c\u5728\u81ea\u5df1\u5bb6\u91cc\u4e3e\u529e\u665a\u5bb4\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u6b3e\u540d\u4e3aVINwiki\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684YouTube\u9891\u9053\uff0c\u8be5\u9891\u9053\u5df2\u6210\u4e3a\u73b0\u4ee3\u70ae\u5f39\u77e5\u8bc6\u7684\u6700\u6743\u5a01\u5b58\u50a8\u5e93\u3002\u5f53\u53f8\u673a\u4eec\u8003\u8651\u6253\u70ae\u5f39\u65f6\uff0c\u4ed6\u4eec\u4f1a\u5f81\u6c42\u535a\u5229\u5b89\u7684\u610f\u89c1\uff1b\u5f53\u4ed6\u4eec\u9700\u8981\u4e00\u4e2a\u516c\u6b63\u7684\u8ba1\u65f6\u5458\u6765\u8ddf\u8e2a\u4ed6\u4eec\u5728\u5168\u56fd\u5404\u5730\u7684\u8fdb\u5ea6\u5e76\u9a8c\u8bc1\u4ed6\u4eec\u7684\u5c1d\u8bd5\u65f6\uff0c\u4ed6\u4eec\u4f1a\u5c06\u6570\u636e\u548c\u8bc1\u636e\u53d1\u9001\u7ed9\u535a\u5229\u5b89\u3002\n\u4ed6\u77e5\u9053\uff0c\u901a\u8fc7\u57f9\u80b2\u8fd9\u4e2a\u5c0f\u800c\u5947\u602a\u7684\u7fa4\u4f53--\u535a\u5229\u5b89\u79f0\u4ed6\u4eec\u4e3a\u201c\u4e00\u7fa4\u75af\u5b50\u5144\u5f1f\u4f1a\u201d--\u4ed6\u6b63\u5728\u4e3a\u81ea\u5df1\u6700\u7ec8\u7684\u4e0b\u53f0\u64ad\u4e0b\u79cd\u5b50\u3002\u5bf9\u4e8e\u4e00\u4e2a\u591a\u5e74\u6765\u4e00\u76f4\u8ba4\u4e3a\u81ea\u5df1\u662f\u552f\u4e00\u4e00\u4e2a\u5bf9\u70ae\u5f39\u5145\u6ee1\u70ed\u60c5\u7684\u5b69\u5b50\u6765\u8bf4\uff0c\u5192\u9669\u4f3c\u4e4e\u662f\u503c\u5f97\u7684\u3002\u201c\u6211\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7eaa\u5f55\u4fdd\u6301\u8005\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u800c\u4e14\u6211\u6bd4\u6211\u4e4b\u524d\u7684\u4efb\u4f55\u4eba\u90fd\u66f4\u5173\u5fc3\u5b83\u7684\u5386\u53f2\u3002\u201d\n\u4eba\u4eec\u786e\u5b9e\u8bd5\u56fe\u6273\u5012\u4ed6\uff1a\u4ece2013\u5e74\u52302019\u5e74\u672b\uff0c\u6709\u6570\u5341\u6b21\u7cbe\u5fc3\u7b56\u5212\u7684\u3001\u5168\u529b\u4ee5\u8d74\u7684\u5c1d\u8bd5\uff0c\u8bd5\u56fe\u593a\u53d6\u8fd9\u4e00\u7eaa\u5f55\u3002\u4ed6\u4eec\u90fd\u5931\u8d25\u4e86\uff0c\u76f4\u52302019\u5e7411\u6708\uff0c\u8f66\u624b\u9053\u683c\u00b7\u5854\u5e03\u7279(Doug Tabbutt)\u548c\u963f\u6069\u00b7\u6258\u66fc(Arne Toman)\u4e0e\u89c2\u5bdf\u5458\u4f2f\u514b\u5229\u00b7\u67e5\u5fb7\u5a01\u514b(Berkeley Chadwick)\u4e00\u8d77\uff0c\u5728\u4e00\u8f86\u82b1\u54e8\u76842015\u5e74\u6885\u8d5b\u5fb7\u65af-\u5954\u9a70E63 AMG\u4e0a\u8bb0\u5f55\u4e8627\u5c0f\u65f625\u5206\u949f\u7684\u65f6\u95f4\u3002\u8fd9\u652f\u961f\u4f0d\u7684\u5e73\u5747\u65f6\u901f\u4e3a103\u82f1\u91cc/\u5c0f\u65f6\uff1b\u4ed6\u4eec\u7684\u6700\u9ad8\u65f6\u901f\u4e3a193\u82f1\u91cc/\u5c0f\u65f6\u3002\n\u73b0\u5728\uff0c\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u4e3a\uff0c\u8fd9\u4e2a\u8bb0\u5f55\u771f\u7684\u662f\u65e0\u4e0e\u4f26\u6bd4\u7684-\u76f4\u5230\u65b0\u51a0\u80ba\u708e\u6e05\u7406\u4e86\u9053\u8def\uff0c\u6380\u8d77\u4e86\u4e00\u573a\u75af\u72c2\u7684\u4e89\u593a\u5386\u53f2\u4e0a\u6700\u5feb\u7684\u6bd4\u8d5b\u3002\n20\u4e16\u7eaa80\u5e74\u4ee3\u521d\uff0c\u5f17\u96f7\u5fb7\u00b7\u963f\u4ec0\u83ab\u5c14(Fred Ashmore)\u5728\u7f05\u56e0\u5dde\u4e0b\u57ce\u957f\u5927\uff0c\u4ed6\u548c\u5176\u4ed6\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u53d1\u73b0\u4e86\u70ae\u5f39\uff1a\u4ed6\u5728\u5bb6\u5ead\u89c6\u9891\u4e2d\u89c2\u770b\u4e86\u8fd9\u90e8\u7535\u5f71\u3002\u6709\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ed6\u751a\u81f3\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6545\u4e8b\u662f\u771f\u7684\u3002\u8fd9\u5bb6\u4eba\u53ea\u6709\u4e09\u4e2a\u7535\u89c6\u9891\u9053\uff0c\u5728\u90a3\u4e9b\u65e5\u5b50\u91cc\uff0c\u963f\u4ec0\u83ab\u5c14\u8bf4\uff0c\u201c\u5982\u679c\u4e0d\u662f\u5728\u4f60\u4eec\u5f53\u5730\u7684\u62a5\u7eb8\u4e0a\uff0c\u5b83\u5c31\u4e0d\u5b58\u5728\u3002\u201d\u51e0\u5e74\u540e\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5341\u51e0\u5c81\u7684\u9752\u5c11\u5e74\uff0c\u5728\u9ad8\u4e2d\u56fe\u4e66\u9986\u7ffb\u9605\u65e7\u7248\u7684\u201c\u516c\u8def\u4e0e\u7530\u5f84\u201d\u6742\u5fd7\u65f6\uff0c\u4ed6\u624d\u53d1\u73b0\uff0c\u4eba\u4eec\u5b9e\u9645\u4e0a\u66fe\u7ecf\u7ecf\u8425\u8fc7\u70ae\u5f39\u8fd0\u52a8\u3002\u4ed6\u60f3\uff0c\u4ed6\u6765\u5f97\u592a\u665a\u4e86\uff1a\u70ae\u5f39\u5df2\u7ecf\u6b7b\u4e86\u3002\n\u5728\u6574\u4e2a\u9ad8\u4e2d\u548c\u5927\u5b66\u671f\u95f4\uff0c\u963f\u4ec0\u83ab\u5c14\u90fd\u662f\u4e00\u540d\u673a\u68b0\u5e08\uff0c\u4e1a\u4f59\u65f6\u95f4\u628a\u4ed6\u80fd\u627e\u5230\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u7528\u6765\u6bd4\u8d5b\uff0c\u6bd4\u5982\u5e93\u5b58\u6c7d\u8f66\u548c\u53d8\u901f\u8d5b\u8f66\u624b\u3002\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u80fd\u6ee1\u8db3\u4ed6\u7684\u6c7d\u8f66\u4e4b\u75d2-\u76f4\u5230\u4ed6\u5f00\u59cb\u8003\u8651\u8d8a\u91ce\u8dd1\u6b65\u7684\u60f3\u6cd5\u3002\u5438\u5f15\u4eba\u7684\u90e8\u5206\u539f\u56e0\u662f\u6587\u5316\u548c\u6000\u65e7\u3002\u201c\u8fd9\u662f\u7f8e\u56fd\u5f0f\u7684\uff0c\u5c31\u50cf\u572866\u53f7\u516c\u8def\u4e0a\u884c\u9a76\u4e00\u6837\uff0c\u201d\u963f\u4ec0\u83ab\u5c14\u544a\u8bc9\u6211\u3002\u4f46\u8fd9\u573a\u6bd4\u8d5b\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u777e\u4e38\u7d20\u9a71\u52a8\u3001\u901f\u5ea6\u8fc7\u5feb\u7684\u7cbe\u795e\u9519\u4e71\u7684\u7ec8\u6781\u8003\u9a8c-\u4e00\u4e2a\u51fb\u8d25\u8fd150\u5e74\u5176\u4ed6\u8f66\u624b\u7684\u673a\u4f1a\u3002\n2014\u5e74\uff0c\u963f\u4ec0\u83ab\u5c14\u5728\u8138\u4e66\u4e0a\u53d1\u5e03\u4e86\u4e00\u5219\u4ed6\u4fee\u7406\u7684\u808c\u8089\u8f66\u7684\u5e7f\u544a\u540e\uff0c\u4e0e\u4e00\u4f4d\u540d\u53eb\u672c\u00b7\u201c\u67e5\u7406\u00b7\u8428\u6cd5\u91cc\u201d\u00b7\u5a01\u5c14\u900a(Ben\u201cCharlie Safari\u201dWilson)\u7684\u65b0\u897f\u5170\u4eba\u804a\u5929\uff0c\u4e86\u89e3\u5230\u5373\u5c06\u4e3e\u884c\u7684\u4e00\u573a\u8d8a\u91ce\u8d5b\uff0c\u8981\u6c42\u53c2\u8d5b\u8005\u53ea\u80fd\u4f7f\u75281980\u5e74\u524d\u5236\u9020\u3001\u8d2d\u4e70\u4ef7\u683c\u4f4e\u4e8e3000\u7f8e\u5143\u7684\u6c7d\u8f66\u3002\u963f\u4ec0\u83ab\u5c14\u538c\u5026\u4e86\u591c\u4ee5\u7ee7\u65e5\u5730\u7ed5\u7740\u540c\u4e00\u6761\u8d5b\u9053\u4e0e\u76f8\u540c\u7684\u4eba\u6bd4\u8d5b\uff0c\u4ece\u4e1c\u6d77\u5cb8\u5230\u897f\u6d77\u5cb8\u7684\u8dd1\u6b65\u4f3c\u4e4e\u8db3\u591f\u75af\u72c2\uff0c\u4ee5\u81f3\u4e8e\u8981\u5c1d\u8bd5\u4e00\u4e0b\u3002\u4ed6\u53c2\u8d5b\uff0c\u73a9\u5f97\u5f88\u5f00\u5fc3\uff0c\u5e76\u57282018\u5e74\u548c2019\u5e74\u518d\u6b21\u53c2\u8d5b\uff0c\u521b\u9020\u4e86\u4e24\u573a\u6bd4\u8d5b\u7684\u901f\u5ea6\u7eaa\u5f55\u3002\u4ed6\u907f\u5f00\u4e86\u5176\u4ed6\u8d8a\u91ce\u8d5b\u8f66\u624b\u63a5\u53d7\u7684\u5927\u591a\u6570\u590d\u6742\u6280\u672f\uff0c\u6bd4\u5982\u98de\u673a\u9632\u649e\u7cfb\u7edf(\u7528\u4e8e\u68c0\u67e5\u5934\u9876\u4e0a\u7684\u8b66\u673a)\u3001\u70ed\u955c\u548c\u519b\u7528\u9640\u87ba\u7a33\u5b9a\u53cc\u7b52\u671b\u8fdc\u955c\u3002\u4ed6\u8fd8\u907f\u514d\u4e86\u5176\u4ed6\u7ade\u4e89\u5bf9\u624b\u4fdd\u6301\u8b66\u60d5\u6240\u4f9d\u8d56\u7684\u66f4\u4f20\u7edf\u7684\u6027\u80fd\u589e\u5f3a\u5668\u3002\u201c\u6211\u8fd9\u8f88\u5b50\u4ece\u672a\u559d\u8fc7\u5496\u5561\uff0c\u201d\u4ed6\u8bf4\u3002\u4ed6\u6ca1\u6709\u542c\u97f3\u4e50\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u901a\u8fc7\u5728\u8111\u5b50\u91cc\u505a\u6570\u5b66\u6765\u4fdd\u6301\u6e05\u9192\uff1a\u8ba1\u7b97\u6bcf\u52a0\u4ed1\u6c7d\u6cb9\u7684\u91cc\u7a0b\u6570\uff0c\u5230\u4e0b\u4e00\u4e2a\u57ce\u5e02\u7684\u8ddd\u79bb\uff0c\u4ee5\u53ca\u4ed6\u9884\u8ba1\u7684\u5230\u8fbe\u65f6\u95f4\u3002\u4ed6\u4ece\u672a\u51fa\u8fc7\u8f66\u7978\uff0c\u751a\u81f3\u8fde\u6321\u6ce5\u677f\u90fd\u6ca1\u78b0\u8fc7\u3002\u76f4\u5230\u53bb\u5e74\uff0c\u4ed6\u624d\u88ab\u4e00\u540d\u53f8\u673a\u649e\u5012\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u540d\u53f8\u673a\u95ef\u4e86\u505c\u8f66\u6807\u5fd7\u3002\u4ed6\u65e0\u52a8\u4e8e\u8877\u3002\u201c\u72d7\u5c4e\u603b\u4f1a\u53d1\u751f\uff0c\u201d\u4ed6\u544a\u8bc9\u6211\u3002\u201c\u6211\u771f\u7684\u5f88\u5e78\u8fd0\u3002\u6211\u7684\u7535\u8bdd\u53f7\u7801\u53ef\u80fd\u5728\u90a3\u4e4b\u524d\u5c31\u8be5\u6253\u4e86\u3002\u201c\u3002\u4f46\u4ed6\u7684\u8f66-\u4e00\u8f861979\u5e74\u7684\u91ce\u9a6c\u773c\u955c\u86c7(Mustang Cobra)\uff0c\u662f\u4ed6\u3001\u4ed6\u7684\u5144\u5f1f\u548c\u4ed6\u7684\u7236\u4eb2\u624b\u5de5\u4fee\u590d\u7684-\u88ab\u649e\u6bc1\u4e86\u3002\n\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u968f\u7740\u8fd9\u4e2a\u56fd\u5bb6\u8fdb\u5165\u5c01\u9501\u72b6\u6001\uff0c\u963f\u4ec0\u83ab\u5c14\u9664\u4e86\u8003\u8651\u70ae\u5f39\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u505a\u7684\u3002\u201cCOVID\u5f88\u5947\u602a\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u592a\u9633\u4e00\u843d\u5c71\uff0c\u5c31\u65e0\u5904\u53ef\u53bb\u4e86\u3002\u201d\u4ed6\u5728\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u7b49\u5f85\u7740\u81ea\u5df1\u7684\u65f6\u95f4\uff0c\u4ed6\u53bb\u90a3\u91cc\u5e2e\u52a9\u4e00\u4f4d\u670b\u53cb\u6e05\u7406\u6700\u8fd1\u83b7\u5f97\u7684\u4e00\u6279\u6c7d\u8f66\uff0c\u665a\u4e0a\u5206\u6790\u65b0\u7684\u4ea4\u901a\u6a21\u5f0f\uff0c\u89c2\u770b\u7ebd\u7ea6\u5e02\u548c\u6d1b\u6749\u77f6\u7684\u4ea4\u901a\u6444\u50cf\u5934\uff0c\u5e76\u5728\u8c37\u6b4c\u5730\u56fe\u4e0a\u73a9\u5f04\u53ef\u80fd\u7684\u8def\u7ebf\u3002\n\u963f\u4ec0\u83ab\u5c14\u77e5\u9053\uff0c\u5927\u591a\u6570\u6c7d\u8f66\u6d41\u91cf\u7684\u7a81\u7136\u6d88\u5931\u4ee3\u8868\u7740\u4e00\u4e2a\u660e\u663e\u800c\u8bf1\u4eba\u7684\u4f18\u52bf\u3002\u4f46\u5728\u5927\u6d41\u884c\u7684\u6700\u521d\u51e0\u5929\uff0c\u751a\u81f3\u4e0d\u6e05\u695a\u9a7e\u8f66\u7a7f\u8d8a\u5168\u56fd\u662f\u53ef\u80fd\u7684-\u4f60\u80fd\u8fdb\u5165\u7ebd\u7ea6\u5e02\u6216\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5417\uff1f\u4e5f\u8bb8\u52a0\u6cb9\u7ad9\u4f1a\u88ab\u5173\u95ed\uff0c\u6216\u8005\u519b\u961f\u4f1a\u88ab\u53eb\u6765\u63a7\u5236\u4ea4\u901a\u6216\u5173\u95edCOVID\u70ed\u70b9\u9644\u8fd1\u7684\u9053\u8def\u3002\u5168\u56fd\u5404\u5730\u7684\u5176\u4ed6\u70ae\u5f39\u624b\u90fd\u8e72\u5728\u90a3\u91cc\uff0c\u60f3\u7740\u540c\u6837\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6211\u5728\u5185\u5e03\u62c9\u65af\u52a0\u5dde\u4e2d\u90e8\uff0c\u4ed6\u4eec\u5f00\u59cb\u5173\u95ed\u5dde\u8fb9\u754c\u600e\u4e48\u529e\uff1f\u5c01\u9501\u53ef\u80fd\u662f\u9003\u8dd1\u7684\u6700\u4f73\u65f6\u673a-\u4e5f\u53ef\u80fd\u662f\u6700\u7cdf\u7cd5\u7684\u65f6\u673a\u3002\n\u963f\u4ec0\u83ab\u5c14\u77e5\u9053\uff0c\u4ed6\u5e76\u4e0d\u662f\u552f\u4e00\u60f3\u77e5\u9053\u5168\u7403\u707e\u96be\u662f\u5426\u6b63\u5728\u521b\u9020\u4e00\u4e2a\u4e0d\u592a\u53ef\u80fd\u7684\u673a\u4f1a\u7684\u4eba\u3002\u7136\u800c\uff0c\u4ed6\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\uff0c\u5c01\u9501\u6b63\u5728\u5f15\u53d1\u4e00\u573a\u72c2\u70ed\u3002\n\u5361\u5c14\u00b7\u8fea\u8328(Carl Dietz)\u662f\u5176\u4e2d\u4e00\u4f4d\u73a9\u5f04\u8dd1\u6b65\u7684\u53f8\u673a\uff0c\u4ed6\u4e8e4\u67083\u65e5\u4ece\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u9a71\u8f66\u524d\u5f80\u7ebd\u7ea6\uff0c\u5e76\u51b3\u5b9a\u8bd5\u4e00\u8bd5\u3002\u4ed6\u51e0\u4e4e\u7acb\u523b\u53d1\u73b0\u6761\u4ef6\u5f88\u7406\u60f3\u3002\u957f\u671f\u4ee5\u6765\uff0c\u66fc\u54c8\u987f\u4e00\u76f4\u88ab\u8ba4\u4e3a\u662f\u201c\u70ae\u5f39\u68a6\u7684\u7834\u574f\u8005\u201d\uff0c\u6b63\u5982\u4e00\u4f4d\u6bd4\u8d5b\u8001\u624b\u6240\u8bf4\uff1a\u5728\u6b63\u5e38\u7684\u4ea4\u901a\u72b6\u51b5\u4e0b\uff0c\u79bb\u5f00\u8fd9\u5ea7\u57ce\u5e02\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u591a\u5c0f\u65f6\uff1b\u4e0d\u523020\u5206\u949f\u88ab\u8ba4\u4e3a\u662f\u5e78\u8fd0\u7684\u3002Dietz\u5728\u4e0b\u53484\u70b9\u4ece\u7ea2\u7403\u51fa\u53d1\uff0c\u8fd9\u4e2a\u65f6\u5019\u7ebd\u7ea6\u901a\u5e38\u4ea4\u901a\u62e5\u5835\uff0c\u4f46\u8857\u9053\u3002\n.", "note_en": "Fred Ashmore was just outside Needles, California, in the parched low desert where the jagged southern point of Nevada meets the Arizona-California border, when he felt it wash over him. A kind of confusion melting into panic. He was exhausted, which he knew was making everything worse. It was about 1 a.m., and he&#39;d been at the wheel for almost 24 hours now, rocketing west at speeds well over 100 miles per hour. For lucky stretches, when the road opened up and Ashmore punched the throttle, he could get his silver Ford Mustang GT up to 159 mph\u2014the car&#39;s top speed, he&#39;d discovered. Now, ahead of him in the inky-black night, he could see the flash of brake lights, a river of travelers funneling into a slow-moving line.\n  Before long, Ashmore was inching along the desert highway, feeling crucial minutes tick by and craning to see what was ahead. That&#39;s when he noticed trunks popping open and a new fear took hold. Officials from the California Department of Food and Agriculture were searching vehicles entering the state. He watched a car in front of him stop and then get looked over from top to bottom.  If they do that to my car, Ashmore thought,  I&#39;m probably not getting it back.\n  On the outside, his Mustang looked pretty much like any other car on the road. Inside was another story. Splayed across Ashmore&#39;s dashboard was an array of devices, including a CB radio, a mounted tablet operating Waze and Google Maps, and an iPhone running a timer. Stuck to the inside of the windshield was a radar detector; on the front grille and back bumper were the sensors for a laser jammer. Even more conspicuously, strapped beside and behind Ashmore, where the front and rear passenger seats should have been, huge fuel tanks sloshed with gasoline. A series of hoses connected them\u2014along with another enormous tank, this one in the trunk\u2014to the car&#39;s main fuel tank. An officer inspecting Ashmore&#39;s rig could have been forgiven for concluding that he was driving a giant gasoline bomb.\n  In fact, it was a vehicle customized for a single purpose: to complete the \u201cCannonball Run,\u201d one of the great underground feats in American car culture\u2014and to do it faster than anyone in history. Unofficial, unsanctioned, and spectacularly illegal, the Cannonball had been a staple of automotive lore for almost a half century before Ashmore&#39;s attempt late last spring. The rules are simple: Drivers start in Manhattan, at the Red Ball Garage on East 31st Street, and finish at the Portofino, a hotel in Redondo Beach, California. What happens in between is up to them. Not surprisingly, the race requires an almost astonishing\u2014and endlessly creative\u2014disregard for traffic laws.\n  Over the decades, teams had been chipping away at the time needed to cover the 2,800 miles\u2014cutting the record by nearly 10 hours since 1971, until it rested at 27 hours and 25 minutes. But among the clique of Cannonball devotees who kept tabs on the sport, a refrain of conventional wisdom had set in: The record could hardly fall much lower. There were simply too many cars on the road, and every innovation in engineering and technology\u2014better fuel economy, more horsepower, the advent of digital navigation\u2014seemed only to increase the problem. The Cannonball was bumping up against the limits of what was humanly possible.\n  But earlier this year, that calculus changed. The arrival of the coronavirus and the lockdown that followed emptied America&#39;s roads like nothing had before. Traffic\u2014the most confounding and unpredictable variable in any Cannonball run\u2014was suddenly a virtual nonissue. The roads were clear, and as Americans hunkered down last spring, a contingent of Cannonball obsessives spotted a moment of rare opportunity. They saw what Fred Ashmore saw: The record was there for the taking.\n  Now, as he idled in the darkness at the border checkpoint\u2014with fewer than 300 miles to go\u2014Ashmore could feel his shot at the record slipping away. Every second counted. When he set out, he knew that achieving the record would require a total average speed of nearly 110 mph\u2014meaning that for every minute spent parked along the way, he would have to drive one minute at the impossible speed of 220 mph just to stay on target.\n  He&#39;d been awake for over a day\u2014had barely even moved in his seat since exiting Oklahoma\u2014and was feeling the claustrophobic dread of sleep deprivation. As he waited his turn in the slow-moving line, he imagined what was coming next: He was headed to jail, no doubt about it. But Ashmore had even prepared for that: He&#39;d packed cash for bail.\n The officer tapped on the driver&#39;s side window and then noted the Texas plates on the Mustang. He asked what Ashmore&#39;s business was in California. \u201cI just took a job here,\u201d he replied. \u201cI&#39;m moving.\u201d Without so much as a second glance inside the vehicle, the officer adopted a perfunctory tone and rattled through a list of fruits and vegetables, asking if Ashmore was bringing any of them across the border. That&#39;s when Ashmore realized his worrying had been for naught. He was going to avoid a night in jail. In fact, he figured the speed record might still be possible. His half-hour delay had been costly, but as Ashmore was waved along, his fear gave way to an adrenalized sense of urgency. He hammered the throttle and the speedometer quickly topped out. The desert opened flat in front of him; he was desperate to make up for lost time.\n  The romance of the American road trip is rooted in a simple, time-honored notion: Only by driving\u2014ideally slow, meandering driving\u2014can we fully appreciate the vastness of this country. Fly overhead and you&#39;ll reach your destination more quickly, but you&#39;ll also miss everything in between. The Cannonball run flips that idea on its head, inviting us to see that even when experienced on four wheels, the country can be made to seem quite small, conquerable even\u2014something you can wrap your arms around.\n The Cannonball is the ultimate road trip, even as it jettisons the usual conventions of the road trip: There are no stops for photos, no detours to sample the World&#39;s Greatest Pancakes, no putting the top down to shout along to the radio as the wind whips by. These trips are thrillingly tactical, planned down to the minute\u2014built, for instance, around traffic light cycles in Manhattan and peak usage times at rural gas stations. A competitor spends hours prepping with satellite maps and complex spreadsheets, constructing timetables that break the country into five-mile increments. All that work, designed to avoid spontaneity.\n And yet it was a kind of spontaneity that birthed the race back in 1971, when a 37-year-old automotive journalist named Brock Yates set out from New York City, bound for Los Angeles. At the time that he conceived of the trip, the country was in the grips of a panic over automotive safety, sparked in part by the consumer advocate Ralph Nader and his famous book,  Unsafe at Any Speed. The alarm helped catalyze the creation of the Department of Transportation and the National Highway Traffic Safety Administration and prompted the passage of seat belt laws in dozens of states. A push for a national speed limit of 55 mph\u2014justified on the grounds of both safety and fuel conservation\u2014was gaining traction as well.\n Yates, a lifelong champion of civil disobedience and libertarian ideas, had a different vision of America&#39;s roads. Yates wanted to show that it was possible for Americans to drive safely at high speeds on the interstate, just as Germans did on the Autobahn. \u201cYes, make high-speed travel by car a reality!\u201d Yates wrote. \u201cTruth and justice affirmed by an overtly illegal act.\u201d\n Forty hours and 51 minutes after Yates\u2014along with two friends and his 14-year-old son\u2014set off, he reached Los Angeles. The nonstop drive was a test run for an audacious plan that Yates had hatched: a multicar race across America that would prove, once and for all, that capable drivers in capable cars could cross the country faster and more safely than anyone imagined. Or, as Yates put it: \u201ca balls-out, shoot-the-moon, fuck-the-establishment rumble from New York to Los Angeles.\u201d The starting point of the race would be the Red Ball Garage, on East 31st Street in Manhattan, where Yates&#39;s employer,  Car and Driver magazine, kept a test fleet of cars. The destination, the Portofino Inn, in Redondo Beach, California, was owned by a friend of Yates&#39;s. He called the race the Cannonball Baker Sea-to-Shining-Sea Memorial Trophy Dash.\n  The name was an homage to Erwin \u201cCannon Ball\u201d Baker, the father of American endurance racing and the holder, for almost 40 years, of the transcontinental record, with a time of 53 hours and 30 minutes. The inaugural Cannonball run was held six months after Yates&#39;s initial cross-country journey and featured eight teams and 23 participants. Among the entrants were a flight attendant, two restaurateurs, and a Union Oil public relations professional in a Travco Motor Home. Driving a Ferrari Daytona, Yates and his teammate, a professional racer named Dan Gurney, smashed Baker&#39;s record with a time of 35 hours and 54 minutes. When Yates&#39;s tongue-in-cheek chronicle of the race appeared in  Car and Driver, the event became a sensation.\n  But by 1979, the Cannonball was more carnival than competition, with teams masquerading as EMTs, off-duty cops, and even a crew of satellite tracking-and-recovery specialists. Though Yates seemed to relish the mayhem as much as anyone\u2014he drove the fake ambulance, after all\u2014he also got tired of it, and feared what it might produce. \u201cI stopped the race, because I knew sooner or later that somebody was going to get killed,\u201d he said years later. His disillusionment only increased when, in 1981, Burt Reynolds immortalized the race on film as a slapstick comedy. Critics savaged  The Cannonball Run. \u201cThe whole movie thing has never been a source of great pride for me,\u201d Yates later wrote in  Car and Driver.\n After Yates pulled the plug, the event began to peter out and the record setting went largely dormant. In 1983, a new record of 32 hours and seven minutes was set in a successor event called the U.S. Express, but after that, there were no verified attempts for nearly a quarter century. Of course, during that same period, the movie\u2014much to Yates&#39;s consternation\u2014became a cult hit, circulating among new generations of car enthusiasts like a relic of a lost time and indoctrinating scores of would-be Cannonballers into the gospel of speed. All they needed was for someone to make the first move.\n  Among those infatuated by the Cannonball was Ed Bolian, a car-crazed teenager in suburban Atlanta. In 2004 he reached out to Yates, who was cordial but insistent: With the number of cars now on the road, not to mention the number of cops, it was impossible to beat the old records or to push beyond the 30-hour wall.\n But the Cannonball wasn&#39;t dead yet. In May 2006 the event got a jolt of energy when Alex Roy, a rally driver, and Dave Maher, a Wall Street banker, drove a souped-up 2000 BMW M5 from the Red Ball Garage to the Santa Monica Pier in 31 hours and four minutes. Roy and Maher&#39;s run brought the race into the modern era\u2014but it did very little to make the record seem attainable for an average car guy like Bolian. Roy&#39;s pursuit of the record had cost hundreds of thousands of dollars and was even aided by a rented spotter plane that flew ahead of him to look out for cops. In subsequent interviews, Roy described the run in daunting terms\u2014you will fail, you will get arrested, you will die\u2014perhaps in the hope of scaring off any would-be followers who might try for his new record.\n Bolian was undeterred. He spent years breaking the Cannonball down into a series of subproblems that he could analyze and solve: traffic, timing, route, fuel consumption, and more. The pursuit of that singular goal carried him through his 20s, even as he struggled to find co-drivers and people to support him\u2014or just to assure him that he wasn&#39;t crazy. The rush of attention brought by Roy&#39;s run had evaporated just as quickly as it arrived. As far as Bolian could tell, there was no one else out there who was even remotely interested in the Cannonball anymore.\n  Eventually, Bolian was ready to take his shot. In 2013, after a decade of research and $45,000 in investment\u2014\u201cevery penny I had\u201d\u2014he made a run in a modified 2004 Mercedes-Benz CL55 AMG. Along with his co-driver, Dave Black, and their navigator and lookout, Dan Huang, Bolian broke the record and the 30-hour mark, with a time of 28 hours and 50 minutes.\n Bolian had changed the game. \u201cIt was the attitude more than anything,\u201d another Cannonballer told me. \u201c \u2018We&#39;re going to go out and run this fast, and we might get arrested, but we&#39;re going to take that chance.\u2019 No one had really done that before.\u201d If they&#39;d been caught, Bolian and his team wouldn&#39;t just have received lots of expensive tickets. In many states there&#39;s a distinction between simple speeding infractions and the more egregious crimes of racing and recklessness, which carry the possibility of serious jail time. If all the counties that Bolian had sped through had decided to prosecute him\u201494 in total\u2014he could have gone to jail for the rest of his life. \u201cEveryone else had been going ticket speeds,\u201d the Cannonballer said. \u201cEd was going \u2018Arrest me now\u2019 speeds.\u201d\n As soon as word got out about Bolian&#39;s achievement, he was inundated with messages. He started a private Facebook group that grew to more than 50 members, all of them swapping notes, comparing cars, and prepping for runs of their own. \u201cAnything I could do to find other crazy people like me and get them in the same room, I did,\u201d Bolian told me. He&#39;s a lanky, affable, and unceasingly polite 35-year-old with a languorous Southern accent and a soothing baritone voice. In his free time, he teaches Sunday school. He also just happens to be the unofficial-but-official godfather, gatekeeper, and preserver of modern Cannonballing.\n  Bolian organized events, hosted dinners at his own home, and founded an app called VINwiki with a corresponding YouTube channel that has become the most authoritative repository of modern Cannonball lore. When drivers are thinking of doing a Cannonball, they ask Bolian for advice; when they need an impartial timekeeper to track their progress across the country and verify their attempt, they send their data and evidence to Bolian.\n He knew that by fostering this small, strange community\u2014\u201ca fraternity of lunatics,\u201d as Bolian called them\u2014he was seeding the ground for his own eventual dethroning. For a kid who spent years thinking he was alone in his fervor for the Cannonball, the risk seemed worth it. \u201cNot only was I a record holder,\u201d he said, \u201cbut I cared much, much more about the history of it than anyone who had come before me.\u201d\n And people did try to take him down: Between 2013 and late 2019, there were dozens of well-planned, all-out attempts to claim the record. They all failed until November 2019, when drivers Doug Tabbutt and Arne Toman, with spotter Berkeley Chadwick, recorded a time of 27 hours and 25 minutes in a tricked-out 2015 Mercedes-Benz E63 AMG. The team&#39;s average speed was 103 mph; their top speed was 193.\n Now  that record, everyone figured, was truly unbeatable\u2014until COVID-19 cleared the roads and set off a mad scramble to be the fastest of all time.\n  Growing up in Downeast Maine in the early 1980s, Fred Ashmore discovered the Cannonball the same way many others did: He watched the movie when it came out on home video. For a long time he didn&#39;t even know the story was real. The family had only three TV channels, and in those days, Ashmore said, \u201cif it wasn&#39;t in your local newspaper, it didn&#39;t exist.\u201d Only years later, as a teen flipping through old copies of  Road &amp; Track magazine in the high school library, did he discover that people actually used to run the Cannonball. He was too late, he figured: The Cannonball was dead.\n Throughout high school and college, Ashmore worked as a mechanic and spent his spare time racing anything he could find, like stock cars and drag racers. Nothing seemed to satisfy his automotive itch\u2014not until he began pondering the notion of a cross-country run. Part of the attraction was cultural and nostalgic. \u201cIt&#39;s Americana, like driving Route 66,\u201d Ashmore told me. But the race also offered the ultimate test of testosterone-fueled, speed-drenched lunacy\u2014a chance to beat almost 50 years&#39; worth of other drivers.\n In 2014, after posting an ad on Facebook for a muscle car he&#39;d fixed up, Ashmore got to chatting with a New Zealander named Ben \u201cCharlie Safari\u201d Wilson and learned about an upcoming cross-country race requiring entrants to use only cars built before 1980 and purchased for less than $3,000. Ashmore was tired of racing around the same track against the same people night after night, and a coast-to-coast run seemed just crazy enough to try. He entered, had fun, and entered again in 2018 and 2019, setting speed records for the race on both runs. He eschewed most of the sophisticated technology that other cross-country racers embraced, like aircraft-collision-avoidance systems (to check for police planes overhead), thermal scopes, and military-style gyro-stabilized binoculars. He also avoided the more conventional performance enhancers that other competitors relied on to stay alert. \u201cI&#39;ve never drank coffee in my life,\u201d he said. He didn&#39;t listen to music. Instead he kept himself awake by doing math in his head: calculating his mileage per gallon, the distance to his next city, and his expected arrival time. He never had an accident or even a fender bender. Not until last year, when he was blindsided by a driver who, he says, ran a stop sign. He was unfazed. \u201cShit happens,\u201d he told me. \u201cI&#39;ve been very lucky. My number probably should&#39;ve been called before that.\u201d But his car\u2014a 1979 Mustang Cobra that he, his brother, and his dad had rebuilt by hand\u2014was wrecked.\n Earlier this year, as the country went into lockdown, there wasn&#39;t much for Ashmore to do other than think about Cannonball. \u201cCOVID was weird,\u201d he said. \u201cOnce the sun went down, there was nowhere to go.\u201d He was biding his time in Oklahoma, where he&#39;d gone to help a friend clean up a recently acquired car collection, and spending his nights analyzing the new traffic patterns, watching traffic cams in New York City and Los Angeles, and toying with possible routes on Google Maps.\n  Ashmore knew that the sudden disappearance of most car traffic represented an obvious and enticing advantage. But in the earliest days of the pandemic, it wasn&#39;t clear that driving across the country was even possible\u2014could you get into New York City or California? Maybe gas stations would be closed, or the Army would get called in to control traffic or close roads near COVID hot spots. Other Cannonballers were hunkered down across the country, wondering the same thing.  What if I&#39;m in the middle of Nebraska and they start shutting down state borders? The lockdown might be the perfect time to make a run\u2014or maybe the worst.\n  Ashmore knew he wasn&#39;t alone in wondering if the global catastrophe was creating an unlikely opportunity. What he would soon discover, though, was that the lockdown was spawning a frenzy.\n One of the drivers who toyed with making a run was Carl \u201cYumi\u201d Dietz, who drove up to New York from South Carolina on April 3 and decided to give it a shot. Almost instantly he discovered that conditions were ideal. Manhattan had long been regarded as \u201cthe destroyer of Cannonball dreams,\u201d as one race veteran put it: On a normal run in typical traffic, it can take more than an hour to get out of the city; under 20 minutes is considered lucky. Dietz set off from the Red Ball at 4 p.m., when New York is usually jammed with traffic, but the street\n......", "posttime": "2020-10-30 14:39:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u70ae\u5f39,cannonball", "title": "\u201c\u5927\u70ae\u5f39\u7206\u70b8\u201d", "title_en": "The Great Cannonball Boom", "transed": 1, "url": "https://www.gq.com/story/the-great-cannonball-boom", "via": "", "real_tags": ["\u70ae\u5f39"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032240, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4eba\u63d0\u8bae\u5728Ruby\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6dfb\u52a0\u8f6f\u4ef6\u4e8b\u52a1\u5185\u5b58(Software Transaction Memory\uff0c\u7b80\u79f0STM)\u3002\u8fd9\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u76ee\u7684\u662f\u5728Ruby\u4e2d\u589e\u52a0\u5bf9\u5e76\u53d1\u6027\u548c\u5e76\u884c\u6027\u7684\u66f4\u597d\u652f\u6301\uff0c\u7279\u522b\u662fRactor\u7684\u60f3\u6cd5\u3002\u4f50\u7530\u5149\u4e00(Koichi Sasada)\u63d0\u51fa\u5e76\u5b9e\u65bd\u4e86\u4e00\u4e2a\u6982\u5ff5\u3002\n\u672c\u6587\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5173\u4e8eSTM\u662f\u4ec0\u4e48\u3001\u5982\u4f55\u4f7f\u7528\u5b83\u4ee5\u53ca\u60a8\u53ef\u80fd\u60f3\u8981\u4f7f\u7528\u5b83\u7684\u539f\u56e0\u7684\u4e0a\u4e0b\u6587\u3002\u6211\u4eec\u5c06\u5c55\u793a\u4e00\u4e2a\u975e\u5e38\u9002\u5408STM\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u6765\u8ba8\u8bba\u5b83\u7684\u4f18\u70b9\u3001\u95ee\u9898\u548c\u4e00\u4e9b\u6709\u5f85\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u6211\u535a\u58eb\u5b66\u4f4d\u7684\u524d\u534a\u90e8\u5206\u662f\u5173\u4e8eSTM\u7684\uff0c\u540e\u534a\u90e8\u5206\u662f\u5173\u4e8eRuby\u7684\uff0c\u6240\u4ee5\u6211\u5bf9\u8fd9\u4e24\u4e2a\u65b9\u9762\u90fd\u6709\u76f8\u5f53\u591a\u7684\u7ecf\u9a8c\uff0c\u800c\u4e14\u5b83\u4eec\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u60f3\u6cd5\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u6709\u8da3\u3002\n\u5047\u8bbe\u6211\u4eec\u662f\u4e00\u5bb6\u7ba1\u7406\u591a\u4e2a\u94f6\u884c\u8d26\u6237\u7684\u94f6\u884c\u3002\u6bcf\u4e2a\u5e10\u6237\u90fd\u6709\u4e00\u4e2a\u5408\u8ba1\u3002\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u6c38\u65e0\u6b62\u5883\u7684\u8bf7\u6c42\u6d41\uff0c\u8981\u6c42\u5c06\u4e00\u7b14\u94b1m\u4ece\u5e10\u6237a\u8f6c\u79fb\u5230\u5e10\u6237b\u3002\n\u5173\u4e8eRuby\uff0c\u53ef\u80fd\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053x+=y\u7b49\u540c\u4e8e\u5199\u6210t=x\uff1bx=t+y\uff0c\u6211\u4eec\u5c06\u628a\u5b83\u5b8c\u6574\u5730\u5199\u51fa\u6765\uff0c\u4ee5\u4fbf\u8ba9\u6211\u4eec\u81ea\u5df1\u660e\u767d\u8fd9\u4e00\u70b9\u3002\n\u5faa\u73af\u6267\u884ca\uff0cb\uff0cm=Get_Next_Transfer a_BALANCE=ACCOUNTS[a]ACCOUNTS[a]=a_BALANCE-m b_BALANCE=ACCOUNTS[b]Accounts[b]=b_BALANCE+m end\u3002\n\u6211\u4eec\u6709\u5f88\u591a\u4f20\u8f93\u8981\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6709\u591a\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u8fd9\u4e9b\u4f20\u8f93\u3002\nvt.\u7684\uff1b\u65f6\u4ee3\u505a\u7ebf\u6761\u3002\u65b0\u5faa\u73afdo a\uff0cb\uff0cm=Get_Next_Transfer a_BALANCE=ACCOUNTS[a]ACCOUNTS[a]=a_BALANCE-m b_BALANCE=ACCOUNTS[b]ACCOUNTS[b]=b_BALANCE+m END END\n\u6211\u4eec\u73b0\u5728\u6709\u51e0\u4e2a\u95ee\u9898\u3002\u5728\u6240\u6709\u8fd9\u4e9b\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5c06\u94b1\u5b58\u5165\u60a8\u7684\u5e10\u6237\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\n\u5e10\u6237[a]=100#\u7ebf\u7a0b1#\u7ebf\u7a0b2\u4f59\u989d=\u5e10\u6237[a]#\u4f59\u989d=100\u4f59\u989d=\u5e10\u6237[a]#\u4f59\u989d=100\u5e10\u6237[a]=\u4f59\u989d+10#\u5e10\u6237[a]=110\u5e10\u6237[a]=\u4f59\u989d+10#\u5e10\u6237[a]=110\u3002\n\u4e24\u7b14\u8f6c\u8d26\u5df2\u7ecf\u7528\u5b8c\u4e86\uff0c\u4f46\u60a8\u7684\u4f59\u989d\u662f110\u3002\u5176\u4ed610\u4e2a\u5df2\u7ecf\u4e22\u5931-\u8fd9\u88ab\u79f0\u4e3a\u4e22\u5931\u7684\u66f4\u65b0\uff0c\u610f\u601d\u662f\u5c31\u597d\u50cf\u4ece\u672a\u8fdb\u884c\u8fc7\u66f4\u65b0\u4e00\u6837\u3002\n\u8fd8\u8981\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u7ebf\u7a0b\u5728\u4ecea\u53d6\u94b1\u4e4b\u540e\uff0c\u4f46\u5728\u5c06\u94b1\u653e\u5165b\u4e4b\u524d\u5d29\u6e83\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u8fd9\u7b14\u8f6c\u8d26\u5c06\u90e8\u5206\u9002\u7528\uff0c\u6211\u4eec\u53c8\u4f1a\u8d54\u94b1\u3002\n\u6211\u4eec\u9700\u8981\u5bf9\u6211\u4eec\u7684\u5e10\u6237\u4f7f\u7528\u67d0\u79cd\u540c\u6b65\u3002Ruby\u6709\u4e92\u65a5\u9501\u6216\u4e92\u65a5\u9501\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5b83\u4eec\u3002\nvt.\u7684\uff1b\u65f6\u4ee3\u505a\u7ebf\u6761\u3002\u65b0\u5faa\u73af\u6267\u884ca\uff0cb\uff0cm=get_next_transfer\u9501[a]\u3002\u540c\u6b65DO\u9501\u5b9a[b]\u3002\u540c\u6b65DO\u5e10\u6237[a]-=m\u4e2a\u5e10\u6237[b]+=m\u4e2a\u7ed3\u675f\u7ed3\u675f\u3002\n\u8fd9\u4e2a\u7ba1\u7528\u5417\uff1f\u5982\u679c\u6211\u4eec\u5728\u5904\u7406\u4ece\u5e10\u62371002\u52301001\u7684\u8f6c\u79fb\u7684\u540c\u65f6\uff0c\u540c\u65f6\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e0a\u5904\u7406\u4ece\u5e10\u62371001\u5230\u5e10\u62371002\u7684\u8f6c\u79fb\uff0c\u90a3\u4e48\u5728\u540c\u4e00\u65f6\u95f4\u4ece\u5e10\u62371001\u8f6c\u79fb\u5230\u5e10\u62371002\u53c8\u4f1a\u600e\u4e48\u6837\u5462\uff1f\n\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5c06\u5c1d\u8bd5\u9501\u5b9a1001\uff0c\u7136\u540e\u5c1d\u8bd5\u9501\u5b9a1002\u3002\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u5c06\u5c1d\u8bd5\u9501\u5b9a1002\uff0c\u7136\u540e\u9501\u5b9a1001\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u8fbe\u5230\u9501\u5b9a1001\uff0c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u8fbe\u5230\u9501\u5b9a1002\uff0c\u90a3\u4e48\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5c06\u7b49\u5f85\u76f8\u53cd\u7684\u9501\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u5b83\u4eec\u5df2\u7ecf\u62e5\u6709\u7684\u9501\u3002\u6211\u4eec\u5c06\u9677\u5165\u50f5\u5c40\u3002\n\u5982\u679c\u6211\u4eec\u603b\u662f\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u83b7\u53d6\u9501\uff0c\u901a\u8fc7\u9996\u5148\u6536\u96c6\u5b83\u4eec\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002\nvt.\u7684\uff1b\u65f6\u4ee3\u505a\u7ebf\u6761\u3002\u65b0\u5faa\u73afdo a\uff0cb\uff0cm=get_next_transfer x\uff0cy=[a\uff0cb]\u3002\u6392\u5e8f\u9501[x]\u3002\u540c\u6b65DO\u9501[y]\u3002\u540c\u6b65DO\u5e10\u6237[a]-=m\u4e2a\u5e10\u6237[b]+=m\u4e2a\u7ed3\u675f\u7ed3\u675f\u3002\n\u73b0\u5728\uff0c\u5728\u8fd9\u4e24\u4e2a\u8f6c\u8d26\u4e2d\uff0c\u5e10\u62371001\u9996\u5148\u88ab\u9501\u5b9a\uff0c\u800c1002\u88ab\u7b2c\u4e8c\u6b21\u9501\u5b9a\u3002\u90a3\u4f1a\u884c\u5f97\u901a\u7684\u3002\n\u6211\u4eec\u5fc5\u987b\u7f16\u9020\u4e00\u4e2a\u6709\u70b9\u4eba\u4e3a\u7684\u8981\u6c42\u6765\u89e3\u91ca\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u4f46\u8bf7\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6709\u5f88\u591a\u94b1\uff0c\u51fa\u4e8e\u67d0\u79cd\u5145\u5206\u7684\u7406\u7531\uff0c\u6211\u4eec\u60f3\u8f6c\u5230\u4e00\u4e2a\u8d26\u6237\uff0c\u5982\u679c\u6211\u4eec\u53ea\u6709\u4e00\u70b9\u94b1\uff0c\u6211\u4eec\u60f3\u8f6c\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u8d26\u6237\u3002\u4e5f\u8bb8\u5982\u679c\u6211\u4eec\u8fd9\u4e2a\u6708\u5f88\u6709\u94b1\uff0c\u6211\u4eec\u53ef\u4ee5\u6350\u94b1\u7ed9\u6148\u5584\u673a\u6784\uff0c\u5426\u5219\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u81ea\u5df1\u5b58\u94b1\u3002\n\u73b0\u5728\u6211\u4eec\u5c06\u8ba8\u8bba\u8d26\u6237a\uff0cb\uff0cc\uff0c\u4ee5\u53ca\u8d44\u91d1\u95e8\u69dbt\u3002\nvt.\u7684\uff1b\u65f6\u4ee3\u505a\u7ebf\u6761\u3002\u65b0\u5faa\u73afdo a\uff0cb\uff0cc\uff0ct\uff0cm=get_next_transfer x\uff0cy\uff0cz=[a\uff0cb\uff0cc]\u3002\u6392\u5e8f\u9501[x]\u3002\u540c\u6b65DO\u9501[y]\u3002\u540c\u6b65DO\u9501[z]\u3002\u540c\u6b65DO IF\u5e10\u6237[a]&&gt;t\u5e10\u6237[a]-=m\u4e2a\u5e10\u6237[b]+=m\u4e2a\u5176\u4ed6\u5e10\u6237[a]-=m\u4e2a\u5e10\u6237[c]+=m\u4e2a\u672b\u7aef\u7ed3\u675f\u3002\n\u4e8b\u60c5\u5f00\u59cb\u53d8\u5f97\u975e\u5e38\u590d\u6742\u4e86\u3002\u8fd9\u9501\u5b9a\u7684\u6bd4\u5b83\u9700\u8981\u7684\u66f4\u591a-\u5b83\u9501\u5b9ab\u548cc\uff0c\u4f46\u968f\u540e\u53ea\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u4e2a\u3002\u5982\u679c\u6700\u540e\u4f7f\u7528b\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u670d\u52a1\u5230c\u7684\u4f20\u8f93\uff0c\u4f46\u662f\u60a8\u5df2\u7ecf\u9501\u5b9a\u4e86\u5b83\uff0c\u4f46\u662f\u5b83\u4e0d\u80fd\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u662f\u4e24\u4e2a\u6f5c\u5728\u7684\u5e10\u6237\uff0c\u800c\u662f\u6570\u5343\u4e2a\uff0c\u5e76\u4e14\u60a8\u5fc5\u987b\u5c06\u5b83\u4eec\u5168\u90e8\u9501\u5b9a\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u60a8\u5728\u5f00\u59cb\u8f6c\u8d26\u4e4b\u524d\u6839\u672c\u65e0\u6cd5\u8ba1\u7b97\u51fa\u8981\u8f6c\u8d26\u5230\u54ea\u4e2a\u5e10\u6237\uff0c\u90a3\u4e48\u60a8\u5c06\u6c38\u8fdc\u65e0\u6cd5\u540c\u65f6\u5904\u7406\u4e24\u4e2a\u8f6c\u8d26\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u5f00\u59cb\u5c1d\u8bd5\u5bf9\u9501\u548c\u4e8b\u7269\u8fdb\u884c\u6240\u6709\u8fd9\u4e9b\u9501\u5b9a\u548c\u6392\u5e8f\u65f6\u51fa\u9519\u3002\n\u9000\u4e00\u6b65\uff0c\u628a\u6240\u6709\u7684\u4e1c\u897f\u90fd\u8003\u8651\u8fdb\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u62df\u5b9a\u4e00\u4e9b\u8981\u6c42\u3002\n\u4e00\u81f4\u6027-\u610f\u5473\u7740\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u59cb\u7ec8\u6709\u6548-\u603b\u91d1\u989d\u6c38\u8fdc\u4e0d\u53d8\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5e93\u6216\u8bed\u8a00\u53ef\u4ee5\u4e3a\u6211\u4eec\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\u3002\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u7f16\u5199\u51e0\u4e4e\u4e0e\u6700\u521d\u7f16\u5199\u7684\u5185\u5bb9\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u53ea\u9700\u8981\u4e00\u4e2a\u6ce8\u91ca\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5757\u4e2d\u7684\u4ee3\u7801\u6210\u4e3a\u539f\u5b50\u7684\u3001\u4e00\u81f4\u7684\u3001\u9694\u79bb\u7684\uff0c\u5e76\u4e14\u7ed3\u679c\u662f\u6301\u4e45\u7684\u3002\nvt.\u7684\uff1b\u65f6\u4ee3\u505a\u7ebf\u6761\u3002\u65b0\u5faa\u73afdo a\uff0cb\uff0cm=get_next_transfer\u539f\u5b50\u6267\u884c\u5e10\u6237[a]-=m\u4e2a\u5e10\u6237[b]+=m\u4e2aend\u3002\n\u8fd9\u5c31\u662f\u4e8b\u52a1\u6027\u5185\u5b58\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u7684\u4e8b\u60c5\u3002\u5b83\u5c06\u81ea\u52a8\u76d1\u89c6\u60a8\u5728\u539f\u5b50\u5757(\u5373\u4e8b\u52a1)\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u786e\u4fdd\u5b83\u662f\u5426\u5b8c\u5168\u5e94\u7528\u3001\u6574\u4e2a\u7cfb\u7edf\u7684\u5e73\u8861\u59cb\u7ec8\u4fdd\u6301\u4e00\u81f4\u3001\u4e8b\u52a1\u770b\u4e0d\u5230\u5f7c\u6b64\u90e8\u5206\u5e94\u7528\u7684\u7ed3\u679c\uff0c\u4ee5\u53ca\u5199\u5165\u663e\u793a\u5e76\u4fdd\u6301\u4e0d\u53d8\u3002\n\u5b83\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u6700\u7ec8\u81ea\u5df1\u5f97\u51fa\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\uff0c\u6216\u8005\u5b83\u4e5f\u53ef\u4ee5\u505a\u4e00\u4e9b\u5176\u4ed6\u7684\u4e8b\u60c5\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u901a\u5e38\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u5373\u8bfb\u53d6\u548c\u5199\u5165\u5b58\u50a8\u5728\u65e5\u5fd7\u4e2d\uff0c\u7136\u540e\u4e8b\u52a1\u5728\u7ed3\u675f\u65f6\u8ba1\u7b97\u51fa\u662f\u5426\u6709\u5176\u4ed6\u4eba\u5177\u6709\u60a8\u5df2\u7ecf\u8bfb\u53d6\u7684\u5199\u5165\u4f4d\u7f6e\u3002\u5982\u679c\u6709\uff0c\u5219\u60a8\u8bfb\u53d6\u7684\u503c\u4e0d\u518d\u6709\u6548\uff0c\u56e0\u6b64\u60a8\u7684\u4e8b\u52a1\u4e0e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u51b2\u7a81\uff0c\u5c06\u4e2d\u6b62\u5e76\u91cd\u8bd5\uff0c\u518d\u6b21\u8bfb\u53d6\u4f4d\u7f6e\u3002\u5f53\u5b83\u6700\u7ec8\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u4e8b\u52a1\u51b2\u7a81\u65f6\uff0c\u5b83\u88ab\u63d0\u4ea4\u5e76\u6210\u529f\u3002\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u9700\u8981\u9884\u5148\u9501\u5b9a\u6240\u6709\u5185\u5bb9\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u907f\u514d\u4e86\u53ef\u80fd\u9700\u8981\u6bcf\u4e2a\u5e10\u6237\u65f6\u4f1a\u53d1\u751f\u7684\u95ee\u9898\u3002\u9884\u5148\u9501\u5b9a\u6240\u6709\u5185\u5bb9\u79f0\u4e3a\u60b2\u89c2\u9501\u5b9a\u3002\u6211\u4eec\u6b63\u5728\u8f6c\u5411\u4e50\u89c2\u9501\u5b9a\u3002\nKoichi\u4e3aRuby\u63d0\u8bae\u7684STM\uff0c\u4e0e\u4ed6\u63d0\u8bae\u7684\u53c2\u8d5b\u8005(\u7c7b\u4f3c\u4e8e\u6f14\u5458)\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\u3002\n\u5e10\u6237=9999\u3002\u6cf0\u6664\u58eb\u62a5\u3002\u5730\u56fe{\u7ebf\u7a0b\uff1a\uff1aTVAR.\u3002\u65b0\u5efa(100)}n\u3002\u65f6\u4ee3\u505a\u8d5b\u8f66\u3002\u65b0\u7684*\u5e10\u6237\u6267\u884c|*\u5e10\u6237|\u5faa\u73af\u6267\u884ca\uff0cb\uff0cm=Get_Next_Transfer Thread\u3002\u81ea\u52a8\u8ba1\u7b97\u5e10\u76ee[a]\u3002\u503c-=m\u4e2a\u5e10\u6237[b]\u3002\u503c+=m\u672b\u7aef\n\u4ed6\u4f7f\u7528\u7684\u662fRactor\uff0c\u4f46\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u672c\u6587\u7684\u4e00\u6761\u7ebf\u7d22\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u5305\u542b\u503c\u7684TVAR\u5bf9\u8c61\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u5e10\u6237\u4f59\u989d\u6570\u7ec4\u3002TVAR\u662f\u4e00\u4e2a\u4e8b\u52a1\u53d8\u91cf\u3002\u53ea\u6709\u8fd9\u4e9b\u53d8\u91cf\u662f\u4e8b\u52a1\u6027\u7684\uff0c\u800c\u4e0d\u662f\u60a8\u8bfb\u53d6\u6216\u5199\u5165\u7684\u4efb\u4f55\u5176\u4ed6Ruby\u503c\u3002\u4ed6\u7684\u8bbe\u8ba1\u8981\u6c42\u5c06\u60a8\u8981\u4f7f\u7528\u7684TVAR\u5bf9\u8c61\u4f20\u9012\u7ed9ractor\uff0c\u56e0\u4e3a\u6709\u5173\u5171\u4eab\u7684\u89c4\u5219\u4e0e\u672c\u6587\u65e0\u5173\u3002\n\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u5927\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u8fdb\u4e00\u6b65\u8bf4\u660e\u5e76\u8ba8\u8bba\u4e00\u4e9b\u95ee\u9898\u548c\u6709\u5f85\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4ee3\u7801\u53ef\u4ee5\u5728GitHub\u4e0a\u627e\u5230\u3002\n\u5047\u8bbe\u6211\u4eec\u7684\u5de5\u4f5c\u662f\u5728\u7535\u8def\u677f\u4e0a\u5e03\u7ebf\u3002\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u5e26\u6709\u710a\u76d8\u7684\u7535\u8def\u677f(\u8fde\u63a5\u5230\u5b89\u88c5\u5728\u7535\u8def\u677f\u4e0a\u7684\u7ec4\u4ef6)\uff0c\u4ee5\u53ca\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e9b\u710a\u76d8\u4e4b\u95f4\u7ed8\u5236\u7684\u8def\u7ebf\u5217\u8868\u3002\u6709\u5f88\u591a\u710a\u76d8\u548c\u7ebf\u8def\uff0c\u5c0f\u7535\u8def\u677f\u4e0a\u7684\u7a7a\u95f4\u4e0d\u5927\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u8ba9\u7535\u7ebf\u76f8\u4e92\u4ea4\u53c9\u975e\u5e38\u6602\u8d35\u3002\u6bd4\u65b9\u8bf4\uff0c\u5806\u53e0\u5f97\u8d8a\u6df1\u7684\u7535\u7ebf\u5c31\u8d8a\u8d35\u3002\n\u5728\u8fd9\u4e2a\u6700\u5c0f\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e24\u6761\u8def\u7531\uff0c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u76f8\u4e92\u4ea4\u53c9\u3002\n\u8fd9\u4e2a\u793a\u4f8b\u662f\u4e00\u4e2a\u5904\u7406\u5668\u6a21\u5757\uff0c\u5b83\u663e\u793a\u4e86\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u4f7f\u7528\u7684\u89c4\u6a21\u3002\u8fd9\u5757\u677f\u4e0a\u6709\u8bb8\u591a\u66f4\u957f\u7684\u8def\u7ebf\uff0c\u66f4\u5bb9\u6613\u53d1\u751f\u51b2\u7a81\u3002\n\u6b64\u793a\u4f8b\u662f\u5185\u5b58\u6a21\u5757\u3002\u5b83\u6709\u8bb8\u591a\u8f83\u77ed\u7684\u8def\u7ebf\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u8fd9\u4e9b\u8def\u7ebf\u51b2\u7a81\u8f83\u5c11\u3002\n\u6bcf\u6761\u8def\u7531\u7684\u5e03\u5c40\u90fd\u6709\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f1a\u4e3a\u4e2a\u522b\u8def\u7531\u751f\u6210\u6700\u4f18\u89e3\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u8def\u7531\u90fd\u662f\u8fd9\u6837\u3002\u5b83\u53eb\u505a\u674e\u7684\u7b97\u6cd5\uff0c\u65e9\u57281960\u5e74\u5c31\u53d1\u8868\u4e86\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u5c55\u793a\u7b97\u6cd5\u7684\u4ee3\u7801\uff0c\u4f46\u5b83\u7a0d\u5fae\u7b80\u5316\u4e86\u4e00\u4e9b\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u60a8\u4e5f\u4e0d\u9700\u8981\u5168\u90e8\u9075\u5faa\u3002\n\u7535\u8def\u677f\u7684\u72b6\u6001\u662f\u6805\u683c\uff0c\u6bcf\u4e2a\u65b9\u5757\u7684\u503c\u662f\u5806\u53e0\u5728\u8be5\u4f4d\u7f6e\u7684\u5bfc\u7ebf\u6570\u91cf\u3002\u6211\u4eec\u4f9d\u6b21\u770b\u4e00\u904d\u6211\u4eec\u7684\u8def\u7ebf\u6e05\u5355\u3002\n\u5728\u6269\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ece\u8def\u7ebf\u5f00\u59cb\uff0c\u4ee5\u6ce2\u9635\u9762\u5f62\u5f0f\u5411\u5916\u79fb\u52a8\uff0c\u5728\u9ed1\u677f\u4e0a\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u50a8\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u94fa\u8bbe\u8def\u7ebf\u53ef\u80fd\u82b1\u8d39\u7684\u8d39\u7528\u3002\u8003\u8651\u5230\u6bcf\u6761\u53ef\u80fd\u7684\u8def\u7ebf\uff0c\u6211\u4eec\u4ece\u8fd9\u6761\u8def\u6d8c\u51fa\u3002\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\uff0c\u76f4\u5230\u677f\u4e0a\u6ca1\u6709\u4e00\u4e2a\u65b0\u4f4d\u7f6e\u7684\u6210\u672c\u4f4e\u4e8e\u76ee\u524d\u8def\u7ebf\u672b\u7aef\u7684\u6210\u672c\u3002\n\u5b9a\u4e49\u6269\u5c55(\u7535\u8def\u677f\uff0c\u53d7\u963b\uff0c\u6df1\u5ea6\uff0c\u5e03\u7ebf)START_POINT=\u5e03\u7ebf\u3002A\u7aef\u70b9=\u8def\u7ebf\u3002B\u6210\u672c=Lee\uff1a\uff1a\u77e9\u9635\u3002\u65b0(\u8463\u4e8b\u4f1a\u3002\u9ad8\u5ea6\uff0c\u767b\u673a\u724c\u3002\u5bbd\u5ea6)\u6210\u672c[START_POINT\u3002Y\uff0c\u8d77\u70b9\u3002X]=1 Wavefront=[START_POINT]LOOP DO NEW_WAVEFRONT=[]WAVEFRONT\u3002\u6bcf\u4e2aDO|POINT|POINT_COST=COST[POINT\u3002Y\uff0c\u70b9\u3002\u8bbf\u95ee\u6570/\u6bcf\u767e\u4e07\u4eba\uff1aReach.\u3002\u76f8\u90bb(\u677f\u3001\u70b9)\u3002\u5982\u679c\u53d7\u963b\uff0c\u5219\u6bcf\u4e2aDO|\u76f8\u90bb|\u4e0b\u4e00\u6b65[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]==1&amp\uff1b&amp\uff1b\u76f8\u90bb\uff01=\u5e03\u7ebf\u3002B CURRENT_COST=\u6210\u672c[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]NEW_COST=POINT_COST+LEE\u3002\u6210\u672c(\u6df1\u5ea6[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X])\u5982\u679cCURRENT_COST==0||NEW_COST&lt\uff1bCURRENT_COST COST[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]=NEW_COST NEW_WAVEFRONT\u3002\u63a8\u76f8\u90bb\u7aefCOST_AT_ROUTE_END=COST[END_POINT]\u3002Y\uff0c\u7aef\u70b9\u3002X]MINIMUM_NEW_COST=NEW_WAVEFRONT\u3002\u5730\u56fe{|\u5df2\u6807\u8bb0|\u6210\u672c[\u5df2\u6807\u8bb0\u3002Y\uff0c\u6709\u8bb0\u53f7\u3002X]}\u3002\u5982\u679cCOST_AT_ROUTE_END&gt\uff1b0&amp\uff1b&amp\uff1bCOST_AT_ROUTE_END&lt\uff1bMINIMUM_NEW_COST_COST=NEW_WAVEFRONT END COST END\uff0c\u5219\u6700\u5c0f\u4e2d\u65ad\u3002\n\u5728\u6c42\u89e3\u9636\u6bb5\uff0c\u6211\u4eec\u4ece\u8def\u7531\u672b\u7aef\u56de\u6eaf\uff0c\u6cbf\u7740\u6210\u672c\u6700\u4f4e\u7684\u8def\u5f84\u8fdb\u884c\u6269\u5c55\u3002\nDef solve(\u677f\uff0c\u8def\u7ebf\uff0c\u6210\u672c)START_POINT=\u8def\u7ebf\u3002B END_POINT=\u8def\u7ebf\u3002A\u89e3\u51b3\u65b9\u6848=[START_POINT]\u5faa\u73afdo\u76f8\u90bb=Lee\u3002\u76f8\u90bb(\u7535\u8def\u677f\uff0c\u89e3\u51b3\u65b9\u6848\u3002\u6700\u540e)LOST_COST=\u76f8\u90bb\u3002\u62d2\u7edd{|a|\u6210\u672c[a]\u3002Y\uff0cA\u3002X]\u3002\u96f6\uff1f}\u3002Min_by{|a|\u6210\u672c[a.\u3002Y\uff0cA\u3002X]}\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679cLOST_COST==END_POINT END\uff0c\u5219\u63a8\u9001LOST_COST BREAK\u3002\n\u5728\u5e03\u8bbe\u65f6\uff0c\u6211\u4eec\u91c7\u7528\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u70b9\u5217\u8868\uff0c\u5e76\u589e\u52a0\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u4ee5\u8868\u793a\u8be5\u70b9\u4e0a\u73b0\u5728\u6709\u53e6\u4e00\u6761\u5bfc\u7ebf\u3002\n\u6574\u4e2a\u7b97\u6cd5\u662f\u5c55\u5f00\u3001\u6c42\u89e3\u3001\u94fa\u8bbe\uff0c\u7136\u540e\u6839\u636e\u8def\u5f84\u8bb0\u5f55\u89e3\u3002\n\u51b2\u6d6a\u677f\u3002\u8def\u7ebf\u3002\u6bcf\u4e2aDO|ROUTE|COST=EXPAND(\u677f\u6750\uff0c\u53d7\u963b\uff0c\u6df1\u5ea6\uff0c\u5e03\u7ebf)\u89e3\u51b3\u65b9\u6848=SOLVE(\u677f\u6750\uff0c\u5e03\u7ebf\uff0c\u6210\u672c)\u94fa\u8bbe\u6df1\u5ea6\uff0c\u89e3\u51b3\u65b9\u6848[ROUTE]=\u89e3\u51b3\u65b9\u6848\u7ed3\u675f\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u6d4b\u8bd5\u677f\u4e0a\u8fd0\u884c\u5b83\uff0c\u5982\u679c\u6211\u4eec\u6253\u5370\u4e00\u4e9b\u7edf\u8ba1\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u94fa\u8bbe\u4e86203\u6761\u8def\u7ebf\uff0c\u6210\u672c\u4e3a3304\u6761\uff0c\u4f7f\u7528\u7684\u6700\u5927\u6df1\u5ea6\u4e3a3\uff0c\u8fd9\u8fd8\u4e0d\u7b97\u592a\u5dee\u3002\nLee\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6bcf\u6761\u8def\u7ebf\u90fd\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u6211\u4eec\u6709\u5f88\u591a\u8def\u7ebf\u8981\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u5e0c\u671b\u5c06\u5176\u5e76\u884c\u5316\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u540c\u65f6\u89e3\u51b3\u591a\u6761\u8def\u7ebf\u3002\n\u4e8b\u52a1\u6027\u5185\u5b58\u5728\u8fd9\u91cc\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u505a\u7684\u662f\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f7f\u7528STM\u6c42\u89e3\u4e8b\u52a1\u5185\u7684\u8def\u7531\u3002\u677f\u7684\u72b6\u6001\u5c06\u5305\u542bTVAR\u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6df1\u5ea6\u3002\n\u4ee3\u7801\u4e0d\u4f1a\u6709\u592a\u591a\u66f4\u6539\u3002\u6211\u4eec\u73b0\u5728\u5199\u5165\u7684\u4e0d\u662fDepth[libent.y\uff0cadighent.x]\uff0c\u800c\u662fDepth[adighent.y\uff0cadighent.x].value\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u662f\u4e8b\u52a1\u503c\u3002\n\u6ce2\u524d\u3002\u6bcf\u4e2aDO|POINT|POINT_COST=COST[POINT\u3002Y\uff0c\u70b9\u3002\u8bbf\u95ee\u6570/\u6bcf\u767e\u4e07\u4eba\uff1aReach.\u3002\u76f8\u90bb(\u677f\u3001\u70b9)\u3002\u5982\u679c\u53d7\u963b\uff0c\u5219\u6bcf\u4e2aDO|\u76f8\u90bb|\u4e0b\u4e00\u6b65[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]==1&amp\uff1b&amp\uff1b\u76f8\u90bb\uff01=\u5e03\u7ebf\u3002B CURRENT_COST=\u6210\u672c[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]NEW_COST=POINT_COST+LEE\u3002\u6210\u672c(\u6df1\u5ea6[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]\u3002\u503c)\u5982\u679cCURRENT_COST==0||NEW_COST&lt\uff1bCURRENT_COST COST[\u76f8\u90bb\u3002Y\uff0c\u76f8\u90bb\u3002X]=NEW_COST NEW_WAVEFRONT\u3002\u63a8\u76f8\u90bb\u7aef\u7aef\u7aef\u3002\n\u6211\u4eec\u5c06\u5355\u4e2a\u8def\u7531\u7684\u6240\u6709\u9636\u6bb5\u653e\u5165\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u3002\u5bf9\u4e8e\u7b97\u6cd5\u7684\u5e76\u884c\u5316\u6765\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u662f\u975e\u5e38\u5c0f\u7684\u6539\u53d8\uff01\n\u7a7f\u7ebf\u3002\u539f\u5b50\u8ba1\u7b97\u6210\u672c=\u6269\u5c55(\u7535\u8def\u677f\u3001\u969c\u788d\u7269\u3001\u6df1\u5ea6\u3001\u5e03\u7ebf)\u89e3\u51b3\u65b9\u6848=\u89e3\u51b3(\u7535\u8def\u677f\u3001\u5e03\u7ebf\u3001\u6210\u672c)\u94fa\u8bbe\u6df1\u5ea6\u3001\u89e3\u51b3\u65b9\u6848\u7ed3\u675f\u3002\n\u6211\u4f7f\u7528\u63d2\u88c5\u5b9e\u73b0\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5b83\u4e00\u6b21\u89e3\u51b3\u4e24\u6761\u8def\u7ebf\uff0c\u5e76\u624b\u52a8\u68c0\u67e5\u51b2\u7a81\uff0c\u5e76\u53ef\u4ee5\u4e3a\u6211\u4eec\u53ef\u89c6\u5316\u7ed3\u679c\u3002\n\u8fd9\u663e\u793a\u4e86\u4e24\u6761\u540c\u65f6\u6c42\u89e3\u7684\u8def\u7531\u3002\u4ed6\u4eec\u9700\u8981\u9605\u8bfb\u7684\u533a\u57df(\u4ed6\u4eec\u7684\u6269\u5c55)\u7528\u9634\u5f71\u6807\u51fa\uff0c\u6700\u540e\u7684\u8def\u7ebf\u7528\u975e\u5e38\u7c97\u7684\u7ebf\u6761\u663e\u793a\u3002\u5df2\u6210\u529f\u94fa\u8bbe\u7684\u8def\u7531\u4ee5\u7070\u8272\u663e\u793a\u3002\u8fd9\u4e24\u6761\u8def\u7ebf\u663e\u7136\u662f\u72ec\u7acb\u7684-\u6269\u5c55\u548c\u8def\u7ebf\u6839\u672c\u4e0d\u91cd\u53e0\u3002\u6c42\u89e3\u4e00\u6761\u8def\u5f84\u6240\u9700\u9605\u8bfb\u7684\u5185\u5bb9\u5e76\u672a\u88ab\u53e6\u4e00\u6761\u8def\u5f84\u4fee\u6539\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6848\u4f8b--\u4e24\u6761\u8def\u7ebf\u90fd\u5f97\u5230\u4e86\u627f\u8bfa\uff0c\u6211\u4eec\u6ca1\u6709\u6d6a\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u6211\u4eec\u540c\u65f6\u6210\u529f\u5730\u89e3\u51b3\u4e86\u5b83\u4eec\u3002\n\u4e0b\u4e00\u4e2a\u793a\u4f8b\u663e\u793a\u4e86\u4e24\u6761\u6269\u5c55\u533a\u57df\u91cd\u53e0\u7684\u8def\u7531\u3002\u8fd9\u610f\u5473\u7740\u8981\u89e3\u51b3\u8fd9\u4e24\u6761\u8def\u7ebf\uff0c\u5728\u9ed1\u677f\u4e0a\u6709\u4e00\u4e9b\u4ed6\u4eec\u90fd\u5fc5\u987b\u8bfb\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e24\u6761\u8def\u7ebf\u90fd\u6ca1\u6709\u5199\u51fa\u5bf9\u65b9\u8bfb\u7684\u4f4d\u7f6e\u3002\u60f3\u60f3\u770b\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u5728\u8bfb\u53d6\u4efb\u4f55\u4f4d\u7f6e\u4e4b\u524d\u9501\u5b9a\u7684\u65b9\u6cd5-\u8fd9\u4e9b\u8def\u7531\u5c06\u4e0d\u80fd\u540c\u65f6\u6c42\u89e3\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u540c\u65f6\u8003\u8651\u4e24\u4e2a\u8def\u7531\u7684\u8bfb\u53d6\u548c\u5199\u5165\u96c6\u7684STM\uff0c\u6240\u4ee5\u5b83\u4eec\u53ef\u4ee5\u5e76\u53d1\u6c42\u89e3\uff01\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e24\u6761\u660e\u663e\u51b2\u7a81\u7684\u8def\u7ebf\u3002\u5b83\u4eec\u90fd\u5199\u5165\u7531\u5bf9\u65b9\u8bfb\u53d6\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u8def\u7ebf\u4e5f\u5728\u5f7c\u6b64\u4e4b\u4e0a\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e00\u6761\u8def\u7531\u4e2d\u6b62\uff0c\u4f46\u53e6\u4e00\u6761\u53ef\u4ee5\u63d0\u4ea4\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u53d6\u5f97\u8fdb\u5c55\u3002\n\u8fd9\u5757\u677f\u663e\u793a\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u89c2\u70b9\u3002\u6ce8\u610f\u8f83\u77ed\u8def\u7ebf\u7684\u4e0b\u90e8\u6269\u5c55\u533a\u57df\u6709\u591a\u5927\u3002\u8fd9\u6761\u8def\u7ebf\u5c06\u5728\u7a0d\u540e\u7684\u8fc7\u7a0b\u4e2d\u89e3\u51b3\uff0c\u56e0\u6b64\u5b83\u6240\u5728\u7684\u5730\u533a\u975e\u5e38\u62e5\u6324\uff0c\u6269\u5efa\u5fc5\u987b\u8fdb\u4e00\u6b65\u5411\u5916\u79fb\u52a8\uff0c\u4ee5\u7ee7\u7eed\u5bfb\u627e\u6210\u672c\u6700\u4f4e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6211\u4eec\u5f00\u59cb\u8fdb\u884c\u8017\u65f6\u7684\u5b9e\u9645\u6269\u5efa\u5de5\u4f5c\u4e4b\u524d\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u533a\u57df\u5c06\u589e\u957f\u5230\u591a\u5927\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u65e0\u6cd5\u8ba1\u7b97\u51fa\u8bfb\u53d6\u96c6\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5728\u94f6\u884c\u5e10\u6237\u793a\u4f8b\u4e2d\u6536\u96c6\u6240\u6709\u9501\u5e76\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u65f6\u6240\u505a\u7684\u4e8b\u60c5\u3002\n\u901a\u8fc7\u8fd9\u4e9b\u793a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u9047\u5230\u7684\u95ee\u9898\u662f\u5982\u4f55\u89e3\u51b3\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u989d\u5916\u7684\u5e76\u53d1\u6027\u3002\n\u5728\u6211\u4eec\u7684\u4eea\u8868\u5316\u5b9e\u73b0\u4e2d\uff0c79\u5bf9\u8def\u7531\u662f\u72ec\u7acb\u7684\uff0c9\u5bf9\u662f\u91cd\u53e0\u7684\uff0c27\u5bf9\u662f\u51b2\u7a81\u7684\uff0c\u9700\u8981\u91cd\u8bd5\u3002\u8bf7\u6ce8\u610f\uff0c\u73b0\u5728\u7684\u6210\u672c\u53ea\u662f\u7a0d\u6709\u4e0d\u540c-\u8fd9\u662f\u56e0\u4e3a\u91cd\u8bd5\u610f\u5473\u7740\u8def\u7531\u5c06\u4ee5\u4e0d\u540c\u7684\u987a\u5e8f\u89e3\u51b3\u3002\n\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u54ea\u91cc\u731c\u6d4b\u4e3b\u677f\u53ef\u80fd\u6bd4\u5185\u5b58\u677f\u6709\u66f4\u591a\u51b2\u7a81\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u7684\u7ed3\u679c\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\u3002\n\u4e3b\u8981\u5185\u5b58\u8def\u7ebf\uff1a15063101\u72ec\u7acb\uff1a6301459\u91cd\u53e0\uff1a34 41\u51b2\u7a81\uff1a177 100\u5907\u4ef6\uff1a1 1\u6210\u672c\uff1a174128 162917\u6df1\u5ea6\uff1a3 3\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e9b\u6781\u7aef\u60c5\u51b5-\u7b2c\u4e00\u4e2a\u677f\u5c06\u5728\u60a8\u8bd5\u56fe\u540c\u65f6\u89e3\u51b3\u7684\u6bcf\u4e00\u5bf9\u5355\u72ec\u7684\u8def\u7ebf\u4e0a\u53d1\u751f\u51b2\u7a81\uff0c\u800c\u7b2c\u4e8c\u4e2a\u677f\u6c38\u8fdc\u4e0d\u4f1a\u51b2\u7a81\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u677f\u4e0a\u540c\u65f6\u8fd0\u884cKoichi\u7684\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4f7f\u7528\u7684\u662fThread\u800c\u4e0d\u662fRactor\u3002\u6211\u5bf9\u8981\u6c42\u89e3\u7684\u8def\u7531\u5217\u8868\u4f7f\u7528\u961f\u5217\u3002\u6211\u4eec\u8fd9\u91cc\u7684\u6d41\u4ea7\u6b21\u6570\u5c11\u5f97\u4ee4\u4eba\u5403\u60ca--\u6211\u8fd8\u4e0d\u786e\u5b9a\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u3002\n\u60a8\u5fc5\u987b\u9075\u5faa\u4e00\u4e9b\u89c4\u5219\u624d\u80fd\u4f7f\u7528\u50cf\u5efa\u8bae\u7684\u8bbe\u8ba1\u90a3\u6837\u7684STM\u3002\u4e8b\u52a1\u6027\u5c5e\u6027\u4ec5\u9002\u7528\u4e8eTVAR\u5bf9\u8c61\u3002\u5982\u679c\u60a8\u4fee\u6539\u5176\u4ed6\u5bf9\u8c61\uff0c\u5b83\u4eec\u5c06\u4e0d\u4f1a\u6210\u4e3a\u4e8b\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u5982\u679c\u60a8\u7684\u4e8b\u52a1\u88ab\u91cd\u8bd5\uff0c\u5b83\u4eec\u5c06\u591a\u6b21\u8fd0\u884c\u3002\u8fd9\u4e5f\u9002\u7528\u4e8e\u526f\u4f5c\u7528-\u5982\u679c\u60a8\u5728\u4e8b\u52a1\u4e2d\u5199\u5165\u6587\u4ef6\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u591a\u6b21\u53d1\u751f\u3002\u4f8b\u5916\u60c5\u51b5\u4e5f\u662f\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u3002\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e9bTVAR\u5bf9\u8c61\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u8ba9\u6240\u6709Ruby\u53d8\u91cf\u4f4d\u7f6e\u90fd\u6210\u4e3a\u4e8b\u52a1\u6027\u7684\u5462\uff1f\u4e5f\u8bb8\u8fd9\u6837\u4f1a\u66f4\u597d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4f7f\u73b0\u6709\u4ee3\u7801\u6210\u4e3a\u4e8b\u52a1\u6027\u7684\u3002\u4f46\u5b9e\u9645\u4e0a\uff0cMRI\u7684\u5b9e\u73b0\u5e76\u4e0d\u662f\u4e3a\u4e86\u4f7f\u8fd9\u79cd\u66f4\u6539\u6613\u4e8e\u5b9e\u9a8c\u800c\u8bbe\u7f6e\u7684\u3002\u4e5f\u8bb8\u5728TruffleRuby\u4e2d\u8fdb\u884c\u5b9e\u9a8c\u662f\u53ef\u80fd\u7684\uff0cTruffleRuby\u65e8\u5728\u5141\u8bb8\u6570\u636e\u7ed3\u6784\u6709\u591a\u79cd\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8fd9\u662fTruffleRuby\u4f18\u5316Ruby\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u3002\n\u76ee\u524d\u4ee3\u7801\u4e2d\u7684\u4e00\u4e2a\u5f00\u9500\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542bTVAR\u5bf9\u8c61\u7684Matrix\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u62e5\u6709\u6570\u636e\u7ed3\u6784\u7684TArray\u3001THash\u3001TMatrix\u548c\u5176\u4ed6\u4e8b\u52a1\u6027\u53d8\u4f53\u3002\u8fd9\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u7c3f\u8bb0\u8d39\u7528\u3002\n\u6211\u4eec\u53ef\u4ee5\u63a2\u7d22\u7684\u5176\u4ed6\u6982\u5ff5\u5305\u62ec\u79c1\u6709\u5316\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6bcf\u6761\u8def\u7ebf\u5f00\u59cb\u65f6\u62cd\u6444\u8463\u4e8b\u4f1a\u72b6\u6001\u7684\u5feb\u7167\uff0c\u4ee5\u53ca\u63d0\u524d\u91ca\u653e\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u77e5\u9053\u67d0\u4e2a\u4f4d\u7f6e\u5bf9\u6700\u7ec8\u7ed3\u679c\u4e0d\u91cd\u8981\uff0c\u90a3\u4e48\u5c31\u653e\u5f03\u4f60\u58f0\u79f0\u5df2\u7ecf\u9605\u8bfb\u7684\u4f4d\u7f6e-\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4f1a\u63d0\u524d\u91ca\u653e\u6269\u5f20\u533a\u57df\uff0c\u800c\u4e0d\u662f\u6cbf\u7740\u6700\u7ec8\u8def\u7ebf\u3002\n\u5f53\u6211\u4eec\u53d1\u73b0\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u4f1a\u600e\u4e48\u505a\uff0c\u8fd9\u662f\u6709\u95ee\u9898\u7684\u3002\u6211\u4eec\u63d0\u4ea4\u4e24\u4e2a\u4e8b\u52a1\u4e2d\u7684\u54ea\u4e00\u4e2a\uff0c\u4e2d\u6b62\u54ea\u4e2a\u4e8b\u52a1\uff1f\u5728Lee\u4e2d\uff0c\u63d0\u4ea4\u6700\u957f\u7684\u8def\u7ebf\uff0c\u6216\u6269\u5c55\u6700\u5927\u7684\u8def\u7ebf\uff0c\u6216\u82b1\u8d39\u6700\u957f\u65f6\u95f4\u89e3\u51b3\u7684\u8def\u7ebf\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u51cf\u5c11\u4e89\u6267\uff0c\u8fd9\u6837\u6211\u4eec\u9996\u5148\u5c31\u4f1a\u6709\u66f4\u5c11\u7684\u51b2\u7a81\u5417\uff1f\n\u7136\u540e\u662f\u5173\u4e8e\u5f53\u4eba\u4eec\u5d4c\u5957\u4e8b\u52a1\u65f6\u6211\u4eec\u8981\u505a\u4ec0\u4e48\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u5927\u91cf\u66f4\u591a\u7684\u8bbe\u8ba1\u95ee\u9898\u3002\n\u6211\u4eec\u53ef\u4ee5\u7528Ruby\u5b9e\u73b0STM\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd--\u6709\u5927\u91cf\u53ef\u80fd\u7684\u7b97\u6cd5\u53ef\u7528\u4e8e\u4e0d\u540c\u7684\u6743\u8861\u3002Koichi\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aTL2\u7684\u7b97\u6cd5\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bd5\u8bd5MCRT\u3001\u5df4\u6258\u514b\u3001\u745e\u58eb\u3001\u67d4\u9053\u3001NOREC\u3001Ring\u7b49\u7b49\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u786c\u4ef6\u6765\u5b9e\u73b0\u4e8b\u52a1\u6027\u5b58\u50a8\u5668-HTM\u3002\u82f1\u7279\u5c14\u5728\u4ed6\u4eec\u7684Haswell\u5185\u6838\u4e2d\u589e\u52a0\u4e86\u5bf9HTM\u7684\u652f\u6301\uff0c\u4f46\u7531\u4e8e\u9519\u8bef\uff0c\u5b83\u4e0d\u5f97\u4e0d\u88ab\u7981\u7528\u3002\u6211\u76f8\u4fe1\u8f83\u65b0\u7684\u82f1\u7279\u5c14\u67b6\u6784\u6709\u5b83\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u6211\u4e0d\u786e\u5b9a\u6709\u591a\u5c11\u4eba\u5728\u4f7f\u7528\u5b83\u3002AMD\u5df2\u7ecf\u653e\u5f03\u4e86\u7c7b\u4f3c\u7684\u60f3\u6cd5\u3002HTM\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5b83\u901a\u5e38\u5bf9\u4ea4\u6613\u89c4\u6a21\u6709\u8f83\u4f4e\u7684\u9650\u5236\u3002\u6700\u73b0\u5b9e\u7684\u53ef\u80fd\u662f\u4e00\u79cd\u6df7\u5408\u4e8b\u52a1\u5b58\u50a8\u5668\uff0c\u5b83\u5728\u786c\u4ef6\u4e2d\u6709\u4e00\u4e2a\u5185\u6838\uff0c\u4f46\u5728\u8be5\u5185\u6838\u4e4b\u4e0a\u7684\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u4e86\u66f4\u5e7f\u6cdb\u7684\u63a5\u53e3\u3002\n\u603b\u4f53\u800c\u8a00\uff0cSTM\u548cHTM\u7684\u7814\u7a76\u73b0\u5728\u4f3c\u4e4e\u5df2\u7ecf\u653e\u7f13\u3002\u5927\u7ea6\u57282010\u5e74\uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u60f3\u6cd5\uff0c\u4f46\u73b0\u5728\u5b83\u4e0d\u90a3\u4e48\u6d41\u884c\u4e86\uff0c\u5c3d\u7ba1\u5173\u4e8e\u6c38\u4e45\u5b58\u50a8\u5668\u7684\u65b0\u60f3\u6cd5\u53c8\u56de\u5230\u4e86\u5b83\u7684\u4f4d\u7f6e\u3002\u4e5f\u8bb8\u8fd9\u610f\u5473\u7740\u662f\u65f6\u5019\u7b5b\u9009\u5e76\u627e\u51fa\u771f\u6b63\u6709\u610f\u4e49\u7684\u4e1c\u897f\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u5230Ruby\u7b49\u8bed\u8a00\u4e2d\u4e86\uff1f\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u731c\u5230STM\u6709\u4e00\u4e9b\u5f00\u9500\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662fTVAR\u5bf9\u8c61\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u666e\u901a\u503c\uff0c\u60a8\u77e5\u9053\u5728\u5185\u90e8\u5b83\u5fc5\u987b\u8ddf\u8e2a\u8bfb\u53d6\u548c\u5199\u5165\u3002\u4e8b\u52a1\u6027\u5185\u5b58\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u6d6a\u8d39\u7684\u5de5\u4f5c-\u5982\u679c\u4e8b\u52a1\u4e2d\u6b62\u5e76\u4e0d\u5f97\u4e0d\u91cd\u8bd5\uff0c\u60a8\u6700\u7ec8\u53ef\u80fd\u4f1a\u591a\u6b21\u6267\u884c\u76f8\u540c\u7684\u5de5\u4f5c\u3002\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u975e\u5e38\u5927\u7684\u5f00\u9500\u3002\n\u901a\u8fc7\u5c06\u7b97\u6cd5\u5e76\u884c\u5316\uff0c\u5b83\u6709\u671b\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\u4f46\u662f\u7531\u4e8e\u5f00\u9500\u7684\u539f\u56e0\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5728\u5177\u6709\u975e\u5e38\u591a\u5185\u6838\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u3002\n\u6211\u4e3aSTM\u51c6\u5907\u4e86\u4e00\u4e2a\u6311\u6218\u3002\n.", "note_en": "There\u2019s a proposal to add  Software Transactional Memory, or  STM, to the Ruby programming language. This is part of a wider effort to add better support for concurrency and parallelism in Ruby, and in particular the idea of  ractors. A concept has been  proposed and  implemented by Koichi Sasada.\n  This article gives some context on what STM is, how you use it, and why you might want to use it. We\u2019ll show an application which is well-suited to STM and we\u2019ll use this to talk about the benefits, issues, and some open questions.\n  I wrote the first half of my PhD on STM, and the second half on Ruby, so I\u2019ve got quite a bit of experience with both and the idea of their combination is very interesting to me.\n  Let\u2019s say we\u2019re a bank managing many bank accounts. Each account has a total. We get a never-ending stream of requests to move a sum of money  m from an account  a to account  b.\n  Something not everyone may know about Ruby is that  x += y is equivalent to writing  t = x; x = t + y. We\u2019ll write that out in full to make that clear to ourselves.\n loop  do  a ,  b ,  m  =  get_next_transfer  a_balance  =  accounts [ a ]  accounts [ a ]  =  a_balance  -  m  b_balance  =  accounts [ b ]  accounts [ b ]  =  b_balance  +  m end\n We\u2019ve got a lot of transfers to run through, so we\u2019ll have multiple threads processing these transfers.\n n . times  do  Thread . new  loop  do  a ,  b ,  m  =  get_next_transfer  a_balance  =  accounts [ a ]  accounts [ a ]  =  a_balance  -  m  b_balance  =  accounts [ b ]  accounts [ b ]  =  b_balance  +  m  end  end end\n We\u2019ve got a few problems here now. With all these threads running at the same time, what happens if two threads are putting money into your account concurrently?\n accounts [ a ]  =  100 # thread 1 # thread 2 balance  =  accounts [ a ]  # balance = 100  balance  =  accounts [ a ]  # balance = 100 accounts [ a ]  =  balance  +  10  # accounts[a] = 110  accounts [ a ]  =  balance  +  10  # accounts[a] = 110\n The two transfers have run, but your balance is 110. The other 10 has been lost - this is called a  lost update, meaning it\u2019s as if the update was never made.\n Also consider what happens if the thread crashes after taking money from  a but before putting it into  b? The transfer would be applied partially and again we\u2019d lose money.\n We need to use some kind of  synchronization on our accounts. Ruby has  mutual exclusion locks or  mutexes, so we can try using those.\n n . times  do  Thread . new  loop  do  a ,  b ,  m  =  get_next_transfer  locks [ a ]. synchronize  do  locks [ b ]. synchronize  do  accounts [ a ]  -=  m  accounts [ b ]  +=  m  end  end  end  end end\n Does this work? What if we process a transfer from account 1001 to account 1002 on one thread at the same time as processing a transfer from account 1002 to 1001, so the other way around, at the same time?\n The first thread will try to lock 1001 and then 1002. The second thread will try to lock 1002 and then 1001. If the first thread gets as far as locking 1001, and the second as far as locking 1002, then both will be waiting for the opposite lock and will never release the lock they already have. We will be in  deadlock.\n If we always acquired locks in the same order, by collecting them up first and sorting them, we could fix this.\n n . times  do  Thread . new  loop  do  a ,  b ,  m  =  get_next_transfer  x ,  y  =  [ a ,  b ]. sort  locks [ x ]. synchronize  do  locks [ y ]. synchronize  do  accounts [ a ]  -=  m  accounts [ b ]  +=  m  end  end  end  end end\n Now in both transfers account 1001 is locked first and 1002 is locked second. That will work.\n We have to make up a somewhat artificial requirement to explain the next issue, but consider if for some good reason we wanted to transfer to one account if we had a lot of money, and a different account if we only had a little money. Maybe if we\u2019re rich this month we donate to charity, otherwise we unfortunately need to save for ourselves.\n  We\u2019ll talk about accounts  a,  b, and  c, now, and a threshold of money  t.\n n . times  do  Thread . new  loop  do  a ,  b ,  c ,  t ,  m  =  get_next_transfer  x ,  y ,  z  =  [ a ,  b ,  c ]. sort  locks [ x ]. synchronize  do  locks [ y ]. synchronize  do  locks [ z ]. synchronize  do  if  accounts [ a ]  &gt;  t  accounts [ a ]  -=  m  accounts [ b ]  +=  m  else  accounts [ a ]  -=  m  accounts [ c ]  +=  m  end  end  end  end  end  end end\n It\u2019s starting to get very complicated. And this locks more than it needs to - it locks both  b and  c but then only uses one of them. If you use  b in the end, ideally another thread could be serving a transfer to  c at the same time, but you\u2019ve locked it and it can\u2019t. Imagine if instead of two potential accounts it was thousands and you had to lock them all. Imagine if you couldn\u2019t work out at all which account you\u2019d be transferring to until you started the transfer - then you\u2019d never be able to process two transfers at the same time.\n At this point as well we\u2019re likely to start to make errors trying to do all this locking and ordering of locks and things.\n Stepping back and taking it all in, we can draw up some requirements for what we need.\n consistency - meaning that our data structures are always valid - the total sum of money never changes\n Ideally a library or the language could do this all for us. We\u2019d like to be able to write almost what we originally wrote, but with just an annotation to make the code inside a block atomic, consistent, isolated, and the result durable.\n n . times  do  Thread . new  loop  do  a ,  b ,  m  =  get_next_transfer  atomically  do  accounts [ a ]  -=  m  accounts [ b ]  +=  m  end  end  end end\n This is what a  transactional memory can let us do. It will automatically monitor what you read and write inside the  atomically block, which is a  transaction, and will make sure it is either applied fully or not, that the balance of the whole system is always consistent, that transactions do not see the result of each other partially applied, and that writes appear and stay.\n It may be implemented using the code we eventually arrived at ourselves, or it could do something else instead. In practice how it is often implemented is thatreads and writes are stored in a log, then at the end the transaction works out if anyone else has written locations that you\u2019ve read. If they have then the values you read are no longer valid, so your transaction  conflicts with another, is  aborted and retries, reading the locations again. When it eventually does not conflict with any other transactions it is  committed and succeeds. This means you don\u2019t need to lock everything up-front, which means you avoid the problem of what happens if you may potentially need every account. Locking everything up-front is called  pessimistic locking. We\u2019re moving to  optimistic locking\n  Koichi\u2019s  proposed STM for Ruby, in combination with his proposed  ractors (similar to  actors) would look like this.\n accounts  =  9999 . times . map  {  Thread :: TVar . new ( 100 )  } n . times  do  Ractor . new  * accounts  do  |* accounts |  loop  do  a ,  b ,  m  =  get_next_transfer  Thread . atomically  do  accounts [ a ]. value  -=  m  accounts [ b ]. value  +=  m  end  end  end end\n He\u2019s using a  Ractor but you can think of it as a thread for the purposes of this article. Instead of an array of account balances, we now have an array of  TVar objects that contain values. A  TVar is a  transactional variable. Only these variables are transactional - not any other Ruby value you read or write. His design requires that the  TVar objects you\u2019re going to use are passed into the  Ractor, due to rules about sharing that aren\u2019t relevant for this article.\n   Let\u2019s consider a larger application, in order to illustrate further and to talk about some issues and open questions. The  code is available on GitHub.\n Let\u2019s say it\u2019s our job to lay out the wires on a circuit board. We get a board with  pads (connections to components mounted on the board) and a list of  routes that we need to draw between these pads. There are a great many pads and routes, there isn\u2019t much space on the tiny board, and another catch is that it\u2019s very expensive to have wires crossing each other. Let\u2019s say it\u2019s exponentially more expensive for more deeply stacked wires.\n  In this minimal example we we can see two routes, and how they have to cross each other.\n  This example is a processor module and shows what kind of scale we might want to be working at. This board has many longer routes which are more likely to conflict.\n  This example is a memory module. It has many shorter routes which we may expect to conflict less.\n   There\u2019s an algorithm to lay each routes, and it actually produces an optimal solution for an individual route, but not for all routes. It\u2019s called  Lee\u2019s algorithm and was published back in 1960. We\u2019ll show the code for the algorithm here, but it\u2019s a little simplified and even then you don\u2019t need to follow it all.\n The state of the board is a grid, with the value of each square being the number of wires stacked in that location. We go through our list of routes in turn.\n  In the  expansion we start from the route start and move out in a wavefront, storing at each location on the board how much it could cost to lay the route that way. This way we flood out, considering every possible route. We keep going until no new location on the board has a lower cost than the cost currently at the route end.\n def  expand ( board ,  obstructed ,  depth ,  route )  start_point  =  route . a  end_point  =  route . b  cost  =  Lee :: Matrix . new ( board . height ,  board . width )  cost [ start_point . y ,  start_point . x ]  =  1  wavefront  =  [ start_point ]  loop  do  new_wavefront  =  []  wavefront . each  do  | point |  point_cost  =  cost [ point . y ,  point . x ]  Lee . adjacent ( board ,  point ). each  do  | adjacent |  next  if  obstructed [ adjacent . y ,  adjacent . x ]  ==  1  &amp;&amp;  adjacent  !=  route . b  current_cost  =  cost [ adjacent . y ,  adjacent . x ]  new_cost  =  point_cost  +  Lee . cost ( depth [ adjacent . y ,  adjacent . x ])  if  current_cost  ==  0  ||  new_cost  &lt;  current_cost  cost [ adjacent . y ,  adjacent . x ]  =  new_cost  new_wavefront . push  adjacent  end  end  end  cost_at_route_end  =  cost [ end_point . y ,  end_point . x ]  minimum_new_cost  =  new_wavefront . map  {  | marked |  cost [ marked . y ,  marked . x ]  }. min  break  if  cost_at_route_end  &gt;  0  &amp;&amp;  cost_at_route_end  &lt;  minimum_new_cost  wavefront  =  new_wavefront  end  cost end\n In the  solve phase we track back from the route end, following the lowest cost path through our expansion.\n def  solve ( board ,  route ,  cost )  start_point  =  route . b  end_point  =  route . a  solution  =  [ start_point ]  loop  do  adjacent  =  Lee . adjacent ( board ,  solution . last )  lowest_cost  =  adjacent  . reject  {  | a |  cost [ a . y ,  a . x ]. zero?  }  . min_by  {  | a |  cost [ a . y ,  a . x ]  }  solution . push  lowest_cost  break  if  lowest_cost  ==  end_point  end end\n In  laying we take the list of points in the solution and increment the depth at each point to say that there is now another wire over that point.\n  The overall algorithm is  expanding,  solving,  laying, and then we record the solution against the route.\n board . routes . each  do  | route |  cost  =  expand ( board ,  obstructed ,  depth ,  route )  solution  =  solve ( board ,  route ,  cost )  lay  depth ,  solution  solutions [ route ]  =  solution end\n We can run this on a test board, and if we print some stats we\u2019ll see for example that we laid 203 routes, costing 3304, and using a maximum depth of 3, which isn\u2019t too bad.\n  A problem with Lee is that it\u2019s a lot of work for each route, and we have many routes to solve, so we\u2019d definitely like to parallelise it, perhaps by solving more than one route at the same time.\n Transactional memory could work well here. What we could do is run multiple threads, each solving routes within transactions using an STM. The board\u2019s state would contain  TVar objects containing the depth for each location.\n  The code doesn\u2019t change much. Instead of  depth[adjacent.y, adjacent.x] we now write  depth[adjacent.y, adjacent.x].value as these are transactional values.\n wavefront . each  do  | point |  point_cost  =  cost [ point . y ,  point . x ]  Lee . adjacent ( board ,  point ). each  do  | adjacent |  next  if  obstructed [ adjacent . y ,  adjacent . x ]  ==  1  &amp;&amp;  adjacent  !=  route . b  current_cost  =  cost [ adjacent . y ,  adjacent . x ]  new_cost  =  point_cost  +  Lee . cost ( depth [ adjacent . y ,  adjacent . x ]. value )  if  current_cost  ==  0  ||  new_cost  &lt;  current_cost  cost [ adjacent . y ,  adjacent . x ]  =  new_cost  new_wavefront . push  adjacent  end  end end\n And we put all the phases for a single route into a transaction. These are very minimal changes for the parallelisation of an algorithm!\n Thread . atomically  do  cost  =  expand ( board ,  obstructed ,  depth ,  route )  solution  =  solve ( board ,  route ,  cost )  lay  depth ,  solution end\n I implemented a version of this code using instrumentation so we can see what\u2019s going on. It solves two routes at a time and manually checks for conflicts and can visualise the result for us.\n   This shows two routes solved concurrently. The area they needed to read from (their expansions) are shaded and the final route shown in the very thick lines. Routes already successfully laid down are shown in grey. These two routes are clearly independent - the expansions and the routes don\u2019t overlap at all. Nothing that you needed to read to solve one route has been modified by the other. This is the perfect case - both routes get committed, we wasted no time, and we\u2019ve successfully solved them concurrently.\n  This next example shows two routes with expansion areas that overlap. This means to solve the two routes there were some locations on the board that they both had to read, but neither route wrote a location read by the other. Think about if we had used the approach where we locked before reading any location - these routes would not have been able to be solved concurrently, but because we use an STM that considers both the read and write sets of both routes, they could be solved concurrently!\n  Next we can see two routes that clearly conflict. They both write locations that were read by the other, and the routes are also on top of each other. This will cause one route to abort, but the other can be committed, so we can still make progress.\n  This board shows a very important point. Note how large the lower expansion area is for the short route. This route is being solved later in the process, so the area it\u2019s operating in is very congested, and the expansion has to move further out to keep looking for the lowest cost solution. Note that we could not have worked out how large this area was going to grow until we started to do the time-consuming work of the actual expansion. We cannot work out the read set before we start, which is what we were doing in our bank account example when we collected up all the locks and sorted them.\n Through those examples we can see how the problems we had are being solved and how additional concurrency is being created.\n In our instrumented implementation, 79 pairs of routes are independent, 9 pairs overlap, 27 pairs conflict and had to be retried. Note that the cost is just a little different now - this is because retrying means routes are being solved in a different order.\n  Remember where we guessed that the main board likely would have more conflicts than the memory board? We can see that in the results here.\n main memoryroutes: 1506 3101independent: 630 1459overlaps: 34 41conflicts: 177 100spare: 1 1cost: 174128 162917depth: 3 3\n We can also generate some extremes - this first board will conflict on every single pair of routes you try to solve concurrently, and the second board will never conflict.\n   We can also run Koichi\u2019s implementation on our test board actually concurrently. I\u2019ve used  Thread rather than  Ractor to do this though, for simplicity. I use a  Queue for the list of routes to solve. We get a surprisingly low number of aborts here - I\u2019m not sure why that is yet.\n   You have to follow some rules to use an STM like the proposed design. The transactional properties only apply to the  TVar objects. If you modify other objects, they won\u2019t be part of the transaction, and if your transaction is retried they\u2019ll be run multiple times. This also applies to side effects - if you write to a file in your transaction that may happen many times. Exceptions are also a case to consider.\n Why have these  TVar objects? Why not make all Ruby variable locations transactional? Maybe that\u2019d be better, and it\u2019d mean you could make existing code transactional. But realistically the implementation of MRI is not set up to make this kind of change easy to experiment with. Maybe it could be possible to experiment in TruffleRuby, which is designed to allow data structures to have multiple implementations because it\u2019s part of how TruffleRuby optimizes Ruby code.\n One overhead we have in our code at the moment is that we have a  Matrix containing  TVar objects. Instead we could have a  TArray,  THash,  TMatrix, and other transactional variants of data structures. This could reduce some book-keeping overhead.\n Other concepts we could explore are  privatisation which means taking a snapshot of the board state at the start of each route, and  early release which means then surrendering your claim to have read a location if you know it\u2019s not important for your final result - so we could possibly  early release the expansion area not along the final route.\n There are questions about what we do when we find a conflict. Which of the two transactions do we commit and which do we abort? In Lee it might make sense to commit the longest route, or the route with the biggest expansion, or the route that took longest to solve. And can we do anything to reduce contention so that we have less conflicts in the first place?\n Then there are questions about what we do when people nest transactions, and a huge number of more design questions.\n There are many ways we could implement STM in Ruby - there\u2019s a huge number of possible algorithms to use with different tradeoffs. Koichi is using an algorithm called TL2. We could also try McRT, Bartok, Swiss, Judo, NOrec, Ring, and many more.\n We could also use special hardware to implement a transactional memory - a  HTM. Intel added  support for HTM in their Haswell cores but it had to be disabled due to bugs. Newer Intel architectures have it and working I believe, but I\u2019m not sure how many people are using it. AMD have  abandoned a similar idea. A problem with HTM is that it often has low limits for the size of transactions. Most realistic is probably a kind of hybrid transactional memory, that has a core in the hardware but implements a more extensive interface in software on top of that core.\n In general, STM and HTM research seems to have slowed down now. Around 2010 it was a hugely popular idea, but now it\u2019s not so fashionable, although new ideas around persistent memory are referring back to it. Maybe that means it\u2019s time to sift through and figure out what really made sense and apply it in languages like Ruby?\n  You\u2019ve probably already guessed that STM has some overhead. We\u2019re using  TVar objects instead of just normal values, and you know internally it has to be tracking reads and writes. A transactional memory may also mean wasted work - if a transaction aborts and has to retry you can end up doing the same work multiple times. This can add up to a very large overhead.\n By making the algorithm parallel it should hopefully run faster. But due to the overhead we may have to run a on a machine with a very large number of cores.\n I\u2019ve got a challenge for STM \n......", "posttime": "2020-10-30 14:13:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ruby,\u5efa\u8bae,proposed", "title": "Ruby\u5efa\u8bae\u7684STM", "title_en": "Ruby's Proposed STM", "transed": 1, "url": "https://chrisseaton.com/truffleruby/ruby-stm/", "via": "", "real_tags": ["ruby", "\u5efa\u8bae", "proposed"]}, {"category": "", "categoryclass": "", "imagename": "809e05ec521eea39107e6028d777f4ac.png", "infoid": 1032239, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u662f\u5426\u5c1d\u8bd5\u8fc7\u4fee\u6539\u3001\u4fee\u590d\u6216\u8bca\u65ad\u4ea7\u54c1\uff0c\u4f46\u9047\u5230\u4e86\u52a0\u5bc6\u3001\u5bc6\u7801\u8981\u6c42\u6216\u5176\u4ed6\u6280\u672f\u969c\u788d\uff1fEFF\u5e0c\u671b\u4f60\u7684\u6545\u4e8b\u80fd\u5e2e\u52a9\u6211\u4eec\u4e3a\u4f60\u7ed5\u8fc7\u8fd9\u4e9b\u969c\u788d\u7684\u6743\u5229\u800c\u6218\u3002\n\u201c\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u201d(DMCA)\u7b2c1201\u6761\u89c4\u5b9a\uff0c\u89c4\u907f\u67d0\u4e9b\u6570\u5b57\u8bbf\u95ee\u63a7\u5236(\u4e5f\u79f0\u4e3a\u201c\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\u201d\u6216\u201cTPM\u201d)\u662f\u975e\u6cd5\u7684\u3002\u56e0\u4e3a\u8f6f\u4ef6\u4ee3\u7801\u53ef\u4ee5\u53d7\u7248\u6743\u4fdd\u62a4\uff0c\u8fd9\u7ed9\u4e86\u4ea7\u54c1\u5236\u9020\u5546\u4e00\u4e2a\u5408\u6cd5\u7684\u5de5\u5177\u6765\u63a7\u5236\u60a8\u4e0e\u751f\u6d3b\u4e2d\u65e5\u76ca\u5f3a\u5927\u7684\u8bbe\u5907\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002\u867d\u7136\u7b2c1201\u6761\u89c4\u5b9a\u7684\u76ee\u6807\u662f\u9632\u6b62\u4fb5\u72af\u7248\u6743\uff0c\u4f46\u8be5\u6cd5\u5f8b\u5df2\u88ab\u7528\u4e8e\u5bf9\u4ed8\u827a\u672f\u5bb6\u3001\u7814\u7a76\u4eba\u5458\u3001\u6280\u672f\u4eba\u5458\u548c\u5176\u4ed6\u4ea7\u54c1\u6240\u6709\u8005\uff0c\u5373\u4f7f\u4ed6\u4eec\u89c4\u907f\u5236\u9020\u5546\u6570\u5b57\u9501\u7684\u7406\u7531\u662f\u5b8c\u5168\u5408\u6cd5\u7684\u3002\n\u6bcf\u4e09\u5e74\uff0c\u90fd\u6709\u673a\u4f1a\u83b7\u5f97\u8fd9\u9879\u6cd5\u5f8b\u7684\u8c41\u514d\uff0c\u4ee5\u4fdd\u62a4\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u4f5c\u54c1\u7684\u5408\u6cd5\u4f7f\u7528\u3002\u4e0a\u6b21\uff0c\u6211\u4eec\u80fd\u591f\u4fdd\u62a4\u60a8\u7ef4\u4fee\u3001\u7ef4\u62a4\u548c\u8bca\u65ad\u60a8\u7684\u667a\u80fd\u624b\u673a\u3001\u5bb6\u7528\u7535\u5668\u548c\u5bb6\u5ead\u7cfb\u7edf\u7684\u6743\u5229\u30022021\u5e74\uff0c\u6211\u4eec\u8981\u6c42\u7248\u6743\u5c40\u5c06\u8c41\u514d\u8303\u56f4\u6269\u5927\u5230\u6240\u6709\u652f\u6301\u8f6f\u4ef6\u7684\u8bbe\u5907\uff0c\u5e76\u5305\u62ec\u4fee\u6539\u6216\u5b9a\u5236\u8fd9\u4e9b\u4ea7\u54c1\u7684\u6743\u5229\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ef4\u4fee\u5b83\u4eec\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4ea7\u54c1\u5177\u6709\u8ba1\u7b97\u673a\u5316\u7684\u7ec4\u4ef6\uff0cTPM\u63a7\u5236\u7684\u8f6f\u4ef6\u5728\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\u66f4\u591a\u8bbe\u5907\u4e0a\u8fd0\u884c-\u4ece\u73a9\u5177\u5230\u5fae\u6ce2\u7089-\u5982\u679c\u60a8\u8bbf\u95ee\u60a8\u62e5\u6709\u7684\u4e1c\u897f\u7684\u4ee3\u7801\u8fdb\u884c\u5408\u6cd5\u81ea\u5b9a\u4e49\uff0c\u60a8\u5c06\u9762\u4e34\u8fdd\u53cd\u6cd5\u89c4\u7684\u98ce\u9669\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u6211\u4eec\u652f\u6301\u8fd9\u9879\u65b0\u7684\u8c41\u514d\uff0c\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5728\u4efb\u4f55\u53ef\u80fd\u5305\u542b\u5e26\u6709TPM\u7684\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u60c5\u51b5\u4e0b\u7684\u7ecf\u9a8c\uff0c\u8be5TPM\u53ef\u80fd\u4f1a\u963b\u6b62\u60a8\u5145\u5206\u5229\u7528\u60a8\u5df2\u7ecf\u62e5\u6709\u7684\u4ea7\u54c1\u3002\u4ece\u7269\u8054\u7f51\u548c\u533b\u7597\u8bbe\u5907\uff0c\u5230\u667a\u80fd\u7535\u89c6\u548c\u6e38\u620f\u673a\uff0c\u518d\u5230\u5bb6\u7528\u7535\u5668\u548c\u8ba1\u7b97\u673a\u5916\u56f4\u8bbe\u5907\uff0c\u518d\u5230\u60a8\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u5176\u4ed6\u9879\u76ee-\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u542c\u5230\u7684\uff01\u4f5c\u4e3a\u6240\u6709\u8005\uff0c\u60a8\u5e94\u8be5\u6709\u6743\u901a\u8fc7\u80fd\u591f\u8bbf\u95ee\u4ea7\u54c1\u4e2d\u5305\u542b\u7684\u6240\u6709\u8f6f\u4ef6\u4ee3\u7801\u6765\u4fee\u590d\u3001\u4fee\u6539\u548c\u8bca\u65ad\u60a8\u6240\u4f9d\u8d56\u7684\u4ea7\u54c1\u3002\u8fd9\u4e9b\u53ef\u80fd\u5305\u62ec\u60a8\u53ef\u80fd\u4e0d\u4e00\u5b9a\u4e0e\u8f6f\u4ef6\u5173\u8054\u7684\u4ea7\u54c1\uff0c\u5982\u80f0\u5c9b\u7d20\u6cf5\u548c\u667a\u80fd\u4ea7\u54c1\uff0c\u5982\u73a9\u5177\u548c\u51b0\u7bb1\u3002\n\u5c1d\u8bd5\u6216\u8ba1\u5212\u4f7f\u7528\u8f6f\u4ef6\u7ec4\u4ef6\u4fee\u590d\u3001\u4fee\u6539\u6216\u8bca\u65ad\u4ea7\u54c1\uff1b\u4ee5\u53ca\u3002\n\u9047\u5230\u6280\u672f\u4fdd\u62a4\u63aa\u65bd(\u5305\u62ecDRM\u6216\u6570\u5b57\u7248\u6743\u7ba1\u7406-\u4efb\u4f55\u5f62\u5f0f\u7684\u8f6f\u4ef6\u5b89\u5168\u63aa\u65bd\uff0c\u9650\u5236\u5bf9\u5e95\u5c42\u8f6f\u4ef6\u4ee3\u7801\u7684\u8bbf\u95ee\uff0c\u5982\u52a0\u5bc6\u3001\u5bc6\u7801\u4fdd\u62a4\u6216\u8eab\u4efd\u9a8c\u8bc1\u8981\u6c42)\uff0c\u963b\u6b62\u5b8c\u6210\u4fee\u6539\u3001\u4fee\u590d\u6216\u8bca\u65ad(\u6216\u5fc5\u987b\u7ed5\u8fc7\u6b64\u64cd\u4f5c)\u3002\n-\u6211\u4eec\u60f3\u542c\u5230\u4f60\u7684\u6d88\u606f\uff01\u8bf7\u7ed9\u6211\u4eec\u53d1\u7535\u5b50\u90ae\u4ef6\u5230RightToMod-2021@eff.org\uff0c\u63d0\u4f9b\u4e0b\u9762\u5217\u51fa\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u4f1a\u6574\u7406\u6211\u4eec\u6536\u5230\u7684\u6545\u4e8b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6700\u76f8\u5173\u7684\u6545\u4e8b\u4e0e\u6211\u4eec\u7684\u8bba\u70b9\u4e00\u8d77\u63d0\u4ea4\u7ed9\u7248\u6743\u5c40\u3002\u6211\u4eec\u5411\u7248\u6743\u5c40\u63d0\u4ea4\u7684\u8bc4\u8bba\u5c06\u6210\u4e3a\u516c\u5f00\u8bb0\u5f55\uff0c\u4f46\u5982\u679c\u60a8\u4e0d\u5e0c\u671b\u6211\u4eec\u900f\u9732\u60a8\u7684\u59d3\u540d\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u5c06\u60a8\u7684\u540d\u5b57\u5305\u62ec\u5728\u5185\u3002\u63d0\u4ea4\u7684\u6587\u4ef6\u5e94\u5305\u62ec\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\u60a8(\u6216\u5176\u4ed6\u4eba)\u8981\u4fee\u6539\u3001\u7ef4\u4fee\u6216\u8bca\u65ad\u7684\u4ea7\u54c1\uff0c\u5305\u62ec\u54c1\u724c\u548c\u578b\u53f7\u540d\u79f0/\u7f16\u53f7(\u5982\u679c\u6709)\u3002\nTPM\u5982\u4f55\u5e72\u6270\u60a8\u7684\u9879\u76ee\uff0c\u5305\u62ec\u5bf9TPM\u7684\u63cf\u8ff0\u3002\u5982\u679c\u60a8\u77e5\u9053\uff0c\u8981\u7ed5\u8fc7TPM\u9700\u8981\u505a\u4e9b\u4ec0\u4e48\uff1f\u6709\u6ca1\u6709\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u5728\u4e0d\u8fd9\u6837\u505a\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4f60\u7684\u76ee\u6807\uff1f\n\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u516c\u5f00\u8bc4\u8bba\u4e2d\u786e\u8ba4\u60a8\u7684\u8eab\u4efd\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u63d0\u4f9b\u60a8\u7684\u59d3\u540d\u548c\u5c45\u4f4f\u5730\u3002\u9664\u975e\u60a8\u660e\u786e\u5141\u8bb8\u6211\u4eec\u8bc6\u522b\u60a8\u7684\u8eab\u4efd\uff0c\u5426\u5219\u6211\u4eec\u5c06\u628a\u6240\u6709\u63d0\u4ea4\u7684\u5185\u5bb9\u89c6\u4e3a\u533f\u540d\u3002\n\u8fd9\u662f\u56e2\u961f\u7684\u52aa\u529b\u3002\u5728\u591a\u5e74\u6765\u5bfb\u6c42\u7ef4\u4fee\u548c\u4fee\u8865\u8c41\u514d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ece\u60a8\u90a3\u91cc\u83b7\u5f97\u4e86\u4e00\u4e9b\u5173\u4e8e\u60a8\u7684\u7ef4\u4fee\u95ee\u9898\u548c\u6d89\u53ca\u60a8\u7684\u6c7d\u8f66\u548c\u5176\u4ed6\u8bbe\u5907\u7684\u9879\u76ee\u7684\u7cbe\u5f69\u6545\u4e8b\u3002\u5728\u8fc7\u53bb\u7684\u5faa\u73af\u4e2d\uff0c\u4f60\u7684\u6545\u4e8b\u5e2e\u52a9\u7248\u6743\u5c40\u7406\u89e3\u4e86\u8fd9\u9879\u6cd5\u5f8b\u5bf9\u4eba\u7c7b\u7684\u5f71\u54cd\u3002\u8bf7\u5e2e\u52a9\u6211\u4eec\u518d\u6b21\u4e3a\u60a8\u7684\u6743\u5229\u800c\u6218\uff01", "note_en": "Have you tried modifying, repairing, or diagnosing a product but bumped into encryption, a password requirement, or some other technological roadblock that got in the way? EFF wants your stories to help us fight for your right to get around those obstacles.\n Section 1201 of the Digital Millennium Copyright Act (DMCA) makes it illegal to circumvent certain digital access controls (also called \u201ctechnological protection measures\u201d or \u201cTPMs\u201d). Because software code can be copyrightable, this gives product manufacturers a legal tool to control the way you interact with the increasingly powerful devices in your life. While Section 1201\u2019s stated goal was to prevent copyright infringement,  the law has been used against artists, researchers, technicians, and other product owners, even when their reasons for circumventing manufacturers\u2019 digital locks were completely lawful.\n Every three years, there is a window of opportunity to get exemptions to this law to protect legitimate uses of copyrighted works. Last time around,  we were able to preserve your right to repair, maintain, and diagnose your smartphones, home appliances, and home systems. For 2021, we\u2019re asking the Copyright Office to expand that exemption to cover  all software-enabled devices and to cover the right to modify or customize those products, not just repair them. As more and more products have computerized components, TPM-encumbered software runs on more of the devices we use daily\u2014from toys to microwaves\u2014putting you at risk of violating the statute if you access the code of something you own to lawfully customize it.\n  To help make our case for this new exemption, we want to hear from you about your experiences with anything that might have a software component with a TPM that prevents you from making full use of the products you already own. From the Internet of Things and medical devices, to Smart TVs and game consoles, to appliances and computer peripherals, to any other items you can think of\u2014that\u2019s what we want to hear about! As an owner, you should have the right to repair, modify, and diagnose the products you rely on by being able to access all of the software code contained in the products. These may include products you may not necessarily associate with software, such as insulin pumps and smart products, like toys and refrigerators.\n  attempted or planned to repair, modify, or diagnose a product with a software component; and\n encountered a technological protection measure (including DRM or digital rights management\u2014any form of software security measure that restricts access to the underlying software code, such as encryption, password protection, or authentication requirements) that prevented completing the modification, repair, or diagnosis (or had to be circumvented to do so)\n \u2014we want to hear from you! Please email us at  RightToMod-2021@eff.org with the information listed below, and we\u2019ll curate the stories we receive so we can present the most relevant ones alongside our arguments to the Copyright Office. The comments we submit to the Copyright Office will become a matter of public record, but we will not include your name if you do not wish to be identified by us. Submissions should include the following information:\n The product you (or someone else) wanted to modify, repair, or diagnose, including brand and model name/number if available.\n  How a TPM interfered with your project, including a description of the TPM. If you know, what would be required to get around the TPM? Is there another way you could accomplish your goal without doing this?\n  Whether we may identify you in our public comments, and your name and town of residence if so. We will treat all submissions as anonymous unless you expressly give us this permission to identify you.\n This is a team effort. In seeking repair and tinkering exemptions over the years, we\u2019ve used some great stories from you about your repair problems and projects involving your cars and other devices. In past cycles, your stories helped the Copyright Office understand the human impact of this law. Help us fight for your rights once more!", "posttime": "2020-10-30 13:42:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e0c\u671b,repair,\u4ea7\u54c1", "title": "\u544a\u8bc9\u6211\u4eec\u60a8\u5e0c\u671b\u5982\u4f55\u4fee\u6539\u548c\u7ef4\u4fee\u60a8\u751f\u6d3b\u4e2d\u7684\u8bbe\u5907", "title_en": "Tell Us How You Want to Modify and Repair the Devices in Your Life", "transed": 1, "url": "https://www.eff.org/deeplinks/2020/10/tell-us-how-you-want-modify-and-repair-devices-your-life", "via": "", "real_tags": ["\u5e0c\u671b", "repair", "\u4ea7\u54c1"]}, {"category": "", "categoryclass": "", "imagename": "0be76d7d3846bb1caae170cebd78b740.jpg", "infoid": 1032238, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5927\u5b66\u91cc\uff0c\u6211\u9009\u4e86\u4e00\u95e8\u4e3a\u671f\u4e09\u4e2a\u5b66\u671f\u7684\u6b27\u6d32\u601d\u60f3\u53f2\u7cfb\u5217\u8bfe\u7a0b\uff0c\u8bb2\u5e08\u662f\u4e00\u4f4d\u957f\u671f\u4efb\u804c\u7684\u6559\u6388\u739b\u4e3d\u00b7\u683c\u9c81\u514b(Mary Gluck)\uff0c\u5979\u6bcf\u8282\u8bfe\u90fd\u4f1a\u76f4\u63a5\u8bb2\u8bfe\uff0c\u901a\u5e38\u4f1a\u628a\u6700\u540e\u4e94\u5206\u949f\u7559\u7ed9\u63d0\u95ee\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6a21\u578b\u662f\u4e00\u573a\u5669\u68a6\uff1b\u6211\u559c\u6b22\u5b83\u3002\u5979\u5728\u5305\u62ec\u5965\u65af\u66fc\u7684\u57ce\u5e02\u8bbe\u8ba1\u548c\u9ed1\u683c\u5c14\u7684\u5386\u53f2\u7406\u8bba\u7b49\u4e3b\u9898\u4e0a\u7684\u6f14\u8bb2\u662f\u5982\u6b64\u7cbe\u96d5\u7ec6\u7422\uff0c\u5982\u6b64\u719f\u7ec3\u5730\u4f20\u8fbe\uff0c\u4ee5\u81f3\u4e8e\u6211\u611f\u89c9\u5979\u597d\u50cf\u628a\u6211\u7684\u5934\u6253\u5f00\u4e86\uff0c\u628a\u77e5\u8bc6\u50a8\u5b58\u5728\u91cc\u9762\u3002\u867d\u7136\u8fd9\u4e9b\u8bfe\u7a0b\u5f88\u6709\u6311\u6218\u6027\uff0c\u4f46\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u5411\u683c\u9c81\u514b\u535a\u58eb\u5b66\u4e60\u8ba9\u4eba\u611f\u89c9\u6beb\u4e0d\u8d39\u529b\u3002\u5979\u628a\u5956\u5b66\u91d1\u7ed9\u4e86\u6211\uff0c\u800c\u6211\uff0c\u8fd9\u4e2a\u5e78\u8fd0\u7684\u5b66\u751f\uff0c\u5fc5\u987b\u628a\u5b83\u5e26\u56de\u5bb6\u3002\n\u7136\u800c\uff0c\u591a\u53d8\u7684\u975e\u865a\u6784\u7c7b\u4f5c\u5bb6\u3001\u82f1\u8bed\u6559\u6388\u739b\u4e3d\u00b7\u5361\u4f69\u7f57(Mary Cappello)\u5728\u5979\u51fa\u8272\u7684\u65b0\u4e66\u957f\u6587\u201c\u8bb2\u5ea7\u201d(Lecture)\u4e2d\u8868\u793a\uff0c\u6211\u66f2\u89e3\u4e86\u81ea\u5df1\u7684\u77e5\u8bc6\u5206\u5b50\u89d2\u8272\u3002\u5361\u4f69\u7f57\u5199\u9053\uff0c\u8bfe\u6587\u8bfb\u5230\u4e00\u534a\uff0c\u7acb\u5373\u4e3a\u8bb2\u5ea7\u8fa9\u62a4\uff0c\u5e76\u547c\u5401\u5bf9\u5f62\u5f0f\u8fdb\u884c\u6574\u4f53\u548c\u521b\u9020\u6027\u7684\u6539\u8fdb\uff0c\u201c\u6211\u4eec\u88ab\u56fa\u5b9a\u5728\u6f14\u8bb2\u5385\u7684\u5ea7\u4f4d\u4e0a\uff0c\u800c\u4e0d\u662f\u628a\u6f14\u8bb2\u8005\u7684\u77e5\u8bc6\u5012\u8fdb\u6f0f\u6597\u5934\u91cc\u3002\u201d\u7b2c\u4e00\u6b21\u8bfb\u5230\u8fd9\u4e00\u65ad\u8a00\u65f6\uff0c\u6211\u52c3\u7136\u5927\u6012\uff1a\u4e0d\u662f\u5417\uff1f\u4f46\u6211\u73b0\u5728\u660e\u767d\u4e86\uff0c\u5e2e\u52a9\u6211\u5982\u6b64\u8f7b\u677e\u5730\u4ee5\u90a3\u79cd\u65b9\u5f0f\u5b66\u4e60\u7684\u6761\u4ef6\u662f\u591a\u4e48\u8106\u5f31\u3002\u6211\u662f\u4e00\u540d\u4f4f\u5728\u6821\u56ed\u91cc\u7684\u5168\u65e5\u5236\u5b66\u751f\uff1b\u6211\u662f\u4e00\u4e2a\u6ca1\u6709\u5b89\u5168\u611f\u7684\u5b8c\u7f8e\u4e3b\u4e49\u8005\uff0c\u4e0d\u6562\u5728\u8bfe\u5802\u4e0a\u53d1\u8a00\uff0c\u4f46\u75f4\u8ff7\u4e8e\u5b66\u4e60\u7684\u4f7f\u547d\u3002\u6211\u662f\u4ee5\u4e00\u79cd\u7eaf\u7cb9\u7684\u63a5\u53d7\u72b6\u6001\u6765\u542c\u8bfe\u7684\uff1a\u5728\u573a\uff0c\u5fc3\u4e0d\u5728\u7109\uff0c\u6e34\u671b\u88ab\u6559\u5bfc\u3002\n\u5341\u5e74\u540e\uff0c\u5728\u4e00\u573a\u6d41\u884c\u75c5\u4e2d\uff0c\u6211\u6210\u4e86\u4e00\u540d\u5728\u7f51\u4e0a\u5b66\u4e60\u548c\u6559\u6388\u8bfe\u7a0b\u7684\u535a\u58eb\u751f\uff0c\u6211\u77e5\u9053\u4e0d\u5e94\u8be5\u5047\u8bbe\u6211\u6216\u6211\u7684\u5927\u5b66\u5e74\u9f84\u7684\u5b66\u751f\u4f1a\u5728\u8fd9\u6837\u7684\u5dde\u6765\u4e0a\u8bfe\u3002\u8fdc\u7a0b\u5b66\u4e60\u4f7f\u4e34\u573a\u611f\u6210\u4e3a\u7406\u8bba\u6027\u7684\uff0c\u5206\u5fc3\u51e0\u4e4e\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u800c\u6e34\u671b\u5219\u662f\u4e00\u79cd\u4e0a\u5761\u5f0f\u7684\u6500\u767b\u3002\u5728Zoom\u4e0a\uff0c\u5f88\u96be\u5b9e\u73b0\u7edd\u5bf9\u7684\u63a5\u53d7\u6027\u3002\u8fdc\u7a0b\u5b66\u4e60\u8981\u6c42\u6211\u4eec\uff0c\u5c31\u50cf\u5361\u4f69\u7f57\u6240\u505a\u7684\u90a3\u6837\uff0c\u5c06\u4eba\u6587\u8bfe\u7a0b\u91cd\u65b0\u60f3\u8c61\u4e3a\u4e00\u79cd\u6559\u5b66\u5de5\u5177\uff0c\u5b83\u751a\u81f3\u751a\u81f3\u7279\u522b\u9002\u7528\u4e8e\u5fc3\u70e6\u610f\u4e71\u7684\u542c\u4f17\u3002\u5bf9\u4e8e\u5361\u4f69\u7f57\u6765\u8bf4\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5206\u5fc3\u662f\u72b6\u6001\u7684\u6838\u5fc3\u3002\u5979\u8ba4\u4e3a\u6f14\u8bb2\u662f\u6fc0\u53d1\u601d\u60f3\u7684\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u4f20\u6388\u4fe1\u606f\u7684\u5de5\u5177\u3002(\u636e\u63a8\u6d4b\uff0c\u5979\u6392\u9664\u4e86\u67d0\u4e9b\u9ad8\u5ea6\u5177\u4f53\u7684\u9886\u57df\uff1a\u6211\u6000\u7591\u8bb2\u5ea7\u662f\u5426\u9002\u7528\u4e8e\uff0c\u6bd4\u65b9\u8bf4\uff0c\u9002\u7528\u4e8e\u533b\u5b66\u9662\u6559\u6388\u3002)\u3002\u5979\u8ba4\u4e3a\uff0c\u8bb2\u5e08\u7684\u89d2\u8272\u662f\u6fc0\u6d3b\u542c\u4f17\u7684\u5934\u8111-\u5982\u679c\u8fd9\u4f1a\u8ba9\u4e00\u4e9b\u4eba\u9677\u5165\u767d\u65e5\u68a6\u6216\u6c89\u601d\uff0c\u90a3\u5c31\u610f\u5473\u7740\u8bb2\u5ea7\u662f\u6210\u529f\u7684\u3002\n\u5361\u4f69\u7f57\u53ea\u662f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u652f\u6301\u758f\u5ffd\u3002\u5979\u5199\u4e86\u5927\u6d41\u884c\u524d\u7684\u8bb2\u5ea7\uff0c\u4f46\u6211\u6000\u7591\u5979\u4f1a\u5efa\u8bae\u5b66\u751f\u4eec\u5728\u8bfe\u5802\u4e0a\u8ba9\u8001\u5e08\u5728Zoom\u6216\u73a9\u52a8\u7269\u7a7f\u8d8a\u6e38\u620f\u65f6\u9759\u97f3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5979\u76f8\u4fe1\u8bb2\u5e08\u7684\u58f0\u97f3\u80fd\u8ba9\u6211\u4eec\u6c89\u6d78\u5728\u601d\u8003\u4e2d\u3002\u5979\u56de\u5fc6\u8bf4\uff0c\u5979\u53c2\u52a0\u4e86\u9887\u5177\u5f71\u54cd\u529b\u7684\u8fdb\u5316\u751f\u7269\u5b66\u5bb6\u65af\u8482\u82ac\u00b7\u6770\u4f0a\u00b7\u53e4\u5c14\u5fb7(Stephen Jay Gould)\u7684\u4e00\u6b21\u6f14\u8bb2\uff0c\u6f14\u8bb2\u8fdb\u884c\u5230\u4e00\u534a\u65f6\uff0c\u5979\u5f00\u59cb\u5168\u795e\u8d2f\u6ce8\u5730\u8c08\u8bba\u201c\u4f5c\u4e3a\u9c7c\u7c7b\u9cc3\u652f\u6491\u7269\u7684\u4e00\u5757\u5c0f\u9aa8\u5934\u662f\u5982\u4f55\u53ca\u65f6\u8fdb\u5165\u54fa\u4e73\u52a8\u7269\u5185\u8033\u7684\u7ec6\u8282\u3002\u201d\u5979\u9519\u8fc7\u4e86\u53e4\u5c14\u5fb7\u5176\u4f59\u7684\u89c2\u70b9\uff0c\u4f46\u201c(\u9700\u8981)\u4ed6\u7684\u58f0\u97f3\u201d\u8ba9\u5979\u7ee7\u7eed\u601d\u8003\u8fd9\u5757\u5c0f\u5c0f\u7684\u9aa8\u5934\uff0c\u800c\u4e0d\u662f\u66f4\u591a\u7684\u4e2a\u4eba\u6216\u5e73\u6de1\u65e0\u5947\u7684\u62c5\u5fe7\u3002\u5bf9\u5361\u4f69\u7f57\u6765\u8bf4\uff0c\u8fd9\u79cd\u201c\u4e0d\u542c\u201d\u7684\u534a\u5206\u5fc3\u72b6\u6001\u65e2\u80fd\u8ba9\u4eba\u653e\u677e\uff0c\u53c8\u80fd\u8ba9\u4eba\u5fc3\u7406\u5065\u5eb7\u3002\u5c31\u50cf\u51a5\u60f3\u4e00\u6837\uff0c\u5b83\u201c\u4f7f\u5927\u8111\u7684\u4e00\u90e8\u5206\u82cf\u9192\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u540c\u65f6\u7761\u7740\u201d\u3002\n\u5361\u4f69\u7f57\u559c\u6b22\u6df1\u5ea6\u4f46\u5206\u6563\u7684\u5173\u6ce8\uff0c\u8fd9\u8ba9\u5979\u4e0e\u4f5c\u5bb6\u517c\u827a\u672f\u5bb6\u73cd\u59ae\u00b7\u5965\u5fb7\u5c14(Jenny Odell)\u6709\u7740\u5bc6\u5207\u7684\u77e5\u8bc6\u5206\u5b50\u4eb2\u621a\u5173\u7cfb\u3002\u5965\u5fb7\u5c142019\u5e74\u51fa\u7248\u7684\u4e66\u201c\u5982\u4f55\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff1a\u62b5\u5236\u6ce8\u610f\u529b\u7ecf\u6d4e\u201d(How to Do Nothing\uff1aReating the Attribute Economy)\u62d2\u7edd\u4e86\u201c\u4e00\u4e2a\u6211\u4eec\u7684\u4ef7\u503c\u7531\u6211\u4eec\u7684\u751f\u4ea7\u529b\u51b3\u5b9a\u7684\u4e16\u754c\u201d\u751f\u6d3b\u6240\u9700\u8981\u7684\u6fc0\u5149\u805a\u7126\u3002\u5965\u5fb7\u5c14\u5728\u5f53\u4ee3\u751f\u6d3b\u4e2d\u5bfb\u627e\u201c\u6a21\u68f1\u4e24\u53ef\u548c\u6548\u7387\u4f4e\u4e0b\u7684\u9690\u79d8\u6e90\u6cc9\u201d\uff1b\u5361\u4f69\u7f57\u8ba4\u4e3a\uff0c\u6f14\u8bb2\u6070\u6070\u53ef\u4ee5\u63d0\u4f9b\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1\u524d\u63d0\u662f\u6f14\u8bb2\u8005\u5fc5\u987b\u4ece\u5728\u6700\u77ed\u65f6\u95f4\u5185\u4f20\u6388\u6700\u591a\u77e5\u8bc6\u7684\u4e49\u52a1\u4e2d\u89e3\u8131\u51fa\u6765\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5979\u8981\u6c42\u4ed6\u4eec\u5bf9\u4f20\u6388\u77e5\u8bc6\u7684\u4e49\u52a1\u4e0d\u8981\u90a3\u4e48\u8ba4\u771f\u3002\n\u5965\u5fb7\u5c14\u901a\u8fc7\u5f3a\u8c03\u5361\u4f69\u7f57\u6240\u8bf4\u7684\u201c\u6d41\u6d6a\u4e4b\u8def\u201d\u6765\u5f3a\u8c03\u4f4e\u6548\u3002\u4e24\u4f4d\u4f5c\u8005\u90fd\u8ba4\u4e3a\uff0c\u667a\u529b\u4e0a\u7684\u6f2b\u6e38\u662f\u771f\u6b63\u5b66\u4e60\u7684\u5173\u952e\uff0c\u800c\u4e14\uff0c\u8d70\u8fd9\u6837\u4e00\u6761\u5f2f\u8def\u7684\u80fd\u529b\u662f\u6211\u4eec\u8bb8\u591a\u4eba\u5fc5\u987b\u6709\u610f\u8bc6\u5730\u57f9\u517b\u7684\u4e00\u79cd\u6280\u80fd\u3002\u201c\u572821\u4e16\u7eaa\u7684\u7f8e\u56fd\uff0c\u201d\u5361\u4f69\u7f57\u89e3\u91ca\u8bf4\uff0c\u201c\u6709\u592a\u591a\u7684\u4e8b\u60c5\u9700\u8981\u6211\u4eec\u5173\u6ce8\uff0c\u800c\u4e0d\u9700\u8981\u6211\u4eec\u7684\u5173\u6ce8\u6216\u6539\u53d8\u6211\u4eec\u7684\u5173\u6ce8\u3002\u201d\u5982\u679c\u4e00\u573a\u8bb2\u5ea7\u8bd5\u56fe\u505a\u5230\u540e\u4e00\u79cd\u60c5\u51b5\u5462\uff1f\u5982\u679c\u4e00\u4e2a\u5927\u5b66\u6559\u6388\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5e2e\u52a9\u6bcf\u4e2a\u5b66\u751f\u4e0d\u662f\u4e13\u6ce8\u4e8e\u68c0\u67e5\u8bfe\u7a0b\u76d2\uff0c\u800c\u662f\u628a\u8bfe\u7a0b\u6750\u6599\u4f5c\u4e3a\u4e86\u89e3\u4ed6\u4eec\u81ea\u5df1\u7684\u7ecf\u5386\u3001\u597d\u5947\u5fc3\u548c\u9700\u6c42\u7684\u7a97\u53e3\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u6700\u8fd1\u7ed9\u6211\u7684\u4e00\u5e74\u7ea7\u4f5c\u6587\u5b66\u751f\u4e0a\u4e86\u4e00\u5802\u8bfe\uff0c\u8bb2\u7684\u662f\u6839\u6df1\u8482\u56fa\u7684\u538c\u5973\u75c7\u5bf9\u8bfb\u8005\u548c\u8bc4\u8bba\u5bb6\u5bf9\u5973\u6027\u4e66\u7c4d\u7684\u53cd\u5e94\u7684\u6f5c\u79fb\u9ed8\u5316\u7684\u8868\u73b0\u3002\u8fd9\u5802\u8bfe\u4e0e\u6211\u6240\u6709\u768423\u540d\u5b66\u751f\u90fd\u76f8\u5173\uff0c\u4f46\u6211\u60f3\uff0c\u572823\u5206\u4e4b\u5dee\u4e2d\uff0c\u4e5f\u662f\u76f8\u5173\u7684\u3002\n\u8fd9\u4e2a\u76ee\u6807\u5bf9\u4e8e\u65e5\u5e38\u6559\u5b66\u6765\u8bf4\u53ef\u80fd\u6709\u70b9\u6df1\u5965\uff0c\u5361\u4f69\u7f57\u4e5f\u6ca1\u6709\u63d0\u4f9b\u5b9e\u9645\u6307\u5bfc\u3002\u5728\u6211\u7684\u6587\u5b66\u538c\u5973\u75c7\u8bb2\u5ea7\u4e2d\uff0c\u6211\u52aa\u529b\u7528\u8f76\u4e8b\u548c\u79bb\u9898\u6765\u521b\u9020\u5b81\u9759\uff0c\u4ee5\u6d41\u6d6a\u4e3a\u6a21\u578b\uff0c\u5e0c\u671b\u6211\u7684\u5b66\u751f\u4e5f\u80fd\u6709\u70b9\u6d41\u6d6a\u3002\u5f88\u96be\u8bf4\u8fd9\u4e2a\u7b56\u7565\u6709\u591a\u6709\u6548\uff0c\u4f46\u6211\u7684\u5b66\u751f\u5728\u968f\u540e\u7684\u8ba8\u8bba\u4e2d\u786e\u5b9e\u770b\u8d77\u6765\u5f88\u6709\u6d3b\u529b\u3002\u5728\u504f\u8fdc\u7684\u6559\u5ba4\u91cc\uff0c\u5bf9\u8bdd\u7684\u6d3b\u529b\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u6210\u529f\uff0c\u8fd9\u53ef\u80fd\u8868\u660e\u5361\u4f69\u7f57\u7684\u8bba\u70b9\u5177\u6709\u5947\u602a\u7684\u5b9e\u7528\u4ef7\u503c\u3002\u5927\u6d41\u884c\u671f\u95f4\u7684\u6559\u5b66\u9700\u8981\u5728\u6240\u6709\u65b9\u9762\u90fd\u5177\u6709\u7075\u6d3b\u6027\uff1a\u51fa\u5e2d\u7387\u3001\u8bfe\u7a0b\u8bbe\u8ba1\u3001\u4e3b\u9898\u548c\u9884\u671f\u7684\u5b66\u751f\u53cd\u5e94\u3002\u8fd9\u9700\u8981\u7406\u89e3\uff0c\u73b0\u5728\u5f88\u96be\u63a5\u89e6\u5230\u5b66\u751f\uff0c\u539f\u56e0\u4e0d\u4ec5\u4ec5\u662f\u6211\u4eec\u4e4b\u95f4\u7684\u5c4f\u5e55\u3002\u4eca\u5e74\u79cb\u5929\uff0c\u6211\u7684\u5b66\u751f\u4eec\u5728\u5b66\u6821\u5de5\u4f5c\u3001\u5bb6\u5ead\u8d23\u4efb\u3001\u9009\u4e3e\u7126\u8651\u548c\u51a0\u72b6\u75c5\u6bd2\u6050\u60e7\u4e4b\u95f4\u6e38\u5203\u6709\u4f59\u3002\u4e00\u4e9b\u4eba\u6b63\u5728\u9694\u79bb\uff1b\u4e00\u4e9b\u4eba\u751f\u75c5\u4e86\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u667a\u529b\u751f\u6d3b\u662f\u8270\u96be\u7684\u3002\u8981\u5bb9\u6613\u5f97\u591a\u7684\u662f\u6084\u6084\u8fdb\u5165\u5361\u4f69\u7f57\u6240\u8bf4\u7684\u201c\u673a\u68b0\u4ea4\u6613\u7684\u6a21\u7cca\u96c6\u5408\u548c\u81ea\u52a8\u63a5\u8fd1\u624b\u673a\u7684\u72b6\u6001\u201d\u3002\u5982\u679c\u6211\u7684\u8bb2\u8bfe\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u201c\u5076\u5c14\u7684\u9707\u52a8\u201d\u6765\u6fc0\u52b1\u5b66\u751f\uff0c\u90a3\u4e48\u6211\u5c31\u53d6\u5f97\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u80dc\u5229\u3002\u5982\u679c\u6211\u80fd\u6709\u610f\u4e49\u5730\u5f15\u5bfc\u5b66\u751f\u601d\u8003\u65b0\u7684\u53ef\u80fd\u6027\uff0c\u90a3\u4e48\uff0c\u6309\u7167\u5361\u4f69\u7f57\u7684\u6807\u51c6\uff0c\u6211\u63d0\u4f9b\u4e86\u4e00\u9879\u6709\u4ef7\u503c\u7684\u670d\u52a1\uff0c\u5373\u4f7f\u5728\u6211\u7684\u5199\u4f5c\u8bfe\u7ed3\u675f\u65f6\uff0c\u6211\u7684\u4e00\u534a\u5b66\u751f\u6b63\u5728\u601d\u8003\u4e0e\u5199\u4f5c\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u7684\u53ef\u80fd\u6027\u3002\u6bd5\u7adf\uff0c\u5728\u6f14\u8bb2\u548c\u6559\u80b2\u4e2d\uff0c\u91cd\u8981\u7684\u662f\u601d\u8003\u672c\u8eab\u3002\n\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u5411\u7f16\u8f91\u63d0\u4ea4\u4e00\u5c01\u4fe1\uff0c\u6216\u5199\u4fe1\u7ed9letters@theatlantic.com\u3002", "note_en": "In college, I took a three-semester class sequence on European intellectual history taught by a long-tenured professor, Mary Gluck, who lectured straight through each session, usually reserving the last five minutes for questions. To some, this model was a nightmare; I loved it. Her lectures on topics including Haussmann\u2019s urban design and Hegel\u2019s theory of history were so finely honed, so expertly delivered, that I felt as though she had hinged my head open and deposited knowledge inside. Though the courses were challenging, learning from Dr. Gluck felt, in a certain sense, effortless. She delivered her scholarship to me, and I, lucky student, got to take it home.\n   However, the polymorphic nonfiction writer and English professor Mary Cappello suggests, in her excellent new book-length essay,  Lecture, that I was misinterpreting my intellectual role. Midway through the text, which at once defends the lecture and calls for holistic and creative improvements to the form, Cappello writes, \u201cFastened to our seats in the lecture hall, we aren\u2019t funnel-heads into which a lecturer\u2019s knowledge is poured.\u201d On first reading that assertion, I bristled:  Wasn\u2019t I? But I now see how tenuous the conditions were that helped me learn so easily in that style. I was a full-time student living on campus; I was an insecure perfectionist afraid to speak in class, but obsessed with the mandate to learn. I arrived to lectures in a purely receptive state: present, undistracted, and eager to be taught.\n    Ten years later, I am a doctoral candidate taking and teaching courses online amid a pandemic, and I know better than to presume that either I or my college-age students will come to class in such a state. Remote learning renders presence theoretical, distraction all but inevitable, and eagerness an uphill climb. On Zoom, absolute receptivity is very difficult to achieve. Remote learning asks us, as Cappello does, to reimagine the humanities lecture as a teaching tool that works even, or especially, for the distractible listener. To Cappello, in fact, distraction is the heart of the form. She argues that lectures are a tool for sparking thought, not for imparting information. (Presumably, she excludes certain highly concrete fields: I doubt that  Lecture applies, say, to medical-school professors.) She believes that the lecturer\u2019s role is to activate listeners\u2019 minds\u2014and if that sucks some into daydreams or rumination, that means the lecture is a success.\n    Cappello is pro-inattention only to a degree. She wrote  Lecture pre-pandemic, but I doubt that she would have suggested that students mute their teachers on Zoom or play  Animal Crossing during class. Indeed, she believes that the very sound of a lecturer\u2019s voice helps keep us submerged in thought. She recalls attending a talk by the influential evolutionary biologist Stephen Jay Gould and becoming fixated, halfway through, on \u201cthe detail of how a tiny bone that had served as the gill-support in fishes came in time to take up residence in the mammalian inner ear.\u201d She missed the rest of Gould\u2019s points, but \u201c[needed] his voice\u201d to keep thinking about the tiny bone, rather than more personal or prosaic concerns. To Cappello, this semi-distracted state of \u201cnot not listening\u201d is both relaxing and psychologically healthy. Like meditation, it \u201cenables one part of the mind to wake while the other simultaneously sleeps.\u201d\n Cappello\u2019s preference for deep but diffuse attention makes her close intellectual kin to the writer and artist Jenny Odell, whose 2019 book,  How to Do Nothing: Resisting the Attention Economy, rejects the laser focus that life in \u201ca world where our value is determined by our productivity\u201d demands. Odell seeks \u201chidden springs of ambiguity and inefficiency\u201d in contemporary life; Cappello suggests that lectures could provide exactly that, though only if speakers release themselves from the obligation to impart maximum knowledge in minimum time. In fact, she asks them to take less seriously the obligation to impart knowledge at all.\n  Odell emphasizes inefficiency by way of emphasizing what Cappello calls \u201cwandering ways.\u201d Both writers argue that intellectual meandering is key to real learning and, further, that the ability to take such detours is a skill that many of us must consciously nurture. \u201cIn 21st-century America,\u201d Cappello explains, \u201cthere is so much that holds or demands our attention without requiring our attention or altering our attention.\u201d What if a lecture tried to do the latter? What if a college professor\u2019s primary purpose was to help each student focus not on checking curricular boxes, but on using course material as a window into their own experiences, curiosities, and needs?\n    Take, for instance, a lecture I recently gave my freshman composition students on the stealthy manifestations of ingrained misogyny on readers\u2019 and critics\u2019 responses to books by women. The lecture was relevant to all 23 of my students, but relevant, I imagine, in 23 different ways. Not every student needed to absorb the whole lesson. For some, it might have been more productive to think about their past responses to certain novels, or wonder how this might apply to their musical taste, or begin imagining how they might approach criticism differently themselves.\n   Cappello argues that lectures should play to the fact that real learning comes primarily from within: not from a teacher\u2019s neatly presented ideas, but from the connections your own brain forms between them. For a lecture not to leave room for mental wandering and idiosyncratic interpretation, she argues, is to reject that truth. To some extent, this is common sense: I know that my 23 students, with their varying interests and backgrounds, will not all make the same intellectual use of my literary-misogyny lecture. Cappello suggests that I embrace this fact by reenvisioning the form itself as a series of embarkation points for thought. Rather than attempt to present one unified argument that my students must absorb, I, the lecturer, should strive to awaken their various curiosities, then guide them into \u201cthe sort of quietude where thought occurs.\u201d\n This goal might be a bit abstruse for everyday teaching, and Cappello provides no practical guidance. In my literary-misogyny lecture, I endeavored to create quietude with anecdotes and digressions, modeling wandering in the hopes that my students might wander a bit too. How well that tactic worked is hard to say, but my students did seem energized in the discussion that followed. In the remote classroom, conversational vigor is in and of itself a success, and one that might point to the strange utility of Cappello\u2019s argument. Teaching during a pandemic requires flexibility on all fronts: attendance, curriculum design, subject matter, and expected student response. It requires understanding that students are hard to reach right now, for more reasons than just the screens between us. This fall, my students are juggling school with work, family responsibilities, election anxieties, and coronavirus fears. Some are quarantining; some have been sick.\n  Intellectual life is hard under such circumstances. Far easier is slipping into an existence that Cappello describes as \u201ca dim assemblage of rote transactions and the automated reaching toward a cellphone.\u201d If my lectures can energize students by offering an \u201coccasional shake\u201d from that existence, then I have achieved a small victory. If I can meaningfully orient students\u2019 minds toward new possibilities, then, by Cappello\u2019s standards, I have provided a valuable service, even if, by the end of my writing class, half my students are ruminating on possibilities that have little to do with writing. What matters\u2014in a lecture, and an education\u2014is, after all, thinking itself.\n  We want to hear what you think about this article.  Submit a letter to the editor or write to letters@theatlantic.com.", "posttime": "2020-10-30 13:42:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u8361,wandering,\u5b66\u751f", "title": "\u4e00\u9897\u6e38\u8361\u7684\u5fc3\u7684\u60ca\u4eba\u4ef7\u503c", "title_en": "The Surprising Value of a Wandering Mind", "transed": 1, "url": "https://www.theatlantic.com/culture/archive/2020/10/mary-cappello-lecture-jenny-odell-how-to-do-nothing-distraction-learning/616649/", "via": "", "real_tags": ["\u6e38\u8361", "wandering", "\u5b66\u751f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032237, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6253\u8d4c\u60a8\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8fd9\u6837\u4e00\u4ef6\u4e8b\uff0c\u800c\u4e14\u7406\u7531\u5f88\u5145\u5206\uff1a\u6d6e\u70b9\u6570\u662f\u5982\u4f55\u5448\u73b0\u4e3a\u6587\u672c\u5b57\u7b26\u4e32\u7684\uff1f\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u68d8\u624b\u95ee\u9898\uff0c\u4f46\u81ea1990\u5e74\u5de6\u53f3\u4ee5\u6765\uff0c\u4eba\u4eec\u4e00\u76f4\u8ba4\u4e3a\u5b83\u57fa\u672c\u4e0a\u5f97\u5230\u4e86\u89e3\u51b3\u3002\n\u5728Steele\u548cWhite\u7684\u201c\u5982\u4f55\u51c6\u786e\u6253\u5370\u6d6e\u70b9\u6570\u201d\u4e4b\u524d\uff0cprintf\u548c\u7c7b\u4f3c\u7684\u5448\u73b0\u51fd\u6570\u7684\u5b9e\u73b0\u90fd\u5c3d\u4e86\u6700\u5927\u52aa\u529b\u6765\u5448\u73b0\u6d6e\u70b9\u6570\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u8868\u73b0\u5dee\u522b\u5f88\u5927\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\u8bf8\u59821.3\u53f7\u4e4b\u7c7b\u7684\u6570\u5b57\u8868\u793a\u4e3a1.29999999\uff0c\u6216\u8005\u5982\u679c\u5c06\u4e00\u4e2a\u6570\u5b57\u653e\u5165\u5199\u51fa\u5176\u4e66\u9762\u8868\u793a\u7684\u53cd\u9988\u5faa\u73af\uff0c\u5e76\u4e14\u8bfb\u56de\u5b83\u7684\u4e66\u9762\u8868\u793a\uff0c\u5219\u6bcf\u4e2a\u8fde\u7eed\u7684\u7ed3\u679c\u53ef\u80fd\u4f1a\u8d8a\u6765\u8d8a\u8fdc\u79bb\u539f\u59cb\u7ed3\u679c\u3002\n\u65af\u8482\u5c14\u548c\u6000\u7279\u7528\u4e00\u79cd\u540d\u4e3a\u201c\u9f99\u201d\u7684\u806a\u660e\u7b97\u6cd5\u6709\u6548\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898(\u201c\u9f99\u201d\u7b97\u6cd5\u7684\u7b2c\u56db\u4e2a\u7248\u672c\uff0c\u4e4b\u6240\u4ee5\u5f97\u540d\uff0c\u662f\u56e0\u4e3a\u4f5c\u8005\u53d7\u5230\u6d77\u5a01\u7684\u9f99\u66f2\u7ebf\u7684\u542f\u53d1\uff0c\u60f3\u8981\u6a21\u7cca\u53cc\u5173\u8bed)\u3002\nDragon4\u7b97\u6cd5\u5728\u8bed\u8a00\u8fd0\u884c\u65f6\u4e2d\u8fc5\u901f\u4f20\u64ad\uff0c\u4ee5\u81f3\u4e8e\u4eca\u5929\u5f88\u5c11\u6709\u7a0b\u5e8f\u5458\u7406\u89e3\u8fd9\u66fe\u7ecf\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u66f4\u4e0d\u7528\u8bf4\u5b83\u66fe\u7ecf(\u73b0\u5728\u662f\u5982\u6b64)\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u53bb\u5e74\u4e4b\u524d\uff0c\u8fd9\u65b9\u9762\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u6d3b\u52a8\uff1a\u6709\u4e24\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u5bf9Dragon4\u8fdb\u884c\u5e7f\u6cdb\u4f7f\u7528\u7684\u6539\u8fdb\uff0c\u4ec5\u6b64\u800c\u5df2\u3002(\u5509\uff0c\u8fd9\u4e2a\u95ee\u9898\u6700\u521d\u662f\u5728\u65af\u8482\u5c14\u548c\u6000\u7279\u53d1\u8868\u4ed6\u4eec\u7684\u4f5c\u54c1\u4e4b\u524d\u5341\u5e74\u5de6\u53f3\u89e3\u51b3\u7684\uff0c\u4f46\u6ca1\u6709\u4eba\u6ce8\u610f\u5230\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u806a\u660e\u7684\u60f3\u6cd5\u548c\u8db3\u591f\u7684\u539a\u989c\u65e0\u803b\uff0c\u90a3\u5c31\u8bd5\u7740\u62db\u52df\u76d6\u4f0a\u00b7\u65af\u8482\u5c14(Guy Steele)\u4f5c\u4e3a\u5408\u8457\u8005\u3002\u60a8\u7684\u4f5c\u54c1\u5c06\u4f1a\u88ab\u9605\u8bfb\u3002)\u3002\n\u4f46\u662f\u95ee\u9898\u662f\u5982\u4f55\u89e3\u51b3\u7684\u5462\uff1fDragon4\u53ca\u5176\u884d\u751f\u54c1\u590d\u6742\u800c\u68d8\u624b\uff0c\u800c\u4e14\u5b83\u4eec\u7684\u6027\u80fd\u6210\u672c\u5f88\u9ad8\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f9d\u8d56\u4e8e\u4efb\u610f\u7cbe\u5ea6\u7684\u6574\u6570\u8fd0\u7b97\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u7ed3\u679c\u3002\u5982\u679c\u6709\u4eba\u80fd\u591f\u627e\u51fa\u5982\u4f55\u4f7f\u7528\u672c\u673a\u6574\u6570\uff0c\u5219\u53ef\u80fd\u4f1a\u83b7\u5f97\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\u3002\n2010\u5e74\uff0cFlorian Loitsch\u5728PLDI\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u7cbe\u5f69\u7684\u8bba\u6587\uff0c\u7528\u6574\u6570\u5feb\u901f\u51c6\u786e\u5730\u6253\u5370\u6d6e\u70b9\u6570\uff0c\u8fd9\u4ee3\u8868\u7740\u8be5\u9886\u57df20\u5e74\u6765\u6700\u5927\u7684\u8fdb\u6b65\uff1a\u4ed6\u4e3b\u8981\u89e3\u51b3\u4e86\u5982\u4f55\u4f7f\u7528\u673a\u5668\u6574\u6570\u6267\u884c\u7cbe\u786e\u6e32\u67d3\uff01\u4e3a\u4ec0\u4e48\u6211\u8bf4\u4e3b\u8981\u662f\uff1f\u56e0\u4e3a\u867d\u7136Loitsch\u7684Grisu3&34\uff1b\u7b97\u6cd5\u975e\u5e38\u5feb\uff0c\u4f46\u5b83\u653e\u5f03\u4e86\u5927\u7ea60.5%\u7684\u6570\u5b57\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5fc5\u987b\u9000\u56de\u5230Dragon4\u6216\u4e00\u4e2a\u6d3e\u751f\u7684\u6570\u5b57\u3002\n\u5982\u679c\u60a8\u662f\u4e00\u4f4d\u8bed\u8a00\u8fd0\u884c\u65f6\u4f5c\u8005\uff0c\u90a3\u4e48Grisu\u7b97\u6cd5\u975e\u5e38\u91cd\u8981\uff1a\u4f8b\u5982\uff0cGrisu3\u5927\u7ea6\u6bd4GNU libc\u4e2dprintf\u4f7f\u7528\u7684\u7b97\u6cd5\u5feb5\u500d\u3002\u4e00\u4e9b\u8bed\u8a00\u5b9e\u73b0\u8005\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\u8fd9\u4e00\u70b9\uff1aGoogle\u96c7\u4f63\u4e86Loitsch\uff0cGrisu\u5bb6\u65cf\u5145\u5f53V8\u548cMozilla Javascript\u5f15\u64ce\u4e2d\u7684\u9ed8\u8ba4\u5448\u73b0\u7b97\u6cd5(\u53d6\u4ee3David Gay\u957f\u8fbe17\u5e74\u7684dtoa\u4ee3\u7801)\u3002Loitsch\u53cb\u597d\u5730\u5c06\u4ed6\u7684Grisu\u7b97\u6cd5\u7684\u5b9e\u73b0\u4f5c\u4e3a\u4e00\u4e2a\u540d\u4e3aDouble-Conversion\u7684\u5e93\u53d1\u5e03\u3002\n\u5f53\u7136\uff0c\u5728\u8c08\u5230\u6027\u80fd\u65f6\uff0c\u6211\u4e0d\u80fd\u4e0d\u5728\u67d0\u4e2a\u5730\u65b9\u63d0\u5230Haskell\uff1a-)\u6211\u4f7f\u7528\u4e86Loitsch\u7684\u5e93\u5e76\u7f16\u5199\u4e86\u4e00\u4e2aHaskell\u63a5\u53e3\uff0c\u6211\u6d4b\u91cf\u5230\u5b83\u6bd4Haskell\u8fd0\u884c\u65f6\u5e93\u4e2d\u4f7f\u7528\u7684\u9ed8\u8ba4\u6e32\u67d3\u5668\u5feb30\u500d\u3002\u8fd9\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u8fde\u9501\u53cd\u5e94\uff1a\u4f8b\u5982\uff0c\u6211\u7684Aeson JSON\u5e93\u73b0\u5728\u5448\u73b0\u5927\u578b\u6d6e\u70b9\u6570\u7ec4\u7684\u901f\u5ea6\u63d0\u9ad8\u4e8610\u500d\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u610f\u5916\u5730\u6ce8\u610f\u5230\u6211\u7684Haskell text Unicode\u5e93\u7684UTF-8\u7f16\u7801\u5668\u901f\u5ea6\u4e0d\u591f\u5feb\uff0c\u56e0\u6b64\u6211\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5c06\u5176\u6027\u80fd\u63d0\u9ad8\u4e86\u7ea650%\u3002\u4e3a\u66f4\u5feb\u7684\u4ee3\u7801\u6b22\u547c\uff01\n(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u7b97\u6cd5\u547d\u540d\u4e2d\u7684\u53cc\u5173\u8bed\u8fd8\u5728\u7ee7\u7eed\uff1aGrisu\u7b97\u6cd5\u662f\u4ee5\u5c0f\u9f99\u683c\u91cc\u65af\u5965\u547d\u540d\u7684\u3002)", "note_en": "Here\u2019s something I bet you never think about, and for good reason: how are floating-point numbers rendered as text strings? This is a surprisingly tough problem, but it\u2019s been regarded as essentially solved since about 1990.\n Prior to Steele and White\u2019s &#34; How to print floating-point numbers accurately&#34;, implementations of  printf and similar rendering functions did their best to render floating point numbers, but there was wide variation in how well they behaved. A number such as 1.3 might be rendered as 1.29999999, for instance, or if a number was put through a feedback loop of being written out and its written representation read back, each successive result could drift further and further away from the original.\n Steele and White effectively solved the problem with a clever algorithm named &#34;Dragon4&#34; (the fourth version of the &#34;Dragon&#34; algorithm, which acquired its name because the authors were inspired to obscure puns by Heighway\u2019s  dragon curve).\n The Dragon4 algorithm spread quickly across language runtimes, such that few programmers today understand that this was ever a problem, much less how hairy it was (and is). Indeed, prior to last year, there was almost no activity in this area: two papers proposed widely used refinements to Dragon4, and that was about it. (Alas, the problem was originally solved around a decade before Steele and White published their work, but nobody noticed. If you have a clever idea and sufficient chutzpah, try to enlist Guy Steele as a coauthor. Your work will be read.)\n But how solved was the problem? Dragon4 and its derivatives are complicated and tricky, and they have a hefty performance cost, since they rely on arbitrary-precision integer arithmetic to compute their results. There might be a significant performance improvement to be gained if someone could figure out how to use native machine integers instead.\n In 2010, Florian Loitsch published a wonderful paper in PLDI, &#34; Printing floating-point numbers quickly and accurately with integers&#34;, which represents the biggest step in this field in 20 years: he mostly figured out how to use machine integers to perform accurate rendering! Why do I say &#34;mostly&#34;? Because although Loitsch\u2019s &#34;Grisu3&#34; algorithm is very fast, it  gives up on about 0.5% of numbers, in which case you have to fall back to Dragon4 or a derivative.\n If you\u2019re a language runtime author, the Grisu algorithms are a big deal: Grisu3 is about 5 times faster than the algorithm used by  printf in GNU libc, for instance. A few language implementors have already taken note: Google hired Loitsch, and the Grisu family acts as the default rendering algorithms in both the V8 and Mozilla Javascript engines (replacing David Gay\u2019s 17-year-old  dtoa code). Loitsch has kindly released implementations of his Grisu algorithms as a library named   double-conversion.\n And of course I can\u2019t talk about performance without mentioning Haskell somewhere :-) I\u2019ve taken Loitsch\u2019s library and written a  Haskell interface, which I\u2019ve measured to be 30 times faster than the default renderer used in the Haskell runtime libraries. This has some nice knock-on effects: my   aeson JSON library is now 10 times faster at rendering big arrays of floating point numbers, for instance. I accidentally noticed in the course of that work that my Haskell   text Unicode library\u2018s UTF-8 encoder wasn\u2019t as fast as it could be, so I improved its performance by about 50% along the way. Hooray for faster code!\n (By the way, the punnery in algorithm naming continues: the Grisu algorithms are named for  Gris\u00c3\u00b9, the little dragon.)", "posttime": "2020-10-30 13:22:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "floating", "title": "\u5448\u73b0\u6d6e\u70b9\u6570\uff1a\u4f60\u751a\u81f3\u4e0d\u77e5\u9053\u81ea\u5df1\u6709\u95ee\u9898\u7684\u8fdb\u5c55", "title_en": "Rendering floating numbers: advances in problems you didn\u2019t even know you had", "transed": 1, "url": "http://www.serpentine.com/blog/2011/06/29/here-be-dragons-advances-in-problems-you-didnt-even-know-you-had/", "via": "", "real_tags": ["floating"]}, {"category": "", "categoryclass": "", "imagename": "a21090fcd2e821b6c591b347a44c6138.jpg", "infoid": 1032236, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AMD\u7b7e\u7f72\u4e86\u4e00\u9879\u6700\u7ec8\u534f\u8bae\uff0c\u4ee5350\u4ebf\u7f8e\u5143\u7684\u80a1\u7968\u6536\u8d2dXilinx\uff0c\u8fd9\u4e3a\u51e0\u4e4e\u6240\u6709\u4e3b\u8981\u5e02\u573a\u4e0e\u82f1\u7279\u5c14\u7684\u6b63\u9762\u4ea4\u950b\u94fa\u5e73\u4e86\u9053\u8def\u3002\u4f46\u8fd9\u7b14\u6536\u8d2d\u4e0d\u4ec5\u4ec5\u662f\u8ddf\u4e0aAMD\u7684\u4e3b\u8981\u7ade\u4e89\u5bf9\u624b\u3002\n\u9996\u5148\uff0c\u5c3d\u7ba1\u5bf9\u53ef\u7f16\u7a0b\u903b\u8f91\u7684\u9700\u6c42\u4e0e\u65e5\u4ff1\u589e\uff0c\u4f46\u6b64\u6b21\u6536\u8d2d\u5728\u7eaf\u64ad\u653eFPGA\u5e02\u573a\u4e0a\u53ea\u5269\u4e0bLattice\u3001Achronix\u548cQuickLogic\u3002\u82f1\u7279\u5c14\u57282015\u5e74\u4ee5167\u4ebf\u7f8e\u5143\u6536\u8d2d\u4e86Altera\u3002MicroSemi\u57282010\u5e74\u4ee54.3\u4ebf\u7f8e\u5143\u6536\u8d2d\u4e86Actel\uff0c2018\u5e74\u53c8\u88abMicroChip\u4ee5\u7ea683.5\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9beFPGA\u4f9b\u5e94\u5546\uff0c\u5305\u62ecFlex Logix\u3001Achronix\u3001Menta\u548cQuickLogic\u3002\nXilinx\u4e00\u76f4\u662fFPGA\u9886\u57df\u7684\u9738\u4e3b\uff0c\u5982\u679c\u6b64\u6b21\u6536\u8d2d\u83b7\u5f97\u6279\u51c6\uff0c\u5b83\u5c06\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\u3002\u5b83\u7684\u53ef\u7f16\u7a0b\u82af\u7247\u7528\u4e8e\u5404\u79cd\u7ec6\u5206\u5e02\u573a\uff0c\u5305\u62ecAMD\u7279\u522b\u5f3a\u5927\u7684\u6570\u636e\u4e2d\u5fc3\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u91cc\u7684\u660e\u663e\u9a71\u52a8\u56e0\u7d20\u5e76\u4e0d\u662fAMD\u60f3\u8981\u8fdb\u5165FPGA\u4e1a\u52a1\u3002\u771f\u6b63\u7684\u52a8\u673a\u4f3c\u4e4e\u662f\u5e73\u53f0\u548c\u53ef\u7f16\u7a0b\u82af\u7247\u7684\u7ed3\u5408\u3002\u53ef\u7f16\u7a0b\u82af\u7247\u89e3\u51b3\u4e86\u4e24\u4e2a\u95ee\u9898\u3002\n\u9996\u5148\uff0c\u5728\u524d\u6cbf\u6d41\u7a0b\u8282\u70b9\u4e0a\u5f00\u53d1\u65b0\u7684\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\u5e73\u5747\u9700\u8981\u51e0\u5e74\u65f6\u95f4\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u7b97\u6cd5\u548c\u8f6f\u4ef6\u53ef\u80fd\u5df2\u7ecf\u6539\u53d8\u4e86\u51e0\u5341\u6b21\u3002\u867d\u7136\u7ee7\u7eed\u63a8\u8fdb\u8fd9\u4e9b\u4f53\u7cfb\u7ed3\u6784\u5f88\u91cd\u8981\uff0c\u4f46\u5fc5\u987b\u5185\u7f6e\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u4ee5\u8ddf\u4e0a\u8f6f\u4ef6\u7684\u6700\u65b0\u53d1\u5c55\u3002\u5176\u4e2d\u5927\u90e8\u5206\u53ef\u4ee5\u5728\u8f6f\u4ef6\u4e2d\u5b8c\u6210\uff0c\u4f46\u5728\u6027\u80fd\u3001\u529f\u8017\u548c\u5b89\u5168\u6027\u65b9\u9762\u6709\u5f88\u5927\u7684\u5f00\u9500\u3002\u4e0e\u5176\u4ed6\u5904\u7406\u5143\u4ef6\u7d27\u5bc6\u96c6\u6210\u7684\u53ef\u7f16\u7a0b\u903b\u8f91\u5141\u8bb8\u6574\u4e2a\u7cfb\u7edf\u4e0e\u73b0\u6709\u7b97\u6cd5\u6216\u5168\u65b0\u7b97\u6cd5\u7684\u66f4\u6539\u4fdd\u6301\u540c\u6b65\u3002\u5b83\u4ecd\u7136\u6ca1\u6709ASIC\u5feb\uff0c\u4f46\u6bd4\u5f00\u53d17 nm\u62165 nm\u7684\u884d\u751f\u82af\u7247\u8981\u5feb\u5f97\u591a\u3002\n\u5176\u6b21\uff0c\u968f\u7740\u65b0\u5e02\u573a\u9700\u8981\u66f4\u591a\u5b9a\u5236\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u62e5\u6709\u53ef\u7f16\u7a0b\u6027\u9009\u9879\u662f\u6ee1\u8db3\u8fd9\u4e9b\u5e02\u573a\u9700\u6c42\u7684\u4e00\u79cd\u5feb\u6377\u65b9\u5f0f\u3002AMD\u548cXilinx\u90fd\u5df2\u7ecf\u7528\u5148\u8fdb\u7684\u5305\u88c5\u65b9\u6cd5\u5de5\u4f5c\u4e86\u5341\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u3002\u5c55\u671b\u672a\u6765\uff0cAMD\u5bf9Xilinx\u7684\u9700\u6c42\u8fdc\u8fdc\u8d85\u8fc7Xilinx\u5bf9AMD\u7684\u9700\u6c42\u3002\u5b83\u7684\u5ba2\u6237\u8981\u6c42\u6781\u9ad8\u7684\u6027\u80fd\u548c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5b9a\u5236\u5316\uff0c\u8fd9\u53ea\u4f1a\u968f\u7740\u8fb9\u7f18\u8ba1\u7b97\u5728\u672a\u6765\u5341\u5e74\u5f00\u59cb\u6210\u5f62\u800c\u589e\u957f\u3002\n\u8fd9\u6709\u52a9\u4e8eXilinx\u7684\u9ad8\u5ea6\u591a\u5143\u5316\u3002\u5c3d\u7ba1\u7531\u4e8e\u6301\u7eed\u7684\u5927\u6d41\u884c\uff0c\u9884\u8ba1\u6d88\u8d39\u8005\u548c\u6c7d\u8f66\u9500\u552e\u5c06\u653e\u7f13\uff0c\u4f46\u8be5\u516c\u53f8\u5728\u7b2c\u4e00\u8d22\u5b63\u4ecd\u80fd\u591f\u516c\u5e03\u5f3a\u52b2\u7684\u4e1a\u7ee9\u3002\u8be5\u516c\u53f8\u5411MIL/\u822a\u7a7a\u3001\u5de5\u4e1a\u5e94\u7528\u3001\u6c7d\u8f66\u3001\u5e7f\u64ad\u3001\u6d88\u8d39\u8005\u3001\u6570\u636e\u4e2d\u5fc3\u4ee5\u53ca\u6709\u7ebf\u548c\u65e0\u7ebf\u5e02\u573a\u9500\u552e\u4ea7\u54c1\uff0c\u5728\u622a\u81f33\u670828\u65e5\u7684\u8d22\u5e74\u4e2d\uff0c\u6536\u5165\u4e3a31.63\u4ebf\u7f8e\u5143\uff0c\u9ad8\u4e8e2019\u8d22\u5e74\u768430.59\u4ebf\u7f8e\u5143\u548c2018\u8d22\u5e74\u768424.67\u4ebf\u7f8e\u5143\u3002\n\u5728Xilinx\u65b9\u9762\uff0c\u8fd9\u7b14\u4ea4\u6613\u5b9e\u5728\u592a\u597d\u4e86\uff0c\u4e0d\u5bb9\u5ffd\u89c6\u3002\u4f46\u6b63\u5982IDC\u5206\u6790\u5e08\u6c99\u6069\u00b7\u52b3(Shane Rau)\u6307\u51fa\u7684\u90a3\u6837\uff0c\u81ea\u4e00\u4e2a\u6708\u524d\u8c08\u5224\u9996\u6b21\u66dd\u5149\u4ee5\u6765\uff0c\u6536\u8d2d\u4ef7\u683c\u4e0a\u6da8\u4e8650\u4ebf\u7f8e\u5143\u3002\u5728\u6b64\u671f\u95f4\uff0cAMD\u7684\u5e02\u503c\u589e\u957f\u4e86\uff0c\u8fd9\u4f7f\u5f97\u63d0\u9ad8\u8981\u4ef7\u53d8\u5f97\u66f4\u53ef\u884c\uff0cXilinx\u4e5f\u80fd\u591f\u4e3a\u5176\u80a1\u4e1c\u8c08\u5224\u51fa\u66f4\u9ad8\u7684\u4ef7\u683c\u3002\n\u201c\u5982\u679c\u4f60\u770b\u770b\u8fd9\u4e9b\u6570\u5b57\uff0cXilinx\u5728\u5e02\u503c\u65b9\u9762\u4e00\u76f4\u8868\u73b0\u4e0d\u9519\uff0c\u4f46\u5b83\u5df2\u7ecf\u4eceAMD\u4f30\u503c\u7684\u7ea6\u4e09\u5206\u4e4b\u4e8c\u5347\u81f3\u7ea6\u56db\u5206\u4e4b\u4e00\uff0c\u201dRau\u8bf4.\u3002\u201c\u6240\u4ee5\u8d44\u672c\u5316\u6ca1\u6709\u589e\u957f\u5f97\u90a3\u4e48\u5feb\u3002\u4eceFPGA\u5e02\u573a\u7684\u89d2\u5ea6\u6765\u770b\uff0cXilinx\u548cIntel PSG(\u53ef\u7f16\u7a0b\u89e3\u51b3\u65b9\u6848\u96c6\u56e2\uff0c\u524d\u8eab\u4e3aAltera)\u5728\u9ad8\u7aef\u6570\u636e\u4e2d\u5fc3\u90fd\u8868\u73b0\u5f3a\u52b2\u3002\u50cfLattice\u548cMicroChip\u8fd9\u6837\u7684\u516c\u53f8\u4e5f\u5728\u5176\u4ed6\u7ec6\u5206\u5e02\u573a\u53d1\u6325\u4f5c\u7528\u3002\u201c\u3002\n\u6700\u8fd1\uff0c\u80a1\u7968\u5e02\u573a\u7684\u4f30\u503c\u6b63\u5728\u4ea7\u751f\u4e00\u4e9b\u5de8\u5927\u7684\u4ea4\u6613\u3002\u82f1\u4f1f\u8fbe\u62df\u4ee5400\u4ebf\u7f8e\u5143\u6536\u8d2dARM\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002ADI\u516c\u53f8\u5373\u5c06\u4ee5210\u4ebf\u7f8e\u5143\u6536\u8d2dMaxim Integrated\u7684\u4ea4\u6613\u4e5f\u662f\u5982\u6b64\u3002\u53ea\u8981\u5e02\u503c\u4ecd\u7136\u5f88\u9ad8\uff0c\u8fd9\u79cd\u5de8\u578b\u4ea4\u6613\u5c31\u53ef\u80fd\u7ee7\u7eed\u4e0b\u53bb\uff0c\u91cd\u70b9\u662f\u80a1\u7968\u6216\u4e3b\u8981\u662f\u80a1\u7968\u4ea4\u6613\u3002\u4f46\u5f53\u80a1\u5e02\u5f00\u59cb\u8d70\u8f6f\u65f6\uff0c\u5e76\u8d2d\u6d3b\u52a8\u53ef\u80fd\u4f1a\u968f\u4e4b\u800c\u6765\u3002\n\u6539\u53d8\u82af\u7247\u884c\u4e1a\u7684\u76f8\u5173\u4ea4\u6613NVIDIA-ARM\u53ea\u662f\u4e2a\u5f00\u59cb\uff1b\u66f4\u591a\u7684\u6536\u8d2d\u5373\u5c06\u5230\u6765\u3002NVIDIA\u5c06\u4ee5400\u4ebf\u7f8e\u5143\u6536\u8d2dARM\u5206\u6790\uff1a\u63a8\u52a8\u8fd9\u7b14\u4ea4\u6613\u7684\u662f\u4ec0\u4e48\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4ec0\u4e48\u3002\u5f88\u68d2\u7684\u5bf9\u6297\u8d5b\u3002\u4e0d\u826f\u6536\u8d2d\u3001\u5e76\u8d2d\u5f00\u59cb\u52a0\u901f\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6536\u8d2d\u90fd\u4f1a\u594f\u6548\u3002\u4e0b\u4e00\u6ce2\u6574\u56fa\u7ecf\u6d4e\u72b6\u51b5\u90fd\u5728\u90a3\u91cc\u3002\u90a3\u73b0\u5728\u803d\u6401\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u65b0\u7684\u67b6\u6784\u3001\u901f\u5ea6\u66f4\u5feb\u7684\u82af\u7247\u3001\u5927\u89c4\u6a21\u7684\u521b\u65b0\u63a8\u52a8\u4e86\u6027\u80fd\u7684\u6570\u91cf\u7ea7\u63d0\u5347\u3002", "note_en": "AMD signed a definitive agreement to acquire Xilinx for $35 billion in stock, setting the stage for a head-to-head battle against Intel in nearly all major markets. But there\u2019s more to this acquisition than just keeping up with AMD\u2019s arch-competitor.\n To begin with, the acquisition leaves only Lattice, Achronix, and QuickLogic in the pureplay FPGA market, despite a growing need for programmable logic. Intel bought Altera in 2015 for $16.7 billion. Microsemi bought Actel in 2010 for $430 million, and was in turn bought by Microchip in 2018 for about $8.35 billion. In addition, there are a handful of eFPGA vendors, including Flex Logix, Achronix, Menta, and QuickLogic.\n Xilinx always was the reigning giant in the FPGA world, and it will become even more so if this acquisition wins approval. Its programmable chips are used across a variety of market segments, including data centers where AMD is particularly strong.\n Still, the apparent driver here isn\u2019t about AMD wanting to get into the FPGA business. The real motivation appears to be a combination of platforms and programmable chiplets. There are two problems that programmable chips address.\n First, it takes a couple years, on average, to develop a new processor architecture at leading-edge process nodes. During that time algorithms and software may have changed dozens of times. While it\u2019s critical to keep pushing forward on those architectures, some flexibility has to be built in to stay current with software. Much of this can be done in software, but that has significant overhead in terms of performance, power, and security. Programmable logic that is tightly integrated with other processing elements allows the whole system to stay current with changes to existing algorithms, or entirely new algorithms. It\u2019s still not as fast as an ASIC, but it\u2019s much faster than developing a derivative chip at 7nm or 5nm.\n Second, as new markets demand more customized solutions, having programmability options is a fast way to address those markets. AMD and Xilinx both have been working with advanced packaging approaches for the better part of a decade. And going forward, AMD needs Xilinx far more than Xilinx needs AMD. Its customers are demanding extremely high performance and a fair degree of customization, and that will only grow as edge computing begins to take shape over the next decade.\n It helps that Xilinx is highly diversified. It was able to post strong results in fiscal Q1, despite expected slowdowns in consumer and automotive sales due to the ongoing pandemic. The company sells into mil/aero, industrial applications, automotive, broadcast, consumer, data centers, and wired and wireless markets, and in the fiscal year ended March 28, it posted revenues of $3.163 billion, up from $3.059 billion in fiscal 2019 and $2.467 billion in 2018.\n On Xilinx\u2019s side, the deal was simply too good to ignore. But as Shane Rau, analyst at IDC pointed out, the purchase price jumped $5 billion since the negotiations first came to light a month ago. During that time, AMD\u2019s market cap has grown, making an increased asking price more do-able, and Xilinx has been able to negotiate a higher price for its stockholders.\n \u201cIf you look at the numbers, Xilinx has been doing well in terms of market capitalization, but it has gone from about two-thirds of AMD\u2019s valuation to about a quarter,\u201d Rau said. \u201cSo capitalization has not grown as fast. From an FPGA market standpoint, both Xilinx and Intel PSG (Programmable Solutions Group, formerly Altera) are strong in high-end data centers. Companies like Lattice and Microchip play in other market segments.\u201d\n Stock market valuations are generating some enormous deals lately. The proposed $40 billion  acquisition of Arm by Nvidia is a case in point. So is the pending $21 billion acquisition of Maxim Integrated by Analog Devices. As long as market caps remain high, those  kinds of megadeals are likely to continue, with an emphasis on stock or mostly stock transactions. But when the stock market begins to soften, M&amp;A activity likely will follow.\n Related  Deals That Change The Chip Industry Nvidia-Arm is just the beginning; more acquisitions are on the horizon.  Nvidia To Buy Arm For $40B Analysis: What\u2019s driving the deal, and what to watch for.  Good Vs. Bad Acquisitions M&amp;A begins to ramp up, but not all of them will work.  The Next Wave Of Consolidation Economic conditions are all there. So what\u2019s the holdup?  New Architectures, Much Faster Chips Massive innovation to drive orders of magnitude improvements in performance.", "posttime": "2020-10-30 13:17:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amd,fpga,xilinx", "title": "AMD\u4e5f\u60f3\u8981\u4e00\u5bb6FPGA\u516c\u53f8", "title_en": "AMD Wants an FPGA Company, Too", "transed": 1, "url": "https://semiengineering.com/amd-wants-an-fpga-company-too/", "via": "", "real_tags": ["amd", "fpga", "xilinx"]}, {"category": "", "categoryclass": "", "imagename": "79cd381ed86813516edbe1474d5650d7.png", "infoid": 1032235, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8fd0\u884c\u4e00\u4e9b\u5b9e\u9a8c\uff0c\u770b\u770bReaction\u7684\u6e32\u67d3\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5e76\u4e86\u89e3\u5b83\u7684\u4e00\u4e9b\u6709\u4fdd\u8bc1\u7684(\u5267\u900f\uff1a\u6211\u4f1a\u7ecf\u5e38\u4f7f\u7528\u8fd9\u4e2a\u8bcd\ud83d\ude05)\u884c\u4e3a\u3002\n\u8ba9\u6211\u4eec\u4ece\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u5f00\u59cb\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u719f\u6089\u5b83\u4eec\u4e86\u3002\n\u6211\u4eec\u5c06\u4ece\u7531\u4e00\u4e2a\u6839\u7ec4\u4ef6\u548c\u4e24\u4e2a\u5b50\u7ec4\u4ef6\u201cA\u201d\u548c\u201cB\u201d\u7ec4\u6210\u7684\u7b80\u5355\u7ec4\u4ef6\u5c42\u6b21\u7ed3\u6784\u5f00\u59cb\uff1a\n\u6ce8\u610f\uff1a\u8fd9\u662fFirefox DevTools\u7528\u4e8e\u63cf\u8ff0\u4e8b\u4ef6\u5e8f\u5217\u7684\u7b80\u5355\u5f69\u8272\u8f93\u51fa\u3002\u7eff\u8272\u7684\u201c\u5448\u73b0\u201d\u8868\u793a\u7ec4\u4ef6\u88ab\u5448\u73b0(\u5373\uff1a\u8c03\u7528\u4e86\u5b83\u7684\u51fd\u6570\u4f53)\uff0c\u84dd\u8272\u7684\u201cuseEffect\u201d\u8868\u793a\u7ec4\u4ef6\u5185\u90e8\u7684\u6548\u679c\u5df2\u7ecf\u8fd0\u884c\u3002\u6bcf\u6839\u539f\u6728\u90fd\u6709\u4e00\u4e2a\u5f69\u8272\u6807\u7b7e\uff0c\u4ee5\u4fbf\u66f4\u5bb9\u6613\u8ddf\u8e2a\u3002\n\u5982\u60a8\u6240\u89c1\uff0c\u9996\u5148\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ece\u4e0a\u5230\u4e0b\u5448\u73b0\u7684\uff0c\u4ece\u6839\u7ec4\u4ef6\u5f00\u59cb\uff0c\u7136\u540e\u662f\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u3002\u7136\u540e\uff0c\u6548\u679c\u5728\u76f8\u53cd\u7684\u4e00\u4fa7\u8fd0\u884c\uff0c\u4ece\u4e0b\u5230\u4e0a\u3002\n\u56e0\u4e3a\u6211\u4eec\u7684\u7ec4\u4ef6\u76f8\u5bf9\u7b80\u5355\uff0c\u6240\u4ee5\u5b83\u4e0d\u80fd\u7ed9\u6211\u4eec\u63d0\u4f9b\u6e32\u67d3\u5668\u884c\u4e3a\u7684\u5168\u90e8\u60c5\u51b5\u3002\u8ba9\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u6811\u589e\u52a0\u66f4\u591a\u7684\u590d\u6742\u6027\u3002\n\u4e3a\u4e86\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u6e32\u67d3\u8fc7\u7a0b\uff0c\u6211\u4eec\u518d\u5411\u6811\u4e2d\u6dfb\u52a0\u51e0\u4e2a\u8282\u70b9\uff1a\n\u6211\u4eec\u4fdd\u6301\u4e0e\u4ee5\u524d\u76f8\u540c\u7684\u884c\u4e3a\uff1a\u4ece\u4e0a\u5230\u4e0b\u6e32\u67d3\u6811\uff0c\u5e76\u4e14\u8fd8\u904d\u5386\u6bcf\u4e2a\u5b50\u5bf9\u8c61\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u6709\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u60c5\uff1a\u8282\u70b9\u662f\u6309\u987a\u5e8f(\u4ece\u201c\u5de6\u201d\u5230\u201c\u53f3\u201d)\u904d\u5386\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u662fReaction\u5f53\u524d\u5b9e\u73b0\u7684\u884c\u4e3a\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u884c\u4e3a\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u8981\u4f9d\u8d56\u5b83\uff01(\u5b9e\u9645\u4e0a\uff0c\u60a8\u4e3a\u4ec0\u4e48\u9700\u8981\u4f9d\u8d56\u8fd9\u4e2a\uff1f)\n\u5728\u6548\u679c\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u662f\u4ece\u4e0b\u5230\u4e0a\u8fd0\u884c\u7684\u3002\u53ef\u4ee5\u4fdd\u8bc1\u5b50\u7ea7\u7279\u6548\u5c06\u5728\u7236\u7ea7\u7279\u6548\u4e4b\u524d\u8fd0\u884c\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5144\u5f1f\u7ea7\u7279\u6548\u7684\u987a\u5e8f\u4f1a\u4ee5\u4efb\u4f55\u987a\u5e8f\u8fd0\u884c(\u518d\u8bf4\u4e00\u904d\uff0c\u60a8\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd9\u6837\u505a\u5462\uff1f)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5206\u6790\u7684\u6240\u6709\u5185\u5bb9\u90fd\u662f\u7b2c\u4e00\u4e2a\u6e32\u67d3\u884c\u4e3a\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u5728\u91cd\u65b0\u6e32\u67d3\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6548\u679c\u7684\u6e05\u7406\u64cd\u4f5c\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002\n\u8ba9\u6211\u4eec\u4ece\u53f6\u8282\u70b9(\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9)\u5f00\u59cb\u3002\u5355\u51fb\u8282\u70b9\u201c3\u201d\u65f6\uff0c\u5c06\u518d\u6b21\u6e32\u67d3\u8be5\u8282\u70b9\uff0c\u5e76\u4e14\u5728\u4f7f\u7528\u65b0\u7684\u9053\u5177\u548c\u72b6\u6001\u518d\u6b21\u89e6\u53d1\u5b83\u4eec\u4e4b\u524d\uff0c\u5c06\u6e05\u7406\u5176\u5148\u524d\u5173\u8054\u7684\u6548\u679c\uff1a\nReact\u6587\u6863\u8bf4\u201c\u6e05\u7406\u529f\u80fd\u5728\u7ec4\u4ef6\u4eceUI\u4e2d\u79fb\u9664\u4e4b\u524d\u8fd0\u884c\uff0c\u4ee5\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u201d\uff0c\u5728\u91cd\u65b0\u6e32\u67d3\u65f6\uff0c\u4efb\u4f55\u201c\u524d\u4e00\u4e2a\u6548\u679c\u5728\u6267\u884c\u4e0b\u4e00\u4e2a\u6548\u679c\u4e4b\u524d\u90fd\u4f1a\u88ab\u6e05\u9664\u201d\u3002\n\u5f53\u60a8\u5355\u51fb\u5177\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u65f6\uff0c\u5b83\u4f1a\u4e3a\u6bcf\u4e2a\u5b50\u8282\u70b9\u8c03\u7528Render\u65b9\u6cd5\uff0c\u7136\u540e\u7ee7\u7eed\u6e05\u7406\u4ee5\u524d\u7684\u6548\u679c\uff0c\u5e76\u5728\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u57fa\u7840\u4e0a\u8fd0\u884c\u65b0\u7684\u6548\u679c\uff1a\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u91cd\u8981(\u4e14\u6709\u4fdd\u8bc1\u7684)\u884c\u4e3a\u662f\uff0cReaction\u5728\u7236\u7ea7\u7684\u6548\u679c\u548c\u6e05\u7406\u4e4b\u524d\u8fd0\u884c\u6240\u6709\u5b50\u7ea7\u7684\u6548\u679c\u548c\u6e05\u7406\u3002\n\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\uff0c\u5728Reaction\u5448\u73b0\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e9b\u4e00\u81f4\u7684\u884c\u4e3a\u3002\u4f46\u662f\uff0c\u5f53\u524d\u7684\u5b9e\u73b0\u4e0d\u80fd\u4fdd\u8bc1\u6709\u5173\u672a\u6765\u884c\u4e3a\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u53ea\u6709\u51e0\u79cd\u8bb0\u5f55\u5728\u6848\u7684\u62c5\u4fdd\u884c\u4e3a\u53ef\u4ee5\u5bf9\u62c5\u4fdd\u505a\u51fa\u53cd\u5e94\uff0c\u60a8\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u884c\u4e3a\uff1a\n\u5f53\u7ec4\u4ef6\u66f4\u65b0\u65f6\uff0c\u5728\u5e94\u7528\u65b0\u6548\u679c\u4e4b\u524d\uff0c\u6240\u6709\u4ee5\u524d\u7684\u6548\u679c\u90fd\u4f1a\u88ab\u6e05\u9664\u3002\n\u6211\u60f3\u6f84\u6e05\u7684\u662f\uff0c\u6ca1\u6709\u4fdd\u8bc1\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4e00\u5b9a\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8ba8\u8bba\u548c\u51b3\u5b9a\u7684\u3002\u53ef\u4ee5\u5728\u5c06\u6765\u66f4\u6539\uff0c\u4f46\u76ee\u524d\uff0c\u60a8\u7684\u7ec4\u4ef6\u5e94\u8be5\u53ea\u5047\u8bbe\u6709\u4fdd\u8bc1\u7684\u884c\u4e3a\u3002\u4efb\u4f55\u5f53\u524d\u884c\u4e3a\u90fd\u53ef\u4ee5\u5728\u672a\u6765\u7684Reaction\u7248\u672c\u4e2d\u66f4\u6539\uff0c\u800c\u65e0\u9700\u4e8b\u5148\u901a\u77e5\u3002\n\u4e0d\u4fdd\u8bc1\u67d0\u4e9b\u884c\u4e3a\u7684\u597d\u5904\u662f\u4f60\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u53cd\u5e94\u7ea4\u7ef4\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u7b80\u800c\u8a00\u4e4b\uff0cReaction\u7ea4\u7a0b\u662f\u4e00\u4e2a\u5185\u90e8\u5b9e\u73b0(\u56e0\u6b64\uff0c\u60a8\u4e0d\u9700\u8981\u5b66\u4e60\u4f7f\u7528REACT)\uff0c\u5b83\u5141\u8bb8\u6682\u505c\u5de5\u4f5c\u5e76\u7a0d\u540e\u7ee7\u7eed\uff0c\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u5de5\u4f5c\u5206\u914d\u4f18\u5148\u7ea7\uff0c\u5e76\u5728\u4e0d\u518d\u9700\u8981\u5de5\u4f5c\u65f6\u4e2d\u6b62\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5de5\u4f5c\u9700\u8981\u5b8c\u6210\uff0c\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u4f8b\u5982\uff1a\n\u5728\u7ecf\u5178Reaction\u7684\u6e32\u67d3\u5668\u4e2d\uff0c\u4e0d\u53ef\u80fd\u6267\u884c\u6b64\u7c7b\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u4e0d\u4fdd\u8bc1\u6e32\u67d3\u6309\u987a\u5e8f\u8fdb\u884c\uff0c\u8fd9\u662f\u5b8c\u5168\u53ef\u80fd\u7684\uff0c\u800c\u4e14\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u6e32\u67d3\u6bd4\u6ca1\u6709\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u5bb9\u6613\u3002\n\u6211\u4eec\u7528Reaction\u505a\u4e86\u771f\u5b9e\u7684\u5b9e\u9a8c\uff0c\u4e86\u89e3\u4e86\u5b83\u662f\u5982\u4f55\u5728\u5185\u90e8\u5904\u7406\u6e32\u67d3\u7684\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u7248\u672c\u5f00\u59cb\uff0c\u7136\u540e\u9010\u6e10\u589e\u52a0\u590d\u6742\u6027\uff0c\u4ee5\u4e86\u89e3\u6e32\u67d3\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u6211\u4eec\u80fd\u591f\u53d1\u73b0Reaction\u505a\u4ec0\u4e48\u548c\u4e0d\u505a\u4ec0\u4e48\u4fdd\u8bc1\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u5728\u5c06\u6765\u9700\u8981\u7684\u65f6\u5019\u56de\u5230\u8fd9\u91cc\uff1a-)\u4f46\u662f\uff0c\u6211\u8ba4\u4e3a\u5927\u591a\u6570\u65f6\u5019\u60a8\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728Reaction\u4e2d\u7f16\u5199\u4ee3\u7801\uff0c\u4f46\u6211\u8ba4\u4e3a\u4e86\u89e3\u8fd9\u4e9b\u5c0f\u7ec6\u8282\u662f\u5f88\u6709\u8da3\u7684\uff01-)\u7136\u800c\uff0c\u6211\u8ba4\u4e3a\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u60a8\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728Reaction\u4e2d\u7f16\u5199\u4ee3\u7801\uff0c\u4f46\u662f\u6211\u8ba4\u4e3a\u4e86\u89e3\u8fd9\u4e9b\u5c0f\u7ec6\u8282\u662f\u5f88\u6709\u8da3\u7684\uff01\n\u5982\u679c\u60a8\u60f3(\u771f\u6b63\u5730)\u6df1\u5165\u4e86\u89e3Reaction\u7684\u5448\u73b0\u884c\u4e3a\uff0c\u8bf7\u67e5\u770bMark Erikson\u7684\u6587\u7ae0A(\u5927\u90e8\u5206)Complete Guide to Reaction\u5448\u73b0\u884c\u4e3a\u3002\n\u5982\u679c\u4f60\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u5728\u63a8\u7279\u4e0a\u8054\u7cfb\u6211\uff0c\u6216\u8005\u7ed9\u6211\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u5f88\u4e50\u610f\u4e3a\u4f60\u505a\u4efb\u4f55\u4e8b\uff01", "note_en": "In this post we\u2019ll run a few experiments to see how React\u2019s renderer works and gain a understanding of some of its guaranteed ( spoiler: I\u2019ll use this word a lot \ud83d\ude05) behaviors.\n    Let\u2019s start with our first experiment so you can get familiar with them.\n We\u2019ll start with simple component hierarchy consisting of a root component and two children components \u201cA\u201d and \u201cB\u201d:\n    Note: This  is a simple colored output from   Firefox DevTools  used to describe a sequence of events. A green \u201cRendered\u201d means that a component is rendered (i.e: it\u2019s function body is called) and a blue \u201cuseEffect\u201d means that an effect inside a component was run. Every log is accompanied with a colored label to make it easier to follow along.\n As you can see, first, every component is rendered from top to bottom starting from the root component followed by each children. Then, effects are run on the opposite side, from bottom to top.\n Since our components is relatively simple, it doesn\u2019t give us the whole picture of renderer\u2019s behavior. Let\u2019s add more complexity to our tree.\n  To gain more insight about the rendering process, let\u2019s add a few more nodes to our tree:\n    We keep the same behavior than before: tree is rendered from top to bottom and each child is traversed too. As you can see, there\u2019s an interesting thing: nodes are traversed in sequence (from \u201cleft\u201d to \u201cright\u201d). However,  this is behavior from React\u2019s current implementation and   not guaranteed behavior , so don\u2019t rely on this by any means! (Actually, why you would need to rely on this?)\n On the effects side, we can see that they\u2019re run bottom to top.  It\u2019s guaranteed that children effects will run before the ones from the parent but sibling effects\u2019 order aren\u2019t guaranteed to run in any order (Again, why would you need that?).\n  Until now, everything we analyzed was the first render behavior. We haven\u2019t tested what happens on re-renders and how effects\u2019 cleanups behave.\n  Let\u2019s start with a leaf node (a node without childrens). When you click the node \u201c3\u201d, it is rendered again and its previous associated effects are cleanup before triggering them again with the new props and state:\n  React docs says that \u201cThe clean-up function runs before the component is removed from the UI to prevent memory leaks\u201d and that on re-renders, any \u201cprevious effect is cleaned up before executing the next effect\u201d.\n When you click on a node that has childrens, it calls the render method for each one of them and then proceeds to cleanup previous effects and run the new ones on a per-component basis:\n  An important (and guaranteed) behavior to notice is that  React runs all childrens\u2019 effects and cleanups before the ones from the parent.\n  As we saw before, there are some consistent behavior in the React rendering process. However, the current implementation doesn\u2019t guarantee anything about future behaviors. There are only a few documented guaranteed behaviors that React guarantees and that you can take advantage of:\n All previous effects are cleaned up before apply the new ones when a component updates.\n   I want to be clear that not guaranteed doesn\u2019t mean that it was necessarily discussed and decided in this way. In can change in the future, but for now, your components should only make assumptions about guaranteed behavior. Any current behavior can change in future React versions without previous notice.\n A good thing about not guaranteed certain behaviors is that you have more flexibility.  React Fiber is a great example about this. In a very few words, React Fiber  is an internal implementation (thus, you don\u2019t need to learn it to use React) that allows among other things to pause work and continue it later, assign priority to different types of work, and abort work if it\u2019s no longer needed. This is very useful if you have different types of work that needs to be done. For example:\n  In the classic React\u2019s renderer, it\u2019s not possible to do this kind of things. However, by not guaranteeing that renders happen in sequence, this is completely possible and way easier to do it in a backwards compatible way than without it.\n  We make  real experiments with React and learned how it internally handles rendering. We started with a simple version and increase complexity gradually to understand how rendering works.\n We were able to discover what React does and doesn\u2019t guarantee, so you can get back to this in case you need it in the future :-) However, I don\u2019t think most of the time you need to be aware of this and so, it isn\u2019t needed to code in React, but I think it\u2019s fun to know this little details!\n If you want to go (really) deep on React\u2019s rendering behavior, check Mark Erikson\u2019s article  A (Mostly) Complete Guide to React Rendering Behavior.\n If you have any questions, you can reach out to me on  Twitter or send me an  email. I\u2019d be glad to help you with anything!", "posttime": "2020-10-30 12:58:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "reaction,react", "title": "\u6211\u4f7f\u7528Reaction\u7684\u6e32\u67d3\u5668\u8fdb\u884c\u4e86\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u4ee5\u5206\u6790\u5176\u6e32\u67d3\u884c\u4e3a", "title_en": "I did some tests with React's renderer to analyze its rendering behavior", "transed": 1, "url": "https://gbenussi.medium.com/having-fun-with-reacts-renderer-be15b39c4556", "via": "", "real_tags": ["reaction", "react"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032234, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "10\u670825\u65e5\uff0c\u6709\u5f00\u53d1\u8005\u53d1\u5e16\u79f0\uff0cSM2\u56fd\u5bc6\u7b97\u6cd5\u7ec8\u4e8e\u88abLinux\u5185\u6838\u793e\u533a\u63a5\u53d7\u3002\u4f5c\u8005\u58f0\u660eSM2\u8865\u4e01\u5df2\u7ecf\u66f4\u65b0\u5230\u7248\u672cv7\u3002\u8fd9\u4e2a\u7248\u672c\u7684\u8865\u4e01\u6700\u7ec8\u88ab\u793e\u533a\u63a5\u53d7\u3002\u5b83\u5df2\u7ecf\u5408\u5e76\u5230Linux\u4e3b\u7ebf\u76845.10-RC1\u4e2d\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u4e8b\u60c5\uff0c\u5b83\u5c06\u57285.10\u5185\u6838\u7248\u672c\u4e2d\u6b63\u5f0f\u53d1\u5e03\u3002\nNational Secret\u662fNational Commercial Encryption\u7684\u7f29\u5199\u3002\u56fd\u5bb6\u52a0\u5bc6\u7ba1\u7406\u5c40\u5236\u5b9a\u4e86\u7b97\u6cd5\u6807\u51c6\uff0c\u4e5f\u5236\u5b9a\u4e86\u5927\u91cf\u7684\u4ea7\u54c1\u548c\u63a5\u53e3\u89c4\u8303\u548c\u5e94\u7528\u573a\u666f\u3002\u81ea2012\u5e74\u4ee5\u6765\uff0c\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u9646\u7eed\u4ee5\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u5bc6\u7801\u884c\u4e1a\u6807\u51c6\u7684\u5f62\u5f0f\u53d1\u5e03\u4e86SM2/SM3/SM4\u7b49\u5bc6\u7801\u7b97\u6cd5\u6807\u51c6\u53ca\u5176\u5e94\u7528\u89c4\u8303\u3002\u5176\u4e2d\uff0c&lt;foreign language=\u201cEnglish\u201d&gt;SM&lt;/foreign&gt;\u4ee3\u8868&lt;foreign language=\u201cEnglish\u201d&gt;\u5546\u4e1a\u79d8\u5bc6&lt;/foreign&gt;\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u6d89\u53ca\u56fd\u5bb6\u79d8\u5bc6\u7684\u5546\u7528\u5bc6\u7801\u6280\u672f\u3002\n\u6839\u636e\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u7531\u4e8e\u65e0\u7ebf\u5c40\u57df\u7f51\u6807\u51c6\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5f53\u524d\u7684Linux\u5185\u6838\u5df2\u7ecf\u5f88\u597d\u5730\u652f\u6301SM3\u548cSM4\u7b97\u6cd5\u3002\u4f46\u662f\uff0cSM2\u7b97\u6cd5\u548c\u56fd\u5bc6\u8bc1\u4e66\u957f\u671f\u4e0d\u88ab\u652f\u6301\uff0c\u4e0d\u53ef\u80fd\u57fa\u4e8e\u56fd\u5bc6\u5728\u5185\u6838\u4e2d\u5efa\u7acb\u5168\u6808\u4fe1\u4efb\u548c\u5b8c\u6574\u6027\u9a8c\u8bc1\u3002\u56e0\u6b64\uff0c\u5728\u5185\u6838\u4e2d\u652f\u6301\u8be5\u7cfb\u7edf\u5df2\u6210\u4e3a\u5f53\u52a1\u4e4b\u6025\u3002\n\u5185\u6838\u793e\u533a\u82b1\u4e867\u8f6e\u65f6\u95f4\u624d\u63a5\u53d7SM2\u3002\u6700\u521d\u7684\u8003\u8651\u662f\u4eceOpenSSL\u8fc1\u79fb\uff0c\u4f46\u7531\u4e8e\u5de8\u5927\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u9700\u8981\u79fb\u690dOpenSSL\u4f53\u7cfb\u7ed3\u6784\u548c\u57fa\u7840\u8bbe\u65bd\u4ee3\u7801\u3002\u7ecf\u8fc7\u51e0\u8f6e\u7684\u8ba8\u8bba\u548c\u6d4b\u8bd5\uff0c\u6211\u53d1\u73b0\u73b0\u6709\u7684libgcrypt\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u692d\u5706\u66f2\u7ebf\u57fa\u672c\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u9996\u5148\u5c1d\u8bd5\u5728libgcrypt\u4e2d\u5b9e\u73b0SM2\uff0c\u6700\u540eSM2\u7b97\u6cd5\u88ab\u793e\u533a\u63a5\u53d7\u4e3aECC\u7684\u4e00\u4e2a\u5b50\u7b97\u6cd5\u3002\u6b64\u540e\uff0cSM2\u9010\u6e10\u88ab\u5185\u6838\u793e\u533a\u63a5\u53d7\u3002\n\u76ee\u524d\uff0clibgcrypt\u5df2\u5168\u9762\u652f\u6301\u56fd\u5bc6\u7b97\u6cd5SM2/3/4\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u5c06\u5728\u4e0b\u4e00\u7248\u672c1.9.0\u4e2d\u6b63\u5f0f\u53d1\u5e03\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4f5c\u4e3aIMA\u5b8c\u6574\u6027\u7b7e\u540d\u7684\u7528\u6237\u6a21\u5f0f\u5de5\u5177\uff0cima-evm-utills&#39\uff1b\u5bf9\u56fd\u5bb6\u673a\u5bc6\u7684\u652f\u6301\u7387\u5e76\u6ca1\u6709\u4e0b\u964d\u3002\u5355\u51fb\u4ee5\u67e5\u770b\u76f8\u5173\u63d0\u4ea4\u3002\n\u4e3a\u4e86\u652f\u6301\u56fd\u5bb6\u79d8\u5bc6\u8bc1\u4e66\u9a8c\u8bc1\uff0cSM2\u8981\u4e48\u4e0d\u7f16\u8bd1\uff0c\u8981\u4e48\u5fc5\u987b\u5185\u7f6e\u7f16\u8bd1\uff0c\u4e0d\u652f\u6301\u7f16\u8bd1\u6210\u6a21\u5757\u3002\u5f53\u7136\uff0cSM2\u4f5c\u4e3a\u4e00\u79cd\u975e\u5bf9\u79f0\u7b97\u6cd5\uff0c\u53ea\u5bf9\u57fa\u4e8e\u56fd\u5bb6\u673a\u5bc6\u7684HASH\u6216IMA\u9a8c\u8bc1\u8fdb\u884c\u7b7e\u540d\uff0c\u6ca1\u6709\u8fd9\u6837\u7684\u9650\u5236\u3002\nIMA\u7b7e\u540d\u5de5\u5177ima-evm-utils\u548c\u5185\u6838\u7528\u6765\u8ba1\u7b97\u6587\u4ef6\u7684SM3\u6563\u5217\u7684\u56fd\u5bb6\u79d8\u5bc6\u7b97\u6cd5\u6ca1\u6709\u6dfb\u52a0Za\u3002\u8fd9\u548c\u8bf4\u660e\u4e66\u6709\u4e00\u70b9\u4e0d\u540c\u3002", "note_en": "On October 25, a developer posted that the SM2 national secret algorithm was finally accepted by the Linux kernel community.  The author stated that the SM2 patch has been updated to version v7. This version of the patch was finally accepted by the community. It has been    merged into the 5.10-rc1 of the Linux mainline   . If nothing   else  , it will be officially released in the 5.10 kernel version.\n  National Secret is the abbreviation of National Commercial Encryption. The National Encryption Administration Bureau formulates algorithm standards, and it also formulates a large number of product and interface specifications and application scenarios.  Since 2012, the State Cryptography Administration has successively published SM2/SM3/SM4 and other cryptographic algorithm standards and their application specifications in the form of the &#34;People&#39;s Republic of China Password Industry Standards&#34;.  Among them, &#34;SM&#34; stands for &#34;commercial secret&#34;, which is a cryptographic technology used for commercial use that does not involve state secrets.\n  According to the author, the current Linux kernel has well supported the SM3 and SM4 algorithms, thanks to the widespread use of wireless LAN standards.  However, the SM2 algorithm and the national secret certificate have not been supported for a long time, and it is impossible to establish full-stack trust and integrity verification in the kernel based on the national secret. Therefore, it has become urgent to support this system in the kernel.\n  It took 7 rounds for the kernel community to accept SM2.  The initial consideration was to migrate from openssl, but the openssl architecture and infrastructure code needed to be ported because of the huge workload.  After several rounds of discussion and testing, I found that the existing libgcrypt already has a complete elliptic curve basic algorithm, so I tried to implement SM2 in libgcrypt first, and finally the SM2 algorithm was accepted by the community as a sub-algorithm of ECC.  After that, SM2 was gradually accepted by the kernel community.\n  At present, libgcrypt has fully supported the national secret algorithm SM2/3/4, and these implementations will be officially released in the next version 1.9.0.  At the same time, as a user-mode tool for IMA integrity signatures, ima-evm-utils&#39; support for national secrets has not fallen.  Click to view    related submissions   .\n    To support national secret certificate verification, SM2 either does not compile, or it must be built-in compilation, and does not support compilation into modules.  Of course, SM2, as an asymmetric algorithm, only signs a hash or IMA verification based on national secrets, and there is no such limitation.\n  The IMA signature tool ima-evm-utils and the national secret algorithm used by the kernel to calculate the SM3 hash of the file do not add Za. This is a little difference from the specification.", "posttime": "2020-10-30 12:33:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u7b97\u6cd5,\u5185\u6838,chinese", "title": "Linux\u5185\u6838\u63a5\u53d7SM2(\u4e2d\u6587)\u56fd\u5bb6\u79d8\u5bc6\u7b97\u6cd5", "title_en": "SM2 (Chinese) National Secret algorithm is accepted into Linux kernel", "transed": 1, "url": "https://www.codetd.com/en/article/12031985", "via": "", "real_tags": ["linux", "\u7b97\u6cd5", "\u5185\u6838", "chinese"]}, {"category": "", "categoryclass": "", "imagename": "a5822ceb9c7a137778b0ef9e90498de7.png", "infoid": 1032232, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u62fe\u8272\u5668\u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u3001\u5feb\u901f\u5730\u4ece\u5c4f\u5e55\u4e0a\u9009\u53d6\u4efb\u4f55\u989c\u8272\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230\u526a\u8d34\u677f\u4e2d\u3002\n\u8981\u5f00\u59cb\u4f7f\u7528\u62fe\u8272\u5668\uff0c\u60a8\u9700\u8981\u5148\u5728PowerToys\u8bbe\u7f6e(\u62fe\u8272\u5668\u90e8\u5206)\u4e2d\u542f\u7528\u8be5\u5b9e\u7528\u7a0b\u5e8f\u3002\u542f\u7528\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6309\u6fc0\u6d3b\u5feb\u6377\u952eWin+Shift+C\u6765\u542f\u52a8\u62fe\u8272\u5668(\u8bf7\u6ce8\u610f\uff0c\u6b64\u5feb\u6377\u65b9\u5f0f\u53ef\u4ee5\u5728\u8bbe\u7f6e\u5bf9\u8bdd\u6846\u4e2d\u66f4\u6539)\u3002\n\u5c06\u9f20\u6807\u5149\u6807\u60ac\u505c\u5728\u8981\u590d\u5236\u7684\u989c\u8272\u4e0a\u65f6\uff0c\u6309\u9f20\u6807\u5de6\u952e\u3002\u5982\u679c\u8981\u66f4\u8be6\u7ec6\u5730\u67e5\u770b\u5149\u6807\u5468\u56f4\u7684\u533a\u57df\uff0c\u8bf7\u5411\u4e0a\u6eda\u52a8\u4ee5\u653e\u5927\u3002\u590d\u5236\u7684\u989c\u8272\u5c06\u4ee5\u8bbe\u7f6e\u4e2d\u914d\u7f6e\u7684\u683c\u5f0f(\u9ed8\u8ba4\u4e3a\u5341\u516d\u8fdb\u5236)\u5b58\u50a8\u5728\u526a\u8d34\u677f\u4e2d", "note_en": "Color Picker will let you easily and quickly pick any color from your screen and copy it into the clipboard.\n   To start using Color Picker, you need to enable the utility in PowerToys settings (Color Picker section) first.Once you have enabled it, you can launch Color Picker by pressing the activation shortcut  Win+ Shift+ C (note that this shortcut can be changed in the settings dialog)\n When you hover you mouse cursor over the color you would like to copy, press the left mouse button. If you want to see the area around your cursor in a more detail, scroll up to zoom in.Copied color will be stored in your clipboard in the format that is configured in the settings (HEX by default)", "posttime": "2020-10-30 12:29:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "microsoft,powertoys,\u62fe\u8272\u5668", "title": "Microsoft PowerToys-\u62fe\u8272\u5668", "title_en": "Microsoft PowerToys \u2013 Color Picker", "transed": 1, "url": "https://github.com/microsoft/PowerToys/wiki/ColorPicker-Overview", "via": "", "real_tags": ["microsoft", "powertoys", "\u62fe\u8272\u5668"]}, {"category": "", "categoryclass": "", "imagename": "7bc591502507dff65f9a0b11cd23fd5f.jpeg", "infoid": 1032231, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PGSync\u662f\u4e00\u4e2a\u5c06Postgres\u4e2d\u7684\u6570\u636e\u6beb\u4e0d\u8d39\u529b\u5730\u540c\u6b65\u5230Elasticsearch\u7684\u4e2d\u95f4\u4ef6\uff0c\u5b83\u5141\u8bb8\u60a8\u5c06Postgres\u4f5c\u4e3a\u60a8\u7684\u771f\u5b9e\u6e90\uff0c\u5e76\u5728Elasticsearch\u4e2d\u521b\u5efa\u7ed3\u6784\u5316\u7684\u975e\u89c4\u8303\u5316\u6587\u6863\u3002\n\u5bf9\u5d4c\u5957\u5b9e\u4f53\u7684\u66f4\u6539\u4f1a\u4f20\u64ad\u5230Elasticsearch\u3002PGSync\u7684\u9ad8\u7ea7\u67e5\u8be2\u6784\u5efa\u5668\u968f\u540e\u4f1a\u6839\u636e\u60a8\u7684\u67b6\u6784\u52a8\u6001\u751f\u6210\u4f18\u5316\u7684SQL\u67e5\u8be2\u3002PGSync\u7684\u54a8\u8be2\u6a21\u578b\u5141\u8bb8\u60a8\u5feb\u901f\u79fb\u52a8\u548c\u8f6c\u6362\u5927\u91cf\u6570\u636e\uff0c\u540c\u65f6\u4fdd\u6301\u5173\u7cfb\u5b8c\u6574\u6027\u3002\n\u53ea\u9700\u7528JSON\u63cf\u8ff0\u60a8\u7684\u6587\u6863\u7ed3\u6784\u6216\u6a21\u5f0f\uff0cPGSync\u5c06\u6301\u7eed\u6355\u83b7\u6570\u636e\u4e2d\u7684\u66f4\u6539\u5e76\u5c06\u5176\u52a0\u8f7d\u5230Elasticsearch\u4e2d\uff0c\u800c\u65e0\u9700\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u3002PGSync\u5c06\u60a8\u7684\u5173\u7cfb\u6570\u636e\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6587\u6863\u683c\u5f0f\u3002\n\u5b83\u5141\u8bb8\u60a8\u76f4\u63a5\u4ecePostgres\u5229\u7528Elasticsearch\u7684\u8868\u8fbe\u80fd\u529b\u548c\u53ef\u6269\u5c55\u6027\u3002\u60a8\u4e0d\u5fc5\u7f16\u5199\u590d\u6742\u7684\u67e5\u8be2\u548c\u8f6c\u6362\u6d41\u6c34\u7ebf\u3002PGSync\u662f\u8f7b\u91cf\u7ea7\u3001\u7075\u6d3b\u548c\u5feb\u901f\u7684\u3002\nElasticSearch\u66f4\u9002\u5408\u4f5c\u4e3a\u6b21\u8981\u7684\u975e\u89c4\u8303\u5316\u641c\u7d22\u5f15\u64ce\uff0c\u4ee5\u914d\u5408\u66f4\u4f20\u7edf\u7684\u89c4\u8303\u5316\u6570\u636e\u5b58\u50a8\u3002\u6b64\u5916\uff0c\u60a8\u4e0d\u5e94\u8be5\u5c06\u4e3b\u8981\u6570\u636e\u5b58\u50a8\u5728Elasticsearch\u4e2d\u3002\n\u90a3\u4e48\uff0c\u9996\u5148\u5982\u4f55\u5c06\u6570\u636e\u653e\u5230Elasticsearch\u4e2d\u5462\uff1fLogstash\u548cKafka\u7b49\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u5de5\u7a0b\u548c\u5f00\u53d1\u5de5\u4f5c\u3002\n\u63d0\u53d6\u3001\u8f6c\u6362\u3001\u52a0\u8f7d\u548c\u53d8\u66f4\u6570\u636e\u6355\u83b7\u5de5\u5177\u53ef\u80fd\u5f88\u590d\u6742\uff0c\u5e76\u4e14\u9700\u8981\u6602\u8d35\u7684\u5de5\u7a0b\u5de5\u4f5c\u3002\n\u5728\u8f83\u9ad8\u7ea7\u522b\u4e0a\uff0c\u60a8\u5728Postgres\u6570\u636e\u5e93\u4e2d\u6709\u6570\u636e\uff0c\u5e76\u4e14\u5e0c\u671b\u5c06\u5176\u955c\u50cf\u5230Elasticsearch\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u6570\u636e\u7684\u6bcf\u4e2a\u66f4\u6539(INSERT\u3001UPDATE\u3001DELETE\u548cTRUNCATE\u8bed\u53e5)\u90fd\u9700\u8981\u590d\u5236\u5230Elasticsearch\u3002\u53ea\u9700\u5728\u66f4\u65b0\u6570\u636e\u5e93\u540e\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u5c06\u6570\u636e\u590d\u5236\u5230Elasticsearch(\u6216\u6240\u8c13\u7684\u53cc\u91cd\u5199\u5165)\u3002\u7f16\u5199\u8de8\u8d8a\u591a\u4e2a\u8868\u5e76\u6d89\u53ca\u591a\u4e2a\u5173\u7cfb\u7684SQL\u67e5\u8be2\u5f88\u96be\u7f16\u5199\u3002\u68c0\u6d4b\u5d4c\u5957\u6587\u6863\u4e2d\u7684\u66f4\u6539\u4e5f\u53ef\u80fd\u76f8\u5f53\u56f0\u96be\u3002\u5f53\u7136\uff0c\u5982\u679c\u60a8\u7684\u6570\u636e\u4ece\u672a\u66f4\u6539\uff0c\u5219\u53ea\u9700\u53ca\u65f6\u62cd\u6444\u5feb\u7167\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u6b21\u6027\u64cd\u4f5c\u52a0\u8f7d\u5230Elasticsearch\u5373\u53ef\u3002\n\u60a8\u5728Postgres\u7b49\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u5df2\u6709\u6570\u636e\uff0c\u5e76\u4e14\u9700\u8981\u4e00\u4e2a\u8f85\u52a9NoSQL\u6570\u636e\u5e93(\u5982Elasticsearch)\u6765\u6267\u884c\u57fa\u4e8e\u6587\u672c\u7684\u67e5\u8be2\u6216\u81ea\u52a8\u5b8c\u6210\u67e5\u8be2\uff0c\u4ee5\u955c\u50cf\u73b0\u6709\u6570\u636e\uff0c\u800c\u65e0\u9700\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u53cc\u91cd\u5199\u5165\u3002\n\u60a8\u5e0c\u671b\u4fdd\u6301\u73b0\u6709\u6570\u636e\u4e0d\u53d7\u5f71\u54cd\uff0c\u540c\u65f6\u901a\u8fc7\u516c\u5f00\u6570\u636e\u89c6\u56fe\u800c\u4e0d\u5f71\u54cd\u5173\u7cfb\u6570\u636e\u7684\u5b89\u5168\u6027\u6765\u5229\u7528Elasticsearch\u7684\u641c\u7d22\u529f\u80fd\u3002\n\u6216\u8005\u60a8\u53ea\u662f\u60f3\u516c\u5f00\u5173\u7cfb\u6570\u636e\u7684\u89c6\u56fe\u4ee5\u7528\u4e8e\u641c\u7d22\u3002\nPGSync\u662f\u7528Python(\u652f\u63013.6\u7248\u4ee5\u4e0a)\u7f16\u5199\u7684\uff0c\u5806\u6808\u7531\uff1aredis\u3001Elasticsearch\u3001postgres\u548cSQlAlChemy\u7ec4\u6210\u3002\nPGSync\u5229\u7528Postgres(PostgreSQL 9.4\u4e2d\u5f15\u5165\u7684)\u7684\u903b\u8f91\u89e3\u7801\u529f\u80fd\u6765\u6355\u83b7\u8fde\u7eed\u7684\u66f4\u6539\u4e8b\u4ef6\u6d41\u3002\u9700\u8981\u5728Postgres\u914d\u7f6e\u6587\u4ef6\u4e2d\u901a\u8fc7\u5728postgresql.conf\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u6765\u542f\u7528\u6b64\u529f\u80fd\uff1a\nPGSync\u901a\u8fc7\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u8868\u521b\u5efa\u89e6\u53d1\u5668\u6765\u5904\u7406\u901a\u77e5\u4e8b\u4ef6\uff0c\u4ece\u800c\u5728\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u4e2d\u8fd0\u884c\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u66f4\u6539PGSync\u67b6\u6784\u914d\u7f6e\u7684\u7ed3\u6784\uff0c\u5219\u9700\u8981\u91cd\u5efaElasticsearch\u6307\u793a\u5668\u3002\u6211\u4eec\u8ba1\u5212\u652f\u6301\u96f6\u505c\u673a\u8fc1\u79fb\u4ee5\u7b80\u5316\u6b64\u8fc7\u7a0b\u3002\n\u542f\u7528\u903b\u8f91\u89e3\u7801\u3002\u60a8\u8fd8\u9700\u8981\u5728postgresql.conf\u4e2d\u81f3\u5c11\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u6570\n\u4f7f\u7528pgsync--config schema.json\u6216\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0bpgsync--config schema.json-d\u8fd0\u884c\u8be5\u7a0b\u5e8f\u3002\nElasticsearch\u4e2d\u7684\u4e8b\u52a1\u4e00\u81f4\u8f93\u51fa\u3002\u8fd9\u610f\u5473\u7740\uff1a\u5199\u5165\u53ea\u6709\u5728\u63d0\u4ea4\u5230\u6570\u636e\u5e93\u65f6\u624d\u4f1a\u51fa\u73b0\uff0c\u63d2\u5165\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u7684\u987a\u5e8f\u4e0e\u63d0\u4ea4\u65f6\u7684\u987a\u5e8f\u76f8\u540c(\u4e0e\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u76f8\u53cd)\u3002\n\u5bb9\u9519\uff1a\u5373\u4f7f\u8fdb\u7a0b\u5d29\u6e83\u6216\u7f51\u7edc\u4e2d\u65ad\u7b49\uff0c\u4e5f\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u4e0a\u4e00\u4e2a\u68c0\u67e5\u70b9\u6062\u590d\u3002\n\u652f\u6301\u4efb\u610f\u6df1\u5ea6\u7684\u5d4c\u5957\u5b9e\u4f53\uff0c\u5373\u5177\u6709\u957f\u5173\u7cfb\u4f9d\u8d56\u94fe\u7684\u8868\u3002\n\u652f\u6301Postgres JSON\u6570\u636e\u5b57\u6bb5\u3002\u8fd9\u610f\u5473\u7740\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u636e\u5e93\u8868\u4e2d\u7684JSON\u5b57\u6bb5\u63d0\u53d6\u4e3a\u7ed3\u679c\u6587\u6863\u4e2d\u7684\u5355\u72ec\u5b57\u6bb5\u3002\n\u4f7f\u7528PGSync\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5b9a\u4e49\u8fd9\u4e2aJSON\u6a21\u5f0f\uff0c\u5176\u4e2dBOOK\u8868\u662f\u900f\u89c6\u8868\uff0c\u900f\u89c6\u8868\u8868\u793a\u6587\u6863\u7684\u6839\u3002\n{&#34\uff1b\u8868&#34\uff1b\uff1a&#34\uff1b\u4e66&#34\uff1b\uff0c&#34\uff1b\u5217&#34\uff1b\uff1a[&#34\uff1bISBN&#34\uff1b\uff0c&#34\uff1b\u6807\u9898&#34\uff1b\uff0c&#34\uff1b\u63cf\u8ff0&#34\uff1b]\uff0c&#34\uff1b\u513f\u7ae5&#34\uff1b\uff1a[{&#34\uff1b\u8868&#34\uff1b\uff1a&#34\uff1b\u4f5c\u8005&#34\uff1b\uff0c&#34\uff1b\u5217&#34\uff1b\uff1a[&#34\uff1b\u540d\u79f0&#34\uff1b]}]}\u3002\n[{&#34\uff1bISBN&#34\uff1b\uff1a&#34\uff1b9785811243570&#34\uff1b\uff0c&#34\uff1b\u6807\u9898&#34\uff1b\uff1a&#34\uff1b\u67e5\u7406\u548c\u5de7\u514b\u529b\u5de5\u5382&#34\uff1b\uff0c&#34\uff1b\u63cf\u8ff0&#34\uff1b\u5a01\u5229\u00b7\u65fa\u5361\u8457\u540d\u7684\u5de7\u514b\u529b\u5de5\u5382\u7ec8\u4e8e\u5f00\u4e1a\u4e86\uff01&#34\uff1b\uff0c&#34\uff1b\u4f5c\u8005&#34\uff1b\uff1a[&#34\uff1b\u7f57\u5c14\u5fb7\u00b7\u8fbe\u5c14&34\uff1b]}\uff0c{#34\uff1bISBN&#34\uff1b\uff1a&#34\uff1b9788374950978&#34\uff1b\uff0c&#34\uff1b\u6807\u9898&#34\uff1b\uff1a&#34\uff1bKafka on the Shore&#34\uff1b\u63cf\u8ff0&#34\uff1b\uff1a&#34\uff1bKafka on the Shore\u662f\u65e5\u672c\u4f5c\u5bb6\u6751\u4e0a\u6625\u68112002\u5e74\u7684\u5c0f\u8bf4\uff0c{&#34\uff1b\uff0c&#34\uff1b\u4f5c\u8005&#34\uff1b\uff1a[&#34\uff1b\u6751\u4e0a\u6625\u6811&#34\uff1b\uff0c&#34\uff1b\u83f2\u5229\u666e\u00b7\u52a0\u5e03\u91cc\u57c3\u5c14&#34\uff1b]}\uff0c{&#34\uff1bISBN&#34\uff1b\uff1a&#34\uff1b9781471331435&#34\uff1b\uff0c&#34\uff1b\u6807\u9898&#34\uff1b\uff1a&#34\uff1b\uff0c&#34\uff1b\u63cf\u8ff0&#34\uff1b\uff1a&#34\uff1b1984\u5e74\u662f\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14\u5173\u4e8e\u53cd\u4e4c\u6258\u90a6\u672a\u6765\u7684\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\u7684\u9884\u8a00#34\uff1b\uff0c&#34\uff1b\u4f5c\u8005&#34\uff1b\uff1a[&#34\uff1b\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14&#34\uff1b]}]\n\u9009\u62e9JSON_BUILD_OBJECT(&#39\uff1bISBN&#39\uff1b\uff0cBOOK_1.ISBN\uff0c&#39\uff1bTitle&#39\uff1b\uff0cBOOK_1.Title\uff0c&#39\uff1bDescription&#39\uff1b\uff0cBOOK_1.Description\uff0c&#39\uff1bAuthors&#39\uff1b\uff0cANON_1.Authors)\u4f5c\u4e3a&#34\uff1bJSON_Build_Object_1&#34\uff1b\uff0cbook_1.id from book as book_1\u5de6\u5916\u90e8\u8054\u63a5(\u9009\u62e9JSON_AGG(anon_2.anon)\u4f5c\u4e3a\u4f5c\u8005\uff0cbook_Author_1.book_ISBN\u4f5c\u4e3abook_ISBN from book_Author\u4f5c\u4e3abook_Author_1\u5de6\u5916\u90e8\u8054\u63a5(\u9009\u62e9Author_1.name\u4f5c\u4e3a\u533f\u540d\uff0cANON_2\u4e0a\u7684AUTHER_1.ID\u4e3aAUTHER_1)AS ANON_2\u3002id=BOOK_AUTHER_1.OUTHER_ID\u5206\u7ec4BY BOOK_AUTHER_1\u3002BOOK_ISBN)ANON_1\u4e0a\u7684AS ANON_1\u3002BOOK_ISBN=BOOK_1\u3002ISBN\u3002\n{&#34\uff1bISBN&#34\uff1b\uff1a&#34\uff1b9781471331435&#34\uff1b\uff0c&#34\uff1bThis_is_a_CUSTOM_TITLE&#34\uff1b\uff1a&#34\uff1b\uff0c&#34\uff1bDesc&#34\uff1b\uff1a&#34\uff1b1984\u5e74\u662f\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14\u5173\u4e8e\u53cd\u4e4c\u6258\u90a6\u672a\u6765\u7684\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\u7684\u9884\u8a00\u3002#34\uff1b\uff0c&#34\uff1b\u8d21\u732e\u8005&#34\uff1b\uff1a[&#34\uff1bGeorge Orwell&#34\uff1b]}\u3002\n\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u5f88\u591a\u6587\u6863\u5177\u6709\u76f8\u540c\u7684\u4f5c\u8005\uff0c\u6211\u4eec\u60f3\u8981\u66f4\u6539\u4f5c\u8005\u59d3\u540d\u600e\u4e48\u529e\uff1f\nPGSync\u662f\u4e00\u79cd\u7b80\u5355\u6613\u7528\u7684\u53d8\u66f4\u6570\u636e\u6355\u83b7\u73b0\u6210\u89e3\u51b3\u65b9\u6848\u3002\nElasticsearch\u662fElasticsearch BV\u7684\u5546\u6807\uff0c\u5728\u7f8e\u56fd\u548c\u5176\u4ed6\u56fd\u5bb6\u6ce8\u518c\u3002\n\u6b64\u4ee3\u7801\u5728GNU\u5bbd\u677e\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc13.0\u7248(LGPL-3.0)\u4e0b\u53d1\u5e03\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8bb8\u53ef\u8bc1\u3002\n\u60a8\u5e94\u8be5\u5df2\u7ecf\u6536\u5230\u4e86\u4e0ePGSync\u4e00\u8d77\u7684GNU\u5bbd\u677e\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u7684\u526f\u672c\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u53c2\u9605https://www.gnu.org/licenses/.", "note_en": "PGSync is a middleware for syncing data from  Postgres to  Elasticsearch effortlessly.It allows you to keep  Postgres as your source of truth andexpose structured denormalized documents in  Elasticsearch.\n Changes to nested entities are propagated to  Elasticsearch.PGSync&#39;s advanced query builder then generates optimized SQL querieson the fly based on your schema.PGSync&#39;s advisory model allows you to quickly move and transform large volumes of data quickly whilst maintaining relational integrity.\n Simply describe your document structure or schema in JSON and  PGSync willcontinuously capture changes in your data and load it into  Elasticsearchwithout writing any code. PGSync transforms your relational data into a structured document format.\n It allows you to take advantage of the expressive power and scalability of Elasticsearch directly from  Postgres.You don&#39;t have to write complex queries and transformation pipelines.PGSync is lightweight, flexible and fast.\n Elasticsearch is more suited as as secondary denormalised search engine to accompany a more traditional normalized datastore.Moreover, you shouldn&#39;t store your primary data in  Elasticsearch.\n So how do you then get your data into  Elasticsearch in the first place?Tools like  Logstash and  Kafka can aid this task but they still require a bitof engineering and development.\n Extract Transform Load and  Change data capture tools can be complex and require expensive engineering effort.\n      At a high level, you have data in a Postgres database and you want to mirror it in Elasticsearch. This means every change to your data (  Insert,   Update,   Delete and   Truncate statements) needs to be replicated to Elasticsearch.At first, this seems easy and then it&#39;s not. Simply add some code to copy the data to Elasticsearch after updating the database (or so called dual writes).Writing SQL queries spanning multiple tables and involving multiple relationships are hard to write.Detecting changes within a nested document can also be quite hard.Of course, if your data never changed, then you could just take a snapshot in time and load it into Elasticsearch as a one-off operation.\n  You have existing data in a relational database such as  Postgres and you needa secondary NoSQL database like  Elasticsearch for text-based queries or autocomplete queries to mirror the existing data without having your application perform dual writes.\n You want to keep your existing data untouched whilst taking advantage ofthe search capabilities of  Elasticsearch by exposing a view of your data without compromising the security of your relational data.\n Or you simply want to expose a view of your relational data for search purposes.\n  PGSync is written in Python (supporting version 3.6 onwards) and the stack is composed of:  Redis,  Elasticsearch,  Postgres, and  SQlAlchemy.\n PGSync leverages the  logical decoding feature of  Postgres (introduced in PostgreSQL 9.4) to capture a continuous stream of change events.This feature needs to be enabled in your  Postgres configuration file by setting in the postgresql.conf file:\n    PGSync operates in an event-driven model by creating triggers for tables in your database to handle notification events.\n  NOTE:  If you change the structure of your PGSync&#39;s schema config, you would need to rebuild your Elasticsearch indices.There are plans to support zero-downtime migrations to streamline this process.\n          Enable logical decoding. you would also need to set up at least two parameters at postgresql.conf\n run the program with    pgsync --config schema.json or as a daemon    pgsync --config schema.json -d\n   Transactionally consistent output in Elasticsearch. This means: writes appear only when they are committed to the database, insert, update and delete operations appear in the same order as they were committed (as opposed to eventual consistency).\n Fault-tolerant: does not lose data, even if processes crash or a network interruption occurs, etc. The process can be recovered from the last checkpoint.\n   Supports an arbitrary depth of nested entities i.e Tables having long chain of relationship dependencies.\n Supports Postgres JSON data fields. This means: we can extract JSON fields in a database table as a separate field in the resulting document.\n           With PGSync, we can simply define this  JSON schema where the   book table is the pivot.A   pivot table indicates the root of your document.\n {   &#34;table &#34;:   &#34;book &#34;,   &#34;columns &#34;: [   &#34;isbn &#34;,   &#34;title &#34;,   &#34;description &#34; ],   &#34;children &#34;: [ {   &#34;table &#34;:   &#34;author &#34;,   &#34;columns &#34;: [   &#34;name &#34; ] } ]}\n  [ {   &#34;isbn &#34;:   &#34;9785811243570 &#34;,   &#34;title &#34;:   &#34;Charlie and the chocolate factory &#34;,   &#34;description &#34;:   &#34;Willy Wonka\u2019s famous chocolate factory is opening at last! &#34;,   &#34;authors &#34;: [  &#34;Roald Dahl &#34;] }, {   &#34;isbn &#34;:   &#34;9788374950978 &#34;,   &#34;title &#34;:   &#34;Kafka on the Shore &#34;,   &#34;description &#34;:   &#34;Kafka on the Shore is a 2002 novel by Japanese author Haruki Murakami &#34;,   &#34;authors &#34;: [  &#34;Haruki Murakami &#34;,   &#34;Philip Gabriel &#34;] }, {   &#34;isbn &#34;:   &#34;9781471331435 &#34;,   &#34;title &#34;:   &#34;1984 &#34;,   &#34;description &#34;:   &#34;1984 was George Orwell\u2019s chilling prophecy about the dystopian future &#34;,   &#34;authors &#34;: [  &#34;George Orwell &#34;] }]\n  SELECT JSON_BUILD_OBJECT(   &#39;isbn &#39;,  book_1. isbn,   &#39;title &#39;,  book_1. title,   &#39;description &#39;,  book_1. description,   &#39;authors &#39;,  anon_1. authors )  AS   &#34;JSON_BUILD_OBJECT_1 &#34;,  book_1. id FROM book  AS book_1 LEFT OUTER JOIN ( SELECT JSON_AGG( anon_2. anon)  AS authors,  book_author_1. book_isbn  AS book_isbn  FROM book_author  AS book_author_1  LEFT OUTER JOIN ( SELECT  author_1. name  AS anon,  author_1. id  AS id  FROM author  AS author_1)  AS anon_2  ON  anon_2. id  =  book_author_1. author_id  GROUP BY  book_author_1. book_isbn)  AS anon_1  ON  anon_1. book_isbn  =  book_1. isbn\n  {   &#34;isbn &#34;:   &#34;9781471331435 &#34;,   &#34;this_is_a_custom_title &#34;:   &#34;1984 &#34;,   &#34;desc &#34;:   &#34;1984 was George Orwell\u2019s chilling prophecy about the dystopian future &#34;,   &#34;contributors &#34;: [  &#34;George Orwell &#34;] }\n  What if we have lots of documents already with the same author we wanted to change the author name?\n  PGSync is a simple to use out of the box solution for Change data capture.\n    Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries.\n  This code is released under the  GNU Lesser General Public License, version 3.0 (LGPL-3.0). Please see  LICENSE for more details.\n You should have received a copy of the GNU Lesser General Public License along with PGSync. If not, see  https://www.gnu.org/licenses/.", "posttime": "2020-10-30 12:28:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u73b0\u5728,open,\u6570\u636e", "title": "PGSync\u73b0\u5728\u662f\u5f00\u6e90\u7684", "title_en": "PGSync is now open source", "transed": 1, "url": "https://github.com/toluaina/pgsync", "via": "", "real_tags": ["\u5f00\u6e90", "\u73b0\u5728", "open", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "b340aaeec73469722a7a5be511158c16.jpg", "infoid": 1032229, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u611f\u67d3\u65b0\u51a0\u80ba\u708e\u7684\u65e0\u75c7\u72b6\u4eba\u7fa4\uff0c\u4ece\u5b9a\u4e49\u4e0a\u8bb2\uff0c\u6ca1\u6709\u660e\u663e\u7684\u75be\u75c5\u8eab\u4f53\u75c7\u72b6\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u4e0d\u592a\u53ef\u80fd\u5bfb\u6c42\u75c5\u6bd2\u68c0\u6d4b\uff0c\u5e76\u53ef\u80fd\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5c06\u611f\u67d3\u4f20\u64ad\u7ed9\u5176\u4ed6\u4eba\u3002\n\u4f46\u4f3c\u4e4e\u90a3\u4e9b\u6ca1\u6709\u75c7\u72b6\u7684\u4eba\u53ef\u80fd\u5e76\u4e0d\u5b8c\u5168\u6ca1\u6709\u75c5\u6bd2\u9020\u6210\u7684\u53d8\u5316\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u7814\u7a76\u4eba\u5458\u73b0\u5728\u53d1\u73b0\uff0c\u6ca1\u6709\u75c7\u72b6\u7684\u4eba\u53ef\u80fd\u5728\u54b3\u55fd\u65b9\u5f0f\u4e0a\u4e0e\u5065\u5eb7\u4eba\u4e0d\u540c\u3002\u8fd9\u4e9b\u4e0d\u540c\u4e4b\u5904\u662f\u4eba\u8033\u65e0\u6cd5\u8fa8\u8ba4\u7684\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u4eba\u5de5\u667a\u80fd\u62fe\u53d6\u3002\n\u5728\u6700\u8fd1\u53d1\u8868\u5728IEEE\u533b\u5b66\u548c\u751f\u7269\u5b66\u5de5\u7a0b\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u8be5\u56e2\u961f\u62a5\u544a\u4e86\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u901a\u8fc7\u5f3a\u8feb\u54b3\u55fd\u5f55\u97f3\u5c06\u65e0\u75c7\u72b6\u7684\u4eba\u4e0e\u5065\u5eb7\u7684\u4eba\u533a\u5206\u5f00\u6765\uff0c\u4eba\u4eec\u901a\u8fc7\u7f51\u7edc\u6d4f\u89c8\u5668\u548c\u624b\u673a\u548c\u7b14\u8bb0\u672c\u7535\u8111\u7b49\u8bbe\u5907\u81ea\u613f\u63d0\u4ea4\u8fd9\u4e9b\u5f55\u97f3\u3002\n\u7814\u7a76\u4eba\u5458\u5bf9\u6570\u4e07\u4e2a\u54b3\u55fd\u6837\u672c\u548c\u53e3\u8bed\u8fdb\u884c\u4e86\u6a21\u578b\u8bad\u7ec3\u3002\u5f53\u4ed6\u4eec\u7ed9\u6a21\u578b\u63d0\u4f9b\u65b0\u7684\u54b3\u55fd\u8bb0\u5f55\u65f6\uff0c\u5b83\u51c6\u786e\u5730\u8bc6\u522b\u4e8698.5%\u7684\u54b3\u55fd\uff0c\u8fd9\u4e9b\u54b3\u55fd\u6765\u81ea\u88ab\u786e\u8ba4\u60a3\u6709\u65b0\u51a0\u80ba\u708e\u7684\u4eba\uff0c\u5305\u62ec100%\u6765\u81ea\u65e0\u75c7\u72b6\u7684\u54b3\u55fd-\u8fd9\u4e9b\u4eba\u62a5\u544a\u8bf4\u4ed6\u4eec\u6ca1\u6709\u75c7\u72b6\uff0c\u4f46\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\u3002\n\u8be5\u56e2\u961f\u6b63\u5728\u81f4\u529b\u4e8e\u5c06\u8be5\u6a21\u578b\u6574\u5408\u5230\u4e00\u6b3e\u7528\u6237\u53cb\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u6279\u51c6\u5e76\u5927\u89c4\u6a21\u91c7\u7528\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u79cd\u514d\u8d39\u3001\u65b9\u4fbf\u3001\u975e\u4fb5\u5165\u6027\u7684\u9884\u7b5b\u67e5\u5de5\u5177\uff0c\u7528\u4e8e\u8bc6\u522b\u53ef\u80fd\u6ca1\u6709\u65b0\u51a0\u80ba\u708e\u75c7\u72b6\u7684\u4eba\u3002\u7528\u6237\u53ef\u4ee5\u6bcf\u5929\u767b\u5f55\uff0c\u5bf9\u7740\u624b\u673a\u54b3\u55fd\uff0c\u7acb\u5373\u83b7\u5f97\u4ed6\u4eec\u662f\u5426\u53ef\u80fd\u88ab\u611f\u67d3\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u5e94\u8be5\u901a\u8fc7\u6b63\u5f0f\u6d4b\u8bd5\u8fdb\u884c\u786e\u8ba4\u3002\n\u201c\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u5728\u53bb\u6559\u5ba4\u3001\u5de5\u5382\u6216\u9910\u9986\u4e4b\u524d\u4f7f\u7528\u8fd9\u4e2a\u7fa4\u4f53\u8bca\u65ad\u5de5\u5177\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7fa4\u4f53\u8bca\u65ad\u5de5\u5177\u7684\u6709\u6548\u5b9e\u65bd\u53ef\u4ee5\u51cf\u5c11\u6d41\u884c\u75c5\u7684\u4f20\u64ad\uff0c\u201d\u8be5\u7814\u7a76\u7684\u5408\u8457\u8005\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u81ea\u52a8ID\u5b9e\u9a8c\u5ba4\u7684\u7814\u7a76\u79d1\u5b66\u5bb6\u5e03\u83b1\u6069\u00b7\u82cf\u6bd4\u62c9\u7eb3(Brian SuBirana)\u8bf4\u3002\n\u82cf\u6bd4\u62c9\u7eb3\u7684\u5408\u8457\u8005\u662f\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u81ea\u52a8\u8bc6\u522b\u5b9e\u9a8c\u5ba4\u7684\u4e54\u8fea\u00b7\u62c9\u74dc\u5c14\u5854\u548c\u8d39\u5170\u00b7\u4f11\u6258\u3002\n\u5728\u5927\u6d41\u884c\u7206\u53d1\u4e4b\u524d\uff0c\u7814\u7a76\u5c0f\u7ec4\u5df2\u7ecf\u5728\u8bad\u7ec3\u624b\u673a\u54b3\u55fd\u5f55\u97f3\u7684\u7b97\u6cd5\uff0c\u4ee5\u51c6\u786e\u8bca\u65ad\u80ba\u708e\u548c\u54ee\u5598\u7b49\u75be\u75c5\u3002\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u56e2\u961f\u6b63\u5728\u5f00\u53d1\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u6765\u5206\u6790\u5f3a\u8feb\u54b3\u55fd\u7684\u5f55\u97f3\uff0c\u770b\u770b\u4ed6\u4eec\u662f\u5426\u80fd\u68c0\u6d4b\u5230\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u8ff9\u8c61\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u4ec5\u4e0e\u8bb0\u5fc6\u529b\u4e0b\u964d\u6709\u5173\u7684\u75be\u75c5\uff0c\u8fd8\u4e0e\u795e\u7ecf\u808c\u8089\u9000\u5316\u6709\u5173\uff0c\u5982\u58f0\u5e26\u865a\u5f31\u3002\n\u4ed6\u4eec\u9996\u5148\u8bad\u7ec3\u4e86\u4e00\u79cd\u540d\u4e3aResNet50\u7684\u901a\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6216\u795e\u7ecf\u7f51\u7edc\uff0c\u4ee5\u533a\u5206\u4e0e\u58f0\u5e26\u5f3a\u5ea6\u4e0d\u540c\u7a0b\u5ea6\u76f8\u5173\u7684\u58f0\u97f3\u3002\u7814\u7a76\u8868\u660e\uff0c\u58f0\u97f3\u201cmmmm\u201d\u7684\u8d28\u91cf\u53ef\u4ee5\u6307\u793a\u4e00\u4e2a\u4eba\u7684\u58f0\u5e26\u6709\u591a\u5f31\u6216\u591a\u5f3a\u3002\u82cf\u6bd4\u62c9\u7eb3\u5728\u4e00\u4e2a1000\u591a\u5c0f\u65f6\u7684\u6709\u58f0\u8bfb\u7269\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0c\u8ba9\u5b83\u4ece\u201cthe\u201d\u548c\u201cThen\u201d\u7b49\u5176\u4ed6\u5355\u8bcd\u4e2d\u6311\u9009\u51fa\u201cThey\u201d\u8fd9\u4e2a\u5355\u8bcd\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8bad\u7ec3\u4e86\u7b2c\u4e8c\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u533a\u5206\u8a00\u8bed\u4e2d\u660e\u663e\u7684\u60c5\u7eea\u72b6\u6001\uff0c\u56e0\u4e3a\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u60a3\u8005-\u4ee5\u53ca\u66f4\u666e\u904d\u7684\u795e\u7ecf\u529f\u80fd\u51cf\u9000\u7684\u4eba-\u5df2\u7ecf\u88ab\u8bc1\u660e\u6bd4\u4ed6\u4eec\u8868\u8fbe\u5feb\u4e50\u6216\u5e73\u9759\u66f4\u9891\u7e41\u5730\u8868\u73b0\u51fa\u7279\u5b9a\u7684\u60c5\u7eea\uff0c\u5982\u6cae\u4e27\u6216\u5e73\u6de1\u7684\u60c5\u7eea\u3002\u7814\u7a76\u4eba\u5458\u5f00\u53d1\u4e86\u4e00\u4e2a\u60c5\u611f\u8bed\u97f3\u5206\u7c7b\u5668\u6a21\u578b\uff0c\u901a\u8fc7\u5728\u6f14\u5458\u8bed\u8c03\u4e3a\u4e2d\u6027\u3001\u5e73\u9759\u3001\u5feb\u4e50\u548c\u60b2\u4f24\u7b49\u60c5\u7eea\u72b6\u6001\u7684\u5927\u578b\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u5f00\u53d1\u4e86\u4e00\u4e2a\u60c5\u611f\u8bed\u97f3\u5206\u7c7b\u5668\u6a21\u578b\u3002\n\u7814\u7a76\u4eba\u5458\u968f\u540e\u5728\u54b3\u55fd\u6570\u636e\u5e93\u4e0a\u8bad\u7ec3\u4e86\u7b2c\u4e09\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u4ee5\u8fa8\u522b\u80ba\u90e8\u548c\u547c\u5438\u6027\u80fd\u7684\u53d8\u5316\u3002\n\u6700\u540e\uff0c\u7814\u7a76\u5c0f\u7ec4\u7ed3\u5408\u4e86\u6240\u6709\u4e09\u79cd\u6a21\u578b\uff0c\u5e76\u53e0\u52a0\u4e86\u4e00\u79cd\u68c0\u6d4b\u808c\u8089\u9000\u5316\u7684\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u672c\u8d28\u4e0a\u662f\u901a\u8fc7\u6a21\u62df\u97f3\u9891\u63a9\u819c\u6216\u566a\u58f0\u5c42\uff0c\u5e76\u533a\u5206\u5f3a\u70c8\u7684\u54b3\u55fd-\u90a3\u4e9b\u53ef\u4ee5\u5728\u566a\u97f3\u4e0a\u542c\u5230\u7684\u54b3\u55fd-\u800c\u4e0d\u662f\u8f83\u5f31\u7684\u54b3\u55fd\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u4f7f\u7528\u4ed6\u4eec\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u6846\u67b6\uff0c\u7814\u7a76\u5c0f\u7ec4\u8f93\u5165\u4e86\u97f3\u9891\u8bb0\u5f55\uff0c\u5305\u62ec\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u60a3\u8005\u7684\u5f55\u97f3\uff0c\u5e76\u53d1\u73b0\u5b83\u53ef\u4ee5\u6bd4\u73b0\u6709\u6a21\u578b\u66f4\u597d\u5730\u8bc6\u522b\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u6837\u672c\u3002\u7ed3\u679c\u8868\u660e\uff0c\u58f0\u5e26\u5f3a\u5ea6\u3001\u60c5\u7eea\u3001\u80ba\u548c\u547c\u5438\u529f\u80fd\u4ee5\u53ca\u808c\u8089\u9000\u5316\u662f\u8bca\u65ad\u8be5\u75c5\u7684\u6709\u6548\u751f\u7269\u6807\u5fd7\u7269\u3002\n\u5f53\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5f00\u59cb\u5c55\u5f00\u65f6\uff0c\u82cf\u6bd4\u62c9\u7eb3\u60f3\u77e5\u9053\u4ed6\u4eec\u9488\u5bf9\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u4eba\u5de5\u667a\u80fd\u6846\u67b6\u662f\u5426\u4e5f\u9002\u7528\u4e8e\u8bca\u65ad\u65b0\u51a0\u80ba\u708e\uff0c\u56e0\u4e3a\u8d8a\u6765\u8d8a\u591a\u7684\u8bc1\u636e\u8868\u660e\uff0c\u611f\u67d3\u60a3\u8005\u7ecf\u5386\u4e86\u4e00\u4e9b\u7c7b\u4f3c\u7684\u795e\u7ecf\u75c7\u72b6\uff0c\u5982\u6682\u65f6\u6027\u795e\u7ecf\u808c\u8089\u635f\u4f24\u3002\n\u201c\u8bf4\u8bdd\u548c\u54b3\u55fd\u7684\u58f0\u97f3\u90fd\u53d7\u5230\u58f0\u5e26\u548c\u5468\u56f4\u5668\u5b98\u7684\u5f71\u54cd\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u8bf4\u8bdd\u7684\u65f6\u5019\uff0c\u4f60\u8bf4\u8bdd\u7684\u4e00\u90e8\u5206\u5c31\u50cf\u54b3\u55fd\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u4ece\u6d41\u5229\u7684\u8bed\u8a00\u4e2d\u83b7\u5f97\u4e00\u4e9b\u4e1c\u897f\uff0c\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u7b80\u5355\u5730\u4ece\u54b3\u55fd\u4e2d\u5b66\u5230\u4e1c\u897f\uff0c\u5305\u62ec\u8fd9\u4e2a\u4eba\u7684\u6027\u522b\u3001\u6bcd\u8bed\uff0c\u751a\u81f3\u662f\u60c5\u7eea\u72b6\u6001\u3002\u82cf\u6bd4\u62c9\u7eb3\u8bf4\uff1a\u201c\u4e8b\u5b9e\u4e0a\uff0c\u54b3\u55fd\u7684\u65b9\u5f0f\u4e2d\u8574\u542b\u7740\u60c5\u611f\u3002\u201d\u201c\u6240\u4ee5\u6211\u4eec\u60f3\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u8bd5\u8bd5\u8fd9\u4e9b\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u751f\u7269\u6807\u8bb0\u7269(\u770b\u770b\u5b83\u4eec\u662f\u5426\u4e0eCovid\u76f8\u5173)\u3002\u201d\n\u4eca\u5e744\u6708\uff0c\u7814\u7a76\u5c0f\u7ec4\u5f00\u59cb\u6536\u96c6\u5c3d\u53ef\u80fd\u591a\u7684\u54b3\u55fd\u8bb0\u5f55\uff0c\u5305\u62ec\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u7684\u54b3\u55fd\u8bb0\u5f55\u3002\u4ed6\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u4eba\u4eec\u53ef\u4ee5\u5728\u90a3\u91cc\u901a\u8fc7\u624b\u673a\u6216\u5176\u4ed6\u5177\u6709\u7f51\u7edc\u529f\u80fd\u7684\u8bbe\u5907\u8bb0\u5f55\u4e00\u7cfb\u5217\u54b3\u55fd\u3002\u53c2\u4e0e\u8005\u8fd8\u586b\u5199\u4e86\u4e00\u4efd\u5173\u4e8e\u4ed6\u4eec\u6b63\u5728\u7ecf\u5386\u7684\u75c7\u72b6\u7684\u8c03\u67e5\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u5426\u60a3\u6709\u65b0\u51a0\u80ba\u708e\uff0c\u4ed6\u4eec\u662f\u901a\u8fc7\u5b98\u65b9\u6d4b\u8bd5\u3001\u533b\u751f\u5bf9\u4ed6\u4eec\u75c7\u72b6\u7684\u8bc4\u4f30\u8fd8\u662f\u81ea\u5df1\u8bca\u65ad\u51fa\u6765\u7684\u3002\u4ed6\u4eec\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u81ea\u5df1\u7684\u6027\u522b\u3001\u5730\u7406\u4f4d\u7f6e\u548c\u6bcd\u8bed\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u6536\u96c6\u4e86\u8d85\u8fc77\u4e07\u4efd\u5f55\u97f3\uff0c\u6bcf\u4e2a\u5f55\u97f3\u5305\u542b\u51e0\u6b21\u54b3\u55fd\uff0c\u603b\u5171\u6709\u5927\u7ea620\u4e07\u4e2a\u5f3a\u8feb\u54b3\u55fd\u7684\u97f3\u9891\u6837\u672c\uff0c\u82cf\u6bd4\u62c9\u7eb3\u8bf4\u8fd9\u662f\u201c\u6211\u4eec\u6240\u77e5\u7684\u6700\u5927\u7684\u7814\u7a76\u54b3\u55fd\u6570\u636e\u96c6\u201d\u3002\u5927\u7ea62,500\u4efd\u5f55\u97f3\u662f\u7531\u88ab\u786e\u8ba4\u60a3\u6709\u65b0\u51a0\u80ba\u708e\u7684\u4eba\u63d0\u4ea4\u7684\uff0c\u5176\u4e2d\u5305\u62ec\u90a3\u4e9b\u6ca1\u6709\u75c7\u72b6\u7684\u4eba\u3002\n\u7814\u7a76\u5c0f\u7ec4\u4f7f\u7528\u4e862500\u4e2a\u4e0eCovid\u76f8\u5173\u7684\u5f55\u97f3\uff0c\u4ee5\u53ca\u4ed6\u4eec\u4ece\u96c6\u5408\u4e2d\u968f\u673a\u9009\u62e9\u76842500\u591a\u4e2a\u5f55\u97f3\uff0c\u4ee5\u5e73\u8861\u6570\u636e\u96c6\u3002\u4ed6\u4eec\u4f7f\u7528\u4e864000\u4e2a\u8fd9\u6837\u7684\u6837\u672c\u6765\u8bad\u7ec3\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u3002\u5269\u4e0b\u76841000\u6bb5\u5f55\u97f3\u7136\u540e\u88ab\u8f93\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u770b\u770b\u5b83\u662f\u5426\u80fd\u51c6\u786e\u5730\u533a\u5206Covid\u60a3\u8005\u548c\u5065\u5eb7\u4eba\u7684\u54b3\u55fd\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u6b63\u5982\u7814\u7a76\u4eba\u5458\u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u4ed6\u4eec\u7684\u52aa\u529b\u63ed\u793a\u4e86\u201c\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u548cCovid\u6b67\u89c6\u4e4b\u95f4\u60ca\u4eba\u7684\u76f8\u4f3c\u4e4b\u5904\u3002\u201d\n\u5728\u6700\u521d\u9488\u5bf9\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u4eba\u5de5\u667a\u80fd\u6846\u67b6\u5185\u6ca1\u6709\u592a\u591a\u8c03\u6574\uff0c\u4ed6\u4eec\u53d1\u73b0\u5b83\u80fd\u591f\u63d0\u53d6\u65b0\u51a0\u80ba\u708e\u7279\u6709\u7684\u56db\u4e2a\u751f\u7269\u6807\u5fd7\u7269\u7684\u6a21\u5f0f-\u58f0\u5e26\u5f3a\u5ea6\u3001\u60c5\u7eea\u3001\u80ba\u548c\u547c\u5438\u8868\u73b0\u4ee5\u53ca\u808c\u8089\u964d\u89e3\u3002\u8be5\u6a21\u578b\u8bc6\u522b\u4e8698.5%\u4e0e\u65b0\u51a0\u80ba\u708e\u786e\u8ba4\u7684\u4eba\u7684\u54b3\u55fd\uff0c\u5176\u4e2d\uff0c\u5b83\u51c6\u786e\u5730\u68c0\u6d4b\u5230\u4e86\u6240\u6709\u65e0\u75c7\u72b6\u7684\u54b3\u55fd\u3002\n\u82cf\u6bd4\u62c9\u7eb3\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u8868\u660e\uff0c\u5f53\u4f60\u6709Covid\u65f6\uff0c\u5373\u4f7f\u4f60\u6ca1\u6709\u75c7\u72b6\uff0c\u4f60\u4ea7\u751f\u58f0\u97f3\u7684\u65b9\u5f0f\u4e5f\u4f1a\u6539\u53d8\u3002\u201d\n\u82cf\u6bd4\u62c9\u7eb3\u5f3a\u8c03\uff0c\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u5e76\u4e0d\u662f\u4e3a\u4e86\u8bca\u65ad\u6709\u75c7\u72b6\u7684\u4eba\uff0c\u53ea\u8981\u4ed6\u4eec\u7684\u75c7\u72b6\u662f\u7531\u4e8e\u65b0\u51a0\u80ba\u708e\u8fd8\u662f\u5176\u4ed6\u75be\u75c5\uff0c\u5982\u6d41\u611f\u6216\u54ee\u5598\u3002\u8be5\u5de5\u5177\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u80fd\u591f\u533a\u5206\u65e0\u75c7\u72b6\u54b3\u55fd\u548c\u5065\u5eb7\u54b3\u55fd\u3002\n\u8be5\u56e2\u961f\u6b63\u5728\u4e0e\u4e00\u5bb6\u516c\u53f8\u5408\u4f5c\uff0c\u57fa\u4e8e\u4ed6\u4eec\u7684\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u5f00\u53d1\u4e00\u6b3e\u514d\u8d39\u7684\u9884\u7b5b\u9009\u5e94\u7528\u7a0b\u5e8f\u3002\u4ed6\u4eec\u8fd8\u4e0e\u4e16\u754c\u5404\u5730\u7684\u51e0\u5bb6\u533b\u9662\u5408\u4f5c\uff0c\u6536\u96c6\u66f4\u5927\u3001\u66f4\u591a\u6837\u5316\u7684\u54b3\u55fd\u8bb0\u5f55\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u8bad\u7ec3\u548c\u52a0\u5f3a\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002\n\u6b63\u5982\u4ed6\u4eec\u5728\u8bba\u6587\u4e2d\u63d0\u51fa\u7684\u90a3\u6837\uff0c\u201c\u5982\u679c\u9884\u5148\u7b5b\u67e5\u5de5\u5177\u603b\u662f\u5728\u540e\u53f0\u8fd0\u884c\u5e76\u4e0d\u65ad\u6539\u8fdb\uff0c\u90a3\u4e48\u5927\u6d41\u884c\u53ef\u80fd\u4f1a\u6210\u4e3a\u8fc7\u53bb\u3002\u201d\n\u6700\u7ec8\uff0c\u4ed6\u4eec\u8bbe\u60f3\uff0c\u50cf\u4ed6\u4eec\u5f00\u53d1\u7684\u97f3\u9891\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u53ef\u80fd\u4f1a\u88ab\u6574\u5408\u5230\u667a\u80fd\u626c\u58f0\u5668\u548c\u5176\u4ed6\u542c\u529b\u8bbe\u5907\u4e2d\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bf9\u81ea\u5df1\u7684\u75be\u75c5\u98ce\u9669\u8fdb\u884c\u521d\u6b65\u8bc4\u4f30\uff0c\u53ef\u80fd\u662f\u6bcf\u5929\u3002", "note_en": "Asymptomatic people who are infected with Covid-19 exhibit, by definition, no discernible physical symptoms of the disease. They are thus less likely to seek out testing for the virus, and could unknowingly spread the infection to others.\n But it seems those who are asymptomatic may not be entirely free of changes wrought by the virus. MIT researchers have now found that people who are asymptomatic may differ from healthy individuals in the way that they cough. These differences are not decipherable to the human ear. But it turns out that they can be picked up by artificial intelligence.\n In a paper published recently in the  IEEE Journal of Engineering in Medicine and Biology, the team reports on an AI model that distinguishes asymptomatic people from healthy individuals through forced-cough recordings, which people voluntarily submitted through web browsers and devices such as cellphones and laptops.\n The researchers trained the model on tens of thousands of samples of coughs, as well as spoken words. When they fed the model new cough recordings, it accurately identified 98.5 percent of coughs from people who were confirmed to have Covid-19, including 100 percent of coughs from asymptomatics \u2014 who reported they did not have symptoms but had tested positive for the virus.\n The team is working on incorporating the model into a user-friendly app, which if FDA-approved and adopted on a large scale could potentially be a free, convenient, noninvasive prescreening tool to identify people who are likely to be asymptomatic for Covid-19. A user could log in daily, cough into their phone, and instantly get information on whether they might be infected and therefore should confirm with a formal test.\n \u201cThe effective implementation of this group diagnostic tool could diminish the spread of the pandemic if everyone uses it before going to a classroom, a factory, or a restaurant,\u201d says co-author Brian Subirana, a research scientist in MIT\u2019s Auto-ID Laboratory.\n Subirana\u2019s co-authors are Jordi Laguarta and Ferran Hueto, of MIT\u2019s Auto-ID Laboratory.\n    Prior to the pandemic\u2019s onset, research groups already had been training algorithms on cellphone recordings of coughs to accurately diagnose conditions such as pneumonia and asthma. In similar fashion, the MIT team was developing AI models to analyze forced-cough recordings to see if they could detect signs of Alzheimer\u2019s, a disease associated with not only memory decline but also neuromuscular degradation such as weakened vocal cords.\n They first trained a general machine-learning algorithm, or neural network, known as ResNet50, to discriminate sounds associated with different degrees of vocal cord strength. Studies have shown that the quality of the sound \u201cmmmm\u201d can be an indication of how weak or strong a person\u2019s vocal cords are. Subirana trained the neural network on an audiobook dataset with more than 1,000 hours of speech, to pick out the word \u201cthem\u201d from other words like \u201cthe\u201d and \u201cthen.\u201d\n The team trained a second neural network to distinguish emotional states evident in speech, because Alzheimer\u2019s patients \u2014 and people with neurological decline more generally \u2014 have been shown to display certain sentiments such as frustration, or having a flat affect, more frequently than they express happiness or calm. The researchers developed a sentiment speech classifier model by training it on a large dataset of actors intonating emotional states, such as neutral, calm, happy, and sad.\n The researchers then trained a third neural network on a database of coughs in order to discern changes in lung and respiratory performance.\n Finally, the team combined all three models, and overlaid an algorithm to detect muscular degradation. The algorithm does so by essentially simulating an audio mask, or layer of noise, and distinguishing strong coughs \u2014 those that can be heard over the noise \u2014 over weaker ones.\n With their new AI framework, the team fed in audio recordings, including of Alzheimer\u2019s patients, and found it could identify the Alzheimer\u2019s samples better than existing models. The results showed that, together, vocal cord strength, sentiment, lung and respiratory performance, and muscular degradation were effective biomarkers for diagnosing the disease.\n When the coronavirus pandemic began to unfold, Subirana wondered whether their AI framework for Alzheimer\u2019s might also work for diagnosing Covid-19, as there was growing evidence that infected patients experienced some similar neurological symptoms such as temporary neuromuscular impairment.\n \u201cThe sounds of talking and coughing are both influenced by the vocal cords and surrounding organs. This means that when you talk, part of your talking is like coughing, and vice versa. It also means that things we easily derive from fluent speech, AI can pick up simply from coughs, including things like the person\u2019s gender, mother tongue, or even emotional state. There\u2019s in fact sentiment embedded in how you cough,\u201d Subirana says. \u201cSo we thought, why don\u2019t we try these Alzheimer\u2019s biomarkers [to see if they\u2019re relevant] for Covid.\u201d\n  In April, the team set out to collect as many recordings of coughs as they could, including those from Covid-19 patients. They established a website where people can record a series of coughs, through a cellphone or other web-enabled device. Participants also fill out a survey of symptoms they are experiencing, whether or not they have Covid-19, and whether they were diagnosed through an official test, by a doctor\u2019s assessment of their symptoms, or if they self-diagnosed. They also can note their gender, geographical location, and native language.\n To date, the researchers have collected more than 70,000 recordings, each containing several coughs, amounting to some 200,000 forced-cough audio samples, which Subirana says is \u201cthe largest research cough dataset that we know of.\u201d Around 2,500 recordings were submitted by people who were confirmed to have Covid-19, including those who were asymptomatic.\n The team used the 2,500 Covid-associated recordings, along with 2,500 more recordings that they randomly selected from the collection to balance the dataset. They used 4,000 of these samples to train the AI model. The remaining 1,000 recordings were then fed into the model to see if it could accurately discern coughs from Covid patients versus healthy individuals.\n Surprisingly, as the researchers write in their paper, their efforts have revealed \u201ca striking similarity between Alzheimer\u2019s and Covid discrimination.\u201d\n Without much tweaking within the AI framework originally meant for Alzheimer\u2019s, they found it was able to pick up patterns in the four biomarkers \u2014 vocal cord strength, sentiment, lung and respiratory performance, and muscular degradation \u2014 that are specific to Covid-19. The model identified 98.5 percent of coughs from people confirmed with Covid-19, and of those, it accurately detected all of the asymptomatic coughs.\n \u201cWe think this shows that the way you produce sound, changes when you have Covid, even if you\u2019re asymptomatic,\u201d Subirana says.\n  The AI model, Subirana stresses, is not meant to diagnose symptomatic people, as far as whether their symptoms are due to Covid-19 or other conditions like flu or asthma. The tool\u2019s strength lies in its ability to discern asymptomatic coughs from healthy coughs.\n The team is working with a company to develop a free pre-screening app based on their AI model. They are also partnerning with several hospitals around the world to collect a larger, more diverse set of cough recordings, which will help to train and strengthen the model\u2019s accuracy.\n As they propose in their paper, \u201cPandemics could be a thing of the past if pre-screening tools are always on in the background and constantly improved.\u201d\n Ultimately, they envision that audio AI models like the one they\u2019ve developed may be incorporated into smart speakers and other listening devices so that people can conveniently get an initial assessment of their disease risk, perhaps on a daily basis.", "posttime": "2020-10-30 12:09:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u8bb0\u5f55,asymptomatic,\u54b3\u55fd", "title": "\u901a\u8fc7\u624b\u673a\u8bb0\u5f55\u54b3\u55fd\u68c0\u6d4b\u65b0\u51a0\u80ba\u708e\u65e0\u75c7\u72b6\u611f\u67d3", "title_en": "Detecting asymptomatic Covid-19 infections through cellphone-recorded coughs", "transed": 1, "url": "https://news.mit.edu/2020/covid-19-cough-cellphone-detection-1029", "via": "", "real_tags": ["\u624b\u673a", "\u8bb0\u5f55", "\u54b3\u55fd"]}, {"category": "", "categoryclass": "", "imagename": "172082a0ec3f8f658c2c5fa0dcd39969.png", "infoid": 1032228, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u661f\u671f\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u81f4\u529b\u4e8e\u8ba9WebRTC\u89c6\u9891\u804a\u5929\u5728\u7f51\u7ad9\u4e0a\u8fd0\u884c\u3002\u6211\u7ec8\u4e8e\u8fbe\u5230\u4e86\u6587\u672c\u3001\u89c6\u9891\u804a\u5929\u548c\u5c4f\u5e55\u5206\u4eab\u90fd\u5de5\u4f5c\u5f97\u5f88\u597d\u7684\u5730\u6b65\uff0c\u4f46\u5728\u6211\u8111\u6d77\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4e00\u76f4\u5728\u60f3\u7740\u5728\u5927\u6d41\u884c\u671f\u95f4\u5bf9\u201c\u7f29\u653e\u75b2\u52b3\u201d\u7684\u62b1\u6028\uff1a\n\u970d\u5c14\u73b0\u5728\u8ba4\u4e3a\uff0c\u53d8\u7126\u75b2\u52b3\u662f\u771f\u5b9e\u5b58\u5728\u7684\u3002\u201cZoom\u8ba9\u4eba\u7cbe\u75b2\u529b\u5c3d\uff0c\u4e5f\u5f88\u5b64\u72ec\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u6bd4\u6253\u7535\u8bdd\u65f6\u66f4\u7528\u5fc3\u3001\u66f4\u6e05\u695a\u5730\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u201d\u5982\u679c\u4f60\u6ca1\u6709\u5173\u6389\u81ea\u5df1\u7684\u76f8\u673a\uff0c\u4f60\u4e5f\u5728\u770b\u7740\u81ea\u5df1\u8bf4\u8bdd\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4eba\u5174\u594b\u548c\u4e0d\u5b89\u3002\u65f6\u65ad\u65f6\u7eed\u3001\u5ef6\u8bef\u548c\u65ad\u53e5\u4e5f\u9020\u6210\u4e86\u6df7\u4e71\u3002\u8fd8\u9700\u8981\u505a\u66f4\u591a\u7684\u63a2\u7d22\uff0c\u4f46\u4ed6\u8bf4\uff0c\u201c\u4e5f\u8bb8\u8fd9\u4e0d\u662f\u6211\u4eec\u8ba4\u4e3a\u7684\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u201d\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7535\u8bdd\u8981\u6c42\u8f83\u4f4e\u3002\u201c\u4f60\u53ef\u4ee5\u5446\u5728\u4f60\u81ea\u5df1\u7684\u7a7a\u95f4\u91cc\u3002\u4f60\u53ef\u4ee5\u6563\u6b65\uff0c\u505a\u996d\uff0c\u201c\u970d\u5c14\u8bf4\u3002\n\u5f53\u60a8\u82b1\u8d39\u6570\u5468\u65f6\u95f4\u7f16\u5199/\u8c03\u8bd5/\u6d4b\u8bd5\u89c6\u9891\u804a\u5929\u4ee3\u7801\u65f6\uff0c\u8111\u6d77\u4e2d\u6d6e\u73b0\u51fa\u8fd9\u6837\u7684\u60f3\u6cd5\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002\n\u6240\u4ee5\u6211\u51b3\u5b9a\u6dfb\u52a0\u4e00\u4e2a\u7eaf\u97f3\u9891\u6a21\u5f0f\u3002\u5982\u679c\u6211\u8981\u8fd9\u4e48\u505a\uff0c\u6211\u5fc5\u987b\u5c55\u793a\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\u6765\u4ee3\u66ff\u89c6\u9891\u3002\u56e0\u6b64\uff0c\u6211\u60f3\u5f53\u5176\u4e2d\u4e00\u4e2a\u7528\u6237\u6216\u4e24\u4e2a\u7528\u6237\u90fd\u6ca1\u6709\u6253\u5f00\u89c6\u9891\u65f6\uff0c\u6211\u4f1a\u5c1d\u8bd5\u6dfb\u52a0\u97f3\u9891\u53ef\u89c6\u5316\u6548\u679c\u3002\u4f7f\u7528\u76f8\u5bf9\u8f83\u65b0\u76841Web Audio API\u4f3c\u4e4e\u662f\u6b63\u786e\u7684\u9009\u62e9\u3002\n\u8981\u521b\u5efa\u97f3\u9891\u53ef\u89c6\u5316\uff0c\u9996\u5148\u9700\u8981\u4e00\u4e2aAnalyserNode\uff0c\u60a8\u53ef\u4ee5\u4eceBaseAudioContext\u7684createAnalyser\u65b9\u6cd5\u4e2d\u83b7\u5f97\u5b83\u3002\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u8fd9\u4e24\u6837\u4e1c\u897f\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528AudioContext.createMediaStreamSource\u4ece\u73b0\u6709\u6570\u636e\u6d41(\u6211\u5206\u522b\u4f7f\u7528\u6765\u81eagetUserMedia\u6216RTCPeerConnection\u7684\u2018Track\u2019\u4e8b\u4ef6\u7684\u672c\u5730\u6216\u8fdc\u7a0b\u6570\u636e\u6d41)\u521b\u5efa\u4e00\u4e2aMediaStreamAudioSourceNode\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u8be5\u97f3\u9891\u6e90\u8fde\u63a5\u5230\u5206\u6790\u5668\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a\uff1a\nWindow.requestAnimationFrame\u5f88\u4e0d\u9519\u3002\u8c03\u7528\u5b83\uff0c\u4f20\u5165\u7ed8\u56fe\u51fd\u6570\uff0c\u7136\u540e\u5728\u8be5\u51fd\u6570\u5185\u90e8\u518d\u6b21\u8c03\u7528requestAnimationFrame\u3002\u8ba9\u60a8\u81ea\u5df1\u8fdb\u884c\u4e00\u4e2a\u6f02\u4eae\u7684\u5c0f\u9012\u5f52\u5faa\u73af\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5bf9\u5176\u8fdb\u884c\u6b63\u786e\u7684\u8ba1\u65f6\u3002\n\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u8fd0\u884c0\u30011\u62162\u4e2a\u53ef\u89c6\u5316\u6548\u679c\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e00\u65b9\u90fd\u53ef\u4ee5\u9009\u62e9\u89c6\u9891\u804a\u5929\u3001\u7eaf\u97f3\u9891(\u2026\u3002\u9664\u4e86\u5728\u5c4f\u5e55\u5171\u4eab\u671f\u95f4)\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u6587\u672c\u804a\u5929\u3002\u6240\u4ee5\u6211\u6709\u4e00\u4e2a\u5faa\u73af\u6765\u753b\u8fd9\u4e24\u4e2a\u3002\u5b83\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\u6211\u4e3a\u8fd9\u4e9b\u53ef\u89c6\u5316\u5bf9\u8c61\u521b\u5efa\u4e86\u7c7b\uff0c\u5b83\u4eec\u5904\u7406\u662f\u5426\u7ed8\u5236\u3002\u5b83\u4eec\u6bcf\u4e2a\u90fd\u5305\u542b\u7528\u4e8e\u53ef\u89c6\u5316\u7684\u5206\u6790\u5668\u3001\u6e90\u548c\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002\n\u7136\u540e\uff0c\u5f53\u6211\u68c0\u6d4b\u5230\u8be5\u5faa\u73af\u4e0d\u518d\u9700\u8981\u8fd0\u884c\u65f6\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u8be5audioCancel\u503c\u53d6\u6d88\u5b83\uff1a\n\u5c31\u50cf\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4e00\u6837\uff0c\u5982\u679c\u60a8\u67e5\u770bMDN\u6587\u6863\uff0c\u60a8\u4f1a\u770b\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u6211\u63d0\u4f9b\u4e86\u4e24\u79cd\u97f3\u9891\u53ef\u89c6\u5316\u7684\u9009\u9879\uff1a\u9891\u7387\u6761\u548c\u6b63\u5f26\u6ce2\u3002\u4e0b\u9762\u662f\u6211\u5982\u4f55\u4e3a\u6bcf\u79cd\u7c7b\u578b\u914d\u7f6e\u5206\u6790\u5668\uff1a\n1\u5f00\u5173(this.type){2\u4e2a\u6848\u4f8b#39\uff1b\uff1a3\u4e2athis.analyser.minDecibels=-90\uff1b4\u4e2athis.analyser.maxDecibels=-10\uff1b5\u4e2athis.analyser.\u5e73\u6ed1TimeConstant=0.85\uff1b6\u4e2athis.analyser.fftSize=256\uff1b7\u4e2athis.BufferLength=this.analyser.requencyBinCount\uff1b8\u4e2athis.dataArray=new Uint8Array(this.BufferLength)\uff1b9\u4e2a\u4e2d\u65ad\uff1b10\u4e2a\u9ed8\u8ba4\u503c\uff1a11\u4e2athis.analyser.minDecibels=-90\uff1b12\u4e2athis.analyser.maxDecibels=-10\uff1b13 this.analyser.mooth ingTimeConstant=0.9\uff1b14 this.analyser.fftSize=1024\uff1b15 this.BufferLength=this.analyser.fftSize\uff1b16 this.dataArray=new Uint8Array(this.BufferLength)\uff1b17 Break\uff1b18}\u3002\n\u6211\u5df2\u7ecf\u5bf9\u8fd9\u4e9b\u6570\u5b57\u505a\u4e86\u5f88\u591a\u8c03\u6574\uff0c\u800c\u4e14\u6211\u8fd8\u4f1a\u7ee7\u7eed\u8fd9\u6837\u505a\u3002\u5173\u4e8efftSize\u548crequencyBinCount\uff1arequencyBinCount\u7684\u6ce8\u91ca\u662f\u5728\u8bbe\u7f6efftSize\u4e4b\u540e\u7acb\u5373\u8bbe\u7f6e\u7684\uff0c\u5b83\u901a\u5e38\u53ea\u662ffftSize\u503c\u7684\u4e00\u534a\u3002\u8fd9\u4e9b\u503c\u662f\u5173\u4e8e\u60a8\u60f3\u8981\u4ece\u6211\u63a5\u4e0b\u6765\u8981\u8ba8\u8bba\u7684\u4e3b\u8981\u5206\u6790\u5668\u51fd\u6570\u63a5\u6536\u7684\u6570\u636e\u91cf\u3002\u5982\u60a8\u6240\u89c1\uff0c\u5b83\u4eec\u76f4\u63a5\u63a7\u5236\u6570\u636e\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u60a8\u5c06\u4f7f\u7528\u8be5\u6570\u7ec4\u5728\u6bcf\u6b21\u7ed8\u5236\u8c03\u7528\u65f6\u5b58\u50a8\u97f3\u9891\u6570\u636e\u3002\n\u5728\u6bcf\u6b21\u7ed8\u5236\u8c03\u7528\u65f6\uff0c\u6839\u636e\u53ef\u89c6\u5316\u7684\u7c7b\u578b\uff0c\u4f7f\u7528\u4e0a\u9762\u521b\u5efa\u7684\u6570\u7ec4\u8c03\u7528getByteFrequencyData\u6216getByteTimeDomainData\uff0c\u5b83\u5c06\u7528\u6570\u636e\u586b\u5145\u3002\u7136\u540e\u5728\u6bcf\u4e2a\u5143\u7d20\u4e0a\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u5faa\u73af\u5e76\u5f00\u59cb\u7ed8\u56fe\u3002\u8fd9\u662f\u6211\u7684\u6b63\u5f26\u6ce2\u4ee3\u7801\uff1a\n1this.analyser.getByteTimeDomainData(this.dataArray)\uff1b2this.ctx.lineWidth=2\uff1b3this.ctx.strokeStyle=AudioSecond daryStroke\uff1b4 5this.ctx.eginPath()\uff1b6 7\u4e2a\u5b57\u6bcdv\uff0cy\uff1b8 for(\u8bbei=0\uff1bi&lt\uff1bthis.BufferLength\uff1bi++){9v=this.dataArray[i]/128.0\uff1b10y=v*\u9ad8\u5ea6/2\uff1b11 12 if(i==0){13 this.ctx.moveTo(x\uff0cy)\uff1b14}Else{15 this.ctx.lineTo(x\uff0cy)\uff1b16}17 18 x+=width*1.0/this.BufferLength\uff1b19}20 21 this.ctx.lineTo(width\uff0cHeight/2)\uff1b22 this.ctx.strok()\uff1b\n\u6240\u4ee5\u6211\u505a\u4e86\u6240\u6709\u6211\u521a\u624d\u8c08\u5230\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u6709\u51e0\u5929\u6211\u65e0\u6cd5\u5728Safari\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u662f\u56e0\u4e3a\u9519\u8bef\u6216\u5176\u4ed6\u539f\u56e0\uff0c\u800c\u662f\u56e0\u4e3agetByteFrequencyData\u548cgetByteTimeDomainData\u6bcf\u6b21\u90fd\u75280\u586b\u5145\u6570\u7ec4\u3002\u4e0d\u7ba1\u6211\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u53ef\u4ee5\u5f88\u597d\u5730\u83b7\u53d6Firefox\u4e2d\u7684\u97f3\u9891\u6570\u636e\u3002\n\u6240\u4ee5\u4e00\u5f00\u59cb\uff0c\u6211\u60f3\u5b83\u5728Safari\u4e2d\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\uff0c\u6211\u53ea\u80fd\u7b49\u5230\u82f9\u679c\u4fee\u590d\u5b83\u3002\u4f46\u662f\u540e\u6765\u6211\u53d1\u73b0\u4e86\u8fd9\u4e2a\u793a\u4f8b\u97f3\u9891\u9879\u76ee\uff0c\u5e76\u6ce8\u610f\u5230\u5b83\u5728Safari\u4e2d\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n\u6240\u4ee5\u6211\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u7814\u7a76\u4ee3\u7801\uff0c\u8bd5\u56fe\u7406\u89e3\u6211\u7684\u4ee3\u7801\u548c\u4ed6\u4eec\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u6211\u5bf9\u6211\u7684\u4ee3\u7801\u505a\u4e86\u5f88\u591a\u4fee\u6539\uff0c\u4f7f\u5176\u66f4\u50cf\u4ed6\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u6700\u5927\u7684\u533a\u522b\u4e4b\u4e00\u662f\uff0c\u5b83\u4eec\u5c06\u97f3\u9891\u6e90\u8fde\u63a5\u5230\u4e0d\u540c\u7684\u97f3\u9891\u5931\u771f\u8282\u70b9\uff0c\u4ee5\u5b9e\u9645\u66f4\u6539\u97f3\u9891\u3002\u6211\u53ea\u60f3\u521b\u5efa\u4e00\u4e2a\u53ef\u89c6\u5316\u6548\u679c\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\nWaveShaperNode\uff1a\u4f7f\u7528BaseAudioContext.createWaveShaper\u521b\u5efa\u975e\u7ebf\u6027\u5931\u771f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u66f4\u6539\u97f3\u9891\u6570\u636e\u3002\n\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e00\u4e2a\u8fde\u63a5\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u4f20\u9012\u53e6\u4e00\u4e2a\u4e0a\u4e0b\u6587\u3001\u8f93\u51fa\u6216\u8fc7\u6ee4\u5668\u3002\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u4ee5\u4e0b\u662f\u793a\u4f8b\u9879\u76ee\u4e2d\u5c06\u5b83\u4eec\u5168\u90e8\u8fde\u63a5\u8d77\u6765\u793a\u4f8b\uff1a\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u53ea\u662f\u5c1d\u8bd5\u4e3a\u547c\u53eb\u521b\u5efa\u53ef\u89c6\u5316\u6548\u679c\uff0c\u8bf7\u4e0d\u8981\u8fde\u63a5\u5230\u97f3\u9891\u4e0a\u4e0b\u6587\u76ee\u6807\u3002\u7528\u6237\u5c06\u542c\u5230\u81ea\u5df1\u7684\u8c08\u8bdd\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u8bd5\u7740\u5c06\u8fd9\u4e9b\u4e1c\u897f\u6dfb\u52a0\u5230\u6211\u7684\u4ee3\u7801\u4e2d\uff0c\u770b\u770b\u8fd9\u662f\u5426\u80fd\u8ba9\u5b83\u5728Safari\u4e2d\u5de5\u4f5c\uff0c\u4f46\u6211\u6ca1\u6709\u8fd0\u6c14\u3002\n\u6211\u5f00\u59cb\u5bf9\u8bd5\u56fe\u5f04\u6e05\u695a\u8fd9\u4ef6\u4e8b\u611f\u5230\u975e\u5e38\u6cae\u4e27\u3002\u5f53\u6211\u8ba4\u4e3aSafari\u53ea\u662f\u574f\u4e86(\u56e0\u4e3a\u5b83\u901a\u5e38\u662f\u574f\u7684)\u65f6\uff0c\u6211\u60f3\u8ba9\u5b83\u8fc7\u53bb\uff0c\u4f46\u56e0\u4e3a\u6211\u77e5\u9053\u5b83\u53ef\u4ee5\u5728Safari\u4e2d\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u8ba9\u5b83\u4e00\u4e2a\u4eba\u5446\u7740\u3002\n\u6700\u540e\uff0c\u6211\u4ece\u8be5\u793a\u4f8b\u4e0b\u8f7d\u4e86\u5b9e\u9645\u7684HTML\u548cJavascript\u6587\u4ef6\uff0c\u5e76\u5f00\u59cb\u4ece\u4ed6\u4eec\u7684\u4ee3\u7801\u4e2d\u6e05\u9664\u5783\u573e\uff0c\u5728\u672c\u5730\u8fd0\u884c\uff0c\u770b\u770b\u5b83\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\u5b83\u786e\u5b9e\u505a\u5230\u4e86\u3002\u6240\u4ee5\u73b0\u5728\u6211\u5728\u7f16\u8f91\u6211\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u548c\u4ed6\u4eec\u7684\u4ee3\u7801\uff0c\u8ba9\u5b83\u4eec\u51e0\u4e4e\u662f\u4e00\u6837\u7684\u3002\u6211\u786e\u5b9e\u505a\u5230\u4e86\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u4eec\u7684\u8fd8\u662f\u8d77\u4f5c\u7528\u4e86\uff0c\u800c\u6211\u7684\u4e0d\u8d77\u4f5c\u7528\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u5f00\u59cb\u62fc\u547d\u5730\u5728\u4ee3\u7801\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\u8bb0\u5f55\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u4ee5\u627e\u51fa\u4ed6\u5988\u7684\u662f\u600e\u4e48\u56de\u4e8b\u3002\u7136\u540e\u6211\u6ce8\u610f\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\n\u56fd\u5bb6\u88ab\u201c\u505c\u804c\u201d\u4e86\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u6211\u5728\u793a\u4f8b\u4ee3\u7801(\u6211\u5df2\u7ecf\u4e0b\u8f7d\u5e76\u5728\u6211\u7684\u673a\u5668\u4e0a\u8fd0\u884c)\u4e2d\u6267\u884c\u4e86\u76f8\u540c\u7684\u65e5\u5fd7\uff0c\u5b83\u6b63\u5728\u201c\u8fd0\u884c\u201d\u3002\n\u8c03\u7528Resume\u4f1a\u66f4\u6539\u72b6\u6001\uff0c\u7136\u540e\u4e00\u5207\u90fd\u4f1a\u6b63\u5e38\u5de5\u4f5c\u3002\u76f4\u5230\u4eca\u5929\uff0c\u6211\u4ecd\u7136\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u793a\u4f8b\u4ee3\u7801\u4e0d\u9700\u8981\u8be5\u884c\u3002\n\u5c31\u50cf\u6211\u7f51\u7ad9\u4e0a\u7684\u5176\u4ed6\u4e1c\u897f\u4e00\u6837\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5fc5\u987b\u652f\u6301\u4e0d\u540c\u7684\u914d\u8272\u65b9\u6848(\u4ee5\u53ca\u5c4f\u5e55\u5927\u5c0f\u548c\u79fb\u52a8\u8bbe\u5907)\u3002\u5f53\u8bd5\u56fe\u5728\u753b\u5e03\u4e0a\u7ed8\u5236SVG\u65f6\uff0c\u8fd9\u662f\u51fa\u4eba\u610f\u6599\u7684\u56f0\u96be\u3002\n\u6211\u6b63\u5728\u4f7f\u7528FontAwesom\u4f5c\u4e3a\u6211\u5728\u7f51\u7ad9\u4e0a\u7684\u6240\u6709\u56fe\u6807\u3002\u6211\u60f3\u7528\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\u6765\u5b9e\u73b0\u8fd9\u4e9b\u53ef\u89c6\u5316\u3002FontAwese\u6587\u4ef6\u90fd\u662fSVG(\u8fd9\u5f88\u68d2)\uff0c\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u5982\u4f55\u5728Javascript\u4e2d\u7528\u4e0d\u540c\u7684\u989c\u8272\u7ed8\u5236\u56fe\u50cf\u3002\u6211\u51b3\u5b9a\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662f\u5c06SVG\u6587\u4ef6\u52a0\u8f7d\u5230\u4e00\u4e2aJavascript Image\u5bf9\u8c61\u4e2d\uff0c\u7136\u540e\u5728\u6bcf\u6b21\u7ed8\u5236\u8c03\u7528\u65f6\u5c06\u5176\u7ed8\u5236\u5230\u753b\u5e03\u4e0a\u3002\n\u8fd9\u5f88\u7ba1\u7528\uff0c\u4f46\u5373\u4f7f\u5728\u66f4\u6539\u4e86\u586b\u5145\u548c\u7b14\u89e6\u989c\u8272\u4e4b\u540e\uff0c\u5b83\u4e5f\u53ea\u5c06\u5176\u7ed8\u5236\u4e3a\u9ed1\u8272\u3002\u56e0\u6b64\uff0c\u5728\u4e00\u4e9b\u7f51\u7edc\u641c\u7d22\u4e4b\u540e\uff0c\u6211\u8bfb\u5230\u6709\u4eba\u51b3\u5b9a\u5728\u5c4f\u5e55\u5916\u753b\u5e03\u4e0a\u753b\u51fa\u4e00\u5e45\u56fe\u50cf\uff0c\u8bfb\u53d6\u6240\u6709\u56fe\u50cf\u6570\u636e\uff0c\u5982\u679calpha\u901a\u9053\u5927\u4e8e0\uff0c\u5219\u624b\u52a8\u91cd\u5199\u6bcf\u4e2a\u50cf\u7d20\u7684\u56fe\u50cf\u6570\u636e\u3002\u7136\u540e\uff0c\u5b9e\u9645\u7684\u53ef\u89c6\u5316\u4ee3\u7801\u5c31\u53ef\u4ee5\u5c06\u56fe\u50cf\u4ece\u5c4f\u5e55\u5916\u7684\u753b\u5e03\u590d\u5236\u5230\u771f\u5b9e\u7684\u753b\u5e03\u4e0a\u3002\n\u6240\u4ee5\u6211\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002\u4f46\u5f53\u7136\u4e5f\u6709\u4e00\u4e2a\u7279\u5b9a\u4e8e\u6d4f\u89c8\u5668\u7684\u95ee\u9898\u3002\u4f46\u4e0d\u662f\u4ece\u8428\u6cd5\u91cc\u6765\u7684\uff01\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5c06SVG\u6587\u4ef6\u52a0\u8f7d\u5230Image\u5bf9\u8c61(\u5c4f\u5e55\u5916)\u5b9e\u9645\u4e0a\u5e76\u4e0d\u586b\u5145Firefox\u4e2d\u8be5\u5bf9\u8c61\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5c5e\u6027\u3002\u5728Safari\u4e2d\u662f\u8fd9\u6837\u7684\uff0c\u8fd9\u4e5f\u662f\u6211\u75283\u6d4b\u8bd5\u8fc7\u7684\u3002\u6211\u5b9e\u9645\u4e0a\u9700\u8981\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u6765\u505a\u753b\u5e03\u7ed8\u5236\u64cd\u4f5c\u3002\n\u56e0\u6b64\uff0c\u4f5c\u4e3a\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\uff0c\u6211\u5c1d\u8bd5\u52a0\u8f7dSVG\uff0c\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u5bbd\u5ea6\uff0c\u5219\u4f7f\u7528Pixelmator\u52a0\u8f7d\u4eceSVG\u751f\u6210\u7684PNG\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u52a0\u8f7d\u56fe\u50cf\u5e76\u5c06\u5176\u7ed8\u5236\u5230\u753b\u5e03\u7684\u4ee3\u7801\uff1a\n1audioImage.onload=()=&gt\uff1b{2 if(\uff01audioImage.width){3 audioImage.src=&#39\uff1b/static/image/microphone e.png&#39\uff1b\uff1b4 return\uff1b5}6 7 audioCanvas.width=audioImage.width\uff1b8 audioCanvas.high=audioImage.high\uff1b9 10 const ctx=audioCanvas.getContext(&#39\uff1b2d&#39\uff1b)\uff1b11 ctx.drawImage(audioImage\uff0c0\uff0c0)\uff1b12 13 const svgData=ctx.getImageData(0\uff0c0\uff0caudioImage.width\uff0caudioImage.high)\uff1b14 const data=svgData.data\uff1b15 for(\u8bbei=0\uff1bi&lt\uff1bdata.length\uff1bi+=4){16if(data[i+3]\uff01==0){17data[i]=parseInt(audioStroke.substring(1\uff0c3)\uff0c16)\uff1b18 data[i+1]=parseInt(audioStroke.substring(3\uff0c5)\uff0c16)\uff1b19data[i+2]=parseInt(audioStroke.substring(5\uff0c7)\uff0c16)\uff1b20}21}22 23ctx.putImageData(svgData\uff0c0\uff0c0)\uff1b24}\uff1b25 26audioImage.src=&#39\uff1b/static/image/microhone.svg&#39\uff1b\uff1b\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u77e5\u9053AudioStrok\u503c\u59cb\u7ec8\u91c7\u7528#000000\u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u6211\u53ea\u662f\u89e3\u6790\u989c\u8272\u5e76\u5c06\u5b83\u4eec\u5199\u5165\u6570\u7ec4\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u7ed8\u5236\u8fc7\u4efb\u4f55\u753b\u5e03\u5143\u7d20(\u7279\u522b\u662f\u5f53\u60a8\u540c\u65f6\u5177\u6709\u9ad8\u548c\u4f4eDPI\u76d1\u89c6\u5668\u65f6)\uff0c\u60a8\u5c31\u77e5\u9053\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u770b\u8d77\u6765\u5206\u8fa8\u7387\u76f8\u5f53\u4f4e\u3002\u6211\u7ed8\u5236\u7684\u4efb\u4f55\u753b\u5e03\u90fd\u4f1a\u8003\u8651window.devicePixelRatio\u3002\n\u5176\u60f3\u6cd5\u662f\u8c03\u6574\u753b\u5e03\u7684\u201c\u5b9e\u9645\u201d\u5bbd\u5ea6\u4ee5\u8003\u8651\u5c4f\u5e55\u50cf\u7d20\u6bd4\u7387\uff0c\u7136\u540eCSS\u5c06\u5176\u8c03\u6574\u56de\u539f\u59cb\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u5728\u9ad8\u5206\u8fa8\u7387\u5c4f\u5e55\u4e0a(\u5c31\u50cf\u5728\u4efb\u4f55Macbook\u4e2d\u4e00\u6837)\uff0cwindow.devicePixelRatio\u5c06\u4e3a2\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5c06\u753b\u5e03\u7684\u5927\u5c0f\u8c03\u6574\u4e3a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u4e24\u500d\uff0c\u7136\u540eCSS\u5c06\u5176\u5927\u5c0f\u7f29\u5c0f\u5230\u60a8\u60f3\u8981\u7684\u5927\u5c0f\u3002\n\u8fd9\u4e0e\u5728Retina\u5c4f\u5e55\u9996\u6b21\u9762\u4e16\u65f6\u521b\u5efa2\u500d\u56fe\u50cf\u7684\u6982\u5ff5\u76f8\u540c\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u7f29\u5c0f\u5c3a\u5bf8\uff0c\u770b\u8d77\u6765\u66f4\u6e05\u6670\u3002\n1 const dpr=window.devicePixelRatio||1\uff1b2this.canvasRect=this.canvas.get\u8fb9\u754cClientRect()\uff1b3 4this.canvas.width=this.canvasRect.width*dpr\uff1b5this.canvas.high=this.canRect.high*dpr\uff1b6this.ctx=this.canvas.getContext(&#39\uff1b2d&#39\uff1b)\uff1b7this.ctx.scale(DPR\uff0cDPR)\uff1b8 9this.canvas.style.width=this.canvasRect.width+&#39\uff1bPX&#39\uff1b\uff1b10 this.canvas.style.high=this.canvasRect.high+&#39\uff1bpx&#39\uff1b\uff1b\n\u6211\u5b58\u50a8canvasRect\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5c06\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7528\u4e8e\u6240\u6709\u5176\u4ed6\u7ed8\u56fe\u8ba1\u7b97\u3002\n\u6211\u771f\u7684\u5f88\u559c\u6b22\u8fd9\u4ef6\u4e8b\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u6709\u51e0\u6b21\u6211\u8ba4\u4e3a\u5b83\u5728\u4e00\u4e9b\u6d4f\u89c8\u5668\u4e2d\u4f1a\u5b8c\u5168\u5d29\u6e83\uff0c\u6709\u90a3\u4e48\u4e00\u77ac\u95f4\u6211\u8ba4\u4e3a\u6211\u5fc5\u987b\u653e\u5f03\u6211\u7684\u76ee\u6807\uff0c\u8ba9\u7f51\u7ad9\u4e0a\u7684\u6240\u6709\u4e1c\u897f\u90fd\u80fd\u5bf9\u989c\u8272\u65b9\u6848\u5207\u6362\u505a\u51fa\u53cd\u5e94\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u505a\u4e86\u6211\u60f3\u505a\u7684\u4e00\u5207\u3002\n\u73b0\u5728\uff0c\u6211\u53ea\u9700\u8981\u4e0d\u65ad\u5730\u5904\u7406\u8fd9\u4e9bAnalyserNode\u503c\uff0c\u76f4\u5230\u5f97\u5230\u770b\u8d77\u6765\u5b8c\u7f8e\u7684\u4e1c\u897f\u30024.\u3002\n\u770b\u8d77\u6765\u8fd9\u4e2aAPI\u7684\u65e9\u671fMozilla\u7248\u672c\u4ece2010\u5e74\u5c31\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u4f46\u662f\u82f9\u679c\u516c\u53f8\u6700\u8fd1\u4e00\u76f4\u5728\u52aa\u529b\u5236\u5b9a\u8fd9\u4e2a\u5b98\u65b9\u7684Web Audio API\u6807\u51c6\u3002\u8bf7\u53c2\u9605\u4ed6\u4eec\u7684Safari\u6280\u672f\u9884\u89c8\u7248\u53d1\u884c\u8bf4\u660e\u7684\u7248\u672c115(\u622a\u81f3\u6211\u64b0\u5199\u672c\u6587\u4e4b\u65e5\u7684\u5f53\u524d\u7248\u672c)\u3002\u21a9\ufe0e\u3002\n\u6211\u4e00\u76f4\u5728\u4f7f\u7528Google\u7684\u8fd9\u4e2a\u201cAdapter.js\u201d\u586b\u5145\u7a0b\u5e8f\u6765\u6d88\u9664WebRTC\u5bf9\u8c61\u4e0e\u6d4f\u89c8\u5668\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5b83\u5bf9Web Audio API\u4e5f\u5f88\u6709\u5e2e\u52a9\u3002\u4e00\u4e9b\u6d4f\u89c8\u5668\u4ecd\u7136\u5c06AudioContext\u4f5c\u4e3awebkitAudioContext\u7684\u524d\u7f00\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528Adapter.js\u4e4b\u7c7b\u7684\u5185\u5bb9\uff0c\u5219\u5fc5\u987b\u6267\u884cnew(window.AudioContext||window.webkitAudioContext)()\u3002\u21a9\ufe0e\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u7ecf\u8fc7\u8fd9\u4e48\u957f\u65f6\u95f4\u7684\u6597\u4e89\u548c\u62b1\u6028\uff0c\u6211\u4ecd\u7136\u5728\u4f7f\u7528Safari\u5f00\u53d1Safari\u95ee\u9898(\u5176\u4e2d\u6709\u5f88\u591a)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3aFirefox\u5728\u6211\u8fdb\u884cWebRTC\u6d4b\u8bd5\u65f6\u8fd0\u884c\u6211\u7684\u7c89\u4e1d\u3002\u21a9\ufe0e\u3002\nLOL\u3002\u7535\u8111\u662f\u6ca1\u6709\u201c\u5b8c\u7f8e\u201d\u7684\u3002\u8fd9\u9879\u5de5\u4f5c\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\u3002\u5728\u5b8c\u5168\u66ff\u6362\u4e4b\u524d\uff0c\u6211\u4f1a\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u4ee3\u7801\u3002\u21a9\ufe0e\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4f60\u6709\u7528\u5417\uff1f\u60f3\u8981\u652f\u6301\u6b64\u7f51\u7ad9\u5417\uff1f\u4e86\u89e3\u66f4\u591a\u3002\u8c22\u8c22\u4f60\u7684\u9605\u8bfb\uff01\n\u4ee3\u7801\u6dfb\u52a0\u4ee3\u7801\uff0c\u4ee5\u4fbf\u60a8\u4ee5\u540e\u53ef\u4ee5\u7f16\u8f91\u6216\u5220\u9664\u6b64\u6ce8\u91ca\u3002\u5bf9\u591a\u4e2a\u6ce8\u91ca\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u548c\u4ee3\u7801\u4f1a\u5c06\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77\u3002\u4e86\u89e3\u66f4\u591a\u3002\n{##**$$}\u901a\u8fc7\u53d1\u5e03\u8bc4\u8bba\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u4f7f\u7528\u6761\u6b3e\u3002", "note_en": "I\u2019ve been working on getting WebRTC video chat working here on the website for a few weeks now. I finally got to the point where both text, video chat, and screen sharing all work really well, but somewhere in the back of my mind I kept thinking about complaints about \u201c Zoom fatigue\u201d during the pandemic:\n Zoom fatigue, Hall argues now, is real. \u201cZoom is exhausting and lonely because you have to be so much more attentive and so much more aware of what\u2019s going on than you do on phone calls.\u201d If you haven\u2019t turned off your own camera, you are also watching yourself speak, which can be arousing and disconcerting. The blips, delays and cut off sentences also create confusion. Much more exploration needs to be done, but he says, \u201cmaybe this isn\u2019t the solution to our problems that we thought it might have been.\u201d Phone calls, by comparison, are less demanding. \u201cYou can be in your own space. You can take a walk, make dinner,\u201d Hall says.\n  It\u2019s kind of an interesting thing to have on your mind while spending weeks writing/debugging/testing video chat code.\n So I decided to add an audio-only mode. And if I was gonna do that, I had to show something cool in place of the video. So I figured I would try to add audio visualizations when one or both of the users didn\u2019t have video on. Using the relatively recent  1  Web Audio API seemed like the right way to go.\n         To create audio visualizations, the first thing you\u2019ll need is an  AnalyserNode, which you can get from the  createAnalyser method of a  BaseAudioContext. You can get both of these things pretty easily  2 like this:\n  Next, create a  MediaStreamAudioSourceNode from an existing data stream (I use either the local or remote data streams from either  getUserMedia or from the \u2018track\u2019 event of  RTCPeerConnection respectively) using  AudioContext.createMediaStreamSource. Then you can connect that audio source to the analyser object like this:\n    window.requestAnimationFrame is nice. Call it, passing in your drawing function, and then inside that function call  requestAnimationFrame again. Get yourself a nice little recursive loop going that\u2019s automatically timed properly by the browser.\n In my situation, there will either be 0, 1, or 2 visualizations running, since either side can choose either video chat, audio-only (\u2026except during screen sharing), or just text chat. So I have one loop that draws both. It looks like this:\n  I created the class for those visualization objects, and they handle whether or not to draw. They each contain the analyser, source, and context objects for their visualization.\n Then when I detect that loop doesn\u2019t have to run anymore, I can cancel it using that  audioCancel value:\n    Like in the  example you\u2019ll see a lot if you look at the MDN documentation for this stuff, I provide options for two audio visualizations: frequency bars and a sine wave. Here\u2019s how I configure the analyser for each type:\n 1 switch ( this.type) {  2  case  &#39;frequencybars&#39; :  3  this.analyser.minDecibels  =  - 90;  4  this.analyser.maxDecibels  =  - 10;  5  this.analyser.smoothingTimeConstant  =  0.85;  6  this.analyser.fftSize  =  256;  7  this.bufferLength  =  this.analyser.frequencyBinCount;  8  this.dataArray  =  new Uint8Array( this.bufferLength);  9  break; 10  default : 11  this.analyser.minDecibels  =  - 90; 12  this.analyser.maxDecibels  =  - 10; 13  this.analyser.smoothingTimeConstant  =  0.9; 14  this.analyser.fftSize  =  1024; 15  this.bufferLength  =  this.analyser.fftSize; 16  this.dataArray  =  new Uint8Array( this.bufferLength); 17  break; 18}\n I\u2019ve adjusted these numbers a lot, and I\u2019m gonna keep doing it. A note about  fftSize and  frequencyBinCount:  frequencyBinCount is set right after you set  fftSize and it\u2019s usually just half the  fftSize value. These values are about the amount of data you want to receive from the main analyser functions I\u2019m about to talk about next. As you can see, they directly control the size of the data array that you\u2019ll use to store the audio data on each draw call.\n  On each draw call, depending on the type of visualization, call either  getByteFrequencyData or  getByteTimeDomainData with the array that was created above, and it\u2019ll be filled with data. Then you run a simple loop over each element and start drawing. Here\u2019s my sine wave code:\n 1 this.analyser.getByteTimeDomainData( this.dataArray);  2 this.ctx.lineWidth  =  2;  3 this.ctx.strokeStyle  = audioSecondaryStroke;  4  5 this.ctx.beginPath();  6  7 let v, y;  8 for ( let i  =  0; i  &lt;  this.bufferLength; i ++) {  9 v  =  this.dataArray[i]  /  128.0; 10 y  = v  * height  /  2; 11 12  if (i  ===  0) { 13  this.ctx.moveTo(x, y); 14 }  else { 15  this.ctx.lineTo(x, y); 16 } 17 18 x  += width  *  1.0  /  this.bufferLength; 19} 20 21 this.ctx.lineTo(width, height  /  2); 22 this.ctx.stroke();\n   So I did all of this stuff I just talked about, but for  days I could  not get this to work in Safari. Not because of errors or anything, but because both  getByteFrequencyData and  getByteTimeDomainData just filled the array with 0s every time. No matter what I did. I was able to get the audio data in Firefox just fine.\n So at first, I figured it just didn\u2019t work at all in Safari and I would just have to wait until Apple fixed it. But then I came across  this sample audio project and noticed it worked just fine in Safari.\n So I studied the code for an hour trying to understand what was different about my code and theirs. I made a lot of changes to my code to make it more like what they were doing. One of the big differences is that they\u2019re connecting the audio source to different audio distortion nodes to actually change the audio. I just want to create a visualization so I wasn\u2019t using any of those objects.\n   WaveShaperNode: Use  BaseAudioContext.createWaveShaper to create a non-linear distortion. You can use a custom function to change the audio data.\n Each one of these objects has a  connect function where you pass another context, output, or filter. Each one has a certain number of inputs and outputs. Here\u2019s an example from that sample project of connecting all of them:\n  Note: Don\u2019t connect to your audio context  destination if you\u2019re just trying to create a visualization for a call. The user will hear themselves talking.\n Anyway, I tried adding these things to my code to see if that would get it working in Safari, but I had no luck.\n  I was starting to get  real frustrated trying to figure this out. I was gonna let it go when I thought Safari was just broken (because it usually is), but since I knew it  could work in Safari, I couldn\u2019t leave it alone.\n Eventually I downloaded the actual HTML and Javascript files from that sample and started removing shit from their code, running it locally and seeing if it worked. Which it did. So now I\u2019m editing my own code, and  their code, to get them to be pretty much the same. Which I did. And  still theirs worked and mine didn\u2019t.\n Next I just started desperately logging every single object at different points in my code to figure out what the fuck was going on. Then I noticed something.\n   The  state is \u201csuspended\u201d? Why? I don\u2019t know. I did the same log in the sample code (that I had downloaded and was running on my machine) and it was \u201crunning\u201d.\n   Calling  resume changes the state and then everything works. To this day I still don\u2019t know why the sample code didn\u2019t need that line.\n  Like everything else on my site, all of this must support different color schemes (and screen sizes, and mobile devices). That was surprisingly difficult when trying to draw an SVG on the canvas.\n I\u2019m using  FontAwesome for all my icons on the site. I wanted to use one of them for these visualizations. The FontAwesome files are all SVGs (which is great), but I didn\u2019t know how to draw the image in different colors in Javascript. The way I decided to do this was to load the SVG file into a Javascript  Image object, then draw that onto the canvas each draw call.\n That worked, but it only drew it black even after changing the fill and stroke colors. So after some web searching I read about someone deciding to draw out an image on an offscreen canvas, reading all the image data, and manually rewriting the image data for each pixel if the alpha channel is greater than 0. Then the actual visualization code can just copy the image from the offscreen canvas onto the real one.\n So that\u2019s what I did. But of course there was a browser specific issue. But  not from Safari!!!!!\n It turns out that loading a SVG file into an  Image object (offscreen) doesn\u2019t actually populate the width and height attributes of that object in Firefox. It does in Safari, which is what I tested this with  3. I actually need the width and height to do the canvas drawing operations.\n So as a workaround, I try to load the SVG, and if the object has no width, I load a png file I made from the SVG using Pixelmator. Here\u2019s the code for loading the image and drawing it to a canvas:\n 1audioImage.onload  = () =&gt; {  2  if ( !audioImage.width) {  3 audioImage.src  =  &#39;/static/images/microphone.png&#39;;  4  return;  5 }  6  7 audioCanvas.width  = audioImage.width;  8 audioCanvas.height  = audioImage.height;  9 10  const ctx  = audioCanvas.getContext( &#39;2d&#39;); 11 ctx.drawImage(audioImage,  0,  0); 12 13  const svgData  = ctx.getImageData( 0,  0, audioImage.width, audioImage.height); 14  const data  = svgData.data; 15  for ( let i  =  0; i  &lt; data.length; i  +=  4) { 16  if (data[i  +  3]  !==  0) { 17 data[i]  =  parseInt(audioStroke.substring( 1,  3),  16); 18 data[i  +  1]  =  parseInt(audioStroke.substring( 3,  5),  16); 19 data[i  +  2]  =  parseInt(audioStroke.substring( 5,  7),  16); 20 } 21 } 22 23 ctx.putImageData(svgData,  0,  0); 24}; 25 26audioImage.src  =  &#39;/static/images/microphone.svg&#39;;\n In this case, I know the  audioStroke value is always in the format  #000000, so I just parse the colors and write them to the array.\n  If you\u2019ve done any canvas element drawing (especially when you have both high and low DPI monitors) you know by default it looks pretty low resolution. Any canvas drawing I do takes  window.devicePixelRatio into account.\n The idea is to adjust the canvas \u201creal\u201d width to factor in the screen pixel ratio, then CSS resize it back down to the original size. So on a high resolution screen (like in any Macbook),  window.devicePixelRatio will be 2, so you\u2019ll resize the canvas to be twice the width and height, and then CSS size it down to what you wanted.\n This is the same concept as creating 2x images when Retina screens first came out so they can be sized down and look sharp af.\n  1 const dpr  =  window.devicePixelRatio  ||  1;  2 this.canvasRect  =  this.canvas.getBoundingClientRect();  3  4 this.canvas.width  =  this.canvasRect.width  * dpr;  5 this.canvas.height  =  this.canvasRect.height  * dpr;  6 this.ctx  =  this.canvas.getContext( &#39;2d&#39;);  7 this.ctx.scale(dpr, dpr);  8  9 this.canvas.style.width  =  this.canvasRect.width  +  &#39;px&#39;; 10 this.canvas.style.height  =  this.canvasRect.height  +  &#39;px&#39;;\n I store the canvasRect so I can use the width and height for all the other drawing calculations.\n  I really like the way this eventually turned out. There were a few times where I figured it would just be completely broken in some browsers, and a brief moment where I thought I would have to give up on my goal to have everything on the site react to color scheme switches, but I actually did everything I wanted to.\n Now I just have to keep messing around with those  AnalyserNode values until I get something that looks perfect.  4\n It looks like the early Mozilla version of this API has been around since 2010, but Apple\u2019s been working on this official Web Audio API standard a lot recently. See release 115 (current as of the date I\u2019m writing this article) of their  Safari Technology Preview release notes.  \u21a9\ufe0e\n I\u2019ve been using  this \u201cadapter.js\u201d shim from Google to smooth over browser differences with WebRTC objects, and it\u2019s also helpful with Web Audio API. Some browsers still have  AudioContext prefixed as  webkitAudioContext so if you\u2019re not using something like adapter.js you\u2019ll have to do  new (window.AudioContext || window.webkitAudioContext)().  \u21a9\ufe0e\n It\u2019s funny how after all this time fighting with and complaining about Safari issues (of which there are  many) I still develop with Safari. In this case, a lot of the reason is because Firefox runs my fans when I do WebRTC testing.  \u21a9\ufe0e\n lol. There is no \u201cperfect\u201d with computers. The work never ends. I\u2019ll be messing with all of this code until it\u2019s completely replaced.  \u21a9\ufe0e\n      Was this post useful to you? Want to support this website?  Learn more. Thanks for reading!\n      Code    Add a Code so you can edit or delete this comment later. Using the same Name and Code for multiple comments will link them together.  Learn more.\n        \u00a0\u00a0\u00b7\u00a0\u00a0  By posting a comment, you are agreeing to the  Terms of Use.", "posttime": "2020-10-30 12:08:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u89c6\u5316,audio", "title": "\u83b7\u53d6\u4f7f\u7528Web Audio API\u7684\u97f3\u9891\u53ef\u89c6\u5316\u6548\u679c", "title_en": "Getting Audio Visualizations Working with Web Audio API", "transed": 1, "url": "https://dwayne.xyz/post/audio-visualizations-web-audio-api", "via": "", "real_tags": ["\u53ef\u89c6\u5316", "audio"]}, {"category": "", "categoryclass": "", "imagename": "ed10a29413bc8de69d7ef13a846eac9a.jpg", "infoid": 1032227, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2016\u5e74\uff0c\u6211\u5f00\u59cb\u4e3a\u4e00\u9879\u4f5c\u4e3a\u6570\u5b57\u6e38\u7267\u6c11\u751f\u6d3b\u7684\u5b9e\u9a8c\u6512\u94b1\u3002\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u4e0d\u5f97\u4e0d\u8ba4\u771f\u8003\u8651\u6211\u7684\u201c\u8dd1\u9053\u201d\u4f1a\u662f\u4ec0\u4e48\u3002\u5982\u679c\u6211\u6ca1\u6709\u6536\u5165\uff0c\u800c\u6211\u60f3\u7ee7\u7eed\u65c5\u884c\uff0c\u6211\u7684\u94b1\u80fd\u7ef4\u6301\u591a\u4e45\uff1f\n\u6211\u51b3\u5b9a\u505a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8d4c\u6ce8\u5b9e\u9a8c\uff0c\u6211\u8ba4\u4e3a\u5728\u56fd\u5916\u5446\u4e24\u4e2a\u6708\u5c31\u8db3\u4ee5\u8861\u91cf\u8fd9\u4e2a\u6570\u5b57\u6e38\u7267\u6c11\u65cf\u7684\u751f\u6d3b\u662f\u600e\u4e48\u56de\u4e8b\u4e86\u3002\n\u6211\u8ba1\u7b97\u4e86\u6211\u6bcf\u4e2a\u6708\u7684\u5f00\u652f-\u623f\u79df\uff0c\u98df\u7269\uff0c\u6240\u6709\u7684\u5927\u4ef6\u7269\u54c1-\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u81f3\u5c11\u76f8\u5f53\u4e8e\u4e24\u4e2a\u6708\u5f00\u652f\u7684\u201c\u65c5\u884c\u57fa\u91d1\u201d\u3002\u5373\u4f7f\u6211\u611f\u5174\u8da3\u7684\u5357\u7f8e\u56fd\u5bb6\u7684\u751f\u6d3b\u6210\u672c\u8f83\u4f4e\uff0c\u6211\u4e5f\u5e0c\u671b\u6709\u66f4\u5927\u7684\u5229\u6da6\u7387\u6765\u8ba1\u5165\u610f\u60f3\u4e0d\u5230\u7684\u8d39\u7528\uff0c\u5982\u673a\u7968\u3001\u4e0d\u5f97\u4e0d\u7d27\u6025\u8d2d\u4e70Airbnb\uff0c\u4ee5\u53ca\u6076\u4f5c\u5267\u3002\n\u6211\u4ece\u90a3\u6b21\u65c5\u884c\u56de\u6765\uff0c\u5e26\u56de\u6765\u7684\u94b1\u6bd4\u6211\u9884\u7b97\u7684\u8981\u591a\u4e00\u70b9\u3002\u2026\u3002\u611f\u89c9\u5f88\u597d\u3002\n\u6211\u7b2c\u4e00\u6b21\u5c1d\u5230\u4e86\u4e3a\u81ea\u5df1\u4e70\u4e0b\u672a\u6765\u51e0\u4e2a\u6708\u7684\u6ecb\u5473\uff0c\u6211\u4e0d\u4f1a\u56de\u53bb\u4e86\u3002\n\u4e00\u65b9\u9762\uff0c\u5efa\u7acb\u5e94\u6025\u57fa\u91d1\u3002\u50cf\u6234\u592b\u00b7\u62c9\u59c6\u9f50(Dave Ramsey)\u8fd9\u6837\u7684\u4e13\u5bb6\u5efa\u8bae\u8bbe\u7acb1000\u7f8e\u5143\u7684\u521d\u59cb\u57fa\u91d1\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u60f3\u60f3\u9000\u4f11--\u53ef\u80fd\u662f\u6570\u5341\u4e07\u7f8e\u5143\uff0c\u4e5f\u53ef\u80fd\u662f\u6570\u767e\u4e07\u7f8e\u5143\u3002\n\u5bcc\u8fbe\u6295\u8d44(Fidelity Investments)\u5efa\u8bae\u201c40\u5c81\u7684\u4eba\u5e94\u8be5\u62e5\u6709\u4e24\u500d\u4e8e\u5176\u5e74\u6536\u5165\u7684\u50a8\u84c4\u91d1\uff1b\u523050\u5c81\u65f6\uff0c\u50a8\u84c4\u91d1\u5e94\u8be5\u662f\u6536\u5165\u76844\u500d\uff0c\u800c\u572860\u5c81\u65f6\uff0c\u9000\u4f11\u50a8\u84c4\u5e94\u8be5\u662f\u5f53\u524d\u6536\u5165\u76846\u500d\u3002\u201d(\u624e\u514b\u65af)\n\u8fd9\u79cd\u8d85\u957f\u671f\u524d\u666f\u5f88\u96be\u8ba9\u4eba\u8054\u60f3\u5230\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u521a\u5f00\u59cb\u5de5\u4f5c\u7684\u5e74\u8f7b\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u80cc\u8d1f\u7740\u5b66\u751f\u8d37\u6b3e\u503a\u52a1\uff0c\u6ca1\u6709\u591a\u5c11\u50a8\u84c4\u3002\n\u9700\u8981\u6709\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u9636\u6bb5\uff0c\u5728\u8bbe\u7acb\u7d27\u6025\u57fa\u91d1(\u57fa\u672c)\u548c\u8ba1\u5212\u9000\u4f11(\u9ad8\u7ea7)\u4e4b\u95f4\uff0c\u611f\u89c9\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\n\u6839\u636eBankrate\u7684\u6570\u636e\uff0c21%\u7684\u7f8e\u56fd\u4eba\u6ca1\u6709\u628a\u5e74\u6536\u5165\u4e2d\u7684\u4efb\u4f55\u4e00\u5206\u94b1\u5b58\u8d77\u6765\u3002\n\u76f8\u53cd\uff0c\u201c\u5341\u5206\u4e4b\u56db\u7684\u4eba\u8ba4\u4e3a\u81ea\u5df1\u662f\u6fc0\u8fdb\u7684\u77ed\u671f\u50a8\u84c4\u8005\uff0c\u4ed6\u4eec\u64c5\u957f\u4e3a\u7279\u5b9a\u7684\u76ee\u7684\u5b58\u94b1\uff0c\u6bd4\u5982\u65c5\u884c\u6216\u5a5a\u793c\uff0c\u4f46\u5e76\u4e0d\u603b\u662f\u4e3a\u672a\u6765\u5b58\u94b1\u3002\u201d(MarketWatch)\u3002\n\u5438\u6536\u8fd9\u4e9b\u6d1e\u5bdf\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528\u7ec4\u5757\u7684\u5fc3\u7406\u6280\u5de7\uff1a\u901a\u8fc7\u5c06\u4e8b\u60c5\u5206\u89e3\u6210\u53ef\u6d88\u5316\u7684\u7ec4\u5757\u6765\u7b80\u5316\u5b83\u4eec\u3002\n\u4e0b\u9762\u662f\u6211\u53d1\u73b0\u66f4\u6709\u6fc0\u52b1\u4f5c\u7528\u7684\u4e1c\u897f\uff1a\u4e00\u6b21\u4e3a\u81ea\u5df1\u4e89\u53d6\u672a\u6765\u4e00\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u7c97\u7565\u8ba1\u7b97\u4e00\u4e0b\uff1a\n\u6bcf\u6b21\u4f60\u5b58\u4e0b\u8fd9\u4e2a\u53f7\u7801\uff0c\u4f60\u5c31\u4e70\u4e86\u4e00\u4e2a\u6708\u7684\u672a\u6765\u81ea\u6211\uff01\n\u6bcf\u7701\u4e0b\u4e00\u4e2a\u6708\u7684\u5f00\u9500\uff0c\u4f60\u5c31\u4e3a\u672a\u6765\u7684\u81ea\u5df1\u8d62\u5f97\u4e86\u4e00\u4e2a\u6708\u7684\u81ea\u7531\u3002\n\u5047\u8bbe\u4f60\u7684\u5e73\u5747\u751f\u6d3b\u8d39\u662f3000\u7f8e\u5143\u3002\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u9884\u6d4b\u901a\u8d27\u81a8\u80c0\u6216\u7f8e\u5143\u4ef7\u503c\u5c06\u5982\u4f55\u53d8\u5316\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e00\u6570\u5b57\u589e\u52a020%\u3002\n\u73b0\u5728\uff0c\u4f60\u6bcf\u5b58\u4e0b3600\u7f8e\u5143\uff0c\u4f60\u5c31\u4e3a\u672a\u6765\u7684\u81ea\u5df1\u591a\u4e70\u4e86\u4e00\u4e2a\u6708\u7684\u65e0\u5fe7\u6d88\u8d39\u3002\n\u4f7f\u7528\u6211\u4eec\u524d\u9762\u7684\u63d2\u56fe\uff0c\u770b\u8d77\u6765\u662f$3000x1.2x12=$43200\u3002\n\u7528\u5927\u7ea6\u4e00\u8f86\u65b0\u8f66\u7684\u8d39\u7528\uff0c\u4f60\u53ef\u4ee5\u7ed9\u81ea\u5df1\u4e70\u4e00\u5e74\u7684\u81ea\u7531\uff0c\u6210\u4e3a\u4e00\u4e2a\u6570\u5b57\u6e38\u7267\u6c11\u65cf\uff0c\u5c1d\u8bd5\u521b\u4e1a\uff0c\u6216\u8005\u63a2\u7d22\u804c\u4e1a\u8f6c\u53d8\u3002\n\u505a\u6a21\u7279\u5f88\u6709\u8da3\uff1a\u6211\u80fd\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u4e3a\u81ea\u5df1\u4e70\u5230\u672a\u6765\u51e0\u4e2a\u6708\u7684\u4e1c\u897f\uff1f\n\u5047\u8bbe\u67d0\u4eba\u7a0e\u540e\u6bcf\u6708\u62ff\u56de\u5bb66000\u7f8e\u5143\uff0c\u5e76\u5c06\u5979\u7684\u201c\u672a\u6765\u4e2a\u4eba\u6708\u5f00\u652f\u201d\u5b9a\u4e3a3600\u7f8e\u5143\u3002\u5982\u679c\u5979\u5c06\u9884\u7b97\u9664\u4ee5\u6536\u5165\uff0c\u518d\u4e58\u4ee512\uff0c\u5979\u5c31\u4f1a\u5f97\u51fa\u4f11\u606f1\u5e74\u6240\u9700\u6708\u6570\u3002\n\u663e\u7136\uff0c\u5b58\u90a3\u4e48\u591a\u94b1\u53ef\u80fd\u5f88\u96be(\u90a3\u662f60%\u7684\u50a8\u84c4\u7387)\u3002\u4f46\u8fd9\u79cd\u7c7b\u578b\u7684\u8bf4\u660e\u53ef\u4ee5\u6210\u4e3a\u8ba1\u7b97\u4e2a\u4eba\u9884\u7b97\u3001\u52a0\u85aa\u6216\u4ec5\u4ec5\u662f\u589e\u52a0\u6536\u5165\u548c\u51cf\u5c11\u652f\u51fa\u7684\u7406\u60f3\u6570\u5b57\u7684\u53e6\u4e00\u4e2a\u6307\u8def\u6807\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6bcf\u5de5\u4f5c\u4e00\u4e2a\u6708\uff0c\u5c31\u4f1a\u4e3a\u81ea\u5df1\u8d62\u5f97\u4e00\u4e2a\u514d\u8d39\u7684\u672a\u6765\u4e00\u4e2a\u6708\u3002\n\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6bcf\u5de5\u4f5c\u4e00\u4e2a\u6708\uff0c\u5c31\u4f1a\u4e3a\u81ea\u5df1\u8d62\u5f97\u672a\u6765\u7684\u4e24\u4e2a\u6708\u3002\u54c7\u54e6\uff01\n\u5f53\u4e0e\u51cf\u5c11\u5f00\u652f\u548c\u6295\u8d44\u76f8\u7ed3\u5408\u65f6\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u4f1a\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u5728\u7ecf\u6d4e\u4e0a\u7a7a\u95f2\u7684\u51e0\u4e2a\u6708\u91cc\u5b58\u94b1\u662f\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u60f3\u6cd5\u3002\n\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\uff0c\u4e0d\u60f3\u8fc7\u4e00\u79cd\u201c\u5ef6\u671f\u751f\u6d3b\u201d(\u5411\u8482\u59c6\u00b7\u8d39\u91cc\u65af\u70b9\u5934)\uff0c\u90a3\u4e48\u672a\u6765\u7684\u81ea\u6211\u50a8\u84c4\u65b9\u6cd5\u53ef\u80fd\u662f\u4e00\u4e2a\u9f13\u821e\u4eba\u5fc3\u7684\u60f3\u6cd5\u3002\n\u672a\u6765\u7684\u81ea\u6211\u50a8\u84c4\u65b9\u6cd5\u6709\u4e00\u4e2a\u5fae\u5999\u7684\u6548\u679c\uff0c\u90a3\u5c31\u662f\u91cd\u65b0\u5b9a\u4f4d\u6211\u4e0e\u91d1\u94b1\u7684\u5173\u7cfb\uff1a\n\u73b0\u5728\uff0c\u6211\u53ef\u4ee5\u66f4\u6709\u4fe1\u5fc3\u5730\u6309\u6708\u548c\u5e74\u6765\u8ba1\u5212\uff0c\u800c\u4e0d\u662f\u628a\u6211\u7684\u751f\u547d\u63a8\u8fdf\u51e0\u5341\u5e74\u3002\n\u6211\u8fd8\u6ca1\u6709\u90a3\u4e48\u4ed4\u7ec6\u5730\u7814\u7a76\u8fc7\u89e3\u96c7(\u7ecf\u6d4e\u72ec\u7acb\uff0c\u63d0\u524d\u9000\u4f11)\u8fd0\u52a8\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4e00\u56de\u4e8b\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u53ef\u80fd\u5bf9\u90a3\u4e9b\u5e74\u6536\u5165\u572875000\u7f8e\u5143\u4ee5\u4e0a\u7684\u4eba\u6700\u6709\u5171\u9e23\u3002\u4f46\u6211\u8ba4\u4e3a\uff0c\u672a\u6765\u7684\u81ea\u6211\u50a8\u84c4\u65b9\u5f0f\u4ecd\u7136\u6bd4\u201c\u6211\u60f3\u6709\u4e00\u5929\u53d8\u5f97\u5bcc\u6709/\u6210\u4e3a\u767e\u4e07\u5bcc\u7fc1\u201d\u66f4\u5177\u53ef\u64cd\u4f5c\u6027\u3002\n\u8fd9\u6539\u53d8\u4e86\u6211\u4e0e\u91d1\u94b1\u7684\u5173\u7cfb\uff0c\u4ece\u201c\u6211\u60f3\u5b58\u591a\u5c11\u94b1\uff1f\u201d\u6539\u6210\u201c\u6211\u5c06\u6765\u9700\u8981\u591a\u5c11\u7a7a\u95f2\u65f6\u95f4\uff1f\u201d\n\u672a\u96e8\u7ef8\u7f2a\u5e76\u4e3a\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2a\u5b89\u5168\u7f51\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u8fd1\u4e00\u534a\u7684\u7f8e\u56fd\u4eba\u9760\u5de5\u8d44\u8fc7\u6d3b\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u4eba\u6ca1\u6709\u53ef\u4ee5\u652f\u4ed83\u4e2a\u6708\u5f00\u652f\u7684\u5e94\u6025\u57fa\u91d1\u3002\u5f53\u79d1\u7ef4\u5fb7\u6765\u88ad\uff0c\u653f\u5e9c\u5f00\u59cb\u5bc4\u51fa1200\u7f8e\u5143\u7684\u652f\u7968\u65f6\uff0c\u8fd9\u4e00\u70b9\u53d8\u5f97\u6781\u5176\u660e\u663e\u3002\n\u4f46\u4ece\u5fc3\u7406\u4e0a\u8bb2\uff0c\u5e94\u6025\u57fa\u91d1\u5e76\u4e0d\u90a3\u4e48\u6709\u6fc0\u52b1\u4f5c\u7528\u3002\u540e\u5907\u8ba1\u5212\u5f88\u91cd\u8981\uff0c\u4f46\u4e0d\u80fd\u521b\u9020\u6d3b\u529b\u3002", "note_en": "In 2016, I began saving up for an experiment living as a  digital nomad. It was the first time I had to seriously think about what my \u201crunway\u201d would be. How long would my money last if I were to have no income coming in, and I wanted to continue traveling?\n I decided to take a small bets experiment, figuring that 2 months abroad would be a enough to gauge what this digital nomad life is all about.\n I calculated my monthly expenses \u2013 rent, food, all the big items \u2013 and created a \u201ctravel fund\u201d worth at least 2 months of expenses. Even if the South American countries I was interested in had a lower cost of living, I wanted a wider margin to account for unexpected expenses like flights, having to get an emergency AirBnB, and shenanigans.\n I came back from that trip with a little more money leftover than I had budgeted\u2026and it felt good.\n I got my first taste of buying myself future months and I wasn\u2019t going back.\n   On one hand, build an emergency fund. Experts like  Dave Ramsey suggesting a starter fund of $1000.\n On the other hand, think about retirement\u2014which could be hundreds of thousands, or millions of dollars.\n Fidelity Investments recommends that \u201ca 40-year old should have a nest egg twice her annual income; by age 50, the egg should be four times income and at age 60, retirement savings should be six times current income.\u201d ( Zacks)\n This super long term outlook is hard to relate to, especially for younger people starting out in the workforce, saddled with student loan debt and without much savings.\n There needs to be an aspirational stage, something that feels more within reach between setting up an emergency fund (basic) and planning for retirement (advanced).\n  According to  Bankrate, 21% of Americans don\u2019t save  any of their annual income.\n On the contrary, \u201cFour in 10 identify themselves as aggressive short-term savers, where they excel at putting money aside for a specific purpose, like a trip or wedding, but aren\u2019t consistently setting aside money for the future.\u201d ( MarketWatch).\n  Taking in those insights, we can apply the psychological trick of chunking:   Simplify things by breaking them down I into digestible chunks.\n  Here\u2019s what I found more motivating:  buy myself one future month at a time. A rough calculation:\n Every time you save that number, you\u2019ve bought your future self a month!\n  Every time you save a month\u2019s worth of expenses, you\u2019ve bought your future self a month of freedom.\n Say that your average living expenses is $3000.  Because we can\u2019t predict inflation or how the value of the dollar will change, let\u2019s pad that amount by 20%.\n  Now, every time you save $3600, you just bought your future self another month of worry-free expense.\n   Using our previous illustration, that\u2019d look like $3000 x 1.2 x 12 =  $43,200.\n For about the cost of a new car, you can buy yourself 1 year of freedom to being a digital nomad, try starting a small business, or explore a career change.\n  It\u2019s fun to model out:  how fast can I buy myself future months?\n Say that someone takes home $6000 a month after taxes, and sets her \u201cfuture self month expenses\u201d at a generous $3600. If she divide that budget by income, and multiply by 12, she would arrive at the number of months it takes to earn 1 year off.\n  Obviously it can be difficult to save that much money (that\u2019s a 60% savings rate). But this type of illustration can be another guidepost in figuring out personal budgets, salary raises, or just aspirational numbers for increasing income and decreasing expenses.\n Imagine that for every month you work, you\u2019ve earned yourself a free future month.\n Now imagine that for every month you work, you\u2019ve earned yourself  two future months. Whoa!\n This idea becomes even more powerful when combined with decreasing expenses and investing your money.\n That\u2019s why I think saving for  financially free months is a powerful idea.\n    If you\u2019re like me and don\u2019t want to live a \u201cdeferred life\u201d (nod to Tim Ferriss), then the Future Self Savings Method may be an motivating idea.\n  The Future Self Savings Method has the subtle effect of reorienting my relationship with money:\n  Now, instead deferring my life decades out, I can more confidently plan on the order of months and years.\n    I haven\u2019t studied the FIRE (financially independent, retire early) movement that closely. Maybe this is just the same thing.\n This article may feel the most relatable to those making $75k and beyond. But I think the Future Self Savings Method is still a lot more actionable than \u201cI want to be rich / a millionaire someday\u201d\n This reorients my relationship with money from \u201cHow much money do I want to save?\u201d to \u201cHow much free time do I want in the future?\u201d\n Saving for a rainy day and setting yourself up with a safety net  is crucial, especially when you consider that nearly  half of Americans live paycheck to paycheck, and more than half do not have an emergency fund that can cover 3 months of expenses. That became devastatingly clear when Covid hit and the government starting sending out $1200 checks.\n But psychologically, an emergency fund is not that motivating. Backup plans are important, but doesn\u2019t create aliveness.", "posttime": "2020-10-30 12:03:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u50a8\u84c4,savings,\u672a\u6765", "title": "\u201c\u672a\u6765\u7684\u81ea\u6211\u201d\u50a8\u84c4\u6cd5", "title_en": "The \u201cFuture Self\u201d Savings Method", "transed": 1, "url": "https://ozchen.com/future-self-savings-method/", "via": "", "real_tags": ["\u50a8\u84c4", "savings", "\u672a\u6765"]}]
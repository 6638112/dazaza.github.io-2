[{"category": "", "categoryclass": "", "imagename": "ca5244ffeb1ed2a8a6dfd51f0d78f46e.jpg", "infoid": 1068388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u4e8eMontr\u00e9al\u7684Healthtech Startup Alayacare\u5728D\u7cfb\u5217CAD\u4e2d\u83b7\u5f97\u4e862.25\u4ebf\u7f8e\u5143\u7684CAD\uff0c\u4ee5\u5efa\u7acb\u5176\u6700\u8fd1\u7684\u589e\u957f\uff0c\u5305\u62ec\u7f8e\u56fd\uff08\u7f8e\u56fd\uff09\u533b\u7597\u4fdd\u5065\u5e02\u573a\u3002\n \u8fd9\u4e00\u8f6e\u7531Al Gore\u7684\u4e00\u4ee3\u6295\u8d44\u7ba1\u7406\u9886\u5bfc\u3002\u5b83\u8fd8\u770b\u5230\u6765\u81ea\u591a\u4f26\u591a\u7684Klass Capital\uff0c\u5e76\u8fd4\u56de\u57fa\u4e8eQu\u00e9bec\u7684Alayacare\u6295\u8d44\u8005Inovia Capital\uff0cCDPQ\u548c\u6295\u8d44Qu\u00e9bec\u3002\n  Alayacare\u6210\u7acb\u4e8e2014\u5e74\uff0c\u4e3a\u5bb6\u5ead\u548c\u793e\u533a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u5546\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u7684\u5e73\u53f0\u3002 Startup\u7684\u4eba\u5de5\u667a\u80fd\uff08AI\uff09-Powered\u8f6f\u4ef6\u63d0\u4f9b\u8c03\u5ea6\uff0c\u62a5\u544a\uff0c\u4e34\u5e8a\u6587\u6863\uff0c\u8ba1\u8d39\uff0c\u62a4\u7406\u5de5\u4f5c\u8005\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c\u60a3\u8005\uff0c\u5bb6\u5ead\u6210\u5458\u548c\u62a4\u7406\u5de5\u4f5c\u8005\u7684\u4e13\u7528\u95e8\u6237\u3002\n \u901a\u8fc7\u5229\u7528\u6280\u672f\u548c\u6570\u636e\u6765\u52a0\u5f3a\u62a4\u7406\u5de5\u4f5c\u8005\u7684\u7ecf\u9a8c\uff0cAlayacare\u65e8\u5728\u6539\u5584\u60a3\u8005\u7684\u7ed3\u679c\u548c\u8f83\u4f4e\u7684\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u7684\u6210\u672c\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0cAlayacare\u58f0\u79f0\u5b83\u201c\u57fa\u672c\u4e0a\u6269\u5927\u4e86\u4e1a\u52a1\u201d\uff0c\u4fc3\u8fdb\u4e86\u4e16\u754c\u5404\u5730\u7684\u5341\u4ebf\u6b21\u60a3\u8005\u3002\n \u6839\u636eAlayAcare\u7684\u8bf4\u6cd5\uff0c\u536b\u751f\u5b66\u58eb\u516c\u53f8\u81ea\u53d1\u5e03\u4ee5\u6765\u7ecf\u5386\u4e86\u4e24\u4f4d\u6570\u7684\u589e\u957f\u3002\u7f8e\u56fd\u4ee3\u8868\u4e86Alayacare\u7684\u4e1a\u52a1\u589e\u957f\u6700\u5feb\u7684\u4e00\u90e8\u5206\uff1a\u521b\u4e1a\u516c\u53f8\u8868\u793a\uff0c\u5b83\u7684\u7f8e\u56fd\u4e1a\u52a1\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\uff0c\u5b83\u7684\u8fd0\u8425\u589e\u957f\u4e86\u4e03\u6b21\uff0c\u5728\u5bb6\u5ead\u533b\u7597\u4fdd\u5065\u7684\u9700\u6c42\u589e\u52a0\u3002\n  \u65b0\u9c9c\u7684\u9996\u90fd\uff0cAlayacare\u8ba1\u5212\u7ee7\u7eed\u901a\u8fc7\u57f9\u517b\u5176\u56e2\u961f\uff0c\u8ffd\u6c42\u66f4\u591a\u6536\u8d2d\uff0c\u5e76\u6295\u8d44\u4ea7\u54c1\u5f00\u53d1\uff0c\u7ee7\u7eed\u5176\u7f8e\u56fd\u548c\u5168\u7403\u6269\u5f20\u3002\u8be5\u542f\u52a8\u8868\u793a\uff0c\u5b83\u65e8\u5728\u5efa\u7acb\u201c\u66f4\u5b8c\u6574\u7684\u540e\u6025\u6027\u53d1\u884c\uff0c\u201d\u4ee5\u53ca\u5e2e\u52a9\u89e3\u51b3\u5458\u5de5\u77ed\u7f3a\u548c\u6d41\u5931\u7b49\u533b\u7597\u4fdd\u5065\u52b3\u52a8\u529b\u5e02\u573a\u95ee\u9898\u7684\u4ea7\u54c1\u3002\n Alayacare\u7684\u8f6f\u4ef6\u76ee\u524d\u7528\u4e8e\u8d85\u8fc7500\u4e2a\u5bb6\u5ead\u548c\u793e\u533a\u62a4\u7406\u7ec4\u7ec7\u3002 Alayacare\u5728\u52a0\u62ff\u5927\uff0c\u7f8e\u56fd\u548c\u6fb3\u5927\u5229\u4e9a\u7684\u529e\u4e8b\u5904\u96c7\u7528\u4e86450\u591a\u4eba\uff0c\u5e76\u8ba1\u5212\u5728\u672a\u6765\u51e0\u5e74\u4e2d\u4f7f\u7528\u65b0\u9c9c\u8d44\u672c\u589e\u52a0\u81f3\u5c11300\u591a\u4e2a\u3002 \n\u6839\u636e\u5168\u7403\u548c\u90ae\u5bc4\uff0c2.25\u4ebf\u7f8e\u5143\u7684\u56de\u5408\u75317500\u4e07\u7f8e\u5143\u7684\u4e8c\u7ea7\u8d44\u672c\u548c\u4ef7\u503c\u4e3a7500\u4e07\u7f8e\u5143\u7684\u201c\u5728\u9ad8\u4e5d\u4e2a\u6570\u5b57\u201d\u4e2d\u3002\u201c  2020\u5e748\u6708\uff0c\u5728\u6210\u529f\u7684\u878d\u8d44\u5e74\u5ea6\uff0cAlayacare\u5728CIBC Innovation Banking\u83b7\u5f97\u4e861500\u4e07\u7f8e\u5143\u7684\u503a\u52a1\u8bbe\u65bd\u3002 2019\u5e747\u6708\uff0cAlayacare\u5173\u95ed\u4e86\u7b2c\u4e00\u6b3e\uff0c5100\u4e07\u7f8e\u5143\u7684\u8fd111600\u4e07\u7cfb\u5217C\u8f6e\uff0c\u5e76\u4e8e2020\u5e741\u6708\uff0c\u542f\u52a8\u67094,790\u4e07\u7f8e\u5143\u7684C\u6269\u5c55\u3002  \u8be5\u542f\u52a8\u8fd8\u53ef\u4f5c\u4e3aHealthtech\u516c\u53f8Procura\uff0cArrow\uff0cCIMS\u548cAcutenet\u7684\u6bcd\u516c\u53f8\u3002 \u81ea2020\u5e74\u4ee5\u6765\uff0cAlayacare\u5df2\u7ecf\u83b7\u5f97\u4e86Procura\uff0cArrow\u548cAcutenet\u3002 \u542f\u52a8\u8ba1\u5212\u4ece\u672c\u8f6e\u4e2d\u4f7f\u7528\u4e00\u90e8\u5206\u6536\u76ca\u6765\u8ffd\u6c42\u66f4\u591a\u6536\u8d2d\u3002 ", "note_en": "Montr\u00e9al-based healthtech startup  AlayaCare has secured $225 million CAD in Series D funding to build on its recent growth, including in the United States (US) healthcare market.\n The round was led by Al Gore\u2019s Generation Investment Management. It also saw participation from Toronto\u2019s Klass Capital and return Qu\u00e9bec-based AlayaCare investors Inovia Capital, CDPQ, and Investissement Qu\u00e9bec.\n  Founded in 2014, AlayaCare provides an end-to-end platform for home and community healthcare providers. The startup\u2019s artificial intelligence (AI)-powered software offers scheduling, reporting, clinical documentation, billing, a care worker mobile app, and dedicated portals for patients, family members, and care workers.\n By leveraging tech and data to bolster the care worker experience, AlayaCare aims to improve patient outcomes and lower costs for healthcare providers. To date, AlayaCare claims it has \u201cscaled its business substantially,\u201d facilitating over a billion total patient visits around the world.\n According to AlayaCare,the healthtech company has experienced double-digit growth since its launch. The US represents the fastest-growing part of AlayaCare\u2019s business: the startup said its US operations grew by seven times over the last two years, amid an increase in demand for home healthcare.\n  Fresh capital in hand, AlayaCare plans to continue its US and global expansion by growing its team, pursuing more acquisitions, and investing in product development. The startup said it aims to build \u201ca more complete post-acute offering,\u201d as well as products that help address health care labour market issues like employee shortages and churn.\n AlayaCare\u2019s software is currently used by over 500 home and community care organizations. AlayaCare employs more than 450 people across its offices in Canada, the US, and Australia, and plans to use the fresh capital to add at least 300 more in the coming years.\n According to  The Globe and Mail, the $225 million round consists of $75 million in secondary capital and values AlayaCare \u201cin the high nine-figures.\u201d\n  In August 2020, AlayaCare secured a  $15 million debt facility from CIBC Innovation Banking, following a successful year of financing. In July 2019, AlayaCare closed the first,  $51 million portion of its nearly $116 million Series C round, and in January 2020, the startup secured a  $47.9 million Series C extension.\n The startup also serves as the parent company of healthtech firms Procura, Arrow, CIMS, and AcuteNet. Since 2020, AlayaCare has acquired  Procura,  Arrow, and  AcuteNet. The startup plans to use a portion of the proceeds from this round to pursue more acquisitions.", "posttime": "2021-06-26 13:44:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u5f00\u53d1,\u5bb6\u5ead,develops,alayacare", "title": "AlayAcare\uff0c\u5b83\u4e3a\u5bb6\u5ead\u548c\u793e\u533a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u5f00\u53d1\u4e86\u8c03\u5ea6\uff0c\u4e34\u5e8a\u6587\u6863\u548c\u8ba1\u8d39\u7684\u8f6f\u4ef6\uff0c\u63d0\u9ad8\u4e86225\u7c73CAD\u7cfb\u5217D. ", "title_en": "AlayaCare, which develops software for scheduling, clinical documentation, and billing for home and community healthcare providers, raises $225M CAD Series D", "transed": 1, "url": "https://betakit.com/alayacare-raises-225-million-cad-series-d-round/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u5f00\u53d1", "\u5bb6\u5ead", "develops", "alayacare"]}, {"category": "", "categoryclass": "", "imagename": "559d3d4453995ed5b56b1a265e49598c.jpeg", "infoid": 1068387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c71\u7f8a\u96c6\u56e2Sneakerheads\u7684\u7f51\u4e0a\u5e02\u573a\u7684\u6bcd\u516c\u53f8\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u7b79\u96c6\u4e861.95\u4ebf\u7f8e\u5143\uff0c\u901a\u8fc7\u79c1\u4eba\u6295\u8d44\u8005\u7ee7\u7eed\u63a8\u5165\u56fd\u9645\u5e02\u573a\u3002\n  \u8be5\u516c\u53f8\u57289\u6708\u4efd\u7b79\u96c6\u4e861\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\uff0c\u8be5\u516c\u53f8\u6700\u65b0\u7684\u878d\u8d44\u4ef7\u503c\u4e3a37\u4ebf\u7f8e\u5143\uff0c\u4f30\u503c\u8d85\u8fc7\u4e24\u500d\u3002\n  \u8be5\u516c\u53f8\u8fd8\u63d0\u4f9b\u4e86\u5173\u4e8e\u5176\u8d22\u52a1\u4e1a\u7ee9\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u79f0\uff0c\u5728\u8fc7\u53bb\u4e00\u5e74\u7684\u5c71\u7f8a\u5e73\u53f0\u4e0a\u9500\u552e\u4e8620\u4ebf\u7f8e\u5143\u7684\u5546\u54c1\u3002\u4e0e\u4e0a\u4e00\u5e74\u76f8\u6bd4\uff0c\u8be5\u671f\u95f4\u8fd0\u52a8\u978b\u7684\u9500\u552e\u989d\u7ffb\u4e86\u4e00\u756a\u3002\n  \u4f60\u4ece\u5c71\u7f8a\u4e70\u8fd0\u52a8\u978b\u6216\u670d\u88c5\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4f60\u7684\u8d2d\u4e70\u4e60\u60ef\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\u5982\u4f55\u53d8\u5316\uff1f\u52a0\u5165\u4e0b\u9762\u7684\u5bf9\u8bdd\u3002\n  \u5c71\u7f8a\u4ecd\u7136\u88ab\u79f0\u4e3a\u8d2d\u4e70\u6d41\u884c\u6216\u96be\u4ee5\u627e\u5230\u7684\u8fd0\u52a8\u978b\u7684\u5e73\u53f0\uff0c\u5e76\u4e14\u5b83\u7684\u6210\u529f\u5927\u90e8\u5206\u90fd\u53ef\u4ee5\u8ffd\u6eaf\u5230\u8fd0\u52a8\u978b\u548c\u8857\u5934\u6587\u5316\u7684\u6301\u7eed\u5347\u7ea7\u3002\u5bcc\u88d5\u7684\u8d2d\u7269\u8005\u5df2\u7ecf\u8bc1\u660e\u613f\u610f\u7a81\u7834\u6d41\u884c\u6b3e\u5f0f\u548c\u8272\u5f69\u5316\u7684\u96f6\u552e\u4ef7\uff0c\u4e3a\u8d2d\u4e70\u548c\u7ffb\u8f6c\u978b\u7684\u7ade\u4e89\u548c\u6709\u4e89\u8bae\u7684\u5e02\u573a\u3002\n    \u636eCowen\u79f0\uff0c\u5317\u7f8e\u7684\u8fd0\u52a8\u978b\u548c\u8857\u5934\u8f6c\u552e\u5e02\u573a\u8fbe\u5230\u4e86\u8d85\u8fc720\u4ebf\u7f8e\u5143\uff0c\u4f30\u8ba1\u5168\u7403\u5e02\u573a\u5c06\u8fbe\u523030\u4ebf\u7f8e\u5143\u52302030\u5e74\u3002\n  \u4e0eStockx LLC\u548ceBay eBay\u7b49\u7ade\u4e89\u5bf9\u624b\u4e0d\u540c\uff0c\u53ea\u80fd\u8f6c\u552e\u5e73\u53f0\uff0c\u5c71\u7f8a\u4e5f\u76f4\u63a5\u4ece\u5176\u8d85\u8fc7350\u4e2a\u54c1\u724c\u5408\u4f5c\u4f19\u4f34\u9500\u552e\uff0c\u5305\u62ecGucci\uff0cBalenciaga\u548cAlexander McQueen\u3002 \n2019\u5e74\uff0c\u8be5\u516c\u53f8\u5f00\u59cb\u6269\u5c55\u8d85\u8d8a\u8fd0\u52a8\u978b\u8fdb\u5165\u8c6a\u534e\u670d\u88c5\u548c\u914d\u9970\u3002 Goat Group\u7684\u9996\u5e2d\u6267\u884c\u5b98Eddy Lu\u5728\u9762\u8bd5\u4e2d\u8868\u793a\uff0c\u96f6\u552e\u5546\u4e00\u76f4\u5728\u6ce8\u610f\u6dfb\u52a0\u65b0\u7c7b\u522b\uff0c\u4ee5\u786e\u4fdd\u5e02\u573a\u4f9d\u7136\u7b26\u5408\u5176\u5e74\u8f7b\u5ba2\u6237\u7fa4\u7684\u6b32\u671b\u3002\n  \u201c\u6211\u4eec\u5173\u5fc3\u771f\u5b9e\u6027\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e0d\u521b\u9020\u6240\u6709\u8fd9\u4e9b\u5782\u76f4\u7684\u539f\u56e0\uff0c\u201d\u5362\u8bf4\u3002 \u201c\u6211\u4eec\u5bf9\u65f6\u5c1a\uff0c\u6587\u5316\u548c\u98ce\u683c\u6709\u4e00\u4e2a\u89c2\u70b9\u3002\u201d\n  \u5362\u8bf4\uff0c\u5c71\u7f8a\u5ba2\u6237\u7fa4\u662f\u5e74\u8f7b\uff0c\u65f6\u5c1a\u4e14\u8212\u9002\u7684\u6602\u8d35\u7269\u54c1\uff0c\u9646\u5148\u751f\u5730\u8d2d\u4e70\u3002\u5c71\u7f8a3000\u4e07\u5ba2\u6237\uff0c80\uff05\u662f\u5343\u79a7\u4e00\u4ee3\u548cZERES\u3002\n    \u4ed6\u8bf4\uff0c\u5bf9\u4e8e\u6d89\u53ca\u4fdd\u7559\u54c1\u724c\u8bda\u4fe1\u7684\u65f6\u88c5\u6807\u7b7e\uff0c\u4ed6\u8bf4\uff0c\u5c71\u7f8a\u5e02\u573a\u53ef\u4ee5\u5728\u66f4\u7b56\u5212\u5e73\u53f0\u4e0a\u83b7\u5f97\u66f4\u591a\u7b56\u5212\u5e73\u53f0\u7684\u8d2d\u7269\u8005\u3002 \u201c\u6211\u4eec\u5728NVIDIA\u663e\u5361\u548c\u7535\u6c60\u65c1\u8fb9\u7684\u4ea7\u54c1\u65c1\u8fb9\u6ca1\u6709\u9500\u552e\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u201d\u5362\u5148\u751f\u8bf4\u3002\n  \u5362\u5148\u751f\u8bf4\uff0c\u56fd\u9645\u5e02\u573a\u4ecd\u7136\u662f\u589e\u957f\u7684\u4e3b\u8981\u76ee\u6807\u3002\u6700\u65b0\u878d\u8d44\u56de\u5408\u7684\u90e8\u5206\u6536\u76ca\u5c06\u7528\u4e8e\u4eca\u5e74\u5f00\u8bbe\u56db\u4e2a\u989d\u5916\u7684\u5c65\u884c\u4e2d\u5fc3\u3002\u5176\u4e2d\u4e09\u4e2a\u4e2d\u5fc3\u5c06\u4f4d\u4e8e\u4e9a\u6d32\uff0c\u589e\u52a0\u4e86\u4e09\u4e2a\u73b0\u6709\u7684\u56fd\u9645\u8bbe\u65bd\u3002\u4ed6\u8bf4\uff0c\u65b0\u8bbe\u65bd\u5c06\u5e2e\u52a9\u964d\u4f4e\u4e0e\u56fd\u9645\u8fd0\u8f93\u76f8\u5173\u7684\u6210\u672c\uff0c\u5e76\u4f7f\u8fd0\u8f93\u901f\u5ea6\u66f4\u5177\u7ade\u4e89\u529b\u3002\n  \u96f6\u552e\u5546\u5728\u7f8e\u56fd\uff0c\u6b27\u6d32\u548c\u4e9a\u6d32\u670913\u4e2a\u5c65\u884c\u4e2d\u5fc3\uff0c\u5728\u8fd0\u9001\u5230\u5ba2\u6237\u4e4b\u524d\uff0c\u5b83\u53ef\u4ee5\u68c0\u67e5\u8f6c\u552e\u5546\u54c1\u7684\u771f\u5b9e\u6027\u548c\u8d28\u91cf\u3002\n  \u5c71\u7f8a\u96c6\u56e2\u6210\u7acb\u4e8e2015\u5e74\uff0c\u4ee5\u524d\u5728\u591a\u4e2a\u7b79\u6b3e\u8d5b\u4e2d\u7b79\u96c6\u4e86\u5927\u7ea63\u4ebf\u7f8e\u5143\uff0c\u8fc7\u53bb\u7684\u6295\u8d44\u8005\u5305\u62ecD1 Capital Partners LP\uff0cAccel\uff0cUpfront Ventures\u548c\u96f6\u552e\u5546\u811a\u8e0f\u8f66FL 3.63\uff05\u6700\u65b0\u7684\u8d44\u91d1\u5faa\u73af\u7531Park West Assuet Management\u9886\u5bfcLLC\u3002 \n\u51fa\u73b0\u57282021\u5e746\u670825\u65e5\uff0c\u5370\u5237\u7248\u4f5c\u4e3a\uff06\uff0339;\u5c71\u7f8a\u96c6\u56e2\u4ef7\u503c37\u4ebf\u7f8e\u5143\u3002\uff06\uff0339; ", "note_en": "Goat Group, parent company of an online marketplace for sneakerheads, said it has raised $195 million through private investors to continue its push into international markets.\n  The latest funding round values the company at $3.7 billion, more than double its valuation when the company  raised $100 million in September.\n  The company also provided detail about its financial performance, saying $2 billion of merchandise was sold on its Goat platform over the past year. Sales of sneakers during the period doubled compared with the previous year.\n  Do you buy sneakers or apparel from Goat? If so, how have your buying habits changed over the past year? Join the conversation below.\n  Goat remains best known as a platform to buy popular or hard-to-find sneakers, and much of its success can be traced to the continued  ascendancy of sneaker and streetwear culture. Wealthy shoppers have proved willing to shell out far more than the retail price of popular styles and colorways, fueling a competitive and controversial market for buying and flipping shoes.\n    The sneaker and streetwear resale market in North America hit more than $2 billion last year, according to Cowen, which estimates that the global market could reach $30 billion by 2030.\n  Unlike competitors such as StockX LLC and  eBay    EBAY  2.00%  which  are exclusively resell platforms, Goat also sells directly from its more than 350 brand partners, including Gucci, Balenciaga and Alexander McQueen.\n  In 2019, the company began expanding beyond sneakers into luxury apparel and accessories. Eddy Lu, Goat Group\u2019s chief executive, said in an interview that the retailer has been careful about adding new categories to ensure the marketplace remains in line with the desires of its young customer base.\n  \u201cWe care about authenticity, and that\u2019s why we don\u2019t create all of these verticals,\u201d Mr. Lu said. \u201cWe have a point of view on fashion, culture and style.\u201d\n  The Goat customer base is young, fashionable and comfortable wearing expensive items alongside their secondhand purchases, Mr. Lu said. Of Goat\u2019s 30 million customers, 80% are millennials and Gen Zers.\n    For fashion labels concerned about preserving brand integrity, the Goat marketplace offers access to those shoppers on a more curated platform, he said. \u201cWe\u2019re not selling their products next to  Nvidia graphics cards and batteries and things like that,\u201d Mr. Lu said.\n  International markets remain a primary target for growth, Mr. Lu said. Part of the proceeds from the latest funding round will be used to open four additional fulfillment centers this year. Three of those centers will be located in Asia, adding to three existing international facilities. The new facilities will help cut costs associated with international shipping and make shipping speeds more competitive, he said.\n  The retailer has 13 fulfillment centers across the U.S., Europe and Asia, where it checks the authenticity and quality of resale merchandise before shipping it to customers.\n  Goat Group, which was founded in 2015, previously raised about $300 million over multiple fundraising rounds, with past investors including D1 Capital Partners LP, Accel, Upfront Ventures and retailer  Foot Locker    FL  3.63%  The latest funding round was led by Park West Asset Management LLC.\n  Appeared in the June 25, 2021, print edition as &#39;Goat Group Valued at $3.7 Billion.&#39;", "posttime": "2021-06-26 13:02:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5c71\u7f8a,goat,\u8fd0\u52a8\u978b", "title": "\u5c71\u7f8a\u96c6\u56e2\uff0c\u5728\u7ebf\u8fd0\u52a8\u978b\u5e02\u573a\u5c71\u7f8a\u7684\u6bcd\u516c\u53f8\uff0c\u4f30\u4ef7\u4e3a3.7\u4ebf\u7f8e\u5143\u7684\u4f30\u4ef7\uff0c\u4e0a\u6da82\u500d\uff0c\u5f53\u516c\u53f8\u57289\u6708\u7b79\u96c6100\u4e07\u7f8e\u5143 ", "title_en": "GOAT Group, parent company of online sneaker marketplace GOAT, raises $195M Series F at a valuation of $3.7B, up 2x when the company raised $100M in September", "transed": 1, "url": "https://www.wsj.com/articles/goat-group-parent-of-sneaker-marketplace-valued-at-3-7-billion-in-latest-funding-round-11624532400?mod=djemalertNEWS", "via": "", "real_tags": ["\u5c71\u7f8a", "goat", "\u8fd0\u52a8\u978b"]}, {"category": "", "categoryclass": "", "imagename": "2abdb4598c84f733ef11024c5f245f72.jpeg", "infoid": 1068386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "//\uff0334;\u6216\u8005\u7b49\u4e8e\uff06\uff0334; x || = y; x || \uff08x = y\uff09; //\uff0334;\u548c\u548c\u7b49\u4e8e\uff06\uff0334; x\uff06amp;\uff06amp; = y; x\uff06amp;\uff06amp; \uff08x = y\uff09; //\uff0334; QQ\u7b49\u4e8e\uff06\uff0334; x ?? = y; x ?? \uff08x = y\uff09;\n const updateId = user =\uff06gt; {//\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u6b64\u64cd\u4f5cif\uff08\uff01user.id\uff09user.id = 1 //\u6216\u6b64user.id = user.id || 1 //\u6216\u4f7f\u7528\u903b\u8f91\u5206\u914d\u8fd0\u7b97\u7b26\u3002 user.id || = 1}\n    1_000_000_000 //\u554a\uff0c\u56e0\u6b64\u5f88\u5c11\u5341\u4ebf101_475_938.38 //\u8fd9\u662f\u6570\u4ebf\u6b21\u8ba9\u8d39\u7528= 123_00; // 123\u7f8e\u5143\uff0812300\u7f8e\u5206\uff0c\u663e\u7136\uff09\u8ba9\u8d39\u7528= 12_300; // 12,300\u7f8e\u5143\uff08WOAH\uff0c\u90a3\u8d39\u7528\uff01\uff09\u8ba9\u91d1\u989d= 12345_00; // 12,345\uff081234500\u7f8e\u5206\uff0c\u663e\u7136\uff09\uff0c\u8fbe\u5230123_4500; // 123.45\uff084\u56fa\u5b9a\u8d22\u52a1\uff09\uff0c\u79df\u7528= 1_234_500; // 1,234,500.\n    promise.any\uff08[\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a//v8.dev/&#39;\uff09.then\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u5bb6\u5ead\uff06\uff0339;\uff09\uff0c\u83b7\u53d6\uff08\uff06\uff0339; https\uff1a //v8.dev/blog&#39;\uff09\u3002\u7136\u540e\uff08\uff08\uff09=\uff06gt;\uff06\uff0339;\u535a\u5ba2\uff06\uff0339;\uff09\uff0cfetch\uff08\uff06\uff0339; https\uff1a//v8.dev/docs&#39;\uff09.thgh \uff08\uff08\uff09=\uff06gt;\uff06\uff0339; docs\uff06\uff0339;\uff09]\uff09\u3002\u7136\u540e\uff08\uff08first\uff09=\uff06gt; {//\u4efb\u4f55\u627f\u8bfa\u90fd\u5df2\u6ee1\u8db3\u3002Console.log\uff08\u7b2c\u4e00\uff09; //\u2192\uff06\uff0339;\u4e3b\u9875\uff06\uff0339;}\uff09\u3002catch\uff08\uff08\u9519\u8bef\uff09=\uff06gt; {//\u6240\u6709\u7684\u627f\u8bfa\u88ab\u62d2\u7edd\u4e86\u3002console.log\uff08\u9519\u8bef\uff09;}\uff09;\n       \u8ba9\u76ee\u6807= {};\u8ba9WR =\u65b0\u7684\u5f31ref\uff08\u76ee\u6807\uff09; // wr\u548ctarget areN\uff06\uff0339; t\u76f8\u540c//\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6ce8\u518c\u8868constregry = new finalizationregistry\uff08hettvalue =\uff06gt; {// ....}\uff09; registry.register\uff08MyObject\uff0c\uff06\uff0334;\u4e00\u4e9b\u4ef7\u503c\u548c\uff0334;\uff0cmyobject\uff09; // ......\u540e\u6765\uff0c\u5982\u679c\u4f60\u4e0d\u5728\u4e4e...... myObject`\u4e86...\u6ce8\u518c\u8868.unRegister\uff08MyObject\uff09;\n  \u7528\u2665hemanth.hm. ", "note_en": "//&#34;Or Or Equals&#34;x ||= y;x || (x = y); // &#34;And And Equals&#34;x &amp;&amp;= y;x &amp;&amp; (x = y); // &#34;QQ Equals&#34;x ??= y;x ?? (x = y);\n const updateID =   user =&gt; {  // We can do this  if (!user.id) user.id =  1  // Or this user.id = user.id ||  1  // Or use logical assignment operator. user.id ||=  1}\n    1_000_000_000  // Ah, so a billion 101_475_938.38  // And this is hundreds of millions let fee =  123_00;  // $123 (12300 cents, apparently) let fee =  12_300;  // $12,300 (woah, that fee!) let amount =  12345_00;  // 12,345 (1234500 cents, apparently) let amount =  123_4500;  // 123.45 (4-fixed financial) let amount =  1_234_500;  // 1,234,500\n    Promise.any([ fetch( &#39;https://v8.dev/&#39;).then( () =&gt;  &#39;home&#39;), fetch( &#39;https://v8.dev/blog&#39;).then( () =&gt;  &#39;blog&#39;), fetch( &#39;https://v8.dev/docs&#39;).then( () =&gt;  &#39;docs&#39;)]).then( ( first) =&gt; {  // Any of the promises was fulfilled.  console.log(first);  // \u2192 &#39;home&#39;}).catch( ( error) =&gt; {  // All of the promises were rejected.  console.log(error);});\n       let target = {}; let wr =  new WeakRef(target); //wr and target aren&#39;t the same // Creating a new registry const registry =  new FinalizationRegistry(  heldValue =&gt; {  // ....});registry.register(myObject,  &#34;some value&#34;, myObject); // ...some time later, if you don&#39;t care about `myObject` anymore...registry.unregister(myObject);\n  With \u2665  Hemanth.HM", "posttime": "2021-06-26 13:02:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "es2021,gt", "title": "ES2021\u529f\u80fd ", "title_en": "ES2021 Features", "transed": 1, "url": "https://h3manth.com/ES2021/", "via": "", "real_tags": ["es2021", "gt"]}, {"category": "", "categoryclass": "", "imagename": "a042f04ee890d6ddde13f09842445c23.png", "infoid": 1068385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u4ec5\u5728\u51e0\u884cJavaScript\u4e2d\u521b\u5efa\u8d85\u7ea7\u591a\u529f\u80fd\u751f\u6210/\u968f\u673a\u7f51\u683c\u5e03\u5c40\u3002\u4f7f\u7528\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u968f\u673a\u6570\uff0c\u6e90\u56fe\u50cf\uff0c\u7528\u6237\u8f93\u5165\u7b49\u548c\u8c10\u7f51\u683c\u751f\u6210\u548c\u8c10\u7f51\u683c\u3002\n \u6df7\u4e71\uff0c\u4f46\u5b8c\u7f8e\u5bf9\u9f50\u7684\u751f\u6210\u7f51\u683c\u4e16\u754c\u6b63\u5728\u7b49\u5f85\u6211\u4eec - \u8ba9\u6211\u4eec\u8d70\uff01\n \u6ce8\u610f\uff1a\u6211\u4ece\u4e94\u89d2\u661f\u6587\u4ef6\u4e2d\u83b7\u53d6\u4e86\u6211\u7684\u5386\u53f2\u6700\u559c\u6b22\u7684\u8bbe\u8ba1\u4ee3\u7406\u4eba\u4e4b\u4e00\u3002\u5728\u4ed6\u4eec\u4e3aGraphCore\u7684\u54c1\u724c\u5de5\u4f5c\u4e2d\uff0c\u5b83\u4eec\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u56db\u80a2\u66f2\u7ebf\u6765\u751f\u6210\u968f\u673a\u4e14\u89c6\u89c9\u76f8\u5e72\u7684\u6a21\u5f0f\u3002\u8f93\u51fa\u4ee4\u4eba\u60ca\u53f9\uff0c\u5e76\u4e14\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u521b\u5efa\u7684\u5947\u5999\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u6b64\u5904\u7684\u5de5\u4f5c\u6848\u4f8b\u7814\u7a76\uff01\n  \u9996\u5148\u662f\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u672c\u6559\u7a0b\u4e2d\u5b8c\u6210\u6211\u4eec\u6b63\u5728\u70f9\u996a\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u4e2a\u52a8\u753b\u7684Quadtree\u7f51\u683c\u4e2d\u7684\u52a8\u753b\u793a\u4f8b\uff1a\n   \u5c06\u4e00\u4e9b{x\uff0cy}\u6dfb\u52a0\u52302d\u7a7a\u95f4\u3002\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u70b9\u7684\u4f4d\u7f6e\u662f\u968f\u673a\u7684\uff0c\u4f46\u671d\u5411\u7126\u70b9\u504f\u7f6e\u3002\n   \u4f7f\u7528\u751f\u6210\u7684\u7f51\u683c\u533a\u57df\u6765\u5b9a\u4f4d\u4e1c\u897f\uff01\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4f7f\u7528\u6b63\u65b9\u5f62\u548c\u5706\u5708\u6765\u5f62\u6210\u7b80\u5355\u7684\u6a21\u5f0f\u3002\n  \u901a\u8fc7\u5c1d\u8bd5\u5177\u6709\u521b\u9020\u6027\u7684\u65b9\u5f0f\u6765\u5b9a\u4f4d\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u8d85\u7ea7\u6709\u8da3\u7684\u7f51\u683c\u5e03\u5c40\u3002\u6b64\u793a\u4f8b\u4f7f\u7528\u504f\u89c1\u968f\u673a\u6570\uff0c\u4f46\u5982\u679c\u662f\uff0c\u5219\u4f55\u65f6\u4f55\u5730\u6765\u81ea\u56fe\u50cf\u7684\u4eae\u5ea6\u503c\uff1f \n\u6211\u4eec\u53ef\u4ee5\u5728\u6590\u6ce2\u90a3\u514b\u62c9\u65af\uff0c\u4e00\u4e2a\u5706\u5f62\uff0c\u5e7f\u573a\uff0c\u65e0\u8bba\u5982\u4f55\u7684\u7167\u7247\u4e2d\u4f20\u9012\uff0c\u5e76\u6839\u636e\u5176\u50cf\u7d20\u503c\u751f\u6210\u6211\u4eec\u7684\u70b9\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\uff01\u4efb\u4f55\u7528\u4e8e\u57282D\u7a7a\u95f4\u4e2d\u5b9a\u4f4d\u5bf9\u8c61\u7684\u65b9\u6cd5\u90fd\u5c06\u8d77\u4f5c\u7528\u3002\u9ece\u601d\uff0c\u8d8a\u597d\u3002\n  \u6211\u4eec\u5728\u8fd9\u91cc\u770b\u5230\u7684\u7ec6\u5206\u9b54\u6cd5\u5168\u90e8\u7531\u79f0\u4e3aQuadtree\u7684\u6570\u636e\u7ed3\u6784\u5904\u7406\u3002\u6211\u559c\u6b22\u50cf\u5c0f\u5bb9\u5668\u4e00\u6837\u60f3\u5230\u56db\u8f6e\u8282\u3002\u4e00\u65e6Quadtree\u586b\u5145\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\uff0c\u5b83\u5c31\u4f1a\u5c06\u5176\u81ea\u8eab\u62c6\u5206\u4e3a\u56db\u4e2aQuadtrees\u3002\u4e00\u65e6\u90a3\u4e9bQuadtrees\u586b\u6ee1\uff0c\u4ed6\u4eec\u518d\u6b21\u5212\u5206\u81ea\u5df1\uff0c\u7b49\u7b49\u3002\n Quadtree\u53ef\u4ee5\u68d8\u624b\u53ef\u89c6\u5316\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u793a\u4f8b - \u5355\u51fb\u4ee5\u6dfb\u52a0\u5bf9\u8c61/\u70b9\u5e76\u89c2\u5bdfQuadtree Subdivides\u7684\u65b9\u5f0f\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0cQuadtree\u53ef\u4ee5\u5305\u542b\u7684\u6700\u5927\u9879\u76ee\u6570\u662f\u56db\u4e2a\u3002\n  \u975e\u5e38\u6ee1\u8db3......\u8fd9\u662f\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7684\u4e00\u5207\u5173\u4e8e\u8fd9\u4e00\u6559\u7a0b\u7684\u56db\u7ae0\uff0c\u4f46\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ed6\u4eec\u5982\u4f55\u5de5\u4f5c/\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\uff0c\u8bf7\u67e5\u770b\u4e39Shiffman\u7684\u8fd9\u6bb5\u89c6\u9891\u3002\n  \u867d\u7136\u4efb\u4f55\u4eba\u90fd\u662f\u6b22\u8fce\u6765\u9075\u5faa - \u672c\u6559\u7a0b\u975e\u5e38\u9002\u5408\u4e0eJavaScript\u8212\u9002\u7684\u4eba\uff0c\u719f\u6089SVG / HTML\u753b\u5e03\u3002\n   \u4e3a\u4e86\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u6709\u8da3\u7684\u4e1c\u897f - \u6211\u5df2\u7ecf\u5411\u6211\u7684\u751f\u6210-Utils repo\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684createqtgrid\u51fd\u6570\u3002\u6b64\u51fd\u6570\u9700\u8981\u4e00\u7cfb\u5217\u70b9\u5e76\u8fd4\u56de\u5373\u7528\u7684Quadtree\u7f51\u683c\u3002\u5982\u679c\u60a8\u5e0c\u671b\u6f5c\u5165\u6e90\u4ee3\u7801\uff0c\u5219\u5728\u6b64\u5b58\u50a8\u5e93\u4e2d\u53ef\u7528\u3002\n \u6211\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u7f62\u5de5\u7801\u5934\uff0c\u4f60\u53ef\u4ee5\u53c9\u5f00\u59cb\u3002\u8fd9\u652f\u7b14\u6709\u5373\u5c06\u5230\u6765\u7684\u793a\u4f8b\u6240\u9700\u7684\u6240\u6709JS\u5bfc\u5165/\u57fa\u672cCSS\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u6b22\u8fce\u60a8\u5728\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u73af\u5883\u4e2d\u5173\u6ce8\u3002 \n\u8981\u5f00\u59cb\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2aQuadtree\u7f51\u683c\uff0c\u5e76\u504f\u89c1\u968f\u673a\u5206\u5e03\u70b9\u3002\u504f\u89c1\u968f\u673a\u6570\u5728\u8fd9\u91cc\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u5f3a\u70c8\u7684\u89c6\u89c9\u7126\u70b9\u3002\u5177\u6709\u8bbd\u523a\u7684\u968f\u673a\u6027\uff0c\u8bbd\u523a\u7684\u662f\uff0c\u5f80\u5f80\u6709\u70b9\u65e0\u804a\u5730\u4e3a\u56db\u80a2\u7f51\u683c\u3002\u7f51\u683c\u533a\u57df\u770b\u8d77\u6765\u592a\u7edf\u4e00\uff0c\u56e0\u4e3a\u8be5\u70b9\u6563\u843d\u57282D\u7a7a\u95f4\u4e0a\u3002\n \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SVG\u5143\u7d20\u5448\u73b0\u6211\u4eec\u7684\u7f51\u683c\u533a\u57df\u3002\u8ba9\u6211\u4eec\u9996\u5148\u5b9a\u4e49SVG's ViewBox\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5c5e\u6027\uff1a\n  \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\uff06lt; svg\uff06gt;\u5143\u7d20\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528svg.js  - \u4e00\u4e2a\u5927\u5927\u7b80\u5316\u4e86\u52a8\u6001SVG\u811a\u672c\u7684JavaScript\u5e93\u3002\u5728\u6211\u7684\u751f\u6210SVG\u5165\u95e8\u5957\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728SVG.js\u4e2d\u9605\u8bfb\u66f4\u591a\u4fe1\u606f\u3002\n  \u73b0\u5728\u6211\u4eec\u6709\u6211\u4eec\u7684SVG\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e9b\u504f\u89c1\u7684\u968f\u673a\u70b9\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Randombias\u51fd\u6570\u3002\u6b64\u51fd\u6570\u57fa\u4e8e\u56db\u4e2a\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570\uff1a\n \u504f\u89c1 - \u6700\u5c0f\u503c\u548c\u6700\u5927\u6570\u91cf\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u5b57\uff0c\u8fd9\u662f\u201c\u7126\u70b9\u201d\n \u5f71\u54cd -  0  -  1\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8be5\u53c2\u6570\u786e\u5b9a\u8fd4\u56de\u7684\u6570\u5b57\u53ef\u80fd\u662f\u504f\u5dee\u7684\u5173\u95ed\u7a0b\u5ea6\u3002\n \u8ba9\u6211\u4eec\u5f39\u51fa\u4e00\u4e9b\u4ee3\u7801\u6765\u751f\u6210100\u4e2a\u968f\u673a\u70b9\uff0c\u91cd\u70b9\u671d\u5411\u89c6\u56fe\u6846\u7684\u4e2d\u5fc3\uff0c\u5e76\u4f7f\u7528svg.js\u5448\u73b0\u5b83\u4eec\uff1a \nconst\u70b9= [... array\uff08100\uff09]\u3002\u6620\u5c04\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u5bbd\u5ea6/ 2,1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u9ad8\u5ea6/ 2,1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\u8981\u70b9\u3002 foreach\uff08\uff08point\uff09=\uff06gt; {svg\u3002\u5706\u5708\uff082\uff09\u3002cx\uff08point .x\uff09\u3002cy\uff08point .y\uff09;}\uff09;\n    \u8fd9\u4e2a\u70b9\u5206\u5e03\u770b\u8d77\u6765\u5f88\u53ef\u7231\uff0c\u4f46\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u4ee3\u7801\uff0c\u4ee5\u4fbf\u7126\u70b9\u53ef\u4ee5\u53d8\u5316\u4e00\u70b9\u3002\u8ba9\u6211\u4eec\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1a\n const focus = {x\uff1a\u968f\u673a\uff080\uff0c\u5bbd\u5ea6\uff09\uff0cy\uff1a\u968f\u673a\uff080\uff0c\u9ad8\u5ea6\uff09\uff0c}; const\u70b9= [... array\uff08100\uff09]\u3002\u5730\u56fe\uff08\uff08\uff09=\uff06gt; {return {x\uff1arandombias\uff080\uff0c\u5bbd\u5ea6\uff0c\u7126\u70b9.x\uff0c1\uff09\uff0cy\uff1arandombias\uff080\uff0c\u9ad8\u5ea6\uff0c\u7126\u70b9\uff0c1\uff09\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1\uff0c}; }\uff09;\n \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u968f\u673a\u51fd\u6570\u6765\u5728\u7f51\u683c\u4e0a\u751f\u6210\u968f\u673a{x\uff0cy}\u7126\u70b9\u70b9\u3002\u66f4\u65b0\u4ee3\u7801\u540e\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u8fd9\u6837\u7684\u5185\u5bb9\uff1a\n  \u5b8c\u7f8e\u7684\uff01\u8fd9\u79cd\u805a\u7126\u5c1a\u968f\u673a\u7684\u5206\u5e03\u5c06\u975e\u5e38\u9002\u5408\u56db\u6805\u683c\u7f51\u683c\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\uff1a\n  \u5728\u6b64\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u5bbd\u5ea6\u503c\uff0c\u9ad8\u5ea6\u503c\uff0c\u7ea7\u522b\u9650\u5236\u4ee5\u53ca\u6211\u4eec\u521a\u624d\u751f\u6210\u7684\u70b9\u7684CreateQTGrid\u3002\u6211\u4eec\u8fd8\u901a\u8fc7\u5dee\u8ddd\u5c5e\u6027\u6765\u7ed9\u7f51\u683c\u533a\u6709\u70b9\u547c\u5438\u5ba4\u3002\n \u7535\u5e73\u9650\u5236\uff08\u7531MaxQtlevels\u63a7\u5236\uff09\u5b9a\u4e49\u4e86Quadtree\u53ef\u4ee5\u7ec6\u5206\u7684\u6b21\u6570\u3002\u8f83\u9ad8\u7684\u503c\uff0c\u914d\u5bf9\u8f83\u9ad8\u7684\u70b9\uff0c\u5c06\u5bfc\u81f4\u66f4\u8be6\u7ec6\u7684\u7f51\u683c\u3002 \n\u5982\u679c\u60a8\u73b0\u5728\u7684console.log\uff08\u7f51\u683c\uff09\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u4e00\u4e2a\u5177\u6709\u5c11\u6570\u4e0d\u540c\u5c5e\u6027\u7684\u5bf9\u8c61 - \u4f46\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u5bf9\u7f51\u683c\u533a\u57df\u611f\u5174\u8da3\u3002\u8ba9\u6211\u4eec\u904d\u5386\u8fd9\u4e9b\u5e76\u6e32\u67d3SVG\uff06lt; rect\uff06gt;\u6bcf\u4e00\u4e2a\u4eba\uff1a\n    \u4f18\u79c0\u7684\u3002\u5c31\u662f\u8fd9\u6837\uff01\u6211\u4eec\u5df2\u6210\u529f\u5730\u751f\u6210\u4e86\u4e00\u4e2a\u7f8e\u4e3d\u7684\u751f\u6210\u7f51\u683c\uff0c\u968f\u65f6\u51c6\u5907\u5145\u6ee1\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc\u662f\u6211\u4eec\u5982\u4f55\u5c06\u5706\u5708\u6dfb\u52a0\u5230\u968f\u673a\u9009\u62e9\u7f51\u683c\u533a\u57df\uff1a\n  \u563f\uff0c\u8fd9\u662f\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u539f\u79cd\u827a\u672f\uff01\u6240\u6709\u53ea\u662f\u51e0\u884c\u4ee3\u7801\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u8fd9\u4e2a\u6f14\u793a\uff0c\u4f46\u4f5c\u4e3a\u4e0b\u4e00\u6b65\uff0c\u6211\u5efa\u8bae\u4f7f\u7528\u70b9\u6570\uff0c\u6700\u5927\u7ec6\u5206\u91cf\uff08maxqtevels\uff09\u548c\u70b9\u5206\u5e03\u903b\u8f91 - \u770b\u770b\u4f60\u53ef\u4ee5\u521b\u9020\u7684\u4e1c\u897f\uff01\n  \u5728\u751f\u6210\u7684Quadtree\u83dc\u5355\u4e0a\u63a5\u4e0b\u6765\u662f\u4e00\u4e9b\u57fa\u4e8e\u56fe\u50cf\u7684\u7f51\u683c\u3002\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u56fe\u50cf\u6587\u4ef6\u7684\u50cf\u7d20\u503c\u6765\u786e\u5b9a\u6211\u4eec\u7684\u5e95\u5c42\u70b9\u3002\n \u8981\u8bbe\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5728\u6700\u540e\u4e00\u4e2a\u6f14\u793a\u4e2d\u5b9a\u4e49\u7684SVG\u5143\u7d20\u548c\u5bbd\u5ea6/\u9ad8\u5ea6\u53d8\u91cf\u3002\u6ce8\u91ca\u51fa\u4e0a\u4e00\u70b9\uff0c\u6e32\u67d3\u4ee3\u7801\u6216\u53c9\u7b14\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u3002\u4f60\u7684\u6765\u7535\uff01\n \u597d\u7684\uff0c\u6240\u6709\u96c6\u5408\uff1f\u8ba9\u6211\u4eec\u627e\u5230\u5408\u9002\u7684\u5f62\u8c61\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u6f14\u793a\uff0c\u4ec5\u5305\u542b\u5b8c\u5168\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7684\u7b80\u5355\u56fe\u7247\u662f\u5b8c\u7f8e\u7684\u3002\u5f62\u72b6\uff08\u5706\u5f62\uff0c\u65b9\u5f62\uff0c\u87ba\u65cb\uff09\u7684\u57fa\u672c\u8f6e\u5ed3\u662f\u7406\u60f3\u7684\u3002\u60f3\u60f3\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\n  \u5982\u679c\u60a8\u4e0d\u559c\u6b22\u97ad\u6253\u4efb\u4f55\u81ea\u5b9a\u4e49\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u8d8a\u65e9\u7684\u4e00\u4e9b\u3002 *\u4ece\u5947\u602a\u7684\u6570\u5b57\u70e4\u7bb1\u4e2d\u5220\u9664\u9884\u5148\u5236\u9020\u7684\u5f62\u72b6...... * \n\u8fd9\u4e9b\u56fe\u50cf\u7684\u5927\u5c0f\u4e3a192x192px\uff0c\u5339\u914d\u793a\u4f8bSVG ViewBox\u548cQuadtree\u7f51\u683c\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c5e\u6027\u3002\u5c06\u56fe\u50cf\u793a\u4f8b\u683c\u5f0f\u5316\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ee5\u8282\u7701\u5fc5\u987b\u6267\u884c\u4efb\u4f55\u65f6\u9ae6\u7684\u8ba1\u7b97\u3002\u60a8\u4e0d\u5fc5\u4e3a\u6b64\u5206\u8fa8\u7387\u5de5\u4f5c\uff0c\u4f46\u8bf7\u5c1d\u8bd5\u5e76\u786e\u4fdd\u60a8\u7684\u56fe\u50cf\u5c3a\u5bf8\u5339\u914d\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u5c3a\u5bf8\u3002\n \u6ce8\u610f\uff1a\u867d\u7136\u8fd9\u4e9b\u6e90\u56fe\u50cf\u975e\u5e38\u5c0f\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u5c06\u6269\u5c55\u5230\u4efb\u4f55\u5927\u5c0f\u3002\n \u9009\u62e9\u56fe\u50cf\u540e\uff0c\u5f39\u56de\u4ee3\u7801\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u5e03\u5143\u7d20\uff0c\u5c06\u5176\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u8bbe\u7f6e\u4e3aSVG Viewbox /\u7f51\u683c\uff0c\u5e76\u5c06\u5176\u4e0a\u4e0b\u6587\u5b58\u50a8\u5728\u65b0\u53d8\u91cf\u4e2d\u3002\u6211\u4eec\u5c06\u5728\u7247\u523b\u4e2d\u4f7f\u7528\u6b64\u753b\u5e03\u6765\u6e32\u67d3\u6211\u4eec\u7684\u56fe\u50cf\u5e76\u63d0\u53d6\u5176\u50cf\u7d20\u6570\u636e\u3002\n    \u4e00\u65e6\u56fe\u50cf\u52a0\u8f7d\uff0c\u6211\u4eec\u5c06\u5176\u6e32\u67d3\u4e3a\u6211\u4eec\u7684\u753b\u5e03\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u70b9\u6570\u7ec4\uff0c\u5e76\u5faa\u73af\u901a\u8fc7\u6240\u6709\u753b\u5e03\u7684\u50cf\u7d20\u3002\u5982\u679c\u50cf\u7d20\u5177\u6709\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\u503c\u4e3a0\uff08\u9ed1\u8272\u50cf\u7d20\uff09\uff0c\u5219\u6211\u4eec\u5c06\u5176\u5750\u6807\u5b58\u50a8\u5728\u70b9\u6570\u7ec4\u4e2d - \u8fd9\u5c31\u662f\u6211\u4eec\u4f7f\u7528\u4ec5\u7531\u9ed1\u8272\u6216\u767d\u8272\u50cf\u7d20\u7ec4\u6210\u7684\u56fe\u50cf\u7684\u539f\u56e0\u3002\n \u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u6269\u5c55\u6b64\u4ee3\u7801\u4ee5\u5904\u7406\u5168\u5f69\u8272\u56fe\u50cf\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u4e3a\u6f14\u793a\u4fdd\u6301\u7b80\u5355\u7684\u4e8b\u7269\u3002\n \u8981\u5728\u6b64\u5904\u8fdb\u884c\u4e00\u4e9b\u53ef\u89c6\u53cd\u9988\uff0c\u8bf7\u8ba9\u6211\u4eec\u5728\u8fd9\u4e9b\u70b9\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6e32\u67d3SVG\u5708\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {CTX\u3002\u62d4\u8ff9\uff08IMG\uff0c0,0\uff09; const\u70b9= []; for\uff08\u8bbe\u5b9ax = 0; x\uff06lt;\u5bbd\u5ea6; x ++\uff09{for\uff08\u8bbe\u5b9a= 0; y\uff06lt; height; height; y ++\uff09{const {data} = ctx\u3002 getimagedata\uff08x\uff0cy\uff0c1,1\uff09; if\uff08\u6570\u636e[0] +\u6570\u636e[1] +\u6570\u636e[2] === 0\uff09{\u70b9\u3002\u63a8\uff08{x\uff0cy\uff0c\u5bbd\u5ea6\uff1a1\uff0c\u9ad8\u5ea6\uff1a1}\uff09; SVG\u3002\u5706\u5708\uff081\uff09\u3002 cx\uff08x\uff09\u3002 cy\uff08y\uff09; }}}}; \n\u563f\uff0c\u770b\u770b\uff01\u5b83\u662f\u539f\u59cb\u56fe\u50cf\u53d8\u6210{x\uff0cy}\u70b9\u3002\u5b8c\u7f8e\u7684\u3002\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e9b\u70b9\u4f20\u9012\u7ed9\u6211\u4eec\u7684CreateQTGrid\u51fd\u6570\uff0c\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\u3002\u8fd9\u6b21\uff0c\u5c1d\u8bd5\u5c06MaxQtlevels\u8bbe\u7f6e\u4e3a\u7a0d\u9ad8\u7684\u6570\u5b57 - \u8fd9\u5e94\u8be5\u6709\u52a9\u4e8e\u5728\u7f51\u683c\u4e2d\u5e26\u51fa\u8be6\u7ec6\u4fe1\u606f\uff1a\n img\u3002 onload =\uff08\uff09=\uff06gt; {... const grid = createqtgrid\uff08{\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u70b9\uff0c\u95f4\u9699\uff1a1\uff0cmaxqtlevels\uff1a6}\uff09; }\n \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4e0e\u6f14\u793a\uff031\u76f8\u540c\u7684\u65b9\u5f0f\u5faa\u73af\u901a\u8fc7\u7f51\u683c\u533a\u57df\uff0c\u6e32\u67d3\u6bcf\u4e2aON\u7684SVG\u77e9\u5f62\uff1a\n    \u7f8e\u4e3d\u7684\uff01\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5e95\u5c42\u6e90\u56fe\u50cf\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6e90\u56fe\u50cf\u662f\u6590\u6ce2\u7eb3\u5951\u87ba\u65cb\u3002\u975e\u5e38\u82b1\u54e8\u7684\u786e\uff01\u8fd9\u662f\u8fd9\u4e2a\u7f51\u683c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5706\u5f62/\u77e9\u5f62\u7684\u4e1c\u897f\uff1a\n  \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u540c\u7684\u56fe\u50cf\u9700\u8981\u7565\u5fae\u4e0d\u540c\u7684maxqtlevels\u503c\u3002\u5c31\u50cf\u751f\u6210\u827a\u672f\u4e2d\u7684\u4e00\u5207\u4e00\u6837\uff0c\u6ca1\u6709\u5355\u4e00\u7684\u9b54\u6cd5\u53f7\u7801\u3002\u6700\u597d\u7684\u7ed3\u679c\u6765\u81ea\u5c4f\u5e55\u4e0a\u7684\u8bb8\u591a\u8c03\u6574\u548c\u772f\u773c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\u5728\u6211\u4eec\u7684Quadtree\u5192\u9669\u4e2d\uff0c\u6211\u4eec\u4e13\u95e8\u4f7f\u7528SVG\u6765\u6e32\u67d3\u6211\u4eec\u7684\u7f51\u683c\uff0c\u4f46\u4f3c\u4e4e\u6709\u70b9\u7f9e\u803b\u5730\u79bb\u5f00CSS\u7f51\u683c\uff0c\u5bf9\u5427\uff1f\n \u597d\u5427\uff0c\u6211\u6709\u4e00\u4e9b\u597d\u6d88\u606f\uff01 CreateQTGrid\u8fd4\u56de\u7684\u533a\u57df\u5bf9\u8c61\u4e5f\u5177\u6709COL\u548c\u884c\u503c\u3002\u4f7f\u7528\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u751f\u6210CSS\u7f51\u683c\u5e03\u5c40 - \u51c6\u5907\u7528\u4e8e\u5404\u79cd\u521b\u65b0\u8bbe\u8ba1\u3002 \n\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8fdb\u5165\u592a\u591a\u7ec6\u8282\uff0c\u56e0\u4e3a\u521b\u5efaCSS\u7f51\u683c\u5e03\u5c40\u7684\u8fc7\u7a0b\u4e0e\u524d\u4e00\u4e2a\u793a\u4f8b\u7684\u8fdb\u7a0b\u76f8\u540c\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u6587\uff0c\u663e\u793a\u5982\u4f55\u4f7f\u7528HTML / CSS\u7684CreateQtGrid\u51fd\u6570\uff1a  \u563f\uff0c\u6211\u4eec\u505a\u4e86\uff01 \u975e\u5e38\u611f\u8c22\u4f60\u7684\u9605\u8bfb\u76f4\u5230\u6700\u540e\u3002 \u6211\u77e5\u9053\u8fd9\u4e9b\u6982\u5ff5\u6709\u70b9\u6c89\u91cd\uff0c\u4f46\u8fd9\u91cc\u5b66\u5230\u7684\u6280\u672f\u5c06\u5728\u60a8\u7684\u751f\u6210\u827a\u672f\u5192\u9669\u4e2d\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\u3002  \u5982\u679c\u60a8\u5728\u672c\u6559\u7a0b\u4e2d\u6388\u8bfe\u7684\u5185\u5bb9\u9177\uff0c\u8bf7\u544a\u8bc9\u6211\uff01 \u6ca1\u6709\u6211\u7684\u559c\u7231\uff0c\u800c\u4e0d\u662f\u770b\u5230\u57fa\u4e8e\u6211\u7684\u6559\u7a0b\u7684\u4eba\u4eec\u505a\u4e9b\u4ec0\u4e48\u3002  \u6ce8\u518c\u6bcf\u6708\u66f4\u65b0\u5bf9\u6211\u7684\u65b0\u5185\u5bb9\uff0c\u9009\u62e9\u6211\u6700\u559c\u6b22\u7684\u65b0\u4ee3\u53f7\uff0c\u7f8e\u5473\u7684\u5b57\u4f53\uff0c\u65b9\u4fbf\u7684\u524d\u7aef+\u8bbe\u8ba1\u63d0\u793a\u7b49\u7b49\uff01 \u2728 ", "note_en": "In this tutorial, we will be learning to create super versatile generative/random grid layouts in just a few lines of JavaScript. Using a data structure called a Quadtree, we will produce harmonious grids based on random numbers, source images, user input, and more.\n The chaotic, yet perfectly aligned world of generative grids is waiting for us \u2014 let\u2019s go!\n Note: I picked up this technique from one of my all-time favorite design agencies,  Pentagram. In their branding work for  Graphcore, they use Quadtrees extensively to generate random yet visually coherent patterns. The output is stunning and is a fantastic example of what you can create with this method.  You can check out a case study of the work here!\n  First things first, let\u2019s go over exactly  what we are cooking up in this tutorial. Here\u2019s an animated example of a generative Quadtree grid in action:\n   Add some  { x, y } points to a 2D space. In this example, the point\u2019s positions are random but biased towards a focal point.\n   Use the resulting grid areas to position stuff! In the example above, I am using squares and circles to form a simple pattern.\n  By experimenting with creative ways to position the points, we can create some  super interesting grid layouts. This example uses biased random numbers, but what if, for example \u2014 the points came from the brightness values of an image?\n We could pass in a picture of a Fibonacci spiral, a circle, a square, whatever, and have our points generate based on its pixel values. The possibilities are endless! Any method for positioning objects in a 2D space will work.  The weirder, the better.\n  The subdividing magic we see here is all handled by a data structure called a  Quadtree. I like to think of Quadtrees as little containers. Once the Quadtree fills with a certain number of objects, it splits itself into four more Quadtrees. Once those Quadtrees fill up, they divide themselves again, and so on.\n Quadtrees can be tricky to visualize, so here is an interactive example \u2014 click to add objects/points and observe how the Quadtree subdivides. In this example, the maximum number of items a Quadtree can contain is  four.\n  Very satisfying indeed\u2026 this is everything we need to know about Quadtrees for this tutorial, but if you would like to learn more about how they work/how you can use them,  check out this video by Dan Shiffman.\n  Although anyone is, of course, welcome to follow along \u2014 this tutorial is perfect for folks comfortable with JavaScript and  familiar with SVG/HTML Canvas.\n   To keep things simple and let us focus on the fun stuff \u2014 I have added a handy  createQtGrid function to my  generative-utils repo. This function takes an array of points and returns a ready-to-use Quadtree grid. If you would like to dive into the source code, it is  available in this repository.\n I have also created a  starter CodePen that you can  fork to get started. This pen has all of the JS imports/basic CSS you need for the upcoming examples. As always, though, you are welcome to follow along in any environment you like.\n  To start, let\u2019s create a Quadtree grid with a biased random distribution of points. Biased random numbers work great here, as they provide a strong visual focus. Pure randomness, ironically, tends to look  a little boring for Quadtree grids. The grid areas look too uniform, as the points are scattered all over the 2D space.\n In this example, we will use an SVG element to render our grid areas. Let\u2019s start by defining a  width and  height property for the SVG\u2019s viewBox:\n  Next, let\u2019s create a new  &lt;svg&gt; element to render our grid. For this, we are going to use  svg.js \u2014 a JavaScript library that greatly simplifies dynamic SVG scripting.  You can read a little more about svg.js in my  Generative SVG Starter Kit.\n  Now that we have our SVG element, we can generate some biased random points. To do so, we can make use of the  randomBias function. This function returns a random number based on four arguments:\n Bias - any number between the minimum and maximum number, this is the \u201cfocus point\u201d\n Influence - A number between 0 - 1, this argument determines how close the returned number is likely to be to the bias.\n Let\u2019s pop some code in to generate 100 random points, with a focus towards the center of the viewBox, and use svg.js to render them:\n const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , width  /  2 ,  1 ) ,  y :  randomBias ( 0 , height , height  /  2 ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;  points . forEach ( ( point )  =&gt;  {  svg . circle ( 2 ) . cx (point .x ) . cy (point .y ) ;  } ) ;\n    This point distribution looks lovely, but we should update the code so that the focus point can vary a little. Let\u2019s make that happen:\n const focus  =  {  x :  random ( 0 , width ) ,  y :  random ( 0 , height ) ,  } ;   const points  =  [ ... Array ( 100 ) ] . map ( ( )  =&gt;  {   return  {  x :  randomBias ( 0 , width , focus .x ,  1 ) ,  y :  randomBias ( 0 , height , focus .y ,  1 ) ,  width :  1 ,  height :  1 ,   } ;  } ) ;\n In this snippet, we use the  random function to generate a random  { x, y } focus point on the grid. Once the code is updated, you should see something like this:\n  Perfect! This focused-yet-random distribution is going to look great for Quadtree grids. Let\u2019s create one:\n  In this snippet, we call  createQtGrid with a width value, a height value, a level limit, and the points we generated just now. We also pass in a  gap property to give the grid areas a little breathing room.\n The level limit (controlled by  maxQtLevels) defines how many times the Quadtree can subdivide. A higher value, paired with a higher number of points, will result in a more detailed grid.\n If you  console.log(grid) now, you should see an object with a few different properties \u2014 at this point, though, we are only interested in the grid areas. Let\u2019s iterate over these and render an SVG  &lt;rect&gt; for each one:\n    Excellent. That\u2019s it! We have successfully generated a beautiful generative grid, ready to be filled with anything you like. As a simple example, here\u2019s how we could add a circle to a random selection of the grid areas:\n  Hey, that\u2019s some pretty cool generative art! All in just a few lines of code, too. We are all done with this demo now, but as a next step, I suggest having a play with the number of points, maximum subdivision amount ( maxQtLevels), and the point distribution logic \u2014 see what you can create!\n  Next up on the generative Quadtree menu are some delicious image-based grids. For this example, we will be using the pixel values of image files to determine our underlying points.\n To get set up, we can re-use the SVG element and width/height variables defined in the last demo. Either comment out the previous point generation/render code or fork the pen and create a fresh canvas. Your call!\n Ok, all set? Let\u2019s find a suitable image. For our demo, a simple picture comprised of only entirely black or white pixels is perfect. The basic outline of a shape  (a circle, square, spiral) is ideal. Think something like this:\n  If you don\u2019t fancy whipping up any custom images, here are some I made earlier.  *Removes pre-made shapes from the weird digital oven\u2026*\n  These images are all  192x192px in size, matching the width/height attributes of the example SVG viewBox and Quadtree grid. The image examples are formatted this way to save on having to do any funky calculation. You don\u2019t have to work to this resolution, but try and make sure your image dimensions match the width/height dimensions defined in your code.\n Note: although these source images are quite small, the end result will scale to any size.\n Once you have chosen your image, pop back into the code and create a new  canvas element, setting its width and height to that of your SVG viewBox/grid and storing its  context in a new variable. We will use this canvas in a moment to render our image and extract its pixel data.\n    Once the image has loaded, we render it to our canvas, define a new  points array, and loop through all of the canvas\u2019s pixels. If a pixel has a red, green, and blue value of 0  (a black pixel), we store its coordinates in the points array \u2014 this is why we are using images comprised of only black or white pixels.\n Note: You could expand this code to handle full color images, but we are keeping things simple for the demo.\n To get some visual feedback on what is happening here, let\u2019s also render an SVG  circle at each of these points:\n img . onload  =  ( )  =&gt;  {  ctx . drawImage (img ,  0 ,  0 ) ;    const points  =  [ ] ;    for  ( let x  =  0 ; x  &lt; width ; x ++ )  {   for  ( let y  =  0 ; y  &lt; height ; y ++ )  {   const  { data  }  = ctx . getImageData (x , y ,  1 ,  1 ) ;   if  (data [ 0 ]  + data [ 1 ]  + data [ 2 ]  ===  0 )  {  points . push ( { x , y , width :  1 , height :  1  } ) ;   svg . circle ( 1 ) . cx (x ) . cy (y ) ;   }   }   }  } ;\n   Hey, look at that! It\u2019s the original image turned into  { x, y } points. Perfect. Let\u2019s pass these points to our  createQtGrid function, just like before. This time, try setting  maxQtLevels to a slightly higher number \u2014 this should help bring out the detail in the grid:\n img . onload  =  ( )  =&gt;  {   ...    const grid  =  createQtGrid ( {  width ,  height ,  points ,  gap :  1 ,  maxQtLevels :  6   } ) ;  }\n Now, we can loop through the grid areas in the same way as demo #1, rendering an SVG rectangle at each one:\n    Beautiful! We have created a generative grid layout based on an underlying source image. In this case, that source image is a Fibonacci spiral. Very fancy indeed! Here\u2019s what this grid looks like with some circles/rectangles placed on it:\n  It\u2019s worth noting that different images will need slightly different  maxQtLevels values. Like everything in generative art, there is no single magic number. The best results come from lots of tweaking and squinting at the screen.\n  So far in our Quadtree adventure, we have exclusively used SVG to render our grids, but it seems like a bit of a shame to leave CSS grid out of the party, right?\n Well, I have some good news! The  area objects that  createQtGrid returns also have  col and  row values. Using these values, we can easily create generative CSS grid layouts \u2014 ready to use for all kinds of innovative designs.\n I won\u2019t go into too much detail here, as the process for creating CSS grid layouts is identical to that of the previous examples, but here\u2019s a CodePen showing how to use the  createQtGrid function with HTML/CSS:\n    Hey, we made it! Thank you so much for reading until the end. I know some of these concepts are a little heavy, but the techniques learned here will serve you well on your generative art adventure.\n If you make anything cool with the stuff taught in this tutorial, please let me know! There\u2019s nothing I love more than seeing what folks make based on my tutorials.\n   Sign up for monthly updates on fresh content from me, a selection of my favorite new CodePens, tasty fonts, handy front-end + design tips, and more! \u2728", "posttime": "2021-06-26 13:02:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5177\u6709,generative,\u7f51\u683c", "title": "\u5efa\u7acb\u5177\u6709\u56db\u53c9\u6811\u7684\u751f\u6210\u7f51\u683c\u5e03\u5c40 ", "title_en": "Building Generative Grid Layouts with Quadtrees", "transed": 1, "url": "https://georgefrancis.dev/writing/generative-grid-layouts-with-quadtrees/", "via": "", "real_tags": ["\u5177\u6709", "\u7f51\u683c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2,000\u5c81\u7684\u7eaa\u5ff5\u7891\u7684Hypogeum  - \u5b83\u7684\u201cBackstage\u201d - \u4ee5\u4eba\u884c\u9053\u4e3a\u8bbf\u5ba2\u6062\u590d\n    \u5728\u7f57\u9a6c\u7684\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e38\u5ba2\u9996\u6b21\u53ef\u4ee5\u5145\u5206\u63a2\u7d22\u5730\u4e0b\u96a7\u9053\u548c\u5ba4\u4f19\u4f34\uff0c\u66fe\u7ecf\u4e3a\u6218\u6597\u505a\u597d\u51c6\u5907\u7684\u89d2\u9053\u548c\u91ce\u751f\u52a8\u7269\u3002\n \u5360\u573015000\u5e73\u65b9\u7c73\uff0c2000\u5e74\u5386\u53f2\u7684\u7eaa\u5ff5\u7891\u7684\u6865\u7403\u5bf9\u516c\u4f17\u5f00\u653e\uff0c\u540e\u8005\u5728\u610f\u5927\u5229\u65f6\u88c5\u5c4bTod\u8d44\u52a9\u7684\u6062\u590d\u9879\u76ee\u5b8c\u6210\u540e\u3002\n  \u867d\u7136\u4eba\u4eec\u80fd\u591f\u4e0b\u964d\u5230\u6865\u7403\u7f51\u7edc - \u8fd9\u662f\u5706\u5f62\u5267\u573a\u7684\u7ade\u6280\u573a\uff0c\u53e4\u4ee3\u5267\u573a\u7684\u7ade\u6280\u573a\u662f\u4ec0\u4e48 - \u81ea2010\u5e74\u4ee5\u6765\uff0c\u4ed6\u4eec\u53ea\u80fd\u8fdb\u5165\u4e00\u5c0f\u90e8\u5206\u3002\u73b0\u5728\u6709\u8d70\u9053\u8ba9\u6e38\u5ba2\u63a2\u7d22\u96a7\u9053\u548c\u8154\u5ba4\u3002\n \u7f57\u9a6c\u6597\u517d\u573a\u4e3b\u4efb\u963f\u5c14\u6cd5\u5c3c\u7eb3\u00b7\u7f57\u8428\u65af\uff08Alfonsina Russo\uff09\u8868\u793a\uff0c\u6700\u521d\u572819\u4e16\u7eaa\u6316\u6398\u7684\u4f4e\u9ea6\u7247\u662f\u5706\u5f62\u5267\u573a\u7684\u771f\u6b63\u7684\u201c\u540e\u53f0\u201d\u3002\n \u201c\u4eca\u5929\u6211\u4eec\u6b63\u5728\u7559\u5230\u4e00\u5ea7\u7eaa\u5ff5\u7891\u5185\u7684\u7eaa\u5ff5\u7891\uff0c\u201dRusso\u8bf4\u3002 \u201c\u4ece\u9879\u76ee\u4e2d\u51fa\u73b0\u4e86\u4ec0\u4e48\u6837\u7684\u662f\uff0c\u6865\u7403\u6709400\u5c81\u7684\u5386\u53f2\uff0c\u4ece\u5706\u5f62\u5267\u573a\u5728AD80\u5f00\u4e1a\u5230523\u5e74\u7684\u6700\u7ec8\u5c55\u4f1a\u3002\u201d\n \u5979\u8bf4\uff0c15\u6b21\u6062\u590d\u7684\u8d70\u5eca\u53d9\u8ff0\u4e86\u201c\u5386\u53f2\u8ffd\u8e2a\u201d\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5de6\u8f6c\u201c\u3002 \nTod's\u8463\u4e8b\u957f\u8fed\u6208\u5fb7\u62c9\u5c71\u8c37\u8868\u793a\uff0c\u8d85\u8fc780\u540d\u8003\u53e4\u5b66\u5bb6\uff0c\u5efa\u7b51\u5e08\u548c\u5de5\u7a0b\u5e08\u4eec\u53c2\u4e0e\u4e86\u4e24\u5e74\u7684\u9879\u76ee\u201c\u5e26\u56de\u5168\u4e16\u754c\u7231\u7684\u7eaa\u5ff5\u7891\u201d\u3002\n \u5f53\u610f\u5927\u5229\u6587\u5316\u90e8\u957fDario FrancesChini\u5ba3\u5e03\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u7684\u6279\u8bc4\uff0c\u4e3a\u7f57\u9a6c\u7eaa\u5ff5\u7891\u8fdb\u884c\u4e86\u51e0\u4e2a\u516c\u79c1\u4f19\u4f34\u5173\u7cfb\u3002 Hypogeum\u7684\u6062\u590d\u662f\u5728\u4e4d\u4e00\u770b\u7684\u4e09\u9636\u6bb5\u9879\u76ee\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u5f00\u59cb\u516b\u5e74\u524d\uff0c\u8fc4\u4eca\u4e3a\u6b62\u6258\u5fb7\u5171\u8ba1\u989d\u5916\u652f\u4ed82500\u4e07\u6b27\u5143\uff082100\u4e07\u82f1\u9551\uff09\u3002\n \u7b2c\u4e00\u9636\u6bb5\u4e13\u6ce8\u4e8e\u7f57\u9a6c\u6597\u517d\u573a\u7684\u6e05\u7406\uff0c\u4ee5\u53ca\u9884\u8ba1\u5c06\u4e8e2024\u5e74\u5b8c\u6210\u7684\u6700\u540e\u4e00\u90e8\u5206\u5c06\u6d89\u53ca\u6062\u590d\u753b\u5eca\u548c\u7167\u660e\u7cfb\u7edf\u4ee5\u53ca\u6dfb\u52a0\u65b0\u7684\u6e38\u5ba2\u4e2d\u5fc3\u3002\n \u201c\u62e5\u6709\u5b8c\u5168\u516c\u79c1\u5408\u4f5c\u6709\u6743\uff0c\u201dFranceschini\u8bf4\u3002 \u201c\u8be5\u9879\u76ee\u975e\u5e38\u91cd\u8981\uff0c\u5e76\u5c55\u793a\u4e86\u4e00\u5bb6\u610f\u5927\u5229\u516c\u53f8\u5982\u4f55\u51fa\u53e3\u4e16\u754c\u5404\u5730\u7684\uff0c\u7136\u540e\u5728\u5176\u56fd\u5bb6\u6295\u8d44\u4ee5\u4fdd\u62a4\u5176\u827a\u672f\u548c\u6587\u5316\u9057\u4ea7\u3002\u201d\n \u5176\u4ed6\u610f\u5927\u5229\u54c1\u724c\u5df2\u7ecf\u652f\u4ed8\u4e86\u5173\u952e\u7eaa\u5ff5\u7891\u7684\u88c5\u4fee\uff0c\u5305\u62ec\u4fee\u590dTrevi\u55b7\u6cc9\u548cBulgari\u7684Fendi\uff0c\u6062\u590d\u4e86\u897f\u73ed\u7259\u8bed\u6b65\u9aa4\u3002\n \u4e0e\u6b64\u540c\u65f6\uff0c\u9884\u8ba1\u5c06\u57282023\u5e74\u6062\u590d\u6597\u517d\u573a\u5730\u677f\u7684\u9879\u76ee\u3002\u65b0\u7684\u9ad8\u79d1\u6280\u9636\u6bb5\u53ef\u80fd\u4f1a\u4e3e\u529e\u6587\u5316\u6d3b\u52a8\uff0c\u5c06\u80fd\u591f\u5feb\u901f\u8986\u76d6\u6216\u63ed\u793a\u5730\u4e0b\u7f51\u7edc\uff0c\u5141\u8bb8\u4ed6\u4eec\u53d7\u5230\u9632\u6b62\u96e8\u6c34\u6216\u64ad\u51fa\u3002\n \u5728\u7f57\u9a6c\u65f6\u4ee3\uff0c\u4eba\u7fa4\u5c06\u586b\u8865\u7f57\u9a6c\u6597\u517d\u573a\u89c2\u770b\u89d2\u6597\u58eb\u51fb\u8d25\u52a8\u7269\uff0c\u5305\u62ec\u718a\uff0c\u8001\u864e\uff0c\u5927\u8c61\u548c\u7280\u725b\u3002 ", "note_en": "Hypogeum of 2,000-year-old monument \u2013 its \u2018backstage\u2019 \u2013 restored with walkways for visitors\n    For the first time, visitors to the Colosseum in Rome can fully explore the underground tunnels and chambers where gladiators and wild animals once prepared for battle.\n Spread across 15,000 square metres, the hypogeum of the 2,000-year-old monument is open to the public following the completion of a restoration project funded by the Italian fashion house Tod\u2019s.\n  Although people have been able to descend into the hypogeum network \u2013 which lies beneath what was the amphitheatre\u2019s arena and was invisible to spectators in ancient times \u2013 since 2010, they could enter only a small section. Now there are walkways allowing visitors to explore the tunnels and chambers.\n Alfonsina Russo, the director of the Colosseum, said the hypogeum, which was originally excavated in the 19th century, was the true \u201cbackstage\u201d of the amphitheatre.\n \u201cToday we are returning to the public a monument within a monument,\u201d Russo said. \u201cWhat emerged [from the project] is that the hypogeum had a 400-year-long history, from when the amphitheatre opened in AD80 to the final show in 523.\u201d\n She said the 15 restored corridors recounted \u201ctraces [of history] left over time\u201d.\n More than 80 archaeologists, architects and engineers were involved in the two-year project to \u201cbring back to the centre of attention a monument that the whole world loves\u201d, said Diego Della Valle, the chairman of Tod\u2019s.\n There was much criticism when Italy\u2019s culture minister, Dario Franceschini, announced several public-private partnerships for the renovation of Rome\u2019s monuments. The restoration of the hypogeum is the second part of a three-phase project on the Colosseum that began eight years ago and for which Tod\u2019s has paid a total of \u20ac25m (\u00a321m).\n The first phase focused on a clean-up of the Colosseum\u2019s facade, and the final part, expected to be completed in 2024, will involve restoring the galleries and lighting system as well as adding a new visitor centre.\n \u201cIt\u2019s right to have full public-private collaboration,\u201d Franceschini said. \u201cThe project is really important and demonstrates how an Italian company, which exports all over the world, then invests back in its country to protect its artistic and cultural heritage.\u201d\n Other Italian brands that have paid for the renovations of key monuments include Fendi, which restored the Trevi Fountain, and Bulgari, which restored the Spanish Steps.\n Meanwhile, a project to restore the  floor of the Colosseum to its former glory is expected to be completed in 2023. The new, hi-tech stage, which could host cultural events, will be able to quickly cover or uncover the underground networks, allowing them to be protected from the rain or to be aired out.\n In Roman times, crowds would fill the Colosseum to watch gladiators defeat animals including bears, tigers, elephants and rhinoceroses.", "posttime": "2021-06-26 13:01:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f57\u9a6c,tunnels,\u6062\u590d", "title": "\u7f57\u9a6c\u7684\u5730\u4e0b\u96a7\u9053\u5b8c\u5168\u5411\u516c\u4f17\u5f00\u653e ", "title_en": "Underground tunnels of Rome\u2019s Colosseum fully opened to public", "transed": 1, "url": "https://www.theguardian.com/world/2021/jun/25/underground-tunnels-of-romes-colosseum-fully-opened-to-public", "via": "", "real_tags": ["\u7f57\u9a6c", "tunnels", "\u6062\u590d"]}]
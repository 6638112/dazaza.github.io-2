[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1069760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CSX 8888 \u5931\u63a7\u8c03\u67e5\uff0c2001 \u5e74 11 \u6708 5 \u65e5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6536\u5230\u3002\u6839\u636e\u60a8\u7684\u6307\u793a\uff0c\u4ee5\u4e0b\u62a5\u544a\u603b\u7ed3\u4e86\u8c03\u67e5\u59d4\u5458\u4f1a\u7684\u5de5\u4f5c\uff0c\u8be5\u8c03\u67e5\u59d4\u5458\u4f1a\u88ab\u6307\u6d3e\u5ba1\u67e5\u548c\u5206\u6790 2001 \u5e74 5 \u6708 15 \u65e5\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u5176\u4e2d\u4e00\u8f86\u8f7d\u6709\u6c7d\u8f66\u7684\u673a\u8f66\u4ece\u65af\u5766\u5229\u8239\u5382\u5728\u4fc4\u4ea5\u4fc4\u5dde\u6258\u83b1\u591a\u9644\u8fd1\u7684 CSXT \u4e0a\u5411\u5357\u884c\u9a76\u5230\u4fc4\u4ea5\u4fc4\u5dde\u80af\u987f\uff0c\u8239\u4e0a\u6ca1\u6709\u8239\u5458\u3002\u6211\u5f97\u5230\u4e86 MPE \u68c0\u67e5\u5458 Mike Lusher \u548c OP \u68c0\u67e5\u5458 Ed Scalzitti \u7684\u534f\u52a9\uff0c\u4ed6\u4eec\u6700\u521d\u5bf9\u4e8b\u4ef6\u505a\u51fa\u4e86\u56de\u5e94\uff0c\u9996\u5e2d\u68c0\u67e5\u5458 Harold Rugh \u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u6280\u672f\u4fe1\u606f\u3002 2001 \u5e74 5 \u6708 15 \u65e5\uff0c\u5927\u7ea6\u4e0b\u5348 12 \u70b9 35 \u5206\uff0c\u590f\u4ee4\u65f6\uff0c\u4e00\u8f86\u7531\u4e00\u8f86 SD-40-2 \u578b\u673a\u8f66\u300122 \u8f86\u88c5\u8f7d\u548c 25 \u8f86\u7a7a\u8f66\u30012898 \u603b\u62d6\u8f66\u7ec4\u6210\u7684\u65e0\u4eba CSX \u7801\u5217\u5217\u8f66\u79bb\u5f00\u4f4d\u4e8e\u6c83\u5c14\u5e03\u91cc\u5947\u7684\u65af\u5766\u5229\u573a\uff0c\u4fc4\u4ea5\u4fc4\u5dde\u3002\u5728 CSX \u4eba\u5458\u80fd\u591f\u63a7\u5236\u8fd0\u52a8\u4e4b\u524d\uff0c\u4e0d\u53d7\u63a7\u5236\u7684\u8fd0\u52a8\u5411\u5357\u8fdb\u884c\u4e86 66 \u82f1\u91cc\u7684\u8ddd\u79bb\u3002\u4e8b\u53d1\u65f6\uff0c\u5929\u6c14\u591a\u4e91\uff0c\u6709\u5c0f\u96e8\u3002\u73af\u5883\u6e29\u5ea6\u4e3a 55 \u534e\u6c0f\u5ea6\u3002\u8bbe\u5907\u6709\u8282\u70b9\u6545\u969c\u6216\u78b0\u649e\u3002\u4e8b\u4ef6\u6ca1\u6709\u9020\u6210\u53ef\u62a5\u544a\u7684\u4f24\u5bb3\u3002 2001 \u5e74 5 \u6708 15 \u65e5\u590f\u4ee4\u65f6\u4e0a\u5348 6 \u70b9 30 \u5206\uff0c\u7531\u4e00\u540d\u5de5\u7a0b\u5e08\u3001\u4e00\u540d\u5217\u8f66\u5458\u548c\u4e00\u540d\u5239\u8f66\u5458\u7ec4\u6210\u7684 Y11615 \u8f66\u573a\u5de5\u4f5c\u4eba\u5458\u5728\u4fc4\u4ea5\u4fc4\u5dde\u6c83\u5c14\u5e03\u91cc\u5947\u7684\u65af\u5766\u5229\u8f66\u573a\u62a5\u5230\u3002\u4f8b\u884c\u8f6c\u6362\u4efb\u52a1\u76f4\u5230\u5927\u7ea6\u4e0a\u5348 11 \u70b9 30 \u5206\uff0c\u6b64\u65f6\u673a\u7ec4\u4eba\u5458\u6536\u5230\u4e86\u65b0\u7684\u6307\u793a\u548c\u7b2c\u4e8c\u4efd\u5de5\u4f5c\u7b80\u62a5\u3002\u4e0b\u534812:30\u524d\u51e0\u5206\u949f\uff0c\u673a\u7ec4\u4eba\u5458\u8fdb\u5165\u4f4d\u4e8e\u5206\u7ea7\u573a\u7684K12\u8f68\u9053\u5317\u7aef\uff0c\u610f\u56fe\u5c0647\u8f86\u6c7d\u8f66\u4eceK12\u62c9\u51fa\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u6c7d\u8f66\u653e\u7f6e\u5728D10\u51fa\u53d1\u8f68\u9053\u4e0a\u3002 \u673a\u8f66CSX 8888\u5b9a\u4f4d\u4e8e\u77ed\u5934\u7f69\u5411\u5317\u3002\u5de5\u7a0b\u5e08\u5750\u5728\u673a\u8f66\u4e1c\u4fa7\u7684\u63a7\u5236\u5668\u4e0a\u3002\u6309\u7167\u6307\u793a\u548c\u8ba1\u5212\uff0c\u673a\u8f66\u4e0e K12 \u8f68\u9053\u4e0a\u7684 47 \u8282\u8f66\u53a2\u76f8\u8fde\u3002\u673a\u8f66\u548c\u8f66\u53a2\u4e4b\u95f4\u7684\u7a7a\u6c14\u8f6f\u7ba1\u6ca1\u6709\u8fde\u63a5\uff0c\u5728\u8fd9\u79cd\u5207\u6362\u64cd\u4f5c\u4e2d\u662f\u6b63\u5e38\u7684\u3002\u56e0\u6b64\uff0c\u6c7d\u8f66\u4e0a\u7684\u7a7a\u6c14\u5236\u52a8\u5668\u4e0d\u8d77\u4f5c\u7528\u3002\u5239\u8f66\u5458\u901a\u8fc7\u65e0\u7ebf\u7535\u901a\u77e5\u5de5\u7a0b\u5e08\u4ece K12 \u5411\u5317\u884c\u9a76\u3002\u5728\u540e\u65b9\u6216\u7b2c 47 \u8f86\u6c7d\u8f66\u901a\u8fc7\u5239\u8f66\u5458\u7684\u4f4d\u7f6e\u540e\uff0c\u4ed6\u5411\u897f\u8d70\u53bb\u5b9a\u4f4d\u5012\u8f66\u5f00\u5173\uff0c\u8fdb\u5165\u6307\u5b9a\u7684 D10 \u8d5b\u9053\u3002\u8fd0\u52a8\u7ee7\u7eed\u4ece K12 \u5411\u5317\u7ecf\u8fc7\u552e\u7968\u5458\uff0c\u552e\u7968\u5458\u4f4d\u4e8e\u5730\u9762\u4e0a\u7684\u201c\u76f8\u673a\u201d\u5f00\u5173\u5904\u3002\u552e\u7968\u5458\u901a\u8fc7\u65e0\u7ebf\u7535\u544a\u77e5\u5de5\u7a0b\u5e08\u7ecf\u8fc7\u4ed6\u7684\u8f66\u8f86\u7684\u6570\u91cf\uff0c\u5e76\u901a\u8fc7\u65e0\u7ebf\u7535\u6536\u5230\u4e86\u5de5\u7a0b\u5e08\u7684\u786e\u8ba4\u3002\u5269\u4e0b\u516b\u8f86\u8f66\u8981\u901a\u8fc7\u201c\u6444\u50cf\u5934\u201d\u5f00\u5173\uff0c\u552e\u7968\u5458\u901a\u8fc7\u65e0\u7ebf\u7535\u901a\u77e5\u5de5\u7a0b\u5e08\u51c6\u5907\u505c\u8f66\u3002\u5de5\u7a0b\u5e08\u6ca1\u6709\u56de\u5e94\u4ed6\u7684\u6c9f\u901a\u3002\u552e\u7968\u5458\u518d\u6b21\u901a\u77e5\u5de5\u7a0b\u5e08\uff0c\u8fd8\u6709\u56db\u8f86\u8f66\u8981\u6e05\u7406\u5f00\u5173\uff0c\u4f46\u5de5\u7a0b\u5e08\u518d\u6b21\u6ca1\u6709\u56de\u5e94\u3002\u552e\u7968\u5458\u968f\u540e\u547d\u4ee4\u5de5\u7a0b\u5e08\u505c\u6b62\u79fb\u52a8\uff0c\u4f46\u5de5\u7a0b\u5e08\u518d\u6b21\u6ca1\u6709\u56de\u5e94\uff0c\u79fb\u52a8\u7ee7\u7eed\u3002\u5de5\u7a0b\u5e08\u5728\u91c7\u8bbf\u4e2d\u8868\u793a\uff0c\u5f53\u4ed6\u4ece K12 \u5411\u5317\u9a76\u51fa\u65f6\uff0c\u552e\u7968\u5458\u901a\u8fc7\u65e0\u7ebf\u7535\u901a\u77e5\u4ed6\uff0cPB9 \u8f68\u9053\u7684\u5c3e\u968f\u70b9\u5f00\u5173\u5df2\u8c03\u53cd\u3002\u5de5\u7a0b\u5e08\u660e\u767d\uff0c\u5fc5\u987b\u5728 PB9 \u5f00\u5173\u4e4b\u524d\u505c\u6b62\u8fd0\u52a8\uff0c\u4ee5\u4fbf\u5c06\u5f00\u5173\u6392\u6210\u4e00\u6761\u76f4\u7ebf\uff0c\u4ee5\u4fbf\u6cbf\u7740\u5bfc\u7ebf\u8fdb\u4e00\u6b65\u8fd0\u52a8\u3002\u552e\u7968\u5458\u548c\u5239\u8f66\u5458\u90fd\u6ca1\u6709\u9760\u8fd1 PB9 \u5f00\u5173\uff0c\u5de5\u7a0b\u5e08\u6253\u7b97\u8ba9\u4ed6\u7684\u706b\u8f66\u505c\u4e0b\u6765\uff0c\u4ece\u673a\u8f66\u4e0a\u4e0b\u6765\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5c06\u5f00\u5173\u5bf9\u51c6\u6b63\u5e38\u4f4d\u7f6e\u3002\u5411\u4e0a\u79fb\u52a8\u7684\u901f\u5ea6\u73b0\u5728\u5df2\u8fbe\u5230\u6bcf\u5c0f\u65f6 11 \u82f1\u91cc\u3002\u5de5\u7a0b\u5e08\u89c2\u5bdf\u5230\u5012\u8f6c\u9053\u5c94\uff0c\u4f46\u7531\u4e8e\u6f6e\u6e7f\u7684\u8f68\u9053\u6761\u4ef6\u548c\u4e0e\u4ed6\u7684\u673a\u8f66\u76f8\u8fde\u7684\u8f66\u53a2\u6570\u91cf\uff0c\u4ed6\u9884\u89c1\u5230\u5728\u901a\u8fc7\u9519\u4f4d\u7684\u9053\u5c94\u4e4b\u524d\uff0c\u4ed6\u65e0\u6cd5\u4f7f\u8bbe\u5907\u505c\u4e0b\u6765\u3002\n\u5de5\u7a0b\u5e08\u7684\u56de\u5e94\u662f\u5c06\u673a\u8f66\u7684\u72ec\u7acb\u5236\u52a8\u5668\u5b8c\u5168\u5e94\u7528\u3002\u72ec\u7acb\u5236\u52a8\u5668\u5bf9\u673a\u8f66\u65bd\u52a0\u5236\u52a8\uff0c\u4f46\u4e0d\u5bf9\u5355\u4e2a\u8d27\u8f66\u65bd\u52a0\u5236\u52a8\u3002\u6b64\u5916\uff0c\u4ed6\u901a\u8fc7\u81ea\u52a8\u5236\u52a8\u9600\u7684 20 psi \u670d\u52a1\u5e94\u7528\u964d\u4f4e\u5236\u52a8\u7ba1\u538b\u529b\u3002\u81ea\u52a8\u5239\u8f66\u662f\u4e00\u79cd\u6c14\u52a8\u5239\u8f66\u7cfb\u7edf\uff0c\u7528\u4e8e\u63a7\u5236\u6574\u5217\u5217\u8f66\u7684\u5239\u8f66\u3002\u4ecd\u7136\u786e\u5b9a\u4ed6\u4e0d\u4f1a\u505c\u6b62\u5de5\u7a0b\u5e08\u8bd5\u56fe\u5c06\u673a\u8f66\u7f6e\u4e8e\u52a8\u6001\u5236\u52a8\u6a21\u5f0f\u7684\u5f00\u5173\u3002\u52a8\u529b\u5236\u52a8\u5668\u5229\u7528\u673a\u8f66\u63a8\u8fdb\u7cfb\u7edf\u5bf9\u5217\u8f66\u8fdb\u884c\u5236\u52a8\u3002\u52a8\u6001\u5236\u52a8\u7c7b\u4f3c\u4e8e\u5361\u8f66\u6216\u6c7d\u8f66\u7684\u964d\u6863\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5de5\u7a0b\u5e08\u65e0\u610f\u4e2d\u672a\u80fd\u5b8c\u6210\u8bbe\u7f6e\u52a8\u6001\u5236\u52a8\u5668\u7684\u9009\u62e9\u8fc7\u7a0b\u3002\u7531\u4e8e\u9519\u8bef\u5730\u8ba4\u4e3a\u81ea\u5df1\u9009\u62e9\u4e86\u6b63\u786e\u7684\u52a8\u6001\u5236\u52a8\uff0c\u5de5\u7a0b\u5e08\u5c06\u6cb9\u95e8\u79fb\u5230 8 \u53f7\u4f4d\u7f6e\u4ee5\u83b7\u5f97\u6700\u5927\u52a8\u6001\u5236\u52a8\u3002\u5de5\u7a0b\u5e08\u8ba4\u4e3a\u5df2\u7ecf\u9009\u62e9\u4e86\u52a8\u6001\u5236\u52a8\u5668\u5e76\u4e14\u4f1a\u53d1\u751f\u989d\u5916\u7684\u5236\u52a8\u3002\u7136\u800c\uff0c\u7531\u4e8e\u52a8\u529b\u5236\u52a8\u88c5\u7f6e\u5c1a\u672a\u5efa\u7acb\uff0c\u5c06\u6cb9\u95e8\u7f6e\u4e8e 8 \u53f7\u4f4d\u7f6e\u53ef\u6062\u590d\u5168\u90e8\u673a\u8f66\u52a8\u529b\uff0c\u800c\u4e0d\u662f\u963b\u788d\u5217\u8f66\u7684\u524d\u8fdb\u8fd0\u52a8\u3002\u5f53\u706b\u8f66\u4ecd\u5728\u4ee5\u5927\u7ea6 8 \u82f1\u91cc/\u5c0f\u65f6\u7684\u901f\u5ea6\u884c\u9a76\u65f6\uff0c\u5de5\u7a0b\u5e08\u5378\u4e0b\u673a\u8f66\u5e76\u5411\u524d\u8dd1\u4ee5\u91cd\u65b0\u5b9a\u4f4d\u5f00\u5173\uff0c\u4ee5\u514d\u706b\u8f66\u901a\u8fc7\u5e76\u635f\u574f\u5f00\u5173\u3002\u5728\u706b\u8f66\u5230\u8fbe\u524d\u51e0\u79d2\u949f\uff0c\u5de5\u7a0b\u5e08\u6210\u529f\u5730\u64cd\u4f5c\u4e86\u5f00\u5173\u3002\u5de5\u7a0b\u5e08\u7136\u540e\u6cbf\u7740\u673a\u8f66\u8dd1\u5e76\u8bd5\u56fe\u91cd\u65b0\u4e0a\u8f66\u3002\u7136\u800c\uff0c\u706b\u8f66\u7684\u901f\u5ea6\u5e76\u6ca1\u6709\u50cf\u5de5\u7a0b\u5e08\u9884\u671f\u7684\u90a3\u6837\u964d\u4f4e\uff0c\u800c\u662f\u589e\u52a0\u5230\u5927\u7ea6 12 \u82f1\u91cc/\u5c0f\u65f6\u3002\u7531\u4e8e\u673a\u8f66\u4e0a\u7684\u7acb\u8db3\u70b9\u5dee\u548c\u6e7f\u6293\u624b\uff0c\u5de5\u7a0b\u5e08\u65e0\u6cd5\u5728\u673a\u8f66\u68af\u5b50\u4e0a\u62c9\u8d77\u81ea\u5df1\u3002\u4ed6\u62d6\u4e86\u5927\u7ea6 80 \u82f1\u5c3a\uff0c\u76f4\u5230\u677e\u5f00\u6276\u624b\u5e76\u5012\u5728\u5730\u4e0a\u3002\u7531\u4e8e\u65e0\u6cd5\u91cd\u65b0\u767b\u4e0a\u5e76\u963b\u6b62\u706b\u8f66\u884c\u9a76\uff0c\u8be5\u5de5\u7a0b\u5e08\u8dd1\u53bb\u8054\u7cfb\u4e00\u540d\u94c1\u8def\u5458\u5de5\uff0c\u8be5\u5458\u5de5\u4e0d\u662f\u4ed6\u7684\u673a\u7ec4\u4eba\u5458\uff0c\u4f46\u62e5\u6709\u4e00\u53f0\u4f4d\u4e8e\u9662\u5b50\u5317\u7aef\u7684\u6536\u97f3\u673a\u3002\u8fd9\u540d\u5458\u5de5\u7acb\u5373\u901a\u77e5\u4e86\u5931\u63a7\u5217\u8f66\u7684\u7ad9\u957f\u3002\u7ad9\u957f\u7acb\u5373\u901a\u77e5\u4e86\u65af\u5766\u5229\u5854\u697c\u8fd0\u8425\u5546\u548c\u5217\u8f66\u957f\u3002\u4f4d\u4e8e\u5370\u7b2c\u5b89\u7eb3\u6ce2\u5229\u65af\u7684 ToledoBranch \u5217\u8f66\u8c03\u5ea6\u5458\u4e5f\u6536\u5230\u4e86\u901a\u77e5\u3002\u8be5\u8fd0\u52a8\u73b0\u5728\u6b63\u5728\u7531\u4ea4\u901a\u63a7\u5236\u7cfb\u7edf (TCS) \u89c4\u5219\u7ba1\u8f96\u7684\u6258\u83b1\u591a\u5206\u90e8\uff08\u5927\u6e56\u533a\uff09\u5411\u5357\u8fdb\u884c\u3002\u65f6\u95f4\u5927\u7ea6\u662f\u4e0b\u5348 12 \u70b9 35 \u5206 \u5239\u8f66\u5458\u89c2\u5bdf\u5230\u706b\u8f66\u79bb\u5f00\u4e86\u9662\u5b50\uff0c\u4f46\u6700\u521d\u5e76\u6ca1\u6709\u8ba9\u5730\u9762\u4e0a\u7684\u5de5\u7a0b\u5e08\u6cb8\u817e\u3002\u5239\u8f66\u5458\u548c\u53e6\u4e00\u540d\u5458\u5de5\u4f7f\u7528\u79c1\u5bb6\u8f66\u5c06\u706b\u8f66\u8ffd\u5230\u4e0b\u4e00\u4e2a\u5341\u5b57\u8def\u53e3\uff0c\u8bd5\u56fe\u767b\u4e0a\u706b\u8f66\u3002\u4ed6\u4eec\u6700\u5173\u5fc3\u7684\u662f\u5de5\u7a0b\u5e08\u7684\u5b89\u5168\uff0c\u4ed6\u4eec\u62c5\u5fc3\u5de5\u7a0b\u5e08\u53ef\u80fd\u5728\u63a7\u5236\u673a\u8f66\u65f6\u5fc3\u810f\u75c5\u53d1\u4f5c\u3002\u5728\u5e73\u4ea4\u9053\u53e3\uff0c\u4e24\u540d\u5458\u5de5\u65e0\u6cd5\u767b\u4e0a\u706b\u8f66\uff0c\u56e0\u4e3a\u5f53\u706b\u8f66\u901a\u8fc7 4 \u82f1\u91cc\u540e\uff0c\u901f\u5ea6\u5df2\u589e\u52a0\u5230\u5927\u7ea6 18 \u82f1\u91cc/\u5c0f\u65f6\u3002\u5927\u7ea6\u4e0b\u5348 12:38\uff0c\u5730\u65b9\u5f53\u5c40\u548c\u4fc4\u4ea5\u4fc4\u5dde\u8b66\u5bdf\u63a5\u5230\u4e86\u706b\u8f66\u5931\u63a7\u7684\u901a\u77e5\u3002\u4e0b\u5348 1 \u70b9 35 \u5206\u5de6\u53f3\uff0c\u706b\u8f66\u8c03\u5ea6\u5458\u8fdc\u7a0b\u64cd\u4f5c\u4e86\u706b\u8f66\u8fdb\u5165\u4fa7\u7ebf\u7684\u5f00\u5173\u3002\u4ee5\u524d\uff0c\u5728\u8f68\u9053\u4e0a\u653e\u7f6e\u4e86\u4e00\u4e2a\u4fbf\u643a\u5f0f\u8131\u8f68\u88c5\u7f6e\uff0c\u8bd5\u56fe\u4f7f\u673a\u8f66\u8131\u8f68\uff0c\u4ece\u800c\u505c\u6b62\u8fd0\u52a8\u3002\u7136\u800c\uff0c\u8fd9\u8f86\u4fbf\u643a\u5f0f\u8131\u8f68\u88ab\u706b\u8f66\u4ece\u8f68\u9053\u4e0a\u9a76\u8fc7\u7684\u529b\u91cf\u4ece\u8f68\u9053\u4e0a\u8131\u843d\u5e76\u629b\u51fa\uff0c\u706b\u8f66\u7684\u8fd0\u52a8\u6ca1\u6709\u53d7\u5230\u963b\u788d\u3002\u5317\u884c\u5217\u8f66 Q63615 \u7531\u8c03\u5ea6\u5458\u6307\u6325\u8fdb\u5165\u4fc4\u4ea5\u4fc4\u5dde\u6566\u523b\u5c14\u514b\u7684\u4fa7\u7ebf\u3002\u673a\u7ec4\u4eba\u5458\u88ab\u6307\u793a\u5c06\u4ed6\u4eec\u7684\u5355\u4e2a\u673a\u8f66\u4ece\u706b\u8f66\u4e0a\u62c6\u4e0b\uff0c\u7b49\u5f85\u5931\u63a7\u8005\u7ecf\u8fc7\u4ed6\u4eec\u7684\u4f4d\u7f6e\u3002\u5927\u7ea6\u4e0b\u53482\u70b905\u5206\uff0c\u5931\u63a7\u7684\u706b\u8f66\u7ecf\u8fc7\u6566\u523b\u5c14\u514b\uff0cQ63615\u7684\u4e58\u5458\u7ec4\u6392\u6210\u4e00\u884c\uff0c\u8fdb\u5165\u4e3b\u8f68\u9053\u8ffd\u51fb\u5931\u63a7\u7684\u706b\u8f66\u3002\u5728\u4fc4\u4ea5\u4fc4\u5dde\u7684\u80af\u987f\uff0c\u9760\u8fd1 67 \u82f1\u91cc\u7684\u8def\u6807\u5904\uff0cQ63615 \u7684\u673a\u7ec4\u4eba\u5458\u6210\u529f\u5730\u6293\u4f4f\u4e86\u5931\u63a7\u7684\u8bbe\u5907\uff0c\u5e76\u4ee5 51 \u82f1\u91cc/\u5c0f\u65f6\u7684\u901f\u5ea6\u6210\u529f\u8fde\u63a5\u5230\u540e\u9762\u7684\u6c7d\u8f66\u4e0a\u3002\u5de5\u7a0b\u5e08\u9010\u6e10\u5bf9\u4ed6\u7684\u673a\u8f66\u65bd\u52a0\u52a8\u529b\u5236\u52a8\uff0c\u6ce8\u610f\u4e0d\u8981\u628a\u706b\u8f66\u5206\u5f00\u3002\u5f53\u706b\u8f66\u901a\u8fc7\u80af\u987f\u4ee5\u5357\u7684 31 \u53f7\u516c\u8def\u65f6\uff0c\u5de5\u7a0b\u5e08\u5df2\u7ecf\u5c06\u706b\u8f66\u7684\u901f\u5ea6\u51cf\u6162\u5230\u5927\u7ea6 11 \u82f1\u91cc/\u5c0f\u65f6\u3002\u4f4d\u4e8e\u5341\u5b57\u8def\u53e3\u7684\u662f CSX \u5217\u8f66\u957f\u4e54\u6069\u00b7\u970d\u65af\u83f2\u5c14\u5fb7 (Jon Hosfeld)\uff0c\u4ed6\u80fd\u591f\u6cbf\u7740\u65e0\u4eba\u9a7e\u9a76\u673a\u8f66\u884c\u9a76\u5e76\u722c\u4e0a\u8f66\u3002\u5217\u8f66\u957f\u7acb\u5373\u5173\u95ed\u6cb9\u95e8\uff0c\u5217\u8f66\u8fc5\u901f\u505c\u4e0b\u3002\u65f6\u95f4\u662f\u4e0b\u5348 2 \u70b9 30 \u5206\uff0c\u5931\u63a7\u7684\u706b\u8f66\u5728\u4e0d\u5230 2 \u5c0f\u65f6\u7684\u65f6\u95f4\u5185\u884c\u9a76\u4e86 66 \u82f1\u91cc\u3002\n\u5bf9\u63a7\u5236\u88c5\u7f6e\u7684\u68c0\u67e5\u786e\u8ba4\u673a\u8f66\u72ec\u7acb\u5236\u52a8\u5df2\u5b8c\u5168\u5e94\u7528\uff0c\u81ea\u52a8\u5236\u52a8\u9600\u5728\u670d\u52a1\u533a\uff0c\u52a8\u6001\u5236\u52a8\u9009\u62e9\u5f00\u5173\u672a\u5904\u4e8e\u5236\u52a8\u6a21\u5f0f\u3002\u6240\u6709\u5236\u52a8\u8e44\u5df2\u5b8c\u5168\u78e8\u635f\u5230\u5236\u52a8\u6881\u3002\u5982\u6709\u5fc5\u8981\uff0c\u94c1\u8def\u5df2\u51c6\u5907\u597d\u5728\u80af\u987f\u4ee5\u5357\u5931\u63a7\u7684\u706b\u8f66\u5934\u524d\u989d\u5916\u653e\u7f6e\u4e00\u8f86\u8f7d\u4eba\u673a\u8f66\uff0c\u4ee5\u8fdb\u4e00\u6b65\u51cf\u6162\u706b\u8f66\u901f\u5ea6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e0d\u9700\u8981\u8fd9\u79cd\u76f8\u5f53\u5371\u9669\u7684\u9009\u62e9\u3002 Y11615\u5de5\u7a0b\u5e08\u53d7\u8f7b\u4f24\uff0c\u62d2\u7edd\u5c31\u533b\u3002\u4ed6\u4e8e\u4e0b\u5348 5 \u70b9 30 \u5206\u4e0e\u673a\u7ec4\u4eba\u5458\u4e00\u8d77\u9000\u5f79\u3002CSX \u4e0d\u9700\u8981\u5bf9\u673a\u7ec4\u4eba\u5458\u8fdb\u884c\u836f\u7269\u6216\u9152\u7cbe\u6d4b\u8bd5\uff0c\u4e5f\u4e0d\u9700\u8981\u8fdb\u884c\u8054\u90a6\u6d4b\u8bd5\u3002\u8fd9\u4f4d\u5de5\u7a0b\u5e08\u4e8e 1966 \u5e74\u9996\u6b21\u53d7\u96c7\u4e8e\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u94c1\u8def\u516c\u53f8\uff0c\u5e76\u4e8e 1974 \u5e74\u664b\u5347\u4e3a\u53d1\u52a8\u673a\u670d\u52a1\u3002\u4ed6\u6700\u8fd1\u4e00\u6b21\u5728 2001 \u5e74 1 \u6708\u63a5\u53d7\u4e86\u4e00\u4f4d\u4e3b\u7ba1\u7684\u68c0\u67e5\u3002\u5de5\u7a0b\u5e08\u7684\u7eaa\u5f8b\u8bb0\u5f55\u662f\u5e72\u51c0\u7684\u3002\u8054\u90a6\u94c1\u8def\u7ba1\u7406\u5c40\u52a8\u529b\u548c\u8bbe\u5907\u68c0\u67e5\u5458\u5230\u8fbe CSX 8888 \u505c\u9760\u5730\u70b9\u5e76\u8fdb\u884c\u4e86\u5168\u9762\u673a\u68b0\u68c0\u67e5\u3002\u4ed6\u53d1\u73b0\u6240\u6709\u7cfb\u7edf\u90fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5305\u62ec\u6253\u78e8\u673a\u3001\u524d\u706f\u3001\u8f85\u52a9\u706f\u3001\u94c3\u94db\u3001\u5587\u53ed\u548c\u8b66\u62a5\u5668\u3002\u65e0\u6cd5\u786e\u5b9a\u5236\u52a8\u7f38\u6d3b\u585e\u884c\u7a0b\uff0c\u56e0\u4e3a\u6240\u6709\u5236\u52a8\u8e44\u90fd\u88ab\u5b8c\u5168\u70e7\u6bc1\u3002\u673a\u8f66 CSX 8888 \u662f\u7531\u901a\u7528\u6c7d\u8f66\u516c\u53f8 (EMD) \u5236\u9020\u7684 SD-40-2 \u578b\u3002\u672c\u673a\u914d\u59076L\u578b\u7a7a\u6c14\u5236\u52a8\u7cfb\u7edf\u3002\u8b66\u62a5\u7cfb\u7edf\u76f4\u63a5\u8fde\u63a5\u5230\u7a7a\u6c14\u5236\u52a8\u7cfb\u7edf\uff0c\u5176\u529f\u80fd\u662f\u63d0\u4f9b\u7a7a\u6c14\u5236\u52a8\u7cfb\u7edf\u7684\u81ea\u52a8\u5168\u670d\u52a1\u60e9\u7f5a\u5e94\u7528\uff0c\u4ee5\u53ca\u56e0\u672a\u80fd\u786e\u8ba4\u65f6\u95f4\u800c\u5f15\u8d77\u7684\u65ad\u7535\uff08PC\uff09 out \u529f\u80fd\u901a\u5e38\u5728 40 \u79d2\u5de6\u53f3\u3002\u5f53\u8b66\u62a5\u5668\u8d85\u65f6\u5230\u671f\u65f6\uff0c\u5de5\u7a0b\u5e08\u5fc5\u987b\u901a\u8fc7\u89e6\u53d1\u786e\u8ba4\u5f00\u5173\u6765\u786e\u8ba4\uff0c\u8fd9\u5c06\u91cd\u7f6e\u8d85\u65f6\u529f\u80fd\u3002\u5f53\u5728\u72ec\u7acb\u5e94\u7528\u548c\u91ca\u653e\u7ba1\u9053\u4e2d\u4ea7\u751f 20psi \u7684\u673a\u8f66\u5236\u52a8\u7f38\u538b\u529b\u65f6\uff0c\u8b66\u62a5\u7cfb\u7edf\u65e0\u6548\u3002\u8fd9\u8fd8\u53ef\u4ee5\u9632\u6b62 P2A \u5e94\u7528\u9600\u89e6\u53d1\u884c\u8f66\u5236\u52a8\u5e94\u7528\u548c PC \u64cd\u4f5c\u3002\u5f53 Y11615 \u7684\u5de5\u7a0b\u5e08\u5c06\u673a\u8f66\u72ec\u7acb\u5236\u52a8\u9600\u5168\u9762\u5e94\u7528\u65f6\uff0c\u6839\u636e\u7ee7\u52a8\u9600\u7684\u7c7b\u578b\uff0c\u5728\u5236\u52a8\u7f38\u4e2d\u5f00\u53d1\u4e86\u8bbe\u8ba1\u538b\u529b\uff0c\u4ece\u800c\u4f7f\u8b66\u62a5\u7cfb\u7edf\u65e0\u6548\u3002\u5982\u679c\u5de5\u7a0b\u5e08\u6ca1\u6709\u5c06\u72ec\u7acb\u5236\u52a8\u5668\u7f6e\u4e8e\u5b8c\u5168\u5e94\u7528\u4f4d\u7f6e\u5e76\u5bfc\u81f4\u5236\u52a8\u7f38\u538b\u529b\u79ef\u805a\uff0c\u5f53\u8d85\u65f6\u529f\u80fd\u5230\u671f\u65f6\uff0c\u7cfb\u7edf\u4f1a\u8d77\u4f5c\u7528\uff0c\u4e0d\u4ec5\u4f1a\u5bfc\u81f4\u673a\u8f66\u5236\u52a8\u5668\u7684\u5e94\u7528\uff0c\u8fd8\u4f1a\u5bfc\u81f4 PC \u8df3\u95f8\u5728 Power Knock Out \u4e2d\uff0c\u8fd0\u52a8\u505c\u6b62\u3002\n\u6839\u636e\u5de5\u7a0b\u5e08\u7684\u91c7\u8bbf\uff0c\u4ed6\u5728\u62c6\u5378\u673a\u8f66\u524d\uff0c\u7528\u81ea\u52a8\u5236\u52a8\u9600\u505a\u4e86\u4e00\u4e2a20psi\u7684\u5236\u52a8\u7ba1\u51cf\u538b\u3002\u8fd9\u7edd\u4e0d\u4f1a\u63d0\u4f9b\u4efb\u4f55\u5236\u52a8\u529b\uff0c\u56e0\u4e3a\u5236\u52a8\u7ba1\u6ca1\u6709\u8fde\u63a5\u5230\u6c7d\u8f66\u5e76\u4e14\u7cfb\u7edf\u6ca1\u6709\u5145\u7535\u3002\u901a\u7528\u6c7d\u8f66\u516c\u53f8\u7684 SD-40-2 \u578b\u52a8\u6001\u5236\u52a8\u7cfb\u7edf\u662f\u901a\u8fc7\u5c06\u9009\u6863\u6746\u7f6e\u4e8e\u52a8\u6001\u5236\u52a8\u6a21\u5f0f\u6765\u5efa\u7acb\u7684\u3002\u8fd9\u4f1a\u5c06\u7275\u5f15\u7535\u673a\u8f6c\u6362\u4e3a\u53d1\u7535\u673a\u4ee5\u4ea7\u751f\u7535\u538b\u548c\u7535\u6d41\uff0c\u8fd9\u4e9b\u7535\u538b\u548c\u7535\u6d41\u901a\u8fc7\u5236\u52a8\u7535\u7f51\u4ee5\u70ed\u91cf\u7684\u5f62\u5f0f\u6d88\u6563\u3002\u7275\u5f15\u7535\u673a\u78c1\u573a\u7684\u52b1\u78c1\u901a\u8fc7\u4e3b\u53d1\u7535\u673a\u4ea7\u751f\uff0c\u5e76\u901a\u8fc7\u589e\u52a0\u67f4\u6cb9\u673a\u8f6c\u901f\u6765\u589e\u52a0\u4e3b\u53d1\u7535\u673a\u8f93\u51fa\u6765\u8c03\u8282\u3002\u53d1\u52a8\u673a\u8f6c\u901f\u7684\u589e\u52a0\u662f\u901a\u8fc7\u5c06\u6cb9\u95e8\u4f4d\u7f6e 1\uff08\u8bbe\u7f6e\uff09\u589e\u52a0\u5230 8 \u4e2a\u4f4d\u7f6e\u6765\u5b9e\u73b0\u7684\u3002\u52a8\u6001\u5236\u52a8\u7cfb\u7edf\u7684\u6709\u6548\u6027\u901a\u5e38\u5728\u901f\u5ea6\u8d85\u8fc7 40 \u82f1\u91cc/\u5c0f\u65f6\u65f6\u6700\u5927\u5316\u3002\u5728\u901f\u5ea6\u4f4e\u4e8e 10 \u82f1\u91cc/\u5c0f\u65f6\u65f6\uff0c\u52a8\u6001\u5236\u52a8\u7cfb\u7edf\u65e0\u6548\u3002\u5f53\u5de5\u7a0b\u5e08\u672a\u80fd\u6b63\u786e\u5730\u5c06\u9009\u6863\u6746\u79fb\u52a8\u5230\u52a8\u6001\u5236\u52a8\u6a21\u5f0f\u65f6\uff0c\u7275\u5f15\u7535\u673a\u4fdd\u6301\u5728\u7535\u52a8\u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u8bbe\u7f6e\u4e2d\uff0c\u901a\u8fc7\u5c06\u6cb9\u95e8\u624b\u67c4\u7f6e\u4e8e 8 \u53f7\u4f4d\u7f6e\uff0c\u4ece\u800c\u5f00\u53d1\u51fa\u6700\u5927\u673a\u8f66\u529f\u7387\uff0c\u67f4\u6cb9\u53d1\u52a8\u673a\u8f6c\u901f\u5c06\u4ee5\u4e0e\u52a8\u6001\u5236\u52a8\u7c7b\u4f3c\u7684\u65b9\u5f0f\u589e\u52a0\u3002\u5982\u679c\u4e0d\u5148\u89c2\u5bdf\u8d1f\u8f7d\u8ba1\uff0c\u5e76\u4e14\u5728\u673a\u8f66\u901f\u5ea6\u8f83\u4f4e\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5f88\u96be\u7acb\u5373\u786e\u5b9a\u673a\u8f66\u662f\u5904\u4e8e\u5236\u52a8\u6a21\u5f0f\u8fd8\u662f\u52a8\u529b\u6a21\u5f0f\u3002\u5728\u4e8b\u4ef6\u53d1\u751f\u540e\u7684\u51e0\u5929\u91cc\uff0c\u5dde\u548c\u5730\u65b9\u5b98\u5458\u5bf9\u6b64\u7c7b\u4e8b\u4ef6\u5728\u672a\u6765\u53d1\u751f\u7684\u53ef\u80fd\u6027\u8868\u793a\u62c5\u5fe7\u3002\u867d\u7136 FRA \u6ca1\u6709\u6392\u9664\u4efb\u4f55\u6f5c\u5728\u7684\u5b89\u5168\u95ee\u9898\uff0c\u4f46\u5bfc\u81f4\u8fd9\u4e00\u4e8b\u4ef6\u7684\u786e\u5207\u60c5\u51b5\u6781\u4e0d\u53ef\u80fd\u518d\u6b21\u53d1\u751f\u3002\u4eca\u5929\uff0c\u6211\u4eec\u7684\u68c0\u67e5\u5458\u89c2\u5bdf\u5230\u4e00\u540d\u5de5\u7a0b\u5e08\u5c06\u4ed6\u7684\u673a\u8f66\u5b8c\u5168\u505c\u4e0b\uff0c\u5378\u4e0b\u4ed6\u7684\u673a\u8f66\u5e76\u64cd\u4f5c\u4e00\u4e2a\u5f00\u5173\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\u3002\u8fd9\u6837\u505a\u662f\u5b89\u5168\u7684\uff0c\u7b26\u5408\u94c1\u8def\u5b89\u5168\u89c4\u5219\uff0c\u4e0d\u4f1a\u5bf9\u5458\u5de5\u6216\u516c\u4f17\u9020\u6210\u4efb\u4f55\u7279\u6b8a\u5371\u5bb3\u3002\u94c1\u8def\u8fd0\u8425\u89c4\u5219\u901a\u5e38\u7981\u6b62\u4efb\u4f55\u5458\u5de5\u62c6\u5378\u6216\u5b89\u88c5\u79fb\u52a8\u8bbe\u5907\u3002\u94c1\u8def\u8fd0\u8425\u89c4\u5219\u8981\u6c42\u5de5\u7a0b\u5e08\u5728\u62c6\u5378\u524d\u5e94\u7528\u624b\u5236\u52a8\u5668\u5e76\u5728\u63a7\u5236\u7ad9\u91c7\u53d6\u5176\u4ed6\u6b65\u9aa4\u4ee5\u56fa\u5b9a\u673a\u8f66\u3002 FRA \u786e\u5b9e\u6709\u4e00\u9879\u5021\u8bae\uff0c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u56e0\u65e0\u4eba\u770b\u7ba1\u7684\u4e0d\u5b89\u5168\u8bbe\u5907\u800c\u5bfc\u81f4\u8bbe\u5907\u5931\u63a7\u7684\u53ef\u80fd\u6027\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c5e\u4e8e\u5207\u6362\u64cd\u4f5c\u81f4\u547d\u6027\u5206\u6790 (SOFA) \u8ba1\u5212\u7684\u8303\u7574\uff0c\u6211\u4eec\u5df2\u91c7\u53d6\u63aa\u65bd\u5f3a\u8c03\u5b89\u5168\u6211\u4eec\u6b63\u5728\u8fdb\u884c\u7684 SOFA \u6d3b\u52a8\u4e2d\u7684\u8bbe\u5907\u3002\u4f8b\u5982\uff0c\u81ea\u4e8b\u4ef6\u53d1\u751f\u4ee5\u6765\uff0c\u4fc4\u4ea5\u4fc4\u5dde\u548c\u8054\u90a6\u68c0\u67e5\u5458\u8bbf\u95ee\u4e86\u4fc4\u4ea5\u4fc4\u5dde\u548c\u5176\u4ed6\u5730\u65b9\u7684 CSX \u548c NS \u7ec8\u7aef\uff0c\u4e0e\u94c1\u8def\u7ba1\u7406\u4eba\u5458\u4e00\u8d77\u5ba1\u67e5\u4e0e\u8f6c\u6362\u5b89\u5168\u76f8\u5173\u7684\u653f\u7b56\u548c\u7a0b\u5e8f\uff0c\u5305\u62ec\u56fa\u5b9a\u3002\u6211\u4eec\u672a\u80fd\u53d1\u73b0\u4efb\u4f55\u7cfb\u7edf\u6027\u95ee\u9898\u6216\u57f9\u8bad\u3001\u76d1\u7763\u6216\u64cd\u4f5c\u5b9e\u8df5\u4e2d\u7684\u7f3a\u9677\uff0c\u4ece\u800c\u5f15\u8d77\u8b66\u89c9\u3002\u68c0\u67e5\u5458\u786e\u5b9e\u4f1a\u89c2\u5bdf\u5230\u5404\u79cd\u5f53\u5730\u7684\u975e\u7cfb\u7edf\u6027\u5b89\u5168\u95ee\u9898\uff0c\u5e76\u4e14\u4f1a\u6839\u636e\u6211\u4eec\u7684\u6807\u51c6\u653f\u7b56\u548c\u60ef\u4f8b\u7acb\u5373\u4e0e\u5f53\u5730\u7ecf\u7406\u4e00\u8d77\u89e3\u51b3\u3002\u6211\u53ef\u80fd\u4f1a\u8fdb\u4e00\u6b65\u8bc4\u8bba\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4e8b\u4ef6\u4e0d\u592a\u53ef\u80fd\u518d\u6b21\u53d1\u751f\u3002\u4e8b\u6545\u539f\u56e0\u662f\u673a\u8f66\u5de5\u7a0b\u5e08\u591a\u6b21\u5224\u65ad\u5931\u8bef\u3002\u4e3a\u4e86\u4f7f\u4e8b\u4ef6\u53d1\u751f\uff0c\u6bcf\u4e2a\u9519\u8bef\u90fd\u9700\u8981\u6309\u987a\u5e8f\u63d0\u4ea4\u3002\u9996\u5148\uff0c\u5de5\u7a0b\u5e08\u6ca1\u6709\u6b63\u786e\u63a7\u5236\u4ed6\u7684\u5217\u8f66\u5728\u9886\u5148\u65f6\u7684\u901f\u5ea6\uff0c\u5982\u679c\u4ed6\u65e0\u6cd5\u505c\u4e0b\u6765\u4ee5\u6362\u4e0a\u4e0d\u6b63\u786e\u7684\u9053\u5c94\u3002\u8fd9\u662f\u94c1\u8def\u8fd0\u8425\u89c4\u5219\u6240\u6db5\u76d6\u7684\u3002\u5176\u6b21\uff0c\u5982\u679c\u5de5\u7a0b\u5e08\u4e0d\u80fd\u56e0\u4e3a\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u9053\u5c94\u800c\u505c\u4e0b\u6765\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u662f\u8dd1\u8fc7\u9053\u5c94\u7136\u540e\u505c\u4e0b\u6765\uff0c\u4e0d\u8981\u540e\u9000\uff0c\u4ee5\u907f\u514d\u5217\u8f66\u8131\u8f68\u3002\u7b2c\u4e09\uff0c\u5de5\u7a0b\u5e08\u4e0d\u5f97\u5728\u673a\u8f66\u884c\u9a76\u65f6\u4e0b\u8f66\uff0c\u9664\u975e\u662f\u6781\u5c11\u6570\u7d27\u6025\u60c5\u51b5\uff0c\u4f8b\u5982\u5373\u5c06\u53d1\u751f\u78b0\u649e\u3002\u94c1\u8def\u8fd0\u8425\u89c4\u5219\u4e5f\u6db5\u76d6\u4e86\u8fd9\u4e00\u70b9\u3002\u7b2c\u56db\uff0c\u5de5\u7a0b\u5e08\u5728\u4f4e\u901f\u65f6\u4e0d\u5e94\u4f9d\u8d56\u52a8\u529b\u5236\u52a8\uff0c\u56e0\u4e3a\u52a8\u529b\u5236\u52a8\u5728\u901f\u5ea6\u4f4e\u4e8e 10 \u82f1\u91cc/\u5c0f\u65f6\u65f6\u65e0\u6548\uff0c\u4ea4\u6d41\u673a\u8f66\u9664\u5916\u3002\u8fd9\u5728\u94c1\u8def\u5de5\u7a0b\u5e08\u4e2d\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\u7b2c\u4e94\uff0c\u5de5\u7a0b\u5e08\u4f3c\u4e4e\u9519\u8bef\u5730\u8ba4\u4e3a\uff0c\u5728\u5b8c\u5168\u5e94\u7528\u72ec\u7acb\u5236\u52a8\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u81ea\u52a8\u5236\u52a8\u5e94\u7528\u4f1a\u63d0\u9ad8\u5355\u673a\u8f66\u7684\u5236\u52a8\u529b\u3002\u7b2c\u516d\uff0c\u5de5\u7a0b\u5e08\u8bef\u7528\u4e86\u201c\u52a8\u529b\u201d\u6216\u201c\u52a8\u6001\u5236\u52a8\u201d\u7684\u9009\u62e9\u5668\u624b\u67c4\uff0c\u8fd9\u4e2a\u9519\u8bef\u53ea\u6709\u5728\u6211\u4eec\u5047\u8bbe\u5de5\u7a0b\u5e08\u7684\u884c\u4e3a\u6781\u5176\u4ed3\u4fc3\u548c\u758f\u5ffd\u65f6\u624d\u80fd\u7406\u89e3\u3002\u6240\u6709\u8fd9\u4e9b\u884c\u52a8\u90fd\u662f\u7531\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u5408\u683c\u3001\u6709\u5145\u5206\u4f11\u606f\u3001\u670d\u52a1\u8bb0\u5f55\u826f\u597d\u7684\u5458\u5de5\u91c7\u53d6\u7684\uff0c\u8fd9\u7b80\u76f4\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u8d77\u4e8b\u4ef6\u53ea\u80fd\u53d1\u751f\u5728\u8d27\u8f66\u6362\u4e58\u8fc7\u7a0b\u4e2d\uff0c\u800c\u4e0d\u4f1a\u53d1\u751f\u5728\u5ba2\u8f66\u6362\u4e58\u8fc7\u7a0b\u4e2d\u3002\u5927\u591a\u6570\u8d27\u8fd0\u8f6c\u6362\u662f\u5728\u201c\u6ca1\u6709\u7a7a\u6c14\u201d\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u7684\uff0c\u5373\u706b\u8f66\u4e2d\u6ca1\u6709\u7a7a\u6c14\u5236\u52a8\u529f\u80fd\u3002\u8fd9\u662f\u884c\u4e1a\u6807\u51c6\uff0c\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u5982\u6b64\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e58\u5ba2\u6362\u4e58\u901a\u5e38\u662f\u201c\u7528\u7a7a\u6c14\u201d\u8fdb\u884c\u7684\uff0c\u5373\u5728\u5217\u8f66\u4e2d\u4f7f\u7528\u7a7a\u6c14\u5236\u52a8\u5668\u3002\u6b64\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u51fa\u4e8e\u5bf9\u4e58\u5ba2\u5b89\u5168\u7684\u62c5\u5fe7\uff0c\u5ba2\u8f66\u5f88\u5c11\u4e0e\u4e58\u5ba2\u6362\u4e58\u3002\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u4e58\u5ba2\u5728\u8f66\u4e0a\u7684\u7f55\u89c1\u60c5\u51b5\u4e0b\uff0c\u7a7a\u6c14\u5236\u52a8\u5668\u5c06\u59cb\u7ec8\u53d1\u6325\u4f5c\u7528\u3002\n\u6700\u540e\uff0c\u8fd9\u8d77\u4e8b\u6545\u4e0d\u53ef\u80fd\u53d1\u751f\u5728\u6d89\u53ca\u516c\u8def\u8fd0\u8425\u7684\u5ba2\u8fd0\u5217\u8f66\u6216\u8d27\u8fd0\u5217\u8f66\u4e0a\u3002\u5728\u4efb\u4f55\u5ba2\u8fd0\u6216\u8d27\u8fd0\u5217\u8f66\u5728\u5217\u8f66\u7ec4\u88c5\u573a\u5916\u5f00\u59cb\u8fd0\u884c\u4e4b\u524d\uff0c\u8054\u90a6\u6cd5\u89c4\u8981\u6c42\u5217\u8f66\u5bf9\u5176\u5236\u52a8\u7cfb\u7edf\u8fdb\u884c\u5f7b\u5e95\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5217\u8f66\u88ab\u5141\u8bb8\u5f00\u59cb\u5176\u65c5\u7a0b\u4e4b\u524d\uff0c\u5236\u52a8\u5668 100% \u53ef\u64cd\u4f5c\u3002", "note_en": "CSX 8888 Runaway Investigation, received by Email on November 5, 2001.  In accordance with your instructions, the following report summarizes thework of the investigation committee which was assigned to review andanalyze the events of May 15, 2001, in which a locomotive with carsdeparted from Stanley Yard on the CSXT near Toledo, Ohio and traveledsouth to Kenton, Ohio, with no crew member on board. I was assisted inthis review by MPE Inspector Mike Lusher and OP Inspector Ed Scalzitti,both of whom responded initially to the incident, and by Chief InspectorHarold Rugh, who provided essential technical information.\n  On May 15, 2001, at approximately 12:35 p.m., DST, an unmanned CSX yardtrain consisting of one model SD-40-2 locomotive, 22 loaded, and 25 emptycars, 2898 gross trailing tons, departed Stanley Yard, which is located inWalbridge, Ohio. The uncontrolled movement proceeded south for a distanceof 66 miles before CSX personnel were able to bring the movement undercontrol. At the time of the incident, the weather was cloudy with lightrain. The ambient temperature was 55 degrees Fahrenheit. There was noderailment of equipment or collision. There were no reportable injuries asa result of the incident.\n  Yard crew Y11615, consisting of one engineer, one conductor and onebrakeman, reported for duty at Stanley Yard, Walbridge, Ohio, at 6:30 am,DST, May 15, 2001. After the normal job briefing with the trainmaster,crew Y11615 performed routine switching assignments until approximately11:30 am, at which time the crew received new instructions and a secondjob briefing. A few minutes before 12:30 p.m., the crew entered the northend of track K12, located in the classification yard, with the intent topull 47 cars out of K12 and then place these cars on departure track D10.Locomotive CSX 8888 was positioned with the short hood headed north. Theengineer was seated at the controls on the east side of the locomotive.\n The locomotive coupled to the 47 cars on track K12, as instructed andplanned. The air hoses between the locomotive and the cars were notconnected, as is normal during this kind of switching operation. The airbrakes on the cars were therefore inoperative. The brakeman notified theengineer by radio to pull north from K12. After the rear or 47th carpassed the brakeman&#39;s location, he walked west to position the switch forthe reverse movement to proceed into the assigned track D10.\n The movement continued north out of K12 passing the conductor, who waspositioned on the ground at the &#34;Camera&#34; switch. The conductor advised theengineer by radio of the number of cars that had passed him and receivedan acknowledgement from the engineer by radio.\n  With eight cars remaining to pass over the &#34;Camera&#34; switch, the conductornotified the engineer by radio to prepare to stop. The engineer did notrespond to his communication. The conductor again notified the engineerwhen four cars remained to clear the switch, but again there was noresponse from the engineer. The conductor then ordered the engineer tostop movement, but again there was no response from the engineer and themovement continued.\n In his interview, the engineer stated that as he pulled north out of K12,he was notified by radio by the conductor that the trailing point switchfor track PB9 off the lead was reversed. The engineer understood that itwould be necessary for the movement to be stopped short of the PB9 switchin order to line the switch for movement further along the lead. Neitherthe conductor nor the brakeman were near the PB9 switch, and the engineerintended to stop his train, dismount from the locomotive, and align theswitch to its normal position, if necessary. The speed of the movement upthe lead had now reached 11 mph. The engineer observed the reversedswitch, but due to the wet rail conditions and the number of cars coupledto his locomotive, he foresaw that he could not bring the equipment to astop prior to passing through the misaligned switch.\n The engineer responded by applying the locomotive&#39;s independent brake tofull application. The independent brake applies the brakes on thelocomotive but does not apply the brakes on the individual freight cars.In addition, he reduced brake pipe pressure with a 20 psi serviceapplication of the automatic brake valve. The automatic brake is pneumaticbraking system designed to control the brakes on the entire train. Stillcertain he would not stop short of the switch the engineer attempted toplace the locomotive in dynamic brake mode. The dynamic brake utilizes thelocomotive propulsion system to brake the train. Dynamic braking isanalogous to down shifting a truck or automobile. Unfortunately, theengineer inadvertently failed to complete the selection process to set upthe dynamic brake. Under the mistaken belief that he had properly selecteddynamic brake, the engineer moved the throttle into the number 8 positionfor maximum dynamic braking. The engineer believed that the dynamic brakehad been selected and that additional braking would occur. However, sincedynamic brake set up had not been established, the placing of the throttleinto the number 8 position restored full locomotive power, instead ofretarding forward movement of the train.\n While the train was still moving at a speed of approximately 8 mph, theengineer dismounted the locomotive and ran ahead to reposition the switchbefore the train could run through and cause damage to the switch. Theengineer was successful in operating the switch just seconds before thetrain reached it. The engineer than ran along side the locomotive andattempted to reboard. However, the speed of the train had not decreased asthe engineer had expected but had increased to approximately 12 mph. Dueto poor footing and wet grab handles on the locomotive, the engineer wasunable to pull himself up on the locomotives ladder. He dragged along forapproximately 80 feet until he released his grip on the hand rails andfell to the ground.\n Unable to reboard and stop the movement of his train, the engineer ran tocontact a railroad employee, not a member of his crew but in possession ofa radio, located at the north end of the yard. This employee immediatelynotified the yardmaster of the runaway train. The yardmaster promptlynotified the Stanley tower block operator and the trainmaster. The ToledoBranch train dispatcher located in Indianapolis was also notified. Themovement was now proceeding southward on the Toledo Branch (Great LakesDivision) governed by Traffic Control System (TCS) Rules. The time wasapproximately 12:35 p.m.\n The brakeman observed the train depart the yard but did not initially seethe engineer on the ground. The brakeman and another employee used apersonal vehicle to pursue the train to the next grade crossing to attemptto board the train. Their immediate concern was for the safety of theengineer, who they feared may have suffered a heart attack while at thecontrols of the locomotive. At the grade crossing, the two employees wereunable to board the train as the speed had increased to approximately 18mph as it passed the mile post 4. Local authorities and the Ohio StatePolice were notified of the runaway train at approximately 12:38 p.m.\n  At a siding called Galatea, near mile post 34, at approximately 1:35 p.m.,the train dispatcher remotely operated the switch for the train to enterthe siding. Previously a portable derail had been placed on the track inan attempt to derail the locomotive and thereby stop the movement. Theportable derail was, however, dislodged and thrown from the track by theforce of the train passing over it, and the movement of the train was notimpeded.\n Northbound train Q63615 was directed by the dispatcher into the siding atDunkirk, Ohio. The crew was instructed to uncouple their single locomotiveunit from their train and wait until the runaway passed their location. atapproximately 2:05 p.m., the runaway train passed Dunkirk, and the sidingwas lined for the crew of Q63615 to enter the main track and to pursue therunaway train.\n At Kenton, Ohio, near mile post 67, the crew of Q63615 successfully caughtthe runaway equipment and succeeded in coupling to the rear car, at aspeed of 51 mph. The engineer gradually applied the dynamic brake of hislocomotive, taking care not to break the train apart. By the time thetrain passed over Route 31 south of Kenton, the engineer had slowed thespeed of the train to approximately 11 mph. Positioned at the crossing wasCSX Trainmaster Jon Hosfeld, who was able to run along side the unmannedlocomotive and climb aboard. The trainmaster immediately shut down thethrottle, and the train quickly came to a stop. The time was 2:30 p.m. andthe runaway train had covered 66 miles in just under 2 hours.\n An examination of the controls confirmed that the locomotive independentbrake had been fully applied, automatic brake valve was in the servicezone, and the dynamic brake selector switch was not in the braking mode.All brake shoes had been completely worn to the brake beams.\n The railroad was prepared to place an additional fully manned locomotiveahead of the runaway south of Kenton, if necessary, to further slow thetrain. This rather hazardous option was fortunately not required.\n  The engineer of Y11615 was slightly injured, but he declined medicaltreatment. He was released from service with his crew at 5:30 p.m. The CSXdid not require Drug or Alcohol testing of the crew, nor was federaltesting required.\n The engineer first hired on the Pennsylvania Railroad in 1966, and he waspromoted to engine service in 1974. He received his most recent check ridewith a supervisor in January 2001. The engineer&#39;s discipline record isclean.\n A Federal Railroad Administration Motive Power and Equipment Inspectorarrived at the location where CSX 8888 was stopped and performed a fullmechanical inspection. He found all systems to function normally,including sanders, headlight, auxiliary lights, bell, horn and thealerter. The brake cylinder piston travel could not be determined, becauseall brake shoes were completely burned off.\n    Locomotive CSX 8888 is a model SD-40-2 manufactured by General MotorsCorporation (EMD). This unit is equipped with 6L type air brake system.The Alerter system is connected directly to the air brake system whichfunctions to provide an automatic full service penalty application of theair brake system, and a power knock out (PC) caused by failure toacknowledge the time out feature usually about 40 seconds. When theAlerter time out has expired, the engineer must acknowledge by trippingthe acknowledging switch which will reset the time out feature. TheAlerter system is nullified when locomotive brake cylinder pressure of 20psi is developed in the Independent Application and Release pipe. Thisalso prevents the P2A Application Valve from triggering a service brakeapplication and PC action.\n When the engineer of Y11615 placed the locomotive independent brake valveinto full application, a design pressure was developed in the brakecylinders, depending on the type of relay valve, which nullifies theAlerter System. Had the engineer not placed the independent brake into thefull applied position and caused a build up of brake cylinder pressure,when the time out feature had expired, the system would have functionedcausing not only an application of the locomotive brakes but a PC tripwhich would have resulted in a Power Knock Out bringing the movement to astop.\n According to the interview of the engineer, he made a 20 psi brake pipereduction with the automatic brake valve before dismounting thelocomotive. This by no means would have provided any braking power in asmuch as the brake pipe was not connected to the cars and the system wasnot charged.\n  General Motors Model SD-40-2 dynamic brake system is established byplacing the selector lever into Dynamic Brake Mode. This will convert thetraction motors to generators to produce voltage and amperage which isdissipated in the form of heat through the braking grids. Excitation forthe fields of the traction motors is developed through the main generatorand is regulated by increasing main generator outputby increasing dieselengine rpm. This increase in engine rpm is accomplished by increasingthrottle position 1 (setup) through 8 positions. The effectiveness of thedynamic brake system is generally maximized at speeds above 40 mph. Atvery speeds, below 10 mph, the dynamic brake system is not effective.\n When the engineer failed to properly move the selector lever into thedynamic brake mode, the traction motors remained in the motoring mode. Byplacing the throttle handle into number 8 position in this set up, maximumlocomotive power was thus developed and diesel engine rpm would increasein a like manner to dynamic braking. Without first observing the loadmeter, and at low locomotive speeds, it may be difficult to determineimmediately if the locomotive was in braking or power mode.\n  In the days following the incident, state and local officials expressedconcern about the potential for this type of event to occur in the future.While FRA does not dismiss any potential safety concern, the exactcircumstances that combined to cause this incident are highly unlikely torecur. It is not uncommon, today, for our inspectors to observe anengineer bring his locomotive to a full stop, dismount his locomotive andoperate a switch. This is done safely and in accordance with railroadsafety rules and does not pose any special hazard to employees or thegeneral public. Railroad operating rules generally prohibit any employeefrom dismounting, or mounting, moving equipment. Engineers are requiredby railroad operating rules to apply a hand brake and take other steps atthe control stand to immobilize the locomotive before dismounting.\n FRA does have an initiative which will minimize the possibility of runawayequipment resulting from unsecured equipment left unattended in a yard.This issue falls under the umbrella of the Switching Operations FatalityAnalysis (SOFA) program, in my view, and we have taken steps to emphasizethe securement of equipment in our ongoing SOFA activities. For example,since the incident, State of Ohio and Federal inspectors have visited CSXand NS terminals in Ohio, and elsewhere, to review with railroad managerspolicies and procedures relating to switching safety, includingsecurement. We have not been able to identify any systemic problems orshortcomings in training, supervision, or operating practices that arecause for alarm. Inspectors do observe various local, non-systemic safetyissues, and they are addressed promptly with local managers, in accordancewith our standard policy and practice.\n I might comment further on why this incident is unlikely to recur. Thecause of the incident was multiple gross errors in judgement by thelocomotive engineer. For the incident to have occurred, each error neededto be committed in sequence. First, the engineer was not properlycontrolling the speed of his train on the lead, if he is unable to stopfor a switch improperly lined. This is covered by the railroad&#39;s operatingrules. Second, if the engineer cannot stop for a switch improperly lined,the correct action to take is simply run through the switch and then stopwithout backing up, to avoid derailing the train. Third, an engineershould never dismount his locomotive while it is moving, except inextremely rare emergency circumstances, such as an imminent collision.This is also covered by the railroad&#39;s operating rules. Fourth, theengineer should not have relied on dynamic braking at low speed, sincedynamic brakes are ineffective at speeds of less than ten mph, except onan AC locomotive. This is well known among railroad engineers. Fifth, theengineer seemed to believe, in error, that an automatic brake applicationwould improve braking power on single locomotive with the independentbrake fully applied. Sixth, the engineer misapplied the selector handlefor &#34;power&#34; or &#34;dynamic brake,&#34; an error that can only be understood ifwe assume the engineer acted with extreme haste and negligence. That allof these actions were taken by an apparently well-qualified, fully restedemployee with a good service record is simply incredible.\n It should be remarked that this incident could only have occurred duringfreight car switching and not during passenger car switching. Mostfreight switching is done &#34;without air,&#34; that is without air brakesfunctional in the train. This is the industry standard, and it has been sofor many decades. Passenger switching, on the other hand, is usuallyperformed &#34;with air,&#34; that is with air brakes functional in the train. Inaddition, it should be noted that passenger coaches are rarely switchedwith passengers aboard, because of concerns with passenger safety. Inthose rare circumstances where passengers are on board during switching,the air brakes would always be fully functional.\n Finally, this incident could not have occurred to either a passenger orfreight train involved in over-the-road operations. Before any passengeror freight train embarks on a run outside of the yard where the train isassembled, federal regulations require that the train receive a thoroughinspection of its braking system and that the brakes be 100% operationalbefore the train is permitted to begin its journey.", "posttime": "2021-07-26 10:42:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5931\u63a7,runaway,\u5de5\u7a0b\u5e08", "title": "CSX 8888 \u5931\u63a7\u8c03\u67e5 (2001)", "title_en": "CSX 8888 Runaway Investigation (2001)", "transed": 1, "url": "http://kohlin.com/CSX8888/z-final-report.htm", "via": "", "real_tags": ["\u5931\u63a7", "runaway", "\u5de5\u7a0b\u5e08"]}, {"category": "", "categoryclass": "", "imagename": "c1af711e1ab28f245a7ecd28f75427f8.jpg", "infoid": 1069759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Freddie Sayers \u4f1a\u89c1 Larry Sanger\u3002\u6536\u542c\u64ad\u5ba2\u7248\u672c\uff1ahttps://shows.acast.com/lockdowntv-with-freddie-sayers/larry-sanger\u9605\u8bfb\u5979\u7684\u5168\u6587...", "note_en": "Freddie Sayers meets Larry Sanger.Listen to the podcast version: https://shows.acast.com/lockdowntv-with-freddie-sayers/larry-sangerRead the full article her...", "posttime": "2021-07-26 10:42:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u8054\u5408,founder,sayers", "title": "\u7ef4\u57fa\u767e\u79d1\u8054\u5408\u521b\u59cb\u4eba\uff1a\u6211\u4e0d\u518d\u4fe1\u4efb\u6211\u521b\u5efa\u7684\u7f51\u7ad9", "title_en": "Wikipedia co-founder: I no longer trust the website I created", "transed": 1, "url": "https://www.youtube.com/watch?v=l0P4Cf0UCwU", "via": "", "real_tags": ["rust", "\u8054\u5408", "founder", "sayers"]}, {"category": "", "categoryclass": "", "imagename": "f5c27fed1df0b31b15693f78a4f94b32.png", "infoid": 1069758, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e09\u5e74\u524d\uff0c\u6211\u53d1\u73b0 CcmExec.exe \u672a\u80fd\u5173\u95ed\u8fdb\u7a0b\u53e5\u67c4\u5bfc\u81f4 32 GB \u5185\u5b58\u6cc4\u6f0f\u3002\u8be5\u9519\u8bef\u5df2\u4fee\u590d\uff0c\u4f46\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u542f\u7528\u4e86 Windows \u4efb\u52a1\u7ba1\u7406\u5668\u4e2d\u7684\u53e5\u67c4\u5217\uff0c\u4ee5\u9632\u4e07\u4e00\u6211\u9047\u5230\u53e6\u4e00\u4e2a\u53e5\u67c4\u6cc4\u6f0f\u3002\u7531\u4e8e\u8fd9\u9879\u4f8b\u884c\u68c0\u67e5\uff0c\u6211\u5728 2021 \u5e74 2 \u6708\u6ce8\u610f\u5230\uff0cChrome \u7684\u4e00\u4e2a\u8fdb\u7a0b\u6253\u5f00\u4e86 20,000 \u591a\u4e2a\u53e5\u67c4\uff01\u8fd9\u4e2a Chrome \u9519\u8bef\u73b0\u5df2\u4fee\u590d\uff0c\u4f46\u6211\u60f3\u5206\u4eab\u5982\u4f55\u8c03\u67e5\u5904\u7406\u6cc4\u6f0f\uff0c\u56e0\u4e3a\u8fd8\u6709\u5176\u4ed6\u6cc4\u6f0f\u7a0b\u5e8f\u3002\u6211\u4e5f\u60f3\u5206\u4eab\u6211\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\u5bf9 Chrome \u7684\u4efb\u52a1\u7ba1\u7406\u5668\u8fdb\u884c\u7684\u4e00\u4e9b\u8c03\u67e5\u8868\u660e\uff0c\u6709\u95ee\u9898\u7684\u8fdb\u7a0b\u662f gmail \u7684\u6e32\u67d3\u5668\u8fdb\u7a0b\uff0c\u518d\u591a\u770b\u770b\u5c31\u4f1a\u53d1\u73b0\u5927\u591a\u6570 Chrome \u6e32\u67d3\u5668\u8fdb\u7a0b\u7684\u5185\u6838\u53e5\u67c4\u5c11\u4e8e 1,000 \u4e2a\u3002 20,000 \u4f3c\u4e4e\u5f02\u5e38\uff0c\u7ecf\u8fc7\u51e0\u4e2a\u5c0f\u65f6\u7684\u76d1\u63a7\u540e\uff0c\u6211\u53ef\u4ee5\u770b\u5230\u53e5\u67c4\u6570\u91cf\u65e0\u9650\u589e\u52a0\u3002\u601c\u60af\u6d3b\u7740\uff0c\u770b\u8d77\u6765\u6211\u4eec\u7684\u53e5\u67c4\u6cc4\u6f0f\u4e86\u3002\u6211\u60f3\u77e5\u9053\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8fd9\u4e9b\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u624b\u67c4\u3002 Windows \u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u6587\u4ef6\u3001\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u4e8b\u4ef6\u3001\u4fe1\u53f7\u91cf\u548c\u8bb8\u591a\u5176\u4ed6\u5185\u6838\u5bf9\u8c61\u3002\u6211\u8f6c\u5411 sysinternals \u7684\u53e5\u67c4\u5de5\u5177\u67e5\u770b\u5b83\u662f\u54ea\u79cd\u7c7b\u578b\uff0c\u4f46\u5b83\u8bf4\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ea\u6709\u51e0\u767e\u4e2a\u53e5\u67c4\u6253\u5f00\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0chandle.exe \u9ed8\u8ba4\u53ea\u663e\u793a\u6709\u5173\u6587\u4ef6\u53e5\u67c4\u7684\u4fe1\u606f\u3002\u8981\u83b7\u53d6\u5b8c\u6574\u4fe1\u606f\uff0c\u60a8\u53ef\u4ee5\u4f20\u9012 -a \u4ee5\u8f6c\u50a8\u6709\u5173\u6240\u6709\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u6216\u4f20\u9012 -s \u4ee5\u6309\u7c7b\u578b\u8fdb\u884c\u6c47\u603b\u3002 -s \u9009\u9879\u5bf9\u672c\u6b21\u8c03\u67e5\u6700\u6709\u5e2e\u52a9\u3002\u5178\u578b\u7684\u8f93\u51fa\u50cf\u8fd9\u6837\u5bfb\u627e gmail\uff08\u4ece\u7ba1\u7406\u547d\u4ee4\u63d0\u793a\u7b26\u8fd0\u884c\u5b83\u4f1a\u89e3\u6790 &lt;Unknown type&gt; \u53e5\u67c4\uff09\uff1a\u53e5\u67c4\u7c7b\u578b\u6458\u8981\uff1a&lt;Unknown type&gt; : 4 &lt;Unknown type&gt; : 77 &lt;Unknown type&gt; : 48 ALPC Port \uff1a1 \u76ee\u5f55\uff1a2 \u4e8b\u4ef6\uff1a20858 \u6587\u4ef6\uff1a147 IoCompletion\uff1a4 IRTimer\uff1a6 \u952e\uff1a8 \u4fe1\u53f7\u91cf\uff1a8 \u7ebf\u7a0b\uff1a31 TpWorkerFactory\uff1a3 WaitCompletionPacket\uff1a10 \u603b\u53e5\u67c4\uff1a21207\n\u6240\u4ee5\u3002\u4e8b\u4ef6\u5904\u7406\u5b83\u662f\u3002\u8fd8\u53ef\u80fd\u4f1a\u66f4\u7cdf\u7cd5\u7684\u3002\u6cc4\u6f0f\u7684\u8fdb\u7a0b\u53e5\u67c4\u4fdd\u7559\u4e86\u6602\u8d35\u7684\u5185\u6838\u7ed3\u6784\uff0c\u6bcf\u4e2a\u53e5\u67c4\u4f3c\u4e4e\u52a0\u8d77\u6765\u5927\u7ea6 64 KB\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e8b\u4ef6\u53e5\u67c4\u76f8\u5f53\u4fbf\u5b9c\u2014\u2014\u53ef\u80fd\u53ea\u6709 16 \u4e2a\u5b57\u8282\u5de6\u53f3\uff08\u5f88\u96be\u8861\u91cf\uff09\u3002\u8fd9\u6b21\u6cc4\u6f0f\u7684\u5f71\u54cd\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u4f46\u662f\uff0cChrome \u4f7f\u7528 RAII \u5bf9\u8c61\u6765\u7ba1\u7406\u5b83\u7684\u6240\u6709\u53e5\u67c4\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5e94\u8be5\u6709\u6cc4\u6f0f\u2014\u2014\u6211\u60f3\u77e5\u9053\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\u3002\u7ecf\u8fc7\u4e00\u756a\u8be2\u95ee\uff0c\u6211\u53d1\u73b0\u6211\u7684\u540c\u4e8b\u90fd\u4e0d\u77e5\u9053\u5982\u4f55\u8c03\u67e5\u5904\u7406\u6cc4\u6f0f\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u5f04\u6e05\u695a\u3002\u6211\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230 gmail \u8fdb\u7a0b\u5e76\u5c1d\u8bd5\u5728\u521b\u5efa\u4e8b\u4ef6\u7684\u51fd\u6570\u4e0a\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4f46\u6211\u6536\u5230\u592a\u591a\u566a\u97f3\u3002\u6b63\u5728\u521b\u5efa\u6570\u767e\u4e2a\u4e8b\u4ef6\uff0c\u5176\u4e2d\u8d85\u8fc7 99% \u7684\u4e8b\u4ef6\u88ab\u5f7b\u5e95\u5220\u9664\u3002\u6211\u9700\u8981\u66f4\u597d\u7684\u4e1c\u897f\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u8bf4\u6211\u592a\u6c89\u8ff7\u4e8e\u4f7f\u7528 Windows \u7684\u4e8b\u4ef6\u8ddf\u8e2a\u6765\u5c1d\u8bd5\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff0c\u4f46\u53ea\u8981\u5b83\u7ee7\u7eed\u5de5\u4f5c\uff0c\u6211\u5c31\u4f1a\u7ee7\u7eed\u4f7f\u7528\u5b83\u3002\u6211\u6000\u7591 ETW \u53ef\u80fd\u80fd\u591f\u8ddf\u8e2a\u53e5\u67c4\u521b\u5efa\u548c\u9500\u6bc1\u5e76\u627e\u5230\u6cc4\u6f0f\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u5982\u4f55\u3002\u4e00\u70b9\u8c37\u6b4c\u641c\u7d22\u627e\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\u5b83\u8ba9\u6211\u5f00\u59cb\u4e86\uff0c\u4f46\u5b83\u6709\u4e00\u4e9b\u7f3a\u9677\uff1a \u6587\u7ae0\u663e\u793a\u6570\u5341\u4e2a\u6807\u5fd7\u88ab\u4f20\u9012\u7ed9 xperf.exe\uff0c\u4f46\u6ca1\u6709\u89e3\u91ca\u5b83\u4eec\u662f\u4ec0\u4e48 \u6307\u5b9a\u7684\u6807\u5fd7\u5bfc\u81f4\u975e\u5e38\u9ad8\u7684\u6570\u636e\u901f\u7387\uff0c\u8fd9\u4f7f\u5f97\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u8ddf\u8e2a\u4e0d\u5207\u5b9e\u9645\u5e16\u5b50\u627f\u8bfa\u4f1a\u5728\u201c\u4e0b\u4e00\u4e2a\u5e16\u5b50\u201d\u4e2d\u89e3\u91ca\u5982\u4f55\u5206\u6790\u6570\u636e\uff0c\u4f46\u6ca1\u6709\u201c\u4e0b\u4e00\u4e2a\u5e16\u5b50\u201d\u548c\u6c42\u52a9\u7535\u8bdd\u5bfc\u81f4\u6ca1\u6709\u4efb\u4f55\u6f0f\u6d1e\uff0c\u8fd9\u8ba9\u6211\u7834\u6848\u4e86\u3002\u6211\u5f00\u59cb\u4e3b\u8981\u6309\u539f\u6837\u4f7f\u7528\u5b83\u3002\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u6cc4\u6f0f 10,000 \u4e2a\u53e5\u67c4\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u5e76\u8bb0\u5f55\u4e86\u4e00\u4e2a\u8ddf\u8e2a\uff0c\u770b\u770b\u6211\u662f\u5426\u53ef\u4ee5\u770b\u5230\u6545\u610f\u6cc4\u6f0f\u3002\u6709\u6548\u3002\u7136\u800c\uff0c\u5b83\u4ee5\u6bcf\u5c0f\u65f6\u8bb8\u591a GB \u7684\u901f\u5ea6\u8bb0\u5f55\u6570\u636e\u3002\u56e0\u4e3a\u624b\u67c4\u6cc4\u6f0f\u76f8\u5f53\u7f13\u6162\u2014\u2014\u6cc4\u6f0f 20,000 \u4e2a\u624b\u67c4\u9700\u8981\u6570\u5468\u65f6\u95f4\u2014\u2014\u6211\u9700\u8981\u8fdb\u884c\u6570\u5c0f\u65f6\u7684\u8ddf\u8e2a\u4ee5\u786e\u4fdd\u6211\u80fd\u53d1\u73b0\u6cc4\u6f0f\u3002\u6211\u4e13\u6ce8\u4e8e\u4e24\u79cd\u7b56\u7565\uff1a\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b xperf -providers \u7684\u8f93\u51fa\u627e\u5230\u66f4\u591a\u5173\u4e8e\u5176\u4e2d\u4e00\u4e9b\u542b\u4e49\u7684\u4fe1\u606f\uff0c\u4f46\u7b80\u77ed\u7684\u7248\u672c\u662f\u63a8\u8350\u7684\u547d\u4ee4\u884c\u4e0d\u4ec5\u8bb0\u5f55\u6709\u5173\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u8fd8\u8bb0\u5f55\u6709\u5173\u6bcf\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u548c\u6240\u6709\u78c1\u76d8\u7684\u4fe1\u606f\u3002 /O\uff08\u8bf7\u53c2\u9605\u5ef6\u8fdf\uff09\uff0c\u542f\u7528\u91c7\u6837\u5206\u6790\u5668\uff08\u4e5f\u5728\u5ef6\u8fdf\u4e2d\uff09\u7b49\u7b49\u3002\u6211\u7684\u7b2c\u4e00\u6b65\u662f\u5c06\u5176\u7cbe\u7b80\u4e3a\u8fd9\u6837\uff1a\u9700\u8981 PROC_THREAD+LOADER \u6765\u7406\u89e3\u4efb\u4f55 ETW \u8ddf\u8e2a\uff0c\u800c OB_HANDLE+OB_OBJECT \u4f3c\u4e4e\u662f\u53e5\u67c4\u8ddf\u8e2a\u7684\u5173\u952e\u3002\u4e00\u4f4d Microsoft \u8054\u7cfb\u4eba\u544a\u8bc9\u6211\u4e0d\u9700\u8981 OB_OBJECT\uff0c\u56e0\u6b64\u6211\u5c06\u5176\u5220\u9664\u3002\u63a8\u8350\u7684\u547d\u4ee4\u5bf9 -stackwalk \u6807\u5fd7\u4e5f\u6709\u516d\u4e2a\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u800c\u6211\u771f\u6b63\u9700\u8981\u7684\u662f\u5206\u914d\u53e5\u67c4\u65f6\u7684\u5806\u6808\u3002\u6211\u5220\u9664\u4e86\u5176\u4e2d\u7684\u4e94\u4e2a\uff0c\u7136\u540e\u6dfb\u52a0\u4e86 HandleDuplicate \u4ee5\u9632\u4e07\u4e00\u3002\u60a8\u53ef\u4ee5\u5728 github \u4e0a\u7684\u6279\u5904\u7406\u6587\u4ef6\u4e2d\u770b\u5230\u4e00\u4e2a\u529f\u80fd\u66f4\u9f50\u5168\u7684\u547d\u4ee4\u884c\uff0c\u4f46\u8fd9\u663e\u793a\u4e86\u6700\u5c0f\u7684\u60f3\u6cd5\u3002\u5b83\u5f00\u59cb\u8ddf\u8e2a\uff0c\u8bb0\u5f55\u8db3\u591f\u7684\u4fe1\u606f\u4ee5\u5c06\u4e8b\u4ef6\u5f52\u56e0\u4e8e\u6b63\u786e\u7684\u7ebf\u7a0b\u548c\u6a21\u5757 (PROC_THREAD+LOADER)\uff0c\u8bb0\u5f55\u6709\u5173\u53e5\u67c4\u64cd\u4f5c\u7684\u4fe1\u606f (OB_HANDLE) \u5e76\u8bb0\u5f55\u6709\u5173\u53e5\u67c4\u521b\u5efa\u548c\u53e5\u67c4\u590d\u5236\u7684\u8c03\u7528\u5806\u6808\u3002\u5b8c\u7f8e\u7684\uff01\u7136\u540e\u6211\u5c06\uff08\u4ecd\u7136\u592a\u5927\u7684\uff09\u8ddf\u8e2a\u52a0\u8f7d\u5230 WPA \u4e2d\uff0c\u5e76\u67e5\u770b\u6240\u6709\u6570\u636e\u7684\u6765\u6e90\u3002\u4ea7\u751f\u6700\u591a\u4e8b\u4ef6\u7684\u8fdb\u7a0b\u662f\u4efb\u52a1\u7ba1\u7406\u5668\u548c Chrome \u8fdc\u7a0b\u684c\u9762\u3002\u9ad8\u6d41\u91cf\u610f\u5473\u7740\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u6b63\u5728\u521b\u5efa\u548c\u9500\u6bc1\u5927\u91cf\u53e5\u67c4\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u95ee\u9898\uff08\u5b83\u4eec\u6ca1\u6709\u6cc4\u6f0f\u53e5\u67c4\uff09\u4f46\u5b83\u4f7f\u6211\u7684\u8ddf\u8e2a\u53d8\u5927\uff0c\u56e0\u6b64\u89e3\u51b3\u65b9\u6848\u5f88\u660e\u786e - \u5728\u8ddf\u8e2a\u65f6\u5173\u95ed\u5b83\u4eec\u3002\u5173\u95ed\u4efb\u52a1\u7ba1\u7406\u5668\u5f88\u5bb9\u6613\uff0c\u4f46\u7531\u4e8e\u6211\u662f\u5728\u5bb6\u4e2d\u5728\u529e\u516c\u5ba4\u7684\u5de5\u4f5c\u7ad9\u4e0a\u8fdb\u884c\u8fd9\u9879\u8c03\u67e5\uff0c\u56e0\u6b64\u5173\u95ed Chrome \u8fdc\u7a0b\u684c\u9762\u4e0d\u592a\u65b9\u4fbf\u3002\u4f46\u662f\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u6211\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u8fd0\u884c\uff0c\u7136\u540e\u65ad\u5f00\u8fde\u63a5\uff08\u4ee5\u51cf\u5c11\u751f\u6210\u7684\u6570\u636e\u91cf\uff09\uff0c\u7136\u540e\u5728 12 \u5c0f\u65f6\u540e\u91cd\u65b0\u8fde\u63a5\u3002\u8fd9\u79cd\u7b56\u7565 - \u5173\u95ed\u751f\u6210\u8fc7\u591a\u6570\u636e\u7684\u7a0b\u5e8f - \u901a\u5e38\u5bf9 ETW \u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u901a\u5e38\u8bb0\u5f55\u6709\u5173\u6574\u4e2a\u7cfb\u7edf\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u73b0\u5728\u6211\u6709\u4e00\u4e9b\u5927\u4f46\u53ef\u7ba1\u7406\u7684\u8ddf\u8e2a\uff08~970 MB\uff0c\u538b\u7f29\uff09\uff0c\u6211\u53ef\u4ee5\u5f00\u59cb\u5206\u6790\u3002\u6211\u5c06\u8ddf\u8e2a\u52a0\u8f7d\u5230 Windows \u6027\u80fd\u5206\u6790\u5668\u4e2d\uff0c\u6700\u7ec8\u627e\u5230\u4e86\u53e5\u67c4\u8ddf\u8e2a\u56fe\u3002\u5b83\u4f4d\u4e8e Graph Explorer \u4e2d\u7684 Memory (???)\u3001Handles\u3001Outstanding Count by Process \u4e0b\u3002\u5b8c\u7f8e\u7684\uff01\u6253\u5f00\u5b83\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u56fe\u8868\uff0c\u663e\u793a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u53e5\u67c4\u8ba1\u6570\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u3002\u5341\u4e8c\u4e2a\u5c0f\u65f6\u5185\u6709\u5f88\u591a\u6d3b\u52a8\u3002\u653e\u5927\u5230\u5341\u5206\u949f\u7684\u65f6\u95f4\u8de8\u5ea6\u663e\u793a\u4e00\u8fde\u4e32\u7684\u6d3b\u52a8\u3002\u8fdb\u7a0b\u88ab\u521b\u5efa\uff0c\u5206\u914d\u4e00\u4e9b\u53e5\u67c4\uff0c\u7136\u540e\u6b7b\u4ea1\uff0c\u521b\u5efa\u4e00\u4e2a\u50cf\u6570\u5b57\u7eaa\u5ff5\u7891\u8c37\u4e00\u6837\u7684\u89c6\u56fe\u3002\u5176\u4ed6\u8fdb\u7a0b\u5206\u914d\u548c\u91ca\u653e\u53e5\u67c4\u6ca1\u6709\u660e\u786e\u7684\u6a21\u5f0f\uff0c\u5176\u4ed6\u8fdb\u7a0b\u4f3c\u4e4e\u65e0\u9650\u671f\u5730\u589e\u52a0\u5b83\u4eec\u7684\u53e5\u67c4\u6570\uff1a\u56fe\u8868\u5f88\u6f02\u4eae\uff0c\u4f46\u6211\u51b3\u5b9a\u6211\u60f3\u8981\u539f\u59cb\u6570\u5b57\uff0c\u6240\u4ee5\u6211\u67e5\u770b\u4e86\u8868\u683c\u3002\u9ed8\u8ba4\u89c6\u56fe\u5bf9\u4e8e\u5206\u914d\u4e86\u8fd1 150 \u4e07\u4e2a\u53e5\u67c4\u7684 Chrome \u6d4f\u89c8\u5668\u8fdb\u7a0b\u6765\u8bf4\u975e\u5e38\u7cdf\u7cd5\u3002\u53ef\u662f\u7b49\u7b49\u2026\n\u53e5\u67c4\u6cc4\u6f0f\u4e0d\u5728\u6d4f\u89c8\u5668\u8fdb\u7a0b\u4e2d\uff0c\u5b83\u8fdc\u4e0d\u53ca 150 \u4e07\u4e2a\u53e5\u67c4\u3002\u597d\u5427\uff0c\u4e8b\u5b9e\u8bc1\u660e\u9ed8\u8ba4\u89c6\u56fe\u5177\u6709\u8bef\u5bfc\u6027\u3002\u867d\u7136\u56fe\u8868/\u8868\u683c\u88ab\u79f0\u4e3a\u201c\u6309\u6d41\u7a0b\u8ba1\u7b97\u7684\u6770\u51fa\u8ba1\u6570\u201d\uff0c\u8fd9\u786e\u5b9e\u662f\u56fe\u5f62\u663e\u793a\u7684\u5185\u5bb9\uff0c\u4f46\u8be5\u8868\u683c\u5b9e\u9645\u4e0a\u663e\u793a\u4e86\u6309\u6d41\u7a0b\u8ba1\u7b97\u7684\u7d2f\u8ba1\u8ba1\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6d4f\u89c8\u5668\u8fdb\u7a0b\u5728 12 \u5c0f\u65f6\u5185\u5206\u914d\u4e86 150 \u4e07\u4e2a\u53e5\u67c4\uff0c\u4f46\u5b83\u91ca\u653e\u4e86\u51e0\u4e4e\u6240\u6709\u7684\u53e5\u67c4\uff0c\u90a3\u4e48\u8c01\u5728\u4e4e\u5462\uff1f\u6211\u60f3\u770b\u5230\u7684\u662f\u7a81\u51fa\u7684\u53e5\u67c4\u2014\u2014\u5df2\u5206\u914d\u4f46\u672a\u91ca\u653e\u3002\u8be5\u8868\u53ef\u4ee5\u663e\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u4f46\u5b83\u80af\u5b9a\u4e0d\u4f1a\u8ba9\u5b83\u53d8\u5f97\u5bb9\u6613\u3002\u5728\u5806\u8ddf\u8e2a\u8868\u4e2d\u6709\u4e00\u4e2a\u6807\u8bb0\u4e3a\u7c7b\u578b\u7684\u5217\u3002\u73b0\u5728\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u5217\u540d\u9009\u62e9\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5217\u3002\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u5728\u7c7b\u578b\u5217\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u201c\u5185\u90e8\u201d\u8868\u793a\u5728\u8ddf\u8e2a\u8bb0\u5f55\u7684\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u800c\u201c\u5916\u90e8\u201d\u8868\u793a\u5728\u8ddf\u8e2a\u8bb0\u5f55\u7684\u65f6\u95f4\u8303\u56f4\u4e4b\u5916\u3002\u53ef\u7528\u7684\u7c7b\u578b\u6709\uff1a AIFO \u662f\u6709\u8da3\u7684\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5728\u8bb0\u5f55\u8ddf\u8e2a\u65f6\u5206\u914d\u7684\uff0c\u7136\u540e\u5728\u8ddf\u8e2a\u8bb0\u5f55\u505c\u6b62\u4e4b\u524d\u672a\u91ca\u653e\u3002\u5b83\u4eec\u53ef\u80fd\u5728\u51e0\u79d2\u949f\u540e\u88ab\u91ca\u653e\uff0c\u4f46\u662f\u5982\u679c\u60a8\u5728\u540c\u4e00\u4e2a\u8c03\u7528\u5806\u6808\u4e0a\u770b\u5230\u8db3\u591f\u591a\u7684\u5b83\u4eec\uff0c\u60a8\u5c31\u4f1a\u6000\u7591\u2026\u2026\u8fd9\u5c31\u662f\u5806\u8ddf\u8e2a\u7684\u5de5\u4f5c\u539f\u7406\u3002\u53e5\u67c4\u8ddf\u8e2a\u91c7\u7528\u4e86\u8fd9\u4e2a\u6982\u5ff5\u5e76\u5c06\u5176\u66f4\u6539\u4e3a\u8db3\u4ee5\u4ee4\u4eba\u56f0\u60d1\u7684\u7a0b\u5ea6\u3002\u4ed6\u4eec\u5c06\u5217\u4ece Type \u91cd\u547d\u540d\u4e3a Lifetime\u3002 Lifetime \u7edd\u5bf9\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u540d\u5b57\uff0c\u4f46\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u53d1\u751f\u4e00\u4e9b\u6df7\u6dc6\uff0c\u56e0\u4e3a\u540c\u4e00\u6982\u5ff5\u6709\u4e24\u4e2a\u540d\u5b57 \u4ed6\u4eec\u9ed8\u8ba4\u5173\u95ed\u4e86\u8be5\u5217\u3002\u8fd9\u548c\u5806\u8ddf\u8e2a\u662f\u4e00\u81f4\u7684\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bType\u5217\u662f\u5173\u95ed\u7684\uff0c\u4f46\u662f\u83ab\u540d\u5176\u5999\u3002\u8fd9\u662f\u8868\u683c\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u5217\uff0c\u6240\u4ee5\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u5728\u524d\u9762\u548c\u4e2d\u95f4\u3002\u9664\u4e86\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5173\u95ed\u5217\u4e4b\u5916\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u9690\u85cf\u4e86\u5b83\uff01\u901a\u5e38\uff0c\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb\u4efb\u4f55\u5217\u6807\u9898\uff0c\u9009\u62e9\u66f4\u591a\u5217...\uff0c\u7136\u540e\u67e5\u770b\u60a8\u53ef\u4ee5\u542f\u7528\u7684\u5217\u5217\u8868\u3002\u8bb8\u591a\u7528\u6237\uff08\u6211\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff09\u53ef\u80fd\u8ba4\u4e3a\u83dc\u5355\u4e2d\u7684\u5217\u5217\u8868\u662f\u5b8c\u6574\u7684\u3002\u5b83\u4e0d\u662f\u3002\u5bf9\u4e8e\u67d0\u4e9b\u5217\u2014\u2014\u5305\u62ec\u6781\u5176\u91cd\u8981\u7684\u751f\u547d\u5468\u671f\u5217\u2014\u2014\u60a8\u5fc5\u987b\u8c03\u7528\u89c6\u56fe\u7f16\u8f91\u5668\uff08Ctrl+E \u6216\u5355\u51fb\u201c\u6309\u8fdb\u7a0b\u672a\u5b8c\u6210\u8ba1\u6570\u201d\u53f3\u4fa7\u7684\u9f7f\u8f6e\u6846\uff09\uff0c\u7136\u540e\u4ece\u53ef\u7528\u5217\u5217\u8868\u4e2d\u62d6\u52a8\u751f\u547d\u5468\u671f\u5217\u5728\u5de6\u8fb9\u5230\u53f3\u8fb9\u7684\u5217\u8868\u3002\u5509\u2026\u2026\u6211\u5411 WPA \u8d1f\u8d23\u4eba\u62a5\u544a\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ed6\u4eec\u540c\u610f\u9700\u8981\u6539\u8fdb\u3002\u65e2\u7136 WPA\uff08\u9884\u89c8\u7248\uff09\u5728 Microsoft \u5546\u5e97\u4e2d\u53ef\u7528\uff0c\u6211\u4eec\u5e94\u8be5\u671f\u671b\u50cf\u8fd9\u6837\u7684\u4fee\u590d\u7a0b\u5e8f\u5c06\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5feb\u5730\u53d1\u5e03\u3002\nETW \u7684\u53e5\u67c4\u8ddf\u8e2a\u8981\u6ce8\u610f\u7684\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u4f3c\u4e4e\u6709\u4e00\u4e9b\u8bb0\u5e10\u9519\u8bef\u3002\u5b83\u5c06\u62a5\u544a\u7ed9\u5b9a\u201chandle -s\u201d\u8f93\u51fa\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u6cc4\u6f0f\uff0c\u56e0\u6b64\u8bf7\u52a1\u5fc5\u5728\u82b1\u8d39\u592a\u591a\u65f6\u95f4\u4e4b\u524d\u4ea4\u53c9\u68c0\u67e5\u60a8\u7684\u7ed3\u679c\u3002\u5e26\u7740\u6240\u6709\u7684\u5b66\u4e60\u548c\u53d1\u73b0\uff0c\u6211\u5f97\u51fa\u4e86\u8fd9\u4e2a\u89c2\u70b9\u3002\u5b83\u663e\u793a\u4e86 gmail \u8fdb\u7a0b\u5728 12 \u5c0f\u65f6\u5185\u6cc4\u6f0f\u7684 527 \u4e2a\u4e8b\u4ef6\u53e5\u67c4\uff0c\u5176\u4e2d 510 \u4e2a\u90fd\u6cc4\u6f0f\u5728\u540c\u4e00\u4e2a\u8c03\u7528\u5806\u6808\u4e0a\uff0c\u4ee5 WaitableEvent \u6784\u9020\u51fd\u6570\u7ed3\u675f\uff1a\u4e8b\u4ef6\u5bf9\u8c61\u7531 Chrome \u7684 WaitableEvent \u7c7b\u5206\u914d\u5e76\u5b58\u50a8\u5728\u5176\u4e2d\uff0c\u7531\u5176 ScopedHandle \u6210\u5458\u7ba1\u7406\u591a\u53d8\u7684\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u6cc4\u6f0f\u4e86\u8fd9\u4e9b\u53e5\u67c4\uff0c\u6211\u4eec\u4e5f\u4f1a\u6cc4\u6f0f WaitableEvent \u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u6cc4\u6f0f\u4e86\u90a3\u4e9b\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u6cc4\u6f0f\u4e86\u4ec0\u4e48\uff1f\u6211\u4f7f\u7528\u5806\u5feb\u7167\u8ddf\u8e2a\u6765\u76d1\u63a7 gmail \u8fdb\u7a0b\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u719f\u6089\u7684\u9886\u57df\uff0c\u6240\u4ee5\u5b83\u8fdb\u884c\u5f97\u5f88\u987a\u5229\u3002\u7136\u540e\u6211\u901a\u8fc7\u7c7b\u4f3c\u4e8e\u53e5\u67c4\u6cc4\u6f0f\u7684\u8c03\u7528\u5806\u6808\u5bfb\u627e\u6f5c\u5728\u7684\u6cc4\u6f0f\u5e76\u627e\u5230\u4e86\u4e00\u4e9b\u3002\u7136\u540e\u6211\u73af\u987e\u56db\u5468\u5bfb\u627e\u5176\u4ed6\u6f5c\u5728\u7684\u6cc4\u6f0f\uff0c\u5176\u8ba1\u6570\u76f8\u4f3c\u4e14\u770b\u8d77\u6765\u4f3c\u4e4e\u76f8\u5173\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u4f3c\u4e4e\u4e0e IDBFactory \u548c OperationsController \u5bf9\u8c61\u6cc4\u6f0f\u76f8\u5173\u7684\u96c6\u5408\u3002\u6211\u4f7f\u7528 Chrome \u7684\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u67e5\u770b gmail \u662f\u5426\u6cc4\u6f0f\u4e86 IDB \u76f8\u5173\u5bf9\u8c61\u3002\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u628a\u8fd9\u5f52\u548e\u4e8e gmail \u56e2\u961f\u3002\u6709\u51e0\u4e2a\u4eba\u6700\u7ec8\u4e3a\u5206\u6790\u505a\u51fa\u4e86\u8d21\u732e\u3002\u6211\u4e86\u89e3\u5982\u4f55\u89e3\u91ca\u8fd9\u4e9b\u75d5\u8ff9\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728 Chrome \u7684\u81ea\u5b9a\u4e49\u68c0\u6d4b\u7248\u672c\u4e0a\u91cd\u73b0\u6cc4\u6f0f\uff0c\u4f46\u6211\u5bf9 JavaScript \u5f88\u7cdf\u7cd5\uff0c\u800c\u4e14\u6211\u4e0d\u4e86\u89e3\u6211\u4eec\u7684 IDB \u67b6\u6784\u3002\u6211\u7684\u4e00\u4f4d\u540c\u4e8b\u4e86\u89e3\u6cc4\u6f0f\u5bf9\u8c61\u7684\u67b6\u6784\u3002\u8fd9\u4f4d\u540c\u4e8b\u610f\u8bc6\u5230\u6cc4\u6f0f\u7684\u5206\u914d\u53d1\u751f\u5728\u670d\u52a1\u5de5\u4f5c\u7ebf\u7a0b\u4e0a\uff0c\u5e76\u4e14\u5728 IndexedDB \u8fde\u63a5\u6253\u5f00\u65f6\u53ea\u8981\u670d\u52a1\u5de5\u4f5c\u7ebf\u7a0b\u6d88\u5931\u5c31\u4f1a\u6cc4\u6f0f\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u67d0\u4e9b\u7f51\u7ad9\u4e0a\u7ecf\u5e38\u53d1\u751f\uff0c\u800c Chrome \u5bf9\u6b64\u5904\u7406\u5f97\u5f88\u5dee\u3002\u90a3\u5c31\u662f\u9519\u8bef\uff01\u8fdb\u4e00\u6b65\u7684\u8c03\u67e5\u652f\u6301\u4e86\u8fd9\u4e00\u7406\u8bba\u2014\u2014\u6cc4\u6f0f\u5bf9\u8c61\u6570\u91cf\u7684\u589e\u52a0\u4e0e\u670d\u52a1\u5de5\u4f5c\u7ebf\u7a0b\u7684\u9000\u51fa\u6709\u5173\u3002\u7136\u540e\u6211\u610f\u8bc6\u5230\u670d\u52a1\u5de5\u4f5c\u8005\u4e0e Google Drive \u7684\u79bb\u7ebf\u6a21\u5f0f\u76f8\u5173\u8054\u3002\u5982\u679c\u6211\u7981\u7528\u79bb\u7ebf\u6a21\u5f0f\uff0c\u90a3\u4e48\u6cc4\u6f0f\u5c31\u4f1a\u6d88\u5931\u3002\n\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u7406\u89e3\u8fd9\u4e2a\u9519\u8bef\uff0c\u4f46\u5f88\u5feb\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a\u4fee\u590d\u7a0b\u5e8f\uff08\u4e0d\u662f\u6211 - \u6211\u4ecd\u7136\u4e0d\u7406\u89e3\u4ee3\u7801\u7684\u90a3\u90e8\u5206\uff09\u5e76\u5728\u51e0\u5929\u540e\u767b\u9646 Chromium \u5b58\u50a8\u5e93\u3002\u8be5\u4fee\u590d\u4e8e 5 \u6708\u767b\u9646 M92\uff0c\u5e76\u4e8e 2021 \u5e74 7 \u6708 21 \u65e5\u5de6\u53f3\u5f00\u59cb\u5411\u666e\u901a\u7528\u6237\u63a8\u51fa\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u4fee\u590d\uff0c\u90a3\u4e48\u60a8\u5f88\u5feb\u5c31\u4f1a\u83b7\u5f97\u3002\u4e00\u65e6\u7406\u89e3\u4e86\u9519\u8bef\uff0c\u6211\u5c31\u53ef\u4ee5\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3002\u4f7f\u7528\u5e26\u6709 bug \u7684 Chrome \u7248\u672c\uff0c\u6211\u540c\u65f6\u6253\u5f00\u4e86 gmail\u3001\u5de5\u4f5c\u8868\u3001\u6587\u6863\u548c\u9a71\u52a8\u5668\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u7528\u79bb\u7ebf\u6a21\u5f0f\uff0c\u56e0\u6b64\u6240\u6709\u8fd9\u4e9b\u90fd\u6cc4\u6f0f\u4e86\u53e5\u67c4\u3002\u6211\u7684 Chrome \u7a97\u53e3\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u5728\u8ba9\u6709\u95ee\u9898\u7684 Chrome \u50cf\u8fd9\u6837\u8fd0\u884c\u51e0\u5929\u4e4b\u540e\uff0c\u4efb\u52a1\u7ba1\u7406\u5668\u5728\u6309\u53e5\u67c4\u6392\u5e8f\u65f6\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\u524d 11 \u4e2a\u8fdb\u7a0b\u4e2d\u6709 5 \u4e2a\u662f chrome.exe\uff08\u56db\u4e2a\u6e32\u67d3\u5668\u52a0\u4e0a\u6d4f\u89c8\u5668\u8fdb\u7a0b\uff09\u3002\u66f4\u65b0\u6d4f\u89c8\u5668\u540e\uff0c\u56db\u4e2a\u6e32\u67d3\u5668\u4e0d\u518d\u663e\u793a\u5728\u9876\u90e8\u5217\u8868\u4e2d\u3002\u4f46\u662f\u5176\u4ed6\u8fc7\u7a0b\u5462\uff1f WPA.exe \u662f Windows \u6027\u80fd\u5206\u6790\u5668\u2014\u2014\u6211\u7528\u6765\u5206\u6790\u53e5\u67c4\u6cc4\u6f0f\u8ddf\u8e2a\u7684\u5de5\u5177\u3002\u5b83\u6253\u5f00\u4e86\u5927\u7ea6 1,700 \u4e2a .symcache \u6587\u4ef6\uff0c\u5e76\u4e14\u4f3c\u4e4e\u6709\u4e00\u4e2a\u4e8b\u4ef6\u53e5\u67c4\u6cc4\u6f0f\uff0c\u5c31\u50cf Chrome \u4e00\u6837\u3002\u6211\u5df2\u7ecf\u5411\u5f00\u53d1\u4eba\u5458\u62a5\u544a\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ed6\u4eec\u6b63\u5728\u8c03\u67e5\u3002\u7cfb\u7edf\u6df7\u5408\u4e86\u4e8b\u4ef6\u53e5\u67c4\u3001\u6587\u4ef6\u53e5\u67c4\u3001IoCompletion \u53e5\u67c4\u3001\u8fdb\u7a0b\u53e5\u67c4\u3001WaitCompletionPacket \u53e5\u67c4\u7b49\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u4e9b\u662f\u5426\u4ee3\u8868\u6cc4\u6f0f\u3002\u6211\u731c\u4ed6\u4eec\u6ca1\u6709\u3002\u6b64 dllhost.exe \u526f\u672c\u6258\u7ba1 thumbcache.dll\u3002\u4e00\u4e9b\u5b9e\u9a8c\u8868\u660e\uff0c\u5982\u679c\u6211\u521b\u5efa\u65b0\u7684 .mp4 \u6587\u4ef6\uff0c\u90a3\u4e48\u5f53\u8d44\u6e90\u7ba1\u7406\u5668\u521b\u5efa\u7f29\u7565\u56fe\u65f6\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u6cc4\u6f0f\u6bcf\u4e2a\u6587\u4ef6 12 \u4e2a\u4ee5\u4e0a\u7684 WaitCompletionPacket \u53e5\u67c4\u3002\u5f53\u6211\u6e05\u7406\u5047\u671f\u89c6\u9891\u65f6\uff0c\u8fd9\u5f88\u5bb9\u6613\u6cc4\u6f0f\u6210\u767e\u4e0a\u5343\u4e2a\u53e5\u67c4\u3002\u6211\u5728\u63a8\u7279\u4e0a\u63d0\u5230\u8fc7\u4e24\u6b21\u3002\u6211\u8fd8\u5728\u53cd\u9988\u4e2d\u5fc3\u62a5\u544a\u4e86\u5b83\uff08\u4ec5\u5bf9 Windows 10 \u4e0a\u7684\u975e\u516c\u53f8\u7528\u6237\u53ef\u89c1\uff09\u3002\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u663e\u793a\u6211\u521b\u5efa 20 \u4e2a .mp4 \u6587\u4ef6\u5e76\u6cc4\u6f0f\u6570\u767e\u4e2a\u53e5\u67c4\u7684 ETW \u8ddf\u8e2a\u3002\u8fd9\u5e94\u8be5\u662f\u56fa\u5b9a\u7684\u3002\u6700\u540e\u4e00\u4e2a\u662f IntelTechnologyAccessService.exe\uff0c\u5b83\u4f1a\u6cc4\u6f0f\u4e8b\u4ef6\u53e5\u67c4\u3002\u6ca1\u6709\u7b26\u53f7\u6216\u4e0d\u77e5\u9053\u5b83\u7684\u4f5c\u7528\uff0c\u6211\u53ea\u80fd\u8bf4\u6cc4\u6f0f\u6765\u81ea\u4ed6\u4eec\u7684 core.dll\u3002\u6211\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u5173\u4e8e\u6cc4\u6f0f\u7684\u6d88\u606f\uff0c\u5e76\u5f97\u5230\u4e86\u4e00\u4f4d\u60f3\u8981\u4fee\u590d\u6cc4\u6f0f\u7684\u82f1\u7279\u5c14\u5f00\u53d1\u4eba\u5458\u7684\u8fc5\u901f\u56de\u5e94\u3002\u6211\u5728\u7981\u7528\u79bb\u7ebf\u6a21\u5f0f\u548c\u56fa\u5b9a\u7248\u672c\u7684 Chrome\uff08\u91cd\u65b0\u542f\u7528\u79bb\u7ebf\u6a21\u5f0f\uff09\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4e86\u76f8\u540c\u7684\u538b\u529b\u6d4b\u8bd5\u3002\u8fd9\u6e05\u695a\u5730\u8868\u660e\u7981\u7528\u79bb\u7ebf\u6a21\u5f0f\u963b\u6b62\u4e86\u9519\u8bef\u7684\u51fa\u73b0\uff0c\u5e76\u4e14\u8bc1\u660e\u4e86\u4fee\u590d\u662f\u6709\u6548\u7684\u3002\u53e5\u67c4\u6cc4\u6f0f\u6d88\u5931\u4e86\uff0c\u76f8\u5173\u7684\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6d88\u5931\u4e86\u3002\n\u5f53\u8fd0\u884c Chrome \u7684\u56fa\u5b9a\u7248\u672c\u65f6\uff0cWindows \u4efb\u52a1\u7ba1\u7406\u5668\u770b\u8d77\u6765\u66f4\u50cf\u8fd9\u6837\u3002 Chrome \u7684\u6d4f\u89c8\u5668\u548c GPU \u8fdb\u7a0b\uff08\u672a\u663e\u793a\uff09\u4ecd\u7136\u6709 1,000 \u591a\u4e2a\u53e5\u67c4\u6253\u5f00\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f46\u6e32\u67d3\u5668\u8fdb\u7a0b\u4f7f\u7528\u7684\u53e5\u67c4\u5f88\u5c11\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u90fd\u4e0d\u518d\u51fa\u73b0\u5728\u7ed3\u679c\u7684\u7b2c\u4e00\u9875\u4e0a\u2014\u2014\u95ee\u9898\u89e3\u51b3\u4e86\u3002 dllhost.exe \u7684\u6392\u540d\u4e0a\u5347\u4e86\uff0c\u56e0\u4e3a\u6211\u901a\u8fc7\u521b\u5efa 512 \u4e2a\u65b0\u7684 .mp4 \u6587\u4ef6\u5bf9\u5176\u8fdb\u884c\u4e86\u538b\u529b\u6d4b\u8bd5\uff0c\u5e76\u4e14\u8d44\u6e90\u7ba1\u7406\u5668\u51fa\u73b0\u4e86\uff0c\u56e0\u4e3a\u663e\u7136\u6211\u7684 .mp4 \u6d4b\u8bd5\u663e\u793a\u5176\u4e2d\u5b58\u5728\u4e8b\u4ef6\u53e5\u67c4\u6cc4\u6f0f\u3002\u53f9\u606f\u2026\u2026\u5904\u7406\u6cc4\u6f0f\u5e76\u4e0d\u662f\u6700\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u8fdb\u7a0b\u53e5\u67c4\u6cc4\u6f0f\u975e\u5e38\u6602\u8d35\uff0c\u4f46\u4e8b\u4ef6\u53e5\u67c4\u6cc4\u6f0f\u5219\u4e0d\u7136\u3002\u9664\u4e86\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u2014\u2014\u6bd4\u5982 Chrome \u7684\u2014\u2014\u53e5\u67c4\u6cc4\u6f0f\u53ef\u80fd\u4e0e\u5176\u4ed6\u6cc4\u6f0f\u76f8\u5173\uff0c\u6240\u4ee5\u5b83\u4eec\u901a\u5e38\u503c\u5f97\u8c03\u67e5\u3002\u6ce8\u610f\u4efb\u52a1\u7ba1\u7406\u5668\uff0c\u5c24\u5176\u662f\u4f60\u81ea\u5df1\u7684\u8fdb\u7a0b\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4ecd\u7136\u4e0d\u77e5\u9053\u5982\u4f55\u8c03\u67e5 GDI \u53e5\u67c4\u6cc4\u6f0f\u2014\u2014\u5982\u679c\u6709\u4eba\u77e5\u9053\uff0c\u8bf7\u544a\u8bc9\u6211\u3002\u60a8\u53ef\u4ee5\u5728 Chromium \u9519\u8bef\u4e2d\u9605\u8bfb\u957f\u8fbe\u6570\u6708\u7684\u8c03\u67e5\u2014\u2014\u5931\u8bef\u7b49\u7b49\u3002\u6b64\u6761\u76ee\u53d1\u8868\u5728\u9519\u8bef\u3001\u4ee3\u7801\u53ef\u9760\u6027\u3001\u8c03\u67e5\u62a5\u544a\u3001uiforetw\u3001xperf \u548c\u6807\u8bb0\u53e5\u67c4\u3001\u6cc4\u6f0f\u3002\u4e3a\u6c38\u4e45\u94fe\u63a5\u6dfb\u52a0\u4e66\u7b7e\u3002", "note_en": "Three years ago I found a  32 GB memory leak caused by  CcmExec.exe failing to close process handles. That bug is fixed, but ever since then I have had the  handles column in\u00a0 Windows Task Manager enabled, just in case I hit another handle leak.\n Because of this routine checking I noticed, in February of 2021, that one of Chrome\u2019s processes had more than 20,000  handles open!\n This Chrome bug is fixed now but I wanted to share how to investigate handle leaks because there are other leaky programs out there. I also wanted to share my process of learning.\n  A bit of investigation with  Chrome\u2019s Task manager showed that the process in question was the  renderer process for gmail, and a bit more looking around showed that most Chrome renderer processes had fewer than 1,000 kernel handles.\n 20,000 seemed anomalous and after monitoring for a few hours I could see that the handle count was going up indefinitely. Mercy sakes alive, looks like we\u2019ve got us a handle leak.\n  The first thing I wanted to know was what type of handles these were. Windows handles can refer to files, processes, threads, events, semaphores, and many other kernel objects. I turned to the sysinternals\u2019   handle tool to see which type it was, but it said there were only a few hundred handles open in that process. It turns out that  handle.exe defaults to only displaying information about file handles. To get full information you can pass -a to dump information about all handles, or -s to summarize by type. The -s option is most helpful for this investigation. Typical output looked for gmail like this (running it from an admin command prompt would have resolved the &lt;Unknown type&gt; handles):\n Handle type summary: \u00a0 &lt;Unknown type&gt;\u00a0 : 4 \u00a0 &lt;Unknown type&gt;\u00a0 : 77 \u00a0 &lt;Unknown type&gt;\u00a0 : 48 \u00a0 ALPC Port\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 1 \u00a0 Directory\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 2 \u00a0 Event\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 20858 \u00a0 File\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 147 \u00a0 IoCompletion\u00a0\u00a0\u00a0 : 4 \u00a0 IRTimer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 6 \u00a0 Key\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 8 \u00a0 Semaphore\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 8 \u00a0 Thread\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 : 31 \u00a0 TpWorkerFactory : 3 \u00a0 WaitCompletionPacket: 10 Total handles: 21207\n So. Event handles it is. It could be worse. Leaked process handles keep around expensive kernel structures which seem to add up to about 64 KB per handle. Event handles, in comparison, are pretty cheap \u2013 perhaps sixteen bytes or so (it\u2019s hard to measure). It was possible that the impact of this leak was minuscule. But, Chrome uses  RAII objects to manage all of its handles so we shouldn\u2019t have leaks \u2013 I wanted to understand what was going wrong.\n After a bit of asking around I found that none of my coworkers knew how to investigate handle leaks, so I had to figure it out. I attached a debugger to the gmail process and tried setting a breakpoint on the functions that create events but I got too much noise. Hundreds of events were being created and more than 99% of them were being cleanly deleted. I need something better.\n  Some might say that am too obsessed with using  Event Tracing for Windows to try to solve all problems, but as long as it keeps working I\u2019m going to keep using it. I suspected that ETW might be able to track handle creation and destruction and find leaks, but I had no idea how.\n A bit of Google searching found  this article. It got me started, but it has a few flaws:\n The article shows dozens of flags being passed to xperf.exe, but no explanation of what they are The flags specified led to a very high data rate, which made long-running tracing impractical The post promised to explain how to analyze the data in \u201cthe next post\u201d, but there was no \u201cnext post\u201d and a  call for help led to nothing\n Flaws or not, this let me crack the case. I started by using it mostly as-is. I wrote a test program that leaked 10,000 handles and I recorded a trace to see if I could see the intentional leak. It worked.\n However it was recording data at many GB per hour. Because the handle leak was fairly slow \u2013 it took weeks to leak 20,000 handles \u2013 I needed a many-hour trace to be sure I could catch the leak. I focused on two strategies:\n    You can find more about what some of these mean by looking at the output of  xperf -providers but the short version is that the recommended command line doesn\u2019t just record information about handles, it also records information about every context switch and all disk I/O (see Latency), enables the sampling profiler (also in Latency), and so much more. My first step was to trim it down to just this:\n  PROC_THREAD+LOADER is required to make sense of any ETW trace, and OB_HANDLE+OB_OBJECT seemed to be the critical things for handle tracing. A Microsoft contact then told me that OB_OBJECT was not needed so I removed that. The recommended command also had six different parameters to the -stackwalk flag, when all I really need is the stacks for when handles are allocated. I deleted five of those and then added HandleDuplicate just in case.\n   You can see a more full-featured command line in the  batch file on github but this shows the minimal idea. It starts tracing, records enough information to attribute events to the right thread and module (PROC_THREAD+LOADER), records information on handle operations (OB_HANDLE) and records call stacks on handle creation and handle duplication. Perfect!\n  I then loaded the (still-too-large) traces into WPA and looked to see where all of the data was coming from. The processes that were generating the most events were  Task Manager and  Chrome Remote Desktop. The high amount of traffic meant that these two processes were creating and destroying a lot of handles. This was not normally a problem (they weren\u2019t leaking handles) but it was making my trace larger, so the solution was clear \u2013 shut them down while tracing. Closing  Task Manager was easy enough, but since I was doing this investigation from home on my workstation in the office it was less convenient to close  Chrome Remote Desktop. But, no worries. I made sure everything was running correctly and then disconnected (to reduce the amount of data being generated) and then reconnected twelve hours later. This sort of tactic \u2013 shutting down programs that are generating excessive data \u2013 is often useful with ETW because it generally records information about the entire system, including all running processes.\n  Now I had some large-but-manageable traces (~970 MB, compressed) and I could start the analysis. I loaded the trace into Windows Performance Analyzer and eventually found the handle tracking graph. It\u2019s in Graph Explorer, under Memory (???), Handles, Outstanding Count by Process. Perfect!\n Opening this gives a graph showing handle counts over time for every process. There\u2019s a lot of activity over twelve hours. Zooming in to a ten-minute time span shows a flurry of activity. Processes are created, allocate some handles, and then die, creating a view like a digital Monument Valley. Other processes allocate and free handles with no clear pattern, and others seem to increase their handle count indefinitely:\n  The graph was pretty, but I decided I wanted raw numbers so I looked at the table. The default view looked pretty damning for Chrome\u2019s browser process with almost 1.5 million handles allocated. But wait\u2026\n  The handle leak wasn\u2019t in the browser process, and it was nowhere near 1.5 million handles. Well, it turns out that the default view is misleading. While the graph/table are called \u201cOutstanding Count by Process\u201d and that is indeed what the graph shows, the  table actually shows  cumulative count by process. That is, the browser process allocated 1.5 million handles over twelve hours, but it freed pretty much all of them, so who cares?\n What I wanted to see was outstanding handles \u2013 allocated but not freed. The table can show that data, but it sure doesn\u2019t make it easy.\n In the  heap tracing tables there is a column labeled  Type. Now that is a uniquely poor choice for a column name, but it is a very important column. Crucially, in the context of the  Type column \u201cInside\u201d means inside the time range recorded by the trace and \u201cOutside\u201d means outside the time range recorded by the trace. The available types are:\n  AIFO are the interesting events because they were allocated while the trace was being recorded and then not freed before trace recording stopped. They  might have been freed a few seconds later, but if you see enough of them on the same call stack you get suspicious\u2026\n That\u2019s how heap tracing works. Handle tracing took that concept and changed it just enough to be confusing.\n They renamed the column from Type to Lifetime. Lifetime is definitely a better name, but there is inevitably some confusion that happens from having two names for the same concept They made the column off by default. This is consistent with heap tracing, which has the Type column off by default, but it is inexplicable. This is the single most important column in the table so I don\u2019t understand why it isn\u2019t front and center. In addition to having the column off by default they actually hide it! Normally you can right-click on any column header, select  More Columns\u2026, and see a list of columns that you can enable. Many users (me for a long time) probably assume that the list of columns in the menu is complete. It is not. For some columns \u2013 including the vitally important  Lifetime column \u2013 you have to invoke the  View Editor (Ctrl+E or click the gear box to the right of \u201c Outstanding Count by Process\u201d) and then drag the Lifetime column from the list of  Available Columns on the left to the list on the right. Sigh\u2026\n I reported these problems to the WPA lead and they agreed that improvements were needed. Now that  WPA (Preview) is available in the Microsoft store we should expect that fixes like this will ship faster than ever before.\n A final issue to be aware of with ETW\u2019s handle tracing is that it seems to have some accounting errors. It will report leaks that are impossible given the \u201chandle -s\u201d output, so be sure to cross-check your results before spending too much time.\n  With all of that learning and discovery behind me I arrived at this view. It showed 527 event handles leaked by the gmail process in twelve hours, with 510 of them all leaks on the same call stack, ending in the WaitableEvent constructor:\n    The event object was allocated by and stored in Chrome\u2019s  WaitableEvent class, managed by its ScopedHandle member variable. That meant that if we were leaking these handles we were also leaking the WaitableEvent objects. If we were leaking those then what else were we leaking?\n I used  heap snapshot tracing to monitor the gmail process. This was familiar territory for me so it went smoothly. I then looked for potential leaks with call stacks similar to the handle leak and found some. I then looked around for other potential leaks with counts that were similar and that looked plausibly related and I found a set that seemed related to leaks of IDBFactory and OperationsController objects.\n I used Chrome\u2019s developer tools to see if gmail was leaking IDB related objects. It was not, so I wasn\u2019t able to blame this on the gmail team.\n  Several people ended up contributing to the analysis. I understood how to interpret the traces and I could reproduce the leaks on custom-instrumented versions of Chrome, but I am terrible at JavaScript and I don\u2019t understand our IDB architecture. One of my coworkers understood the architecture of the leaking objects. This coworker realized that the leaked allocations were happening on service worker threads and were being leaked whenever service worker threads went away while an IndexedDB connection was open. It turns out this happens quite regularly on some websites, and Chrome was handling this poorly. That\u2019s the bug!\n Further investigation supported this theory \u2013 the increases in leaked object counts were correlated with service worker threads exiting. I then realized that the service workers were associated with Google Drive\u2019s offline mode. If I disabled offline mode then the leaks went away.\n It took months to understand the bug, but then a  fix was created fairly promptly (not by me \u2013 I still don\u2019t understand that part of the code) and landed in the Chromium repo a few days later.\n The fix landed in May  in M92 which started rolling out to regular users around July 21st 2021. If you don\u2019t have the fix already then you will soon.\n  Once the bug was understood I could do stress tests. Using a version of Chrome with the bug I left gmail, sheets, docs, and drive open simultaneously. All of these use offline mode so all of them leaked handles. My Chrome window looked like this:\n  After leaving buggy Chrome running like this for a few days Task Manager looked like this when sorted by handles:\n  Five of the top eleven processes are chrome.exe (four renderers plus the browser process). Once I updated my browser the four renderers no longer show up in the top list. But what about the other processes?\n WPA.exe is Windows Performance Analyzer \u2013 the tool I use to analyze the handle-leak traces. It leaves about 1,700 .symcache files open, and seems to have an Event handle leak, just like Chrome. I\u2019ve reported these issues to the developer and they are investigating. System has a mixture of Event handles, File handles, IoCompletion handles, Process handles, WaitCompletionPacket handles, and others. I don\u2019t know if these represent leaks. I\u2019m guessing they do not. This copy of dllhost.exe hosts thumbcache.dll. A bit of experimentation showed that if I create new .mp4 files then this process leaks 12+ WaitCompletionPacket handles per file when explorer creates the thumbnails. When I\u2019m cleaning up vacation videos this can easily leaks hundreds or thousands of handles. I  mentioned this on twitter,  twice. I also reported it on  Feedback Hub (only visible to non-corporate users on Windows 10). An ETW trace showing me creating 20 .mp4 files and leaking hundreds of handles can be  found here. This should be fixed. The last one is IntelTechnologyAccessService.exe, which leaks Event handles. Without symbols or any idea of what it does I can only tell that the leaks are from their core.dll. I\u00a0  tweeted about the leak and got a swift response from an Intel developer who wants to fix the leak.\n I did the same stress test both with offline mode disabled and with fixed versions of Chrome (with offline mode re-enabled). This made it clear that disabling offline mode stopped the bug from appearing, and it proved that the fix was working. The handle leaks were gone, as were the associated memory leaks.\n When running the fixed version of Chrome the Windows Task Manager looked more like this. Chrome\u2019s browser and GPU processes (not shown) still have more than 1,000 handles open, due to how they work, but the renderer processes are using few enough handles that none of them make it onto the first page of results anymore \u2013 problem solved. dllhost.exe has moved up the rankings because I stress-tested it by creating 512 new .mp4 files, and explorer showed up because apparently my .mp4 testing revealed an event handle leak in it. Sigh\u2026\n  Handle leaks are not the worst thing ever. Process handle leaks are quite expensive, but event handle leaks are not. Except that in some cases \u2013 like Chrome\u2019s \u2013 the handle leak may correlate with other leaks, so they are usually worth investigating.\n Pay attention to Task Manager, especially for your own processes, so that you can avoid  this problem.\n I still don\u2019t know how to investigate  GDI handle leaks \u2013 if somebody knows then please let me know.\n You can read the multi-month investigation \u2013 missteps and all \u2013 in the  Chromium bug.\n    This entry was posted in  Bugs,  Code Reliability,  Investigative Reporting,  uiforetw,  xperf and tagged  handles,  leaks. Bookmark the  permalink.", "posttime": "2021-07-26 10:41:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,\u53e5\u67c4", "title": "\u5728 Chromium \u7b49\u4e2d\u67e5\u627e Windows HANDLE \u6cc4\u6f0f", "title_en": "Finding Windows HANDLE leaks, in Chromium and others", "transed": 1, "url": "https://randomascii.wordpress.com/2021/07/25/finding-windows-handle-leaks-in-chromium-and-others/", "via": "", "real_tags": ["windows", "\u53e5\u67c4"]}, {"category": "", "categoryclass": "", "imagename": "99a61ac6f3d338bfc2332313bc4e1cda.jpg", "infoid": 1069757, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e5\u672c\u6a2a\u6ee8\uff0c2021 \u5e74 7 \u6708 16 \u65e5\u2014\u2014Socionext Inc. \u4e0e\u9ad8\u80fd\u52a0\u901f\u5668\u7814\u7a76\u7ec4\u7ec7\u6750\u6599\u7ed3\u6784\u79d1\u5b66\u7814\u7a76\u6240\u3001\u4eac\u90fd\u5927\u5b66\u7efc\u5408\u8f90\u5c04\u4e0e\u6838\u79d1\u5b66\u7814\u7a76\u6240\u548c\u5927\u962a\u4fe1\u606f\u79d1\u5b66\u4e0e\u6280\u672f\u7814\u7a76\u751f\u9662\u7684\u7814\u7a76\u4eba\u5458\u5408\u4f5c\u5927\u5b66\uff0c\u5e76\u9996\u6b21\u6210\u529f\u8bc1\u660e\u4e86\u4ecb\u5b50\u548c\u4e2d\u5b50\u5f15\u8d77\u7684\u534a\u5bfc\u4f53\u5668\u4ef6\u7684\u8f6f\u8bef\u5dee\u5177\u6709\u4e0d\u540c\u7684\u7279\u6027\u3002\u8be5\u7814\u7a76\u5c0f\u7ec4\u5728\u6750\u6599\u548c\u751f\u547d\u79d1\u5b66\u8bbe\u65bd (MLF) \u7684\u03bc \u5b50\u79d1\u5b66\u8bbe\u65bd (MUSE)\u3001\u65e5\u672c\u8d28\u5b50\u52a0\u901f\u5668\u7814\u7a76\u4e2d\u5fc3 (J-PARC)\u3001\u4eac\u90fd\u5927\u5b66\u7814\u7a76\u4e2d\u5fc3\u7684\u70ed\u4e2d\u5b50\u675f\u8fdb\u884c\u4e86\u7528\u8d1f\u548c\u6b63\u03bc\u5b50\u675f\u7167\u5c04\u534a\u5bfc\u4f53\u5668\u4ef6\u7684\u5b9e\u9a8c\u53cd\u5e94\u5806 (KUR) \u548c\u5927\u962a\u5927\u5b66\u6838\u7269\u7406\u7814\u7a76\u4e2d\u5fc3 (RCNP) \u7684\u9ad8\u80fd\u4e2d\u5b50\u675f\u3002\u8bfe\u9898\u7ec4\u901a\u8fc7\u4f7f\u7528\u591a\u79cd\u7c7b\u578b\u7684\u91cf\u5b50\u675f\uff0c\u5b9e\u73b0\u4e86\u5bf9\u5b87\u5b99\u5c04\u7ebf\u03bc\u5b50\u548c\u4e2d\u5b50\u5bf9\u73af\u5883\u8f90\u5c04\u5f71\u54cd\u7684\u7efc\u5408\u6d4b\u91cf\u3002\u4ee4\u4eba\u9f13\u821e\u7684\u7ed3\u679c\u6709\u671b\u63a8\u52a8\u73af\u5883\u8f90\u5c04\u5f15\u8d77\u7684\u8f6f\u9519\u8bef\u7684\u6709\u6548\u8bc4\u4f30\u65b9\u6cd5\u548c\u5bf9\u7b56\u7684\u53d1\u5c55\u3002\u9884\u8ba1\u7ed3\u679c\u8fd8\u5c06\u5bfc\u81f4\u521b\u5efa\u9ad8\u5ea6\u53ef\u9760\u7684\u534a\u5bfc\u4f53\u8bbe\u5907\uff0c\u4ee5\u652f\u6301\u672a\u6765\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u7814\u7a76\u5de5\u4f5c\u6210\u679c\u5df2\u4e8e2021\u5e745\u670821\u65e5\u5728\u7ebf\u53d1\u8868\u5728IEEE Transactions on Nuclear Science\u4e0a\u3002\u90e8\u5206\u7814\u7a76\u5de5\u4f5c\u5f97\u5230\u4e86\u201c\u4f01\u4e1a\u3001\u7814\u7a76\u6240\u548c\u5b66\u672f\u754c\u5f00\u653e\u521b\u65b0\u5e73\u53f0\u8ba1\u5212\uff08OPERA\uff09\u201d\u7684\u652f\u6301\u3002\u65e5\u672c\u79d1\u5b66\u6280\u672f\u632f\u5174\u673a\u6784\uff08JST\uff09\u3002\u80cc\u666f\u6280\u672f\u968f\u7740\u534a\u5bfc\u4f53\u5668\u4ef6\u7684\u96c6\u6210\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5176\u5de5\u4f5c\u7535\u538b\u8d8a\u6765\u8d8a\u4f4e\uff0c\u5b83\u4eec\u66f4\u5bb9\u6613\u51fa\u73b0\u8f6f\u9519\u8bef\uff0c\u5f53\u7535\u5b50\u4fe1\u606f\u88ab\u8f90\u5c04\u610f\u5916\u6539\u53d8\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8f6f\u9519\u8bef\u3002\u6709\u4eba\u62c5\u5fc3\u73af\u5883\u8f90\u5c04\u5f15\u8d77\u7684\u8f6f\u9519\u8bef\u4f1a\u5bfc\u81f4\u66f4\u4e25\u91cd\u7684\u95ee\u9898\u3002\u4ee5\u524d\uff0c\u73af\u5883\u8f90\u5c04\u4e2d\u7684\u5b87\u5b99\u5c04\u7ebf\u4e2d\u5b50\u88ab\u8ba4\u4e3a\u662f\u5f15\u8d77\u8f6f\u8bef\u5dee\u95ee\u9898\u7684\u4e3b\u8981\u6765\u6e90\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u9ad8\u5ea6\u96c6\u6210\u4e14\u4f7f\u7528\u8f83\u4f4e\u7535\u538b\u7684\u5148\u8fdb\u534a\u5bfc\u4f53\u5668\u4ef6\uff0c\u7531\u540c\u6837\u6e90\u81ea\u5b87\u5b99\u5c04\u7ebf\u7684 \u03bc \u5b50\u5f15\u8d77\u7684\u8f6f\u9519\u8bef\u5df2\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u843d\u5165\u5730\u7403\u7684\u5b87\u5b99\u5c04\u7ebf\u4e2d\uff0c\u4ecb\u5b50\u7ea6\u5360\u6240\u6709\u7c92\u5b50\u7684\u56db\u5206\u4e4b\u4e09\uff0c\u6709\u4eba\u6307\u51fa\u5b83\u4eec\u53ef\u80fd\u9020\u6210\u6bd4\u4e2d\u5b50\u66f4\u5927\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5173\u4e8e\u03bc\u4ecb\u5b50\u5f15\u8d77\u7684\u8f6f\u8bef\u5dee\u7684\u62a5\u9053\u5f88\u5c11\uff0c\u4e2d\u5b50\u5f15\u8d77\u7684\u8f6f\u8bef\u5dee\u548c\u03bc\u4ecb\u5b50\u5f15\u8d77\u7684\u8f6f\u8bef\u5dee\u4e4b\u95f4\u7684\u533a\u522b\u8fd8\u4e0d\u662f\u5f88\u6e05\u695a\u3002\u7ed3\u679c \u672c\u7814\u7a76\u4e2d\uff0c\u4e3a\u4e86\u89e3\u5b87\u5b99\u5c04\u7ebf\u03bc\u5b50\u548c\u4e2d\u5b50\u5f15\u8d77\u7684\u8f6f\u8bef\u5dee\u5dee\u5f02\uff0c\u8bfe\u9898\u7ec4\u901a\u8fc7\u7528\u03bc\u5b50\u548c\u4e2d\u5b50\u7167\u5c04\u534a\u5bfc\u4f53\u5668\u4ef6\u8fdb\u884c\u4e86\u5bf9\u6bd4\u8bc4\u4ef7\u3002\u672c\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u4e86\u91c7\u7528 20 \u7eb3\u7c73 CMOS \u5de5\u827a\u6280\u672f\u5236\u9020\u7684 SRAM \u7535\u8def\u3002\u6bcf\u675f\u91cf\u5b50\u675f\u7167\u5c04SRAM\uff0c\u5206\u6790\u6bcf\u4e00\u4e2a\u7c92\u5b50\u7684\u8f6f\u9519\u8bef\u53d1\u751f\u7387\u548c\u8d8b\u52bf\u3002\u53d1\u73b0\u03bc\u5b50\u548c\u4e2d\u5b50\u5728\u9519\u8bef\u7387\u7684\u7535\u6e90\u7535\u538b\u4f9d\u8d56\u6027\u3001\u591a\u4f4d\u9519\u8bef\u7684\u6bd4\u7387\u4ee5\u53ca\u591a\u4f4d\u9519\u8bef\u6a21\u5f0f\u7684\u7279\u5f81\u65b9\u9762\u5b58\u5728\u660e\u663e\u5dee\u5f02\u3002\u8be5\u7ed3\u679c\u5728\u4e16\u754c\u4e0a\u9996\u6b21\u83b7\u5f97\u3002\n\u672a\u6765 \u8fd9\u4e9b\u7ed3\u679c\u5c06\u5bfc\u81f4\u6280\u672f\u7684\u53d1\u5c55\uff0c\u4ee5\u6709\u6548\u89e3\u51b3\u5305\u62ec \u03bc \u5b50\u5728\u5185\u7684\u73af\u5883\u8f90\u5c04\u5f15\u8d77\u7684\u95ee\u9898\u3002\u672c\u7814\u7a76\u53d1\u73b0\u7684\u4ecb\u5b50\u548c\u4e2d\u5b50\u4e4b\u95f4\u6548\u5e94\u7684\u5dee\u5f02\u5c06\u6709\u52a9\u4e8e\u5efa\u7acb\u9632\u6b62\u8f6f\u9519\u8bef\u7684\u6700\u4f73\u8bbe\u8ba1\u65b9\u6cd5\u3002\u672c\u7814\u7a76\u7684\u7ed3\u679c\u4e5f\u6709\u671b\u901a\u8fc7\u6570\u503c\u6a21\u62df\u4fc3\u8fdb\u8bc4\u4f30\u65b9\u6cd5\u7684\u53d1\u5c55\u3002\u672a\u6765\uff0c\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u9760\u6027\u5c06\u53d6\u51b3\u4e8e\u5927\u91cf\u7684\u534a\u5bfc\u4f53\u5668\u4ef6\uff0c\u9884\u8ba1\u73af\u5883\u8f90\u5c04\u5f15\u8d77\u7684\u8f6f\u9519\u8bef\u7684\u8bc4\u4f30\u548c\u5bf9\u7b56\u5c06\u53d8\u5f97\u66f4\u52a0\u91cd\u8981\u3002\u6b63\u5982\u672c\u7814\u7a76\u4e2d\u6240\u505a\u7684\u90a3\u6837\uff0c\u4f7f\u7528\u91cf\u5b50\u675f\u8fdb\u884c\u8f6f\u9519\u8bef\u8bc4\u4f30\u7684\u5f00\u53d1\u6709\u671b\u5bfc\u81f4\u521b\u5efa\u66f4\u5b89\u5168\u3001\u66f4\u53ef\u9760\u548c\u66f4\u53ef\u9760\u7684\u534a\u5bfc\u4f53\u8bbe\u5907\u3002\u6587\u7ae0\u4fe1\u606f\u4e3b\u9898\uff1a20 \u7eb3\u7c73 SRAM \u4e2d\u7684\u4ecb\u5b50\u8bf1\u5bfc\u5355\u4e8b\u4ef6\u7ffb\u8f6c\uff1a\u4e0e\u4e2d\u5b50\u548c Alpha \u7c92\u5b50\u7684\u6bd4\u8f83\u8868\u5f81\u4f5c\u8005\uff1a Takashi Kato 1\u3001Motonobu Tampo 2\u3001Soshi Takeshita 2\u3001Hiroki Tanaka 3\u3001Hideya Matsuyama 1\u3001Masanori Hashimoto 4\u3001 Yasuhiro Miyake 2 1 Socionext Inc. \u53ef\u9760\u6027\u5de5\u7a0b\u90e8 2 Muon \u79d1\u5b66\u5b9e\u9a8c\u5ba4\uff0c\u6750\u6599\u7ed3\u6784\u79d1\u5b66\u7814\u7a76\u6240\uff0c\u9ad8\u80fd\u52a0\u901f\u5668\u7814\u7a76\u673a\u6784/ J-PARC 3 \u4eac\u90fd\u5927\u5b66\u7efc\u5408\u8f90\u5c04\u4e0e\u6838\u79d1\u5b66\u7814\u7a76\u6240 4 \u5927\u962a\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u4e0e\u6280\u672f\u7814\u7a76\u751f\u9662 \u6240\u6709\u6b64\u5904\u63d0\u53ca\u7684\u516c\u53f8\u6216\u4ea7\u54c1\u540d\u79f0\u662f\u5176\u5404\u81ea\u6240\u6709\u8005\u7684\u5546\u6807\u6216\u6ce8\u518c\u5546\u6807\u3002\u672c\u65b0\u95fb\u7a3f\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\u5728\u53d1\u5e03\u65f6\u51c6\u786e\u65e0\u8bef\uff0c\u5982\u6709\u66f4\u6539\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002", "note_en": "Yokohama, Japan, July 16, 2021 --Socionext Inc. has collaborated with researchers from Institute of Materials Structure Science at High Energy Accelerator Research Organization, Institute for Integrated Radiation and Nuclear Science at Kyoto University and Graduate School of Information Science and Technology at Osaka University, and has successfully demonstrated, for the first time, that the soft errors of semiconductor devices induced by muons and neutrons have different characteristics. The research group conducted experiments to irradiate semiconductor devices with negative and positive muon beams at Muon Science Facility (MUSE) of Materials and Life Science Facility (MLF), Japan Proton Accelerator Research Complex (J-PARC), thermal neutron beams at Kyoto University Research Reactor (KUR), and high-energy neutron beams at Research Center for Nuclear Physics (RCNP) of Osaka University, respectively. By using multiple types of quantum beams, the research group has achieved a comprehensive measurement of the effects of cosmic-ray muons and neutrons in environmental radiation. The encouraging results are expected to drive the development of effective evaluation method and countermeasures for soft errors caused by environmental radiation. The results are also expected to lead to the creation of highly reliable semiconductor devices that will support the future infrastructure.\n The results of the research work have been published online in IEEE Transactions on Nuclear Science on May 21, 2021.\n Part of this research work was supported by the &#34;Program on Open Innovation Platform with Enterprises, Research Institutes and Academia (OPERA)&#34; of the Japan Science and Technology Agency (JST).\n Background As semiconductor devices become more highly integrated and their operation voltage becomes lower, they are more prone to soft errors, which occur when electronic information is unexpectedly altered by radiation. There are concerns that soft errors by environmental radiation will cause more serious problems.\n Previously, cosmic-ray neutrons in environmental radiation were considered as the main source of the problems to cause soft errors. On the other hand, for advanced semiconductor devices, which are highly integrated and use lower voltage, soft errors caused by muons, which are also derived from cosmic rays, have become a concern. Muons account for about three-quarters of all particles in cosmic rays that fall to the Earth, and it has been pointed out that they may cause a bigger problem than neutrons. However, there have been very few reports of soft errors caused by muons, and the difference between soft errors caused by neutrons and by muons has not been well understood.\n Results In this study, to understand the difference in soft errors caused by cosmic-ray muons and neutrons, the research group performed comparative evaluations by irradiating semiconductor devices with muons and neutrons. An SRAM circuit fabricated with 20-nm CMOS process technology has been used in this experiment. The SRAM was irradiated with each quantum beam, and the rate and the trend of soft error occurrence were analyzed by each of the particles.\n It was found that there are clear differences between muons and neutrons in terms of supply voltage dependency of the error rate, the ratio of multiple-bit errors, as well as the characteristics of the multiple-bit error patterns. The result has been obtained for the first time in the world.\n  Future The results will lead to a development of technologies to effectively solve the problems caused by environmental radiation which includes muons. The difference of effects between muons and neutrons, which have been discovered in this study, will help establish an optimal design method to prevent soft errors. The results of this study are also expected to contribute to the evolution of evaluation method by numerical simulations.\n In the future, the reliability of the infrastructure will depend on a vast number of semiconductor devices, and it is expected that evaluation and countermeasures against soft errors caused by environmental radiation will become even more important. Development of soft error evaluation using quantum beams, as was done in this study, is expected to lead to the creation of safer, securer, and more reliable semiconductor devices.\n Article Information Subject:\u00a0 Muon-Induced Single-Event Upsets in 20-nm SRAMs: Comparative Characterization with Neutrons and Alpha Particles Authors: Takashi Kato 1, Motonobu Tampo 2, Soshi Takeshita 2, Hiroki Tanaka 3, Hideya Matsuyama 1, Masanori Hashimoto 4, Yasuhiro Miyake 2  1Reliability Engineering Department, Socionext Inc.  2Muon Science Laboratory, Institute of Materials Structure Science, High Energy Accelerator Research Organization/ J-PARC  3Institute for Integrated Radiation and Nuclear Science, Kyoto University  4Graduate School of Information Science and Technology, Osaka University\n          All company or product names mentioned herein are trademarks or registered trademarks of their respective owners. Information provided in this press release is accurate at time of publication and is subject to change without advance notice.", "posttime": "2021-07-26 10:41:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u5b50,semiconductor,\u7814\u7a76", "title": "\u5b87\u5b99\u7ebf\u4ecb\u5b50\u548c\u4e2d\u5b50\u5f15\u8d77\u7684\u534a\u5bfc\u4f53\u8f6f\u8bef\u5dee\u5dee\u5f02", "title_en": "Differences in Semiconductor Soft Errors Caused by Cosmic-Ray Muons and Neutrons", "transed": 1, "url": "http://www.socionextus.com/pressreleases/socionext-and-partners-clarify-differences-between-semiconductor-soft-errors-caused-by-cosmic-ray-muons-and-neutrons/", "via": "", "real_tags": ["\u4ecb\u5b50", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "51a81b07663f1889989df2f903325846.jpeg", "infoid": 1069756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5355\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u6765\u81ea Insider \u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u7684\u4f18\u60e0\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\u53c2\u8bae\u5458\u4f0a\u4e3d\u838e\u767d\u00b7\u6c83\u4f26 (Elizabeth Warren) \u5468\u65e5\u5728\u63a8\u7279\u4e0a\u8c08\u5230\u4e86\u6770\u592b\u00b7\u8d1d\u4f50\u65af (Jeff Bezos) \u6700\u8fd1\u7684\u592a\u7a7a\u98de\u884c\uff0c\u79f0\u5982\u679c\u4ed6\u6709\u80fd\u529b\u53bb\u592a\u7a7a\uff0c\u4ed6\u5c31\u53ef\u4ee5\u652f\u4ed8\u66f4\u591a\u7684\u7a0e\u3002\u6c83\u4f26\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u5730\u7403\u4e0a\u6700\u5bcc\u6709\u7684\u4eba\u53ef\u4ee5\u5c06\u81ea\u5df1\u9001\u5165\u592a\u7a7a\uff0c\u800c\u8d85\u8fc7\u4e00\u534a\u7684\u56fd\u5bb6\u9760\u85aa\u6c34\u8fc7\u65e5\u5b50\uff0c\u8fd1 4300 \u4e07\u4eba\u80cc\u8d1f\u7740\u5b66\u751f\u503a\u52a1\uff0c\u80b2\u513f\u8d39\u7528\u8feb\u4f7f\u6570\u767e\u4e07\u4eba\u5931\u4e1a\u3002\u201d \u201c\u4ed6\u6709\u80fd\u529b\u6295\u7403\uff0c\u6240\u4ee5\u5176\u4ed6\u4eba\u90fd\u6709\u673a\u4f1a\u3002\u201d\u636e ProPublica 6 \u6708\u62a5\u9053\uff0c\u4e9a\u9a6c\u900a\u521b\u59cb\u4eba\u517c\u524d\u9996\u5e2d\u6267\u884c\u5b98\u6770\u592b\u00b7\u8d1d\u7d22\u65af (Jeff Bezos) \u5728 2006 \u5e74\u81f3 2018 \u5e74\u95f4\u81f3\u5c11\u4e24\u5e74\u5185\u7f34\u7eb3\u4e86 0 \u7f8e\u5143\u7684\u8054\u90a6\u6240\u5f97\u7a0e\u3002\u91cd\u78c5\u62a5\u9053\u8fd8\u900f\u9732\uff0c\u7279\u65af\u62c9\u9996\u5e2d\u6267\u884c\u5b98\u57c3\u9686\u9a6c\u65af\u514b\u5728 2018 \u5e74\u4e5f\u505a\u4e86\u540c\u6837\u7684\u4e8b\u60c5\u3002 Insider \u7684 Lynnley Browning \u5728 2019 \u5e74\u62a5\u9053\u79f0\uff0c\u4e9a\u9a6c\u900a\u5728 2017 \u5e74\u548c 2018 \u5e74\u4e5f\u7f34\u7eb3\u4e86 0 \u7f8e\u5143\u7684\u6240\u5f97\u7a0e\u3002\u8d1d\u7d22\u65af\u76ee\u524d\u88ab\u798f\u5e03\u65af\u5217\u4e3a\u5168\u7403\u9996\u5bcc\uff0c\u5176\u4e2d\u51c0\u8d44\u4ea7\u4e3a 2092 \u4ebf\u7f8e\u5143\u3002\u8fd9\u4f4d\u4ebf\u4e07\u5bcc\u7fc1\u7684\u592a\u7a7a\u63a2\u7d22\u516c\u53f8 Blue Origin \u5468\u4e8c\u6210\u529f\u5b8c\u6210\u4e86\u9996\u6b21\u8f7d\u4eba\u592a\u7a7a\u98de\u884c\uff0c\u5c06\u8d1d\u7d22\u65af\u548c\u5176\u4ed6\u4e09\u4eba\u9001\u5165\u592a\u7a7a\uff0c\u5e76\u5728\u5931\u91cd\u72b6\u6001\u4e0b\u8fdb\u884c\u4e86\u5927\u7ea6\u4e09\u5206\u949f\u7684\u98de\u884c\u3002\n\u6c83\u4f26\u4e0a\u5468\u8fd8\u5728\u98de\u884c\u9014\u4e2d\u5bf9\u8d1d\u7d22\u65af\u8fdb\u884c\u4e86\u731b\u70c8\u62a8\u51fb\uff0c\u4ed6\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u6770\u592b\u8d1d\u7d22\u65af\u5fd8\u8bb0\u611f\u8c22\u6240\u6709\u8f9b\u52e4\u5de5\u4f5c\u7684\u7f8e\u56fd\u4eba\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u7f34\u7eb3\u4e86\u7a0e\u6b3e\u4ee5\u7ef4\u6301\u8fd9\u4e2a\u56fd\u5bb6\u7684\u8fd0\u8f6c\uff0c\u800c\u4ed6\u548c\u4e9a\u9a6c\u900a\u5374\u6ca1\u6709\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\u3002\u201d\u6ce8\u518c\u63a5\u6536\u6765\u81ea Insider \u7684\u901a\u77e5\uff01\u968f\u65f6\u4e86\u89e3\u60a8\u60f3\u77e5\u9053\u7684\u5185\u5bb9\u3002\u5f62\u6210\u201cX\u201d\u7684\u4e24\u6761\u200b\u200b\u4ea4\u53c9\u7ebf\u3002\u5b83\u6307\u793a\u4e00\u79cd\u5173\u95ed\u4ea4\u4e92\u6216\u5173\u95ed\u901a\u77e5\u7684\u65b9\u5f0f\u3002", "note_en": "By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.\n    Sen. Elizabeth Warren tweeted Sunday about Jeff Bezos&#39;s recent space flight, saying that if he can afford to go to space he can afford to pay more in taxes.\n &#34;The richest guy on Earth can launch himself into space while over half the country lives paycheck to paycheck, nearly 43 million are saddled with student debt, and child care costs force millions out of work,&#34; Warren tweeted. &#34;He can afford to pitch in so everyone else gets a chance.&#34;\n Jeff Bezos, the founder and former CEO of Amazon, paid $0 in federal income taxes for at least two years between 2006 and 2018,  ProPublica reported in June. The  bombshell report also revealed Tesla CEO Elon Musk did the same thing in 2018.\n      Insider&#39;s Lynnley Browning  reported in 2019 that Amazon also paid $0 in income taxes in 2017 and 2018.\n   Bezos is currently listed by  Forbes as the richest person in the world, with a net worth of $209.2 billion.\n The billionaire&#39;s space exploration company Blue Origin  successfully completed its first passenger space flight on Tuesday, launching Bezos and three others into space for about three minutes of weightlessness.\n Warren had also  taken a jab at Bezos over the flight last week, writing on Twitter: &#34;Jeff Bezos forgot to thank all the hardworking Americans who actually paid taxes to keep this country running while he and Amazon paid nothing.&#34;\n    Sign up for notifications from Insider! Stay up to date with what you want to know.\n            Two crossed lines that form an &#39;X&#39;. It indicates a way to close an interaction, or dismiss a notification.", "posttime": "2021-07-26 10:03:18", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u592a\u7a7a,space", "title": "\u4f0a\u4e3d\u838e\u767d\u6c83\u4f26\uff1a\u5982\u679c\u6770\u592b\u8d1d\u7d22\u65af\u53ef\u4ee5\u4e0a\u592a\u7a7a\uff0c\u4ed6\u53ef\u4ee5\u7f34\u7eb3\u66f4\u591a\u7684\u7a0e\u3002 \u201c\u5730\u7403\u4e0a\u6700\u5bcc\u6709\u7684\u4eba\u53ef\u4ee5\u5c06\u81ea\u5df1\u9001\u5165\u592a\u7a7a\uff0c\u800c\u8d85\u8fc7\u4e00\u534a\u7684\u56fd\u5bb6\u5219\u9760\u85aa\u6c34\u8fc7\u65e5\u5b50\u201d", "title_en": "Elizabeth Warren: If Jeff Bezos Can Go to Space, He Can Pay More Taxes. 'The richest guy on Earth can launch himself into space while over half the country lives paycheck to paycheck'", "transed": 1, "url": "https://www.businessinsider.com/elizabeth-warren-jeff-bezos-can-go-to-space-while-paycheck-2021-7", "via": "", "real_tags": ["\u592a\u7a7a", "space"]}]
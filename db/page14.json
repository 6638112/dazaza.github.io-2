[{"category": "", "categoryclass": "", "imagename": "0a5765b8d3efc24d97e71ac62fa3a142.jpeg", "infoid": 1069489, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728 npm \u5f00\u6e90\u4ee3\u7801\u5b58\u50a8\u5e93\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u4f7f\u7528\u5408\u6cd5\u5bc6\u7801\u6062\u590d\u5de5\u5177\u7684\u51ed\u636e\u7a83\u53d6\u4ee3\u7801\u70b8\u5f39\uff0c\u5b83\u6f5c\u4f0f\u5728 npm \u5f00\u6e90\u4ee3\u7801\u5b58\u50a8\u5e93\u4e2d\uff0c\u7b49\u5f85\u4ece\u8be5\u6e90\u63d0\u53d6\u4ee3\u7801\u7684\u5e9e\u5927\u5e94\u7528\u7a0b\u5e8f\u7fa4\u4e2d\u690d\u5165\u3002\u7814\u7a76\u4eba\u5458\u4ece Windows \u7cfb\u7edf\u4e0a\u7684 Chrome \u4e2d\u6355\u83b7\u4e86\u6076\u610f\u8f6f\u4ef6\u7a83\u53d6\u51ed\u636e\u3002\u5bc6\u7801\u7a83\u53d6\u5668\u662f\u591a\u529f\u80fd\u7684\uff1a\u5b83\u8fd8\u53ef\u4ee5\u4fa6\u542c\u6765\u81ea\u653b\u51fb\u8005\u7684\u547d\u4ee4\u548c\u63a7\u5236 (C2) \u670d\u52a1\u5668\u7684\u4f20\u5165\u547d\u4ee4\uff0c\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\u3001\u4ece\u53d7\u5bb3\u8005\u7684\u5c4f\u5e55\u548c\u6444\u50cf\u5934\u8fdb\u884c\u8bb0\u5f55\u4ee5\u53ca\u6267\u884c shell \u547d\u4ee4\u3002 npm\uff08\u6700\u521d\u662f Node Package Manager \u6216 NPM \u7684\u7f29\u5199\uff09\u662f JavaScript \u8fd0\u884c\u65f6\u73af\u5883 Node.js \u7684\u9ed8\u8ba4\u5305\u7ba1\u7406\u5668\uff0cNode.js \u5efa\u7acb\u5728 Chrome \u7684 V8 JavaScript \u5f15\u64ce\u4e4b\u4e0a\u3002\u5b83\u7c7b\u4f3c\u4e8e GitHub\u3001RubyGems \u548c PyPI \u7b49\u5176\u4ed6\u4ee3\u7801\u5b58\u50a8\u5e93\uff0c\u56e0\u4e3a\u5b83\u662f\uff08\u975e\u5e38\u957f\u7684\uff09\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u7684\u4e00\u90e8\u5206\u3002\u7528\u201c\u5e9e\u5927\u201d\u6765\u63cf\u8ff0\u751f\u6001\u7cfb\u7edf\u662f\u4e00\u79cd\u8f7b\u63cf\u6de1\u5199\u7684\u8bf4\u6cd5\uff1anpm \u6258\u7ba1\u7740\u8d85\u8fc7 150 \u4e07\u4e2a\u72ec\u7279\u7684\u5305\uff0c\u6bcf\u5929\u4e3a\u5168\u7403\u7ea6 1100 \u4e07\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u8d85\u8fc7 10 \u4ebf\u6b21 JavaScript \u5305\u8bf7\u6c42\u3002\u9664\u4e86\u6587\u672c JavaScript \u6587\u4ef6\uff0cnpm \u8fd8\u5305\u542b\u5404\u79cd\u7c7b\u578b\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4f8b\u5982 PE\u3001ELF \u548c Mach-O\u3002 ReversingLabs \u7814\u7a76\u4eba\u5458\u5728\u5468\u4e09\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\u53d1\u8868\u4e86\u4ed6\u4eec\u7684\u53d1\u73b0\uff0c\u4ed6\u4eec\u8868\u793a\uff0c\u5728\u5bf9\u4ee3\u7801\u5b58\u50a8\u5e93\u8fdb\u884c\u5206\u6790\u671f\u95f4\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u5d4c\u5165\u5f0f Windows \u53ef\u6267\u884c\u6587\u4ef6\uff1a\u51ed\u636e\u7a83\u53d6\u5a01\u80c1\u3002\u6807\u8bb0\u4e3a\u201cWin32.Infostealer.Heuristics\u201d\uff0c\u5b83\u51fa\u73b0\u5728\u4e24\u4e2a\u5305\u4e2d\uff1anodejs_net_server \u548c temptesttempfile\u3002 nodejs_net_server\uff1a\u81ea 2019 \u5e74 2 \u6708\u9996\u6b21\u53d1\u5e03\u4ee5\u6765\uff0c\u5df2\u53d1\u5e03 12 \u4e2a\u7248\u672c\uff0c\u603b\u5171\u4e0b\u8f7d\u91cf\u8d85\u8fc7 1,300 \u6b21\u7684\u5305\u3002\u5b83\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u662f\u5728\u516d\u4e2a\u6708\u524d\uff0c\u7531\u67d0\u4eba\u4f7f\u7528\u201cchrunlee\u201d\u7684\u540d\u5b57\u7f16\u5199\u3002\u6839\u636e ReversingLabs \u7684\u8bf4\u6cd5\uff0cchrunlee \u4f3c\u4e4e\u4e5f\u662f GitHub \u4e0a\u7684\u6d3b\u8dc3\u5f00\u53d1\u4eba\u5458\uff0c\u8be5\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u5f00\u53d1 61 \u4e2a\u5b58\u50a8\u5e93\u3002\u901a\u8fc7\u9759\u6001\u5206\u6790\uff0c\u7814\u7a76\u4eba\u5458\u5728 nodejs_net_server \u5305\u7684\u591a\u4e2a\u7248\u672c\u4e2d\u53d1\u73b0\u4e86 Win32.Infostealer.Heuristics \u6587\u4ef6\u3002\u5b83\u7684\u5143\u6570\u636e\u663e\u793a\u8be5\u6587\u4ef6\u7684\u539f\u59cb\u540d\u79f0\u662f\u201ca.exe\u201d\u5e76\u4e14\u5b83\u4f4d\u4e8e\u201clib\u201d\u6587\u4ef6\u5939\u5185\u3002\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u5e26\u6709\u7c7b\u4f3c\u6269\u5c55\u540d\u7684\u5355\u5b57\u6bcd\u6587\u4ef6\u540d\u4f1a\u5411\u5a01\u80c1\u730e\u4eba\u53d1\u51fa\u5371\u9669\u4fe1\u53f7\u3002\u679c\u7136\uff0ca.exe \u539f\u6765\u662f\u4e00\u4e2a\u540d\u4e3a ChromePass \u7684\u5b9e\u7528\u7a0b\u5e8f\uff1a\u4e00\u79cd\u7528\u4e8e\u6062\u590d\u5b58\u50a8\u5728 Chrome \u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u7684\u5bc6\u7801\u7684\u5408\u6cd5\u5de5\u5177\u3002\nchrunlee \u901a\u8fc7 12 \u4e2a\u7248\u672c\u589e\u5f3a\u4e86 nodejs_net_server \u5305\uff0c\u76f4\u5230\u53bb\u5e74 12 \u6708\u6700\u7ec8\u4f7f\u7528\u811a\u672c\u5bf9\u5176\u8fdb\u884c\u5347\u7ea7\u4ee5\u4e0b\u8f7d\u5bc6\u7801\u7a83\u53d6\u7a0b\u5e8f\uff0c\u5f00\u53d1\u4eba\u5458\u5c06\u5176\u6258\u7ba1\u5728\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u3002\u7814\u7a76\u4eba\u5458\u63a8\u6d4b\uff0c\u5b83\u968f\u540e\u88ab\u8c03\u6574\u4e3a\u8fd0\u884c TeamViewer.exe\uff0c\u201c\u53ef\u80fd\u662f\u56e0\u4e3a\u4f5c\u8005\u4e0d\u60f3\u5728\u6076\u610f\u8f6f\u4ef6\u4e0e\u5176\u7f51\u7ad9\u4e4b\u95f4\u5efa\u7acb\u5982\u6b64\u660e\u663e\u7684\u8054\u7cfb\u201d\u3002\u5206\u6790\u5e08\u79f0\uff0cchrunlee \u53d1\u5e03\u4e86\u7b2c\u4e00\u4e2a\u7248\u672c\u201c\u53ea\u662f\u4e3a\u4e86\u6d4b\u8bd5 NPM \u5305\u7684\u53d1\u5e03\u8fc7\u7a0b\u201d\u3002\u4e09\u4e2a\u6708\u540e\uff0c\u6076\u610f\u8f6f\u4ef6\u5236\u9020\u5546\u5b9e\u73b0\u4e86\u8fdc\u7a0b shell \u529f\u80fd\uff0c\u5e76\u5728\u591a\u4e2a\u540e\u7eed\u7248\u672c\u4e2d\u8fdb\u884c\u4e86\u6539\u8fdb\u3002\u7136\u540e\uff0c\u5728 2020 \u5e74 4 \u6708\uff0cchrunlee \u5bf9\u7248\u672c 1.0.7 \u548c 1.0.8 \u4e2d\u7684 shell \u529f\u80fd\u8fdb\u884c\u4e86\u5c0f\u7684\u4fee\u6539\u3002\u6700\u540e\uff0c\u5728 2020 \u5e74 12 \u6708\uff0c\u7248\u672c 1.1.0 \u66f4\u65b0\u4e86\u4e00\u4e2a\u811a\u672c\u6765\u4e0b\u8f7d\u5bc6\u7801\u7a83\u53d6\u5de5\u5177\u3002 temptesttempfile\uff1a\u603b\u4e0b\u8f7d\u91cf\u8d85\u8fc7 800 \u6b21\u3002\u5206\u6790\u5e08\u89c2\u5bdf\u5230\uff0c\u8003\u8651\u5230\u201c\u4e3b\u9875\u548c GitHub \u5b58\u50a8\u5e93\u94fe\u63a5\u5230\u6b64\u5305\u4f1a\u5bfc\u81f4\u4e0d\u5b58\u5728\u7684\u7f51\u9875\u201d\uff0c\u8fd9\u6709\u70b9\u4ee4\u4eba\u5934\u75bc\u3002 chrunlee \u7684 npm \u5305\u4e4b\u4e00\u2014\u2014tempdownloadtempfile\u2014\u2014\u4e5f\u6709\u4e0d\u5b58\u5728\u7684\u94fe\u63a5\u3002\u5b83\u7684\u4e00\u4e2a\u6587\u4ef6\u2014\u2014file/test.js\u2014\u2014\u5b9e\u73b0\u4e86\u4e0e nodejs_net_server \u5305\u7248\u672c\u4e2d\u53d1\u73b0\u7684\u76f8\u540c\u7684\u8fdc\u7a0b shell \u529f\u80fd\uff0c\u4f46\u8fd9\u4e2a\u5305\u4e0d\u6267\u884c\u6267\u884c\u52ab\u6301\uff0c\u5e76\u4e14\u5b83\u7f3a\u4e4f\u6301\u4e45\u6027\u673a\u5236\uff0c\u4f7f\u5176\u76ee\u7684\u662f\u201c\u4e00\u4e2a\u6709\u70b9\u4e0d\u6e05\u695a\uff0c\u201dReversingLabs \u8bf4\u3002 ReversingLabs \u7684\u5206\u6790\u5e08\u5728\u6311\u9009 nodejs_net_server \u4ee3\u7801\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f00\u53d1\u201c\u6709\u8da3\u7684\u4e8b\u5b9e\u201d\uff1a\u5b83\u7684\u4f5c\u8005 chrunlee \u4e0d\u4ec5\u7f16\u5199\u4e86\u4e00\u4e2a\u51ed\u636e\u7a83\u53d6\u7a0b\u5e8f\uff0c\u800c\u4e14\u8fd8\u610f\u5916\u5730\u53d1\u5e03\u4e86\u4ed6\u4eec\u81ea\u5df1\u5b58\u50a8\u7684\u767b\u5f55\u51ed\u636e\uff0c\u4e0e\u5bc6\u7801\u6293\u53d6\u5668\u76f4\u63a5\u6253\u5f00\u4f5c\u8005\u81ea\u5df1\u8d77\u6765\u653b\u51fb\u3002 \u201c\u770b\u6765 npm \u5b58\u50a8\u5e93\u4e2d\u5df2\u53d1\u5e03\u7684 1.1.1 \u548c 1.1.2 \u7248\u672c\u5305\u542b\u5728\u4f5c\u8005\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u4e0a\u6d4b\u8bd5 ChromePass \u5de5\u5177\u7684\u7ed3\u679c\uff0c\u201d\u7814\u7a76\u4eba\u5458\u89c2\u5bdf\u5230\u3002 \u201c\u8fd9\u4e9b\u767b\u5f55\u51ed\u636e\u5b58\u50a8\u5728\u540d\u4e3a\u201ca.exe\u201d\u7684\u5bc6\u7801\u6062\u590d\u5de5\u5177\u6240\u5728\u7684\u540c\u4e00\u6587\u4ef6\u5939\u4e2d\u7684\u201ca.txt\u201d\u6587\u4ef6\u4e2d\u3002\u201d\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\u8be5\u6587\u672c\u6587\u4ef6\u6709 282 \u4e2a\u4ece chrunlee \u6d4f\u89c8\u5668\u6355\u83b7\u7684\u767b\u5f55\u51ed\u636e\uff0c\u5176\u4e2d\u4e00\u4e9b\u53ef\u80fd\u4ecd\u7136\u6709\u6548\uff08ReversingLabs \u6ca1\u6709\u9a8c\u8bc1\u5b83\u4eec\uff09\u3002\u800c\u4e14\uff0c\u5176\u4e2d\u4e00\u4e9b\u51ed\u636e\u5177\u6709\u6700\u8e69\u811a\u7684\u5bc6\u7801\uff08\u4f8b\u5982\u201c111\u201d\uff09\u548c\u7528\u6237\u540d\uff08\u201cadmin\u201d\uff0c\u4efb\u4f55\u4eba\uff1f\uff09\u3002\n\u201c\u4ec5\u67e5\u770b\u4e00\u4e9b\u6062\u590d\u7684\u51ed\u636e\u2026\u2026\u5c31\u8868\u660e\u4f5c\u8005\u5e76\u4e0d\u603b\u662f\u5173\u5fc3\u6700\u4f73\u5bc6\u7801\u7b56\u7565\u5b9e\u8df5\uff0c\u201d\u5206\u6790\u5e08\u4f18\u96c5\u5730\u8f7b\u63cf\u6de1\u5199\u3002 ReversingLabs \u4e8e 7 \u6708 2 \u65e5\u8054\u7cfb\u4e86 npm \u5b89\u5168\u56e2\u961f\uff0c\u8ba9\u4ed6\u4eec\u63d0\u524d\u4e86\u89e3 nodejs_net_server \u548c tempdownloadtempfile \u5305\uff0c\u5e76\u5728\u4e0a\u5468\uff08\u5468\u56db\uff09\u518d\u6b21\u56de\u8fc7\u5934\u6765\uff0c\u56e0\u4e3a\u8be5\u56e2\u961f\u4ecd\u672a\u4ece\u5b58\u50a8\u5e93\u4e2d\u5220\u9664\u8fd9\u4e9b\u5305\u3002\u5f53 Threatpost \u8054\u7cfb\u7ef4\u62a4\u5b58\u50a8\u5e93\u7684 npm Inc. \u65f6\uff0cGitHub \u53d1\u8a00\u4eba\u53d1\u9001\u4e86\u4ee5\u4e0b\u58f0\u660e\uff1a\u201c\u5728\u6211\u4eec\u8c03\u67e5\u540e\uff0c\u8fd9\u4e24\u4e2a\u8f6f\u4ef6\u5305\u90fd\u88ab\u5220\u9664\u4e86\u3002\u201d\u8fd9\u4e0d\u662f npm \u7b2c\u4e00\u6b21\u88ab\u6709\u6bd2\u4ee3\u7801\u6e17\u900f\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u4e09\u4e2a\u6076\u610f\u8f6f\u4ef6\u5305\u88ab\u53d1\u5e03\u5230 npm\uff1b\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4efb\u4f55\u88ab\u4ee3\u7801\u635f\u574f\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u80fd\u7a83\u53d6 Discord \u7528\u6237\u7684\u4ee4\u724c\u548c\u5176\u4ed6\u4fe1\u606f\u3002 2018 \u5e74 7 \u6708\uff0c\u653b\u51fb\u8005\u7834\u574f\u4e86 ESLint \u7ef4\u62a4\u8005\u7684 npm \u51ed\u636e\uff0c\u5e76\u5411 npm \u6ce8\u518c\u8868\u53d1\u5e03\u4e86\u6d41\u884c\u7684\u201ceslint-scope\u201d\u548c\u201ceslint-config-eslint\u201d\u8f6f\u4ef6\u5305\u7684\u6076\u610f\u7248\u672c\u3002\u6076\u610f\u4ee3\u7801\u590d\u5236\u4e86\u8fd0\u884c eslint-scope \u7684\u673a\u5668\u7684 npm \u51ed\u636e\u5e76\u5c06\u5176\u4e0a\u4f20\u7ed9\u653b\u51fb\u8005\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u4e5f\u5c31\u662f 2018 \u5e74 11 \u6708\uff0c\u53c8\u53d1\u73b0\u4e86\u53e6\u4e00\u4e2a\u6076\u610f\u8f6f\u4ef6\u5305\uff1a\u5b83\u4f9d\u8d56\u4e8e\u6d41\u884c\u8f6f\u4ef6\u5305\u201cevent-stream\u201d\u7684 3.3.6 \u7248\u3002\u8fd9\u4e2a\u540d\u4e3a\u201cflatmap-stream\u201d\u7684\u6076\u610f\u5305\u5305\u542b\u4e00\u4e2a\u52a0\u5bc6\u7684\u6709\u6548\u8f7d\u8377\uff0c\u4e13\u95e8\u7528\u4e8e\u4ece Copay \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7a83\u53d6\u6bd4\u7279\u5e01\u3002\u5c3d\u7ba1\u8be5\u6076\u610f\u8f6f\u4ef6\u5728 npm \u6ce8\u518c\u8868\u4e2d\u5b58\u5728\u8d85\u8fc7\u4e09\u5e74\u7684\u4e8b\u5b9e\u4ee4\u4eba\u62c5\u5fe7\uff0c\u4f46\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u90a3\u4e9b\u5e74\u8ba9\u9632\u75c5\u6bd2\u5f15\u64ce\u6709\u673a\u4f1a\u8fce\u5934\u8d76\u4e0a\uff1aVirusTotal \u663e\u793a 46 \u5bb6\u5b89\u5168\u4f9b\u5e94\u5546\u5df2\u5c06 a. exe \u6587\u4ef6\u4e3a\u6076\u610f\u6587\u4ef6\u3002 Sonatype \u9ad8\u7ea7\u5b89\u5168\u7814\u7a76\u5458 Ax Sharma \u8868\u793a\uff0c\u4ed6\u5468\u4e09\u544a\u8bc9 Threatpost\uff0cChrome \u5bc6\u7801\u7a83\u53d6\u6076\u610f\u8f6f\u4ef6\u201c\u8fdb\u4e00\u6b65\u8bc1\u5b9e\u4e86\u5bf9\u5f00\u6e90\u751f\u6001\u7cfb\u7edf\u7684\u653b\u51fb\u662f\u5982\u4f55\u5b58\u5728\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u591a\u5e74\u672a\u88ab\u53d1\u73b0\u3002\u201d\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u7f51\u7edc\u653b\u51fb\u8005\u7784\u51c6\u7ebf\u4e2d\u7684 npm\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u7814\u7a76\u4eba\u5458\u5076\u7136\u53d1\u73b0\u4e86\u4e00\u7ec4\u6e17\u900f\u5230 PyPI \u4e2d\u7684\u52a0\u5bc6\u77ff\u5de5\uff0c\u4e5f\u5c31\u662f Python Package Index (PyPI)\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528 Python \u7f16\u7a0b\u8bed\u8a00\u521b\u5efa\u7684\u8f6f\u4ef6\u4ee3\u7801\u5b58\u50a8\u5e93\u3002\u6839\u636e\u8be5\u62a5\u544a\uff0cnpm \u6e17\u900f\u53ea\u662f\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u8fc7\u5ea6\u4fe1\u4efb\u7b2c\u4e09\u65b9\u4ee3\u7801\u3001\u91cd\u7528\u5e93\u4ee5\u83b7\u5f97\u5feb\u901f\u3001\u7b80\u5355\u7684\u7ed3\u679c\u4ee5\u53ca\u201c\u5f88\u5c11 [\u8fdb\u884c] \u6df1\u5165\u7684\u5b89\u5168\u8bc4\u4f30\uff0c\u7136\u540e\u518d\u5c06\u5b83\u4eec\u7eb3\u5165\u5176\u4e2d\u7684\u6700\u65b0\u4f8b\u5b50\u4ed6\u4eec\u7684\u9879\u76ee\u3002\u201d ReversingLabs \u8868\u793a\uff1a\u201c\u8fd9\u79cd\u9057\u6f0f\u662f\u7531\u4e8e\u7b2c\u4e09\u65b9\u4ee3\u7801\u4e2d\u53d1\u73b0\u7684\u6f5c\u5728\u5b89\u5168\u95ee\u9898\u5177\u6709\u538b\u5012\u6027\u7684\u6027\u8d28\u548c\u6570\u91cf\u5e9e\u5927\u7684\u7ed3\u679c\u3002\u201d \u201c\u56e0\u6b64\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u8f6f\u4ef6\u5305\u4f1a\u88ab\u5feb\u901f\u5b89\u88c5\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u8f6c\u5411\u66ff\u4ee3\u65b9\u6848\u3002\u8fd9\u662f\u4e00\u79cd\u5371\u9669\u7684\u505a\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u5b89\u88c5\u6076\u610f\u8f6f\u4ef6\u3002\u201d Sharma \u8bf4\uff0c\u53d1\u73b0 a.exe \u7684\u7279\u522b\u4e4b\u5904\u5728\u4e8e\u5b83\u4f7f\u7528\u5408\u6cd5\u7684\u5bc6\u7801\u6062\u590d Windows \u5b9e\u7528\u7a0b\u5e8f ChromePass \u4ece\u7528\u6237\u7684 Chrome \u6d4f\u89c8\u5668\u7a83\u53d6\u5bc6\u7801\u3002 \u201c\u5a01\u80c1\u884c\u4e3a\u8005\u901a\u5e38\u4f9d\u9760\u5408\u6cd5\u7684\u7ec4\u4ef6\u548c\u670d\u52a1\u6765\u8fdb\u884c\u4ed6\u4eec\u7684\u9669\u6076\u6d3b\u52a8\uff0c\u4ee5\u9003\u907f\u68c0\u6d4b\uff0c\u201d\u4ed6\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u8bf4\u3002\u5728\u62a5\u544a\u7684\u7ed3\u8bba\u4e2d\uff0cReversingLabs \u6307\u51fa\uff0c\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u653b\u51fb\u6b63\u6210\u4e3a\u6076\u610f\u884c\u4e3a\u8005\u7684\u201c\u5f3a\u5927\u7b56\u7565\u201d\uff0c\u5f00\u53d1\u4eba\u5458\u6210\u4e3a\u5176\u7ec4\u7ec7\u53ca\u5176\u5ba2\u6237\u7fa4\u7684\u5173\u952e\u5207\u5165\u70b9\u3002\u62a5\u544a\u8b66\u544a\u8bf4\uff1a\u201c\u9488\u5bf9\u5f00\u53d1\u4eba\u5458\u7684\u6700\u5e38\u89c1\u7684\u653b\u51fb\u5a92\u4ecb\u4e4b\u4e00\u662f\u5229\u7528\u516c\u5171\u8f6f\u4ef6\u5305\u5b58\u50a8\u5e93\u3002\u201d \u201c\u7531\u4e8e\u8fd9\u4e9b\u5b58\u50a8\u5e93\u62e5\u6709\u5927\u91cf\u6258\u7ba1\u8f6f\u4ef6\u5305\uff0c\u5b83\u4eec\u4e3a\u6076\u610f\u8f6f\u4ef6\u6f5c\u4f0f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u85cf\u8eab\u4e4b\u5904\u3002\u5728\u8fd9\u4e9b\u5b58\u50a8\u5e93\u4e2d\u53cd\u590d\u53d1\u73b0\u6076\u610f\u8f6f\u4ef6\u5305\u5df2\u7ecf\u8bc1\u660e\uff0c\u5bf9\u80fd\u591f\u63d0\u4f9b\u53ef\u9760\u8bc6\u522b\u548c\u4fdd\u62a4\u7684\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u7684\u9700\u6c42\u4e0d\u65ad\u589e\u957f\u5bf9\u6297\u8fd9\u4e9b\u7c7b\u578b\u7684\u653b\u51fb\u3002\u201d 072121 15:09 \u66f4\u65b0\uff1a\u6dfb\u52a0\u4e86\u6765\u81ea Axe Sharma \u7684\u8f93\u5165\u3002 072121 16:18 \u66f4\u65b0\uff1a\u66f4\u65b0\u4e86\u6545\u4e8b\u4ee5\u5305\u542b GitHub \u7684\u58f0\u660e\u3002 072121 17:44 \u66f4\u65b0\uff1a\u66f4\u6b63\u4e86 GitHub \u7684\u521d\u59cb\u58f0\u660e\uff1a\u6b64\u65f6\uff0c\u4e24\u4e2a\u5305\u90fd\u5df2\u88ab\u5220\u9664\u3002\n\u67e5\u770b\u6211\u4eec\u5373\u5c06\u4e3e\u884c\u7684\u514d\u8d39\u76f4\u64ad\u548c\u70b9\u64ad\u7f51\u7edc\u7814\u8ba8\u4f1a\u6d3b\u52a8 -\u200b\u200b \u4e0e\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u548c Threatpost \u793e\u533a\u8fdb\u884c\u72ec\u7279\u3001\u52a8\u6001\u7684\u8ba8\u8bba\u3002", "note_en": "A credentials-stealing code bomb that uses legitimate password-recovery tools in Google\u2019s Chrome web browser was found lurking in the npm open-source code repository, waiting to be planted within the sprawling galaxy of apps that pull code from that source.\n Researchers caught the malware filching credentials from Chrome on Windows systems. The password-stealer is multifunctional: It also listens for incoming commands from the attacker\u2019s command-and-control (C2) server and can upload files, record from a victim\u2019s screen and camera, and execute shell commands.\n  npm (originally short for Node Package Manager, or NPM) is the default package manager for the JavaScript runtime environment Node.js, which is built on Chrome\u2019s V8 JavaScript engine. It\u2019s similar to other code repositories such as GitHub, RubyGems and PyPI in that it\u2019s part of a (very long) software supply chain.\n \u201cVast\u201d would be an understatement to describe the ecosystem: npm hosts more than 1.5 million unique packages, and serves up more than 1 billion requests for JavaScript packages per day, to around 11 million developers worldwide.\n  Besides textual JavaScript files, npm also holds various types of executables, such as PE, ELF and Mach-O. ReversingLabs researchers, who published their findings in a  Wednesday post, said that during an analysis of the code repository, they found an interesting embedded Windows executable file: a credential-stealing threat. Labeled \u201cWin32.Infostealer.Heuristics\u201d, it showed up in two packages: nodejs_net_server and temptesttempfile.\n  nodejs_net_server: A package with 12 published versions and a total of more than 1,300 downloads since it was first published in February 2019. It was last updated six months ago and was authored by somebody using the name \u201cchrunlee\u201d. According to ReversingLabs, chrunlee also seems to be an active developer on GitHub, where the developer is working on 61 repositories.\n   Using static analysis, researchers found the Win32.Infostealer.Heuristics file in several versions of the nodejs_net_server package. Its metadata showed that the file\u2019s original name was \u201ca.exe\u201d and that it was located inside the \u201clib\u201d folder. A single-letter filename with an extension like that raises a red flag to threat hunters, the researchers noted. Sure enough, a.exe turned out to be a utility called ChromePass: a legitimate tool used to recover passwords stored inside of a Chrome web browser.\n chrunlee buffed up the nodejs_net_server package through 12 versions until finally upgrading it last December with a script to download the password-stealer, which the developer hosts on a personal website. It was subsequently tweaked to run TeamViewer.exe instead, \u201cprobably because the author didn\u2019t want to have such an obvious connection between the malware and their website,\u201d researchers theorized.\n chrunlee published the first version \u201cjust to test the publishing process of an NPM package,\u201d the analysts described. Three months later, the malware maker implemented remote shell functionality that was polished over several subsequent versions. Then, in April 2020, chrunlee made minor modifications to the shell functionality in versions 1.0.7 and 1.0.8. Finally, in December 2020, version 1.1.0 was updated with a script to download the password-stealing tool.\n  temptesttempfile: over 800 total downloads. This one\u2019s a bit of a head-scratcher, given that \u201chomepage and GitHub repository links to this package lead to non-existing webpages,\u201d the analysts observed.\n One of chrunlee\u2019s npm packages \u2013 tempdownloadtempfile \u2013 also has non-existing links. One of its files \u2013 file/test.js \u2013 implements the same remote shell functionality as the ones found in versions of the nodejs_net_server package, but this package doesn\u2019t perform execution hijacking, and it lacks a persistence mechanism, making its purpose \u201ca bit unclear,\u201d ReversingLabs said.\n  ReversingLabs analysts dug up a development \u201cfun fact\u201d when picking through nodejs_net_server code: Its author, chrunlee, not only authored a credential-stealer but also accidentally published their own, stored login credentials, cheek-to-jowl with the password grabber, opening the author themself up to attack.\n \u201cIt appears that the published versions 1.1.1 and 1.1.2 from the npm repository include the results of testing the ChromePass tool on the author\u2019s personal computer,\u201d researchers observed. \u201cThese login credentials were stored in the \u2018a.txt\u2019 file located in the same folder as the password-recovery tool, named \u2018a.exe\u2019.\u201d\n Another fun fact: That text file has 282 login credentials captured from chrunlee\u2019s browser, some of which may still be valid (ReversingLabs didn\u2019t verify them). And, some of those credentials feature the lamest of lame passwords (\u201c111,\u201d for example) and user names (\u201cadmin,\u201d anyone?).\n  \u201cJust looking at some of the recovered credentials\u2026shows that the author didn\u2019t always care about best password policy practices,\u201d the analysts gracefully understated.\n  ReversingLabs contacted the npm security team on July 2 to give them a heads-up about the nodejs_net_server and tempdownloadtempfile packages and circled back once again last week, on Thursday, since the team still hadn\u2019t removed the packages from the repository.\n When Threatpost reached out to npm Inc., which maintains the repository, a GitHub spokesperson sent this statement: \u201cBoth packages were removed following our investigation.\u201d\n  This isn\u2019t the first time that npm has been infiltrated by poisonous code. Earlier this year, three malicious software packages  were published to npm; any applications corrupted by the code could steal tokens and other information from Discord users, researchers said.\n In July 2018, an attacker  compromised the npm credentials of an ESLint maintainer and published malicious versions of the popular \u201ceslint-scope\u201d and \u201ceslint-config-eslint\u201d packages to the npm registry. The malicious code copied the npm credentials of the machine running eslint-scope and uploaded them to the attacker.\n A few months later, in November 2018, another malicious package was discovered: it was a dependency to version 3.3.6 of the popular package, \u201cevent-stream.\u201d The malicious package, called \u201cflatmap-stream,\u201d contained an encrypted payload that was tailored to  steal Bitcoins from the Copay application.\n  While the fact that this malware has been lingering on the npm registry for over three years is concerning, the fact is that, thankfully, those years have given antivirus engines a chance to catch up:  VirusTotal shows that 46 security vendors have flagged the a.exe file as malicious.\u00a0 So noted Sonatype senior security researcher Ax Sharma, who told Threatpost on Wednesday that the Chrome password-stealing malware \u201cfurther confirms how attacks on open source ecosystems are here to stay and can go undetected for years.\u201d\n It\u2019s not just npm in cyberattacker crosshairs, mind you. Earlier this month, researchers stumbled on a group of  cryptominers that infiltrated PyPI, aka the Python Package Index (PyPI), a repository of software code created in the Python programming language.\n According to the report, the npm infiltration is just the latest example of how developers are putting too much trust in third-party code, reusing libraries to get fast, easy results and \u201crarely [making] in-depth security assessments before including them into their project.\u201d\n  \u201cThis omission is a result of the overwhelming nature, and the vast quantity, of potential security issues found in third-party code,\u201d according to ReversingLabs. \u201cHence in general, packages are quickly installed to validate whether they solve the problem and, if they don\u2019t, move on to the alternative. This is a dangerous practice, and it can lead to incidental installation of malicious software.\u201d\n Sharma said that what\u2019s of particular note about the discovery of a.exe\u00a0 is the fact that it employs a legitimate password-recovery Windows utility, ChromePass, to steal passwords from a user\u2019s Chrome browser. \u201cThreat actors often rely on legitimate components and services to conduct their sinister activities so as to evade detection,\u201d he said via email.\n In the report\u2019s conclusion, ReversingLabs noted that software supply-chain attacks are becoming \u201ca powerful strategy\u201d for malicious actors, with developers being targeted as a critical entry point to their organization and its client base.\n \u201cOne of the most frequent attack vectors targeting developers is exploitation of public package repositories,\u201d the report warned. \u201cAs these repositories have a large number of hosted packages, they offer a good hiding place for malware to lurk in. Repetitive discovery of malicious packages in these repositories has proven that there is a growing need for security solutions that can provide reliable identification and protection against these types of attacks.\u201d\n 072121 15:09 UPDATE: Added input from Ax Sharma. 072121 16:18 UPDATE: Updated story to include GitHub\u2019s statement. 072121 17:44 UPDATE: Corrected GitHub\u2019s initial statement: At this point, both packages have been removed.\n Check out our free    upcoming live and on-demand webinar events   \u2013 unique, dynamic discussions with cybersecurity experts and the Threatpost community.", "posttime": "2021-07-25 00:55:49", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "chrome,\u5bc6\u7801,npm,malicious", "title": "\u7814\u7a76\u4eba\u5458\u4f7f\u7528 Chrome \u7684\u5bc6\u7801\u6062\u590d\u5de5\u5177\u53d1\u73b0\u4e86\u4e00\u4e2a\u6076\u610f\u7684 NPM \u5305", "title_en": "Researchers Found a Malicious NPM Package Using Chrome's Password-Recovery Tools", "transed": 1, "url": "https://threatpost.com/npm-package-steals-chrome-passwords/168004/", "via": "", "real_tags": ["chrome", "\u5bc6\u7801", "npm", "malicious"]}, {"category": "", "categoryclass": "", "imagename": "52f23f6b7a6dbef01ee29573641d79e7.png", "infoid": 1069488, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7528\u6237\u754c\u9762\u5df2\u7ecf\u8fc7\u91cd\u65b0\u8bbe\u8ba1\u3002\u4f60\u4eec\u6709\u4e9b\u4eba\u4f1a\u559c\u6b22\u5b83\uff0c\u6709\u4e9b\u4eba\u4f1a\u8ba8\u538c\u5b83\u3002\u4e0d\u5ba2\u6c14\uff0c\u62b1\u6b49\u3002\u4ece Android 6 \u5f00\u59cb\uff0c\u8be5\u5e73\u53f0\u5f15\u5165\u4e86\u8bb8\u591a\u66f4\u6539\u4ee5\u9650\u5236\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u540e\u53f0\u6267\u884c\u7684\u64cd\u4f5c\u3002\u65e7\u7248\u672c\u7684 K-9 Mail \u5728\u8fd9\u4e9b\u9650\u5236\u4e0b\u4e0d\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u5728 5.800 \u4e2d\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5fc5\u8981\u7684\u66f4\u6539\uff0c\u56e0\u6b64\u5b9a\u671f\u540e\u53f0\u540c\u6b65\u548c\u63a8\u9001\u73b0\u5728\u53ef\u4ee5\u66f4\u53ef\u9760\u5730\u5de5\u4f5c\u3002\u5df2\u5f03\u7528\u5bf9 WebDAV \u5e10\u6237\u7684\u652f\u6301\u3002\u60a8\u5c06\u65e0\u6cd5\u8bbe\u7f6e\u65b0\u7684 WebDAV \u5e10\u6237\u3002\u4f46\u662f\uff0c\u73b0\u6709\u5e10\u6237\u6682\u65f6\u5c06\u7ee7\u7eed\u6709\u6548\u3002\u65b0\u7248\u672c\u8fd8\u5305\u62ec\u8bb8\u591a\u9519\u8bef\u4fee\u590d\u548c\u5c0f\u6539\u52a8\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6b64\u7a33\u5b9a\u7248\u672c\u4e4b\u524d\u6d4b\u8bd5\u7248 (5.7xx) \u7684\u66f4\u6539\u65e5\u5fd7\u6761\u76ee\u3002\u5982\u679c\u60a8\u5bf9\u65b0\u7248\u672c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u52a0\u5165\u6211\u4eec\u7684\u652f\u6301\u8bba\u575b\u3002\u5b83\u4e5f\u662f\u63d0\u4f9b\u53cd\u9988\u548c\u8ba8\u8bba\u5e94\u7528\u7a0b\u5e8f\u672a\u6765\u7684\u597d\u5730\u65b9\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5f00\u59cb\u8981\u6c42\u6350\u6b3e\u4ee5\u8d44\u52a9 K-9 \u90ae\u4ef6\u7684\u5f00\u53d1\u3002\u8d85\u8fc7 1,000 \u540d\u7528\u6237\u5df2\u7ecf\u4e3a\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u6210\u4e3a\u66f4\u53ef\u6301\u7eed\u7684\u52aa\u529b\u800c\u6350\u6b3e\u2764\ufe0f \u5982\u679c\u60a8\u8d1f\u62c5\u5f97\u8d77\uff0c\u4e5f\u8bf7\u8003\u8651\u6350\u8d60\u3002\u975e\u5e38\u611f\u8c22\u6240\u6709\u4f7f\u6b64\u7248\u672c\u6210\u4e3a\u53ef\u80fd\u7684\u4eba\u2014\u2014\u5f00\u53d1\u4eba\u5458\u3001\u8bbe\u8ba1\u4eba\u5458\u3001\u7ffb\u8bd1\u4eba\u5458\u3001Beta \u6d4b\u8bd5\u4eba\u5458\u3001\u8bba\u575b\u6210\u5458\u3001\u6350\u52a9\u8005\u548c\u5176\u4ed6\u6240\u6709\u4eba\u2014\u2014\u65e0\u8bba\u5927\u5c0f\u90fd\u505a\u51fa\u4e86\u8d21\u732e\u3002\u4f60\u8ba9 K-9 Mail \u6210\u4e3a\u4e00\u4e2a\u793e\u533a\u9879\u76ee \ud83d\udc9e", "note_en": "The user interface has been redesigned. Some of you will love it, some will hate it. You\u2019re welcome and sorry.\n  Starting with Android 6 the platform introduced a lot of changes to limit what apps can do in the background. Old versions of K-9 Mail didn\u2019t work too well with these limitations. In 5.800 we\u2019ve made the necessary changes so periodic background sync and Push now work much more reliably.\n    The support for WebDAV accounts has been deprecated. You won\u2019t be able to set up new WebDAV accounts. However, existing accounts will continue to work for now.\n The new version also includes a lot of bug fixes and minor changes. For details, check out the  changelog entries for the beta versions (5.7xx) leading up to this stable release.\n  If you have questions about the new version, please join our  support forum. It\u2019s also a great place to provide feedback and have discussions about the future of the app.\n  Earlier this year we started to ask for donations to fund development of K-9 Mail. More than 1,000 users already contribute money towards making development of the app a more sustainable effort \u2764\ufe0f If you can afford it, please consider donating, too.\n  A big thank you to all the people who made this release possible \u2013 the developers, designers, translators, beta testers, forum members, donors, and everyone else \u2013 for contributions large and small. You\u2019re what makes K-9 Mail a community project \ud83d\udc9e", "posttime": "2021-07-25 00:55:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u90ae\u4ef6,mail,\u5e94\u7528\u7a0b\u5e8f", "title": "K-9 \u90ae\u4ef6\u56de\u6765\u4e86", "title_en": "K-9 Mail is back", "transed": 1, "url": "https://k9mail.app/2021/07/24/K-9-Mail-is-back", "via": "", "real_tags": ["\u90ae\u4ef6", "mail", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "dbb4e0243f632a0f9e2bb7b64c8389e1.png", "infoid": 1069487, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740 JavaScript \u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u56e2\u961f\u6b63\u5728\u5176\u5806\u6808\u7684\u591a\u4e2a\u5c42\u9762\u4e0a\u5229\u7528\u5b83\u7684\u652f\u6301 - \u524d\u7aef\u3001\u540e\u7aef\u3001\u6df7\u5408\u5e94\u7528\u7a0b\u5e8f\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u7b49\u7b49\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u65e8\u5728\u6df1\u5165\u7814\u7a76 JavaScript \u53ca\u5176\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u7684\u7cfb\u5217\u6587\u7ae0\u4e2d\u7684\u7b2c\u4e00\u7bc7\uff1a\u6211\u4eec\u8ba4\u4e3a\u901a\u8fc7\u4e86\u89e3 JavaScript \u7684\u6784\u5efa\u5757\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u534f\u540c\u5de5\u4f5c\uff0c\u60a8\u5c06\u80fd\u591f\u7f16\u5199\u66f4\u597d\u7684\u4ee3\u7801\u5e76\u5e94\u7528\u3002\u6211\u4eec\u8fd8\u5c06\u5206\u4eab\u6211\u4eec\u5728\u6784\u5efa SessionStack \u65f6\u4f7f\u7528\u7684\u4e00\u4e9b\u7ecf\u9a8c\u6cd5\u5219\uff0cSessionStack \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 JavaScript \u5e94\u7528\u7a0b\u5e8f\uff0c\u5fc5\u987b\u5065\u58ee\u548c\u9ad8\u6027\u80fd\u624d\u80fd\u4fdd\u6301\u7ade\u4e89\u529b\u3002\u5982 GitHub \u7edf\u8ba1\u6570\u636e\u6240\u793a\uff0cJavaScript \u5728 GitHub \u4e2d\u7684\u6d3b\u52a8\u5b58\u50a8\u5e93\u548c\u603b\u63a8\u9001\u65b9\u9762\u540d\u5217\u524d\u8305\u3002\u5b83\u5728\u5176\u4ed6\u7c7b\u522b\u4e2d\u4e5f\u4e0d\u843d\u540e\u592a\u591a\u3002\u5982\u679c\u9879\u76ee\u8d8a\u6765\u8d8a\u4f9d\u8d56 JavaScript\uff0c\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u5229\u7528\u8bed\u8a00\u548c\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u5207\uff0c\u5bf9\u5185\u90e8\u7ed3\u6784\u6709\u8d8a\u6765\u8d8a\u6df1\u5165\u7684\u4e86\u89e3\uff0c\u4ee5\u4fbf\u6784\u5efa\u51fa\u8272\u7684\u8f6f\u4ef6\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6709\u5f88\u591a\u5f00\u53d1\u4eba\u5458\u6bcf\u5929\u90fd\u5728\u4f7f\u7528 JavaScript\uff0c\u4f46\u5e76\u4e0d\u4e86\u89e3\u5e55\u540e\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u542c\u8bf4\u8fc7 V8 \u5f15\u64ce\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5927\u591a\u6570\u4eba\u90fd\u77e5\u9053 JavaScript \u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u6216\u8005\u5b83\u4f7f\u7528\u7684\u662f\u56de\u8c03\u961f\u5217\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u6240\u6709\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5e76\u89e3\u91ca JavaScript \u7684\u5b9e\u9645\u8fd0\u884c\u65b9\u5f0f\u3002\u901a\u8fc7\u4e86\u89e3\u8fd9\u4e9b\u7ec6\u8282\uff0c\u60a8\u5c06\u80fd\u591f\u7f16\u5199\u66f4\u597d\u7684\u3001\u65e0\u963b\u585e\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6b63\u786e\u5229\u7528\u6240\u63d0\u4f9b\u7684 API\u3002\n\u5982\u679c\u60a8\u5bf9 JavaScript \u6bd4\u8f83\u964c\u751f\uff0c\u8fd9\u7bc7\u535a\u6587\u5c06\u5e2e\u52a9\u60a8\u7406\u89e3\u4e3a\u4ec0\u4e48 JavaScript \u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\u5982\u6b64\u201c\u5947\u602a\u201d\u3002\u5982\u679c\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684 JavaScript \u5f00\u53d1\u4eba\u5458\uff0c\u5e0c\u671b\u5b83\u80fd\u7ed9\u60a8\u4e00\u4e9b\u5173\u4e8e\u60a8\u6bcf\u5929\u4f7f\u7528\u7684 JavaScript \u8fd0\u884c\u65f6\u5b9e\u9645\u5de5\u4f5c\u65b9\u5f0f\u7684\u5168\u65b0\u89c1\u89e3\u3002 JavaScript \u5f15\u64ce\u7684\u4e00\u4e2a\u6d41\u884c\u793a\u4f8b\u662f Google \u7684 V8 \u5f15\u64ce\u3002\u4f8b\u5982\uff0cV8 \u5f15\u64ce\u7528\u4e8e Chrome \u548c Node.js\u3002\u4e0b\u9762\u662f\u5b83\u7684\u4e00\u4e2a\u975e\u5e38\u7b80\u5316\u7684\u89c6\u56fe\uff1a\u5f15\u64ce\u7531\u4e24\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u7ec4\u6210\uff1a * \u5185\u5b58\u5806\u2014\u2014\u8fd9\u662f\u5185\u5b58\u5206\u914d\u53d1\u751f\u7684\u5730\u65b9 * \u8c03\u7528\u6808\u2014\u2014\u8fd9\u662f\u4f60\u7684\u4ee3\u7801\u6267\u884c\u65f6\u7684\u5806\u6808\u5e27\u6240\u5728\u7684\u5730\u65b9\u6709 API\u51e0\u4e4e\u6240\u6709 JavaScript \u5f00\u53d1\u4eba\u5458\u90fd\u4f7f\u7528\u8fc7\u7684\u6d4f\u89c8\u5668\uff08\u4f8b\u5982\u201csetTimeout\u201d\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b API \u4e0d\u662f\u7531\u5f15\u64ce\u63d0\u4f9b\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6709\u5f15\u64ce\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd8\u6709\u66f4\u591a\u3002\u6211\u4eec\u6709\u6d4f\u89c8\u5668\u63d0\u4f9b\u7684\u79f0\u4e3a Web API \u7684\u4e1c\u897f\uff0c\u6bd4\u5982 DOM\u3001AJAX\u3001setTimeout \u7b49\u7b49\u3002 JavaScript \u662f\u4e00\u79cd\u5355\u7ebf\u7a0b\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u6709\u4e00\u4e2a\u8c03\u7528\u5806\u6808\u3002\u56e0\u6b64\u5b83\u4e00\u6b21\u53ea\u80fd\u505a\u4e00\u4ef6\u4e8b\u3002\n\u8c03\u7528\u6808\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u57fa\u672c\u4e0a\u8bb0\u5f55\u4e86\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u4f1a\u5c06\u5b83\u653e\u5728\u6808\u9876\u3002\u5982\u679c\u6211\u4eec\u4ece\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\uff0c\u6211\u4eec\u5c31\u4f1a\u4ece\u6808\u9876\u5f39\u51fa\u3002\u8fd9\u5c31\u662f\u5806\u6808\u53ef\u4ee5\u505a\u7684\u6240\u6709\u4e8b\u60c5\u3002\u51fd\u6570\u4e58\u6cd5\uff08x\uff0cy\uff09{\u8fd4\u56dex * y; } function printSquare(x) { var s = multiply(x, x);\u63a7\u5236\u53f0.log(s); } printSquare(5);\u5f53\u5f15\u64ce\u5f00\u59cb\u6267\u884c\u6b64\u4ee3\u7801\u65f6\uff0c\u8c03\u7528\u5806\u6808\u5c06\u4e3a\u7a7a\u3002\u4e4b\u540e\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a \u8fd9\u5c31\u662f\u5728\u629b\u51fa\u5f02\u5e38\u65f6\u6784\u5efa\u5806\u6808\u8ddf\u8e2a\u7684\u65b9\u5f0f\u2014\u2014\u5b83\u57fa\u672c\u4e0a\u662f\u5f02\u5e38\u53d1\u751f\u65f6\u8c03\u7528\u5806\u6808\u7684\u72b6\u6001\u3002\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a function foo() { throw new Error(&#39;SessionStack will help you resolve crashes :)&#39;); } \u529f\u80fd\u680f() { foo(); } \u51fd\u6570\u5f00\u59cb() { bar(); } \u5f00\u59cb\uff08\uff09;\u5982\u679c\u5728 Chrome \u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\uff08\u5047\u8bbe\u6b64\u4ee3\u7801\u4f4d\u4e8e\u540d\u4e3a foo.js \u7684\u6587\u4ef6\u4e2d\uff09\uff0c\u5c06\u751f\u6210\u4ee5\u4e0b\u5806\u6808\u8ddf\u8e2a\uff1a\u201cBlowing the stack\u201d\u2014\u2014\u5f53\u60a8\u8fbe\u5230\u6700\u5927\u8c03\u7528\u5806\u6808\u5927\u5c0f\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u5f88\u5bb9\u6613\u53d1\u751f\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u4f7f\u7528\u9012\u5f52\u800c\u6ca1\u6709\u975e\u5e38\u5e7f\u6cdb\u5730\u6d4b\u8bd5\u60a8\u7684\u4ee3\u7801\u3002\u770b\u770b\u8fd9\u4e2a\u793a\u4f8b\u4ee3\u7801\uff1a\n\u5f53\u5f15\u64ce\u5f00\u59cb\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u5b83\u9996\u5148\u8c03\u7528\u51fd\u6570\u201cfoo\u201d\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u9012\u5f52\u7684\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u4efb\u4f55\u7ec8\u6b62\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u8c03\u7528\u81ea\u8eab\u3002\u56e0\u6b64\uff0c\u5728\u6267\u884c\u7684\u6bcf\u4e00\u6b65\uff0c\u76f8\u540c\u7684\u51fd\u6570\u90fd\u4f1a\u4e00\u904d\u53c8\u4e00\u904d\u5730\u6dfb\u52a0\u5230\u8c03\u7528\u5806\u6808\u4e2d\u3002\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\u7136\u800c\uff0c\u5728\u67d0\u4e9b\u65f6\u5019\uff0c\u8c03\u7528\u5806\u6808\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u6570\u91cf\u8d85\u8fc7\u4e86\u8c03\u7528\u5806\u6808\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u6d4f\u89c8\u5668\u51b3\u5b9a\u91c7\u53d6\u884c\u52a8\uff0c\u901a\u8fc7\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\u5728\u5355\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u4ee3\u7801\u975e\u5e38\u5bb9\u6613\uff0c\u56e0\u4e3a\u60a8\u4e0d\u5fc5\u5904\u7406\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u51fa\u73b0\u7684\u590d\u6742\u573a\u666f \u2014 \u4f8b\u5982\uff0c\u6b7b\u9501\u3002\u4f46\u662f\u5728\u5355\u4e2a\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u4e5f\u975e\u5e38\u6709\u9650\u3002\u7531\u4e8e JavaScript \u53ea\u6709\u4e00\u4e2a\u8c03\u7528\u5806\u6808\uff0c\u6240\u4ee5\u5f53\u4e8b\u60c5\u53d8\u6162\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5982\u679c\u8c03\u7528\u5806\u6808\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u5904\u7406\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528 JavaScript \u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u7684\u56fe\u50cf\u8f6c\u6362\u3002\u4f60\u53ef\u80fd\u4f1a\u95ee\u2014\u2014\u4e3a\u4ec0\u4e48\u8fd9\u751a\u81f3\u662f\u4e00\u4e2a\u95ee\u9898\uff1f\u95ee\u9898\u662f\uff0c\u867d\u7136\u8c03\u7528\u5806\u6808\u6709\u8981\u6267\u884c\u7684\u51fd\u6570\uff0c\u4f46\u6d4f\u89c8\u5668\u5b9e\u9645\u4e0a\u4e0d\u80fd\u505a\u4efb\u4f55\u5176\u4ed6\u4e8b\u60c5\u2014\u2014\u5b83\u88ab\u963b\u585e\u4e86\u3002\u8fd9\u610f\u5473\u7740\u6d4f\u89c8\u5668\u65e0\u6cd5\u6e32\u67d3\uff0c\u65e0\u6cd5\u8fd0\u884c\u4efb\u4f55\u5176\u4ed6\u4ee3\u7801\uff0c\u53ea\u662f\u5361\u4f4f\u4e86\u3002\u5982\u679c\u4f60\u60f3\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u4f7f\u7528\u6d41\u7545\u7684 UI\uff0c\u8fd9\u5c31\u4f1a\u4ea7\u751f\u95ee\u9898\u3002\u8fd9\u4e0d\u662f\u552f\u4e00\u7684\u95ee\u9898\u3002\u4e00\u65e6\u60a8\u7684\u6d4f\u89c8\u5668\u5f00\u59cb\u5728\u8c03\u7528\u5806\u6808\u4e2d\u5904\u7406\u5982\u6b64\u591a\u7684\u4efb\u52a1\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u505c\u6b62\u54cd\u5e94\u3002\u5927\u591a\u6570\u6d4f\u89c8\u5668\u901a\u8fc7\u5f15\u53d1\u9519\u8bef\u6765\u91c7\u53d6\u884c\u52a8\uff0c\u8be2\u95ee\u60a8\u662f\u5426\u8981\u7ec8\u6b62\u7f51\u9875\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u5728\u4e0d\u963b\u585e UI \u5e76\u4f7f\u6d4f\u89c8\u5668\u65e0\u54cd\u5e94\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u7e41\u91cd\u7684\u4ee3\u7801\u5462\uff1f\u55ef\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u5f02\u6b65\u56de\u8c03\u3002\u8fd9\u5c06\u5728\u201cJavaScript \u7684\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u201d\u6559\u7a0b\u7684\u7b2c 2 \u90e8\u5206\uff1a\u201c\u6df1\u5165\u4e86\u89e3 V8 \u5f15\u64ce + \u5173\u4e8e\u5982\u4f55\u7f16\u5199\u4f18\u5316\u4ee3\u7801\u7684 5 \u4e2a\u6280\u5de7\u201d\u4e2d\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\u540c\u65f6\uff0c\u5982\u679c\u60a8\u5f88\u96be\u91cd\u73b0\u548c\u7406\u89e3 JavaScript \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u95ee\u9898\uff0c\u8bf7\u67e5\u770b SessionStack\u3002 SessionStack \u8bb0\u5f55\u60a8\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff1a\u6240\u6709 DOM \u66f4\u6539\u3001\u7528\u6237\u4ea4\u4e92\u3001JavaScript \u5f02\u5e38\u3001\u5806\u6808\u8ddf\u8e2a\u3001\u5931\u8d25\u7684\u7f51\u7edc\u8bf7\u6c42\u548c\u8c03\u8bd5\u6d88\u606f\u3002\u4f7f\u7528 SessionStack\uff0c\u60a8\u53ef\u4ee5\u5c06 Web \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u95ee\u9898\u4f5c\u4e3a\u89c6\u9891\u56de\u653e\uff0c\u5e76\u67e5\u770b\u53d1\u751f\u5728\u7528\u6237\u8eab\u4e0a\u7684\u6240\u6709\u4e8b\u60c5\u3002", "note_en": "As JavaScript is getting more and more popular, teams are leveraging its support on many levels in their stack - front-end, back-end, hybrid apps, embedded devices and much more.\n This post is meant to be the first in a series aimed at digging deeper into JavaScript and how it actually works: we thought that by knowing the building blocks of JavaScript and how they come to play together you\u2019ll be able to write better code and apps. We\u2019ll also share some rules of thumb we use when building  SessionStack, a lightweight JavaScript application that has to be robust and highly-performant in order to stay competitive.\n As shown in the  GitHut stats, JavaScript is at the top in terms of Active Repositories and Total Pushes in GitHub. It doesn\u2019t lag behind much in the other categories either.\n   If projects are getting so much dependent on JavaScript, this means that developers have to be utilizing everything that the language and the ecosystem provide with deeper and deeper understanding of the internals, in order to build amazing software.\n As it turns out, there are a lot of developers that are using JavaScript on a daily basis but don\u2019t have the knowledge of what happens under the hood.\n  Almost everyone has already heard of the V8 Engine as a concept, and most people know that JavaScript is single-threaded or that it is using a callback queue.\n In this post, we\u2019ll go through all these concepts in detail and explain how JavaScript actually runs. By knowing these details, you\u2019ll be able to write better, non-blocking apps that are properly leveraging the provided APIs.\n If you\u2019re relatively new to JavaScript, this blog post will help you understand why JavaScript is so \u201cweird\u201d compared to other languages.\n And if you\u2019re an experienced JavaScript developer, hopefully, it will give you some fresh insights on how the JavaScript Runtime you\u2019re using every day actually works.\n  A popular example of a JavaScript Engine is Google\u2019s V8 engine. The V8 engine is used inside Chrome and Node.js for example. Here is a very simplified view of what it looks like:\n  The Engine consists of two main components: * Memory Heap \u2014 this is where the memory allocation happens * Call Stack \u2014 this is where your stack frames are as your code executes\n  There are APIs in the browser that have been used by almost any JavaScript developer out there (e.g. \u201csetTimeout\u201d). Those APIs, however, are not provided by the Engine.\n    So, we have the Engine but there is actually a lot more. We have those things called Web APIs which are provided by browsers, like the DOM, AJAX, setTimeout and much more.\n   JavaScript is a single-threaded programming language, which means it has a single Call Stack. Therefore it can do one thing at a time.\n The Call Stack is a data structure which records basically where in the program we are. If we step into a function, we put it on the top of the stack. If we return from a function, we pop off the top of the stack. That\u2019s all the stack can do.\n  function multiply(x, y) {  return x * y; } function printSquare(x) {  var s = multiply(x, x);  console.log(s); } printSquare(5);\n When the engine starts executing this code, the Call Stack will be empty. Afterwards, the steps will be the following:\n   And this is exactly how stack traces are being constructed when an exception is being thrown \u2014 it is basically the state of the Call Stack when the exception happened. Take a look at the following code:\n function foo() {  throw new Error(&#39;SessionStack will help you resolve crashes :)&#39;); } function bar() {  foo(); } function start() {  bar(); } start();\n If this is executed in Chrome (assuming that this code is in a file called foo.js), the following stack trace will be produced:\n  \u201c Blowing the stack\u201d \u2014 this happens when you reach the maximum Call Stack size. And that could happen quite easily, especially if you\u2019re using recursion without testing your code very extensively. Take a look at this sample code:\n  When the engine starts executing this code, it starts with calling the function \u201cfoo\u201d. This function, however, is recursive and starts calling itself without any termination conditions. So at every step of the execution, the same function gets added to the Call Stack over and over again. It looks something like this:\n  At some point, however, the number of function calls in the Call Stack exceeds the actual size of the Call Stack, and the browser decides to take action, by throwing an error, which can look something like this:\n  Running code on a single thread can be quite easy since you don\u2019t have to deal with complicated scenarios that are arising in multi-threaded environments \u2014 for example, deadlocks.\n But running on a single thread is quite limiting as well. Since JavaScript has a single Call Stack,  what happens when things are slow?\n  What happens when you have function calls in the Call Stack that take a huge amount of time in order to be processed? For example, imagine that you want to do some complex image transformation with JavaScript in the browser.\n You may ask \u2014 why is this even a problem? The problem is that while the Call Stack has functions to execute, the browser can\u2019t actually do anything else \u2014 it\u2019s getting blocked. This means that the browser can\u2019t render, it can\u2019t run any other code, it\u2019s just stuck. And this creates problems if you want nice fluid UIs in your app.\n And that\u2019s not the only problem. Once your browser starts processing so many tasks in the Call Stack, it may stop being responsive for quite a long time. And most browsers take action by raising an error, asking you whether you want to terminate the web page.\n   So, how can we execute heavy code without blocking the UI and making the browser unresponsive? Well, the solution is  asynchronous callbacks.\n This will be explained in greater detail in  Part 2 of the \u201cHow JavaScript actually works\u201d tutorial: \u201cI nside the V8 engine + 5 tips on how to write optimized code\u201d.\n In the meantime, if you\u2019re having a hard time reproducing and understanding issues in your JavaScript apps, take a look at  SessionStack. SessionStack records everything in your web apps: all DOM changes, user interactions, JavaScript exceptions, stack traces, failed network requests, and debug messages.\n With SessionStack, you can replay issues in your web apps as videos and see everything that happened to your user.", "posttime": "2021-07-25 00:54:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u5806\u6808,works", "title": "JavaScript \u7684\u5de5\u4f5c\u539f\u7406\uff1a\u5f15\u64ce\u3001\u8fd0\u884c\u65f6\u548c\u8c03\u7528\u5806\u6808\u6982\u8ff0", "title_en": "How JavaScript works: an overview of the engine, the runtime, and the call stack", "transed": 1, "url": "https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf", "via": "", "real_tags": ["java", "\u5806\u6808", "works"]}, {"category": "", "categoryclass": "", "imagename": "5a7f505a140b5a54a7ec1a0bb005d6a1.jpg", "infoid": 1069486, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a \u8df3\u8f6c\u5230\u641c\u7d22 Marvin John Heemeyer\uff081951 \u5e74 10 \u6708 28 \u65e5 - 2004 \u5e74 6 \u6708 4 \u65e5\uff09\u662f\u4e00\u5bb6\u6c7d\u8f66\u6d88\u58f0\u5668\u7ef4\u4fee\u5e97\u8001\u677f\uff0c\u4ed6\u4e8e 2004 \u5e74 6 \u6708 4 \u65e5\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u683c\u5170\u6bd4\u7528\u4e00\u53f0\u6539\u88c5\u7684\u63a8\u571f\u673a\u62c6\u9664\u4e86\u8bb8\u591a\u5efa\u7b51\u7269\u3002Heemeyer \u66fe\u4e0e\u683c\u5170\u6bd4\u9547\u5b98\u5458\uff0c\u7279\u522b\u662f\u5728\u5730\u65b9\u5b98\u5458\u5c06 Heemeyer \u7684\u4e1a\u52a1\u4e0e\u57ce\u5e02\u6c61\u6c34\u7cfb\u7edf\u65ad\u5f00\uff0c\u4e3a\u76f8\u90bb\u5730\u5757\u4e0a\u7684\u6df7\u51dd\u571f\u5382\u8ba9\u8def\u540e\uff0c\u8fdd\u53cd\u57ce\u5e02\u536b\u751f\u6761\u4f8b\u800c\u88ab\u7f5a\u6b3e\u3002\u968f\u540e\uff0c\u4ed6\u56e0\u4e0d\u5f53\u503e\u5012\u5176\u4e1a\u52a1\u4e2d\u7684\u6c61\u6c34\u800c\u4e0d\u662f\u8fde\u63a5\u5230\u57ce\u5e02\u4e0b\u6c34\u9053\u7cfb\u7edf\u800c\u88ab\u7f5a\u6b3e\u3002\u5728\u5927\u7ea6 18 \u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0cHeemeyer \u79d8\u5bc6\u6539\u88c5\u4e86\u4e00\u53f0\u5c0f\u677e D355A \u63a8\u571f\u673a\uff0c\u901a\u8fc7\u6dfb\u52a0\u94a2\u548c\u6df7\u51dd\u571f\u5c42\u6765\u5145\u5f53\u88c5\u7532\u3002 [1] 2004 \u5e74 6 \u6708 4 \u65e5\uff0cHeemeyer \u4e0e Granby \u7684\u4e0d\u548c\u8fbe\u5230\u4e86\u9ad8\u6f6e\uff0c\u4ed6\u4f7f\u7528\u88c5\u7532\u63a8\u571f\u673a\u62c6\u9664\u4e86 Granby \u5e02\u653f\u5385\u3001\u524d\u5e02\u957f\u7684\u623f\u5b50\u548c\u5176\u4ed6\u51e0\u5ea7\u5efa\u7b51\u7269\u3002 [1] Heemeyer \u7684\u6a2a\u51b2\u76f4\u649e\u4ee5\u4ed6\u7684\u81ea\u6740\u544a\u7ec8\uff0c\u4ed6\u7684\u63a8\u571f\u673a\u88ab\u56f0\u5728\u4ed6\u4e00\u76f4\u5728\u6467\u6bc1\u7684\u4e94\u91d1\u5e97\u7684\u5730\u4e0b\u5ba4\u3002 Marvin Heemeyer \u4e8e 1951 \u5e74 10 \u6708 28 \u65e5\u51fa\u751f\u4e8e\u5357\u8fbe\u79d1\u4ed6\u5dde\uff0c\u4f4f\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u7684\u683c\u5170\u5fb7\u6e56\uff0c\u8ddd\u79bb\u683c\u5170\u6bd4\u7ea6 16 \u82f1\u91cc\uff0826 \u516c\u91cc\uff09\u3002 [2] \u636e\u90bb\u5c45\u8bf4\uff0cHeemeyer \u5728\u4e8b\u4ef6\u53d1\u751f\u524d\u5341\u591a\u5e74\u624d\u642c\u5230\u9547\u4e0a\u3002\u4ed6\u7684\u670b\u53cb\u8bf4\u4ed6\u5728\u683c\u5170\u6bd4-\u683c\u5170\u5fb7\u6e56\u5730\u533a\u6ca1\u6709\u4eb2\u621a\u3002 [3] Heemeyer \u7684\u670b\u53cb John Bauldree \u8bf4\u4ed6\u662f\u4e00\u4e2a\u8ba8\u4eba\u559c\u6b22\u7684\u4eba\u3002 Heemeyer \u7684\u5144\u5f1f\u80af\u8bf4\u4ed6\u201c\u4f1a\u4e3a\u4efb\u4f55\u4eba\u5411\u540e\u5f2f\u8170\u201d\u3002\u7136\u800c\uff0c\u867d\u7136\u8bb8\u591a\u4eba\u5c06 Heemeyer \u63cf\u8ff0\u4e3a\u548c\u853c\u53ef\u4eb2\u7684\u4eba\uff0c\u4f46\u5f53\u5730\u5c45\u6c11 Christie Baker \u58f0\u79f0\uff0c\u5979\u7684\u4e08\u592b\u5728\u62d2\u7edd\u652f\u4ed8\u6709\u4e89\u8bae\u7684\u6d88\u58f0\u5668\u7ef4\u4fee\u8d39\u7528\u540e\u53d7\u5230\u4e86 Heemeyer \u7684\u5a01\u80c1\u3002 [4] \u8d1d\u514b\u8bf4\uff0c\u5979\u7684\u4e08\u592b\u540e\u6765\u901a\u8fc7\u4e2d\u95f4\u4eba\u5411 Heemeyer \u652f\u4ed8\u4e86 124 \u7f8e\u5143\u3002 [4] 1992 \u5e74\uff0cHeemeyer \u4ee5 42,000 \u7f8e\u5143\u7684\u4ef7\u683c\u4ece Resolution Trust Corporation \u8d2d\u4e70\u4e86 2 \u82f1\u4ea9\uff080.8 \u516c\u9877\uff09\u7684\u571f\u5730\uff0c\u8be5\u516c\u53f8\u8d1f\u8d23\u5904\u7406\u5931\u8d25\u7684\u50a8\u84c4\u548c\u8d37\u6b3e\u534f\u4f1a\u7684\u8d44\u4ea7\u3002\u968f\u540e\uff0c\u4ed6\u540c\u610f\u4ee5 250,000 \u7f8e\u5143\u7684\u4ef7\u683c\u5c06\u571f\u5730\u51fa\u552e\u7ed9 Cody Docheff\uff0c\u4ee5\u5efa\u9020\u4e00\u5ea7\u6df7\u51dd\u571f\u6405\u62cc\u7ad9 Mountain Park Concrete\u3002\u636e Susan Docheff \u79f0\uff0cHeemeyer \u6539\u53d8\u4e86\u4e3b\u610f\uff0c\u5c06\u4ef7\u683c\u63d0\u9ad8\u5230 375,000 \u7f8e\u5143\uff0c\u7136\u540e\u662f\u4e00\u7b14\u4ef7\u503c\u7ea6 100 \u4e07\u7f8e\u5143\u7684\u4ea4\u6613\u3002\u4e00\u4e9b[\u8c01\uff1f] \u76f8\u4fe1\u8fd9\u6b21\u8c08\u5224\u662f\u5728\u91cd\u65b0\u5206\u533a\u63d0\u6848\u88ab\u9547\u8bae\u4f1a\u542c\u53d6\u4e4b\u524d\u8fdb\u884c\u7684\u3002 [5] 2001\u5e74\uff0c\u683c\u5170\u6bd4\u7684\u5206\u533a\u59d4\u5458\u4f1a\u548c\u53d7\u6258\u4eba\u6279\u51c6\u5efa\u9020\u6df7\u51dd\u571f\u5382\u3002 Heemeyer \u5bf9\u8be5\u51b3\u5b9a\u63d0\u51fa\u4e0a\u8bc9\uff0c\u4f46\u672a\u6210\u529f\uff0c\u58f0\u79f0\u8be5\u5efa\u7b51\u963b\u6b62\u4e86\u8fdb\u5165\u4ed6\u7684\u5546\u5e97\u7684\u901a\u9053\u3002\u968f\u540e\uff0c\u4ed6\u56e0\u5404\u79cd\u8fdd\u89c4\u884c\u4e3a\u88ab\u9547\u8bae\u4f1a\u548c\u4e00\u540d\u5e02\u6cd5\u5b98\u7f5a\u6b3e 2,500 \u7f8e\u5143 [6]\uff0c\u5305\u62ec\u201c\u6ca1\u6709\u8fde\u63a5\u5230\u4e0b\u6c34\u9053\u201d\uff1b\u4ed6\u6700\u521d\u65e0\u6cd5\u8fde\u63a5\u5230\u65b0\u7684\u4e0b\u6c34\u9053\u7ba1\u7ebf\uff0c\u56e0\u4e3a\u8fd9\u6761\u7ba1\u7ebf\u8ddd\u79bb\u4ed6\u7684\u8d22\u4ea7 60 \u82f1\u5c3a (18 m)\uff0c\u5e02\u653f\u5e9c\u5e0c\u671b\u4ed6\u652f\u4ed8\u8fd1 80,000 \u7f8e\u5143\u7684\u94fa\u8bbe\u8fde\u63a5\u5668\u7684\u8d39\u7528\u3002 Heemeyer \u7684\u63a8\u571f\u673a\u662f\u7ecf\u8fc7\u6539\u88c5\u7684\u5c0f\u677e D355A\uff0c[7] \u4ed6\u5728\u5f55\u97f3\u4e2d\u5c06\u5176\u79f0\u4e3a\u201cMK \u5766\u514b\u201d\uff0c\u914d\u5907\u4e86\u8986\u76d6\u673a\u8231\u3001\u53d1\u52a8\u673a\u548c\u90e8\u5206\u5c65\u5e26\u7684\u4e34\u65f6\u88c5\u7532\u677f\u3002\u5728\u67d0\u4e9b\u5730\u65b9\uff0c\u8fd9\u79cd\u88c5\u7532\u8d85\u8fc7 1 \u82f1\u5c3a\uff0830 \u5398\u7c73\uff09\u539a\uff0c\u7531 5,000 \u78c5/\u5e73\u65b9\u82f1\u5bf8\uff0834 \u5146\u5e15\uff09\u7684 Quikrete \u6df7\u51dd\u571f\u6df7\u5408\u7269\u5939\u5728\u5de5\u5177\u94a2\uff08\u4ece\u4e39\u4f5b\u7684\u4e00\u5bb6\u6c7d\u8f66\u7ecf\u9500\u5546\u5904\u83b7\u5f97\uff09\u677f\u4e4b\u95f4\u7ec4\u6210\uff0c\u4ee5\u5236\u9020\u4e34\u65f6\u590d\u5408\u88c5\u7532\u3002\u8fd9\u4f7f\u5f97\u673a\u5668\u4e0d\u53d7\u8f7b\u6b66\u5668\u706b\u529b\u548c\u7206\u70b8\u7269\u7684\u5f71\u54cd\u3002\u63a8\u571f\u673a\u53d1\u51fa\u7684\u4e09\u58f0\u5916\u7206\u548c200\u591a\u53d1\u5f39\u836f\u5bf9\u5176\u6ca1\u6709\u5f71\u54cd\u3002 [1]\n\u4e3a\u4e86\u80fd\u89c1\u5ea6\uff0c\u63a8\u571f\u673a\u914d\u5907\u4e86\u591a\u4e2a\u6444\u50cf\u673a\uff0c\u8fde\u63a5\u5230\u5b89\u88c5\u5728\u8f66\u8f86\u4eea\u8868\u677f\u4e0a\u7684\u4e24\u4e2a\u76d1\u89c6\u5668\u3002\u6444\u50cf\u673a\u7684\u5916\u90e8\u53d7\u5230 3 \u82f1\u5bf8\uff0876 \u6beb\u7c73\uff09\u900f\u660e\u9632\u5f39 lexan \u9632\u62a4\u7f69\u7684\u4fdd\u62a4\u3002 [1] \u5b89\u88c5\u4e86\u538b\u7f29\u7a7a\u6c14\u55b7\u5634\u4ee5\u5439\u8d70\u6444\u50cf\u673a\u4e0a\u7684\u7070\u5c18\u3002\u8f66\u8f7d\u98ce\u6247\u548c\u7a7a\u8c03\u7528\u4e8e\u5728\u9a7e\u9a76\u65f6\u4fdd\u6301 Heemeyer \u51c9\u723d\u3002\u4ed6\u5236\u9020\u4e86\u4e09\u4e2a\u67aa\u53e3\uff0c\u9002\u7528\u4e8e 0.50 \u53e3\u5f84\u6b65\u67aa\u30010.308 \u534a\u81ea\u52a8\u6b65\u67aa\u548c 0.22LR \u6b65\u67aa\uff0c\u90fd\u88c5\u6709\u534a\u82f1\u5bf8\u539a\uff081.3 \u5398\u7c73\uff09\u7684\u94a2\u677f\u3002 Heemeyer\u663e\u7136\u6ca1\u6709\u6253\u7b97\u5728\u4ed6\u8fdb\u5165\u673a\u8231\u540e\u79bb\u5f00\u673a\u8231\u3002 [1] \u5f53\u5c40\u6700\u521d\u63a8\u6d4b\u4ed6\u53ef\u80fd\u4f7f\u7528\u4e86\u81ea\u5236\u8d77\u91cd\u673a\u2014\u2014\u5728\u4ed6\u7684\u8f66\u5e93\u91cc\u627e\u5230\u2014\u2014\u5c06\u88c5\u7532\u8f66\u4f53\u964d\u4f4e\u5230\u63a8\u571f\u673a\u548c\u4ed6\u81ea\u5df1\u7684\u4e0a\u65b9\u3002 \u201c\u4e00\u65e6\u4ed6\u5173\u4e0a\u76d6\u5b50\uff0c\u4ed6\u5c31\u77e5\u9053\u4ed6\u51fa\u4e0d\u53bb\u4e86\uff0c\u201d\u6234\u5229\u8bf4\u3002\u8c03\u67e5\u4eba\u5458\u641c\u67e5\u4e86\u4ed6\u4eec\u8ba4\u4e3a\u662f Heemeyer \u5236\u9020\u8f66\u8f86\u7684\u8f66\u5e93\uff0c\u5e76\u53d1\u73b0\u4e86\u6c34\u6ce5\u548c\u88c5\u7532\u94a2\u3002 [1] \u201c\u6709\u8da3\u7684\u662f\uff0c\u6211\u4ece\u672a\u88ab\u6293\u5230\u8fc7\u201d\uff0cHeemeyer \u5199\u9053\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u4e3a\u671f 1 + 1\u2044 2 \u5e74\u7684\u517c\u804c\u9879\u76ee\u3002\u201d\u4ee4\u4ed6\u611f\u5230\u60ca\u8bb6\u7684\u662f\uff0c\u53bb\u5e74\u5e74\u5e95\u66fe\u53c2\u89c2\u8fc7\u68da\u5c4b\u7684\u51e0\u540d\u7537\u5b50\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\u6539\u88c5\u540e\u7684\u63a8\u571f\u673a\uff0c\u201c\u5c24\u5176\u662f\u5728 2,000 \u78c5 [910 \u516c\u65a4] \u7684\u5347\u964d\u673a\u5b8c\u5168\u66b4\u9732\u7684\u60c5\u51b5\u4e0b\u2026\u2026\u4e0d\u77e5\u4f55\u6545\uff0c\u4ed6\u4eec\u7684\u89c6\u7ebf\u6a21\u7cca\u4e86\u201d\u3002 [8] 2004 \u5e74 6 \u6708 4 \u65e5\uff0c\u5e0c\u8fc8\u8036\u9a7e\u9a76\u7740\u4ed6\u7684\u88c5\u7532\u63a8\u571f\u673a\u7a7f\u8fc7\u4ed6\u4ee5\u524d\u7684\u4f01\u4e1a\u3001\u6df7\u51dd\u571f\u5382\u3001\u5e02\u653f\u5385\u3001\u5bf9\u4ed6\u8fdb\u884c\u793e\u8bba\u7684\u5f53\u5730\u62a5\u7eb8\u7684\u529e\u516c\u5ba4\u3001\u524d\u5e02\u957f\u7684\u5bb6\uff08\u5176\u4e2d\u5305\u62ec\u5e02\u957f\u7684\u9057\u5b40\u5c45\u4f4f\uff09\uff0c\u4ee5\u53ca\u53e6\u4e00\u4f4d\u5728\u8bc9\u8bbc\u4e2d\u70b9\u540d\u7684 Heemeyer \u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u4eba\u62e5\u6709\u7684\u4e00\u5bb6\u4e94\u91d1\u5e97\u3002 Heemeyer \u5c06\u4ed6\u7684\u751f\u610f\u79df\u7ed9\u4e86\u4e00\u5bb6\u5783\u573e\u516c\u53f8\uff0c\u5e76\u5728\u6a2a\u51b2\u76f4\u649e\u524d\u51e0\u4e2a\u6708\u5356\u6389\u4e86\u8fd9\u5904\u623f\u4ea7\u3002\u88ad\u51fb\u6301\u7eed\u4e86\u4e24\u5c0f\u65f6\u4e03\u5206\u949f\uff0c\u635f\u574f\u4e86 13 \u5ea7\u5efa\u7b51\u7269\uff0c[7] \u4f7f\u5e02\u653f\u5385\u548c\u6df7\u51dd\u571f\u5382\u7684\u5929\u7136\u6c14\u670d\u52a1\u4e2d\u65ad\uff0c\u635f\u574f\u4e86\u4e00\u8f86\u5361\u8f66\uff0c\u5e76\u6467\u6bc1\u4e86\u516c\u7528\u4e8b\u4e1a\u670d\u52a1\u4e2d\u5fc3\u7684\u4e00\u90e8\u5206\u3002 [9] \u5c3d\u7ba1\u8d22\u4ea7\u635f\u5931\u60e8\u91cd\uff0c\u4f46\u9664\u4e86 Heemeyer\uff08\u88ab\u81ea\u5df1\u9020\u6210\u7684\u67aa\u4f24\uff09\u4e4b\u5916\u6ca1\u6709\u4eba\u5728\u4e8b\u4ef6\u4e2d\u4e27\u751f\u3002 [1] \u7136\u800c\uff0c\u5728\u897f\u5965\u591a\u00b7\u65af\u7279\u91d1\uff08Theodore Sturgeon\uff09\u7684\u4e00\u4e2a\u77ed\u7bc7\u5c0f\u8bf4\u7684\u540d\u5b57\u4e4b\u540e\uff0c\u6539\u826f\u7684\u63a8\u571f\u673a\u88ab\u79f0\u4e3a\u201cKilldozer\u201d\u3002 [10]\u635f\u5931\u4f30\u8ba1\u4e3a700\u4e07\u7f8e\u5143\u3002 [11] [12] \u6839\u636e\u683c\u5170\u5fb7\u53bf\u4e13\u5458\u8a79\u59c6\u65af\u7ebd\u4f2f\u91cc\u7684\u8bf4\u6cd5\uff0c\u7d27\u6025\u8c03\u5ea6\u5458\u4f7f\u7528\u53cd\u5411 911 \u7d27\u6025\u7cfb\u7edf\u901a\u77e5\u8bb8\u591a\u5c45\u6c11\u548c\u4e1a\u4e3b\u5728\u9547\u4e0a\u53d1\u751f\u7684\u6a2a\u51b2\u76f4\u649e\u3002 [13] Heemeyer&#39;s \u7684\u634d\u536b\u8005\u4e89\u8fa9\u8bf4\uff0c\u4ed6\u5728\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u671f\u95f4\u6ca1\u6709\u4f24\u5bb3\u4efb\u4f55\u4eba\uff1b [1] \u9762\u5305\u5e97\u8001\u677f\u4f0a\u6069\u00b7\u591a\u5c14\u8482 (Ian Daugherty) \u8bf4\uff0c\u5e0c\u8fc8\u8036\u201c\u7279\u610f\u201d\u4e0d\u4f24\u5bb3\u4efb\u4f55\u4eba\u3002\u5176\u4ed6\u4eba\u63d0\u51fa\u4e86\u4e0d\u540c\u7684\u770b\u6cd5\u3002\u8b66\u957f\u90e8\u95e8\u8fa9\u79f0\uff0c\u6ca1\u6709\u4eba\u53d7\u4f24\u7684\u4e8b\u5b9e\u4e0e\u5176\u8bf4\u662f\u51fa\u4e8e\u597d\u610f\uff0c\u4e0d\u5982\u8bf4\u662f\u51fa\u4e8e\u597d\u8fd0\u3002 Heemeyer \u5728\u63a8\u571f\u673a\u5185\u90e8\u7684\u53d1\u5c04\u53e3\u5b89\u88c5\u4e86\u4e24\u652f\u6b65\u67aa\uff0c[14] \u5e76\u4ece\u4ed6\u7684\u6b65\u67aa\u4e2d\u5411\u7535\u529b\u53d8\u538b\u5668\u548c\u4e19\u70f7\u7f50\u53d1\u5c04\u4e86 15 \u53d1\u5b50\u5f39\u3002 \u201c\u5982\u679c\u8fd9\u4e9b\u5766\u514b\u7834\u88c2\u5e76\u7206\u70b8\uff0c\u7206\u70b8\u53d1\u751f\u534a\u82f1\u91cc\uff08800 \u7c73\uff09\u5185\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u80fd\u53d7\u5230\u5a01\u80c1\uff0c\u201d\u8b66\u957f\u90e8\u95e8\u8bf4\u3002\u5341\u4e8c\u540d\u8b66\u5b98\u548c\u4e00\u4e2a\u8001\u5e74\u5c0f\u533a\u7684\u5c45\u6c11\u90fd\u5728\u8fd9\u6837\u7684\u8303\u56f4\u5185\u3002 [5] Heemeyer \u7528\u4ed6\u7684\u534a\u81ea\u52a8\u6b65\u67aa\u5411 Cody Docheff \u53d1\u5c04\u4e86\u8bb8\u591a\u5b50\u5f39\uff0c\u5f53 Docheff \u8bd5\u56fe\u4f7f\u7528\u522e\u5200\u963b\u6b62\u5bf9\u4ed6\u7684\u6df7\u51dd\u571f\u5de5\u5382\u7684\u653b\u51fb\u65f6\uff0cHeemeyer \u7684\u63a8\u571f\u673a\u5c06\u5176\u63a8\u5230\u4e00\u8fb9\u3002\u540e\u6765\uff0cHeemeyer \u5728\u4e24\u540d\u5dde\u5de1\u903b\u4eba\u5458\u5411\u4ed6\u5f00\u706b\u4e4b\u524d\u5c31\u5411\u4ed6\u4eec\u5f00\u706b\u3002 [5] \u8b66\u957f\u90e8\u95e8\u8fd8\u6307\u51fa\uff0cHeemeyer \u63a8\u5012\u7684 13 \u5ea7\u5efa\u7b51\u7269\u4e2d\u6709 11 \u5ea7\u5728\u88ab\u6467\u6bc1\u524d\u4e00\u76f4\u6709\u4eba\u5c45\u4f4f\u3002\u4f8b\u5982\uff0c\u5728\u9547\u56fe\u4e66\u9986\uff0c\u4e8b\u4ef6\u5f00\u59cb\u65f6\u6b63\u5728\u5f00\u5c55\u513f\u7ae5\u8282\u76ee\u3002 [2] [5] \u4e00\u540d\u519b\u5b98\u5411\u63a8\u571f\u673a\u7684\u6392\u6c14\u7ba1\u6295\u4e0b\u4e86\u4e00\u679a\u95ea\u5149\u624b\u69b4\u5f39\uff0c\u4f46\u6ca1\u6709\u660e\u663e\u6548\u679c\u3002\u5f53\u5730\u548c\u5dde\u5de1\u903b\u961f\uff0c\u5305\u62ec\u7279\u8b66\u961f\uff0c\u8d70\u5728\u63a8\u571f\u673a\u7684\u540e\u9762\u548c\u65c1\u8fb9\uff0c\u5076\u5c14\u5f00\u706b\uff0c\u4f46\u88c5\u7532\u63a8\u571f\u673a\u4e0d\u53d7\u4ed6\u4eec\u5c04\u51fb\u7684\u5f71\u54cd\u3002\u7531\u4e8e\u5b50\u5f39\u65e0\u6cd5\u7a7f\u900f 3 \u82f1\u5bf8\uff087.6 \u5398\u7c73\uff09\u7684\u9632\u5f39\u5851\u6599\uff0c\u8bd5\u56fe\u7528\u67aa\u58f0\u5173\u95ed\u63a8\u571f\u673a\u7684\u6444\u50cf\u5934\u7684\u5c1d\u8bd5\u5931\u8d25\u4e86\u3002\u6709\u4e00\u6b21\uff0c\u526f\u8b66\u957f\u683c\u4f26\u00b7\u7279\u96f7\u7eb3 (Glenn Trainor) \u722c\u4e0a\u63a8\u571f\u673a\uff0c\u201c\u50cf\u91ce\u9a6c\u7834\u574f\u8005\u4e00\u6837\u9a91\u7740\u5b83\uff0c\u8bd5\u56fe\u60f3\u529e\u6cd5\u8ba9\u5b50\u5f39\u8fdb\u5165\u9f99\u4f53\u5185\u201d\u3002 [2] \u7136\u800c\uff0c\u4ed6\u88ab\u8feb\u8df3\u4e0b\u4ee5\u907f\u514d\u88ab\u788e\u7247\u51fb\u4e2d\u3002 [2] \u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5730\u65b9\u5f53\u5c40\u548c\u79d1\u7f57\u62c9\u591a\u5dde\u5de1\u903b\u961f\u62c5\u5fc3\u4ed6\u4eec\u5728\u706b\u529b\u65b9\u9762\u7684\u9009\u62e9\u5df2\u7ecf\u4e0d\u591a\u4e86\uff0c\u800c\u4e14 Heemeyer \u5f88\u5feb\u5c31\u4f1a\u8f6c\u800c\u53cd\u5bf9\u683c\u5170\u6bd4\u7684\u5e73\u6c11\u3002\u636e\u79f0\uff0c\u5dde\u957f\u6bd4\u5c14\u6b27\u6587\u65af\u66fe\u8003\u8651\u6388\u6743\u56fd\u6c11\u8b66\u536b\u961f\u4f7f\u7528\u914d\u5907\u5730\u72f1\u706b\u5bfc\u5f39\u7684\u963f\u5e15\u5947\u653b\u51fb\u76f4\u5347\u673a\u6216\u914d\u5907\u6807\u67aa\u53cd\u5766\u514b\u5bfc\u5f39\u7684\u4e24\u4eba\u706b\u529b\u5c0f\u7ec4\u6765\u6467\u6bc1\u63a8\u571f\u673a\u3002\u5f53 Heemeyer \u88ab\u56f0\u5728 Gambles \u4e94\u91d1\u5e97\u7684\u5730\u4e0b\u5ba4\u65f6\uff0c\u8fd9\u5f88\u5feb\u5c31\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u76f4\u5230 2011 \u5e74\uff0c\u6b27\u6587\u65af\u5dde\u957f\u7684\u5de5\u4f5c\u4eba\u5458\u4ecd\u7136\u5f3a\u70c8\u5426\u8ba4\u8003\u8651\u8fc7\u8fd9\u6837\u7684\u884c\u52a8\uff0c\u4f46\u4ece\u90a3\u65f6\u8d77\uff0c\u5dde\u5de1\u903b\u961f\u7684\u6210\u5458\u900f\u9732\uff0c\u76f8\u53cd\uff0c\u5dde\u957f\u786e\u5b9e\u8003\u8651\u8fc7\u6388\u6743\u653b\u51fb\uff0c\u4f46\u6700\u7ec8\u51b3\u5b9a\u53cd\u5bf9\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5bfc\u5f39\u88ad\u51fb\u683c\u5170\u6bd4\u4e2d\u5fc3\u9020\u6210\u7684\u9644\u5e26\u635f\u5bb3\u660e\u663e\u9ad8\u4e8e Heemeyer \u7528\u4ed6\u7684\u63a8\u571f\u673a\u9020\u6210\u7684\u635f\u5bb3\u3002 [15]\n\u5f53 Heemeyer \u6467\u6bc1 Gambles \u4e94\u91d1\u5e97\u65f6\uff0c\u51fa\u73b0\u4e86\u4e24\u4e2a\u95ee\u9898\u3002\u63a8\u571f\u673a\u7684\u6563\u70ed\u5668\u5df2\u635f\u574f\uff0c\u53d1\u52a8\u673a\u6cc4\u6f0f\u5404\u79cd\u6db2\u4f53\u3002\u63a8\u571f\u673a\u7684\u5f15\u64ce\u574f\u4e86\uff0cHeemeyer \u4e00\u811a\u8e29\u8fdb\u4e86\u5546\u5e97\u7684\u5730\u4e0b\u5ba4\uff0c\u5374\u51fa\u4e0d\u6765\u3002\u5927\u7ea6\u4e00\u5206\u949f\u540e\uff0c\u4e00\u540d\u56f4\u5728\u673a\u5668\u5468\u56f4\u7684\u7279\u8b66\u961f\u5458\u62a5\u544a\u8bf4\uff0c\u4ece\u5bc6\u5c01\u7684\u9a7e\u9a76\u5ba4\u91cc\u542c\u5230\u4e00\u58f0\u67aa\u54cd\u3002\u540e\u6765\u786e\u5b9a Heemeyer \u7528 0.357 \u53e3\u5f84\u7684\u624b\u67aa\u5c04\u4e2d\u4e86\u81ea\u5df1\u7684\u5934\u90e8\u3002 [1] [16] \u8b66\u65b9\u9996\u5148\u4f7f\u7528\u70b8\u836f\u8bd5\u56fe\u62c6\u9664\u94a2\u677f\uff0c\u4f46\u5728\u7b2c\u4e09\u6b21\u7206\u70b8\u5931\u8d25\u540e\uff0c\u4ed6\u4eec\u7528\u6c27\u4e59\u7094\u5272\u70ac\u5c06\u94a2\u677f\u5207\u5f00\u3002\u683c\u5170\u5fb7\u53bf\u5e94\u6025\u7ba1\u7406\u4e3b\u4efb\u5409\u59c6\u970d\u62c9\u6c49\u8868\u793a\uff0c\u5f53\u5c40\u80fd\u591f\u5728 6 \u6708 5 \u65e5\u51cc\u6668 2 \u70b9\u8fdb\u5165\u548c\u79fb\u8d70 Heemeyer \u7684\u5c38\u4f53\u3002 [17] 2005 \u5e74 4 \u6708 19 \u65e5\uff0c\u8be5\u9547\u5ba3\u5e03\u8ba1\u5212\u62a5\u5e9f Heemeyer \u7684\u63a8\u571f\u673a\u3002\u8be5\u8ba1\u5212\u6d89\u53ca\u5c06\u5355\u4e2a\u96f6\u4ef6\u5206\u6563\u5230\u8bb8\u591a\u5355\u72ec\u7684\u5e9f\u6599\u573a\uff0c\u4ee5\u9632\u6b62\u5e26\u8d70\u7eaa\u5ff5\u54c1\u3002 [18] \u9664\u4e86\u4ed6\u7559\u5728\u68da\u5b50\u5899\u4e0a\u7684\u6587\u5b57\u5916\uff0cHeemeyer \u8fd8\u5f55\u5236\u4e86\u4e09\u76d8\u5f55\u97f3\u5e26\uff0c\u89e3\u91ca\u4e86\u4ed6\u7684\u88ad\u51fb\u52a8\u673a\u3002\u78c1\u5e26\u5728\u6bcf\u4e00\u9762\u5305\u542b\u4e24\u4e2a\u5355\u72ec\u7684\u5f55\u97f3\uff0c\u603b\u5171\u516d\u4e2a\u5f55\u97f3\u3002\u5728\u8e0f\u4e0a\u63a8\u571f\u673a\u4e4b\u524d\u4e0d\u4e45\uff0c\u4ed6\u5c06\u8fd9\u4e9b\u5bc4\u7ed9\u4e86\u4ed6\u5728\u5357\u8fbe\u79d1\u4ed6\u5dde\u7684\u5144\u5f1f\u3002 Heemeyer \u7684\u5144\u5f1f\u5c06\u5f55\u97f3\u5e26\u4ea4\u7ed9\u4e86\u8054\u90a6\u8c03\u67e5\u5c40 (FBI)\uff0c\u540e\u8005\u53c8\u5c06\u5b83\u4eec\u9001\u5230\u4e86\u683c\u5170\u5fb7\u53bf\u6cbb\u5b89\u5c40\u3002\u8fd9\u4e9b\u5f55\u97f3\u5e26\u7531\u683c\u5170\u5fb7\u53bf\u6cbb\u5b89\u5b98\u529e\u516c\u5ba4\u4e8e 2004 \u5e74 8 \u6708 31 \u65e5\u53d1\u5e03\u3002\u5f55\u97f3\u5e26\u7684\u957f\u5ea6\u7ea6\u4e3a 2.5 \u5c0f\u65f6\u3002 [19] \u7b2c\u4e00\u5f20\u5f55\u97f3\u662f\u5728 2004 \u5e74 4 \u6708 13 \u65e5\u5f55\u5236\u7684\u3002\u6700\u540e\u4e00\u5f20\u5f55\u97f3\u662f\u5728 5 \u6708 22 \u65e5\u6a2a\u51b2\u76f4\u649e\u524d 13 \u5929\u5f55\u5236\u7684\u3002\u201c\u4e0a\u5e1d\u4e3a\u8fd9\u4efd\u5de5\u4f5c\u521b\u9020\u4e86\u6211\u201d\uff0cHeemeyer \u5728\u7b2c\u4e00\u5f20\u5f55\u97f3\u4e2d\u8bf4\u3002\u4ed6\u8fd8\u8bf4\uff0c\u4e0a\u5e1d\u7684\u8ba1\u5212\u662f\u8ba9\u4ed6\u4e0d\u7ed3\u5a5a\u6216\u6ca1\u6709\u5bb6\u5ead\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u8fdb\u884c\u8fd9\u6837\u7684\u653b\u51fb\u3002 \u201c\u6211\u8ba4\u4e3a\u4e0a\u5e1d\u4f1a\u4fdd\u4f51\u6211\u5b8c\u6210\u673a\u5668\uff0c\u9a7e\u9a76\u5b83\uff0c\u505a\u6211\u5fc5\u987b\u505a\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4e0a\u5e1d\u4e3a\u6211\u5373\u5c06\u627f\u62c5\u7684\u4efb\u52a1\u63d0\u524d\u795d\u798f\u4e86\u6211\u3002\u8fd9\u662f\u6211\u7684\u804c\u8d23\u3002\u4e0a\u5e1d\u8981\u6c42\u6211\u8fd9\u6837\u505a\u3002\u8fd9\u662f\u6211\u8981\u80cc\u8d1f\u7684\u5341\u5b57\u67b6\uff0c\u6211\u5949\u4e0a\u5e1d\u7684\u540d\u80cc\u8d1f\u5b83\u3002\u201d [20] \u8c03\u67e5\u4eba\u5458\u540e\u6765\u53d1\u73b0\u4e86 Heemeyer \u624b\u5199\u7684\u76ee\u6807\u6e05\u5355\u3002\u636e\u8b66\u65b9\u79f0\uff0c\u5176\u4e2d\u5305\u62ec\u4ed6\u6467\u6bc1\u7684\u5efa\u7b51\u7269\u3001\u5f53\u5730\u7684\u5929\u4e3b\u6559\u5802\uff08\u4ed6\u6ca1\u6709\u635f\u574f\uff09\uff0c\u4ee5\u53ca\u5728\u8fc7\u53bb\u7684\u7ea0\u7eb7\u4e2d\u7ad9\u5728\u4ed6\u4e00\u8fb9\u7684\u5404\u79cd\u4eba\u7684\u540d\u5b57\u3002 [21] \u8c03\u67e5\u4eba\u5458\u5728\u4e8b\u4ef6\u53d1\u751f\u540e\u53d1\u73b0\u7684\u7b14\u8bb0\u8868\u660e\uff0c\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u7684\u4e3b\u8981\u52a8\u673a\u662f\u4ed6\u8ba1\u5212\u963b\u6b62\u5728\u4ed6\u7684\u5546\u5e97\u9644\u8fd1\u5efa\u9020\u6df7\u51dd\u571f\u5382\u3002\u8fd9\u4e9b\u7b14\u8bb0\u8868\u660e\u4ed6\u5bf9\u5206\u533a\u6279\u51c6\u5fc3\u6000\u6028\u6068\u3002 \u201c\u6211\u603b\u662f\u613f\u610f\u8bb2\u9053\u7406\uff0c\u76f4\u5230\u6211\u4e0d\u5f97\u4e0d\u8bb2\u9053\u7406\u4e3a\u6b62\u201d\uff0c\u4ed6\u5199\u9053\u3002 \u201c\u6709\u65f6\u5019\uff0c\u901a\u60c5\u8fbe\u7406\u7684\u4eba\u5fc5\u987b\u505a\u4e0d\u8bb2\u9053\u7406\u7684\u4e8b\u3002\u201d [8] ^ abcdefghi \u201c\u63a8\u5e73\u79d1\u7f57\u62c9\u591a\u9547\u7684\u4eba\u5df2\u7ecf\u6b7b\u4e86\u201d\u3002 NBC\u65b0\u95fb\u3002 2004 \u5e74 6 \u6708 5 \u65e5\u3002\u4ece 2013 \u5e74 10 \u6708 23 \u65e5\u7684\u539f\u59cb\u5b58\u6863\u3002\n^ abcd Best, Allen (2004 \u5e74 7 \u6708)\u3002 \u201c\u5929\u5802\u7684\u9ed1\u6697\u9762\u201d\u3002\u79d1\u7f57\u62c9\u591a\u4e2d\u592e\u6742\u5fd7\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2007 \u5e74 3 \u6708 11 \u65e5\u3002 ^ \u201c\u6b66\u88c5\u4eba\u5458\u7ee7\u7eed\u4f7f\u7528\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u201d\u3002 UMDstudents.com\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2007 \u5e74 2 \u6708 20 \u65e5\u3002 ^ ab \u82f1\u6208\u5c14\u5fb7\uff0c\u7ea6\u7ff0\uff1b\u5e03\u5217\u5854\u5c3c\u963f\u7eb3\u65af; Howard Pankratz\uff082004 \u5e74 6 \u6708 6 \u65e5\uff09\u3002 \u201c\u2018\u7a81\u7136\u53d1\u751f\u7684\u4e8b\u60c5\u2019\uff1a\u5acc\u7591\u4eba\u60c5\u7eea\u6fc0\u52a8\uff0c\u5bf9\u91cd\u65b0\u5206\u533a\u7684\u6597\u4e89\u611f\u5230\u6124\u6012\u201d\u3002\u4e39\u4f5b\u90ae\u62a5\u3002\u7b2c A01 \u9875\u3002 \u201c\u4ed6\u5a01\u80c1\u5230\u6211\u4e08\u592b\u7684\u751f\u547d\uff0c\u201d\u5c45\u6c11\u514b\u91cc\u65af\u8482\u8d1d\u514b\u56de\u5fc6\u8bf4\u3002 \u201c\u4ed6\u7528\u6d88\u58f0\u5668\u5a01\u80c1\u6211\u4e08\u592b\u3002\u201d\u8d1d\u514b\u8bf4\uff0c\u5979\u548c\u5979\u7684\u4e08\u592b\u9053\u683c\u5f00\u7740\u4e00\u8f86\u5361\u8f66\u53bb\u5e0c\u8fc8\u8036\u7684\u5546\u5e97\uff0c\u4ed6\u5728\u4e0a\u9762\u5b89\u88c5\u4e86\u9519\u8bef\u7c7b\u578b\u7684\u6d88\u58f0\u5668\u3002\u4ed6\u4eec\u62d2\u7edd\u4ed8\u6b3e\uff0cChristie Baker \u8bf4\u4ed6\u4eec\u5f88\u5feb\u5c31\u901a\u8fc7\u53e3\u8033\u76f8\u4f20\u542c\u8bf4\u4e86 Heemeyer \u7684\u5a01\u80c1\u3002\u5979\u8bf4\uff0c\u4ed6\u4eec\u901a\u8fc7\u4e2d\u95f4\u4eba\u5411 Heemeyer \u652f\u4ed8\u4e86 124 \u7f8e\u5143\u7684\u73b0\u91d1\u3002 ^ abcd\u201c\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u7684\u6839\u6e90\u6df1\u5165\u201d\u3002\u675c\u5170\u6208\u7535\u62a5\u3002 2004 \u5e74 6 \u6708 24 \u65e5\u3002\u4ece 2017 \u5e74 6 \u6708 10 \u65e5\u539f\u59cb\u5b58\u6863\u3002 ^ \u201c\u683c\u5170\u6bd4\u6a2a\u51b2\u76f4\u649e\u7684\u635f\u5931\u9884\u8ba1\u5c06\u8d85\u8fc7\u6570\u767e\u4e07\u201d\u3002 KMGH-TV\u3002 2004 \u5e74 6 \u6708 7 \u65e5\u3002\u4ece 2007 \u5e74 1 \u6708 15 \u65e5\u7684\u539f\u59cb\u5b58\u6863\u3002 ^ ab\u201c\u5de5\u4f5c\u4eba\u5458\u5f00\u59cb\u62c6\u9664\u683c\u5170\u6bd4\u63a8\u571f\u673a\u201d\u3002 KMGH-TV\u3002 2005 \u5e74 4 \u6708 15 \u65e5\u3002\u4ece 2012 \u5e74 3 \u6708 15 \u65e5\u7684\u539f\u59cb\u5b58\u6863\u3002 ^ ab \u201cRampager \u5f88\u60ca\u8bb6\u4ed6\u7684\u8ba1\u5212\u88ab\u5ffd\u89c6\u4e86\u201d\u3002\u53d1\u8a00\u4eba\u8bc4\u8bba\u3002 2004 \u5e74 6 \u6708 10 \u65e5\u3002\u5b58\u6863\u4e8e 2007 \u5e74 3 \u6708 11 \u65e5\u3002\n^ \u201c\u72c2\u66b4 - \u5766\u514b\uff0c\u63a8\u571f\u673a\uff0c\u65e0\u8bba\u4f60\u6709\u4ec0\u4e48\uff01\u201d\u3002 2006 \u5e74 10 \u6708 17 \u65e5\u4ece\u539f\u7248\u5b58\u6863\u3002^\u201c\u51b2\u51fb\u6ce2\u7b2c 8 \u96c6\u201d\u3002\u5386\u53f2\u9891\u9053\u3002 2008 \u5e74 2 \u6708 1 \u65e5\u3002\u4ece 2008 \u5e74 3 \u6708 26 \u65e5\u7684\u539f\u59cb\u5b58\u6863\u3002 ^ \u6770\u68ee\uff0c\u6ce2\u7eb9\u7ba1\u3002 \u201c\u6740\u571f\u673a\u4e4b\u6012\u201d\u3002\u8be5\u6b7b\u7684Interesting.com\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2014 \u5e74 6 \u6708 22 \u65e5\u3002 ^ \u6bd4\u5a1c\uff0c\u6258\u5c3c\u4e9a\u3002 \u300a\u683c\u5170\u6bd4\uff1a2004\u5e74\u5386\u53f2\u9891\u9053\u8282\u76ee\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u300b\u3002\u5929\u559c\u6bcf\u65e5\u65b0\u95fb\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2011 \u5e74 3 \u6708 1 \u65e5\u3002 ^ Correll, Deedee\uff082004 \u5e74 6 \u6708 6 \u65e5\uff09\u3002 \u201c\u6028\u6068\u4ea7\u751f\u6bc1\u706d\u7684\u75d5\u8ff9\uff1a\u683c\u5170\u6bd4\u4eba\u5728\u88c5\u7532\u63a8\u571f\u673a\u6a2a\u51b2\u76f4\u649e\u540e\u81ea\u6740\u201d\u3002\u516c\u62a5\u3002\u79d1\u7f57\u62c9\u591a\u65af\u666e\u6797\u65af\u3002 2016 \u5e74 4 \u6708 5 \u65e5\u539f\u59cb\u5b58\u6863 - \u901a\u8fc7 HighBeam Research\u3002 ^ \u201c\u63a8\u571f\u673a\u5185\u90e8\u201d\u3002\u4e39\u4f5b\u90ae\u62a5\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2007 \u5e74 12 \u6708 14 \u65e5\u3002 ^ Franscell, Ron\uff082011 \u5e74 4 \u6708 5 \u65e5\uff09\u3002\u72af\u7f6a\u7231\u597d\u8005\u7684\u6d1b\u57fa\u5c71\u8109\u4ea1\u547d\u4e4b\u5f92\u6307\u5357\u3002\u5eb7\u6d85\u72c4\u683c\u5dde\u5409\u5c14\u798f\u5fb7\uff1a\u83ab\u91cc\u65af\u56fe\u4e66\u51fa\u7248\u6709\u9650\u8d23\u4efb\u516c\u53f8\u3002\u7b2c 107-108 \u9875\u3002\n^ \u963f\u5409\u62c9\u5c14\uff0c\u7ea6\u7ff0\uff082004 \u5e74 6 \u6708 25 \u65e5\uff09\u3002 \u201c\u88c5\u7532\u63a8\u571f\u673a\u4e0d\u597d\u8d70\uff1a\u8bb0\u8005\u53ef\u4ee5\u7aa5\u89c6 Heemeyer \u7684\u7834\u574f\u6027\u673a\u5668\u201d\u3002\u843d\u57fa\u5c71\u65b0\u95fb\u3002\u4e39\u4f5b\u3002 2016 \u5e74 4 \u6708 5 \u65e5\u539f\u59cb\u5b58\u6863 - \u901a\u8fc7 HighBeam Research\u3002\u4ed6\u7ed3\u675f\u4e86\u4ed6\u7684\u6a2a\u51b2\u76f4\u649e\uff0c\u5728\u4ed6\u7684\u6050\u6016\u7edf\u6cbb\u4e2d\u7559\u4e0b\u4e86\u51e0\u5ea7\u5efa\u7b51\u7269\u3002 Granby Letter Saver Inc.\u3001Granby \u7f8e\u5bb9\u9662\u3001Luksa \u5bb6\u5ead\u9910\u5385\u4ee5\u53ca\u7ecf\u8fc7\u7b2c 4 \u4e2a\u8def\u53e3\u7684\u5730\u65b9\u3002 ^ Banda, P. Solomon\uff082004 \u5e74 6 \u6708 6 \u65e5\uff09\u3002 \u201c\u5b98\u5458\uff1a\u5f00\u63a8\u571f\u673a\u7684\u4eba\u5df2\u7ecf\u6b7b\u4e86\u201d\u3002\u5965\u514b\u5170\u8bba\u575b\u62a5\u3002\u5723\u8377\u897f\u3002 2016 \u5e74 4 \u6708 5 \u65e5\u539f\u59cb\u5b58\u6863 - \u901a\u8fc7 HighBeam Research\u3002 ^ Crecente, Brian D.\uff082005 \u5e74 3 \u6708 1 \u65e5\uff09\u3002 \u201c\u63a8\u571f\u673a\u81ea\u6398\u575f\u5893\uff1a\u88ab\u6124\u6012\u7684\u5c45\u6c11\u7528\u6765\u653b\u51fb\u683c\u5170\u6bd4\uff0c\u673a\u5668\u88ab\u5f53\u4f5c\u5e9f\u54c1\u62c6\u9664\u201d\u3002\u843d\u57fa\u5c71\u65b0\u95fb\u3002\u4e39\u4f5b\u3002 2016 \u5e74 4 \u6708 5 \u65e5\u539f\u59cb\u5b58\u6863 - \u901a\u8fc7 HighBeam Research\u3002 ^ \u201c\u63a8\u5e73\u683c\u5170\u6bd4\u7684\u4eba\u8bf4\u4ed6\u4ece\u4e0a\u5e1d\u90a3\u91cc\u5f97\u5230\u4e86\u60f3\u6cd5\u201d\u3002 KMGH-TV\u3002\u539f\u59cb\u5b58\u6863\u4e8e 2008 \u5e74 4 \u6708 13 \u65e5\u3002 Bagsarian, Tom\uff082005 \u5e74 11 \u6708 1 \u65e5\uff09\u3002 \u201c\u683c\u5170\u6bd4\u6050\u6016\u4e8b\u4ef6\u201d\uff08PDF\uff09\u3002\u6df7\u51dd\u571f\u751f\u4ea7\u5546\u3002\u7f57\u65af\u8499\u7279\uff0c\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff1a\u6c49\u5229\u4f0d\u5fb7\u3002 2016 \u5e74 4 \u6708 14 \u65e5\u4ece\u539f\u4ef6 (PDF) \u5b58\u6863\u3002", "note_en": "Jump to navigation  Jump to search  Marvin John Heemeyer (October 28, 1951 \u2013 June 4, 2004) was an  automobile  muffler repair shop owner who demolished numerous buildings with a modified  bulldozer in  Granby,  Colorado, on June 4, 2004.\n Heemeyer had feuded with Granby town officials, particularly over fines for violating  city health ordinances after local officials disconnected Heemeyer&#39;s business from the city sewage system to make way for a concrete plant on an adjacent parcel. He was subsequently fined for improperly dumping sewage from his business instead of connecting to the city sewer system. Over about eighteen months Heemeyer had secretly modified a  Komatsu D355A  bulldozer by adding layers of  steel and  concrete, intended to serve as  armor.  [1] On June 4, 2004, Heemeyer&#39;s feud with Granby culminated in a spree in which he used the armored bulldozer to demolish the Granby  town hall, the former mayor&#39;s house, and several other buildings.  [1] Heemeyer&#39;s rampage concluded with his  suicide, after his bulldozer became trapped in the basement of a hardware store he had been in the process of destroying.\n   Marvin Heemeyer was born on October 28, 1951, in  South Dakota and lived in  Grand Lake,  Colorado, about 16 miles (26\u00a0km) away from  Granby.  [2] According to a neighbor, Heemeyer moved to town more than ten years before the incident. His friends stated that he had no relatives in the Granby\u2013Grand Lake area.  [3]\n John Bauldree, a friend of Heemeyer&#39;s, said that he was a likable person. Heemeyer&#39;s brother Ken stated that he &#34;would bend over backwards for anyone&#34;. However, while many people described Heemeyer as an affable person, local resident Christie Baker claimed that her husband was threatened by Heemeyer after refusing to pay for a disputed muffler repair.  [4] Baker said her husband later paid Heemeyer $124 via an  intermediary.  [4]\n  In 1992, Heemeyer purchased 2 acres (0.8\u00a0ha) of land from the  Resolution Trust Corporation, the federal agency organized to handle the assets of failed  savings and loan associations, for $42,000 to build a muffler shop. He subsequently agreed to sell the land to Cody Docheff to build a concrete batch plant,  Mountain Park Concrete, for $250,000. According to Susan Docheff, Heemeyer changed his mind and increased the price to $375,000, then to a deal worth approximately $1 million. Some [   who?] believed that this negotiation happened before the rezoning proposal was heard by the town council.  [5]\n In 2001, Granby&#39;s zoning commission and trustees approved the construction of the concrete plant. Heemeyer unsuccessfully appealed the decision, claiming the construction blocked access to his shop. He was subsequently fined $2,500  [6] by the town council and a city judge for various violations, including &#34;not being hooked up to the sewer line&#34;; he had initially been unable to connect to the new sewer line as the line ran 60 feet (18\u00a0m) away from his property and the city expected him to pay the nearly $80,000 cost of laying the connector.\n   Heemeyer&#39;s bulldozer was a modified  Komatsu D355A,  [7] which he referred to as the &#34;MK Tank&#34; in audio recordings, fitted with makeshift armor plating covering the cabin,  engine, and parts of the  tracks. In places, this armor was over 1 foot (30\u00a0cm) thick, consisting of 5,000\u00a0psi (34\u00a0MPa) Quikrete  concrete mix sandwiched between sheets of  tool steel (acquired from an automotive dealer in  Denver), to make ad-hoc  composite armor. This made the machine impervious to  small arms fire and resistant to  explosives. Three external explosions and more than 200 rounds of  ammunition fired at the bulldozer had no effect on it.  [1]\n For visibility, the bulldozer was fitted with several  video cameras linked to two  monitors mounted on the vehicle&#39;s dashboard. The cameras were protected on the outside by 3-inch (76\u00a0mm) shields of clear bulletproof  lexan.  [1] Compressed-air nozzles were fitted to blow dust away from the video cameras. Onboard fans and an air conditioner were used to keep Heemeyer cool while driving. He had made three gun-ports, fitted for a .50 caliber  rifle, a .308  semi-automatic rifle, and a .22LR rifle, all fitted with a one-half-inch-thick (1.3\u00a0cm) steel plate. Heemeyer apparently had no intention of leaving the cabin once he entered it.  [1] Authorities initially speculated that he may have used a homemade crane\u00a0\u2013 found in his garage\u00a0\u2013 to lower the armor hull over the dozer and himself. &#34;Once he tipped that lid shut, he knew he wasn&#39;t getting out&#34;, Daly said. Investigators searched the garage where they believed that Heemeyer built the vehicle and found cement and armor steel.  [1]\n &#34;It is interesting to observe that I was never caught&#34;, Heemeyer wrote. &#34;This was a part-time project over a  1 + 1\u2044 2 year time period.&#34; He was surprised that several men, who had visited the shed late the previous year, had not noticed the modified bulldozer &#34;especially with the 2,000-pound [910\u00a0kg] lift fully exposed ... somehow their vision was clouded&#34;.  [8]\n  On June 4, 2004, Heemeyer drove his armored bulldozer through the wall of his former business, the concrete plant, the  town hall, the office of the local newspaper that editorialized against him, the home of a former mayor (in which the mayor&#39;s widow then resided), and a hardware store owned by another man Heemeyer named in a lawsuit, as well as a few others. Heemeyer had leased his business to a trash company and sold the property several months before the rampage.\n The attack lasted for two hours and seven minutes, damaging thirteen buildings,  [7] knocking out natural gas service to the town hall and the concrete plant, damaging a truck, and destroying part of a utility service center.  [9] Despite the great damage to property, no one besides Heemeyer (by a self-inflicted gunshot wound) was killed in the event.  [1] However, the modified bulldozer came to be known as &#34;Killdozer&#34; after the name of  a short story by  Theodore Sturgeon.  [10] The damage was estimated at $7 million.  [11]  [12] According to  Grand County commissioner James Newberry, emergency dispatchers used the  reverse 911 emergency system to notify many residents and property owners of the rampage going on in the town.  [13]\n Defenders of Heemeyer&#39;s contended that he made a point of not hurting anybody during his bulldozer rampage;  [1] Ian Daugherty, a bakery owner, said Heemeyer &#34;went out of his way&#34; not to harm anyone. Others offered different views. The sheriff&#39;s department argued the fact that no one was injured was not due to good intent as much as to good luck. Heemeyer had installed two rifles in firing ports on the inside of the bulldozer,  [14] and fired fifteen bullets from his rifle at power transformers and propane tanks. &#34;Had these tanks ruptured and exploded, anyone within one-half mile (800\u00a0m) of the explosion could have been endangered&#34;, the sheriff&#39;s department said. Twelve police officers and residents of a senior citizens complex were within such a range.  [5] Heemeyer fired many bullets from his semi-automatic rifle at Cody Docheff when Docheff tried to stop the assault on his concrete plant by using a  scraper, which was pushed aside by Heemeyer&#39;s bulldozer. Later, Heemeyer fired on two state patrol officers before they had fired at him.  [5] The sheriff&#39;s department also noted that eleven of the thirteen buildings Heemeyer bulldozed were occupied until moments before their destruction. At the town library, for example, a children&#39;s program was in progress when the incident began.  [2]  [5]\n One officer dropped a  flash-bang grenade down the bulldozer&#39;s exhaust pipe, with no apparent effect. Local and state patrol, including a  SWAT team, walked behind and beside the bulldozer, occasionally firing, but the armored bulldozer was impervious to their shots. Attempts to disable the bulldozer&#39;s cameras with gunfire failed as the bullets were unable to penetrate the 3-inch (7.6\u00a0cm) bulletproof plastic. At one point,  undersheriff Glenn Trainor climbed atop the bulldozer and rode it &#34;like a  bronc buster, trying to figure out a way to get a bullet inside the dragon&#34;.  [2] However, he was forced to jump off to avoid being hit with debris.  [2]\n At this point, local authorities and the  Colorado State Patrol feared they were running out of options in terms of firepower, and that Heemeyer would soon turn against civilians in Granby.  Governor  Bill Owens allegedly considered authorizing the  National Guard to use either an  Apache  attack helicopter equipped with a  Hellfire missile or a two-man fire team equipped with a  Javelin  anti-tank missile to destroy the bulldozer. This was quickly deemed unnecessary when Heemeyer became trapped in the basement of a  Gambles hardware store. As late as 2011, Governor Owens&#39;s staff still vehemently denied considering such a course of action, but since then members of the State Patrol revealed that, to the contrary, the governor did consider authorizing an attack but ultimately decided against it due to the potential for  collateral damage of a missile strike in the heart of Granby being significantly higher than what Heemeyer could have caused with his bulldozer.  [15]\n Two problems arose as Heemeyer destroyed the Gambles hardware store. The  radiator of the bulldozer had been damaged and the engine was leaking various fluids. The bulldozer&#39;s engine failed, and Heemeyer dropped one tread into the store&#39;s basement, but could not get out. About a minute later, one of the SWAT team members, who had swarmed around the machine, reported hearing a single gunshot from inside the sealed cab. It was later determined that Heemeyer had shot himself in the head with a .357-caliber  handgun.  [1]  [16]\n Police first used explosives in an attempt to remove the steel plates, but after the third explosion failed, they cut through them with an  oxyacetylene cutting torch. Grand County Emergency Management Director Jim Holahan stated that authorities were able to access and remove Heemeyer&#39;s body at 2 a.m. on June 5.  [17]\n  On April 19, 2005, the town announced plans to  scrap Heemeyer&#39;s bulldozer. The plan involved dispersing individual pieces to many separate scrap yards to prevent souvenir-taking.  [18]\n  In addition to writings that he left on the wall of his shed, Heemeyer recorded three audio tapes explaining his motivation for the attack. The tapes contained two separate recordings on each side for a total of six recordings. He mailed these to his brother in South Dakota shortly before stepping into his bulldozer. Heemeyer&#39;s brother turned the tapes over to the  Federal Bureau of Investigation (FBI), who in turn sent them to the Grand County Sheriff&#39;s Department. The tapes were released by the Grand County Sheriff&#39;s Office on August 31, 2004. The tapes are about 2.5 hours in length.  [19] The first recording was made on April 13, 2004. The last recording was made thirteen days before the rampage on May 22.\n &#34;God built me for this job&#34;, Heemeyer said in the first recording. He also said it was God&#39;s plan that he not be married or have a family so that he could be in a position to carry out such an attack. &#34;I think God will bless me to get the machine done, to drive it, to do the stuff that I have to do&#34;, he said. &#34;God blessed me in advance for the task that I am about to undertake. It is my duty. God has asked me to do this. It&#39;s a cross that I am going to carry and I&#39;m carrying it in God&#39;s name.&#34;  [20]\n Investigators later found Heemeyer&#39;s handwritten list of targets. According to the police, it included the buildings he destroyed, the local Catholic church (which he did not damage), and the names of various people who had sided against him in past disputes.  [21] Notes found by investigators after the incident indicated that the primary motivation for the bulldozer rampage was his plan to stop the concrete plant from being built near his shop. These notes indicated that he held grudges over the zoning approval. &#34;I was always willing to be reasonable until I had to be unreasonable&#34;, he wrote. &#34;Sometimes reasonable men must do unreasonable things.&#34;  [8]\n      ^     a     b     c     d     e     f     g     h     i    &#34;Man who bulldozed through Colo. town is dead&#34;.  NBC News. June 5, 2004.  Archived from the original on October 23, 2013 .\n ^     a     b     c     d    Best, Allen (July 2004).  &#34;The Dark Side of Paradise&#34;.  Colorado Central Magazine. Archived from  the original on March 11, 2007 .\n ^     &#34;Armed man goes on bulldozer rampage&#34;. UMDstudents.com. Archived from  the original on February 20, 2007 .\n ^     a     b    Ingold, John; Brittany Anas; Howard Pankratz (June 6, 2004). &#34; &#39;Something snapped&#39;: Suspect called emotional, angry over rezoning fight&#34;.   The Denver Post. pp.\u00a0A01.  &#39;He has threatened my husband&#39;s life,&#39; resident Christie Baker recalled. &#39;He threatened my husband over a muffler.&#39; Baker said she and her husband, Doug, had taken a truck to Heemeyer&#39;s shop, and he installed the wrong type of muffler on it. They refused to pay, and Christie Baker said they soon heard through word of mouth about Heemeyer&#39;s threat. They paid the $124 in cash, using an intermediary to give Heemeyer the money, she said.\n ^     a     b     c     d     &#34;Dozer rampage roots run deep&#34;.   Durango Telegraph. June 24, 2004.  Archived from the original on June 10, 2017 .\n ^     &#34;Granby Rampage Damage Expected To Exceed several Million&#34;.  KMGH-TV. June 7, 2004. Archived from  the original on January 15, 2007 .\n ^     a     b     &#34;Crews Begin Dismantling Granby Bulldozer&#34;.  KMGH-TV. April 15, 2005. Archived from  the original on March 15, 2012 .\n ^     a     b     &#34;Rampager was surprised his plans went unnoticed&#34;.   The Spokesman Review. June 10, 2004. Archived from  the original on March 11, 2007 .\n ^     &#34;Rampages \u2013 Tanks, Bulldozers, Whatever You Got!&#34;. Archived from  the original on October 17, 2006.\n ^     &#34;Shockwave Episode 08&#34;.  The History Channel. February 1, 2008. Archived from  the original on March 26, 2008 .\n ^    Jason, Bellows.  &#34;The Wrath of the Killdozer&#34;.  DamnInteresting.com.  Archived from the original on June 22, 2014 .\n ^    Bina, Tonya.  &#34;Granby: 2004 bulldozer rampage subject of History Channel program&#34;.  Sky-Hi Daily News. Archived from  the original on March 1, 2011 .\n ^    Correll, Deedee (June 6, 2004).  &#34;Grudge spawns trail of destruction: Granby man kills himself after rampage in armor-plated bulldozer&#34;.   The Gazette. Colorado Springs. Archived from   the original on April 5, 2016  \u2013 via  HighBeam Research.\n ^     &#34;Interior of Bulldozer&#34;.   The Denver Post.  Archived from the original on December 14, 2007 .\n ^    Franscell, Ron (April 5, 2011).  The Crime Buff&#39;s Guide to the Outlaw Rocky Mountains. Guilford, Connecticut: Morris Book Publishing LLC. pp.\u00a0107\u2013108.\n ^    Aguilar, John (June 25, 2004).  &#34;Armored dozer was bad to go: Reporters get peek inside Heemeyer&#39;s destructive machine&#34;.   Rocky Mountain News. Denver. Archived from   the original on April 5, 2016  \u2013 via  HighBeam Research.  He ended his rampage leaving few buildings out of his reign of terror. Granby Letter Saver inc., the Granby Beauty Salon, Luksa Family Restaurant, and places past the 4th intersection.\n ^    Banda, P. Solomon (June 6, 2004).  &#34;Officials: Man who drove bulldozer is dead&#34;.   The Oakland Tribune. San Jose. Archived from   the original on April 5, 2016  \u2013 via  HighBeam Research.\n ^    Crecente, Brian D. (March 1, 2005).  &#34;Dozer digs its own grave: Used by angry resident to attack Granby, machine to be dismantled as scrap&#34;.   Rocky Mountain News. Denver. Archived from   the original on April 5, 2016  \u2013 via  HighBeam Research.\n  ^     &#34;Man Who Bulldozed Granby Says He Got Idea From God&#34;.  KMGH-TV. Archived from  the original on April 13, 2008 .\n  Bagsarian, Tom (November 1, 2005).  &#34;Terror in Granby&#34;  (PDF).  The Concrete Producer. Rosemont, IL:  Hanley Wood. Archived from  the original  (PDF) on April 14, 2016 .", "posttime": "2021-07-25 00:54:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "heemeyer", "title": "Marvin Heemeyer (The Killdozer Man)", "title_en": "Marvin Heemeyer (The Killdozer Man)", "transed": 1, "url": "https://en.wikipedia.org/wiki/Marvin_Heemeyer", "via": "", "real_tags": ["heemeyer"]}, {"category": "", "categoryclass": "", "imagename": "422aeba2afe06a3ae71ac982600960c3.jpeg", "infoid": 1069485, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SIOUX FALLS\uff0cSD\uff08\u7f8e\u8054\u793e\uff09\u2014\u2014\u4e24\u5bb6\u5bfb\u6c42\u5728\u4e2d\u897f\u90e8\u5efa\u9020\u6570\u5343\u82f1\u91cc\u7ba1\u9053\u7684\u516c\u53f8\u627f\u8bfa\uff0c\u8fd9\u9879\u52aa\u529b\u5c06\u6709\u52a9\u4e8e\u800c\u4e0d\u662f\u963b\u788d\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u6597\u4e89\uff0c\u5c3d\u7ba1\u4e00\u4e9b\u73af\u4fdd\u7ec4\u7ec7\u4ecd\u7136\u6301\u6000\u7591\u6001\u5ea6\u3002\u7ba1\u9053\u5c06\u4ece\u5317\u8fbe\u79d1\u4ed6\u5dde\u5ef6\u4f38\u5230\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff0c\u6709\u53ef\u80fd\u5c06\u7389\u7c73\u5e26\u8f6c\u53d8\u4e3a\u4e16\u754c\u4e0a\u6700\u5927\u7684\u78b3\u6355\u83b7\u548c\u50a8\u5b58\u6280\u672f\u8d70\u5eca\u4e4b\u4e00\u3002\u73af\u4fdd\u6d3b\u52a8\u5bb6\u548c\u571f\u5730\u6240\u6709\u8005\u963b\u788d\u4e86\u8be5\u5730\u533a\u5176\u4ed6\u62df\u5efa\u7684\u7ba1\u9053\u8f93\u9001\u77f3\u6cb9\uff0c\u5c06\u57cb\u5728\u5730\u4e0b\u7684\u78b3\u8f93\u9001\u5230\u53d1\u52a8\u673a\u6216\u5de5\u5382\uff0c\u5728\u90a3\u91cc\u71c3\u70e7\u548c\u6392\u653e\u3002\u65b0\u9879\u76ee\u5c06\u901a\u8fc7\u5728\u4e59\u9187\u7cbe\u70bc\u5382\u6355\u83b7\u4e8c\u6c27\u5316\u78b3\u5e76\u5c06\u5176\u8fd0\u8f93\u5230\u53ef\u4ee5\u5c06\u5176\u63a9\u57cb\u5728\u5730\u4e0b\u6570\u5343\u82f1\u5c3a\u5904\u7684\u5730\u70b9\u6765\u5b9e\u73b0\u76f8\u53cd\u7684\u76ee\u7684\u3002\u89c4\u5212\u7ba1\u9053\u7684\u4e24\u5bb6\u516c\u53f8\u4f3c\u4e4e\u90fd\u6e34\u671b\u5ba3\u4f20\u5176\u73af\u5883\u6548\u76ca\u3002\u4ed6\u4eec\u7684\u7f51\u7ad9\u4ee5\u6674\u6717\u7684\u84dd\u5929\u548c\u7eff\u8272\u7530\u91ce\u7684\u56fe\u50cf\u4e3a\u7279\u8272\uff0c\u5e76\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u9879\u76ee\u5982\u4f55\u4ea7\u751f\u4e0e\u6bcf\u5e74\u4ece\u9053\u8def\u4e0a\u79fb\u9664\u6570\u767e\u4e07\u8f86\u6c7d\u8f66\u76f8\u540c\u7684\u6c14\u5019\u5f71\u54cd\u3002\u7136\u800c\uff0c\u4e00\u4e9b\u73af\u4fdd\u4eba\u58eb\u548c\u571f\u5730\u6240\u6709\u8005\u5df2\u7ecf\u5bf9\u7ba1\u9053\u7684\u73af\u5883\u6548\u76ca\u548c\u5b89\u5168\u6027\u6301\u8c28\u614e\u6001\u5ea6\uff0c\u8fd9\u589e\u52a0\u4e86\u5728\u8fd9\u4e9b\u9879\u76ee\u5bfb\u6c42\u65bd\u5de5\u8bb8\u53ef\u65f6\u53d1\u751f\u53e6\u4e00\u573a\u6fc0\u6218\u7684\u53ef\u80fd\u6027\u3002\u79d1\u5b66\u4e0e\u73af\u5883\u5065\u5eb7\u7f51\u7edc\u4e3b\u4efb\u5361\u7f57\u7433\u00b7\u62c9\u82ac\u65af\u4f69\u683c (Carolyn Raffensperger) \u8868\u793a\uff1a\u201c\u4ed6\u4eec\u4f3c\u4e4e\u5728\u7ecf\u8425\u4e00\u4e2a\u5192\u9669\u7684\u8d4c\u573a\uff0c\u6211\u4eec\u5c06\u4e3a\u6b64\u4ed8\u51fa\u4ee3\u4ef7\uff0c\u201d\u5979\u8868\u793a\u62c5\u5fc3\u6cc4\u6f0f\u53ef\u80fd\u4f1a\u4f7f\u50cf\u5979\u8fd9\u6837\u7684\u5317\u8fbe\u79d1\u4ed6\u5dde\u5730\u4e3b\u9762\u4e34\u98ce\u9669. \u201c\u6211\u4eec\u9700\u8981\u975e\u5e38\u4ed4\u7ec6\u5730\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u6211\u8ba4\u4e3a\u7403\u5458\u4eec\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d\u7ba1\u9053\u53ef\u80fd\u4f1a\u9677\u5165\u73af\u4fdd\u4e3b\u4e49\u8005\u4e4b\u95f4\u7684\u957f\u671f\u5206\u6b67\u3002\u4e54\u62dc\u767b\u603b\u7edf\u548c\u8bb8\u591a\u5171\u548c\u515a\u4eba\u6b63\u5728\u63a8\u52a8\u4e00\u9879\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u6218\u7565\uff0c\u8be5\u6218\u7565\u4e3a\u4f7f\u7528\u78b3\u6355\u83b7\u548c\u50a8\u5b58\u6765\u51cf\u5c11\u6392\u653e\u7684\u884c\u4e1a\u63d0\u4f9b\u4e86\u7ecf\u6d4e\u5229\u76ca\u3002\u4f46\u5176\u4ed6\u4eba\uff0c\u5982\u7eff\u8272\u548c\u5e73\u7ec4\u7ec7\u548c\u4f5b\u8499\u7279\u5dde\u53c2\u8bae\u5458\u4f2f\u5c3c\u6851\u5fb7\u65af\uff0c\u8ba4\u4e3a\u91cd\u70b9\u5e94\u8be5\u5b8c\u5168\u653e\u5728\u5f00\u53d1\u53ef\u518d\u751f\u80fd\u6e90\u4e0a\uff0c\u78b3\u6355\u83b7\u53ea\u4f1a\u5ef6\u957f\u5bf9\u5316\u77f3\u71c3\u6599\u7684\u4f9d\u8d56\u3002\nNavigator CO2 Ventures \u6b63\u5728\u89c4\u5212\u4e00\u6761\u7ba1\u9053\uff0c\u8be5\u7ba1\u9053\u5c06\u901a\u8fc7\u7231\u8377\u534e\u5dde\u3001\u5357\u8fbe\u79d1\u4ed6\u5dde\u3001\u5185\u5e03\u62c9\u65af\u52a0\u5dde\u3001\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5ef6\u4f38\u8d85\u8fc7 1,200 \u82f1\u91cc\uff081,931 \u516c\u91cc\uff09\uff0c\u8be5\u516c\u53f8\u8868\u793a\u6b63\u5728\u63d0\u4f9b\u201c\u4e3a\u66f4\u7eff\u8272\u7684\u661f\u7403\u63d0\u4f9b\u78b3\u6355\u83b7\u89e3\u51b3\u65b9\u6848\u201d\u3002 Summit Carbon Solutions \u7684\u7ba1\u9053\u5c06\u628a\u7231\u8377\u534e\u5dde\u3001\u660e\u5c3c\u82cf\u8fbe\u5dde\u3001\u5185\u5e03\u62c9\u65af\u52a0\u5dde\u548c\u5357\u8fbe\u79d1\u4ed6\u5dde\u7684\u70bc\u6cb9\u5382\u8fde\u63a5\u5230\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u4e00\u4e2a\u5c01\u5b58\u573a\uff0c\u8be5\u516c\u53f8\u8868\u793a\u8ba1\u5212\u5efa\u8bbe\u4e16\u754c\u4e0a\u6700\u5927\u7684\u78b3\u6355\u83b7\u548c\u50a8\u5b58\u9879\u76ee\u3002\u4e24\u5bb6\u516c\u53f8\u90fd\u5e0c\u671b\u5728 2024 \u5e74\u4e4b\u524d\u5f00\u59cb\u4e00\u4e9b\u8fd0\u8425\u3002\u201c\u6709\u5982\u6b64\u591a\u7684\u793e\u4f1a\u52a8\u529b\u8868\u660e\uff0c\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u505a\u7684\u2014\u2014\u5e94\u8be5\u505a\u7684\uff0c\u9700\u8981\u505a\u7684\u2014\u2014\u4e3a\u4e86\u516c\u4f17\u7684\u5229\u76ca\uff0c\u201dNavigator CO2 Ventures \u7684\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u7279\u7ef4\u5b81\u8bf4\u3002 \u201c\u6211\u7684\u9879\u76ee\u548c\u8bb8\u591a\u5176\u4ed6\u9879\u76ee\u5c06\u4f1a\u5b8c\u6210\uff0c\u4e5f\u5e94\u8be5\u5b8c\u6210\u3002\u201d\u652f\u6301\u8005\u8bf4\uff0c\u7ba1\u9053\u662f\u519c\u4e1a\u4f01\u4e1a\u548c\u73af\u5883\u6025\u9700\u7684\u80dc\u5229\u3002\u8fd9\u4e24\u4e2a\u9879\u76ee\u9884\u8ba1\u5c06\u8017\u8d44\u6570\u5341\u4ebf\u7f8e\u5143\uff0c\u4ece\u800c\u523a\u6fc0\u5efa\u7b51\u4e1a\u5c31\u4e1a\u3002\u4ed6\u4eec\u63a8\u8fdb\u4e86\u4e00\u9879\u5bf9\u5b9e\u73b0 2050 \u5e74\u4e8c\u6c27\u5316\u78b3\u51c0\u96f6\u6392\u653e\u76ee\u6807\u81f3\u5173\u91cd\u8981\u7684\u6280\u672f\u2014\u2014\u5176\u4e2d\u6bcf\u4e00\u514b\u6392\u653e\u90fd\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6700\u7ec8\u5c06\u5176\u4ece\u5927\u6c14\u4e2d\u5438\u56de\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u3002 \u201c\u5404\u65b9\u90fd\u8d62\u4e86\u3002\u60a8\u53ef\u4ee5\u663e\u7740\u51cf\u5c11\u78b3\u6392\u653e\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u7ef4\u6301\u90a3\u4e9b\u4f5c\u4e3a\u8be5\u56fd\u4e0d\u540c\u5730\u533a\u547d\u8109\u7684\u884c\u4e1a\uff0c\u201d\u5927\u5e73\u539f\u7814\u7a76\u6240\u7684\u78b3\u7ba1\u7406\u653f\u7b56\u8d1f\u8d23\u4eba Brad Crabtree \u8bf4\uff0c\u8be5\u7814\u7a76\u6240\u662f\u4e00\u5bb6\u4e0e\u80fd\u6e90\u516c\u53f8\u5408\u4f5c\u7684\u660e\u5c3c\u82cf\u8fbe\u5dde\u7ec4\u7ec7\u3002\u53d1\u5c55\u73af\u5883\u53ef\u6301\u7eed\u6027\u3002 Crabtree \u8fd8\u9886\u5bfc\u7740\u4e00\u4e2a\u540d\u4e3a\u78b3\u6355\u83b7\u8054\u76df\u7684\u7ec4\u7ec7\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u662f\u5728\u8be5\u56fd\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u65f6\u5f25\u5408\u515a\u6d3e\u5206\u6b67\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4f5c\u4e3a\u8bc1\u636e\uff0c\u4ed6\u6307\u51fa\u4e86\u4e00\u4f4d\u5907\u53d7\u77a9\u76ee\u7684\u5171\u548c\u515a\u652f\u6301\u8005\u2014\u2014\u5317\u8fbe\u79d1\u4ed6\u5dde\u5dde\u957f Doug Burgum\u2014\u2014\u4ed6\u6b63\u5728\u63a8\u52a8\u4e00\u9879\u5230 2030 \u5e74\u5b9e\u73b0\u8be5\u5dde\u78b3\u4e2d\u548c\u7684\u8ba1\u5212\uff0c\u201c\u901a\u8fc7\u521b\u65b0\u800c\u4e0d\u662f\u76d1\u7ba1\u201d\u3002\u8054\u90a6\u653f\u5e9c\u901a\u8fc7\u5230 2026 \u5e74\u5c06\u4e00\u5bb6\u516c\u53f8\u6bcf\u5c01\u5b58\u4e00\u516c\u5428\u4e8c\u6c27\u5316\u78b3\u7684\u7a0e\u6536\u62b5\u514d\u589e\u52a0\u5230 50 \u7f8e\u5143\uff0c\u4ece\u800c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u7ba1\u9053\u8ba1\u5212\u3002\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u4f4e\u78b3\u71c3\u6599\u6807\u51c6\u8981\u6c42\u8be5\u5dde\u7684\u7ecf\u9500\u5546\u4ec5\u8d2d\u4e70\u5177\u6709\u4f4e\u78b3\u6392\u653e\u5f71\u54cd\u7684\u4e59\u9187\uff0c\u4ece\u800c\u4f7f\u4ea4\u6613\u53d8\u5f97\u66f4\u52a0\u751c\u871c\uff1b\u751f\u4ea7\u8fd9\u79cd\u4e59\u9187\u7684\u516c\u53f8\u53ef\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u4ef7\u683c\u3002\u867d\u7136\u5728\u5ca9\u5c42\u4e2d\u50a8\u5b58\u4e8c\u6c27\u5316\u78b3\u7684\u505a\u6cd5\u5df2\u7ecf\u5b58\u5728\u8fd1 50 \u5e74\uff0c\u4f46\u5f00\u53d1\u6355\u83b7\u78b3\u6392\u653e\u7684\u6280\u672f\u5df2\u88ab\u8bc1\u660e\u662f\u6602\u8d35\u7684\uff0c\u5e76\u4e14\u96be\u4ee5\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u3002\n\u4e59\u9187\u7cbe\u70bc\u5382\u53ef\u80fd\u4ee3\u8868\u7740\u6709\u52a9\u4e8e\u63a8\u52a8\u8be5\u6280\u672f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u7684\u553e\u624b\u53ef\u5f97\u7684\u679c\u5b9e\u3002\u7389\u7c73\u7b49\u690d\u7269\u662f\u4e8c\u6c27\u5316\u78b3\u7684\u5929\u7136\u6d77\u7ef5\uff0c\u5728\u6625\u5b63\u548c\u590f\u5b63\u751f\u957f\u65f6\u5438\u6536\u6c14\u4f53\u5e76\u50a8\u5b58\u78b3\u3002\u5f53\u8fd9\u4e9b\u4f5c\u7269\u53d1\u9175\u6210\u4e59\u9187\uff0c\u6700\u7ec8\u4e0e\u6c7d\u6cb9\u6df7\u5408\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u7a33\u5b9a\u3001\u6613\u4e8e\u6355\u83b7\u7684\u4e8c\u6c27\u5316\u78b3\u6d41\u3002 \u201c\u8fd9\u4e9b\u65e9\u671f\u7684\u5de5\u5382\u76f8\u5bf9\u5bb9\u6613\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\uff0c\u201d\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u9ea6\u8fea\u900a\u5206\u6821\u4e13\u95e8\u7814\u7a76\u6c14\u5019\u53cb\u597d\u578b\u80fd\u6e90\u6280\u672f\u5f00\u53d1\u7684\u6559\u6388 Greg Nemet \u8bf4\u3002 \u201c\u968f\u7740\u8fd9\u4e00\u70b9\u7684\u663e\u793a\u548c\u8bc1\u660e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e9b\u4ea4\u901a\u7f51\u7edc\uff0c\u7136\u540e\u518d\u505a\u66f4\u96be\u7684\u4e8b\u60c5\u5c31\u4f1a\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u201d\u5b9e\u73b0\u66f4\u96be\u7684\u76ee\u6807\u2014\u2014\u5438\u6536\u5927\u6c14\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u4e8c\u6c27\u5316\u78b3\u6216\u6355\u83b7\u53d1\u7535\u5382\u7684\u6392\u653e\u7269\u2014\u2014\u51e0\u4e4e\u80af\u5b9a\u5bf9\u904f\u5236\u5168\u7403\u6c14\u6e29\u4e0a\u5347\u81f3\u5173\u91cd\u8981\u3002\u653f\u5e9c\u95f4\u6c14\u5019\u53d8\u5316\u4e13\u95e8\u59d4\u5458\u4f1a\u5728 2018 \u5e74\u5f97\u51fa\u4e86\u8fd9\u4e00\u7ed3\u8bba\uff0c\u56e0\u4e3a\u5b83\u5236\u5b9a\u4e86\u4e00\u6761\u963b\u6b62\u6e29\u5ea6\u4e0a\u5347\u81f3 1.5 C (2.7 F) \u7684\u9053\u8def\u3002\u5c3d\u7ba1 Raffensperger \u548c\u5176\u4ed6\u4eba\u62c5\u5fc3\u7ba1\u9053\u6216\u50a8\u5b58\u5730\u70b9\u7684\u6f5c\u5728\u6cc4\u6f0f\uff0c\u4f46\u73af\u5883\u4fdd\u62a4\u5c40\u5df2\u7ecf\u5f97\u51fa\u7ed3\u8bba\uff0c\u53ea\u8981\u516c\u53f8\u5c0f\u5fc3\u5730\u50a8\u5b58\u4e8c\u6c27\u5316\u78b3\u662f\u5b89\u5168\u7684\u3002\u5b83\u4ee5\u6db2\u5316\u72b6\u6001\u6ce8\u5165\u591a\u5b54\u5ca9\u5c42\uff0c\u6700\u7ec8\u6eb6\u89e3\u6216\u786c\u5316\u6210\u77ff\u7269\u8d28\u3002\u514b\u62c9\u5e03\u7279\u91cc\u8bf4\uff0c\u5728\u7f8e\u56fd\uff0c\u6ca1\u6709\u56e0\u8fd0\u8f93\u6216\u50a8\u5b58\u6355\u83b7\u7684\u4e8c\u6c27\u5316\u78b3\u800c\u9020\u6210\u4eba\u5458\u6b7b\u4ea1\u6216\u4e25\u91cd\u53d7\u4f24\u3002\u4ed6\u8ba4\u4e3a\uff0c\u53ea\u8981\u516c\u53f8\u91c7\u53d6\u8d1f\u8d23\u4efb\u7684\u884c\u52a8\uff0c\u571f\u5730\u6240\u6709\u8005\u5c31\u4f1a\u76f8\u4fe1\u7ba1\u9053\u662f\u5b89\u5168\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u4e2d\u53d7\u76ca\u3002\u4f46 Raffensperger \u4ecd\u7136\u6709\u4e00\u7cfb\u5217\u62c5\u5fe7\uff0c\u5305\u62ec\u662f\u5426\u53ef\u4ee5\u4fe1\u4efb\u7531\u77f3\u6cb9\u548c\u7164\u70ad\u516c\u53f8\u5f00\u53d1\u7684\u6280\u672f\u5728\u904f\u5236\u6e29\u5ba4\u6c14\u4f53\u6392\u653e\u65b9\u9762\u4ea7\u751f\u53d8\u9769\u6027\u5f71\u54cd\u3002 Raffensperger \u7684\u7ec4\u7ec7\u5728\u4e00\u5c01\u81f4\u62dc\u767b\u7684\u516c\u5f00\u4fe1\u4e2d\u4e0e 500 \u591a\u4e2a\u5176\u4ed6\u73af\u5883\u7ec4\u7ec7\u4e00\u8d77\u8c34\u8d23\u78b3\u6355\u83b7\u548c\u50a8\u5b58\u4f5c\u4e3a\u6c14\u5019\u89e3\u51b3\u65b9\u6848\u3002 \u201c\u6211\u4eec\u4e0d\u9700\u8981\u4fee\u590d\u5316\u77f3\u71c3\u6599\uff1b\u6211\u4eec\u9700\u8981\u629b\u5f03\u4ed6\u4eec\uff0c\u201d\u8be5\u7ec4\u7ec7\u5728\u534e\u76db\u987f\u90ae\u62a5\u7684\u5e7f\u544a\u4e2d\u5199\u9053\u3002 \u201c\u4e0e\u5176\u6355\u83b7\u78b3\u5e76\u5c06\u5176\u62bd\u56de\u5730\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u9996\u5148\u5c06\u5316\u77f3\u71c3\u6599\u4fdd\u7559\u5728\u5730\u4e0b\u3002\u201d", "note_en": "SIOUX FALLS, S.D. (AP) \u2014 Two companies seeking to build thousands of miles of pipeline across the Midwest are promising the effort will aid rather than hinder the fight against climate change, though some environmental groups remain skeptical.\n The pipelines would stretch from North Dakota to Illinois, potentially transforming the Corn Belt into one of the world\u2019s largest corridors for a technology called carbon capture and storage.\n Environmental activists and landowners have hindered other proposed pipelines in the region that pump oil, carrying carbon that was buried in the earth to engines or plants where it is burned and emitted. The new projects would essentially do the opposite by capturing carbon dioxide at ethanol refineries and transporting it to sites where it could be buried thousands of feet underground.\n Both companies planning the pipelines appear eager to tout their environmental benefits. Their websites feature clear blue skies and images of green fields and describe how the projects could have the same climatic impact as removing millions of cars from the road every year.\n  However, some conservationists and landowners are already wary of the pipelines\u2019 environmental benefits and safety, raising the chances of another pitched battle as the projects seek construction permits.\n \u201cIt seems like they are running a casino of risk and we are going to pay for it,\u201d said Carolyn Raffensperger, the director of the Science and Environmental Health Network, expressing fears about a leak that could put North Dakota landowners like herself at risk. \u201cWe need to think this through very carefully, and I do not see the players in place to do that.\u201d\n The pipelines could fall into a longstanding  divide among environmentalists. President Joe Biden and many Republicans are pushing a  strategy for tackling climate change that offers a financial boon to industries that use carbon capture and storage to reduce their emissions. But others, such as Greenpeace and Vermont Sen. Bernie Sanders,  argue the focus should be completely on developing renewable energy sources and that carbon capture just prolongs dependence on fossil fuels.\n  Navigator CO2 Ventures, which is planning a pipeline that will stretch over 1,200 miles (1,931 kilometers) through Iowa, South Dakota, Nebraska, Minnesota and Illinois, says it is offering \u201ccarbon capture solutions for a greener planet.\u201d While Summit Carbon Solutions, whose pipeline will connect refineries in Iowa, Minnesota, Nebraska and South Dakota to a sequestration site in North Dakota, says it plans to build the world\u2019s largest carbon capture and storage project. Both hope to start some operations by 2024.\n \u201cThere\u2019s so much societal momentum that says this is something we want to do \u2014 should do, need to do \u2014 for the public\u2019s benefit,\u201d said Matt Vining, the CEO of Navigator CO2 Ventures. \u201cMy project and many others will get done and should get done.\u201d\n Supporters say the pipelines are a much-needed win for both agricultural businesses and the environment. The two projects are expected to run into the billions of dollars, spurring construction jobs. And they advance a technology crucial to achieving a 2050 goal of net-zero carbon dioxide emissions \u2014 in which every gram of emissions is accounted for by providing a way to eventually suck it back out of the atmosphere.\n \u201cAll sides win. You significantly reduce carbon emissions, but you can also maintain those industries that are the lifeblood of different regions of the country,\u201d said Brad Crabtree, who oversees carbon management policy at the Great Plains Institute, a Minnesota-based organization that works with energy companies to develop environmental sustainability.\n Crabtree, who also directs a group called Carbon Capture Coalition, sees it as a way to bridge partisan divides as the country addresses climate change. As evidence, he points to one high-profile Republican backer \u2014 North Dakota Gov. Doug Burgum \u2014 who is  pushing a plan to make the state carbon-neutral by 2030, \u201cthrough innovation not regulation.\u201d\n The federal government set off the scurry of pipeline plans by increasing, by 2026, tax credits to $50 for every metric ton of carbon dioxide a company sequesters. California\u2019s Low Carbon Fuel Standard has sweetened the deal by requiring that distributors in that state buy only ethanol with a low carbon emissions impact; companies that produce such ethanol can get a higher price.\n While the practice of storing carbon dioxide in rock formations has been around for almost 50 years, developing technology that captures carbon emissions has proven to be expensive and struggled to gain widespread use.\n Ethanol refineries could represent the low-hanging fruit that helps push the technology forward into widespread use. Plants such as corn are natural sponges of carbon dioxide, absorbing the gas and storing carbon as they grow through the spring and summer. When those crops ferment into ethanol, which is eventually mixed with gasoline, it produces a steady, easily-captured stream of carbon dioxide.\n \u201cThese early plants are relatively easy and that\u2019s a good place to start,\u201d said Greg Nemet, a professor at the University of Wisconsin-Madison who specializes in the development of climate-friendly energy technology. \u201cAs that gets shown and proven, you get some transportation networks, then it gets easier to do the harder stuff later.\u201d\n Achieving that harder stuff \u2014 sucking carbon dioxide already in the atmosphere or catching emissions at power plants \u2014 will almost certainly be crucial to beating back global temperature increases. The  Intergovernmental Panel on Climate Change reached that conclusion in 2018 as it laid out a path to halting temperature increases to 1.5 C (2.7 F).\n Despite concerns from Raffensperger and others about potential leaks from the pipelines or storage sites, the Environmental Protection Agency has  concluded that storing carbon dioxide is safe as long as companies do it carefully. It is injected in a liquefied state into porous rock formations, where it eventually dissolves or hardens into minerals.\n Crabtree said there has not been a single human fatality or serious injury in the United States from transporting or storing captured carbon dioxide. He thinks that as long as companies act responsibly, landowners will be convinced the pipelines are safe and can benefit from them.\n But Raffensperger still has a range of concerns, including whether a technology that was developed by oil and coal companies can be trusted to make a transformative difference in curbing greenhouse gas emissions. Raffensperger\u2019s organization joined over 500 other environmental organizations in an open letter to Biden denouncing carbon capture and storage as a climate solution.\n \u201cWe don\u2019t need to fix fossil fuels; we need to ditch them,\u201d the group wrote in a Washington Post ad. \u201cInstead of capturing carbon to pump it back underground, we should keep fossil fuels in the ground in the first place.\u201d", "posttime": "2021-07-25 00:53:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6355\u96c6,capture,\u7ba1\u9053", "title": "\u78b3\u6355\u96c6\u7ba1\u9053", "title_en": "Carbon-Capture Pipelines", "transed": 1, "url": "https://apnews.com/article/technology-joe-biden-business-climate-climate-change-dc976d17ccd6581f25d823b6a894f87f", "via": "", "real_tags": ["\u6355\u96c6", "capture", "\u7ba1\u9053"]}, {"category": "", "categoryclass": "", "imagename": "2ece41fb163071b0dbfcde6d6a6aebd3.jpeg", "infoid": 1069480, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u518d\u8bf4\u4e00\u904d\uff1aPython \u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u4eca\u5929\u5982\u6b64\u6d41\u884c\u7684\u552f\u4e00\u539f\u56e0\u662f\u8c37\u6b4c\u5728 2000 \u5e74\u4ee3\u7684\u5934\u5341\u5e74\u5927\u529b\u63a8\u52a8\u5b83\u3002 Python \u7684\u521b\u9020\u8005 Guido van Rossum \u5b9e\u9645\u4e0a\u4ece 2005 \u5e74\u5230 2012 \u5e74\u5728 Google \u5de5\u4f5c\u3002\u5f53\u65f6 Go \u548c Dart \u8fd8\u6ca1\u6709\u51fa\u73b0\uff08\u6216\u8005\u81f3\u5c11\u4ed6\u4eec\u5e76\u4e0d\u4e3a\u4eba\u6240\u77e5\uff09\u5e76\u4e14\u968f\u7740 C# \u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\uff08\u7a83\u53d6\u4e86 Java\u5f00\u53d1\u4eba\u5458\uff09\u8c37\u6b4c\u53ef\u80fd\u89c9\u5f97\u4ed6\u4eec\u9700\u8981\u4e00\u79cd\u81ea\u5df1\u7684\u8bed\u8a00\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u60f3\u8981\u62e5\u62b1 Java\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u5728 Android \u4e0a\u4f7f\u7528\u5b83\uff0c\u4f46\u4ed6\u4eec\u4e00\u5b9a\u5bf9\u4e0e\u5b83\u4e0a\u5e8a\u7761\u89c9\u611f\u5230\u504f\u6267\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u9047\u5230\u4e86\u4e0e Oracle \u7684\u6cd5\u5f8b\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u51fa\u4e8e\u4f55\u79cd\u539f\u56e0\uff0c\u4ed6\u4eec\u91c7\u7528\u4e86 Python\u3002\u6211\u60f3\u8c61\u5728\u53e6\u4e00\u4e2a\u5b87\u5b99\u4e2d\uff0c\u4ed6\u4eec\u672c\u53ef\u4ee5\u9009\u62e9 Lua\uff0c\u4e5f\u8bb8\u5728\u90a3\u4e2a\u5b87\u5b99\u4e2d Lua \u4f1a\u6210\u4e3a\u4eca\u5929\u7684\u4e3b\u5bfc\u8bed\u8a00\u3002 Lua\u5f53\u7136\u6709\u70b9\u5947\u602a\uff0c\u6240\u4ee5\u8fd8\u662f\u4e0d\u9009\u90a3\u4e2a\u6bd4\u8f83\u597d\u3002\u4f46\u662f\u8ba9\u6211\u4eec\u8c08\u8c08\u4e3a\u4ec0\u4e48 Python \u5f88\u70c2\u3002\u5f88\u96be\u8c08\u8bba\u4e3a\u4ec0\u4e48\u67d0\u4e9b\u4e1c\u897f\u5f88\u7cdf\u7cd5\uff0c\u5c24\u5176\u662f\u5f53\u5b83\u5f88\u53d7\u6b22\u8fce\u65f6\uff0c\u4f46\u672c\u6587\u5c06\u662f\u4e00\u4e2a\u5c1d\u8bd5\u3002\u6211\u5c06\u4ecb\u7ecd\u8bed\u8a00\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u6027\u80fd\u6216\u5b9e\u73b0\u3002\u6211\u5c06\u4e3b\u8981\u5c06\u5b83\u4e0e Java \u548c C# \u8fdb\u884c\u6bd4\u8f83\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u4f17\u6240\u5468\u77e5\u7684\u6210\u719f\u8bed\u8a00\u5728\u8f6f\u4ef6\u884c\u4e1a\u4e2d\u6709\u5927\u91cf\u7684\u5b9e\u9645\u4f7f\u7528\u8d85\u8fc7 15 \u5e74\u3002\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\uff0cPython \u6709\u4e24\u4e2a\u4e3b\u8981\u7248\u672c\u5728\u91ce\u5916\u8fd0\u884c\u3002\u5f53\u7136\uff0c\u5b83\u4eec\u662f Python 2 \u548c 3\uff0c\u5e76\u4e14\u5f7c\u6b64\u4e0d\u517c\u5bb9\u3002\u6240\u4ee5\u4f60\u88ab\u7f6e\u4e8e\u8fd9\u79cd\u5947\u602a\u7684\u60c5\u51b5\u4e0b\uff0c\u8c37\u6b4c\u4f1a\u8bf4\u201c\u6765\u5427\u4f19\u8ba1\u4eec\uff0c\u5b66\u4e60\u4e00\u4e9b Python\uff0c\u8fd9\u5f88\u9177\uff01\u201d\u7136\u540e\u4f60\u53bb\u4e0b\u8f7d\u5b83\uff0c\u4f60\u4f1a\u5728\u7248\u672c 2 \u548c 3 \u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff0c\u4e5f\u8bb8\u8c37\u6b4c\u4f1a\u544a\u8bc9\u4f60\u201c\u9009\u62e9 3\uff01\u201d\u800c\u5176\u4ed6\u4eba\u4f1a\u544a\u8bc9\u4f60\u201c\u9009 2\uff01\u201d\u7136\u540e\u4f60\u4f1a\u53d1\u73b0 3 \u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u517c\u5bb9\u7684\u5e93\uff0c\u4e5f\u6ca1\u6709\u4eba\u4f7f\u7528\u5b83\uff0c\u800c\u5f00\u53d1 3 \u7684\u552f\u4e00\u539f\u56e0\u662f\u4e3a\u4e86\u5728\u6253\u5370\u529f\u80fd\u548c\u8868\u60c5\u7b26\u53f7\u652f\u6301\u4e2d\u6dfb\u52a0\u62ec\u53f7\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u60c5\u51b5\u624d\u6709\u6240\u597d\u8f6c\u3002\u4f8b\u5982\uff0cUbuntu \u6700\u8fd1\u6dd8\u6c70\u4e86 Python 2\u3002\u6211\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e9b self \u5173\u952e\u5b57\uff0c\u56e0\u4e3a\u4f60\u4f1a\u5728 Python \u4e2d\u968f\u5904\u770b\u5230\u5b83\u4eec\u3002\u8fd9\u5c31\u662f\u5f15\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u7684\u65b9\u5f0f\u3002\u8fd9\u5c31\u50cf Java \u6216 C# \u4e2d\u7684 this \u5173\u952e\u5b57\uff0c\u53ea\u6709\u5728 Python \u4e2d\u624d\u9700\u8981\u5b83\u4eec\uff0c\u56e0\u4e3a Python \u662f\u611a\u8822\u7684\u3002\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u662f\u5982\u4f55\u6709 2 \u4e2a\u5b9e\u4f8b\u53d8\u91cf\u7684\uff1a\u989c\u8272\u548c\u8f6e\u5b50\uff1f\u770b\u770b\u6211\u5982\u4f55\u5728\u6784\u9020\u51fd\u6570\u4e2d\u58f0\u660e\u548c\u521d\u59cb\u5316\u5b83\u4eec\uff1f Python\u611a\u8822\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u201c\u6211\u5982\u4f55\u4f7f\u5b83\u4eec\u6210\u4e3a\u79c1\u6709\u5b9e\u4f8b\u53d8\u91cf\uff1f\u201d\u55ef\uff0c\u7b54\u6848\u662f\u4f60\u6ca1\u6709\u3002\u4f60\u4e0d\u80fd\u3002 Python \u4e2d\u6ca1\u6709\u79c1\u6709\u5b9e\u4f8b\u53d8\u91cf\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u5728 Python \u4e2d\u4f60\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u662f\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u59cb\u5b83\u4eec\uff0c\u50cf\u8fd9\u6837\uff1a self.__color = \u201cred\u201d \u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4 Python \u89e3\u91ca\u5668\u7834\u574f\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u4ece\u7c7b\u5916\u90e8\u8bbf\u95ee\uff08\u5c3d\u7ba1\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4ece\u7c7b\u5916\u90e8\u8bbf\u95ee\u53d8\u91cf\uff09\u3002\u6240\u4ee5\u5b83\u4e0d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\uff0c\u4f46\u5b83\u4f1a\u88ab\u7834\u574f\u3002\u5f53\u7136\uff0c\u5b83\u6709\u6548\uff0c\u4f46\u6765\u5427\u3002\u60f3\u5728 C# \u6216 Java \u4e2d\u5b9a\u4e49\u79c1\u6709\u5b9e\u4f8b\u53d8\u91cf\u5417\uff1f\u5c06\u5173\u952e\u5b57 private \u653e\u5728\u5b83\u524d\u9762\u3002\u5982\u679c\u4f60\u95ee Python \u5f00\u53d1\u4eba\u5458\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ed6\u4eec\u4f1a\u56de\u7b54\uff1a\u201c\u4e0d\u8981\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\uff0c\u54c8\u54c8\u201d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u4f60\u6307\u51fa\u4ed6\u4eec\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u7f3a\u9677\u65f6\uff0cPython \u5f00\u53d1\u4eba\u5458\u4f1a\u8868\u73b0\u51fa\u654c\u610f\u548c\u5c45\u9ad8\u4e34\u4e0b\u7684\u6001\u5ea6\u3002\u554a\uff0c\u7a7a\u767d\u3002 Python \u662f\u5783\u573e\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u3002\u5728\u7406\u667a\u7684\u8bed\u8a00\u4e2d\uff0c\u8303\u56f4\u5b9a\u754c\u662f\u7528\u82b1\u62ec\u53f7\u6216 BEGIN \u548c END \u5173\u952e\u5b57\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\u5b8c\u6210\u7684\u3002\u4f46\u4e0d\u662f\u5728 Python \u4e2d\uff01 Python \u8ba4\u4e3a\u7ed9\u7a7a\u683c\u8d4b\u4e88\u8bed\u4e49\u610f\u4e49\u4f1a\u5f88\u597d\u3002\u7a76\u7adf\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u4f1a\u7ed9\u770b\u4e0d\u89c1\u7684\u4e1c\u897f\u8d4b\u4e88\u8bed\u4e49\u610f\u4e49\uff1f\u8c01\u8ba4\u4e3a\u8fd9\u662f\u4e2a\u597d\u4e3b\u610f\uff1f\u5f53\u6211\u4eec\u96c7\u4f63\u65b0\u5458\u5de5\u65f6\u2026\u2026\u6211\u8ba4\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u96c7\u4f63\u4e00\u4e2a\u61c2 Python \u7684\u5458\u5de5\u3002\u6211\u53ea\u662f\u8bf4\uff0c\u201c\u4f60\u5199\u7684\u4e00\u5207\u90fd\u9700\u8981\u7528 Python \u7f16\u5199\u3002\u201d\u53ea\u662f\u4e3a\u4e86\u6211\u53ef\u4ee5\u9605\u8bfb\u5b83\u3002\u8fd9\u5f88\u68d2\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u4ece\u623f\u95f4\u5bf9\u9762\u770b\u5230\u4ed6\u4eec\u7684\u5c4f\u5e55\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u4ee3\u7801\u662f\u597d\u662f\u574f\u3002\n\u56e0\u6b64\uff0c\u5373\u4f7f\u6211\u60f3\u76f8\u4fe1\u8fd9\u4e2a\u4eba\u80fd\u591f\u5728\u623f\u95f4\u7684\u53e6\u4e00\u8fb9\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\uff0c\u4f7f\u7528\u7a7a\u683c\u6bd4\u4f7f\u7528\u5927\u62ec\u53f7\u66f4\u597d\u5417\uff1f\u5728\u51e0\u4e4e\u6240\u6709\u5176\u4ed6\u73b0\u4ee3\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u7f29\u8fdb\u662f\u7f16\u5199\u65b9\u6cd5\u65f6\u7684\u89c4\u8303\u3002\u5e76\u4e14\u53ea\u6709\u5728 Python \u4e2d\uff0c\u5236\u8868\u7b26\u548c\u7a7a\u683c\u4e4b\u95f4\u7684\u5dee\u5f02\u624d\u4f1a\u5bfc\u81f4\u89e3\u91ca\u5668\u5fc3\u810f\u75c5\u53d1\u4f5c\u3002\u52a8\u6001\u7c7b\u578b\u5f88\u7cdf\u7cd5\uff0c\u4efb\u4f55\u4e0d\u540c\u610f\u6211\u7684\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u7f16\u5199\u8db3\u591f\u7684\u8f6f\u4ef6\u6765\u5b9e\u73b0\u5b83\u3002\u4f7f\u7528\u52a8\u6001\u7c7b\u578b\uff0c\u4f60\u7684\u7a0b\u5e8f\u8d8a\u5927\uff0c\u5b83\u5c31\u8d8a\u96be\u4ee5\u7ef4\u62a4\u3002\u6211\u9884\u6d4b\u672a\u6765\u6240\u6709\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u90fd\u5c06\u662f\u9759\u6001\u7c7b\u578b\u7684\uff0c\u4f7f\u7528\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u5c31\u50cf\u4f7f\u7528\u5f13\u7bad\u4e00\u6837\u3002\u60a8\u5c06\u80fd\u591f\u5728 YouTube \u9891\u9053 Primitive Technology \u4e0a\u89c2\u770b\u4eba\u4eec\u4f7f\u7528\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u8fdb\u884c\u7f16\u7a0b\u3002\u6700\u8fd1\u51fa\u73b0\u7684\u8bed\u8a00\uff0c\u4f8b\u5982 TypeScript\uff0c\u7ed9\u4e86\u6211\u5e0c\u671b\u3002\u4e00\u4e9b Python \u7a0b\u5e8f\u5458\u5df2\u7ecf\u610f\u8bc6\u5230\u52a8\u6001\u7c7b\u578b\u662f\u4e0d\u597d\u7684\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u6709\u4e86 mypy\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8981\u7ed9 Python \u6dfb\u52a0\u7c7b\u578b\u6ce8\u91ca\uff0c\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u9996\u5148\u4f7f\u7528\u50cf Java \u6216 C# \u8fd9\u6837\u7684\u8bed\u8a00\u5462\uff1f Python \u6ca1\u6709\u5e38\u91cf\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u4f60\u5728\u6587\u7ae0\u4e2d\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f60\u6709\u4ec0\u4e48\u671f\u671b\uff1f Stack Overflow \u4e0a\u63d0\u51fa\u4e86\u521b\u5efa\u53d8\u91cf\u5e38\u91cf\u7684\u95ee\u9898\uff0cPython \u5f00\u53d1\u4eba\u5458\u7684\u5efa\u8bae\u662f\u201c\u4e0d\u8981\u6539\u53d8\u5b83\u201d\u3002", "note_en": "I\u2019ll say it again: Python is a bad programming language, and the only reason it\u2019s so popular today is because Google pushed it so hard in the first decade of the 2000s.\n The creator of Python, Guido van Rossum, actually worked at Google from 2005 to 2012. Go and Dart weren\u2019t around back then (or at least they weren\u2019t well known) and with C# gaining in popularity ( stealing would-be Java developers) Google probably felt they needed a language of their own. They probably would have wanted to embrace Java, as they were already using it with Android, but they must have been paranoid about getting into bed with it because they were already running into  legal issues with Oracle. So for whatever reason, they adopted Python. I imagine in an alternate universe they could have chosen, say, Lua, and maybe in that universe Lua would have become the dominant language today. Of course Lua is kinda  weird, so it\u2019s probably better they didn\u2019t choose that one after all.\n But let\u2019s talk about why Python sucks. It can be difficult to talk about why something sucks, especially when it\u2019s  popular, but this article will be an attempt. I\u2019m going to be covering the language itself, not its performance or its implementation. I\u2019ll be mostly comparing it to Java and C#, as these are two well-known, mature languages that have had plenty of real-world use in the software industry for over fifteen years.\n  For a very long time, Python had two major versions running around in the wild. They are, of course, Python 2 and 3, and they\u2019re incompatible with each other. So you were put in this weird situation where Google would say \u201ccome on guys, learn some Python, it\u2019s cool!\u201d and then you would go to download it, and you would be given the choice between versions 2 and 3, and maybe Google would tell you \u201cpick 3!\u201d and  others would tell you \u201cpick 2!\u201d and then you would find out that 3 barely had any compatible libraries and no one used it, and the only reason why 3 was developed was for adding parentheses to the print function and emoji support. Only recently has the situation gotten any better. Ubuntu, for instance, recently  phased out Python 2.\n    I hope you like those  self keywords, because you\u2019re going to see them everywhere in Python.\n That\u2019s the way of referring to the instance variables of a class. It\u2019s like the  this keyword in Java or C#, only in Python they\u2019re  required, because Python is dumb.\n Notice how this class has 2 instance variables:  color and  wheels? See how I have to both   declare and initialize them in the constructor? Another example of Python stupidity.\n You may be wondering \u201chow do I make them private instance variables?\u201d Well, the answer is you don\u2019t. You can\u2019t. There is no such thing as private instance variables in Python.\n The best you can do in Python is to start them with two underscores, like so:  self.__color = \u201cred\u201d\n What that does is cause the Python interpreter to mangle the name of the variable so it\u2019s not accessible from outside the class (though with some persistence you could still access the variable from outside the class if you wanted to). So it doesn\u2019t become a private variable, but it gets mangled.\n Sure, it works, but  come on. Want to define a private instance variable in C# or Java? Put the keyword  private in front of it.\n If you ask a Python developer about this, they\u2019ll respond with: \u201cdon\u2019t access the instance variables of another class, lol\u201d. In general, when you point out any flaws in their language, Python developers will act hostile and condescending.\n  Ah, whitespace. Another reason why Python is garbage. In a sane language scope delimiting is done with curly braces, or  BEGIN and  END keywords, or something similar. But not in Python! Python thought it would be neat to give semantic meaning to whitespace. Why on earth would they give semantic meaning to something that cannot be seen? Who thought that was a good idea?\n  When we hire new employees \u2026 I don\u2019t think we\u2019ve yet hired an employee who knew Python. I just say, \u201ceverything you write needs to be in Python.\u201d Just so I can read it. And it\u2019s awesome because I can see from across the room, looking at their screen, whether their code is good or bad.\n So even if I wanted to believe this guy is capable of doing code reviews from across the room, how is using whitespace any better than curly braces? In almost any other modern language, using indentation is the norm when writing methods. And only in Python will the difference between tabs and spaces cause the interpreter to have a heart attack.\n  Dynamic typing is bad, and anyone who disagrees with me probably hasn\u2019t written enough software to realize it yet. With dynamic typing, the larger your program grows, the more unmaintainable it becomes. I predict that in the future all mainstream programming languages will be statically typed, and using a dynamically typed language will be like using a bow and arrow. You\u2019ll be able to watch people programming with dynamically typed languages on the YouTube channel  Primitive Technology. Languages that have appeared more recently, such as TypeScript, give me hope.\n Some Python programmers have realized that dynamic typing is bad, so now we have  mypy, but if you\u2019re going to add type annotations to Python, why wouldn\u2019t you just use a language like Java or C# in the first place?\n  Python has no constants. I mean, what did you expect if you made it this far in the article? The question of making a variable constant came up on Stack Overflow and a Python developer\u2019s advice was  \u201cjust don\u2019t change it\u201d.", "posttime": "2021-07-25 00:15:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,python,bad", "title": "Python \u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u7f16\u7a0b\u8bed\u8a00", "title_en": "Python Is a Bad Programming Language", "transed": 1, "url": "https://medium.com/nerd-for-tech/python-is-a-bad-programming-language-2ab73b0bda5", "via": "", "real_tags": ["\u7f16\u7a0b", "python", "bad"]}, {"category": "", "categoryclass": "", "imagename": "68f6bdcb7e6fd4d8758ce80c2b9eb4cb.png", "infoid": 1069479, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56fe\u50cf\u7684\u7279\u5f81\u96c6\u7531\u7ec8\u6b62\u70b9\u548c\u5206\u5c94\u70b9\u7684\u4f4d\u7f6e\u53ca\u5176\u65b9\u5411\u7ec4\u6210 importfingerprint_feature_extractorimg = cv2.imread(&#39;image_path&#39;, 0) # \u8bfb\u53d6\u8f93\u5165\u56fe\u50cf --&gt; \u60a8\u53ef\u4ee5\u4f7f\u7528\u201cfingerprint_enhancer\u201d\u5e93\u589e\u5f3a\u6307\u7eb9\u56fe\u50cfFeaturesTerminations ,FeaturesBifurcations =fingerprint_feature_extractor.extract_minutiae_features(img, showResult=True,spuriousMinutiaeThresh=10) \u8f93\u5165\u56fe\u50cf\u5b58\u50a8\u5728\u201cenhanced\u201d\u6587\u4ef6\u5939\u4e2d\u3002\u5982\u679c\u8f93\u5165\u56fe\u50cf\u6ca1\u6709\u589e\u5f3a\uff0c\u7ec6\u8282\u7279\u5f81\u4f1a\u5f88\u5608\u6742\uff0c\u4f7f\u7528\u4ee3\u7801 https://github.com/Utkarsh-Deshmukh/Fingerprint-Enhancement-Python \u6765\u589e\u5f3a\u6307\u7eb9\u56fe\u50cf\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u628a\u589e\u5f3a\u540e\u7684\u6307\u7eb9\u56fe\u50cf\u548c\u63d0\u53d6\u7ec6\u8282\u7279\u5f81\u3002 \u0141ukasz WI\u0118C\u0141AW \u7684\u201c\u6307\u7eb9\u8bc6\u522b\u7cfb\u7edf\u4e2d\u57fa\u4e8e\u7ec6\u8282\u7684\u5339\u914d\u7b97\u6cd5\u201d http://www.keia.ath.bielsko.pl/sites/default/files/publikacje/11-BIO-41-lukaszWieclawMITr.pdf RAVI \u7684 MINUTIA \u5f97\u5206\u5339\u914d\u201d\u3002 J, KB RAJA, VENUGOPAL\u3002 K.R https://arxiv.org/ftp/arxiv/papers/1001/1001.4186.pdf", "note_en": "The feature set for the image consists of the location of Terminations and Bifurcations and their orientations\n     import fingerprint_feature_extractorimg = cv2.imread(&#39;image_path&#39;, 0)\t\t\t\t# read the input image --&gt; You can enhance the fingerprint image using the &#34;fingerprint_enhancer&#34; libraryFeaturesTerminations, FeaturesBifurcations = fingerprint_feature_extractor.extract_minutiae_features(img, showResult=True, spuriousMinutiaeThresh=10)\n  the input image is stored in the folder &#34;enhanced&#34;.  If the input image is not enhanced, the minutiae features will be very noisy\n    use the code  https://github.com/Utkarsh-Deshmukh/Fingerprint-Enhancement-Python to enhance the fingerprint image.This program takes in the enhanced fingerprint image and extracts the minutiae features.\n     &#34;A MINUTIAE-BASED MATCHING ALGORITHMS IN FINGERPRINT RECOGNITION SYSTEMS&#34; by \u0141ukasz WI\u0118C\u0141AW http://www.keia.ath.bielsko.pl/sites/default/files/publikacje/11-BIO-41-lukaszWieclawMIT_v2_popr2.pdf\n  &#34;FINGERPRINT RECOGNITION USING MINUTIA SCORE MATCHING&#34; by RAVI. J, K. B. RAJA, VENUGOPAL. K. R https://arxiv.org/ftp/arxiv/papers/1001/1001.4186.pdf", "posttime": "2021-07-25 00:14:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c6\u89c9,vision,fingerprint", "title": "\u8ba1\u7b97\u673a\u89c6\u89c9\u9879\u76ee\uff1a\u6307\u7eb9\u7ec6\u8282\u7279\u5f81\u63d0\u53d6", "title_en": "Computer Vision Project: Fingerprint Minutiae Feature Extraction", "transed": 1, "url": "https://github.com/Utkarsh-Deshmukh/Fingerprint-Feature-Extraction", "via": "", "real_tags": ["\u89c6\u89c9", "vision"]}, {"category": "", "categoryclass": "", "imagename": "39a0b0ab92541743b569ea513c979490.png", "infoid": 1069478, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "$ import image_dehazer # \u52a0\u8f7d\u5e93$ HazeImg = cv2.imread(&#39;image_path&#39;) # \u8bfb\u53d6\u8f93\u5165\u56fe\u50cf -- (**\u5fc5\u987b\u662f\u5f69\u8272\u56fe\u50cf**)$ HazeCorrectedImg = image_dehazer.remove_haze(HazeImg) # \u79fb\u9664Haze$ cv2. imshow(&#39;\u8f93\u5165\u56fe\u50cf&#39;, HazeImg); # \u663e\u793a\u539f\u59cb\u6a21\u7cca\u56fe\u50cf$ cv2.imshow(&#39;enhanced_image&#39;, HazeCorrectedImg); # \u663e\u793a\u7ed3\u679c$ cv2.waitKey(0) # \u4fdd\u6301\u663e\u793a\u7a97\u53e3 \u8be5\u4ee3\u7801\u662f\u8bba\u6587\u201cEfficient Image Dehazing with Boundary Constraint and Contextual Regularization\u201d\u7684\u4e00\u4e2a\u5b9e\u73b0\uff0c\u8be5\u7b97\u6cd5\u53ef\u5206\u4e3a4\u90e8\u5206\uff1a \u672c\u9879\u76ee\u5df2\u83b7\u5f97\u8bb8\u53efBSD 2 \u8bb8\u53ef\u8bc1 - \u8be6\u60c5\u8bf7\u53c2\u89c1 LICENSE.md \u6587\u4ef6\u4f5c\u8005\u611f\u8c22 Gaofeng MENG\u3001Ying WANG\u3001Jiangong DUAN\u3001Shiming XIANG\u3001Chunhong PAN \u7684\u8bba\u6587\u201cEfficient Image Dehazing with Boundary Constraint and Contextual Regularization\u201d \u4f5c\u8005\u5e0c\u671b\u611f\u8c22\u4e9a\u5386\u5c71\u5927\u00b7\u5e03\u79d1\u3002 psf2otf \u51fd\u6570\u662f\u4ece\u4ed6\u7684\u5b58\u50a8\u5e93\u4e2d\u83b7\u5f97\u7684\u3002 ( https://github.com/aboucaud/pypher/blob/master/pypher/pypher.py ) \u4f5c\u8005\u8981\u611f\u8c22 Suresh Merugu \u535a\u58eb\u5bf9\u4ee3\u7801\u7684 matlab \u5b9e\u73b0\u3002\u8fd9\u4e2a\u5b58\u50a8\u5e93\u662f matlab \u4ee3\u7801\u7684 python \u5b9e\u73b0\u3002\u6885\u9c81\u53e4\uff0c\u82cf\u96f7\u4ec0\u3002 (2014)\u3002\u56de\u590d\uff1a\u5982\u4f55\u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u96fe\u6c14\uff0c\u7136\u540e\u589e\u5f3a\u56fe\u50cf\u4ee5\u53bb\u9664\u96fe\u6c14\uff1f\u3002\u53d6\u81ea\uff1ahttps://www.researchgate.net/post/How_to_detect_fog_in_an_image_and_then_enhance_the_image_to_remove_fog/53ae3f10d2fd64c3648b45a9/citation/download\u3002", "note_en": "$ import image_dehazer\t\t\t\t\t\t\t\t\t\t# Load the library$ HazeImg = cv2.imread(&#39;image_path&#39;)\t\t\t\t\t\t# read input image -- (**must be a color image**)$ HazeCorrectedImg = image_dehazer.remove_haze(HazeImg)\t\t# Remove Haze$ cv2.imshow(&#39;input image&#39;, HazeImg);\t\t\t\t\t\t# display the original hazy image$ cv2.imshow(&#39;enhanced_image&#39;, HazeCorrectedImg);\t\t\t# display the result$ cv2.waitKey(0)\t\t\t\t\t\t\t\t\t\t\t# hold the display window\n        This code is an implementation of the paper &#34;Efficient Image Dehazing with Boundary Constraint and Contextual Regularization&#34;The algorithm can be divided into 4 parts:\n   This project is licensed under the BSD 2 License - see the LICENSE.md file for details\n  The author would like to thank Gaofeng MENG, Ying WANG, Jiangyong DUAN, Shiming XIANG, Chunhong PAN for their paper &#34;Efficient Image Dehazing with Boundary Constraint and Contextual Regularization&#34;\n The author would like to thank Alexandre Boucaud. The function psf2otf was obtained from his repository. ( https://github.com/aboucaud/pypher/blob/master/pypher/pypher.py)\n The Author would like to thank Dr. Suresh Merugu for his matlab implementation of the codes. This repository is the python implementation of the matlab codes.\n Merugu, Suresh. (2014). Re: How to detect fog in an image and then enhance the image to remove fog?. Retrieved from:  https://www.researchgate.net/post/How_to_detect_fog_in_an_image_and_then_enhance_the_image_to_remove_fog/53ae3f10d2fd64c3648b45a9/citation/download.", "posttime": "2021-07-25 00:14:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c6\u89c9,vision,image", "title": "\u8ba1\u7b97\u673a\u89c6\u89c9\u9879\u76ee\uff1a\u56fe\u50cf\u53bb\u96fe/\u53bb\u96fe", "title_en": "Computer Vision Project: Image Dehazing/ Defogging", "transed": 1, "url": "https://github.com/Utkarsh-Deshmukh/Single-Image-Dehazing-Python", "via": "", "real_tags": ["\u89c6\u89c9", "vision", "image"]}, {"category": "", "categoryclass": "", "imagename": "c66cf11ca6f8b1e37b8cdf9bd493e96d.jpg", "infoid": 1069477, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u672b\u7684 Dealmaster \u4e13\u95e8\u9488\u5bf9 PlayStation \u548c Xbox \u7528\u6237\u7684\u89c6\u9891\u6e38\u620f\u6298\u6263\uff0c\u56e0\u4e3a\u7d22\u5c3c\u548c\u5fae\u8f6f\u672c\u5468\u65e9\u4e9b\u65f6\u5019\u5728\u5404\u81ea\u7684\u5728\u7ebf\u5546\u5e97\u5f00\u59cb\u4e86\u5e7f\u6cdb\u7684\u9500\u552e\u3002\u524d\u8005\u7684 PlayStation \u590f\u5b63\u7279\u5356\u4f1a\u6301\u7eed\u5230 8 \u6708 18 \u65e5\u2014\u2014\u7d22\u5c3c\u627f\u8bfa\u7b2c\u4e8c\u6279\u6298\u6263\u5c06\u4e8e 8 \u6708 4 \u65e5\u5230\u8d27\u2014\u2014\u800c\u540e\u8005\u7684 Xbox \u7ec8\u6781\u6e38\u620f\u7279\u5356\u4f1a\u6301\u7eed\u5230 8 \u6708 5 \u65e5\u3002\u4eca\u5e74\u590f\u5929\u5546\u5e97\uff0c\u4f46\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u65b0\u7684\u4fc3\u9500\u6d3b\u52a8\u5728\u4e0a\u4e00\u4ee3\u548c\u5f53\u524d\u7684\u6e38\u620f\u673a\u4e0a\u6253\u6298\u6570\u767e\u6b3e\u6e38\u620f\uff08\u52a0\u4e0a\u4e00\u4e9b PC \u6e38\u620f\uff0c\u5c31\u5fae\u8f6f\u800c\u8a00\uff09\u3002\u540c\u6837\u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u6bcf\u6b21\u4fc3\u9500\u4e2d\u5ba3\u4f20\u7684\u5927\u90e8\u5206\u4f18\u60e0\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u4ea4\u6613\uff0c\u8981\u4e48\u662f\u56e0\u4e3a\u76f8\u5173\u6e38\u620f\u4e4f\u5584\u53ef\u9648\uff0c\u8981\u4e48\u662f\u56e0\u4e3a\u6298\u6263\u5e76\u4e0d\u6bd4\u6211\u4eec\u6700\u8fd1\u51e0\u4e2a\u6708\u770b\u5230\u7684\u8857\u4ef7\u4f4e\u591a\u5c11\u3002\u56e0\u6b64\uff0c\u6b63\u5982\u6211\u4eec\u559c\u6b22 Dealmaster \u6240\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5df2\u7ecf\u6d4f\u89c8\u4e86 Sony \u548c Microsoft \u7684\u5168\u90e8\u9009\u62e9\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6311\u9009\u771f\u6b63\u7684\u4ea4\u6613\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u67e5\u770b\u6211\u4eec\u7684\u5b8c\u6574\u7efc\u8ff0\uff0c\u4f46\u6211\u4eec\u5c06\u9996\u5148\u5217\u51fa\u4e00\u4e9b\u4eae\u70b9\u3002\u5728 PlayStation \u65b9\u9762\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a PS5 \u7528\u6237\u201c\u5fc5\u4e70\u201d\u7684\u53f2\u4e0a\u6700\u4f1f\u5927\u52a8\u4f5c\u89d2\u8272\u626e\u6f14\u6e38\u620f\u300a\u6076\u9b54\u4e4b\u9b42\u300b\u7684\u534e\u4e3d PS5 \u91cd\u5236\u7248\u5df2\u964d\u81f3 50 \u7f8e\u5143\u7684\u8054\u5408\u4f4e\u70b9\uff0c\u786c\u6838\u79d1\u5e7b\u4e5f\u662f\u5982\u6b64\u3002 fi roguelike Returnal\uff0c\u4e8e 4 \u6708\u63a8\u51fa\u3002\u8fd9\u4e24\u6b3e\u6e38\u620f\u7684\u96f6\u552e\u4ef7\u901a\u5e38\u4e3a 70 \u7f8e\u5143\u3002 \uff08\u6211\u4eec\u8fd8\u4f1a\u6ce8\u610f\u5230\u540e\u8005\u5728\u53d1\u5e03\u65f6\u9047\u5230\u4e86\u4e00\u4e9b\u4e25\u91cd\u7684\u6545\u969c\u548c\u6e38\u620f\u5d29\u6e83\uff0c\u4f46\u6700\u8fd1\u7684\u8865\u4e01\u5e2e\u52a9\u7ea0\u6b63\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002\uff09\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u503c\u5f97\u6ce8\u610f\u7684 PS4 \u6298\u6263\u4e0e\u7d22\u5c3c\u7684\u590f\u5b63\u4fc3\u9500\u4e00\u8d77\u53d1\u751f\u8fd9\u4e0d\u662f\u9500\u552e\u672c\u8eab\u7684\u4e00\u90e8\u5206\u3002\u5176\u4e2d\u5305\u62ec\u552e\u4ef7 30 \u7f8e\u5143\u7684\u5f00\u653e\u4e16\u754c\u6b66\u58eb\u5192\u9669\u5bf9\u9a6c\u4e4b\u9b3c\uff0c\u6bd4\u8fc7\u53bb\u51e0\u4e2a\u6708\u7684\u901a\u5e38\u4ef7\u683c\u4f4e 10 \u7f8e\u5143\uff0c\u4ee5\u53ca\u552e\u4ef7 20 \u7f8e\u5143\u7684\u9690\u5f62\u52a8\u4f5c\u50f5\u5c38\u5267\u300a\u6700\u540e\u751f\u8fd8\u8005\u7b2c\u4e8c\u90e8\u300b\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u4f4e\u70b9\u3002\u8fd9\u4e24\u6b3e\u6e38\u620f\u90fd\u5165\u9009\u4e86\u6211\u4eec 2020 \u5e74\u7684\u6700\u4f73\u6e38\u620f\u699c\u5355\u3002\u5728 Xbox \u65b9\u9762\uff0c\u503c\u5f97\u8bb0\u4f4f\u7684\u662f\uff0c\u8bb8\u591a\u4eae\u70b9\u4e5f\u5305\u542b\u5728\u5fae\u8f6f\u7684 Xbox Game Pass Ultimate \u670d\u52a1\u4e2d\uff0c\u6bcf\u6708\u6536\u8d39 15 \u7f8e\u5143\u3002\u4f46\u5982\u679c\u4f60\u66f4\u613f\u610f\u62e5\u6709\u4f60\u7684\u526f\u672c\u2014\u2014\u53ea\u8981\u4f60\u53ef\u4ee5\u201c\u62e5\u6709\u201d\u4e00\u4e2a\u6570\u5b57\u4ea7\u54c1\u2014\u2014\u9500\u552e\u5305\u62ec 30 \u7f8e\u5143\u7684 Halo: The Master Chief Collection\uff0c\u8fd9\u4e0e\u5b83\u5728 PC \u4e0a\u7684\u6700\u4f4e\u4ef7\u683c\u76f8\u5339\u914d\uff0c\u6bd4\u5171\u540c\u4f4e\u7ea6 10 op-friendly \u7cfb\u5217\u5728 Xbox \u4e0a\u7684\u901a\u5e38\u4ef7\u683c\u3002\u6211\u4eec 2019 \u5e74\u7684\u5e74\u5ea6\u6e38\u620f\u8d85\u81ea\u7136\u5c04\u51fb\u6e38\u620f Control \u7684\u4e0b\u4e00\u4ee3\u7248\u672c\u964d\u81f3 20 \u7f8e\u5143\u7684\u8054\u5408\u4f4e\u4ef7\uff0c\u800c Ori \u7cfb\u5217\u4e2d\u4e24\u4e2a\u51fa\u8272\u7684 2D \u5e73\u53f0\u6e38\u620f\u7ec4\u5408\u7684\u4ef7\u683c\u4e3a 17.49 \u7f8e\u5143\u7684\u4e00\u534a\u3002\u51e0\u4e4e\u6574\u4e2a Yakuza \u7cfb\u5217\u4e5f\u90fd\u6253\u6298\uff0c\u800c\u5355\u4eba\u6e38\u620f\u300a\u6cf0\u5766\u9668\u843d 2\u300b\u548c\u300a\u5deb\u5e08 3\u300b\u5206\u522b\u964d\u81f3 3 \u7f8e\u5143\u548c 10 \u7f8e\u5143\u3002\u800c\u6218\u672f\u8eb2\u907f\u7403\u6e38\u620f Knockout City\uff0c\u6211\u4eec\u7684\u8bc4\u8bba\u8ba4\u4e3a\u5b83\u662f\u201c\u591a\u5e74\u6765\u6211\u4eec\u73a9\u8fc7\u7684\u6700\u597d\u7684\u56e2\u961f\u6b7b\u4ea1\u7ade\u8d5b\u6e38\u620f\u201d\uff0c\u4ece\u5176\u6807\u51c6\u4ef7\u683c 20 \u7f8e\u5143\u964d\u81f3 13 \u7f8e\u5143\u3002\n\u7136\u800c\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u66f4\u591a\u6e38\u620f\u4f18\u60e0\uff0c\u5305\u62ec 2021 \u5e74\u6e38\u620f\u7684\u4f18\u60e0\uff0c\u5982\u8d28\u91cf\u6548\u5e94\uff1a\u4f20\u5947\u7248\u548c\u6740\u624b 3\uff0c\u4f18\u79c0\u7684\u72ec\u7acb\u6e38\u620f\uff0c\u5982\u6781\u4e50\u8fea\u65af\u79d1\u3001\u80af\u5854\u57fa\u96f6\u53f7\u516c\u8def\u548c\u5b64\u72ec\u7684\u5c71\u8109\uff1a\u4e0b\u5761\u7b49\u7b49\u3002\u5982\u679c\u60a8\u7684\u79ef\u538b\u5de5\u4f5c\u6709\u66f4\u591a\u7a7a\u95f4\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u67e5\u770b\u6211\u4eec\u7684\u6240\u6709\u9996\u9009\u3002\u6ce8\u610f\uff1aArs Technica \u53ef\u80fd\u4f1a\u901a\u8fc7\u9644\u5c5e\u8ba1\u5212\u4ece\u8be5\u5e16\u5b50\u4e0a\u7684\u94fe\u63a5\u4e2d\u83b7\u5f97\u9500\u552e\u8865\u507f\u3002 Halo\uff1aThe Master Chief Collection\uff08XB1\uff0cPC\uff09\u5728\u5fae\u8f6f\u552e\u4ef7 19.99 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38 30 \u7f8e\u5143\uff09 Ori\uff1aThe Collection\uff08XB1\uff0cPC\uff09\u5728 Microsoft \u552e\u4ef7 17.49 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38 35 \u7f8e\u5143\uff09\u3002\u63a7\u5236\uff1a\u7ec8\u6781\u7248\uff08XSX\uff09\uff0c\u5fae\u8f6f\u552e\u4ef7 19.99 \u7f8e\u5143\uff08Game Pass \u57fa\u7840\u6e38\u620f\u2014\u2014\u901a\u5e38\u4e3a 40 \u7f8e\u5143\uff09\u3002\u5deb\u5e08 3\uff1a\u72c2\u730e - \u5e74\u5ea6\u6e38\u620f\u7248\uff08XB1\uff09\uff0c\u5fae\u8f6f\u552e\u4ef7 9.99 \u7f8e\u5143\uff08\u901a\u5e38\u4e3a 25 \u7f8e\u5143\uff09\u3002 Titanfall 2\uff1a\u7ec8\u6781\u7248\uff08XB1\uff09\u5728\u5fae\u8f6f\u552e\u4ef7 2.99 \u7f8e\u5143\uff08\u57fa\u4e8e Game Pass \u7684\u57fa\u7840\u6e38\u620f\u2014\u2014\u901a\u5e38\u4e3a 10 \u7f8e\u5143\uff09\u3002\nRed Dead Redemption 2 (XB1) \u5728 Microsoft \u552e\u4ef7 23.99 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38\u4e3a 35 \u7f8e\u5143\uff09\u3002 Hellblade\uff1aSenua&#39;s Sacrifice\uff08XB1\uff0cPC\uff09\u5728\u5fae\u8f6f\u552e\u4ef7 7.49 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38\u4e3a 20 \u7f8e\u5143\uff09\u3002\u751f\u5316\u5371\u673a 7\uff1a\u751f\u5316\u5371\u673a\uff08XB1\uff0cPC\uff09\u5728\u5fae\u8f6f\u552e\u4ef7 6.59 \u7f8e\u5143\uff08\u4e5f\u5728\u6e38\u620f\u901a\u884c\u8bc1\u4e0a\u2014\u2014\u901a\u5e38\u4e3a 20 \u7f8e\u5143\uff09\u3002\u6700\u7ec8\u5e7b\u60f3 VIII \u91cd\u5236\u7248 (XB1) \u5728\u5fae\u8f6f\u552e\u4ef7 9.99 \u7f8e\u5143\uff08\u4e5f\u5728\u6e38\u620f\u901a\u884c\u8bc1\u4e0a\u2014\u2014\u901a\u5e38\u4e3a 20 \u7f8e\u5143\uff09\u3002\u661f\u7403\u5927\u6218\u7edd\u5730\u6b66\u58eb\uff1a\u5815\u843d\u79e9\u5e8f\uff08XB1\uff09\u5728 GameStop \u548c Best Buy \u4e0a\u552e\u4ef7 14.99 \u7f8e\u5143\uff08\u7ed3\u8d26\u65f6\u6709\u6298\u6263\uff0c\u5fae\u8f6f 16 \u7f8e\u5143\uff0c\u8fd8\u6709 Game Pass \u514d\u8d39 XSX \u5347\u7ea7\u2014\u2014\u901a\u5e38\u662f 25 \u7f8e\u5143\uff09\u3002 Yakuza: Like a Dragon (XB1) \u5728\u4e9a\u9a6c\u900a\u548c\u767e\u601d\u4e70\u552e\u4ef7 24.99 \u7f8e\u5143\uff08\u514d\u8d39 XSX \u5347\u7ea7\u2014\u2014\u901a\u5e38\u4e3a 45 \u7f8e\u5143\uff09\u3002 Yakuza Kiwami 2 (XB1) \u5728\u5fae\u8f6f\u552e\u4ef7 9.99 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38\u4e3a 20 \u7f8e\u5143\uff09\u3002\nYakuza Remastered Collection (XB1) \u5728\u5fae\u8f6f\u552e\u4ef7 26.79 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38\u4e3a 40 \u7f8e\u5143\uff09\u3002 Yakuza 6: The Song of Life (XB1) \u5728\u5fae\u8f6f\u552e\u4ef7 12.99 \u7f8e\u5143\uff08\u4e5f\u5728 Game Pass \u4e0a\u2014\u2014\u901a\u5e38\u662f 20 \u7f8e\u5143\uff09\u3002 Lonely Mountains: Downhill (XB1, PC) \u5728\u5fae\u8f6f\u552e\u4ef7 13.39 \u7f8e\u5143\uff08\u4e5f\u5728\u6e38\u620f\u901a\u884c\u8bc1\u4e0a\u2014\u2014\u901a\u5e38\u4e3a 20 \u7f8e\u5143\uff09\u3002\u4f7f\u547d\u53ec\u5524\uff1a\u9ed1\u8272\u884c\u52a8\u51b7\u6218\uff08XSX\uff0cXB1\uff09\u5728\u5fae\u8f6f\u548c\u4e9a\u9a6c\u900a\u552e\u4ef7 34.99 \u7f8e\u5143\uff08\u4ec5 XB1 \u7248\u672c\u552e\u4ef7 30 \u7f8e\u5143\u2014\u2014\u901a\u5e38\u4e3a 70 \u7f8e\u5143\uff09\u3002 Demon&#39;s Souls (PS5) \u5728 Walmart\u3001GameStop\u3001Best Buy \u548c PlayStation Store \u4ee5 49.94 \u7f8e\u5143\u7684\u4ef7\u683c\u8d2d\u4e70\uff08\u901a\u5e38\u4e3a 65 \u7f8e\u5143\uff09\u3002\u6f2b\u5a01\u8718\u86db\u4fa0\uff1aMiles Morales (PS5) \u767e\u601d\u4e70\u552e\u4ef7 29.99 \u7f8e\u5143\uff08PS Store \u552e\u4ef7 35 \u7f8e\u5143\u2014\u2014\u901a\u5e38\u4e3a 47 \u7f8e\u5143\uff09\u3002 Nioh Collection (PS5) \u5728 Amazon\u3001Walmart\u3001GameStop \u548c Best Buy \u4e0a\u7684\u552e\u4ef7\u4e3a 49.94 \u7f8e\u5143\uff08\u901a\u5e38\u4e3a 60 \u7f8e\u5143\uff09\u3002\nGameStop \u548c Best Buy \u7684 The Last of Us Part II (PS4) \u552e\u4ef7 19.99 \u7f8e\u5143\uff08\u901a\u5e38\u4e3a 30 \u7f8e\u5143\uff09\u3002\u8d28\u91cf\u6548\u5e94\uff1a\u4f20\u5947\u7248 (PS4) \u5728\u4e9a\u9a6c\u900a\u3001Target \u548c PlayStation Store \u552e\u4ef7 44.99 \u7f8e\u5143\uff08\u901a\u5e38\u4e3a 60 \u7f8e\u5143\uff09\u3002 Yakuza: Like a Dragon (PS4) \u5728 Walmart \u548c Best Buy \u552e\u4ef7 24.99 \u7f8e\u5143\uff08\u514d\u8d39 PS5 \u5347\u7ea7\u2014\u2014\u901a\u5e38\u4e3a 45 \u7f8e\u5143\uff09\u3002 Uncharted 4: A Thief&#39;s End (PS4) \u5728 PlayStation Store \u552e\u4ef7 9.99 \u7f8e\u5143\uff08\u4e5f\u5728 PS5 PS Plus \u7cfb\u5217\u4e0a\u51fa\u552e\u2014\u2014\u901a\u5e38\u4e3a 15 \u7f8e\u5143\uff09\u3002 Bloodborne (PS4) \u5728 PlayStation Store \u552e\u4ef7 9.99 \u7f8e\u5143\uff08\u4e5f\u5728 PS5 PS Plus \u7cfb\u5217\u4e0a\u51fa\u552e\u2014\u2014\u901a\u5e38\u4e3a 17 \u7f8e\u5143\uff09\u3002\u5973\u795e\u5f02\u95fb\u5f55 5 Royal (PS4) \u552e\u4ef7 24.99 \u7f8e\u5143\uff0c\u4e9a\u9a6c\u900a\u3001\u767e\u601d\u4e70\u548c GameStop\uff08\u8c6a\u534e\u7248\u552e\u4ef7 31 \u7f8e\u5143\u2014\u2014\u901a\u5e38\u4e3a 50 \u7f8e\u5143\uff09\u3002 13 Sentinels: Aegis Rim (PS4) \u5728 GameStop \u552e\u4ef7 24.99 \u7f8e\u5143\uff08\u5728 PS Store \u552e\u4ef7 26 \u7f8e\u5143\u2014\u2014\u901a\u5e38\u4e3a 50 \u7f8e\u5143\uff09\u3002\n\u661f\u7403\u5927\u6218\u7edd\u5730\u6b66\u58eb\uff1a\u5815\u843d\u79e9\u5e8f (PS4) \u5728 GameStop \u548c\u767e\u601d\u4e70\u552e\u4ef7 14.99 \u7f8e\u5143\uff08\u7ed3\u8d26\u65f6\u53ef\u770b\u5230\u6298\u6263\uff0c\u514d\u8d39 PS5 \u5347\u7ea7\u2014\u2014\u901a\u5e38\u4e3a 25 \u7f8e\u5143\uff09\u3002\u4f7f\u547d\u53ec\u5524\uff1a\u9ed1\u8272\u884c\u52a8\u51b7\u6218\uff08PS5\u3001PS4\uff09\u5728 PlayStation Store \u552e\u4ef7 34.99 \u7f8e\u5143\uff08\u4ec5\u9650 PS4 \u7248\u672c\u552e\u4ef7 30 \u7f8e\u5143\u2014\u2014\u901a\u5e38\u4e3a 70 \u7f8e\u5143\uff09\u3002", "note_en": "This weekend edition of the Dealmaster is focused exclusively on video game discounts for PlayStation and Xbox owners, as both Sony and Microsoft kicked off wide-ranging sales on their respective online stores earlier this week. The former&#39;s  PlayStation Summer Sale\u00a0runs through August 18\u2014with  Sony promising a second batch of discounts arriving on August 4\u2014while the latter&#39;s  Xbox Ultimate Game Sale\u00a0will  last through August 5.\n These are  not the first sweeping sales each  company has run\u00a0on its digital shops this summer, but as before, the new promotions discount several hundred games across last- and  current-gen consoles (plus a  few PC games, in Microsoft&#39;s case). Also like before, most of the offers advertised in each sale aren&#39;t great deals, either because the game in question is lackluster or because the discount isn&#39;t much lower than the street price we&#39;ve seen in recent months.\n So, as we like to do with the Dealmaster, we&#39;ve looked through the entirety of Sony&#39;s and Microsoft&#39;s selections so you don&#39;t have to, picking out the genuine deals along the way.\n You can look through our full roundup below, but we&#39;ll shout out a few highlights first. On the PlayStation side, the gorgeous PS5 remake of the all-time great action-RPG\u00a0 Demon&#39;s Souls, which\u00a0 we called a &#34;must-buy&#34;\u00a0for PS5 owners, is down to a  joint-low of $50, as is the  hardcore sci-fi roguelike\u00a0 Returnal, which launched in April. Both games typically retail for $70. (We&#39;ll also note that  the latter suffered from some harsh glitches and game crashes at launch, but recent patches have helped rectify those issues in the time since.)\n Beyond those, there are a handful of notable PS4 discounts happening alongside Sony&#39;s summer sale that aren&#39;t a part of the sale itself. Those include the open-world  samurai adventure\u00a0 Ghost of Tsushima for $30, which is  $10 below its usual price over the past few months, and the stealth-action  zombie drama\u00a0 The Last of Us Part II\u00a0for $20, which  is a new low. Both of those made  our best games of 2020 list.\n Over on the Xbox side, it&#39;s worth remembering that many of the highlights are also included in Microsoft&#39;s  Xbox Game Pass Ultimate service, which goes for $15 a month. But if you&#39;d rather own your copy\u2014insofar as you can &#34;own&#34; a digital product\u2014the sale includes\u00a0  Halo: The Master Chief Collection\u00a0for $30, which matches the  lowest it&#39;s been on PC and falls about $10 lower than the  co-op-friendly collection&#39;s usual price on Xbox. The next-gen edition of the  supernatural shooter\u00a0 Control, our  2019 game of the year, is down to a  joint-low of $20, while a bundle that pairs both of the  excellent\u00a02D platformers\u00a0in the\u00a0 Ori\u00a0series is  half off at $17.49.\n Almost  the  entire\u00a0  Yakuza  series is deeply discounted, too, while single-player gems   Titanfall 2\u00a0and\u00a0  The Witcher 3 are down  to $3 and  $10, respectively. And the tactical dodgeball game\u00a0 Knockout City, which  our review deemed &#34;the best team-deathmatch game we&#39;ve played in years,&#34; is  down to $13 from its standard price of $20.\n There are plenty more deals on games besides those, however, including good deals on\u00a02021 games like\u00a0  Mass Effect: Legendary Edition\u00a0and\u00a0  Hitman 3, excellent indies like\u00a0  Disco Elysium,\u00a0 Kentucky Route Zero, and\u00a0  Lonely Mountains: Downhill, and much more. If you have more room on your backlog, you can check out all of our top picks below.\n Note: Ars Technica may earn compensation for sales from links on this post through\u00a0 affiliate programs.\n   Halo: The Master Chief Collection\u00a0(XB1,  PC) for\u00a0 $19.99 at Microsoft (also on Game Pass\u2014normally $30)\n Ori: The Collection\u00a0(XB1, PC) for\u00a0 $17.49 at Microsoft (also on Game Pass\u2014normally $35).\n  Control: Ultimate Edition\u00a0(XSX) for\u00a0 $19.99 at Microsoft (base game on Game Pass\u2014normally $40).\n  The Witcher 3: Wild Hunt - Game of the Year Edition\u00a0(XB1) for\u00a0 $9.99 at Microsoft (normally $25).\n Titanfall 2: Ultimate Edition\u00a0(XB1) for\u00a0 $2.99 at Microsoft (base game on Game Pass\u2014normally $10).\n Red Dead Redemption 2\u00a0(XB1) for\u00a0 $23.99\u00a0at Microsoft (also on Game Pass\u2014normally $35).\n  Hellblade: Senua&#39;s Sacrifice\u00a0(XB1,  PC) for\u00a0 $7.49 at Microsoft (also on Game Pass\u2014normally $20).\n    Resident Evil 7: Biohazard\u00a0(XB1, PC) for\u00a0 $6.59 at Microsoft (also on Game Pass\u2014normally $20).\n  Final Fantasy VIII Remastered\u00a0(XB1) for\u00a0 $9.99 at Microsoft (also on Game Pass\u2014normally $20).\n   Star Wars Jedi: Fallen Order\u00a0(XB1) for\u00a0 $14.99 at GameStop and  Best Buy (discount seen at checkout,   $16 at Microsoft, also on Game Pass free XSX upgrade \u2014normally $25).\n  Yakuza: Like a Dragon\u00a0(XB1) for\u00a0 $24.99 at Amazon\u00a0and  Best Buy (free XSX upgrade\u2014normally $45).\n   Yakuza Kiwami 2\u00a0(XB1) for\u00a0 $9.99 at Microsoft (also on Game Pass\u2014normally $20).\n The Yakuza Remastered Collection\u00a0(XB1) for\u00a0 $26.79 at Microsoft (also on Game Pass\u2014normally $40).\n Yakuza 6: The Song of Life\u00a0(XB1) for\u00a0 $12.99 at Microsoft (also on Game Pass\u2014normally $20).\n  Lonely Mountains: Downhill\u00a0(XB1, PC) for\u00a0 $13.39 at Microsoft (also on Game Pass\u2014normally $20).\n    Call of Duty: Black Ops Cold War\u00a0(XSX, XB1) for\u00a0 $34.99 at Microsoft and  Amazon ( XB1-only version for  $30\u2014normally $70).\n   Demon&#39;s Souls\u00a0(PS5) for\u00a0 $49.94\u00a0at Walmart,  GameStop,  Best Buy, and  PlayStation Store (normally $65).\n Marvel&#39;s Spider-Man: Miles Morales\u00a0(PS5) for\u00a0 $29.99 at Best Buy (  $35 at PS Store\u2014normally $47).\n   The Nioh Collection\u00a0(PS5) for\u00a0 $49.94 at Amazon,  Walmart,  GameStop, and  Best Buy (normally $60).\n  The Last of Us Part II\u00a0(PS4) for\u00a0 $19.99 at GameStop and  Best Buy (normally $30).\n Mass Effect: Legendary Edition\u00a0(PS4) for\u00a0 $44.99\u00a0at Amazon,  Target, and  PlayStation Store (normally $60).\n Yakuza: Like a Dragon\u00a0(PS4) for\u00a0 $24.99 at Walmart and  Best Buy (free PS5 upgrade\u2014normally $45).\n  Uncharted 4: A Thief&#39;s End\u00a0(PS4) for\u00a0 $9.99 at PlayStation Store (also on PS5 PS Plus Collection\u2014normally $15).\n  Bloodborne\u00a0(PS4) for\u00a0 $9.99 at PlayStation Store (also on PS5 PS Plus Collection\u2014normally $17).\n Persona 5 Royal\u00a0(PS4) for\u00a0 $24.99 at Amazon,  Best Buy, and  GameStop (  Deluxe Edition\u00a0for  $31 \u2014normally $50).\n 13 Sentinels: Aegis Rim\u00a0(PS4) for\u00a0 $24.99 at GameStop (  $26 at PS Store\u2014normally $50).\n  Star Wars Jedi: Fallen Order\u00a0(PS4) for\u00a0 $14.99 at GameStop and  Best Buy (discount seen at checkout, free PS5 upgrade \u2014normally $25).\n  Call of Duty: Black Ops Cold War\u00a0(PS5, PS4) for\u00a0 $34.99 at PlayStation Store (PS4-only version for  $30\u2014normally $70).", "posttime": "2021-07-24 23:41:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6e38\u620f,playstation", "title": "PlayStation \u548c Xbox \u6700\u65b0\u590f\u5b63\u6e38\u620f\u9500\u552e\u7684\u6700\u4f18\u60e0\u4ef7\u683c", "title_en": "The best deals from PlayStation\u2019s and Xbox\u2019s latest summer game sales", "transed": 1, "url": "https://arstechnica.com/staff/2021/07/best-video-game-deals-playstation-summer-sale-xbox-ultimate-game-sale/", "via": "", "real_tags": ["\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "a12953edcea9cfea83a27d4087db62b4.jpg", "infoid": 1069476, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u662f\u5426\u8fd8\u8bb0\u5f97\u7b14\u8bb0\u672c\u7535\u8111\u4f55\u65f6\u914d\u5907\u53ef\u62c6\u5378\u7535\u6c60\uff1f\u5bf9\u5185\u5b58\u710a\u63a5\u5728\u4e3b\u677f\u4e0a\u56e0\u6b64\u65e0\u6cd5\u5347\u7ea7\u7684\u4e3b\u6d41\u7b14\u8bb0\u672c\u7535\u8111\u611f\u5230\u6cae\u4e27\uff1f 13.5 \u82f1\u5bf8\u6846\u67b6\u7b14\u8bb0\u672c\u7535\u8111\u5229\u7528\u4e86\u8fd9\u79cd\u6000\u65e7\u60c5\u7eea\uff0c\u89e3\u51b3\u4e86\u73b0\u4ee3\u7b14\u8bb0\u672c\u7535\u8111\u6700\u5927\u7684\u7f3a\u70b9\u4e4b\u4e00\uff0c\u4f5c\u4e3a\u7ef4\u4fee\u6743\u8fd0\u52a8\u7684\u4e00\u90e8\u5206\u3002\u5b83\u4ece\u4e00\u5f00\u59cb\u5c31\u88ab\u8bbe\u8ba1\u4e3a\u5728\u6280\u672f\u4e0a\u5c3d\u53ef\u80fd\u53ef\u5b9a\u5236\u3001\u53ef\u5347\u7ea7\u548c\u53ef\u4fee\u590d\u3002\u8fd9\u662f\u5f88\u591a - \u80fd\u529b\uff0c\u7537\u5b69\u786e\u5b9e\u63d0\u4f9b\u4e86\u3002\u5b83\u5177\u6709\u56db\u4e2a\u6269\u5c55\u5361\u63d2\u69fd\u3001\u53ef\u63d2\u5165 USB-C \u8fde\u63a5\u5668\u7684\u6ed1\u5165\u5f0f\u6a21\u5757\u3001\u63d2\u69fd\u5f0f\u5b58\u50a8\u548c RAM\u3001\u5e26\u6709\u56fa\u5b9a CPU \u548c\u98ce\u6247\u3001\u7535\u6c60\u3001\u5c4f\u5e55\u3001\u952e\u76d8\u7b49\u7684\u53ef\u66f4\u6362\u4e3b\u677f\u6a21\u5757\u3002\u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u96f6\u4ef6\u6613\u4e8e\u53d6\u7528\uff0c\u540c\u65f6\u4ee5\u5177\u6709\u7ade\u4e89\u529b\u7684\u4ef7\u683c\u63d0\u4f9b\u53ef\u9760\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u4e0d\u727a\u7272\u7f8e\u611f\u3002\u8be5\u7b14\u8bb0\u672c\u7535\u8111\u73b0\u5df2\u5728\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\u9884\u8ba2\uff0c\u9884\u8ba1\u5c06\u6839\u636e\u914d\u7f6e\u5c0f\u6279\u91cf\u53d1\u8d27\u3002\u57fa\u4e8e Core i7 \u7684\u7cfb\u7edf\u9884\u8ba1\u5c06\u5728 8 \u6708\u63a8\u51fa\uff0c\u800c Core i5 \u7cfb\u7edf\u5219\u8981\u5230 9 \u6708\u624d\u80fd\u4e0a\u5e02\u3002 Framework \u7b14\u8bb0\u672c\u7535\u8111\u7684\u9884\u5236 Core i5-1135G7 \u578b\u53f7\uff08\u914d\u5907 8GB RAM \u548c 256GB SSD\uff09\u7684\u8d77\u4ef7\u4e3a 999 \u7f8e\u5143\uff0c\u914d\u5907 16GB RAM \u548c 512GB \u5b58\u50a8\u7684 Core i7-1165G7 Performance \u578b\u53f7\u6216\u914d\u5907 32GB RAM \u7684 vPro Core i7-1185G7 Professional \u578b\u53f7\u8d77\u4ef7\u4e3a 1,399 \u7f8e\u5143\u548c 1TB \u5b58\u50a8\u7a7a\u95f4\u3002 Framework \u9884\u8ba1\u5728\u5e74\u5e95\u524d\u6269\u5c55\u5230\u65b0\u7684\u5730\u533a\uff1b 999 \u7f8e\u5143\u8f6c\u6362\u4e3a\u5927\u7ea6 730 \u82f1\u9551\u6216 1,360 \u6fb3\u5143\u3002\u60a8\u53ea\u80fd\u8d2d\u4e708GB RAM\u548c256GB SSD\u7684\u5165\u95e8\u578b\u53f7\uff1b\u5982\u679c\u4f60\u60f3\u8981 16GB\uff0c\u6211\u63a8\u8350\u7684\u6700\u4f4e\u8fd0\u884c Windows\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u5347\u7ea7\u3002\u5982\u679c\u60a8\u60f3\u4ee5\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u6dfb\u52a0\u5b58\u50a8\uff0c\u60a8\u53ef\u4ee5\u8d2d\u4e70 250GB\uff0869 \u7f8e\u5143\uff09\u30011TB\uff08149 \u7f8e\u5143\uff09\u6216 Micro SD\uff0819 \u7f8e\u5143\uff09\u6269\u5c55\u5361\uff0c\u4f46\u6027\u80fd\u4e0d\u5982 NVMe SSD\u3002\u6240\u6709\u914d\u7f6e\u7684\u9ed8\u8ba4\u4ef7\u683c\u662f\u56db\u4e2a USB-C \u6a21\u5757\uff0c\u4f46\u60a8\u53ef\u4ee5\u6df7\u5408\u642d\u914d USB-C \u6216 USB-A\uff08\u6bcf\u4e2a 9 \u7f8e\u5143\uff09\u548c DisplayPort \u6216 HDMI\uff08\u6bcf\u4e2a 19 \u7f8e\u5143\uff09\u7684\u7aef\u53e3\u3002\u867d\u7136\u7b14\u8bb0\u672c\u7535\u8111\u53ea\u80fd\u5bb9\u7eb3\u56db\u5f20\u6269\u5c55\u5361\uff0c\u4f46\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8d2d\u4e70\u4efb\u610f\u6570\u91cf\u7684\u6269\u5c55\u5361\u3002\u6211\u559c\u6b22\u80fd\u591f\u6839\u636e\u8fde\u63a5\u7535\u7f06\u7684\u4f4d\u7f6e\u5207\u6362\u7ed9\u5b9a\u7aef\u53e3\u6240\u5728\u7684\u4e00\u4fa7\uff1b\u4e0d\u518d\u56e0\u4e3a\u9002\u914d\u5668\u5728\u53e6\u4e00\u4fa7\u800c\u7f20\u7ed5 USB-C \u7535\u6e90\uff0c\u6216\u8005\u56e0\u4e3a\u663e\u793a\u5668\u5728\u5de6\u4fa7\u800c\u4e0d\u662f\u53f3\u4fa7\u800c\u52aa\u529b\u4ece HDMI \u8fde\u63a5\u4e2d\u83b7\u5f97\u53e6\u4e00\u82f1\u5bf8\u6216\u4e24\u82f1\u5bf8\u3002\u662f\u7684\uff0c\u60a8\u53ef\u4ee5\u8fde\u63a5\u5230\u575e\u7ad9\u4ee5\u83b7\u5f97\u66f4\u591a\u7aef\u53e3\uff0c\u4f46\u662f\u6211\u9047\u5230\u4e86\u592a\u591a\u575a\u6301\u76f4\u63a5\u8fde\u63a5\u5230\u7aef\u53e3\u7684\u8bbe\u5907\u3002\n\u5982\u679c\u60a8\u559c\u6b22 DIY\uff0c\u8d77\u4ef7\u4e3a 749 \u7f8e\u5143\uff0c\u4f46\u8fd9\u57fa\u672c\u4e0a\u53ea\u4e3a\u60a8\u63d0\u4f9b CPU \u548c\u673a\u7bb1\u3002\u5982\u679c\u60a8\u5728\u5165\u95e8\u7ea7\u7684\u5185\u5b58\u548c\u5b58\u50a8\uff088GB \u548c 500GB\uff09\u4e2d\u6298\u817e\u56db\u4e2a USB \u6269\u5c55\u5361\u3001Wi-Fi\u3001\u7535\u6e90\u9002\u914d\u5668\u548c Windows\u3002\u7ed3\u679c\u662f 1,109 \u7f8e\u5143\u3002 DIY \u6a21\u578b\u5c06 Linux \u6dfb\u52a0\u5230\u60a8\u53ef\u4ee5\u5b89\u88c5\u7684\u64cd\u4f5c\u7cfb\u7edf\u5217\u8868\u4e2d\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5c06 Windows Pro \u9650\u5236\u4e3a vPro \u6a21\u578b\u3002\u6a21\u5757\u5316\u4ee5\u524d\u505a\u8fc7\uff0c\u4f46\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\u7684\u4e00\u5207\u90fd\u662f\u53ef\u66f4\u6362\u3001\u53ef\u5347\u7ea7\u548c\u53ef\u4fee\u590d\u7684\u3002\u8bb8\u591a\u7b14\u8bb0\u672c\u7535\u8111\u5141\u8bb8\u60a8\u5347\u7ea7\u5185\u5b58\u6216\u5b58\u50a8\u5e76\u66f4\u6362\u5c4f\u5e55\u3002\u4f7f\u7528\u6846\u67b6\uff0c\u9664\u4e86\u7aef\u53e3\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u66f4\u6362\u4e3b\u677f\u3001\u89e6\u6478\u677f\u3001\u952e\u76d8\u3001\u626c\u58f0\u5668\u3001\u7535\u6c60\u2026\u2026\u4efb\u4f55\u60a8\u80fd\u60f3\u5230\u7684\u4e1c\u897f\u3002\u4e0d\u60f3\u81ea\u5df1\u505a\u5417\uff1f Framework \u6b63\u5728\u53d1\u5e03\u7ef4\u4fee\u5e97\u6216 IT \u90e8\u95e8\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u66f4\u6362\u96f6\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7ef4\u4fee\u3002\u4f46\u662f\uff0c\u9664\u6b64\u4e4b\u5916\uff0cFramework \u8fd8\u82b1\u4e86\u5f88\u591a\u5fc3\u601d\u6765\u89e3\u51b3\u60a8\u5728\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u6240\u6709\u75db\u70b9\u3002\u60a8\u53ef\u80fd\u65e0\u9700\u67e5\u770b\u624b\u518c\u5373\u53ef\u66f4\u6362\u4efb\u4f55\u90e8\u4ef6\u3002\u5b83\u914d\u5907\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u4e00\u7aef\u6709\u87ba\u4e1d\u5200\u2014\u2014\u4e00\u4e2a\u7ec4\u5408 Torx T5 \u548c\u98de\u5229\u6d66\u5934\u2014\u2014\u53e6\u4e00\u7aef\u6709\u4e00\u4e2a\u6954\u5b50\uff0c\u7528\u4e8e\u64ac\u5f00\u96f6\u4ef6\uff0c\u5916\u52a0\u4e00\u4e9b\u5907\u7528\u87ba\u4e1d\u3002\u8bb8\u591a\u87ba\u4e1d\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u5c0f\u3002\u78c1\u94c1\u5c06\u53ef\u4e92\u6362\u7684\u5c4f\u5e55\u8fb9\u6846\u56fa\u5b9a\u5728\u4e0a\u9762\u3002\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u9690\u85cf\u5728\u5176\u4ed6\u90e8\u5206\u4e4b\u4e0b\uff0c\u6240\u4ee5\u4e00\u5207\u90fd\u5f88\u5bb9\u6613\u5230\u8fbe\u3002\u6bcf\u4e2a\u6846\u67b6\u90e8\u4ef6\u90fd\u6709\u4e00\u4e2a\u4e8c\u7ef4\u7801\u548c\u77ed URL\uff0c\u53ef\u5c06\u60a8\u5e26\u5230\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5e76\u4e14\u6807\u51c6\u90e8\u4ef6\uff08\u5185\u5b58\u548c SSD\uff09\u4e0a\u7684\u6807\u7b7e\u6613\u4e8e\u9605\u8bfb\u3002 Framework \u5b9e\u73b0\u4e86\u8fd9\u4e00\u58ee\u4e3e\uff0c\u800c\u4e0d\u4f1a\u4f7f\u7b14\u8bb0\u672c\u7535\u8111\u53d8\u539a\u6216\u7b28\u91cd\u3002\u5b83\u4e0d\u662f\u8857\u533a\u4e2d\u6700\u7626\u7684\u5b69\u5b50\uff0c\u4f46\u5b83\u5728 15.9 \u6beb\u7c73\uff080.6 \u82f1\u5bf8\uff09\u548c 2.3 \u78c5\uff081.3 \u516c\u65a4\uff09\u65f6\u51e0\u4e4e\u4e0d\u80d6\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5236\u9020\u5c3d\u53ef\u80fd\u8584\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u9a71\u52a8\u529b\u662f\u6211\u4eec\u4eca\u5929\u9677\u5165\u56f0\u5883\u7684\u90e8\u5206\u539f\u56e0\u3002\u7ec4\u4ef6\u4e5f\u6ca1\u6709\u59a5\u534f\uff0c\u5305\u62ec\u5feb\u901f WD Black SSD\u30011080/60fps \u7f51\u7edc\u6444\u50cf\u5934\u2014\u2014\u4ecd\u7136\u4e0d\u662f\u5f88\u597d\uff0c\u4f46\u6bd4\u5f53\u4eca\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u7684\u5927\u591a\u6570 720p \u578b\u53f7\u8981\u597d\u2014\u2014\u4e00\u4e2a\u660e\u4eae\u7684\u4e9a QHD \u5206\u8fa8\u7387 sRGB \u5c4f\u5e55\uff08\u76f8\u540c\u8054\u60f3 ThinkPad X1 Titanium Yoga \u4e2d\u7684\u4e00\u4e2a\uff0c\u5c3d\u7ba1\u6ca1\u6709\u89e6\u6478\u5c4f\u8986\u76d6\u5c42\uff09\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u8212\u9002\u80cc\u5149\u952e\u76d8\u548c\u5927\u89e6\u6478\u677f\u3002\u867d\u7136\u5b83\u8fd8\u6ca1\u6709 Thunderbolt 4 \u6269\u5c55\u5361\uff0c\u4f46\u8fd9\u4e0d\u662f\u6280\u672f\u95ee\u9898\u3002\u5b83\u5177\u6709\u4e0e\u5927\u591a\u6570\u82f1\u7279\u5c14\u7b2c 11 \u4ee3\u7b14\u8bb0\u672c\u7535\u8111\u76f8\u540c\u7684\u53cc Thunderbolt \u63a7\u5236\u5668\uff0c\u4ee5\u53ca PCIe 4 \u5b58\u50a8\u548c Wi-Fi 6\u3002\u5b83\u63d0\u4f9b\u4e86\u7269\u6709\u6240\u503c\u7684\u7ade\u4e89\u6027\u80fd\u3002\n\u6211\u5bf9 Framework Laptop \u7684\u6700\u5927\u4fdd\u7559\u662f\u8bb8\u591a\u6a21\u5757\u7684\u4e13\u6709\u6027\u3002\u8fd9\u5728\u6280\u672f\u4e0a\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u8fc7\u53bb\u963b\u788d\u4e86\u6a21\u5757\u5316\u8bbe\u8ba1\u3002\u7136\u800c\uff0c\u8be5\u7cfb\u7edf\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u5373\u4f7f\u60a8\u6c38\u8fdc\u4e0d\u9700\u8981\u66f4\u6362\u90e8\u4ef6\u6216\u53d1\u73b0\u65e0\u6cd5\u66f4\u6362\uff0c\u60a8\u7684\u60c5\u51b5\u4ecd\u7136\u4e0d\u4f1a\u6bd4\u8d2d\u4e70\u53e6\u4e00\u5bb6\u516c\u53f8\u7684\u7b14\u8bb0\u672c\u7535\u8111\u66f4\u7cdf\u3002\u6211\u4e5f\u4e0d\u8ba4\u4e3a\u5b83\u5bf9\u4efb\u4f55\u5927\u578b\u7b14\u8bb0\u672c\u7535\u8111\u5236\u9020\u5546\u7684\u5e95\u7ebf\u6784\u6210\u91cd\u5927\u5a01\u80c1\u3002\u4f46\u5982\u679c\u5b83\u80fd\u4fc3\u4f7f\u4ed6\u4eec\u91cd\u65b0\u601d\u8003\u4ed6\u4eec\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u90fd\u4f1a\u8fc7\u5f97\u66f4\u597d\u3002\u5fae\u8f6f\u89c6\u7a97 10 \u4e13\u4e1a\u7248 (21H1)\uff1b 3GHz \u82f1\u7279\u5c14\u9177\u777f i7-1185G7\uff1b 32GB DDR4 3,200MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 1TB PCIe NVMe SSD Microsoft Windows 10 Home (20H2)\uff1b 2.8GHz \u82f1\u7279\u5c14\u9177\u777f i7-1165G7\uff1b 16GB LPDDR4x 3,733MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 512GB \u4e09\u661f PCIe NVMe SSD Microsoft Windows 10 Home (20H2)\uff1b 3GHz \u82f1\u7279\u5c14\u9177\u777f i7-1185G7\uff1b 16GB LPDDR4x 4,267MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 512GB PCIe NVMe SSD Microsoft Windows 10 Home (20H2)\uff1b 2.8GHz \u82f1\u7279\u5c14\u9177\u777f i7-1165G7\uff1b 16GB LPDDR4x 4,267MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 1TB PCIe NVMe SSD Microsoft Windows 10 Home (20H2)\uff1b 2.8GHz \u82f1\u7279\u5c14\u9177\u777f i7-1165G7\uff1b 16GB LPDDR4x 4,267MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 256GB PCIe NVMe SSD Microsoft Windows 10 Home (20H2)\uff1b 2.8GHz \u82f1\u7279\u5c14\u9177\u777f i7-1165G7\uff1b 16GB LPDDR4x 4,267MHz \u5185\u5b58\uff1b 128MB Intel Iris Xe \u663e\u5361\uff1b 1TB PCIe NVMe \u56fa\u6001\u786c\u76d8", "note_en": "Are you old enough to remember when laptops had removable batteries? Frustrated by mainstream laptops with memory soldered to the motherboard and therefore not upgradable? The 13.5-inch Framework Laptop taps into that nostalgia, addressing one of the biggest drawbacks in modern laptops as part of the  right-to-repair movement. It was designed from the ground up to be as customizable, upgradable and repairable as technologically possible. That&#39;s a lot of -able, and boy does it deliver.\n It features four expansion card slots, slide-in modules that snap into USB-C connectors, socketed storage and RAM, a replaceable mainboard module with fixed CPU and fan, battery, screen, keyboard and more. It&#39;s a design that makes the parts easy to access, all while delivering solid performance at competitive prices and without sacrificing aesthetics.\n  The laptop&#39;s in preorder now for the US and Canada, slated to ship in small batches depending upon the configuration. Core i7-based systems are expected to go out in August, while Core i5 systems won&#39;t be available until September.\n Prices for the Framework Laptop start at $999 for the prefab Core i5-1135G7 model with 8GB RAM and 256GB SSD, $1,399 for the Core i7-1165G7 Performance model with 16GB RAM and 512GB storage or a vPro Core i7-1185G7 Professional model with 32GB RAM and 1TB storage. Framework expects to expand into new regions by the end of the year; $999 converts to roughly \u00a3730 or AU$1,360.\n  You can only buy the entry model with 8GB RAM and a 256GB SSD; if you want 16GB, my recommended minimum for running   Windows, you&#39;ve got to upgrade it yourself. You can buy a 250GB ($69), 1TB ($149) or Micro SD ($19) expansion card if you want an easier way to add storage, but performance won&#39;t be as good as the NVMe SSD.\n  The default pricing on all configurations is for four USB-C modules, but you can mix and match ports from USB-C or USB-A ($9 each) and DisplayPort or HDMI ($19 each). Although the laptop only accommodates four expansion cards, you can buy as many as you need to swap in and out.\n I love being able to switch the side a given port is on based on where the attached cable is; no more winding the USB-C power around because the adapter&#39;s on the other side or struggling to gain another inch or two out of the HDMI connection because the monitor&#39;s on the left, not the right. Yes, you can hook up to a dock for more ports, but I&#39;ve run into too many devices that insist on connecting directly to the port.\n  If you&#39;re feeling DIY, prices start at $749, but that basically just gives you the CPU and chassis. If you toss in the entry levels of memory and storage (8GB and 500GB) four USB expansion cards, Wi-Fi, power adapter and Windows. it works out to $1,109. The DIY model adds Linux to the list of operating systems you can install, and doesn&#39;t restrict Windows Pro to the vPro model.\n  Modular has been done before, but  everything in this system is replaceable, upgradable and repairable. Many laptops let you upgrade memory or storage and replace the screen. With the Framework, in addition to the ports you can swap out the mainboard, touchpad, keyboard, speakers, battery... anything you can think of. Don&#39;t feel like doing it yourself? Framework is publishing all the information necessary for a repair shop or IT department to not just swap parts, but to perform repairs.\n  Beyond that, though, Framework has put a ton of thought into addressing all the pain points you might encounter in pursuit of upgrades; you could probably change out any part without looking at a manual. It comes with a tool that has screwdriver on one end -- a combo Torx T5 and Philips head -- and a wedge on the other for prying parts apart, plus some spare screws. Many of the screws are captive, an important consideration because they&#39;re tiny. Magnets hold the interchangeable screen bezel on.\n Nothing is buried under other parts, so everything&#39;s easy to get to. Each Framework part has a QR code and short URL to take you to  all the info you&#39;ll need about it and the labels on the standard parts (memory and SSD) are easy to read.\n  And Framework has managed this feat without making the laptop thick or unwieldy. It&#39;s not the skinniest kid on the block, but it&#39;s hardly chunky at 15.9mm (0.6 inches) and 2.3 lbs (1.3 kilograms). The drive to make the thinnest possible laptop is partly responsible for the irreparability we&#39;re stuck with today, anyway.\n Nor are there compromises on the components, which include fast WD Black SSD, a 1080/60fps webcam -- still not great, but better than most of the 720p models in today&#39;s laptops -- a bright sub-QHD resolution sRGB screen (the same one that&#39;s in the Lenovo ThinkPad X1 Titanium Yoga, albeit without the touchscreen overlay), surprisingly comfortable backlit keyboard and large touchpad.\n  Though it doesn&#39;t yet have Thunderbolt 4 expansion cards, that&#39;s not a technology problem. It&#39;s got the same dual Thunderbolt controllers as most Intel 11th-gen laptops, along with the PCIe 4 storage and Wi-Fi 6. And it delivers competitive performance for the money.\n My biggest reservation about the Framework Laptop is how proprietary many of the modules are. That&#39;s technologically necessary, but in the past has choked modular designs. The beauty of this system, though, is that even if you never need to replace a part or find you can&#39;t, you&#39;re still no worse off than if you&#39;d bought another company&#39;s laptop. Nor do I see it posing a significant threat to the bottom line of any of the big laptop manufacturers. But if it can nudge them into rethinking their designs, we&#39;re all better off.\n       Microsoft Windows 10 Pro (21H1); 3GHz Intel Core i7-1185G7; 32GB DDR4 3,200MHz RAM; 128MB Intel Iris Xe graphics; 1TB PCIe NVMe SSD\n  Microsoft Windows 10 Home (20H2); 2.8GHz Intel Core i7-1165G7; 16GB LPDDR4x 3,733MHz RAM; 128MB Intel Iris Xe graphics; 512GB Samsung PCIe NVMe SSD\n  Microsoft Windows 10 Home (20H2); 3GHz Intel Core i7-1185G7; 16GB LPDDR4x 4,267MHz RAM; 128MB Intel Iris Xe graphics; 512GB PCIe NVMe SSD\n  Microsoft Windows 10 Home (20H2); 2.8GHz Intel Core i7-1165G7; 16GB LPDDR4x 4,267MHz RAM; 128MB Intel Iris Xe graphics; 1TB PCIe NVMe SSD\n  Microsoft Windows 10 Home (20H2); 2.8GHz Intel Core i7-1165G7; 16GB LPDDR4x 4,267MHz RAM; 128MB Intel Iris Xe graphics; 256GB PCIe NVMe SSD\n  Microsoft Windows 10 Home (20H2); 2.8GHz Intel Core i7-1165G7; 16GB LPDDR4x 4,267MHz RAM; 128MB Intel Iris Xe graphics; 1TB PCIe NVMe SSD", "posttime": "2021-07-24 23:36:18", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7535\u8111,\u6a21\u5757\u5316,modular,\u7b14\u8bb0\u672c\u7535\u8111", "title": "\u53ef\u4fee\u590d\u7684\u6a21\u5757\u5316\u6846\u67b6\u7b14\u8bb0\u672c\u7535\u8111\u5f00\u59cb\u53d1\u8d27", "title_en": "Repairable, Modular Framework Laptop Begins Shipping", "transed": 1, "url": "https://www.cnet.com/tech/computing/framework-laptop-review-a-functional-and-futureproof-13-inches/", "via": "", "real_tags": ["\u7535\u8111", "\u6a21\u5757\u5316", "modular", "\u7b14\u8bb0\u672c\u7535\u8111"]}, {"category": "", "categoryclass": "", "imagename": "e28cab68e9a09075fa2ac2c18d73700d.jpg", "infoid": 1069474, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5b87\u822a\u5c40\u5b98\u5458\u5468\u4e94\uff087 \u6708 23 \u65e5\uff09\u5ba3\u5e03\uff0c\u4ef7\u503c 42.5 \u4ebf\u7f8e\u5143\u7684 Europa Clipper \u98de\u8239\u5c06\u5728 SpaceX Falcon Heavy \u706b\u7bad\u4e0a\u53d1\u5c04\u3002\u4ed6\u4eec\u8865\u5145\u8bf4\uff0c\u5408\u540c\u603b\u4ef7\u503c\u7ea6\u4e3a 1.78 \u4ebf\u7f8e\u5143\u3002\u5982\u679c\u4e00\u5207\u6309\u8ba1\u5212\u8fdb\u884c\uff0c\u5feb\u8239\u5c06\u4e8e 2024 \u5e74 10 \u6708\u4ece\u7f8e\u56fd\u5b87\u822a\u5c40\u4f4d\u4e8e\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u80af\u5c3c\u8fea\u822a\u5929\u4e2d\u5fc3\u53d1\u5c04\u5347\u7a7a\uff0c\u5e76\u4e8e 2030 \u5e74 4 \u6708\u62b5\u8fbe\u73af\u7ed5\u6728\u661f\u7684\u8f68\u9053\u3002\u7136\u540e\uff0c\u63a2\u6d4b\u5668\u5c06\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u8fd1 50 \u6b21\u8fd1\u8ddd\u79bb\u98de\u8d8a\u6708\u7403\uff0c\u6df1\u5165\u7814\u7a76\u6728\u536b\u4e8c\u4efb\u52a1\u56e2\u961f\u6210\u5458\u8bf4\uff0c\u5927\u7ea6\u662f\u5730\u7403\u56db\u5e74\u3002\u6728\u536b\u4e8c\u5728\u5176\u51b0\u58f3\u4e0b\u8574\u85cf\u7740\u5de8\u5927\u7684\u6db2\u6001\u6c34\u6d77\u6d0b\uff0c\u88ab\u8ba4\u4e3a\u662f\u592a\u9633\u7cfb\u4e2d\u5bb9\u7eb3\u5916\u661f\u751f\u547d\u7684\u6700\u4f73\u9009\u62e9\u4e4b\u4e00\u3002\u9664\u4e86\u8bb8\u591a\u5176\u4ed6\u4efb\u52a1\u5916\uff0c\u5feb\u8239\u8fd8\u5c06\u63cf\u7ed8\u6d77\u6d0b\u548c\u51b0\u58f3\u7684\u7279\u5f81\uff0c\u5e76\u5bfb\u627e\u826f\u597d\u3001\u5b89\u5168\u7684\u5730\u65b9\uff0c\u8ba9\u4e00\u8258\u80fd\u591f\u6355\u6349\u751f\u547d\u7684\u6728\u536b\u4e8c\u6c34\u9762\u98de\u884c\u5668\u7740\u9646\uff0c\u56fd\u4f1a\u5df2\u6307\u793a NASA \u5f00\u53d1\u8fd9\u79cd\u98de\u884c\u5668\u3002 \uff08\u7136\u800c\uff0c\u7740\u9646\u5668\u4efb\u52a1\u76ee\u524d\u4ecd\u7136\u662f\u4e00\u4e2a\u6982\u5ff5\uff1b\u5b83\u6ca1\u6709\u8d44\u91d1\uff0c\u4e5f\u6ca1\u6709\u51fa\u73b0\u5728 NASA \u7684\u8d26\u7c3f\u4e0a\u3002\uff09\u4eca\u5929\u7684\u516c\u544a\u7ed3\u675f\u4e86\u6b27\u7f57\u5df4\u5feb\u8239\u4efb\u52a1\u6f2b\u957f\u7684\u53d1\u5c04\u8fc7\u7a0b\u3002\u56fd\u4f1a\u6700\u521d\u6307\u793a\u7f8e\u56fd\u5b87\u822a\u5c40\u5728\u592a\u7a7a\u53d1\u5c04\u7cfb\u7edf (SLS) \u4e0a\u53d1\u5c04\u5feb\u8239\u548c\u672a\u6765\u7684\u7740\u9646\u5668\uff0c\u8be5\u673a\u6784\u6b63\u5728\u5efa\u9020\u7684\u5de8\u578b\u706b\u7bad\u662f\u4e3a\u4e86\u5c06\u4eba\u5458\u53d1\u5c04\u548c\u63a2\u6d4b\u5230\u6df1\u7a7a\u76ee\u7684\u5730\u3002\u4f46\u591a\u5e74\u6765\uff0cSLS \u7684\u5f00\u53d1\u4e00\u76f4\u53d7\u5230\u5ef6\u8bef\u548c\u6210\u672c\u8d85\u652f\u7684\u56f0\u6270\u3002\u5de8\u578b\u706b\u7bad\u4ecd\u672a\u98de\u884c\uff0c\u5b83\u7684\u524d\u51e0\u9879\u4efb\u52a1\u5df2\u7ecf\u4e13\u95e8\u7528\u4e8e\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u963f\u5c14\u5fd2\u5f25\u65af\u6708\u7403\u63a2\u7d22\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u65e8\u5728\u6700\u65e9\u5728 2024 \u5e74\u5c06\u4eba\u7c7b\u9001\u4e0a\u6708\u7403\uff0c\u5e76\u5728\u672c\u5341\u5e74\u672b\u5728\u90a3\u91cc\u5efa\u7acb\u53ef\u6301\u7eed\u7684\u4eba\u7c7b\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a Europa Clipper \u4f55\u65f6\u53ef\u4ee5\u4f7f\u7528 SLS\u3002\u53bb\u5e74\u590f\u5929\uff0c\u8fd9\u9879\u4efb\u52a1\u6709\u4e86\u4e00\u4e9b\u56de\u65cb\u4f59\u5730\uff0c\u5f53\u65f6\u7f8e\u56fd\u4f17\u8bae\u9662\u5728\u5176\u62df\u8bae\u7684 2021 \u5e74\u9884\u7b97\u4e2d\u8868\u793a\uff0c\u7f8e\u56fd\u5b87\u822a\u5c40\u5c06\u5728 2025 \u5e74\u4e4b\u524d\u53d1\u5c04\u5feb\u8239\uff0c\u5728 2027 \u5e74\u4e4b\u524d\u53d1\u5c04\u672a\u6765\u7684\u7740\u9646\u5668\uff0c\u5e76\u4e14\u201c\u5982\u679c\u6709\u7684\u8bdd\u201d\u5c06\u4f7f\u7528 SLS\u3002\u56e2\u961f\u6210\u5458\u8868\u793a\uff0c\u8fd9\u4e00\u63aa\u8f9e\u4e3a SLS \u7684\u5546\u4e1a\u66ff\u4ee3\u65b9\u6848\u7684\u53ef\u80fd\u6027\u63d0\u4f9b\u4e86\u7eff\u706f\uff0c\u5feb\u8239\u56e2\u961f\u5f00\u59cb\u4e3a\u8fd9\u4e24\u79cd\u7a81\u53d1\u4e8b\u4ef6\u505a\u8ba1\u5212\u2014\u2014\u8fd9\u662f\u4e00\u9879\u53cc\u91cd\u804c\u8d23\uff0c\u5bf9\u4efb\u52a1\u7684\u6210\u719f\u4ea7\u751f\u4e86\u8d1f\u9762\u5f71\u54cd\u3002\n\u7136\u540e\uff0c\u5728\u4eca\u5e74\u4e00\u6708\uff0c\u6b27\u7f57\u5df4\u5feb\u8239\u961f\u7ec8\u4e8e\u4ee5\u7f8e\u56fd\u5b87\u822a\u5c40\u884c\u661f\u4efb\u52a1\u8ba1\u5212\u529e\u516c\u5ba4\u7684\u5907\u5fd8\u5f55\u7684\u5f62\u5f0f\u83b7\u5f97\u4e86\u5b83\u60f3\u8981\u7684\u6e05\u6670\u5ea6\u3002\u5b83\u544a\u8bc9\u4efb\u52a1\u56e2\u961f\u6210\u5458\u505c\u6b62\u8ba1\u5212\u53ef\u80fd\u7684 SLS \u53d1\u5c04\uff0c\u56e0\u4e3a\u5feb\u8239\u5c06\u4e58\u5750\u5546\u4e1a\u706b\u7bad\u98de\u5411\u592a\u7a7a\u3002\u73b0\u5728\u6211\u4eec\u77e5\u9053\u90a3\u5c06\u662f\u54ea\u79cd\u706b\u7bad\u3002 \uff08\u7f8e\u56fd\u5b87\u822a\u5c40\u4eca\u5929\u7684\u516c\u544a\u5e76\u6ca1\u6709\u8bf4\u660e\u54ea\u4e9b\u53d1\u5c04\u5668\u730e\u9e70\u91cd\u578b\u706b\u7bad\u6700\u9002\u5408\u5feb\u8239\u5408\u540c\u3002\uff09\u730e\u9e70\u91cd\u578b\u53d1\u5c04\u5c06\u6bd4\u5728 SLS \u4e0a\u66f4\u8fc2\u56de\uff0c\u7f8e\u56fd\u5b87\u822a\u5c40\u5439\u6367\u5b83\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5f3a\u5927\u7684\u706b\u7bad. SLS \u5c06\u628a\u5feb\u8239\u9001\u4e0a\u76f4\u63a5\u98de\u5f80\u6728\u661f\u7684\u8f68\u9053\uff0c\u5728\u5347\u7a7a\u540e\u4e0d\u5230\u4e09\u5e74\u5c31\u5230\u8fbe\u8fd9\u9897\u5de8\u5927\u7684\u884c\u661f\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u5357\u52a0\u5dde\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u7684\u4efb\u52a1\u9879\u76ee\u79d1\u5b66\u5bb6\u9c8d\u52c3\u5e15\u5e15\u62c9\u591a\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u8868\u793a\uff0c\u4f7f\u7528\u5546\u7528\u706b\u7bad\u5c06\u8981\u6c42\u5feb\u8239\u5206\u522b\u5728 2025 \u5e74 2 \u6708\u548c 2026 \u5e74 12 \u6708\u5bf9\u706b\u661f\u548c\u5730\u7403\u8fdb\u884c\u52a0\u901f\u98de\u884c\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0cFalcon Heavy \u5df2\u7ecf\u98de\u884c\u4e86 3 \u6b21\uff0c\u6700\u8fd1\u4e00\u6b21\u662f\u5728 2019 \u5e74 6 \u6708\uff0c\u5f53\u65f6\u5b83\u4e3a\u7f8e\u56fd\u592a\u7a7a\u6d4b\u8bd5\u8ba1\u5212\u542f\u52a8\u4e86\u4e00\u9879\u4efb\u52a1\u3002\u8fc8\u514b\u6c83\u5c14\u662f\u201c\u5916\u9762\u201d\uff08\u4e2d\u592e\u51fa\u7248\u793e\uff0c2018 \u5e74\uff1b\u5361\u5c14\u00b7\u6cf0\u7279\u63d2\u56fe\uff09\u7684\u4f5c\u8005\uff0c\u8fd9\u662f\u4e00\u672c\u5173\u4e8e\u5bfb\u627e\u5916\u661f\u751f\u547d\u7684\u4e66\u3002\u5728 Twitter \u4e0a\u5173\u6ce8\u4ed6@michaeldwall\u3002\u5728 Twitter @Spacedotcom \u6216 Facebook \u4e0a\u5173\u6ce8\u6211\u4eec\u3002\u52a0\u5165\u6211\u4eec\u7684\u592a\u7a7a\u8bba\u575b\uff0c\u7ee7\u7eed\u8c08\u8bba\u6709\u5173\u6700\u65b0\u4efb\u52a1\u3001\u591c\u7a7a\u7b49\u7684\u592a\u7a7a\u8bdd\u9898\uff01\u5982\u679c\u60a8\u6709\u65b0\u95fb\u63d0\u793a\u3001\u66f4\u6b63\u6216\u8bc4\u8bba\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u544a\u8bc9\u6211\u4eec\uff1acommunity@space.com\u3002", "note_en": "The $4.25 billion  Europa Clipper spacecraft will launch atop a SpaceX  Falcon Heavy rocket, NASA officials announced Friday (July 23). The total value of the contract is about $178 million, they added.\n  If all goes according to plan, Clipper will lift off in October 2024 from NASA&#39;s  Kennedy Space Center in Florida and arrive in orbit around  Jupiter in April 2030. The probe will then study Europa in depth during nearly 50 close flybys of the moon over the course of about four Earth years, mission team members have said.\n    Europa harbors a huge ocean of liquid water beneath its icy shell and is regarded as one of the solar system&#39;s best bets to host  alien life. Clipper will, among many other tasks, characterize the ocean and ice shell and hunt for good, safe places to land a life-hunting Europa surface craft, which Congress has directed NASA to develop. (The lander mission remains a concept for now, however; it does not have funding and is not on NASA&#39;s books yet.)\n  Today&#39;s announcement ends a lengthy launch limbo for the Europa Clipper mission. Congress originally instructed NASA to launch both Clipper and the future lander on the  Space Launch System (SLS), the giant rocket that the agency is building to launch people and probes to deep-space destinations.\n But the development of SLS has been plagued by delays and cost overruns over the years. The megarocket still hasn&#39;t flown, and its first few missions are already devoted to NASA&#39;s  Artemis program of lunar exploration, which aims to land people on the moon as early as 2024 and establish a sustainable human presence there by the end of the decade.\n    It has therefore been unclear when an SLS would become available for Europa Clipper. Some wiggle room for the mission opened up last summer, when the U.S. House of Representatives said in its proposed  2021 budget that NASA was to launch Clipper by 2025 and the future lander by 2027, and to use SLS for both &#34;if available.&#34;\n The wording greenlit the possibility of a commercial alternative to SLS, and the Clipper team started planning for both contingencies \u2014\u00a0a double duty that negatively affected the mission&#39;s maturation, team members have said.\n Then, this past January, the Europa Clipper team finally got the clarity it wanted, in the form of a memo from NASA&#39;s Planetary Missions Program Office. It told mission team members to stop planning for a possible SLS launch because  Clipper would ride to space on a commercial rocket.\n  And now we know which rocket that will be. ( NASA&#39;s announcement today didn&#39;t state which launchers Falcon Heavy bested for the Clipper contract.)\n Clipper&#39;s ride to Europa will be more circuitous with a Falcon Heavy launch than it would have been aboard SLS, which NASA touts as the most powerful rocket ever developed. SLS would have sent Clipper on a direct-to-Jupiter trajectory, arriving at the giant planet less than three years after liftoff.\n The use of a commercial rocket will require Clipper to perform speed-boosting flybys of Mars and Earth in February 2025 and December 2026, respectively, mission project scientist Bob Pappalardo of NASA&#39;s Jet Propulsion Laboratory in Southern California said earlier this year.\n Falcon Heavy has flown three times to date, most recently in June 2019, when it launched a mission for the U.S. Space Test Program.\n Mike Wall is the author of &#34;  Out There &#34; (Grand Central Publishing, 2018; illustrated by Karl Tate), a book about the search for alien life. Follow him on Twitter @michaeldwall. Follow us on Twitter @Spacedotcom or Facebook.\n  Join our Space Forums to keep talking space on the latest missions, night sky and more! And if you have a news tip, correction or comment, let us know at:  community@space.com.", "posttime": "2021-07-24 23:35:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd\u5b87\u822a\u5c40,\u706b\u7bad,nasa,\u7f8e\u56fd,\u53d1\u5c04", "title": "SpaceX \u730e\u9e70\u91cd\u578b\u706b\u7bad\u5c06\u53d1\u5c04\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u6b27\u7f57\u5df4\u5feb\u8239\u5230\u51b0\u51b7\u7684\u6728\u661f\u536b\u661f", "title_en": "SpaceX Falcon Heavy rocket will launch NASA's Europa Clipper to icy Jupiter moon", "transed": 1, "url": "https://www.space.com/nasa-picks-spacex-falcon-heavy-for-europa-clipper-launch", "via": "", "real_tags": ["\u7f8e\u56fd\u5b87\u822a\u5c40", "\u706b\u7bad", "nasa", "\u7f8e\u56fd", "\u53d1\u5c04"]}, {"category": "", "categoryclass": "", "imagename": "1b125ff0409f86e2cb7ca87894694f57.png", "infoid": 1069473, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Neofetch \u662f\u4e00\u4e2a\u7528 bash 3.2+ \u7f16\u5199\u7684\u547d\u4ee4\u884c\u7cfb\u7edf\u4fe1\u606f\u5de5\u5177\u3002 Neofetch \u4ee5\u7f8e\u89c2\u548c\u89c6\u89c9\u4e0a\u4ee4\u4eba\u6109\u60a6\u7684\u65b9\u5f0f\u663e\u793a\u6709\u5173\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u4fe1\u606f\u3002 Neofetch \u7684\u603b\u4f53\u76ee\u7684\u662f\u7528\u4e8e\u60a8\u7cfb\u7edf\u7684\u5c4f\u5e55\u622a\u56fe\u3002 Neofetch \u663e\u793a\u5176\u4ed6\u4eba\u60f3\u770b\u5230\u7684\u4fe1\u606f\u3002\u8fd8\u6709\u5176\u4ed6\u5de5\u5177\u53ef\u7528\u4e8e\u6b63\u786e\u7684\u7cfb\u7edf\u7edf\u8ba1/\u8bca\u65ad\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u4fe1\u606f\u663e\u793a\u5728\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5fbd\u6807\u65c1\u8fb9\u3002\u60a8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u914d\u7f6e Neofetch \u4ee5\u4f7f\u7528\u56fe\u50cf\u3001\u81ea\u5b9a\u4e49 ASCII \u6587\u4ef6\u3001\u5899\u7eb8\u6216\u4ec0\u4e48\u90fd\u4e0d\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u914d\u7f6e Neofetch \u4ee5\u51c6\u786e\u663e\u793a\u60a8\u60f3\u8981\u7684\u5185\u5bb9\u3002\u901a\u8fc7\u4f7f\u7528\u547d\u4ee4\u884c\u6807\u5fd7\u548c\u914d\u7f6e\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u73b0\u6709\u7684\u4fe1\u606f\u8f93\u51fa\u6216\u6dfb\u52a0\u60a8\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8f93\u51fa\u3002 Neofetch \u652f\u6301\u8fd1 150 \u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u4ece Linux \u5230 Windows\uff0c\u518d\u5230\u8bf8\u5982 Minix\u3001AIX \u548c Haiku \u7b49\u66f4\u6666\u6da9\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5982\u679c\u60a8\u559c\u6b22\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u53d7\u652f\u6301\uff1a\u6253\u5f00\u4e00\u4e2a\u95ee\u9898\u5e76\u6dfb\u52a0\u652f\u6301\u3002", "note_en": "Neofetch is a command-line system information tool written in  bash 3.2+. Neofetch displays information about your operating system, software and hardware in an aesthetic and visually pleasing way.\n The overall purpose of Neofetch is to be used in screen-shots of your system. Neofetch shows the information other people want to see. There are other tools available for proper system statistic/diagnostics.\n The information by default is displayed alongside your operating system&#39;s logo. You can further configure Neofetch to instead use an image, a custom ASCII file, your wallpaper or nothing at all.\n  You can further configure Neofetch to display exactly what you want it to. Through the use of command-line flags and the configuration file you can change existing information outputs or add your own custom ones.\n Neofetch supports almost 150 different operating systems. From Linux to Windows, all the way to more obscure operating systems like Minix, AIX and Haiku. If your favourite operating system is unsupported: Open up an issue and support will be added.", "posttime": "2021-07-24 23:35:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bash,command,neofetch", "title": "Neofetch\uff1a\u7528 bash \u7f16\u5199\u7684\u547d\u4ee4\u884c\u7cfb\u7edf\u4fe1\u606f\u5de5\u5177", "title_en": "Neofetch: Command-line system information tool written in bash", "transed": 1, "url": "https://github.com/dylanaraps/neofetch", "via": "", "real_tags": ["bash", "command", "neofetch"]}, {"category": "", "categoryclass": "", "imagename": "0c83f00bfa02ff0e65a27e43ccd3423c.jpg", "infoid": 1069472, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce2\u54e5\u5927\uff0c7 \u6708 23 \u65e5\uff08\u8def\u900f\u793e\uff09 - \u54e5\u4f26\u6bd4\u4e9a\u5468\u4e94\u6279\u51c6\u4e86\u7528\u4e8e\u533b\u7597\u548c\u5176\u4ed6\u884c\u4e1a\u7684\u5e72\u5927\u9ebb\u51fa\u53e3\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5b89\u7b2c\u65af\u56fd\u5bb6\u53c8\u8fc8\u51fa\u4e86\u4e00\u6b65\u53d1\u5c55\u5176\u5927\u9ebb\u4ea7\u4e1a\uff0c\u5c3d\u7ba1\u6f5c\u529b\u5f88\u5927\uff0c\u4f46\u8fdb\u5c55\u7f13\u6162\u3002\u4f0a\u4e07\u00b7\u675c\u514b\u603b\u7edf\u7b7e\u7f72\u4e86\u4e00\u9879\u89e3\u9664\u5927\u9ebb\u5e72\u82b1\u51fa\u53e3\u7981\u4ee4\u7684\u6cd5\u4ee4\uff0c\u6295\u8d44\u8005\u8ba4\u4e3a\u6b64\u4e3e\u81f3\u5173\u91cd\u8981\u3002\u8be5\u6307\u4ee4\u8fd8\u5141\u8bb8\u6269\u5927\u57fa\u4e8e\u5927\u9ebb\u7684\u836f\u7269\u7684\u9500\u552e\u5e76\u7b80\u5316\u76d1\u7ba1\u7a0b\u5e8f\u3002\u867d\u7136\u54e5\u4f26\u6bd4\u4e9a\u88ab\u8a89\u4e3a\u76d1\u7ba1\u5927\u9ebb\u79cd\u5b50\u3001\u690d\u7269\u548c\u7269\u8d28\uff08\u5982\u836f\u7528\u6cb9\u3001\u4e73\u818f\u548c\u63d0\u53d6\u7269\uff09\u7684\u62e5\u6709\u3001\u751f\u4ea7\u3001\u5206\u9500\u3001\u5546\u4e1a\u5316\u548c\u51fa\u53e3\u7684\u5148\u9a71\uff0c\u4f46\u6295\u8d44\u8005\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u62b1\u6028\u4ed6\u4eec\u6240\u8bf4\u7684\u66f2\u6298\u7684\u51fa\u53e3\u5ba1\u6279\u7a0b\u5e8f\u3002 \u201c\u8fd9\u610f\u5473\u7740\u54e5\u4f26\u6bd4\u4e9a\u53ef\u4ee5\u8fdb\u5165\u5e76\u5728\u56fd\u9645\u5e02\u573a\u4e0a\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff0c\u201d\u675c\u514b\u5728\u7b7e\u7f72\u8be5\u6cd5\u4ee4\u540e\u8868\u793a\uff0c\u5e76\u8865\u5145\u8bf4\u65b0\u89c4\u5219\u5c06\u5141\u8bb8\u54e5\u4f26\u6bd4\u4e9a\u7684\u5927\u9ebb\u4ea7\u4e1a\u6269\u5c55\u5230\u98df\u54c1\u548c\u996e\u6599\u3001\u5316\u5986\u54c1\u7b49\u9886\u57df\u3002\u5927\u9ebb\u751f\u4ea7\u5546 Khiron \u8d1f\u8d23\u76d1\u7ba1\u95ee\u9898\u7684\u526f\u603b\u88c1\u80e1\u5b89\u00b7\u8fed\u6208\u00b7\u963f\u5c14\u74e6\u96f7\u65af (Juan Diego Alvarez) \u544a\u8bc9\u8def\u900f\u793e\uff1a\u201c\u53d6\u6d88\u5bf9\u5e72\u82b1\u51fa\u53e3\u7684\u7981\u4ee4\u5c06\u542f\u52a8\u4e00\u4e2a\u76d1\u7ba1\u7a0b\u5e8f\uff0c\u6211\u4eec\u5e0c\u671b\u8be5\u7a0b\u5e8f\u80fd\u591f\u975e\u5e38\u8be6\u7ec6\u5730\u6267\u884c\uff0c\u8fbe\u5230\u6700\u9ad8\u7684\u56fd\u9645\u6807\u51c6\u3002\u54e5\u4f26\u6bd4\u4e9a\u5927\u9ebb\u4ea7\u4e1a\u534f\u4f1a Asocolcanna \u6566\u4fc3\u8be5\u56fd\u6293\u4f4f\u673a\u9047\uff0c\u5145\u5206\u5229\u7528\u5176\u7ade\u4e89\u4f18\u52bf\u3002\nAsocolcanna \u5728\u5176\u7f51\u7ad9\u4e0a\u53d1\u8868\u7684\u4e00\u5c01\u4fe1\u4e2d\u8bf4\uff1a\u201c\u5728\u5168\u7403\u5927\u9ebb\u4ea7\u4e1a\u6b63\u5728\u5b8c\u5584\u4e4b\u9645\uff0c\u54e5\u4f26\u6bd4\u4e9a\u53d1\u6325\u5176\u6f5c\u529b\u81f3\u5173\u91cd\u8981\u3002\u201d\u5728\u836f\u7528\u5927\u9ebb\u884c\u4e1a\u76d1\u7ba1\u8f83\u4e3a\u6210\u719f\u7684\u56fd\u5bb6\uff0c\u5982\u7f8e\u56fd\u3001\u82f1\u56fd\u3001\u5fb7\u56fd\u548c\u4ee5\u8272\u5217\uff0c\u5e72\u5927\u9ebb\u662f\u5e02\u573a\u6700\u53d1\u8fbe\u7684\u90e8\u95e8\uff0c\u5360\u6240\u6709\u9500\u552e\u989d\u768450%\u4ee5\u4e0a\u3002", "note_en": "BOGOTA, July 23 (Reuters) - Colombia on Friday gave the green light for exports of dried cannabis for medical and other industries, as the Andean country took another step to develop its marijuana industry, where progress has been slow despite high potential.\n President Ivan Duque signed a decree lifting a prohibition on exporting dried cannabis flower, a move seen as crucial by investors.\n The directive also allows for the expansion of sales of cannabis-based medicines and streamlines regulatory procedures.\n While Colombia has been hailed as a pioneer in regulating the possession, production, distribution, commercialization and export of seeds, plants and substances derived from cannabis - like oils, creams and extracts for medicinal purposes - investors have long complained about what they say is a tortuous export-approval process.\n &#34;This means Colombia can enter to play a big role in the international market,&#34; Duque said after signing the decree, adding the new rules would allow Colombia&#39;s cannabis industry to expand into food and drinks, cosmetics and other sectors.\n  &#34;Lifting the prohibition on exporting the dry flower will start a regulatory process which we hope will be performed in great detail, to the highest international standards,&#34; Juan Diego Alvarez, vice president of regulatory issues for cannabis producer Khiron, told Reuters.\n Colombian cannabis industry association Asocolcanna urged the country to seize the opportunity to make the most of its competitive advantages.\n &#34;It&#39;s crucial for Colombia to achieve its potential at a time when the global cannabis industry is being refined,&#34; Asocolcanna said in a letter published on its website.\n In countries where the medicinal cannabis industry has more mature regulation, like the United States, the United Kingdom, Germany and Israel, dried cannabis is the most developed sector of the market, accounting for more than 50% of all sales.", "posttime": "2021-07-24 23:34:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d6\u6d88,boosts,\u5927\u9ebb", "title": "\u54e5\u4f26\u6bd4\u4e9a\u901a\u8fc7\u53d6\u6d88\u5e72\u82b1\u51fa\u53e3\u7981\u4ee4\u4fc3\u8fdb\u5927\u9ebb\u4ea7\u4e1a\u7684\u840c\u82bd", "title_en": "Colombia boosts budding cannabis industry by removing ban on dry flower exports", "transed": 1, "url": "https://www.reuters.com/world/americas/colombia-boosts-budding-cannabis-industry-by-removing-ban-dry-flower-exports-2021-07-23/", "via": "", "real_tags": ["\u53d6\u6d88", "boosts", "\u5927\u9ebb"]}, {"category": "", "categoryclass": "", "imagename": "34afa80e2a658d3608af0a50877a34f9.jpeg", "infoid": 1069471, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u5bf9 Datasette \u7684\u4e00\u4e2a\u5c0f\u6539\u8fdb\uff1a\u6211\u6dfb\u52a0\u4e86\u5bf9\u901a\u8fc7 Unix \u57df\u5957\u63a5\u5b57\u8fdb\u884c\u4ee3\u7406\u7684\u652f\u6301\u3002\u8fd9\u6700\u521d\u662f\u6765\u81ea Aslak Raanes \u7684\u529f\u80fd\u8bf7\u6c42\uff1a#1388\uff1a\u4f7f\u7528 UNIX \u57df\u5957\u63a5\u5b57\u63d0\u4f9b\u670d\u52a1\u3002\u6211\u4ee5\u524d\u6ca1\u6709\u63a5\u89e6\u8fc7\u8fd9\u4e9b\uff0c\u6240\u4ee5\u8fd9\u662f\u5b66\u4e60\u65b0\u4e1c\u897f\u7684\u597d\u673a\u4f1a\u3002 Unix \u57df\u5957\u63a5\u5b57\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u673a\u5668\u4e0a\u7684\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u4e8e TCP \u7684\u673a\u5236\u4e0e\u6bcf\u4e2a\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1\uff0c\u4f46\u901a\u8fc7\u6587\u4ef6\u8def\u5f84\u4ee3\u66ff\u3002\u6211\u4e4b\u524d\u5728 Docker \u5b88\u62a4\u8fdb\u7a0b\u4e2d\u9047\u5230\u8fc7\u8fd9\u4e9b\uff0c\u5b83\u4fa6\u542c\u8def\u5f84 /var/run/docker.sock \u5e76\u4e14\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f7f\u7528 curl \u8fdb\u884c\u901a\u4fe1\uff1a\u5982\u679c\u5355\u51fb\u201cHTTP\u201d\u9009\u9879\u5361\uff0cDocker \u6587\u6863\u4e2d\u6709\u66f4\u591a\u793a\u4f8b\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0cnginx \u548c Apache \u90fd\u80fd\u591f\u5c06\u6d41\u91cf\u4ee3\u7406\u5230 Unix \u57df\u5957\u63a5\u5b57\u800c\u4e0d\u662f HTTP \u7aef\u53e3\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u8fd0\u884c\u540e\u7aef\u670d\u52a1\u5668\u800c\u4e0d\u5c06\u5b83\u4eec\u9644\u52a0\u5230 TCP \u7aef\u53e3\u7684\u6709\u7528\u673a\u5236\u3002 Datasette \u4f7f\u7528\u51fa\u8272\u7684 Uvicorn Python Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u6d41\u91cf\uff0c\u5e76\u4e14 Uvicorn \u5df2\u7ecf\u5305\u542b\u5bf9 UDS \u7684\u652f\u6301\u2014\u2014\u56e0\u6b64\u6dfb\u52a0\u5bf9 Datasette \u7684\u652f\u6301\u975e\u5e38\u5bb9\u6613\u2014\u2014\u8fd9\u662f\u5b8c\u6574\u7684\u5b9e\u73b0\u3002\u6211\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 --uds \u9009\u9879\uff0c\u6240\u4ee5\u73b0\u5728\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u8fd0\u884c Datasette\uff1a\nDatasette \u5c06\u5728 /tmp/datasette.sock \u4e0a\u201c\u76d1\u542c\u201d\u2014\u2014\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u901a\u8fc7 curl \u8fd0\u884c\u8bf7\u6c42\uff1a\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u914d\u7f6e nginx \u6216 Apache \u6765\u4ee3\u7406\u5230 Datasette \u670d\u52a1\u5668\uff08nginx\uff09\uff1a daemon off;\u4e8b\u4ef6 { worker_connections 1024;} http { \u670d\u52a1\u5668 { \u76d1\u542c 80;\u4f4d\u7f6e / { proxy_pass http://datasette; proxy_set_header \u4e3b\u673a $host; } } \u4e0a\u6e38\u6570\u636e\u96c6 { \u670d\u52a1\u5668 unix:/tmp/datasette.sock; }} \u5b9e\u73b0\u53ea\u6709\u51e0\u884c\u4ee3\u7801\uff08\u5c06 uds \u9009\u9879\u4f20\u9012\u7ed9 Uvicorn\uff09\u4f46\u6dfb\u52a0\u6d4b\u8bd5\u8bc1\u660e\u66f4\u5177\u6311\u6218\u6027\u3002\u6211\u4f7f\u7528\u8fd9\u4e2a pytest \u56fa\u5b9a\u88c5\u7f6e\u6765\u542f\u52a8\u670d\u52a1\u5668\u8fdb\u7a0b\uff1a@ pytest\u3002\u5939\u5177\uff08\u8303\u56f4 =\u201c\u4f1a\u8bdd\u201d\uff09def ds_unix_domain_socket_server\uff08tmp_path_factory\uff09\uff1asocket_folder = tmp_path_factory\u3002 mktemp(&quot;uds&quot;) uds = str(socket_folder / &quot;datasette.sock&quot;) ds_proc = subprocess. Popen( [ &quot;datasette&quot;, &quot;--memory&quot;, &quot;--uds&quot;, uds], stdout = subprocess.PIPE, stderr = subprocess.STDOUT, cwd = tempfile.gettempdir(), ) #\u7ed9\u670d\u52a1\u5668\u65f6\u95f4\u542f\u52a8\u65f6\u95f4\u3002 sleep( 1.5) # \u68c0\u67e5\u662f\u5426\u6210\u529f\u542f\u52a8 assert not ds_proc.\u6c11\u610f\u8c03\u67e5\uff08\uff09\uff0cds_proc\u3002\u6807\u51c6\u8f93\u51fa\u3002\u8bfb\uff08\uff09\u3002 decode(&quot;utf-8&quot;) yield ds_proc, uds # \u5728 pytest \u4f1a\u8bdd\u7ed3\u675f\u65f6\u5173\u95ed\u5b83 ds_proc. terminate() \u6211\u5bf9\u5176\u4ed6\u4e00\u4e9b\u6d4b\u8bd5\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u6a21\u5f0f\uff0c\u4ee5\u7ec3\u4e60 #1221 \u4e2d\u6dfb\u52a0\u7684 --ssl-keyfile \u548c --ssl-certfile \u9009\u9879\u3002\u6d4b\u8bd5\u672c\u8eab\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff0c\u5229\u7528 HTTPX \u5bf9 Unix \u57df\u5957\u63a5\u5b57\u8fdb\u884c\u8c03\u7528\u7684\u80fd\u529b\uff1a\n@pytest\u3002\u6807\u8bb0\u3002\u4e32\u884c@pytest\u3002\u6807\u8bb0\u3002 skipif( not hasattr( socket, &quot;AF_UNIX&quot;), reason = &quot;Requires socket.AF_UNIX support&quot;) def test_serve_unix_domain_socket(ds_unix_domain_socket_server): _, uds = ds_unix_domain_socket_server transport = httpx. HTTPTransport(uds = uds) \u5ba2\u6237\u7aef = httpx.\u5ba2\u6237\u7aef\uff08\u4f20\u8f93 = \u4f20\u8f93\uff09\u54cd\u5e94 = \u5ba2\u6237\u7aef\u3002 get( &quot;http://localhost/_memory.json&quot;) assert { &quot;database&quot;: &quot;_memory&quot;, &quot;path&quot;: &quot;/_memory&quot;, &quot;tables&quot;: [], }. items() &lt;= \u54cd\u5e94\u3002 json()\u3002 items() skipif \u88c5\u9970\u5668\u907f\u514d\u5728\u4e0d\u652f\u6301 Unix \u57df\u5957\u63a5\u5b57\u7684\u5e73\u53f0\u4e0a\u8fd0\u884c\u6b64\u6d4b\u8bd5\uff08\u6211\u8ba4\u4e3a\u5305\u62ec Windows\uff0c\u8bf7\u53c2\u9605\u6b64\u8bc4\u8bba\uff09\u3002 @pytest.mark.serial \u88c5\u9970\u5668\u5e94\u7528\u4e86\u4e00\u4e2a\u201c\u6807\u8bb0\u201d\uff0c\u53ef\u7528\u4e8e\u6709\u9009\u62e9\u5730\u8fd0\u884c\u6d4b\u8bd5\u3002\u6211\u8fd9\u6837\u505a\u662f\u56e0\u4e3a Datasette \u7684\u6d4b\u8bd5\u4f7f\u7528 pytest-xdist \u5728 CI \u4e2d\u8fd0\u884c\uff0c\u4f46\u8fd9\u4e0e\u8fd9\u79cd\u542f\u52a8\u4e34\u65f6\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u4e0d\u517c\u5bb9\u3002 Datasette \u5b9e\u9645\u4e0a\u5728 GitHub Actions \u4e2d\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a - name: Run tests run: | pytest -n auto -m &quot;not serial&quot; pytest -m &quot;serial&quot; pytest -n auto -m &quot;not serial&quot; \u884c\u4f7f\u7528 pytest-xdist \u5728\u81ea\u52a8\u9009\u62e9\u7684\u8fdb\u7a0b\u6570\u4e0a\u8fd0\u884c\u51e0\u4e4e\u6240\u6709\u6d4b\u8bd5\uff0c\u4f46\u8df3\u8fc7\u90a3\u4e9b\u7528@pytest.mark.serial \u6807\u8bb0\u3002\u7136\u540e\u7b2c\u4e8c\u884c\u5728\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u5269\u4f59\u7684\u4e32\u884c\u6d4b\u8bd5\u3002\u53ef\u4ee5\u5728\u4ee3\u7406\u6587\u6863\u540e\u9762\u7684\u8fd0\u884c\u6570\u636e\u96c6\u4e2d\u627e\u5230\u6b64\u529f\u80fd\u7684\u6587\u6863\u548c\u793a\u4f8b\u914d\u7f6e\u3002\u611f\u8c22 Aslak \u63d0\u4f9b\u6709\u5173 Apache \u914d\u7f6e\u7684\u6ce8\u91ca\u3002", "note_en": "A small enhancement to Datasette this week: I\u2019ve added support for proxying via Unix domain sockets.\n This started out as a feature request from Aslak Raanes:  #1388: Serve using UNIX domain socket.\n I\u2019ve not worked with these much before so it was a good opportunity to learn something new. Unix domain sockets provide a mechanism whereby different processes on a machine can communicate with each over over a mechanism similar to TCP, but via a file path instead.\n I\u2019ve encountered these before with the Docker daemon, which listens on path  /var/run/docker.sock and can be communicated with using  curl like so:\n  Plenty more examples  in the Docker documentation if you click the \u2019HTTP\u2019 tab.\n It turns out both nginx and Apache have the ability to proxy traffic to a Unix domain socket rather than to an HTTP port, which makes this a useful mechanism for running backend servers without attaching them to TCP ports.\n  Datasette uses the excellent  Uvicorn Python web server to serve traffic out of the box, and Uvicorn already  includes support for UDS\u2014so adding support to Datasette was pretty easy\u2014here\u2019s  the full implementation. I\u2019ve added a new  --uds option, so now you can run Datasette like this:\n  Datasette will \u201clisten\u201d on  /tmp/datasette.sock\u2014which means you can run requests via  curl like so:\n  More importantly, it means you can configure nginx or Apache to proxy to the Datasette server like this (nginx):\n daemon  off; events {  worker_connections  1024;} http {  server {  listen  80;  location  / {  proxy_pass http://datasette;  proxy_set_header Host  $host; } }  upstream  datasette {  server unix:/tmp/datasette.sock; }}\n    The implementation was only a few lines of code (to pass the  uds option to Uvicorn) but adding a test proved a little more challenging. I used this pytest fixture to spin up a server process:\n @ pytest. fixture( scope = &#34;session&#34;) def  ds_unix_domain_socket_server( tmp_path_factory):  socket_folder  =  tmp_path_factory. mktemp( &#34;uds&#34;)  uds  =  str( socket_folder  /  &#34;datasette.sock&#34;)  ds_proc  =  subprocess. Popen( [ &#34;datasette&#34;,  &#34;--memory&#34;,  &#34;--uds&#34;,  uds],  stdout = subprocess. PIPE,  stderr = subprocess. STDOUT,  cwd = tempfile. gettempdir(), )  # Give the server time to start  time. sleep( 1.5)  # Check it started successfully  assert  not  ds_proc. poll(),  ds_proc. stdout. read(). decode( &#34;utf-8&#34;)  yield  ds_proc,  uds  # Shut it down at the end of the pytest session  ds_proc. terminate()\n I use a similar pattern  for some other tests, to exercise the  --ssl-keyfile and  --ssl-certfile options added in  #1221.\n The test itself looks like this, taking advantage of HTTPX\u2019s ability to make calls against Unix domain sockets:\n @ pytest. mark. serial @ pytest. mark. skipif( not  hasattr( socket,  &#34;AF_UNIX&#34;),  reason = &#34;Requires socket.AF_UNIX support&#34;) def  test_serve_unix_domain_socket( ds_unix_domain_socket_server):  _,  uds  =  ds_unix_domain_socket_server  transport  =  httpx. HTTPTransport( uds = uds)  client  =  httpx. Client( transport = transport)  response  =  client. get( &#34;http://localhost/_memory.json&#34;)  assert {  &#34;database&#34;:  &#34;_memory&#34;,  &#34;path&#34;:  &#34;/_memory&#34;,  &#34;tables&#34;: [], }. items()  &lt;=  response. json(). items()\n The  skipif decorator avoids running this test on platforms which don\u2019t support Unix domain sockets (which I think includes Windows, see  this comment).\n The  @pytest.mark.serial decorator applies a \u201cmark\u201d that can be used to selectively run the test. I do this because Datasette\u2019s tests run in CI using  pytest-xdist, but that\u2019s not compatible with this way of spinning up a temporary server. Datasette actually runs the tests in GitHub Actions  like so:\n -  name:  Run tests  run:  |  pytest -n auto -m &#34;not serial&#34;  pytest -m &#34;serial&#34;\n The  pytest -n auto -m &#34;not serial&#34; line runs almost all of the tests using  pytest-xdist across an automatically selected number of processes, but skips the ones marked with  @pytest.mark.serial. Then the second line runs the remaining serial tests without any additional concurrency.\n Documenation and example configuration for this feature can be found in the  Running Datasette behind a proxy documentation. Thanks to Aslak for contributing the notes on Apache configuration.", "posttime": "2021-07-24 23:34:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "unix,quot", "title": "Unix \u57df\u5957\u63a5\u5b57\u7684\u4e50\u8da3", "title_en": "Fun with Unix domain sockets", "transed": 1, "url": "https://simonwillison.net/2021/Jul/13/unix-domain-sockets/", "via": "", "real_tags": ["unix", "quot"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069470, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u8ba9\u6211\u8bf4\u51fa Python \u6700\u5bb9\u6613\u88ab\u8bef\u89e3\u7684\u65b9\u9762\uff0c\u6211\u4f1a\u6beb\u4e0d\u72b9\u8c6b\u5730\u56de\u7b54\uff1aPython \u5bfc\u5165\u7cfb\u7edf\u3002\u53ea\u8981\u8bb0\u4f4f\u4f60\u4f7f\u7528\u4e86\u591a\u5c11\u6b21\u76f8\u5bf9\u5bfc\u5165\u5e76\u5f97\u5230\u7c7b\u4f3c ImportError \u7684\u4e1c\u897f\uff1a\u5c1d\u8bd5\u76f8\u5bf9\u5bfc\u5165\u800c\u6ca1\u6709\u5df2\u77e5\u7684\u7236\u5305\uff1b\u6216\u8005\u8bd5\u56fe\u5f04\u6e05\u695a\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u4ee5\u4fbf\u6240\u6709\u7684\u5bfc\u5165\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff1b\u6216\u8005\u5728\u627e\u4e0d\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u65f6\u5165\u4fb5 sys.path\u3002\u6bcf\u4e2a Python \u7a0b\u5e8f\u5458\u90fd\u7ecf\u5386\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u6d41\u884c\u7684 StackOverflow \u95ee\u9898\uff0c\u4f8b\u5982\u6211\u4eec\u4ece\u4e0d\u540c\u6587\u4ef6\u5939\u5bfc\u5165\u6587\u4ef6\uff081822 \u7968\uff09\u3001Python 3 \u4e2d\u7684\u76f8\u5bf9\u5bfc\u5165\uff081064 \u7968\uff09\u548c\u7b2c 10 \u4ebf\u6b21\u76f8\u5bf9\u5bfc\u5165\uff08993 \u7968\uff09\uff0c\u90fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u6807\u5176\u4e2d\u3002 Python \u5bfc\u5165\u7cfb\u7edf\u4e0d\u4ec5\u770b\u8d77\u6765\u5f88\u590d\u6742\u2014\u2014\u5b83\u5f88\u590d\u6742\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u6587\u6863\u975e\u5e38\u597d\uff0c\u5b83\u4e5f\u4e0d\u80fd\u8ba9\u60a8\u5168\u9762\u4e86\u89e3\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5f97\u5230\u8fd9\u6837\u4e00\u5f20\u56fe\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u7814\u7a76 Python \u6267\u884c import \u8bed\u53e5\u65f6\u5e55\u540e\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u4eca\u5929\u8981\u505a\u7684\u3002\u6ce8\u610f\uff1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u6307\u7684\u662f CPython 3.9\u3002\u968f\u7740 CPython \u7684\u53d1\u5c55\uff0c\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u80af\u5b9a\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6211\u5c06\u5c1d\u8bd5\u8ddf\u8e2a\u91cd\u8981\u66f4\u6539\u5e76\u6dfb\u52a0\u66f4\u65b0\u8bf4\u660e\u3002\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u8ba9\u6211\u5411\u60a8\u5c55\u793a\u6211\u4eec\u8ba1\u5212\u7684\u66f4\u8be6\u7ec6\u7248\u672c\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5bfc\u5165\u7cfb\u7edf\u7684\u6838\u5fc3\u6982\u5ff5\uff1a\u6a21\u5757\u3001\u5b50\u6a21\u5757\u3001\u5305\u3001from &lt;&gt; import &lt;&gt; \u8bed\u53e5\u3001\u76f8\u5bf9\u5bfc\u5165\u7b49\u3002\u7136\u540e\u6211\u4eec\u5c06\u5bf9\u4e0d\u540c\u7684\u5bfc\u5165\u8bed\u53e5\u8fdb\u884c\u8131\u7cd6\uff0c\u5e76\u770b\u5230\u5b83\u4eec\u6700\u7ec8\u90fd\u8c03\u7528\u4e86\u5185\u7f6e\u7684 __import__() \u51fd\u6570\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u7814\u7a76 __import__() \u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6211\u4eec\u8d70\u5427\uff01\u4f60\u8ba4\u4e3a\u5b83\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\u60a8\u53ef\u80fd\u4f1a\u8bf4\u5b83\u5bfc\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a m \u7684\u6a21\u5757\u5e76\u5c06\u8be5\u6a21\u5757\u5206\u914d\u7ed9\u53d8\u91cf m\u3002\u4f60\u4f1a\u662f\u5bf9\u7684\u3002\u4f46\u7a76\u7adf\u4ec0\u4e48\u662f\u6a21\u5757\uff1f\u4ec0\u4e48\u88ab\u5206\u914d\u7ed9\u53d8\u91cf\uff1f\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u66f4\u7cbe\u786e\u7684\u89e3\u91ca\uff1a\u8bed\u53e5 import m \u641c\u7d22\u540d\u4e3a m \u7684\u6a21\u5757\uff0c\u4e3a\u8be5\u6a21\u5757\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u5bf9\u8c61\uff0c\u5e76\u5c06\u6a21\u5757\u5bf9\u8c61\u5206\u914d\u7ed9\u53d8\u91cf\u3002\u770b\u770b\u6211\u4eec\u5982\u4f55\u533a\u5206\u6a21\u5757\u548c\u6a21\u5757\u5bf9\u8c61\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u4e9b\u672f\u8bed\u3002\u6a21\u5757\u662f Python \u8ba4\u4e3a\u662f\u6a21\u5757\u5e76\u77e5\u9053\u5982\u4f55\u4e3a\u5176\u521b\u5efa\u6a21\u5757\u5bf9\u8c61\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u8fd9\u5305\u62ec Python \u6587\u4ef6\u3001\u76ee\u5f55\u548c\u7528 C \u7f16\u5199\u7684\u5185\u7f6e\u6a21\u5757\u7b49\u5185\u5bb9\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u67e5\u770b\u5b8c\u6574\u5217\u8868\u3002\u6211\u4eec\u5bfc\u5165\u4efb\u4f55\u6a21\u5757\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u8bbf\u95ee\u6a21\u5757\u5b9a\u4e49\u7684\u51fd\u6570\u3001\u7c7b\u3001\u5e38\u91cf\u548c\u5176\u4ed6\u540d\u79f0\u3002\u8fd9\u4e9b\u540d\u79f0\u5fc5\u987b\u5b58\u50a8\u5728\u67d0\u5904\uff0c\u8fd9\u5c31\u662f\u6a21\u5757\u5bf9\u8c61\u7684\u7528\u9014\u3002\u6a21\u5757\u5bf9\u8c61\u662f\u4e00\u4e2a Python \u5bf9\u8c61\uff0c\u5b83\u5145\u5f53\u6a21\u5757\u540d\u79f0\u7684\u547d\u540d\u7a7a\u95f4\u3002\u540d\u79f0\u5b58\u50a8\u5728\u6a21\u5757\u5bf9\u8c61\u7684\u5b57\u5178\u4e2d\uff08\u53ef\u7528\u4f5c m.__dict__\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u4f5c\u4e3a\u5c5e\u6027\u8bbf\u95ee\u3002\ntypedef struct { PyObject ob_base \uff1b PyObject * md_dict ; struct PyModuleDef * md_def ;\u65e0\u6548 * md_state ; PyObject * md_weaklist ; PyObject * md_name ; } PyModuleObject ; md_dict \u5b57\u6bb5\u5b58\u50a8\u6a21\u5757\u7684\u5b57\u5178\u3002\u5176\u4ed6\u9886\u57df\u5bf9\u6211\u4eec\u7684\u8ba8\u8bba\u5e76\u4e0d\u91cd\u8981\u3002 Python \u4e3a\u6211\u4eec\u9690\u5f0f\u5730\u521b\u5efa\u4e86\u6a21\u5757\u5bf9\u8c61\u3002\u4e3a\u4e86\u770b\u770b\u8fd9\u4e2a\u8fc7\u7a0b\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\uff0c\u8ba9\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u5bf9\u8c61\u3002\u6211\u4eec\u901a\u5e38\u901a\u8fc7\u8c03\u7528\u5b83\u4eec\u7684\u7c7b\u578b\u6765\u521b\u5efa Python \u5bf9\u8c61\uff0c\u6bd4\u5982 MyClass() \u6216 set()\u3002\u6a21\u5757\u5bf9\u8c61\u7684\u7c7b\u578b\u5728 C \u4ee3\u7801\u4e2d\u662f PyModule_Type\uff0c\u4f46\u5b83\u5728 Python \u4e2d\u4e0d\u80fd\u4f5c\u4e3a\u5185\u7f6e\u5bf9\u8c61\u4f7f\u7528\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u79cd\u201c\u4e0d\u53ef\u7528\u201d\u7684\u7c7b\u578b\u53ef\u4ee5\u5728 types \u6807\u51c6\u6a21\u5757\u4e2d\u627e\u5230\uff1a types \u6a21\u5757\u5982\u4f55\u5b9a\u4e49 ModuleType\uff1f\u5b83\u53ea\u662f\u5bfc\u5165 sys \u6a21\u5757\uff08\u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\uff09\uff0c\u7136\u540e\u5728\u8fd4\u56de\u7684\u6a21\u5757\u5bf9\u8c61\u4e0a\u8c03\u7528 type() \u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a \u65e0\u8bba\u6211\u4eec\u5982\u4f55\u83b7\u53d6 ModuleType\uff0c\u4e00\u65e6\u83b7\u53d6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u6a21\u5757\u5bf9\u8c61\uff1a \u65b0\u521b\u5efa\u7684\u6a21\u5757\u5bf9\u8c61\u4e0d\u662f\u5f88\u6709\u8da3\uff0c\u4f46\u9884\u521d\u59cb\u5316\u4e86\u4e00\u4e9b\u7279\u6b8a\u5c5e\u6027\uff1a \u8fd9\u4e9b\u7279\u6b8a\u5c5e\u6027\u4e3b\u8981\u662f\u7531\u5bfc\u5165\u7cfb\u7edf\u672c\u8eab\u4f7f\u7528\uff0c\u4f46\u6709\u4e9b\u4e5f\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u4f7f\u7528\u3002\u4f8b\u5982\uff0c__name__ \u5c5e\u6027\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6a21\u5757\u7684\u540d\u79f0\uff1a\n\u8bf7\u6ce8\u610f __name__ \u53ef\u7528\u4f5c\u5168\u5c40\u53d8\u91cf\u3002\u8fd9\u79cd\u89c2\u5bdf\u4f3c\u4e4e\u5f88\u660e\u663e\uff0c\u4f46\u5b83\u81f3\u5173\u91cd\u8981\u3002\u5b83\u6765\u81ea\u4e8e\u5168\u5c40\u53d8\u91cf\u5b57\u5178\u8bbe\u7f6e\u4e3a\u5f53\u524d\u6a21\u5757\u7684\u5b57\u5178\u7684\u4e8b\u5b9e\uff1a\u5f53\u524d\u6a21\u5757\u5145\u5f53 Python \u4ee3\u7801\u6267\u884c\u7684\u547d\u540d\u7a7a\u95f4\u3002\u5f53 Python \u5bfc\u5165\u4e00\u4e2a Python \u6587\u4ef6\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6a21\u5757\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528\u6a21\u5757\u5bf9\u8c61\u7684\u5b57\u5178\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u5b57\u5178\u6765\u6267\u884c\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u7c7b\u4f3c\u5730\uff0cPython \u5728\u76f4\u63a5\u6267\u884c Python \u6587\u4ef6\u65f6\uff0c\u9996\u5148\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a __main__ \u7684\u7279\u6b8a\u6a21\u5757\uff0c\u7136\u540e\u5c06\u5176\u5b57\u5178\u7528\u4f5c\u5168\u5c40\u53d8\u91cf\u7684\u5b57\u5178\u3002\u56e0\u6b64\uff0c\u5168\u5c40\u53d8\u91cf\u59cb\u7ec8\u662f\u67d0\u4e2a\u6a21\u5757\u7684\u5c5e\u6027\uff0c\u4ece\u6267\u884c\u4ee3\u7801\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8be5\u6a21\u5757\u88ab\u8ba4\u4e3a\u662f\u5f53\u524d\u6a21\u5757\u3002\u5185\u7f6e\u6a21\u5757\u662f\u7f16\u8bd1\u6210 python \u53ef\u6267\u884c\u6587\u4ef6\u7684 C \u6a21\u5757\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u59cb\u7ec8\u53ef\u7528\u3002\u8fd9\u662f\u4ed6\u4eec\u7684\u4e3b\u8981\u7279\u70b9\u3002 sys.builtin_module_names \u5143\u7ec4\u5b58\u50a8\u5b83\u4eec\u7684\u540d\u79f0\uff1a $ python -q &gt;&gt;&gt; import sys &gt;&gt;&gt; sys \u3002\u5185\u7f6e\u6a21\u5757\u540d\u79f0\uff08&#39;_abc&#39;\u3001&#39;_ast&#39;\u3001&#39;_codecs&#39;\u3001&#39;_collections&#39;\u3001&#39;_functools&#39;\u3001&#39;_imp&#39;\u3001&#39;_io&#39;\u3001&#39;_locale&#39;\u3001&#39;_operator&#39;\u3001&#39;_peg_parser&#39;\u3001&#39;_signal&#39;\u3001&#39;_sre&#39;\u3001 &#39;_stat&#39;, &#39;_string&#39;, &#39;_symtable&#39;, &#39;_thread&#39;, &#39;_tracemalloc&#39;, &#39;_warnings&#39;, &#39;_weakref&#39;, &#39;atexit&#39;, &#39;builtins&#39;, &#39;errno&#39;, &#39;faulthandler&#39;, &#39;gc&#39;, &#39;itertools &#39;, &#39;marshal&#39;, &#39;posix&#39;, &#39;pwd&#39;, &#39;sys&#39;, &#39;time&#39;, &#39;xxsubtype&#39;) \u51bb\u7ed3\u6a21\u5757\u4e5f\u662f python \u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u662f\u7528 Python \u7f16\u5199\u7684\u3002 Python \u4ee3\u7801\u88ab\u7f16\u8bd1\u4e3a\u4ee3\u7801\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u7f16\u7ec4\u540e\u7684\u4ee3\u7801\u5bf9\u8c61\u5408\u5e76\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u51bb\u7ed3\u6a21\u5757\u7684\u793a\u4f8b\u662f _frozen_importlib \u548c _frozen_importlib_external \u3002 Python \u51bb\u7ed3\u5b83\u4eec\u662f\u56e0\u4e3a\u5b83\u4eec\u5b9e\u73b0\u4e86\u5bfc\u5165\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u56e0\u6b64\u4e0d\u80fd\u50cf\u5176\u4ed6 Python \u6587\u4ef6\u4e00\u6837\u5bfc\u5165\u3002 C \u6269\u5c55\u6709\u70b9\u50cf\u5185\u7f6e\u6a21\u5757\uff0c\u4e5f\u6709\u70b9\u50cf Python \u6587\u4ef6\u3002\u4e00\u65b9\u9762\uff0c\u5b83\u4eec\u662f\u7528 C \u6216 C++ \u7f16\u5199\u7684\uff0c\u5e76\u901a\u8fc7 Python/C API \u4e0e Python \u4ea4\u4e92\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u4eec\u4e0d\u662f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u5728\u5bfc\u5165\u671f\u95f4\u52a8\u6001\u52a0\u8f7d\u3002\u5305\u62ec\u6570\u7ec4\u3001\u6570\u5b66\u548c\u9009\u62e9\u5728\u5185\u7684\u4e00\u4e9b\u6807\u51c6\u6a21\u5757\u662f C \u6269\u5c55\u3002\u8bb8\u591a\u5176\u4ed6\u7684\uff0c\u5305\u62ec asyncio\u3001heapq \u548c json \u90fd\u662f\u7528 Python \u7f16\u5199\u7684\uff0c\u4f46\u5728\u5e55\u540e\u8c03\u7528\u4e86 C \u6269\u5c55\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0cC \u6269\u5c55\u662f\u516c\u5f00\u6240\u8c13\u7684\u521d\u59cb\u5316\u51fd\u6570\u7684\u5171\u4eab\u5e93\u3002\u5b83\u4eec\u901a\u5e38\u547d\u540d\u4e3a modname.so\uff0c\u4f46\u6587\u4ef6\u6269\u5c55\u540d\u53ef\u80fd\u56e0\u5e73\u53f0\u800c\u5f02\u3002\u4f8b\u5982\uff0c\u5728\u6211\u7684 macOS \u4e0a\uff0c\u8fd9\u4e9b\u6269\u5c55\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u4f7f\u7528\uff1a.cpython-39-darwin.so\u3001.abi3.so\u3001.so\u3002\u5728 Windows \u4e0a\uff0c\u60a8\u4f1a\u770b\u5230 .dll \u53ca\u5176\u53d8\u4f53\u3002 Python \u5b57\u8282\u7801\u6587\u4ef6\u901a\u5e38\u4e0e\u5e38\u89c4 Python \u6587\u4ef6\u4e00\u8d77\u4f4d\u4e8e __pycache__ \u76ee\u5f55\u4e2d\u3002\u5b83\u4eec\u662f\u5c06 Python \u4ee3\u7801\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\u7684\u7ed3\u679c\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c.pyc \u6587\u4ef6\u5305\u542b\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u540e\u8ddf\u6a21\u5757\u7684\u7f16\u7ec4\u4ee3\u7801\u5bf9\u8c61\u3002\u5b83\u7684\u76ee\u7684\u662f\u901a\u8fc7\u8df3\u8fc7\u7f16\u8bd1\u9636\u6bb5\u6765\u51cf\u5c11\u6a21\u5757\u7684\u52a0\u8f7d\u65f6\u95f4\u3002 Python \u5bfc\u5165 .py \u6587\u4ef6\u65f6\uff0c\u9996\u5148\u4f1a\u5728 __pycache__ \u76ee\u5f55\u4e2d\u641c\u7d22\u5bf9\u5e94\u7684 .pyc \u6587\u4ef6\u5e76\u6267\u884c\u3002\u5982\u679c .pyc \u6587\u4ef6\u4e0d\u5b58\u5728\uff0cPython \u4f1a\u7f16\u8bd1\u4ee3\u7801\u5e76\u521b\u5efa\u6587\u4ef6\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u6267\u884c\u548c\u5bfc\u5165\u5b83\u4eec\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u8c03\u7528 .pyc \u6587\u4ef6\u6a21\u5757\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a $ ls module.pyc $ python module.pyc \u6211\u662f .pyc \u6587\u4ef6 $ python -c &quot;import module&quot; \u6211\u662f .pyc \u6587\u4ef6\u8981\u4e86\u89e3\u6709\u5173 .pyc \u6587\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b PEP 3147 - - PYC \u5b58\u50a8\u5e93\u76ee\u5f55\u548c PEP 552 - \u786e\u5b9a\u6027 pycs\u3002\u6b63\u5982\u6211\u4eec\u7a0d\u540e\u5c06\u770b\u5230\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5bfc\u5165\u7cfb\u7edf\u4ee5\u652f\u6301\u66f4\u591a\u7c7b\u578b\u7684\u6a21\u5757\u3002\u6240\u4ee5\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u79f0\u4e3a\u6a21\u5757\uff0c\u53ea\u8981 Python \u53ef\u4ee5\u4e3a\u5b83\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u5bf9\u8c61\u7ed9\u5b9a\u6a21\u5757\u540d\u79f0\u3002\u5982\u679c\u6a21\u5757\u540d\u79f0\u4ec5\u9650\u4e8e\u50cf mymodule \u6216 utils \u8fd9\u6837\u7684\u7b80\u5355\u6807\u8bc6\u7b26\uff0c\u90a3\u4e48\u5b83\u4eec\u90fd\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u6bcf\u6b21\u7ed9\u65b0\u6587\u4ef6\u547d\u540d\u65f6\uff0c\u6211\u4eec\u90fd\u5fc5\u987b\u975e\u5e38\u8ba4\u771f\u5730\u601d\u8003\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cPython \u5141\u8bb8\u6a21\u5757\u6709\u5b50\u6a21\u5757\u548c\u6a21\u5757\u540d\u79f0\u5305\u542b\u70b9\u3002\u5b83\u9996\u5148\u5bfc\u5165\u6a21\u5757 a \u7136\u540e\u5bfc\u5165\u5b50\u6a21\u5757 ab \u5b83\u5c06\u5b50\u6a21\u5757\u6dfb\u52a0\u5230\u6a21\u5757\u7684\u5b57\u5178\u4e2d\u5e76\u5c06\u6a21\u5757\u5206\u914d\u7ed9\u53d8\u91cf a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5b50\u6a21\u5757\u4f5c\u4e3a\u6a21\u5757\u7684\u5c5e\u6027\u8bbf\u95ee\u3002\u53ef\u4ee5\u6709\u5b50\u6a21\u5757\u7684\u6a21\u5757\u79f0\u4e3a\u5305\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5305\u662f\u5177\u6709 __path__ \u5c5e\u6027\u7684\u6a21\u5757\u3002\u8fd9\u4e2a\u5c5e\u6027\u544a\u8bc9 Python \u5728\u54ea\u91cc\u5bfb\u627e\u5b50\u6a21\u5757\u3002\u5f53 Python \u5bfc\u5165\u9876\u7ea7\u6a21\u5757\u65f6\uff0c\u5b83\u4f1a\u5728 sys.path \u4e2d\u5217\u51fa\u7684\u76ee\u5f55\u548c ZIP \u5b58\u6863\u4e2d\u641c\u7d22\u8be5\u6a21\u5757\u3002\u4f46\u662f\u5f53\u5b83\u5bfc\u5165\u4e00\u4e2a\u5b50\u6a21\u5757\u65f6\uff0c\u5b83\u4f7f\u7528\u7236\u6a21\u5757\u7684 __path__ \u5c5e\u6027\u800c\u4e0d\u662f sys.path\u3002\n\u76ee\u5f55\u662f\u5c06\u6a21\u5757\u7ec4\u7ec7\u6210\u5305\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u3002\u5982\u679c\u4e00\u4e2a\u76ee\u5f55\u5305\u542b\u4e00\u4e2a __init__.py \u6587\u4ef6\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5305\u3002\u5f53 Python \u5bfc\u5165\u8fd9\u6837\u4e00\u4e2a\u76ee\u5f55\u65f6\uff0c\u5b83\u4f1a\u6267\u884c __init__.py \u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u90a3\u91cc\u5b9a\u4e49\u7684\u540d\u79f0\u6210\u4e3a\u6a21\u5757\u7684\u5c5e\u6027\u3002 __init__.py \u6587\u4ef6\u901a\u5e38\u4e3a\u7a7a\u6216\u5305\u542b\u4e0e\u5305\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u4f8b\u5982 __doc__ \u548c __version__\u3002\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5c06\u5305\u7684\u516c\u5171 API \u4e0e\u5176\u5185\u90e8\u5b9e\u73b0\u5206\u79bb\u3002\u5047\u8bbe\u60a8\u5f00\u53d1\u4e86\u4e00\u4e2a\u5177\u6709\u4ee5\u4e0b\u7ed3\u6784\u7684\u5e93\uff1a \u5e76\u4e14\u60a8\u60f3\u4e3a\u5e93\u7684\u7528\u6237\u63d0\u4f9b\u4e24\u4e2a\u51fd\u6570\uff1a\u5728 module1.py \u4e2d\u5b9a\u4e49\u7684 func1() \u548c\u5728 module2.py \u4e2d\u5b9a\u4e49\u7684 func2()\u3002\u5982\u679c\u60a8\u5c06 __init__.py \u7559\u7a7a\uff0c\u90a3\u4e48\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u5b50\u6a21\u5757\u6765\u5bfc\u5165\u51fd\u6570\uff1a \u8fd9\u53ef\u80fd\u662f\u60a8\u60f3\u8981\u7684\uff0c\u4f46\u60a8\u53ef\u80fd\u8fd8\u5e0c\u671b\u5141\u8bb8\u7528\u6237\u5bfc\u5165\u8fd9\u6837\u7684\u51fd\u6570\uff1a \u4e00\u4e2a\u540d\u4e3a C \u6269\u5c55\u540d\u7684\u76ee\u5f55__init__.so \u6216\u5e26\u6709\u540d\u4e3a __init__.pyc \u7684 .pyc \u6587\u4ef6\u4e5f\u662f\u4e00\u4e2a\u5e38\u89c4\u5305\u3002 Python \u53ef\u4ee5\u5b8c\u7f8e\u5730\u5bfc\u5165\u6b64\u7c7b\u5305\uff1a\u5728 3.3 \u7248\u672c\u4e4b\u524d\uff0cPython \u53ea\u6709\u5e38\u89c4\u5305\u3002\u6ca1\u6709 __init__.py \u7684\u76ee\u5f55\u6839\u672c\u4e0d\u88ab\u89c6\u4e3a\u5305\u3002\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u4eba\u4eec\u4e0d\u559c\u6b22\u521b\u5efa\u7a7a\u7684 __init__.py \u6587\u4ef6\u3002 PEP 420 \u901a\u8fc7\u5728 Python 3.3 \u4e2d\u5f15\u5165\u547d\u540d\u7a7a\u95f4\u5305\u4f7f\u8fd9\u4e9b\u6587\u4ef6\u53d8\u5f97\u4e0d\u5fc5\u8981\u3002\u547d\u540d\u7a7a\u95f4\u5305\u4e5f\u89e3\u51b3\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\u3002\u5b83\u4eec\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5c06\u5305\u7684\u5185\u5bb9\u653e\u7f6e\u5728\u591a\u4e2a\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u4ee5\u4e0b\u76ee\u5f55\u7ed3\u6784\uff1a\n\u800c\u4e14mylibs\u548cmorelibs\u90fd\u5728sys.path\u4e2d\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u5bfc\u5165package1\u548cpackage2\uff1a\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u5f53 Python \u5728\u6a21\u5757\u641c\u7d22\u671f\u95f4\u904d\u5386\u8def\u5f84\u4e2d\u7684\u8def\u5f84\u6761\u76ee\uff08 sys.path \u6216 parent \u7684 __path__ \uff09\u65f6\uff0c\u5b83\u4f1a\u8bb0\u4f4f\u4e0e\u6a21\u5757\u540d\u79f0\u5339\u914d\u7684\u6ca1\u6709 __init__.py \u7684\u76ee\u5f55\u3002\u5982\u679c\u904d\u5386\u6240\u6709\u6761\u76ee\u540e\uff0c\u627e\u4e0d\u5230\u5e38\u89c4\u5305\u3001Python \u6587\u4ef6\u6216 C \u6269\u5c55\u540d\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u5bf9\u8c61\uff0c\u5176 __path__ \u5305\u542b\u5b58\u50a8\u7684\u76ee\u5f55\u3002\u8981\u6c42 __init__.py \u7684\u6700\u521d\u60f3\u6cd5\u662f\u9632\u6b62\u540d\u4e3a string \u6216 site \u4e4b\u7c7b\u7684\u76ee\u5f55\u906e\u853d\u6807\u51c6\u6a21\u5757\u3002\u547d\u540d\u7a7a\u95f4\u5305\u4e0d\u4f1a\u9690\u85cf\u5176\u4ed6\u6a21\u5757\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6a21\u5757\u641c\u7d22\u671f\u95f4\u7684\u4f18\u5148\u7ea7\u8f83\u4f4e\u3002\u9664\u4e86\u5bfc\u5165\u6a21\u5757\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 from &lt;&gt; import &lt;&gt; \u8bed\u53e5\u5bfc\u5165\u6a21\u5757\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u8be5\u8bed\u53e5\u5bfc\u5165\u4e00\u4e2a\u540d\u4e3a module \u7684\u6a21\u5757\uff0c\u5e76\u5c06\u6307\u5b9a\u7684\u5c5e\u6027\u5206\u914d\u7ed9\u76f8\u5e94\u7684\u53d8\u91cf\uff1a \u6ce8\u610f module \u53d8\u91cf\u5728\u50cf\u88ab\u5220\u9664\u4e00\u6837\u5bfc\u5165\uff1a\u5f53 Python \u770b\u5230\u4e00\u4e2a\u6a21\u5757\u6ca1\u6709\u6307\u5b9a\u7684\u5c5e\u6027\u65f6\uff0c\u5b83\u8ba4\u4e3a\u8be5\u5c5e\u6027\u662f\u4e00\u4e2a\u5b50\u6a21\u5757\u5e76\u5c1d\u8bd5\u5bfc\u5165\u5b83\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6a21\u5757\u5b9a\u4e49\u4e86 func \u548c Class \u4f46\u6ca1\u6709\u5b9a\u4e49\u5b50\u6a21\u5757\uff0cPython \u5c06\u5c1d\u8bd5\u5bfc\u5165 module.submodule\u3002\n\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u660e\u786e\u6307\u5b9a\u8981\u4ece\u6a21\u5757\u5bfc\u5165\u7684\u540d\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5bfc\u5165\u7684\u901a\u914d\u7b26\u5f62\u5f0f\uff1a\u6b64\u8bed\u53e5\u7684\u5de5\u4f5c\u65b9\u5f0f\u5c31\u50cf\u5c06\u201c*\u201d\u66ff\u6362\u4e3a\u6a21\u5757\u7684\u6240\u6709\u516c\u5171\u540d\u79f0\u4e00\u6837\u3002\u8fd9\u4e9b\u662f\u6a21\u5757\u5b57\u5178\u4e2d\u4e0d\u4ee5\u4e0b\u5212\u7ebf\u201c_\u201d\u5f00\u5934\u7684\u540d\u79f0\u6216 __all__ \u5c5e\u6027\u4e2d\u5217\u51fa\u7684\u540d\u79f0\uff08\u5982\u679c\u5df2\u5b9a\u4e49\uff09\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u901a\u8fc7\u6307\u5b9a\u7edd\u5bf9\u6a21\u5757\u540d\u79f0\u6765\u544a\u8bc9 Python \u8981\u5bfc\u5165\u54ea\u4e9b\u6a21\u5757\u3002 from &lt;&gt; import &lt;&gt; \u8bed\u53e5\u4e5f\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u76f8\u5173\u7684\u6a21\u5757\u540d\u79f0\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a .. \u548c ..ab \u4e4b\u7c7b\u7684\u7ed3\u6784\u662f\u76f8\u5bf9\u7684\u6a21\u5757\u540d\u79f0\uff0c\u4f46\u5b83\u4eec\u76f8\u5bf9\u4e8e\u4ec0\u4e48\uff1f\u6b63\u5982\u6211\u4eec\u6240\u8bf4\uff0cPython \u6587\u4ef6\u5728\u5f53\u524d\u6a21\u5757\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u8be5\u6a21\u5757\u7684\u5b57\u5178\u5145\u5f53\u5168\u5c40\u53d8\u91cf\u7684\u5b57\u5178\u3002\u5f53\u524d\u6a21\u5757\u4e0e\u4efb\u4f55\u5176\u4ed6\u6a21\u5757\u4e00\u6837\uff0c\u53ef\u4ee5\u5c5e\u4e8e\u4e00\u4e2a\u5305\u3002\u8fd9\u4e2a\u5305\u88ab\u79f0\u4e3a\u5f53\u524d\u5305\uff0c\u8fd9\u5c31\u662f\u76f8\u5bf9\u6a21\u5757\u540d\u79f0\u7684\u76f8\u5bf9\u5173\u7cfb\u3002\u6a21\u5757\u7684 __package__ \u5c5e\u6027\u5b58\u50a8\u6a21\u5757\u6240\u5c5e\u7684\u5305\u7684\u540d\u79f0\u3002\u5982\u679c\u6a21\u5757\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8be5\u6a21\u5757\u5c5e\u4e8e\u5b83\u81ea\u5df1\uff0c\u800c __package__ \u53ea\u662f\u6a21\u5757\u7684\u540d\u79f0\uff08 __name__ \uff09\u3002\u5982\u679c\u6a21\u5757\u662f\u5b50\u6a21\u5757\uff0c\u5219\u5b83\u5c5e\u4e8e\u7236\u6a21\u5757\uff0c\u5e76\u4e14 __package__ \u8bbe\u7f6e\u4e3a\u7236\u6a21\u5757\u7684\u540d\u79f0\u3002\u6700\u540e\uff0c\u5982\u679c\u6a21\u5757\u65e2\u4e0d\u662f\u5305\u4e5f\u4e0d\u662f\u5b50\u6a21\u5757\uff0c\u90a3\u4e48\u5b83\u7684\u5305\u662f\u672a\u5b9a\u4e49\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c __package__ \u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\u6a21\u5757\u662f\u9876\u7ea7\u6a21\u5757\uff09\u6216\u65e0\uff08\u4f8b\u5982\u6a21\u5757\u4f5c\u4e3a\u811a\u672c\u8fd0\u884c\uff09\u3002\u76f8\u5bf9\u6a21\u5757\u540d\u79f0\u662f\u524d\u9762\u6709\u4e00\u4e9b\u70b9\u7684\u6a21\u5757\u540d\u79f0\u3002\u4e00\u4e2a\u524d\u5bfc\u70b9\u4ee3\u8868\u5f53\u524d\u5305\u3002\u6240\u4ee5\uff0c\u5f53 __package__ \u88ab\u5b9a\u4e49\u65f6\uff0c\u4e0b\u9762\u7684\u8bed\u53e5\uff1a\u6bcf\u4e2a\u989d\u5916\u7684\u70b9\u544a\u8bc9 Python \u4ece __package__ \u4e0a\u79fb\u4e00\u7ea7\u3002\u5982\u679c __package__ \u8bbe\u7f6e\u4e3a\u201cab\u201d\uff0c\u5219\u6b64\u8bed\u53e5\uff1a\n\u8fd9\u662f\u56e0\u4e3a Python \u4e0d\u4f1a\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u6765\u89e3\u6790\u76f8\u5bf9\u5bfc\u5165\u3002\u5b83\u53ea\u9700\u8981 __package__ \u7684\u503c\uff0c\u53bb\u6389\u4e00\u4e9b\u540e\u7f00\u5e76\u9644\u52a0\u4e00\u4e2a\u65b0\u540e\u7f00\u4ee5\u83b7\u5f97\u7edd\u5bf9\u6a21\u5757\u540d\u79f0\u3002\u663e\u7136\uff0c\u5f53 __package__ \u6839\u672c\u6ca1\u6709\u5b9a\u4e49\u65f6\uff0c\u76f8\u5bf9\u5bfc\u5165\u5c31\u4f1a\u4e2d\u65ad\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4f1a\u6536\u5230\u4ee5\u4e0b\u9519\u8bef\uff1a\u5f53\u60a8\u5c06\u76f8\u5bf9\u5bfc\u5165\u4f5c\u4e3a\u811a\u672c\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u60a8\u6700\u5e38\u770b\u5230\u5b83\u3002\u7531\u4e8e\u60a8\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u800c\u4e0d\u662f\u6a21\u5757\u540d\u79f0\u6307\u5b9a\u8981\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5e76\u4e14\u7531\u4e8e Python \u9700\u8981\u6a21\u5757\u540d\u79f0\u6765\u8ba1\u7b97 __package__\uff0c\u56e0\u6b64\u4ee3\u7801\u5728 __main__ \u6a21\u5757\u4e2d\u6267\u884c\uff0c\u5176 __package__ \u5c5e\u6027\u8bbe\u7f6e\u4e3a None\u3002\u5728\u8fd0\u884c\u5177\u6709\u76f8\u5bf9\u5bfc\u5165\u7684\u7a0b\u5e8f\u65f6\u907f\u514d\u5bfc\u5165\u9519\u8bef\u7684\u6807\u51c6\u65b9\u6cd5\u662f\u4f7f\u7528 -m \u5f00\u5173\u5c06\u5176\u4f5c\u4e3a\u6a21\u5757\u8fd0\u884c\uff1a -m \u5f00\u5173\u544a\u8bc9 Python \u4f7f\u7528\u4e0e\u5bfc\u5165\u671f\u95f4\u76f8\u540c\u7684\u673a\u5236\u6765\u67e5\u627e\u6a21\u5757\u3002 Python \u83b7\u53d6\u6a21\u5757\u540d\u79f0\u5e76\u80fd\u591f\u8ba1\u7b97\u5f53\u524d\u5305\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u8fd0\u884c\u4e00\u4e2a\u540d\u4e3a package.module \u7684\u6a21\u5757\uff0c\u5176\u4e2d module \u6307\u7684\u662f\u4e00\u4e2a\u5e38\u89c4\u7684 .py \u6587\u4ef6\uff0c\u90a3\u4e48\u4ee3\u7801\u5c06\u5728 __main__ \u6a21\u5757\u4e2d\u6267\u884c\uff0c\u5176 __package__ \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u201cpackage\u201d\u3002\u60a8\u53ef\u4ee5\u5728\u6587\u6863\u548c PEP 338 \u4e2d\u9605\u8bfb\u6709\u5173 -m \u5f00\u5173\u7684\u66f4\u591a\u4fe1\u606f\u3002\u597d\u5427\u3002\u8fd9\u662f\u4e00\u4e2a\u70ed\u8eab\u3002\u73b0\u5728\u6211\u4eec\u5c06\u770b\u770b\u5f53\u6211\u4eec\u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\u65f6\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5982\u679c\u6211\u4eec\u5bf9\u4efb\u4f55\u5bfc\u5165\u8bed\u53e5\u8fdb\u884c\u8131\u7cd6\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5b83\u6700\u7ec8\u8c03\u7528\u4e86\u5185\u7f6e\u7684 __import__() \u51fd\u6570\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6a21\u5757\u540d\u79f0\u548c\u4e00\u5806\u5176\u4ed6\u53c2\u6570\uff0c\u627e\u5230\u8be5\u6a21\u5757\u5e76\u4e3a\u5176\u8fd4\u56de\u4e00\u4e2a\u6a21\u5757\u5bf9\u8c61\u3002\u81f3\u5c11\uff0c\u8fd9\u662f\u5b83\u5e94\u8be5\u505a\u7684\u3002\nPython \u5141\u8bb8\u6211\u4eec\u5c06 __import__() \u8bbe\u7f6e\u4e3a\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u6539\u53d8\u5bfc\u5165\u8fc7\u7a0b\u3002\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a\u7834\u574f\u4e00\u5207\u7684\u66f4\u6539\uff1a &gt;&gt;&gt; import builtins &gt;&gt;&gt;builtins \u3002 __import__ = None &gt;&gt;&gt; import math Traceback (\u6700\u8fd1\u4e00\u6b21\u8c03\u7528\u6700\u540e\u4e00\u6b21): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; TypeError: &#39;NoneType&#39; object is not callable \u4f60\u5f88\u5c11\u770b\u5230\u4eba\u4eec\u56e0\u4e3a\u5176\u4ed6\u539f\u56e0\u8986\u76d6 __import__()\u800c\u4e0d\u662f\u8bb0\u5f55\u6216\u8c03\u8bd5\u3002\u9ed8\u8ba4\u5b9e\u73b0\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u81ea\u5b9a\u4e49\u673a\u5236\uff0c\u6211\u4eec\u5c06\u53ea\u5173\u6ce8\u5b83\u3002 __import__() \u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f importlib.__import__()\u3002\u55ef\uff0c\u8fd9\u51e0\u4e4e\u662f\u771f\u7684\u3002 importlib \u6a21\u5757\u662f\u4e00\u4e2a\u6807\u51c6\u6a21\u5757\uff0c\u5b83\u5b9e\u73b0\u4e86\u5bfc\u5165\u7cfb\u7edf\u7684\u6838\u5fc3\u3002\u5b83\u662f\u7528 Python \u7f16\u5199\u7684\uff0c\u56e0\u4e3a\u5bfc\u5165\u8fc7\u7a0b\u6d89\u53ca\u8def\u5f84\u5904\u7406\u548c\u5176\u4ed6\u4f60\u66f4\u559c\u6b22\u7528 Python \u800c\u4e0d\u662f C \u6765\u505a\u7684\u4e8b\u60c5\u3002\u4f46\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0cimportlib \u7684\u4e00\u4e9b\u51fd\u6570\u88ab\u79fb\u690d\u5230 C \u4e2d\u3002\u9ed8\u8ba4 __import__() \u5b9e\u9645\u4e0a\u8c03\u7528\u4e86 importlib.__import__() \u7684 C \u7aef\u53e3\u3002\u51fa\u4e8e\u6211\u4eec\u7684\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u5730\u5ffd\u7565\u5dee\u5f02\u5e76\u53ea\u7814\u7a76 Python \u7248\u672c\u3002\u5728\u6211\u4eec\u8fd9\u6837\u505a\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4e0d\u540c\u7684\u5bfc\u5165\u8bed\u53e5\u5982\u4f55\u8c03\u7528 __import__()\u3002\u8981\u4e86\u89e3 import \u8bed\u53e5\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e3a\u5b83\u751f\u6210\u7684\u5b57\u8282\u7801\uff0c\u7136\u540e\u901a\u8fc7\u67e5\u770b Python/ceval.c \u4e2d\u7684\u8bc4\u4f30\u5faa\u73af\u627e\u51fa\u6bcf\u4e2a\u5b57\u8282\u7801\u6307\u4ee4\u7684\u4f5c\u7528\u3002 $ echo &quot;import m&quot; | python -m dis 1 0 LOAD_CONST 0 (0) 2 LOAD_CONST 1 (None) 4 IMPORT_NAME 0 (m) 6 STORE_NAME 0 (m)... \u7b2c\u4e00\u4e2a LOAD_CONST \u6307\u4ee4\u5c06 0 \u538b\u5165\u503c\u5806\u6808\u3002\u7b2c\u4e8c\u4e2a LOAD_CONST \u63a8\u9001 None\u3002\u7136\u540e IMPORT_NAME \u6307\u4ee4\u505a\u4e86\u4e00\u4e9b\u6211\u4eec\u7a0d\u540e\u4f1a\u7814\u7a76\u7684\u4e8b\u60c5\u3002\u6700\u540e\uff0cSTORE_NAME \u5c06\u503c\u5806\u6808\u9876\u90e8\u7684\u503c\u5206\u914d\u7ed9\u53d8\u91cf m\u3002\ncase TARGET (IMPORT_NAME): { PyObject * name = GETITEM ( names , oparg ); PyObject * fromlist = POP(); PyObject * level = TOP(); PyObject * res ; res = import_name ( tstate , f , name , fromlist , level ); Py_DECREF\uff08\u7ea7\u522b\uff09\uff1b Py_DECREF ( fromlist ); SET_TOP ( res );\u5982\u679c\uff08res == NULL\uff09\u8f6c\u5230\u9519\u8bef\uff1b\u6d3e\u9063 \uff08\uff09;\u6240\u6709\u64cd\u4f5c\u90fd\u53d1\u751f\u5728 import_name() \u51fd\u6570\u4e2d\u3002\u5b83\u8c03\u7528 __import__() \u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u4f46\u5982\u679c __import__() \u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u5b83\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\u5e76\u8c03\u7528 importlib.__import__() \u7684 C \u7aef\u53e3\uff0c\u79f0\u4e3a PyImport_ImportModuleLevelObject()\u3002\u4ee5\u4e0b\u662f\u4ee3\u7801\u4e2d\u5b9e\u73b0\u6b64\u903b\u8f91\u7684\u65b9\u5f0f\uff1a static PyObject * import_name ( PyThreadState * tstate , PyFrameObject * f , PyObject * name , PyObject * fromlist , PyObject * level ) { _Py_IDENTIFIER ( __import__ ); PyObject * import_func , * res ; PyObject * \u5806\u6808 [5]; import_func = _PyDict_GetItemIdWithError ( f -&gt; f_builtins , &amp; PyId___import__ ); if ( import_func == NULL ) { if ( !_PyErr_Occurred ( tstate )) { _PyErr_SetString ( tstate , PyExc_ImportError , &quot;__import__ not found&quot;);\u8fd4\u56de NULL \uff1b } /* \u672a\u91cd\u8f7d __import__ \u7684\u5feb\u901f\u8def\u5f84\u3002 */ if ( import_func == tstate -&gt; interp -&gt; import_func ) { int ilevel = _PyLong_AsInt ( level ); if ( ilevel == - 1 &amp;&amp; _PyErr_Occurred ( tstate )) { return NULL ; res = PyImport_ImportModuleLevelObject ( name , f -&gt; f_globals , f -&gt; f_locals == NULL ? Py_None : f -&gt; f_locals , fromlist , ilevel );\u8fd4\u56de\u8d44\u6e90\uff1b } Py_INCREF ( import_func );\u5806\u6808 [0] = \u540d\u79f0\uff1b\u5806\u6808 [1] = f -&gt; f_globals \uff1b\u5806\u6808 [2] = f -&gt; f_locals == NULL \uff1f Py_None : f -&gt; f_locals ;\u5806\u6808 [3] = \u6765\u81ea\u5217\u8868\uff1b\u5806\u6808 [4] = \u7ea7\u522b\uff1b res = _PyObject_FastCall ( import_func , stack , 5 ); Py_DECREF ( import_func );\u8fd4\u56de\u8d44\u6e90\uff1b\u5982\u679c\u60a8\u4ed4\u7ec6\u68c0\u67e5\u4ee5\u4e0a\u6240\u6709\u5185\u5bb9\uff0c\u60a8\u5c06\u80fd\u591f\u5f97\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a def __import__ ( name , globals = None , locals = None , fromlist = (), level = 0 ): &quot;&quot;&quot;Import a module . &#39;globals&#39; \u53c2\u6570\u7528\u4e8e\u63a8\u65ad\u4ece\u54ea\u91cc\u53d1\u751f\u5bfc\u5165\u4ee5\u5904\u7406\u76f8\u5bf9\u5bfc\u5165\u3002&#39;locals&#39; \u53c2\u6570\u88ab\u5ffd\u7565\u3002&#39;fromlist&#39; \u53c2\u6570\u6307\u5b9a\u4ec0\u4e48 sho ......", "note_en": "If you ask me to name the most misunderstood aspect of Python, I will answer without a second thought: the Python import system. Just remember how many times you used relative imports and got something like  ImportError: attempted relative import with no known parent package; or tried to figure out how to structure a project so that all the imports work correctly; or hacked  sys.path when you couldn&#39;t find a better solution. Every Python programmer experienced something like this, and popular StackOverflow questions, such us  Importing files from different folder (1822 votes),  Relative imports in Python 3 (1064 votes) and  Relative imports for the billionth time (993 votes), are a good indicator of that.\n The Python import system doesn&#39;t just seem complicated \u2013 it is complicated. So even though the  documentation is really good, it doesn&#39;t give you the full picture of what&#39;s going on. The only way to get such a picture is to study what happens behind the scenes when Python executes an import statement. And that&#39;s what we&#39;re going to do today.\n Note: In this post I&#39;m referring to CPython 3.9. Some implementation details will certainly change as CPython evolves. I&#39;ll try to keep track of important changes and add update notes.\n  Before we begin, let me present you a more detailed version of our plan. First, we&#39;ll discuss the core concepts of the import system: modules, submodules, packages,  from &lt;&gt; import &lt;&gt; statements, relative imports, and so on. Then we&#39;ll desugar different import statements and see that they all eventually call the built-in  __import__() function. Finally, we&#39;ll study how the default implementation of  __import__() works. Let&#39;s go!\n    What do you think it does? You may say that it imports a module named  m and assigns the module to the variable  m. And you&#39;ll be right. But what is a module exactly? What gets assigned to the variable? In order to answer these questions, we need to give a bit more precise explanation: the statement  import m searches for a module named  m, creates a module object for that module, and assigns the module object to the variable. See how we differentiated between a module and a module object. We can now define these terms.\n A  module is anything that Python considers a module and knows how to create a module object for. This includes things like Python files, directories and built-in modules written in C. We&#39;ll look at the full list in the next section.\n The reason why we import any module is because we want to get an access to functions, classes, constants and other names that the module defines. These names must be stored somewhere, and this is what module objects are for. A  module object is a Python object that acts as a namespace for the module&#39;s names. The names are stored in the module object&#39;s dictionary (available as  m.__dict__), so we can access them as attributes.\n  typedef  struct  {  PyObject  ob_base ;  PyObject  * md_dict ;  struct  PyModuleDef  * md_def ;  void  * md_state ;  PyObject  * md_weaklist ;  PyObject  * md_name ; }  PyModuleObject ;\n The  md_dict field stores the module&#39;s dictionary. Other fields are not really important for our discussion.\n Python creates module objects implicitly for us. To see that there is nothing magical about this process, let&#39;s create a module object ourselves. We usually create Python objects by calling their types, like  MyClass() or  set(). The type of a module object is  PyModule_Type in the C code but it&#39;s not available in Python as a built-in. Fortunately, such &#34;unavailable&#34; types can be found in the   types standard module:\n  How does the  types module define  ModuleType? It just imports the  sys module (any module will do) and then calls  type() on the module object returned. We can do it as well:\n  No matter how we get  ModuleType, once we get it, we can easily create a module object:\n  A newly created module object is not very interesting but has some special attributes preinitialized:\n  Most of these special attributes are mainly used by the import system itself, but some are used in the application code as well. The  __name__ attribute, for example, is often used to get the name of the current module:\n  Notice that  __name__ is available as a global variable. This observation may seem evident, but it&#39;s crucial. It comes from the fact that the dictionary of global variables is set to the dictionary of the current module:\n  The current module acts as a namespace for the execution of Python code. When Python imports a Python file, it creates a new module object and then executes the contents of the file using the dictionary of the module object as the dictionary of global variables. Similarly, when Python executes a Python file directly, it first creates a special module called  __main__ and then uses its dictionary as the dictionary of global variables. Thus, global variables are always attributes of some module, and this module is considered to be the  current module from the perspective of the executing code.\n    Built-in modules are C modules compiled into the  python executable. Since they are part of the executable, they are always available. This is their key feature. The   sys.builtin_module_names tuple stores their names:\n $ python -q &gt;&gt;&gt;  import  sys &gt;&gt;&gt;  sys . builtin_module_names (&#39;_abc&#39;, &#39;_ast&#39;, &#39;_codecs&#39;, &#39;_collections&#39;, &#39;_functools&#39;, &#39;_imp&#39;, &#39;_io&#39;, &#39;_locale&#39;, &#39;_operator&#39;, &#39;_peg_parser&#39;, &#39;_signal&#39;, &#39;_sre&#39;, &#39;_stat&#39;, &#39;_string&#39;, &#39;_symtable&#39;, &#39;_thread&#39;, &#39;_tracemalloc&#39;, &#39;_warnings&#39;, &#39;_weakref&#39;, &#39;atexit&#39;, &#39;builtins&#39;, &#39;errno&#39;, &#39;faulthandler&#39;, &#39;gc&#39;, &#39;itertools&#39;, &#39;marshal&#39;, &#39;posix&#39;, &#39;pwd&#39;, &#39;sys&#39;, &#39;time&#39;, &#39;xxsubtype&#39;)\n Frozen modules are too a part of the  python executable, but they are written in Python. Python code is  compiled to a code object and then the  marshalled code object is incorporated into the executable. The examples of frozen modules are  _frozen_importlib and  _frozen_importlib_external . Python freezes them because they implement the core of the import system and, thus, cannot be imported like other Python files.\n C extensions are a bit like built-in modules and a bit like Python files. On one hand, they are written in C or C++ and interact with Python via the  Python/C API. On the other hand, they are not a part of the executable but loaded dynamically during the import. Some standard modules including  array,  math and  select are C extensions. Many others including  asyncio,  heapq and  json are written in Python but call C extensions under the hood. Technically, C extensions are shared libraries that expose a so called  initialization function. They are usually named like  modname.so, but the file extension may be different depending on the platform. On my macOS, for example, any of these extensions will work:  .cpython-39-darwin.so,  .abi3.so,  .so. And on Windows, you&#39;ll see  .dll and its variations.\n Python bytecode files are typically live in a  __pycache__ directory alongside regular Python files. They are the result of compiling Python code to bytecode. More specifically, a  .pyc file contains some metadata followed by a marshalled code object of a module. Its purpose is to reduce module&#39;s loading time by skipping the compilation stage. When Python imports a  .py file, it first searches for a corresponding  .pyc file in the  __pycache__ directory and executes it. If the  .pyc file does not exist, Python compiles the code and creates the file.\n However, we wouldn&#39;t call  .pyc files modules if we couldn&#39;t execute and import them directly. Surprisingly, we can:\n $ ls module.pyc $ python module.pyc  I&#39;m a .pyc file $ python -c &#34;import module&#34; I&#39;m a .pyc file\n To learn more about  .pyc files, check out  PEP 3147 -- PYC Repository Directories and  PEP 552 -- Deterministic pycs.\n As we&#39;ll later see, we can customize the import system to support even more kinds of modules. So anything can be called a module as long as Python can create a module object for it given a module name.\n  If module names were limited to simple identifiers like  mymodule or  utils, then they all must have been unique, and we would have to think very hard every time we give a new file a name. For this reason, Python allows modules to have submodules and module names to contain dots.\n   it first imports the module  a and then the submodule  a.b. It adds the submodule to the module&#39;s dictionary and assigns the module to the variable  a, so we can access the submodule as a module&#39;s attribute.\n A module that can have submodules is called a  package. Technically, a package is a module that has a  __path__ attribute. This attribute tells Python where to look for submodules. When Python imports a top-level module, it searches for the module in the directories and ZIP archives listed in   sys.path. But when it imports a submodule, it uses the  __path__ attribute of the parent module instead of  sys.path.\n  Directories are the most common way to organize modules into packages. If a directory contains a  __init__.py file, it&#39;s considered to be a  regular package. When Python imports such a directory, it executes the  __init__.py file, so the names defined there become the attributes of the module.\n The  __init__.py file is typically left empty or contains package-related attributes such as  __doc__ and  __version__. It can also be used to decouple the public API of a package from its internal implementation. Suppose you develop a library with the following structure:\n  And you want to provide the users of your library with two functions:  func1() defined in  module1.py and  func2() defined in  module2.py. If you leave  __init__.py empty, then the users must specify the submodules to import the functions:\n  It may be something you want, but you may also want to allow the users to import the functions like this:\n    A directory with a C extension named  __init__.so or with a  .pyc file named  __init__.pyc is also a regular package. Python can import such packages perfectly fine:\n   Before version 3.3, Python had only regular packages. Directories without  __init__.py were not considered packages at all. And this was a problem because  people didn&#39;t like to create empty  __init__.py files.  PEP 420 made these files unnecessary by introducing  namespace packages in Python 3.3.\n Namespace packages solved another problem as well. They allowed developers to place contents of a package across multiple locations. For example, if you have the following directory structure:\n  And both  mylibs and  morelibs are in  sys.path, then you can import both  package1 and  package2 like this:\n    How does it work? When Python traverses path entries in the path ( sys.path or parent&#39;s  __path__) during the module search, it remembers the directories without  __init__.py that match the module&#39;s name. If after traversing all the entries, it couldn&#39;t find a regular package, a Python file or a C extension, it creates a module object whose  __path__ contains the memorized directories.\n The initial idea of requiring  __init__.py was to prevent directories named like  string or  site from shadowing standard modules. Namespace package do not shadow other modules because they have lower precedence during the module search.\n  Besides importing modules, we can also import module attributes using a  from &lt;&gt; import &lt;&gt; statement, like so:\n  This statement imports a module named  module and assign the specified attributes to the corresponding variables:\n  Note that the  module variable is not available after the import as if it was deleted:\n  When Python sees that a module doesn&#39;t have a specified attribute, it considers the attribute to be a submodule and tries to import it. So if  module defines  func and  Class but not  submodule, Python will try to import  module.submodule.\n  If we don&#39;t want to specify explicitly the names to import from a module, we can use the wildcard form of import:\n  This statement works as if  &#34;*&#34; was replaced with all the module&#39;s public names. These are the names in the module&#39;s dictionary that do not start with an underscore  &#34;_&#34; or the names listed in the  __all__ attribute if it&#39;s defined.\n  Up until now we&#39;ve been telling Python what modules to import by specifying absolute module names. The  from &lt;&gt; import &lt;&gt; statement allows us to specify relative module names as well. Here are a few examples:\n  The constructions like  .. and  ..a.b are relative module names, but what are they relative to? As we said, a Python file is executed in the context of the current module whose dictionary acts as a dictionary of global variables. The current module, as any other module, can belong to a package. This package is called the  current package, and this is what relative module names are relative to.\n The  __package__ attribute of a module stores the name of the package to which the module belongs. If the module is a package, then the module belongs to itself, and  __package__ is just the module&#39;s name ( __name__). If the module is a submodule, then it belongs to the parent module, and  __package__ is set to the parent module&#39;s name. Finally, if the module is not a package nor a submodule, then its package is undefined. In this case,  __package__ can be set to an empty string (e.g. the module is a top-level module) or  None (e.g. the module runs as a script).\n A relative module name is a module name preceded by some number of dots. One leading dot represents the current package. So, when  __package__ is defined, the following statement:\n   Each extra dot tells Python to move one level up from  __package__ . If  __package__ is set to  &#34;a.b&#34;, then this statement:\n       This is because Python does not move through the file system to resolve relative imports. It just takes the value of  __package__, strips some suffix and appends a new one to get an absolute module name.\n Obviously, relative imports break when  __package__ is not defined at all. In this case, you get the following error:\n  You most commonly see it when you run a program with relative imports as a script. Since you specify which program to run with a filesystem path and not with a module name, and since Python needs a module name to calculate  __package__, the code is executed in the  __main__ module whose  __package__ attribute is set to  None.\n  The standard way to avoid import errors when running a program with relative imports is to run it as a module using the  -m switch:\n  The  -m switch tells Python to use the same mechanism to find the module as during the import. Python gets a module name and is able to calculate the current package. For example, if we run a module named  package.module, where  module refers to a regular  .py file, then the code will be executed in the  __main__ module whose  __package__ attribute is set to  &#34;package&#34;. You can read more about the  -m switch in  the docs and in  PEP 338.\n Alright. This was a warm-up. Now we&#39;re going to see what exactly happens when we import a module.\n  If we desugar any import statement, we&#39;ll see that it eventually calls the built-in   __import__() function. This function takes a module name and a bunch of other parameters, finds the module and returns a module object for it. At least, this is what it&#39;s supposed to do.\n Python allows us to set  __import__() to a custom function, so we can change the import process completely. Here&#39;s, for example, a change that just breaks everything:\n &gt;&gt;&gt;  import  builtins &gt;&gt;&gt;  builtins . __import__  =  None &gt;&gt;&gt;  import  math Traceback (most recent call last): File  &#34;&lt;stdin&gt;&#34;, line  1, in  &lt;module&gt; TypeError:  &#39;NoneType&#39; object is not callable\n You rarely see people overriding  __import__() for reasons other than logging or debugging. The default implementation already provides powerful mechanisms for customization, and we&#39;ll focus solely on it.\n The default implementation of  __import__() is  importlib.__import__(). Well, it&#39;s almost true. The   importlib module is a standard module that implements the core of the import system. It&#39;s written in Python because the import process involves path handling and other things that you would prefer to do in Python rather than in C. But some functions of  importlib are ported to C for performance reasons. And default  __import__() actually calls a C port of  importlib.__import__(). For our purposes, we can safely ingore the difference and just study the Python version. Before we do that, let&#39;s see how different import statements call  __import__().\n    To see what an import statement does, we can look at the bytecode produced for it and then find out what each bytecode instruction does by looking at the  evaluation loop in   Python/ceval.c.\n  $ echo &#34;import m&#34; | python -m dis 1 0 LOAD_CONST 0 (0) 2 LOAD_CONST 1 (None) 4 IMPORT_NAME 0 (m) 6 STORE_NAME 0 (m)...\n The first   LOAD_CONST instruction pushes  0 onto the value stack. The second  LOAD_CONST pushes  None. Then the   IMPORT_NAME instruction does something we&#39;ll look into in a moment. Finally,   STORE_NAME assigns the value on top of the value stack to the variable  m.\n  case  TARGET ( IMPORT_NAME ) :  {  PyObject  * name  =  GETITEM ( names ,  oparg );  PyObject  * fromlist  =  POP ();  PyObject  * level  =  TOP ();  PyObject  * res ;  res  =  import_name ( tstate ,  f ,  name ,  fromlist ,  level );  Py_DECREF ( level );  Py_DECREF ( fromlist );  SET_TOP ( res );  if  ( res  ==  NULL )  goto  error ;  DISPATCH (); }\n All the action happens in the  import_name() function. It calls  __import__() to do the work, but if  __import__() wasn&#39;t overridden, it takes a shortcut and calls the C port of  importlib.__import__() called  PyImport_ImportModuleLevelObject(). Here&#39;s how this logic is implemented in the code:\n static  PyObject  * import_name ( PyThreadState  * tstate ,  PyFrameObject  * f ,  PyObject  * name ,  PyObject  * fromlist ,  PyObject  * level ) {  _Py_IDENTIFIER ( __import__ );  PyObject  * import_func ,  * res ;  PyObject *  stack [ 5 ];  import_func  =  _PyDict_GetItemIdWithError ( f -&gt; f_builtins ,  &amp; PyId___import__ );  if  ( import_func  ==  NULL )  {  if  ( ! _PyErr_Occurred ( tstate ))  {  _PyErr_SetString ( tstate ,  PyExc_ImportError ,  &#34;__import__ not found&#34; );  }  return  NULL ;  }  /* Fast path for not overloaded __import__. */  if  ( import_func  ==  tstate -&gt; interp -&gt; import_func )  {  int  ilevel  =  _PyLong_AsInt ( level );  if  ( ilevel  ==  - 1  &amp;&amp;  _PyErr_Occurred ( tstate ))  {  return  NULL ;  }  res  =  PyImport_ImportModuleLevelObject (  name ,  f -&gt; f_globals ,  f -&gt; f_locals  ==  NULL  ?  Py_None  :  f -&gt; f_locals ,  fromlist ,  ilevel );  return  res ;  }  Py_INCREF ( import_func );  stack [ 0 ]  =  name ;  stack [ 1 ]  =  f -&gt; f_globals ;  stack [ 2 ]  =  f -&gt; f_locals  ==  NULL  ?  Py_None  :  f -&gt; f_locals ;  stack [ 3 ]  =  fromlist ;  stack [ 4 ]  =  level ;  res  =  _PyObject_FastCall ( import_func ,  stack ,  5 );  Py_DECREF ( import_func );  return  res ; }\n If you carefully examine all of the above, you&#39;ll be able to conclude that this statement:\n     def  __import__ ( name ,  globals = None ,  locals = None ,  fromlist = (),  level = 0 ):  &#34;&#34;&#34;Import a module.  The &#39;globals&#39; argument is used to infer where the import is occurring from  to handle relative imports. The &#39;locals&#39; argument is ignored. The  &#39;fromlist&#39; argument specifies what sho\n......", "posttime": "2021-07-24 23:34:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u5bfc\u5165,import,\u6a21\u5757", "title": "Python \u5bfc\u5165\u7cfb\u7edf\u7684\u5de5\u4f5c\u539f\u7406", "title_en": "How the Python import system works", "transed": 1, "url": "https://tenthousandmeters.com/blog/python-behind-the-scenes-11-how-the-python-import-system-works/", "via": "", "real_tags": ["python", "\u5bfc\u5165", "import", "\u6a21\u5757"]}]
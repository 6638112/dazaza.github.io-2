[{"category": "", "categoryclass": "", "imagename": "852fad256c44c79fee5f0ec9b920225c.png", "infoid": 1071989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenSearch \u9879\u76ee\u662f\u5bf9\u5b89\u5168\u3001\u9ad8\u8d28\u91cf\u3001Apache-2.0 \u8bb8\u53ef\u641c\u7d22\u548c\u5206\u6790\u5957\u4ef6\u7684\u957f\u671f\u6295\u8d44\uff0c\u5177\u6709\u4e30\u5bcc\u7684\u521b\u65b0\u529f\u80fd\u8def\u7ebf\u56fe\u3002 OpenSearch \u65e8\u5728\u63d0\u4f9b\u4e0e Elasticsearch 7.10.2 \u7684\u5f00\u6e90\u53d1\u884c\u7248\u7684\u8fde\u7ebf\u517c\u5bb9\u6027\uff0cElasticsearch 7.10.2 \u662f\u4ece\u4e2d\u6d3e\u751f\u7684\u8f6f\u4ef6\u3002\u8fd9\u4f7f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230 OpenSearch\uff1a\u73b0\u6709\u5ba2\u6237\u7aef\u3001\u8fde\u63a5\u5668\u4ee5\u53ca\u4f4e\u7ea7\u548c\u9ad8\u7ea7 API \u5c06\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u4eec\u5728 AWS \u7684\u7ecf\u9a8c\u662f\uff0c\u5f00\u53d1\u4eba\u5458\u53d1\u73b0\u66f4\u65b0\u4ed6\u4eec\u5df2\u7ecf\u90e8\u7f72\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee5\u4f7f\u7528\u65b0\u7248\u672c\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\u5f88\u75db\u82e6\uff0c\u56e0\u6b64\u5ba2\u6237\u7aef\u548c API \u7684\u5411\u540e\u517c\u5bb9\u6027\u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\u5360\u5f88\u5927\u6bd4\u91cd\u3002\u8bb8\u591a\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 Elasticsearch \u548c OpenSearch \u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u4f7f\u7528 Elastic \u7ef4\u62a4\u7684\u5f00\u6e90\u5ba2\u6237\u7aef\u5e93\uff0c\u8fd9\u4e9b\u5e93\u4e3a\u51e0\u79cd\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u9ad8\u7ea7\u63a5\u53e3\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0cElastic \u5411\u5176\u4e2d\u51e0\u4e2a\u5ba2\u6237\u7aef\u6dfb\u52a0\u4e86\u65b0\u903b\u8f91\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u62d2\u7edd\u8fde\u63a5\u5230 OpenSearch \u96c6\u7fa4\u6216\u8fd0\u884c Elasticsearch 7 \u5f00\u6e90\u53d1\u884c\u7248\u7684\u96c6\u7fa4\uff0c\u751a\u81f3\u90a3\u4e9b\u7531 Elastic \u81ea\u5df1\u63d0\u4f9b\u7684\u96c6\u7fa4\u3002\u867d\u7136\u5ba2\u6237\u7aef\u5e93\u4ecd\u7136\u662f\u5f00\u6e90\u7684\uff0c\u4f46\u5b83\u4eec\u73b0\u5728\u53ea\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230 Elastic \u7684\u5546\u4e1a\u4ea7\u54c1\u3002\u6700\u5e7f\u6cdb\u91c7\u7528\u7684\u5f00\u6e90\u9879\u76ee\u901a\u5e38\u5f3a\u8c03\u7075\u6d3b\u6027\u3001\u5305\u5bb9\u6027\u548c\u907f\u514d\u9501\u5b9a\u3002\u5f00\u53d1\u4eba\u5458\u5728\u9009\u62e9\u8981\u4f7f\u7528\u7684\u4f9d\u8d56\u9879\u65f6\u901a\u5e38\u4f9d\u8d56\u4e8e\u8fd9\u79cd\u5bf9\u4e92\u64cd\u4f5c\u6027\u7684\u671f\u671b\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u66f4\u6539\u5177\u6709\u7834\u574f\u6027\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4ece\u5f00\u53d1\u4eba\u5458\u90a3\u91cc\u542c\u8bf4\u8fd9\u4e9b\u53d8\u5316\u6b63\u5728\u7ed9\u4ed6\u4eec\u5e26\u6765\u6311\u6218\u3002\u8fd9\u5305\u62ec\u4f9d\u8d56\u8fd9\u4e9b\u5ba2\u6237\u7aef\u5e76\u8fd0\u884c\u5f00\u6e90\u7248\u672c Elasticsearch\u3001Open Distro for Elasticsearch\u3001OpenSearch \u548c Amazon Elasticsearch Service \u5ba2\u6237\u7684\u4efb\u4f55\u4eba\uff0c\u4ee5\u53ca\u5e0c\u671b\u652f\u6301\u6700\u5e7f\u6cdb\u641c\u7d22\u540e\u7aef\u7684\u5f00\u53d1\u4eba\u5458\u548c\u5f00\u6e90\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u9879\u76ee\u3002\u4e3a\u4e86\u7ed9\u8fd9\u4e9b\u7528\u6237\u4e00\u6761\u6e05\u6670\u7684\u524d\u8fdb\u9053\u8def\uff0cOpenSearch \u9879\u76ee\u5c06\u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u5f00\u6e90\u5ba2\u6237\u7aef\uff0c\u4ee5\u4fbf\u4e8e\u5c06\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u4efb\u4f55 OpenSearch \u6216 Elasticsearch \u96c6\u7fa4\u3002\u5728\u6dfb\u52a0\u4ea7\u54c1\u68c0\u67e5\u4e4b\u524d\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u5c06\u6e90\u81ea\u76f8\u5e94 Elastic \u7ef4\u62a4\u5ba2\u6237\u7aef\u7684\u6700\u65b0\u517c\u5bb9\u7248\u672c\u3002\u672c\u7740\u5f00\u653e\u6027\u548c\u4e92\u64cd\u4f5c\u6027\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u5c06\u5c3d\u5408\u7406\u52aa\u529b\u4fdd\u6301\u4e0e\u6240\u6709 Elasticsearch \u53d1\u884c\u7248\u7684\u517c\u5bb9\u6027\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u7531 Elastic \u751f\u4ea7\u7684\u53d1\u884c\u7248\u3002\u8fd9\u4e9b\u5ba2\u6237\u7aef\u5c06\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7ee7\u7eed\u8fd0\u884c\u5176\u5f53\u524d\u7248\u672c\u7684 OpenSearch \u6216 Elasticsearch\uff0c\u800c\u5bf9\u5176\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u8fdb\u884c\u6700\u5c11\u7684\u66f4\u6539\u3002\u65b0\u5ba2\u6237\u7aef\u5c06\u63d0\u4f9b\u4ed6\u4eec\u4eca\u5929\u4f7f\u7528\u7684\u76f8\u540c API \u548c\u529f\u80fd\u3002\u6211\u4eec\u5c06\u521b\u5efa\u5206\u53c9\u7684\u5ba2\u6237\u7aef\u5217\u8868\u5305\u62ec\uff1a \u540c\u65f6\uff0c\u5bf9\u4e8e\u4f7f\u7528\u4e0a\u8ff0 OpenSearch \u6216 Elasticsearch \u53d1\u884c\u7248\u4e4b\u4e00\u7684\u4efb\u4f55\u4eba\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u66f4\u65b0\u5230\u4efb\u4f55\u7531 Elastic \u7ef4\u62a4\u7684\u5ba2\u6237\u7aef\u7684\u6700\u65b0\u7248\u672c\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4f11\u606f\u3002\u4efb\u4f55\u5df2\u66f4\u65b0\u5176\u5ba2\u6237\u7aef\u5e76\u9047\u5230\u95ee\u9898\u7684\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528 OpenSearch \u6587\u6863\u4e2d\u6982\u8ff0\u7684\u4efb\u4f55\u5ba2\u6237\u7aef\u7248\u672c\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u4f1f\u5927\u7684\u5f00\u6e90\u8f6f\u4ef6\u662f\u7531\u4e0d\u540c\u7684\u8d21\u732e\u8005\u793e\u533a\u5171\u540c\u6784\u5efa\u7684\u3002\u5f00\u6e90\u5f00\u53d1\u8ba9\u5229\u76ca\u76f8\u5173\u8005\u6709\u673a\u4f1a\u901a\u8fc7\u76f4\u63a5\u53c2\u4e0e\u548c\u62c5\u4efb\u9886\u5bfc\u8005\u6765\u5851\u9020\u9879\u76ee\u7684\u65b9\u5411\u3002\u4f5c\u4e3a\u8be5\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u6b63\u5728\u4e3a\u8fd9\u4e9b\u65b0\u7684\u5ba2\u6237\u7aef\u5e93\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bfb\u627e\u793e\u533a\u5171\u540c\u7ef4\u62a4\u8005\u3002\u7ef4\u62a4\u4eba\u5458\u5c06\u5728\u56fe\u4e66\u9986\u4e2d\u5904\u4e8e\u9886\u5bfc\u5730\u4f4d\uff0c\u5e76\u5c06\u5728\u786e\u5b9a\u5176\u65b9\u5411\u548c\u4f18\u5148\u4e8b\u9879\u65b9\u9762\u53d1\u6325\u5173\u952e\u4f5c\u7528\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u53c2\u4e0e\u8fd9\u4e9b\u5ba2\u6237\u7aef\u5e93\u7684\u4efb\u4f55\u7ea7\u522b\u7684\u5f00\u53d1\u548c\u8def\u7ebf\u56fe\uff0c\u8bf7\u8bbf\u95ee OpenSearch \u7f51\u7ad9\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\uff0c\u6211\u4eec\u9884\u8ba1\u5728 OpenSearch GitHub \u7ec4\u7ec7\u4e2d\u4e3a\u6bcf\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef\u5e93\u5f00\u653e\u5b58\u50a8\u5e93\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fc5\u901f\u5c06\u5ba2\u6237\u7aef\u53d1\u5e03\u5230\u6240\u6709\u76f8\u5e94\u7684\u5305\u7ba1\u7406\u5668\u548c\u5b58\u50a8\u5e93\u3002\u6211\u4eec\u5c06\u5171\u540c\u786e\u4fdd\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u652f\u6301\u826f\u597d\u7684\u5f00\u6e90 Elasticsearch\u3001Open Distro for Elasticsearch \u548c OpenSearch \u5ba2\u6237\u7aef\u5e93\u3002", "note_en": "The  OpenSearch project is a long-term investment in a secure, high-quality,  Apache-2.0 licensed search and analytics suite with a rich roadmap of innovative functionality. OpenSearch aims to provide wire compatibility with open source distributions of Elasticsearch 7.10.2, the software from which it was derived. This makes it easy for developers to migrate their applications to OpenSearch: Existing clients, connectors, and low- and high-level APIs will  just work. Our experience at AWS is that developers find it painful to update their already-deployed applications to use new version of server software, so backward compatibility for clients and APIs weighs heavily in our designs.\n  Many developers who use Elasticsearch and OpenSearch in their applications also make use of the  open source client libraries maintained by Elastic, which provide convenient high-level interfaces for several popular programming languages. Over the past few weeks, Elastic added  new logic to several of these clients that rejects connections to OpenSearch clusters or to clusters running open source distributions of Elasticsearch 7, even those provided by Elastic themselves. While the client libraries remain open source, they now only let applications connect to Elastic\u2019s commercial offerings.\n  The most broadly adopted open source projects generally emphasize flexibility, inclusion, and avoidance of lock-in. Developers often rely on this expectation of interoperability when choosing the dependencies they\u2019re going to use, so changes like this are disruptive. And indeed, we\u2019ve  heard from developers that these changes are creating challenges for them. This includes anyone who depends on these clients and runs  open source versions of Elasticsearch,  Open Distro for Elasticsearch,  OpenSearch, and customers of  Amazon Elasticsearch Service, in addition to developers and open source project maintainers who want to support the broadest range of search backends in their applications and projects.\n  To give these users a clear path forward, the OpenSearch project will add a set of new open source clients that make it easy to connect applications to any OpenSearch or Elasticsearch cluster. These clients will be derived from the last compatible versions of corresponding Elastic-maintained clients before product checks were added. In the spirit of openness and interoperability, we will make reasonable efforts to maintain compatibility with all Elasticsearch distributions, even those produced by Elastic. These clients will let developers continue running their current version of OpenSearch or Elasticsearch with minimal changes to their application code. The new clients will offer the same APIs and functionality they use today. The list of clients we will create forks of includes:\n    In the meantime, for anyone using one of the above distributions of OpenSearch or Elasticsearch, we do not recommend updating to the latest version of any Elastic-maintained clients, as this may cause applications to break. Anyone who has already updated their clients and is experiencing issues can resolve these issues by using any of the client versions outlined in the OpenSearch  documentation.\n  Great open source software is built together, with a diverse community of contributors. Open source development gives stakeholders the opportunity to shape a project\u2019s direction by contributing to it directly, and by serving as leaders. As part of this initiative, we are seeking community comaintainers for each of these new client libraries. Maintainers will have a leadership position for the library and will play a key role in setting its direction and priorities. If you are interested in participating at any level in the development and roadmap of these client libraries, visit  the OpenSearch website for details.\n  Within the next few weeks, we anticipate opening repositories for each new client library, in the  OpenSearch GitHub organization. We will then work quickly to publish the clients to all the corresponding package managers and repositories. Together, we will ensure that developers have easy access to well-supported client libraries for open source Elasticsearch, Open Distro for Elasticsearch, and OpenSearch.", "posttime": "2021-08-08 00:07:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,\u5f00\u6e90,\u7ee7\u7eed,fighting,\u5ba2\u6237\u7aef", "title": "ElasticSearch \u7ee7\u7eed\u4e0e Amazon AWS \u7684\u5f00\u6e90\u5206\u53c9\u4f5c\u6597\u4e89", "title_en": "ElasticSearch Keeps Fighting Open Source Fork by Amazon AWS", "transed": 1, "url": "https://aws.amazon.com/blogs/opensource/keeping-clients-of-opensearch-and-elasticsearch-compatible-with-open-source/", "via": "", "real_tags": ["amazon", "\u5f00\u6e90", "\u7ee7\u7eed", "fighting", "\u5ba2\u6237\u7aef"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071988, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e5\u671f\uff1a2021 \u5e74 8 \u6708 7 \u65e5\u661f\u671f\u516d 03:51:07 +0200 \u53d1\u4ef6\u4eba\uff1aAxel Beckert &lt;abe@...ian.org&gt;\u6536\u4ef6\u4eba\uff1alynx-dev@...gnu.orgCc\uff1aoss-security@...ts.openwall .com, security@...ian.org, 991971@...s.debian.orgSubject: Re: [Lynx-dev] Lynx SSL \u8bc1\u4e66\u9a8c\u8bc1\u4e2d\u7684\u9519\u8bef -&gt; \u901a\u8fc7 SNI \u4ee5\u660e\u6587\u5f62\u5f0f\u6cc4\u9732\u5bc6\u7801\uff08\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff09 )\u55e8\uff0c2021 \u5e74 8 \u6708 6 \u65e5\u661f\u671f\u4e94\u4e0b\u5348 05:14:32 +0000\uff0cThorsten Glaser&lt;tg@...bsd.de&gt; \u5728 https://lists.nongnu.org/archive/html/lynx-dev \u4e2d\u5199\u9053/2021-08/msg00000.html:&gt; \u8fd9\u4f1a\u5f71\u54cd OpenSSL \u548c Debian \u7684\u975e GNUtls \u6784\u5efa\uff1a&gt; &gt; lynx https://user:pass@...t/&gt; &gt; ... \u5c06\u5bfc\u81f4...&gt; &gt; SSL error:host(user :pass@...t)!=cert(CN&lt;mainhost&gt;:SAN&lt;DNS=host&gt;:SAN&lt;DNS=otherhost&gt;&gt; &gt; ... \u5bf9\u4e8e OpenSSL lynx \u548c...&gt; &gt; SSL \u9519\u8bef:host(user:pass@. ..t)!=cert(CN&lt;mainhost&gt;)-Continue? (n)&gt; &gt; ... for nonGNUtls lynx.&gt; &gt; \u663e\u7136\uff0cuser:pass@ \u9700\u8981\u5728\u6bd4\u8f83\u4e4b\u524d\u88ab\u5265\u79bb\u3002\u8fd9\u6bd4\u6700\u521d\u770b\u8d77\u6765\u66f4\u4e25\u91cd\uff1a\u7531\u4e8e TLS ServerName Indication (SNI)\uff0cLynx \u89e3\u6790\u7684\u4e3b\u673a\u540d\uff08\u5373\u5305\u542b\u201cuser:pass@\u201d\uff09\u5728 _c \u4e2d\u53d1\u9001lear_ \u7f51\u7edc\u4e0a\u7684\u6587\u672c even_before_ \u6211\u4ec0\u81f3\u53ef\u4ee5\u5728 Lynx \u7684\u63d0\u793a\u4e2d\u8bf4\u201cn\u201d\u8868\u793a\u201c\u4e0d\uff0c\u4e0d\u8981\u7ee7\u7eed\u4e0e\u6b64\u670d\u52a1\u5668\u5bf9\u8bdd\u201d\uff0c\u5982\u4e0a\u6240\u793a\u3002\u6211\u80fd\u591f\u5728 TLS \u63e1\u624b\u7684\u6d41\u91cf\u4e2d\u6355\u83b7\u547d\u4ee4\u884c\u4e0a\u7ed9\u51fa\u7684\u5bc6\u7801\u4f7f\u7528tcpdump \u5e76\u4f7f\u7528 Wireshark \u8fdb\u884c\u5206\u6790\uff1a\u6765\u81ea Wiresharks TLS dissector\uff1a\u670d\u52a1\u5668\u540d\u79f0\u6307\u793a\u6269\u5c55\u670d\u52a1\u5668\u540d\u79f0\u5217\u8868\u957f\u5ea6\uff1a28 \u670d\u52a1\u5668\u540d\u79f0\u7c7b\u578b\uff1ahost_name (0) \u670d\u52a1\u5668\u540d\u79f0\u957f\u5ea6\uff1a25 \u670d\u52a1\u5668\u540d\u79f0\uff1auser:pass@....example.org ^ ^^^^^^^^^\u6765\u81eaWiresharks\u201c\u8ddf\u968fTCP\u6d41\u201d\uff1a...........a....jV.........../..... ..D.&amp;...R.+.,..... ..../.0.........z.{./.5.A ........|.}.3.9.E.................2.8.D........ .$.&quot;...user:pass@....example.org......#................................ ......................\uff08\u53ef\u5e94\u8981\u6c42\u63d0\u4f9b PCAP\u3002\u5b9e\u9645\u4e0a\u7528\u6211\u7684\u672c\u5730\u670d\u52a1\u5668\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u4f46\u662f\u5b83\u5e94\u8be5\u5f88\u5bb9\u6613\u91cd\u73b0\uff0c\u65e0\u8bba\u662f\u4efb\u4f55 Linux \u53d1\u884c\u7248\u3002\uff09\u6211\u7528\u6765\u81ea Debian Experimental\uff08\u5b83\u6709\u5f53\u524d\u7684 Lynx \u4e0a\u6e38\u7248\u672c 2.9.0dev.8\uff09\u7684 Lynx \u4ee5\u53ca\u6765\u81ea Debian 8 Jessie ELTS\uff08\u5b83\u6709 Lynx 2.8.9dev.1) \u5e76\u4e14\u90fd\u901a\u8fc7 SNI \u6cc4\u9732\u5bc6\u7801\u3002\u6211\u867d\u7136\u5047\u8bbe Lynx \u7684\u65e7\u7248\u672c\u4e5f\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\uff0c\u81f3\u5c11\u5982\u679c\u5b83\u4eec\u6216\u76f8\u5e94\u7684\u52a0\u5bc6\u5e93\u652f\u6301 SNI\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ec5\u5c1d\u8bd5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528 Lynx\uff08\u5e76\u4e14\u770b\u5230\u5b83\u5931\u8d25\uff09\u5df2\u7ecf\u6cc4\u9732\u4e86\u4f7f\u7528\u7684\u5bc6\u7801\u3002\u6055\u6211\u76f4\u8a00\uff0c\u8fd9\u4ecd\u7136\u9700\u8981\u4e00\u4e2a CVE-ID.Cc&#39;ing Debian \u5b89\u5168\u56e2\u961f\u4ee5\u53ca OSS \u5b89\u5168\u90ae\u4ef6\u5217\u8868\uff0c\u4ee5\u4fbf\u8ba9\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u8fd8\u66f4\u65b0\u4e86\u8be5\u7ebf\u7a0b\u7684\u4e3b\u9898\uff0c\u4ee5\u4f7f\u5176\u5728\u5176\u4ed6\u90ae\u4ef6\u5217\u8868\u4e2d\u4e0d\u90a3\u4e48\u542b\u7cca\u4e0d\u6e05\u3002\u6211\u8fd8\u6284\u9001\u4e86\u6211\u4e3a\u5728 Debian \u4e2d\u8ddf\u8e2a\u6b64\u95ee\u9898\u800c\u521b\u5efa\u7684\u76f8\u5e94 Debian \u9519\u8bef\u62a5\u544a\uff1ahttps://bugs.debian.org/991971\u4eb2\u5207\u7684\u95ee\u5019\uff0c\u963f\u514b\u585e\u5c14 - \uff0c&#39;&#39;`\u3002 | Axel Beckert &lt;abe@...ian.org&gt;, https://people.debian.org/~abe/: :&#39; : | Debian \u5f00\u53d1\u4eba\u5458\uff0cftp.ch.debian.org \u7ba1\u7406\u5458`\u3002 `&#39; | 4096R\uff1a2517 B724 C5F6 CA99 5329 6E61 2FF9 CD59 6126 16B5`- | 1024D: F067 EA27 26B9 C3FC 1486 202E C09E 1D89 9593 0EDE \u4e0b\u8f7d\u201capplication/pgp-signature\u201d\u7c7b\u578b\u7684\u9644\u4ef6\u201csignature.asc\u201d\uff08834\u5b57\u8282\uff09", "note_en": "Date: Sat, 7 Aug 2021 03:51:07 +0200From: Axel Beckert &lt;abe@...ian.org&gt;To: lynx-dev@...gnu.orgCc: oss-security@...ts.openwall.com, security@...ian.org,\t991971@...s.debian.orgSubject: Re: [Lynx-dev] bug in Lynx&#39; SSL certificate validation -&gt; leaks password in clear text via SNI (under some circumstances)Hi,On Fri, Aug 06, 2021 at 05:14:32PM +0000, Thorsten Glaser&lt;tg@...bsd.de&gt; wrote in https://lists.nongnu.org/archive/html/lynx-dev/2021-08/msg00000.html:&gt; this affects both OpenSSL and Debian\u2019s nonGNUtls builds:&gt; &gt; lynx https://user:pass@...t/&gt; &gt; \u2026 will lead to\u2026&gt; &gt; SSL error:host(user:pass@...t)!=cert(CN&lt;mainhost&gt;:SAN&lt;DNS=host&gt;:SAN&lt;DNS=otherhost&gt;&gt; &gt; \u2026 for OpenSSL lynx and\u2026&gt; &gt; SSL error:host(user:pass@...t)!=cert(CN&lt;mainhost&gt;)-Continue? (n)&gt; &gt; \u2026 for nonGNUtls lynx.&gt; &gt; Obviously, user:pass@ need to be stripped before comparing.This is more severe than it initially looked like: Due to TLS ServerName Indication (SNI) the hostname as parsed by Lynx (i.e with&#34;user:pass@&#34; included) is sent in _clear_ text over the wire even_before_ I can even said &#34;n&#34; for &#34;no, don&#39;t continue to talk with thisserver&#34; in Lynx&#39;s prompt as shown above.I was able to capture the password given on the commandline in trafficof an TLS handshake using tcpdump and analysing it with Wireshark:From Wiresharks TLS dissector:Server Name Indication extension Server Name list length: 28 Server Name Type: host_name (0) Server Name length: 25 Server Name: user:pass@....example.org ^^^^^^^^^^From Wiresharks &#34;Follow TCP stream&#34;:...........a....jV.. ......../.......D.&amp;....R.+.,.....\t..../.0...............z.{./.5.A........|.}.3.9.E.............2.8.D.......p............$.&#34;...user:pass@....example.org......#.....................................................(PCAPs available on request. Actually did the test with a local serverof mine. But it should be easy to reproduce, be it with any Linuxdistribution.)I did this test with Lynx from Debian Experimental (which has thecurrent Lynx upstream release 2.9.0dev.8) as well as with Lynx fromDebian 8 Jessie ELTS (which has Lynx 2.8.9dev.1) and both leak thepassword via SNI. I though assume that older releases of Lynx areprobably also affected as well, at least if they or the accordingcrypto libraries support SNI.But given that the symptoms Thorsten discovered stayed unreported forquite some years, I assume that this use case is a rather seldom one.Nevertheless only trying to use Lynx that way (and seeing it fail)already leaks the used password.IMHO this nevertheless needs a CVE-ID.Cc&#39;ing Debian Security Team as well as the OSS Security mailing listfor making them aware of this issue. I also updated the subject ofthis thread to make it less ambigous on other mailing lists.And I&#39;m also Cc&#39;ing the according Debian bug report which I createdfor tracking this issue in Debian:  https://bugs.debian.org/991971\t\tKind regards, Axel-- ,&#39;&#39;`. | Axel Beckert &lt;abe@...ian.org&gt;,  https://people.debian.org/~abe/: :&#39; : | Debian Developer, ftp.ch.debian.org Admin`. `&#39; | 4096R: 2517 B724 C5F6 CA99 5329 6E61 2FF9 CD59 6126 16B5 `- | 1024D: F067 EA27 26B9 C3FC 1486 202E C09E 1D89 9593 0EDE  Download attachment &#34; signature.asc &#34; of type &#34;application/pgp-signature &#34; (834 bytes)", "posttime": "2021-08-07 23:57:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,ssl,lynx", "title": "Lynx \u7684 SSL \u8bc1\u4e66\u9a8c\u8bc1\u4e2d\u7684\u9519\u8bef\u2014\u2014\u901a\u8fc7 SNI \u4ee5\u660e\u6587\u5f62\u5f0f\u6cc4\u9732\u5bc6\u7801", "title_en": "Bug in Lynx' SSL certificate validation \u2013 leaks password in clear text via SNI", "transed": 1, "url": "https://www.openwall.com/lists/oss-security/2021/08/07/1", "via": "", "real_tags": ["\u5bc6\u7801", "ssl", "lynx"]}, {"category": "", "categoryclass": "", "imagename": "ca744160e92e40965bdb02694fdc4c53.png", "infoid": 1071984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "RedMonk \u7f16\u7a0b\u8bed\u8a00\u7684\u8fd9\u4e2a\u8fed\u4ee3\u662f\u7531 Microsoft \u5e26\u7ed9\u60a8\u7684\u3002\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u672a\u6765\u3002 Microsoft \u652f\u6301\u60a8\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\uff0cJava \u4e5f\u4e0d\u4f8b\u5916\uff1b\u6211\u4eec\u559c\u6b22\u5b83\u3002\u6211\u4eec\u63d0\u4f9b\u6700\u597d\u7684 Java \u5f00\u53d1\u5de5\u5177\u3001\u57fa\u7840\u8bbe\u65bd\u548c\u73b0\u4ee3\u6846\u67b6\u652f\u6301\u3002\u4f7f\u7528 Microsoft \u5b9e\u73b0 Java \u5f00\u53d1\u73b0\u4ee3\u5316\u3002\u867d\u7136\u6211\u4eec\u901a\u5e38\u4f1a\u5c1d\u8bd5\u5728 7 \u6708\u4efd\u6392\u540d\u8fd0\u884c\u540e\u7acb\u5373\u8fdb\u884c\u6392\u540d\uff0c\u4f46\u6211\u4eec\u901a\u5e38\u4ee5\u8fdf\u5230\u603b\u6bd4\u4e0d\u505a\u8981\u597d\u3002\u90a3\u4e48\uff0c\u5047\u8bbe 8 \u6708\u603b\u6bd4\u6ca1\u6709\u597d\uff0c\u4e0b\u9762\u662f\u60a8\u7684 RedMonk Q3 \u8bed\u8a00\u6392\u540d\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u8fd9\u4e9b\u662f\u6700\u521d\u7531 Drew Conway \u548c John Myles White \u5728 2010 \u5e74\u5e95\u5b8c\u6210\u7684\u5de5\u4f5c\u7684\u5ef6\u7eed\u3002\u867d\u7136\u5177\u4f53\u7684\u6536\u96c6\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u57fa\u672c\u8fc7\u7a0b\u4fdd\u6301\u4e0d\u53d8\uff1a\u6211\u4eec\u4ece GitHub \u548c Stack Overflow \u4e2d\u63d0\u53d6\u8bed\u8a00\u6392\u540d\uff0c\u4ee5\u53ca\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\u4ee5\u83b7\u5f97\u8bd5\u56fe\u53cd\u6620\u4ee3\u7801 (GitHub) \u548c\u8ba8\u8bba (Stack Overflow) \u5438\u5f15\u529b\u7684\u6392\u540d\u3002\u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u662f\u63d0\u4f9b\u5f53\u524d\u4f7f\u7528\u7684\u7edf\u8ba1\u4e0a\u6709\u6548\u7684\u8868\u793a\uff0c\u800c\u662f\u5c06\u8bed\u8a00\u8ba8\u8bba\u548c\u4f7f\u7528\u76f8\u5173\u8054\uff0c\u4ee5\u4fbf\u6df1\u5165\u4e86\u89e3\u6f5c\u5728\u7684\u672a\u6765\u91c7\u7528\u8d8b\u52bf\u3002\u7528\u4e8e\u5206\u6790\u7684 GitHub \u90e8\u5206\u7684\u6570\u636e\u6e90\u662f GitHub \u5b58\u6863\u3002\u6211\u4eec\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42\u6765\u67e5\u8be2\u8bed\u8a00\uff0c\u5176\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u7ec4\u88c5 Octoverse \u72b6\u6001\u7684 GitHub\u3002\u6211\u4eec\u7684\u67e5\u8be2\u65e8\u5728\u5c3d\u53ef\u80fd\u4e0e\u4e4b\u524d\u7684\u6d41\u7a0b\u5177\u6709\u53ef\u6bd4\u6027\u3002\u8bed\u8a00\u57fa\u4e8e\u57fa\u672c\u5b58\u50a8\u5e93\u8bed\u8a00\u3002\u867d\u7136\u8fd9\u4ecd\u7136\u6709\u4e0b\u9762\u6982\u8ff0\u7684\u8b66\u544a\uff0c\u4f46\u5b83\u786e\u5b9e\u5177\u6709\u4e0e\u6211\u4eec\u4ee5\u524d\u7684\u65b9\u6cd5\u76f8\u7ed3\u5408\u7684\u597d\u5904\u3002\u6211\u4eec\u4f7f\u7528\u6c47\u603b\u7684\u5386\u53f2\u8bb0\u5f55\u6765\u786e\u5b9a\u6392\u540d\uff08\u5c3d\u7ba1\u57fa\u4e8e\u8868\u7ed3\u6784\u7684\u53d8\u5316\uff0c\u8fd9\u4e0d\u80fd\u518d\u901a\u8fc7\u5355\u4e2a\u67e5\u8be2\u6765\u5b8c\u6210\u3002\uff09\u5bf9\u4e8e Stack Overflow\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528\u4ed6\u4eec\u6709\u7528\u7684\u6570\u636e\u6d4f\u89c8\u5668\u5de5\u5177\u6536\u96c6\u6240\u9700\u7684\u6307\u6807\u3002\n\u6709\u4e86\u8fd9\u4e2a\u63cf\u8ff0\uff0c\u8bf7\u8bb0\u4f4f\u5176\u4ed6\u5e38\u89c1\u7684\u8b66\u544a\u3002\u8981\u5305\u542b\u5728\u6b64\u5206\u6790\u4e2d\uff0c\u5fc5\u987b\u5728 GitHub \u548c Stack Overflow \u4e2d\u90fd\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u79cd\u8bed\u8a00\u3002\u8fd9\u91cc\u6ca1\u6709\u58f0\u79f0\u8fd9\u4e9b\u6392\u540d\u66f4\u5e7f\u6cdb\u5730\u4ee3\u8868\u4e86\u4e00\u822c\u7528\u6cd5\u3002\u5b83\u4eec\u53ea\u4e0d\u8fc7\u662f\u5bf9\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u9884\u6d4b\u672a\u6765\u4f7f\u7528\u7684\u4e24\u4e2a\u7fa4\u4f53\u4e4b\u95f4\u76f8\u5173\u6027\u7684\u68c0\u67e5\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4ef7\u503c\u3002\u6709\u8bb8\u591a\u6f5c\u5728\u7684\u793e\u533a\u53ef\u4ee5\u4e3a\u8fd9\u9879\u5206\u6790\u8fdb\u884c\u8c03\u67e5\u3002\u8fd9\u91cc\u4f7f\u7528 GitHub \u548c Stack Overflow \u9996\u5148\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u89c4\u6a21\uff0c\u5176\u6b21\u662f\u56e0\u4e3a\u5b83\u4eec\u516c\u5f00\u4e86\u5206\u6790\u6240\u9700\u7684\u6570\u636e\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9f13\u52b1\u611f\u5174\u8da3\u7684\u5404\u65b9\u4f7f\u7528\u5176\u4ed6\u6765\u6e90\u8fdb\u884c\u81ea\u5df1\u7684\u5206\u6790\u3002\u6240\u6709\u7684\u6570\u5b57\u6392\u540d\u90fd\u5e94\u8be5\u6301\u4fdd\u7559\u6001\u5ea6\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4e25\u683c\u6309\u7167\u6570\u5b57\u6392\u540d\u662f\u4e3a\u4e86\u5174\u8da3\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6570\u5b57\u6392\u540d\u7684\u76f8\u5173\u6027\u8fdc\u4f4e\u4e8e\u8bed\u8a00\u7684\u5c42\u7ea7\u6216\u5206\u7ec4\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\u4e0e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u53ef\u533a\u5206\u7684\u3002\u7136\u800c\uff0c\u60c5\u8282\u4e0a\u8bed\u8a00\u5c42\u4e4b\u95f4\u7684\u5206\u79bb\u901a\u5e38\u4ee3\u8868\u4e86\u76f8\u5bf9\u53d7\u6b22\u8fce\u7a0b\u5ea6\u7684\u5b9e\u8d28\u6027\u5dee\u5f02\u3002\u6b64\u5916\uff0c\u6392\u540d\u8d8a\u9760\u540e\uff0c\u53ef\u7528\u4e8e\u5bf9\u8bed\u8a00\u8fdb\u884c\u6392\u540d\u7684\u6570\u636e\u5c31\u8d8a\u5c11\u3002\u9664\u4e86\u9876\u7ea7\u8bed\u8a00\u4e4b\u5916\uff0c\u6839\u636e\u5feb\u7167\uff0c\u8981\u8bc4\u4f30\u7684\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u5e76\u4e14\u8bed\u8a00\u7684\u5b9e\u9645\u4f4d\u7f6e\u8d8a\u5f80\u4e0b\u8d8a\u4e0d\u53ef\u9760\u3002\u5177\u6709\u57fa\u4e8e Stack Overflow \u4e4b\u5916\u7684\u793e\u533a\u7684\u8bed\u8a00\uff08\u4f8b\u5982 Mathematica\uff09\u5728\u8be5\u8f74\u4e0a\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\u3002\u4e0d\u53ef\u80fd\u5bf9\u8861\u91cf\u4e00\u767e\u4e2a\u4e0d\u540c\u793e\u533a\u7ad9\u70b9\u7684\u8fc7\u7a0b\u8fdb\u884c\u6269\u5c55\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u8bb8\u591a\u793e\u533a\u6ca1\u6709\u53ef\u7528\u7684\u516c\u5171\u6307\u6807\uff0c\u4e5f\u56e0\u4e3a\u8861\u91cf\u4e0d\u540c\u793e\u533a\u7ad9\u70b9\u4e4b\u95f4\u7684\u76f8\u4e92\u6bd4\u8f83\u5728\u7edf\u8ba1\u4e0a\u662f\u65e0\u6548\u7684\u3002\n\u9664\u4e86\u4e0a\u9762\u7684\u56fe\uff0c\u5373\u4f7f\u662f\u5168\u5c3a\u5bf8\u4e5f\u5f88\u96be\u89e3\u6790\uff0c\u6211\u4eec\u63d0\u4f9b\u4ee5\u4e0b\u6570\u5b57\u6392\u540d\u3002\u6b63\u5982\u5c06\u89c2\u5bdf\u5230\u7684\uff0c\u8fd9\u6b21\u8fd0\u884c\u4ea7\u751f\u4e86\u51e0\u4e2a\u5173\u7cfb\uff0c\u5982\u4e0b\u6240\u793a\uff08\u5b83\u4eec\u5728\u6b64\u5904\u6309\u5b57\u6bcd\u987a\u5e8f\u5217\u51fa\u800c\u4e0d\u662f\u5408\u5e76\u4e3a\u5173\u7cfb\uff0c\u56e0\u4e3a\u540e\u4e00\u79cd\u65b9\u6cd5\u5bfc\u81f4\u8bef\u89e3\uff09\u3002\u6b63\u5982\u7b2c\u4e09\u5b63\u5ea6\u7684\u5178\u578b\u8868\u73b0\u4e00\u6837\uff0c\u8fd9\u4e00\u8f6e\u7684\u8bed\u8a00\u6392\u540d\u76f8\u5f53\u9759\u6001\u3002\u5176\u4e2d\u7684\u56e0\u679c\u56e0\u7d20\u662f\u5426\u4e0e\u5b63\u8282\u6027\u5047\u671f\u3001\u5927\u6d41\u884c\u7684\u6301\u7eed\u5f71\u54cd\u6216\u5176\u4ed6\u4e00\u4e9b\u53d8\u91cf\u7684\u7ec4\u5408\u6709\u5173\u5c1a\u4e0d\u6e05\u695a\uff0c\u4f46\u5728\u4e0a\u4e00\u5b63\u5ea6\u7684\u8fd0\u884c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5728\u524d 20 \u540d\u53d8\u5316\u70b9\u4e2d\u5360\u636e\u4e86\u4e00\u534a\u7684\u8bed\u8a00\u4e4b\u540e\uff0c\u672c\u5b63\u5ea6\u7684\u8fd0\u884c\u53ea\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u53d8\u5316\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u53d8\u5316\u975e\u5e38\u663e\u7740\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u51e0\u79cd\u8bed\u8a00\u7f3a\u4e4f\u53d8\u5316\u3002 Java (1)\uff1a\u5728\u6211\u4eec\u7684\u6392\u540d\u4e2d\u82b1\u4e86\u51e0\u4e2a\u5b63\u5ea6\u964d\u5230\u7b2c\u4e09\u4f4d\u4e4b\u540e\uff0c\u89c2\u5bdf\u8005\u8d28\u7591\u5b83\u662f\u5426\u6ce8\u5b9a\u8981\u9010\u6e10\u4e0b\u964d\u8fd9\u4e9b\u6392\u540d\uff0cJava \u91cd\u65b0\u4e0e Python \u5e76\u5217\u7b2c\u4e8c\u3002\u8fd9\u4e0d\u4f1a\u8ba9\u4eba\u611f\u5230\u610f\u5916\uff0c\u4f46\u5bf9\u4e8e\u8be5\u8bed\u8a00\u7684\u8bb8\u591a\u7ade\u4e89\u5bf9\u624b\u2014\u2014\u5e94\u8be5\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e24\u4e2a\u5947\u602a\u7684\u884c\u4e1a\u5206\u6790\u5e08\u2014\u2014\u4e3a\u4f01\u4e1a\u57fa\u7840\u8bbe\u65bd\u7684\u575a\u5b9a\u652f\u6301\u8005\u5b9a\u671f\u64b0\u5199\u5893\u5fd7\u94ed\u3002\u66fe\u7ecf\u4e3a\u8fd0\u884c\u6709\u7ebf\u673a\u9876\u76d2\u800c\u521b\u5efa\u7684\u8bed\u8a00\u4ecd\u7136\u662f\u4e00\u79cd\u4e3b\u529b\uff0c\u800c\u4e14\u91cd\u8981\u7684\u662f\uff0c\u5b83\u59cb\u7ec8\u80fd\u591f\u627e\u5230\u65b0\u7684\u5de5\u4f5c\u8981\u505a\u3002\u8fd9\u4e9b\u5e74\u6765\uff0cJava \u5728\u8fd9\u4e9b\u6392\u540d\u4e0a\u7684\u8868\u73b0\u7ee7\u7eed\u7ed9\u4eba\u7559\u4e0b\u6df1\u523b\u5370\u8c61\uff0c\u800c\u4e14\u7531\u4e8e\u5b83\u8868\u73b0\u51fa\u975e\u51e1\u7684\u9002\u5e94\u5feb\u901f\u53d8\u5316\u73af\u5883\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u79cd\u96be\u4ee5\u4e0e\u4e4b\u6297\u8861\u7684\u8bed\u8a00\u3002", "note_en": "This iteration of the RedMonk Programming Languages is brought to you by Microsoft. Developers build the future. Microsoft supports you in any language and Java is no exception; we love it. We offer the best Java dev tools, infrastructure, and modern framework support. Modernize your  Java development with Microsoft.\n  While we generally try to have our rankings in July immediately after they are run, we generally operate these on a better late than never basis. On the assumption, then, that August is better than never, below are your RedMonk Q3 language rankings.\n As always, these are a continuation of the work originally performed by Drew Conway and John Myles White late in  2010. While the specific means of collection has changed, the basic process remains the same: we extract language rankings from GitHub and Stack Overflow, and combine them for a ranking that attempts to reflect both code (GitHub) and discussion (Stack Overflow) traction. The idea is not to offer a statistically valid representation of current usage, but rather to correlate language discussion and usage in an effort to extract insights into potential future adoption trends.\n  The data source used for the GitHub portion of the analysis is the GitHub Archive. We query languages by pull request in a manner similar to the one GitHub used to assemble the State of the Octoverse. Our query is designed to be as comparable as possible to the previous process.\n Language is based on the base repository language. While this continues to have the caveats outlined below, it does have the benefit of cohesion with our previous methodology.\n  We use the aggregated history to determine ranking (though based on the table structure changes this can no longer be accomplished via a single query.)\n For Stack Overflow, we simply collect the required metrics using their useful data explorer tool.\n With that description out of the way, please keep in mind the other usual caveats.\n To be included in this analysis, a language must be observable within both GitHub and Stack Overflow.\n No claims are made here that these rankings are representative of general usage more broadly. They are nothing more or less than an examination of the correlation between two populations we believe to be predictive of future use, hence their value.\n There are many potential communities that could be surveyed for this analysis. GitHub and Stack Overflow are used here first because of their size and second because of their public exposure of the data necessary for the analysis. We encourage, however, interested parties to perform their own analyses using other sources.\n All numerical rankings should be taken with a grain of salt. We rank by numbers here strictly for the sake of interest. In general, the numerical ranking is substantially less relevant than the language\u2019s tier or grouping. In many cases, one spot on the list is not distinguishable from the next. The separation between language tiers on the plot, however, is generally representative of substantial differences in relative popularity.\n In addition, the further down the rankings one goes, the less data available to rank languages by. Beyond the top tiers of languages, depending on the snapshot, the amount of data to assess is minute, and the actual placement of languages becomes less reliable the further down the list one proceeds.\n Languages that have communities based outside of Stack Overflow such as Mathematica will be under-represented on that axis. It is not possible to scale a process that measures one hundred different community sites, both because many do not have public metrics available and because measuring different community sites against one another is not statistically valid.\n    Besides the above plot, which can be difficult to parse even at full size, we offer the following numerical rankings. As will be observed, this run produced several ties which are reflected below (they are listed out here alphabetically rather than consolidated as ties because the latter approach led to misunderstandings).\n   As has become typical of third quarter runs, this round of the language rankings was fairly static. Whether the causal factors there are related to seasonal vacations, continuing impacts from the pandemic or some other combination of variables is unclear, but after last quarter\u2019s run featured half the languages in the Top 20 changing spots in some way, this quarter\u2019s run features only two such changes. Those changes, however, are quite notable, as is the lack of movement from several languages as we\u2019ll discuss.\n Java (1): After spending a few quarters demoted to third place in our rankings, prompting questions from observers as to whether it was fated to a gradual drift down these rankings, Java surged back into a tie for second place with Python. This would be less of a surprise but for many of the language\u2019s competitors \u2013 and, it should be said, the odd industry analyst or two \u2013 writing regularly recurring epitaphs for the stalwart of enterprise infrastructure. The language once created to run cable set top boxes continues to be a workhorse, and importantly one that has consistently been able to find new work to do. Java\u2019s performance on these rankings continues to impress, all these years later, and as it\u2019s shown a remarkable ability to adapt to a rapidly changing landscape it\u2019s a language that would be difficult to bet against.", "posttime": "2021-08-07 22:59:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f16\u7a0b,java,programming,github,python", "title": "Redmonk \u5bf9\u7f16\u7a0b\u8bed\u8a00\u7684\u7814\u7a76\uff0c\u7ed3\u5408 GitHub \u548c Stack Overflow \u7684\u6570\u636e\uff0c\u663e\u793a Java \u4e0e Python \u5e76\u5217\u7b2c\u4e8c\uff0c\u800c JavaScript \u4ecd\u7136\u4f4d\u5c45\u699c\u9996", "title_en": "Redmonk study of programming languages, combining GitHub and Stack Overflow data, shows Java in second place alongside Python, while JavaScript remains top", "transed": 1, "url": "https://redmonk.com/sogrady/2021/08/05/language-rankings-6-21/", "via": "", "real_tags": ["\u7f16\u7a0b", "java", "github", "python"]}, {"category": "", "categoryclass": "", "imagename": "8bb9835f02fe8b5ccec031d877c39e02.jpeg", "infoid": 1071983, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51c6\u786e\u63cf\u8ff0\u6548\u679c\u4e0d\u662f\u4e00\u5934\u96fe\u6c34\uff1b\u907f\u514d\u5728\u56f4\u7ed5 COVID-19 \u75ab\u82d7\u7684\u5f02\u5e38\u590d\u6742\u548c\u7d27\u5f20\u7684\u79d1\u5b66\u548c\u793e\u4f1a\u8fa9\u8bba\u4e2d\u589e\u52a0\u6df7\u4e71\u662f\u975e\u5e38\u9700\u8981\u7684\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u63a5\u79cd\u75ab\u82d7\u53ef\u4ee5\u4fdd\u62a4 95% \u7684\u4eba\u514d\u4e8e\u75be\u75c5\u2014\u2014\u67f3\u53f6\u5200\u4f20\u67d3\u75c5\u793e\u8bba\u4e2d\u4e5f\u53d1\u73b0\u4e86\u5bf9\u75ab\u82d7\u4fdd\u62a4\u7684\u666e\u904d\u8bef\u89e3\u3002\u8fd9\u51fa\u73b0\u5728 3 \u6708 8 \u65e5\u901a\u8fc7\u540c\u884c\u8bc4\u5ba1\u7684\u9886\u5148\u533b\u5b66\u671f\u520a\u300a\u67f3\u53f6\u5200\u300b\u53d1\u8868\u7684\u6587\u7ae0\u4e2d\u3002\u5b83\u5f3a\u8c03\uff0c\u5373\u4f7f\u5728\u5173\u6ce8\u6b64\u7c7b\u95ee\u9898\u7684\u79d1\u5b66\u754c\u5185\uff0c\u5bf9\u62a5\u544a\u7684\u75ab\u82d7\u529f\u6548\u6570\u5b57\u7684\u542b\u4e49\u548c\u5f71\u54cd\u7684\u8bef\u89e3\u4ecd\u7136\u5b58\u5728\u3002\u5982\u679c\u79d1\u5b66\u754c\u5728\u81ea\u5df1\u7684\u89e3\u91ca\u4e2d\u72af\u4e86\u9519\u8bef\uff0c\u90a3\u53ef\u80fd\u4f1a\u8bef\u5bfc\u51b3\u7b56\u8005\uff0c\u5373\u4f7f\u662f\u53d7\u8fc7\u826f\u597d\u6559\u80b2\u7684\u51b3\u7b56\u8005\uff0c\u53cd\u8fc7\u6765\u4e5f\u4f1a\u8bef\u5bfc\u516c\u4f17\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u770b\u5230\u4e86\u66f4\u5e7f\u6cdb\u5171\u4eab\u7684\u6587\u7ae0\u7684\u8bc1\u636e\uff0c\u4ee5\u7ea0\u6b63\u300a\u67f3\u53f6\u5200\u300b\u901a\u4fe1\u6240\u5173\u6ce8\u7684\u4e00\u4e9b\u65e9\u671f\u8bef\u89e3\u3002\u7136\u800c\uff0c\u4e00\u79cd\u66f4\u9634\u9669\u7684\u8bef\u89e3\u548c\u9519\u8bef\u4fe1\u606f\u4ecd\u7136\u5b58\u5728\uff0c\u5e76\u4e14\u65e0\u5904\u4e0d\u5728\u3002\u6c64\u59c6\u4e0d\u662f\u666e\u901a\u7684\u533b\u751f\u3002\u4ed6\u662f\u5965\u5df4\u9a6c\u603b\u7edf\u9886\u5bfc\u4e0b\u7684\u75be\u75c5\u63a7\u5236\u4e2d\u5fc3\u524d\u4e3b\u4efb\u3002\u4ed6\u8fd8\u5728\u4f20\u64ad\u6709\u5173 COVID-19 \u75ab\u82d7\u7684\u5371\u9669\u9519\u8bef\u4fe1\u606f\u3002\u5b83\u4f1a\u5bfc\u81f4\u4eba\u4eec\u8bef\u89e3\u73b0\u5b9e\u4e16\u754c\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u5bfc\u81f4\u66f4\u591a\u4eba\u6b7b\u4ea1\uff0c\u5e76\u52a0\u5267\u5927\u6d41\u884c\u3002\u6c64\u59c6\u535a\u58eb\u9519\u4e86\u3002\u4f60\u80fd\u5f97\u5230\u7684\u9519\u8bef\u5dee\u4e0d\u591a\u3002\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u8868\u660e\uff0c\u5982\u679c\u611f\u67d3\u4e86 COVID\uff0c\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u7387\u53ef\u80fd\u662f\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u7387\u7684 3 \u81f3 5.7 \u500d 1\u3002 CDC \u524d\u4efb\u4e3b\u4efb\u6b63\u5728\u72af\u6211\u6240\u8bf4\u7684\u53ef\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\u5f53\u4ed6\u4eec\u88ab\u8ba4\u4e3a\u6709\u6b63\u786e\u7684\u610f\u89c1\u65f6\uff0c\u8fd9\u662f\u4e00\u79cd\u5141\u8bb8\u72af\u7684\u9519\u8bef\u3002\u4e0e\u53ef\u80fd\u88ab\u8ba4\u4e3a\u5bf9\u5b9e\u73b0\u8be5\u76ee\u6807\u9002\u5f97\u5176\u53cd\u7684\u4efb\u4f55\u8bba\u636e\u6216\u7edf\u8ba1\u6570\u636e\u76f8\u6bd4\uff0c\u7528\u4e8e\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u63a5\u79cd COVID \u75ab\u82d7\u7684\u76ee\u6807\u6240\u4f7f\u7528\u7684\u8bba\u636e\u548c\u7edf\u8ba1\u6570\u636e\u53d7\u5230\u7684\u5ba1\u67e5\u8981\u5c11\u5f97\u591a\uff0c\u5e76\u4e14\u66f4\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u771f\u5b9e\u7684\u3002\n\u5f53\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3\u7684\u524d\u4efb\u4e3b\u4efb\u6216\u5176\u4ed6\u4efb\u4f55\u4eba\u8bf4\u611f\u67d3\u4e86 COVID \u7684\u4eba\u5982\u679c\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u8981\u4f4e 100 \u500d\uff0c\u8fd9\u4e2a\u6570\u5b57\u76f8\u5dee\u591a\u8fdc\u5e76\u4e0d\u91cd\u8981\u3002\u65e0\u8bba\u591a\u4e48\u4e0d\u51c6\u786e\uff0c\u5b83\u90fd\u4f1a\u5f88\u5bb9\u6613\u88ab\u539f\u8c05\u3002\u4f3c\u4e4e\u6700\u91cd\u8981\u7684\u662f\u666e\u53ca\u75ab\u82d7\u63a5\u79cd\u7684\u76ee\u6807\uff0c\u800c\u4e0d\u662f\u771f\u76f8\u3002\u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\u4eba\u4eec\u58f0\u79f0\u5b58\u5728\u8fd9\u4e9b\u5947\u5999\u7684\u989d\u5916\u597d\u5904\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u505a\u4e00\u4e9b\u6570\u5b66\u8ba1\u7b97\u3002\u4f46\u4e00\u65e6\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u6df7\u4e71\u5c31\u4f1a\u5f97\u5230\u7f13\u89e3\uff0c\u6743\u5a01\u4eba\u58eb\u548c\u6267\u884c\u4efb\u52a1\u7684\u4eba\u4f20\u64ad\u7684\u5371\u9669\u9519\u8bef\u4fe1\u606f\u5c06\u53d8\u5f97\u6e05\u6670\u3002\u4e3a\u4e86\u4e86\u89e3\u75ab\u82d7\u529f\u6548\uff0c\u8f89\u745e-BioNTech mRNA BNT162b2 \u4e34\u5e8a\u8bd5\u9a8c\u7ed3\u679c\u4e2d\u63d0\u4f9b\u7684\u56fe\u8868\u5c06\u975e\u5e38\u6709\u7528\u3002\u5e26\u5706\u5708\u7684\u7ea2\u7ebf\u663e\u793a\uff0c\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6570\u4e3a 21,669 \u4eba\uff0c\u611f\u67d3\u7387\u6709\u6240\u653e\u7f13\u3002\u4e2a\u4f53\u611f\u67d3\u4e4b\u95f4\u7684\u5e73\u5747\u5929\u6570\u589e\u52a0\u4e86\u3002\u7ed3\u679c\u662f\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u88ab\u611f\u67d3\u7684\u603b\u4eba\u6570\u786e\u5b9e\u8fdc\u4f4e\u4e8e\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u7fa4\u3002\u8fd9\u5c31\u662f\u300a\u67f3\u53f6\u5200\u300b\u65e9\u4e9b\u65f6\u5019\u53d1\u8868\u7684\u58f0\u660e\u201c\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u63a5\u79cd\u75ab\u82d7\uff0c\u4ed6\u4eec\u5c31\u4f1a\u611f\u67d3 COVID-19\u201d\u7684\u5730\u65b9\u3002\u53ef\u4ee5\u5408\u7406\u5730\u5047\u8bbe\uff0c\u5982\u679c\u8be5\u7ec4\u672a\u63a5\u79cd\u75ab\u82d7\uff0c\u7ea2\u7ebf\u5c06\u7c7b\u4f3c\u4e8e\u84dd\u7ebf\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u53ef\u4ee5\u8ba1\u7b97\u7ea2\u5708\u4e4b\u95f4\u51fa\u73b0\u7684\u84dd\u7ebf\u4e0a\u7684\u65b9\u5757\u6570\uff0c\u5e76\u5f97\u5230\u4e00\u6bb5\u65f6\u95f4\u5185\u6bcf\u4e2a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6709\u591a\u5c11\u672a\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u88ab\u611f\u67d3\u7684\u6bd4\u7387\u3002\u529f\u6548\u7b49\u7ea7\uff08\u8868\u4e2d\u7684 VE\uff09\u662f\u5c1d\u8bd5\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u7136\u800c\uff0c\u589e\u52a0\u4e86\u4e00\u5c42\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u7814\u7a76\u4eba\u5458\u5bf9\u5f85\u5b66\u4e60\u4e2d\u7684\u4eba\u6ca1\u6709\u592a\u5927\u533a\u522b\u3002\u4e00\u4e2a\u4eba\u88ab\u7eb3\u5165\u7814\u7a76\u548c\u53ef\u89c2\u5bdf\u7684\u6bcf\u4e00\u5929\u90fd\u88ab\u89c6\u4e3a\u4e00\u4e2a\u4eba\u65e5\u3002\u5728\u7ed9\u5b9a\u65e5\u671f\u89c2\u5bdf\u5230\u7684\u6bcf\u4e2a\u4eba\u90fd\u88ab\u8ba1\u7b97\u5728\u5185\uff0c\u5e76\u6dfb\u52a0\u5230\u4eba\u65e5\u603b\u6570\u4e2d\u3002\u5728\u7814\u7a76\u7ed3\u675f\u65f6\uff0c\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u9664\u4ee5\u4e3a\u8be5\u7ec4\u8ba1\u7b97\u7684\u603b\u4eba\u65e5\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u56db\u5929\u89c2\u5bdf\u4e24\u4e2a\u4eba\uff0c\u5219\u603b\u5171\u662f\u516b\u4eba\u65e5\u3002\u6bcf\u4e2a\u4eba\u6bcf\u5929\u90fd\u6709\u88ab\u611f\u67d3\u7684\u673a\u4f1a\uff0c\u9664\u975e\u4ed6\u4eec\u5df2\u7ecf\u88ab\u611f\u67d3\u3002\u4e00\u4e2a\u4eba\u603b\u5171\u6709\u516b\u6b21\u88ab\u611f\u67d3\u7684\u673a\u4f1a\u3002\u4f46\u662f\uff0c\u4e00\u65e6\u88ab\u611f\u67d3\uff0c\u5c31\u4e0d\u80fd\u518d\u88ab\u611f\u67d3\uff0c\u56e0\u6b64\u8be5\u4eba\u4e0d\u518d\u8ba1\u5165\u4eba\u65e5\u8ba1\u6570\u3002\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u4f7f\u7528\u7684\u65f6\u95f4\u957f\u5ea6\u4e0e\u4e00\u5929\u4e0d\u540c\uff0c\u4f46\u60f3\u6cd5\u662f\u76f8\u540c\u7684\u3002\n\u5f52\u6839\u7ed3\u5e95\uff0c\u529f\u6548\u8ba1\u7b97\u662f\u8ba1\u6570\u4e8b\u7269\u548c\u5212\u5206\u4e8b\u7269\u8ba1\u6570\u7684\u7ed3\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4ed6\u4eec\u8ba1\u7b97\u7684\u6570\u5b57\u81ea\u5df1\u9664\u4ee5\u5f97\u51fa\u76f8\u540c\u7684\u529f\u6548\u6570\u5b57\u3002\u8ba9\u6211\u4eec\u4f7f\u7528\u7b2c 2 \u5242\u540e \u2265 7 \u5929\u7684\u6570\u636e\u3002\u63a5\u79cd\u7ec4\u6709 21,314 \u4eba\u8de8\u8d8a 4.015 \u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u6709 21,258 \u4eba\u8de8\u8d8a 3.982 \u4e2a\u65f6\u95f4\u5355\u4f4d\u3002\u73b0\u5728\u6211\u4eec\u6bd4\u8f83\u611f\u67d3\u7387\uff0c\u5206\u522b\u662f 9 \u548c 172 \u89c2\u5bdf\u5230\u7684\u611f\u67d3\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d6\u4e24\u4e2a\u6bd4\u7387\uff0c\u5e76\u6bd4\u8f83\u5b83\u4eec\uff0c\u5e76\u8ba1\u7b97\u4e00\u4e2a\u6570\u5b57\uff0c\u8be5\u6570\u5b57\u4ee3\u8868\u79f0\u4e3a\u529f\u6548\u7684\u767e\u5206\u6bd4\u5206\u6570\u3002\u8868\u4e2d\u6709\u836f\u6548\u7f16\u53f7\u3002\u4ece 1 \u4e2d\u51cf\u53bb\u53ea\u662f\u8ba9\u60a8\u62a5\u544a\u4e00\u4e2a\u6570\u5b57\u8d8a\u9ad8\u8d8a\u597d\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u201c\u9ad8\u5c14\u592b\u89c4\u5219\u201d\u8d8a\u4f4e\u8d8a\u597d\u3002\u5982\u679c\u60a8\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u63a8\u5bfc\u51fa\u6765\u7684\uff0c\u90a3\u4e48\u8ba1\u7b97\u672c\u8eab\u5c31\u4e0d\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u4f46\u91cd\u8981\u7684\u662f\u8981\u575a\u6301\u6211\u4eec\u76ee\u524d\u53ea\u8ba8\u8bba\u4e00\u6bb5\u65f6\u95f4\u5185\u611f\u67d3\u7387\u7684\u60f3\u6cd5\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u4e24\u7ec4\u4e4b\u95f4\u7684\u611f\u67d3\u7387\u662f\u5b8c\u5168\u5408\u7406\u7684\u3002\u8fd9\u79cd\u533a\u522b\u66f4\u4e3a\u91cd\u8981\uff0c\u56e0\u4e3a\u867d\u7136\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u75ab\u82d7\u5728\u8bd5\u9a8c\u6761\u4ef6\u4e0b\u53ef\u4ee5\u964d\u4f4e\u98ce\u9669\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u679c\u5c06\u75ab\u82d7\u90e8\u7f72\u5728\u5177\u6709\u4e0d\u540c\u66b4\u9732\u3001\u4f20\u64ad\u6c34\u5e73\u548c\u53d1\u75c5\u7387\u7684\u4eba\u7fa4\u4e2d\uff0c\u5b83\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u53d8\u5316. 2 \u4ee5\u8272\u5217\u63d0\u4f9b\u4e86\u8f89\u745e-BioNTech mRNA BNT162b2 \u75ab\u82d7\u771f\u5b9e\u4e16\u754c\u52a8\u6001\u7684\u4e00\u77a5\u3002 2021 \u5e74 5 \u6708\u53d1\u8868\u5728\u300a\u67f3\u53f6\u5200\u300b\u4e0a\u7684\u4e00\u9879\u4e3b\u8981\u7814\u7a76\u56de\u987e\u4e86\u4f5c\u4e3a\u653f\u5e9c\u75ab\u82d7\u63a5\u79cd\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u6536\u96c6\u7684\u56fd\u5bb6\u76d1\u6d4b\u6570\u636e\u3002\u6536\u96c6\u7684\u6570\u636e\u80fd\u591f\u786e\u5b9a\u63a5\u79cd\u75ab\u82d7\u7684\u65e5\u671f\uff1b\u5f53\u4ed6\u4eec\u88ab\u8bca\u65ad\u51fa\u60a3\u6709 COVID \u65f6\uff1b\u4ed6\u4eec\u662f\u5426\u6709\u75c7\u72b6\uff1b\u4ed6\u4eec\u662f\u5426\u4ee5\u53ca\u4f55\u65f6\u53bb\u533b\u9662\uff1b\u5982\u679c\u4ed6\u4eec\u6709\u4e25\u91cd\u6216\u5371\u6025\u7684\u4f4f\u9662\u6cbb\u7597\uff1b\u5982\u679c\u4ed6\u4eec\u6b7b\u4e86\u3002\u8be5\u7814\u7a76\u76f8\u5f53\u5f7b\u5e95\uff0c\u5c3d\u7ba1\u5b83\u786e\u5b9e\u5305\u542b\u4e00\u4e9b\u9519\u8bef\uff0c\u5176\u4e2d\u4e00\u4e9b\u53ef\u80fd\u5c1a\u672a\u5b8c\u5168\u7ea0\u6b63\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u68c0\u67e5\u529f\u6548\u6570\u5b57\u5e76\u7ea0\u6b63\u9519\u8bef\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b2c 1825 \u9875\u8868 4 \u4e2d\u63d0\u4f9b\u7684\u6570\u5b57\u3002\u9876\u90e8\u7684\u767d\u6846\u5305\u542b\u7814\u7a76\u671f\u95f4\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u5e74\u9f84\u3002\u6240\u6709\u5e74\u9f84\u6bb5\u7684\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u63a5\u79cd\u75ab\u82d7\u7684\u611f\u67d3\u4eba\u6570\u5206\u522b\u4e3a 109,876 \u548c 3,642\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e24\u8005\u7684\u4eba\u65e5\uff08\u89c2\u5bdf\u5230\u7684\u603b\u65f6\u95f4\uff09\u3002\u8fd9\u4e9b\u5728\u8868\u683c\u5e95\u90e8\u63d0\u4f9b\uff0c\u5bf9\u4e8e\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u5df2\u63a5\u79cd\u75ab\u82d7\uff0c\u5206\u522b\u4e3a 120,076,136 \u548c 170,434,659\u3002\n\u770b\u770b\u6211\u4eec\u8ba1\u7b97\u7684\u8fd1\u4f3c\u6bd4\u7387\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8868\u4e2d\u7ea2\u8272\u65b9\u5757\u4e2d\u7684 91.5 \u5bf9\u5e94\u4e8e\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u672a\u63a5\u79cd\u75ab\u82d7\u7387\uff0c\u540c\u6837\uff0c\u84dd\u8272\u6846\u4e2d\u7684 2.1 \u5bf9\u5e94\u4e8e\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u63a5\u79cd\u7387\u3002\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e24\u8005\u90fd\u4e58\u4ee5 100,000\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6bcf 100,000 \u4eba\u65e5\u7684\u53d1\u75c5\u7387\uff0c\u4ee5\u4f7f\u5b83\u4eec\u4e0e\u8868\u683c\u5927\u81f4\u76f8\u7b49\u3002\u4e0b\u4e00\u6b65\u4e0e\u8f89\u745e\u7684\u7b2c\u4e09\u9636\u6bb5\u8bd5\u9a8c\u76f8\u540c\u3002 \u201c\u75ab\u82d7\u6709\u6548\u6027\u4f30\u8ba1\u8ba1\u7b97\u4e3a (1 \u2013 IRR) \u00d7 100\u201d\uff08\u53d1\u751f\u7387\u6bd4\u7387\uff0cIRR\uff09\u6211\u4eec\u7684\u8ba1\u7b97\u4f3c\u4e4e\u6bd4\u8868\u4e2d\u7684\u9ad8 1.1%\u3002\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u89e3\u91ca\u3002\u4e00\u79cd\u89e3\u91ca\u53ef\u80fd\u662f\uff0c\u5f53\u4ed6\u4eec\u66f4\u6b63\u4e00\u4e9b\u786c\u503c\u65f6\uff0c\u4ed6\u4eec\u672a\u80fd\u66f4\u65b0\u529f\u6548\u8ba1\u7b97\u3002\u7b2c\u4e8c\u79cd\u89e3\u91ca\u662f\uff0c\u4f5c\u8005\u901a\u8fc7\u7279\u5b9a\u7684\u7edf\u8ba1\u5305 3 \u8fd0\u884c\u4e86\u6211\u4eec\u6ca1\u6709\u7684\u539f\u59cb\u6570\u636e\u4ee5\u4f30\u8ba1\u754c\u9650\uff08\u62ec\u53f7\u4e2d\u7684\u6570\u5b57\uff0c\u4e3a\u4f30\u8ba1\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6446\u52a8\u7a7a\u95f4\uff09\uff0c\u8fd9\u7ed9\u4e86\u4ed6\u4eec\u4e00\u4e2a\u66f4\u7ec6\u5fae\u7684\u5dee\u522b\u5bf9\u4e2d\u5fc3\u53d1\u75c5\u7387\u7684\u4f30\u8ba1\u6bd4\u4ed6\u4eec\u63d0\u4f9b\u7ed9\u8bfb\u8005\u7684\u6570\u5b57\u5141\u8bb8\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u8ba1\u7b97\u7684\u53d1\u75c5\u7387\u663e\u7136\u4e0e\u8868\u683c\u4e00\u81f4\u3002\u8fd9\u4e0d\u662f\u592a\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53ea\u662f\u4f5c\u8005\u6839\u636e\u89c2\u5bdf\u505a\u51fa\u7684\u4f30\u8ba1\u3002\u8fd9\u4e9b\u4f30\u8ba1\u503c\u4f1a\u968f\u7740\u65f6\u95f4\u548c\u4e0d\u540c\u4eba\u7fa4\u800c\u53d8\u5316\u3002\u5b83\u4eec\u975e\u5e38\u6709\u7528\uff0c\u4f46\u4e0d\u5e94\u89c6\u4e3a\u5b83\u4eec\u662f\u7cbe\u786e\u7684\u3002\u5b83\u4eec\u4e5f\u4e0d\u662f\u4e3b\u8981\u95ee\u9898\u51fa\u73b0\u7684\u5730\u65b9\u3002\u4eba\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u67e5\u770b\u539f\u59cb\u6570\u5b57\u800c\u4e0d\u8ba1\u7b97\u529f\u6548\u6570\u5b57\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u786e\u5b9e\u611f\u67d3\u7387\u8981\u4f4e\u5f97\u591a\u3002\u5728\u8ba1\u7b97\u529f\u6548\u767e\u5206\u6bd4\u65f6\u4fdd\u7559\u7684\u5dee\u5f02\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u7136\u800c\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8f6c\u5411\u6700\u7ec8\u5c06\u6210\u4e3a\u9519\u8bef\u4fe1\u606f\u7684\u6765\u6e90\u3002\u8fd9\u4e0d\u662f\u62a5\u544a\u672c\u8eab\u7684\u9519\uff0c\u800c\u662f\u592a\u591a\u4eba\u5047\u88c5\u4ee5\u77e5\u8bc6\u548c\u6743\u5a01\u6765\u89e3\u91ca\u4ed6\u4eec\u4e0d\u7406\u89e3\u7684\u6570\u5b57\u7684\u7ed3\u679c\u3002\u8be5\u7814\u7a76\u5305\u62ec\u6709\u75c7\u72b6\u7684 COVID\u3001\u4f4f\u9662\u3001\u4e25\u91cd\u4f4f\u9662\u7387\u53ca\u5176\u5404\u81ea\u7684\u7597\u6548\u8ba1\u7b97\u3002\u8868\u683c\u5e95\u90e8\u662f\u4e0e\u6b7b\u4ea1\u76f8\u5173\u7684\u7597\u6548\u8ba1\u7b97\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u8868\u683c\u8fdb\u884c\u6700\u7ec8\u529f\u6548\u8ba1\u7b97\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8ba8\u8bba\u8fd9\u4e00\u53ef\u6015\u7684\u9519\u8bef\u4fe1\u606f\u6765\u6e90\u3002\n\u6211\u4eec\u5728\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d 16-44 \u5c81\u7684\u4eba\u7fa4\u4e2d\u6709 36 \u4eba\u6b7b\u4ea1\uff0c\u5728\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d\u6709 0 \u4eba\u6b7b\u4ea1\u3002\u4ece\u8868\u5e95\u90e8\u5f00\u59cb\uff0c\u672a\u63a5\u79cd\u75ab\u82d7\u548c\u5df2\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u65e5\u5206\u522b\u4e3a 88,938,310 \u548c 61,397,072 \u4eba\u65e5\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\uff0c\u786e\u5b9e\u662f 100% \u7684\u529f\u6548\uff01 100% \u6709\u6548\u7387\uff01\u90a3\u662f100%\u9632\u6b62\u6b7b\u4ea1\uff01 16-44 \u5c81\u7684\u4eba\u4e0d\u4f1a\u6b7b\u4e8e COVID\uff01\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u4eba\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\u662f\u591a\u4e48\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u4eec\u751a\u81f3\u4e0d\u63d0\u4f9b\u4e00\u5b9a\u8303\u56f4\u7684\u4e0d\u786e\u5b9a\u6027\u3002 100% \u6ca1\u6709\u4e0d\u786e\u5b9a\u6027\u662f\u60a8\u53ef\u4ee5\u83b7\u5f97\u7684\u786e\u5b9a\u6027\u3002 16-44 \u5c81\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u663e\u7136\u6709\u53ef\u80fd\u6b7b\u4e8e COVID\u3002\u6765\u81ea\u6b7b\u4ea1\u8ba1\u7b97\u7684\u8fd9\u79cd\u529f\u6548\u7684\u5176\u4ed6\u7ed3\u679c\u540c\u6837\u6709\u7f3a\u9677\uff0c\u5e76\u4e14\u6b63\u5728\u88ab\u5371\u9669\u5730\u6ee5\u7528\u3002\u8ba9\u6211\u4eec\u91cd\u6e29\u4e00\u4e0b\u524d\u75be\u63a7\u4e2d\u5fc3\u4e3b\u4efb\u6c64\u59c6\u535a\u58eb\u3002\u9ad8\u5ea6\u8b66\u60d5\u7684\u5927\u89c4\u6a21\u75ab\u82d7\u63a5\u79cd\u5021\u5bfc\u8005\u4e00\u76f4\u5728\u4f7f\u7528\u8fd9\u9879\u4ee5\u8272\u5217\u7814\u7a76\u4e2d\u201c\u6b7b\u4ea1\u201d\u7684\u75ab\u82d7\u529f\u6548\u6570\u636e\uff0c\u58f0\u79f0\u5982\u679c\u60a8\u611f\u67d3\u4e86 COVID\uff0c\u60a8\u5c06\u83b7\u5f97\u989d\u5916\u7684\u4fdd\u62a4\uff0c\u56e0\u4e3a\u75ab\u82d7\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u5f15\u7528\u8fd9\u4e2a\u767e\u5206\u6bd4\uff08\u201c\u5b83\u5728\u9884\u9632\u6b7b\u4ea1\u65b9\u9762\u6709 96% \u7684\u6548\u7387\uff01\u201d\uff09\u4ee5\u514d\u88ab\u6307\u8d23\u53d1\u660e\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u6570\u5b57\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u90a3\u4e48\u60a8\u73b0\u5728\u5df2\u7ecf\u6267\u884c\u4e86 3 \u6b21\u72ec\u7acb\u7684\u529f\u6548\u8ba1\u7b97\u3002\u8ba1\u6570\u4e8b\u7269\u548c\u5212\u5206\u4e8b\u7269\u8ba1\u6570\u3002\u6211\u4eec\u65e0\u5904\u3001\u4efb\u4f55\u65f6\u95f4\u3001\u4ee5\u4efb\u4f55\u65b9\u5f0f\u67e5\u770b\u63a5\u79cd\u75ab\u82d7\u7ec4\u4e2d\u6709\u591a\u5c11\u4eba\u611f\u67d3\u4e86 COVID \u5e76\u6b7b\u4ea1\u3002\u6211\u4eec\uff08\u548c\u8be5\u7814\u7a76\u7684\u4f5c\u8005\uff09\u8ba1\u7b97\u4e86\u63a5\u79cd\u75ab\u82d7\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u7136\u540e\u9664\u4ee5\u5929\u6570\uff0c\u800c\u4e0d\u662f\u611f\u67d3\u4eba\u6570\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u67e5\u770b\u5e76\u6bd4\u8f83\u5b9e\u9645\u611f\u67d3\u8005\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u6545\u4e8b\u3002\u6bcf\u4e00\u4e2a\u989d\u5916\u7684\u529f\u6548\u6570\u5b57\u90fd\u662f\u591a\u4f59\u7684\u3002\u611f\u67d3\u4e0b\u6e38\u7684\u6240\u6709\u62a5\u544a\u7ed3\u679c\u90fd\u662f\u611f\u67d3\u51cf\u5c11\u7684\u7ed3\u679c 4. \u5373\u4f7f\u63a5\u79cd\u7ec4\u9664\u611f\u67d3\u7387\u5916\u5b8c\u5168\u76f8\u540c\uff0c\u6709\u6548\u7387\u4e5f\u5c06\u8fbe\u5230 90 \u5e74\u4ee3\u7684\u9ad8\u4f4d\u3002\n\u5f53\u201c\u75be\u63a7\u4e2d\u5fc3\u524d\u4e3b\u4efb\u201d\u6c64\u59c6\u535a\u58eb\u7b49\u4eba\u7528\u975e\u611f\u67d3\u6548\u529b\u6570\u5b57\u6765\u8ba8\u8bba\u75ab\u82d7\u65f6\uff0c\u4ed6\u4eec\u6709\u610f\u65e0\u610f\u5730\u8bef\u5bfc\u4e86\u516c\u4f17\u3002\u8fd9\u662f\u5e94\u8be5\u7acb\u5373\u7ed3\u675f\u7684\u4e8b\u60c5\u3002\u9664\u4e86\u611f\u67d3\u7387\u4e4b\u5916\uff0c\u529f\u6548\u6570\u5b57\u6ca1\u6709\u5411\u516c\u6c11\u4f20\u8fbe\u4efb\u4f55\u5173\u4e8e\u4ed6\u4eec\u63a5\u79cd\u75ab\u82d7\u540e\u98ce\u9669\u7684\u6709\u7528\u4fe1\u606f\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4ed6\u4eec\u5bf9\u8fd9\u4e9b\u9519\u8bef\u4fe1\u606f\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u5c06\u81ea\u5df1\u548c\u4ed6\u4eba\u7f6e\u4e8e\u66f4\u5927\u7684\u98ce\u9669\u4e4b\u4e2d\u3002\u9664\u4e86\u611f\u67d3\u4e4b\u5916\uff0c\u529f\u6548\u6570\u5b57\u90fd\u662f\u611f\u67d3\u7684\u4e0b\u6e38\u6548\u5e94\uff0c\u6b63\u5728\u88ab\u4f7f\u7528\u548c\u63a5\u53d7\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u5728 COVID \u611f\u67d3\u7684\u6bcf\u4e2a\u9636\u6bb5\u90fd\u662f\u989d\u5916\u7684\u3001\u5206\u5c42\u7684\u597d\u5904\u4e00\u6837\u3002\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5b83\u4eec\u662f\u5982\u4f55\u88ab\u4f20\u8fbe\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u88ab\u7edd\u5927\u591a\u6570\u516c\u4f17\u4eba\u7269\u548c\u516c\u6c11\u63a5\u53d7\u7684\u3002\u5982\u679c\u60a8\u63a5\u79cd\u4e86\u75ab\u82d7\uff0c\u5219\u8868\u660e\u8be5\u7814\u7a76\u8868\u660e\u60a8\u662f\uff1a \u5982\u679c\u529f\u6548\u6570\u5b57\u662f\u989d\u5916\u4fdd\u62a4\u7684\u5206\u5c42\u63aa\u65bd\uff0c\u90a3\u4e48\u4ee5\u8272\u5217\u7814\u7a76\uff08\u6240\u6709\u5e74\u9f84\u6bb5\uff09\u4e2d\u7684\u89c2\u5bdf\u7ed3\u679c\u4f1a\u6709\u6240\u4e0d\u540c 5. \u6570\u5b57\u5982\u6b64\u4e4b\u5c0f\uff0c\u8fd9\u4e9b\u5dee\u5f02\u53ef\u80fd\u770b\u8d77\u6765\u5fae\u4e0d\u8db3\u9053\u3002\u4f46\u662f\uff0c\u5f53\u4e0d\u4ec5\u8de8\u4eba\u7fa4\u800c\u4e14\u8de8\u65f6\u95f4\u6309\u6bd4\u4f8b\u6269\u5927\u65f6\uff0c\u5728\u9009\u62e9\u8981\u627f\u62c5\u7684\u611f\u67d3\u98ce\u9669\u7ea7\u522b\u65f6\u5f71\u54cd\u4eba\u4eec\u51b3\u7b56\u7684\u5f71\u54cd\u53ef\u80fd\u4f1a\u663e\u7740\u6539\u53d8\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u4e9b\u662f\u76ee\u524d\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u6bcf\u5929\u90fd\u5728\u72af\u7684\u53ef\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\u5f88\u96be\u60f3\u8c61\u5728\u6b64\u4e4b\u540e\uff0c\u67d0\u4eba\u8fd8\u80fd\u72af\u4e0b\u591a\u5c11\u9519\u8bef\uff0c\u4f46\u4ecd\u80fd\u4fdd\u6301\u5176\u53ef\u4fe1\u5ea6\u3002\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\uff0c\u5982\u679c\u6211\u6210\u529f\u5730\u6d88\u9664\u4e86\u6df7\u4e71\uff0c\u90a3\u4e9b\u4f20\u64ad\u9519\u8bef\u4fe1\u606f\u7684\u4eba\u5c06\u76f4\u63a5\u8f6c\u5411\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u7684\u707e\u96be\u6027\u9519\u8bef\u3002\n\u5f53\u60a8\u5b9e\u9645\u67e5\u770b\u6309\u5e74\u9f84\u7ec4\u5212\u5206\u7684\u611f\u67d3\u8005\u548c\u6b7b\u4ea1\u4eba\u6570\u65f6\uff0c\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u989d\u5916\u4fdd\u62a4\u7684\u60f3\u6cd5\u5c31\u6d88\u5931\u4e86\u3002\u5f53\u4f60\u6700\u7ec8\u8ba1\u7b97\u4e8b\u60c5\u5e76\u5212\u5206\u91cd\u8981\u7684\u4e8b\u60c5\u65f6\uff0c\u4f8b\u5982\u6bcf\u7ec4\u4e2d\u6709\u591a\u5c11\u611f\u67d3\u8005\u7ee7\u7eed\u6b7b\u4ea1\uff0c90\uff05\u7684\u6570\u5b57\u6ca1\u6709\u5269\u4f59\u3002\u5728\u4e0a\u56fe 6 \u4e2d\uff0c\u6ca1\u6709\u53ef\u7528\u4fe1\u606f\u8868\u660e\u63a5\u79cd\u7ec4\u4e0e\u672a\u63a5\u79cd\u7ec4\u76f8\u6bd4\uff0c\u6bcf\u6b21\u611f\u67d3\u7684\u6b7b\u4ea1\u7387\u6709\u4efb\u4f55\u4e0d\u540c\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u8bbf\u95ee\u6bcf\u4e2a\u7ec4\u4e2d\u7684\u611f\u67d3\u4eba\u6570\u548c\u6b7b\u4ea1\u4eba\u6570\u6765\u4e86\u89e3\u539f\u56e0\u3002\u672a\u63a5\u79cd\u75ab\u82d7\u7684 84611 \u4f8b\u4e2d\u6709 36 \u4f8b\uff0c\u800c\u63a5\u79cd\u7ec4\u7684 1066 \u4f8b\u4e2d\u6709 0 \u4f8b\u3002 84611 \u4e2d\u7684 36 \u4eba\u5927\u7ea6\u662f 2350 \u4eba\u4e2d\u7684 1 \u4eba\uff0c\u4f46\u6211\u4eec\u63a5\u79cd\u75ab\u82d7\u7684\u7ec4\u4e2d\u53ea\u6709 1066 \u4eba\u88ab\u611f\u67d3\u3002\u6ca1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u8868\u660e\u6bcf\u6b21\u611f\u67d3\u7684\u6b7b\u4ea1\u7387\u662f\u66f4\u9ad8\u8fd8\u662f\u66f4\u4f4e\uff0c\u4e0a\u56fe\u663e\u793a\u4e86\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u3002\u8fd9\u4e0e\u7597\u6548\u6570\u5b57 100% \u6240\u4f20\u8fbe\u7684\u76f8\u5bf9\u4e0d\u673d\u76f8\u53bb\u751a\u8fdc\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u63a5\u79cd\u7ec4\u4e2d\u6709 24 \u4eba\u6b7b\u4ea1\uff0c\u5219\u62a5\u544a\u7684\u6548\u529b\u5c06\u662f 3%\uff01\u56e0\u4e3a\u5b83\u5173\u6ce8\u7684\u662f\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u6b7b\u4ea1\u7387\uff0c\u6240\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c24 \u4f8b\u6b7b\u4ea1\u7684\u6b7b\u4ea1\u7387\u4e0e\u672a\u63a5\u79cd\u75ab\u82d7\u7ec4\u7684 36 \u4f8b\u76f8\u4f3c\u3002\u4f46\u5f88\u660e\u663e\uff0c\u5728\u611f\u67d3\u8005\u4e2d\uff0c84611 \u4e2d\u7684 36 \u4f8b\u6b7b\u4ea1\u7387\u8fdc\u4f4e\u4e8e 1066 \u4e2d\u7684 24 \u4f8b\uff01 16-44 \u5c81\u611f\u67d3\u8005\u7684\u6b7b\u4ea1\u7387\u9700\u8981\u9ad8\u51fa\u8fd1 53 \u500d\u624d\u80fd\u62a5\u544a\u75ab\u82d7\u5728\u9884\u9632\u6b7b\u4ea1\u65b9\u9762\u7684\u6709\u6548\u7387\u4e3a 3%\u3002\u5bf9\u4e8e 45-64 \u5c81\u7684\u4eba\u7fa4\uff0c\u518d\u6b21\u6ca1\u6709\u8db3\u591f\u7684\u8bc1\u636e\u5f97\u51fa\u611f\u67d3/\u75c5\u6b7b\u7387\u6709\u4efb\u4f55\u4e0d\u540c\u7684\u7ed3\u8bba\uff0c\u4f46\u6b63\u5982\u84dd\u70b9\u6240\u793a\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u503e\u5411\u4e8e\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6b7b\u4ea1\u7387\u66f4\u9ad8\u3002\u4e0d\u8fc7\uff0c\u4e00\u7ebf\u5e0c\u671b\u662f\u5728 65 \u5c81\u53ca\u4ee5\u4e0a\u7684\u4eba\u7fa4\u4e2d\uff0c\u8bd5\u9a8c\u4e2d\u89c2\u5bdf\u5230\u7684\u6b7b\u4ea1\u7387\u8ba9\u6211\u4eec\u6709\u5145\u5206\u7684\u7406\u7531\u76f8\u4fe1\u75ab\u82d7\u53ef\u80fd\u4f1a\u964d\u4f4e\u8fd9\u4e00\u7fa4\u4f53\u7684\u6b7b\u4ea1\u7387\u3002\u56e0\u4e3a\u4ed6\u4eec\u4e00\u76f4\u662f\u6700\u8106\u5f31\u7684\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u5e0c\u671b\u7684\u7ed3\u679c\u3002\n\u5982\u679c\u60a8\u6ce8\u610f\u5230\u8bb8\u591a\u4eba\u5728\u63a5\u79cd\u75ab\u82d7\u540e\u6b7b\u4ea1\uff0c\u5e76\u63a8\u65ad\u75ab\u82d7\u4e00\u5b9a\u662f\u5bfc\u81f4\u6b7b\u4ea1\u7684\u539f\u56e0\uff0c\u90a3\u4e48\u60a8\u5c31\u4f1a\u72af\u4e0b\u6240\u8c13\u7684\u201c\u4e8b\u540e ergo propter hoc\u201d\u8c2c\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u8db3\u591f\u7b80\u5355\u7684\u8c2c\u8bba\u6765\u89e3\u91ca\u3002\u4ec5\u4ec5\u56e0\u4e3a B \u53d1\u751f\u5728 A \u4e4b\u540e\u5e76\u4e0d\u610f\u5473\u7740 B \u662f\u7531 A \u5f15\u8d77\u7684\u3002\u56e0\u679c\u5173\u7cfb\u9700\u8981\u66f4\u591a\u7684\u77e5\u8bc6\u6765\u63a8\u65ad\u3002\u5982\u679c\u60a8\u72af\u4e0b\u8fd9\u79cd\u5173\u4e8e\u75ab\u82d7\u63a5\u79cd\u95ee\u9898\u7684\u8c2c\u8bba\uff0c\u652f\u6301\u5927\u89c4\u6a21\u75ab\u82d7\u63a5\u79cd\u7684\u5021\u5bfc\u8005\u5f88\u5feb\u5c31\u4f1a\u544a\u8bc9\u60a8\u8fd9\u79cd\u63a8\u7406\u4e0a\u7684\u7f3a\u9677\u3002\u7136\u800c\uff0c\u5728\u6ca1\u6709\u4efb\u4f55\u5185\u90e8\u538b\u529b\u68c0\u67e5\u63a8\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u5927\u89c4\u6a21\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u7fa4\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\u3002\u6211\u4eec\u6709\u5145\u5206\u7684\u7406\u7531\u65ad\u8a00\u611f\u67d3\u7387\u4e0b\u964d\u548c\u75ab\u82d7\u63a5\u79cd\u4e4b\u95f4\u5b58\u5728\u56e0\u679c\u5173\u7cfb\u3002 mRNA\u75ab\u82d7\u88ab\u8bbe\u8ba1\u6210\u5177\u6709\u76f8\u4e92\u4f5c\u7528\u7684\u56e0\u679c\u673a\u5236\u3002\u89c2\u5bdf\u56e0\u679c\u673a\u5236\u5728\u5b8f\u89c2\u5c42\u9762\uff08\u8f83\u5c11\u611f\u67d3\uff09\u7684\u9884\u671f\u5f71\u54cd\u662f\u5408\u7406\u7684\uff0c\u53ef\u4ee5\u5c06\u5176\u5f52\u56e0\u4e8e\u5fae\u89c2\u5c42\u9762\u7684\u5de5\u7a0b\u5316\u673a\u5236\u3002\u6211\u4eec\u6ca1\u6709\u7406\u7531\u65ad\u8a00\u9884\u9632\u611f\u67d3\u4e0b\u6e38\u7684\u56e0\u679c\u5173\u7cfb\u3002\u652f\u6301\u75ab\u82d7\u63a5\u79cd\u7684\u4eba\u7fa4\u5229\u7528\u4ed6\u4eec\u5bf9\u5982\u4f55\u5f97\u51fa\u529f\u6548\u6570\u5b57\u7684\u9519\u8bef\u7406\u89e3\uff0c\u5e76\u4e0e\u4ed6\u4eec\u8fdb\u884c\u4e86\u4e8b\u540e\u7684 ergo propter hoc \u4e89\u8bba\u3002\u5373\u4f7f\u6570\u636e\u6ca1\u6709\u663e\u793a\u4efb\u4f55\u5dee\u5f02\uff0c\u5bf9\u529f\u6548\u6570\u5b57\u7684\u8bef\u8bfb\u548c\u8bef\u89e3\u4e5f\u4f1a\u81ea\u52a8\u4e0e\u4e8b\u540e ergo propter hoc \u63a8\u7406\u3001\u590d\u5408\u9519\u8bef\u76f8\u7ed3\u5408\u3002\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u4efb\u4f55\u4e00\u5929\uff0c\u4f60\u90fd\u53ef\u4ee5\u627e\u5230\u63a5\u79cd\u8fc7\u75ab\u82d7\u7684\u4eba\u8bf4\u4ed6\u4eec\u611f\u67d3\u4e86 COVID\uff0c\u4ed6\u4eec\u53ea\u77e5\u9053\u5982\u679c\u6ca1\u6709\u75ab\u82d7\uff0c\u4ed6\u4eec\u7684\u60c5\u51b5\u4f1a\u66f4\u7cdf\u3002\u8fd9\u4e9b\u516c\u544a\u5f97\u5230\u5e7f\u6cdb\u5206\u4eab\u3002\u4eba\u4eec\u907f\u514d\u4e86\u4e00\u4e9b\u6700\u4e25\u91cd\u7684\u75c7\u72b6\u771f\u662f\u592a\u597d\u4e86\uff0c\u4f46\u6570\u636e\u5e76\u4e0d\u652f\u6301\u8fd9\u79cd\u89c2\u5bdf\u7ed3\u679c\uff0c\u5373\u75ab\u82d7\u4e3a\u5927\u591a\u6570\u4eba\u63d0\u4f9b\u4e86\u663e\u7740\u7684\u4e0b\u6e38\u76ca\u5904\u3002\u8fd9\u79cd\u9519\u8bef\u89c2\u5ff5\u7684\u91cd\u590d\uff0c\u5373\u9664\u4e86\u964d\u4f4e\u611f\u67d3\u7387\u4e4b\u5916\u8fd8\u6709\u60ca\u4eba\u800c\u663e\u7740\u7684\u989d\u5916\u597d\u5904\uff0c\u5c06\u5bfc\u81f4\u4eba\u4eec\u627f\u62c5\u66f4\u591a\u7684\u98ce\u9669\u3002\n\u9519\u8bef\u5730\u5047\u8bbe\u201c\u63a5\u79cd\u75ab\u82d7\u540e\uff0c\u5373\u4f7f\u6211\u88ab\u611f\u67d3\uff0c\u6211\u4e5f\u6bd4\u6ca1\u6709\u63a5\u79cd\u75ab\u82d7\u65f6\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u66f4\u5c0f\u201d\u7684\u4eba\u5c06\u66f4\u6709\u53ef\u80fd\u4ece\u4e8b\u6709\u611f\u67d3\u98ce\u9669\u7684\u884c\u4e3a\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6210\u4e3a\u63a5\u79cd\u75ab\u82d7\u8005\u7684\u201c\u6d41\u611f\u5144\u5f1f\u201d\u3002\u5982\u679c\u89c2\u5bdf\u5230\u7684\u5206\u5c42\u4fdd\u62a4\u7684\u7f3a\u4e4f\u66f4\u52a0\u660e\u786e\uff0c\u90a3\u4e48\u4eba\u4eec\u53ef\u80fd\u4f1a\u9009\u62e9\u4ecd\u7136\u6234\u53e3\u7f69\u548c\u4fdd\u6301\u793e\u4ea4\u8ddd\u79bb\uff0c\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u9664\u4e86\u63a5\u79cd\u75ab\u82d7\u4e4b\u5916\u7684\u63a5\u89e6\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u9009\u62e9\u53c2\u52a0\u8f83\u5c11\u7684\u793e\u4ea4\u6d3b\u52a8\u3002\u8fd9\u53cd\u8fc7\u6765\u4f1a\u964d\u4f4e\u611f\u67d3\u7387\uff0c\u5e76\u964d\u4f4e\u9003\u907f\u75ab\u82d7\u63a5\u79cd\u7684\u7a81\u53d8\u627e\u5230\u5bbf\u4e3b\u8fdb\u884c\u7ec3\u4e60\u7684\u53ef\u80fd\u6027\u3002 \uff08\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u767d\u5bab\u6539\u53d8\u4e86\u5bf9\u63a5\u79cd\u75ab\u82d7\u7684\u5c4f\u853d\u5efa\u8bae\uff09\u90a3\u4e9b\u575a\u4fe1\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u53ef\u80fd\u4ecd\u7136\u9009\u62e9\u5ba3\u4f20\u529f\u6548\u6570\u5b57\u4f5c\u4e3a\u989d\u5916\u7684\u4fdd\u62a4\u5c42\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u9f13\u52b1\u4eba\u4eec\u63a5\u79cd\u75ab\u82d7\u3002\u5728\u5e7f\u544a\u4e2d\u8bef\u5bfc\u6027\u5730\u4f7f\u7528\u6570\u5b57\u662f\u4e00\u4e2a\u53e4\u8001\u7684\u6545\u4e8b\u3002\u4f46\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u4ee3\u4ef7\u662f\u4ed6\u4eec\u7684\u8bda\u5b9e\u548c\u6b63\u76f4\uff0c\u5e76\u727a\u7272\u4e86\u75ab\u82d7\u63a5\u79cd\u6240\u5e26\u6765\u7684\u4e00\u4e9b\u5b9e\u9645\u597d\u5904\uff0c\u4e3a\u4eba\u4eec\u63d0\u4f9b\u4e86\u9519\u8bef\u7684\u4fe1\u606f\u4f5c\u4e3a\u4ed6\u4eec\u9009\u62e9\u7684\u4f9d\u636e\u3002\u90a3\u4e9b\u559c\u6b22\u8bf4\u201c\u6570\u5b57\u4e0d\u8a00\u81ea\u660e\u201d\u7684\u4eba\u6700\u4e0d\u53ef\u80fd\u7406\u89e3\u6570\u5b57\u5728\u8bf4\u4ec0\u4e48\u3002\u8fdb\u884c\u6d41\u884c\u75c5\u5b66\u8bc4\u4f30\u7684\u7814\u7a76\u62a5\u544a\u7ed9\u7684\u53d7\u4f17\u4e0e\u6240\u62a5\u544a\u7684\u6570\u5b57\u4e0d\u540c\u3002\u5c31\u67d0\u4e9b\u7814\u7a76\u800c\u8a00\uff0c\u8fd9\u4e9b\u503c\u662f\u6709\u6761\u4ef6\u8ba1\u7b97\u7684\uff0c\u5b83\u4eec\u4e0e\u65e0\u6761\u4ef6\u8ba1\u7b97\u7684\u503c\u4e0d\u517c\u5bb9\u3002\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u592a\u53ef\u80fd\u5305\u542b\u5728\u8fd9\u4e9b\u6570\u5b57\u7684\u4f20\u64ad\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u7ecf\u5e38\u88ab\u4e92\u6362\u4f7f\u7528\u3002\u8003\u8651\u5230\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u6570\uff0c\u4e00\u5bb6\u8bd5\u56fe\u89c4\u5212\u8d44\u6e90\u548c\u4eba\u5458\u914d\u7f6e\u7684\u533b\u9662\u5173\u5fc3\u4f30\u8ba1\u7684\u6bcf\u65e5\u4f4f\u9662\u7387\u548c\u6b7b\u4ea1\u7387\u3002\u51b3\u7b56\u8005\u5728\u9009\u62e9\u6297\u51fb\u51a0\u72b6\u75c5\u6bd2\u7684\u9009\u9879\u4e2d\u505a\u51fa\u51b3\u5b9a\uff0c\u5173\u5fc3\u91c7\u7528\u653f\u7b56\u540e\u5404\u79cd\u6307\u6807\u7684\u6bcf\u65e5\u8d39\u7387\u662f\u591a\u5c11\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e2a\u4eba\u5e76\u4e0d\u5173\u5fc3\u4eba\u53e3\u4e2d\u7684\u6bcf\u65e5\u8d39\u7387\u3002\u4ed6\u4eec\u5173\u5fc3\u81ea\u5df1\u6216\u4eb2\u4eba\u7684\u80dc\u7b97\u3002\u5982\u679c\u6240\u6709\u4eba\u7684\u6bcf\u65e5\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u7387\u90fd\u5f88\u4f4e\uff0c\u5982\u679c\u4ed6\u4eec\u81ea\u5df1\u5904\u4e8e\u663e\u7740\u66f4\u9ad8\u7684\u98ce\u9669\u4e2d\uff0c\u90a3\u4e48\u5bf9\u4e2a\u4eba\u6765\u8bf4\u5e76\u4e0d\u91cd\u8981\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6ca1\u6709\u5176\u4ed6\u53ef\u4ee5\u6307\u5bfc\u4e2a\u4eba\u98ce\u9669\u8bc4\u4f30\u7684\u63aa\u65bd\uff0c\u5982\u679c\u63a5\u79cd\u75ab\u82d7\u4e0e\u672a\u63a5\u79cd\u75ab\u82d7\u76f8\u6bd4\u7684\u6bcf\u65e5\u611f\u67d3\u7387\u62a5\u544a\u786e\u5b9e\u4e3a\u67d0\u4eba\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u8861\u91cf\u6807\u51c6\uff0c\u5373\u9009\u62e9\u63a5\u79cd\u75ab\u82d7\u3002\n\u4f46\u662f\u4e00\u65e6\u4e00\u4e2a\u4eba\u63a5\u79cd\u4e86\u75ab\u82d7\uff0c\u6bcf\u5929\u7684\u4f4f\u9662\u7387......", "note_en": "Accurate description of effects is not hair-splitting; it is much-needed exactness to avoid adding confusion to an extraordinarily complicated and tense scientific and societal debate around COVID-19 vaccines.\n It does not mean that 95% of people are protected from disease with the vaccine\u2014a general misconception of vaccine protection also found in a\u00a0 Lancet Infectious Diseases\u00a0Editorial.\n This  appeared in correspondence in a March 8th publication through The Lancet, a leading peer reviewed medical journal. It emphasizes that even within the scientific communities focused on such issues, misunderstandings about the meaning and implications of reported numbers about vaccine efficacy persist. If the scientific community makes a mistake in its own interpretations, that can misinform policy makers, even very educated ones, and that in turn can misinform the public.\n In the last few weeks I have seen evidence of articles more widely shared to correct some of the early misconceptions The Lancet correspondence was concerned about. However a more insidious form of misunderstanding and misinformation lingers, and is pervasive.\n  Tom is no ordinary doctor. He is the  former Director of the Center for Disease Control under President Barack Obama. He is also propagating dangerous misinformation about the COVID-19 vaccines. It will cause people to misunderstand the real world results which can cause more people to die, and exacerbate the pandemic.\n Dr. Tom is wrong. About as wrong you can get. The real world data has shown that the death rate among the  vaccinated, if infected with COVID, can be  3 to 5.7 times higher 1 than the death rate of the  unvaccinated.\n    The former Director of the CDC is making what I call an Acceptable Catastrophic Error. This is the kind of error one is allowed to make when they are perceived to have the correct opinion. Arguments and statistics used towards the goal of getting every single person vaccinated for COVID are given far less scrutiny and are accepted as true more readily, than any arguments or statistics that might be perceived as counterproductive towards that goal.\n When the former Director of the CDC, or anyone else for that matter, says someone who is infected with COVID is 100 times less likely to die if they have been vaccinated, it does not matter how far off that number is. It will be readily forgiven no matter how inaccurate. It is the goal of universal vaccination, not truth, that appears to be most important.\n   In order to understand why people are claiming these marvelous additional benefits exist, we will unfortunately have to do some math. But once we do, confusion will be alleviated, and the dangerous misinformation being spread by those in authority and those on a mission to convince everyone to get vaccinated, will become clear.\n To understand vaccine efficacy, a diagram provided in the results of a Pfizer\u2013BioNTech mRNA BNT162b2  clinical trial will be very useful.\n  The red line with circles shows that for those who received the vaccine, which was 21,669 people, the rate of infection slowed. The average number of days between individual infections increased. The result is that over a period of time, the total number of people who became infected was indeed far lower than the unvaccinated group.\n This is where the earlier statement from from The Lancet \u201cwho would have become diseased with COVID-19 had they not been vaccinated\u201d comes into play. It is reasonably assumed that the red line would resemble the blue line if the group were unvaccinated. Therefore one could count the number of squares on the blue line that occur in between instances of red circles, and get a ratio of how many unvaccinated people got infected per each vaccinated person over a period of time.\n  The efficacy rating (VE in the table) is a way of trying to do this. However one additional layer of complexity is added. Researchers treat the people in study without much distinction. Every day that a person is included in the study and observable is considered a person-day. Every person being observed on a given day is counted and added to a tally of person-days. At the end of the study, the observed infections are divided by the total person-days counted for the group.\n For example, if two people are observed across four days, it is a total of eight person-days. Each person has a chance of infection each day, unless they were already infected. It makes a total of eight chances for a person to become infected. However, once infected, someone cannot be infected again, so that person stops being counted in the person-day tally. In this particular case they used a different length of time than day, but the idea is the same.\n At the end of the day, the efficacy calculation is the result of  counting things and dividing things counted. We can take the numbers they counted and divide them ourselves to arrive at the same efficacy numbers. Let\u2019s use the data from  \u2265 7 days after dose 2. We have 21,314 people across 4.015 time units for the vaccinated group, and 21,258 people across 3.982 time units for the unvaccinated. Now we compare the rates of infection, which were 9 and 172 observed infections respectively.\n  Finally, we take the two rates, and compare them, and compute a number that represents the percent score called  efficacy.\n  There is the efficacy number from the table. Subtracting from 1 simply allows you to report a number where higher is better, instead of using \u201cgolf rules\u201d where lower is better. The calculation itself is not misleading if you understand how it is derived. But it is important to hold on to the idea we are currently talking about   infection rates over time  only. It is perfectly reasonable to compare infection rates among two groups in this way.\n This distinction is all the more important as, although we know the risk reduction achieved by these vaccines under trial conditions, we do not know whether and how it could vary if the vaccines were deployed on populations with different exposures, transmission levels, and attack rates. 2\n   Israel offered a glimpse into the real world dynamics of the Pfizer\u2013BioNTech mRNA BNT162b2 vaccine. A major  study, published May 2021 in The Lancet, reviewed national surveillance data, collected as part of a government vaccination initiative. The data collected was able to identify those vaccinated on which dates; when they were diagnosed with COVID; whether they were symptomatic or not; if and when they went to the hospital; if they had severe or critical hospitalization; and if they died.\n The study is quite thorough, although it did contain  errors some of which may not have been fully corrected. But we can jump directly to inspecting the efficacy numbers and correcting errors. We will be using the numbers provided in Table 4 on page 1825.\n  The top white box contains the number of infections observed during the study. We can use  All Ages. The  Unvaccinated and  Vaccinated infections for  All Ages were 109,876 and 3,642 respectively. Just as before, we need the person-days (the total time observed) for both. These are provided at the bottom of the table and for the Unvaccinated and Vaccinated they are 120,076,136 and 170,434,659 respectively.\n   Taking a look at our approximate ratios calculated, you can see that 91.5 in the red square in the table corresponds to our calculated unvaccinated rate, and similarly 2.1 in the blue box corresponds to our calculated vaccinated rate. We would simply need to multiply both by 100,000, as they are  incidence rates per 100,000 person-days, to make them about equal to the table.\n The next step is identical to the Pfizer phase three trial. \u201cVaccine effectiveness estimates were calculated as (1 \u2013 IRR) \u00d7 100\u201d ( Incidence Rate Ratios, IRR)\n  Our calculation appears to be 1.1% higher than that in the table. There are two possible explanations. One explanation may be that when they  corrected some hard values they failed to update the efficacy calculation. The second explanation is that the authors ran the raw data, which we do not have, through a particular statistical package 3 in order to estimate the bounds (numbers in parentheses, giving some wiggle room to the estimate), which gave them a more nuanced estimate for the central incidence rates than the numbers they provide the reader allow \u2014 as our calculated incidence rates are clearly in agreement with the table.\n This isn\u2019t too important, as these are simply estimates the authors are making based on observations. These estimates will change over time and with different populations. They are very useful to have, but should not be treated as if they\u2019re exact.\n They are also not where the major issues arise. One can simply look at the raw numbers without calculating the efficacy number and conclude that indeed, infection rates were substantially lower. The differences that remain in their calculation for efficacy percentage are negligible.\n Next, however, we move to what will ultimately be the source of misinformation. It isn\u2019t the fault of the report itself, but a consequence of too many people who pretend to speak from knowledge and authority interpreting numbers they do not understand.\n   Included in the study are rates of symptomatic COVID, hospitalization, severe hospitalization, and their respective efficacy calculations. At the bottom of the table are efficacy calculations related to   death. We will use the table to make one final efficacy calculation so we can move to discussing this  horrific source of misinformation.\n  We are given 36 deaths among those aged 16-44 in the unvaccinated group and 0 deaths in the vaccinated group. We have 88,938,310 and 61,397,072 person days for unvaccinated and vaccinated respectively from the bottom of the table. This gives us, indeed 100% efficacy!\n  100% Efficacy! That\u2019s 100% protection against death! Those between the ages 16-44  cannot die from COVID! You can see how impossible it is for someone to die if vaccinated, as they do not even provide a range of uncertainty. 100% with no uncertainty is as  certain as you can get.\n  It is obviously possible for vaccinated people 16-44 to die from COVID. The other results from this efficacy from death calculation are  just as flawed, and are being dangerously misused. Let us revisit Dr. Tom, the former CDC director.\n  Hyper-vigilant mass-vaccination advocates have been using the vaccine efficacy \u201cfrom death\u201d numbers in this Israeli study to claim that   if you get COVID you have additional protection because of the vaccine. Some may quote the percentage (\u201cit\u2019s 96% effective at preventing death!\u201d) so as to not be accused of inventing their own numbers. But if you have made it this far, you have performed the efficacy calculation three separate times now.  Counting things and dividing things counted.\n Nowhere, at any time, in any way, did we look at how many people in the vaccinated group  got COVID  and died. We (and the authors of the study) counted the number of deaths among the vaccinated, and divide by the number of  days, not the number of  infections.\n And if we do actually look at and compare deaths among those actually infected we get a completely different story.\n  Every single additional efficacy number is redundant. All reported results downstream from infection are a  consequence of reduced infections 4. The efficacy rates would all be in the high 90s even if the vaccinated group were  perfectly identical except for infection rate.\n When \u201cformer Director of the CDC\u201d Dr. Tom and others use the non-infection efficacy numbers to discuss the vaccines, they are, intentionally or not, misleading the public. It is something that should end immediately.\n With the exception of infection rates, the efficacy numbers convey no useful information to citizens about their risks once they have been vaccinated. Instead, it may cause the vaccinated to place themselves and others at greater risk if they operate on this misinformation.\n The efficacy numbers, other than infection, which are all  downstream effects of infection, are being used and accepted as if they are additional, layered benefits at every stage of COVID infection.\n  This diagram is how they are being communicated and how they are being received by the clear majority of public figures and citizens. If you are vaccinated it is being communicated that the study showed that you are:\n  If the efficacy numbers were layered measures of additional protection then the observations would have been different in the Israeli study (All Ages) 5.\n  With numbers this small, these differences may seem negligible. But when scaled up not just across populations but also across time, the impact of affecting people\u2019s decision making when choosing what level of infection risk to assume, can dramatically alter the situation.\n These are currently  Acceptable Catastrophic Errors being made each and every day by nearly everyone. It is hard to fathom how much more wrong someone could be yet still maintain their credibility after this. But because these are  acceptable catastrophic errors, if I am successful in clearing up confusion, those spreading the misinformation will simply move on to the next acceptable catastrophic error.\n  When you actually take a look at who was infected and who died by age group, the idea of additional protection disappears for most.\n   When you are finally  counting things and dividing things counted which matter, such as how many infected people went on to die in each group, no remnant of the 90% numbers remain. In the graph above 6, there is no information available to suggest the death rate per infection is any different in the vaccinated group compared to the unvaccinated group. You can see why by revisiting the number infected and the number who died in each group.\n 36 of 84611 in the unvaccinated versus 0 in 1066 in the vaccinated group. 36 in 84611 is roughly 1 in 2350, but we only had 1066 infected in the vaccinated group. There is not enough information to claim the death rate per infection is higher or lower, and that uncertainty is indicated in the graph above. That is worlds away from the relative immortality communicated by the efficacy number 100%.\n In fact, if there had been  24 deaths in the vaccinated group the efficacy reported would have been 3%! Because it was looking at rates over time, 24 deaths would have been the death rate over time similar to 36 in the unvaccinated group. But clearly, among those infected, 36 in 84611 is a far lower death rate than 24 in 1066!\n The death rate for the ages 16-44 among infected would need to have been almost  53 times higher to report the vaccine was 3% effective at  preventing death.\n     For ages 45-64, there again isn\u2019t enough evidence to conclude that the infection/case fatality rate is any different, but as the bluish dots indicate, the numbers we have actually lean towards a  higher death rate among the vaccinated.\n The silver lining though is that among those 65 and over, the observed death rate in the trial gives us decent reason to believe that  maybe the vaccine can reduce the death rate for this group. Since they were the most vulnerable all along, this is a promising result.\n  If you were to notice that a number of people died after vaccination, and inferred that the vaccine must have  caused the death, you would be committing what is known as the \u201cpost hoc ergo propter hoc\u201d fallacy.\n This is a simple enough fallacy to explain. Just because B happened after A does not mean B was  caused by A. Causation requires more knowledge to deduce.\n If you were to commit this fallacy communicating concern over vaccination you would be quickly told by pro-mass-vaccination advocates of this flaw in reasoning. However the same error is committed by the pro-mass-vaccination crowd without any internal pressure checking the reasoning.\n We have great reason to assert a causal relationship between decreased infection rates and vaccination. The mRNA vaccines were designed to have a causal mechanism of interaction. Observing the intended effects of the causal mechanism on the macro level (fewer infections) is reasonable to attribute to the engineered mechanism on the micro level.\n We have far less reason to assert causation  downstream from preventing infection. The pro-vaccinate-everyone crowd has used their incorrect understanding of how the efficacy numbers were derived, and made post hoc ergo propter hoc arguments with them. Even when the data does not show  any difference, a misreading and misunderstanding of efficacy numbers is automatically combined with post hoc ergo propter hoc reasoning, compounding errors.\n   On any given day on social media, you can find someone who has been vaccinated saying they contracted COVID, and they just  know that but for the vaccine they would have been in worse shape. These announcement get shared widely. It is wonderful that people have avoided some of the worst symptoms, but the data has not supported the observation that the vaccine offers significant downstream benefits for most people.\n  The repetition of this false idea, that there are amazing and significant additional benefits outside of mere reduced infection rates, will result in people taking increased risks.\n The person who  incorrectly assumes that \u201cwith the vaccine,  even if I get infected I am less likely to die than I would be without the vaccine,\u201d will be more likely to engage in behavior that risks infection. They may become the \u201cit\u2019s just a flu bro\u201d of the vaccinated.\n If the lack of observed layered protection were made more explicit then people may choose to still wear masks and social distance, to further reduce their exposure in addition to vaccination. They may choose to go to fewer social events. This in turn would reduce the infection rate, and reduce the probability a mutation that evades vaccination finds a host to practice on. (While writing this article, the White House  changed its masking recommendation for the vaccinated)\n Those who strongly believe everyone should get vaccinated may still choose to promote the efficacy numbers as additional layers of protection, because their goal is to encourage people to get vaccinated. Misleading use of numbers in advertising is a tale as old as time. But they are doing so at the cost of both their honesty and integrity, and sacrificing some of the actual benefits that vaccination provides, by giving people incorrect information to base their choices on.\n  Those who like to say \u201cthe numbers speak for themselves\u201d are the least likely to understand what the numbers are saying. The studies that make epidemiological assessments are reporting to a different audience than the numbers reported are being presented to. To the extent that some studies may exist where these values are calculated conditionally, they are incompatible with the ones that have been computed unconditionally. This information is unlikely to be contained in the spreading of these numbers, as they are more often going to be used interchangeably.\n  A hospital trying to plan resources and staffing cares about the estimated daily hospitalization and death rate given how many people are vaccinated. A policy maker deciding among options to fight coronavirus, cares what the daily rates are for various metrics after a policy is adopted.\n An individual, for the most part, does not care about the daily rate in the population. They care what their  own odds, or those of their loved ones, are.\n It does not matter to an individual if the daily observed rate of infection is low across all people, if they  themselves are at significantly higher risk. However, absent other measures that can guide an individual risk assessment, a report of daily infection rates if vaccinated compared to unvaccinated does give someone a useful measure at the level of making the choice to get vaccinated.\n But once an individual becomes vaccinated, the daily rate of hospit\n......", "posttime": "2021-08-07 22:58:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c0e\u8a00,lies,\u75ab\u82d7", "title": "\u8c0e\u8a00\u3001\u8be5\u6b7b\u7684\u8c0e\u8a00\u548c\u75ab\u82d7\u7edf\u8ba1", "title_en": "Lies, Damned Lies, and Vaccine Statistics", "transed": 1, "url": "https://drrollergator.substack.com/p/damned-lies-and-vaccine-statistics", "via": "", "real_tags": ["\u8c0e\u8a00", "lies", "\u75ab\u82d7"]}, {"category": "", "categoryclass": "", "imagename": "9e25a8d5717066bce79a68b5ba3989c3.jpeg", "infoid": 1071982, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u62c9\u4f2f\u8054\u5408\u914b\u957f\u56fd\u8fea\u62dc\uff08\u7f8e\u8054\u793e\uff09\u2014\u2014\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5468\u56db\u8868\u793a\uff0c\u5b83\u505c\u98de\u4e86 13 \u67b6\u7a7a\u4e2d\u5ba2\u8f66 A350\uff0c\u539f\u56e0\u662f\u8fd9\u67b6\u8fdc\u7a0b\u98de\u673a\u7684\u673a\u8eab\u201c\u52a0\u901f\u9000\u5316\u201d\uff0c\u8fdb\u4e00\u6b65\u5347\u7ea7\u4e86\u4e0e\u8fd9\u5bb6\u6b27\u6d32\u98de\u673a\u5236\u9020\u5546\u957f\u8fbe\u6570\u6708\u7684\u4e89\u7aef\u3002\u95ee\u9898\u3002\u867d\u7136\u7a7a\u4e2d\u5ba2\u8f66\u516c\u53f8\u62d2\u7edd\u5177\u4f53\u8ba8\u8bba\u8fd9\u4e00\u516c\u544a\uff0c\u4f46\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5c06\u98de\u673a\u505c\u98de\u7684\u51b3\u5b9a\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9 A350 \u7684\u78b3\u590d\u5408\u6750\u6599\u673a\u8eab\u7684\u8d28\u7591\uff0c\u8be5\u673a\u8eab\u65e8\u5728\u901a\u8fc7\u51cf\u5c11\u55b7\u6c14\u71c3\u6599\u7684\u71c3\u70e7\u4f7f\u53cc\u901a\u9053\u98de\u673a\u66f4\u8f7b\u3001\u66f4\u4fbf\u5b9c\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u4e5f\u662f\u4e16\u754c\u9876\u7ea7\u98de\u673a\u8fd0\u8425\u5546\u4e4b\u4e00\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5728\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u5b83\u4e00\u76f4\u5728\u76d1\u6d4b\u98de\u673a\u673a\u8eab\u6cb9\u6f06\u4e0b\u65b9\u7684\u964d\u89e3\u60c5\u51b5\u3002\u5b83\u5c06\u8fd9\u4e2a\u95ee\u9898\u63cf\u8ff0\u4e3a\u201c\u91cd\u8981\u6761\u4ef6\u201d\uff0c\u4f46\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u8868\u793a\uff1a\u201c\u6839\u636e\u76d1\u7ba1\u673a\u6784\u7684\u660e\u786e\u4e66\u9762\u6307\u793a\uff0c\u76ee\u524d\u5df2\u6709 13 \u67b6\u98de\u673a\u505c\u98de\uff0c\u6709\u6548\u5730\u5c06\u5176\u505c\u98de\uff0c\u76f4\u5230\u786e\u5b9a\u6839\u672c\u539f\u56e0\u5e76\u63d0\u4f9b\u4ee4\u4eba\u6ee1\u610f\u7684\u89e3\u51b3\u65b9\u6848\u4ee5\u6c38\u4e45\u7ea0\u6b63\u6f5c\u5728\u72b6\u51b5\u3002\u201d\u5b83\u7684\u58f0\u660e\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u62e5\u6709 53 \u67b6\u7a7a\u5ba2 A350 \u673a\u961f\uff0c\u5305\u62ec 1000 \u548c 900 \u7cfb\u5217\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u4e0e\u603b\u90e8\u4f4d\u4e8e\u6cd5\u56fd\u56fe\u5362\u5179\u7684\u98de\u673a\u5236\u9020\u5546\u7b7e\u8ba2\u4e86\u53e6\u4e00\u67b6\u8ba2\u5355\uff0c\u5176\u603b\u8ba2\u5355\u91cf\u4e3a 76 \u67b6\uff0c\u662f\u5168\u7403\u6240\u6709\u822a\u7a7a\u516c\u53f8\u4e2d\u6700\u591a\u7684\u3002\u4eca\u5e74 6 \u6708\uff0c\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u8868\u793a\uff0c\u9664\u975e\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u5426\u5219\u4e0d\u4f1a\u518d\u4f7f\u7528 A350\u3002 \u201c\u4f5c\u4e3a\u9886\u5148\u7684\u98de\u673a\u5236\u9020\u5546\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4e0e\u5ba2\u6237\u8fdb\u884c\u8c08\u5224/\u5408\u4f5c\uff0c\u201d\u4e00\u4efd\u58f0\u660e\u8bf4\u3002 \u201c\u8fd9\u4e9b\u8c08\u8bdd\u6211\u4eec\u4fdd\u5bc6\u3002\u6211\u4eec\u5bf9\u5ba2\u6237\u7684\u8fd0\u8425\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684\u8bc4\u8bba\u3002\u201c\u76ee\u524d\uff0c\u65b0\u52a0\u5761\u822a\u7a7a\u516c\u53f8\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684 A350 \u8fd0\u8425\u5546\uff0c\u5176\u673a\u961f\u4e2d\u6709 56 \u67b6\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u6ca1\u6709\u56de\u5e94\u8bc4\u8bba\u8bf7\u6c42\u3002\u5728\u7f8e\u56fd\uff0c\u8fbe\u7f8e\u822a\u7a7a\u516c\u53f8\u7684\u673a\u961f\u4e2d\u6709 15 \u67b6\u98de\u673a\u3002\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u4e9a\u7279\u5170\u5927\u7684\u822a\u7a7a\u516c\u53f8\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\nA350 \u7684\u6807\u4ef7\u9ad8\u8fbe 3.665 \u4ebf\u7f8e\u5143\uff0c\u4f46\u4e70\u5bb6\u7ecf\u5e38\u5728\u6279\u91cf\u4ea4\u6613\u4e2d\u83b7\u5f97\u6298\u6263\u3002\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98 Akbar al-Baker \u4ee5\u5176\u5728\u4e0e\u5236\u9020\u5546\u548c\u5176\u4ed6\u4eba\u8c08\u5224\u65f6\u7684\u5f3a\u786c\u548c\u5bf9\u6297\u65b9\u5f0f\u800c\u95fb\u540d\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u5c06\u6210\u4e3a\u5728\u8fd9\u4e2a\u963f\u62c9\u4f2f\u534a\u5c9b\u56fd\u5bb6\u53c2\u52a0\u5373\u5c06\u4e3e\u884c\u7684 2022 \u5e74 FIFA \u4e16\u754c\u676f\u7684\u7403\u8ff7\u7684\u91cd\u8981\u627f\u8fd0\u4eba\u3002\u5982\u679c\u60a8\u901a\u8fc7\u672c\u6587\u4e2d\u7684\u63a8\u8350\u94fe\u63a5\u8d2d\u4e70\u5546\u54c1\uff0cMicrosoft \u548c\u5408\u4f5c\u4f19\u4f34\u53ef\u80fd\u4f1a\u83b7\u5f97\u8865\u507f\u3002\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00 \u6253\u5f00\u5916\u90e8\u7ad9\u70b9 \u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u5916\u90e8\u7ad9\u70b9", "note_en": "DUBAI, United Arab Emirates (AP) \u2014 Qatar Airways said Thursday it grounded 13 Airbus A350s over what it described as fuselages \u201cdegrading at an accelerated rate\u201d in the long-range aircraft, further escalating a monthslong dispute with the European airplane maker over the issue.\n       While Airbus declined to specifically discuss the announcement, Qatar Airways&#39; decision to ground the aircraft raised questions about the A350s&#39; carbon composite fuselage, designed to make the twin-aisle aircraft lighter and cheaper to operate by burning less jet fuel. Qatar Airways also is one of the world&#39;s top operators of the aircraft.\n    In its statement, Qatar Airways said it had been monitoring the degradation beneath the paint on the fuselage of the aircraft for some time. It described the issue as a \u201csignificant condition,\u201d without elaborating.\n \u201cFollowing the explicit written instruction of its regulator, 13 aircraft have now been grounded, effectively removing them from service until such time as the root cause can be established and a satisfactory solution made available to permanently correct the underlying condition,\u201d the airline said in its statement.\n Qatar Airways has a fleet of 53 Airbus A350s in both its 1000 and 900 series. The airline has another on order with the Toulouse, France-based airplane manufacturer, making its total order of 76 aircraft \u2014 the most of any airline worldwide. In June, Qatar Airways said it wouldn&#39;t take any more A350s unless the problem was fixed.\n  \u201cAs a leading aircraft manufacturer we are always in talks / working with our customers,\u201d a statement said. &#34;Those talks we keep confidential. We have no further comment on our customer\u2019s operations.\u201c\n Currently, Singapore Airlines is the world&#39;s top operator of the A350, with 56 now in its fleet. The airline did not respond to a request for comment. In America, Delta Air Lines has 15 in its fleet. The Atlanta-based carrier did not immediately respond to a request for comment.\n The A350 has a list price as much as $366.5 million, though buyers often get discounts in bulk deals.\n Qatar Airways CEO, Akbar al-Baker, is known for his hard-changing, confrontational approach in negotiating with manufacturers and others.\n The airline will be the crucial carrier for fans attending the upcoming FIFA 2022 World Cup in this Arabian Peninsula country.\n  Microsoft and partners may be compensated if you purchase something through recommended links in this article.\n                Opens in a new window  Opens an external site  Opens an external site in a new window", "posttime": "2021-08-07 22:57:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "a350,airways,\u822a\u7a7a\u516c\u53f8", "title": "\u5361\u5854\u5c14\u822a\u7a7a\u516c\u53f8\u5c06 13 \u67b6\u7a7a\u5ba2 A350 \u505c\u98de\u4e3a\u673a\u8eab\u964d\u7ea7", "title_en": "Qatar Airways grounds 13 Airbus A350s as fuselage degrading", "transed": 1, "url": "https://www.msn.com/en-us/money/news/qatar-airways-grounds-13-airbus-a350s-as-fuselage-degrading/ar-AAMYDOB", "via": "", "real_tags": ["a350", "airways", "\u822a\u7a7a\u516c\u53f8"]}]
[{"category": "", "categoryclass": "", "imagename": "0c2fbf87370d23dc85c938be3bd612b7.jpg", "infoid": 1009998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7269\u7406\u5b66\u5bb6\u5b89\u5409\u6d1b\u00b7\u5df4\u897f(Angelo Bassi)\u8bf4\uff1a\u201c\u8ba9\u6211\u5403\u60ca\u7684\u662f\uff0c\u91cf\u5b50\u529b\u5b66\u53ea\u6709100\u5e74\u7684\u5386\u53f2\u3002\u201d\u5728\u8428\u683c\u52d2\u5e03\u4e00\u4e2a\u5355\u8c03\u7684\u82cf\u8054\u65f6\u4ee3\u6821\u56ed\u91cc\uff0c\u6211\u4eec\u9694\u7740\u4e00\u5f20\u91ce\u9910\u684c\u4ea4\u8c08\uff0c\u521d\u79cb\u7684\u5fae\u98ce\u5439\u8fc7\u9644\u8fd1\u4e00\u4e9b\u6811\u6728\u6cdb\u9ec4\u7684\u6811\u53f6\u3002\u201c\u8fd9\u53ea\u662f\u4e2a\u5a74\u513f\uff0c\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684--\u5728\u79d1\u5b66\u53f2\u4e0a\u6709100\u5e74\u7684\u5386\u53f2\u4e86\u3002\u4f60\u600e\u4e48\u80fd\u5c31\u8fd9\u4e48\u505c\u4e0b\u6765\u5462\uff1f\u4f60\u600e\u4e48\u770b\u90fd\u8bf4\u4e0d\u901a\u3002\u201c\u3002\u6211\u4eec\u5750\u5728\u4e00\u5ea7\u9508\u8ff9\u6591\u6591\u7684\u7c73\u8272\u5efa\u7b51\u7684\u9634\u5f71\u4e0b\uff0c\u5728\u90a3\u91cc\uff0c\u5df4\u897f\u5373\u5c06\u5728\u4e00\u4e2a\u4e13\u95e8\u7814\u7a76\u8fd9\u4e00\u767e\u5e74\u8bfe\u9898\u7684\u7269\u7406\u5b66\u5bb6\u7684\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u6f14\u8bb2\u3002\n\u5c3d\u7ba1\u8fd9\u4e00\u7406\u8bba\u5df2\u7ecf\u5e74\u4e8b\u5df2\u9ad8\uff0c\u4f46\u5373\u4f7f\u662f\u53d7\u8fc7\u5927\u5b66\u6559\u80b2\u7684\u6210\u5e74\u4eba\u4e5f\u5f80\u5f80\u5bf9\u91cf\u5b50\u529b\u5b66\u7684\u5185\u5bb9\u77e5\u4e4b\u751a\u5c11\u3002\u8fd9\u662f\u6709\u5145\u5206\u7406\u7531\u7684\u3002\u5c3d\u7ba1\u7269\u7406\u5b66\u5bb6\u7528\u5b83\u6765\u9884\u6d4b\u57fa\u672c\u7c92\u5b50\u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u7ec4\u6210\u539f\u5b50\u7684\u7535\u5b50\u548c\u7ec4\u6210\u5149\u7684\u5149\u5b50\uff0c\u5c3d\u7ba1\u5b83\u662f20\u4e16\u7eaa\u7684\u8bb8\u591a\u6807\u5fd7\u6027\u6280\u672f(\u5305\u62ec\u6838\u80fd\u3001\u6fc0\u5149\u548c\u8ba1\u7b97\u673a)\u7684\u57fa\u7840\uff0c\u4f46\u4ece20\u4e16\u7eaa20\u5e74\u4ee3\u5f00\u59cb\uff0c\u8fd9\u4e2a\u7406\u8bba\u751a\u81f3\u8ba9\u884c\u5bb6\u4eec\u90fd\u611f\u5230\u56f0\u60d1\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u867d\u7136\u5b83\u5728\u505a\u51fa\u9884\u6d4b\u65b9\u9762\u5f88\u58ee\u89c2\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u63cf\u8ff0\u81ea\u7136\u754c\u5e55\u540e\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7ed3\u679c\u3002\u627f\u8ba4\u79d1\u5b66\u53ef\u80fd\u6c38\u8fdc\u4e0d\u80fd\u89e3\u91ca\uff0c\u6bd4\u65b9\u8bf4\uff0c\u89e3\u91ca\u4eba\u7c7b\u601d\u7ef4\u7684\u4e3b\u89c2\u4f53\u9a8c\uff0c\u8fd9\u662f\u4e00\u56de\u4e8b\u3002\u4f46\u91cf\u5b50\u529b\u5b66\u7684\u6807\u51c6\u89c2\u70b9\u6697\u793a\u4e86\u4e00\u4e9b\u66f4\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u60c5\uff1a\u5373\u4f7f\u662f\u5bf9\u5ba2\u89c2\u7684\u7269\u7406\u4e16\u754c\u7684\u5b8c\u5168\u7406\u89e3\u4e5f\u8d85\u51fa\u4e86\u79d1\u5b66\u7684\u80fd\u529b\u8303\u56f4\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u5c06\u7406\u8bba\u7684\u6570\u5b66\u4e0e\u6211\u4eec\u751f\u6d3b\u7684\u4e16\u754c\u4e4b\u95f4\u7684\u5173\u7cfb\u8f6c\u5316\u4e3a\u8bed\u8a00\u3002\n47\u5c81\u7684\u5df4\u897f\u662f\u610f\u5927\u5229\u4e1c\u5317\u90e8\u7684\u91cc\u96c5\u65af\u7279\u5927\u5b66\u7684\u4e00\u540d\u7406\u8bba\u7269\u7406\u5b66\u5bb6\uff0c\u4ed6\u5728\u8be5\u5b66\u79d1\u6781\u5c11\u6570\u53cd\u5bf9\u8fd9\u4e00\u7ed3\u8bba\u7684\u53db\u9006\u8005\u4e2d\u540d\u5217\u524d\u8305\u3002\u201c\u6211\u575a\u4fe1\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bb2\uff0c\u7269\u7406\u5b66\u5c31\u662f\u6587\u5b57\uff0c\u201d\u4ed6\u9694\u7740\u91ce\u9910\u684c\u8bf4\u3002\u5c3d\u7ba1\u7814\u8ba8\u4f1a\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u6f14\u8bb2\u90fd\u96c6\u4e2d\u5728\u91cf\u5b50\u529b\u5b66\u7684\u7ecf\u9a8c\u542b\u4e49\u4e0a\uff0c\u4f46\u5df4\u897f\u7684\u6f14\u8bb2\u5c06\u4e3a\u4ed6\u7684\u7edd\u5927\u591a\u6570\u540c\u4e8b\u8ba4\u4e3a\u975e\u5e38\u4e0d\u53ef\u4fe1\u7684\u60f3\u6cd5\u63d0\u4f9b\u7406\u7531\uff1a\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u7269\u7406\u5b66\u6240\u4f9d\u8d56\u7684\u7406\u8bba\u80af\u5b9a\u6709\u95ee\u9898-\u6b63\u662f\u56e0\u4e3a\u5b83\u65e0\u6cd5\u7528\u8bed\u8a00\u6765\u8868\u8fbe\u3002\n\u5f53\u7136\uff0c\u91cf\u5b50\u529b\u5b66\u7684\u5f88\u591a\u77e5\u8bc6\u90fd\u53ef\u4ee5\u7528\u8bed\u8a00\u6765\u8868\u8fbe\u3002\u6bd4\u5982\u7c92\u5b50\u672a\u6765\u7684\u884c\u8e2a\u4e0d\u80fd\u7528\u7406\u8bba\u6765\u8bf4\u660e\uff0c\u53ea\u80fd\u7528\u6982\u7387\u6765\u9884\u6d4b\u3002\u6839\u636e1925\u5e74\u6b27\u6587\u00b7\u859b\u5b9a\u8c14(Erwin Schr\u00f6dinger)\u8bbe\u8ba1\u7684\u65b9\u7a0b\uff0c\u8fd9\u4e9b\u6982\u7387\u6765\u81ea\u6bcf\u4e2a\u7c92\u5b50\u7684\u201c\u6ce2\u51fd\u6570\u201d\uff0c\u5373\u4e00\u7ec4\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6570\u5b57\u3002\u4f46\u7531\u4e8e\u6ce2\u51fd\u6570\u7684\u6570\u5b57\u6ca1\u6709\u660e\u663e\u7684\u610f\u4e49\uff0c\u8be5\u7406\u8bba\u53ea\u9884\u6d4b\u4e86\u79d1\u5b66\u5bb6\u5728\u89c2\u6d4b\u77ac\u95f4\u53ef\u80fd\u770b\u5230\u7684\u4e1c\u897f-\u5f53\u6ce2\u51fd\u6570\u7684\u6240\u6709\u6f5c\u5728\u53ef\u80fd\u6027\u4f3c\u4e4e\u5d29\u6e83\u6210\u4e00\u4e2a\u786e\u5b9a\u7684\u7ed3\u679c-\u800c\u6839\u672c\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u5173\u4e8e\u7c92\u5b50\u5728\u90a3\u4e4b\u524d\u6216\u4e4b\u540e\u5b9e\u9645\u505a\u4ec0\u4e48\u7684\u53d9\u8ff0\uff0c\u751a\u81f3\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u5173\u4e8e\u7c92\u5b50\u8fd9\u4e2a\u8bcd\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u9002\u7528\u4e8e\u672a\u88ab\u89c2\u6d4b\u7684\u4e16\u754c\u7684\u63cf\u8ff0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8be5\u7406\u8bba\u8ba4\u4e3a\uff0c\u7c92\u5b50\u5728\u6ca1\u6709\u88ab\u89c2\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u884c\u4e3a\u66f4\u50cf\u6ce2--\u8fd9\u4e00\u4e8b\u5b9e\u88ab\u79f0\u4e3a\u201c\u6ce2\u7c92\u4e8c\u5143\u6027\u201d\uff0c\u8fd9\u4e0e\u6240\u6709\u8fd9\u4e9b\u6f5c\u5728\u7684\u53ef\u80fd\u6027\u4f3c\u4e4e\u8868\u660e\u4e00\u4e2a\u672a\u88ab\u89c2\u6d4b\u5230\u7684\u7c92\u5b50\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u4e8e\u591a\u4e2a\u5730\u65b9\u6709\u5173\u3002\u7136\u540e\uff0c\u89c2\u5bdf\u884c\u4e3a\u672c\u8eab\u88ab\u5047\u5b9a\u4e3a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u8fd9\u79cd\u65e0\u610f\u4e49\u7684\u60c5\u51b5\u8f6c\u53d8\u4e3a\u6211\u4eec\u6240\u770b\u5230\u7684\u5177\u6709\u7279\u5b9a\u4f4d\u7f6e\u548c\u5176\u4ed6\u5c5e\u6027\u7684\u7269\u4f53\u7684\u4e16\u754c\u3002\u8fd9\u4f7f\u5f97\u4eba\u7c7b\uff0c\u6bd5\u7adf\u662f\u8fdb\u884c\u89c2\u5bdf\u7684\u4eba\uff0c\u5728\u672c\u8d28\u4e0a\u8d1f\u8d23\u53ec\u5524\u51fa\u6211\u4eec\u4ece\u91cf\u5b50\u529b\u5b66\u6240\u6697\u793a\u7684\u9ed1\u6697\u7684\u5730\u4e0b\u4e16\u754c\u4e2d\u7ecf\u5386\u7684\u73b0\u5b9e\uff0c\u8fd9\u662f\u6839\u672c\u4e0d\u53ef\u77e5\u7684\u3002\n\u5173\u4e8e\u91cf\u5b50\u7406\u8bba\u7684\u4e89\u8bba\u6709\u4e00\u79cd\u8d8b\u52bf\uff0c\u90a3\u5c31\u662f\u53d8\u6210\u65e0\u6cd5\u68c0\u9a8c\u7684\u54f2\u5b66\u63a8\u6d4b\u3002\u4f46\u8ba9\u5df4\u897f\u4e0e\u4f17\u4e0d\u540c\u7684\u662f\uff0c\u5373\u4f7f\u5728\u53db\u4e71\u8005\u4e2d\uff0c\u4ed6\u4e5f\u575a\u4fe1\uff0c\u5b9e\u9a8c\u5f88\u5feb\u5c31\u4f1a\u8bc1\u660e\u91cf\u5b50\u529b\u5b66\u5b9e\u9645\u4e0a\u53ea\u662f\u5927\u81f4\u6b63\u786e\u7684\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u3001\u66f4\u57fa\u672c\u7684\u7406\u8bba\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u8be5\u7406\u8bba\u5c06\u63cf\u8ff0\u8ba9\u57fa\u672c\u7c92\u5b50\u4ee5\u5b83\u4eec\u7684\u65b9\u5f0f\u8fd0\u884c\u7684\u7269\u4f53\u548c\u673a\u5236\uff0c\u800c\u4e0d\u4f1a\u63d0\u5230\u4eba\u7c7b\u89c2\u5bdf\u7684\u4f5c\u7528\u3002\u800c\u66f4\u8ba9\u4ed6\u51fa\u7c7b\u62d4\u8403\u7684\u662f\u4ed6\u6210\u529f\u5730\u542f\u52a8\u4e86\u8fd9\u6837\u7684\u7814\u7a76\u3002\u5df4\u897f\u7684\u7814\u7a76\u96c6\u4e2d\u5728\u91cf\u5b50\u529b\u5b66\u7684\u4e00\u79cd\u53ef\u80fd\u7684\u66ff\u4ee3\u65b9\u6848\u4e0a\uff0c\u8fd9\u7c7b\u7406\u8bba\u88ab\u79f0\u4e3a\u201c\u5ba2\u89c2\u584c\u9677\u6a21\u578b\u201d\uff0c\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u4eba\u7684\u89c2\u5bdf\u6765\u5c06\u6ce2\u51fd\u6570\u7684\u53ef\u80fd\u6027\u584c\u9677\u6210\u5355\u4e00\u7684\u7ed3\u679c\uff0c\u800c\u662f\u8c03\u7528\u4e00\u4e2a\u5ba2\u89c2\u7684\u7269\u7406\u8fc7\u7a0b\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u65e0\u8bba\u662f\u5426\u6709\u4eba\u5728\u770b\u3002\u5df4\u897f\u73b0\u5728\u6b63\u5728\u9886\u5bfc\u8fc4\u4eca\u4e3a\u6b62\u6700\u96c4\u5fc3\u52c3\u52c3\u7684\u5b9e\u9a8c\uff0c\u8be5\u5b9e\u9a8c\u53ef\u80fd\u8868\u660e\u5ba2\u89c2\u5d29\u6e83\u786e\u5b9e\u53d1\u751f\u4e86\u3002\n\u5982\u679c\u4ed6\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u7684\uff0c\u5bf9\u7269\u7406\u3001\u6280\u672f\u751a\u81f3\u54f2\u5b66\u7684\u5f71\u54cd\u5c06\u662f\u5de8\u5927\u7684\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c06\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u5e0c\u671b\u4e86\u89e3\u4e16\u754c\u7684\u95ee\u9898\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\n\u7136\u540e\uff0c\u5df4\u897f\u5728\u9ed1\u677f\u4e0a\u5199\u4e0b\u859b\u5b9a\u8c14\u65b9\u7a0b--\u91cf\u5b50\u7406\u8bba\u5347\u7ea7\u4e3a\u201cF=ma\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u7ec4\u5408\uff0c\u4ecd\u7136\u9002\u7528\u4e8e\u68d2\u7403\u548c\u5176\u4ed6\u4e1c\u897f\uff0c\u4f46\u4e5f\u9002\u7528\u4e8e\u5206\u5b50\u548c\u539f\u5b50\u3002\u859b\u5b9a\u8c14\u672c\u4eba\u548c\u4efb\u4f55\u4eba\u4e00\u6837\uff0c\u5bf9\u91cf\u5b50\u7406\u8bba\u7684\u7f3a\u4e4f\u63cf\u8ff0\u611f\u5230\u4e0d\u5b89\uff0c\u4ed6\u8ba4\u4e3a\u91cf\u5b50\u7406\u8bba\u53ea\u662f\u4e0d\u5b8c\u6574--\u4ed6\u7684\u540c\u4ee3\u4eba\u963f\u5c14\u4f2f\u7279\u00b7\u7231\u56e0\u65af\u5766(Albert Einstein)\u4e5f\u5f97\u51fa\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u4ed6\u5c16\u9510\u5730\u95ee\u4e00\u4f4d\u540c\u4e8b\uff0c\u4ed6\u662f\u5426\u771f\u7684\u76f8\u4fe1\uff0c\u5f53\u6ca1\u6709\u4eba\u5728\u770b\u7684\u65f6\u5019\uff0c\u6708\u7403\u5e76\u4e0d\u5728\u90a3\u91cc\u3002\u4f46\u5bf9\u4e8e\u91cf\u5b50\u529b\u5b66\u7684\u5927\u591a\u6570\u5176\u4ed6\u521b\u59cb\u4eba\uff0c\u7279\u522b\u662f\u6781\u5177\u5f71\u54cd\u529b\u7684\u5c3c\u5c14\u65af\u00b7\u73bb\u5c14(Niels Bohr)\u6765\u8bf4\uff0c\u8be5\u7406\u8bba\u7684\u5c40\u9650\u6027\u53ea\u662f\u8868\u660e\u7269\u7406\u5b66\u5df2\u7ecf\u8d70\u5230\u4e86\u6b7b\u80e1\u540c\uff0c\u5b83\u4e0d\u80fd\u518d\u8fdb\u4e00\u6b65\u63ed\u793a\u81ea\u7136\u7684\u771f\u5b9e\u672c\u8d28\uff0c\u5b83\u5c06\u4e0d\u5f97\u4e0d\u6ee1\u8db3\u4e8e\u505a\u51fa\u9884\u6d4b\u7684\u57fa\u672c\u751f\u8ba1\u3002\u4e00\u4f4d\u7406\u8bba\u5bb6\u66fe\u7ecf\u6253\u8da3\u5730\u603b\u7ed3\u9053\uff0c\u201c\u95ed\u5634\uff0c\u8ba1\u7b97\u201d\uff0c\u8fd9\u4e00\u7acb\u573a\u6216\u591a\u6216\u5c11\u5df2\u7ecf\u6210\u4e3a\u4eca\u5929\u7684\u7269\u7406\u6b63\u7edf\u89c2\u5ff5\uff0c\u4e5f\u662f\u5927\u591a\u6570\u6559\u79d1\u4e66\u548c\u5927\u5b66\u91cc\u6559\u6388\u8fd9\u95e8\u5b66\u79d1\u7684\u65b9\u5f0f\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u7269\u7406\u5b66\u5bb6\u548c\u54f2\u5b66\u5bb6\u591a\u5e74\u6765\u4e00\u76f4\u5728\u731c\u6d4b\u91cf\u5b50\u529b\u5b66\u53ef\u80fd\u771f\u6b63\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u8fd9\u662f\u4e00\u4e2a\u540d\u526f\u5176\u5b9e\u7684\u731c\u60f3\u52a8\u7269\u56ed\uff0c\u5176\u4e2d\u4e00\u4e9b\u4eba\u5047\u8bbe\u5e73\u884c\u5b87\u5b99\uff0c\u53e6\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u4eba\u7c7b\u5927\u8111\u5904\u4e8e\u7279\u6b8a\u5730\u4f4d\u3002\u8be5\u7406\u8bba\u7684\u5b8c\u6574\u6027\u4ecd\u7136\u53d7\u5230\u5c11\u6570\u6000\u7591\u8bba\u8005\u7684\u8d28\u7591\uff0c\u5176\u4e2d\u5305\u62ec\u8bfa\u8d1d\u5c14\u5956\u83b7\u5f97\u8005\u53f2\u8482\u6587\u00b7\u6e29\u4f2f\u683c(Steven Weinberg)\uff0c\u4ed6\u81ea\u5df1\u7684\u6559\u79d1\u4e66\u8868\u8fbe\u4e86\u4ed6\u5e0c\u671b\u4f1a\u51fa\u73b0\u66f4\u597d\u7684\u7406\u8bba\uff0c\u5e76\u63ed\u793a\u91cf\u5b50\u529b\u5b66\u62d2\u7edd\u8bb2\u8ff0\u7684\u6545\u4e8b\u3002\n\u859b\u5b9a\u8c14\u521b\u9020\u4e86\u4e00\u4e2a\u672f\u8bed-\u201c\u7ea0\u7f20\u201d-\u56e0\u4e3a\u91cf\u5b50\u529b\u5b66\u672c\u8eab\u53ef\u80fd\u89e3\u91ca\u4e86\u5b83\u7684\u4e0d\u60c5\u613f\uff1a\u4efb\u4f55\u4e24\u4e2a\u76f8\u4e92\u4f5c\u7528\u7684\u7269\u4f53\u7684\u6ce2\u51fd\u6570\uff0c\u5305\u62ec\u89c2\u5bdf\u8005\u548c\u88ab\u89c2\u5bdf\u8005\uff0c\u90fd\u4ea4\u7ec7\u6210\u4e00\u4e2a\u3002\u8fd9\u4f7f\u5f97\u7814\u7a76\u4e9a\u539f\u5b50\u4e16\u754c\u7684\u7814\u7a76\u4eba\u5458\u5904\u4e8e\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6c34\u6ef4\u7684\u4f4d\u7f6e\uff0c\u8bd5\u56fe\u901a\u8fc7\u89e6\u6478\u6c34\u6ef4\u6765\u63a8\u65ad\u53e6\u4e00\u4e2a\u6c34\u6ef4\u7684\u5c3a\u5bf8\uff1a\u7531\u4e8e\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u4e2a\u5927\u6c34\u6ef4\uff0c\u89c2\u5bdf\u5230\u7684\u6c34\u6ef4\u53ef\u4ee5\u8ba1\u7b97\u51fa\u88ab\u89c2\u6d4b\u7269\u4f53\u7684\u4f53\u79ef(\u901a\u8fc7\u4ece\u5927\u6c34\u6ef4\u7684\u4f53\u79ef\u4e2d\u51cf\u53bb\u81ea\u5df1\u7684\u521d\u59cb\u4f53\u79ef)\uff0c\u4f46\u65e0\u6cd5\u6536\u96c6\u5230\u5b83\u7684\u539f\u59cb\u5f62\u72b6\u3002\u7ea0\u7f20\u53ef\u80fd\u8d1f\u8d23\u5c06\u5ba2\u89c2\u73b0\u5b9e\u9690\u85cf\u5728\u9762\u7eb1\u540e\u9762\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u859b\u5b9a\u8c14\u4e5f\u63d0\u51fa\u4e86\u4ed6\u8457\u540d\u7684\u732b\u6096\u8bba\uff0c\u8ba4\u4e3a\u91cf\u5b50\u529b\u5b66\u4e0d\u53ef\u80fd\u662f\u6574\u4e2a\u6545\u4e8b\u7684\u5168\u90e8\u3002\n\u4ed6\u60f3\u8c61\u4e00\u53ea\u732b\u88ab\u9501\u5728\u4e00\u4e2a\u76d2\u5b50\u91cc\uff0c\u91cc\u9762\u88c5\u7740\u4e00\u74f6\u6bd2\u836f\u548c\u4e00\u79cd\u653e\u5c04\u6027\u7269\u8d28\uff0c\u4ed6\u7684\u65b9\u7a0b\u5f0f\u9884\u6d4b\uff0c\u5728\u7814\u7a76\u4eba\u5458\u8ba1\u5212\u67e5\u770b\u5185\u90e8\u4e4b\u524d\uff0c\u670950%\u7684\u53ef\u80fd\u6027\u4f1a\u91ca\u653e\u51fa\u4e00\u79cd\u7c92\u5b50\uff0c\u6253\u7834\u74f6\u5b50\uff0c\u6740\u6b7b\u732b\u3002\u73b0\u5728\uff0c\u5728\u8fd9\u4e00\u89c2\u5bdf\u4e4b\u524d\uff0c\u91cf\u5b50\u529b\u5b66\u7528\u4e00\u4e2a\u6ce2\u51fd\u6570\u6765\u8868\u793a\u7c92\u5b50\uff0c\u8be5\u6ce2\u51fd\u6570\u5c01\u88c5\u4e86\u7c92\u5b50\u7684\u4e24\u4e2a\u6f5c\u5728\u547d\u8fd0(\u53d1\u5c04\u6216\u4e0d\u53d1\u5c04)\uff0c\u8fd9\u8868\u660e\u7c92\u5b50\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u76ee\u6807\u3002\u540c\u65f6\uff0c\u7ea0\u7f20\u5c06\u6ce2\u51fd\u6570\u4e0e\u5c0f\u74f6\u548c\u732b\u7684\u6ce2\u51fd\u6570\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u5c06\u5b83\u4eec\u7684\u547d\u8fd0\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u8fd9\u5bfc\u81f4\u4e86\u5bf9\u76d2\u5b50\u6253\u5f00\u524d\u60c5\u51b5\u7684\u4e00\u79cd\u660e\u663e\u8352\u8c2c\u7684\u63cf\u8ff0\uff1a\u7c92\u5b50\u65e2\u6ca1\u6709\u53d1\u5c04\u4e5f\u6ca1\u6709\u53d1\u5c04\uff1b\u74f6\u5b50\u65e2\u6ca1\u6709\u7834\u788e\u4e5f\u6ca1\u6709\u7834\u88c2\uff1b\u732b\u65e2\u6ca1\u6709\u6b7b\u4e5f\u6ca1\u6709\u6d3b\u7740\u3002\u859b\u5b9a\u8c14\u603b\u7ed3\u9053\uff0c\u663e\u7136\uff0c\u8fd9\u5e45\u56fe\u666f\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\u3002\n\u4f46\u662f\uff0c\u6b63\u7edf\u5b66\u8bf4\u8bf4\uff0c\u7f3a\u5c11\u7684\u662f\u5bf9\u7269\u7406\u5b66\u771f\u6b63\u610f\u4e49\u7684\u7406\u89e3\u3002\u201c\u7269\u7406\u5b66\uff0c\u201d\u73bb\u5c14\u5199\u9053\uff0c\u201c\u4e0e\u5176\u8bf4\u662f\u5bf9\u5148\u9a8c\u7ed9\u5b9a\u4e8b\u7269\u7684\u7814\u7a76\uff0c\u4e0d\u5982\u8bf4\u662f\u5bf9\u4eba\u7c7b\u7ecf\u9a8c\u6392\u5e8f\u548c\u6d4b\u91cf\u65b9\u6cd5\u7684\u53d1\u5c55\u3002\u201d\n\u5982\u679c\u6211\u4eec\u5bf9\u7269\u7406\u5b66\u7684\u8981\u6c42\u53ea\u662f\u63cf\u8ff0\u4eba\u7c7b\u7684\u7ecf\u9a8c\uff0c\u90a3\u4e48\u6096\u8bba\u5c31\u4e0d\u590d\u5b58\u5728\u4e86\u3002\u91cf\u5b50\u529b\u5b66\u6b63\u786e\u5730\u9884\u6d4b\uff0c\u7814\u7a76\u4eba\u5458\u5728\u6253\u5f00\u76d2\u5b50\u540e\uff0c\u53d1\u73b0\u5feb\u4e50\u7ed3\u679c\u7684\u53ef\u80fd\u6027\u4e0e\u66ff\u4ee3\u65b9\u6848\u4e00\u6837\u5927\u3002\u5c31\u662f\u8fd9\u6837\u3002\u5728\u6b64\u4e4b\u524d\u8be2\u95ee\u732b\u7684\u60c5\u51b5\uff0c\u4ece\u6b63\u7edf\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5c31\u50cf\u95ee\u5317\u6781\u7684\u5317\u65b9\u662f\u54ea\u6761\u8def\u4e00\u6837\u4e0d\u5408\u9002\u3002\n\u5728\u91cf\u5b50\u529b\u5b66\u7684\u6240\u6709\u602a\u5f02\u4e4b\u5904\u4e2d\uff0c\u8fd9\u79cd\u5bf9\u53ef\u77e5\u7269\u7684\u9650\u5236\u662f\u6700\u602a\u5f02\u3001\u6700\u6df1\u523b\u7684\u3002\u8fd9\u8868\u660e\uff0c\u79d1\u5b66\u5bb6\u6700\u7cbe\u786e\u7684\u4e16\u754c\u6a21\u578b\u4e0d\u80fd\u63cf\u8ff0\u6211\u4eec\u89c2\u5bdf\u80cc\u540e\u53d1\u751f\u7684\u4efb\u4f55\u4e8b\u60c5\uff0c\u751a\u81f3\u4e0d\u80fd\u5177\u4f53\u8bf4\u660e\u201c\u89c2\u5bdf\u201d\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\u3002\u5b83\u4eec\u4f1a\u5f71\u54cd\u732b\u5417\uff1f\u6216\u8005\u5b83\u4eec\u53ea\u53d1\u751f\u5728\u89c2\u5bdf\u8005\u7684\u8111\u6d77\u4e2d\uff1f\u5c3d\u7ba1\u4eca\u5929\u7684\u5927\u591a\u6570\u7269\u7406\u5b66\u5bb6\u5df2\u7ecf\u653e\u5f03\u4e86\u56de\u7b54\u8fd9\u6837\u7684\u95ee\u9898\u7684\u5e0c\u671b\uff0c\u859b\u5b9a\u8c14\u548c\u7231\u56e0\u65af\u5766\u4e00\u6837\uff0c\u4ece\u6765\u6ca1\u6709\u8fd9\u6837\u505a\u8fc7\u3002\u4ed6\u79f0\u7f3a\u4e4f\u5bf9\u5b83\u7684\u63cf\u8ff0\u662f\u4ed6\u5e2e\u52a9\u53d1\u660e\u7684\u7406\u8bba\u7684\u201c\u88ab\u9ad8\u4f30\u7684\u6682\u65f6\u6027\u7684\u4e00\u9762\u201d\uff0c\u4ed6\u76f8\u4fe1\uff0c\u8fd9\u662f\u56e0\u4e3a\u4ed6\u7684\u7269\u7406\u5b66\u5bb6\u540c\u884c\u4eec\u975e\u5e38\u4eba\u6027\u5316\u7684\u613f\u671b\uff0c\u8ba4\u4e3a\u4ed6\u4eec\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6301\u4e45\u7684\u771f\u7406\u3002\n\u6e29\u4f2f\u683c\u5199\u4e86\u4e00\u672c\u540d\u4e3a\u201c\u6700\u7ec8\u7406\u8bba\u7684\u68a6\u60f3\u201d(Dreams Of A Final They)\u7684\u4e66\uff0c\u4ed6\u5728\u7535\u8bdd\u4e2d\u4e0e\u6211\u6c89\u601d\u7740\u91cf\u5b50\u529b\u5b66\u53ef\u80fd\u771f\u7684\u662f\u771f\u7406\uff0c\u8fd9\u6837\u7269\u7406\u5b66\u5bb6\u68a6\u60f3\u7684\u7ec8\u6781\u7406\u8bba\u53ea\u4f1a\u6d89\u53ca\u4eba\u7c7b\u7684\u7ecf\u9a8c\uff0c\u800c\u4e0d\u4f1a\u5bf9\u81ea\u7136\u754c\u8bf4\u66f4\u591a\u7684\u8bdd\u3002\u201c\u5bf9\u6211\u6765\u8bf4\uff0c\u90a3\u5c06\u662f\u53ef\u6015\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u51e0\u4e4e\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u5982\u679c\u771f\u662f\u8fd9\u6837\uff0c\u90a3\u5c31\u8ba9\u5b83\u89c1\u9b3c\u53bb\u5427\u3002\u201d\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u91cf\u5b50\u529b\u5b66\u5df2\u7ecf\u901a\u8fc7\u4e86\u5982\u6b64\u591a\u975e\u5e38\u7cbe\u786e\u7684\u6d4b\u8bd5\uff0c\u5f53\u8003\u8651\u5230\u584c\u7f29\u6a21\u578b\u65f6\uff0c\u901a\u5e38\u90fd\u4e0d\u4f1a\u8003\u8651\uff0c\u800c\u4e14\u5f88\u5c11\u6709\u7269\u7406\u5b66\u5bb6\u8ba4\u4e3a\u5df4\u897f\u4f1a\u6210\u529f\u3002\u5c31\u8fde\u6e29\u4f2f\u683c\u5728\u7535\u8bdd\u4e2d\u4e5f\u5c06\u4ed6\u7684\u63a2\u7d22\u63cf\u8ff0\u4e3a\u201c\u6709\u8da3\u201d\uff0c\u4f46\u201c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u5728\u9ed1\u6697\u4e2d\u5439\u53e3\u54e8\u201d\u3002\n\u5728\u7684\u91cc\u96c5\u65af\u7279\u6f14\u8bb2\u540e\u7684\u7b2c\u4e8c\u5929\uff0c\u5df4\u897f\u5f00\u7740\u4ed6\u90a3\u8f86\u84dd\u8272\u7684\u3001\u9971\u7ecf\u98ce\u971c\u7684\u6807\u81f4\u5f00\u8f66\u9001\u6211\u53bb\u4ed6\u7684\u5bb6\u4e61\u79d1\u6d1b\u96f7\u591a\u00b7\u8fea\u00b7\u666e\u62c9\u6258(Colloredo Di Prato)\u3002\u5f53\u952f\u9f7f\u72b6\u7684\u963f\u5c14\u5351\u65af\u5c71\u4ece\u4e58\u5ba2\u8f66\u7a97\u4e0a\u5212\u8fc7\u5929\u7a7a\u65f6\uff0c\u6211\u95ee\u4ed6\u6210\u957f\u7684\u65f6\u5019\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u4ed6\u8bf4\uff0c\u201c\u5de5\u4f5c\u6709\u9053\u5fb7\u7684\u4e00\u9762\uff0c\u73b0\u5728\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u8fd9\u4e00\u70b9\u5df2\u7ecf\u6d88\u5931\u4e86\u3002\u201d\u4ed6\u8bf4\uff0c\u73b0\u5728\u7684\u5e74\u8f7b\u4eba\u592a\u5728\u4e4e\u201c\u6210\u529f\u201d\u548c\u201c\u51fa\u540d\u201d\u4e86\u3002\n\u201c\u6210\u529f\u4e0d\u7b97\u4ec0\u4e48\uff0c\u201d\u4ed6\u7236\u4eb2\u6559\u5bfc\u4ed6\u3002\u201c\u6b63\u786e\u7684\u5de5\u4f5c\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\u201d\n\u867d\u7136\u79d1\u6d1b\u96f7\u591a\u00b7\u8fea\u00b7\u666e\u62c9\u6258\u548c\u7684\u91cc\u96c5\u65af\u7279\u53ea\u6709\u4e00\u4e2a\u5c0f\u65f6\u7684\u8f66\u7a0b\uff0c\u4f46\u4ed6\u544a\u8bc9\u6211\uff0c\u5b83\u4eec\u201c\u5b9e\u9645\u4e0a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u4e16\u754c\u201d\u3002\u7684\u91cc\u96c5\u65af\u7279\u662f\u4e00\u4e2a\u4e34\u65f6\u521b\u5efa\u7684\u6e2f\u53e3\uff0c\u662f\u4e00\u4e2a\u5546\u4eba\u4e4b\u57ce\uff0c\u4e70\u5356\u4e4b\u57ce\u3002\u4ed6\u7684\u5bb6\u4e61\u66f4\u5185\u9646\uff0c\u5386\u53f2\u66f4\u60a0\u4e45\uff0c\u76f8\u53cd\uff0c\u90a3\u91cc\u662f\u5de5\u5320\u548c\u519c\u6c11\u7684\u805a\u96c6\u5730\uff0c\u662f\u5236\u9020\u548c\u79cd\u690d\u7684\u5730\u65b9\u3002\u5173\u4e8e\u5df4\u897f\u7684\u65e9\u671f\u7ae5\u5e74\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bf4\u201c\u771f\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u65f6\u4ee3\u201d\uff0c\u90a3\u51e0\u4e4e\u662f\u524d\u5de5\u4e1a\u5316\u65f6\u4ee3\u3002\u4ed6\u7684\u7b2c\u4e00\u4e2a\u5bb6\u662f\u4e00\u5ea7\u4e24\u5c42\u7684\u7816\u77f3\u516c\u5bd3\u697c-\u5c31\u662f\u4ed6\u7236\u4eb2\u957f\u5927\u7684\u5730\u65b9-\u51e0\u4e2a\u5bb6\u5ead\u4f4f\u5728\u90a3\u91cc\uff0c\u5171\u4eab\u4e00\u4e2a\u5ead\u9662\uff0c\u517b\u7740\u4ed6\u4eec\u7684\u9a6c\u3001\u732a\u548c\u725b\u3002\u4eca\u5929\uff0c\u90a3\u91cc\u4ecd\u7136\u77d7\u7acb\u7740\u4e00\u5ea7\u77f3\u780c\u7684\u6237\u5916\u5395\u6240\uff0c\u5c3d\u7ba1\u5df4\u897f\u51fa\u751f\u65f6\u5ba4\u5185\u7ba1\u9053\u5df2\u7ecf\u94fa\u8bbe\u5b8c\u6bd5\uff0c\u4f46\u7535\u89c6\u8fd8\u6ca1\u6709\u3002\u4ed6\u6700\u521d\u7684\u8bb0\u5fc6\u662f\u548c\u6bcd\u4eb2\u4e00\u8d77\u8dd1\u8001\u5f0f\u7684\u5dee\u4e8b\uff0c\u53bb\u5f53\u5730\u7684\u8c37\u7269\u78e8\u574a\u548c\u5976\u916a\u5236\u9020\u5546\u90a3\u91cc\u3002\u4ed6\u6700\u65e9\u7684\u670b\u53cb\u4e4b\u4e00\u662f\u4e00\u53ea\u9e21\u3002\u5df4\u897f\u7684\u59d0\u59d0\u4f0a\u51e1\u5a1c\u6df1\u60c5\u5730\u56de\u5fc6\u8d77\u5c0f\u5b89\u5409\u6d1b\u5750\u5728\u4e61\u95f4\u8857\u9053\u4e2d\u592e\u201c\u5ba0\u7231\u4ed6\u5fc3\u7231\u7684\u6bcd\u9e21\u201d\u7684\u6837\u5b50\u3002\n\u4ed6\u7684\u7236\u4eb2\u662f\u94c1\u5320\uff0c\u4ed6\u7684\u6bcd\u4eb2\u662f\u62a4\u58eb\u3002\u4ed6\u7684\u7236\u4eb2\u56db\u5e74\u524d\u53bb\u4e16\u4e86\uff0c\u4f46\u5df4\u897f\u6bcf\u5929\u90fd\u7ed9\u6bcd\u4eb2\u6253\u7535\u8bdd\uff0c\u4ed6\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u8bf4\u5f17\u7559\u5170\u8bed\uff0c\u8fd9\u662f\u8be5\u5730\u533a\u66fe\u7ecf\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u8bed\u8a00\uff0c\u73b0\u5728\u6b63\u8fc5\u901f\u88ab\u610f\u5927\u5229\u8bed\u53d6\u4ee3\u3002\n\u7ad9\u5728\u5df4\u897f\u7ae5\u5e74\u65f6\u7684\u5ead\u9662\u91cc\uff0c\u5468\u56f4\u662f\u7a7a\u8361\u8361\u7684\u5e72\u8349\u68da\u548c\u5e9f\u5f03\u7684\u516c\u5bd3\uff0c\u5468\u56f4\u662f\u6253\u7740\u77f3\u818f\u8865\u4e01\u7684\u77f3\u5899\uff0c\u4eba\u4eec\u5f88\u5bb9\u6613\u5728\u5df4\u897f\u7684\u65e7\u4e16\u754c\u6559\u80b2\u548c\u4ed6\u4e0d\u5408\u65f6\u5b9c\u7684\u7269\u7406\u89c2\u4e4b\u95f4\u5212\u6e05\u754c\u9650\u3002\u66f4\u4e0d\u7528\u8bf4\u4e0d\u5230100\u7801\u5916\u7684\u6559\u5802\u4e86\uff0c\u6559\u5802\u7684\u949f\u697c\u4ecd\u7136\u7b3c\u7f69\u7740\u6574\u4e2a\u8ff7\u4eba\u4f46\u8870\u8d25\u7684\u666f\u8c61\u3002\u5df4\u897f\u662f\u4e00\u540d\u8654\u8bda\u7684\u5929\u4e3b\u6559\u5f92\uff0c\u4e5f\u662f\u4e0a\u5e1d\u7684\u4fe1\u5f92\uff0c\u4ed6\u8bf4\u8fd9\u5728\u4ed6\u7684\u5927\u5b66\u540c\u4e8b\u4e2d\u662f\u201c\u4e0d\u5bfb\u5e38\u7684\u201d\uff0c\u4f46\u201c\u5e76\u4e0d\u7f55\u89c1\u201d\u3002\u7231\u56e0\u65af\u5766\u628a\u4ed6\u81ea\u5df1\u8ba4\u4e3a\u73b0\u5b9e\u53ef\u4ee5\u7406\u89e3\u7684\u4fe1\u4ef0\u79f0\u4e3a\u201c\u5b97\u6559\u201d\uff0c\u6211\u60f3\u77e5\u9053\u5df4\u897f\u7684\u5b97\u6559\u4fe1\u4ef0\u4e0e\u7269\u7406\u5b66\u4e2d\u672c\u8d28\u4e0a\u5904\u4e8e\u6781\u53f3\u7ffc\u5730\u4f4d\u7684\u5b97\u6559\u4fe1\u4ef0\u4e4b\u95f4\u662f\u5426\u6709\u8054\u7cfb\u3002\u6211\u5728\u8428\u683c\u52d2\u5e03\u7684\u91ce\u9910\u684c\u4e0a\u95ee\u4ed6\u3002\n\u201c\u662f\u7684\uff0c\u5c31\u662f\u8fd9\u6837\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u5c06\u73b0\u8c61\u80cc\u540e\u6709\u771f\u7406\u548c\u7b80\u5355\u7684\u60f3\u6cd5\u4e0e\u5bf9\u4e0a\u5e1d\u7684\u4fe1\u4ef0\u76f4\u63a5\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u4e0a\u5e1d\u662f\u4ea7\u751f\u4e00\u5207\u7684\u7edf\u4e00\u4f53\u3002\u201d\n\u201c\u4f46\u8fd9\u4e5f\u662f\u4e00\u79cd\u4eb2\u5bc6\u7684\u611f\u89c9\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\u3002\u201c\u6211\u6ca1\u6709\u5fc5\u8981\u628a\u8fd9\u4e24\u4ef6\u4e8b\u8054\u7cfb\u8d77\u6765\u3002\u201d\n\u201c\u751f\u6d3b\u4e2d\u7b80\u5355\u7684\u4e8b\u60c5\u624d\u662f\u66f4\u771f\u5b9e\u7684\uff0c\u201d\u4ed6\u89e3\u91ca\u8bf4\u3002\u201c\u5f53\u4e00\u4e2a\u4eba\u5f88\u7b80\u5355\u7684\u65f6\u5019\uff0c\u4ed6\u5c31\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u4eba\u3002\u201d\n\u7269\u7406\u5b66\u7684\u8fdb\u6b65\uff0c\u4ece\u725b\u987f\u5230\u7231\u56e0\u65af\u5766\u751a\u81f3\u66f4\u591a\uff0c\u7528\u8d8a\u6765\u8d8a\u5c11\u7684\u65b9\u7a0b\u89e3\u91ca\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u73b0\u8c61\uff0c\u8fd9\u652f\u6301\u4e86\u5b87\u5b99\u6bd4\u8868\u9762\u770b\u8d77\u6765\u66f4\u7b80\u5355\u7684\u89c2\u70b9\u3002\u4f46\u5eb7\u5948\u5c14\u5927\u5b66(Cornell University)\u7269\u7406\u5b66\u5bb6N\u00b7\u5927\u536b\u00b7\u9ed8\u660e(N.David Mermin)\u572818\u4e16\u7eaa\u54f2\u5b66\u5bb6\u5927\u536b\u00b7\u4f11\u8c1f(David Hume)\u7684\u5e2e\u52a9\u4e0b\u8fa9\u79f0\uff0c\u5386\u53f2\u5148\u4f8b\u548c\u5f52\u7eb3\u63a8\u7406\u65e0\u6cd5\u8bc1\u660e\u4efb\u4f55\u4e8b\u60c5\uff0c\u5c24\u5176\u662f\u73b0\u5b9e\u7684\u771f\u5b9e\u60c5\u51b5\u3002\u9ed8\u660e\u662f\u6b63\u7edf\u5b66\u8bf4\u7684\u4e3b\u8981\u5021\u5bfc\u8005\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u95ed\u5634\u8ba1\u7b97\u201d\u8fd9\u53e5\u8bdd\u80cc\u540e\u7684\u673a\u667a\u4eba\u7269\uff0c\u4ed6\u66fe\u5ba3\u79f0\uff0c\u5f53\u6ca1\u6709\u4eba\u5728\u770b\u7684\u65f6\u5019\uff0c\u6708\u7403\u663e\u7136\u4e0d\u5728\u90a3\u91cc\u3002\u6211\u6b23\u8d4f\u8fd9\u4e00\u8bba\u70b9\u7684\u8c26\u900a\uff0c\u5e76\u5bf9\u684c\u5b50\u5bf9\u9762\u7684\u5df4\u897f\u8bf4\u4e86\u8fd9\u756a\u8bdd\u3002\n\u4ed6\u53cd\u9a73\u8bf4\uff0c\u5728\u6b63\u7edf\u5b66\u8bf4\u5173\u4e8e\u91cf\u5b50\u529b\u5b66\u662f\u6b63\u786e\u7684\u5047\u8bbe\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5b58\u5728\u7740\u201c\u50b2\u6162\u201d\u3002\n\u201c\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u79cd\u6001\u5ea6\u963b\u788d\u4e86\u7814\u7a76\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5373\u4f7f\u4e16\u754c\u6700\u7ec8\u65e0\u6cd5\u7406\u89e3\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u7406\u7531\u76f8\u4fe1\u91cf\u5b50\u529b\u5b66\u5df2\u7ecf\u89e6\u5e95\u3002\u201d\n\u5df4\u897f\u544a\u8bc9\u6211\uff0c\u4ed6\u5f00\u59cb\u5b66\u4e60\u7269\u7406\u5b66\u65f6\uff0c\u66f4\u611f\u5174\u8da3\u7684\u662f\u7406\u8bba\u63d0\u4f9b\u7684\u542f\u793a\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u5b9e\u7528\u6027\u3002\u8bb8\u591a\u6ee1\u6000\u5e7b\u60f3\u7684\u5b66\u751f\u4e5f\u662f\u8fd9\u6837\u5f00\u59cb\u7684\uff0c\u4f46\u91cf\u5b50\u529b\u5b66\u6709\u4e00\u79cd\u7ed9\u4ed6\u4eec\u7684\u68a6\u60f3\u6cfc\u6c34\u7684\u65b9\u6cd5\u3002(\u4f5c\u4e3a\u4e00\u4e2a\u5b8c\u6210\u4e86\u7269\u7406\u535a\u58eb\u5b66\u4f4d\uff0c\u4f46\u5728\u542f\u8499\u548c\u5c31\u4e1a\u4f3c\u4e4e\u9065\u4e0d\u53ef\u53ca\u7684\u60c5\u51b5\u4e0b\u8f6c\u884c\u5230\u91d1\u878d\u884c\u4e1a\u7684\u4eba\uff0c\u6211\u5728\u8fd9\u91cc\u5199\u4e0b\u8fd9\u7bc7\u6587\u7ae0\u662f\u57fa\u4e8e\u7ecf\u9a8c\u3002)\u3002\n\u6155\u5c3c\u9ed1\u8def\u5fb7\u7ef4\u5e0c\u00b7\u9a6c\u514b\u897f\u7c73\u5229\u5b89\u5927\u5b66\u7684\u6570\u5b66\u7269\u7406\u5b66\u5bb6\u3001\u5df4\u897f\u7684\u5bfc\u5e08\u5fb7\u7279\u5c14\u592b\u00b7\u8fea\u5c14\u8bf4\uff1a\u201c\u5f53\u4f60\u662f\u5b66\u751f\u7684\u65f6\u5019\uff0c\u4f60\u5f53\u7136\u4f1a\u76f8\u4fe1\u8001\u5e08\u3002\u201d\u201c\u4f60\u5bf9\u81ea\u5df1\u8bf4\uff0c\u597d\u5427\uff0c\u81ea\u7136\u754c\u4e2d\u6709\u67d0\u79cd\u4e1c\u897f\uff0c\u67d0\u79cd\u4e1c\u897f\u771f\u7684\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u7406\u89e3\u3002\u201d\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e00\u4e2a\u6709\u8d28\u7591\u6b63\u7edf\u503e\u5411\u7684\u65b0\u751f\u572820\u4e16\u7eaa90\u5e74\u4ee3\u518d\u4e5f\u627e\u4e0d\u5230\u6bd4\u7684\u91cc\u96c5\u65af\u7279\u5927\u5b66\u66f4\u597d\u7684\u5730\u70b9\u548c\u65f6\u95f4\u4e86\u3002\u5409\u5b89\u5361\u6d1b\u00b7\u5409\u62c9\u8fea(Giancarlo Ghirardi)\u6559\u8fc7\u5df4\u897f\u7684\u7b2c\u4e00\u8282\u91cf\u5b50\u529b\u5b66\u8bfe\uff0c\u540e\u6765\u6210\u4e3a\u4ed6\u7684\u535a\u58eb\u5bfc\u5e08\uff0c\u4e8e2018\u5e74\u53bb\u4e16\u3002\u5409\u5b89\u5361\u6d1b\u00b7\u5409\u62c9\u8fea\u5728\u5927\u5b66\u91cc\u88ab\u8ba4\u4e3a\u662f\u4e00\u4f4d\u656c\u4e1a\u800c\u6709\u624d\u534e\u7684\u8001\u5e08\u3002\u4f46\u5728\u7684\u91cc\u96c5\u65af\u7279\u4e4b\u5916\uff0c\u5409\u62c9\u8fea\u6700\u51fa\u540d\u7684\u662f\u5ba2\u89c2\u584c\u9677\u6a21\u578b\u7684\u8bbe\u8ba1\u5e08\u4e4b\u4e00\uff0c\u8be5\u6a21\u578b\u6709\u53ef\u80fd\u89e3\u51b3\u5173\u4e8e\u91cf\u5b50\u529b\u5b66\u542b\u4e49\u7684\u4e89\u8bba\u3002\n\u5927\u4f53\u4e0a\uff0c\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e24\u79cd\u770b\u6cd5\u3002\u4e00\u79cd\u662f\u6b63\u7edf\u5b66\u8bf4\uff0c\u4e5f\u88ab\u79f0\u4e3a\u53cd\u5b9e\u5728\u8bba(\u5c3d\u7ba1\u901a\u5e38\u53ea\u6709\u975e\u6b63\u7edf\u6d3e\u624d\u8fd9\u4e48\u8ba4\u4e3a\uff1b\u7269\u7406\u5b66\u5bb6\u5f80\u5f80\u4e0d\u613f\u88ab\u8d34\u4e0a\u67d0\u79cd\u7248\u672c\u7684\u73b0\u5b9e\u4e3b\u4e49\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0cMermin\u66f4\u559c\u6b22\u4f7f\u7528\u201c\u53c2\u4e0e\u5f0f\u73b0\u5b9e\u4e3b\u4e49\u8005\u201d\u8fd9\u4e2a\u8bcd)\u3002\u53cd\u5b9e\u5728\u8bba\u8005\u662f\u73bb\u5c14\u7684\u667a\u529b\u7ee7\u627f\u8005\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u7269\u7406\u5b66\u53ea\u80fd\u63cf\u8ff0\u4eba\u7c7b\u5bf9\u73b0\u5b9e\u7684\u4f53\u9a8c\uff0c\u91cf\u5b50\u7406\u8bba\u7684\u6096\u8bba\u662f\u7531\u4e8e\u8bef\u5bfc\u5730\u8bd5\u56fe\u5229\u7528\u5b83\u6765\u8fa8\u522b\u73b0\u5b9e\u672c\u8eab\u7684\u672c\u8d28\u3002\n\u7136\u540e\u662f\u73b0\u5b9e\u4e3b\u4e49\u8005(\u4ed6\u4eec\u9ad8\u5174\u5730\u81ea\u79f0\u4e3a\u81ea\u5df1)\uff0c\u4ed6\u4eec\u5927\u81f4\u4e0a\u662f\u859b\u5b9a\u8c14\u548c\u7231\u56e0\u65af\u5766\u7684\u540e\u88d4\uff0c\u4ed6\u4eec\u76f8\u4fe1\u7269\u7406\u5b66\u53ef\u4ee5\u4e5f\u5e94\u8be5\u63cf\u8ff0\u8131\u79bb\u6211\u4eec\u800c\u5b58\u5728\u7684\u4e16\u754c-\u4f8b\u5982\uff0c\u901a\u8fc7\u89e3\u91ca\u76d2\u5b50\u91cc\u7684\u90a3\u53ea\u732b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e24\u79cd\u8c03\u548c\u91cf\u5b50\u7406\u8bba\u4e0e\u73b0\u5b9e\u4e3b\u4e49\u7684\u65b9\u6cd5\u83b7\u5f97\u4e86\u5438\u5f15\u529b\u3002\u4e00\u79cd\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u8bb8\u591a\u4e16\u754c\u201d\u7684\u89c2\u70b9\u8ba4\u4e3a\uff0c\u6ce2\u51fd\u6570\u4e2d\u7f16\u7801\u7684\u6240\u6709\u53ef\u80fd\u6027\u5b9e\u9645\u4e0a\u90fd\u53d1\u751f\u4e86\uff0c\u6240\u4ee5\u859b\u5b9a\u8c14\u7684\u732b\u65e2\u6d3b\u7740\uff0c\u4e5f\u6b7b\u4e86(\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u4e00\u5207\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\u90fd\u4f1a\u53d1\u751f)\uff0c\u5c3d\u7ba1\u5b83\u4eec\u4f4d\u4e8e\u5e7f\u9614\u4e14\u4e0d\u65ad\u589e\u957f\u7684\u5b87\u5b99\u7684\u4e0d\u540c\u5206\u652f\u4e2d\u3002\u53e6\u4e00\u79cd\u88ab\u79f0\u4e3a\u6ce2\u7c73\u4e9a\u529b\u5b66\uff0c\u633d\u6551\u4e86\u725b\u987f\u7684\u201c\u7c92\u5b50\u53d7\u529b\u201d\u7684\u56fe\u666f\uff0c\u5e76\u8d4b\u4e88\u732b\u4e00\u4e2a\u5355\u4e00\u7684\u547d\u8fd0\uff0c\u4f46\u53ea\u662f\u901a\u8fc7\u8d4b\u4e88\u7c92\u5b50\u770b\u4f3c\u8d85\u81ea\u7136\u7684\u529b\u91cf\uff0c\u6bd4\u5982\u80fd\u591f\u77ac\u95f4\u5f71\u54cd\u5f7c\u6b64\u5728\u5b87\u5b99\u8ddd\u79bb\u4e0a\u7684\u8fd0\u52a8\uff0c\u5e76\u6709\u6548\u5730\u4ece\u5b9e\u9a8c\u4e2d\u9690\u85cf\u8bb8\u591a\u8fd9\u6837\u7684\u8fd0\u52a8\u3002\n\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u5f88\u5947\u602a\uff0c\u90fd\u6709\u6c38\u8fdc\u4e0d\u53ef\u89c1\u7684\u5c34\u5c2c\u7279\u5f81\u7269\u7406\u5b66\u5bb6\u5728\u60f3\u8c61\u4e0e\u91cf\u5b50\u7406\u8bba\u5947\u602a\u7684\u9884\u6d4b\u76f8\u4e00\u81f4\u7684\u73b0\u5b9e\u65f6\u5fc5\u987b\u505a\u51fa\u8fd9\u6837\u7684\u626d\u66f2\uff0c\u4f46\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u8bf4\u660e\u4e86\u91cf\u5b50\u529b\u5b66\u53ef\u80fd\u63cf\u8ff0\u548c\u9884\u6d4b\u7684\u53ef\u80fd\u65b9\u5f0f\u3002\u771f\u6b63\u7684\u95ee\u9898\u662f\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7684\u73b0\u5b9e\u5f7c\u6b64\u4e0d\u4e00\u81f4\uff0c\u4e5f\u4e0e\u5176\u4ed6\u76f8\u4e92\u7ade\u4e89\u7684\u89e3\u91ca\u76f8\u62b5\u89e6\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u4ec5\u4ec5\u662f\u5bf9\u91cf\u5b50\u7406\u8bba\u7684\u89e3\u91ca\u5e76\u4e0d\u80fd\u505a\u51fa\u65b0\u7684\u9884\u6d4b\uff0c\u6240\u4ee5\u5b9e\u9a8c\u4e0d\u80fd\u5728\u5b83\u4eec\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\uff0c\u6240\u4ee5\u4e00\u4e2a\u4eba\u559c\u6b22\u54ea\u4e00\u4e2a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u4e2a\u54c1\u5473\u95ee\u9898\u3002\n\u201c\u6211\u4e00\u76f4\u8ba4\u4e3a\u8fd9\u662f\u4e00\u573a\u76f8\u5f53\u7a7a\u6d1e\u7684\u6e38\u620f\uff0c\u201d\u666e\u6797\u65af\u987f\u9ad8\u7b49\u7814\u7a76\u9662\u7684\u7269\u7406\u5b66\u5bb6\u65af\u8482\u82ac\u00b7\u963f\u5fb7\u52d2(Stephen Adler)\u8bf4\uff0c\u4ed6\u4e5f\u662f\u5df4\u897f\u7684\u53e6\u4e00\u4f4d\u5bfc\u5e08\u548c\u5408\u4f5c\u8005\u3002\u201c\u7269\u7406\u662f\u4e00\u95e8\u5b9e\u9a8c\u5b66\u79d1\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u80fd\u4ece\u5b9e\u9a8c\u4e0a\u533a\u5206\u51fa\u6765\uff0c\u6211\u4e0d\u5728\u4e4e\u4f60\u600e\u4e48\u89e3\u91ca\u3002\u201c\u3002\nGhirardi\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u901a\u8fc7\u8fdb\u884c\u7cbe\u7ec6\u7684\u6982\u5ff5\u79fb\u690d\uff0c\u53bb\u6389\u4e86\u91cf\u5b50\u7406\u8bba\u5bf9\u89c2\u5bdf\u7684\u5f15\u7528\uff0c\u5e76\u7528\u5728\u859b\u5b9a\u8c14\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u5b66\u672f\u8bed\u6765\u53d6\u800c\u4ee3\u4e4b\uff0c\u4ece\u800c\u5f97\u51fa\u4e86\u5ba2\u89c2\u7684\u584c\u7f29\u6a21\u578b\u3002\u901a\u8fc7\u5bfc\u81f4\u5ba2\u89c2\u5d29\u6e83\uff0c\u8fd9\u4e2a\u65b0\u672f\u8bed\u5c06\u7406\u8bba\u4ece\u63cf\u8ff0\u89c2\u5bdf\u8005\u6240\u89c1\u7684\u4e1c\u897f\u8f6c\u53d8\u4e3a\u63cf\u8ff0\u4e16\u754c\u7684\u672c\u6765\u9762\u76ee(\u5f53\u7136\uff0c\u5047\u8bbe\u8be5\u7406\u8bba\u662f\u6b63\u786e\u7684)\u3002\u56f0\u96be\u7684\u90e8\u5206\u662f\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u65b0\u7684\u3002\n..", "note_en": "\u2018The thing that amazes me is that quantum mechanics is only 100 years old,\u201d the physicist Angelo Bassi said. We were in conversation across a picnic table on a drab Soviet-era campus in Zagreb, an early-autumn breeze swishing through the yellowing leaves of some nearby trees. \u201cIt\u2019s a baby, it\u2019s nothing \u2014 100 years in the history of science. How can you just stop there? It doesn\u2019t make sense any way you look at it.\u201d We sat in the shadow of a rust-stained beige building where Bassi was about to speak at a workshop for physicists who specialize in the century-old subject.\n Despite the theory\u2019s advancing years, even college-educated adults tend to have only a hazy sense of what quantum mechanics says. And for good reason. Although physicists use it to predict the behavior of the fundamental particles, like electrons, that make up atoms and the photons that make up light, and in spite of its having been the basis of many of the 20th century\u2019s signature technologies (including nuclear power, lasers and computers), the theory has confounded even the cognoscenti from its beginnings in the 1920s. That\u2019s because, while it\u2019s spectacular at making predictions, it doesn\u2019t describe what\u2019s actually happening underneath nature\u2019s hood to make those results come about. It would be one thing to concede that science may never be able to explain, say, the subjective experiences of the human mind. But the standard take on quantum mechanics suggests something far more surprising: that a complete understanding of even the objective, physical world is beyond science\u2019s reach, since it\u2019s impossible to translate into words how the theory\u2019s math relates to the world we live in.\n Bassi, a 47-year-old theoretical physicist at the University of Trieste, in northeastern Italy, is prominent among a tiny minority of rebels in the discipline who reject this conclusion. \u201cI strongly believe that physics  is words, in a sense,\u201d he said across the picnic table. And whereas all the other talks at the workshop focused on the empirical implications of quantum mechanics, Bassi\u2019s would make a case for what a vast majority of his colleagues consider a highly implausible idea: that the theory upon which nearly all of modern physics rests must have something wrong with it \u2014 precisely because it can\u2019t be put into words.\n Of course, much about quantum mechanics  can be said with words. Like the fact that a particle\u2019s future whereabouts can\u2019t be specified by the theory, only predicted with probabilities. And that those probabilities derive from each particle\u2019s \u201cwave function,\u201d a set of numbers that varies over time, as per an equation devised by Erwin Schr\u00f6dinger in 1925. But because the wave function\u2019s numbers have no obvious meaning, the theory only predicts what scientists may see at the instant of observation \u2014 when all the wave function\u2019s latent possibilities appear to collapse to one definitive outcome \u2014 and provides no narrative at all for what particles actually do before or after that, or even how much the word \u201cparticle\u201d is apropos to the unobserved world. The theory, in fact, suggests that particles, while they\u2019re not being observed, behave more like waves \u2014 a fact called \u201cwave-particle duality\u201d that\u2019s related to how all those latent possibilities seem to indicate that an unobserved particle can exist in several places at once. The act of observation itself is then posited to somehow convert this nonsensical situation into the world we see, of objects having definite locations and other properties. This makes human beings, who are after all the ones making the observations, in essence responsible for conjuring the reality we experience out of a murky netherworld that quantum mechanics implies is simply unknowable.\n Arguments about quantum theory have a tendency to turn into untestable philosophical speculation. But what makes Bassi exceptional, even among the rebels, is his conviction that experiments will soon show that quantum mechanics is in fact only approximately correct, the mere tip of a deeper and more fundamental theory that will describe the objects and mechanisms that make fundamental particles act the way they do, without any reference to the role of human observation. And what makes him even more exceptional is his success in getting such studies off the ground. Bassi\u2019s research is focused on a possible alternative to quantum mechanics, a class of theories called \u201cobjective collapse models\u201d that doesn\u2019t rely on human observation to collapse a wave function\u2019s possibilities to a single outcome, but that invokes instead an objective, physical process to do the job whether anyone\u2019s looking or not. And Bassi is now leading the most ambitious experiment to date that could show that objective collapse actually happens.\n If he is proved right, the implications for physics, technology and, yes, even philosophy, would be immense. Such an outcome would speak to questions of what we can hope to understand about the world, and conversely, which questions are destined to remain forever off-limits.\n A few days before Bassi\u2019s talk in Zagreb, I attended the first class of his quantum mechanics course on the University of Trieste campus, which crowns a high hill overlooking the crescent-shaped city and the Adriatic Sea. Bassi wore a long-sleeved black T-shirt and skinny jeans that, with his lanky frame and large hands, gave him, as he paced and gestured at the front of the room, the aspect of an ungainly mime.\n He was speaking Italian. I don\u2019t speak Italian, but when he chalked \u201cF = ma\u201d onto the blackboard, I could see he was reviewing Newton\u2019s laws of motion, also known as classical mechanics. Classical mechanics does a fine job explaining the movements of things much larger than atoms, like bacteria, baseballs and planets. And even though making such predictions requires math, understanding the theory\u2019s meaning doesn\u2019t. Bassi drew a dot on the board, and then a curvy line with an arrow at its end: a particle moved by a force through space. Add to that picture the premise that baseballs and the rest are just collections of such particles and you can say in four words, as Bassi repeatedly did to me, how classical mechanics says the world works: \u201cparticles subject to forces.\u201d\n Bassi then wrote Schr\u00f6dinger\u2019s equation on the board \u2014 quantum theory\u2019s upgrade to \u201cF = ma,\u201d a moderately more complicated combination of letters and numbers that still applies to baseballs and the rest, but also to molecules and atoms. Schr\u00f6dinger himself, as disconcerted as anyone by quantum theory\u2019s lack of description, figured that it was simply incomplete \u2014 a conclusion his contemporary Albert Einstein shared, pointedly asking one colleague if he truly believed that the moon wasn\u2019t there when no one was looking. But to most of the other founders of quantum mechanics, in particular the highly influential Niels Bohr, the theory\u2019s limitations simply signaled that physics had reached a dead end, that it could go no further in revealing the true nature of nature, and that it would have to content itself instead with its bread and butter of making predictions. \u201cShut up and calculate,\u201d a theorist once quipped to sum up this stance, which has become, more or less, physics orthodoxy today and the way the subject is taught in most textbooks and universities.\n Still, a veritable zoo of conjectures for what quantum mechanics might really imply about the world has been floated by physicists and philosophers over the years, including some that postulate parallel universes and others a special status for the human mind. And the theory\u2019s completeness is still questioned by a handful of skeptics, including the Nobel laureate Steven Weinberg, whose own textbook on the subject expresses his hope that a better theory will emerge and reveal the story quantum mechanics refuses to tell.\n Schr\u00f6dinger coined a term \u2014 \u201centanglement\u201d \u2014 for the way quantum mechanics itself may account for its reluctance: the wave functions of any two interacting objects, including observer and observed, get wove into one. This puts a researcher probing the subatomic world into a position similar to that of one water droplet trying to deduce the dimensions of another by touching it: Since the end result is one big droplet, the observing droplet can work out the volume of the observed (by subtracting its own initial volume from that of the big droplet) but can\u2019t glean its original shape. Entanglement could be responsible for keeping objective reality behind a veil.\n Nonetheless, Schr\u00f6dinger also came up with his famous cat paradox to argue that quantum mechanics can\u2019t be the whole story.\n He imagined a cat locked in a box with a vial of poison and a radioactive substance that, his equation predicts, has a 50 percent chance of emitting a particle that breaks the vial and kills the cat in the time before a researcher is scheduled to look inside. Now, before that observation, quantum mechanics represents the particle with a wave function that encapsulates its two potential destinies (emitted or not) and that suggests that the particle has realized neither. At the same time, entanglement interweaves that wave function with those of the vial and cat, uniting their fates. This leads to a patently absurd description of the situation in the box before it\u2019s opened: The particle is neither emitted nor not; the vial is neither broken nor not; and the cat is neither dead nor alive. Clearly, concluded Schr\u00f6dinger, something is missing in this picture.\n But what\u2019s missing, says the orthodoxy, is an understanding of what physics is really about. \u201cPhysics,\u201d Bohr wrote, \u201cis to be regarded not so much as the study of something a priori given, but as the development of methods for ordering and surveying human experience.\u201d\n If all we ask of physics is that it describe human experience, then the paradox goes away. Quantum mechanics predicts, correctly, that the researcher, upon opening the box, is as likely to find the happy outcome as the alternative. And that\u2019s it. To ask the cat\u2019s condition before that is, from the orthodoxy\u2019s perspective, as inappropriate as asking which way is north from the North Pole.\n Of all the weird things about quantum mechanics, this limitation on the knowable is the weirdest, and the most profound. It suggests that scientists\u2019 most accurate model of the world can\u2019t describe whatever goings-on underlie our observations \u2014 or even be specific about what \u201cobservations\u201d actually are, and what their effects are. Do they affect the cat? Or do they only happen in the observer\u2019s mind? And although most physicists today have given up hope of answering such questions, Schr\u00f6dinger, like Einstein, never did. He called its lack of description a \u201cmuch overrated provisional aspect\u201d of the theory he helped invent, one that resulted, he believed, from an all-too-human desire of his fellow physicists to believe they had found in quantum mechanics a lasting truth.\n Weinberg, who wrote a book titled \u201cDreams of a Final Theory,\u201d mused by phone with me about the possibility that quantum mechanics really is the truth, such that the ultimate theory that physicists dream of would only address human experience and say nothing about nature beyond that. \u201cThat would, to me, be horrible,\u201d he said. \u201cIn fact, I might almost conclude that if that\u2019s what it is, the hell with it.\u201d\n Still, largely because quantum mechanics has passed so many extraordinarily precise tests, collapse models are generally dismissed when considered at all, and few physicists think Bassi will succeed. Even Weinberg, on the phone, characterized his quest as \u201cinteresting\u201d but \u201cto some extent whistling in the dark.\u201d\n The day after his lecture in Trieste, Bassi was driving me in his blue, weather-beaten Peugeot to his hometown, Colloredo di Prato. As the saw-toothed Alps sliced by in the sky out the passenger window, I asked what things were like when he was growing up.\n \u201cThere was this moral aspect of working,\u201d he said, \u201cwhich now in a sense is lost.\u201d Young people now, he said, are too concerned with \u201csuccess\u201d and \u201cbeing known.\u201d\n \u201cSuccess is nothing,\u201d his father taught him. \u201cProper work is what counts.\u201d\n Although Colloredo di Prato and Trieste are just an hour\u2019s drive apart, they are, he told me, \u201creally two different worlds.\u201d Trieste, created ad hoc as a port, is a city of merchants, of buying and selling. His home region, farther inland and with a longer history, is instead a place of artisans and farmers, of making and growing. And you could just as well say \u201creally two different times\u201d about Bassi\u2019s early childhood, which was practically preindustrial. His first home was a two-story brick-and-fieldstone apartment block \u2014 the same his father grew up in \u2014 where a handful of families lived and shared a courtyard for their horses, pigs and cows. A stone outhouse still stands there today, and although indoor plumbing had come by the time Bassi was born, television hadn\u2019t. His first memories include running old-fashioned errands with his mother, to the local grain mill and cheesemaker. One of his first friends was a chicken. Bassi\u2019s older sister, Ivana, fondly recalls the way little Angelo would sit in the middle of their country street and \u201cpamper his beloved hen.\u201d\n His father was a blacksmith, his mother a nurse. His father died four years ago, but Bassi calls his mother every day, and they speak, as they always have, in Friulan, the once-dominant language of the area that is now fast being displaced by Italian.\n Standing in his childhood courtyard, surrounded by the plaster-patched stone walls of empty haylofts and abandoned apartments, it is tempting to draw a line between Bassi\u2019s Old World upbringing and his unfashionable views on physics. Not to mention the church, not a hundred yards away, whose bell tower still looms over the whole charming but decaying scene. Bassi is a practicing Catholic and a believer in God, something he says is \u201cunusual\u201d but \u201cnot rare\u201d among his colleagues at the university. Einstein called his own belief that reality could be understood \u201creligion,\u201d and I wondered if there\u2019s a connection between Bassi\u2019s religious faith and that in what has become essentially a far-right position in physics. I asked him at the picnic table in Zagreb.\n \u201cYes, it is like that,\u201d he said. \u201cThe idea that there is truth and simplicity behind phenomena, if you wish, you can relate it directly to a faith in God that is a unity that gives rise to everything.\u201d\n  \u201cBut it is also an intimate feeling,\u201d he added. \u201cIt is not necessary that I want to link the two things.\u201d\n  \u201cThe simple things in life are the more genuine ones,\u201d he explained. \u201cWhen a person is simple, he\u2019s a better person.\u201d\n The idea that the universe is simpler than it appears is supported by the way advances in physics, from Newton\u2019s to Einstein\u2019s and beyond, have accounted for more and more phenomena with fewer and fewer equations. But as the Cornell University physicist N. David Mermin \u2014 an arch advocate for the orthodoxy and likely the wit behind the phrase \u201cshut up and calculate,\u201d who has avowed that the moon is demonstrably  not there when no one is looking \u2014 argues, taking an assist from the 18th-century philosopher David Hume, historical precedents and inductive reasoning can\u2019t prove anything, not least what reality is really like. I appreciate this argument\u2019s humility, and said so to Bassi across the table.\n There is actually \u201carrogance,\u201d he countered, in the orthodoxy\u2019s assumption that quantum mechanics is correct.\n \u201cThat attitude blocks research, at the end of the day,\u201d he said. \u201cEven if the world is ultimately not understandable, there is no reason to believe we have hit the bottom with quantum mechanics.\u201d\n Bassi told me he started in physics with far more interest in the enlightenment that theories provide than in their utility. Many starry-eyed students start off the same way, but quantum mechanics has a way of dumping water on their dreams. (As someone who finished his physics Ph.D. only to switch to a career in finance once both enlightenment and employment seemed out of reach, I write here from experience.)\n \u201cWhen you are a student, of course, you believe the teacher,\u201d says Detleff D\u00fcrr, a mathematical physicist at the Ludwig Maximilian University of Munich and a mentor to Bassi. \u201cYou think to yourself, OK, there is something in nature, something which is really beyond our understanding.\u201d\n Nonetheless, an incoming student with an inclination to question the orthodoxy could not have picked a much better place and time than the University of Trieste in the 1990s. Giancarlo Ghirardi, who taught Bassi\u2019s first class in quantum mechanics and later became his Ph.D. adviser, and who died in 2018, is remembered at the university as a dedicated and talented teacher. But outside Trieste, Ghirardi is best known for being one of the architects of objective collapse models, which have the potential to settle the debate over what quantum mechanics means.\n Broadly, there are two takes on that question. One is the orthodoxy, also called antirealism (although generally only by the nonorthodox; physicists tend to recoil at being labeled anything other than some version of realist. Mermin, for example, prefers the term \u201cparticipatory realist\u201d). The antirealists are the intellectual heirs of Bohr who believe that physics can only describe the human experience of reality, and that quantum theory\u2019s paradoxes result from misguided attempts to use it to discern the nature of reality itself.\n Then there are the realists (as they happily call themselves), who are, loosely, the scions of Schr\u00f6dinger and Einstein, and who believe that physics can and should describe the world as it exists apart from us \u2014 by explaining, for example, what\u2019s going on with that cat in the box. Two ways of reconciling quantum theory with realism have gained traction. One, popularly known as \u201cmany worlds,\u201d argues that all the possibilities encoded in wave functions actually happen, so that Schr\u00f6dinger\u2019s cat both lives and dies (and, more generally, that everything that can happen does), albeit in different branches of a vast and ever-growing multitude of universes. The other, called Bohmian mechanics, salvages Newton\u2019s \u201cparticles subject to forces\u201d picture, and assigns the cat a single fate, but only by giving particles seemingly supernatural powers, such as the ability to influence one another\u2019s movements across cosmic distances instantaneously and to effectively conceal many of those movements from experiments.\n  Both of these options are strange and both have the embarrassment of forever-invisible features \u2014 such are the contortions physicists must make when imagining realities consistent with quantum theory\u2019s bizarre predictions \u2014 but both also illustrate possible ways that quantum mechanics might actually describe as well as predict. The real problem is that these alternative realities are at odds with each other and with those of other competing interpretations. And that, since mere interpretations of quantum theory make no new predictions, experiments can\u2019t choose between them, so that which a person favors is pretty much a matter of taste.\n \u201cI always considered it rather an empty game,\u201d says Stephen Adler, a physicist at the Institute for Advanced Study in Princeton, and another Bassi mentor and collaborator. \u201cPhysics is an experimental subject. If they can\u2019t be distinguished experimentally, I don\u2019t care what your interpretation is.\u201d\n Ghirardi and his colleagues arrived at objective collapse models by performing a delicate conceptual transplant that excised quantum theory\u2019s references to observation and replaced them with a new mathematical term added to Schr\u00f6dinger\u2019s equation. By inducing objective collapse, the new term transformed the theory from one that describes what observers  see into one that describes the world as it  is (assuming, of course, that the theory is right). The hard part was finding a way to do this that didn\u2019t cause the new\n......", "posttime": "2020-07-06 04:49:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7269\u7406\u5b66\u5bb6,physicist,\u7406\u8bba", "title": "\u53db\u9006\u7684\u7269\u7406\u5b66\u5bb6\u5728\u5bfb\u627e\u6bd4\u91cf\u5b50\u529b\u5b66\u66f4\u597d\u7684\u6545\u4e8b", "title_en": "The Rebel Physicist on the Hunt for a Better Story Than Quantum Mechanics", "transed": 1, "url": "https://www.nytimes.com/2020/06/25/magazine/angelo-bassi-quantum-mechanic.html#", "via": "", "real_tags": ["\u7269\u7406\u5b66\u5bb6", "physicist", "\u7406\u8bba"]}, {"category": "", "categoryclass": "", "imagename": "32e37b91a23db8109095af1514044686.jpeg", "infoid": 1009995, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Simpleton\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684UDP\u5230\u6570\u636e\u5e93\u65e5\u5fd7\u8bb0\u5f55\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u53ea\u63a5\u53d7UDP\u6570\u636e\u5305\u5e76\u5c06\u5176\u5b58\u50a8\u5728SQLite3\u6570\u636e\u5e93\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u5f53\u524d\u76ee\u5f55\u7684simpleton.db\u4e2d\uff0c\u4f46\u60a8\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u9009\u9879\u8986\u76d6\u6b64\u8bbe\u7f6e\u3002\n\u9664\u4e86\u975e\u5e38\u7b80\u5355\u7684\u6d4b\u8bd5\u5916\uff0c\u8fd9\u5bf9\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u662f\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\u3002\n\u8981\u6784\u5efasimpleton\uff0c\u53ea\u9700\u8fd0\u884cmake\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u4f1a\u51fa\u73b0\u5728bin\u76ee\u5f55\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u4e3aOSX\u6784\u5efa\u3002\n\u8981\u4e3a\u5176\u4ed6\u5e73\u53f0\u6784\u5efa\uff0c\u8bf7\u7f16\u8f91Makefile\u4e2d\u7684GOOS\u548cGOARCH\u53d8\u91cf\u3002\u8fd8\u53ef\u4ee5\u5728\u8fd0\u884cmake\u65f6\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u8fd9\u4e9b\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u60a8\u53ef\u4ee5\u5728syslist.go\u4e2d\u627e\u5230\u8fd9\u4e9b\u53d8\u91cf\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u503c\uff0c\u4f46\u6700\u5e38\u89c1\u7684\u503c\u662f\uff1a\n\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6b63\u786e\u7684GOOS\u548cGOARCH\u7ec4\u5408\u6765\u4ea4\u53c9\u7f16\u8bd1(\u4f8b\u5982\u5728OSX\u673a\u5668\u4e0a\u7f16\u8bd1Linux\u4e8c\u8fdb\u5236\u6587\u4ef6)\uff0c\u5c3d\u7ba1Windows\u53ef\u80fd\u4f1a\u9047\u5230\u9ebb\u70e6\u3002(\u6211\u8fd8\u6ca1\u6709\u4e3aWindows\u6784\u5efa\u8fd9\u4e2a)\u3002\n\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c06\u51fa\u73b0\u5728bin\u4e2d\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4ece\u4e3b\u76ee\u5f55\u8fd0\u884c\u5b83\uff1a\n\u4e0b\u9762\u662f\u4e00\u4e2a\u8fd0\u884cSimpleton\u7684\u793a\u4f8b\uff0c\u8be5\u793a\u4f8b\u4f7f\u7528\u9009\u9879\u4f7f\u5176\u4fa6\u542c\u7279\u5b9a\u7684\u63a5\u53e3(\u5728\u8be5\u793a\u4f8b\u4e2d\u4e3a10.1.0.3)\u548c\u7aef\u53e3(7788)\uff0c\u5e76\u5c06\u6570\u636e\u5e93\u5b58\u50a8\u5728/tmp/simpleton.db\u4e2d\uff1a\n\u5982\u679c\u60a8\u60f3\u67e5\u770b\u7ed3\u679c\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5SQLite3\uff0c\u7136\u540e\u4f7f\u7528sqlite3\u547d\u4ee4\u68c0\u67e5\u6570\u636e\u5e93\u3002\u8981\u6253\u5f00\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4e2d\u7684\u6570\u636e\u5e93\uff0c\u53ea\u9700\u8fd0\u884c\uff1a\n\u952e\u5165.schema\u4ee5\u67e5\u770b\u975e\u5e38\u7b80\u5355\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u3002\u73b0\u5728\u53ef\u4ee5\u5bf9\u6570\u636e\u6267\u884cSQL\u8bed\u53e5\u4e86\u3002\n\u6ce8\u610f\uff1a\u6211\u4e0d\u5b8c\u5168\u786e\u5b9aSQLite3\u7684\u5e76\u53d1\u6027\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u4f7f\u7528\u6570\u636e\u5e93\u4f5c\u4e3a\u96c6\u6210\u70b9(\u6c38\u8fdc\u4e0d\u5e94\u8be5)\u3002\n\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4ee3\u7801\u5728\u6570\u636e\u5e93\u8bbf\u95ee\u5468\u56f4\u6709\u4e00\u4e2a\u4e92\u65a5\u9501\u7684\u539f\u56e0\u3002\u4ee3\u7801\u53d6\u81ea\u4e00\u4e2a\u6709\u591a\u4e2a\u5927\u7329\u7329\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u9879\u76ee\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f46\u662f\u6211\u628a\u4e92\u65a5\u9501\u7559\u4e0b\u6765\u53ea\u662f\u4e3a\u4e86\u63d0\u9192\u4e00\u4e0b\u3002\n\u5bf9\u4e8e\u751f\u4ea7\u7528\u9014\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528\u4e3a\u5e76\u53d1\u800c\u6784\u5efa\u7684PostgreSQL\u6570\u636e\u5e93\u6216\u7c7b\u4f3c\u6570\u636e\u5e93\u3002\u4f46\u662f\u5bf9\u4e8e\u5c0f\u578b\u5b9e\u9a8c\uff0c\u5f53\u60a8\u7684\u5e76\u53d1\u6027\u6709\u9650\u65f6\uff0cSQLite3\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u80fd\u529b\u5f3a\u5927\u7684\u5c0f\u91ce\u517d\u3002\n\u8bf7\u6ce8\u610f\uff0cHTTP\u63a5\u53e3\u6ca1\u6709\u8eab\u4efd\u9a8c\u8bc1\u6216\u5b89\u5168\u673a\u5236\uff0c\u56e0\u6b64\u9664\u4e86\u6d4b\u8bd5\u4e4b\u5916\uff0c\u4e0d\u8981\u5c06\u5176\u7528\u4e8e\u4efb\u4f55\u5176\u4ed6\u7528\u9014\u3002Web\u754c\u9762\u7684\u9ed8\u8ba4\u5730\u5740\u4e3a\uff1a\n\u7b2c\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2aJSON\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u51fd\u6570\u4ec5\u8fd4\u56deID\u6307\u5b9a\u7684\u6570\u636e\u6761\u76ee\u7684\u6709\u6548\u8d1f\u8f7d\u3002/Data\u8def\u5f84\u5c06\u4ec5\u9650\u4e8e\u6570\u636e\u5e93\u4e2d\u6700\u65b0\u768420\u4e2a\u6761\u76ee\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u504f\u79fb\u91cf\u548c\u9650\u5236URL\u53c2\u6570\u6765\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u5206\u9875\uff1a\nSimpleton\u652f\u6301\u6709\u4e00\u4e2a\u5305\u542b\u9759\u6001\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5236\u4f5c\u4e00\u4e9bHTML\u9875\u9762\uff0c\u5176\u4e2d\u5305\u542b\u6307\u5411\u5185\u5bb9\u7684\u6709\u7528\u94fe\u63a5\uff0c\u6216\u8005\u53ef\u4ee5\u6258\u7ba1JS-\u524d\u7aef\u5e94\u7528\u7a0b\u5e8f\u3002", "note_en": "Simpleton is a dead simple UDP to database logging solution that justaccepts UDP packets and stores them in an SQLite3 database. Perdefault it stores them in  simpleton.db in the current directory, butyou can override this with command line options.\n This isn&#39;t terribly useful for anything but really simple testing, butyou can expand on it.\n  In order to build simpleton you just run  make and the binary willturn up in the  bin directory. Per default it will build for OSX.\n   To build for other platforms please edit the  GOOS and  GOARCHvariables in the  Makefile. You can also enter these parameters onthe command line when you run  make, like this.\n  You can find the values for these variables for different platforms in syslist.go,but the most common values are:\n  Of course, you can cross compile (eg compile Linux binaries on OSXmachines) by just setting the right combination of GOOS and GOARCH,though Windows you might run into trouble. (I haven&#39;t built this forWindows).\n  The binary will turn up in  bin, so you can run it from the maindirectory with:\n    Here is an example of running Simpleton with options to make it listento a particular interface (10.1.0.3 in the example) and port (7788)and store the database in  /tmp/simpleton.db:\n   If you want to poke around the resulting database you can installSQLite3 on your machine and inspect the database using the  sqlite3command. To open the database in the previous example just run:\n  Type  .schema to see the very simple database schema. You can nowperform SQL statements on the data.\n Note: I&#39;m not entirely sure about the concurrency of SQLite3 so Iwouldn&#39;t use the database as an integration point (you never should).\n This is also why the code has a mutex lock around database accesses.The code was taken from a project that has multiple goroutinesaccessing the database. This program doesn&#39;t have that, but I leftthe mutex locking in just as a reminder.\n For production uses you should use a PostgreSQL database or similar,that is built for concurrency. But for small experiments and when youhave limited concurrency, SQLite3 is a surprisingly capable littlebeast.\n  Note that the HTTP interface has  no authentication or securitymechanisms so don&#39;t use this for anything other than testing. Thedefault address of the web interface is:\n    The first returns a JSON array, the second only returns the payload ofthe data entry given by ID. The  /data path will be limited to justthe 20 newest entries in the database, but you can page through thedatabase by setting  offset and  limit URL parameters:\n  Simpleton supports having a directory with static files so that youcan make some HTML pages with useful links to the content or perhapsto host JS-frontend applications.", "posttime": "2020-07-06 04:29:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sqlite,udp,simple,\u6570\u636e\u5e93", "title": "Simpleton\uff0c\u4e00\u4e2a\u4eceUDP\u5230SQLite\u7684\u7b80\u5355\u5de5\u5177", "title_en": "Simpleton, a simple tool for UDP to SQLite", "transed": 1, "url": "https://github.com/borud/simpleton", "via": "", "real_tags": ["sqlite", "udp", "simple", "\u6570\u636e\u5e93"]}, {"category": "", "categoryclass": "", "imagename": "b959bc0e020450b9f12c6ba789471e22.jpg", "infoid": 1009994, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u7b2c\u4e00\u53f0\u8054\u7f51\u7684\u51b0\u7bb1\u9192\u6765\u5e76\u8981\u6c42\u66f4\u591a\u725b\u5976\u4ee5\u6765\uff0c\u201c\u7269\u8054\u7f51\u201d(IoT)\u5c31\u4e00\u76f4\u4e0d\u5b89\u5168\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u51b0\u7bb1\u88ab\u9ed1\u770b\u8d77\u6765\u5145\u5176\u91cf\u662f\u6709\u8da3\u7684\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u65b9\u4fbf\u7684\uff0c\u4f46\u5669\u68a6\u822c\u7684\u573a\u666f\u662f\u4e00\u4e2a\u56fd\u5bb6\u5b89\u5168\u95ee\u9898\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u6570\u5341\u4e07\u53f0\u667a\u80fd\u51b0\u7bb1\uff0c\u90fd\u6709\u76f8\u540c\u7684\u9ed8\u8ba4\u5bc6\u7801\uff0c\u88ab\u9ed1\u5ba2\u5165\u4fb5\uff0c\u5c06\u5927\u91cf\u7f51\u7edc\u6d41\u91cf\u5f15\u5bfc\u5230\u5173\u952e\u7684\u4e92\u8054\u7f51\u670d\u52a1\u5668\u4e0a\uff0c\u4f7f\u5b83\u4eec\u9677\u5165\u762b\u75ea\u3002\u628a\u667a\u80fd\u51b0\u7bb1\u6362\u6210\u5b89\u5168\u6444\u50cf\u5934\u548cDVD\u64ad\u653e\u5668\uff0c\u4f60\u5c31\u6709\u4e862016\u5e74\u7684Dyn\u7f51\u7edc\u653b\u51fb\u3002\n\u5927\u591a\u6570\u5bb6\u5ead\u7f51\u7edc\u548c\u8bb8\u591a\u5de5\u4e1a\u7f51\u7edc\u7684\u6838\u5fc3\u662f\u4e0d\u8d77\u773c\u7684\u65e0\u7ebf\u8def\u7531\u5668\u3002\u8fd9\u4e9b\u5e7f\u53d7\u6b22\u8fce\u7684\u96c6\u7ebf\u5668\u7684\u5b89\u5168\u6027\u662f\u4e00\u4e2a\u7a81\u51fa\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u6784\u6210\u4e86\u7269\u8054\u7f51\u7f51\u7edc\u7684\u6838\u5fc3\u3002\u4e0e\u8fd0\u884c\u8fd9\u4e9b\u8bbe\u5907\u7684\u4ee3\u7801\u4e2d\u4e0d\u65ad\u62ab\u9732\u7684\u91cd\u5927\u5b89\u5168\u6f0f\u6d1e(\u5305\u62ec\u4ec5\u5728\u8fc7\u53bb\u4e00\u4e2a\u6708\u51fa\u73b0\u7684\u51e0\u4e2a\u6f0f\u6d1e)\u76f8\u6bd4\uff0c\u7814\u7a76\u4eba\u5458\u5728\u8fc7\u53bb15\u5e74\u91cc\u5728\u8def\u7531\u5668\u5b89\u5168\u65b9\u9762\u51e0\u4e4e\u6ca1\u6709\u770b\u5230\u4ec0\u4e48\u8fdb\u5c55\u3002\u5bb6\u7528Wi-Fi\u8def\u7531\u5668\u4e2d\u5b58\u5728\u4e25\u91cd\u6f0f\u6d1e\uff0c\u53ef\u80fd\u4f1a\u4e3a\u653b\u51fb\u8005\u6253\u5f00\u8fdb\u5165\u672c\u5730\u7f51\u7edc\u548c\u5176\u4ed6\u8fde\u63a5\u7cfb\u7edf\u7684\u5927\u95e8\u3002\u968f\u7740\u7f8e\u56fd\u9762\u4e34\u7740\u5229\u7528\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5e26\u6765\u7684\u5e7f\u6cdb\u4e0d\u786e\u5b9a\u6027\u548c\u6df7\u4e71\u7684\u88ad\u51fb\u6fc0\u589e\uff0c\u8fd9\u4e9b\u62c5\u5fe7\u53d8\u5f97\u66f4\u52a0\u7d27\u8feb\u3002\n\u8def\u7531\u5668\u4f53\u73b0\u4e86\u7269\u8054\u7f51\u5b89\u5168\u9762\u4e34\u7684\u6311\u6218\uff1a\u65e5\u76ca\u6269\u5927\u7684\u4f9d\u8d56\u6027\u3001\u7cdf\u7cd5\u7684\u5b89\u5168\u5b9e\u8df5\uff0c\u4ee5\u53ca\u603b\u90e8\u8bbe\u5728\u4e16\u754c\u5404\u5730\u7684\u5236\u9020\u5546\u8d85\u51fa\u4e86\u5355\u4e00\u53f8\u6cd5\u7ba1\u8f96\u533a\u7684\u8303\u56f4\u3002\n\u8fd9\u4e2a\u7ba1\u8f96\u6743\u95ee\u9898\u81f3\u5173\u91cd\u8981\u3002\u5373\u4f7f\u5728\u7f8e\u56fd\u7f51\u7edc\u7a7a\u95f4\u65e5\u5149\u59d4\u5458\u4f1a\u63d0\u51fa\u7684\u90a3\u79cd\u5f97\u5230\u56fd\u4f1a\u652f\u6301\u7684\u6267\u6cd5\u7684\u652f\u6301\u4e0b\uff0c\u4e3a\u5236\u9020\u5546\u63d0\u4f9b\u4e86\u660e\u786e\u7684\u5b89\u5168\u6846\u67b6\uff0c\u8fd9\u4e2a\u5e02\u573a\u4e0a\u7684\u5927\u591a\u6570\u5236\u9020\u5546\u4e5f\u90fd\u603b\u90e8\u8bbe\u5728\u7f8e\u56fd\u4ee5\u5916\u3002\u7269\u8054\u7f51\u4f9b\u5e94\u94fe\u662f\u5168\u7403\u6027\u7684\uff0c\u4efb\u4f55\u653f\u7b56\u89e3\u51b3\u65b9\u6848\u90fd\u5fc5\u987b\u8003\u8651\u5230\u8fd9\u4e00\u4e8b\u5b9e\u3002\n\u5728\u4e00\u7bc7\u65b0\u7684\u8bba\u6587\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u5229\u7528\u8fd9\u4e9b\u4f9b\u5e94\u94fe\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u90e8\u5206\u3002\u5411\u7f8e\u56fd\u6d88\u8d39\u8005\u9500\u552e\u901a\u5e38\u9700\u8981\u7269\u8054\u7f51\u5236\u9020\u5546\u901a\u8fc7\u7f8e\u56fd\u5b50\u516c\u53f8\u9500\u552e\uff0c\u6216\u8005\u66f4\u5e38\u89c1\u7684\u662f\uff0c\u901a\u8fc7\u767e\u601d\u4e70(Best Buy)\u6216\u4e9a\u9a6c\u900a(Amazon)\u7b49\u56fd\u5185\u5206\u9500\u5546\u9500\u552e\u3002\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u53ef\u4ee5\u5bf9\u8be5\u5206\u9500\u5546\u65bd\u52a0\u76d1\u7ba1\u538b\u529b\uff0c\u8981\u6c42\u5176\u53ea\u9500\u552e\u7b26\u5408\u7f8e\u56fd\u7f51\u7edc\u5b89\u5168\u673a\u6784\u5f00\u53d1\u7684\u5b89\u5168\u6846\u67b6\u8981\u6c42\u7684\u4ea7\u54c1\u3002\u8fd9\u5c06\u7ed9\u5236\u9020\u5546\u5e26\u6765\u538b\u529b\uff0c\u8981\u6c42\u4ed6\u4eec\u786e\u4fdd\u81ea\u5df1\u7684\u4ea7\u54c1\u7b26\u5408\u8fd9\u4e00\u5b89\u5168\u6846\u67b6\u4e2d\u89c4\u5b9a\u7684\u6807\u51c6\uff0c\u5305\u62ec\u5411\u4ed6\u4eec\u7684\u7ec4\u4ef6\u4f9b\u5e94\u5546\u548c\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u65bd\u538b\uff0c\u8981\u6c42\u4ed6\u4eec\u786e\u4fdd\u63d0\u4f9b\u7b26\u5408\u516c\u8ba4\u5b89\u5168\u6846\u67b6\u7684\u90e8\u4ef6\u3002\n\u516c\u53f8\u8981\u6c42\u53ef\u6d4b\u8bd5\u7684\u7269\u8054\u7f51\u6807\u51c6\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u51c6\u786e\u3001\u4e00\u81f4\u5730\u5411\u5ba2\u6237\u4f20\u8fbe\u5176\u9500\u552e\u7684\u4ea7\u54c1\u7684\u5b89\u5168\u6027\u3002\u50cf\u5854\u5409\u7279\u8fd9\u6837\u7684\u5206\u9500\u5546\u5df2\u7ecf\u6709\u4e86\u5185\u90e8\u6d41\u7a0b\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u8d27\u67b6\u4e0a\u7684\u6240\u6709\u4ea7\u54c1\u90fd\u7b26\u5408\u76f8\u5173\u7684\u5b89\u5168\u548c\u8d28\u91cf\u6807\u51c6\u3002\u50cf\u6700\u8fd1\u7684NIST\u5185\u90e8\u62a5\u544a8259\u8fd9\u6837\u7684\u52aa\u529b\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u6846\u67b6\u7684\u5f88\u597d\u7684\u5019\u9009\u8005\uff0c\u9632\u6b62\u4e86\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u4e0d\u5f97\u4e0d\u8ba4\u53ef\u6216\u9881\u5e03\u81ea\u5df1\u7684\u6807\u51c6\u3002\u5176\u4ed6\u4f8b\u5b50\uff0c\u5982\u65e5\u672c\u653f\u5e9c\u7684\u7269\u8054\u7f51\u5b89\u5168\u5b89\u5168\u6846\u67b6\uff0c\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8868\u793a\u4e86\u503c\u5f97\u6b22\u8fce\u7684\u5173\u5207\uff0c\u4f46\u76ee\u524d\u592a\u62bd\u8c61\u4e86\uff0c\u65e0\u6cd5\u5728\u5236\u9020\u548c\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u5f3a\u5236\u6267\u884c\u3002\n\u6b64\u5916\uff0c\u56fd\u5bb6\u6807\u7b7e\u8ba1\u5212\u5c06\u5e2e\u52a9\u5206\u9500\u5546\u8bc6\u522b\u7b26\u5408\u8981\u6c42\u7684\u4ea7\u54c1\uff0c\u5e76\u4e3a\u6d88\u8d39\u8005\u5411\u5236\u9020\u5546\u65bd\u538b\u63d0\u4f9b\u9014\u5f84\u3002\u6700\u8fd1\u7684\u4e00\u9879\u8c03\u67e5\u53d1\u73b0\uff0c87%\u7684\u6d88\u8d39\u8005\u8ba4\u4e3a\u786e\u4fdd\u7269\u8054\u7f51\u4ea7\u54c1\u5b89\u5168\u662f\u5236\u9020\u5546\u7684\u8d23\u4efb\u3002\u6807\u7b7e\u8ba1\u5212\u5c06\u4e3a\u8fd9\u79cd\u60c5\u7eea\u63d0\u4f9b\u53e6\u4e00\u6761\u5851\u9020\u5e02\u573a\u7684\u9014\u5f84\u3002\u7f51\u7edc\u7a7a\u95f4\u65e5\u5149\u59d4\u5458\u4f1a\u5efa\u8bae\u8bbe\u7acb\u4e00\u4e2a\u56fd\u5bb6\u7f51\u7edc\u5b89\u5168\u8ba4\u8bc1\u548c\u6807\u7b7e\u7ba1\u7406\u5c40\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u96c6\u4e2d\u5e02\u573a\u4fe1\u606f\uff0c\u4e86\u89e3\u826f\u597d\u7684\u5b89\u5168\u505a\u6cd5\uff0c\u5e76\u5411\u7528\u6237\u63d0\u4f9b\u6613\u4e8e\u83b7\u5f97\u7684\u8bc4\u7ea7\u3002\u4e0a\u4e2a\u6708\uff0c\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon)\u7684CyLab\u5c55\u793a\u4e86\u4e00\u4e2a\u7269\u8054\u7f51\u5b89\u5168\u6807\u7b7e\u539f\u578b\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u57fa\u4e8e\u51e0\u5e74\u7684\u5de5\u4f5c\uff0c\u65e8\u5728\u5c06\u5173\u952e\u5b89\u5168\u63aa\u65bd\u538b\u7f29\u5230\u4e00\u7ec4\u7b80\u6d01\u7684\u6587\u5b57\u548c\u56fe\u50cf\u4e2d\u3002\n\u8fd9\u4e9b\u653f\u7b56\u5de5\u5177\u5e76\u4e0d\u5c40\u9650\u4e8e\u7f8e\u56fd\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u65b0\u52a0\u5761\u516c\u5e03\u4e86\u81ea\u5df1\u7684\u8ba1\u5212\uff0c\u4e3aWi-Fi\u8def\u7531\u5668\u548c\u667a\u80fd\u5bb6\u5c45\u4ea7\u54c1\u5236\u5b9a\u8fd9\u6837\u7684\u6807\u7b7e\u8ba1\u5212\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u9f13\u821e\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u8fd9\u53ef\u80fd\u662f\u5c06\u5b89\u5168\u6027\u4e0d\u4f73\u7684\u7269\u8054\u7f51\u8bbe\u5907\u4ece\u5168\u7403\u5e02\u573a\u4e0a\u79fb\u9664\u7684\u53ef\u884c\u65b9\u5f0f\u3002\u82f1\u56fd\u7684\u4e1a\u52a1\u5b88\u5219\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u673a\u4f1a\uff0c\u8ba9\u96f6\u552e\u5546\u548c\u5206\u9500\u5546\u5bf9\u4ed6\u4eec\u9500\u552e\u7684\u4ea7\u54c1\u8d1f\u8d23\uff0c\u4e3a\u7269\u8054\u7f51\u5236\u9020\u5546\u548c\u670d\u52a1\u63d0\u4f9b\u5546\u63d0\u4f9b\u4e8613\u6761\u5b89\u5168\u6307\u5357\u3002\u57282019\u5e74\u7684\u4e00\u6b21\u516c\u4f17\u54a8\u8be2\u4e4b\u540e\uff0c\u82f1\u56fd\u653f\u5e9c\u63a2\u7d22\u4e86\u4e00\u9879\u5f3a\u5236\u6027\u7684\u5b89\u5168\u6807\u7b7e\u8ba1\u5212\uff0c\u4ee5\u53ca\u5f7b\u5e95\u7981\u6b62\u9500\u552e\u4e0d\u7b26\u5408\u524d\u4e09\u5927\u51c6\u5219\u7684\u4ea7\u54c1\uff1a\u6ca1\u6709\u9ed8\u8ba4\u5bc6\u7801\uff0c\u5b9e\u65bd\u6f0f\u6d1e\u62ab\u9732\u653f\u7b56\uff0c\u4ee5\u53ca\u7531\u62a5\u5e9f\u653f\u7b56\u652f\u6301\u7684\u5b9a\u671f\u8f6f\u4ef6\u66f4\u65b0\u3002\u5728\u82f1\u56fd\u5de5\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u6b27\u6d32\u7535\u4fe1\n\u8fd9\u4e9b\u52aa\u529b\u4e2d\u7684\u4efb\u4f55\u4e00\u9879\u90fd\u53ef\u4ee5\u4e3a\u56fd\u9645\u5b89\u5168\u6846\u67b6\u63d0\u4f9b\u4e00\u4e2a\u6709\u6548\u7684\u5019\u9009\u8005\uff0c\u7279\u522b\u662f\u5982\u679c\u4e0e\u7f8e\u56fd\u7684\u6807\u51c6\u76f8\u534f\u8c03\u7684\u8bdd\u3002\u4e0e\u7269\u8054\u7f51\u4ea7\u54c1\u62e5\u6709\u4e3b\u8981\u5e02\u573a\u7684\u5176\u4ed6\u56fd\u5bb6\u8fdb\u884c\u8de8\u56fd\u534f\u8c03\uff0c\u5bf9\u4e8e\u9632\u6b62\u5236\u9020\u5546\u8df3\u8fc7\u7ba1\u8f96\u6743\u81f3\u5173\u91cd\u8981\u3002\u9274\u4e8e\u6b27\u76df\u6700\u8fd1\u5bf9\u5b89\u5168\u6807\u51c6\u548c\u8ba4\u8bc1\u7684\u5173\u6ce8\uff0c\u6b27\u6d32\u662f\u6b64\u7c7b\u5408\u4f5c\u7684\u91cd\u8981\u5408\u4f5c\u4f19\u4f34\u3002\n\u7269\u8054\u7f51\u5b89\u5168\u72b6\u51b5\u4e0d\u4f73\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\uff0c\u4f46\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u8d8a\u6765\u8d8a\u591a\u7684\u653f\u7b56\u4e3e\u63aa\u548c\u5b89\u5168\u6807\u51c6\u662f\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u8ff9\u8c61\u3002\u5982\u679c\u8fd9\u4e9b\u52aa\u529b\u7531\u4e8e\u7ba1\u8f96\u8303\u56f4\u548c\u56fd\u5185\u6267\u6cd5\u7684\u9650\u5236\u800c\u53d7\u632b\uff0c\u5c06\u662f\u5bf9\u516c\u5171\u5229\u76ca\u7684\u771f\u6b63\u635f\u5931\u3002\u5efa\u7acb\u548c\u534f\u8c03\u8de8\u5883\u5b89\u5168\u6807\u51c6\u662f\u8fc8\u5411\u66f4\u5b89\u5168\u7684\u7269\u8054\u7f51\u751f\u6001\u7cfb\u7edf\u7684\u91cd\u8981\u4e00\u6b65\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7269\u8054\u7f51\u4f9b\u5e94\u94fe\u4e00\u76f4\u662f\u98ce\u9669\u8fdb\u5165\u6211\u4eec\u5bb6\u5ead\u7684\u6e20\u9053\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u6e20\u9053\u5728\u6574\u4e2a\u4f9b\u5e94\u94fe\u4e2d\u63a8\u52a8\u5b89\u5168\u63aa\u65bd\u7684\u6062\u590d\u3002", "note_en": "The \u201cinternet of things\u201d (IoT) has been insecure since the first connected refrigerator woke up and asked for more milk. But while having your fridge hacked seems at best amusing and at worst inconvenient, the nightmare scenario is a matter of national security. Imagine hundreds of thousands of smart refrigerators, all with the same default password, hacked to direct a flood of web traffic against key internet servers, paralyzing them. Swap smart fridges for security cameras and DVD players, and you have the Dyn cyberattack of 2016.\n At the heart of most home networks, and many industrial ones, is the humble wireless router. The security of these popular hubs is a prominent concern because they form the core of IoT networks. Against the steady drumbeat of major security flaws disclosed in the code running these devices\u2014including  several  in just the past month\u2014researchers have seen  little progress in router security over the  past 15 years.  Serious vulnerabilities in home Wi-Fi routers can open the door for attackers to gain access to local networks and other connected systems. As the U.S. faces a surge of  attacks exploiting the widespread uncertainty and confusion wrought by the coronavirus pandemic, these concerns have become all the more urgent.\n Routers exemplify the challenges for IoT security: widening dependence, poor security practices, and manufacturers based around the world beyond the reach of a single jurisdiction.\n This issue of jurisdiction is critical. Even with a clear security framework for manufacturers, supported by the kind of congressionally backed enforcement  proposed by the U.S.  Cyberspace Solarium Commission, most manufacturers in this market are based outside the United States. The IoT supply chain is global, and any policy solution must account for this fact.\n In a  new paper, we propose to leverage these supply chains as part of the solution. Selling to U.S. consumers generally requires that IoT manufacturers sell through a U.S. subsidiary or, more commonly, a domestic distributor like Best Buy or Amazon. The Federal Trade Commission can apply regulatory pressure to this distributor to sell only products that meet the requirements of a security framework developed by U.S. cybersecurity agencies. That would put pressure on manufacturers to make sure their products are compliant with the standards set out in this security framework, including pressuring  their component vendors and original device manufacturers to make sure they supply parts that meet the recognized security framework.\n Companies are asking for testable IoT standards that would help them accurately and consistently communicate the safety of the products they sell to customers. Distributors like Target already have  internal processes in place to ensure that all products on their shelves comply with relevant safety and quality standards. Efforts like the recent  NIST Internal Report 8259 are good candidates for such a framework, preventing the Federal Trade Commission from having to endorse or promulgate its own standards. Other examples, like the Japanese government\u2019s  IoT Security  Safety  Framework, evince welcome concern about the issue but, at present, are too abstract to be enforceable on manufacturing and design processes.\n Additionally, a national labeling scheme would help distributors identify compliant products and provide a pathway for consumer pressure on manufacturers. One  recent survey found 87 percent of consumers believe it is the manufacturer\u2019s responsibility to secure their IoT products. A labeling scheme would provide another pathway for that sentiment to shape the marketplace. The Cyberspace Solarium Commission\u2019s recommendation for a  National Cybersecurity Certification and Labeling Authority would help concentrate market information about good security practices and provide accessible ratings to users. Last month, Carnegie Mellon\u2019s CyLab  demonstrated a prototype IoT security labeling scheme, based on several years of work meant to condense key security measures into a concise set of words and images.\n These policy tools are not limited to the United States. Earlier this year,  Singapore unveiled its own plan for such a labeling scheme for Wi-Fi routers and smart home products, an encouraging sign that this could be a feasible way to remove poorly secured IoT devices from the global market. The  U.K.\u2019s Code of Practice presents a similar opportunity to hold retailers and distributors accountable for products they sell, offering 13 security guidelines for IoT manufacturers and service providers. Following a public consultation in 2019, the U.K. government  explored a mandatory security labeling scheme, as well as an outright ban of the sale of products that do not adhere to the top three guidelines: no default passwords, implementation of a vulnerability disclosure policy, and regular software updates backed by an end-of-life policy. Building on the U.K.\u2019s work, the  European Telecommunications Standards Institute (ETSI) launched its consumer IoT security standard last year, while the EU Agency for Cybersecurity published its  Good Practices report outlining baseline security recommendations for the IoT. A  proposal from Australia\u2019s IoT Alliance for an independent certification scheme, called Trust Mark, would provide the kind of security labeling we call for.\n Any of these efforts could provide an effective candidate for an international security framework, especially if harmonized with a U.S. standard. Cross-national coordination with other countries that have major markets for IoT products is crucial for preventing jurisdiction hopping by manufacturers. Europe is an important partner for such cooperation, given the EU\u2019s recent focus on  security standards and  certification.\n The poor state of IoT security is nothing new, but the growing array of policy initiatives and security standards to address it is a welcome sign. It would be a genuine loss for the public interest if these efforts floundered due to jurisdictional boundaries and the limitations of domestic enforcement. Establishing and harmonizing security standards across borders is an important step toward a more secure IoT ecosystem. The IoT supply chain has so far been a channel for risk into our homes. We can use that same channel to push security back up through the supply chain.", "posttime": "2020-07-06 04:29:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7269\u8054\u7f51,\u4f9b\u5e94\u94fe,security,\u5b89\u5168", "title": "\u7269\u8054\u7f51\u4f9b\u5e94\u94fe\u7684\u7ea7\u8054\u5b89\u5168\u6027(Herr\u3001Kim\u548cBruce Schneier)", "title_en": "Cascading Security Through the IoT Supply Chain (Herr, Kim and Bruce Schneier)", "transed": 1, "url": "https://www.lawfareblog.com/cascading-security-through-internet-things-supply-chain", "via": "", "real_tags": ["\u7269\u8054\u7f51", "\u4f9b\u5e94\u94fe", "security", "\u5b89\u5168"]}, {"category": "", "categoryclass": "", "imagename": "5081b3606c6af6e6d5e9304d1c2bf070.jpeg", "infoid": 1009993, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u55e8\uff0c\u6211\u662f\u8d1d\u68ee\u3002\u6211\u662f\u4e00\u4e2a\u8425\u9500\u5458\uff0c\u6280\u672f\u7231\u597d\u8005\u548c\u597d\u5947\u5fc3\u3002\u201c\u52c7\u6562\u8005\u201d\u662f\u6211\u63a2\u7d22\u5173\u4e8e21\u4e16\u7eaa\u7684\u97e7\u6027\u3001\u9002\u5e94\u6027\u548c\u7a33\u5065\u6027\u7684\u60f3\u6cd5\u7684\u5730\u65b9\u3002\n\u6211\u4e0d\u6253\u7b97\u5217\u51fa2020\u5e74\u56f0\u6270\u4eba\u7c7b\u7684\u5404\u79cd\u95ee\u9898\u3002\u4ece\u6c14\u5019\u5371\u673a\u5230\u5168\u7403\u5927\u6d41\u884c\uff0c\u53ef\u4ee5\u516c\u5e73\u5730\u8bf4\u3002\u662f\u3002\u4e0d\u3002\u5f88\u6b63\u5e38\u3002\n\u4eba\u4eec\u82b1\u8d39\u5927\u91cf\u7cbe\u529b\u8bd5\u56fe\u627e\u51fa\u5386\u53f2\u4e8b\u4ef6\u7684\u786e\u5207\u539f\u56e0\u3002\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u5f52\u56e0\u4e8e\u4e00\u4e9b\u5173\u952e\u65f6\u523b--\u5f17\u6717\u8328\u00b7\u8d39\u8fea\u5357\u5fb7\u9047\u523a\u6216\u51e1\u5c14\u8d5b\u6761\u7ea6\u7684\u5047\u5b9a\u6761\u6b3e\u3002\u6211\u4eec\u5bfb\u627e\u5bb9\u6613\u8bc6\u522b\u7684\u56e0\u679c\u5173\u7cfb\u3002\n\u5f53\u5386\u53f2\u5b66\u5bb6\u5ba1\u89c6\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u65f6\uff0c\u65e0\u7591\u4e5f\u662f\u5982\u6b64\u3002\u5c06\u786e\u5b9a\u5206\u6c34\u5cad\uff0c\u6311\u9009\u65f6\u523b\uff0c\u5e76\u5c06\u5176\u6307\u5b9a\u4e3a\u5173\u952e-\u4f24\u4ea1101\u3002\n\u6211\u4eec\u8fd9\u6837\u505a\u7684\u90e8\u5206\u539f\u56e0\u662f\u5f88\u96be\u7406\u89e3\u8fd9\u4e2a\u590d\u6742\u7684\u7ed3\u6784\u3002\u5982\u679cx\u662f\u660e\u663e\u53ef\u8bc6\u522b\u7684\uff0c\u90a3\u4e48\u5c31\u66f4\u5bb9\u6613\u63d0\u51fax\u5bfc\u81f4y\u7684\u8bba\u70b9\u3002\u6211\u4eec\u4e5f\u503e\u5411\u4e8e\u7ebf\u6027\u53d9\u4e8b\uff0c\u5728\u90a3\u91cc\u60c5\u8282\u7684\u8303\u56f4\u6709\u9650\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u3002\n\u6211\u6000\u7591\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eca\u5929\u8fd9\u6837\u7684\u771f\u76f8\uff0c\u662f\u66f4\u52a0\u9634\u9669\u548c\u4e4f\u5473\u7684\u2026\u3002\u3002\n\u51a0\u72b6\u75c5\u6bd2\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u8be5\u75c5\u6bd2\u901a\u8fc7\u52ab\u6301\u6211\u4eec\u7684\u65e5\u5e38\u751f\u6d3b--\u793e\u4ea4\u3001\u65c5\u884c\u3001\u8fd1\u8ddd\u79bb\u5de5\u4f5c--\u6210\u529f\u5730\u5728\u5168\u7403\u8303\u56f4\u5185\u4f20\u64ad\u3002\n\u4e3a\u4e86\u51cf\u5c11\u611f\u67d3\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5fc5\u987b\u5f7b\u5e95\u6539\u53d8\u65e5\u5e38\u751f\u6d3b\uff0c\u79ef\u6781\u529d\u963b\u6211\u4eec\u6240\u6709\u4eba\u90fd\u73cd\u89c6\u7684\u65e5\u5e38\u884c\u52a8\u3002\n\u5f53\u6d89\u53ca\u5230\u6211\u4eec\u5f71\u54cd\u672a\u6765\u7684\u80fd\u529b\u65f6\uff0c\u6211\u5e76\u6ca1\u6709\u8ba9\u6211\u4eec\u611f\u5230\u65e0\u80fd\u4e3a\u529b\uff0c\u76f8\u53cd\uff0c\u6211\u53d1\u73b0\u8fd9\u4e2a\u60f3\u6cd5\u8d4b\u4e88\u4e86\u6211\u4eec\u529b\u91cf\u3002\n\u6211\u4eec\u4e0d\u80fd\u518d\u5c06\u201c\u4e16\u754c\u72b6\u51b5\u201d\u5b8c\u5168\u5f52\u548e\u4e8e\u653f\u5e9c\u3001\u5355\u4e2a\u4e8b\u4ef6\u6216\u4e2a\u522b\u884c\u4e3a\u8005-\u6211\u4eec\u90fd\u662f\u8bbe\u8ba1\u548c\u9a71\u52a8\u6211\u4eec\u751f\u6d3b\u7684\u4e16\u754c\u7684\u540c\u8c0b\u3002\n\u4f60\u9009\u62e9\u548c\u8c01\u4e00\u8d77\u82b1\u94b1\u4f1a\u5f71\u54cd\u516c\u53f8\u5728\u516c\u5e73\u5de5\u8d44\u548c\u53ef\u6301\u7eed\u5546\u4e1a\u5b9e\u8df5\u7b49\u95ee\u9898\u4e0a\u7684\u884c\u52a8\u3002\n\u5728\u4f60\u7684\u670b\u53cb\u5708\u6216\u5de5\u4f5c\u4e2d\u516c\u5f00\u53cd\u5bf9\u79cd\u65cf\u4e3b\u4e49\u6216\u6b67\u89c6\u6027\u8bed\u8a00\u4f1a\u4f7f\u6709\u95ee\u9898\u7684\u8bdd\u8bed\u53d8\u5f97\u4e0d\u6b63\u5e38\u3002\n\u5728100\u591a\u5929\u7684\u8fdc\u7a0b\u5de5\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5f00\u59cb\u95ee-\u201c\u8fd9\u662f\u5de5\u4f5c\u7684\u672a\u6765\u5417\uff1f\u201d\u5728\u6700\u65b0\u7684\u8fd9\u4e00\u96c6\u4e2d\uff0c\u6211\u4e0e\u4e16\u754c\u4e0a\u6700\u5927\u7684\u5168\u8fdc\u7a0b\u7ec4\u7ec7GitLab Inc.\u7684\u8fdc\u7a0b\u4e3b\u7ba1\u8fbe\u4f26\u00b7\u9ed8\u592b(Darren Murph)\u804a\u5929\u3002\n\u8c22\u8c22\u4f60\u7684\u9605\u8bfb\u3002\u5982\u679c\u60a8\u559c\u6b22\u65f6\u4e8b\u901a\u8baf\uff0c\u8bf7\u5c06\u5176\u8f6c\u53d1\u7ed9\u670b\u53cb\u6216\u540c\u4e8b\u3002\u6211\u4e5f\u559c\u6b22\u53cd\u9988\u3001\u60f3\u6cd5\u6216\u5efa\u8bae-\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3hello@bethan vincent.com", "note_en": "Hi, I\u2019m Bethan.  I\u2019m a marketer, tech enthusiast and curious mind. The Brave is where I explore ideas around resilience, adaptability and robustness in the 21st century.\n  I\u2019m not going to the list the various issues plaguing humanity in 2020. From the climate crisis to a global pandemic, it\u2019s fair to say that things. are. not. normal.\n    People expend a lot of energy trying to pinpoint the exact cause of historical events. WW1 is attributed to a number of pivotal moments - the assassination of Franz Ferdinand or the putative terms of the Treaty of Versailles. We look for easily identifiable cause and effect.\n The same will undoubtedly be true when historians come to examine our own age. Watersheds will be identified, moments will be picked out and earmarked as pivotal - casualty 101.\n We do this in part because it\u2019s hard to make sense of the complex. It\u2019s much easier to make an argument that x led to y if x is clearly identifiable. We also gravitate to linear narratives where the plot is limited in scope and easy to follow.\n The truth of why we are where we are is, I suspect, far more insidious and boring\u2026.\n  Coronavirus is an excellent example of this. The virus has managed to spread globally by hi-jacking our normal daily routines - socialising, travelling, working in close proximity to others.\n To reduce infections we had to practically turn ordinary life on its head and actively discourage the daily actions we all hold dear.\n Instead of making us feel powerless when it comes to our ability to influence the future, I actually find this thought empowering.\n   We can no longer blame the \u201cstate of the world\u201d wholly on the government, single events or individual actors - we are all complicit in designing and driving the world we live in.\n  Who you choose to spend your money with influences corporate action on issues like fair wages and sustainable business practices\n Speaking up against racist or discriminatory language in your friendship group or at work de-normalises problematic discourse\n          After over a 100 days of working remotely, a lot of us are starting to ask - \u201cis this the future of work?\u201d   In this latest episode I chat to\u00a0  Darren Murph, Head of Remote at\u00a0  GitLab Inc., the world\u2019s largest all remote organisation.\n  Thanks for reading. If you enjoyed newsletter, please forward it to a friend or colleague. I also love feedback, ideas or suggestions - please email hello@bethanvincent.com", "posttime": "2020-07-06 04:29:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u671f,times,\u60f3\u6cd5", "title": "\u975e\u5e38\u65f6\u671f\u9700\u8981\u5e73\u51e1\u7684\u884c\u4e3a", "title_en": "Extraordinary Times Need Ordinary Behaviours", "transed": 1, "url": "https://thebrave.substack.com/p/10-extraordinary-times-need-ordinary", "via": "", "real_tags": ["\u65f6\u671f", "times", "\u60f3\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "68dffa8f6c561015e51f965e42e5ae12.png", "infoid": 1009992, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528\u6301\u7eed\u96c6\u6210\u548c\u90e8\u7f72(CI/CD)\u66f4\u5feb\u5730\u90e8\u7f72\u4ee3\u7801\u3001\u9632\u6b62\u5b95\u673a\u5e76\u8282\u7701\u8d44\u91d1\u3002", "note_en": "Deploy code faster, protect against outages, and save money using continuous integration and deployment (CI/CD).", "posttime": "2020-07-06 04:28:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u65af,kubernetes,\u90e8\u7f72", "title": "\u5e93\u4f2f\u5185\u65af\u6f2b\u753b", "title_en": "Kubernetes Comic", "transed": 1, "url": "https://cloud.google.com/kubernetes-engine/kubernetes-comic/", "via": "", "real_tags": ["\u5185\u65af", "\u90e8\u7f72"]}, {"category": "", "categoryclass": "", "imagename": "80fecb39faabd710594d24737c2fa2ac.jpg", "infoid": 1009991, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u6b63\u5728\u63a2\u7d22\u4eceChrome86\u5f00\u59cb\u5728\u540e\u53f0\u7f51\u9875\u4e2d\u9650\u5236JavaScript\u8ba1\u65f6\u5668\u5524\u9192\u7684\u60f3\u6cd5\uff0cChrome86\u5728Chrome\uff1a//FLAGS\u540e\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u5b9e\u9a8c\u6027\u529f\u80fd\u3002\u8fd9\u6837\uff0cGoogle Chrome\u4f1a\u5c06\u540e\u53f0\u7f51\u9875\u4e2d\u7684Javascript\u8ba1\u65f6\u5668\u5524\u9192\u9650\u5236\u4e3a\u6bcf\u5206\u949f1\u4e2a\u5524\u9192\uff0c\u7c7b\u4f3c\u4e8eSafari\u3002\u6b64\u529f\u80fd\u9002\u7528\u4e8e\u7528\u4e8eWindows\u3001Mac\u3001Linux\u3001Android\u548cChrome OS\u7684Google Chrome\u3002\n\u5728\u4f7f\u7528DevTools\u68c0\u67e5\u70ed\u95e8\u7f51\u7ad9\u5728\u540e\u53f0\u6240\u505a\u7684\u5de5\u4f5c\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u53d1\u73b0\uff0c\u5f53\u7f51\u9875\u5728\u540e\u53f0\u6253\u5f00\u65f6\uff0cGoogle Chrome\u7528\u6237\u5e76\u6ca1\u6709\u4ece\u8fc7\u5ea6\u4f7f\u7528Javascript\u8ba1\u65f6\u5668\u4e2d\u53d7\u76ca\u3002\n\u4f8b\u5982\uff0c\u57fa\u672c\u4e0a\u6ca1\u6709\u5fc5\u8981\u8ddf\u8e2a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u7279\u522b\u662f\u5f53\u7f51\u9875\u662f\u80cc\u666f\u65f6\u3002\u4f8b\u5982\uff0c\u68c0\u67e5\u6eda\u52a8\u4f4d\u7f6e\u662f\u5426\u6539\u53d8\uff0c\u62a5\u544a\u65e5\u5fd7\uff0c\u5206\u6790\u4e0e\u5e7f\u544a\u7684\u4ea4\u4e92\u3002\u540e\u53f0\u7684\u4e00\u4e9b\u975e\u5fc5\u8981\u7684JavaScript\u4efb\u52a1\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u7535\u6c60\u6d88\u8017\uff0c\u8fd9\u662f\u8c37\u6b4c\u73b0\u5728\u6b63\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u8c37\u6b4c\u7684\u76ee\u6807\u662f\u51cf\u5c11\u540e\u53f0\u9009\u9879\u5361\u4e2dJavascript\u8ba1\u65f6\u5668\u5524\u9192\u7684\u6b21\u6570\uff0c\u5e76\u5728\u4e0d\u7834\u574f\u7528\u6237\u4f53\u9a8c\u7684\u60c5\u51b5\u4e0b\u663e\u8457\u5ef6\u957fPC\u7684\u7535\u6c60\u5bff\u547d\u3002\u8c37\u6b4c\u8bc1\u5b9e\uff0c\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u4f9d\u8d56WebSockets\u6216\u957f\u65f6\u95f4\u6295\u7968\u6765\u63a5\u6536\u6d88\u606f\u6216\u66f4\u65b0\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6839\u636eTheWindowsClub\u770b\u5230\u7684\u4e00\u4efd\u6280\u672f\u6587\u4ef6\uff0c\u8c37\u6b4c\u6700\u8fd1\u8bd5\u9a8c\u4e86\u4e00\u4e2a\u539f\u578b\uff0c\u5c06Javascript\u8ba1\u65f6\u5668\u5524\u9192\u9650\u5236\u5728\u6bcf\u5206\u949f1\u6b21\u3002\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u8c37\u6b4c\u5728\u540e\u53f0\u968f\u673a\u6253\u5f00\u4e8636\u4e2a\u6807\u7b7e\uff0c\u800c\u524d\u53f0\u7684\u6807\u7b7e\u5927\u7ea6\u662f\u7a7a\u767d\u7684\u3002Google\u5728\u5c06JavaScript\u8ba1\u65f6\u5668\u5524\u9192\u901f\u5ea6\u9650\u5236\u4e3a\u6bcf\u5206\u949f1\u6b21\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4e86\u4e24\u6b21\u5b9e\u9a8c\u3002\n\u5728\u5b9e\u9a8c\u7ed3\u675f\u65f6\uff0c\u8c37\u6b4c\u53d1\u73b0\uff0c\u5bf9\u4e8e\u62e5\u6709\u591a\u8fbe36\u4e2a\u80cc\u666f\u9009\u9879\u5361\u7684\u7528\u6237\uff0c\u5f53\u524d\u53f0\u9009\u9879\u5361\u5927\u7ea6\u4e3a\u7a7a\u767d\u65f6\uff0c\u5bf9Javascript\u5b9a\u65f6\u5668\u8fdb\u884c\u8282\u6d41\u53ef\u4ee5\u5ef6\u957f\u7535\u6c60\u5bff\u547d\u8fd12\u5c0f\u65f6(28%)\u3002\n\u540c\u6837\uff0c\u8c37\u6b4c\u4e5f\u8fdb\u884c\u4e86\u53e6\u4e00\u9879\u5b9e\u9a8c\u3002\u4f46\u8fd9\u4e00\u6b21\uff0c\u8c37\u6b4c\u6ca1\u6709\u5728\u524d\u666f\u51fa\u73b0\u7a7a\u767d\u6807\u7b7e\uff0c\u800c\u662f\u4ee5\u5168\u5c4f\u6a21\u5f0f\u64ad\u653e\u4e86\u4e00\u6bb5YouTube\u89c6\u9891\u3002\u8c37\u6b4c\u8fd8\u5173\u95ed\u4e86\u201c\u8282\u80fd\u201d\u8bbe\u7f6e\uff0c\u4ee5\u9632\u6b62\u663e\u793a\u5668\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\u3002\u6b64\u5916\uff0c\u8c37\u6b4c\u8fd8\u7981\u7528\u4e86\u663e\u793a\u8bbe\u7f6e\u4e2d\u7684\u201c\u81ea\u52a8\u8c03\u6574\u4eae\u5ea6\u201d\u9009\u9879\u3002\n\u8c37\u6b4c\u7684\u76ee\u6807\u662f\u9a8c\u8bc1\u51cf\u5c11\u540e\u53f0\u6d3b\u52a8\u662f\u5426\u6709\u52a9\u4e8e\u5ef6\u957f\u7535\u6c60\u5bff\u547d\uff0c\u5373\u4f7f\u5728\u6709\u524d\u53f0\u6d3b\u52a8\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\u6839\u636e\u8c37\u6b4c\u7684\u8bf4\u6cd5\uff0c\u5bf9Javascript\u5b9a\u65f6\u5668\u8fdb\u884c\u8282\u6d41\u53ef\u4ee5\u4f7f\u540e\u53f0\u8fd0\u884c\u591a\u8fbe36\u4e2a\u9009\u9879\u5361\u7684\u7528\u6237\u7684\u7535\u6c60\u7eed\u822a\u65f6\u95f4\u589e\u52a0\u8fd136\u5206\u949f(13%)\uff0c\u6b64\u5916\u8fd8\u53ef\u4ee5\u5728\u524d\u53f0\u64ad\u653eYouTube\u89c6\u9891\u3002\n\u8c37\u6b4c\u8868\u793a\uff0c\u5f53Javascript\u5b9a\u65f6\u5668\u5bfc\u81f4\u5524\u9192\u65f6\uff0c\u6240\u6709Javascript\u5c31\u7eea\u7684\u5b9a\u65f6\u5668\u90fd\u53ef\u4ee5\u6267\u884c\uff0c\u5373\u4f7f\u5b83\u4eec\u6ca1\u6709\u5f15\u8d77\u5524\u9192\u3002\u8c37\u6b4c\u5de5\u7a0b\u5e08\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7ee7\u7eed\u5b9e\u65bd\u8fd9\u4e00\u529f\u80fd\uff0c\u4ee5\u663e\u8457\u964d\u4f4eChrome\u7684\u7535\u6c60\u6d88\u8017\u3002\n\u5982\u679c\u7f51\u9875\u5728\u540e\u53f0\u505c\u75595\u5206\u949f\uff0cChrome\u8ba1\u5212\u5c06JavaScript\u8ba1\u65f6\u5668\u5524\u9192\u4e0e\u5c0f\u4e8e\u6216\u7b49\u4e8e5\u5206\u949f\u81f31\u5206\u949f\u95f4\u9694\u7684\u8d85\u65f6\u8fdb\u884c\u8c03\u6574\u3002\u540c\u6837\uff0cChrome\u8ba1\u5212\u5c06JavaScript\u8ba1\u65f6\u5668\u5524\u9192\u4e0e\u8d85\u8fc75\u5206\u949f\u52301\u79d2\u7684\u8d85\u65f6\u65f6\u95f4\u8fdb\u884c\u8c03\u6574\u3002\n\u7136\u800c\uff0c\u4f01\u4e1a\u7b56\u7565\u5c06\u5141\u8bb8\u7cfb\u7edf\u7ba1\u7406\u5458\u5728Google Chrome\u4e2d\u7981\u7528\u6b64\u529f\u80fd\u3002\u8fd9\u6837\u4e00\u6765\uff0cChrome\u4f01\u4e1a\u7248\u6d4f\u89c8\u5668\u4e00\u65e6\u53d1\u5e03\u5230\u7a33\u5b9a\u7248\u5c31\u4e0d\u53ef\u80fd\u5e26\u6765\u9ebb\u70e6\u4e86\u3002\u4f46\u8c37\u6b4c\u8868\u793a\uff0c\u4f01\u4e1a\u653f\u7b56\u5c06\u5728\u8be5\u529f\u80fd\u53d1\u5e03\u5230\u7a33\u5b9a\u7248\u540e1\u5e74\u5185\u505c\u7528\u3002\n\u5f53Javascript\u8ba1\u65f6\u5668\u5ef6\u8fdf\u8d85\u8fc75\u79d2\u65f6\uff0cChrome\u8fd8\u4f1a\u5728DevTools\u63a7\u5236\u53f0\u5411\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u6761\u6d88\u606f\u3002\n\u7136\u800c\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\uff0c\u8fd9\u4e00\u529f\u80fd\u662f\u5426\u4e5f\u4f1a\u5f88\u5feb\u51fa\u73b0\u5728\u57fa\u4e8eChromium\u7684\u65b0\u6b3eEdge Web\u6d4f\u89c8\u5668\u4e2d", "note_en": "Google is exploring the idea of limiting JavaScript timer wake ups in background webpages starting with Chrome 86, which is shipping a new experimental feature behind  chrome://flags. This way, Google Chrome will limit Javascript timer wake ups in background webpages to 1 wake up per minute, similar to Safari. This feature applies to Google Chrome for Windows, Mac, Linux, Android and Chrome OS.\n   Upon using  DevTools to inspect the work done by popular websites in the background, developers found that Google Chrome users don\u2019t benefit from the excessive usage of Javascript timers when the webpage is opened in the background.\n For example, there is essentially no need to track some things especially when the webpage is backgrounded. For example, checking if the scroll position changed, reporting logs, analyzing interactions with ads. Some of the non-essential JavaScript tasks in the background result in unnecessary battery consumption, something Google is now trying to address.\n Google aims to reduce the number of Javascript timer wake ups in tabs in the background and significantly extend your PC\u2019s battery life without breaking the user experience. This will not affect websites or applications that rely on WebSockets or long polls to receive messages or updates, Google has confirmed.\n According to a technical document seen by  TheWindowsClub, Google recently experimented with a prototype that limits Javascript timer wake ups to 1 per minute. In this experiment, Google opened 36 random tabs in the background while the foreground tab was  about:blank. Google performed this experiment twice with and without throttling JavaScript timer wake ups to 1 per minute.\n  At the end of the experiment, Google found that throttling Javascript timers extends the battery life by almost 2 hours (28 percent) for a user with up to 36 background tabs, and when the foreground tab is about:blank.\n  Similarly, Google ran another experiment. But this time, instead of a blank tab in the foreground, Google played a YouTube video in fullscreen mode. Google also disabled \u2018Energy Saver\u2019 settings to prevent the display from going idle. Furthermore, Google also disabled the \u2018Automatically adjust brightness\u2019 option in Display settings.\n  Google aimed to verify if reducing background activities helps extend battery life even when there is foreground activity. According to Google, throttling Javascript timers increases the battery life by almost 36 minutes (13 percent) for a user who has up to 36 tabs running in the background, in addition to a YouTube video in the foreground.\n  Google says when a Javascript timer causes a wake-up, all Javascript ready timers can execute, even if they didn\u2019t cause the wake-up. There are a couple of ways Google engineers can go ahead implementing this feature to significantly reduce Chrome\u2019s battery consumption.\n If a webpage is in the background for 5 minutes, Chrome plans to align JavaScript timer wake ups with a timeout that is less than or equal to 5 minutes to 1-minute intervals. Similarly, Chrome plans to align JavaScript timer wake ups with a timeout that is greater than 5 minutes to 1-second intervals.\n  However, an enterprise policy will allow system administrators to disable this feature in Google Chrome. This way, the Chrome enterprise browser won\u2019t possibly cause trouble once the feature is shipped to stable. But Google says the enterprise policy will be retired 1 year after the feature ships to stable.\n Chrome will also provide developers with a message in the DevTools console when a Javascript timer is delayed by more than 5 seconds.\n  However, there is no indication at the moment if the feature will also arrive in the new, Chromium-based  Edge web browser anytime soon", "posttime": "2020-07-06 04:10:54", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "java,javascript,chrome,\u8ba1\u65f6\u5668,experimental", "title": "Chrome\u5b9e\u9a8c\u529f\u80fd\u5c06\u9650\u5236\u540e\u53f0\u9009\u9879\u5361\u4e0a\u7684Javascript\u8ba1\u65f6\u5668\u5524\u9192", "title_en": "Chrome Experimental Feature Will Throttle Javascript-Timer Wakeups on Backgrounded Tabs", "transed": 1, "url": "https://news.thewindowsclub.com/google-chrome-ships-a-new-feature-to-increase-the-battery-life-101417/", "via": "", "real_tags": ["java", "chrome", "\u8ba1\u65f6\u5668"]}, {"category": "", "categoryclass": "", "imagename": "3233b2a2aa4e47271ae9ccbb54c91793.gif", "infoid": 1009988, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u5bb6\u597d\uff0c\u6b22\u8fce\u56de\u5230\u8f66\u7ad9\uff0c\u8fd9\u662f\u4e00\u4efd\u65f6\u4e8b\u901a\u8baf\uff0c\u4e13\u95e8\u4ecb\u7ecd\u73b0\u5728\u548c\u672a\u6765\u4eba\u4eec\u548c\u5305\u88f9\u4eceA\u70b9\u5230B\u70b9\u7684\u6240\u6709\u8fd0\u8f93\u65b9\u5f0f\u3002\u6211\u662f\u60a8\u7684\u4e3b\u6301\u4ebaKirsten Korosec\uff0cTechCrunch\u7684\u9ad8\u7ea7\u4ea4\u901a\u8bb0\u8005\u3002\n\u6211\u628a\u8fd9\u5468\u7684\u683c\u5f0f\u641e\u6df7\u4e86\uff0c\u56e0\u4e3a\u6211\u662f\u8fd9\u91cc\u7684\u8d1f\u8d23\u4eba\uff0c\u4eca\u5929\u662f\u5047\u671f\uff0c\u6211\u4e0d\u60f3\u8ba9\u8fd9\u4efd\u65f6\u4e8b\u901a\u8baf\u53d8\u5f97\u8fc7\u4e8e\u516c\u5f0f\u5316\u3002\u56e0\u6b64\uff0c\u4eca\u5929\u7684\u65f6\u4e8b\u901a\u8baf\u5c06\u91cd\u70b9\u4ecb\u7ecd\u51e0\u5bb6\u79fb\u52a8\u521d\u521b\u516c\u53f8\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u4e00\u4e9b\u901a\u5e38\u4e0d\u4f1a\u5f97\u5230\u592a\u591a\u5173\u6ce8\u7684\u60f3\u6cd5\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u8ba1\u5212\u4eca\u5e74\u590f\u5929\u81ea\u9a7e\u6e38\u7684\u4eba-\u6216\u8005\u4f60\u53ef\u80fd\u5df2\u7ecf\u8fd9\u6837\u505a\u4e86-\u6211\u5f88\u4e50\u610f\u542c\u542c\u90a3\u91cc\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u6765\u81eaP2P\u623f\u8f66\u79df\u8d41\u5e02\u573aRVshare\u7684\u6570\u636e\u663e\u793a\uff0c\u8fd9\u91cc\u5f88\u62e5\u6324\u3002\nP2P\u623f\u8f66\u79df\u8d41\u5e02\u573aRVshare\u7684\u4eba\u544a\u8bc9\u6211\uff0c\u79df\u8d41\u9884\u8ba2\u91cf\u662f\u53bb\u5e74\u590f\u5929\u7684\u4e09\u500d\uff0c\u81ea4\u6708\u521d\u4ee5\u6765\u589e\u957f\u4e861600%\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u4e54\u6069\u00b7\u683c\u96f7(Jon Gray)\u8868\u793a\uff1a\u201c7\u67084\u65e5\u5468\u672b\u6709\u671b\u6210\u4e3a\u8be5\u4e1a\u52a1\u5386\u53f2\u4e0a\u6700\u5927\u7684\u9884\u8ba2\u671f\uff0c\u5dee\u8ddd\u5f88\u5927\u3002\u201d\n\u8bf7\u8bb0\u4f4f\uff0c\u8bf7\u8054\u7cfb\u5e76\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u81f3kirsten.korosec@techcrunch.com\uff0c\u4e0e\u6211\u5206\u4eab\u60f3\u6cd5\u3001\u6279\u8bc4\u3001\u63d0\u4f9b\u610f\u89c1\u6216\u63d0\u793a\u3002\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7Twitter-@kirsten korosec\u76f4\u63a5\u53d1\u9001\u6d88\u606f\u7ed9\u6211\u3002\n\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u6467\u6bc1\u4e86\u521d\u521b\u516c\u53f8\u548c\u8001\u724c\u516c\u53f8\u3002\u5176\u4ed6\u516c\u53f8\uff0c\u5982\u7535\u52a8\u81ea\u884c\u8f66\uff0c\u7531\u4e8e\u5927\u6d41\u884c\u671f\u95f4\u81ea\u884c\u8f66\u9700\u6c42\u6fc0\u589e\uff0c\u51e0\u4e2a\u5b63\u5ea6\u7684\u8fd0\u6c14\u66f4\u597d\u3002\n\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u521d\u521b\u516c\u53f8\u6210\u7acb\u4e00\u5e74\uff0c\u5df2\u7ecf\u5377\u5165\u4e86\u7535\u52a8\u81ea\u884c\u8f66\u7684\u70ed\u6f6e\u3002\u8be5\u516c\u53f8\u753124\u5c81\u7684\u5229\u7ef4\u00b7\u5eb7\u6d1b(Levi Conlow)\u548c\u7f57\u6bd4\u00b7\u5fb7\u9f50\u5c14(Robby Deziel)\u5171\u540c\u521b\u7acb\uff0c\u5176Lectrixp\u7535\u52a8\u81ea\u884c\u8f66\u7684\u9500\u552e\u989d\u5df2\u8d85\u8fc71400\u4e07\u7f8e\u5143\u3002\n\u73b0\u5728\uff0c\u8fd9\u5bb6\u521b\u4e1a\u516c\u53f8\u6b63\u5728\u63a8\u51fa\u4e00\u6b3e\u65b0\u7684\u7535\u52a8\u81ea\u884c\u8f66\uff0c\u540d\u4e3a\u201cLectrixp Step-Thru\u201d\u3002\u9884\u8d2d\u4ece\u4e0a\u5468\u5f00\u59cb\u3002\u8fd9\u6b3e\u552e\u4ef7899\u7f8e\u5143\u7684\u6b65\u8fdb\u5f0f\u81ea\u884c\u8f66\u53ef\u4ee5\u6298\u53e0\u5230\u4e0d\u5230\u5176\u5c3a\u5bf8\u7684\u4e00\u534a\uff0c\u6700\u9ad8\u65f6\u901f\u4e3a28\u82f1\u91cc\uff0cLCD\u663e\u793a\u5c4f\uff0c\u7eed\u822a\u91cc\u7a0b\u4e3a25\u81f350\u82f1\u91cc\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u66f4\u77e5\u540d\u7684Rad Power Bikes\u63a8\u51fa\u4e86\u4e00\u6b3e\u5355\u901f\u7535\u52a8\u81ea\u884c\u8f66\uff0c\u8d77\u4ef7999\u7f8e\u5143\u3002\u8fd9\u6b3e\u540d\u4e3aRadmission Electric Motor Bike\u7684\u65b0\u4ea7\u54c1\u914d\u5907\u4e86\u4e00\u53f0500\u74e6\u7684\u9a6c\u8fbe\uff0c\u53ef\u4ee5\u63d0\u4f9b50\u78c5(\u7ea6\u540810\u7c73)\u7684\u626d\u77e9\uff0c\u4e00\u4e2a\u626d\u8f6c\u624b\u67c4\u6cb9\u95e8\uff0c\u4e00\u4e2a\u96c6\u6210\u7684\u5239\u8f66\u706f\uff0c\u7531\u4e3b\u7535\u6c60\u7ec4\u4f9b\u7535\uff0c48\u4f0f\u7535\u6c60\u7ec4\uff0c\u53ef\u4ee5\u884c\u9a7625\u523045\u82f1\u91cc\u3002\n\u5b83\u4e0d\u523050\u78c5\uff0c\u6bd4Rad Power\u7684\u5176\u4ed6\u81ea\u884c\u8f66\u8f7b30%\u3002\u8fd9\u6b3e\u81ea\u884c\u8f66\u8fd8\u914d\u5907\u4e86LED\u63a7\u5236\u9762\u677f\uff0c\u9a91\u8f66\u4eba\u53ef\u4ee5\u5728\u90a3\u91cc\u63a7\u5236\u8f66\u706f\u548c\u8e0f\u677f\u8f85\u52a9\uff0c\u4ee5\u53ca\u67e5\u770b\u7535\u6c60\u548c\u8f85\u52a9\u6c34\u5e73\u3002\u9884\u8d2d\u662f\u5f00\u653e\u7684\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u7b2c\u4e00\u6279Rad Task\u81ea\u884c\u8f66\u5c06\u4e8e10\u6708\u4efd\u4ea4\u4ed8\u3002\n\u6cd5\u56fd\u7535\u52a8\u81ea\u884c\u8f66\u5171\u4eab\u5e73\u53f0Zoov\u672c\u5468\u63a8\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u5145\u7535\u7ad9\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8be5\u5145\u7535\u7ad9\u6539\u8fdb\u4e86\u4f20\u7edf\u7684\u505c\u9760\u7cfb\u7edf\u3002\u4e0e\u5176\u4ed6\u53ea\u80fd\u5728\u76f8\u540c\u7a7a\u95f4\u5185\u5bb9\u7eb3\u4e00\u8f86\u81ea\u884c\u8f66\u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8be5\u7a7a\u95f4\u7ad9\u7684\u8bbe\u8ba1\u53ef\u4ee5\u5728\u4e00\u7c73\u5185\u5bb9\u7eb3\u56db\u8f86\u81ea\u884c\u8f66\u3002\u5b83\u8fd8\u53ef\u4ee5\u5728\u8fde\u63a5\u5230\u7535\u7f51\u6216\u4e0d\u8fde\u63a5\u5230\u7535\u7f51\u7684\u60c5\u51b5\u4e0b\u4e3a\u81ea\u884c\u8f66\u5145\u7535\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u672a\u4e0e\u7535\u7f51\u76f8\u8fde\u7684\u52a0\u6cb9\u7ad9\u4f7f\u7528\u7684\u7535\u6c60\u53ef\u4ee5\u66f4\u6362\uff0c\u53ef\u4ee5\u5feb\u901f\u5b89\u88c5\u3002\n\u66f4\u6709\u8da3\u7684\u521b\u65b0\u4e4b\u4e00\u662f\uff0c\u81ea\u884c\u8f66\u521b\u9020\u4e86\u4e00\u4e2a\u5171\u4eab\u7684\u7535\u529b\u8fde\u63a5\u3002\u5f53\u81ea\u884c\u8f66\u505c\u5728\u8f66\u7ad9\u65f6\uff0c\u5b83\u4eec\u5c31\u4f1a\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u8f93\u9001\u6216\u63a5\u6536\u7535\u529b\u3002\u81ea\u884c\u8f66\u4e4b\u95f4\u7684\u80fd\u91cf\u8f6c\u79fb\u7531\u4f18\u5316\u81ea\u884c\u8f66\u5145\u7535\u6c34\u5e73\u7684\u7b97\u6cd5\u63a7\u5236-\u6700\u5927\u5145\u7535\u8303\u56f4\u7ea6\u4e3a45\u516c\u91cc\u3002\n\u6bcf\u4e2a\u8f66\u7ad9\u6700\u591a\u53ef\u5bb9\u7eb315\u8f86\u81ea\u884c\u8f66\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5df2\u7ecf\u5b89\u88c5\u4e8640\u4e2a\u8fd9\u6837\u7684\u8f66\u7ad9\u3002\n\u6211\u4e00\u76f4\u5728\u8ddf\u8e2a\u8fc7\u53bb\u51e0\u4e2a\u6708\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u671f\u95f4\u6d8c\u73b0\u51fa\u6765\u7684\u60f3\u6cd5\u548c\u5c0f\u53d1\u660e\u3002\u6709\u5927\u91cf\u7684\u5c0f\u201c\u89e3\u51b3\u65b9\u6848\u201d\uff0c\u6709\u4e9b\u6bd4\u53e6\u4e00\u4e9b\u66f4\u597d\u3002\u6211\u4f1a\u4e0d\u65f6\u5730\u628a\u8fd9\u4e9b\u4e1c\u897f\u53eb\u51fa\u6765\u3002\n\u4f8b\u5982\uff0c\u6765\u81ea\u6700\u65b0TechStars Mobility\u961f\u5217\u7684\u521d\u521b\u516c\u53f8Nickelytics\u4e3a\u8f66\u8f86\u4e0a\u548c\u8f66\u8f86\u4e0a\u7684\u5e7f\u544a\u8fd9\u4e00\u53e4\u8001\u7684\u6e38\u620f\u589e\u6dfb\u4e86\u4e9b\u8bb8\u73b0\u4ee3\u8272\u5f69\u3002\u8be5\u516c\u53f8\u5728\u6bcf\u5929\u884c\u9a76\u81f3\u5c1130\u82f1\u91cc\u7684\u62fc\u8f66\u4e0a\u6295\u653e\u5e7f\u544a\u3002\u5b83\u627f\u8bfa\u53f8\u673a\u6bcf\u6708\u6700\u9ad8\u53ef\u8d5a500\u7f8e\u5143\u3002\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u5411\u516c\u53f8\u63a8\u9500\u7684\u662f\uff0c\u5b83\u4f7f\u7528\u8ddf\u8e2a\u6280\u672f\u6765\u8bb0\u5f55\u6bcf\u4e00\u6b21\u201c\u5370\u8c61\u201d\uff0c\u4e5f\u5c31\u662f\u53eb\u8f66\u7684\u4e58\u5ba2\u3002\u5b83\u5229\u7528\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u6570\u5b57\u5e7f\u544a\u7784\u51c6\u8fd9\u4e9b\u6d88\u8d39\u8005\u3002\n\u8be5\u516c\u53f8\u63a8\u51fa\u4e86\u4e00\u6b3e\u540d\u4e3a\u201c\u5e7f\u544a\u76fe\u724c\u201d\u7684\u65b0\u4ea7\u54c1\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4e3a\u4e86\u4fdd\u62a4\u62fc\u8f66\u53f8\u673a\u548c\u4e58\u5ba2\uff0c\u540c\u65f6\u521b\u9020\u6536\u5165\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u60f3\u6cd5\u3002\u4efb\u4f55\u5728\u4eba\u53e3\u7a20\u5bc6\u7684\u57ce\u5e02\u5730\u533a\u4e58\u5750\u51fa\u79df\u8f66\u7684\u4eba\u90fd\u80af\u5b9a\u4f1a\u9047\u5230\u4f5c\u4e3a\u5b89\u5168\u63aa\u65bd\u5728\u524d\u6392\u5ea7\u4f4d\u548c\u540e\u6392\u5ea7\u4f4d\u4e4b\u95f4\u8bbe\u7f6e\u7684\u66f4\u6c38\u4e45\u548c\u66f4\u575a\u56fa\u7684\u62a4\u76fe\u3002\n\u7136\u800c\uff0cNickelytics\u7684\u5e7f\u544a\u76fe\u724c\u662f\u4e3a\u62fc\u8f66\u8bbe\u8ba1\u7684\u3002\u8fd9\u79cd\u6709\u673a\u73bb\u7483\u53ef\u4ee5\u6253\u4e0a\u516c\u53f8\u6807\u5fd7\u6216\u5176\u4ed6\u8425\u9500\u4fe1\u606f\u7684\u70d9\u5370\uff0c\u662f\u7075\u6d3b\u7684\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u4ece\u62fc\u8f66\u4e0a\u6dfb\u52a0\u6216\u79fb\u9664\u3002\n\u6700\u8fd1\uff0c\u51e0\u6b3e\u4e13\u6ce8\u4e8e\u5b89\u5168\u7684\u4ea4\u901a\u76f8\u5173\u5e94\u7528\u5438\u5f15\u4e86\u6211\u7684\u773c\u7403\u3002\u7b2c\u4e00\u5bb6\u662f\u4e00\u5bb6\u540d\u4e3a\uff01Important\u7684\u516c\u53f8\uff0c\u8be5\u516c\u53f8\u4e0a\u4e2a\u6708\u63a8\u51fa\u4e86\u4ed6\u4eec\u7684\u5b89\u5168\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u5c06\u81ea\u5df1\u5b9a\u4f4d\u4e3a\u4fdd\u62a4\u884c\u4eba\u3001\u9a91\u81ea\u884c\u8f66\u7684\u4eba\u3001\u8f6e\u6905\u7528\u6237\u548c\u9a91\u6469\u6258\u8f66\u7684\u4eba\u514d\u53d7\u9644\u8fd1\u8054\u7f51\u8f66\u8f86\u7684\u78b0\u649e\u3002\n\u8fd9\u6b3e\u5e94\u7528\u7684\u53d1\u660e\u4eba\u5df4\u65af\u8482\u5b89\u00b7\u6bd4\u5f7b\u59c6(Bastien Beuchamp)\u6700\u8fd1\u5411\u6211\u89e3\u91ca\u4e86\u4e00\u4e2a\u57fa\u672c\u524d\u63d0\uff1a\u8fd9\u6b3e\u5e94\u7528\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5145\u5f53\u53e6\u4e00\u4e2a\u4f20\u611f\u5668\uff0c\u4e0e\u9644\u8fd1\u7684\u201c\u8054\u7f51\u6c7d\u8f66\u201d\u901a\u4fe1\uff0c\u63d0\u4f9b\u884c\u4eba\u6216\u9a91\u81ea\u884c\u8f66\u7684\u786e\u5207\u4f4d\u7f6e\u3002\u53f8\u673a\u6536\u5230\u63a5\u8fd1\u7684\u4eba\u7684\u8b66\u62a5\u3002\u8fd9\u6b3e\u5e94\u7528\u751a\u81f3\u53ef\u4ee5\u81ea\u52a8\u89e6\u53d1\u8f66\u8f86\u7684\u5239\u8f66\u3002\u8fd9\u91cc\u6709\u51e0\u4e2a\u6355\u83b7\u7269\u3002\u8f66\u8f86\u5fc5\u987b\u6709\u5148\u8fdb\u7684\u9a7e\u9a76\u5458\u8f85\u52a9\u7cfb\u7edf\u548c\u914d\u5957\u7684\u91cd\u8981\u8f6f\u4ef6\u624d\u80fd\u5de5\u4f5c\u3002\u8981\u60f3\u8ba9\u8fd9\u4ef6\u4e8b\u771f\u6b63\u6709\u610f\u4e49\uff0c\u6bd4\u5f7b\u59c6\u5fc5\u987b\u8bf4\u670d\u6c7d\u8f66\u5236\u9020\u5546\u5c06\u8be5\u8f6f\u4ef6\u96c6\u6210\u5230\u4ed6\u4eec\u7684\u8f66\u8f86\u4e2d\uff0c\u5e76\u8ba9\u884c\u4eba\u3001\u9a91\u81ea\u884c\u8f66\u7684\u4eba\u548c\u5176\u4ed6\u4eba\u4e0b\u8f7d\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5bf9\uff01\u91cd\u8981\u7684\u4eba\u6765\u8bf4\u73b0\u5728\u8fd8\u4e3a\u65f6\u5c1a\u65e9\u3002\u4f46\u6ce2\u5c1a\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u4e9b\u8fdb\u5c55\u3002\u4f5c\u4e3a\u4e0e\u5185\u534e\u8fbe\u5927\u5b66\u5185\u534e\u8fbe\u5dde\u5e94\u7528\u7814\u7a76\u4e2d\u5fc3\u5408\u4f5c\u7684\u667a\u80fd\u79fb\u52a8\u5021\u8bae\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u6b3e\u5e94\u7528\u5c06\u4e8e2021\u5e741\u6708\u5f00\u59cb\u5728\u91cc\u8bfa\u5dde\u7684\u4eba\u7c7b\u9a7e\u9a76\u548c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u4e0a\u5b9e\u65bd\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u53f8\u673a\u4eec\u3002OpenRoad\u662f\u4e00\u6b3e\u514d\u8d39\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e8e2020\u5e741\u6708\u63a8\u51fa\u3002\u5b83\u53ef\u4ee5\u68c0\u6d4b\u8f66\u7978\uff0c\u5e76\u5728\u9700\u8981\u65f6\u6d3e\u9063\u7d27\u6025\u54cd\u5e94\u4eba\u5458\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u53ea\u5728iOS\u4e0a\u53ef\u7528\uff0c\u5f88\u5feb\u5c31\u4f1a\u5728Android\u4e0a\u4f7f\u7528\u3002\n\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u7531True Motion\u53d1\u5c55\u800c\u6765\uff0cTrue Motion\u662f\u4e00\u5bb6\u6210\u7acb\u4e8e2012\u5e74\u7684\u516c\u53f8\uff0c\u4e3a\u4fdd\u9669\u516c\u53f8\u5f00\u53d1\u4e86\u667a\u80fd\u624b\u673a\u8fdc\u7a0b\u4fe1\u606f\u5904\u7406\u5e73\u53f0\u3002\u4fdd\u9669\u516c\u53f8\u53ef\u4ee5\u4f7f\u7528\u8be5\u5e73\u53f0\u6355\u83b7\u9a7e\u9a76\u6570\u636e\uff0c\u7136\u540e\u4e3a\u5ba2\u6237\u63d0\u4f9b\u826f\u597d\u9a7e\u9a76\u884c\u4e3a\u7684\u6fc0\u52b1\u3002\nOpen Road\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u6b3e\u6d88\u8d39\u8005\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u6765\u5b9e\u65f6\u68c0\u6d4b\u649e\u8f66\u4e8b\u4ef6\uff0c\u5e76\u5c06\u8054\u7cfb\u8bad\u7ec3\u6709\u7d20\u7684\u54cd\u5e94\u4eba\u5458\uff0c\u5982\u679c\u9700\u8981\uff0c\u4ed6\u4eec\u53ef\u4ee5\u53d1\u9001911\u547c\u53eb\u6551\u62a4\u8f66\u6216\u8b66\u5bdf\u3002\u8be5\u6570\u636e\u8fd8\u53ef\u7528\u4e8e\u52a0\u5feb\u7528\u6237\u7684\u4fdd\u9669\u7d22\u8d54\u8fc7\u7a0b\u3002\nOpen Road\u6700\u8fd1\u589e\u52a0\u4e86\u4e00\u9879\u7d27\u6025\u8054\u7cfb\u4eba\u529f\u80fd\uff0c\u5728\u53d1\u751f\u8f66\u7978\u65f6\u4f1a\u901a\u77e5\u51e0\u4e2a\u6307\u5b9a\u7684\u4eba\uff0c\u4ee5\u53caSiri\u5feb\u6377\u65b9\u5f0f\u3002\u5982\u679c\u7528\u6237\u8bf4\u201c\u563fSiri\uff0c\u8bf7\u6c42\u649e\u8f66\u63f4\u52a9\u201d\uff0cOpen Road\u8bad\u7ec3\u6709\u7d20\u7684\u7279\u5de5\u4f1a\u7acb\u5373\u6253\u7535\u8bdd\u7ed9\u7528\u6237\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u8fd8\u5177\u6709\u97f3\u9891\u8b66\u62a5\u529f\u80fd\uff0c\u5982\u679c\u7528\u6237\u53d1\u751f\u6545\u969c\uff0c\u97f3\u9891\u8b66\u62a5\u4f1a\u4ece\u4ed6\u4eec\u7684\u624b\u673a\u89e6\u53d1\uff0c\u8ba9\u4ed6\u4eec\u77e5\u9053\u5ea7\u5e2d\u6b63\u5728\u547c\u53eb\u3002\n\u901a\u5e38\uff0c\u6211\u4f1a\u5c06\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90e8\u5206\u5206\u6210\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u5206\u6790\uff0c\u751a\u81f3\u662f\u539f\u521b\u7684\u62a5\u544a\u3002\u672c\u5468\uff0c\u6211\u5c06\u63d0\u4f9b\u6211\u7684\u5178\u578b\u65f6\u4e8b\u901a\u8baf\u7684\u8ff7\u4f60\u7248\u3002\u7ee7\u7eed\u9605\u8bfb\uff0c\u4e86\u89e3\u8fc7\u53bb\u4e00\u5468\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u672c\u5468\u5fae\u578b\u79fb\u52a8\u6027\u7684\u91cd\u5927\u65b0\u95fb\u6765\u81ea\u82f1\u56fd\uff0c\u82f1\u56fd\u4ea4\u901a\u90e8\u5ba3\u5e03\u5141\u8bb8\u7535\u52a8\u6ed1\u677f\u8f66\u79df\u8d41\u516c\u53f8\u5728\u5168\u56fd\u8303\u56f4\u5185\u5408\u6cd5\u8fd0\u8425\u3002\u8fd9\u5c06\u662f\u4e00\u4e2a\u4e0d\u665a\u4e8e8\u6708\u5f00\u59cb\u7684\u8bd5\u70b9\u8ba1\u5212\u3002\u5305\u62ec\u4f26\u6566\u548c\u5176\u4ed6\u4e3b\u8981\u57ce\u5e02\u5728\u5185\u7684\u8bae\u4f1a\u548c\u5176\u4ed6\u5f53\u5c40\u6b63\u5728\u52aa\u529b\u6574\u5408\u5ba1\u5224\uff0c\u6839\u636e\u653f\u5e9c\u63d0\u4f9b\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u8fd9\u4e9b\u5ba1\u5224\u53ef\u80fd\u4f1a\u6301\u7eed\u957f\u8fbe12\u4e2a\u6708\u3002\nDFT\u8868\u793a\uff0c\u8fd9\u4e9b\u89c4\u5b9a\u5c06\u4e8e7\u67084\u65e5\u751f\u6548\uff0c\u9884\u8ba1\u7b2c\u4e00\u6b21\u5ba1\u5224\u5c06\u5728\u4e00\u5468\u540e\u5f00\u59cb\u3002\n\u6b27\u6d32\u5fae\u578b\u79fb\u52a8\u516c\u53f8Dott\u8054\u7cfb\u6211\uff0c\u544a\u8bc9\u6211\u5b83\u5df2\u7ecf\u83b7\u5f97\u82f1\u56fd\u76d1\u7ba1\u673a\u6784\u7684\u6279\u51c6\uff0c\u53ef\u4ee5\u53c2\u4e0e\u7535\u52a8\u6ed1\u677f\u8f66\u7684\u8bd5\u9a8c\u3002\u5c42\u79fb\u52a8\u6027\u4e5f\u5df2\u51c6\u5907\u5c31\u7eea\u3002\u8fd9\u5bb6\u6210\u7acb\u4e24\u5e74\u7684\u521d\u521b\u516c\u53f8\u5728\u5176\u82f1\u56fd\u4ed3\u5e93\u4e2d\u67091000\u591a\u8f86\u6ed1\u677f\u8f66\u3002\u5b83\u8fd8\u8058\u8bf7\u4e86\u4e00\u540d\u82f1\u56fd\u603b\u7ecf\u7406\u548c\u4e00\u540d\u5317\u6b27\u516c\u5171\u653f\u7b56\u4e3b\u7ba1\u3002\u5f17\u96f7\u5fb7\u00b7\u743c\u65af(Fred Jones)\u662f\u82f1\u56fd\u7684\u603b\u7ecf\u7406\uff0c\u672c\u6770\u660e\u00b7\u8d1d\u5c14(Benjamin Bell)\u5c06\u9886\u5bfc\u5317\u6b27\u7684\u516c\u5171\u653f\u7b56\u3002\u743c\u65af\u548c\u8d1d\u5c14\u90fd\u66fe\u5728\u4f18\u6b65\u5de5\u4f5c\u3002\u743c\u65af\u5c06\u76d1\u7763\u68af\u7ea7\u7535\u52a8\u6ed1\u677f\u8f66\u5728\u82f1\u56fd\u57ce\u9547\u7684\u63a8\u51fa\u3002\u540c\u65f6\uff0c\u8d1d\u5c14\u5c06\u5728\u8bd5\u9a8c\u524d\u5e26\u5934\u4e0e\u4e2d\u592e\u548c\u5730\u65b9\u653f\u5e9c\u5408\u4f5c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0cJump Bikes\u901a\u8fc7\u5176\u65b0\u4e3b\u4ebaLime\u91cd\u8fd4\u4f26\u6566\u3002\u4f26\u6566\u662f\u81ea\u4f18\u6b65(Uber)\u57285\u6708\u4efd\u5c55\u5f00\u7684\u4e00\u7b14\u590d\u6742\u4ea4\u6613\u4e2d\u5c06\u8be5\u516c\u53f8\u51fa\u552e\u7ed9Lime\u4ee5\u6765\uff0c\u6b27\u6d32\u7b2c\u4e00\u4e2a\u770b\u5230Jump Bikes\u56de\u5f52\u7684\u57ce\u5e02\u3002\u83b1\u59c6\u5728\u4f18\u6b65\u7275\u5934\u7684\u4e00\u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e861.7\u4ebf\u7f8e\u5143\uff0c\u5176\u4ed6\u73b0\u6709\u6295\u8d44\u8005\u5305\u62ecAlphabet\u3001\u8d1d\u6069\u8d44\u672c\u98ce\u9669\u6295\u8d44\u516c\u53f8(Bain Capital Ventures)\u548cGV\u3002\u4f5c\u4e3a\u4ea4\u6613\u7684\u4e00\u90e8\u5206\uff0cLime\u6536\u8d2d\u4e86\u7535\u52a8\u81ea\u884c\u8f66\u548c\u6ed1\u677f\u8f66\u90e8\u95e8Jump\uff0c\u4f18\u6b65\u4e8e2018\u5e74\u4ee5\u7ea62\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\u4e86\u8be5\u90e8\u95e8\u3002\n\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u5728\u67cf\u6797\u3001\u5e03\u9c81\u585e\u5c14\u3001\u91cc\u65af\u672c\u3001\u4f26\u6566\u3001\u9a6c\u5fb7\u91cc\u3001\u9a6c\u62c9\u52a0\u3001\u6155\u5c3c\u9ed1\u3001\u5df4\u9ece\u3001\u7f57\u9a6c\u548c\u9e7f\u7279\u4e39\u7b49\u6b27\u6d32\u57ce\u5e02\uff0c\u6570\u5343\u8f86\u8df3\u8dc3\u81ea\u884c\u8f66\u88ab\u4ece\u8857\u9053\u4e0a\u64a4\u4e0b\u3002\u83b1\u59c6\u4e0d\u592a\u53ef\u80fd\u5728\u6240\u6709\u8fd9\u4e9b\u57ce\u5e02\u91cd\u65b0\u63a8\u51fa\u8df3\u8dc3\u81ea\u884c\u8f66\u3002\u6d88\u606f\u4eba\u58eb\u79f0\uff0cLime\u8ba1\u5212\u5728\u4f26\u6566\u3001\u5df4\u9ece\u3001\u7f57\u9a6c\u548c\u5df4\u585e\u7f57\u90a3\u91cd\u65b0\u90e8\u7f72\u8df3\u8dc3\u6ed1\u677f\u8f66\u548c\u81ea\u884c\u8f66\u3002\n\u5b9d\u9a6c\u5c55\u793a\u4e86\u5176\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf7\u8f6f\u4ef6\u7684\u529f\u80fd\u3002\u5b83\u5173\u4e8e\u90e8\u7f72\u5347\u7ea7\u548c\u529f\u80fd\u7684\u4e00\u4e9b\u60f3\u6cd5\u4e00\u76f4\u6709\u4e00\u70b9\u4e89\u8bae\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u6240\u6709\u5b89\u88c5\u4e86\u6700\u65b0\u201c7\u53f7\u64cd\u4f5c\u7cfb\u7edf\u201d\u8f6f\u4ef6\u7684\u6c7d\u8f66\u90fd\u5c06\u80fd\u591f\u63a5\u6536\u7a7a\u4e2d\u66f4\u65b0\uff0c\u5e76\u8ba1\u5212\u5411\u60f3\u8981\u5347\u7ea7\u67d0\u4e9b\u529f\u80fd\u7684\u5ba2\u6237\u6536\u8d39\uff0c\u6bd4\u5982\u589e\u52a0\u52a0\u70ed\u5ea7\u6905\u6216\u5148\u8fdb\u7684\u9a7e\u9a76\u8f85\u52a9\u7cfb\u7edf\u3002", "note_en": "Hello and welcome back to The Station, a newsletter dedicated to all the present and future ways people and packages move from Point A to Point B. I\u2019m your host Kirsten Korosec, senior transportation reporter at TechCrunch.\n  I am mixing up the format this week because I am in charge here, it\u2019s a holiday and I don\u2019t want this newsletter to get too formulaic. So today, the newsletter will highlight a few mobility startups as well as some of their ideas that don\u2019t typically get a lot of attention.\n  For those who plan to road trip this summer \u2014 or perhaps you already have \u2014 I would love to hear what it\u2019s like out there. Figures from peer-to-peer RV rental marketplace RVshare suggest it\u2019s crowded.\n Folks over at RVshare, a peer-to-peer RV rental marketplace, told me that rental bookings are three times higher than last summer and report a 1,600% increase since early April.\n \u201cJuly 4th weekend is on pace to be the biggest booking period in the history of the business, by a wide margin,\u201d CEO Jon Gray said.\n Remember please reach out and email me at  kirsten.korosec@techcrunch.com to share thoughts, criticisms, offer up opinions or tips. You can also send a direct message to me at Twitter \u2014  @kirstenkorosec.\n   The COVID-19 pandemic has crushed startups and established companies alike. Others, like  Lectric eBikes have had a more fortuitous couple of quarters thanks to spiking demand for bikes during the pandemic.\n The one-year-old startup based in Arizona has been swept up in the electric bike craze. The company, co-founded by 24-year-olds Levi Conlow and Robby Deziel, has generated more than $14 million in sales of its Lectric XP ebike.\n Now the startup is launching a new ebike called the \u2018Lectric XP Step-Thru\u2019. Pre-orders began last week. The $899 step-thru bike folds to less than half of its size, has a top speed of 28 miles per hour, an LCD display and a 25- to 50-mile range.\n  Meanwhile, the better-known  Rad Power Bikes has unveiled a single-speed electric bike that starts at $999. The new product, called RadMission Electric Motor Bike, comes with a 500-watt motor that provides 50 pound feet of torque, a twist grip throttle, an integrated brake light that is powered using the main battery pack, 48-volt battery pack that can travel between 25 to 45-mile range.\n It\u2019s under 50 pounds, making it 30% lighter than Rad Power\u2019s other bikes. The bike also comes with an LED control panel where riders can control lights and pedal assistance as well as view battery and assist levels.  Pre-orders are open and the company says the first Rad Mission bikes will be delivered in October.\n  Zoov, a French electric bike-sharing platform, unveiled this week a new charging station that it says improves upon traditional docking systems. The station is designed to fit four bikes within one meter compared to other systems that can only fit one bike in the same amount of space. It can also charge bikes  with or without a connection to the grid. The stations that are not tied to the grid use batteries that can be swapped out and can and be set up quickly, the company says.\n One of the more interesting innovations is that the bikes create a shared power connection. As bikes are parked at the station they become connected and can deliver or receive power. The transfer of energy between the bikes is controlled by an algorithm that optimizes the bikes\u2019 charge levels \u2013 the maximum charge range is about 45 kilometers.\n Each station has the capacity for up to 15 bikes.  The company said it has already installed 40 of these stations.\n   I\u2019ve been tracking the ideas and little inventions that have popped up in the past several months amid the COVID-19 pandemic. There are an abundance of little \u201csolutions\u201d out there, some better than others. I\u2019ll call these out from time to time.\n For instance,\u00a0 Nickelytics, a startup out of the latest TechStars Mobility cohort, has put a slightly modern spin on the old game of advertising on and in vehicles. The company puts ads on ride-share vehicles that travel at least 30 miles a day. It promises drivers can earn up to $500 a month. The startup\u2019s pitch to companies is that it uses tracking technology to log each \u201cimpression,\u201d meaning the passenger who hailed a ride. It takes that data and targets those consumers with digital ads.\n The company has launched a new product that it calls \u201cad shield.\u201d The idea is to protect ride-share drivers and passengers, while generating revenue. This isn\u2019t a new idea. Anyone who has been in a taxicab in a dense urban area has certainly encountered the more permanent and robust shields set up between the front and back seats as a safety measure.\n The Nickelytics ad shield is designed for ride-share, however. The plexiglass, which can be branded with a company logo or other marketing message, is flexible and can be quickly added or removed from a ride share vehicle.\n   A couple of transportation-related apps that are focused on safety caught my eye recently. The first is a company called  !important that launched their safety app last month. The app markets itself as protection for pedestrians, bicyclists, wheelchair users, and motorcyclists from collisions with nearby connected vehicles.\n Here\u2019s the basic premise, which the app\u2019s inventor Bastien Beauchamp, explained to me recently: the app runs in the background and acts as another sensor that will communicate with a nearby \u201cconnected car\u201d to provide the exact location of a pedestrian or cyclist. The driver receives an alert of the approaching person. The app may even trigger the vehicle\u2019s brakes automatically. There are a couple of catches here. The vehicle has to have an advanced driver assistance systems and the accompanying !important software for it to work. And for this to be really meaningful, Beauchamp will have to convince automakers to integrate the software into their vehicles as well as get pedestrians, cyclists and other folks to download the app.\n It\u2019s early days for !important. But Beauchamp has already made some progress. The app will be implemented starting in January 2021 in human-driven and autonomous vehicles in Reno\u00a0as part of the Intelligent Mobility initiative in collaboration with the Nevada Center for Applied Research at the University of Nevada.\n  Now let\u2019s turn to the drivers.  Openroad is a free app, which launched in January 2020. that detects car crashes and sends emergency responders if they\u2019re needed. The app is only available on iOS and is coming to Android soon.\n The app grew out of True Motion, a company founded in 2012 that developed a smartphone telematics platform for insurance companies. Insurance companies can use the platform to capture driving data and then offer their customers incentives for good driving behavior.\n Open Road was designed as a consumer app. The app uses machine learning to detect crashes in real time and will reach out to trained responders who can send a 911 call for ambulance or police if that is needed. The data can also be used to speed up the insurance claims process for the user.\n Open Road recently added an emergency contacts feature that\u2019ll notify a\u00a0 couple of designated people in the event of a crash as well as a Siri Shortcut. If a user says \u201cHey Siri, Request Crash Assistance\u201d one of the Open Road trained agents will call the user immediately. The app also audio alert feature where if the user is in a crash, audio alert is triggered from their phone to let them know agents are calling.\n  Normally, I would break each of these out into different sections and provide some analysis and even original reporting. This week, I\u2019m providing a mini version of my typical newsletter. Keep on reading for an overview of what happened this past week.\n   The big micromobility news this week comes from the UK, where the Department for Transport announced that it allow  e-scooter rental companies to legally operate across the country. This will be a pilot program that will start no later than August. Councils and other authorities, including across London and other major cities, are working on putting together trials that could run for as long as 12 months under guidelines\u00a0provided by the government.\n The regulations come into force on July 4, the DfT said, with the first trials expected to begin a week later.\n European micromobility company  Dott reached out to let me know that it has earned approval from UK regulators to participate in the e-scooter trial.  Tier Mobility is also prepped and ready. The two-year-old startup has more than 1,000 scooters in its UK warehouse. It has also hired\u00a0a general manager for the UK and a head of public policy for Northern Europe. Fred Jones is the general manager for the UK and Benjamin Bell will lead public policy for Northern Europe. Both Jones and Bell formerly worked at  Uber  . Jones will oversee the roll-out of TIER e-scooters in UK towns and cities. While, Bell will spearhead the company\u2019s collaboration with central and local government in the run-up to trials.\n  Meanwhile,  Jump bikes  returned to London through its new owner  Lime. London is the first city in Europe to see Jump bikes return since Uber offloaded the company to  Lime   in a complex deal that unfolded in May. Lime raised $170 million in a funding round led by Uber, along with other existing investors Alphabet, Bain Capital Ventures and GV. As part of the deal, Lime acquired Jump, the electric bike and scooter division that Uber acquired in 2018 for around $200 million.\n Earlier this year, thousands of Jump bikes were pulled off the streets in European cities such as Berlin, Brussels, Lisbon, London, Madrid, Malaga, Munich, Paris, Rome and Rotterdam. It\u2019s unlikely that Lime will put Jump bikes back in all of these cities. Sources have said Lime plans to redeploy Jump scooters and bikes in London, Paris, Rome and Barcelona.\n   BMW showed off what its new  Operating System 7 software can do. Some of its ideas around deploying upgrades and features has been a bit controversial. The company said all cars equipped with its newest \u201cOperating System 7\u201d software will be able to receive over-the air updates and plans to charge customers who want to upgrade certain features like adding heated seats or advanced driver assistance systems.", "posttime": "2020-07-06 03:49:48", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u521d\u521b,startups", "title": "\n\u8f66\u7ad9\uff1a\u521d\u521b\u4f01\u4e1a\u7248", "title_en": "\n\t\t\t\tThe Station: The startups edition\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/05/the-station-the-startups-edition/", "via": "", "real_tags": ["\u521d\u521b", "startups"]}, {"category": "", "categoryclass": "", "imagename": "98c4f4aa44dbf5c0c0b848324eeddae4.jpg", "infoid": 1009987, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4ed6\u7684\u4e66[\u8f6f\u4ef6\u8bbe\u8ba1X\u5c04\u7ebf](https://www.google.com/search?q=software+design+x-rays&amp\uff1boq=soft\uff0c\u4e9a\u5f53\u00b7\u6258\u6069\u5e0c\u5c14)\u4e2d\uff0c\u4ed6\u63d0\u51fa\u4e86\u4e00\u79cd\u975e\u5e38\u72ec\u7279\u7684\u65b9\u6cd5\u6765\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u3002\u5b83\u6df7\u5408\u4e86\u8f6f\u4ef6\u67b6\u6784\u548c\u4eba\u7c7b\u5fc3\u7406\uff0c\u4ea7\u751f\u4e86\u5904\u7406\u5927\u578b\u4ee3\u7801\u5e93\u7684\u5f3a\u5927\u6280\u672f\u3002\n\u6211\u8bfb\u8fc7\u4f60\u7684\u4ee3\u7801\uff0c\u662f\u540c\u4e00\u4e2a\u4eba\u5199\u7684\u72af\u7f6a\u73b0\u573a\u3002\u8fd9\u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f\n\u55ef\uff0c\u201c\u8f6f\u4ef6\u8bbe\u8ba1X\u5c04\u7ebf\u201d\u662f\u5728\u201c\u4f60\u7684\u4ee3\u7801\u4f5c\u4e3a\u72af\u7f6a\u73b0\u573a\u201d\u4e4b\u540e\u5199\u7684\u3002\u867d\u7136\u8fd9\u672c\u4e66\u7684\u53d6\u8bc1\u5473\u9053\u5f88\u6709\u8da3\uff0c\u4f46\u4e9a\u5f53\u4e0d\u518d\u8fc7\u591a\u5730\u63d0\u5230\u5b83\uff0c\u4ee5\u907f\u514d\u8ba9\u8bfb\u8005\u5206\u5fc3\u3002\u5185\u5bb9\u8981\u7cbe\u81f4\u5f97\u591a\uff01\n\u8ba9\u6211\u603b\u7ed3\u4e00\u4e0b\u8fd9\u672c\u4e66\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\uff1a\n\u4e3a\u6b64\uff0c\u4e9a\u5f53\u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3a\u884c\u4e3a\u4ee3\u7801\u5206\u6790\u7684\u6280\u672f\u3002\u5b83\u4f7f\u7528\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf(VCS)\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u6765\u5e2e\u52a9\u60a8\u5728\u5927\u578b\u4ee3\u7801\u5e93\u4e0a\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u3002\n\u5982\u679c\u4f60\u4e0d\u9700\u8981\u7ef4\u62a4\u6280\u672f\u503a\u52a1\uff0c\u90a3\u4e48\u5b83\u5176\u5b9e\u4e0d\u662f\u95ee\u9898\u3002\n\u9759\u6001\u5206\u6790\u5de5\u5177\u5c06\u6240\u6709\u503a\u52a1\u89c6\u4e3a\u7b49\u503c\u3002\u4ed6\u4eec\u62a5\u544a\u4e86\u65e0\u6570\u7684\u4ee3\u7801\u6c14\u5473\uff0c\u60a8\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u4e13\u6ce8\u4e8e\u5173\u952e\u7684\u4ee3\u7801\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u6e05\u7406\uff01\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u5e94\u8be5\u4f7f\u7528\u65f6\u95f4\u7ef4\u5ea6\u6765\u8bc6\u522b\u70ed\u70b9\uff1a\u5982\u679c\u60a8\u60f3\u8981\u8d85\u7ea7\u6709\u6548\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u5728\u5927\u578b\u4ee3\u7801\u5e93\u4e2d\u91cd\u70b9\u5173\u6ce8\u91cd\u6784\u5de5\u4f5c\u7684\u5730\u65b9\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u5982\u4f55\u751f\u6210\u548c\u4f7f\u7528\u5b83\u4eec\uff0c\u6211\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd9\u4e9b\u6280\u672f\uff1a\n\u6709\u8da3\u7684\u662f\uff0c\u70ed\u70b9\u5f80\u5f80\u505c\u7559\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u4eba\u4eec\u5bb3\u6015\u89e3\u51b3\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4f1a\u5438\u5f15\u66f4\u591a\u7684\u590d\u6742\u6027\uff0c\u5e76\u6210\u4e3a\u95ee\u9898\u7684\u74f6\u9888\u3002\n\u5f53\u6d89\u53ca\u5230\u8bc4\u4f30\u4ee3\u7801\u7684\u590d\u6742\u6027\u65f6\uff0c\u8bb8\u591a\u6307\u6807\u76f8\u4e92\u7ade\u4e89\u3002\u6700\u6d41\u884c\u7684\u53ef\u80fd\u662f\u5708\u590d\u6742\u5ea6\u3002\u7136\u800c\uff0c\u6709\u8da3\u7684\u662f\uff0c\u4ee3\u7801\u884c\u6570(LOC)\u7684\u8ba1\u6570\u901a\u5e38\u662f\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u6307\u793a\u5668\uff01\n\u56e0\u4e3a\u5b83\u662f\u8bed\u8a00\u4e2d\u7acb\u7684\u5ea6\u91cf\uff0c\u6240\u4ee5\u65e0\u8bba\u60a8\u7684\u8bed\u8a00\u5de5\u5177\u662f\u4ec0\u4e48\uff0c\u751f\u6210\u5b83\u90fd\u975e\u5e38\u5bb9\u6613\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528cloc\uff1a\n\u53e6\u4e00\u4e2a\u8fd0\u884c\u826f\u597d\u7684\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u5ea6\u91cf\u662f\u7f29\u8fdb\u7ea7\u522b\u3002\u7f29\u8fdb\u5177\u6709\u903b\u8f91\u62c6\u5206\u7684\u542b\u4e49\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u6807\uff0c\u8868\u660e\u4ee3\u7801\u5f88\u590d\u6742\u3002\n\u53ea\u6709\u5f53\u60a8\u5728\u9879\u76ee\u5386\u53f2\u8bb0\u5f55\u4e2d\u66f4\u6539\u4e86\u7f16\u7801\u6837\u5f0f\u65f6\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u3002\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e9b\u6307\u6807\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u67e5\u770b\u7279\u5b9a\u503c\u548c\u9608\u503c\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u91cd\u8981\u7684\u662f\u8d8b\u52bf\u3002\u901a\u5e38\u8fd9\u5c31\u8db3\u591f\u4e86\u3002\n\u5982\u679c\u60a8\u5206\u6790\u4e00\u4e2a\u6587\u4ef6\u7684\u590d\u6742\u6027\u968f\u65f6\u95f4\u7684\u6f14\u53d8\uff0c\u60a8\u5c31\u4f1a\u4e86\u89e3\u8be5\u6587\u4ef6\u7684\u60c5\u51b5\uff1a\n\u8fd9\u6709\u52a9\u4e8e\u5411\u975e\u6280\u672f\u7ecf\u7406\u5c55\u793a\u91cd\u6784\u7684\u5f71\u54cd\u3002\u8fd9\u6709\u52a9\u4e8e\u4ed6\u4eec\u76f4\u89c2\u5730\u770b\u5230\u8fd9\u7c7b\u5de5\u4f5c\u7684\u6548\u679c\uff0c\u4ee5\u53ca\u5bf9\u56e2\u961f\u751f\u4ea7\u529b\u7684\u5f71\u54cd\u3002\n\u4e00\u65e6\u786e\u5b9a\u4e86\u70ed\u70b9\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6587\u4ef6\u7ea7\u5e94\u7528\u76f8\u540c\u7684\u903b\u8f91\u6765\u67e5\u627e\u590d\u6742\u7684\u51fd\u6570\uff1a\n\u8fd9\u5c31\u662f\u4e9a\u5f53\u6240\u8bf4\u7684\u201cX\u5c04\u7ebf\u5206\u6790\u201d\u3002\u4e0b\u9762\u662f\u7c97\u7565\u7684\u98df\u8c31\uff1a\n\u5c06diff\u7ed3\u679c\u4e0e\u6b64\u7248\u672c\u4e2d\u5b58\u5728\u7684\u51fd\u6570\u8fdb\u884c\u5339\u914d(\u8fd9\u91cc\u9700\u8981\u89e3\u6790\u4ee3\u7801)\u3002\n\u4f7f\u7528HotSpot+X-Ray\u6280\u672f\uff0c\u60a8\u53ef\u4ee5\u5c06400kLOC\u4ee3\u7801\u5e93\u653e\u5728\u51e0\u767e\u884c\u4ee3\u7801\u4e0a\uff0c\u5982\u679c\u5b83\u4eec\u88ab\u91cd\u6784\uff0c\u5b83\u4eec\u5c06\u4f1a\u4ea7\u751f\u6700\u5927\u7684\u5f71\u54cd\u3002\n\u5f88\u9ad8\u5174\u77e5\u9053\u60a8\u53ef\u4ee5\u4f7f\u7528-L\u9009\u9879\u4f7f\u7528git\u65e5\u5fd7\u6267\u884c\u5ec9\u4ef7\u7684X\u5149\u68c0\u67e5\uff1a\n\u5f53\u60a8\u5206\u6790\u4ee3\u7801\u4ee5\u8bc4\u4f30\u5176\u8bbe\u8ba1\u65f6\uff0c\u901a\u5e38\u4f1a\u5fd8\u8bb0\u65f6\u95f4\u7ef4\u5ea6\u3002\u90a3\u662f\u4e2a\u9519\u8bef\uff01\u66f4\u6539\u8026\u5408\u662f\u6307\u6587\u4ef6\u968f\u65f6\u95f4\u4e00\u8d77\u66f4\u6539\u3002\n2\u4e2a\u6587\u4ef6\u53ef\u80fd\u4f1a\u4e00\u8d77\u610f\u5916\u66f4\u6539\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b83\u4eec\u5728\u591a\u6b21\u63d0\u4ea4\u4e2d\u4e00\u8d77\u66f4\u6539\uff0c\u5e76\u4e14\u5177\u6709\u9ad8\u5ea6\u8026\u5408\u6027\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5f88\u6709\u53ef\u80fd\u662f\u8026\u5408\u7684\uff01\n\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u8bc6\u522b\u51fa\u7ecf\u9a8c\u4e0a\u5c5e\u4e8e\u4e00\u8d77\u7684\u4e1c\u897f\u3002\u5982\u679c\u8fd9\u4e9b\u6587\u4ef6\u4e0d\u5728\u540c\u4e00\u4f4d\u7f6e\uff0c\u5219\u5f53\u524d\u8bbe\u8ba1\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u3002\u53ef\u80fd\u5b58\u5728\u7cdf\u7cd5\u7684\u62bd\u8c61\uff0c\u6216\u8005\u53ef\u80fd\u5b58\u5728\u4e0d\u65ad\u8fdb\u5316\u7684\u590d\u5236\u7c98\u8d34\u4ee3\u7801\u3002\n\u56e0\u4e3a\u60a8\u4f7f\u7528Git\u5143\u6570\u636e\u6765\u786e\u5b9a\u8fd9\u4e9b\u8026\u5408\uff0c\u6240\u4ee5\u5b83\u4e0e\u8bed\u8a00\u65e0\u5173\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u68c0\u6d4b\u8de8\u5806\u6808\u7684\u8026\u5408\uff0c\u4f8b\u5982\u524d\u7aef\u548c\u540e\u7aef\u4e4b\u95f4\u7684\u8026\u5408\u3002\n\u6b64\u6280\u672f\u7684\u9650\u5236\u662f\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u7684\u63d0\u4ea4\u6a21\u5f0f\u3002\u5982\u679c\u5f00\u53d1\u4eba\u5458\u603b\u662f\u72ec\u7acb\u63d0\u4ea4\u6d4b\u8bd5\u548c\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u8be5\u6280\u672f\uff0c\u5e76\u5c06\u540c\u4e00\u4f5c\u8005\u572824\u5c0f\u65f6\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u63d0\u4ea4\u89c6\u4e3a\u201c\u8026\u5408\u5728\u4e00\u8d77\u201d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86\u3002\n\u53ea\u6709\u5f53\u60a8\u9700\u8981\u540c\u65f6\u66f4\u6539\u6240\u6709\u4e8b\u4ef6\u65f6\uff0c\u8fd9\u624d\u662f\u4e0d\u597d\u7684\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5728\u66f4\u6539\u8026\u5408\u5206\u6790\u4e2d\u96c6\u6210\u4e86\u76f8\u4f3c\u6027\u5ea6\u91cf\uff0c\u5219\u53ef\u4ee5\u68c0\u6d4b\u51fa\u6709\u95ee\u9898\u7684\u590d\u5236-\u7c98\u8d34\uff1a\n\u4fee\u590d\u4ee3\u7801\u91cd\u590d\u901a\u5e38\u662f\u4e00\u4ef6\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u3002\u5b83\u6709\u52a9\u4e8e\u5f00\u59cb\u91cd\u6784\u70ed\u70b9\u3002\n\u5f53\u60a8\u9047\u5230\u975e\u5e38\u65e7\u7684\u4ee3\u7801\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u5c01\u88c5\u5230\u5e93\u4e2d\u5e76\u4ece\u4ee3\u7801\u5e93\u4e2d\u63d0\u53d6\u5b83\u3002\u9700\u8981\u5904\u7406\u7684\u4ee3\u7801\u66f4\u5c11\uff0c\u8fd9\u5bf9\u5f00\u53d1\u4eba\u5458\u548c\u5165\u95e8\u4eba\u5458\u90fd\u6709\u597d\u5904\uff01\n\u4ee3\u7801\u4e0d\u7a33\u5b9a\u662f\u6709\u95ee\u9898\u7684\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u4f60\u9700\u8981\u4fee\u8865\u5b83\u3002\u56e0\u4e3a\u60a8\u4e0d\u662f\u5f88\u4e86\u89e3\u5b83\uff0c\u6240\u4ee5\u5f88\u6709\u53ef\u80fd\u56e0\u4e3a\u65e0\u77e5\u800c\u4ea7\u751f\u9519\u8bef\u3002\u901a\u8fc7\u521b\u5efa\u66f4\u591a\u7684bug\uff0c\u60a8\u9700\u8981\u518d\u6b21\u66f4\u65b0\u4ee3\u7801\uff1a\u5b83\u4e0d\u7a33\u5b9a\u3002\n\u4f7f\u7528git log-l--format=&#34\uff1b%ad&#34\uff1b--date=Short--path/to/file\u83b7\u53d6\u6bcf\u4e2a\u6587\u4ef6\u7684\u4e0a\u6b21\u4fee\u6539\u65e5\u671f\u3002\n\u5982\u679c\u4ee3\u7801\u5e93\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u7ef4\u62a4\uff0c\u5219\u8ba4\u4e3a\u6700\u5e74\u8f7b\u7684\u4ee3\u7801\u5e93\u4e3a0\u3002\n\u5728\u76f8\u540c\u7684\u5305\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8bc6\u522b\u4e0d\u540c\u5e74\u9f84\u7684\u4ee3\u7801(\u975e\u5e38\u65e7\u7684\u548c\u975e\u5e38\u65b0\u7684)\u3002\u8bd5\u7740\u7406\u89e3\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4ee3\u7801\u65e0\u6cd5\u7a33\u5b9a\u3002\n\u4e5f\u8bb8\u4f60\u80fd\u63d0\u53d6\u51fa\u5b83\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f1a\u7a33\u5b9a\u4e0b\u6765\u3002\n\u4e5f\u8bb8\u60a8\u4f1a\u8bc6\u522b\u51fa\u6df7\u5408\u5728\u4e00\u8d77\u7684\u4e0d\u540c\u6982\u5ff5\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u91cd\u6784\u4ee3\u7801\u7684\u7ed3\u6784\uff1a\n\u5f53\u60a8\u5c06\u592a\u591a\u7684\u5f00\u53d1\u4eba\u5458\u653e\u5728\u540c\u4e00\u4ee3\u7801\u4e0a\u65f6\uff0c\u5f88\u96be\u4fdd\u6301\u9ad8\u6548\u7387\u3002\u8fd9\u662f\u56e0\u4e3a\u4ee3\u7801\u4e0d\u65ad\u53d8\u5316\uff1a\u60a8\u4e09\u5929\u524d\u7f16\u5199\u7684\u4ee3\u7801\u73b0\u5728\u4e0d\u540c\u4e86\uff0c\u6240\u4ee5\u60a8\u5fc5\u987b\u4e0d\u65ad\u5730\u91cd\u65b0\u53d1\u73b0\u5b83\u7684\u529f\u80fd\u3002\u9519\u8bef\u7684\u98ce\u9669\u5f88\u9ad8\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5982\u679c\u4f60\u628a\u66f4\u591a\u7684\u4eba\u653e\u5728\u4e00\u4e2a\u5ef6\u8fdf\u7684\u9879\u76ee\u4e0a\uff0c\u8fd9\u4e2a\u9879\u76ee\u5c31\u4f1a\u66f4\u665a\u3002\n\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c\u4f60\u6709\u5f88\u591a\u6b21\u8981\u7684\u8d21\u732e\u8005=\u6709\u9519\u8bef\u7684\u673a\u4f1a\u66f4\u9ad8\u3002\n\u8fd9\u662f\u56e0\u4e3a\u8d21\u732e\u8005\u5bf9\u4ed6\u4eec\u6240\u505a\u7684\u6539\u53d8\u6ca1\u6709\u5b8c\u6574\u7684\u80cc\u666f\u3002\n\u5bf9\u4e8e\u8bb8\u591a\u8d21\u732e\u8005\uff0c\u8d23\u4efb\u7684\u5206\u6563\u4f1a\u4f7f\u4ee3\u7801\u5e93\u8150\u70c2\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u90fd\u8ba4\u4e3a\u5176\u4ed6\u4eba\u4f1a\u8d1f\u8d23\u91cd\u6784\u3002\n\u56e0\u6b64\uff0c\u60a8\u9700\u8981\u5f15\u5165\u8d23\u4efb\u9886\u57df\u6765\u8d4b\u4e88\u56e2\u961f\u5b8c\u5168\u6240\u6709\u6743\u3002\u5176\u4ed6\u56e2\u961f\u53ef\u80fd\u4f1a\u901a\u8fc7PR\u505a\u51fa\u8d21\u732e\uff0c\u4f46\u4e00\u4e2a\u56e2\u961f\u5e94\u8be5\u62e5\u6709\u81ea\u5df1\u7684\u4e00\u90e8\u5206\uff0c\u53c2\u4e0e\u8bc4\u5ba1\uff0c\u5e76\u62e5\u6709\u6700\u7ec8\u51b3\u5b9a\u6743\u3002\n\u6700\u540e\uff0c\u56e2\u961f\u5e94\u8be5\u6709\u6bd4\u4ed6\u4eec\u7684\u64cd\u4f5c\u8fb9\u754c(\u4ed6\u4eec\u6539\u53d8\u7684)\u66f4\u5bbd\u7684\u77e5\u8bc6\u8fb9\u754c(\u4ed6\u4eec\u77e5\u9053\u7684)\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\n\u60a8\u53ef\u4ee5\u7edf\u8ba1git\u4e2d\u7279\u5b9a\u4ee3\u7801\u90e8\u5206\u7684\u5f00\u53d1\u4eba\u5458\u6570\u91cf\uff1a\n\u5982\u679c\u60a8\u5206\u6790\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u4e0a\u7684\u8d21\u732e\u5206\u5e03\uff0c\u60a8\u4f1a\u5f97\u5230\u4e00\u4e2a\u6269\u6563\u5206\u6570\uff1a\n\u67b6\u6784\u51b3\u7b56\u8bb0\u5f55(ADR)\u5bf9\u4e8e\u7b80\u5355\u5730\u8ddf\u8e2a\u9879\u76ee\u4e2d\u7684\u67b6\u6784\u51b3\u7b56\u975e\u5e38\u6709\u7528\u3002\n\u5b83\u4eec\u5e2e\u52a9\u4eba\u4eec\u4e86\u89e3\u8fc7\u53bb\u505a\u51fa\u51b3\u5b9a\u7684\u539f\u56e0\u548c\u65b9\u5f0f\u3002\u8fd9\u5bf9\u4e8e\u7a0d\u540e\u5728\u9879\u76ee\u4e2d\u91cd\u65b0\u8bc4\u4f30\u5b83\u4eec\u4ee5\u53ca\u4f20\u64ad\u77e5\u8bc6\u90fd\u5f88\u6709\u7528\u3002\n\u4e9a\u5f53\u7ed9\u7ecf\u7406\u4eec\u63d0\u4e86\u51e0\u6761\u5efa\u8bae\uff0c\u6307\u7684\u662f\u4eba\u7c7b\u5fc3\u7406\u3002\u65e0\u8bba\u4f60\u662f\u6280\u672f\u4e3b\u7ba1\u8fd8\u662f\u975e\u6280\u672f\u7ecf\u7406\uff0c\u8fd9\u4e9b\u90fd\u662f\u9ec4\u91d1\u3002\n\u9996\u5148\uff0c\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u8ba9\u4eba\u4eec\u89c9\u5f97\u4ed6\u4eec\u7684\u8d21\u732e\u662f\u53ef\u6709\u53ef\u65e0\u7684\u3002\u4e0d\u8981\u53d6\u6d88\u4ed6\u4eec\u5728\u6700\u540e\u4e00\u523b\u4e00\u76f4\u5728\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u4f1a\u5bfc\u81f4\u52a8\u529b\u7684\u4e27\u5931\u3002\n\u6b64\u5916\uff0c\u5982\u679c\u4eba\u4eec\u89c9\u5f97\u56e2\u961f\u7684\u6210\u529f\u5f88\u5c11\u4f9d\u8d56\u4e8e\u4ed6\u4eec\u7684\u5b9e\u9645\u52aa\u529b\uff0c\u4ed6\u4eec\u5c31\u4f1a\u5047\u88c5\u5de5\u4f5c\uff0c\u671f\u5f85\u522b\u4eba\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\u3002\u8fd9\u5c31\u662f\u793e\u4ea4\u95f2\u901b\u3002\n\u56e0\u6b64\uff0c\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u6b66\u65ad\u5730\u8bbe\u5b9a\u76ee\u6807\u6216\u6700\u540e\u671f\u9650\u3002\u4e00\u5b9a\u8981\u89e3\u91ca\u201c\u4e3a\u4ec0\u4e48\u201d\u3002\n\u6700\u540e\uff0c\u4e0d\u8981\u5c06\u884c\u4e3a\u51c6\u5219\u5ea6\u91cf\u4f5c\u4e3a\u4e2a\u4eba\u7ee9\u6548\u8bc4\u4f30\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u4eba\u4eec\u5c31\u4f1a\u73a9\u5f04\u6307\u6807\u3002\u8fd9\u5c06\u7834\u574f\u751f\u4ea7\u529b\u548c\u534f\u4f5c\u3002\u56e0\u6b64\uff0c\u60a8\u5c06\u65e0\u6cd5\u518d\u4f7f\u7528\u8fd9\u4e9b\u6307\u6807\u3002\u4e0d\u806a\u660e\uff01\n\u95ee\u9898\u662f\uff0c\u62e5\u6709\u4e13\u95e8\u7684\u7ef4\u62a4\u56e2\u961f\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u5229\u4e8e\u5de5\u4f5c\u6548\u7387\u7684\u95ee\u9898\uff1a\n\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u901a\u5e38\u5efa\u8bae\u8ba9\u5f00\u53d1\u56e2\u961f\u8d1f\u8d23\u67e5\u627e\u548c\u4fee\u590dbug\u3002\u6709\u4e13\u95e8\u7684\u6d4b\u8bd5\u4eba\u5458\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u5982\u679c\u4ed6\u4eec\u4e0e\u5f00\u53d1\u4eba\u5458\u5bc6\u5207\u5408\u4f5c\u5c31\u66f4\u597d\u4e86\u3002\n\u8fd8\u8bb0\u5f97\u6269\u6563\u5206\u6570\u5417\uff1f\u60a8\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u8981\u8ba1\u7b97\u6dfb\u52a0\u7684\u884c\u6570\uff0c\u800c\u4e0d\u662f\u63d0\u4ea4\u6570\u3002\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4ece\u6bcf\u4f4d\u4f5c\u8005\u7684\u7a3f\u4ef6\u4e2d\u62bd\u53d61%\u7684\u5206\u6210\u3002\n\u4f60\u4e0d\u4f1a\u60f3\u77e5\u9053\u4eba\u4eec\u5728\u54ea\u91cc\u5de5\u4f5c\u6700\u591a\uff0c\u800c\u662f\u60f3\u77e5\u9053\u8c01\u505a\u51fa\u4e86\u6700\u5927\u8d21\u732e\u3002\nGit\u65e5\u5fd7\u53ef\u4ee5\u5c06\u5176\u4e0e--numstat\u4e00\u8d77\u4f7f\u7528\u3002\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u7ed8\u5236\u77e5\u8bc6\u5730\u56fe\uff1a\n\u5f53\u60a8\u9700\u8981\u7ec4\u5efa\u4e86\u89e3\u60a8\u9700\u8981\u91cd\u6784\u7684\u4ee3\u7801\u7684\u6700\u4f73\u4e2a\u4eba\u56e2\u961f\u65f6\uff0c\u8fd9\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5728\u5f00\u53d1\u4eba\u5458\u79bb\u5f00\u65f6\u786e\u5b9a\u77e5\u8bc6\u8f6c\u79fb\u7684\u4f18\u5148\u987a\u5e8f\u3002\u786e\u5b9a\u4ed6\u4eec\u662f\u516c\u53f8\u7684\u4e3b\u8981\u8d21\u732e\u8005\u548c\u5bf9\u516c\u53f8\u91cd\u8981\u7684\u90e8\u4ef6\u3002\n\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u8bc6\u522b\u7ec4\u7ec7\u4e0e\u60a8\u7684\u4f53\u7cfb\u7ed3\u6784\u7684\u4e0d\u4e00\u81f4\u4e4b\u5904\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u8bbe\u7f6e\u4e0e\u56e2\u961f\u4e00\u76f4\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u76f8\u5339\u914d\u7684\u9876\u7ea7\u8fb9\u754c\u3002\n\u6b64\u5206\u6790\u7684\u9650\u5236\u53d6\u51b3\u4e8e\u60a8\u7684\u63d0\u4ea4\u7b56\u7565\u3002\u5982\u679c\u60a8\u4e0d\u80fd\u4fe1\u4efbgit\u63d0\u4ea4\u4f5c\u8005\uff0c\u90a3\u4e48\u5c31\u4e0d\u8981\u4f7f\u7528\u5b83\u3002\u4f8b\u5982\uff0c\u538b\u7f29\u5408\u5e76\u7b56\u7565\u4f1a\u4e22\u5f03\u591a\u4e2a\u4f5c\u8005\u7684\u8d21\u732e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u91cd\u70b9\u653e\u5728\u201c\u56e2\u961f\u201d\u89c6\u56fe\u4e0a\uff0c\u6216\u8005\u5c06\u60a8\u7684\u5206\u6790\u9650\u5236\u5728\u6280\u672f\u65b9\u9762(\u70ed\u70b9)\u3002\n\u5982\u60a8\u6240\u89c1\uff0cAdam Tornhill\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u4ece\u5927\u578b\u4ee3\u7801\u5e93\u4e2d\u83b7\u53d6\u5b9d\u8d35\u4fe1\u606f\u7684\u6280\u672f\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u5728\u4f53\u7cfb\u7ed3\u6784\u7ea7\u522b\u5e94\u7528\u8fd9\u4e9b\u6280\u672f\u3002\u5b83\u9002\u7528\u4e8e\u8de8\u5fae\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff1a\u53ea\u9700\u5c06\u6bcf\u4e2a\u5206\u6790\u7684\u7ed3\u679c\u7ec4\u5408\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u7ed3\u679c\u5373\u53ef\u3002\n\u8981\u5728\u975e\u5e38\u5927\u7684\u7cfb\u7edf\u4e0a\u638c\u63e1\u548c\u91c7\u53d6\u5177\u4f53\u884c\u52a8\uff0c\u8fd9\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u8fd9\u662f\u9057\u7559\u4ee3\u7801\u7684\u8d85\u7ea7\u5de5\u5177\u7bb1\uff01\n\u6700\u540e\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6307\u6807\u6765\u4e3b\u52a8\u68c0\u6d4b\u7531\u4e8e\u95ee\u9898\u800c\u5bfc\u81f4\u7684\u4e0d\u65ad\u4e0a\u5347\u7684\u6280\u672f\u503a\u52a1\u3002\u60f3\u8c61\u4e00\u4e0b\uff1a\u5982\u679c\u4e00\u5bb6\u516c\u5173\u88ab\u5408\u5e76\uff0c\u4f60\u53ef\u4ee5\u9884\u89c1\u590d\u6742\u6027\u8d8b\u52bf\u7684\u7a81\u7136\u589e\u52a0\u6216\u70ed\u70b9\u7684\u4e0a\u5347\uff01\u8fd9\u5c06\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u4f73\u65f6\u673a\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u662f\u65b0\u9c9c\u7684\u548c\u5047\u8bbe\u7684\u3002\n\u662f\u7684\u4f60\u5e94\u8be5\u3002\u8fd9\u662f\u503c\u5f97\u7684\u3002\u6211\u5728\u8fd9\u91cc\u53ea\u89e6\u53ca\u4e86\u76ae\u6bdb\u3002\u6211\u76f8\u4fe1\u8fd9\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u77e5\u8bc6\u3002\n\u5982\u679c\u4f60\u6700\u611f\u5174\u8da3\u7684\u662f\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6211\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0b\uff1a\nAdam\u5df2\u7ecf\u53d1\u5e03\u4e86\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\u6765\u751f\u6210\u8fd9\u91cc\u7ed9\u51fa\u7684\u5927\u90e8\u5206\u6307\u6807\uff1acode-maat\u3002\n\u6240\u6709\u8fd9\u4e9b\u6982\u5ff5\u90fd\u653e\u5728\u4e86Adam\u7684\u4ea7\u54c1\u4e2d\uff1aCodeScene\u3002\u5b83\u5bf9\u5f00\u6e90\u662f\u514d\u8d39\u7684\uff0c\u5e76\u7ed9\u51fa\u4e86\u672c\u4e66\u4e2d\u63cf\u8ff0\u7684\u6240\u6709\u5206\u6790\u3002\n\u5f53\u6211\u63a5\u8fd1\u9057\u7559\u4ee3\u7801\u5e93\u65f6\uff0c\u6211\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u786e\u5b9a\u8981\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u7bc7\u6458\u8981\uff0c\u4f60\u5c31\u4f1a\u559c\u6b22\u8fd9\u672c\u4e66\u3002\n\u8ba2\u9605\u6211\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u6bcf\u5468\u4e09\u76f4\u63a5\u5728\u60a8\u7684\u6536\u4ef6\u7bb1\u4e2d\u63a5\u6536\u6211\u7684\u4f20\u7edf\u4ee3\u7801\u63d0\u793a\u548c\u6280\u5de7\u3002\n\u7531\u5728\u52a0\u62ff\u5927\u8499\u7279\u5229\u5c14\u751f\u6d3b\u548c\u5de5\u4f5c\u7684Nicolas Carlo\u64b0\u5199\uff0c\ud83c\udf41\u4ed6\u521b\u5efa\u4e86\u8f6f\u4ef6\u5de5\u5320\u8499\u7279\u5229\u5c14\u793e\u533a\uff0c\u8be5\u793e\u533a\u5173\u5fc3\u6784\u5efa\u53ef\u7ef4\u62a4\u7684\u8f6f\u4ef6\u3002\n\u2190\u8fd4\u56de\u4e3b\u9875", "note_en": "In his book [Software Design X-Rays]( https://www.google.com/search?q=software+design+x-rays&amp;oq=soft, Adam Tornhill presents a very unique approach to answer these questions. It\u2019s a mix of software architecture and human psychology that generates powerful techniques to tackle large codebases.\n  I\u2019ve read  Your Code as a Crime Scene from the same guy. How is this different?\n Well, \u201cSoftware Design X-Rays\u201d was written after \u201cYour Code as a Crime Scene\u201d. While the forensics flavor of the book was fun and all, Adam stopped referring it too much to avoid getting the reader distracted. The content is much more polished!\n Let me give you my summary of what\u2019s inside the book and why I think it can help you:\n    To do so, Adam presents a technique called  Behavioral Code Analysis. It uses the information contained in your Version Control System (VCS) to help you make smart decisions on large codebases.\n  Technical Debt isn\u2019t really a problem if you don\u2019t have to maintain it.\n Static analysis tools consider all debt to be equivalent. They report countless of code smells that you have no choice but to focus on the critical ones. Still, that leaves plenty of things to clean up!\n That\u2019s why you should use the time dimension to identify  Hotspots: places where you should focus the Refactor efforts in a large codebase if you want to be super effective.\n   If you want to learn how to generate and use these, I presented the technique in details:\n  Interestingly, hotspots tend to stay here because people are afraid to tackle them. So they attract even more complexity and become problematic bottlenecks.\n  When it comes to evaluating the complexity of the code, many metrics compete. The most popular is probably Cyclomatic Complexity. Yet, it\u2019s fascinating to see that the count of Lines Of Code (LOC) is often a  good enough indicator!\n As it\u2019s a language-neutral metric, it\u2019s very easy to generate regardless of your language tooling. You can use  cloc for that:\n  Another language-neutral metric that works well is the  Indentation Level. Indentation carries the meaning of logical splits. That\u2019s a good indicator that code is complex.\n The limit of using these is when you have a change in the coding style in the history of the project. But because these metrics are simple, it makes no sense to look at specific values and thresholds.  It\u2019s the trend that matters. That\u2019s usually enough.\n  If you analyze the evolution of complexity of a file over time, you get the story of that file:\n  That\u2019s helpful to show the impact of refactoring to non-technical managers. That helps them visually see the effects of such work, and the results on team productivity.\n  Once you identified Hotspots, you can apply the same logic at the file level to find the complex functions:\n  This is what Adam calls \u201cX-Ray analysis\u201d. Here\u2019s the rough recipe:\n Match the  diff results to the functions that existed in this version (parsing the code is necessary here)\n  With the Hotspot + X-Ray techniques, you can take a 400kLOC codebase and focus on the few hundred lines of code that will have the most impact if they are refactored.\n It\u2019s good to know you can perform a cheap X-Ray with git log, using the  -L option:\n   You generally forget about the time dimension when you analyze the code to evaluate its design. That\u2019s a mistake!  Change Coupling is when files change together over time.\n  2 files might change together accidentally. But if they changed together in many commits, with a high degree of coupling, then there\u2019s a high chance these 2 files are coupled!\n This allows you to identify things that empirically belong together. If these files are not co-located, then there might be a problem with the current design. Maybe there\u2019s a bad abstraction or maybe there\u2019s copy-pasted code that keeps evolving together.\n     Since you\u2019re using git metadata to determine these coupling, it\u2019s  language agnostic. Therefore, you can detect coupling across stacks, like between front-end and back-end.\n A limit of this technique is the commit patterns developers use. If a developer always commits tests and code independently, you can adapt the technique and consider commits from the same author in a 24h sliding window as \u201ccoupled together\u201d. Usually, that\u2019s good enough.\n   It\u2019s only bad if you need to keep changing all occurrences together. Hence, if you integrate a metric of  Similarity in your Change Coupling analysis, you can detect problematic copy-paste:\n  Fixing code duplication is often a quick win. It helps getting started in refactoring a Hotspot.\n     When you meet a very old code, you can encapsulate that into a library and extract it from your codebase. That\u2019s less code to deal with, which is good for developers and onboarding!\n  A code that doesn\u2019t stabilize is problematic. It usually means you need to patch it. Because you don\u2019t know it very well, there\u2019s a high chance of creating bugs by ignorance. By creating more bugs, you need to update the code again: it doesn\u2019t stabilize.\n   Get the last modification date for each file with  git log -l --format=&#34;%ad&#34; --date=short -- path/to/file\n If the codebase was not maintained for some time, consider the youngest one to be 0.\n  Within the same packages, you can identify the code of different ages (very old AND very recent). Try to understand why some code fails to stabilize.\n Maybe you\u2019ll be able to extract parts of it that would actually stabilize.\n Maybe you\u2019ll identify different concepts that are mixed. So you can refactor the structure of the code:\n    When you put too many developers on the same code, it\u2019s hard to keep productive. That\u2019s because the code constantly changes: the code you wrote three days ago is now different, so you have to constantly re-discover what it does. The risk of bug is high.\n  That\u2019s why if you put more people on a late project, the project will be even later.\n   Many minor contributors you have in the last 3 months = higher chances to have bugs.\n That\u2019s because contributors don\u2019t have the full context of what they change.\n With many contributors,  diffusion of responsibility makes the codebase rot because each developer thinks someone else will take care of refactoring.\n  Thus, you need to introduce  areas of responsibility to give teams full ownership. Other teams may contribute through PRs, but one team should own their part, be involved in reviews, and have the final word.\n Finally,  teams should have a broader knowledge boundary (what they know) than their operational boundary (what they change). You can make that happen with:\n   You can count the number of developers on a specific part of the code from git:\n  If you analyze the distribution of contributions on a part of the code, you get a  Diffusion score:\n     Architecture Decision Record (ADR) are very useful to simply keep track of architectural decisions in the project.\n They help people understand why and how decisions were taken in the past. This is useful to re-evaluate them later in the project, as well as spreading knowledge.\n  Adam gives a few pieces of advice to managers, referring to human psychology. Whether you\u2019re a Tech Lead or a non-technical manager, these are gold.\n First, you should never make people feel their contributions are dispensable. E.g. don\u2019t cancel what they\u2019ve been working on at the last minute. This leads to  Motivation loss.\n Also, if people feel that the team\u2019s success depends little on their actual efforts, they will just pretend to work and expect others to do the job. That\u2019s  Social Loafing.\n Therefore, you should never set arbitrary goals or deadlines.  Always explain \u201cwhy\u201d.\n Finally,  don\u2019t use Behavioral Code metrics as an individual performance evaluation. If you do so, people will game the metrics. That will ruin the productivity and collaboration. Thus, you won\u2019t be able to use these metrics anymore. Not smart!\n     The thing is, having a dedicated maintenance team brings a few issues that are detrimental to productivity:\n  Personally, I usually recommend making the development team responsible for finding and fixing bugs. It\u2019s OK to have people specialized in testing, but it\u2019s better if they work closely with the developers.\n  Remember the Diffusion score? You can do the same, but count  the number of lines added instead of the number of commits. That gives you a % of contribution per author.\n You don\u2019t want to know where people work the most, but who did the most contributions.\n Git log can give use that with  --numstat. With this, you can draw a  Knowledge Map:\n  That is helpful when you need to build up the best team of individuals who know the code you need to refactor.\n You can also prioritize the Knowledge Transfer when a developer leaves. Identify parts they are the main contributors to and that are important for the company.\n   That allows you to identify organizational misalignments with your architecture. The idea is to set up top-level boundaries that match what the team has been working on.\n The limit of this analysis depends on your commit strategy.  If you can\u2019t trust the git commit author, then don\u2019t use it. For example, a squash-and-merge strategy drops the contributions of multiple authors. In this case, focus on the \u201cTeams\u201d view or limit your analyses to technical ones (Hotspots).\n  As you can see, Adam Tornhill gives a bunch of techniques to get precious information out of large codebases.\n You can apply these techniques at the architecture level as well. It works on distributed systems, across micro-services: simply combine the results of each analysis into a bigger one.\n That\u2019s really powerful to get a grasp and concrete actions on very large systems. That\u2019s a super toolbox for Legacy Code!\n Finally, you can also use these metrics to proactively detects rising Technical Debt that would because of a problem. Imagine this: you can  anticipate a sudden increase in the Complexity Trend or a rising Hotspot if a PR gets merged! This would be the perfect time to address the issue, while it\u2019s still fresh and hypothetic.\n  Yes, you should. It worth it. I only scratched the surface here. And I believe this is very valuable knowledge.\n  If you\u2019re mostly interested in trying this out, I have to mention that:\n Adam has published an open-source tool to generate most of the metrics presented here:  code-maat\n All of these concepts have been put inside Adam\u2019s product:  CodeScene. It\u2019s free for open-source and gives you every analysis described in this book.\n I use these techniques to identify the best things to do when I approach a Legacy codebase. If you liked this summary, you\u2019ll enjoy  the book.\n  Subscribe to my newsletter to receive my Legacy Code tips &amp; tricks, directly in your inbox, every Wednesday.\n   Written by   Nicolas Carlo who lives and works in Montreal, Canada \ud83c\udf41 He founded the  Software Crafters Montreal community which cares about building maintainable softwares.\n   \u2190 Go back to the home page", "posttime": "2020-07-06 03:48:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u8bbe\u8ba1,\u8f6f\u4ef6\u8bbe\u8ba1,points,\u4ee3\u7801", "title": "X\u5c04\u7ebf\u8f6f\u4ef6\u8bbe\u8ba1\u8981\u70b9", "title_en": "The key points of Software Design X-Rays", "transed": 1, "url": "https://understandlegacycode.com/blog/key-points-of-software-design-x-rays/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u8bbe\u8ba1", "\u8f6f\u4ef6\u8bbe\u8ba1", "points", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4e00\u79cd\u666e\u904d\u7684\u8bef\u89e3\uff0c\u8ba4\u4e3a\u4ece\u73af\u5883\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5403\u5f53\u5730\u751f\u4ea7\u7684\u98df\u7269\u5f88\u91cd\u8981\u3002\u5c31\u8fde\u8054\u5408\u56fd\u4e5f\u5728\u63a8\u7279\u4e0a\u8c08\u8bba\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u662f\u4e0d\u5bf9\u7684\u3002\n\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u98df\u54c1\u662f\u7528\u8f6e\u8239\u8fd0\u8f93\u7684\uff0c\u800c\u4e0d\u662f\u98de\u673a\u8fd0\u8f93\u7684\u3002\u53ea\u6709\u5927\u7ea60.16%\u7684\u98df\u7269\u91cc\u7a0b\u662f\u7531\u98de\u673a\u5b8c\u6210\u7684\uff1a\n\u5c3d\u91cf\u907f\u514d\u7a7a\u8fd0\u7684\u98df\u7269\u662f\u6709\u610f\u4e49\u7684\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u90fd\u662f\u9ad8\u5ea6\u6613\u8150\u70c2\u7684\u98df\u7269\uff0c\u5982\u82a6\u7b0b\u3001\u7eff\u8c46\u548c\u6d46\u679c\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5403\u5f53\u5730\u7684\u98df\u7269\u751a\u81f3\u6bd4\u8d2d\u4e70\u6a2a\u8de8\u534a\u4e2a\u5730\u7403\u751f\u4ea7\u7684\u4e1c\u897f\u5bf9\u73af\u5883\u7684\u5f71\u54cd\u66f4\u8d1f\u9762\u3002\u4f8b\u5982\uff0c\u52a0\u70ed\u7684\u6e29\u5ba4\u662f\u80fd\u6e90\u5bc6\u96c6\u578b\u7684\uff0c\u6bd4\u8d77\u901a\u8fc7\u6c34\u8def\u6216\u516c\u8def\u8fd0\u8f93\u6570\u5343\u516c\u91cc\u7684\u4e1c\u897f\uff0c\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u6e29\u5ba4\u6c14\u4f53\u3002\n\u5f88\u660e\u663e\uff0c\u4e0d\u5403\u8089\u548c\u4e0d\u5403\u65e5\u8bb0\u5bf9\u51cf\u5c11\u6e29\u5ba4\u6c14\u4f53\u6392\u653e\u7684\u5f71\u54cd\u8981\u5927\u5f97\u591a\u3002\n\u53ef\u80fd\u53ea\u662f\u65e0\u77e5\u3002\u7136\u800c\uff0c\u6211\u8ba4\u4e3a\u8fd9\u7ecf\u5e38\u662f\u5229\u76ca\u96c6\u56e2\u63a8\u52a8\u7684\u7a3b\u8349\u4eba\u8bba\u70b9\uff0c\u8fd9\u4e9b\u5229\u76ca\u96c6\u56e2\u60f3\u8981\u7ee7\u7eed\u51fa\u552e\u8089\u7c7b\u548c\u65e5\u8bb0\u3002\u8fd9\u662f\u4e00\u4ef6\u5f88\u5bb9\u6613\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u8868\u9762\u4e0a\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\u4f3c\u4e4e\u662f\u6709\u610f\u4e49\u7684\u3002\u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u4e4b\u524d\u8054\u5408\u56fd\u63a8\u6587\uff1a\n\u9664\u4e86\u5403\u5f53\u5730\u7684\u98df\u7269\uff0c\u4ed6\u4eec\u8fd8\u5efa\u8bae\u62d4\u6389\u4e0d\u7528\u7684\u7535\u5668\uff0c\u5c11\u7528\u70ed\u6c34\u3002\u5c31\u50cf\u907f\u514d\u5851\u6599\u888b\u6216\u5851\u6599\u5438\u7ba1\u4e00\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5efa\u8bae\uff0c\u4f46\u8981\u5bf9\u6c14\u5019\u53d8\u5316\u4ea7\u751f\u6709\u610f\u4e49\u7684\u5f71\u54cd\uff0c\u53ef\u80fd\u6027\u5f88\u5c0f\u3002\n\u8fd9\u6837\u7684\u8bba\u70b9\u8bd5\u56fe\u5c06\u805a\u5149\u706f\u4ece\u5927\u516c\u53f8\u8f6c\u79fb\u5230\u4e2a\u4eba\u8eab\u4e0a\uff0c\u5927\u516c\u53f8\u5171\u540c\u6784\u6210\u4e86\u6e29\u5ba4\u6c14\u4f53\u6392\u653e\u7684\u4e00\u5927\u90e8\u5206\u3002\u4eba\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u901a\u8fc7\u8d2d\u4e70\u5f53\u5730\u98df\u7269\u505a\u4e86\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u4e8b\u60c5\uff0c\u4f46\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\n\u6211\u5e76\u4e0d\u662f\u8bf4\u6211\u4eec\u4e0d\u5e94\u8be5\u505a\u90a3\u4e9b\u4e8b\u60c5\u3002\u6211\u4eec\u7edd\u5bf9\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u4f46\u5b83\u4e0d\u5e94\u8be5\u6210\u4e3a\u8054\u5408\u56fd\u6216\u4e16\u754c\u81ea\u7136\u57fa\u91d1\u4f1a\u7b49\u7ec4\u7ec7\u7684\u4e3b\u8981\u8c08\u8d44\u3002\n\u8981\u505a\u51fa\u771f\u6b63\u7684\u6539\u53d8\uff0c\u6211\u4eec\u5fc5\u987b\u5c11\u5403\u8089\u548c\u65e5\u8bb0\uff0c\u8f6c\u5411\u66f4\u591a\u7684\u53ef\u518d\u751f\u80fd\u6e90\uff0c\u5e76\u5927\u5e45\u51cf\u5c11\u822a\u7a7a\u548c\u516c\u8def\u65c5\u884c\u3002\n\u9644\u8a00\uff1a\u6211\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u53ea\u8c08\u5230\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u5f71\u54cd\u3002\u5403\u5f53\u5730\u7684\u6709\u673a\u98df\u54c1\u8fd8\u6709\u5176\u4ed6\u597d\u5904\uff0c\u6bd4\u5982\u652f\u6301\u5f53\u5730\u7ecf\u6d4e\uff0c\u800c\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u505a\u662f\u4e2a\u597d\u4e3b\u610f\u3002", "note_en": "There&#39;s a common misconception that eating locally produced foods is important from an environmental point of view. Even the  UN tweeted about it. This is wrong.\n   The reason for this is that most foods are transported by ship and not plane. Only about 0.16% of food miles are done by plane:\n  It makes sense to try and avoid foods that are transported by air. Typically, those are foods which are highly perishable, such as asparagus, green beans and berries.\n In some cases, eating local food even has a more negative impact on the environment than buying something that has been produced half way around the world. For example, heated greenhouses are energy intensive and can produce more greenhouse gases than transporting something for thousands of kilometers by water or road.\n It&#39;s clear that avoiding meat and diary has a much bigger impact on reducing greenhouse gas emissions.\n  It could just be ignorance. However, I think that it&#39;s often a straw man argument pushed by interest groups that want to keep selling meat and diary. It is something that is easy to do and seems to make sense on the surface to many people. Let&#39;s take another look at that UN tweet from before:\n  In addition to eating local food, they also recommend unplugging unused appliances and using less hot water. Like avoiding plastic bags or plastic straws, this is good advice but a long shot from making a meaningful impact on climate change.\n Arguments like these try to shift away the spot light from big companies who collectively make up a large chunk of the greenhouse gas emissions to individuals. People think that they did something meaningful by buying local food, which, as we have seen, is not the case.\n I&#39;m not saying that we shouldn&#39;t do those things. We absolutely should, but it shouldn&#39;t be the main talking points of organizations like the UN or WWF.\n To make real change, we must eat less meat and diary, move to more renewable energy sources and reduce air and road travel significantly.\n PS: I&#39;m only talking about the impact on climate change in this article. Eating local and organic food has other benefits such as supporting the local economy and in most cases it&#39;s a good idea to do it.", "posttime": "2020-07-06 03:48:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73af\u5883,local,\u98df\u7269", "title": "\u5403\u5f53\u5730\u98df\u7269\u5bf9\u73af\u5883\u7684\u5f71\u54cd\u5fae\u4e4e\u5176\u5fae", "title_en": "Eating local has a tiny environmental impact", "transed": 1, "url": "https://blog.yeticheese.com/eating-local-has-tiny-environmental-impact/", "via": "", "real_tags": ["\u73af\u5883", "local", "\u98df\u7269"]}, {"category": "", "categoryclass": "", "imagename": "b2fc3d9d8a88f4d8f437ca6fe72a5dda.jpg", "infoid": 1009985, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "http://CppCon.org-\u6f14\u793a\u6587\u7a3f\u5e7b\u706f\u7247\uff0cPDF\uff0c\u6e90\u4ee3\u7801\u548c\u5176\u4ed6\u6f14\u793a\u8005\u6750\u6599\u53ef\u5728\u4ee5\u4e0b\u7f51\u5740\u83b7\u5f97\uff1ahttps://github.com/CppCon/CppCon2017-\u81ea\u52a8\u6d4b\u8bd5.", "note_en": "http://CppCon.org \u2014 Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017 \u2014 Automated t...", "posttime": "2020-07-06 03:48:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,c++,\u4ea4\u6613,cppcon,microsecond", "title": "\u5fae\u79d2\u662f\u6c38\u6052\u7684CppCon\uff1aC++\u4e2d\u7684\u9ad8\u6027\u80fd\u4ea4\u6613\u7cfb\u7edf", "title_en": "CppCon When a Microsecond Is an Eternity:High Performance Trading Systems in C++", "transed": 1, "url": "https://youtu.be/NH1Tta7purM", "via": "", "real_tags": ["\u6027\u80fd", "c++", "\u4ea4\u6613", "cppcon"]}, {"category": "", "categoryclass": "", "imagename": "aae2272ce518408c1753a6dc17848808.jpg", "infoid": 1009984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u636e\u5e93\u65e0\u5904\u4e0d\u5728\uff0c\u800c\u4e14\u5b83\u4eec\u4f1a\u4e00\u76f4\u5b58\u5728\u3002\u5982\u679c\u60a8\u5bf9\u5173\u7cfb\u6570\u636e\u5e93\u6bd4\u8f83\u719f\u6089\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u5bf9\u4e8b\u52a1\u6bd4\u8f83\u719f\u6089\u3002\u5728\u4f7f\u7528\u6570\u636e\u5e93\u65f6\uff0c\u4e8b\u52a1\u662f\u975e\u5e38\u5f3a\u5927\u7684\u5de5\u5177\u3002\u5b83\u4eec\u5141\u8bb8\u591a\u4e2a\u7528\u6237\u5728\u5904\u7406\u540c\u4e00\u6570\u636e\u5e93\u65f6\u5f88\u597d\u5730\u76f8\u4e92\u914d\u5408\u3002\u7136\u800c\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u60a8\u8fdf\u65e9\u4f1a\u9047\u5230\u6027\u80fd\u95ee\u9898\u3002\n\u5c3d\u7ba1\u4ea4\u6613\u5f88\u5f3a\u5927\uff0c\u4f46\u5b83\u662f\u4e00\u628a\u53cc\u5203\u5251\u3002\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u8017\u5c3d\u60a8\u7684\u6570\u636e\u5e93\u8d44\u6e90\u3002\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f\u5fae\u8c03I(\u9694\u79bb)\u4f4dACID(\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027)\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5982\u679c\u60a8\u613f\u610f\u5728\u9694\u79bb\u7684\u5b9e\u9645\u542b\u4e49\u4e0a\u505a\u51fa\u59a5\u534f\uff0c\u5219\u53ef\u4ee5\u589e\u52a0\u5e76\u53d1\u6027\u3002\n\u9996\u5148\uff0c\u4f1a\u51fa\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u5047\u8bbe\u6bcf\u4e2a\u8bed\u53e5\u90fd\u9075\u5b88ACID\u539f\u5219(\u786e\u5b9e\u5982\u6b64)\uff0c\u5f53\u4e0d\u540c\u7528\u6237\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8bed\u53e5\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u5982\u4e0b\u95ee\u9898\uff1a\n\u810f\u8bfb\u53d6-\u6570\u636e\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u88ab\u8bfb\u53d6\u3002\u4f8b\u5982\uff1aBob\u66f4\u6539\u4e86\u4e00\u884c\uff0c\u8fd9\u662f\u4e8b\u52a1\u7684\u4e00\u90e8\u5206\u3002Alice\u8bfb\u53d6\u8be5\u884c\u5e76\u83b7\u53d6\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u3002\u7136\u540e\uff0cBob\u56de\u6eda\u4e8b\u52a1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAlice\u62e5\u6709\u6280\u672f\u4e0a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u3002\n\u4e0d\u53ef\u91cd\u590d\u8bfb\u53d6-\u540e\u7eed\u8bfb\u53d6\u4e0d\u4f1a\u8fd4\u56de\u4e00\u81f4\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff1aAlice\u542f\u52a8\u4e00\u4e2a\u8bfb\u53d6\u4e00\u884c\u6570\u636e\u7684\u4e8b\u52a1\u3002Bob\u66f4\u6539\u8be5\u884c\u5e76\u63d0\u4ea4\u66f4\u6539\u3002\u5f53\u5728\u540c\u4e00\u4e8b\u52a1\u4e2d\u65f6\uff0cAlice\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u884c\uff0c\u5e76\u83b7\u5f97\u6570\u636e\u7684\u65b0\u503c\u3002\n\u5e7b\u5f71\u8bfb\u53d6-\u540e\u7eedSELECT\u8bed\u53e5\u53ef\u80fd\u8fd4\u56de\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff1aAlice\u4f7f\u7528\u8fd4\u56de\u591a\u884c\u7684WHERE\u5b50\u53e5\u8fd0\u884cSELECT\u8bed\u53e5\u3002Bob\u63d2\u5165\u4e00\u4e2a\u4e0eAlice\u4e4b\u524d\u8fd0\u884c\u7684\u8bed\u53e5\u7684WHERE\u5b50\u53e5\u76f8\u5339\u914d\u7684\u884c\uff0c\u5e76\u63d0\u4ea4\u7ed3\u679c\u3002Alice\u8fd0\u884c\u4e0e\u5979\u4e4b\u524d\u8fd0\u884c\u7684\u76f8\u540c\u7684SELECT\u8bed\u53e5\uff0c\u73b0\u5728\u5979\u5f97\u5230\u4e86\u65b0\u7684\u884c\u3002\n\u6211\u4eec\u770b\u5230\u4e86\u53ef\u80fd\u4f1a\u51fa\u9519\u7684\u5730\u65b9\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5982\u4f55\u624d\u80fd\u9632\u5fa1\u5b83\u3002\u9996\u5148\u662f\u5de5\u5177\uff1a\u6570\u636e\u5e93\u9501\u3002\u4e00\u65e6\u4e8b\u52a1\u83b7\u53d6\u4e86\u5bf9\u8d44\u6e90\u7684\u9501\u5b9a\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u963b\u6b62\u5176\u4ed6\u4e8b\u52a1\u83b7\u53d6\u5176\u9501\u5b9a\u6765\u9650\u5236\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8be5\u76f8\u540c\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u8fd9\u4e00\u70b9\uff0c\u518d\u52a0\u4e0a\u6bcf\u4e2a\u4e8b\u52a1\u5728\u8fdb\u884c\u64cd\u4f5c\u4e4b\u524d\u90fd\u9700\u8981\u83b7\u53d6\u9002\u5f53\u7684\u9501\u7684\u4e8b\u5b9e\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f8\u5f53\u5168\u9762\u7684\u53ef\u4ee5\u64cd\u4f5c\u7684\u673a\u5236\u3002\n\u9875\u7ea7\uff1a\u8fd9\u662f\u4e00\u4e2a\u4e2d\u95f4\u9501(\u5728\u884c\u548c\u8868\u4e4b\u95f4)\uff0c\u9002\u7528\u4e8e\u9875-\u8868\u884c\u7684\u5b50\u96c6\uff0c\u901a\u5e38\u662f\u5728\u5355\u4e2a\u78c1\u76d8\u64cd\u4f5c\u4e2d\u53ef\u4ee5\u4ece\u78c1\u76d8\u8bfb\u53d6\u7684\u6570\u636e\u91cf\u3002\n\u5171\u4eab\u9501\u5b9a\uff0c\u4e5f\u79f0\u4e3a\u8bfb\u9501\u5b9a\u3002\u5f53\u4e8b\u52a1\u60f3\u8981\u8bfb\u53d6\u6570\u636e(\u5373SELECT\u64cd\u4f5c)\u65f6\uff0c\u901a\u5e38\u4f1a\u8bf7\u6c42\u8d44\u6e90\u4e0a\u7684\u5171\u4eab\u9501\u3002\u591a\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u83b7\u53d6\u5bf9\u8d44\u6e90\u7684\u5171\u4eab\u9501\u5b9a\uff0c\u8fd9\u610f\u5473\u7740\u591a\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\u6570\u636e\u3002\n\u6392\u4ed6\u9501\uff0c\u4e5f\u79f0\u4e3a\u5199\u9501\u3002\u6392\u4ed6\u9501\u4e00\u6b21\u53ea\u80fd\u7531\u5355\u4e2a\u4e8b\u52a1\u83b7\u53d6\u3002\u5982\u679c\u5b58\u5728\u53e6\u4e00\u4e2a\u62e5\u6709\u8d44\u6e90\u9501(\u5171\u4eab\u6216\u72ec\u5360)\u7684\u4e8b\u52a1\uff0c\u5219\u8be5\u4e8b\u52a1\u5c06\u7b49\u5f85\u53e6\u4e00\u4e2a\u4e8b\u52a1\u91ca\u653e\u9501\u3002\u5f53\u4e00\u4e2a\u4e8b\u52a1\u6301\u6709\u6392\u4ed6\u9501\u65f6\uff0c\u4efb\u4f55\u5176\u4ed6\u4e8b\u52a1\u90fd\u4e0d\u80fd\u83b7\u53d6\u5bf9\u8be5\u8d44\u6e90\u7684\u4efb\u4f55\u9501(\u5171\u4eab\u7684\u6216\u72ec\u5360\u7684)\u3002\n\u66f4\u65b0\u9501\u662f\u6392\u4ed6\u9501\u66f4\u5bbd\u677e\u7684\u7248\u672c\u3002\u53ef\u4ee5\u5728\u5177\u6709\u5171\u4eab\u9501\u7684\u5bf9\u8c61\u4e0a\u83b7\u53d6\u66f4\u65b0\u9501\u3002\u5f53\u4e8b\u52a1\u51c6\u5907\u597d\u66f4\u65b0\u5bf9\u8c61\u65f6\uff0c\u5b83\u4f1a\u5c06\u66f4\u65b0\u9501\u8f6c\u6362\u4e3a\u6392\u4ed6\u9501\u3002\u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u5728\u5177\u6709\u5171\u4eab\u9501\u7684\u5bf9\u8c61\u4e0a\u83b7\u53d6\u66f4\u65b0\u9501\uff0c\u4f46\u4e0d\u80fd\u5728\u5177\u6709\u66f4\u65b0\u9501\u7684\u5bf9\u8c61\u4e0a\u83b7\u53d6\u5171\u4eab\u9501\u3002\n\u4e8b\u52a1\u5229\u7528\u8fd9\u4e9b\u9501\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u9694\u79bb\u7ea7\u522b\u3002\u5728\u975e\u5e38\u9ad8\u7684\u7ea7\u522b\u4e0a\uff0c\u9694\u79bb\u7ea7\u522b\u662f\u5e73\u8861\u5e76\u53d1\u6027\u548c\u9694\u79bb\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\uff0c\u9501\u7684\u9650\u5236\u6027\u5c31\u8d8a\u5f3a\uff0c\u56e0\u6b64\u83b7\u5f97\u6240\u8ff0\u9501\u9700\u8981\u7b49\u5f85\u7684\u4e8b\u52a1\u5c31\u8d8a\u591a\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4e8b\u52a1\u603b\u6570\u51cf\u5c11\u3002\u6b63\u5982\u4ed6\u4eec\u6240\u8bf4\uff0c\u5929\u4e0b\u6ca1\u6709\u514d\u8d39\u7684\u5348\u9910\u3002\u4ee5\u4e0b\u662f\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a\n\u8fd9\u662f\u6700\u5bbd\u677e\u7684\u9694\u79bb\u7ea7\u522b\u3002\u5b83\u5141\u8bb8\u5f53\u524d\u4e8b\u52a1\u8bfb\u53d6\u5176\u4ed6\u4e8b\u52a1\u5c1a\u672a\u63d0\u4ea4\u7684\u6570\u636e\u3002\u4e8b\u52a1\u4e0d\u4f1a\u83b7\u53d6\u4efb\u4f55\u8d44\u6e90\u9501\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bfb\u53d6\u6b63\u5728\u88ab\u5176\u4ed6\u4e8b\u52a1\u4fee\u6539\u7684\u5185\u5bb9\u3002\n\u4e8b\u52a1\u53ea\u80fd\u8bfb\u53d6\u5df2\u63d0\u4ea4\u7684\u6570\u636e\u3002\u8be5\u4e8b\u52a1\u5728\u8bfb\u53d6\u8d44\u6e90\u65f6\u83b7\u53d6\u5171\u4eab\u9501\uff0c\u5e76\u5728\u8bfb\u53d6\u8bed\u53e5\u5b8c\u6210\u540e\u7acb\u5373\u91ca\u653e\u5b83\u4eec\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u8bfb\u53d6\u5df2\u5b8c\u6210\u66f4\u65b0\u7684\u6570\u636e\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u6bcf\u6761\u6307\u4ee4\u4e4b\u540e\u91ca\u653e\u9501\uff0c\u6240\u4ee5\u5728\u540e\u7eed\u8bfb\u53d6\u65f6\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\u5f53\u4e8b\u52a1\u60f3\u8981\u8bfb\u53d6\u8d44\u6e90\u65f6\uff0c\u5b83\u4f1a\u83b7\u53d6\u5171\u4eab\u9501\uff0c\u5e76\u5c06\u9501\u4fdd\u6301\u5230\u4e8b\u52a1\u7ed3\u675f\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u6574\u4e2a\u4e8b\u52a1\u4e2d\u4fdd\u6301\u5171\u4eab\u9501\uff0c\u6240\u4ee5\u6211\u4eec\u786e\u4fdd\u6240\u6709\u8bfb\u53d6\u90fd\u8fd4\u56de\u76f8\u540c\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u9632\u6b62\u5176\u4ed6\u4e8b\u52a1\u5728\u4e8b\u52a1\u7ed3\u675f\u4e4b\u524d\u4fee\u6539\u6570\u636e\u3002\n\u4e8b\u52a1\u5185\u7684\u6240\u6709\u8bfb\u53d6\u90fd\u8fd4\u56de\u4e8b\u52a1\u5f00\u59cb\u65f6\u53ef\u7528\u7684\u6570\u636e\u3002\u8fd9\u5c31\u597d\u50cf\u4e8b\u52a1\u5728\u5f00\u59cb\u65f6\u62cd\u6444\u6570\u636e\u7684\u5feb\u7167\uff0c\u5e76\u5728\u6574\u4e2a\u4e8b\u52a1\u4e2d\u4f7f\u7528\u8be5\u5feb\u7167\u3002\u5b83\u5728\u529f\u80fd\u4e0a\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u63cf\u8ff0\u7684\u53ef\u5e8f\u5217\u5316\u7ea7\u522b\uff0c\u4f46\u5b83\u4f7f\u7528\u4e86\u4e00\u79cd\u7565\u6709\u4e0d\u540c\u7684\u673a\u5236\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u662f\u53ef\u7528\u7684\u6700\u9ad8\u9694\u79bb\u7ea7\u522b\u3002\u4e8b\u52a1\u83b7\u53d6\u9700\u8981\u8bfb\u53d6\u7684\u8d44\u6e90\u7684\u8bfb\u9501\u5b9a\uff0c\u5e76\u5728\u4e8b\u52a1\u6301\u7eed\u65f6\u95f4\u5185\u4fdd\u7559\u5b83\u4eec\uff0c\u4ece\u800c\u786e\u4fdd\u6570\u636e\u5728\u8bfb\u53d6\u540e\u5728\u4e8b\u52a1\u6301\u7eed\u65f6\u95f4\u5185\u4fdd\u6301\u4e0d\u53d8\u3002\u5b83\u8fd8\u5728\u66f4\u65b0\u6570\u636e\u65f6\u83b7\u53d6\u6392\u4ed6\u9501\uff0c\u5e76\u5728\u4e8b\u52a1\u7ed3\u675f\u65f6\u91ca\u653e\u5b83\u4eec\u3002\u6b64\u5916\uff0c\u4e8b\u52a1\u4f1a\u5bf9\u5f53\u524d\u4e8b\u52a1\u4e2d\u5339\u914d\u6761\u4ef6\u7684\u4efb\u4f55\u884c\u8bbe\u7f6e\u884c\u8303\u56f4\u9501\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u907f\u514d\u5e7b\u5f71\u8bfb\u53d6\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u6bcf\u6b21\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e8b\u52a1\u65f6\uff0c\u90fd\u5e94\u8be5\u82b1\u70b9\u65f6\u95f4\u8003\u8651\u6240\u9700\u7684\u9002\u5f53\u9694\u79bb\u7ea7\u522b\u3002\u60a8\u53ef\u4ee5\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u8bbe\u7f6e\u4e3a\u53ef\u5e8f\u5217\u5316\uff0c\u7136\u540e\u5c31\u5230\u6b64\u4e3a\u6b62\uff0c\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u8fd9\u4e48\u5f3a\u7684\u9650\u5236\uff0c\u8fd9\u6837\u53ea\u4f1a\u7ed9\u6570\u636e\u5e93\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u5ef6\u8fdf\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u60c5\u51b5\uff0c\u5728\u63d0\u4ea4\u8bfb\u53d6\u548c\u53ef\u91cd\u590d\u8bfb\u53d6\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u5c31\u8db3\u591f\u4e86\u3002\u628a\u8fd9\u5f20\u684c\u5b50\u7262\u8bb0\u5728\u5fc3\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5e2e\u52a9\u4f60\u505a\u51fa\u51b3\u5b9a\u3002\u59cb\u7ec8\u4f7f\u7528\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u627f\u53d7\u7684\u6700\u5bbd\u677e\u7684\u9694\u79bb\u7ea7\u522b\u3002", "note_en": "Databases are everywhere and they\u2019re here to stay. If you\u2019re a bit familiar with  relational databases you are probably familiar with transactions. Transactions are pretty powerful tools when working with databases. They allow multiple users to play nicely with each other while working on the same database. However, with more and more users connecting to the same database, you\u2019re bound to run into performance issues sooner or later.\n Powerful as they are, transactions are a double edge sword. Used incorrectly they can, and will eat up your database\u2019s resources. Transaction isolation levels, are a way to fine-tune the I (Isolation) bit of ACID (Atomicity, Consistency, Isolation, Durability). You can increase concurrency if you are willing to make a compromise about what  Isolated actually means.\n  First things first, what can possibly go wrong ? Assuming that each statement abides by the ACID principles (which they are), when multiple statements are run by different users at the same time, you can run into issues such as:\n Dirty reads \u2013 Data is being read while in the process of being updated. For example: Bob changes a row a part of a transaction. Alice reads that row and gets the data that is saved in the database. Bob then rolls back the transaction. In this case Alice has data that technically never existed.\n Non-repeatable reads \u2013 Subsequent reads don\u2019t return consistent results. For example: Alice starts a transaction that reads data on a row. Bob changes that row and commits the changes. Alice, while in the same transaction, reads the same row again and gets a new value for the data.\n Phantom reads \u2013 Subsequent select statements may return different results. For example: Alice runs a select statement with a where clause that returns multiple rows. Bob inserts a row that fits with the where clause of the statement that Alice ran previously and commits the result. Alice runs the same select statement that she previously ran, and she now gets new rows as a result.\n  We saw what can go wrong, now let\u2019s see how we can defend against it. Firstly, the tools: database locks. Once a transaction acquires a lock on a resource, they can limit the access other transactions have on that same resource by preventing other transactions from acquiring their locks. This, combined with the fact that each transaction needs to acquire the appropriate lock before they make operations, gives us a pretty comprehensive and mechanism that we can play with.\n   Page level: This is an intermediary lock (between row and table) and applies to a page \u2013 a subset of the table rows, typically, the amount of data that can be read from the disk in a single disk operation.\n  Shared locks, also known as read locks. A shared lock on a resource is usually requested when a transaction wants to read data (i.e. select operations). Multiple transactions can acquire shared locks on a resource, meaning that multiple transactions can read data at the same time.\n Exclusive locks, also known as write-locks. An exclusive lock can only be acquired by a single transaction at a time. If there is another transaction who has a lock on the resource (shared or exclusive), the transaction will wait for the other transaction to release the locks. While a transaction holds an exclusive lock, no other transactions can acquire any locks on the resource (shared or exclusive)\n Update locks, are a more relaxed version of the exclusive lock. An update lock can be acquired on an object that has a shared lock on it. When the transaction is ready to update the object, it will convert the update lock into an exclusive lock. Please note that update locks can be acquired an object that has a shared lock on it, but a shared lock cannot be acquired on an object that has an update lock.\n  Transactions make use of these locks to implement different isolation levels. At a really high level, isolation levels are a way to balance concurrency with isolation. The higher the isolation level, the more restrictive locks are going to be, thus the more transactions will have to wait to acquire said locks, which will result in a lower total number of transaction. As they say, there\u2019s no such a thing as a free lunch. These are the transaction isolation levels:\n  This is the most relaxed isolation level. It allows the current transaction to read data that hasn\u2019t been committed by other transactions yet. Transactions don\u2019t acquire any locks for resources. This can potentially result in reading that that is in the middle of modified by other transactions.\n  The transaction can only read data that has been committed. The transaction acquires shared locks when reading resources and it releases them as soon as the read statement is complete. This means that we are only read data that has completed updating, but since we\u2019re releasing the lock after each instruction, we can get different results on subsequent reads.\n  The transaction acquires a shared lock when it wants to read a resource and keeps the locks to the end of the transaction. As we keep shared locks throughout the transaction, we ensure that all reads return the same data, since we are keeping other transactions from modifying the data until the transaction ends.\n   All the reads inside the transaction return the data as it was available at beginning of the transaction. It\u2019s as if the transaction takes a snapshot of the data at the beginning and uses that throughout the transaction. It\u2019s functionally similar to the Serializable level described below, but it makes use of a slightly different mechanism to achieve that.\n  This is the highest isolation level available. The transaction acquires read locks for resources that need to be read and keeps them for the duration of the transaction, thus ensuring that data, once read, it stays the same for the duration of the transaction. It also acquires exclusive locks when updating the data and releases them at the end of the transaction. Additionally, the transaction places row range locks on of any rows matching conditions in the current transaction, so that we avoid phantom reads.\n  To summarize, every time you use a transaction in your code, you should take a moment and consider the appropriate isolation level that is needed. You can just put everything as serializable and call it a day, but in most cases, such a strong restriction is not needed and you would only be introducing unnecessary delays into your database. For most cases, a choice between Read Committed and Repeatable Reads would be enough. Keep this table in your mind as it should help you decide. Always use the most relaxed isolation level your app can afford.", "posttime": "2020-07-06 03:47:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u52a1,transaction", "title": "\u4e86\u89e3\u6709\u5173\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u7684\u4fe1\u606f", "title_en": "Learn about transaction isolation levels", "transed": 1, "url": "https://lanraccoon.com/2020/learn-about-transaction-isolation-levels/", "via": "", "real_tags": ["\u4e8b\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "99653a23e39012c0659b31021db278e9.jpg", "infoid": 1009982, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u4fe1\u606f\u5b89\u5168\u754c\u5bf9\u653e\u5f03\u4f7f\u7528\u9ed1\u5e3d\u548c\u767d\u5e3d\u7684\u547c\u58f0\u505a\u51fa\u4e86\u6124\u6012\u7684\u56de\u5e94\uff0c\u79f0\u8fd9\u4e24\u4e2a\u672f\u8bed\uff0c\u5c24\u5176\u662f\u9ed1\u5e3d\uff0c\u4e0e\u79cd\u65cf\u6210\u89c1\u65e0\u5173\u3002\n\u6628\u665a\u6df1\u591c\uff0c\u8c37\u6b4c\u5de5\u7a0b\u526f\u603b\u88c1\u3001\u8d1f\u8d23Android\u5b89\u5168\u548cGoogle Play\u5546\u5e97\u7684\u5927\u536b\u00b7\u514b\u83b1\u5fb7\u9a6c\u8d6b(David Kleidermacher)\u9000\u51fa\u4e86\u539f\u5b9a\u4e8e8\u6708\u4efd\u5728\u7f8e\u56fd\u9ed1\u5e3d2020\u5b89\u5168\u4f1a\u8bae\u4e0a\u53d1\u8868\u7684\u6f14\u8bb2\uff0c\u4e4b\u540e\u6709\u5173\u8fd9\u4e00\u8bdd\u9898\u7684\u8ba8\u8bba\u5f00\u59cb\u4e86\u3002\n\u5728\u4ed6\u7684\u9000\u51fa\u58f0\u660e\u4e2d\uff0cKleidermacher\u8981\u6c42\u4fe1\u606f\u5b89\u5168\u884c\u4e1a\u8003\u8651\u7528\u4e2d\u6027\u7684\u66ff\u4ee3\u54c1\u53d6\u4ee3\u9ed1\u5e3d\u3001\u767d\u5e3d\u548c\u4e2d\u95f4\u4eba\u7b49\u672f\u8bed\u3002\n\u8fd9\u4e9b\u53d8\u5316\u6d88\u9664\u4e86\u6709\u5bb3\u7684\u8054\u60f3\uff0c\u4fc3\u8fdb\u4e86\u5305\u5bb9\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u6253\u7834\u4e86\u65e0\u610f\u8bc6\u504f\u89c1\u7684\u56f4\u5899\u3002\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u540c\u610f\u66f4\u6539\u54ea\u4e9b\u672f\u8bed\uff0c\u4f46\u6211\u5f3a\u70c8\u5730\u611f\u89c9\u5230\u6211\u4eec\u7684\u8bed\u8a00\u9700\u8981\u66f4\u6539(\u7279\u522b\u662f\u8fd9\u4e00\u4e2a)\u3002\n-David Kleidermacher(@DaveKSecure)2020\u5e747\u67083\u65e5\u3002\n\u867d\u7136Kleidermacher\u53ea\u8981\u6c42\u4e1a\u754c\u8003\u8651\u66f4\u6539\u8fd9\u4e9b\u6761\u6b3e\uff0c\u4f46\u51e0\u540d\u6210\u5458\u5c06\u4ed6\u7684\u58f0\u660e\u8bef\u8ba4\u4e3a\u662f\u76f4\u63a5\u8981\u6c42\u9ed1\u5e3d\u4f1a\u8bae\u66f4\u540d\u3002\n\u968f\u7740\u9ed1\u5e3d\u6210\u4e3a\u7f51\u7edc\u5b89\u5168\u9886\u57df\u6700\u5927\u7684\u4e8b\u4ef6\uff0c\u5173\u4e8e\u8fd9\u4e00\u8bdd\u9898\u7684\u5728\u7ebf\u8ba8\u8bba\u8fc5\u901f\u5728\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u4e2d\u5e7f\u6cdb\u4f20\u64ad\uff0c\u4e3b\u5bfc\u4e867\u67084\u65e5\u7684\u5468\u672b\u3002\n\u867d\u7136\u4e00\u90e8\u5206\u4fe1\u606f\u5b89\u5168\u793e\u533a\u6210\u5458\u540c\u610fKledermacher\u7684\u89c2\u70b9\uff0c\u4f46\u7edd\u5927\u591a\u6570\u4eba\u5e76\u4e0d\u540c\u610f\uff0c\u4ed6\u4eec\u79f0\u8fd9\u662f\u5c06\u7f8e\u5fb7\u4fe1\u53f7\u53d1\u6325\u5230\u4e86\u6781\u81f4\u3002\n\u5927\u591a\u6570\u5b89\u5168\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u8fd9\u4e9b\u672f\u8bed\u4e0e\u79cd\u65cf\u4e3b\u4e49\u6216\u80a4\u8272\u65e0\u5173\uff0c\u5b83\u4eec\u8d77\u6e90\u4e8e\u7ecf\u5178\u7684\u897f\u65b9\u7535\u5f71\uff0c\u5728\u8fd9\u4e9b\u7535\u5f71\u4e2d\uff0c\u574f\u4eba\u901a\u5e38\u6234\u7740\u9ed1\u8272\u7684\u5e3d\u5b50\uff0c\u800c\u597d\u4eba\u901a\u5e38\u6234\u7740\u767d\u8272\u7684\u5e3d\u5b50\u3002\n\u5176\u4ed6\u4eba\u6307\u51fa\uff0c\u9ed1\u4eba\u548c\u767d\u4eba\u4e4b\u95f4\u7684\u4e8c\u5143\u8bba\u4ee3\u8868\u7740\u6076\u548c\u5584\uff0c\u8fd9\u662f\u81ea\u6587\u660e\u8bde\u751f\u4ee5\u6765\u5c31\u5b58\u5728\u7684\u6982\u5ff5\uff0c\u751a\u81f3\u5728\u4eba\u7c7b\u4e4b\u95f4\u5b58\u5728\u79cd\u65cf\u5206\u6b67\u4e4b\u524d\u5f88\u4e45\u3002\n\u8fd9\u6574\u4ef6\u4e8b\u8ba9\u9ed1\u5e3d\u6709\u70b9\u8ff7\u60d1\u4e0d\u89e3\uff0c\u5b83\u662f\u79cd\u65cf\u4e3b\u4e49\u8bba\u8c03\u3002\u8fd9\u4e2a\u8bcd\u6765\u81ea\u897f\u65b9\u7535\u5f71\u4e2d\u7684\u5e3d\u5b50\u989c\u8272\uff0c\u4e0e\u79cd\u65cf\u65e0\u5173\u3002\u4e3a\u975e\u79cd\u65cf\u6307\u63a7\u7684\u672f\u8bed\u63d0\u51fa\u79cd\u65cf\u4e3b\u4e49\u7684\u542b\u4e49\uff0c\u7136\u540e\u8bd5\u56fe\u4ee5\u8fd9\u4e9b\u7406\u7531\u6539\u53d8\u5b83\u4eec\uff0c\u611f\u89c9\u662f\u9519\u8bef\u7684\u3002\n-MalwareTech(@MalwareTechBlog)2020\u5e747\u67084\u65e5\u3002\n\u9ed1\u4eba\u60f3\u8981\u7684\u53ea\u662f\u7ed3\u675f\u7cfb\u7edf\u6027\u7684#\u79cd\u65cf\u4e3b\u4e49\u3002\u5bf9\u6bcf\u4e00\u6b21\u63d0\u5230\u201c\u9ed1\u4eba\u201d\u8fd9\u4e2a\u8bcd\u90fd\u53cd\u5e94\u8fc7\u5ea6\u662f\u65e0\u6d4e\u4e8e\u4e8b\u7684\u3002\u8fd9\u548c\u90a3\u4e9b\u58f0\u79f0\u201c\u6211\u770b\u4e0d\u89c1\u989c\u8272\u201d\u7684\u4eba\u4e00\u6837\u611a\u8822\u3002\u90a3\u4e5f\u592a\u8822\u4e86\u3002\u4f60\u5e94\u8be5\u770b\u5230\u8272\u5f69--\u8fd9\u5c31\u662f\u751f\u6d3b\u7684\u7f8e\uff01#INFOSEC https://t.co/oON1QqHW76\u3002\n-\u5f7c\u5f97\u00b7\u59c6\u8d1d\u83b1\ud83c\uddff\ud83c\udde6(@PeterMBL_)2020\u5e747\u67085\u65e5\u3002\n\u6211\u5f88\u56f0\u60d1\uff0c\u6211\u4ee5\u4e3a\u9ed1\u767d\u76f8\u95f4\u7684\u5e3d\u5b50\u662f\u65e7\u897f\u90e8\u7684\u57fa\u7840\uff0c\u5728\u90a3\u91cc\uff0c\u5356\u4e1c\u897f\u7684\u4eba\u6234\u7740\u767d\u8272\u7684\u5e3d\u5b50\uff0c\u574f\u86cb\u6234\u7740\u9ed1\u8272\u7684\u5e3d\u5b50\u3002\u5982\u679c\u6211\u65e0\u77e5\uff0c\u6211\u5411https://t.co/220EbXzoft\u9053\u6b49\u3002\n-Fenrir(@semibogan)2020\u5e747\u67084\u65e5\n\u201c\u9ed1\u5e3d\u201d\u4e00\u8bcd\u6765\u6e90\u4e8e\u5bf9\u4e00\u540d\u795e\u79d8\u9ed1\u5ba2\u7684\u63cf\u8ff0\uff0c\u4ed6\u5446\u5728\u9ed1\u6697\u4e2d\uff0c\u7a7f\u7740\u9ed1\u8272\u8863\u670d\u4ee5\u907f\u514d\u5f15\u8d77\u6ce8\u610f\u3002\u5b83\u6307\u7684\u662f\u5e3d\u5b50\u7684\u989c\u8272\uff0c\u800c\u4e0d\u662f\u9ed1\u5ba2\u7684\u80a4\u8272\u3002https://t.co/5F6bErwrlG pic.twitter.com/EF9F0CusrE\u3002\n-Azeria(@Fox0x01)2020\u5e747\u67084\u65e5\u3002\n\u597d\u7684\uff0c\u5e2e\u5e2e\u6211\u2026\u2026\u3002\u56e0\u4e3a\u6211\u5728\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a\u672c\u80fd\u662f\u8bf4\u6539\u53d8\u9ed1\u5e3d\uff0c\u56e0\u4e3a\u91cc\u9762\u6709\u9ed1\u8272\u8fd9\u4e2a\u8bcd\u662f\u611a\u8822\u7684\uff0c\u4e5f\u662f\u8868\u6f14\u6027\u7684\u3002\u8fd9\u4ef6\u4e8b\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff1fhttps://t.co/uJzvLQ3tAW\u3002\n-Viking SEC#BlackLivesMatter(@Viking_SEC)2020\u5e747\u67084\u65e5\u3002\n\u73b0\u5728\uff0c\u4fe1\u606f\u5b89\u5168\u793e\u533a\u4f3c\u4e4e\u4e0d\u613f\u610f\u653e\u5f03\u8fd9\u4e24\u4e2a\u672f\u8bed\uff0c\u4ed6\u4eec\u5e76\u4e0d\u8ba4\u4e3a\u5728\u4e0e\u4fe1\u606f\u5b89\u5168\u76f8\u5173\u7684\u6587\u7ae0\u4e2d\u4f7f\u7528\u8fd9\u4e24\u4e2a\u672f\u8bed\u662f\u4e2a\u95ee\u9898\u3002\n\u4f46\u603b\u4f53\u800c\u8a00\uff0c\u514b\u83b1\u5fb7\u9a6c\u8d6b\u547c\u5401\u7528\u66ff\u4ee3\u672f\u8bed\u53d6\u4ee3\u8fd9\u4e24\u4e2a\u672f\u8bed\u5e76\u4e0d\u662f\u4e00\u9879\u5355\u72ec\u7684\u52aa\u529b\uff0c\u800c\u662f\u987a\u5e94\u4e86\u6574\u4e2a\u79d1\u6280\u754c\u6e05\u7406\u6280\u672f\u8bed\u8a00\u7684\u666e\u904d\u8d8b\u52bf\u3002\n\u5728\u7f8e\u56fd\u548c\u6b27\u6d32\u4e00\u4e9b\u5730\u533a\u7206\u53d1\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u6297\u8bae\u6d3b\u52a8\u540e\uff0c\u51e0\u5bb6\u516c\u53f8\u5ba3\u5e03\u8ba1\u5212\u505c\u6b62\u5728\u4ed6\u4eec\u7684\u6280\u672f\u6587\u4ef6\u4e2d\u4f7f\u7528\u5e26\u6709\u79cd\u65cf\u548c\u5974\u96b6\u5236\u8272\u5f69\u7684\u672f\u8bed\u3002\nTwitter\u3001GitHub\u3001\u5fae\u8f6f\u3001LinkedIn\u3001Google\u3001Ansible\u548c\u5176\u4ed6\u516c\u53f8\u627f\u8bfa\u6539\u53d8\u5176\u4ea7\u54c1\u548c\u57fa\u7840\u8bbe\u65bd\u4e2d\u7684\u6280\u672f\u8bed\u8a00\uff0c\u4ee5\u5220\u9664\u4e3b\u3001\u4ece\u3001\u9ed1\u540d\u5355\u3001\u767d\u540d\u5355\u7b49\u672f\u8bed\u3002\n\u6211\u4eec\u4ece\u4e00\u7ec4\u6211\u4eec\u60f3\u8981\u653e\u5f03\u4f7f\u7528\u7684\u5355\u8bcd\u5f00\u59cb\uff0c\u8f6c\u800c\u4f7f\u7528\u66f4\u5177\u5305\u5bb9\u6027\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\uff1apic.twitter.com/6SMGd9celn\u3002\n-\u63a8\u7279\u5de5\u7a0b(@TwitterEng)2020\u5e747\u67082\u65e5\u3002\n\u4f46\u662f\uff0c\u8fd9\u4e9b\u52aa\u529b\u6446\u8131\u653b\u51fb\u6027\u7684\u672f\u8bed\uff0c\u5982\u4e3b\u4eba\uff0c\u5974\u96b6\uff0c\u9ed1\u540d\u5355\uff0c\u767d\u540d\u5355\uff0c\u751a\u81f3\u5728\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u5982\u6b64\u6297\u8bae\u6d3b\u52a8\u4e4b\u524d\u5c31\u5df2\u7ecf\u5f00\u59cb\u4e86\u3002\n\u516c\u53f8\u548c\u5f00\u6e90\u9879\u76ee\u5982Drupal\u3001Python\u3001PostgreSQL\u548cRedis\u65e9\u5728\u51e0\u5e74\u524d\u5c31\u5220\u9664\u4e86\u653b\u51fb\u6027\u672f\u8bed\uff0c\u6709\u4e9b\u751a\u81f3\u65e9\u572821\u4e16\u7eaa\u672b\u5c31\u5220\u9664\u4e86\u3002\n2020\u5e745\u6708\uff0c\u5c31\u8fde\u82f1\u56fd\u653f\u5e9c\u7684\u7f51\u7edc\u5b89\u5168\u673a\u6784NCSC\u4e5f\u5ba3\u5e03\u5c06\u505c\u6b62\u4f7f\u7528\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\uff0c\u539f\u56e0\u662f\u8fd9\u4e24\u4e2a\u8bcd\u5b58\u5728\u6c61\u540d\u548c\u79cd\u65cf\u6210\u89c1\u3002\n\u6e05\u6d01\u6280\u672f\u8bed\u8a00\u7684\u8d8b\u52bf\u6b63\u5728\u5f88\u597d\u5730\u8fdb\u884c\uff0c\u4f46\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u6297\u8bae\u6d3b\u52a8\u7ed9\u4e86\u5b83\u4e00\u4e2a\u63d0\u632f\uff0c\u5e76\u5e2e\u52a9\u5b83\u83b7\u5f97\u4e86\u4e3b\u6d41\u5a92\u4f53\u7684\u5173\u6ce8\u548c\u66f4\u591a\u7684\u652f\u6301\u3002\n\u7136\u800c\uff0c\u4fe1\u606f\u5b89\u5168\u793e\u533a\u76ee\u524d\u5e76\u4e0d\u613f\u610f\u63a5\u53d7\u6539\u53d8\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e76\u4e0d\u8ba4\u4e3a\u8fd9\u4e9b\u6761\u6b3e\u662f\u5192\u72af\u7684\uff0c\u800c\u4e14\u8fd9\u4e9b\u6761\u6b3e\u5f88\u53ef\u80fd\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002", "note_en": "The information security (infosec) community has angrily reacted today to calls to abandon the use of the &#39;black hat&#39; and &#39;white hat&#39; terms, citing that the two, and especially &#39;black hat,&#39; have nothing to do with racial stereotyping.\n Discussions about the topic started late last night after David Kleidermacher, VP of Engineering at Google, and in charge of Android Security and the Google Play Store, withdrew from a scheduled talk he was set to give in August at the Black Hat USA 2020 security conference.\n In his withdrawal announcement, Kleidermacher asked the infosec industry to consider replacing terms like black hat, white hat, and man-in-the-middle with neutral alternatives.\n These changes remove harmful associations, promote inclusion, and help us break down walls of unconscious bias. Not everyone agrees which terms to change, but I feel strongly our language needs to (this one in particular).\n\u2014 David Kleidermacher (@DaveKSecure)  July 3, 2020\n While Kleidermacher only asked the industry to consider changing these terms, several members mistook his statement as a direct request to the Black Hat conference to change its name.\n With Black Hat being the biggest event in cyber-security, online discussions on the topic quickly became widespread among cyber-security experts, dominating the July 4th weekend.\n   While a part of the infosec community agreed with Kledermacher, the vast majority did not, and called it virtue signaling taken to the extreme.\n Most security researchers pointed to the fact that the terms had nothing to do with racism or skin color, and had their origins in classic western movies, where the villain usually wore a black hat, while the good guy wore a white hat.\n   Others pointed to the dualism between black and white as representing evil and good, concepts that have been around since the dawn of civilizations, long before racial divides even existed between humans.\n Little confused by this whole &#34;Black Hat is racist&#34; argument. The term came from hat colors in western movies, and has nothing to do with race. Coming up with racist connotations for non-racially charged terms, then trying to change them on those grounds just feels wrong.\n\u2014 MalwareTech (@MalwareTechBlog)  July 4, 2020\n All black people want is an end to systemic  #racism. Over-reacting about every mention of the word \u201cblack\u201d isnt helping.  Thats as silly as people who claim \u201cI don\u2019t see color.\u201d That\u2019s stupid. You SHOULD see color - thats the beauty of life! #infosec https://t.co/oON1QqHW76\n\u2014 Peter Mbele \ud83c\uddff\ud83c\udde6 (@PeterMBL_)  July 5, 2020\n I&#39;m confused, I thought black and white hats had their basis in old westerns where the goods guys wore the white hats and the villains wore the black. If I&#39;m being ignorant I apologise  https://t.co/220EbXzoft\n\u2014 Fenrir (@semibogan)  July 4, 2020\n  The term \u201cBlack Hat\u201d comes from the depiction of a mysterious hacker that stays in the dark, wearing black to avoid drawing attention.   It refers to the color of a hat, not the hacker\u2019s skin color.  https://t.co/5F6bErwrlG  pic.twitter.com/EF9F0CusrE\n\u2014 Azeria (@Fox0x01)  July 4, 2020\n Okay help me out here... Because my first instinct here is to say changing &#34;Blackhat&#34; because it has the word black in it is silly and performative.   Is there anything to this?  https://t.co/uJzvLQ3tAW\n\u2014 Viking Sec #BlackLivesMatter (@Viking_Sec)  July 4, 2020\n Right now, the infosec community doesn&#39;t seem to be willing to abandon the two terms, which they don&#39;t see as a problem when used in infosec-related writings.\n  But in the grand scheme of things, Kleidermacher&#39;s call to have the two terms replaced with alternatives is not a singular effort and follows a general trend to clean up technical language in the larger tech community, as a whole.\n After the Black Lives Matter protests erupted across the US and in some parts of Europe, several companies announced plans to stop using racially- and slavery-charged terms in their technical documentation.\n Companies like  Twitter,  GitHub,  Microsoft,  LinkedIn,  Google,  Ansible, and others committed to changing technical language in their products and infrastructure to remove terms like master, slave, blacklist, whitelist, and others.\n  We\u2019re starting with a set of words we want to move away from using in favor of more inclusive language, such as:  pic.twitter.com/6SMGd9celn\n\u2014 Twitter Engineering (@TwitterEng)  July 2, 2020\n But these efforts to move away from offensive terms like master, slave, blacklist, whitelist started even before the Black Lives Matter protests.\n Companies and open-source projects like  Drupal,  Python,  PostgreSQL, and  Redis had removed offensive terms years before, some as early as the late 2000s.\n In May 2020, even the UK government&#39;s cyber-security agency, the NCSC, announced it would  stop using &#34;whitelist&#34; and &#34;blacklist&#34; due to stigma and racial stereotyping surrounding the two terms.\n The trend of cleaning tech language was well underway, but the Black Lives Matter protests gave it a boost and helped it gain mainstream media attention and more backing.\n However, the infosec community is not willing to accept change at this moment for terms it doesn&#39;t see as offensive, and chances are the terms are here to stay.", "posttime": "2020-07-06 03:25:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u4ea4\u6613,\u8c37\u6b4c,\u8bc1\u5238,black", "title": "\u9ed1\u5e3d\u4f1a\u8bae\u7684\u6807\u9898\u662f\u653b\u52bf\u5417\uff1f\u8c37\u6b4c\u8bc1\u5238\u4ea4\u6613\u6240\u3002\u7814\u7a76\u4eba\u5458\u9000\u51fa", "title_en": "Is the title of the Black Hat conf offensive? Google sec. researcher withdraws", "transed": 1, "url": "https://www.zdnet.com/article/infosec-community-disagrees-with-changing-black-hat-term-due-to-racial-stereotyping/", "via": "", "real_tags": ["google", "\u4ea4\u6613", "\u8c37\u6b4c", "\u8bc1\u5238", "black"]}, {"category": "", "categoryclass": "", "imagename": "195324fcc9fedd6a8a31e61e346b4f1c.jpeg", "infoid": 1009981, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f15\u7528\u5f20\u9510\u3001\u6c88\u6797\u3001\u8fc8\u5c14\u65af\u00b7T\u7b49\u4eba\u7684\u89c2\u70b9\u3002\u7f8e\u56fd\u6210\u5e74\u4eba\u4e2d\u8001\u5e74\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u7684\u5173\u7cfb\u3002JAMA\u7f51\u7edc\u6253\u5f00\u30022020\u5e74\uff1b3(6)\uff1aE207922\u3002doi\uff1a10.1001/jamanetworkopen.2020.7922\u3002\n\u5173\u952e\u70b9espa\u00f1ol\u4e2d\u6587(\u4e2d\u6587)\u95ee\u9898\uff1a\u7f8e\u56fd\u6210\u5e74\u4eba\u76ee\u524d\u7684\u4f4e\u5ea6\u5230\u4e2d\u5ea6\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\u6216\u4e2d\u8001\u5e74\u8ba4\u77e5\u51cf\u9000\u901f\u5ea6\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u5173\u8054\uff1f\n\u5728\u8fd9\u9879\u5bf9\u6765\u81ea\u5065\u5eb7\u548c\u9000\u4f11\u7814\u7a76\u768419\u540d\u202f887\u53c2\u4e0e\u8005\u7684\u961f\u5217\u7814\u7a76\u4e2d\u53d1\u73b0\uff0c\u4e0e\u4ece\u4e0d\u996e\u9152\u76f8\u6bd4\uff0c\u5e73\u5747\u968f\u8bbf\u65f6\u95f4\u4e3a9.1\u5e74\uff0c\u4e0e\u4ece\u4e0d\u996e\u9152\u76f8\u6bd4\uff0c\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e0e\u7cbe\u795e\u72b6\u6001\u3001\u5355\u8bcd\u56de\u5fc6\u548c\u8bcd\u6c47\u7684\u9ad8\u8ba4\u77e5\u5206\u6570\u7684\u663e\u8457\u66f4\u597d\u7684\u8f68\u8ff9\u76f8\u5173\uff0c\u5e76\u4e14\u4e0e\u8fd9\u4e9b\u8ba4\u77e5\u9886\u57df\u4e2d\u6bcf\u4e2a\u8ba4\u77e5\u9886\u57df\u7684\u8f83\u4f4e\u4e0b\u964d\u7387\u76f8\u5173\u3002\n\u8fd9\u610f\u5473\u7740\u76ee\u524d\u4e2d\u8001\u5e74\u4eba\u7684\u4f4e\u5230\u4e2d\u5ea6\u996e\u9152\u91cf\u53ef\u80fd\u4e0e\u66f4\u597d\u7684\u603b\u4f53\u8ba4\u77e5\u529f\u80fd\u6709\u5173\u3002\n\u7814\u7a76\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e0e\u5404\u79cd\u8ba4\u77e5\u529f\u80fd\u4e4b\u95f4\u7684\u8054\u7cfb\u7684\u7814\u7a76\u7684\u91cd\u8981\u6027\u5f97\u51fa\u4e86\u559c\u5fe7\u53c2\u534a\u7684\u7ed3\u8bba\u3002\n\u76ee\u7684\u63a2\u8ba8\u7f8e\u56fd\u6210\u5e74\u4eba\u4ece\u4e2d\u5e74\u5230\u8001\u5e74\u7684\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\u6216\u8ba4\u77e5\u529f\u80fd\u53d8\u5316\u7387\u4e0e\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u5173\u8054\u3002\n\u8bbe\u8ba1\u3001\u8bbe\u7f6e\u548c\u53c2\u4e0e\u8005\u4e00\u9879\u524d\u77bb\u6027\u961f\u5217\u7814\u7a76\uff0c\u53c2\u4e0e\u8005\u6765\u81ea\u5065\u5eb7\u548c\u9000\u4f11\u7814\u7a76(HRS)\uff0c\u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u5168\u56fd\u4ee3\u8868\u6027\u7684\u7f8e\u56fd\u6210\u5e74\u4eba\u6837\u672c\uff0c\u5e73\u5747(SD)\u968f\u8bbf\u65f6\u95f4\u4e3a9.1(3.1)\u5e74\u3002\u4ece1996\u5e74\u52302008\u5e74\uff0c\u603b\u5171\u670919\u540d\u202f887\u53c2\u4e0e\u8005\u5728\u4eba\u529b\u8d44\u6e90\u8bc4\u4f30\u4e2d\u6d4b\u91cf\u4e86\u4ed6\u4eec\u7684\u8ba4\u77e5\u529f\u80fd\uff0c\u4ed6\u4eec\u81f3\u5c11\u53c2\u52a0\u4e863\u6b21\u4e24\u5e74\u4e00\u6b21\u7684\u8c03\u67e5\u3002\u6570\u636e\u5206\u6790\u662f\u57282019\u5e746\u6708\u81f311\u6708\u8fdb\u884c\u7684\u3002\n\u4e3b\u8981\u7ed3\u679c\u548c\u8861\u91cf\u7cbe\u795e\u72b6\u6001\u3001\u5355\u8bcd\u56de\u5fc6\u548c\u8bcd\u6c47\u8ba4\u77e5\u9886\u57df\u7684\u8f68\u8ff9\u548c\u5e74\u53d8\u5316\u7387\uff0c\u4ee5\u53ca\u603b\u8ba4\u77e5\u5206\u6570\uff0c\u5373\u5fc3\u7406\u72b6\u6001\u548c\u5355\u8bcd\u56de\u5fc6\u5206\u6570\u7684\u603b\u548c\u3002\u53c2\u4e0e\u8005\u88ab\u5206\u6210\u4e24\u4e2a\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\uff0c\u6bcf\u4e2a\u8ba4\u77e5\u6d4b\u91cf\u57fa\u4e8e\u4ed6\u4eec\u5728\u57fa\u7ebf\u4e0a\u7684\u5206\u6570\uff0c\u5e76\u901a\u8fc7\u81f3\u5c113\u5e74\u4e00\u6b21\u7684\u8c03\u67e5\u8fdb\u884c\u8bc4\u4f30\uff1a\u59cb\u7ec8\u4f4e\u7684\u8f68\u8ff9(\u4ee3\u8868\u6574\u4e2a\u7814\u7a76\u671f\u95f4\u7684\u4f4e\u8ba4\u77e5\u5206\u6570)\u548c\u6301\u7eed\u7684\u9ad8\u8f68\u8ff9(\u4ee3\u8868\u6574\u4e2a\u7814\u7a76\u671f\u95f4\u7684\u9ad8\u8ba4\u77e5\u5206\u6570)\u3002\n\u7ed3\u679c19\u540d\u202f\u53d7\u8bd5\u8005\u7684\u5e73\u5747\u5e74\u9f84(SD)\u4e3a6 1.8\u5c81(10.2\u5c81)\uff0c\u4e3b\u8981\u4e3a\u5973\u6027(11\u202f94 3[6 0.1%])\u548c\u767d\u4eba/\u6c11\u65cf(16\u202f95 0[85.2%])\u3002\u4e2d\u4f4e\u5ea6\u996e\u9152(\u5973\u6027\u6bcf\u54688\u676f\uff0c\u7537\u6027\u6bcf\u546815\u676f)\u4e0e\u6301\u7eed\u7684\u9ad8\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\u548c\u8f83\u4f4e\u7684\u8ba4\u77e5\u8870\u9000\u7387\u663e\u8457\u76f8\u5173\u3002\u4e0e\u4ece\u4e0d\u996e\u9152\u7684\u4eba\u76f8\u6bd4\uff0c\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u8005\u5728\u603b\u8ba4\u77e5\u529f\u80fd(\u4f18\u52bf\u6bd4[OR]\uff0c0.6 6\uff1b95%CI\uff0c0.5 9~0.74)\u3001\u7cbe\u795e\u72b6\u6001(OR\uff0c0.71\uff1b95%CI\uff0c0.6 3~0.81)\u3001\u5355\u8bcd\u56de\u5fc6(OR\uff0c0.74\uff1b95%CI\uff0c0.69~0.80)\u548c\u8bcd\u6c47(OR\uff0c0.6 4\uff1b95%CI\uff0c0.5 6~0.74)(\u5747\u4e3aP\u2009&lt\uff1b\u2009.0.0 0 1)\u65b9\u9762\u4e0d\u592a\u53ef\u80fd\u51fa\u73b0\u6301\u7eed\u7684\u4f4e\u6c34\u5e73\u8f68\u8ff9\u3002\u6b64\u5916\uff0c\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e0e\u603b\u8ba4\u77e5\u529f\u80fd\u4e0b\u964d\u7684\u5e74\u7387(\u03b2\u7cfb\u6570\uff0c0.04\uff1b95%CI\uff0c0.02-0.07\uff1bP\u2009=\u2009.002)\u3001\u7cbe\u795e\u72b6\u6001(\u03b2\u7cfb\u6570\uff0c0.02\uff1b95%CI\uff0c0.01-0.03\uff1bP\u2009=\u2009.002)\u3001\u5355\u8bcd\u56de\u5fc6(\u03b2\u7cfb\u6570\uff0c0.02\uff1b95%CI\uff0c0.01-0.04\uff1bP\u2009=\u2009.01)\u548c\u8bcd\u6c47(\u03b2\u7cfb\u6570\uff0c0.01\uff1b95%CI\uff0c0.00-0.03\uff1bp\u2009=\u2009.08)\u3002\u5728\u7cbe\u795e\u72b6\u6001\u7684\u8f68\u8ff9\u4e0a\u89c2\u5bdf\u5230\u4e86\u663e\u8457\u7684\u79cd\u65cf/\u6c11\u65cf\u5dee\u5f02(P\u2009=\u2009.02\u8868\u793a\u76f8\u4e92\u4f5c\u7528)\uff0c\u5176\u4e2d\u4f4e\u5230\u4e2d\u5ea6\u996e\u9152\u4e0e\u767d\u4eba\u53c2\u4e0e\u8005\u6301\u7eed\u4f4e\u8f68\u8ff9\u7684\u51e0\u7387\u8f83\u4f4e(OR\uff0c0.6 5\uff1b95%CI\uff0c0.5 6-0.75)\u6709\u5173\uff0c\u800c\u9ed1\u4eba\u53c2\u4e0e\u8005\u5219\u6ca1\u6709(OR\uff0c1.0 2\uff1b95%CI\uff0c0.74-1.3 9)\u3002\u6700\u540e\uff0c\u996e\u9152\u91cf\u4e0e\u6240\u6709\u53c2\u4e0e\u8005\u7684\u6240\u6709\u8ba4\u77e5\u529f\u80fd\u9886\u57df\u90fd\u5448U\u5f62\u5173\u7cfb\uff0c\u6700\u4f73\u996e\u9152\u91cf\u4e3a\u6bcf\u546810\u81f314\u676f\u3002\n\u8fd9\u4e9b\u53d1\u73b0\u7684\u7ed3\u8bba\u548c\u76f8\u5173\u6027\u8868\u660e\uff0c\u4f4e\u5230\u4e2d\u5ea6\u996e\u9152\u4e0e\u66f4\u597d\u7684\u5168\u7403\u8ba4\u77e5\u5f97\u5206\u6709\u5173\uff0c\u800c\u4e14\u8fd9\u4e9b\u5173\u8054\u5bf9\u4e8e\u767d\u4eba\u53c2\u4e0e\u8005\u6765\u8bf4\u4f3c\u4e4e\u6bd4\u9ed1\u4eba\u53c2\u4e0e\u8005\u66f4\u5f3a\u3002\u9700\u8981\u7814\u7a76\u4e2d\u8001\u5e74\u4eba\u996e\u9152\u548c\u8ba4\u77e5\u4e4b\u95f4\u8054\u7cfb\u7684\u6f5c\u5728\u673a\u5236\u3002\n\u9157\u9152\u662f\u5bfc\u81f4\u53d1\u75c5\u7387\u548c\u6b7b\u4ea1\u7387\u7684\u4e3b\u8981\u539f\u56e0\u30021\u65e0\u8bba\u5242\u91cf\u5927\u5c0f\uff0c\u996e\u9152\u90fd\u4e0e\u60a3\u9ad8\u8840\u538b\u548c\u4e2d\u98ce\u7684\u98ce\u9669\u4e00\u81f4\u589e\u52a0\u6709\u5173\uff0c2\u9157\u9152\u548c\u9157\u9152\u4e0e\u5fc3\u8840\u7ba1\u75be\u75c5\u7684\u98ce\u9669\u66f4\u9ad8\u76f8\u5173\u3002\u7136\u800c\uff0c\u7814\u7a76\u4e5f\u53d1\u73b0\uff0c\u4f4e\u5230\u4e2d\u7b49\u7684\u996e\u9152\u91cf\u4e0e\u9884\u9632\u5fc3\u8840\u7ba1\u75be\u75c5\u7684\u6548\u679c\u6709\u5173\u30024-6\u9664\u4e86\u5bf9\u8eab\u4f53\u5065\u5eb7\u7684\u4f5c\u7528\u5916\uff0c\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u5df2\u88ab\u8bc1\u660e\u5728\u8ba4\u77e5\u969c\u788d\u548c\u75f4\u5446\u75c7\u7684\u53d1\u5c55\u4e2d\u53d1\u6325\u4e86\u4f5c\u7528\uff0c\u8fd9\u4e24\u79cd\u75be\u75c5\u4e0e\u5fc3\u8840\u7ba1\u75be\u75c5\u9ad8\u5ea6\u76f8\u5173\uff0c\u5c3d\u7ba1\u7814\u7a76\u7ed3\u679c\u559c\u5fe7\u53c2\u534a\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u4e00\u4e9b\u7814\u7a76\u62a5\u544a\u4e86\u4e0e\u4f4e\u5ea6\u5230\u4e2d\u5ea6\u996e\u9152\u76f8\u5173\u7684\u8ba4\u77e5\u529f\u80fd\u76ca\u5904\uff0c7-11\uff0c\u800c\u53e6\u4e00\u4e9b\u7814\u7a76\u5219\u53d1\u73b0\u4e0e\u996e\u9152\u6ca1\u6709\u3001\u6700\u5c0f\u751a\u81f3\u662f\u6709\u5bb3\u7684\u5f71\u54cd\u300212-15\u62a4\u58eb\u5065\u5eb7\u7814\u7a7611\u5bf9\u5927\u7ea611,000\u540d\u202f\u53c2\u4e0e\u8005\u8fdb\u884c\u4e86\u957f\u8fbe2\u5e74\u7684\u8ddf\u8e2a\u8c03\u67e5\uff0c\u53d1\u73b0\u9002\u5ea6\u996e\u9152\u7684\u4eba\u5728\u4e00\u822c\u8ba4\u77e5\u529f\u80fd\u548c\u8a00\u8bed\u8bb0\u5fc6\u6d4b\u8bd5\u4e2d\u8868\u73b0\u66f4\u597d\uff0c\u8fd9\u4e24\u9879\u8ba4\u77e5\u529f\u80fd\u7684\u4e0b\u964d\u901f\u5ea6\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6bd4\u4e0d\u996e\u9152\u7684\u4eba\u8981\u6162\u3002\u540c\u6837\uff0c\u4e00\u9879\u5bf97153\u540d\u82f1\u56fd\u516c\u52a1\u5458\u8fdb\u884c\u7684\u4e3a\u671f10\u5e74\u7684\u8ddf\u8e2a\u7814\u7a7616\u53d1\u73b0\uff0c\u4e0e\u5973\u6027\u4ece\u4e0d\u996e\u9152\u76f8\u6bd4\uff0c\u7537\u6027\u4ece\u4e0d\u996e\u9152\u4e0e\u5168\u7403\u8ba4\u77e5\u529f\u80fd\u548c\u6267\u884c\u529f\u80fd\u51cf\u9000\u7387\u4e4b\u95f4\u5b58\u5728\u4fdd\u62a4\u6027\u5173\u8054\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u767d\u5385II\u6210\u50cf\u7814\u7a7615\u5bf9550\u540d\u53c2\u4e0e\u8005\u8fdb\u884c\u4e8630\u591a\u5e74\u7684\u8ddf\u8e2a\u8c03\u67e5\uff0c\u53d1\u73b0\u5373\u4f7f\u662f\u9002\u5ea6\u996e\u9152\u4e5f\u4e0e\u8ba4\u77e5\u529f\u80fd\u4e0b\u964d\u6709\u5173\u3002\n\u8ba4\u77e5\u529f\u80fd\u53d7\u591a\u79cd\u56e0\u7d20\u5f71\u54cd\uff0c\u5e76\u968f\u65f6\u95f4\u53d8\u5316\u3002\u5355\u4e00\u7684\u6d4b\u91cf\u4e0d\u80fd\u6355\u6349\u8ba4\u77e5\u529f\u80fd\u7684\u6240\u6709\u65b9\u9762\uff0c\u56e0\u6b64\u964d\u4f4e\u4e86\u8bc6\u522b\u6f5c\u5728\u98ce\u9669\u56e0\u7d20\u7684\u7edf\u8ba1\u6548\u7387\u300217-19\u5728\u4e0d\u540c\u7684\u968f\u8bbf\u65f6\u95f4\u91cd\u590d\u6d4b\u91cf\u53ef\u4ee5\u5bf9\u8ba4\u77e5\u529f\u80fd\u7684\u79cd\u7fa4\u95f4\u548c\u79cd\u7fa4\u5185\u53d8\u5f02\u4ea7\u751f\u66f4\u53ef\u9760\u7684\u4f30\u8ba1\u3002\u6b64\u5916\uff0c\u867d\u7136\u8ba4\u77e5\u529f\u80fd\u53ef\u80fd\u4f1a\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u4e0b\u964d\uff0c\u4f46\u8fd9\u79cd\u4e0b\u964d\u5728\u4e0d\u540c\u5e74\u9f84\u6bb5\u7684\u4eba\u4e2d\u662f\u4e0d\u540c\u7684\u3002\u56e0\u6b64\uff0c\u5728\u8ba4\u77e5\u529f\u80fd\u7814\u7a76\u4e2d\u4e5f\u5e94\u8be5\u8003\u8651\u8fd9\u79cd\u5f02\u8d28\u6027\u3002\u4e00\u4e9b\u4e13\u6ce8\u4e8e\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u4e0b\u964d\u4e4b\u95f4\u7684\u5173\u8054\u7684\u7814\u7a76\u5df2\u7ecf\u8003\u8651\u5230\u4e86\u91cd\u590d\u7684\u6d4b\u91cf\uff1b\u7136\u800c\uff0c\u8fd9\u4e9b\u7814\u7a76\u4f7f\u7528\u51c0\u968f\u8bbf\u65f6\u95f4\u800c\u4e0d\u662f\u5e74\u9f84\u6765\u8ba1\u7b97\u8ba4\u77e5\u529f\u80fd\u4e0b\u964d\u7684\u6bd4\u7387\uff0c\u5e76\u4e14\u6ca1\u6709\u8003\u8651\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u5f02\u8d28\u6027\u5f71\u54cd\u30028\u30019\u300111\u300115\u3002\n\u672c\u7814\u7a76\u901a\u8fc7\u91cd\u590d\u7684\u8ba4\u77e5\u6d4b\u91cf\uff0c\u8c03\u67e5\u4e86\u4f4e\u5ea6\u5230\u4e2d\u5ea6\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u7684\u5173\u7cfb\uff0c\u5e76\u5728\u4e00\u4e2a\u5177\u6709\u5168\u56fd\u4ee3\u8868\u6027\u7684\u4e2d\u7ea7\u4eba\u7fa4\u6837\u672c\u4e2d\uff0c\u8bc4\u4f30\u4e86\u4f4e\u5ea6\u5230\u4e2d\u5ea6\u996e\u9152\u4e0e\u5e74\u9f84\u76f8\u5173\u8ba4\u77e5\u529f\u80fd\u4e0b\u964d\u7684\u5173\u7cfb\u3002\n\u9152\u7cbe\u6d88\u8017\u91cf\u662f\u901a\u8fc7\u4ee5\u4e0b\u95ee\u9898\u6765\u8bc4\u4f30\u7684\uff1a\u201c\u4f60\u6709\u6ca1\u6709\u559d\u8fc7\u4efb\u4f55\u9152\u7cbe\u996e\u6599\uff0c\u6bd4\u5982\u5564\u9152\u3001\u8461\u8404\u9152\u6216\u767d\u9152\uff1f\u201d\uff1b\u201c\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c\u4f60\u5e73\u5747\u6bcf\u5468\u6709\u591a\u5c11\u5929\u53ef\u4ee5\u559d\u9152\uff1f\u201d\u4ee5\u53ca\u201c\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c\u4f60\u559d\u9152\u7684\u65e5\u5b50\u5927\u7ea6\u662f\u591a\u5c11\u6b21\uff1f\u201d\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c\u4f60\u66fe\u7ecf\u559d\u8fc7\u5564\u9152\u3001\u8461\u8404\u9152\u6216\u767d\u9152\u5417\uff1f\u201d\uff1b\u201c\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c\u4f60\u5e73\u5747\u6bcf\u5468\u6709\u591a\u5c11\u5929\u559d\u9152\uff1f\u201d\u5728HRS(1996)\u7684\u7b2c\u4e09\u6ce2\u4e4b\u540e\uff0c\u53c2\u4e0e\u8005\u6700\u521d\u88ab\u8bc4\u4f30\u662f\u5426\u996e\u9152\u3002\u5728\u8fc7\u53bb\u76843\u4e2a\u6708\u91cc\uff0c26\u540d\u66fe\u7ecf\u996e\u9152\u7684\u4eba\u88ab\u8fdb\u4e00\u6b65\u8be2\u95ee\u4e86\u4ed6\u4eec\u7684\u996e\u9152\u72b6\u51b5\u3002\u6839\u636e\u57fa\u7ebf\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u56de\u7b54\uff0c\u6211\u4eec\u5c06HRS\u53c2\u4e0e\u8005\u5206\u4e3a\u4ece\u4e0d\u996e\u9152\u8005\u3001\u4ee5\u524d\u996e\u9152\u8005\u6216\u73b0\u5728\u996e\u9152\u8005\u3002\u4ee5\u524d\u996e\u9152\u8005\u7684\u5b9a\u4e49\u662f\u5728\u57fa\u7ebf\u91c7\u8bbf\u524d3\u4e2a\u6708\u4ee5\u4e0a\u996e\u9152\u7684\u53c2\u4e0e\u8005\uff0c\u76ee\u524d\u996e\u9152\u8005\u7684\u5b9a\u4e49\u662f\u5728\u91c7\u8bbf\u524d3\u4e2a\u6708\u5185\u996e\u9152\u7684\u53c2\u4e0e\u8005\u300226\u5bf9\u4e8e\u73b0\u5728\u7684\u996e\u9152\u8005\uff0c\u6211\u4eec\u8ba1\u7b97\u7684\u996e\u9152\u91cf\u662f\u6bcf\u5468\u996e\u9152\u5929\u6570\u548c\u6bcf\u5929\u996e\u9152\u91cf\u7684\u4e58\u79ef\u3002\u76ee\u524d\u7684\u996e\u9152\u8005\u968f\u540e\u88ab\u8fdb\u4e00\u6b65\u5f52\u7c7b\u4e3a\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u8005\u6216\u91cd\u5ea6\u996e\u9152\u8005\u3002\u6bcf\u5468\u996e\u91528\u6b21\u62168\u6b21\u4ee5\u4e0a\u7684\u5973\u6027\u6216\u6bcf\u5468\u996e\u915215\u6b21\u621615\u6b21\u4ee5\u4e0a\u7684\u7537\u6027\u88ab\u5f52\u7c7b\u4e3a\u91cd\u5ea6\u996e\u9152\u800527\uff1b\u5426\u5219\uff0c\u5f53\u524d\u996e\u9152\u8005\u88ab\u5b9a\u4e49\u4e3a\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u8005\u3002\u5176\u4ed6\u534f\u53d8\u91cf\u5305\u62ec\u5e74\u9f84\u3001\u6027\u522b\u3001\u79cd\u65cf/\u6c11\u65cf\u3001\u53d7\u6559\u80b2\u5e74\u9650\u3001\u5a5a\u59fb\u72b6\u51b5\u3001\u5438\u70df\u72b6\u51b5\u548c\u4f53\u91cd\u6307\u6570\u3002\u6839\u636e\u5bf9\u4ee5\u4e0b\u4e24\u4e2a\u95ee\u9898\u7684\u81ea\u8ff0\u56de\u7b54\uff0c\u5438\u70df\u72b6\u51b5\u88ab\u5206\u4e3a3\u7ec4\uff1a\u4ece\u4e0d\u5438\u70df\u8005\u3001\u66fe\u7ecf\u5438\u70df\u8005\u548c\u73b0\u5728\u5438\u70df\u8005\u3002\u8fd9\u4e24\u4e2a\u95ee\u9898\u662f\uff1a\u201c\u4f60\u5438\u8fc7\u70df\u5417\uff1f\u201d\u548c\u201c\u4f60\u73b0\u5728\u62bd\u70df\u5417\uff1f\u201d\n\u6240\u6709\u53c2\u4e0e\u8005\u7684\u57fa\u7ebf\u7279\u5f81\u548c\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\u4ee5\u5206\u7c7b\u53d8\u91cf\u7684\u767e\u5206\u6bd4\u548c\u8fde\u7eed\u53d8\u91cf\u7684\u5e73\u5747\u503c(SD)\u6216\u4e2d\u503c\u548c\u56db\u5206\u4f4d\u6570\u8303\u56f4(IQR)\u8868\u793a\u3002\u4f7f\u7528\u975e\u53c2\u6570\u68c0\u9a8c\u3001\u03c72\u68c0\u9a8c\u6216t\u68c0\u9a8c\u6765\u6bd4\u8f83\u6bcf\u4e2a\u8ba4\u77e5\u529f\u80fd\u6d4b\u91cf\u7684\u8f68\u8ff9\u7ec4\u7684\u8fd9\u4e9b\u7279\u5f81\u7684\u5206\u5e03\u3002\u6570\u636e\u5206\u6790\u662f\u4f7f\u7528\u6765\u81ea\u5177\u6709\u5b8c\u6574\u89c2\u5bdf\u7684\u53c2\u4e0e\u8005\u7684\u6570\u636e\u8fdb\u884c\u7684\u3002\n\u4f7f\u7528SAS PROC TRAJ\u7a0b\u5e8f\u5b9e\u65bd\u7684\u6f5c\u53d8\u91cf\u6df7\u5408\u5efa\u6a21\u88ab\u7528\u6765\u8bc6\u522b\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u7ed3\u679c\u5177\u6709\u76f8\u4f3c\u8fdb\u5c55\u7684\u5b50\u7ec4\uff1b\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u5728\u968f\u8bbf\u671f\u95f4\u6d4b\u8bd5\u7684\u5404\u79cd\u8ba4\u77e5\u529f\u80fd\u7684\u76f8\u4f3c\u8f68\u8ff9\u300228\uff0c29\u6211\u4eec\u4ee5\u4e8c\u6b21\u5f62\u5f0f\u62df\u5408\u6240\u6709\u7684\u8f68\u8ff9\u6a21\u578b\uff0c\u4ece1\u8f68\u8ff9\u7ec4\u52305\u8f68\u8ff9\u7ec4\u3002\u4f7f\u7528\u8d1d\u53f6\u65af\u4fe1\u606f\u51c6\u5219\u548c\u5728\u8f68\u8ff9\u7ec4\u4e2d\u53c2\u4e0e\u8005\u6570\u91cf\u5e73\u8861\u4e2d\u7684\u89c6\u89c9\u8bc4\u4f30\u6765\u9009\u62e9\u6700\u7b26\u5408\u6570\u636e\u7684\u7ec4\u6570\u91cf\u3002\u5bf9\u6bcf\u4e2a\u8ba4\u77e5\u9886\u57df\u548c\u6574\u4f53\u8ba4\u77e5\u529f\u80fd\u8fdb\u884c\u8f68\u8ff9\u5206\u6790\u3002\u5f53\u4e24\u4e2a\u8f68\u8ff9\u7ec4\u6700\u7b26\u5408\u6570\u636e\u65f6\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u8bc4\u4f30\u4e86\u6a21\u578b\u5bf9\u4e0d\u540c\u5f62\u5f0f\u7684\u62df\u5408\uff0c\u6700\u4f18\u6a21\u578b\u5bf9\u6bcf\u4e2a\u8ba4\u77e5\u529f\u80fd\u6d4b\u91cf\u90fd\u6709\u4e24\u4e2a\u7acb\u65b9\u5f62\u7684\u8f68\u8ff9\u7ec4\u3002\n\u901a\u8fc7\u4f7f\u7528\u4e2a\u4eba\u8d21\u732e\u7684\u6240\u6709\u89c2\u5bdf\u503c\u5c06\u8ba4\u77e5\u529f\u80fd\u7279\u5f81\u4e0e\u5e74\u9f84\u8fdb\u884c\u56de\u5f52\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u7684\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u5e74\u53d8\u5316\u7387\uff0c\u5e76\u5c06\u5e74\u9f84\u7cfb\u6570\u89c6\u4e3a\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u5e74\u53d8\u5316\u7387\u3002\n\u5728\u63a7\u5236\u4e86\u5e74\u9f84\u3001\u6027\u522b\u3001\u79cd\u65cf/\u6c11\u65cf\u3001\u6559\u80b2\u7a0b\u5ea6\u3001\u5a5a\u59fb\u72b6\u51b5\u3001\u5438\u70df\u72b6\u51b5\u548c\u4f53\u91cd\u6307\u6570\u540e\uff0c\u5206\u522b\u7528\u591a\u56e0\u7d20Logistic\u56de\u5f52\u548c\u7ebf\u6027\u56de\u5f52\u6765\u8bc4\u4f30\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u8f68\u8ff9\u548c\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u5e74\u53d8\u5316\u7387\u7684\u5173\u7cfb\u3002\u8fd9\u4e9b\u5173\u8054\u5206\u6790\u4e5f\u662f\u6309\u6027\u522b\u548c\u79cd\u65cf/\u6c11\u65cf\u8fdb\u884c\u7684\u3002\u901a\u8fc7\u5728\u5b8c\u5168\u8c03\u6574\u7684\u6a21\u578b\u4e2d\u589e\u52a0\u4e00\u4e2a\u4ea4\u4e92\u4f5c\u7528\u9879\uff0c\u5373\u5206\u522b\u6309\u6027\u522b\u996e\u9152\u6216\u6309\u79cd\u65cf/\u6c11\u65cf\u996e\u9152\uff0c\u8bc4\u4f30\u4e86\u6027\u522b\u548c\u79cd\u65cf/\u6c11\u65cf\u5dee\u5f02\u3002\n\u6211\u4eec\u5728\u63a7\u5236\u4e86\u4e0e\u56de\u5f52\u6a21\u578b\u76f8\u540c\u7684\u534f\u53d8\u91cf\u540e\uff0c\u4f7f\u7528\u9650\u5236\u4e09\u6b21\u6837\u6761\u7684\u975e\u53c2\u6570\u65b9\u6cd5\uff0c\u8fdb\u4e00\u6b65\u8bc4\u4f30\u4e86\u6bcf\u5468\u996e\u9152\u91cf\u4e0e\u8ba4\u77e5\u80fd\u529b\u8f83\u5dee\u7ec4\u7684\u4f18\u52bf\u6bd4(OR)\u4e4b\u95f4\u6f5c\u5728\u7684\u975e\u7ebf\u6027\u5173\u8054\u3002\u8be5\u65b9\u6cd5\u5229\u7528\u4f3c\u7136\u6bd4\u65b9\u6cd5\u5bf9\u53ea\u5177\u6709\u7ebf\u6027\u5173\u8054\u7684\u6a21\u578b\u548c\u5177\u6709\u7ebf\u6027\u5173\u8054\u548c\u4e09\u6b21\u6837\u6761\u9879\u7684\u6a21\u578b\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u8fdb\u884c\u4e86\u68c0\u9a8c\u3002\u654f\u611f\u6027\u5206\u6790\u662f\u5728\u6392\u9664\u4e86\u81f3\u5c11\u6709\u4e00\u79cd\u6162\u6027\u75c5\u7684\u53c2\u4e0e\u8005\u4e4b\u540e\u8fdb\u884c\u7684\u3002\u5206\u6790\u662f\u57282019\u5e746\u6708\u81f311\u6708\u4f7f\u7528SAS\u7248\u672c9.4(SAS Institute Inc)\u548cR\u7248\u672c3.5.1(R Foundation)\u6267\u884c\u7684\u3002\u5e94\u7528Bonferroni\u6821\u6b63\u6765\u89e3\u91ca\u591a\u91cd\u6d4b\u8bd5\uff0c\u53cc\u4fa7P\u2009=\u2009.01\uff0c\u6821\u6b63\u4e864\u4e2a\u8ba4\u77e5\u6d4b\u91cf\uff0c\u88ab\u8ba4\u4e3a\u662f\u5177\u6709\u7edf\u8ba1\u5b66\u610f\u4e49\u7684\u5173\u8054\u3002\n\u603b\u5171\u6709191887\u4eba\u53c2\u52a0\u4e861996\u5e74\u81f32008\u5e74\u95f4\u7684\u533b\u7597\u4fdd\u9669\u5236\u5ea6\uff0c\u5305\u62ec\u5728\u672c\u7814\u7a76\u4e2d(\u9644\u5f55\u4e2d\u7684\u7535\u5b50\u56fe1)\u3002\u202f887\u4eba\u57281996\u5e74\u81f32008\u5e74\u671f\u95f4\u53c2\u4e0e\u4e86\u533b\u7597\u4fdd\u9669\u5236\u5ea6\n\u5728\u63a7\u5236\u4e86\u6240\u6709\u534f\u53d8\u91cf\u540e\uff0c\u4e0e\u4ece\u4e0d\u996e\u9152\u7684\u4eba\u76f8\u6bd4\uff0c\u5f53\u524d\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u8005\u7684\u603b\u8ba4\u77e5\u5206\u6570(OR\uff0c0.66\uff1b95%CI\uff0c0.59-0.74)\u3001\u7cbe\u795e\u72b6\u6001(OR\uff0c0.71\uff1b95%CI\uff0c0.63-0.81)\u3001\u5355\u8bcd\u56de\u5fc60.74(95%CI\uff0c0.69-0.80)\u548c\u8bcd\u6c47(OR\uff0c0.64\uff1b95%CI\uff0c0.56-0.74)(\u5747\u4e3aP\u2009&lt\uff1b\u2009.001)\u3002\u540c\u6837\uff0c\u5728\u65e2\u5f80\u996e\u9152\u8005\u4e2d\uff0c\u5904\u4e8e\u6301\u7eed\u4f4e\u8f68\u8ff9\u7ec4\u7684\u8ba4\u77e5\u603b\u5206\u7684OR\u503c\u4e3a0.72(95%CI\uff0c0.63-0.82)\uff0c\u7cbe\u795e\u72b6\u6001\u7684OR\u503c\u4e3a0.83(95%CI\uff0c0.72-0.95)\uff0c\u5355\u8bcd\u56de\u5fc6\u7684OR\u503c\u4e3a0.76(95%CI\uff0c0.70-0.83)\uff0c\u8bcd\u6c47\u7684OR\u503c\u4e3a0.73(95%CI\uff0c0.63-0.86)\u3002\u53ea\u6709\u5728\u8bcd\u6c47\u6d4b\u8bd5\u4e2d\uff0c\u9157\u9152\u8005\u8fdb\u5165\u6301\u7eed\u4f4e\u8f68\u8ff9\u7ec4\u7684\u51e0\u7387\u8f83\u4f4e(OR\uff0c0.51\uff1b95%CI\uff0c0.37-0.71)\u3002\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u8005\u4e5f\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u5e74\u53d8\u5316\u7387\u663e\u8457\u76f8\u5173\uff0c\u8ba4\u77e5\u603b\u5206\u4e3a0.04(95%CI\uff0c0.02-0.07\uff1bP\u2009=\u2009.002)\uff0c\u7cbe\u795e\u72b6\u6001\u4e3a0.02(95%CI\uff0c0.01-0.03)\uff0c\u5355\u8bcd\u56de\u5fc6\u4e3a0.02(95%CI\uff0c0.01-0.04\uff1bP\u2009=\u2009.01)\uff0c\u8bcd\u6c47\u4e3a0.01(95%CI\uff0c0.00-0.03\uff1bP\u2009=\u2009.08)(\u56fe2\uff1b\u9644\u5f55\u4e2d\u7684\u7535\u5b50\u56fe3)\u3002\n\u6837\u6761\u5206\u6790\u663e\u793a\uff0c\u6bcf\u5468\u996e\u9152\u91cf\u4e0e\u6240\u6709\u8ba4\u77e5\u529f\u80fd\u9886\u57df\u5904\u4e8e\u6301\u7eed\u4f4e\u8f68\u8ff9\u7ec4\u7684\u51e0\u7387\u4e4b\u95f4\u5b58\u5728\u663e\u7740\u7684U\u578b\u5173\u8054(\u9644\u5f55\u4e2d\u7684\u56fe4)\u3002\u8f6c\u6298\u70b9\u7684\u6bcf\u5468\u996e\u9152\u91cf\u5206\u522b\u4e3a\u8ba4\u77e5\u603b\u520612\u676f\uff0c\u7cbe\u795e\u72b6\u600113\u676f\uff0c\u5355\u8bcd\u56de\u5fc610\u676f\uff0c\u8bcd\u6c4714\u676f\u3002\u975e\u6162\u6027\u75c5\u53d7\u8bd5\u8005\u7684\u654f\u611f\u5ea6\u5206\u6790\u8868\u660e\uff0cU\u578b\u5173\u8054\u5bf9\u8bcd\u6c47\u56de\u5fc6\u603b\u5206(P\u2009=\u2009.001)\u548c\u8bcd\u6c47\u91cf\u603b\u5206(P\u2009=\u2009.004)\u4ecd\u6709\u663e\u8457\u5f71\u54cd\uff0c\u4f46\u5bf9\u7cbe\u795e\u72b6\u6001(P\u2009=\u2009.88)\u6216\u8ba4\u77e5\u603b\u5206(P\u2009=\u2009.19)\u65e0\u663e\u8457\u5f71\u54cd(\u89c1\u9644\u5f55\u56fe5)\u3002\n\u996e\u9152\u548c\u8ba4\u77e5\u529f\u80fd\u4e4b\u95f4\u7684\u5173\u8054\u5728\u7537\u6027\u548c\u5973\u6027\u4e4b\u95f4\u662f\u76f8\u4f3c\u7684(\u9644\u5f55\u4e2d\u7684\u88682)\uff0c\u4f46\u5728\u79cd\u65cf/\u6c11\u65cf\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002\u5982\u88683\u6240\u793a\uff0c\u4f4e\u81f3\u4e2d\u5ea6\u996e\u9152\u4e0e\u60a3\u9ad8\u8840\u538b\u7684\u51e0\u7387\u8f83\u4f4e\u663e\u8457\u76f8\u5173\u3002\n..", "note_en": "Cite  This  Zhang R, Shen L, Miles T, et al. Association of Low to Moderate Alcohol Drinking With Cognitive Functions From Middle to Older Age Among US Adults.  JAMA Netw Open. 2020;3(6):e207922. doi:10.1001/jamanetworkopen.2020.7922\n        Key Points   espa\u00f1ol    \u4e2d\u6587 (chinese)  Question\u00a0\r  Does an association exist between current low to moderate alcohol drinking and cognitive function trajectories or rates of cognitive decline from middle to older age among US adults?\n Findings\u00a0\r  In this cohort study of 19\u202f887 participants from the Health and Retirement Study, with a mean follow-up of 9.1 years, when compared with never drinking, low to moderate drinking was associated with significantly better trajectories of higher cognition scores for mental status, word recall, and vocabulary and with lower rates of decline in each of these cognition domains.\n Meaning\u00a0\r  Current low to moderate alcohol consumption among middle-aged or older adults may be associated with better total cognitive function.\n      Importance\u00a0\r  Studies examining the association of low to moderate drinking with various cognitive functions have yielded mixed findings.\n Objective\u00a0\r  To investigate whether associations exist between low to moderate alcohol drinking and cognitive function trajectories or rates of change in cognitive function from middle age to older age among US adults.\n Design, Setting, and Participants\u00a0\r  A prospective cohort study of participants drawn from the Health and Retirement Study (HRS), a nationally representative sample of US adults, with mean (SD) follow-up of 9.1 (3.1) years. In total, 19\u202f887 participants who had their cognitive functions measured in the HRS starting in 1996 through 2008 and who had participated in at least 3 biennial surveys were included. The data analysis was conducted from June to November 2019.\n  Main Outcomes and Measures\u00a0\r  Trajectories and annual rates of change for the cognitive domains of mental status, word recall, and vocabulary and for the total cognitive score, which was the sum of the mental status and word recall scores. Participants were clustered into 2 cognitive function trajectories for each cognition measure assessed based on their scores at baseline and through at least 3 biennial surveys: a consistently low trajectory (representing low cognitive scores throughout the study period) and a consistently high trajectory (representing high cognitive scores throughout the study period).\n Results\u00a0\r  The mean (SD) age of 19\u202f887 participants was 61.8 (10.2) years, and the majority of the HRS participants were women (11\u202f943 [60.1%]) and of white race/ethnicity (16\u202f950 [85.2%]). Low to moderate drinking (&lt;8 drinks per week for women and &lt;15 drinks per week for men) was significantly associated with a consistently high cognitive function trajectory and a lower rate of cognitive decline. Compared with never drinkers, low to moderate drinkers were less likely to have a consistently low trajectory for total cognitive function (odds ratio [OR], 0.66; 95% CI, 0.59-0.74), mental status (OR, 0.71; 95% CI, 0.63-0.81), word recall (OR, 0.74; 95% CI, 0.69-0.80), and vocabulary (OR, 0.64; 95% CI, 0.56-0.74) (all  P\u2009&lt;\u2009.001). In addition, low to moderate drinking was associated with decreased annual rates of total cognitive function decline (\u03b2 coefficient, 0.04; 95% CI, 0.02-0.07;  P\u2009=\u2009.002), mental status (\u03b2 coefficient, 0.02; 95% CI, 0.01-0.03;  P\u2009=\u2009.002), word recall (\u03b2 coefficient, 0.02; 95% CI, 0.01-0.04;  P\u2009=\u2009.01), and vocabulary (\u03b2 coefficient, 0.01; 95% CI, 0.00-0.03;  P\u2009=\u2009.08). A significant racial/ethnic difference was observed for trajectories of mental status ( P\u2009=\u2009.02 for interaction), in which low to moderate drinking was associated with lower odds of having a consistently low trajectory for white participants (OR, 0.65; 95% CI, 0.56-0.75) but not for black participants (OR, 1.02; 95% CI, 0.74-1.39). Finally, the dosage of alcohol consumed had a U-shaped association with all cognitive function domains for all participants, with an optimal dose of 10 to 14 drinks per week.\n Conclusions and relevance\u00a0\r  These findings suggested that low to moderate alcohol drinking was associated with better global cognition scores, and these associations appeared stronger for white participants than for black participants. Studies examining the mechanisms underlying the association between alcohol drinking and cognition in middle-aged or older adults are needed.\n          Alcohol misuse is a leading cause of morbidity and mortality.  1 Alcohol consumption is associated with a uniformly increased risk of hypertension and stroke, regardless of dose,  2 and heavy and binge drinking is associated with a higher risk of cardiovascular disease.  3 However, studies have also found that low to moderate alcohol consumption is associated with protective effects against cardiovascular diseases.  4 - 6 Besides its role in physical health, low to moderate alcohol consumption has been shown to play a role in the development of cognitive impairment and dementia, conditions that are highly associated with cardiovascular diseases, although the findings are mixed. Specifically, some studies have reported benefits to cognitive function associated with low to moderate alcohol consumption,  7 - 11 whereas others have found no, minimal, or even adverse effects associated with alcohol consumption.  12 - 15 The Nurses\u2019 Health Study  11 followed up with approximately 11\u202f000 participants for 2 years and found that moderate drinkers perform better on general cognitive function and verbal memory tests and have slower rates of decline with time on these 2 cognitive functions compared with nondrinkers. Similarly, a 10-year follow-up study among 7153 British civil servants  16 identified a protective association between low alcohol consumption and rates of global cognitive function and executive function decline compared with never drinking among women but not among men. By contrast, the Whitehall II imaging substudy  15 followed up with 550 participants for more than 30 years and found that even moderate drinking is associated with cognitive function decline.\n    Cognitive functions are affected by many factors and vary with time. A single measurement cannot capture all aspects of cognition function and thus decreases the statistical efficiency of identifying potential risk factors.  17 - 19 Using repeated measurements at different follow-up times can produce a more reliable estimate for both interpopulation and intrapopulation variations of cognitive functions.  20 Moreover, although cognitive functions may decline with age, this decline is heterogeneous among people in different age groups.  21 , 22 Thus, this heterogeneity should also be considered in studies of cognitive function. A few studies focusing on the association of alcohol drinking with cognitive function decline have taken repeated measurements into account; however, those studies used net follow-up time, instead of age, to calculate the rates of cognitive function decline and did not consider the heterogeneous effects associated with age.  8 , 9, 11 , 15\n    The present study investigated the association of low to moderate alcohol consumption with cognitive functions by using repeated cognition measurements and evaluated the association of low to moderate alcohol consumption with age-related decline in cognitive function in a nationally representative sample of middle-aged and older US adults.\n            The present study was a secondary analysis of data from the Health and Retirement Study (HRS), a longitudinal panel study that surveys a nationwide representative sample of about 20\u202f000 middle-aged and older US adults. The HRS participants have been reexamined every 2 years since 1992 (HRS wave 1) to collect their health and economic information.  23 The HRS initially used the Telephone Interview for Cognitive Status,  24 a brief telephone screening system to assess cognitive functioning. Since 1996 (HRS wave 3), a modification of that survey has been used to measure cognitive functioning.  25 For consistency in measurements of the different waves, the present analyses used data from wave 3 (1996) and later. Furthermore, we only included participants who participated in at least 3 biennial surveys. Our study followed the Strengthening the Reporting of Observational Studies in Epidemiology ( STROBE) reporting guideline. This secondary analysis of deidentified data from the HRS was approved by the institutional review board of the University of Georgia at Athens. Written informed consent was obtained from all participants in the original HRS. No one received compensation or was offered any incentive for participating in this study.\n        The HRS used age to determine which cognitive tests would be administered. Specifically, all respondents older than 65 years received a full set of tests in and before 1998 (wave 4); all new respondents received a full set of tests regardless of their age after 1998; and all reinterviewed respondents younger than 65 years received 2 questions self-assessing their memory (present rating and the changes), immediate and delayed recall tests, a backward counting test, and a serial 7s subtraction test in which 7 is subtracted from a given number for 5 trials.  25 Because the HRS recruited additional new participants for each wave of the survey, data collected for each participant\u2019s entry into the HRS were treated as the baseline for that participant. The follow-up measurements were defined as measurements of onward waves for each participant.\n    Cognitive functioning was measured by assessing 3 domains: total word recall, mental status, and vocabulary. Total word recall was scored as the summed results of an immediate word recall test and a delayed word recall test and ranged from 0 to 20, reflecting the number of words that a participant could correctly recall immediately or 5 minutes after they were read a list of 10 words. Mental status was measured using a set of tests that assess knowledge, language, and orientation, with scores ranging from 0 to 15. Vocabulary, also known as crystalized intelligence, represents established knowledge and was tested by assessing the ability of the participants to provide the definitions of 5 given words, with scores ranging from 0 to 10. The total cognition score was calculated as the summed scores of the total word recall results and the mental status test results and ranged from 0 to 35.  25 , 26 Higher cognition scores indicated better cognitive abilities.\n        Alcohol consumption was assessed using the following questions: \u201cHave you ever drank any alcoholic beverages, such as beer, wine, or liquor?\u201d; \u201cIn the last 3 months, on average, how many days per week have you had any alcohol to drink?\u201d; and \u201cIn the last 3 months, on the days you drank, about how many drinks did you have?\u201d After wave 3 of the HRS (1996), participants were initially assessed for ever drinking.  26 Ever drinkers were further asked for their drinking status in the last 3 months. On the basis of the answers to those questions at baseline, we categorized HRS participants as never drinkers, former drinkers, or current drinkers. Former drinkers were defined as participants who drank alcohol more than 3 months before the baseline interview, and current drinkers were defined as participants who drank alcohol within 3 months before the interview.  26 For current drinkers, we calculated the alcohol consumption as the product of the number of days of drinking per week and the number of drinks per day. Current drinkers were then further categorized as low to moderate drinkers or heavy drinkers. Women with 8 or more drinks per week or men with 15 or more drinks per week were categorized as heavy drinkers  27; otherwise, current drinkers were defined as low to moderate drinkers. Other covariates included age, sex, race/ethnicity, years of education, marital status, tobacco smoking status, and body mass index. Tobacco smoking status was categorized into 3 groups: never smoker, former smoker, and current smoker based on self-reported responses to these 2 questions: \u201cHave you ever smoked cigarettes?\u201d and \u201cDo you smoke cigarettes now?\u201d\n        Baseline characteristics for all included participants and by cognitive function trajectories are presented as percentages for categorical variables and mean (SD) values or median values and interquartile ranges (IQRs) for continuous variables. Nonparametric tests, \u03c7 2 tests, or  t tests were used to compare the distribution of those characteristics by trajectory groups for each cognitive function measure. Data analyses were performed using data from participants with complete observations.\n    Latent variable mixture modeling implemented using the SAS Proc Traj procedure was used to identify subgroups that shared a similar progression for an outcome over time; more specifically, a similar trajectory for the various cognitive functions tested during follow-up.  28 , 29 We fitted all trajectory models in quadratic form and from a 1-trajectory group up to a 5-trajectory group. The bayesian information criterion and visual assessment in the balance of the number of participants in the trajectory groups were used to select the number of groups that best fit the data. Trajectory analyses were conducted for each cognition domain and for overall cognitive function. When 2 trajectory groups best fit the data, we further assessed the model fit for different forms, with the optimal model having 2 trajectory groups in cubic form for each cognitive function measure.\n    The annual rate of age-related change for each individual was calculated by regressing cognitive function traits with age using all observations that an individual contributed, and the coefficient of age was treated as the age-related annual rate of change.\n    Multivariate logistic and linear regressions were used to evaluate associations of alcohol drinking with cognitive function trajectories and age-related annual rate of change, respectively, after controlling for age, sex, race/ethnicity, educational level, marital status, smoking status, and body mass index. The association analyses were also conducted by sex and race/ethnicity. Sex and racial/ethnic differences were evaluated by adding an interaction term, that is, alcohol drinking by sex or alcohol drinking by race/ethnicity, respectively, to the fully adjusted model.\n    We further assessed the potential nonlinear association between the number of drinks per week and the odds ratio (OR) of being clustered into groups with lower cognitive performance by using a nonparametric method with restricted cubic splines after controlling for the same set of covariates as for the regression model.  30 This method used the likelihood ratio method to test the nonlinearity between the model having only a linear association and the model having a linear association and cubic spline terms. Sensitivity analyses were performed after excluding participants with at least 1 chronic disease condition. The analyses were performed from June to November 2019 using SAS, version 9.4 (SAS Institute Inc), and R, version 3.5.1 (The R Foundation). Bonferroni corrections were applied to account for multiple testing, and a 2-side  P\u2009=\u2009.01, correcting for 4 cognition measures, was considered a statistically significant association.\n        In total, 19\u202f887 people who participated in the HRS between 1996 and 2008 were included in the present study study (eFigure 1 in the  Supplement), and their mean (SD) follow-up was 9.1 (3.1) years. Total word recall was measured among all 19\u202f887 HRS participants, mental status and total cognition score were evaluated among 12\u202f683 (63.8%) participants, and vocabulary was assessed for 9931 (49.9%) participants. As shown in  Table 1, the mean (SD) age of all study participants was 61.8 (10.2) years. The majority of the HRS participants were female (11\u202f943 [60.1%]) and of white race/ethnicity (16\u202f950 [85.2%]). In total, 10\u202f824 (54.4%) participants were ever drinkers, among which, 3767 (18.9%) were former drinkers and 7057 (35.5%) were current drinkers. Most of the current drinkers (6010 [85.2%]) were low to moderate drinkers. In addition, among all participants, 7813 (39.5%) were former smokers, 3704 (18.7%) were current smokers, and 5596 (28.1%) had a marital status of single or separated. Overall, HRS participants had a mean (SD) of 12.4 (3.1) years of education and were overweight (mean [SD] body mass index calculated as weight in kilograms divided by height in meters squared, 27.3 [5.3]).\n    For each cognitive function measure, participants were categorized into a consistently low trajectory group (ie, cognitive test scores from baseline through follow-up were consistently low) or a consistently high trajectory group (ie, cognitive test scores from baseline through follow-up were consistently high) ( Figure 1; eFigure 2 in the  Supplement). Of 12\u202f683 participants, 2972 (23.4%) had a consistently low trajectory for mental status, 9538 of 19\u202f887 (48.0%) for word recall, 2444 of 9931 (24.6%) for vocabulary, and 3619 of 12\u202f683 (28.5%) for total cognitive function score. As shown in  Table 1, for each cognitive function measure, compared with participants in the consistently high trajectory group, those with a consistently low trajectory were more likely to be older, black individuals, single or separated, and tobacco smokers, and had fewer years of education and a higher body mass index. However, individuals with consistently low cognitive function results were less likely to be a current or former drinker ( Table 1; eTable 1 in the  Supplement).\n    The associations of alcohol consumption and cognitive function trajectories are presented in  Table 2. After controlling for all covariates, compared with never drinkers, current low to moderate drinkers were significantly less likely to be associated with consistently low trajectories for total cognitive score (OR, 0.66; 95% CI, 0.59-0.74), mental status (OR, 0.71; 95% CI, 0.63-0.81), word recall 0.74 (95% CI, 0.69-0.80), and vocabulary (OR, 0.64; 95% CI, 0.56-0.74) (all  P\u2009&lt;\u2009.001). Similarly, among former drinkers, ORs for being in the consistently low trajectory group were 0.72 (95% CI, 0.63-0.82) for the total cognitive score, 0.83 (95% CI, 0.72-0.95) for mental status, 0.76 (95% CI, 0.70-0.83) for word recall, and 0.73 (95% CI, 0.63-0.86) for vocabulary. Heavy drinkers had lower odds of being in the consistently low trajectory group only for the vocabulary test (OR, 0.51; 95% CI, 0.37-0.71). Low to moderate drinkers were also significantly associated with the age-related annual rate of change, with effect sizes of 0.04 (95% CI, 0.02-0.07;  P\u2009=\u2009.002) for the total cognition score, 0.02 (95% CI, 0.01-0.03) for mental status, 0.02 (95% CI, 0.01-0.04;  P\u2009=\u2009.01) for word recall, and 0.01 (95% CI, 0.00-0.03;  P\u2009=\u2009.08) for vocabulary ( Figure 2; eFigure 3 in the  Supplement).\n    Spline analyses showed significant U-shaped associations between weekly drinking doses and the odds of being in the consistently low trajectory group for all cognitive function domains (eFigure 4 in the  Supplement). The weekly drinking dose at the turning points were 12 drinks for the total cognition score, 13 drinks for mental status, 10 drinks for word recall, and 14 drinks for vocabulary. Sensitivity analyses among participants with no chronic disease condition showed that the U-shaped association was still significant for the scores of total word recall ( P\u2009=\u2009.001) and vocabulary ( P\u2009=\u2009.004), but not for mental status ( P\u2009=\u2009.88) or total cognition score ( P\u2009=\u2009.19) (eFigure 5 in the  Supplement).\n    The associations of alcohol drinking and cognitive functions were similar between men and women (eTable 2 in the  Supplement) but differed for race/ethnicity. As shown in  Table 3, low to moderate drinking was significantly associated with lower odds of having a\n......", "posttime": "2020-07-06 03:25:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,\u996e\u9152,moderate", "title": "\u4e2d\u4f4e\u5ea6\u996e\u9152\u4e0e\u8ba4\u77e5\u529f\u80fd\u6539\u5584\u7684\u5173\u7cfb", "title_en": "Association of low to moderate alcohol drinking with better cognitive function", "transed": 1, "url": "https://jamanetwork.com/journals/jamanetworkopen/fullarticle/2767693", "via": "", "real_tags": ["\u8ba4\u77e5", "\u996e\u9152", "moderate"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009979, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fb7\u6ce1\u4f1a\u8ba9\u4f60\u5f00\u59cb\u4e00\u573a\u8fa9\u8bba\u3002\u7136\u540e\u5176\u4ed6\u7528\u6237\u53ef\u4ee5\u8d28\u7591\u4f60\u7684\u5f00\u573a\u767d\u3002\u5982\u679c\u4f60\u63a5\u53d7\u6311\u6218\uff0c\u4f60\u548c\u4f60\u7684\u5bf9\u624b\u5c06\u80fd\u591f\u8fdb\u884c\u4e00\u573a\u516c\u5f00\u4f46\u4e0d\u4f1a\u5206\u5fc3\u7684\u8c08\u8bdd\u3002\u5fb7\u535a\u59c6\u4f1a\u786e\u4fdd\u4f60\u7b49\u5f85\u8f6e\u5230\u4f60\uff0c\u7136\u540e\u624d\u80fd\u53d1\u8868\u4f60\u7684\u8bba\u70b9\u3002\u5b83\u8fd8\u5c06\u628a\u6bcf\u4e2a\u56de\u5e94\u9650\u5236\u57281500\u4e2a\u5b57\u7b26(\u5927\u7ea6\u4e00\u9875)\u5185\uff0c\u6574\u4e2a\u8fa9\u8bba\u4e0d\u5f97\u8d85\u8fc712\u8f6e\u3002\u7528\u6237\u4e0d\u518d\u50cf\u4f53\u80b2\u8ff7\u90a3\u6837\u4e3a\u81ea\u5df1\u7684\u4e00\u65b9\u6b22\u547c\uff0c\u800c\u662f\u80fd\u591f\u901a\u8fc7\u4e3b\u6f14\u6574\u4e2a\u8fa9\u8bba\u6765\u8868\u660e\u4ed6\u4eec\u4ece\u4f60\u7684\u5bf9\u8bdd\u4e2d\u83b7\u5f97\u7684\u4ef7\u503c\u3002\n\u96c5\u5178\u54f2\u5b66\u5bb6\uff0c\u67cf\u62c9\u56fe\u5b66\u6d3e\u7684\u521b\u59cb\u4eba\uff0c\u4ee5\u53ca\u897f\u65b9\u7b2c\u4e00\u6240\u9ad8\u7b49\u5b66\u5e9c--\u5b66\u9662\u3002\n\u5e0c\u814a\u54f2\u5b66\u5bb6\u548c\u535a\u5b66\u8005\uff0c\u5b66\u56ed\u3001\u5de1\u56de\u5b66\u6d3e\u548c\u4e9a\u91cc\u58eb\u591a\u5fb7\u4f20\u7edf\u7684\u521b\u59cb\u4eba\u3002\n\u4f46\u6bcf\u5f53\u6211\u5728Twitter\u4e0a\u53d1\u8868\u58f0\u660e\u65f6\uff0c\u611f\u89c9\u5c31\u50cf\u662f\u5728\u548c\u4e00\u7fa4\u66b4\u5f92\u8fa9\u8bba\u3002", "note_en": "Debubble will let you start a debate. Other users can then  challenge your opening arguments. If you  accept a challenge, you and your opponent will be able to engage in a  public but  distraction-free conversation. Debubble will make sure you  wait for your turn before you can deliver your arguments. It will also limit each response to  1500 characters (roughly one page) and the entire debate to  12 turns. Instead of cheering for their side like sports fans, users will be able to signal the value they got from your conversation by  starring the whole debate.\n      Athenian philosopher, founder of the Platonist school of thought, and the Academy, the first institution of higher learning in the West\n    Greek philosopher and polymath, founder of the Lyceum and the Peripatetic school of philosophy and Aristotelian tradition\n  But whenever I make a claim on Twitter, it feels like I am debating with a mob.", "posttime": "2020-07-06 03:24:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "debubble,\u80fd\u591f", "title": "\u53bb\u6ce1", "title_en": "Debubble", "transed": 1, "url": "http://debubble.me", "via": "", "real_tags": ["debubble", "\u80fd\u591f"]}, {"category": "", "categoryclass": "", "imagename": "9ef372fe333ceba04c830ad3f5fdd223.png", "infoid": 1009978, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6559\u7a0b\u5c06\u5e2e\u52a9\u60a8\u5f00\u59cb\u4f7f\u7528Multicore OCaml\u7f16\u5199\u5e76\u884c\u7a0b\u5e8f\u3002\u6240\u6709\u4ee3\u7801\u793a\u4f8b\u53ca\u5176\u5bf9\u5e94\u7684\u6c99\u4e18\u6587\u4ef6\u90fd\u53ef\u4ee5\u5728code/\u76ee\u5f55\u4e2d\u627e\u5230\u3002\u672c\u6559\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a\n\u591a\u6838OCaml\u662fOCaml\u7684\u6269\u5c55\uff0c\u672c\u673a\u652f\u6301\u901a\u8fc7\u57df\u5b9e\u73b0\u7684\u5171\u4eab\u5185\u5b58\u5e76\u884c\u6027\u548c\u901a\u8fc7\u4ee3\u6570\u6548\u679c\u5b9e\u73b0\u7684\u5e76\u53d1\u6027\u3002\u5b83\u6b63\u5728\u7f13\u6162\u4f46\u7a33\u5b9a\u5730\u5408\u5e76\u5230\u4e3b\u5e72OCaml\u3002\u57df-\u53ea\u6709\u591a\u6838\u624d\u4f1a\u9996\u5148\u767b\u9646\uff0c\u7136\u540e\u662f\u4ee3\u6570\u6548\u5e94(Algebraic Effects)\u3002\n\u591a\u6838OCaml\u7f16\u8bd1\u5668\u9644\u5e26\u4e86\u5783\u573e\u6536\u96c6\u5668\u7684\u4e24\u79cd\u53d8\u4f53\uff0c\u5373\u5e76\u53d1\u6b21\u8981\u6536\u96c6\u5668(ConcMinor)\u548c\u505c\u6b62\u4e16\u754c\u7684\u5e76\u884c\u6b21\u8981\u6536\u96c6\u5668(ParMinor)\u3002\u6211\u4eec\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cParMinor\u6bd4ConcMinor\u6267\u884c\u5f97\u66f4\u597d\u3002\u4e0eConcMinor\u7834\u574fC API\u4e0d\u540c\uff0cParMinor\u4e5f\u4e0d\u9700\u8981\u5bf9\u7f16\u8bd1\u5668\u7684C API\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\u56e0\u6b64\uff0c\u5171\u8bc6\u662f\u5728\u4ec5\u9650\u57df\u7684\u591a\u6838\u5411\u4e0a\u4f20\u8f93\u671f\u95f4\u7ee7\u7eed\u4f7f\u7528ParMinor\u3002ConcMinor\u7684\u7248\u672c\u662fOCaml 4.06.1\uff0cParMinor\u5df2\u7ecf\u5347\u7ea7\u52304.10.0\u548c4.11.0\u3002\u672c\u6587\u63d0\u4f9b\u4e86\u66f4\u591a\u5173\u4e8eGC\u8bbe\u8ba1\u548c\u8bc4\u4f30\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\u672c\u6559\u7a0b\u5c06\u5e26\u60a8\u4e86\u89e3\u5982\u4f55\u5728\u591a\u6838OCaml\u4e2d\u6709\u5229\u53ef\u56fe\u5730\u7f16\u5199\u5e76\u884c\u7a0b\u5e8f\u3002\u8fd9\u91cc\u6ca1\u6709\u6d89\u53ca\u5230\u6548\u679c\u5904\u7406\u5668\u7684\u6545\u4e8b\uff0c\u5bf9\u4e8e\u611f\u5174\u8da3\u7684\u4eba\uff0c\u8bf7\u52a1\u5fc5\u67e5\u770b\u672c\u6559\u7a0b\u548c\u793a\u4f8b\u3002\n\u867d\u7136\u5c06\u591a\u6838\u4f4d\u5411\u4e0a\u4f20\u8f93\u5230\u4e3b\u5e72\u7684\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u4f46\u53ef\u4ee5\u5728\u591a\u6838Opam\u7684\u5e2e\u52a9\u4e0b\u5f00\u59cb\u4f7f\u7528\u591a\u6838OCaml\u3002Multicore OCaml 4.10.0\u7f16\u8bd1\u5668\u548cdomainlib\u7684\u5b89\u88c5\u8bf4\u660e\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\uff0c\u5176\u4ed6\u53ef\u7528\u7684\u7f16\u8bd1\u5668\u53d8\u4f53\u5728\u8fd9\u91cc\u3002\n\u5728\u60a8\u7684\u591a\u6838\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5utop\u4e5f\u5f88\u6709\u7528\u3002opam install utop\u5e94\u8be5\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n\u8bben=n*n\u4ee4x=5\u4ee4y=10\u4ee4_=\u4ee4d=Domain.spawn(Fun_-&&gt;\uff1bSquare x)\u5728\u4ee4Sx=Domain.Join d in Printf.printf&#34\uff1bx=%d\uff0cy=%d\\n&#34\uff1bSx Sy\u4e2d\u8bbeSy=Square y\u3002\n\u57df\u3002\u52a0\u5165%d\u4e2a\u5757\uff0c\u76f4\u5230\u57df%d\u8fd0\u884c\u5b8c\u6210\u3002\u5982\u679c\u57df\u5728\u6267\u884c\u540e\u8fd4\u56de\u7ed3\u679c\uff0cDomain.Join d\u4e5f\u4f1a\u8fd4\u56de\u8be5\u503c\u3002\u5982\u679c\u5b83\u5f15\u53d1\u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u5219\u629b\u51fa\u8be5\u5f02\u5e38\u3002\u5f53\u7236\u57df\u4e2d\u65ad\u65f6\uff0c\u6240\u6709\u5176\u4ed6\u57df\u4e5f\u4f1a\u7ec8\u6b62\u3002\u4e3a\u4e86\u786e\u4fdd\u57df\u8fd0\u884c\u5230\u5b8c\u6210\uff0c\u6211\u4eec\u5fc5\u987b\u52a0\u5165\u8be5\u57df\u3002\n\u8bf7\u6ce8\u610f\uff0cx\u7684\u5e73\u65b9\u662f\u5728\u65b0\u57df\u4e2d\u8ba1\u7b97\u7684\uff0cy\u7684\u5e73\u65b9\u662f\u5728\u7236\u57df\u4e2d\u8ba1\u7b97\u7684\u3002\n\u786e\u4fdd\u4f7f\u7528\u591a\u6838\u4ea4\u6362\u673a\u6784\u5efa\u6b64\u793a\u4f8b\u548c\u672c\u6559\u7a0b\u4e2d\u9047\u5230\u7684\u6240\u6709\u5176\u4ed6\u540e\u7eed\u793a\u4f8b\u3002\n\u8fd9\u4e9b\u9519\u8bef\u901a\u5e38\u610f\u5473\u7740\u7528\u4e8e\u7f16\u8bd1\u4ee3\u7801\u7684\u5f00\u5173\u4e0d\u662famulticore\u5f00\u5173\u3002\u4f7f\u7528\u591a\u6838\u4ea4\u6362\u673a\u5e94\u8be5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\nDomainslb\u662f\u4e00\u4e2a\u7528\u4e8e\u591a\u6838OCaml\u7684\u5e76\u884c\u7f16\u7a0b\u5e93\u3002\u5b83\u63d0\u4f9b\u4e86\u4ee5\u4e0bAPI\uff0c\u4f7f\u5f97\u53ea\u9700\u5bf9\u987a\u5e8f\u4ee3\u7801\u8fdb\u884c\u5c11\u91cf\u4fee\u6539\u5373\u53ef\u8f7b\u677e\u5e76\u884c\u5316OCaml\u4ee3\u7801\uff1a\n\u5728\u57df\u90e8\u5206\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5982\u4f55\u901a\u8fc7\u6d3e\u751f\u65b0\u57df\u5728\u591a\u6838\u4e0a\u8fd0\u884c\u7a0b\u5e8f\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u5e76\u884c\u6267\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u53d1\u73b0\u81ea\u5df1\u5728\u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u591a\u6b21\u50ac\u751f\u548c\u52a0\u5165\u65b0\u57df\u3002\u521b\u5efa\u65b0\u57df\u662f\u4e00\u9879\u4ee3\u4ef7\u9ad8\u6602\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u52a0\u4ee5\u9650\u5236\u3002\u4efb\u52a1\u6c60\u5141\u8bb8\u6211\u4eec\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u4ea7\u751f\u7684\u540c\u4e00\u7ec4\u57df\u4e2d\u6267\u884c\u6240\u6709\u5e76\u884c\u5de5\u4f5c\u8d1f\u8f7d\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u8ba9\u4efb\u52a1\u6c60\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u5728utop\u4e0a\u8fd0\u884c\u6b64\u547d\u4ee4\uff0c\u8bf7\u4f7f\u7528\u6b64\u4e4b\u524d\u7684\u6563\u5217\u8fd0\u884c#Required&#34\uff1bdomainlib&34\uff1b\u3002\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u4e09\u4e2a\u65b0\u57df\u7684\u65b0\u4efb\u52a1\u6c60\u3002\u7236\u57df\u4e5f\u662f\u8be5\u6c60\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u7531\u56db\u4e2a\u57df\u7ec4\u6210\u7684\u6c60\u3002\u5728\u6c60\u8bbe\u7f6e\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6c60\u6765\u6267\u884c\u6211\u4eec\u60f3\u8981\u5e76\u884c\u8fd0\u884c\u7684\u6240\u6709\u4efb\u52a1\u3002setup_pool\u51fd\u6570\u8981\u6c42\u6211\u4eec\u6307\u5b9a\u8981\u5728\u4efb\u52a1\u6c60\u4e2d\u6d3e\u751f\u7684\u65b0\u57df\u7684\u6570\u91cf\u3002\u542f\u52a8\u4efb\u52a1\u6c60\u7684\u7406\u60f3\u57df\u6570\u7b49\u4e8e\u53ef\u7528\u6838\u5fc3\u6570\u3002\u7531\u4e8e\u7236\u57df\u4e5f\u662f\u6c60\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64num_domain\u53c2\u6570\u5e94\u8be5\u6bd4\u53ef\u7528\u6838\u5fc3\u6570\u5c11\u4e00\u3002\n\u5f3a\u70c8\u5efa\u8bae\u60a8\u5728\u6267\u884c\u6240\u6709\u4efb\u52a1\u540e\u5173\u95ed\u4efb\u52a1\u6c60\uff0c\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u8fd9\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5b8c\u6210\n\u73b0\u5728\u6c60\u5df2\u505c\u7528\uff0c\u4e0d\u518d\u53ef\u7528\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4ec5\u5728\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u540e\u624d\u6267\u884c\u6b64\u64cd\u4f5c\u3002\nPARALLEL_FOR\u662fTask API\u4e2d\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u539f\u8bed\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u4f38\u7f29\uff0c\u53ea\u9700\u5bf9\u987a\u5e8f\u4ee3\u7801\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u7684\u987a\u5e8f\u7248\u672c\uff0c\u8be5\u51fd\u6570\u6267\u884c\u4e24\u4e2a\u77e9\u9635\u7684\u77e9\u9635\u4e58\u6cd5\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\n\u8bbe\u4e58\u77e9\u9635a b=\u8bbei_n=Array.length a\uff0c\u8bbej_n=Array.length b.(0)\u8bbek_n=Array.length b.(0)\u8bberes=Array.make_Matrix i_n j_n 0 in for i=0 to i_n-1 do for j=0 to j_n-1 do for k=0 to k_n-1 do res(I).(J)&lt\uff1b-\u51b3\u8bae(I)(J)+a(I)(K)*b(K)(J)\u5df2\u5b8c\u6210\u3002\n\u4e0eMulticoreOCaml\u4e0a\u4e0b\u6587\u4e2d\u7684\u5217\u8868\u76f8\u6bd4\uff0c\u6570\u7ec4\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u6548\u7387\u3002\u5c3d\u7ba1\u5b83\u4eec\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u901a\u5e38\u4e0d\u53d7\u6b22\u8fce\uff0c\u4f46\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u800c\u4f7f\u7528\u6570\u7ec4\u662f\u4e00\u79cd\u5408\u7406\u7684\u6743\u8861\u3002\n\u8bbe\u5e76\u884c\u77e9\u9635\u500d\u589e\u6c60a b=\u8bbei_n=Array.length a\uff0c\u8bbej_n=Array.length b.(0)\uff0c\u8bbek_n=Array.length b in Res=Array.make_Matrix i_n j_n 0 in Task.Parallel_for pool~Chunk_Size\uff1aChunk_Size~start\uff1a0~Finish\uff1a(i_n-1)~body\uff1a(Fun i-&gt\uff1b\u5bf9\u4e8ej=0\u5230j_n-1\uff0cDo for k=0\u5230k_n-1\u505a\u54cd\u5e94(I).(J)&lt\uff1b-\u89e3\u6790(I).(J)+a.(I).(K)*b.(K).(J)\u5b8c\u6210)\uff1b\u89e3\u6790\u3002\n\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5e73\u884c\u8bd1\u672c\u548c\u987a\u5e8f\u8bd1\u672c\u4e4b\u95f4\u7684\u8bb8\u591a\u4e0d\u540c\u4e4b\u5904\u3002\u5e76\u884c\u7248\u672c\u91c7\u7528\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\u6c60\uff0c\u8fd9\u662f\u56e0\u4e3aPARALLEL_FOR\u5728\u8be5\u4efb\u52a1\u6c60\u4e2d\u5b58\u5728\u7684\u57df\u4e0a\u6267\u884cfor\u5faa\u73af\u3002\u867d\u7136\u53ef\u4ee5\u5728\u51fd\u6570\u672c\u8eab\u5185\u90e8\u521d\u59cb\u5316\u4efb\u52a1\u6c60\uff0c\u4f46\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5355\u4e2a\u4efb\u52a1\u6c60\u603b\u662f\u66f4\u597d\u7684\u3002\u5982\u524d\u6240\u8ff0\uff0c\u8fd9\u662f\u4e3a\u4e86\u5c06\u521b\u5efa\u65b0\u57df\u540d\u6240\u6d89\u53ca\u7684\u6210\u672c\u964d\u81f3\u6700\u4f4e\u3002\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u4efb\u52a1\u6c60\u5e76\u8de8\u6574\u4e2a\u4f7f\u7528\u5b83\uff0c\u4f46\u662f\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u5730\u5bf9\u60a8\u7684\u4ee3\u7801\u8fdb\u884c\u63a8\u7406\uff0c\u5efa\u8bae\u5c06\u5176\u7528\u4f5c\u51fd\u6570\u53c2\u6570\u3002\n\u6211\u4eec\u5c06\u68c0\u67e5PARALLEL_FOR\u7684\u53c2\u6570\u3002\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0c\u5b83\u63a5\u53d7\u6c60\u4e2d\u7684start\u548cFinish\uff0c\u56e0\u4e3a\u540d\u79f0suggest set\u662f\u5faa\u73af\u8fed\u4ee3\u7684\u8d77\u59cb\u503c\u548c\u7ed3\u675f\u503c\uff0cbody\u5305\u542b\u8981\u6267\u884c\u7684\u5b9e\u9645\u5faa\u73af\u4f53\u3002\u987a\u5e8f\u7248\u672c\u4e2d\u4e0d\u5b58\u5728\u7684\u4e00\u4e2a\u53c2\u6570\u662fCHUNK_SIZE\u3002\u5757\u5927\u5c0f\u51b3\u5b9a\u4e86\u5728\u591a\u6838\u4e0a\u6267\u884c\u4efb\u52a1\u65f6\u7684\u7c92\u5ea6\u3002\u7406\u60f3\u7684\u5757\u5927\u5c0f\u53d6\u51b3\u4e8e\u4ee5\u4e0b\u56e0\u7d20\u7684\u7ec4\u5408\uff1a\n\u5faa\u73af\u7684\u6027\u8d28\uff1a\u5728\u51b3\u5b9a\u8981\u4f7f\u7528\u7684CHUNK_SIZE\u65f6\uff0c\u9700\u8981\u8003\u8651\u4e0eTheLoop\u6709\u5173\u7684\u4e24\u4ef6\u4e8b\uff0c\u4e00\u662fTheLoop\u4e2d\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u4e8c\u662f\u6bcf\u6b21\u8fed\u4ee3\u6240\u9700\u7684\u65f6\u95f4\u3002\u5982\u679c\u6bcf\u6b21\u8fed\u4ee3\u82b1\u8d39\u7684\u65f6\u95f4\u5927\u81f4\u76f8\u7b49\uff0c\u90a3\u4e48CHUNK_SIZE\u53ef\u4ee5\u662f\u8fed\u4ee3\u6b21\u6570\u9664\u4ee5\u6838\u5fc3\u6570\u91cf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6bcf\u6b21\u8fed\u4ee3\u82b1\u8d39\u7684\u65f6\u95f4\u4e0d\u540c\uff0c\u90a3\u4e48\u5757\u5e94\u8be5\u66f4\u5c0f\u3002\u5982\u679c\u603b\u8fed\u4ee3\u6b21\u6570\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6570\u5b57\uff0c\u50cf32\u621616\u8fd9\u6837\u7684CHUNK_SIZE\u662f\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\u7684\uff0c\u800c\u5982\u679c\u8fed\u4ee3\u6b21\u6570\u5f88\u4f4e\uff0c\u6bd4\u598210\uff0c\u5219CHUNK_SIZE\u4e3a1\u4f1a\u6267\u884c\u5f97\u6700\u597d\u3002\n\u673a\u5668\uff1a\u4e0d\u540c\u673a\u5668\u7684\u6700\u4f73\u5757\u5927\u5c0f\u5404\u4e0d\u76f8\u540c\uff0c\u5efa\u8bae\u5c1d\u8bd5\u4e00\u7cfb\u5217\u503c\uff0c\u4ee5\u627e\u51fa\u5728\u60a8\u7684\u673a\u5668\u4e0a\u6548\u679c\u6700\u597d\u7684\u503c\u3002\n\u5728\u5e76\u884cFOR\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e8616\u500d\u7684\u52a0\u901f\u3002\u5f53\u53ef\u5e76\u884c\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u7528\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u5b9e\u73b0\u7ebf\u6027\u52a0\u901f\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5e76\u884c\u4ee3\u7801\u7684\u6027\u80fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u673a\u5668\uff0c\u8fd9\u91cc\u63cf\u8ff0\u4e86\u4e00\u4e9b\u7279\u5b9a\u4e8eLinux\u7cfb\u7edf\u7684\u673a\u5668\u8bbe\u7f6e\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\u3002\nPARALLEL_FOR\u6709\u4e00\u4e2a\u9690\u5f0f\u7684\u969c\u788d\uff0c\u8fd9\u610f\u5473\u7740\u5728\u540c\u4e00\u6c60\u4e2d\u7b49\u5f85\u6267\u884c\u7684\u5176\u4ed6\u4efb\u52a1(\u5982\u679c\u6709\u7684\u8bdd)\u53ea\u6709\u5728\u5b8c\u6210PARALLEL_FOR\u4e2d\u7684\u6240\u6709\u5757\u4e4b\u540e\u624d\u4f1a\u542f\u52a8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u5fc5\u62c5\u5fc3\u5728\u4e24\u4e2aPARALLEL_FOR\u6216PARALLEL_FOR\u4e4b\u540e\u7684\u5176\u4ed6\u64cd\u4f5c\u4e4b\u95f4\u663e\u5f0f\u5730\u521b\u5efa\u548c\u63d2\u5165\u969c\u788d\u3002\u8003\u8651\u8fd9\u4e2a\u573a\u666f\uff1a\u6211\u4eec\u6709\u4e09\u4e2a\u77e9\u9635m1\u3001m2\u548cm3\u3002\u6211\u4eec\u8981\u8ba1\u7b97(m1*m2)*m3\uff0c\u5176\u4e2d*\u8868\u793a\u77e9\u9635\u4e58\u6cd5\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e09\u4e2a\u77e9\u9635\u90fd\u662f\u5927\u5c0f\u76f8\u540c\u7684\u65b9\u9635\u3002\n\u8ba9Parallel_Matrix_Multiply_3\u6c60m1 m2 m3=let size=Array.length m1 in(*\u5b58\u50a8M1*m2*)let res=Array.make_Matrix size size 0 in(*store M1*m2*)let res=Array.make_Matrix size size 0 in Task.parallel_for pool~chunk_size\uff1a(size/num_domain)~start\uff1a0~Finish\uff1a(size-1)~body\uff1a(Fun i-&gt\uff1b\u5bf9\u4e8ej=0\u5230size-1\uff0c\u5f53k=0\u5230size-1\u65f6\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002-t.(I).(J)+m1.(I).(K)*m2.(K).(J)\u5b8c\u6210)\uff1bTask.Parallel_for pool~Chunk_Size\uff1a(Size/Num_Domain)~Start\uff1a0~Finish\uff1a(Size-1)~Body\uff1a(Fun i-&&gt;Do for k=0 to Size-1 Do for k=0 to Size-1 Do For k=0 to Size-1 Do)(I).(J)&lt\uff1b-\u51b3\u8bae(I)(J)+t(I)(K)*m3(K)(J)\u5df2\u5b8c\u6210)\uff1b\u51b3\u8bae(I)+t(I).(K)*m3(K).(J)\u5df2\u5b8c\u6210)\uff1b\n\u5728\u5047\u8bbePARALLEL_FOR\u6ca1\u6709\u9690\u5f0f\u969c\u788d\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cress\u7684\u8ba1\u7b97\u5f88\u53ef\u80fd\u4e0d\u6b63\u786e\u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u9690\u5f0f\u7684\u969c\u788d\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5f97\u5230\u6b63\u786e\u7684\u8ba1\u7b97\u3002\n\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\u987a\u5e8ffor\u5faa\u73af\uff0c\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\uff0c\u4ee5\u5b8c\u5168\u76f8\u540c\u7684\u987a\u5e8f\u8fd0\u884c\u8fed\u4ee3\u3002\u5728PARALLEL_FOR\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u987a\u5e8f\u662f\u4efb\u610f\u7684\uff0c\u5e76\u4e14\u5728\u5b8c\u5168\u76f8\u540c\u7684\u4ee3\u7801\u7684\u4e24\u6b21\u8fd0\u884c\u4e4b\u95f4\u53d8\u5316\u3002\u5982\u679c\u8fed\u4ee3\u987a\u5e8f\u5bf9\u4e8e\u4ee3\u7801\u6309\u9884\u671f\u5de5\u4f5c\u5f88\u91cd\u8981\uff0c\u5efa\u8bae\u8c28\u614e\u4f7f\u7528PARALLEL_FOR\u3002\n\u5982\u679c\u5faa\u73af\u4e2d\u6709\u4efb\u4f55\u4f9d\u8d56\u5173\u7cfb\uff0c\u6bd4\u5982\u5f53\u524d\u8fed\u4ee3\u4f9d\u8d56\u4e8e\u524d\u4e00\u6b21\u8fed\u4ee3\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u5982\u679c\u4f7f\u7528PARALLEL_FOR\uff0c\u4ee3\u7801\u7684\u6b63\u786e\u6027\u5f88\u6709\u53ef\u80fd\u4e0d\u518d\u6210\u7acb\u3002\u4efb\u52a1API\u6709\u4e00\u4e2a\u539f\u8bedPARALLEL_SCAN\uff0c\u5728\u8fd9\u6837\u7684\u573a\u666f\u4e2d\u53ef\u80fd\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\nParallel For\u8ba9\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u5e76\u884c\u5316\u8fed\u4ee3\u4efb\u52a1\u3002\u5f02\u6b65\u7b49\u5f85\u4e3a\u5e76\u884c\u6267\u884c\u4efb\u52a1\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u8fd9\u5728\u9012\u5f52\u529f\u80fd\u4e2d\u7279\u522b\u6709\u7528\u3002\u6211\u4eec\u5728\u524d\u9762\u5df2\u7ecf\u4e86\u89e3\u4e86\u5982\u4f55\u8bbe\u7f6e\u548c\u62c6\u5378\u4efb\u52a1\u6c60\u3002Task API\u8fd8\u5177\u6709\u5728\u4efb\u52a1\u6c60\u4e0a\u8fd0\u884c\u7279\u5b9a\u4efb\u52a1\u7684\u529f\u80fd\u3002\n\u6211\u4eec\u5c06\u5e76\u884c\u8ba1\u7b97\u6590\u6ce2\u7eb3\u5951\u6570\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u987a\u5e8f\u51fd\u6570\u6765\u8ba1\u7b97\u6590\u6ce2\u7eb3\u5951\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u5c3e\u9012\u5f52\u7684\u6734\u7d20\u6590\u6ce2\u7eb3\u5951\u51fd\u6570\u3002\n\u8bberec fib n=if n&lt\uff1b2\u52191\u5426\u5219fib(n-1)+fib(n-2)\u3002\n\u6ce8\u610f\u5230\u9012\u5f52\u60c5\u51b5\u4e0b\u7684fib(n-1)\u548cfib(n-2)\u4e2d\u7684\u4e24\u4e2a\u64cd\u4f5c\u6ca1\u6709\u4efb\u4f55\u76f8\u4e92\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u4fbf\u4e8e\u6211\u4eec\u5e76\u884c\u8ba1\u7b97\u5b83\u4eec\u3002\u5b9e\u8d28\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97fib(n-1)\u548cfib(n-2)\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u76f8\u52a0\u5f97\u5230\u7b54\u6848\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u57df\u6765\u6267\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u4ee5\u83b7\u5f97\u7ed3\u679c\uff0c\u4ece\u800c\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5fc5\u987b\u5c0f\u5fc3\uff0c\u4e0d\u8981\u4ea7\u751f\u6bd4\u53ef\u7528\u6838\u5fc3\u6570\u91cf\u66f4\u591a\u7684\u57df\u3002\n\u8ba9rec fib_par n d=if d&lt\uff1b=1\uff0c\u5219fib n\u5426\u5219\u8ba9a=fib_par(n-1)(d-1)in b=Domain.spawn(Fun_-&gt\uff1bfib_par(n-2)(d-1))in a+Domain.Join b\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1\u6c60\u5f02\u6b65\u6267\u884c\u4efb\u52a1\uff0c\u8fd9\u6837\u4e0d\u90a3\u4e48\u7e41\u7410\uff0c\u4f38\u7f29\u6027\u4e5f\u66f4\u597d\u3002\n\u8ba9rec fib_par pool n=\u5982\u679cn=40\uff0c\u5219fib n\u5426\u5219\u8ba9a=Task.async pool(Fun_-&gt;\uff1bfib_par pool(n-1))\uff0clet b=Task.async pool(Fun_-&&gt;\uff1bfib_par pool(n-2))in Task.awast\u6c60a+Task.await\u6c60b\u3002\n\u5982\u679cn-lt\uff1b=40\uff0c\u5219\u5f53\u8f93\u5165\u5c0f\u4e8e40\u65f6\uff0c\u6211\u4eec\u8fd0\u884c\u987a\u5e8ffib\u51fd\u6570\u3002\u5f53\u8f93\u5165\u7684\u6570\u5b57\u8db3\u591f\u5c0f\u65f6\uff0c\u6700\u597d\u6309\u987a\u5e8f\u6267\u884c\u8ba1\u7b97\u3002\u8fd9\u91cc\u6211\u4eec\u53d640\u4f5c\u4e3a\u9608\u503c\uff0c\u4e00\u4e9b\u5b9e\u9a8c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u627e\u5230\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u9608\u503c\uff0c\u4f4e\u4e8e\u8fd9\u4e2a\u9608\u503c\u5c31\u53ef\u4ee5\u6309\u987a\u5e8f\u8fdb\u884c\u8ba1\u7b97\u3002\nTask.async\u5f02\u6b65\u6267\u884c\u6c60\u4e2d\u7684\u4efb\u52a1\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u627f\u8bfa\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c1a\u672a\u5b8c\u6210\u7684\u8ba1\u7b97\u3002\u5728\u6267\u884c\u8fd0\u884c\u5230\u5b8c\u6210\u540e\uff0c\u5176\u7ed3\u679c\u5c06\u5b58\u50a8\u5728\u627f\u8bfa\u4e2d\u3002\nTask.await\u7b49\u5f85\u627f\u8bfa\u5b8c\u6210\u5176\u6267\u884c\uff0c\u4e00\u65e6\u6267\u884c\u5b8c\u6210\uff0c\u5c31\u4f1a\u8fd4\u56de\u4efb\u52a1\u7684\u7ed3\u679c\u3002\u5982\u679c\u4efb\u52a1\u5f15\u53d1\u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0cAWAIT\u4e5f\u4f1a\u5f15\u53d1\u76f8\u540c\u7684\u5f02\u5e38\u3002\n\u901a\u9053\u5145\u5f53\u57df\u4e4b\u95f4\u6570\u636e\u901a\u4fe1\u7684\u5a92\u4ecb\u3002\u5b83\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u53d1\u9001\u57df\u548c\u63a5\u6536\u57df\u4e4b\u95f4\u5171\u4eab\u3002\u591a\u6838OCamlcome\u4e2d\u7684\u9891\u9053\u6709\u4e24\u79cd\u98ce\u683c\uff1a\n\u6709\u754c\uff1a\u5177\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u901a\u9053\u3002\u7f13\u51b2\u5668\u5927\u5c0f\u4e3a0\u7684\u4fe1\u9053\u5bf9\u5e94\u4e8e\u540c\u6b65\u4fe1\u9053\uff0c\u7f13\u51b2\u5668\u5927\u5c0f\u4e3a1\u7684\u4fe1\u9053\u7ed9\u51faMVarStructure\u3002\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u4efb\u610f\u7f13\u51b2\u533a\u5927\u5c0f\u7684\u6709\u754c\u901a\u9053\u3002\n\u65e0\u754c\uff1a\u65e0\u754c\u901a\u9053\u5bf9\u5b83\u4eec\u53ef\u4ee5\u5bb9\u7eb3\u7684\u5bf9\u8c61\u6570\u91cf\u6ca1\u6709\u9650\u5236\uff0c\u5b83\u4eec\u53ea\u53d7\u5185\u5b58\u53ef\u7528\u6027\u7684\u9650\u5236\u3002\n\u5728let msg=Chan.recv c in Domain.join send\uff1bPrintf.printf&#34\uff1b\u6d88\u606f\uff1a%s\\n&#34\uff1bmsg\u4e2d\u6253\u5f00Domainlib let c=Chan.make_bound 0 let_=let send=Domain.spawn(Fun_-&gt\uff1bChan.send c&#34\uff1bhello&#34\uff1b)\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a0\u7684\u6709\u754c\u901a\u9053c\u3002\u4efb\u4f55\u5230\u8be5\u4fe1\u9053\u7684\u53d1\u9001\u90fd\u88ab\u963b\u6b62\uff0c\u76f4\u5230\u9047\u5230\u76f8\u5e94\u7684RECV\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u672c\u4f8b\u4e2d\u5220\u9664recv\uff0c\u7a0b\u5e8f\u5c06\u65e0\u9650\u671f\u963b\u585e\u3002\n\u5728Domain.Join Send\uff1b\u4e2d\u6253\u5f00Domainlib let c=Chan.make_bound 0 let_=let send=Domain.spawn(Fun_-&gt\uff1bChan.send c&#34\uff1bhello&#34\uff1b)\u3002\n\u4e0a\u9762\u7684\u4f8b\u5b50\u57fa\u672c\u4e0a\u662f\u65e0\u9650\u671f\u963b\u585e\u7684\uff0c\u56e0\u4e3a\u53d1\u9001\u5668\u6ca1\u6709\u5bf9\u5e94\u7684\u63a5\u6536\u3002\u5982\u679c\u6211\u4eec\u6539\u4e3a\u521b\u5efa\u7f13\u51b2\u533a\u5927\u5c0f\u4e3an\u7684\u6709\u754c\u901a\u9053\uff0c\u5b83\u53ef\u4ee5\u5728\u901a\u9053\u4e2d\u6700\u591a\u5b58\u50a8[n]\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u9700\u8981\u76f8\u5e94\u7684\u63a5\u6536\uff0c\u8d85\u8fc7\u8be5\u503c\u5c06\u963b\u6b62\u53d1\u9001\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0e\u4e0a\u9762\u76f8\u540c\u7684\u793a\u4f8b\u8fdb\u884c\u5c1d\u8bd5\uff0c\u53ea\u9700\u5c06\u7f13\u51b2\u533a\u5927\u5c0f\u66f4\u6539\u4e3a1\u5373\u53ef\u3002\n\u5728Domain.Join Send\uff1b\u4e2d\u6253\u5f00Domainlib let c=Chan.make_bound 1let_=let send=Domain.spawn(Fun_-&gt\uff1bChan.send c&#34\uff1bhello&#34\uff1b)\u3002\n\u5982\u679c\u60a8\u4e0d\u60f3\u963b\u585esend\u6216recv\uff0c\u90a3\u4e48send_poll\u548crecv_polt\u53ef\u80fd\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\u5b83\u4eec\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u64cd\u4f5c\u6210\u529f\uff0c\u5219\u8fd4\u56deTRUE\uff0c\u5426\u5219\u8fd4\u56deFALSE\u3002\n\u5728Domain.Join Send\uff1b\u4e2d\u6253\u5f00Domainlib let c=Chan.make_bound 0let_=let send=Domain.spawn(Fun_-&gt\uff1blet b=Chan.send_polc&#34\uff1bhello&#34\uff1bin Printf.printf&#34\uff1b%B\\n&#34\uff1bb)\u3002\n\u7531\u4e8e\u7f13\u51b2\u533a\u5927\u5c0f\u4e3a0\uff0c\u5e76\u4e14\u901a\u9053\u4e0d\u80fd\u5bb9\u7eb3\u4efb\u4f55\u5bf9\u8c61\uff0c\u56e0\u6b64\u6b64\u7a0b\u5e8f\u5c06\u6253\u5370FALSE\uff0c\n\u6253\u5f00Domainlib let Num_Domones=try int_of_string Sys.argv\u3002(1)with_-&gt\uff1b4 let c=Chan.make_bound Num_Domones let\u53d1\u9001c=Printf.printf&#34\uff1b\u53d1\u9001\u65b9\uff1a%d\\n&#34\uff1b(Domain.self()\uff1a&gt\uff1bint)\uff1bChan.send c&#34\uff1bhowdy\uff01&#34\uff1blet recv c=Printf.printf&#34\uff1b\u63a5\u6536\u65b9\uff1a%d\\n&#34\uff1b(Domain.self()\uff1a&gt\uff1bint)\uff1bChan.send c&#34\uff1bhowdy\uff01&#34\uff1blet recv c=Printf.printf&#34\uff1b\u63a5\u6536\u3002(Domain.self()\uff1a&gt\uff1bint)\uff1bChan.recv c|&gt\uff1b\u5ffd\u7565\u9635\u5217\u4e2d\u7684let_=let sders=Array.init num_domain(Fun_-&gt\uff1bDomain.spawn(Fun_-&gt\uff1bsend c))\u4e2d\u7684let Receivers=Array.init num_Domain(Fun_-&gt\uff1bDomain.spawn(Fun_-&gt\uff1brecv c))\u3002Array.iter Domain.Join\u53d1\u9001\u5668\u4e2d\u7684let Receivers=Array.init num_Domain(Fun_-&gt\uff1bDomain.spawn(Fun_-&gt\uff1brecv c))\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5bf9\u6e20\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u4e86\u4e00\u5b9a\u7684\u4e86\u89e3\uff0c\u8ba9\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e2a\u66f4\u73b0\u5b9e\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u5c06\u4e86\u89e3\u5982\u4f55\u7f16\u5199\u5728\u591a\u4e2a\u57df\u4e0a\u6267\u884c\u4efb\u52a1\u7684\u901a\u7528\u4efb\u52a1\u5206\u914d\u5668\u3002\n\u6a21\u5757C=Domainslb\u3002chan let num_domain=try int_of_string Sys.argv(1)with_-&gt\uff1b4 let n=try int_of_string Sys.argv(2)with_-&gt\uff1b100\u7c7b\u578b&#39\uff1ba|Quit let c=C.make_unbound()let create_work task=Array.iter(Fun t-&gt\uff1bC.send c(Task T))Tasks\uff1bfor_=1 to num_domain do C.\u53d1\u9001c\u9000\u51fa\u5b8c\u6210let rec worker f()=\u5c06C.recv c\u4e0e|\u4efb\u52a1a-&gt\uff1bf a\uff1bworker f()|Quit-&gt\uff1b()let_=let Tasks=Array.init n(Fun i-&gt\uff1bi)\u5728create_work\u4efb\u52a1\u4e2d\u5339\u914d\uff1blet factorial n=let rec aux n acc=if(n&gt\uff1b0)\u5219AUX(n-1)(acc*n)Else Acc in AUX n 1 in let Results=Array.make n 0 in let update r i=r.(I)&lt\uff1b-letDomones\u4e2d\u7684factorial i=Array.init(num_domain-1)(FUN_-&gt\uff1bDomain.spawn(worker(Update Result)in Worker(Update Results)()\uff1bArray.iter Domain.Join Domain.Array.iter(Printf.printf\u3002\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65e0\u754c\u901a\u9053c\uff0c\u5b83\u5c06\u5145\u5f53\u6240\u6709\u4efb\u52a1\u7684\u5b58\u50a8\u533a\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u5173\u6ce8\u4e24\u4e2a\u51fd\u6570\uff1acreate_work\u548cworker\u3002\ncreate_work\u63a5\u53d7\u4e00\u7ec4\u4efb\u52a1\uff0c\u5e76\u5c06\u4efb\u52a1\u7684\u6240\u6709\u5143\u7d20\u63a8\u9001\u5230\u901a\u9053c\u3002Worker\u51fd\u6570\u4ece\u901a\u9053\u63a5\u6536\u4efb\u52a1\uff0c\u5e76\u4ee5\u63a5\u6536\u5230\u7684\u4efb\u52a1\u4e3a\u53c2\u6570\u6267\u884c\u51fd\u6570f\u3002\u5b83\u4e0d\u65ad\u9012\u5f52\uff0c\u76f4\u5230\u9047\u5230\u9000\u51fa\u6d88\u606f\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5411\u901a\u9053\u53d1\u9001\u9000\u51fa\u6d88\u606f\u7684\u539f\u56e0\uff0c\u8fd9\u8868\u660e\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u7ec8\u6b62\u3002\n\u901a\u8fc7\u5728\u6240\u6709\u57df\u4e0a\u8fd0\u884cWorker\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u677f\u5728\u591a\u4e2a\u6838\u5fc3\u4e0a\u8fd0\u884c\u4efb\u4f55\u4efb\u52a1\u3002\u6b64\u793a\u4f8b\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684factorialfunction\u3002\u4efb\u52a1\u7684\u7c92\u5ea6\u4e5f\u53ef\u4ee5\u8c03\u6574\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5728Worker\u51fd\u6570\u4e2d\u66f4\u6539\u5b83\uff0cWorker\u53ef\u4ee5\u8fd0\u884c\u4e00\u7cfb\u5217\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u4efb\u52a1\u3002\n\u5728\u591a\u6838OCaml\u4e2d\u7f16\u5199\u5e76\u884c\u7a0b\u5e8f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5f00\u9500\uff0c\u8fd9\u53ef\u80fd\u4f1a\u964d\u4f4e\u4ee3\u7801\u7684\u6027\u80fd\u3002\u672c\u8282\u4ecb\u7ecd\u53d1\u73b0\u5e76\u4fee\u590d\u8fd9\u4e9b\u5f00\u9500\u7684\u65b9\u6cd5\u3002Linux\u6027\u80fd\u548c\u591a\u6838\u8fd0\u884c\u65f6\u4e2d\u7684\u4e8b\u4ef6\u65e5\u5fd7\u5bf9\u4e8e\u6027\u80fd\u8c03\u8bd5\u7279\u522b\u6709\u7528\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u8fdb\u884c\u6027\u80fd\u8c03\u8bd5\u3002\u8ba9\u6211\u4eec\u501f\u52a9\u4e00\u4e2a\u4f8b\u5b50\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u4f7f\u7528\u6807\u51c6\u5e93\u7684Array.init\u8fdb\u884c\u6570\u7ec4\u521d\u59cb\u5316\u662f\u6309\u987a\u5e8f\u8fdb\u884c\u7684\u3002\u7a0b\u5e8f\u4e2d\u7684\u5e76\u884c\u5de5\u4f5c\u8d1f\u8f7d\u5c06\u6839\u636e\u4f7f\u7528\u7684\u6838\u5fc3\u6570\u91cf\u8fdb\u884c\u6269\u5c55\uff0c\u800c\u521d\u59cb\u5316\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u76f8\u540c\u7684\u65f6\u95f4\u3002\u8fd9\u53ef\u80fd\u4f1a\u6210\u4e3a\u5e76\u884c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u74f6\u9888\u3002\n\u5bf9\u4e8e\u6d6e\u70b9\u6570\u7ec4\uff0c\u6211\u4eec\u6709Array.createFloat\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d6e\u70b9\u6570\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5206\u914d\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u5e76\u884c\u6267\u884c\u521d\u59cb\u5316\u3002\u8ba9\u6211\u4eec\u5e76\u884c\u5730\u5bf9\u5177\u6709\u968f\u673a\u6570\u7684\u6d6e\u70b9\u6570\u7ec4\u8fdb\u884c\u521d\u59cb\u5316\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u5b83\u5c06\u7528\u968f\u673a\u6570\u521d\u59cb\u5316\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u3002\n\u6253\u5f00Domainlib let num_domain=try int_of_string Sys.argv(1)with_-&gt\uff1b4 let n=try int_of_string Sys.argv(2)with_-&gt\uff1b(1)with_-&gt\uff1b4 let n=try int_of_string Sys.argv.(2)with_-&gt\uff1b100000\u8bbea=Array.create_Float n let_=let pool=Task.setup_pool~num_domain\uff1a(num_domain-1)in Task.parallel_for pool~chunk_size\uff1a(n/num_domain)~start\uff1a0~Finish\uff1a(n-1)~Body\uff1a(Fun i-&gt\uff1bArray.set a i(\u968f\u673a.\u3002\u6d6e\u52a81000.))\uff1bTask.teardown_pool\u6c60\u3002\n\u5f53\u6211\u4eec\u539f\u672c\u671f\u671b\u5728\u591a\u4e2a\u5185\u6838\u4e2d\u770b\u5230\u52a0\u901f\u6267\u884c\u65f6\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u770b\u5230\u7684\u5374\u662f\u4ee3\u7801\u968f\u7740\u5185\u6838\u6570\u91cf\u7684\u589e\u52a0\u800c\u53d8\u6162\u3002\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u770b\u8d77\u6765\u4e0d\u5bf9\u52b2\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cRandom Bits\u7684\u5f00\u9500\u9ad8\u8fbe87.99%\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6ca1\u6709\u4e00\u4e2a\u539f\u56e0\u53ef\u4ee5\u5f52\u56e0\u4e8e\u8fd9\u4e9b\u7ba1\u7406\u8d39\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u975e\u5e38\u7279\u5b9a\u4e8e\u7a0b\u5e8f\u3002\u53ef\u80fd\u9700\u8981\u7a0d\u5fae\u4ed4\u7ec6\u68c0\u67e5\u4e00\u4e0b\u624d\u80fd\u627e\u51fa\u662f\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cRandom\u6a21\u5757\u5728\u6240\u6709\u57df\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001\uff0c\u5f53\u591a\u4e2a\u57df\u540c\u65f6\u5c1d\u8bd5\u8bbf\u95ee\u5b83\u65f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e89\u7528\u3002\n\u4e3a\u4e86\u514b\u670d\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4e3a\u6bcf\u4e2a\u57df\u4f7f\u7528\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u5171\u4eab\u72b6\u6001\u800c\u5f15\u8d77\u4e89\u7528\u3002\n\u6a21\u5757T=Domainslb\u3002\u4efb\u52a1let n=try int_of_string Sys.argv(2)with_-&gt\uff1b1000 let num_domain=try int_of_string Sys.argv.(1)with_-&gt\uff1b4 let arr=Array.create_Float n let_=letDomain=T.setup_pool~num_domain\uff1a(num_domain-1)in let state=Array.init num_domain(Fun_-&gt\uff1bT.parallel_for domain\u4e2d\u7684Random.State.make_self_init()~chunk_size\uff1a(n/num_domain)~start\uff1a0~Finish\uff1a(n-1)~body\uff1a(Fun i-&gt\uff1blet d=(Domain.self()\uff1a&gt\uff1bint)mod num_domain in\u3002\n..", "note_en": "This tutorial will help you get started with writing parallel programs inMulticore OCaml. All the code examples along with their corresponding dune fileare available in the  code/ directory. The tutorial is organised into thefollowing sections:\n   Multicore OCaml is an extension of OCaml with native support for Shared MemoryParallelism through  Domains and Concurrency through  Algebraic effects. It isslowly, but steadily being merged to trunk OCaml. Domains-only multicore isexpected to land first followed by Algebraic effects.\n The Multicore OCaml compiler comes with two variants of Garbage Collector,namely a concurrent minor collector (ConcMinor) and a stop-the-world parallelminor collector (ParMinor). Our experiments have shown us that ParMinorperforms better than ConcMinor in majority of the cases. ParMinor also does notneed any changes in the C API of the compiler, unlike ConcMinor which breaksthe C API. So, the consensus is to go forward with ParMinor during up-streaming of the Domains-only Multicore. ConcMinor is at OCaml version  4.06.1and ParMinor has been promoted to  4.10.0 and  4.11.0. More details on the GCdesign and evaluation are available in  this paper.\n   This tutorial takes you through ways in which one can profitably write parallelprograms in Multicore OCaml. The effect handlers story is not touched uponhere, for anyone interested, do check out this  tutorial and  examples.\n  While up-streaming of the multicore bits to trunk is still work in progress, onecan start using Multicore OCaml with the help of  multicore-opam. Installation instructions forMulticore OCaml 4.10.0 compiler and domainslib can be found  here.Other available compiler variants are  here.\n It will also be useful to install  utop on your Multicore switch. opam install utop should work out of the box.\n   let  square  n  = n  * n let x  =  5 let y  =  10 let _  =  let d  =  Domain.spawn ( fun  _ -&gt; square x)  in  let sy  = square y  in  let sx  =  Domain.join d  in  Printf.printf   &#34;x = %d, y = %d \\n &#34; sx sy\n  Domain.join d blocks until the domain  d runs to completion. If the domainreturns a result after its execution,  Domain.join d also returns that value.If it raises an uncaught exception, that is thrown. When the parent domainterminates, all other domains also terminate. To ensure that a domain runs tocompletion, we have to join the domain.\n Note that the square of x is computed in a new domain and that of y in theparent domain.\n   Make sure to use a multicore switch to build this and all other subsequentexamples we encounter in this tutorial.\n         These errors usually mean that the switch used to compile the code is not amulticore switch. Using a multicore switch should resolve them.\n  Domainslib is a parallel programming library for Multicore OCaml. It providesthe following APIs which enable easy ways to parallelise OCaml code with fewmodifications to sequential code:\n    In the Domains section, we saw how to run programs on multiple cores byspawning new domains. Often times we will find ourselves spawning and joiningnew domains numerous times in the same program, if we were to use that approachfor executing code in parallel. Creating new domains is an expensive operationwhich we should attempt to limit however much possible. Task pool lets us toexecute all parallel workloads in the same set of domains which are spawned atthe beginning of the program. Let us see how to get task pools working.\n Note: run  #require &#34;domainslib&#34; with the hash before this, if you are runningthis on  utop.\n  We have created a new task pool with three new domains. The parent domain isalso part of this pool, thus making it a pool of four domains. After the poolis setup, we can use this pool to execute all tasks we want to run in parallel.The  setup_pool function requires us to specify the number of new domains tobe spawned in the task pool. The ideal number of domains to initiate a taskpool with is equal to the number of cores available. Since the parent domainalso takes part in the pool, the  num_domains parameter should be one lessthan the number of available cores.\n Closing the task pool after execution of all tasks, though not strictlynecessary, is highly recommended. This can be done as\n  Now the pool is deactivated and no longer usable, so make sure to do this onlyafter all tasks are done.\n  parallel_for is a powerful primitive in the Task API that can scale well withvery little change in sequential code.\n  First, let us write the sequential version of a function which performs matrixmultiplication of two matrices and returns the result.\n let  multiply_matrix  a  b  =  let i_n  =  Array.length a  in  let j_n  =  Array.length b.( 0)  in  let k_n  =  Array.length b  let res  =  Array.make_matrix i_n j_n  0  in  for i  =  0  to i_n  -  1  do  for j  =  0  to j_n  -  1  do  for k  =  0  to k_n  -  1  do res.(i).(j)  &lt; - res.(i).(j)  + a.(i).(k)  * b.(k).(j)  done  done  done; res\n Arrays offer better efficiency compared with lists in the context of MulticoreOCaml. Although they are not generally favoured in functional programming, usingarrays for the sake of efficiency is a reasonable trade-off.\n  let  parallel_matrix_multiply  pool  a  b  =  let i_n  =  Array.length a  in  let j_n  =  Array.length b.( 0)  in  let k_n  =  Array.length b  in  let res  =  Array.make_matrix i_n j_n  0  in  Task.parallel_for pool  ~chunk_size:chunk_size  ~start: 0  ~finish:(i_n  -  1)  ~body:( fun  i -&gt;  for j  =  0  to j_n  -  1  do  for k  =  0  to k_n  -  1  do res.(i).(j)  &lt; - res.(i).(j)  + a.(i).(k)  * b.(k).(j)  done  done); res\n We can observe quite a few differences between the parallel and sequentialversions. The parallel version takes an additional parameter  pool, it isbecause, the  parallel_for executes the for loop on the domains present inthat task pool. While it is possible to initialise a task pool inside thefunction itself, it is always better to have a single task pool used across theentire program. As mentioned earlier, this is to minimise the cost involved inspawning a new domain. It is also possible to create a global task pool and useit across, but for the sake of being able to reason better about your code, itis recommended to use it as a function parameter.\n We shall examine the parameters of  parallel_for. It takes in  pool asdiscussed earlier,  start and  finish as the names suggset are the startingand ending values of the loop iterations,  body contains the actual loop bodyto be executed. One parameter that doesn&#39;t exist in the sequential version isthe  chunk_size. Chunk size determines the granularity of tasks when executing on multiple cores. The ideal  chunk_size depends on a combinationof factors:\n Nature of the loop: There are two things to consider pertaining to theloop while deciding on a  chunk_size to use, the number of iterations in theloop and amount of time each iteration takes. If the amount of time taken byevery iteration is roughly equal, then the  chunk_size could be number ofiterations divided by the number of cores. On the other hand, if the amount oftime taken is different for every iteration, the chunks should be smaller. Ifthe total number of iterations is a sizeable number, a  chunk_size like 32 or16 is safe to use, whearas if the number of iterations is low, like say 10, a chunk_size of 1 would perform best.\n Machine: Optimal chunk size varies across machines and it is recommendedto experiment with a range of values to find out what works best on yours.\n       We have achieved a speedup of 16 with the help of a  parallel_for. It is verymuch possible to achieve linear speedups when parallelisable workloads areavailable.\n Note that the performance of parallel code heavily depends on the machine, somemachine settings specific to Linux systems for obtaining optimal results aredescribed  here.\n   The  parallel_for has an implicit barrier, meaning other tasks if any,waiting to be executed after in the same pool will start only after all chunksin the  parallel_for are done. So, we need not worry about creating andinserting barriers explicitly between two  parallel_fors or some otheroperation after a  parallel_for. Consider this scenario: we have threematrices  m1,  m2 and  m3. We want to compute  (m1*m2) * m3 where  *indicates matrix multiplication. For the sake of simplicity, let us assume allthree are square matrices of the same size.\n let  parallel_matrix_multiply_3  pool  m1  m2  m3  =  let size  =  Array.length m1  in  let t  =  Array.make_matrix size size  0  in   (* stores m1*m2  *)  let res  =  Array.make_matrix size size  0  in  Task.parallel_for pool  ~chunk_size:(size /num_domains)  ~start: 0  ~finish:(size  -  1)  ~body:( fun  i -&gt;  for j  =  0  to size  -  1  do  for k  =  0  to size  -  1  do t.(i).(j)  &lt; - t.(i).(j)  + m1.(i).(k)  * m2.(k).(j)  done  done);  Task.parallel_for pool  ~chunk_size:(size /num_domains)  ~start: 0  ~finish:(size  -  1)  ~body:( fun  i -&gt;  for j  =  0  to size  -  1  do  for k  =  0  to size  -  1  do res.(i).(j)  &lt; - res.(i).(j)  + t.(i).(k)  * m3.(k).(j)  done  done); res\n In a hypothetical situation where  parallel_for did not have an implicitbarrier, in the example above, it is very likely that the computation of  reswould not be correct. Since, we already have an implicit barrier, we will getthe right computation.\n   A sequential for loop, like the one above, runs its iterations in the exactsame order, from  start to  finish. In case of  parallel_for the order ofexecution is arbitrary and varies between two runs of the exact same code. Ifthe iteration order is important for your code to work as desired, it isadvisable to use  parallel_for with some caution.\n  If there are any dependencies within the loop, such as current iterationdepends on the result of a previous iteration, odds are very high that thecorrectness of the code no longer holds if  parallel_for is used. Task API hasa primitive  parallel_scan which might come in handy in scenarios like this.\n  Parallel for lets easily parallelise iterative tasks. Async-Await offers moreflexibility to execute tasks in parallel which is especially useful inrecursive functions. We have earlier seen how to setup and tear down a taskpool. The Task API also has the facility to run specific tasks on a task pool.\n  We are going to calculate fibonacci numbers in parallel.First let us write a sequential function to calculate fibonacci numbers. Thisis a naive fibonacci function without tail-recursion.\n let  rec  fib  n  = if n  &lt;  2  then  1 else fib (n  -  1)  + fib (n  -  2)\n Observe that the two operations in recursive case fib (n - 1) and  fib (n - 2) do not have any mutual dependencies which makes it convenient for us tocompute them in parallel. Essentially, we can calculate  fib (n - 1) and  fib (n - 2) in parallel and add the results to get the answer.\n We can do this by spawning a new domain for performing calculation and joiningit to obtain the result. We have to be careful here to not spawn more domainsthan number of cores available.\n let  rec  fib_par  n  d  =  if d  &lt; =  1  then fib n  else  let a  = fib_par (n -1) (d -1)  in  let b  =  Domain.spawn ( fun  _ -&gt; fib_par (n -2) (d -1))  in a  +  Domain.join b\n We can as well use task pools to execute tasks asynchronously, which is less tedious and scales better.\n let  rec  fib_par  pool  n  =  if n  &lt; =  40  then fib n  else  let a  =  Task.async pool ( fun  _ -&gt; fib_par pool (n -1))  in  let b  =  Task.async pool ( fun  _ -&gt; fib_par pool (n -2))  in  Task.await pool a  +  Task.await pool b\n  if n &lt;= 40 then fib n -&gt; when the input is less than 40, we are running thesequential  fib function. When the input number is small enough, it is betteroff to perform the calculations sequentially. We have taken  40 as thethreshold here, some experimentation would help you to find a good enoughthreshold, below which the computation can be done sequentially.\n Task.async executes the task in the pool asynchronously and it returnsa promise, a computation that is not yet complete. After the execution runsto completion, its result will be stored in the promise.\n Task.await waits for the promise to complete its execution and once itis done, the result of the task is returned. In case the task raises anuncaught exception,  await also raises the same exception.\n   Channels act as medium to communicate data between domains. They can be sharedbetween multiple sending and recieving domains. Channels in Multicore OCamlcome in two flavours:\n Bounded: buffered channels with a fixed size. A channel with buffer size0 corresponds to a synchronised channel, buffer size 1 gives the  MVarstructure. Bounded channels can be created with any buffer size.\n Unbounded: unbounded channels have no limit on the number of objects theycan hold, they are only constrained by memory availability.\n open  Domainslib let c  =  Chan.make_bounded  0 let _  =  let send  =  Domain.spawn( fun  _ -&gt;  Chan.send c   &#34;hello &#34;)  in  let msg  =  Chan.recv c  in  Domain.join send;  Printf.printf   &#34;Message: %s \\n &#34; msg\n In the above example, we have a bounded channel  c of size 0. Any  send tothe channel is blocked until a corresponding  recv is encounterd. So, if weremove the  recv in this example, the program would be blocking indefinitely.\n open  Domainslib let c  =  Chan.make_bounded  0 let _  =  let send  =  Domain.spawn( fun  _ -&gt;  Chan.send c   &#34;hello &#34;)  in  Domain.join send;\n The above example would be essentially blocking indefinitely because the  senddoes not have a corresponding recieve. If we instead create a bounded channelwith buffer size n, it can store up to [n] objects in the channel without acorresponding recieve, exceeding which the sending would block. We can try itwith the same example as above just by changing the buffer size to 1.\n open  Domainslib let c  =  Chan.make_bounded  1 let _  =  let send  =  Domain.spawn( fun  _ -&gt;  Chan.send c   &#34;hello &#34;)  in  Domain.join send;\n  If you do not want to block in send or recv,  send_poll and  recv_poll mightcome in handy. They return a boolean value, if the operation was successful weget a  true, otherwise a  false.\n open  Domainslib let c  =  Chan.make_bounded  0 let _  =  let send  =  Domain.spawn( fun  _ -&gt;  let b  =  Chan.send_poll c   &#34;hello &#34;  in  Printf.printf   &#34;%B \\n &#34; b)  in  Domain.join send;\n Since the buffer size is 0 and the channel cannot hold any object, this programprints a false,\n  open  Domainslib let num_domains  =  try int_of_string  Sys.argv.( 1)  with   _ -&gt;  4 let c  =  Chan.make_bounded num_domains let  send  c  =  Printf.printf   &#34;Sending from: %d \\n &#34; ( Domain.self  () : &gt;  int);  Chan.send c   &#34;howdy! &#34; let  recv  c  =  Printf.printf   &#34;Receiving at: %d \\n &#34; ( Domain.self  () : &gt;  int);  Chan.recv c  |&gt; ignore let _  =  let senders  =  Array.init num_domains ( fun  _ -&gt;  Domain.spawn( fun  _ -&gt; send c ))  in  let recievers  =  Array.init num_domains ( fun  _ -&gt;  Domain.spawn( fun  _ -&gt; recv c))  in  Array.iter  Domain.join senders;  Array.iter  Domain.join recievers\n   Now that we have some idea about how channels work, let us consider a morerealistic example. We will see how to write a generic task distributor thatexecutes tasks on multiple domains.\n module  C  =  Domainslib. Chan let num_domains  =  try int_of_string  Sys.argv.( 1)  with   _ -&gt;  4 let n  =  try int_of_string  Sys.argv.( 2)  with   _ -&gt;  100 type  &#39;a message =  Task  of  &#39;a |  Quit let c  =  C.make_unbounded  () let  create_work  tasks  =  Array.iter ( fun  t -&gt;  C.send c ( Task t)) tasks;  for _  =  1  to num_domains  do  C.send c  Quit  done let  rec  worker  f  ()  =  match  C.recv c  with   |  Task  a -&gt; f a; worker f  ()  |  Quit -&gt;  () let _  =  let tasks  =  Array.init n ( fun  i -&gt; i)  in create_work tasks ;  let  factorial  n  =  let  rec  aux  n  acc  =  if (n  &gt;  0)  then aux (n -1) (acc *n)  else acc  in aux n  1  in  let results  =  Array.make n  0  in  let  update  r  i  = r.(i)  &lt; - factorial i  in  let domains  =  Array.init (num_domains  -  1) ( fun  _ -&gt;  Domain.spawn(worker (update results)))  in worker (update results)  ();  Array.iter  Domain.join domains;  Array.iter ( Printf.printf   &#34;%d  &#34;) results\n We have created an unbounded channel  c which will act as a store for all thetasks. We&#39;ll pay attention to two functions here:  create_work and  worker.\n create_work takes an array of tasks and pushes all elements of tasks to thechannel  c. The  worker function recieves tasks from the channel and executesa function f with the recieved task as parameter. It keeps recursing until itencounters a Quit message, which is why we send  Quit messages to the channel,indicating that the worker can terminate.\n We can use this template to run any task on multiple cores, by running the worker function on all the domains. This example runs a naive factorialfunction. The granularity of a task could be tweaked as well, by changing it inthe worker function, for instance, worker can run for a range of tasks insteadof single one.\n  While writing parallel programs in Multicore OCaml, it is quite common toencounter overheads which might deteriorate our code&#39;s performance. Thissection describes ways to discover those overheads and fix them. Linux  perfand  eventlog in the Multicore runtime are particularly useful tools forperformance debugging. In this section, we will be using them for performancedebugging. Let&#39;s do that with the help of an example.\n   Array initialisation using standard library&#39;s  Array.init is sequential.Parallel workloads in a program would scale according to the number of coresused, whearas the initialisation takes the same amount of time in all cases.This might become a bottleneck for parallel workloads.\n For float arrays, we have  Array.create_float which creates a fresh floatarray. We can use this to allocate an array and do the initialisation inparallel. Let us do the initialisation of a float array with random numbers inparallel.\n  This is a naive implementation, which will initialise all elements of the arraywith a Random number.\n open  Domainslib let num_domains  =  try int_of_string  Sys.argv.( 1)  with   _ -&gt;  4 let n  =  try int_of_string  Sys.argv.( 2)  with   _ -&gt;  100000 let a  =  Array.create_float n let _  =  let pool  =  Task.setup_pool  ~num_domains:(num_domains  -  1)  in  Task.parallel_for pool  ~chunk_size:(n /num_domains)  ~start: 0  ~finish:(n  -  1)  ~body:( fun  i -&gt;  Array.set a i ( Random. float  1000.));  Task.teardown_pool pool\n   When we had expected to see speedup executing in multiple cores, what we seehere instead is the code slows down as the number of cores increase. There issomething wrong with the code which doesn&#39;t meet the eye.\n     We can see the overhead at Random bits is a whooping 87.99%. Typically there isno one cause that we can attribute to such overheads, since they are veryspecific to the program. It might need a little careful inspection to find outwhat is causing them. In this case, the Random module is sharing same stateamongst all the domains, which is causing contention when multiple domains aretrying to access it at a time.\n To overcome that, we shall use a different state for every domain so that thereis no contention due to shared state.\n module  T  =  Domainslib. Task let n  =  try int_of_string  Sys.argv.( 2)  with   _ -&gt;  1000 let num_domains  =  try int_of_string  Sys.argv.( 1)  with   _ -&gt;  4 let arr  =  Array.create_float n let _  =  let domains  =  T.setup_pool  ~num_domains:(num_domains  -  1)  in  let states  =  Array.init num_domains ( fun  _ -&gt;  Random.State.make_self_init ())  in  T.parallel_for domains  ~chunk_size:(n /num_domains)  ~start: 0  ~finish:(n -1)  ~body:( fun  i -&gt;  let d  = ( Domain.self () : &gt;  int)  mod num_domains  in  \n......", "posttime": "2020-07-06 03:23:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,ocaml,\u4efb\u52a1", "title": "\u591a\u6838OCaml\u4e2d\u7684\u5e76\u884c\u7f16\u7a0b", "title_en": "Parallel Programming in Multicore OCaml", "transed": 1, "url": "https://github.com/prismlab/parallel-programming-in-multicore-ocaml/tree/draft", "via": "", "real_tags": ["\u7f16\u7a0b", "ocaml", "\u4efb\u52a1"]}]
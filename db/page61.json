[{"category": "", "categoryclass": "", "imagename": "13d6ddbe80bf24c03aab49ad92e70194.jpg", "infoid": 1068533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f - \u51ef\u6d1b\u683c\uff0c\u6c49\u68ee\uff0c\u6258\u5fb7\uff0c\u7801\u5934\uff06amp\u7684\u5f8b\u5e08;\u5f17\u96f7\u5fb7\u91cc\u514b\u662f\u4e00\u5bb6\u9876\u7ea7\u516c\u53f8\u5f8b\u5e08\u4e8b\u52a1\u6240\uff0c\u5468\u4e00\u90fd\u5728\u52aa\u529b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0e\u8054\u90a6\u6cd5\u5b98\u5173\u4e8e\u4e0e\u5ba2\u6237\u6709\u5173\u7684\u53cd\u6258\u62c9\u65af\u6848\u4ef6\u7684\u88c1\u51b3\uff0c\u4ed6\u4eec\u4e89\u53d6\u4e86\u8054\u90a6\u6cd5\u5b98\uff1aFacebook\u3002\n \u4e0a\u4e2a\u6708\uff0cCravath\uff0cSwaine\uff06amp\u7684\u5f8b\u5e08;\u6469\u5c14\u662f\u8be5\u56fd\u7cbe\u82f1\u5f8b\u5e08\u4e8b\u52a1\u6240\u4e4b\u4e00\u7684\u6469\u5c14\uff0c\u5efa\u8bae\u4e9a\u9a6c\u900a\u6536\u8d2dMGM\uff0c\u8fd9\u9762\u4e34\u7740\u76d1\u7ba1\u673a\u6784\u7684\u53cd\u6258\u62c9\u65af\u5ba1\u67e5\u3002\n \u548c\u7a81\u51fa\u5f8b\u5e08\u4e8b\u52a1\u6240Gibson\uff0cDunn\uff06amp\u7684\u8bc9\u8bbc\u4eba\u7684\u677f\u5ca9; Crutcher\u5728\u53f2\u8bd7\u822c\u7684\u6e38\u620f\u5e26\u6765\u7684\u53cd\u6258\u62c9\u65af\u8bc9\u8bbc\u4e2d\u4e3aApple\u63d0\u4f9b\u4e86\u95ed\u5408\u4e89\u8bba\u3002\n \u9762\u5411\u5927\u578b\u6280\u672f\u7684\u6301\u7eed\u6cd5\u5f8b\u548c\u76d1\u7ba1\u5ba1\u67e5\u5bfc\u81f4\u4e86\u4e00\u7cfb\u5217\u8bc9\u8bbc\uff0c\u8c03\u67e5\u548c\u62df\u8bae\u7acb\u6cd5\uff0c\u65e8\u5728\u7ed3\u675f\u4e9a\u9a6c\u900a\uff0c\u82f9\u679c\uff0cFacebook\u548c\u8c37\u6b4c\u7684\u4e3b\u5bfc\u5730\u4f4d\u3002\u8fd9\u4e9b\u52aa\u529b\u662f\u5426\u53ef\u80fd\u9700\u8981\u6570\u5e74\u6765\u7406\u89e3\uff0c\u4f46\u5df2\u7ecf\u6709\u4e00\u4e2a\u660e\u786e\u7684\u8d62\u5bb6\uff1a\u56fd\u5bb6\u7684\u6cd5\u5f8b\u884c\u4e1a\u3002\n \u7531\u4e8e\u653f\u5e9c\u572820\u4e16\u7eaa90\u5e74\u4ee3\u540e\u671f\u88ab\u8d77\u8bc9\u5fae\u8f6f\u62c6\u9664\u5fae\u8f6f\u4ee5\u6765\uff0c\u5bf9\u77e5\u6089\u4f01\u4e1a\u7ade\u4e89\u6cd5\u7684INS\u548c\u51fa\u51fa\u56fd\u7684\u4eba\u6709\u66f4\u5927\u7684\u9700\u6c42\u3002\u5728\u8054\u90a6\u6cd5\u5b98\u5468\u4e00\u5411Facebook\u7684\u53cd\u5bf9Facebook\u9a73\u56de\u56fd\u5bb6\u53cd\u5bf9Facebook\u5e76\u8868\u793a\uff0c\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u5bf9\u793e\u4f1a\u7f51\u7edc\u8fdb\u884c\u6295\u8bc9\u540e\uff0c\u8fd9\u53ea\u662f\u80af\u5b9a\u7684\u589e\u52a0\u3002\n \u8be5\u88c1\u51b3\u5c06Facebook\u6848\u4ef6\u653e\u56deLina Khan\u7684\u624b\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u6fc0\u70c8\u7684\u79d1\u6280\u884c\u4e1a\u7684\u6279\u8bc4\u8005\uff0c\u6700\u8fd1\u6210\u4e3aF.T.C\u7684\u4e3b\u5e2d\uff0c\u8be5\u673a\u6784\u8c03\u63a7\u53cd\u5784\u65ad\u3002\u4e0a\u5468\uff0c\u65e8\u5728\u524a\u5f31\u516c\u53f8\u6293\u5730\u529b\u7684\u8d26\u5355\u5728\u8be5\u5bb6\u4e2d\u4e5f\u5728\u623f\u5b50\u91cc\u8fdb\u884c\u4e86\u8fdb\u5c55\u3002\n \u4eba\u624d\u7684\u55a7\u56a3\u5ef6\u4f38\u5230\u6e38\u8bf4\u4f01\u4e1a\u548c\u7ecf\u6d4e\u5b66\u5bb6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5e2e\u52a9\u516c\u53f8\u5236\u5b9a\u53cd\u9006\u5e8a\uff0c\u5e76\u4e3a\u516c\u53f8\u7684\u5e02\u573a\u529b\u91cf\u63d0\u4f9b\u4e13\u5bb6\u8bc1\u8bcd\u3002\u4f46\u5b83\u5728\u6cd5\u5f8b\u804c\u4e1a\u4e2d\u7279\u522b\u4e25\u91cd\u3002 \n\u79d1\u6280\u5de8\u5934\u5df2\u7ecf\u6df9\u6ca1\u4e86\u6cd5\u5ead\u4e0a\uff0c\u8f83\u5927\u7684\u5b97\u6559\u5f8b\u5e08\u7684\u961f\u4f0d\u624d\u80fd\u6309\u4e0b\u4ed6\u4eec\u7684\u6848\u4f8b\u3002\u8c37\u6b4c\u9762\u4e34\u591a\u6b21\u53cd\u5784\u65ad\u8bc9\u8bbc\uff0c\u53f8\u6cd5\u90e8\u5e26\u6765\u4e86\u4e00\u4e2a\uff0c\u4e5f\u662f\u56fd\u5bb6\u5f8b\u5e08\u5c06\u519b\u7684\u4e24\u79cd\u3002\u7531\u4e8e\u8fd9\u4e9b\u8bc9\u8bbc\u63d0\u4ea4\uff0c\u516d\u5bb6\u5f8b\u5e08\u4e8b\u52a1\u6240\u768416\u540d\u5f8b\u5e08\u5728\u6cd5\u9662\u51fa\u73b0\u5728\u516c\u5171\u8bb0\u5f55\u7684\u60c5\u51b5\u4e0b\u634d\u536b\u516c\u53f8\u3002\n \u603b\u5171\u670921\u5bb6\u5f8b\u5e08\u4e8b\u52a1\u6240\u768451\u540d\u5f8b\u5e08\u5728\u6cd5\u5ead\u4e0a\u51fa\u73b0\u5728\u8c37\u6b4c\u6848\u4ef6\u4e2d\uff0c\u5305\u62ec\u4ee3\u8868\u5fb7\u514b\u8428\u65af\u5dde\u548c\u8c37\u6b4c\u7ade\u4e89\u5bf9\u624b\u7b49\u56fd\u5bb6\u7684\u5f8b\u5e08\u3002 Facebook\u9762\u5411\u81ea\u5df1\u7684\u53cd\u6258\u62c9\u65af\u6848\uff0c\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8058\u8bf7\u4e86\u4e00\u652f\u5f8b\u5e08\u56e2\u961f\u3002\n \u56e0\u6b64\uff0c\u53cd\u5784\u65ad\u5de5\u4f5c - \u4e00\u65e6\u6cd5\u5f8b\u4e16\u754c\u7684\u4e00\u4e2a\u76f8\u5bf9\u56f0\u5026\u7684\u5730\u533a - \u73b0\u5728\u4e3a\u5927\u516c\u53f8\u63d0\u4f9b\u4e86\u610f\u5916\u6536\u83b7\u3002\u5927\u578b\u516c\u53f8\u7684\u9876\u7ea7\u4f19\u4f34\u7ecf\u5e38\u62e8\u62531,000\u81f32000\u7f8e\u5143\u7684\u4e00\u4e2a\u5c0f\u65f6\uff0c\u4ee5\u53ca\u5e2e\u52a9\u4ed6\u4eec\u6bcf\u5c0f\u65f6\u6536\u53d6\u6570\u767e\u7f8e\u5143\u7684\u5e74\u8f7b\u4f19\u4f34\u7684\u5206\u6570\u3002\n \u5de8\u578b\u79d1\u6280\u516c\u53f8\u7684\u6210\u672c\u5f88\u5c0f\u3002\u4f46\u5b83\u6269\u5927\u4e86\u76d1\u7ba1\u673a\u6784\u4e0e\u4ed6\u4eec\u8b66\u65b9\u516c\u53f8\u4e4b\u95f4\u7684\u8d44\u6e90\u5206\u88c2\uff0c\u4f7f\u653f\u5e9c\u66f4\u52a0\u4ee4\u4eba\u5174\u594b\u5730\u62db\u52df\u5e76\u4fdd\u6301\u4eba\u624d\u63a5\u53d7\u8be5\u884c\u4e1a\u3002\u5b83\u8fd8\u4e3a\u534e\u76db\u987f\u7684\u65cb\u8f6c\u95e8\u63d0\u51fa\u4e86\u65b0\u7684\u62c5\u5fe7\uff0c\u56e0\u4e3a\u79d1\u6280\u516c\u53f8\u6700\u8fd1\u7528\u4e8e\u653f\u5e9c\u7684\u8bb8\u591a\u5f8b\u5e08\u3002\n 2019\u5e74\uff0c\u5f53\u53f8\u6cd5\u90e8\u95e8\u8fdb\u5165\u8c37\u6b4c\u548c\u5176\u4ed6\u79d1\u6280\u5de8\u5934\u65f6\uff0c\u5b98\u5458\u4eec\u63d0\u51fa\u4e86\u5927\u7ea610\u4e2a\u5f8b\u5e08\u4e8b\u52a1\u6240\u7684\u5019\u9009\u4eba\u540d\u5355\uff0c\u6839\u636e\u4e24\u4e2a\u4eba\u7684\u641c\u7d22\u77e5\u8bc6\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u8bf4\u4e00\u4e2a\u63a5\u4e00\u4e2a\uff0c\u6f5c\u5728\u7684\u5019\u9009\u4eba\u5fc5\u987b\u88ab\u5212\u6389\u6e05\u5355\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u4e3a\u5927\u578b\u6280\u672f\u5ba2\u6237\u5de5\u4f5c\uff0c\u7559\u4e0b\u4e86\u4e00\u4e9b\u9009\u62e9\u3002\n \u6700\u8fd1\uff0c\u5229\u76ca\u51b2\u7a81\u4f7f\u62dc\u767b\u884c\u653f\u5f53\u5c40\u5bf9\u53f8\u6cd5\u90e8\u53f8\u6cd5\u90e8\u7684\u8d1f\u8d23\u4eba\u8fdb\u884c\u4e86\u590d\u6742\u3002\u597d\u51e0\u6b21\uff0c\u7531\u4e8e\u8fd9\u4e2a\u4eba\u4e0e\u5927\u578b\u6280\u672f\u7684\u5173\u7cfb\uff0c\u6279\u8bc4\u7684\u884c\u4e1a\u6279\u8bc4\u4e86\u6f5c\u5728\u7684\u5019\u9009\u4eba\u3002\n \u201c\u8fd9\u4e9b\u516c\u53f8\u62e5\u6709\u96c7\u7528\u6700\u4f73\u548c\u6700\u806a\u660e\u7684\u8d27\u5e01\u8d44\u6e90\uff0c\u201d\u8d3e\u62c9\u514b\u2022\u5965\u5df4\u9a6c\u603b\u7edf\u53f8\u6cd5\u90e8\u53f8\u6cd5\u90e8\u524d\u7684\u53cd\u5784\u65ad\u8d1f\u8d23\u4eba\u8bf4\u3002 \u201c\u4f46\u5b83\u786e\u5b9e\u5f3a\u8c03\u4e86\u653f\u5e9c\u53ef\u4ee5\u5728\u8fd9\u4e9b\u95ee\u9898\u4e0a\u6295\u5165\u7684\u8d44\u6e90\u5dee\u5f02\u4ee5\u53ca\u8fd9\u4e9b\u516c\u53f8\u7684\u51e0\u4e4e\u65e0\u9650\u7684\u8d44\u6e90\u3002\u201d \n\u4e3d\u8d1d\u5361\u5c60\u6740\u662f\u7b2c2\u53f7\u7684\u6c11\u4e3b\u4e13\u5458\uff0c\u8bf4\u53cd\u6258\u62c9\u65af\u6848\u4ef6\u662f\u6700\u6602\u8d35\u7684\u3002\u4ee3\u8868\u8be5\u673a\u6784\u53d1\u8a00\u7684\u4e00\u4e2a\u4e13\u5bb6\u8bc1\u4eba\u7684\u6210\u672c\u8d85\u51fa\u4e86\u8be5\u673a\u6784\u5728\u4efb\u4f55\u4e00\u5e74\u4e2d\u8ffd\u6c42\u7684\u6240\u6709\u5176\u4ed6\u6848\u4ef6\u7684\u89c1\u8bc1\u8d39\u7528\u3002\n \u201c\u5bf9\u53cd\u5784\u65ad\u6267\u6cd5\u7684\u9700\u6c42\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u6025\u5267\u4e0a\u5347\uff0c\u5728\u53bb\u5e74\u7684\u60c5\u51b5\u4e0b\u771f\u7684\u98d9\u5347\uff0c\u201d\u65af\u6d1b\u514b\u5973\u58eb\u8bf4\u3002 \u201c\u5728\u62df\u8bae\u7684\u517c\u5e76\u6848\u4ef6\u548c\u5ba1\u67e5\u62df\u8bae\u7684\u517c\u5e76\u6848\u4ef6\u548c\u5ba1\u67e5\u6d77\u5578\u7684\u6210\u672c\u5de8\u5927\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u5c0f\u673a\u6784\u3002\u201d\n \u4e9a\u9a6c\u900a\uff0cFacebook\u548c\u8c37\u6b4c\u62d2\u7edd\u53d1\u8868\u8bc4\u8bba\u3002 Apple\u548c\u5f8b\u5e08\u4e8b\u52a1\u6240\u6ca1\u6709\u56de\u5e94\u8bc4\u8bba\u8981\u6c42\u3002\n \u5168\u7403\u6700\u53e4\u8001\u7684\u5168\u7403\u5f8b\u5e08\u4e8b\u52a1\u6240\u7684\u65b0\u9c9c\u573a\u5730\u8868\u73b0\u51fa\u53cd\u5784\u65ad\u6cd5\u5f8b\u5de5\u4f5c\u7684\u7e41\u8363\u65f6\u95f4\u7684\u8303\u56f4\u3002\n 2018\u5e74\uff0c\u8be5\u516c\u53f8\u8058\u8bf7\u4e86\u53f8\u6cd5\u90e8\u7684\u524d\u7275\u5934\u8bc9\u8bbc\u8005Eric Mahr\uff0c\u6269\u5927\u4e86\u534e\u76db\u987f\u516c\u53f8\u7684\u53cd\u6258\u5239\u5b9e\u8df5\u3002\u9a6c\u8d6b\u5c14\u5148\u751f\u968f\u540e\u5e26\u6765\u4e86\u8bb8\u591a\u524d\u540c\u4e8b\uff0c\u5305\u62ec\u6731\u8389\u00b7\u57c3\u5c14\u9ed8\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5ba1\u5224\u5f8b\u5e08\u3002\u8be5\u516c\u53f8\u73b0\u5728\u6709\u5341\u51e0\u4e2a\u5408\u4f5c\u4f19\u4f34\uff0c\u5177\u6709\u53cd\u5784\u65ad\u4e13\u4e1a\u77e5\u8bc6\u3002 Elmer\u5973\u58eb\u548cMahr\u5148\u751f\u5728\u5fb7\u514b\u8428\u65af\u5dde\u53f8\u6cd5\u90e8\u957f\u9886\u5148\u7684\u8c37\u6b4c\u5bf9\u8c37\u6b4c\u7684\u8fa9\u62a4\u65b9\u5411\u8fdb\u884c\u4e86\u9632\u8303\u3002\n \u8be5\u516c\u53f8\u8fd8\u6269\u5927\u4e86\u897f\u65b9\uff0c\u66f4\u63a5\u8fd1\u5176\u5b9d\u8d35\u7684\u79d1\u6280\u5ba2\u6237\u3002\u8be5\u516c\u53f8\u4f4d\u4e8e\u82f1\u56fd\uff0c\u6d3e\u51fa\u5176\u9886\u5bfc\u6b27\u6d32\u53cd\u5784\u65ad\u4f19\u4f34Alan Ryan\uff0c\u5728\u7845\u8c37\u7684\u6885\u6d1b\u516c\u56ed\u5f00\u8bbe\u529e\u4e8b\u5904\u3002\u81ea\u4ece\u5176\u4ed6\u516c\u53f8\u589e\u52a0\u4e86\u516d\u4e2a\u5408\u4f5c\u4f19\u200b\u200b\u4f34\u4ee5\u6765\u3002\u5171\u670925\u4eba\u5728\u516c\u53f8\u529e\u516c\u5ba4\u5de5\u4f5c\uff0c\u5728\u6c99\u5c71\u8def\u4e0a\uff0c\u662f\u5168\u56fd\u6700\u6602\u8d35\u7684\u529e\u516c\u5ba4\u623f\u5730\u4ea7\u548c\u5192\u9669\u7684\u8d44\u672c\u516c\u53f8\uff0c\u5305\u62ecKleiner Perkins\u3002\n  \u660e\u5e74\uff0c\u8be5\u516c\u53f8\u5c06\u5728\u96f7\u5fb7\u4f0d\u5fb7\u5e02\u7684\u4e00\u5bb6\u65b0\u529e\u516c\u5ba4\u7efc\u5408\u4f53\u4e2d\u8fdb\u5165\u4e24\u5c42\u697c\uff0c\u4ee5\u6ee1\u8db3\u66f4\u591a\u7684\u5de5\u4f5c\u4eba\u5458\uff0c\u5176\u4e2d\u5305\u62ec\u56db\u4e2a\u65b0\u7684\u53cd\u6258\u62c9\u65af\u4f19\u4f34\u745e\u5b89\u5148\u751f\u6b63\u5728\u5bfb\u6c42\u96c7\u7528\u3002 \n\u6ce2\u7279\u5170\uff0c\u897f\u96c5\u56fe\u548c\u6e29\u54e5\u534e\u7684\u70ed\u91cf\u6709\u591a\u5947\u602a\uff1f\u5173\u95ed\u56fe\u8868\uff1a\u201c\u6211\u610f\u8bc6\u5230\u6211\u5f53\u7136\u662f\u95ee\u9898\u7684\u4e00\u90e8\u5206\uff0c\u8ba4\u4e3a\u8fd9\u662f\u540e\u4ee3\u7684\u95ee\u9898\u3002\u5f53\u6211\u52a8\u529b\u51fa\u95e8\u65f6\uff0c\u5f53\u6211\u642c\u5230\u5730\u4e0b\u5ba4\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u73b0\u5728\u662f\u672a\u6765\u3002\u201c Puck45\uff0c\u897f\u96c5\u56fe\u3002\n \u74e6\u783e\uff0c\u72ed\u7a84\u7684\u7a7a\u6d1e\uff0c\u98ce\u66b4\uff1a\u8fc8\u963f\u5bc6\u7684\u5371\u9669\u6551\u63f4\u5de5\u4f5c\uff1a\u201c\u5b83\u4e0d\u53ef\u80fd\u627e\u5230\u6709\u610f\u4e49\u7684\u4e1c\u897f\uff0c\u9664\u4e86\u6211\u80fd\u611f\u53d7\u5230\u53d7\u8fd9\u79cd\u7a81\u7136\u5f71\u54cd\u7684\u6bcf\u4e2a\u4eba\u7684\u65e0\u6cd5\u5f62\u5bb9\u7684\u60b2\u4f24\uff0c\u4e0d\u53ef\u9976\u6055\u7684\u60b2\u5267\u3002\u201d\u58a8\u897f\u54e5\u6e7e\u7684Becca\u3002\n \u8fd9\u662f\u5f8b\u5e08\u7684\u7e41\u8363\u65f6\u671f\uff0c\u56e0\u4e3a\u534e\u76db\u987f\u8ffd\u6c42\u5927\u578b\u6280\u672f\uff1a\u201c\u9700\u8981\u6cd5\u5f8b\u89c4\u8303\u8be5\u884c\u4e1a\u4ee5\u53ca\u771f\u6b63\u7684\u5904\u7f5a\u3002\u8fd8\u9700\u8981\u6210\u4e3a\u4e00\u79cd\u660e\u786e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u9632\u6b62\u8eb2\u85cf\u4e2d\u7684\u9519\u8bef\u4fe1\u606f\u7684\u53d1\u4ef6\u4eba\u3002\u201c\u5927\u536b\uff0c\u54c8\u91cc\u65af\u5821\u3002\n \u201c\u6211\u4eec\u53ef\u4ee5\u5728\u660e\u5e74\u7ffb\u500d\u5417\uff1f\u5e0c\u671b\u5982\u6b64\u3002\u201d\u745e\u5b89\u5148\u751f\u8bf4\u3002 \u201c\u6211\u4eec\u8ba1\u5212\u6210\u957f\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\u6211\u4eec\u53ef\u4ee5\u5230\u8fbe\u7684\u901f\u5ea6\u3002\u201c\n \u79d1\u6280\u516c\u53f8\u4e5f\u5728\u5bb6\u91cc\u5e26\u6765\u53cd\u5784\u65ad\u4e13\u5bb6\u3002\u4e9a\u9a6c\u900a\uff0cFacebook\u548c\u8c37\u6b4c\u6bcf\u4e2a\u4eba\u90fd\u6709\u51e0\u5341\u4e2a\u5185\u90e8\u5f8b\u5e08\u3002 2020\u5e741\u6708\uff0c\u4e9a\u9a6c\u900a\u96c7\u4e86\u4e00\u4e2a\u524dF.T.C.\u5f8b\u5e08\uff0c\u827e\u7c73Posner\u3002 2020\u5e744\u6708\uff0cFacebook\u8058\u8bf7\u4e86\u4f17\u591a\u653f\u5e9c\u5b98\u5458\uff0c\u4ece\u7ade\u4e89\u5c40\u7684\u53e6\u4e00\u4e2a\u957f\u671f\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u5f8b\u5e08\u5f00\u59cb\u3002\n \u201c\u7f62\u5de5\u662f\u4ec0\u4e48\u4eba\u6570\u76f4\u63a5\u4e3a\u4ee3\u7406\u5546\u76f4\u63a5\u4e3a\u6280\u672f\u516c\u53f8\u5de5\u4f5c\u7684\u4eba\u6570\uff0c\u201dF.T.C\u7684\u524d\u4e3b\u5e2d\u5a01\u5ec9\u79d1\u74e6\u79d1\u65af\u8bf4\u3002 \u201c\u53cd\u6620\u4e86\u771f\u6b63\u7684\u53d8\u5316\u3002\u201d\n \u4e3a\u79d1\u6280\u5ba2\u6237\u6216\u79d1\u6280\u516c\u53f8\u672c\u8eab\u5de5\u4f5c\u7684\u673a\u4f1a\u5438\u5f15\u4e86\u7f8e\u56fd\u5f8b\u5e08\u534f\u4f1a\u6700\u8fd1\u4e3e\u884c\u7684\u6a21\u62df\u8bd5\u9a8c\u4e2d\u7684\u4e00\u4f4d\u5927\u89c2\u4f17\u3002\u8be5\u7814\u8ba8\u4f1a\u4ee5\u4e00\u4e2a\u540d\u4e3aKnowsmore\u7684\u865a\u6784\u5927\u578b\u641c\u7d22\u5f15\u64ce\u4e3a\u4e2d\u5fc3\uff0c\u8be5\u53d1\u52a8\u673a\u7531\u4e00\u4e2a\u60f3\u8981\u6536\u53d6\u66f4\u591a\u9690\u79c1\u529f\u80fd\u7684\u8f83\u5c0f\u7684\u641c\u7d22\u5f15\u64ce\u8d77\u8bc9\u3002\u8be5\u4e8b\u4ef6\u662fA.B.A\u6240\u63d0\u51fa\u7684\u6700\u4f73\u7814\u8ba8\u4f1a\u4e4b\u4e00\u3002\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\uff0cDavid Reichenberg\u8868\u793a\uff0c\u8463\u4e8b\u4f1a\u8bae\u5458\u548c\u534f\u4f1a\u8bc9\u8bbc\u59d4\u5458\u4f1a\u8054\u5408\u4e3b\u5e2d\u3002 \n\u201c\u6bcf\u5e74\u90fd\u6709\u66f4\u591a\u548c\u66f4\u591a\u7684\u5174\u8da3\uff0c\u4ee5\u4e86\u89e3\u6709\u5173\u6280\u672f\u548c\u53cd\u5784\u65ad\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u201d\u4ed6\u8bf4\u3002\n \u8fd8\u6709\u66f4\u591a\u7684\u5f8b\u5e08\u81f4\u529b\u4e8e\u627f\u62c5\u5927\u516c\u53f8\u7684\u5f8b\u5e08\uff0c\u6216\u4ee3\u8868\u653f\u5e9c\u672c\u8eab\u3002\u53bb\u5e74\u4e24\u5bb6\u5f8b\u5e08\u4e8b\u52a1\u6240\u8fbe\u6210\u534f\u8bae\uff0c\u4ee3\u8868\u5176\u5bf9\u8c37\u6b4c\u7684\u8bc9\u8bbc\u4e2d\u7684\u5fb7\u514b\u8428\u65af\u5dde\u3002\u4e0a\u4e2a\u6708\uff0c\u53e6\u4e00\u5bb6\u516c\u53f8\u4e0e\u54e5\u4f26\u6bd4\u4e9a\u5730\u533a\u7684\u5f8b\u5e08\u5c06\u519b\u52a0\u5165\u82cf\u4f0a\u4e9a\u4e9a\u9a6c\u900a\u3002\n \u4f46\u662f\u8bb8\u591a\u6700\u5927\u548c\u6700\u8d1f\u76db\u540d\u7684\u516c\u53f8\u6b63\u5728\u4e3a\u7845\u8c37\u5de8\u4eba\u5de5\u4f5c\u3002\n Jonathan Kanter\u662f\u4e00\u4f4d\u957f\u671f\u7684\u53cd\u5784\u65ad\u5f8b\u5e08\uff0c\u88ab\u4f20\u95fb\u79f0\u4e3a\u53ef\u80fd\u88ab\u63d0\u540d\u4eba\uff0c\u4ee5\u5f15\u9886\u53f8\u6cd5\u90e8\u7684\u53cd\u6258\u62c9\u65af\u5212\u5206\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5728\u8c37\u6b4c\uff0cFacebook\uff0c\u4e9a\u9a6c\u900a\u548c\u82f9\u679c\u516c\u53f8\u7684\u7ade\u4e89\u5bf9\u624b\u4e0a\u5efa\u7acb\u4e86\u4ed6\u7684\u804c\u4e1a\u751f\u6daf\u3002\u4ed6\u7684\u5ba2\u6237\u540d\u5355\u5305\u62ecMicrosoft\u548cNews Corporation\u7b49\u5927\u516c\u53f8\u548c\u8d8a\u6765\u8d8a\u5c0f\u7684\u516c\u53f8\uff0c\u5982yelp\u548cspotify\u3002\n 2016\u5e74\uff0c\u4ed6\u642c\u5230\u4e86Paul\uff0cWeiss\uff0cRifkind\uff0cWharton\uff06amp;\u9a7b\u519b\uff0c\u4e00\u5bb6\u7740\u540d\u7684\u4f01\u4e1a\u8bc9\u8bbc\u516c\u53f8\u3002\u4f46\u53bb\u5e74\uff0c\u5eb7\u5fb7\u5148\u751f\u7684\u5de5\u4f5c\u6279\u8bc4\u5927\u578b\u6280\u672f\u5ba3\u5e03\u4e0e\u516c\u53f8\u5e9e\u5927\u7684\u6295\u8d44\u7ec4\u5408\u7684\u5176\u4ed6\u90e8\u5206\u53d1\u751f\u51b2\u7a81\uff0c\u4e24\u4e2a\u4eba\u90fd\u6709\u5173\u4e8e\u6b64\u4e8b\u7684\u77e5\u8bc6\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4ed6\u7684\u7ec3\u4e60\u4e0e\u6bd4\u5c14\u827e\u8428\u514b\u68ee\u548c\u51ef\u4f26\u00b7\u9093\u6069\uff08Karen Dunn\uff09\u6240\u505a\u7684\u5de5\u4f5c\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u5bb6\u516c\u53f8\u521a\u521a\u8058\u8bf7\u7684\u4e24\u540d\u5f8b\u5e08\u521a\u521a\u8058\u8bf7\u4e86\u82f9\u679c\u548c\u4e9a\u9a6c\u900a\uff0c\u53e6\u4e00\u4e2a\u4eba\u8868\u793a\u4e86\u89e3\u60c5\u51b5\u3002\n \u5eb7\u5fb7\u5148\u751f\u9762\u4e34\u7740\u4e00\u4e2a\u9009\u62e9\uff1a\u4e22\u5f03\u4ed6\u7684\u4e00\u4e9b\u5ba2\u6237\u6216\u79bb\u5f00\u516c\u53f8\u3002\u4ed6\u79bb\u5f00\u4e86\u3002\n \u201c\u4e54\u7eb3\u68ee\u7531\u4e8e\u5177\u6709\u590d\u6742\u7684\u6cd5\u5f8b\u51b2\u7a81\u800c\u5236\u5b9a\u4e86\u8fd9\u4e00\u51b3\u5b9a\uff0c\u8fd9\u5c06\u8981\u6c42\u4ed6\u505c\u6b62\u91cd\u8981\u548c\u957f\u671f\u7684\u5ba2\u6237\u4ee3\u8868\u6027\u548c\u5173\u7cfb\uff0c\u201d\u8be5\u516c\u53f8\u5728\u5f53\u65f6\u53d1\u8868\u7684\u5907\u6ce8\u4e2d\u8868\u793a\u3002 \n\u5eb7\u5fb7\u5148\u751f\uff0c\u827e\u8428\u514b\u68ee\u5148\u751f\u548c\u9093\u6069\u5973\u58eb\u6ca1\u6709\u56de\u590d\u8bc4\u8bba\u8bf7\u6c42\uff0c\u4e5f\u4e0d\u56de\u590d\u4fdd\u7f57\uff0c\u9b4f\u58eb\u7684\u53d1\u8a00\u4eba\u3002  \u5eb7\u5fb7\u5148\u751f\u81ea\u6210\u7acb\u4e86\u5eb7\u5fb7\u6cd5\u96c6\u56e2\u7684\u516c\u53f8\uff0c\u8be5\u96c6\u56e2\u662f\u5eb7\u5fb7\u6cd5\u96c6\u56e2\uff0c\u8be5\u96c6\u56e2\u4f5c\u4e3a\u201c\u53cd\u5784\u65ad\u5021\u5bfc\u7cbe\u54c1\u201d\u5728\u7ebf\u5ba3\u4f20\u3002 \u6839\u636e\u6cd5\u9662\u8bb0\u5f55\uff0c\u5176\u5f8b\u5e08\u5df2\u7ecf\u88ab\u82f9\u679c\u548c\u8c37\u6b4c\u7684\u6279\u8bc4\u8005\u96c7\u7528\u3002 ", "note_en": "WASHINGTON \u2014 Lawyers at Kellogg, Hansen, Todd, Figel &amp; Frederick, a top corporate law firm, were abuzz on Monday as they grappled with  a federal judge\u2019s rulings about antitrust cases related to their client: Facebook.\n Last month, lawyers at Cravath, Swaine &amp; Moore, one of the country\u2019s elite law firms, advised Amazon over its acquisition of MGM, which is facing antitrust scrutiny from regulators.\n And a slate of litigators for the prominent law firm Gibson, Dunn &amp; Crutcher gave closing arguments for Apple in  an antitrust lawsuit brought by Epic Games.\n The mounting legal and regulatory scrutiny facing Big Tech has led to a wave of lawsuits, investigations and proposed legislation aimed at ending the dominance of Amazon, Apple, Facebook and Google. Whether those efforts succeed may take years to sort out, but there is already one clear winner: the nation\u2019s legal industry.\n Not since the government sued to break up Microsoft in the late 1990s has there been greater demand for people who know the ins and outs of corporate competition law. That is only certain to increase after a federal judge dismissed a states\u2019 antitrust case against Facebook on Monday and said the Federal Trade Commission\u2019s complaint against the social network needed to be revised.\n The rulings put the Facebook case back into the hands of  Lina Khan, a fierce critic of the tech industry, who recently became chair of the F.T.C., an agency that regulates antitrust. Last week, bills aimed at weakening the companies\u2019 grip on the industry also  advanced in the House.\n The clamor for talent extends to lobbying firms and economists, who can help the companies formulate counterarguments and provide expert testimony about the companies\u2019 market power. But it is particularly acute in the legal profession.\n The tech giants are already flooding courtrooms with large teams of prominent lawyers to press their case.  Google faces multiple antitrust lawsuits, one brought by the Justice Department, and two others from state attorneys general. Since those suits were filed, 16 lawyers from six law firms have appeared in courts to defend the company, according to public records.\n In total, 51 lawyers from 21 law firms have appeared in court in the Google cases, including lawyers representing states like Texas and some of Google\u2019s competitors. Facebook, which faces its own antitrust case, has hired a team of lawyers in a similar way.\n As a result, antitrust work \u2014 once a relatively sleepy area of the legal world \u2014 is now providing a windfall for the big firms. Top partners at a large firm often bill $1,000 to $2,000 an hour, and the scores of young associates who help them charge hundreds of dollars an hour.\n The cost is minimal for the giant tech companies. But it has widened the divide in resources between regulators and the companies they police, making it harder for the government to recruit and keep talent to take on the industry. It has also raised fresh concerns about Washington\u2019s revolving door, since many of the lawyers used by the tech companies recently worked for the government.\n In 2019, when the Justice Department searched for a lead investigator into Google and other tech giants, officials came up with a list of candidates from about 10 law firms, according to two people with knowledge of the search. But one by one, they said, potential candidates had to be crossed off the list because they already worked for Big Tech clients, leaving few options.\n More recently, conflicts of interest have complicated the Biden administration\u2019s search for the head of the Justice Department\u2019s antitrust division. Several times, critics of the industry have criticized a potential candidate because of the person\u2019s ties to Big Tech.\n \u201cThese companies have the monetary resources to hire the best and the brightest,\u201d said William J. Baer, former head of antitrust at the Justice Department under President Barack Obama. \u201cBut it does emphasize the resource disparity between what the government can throw at these issues and the virtually unlimited resources of these companies.\u201d\n Rebecca Slaughter, a Democratic commissioner at the F.T.C., said antitrust cases were among their most expensive. The cost for one expert witness to speak on behalf of the agency exceeds the witness costs for all other cases pursued by the agency in any given year.\n \u201cThe demand for antitrust enforcement has gone up dramatically over the last decade and has really skyrocketed in the last year,\u201d Ms. Slaughter said. \u201cThe costs involved in bringing large and complex cases and reviewing the tsunami of proposed mergers are huge, especially for a small agency like ours.\u201d\n Amazon, Facebook and Google declined to comment. Apple and the law firms did not respond to requests for comment.\n Freshfields, the oldest global law firm in the world, shows the extent of the boom times for antitrust legal work.\n In 2018, the firm hired Eric Mahr, a former lead litigator for the Justice Department, to expand the firm\u2019s antitrust practice in Washington. Mr. Mahr then brought on many former colleagues, including Julie Elmer, an experienced trial lawyer. The firm now has a dozen partners with antitrust expertise. Ms. Elmer and Mr. Mahr are leading Google\u2019s defense against an ad-tech lawsuit led by the Texas attorney general.\n The firm has also expanded west, to be closer to its valuable tech clients. The firm, which is based in Britain, sent its lead European antitrust partner, Alan Ryan, to open an office in Menlo Park in Silicon Valley. He has since added six partners from other firms. In total, 25 people work in the firm\u2019s office on Sand Hill Road, the most expensive office real estate in the nation and home to venture capital firms including Kleiner Perkins.\n  Next year, the company will move into two floors in a new office complex in Redwood City to accommodate more staff members, including four new antitrust partners Mr. Ryan is seeking to hire.\n How weird is the heat in Portland, Seattle and Vancouver? Off the charts.:\u00a0\u201cI realize that I have certainly been part of the problem, thinking this is a problem for future generations.  As I moved to the basement to sleep when the power went out, I realized that the future is now.\u201d  Puck45, Seattle.\n Rubble, narrow voids, storms: The dangerous rescue effort in Miami:\u00a0\u201cIt&#39;s impossible to find something meaningful to say, except that  I can feel the unspeakable sadness for everyone affected by this abrupt, unfathomable tragedy.\u201d  Becca, Gulf of Mexico.\n It\u2019s boom time for lawyers as Washington pursues big tech :\u00a0\u201cThere need to be  laws to regulate this industry\u00a0along with real penalties for disinformation. There also needs to be a well-defined method to prevent the sender of false information from hiding.\u201d  David, Harrisburg.\n \u201cCan we double it in the next year? I hope so.\u201d Mr. Ryan said. \u201cWe plan to grow. The only question is how fast we can get there.\u201d\n The tech firms are also bringing antitrust experts in house. Amazon, Facebook and Google each have dozens of in-house lawyers. In January 2020, Amazon hired a former F.T.C. lawyer, Amy Posner. In April 2020, Facebook hired numerous government officials, starting with another longtime Federal Trade Commission lawyer in the competition bureau.\n \u201cWhat\u2019s striking is the number of people going to work directly for tech companies from the agencies,\u201d said William Kovacic, a former chairman of the F.T.C. \u201cThat reflects a real change.\u201d\n The opportunities to work for tech clients, or the tech companies themselves, drew a big audience at a recent mock trial held by the American Bar Association. The workshop centered on a fictional big search engine called Knowsmore, which was being sued by a smaller search engine that wanted to charge for more privacy features. The event was one of the best-attended workshops put on by the A.B.A. over the past few years, said David Reichenberg, a lawyer at Cozen O\u2019Connor and the association\u2019s litigation committee co-chair.\n \u201cEvery year there is more and more interest among the members to learn more about tech and antitrust,\u201d he said.\n There is also more work for lawyers who want to take on the big companies, or represent the government itself. Two law firms reached an agreement last year to represent the State of Texas in its lawsuit against Google. And last month, another firm joined with the attorney general in the District of Columbia to sue Amazon.\n But many of the biggest and most prestigious firms are working for the Silicon Valley giants.\n Jonathan Kanter, a longtime antitrust lawyer who has been rumored as a possible nominee to lead the Justice Department\u2019s antitrust division, built his career largely around working for the rivals of Google, Facebook, Amazon and Apple. His client list included both big companies like Microsoft and News Corporation and smaller firms like Yelp and Spotify.\n In 2016, he moved to Paul, Weiss, Rifkind, Wharton &amp; Garrison, a prominent corporate litigation firm. But last year, Mr. Kanter\u2019s work criticizing Big Tech started to present conflicts with other parts of the firm\u2019s sprawling portfolio, said two people with knowledge of the matter. Specifically, his practice was at odds with work being done by Bill Isaacson and Karen Dunn, two lawyers the firm had just hired who are known to represent Apple and Amazon, said another person with knowledge of the situation.\n Mr. Kanter faced a choice: Drop some of his clients or leave the firm. He left.\n \u201cJonathan made this decision due to a complicated legal conflict that would have required him to discontinue important and longstanding client representations and relationships,\u201d the firm said in a note circulated at the time.\n Mr. Kanter, Mr. Isaacson and Ms. Dunn did not reply to requests for comment, nor did a spokeswoman for Paul, Weiss.\n Mr. Kanter has since founded his own firm, the Kanter Law Group, which advertises itself online as an \u201cantitrust advocacy boutique.\u201d According to court records, its lawyers have already been hired by critics of Apple and Google.", "posttime": "2021-06-29 23:10:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7ebd\u7ea6\u65f6\u62a5,york", "title": "\u7ebd\u7ea6\u65f6\u62a5 ", "title_en": "New York Times", "transed": 1, "url": "https://www.nytimes.com/2021/06/29/technology/boom-times-for-lawyers-as-washington-pursues-big-tech.html", "via": "", "real_tags": ["\u7ebd\u7ea6\u65f6\u62a5", "york"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068532, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Newspeak\u662f\u5927\u6d0b\u6d32\u4eba\u6c11\u5728\u4e54\u6cbb\u5965\u5c14\u97e6\u5c14\u5c0f\u8bf4\u5341\u4e5d\u516b\u5341\u56db\u7684\u865a\u6784\u8bed\u8a00\u3002\n \u201c\u96be\u9053\u4f60\u4e0d\u77e5\u9053\u65b0\u95fb\u7684\u6574\u4e2a\u76ee\u7684\u662f\u7f29\u5c0f\u601d\u60f3\u8303\u56f4\u5417\uff1f\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u4f7f\u601d\u60f3\u8fc7\u654f\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u8a00\u8bed\u8868\u8fbe\u5b83\u3002\u201c\n  Newspeak\u4e3a\u5927\u6d0b\u6d32\u7684\u4eba\u800c\u7cdf\u7cd5\uff0c\u4f46\u6211\u4eec\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4ece2010\u5e74\u6765\u5b66\u4e60\u4e00\u4e24\u4ef6\u4e8b\u3002\n  \u4f5c\u4e3a\u4e00\u4e2a\u63d2\u56fe\uff0c\u8ba9\u6211\u4eec\u5728Java\u4e2d\u63d0\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u65b9\u6cd5\u7b7e\u540d\uff1a\n  \u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f\u7b7e\u540d\u53ea\u544a\u8bc9\u6211\u4eec\u5b83\u662f\u4e00\u79cd\u4ece\u5b57\u7b26\u4e32\u5230\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b83\u663e\u7136\u5b83\u4e0e\u8f93\u5165\u5b57\u7b26\u4e32\u505a\u70b9\u4ec0\u4e48\uff0c\u6216\u8005\u53ef\u80fd\u65e0\u6cd5\u505a\u70b9\u4ec0\u4e48\u5e76\u8fd4\u56denull\uff0c\u6216\u7a81\u53d8\u67d0\u4e9b\u72b6\u6001\uff0c\u6216\u8005\u6267\u884c\u5176\u4ed6\u526f\u4f5c\u7528\uff0c\u6216\u8005\u629b\u51fa\u5176\u4ed6\u526f\u4f5c\u7528\uff08\u8fd9\u662f\u6bd5\u7adf\u662fJava\uff09\u3002\n  \u5bc6\u5c01\u7279\u6027\u6848\u4f8b\u7c7b\uff08i\uff1aint\uff09\u6269\u5c55\u6848\u4f8b\u7c7b\uff08i\uff1aint\uff09\u6269\u5c55def\uff08str\uff1astring\uff09\uff1a\u9009\u9879[postalcode]\n \u66f4\u597d\u7684\u662f\uff0c\u6b64\u4ee3\u7801\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e24\u4e2a\u53ef\u80fd\u7684\u540e\u652f\u901a\uff08\u6216\u5fb7\u8bed\uff09\u4e4b\u4e00\uff0c\u6216\u8005\u672a\u80fd\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8fd4\u56de\u65e0\u3002\u4f30\u8ba1\u731c\u6d4b\u662f\u6b64\u51fd\u6570\u5c1d\u8bd5\u4ece\u5b57\u7b26\u4e32\u521b\u5efa\u6709\u6548\u7684\u90ae\u653f\u7f16\u7801\u3002\u6211\u4eec\u53ea\u9700\u7528\u51e0\u79cd\u7c7b\u578b\u6307\u5b9a\u6211\u4eec\u7684\u57df\uff0c\u73b0\u5728\u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u56fe\u5f88\u6e05\u695a\u3002 \n\u4ece\u57df\u9a71\u52a8\u8bbe\u8ba1\u4e2d\u501f\u7528\u672f\u8bed\uff0c\u6211\u4eec\u5c06\u57df\u4e2d\u7684\u57df\u540d\u547c\u53eb\u4e3a\u4e13\u7528\u6784\u9020\u57df\u540d\u539f\u59cb\u3002\u5728\u8bed\u8a00\u539f\u8bed\uff08String\uff0cBoolean\uff0cInt\uff0cFloat\u7b49\uff09\u662f\u7f16\u7a0b\u4ee3\u7801\u7684\u6784\u5efa\u5757\u7684\u65b9\u5f0f\uff0c\u57df\u540d\u662f\u57df\u6a21\u578b\u548c\u4e1a\u52a1\u903b\u8f91\u7684\u6784\u5efa\u5757\uff08ShoppingBag\uff0c\u8ba2\u5355\uff0c\u6570\u91cf\u7b49\u3002\u5982\u679c\u60a8\u5728\u7535\u5b50\u5546\u52a1\u4e2d\uff09\u3002\n \u57df\u540d\u539f\u59cb\u5728\u5176\u5b9a\u4e49\u4e2d\u7cbe\u786e\uff0c\u4e0d\u53ef\u80fd\u662f\u975e\u6cd5\u7684\uff0c\u5176\u5b58\u5728\u610f\u5473\u7740\u5176\u6709\u6548\u6027\u3002\n \u5728\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u57df\u57fa\u5143\u7d20\u65f6\uff0c\u63ed\u793a\u4e86\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5efa\u6a21\u7684\u771f\u6b63\u529b\u91cf\uff1a\n  \u67e5\u770b\u7c7b\u578b\uff0c\u53ea\u6709\u6709\u4e00\u4ef6\u4e8b\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\u57fa\u4e8e\u90ae\u653f\u7f16\u7801\u548c\u623f\u5c4b\u53f7\u800c\u5f02\u6b65\u8fd4\u56de\u5730\u5740\u6216\u6ca1\u6709\u7ed3\u679c\u3002\u6b64\u529f\u80fd\u5c06\u4e0e\u4efb\u4f55\u540e\u5c55\u7801\u5408\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u6211\u4eec\u7684\u57df\u540d\u652f\u6301\u4e24\u8005\u548c\u5fb7\u8bed\u5730\u5740\u3002\u795d\u4f60\u597d\u8fd0\u4ece\u4ee5\u4e0b\u7b7e\u540d\u4e2d\u8ba8\u8bba\u4e86\u6240\u6709\u8fd9\u4e00\u70b9\uff1a\n   \u8ba9\u6211\u4eec\u8c03\u67e5\u5728\u57df\u903b\u8f91\u4e2d\u4f7f\u7528\u8bed\u8a00\u539f\u8bed\u7684\u6f5c\u5728\u95ee\u9898\u4e0e\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u6b21\u5177\u6709\u6b63\u786e\u7684\u547d\u540d\uff0c\u5176\u4e2d\u6211\u4eec\u6a21\u62df\u4e86\u4e00\u79cd\u4ece\u4e00\u4e2a\u5e10\u6237\u5c06\u94b1\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5e10\u6237\u7684\u65b9\u6cd5\uff1a\n  \u73b0\u5728\u8ba9\u6211\u4eec\u8ba1\u7b97\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9519\u8bef\u7684\u65b9\u5f0f\uff1a\n fromaccountnumber\u548ctoaccountnumber\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u5e10\u53f7\uff0c\u8fd9\u518d\u6b21\u6ca1\u6709\u610f\u4e49\u3002 \n\u8fd9\u662f\u8fd9\u79cd\u65b9\u6cd5\u76849\u4e2a\u6f5c\u5728\u7684\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5e2e\u52a9\u6211\u4eec\u4efb\u4f55\u4e00\u4e2a\uff0c\u5b83\u5f52\u7ed3\u4e3a\u4eba\u7c7b\u5f1f\u5b50\u548c\u52e4\u594b\u505a\u6b63\u786e\u7684\u4e8b\u3002\n \u5982\u679c\u6211\u4eec\u6dfb\u52a0\u6b63\u786e\u7684\u68c0\u67e5\uff0c\u53ef\u4ee5\u6293\u4f4f\u7b2c1,2,3,4\u548c5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c06\u5728\u8fd0\u884c\u65f6\u7206\u70b8\uff0c\u8fd9\u662f\u4e0d\u5e78\u7684\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\u3002\u95ee\u98986\uff0c\u4f46\u6839\u672c\u65e0\u6cd5\u68c0\u67e5\u3002\u5982\u679c\u6765\u7535\u8005\u6df7\u6dc6\u4e86\u4e24\u4e2a\u5e10\u53f7\uff0c\u6211\u4eec\u5c06\u65e0\u6cd5\u627e\u5230\uff0c\u76f4\u5230\u6124\u6012\u7684\u5ba2\u6237\u5f00\u59cb\u547c\u53eb\uff01\n   \u6848\u4f8b\u7c7b\uff08a\uff1a\u5e10\u6237\uff09\u6848\u4f8b\u7c7b\uff08a\uff1a\u5e10\u6237\uff09def\uff08\u6765\u81ea\uff1afromaccount\uff0cto\uff1atoaccount\uff0c\u91d1\u989d\uff1amoney\uff09\uff1aboolean\n \u6211\u4eec\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u5982\u4e4b\u524d\uff0c\u73b0\u5728\u5982\u679c\u6765\u7535\u8005\u6df7\u6dc6\u4e86\u6211\u4eec\u4ee3\u7801\u65e0\u6cd5\u7f16\u8bd1\u7684\u53c2\u6570\u3002\u6211\u4eec\u4e00\u76f4\u642c\u5230\u7f3a\u9677\u5c42\u6b21\u7ed3\u6784\uff0c\u5f88\u597d\uff01\n \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u4ecd\u7136\u53ef\u4ee5\u6df7\u5408\u8d77\u6765\u548c\u9677\u9631\uff0c\u4f46\u73b0\u5728\u81f3\u5c11\u4f1a\u66f4\u52a0\u660e\u663e\u3002\u6211\u4eec\u4e0d\u4f1a\u66f4\u6df1\u5165\u5730\u8fdb\u5165\u5b83\uff0c\u4f46\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u5c06\u4ee3\u7801\u4e00\u76f4\u9650\u5236\u4e3a11\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u50cfarchUnit\u8fd9\u6837\u7684\u4e1c\u897f\u6765\u5f3a\u5236\u6267\u884c\uff0c\u53ea\u80fd\u4ece\u767b\u5f55\u7684\u7528\u6237\u4e2d\u6d3e\u751f\uff0c\u786e\u4fdd\u5b83\u4e0d\u53ef\u80fd\u521b\u5efa\u5b83\u9664\u6b64\u4ee5\u5916\u3002\n \u4e0a\u9762\u7684\u4ee3\u7801\u66f4\u5197\u957f\uff0c\u4f46\u8c01\u5173\u5fc3\uff1f\u4ee3\u7801\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff0c\u5176\u610f\u56fe\u66f4\u660e\u663e\u3002\n \u5f88\u591a\u73b0\u4ee3\uff0c\u9ad8\u7ea7\u8bed\u8a00\u652f\u6301\u522b\u540d\u548c/\u6216\u7ebd\u7279\u7c7b\u578b\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a \n\u4ee5\u4efb\u4f55\u8bed\u8a00\u5305\u88c5\uff0c\u800c\u4e0d\u662f\u578b\u5f0f\u522b\u540d\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u4e3a\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u62f3\u51fb\u548c\u89e3\u538b\u7f29\u57df\u539f\u8bed\u7684\u5185\u90e8\u503c\u3002\u4ecd\u7136\u662f\u6027\u80fd\u548c\u7c7b\u578b\u5b89\u5168\u4e4b\u95f4\u7684\u6743\u8861\u80af\u5b9a\u662f\u503c\u5f97\u7684\u3002\n  \u73b0\u5728\u5728\u60a8\u5f53\u524d\u7684\u9879\u76ee\u4e2d\uff0c\u60a8\u53ef\u4ee5\u7b97\u4e0a\u9700\u8981\u591a\u5c11\u4e2a\u8981\u6c42\u548c\u65ad\u8a00\u548c\u4ed6\u4eec\u7684\u4eb2\u621a\uff1f\u6240\u6709\u8fd9\u4e9b\u90fd\u50cf\u4ee3\u7801\u5e93\u4e2d\u7684\u7b28\u86cb\u9677\u9631\uff0c\u5f53\u547c\u53eb\u8005\u8df3\u8fc7\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u8fd0\u884c\u65f6\u7206\u70b8\u3002\n \u4ee5\u4e0b\u662f\u8981\u4e3a\u6b64\u9700\u8981\u4e00\u4e9b\u70b8\u5f39\u5904\u7f6e\u7684\u4e0d\u5b8c\u6574\u6e05\u5355\uff1a\n \u5177\u6709\u76f8\u540c\u7c7b\u578b\u7684\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff08\u9664\u975e\u60a8\u7684\u51fd\u6570\u662f\u6362\u5411\uff09\u3002\n \u4f7f\u7528SET\u6216ORDEREDSET\u66f4\u5408\u9002\u7684\u5217\u8868\uff0c\u51e0\u4e4e\u603b\u662f\u3002\u5373\u4f7f\u4f60\u4e0d\u5728\u610f\uff0c\u4e5f\u53ef\u4ee5\u66f4\u597d\u5730\u6c9f\u901a\u610f\u56fe\u3002\n  UUIDS\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\uff0c\u5ba2\u6237UUID\u4e0eUUID\u7684\u987a\u5e8f\u4e0d\u540c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u4e0d\u5f97\u4e0d\u5904\u7406\u5916\u90e8\u4e16\u754c\u3002\u771f\u6b63\u7684\u7a0b\u5e8f\u5fc5\u987b\u4e00\u76f4\u6ce8\u610f\u5783\u573e\u6570\u636e\uff0c\u4ece\u6570\u636e\u5e93\u54cd\u5e94\uff0c\u7528\u6237\u8f93\u5165\uff0c\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u7b49\u3002 \n[{\uff1a\uff06\uff0334; b4ae6a1b-ee07-4fbe-9588-11f451980a07\uff06\uff0334;\uff1a\uff06\uff0334;\u7ea6\u7ff0\uff06\uff0334;\uff1a32\uff0c}\uff0c{\uff1a\uff06\uff0334; 2711eba4-098c-44e9-a8a2-518ff07969bf\uff06 \uff0334 ;,\uff1a\uff06\uff0334; Mary\uff06\uff0334 ;,\uff1a31}]\n  \u6700\u7ec8\u6848\u4f8b\u7c7b\uff08Val ID\uff1aString\uff0cVal\u540d\u79f0\uff1aString\uff0cVal\u5e74\u9f84\uff1aint\uff09\u5bf9\u8c61{def\uff08\u8f93\u5165\uff1a\u5b57\u7b26\u4e32\uff09\uff1alist [User] = ???}\n \u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u89e3\u7801\u7528\u6237\u5bf9\u8c61\u5e76\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u3002\u4f46\u4e0d\u9ad8\u5174\u7684\u9053\u8def\u600e\u4e48\u6837\uff1f\n  \u4ece\u7c7b\u578b\u7684\u89d2\u5ea6\u5b8c\u5168\u5408\u6cd5\uff0c\u4f46\u57df\u540d\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u5982\u679c\u8fd9\u6837\u7684\u54cd\u5e94\u4e0d\u5c0f\u5fc3\u5730\u4f20\u9012\u7ed9\u6211\u4eec\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5b83\u5c06\u6210\u4e3a\u6ef4\u7b54\u65f6\u95f4\u70b8\u5f39\u3002\u4f7f\u7528Scala-Newtype\u5e76\u7cbe\u5236\u66f4\u597d\u7684\u7f16\u7801\uff1a\n \u6700\u7ec8\u6848\u4f8b\u7c7b\uff08value\uff1auuid\uff09\u6700\u7ec8\u6848\u4f8b\u7c7b\uff08value\uff1astring\u7cbe\u5236nonempty\uff09\u6700\u7ec8\u6848\u4f8b\u7c7b\uff08value\uff1aint\u7cbe\u7ec6\u80af\u5b9a\uff09type = nonememylist [user]\u6700\u7ec8\u6848\u4f8b\u7c7b\uff08ID\uff1auserid\uff0c\u540d\u79f0\uff1a\u59d3\u540d\uff1a\u540d\u79f0\uff0c\u5e74\u9f84\uff1a\u5e74\u9f84\uff09\u5bf9\u8c61{def\uff08\u8f93\u5165\uff1a\u5b57\u7b26\u4e32\uff09\uff1a[DecodeException\uff0cUsers] = ???}\n \u73b0\u5728\u4e0d\u53ef\u80fd\u521b\u9020\u975e\u6cd5\u7684\u56fd\u5bb6\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u6ee1\u8db3\u7f16\u8bd1\u5668\uff0c\u975e\u6cd5\u5dde\u5df2\u7ecf\u53d8\u5f97\u65e0\u6cd5\u5f62\u5bb9\u3002\u6211\u4eec\u88ab\u8feb\u800c\u6765\u5728\u539f\u59cb\u6570\u636e\u8fdb\u5165\u7684\u8ba1\u5212\u4e2d\u5904\u7406\u6700\u591a\u5916\u5c42\u6216\u8fb9\u7f18\u7684\u65e0\u6548\u8f93\u5165\u3002\n      \u7531\u57df\u540d\u57fa\u5143\u5efa\u9020\u7684\u9002\u5f53\u7684\u57df\u6a21\u578b\u8feb\u4f7f\u6211\u4eec\uff0c\u5f00\u53d1\u4eba\u5458\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u3002 ", "note_en": "Newspeak is a fictional language spoken by the people of Oceania in George Orwell\u2019s novel Nineteen Eighty-Four.\n \u2018Don\u2019t you see that the whole aim of Newspeak is to narrow the range of thought? In the end we shall make thoughtcrime literally impossible, because there will be no words in which to express it.\u2019\u201d\n  Newspeak sucks for the people of Oceania but we developers can learn a thing or two from Ingsoc.\n  As an illustration let us come up with a simple example method signature in Java:\n  What does this code do? The signature only tells us it\u2019s a method from  String to  String so clearly it does something with the input string, or it might not be able to do something and return  null, or mutate some state, or perform other side effects, or throw a  Throwable (this is Java after all).\n  sealed   trait   case   class  ( i:  Int)  extends    case   class  ( i:  Int)  extends     def  (str:  String):  Option[ PostalCode]\n Better, this code turns a  String into one of two possible  PostalCodes (either   or German) or fails to do so, returning a  None. An estimated guess would be that this function tries to create a valid postal code from a string. We just had to specify our domain with a few types and now the intent of this piece of code is clear.\n Borrowing a term from Domain Driven Design, we call domain stuff as a dedicated to construct a  domain primitive. In the way that a language primitive ( String,  boolean,  int,  float, etc.) is a building block of programming code, a domain primitive is a building block for the domain model and business logic ( ShoppingBag,  Order,  Quantity, etc. if you\u2019re in e-commerce for example).\n A domain primitive is precise in its definition and impossible to be illegal, its existence implies its validity.\n The true power of modeling in this way is revealed when using these domain primitives in the actual business logic:\n  Looking at types, there is only one thing this code could be doing: asynchronously returning an address or no result based on a postal code and a house number. This functional will work with any  PostalCode so we can infer that both   and German addresses are supported per our domain. Good luck figuring all of that out from the following signature:\n   Let us investigate the potential problems of using language primitives in domain logic with another example, this time with proper naming, in which we model a method to transfer money from one account to another account:\n  Now let\u2019s count the ways in which this method can be called incorrectly:\n fromAccountNumber and  toAccountNumber can be the same account number, which again doesn\u2019t make sense.\n That\u2019s 9 potential mistakes for this one method and the compiler won\u2019t help us with any of them, it comes down to human disciple and diligence to do the right thing.\n Issues 1, 2, 3, 4, and 5 can be caught if we add the proper checks ourselves, that way this method will just blow up at runtime, which is unfortunate but whatever. Issue 6 however cannot be checked at all. If the caller mixes up the two account numbers we won\u2019t find out until angry customers start calling!\n   case   class  ( a:  Account)   case   class  ( a:  Account)  def  (from:  FromAccount, to:  ToAccount, amount:  Money):  Boolean\n We added extra type information, like before, and now if the caller mixes up the arguments our code won\u2019t compile. We moved all the way up the defect hierarchy, nice!\n It is still possible to mix up  FromAccount and  ToAccount in the example above, but at least that will be more obvious now. We won\u2019t go into it deeper but if we  really want to constrain the code all the way up to 11, we can use something like  ArchUnit to enforce that a  FromAccount can only be derived from the logged in user, ensuring its impossible to create otherwise.\n The code above is more verbose but who cares? The code is type safe and its intent is more explicit.\n A lot of modern, high level languages support some notion of type aliasing and/or newtypes:\n   Wrapping in any language as opposed to type aliasing can have an impact on performance because we are basically boxing and unboxing the inner value of the domain primitive. Still the trade-off between performance and type safety is definitely worth it.\n  In your current project right now, how many calls to  require and  assert and their relatives can you count? All of them are like booby traps in the code base and when a caller trips up they will explode all over the runtime.\n Here is an incomplete list of things to watch for that might need some bomb disposal:\n functions with two or more arguments of the same type (unless your function is  commutative).\n using a  List where a  Set or  OrderedSet is more appropriate, which is almost always. Even if you don\u2019t care, a  Set communicates intent better.\n  UUIDs as method argument, a customer uuid is not the same as an order uuid.\n  So far we didn\u2019t had to deal with the external world yet. Real programs have to watch out for garbage data all the time, be it from database responses, user input, third party services, configuration files, etc.\n  [ {  :  &#34;B4AE6A1B-EE07-4FBE-9588-11F451980A07&#34;,  :  &#34;John&#34;,  :  32, }, {  :  &#34;2711EBA4-098C-44E9-A8A2-518FF07969BF&#34;,  :  &#34;Mary&#34;,  :  31 }]\n  final  case   class  ( val id:  String, val name:  String, val age:  Int)  object   {   def  (input:  String):  List[ User] = ???}\n The  User object can be decoded from a   string and passed to the rest of the program. But what about the unhappy path?\n  Is perfectly legal from a type standpoint but domain wise not what we want. If such a response is carelessly passed into our business logic it will become ticking time bomb. A better encoding would be, using  scala-newtype and  refined:\n final  case   class  ( value:  UUID)  final  case   class  ( value:  String  Refined  NonEmpty)  final  case   class  ( value:  Int  Refined  Positive)  type   =  NonEmptyList[ User] final  case   class  ( id:  UserId, name:  Name, age:  Age)  object   {   def  (input:  String):  Either[ DecodeException,  Users] = ???}\n Now it is  impossible to create illegal state since we would not be able to satisfy the compiler, illegal state has become inexpressible. We are forced instead to handle invalid input at the most outer layer or   edge\u201d of our program where the raw data comes in.\n      A proper domain model built from domain primitives forces us, developers, to do the right thing.", "posttime": "2021-06-29 23:10:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u548c\u57df,domain,\u5b57\u7b26\u4e32", "title": "Newspeak\u548c\u57df\u9020\u578b ", "title_en": "Newspeak and Domain Modeling", "transed": 1, "url": "https://www.kkreuning.nl/2021/06/20/newspeak-and-domain-modeling", "via": "", "real_tags": ["\u548c\u57df", "domain", "\u5b57\u7b26\u4e32"]}, {"category": "", "categoryclass": "", "imagename": "f912c4a920a763ac89ddb5733d2d10f8.png", "infoid": 1068531, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528GitHub CopIlot\uff0c\u5728\u7f16\u8f91\u5668\u5185\u90e8\u63d0\u4f9b\u5168\u7ebf\u6216\u6574\u4e2a\u51fd\u6570\u7684\u5efa\u8bae\u3002\n   Github Copilot\u57f9\u8bad\u4e86\u6570\u5341\u4ebf\u884c\u516c\u544a\uff0c\u5c06\u60a8\u9700\u8981\u7684\u77e5\u8bc6\u653e\u5728\u89e6\u624b\u53ef\u53ca\uff0c\u8282\u7701\u60a8\u7684\u65f6\u95f4\u5e76\u5e2e\u52a9\u60a8\u4fdd\u6301\u4e13\u6ce8\u3002\n GitHub Copilot\u4eca\u5929\u53ef\u7528\u4f5c\u4e3aVisual Studio\u4ee3\u7801\u6269\u5c55\u540d\u3002\u5b83\u5728Visual Studio\u4ee3\u7801\u5de5\u4f5c\u7684\u4efb\u4f55\u5730\u65b9 - \u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u6216GitHub\u4ee3\u7801\u7a7a\u95f4\u4e0a\u7684\u4e91\u4e2d\u3002\u5b83\u8db3\u4ee5\u5728\u60a8\u952e\u5165\u65f6\u4f7f\u7528\u3002\n GitHub Copilot\u4f7f\u7528\u5e7f\u6cdb\u7684\u6846\u67b6\u548c\u8bed\u8a00\u3002\u6280\u672f\u9884\u89c8\u5c24\u5176\u9002\u7528\u4e8ePython\uff0cJavaScript\uff0cCyperscript\uff0cRuby\u4ee5\u53caGo\uff0c\u4f46\u5b83\u7406\u89e3\u4e86\u6570\u5341\u79cd\u8bed\u8a00\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u51e0\u4e4e\u4efb\u4f55\u4e1c\u897f\u90fd\u627e\u5230\u60a8\u7684\u65b9\u5f0f\u3002\n \u4f7f\u7528GitHub CopIlot\uff0c\u60a8\u603b\u662f\u8d1f\u8d23\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u66ff\u4ee3\u5efa\u8bae\u5faa\u73af\uff0c\u9009\u62e9\u63a5\u53d7\u6216\u62d2\u7edd\uff0c\u5e76\u624b\u52a8\u7f16\u8f91\u5efa\u8bae\u7684\u4ee3\u7801\u3002 GitHub Copilot\u9002\u5e94\u60a8\u6240\u505a\u7684\u7f16\u7801\uff0c\u5339\u914d\u60a8\u7684\u7f16\u7801\u98ce\u683c\u3002\n GitHub Copilot\u7531Codex\u63d0\u4f9b\u52a8\u529b\uff0c\u7531Openai\u521b\u5efa\u7684\u65b0AI\u7cfb\u7edf\u3002 GitHub Copilot\u6bd4\u5927\u591a\u6570\u4ee3\u7801\u52a9\u7406\u66f4\u660e\u663e\u5730\u7406\u89e3\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u662f\u5728DocString\uff0c\u6ce8\u91ca\uff0c\u529f\u80fd\u540d\u79f0\u8fd8\u662f\u4ee3\u7801\u672c\u8eab\u4e2d\uff0cGithub Copilot\u90fd\u4f7f\u7528\u60a8\u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\u5e76\u7efc\u5408\u4ee3\u7801\u6765\u5339\u914d\u3002\u4e0eOpenai\u4e00\u8d77\uff0c\u6211\u4eec\u8bbe\u8ba1GitHub Copilot\u5728\u5236\u4f5c\u5b89\u5168\u548c\u6709\u6548\u7684\u4ee3\u7801\u65f6\u66f4\u806a\u660e\uff0c\u56e0\u4e3a\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u5b83\u3002\n  \u8df3\u8fc7\u6587\u6863\u5e76\u505c\u6b62\u641c\u7d22\u793a\u4f8b\u3002 GitHub CopIlot\u6709\u52a9\u4e8e\u60a8\u5728\u60a8\u7684\u7f16\u8f91\u4e2d\u91cd\u70b9\u5173\u6ce8\u3002 \n\u5c06\u8bc4\u8bba\u8f6c\u6362\u4e3a\u4ee3\u7801\u3002\u5199\u4e00\u4e2a\u63cf\u8ff0\u6240\u9700\u903b\u8f91\u7684\u6ce8\u91ca\uff0c\u5e76\u8ba9GitHub Copilot\u4e3a\u60a8\u7ec4\u88c5\u4ee3\u7801\u3002\n   \u7528\u4e8e\u91cd\u590d\u7801\u7684\u81ea\u52a8\u5939\u3002 GitHub Copilot\u975e\u5e38\u9002\u5408\u5feb\u901f\u751f\u4ea7\u6837\u677f\u548c\u91cd\u590d\u7801\u6a21\u5f0f\u3002\u5582\u5b83\u4e00\u4e9b\u4f8b\u5b50\uff0c\u8ba9\u5b83\u751f\u6210\u5176\u4f59\u7684\uff01\n \u6ca1\u6709\u8f9b\u52b3\u7684\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u662f\u4efb\u4f55\u5f3a\u5927\u7684\u8f6f\u4ef6\u5de5\u7a0b\u9879\u76ee\u7684\u9aa8\u5e72\u3002\u5bfc\u5165\u5355\u5143\u6d4b\u8bd5\u5305\uff0c\u8ba9GitHub CopIlot\u5efa\u8bae\u7b26\u5408\u5b9e\u73b0\u4ee3\u7801\u7684\u6d4b\u8bd5\u3002\n \u544a\u8bc9\u6211\u66ff\u4ee3\u54c1\u3002\u60f3\u8bc4\u4f30\u4e00\u4e9b\u4e0d\u540c\u7684\u65b9\u6cd5\u5417\uff1f GitHub Copilot\u53ef\u4ee5\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u5217\u8868\u3002\u4f7f\u7528\u6240\u63d0\u4f9b\u7684\u4ee3\u7801\u6216\u7f16\u8f91\u4ee5\u6ee1\u8db3\u60a8\u7684\u9700\u6c42\u3002\n \u65e0\u8bba\u60a8\u662f\u65b0\u7684\u8bed\u8a00\u6216\u6846\u67b6\uff0c\u8fd8\u662f\u53ea\u662f\u5b66\u4e60\u4ee3\u7801\uff0cGithub Copilot\u90fd\u53ef\u4ee5\u5e2e\u52a9\u60a8\u627e\u5230\u81ea\u5df1\u7684\u65b9\u5f0f\u3002\u89e3\u51b3\u9519\u8bef\uff0c\u6216\u8005\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u65b0\u6846\u67b6\uff0c\u800c\u65e0\u9700\u82b1\u8d39\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u4f1a\u901a\u8fc7\u6587\u6863\u5265\u593a\u6216\u641c\u7d22\u7f51\u7edc\u3002\n \u6570\u767e\u540d\u5de5\u7a0b\u5e08\uff0c\u5305\u62ec\u8bb8\u591a\u4eba\uff0c\u6bcf\u5929\u90fd\u5728\u4f7f\u7528GitHub Copilot\u3002\u5b83\uff06\uff0339;\u5728\u4ed6\u4eec\u5de5\u4f5c\u7684\u65b9\u5f0f\u8f6c\u53d8 - \u8fd9\u91cc\u4ed6\u4eec\u6240\u8bf4\u7684\u8bdd\uff1a\n \u8bd5\u56fe\u901a\u8fc7Googling\u4ee3\u7801\u4ee5\u4e0d\u719f\u6089\u7684\u8bed\u8a00\u4ee3\u7801\u4e00\u5207\u90fd\u559c\u6b22\u7528\u77ed\u8bed\u6d4f\u89c8\u4e00\u4e2a\u5916\u56fd\u3002\u4f7f\u7528github copilot\u5c31\u50cf\u96c7\u7528\u7ffb\u8bd1\u3002 \n\u5b83\u8ba9\u6211\u611f\u5230\u60ca\u8bb6\u4e8e\u5b83\u662f\u5982\u4f55\u51c6\u786e\u7406\u89e3\u6211\u7684\u8bc4\u8bba\u548c\u751f\u6210\u51c6\u786e\u7684\u5efa\u8bae\u3002\u9009\u62e910\u4e2a\u4e0d\u540c\u7684\u5efa\u8bae\u7684\u80fd\u529b\u662f\u9876\u90e8\u7684\u6a31\u6843\u3002\n \u5728\u7b2c\u4e00\u5929\uff0cGitHub Copilot\u5df2\u7ecf\u6559\u4f1a\u4e86JavaScript\u5bf9\u8c61\u6bd4\u8f83\u4e2d\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u5e76\u4e0e\u6211\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u4e00\u6837\u8212\u9002\u3002\u8fd9\u662f\u6211\u89c1\u8fc7\u7684ml\u7684\u6700\u5927\u601d\u60f3\u5439\u5618\u3002\n \u6211\uff06\uff0339; M\u7559\u4e0b\u7684Github Copilot\u5982\u4f55\u5b8c\u5168\u4e86\u89e3\u6211\u60f3\u8981\u8f93\u5165\u7684\u5185\u5bb9\u3002 GitHub CopIlot\u5728\u5728\u53cd\u5e94\u7ec4\u4ef6\u4e0a\u5de5\u4f5c\u65f6\u7279\u522b\u6709\u7528\uff0c\u5728\u90a3\u91cc\u5b83\u4ee4\u4eba\u751f\u610f\u7684\u51c6\u786e\u9884\u6d4b\u3002 GitHub Copilot\u5df2\u6210\u4e3a\u6211\u7684\u7a0b\u5e8f\u5458\u5de5\u5177\u5305\u7684\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\u3002\n GitHub Copilot\u53d1\u73b0\u6211\u5728\u5de5\u4f5c\u4e2d\u7684\u6d4b\u8bd5\u6587\u4ef6\u7f3a\u5c11\u7279\u5b9a\u6d4b\u8bd5\u5e76\u5efa\u8bae\u5e76\u4e3a\u6211\u5199\u4e86\u6d4b\u8bd5\u3002\n  GitHub CopIlot\u662fAI\u5bf9\u7a0b\u5e8f\u5458\uff0c\u53ef\u5e2e\u52a9\u60a8\u66f4\u5feb\u5730\u7f16\u5199\u4ee3\u7801\u548c\u66f4\u5c11\u7684\u5de5\u4f5c\u3002 github copilot\u4ece\u8bc4\u8bba\u548c\u4ee3\u7801\u4e2d\u7ed8\u5236\u4e0a\u4e0b\u6587\uff0c\u5e76\u7acb\u5373\u5efa\u8bae\u5355\u4e2a\u7ebf\u6761\u548c\u6574\u4e2a\u51fd\u6570\u3002 GitHub Copilot\u7531Openai Codex\u63d0\u4f9b\u52a8\u529b\uff0c\u662f\u7531Openai\u521b\u5efa\u7684\u65b0AI\u7cfb\u7edf\u3002 GitHub CopIlot\u6280\u672f\u9884\u89c8\u53ef\u4f5c\u4e3aVisual Studio\u4ee3\u7801\u6269\u5c55\u540d\u53ef\u7528\u3002\n Openai Codex\u57f9\u8bad\u4e86\u516c\u5f00\u7684\u6e90\u4ee3\u7801\u548c\u81ea\u7136\u8bed\u8a00\uff0c\u56e0\u6b64\u5b83\u7406\u89e3\u7f16\u7a0b\u548c\u4eba\u7c7b\u3002 GitHub Copilot Editor\u6269\u5c55\u5c06\u60a8\u7684\u8bc4\u8bba\u548c\u4ee3\u7801\u53d1\u9001\u5230GitHub Copilot\u670d\u52a1\uff0c\u7136\u540e\u4f7f\u7528Openai Codex\u6765\u5408\u6210\u548c\u5efa\u8bae\u5355\u4e2a\u7ebf\u6761\u548c\u6574\u4e2a\u529f\u80fd\u3002\n \u6211\u4eec\u6700\u8fd1\u5728\u5f00\u6e90repos\u4e2d\u5bf9\u4e00\u7ec4Python\u51fd\u6570\u8fdb\u884c\u4e86\u57fa\u51c6\u6d4b\u8bd5\uff0c\u8be5\u51fd\u6570\u5177\u6709\u826f\u597d\u7684\u6d4b\u8bd5\u8986\u76d6\u8303\u56f4\u3002\u6211\u4eec\u6d88\u5931\u4e86\u51fd\u6570\u4f53\uff0c\u5e76\u8981\u6c42GitHub CopIlot\u586b\u8865\u5b83\u4eec\u3002\u8be5\u6a21\u578b\u5728\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u65f643\uff05\u7684\u65f6\u95f4\u5f97\u5230\u4e8643\uff05\uff0c\u800c57\uff05\u7684\u65f6\u95f4\u5141\u8bb810\u6b21\u5c1d\u8bd5\u3002\u5b83\u4e00\u76f4\u90fd\u66f4\u806a\u660e\u3002 \n\u4e0d\u53ef\u4ee5\u3002github copilot\u8bd5\u56fe\u4e86\u89e3\u4f60\u7684\u610f\u56fe\u5e76\u751f\u6210\u5b83\u53ef\u4ee5\u7684\u6700\u597d\u7684\u4ee3\u7801\uff0c\u4f46\u5b83\u8868\u660e\u7684\u4ee3\u7801\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u6709\u6548\uff0c\u751a\u81f3\u6709\u610f\u4e49\u3002\u867d\u7136\u6211\u4eec\u6b63\u5728\u52aa\u529b\u4f7fGitHub CopIlot\u66f4\u597d\u5730\uff0c\u4f46\u5e94\u4ed4\u7ec6\u6d4b\u8bd5GitHub Copilot\u5efa\u8bae\u7684\u4ee3\u7801\uff0c\u5982\u4efb\u4f55\u5176\u4ed6\u4ee3\u7801\u4e00\u6837\u4ed4\u7ec6\u6d4b\u8bd5\uff0c\u5ba1\u67e5\u548c\u5ba1\u6838\u3002\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u60a8\u603b\u662f\u8d1f\u8d23\u3002\n \u5c06\u4ee3\u7801\u5212\u5206\u4e3a\u5c0f\u529f\u80fd\u65f6\uff0c\u5b83\u6700\u4f73\u5de5\u4f5c\uff0c\u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u79f0\u53c2\u6570\uff0c\u5e76\u6839\u636e\u60a8\u7684\u65b9\u5f0f\u5199\u5165\u597d\u7684\u6587\u6863\u548c\u8bc4\u8bba\u3002\u5f53\u5b83\u5e2e\u52a9\u60a8\u5bfc\u822a\u4e0d\u719f\u6089\u7684\u5e93\u6216\u6846\u67b6\u65f6\uff0c\u5b83\u4f3c\u4e4e\u4e5f\u662f\u6700\u597d\u7684\u3002\n github copilot\u5728\u63d0\u51fa\u5efa\u8bae\u65f6\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u3002\u5b83\u8fd8\u6ca1\u6709\u5c06\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u6587\u4ef6\u4f5c\u4e3a\u5408\u6210\u7684\u8f93\u5165\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f8b\u5982\uff0c\u5c06\u7c7b\u578b\u58f0\u660e\u590d\u5236/\u7c98\u8d34\u5230\u60a8\u6b63\u5728\u5904\u7406\u7684\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u6539\u5584GitHub Copilot\u7684\u5efa\u8bae\u3002\u8fd9\u662f\u6211\u4eec\u5c06\u6765\u4f1a\u6539\u5584\u7684\u4e8b\u60c5\u3002\n github copilot\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6d4b\u8bd5\u5b83\u6240\u6697\u793a\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u4ee3\u7801\u751a\u81f3\u53ef\u80fd\u65e0\u6cd5\u7f16\u8bd1\u6216\u8fd0\u884c\u3002 GitHub CopIlot\u53ea\u80fd\u6301\u6709\u975e\u5e38\u6709\u9650\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u751a\u81f3\u526a\u5207\u4e86\u8d85\u8fc7\u51e0\u767e\u884c\u7684\u5355\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u4ec5\u4f7f\u7528\u7acb\u5373\u4e0a\u4e0b\u6587\u3002\u548cGitHub Copilot\u53ef\u80fd\u4f1a\u5efa\u8bae\u56fe\u4e66\u9986\u548c\u8bed\u8a00\u7684\u65e7\u6216\u5df2\u5f03\u7528\u7684\u7528\u9014\u3002\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u4ee3\u7801\uff0c\u4f46\u60a8\u53ef\u4ee5\u81ea\u884c\u627f\u62c5\u98ce\u9669\u3002\n \u8d21\u732e\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u6ce8\u518c\u6280\u672f\u9884\u89c8\u3002\u901a\u8fc7\u4f7f\u7528GitHub CopIlot\u5e76\u5171\u4eab\u60a8\u7684\u53cd\u9988\uff0c\u60a8\u53ef\u4ee5\u5e2e\u52a9\u6539\u8fdb\u7535\u6e90GitHub Copilot\u7684\u6a21\u578b\u3002\n \u5f53\u7136\uff01\u8bf7\u4f7f\u7528#githubcopilot\u5f53\u60a8\u53d1\u5e03\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u60a8\u7684\u4ea7\u54c1\uff01\n GitHub Copilot\u7531Openai Codex\u63d0\u4f9b\u52a8\u529b\uff0c\u662f\u7531Openai\u521b\u5efa\u7684\u65b0AI\u7cfb\u7edf\u3002\u5b83\u5df2\u7ecf\u63a5\u53d7\u4e86\u5404\u79cd\u82f1\u8bed\u8bed\u8a00\u548c\u6e90\u4ee3\u7801\u7684\u57f9\u8bad\uff0c\u5305\u62ecGithub\u4e0a\u7684\u516c\u5171\u5b58\u50a8\u5e93\u4e2d\u7684\u4ee3\u7801\u3002 \n\u57f9\u8bad\u673a\u5668\u5728\u516c\u5f00\u6570\u636e\u4e0a\u5b66\u4e60\u6a21\u578b\u73b0\u5728\u662f\u6574\u4e2a\u673a\u5668\u5b66\u4e60\u754c\u7684\u5e38\u89c1\u505a\u6cd5\u3002\u6a21\u578b\u4ece\u516c\u5171\u96c6\u4f53\u667a\u80fd\u589e\u5f3a\u4e86\u6d1e\u5bdf\u529b\u548c\u51c6\u786e\u6027\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u70ed\u8877\u4e8e\u4e0e\u8fd9\u4e9b\u4e3b\u9898\u7684\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u8ba8\u8bba\uff0c\u5e76\u5728\u5236\u5b9a\u9002\u5f53\u7684\u57f9\u8badAI\u6a21\u578b\u65b9\u9762\u7684\u884c\u4e1a\u3002\n \u5f53\u7b2c\u4e00\u6b21\u542f\u52a8\u65b0\u5e73\u53f0\u6216API\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u6700\u4e0d\u719f\u6089\u5b83\u3002\u8fd8\u6709\u5f88\u5c11\u4f7f\u7528\u7684\u516c\u5171\u4ee3\u7801\u4f7f\u7528\u8be5API\uff0c\u5e76\u4e14\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e0d\u592a\u53ef\u80fd\u5728\u6ca1\u6709\u5fae\u8c03\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u4ee3\u7801\u3002\u5728\u672a\u6765\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u7a81\u51fa\u8f83\u65b0\u7684API\u548c\u6837\u672c\u7684\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u4ed6\u4eec\u5728Github Copilot\u7684\u5efa\u8bae\u4e2d\u7684\u76f8\u5173\u6027\u3002\n GitHub Copilot\u662f\u4ee3\u7801\u5408\u6210\u5668\uff0c\u800c\u4e0d\u662f\u641c\u7d22\u5f15\u64ce\uff1a\u7edd\u5927\u591a\u6570\u4ee3\u7801\u662f\u552f\u4e00\u751f\u6210\u7684\uff0c\u4ece\u672a\u89c1\u8fc7\u3002\u6211\u4eec\u53d1\u73b0\u7ea60.1\uff05\u7684\u65f6\u95f4\uff0c\u5efa\u8bae\u53ef\u80fd\u5305\u542b\u4e00\u4e9b\u6765\u81ea\u8bad\u7ec3\u96c6\u7684\u9010\u5b57\u7684\u7247\u6bb5\u3002\u4ee5\u4e0b\u662f\u5bf9\u6a21\u578b\u7684\u884c\u4e3a\u8fdb\u884c\u6df1\u5165\u7814\u7a76\u3002\u5f53\u60a8\u4e0d\u63d0\u4f9b\u8db3\u591f\u7684\u4e0a\u4e0b\u6587\u65f6\uff08\u7279\u522b\u662f\u5728\u7f16\u8f91\u7a7a\u6587\u4ef6\u65f6\uff09\u65f6\uff0c\u53d1\u751f\u4e86\u8bb8\u591a\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6216\u8005\u5f53\u5b58\u5728\u5e38\u89c1\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u751a\u81f3\u662f\u901a\u7528\u7684\uff0c\u89e3\u51b3\u95ee\u9898\u3002\u6211\u4eec\u6b63\u5728\u6784\u5efa\u539f\u59cb\u8ddf\u8e2a\u5668\uff0c\u4ee5\u5e2e\u52a9\u68c0\u6d4b\u4ece\u57f9\u8bad\u96c6\u91cd\u590d\u7684\u7f55\u89c1\u4ee3\u7801\u5b9e\u4f8b\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5bf9GitHub Copilot\u7684\u5efa\u8bae\u63d0\u4f9b\u826f\u597d\u7684\u5b9e\u65f6\u51b3\u7b56\u3002\n \u60a8\u8d1f\u8d23\u5728GitHub Copilot\u7684\u5e2e\u52a9\u4e0b\u521b\u5efa\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u4ed4\u7ec6\u6d4b\u8bd5\uff0c\u67e5\u770b\u548c\u9a8c\u8bc1\u4ee3\u7801\uff0c\u6839\u636e\u60a8\u81ea\u5df1\u5199\u7684\u4efb\u4f55\u4ee3\u7801\u3002\n \u4e0d\uff0c\u867d\u7136\u6bcf\u4e2a\u53cb\u597d\u7684\u673a\u5668\u4eba\u559c\u6b22\u5076\u5c14\u7684\u8c22\u8c22\uff0c\u4f46\u4f60\u7edd\u4e0d\u6709\u4e49\u52a1\u4e49\u52a1\u4fe1\u7528GitHub Copilot\u3002\n \u7531\u4e8eGitHub Copilot\u5728\u516c\u5f00\u53ef\u7528\u7684\u4ee3\u7801\u4e0a\u57f9\u8bad\uff0c\u56e0\u6b64\u5176\u57f9\u8bad\u96c6\u5305\u62ec\u8be5\u4ee3\u7801\u4e2d\u5305\u542b\u7684\u516c\u5171\u4e2a\u4eba\u6570\u636e\u3002\u4ece\u6211\u4eec\u7684\u5185\u90e8\u6d4b\u8bd5\u6765\u770b\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u975e\u5e38\u7f55\u89c1\uff0c\u5373Github Copilot\u5efa\u8bae\u5305\u62ec\u4ece\u8bad\u7ec3\u96c6\u4e2d\u9010\u5b57\u7684\u4e2a\u4eba\u6570\u636e\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8be5\u6a21\u578b\u5c06\u5efa\u8bae\u4f3c\u4e4e\u662f\u4e2a\u4eba\u6570\u636e - \u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u7535\u8bdd\u53f7\u7801\uff0c\u8bbf\u95ee\u5bc6\u94a5\u7b49 - \u4f46\u5b9e\u9645\u4e0a\u662f\u4ece\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u6a21\u5f0f\u5408\u6210\u7684\u6784\u6210\u4fe1\u606f\u3002\u5bf9\u4e8e\u6280\u672f\u9884\u89c8\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9e\u65bd\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u8fc7\u6ee4\u5668\uff0c\u8be5\u8fc7\u6ee4\u5668\u4f1a\u5728\u6807\u51c6\u683c\u5f0f\u4e2d\u663e\u793a\u65f6\u963b\u6b62\u7535\u5b50\u90ae\u4ef6\uff0c\u4f46\u5982\u679c\u60a8\u52aa\u529b\u52aa\u529b\uff0c\u4ecd\u7136\u53ef\u4ee5\u63d0\u51fa\u8fd9\u79cd\u5185\u5bb9\u3002\n \u4e16\u754c\u4e0a\u6709\u5f88\u591a\u5177\u6709\u4e0d\u5b89\u5168\u7684\u7f16\u7801\u6a21\u5f0f\uff0c\u9519\u8bef\u6216\u5bf9\u8fc7\u65f6\u7684API\u6216\u4e60\u8bed\u7684\u5f15\u7528\u7684\u516c\u5171\u4ee3\u7801\u3002\u5f53GitHub Copilot\u57fa\u4e8e\u6b64\u6570\u636e\u5408\u6210\u4ee3\u7801\u5efa\u8bae\u65f6\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5408\u6210\u5305\u542b\u8fd9\u4e9b\u4e0d\u671f\u671b\u7684\u6a21\u5f0f\u7684\u4ee3\u7801\u3002\u8fd9\u662f\u6211\u4eec\u5728GitHub\u7684\u5f88\u591a\u5173\u4e8eGithub\u7684\u4e8b\u60c5\uff0c\u8fd1\u5e74\u6765\u6211\u4eec\u63d0\u4f9b\u4e86\u8bf8\u5982\u64cd\u4f5c\uff0c\u4f9d\u8d56\u548cCodeQL\u7b49\u5de5\u5177\u6765\u5f00\u6e90\u9879\u76ee\uff0c\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u3002\u540c\u6837\uff0c\u968f\u7740GitHub Copilot\u6539\u8fdb\uff0c\u6211\u4eec\u5c06\u52aa\u529b\u6392\u9664\u57f9\u8bad\u96c6\u4e2d\u7684\u4e0d\u5b89\u5168\u6216\u4f4e\u8d28\u91cf\u4ee3\u7801\u3002\u5f53\u7136\uff0c\u60a8\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528GitHub CopIlot\u4ee5\u53ca\u6d4b\u8bd5\u5b9e\u8df5\u548c\u5b89\u5168\u5de5\u5177\u4ee5\u53ca\u60a8\u81ea\u5df1\u7684\u5224\u65ad\u3002 \n\u6280\u672f\u9884\u89c8\u5305\u62ec\u7b5b\u9009\u5668\u6765\u963b\u6b62\u653b\u51fb\u6027\u8bcd\u8bed\uff0c\u907f\u514d\u5728\u654f\u611f\u4e0a\u4e0b\u6587\u4e2d\u7efc\u5408\u5efa\u8bae\u3002\u7531\u4e8e\u5e95\u5c42\u6280\u672f\u7684\u9884\u53d1\u5e03\u6027\uff0cGitHub Copilot\u6709\u65f6\u53ef\u80fd\u4ea7\u751f\u4e0d\u5e0c\u671b\u7684\u8f93\u51fa\uff0c\u5305\u62ec\u504f\u7f6e\uff0c\u6b67\u89c6\uff0c\u6ee5\u7528\u6216\u4ee4\u4eba\u53cd\u611f\u7684\u4ea7\u51fa\u3002\u5982\u679c\u60a8\u770b\u5230\u5192\u72af\u6027\u8f93\u51fa\uff0c\u8bf7\u76f4\u63a5\u5411CopIlot-safety@Github.com\u62a5\u544a\u5b83\u4eec\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u6539\u5584\u6211\u4eec\u7684\u4fdd\u969c\u63aa\u65bd\u3002 GitHub\u975e\u5e38\u8ba4\u771f\u5730\u63d0\u51fa\u8fd9\u4e00\u6311\u6218\uff0c\u6211\u4eec\u81f4\u529b\u4e8e\u4f7f\u7528GitHub Copilot\u6765\u89e3\u51b3\u5b83\u3002\n \u5e26\u5165\u66f4\u667a\u80fd\u7684\u7cfb\u7edf\u6709\u53ef\u80fd\u5bf9\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u5e26\u6765\u5de8\u5927\u7684\u53d8\u5316\u3002\u6211\u4eec\u9884\u8ba1\u8fd9\u9879\u6280\u672f\u5c06\u4f7f\u73b0\u6709\u5de5\u7a0b\u5e08\u80fd\u591f\u66f4\u52a0\u5bcc\u6709\u6210\u6548\uff0c\u51cf\u5c11\u624b\u52a8\u4efb\u52a1\uff0c\u5e76\u5e2e\u52a9\u4ed6\u4eec\u4e13\u6ce8\u4e8e\u6709\u8da3\u7684\u5de5\u4f5c\u3002\u6211\u4eec\u8fd8\u8ba4\u4e3aGitHub Copilot\u6709\u53ef\u80fd\u964d\u4f4e\u8fdb\u5165\u969c\u788d\uff0c\u4f7f\u66f4\u591a\u4eba\u80fd\u591f\u63a2\u7d22\u8f6f\u4ef6\u5f00\u53d1\u5e76\u52a0\u5165\u4e0b\u4e00\u4ee3\u5f00\u53d1\u4eba\u5458\u3002\n \u4e3a\u4e86\u751f\u6210\u5efa\u8bae\uff0cGithub CopIlot\u5c06\u60a8\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u4f20\u8f93\u5230\u670d\u52a1\u3002\u6b64\u4e0a\u4e0b\u6587\u7528\u4e8e\u7efc\u5408\u60a8\u7684\u5efa\u8bae\u3002 GitHub Copilot\u8fd8\u8bb0\u5f55\u4e86\u5efa\u8bae\u662f\u5426\u88ab\u63a5\u53d7\u6216\u62d2\u7edd\u3002\u6b64\u9065\u6d4b\u7528\u4e8e\u6539\u5584AI\u7cfb\u7edf\u7684\u672a\u6765\u7248\u672c\uff0c\u4ee5\u4fbfGitHub Copilot\u5c06\u6765\u53ef\u4ee5\u4e3a\u6240\u6709\u7528\u6237\u63d0\u4f9b\u66f4\u597d\u7684\u5efa\u8bae\u3002\u5728\u672a\u6765\uff0c\u6211\u4eec\u5c06\u4e3a\u7528\u6237\u63d0\u4f9b\u63a7\u5236\u5982\u4f55\u4f7f\u7528\u9065\u6d4b\u7684\u9009\u9879\u3002\u6709\u5173\u6211\u4eec\u4f7f\u7528\u9065\u6d4b\u7684\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\n \u6240\u6709\u6570\u636e\u90fd\u88ab\u5b89\u5168\u5730\u53d1\u9001\u548c\u5b58\u50a8\u3002\u5bf9\u9065\u6d4b\u7684\u8bbf\u95ee\u4e25\u683c\u9650\u4e8e\u4e2a\u4eba\u7684\u5fc5\u8981\u6027\u3002\u68c0\u67e5\u6536\u96c6\u7684\u6e90\u4ee3\u7801\u5c06\u4e3b\u8981\u662f\u81ea\u52a8\u7684\uff0c\u5f53\u4eba\u7c7b\u8bfb\u53d6\u5b83\u65f6\uff0c\u5b83\u4e13\u95e8\u7528\u4e8e\u6539\u5584\u6a21\u578b\u6216\u68c0\u6d4b\u6ee5\u7528\u3002\n \u4e0d\u53ef\u4ee5\u3002\u6211\u4eec\u4f7f\u7528\u9065\u6d4b\u6570\u636e\uff0c\u5305\u62ec\u5173\u4e8e\u54ea\u4e9b\u5efa\u8bae\u7528\u6237\u63a5\u53d7\u6216\u62d2\u7edd\u7684\u4fe1\u606f\uff0c\u4ee5\u6539\u5584\u6a21\u578b\u3002\u4e3a\u5176\u4ed6\u7528\u6237\u751f\u6210\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u4e0d\u4f1a\u5f15\u7528\u60a8\u7684\u79c1\u4eba\u4ee3\u7801\u3002\n GitHub Copilot\u9700\u8981\u6700\u5148\u8fdb\u7684AI\u786c\u4ef6\u3002\u5728\u6280\u200b\u200b\u672f\u9884\u89c8\u671f\u95f4\uff0c\u6211\u4eec\u5c06GitHub Copilot\u63d0\u4f9b\u7ed9\u6709\u9650\u6570\u91cf\u7684\u6d4b\u8bd5\u4eba\u5458\u3002\u5f53\u6211\u4eec\u63a8\u51fa\u5546\u4e1a\u4ea7\u54c1\u65f6\uff0c\u6211\u4eec\u5c06\u5c3d\u53ef\u80fd\u5e7f\u6cdb\u5730\u63d0\u4f9b\u3002\n \u5982\u679c\u6280\u672f\u9884\u89c8\u6210\u529f\uff0c\u6211\u4eec\u7684\u8ba1\u5212\u662f\u5728\u5c06\u6765\u5efa\u7acbGitHub Copilot\u7684\u5546\u4e1a\u7248\u672c\u3002\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u9884\u89c8\u6765\u4e86\u89e3\u4eba\u4eec\u5982\u4f55\u4f7f\u7528GitHub Copilot\u4ee5\u53ca\u5728\u89c4\u6a21\u4e0a\u8fd0\u884c\u5b83\u6240\u9700\u7684\u5185\u5bb9\u3002 \n\u8fd8\u6ca1\u6709\u3002 \u76ee\u524d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u4ec5\u5728Visual Studio\u4ee3\u7801\u4e2d\u63d0\u4f9b\u6700\u4f73\u4f53\u9a8c\u3002 ", "note_en": "With GitHub Copilot, get suggestions for whole lines or entire functions right inside your editor.\n   Trained on billions of lines of public code, GitHub Copilot puts the knowledge you need at your fingertips, saving you time and helping\u00a0you stay focused.\n GitHub Copilot is available today as a Visual Studio Code extension. It works wherever Visual Studio Code works \u2014 on your machine or in the cloud on  GitHub Codespaces. And it\u2019s fast enough to use as you type.\n GitHub Copilot works with a broad set of frameworks and languages. The technical preview does especially well for Python, JavaScript, TypeScript, Ruby, and Go, but it understands dozens of languages and can help you find your way around almost anything.\n With GitHub Copilot, you\u2019re always in charge. You can cycle through alternative suggestions, choose which to accept or reject, and manually edit suggested code. GitHub Copilot adapts to the edits you make, matching your coding style.\n GitHub Copilot is powered by Codex, the new AI system created by OpenAI. GitHub Copilot understands significantly more context than most code assistants. So, whether it\u2019s in a docstring, comment, function name, or the code itself, GitHub Copilot uses the context you\u2019ve provided and synthesizes code to match. Together with OpenAI, we\u2019re designing GitHub Copilot to get smarter at producing safe and effective code as developers use it.\n  Skip the docs and stop searching for examples. GitHub Copilot helps you stay focused right in your editor.\n Convert comments to code. Write a comment describing the logic you want, and let GitHub Copilot assemble the code for you.\n   Autofill for repetitive code. GitHub Copilot works great for quickly producing boilerplate and repetitive code patterns. Feed it a few examples and let it generate the rest!\n Tests without the toil. Tests are the backbone of any robust software engineering project. Import a unit test package, and let GitHub Copilot suggest tests that match your implementation code.\n Show me alternatives. Want to evaluate a few different approaches? GitHub Copilot can show you a list of solutions. Use the code as provided, or edit it to meet your needs.\n Whether you\u2019re working in a new language or framework, or just learning to code, GitHub Copilot can help you find your way. Tackle a bug, or learn how to use a new framework without spending most of your time spelunking through the docs or\u00a0searching the web.\n Hundreds of engineers, including many of our own, have been using GitHub Copilot every day. It&#39;s transformed the way they work \u2013 here&#39;s what they have to say:\n Trying to code in an unfamiliar language by googling everything is like navigating a foreign country with just a phrase book. Using GitHub Copilot is like hiring an interpreter.\n It surprised me with how precisely it understood my comment and generated accurate suggestions. The ability to choose from 10 different suggestions was the cherry on top.\n In the first day, GitHub Copilot already taught me about a nuance in Javascript object comparison and is as comfortable with our database schema as I am. This is the single most mind-blowing application of ML I\u2019ve ever seen.\n I&#39;m impressed by how GitHub Copilot seems to know exactly what I want to type next. GitHub Copilot is particularly helpful when working on React components, where it makes eerily accurate predictions. GitHub Copilot has become an indispensable part of my programmer toolbelt.\n GitHub Copilot discovered that a test file I was working in was missing a specific test and suggested and wrote the test for me.\n  GitHub Copilot is an AI pair programmer that helps you write code faster and with less work. GitHub Copilot draws context from comments and code, and suggests individual lines and whole functions instantly. GitHub Copilot is powered by OpenAI Codex, a new AI system created by OpenAI. The GitHub Copilot technical preview is available as a Visual Studio Code extension.\n OpenAI Codex was trained on publicly available source code and natural language, so it understands both programming and human languages. The GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest individual lines and whole functions.\n We recently benchmarked against a set of Python functions that have good test coverage in open source repos. We blanked out the function bodies and asked GitHub Copilot to fill them in. The model got this right 43% of the time on the first try, and 57% of the time when allowed 10 attempts. And it\u2019s getting smarter all the time.\n No. GitHub Copilot tries to understand your intent and to generate the best code it can, but the code it suggests may not always work, or even make sense. While we are working hard to make GitHub Copilot better, code suggested by GitHub Copilot should be carefully tested, reviewed, and vetted, like any other code. As the developer, you are always in charge.\n It works best when you divide your code into small functions, use meaningful names for functions parameters, and write good docstrings and comments as you go. It also seems to do best when it\u2019s helping you navigate unfamiliar libraries or frameworks.\n GitHub Copilot uses the current file as context when making its suggestions. It does not yet use other files in your project as inputs for synthesis. This means that, for example, copy/pasting a type declaration into the file you\u2019re working on may improve suggestions from GitHub Copilot. This is something we will improve in the future.\n GitHub Copilot doesn\u2019t actually test the code it suggests, so the code may not even compile or run. GitHub Copilot can only hold a very limited context, so even single source files longer than a few hundred lines are clipped and only the immediately preceding context is used. And GitHub Copilot may suggest old or deprecated uses of libraries and languages. You can use the code anywhere, but you do so at your own risk.\n The best way to contribute is to sign up for the technical preview. By using GitHub Copilot and sharing your feedback, you help to improve the models that power GitHub Copilot.\n Of course! Please use  #GitHubCopilot when you post so we can see what you produce!\n GitHub Copilot is powered by OpenAI Codex, a new AI system created by OpenAI. It has been trained on a selection of English language and source code from publicly available sources, including code in public repositories on GitHub.\n Training machine learning models on publicly available data is now common practice across the machine learning community. The models gain insight and accuracy from the public collective intelligence. But this is a new space, and we are keen to engage in a discussion with developers on these topics and lead the industry in setting appropriate standards for training AI models.\n When a new platform or API is launched for the first time, developers are the least familiar with it. There is also very little public code available that uses that API, and a machine learning model is unlikely to generate the code without fine tuning. In the future, we will provide ways to highlight newer APIs and samples to raise their relevance in GitHub Copilot\u2019s suggestions.\n GitHub Copilot is a code synthesizer, not a search engine: the vast majority of the code that it suggests is uniquely generated and has never been seen before. We found that about 0.1% of the time, the suggestion may contain some snippets that are verbatim from the training set.  Here is an in-depth study on the model\u2019s behavior. Many of these cases happen when you don\u2019t provide sufficient context (in particular, when editing an empty file), or when there is a common, perhaps even universal, solution to the problem. We are building an origin tracker to help detect the rare instances of code that is repeated from the training set, to help you make good real-time decisions about GitHub Copilot\u2019s suggestions.\n You are responsible for the content you create with the assistance of GitHub Copilot. We recommend that you carefully test, review, and vet the code, as you would with any code you write yourself.\n No. While every friendly robot likes the occasional word of thanks, you are in no way obligated to credit GitHub Copilot.\n Because GitHub Copilot was trained on publicly available code, its training set included public personal data included in that code. From our internal testing, we found it to be extremely rare that GitHub Copilot suggestions included personal data verbatim from the training set. In some cases, the model will suggest what appears to be personal data \u2013 email addresses, phone numbers, access keys, etc. \u2013 but is actually made-up information synthesized from patterns in training data. For the technical preview, we have implemented a rudimentary filter that blocks emails when shown in standard formats, but it\u2019s still possible to get the model to suggest this sort of content if you try hard enough.\n There\u2019s a lot of public code in the world with insecure coding patterns, bugs, or references to outdated APIs or idioms. When GitHub Copilot synthesizes code suggestions based on this data, it can also synthesize code that contains these undesirable patterns. This is something we care a lot about at GitHub, and in recent years we\u2019ve provided tools such as Actions, Dependabot, and CodeQL to open source projects to help improve code quality. Similarly, as GitHub Copilot improves, we will work to exclude insecure or low-quality code from the training set. Of course, you should always use GitHub Copilot together with testing practices and security tools, as well as your own judgment.\n The technical preview includes filters to block offensive words and avoid synthesizing suggestions in sensitive contexts. Due to the pre-release nature of the underlying technology, GitHub Copilot may sometimes produce undesired outputs, including biased, discriminatory, abusive, or offensive outputs. If you see offensive outputs, please report them directly to  copilot-safety@github.com, so that we can improve our safeguards. GitHub takes this challenge very seriously and we are committed to addressing it with GitHub Copilot.\n Bringing in more intelligent systems has the potential to bring enormous change to the developer experience. We expect this technology will enable existing engineers to be more productive, reducing manual tasks and helping them focus on interesting work. We also believe that GitHub Copilot has the potential to lower barriers to entry, enabling more people to explore software development and join the next generation of developers.\n In order to generate suggestions, GitHub Copilot transmits part of the file you are editing to the service. This context is used to synthesize suggestions for you. GitHub Copilot also records whether the suggestions are accepted or rejected. This telemetry is used to improve future versions of the AI system, so that GitHub Copilot can make better suggestions for all users in the future. In the future we will give users the option to control how their telemetry is used. More information about our use of telemetry can be found  here.\n All data is transmitted and stored securely. Access to the telemetry is strictly limited to individuals on a need-to-know basis. Inspection of the gathered source code will be predominantly automatic, and when humans read it, it is specifically with the aim of improving the model or detecting abuse.\n No. We use telemetry data, including information about which suggestions users accept or reject, to improve the model. We do not reference your private code when generating code for other users.\n GitHub Copilot requires state-of-the-art AI hardware. During the technical preview, we are offering GitHub Copilot to a limited number of testers for free. When we launch a commercial product, we will make it available as broadly as possible.\n If the technical preview is successful, our plan is to build a commercial version of GitHub Copilot in the future. We want to use the preview to learn how people use GitHub Copilot and what it takes to operate it at scale.\n Not yet. For now, we\u2019re focused on delivering the best experience in Visual Studio Code only.", "posttime": "2021-06-29 23:09:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,github,copilot,\u4ee3\u7801", "title": "github copilot\uff1a\u60a8\u7684AI\u5bf9\u7a0b\u5e8f\u5458 ", "title_en": "GitHub Copilot: Your AI Pair Programmer", "transed": 1, "url": "https://copilot.github.com", "via": "", "real_tags": ["\u7a0b\u5e8f", "github", "copilot", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1068530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5b66\u671f\uff0c\u6211\u6b63\u5728\u6559\u6388\u521b\u65b0\u7ecf\u6d4e\u5b66\u7684\u65b0\u8bfe\u7a0b\uff0c\u6765\u81ea\u5404\u79cd\u80cc\u666f\u611f\u5174\u8da3\u7684\u5927\u5b66\u751f\uff08\u552f\u4e00\u7684\u5148\u51b3\u6761\u4ef6\u662fEcon 101\uff09\uff0c\u6211\u8ba4\u4e3a\u5176\u4ed6\u4eba\u53ef\u80fd\u4f1a\u53d1\u73b0\u9605\u8bfb\u5217\u8868\u6709\u8da3\u3002\u8bfb\u6570\u901a\u5e38\u951a\u5b9a\u5230\u6700\u8fd1\u7684\u521b\u65b0\u7ecf\u6d4e\u5b66\u7814\u7a76\uff0c\u800c\u662f\u4e3a\u4e86\u4f7f\u6ca1\u6709\u7ecf\u6d4e\u5b66\u5b66\u4f4d\u7684\u4eba\u4eec\u80fd\u591f\u83b7\u5f97\u7684\u8bfe\u7a0b\uff0c\u6211\u8bd5\u56fe\u627e\u5230\u5e76\u521b\u9020\u53ef\u8bbf\u95ee\u7684\u7814\u7a76\u6982\u8ff0\u3002\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u5bf9\u4efb\u4f55\u5bf9\u8be5\u4e3b\u9898\u611f\u5174\u8da3\u7684\u4eba\u90fd\u6709\u7528\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u80cc\u666f\u5982\u4f55\u3002\n \u8b66\u544a\uff1a\u8fd9\u4e9b\u8bfb\u6570\u88ab\u9009\u4e2d\u4ee5\u8bf4\u660e\u521b\u65b0\u7ecf\u6d4e\u5b66\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u5e76\u5bfc\u81f4\u826f\u597d\u7684\u8ba8\u8bba\u3002\u5b83\u4eec\u4e0d\u4e00\u5b9a\u662f\u4e3b\u9898\u4e0a\u7684\u201c\u6700\u4f73\u201d\u6216\u201c\u6700\u4ee4\u4eba\u4fe1\u670d\u7684\u201d\u8bba\u6587\uff0c\u5f53\u7136\u8fd9\u4e2a\u5217\u8868\u8fdc\u975e\u8be6\u5c3d\u65e0\u9057\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u6211\u4e0d\u4e00\u5b9a\u652f\u6301\u6240\u6709\u7684\u8bba\u636e\u3002\n   \u201c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u8fdb\u6b65\u79d1\u5b66\u201d\uff082019\u5e74\uff09\u7531Patrick Collison\u548cTyler Cowen\uff082019\uff09\n   \u201c\u7b2c3\u7ae0\uff1a\u5931\u53bb\u4e86\u6b27\u6d32\u63a2\u9669\u5bb6\u201d\uff082016\u5e74\uff09\u5728\u6211\u4eec\u6210\u529f\u7684\u79d8\u5bc6\u4e0a\uff0cJoseph Henrich\u3002\n    \u201c\u53cc\u524d\u6cbf\uff1a\u4e13\u5229\u53d1\u660e\u548c\u5148\u524d\u79d1\u5b66\u63a8\u8fdb\u201d\uff082017\u5e74\uff09\u7531\u7a46\u7f55\u9ed8\u5fb7Ahmadpoor\u548cBenjamin Jones\n  \u6458\u5f55\uff1a\u201c\u901a\u8fc7\u505a\u51fa\u6765\u6e90\u7684\u5b66\u4e60\uff1a\u6765\u81ea\u6c7d\u8f66\u88c5\u914d\u5382\u7684\u8bc1\u636e\u201d\uff082013\uff09\u7531Steven D. Levitt\uff0cJohn A.\u540d\u5355\u548cChad Syverson\u3002\n  PGS 70-76\uff1a\u201c\u7b2c4\u7ae0\uff1a\u4ec0\u4e48\u662f\u5927\u8111\uff1f\u6216\u8005\uff0c\u8fdb\u5316\u5982\u4f55\u5077\u8d70\u6211\u4eec\u7684\u80c6\u91cf\u201c\uff082016\uff09\u5728Joseph Henrich\u53d6\u5f97\u6210\u529f\u7684\u79d8\u5bc6 \n\u201c\u53d1\u660e\u548c\u7d2f\u79ef\u6587\u5316\u901a\u8fc7\u5728\u7ebf\u7f16\u7a0b\u7ade\u8d5b\u4e2d\u7684\u8c03\u6574\u548c\u8de8\u8d8a\u5f0f\u201d\uff082018\uff09\u7531Elena Miu\uff0cNed Gulely\uff0cKevin Laland\u548cLuke Rendell\u3002\n \u6458\u5f55\uff08\u53d1\u660e\u667a\u80fd\u624b\u673a\u952e\u76d8\uff09\uff1a\u521b\u610f\u9009\u62e9\uff1a\u5728\u53f2\u8482\u592b\u4e54\u5e03\u65af\u9ec4\u91d1\u65f6\u4ee3\u671f\u95f4\u7684\u82f9\u679c\u8bbe\u8ba1\u8fc7\u7a0b\u5185\uff082018\u5e74\uff09\u7531Ken Kocienda\uff082018\uff09\n   \u201c\u4e3a\u4ec0\u4e48\u5927\u57ce\u5e02\u63a8\u5e7f\u7684\u521b\u65b0\u5c11\u4e8e\u4ed6\u4eec\u66fe\u7ecf\u505a\u8fc7\u7684\u201d\uff082015\uff09\u7531\u57c3\u91cc\u514b\u00b7\u8d3e\u5e26\uff08\u201c\u57ce\u5e02\u548c\u601d\u60f3\u7684\u5199\u4f5c\u201d\u7531Packalen\u548cBhattacharya\uff09\n \u201c\u521b\u65b0\u5730\u7406\u201d\uff082017\u5e74\uff09\u7531Richard Florida\uff08\u201c\u4f2f\u514b\u65af\u548cGaetani\u7684\u201d\u975e\u4f20\u7edf\u521b\u65b0\u7684\u5730\u7406\u5b66\u7684\u64b0\u5199\u201c\uff09\n  \u64ad\u5ba2\uff1a\u201c\u66b4\u529b\u9650\u5236\u7ecf\u6d4e\u6d3b\u52a8\u5982\u4f55\u201d\uff082019\u5e74\uff09\u5728\u5730\u7403\u4e0a\u7684\u8d27\u5e01\uff08\u8ba8\u8bba\u201c\u66b4\u529b\u548c\u7ecf\u6d4e\u6d3b\u52a8\uff1a\u6765\u81ea\u975e\u6d32\u88d4\u7f8e\u56fd\u4e13\u5229\u7684\u8bc1\u636e\uff0c1870-1940\u201d\uff082014\uff09\u7531Lisa Cook\uff09\n  \u975e\u6280\u672f\u6458\u8981\uff1a\u201c\u8c01\u6210\u4e3a\u7f8e\u56fd\u7684\u53d1\u660e\u8005\uff1f\u66b4\u9732\u4e8e\u521b\u65b0\u7684\u91cd\u8981\u6027\u201c\uff082018\uff09\u7531Alex Bell\uff0cRaj Chetty\uff0cXavier Jaravel\uff0cNevianna Petkova\u548cJohn Van Reenen\n 118-120\u3002 \u201c\u7b2c7\u7ae0\uff1a\u5173\u4e8e\u4fe1\u4ef0\u7684\u8d77\u6e90\u201d\uff082016\uff09\u5728Joseph Henrich\u53d6\u5f97\u6210\u529f\u7684\u79d8\u5bc6\u3002 \n\u7814\u7a76\u6458\u8981\uff1a\u201c\u8bc6\u522b\u6280\u672f\u6ea2\u51fa\u7387\u548c\u4ea7\u54c1\u5e02\u573a\u7ade\u4e89\u201d\uff082013\uff09\u7531Nicholas Bloom\uff0cMark Schankerman\u548cJohn Van Reenen\u3002\n    Efferpt\uff1a\u201c\u4e13\u5229\u5236\u5ea6\u7684\u6027\u8d28\u548c\u529f\u80fd\u201d\uff081977\u5e74\uff09\u7531Edmund Kitch\n  \u201c\u6fc0\u52b1\u521b\u65b0\uff1a\u6dfb\u52a0\u5230\u5de5\u5177\u5957\u4ef6\u201d\uff082010\uff09\u7531Michael Kremer\u548cHeidi Williams\n  \u7814\u7a76\u6458\u8981\uff08\u5373\u5c06\u5230\u6765\uff09\uff1a\u201c\u78b3\u7a0e\uff0c\u8def\u5f84\u4f9d\u8d56\u548c\u6307\u5bfc\u6280\u672f\u53d8\u8fc1\uff1a\u6765\u81ea\u6c7d\u8f66\u884c\u4e1a\u7684\u8bc1\u636e\u201d\uff082016\uff09\u7531Philippe Aghion\uff0cAntoine Dechezplepretre\uff0cDavid Hemous\uff0cRalf Martin\u548cJohn Van Reenen\u3002\n  \u7814\u7a76\u6458\u8981\uff08\u5373\u5c06\u6765\u4e34\uff09\uff1a\u201c\u82cf\u8054\u5d29\u6e83\u548c\u7f8e\u56fd\u6570\u5b66\u5bb6\u7684\u751f\u4ea7\u529b\u201d\uff082012\u5e74\uff09\u7531George Borjas\u548cKirk Doran\u8fdb\u884c\u3002\n  \u7814\u7a76\u6458\u8981\uff08\u5373\u5c06\u6765\u4e34\uff09\uff1a\u201c\u6fc0\u52b1\u548c\u521b\u9020\u529b\uff1a\u6765\u81ea\u751f\u547d\u79d1\u5b66\u7684\u8bc1\u636e\u201d\uff082011\uff09Pierre Azoulay\uff0cJoshua S. Graff Zivin\u548cGustavo Manso\u3002\n  \u201c\u77e5\u8bc6\u4ea7\u4e1a\u56e2\u961f\u7684\u4f18\u52bf\u8d8a\u6765\u8d8a\u9ad8\uff0c\u65af\u7279\u51e1\u00b7\u6c83\u8d6b\u8482\uff0c\u672c\u6770\u660eF.\u743c\u65af\u548c\u5e03\u83b1\u6069Uzzi\u3002 \n\u6458\u5f55\uff1a\u201c\u8d44\u52a9\u7a81\u7834\u7814\u7a76\uff1aPierre Azoulay\uff0cErica Fuchs\uff0cAnna Goldstein\u548cMichael Kierney\u7684\u201dArpa Models\u201c\u7684\u627f\u8bfa\u548c\u6311\u6218\n  \u201c\u63a8\u5e7f\u521b\u65b0\u7684\u5de5\u5177\u5305\u201d\uff082019\u5e74\uff09\u7531Nicholas Bloom\uff0cJonathan Van Reenen\u548cHeidi Williams\u3002\n   \u201c\u7f8e\u56fd\u521b\u65b0\u7684\u53d8\u5316\u7ed3\u6784\uff1a\u7ecf\u6d4e\u589e\u957f\u7684\u4e00\u4e9b\u8b66\u793a\u8a00\u8bba\u201d\uff082019\uff09\u7531Ashish Arora\uff0cSharon Belenzon\uff0cAndrea Patacconi\u548cJungkyu Suh\u3002\n  \u201c\u7f8e\u56fd\u521b\u65b0\u672a\u6765\u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48\uff1f\u201d \uff082018\uff09Brian Kelly\uff0cDimitris Papanikolaou\uff0cAmit Seru\u548cMatt Taddy\u7684Andrew Van Dam\uff08\u8861\u91cf\u957f\u671f\u521b\u65b0\u7684\u4f5c\u54c1\uff09\n  \u7814\u7a76\u6458\u8981\uff08\u5373\u5c06\u5230\u6765\uff09\uff1a\u201c\u662f\u96be\u4ee5\u627e\u5230\u7684\u60f3\u6cd5\u5417\uff1f\u201d \uff082019\u5e74\uff09\u7531Nicholas Bloom\uff0cCharles Jones\uff0cJohn Van Reenen\u548cMichael Webb\u3002\n Nebr Report Research\u6458\u8981\uff1a\u201c\u957f\u671f\u548c\u4e2d\u671f\u7684\u589e\u957f\u901f\u5ea6\u8f83\u6162\u201d\uff082015\uff09\u7531\u7f57\u4f2f\u7279\u6208\u767b\n  \u201c\u827e\u9769\u547d\uff1a\u8d85\u7ea7\u5316\u7684\u9053\u8def\uff1a\u7b2c1\u548c\u7b2c2\u90e8\u5206\u201d\uff082015\u5e74\uff09\u7531Tim Urban\u3002 ", "note_en": "This semester I\u2019m teaching a new class on the economics of innovation targeted to interested undergraduates from a wide range of backgrounds (the only prerequisite is Econ 101) and I thought others might find the reading list interesting. The readings are usually anchored to recent research in the economics of innovation, but to make the course accessible to people without degrees in economics I\u2019ve tried to find and create accessible overviews of the research. So I hope this is useful for anyone interested in the topic, regardless of their background.\n Caveat: these readings are selected to illustrate a big concept in the economics of innovation and to lead to a good discussion. They aren\u2019t necessarily the \u201cbest\u201d or \u201cmost convincing\u201d paper on the topic and of course this list is far from exhaustive. Needless to say, I don\u2019t necessarily endorse all the arguments made either.\n   \u201c We Need a New Science of Progress\u201d (2019) by Patrick Collison and Tyler Cowen\n   \u201cChapter 3: Lost European Explorers\u201d (2016) in   The Secret of Our Success by Joseph Henrich.\n    \u201c The Dual Frontier: Patented Inventions and Prior Scientific Advance\u201d (2017) by Mohammed Ahmadpoor and Benjamin Jones\n  Excerpt:  \u201cTowards an Understanding of Learning by Doing: Evidence from an Automobile Assembly Plant\u201d (2013) by Steven D. Levitt, John A. List, and Chad Syverson.\n  pgs 70-76: \u201cChapter 4: What are big brains for? Or, how evolution stole our guts\u201d (2016) in   The Secret of Our Success by Joseph Henrich\n    \u201c Invention and Cumulative Culture Through Tweaks and Leaps in Online Programming Contests\u201d (2018) by Elena Miu, Ned Gulley, Kevin Laland, and Luke Rendell.\n Excerpt (inventing a smartphone keyboard):   Creative Selection: Inside Apple\u2019s Design Process During the Golden Age of Steve Jobs (2018) by Ken Kocienda\n   \u201c Why Big Cities Promote Less Innovation Than They Once Did\u201d (2015) by Eric Jaffe (write-up of \u201cCities and Ideas\u201d by Packalen and Bhattacharya)\n \u201c The Geography of Innovation\u201d (2017) by Richard Florida (write-up of \u201cThe Geography of Unconventional Innovation\u201d by Berkes and Gaetani)\n  Podcast: \u201c How Violence Limits Economic Activity\u201d (2019) on Planet Money (discussion of \u201c Violence and Economic Activity: Evidence from African American Patents, 1870-1940\u201d (2014) by Lisa Cook)\n  Non-technical summary: \u201c Who Becomes an Inventor in America? The Importance of Exposure to Innovation\u201d (2018) by Alex Bell, Raj Chetty, Xavier Jaravel, Nevianna Petkova, and John Van Reenen\n 118-120. \u201cChapter 7: On the Origins of Faith\u201d (2016) in   The Secret of Our Success by Joseph Henrich.\n   Research Digest: \u201c Identifying Technology Spillovers and Product Market Rivalry\u201d (2013) by Nicholas Bloom, Mark Schankerman, and John Van Reenen.\n    Excerpt: \u201c The Nature and Function of the Patent System\u201d (1977) by Edmund Kitch\n  \u201c Incentivizing Innovation: Adding to the Tool Kit\u201d (2010) by Michael Kremer and Heidi Williams\n  Research Digest (coming): \u201c Carbon Taxes, Path Dependency, and Directed Technical Change: Evidence from the Auto Industry\u201d (2016) by Philippe Aghion, Antoine Dechezplepretre, David Hemous, Ralf Martin, and John Van Reenen.\n  Research Digest (coming): \u201c The Collapse of the Soviet Union and the Productivity of American Mathematicians\u201d (2012) by George Borjas and Kirk Doran.\n  Research Digest (coming): \u201c Incentives and Creativity: Evidence from the Life Sciences\u201d (2011) by Pierre Azoulay, Joshua S. Graff Zivin, and Gustavo Manso.\n  \u201c The Increasing Dominance of Teams in Knowledge Production\u201d (2007) by Stefan Wuchty, Benjamin F. Jones, and Brian Uzzi.\n  Excerpt: \u201c Funding Breakthrough Research: Promises and Challenges of the \u2018ARPA model\u2019 \u201d by Pierre Azoulay, Erica Fuchs, Anna Goldstein, and Michael Kierney\n  \u201c A Toolkit of Policies to Promote Innovation\u201d (2019) by Nicholas Bloom, Jonathan Van Reenen, and Heidi Williams.\n   \u201c The Changing Structure of American Innovation: Some Cautionary Remarks for Economic Growth\u201d (2019) by Ashish Arora, Sharon Belenzon, Andrea Patacconi, and Jungkyu Suh.\n  \u201c What\u2019s Next for the Future of American Innovation?\u201d (2018) by Andrew Van Dam (write-up of \u201c Measuring Innovation over the Long-Run\u201d by Brian Kelly, Dimitris Papanikolaou, Amit Seru, and Matt Taddy)\n  Research Digest (coming): \u201c Are Ideas getting Harder to Find?\u201d (2019) by Nicholas Bloom, Charles Jones, John Van Reenen, and Michael Webb.\n NBER Reporter Research Summary: \u201c Slower U.S. Growth in the Long- and Medium-Run\u201d (2015) by Robert Gordon\n  \u201cThe AI Revolution: The Road to Superintelligence:  Parts 1  and 2\u201d (2015) by Tim Urban.", "posttime": "2021-06-29 23:09:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ecf\u6d4e\u5b66,\u521b\u65b0,innovation", "title": "\u521b\u65b0\u7ecf\u6d4e\u5b66\uff1a\u8be6\u7ec6\u9605\u8bfb\u6e05\u5355\uff082019\uff09 ", "title_en": "Economics of Innovation: Detailed Reading List (2019)", "transed": 1, "url": "http://matt-clancy.com/economics-of-innovation-detailed-reading-list/", "via": "", "real_tags": ["\u7ecf\u6d4e\u5b66", "\u521b\u65b0"]}, {"category": "", "categoryclass": "", "imagename": "b68f50f37ab68c92663ac376f6a76b1b.jpg", "infoid": 1068529, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u90e8\u5206\u4ea4\u6613\u5c06EDX\u8f6c\u4e3a\u516c\u5171\u5229\u76ca\u516c\u53f8\uff0c\u540c\u65f6\u6177\u6168\u5730\u4e3a\u81f4\u529b\u4e8e\u52a0\u5f3a\u6570\u5b57\u5b66\u4e60\u7684\u5f71\u54cd\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u63d0\u4f9b\u8d44\u91d1\u3002\n      \u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u5927\u5b66\u5df2\u5ba3\u5e03\uff0c\u4ed6\u4eec\u4e8e2012\u5e74\u63a8\u51fa\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u4e3aEDX\u8fdb\u884c\u4e86\u91cd\u5927\u8fc7\u6e21\uff0c\u4e3a\u5927\u5b66\u8bfe\u7a0b\u63d0\u4f9b\u5f00\u653e\u7684\u5728\u7ebf\u8bfe\u7a0b\u5e73\u53f0\uff1aEDX\u7684\u8d44\u4ea7\u5c06\u7531\u516c\u5f00\u4ea4\u6613\u6559\u80b2\u6280\u672f\u516c\u53f82U\u6536\u8d2d\uff0c\u5e76\u4f5c\u4e3a\u516c\u4f17\u91cd\u7ec42U\u4f1e\u4e0b\u7684\u798f\u5229\u516c\u53f8\u3002\n \u8be5\u4ea4\u6613\u88ab\u6784\u5efa\uff0c\u4ee5\u786e\u4fddEDX\u5728\u5176\u521b\u59cb\u4efb\u52a1\u4e2d\u7ee7\u7eed\u8fdb\u884c\uff0c\u5e76\u4e3aEDX\u5b66\u4e60\u8005\uff0c\u5408\u4f5c\u4f19\u4f34\u548c\u8d21\u732e\u8bfe\u7a0b\u7684\u6559\u5e08\u63d0\u4f9b\u5e7f\u6cdb\u7684\u4fdd\u62a4\u3002\n \u5728Exchange\u4e2d\uff0c2U\u5c06\u5411\u975e\u8425\u5229\u7ec4\u7ec7\u8f6c\u79fb8\u4ebf\u7f8e\u5143\uff0c\u4e5f\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u5927\uff0c\u63a2\u7d22\u4e0b\u4e00\u4ee3\u5728\u7ebf\u6559\u80b2\u3002\u8fd9\u4e9b\u5927\u91cf\u8d44\u6e90\u652f\u6301\uff0c\u975e\u8425\u5229\u6027\u5c06\u4fa7\u91cd\u4e8e\u514b\u670d\u5728\u7ebf\u5b66\u4e60\u7684\u6301\u7eed\u4e0d\u7b49\u95ee\u9898\uff0c\u90e8\u5206\u901a\u8fc7\u63a2\u7d22\u5982\u4f55\u5e94\u7528\u4eba\u5de5\u667a\u80fd\uff0c\u4f7f\u4e2a\u6027\u5316\u5b66\u4e60\u80fd\u591f\u54cd\u5e94\u548c\u9002\u5e94\u4e2a\u4eba\u5b66\u4e60\u8005\u7684\u98ce\u683c\u548c\u9700\u6c42\u3002\n \u975e\u8425\u5229\u7ec4\u7ec7\u5c06\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u59d4\u5458\u4f1a\u4efb\u547d\u7684\u8463\u4e8b\u4f1a\u76d1\u7763\uff0c\u5176\u672a\u6765\u7684\u5de5\u4f5c\u5c06\u501f\u9274\u5f53\u524dEDX\u5408\u4f5c\u4f19\u4f34\u4ee5\u53ca\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u5927\u5b66\u7684\u60f3\u6cd5\u3002\n  \u5728\u7ed9\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u793e\u533a\u5206\u4eab\u65b0\u95fb\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0cL. Rafael Reif\u603b\u88c1L. Rafael Reif\u6307\u51fa\uff0cEDX\u8058\u8bf7\u4e86160\u540d\u5408\u4f5c\u673a\u6784\uff0c\u8fbe\u5230\u4e86\u8d85\u8fc73900\u4e07\u7684\u5b66\u4e60\u8005\uff0c\u8d85\u8fc7\u4e861.1\u4ebf\u8bfe\u7a0b\u5165\u5b66\u4eba\u5458\u3002 \u201c\u6211\u4eec\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u81ea\u8c6a\u5730\u5728EDX\u5b8c\u6210\u7684\u5185\u5bb9\u4e2d\uff0c\u5305\u62ec - \u4e5f\u8bb8\u662f\u6700\u91cd\u8981\u7684 -  EDX\u5728\u5e2e\u52a9\u521b\u9020\u4e00\u4e2a\u84ec\u52c3\u53d1\u5c55\u7684\u5728\u7ebf\u5b66\u4e60\u5e02\u573a\u4e2d\u7684\u89d2\u8272\uff0c\u201d\u4ed6\u5199\u9053\u3002\n \u4eca\u5929\u5728\u8fc7\u53bb\u768418\u4e2a\u6708\u5185\uff0c\u4eca\u5929\u5ba3\u5e03\u7684\u4ea4\u6613\u88ab\u8fc5\u901f\u548c\u6df1\u523b\u7684\u8f6c\u53d8\u523a\u6fc0\u3002\u968f\u7740\u5168\u7403\u5927\u6d41\u884c\u548c\u4f34\u968f\u8fdc\u7a0b\u5b66\u4e60\u7684\u6f5c\u4f0f\u671f\uff0c\u516c\u5f00\u4ea4\u6613\u7684ED-Tech\u516c\u53f8\u5438\u5f15\u4e86\u91cd\u5927\u6295\u8d44\uff0c\u4f7f\u975e\u8425\u5229\u7ec4\u7ec7\u8d8a\u6765\u8d8a\u5177\u6709\u6311\u6218\u6027\u3002 \n\u5dee\u4e0d\u591a\u5e74\u524d\uff0c\u8ba4\u8bc6\u5230\u5e02\u573a\u7684\u7834\u574f\u6027\u8f6c\u578b\uff0cEDX\u59d4\u5458\u4f1a\u5f00\u59cb\u63a2\u7d22\u7ef4\u6301Edx\u672a\u6765\u7684\u4f7f\u547d\u9700\u8981\u4ec0\u4e48\u3002\n Reif\u5728\u4ed6\u7684\u4fe1\u4e2d\u627f\u8ba4\uff0c2U\u7684\u521d\u59cb\u8868\u8fbe\u5174\u8da3\u201c\u4e60\u60ef\u4e86\u3002\u201d\u4f46\u5728\u51e0\u4e2a\u6708\u7684\u53cd\u601d\uff0c\u8fa9\u8bba\u548c\u8c08\u5224\u4e4b\u540e\uff0c\u4ed6\u8868\u793a\uff0c\u7f14\u7ea6\u65b9\u53d1\u73b0\u4e86\u4e00\u4e2a\u4ee4\u4eba\u6109\u5feb\u7684\u9053\u8def\uff1a\u201cEDX\u4f5c\u4e3a\u4e00\u4e2a\u516c\u5171\u5229\u76ca\u516c\u53f8\u7684\u672a\u6765\uff0c\u5c06\u628a\u8425\u5229\u7387\u7684\u8d44\u6e90\u4e0e\u6b63\u5f0f\u7684\u4f7f\u547d\u914d\u5bf9\u516c\u4f17\u597d\u7684\u3002\u201d\n \u5728\u5927\u591a\u6570\u5dde\u7f16\u5236\u5230\u6cd5\u5f8b\u4e2d\uff0c\u5927\u7ea6\u5341\u5e74\u524d\u7684\u53d7\u76ca\u516c\u53f8\u4f5c\u4e3a\u516c\u53f8\u81f4\u529b\u4e8e\u516c\u4f17\u7684\u5408\u6cd5\u4fdd\u62a4\u65b9\u5f0f\u3002\u8be5\u540d\u79f0\u5141\u8bb8\u5546\u4e1a\u4f01\u4e1a\u5bfb\u6c42\u5bf9\u793e\u4f1a\u5229\u76ca\u76f8\u5173\u8005\u7684\u79ef\u6781\u5f71\u54cd\uff0c\u540c\u65f6\u4e5f\u4e3a\u516c\u53f8\u80a1\u4e1c\u63d0\u4f9b\u4e86\u79ef\u6781\u7684\u5f71\u54cd\u3002\u719f\u6089\u7684\u53d7\u76ca\u516c\u53f8\u7684\u4f8b\u5b50\u5305\u62ec\u5df4\u5854\u54e5\u5c3c\u4e9a\uff0cKickstarter\u548cBen\u548cJerry\u7684\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u81ea\u5df1\u7684\u521b\u65b0\u57fa\u91d1\uff0c\u53d1\u52a8\u673a\uff0c\u4e5f\u662f\u4e00\u4e2a\u798f\u5229\u516c\u53f8\u3002\n  \u5982\u679c\u8be5\u4ea4\u6613\u88ab\u56fd\u5bb6\u76d1\u7ba1\u673a\u6784\u6279\u51c6\uff0c2U\u5c06\u652f\u4ed88\u4ebf\u7f8e\u5143\uff0c\u4ee5\u4fbf\u901a\u8fc7EDX\u4f5c\u4e3a\u5b50\u516c\u53f8\uff0c\u5e76\u627f\u62c5\u5f53\u524d\u7684EDX\u8bfe\u7a0b\u4ea7\u54c1\u7ec4\u5408\uff0c\u5408\u4f5c\u4f19\u4f34\u5b89\u6392\u548c\u7528\u6237\u57fa\u7840\u3002\n \u4f46\u662f\uff0c\u5f00\u653e\u7684EDX\u5f00\u6e90\u8f6f\u4ef6\u5e73\u53f0\uff0c\u5728\u4e16\u754c\u5404\u5730\u7684EDX\u548c\u8d85\u8fc72,000\u4e2a\u5176\u4ed6\u5b66\u4e60\u7f51\u7ad9\u90fd\u662f\u57fa\u7840\u7684\uff0c\u4e0d\u4f1a\u8f6c\u79fb\u52302U\u3002\u975e\u8425\u5229\u7ec4\u7ec7\u672c\u8eab\u5c06\u62e5\u6709\u5e76\u589e\u5f3a\u5f00\u653e\u5f0fEDX\uff0c\u786e\u4fdd\u5176\u6301\u7eed\u5e7f\u6cdb\u7684\u53ef\u7528\u6027 - \u5305\u62ecEDX\u7684\u6301\u7eed\u4f7f\u7528\u3002\n \u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5c06\u7ee7\u7eed\u901a\u8fc7EDX\u5411\u5168\u7403\u5b66\u4e60\u8005\u63d0\u4f9b\u8bfe\u7a0b\uff0c\u4ee5\u53ca\u73b0\u5728\u79f0\u4e3aMitx\u5728\u7ebf\u7684\u65b0\u5e73\u53f0\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u6570\u5b57\u5b66\u4e60\u529e\u516c\u5ba4\u5c06\u5728\u7ebf\u6784\u5efa\u548c\u8fd0\u8425MITX\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e16\u754c\u9762\u5411\u5e73\u53f0\uff0c\u57fa\u4e8e\u5f00\u653e\u7684EDX\uff0c\u8fd9\u662fMIT\u4e3aMITX MOOC\u521b\u5efa\u3002\n MIT\u6559\u5e08\u53ef\u4ee5\u9009\u62e9\u5728\u4ea4\u6613\u5b8c\u6210\u540e\u7ee7\u7eed\u901a\u8fc7\u65b0\u7684EDX\u63d0\u4f9b\u8bfe\u7a0b\uff0c\u6216\u5c06\u5b83\u4eec\u79fb\u52a8\u5230Mitx Online\u3002 \n\u6839\u636e\u4ea4\u6613\u6761\u6b3e\uff0c\u5408\u4f5c\u4f19\u4f34EDX\u5927\u5b66\u5c06\u9009\u62e9\u7ee7\u7eed\u4ee5\u4e0e\u5176\u5f53\u524d\u534f\u8bae\u76f8\u540c\u7684\u8bfe\u7a0b\u63d0\u4f9b\u5176\u8bfe\u7a0b\u3002\u8be5\u4ea4\u6613\u5bf9\u8fd9\u4e9b\u673a\u6784\u7684\u81ea\u7531\u9020\u6210\u4e86\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u63d0\u4f9b\u8bfe\u7a0b\u7684\u81ea\u7531\u6216\u79bb\u5f00EDX\u3002\n  \u5728\u8c08\u5224\u534f\u8bae\u4e2d\u7684\u4e00\u7cfb\u5217\u89c4\u5b9a\u4e2d\uff0c2U\u5df2\u63a5\u53d7EDX\u7684\u4f7f\u547d\u5e76\u540c\u610f\u4e3a\u4f7f\u7528EDX\u5230\u8fbe\u65e5\u671f\u7684\u6bcf\u4e2a\u4eba\u7684\u6570\u636e\u4fdd\u62a4 - \u8d85\u8fc73900\u4e07\u5b66\u4e60\u8005 - \u4ee5\u53ca\u5c06\u4fdd\u62a4\u65b0EDX\u7528\u6237\u7684\u6570\u636e\u4f7f\u7528\u6807\u51c6\u3002\n \u4f5c\u4e3a\u8fd9\u4e9b\u89c4\u5b9a\u7684\u4e00\u90e8\u5206\uff0c2U\u540c\u610f\u9650\u5236\u57fa\u4e8e\u5b66\u4e60\u8005\u9009\u62e9\u7684\u654f\u611f\u4e2a\u6027\u5316\u4fe1\u606f\u7684\u4f7f\u7528\u3002\u57fa\u672c\u8054\u7cfb\u4fe1\u606f\u5c06\u83b7\u5f972U\u7528\u4e8e\u5b66\u4e60\u8005\u901a\u4fe1\uff0c\u5b66\u4e60\u8005\u5c06\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u4f7f\u7528EDX\u5b66\u4e60\u6216\u9009\u62e9\u9000\u51fa\u5e76\u62e5\u6709\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec\u57fa\u672c\u8054\u7cfb\u6570\u636e\uff0c\u6c38\u4e45\u5220\u9664\u3002\n  \u79ef\u6781\u53c2\u4e0e\u6539\u8fdb\u5f00\u653e\u7684EDX\u4ee3\u7801\uff0c\u4ee5\u6539\u5584\u53c2\u4e0e\uff0c\u6559\u5b66\uff0c\u5b66\u4e60\u7ed3\u679c\u548c\u6df7\u5408\u5b66\u4e60\u7279\u5f81;\n \u6700\u540e\uff0c2U\u8ba1\u5212\u4fdd\u7559\u6240\u6709\u5f53\u524d\u7684EDX\u5458\u5de5\uff0c\u8fd9\u4e9b\u5458\u5de5\u4e0d\u5728\u54c8\u4f5b\u5927\u5b66\u548c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u9886\u5bfc\u4e0b\u7ee7\u7eed\u4ecd\u7136\u5b58\u5728\u3002\u5458\u5de5\u5c06\u7559\u5728\u5f53\u524d\u7684\u89d2\u8272\u548c\u56e2\u961f\u7684\u76f4\u63a5\u672a\u6765\uff0c\u56e0\u4e3a2U\u51b3\u5b9a\u4e86\u5c06\u4e24\u4e2a\u7ec4\u7ec7\u5171\u540c\u5e26\u6765\u7684\u7406\u60f3\u65f6\u95f4\u8868\u548c\u8ba1\u5212\u3002\n \u8be5\u4ea4\u6613\u7531EDX\u8463\u4e8b\u4f1a\u6279\u51c6\uff0c\u4ee5\u53ca\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u5927\u5b66\u7684\u6cbb\u7406\u673a\u6784\u3002\u9884\u8ba1\u7b26\u5408\u4e60\u60ef\u6027\u5173\u95ed\u6761\u4ef6\u548c\u67d0\u4e9b\u76d1\u7ba1\u548c\u653f\u5e9c\u6279\u51c6\u7684\u843d\u540e\uff0c\u8be5\u79cb\u5b63\u5c06\u7f29\u77ed\uff0c\u5305\u62ec\u7531\u9a6c\u8428\u8bf8\u585e\u5dde\u53f8\u6cd5\u90e8\u957f\u7684\u529e\u4e8b\u5904\u6279\u51c6\u3002\n  \u6b63\u5982EDX\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u7531\u6b64\u4ea7\u751f\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u5c06\u7ee7\u7eed\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7ec4\u7ec7\uff0c\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u8fbe\u59d4\u5458\u4f1a\u59d4\u4efb\u3002\u4f46\u662f\uff0c\u5b83\u5c06\u5177\u6709\u66f4\u5927\u7684\u8d44\u91d1\uff0c\u5176\u4f7f\u547d\u4f1a\u6709\u6240\u4e0d\u540c\uff1a\u867d\u7136EDX\u5c06\u7ee7\u7eed\u4e0b\u964d2U\u4f5c\u4e3a\u5927\u5b66\u7ea7\u8bfe\u7a0b\u7684\u805a\u5408\uff0c\u4f46\u975e\u8425\u5229\u7ec4\u7ec7\u5c06\u4e13\u6ce8\u4e8e\u5f00\u53d1\u53ef\u4ee5\u5e94\u7528\u7684\u66f4\u52a0\u4e2a\u6027\u5316\u548c\u54cd\u5e94\u7684\u5b66\u4e60\u4f53\u9a8c\u6559\u80b2\u8c31 - \u4ece\u9ad8\u4e2d\uff0c\u5230\u793e\u533a\u5b66\u9662\uff0c\u5230\u6210\u5e74\u4eba\u8bd5\u56fe\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u7ecf\u6d4e\u4e2d\u4e3a\u81ea\u5df1\u521b\u9020\u673a\u4f1a\u3002 \n\u975e\u8425\u5229\u7ec4\u7ec7\u5c06\u6295\u8d44\u4e8e\u7814\u7a76\uff0c\u57fa\u91d1\u8bd5\u70b9\uff0c\u5e76\u4fc3\u8fdb\u5bf9\u6559\u80b2\u9891\u8c31\u7684\u89c1\u89e3\u3002\u5b83\u8fd8\u5c06\u5bfb\u6c42\u5408\u4f5c\uff0c\u65e8\u5728\u4e3a\u5f53\u5730\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b\u8d44\u91d1\uff0c\u4ee5\u66f4\u6709\u6548\u5730\u4e3a\u5b66\u751f\u63d0\u4f9b\u5f31\u52bf\u80cc\u666f\uff0c\u5e76\u786e\u5b9a\u5982\u4f55\u5c06\u6700\u6709\u6548\u5730\u6df7\u5408\u6570\u5b57\u5de5\u5177\u4e0e\u4e2a\u4eba\u652f\u6301\uff0c\u4ee5\u5e2e\u52a9\u5b66\u751f\u5b66\u4e60 - \u7279\u522b\u662f\u90a3\u4e9b\u5728\u7ebf\u5b66\u4e60\u7684\u5b66\u4e60\u6bd4\u73b0\u5b9e\u66f4\u591a\u7684\u627f\u8bfa\u3002\n  \u5728\u5176\u4e5d\u5e74\u5185\uff0cEDX\u5728\u63a8\u8fdb\u5176\u5728\u5404\u5730\u4eba\u6c11\u63d0\u4f9b\u9ad8\u8d28\u91cf\u5927\u5b66\u8bfe\u7a0b\u7684\u613f\u666f\u65b9\u9762\u53d6\u5f97\u4e86\u663e\u7740\u7684\u6210\u529f\u3002\u968f\u7740\u5927\u7ea63,000\u540d\u8bfe\u7a0b\uff0c\u5411\u5b66\u4e60\u8005\u53d1\u51fa\u4e86\u8d85\u8fc7140\u4e07\u8bc1\u4e66\uff0cEDX\u5e2e\u52a9\u5efa\u7acb\u4e86\u4e00\u4e2a\u84ec\u52c3\u53d1\u5c55\u7684\u5927\u5b66\u7ea7\u5185\u5bb9\u3002\u5b83\u8fd8\u4e3a\u5176\u4e00\u4e9b\u4ea7\u54c1\u5f00\u521b\u4e86\u6b63\u5f0f\u7684\u5927\u5b66\u5b66\u5206\uff0c\u5305\u62ec\u5fae\u7acb\u5668\u548c\u5fae\u673a\u5668\u51ed\u8bc1\u8ba1\u5212\u7b49\u521b\u65b0\u3002\n \u201c2U\u5e2e\u52a9\u6211\u4eec\u521b\u9020\u4e00\u4e2a\u72ec\u7279\u7684\u4ea4\u6613\u7684\u610f\u613f\u63d0\u51fa\u4e86\u4ee4\u4eba\u5174\u594b\u7684\u53ef\u80fd\u6027\uff0c\u201d\u9ebb\u7701\u7406\u5de5\u4f1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u5f00\u653e\u5f0f\u5b66\u4e60\u526f\u603b\u88c1Sanjay Sarma\u8bf4\uff0cSanjay Sarma\u8bf4\uff0cSanjay Sarma\u8bf4\uff0c\u5f17\u96f7\u5fb7\u5821\u548c\u4e39\u5c3c\u5c14\u5821\u9c9c\u82b1\u673a\u68b0\u5de5\u7a0b\u6559\u6388\u3002 \u201c\u5b83\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u505a\u4e00\u4e9b\u6211\u4eec\u65e8\u5728\u4ece\u5f00\u59cb\u7684\u4e8b\u60c5 - \u521b\u9020\u7a81\u7834\uff0c\u4ece\u800c\u63a8\u8fdb\u6559\u5b66\u548c\u5b66\u4e60\u5982\u4f55\u53d1\u751f\u3002\u201d\n \u201c\u8bda\u5b9e\uff0c\u4e0e\u5728\u7ebf\u6559\u80b2\u4e00\u6837\u597d\u7684\uff0c\u5750\u5728\u53a8\u623f\u6216\u5367\u5ba4\u4ecd\u7136\u4e0d\u5bb9\u6613\uff0c\u53c2\u52a0\u5927\u5b66\u8bfe\uff0c\u201dReif\u8865\u5145\u9053\u3002 \u201c\u968f\u7740\u8fd9\u4e00\u4e3e\u63aa\uff0c\u6559\u80b2\u975e\u8425\u5229\u6027\u5c06\u5f00\u53d1\u65b0\u7684\u5de5\u5177\u548c\u6280\u672f\uff0c\u4ee5\u4fbf\u5728\u5176\u751f\u547d\uff0c\u804c\u4e1a\u6216\u51c6\u5907\u4e2d\u7684\u4efb\u4f55\u9636\u6bb5\u4e3a\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u63d0\u4f9b\u66f4\u52a0\u4e2a\u6027\u5316\uff0c\u66f4\u5bb9\u6613\u3002\u8fd9\u662f\u6211\u4eec\u4e0eEDX\u5c55\u51fa\u7684\u9053\u8def\uff0c\u8fd9\u4ee3\u8868\u4e86\u8fd9\u4e00\u65c5\u7a0b\u7684\u4e0b\u4e00\u9636\u6bb5\u3002\u201c ", "note_en": "Two-part transaction would turn edX into a public benefit company while generously funding a nonprofit dedicated to strengthening the impact of digital learning.\n      MIT and Harvard University have announced a major transition for  edX, the nonprofit organization they launched in 2012 to provide an open online platform for university courses: edX\u2019s assets are to be acquired by the publicly-traded education technology company  2U, and reorganized as a public benefit company under the 2U umbrella.\n The transaction is structured to ensure that edX continues in its founding mission, and features a wide array of protections for edX learners, partners, and faculty who contribute courses.\n In exchange, 2U will transfer $800 million to a nonprofit organization, also led by MIT and Harvard, to explore the next generation of online education. Backed by these substantial resources, the nonprofit will focus on overcoming persistent inequities in online learning, in part through exploring how to apply artificial intelligence to enable personalized learning that responds and adapts to the style and needs of the individual learner.\n The nonprofit venture will be overseen by a board appointed by MIT and Harvard, and its future work will draw on ideas from current edX partners, as well as MIT and Harvard faculty.\n  In a  letter to the MIT community sharing the news, President L. Rafael Reif noted that edX has engaged 160 partner institutions, reached more than 39 million learners, and exceeded 110 million course enrollments. \u201cAll of us can take pride in what edX has accomplished, including \u2014 and perhaps most significant \u2014 edX\u2019s role in helping create a thriving market for online learning,\u201d he wrote.\n The transaction announced today was spurred by rapid and profound shifts in that online-learning market over the past 18 months. With the onset of the global pandemic and the accompanying surge in remote learning, publicly-traded ed-tech firms have attracted major investment, making it increasingly challenging for a nonprofit to keep pace.\n Almost a year ago, recognizing this disruptive transformation of the market, the edX board began to explore what it would take to sustain edX\u2019s mission in the future.\n Reif acknowledged in his letter that the initial expression of interest from 2U \u201ctook some getting used to.\u201d But following several months of reflection, debate, and negotiation, he said the parties found an agreeable path: \u201ca future for edX as a public benefit company that will pair the resources of a for-profit player with a formal mission to serve the public good.\u201d\n Encoded into law in most states, benefit companies emerged about a decade ago as a legally protected way for companies to commit to the public good. The designation allows a commercial venture to seek to make positive impacts for societal stakeholders while also serving company shareholders. Familiar examples of benefit companies include Patagonia, Kickstarter, and Ben and Jerry\u2019s. MIT\u2019s own innovation fund, The Engine, is also a benefit company.\n  If the deal is approved by state regulators, 2U will pay $800 million for the right to adopt edX as a subsidiary and take on the current portfolio of edX course offerings, partner arrangements, and base of users.\n However, the Open edX open-source software platform, upon which edX and more than 2,000 other learning sites around the world are based, would not be transferred to 2U. The nonprofit would own and enhance Open edX, ensuring its continued wide availability \u2014 including its ongoing use by edX.\n MIT will continue to offer courses to learners worldwide via edX, as well as on a new platform now known as MITx Online. MIT\u2019s Office of Digital Learning will build and operate MITx Online as a new world-facing platform, based on Open edX, that MIT is creating for MITx MOOCs.\n MIT faculty may choose to continue to offer their courses through the new edX after the transaction is completed, or move them to MITx Online.\n Under the terms of the transaction, partner edX universities would have the option of continuing to offer their courses under the same terms as their current agreements. The transaction imposes no restrictions on these institutions\u2019 freedom to offer their courses through other means, or to depart edX.\n  In an array of provisions within the negotiated agreement, 2U has embraced edX\u2019s mission and agreed to data protections for everyone who has used edX to date \u2014 more than 39 million learners \u2014 as well as data-usage standards that would protect new edX users.\n As part of these provisions, 2U has agreed to limit its use of sensitive individualized information based on learner choice. Basic contact information would be available to 2U for learner communications, and learners will have the option to continue learning with edX or opt out and have all their information, including basic contact data, permanently deleted.\n  participate actively in improving the Open edX code to improve engagement, pedagogy, learning outcomes, and blended learning features;\n Finally, 2U plans to retain all current edX employees who do not remain with the nonprofit continuing under Harvard and MIT\u2019s leadership. Staff will remain in their current roles and teams for the immediate future as 2U determines the ideal timeline and plan for bringing the two organizations together.\n The transaction was approved by the edX board, as well as governance bodies at MIT and Harvard. It is expected to close this fall, subject to customary closing conditions and certain regulatory and governmental approvals, including approval by the Office of the Massachusetts Attorney General.\n  As was the case with edX, the resulting nonprofit will continue to be a free-standing organization with a board appointed by MIT and Harvard. However, it will have significantly more funding, and its mission will differ: While edX will continue under 2U as an aggregator of university-level courses, the nonprofit will instead focus on the development of more personalized and responsive learning experiences that can be applied across the educational spectrum \u2014 from high school, to community college, to adults trying to create opportunity for themselves in a changing economy.\n The nonprofit will invest in research, fund pilots, and promote the adoption of insights across the education spectrum. It will also seek out collaborations and aim to fund local partners to more effectively serve students from disadvantaged backgrounds, as well as identify how to most effectively blend digital tools with in-person support to help students learn \u2014 particularly those for whom online learning has been more a promise than a reality.\n  Over its nine years, edX has achieved remarkable success in advancing its vision of making high-quality university courses available to people everywhere. With some 3,000 courses offered, and more than 1.4 million certificates issued to learners, edX has helped build a booming marketplace for college-level content. It has also pioneered formal university credit for some of its offerings, including innovations such as the MicroMasters and MicroBachelors credential programs.\n \u201cThe willingness of 2U to help us create a unique deal presents exciting possibilities,\u201d says Sanjay Sarma, MIT\u2019s vice president for open learning and the Fred Fort Flowers and Daniel Fort Flowers Professor of Mechanical Engineering. \u201cIt gives us a chance to do something we had aimed to do from the start \u2014 create breakthroughs that advance how teaching and learning take place.\u201d\n \u201cTo be honest, as good as online education has become, it\u2019s still not easy to sit in your kitchen or bedroom and take a college class,\u201d Reif adds. \u201cWith this move, the educational nonprofit will develop new tools and techniques to make learning more personal, more meaningful, and easier for people all over the world at any stage in their lives, careers or preparation. That was the road we set out on with edX, and this represents the next stage in that journey.\u201d", "posttime": "2021-06-29 23:09:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6c\u79fb,harvard,edx", "title": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u54c8\u4f5b\u8fbe\u540c\u610f\u5c06EDX\u8f6c\u79fb\u5230ED-Tech\u516c\u53f82U ", "title_en": "MIT and Harvard agree to transfer edX to ed-tech firm 2U", "transed": 1, "url": "https://news.mit.edu/2021/mit-harvard-transfer-edx-2u-0629", "via": "", "real_tags": ["\u8f6c\u79fb", "harvard", "edx"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068528, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u8822\u8d27\uff0c\u5176\u4f59\u7684\u662f\u6df7\u86cb\u3002\u6211\u5728\u4e0d\u540c\u65f6\u95f4\u90fd\u5728\u4e24\u4e2a\u7fa4\u4f53\u4e2d\u8ba1\u7b97\u4e86\u81ea\u5df1\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u4ee5\u6700\u6709\u4fe1\u5fc3\u8fd9\u4e48\u505a\u3002\n    Assholes\u8bfb\u53d6\u5177\u6709\u7ec6\u9f7f\u68b3\u7684\u89c4\u683c\uff0c\u5bfb\u627e\u6f0f\u6d1e\uff0c\u76d1\u7763\u6216\u7b80\u5355\u7684\u9519\u522b\u3002\u7136\u540e\u4ed6\u4eec\u7f16\u5199\u7b26\u5408\u7b26\u5408\u89c4\u8303\u7684\u4ee3\u7801\uff0c\u4f46\u65e0\u7528\u3002\u5982\u679c\u6709\u4eba\u5bf9\u4ed6\u4eec\u5199\u4f5c\u65e0\u7528\u7684\u8f6f\u4ef6\u6765\u8bf4\uff0c\u4ed6\u4eec\u4f1a\u6cbe\u6cbe\u81ea\u559c\u5730\u6307\u51fa\u4e86\u89c4\u8303\u4e2d\u7684\u53e5\u5b50\uff0c\u6e05\u695a\u5730\u9610\u660e\u4e86\u4ed6\u4eec\u53ef\u6015\u7684\u8f6f\u4ef6\u5728\u6280\u672f\u4e0a\u662f\u5982\u4f55\u6b63\u786e\u7684\uff0c\u7136\u540e\u4ed6\u4eec\u4e4c\u9e26\u5728\u4ed6\u4eec\u7684\u535a\u5ba2\u4e0a\u4e4c\u9e26\u3002\n  \u6709\u4e00\u79cd\u6d3e\u7cfb\u6d4b\u8bd5\u6848\u4f8b\u7684\u6df7\u86cb\u3002\u5728\u7f16\u5199\u89c4\u683c\u65f6\uff0c\u8fd9\u4e9b\u4eba\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u5076\u5c14\u53ef\u4ee5\u5728\u89c4\u8303\u6700\u7ec8\u786e\u5b9a\u4e4b\u524d\u5076\u5c14\u5c06\u5176\u65e0\u9650\u7684\u65f6\u95f4\u548c\u80fd\u91cf\u7a9c\u5230\u627e\u5230\u6f0f\u6d1e\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7ba1\u7406\u6df7\u86cb\u751a\u81f3\u6bd4\u542c\u8d77\u6765\u66f4\u96be\u4ee5\u8d8a\u6765\u8d8a\u8017\u8d39\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5199\u597d\u89c4\u683c\u9700\u8981\u8fd9\u4e48\u957f\u65f6\u95f4\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u6df7\u86cb\u7ba1\u7406\u4e2d\u5192\u5931\u4e86\u3002\n    \u53e6\u4e00\u65b9\u9762\uff0c\u8822\u8d27\u4e0d\u8bfb\u89c4\u683c\uff0c\u76f4\u5230\u6709\u4eba\u5bf9\u4ed6\u4eec\u5927\u558a\u5927\u53eb\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u91c7\u53d6\u4e86\u4e00\u4e9b\u4f8b\u5b50\uff0c\u4ed6\u4eec\u53d1\u73b0\u201c\u5728\u91ce\u5916\u201d\u548c\u5199\u4ee3\u7801\uff0c\u4f3c\u4e4e\u57fa\u4e8e\u4ed6\u4eec\u7684\u793a\u4f8b\u5de5\u4f5c\u3002\u4ed6\u4eec\u53d1\u8d27\u540e\u4e0d\u4e45\uff0c\u4ed6\u4eec\u4e0d\u53ef\u907f\u514d\u5730\u88ab\u558a\u53eb\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u4ea7\u54c1\u65e0\u5904\u53ef\u884c\uff0c\u7b26\u5408\u5176\u4ed6\u4eba\u6070\u597d\u4f7f\u7528\u7684\u89c4\u8303\u7684\u4e00\u90e8\u5206\u3002\u6709\u4eba\u5c06\u5b83\u4eec\u6307\u5411\u89c4\u8303\u4e2d\u7684\u53e5\u5b50\uff0c\u6e05\u695a\u5730\u9610\u660e\u4e86\u4ed6\u4eec\u7684\u8f6f\u4ef6\u7684\u788e\u7247\u788e\u7247\uff0c\u800c\u4e14\u4ed6\u4eec\u89e3\u51b3\u4e86\u5b83\u3002\n  \u9664\u4e86\u78be\u78e8\u7c73\u5c14\u6570\u4e4b\u5916\uff0c\u8fd8\u6709\u4e24\u4e2a\u68ee\u6797\u7684\u6d3e\u522b\u503c\u5f97\u7279\u522b\u63d0\u53ca\u3002\u4ece\u793a\u4f8b\u548c\u8239\u8236\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u5de5\u4f5c\uff0c\u5e76\u50cf\u5176\u4ed6\u8822\u8d27\u4e00\u6837\u5927\u558a\u5927\u53eb\u3002\u4f46\u662f\uff0c\u5f53\u4ed6\u4eec\u6700\u7ec8\u6253\u6270\u9605\u8bfb\u89c4\u8303\u65f6\uff0c\u5b83\u4eec\u795e\u5947\u5730\u53d8\u6210\u4e86\u6df7\u86cb\uff0c\u5e76\u4e89\u8fa9\u8bf4\u89c4\u8303\u662f\u66a7\u6627\u7684\uff0c\u6216\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8bef\u5bfc\uff0c\u6216\u8005\u65e0\u77e5\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u4eba\u8fd9\u6837\u7684\u5b9e\u65bd\uff0c\u6216\u8005\u6839\u672c\u4e0d\u53ef\u80fd\u3002\u8fd9\u4e9b\u4eba\u79f0\u4e3a\u793e\u4f1a\u7597\u6cd5\u3002\u5b83\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5199\u4f5c\u7b26\u5408\u6027\u4ee3\u7801\uff0c\u800c\u4e0d\u7ba1\u89c4\u8303\u6709\u591a\u597d\uff0c\u6240\u4ee5\u4ed6\u4eec\u53ef\u4ee5\u5b89\u5168\u5730\u5ffd\u7565\u3002\n  \u6469\u5c14\u987f\u7684\u7b2c\u4e8c\u4e2a\u6d3e\u7cfb\u4ece\u4f8b\u5b50\uff0c\u8239\u8236\u4ee3\u7801\u5de5\u4f5c\uff0c\u5e76\u558a\u53eb\u3002\u4f46\u662f\uff0c\u5f53\u4ed6\u4eec\u7559\u610f\u9605\u8bfb\u89c4\u8303\u65f6\uff0c\u4ed6\u4eec\u795e\u5947\u5730\u8f6c\u5411\u5021\u5bfc\u8005\uff0c\u5e76\u5728\u4ed6\u4eec\u7684\u9519\u8bef\u4e2d\u5b66\u5230\u7684\u662f\u4ed6\u4eec\u5438\u53d6\u7684\u6559\u7a0b\u3002\u8fd9\u4e9b\u4eba\u79f0\u4e3a\u4e13\u5bb6\u3002\u51e0\u4e4e\u4e16\u754c\u4e0a\u6bcf\u4e2a\u6709\u7528\u7684\u6559\u7a0b\u90fd\u662f\u7531\u767d\u75f4\u503e\u5411\u7684\u4e13\u5bb6\u7f16\u5199\u7684\u3002\n    \u6709\u4e9b\u4eba\u4f1a\u4e89\u8fa9\u8bf4\u5e76\u975e\u6240\u6709\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u8822\u8d27\u6216\u6df7\u86cb\uff0c\u4f46\u5b83\u4eec\u88ab\u8bef\u89e3\u4e86\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u4eba\u4e3a\u6211\u5c06\u79f0\u4e3a\u201c\u5929\u4f7f\u201d\u5f00\u53d1\u8005\u7684\u5b58\u5728\u3002 \u201c\u5929\u4f7f\u201d\u8bfb\u53d6\u89c4\u683c\uff0c\u5199\u5165\u4ee3\u7801\uff0c\u7136\u540e\u5728\u8fd0\u9001\u4ea7\u54c1\u4e4b\u524d\u5f7b\u5e95\u6d4b\u8bd5\u4f34\u968f\u7684\u6d4b\u8bd5\u5957\u4ef6\u3002\u5929\u4f7f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5b58\u5728\uff0c\u4f46\u5b83\u4eec\u662f\u4e00\u4e2a\u6709\u7528\u7684\u865a\u6784\uff0c\u4f7f\u89c4\u8303\u4f5c\u5bb6\u5bf9\u81ea\u5df1\u611f\u89c9\u66f4\u597d\u3002 \n\u5982\u679c\u4f60\u7684\u89c4\u683c\u4e0d\u591f\u597d\uff0c\u8822\u8d27\u6ca1\u6709\u673a\u4f1a\u8ba9\u4e8b\u60c5\u6b63\u786e\u3002 \u5bf9\u4e8e\u62b1\u6028\u4ed6\u4eec\u7684\u8f6f\u4ef6\u88ab\u7834\u574f\u7684\u6bcf\u4e2a\u4eba\u6765\u8bf4\uff0c\u5c06\u6709\u4e24\u4e2a\u6df7\u86cb\u5ba3\u79f0\u5b83\u4e0d\u662f\u3002 \u8be5\u89c4\u8303\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u4ef2\u88c1\u6469\u5c14\u548c\u6df7\u86cb\u4e4b\u95f4\u7684\u7ea0\u7eb7\uff0c\u5c06\u65e0\u6cd5\u89e3\u51b3\u4efb\u4f55\u4e8b\u60c5\uff0c\u5e76\u4e14\u4e89\u8bba\u5c06\u4ee4\u4eba\u95f7\u70e7\u591a\u5e74\u3002  \u5982\u679c\u4f60\u7684\u89c4\u683c\u8db3\u591f\u597d\uff0c\u8822\u8d27\u5c31\u4f1a\u5728\u7b2c\u4e8c\u6b21\u56f4\u7ed5\u7b2c\u4e8c\u6b21\u8ba9\u4e8b\u60c5\u53d8\u5f97\u6b63\u786e\uff0c\u800c\u4e0d\u4f1a\u88ab\u6df7\u86cb\u56f4\u653b\u3002 \u540c\u65f6\uff0c\u6ca1\u6709\u6bd4\u5bfb\u627e\u6f0f\u6d1e\u66f4\u597d\u7684\u6df7\u86cb\u4e0d\u4f1a\u627e\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u4ed6\u4eec\u6700\u7ec8\u4f1a\u611f\u5230\u65e0\u804a\u5e76\u5f98\u5f8a\u5bfb\u627e\u522b\u4eba\u6765\u9a9a\u6270\u3002 ", "note_en": "Most developers are morons, and the rest are assholes. I have at various times counted myself in both groups, so I can say this with the utmost confidence.\n    Assholes read specs with a fine-toothed comb, looking for loopholes, oversights, or simple typos. Then they write code that is meticulously spec-compliant, but useless. If someone yells at them for writing useless software, they smugly point to the sentence in the spec that clearly spells out how their horribly broken software is technically correct, and then they crow about it on their blogs.\n  There is a faction of assholes that write test cases. These people are good to have around while writing a spec, because they can occasionally be managed into channeling their infinite time and energy into finding loopholes before the spec is final. Unfortunately, managing assholes is even harder and more time-consuming than it sounds. This is why writing good specs takes so long: most of the time is frittered away on asshole management.\n    Morons, on the other hand, don\u2019t read specs until someone yells at them. Instead, they take a few examples that they find \u201cin the wild\u201d and write code that seems to work based on their limited sample. Soon after they ship, they inevitably get yelled at because their product is nowhere near conforming to the part of the spec that someone else happens to be using. Someone points them to the sentence in the spec that clearly spells out how horribly broken their software is, and they fix it.\n  Besides the run-of-the-mill morons, there are two factions of morons that are worth special mention. The first work from examples, and ship code, and get yelled at, just like all the other morons. But then when they finally bother to read the spec, they magically turn into assholes and argue that the spec is ambiguous, or misleading in some way, or ignoreable because nobody else implements it, or simply wrong. These people are called  sociopaths. They will never write conformant code regardless of how good the spec is, so they can safely be ignored.\n  The second faction of morons work from examples, ship code, and get yelled at. But when they get around to reading the spec, they magically turn into advocates and write up tutorials on what they learned from their mistakes. These people are called  experts. Virtually every useful tutorial in the world was written by a moron-turned-expert.\n    Some people would argue that not all developers are morons or assholes, but they are mistaken. For example, some people posit the existence of what I will call the \u201cangel\u201d developer. \u201cAngels\u201d read specs closely, write code, and then thoroughly test it against the accompanying test suite before shipping their product. Angels do not actually exist, but they are a useful fiction to make spec writers to feel better about themselves.\n    If your spec isn\u2019t good enough, morons have no chance of ever getting things right. For everyone who complains that their software is broken, there will be two assholes who claim that it\u2019s not. The spec, whose primary purpose is to arbitrate disputes between morons and assholes, will fail to resolve anything, and the arguments will smolder for years.\n  If your spec is good enough, morons have a fighting chance of getting things right the second time around, without being besieged by assholes. Meanwhile, the assholes who have nothing better to do than look for loopholes won\u2019t find any, and they\u2019ll eventually get bored and wander off in search of someone else to harass.", "posttime": "2021-06-29 23:08:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c4\u8303,specs,\u6df7\u86cb", "title": "\u4e3a\u4ec0\u4e48\u89c4\u8303\uff082004\uff09 ", "title_en": "Why Specs Matter (2004)", "transed": 1, "url": "https://web.archive.org/web/20051016203842/http://diveintomark.org/archives/2004/08/16/specs", "via": "", "real_tags": ["\u89c4\u8303", "specs", "\u6df7\u86cb"]}, {"category": "", "categoryclass": "", "imagename": "b4926ace58c01fac175ddf652dcfd332.jpg", "infoid": 1068527, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u6df7\u51dd\u571f\uff0c\u5f88\u5feb\u5c31\u4f1a\u8d85\u8fc7\u6240\u6709\u7684\u751f\u7269 - \u5305\u62ec\u6211\u4eec\u3002\u5728\u6700\u65b0\u7684\u4eba\u7c7b\u4eba\u7c7b\u573a\u666f\u7cfb\u5217\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u7269\u8d28\uff0c\u5076\u5c14\u7f8e\u5bb9\u548c\u96be\u4ee5\u60f3\u8c61\u7684\u89c4\u6a21\u3002\n \u4eba\u7c7b\u5386\u53f2\u4e0a\u7684\u5e74\u9f84\u5f80\u5f80\u4ee5\u6211\u4eec\u7684\u7956\u5148\u638c\u63e1\u5f53\u65f6\u7684\u6750\u6599\u547d\u540d\uff1a\u77f3\u5934\uff0c\u9752\u94dc\u6216\u94c1\u3002\n \u5982\u679c\u672a\u6765\u7684\u8003\u53e4\u5b66\u5bb6\u5bf9\u6211\u4eec\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u54ea\u4e9b\u6750\u6599\u6765\u5b9a\u4e4921\u4e16\u7eaa\uff1f\u7845\uff1f\u5851\u6599\uff1f\u4e24\u8005\u90fd\u662f\u5019\u9009\u4eba\uff0c\u5851\u9020\u4e16\u754c\uff0c\u65e0\u8bba\u597d\u574f\u3002\u4f46\u662f\uff0c\u5982\u679c\u8be5\u51b3\u5b9a\u4ec5\u57fa\u4e8e\u89c4\u6a21\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u7b54\u6848\uff1a\u6211\u4eec\u751f\u6d3b\u5728\u6df7\u51dd\u571f\u65f6\u4ee3\u3002\n \u5730\u7403\u4e0a\u6709\u5f88\u5c11\u7684\u4eba\u9020\u7269\u8d28\u662f\u975e\u5e38\u666e\u904d\u7684\u3002\u6df7\u51dd\u571f\u662f\u54f2\u5b66\u5bb6 - \u751f\u6001\u5b66\u5bb6\u8482\u83ab\u897f\u83ab\u987f\u547c\u53ebA\uff06\uff0334; Hyperobject\uff06\uff0334; - \u8fd9\u4e48\u5de8\u5927\uff0c\u666e\u904d\u666e\u904d\u5730\u666e\u904d\u8ba4\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u8003\u8651\u6211\u4eec\u62e5\u6709\u7684\u7cbe\u795e\u9662\u7cfb\u3002\u5982\u679c\u4f60\u8bd5\u56fe\u60f3\u8c61\u4e16\u754c\uff06\uff0339\u7684\u5168\u90e8; S\u6df7\u51dd\u571f\u5728\u8111\u6d77\uff06\uff0339;\u7684\u773c\u775b\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u610f\u8bc6\u5230\uff0c\u5b83\uff06\uff0339;\u4e0d\u53ef\u80fd\u7684\u3002\n \u7136\u800c\uff0c\u827e\u7c73\u5179\u66fc\u79d1\u5b66\u7814\u7a76\u6240\u548c\u540c\u4e8b\u7684\u827e\u7c73\u8389\u00b7\u57c3\u62c9\u59c6\u6700\u8fd1\u8bd5\u56fe\u7ed9\u5b83\u62cd\u6444\u3002\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u66f4\u597d\u5730\u4e86\u89e3\u4eba\u7c7b\u548c\uff0339;\u901a\u8fc7\u5728\u5730\u7403\u4e0a\u7684\u6240\u6709\u65e0\u751f\u547d\u7684\u4eba\u9020\u7269\u4f53\u7684\u91cd\u91cf\u5360\u636e\u4e86\u4eba\u7c7b\u7684\u5f71\u54cd\u3002\u4f5c\u4e3a\u4ed6\u4eec\u8ba1\u7b97\u7684\u4e00\u90e8\u5206\uff0c\u4ed6\u4eec\u53d1\u73b0\u6df7\u51dd\u571f\u5360\u6240\u6709\u4eba\u9020\u7684\u4e1c\u897f\u7684\u4e00\u534a - \u6700\u5927\u7684\u4eba\u4e3a\u7269\u8d28\u3002\u5982\u679c\u5b83\u7684\u589e\u957f\u7387\u7ee7\u7eed\uff0c\u5b83\u5c06\u8d85\u8fc72040\u5de6\u53f3\u7684\u5730\u7403\u603b\u91cd\u91cf\uff06\uff0339;\u751f\u7269\u91cf\u3002\n \u5c1d\u8bd5\u5728\u5fc3\u7075\u4e2d\u7684\u773c\u4e2d\u7684\u7167\u7247\uff1a\u5728\u5730\u7403\u4e0a\u6709\u66f4\u5927\u7684\u6df7\u51dd\u571f\u65f6\uff0c\u6709\u4e00\u5929\u5f88\u5feb\u5c31\u4f1a\u63a5\u8fd1\u6bcf\u68f5\u68ee\u6797\u7684\u6bcf\u68f5\u6811\uff0c\u6bcf\u4e2a\u6d77\u6d0b\u4e2d\u7684\u6bcf\u6761\u9c7c\uff0c\u6bcf\u4e2a\u573a\u5730\u7684\u6bcf\u53ea\u519c\u573a\u52a8\u7269\uff0c\u6bcf\u4e2a\u4eba\u90fd\u547c\u5438\uff0c\u8d70\u8def\uff0c\u73b0\u5728\u3002\n  \u5982\u4f55\u7406\u89e3\u8fd9\u79cd\u89c4\u6a21\uff1f\u5f53\u6211\u4eec\u9047\u5230\u82b1\u5c97\u5ca9\u6216\u77f3\u7070\u77f3\u7684\u9732\u5934\uff0c\u5728\u8868\u9762\u4e0a\u4f38\u51fa\u6765\uff0c\u5b83\u7684\u5b58\u5728\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u66f4\u6df1\u548c\u66f4\u5e7f\u9614\u7684\u57fa\u5ca9\u6697\u793a\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u5355\u4e2a\u6df7\u51dd\u571f\u5efa\u7b51\uff0c\u5899\u58c1\u6216\u5e73\u677f - \u6bcf\u4e2a\u5355\u72ec\u7684\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u63a5\u8fd1\uff0c\u56e0\u4e3a\u5c40\u90e8\u51fa\u73b0\u5177\u6709\u770b\u4e0d\u89c1\u548c\u96be\u4ee5\u60f3\u8c61\u7684\u5730\u8d28\u5c40\u3002 \n\u6240\u4ee5\uff0c\u5728\u8fd9\u4e00\u7248\u672c\u7684BBC\u672a\u6765\u548c\uff0339; S\u6444\u5f71\u7cfb\u5217arthopo\u573a\u666f\uff0c\u6211\u4eec\u51b3\u5b9a\u53c2\u89c2\u60a8\u53ef\u80fd\u79f0\u4e4b\u4e3a\u6df7\u51dd\u571f\u7684\u9009\u62e9\u548c\uff0334;\u9732\u5934\uff06\uff0334; \u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u6bcf\u4e2a\u89c6\u89c9\u793a\u4f8b\u90fd\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u6750\u6599 - \u4ee5\u53ca\u6211\u4eec\u4e0e\u5b83\u7684\u5173\u7cfb - \u66f4\u6e05\u695a\u3002  \u901a\u8fc7\u5728Facebook\u4e0a\u559c\u6b22\u6211\u4eec\u52a0\u5165\u4e00\u767e\u4e07\u4e2a\u672a\u6765\u7684\u7c89\u4e1d\uff0c\u6216\u5728\u63a8\u7279\u6216Instagram\u4e0a\u5173\u6ce8\u6211\u4eec\u3002  \u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8bf7\u6ce8\u518c\u6bcf\u5468BBC.com\u529f\u80fd\u65f6\u4e8b\u901a\u8baf\uff0c\u540d\u4e3a\uff06\uff0334;\u57fa\u672c\u540d\u5355\uff06\uff0334; \u6bcf\u5468\u4e94\uff0c\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u672a\u6765\uff0c\u6587\u5316\uff0c\u5de5\u4f5c\u671f\u548c\u65c5\u884c\uff0c\u6587\u5316\uff0c\u5de5\u4f5c\u671f\u548c\u65c5\u884c\uff0c\u6587\u5316\uff0c\u5de5\u4f5c\u671f\u548c\u65c5\u884c\u7684\u7cbe\u5fc3\u6311\u9009\u3002 ", "note_en": "There is so much concrete in the world that soon it will outweigh all living matter \u2013 including us. In the latest in our Anthropo-scene series, we explore the material&#39;s global reach, occasional beauty, and unimaginable scale.\n Ages of human history have often been named after the materials that our ancestors mastered at that time: stone, bronze or iron.\n If future archaeologists do the same for us, what material might they choose to define the 21st Century? Silicon? Plastic? Both are candidates, shaping the world for better and for worse. But if the decision were based on scale alone, then there can be only one answer: we are living in the age of concrete.\n There are few human-made substances on Earth that are quite so ubiquitous. Concrete is what the philosopher-ecologist Timothy Morton calls a &#34; hyperobject&#34; \u2013 something so enormous and widespread that it cannot be fully contemplated with the mental faculties that we have. If you attempt to picture the entirety of the world&#39;s concrete in the mind&#39;s eye, you soon realise that it&#39;s impossible.\n However, Emily Elhacham of the Weizmann Institute of Science and colleagues recently attempted to give it a shot. Their goal was to better understand humanity&#39;s impact during the Anthropocene by totting up the  weight of all inanimate human-made objects on Earth. As part of their calculations, they found that concrete accounts for  around half of all human-made things \u2013 the single biggest category of anthropogenic material. And if its rate of growth continues, it will overtake the total weight of Earth&#39;s biomass sometime around 2040.\n Try to picture  that in the mind&#39;s eye: there is a day approaching soon when there will be a greater weight of concrete on Earth than every single tree in every forest, every fish in every sea, every farm animal in every field, and every person breathing, walking, living right now.\n  How to make sense of this scale? When we encounter an outcrop of granite or limestone, poking out at the surface, its presence can hint at a far deeper and vaster bedrock beneath. We can take the same approach with a single concrete building, wall or slab \u2013 each individual instance can be approached as merely the local emergence of a material with an unseen and unimaginable geological reach.\n So, in this edition of BBC Future&#39;s photographic series  Anthropo-scene, we decided to tour a selection of what you might call concrete &#34;outcrops&#34;. Each visual example from around the world can help us to \u00a0understand the material \u2013 and our relationship with it \u2013 a little more clearly.\n                          Join one million Future fans by liking us on\u00a0   Facebook , or follow us on\u00a0   Twitter \u00a0or \u00a0   Instagram .\n If you liked this story,\u00a0   sign up for the weekly bbc.com features newsletter , called &#34;The Essential List&#34;. A handpicked selection of stories from BBC Future, Culture, Worklife, and Travel, delivered to your inbox every Friday.", "posttime": "2021-06-29 23:08:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df7\u51dd\u571f,material", "title": "\u6df7\u51dd\u571f\uff1a\u7269\u8d28\u201c\u592a\u96be\u4ee5\u60f3\u8c61\u201d ", "title_en": "Concrete: The material that's 'too vast to imagine'", "transed": 1, "url": "https://www.bbc.com/future/article/20210628-concrete-the-material-that-defines-our-age", "via": "", "real_tags": ["\u6df7\u51dd\u571f", "material"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068526, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u795e\u7ecf\u8f90\u5c04\u573a\uff08NERF\uff09\u5468\u56f4\u7684\u7814\u7a76\u7206\u70b8\u8868\u660e\uff0c\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u9690\u5f0f\u5b58\u50a8\u573a\u666f\u548c\u7167\u660e\u4fe1\u606f\u5b58\u5728\u5de8\u5927\u7684\u6f5c\u529b\uff0c\u4f8b\u5982\uff0c\u7528\u4e8e\u65b0\u9896\u7684\u89c6\u56fe\u3002\u7136\u800c\uff0c\u9632\u6b62\u4e86NERF\u7684\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u4e2a\u4e3b\u8981\u9650\u5236\u662f\u6cbf\u7740\u6bcf\u4e2a\u89c6\u56fe\u5149\u7ebf\u7684\u8fc7\u5ea6\u7f51\u7edc\u8bc4\u4f30\u7684\u7981\u6b62\u8ba1\u7b97\u6210\u672c\uff0c\u9700\u8981\u5728\u65e8\u5728\u5728\u5f53\u524d\u8bbe\u5907\u4e0a\u5b9e\u65f6\u6e32\u67d3\u65f6\u9700\u8981\u6570\u5341\u4e2aPetaflops\u3002\u6211\u4eec\u8868\u660e\uff0c\u5f53\u5c40\u90e8\u6837\u54c1\u653e\u7f6e\u5728\u573a\u666f\u4e2d\u7684\u8868\u9762\u5468\u56f4\u65f6\uff0c\u53ef\u4ee5\u663e\u7740\u964d\u4f4e\u6bcf\u4e2a\u89c6\u56fe\u5149\u7ebf\u6240\u9700\u7684\u6837\u672c\u6570\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u6df1\u5ea6Oracle\u7f51\u7edc\uff0c\u5176\u9884\u6d4b\u6bcf\u4e2a\u89c6\u56fe\u5149\u7ebf\u7684\u5149\u7ebf\u6837\u672c\u4f4d\u7f6e\uff0c\u5177\u6709\u5355\u4e2a\u7f51\u7edc\u8bc4\u4f30\u3002\u6211\u4eec\u8868\u660e\uff0c\u5728\u5bf9\u6570\u4e0a\u79bb\u6563\u5316\u548c\u7403\u5f62\u626d\u66f2\u7684\u6df1\u5ea6\u503c\u5468\u56f4\u4f7f\u7528\u5206\u7c7b\u7f51\u7edc\u5bf9\u4e8e\u7f16\u7801\u8868\u9762\u4f4d\u7f6e\u800c\u4e0d\u662f\u76f4\u63a5\u4f30\u8ba1\u6df1\u5ea6\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u4e9b\u6280\u672f\u7684\u7ec4\u5408\u5bfc\u81f4DonerF\uff0c\u53cc\u7f51\u7edc\u8bbe\u8ba1\u5177\u6709\u6df1\u5ea6Oracle\u7f51\u7edc\u4f5c\u4e3a\u7b2c\u4e00\u6b65\u548c\u7528\u4e8e\u5c04\u7ebf\u7d2f\u79ef\u7684\u5c40\u90e8\u91c7\u6837\u7684\u7740\u8272\u7f51\u7edc\u3002\u901a\u8fc7\u6211\u4eec\u7684\u8bbe\u8ba1\uff0c\u4e0eNERF\u76f8\u6bd4\uff0c\u6211\u4eec\u5c06\u63a8\u7406\u6210\u672c\u964d\u4f4e\u81f348\u500d\u3002\u4e0e\u7b80\u5355\u7684\u8ba1\u7b97\u5185\u6838\u7ed3\u5408\u4f7f\u7528\u7684\u6401\u677f\u63a8\u65adAPI\uff0c\u6211\u4eec\u662f\u7b2c\u4e00\u4e2a\u5728\u5355\u4e2aGPU\u4e0a\u4ee5\u4ea4\u4e92\u5f0f\u5e27\u901f\u7387\u5448\u73b0\u57fa\u4e8e\u5149\u7ebf\u7684\u795e\u7ecf\u8868\u793a\uff08\u6bcf\u79d215\u5e27\uff09\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u6211\u4eec\u4e13\u6ce8\u4e8e\u573a\u666f\u7684\u91cd\u8981\u90e8\u5206\uff0c\u56e0\u6b64\u4e0eNERF\u76f8\u6bd4\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u5e73\u7b49\u6216\u66f4\u597d\u7684\u8d28\u91cf\u3002\n          \u7531\u4e8e\u6211\u4eec\u7684\u65b0\u6df1\u5ea6Oracle\u91c7\u6837\u65b9\u6848\uff0cDonerf\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8eNERF\u7684\u8d28\u91cf\uff0c\u5b83\u4f7f\u7528\u4e86\u603b\u5171\u200b\u200b256\u4e2a\u6837\u672c\u3002\u57284\u4e2a\u6837\u672c\uff08\u4e0e\u4e0b\u9762\u7684Nerf\u6bd4\u8f83\uff09\uff0cDonerf\u4ee5\u76f8\u540c\u7684\u8d28\u91cf\u5b9e\u73b0\u4e8620x-48x\u7684\u52a0\u901f\u3002\u5355\u51fb/\u62d6\u52a8\u6ed1\u5757\u4ee5\u6bd4\u8f83Donerf\uff0cNerf\u548c\u5730\u9762\u771f\u76f8\u6405\u62cc\u673a\u6e32\u67d3\u4e4b\u95f4\u7684\u5404\u79cd\u8f93\u51fa\u3002\n            \u6211\u4eec\u7684\u6df1\u5ea6Oracle\u901a\u8fc7\u6cbf\u7ebf\u7684\u7a7a\u95f4\u79bb\u6563\uff0c\u5e76\u6cbf\u7740\u5149\u7ebf\u9884\u6d4b\u91c7\u6837\u6982\u7387\u6765\u9884\u6d4b\u5404\u4e2a\u6f5c\u5728\u7684\u91c7\u6837\u5019\u9009\u8005\u3002 3\u4e2a\u989c\u8272\u901a\u9053\u6cbf\u7740\u5c04\u7ebf\u503c\u7f16\u78013\u4e2a\u6700\u9ad8\u6982\u7387\uff0c\u8bf4\u660e\u53ef\u80fd\u53ea\u6709\u5e94\u8be5\u91c7\u6837\u7684\u5355\u4e2a\u8868\u9762\uff0c\u800c\u5f69\u8272\u503c\u8868\u660e\u6837\u54c1\u9700\u8981\u6df1\u5165\u6269\u5c55\u3002\u5373\u4f7f\u662f\u76f8\u5bf9\u7c97\u7cd9\u7684\u6df1\u5ea6\u9884\u6d4b\u4e5f\u8db3\u4ee5\u4f7fDonerf\u6709\u6548\u5730\u653e\u7f6e\u6837\u54c1\u3002\n      \u6211\u4eec\u4f7f\u7528\u7ffb\u8f6c\u8bef\u5dee\u4f30\u8ba1\u5668\u4ea7\u751f\u9519\u8bef\u5730\u56fe\uff0c\u8fd9\u4e9b\u9519\u8bef\u5730\u56fe\u6a21\u578b\u4eba\u7c7b\u5982\u4f55\u611f\u77e5\uff06\uff0334\u65f6\u4f1a\u611f\u77e5\u9519\u8bef;\u7ffb\u8f6c\uff06\uff0334;\u5728\u56fe\u50cf\u548c\u76ee\u6807\u8f93\u51fa\u4e4b\u95f4\u3002 Donerf\u5728\u663e\u7740\u964d\u4f4e\u7684\u6027\u80fd\u8981\u6c42\u4e0b\u663e\u793a\u4e86\u7c7b\u4f3c\u6216\u66f4\u597d\u7684\u7ed3\u679c\u3002\n           T. Neff\uff0cP. Stadlbauer\uff0cM. Parger\uff0cA.Kurz\uff0cJ.H. H. Mueller\uff0cC. R. A. Chaitanya\uff0cA. Kaplanyan\uff0cM. Steinberger Donerf\uff1a\u4f7f\u7528\u6df1\u5ea6Oracle\u7f51\u7edc\u5b9e\u65f6\u6e32\u67d3\u7d27\u51d1\u7684\u795e\u7ecf\u8f90\u5c04\u9886\u57df\uff08\u5728Arxiv\u4e0a\u6258\u7ba1\uff09\n           \u8fd9\u4e2a\u6a21\u677f\u6700\u521d\u7531Phillip Isola\u548cRichard Zhang\u4e3a\u4e30\u5bcc\u591a\u5f69\u7684ECCV\u9879\u76ee\u5236\u4f5c;\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u4ee3\u7801\u3002 ", "note_en": "The recent research explosion around Neural Radiance Fields (NeRFs) shows that there is immense potential for implicitly storing scene and lighting information in neural networks, e.g., for novel view generation. However, one major limitation preventing the widespread use of NeRFs is the prohibitive computational cost of excessive network evaluations along each view ray, requiring dozens of petaFLOPS when aiming for real-time rendering on current devices. We show that the number of samples required for each view ray can be significantly reduced when local samples are placed around surfaces in the scene.\tTo this end, we propose a depth oracle network, which predicts ray sample locations for each view ray with a single network evaluation.\tWe show that using a classification network around logarithmically discretized and spherically warped depth values is essential to encode surface locations rather than directly estimating depth. The combination of these techniques leads to DONeRF, a dual network design with a depth oracle network as a first step and a locally sampled shading network for ray accumulation.\tWith our design, we reduce the inference costs by up to 48x compared to NeRF.\tUsing an off-the-shelf inference API in combination with simple compute kernels, we are the first to render raymarching-based neural representations at interactive frame rates (15 frames per second at 800x800) on a single GPU.\tAt the same time, since we focus on the important parts of the scene around surfaces, we achieve equal or better quality compared to NeRF.\n          Due to our novel depth oracle sampling scheme, DONeRF achieves quality similar to  NeRF, which uses a total of 256 samples.\t\t\t\tAt only 4 samples (comparison to NeRF below), DONeRF achieves a speedup of 20x-48x at the same quality. Click / Drag the Sliders to compare various outputs between DONeRF, NeRF and Ground Truth Blender renderings.\n            Our Depth Oracle predicts multiple potential sampling candidates along each ray by discretizing the space along rays and predicting sampling probabilities along rays.\t\t\tThe 3 color channels encode the 3 highest probabilities along the ray - gray values illustrate that there is likely only a single surface that should be sampled, while colorful values indicate that samples need to be spread out in depth.\t\t\tEven a relatively coarse depth prediction is sufficient for DONeRF to place samples efficiently.\n      We use the  FLIP error estimator to produce error maps that model how likely humans would perceive errors when &#34;flipping&#34; between an image and the target output. \t\t\tDONeRF shows similar or better results at significantly lower performance requirements.\n           T. Neff, P. Stadlbauer, M. Parger, A. Kurz, J. H. Mueller, C. R. A. Chaitanya, A. Kaplanyan, M. Steinberger   DONeRF: Towards Real-Time Rendering of Compact Neural Radiance Fields using Depth Oracle Networks \t\t\t\t\t\t\t\t(hosted on  ArXiv)\n           This template was originally made by  Phillip Isola and  Richard Zhang for a  colorful ECCV project; the code can be found  here.", "posttime": "2021-06-29 23:08:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f90\u5c04,real,donerf", "title": "Donerf\uff1a\u8fc8\u5411\u7d27\u51d1\u795e\u7ecf\u8f90\u5c04\u7530\u7684\u5b9e\u65f6\u6e32\u67d3 ", "title_en": "DONeRF: Towards Real-Time Rendering of Compact Neural Radiance Fields", "transed": 1, "url": "https://depthoraclenerf.github.io/", "via": "", "real_tags": ["\u8f90\u5c04", "real", "donerf"]}, {"category": "", "categoryclass": "", "imagename": "8e34bc9889c766a5591cdce8bc4e41a7.png", "infoid": 1068525, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u592a\u7f51\u5230\u5904\u90fd\u662f\uff0c\u6210\u5343\u4e0a\u4e07\u7684\u786c\u4ef6\u4f9b\u5e94\u5546\u8bf4\u8bdd\u5e76\u5b9e\u65bd\u5b83\u3002\u7136\u800c\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u4ee5\u592a\u7f51\u94fe\u63a5\u90fd\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u6570\u5b57\uff0cmtu\uff1a\n $ ip l1\uff1alo\uff1a\uff06lt; loopback\uff0cUp\uff0cdepend_up\uff06gt; MTU 65536\u72b6\u6001\u672a\u77e5\u94fe\u63a5/\u73af\u56de00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a\uff06lt;\u5e7f\u64ad\uff0c\u591a\u64ad\uff0cUp\uff0cdepart_up\uff06gt; MTU 1500\u72b6\u6001UP\u94fe\u8def/\u4e59\u919aXX\uff1aXX\uff1aXX\uff1aXX\uff1aXX\uff1aXX BRD FF\uff1aFF\uff1aFF\uff1aFF\uff1aFF\uff1aFF\uff1aFF\n MTU\uff08\u6700\u5927\u4f20\u8f93\u5355\u5143\uff09\u8868\u793a\u5355\u4e2a\u6570\u636e\u5305\u7684\u6570\u91cf\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u4f60\u5728\u81ea\u5df1\u7684\u5c40\u57df\u7f51\u4e0a\u4e0e\u8bbe\u5907\u4ea4\u8c08\u65f6\uff0cMTU\u5c06\u5927\u7ea61500\u4e2a\u5b57\u8282\uff0c\u4e92\u8054\u7f51\u57281500\u4e0a\u51e0\u4e4e\u666e\u904d\u666e\u904d\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e9b\u94fe\u8def\u5c42\u6280\u672f\u65e0\u6cd5\u4f20\u8f93\u66f4\u5927\u7684\u6570\u636e\u5305\u3002\n \u4f8b\u5982\uff0c802.11\uff08\u66f4\u597d\u79f0\u4e3aWiFi\uff09\u7684MTU\u4e3a2304\u5b57\u8282\uff0c\u6216\u8005\u5982\u679c\u60a8\u7684\u7f51\u7edc\u4f7f\u7528FDDI\uff0c\u5219\u60a8\u53ef\u4ee5\u4f7f\u7528\u5927\u7ea64352\u5b57\u8282\u7684MTU\u3002\u4ee5\u592a\u7f51\u672c\u8eab\u5177\u6709\u201c\u5de8\u578b\u6846\u67b6\u201d\u7684\u6982\u5ff5\uff0c\u5176\u4e2dMTU\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9ad8\u8fbe9000\u5b57\u8282\uff08\u5728\u652f\u6301NIC\uff0c\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u4e0a\uff09\u3002\n \u4f46\u662f\uff0c\u4e92\u8054\u7f51\u4e0a\u51e0\u4e4e\u90fd\u4e0d\u662f\u8fd9\u4e00\u95ee\u9898\u3002\u7531\u4e8e\u4e92\u8054\u7f51\u7684\u9aa8\u5e72\u73b0\u5728\u4e3b\u8981\u7531\u4ee5\u592a\u7f51\u94fe\u8def\u7ec4\u6210\uff0c\u56e0\u6b64\u6570\u636e\u5305\u7684\u6700\u5927\u5927\u5c0f\u73b0\u5728\u975e\u6b63\u5f0f\u5730\u8bbe\u7f6e\u4e3a1500\u4e2a\u5b57\u8282\uff0c\u4ee5\u907f\u514d\u5206\u6bb5\u7684\u6570\u636e\u5305\u3002\n \u5728\u5b83\u7684\u8138\u4e0a1500\u662f\u4e00\u4e2a\u5947\u602a\u7684\u6570\u5b57\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u671f\u671b\u5728\u8ba1\u7b97\u65f6\u9700\u8981\u5927\u91cf\u7684\u5e38\u6570\u6765\u57fa\u4e8e\u6570\u5b66\u5e38\u6570\uff0c\u4f8b\u59822. 1500\u7684\u6743\u529b\uff0c\u4f46\u662f\u7b26\u5408\u5176\u4e2d\u7684\u4efb\u4f55\u6743\u529b\u3002\n   Ethernet\u7684\u9996\u6b21\u91cd\u5927\u7a81\u7834\u5230\u4e16\u754c\u4e0a\u7684\u5f62\u5f0f\u4e3a10Base-2\uff08Cheapernet\uff09\u548c10Base-5\uff08\u7c97\u7ebf\uff09\uff0c\u6570\u5b57\u8868\u793a\u5927\u81f4\u6570\u767e\u7c73\u7684\u5355\u4e2a\u7f51\u6bb5\u53ef\u80fd\u8de8\u8d8a\u3002 \n\u8fd9\u7bc7\u6587\u7ae0\u7684\u5148\u524d\u7248\u672c\u9519\u8bef\u3002\u5982\u679c\u4ecd\u5e0c\u671b\u9605\u8bfb\u5f52\u6863\u7248\u672c\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\n \u7531\u4e8e\u5f53\u65f6\u6709\u8bb8\u591a\u7ade\u4e89\u534f\u8bae\uff0c\u5e76\u4e14\u5b58\u5728\u786c\u4ef6\u9650\u5236\uff0c\u56e0\u6b64\u539f\u59cb\u521b\u5efa\u8005\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u6307\u51fa\u4e86\u8be5\u6570\u636e\u5305\u7f13\u51b2\u5b58\u50a8\u5668\u8981\u6c42\u5728Magic 1500\u53f7\u7801\u4e2d\u64ad\u653e\u3002 \uff08\u611f\u8c22@MELED\u5bfb\u627e\u6b64\u95ee\u9898\uff09\n \u56de\u60f3\u8d77\u6765\uff0c\u6700\u5927\u7684\u6700\u5927\u53ef\u80fd\u662f\u66f4\u597d\u7684\uff0c\u4f46\u5982\u679c\u5728\u65e9\u671f\u8fed\u4ee3\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u80fd\u4f1a\u963b\u6b62\u5bf9\u4ee5\u592a\u7f51\u7684\u5e7f\u6cdb\u63a5\u53d7\uff0c\u6240\u4ee5\u6211\u5e76\u4e0d\u771f\u6b63\u5173\u6ce8\u3002\n \u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u6574\u4e2a\u6545\u4e8b\u3002 \u201c\u4ee5\u592a\u7f51\uff1a\u672c\u5730\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5305\u4ea4\u6362\u201d\u7eb8\u5f20\u4ece1980\u5e74\u5f00\u59cb\uff0c\u662f\u7f51\u7edc\u4e0a\u8f83\u5927\u6570\u636e\u5305\u6548\u7387\u6210\u672c\u5206\u6790\u7684\u65e9\u671f\u8bf4\u660e\u3002\u8fd9\u5bf9\u5f53\u65f6\u7684\u4ee5\u592a\u7f51\u5c24\u4e3a\u91cd\u8981\uff0c\u56e0\u4e3a\u4ee5\u592a\u7f51\u5c06\u5728\u6240\u6709\u7cfb\u7edf\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u540c\u8f74\u7535\u7f06\uff0c\u6216\u8005\u4f1a\u6709\u4ee5\u592a\u7f51\u96c6\u7ebf\u5668\uff0c\u5b83\u53ea\u53ea\u5141\u8bb8\u4e00\u4e2a\u6570\u636e\u5305\u56f4\u7ed5\u4ee5\u592a\u7f51\u6bb5\u7684\u6240\u6709\u6210\u5458\u4f20\u8f93\u3002\n \u5fc5\u987b\u91c7\u6458\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u5171\u4eab\uff08\u6709\u65f6\u5fd9\u788c\uff09\u6bb5\u7684\u4f20\u8f93\u5ef6\u8fdf\u4e0d\u4f1a\u592a\u9ad8\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u592a\u5927\u7684\u6570\u636e\u5305\u6807\u9898\u3002 \uff08\u8bf7\u53c2\u9605\u4e0a\u9762\u6709\u5173\u7684\u7eb8\u5f20\u4e0a\u7684\u4e00\u4e9b\u8868\u683c\uff08\u7b2c15-16\u9875\uff09\n \u5b83\u4f3c\u4e4e\u6700\u591a\u7684\u662f\uff0c\u5f53\u65f6\u7684\u5de5\u7a0b\u5e08\u6311\u9009\u4e861500\u4e2a\u5b57\u8282\uff0c\u6216\u5927\u7ea612000\u4f4d\u4f5c\u4e3a\u6700\u597d\u7684\u201c\u5b89\u5168\u201d\u503c\u3002\n \u4ece\u90a3\u65f6\u8d77\uff0c\u5404\u79cd\u5176\u4ed6\u4f20\u8f93\u7cfb\u7edf\u90fd\u5df2\u7ecf\u8fc7\u6765\u4e86\uff0c\u4f46\u5b83\u4eec\u7684\u6700\u4f4eMTU\u503c\u4ecd\u7136\u662f1500\u5b57\u8282\u7684\u4ee5\u592a\u7f51\u3002\u5728\u7f51\u7edc\u4e0a\u5927\u4e8e\u6700\u4f4eMTU\u5c06\u5bfc\u81f4IP\u788e\u7247\uff0c\u6216\u8005\u9700\u8981\u6267\u884c\u8def\u5f84MTU\u68c0\u6d4b\u3002\u4e24\u8005\u90fd\u6709\u81ea\u5df1\u7684\u95ee\u9898\u3002\u5373\u4f7f\u6709\u65f6\u5927\u578b\u64cd\u4f5c\u7cfb\u7edf\u4f9b\u5e94\u5546\u4e22\u5f03\u9ed8\u8ba4MTU\u5728\u751a\u81f3\u751a\u81f3\u66f4\u4f4e\u3002 \n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e92\u8054\u7f51\u7684MTU\u4e3b\u8981\u662f\u7531\u4e8e\u9057\u7559\u5ef6\u8fdf\u7f16\u53f7\u548c\u786c\u4ef6\u9650\u5236\u800c\u57281500\u4e0a\u9650\uff0c\u8fd9\u5bf9\u4e8e\u4e92\u8054\u7f51\u6548\u7387\u6709\u591a\u7cdf\u7cd5\uff1f\n  \u5982\u679c\u6211\u4eec\u67e5\u770b\u6765\u81ea\u4e3b\u8981\u4e92\u8054\u7f51\u6d41\u91cf\u4ea4\u6362\u70b9\uff08AMS-IX\uff09\u7684\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u81f3\u5c1120\uff05\u7684\u4f20\u8f93\u4ea4\u6362\u7684\u6570\u636e\u5305\u662f\u6700\u5927\u5927\u5c0f\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230LAN\u7684\u603b\u6d41\u91cf\uff1a\n  \u5982\u679c\u7ec4\u5408\u8fd9\u4e24\u4e2a\u56fe\u8868\uff0c\u5219\u4f1a\u83b7\u5f97\u5927\u81f4\u5982\u6b64\u7684\u4e1c\u897f\u3002\u8fd9\u662f\u6bcf\u4e2a\u6570\u636e\u5305\u5927\u5c0f\u6876\u7684\u6d41\u91cf\u4e3a\uff1a\n  \u6216\u8005\uff0c\u5982\u679c\u6211\u4eec\u53ea\u770b\u6240\u6709\u8fd9\u4e9b\u4ee5\u592a\u7f51\u524d\u5bfc\u7801\u548c\u6807\u9898\u7684\u6d41\u91cf\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u76f8\u540c\u7684\u56fe\u5f62\uff0c\u4f46\u5177\u6709\u4e0d\u540c\u7684\u5c3a\u5ea6\uff1a\n  \u8fd9\u663e\u793a\u4e86\u6700\u5927\u7684\u6570\u636e\u5305\u7c7b\u7684\u6807\u9898\u4e2d\u7684\u5927\u91cf\u5e26\u5bbd\u3002\u7531\u4e8e\u5cf0\u503c\u6d41\u91cf\u663e\u793a\u4e86\u5927\u7ea6246Gbit / s\u7684\u9876\u90e8\u7684\u6700\u5927\u6570\u636e\u5305\u6876\u8bfb\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u5982\u679c\u6211\u4eec\u6709\u673a\u4f1a\u7684\u901f\u5ea6\uff0c\u6211\u4eec\u7684\u5de8\u578b\u6846\u67b6\u5728\u6211\u4eec\u6709\u673a\u4f1a\u4e0a\uff0c\u8fd9\u4e2a\u5f00\u9500\u53ea\u4f1a\u572841Gbit / s\u5de6\u53f3\u3002\n \u4f46\u6211\u60f3\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u8258\u8239\u5728\u66f4\u5e7f\u6cdb\u7684\u4e92\u8054\u7f51\u4e0a\u822a\u884c\u4e86\u8fd9\u4ef6\u4e8b\u3002\u867d\u7136\u4e00\u4e9b\u4e92\u8054\u7f51\u8fd0\u8f93\u8fd0\u8425\u5546\u57289000 MTU\u4e0a\u8fd0\u884c\uff0c\u4f46\u7edd\u5927\u591a\u6570\u6ca1\u6709\uff0c\u5e76\u4e14\u4e92\u8054\u7f51\u7684\u601d\u60f3\u76f8\u5e94\u5730\u5df2\u7ecf\u88ab\u89c4\u6a21\u5730\u663e\u793a\u4e86\u65f6\u95f4\u548c\u65f6\u95f4\uff0c\u4ee5\u81f3\u4e8e\u96be\u4ee5\u56f0\u96be\u3002\n  \u5982\u679c\u60a8\u57281500\u5b57\u8282\u7684\u5386\u53f2\u4e0a\u6709\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\uff0c\u8bf7\u5c06\u5b83\u4eec\u7535\u5b50\u90ae\u4ef6\u5c06\u5176\u7535\u5b50\u90ae\u4ef6\u81f3ethernet1500@benjojo.co.uk\u3002\u53ef\u60b2\u7684\u662f\uff0c\u624b\u518c\uff0c\u90ae\u5bc4\u5217\u8868\u5e16\u5b50\u548c\u5176\u4ed6\u4e0a\u4e0b\u6587\u5728\u6ca1\u6709\u8ddf\u8e2a\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u6d88\u5931\u3002 \n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f60\u53ef\u80fd\u559c\u6b22\u535a\u5ba2\u7684\u5176\u4f59\u90e8\u5206\uff0c\u5373\u4f7f\u5b83\u901a\u5e38\u66f4\u9002\u5408\u6807\u51c6\u7684\u73b0\u4ee3\u6ee5\u7528:)\u3002 \u5982\u679c\u60a8\u60f3\u53ca\u65f6\u4e86\u89e3\u6211\u7684\u63a5\u4e0b\u6765\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6211\u7684\u535a\u5ba2\u7684RSS Feed\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5728Twitter\u4e0a\u5173\u6ce8\u6211 ", "note_en": "Ethernet is everywhere, tens of thousands of hardware vendors speak and implement it. However almost every ethernet link has one number in common, the MTU:\n $ ip l1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 state UNKNOWN link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:002: enp5s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 state UP link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff\n The MTU (Maximum Transmission Unit) states how big a single packet can be. Generally speaking, when you are talking to devices on your own LAN the MTU will be around 1500 bytes and the internet runs almost universally on 1500 as well. However, this does not mean that these link layer technologies can\u2019t transmit bigger packets.\n For example, 802.11 (better known as WiFi) has a MTU of 2304 bytes, or if your network is using  FDDI then you have a MTU around 4352 bytes. Ethernet itself has the concept of \u201cjumbo frames\u201d, where the MTU can be set up to 9000 bytes (on supporting NICs, Switches and Routers).\n However, almost none of this matters on the internet. Since the backbone of the internet is now mostly made up of ethernet links, the de facto maximum size of a packet is now unofficially set to 1500 bytes to avoid packets being  fragmented down links.\n On the face of it 1500 is a weird number, we would normally expect a lot of constants in computing to be based around mathematical constants, like powers of 2. 1500, however fits none of those.\n   Ethernet\u2019s first major break into the world came in the form of 10BASE-2 (cheapernet) and 10BASE-5 (thicknet), the numbers indicating roughly how many hundred meters a single network segment could span over.\n The previous version of this post was wrong.  Click here if you still wish to read the archived version\n Since there were many competing protocols at the time, and hardware limits existed, the original creator notes this  in an email that the packet buffer memory requirements had some play in the magic 1500 number. (thanks to  @yeled for finding this)\n In retrospect, a longer maximum might have been better, but if itincreased the cost of NICs during the early days it may have preventedthe widespread acceptance of Ethernet, so I\u2019m not really concerned.\n However that is not the whole story. The  \u201cEthernet: Distributed Packet Switching for Local Computer Networks\u201d paper from 1980 is a early note of the efficiency cost analysis of larger packets on a network. This being especially important to ethernet at the time, since ethernet networks would ether be sharing the same coax cable between all systems, or there would be ethernet hubs that would only allow one packet at a time to be transmitted around all members of the ethernet segment.\n A number had to be picked that would mean that transmission latency on these shared (sometimes busy) segments would not be too high, but also that packet header overhead would not be too much. (see some of the tables on the paper linked above on page 15-16)\n It would seem at best that the engineers at the time picked 1500 bytes, or around 12000 bits as the best \u201csafe\u201d value.\n Since then various other transmission systems have come and gone, but the lowest MTU value of them has still been ethernet at 1500 bytes. Going bigger than lowest MTU on a network will either result in IP fragmentation, or the need to do path MTU detection. Both of which have their own sets of problems. Even if sometimes large OS vendors  dropped the default MTU to even lower at times.\n  So now we know that the internet\u2019s MTU is capped at 1500 mostly due to legacy latency numbers and hardware limits, how bad is this for the efficiency of the internet?\n  If we look at data from a major internet traffic exchange point (AMS-IX), we see that at least 20% of packets transiting the exchange are the maximum size. We can also see the total traffic of the LAN:\n  If you combine these two graphs, you get something that roughly looks like this. This is an estimation of how much traffic each packet size bucket is:\n  Or if we look at just the traffic that all of those ethernet preambles and headers cause, we get the same graph but with different scales:\n  This shows a great deal of bandwidth being spent on headers for the largest packet class. Since the peak traffic shows the biggest packet bucket reading at around 246GBit/s of overhead we can assume that if we had all adopted jumbo frames while we had the chance to, this overhead would only be around 41GBit/s.\n But I think at this point, the ship has sailed to do this on the wider internet. While some  internet transport carriers operate on 9000 MTU, the vast majority don\u2019t, and changing the internet\u2019s mind collectively has been shown time and time again to be  prohibitively difficult.\n  If you have more context on the history of 1500 bytes, please email them into  ethernet1500@benjojo.co.uk. Sadly the manuals, mailing list posts, and other context to this are disappearing fast without a trace.\n  If you liked this kind of stuff, you may like the  rest of the blog even if it is generally more geared towards the modern day abuses of standards :). If you want to stay up to date with what I do next you can use my blog\u2019s  RSS Feed or you can  follow me on twitter", "posttime": "2021-06-29 23:07:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u6210\u4e3a,mtu", "title": "1500\u5b57\u8282\u5982\u4f55\u6210\u4e3a\u4e92\u8054\u7f51\u7684MTU\uff082020\uff09 ", "title_en": "How 1500 bytes became the MTU of the Internet (2020)", "transed": 1, "url": "https://blog.benjojo.co.uk/post/why-is-ethernet-mtu-1500", "via": "", "real_tags": ["2020", "\u6210\u4e3a", "mtu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068524, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL; DR\uff1a\u5728\u8fc1\u79fb\u671f\u95f4\uff0c\u4e00\u4e2a\u7834\u574f\u8005\u88ab\u5220\u9664\u7684Newsblur\u7684MongoDB\u6570\u636e\u5e93\u3002\u6ca1\u6709\u88ab\u76d7\u6216\u4e22\u5931\u7684\u6570\u636e\u3002\n \u6211\u6b63\u5728\u5c06\u65b0\u95fb\u7b56\u7565\u4e2d\u7684\u4e00\u5207\u79fb\u52a8\u5230Depcker\u5bb9\u5668\uff0c\u4ee5\u4fbf\u5728\u4e0b\u5468\u63a8\u51fa\u7684\u5927\u91cd\u65b0\u8bbe\u8ba1\u3002\u8fd9\u662f\u7ef4\u62a4\u7684\u4e00\u5e74\uff0c\u6211\u4eab\u53d7\u4e86Ansible + Docker\u7684\u679c\u5b9e\uff0c\u7528\u4e8eNewsblur\u76845\u4e2a\u6570\u636e\u5e93\u670d\u52a1\u5668\uff08PostgreSQL\uff0cMongoDB\uff0cRedis\uff0cElasticsearch\u548cSoon ML Models\uff09\u3002\u8fd9\u4e00\u5929\u6b63\u5728\u5305\u88c5\uff0c\u5f53\u6211\u5728\u624b\u673a\u4e0a\u6536\u5230\u4e00\u4e2a\u5947\u602a\u7684\u65b0\u95fb\u535a\u5c14\u9519\u8bef\u65f6\uff0c\u6211\u4f1a\u878d\u5165\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u9a6f\u670d\u673a\u5668\u7684\u65b0\u4e66\u3002\n  \u8bda\u5b9e\u7684\u662f\uff0c\u5728\u6211\u60f3\u518d\u6b21\u770b\u5230\u7684\u90a3\u4e9b\u9519\u8bef\u6d88\u606f\u4e2d\u6ca1\u6709\u4e00\u5957\u5355\u8bcd\u3002\u5728\u90a3\u6761\u9519\u8bef\u6d88\u606f\u4e2d\u5220\u9664\u4e86\u4ec0\u4e48\uff1f\u66f4\u597d\u5730\u627e\u51fa\u7b54\u6848\u3002\n \u767b\u5f55MongoDB\u673a\u5668\u4ee5\u67e5\u770bDB\u6240\u5728\u7684\u72b6\u6001\uff0c\u6211\u9047\u5230\u4ee5\u4e0b\u5185\u5bb9......\n nbset\uff1aprimary\uff06gt; Show DBS Read_to_To_Recover_your_data 0.000 GB NewsBlur 0.718 GB NBset\uff1aPrimary\uff06Gt;\u4f7f\u7528read__me_to_recover_your_data\u5207\u6362\u5230db read_to_to_recover_your_data nbset\uff1aprimary\uff06gt; D b \u3002\u81ea\u8ff0\u3002 find\uff08\uff09{\uff06\uff0334; _id\uff06\uff0334; \uff1aObjectID\uff08\uff06\uff0334; 60d3e112ac48d82047aab95d\uff06\uff0334;\uff09\uff0c\uff06\uff0334;\u5185\u5bb9\uff06\uff0334; \uff1a\uff06\uff0334;\u60a8\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u5907\u4efd\u3002\u60a8\u5fc5\u987b\u652f\u4ed80.03 BTC\u5230XXXXXXXXXX 48\u5c0f\u65f6\u4ee5\u8fdb\u884c\u6062\u590d\u3002\u572848\u5c0f\u65f6\u540e\u5230\u671f\u540e\uff0c\u6211\u4eec\u5c06\u6cc4\u9732\u5e76\u66b4\u9732\u6240\u6709\u6570\u636e\u3002\u5728\u62d2\u7edd\u652f\u4ed8\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u8054\u7cfb\u4e00\u822c\u6570\u636e\u4fdd\u62a4\u89c4\u5219\uff0cGDPR\u5e76\u901a\u77e5\u4ed6\u4eec\u4ee5\u6253\u5f00\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u6570\u636e\uff0c\u5e76\u4e0d\u5b89\u5168\u3002\u5728\u6cd5\u5f8b\u89c4\u5219\u4e0b\uff0c\u60a8\u9762\u4e34\u6c89\u91cd\u6216\u902e\u6355\uff0c\u60a8\u7684\u57fa\u7840\u8f6c\u50a8\u5c06\u4ece\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e2d\u5220\u9664\uff01\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u8d2d\u4e70\u6bd4\u7279\u5e01\uff0c\u4e0d\u9700\u8981\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u8d2d\u4e70https://localbitoins.com\u6216https://buy.moonpay.io/\u5728\u7528db ip\u7684\u90ae\u4ef6\u4e2d\u5411\u6211\u5199\u4fe1\u540e\uff1afthisguy@recoverme.one\u548c\u60a8\u5c06\u6536\u5230\u4e00\u4e2a\u94fe\u63a5\u4ee5\u4e0b\u8f7d\u6570\u636e\u5e93\u8f6c\u50a8\u3002 \uff06\uff0334; }\n   \u53d1\u751f\u5728\u6b64\u4e4b\u524d\u4e09\u4e2a\u534a\u5c0f\u65f6\uff0c\u6211\u5c06MongoDB\u96c6\u7fa4\u5207\u6362\u5230\u65b0\u670d\u52a1\u5668\u3002\u5f53\u6211\u8fd9\u6837\u505a\u65f6\uff0c\u6211\u5173\u95ed\u4e86\u539f\u59cb\u6863\u6b21\uff0c\u4ee5\u4fbf\u5728\u51e0\u5929\u5185\u5220\u9664\u5b83\u3002\u5e76\u4e14\u8c22\u5929\u8c22\u5730\uff0c\u6211\u786e\u5b9e\u5982\u6b64\uff0c\u56e0\u4e3a\u5b83\u5728\u51e0\u4e2a\u5c0f\u65f6\u4e4b\u540e\u8fdb\u5165\u3002\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u6211\u610f\u8bc6\u5230\u9ed1\u5ba2\u65e0\u6cd5\u5728\u8fd9\u4e48\u5c11\u7684\u65f6\u95f4\u5185\u62ff\u8d70\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u3002\n \u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u60f3\u56de\u7b54\u4e00\u4e9b\u5173\u4e8e\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u95ee\u9898\u3002 \n\u8ba9\u6211\u4eec\u9996\u5148\u8c08\u8bba\u6700\u91cd\u8981\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4f60\u7684\u6570\u636e\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n  \u6211\u53ef\u4ee5\u660e\u786e\u5730\u5199\u4e0b\uff0c\u5728\u9ed1\u5ba2\u65f6\u6ca1\u6709\u6cc4\u9732\u4efb\u4f55\u6570\u636e\u3002\u6211\u77e5\u9053\u8fd9\u4e00\u70b9\u662f\u56e0\u4e3a\u4e24\u7ec4\u4e0d\u540c\u7684\u65e5\u5fd7\uff0c\u663e\u793a\u81ea\u52a8\u653b\u51fb\u8005\u53ea\u53d1\u5e03\u5220\u9664\u547d\u4ee4\uff0c\u5e76\u4e14\u6ca1\u6709\u4f20\u8f93MongoDB\u670d\u52a1\u5668\u7684\u4efb\u4f55\u6570\u636e\u3002\n   \u60a8\u53ef\u4ee5\u60f3\u8c61\u6211\u57289:35\u7684\u56db\u5341\u5206\u949f\u5185\u7ecf\u5386\u7684\u538b\u529b\uff0c\u5f53\u9ed1\u5ba2\u5f00\u59cb\u65f6\uff0c10\uff1a15p\uff0c\u5f53\u8bc6\u522b\u51fa\u65b0\u9c9c\u5907\u4efd\u5feb\u7167\u5e76\u6295\u5165\u9f7f\u8f6e\u65f6\u3002\u8ba9\u6211\u4eec\u51fb\u7a7f\u6bcf\u4e00\u523b\uff1a\n 6\uff1a10P\uff1a\u65b0\u7684DB-Mongo1\u670d\u52a1\u5668\u4f5c\u4e3aMongoDB\u4e3b\u670d\u52a1\u5668\u8fdb\u884c\u65cb\u8f6c\u3002\u8fd9\u53f0\u673a\u5668\u662f\u7b2c\u4e00\u4e2a\u65b0\u7684\uff0c\u5373\u5c06\u79c1\u4e0b\u7684\u4e91\u3002\n  9\uff1a35P\uff1a\u4e09\u5c0f\u65f6\u540e\uff0c\u81ea\u52a8\u9ed1\u5ba2\u5c1d\u8bd5\u6253\u5f00\u4e0eDB-Mongo1\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u5e76\u7acb\u5373\u4e22\u5f03\u6570\u636e\u5e93\u3002\u505c\u673a\u65f6\u95f4\u3002\n  10\uff1a15P\uff1a\u5728\u524d\u4e3b\u670d\u52a1\u5668\u53ef\u4ee5\u65cb\u8f6c\u4e4b\u524d\uff0c\u8fdb\u884c\u4e86\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u5feb\u7167\uff0c\u4ee5\u786e\u4fdd\u5907\u4efd\u5728\u91cd\u65b0\u8fde\u63a5\u65f6\u4e0d\u4f1a\u5220\u9664\u3002\u8fd9\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u7684\u505c\u673a\u65f6\u95f4\uff0c\u4f46\u901a\u8fc7\u4e0d\u5f3a\u8feb\u6211\u8fdb\u5165\u65e5\u5e38\u5907\u4efd\u6863\u6848\u7684\u4e00\u5929\u7684\u6570\u636e\u5360\u636e\u4e86\u8fd118\u5c0f\u65f6\u7684\u6570\u636e\u3002\n  3\uff1a00a\uff1a\u5feb\u7167\u5b8c\u6210\uff0c\u4ece\u539f\u59cb\u670d\u52a1\u5668\u5230\u65b0DB-Mongo1\u7684\u590d\u5236\u5f00\u59cb\u3002\u60a8\u5728\u4e0b\u4e2a\u5c0f\u65f6\u5185\u770b\u5230\u7684\u662f\u5728\u5e26\u5bbd\u65b9\u9762\u8f6c\u79fbDB\u7684\u8f6c\u79fb\u3002 \n4\uff1a30A\uff1a\u590d\u5236\uff0c\u8be5\u590d\u5236\u6765\u81ea\u65e7\u4e3b\u670d\u52a1\u5668\uff0c\u5b8c\u6210\uff0c\u73b0\u5728\u590d\u5236\u5728\u65b0\u4ecb\u7ecd\u65f6\u5f00\u59cb\u51fa\u7ad9\u3002 Newsblur\u73b0\u5728\u5907\u4efd\u4e86\u3002\n \u4e0a\u56fe\u6700\u91cd\u8981\u7684\u4fe1\u606f\u8868\u660e\u6211\u4eec\u662f\u5728\u5e26\u5bbd\u65b9\u9762\u7684\u5b8c\u6574\u6570\u636e\u5e93\u4f20\u8f93\u7684\u6837\u5b50\u3002\u4ece6p\u52309\uff1a30p\uff0c\u6570\u636e\u91cf\u662f\u6765\u81ea\u5de5\u4f5c\u4e3b\u670d\u52a1\u5668\u7684\u9884\u671f\u91d1\u989d\uff0c\u5176\u4e2d\u5305\u542b\u591a\u4e2a\u501f\u8c03\u5b83\u3002\u57283A\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u8f6c\u79fb\u5927\u91cf\u6570\u636e\u3002\n \u8fd9\u544a\u8bc9\u6211\u4eec\uff0c\u9ed1\u5ba2\u662f\u4e00\u79cd\u81ea\u52a8\u5316\u7684\u6570\u5b57\u7834\u574f\uff0c\u800c\u4e0d\u662f\u4e00\u56e2\u4e00\u6b21\u7684\u9ed1\u5ba2\u5c1d\u8bd5\u3002\u5982\u679c\u6211\u4eec\u8981\u652f\u4ed8\u8d4e\u91d1\uff0c\u90a3\u5c31\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u56e0\u4e3a\u7834\u574f\u8005\u6ca1\u6709\u6570\u636e\u5e76\u6ca1\u6709\u4efb\u4f55\u53ef\u91ca\u653e\u3002\n \u6211\u4eec\u4e5f\u53ef\u4ee5\u63a8\u7406\u56e0\u5728\u7801\u5934\u5bb9\u5668\u4e2d\u4f7f\u7528\u6700\u8fd1\u7248\u672c\u7684MongoDB\uff0c\u56e0\u6b64\u65e0\u6cd5\u8bbf\u95eeMongoDB\u4e4b\u5916\u7684\u670d\u52a1\u5668\u5916\u7684\u4efb\u4f55\u6587\u4ef6\u3002\u9664\u975e\u653b\u51fb\u8005\u53ef\u4ee5\u8bbf\u95eeMongoDB\u548cDocker\u4e24\u5929\uff0c\u5426\u5219\u5b83\u4eec\u975e\u5e38\u4e0d\u53ef\u80fd\u7a81\u7834MongoDB\u670d\u52a1\u5668\u8fde\u63a5\u3002\n \u5f53\u670d\u52a1\u5668\u662f\u5feb\u7167\u65f6\uff0c\u6211\u4f7f\u7528\u90a3\u4e2a\u65f6\u95f4\u6765\u5f04\u6e05\u695a\u9ed1\u5ba2\u5982\u4f55\u8fdb\u5165\u3002\n  \u62d2\u7eddUFW\u9632\u706b\u5899\uff0c\u6211\u542f\u7528\u5e76\u52aa\u529b\u4fdd\u6301\u4e25\u683c\u7684allowlist\uff0c\u53ea\u6709\u6211\u7684\u5185\u90e8\u670d\u52a1\u5668\u7531\u4e8e\u7801\u5934\u4eea\u800c\u5728\u65b0\u670d\u52a1\u5668\u4e0a\u6ca1\u6709\u5de5\u4f5c\u3002\u5f53\u6211\u96c6\u88c5\u7bb1MongoDB\u65f6\uff0cDocker\u6709\u52a9\u4e8e\u5c06\u5141\u8bb8\u89c4\u5219\u63d2\u5165iptables\uff0c\u5411\u4e16\u754c\u5f00\u653eMongoDB\u3002\u6240\u4ee5\uff0c\u867d\u7136\u6211\u7684\u9632\u706b\u5899\u662f\u201c\u6d3b\u8dc3\u201d\u7684\uff0c\u4f46\u505a\u4e00\u4e2asudo iptables -l | Grep 27017\u8868\u660eMongoDB\u5f00\u653e\u4e86\u4e16\u754c\u3002\u81ea2014\u5e74\u4ee5\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u7801\u5934\u811a\u67aa\u3002\n \u8981\u8bda\u5b9e\uff0c\u6211\u6709\u70b9\u60ca\u8bb6\uff0c\u5f53\u6211\u7ffb\u8f6c\u5f00\u5173\u65f6\uff0c\u5b83\u8d85\u8fc7\u4e863\u4e2a\u5c0f\u65f6\uff0c\u5f53\u4e00\u4e2a\u9ed1\u5ba2/\u7834\u574f\u8005\u7684MongoDB\u96c6\u5408\u65f6\uff0c\u5b83\u4f1a\u5047\u88c5\u8d4e\u91d1\u7ea6250GB\u7684\u6570\u636e\u3002\u8fd9\u662f\u81ea\u52a8\u9ed1\u5ba2\u7684\u5de5\u4f5c\uff0c\u4ee5\u53ca\u6211\u51c6\u5907\u7684\u3002\u4e00\u65e6\u5907\u4efd\u6062\u590d\uff0c\u5907\u7528\u5907\u7528\u5b54\u88ab\u4fee\u8865\u4e86\uff0c\u65b0\u95fb\u535a\u5c14\u5728\u7f51\u4e0a\u56de\u6765\u4e86\u3002 \nWarning: Can only detect less than 5000 characters\n\u7b2c\u4e00\u6b21\u6539\u53d8\u662f\u4e00\u79cd\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6211\u4eec\u6b63\u5728\u642c\u5230\u7684\u8fc7\u7a0b\u4e2d\u3002 VPC\u662f\u865a\u62df\u79c1\u6709\u4e91\uff0c\u53ef\u8ba9\u5173\u952e\u670d\u52a1\u5668\u514d\u53d7\u4e13\u7528\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u53ef\u8bbf\u95ee\u3002\u4f46\u5728\u79fb\u52a8\u5230\u79c1\u4eba\u7f51\u7edc\u65f6\uff0c\u6211\u9700\u8981\u8fc1\u79fb\u516c\u5f00\u53ef\u8bbf\u95ee\u7684\u673a\u5668\u7684\u6240\u6709\u6570\u636e\u3002\u8fd9\u662f\u8be5\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\u3002\n \u7b2c\u4e8c\u4e2a\u53d8\u5316\u662f\u5728\u6240\u6709\u6570\u636e\u5e93\u4e0a\u4f7f\u7528\u6570\u636e\u5e93\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1\u3002\u6211\u4eec\u4e00\u76f4\u4f9d\u9760\u9632\u706b\u5899\u6765\u4fdd\u62a4\u9632\u6b62\u5a01\u80c1\uff0c\u4f46\u662f\u5f53\u9632\u706b\u5899\u9ed8\u9ed8\u5730\u5931\u8d25\u65f6\uff0c\u6211\u4eec\u88ab\u63ed\u9732\u4e86\u3002\u73b0\u5728\u8c01\u8bf4\uff0c\u5982\u679c\u9632\u706b\u5899\u5931\u8d25\u4f46\u662f\u8eab\u4efd\u9a8c\u8bc1\u5df2\u7ecf\u5230\u4f4d\uff0c\u8fd9\u5c06\u88ab\u6355\u83b7\u3002\u6211\u6000\u7591\u5bc6\u7801\u9700\u8981\u957f\u65f6\u95f4\u8db3\u4ee5\u4e0d\u88ab\u5f3a\u5236\u5f3a\u5236\uff0c\u56e0\u4e3a\u6700\u7ec8\u77e5\u9053\u4e00\u4e2a\u6253\u5f00\u4f46\u5bc6\u7801\u53d7\u5230\u4fdd\u62a4\u7684\u6570\u636e\u5e93\uff0c\u5b83\u53ef\u80fd\u6700\u7ec8\u5728\u5217\u8868\u4e0a\u3002\n \u6700\u540e\uff0c\u9700\u8981\u8fdb\u884c\u66f4\u6539\uff0c\u6839\u636e\u54ea\u4e2a\u6570\u636e\u5e93\u7528\u6237\u6709\u6743\u5220\u9664\u6570\u636e\u5e93\u3002\u5927\u591a\u6570\u6570\u636e\u5e93\u7528\u6237\u53ea\u9700\u8981\u8bfb\u5199\u6743\u9650\u3002\u7406\u60f3\u5c06\u662f\u4ec5\u5141\u8bb8\u5141\u8bb8\u7684\u552f\u4e00\u7528\u6237\u6267\u884c\u6f5c\u5728\u7684\u7834\u574f\u6027\u52a8\u4f5c\u3002\u5982\u679crogue\u6570\u636e\u5e93\u7528\u6237\u5f00\u59cb\u5220\u9664\u6545\u4e8b\uff0c\u5219\u4f1a\u6bd4\u7acb\u5373\u4e22\u5f03\u7684\u6570\u636e\u5e93\u901f\u5ea6\u66f4\u5feb\u5730\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u3002\n \u4f46\u8fd9\u4e9b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ea\u662f\u4e00\u7247\u9632\u5fa1\u6218\u7565\u3002\u6b63\u5982\u8fd9\u826f\u597d\u7684\u9ed1\u5ba2\u65b0\u95fb\u7ebf\u8def\u4ece\u9ed1\u5ba2\u53d1\u5e03\u6240\u6e05\u695a\u7684\u90a3\u4e00\u5929\uff0c\u4e00\u4e2a\u9002\u5f53\u7684\u9632\u5fa1\u7b56\u7565\u6c38\u8fdc\u4e0d\u4f1a\u4f9d\u8d56\u4e00\u4e2a\u826f\u597d\u7684\u8bbe\u7f6e\u5c42\u3002\u5bf9\u4e8eNewsblur\uff0c\u8fd9\u5c42\u56fe\u5c42\u662f\u4e00\u4e2a\u53ea\u6709\u5141\u8bb8\u7684\u9632\u706b\u5899\uff0c\u76f4\u5230\u5b83\u6ca1\u6709\u5b8c\u7f8e\u5730\u8fd0\u4f5c\u3002\n \u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u771f\u6b63\u7684\u82f1\u96c4\u662f\u5907\u4efd\u3002\u5e38\u89c4\uff0c\u7ecf\u8fc7\u826f\u597d\u7684\u5907\u4efd\u662f\u4efb\u4f55Web\u670d\u52a1\u7684\u5fc5\u8981\u7ec4\u4ef6\u3002\u56e0\u6b64\uff0c\u6211\u5c06\u51c6\u5907\u5728\u672c\u5468\u665a\u4e9b\u65f6\u5019\u63a8\u51fa\u5927\u578b\u65b0\u95fb\u535a\u5c14\u91cd\u65b0\u8bbe\u8ba1\u3002 ", "note_en": "tl;dr: A vandal deleted NewsBlur\u2019s MongoDB database during a migration. No data was stolen or lost.\n I\u2019m in the process of moving everything on NewsBlur over to Docker containers in prep for a  big redesign launching next week. It\u2019s been a great year of maintenance and I\u2019ve enjoyed the fruits of Ansible + Docker for NewsBlur\u2019s 5 database servers (PostgreSQL, MongoDB, Redis, Elasticsearch, and soon ML models). The day was wrapping up and I settled into  a new book on how to tame the machines once they\u2019re smarter than us when I received a strange NewsBlur error on my phone.\n  There is honestly no set of words in that error message that I ever want to see again. What is  drop doing in that error message? Better go find out.\n Logging into the MongoDB machine to check out what state the DB is in and I come across the following\u2026\n nbset : PRIMARY &gt;  show  dbs READ__ME_TO_RECOVER_YOUR_DATA  0.000 GB newsblur  0.718 GB nbset : PRIMARY &gt;  use  READ__ME_TO_RECOVER_YOUR_DATA switched  to  db  READ__ME_TO_RECOVER_YOUR_DATA  nbset : PRIMARY &gt;  db . README . find () {  &#34; _id &#34;  :  ObjectId ( &#34; 60d3e112ac48d82047aab95d &#34; ),  &#34; content &#34;  :  &#34; All your data is a backed up. You must pay 0.03 BTC to XXXXXXFTHISGUYXXXXXXX 48 hours for recover it. After 48 hours expiration we will leaked and exposed all your data. In case of refusal to pay, we will contact the General Data Protection Regulation, GDPR and notify them that you store user data in an open form and is not safe. Under the rules of the law, you face a heavy fine or arrest and your base dump will be dropped from our server! You can buy bitcoin here, does not take much time to buy https://localbitcoins.com or https://buy.moonpay.io/ After paying write to me in the mail with your DB IP: FTHISGUY@recoverme.one and you will receive a link to download your database dump. &#34;  }\n   Three and a half hours before this happened, I switched the MongoDB cluster over to the new servers. When I did that, I shut down the original primary in order to delete it in a few days when all was well. And thank goodness I did that as it came in handy a few hours later. Knowing this, I realized that the hacker could not have taken all that data in so little time.\n With that in mind, I\u2019d like to answer a few questions about what happened here.\n  Let\u2019s start by talking about the most important question of all which is what happened to your data.\n  I can definitively write that no data was leaked during the hack. I know this because of two different sets of logs showing that the automated attacker only issued deletion commands and did not transfer any data off of the MongoDB server.\n   You can imagine the stress I experienced in the forty minutes between 9:35p, when the hack began, and 10:15p, when the fresh backup snapshot was identified and put into gear. Let\u2019s breakdown each moment:\n 6:10p: The new db-mongo1 server was put into rotation as the MongoDB primary server. This machine was the first of the new, soon-to-be private cloud.\n  9:35p: Three hours later an automated hacking attempt opened a connection to the db-mongo1 server and immediately dropped the database. Downtime ensued.\n  10:15p: Before the former primary server could be placed into rotation, a snapshot of the server was made to ensure the backup would not delete itself upon reconnection. This cost a few hours of downtime, but saved nearly 18 hours of a day\u2019s data by not forcing me to go into the daily backup archive.\n  3:00a: Snapshot completes, replication from original primary server to new db-mongo1 begins. What you see in the next hour and a half is what the transfer of the DB looks like in terms of bandwidth.\n  4:30a: Replication, which is inbound from the old primary server, completes, and now replication begins outbound on the new secondaries. NewsBlur is now back up.\n The most important bit of information the above chart shows us is what a full database transfer looks like in terms of bandwidth. From 6p to 9:30p, the amount of data was the expected amount from a working primary server with multiple secondaries syncing to it. At 3a, you\u2019ll see an enormous amount of data transfered.\n This tells us that the hacker was an automated digital vandal rather than a concerted hacking attempt. And if we were to pay the ransom, it wouldn\u2019t do anything because the vandals don\u2019t have the data and have nothing to release.\n We can also reason that the vandal was not able to access any files that were on the server outside of MongoDB due to using a recent version of MongoDB in a Docker container. Unless the attacker had access to a 0-day to both MongoDB and Docker, it is highly unlikely they were able to break out of the MongoDB server connection.\n While the server was being snapshot, I used that time to figure out how the hacker got in.\n  Turns out the ufw firewall I enabled and diligently kept on a strict allowlist with only my internal servers didn\u2019t work on a new server because of Docker. When I containerized MongoDB, Docker helpfully inserted an allow rule into iptables, opening up MongoDB to the world. So while my firewall was \u201cactive\u201d, doing a  sudo iptables -L | grep 27017 showed that MongoDB was open the world. This has been  a Docker footgun since 2014.\n To be honest, I\u2019m a bit surprised it took over 3 hours from when I flipped the switch to when a hacker/vandal dropped NewsBlur\u2019s MongoDB collections and pretended to ransom about 250GB of data. This is the work of an automated hack and one that I was prepared for. NewsBlur was back online a few hours later once the backups were restored and the Docker-made hole was patched.\n It would make for a much more dramatic read if I was hit through a vulnerability in Docker instead of a footgun. By having Docker silently override the firewall, Docker has made it easier for developers who want to open up ports on their containers at the expense of security. Better would be for Docker to issue a warning when it detects that the most popular firewall on Linux is active and filtering traffic to a port that Docker is about to open.\n  The second reason we know that no data was taken comes from looking through the MongoDB access logs. With these rich and verbose logging sources we can invoke a pretty neat command to find everybody who is not one of the 100 known NewsBlur machines that has accessed MongoDB.\n $ cat /var/log/mongodb/mongod.log | egrep -v &#34;159.65.XX.XX|161.89.XX.XX|&lt;&lt; SNIP: A hundred more servers &gt;&gt;&#34;2021-06-24T01:33:45.531+0000 I NETWORK [listener] connection accepted from 171.25.193.78:26003 #63455699 (1189 connections now open)2021-06-24T01:33:45.635+0000 I NETWORK [conn63455699] received client metadata from 171.25.193.78:26003 conn63455699: { driver: { name: &#34;PyMongo&#34;, version: &#34;3.11.4&#34; }, os: { type: &#34;Linux&#34;, name: &#34;Linux&#34;, architecture: &#34;x86_64&#34;, version: &#34;5.4.0-74-generic&#34; }, platform: &#34;CPython 3.8.5.final.0&#34; }2021-06-24T01:33:46.010+0000 I NETWORK [listener] connection accepted from 171.25.193.78:26557 #63455724 (1189 connections now open)2021-06-24T01:33:46.092+0000 I NETWORK [conn63455724] received client metadata from 171.25.193.78:26557 conn63455724: { driver: { name: &#34;PyMongo&#34;, version: &#34;3.11.4&#34; }, os: { type: &#34;Linux&#34;, name: &#34;Linux&#34;, architecture: &#34;x86_64&#34;, version: &#34;5.4.0-74-generic&#34; }, platform: &#34;CPython 3.8.5.final.0&#34; }2021-06-24T01:33:46.500+0000 I NETWORK [conn63455724] end connection 171.25.193.78:26557 (1198 connections now open)2021-06-24T01:33:46.533+0000 I NETWORK [conn63455699] end connection 171.25.193.78:26003 (1200 connections now open)2021-06-24T01:34:06.533+0000 I NETWORK [listener] connection accepted from 185.220.101.6:10056 #63456621 (1266 connections now open)2021-06-24T01:34:06.627+0000 I NETWORK [conn63456621] received client metadata from 185.220.101.6:10056 conn63456621: { driver: { name: &#34;PyMongo&#34;, version: &#34;3.11.4&#34; }, os: { type: &#34;Linux&#34;, name: &#34;Linux&#34;, architecture: &#34;x86_64&#34;, version: &#34;5.4.0-74-generic&#34; }, platform: &#34;CPython 3.8.5.final.0&#34; }2021-06-24T01:34:06.890+0000 I NETWORK [listener] connection accepted from 185.220.101.6:21642 #63456637 (1264 connections now open)2021-06-24T01:34:06.962+0000 I NETWORK [conn63456637] received client metadata from 185.220.101.6:21642 conn63456637: { driver: { name: &#34;PyMongo&#34;, version: &#34;3.11.4&#34; }, os: { type: &#34;Linux&#34;, name: &#34;Linux&#34;, architecture: &#34;x86_64&#34;, version: &#34;5.4.0-74-generic&#34; }, platform: &#34;CPython 3.8.5.final.0&#34; }2021-06-24T01:34:08.018+0000 I COMMAND [conn63456637] dropDatabase config - starting2021-06-24T01:34:08.018+0000 I COMMAND [conn63456637] dropDatabase config - dropping 1 collections2021-06-24T01:34:08.018+0000 I COMMAND [conn63456637] dropDatabase config - dropping collection: config.transactions2021-06-24T01:34:08.020+0000 I STORAGE [conn63456637] dropCollection: config.transactions (no UUID) - renaming to drop-pending collection: config.system.drop.1624498448i1t-1.transactions with drop optime { ts: Timestamp(1624498448, 1), t: -1 }2021-06-24T01:34:08.029+0000 I REPL [replication-14545] Completing collection drop for config.system.drop.1624498448i1t-1.transactions with drop optime { ts: Timestamp(1624498448, 1), t: -1 } (notification optime: { ts: Timestamp(1624498448, 1), t: -1 })2021-06-24T01:34:08.030+0000 I STORAGE [replication-14545] Finishing collection drop for config.system.drop.1624498448i1t-1.transactions (no UUID).2021-06-24T01:34:08.030+0000 I COMMAND [conn63456637] dropDatabase config - successfully dropped 1 collections (most recent drop optime: { ts: Timestamp(1624498448, 1), t: -1 }) after 7ms. dropping database2021-06-24T01:34:08.032+0000 I REPL [replication-14546] Completing collection drop for config.system.drop.1624498448i1t-1.transactions with drop optime { ts: Timestamp(1624498448, 1), t: -1 } (notification optime: { ts: Timestamp(1624498448, 5), t: -1 })2021-06-24T01:34:08.041+0000 I COMMAND [conn63456637] dropDatabase config - finished2021-06-24T01:34:08.398+0000 I COMMAND [conn63456637] dropDatabase newsblur - starting2021-06-24T01:34:08.398+0000 I COMMAND [conn63456637] dropDatabase newsblur - dropping 37 collections&lt;&lt; SNIP: It goes on for a while... &gt;&gt;2021-06-24T01:35:18.840+0000 I COMMAND [conn63456637] dropDatabase newsblur - finished\n The above is a lot, but the important bit of information to take from it is that by using a subtractive filter, capturing everything that doesn\u2019t match a known IP, I was able to find the two connections that were made a few seconds apart. Both connections from these unknown IPs occured only moments before the database-wide deletion. By following the connection ID, it became easy to see the hacker come into the server only to delete it seconds later.\n Interestingly, when I visited the IP address of the  two  connections above, I found a Tor exit router:\n  This means that it is virtually impossible to track down who is responsible due to the anonymity-preserving quality of Tor exit routers.  Tor exit nodes have poor reputations due to the havoc they wreak. Site owners are split on whether to block Tor entirely, but some see the value of allowing anonymous traffic to hit their servers. In NewsBlur\u2019s case, because NewsBlur is a home of free speech, allowing users in countries with censored news outlets to bypass restrictions and get access to the world at large, the continuing risk of supporting anonymous Internet traffic is worth the cost.\n  Of course, being in support of free speech and providing enhanced ways to access speech comes at a cost. So for NewsBlur to continue serving traffic to all of its worldwide readers, several changes have to be made.\n The first change is the one that, ironically, we were in the process of moving to. A VPC, a virtual private cloud, keeps critical servers only accessible from others servers in a private network. But in moving to a private network, I need to migrate all of the data off of the publicly accessible machines. And this was the first step in that process.\n The second change is to use database user authentication on all of the databases. We had been relying on the firewall to provide protection against threats, but when the firewall silently failed, we were left exposed. Now who\u2019s to say that this would have been caught if the firewall failed but authentication was in place. I suspect the password needs to be long enough to not be brute-forced, because eventually, knowing that an open but password protected DB is there, it could very possibly end up on a list.\n Lastly, a change needs to be made as to which database users have permission to drop the database. Most database users only need read and write privileges. The ideal would be a localhost-only user being allowed to perform potentially destructive actions. If a rogue database user starts deleting stories, it would get noticed a whole lot faster than a database being dropped all at once.\n But each of these is only one piece of a defense strategy.  As this well-attended Hacker News thread from the day of the hack made clear, a proper defense strategy can never rely on only one well-setup layer. And for NewsBlur that layer was a allowlist-only firewall that worked perfectly up until it didn\u2019t.\n As usual the real heros are backups. Regular, well-tested backups are a necessary component to any web service. And with that, I\u2019ll prepare to  launch the big NewsBlur redesign later this week.", "posttime": "2021-06-29 23:07:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "mongodb,docker,\u6570\u636e\u5e93,database,footgun", "title": "Docker Footgun\u5bfc\u81f4\u4e86\u4e00\u4e2a\u7834\u574f\u7684\u5220\u9664Newsblur\u7684MongoDB\u6570\u636e\u5e93 ", "title_en": "A Docker footgun led to a vandal deleting NewsBlur's MongoDB database", "transed": 1, "url": "https://blog.newsblur.com/2021/06/28/story-of-a-hacking/", "via": "", "real_tags": ["mongodb", "docker", "\u6570\u636e\u5e93", "database", "footgun"]}, {"category": "", "categoryclass": "", "imagename": "47a1d84cf500ce222a50d6c7fa6d0c7f.jpg", "infoid": 1068523, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u5173\u4e8eDIY\u667a\u80fd\u5bb6\u7535\u7684\u6700\u540e\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5199\u4e86\u5173\u4e8e\u6052\u6e29\u5668\u3002 Chipotherm\u73b0\u5728\u5df2\u7ecf\u5728\u8857\u673a\u4e00\u5e74\u591a\u8fd0\u884c\uff0c\u5b83\u4ecd\u7136\u5f88\u68d2\uff01\u5bf9\u6211\u7684DIY\u667a\u80fd\u6052\u6e29\u5668\u6b66\u88c5\u70ed\u60c5\uff0c\u521a\u642c\u8fdb\u4e86\u4e00\u4e2a\u5e26\u6709\u6212\u6307\u95e8\u94c3\u7684\u65b0\u623f\u5b50\u91cc\uff0c\u6211\u4ee5\u4e3a\u6211\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u6784\u5efa\u81ea\u5df1\u7684DIY\u95e8\u94c3\u6765\u53d6\u4ee3\u5b83\u3002\n \u6211\u5bf9\u8fd9\u4e2a\u9879\u76ee\u7684\u52a8\u673a\u53ea\u662f\u5e0c\u671b\u5efa\u7acb\u65b0\u7684\u548c\u4e50\u8da3\u3002\u73af\u5f62\u95e8\u94c3\u73b0\u5728\u7531\u5e7f\u544aMegacorp\u4e9a\u9a6c\u900a\u62e5\u6709\uff0c\u906d\u53d7\u4e86\u5173\u4e8e\u5de2\u6052\u6e29\u5668\u7684\u5e16\u5b50\u4e2d\u63cf\u8ff0\u7684\u6240\u6709\u76f8\u540c\u9690\u79c1\u95ee\u9898\uff0c\u4f46\u66f4\u7cdf\u7cd5\u7684\u662f\u3002\u50cf\u5de2\u6052\u6e29\u5668\u4e00\u6837\uff0c\u5ba2\u6237\u7aef\u8f6f\u4ef6\u662f\u4e00\u4e2a\u603b\u201c\u7ade\u4e89\u5230\u5e95\u201d\u4e00\u5c3a\u5bf8\u9002\u5408 - \u6240\u6709\u5783\u573eIOS\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u4ec5\u770b\u8d77\u6765\u5f88\u7cdf\u7cd5\uff0c\u800c\u4e14\u5145\u6ee1\u4e86\u9519\u8bef\u3002\u4e5f\u559c\u6b22\u5de2\uff0c\u6240\u6709\u6570\u636e\u90fd\u6258\u7ba1\u5728\u201c\u4e91\u201d\u4e2d\uff0c\u5e76\u4e14\u5728\u60a8\uff08\u201c\u5ba2\u6237\u201d\uff09\u4e4b\u524d\u9700\u8981\u6bcf\u6708\u8d4e\u91d1\uff08\u201c\u5ba2\u6237\u201d\uff09\u3002\u7136\u800c\uff0c\u6bd4\u5de2\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6212\u6307\u95e8\u94c3\u5b9e\u9645\u4e0a\u62e5\u6709\u76f8\u673a\u548c\u9ea6\u514b\u98ce\u5185\u7f6e\uff0c\u6240\u4ee5\u89c6\u9891\u548c\u97f3\u9891\u6e90\u4e5f\u5728\u201c\u4e91\u201d\u4e2d\u8d4e\u91d1\uff0c\u5e76\u4e0e\u4efb\u4f55\u5174\u8da3\u7684\u5dde\u5171\u4eab\uff0c\u6709\u65f6\u751a\u81f3\u5171\u4eab\u672a\u7ecf\u60a8\u7684\u8bb8\u53ef\u3002\n \u5c31\u50cf\u8bb8\u591a\u5176\u4ed6\u7269\u8d28\u4ea7\u54c1\u4e00\u6837\uff0c\u6212\u6307\u4e5f\u53d7\u5230\u591a\u79cd\u707e\u96be\u6027\u7684\u6570\u636e\u6cc4\u9732\uff0c\u8fd9\u610f\u5473\u7740\u9664\u6267\u6cd5\u673a\u6784\u548c\u5e7f\u544a\u5408\u4f5c\u4f19\u4f34\u4e4b\u5916\uff0c\u8bb8\u591a\u6212\u6307\u5ba2\u6237\u7684\u79c1\u4eba\u6570\u636e\u73b0\u5728\u4e5f\u5728\u6076\u610f\u9ed1\u5ba2\u624b\u4e2d\uff0c\u53ef\u80fd\u5728\u672a\u6765\u63d0\u4f9b\u6bd4\u4e9a\u9a6c\u900a\u63d0\u4f9b\u7684\u66f4\u96be\u62d2\u7edd\u7684\u8d4e\u91d1\u3002\u6765\u81eaARS Technica\u7684\u8fd9\u7bc7\u6587\u7ae0\u4f3c\u4e4e\u8868\u660e\uff0c\u95ee\u9898\u4e5f\u5373\u5c06\u53d8\u5f97\u66f4\u52a0\u5dee\uff0c\u5728\u4f5c\u54c1\u4e2d\u81ea\u52a8\u8f66\u724c\u68c0\u6d4b\u548c\u66f4\u591a\u7684\u8b66\u5bdf\u4f19\u4f34\u5173\u7cfb\u3002\n \u5728\u4eca\u5929\u7684\u4f01\u4e1a\u76d1\u63a7\u4e16\u754c\u4e2d\uff0c\u5efa\u7acb\u81ea\u5df1\u7684DIY\u667a\u80fd\u5bb6\u7535\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u8d85\u7ea7\u5927\u56fd - \u4e5f\u5f88\u6709\u8da3\uff01\u6211\u6700\u521d\u8ba1\u5212\u53ea\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6309\u94ae\uff0c\u4e5f\u8bb8\u9644\u52a0\u5230ESP8266\uff0c\u8fd9\u662f\u4e00\u4e2a\u7f8e\u5999\u7684\u65b0WiFi\u5fae\u63a7\u5236\u5668\uff0c\u8fd9\u4e9b\u5929\u6c14\u968f\u7740\u5bb6\u5ead\u81ea\u52a8\u5316\u7231\u597d\u8005\u800c\u53d8\u5f97\u975e\u5e38\u6d41\u884c\u3002\u5f53\u6211\u51b3\u5b9a\u52a0\u4e0a\u4e00\u4e2a\u5f88\u9177\u7684LED\u548c\u76f8\u673a\uff08\u5176\u9972\u6599\u5b8c\u5168\u5728\u6258\u7ba1\u65f6\uff0c\u8be5\u9879\u76ee\u8fc5\u901f\u589e\u957f\u4e86\u8303\u56f4\u3002\n  \u5bf9\u4e8e\u786c\u4ef6\uff0c\u6240\u81f4\u601d\u60f3\u7684\u7b2c\u4e00\u4ef6\u4e8b\u663e\u7136\u662f\u6309\u94ae\u3002\u6211\u51b3\u5b9a\u5148\u8d2d\u4e70\u4e00\u4e2a\u9177\u7684\u201c\u53d1\u52a8\u673a\u542f\u52a8\u5668\u201d\u6c7d\u8f66\u6309\u94ae1\uff0c\u5e76\u5728\u6b64\u5904\u8bbe\u8ba1\u5176\u4f59\u7684\u95e8\u94c3\u3002\u56f4\u7ed5\u6309\u94ae\u7684LED\u4e5f\u901a\u8fc712VDC\u4f9b\u7535\uff0c\u56e0\u6b64\u5982\u679c\u6211\u5e0c\u671b\u80fd\u591f\u901a\u8fc7\u8f6f\u4ef6\u63a7\u5236\u5b83\uff0c\u6211\u8fd8\u9700\u8981\u83b7\u5f97MOSFET\u5e76\u6784\u5efa\u4e00\u4e2a\u5c0f\u7535\u8def\u3002\n  \u4e3a\u4e86\u63a7\u5236\u4e00\u5207\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528\u8986\u76c6\u5b50PI\u96f6\u70b9\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u8db3\u591f\u7684GPIO\u5f15\u811a\uff0c\u7528\u4e8e\u68c0\u6d4b\u5f00\u5173\u538b\u529b\u673a\uff0c\u4e00\u4e2a\u7528\u4e8e\u8c03\u5236\u6309\u94ae\u5185\u90e8\u7684LED\u7684PWM\u5f15\u811a\uff0c\u4ee5\u53ca\u7279\u6b8a\u7684\u76f8\u673a\u603b\u7ebf\u3002\u8986\u76c6\u5b50PI Zero\u7684\u8d85\u5c0f\u5c3a\u5bf8\u4e5f\u610f\u5473\u7740\u6211\u53ef\u80fd\u4f1a\u5c06\u5176\u878d\u5408\u5728\u51e0\u4e4e\u4efb\u4f55\u5185\u5bb9\u4e2d\uff0c\u8fd9\u975e\u5e38\u4e0d\u592a\u53ef\u80fd\u8981\u6c42\u975e\u5e38\u591a\u7684\u7535\u529b\u6216\u51b7\u5374\u8d44\u6e90\u3002\n \u5bf9\u4e8e\u63a5\u7ebf\u6765\u8bf4\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u7684\u5bb6\u56ed\u7684\u524d\u4e00\u4f4d\u62e5\u6709\u8005\u5df2\u7ecf\u5728\u4ee5\u592a\u7f51\u4e0a\u6709\u7ebf\uff08\u5176\u4e2d\u8981\u5b89\u88c5\u7684\u4f4d\u7f6e\uff09\uff0c\u53ef\u80fd\u662f\u67d0\u79cd\u547c\u53eb\u6846\u6216\u5b89\u5168\u7cfb\u7edf\u3002\u8fd9\u610f\u5473\u7740\u4f7f\u7528over-over-okernet\uff08PoE\uff09\uff0c\u6211\u53ef\u4ee5\u4ece\u8f66\u5e93\u8fd0\u884c\u7535\u6e90\u548c\u7f51\u7edc\uff0c\u5176\u4e2d\u6211\u7684\u8def\u7531\u5668/\u670d\u52a1\u5668\u4f4d\u4e8e\u8981\u5b89\u88c5\u95e8\u94c3\u7684\u95e8\u53e3\u3002\u8fd9\u9700\u8981\u4e00\u4e2a\u57fa\u672c\u7684PoE\u5206\u79bb\u5668/\u63a5\u6536\u5668\uff0c\u4ee5\u53ca\u7528\u4e8e\u8986\u76c6\u5b50PI\u96f6\u7684\u4ee5\u592a\u7f51\u9002\u914d\u5668\uff08\u56e0\u4e3a\u5b83\u6ca1\u6709\u50cf\u5168\u5c3a\u5bf8\u8986\u76c6\u5b50PI\u8fd9\u6837\u7684\u8239\u4e0a\u4ee5\u592a\u7f51\uff09\u3002 \n\u6700\u540e\uff0c\u6848\u4ef6\u5c06\u4e00\u5207\u90fd\u653e\u5165\u3002\u6211\u4ee5\u4e3a\u8fd9\u5c06\u5f88\u5bb9\u66133D\u6253\u5370\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u5e26\u6709\u524d\u65b9\u548c\u80cc\u90e8\u6d1e\u7684\u5957\u4ef6\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b83\u7ed3\u679c\u5f88\u96be\u5efa\u7acb\u3002\u6211\u62e5\u6709\u76843D\u6253\u5370\u673a\u662f\u7b2c\u4e00\u4ee3Makerbot Replicator\uff0c\u65e0\u6cd5\u6253\u5370\u9002\u5408\u5728\u4e00\u8d77\u7684\u96f6\u4ef6\u3002\u6700\u7ec8\u7ed3\u679c\u662f\u4e09\u4e2a\u72ec\u7acb\u7684\u5851\u6599\u4ef6\uff0c\u4e0d\u543b\u5408\u5728\u4e00\u8d77\uff0c\u6700\u7ec8\u6210\u4e3a\u771f\u6b63\u8106\u5f31\u7684\u3002\n  \u6211\u7684\u4e00\u4f4d\u670b\u53cb\u6709\u4e00\u4e2a\u66f4\u6602\u8d35\u7684\u7acb\u4f53\u58f0\u5149\u523b3D\u6253\u5370\u673a\uff0c\u6240\u4ee5\u6211\u8bd5\u7740\u5c1d\u8bd5\u6253\u5370\u6211\u6700\u521d\u63d0\u51fa\u7684\u76f8\u540c\u8bbe\u8ba1\u3002\u8fd9\u5bfc\u81f4\u4e86\u66f4\u51c6\u786e\u7684\u6253\u5370\uff0c\u788e\u7247\u975e\u5e38\u597d\u5730\u9002\u5408\u5728\u4e00\u8d77\u3002\u7136\u800c\uff0c\u4e5f\u8bb8\u7531\u4e8e\u6240\u7528\u6811\u8102\u7684\u7c7b\u578b\uff0c\u4e5f\u6700\u7ec8\u6210\u4e3a\u6781\u8106\u5f31\u7684\u3002\n   \u6211\u6700\u7ec8\u8d2d\u4e70\u4e86\u6765\u81eaDigikey\u7684\u4e00\u4e2a\u771f\u6b63\u7684\u6ce8\u5851\u6210\u578b\u673a\u7bb1\u7ea69\u7f8e\u5143\u3002\u5b83\u6700\u7ec8\u53ea\u662f\u5728\u6279\u91cf\u751f\u4ea7\u7684\u5916\u58f3\u4e2d\u94bb\u5b54\u800c\u4e0d\u662f\u94bb\u5b54\uff0c\u800c\u4e0d\u662f3D\u6253\u5370\u5b9a\u5236\u8bbe\u8ba1\u3002\u8d28\u91cf\u4e5f\u6bd4\u4efb\u4f55\u6253\u5370\u66f4\u597d\u3002\n       \u4e3a\u4e86\u590d\u5236\u6212\u6307\u529f\u80fd\u6700\u91cd\u8981\u7684\u90e8\u5206\uff0c\u9700\u8981\u5728Raspberry PI\u4e0a\u8fd0\u884c\u4e00\u4e9b\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u5728\u6309\u94ae\u6309\u4e0b\u8f6e\u8be2\uff0c\u7136\u540e\u5728\u6211\u7684\u7f51\u7edc\u4e0a\u4e0e\u4e00\u4e9b\u8ba1\u7b97\u673a\u8054\u7cfb\uff0c\u4ee5\u901a\u77e5\u6211\u5173\u4e8e\u95e8\u94c3\u4e8b\u4ef6\u3002\u6211\u53eb\u8fd9\u4e9b\u201c\u53ee\u5f53\u201d2.\u521a\u624d\uff0c\u6211\u521a\u624d\u4e86\u89e3\u5230\u8fd9\u9879\u4f1f\u5927\u7684\u534f\u8bae\uff0c\u88abDIY IOT\u7231\u597d\u8005\u6240\u4ee4\u4eba\u94a6\u4f69\uff0c\u6216\u8005\u662fMQTT\u7684DIY IOT\u7231\u597d\u8005\uff0c\u6216\u6d88\u606f\u6392\u961f\u548c\u9065\u6d4b\u4f20\u8f93\u534f\u8bae\u3002\u5b83\u7684\u4e3b\u65e8\u662f\u5b83\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u6d88\u606f\u7684Pubsub\uff08\u53d1\u5e03\u8005\uff09\u534f\u8bae\u3002\u5b83\u662f\u4e00\u79cd\u50cfNSNotificeCenter\u4e00\u6837\uff0c\u4f46\u5bf9\u4e8e\u60a8\u7684\u672c\u5730\u7f51\u7edc\u3002\u6709\u4e3b\u9898\u548c\u6d88\u606f\uff0c\u8fd9\u5c31\u662f\u5173\u4e8e\u5b83\u7684\u3002\u4e3b\u9898\u901a\u5e38\u4ee5\u57df/\u5b50\u57df/\u4e3b\u9898\u7684\u683c\u5f0f\uff0c\u4f46\u5b83\u771f\u7684\u53ef\u4ee5\u662f\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u53ea\u8981\u5b83\u5728\u5b9e\u73b0\u4e2d\u4e00\u81f4\u3002\n \u5728\u6211\u7684\u95e8\u94c3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u9009\u62e9\u7684\u8bdd\u9898\u662f\u4e01\u4e8b\u4ef6\u7684\u95e8\u94c3/ ding\u3002\u8be5\u6309\u94ae\u5728\u8986\u76c6\u5b50PI\u4e0a\u7269\u7406\u8fde\u63a5\u5230GPIO\u5f15\u811a\uff0c\u56e0\u6b64\u6709\u4e00\u70b9\u4ee3\u7801\u5bf9\u6b64\u5f15\u811a\u8fdb\u884c\u8c03\u7528\u9ad8\uff0c\u800c\u4e14\u5728\u5b83\u6240\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u5728MQTT\u4e0a\u53d1\u5e03\u5230\u95e8\u94c3/ ding\u4e3b\u9898\u7684\u6d88\u606f\u3002\n \u73b0\u5728\uff0c\u95e8\u94c3\u672c\u8eab\u5c31\u662f\u901a\u77e5\u6211\u7684\u7f51\u7edc\u5173\u4e8e\u4e01\u4e8b\u4ef6\uff0c\u6211\u53ea\u9700\u8981\u4e00\u4e9b\u5173\u4e8e\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u4e1c\u897f\uff0c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5411\u6211\u901a\u77e5\u6211\u3002\u521a\u624d\uff0c\u6211\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5c0fGNU / Linux PC\u548c\u4e00\u4e2a\u63a5\u6536\u5668\uff0c\u5c06\u4e0e\u8d77\u5c45\u5ba4\u7684\u626c\u58f0\u5668\u8fde\u63a5\u5230\u6211\u7684\u5ba2\u5385\u91cc\u4f5c\u4e3aMPD\u670d\u52a1\u5668\u8fdb\u884c\u97f3\u4e50\u3002\u6bcf\u5f53\u53d1\u5e03\u5230Ding MQTT\u4e3b\u9898\u65f6\uff0c\u5c31\u8ba9\u8fd9\u53f0\u7535\u8111\u64ad\u653e\u95e8\u94c3\u58f0\u97f3\u975e\u5e38\u5bb9\u6613\uff01\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u5199\u4e00\u4e2a\u5728\u5faa\u73af\u4e2d\u8fd0\u884c\u7684\u5c0fshell\u811a\u672c\u3002\n  \u6240\u6709\u6b64shell\u811a\u672c\u90fd\u4f7f\u7528mosquitto_sub\u8ba2\u9605hassio.nor\u4e0a\u7684\u95e8\u94c3/ ding\u4e3b\u9898\uff08\u5373\u6211\u7684MQTT\u670d\u52a1\u5668\uff0c\u53ea\u80fd\u5728\u6211\u7684LAN\u4e0a\u8bbf\u95ee\uff09\uff0c\u6bcf\u5f53\u6d88\u606f\u53d1\u9001\u5230\u8be5\u4e3b\u9898\u65f6\u64ad\u653e\u95e8\u94c3\u3002 -c 1\u9009\u9879\u8868\u793a\u7b49\u5f85\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u9000\u51fa\u3002\u8fd9\u662f\u6c38\u8fdc\u5728\u5faa\u73af\u4e2d\u6267\u884c\u7684\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e00\u76f4\u5f88\u68d2\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22MQTT\u7684\u7b80\u5355\u6027\u3002 \n\u81ea\u4ece\u6211\u5728\u7535\u89c6\u4e0a\u8fd0\u884cKodi Media Center\u4ee5\u6765\uff0c\u5728\u6211\u7684\u7535\u89c6\u4e0a\u770b\u8fd9\u4e9b\u901a\u77e5\u4e5f\u975e\u5e38\u5bb9\u6613\uff01\n \u6211\u4e0d\u5f97\u4e0d\u505a\u7684\u4e0b\u4e00\u4ef6\u4e8b\u662f\u5f04\u6e05\u695a\u67d0\u79cd\u65b9\u5f0f\u6765\u901a\u77e5\u6211\u7684iPhone\u4e86\u89e3\u4e01\u4e8b\u4ef6\uff0c\u4ee5\u9632\u6709\u4eba\u5728\u79bb\u5bb6\u51fa\u8d70\u7684\u65f6\u5019\u6572\u54cd\u6211\u7684\u95e8\u94c3\u3002\u6211\u4ee5\u4e3a\u8fd9\u53ef\u80fd\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u4e3a\u4e86\u505a\u63a8\u9001\u901a\u77e5\uff0c\u6211\u53ef\u80fd\u9700\u8981\u7f16\u5199\u4e00\u4e2aiOS\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u8fd0\u884c\u4e00\u4e2a\u670d\u52a1\u5668\u6765\u7b7e\u540d\u5e76\u53d1\u5e03\u5230Apple\u7684\u63a8\u9001\u901a\u77e5\u670d\u52a1\uff0c\u4ee5\u53ca\u4e00\u5806\u5176\u4ed6Hooey\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u6700\u8fd1\u5728\u5bb6\u4e3a\u6211\u6b63\u5728\u52aa\u529b\u7684\u5176\u4ed6\u9879\u76ee\u8bbe\u7f6e\u5bb6\u5ead\u52a9\u7406\u670d\u52a1\u5668\u3002 Home Assistant iOS\u5e94\u7528\u7a0b\u5e8f\u652f\u6301\u63a8\u9001\u901a\u77e5\uff0c\u53ef\u7528\u4e8e\u7531MQTT\u4e8b\u4ef6\u89e6\u53d1\u7684\u81ea\u52a8\u5316\u3002\u6240\u6709\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u5728\u5bb6\u5ead\u52a9\u7406\u4e2d\u8bbe\u7acb\u81ea\u52a8\u5316\uff0c\u8be5\u81ea\u52a8\u5316\u5c06\u8ba2\u9605\u95e8\u94c3/\u4e01\u4e3b\u9898\uff0c\u5e76\u4e14\u5f53\u4e00\u4e2a\u53d1\u8868\u5728\u8be5\u4e3b\u9898\u7684\u6d88\u606f\u65f6\uff0c\u5bb6\u5ead\u52a9\u624b\u5c06\u79f0\u81ea\u5df1\u7684\u201c\u901a\u77e5\u201d\u670d\u52a1\u5c06\u901a\u77e5\u63a8\u9001\u7ed9\u624b\u673a\u901a\u77e5\uff08\u5e76\u505a\u4efb\u4f55\u5176\u4ed6\u4e8b\u60c5\uff09\u3002\u5ef6\u4f38\u548c\u9ed1\u5ba2\u5bb6\u5ead\u52a9\u624b\u7684\u770b\u4f3c\u65e0\u9650\u6570\u91cf\u662f\u6211\u559c\u6b22\u4f7f\u7528\u5b83\u7684\u539f\u56e0\uff0c\u4e3aDIY IOT\u9879\u76ee\u4f7f\u7528\u5b83\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u6700\u7ec8\u5199\u4e86\u8fd9\u4e2a\u9879\u76ee\u7684\u670d\u52a1\u5668\u7aef\u7684\u4ee3\u7801\uff0c\u8fd9\u5f88\u6574\u6d01\u3002\n  \u8fd9\u4e2a\u9879\u76ee\u7684\u6700\u91cd\u8981\u90e8\u5206\u662f\u4e3a\u4e86\u8ba9\u6211\u7684\u662f\u6309\u94ae\uff0c\u4ee5\u4fbf\u4ee5\u5b8c\u5168\u7531\u6211\u63a7\u5236\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u7684\u95e8\u94c3\u53ee\u5f53\uff0c\u5e76\u4ec5\u5728\u6211\u7684\u672c\u5730\u7f51\u7edc\u4e0a\u8fd0\u884c\u3002\u4e8c\u6b21\uff0c\u6211\u8ba4\u4e3a\u5c06\u76f8\u673a\u9644\u52a0\u5230\u5b83\u4e5f\u5f88\u9ad8\u5174\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u770b\u5230\u8c01\u5728\u5916\u9762\u8fce\u63a5\u4ed6\u4eec\u4e4b\u524d\u5728\u95e8\u53e3\u3002\u518d\u6b21\uff0c\u7531\u4e8e\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u662f\u672c\u5730\u7684\u5e76\u7531\u6211\u63a7\u5236\uff0c\u6211\u5bf9\u6dfb\u52a0\u76f8\u673a\u7684\u9690\u79c1\u95ee\u9898\u5f88\u5c11\u3002\n \u6211\u4e3a\u8986\u76c6\u5b50Pi\u8d2d\u4e70\u7684\u9c7c\u773c\u76f8\u673a\u975e\u5e38\u597d\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u7f3a\u5c11\u524d\u9762\u7684\u7ea2\u5916\u7ebf\u8fc7\u6ee4\u5668\uff0c\u6240\u4ee5\u6240\u6709\u7684\u56fe\u50cf\u90fd\u5bf9\u5b83\u4eec\u6709\u4e00\u4e2a\u771f\u6b63\u7684\u7d2b\u8272ish tint\u3002\u867d\u7136\u4e0d\u662f\u975e\u5e38\u7f8e\u89c2\uff0c\u4f46\u5b83\u81f3\u5c11\u8981\u5b8c\u6210\u5de5\u4f5c\uff0c\u5e76\u4e14\u6210\u672c\u975e\u5e38\u4f4e\u3002\u663e\u7136\u8fd9\u662f\u5546\u4e1a\u7ea7\u5b89\u5168\u6444\u50cf\u673a\u4e0a\u6700\u6602\u8d35\u7684\u96f6\u4ef6\u4e4b\u4e00\uff0c\u5176\u4e2d\u8bb8\u591a\u5177\u6709\u673a\u68b0\u7ea2\u5916\u6ee4\u6ce2\u5668\uff0c\u53ef\u4ee5\u5728\u591c\u95f4\u79fb\u52a8\u4f20\u611f\u5668\u7684\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u5728\u4f4e\u5149\u573a\u666f\u4e2d\u7684\u6700\u4f73\u56fe\u7247\u5728\u767d\u5929\u3002\n  \u901a\u8fc7\u5bb6\u5ead\u52a9\u7406\u754c\u9762\u53ef\u4ee5\u8bbf\u95ee\u73b0\u573a\u6444\u50cf\u5934\uff0c\u6216\u8005\u6211\u53ef\u4ee5\u8ba2\u9605\u53e6\u4e00\u4e2aMQTT\u4e3b\u9898\uff0c\u5176\u4e2d\u5f20\u8d34\u4e86\u6309\u4e0b\u95e8\u94c3\u7684\u4eba\u7684\u7167\u7247\u3002 Raspberry PI\u901a\u8fc7\u89c6\u98914Llinux\u62bd\u8c61\u5c42\u4ece\u76f8\u673a\u83b7\u53d6\u8fd9\u4e9b\u56fe\u50cf\uff0c\u8fd9\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\u3002\u7136\u540e\uff0c\u5e27\u5f53\u524d\u88ab\u7f16\u7801\u4e3aJPEG\u5e76\u53d1\u5e03\u5230MQTT\u3002\u5728\u4e0d\u4e45\u7684\u5c06\u6765\uff0c\u6211\u5e0c\u671b\u8986\u76c6\u5b50PI\u7f16\u7801RTSP\u6d41\uff0c\u56e0\u4e3aPI\u4e13\u95e8\u8bbe\u8ba1\u7528\u4e8e\u7f16\u7801\u89c6\u9891\u7684SOC\u4e2d\u7684\u89c6\u9891\u6838\u5fc3\uff0c\u56e0\u6b64\u5b83\u5c06\u4f7f\u7528\u5f88\u5c11\u7684\u7535\u529b/\u8d44\u6e90\u3002\n   \u4ee5\u4e0a\u662f\u6700\u7ec8\u4ea7\u54c1\uff0c\u94bb\u5b54\uff0c\u62e7\u7d27\uff0c\u5e76\u5b89\u88c5\u5728\u6211\u5bb6\u524d\u9762\u7684\u6805\u6781\u4e0a\u3002\u5728\u767d\u5929\u671f\u95f4\uff0cLED\u73af\u5e76\u4e0d\u662f\u90a3\u4e48\u660e\u663e\uff0c\u4f46\u76f8\u4fe1\u6211\uff0c\u665a\u4e0a\u975e\u5e38\u660e\u4eae\uff01\u5f53\u6020\u901f\u65f6\uff0c\u5b83\u786e\u5b9e\u6674\u95f4\u8109\u51b2\u6548\u5e94\uff0c\u5e76\u5728\u6309\u4e0b\u65f6\u95ea\u70c1\u4ee5\u786e\u8ba4\u538b\u529b\u673a\u5e76\u901a\u77e5\u67d0\u4eba\u5373\u5c06\u5230\u6765\u7684\u8bbf\u5ba2\u3002\n \u7531\u4e8e\u6211\u5b8c\u5168\u63a7\u5236\u4e86\u786c\u4ef6\uff0c\u56e0\u6b64\u5c06\u6765\u4f1a\u6709\u5f88\u591a\u6709\u8da3\u7684\u4e1c\u897f\u3002\u4e00\u4e9b\u6211\u62e5\u6709\u7684\u60f3\u6cd5\u662f\u81ea\u52a8\u9762\u90e8\u68c0\u6d4b\uff08\u4ee5\u9690\u79c1\u4e3a\u4e2d\u5fc3\u7684\u524d\u9014\u8def\u7ebf\u65b9\u5f0f\uff09\uff0c\u79d8\u5bc6\u6309\u94ae\u4ee3\u7801\u505a\u4e8b\uff0c\u4e5f\u8bb8\u751a\u81f3\u53ef\u4ee5\u662f\u4e00\u4e2a\u5185\u7f6e\u9ea6\u514b\u98ce\u548c\u626c\u58f0\u5668\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u4e0e\u8bbf\u95ee\u8005\u8fdb\u884c\u5bf9\u8bdd\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u76d2\u5b50\u5f88\u72ed\u7a84\uff01\u81f3\u5c11\u8f6f\u4ef6\u771f\u7684\u5f88\u5bb9\u6613\u6539\u53d8\u3002 \n\u8c08\u5230\u8f6f\u4ef6\uff0c\u95e8\u94c3\u7684\u4ee3\u7801\u662f\u514d\u8d39\u548c\u5f00\u653e\u7684\u3002 \u60a8\u53ef\u4ee5\u5728Sourcehut\u9875\u9762\u4e0a\u627e\u5230\u5b83\u3002  \u662f\u7684\uff0c\u6211\u610f\u8bc6\u5230\u89e3\u5256\u6212\u6307/\u4e9a\u9a6c\u900a\u7684\u8ba4\u77e5\u4e0d\u8d77\u4f5c\u7528\uff0c\u5e76\u4ece\u4e9a\u9a6c\u900a\u8ba2\u8d2d\u90e8\u5206\u3002 \u5904\u7406\u5b83\uff01 \u21a9 ", "note_en": "In my last post about DIY smart appliances, I wrote about  thermostats. Chipotherm has been running for over a year now at the arcade, and it\u2019s still working great! Armed with enthusiasm for my DIY smart thermostat, and having just moved into a new house that came with a  Ring doorbell, I thought I might try building my own DIY doorbell to replace it.\n My motivations for this project were beyond just wanting to build something new and fun. The Ring Doorbell, which is now owned by advertising megacorp Amazon, suffers from all of the same privacy problems described in my post about the Nest thermostat, but even worse. Like the Nest thermostat, the client software is a total \u201crace to the bottom\u201d one-size-fits-all garbage iOS app that not only looks bad, but is full of bugs. Also like the Nest, all of your data is hosted in \u201cthe cloud\u201d, and a monthly ransom is required before you (\u201cthe customer\u201d) are actually allowed to access it. Worse than the Nest, however, is the fact that the Ring doorbell actually has a camera and microphone built-in, so video and audio feeds are also held for ransom in \u201cthe cloud\u201d, and are shared with any interested party, sometimes even  without your permission.\n Just like many other Internet of Things products, the Ring has also been subject to multiple disastrous  data breaches, meaning besides law enforcement agencies and advertising partners, many Ring customers\u2019 private data is now also in the hands of malicious hackers, who may in the future offer ransoms that are much harder to refuse than the one offered by Amazon. This article from  Ars Technica seems to indicate that the problem is also about to get much worse, with automatic license plate detection in the works and more police partnerships.\n In today\u2019s world of corporate surveillance, building your own DIY smart appliances is a true superpower\u2014and a lot of fun too! I originally planned to just have a simple button, perhaps attached to an  ESP8266, which is a wonderful new WiFi microcontroller that\u2019s becoming extremely popular these days with home automation enthusiasts. The project quickly grew in scope as I decided to also add a cool LED and a camera (whose feed is hosted entirely  on-prem).\n  For the hardware, the first thing that comes to mind is obviously the button. I decided to buy a cool \u201cengine starter\u201d  automotive button   1 first, and design the rest of the doorbell around that. The LED around button is powered via 12vDC as well, so if I wanted to be able to control it via software, I\u2019ll also need to get a MOSFET and build a small circuit.\n  To control everything, I decided to use a Raspberry Pi Zero, since it has ample GPIO pins for detecting the switch press, a PWM pin for modulating the LED inside of the button, and a special camera bus. The Raspberry Pi Zero\u2019s super small size also meant I can probably fit it inside of pretty much anything, and it was very unlikely to demand very much power or cooling resources.\n As for wiring, fortunately the previous owner of my homestead had already wired the front gate (where this was to be installed) with Ethernet, presumably for some kind of call box or security system. This meant that using Power-Over-Ethernet (PoE), I could run both power and networking from the garage where my router/server was located to the gate where the doorbell was to be installed. This required a basic PoE splitter/receiver, and an Ethernet adapter for the Raspberry Pi Zero (since it doesn\u2019t have onboard Ethernet like the full-size Raspberry Pi does).\n Lastly, the case to put everything in. I thought this would be easy to 3D print, since it\u2019s just an enclosure with a hole in the front and in the back, but it turned out to be rather difficult to build. The 3D printer in my possession, a first generation Makerbot Replicator, wasn\u2019t able to print parts that fit together nicely. The end result was three separate plastic pieces that didn\u2019t fit together well and ended up being really flimsy.\n  A friend of mine had a much more expensive Stereo-lithography 3D printer, so I had him try and print the same design I originally came up with. This resulted in a much more accurate print, with pieces that fit together really nicely. However, perhaps due to the type of resin that was used, also ended up being extremely flimsy.\n   I ended up buying a really great  injection molded enclosure from Digikey for about $9. It ended up being really easy just drilling holes in a mass-produced enclosure instead of 3D printing a custom design. The quality is also far better than any of my prints.\n       In order to replicate the most important part of the functionality of the Ring, there will need to be some software running on the Raspberry Pi that polls for button presses, which then contacts some computer on my network to notify me about doorbell events. I call these \u201cdings\u201d   2. Just recently, I had learned about this great protocol admired by DIY IoT enthusiasts called  MQTT, or The Message Queuing and Telemetry Transport protocol. The gist of it is that it\u2019s a PubSub (publisher-subscriber) protocol for any kind of message. It\u2019s kind of like  NSNotificationCenter, but for your local network. There are topics and messages, and that\u2019s about it. Topics are usually in the format of  domain/subdomain/topic, but it can really be anything you want, as long as it\u2019s consistent in your implementations.\n In the case of my doorbell, the topic I chose is  doorbell/ding for ding events. The button is physically connected to a GPIO pin on the Raspberry Pi, so there\u2019s a bit of code that polls for this pin to go high, and when it does, a message is published to the  doorbell/ding topic over MQTT.\n Now that the doorbell itself is notifying my network about ding events, I just need something on the other end that  subscribes to these events and notifies me somehow. Just recently, I had set up a small GNU/Linux PC and a receiver connected to the speakers in my living room as an  MPD server for playing music. Getting this computer to play a doorbell sound whenever a message was posted to the ding MQTT topic was extremely easy! All I had to do was write a small shell script that runs in a loop.\n  All this shell script does is use  mosquitto_sub to subscribe to the  doorbell/ding topic on  hassio.nor (that\u2019s my MQTT server, only accessible on my LAN) and play  doorbell.wav whenever a message is sent to that topic. The  -C 1 option says to wait for one message, then exit. This is executed in a loop forever. So far this has been working great. I really love the simplicity of MQTT.\n  Since I run  Kodi Media Center on my TV, it was also extremely easy to get these notifications to show up on my TV!\n The next thing I had to do was figure out some way to notify my iPhone about ding events as well, in case someone rings my doorbell while I\u2019m away from home. I thought this might be really difficult, since in order to do push notifications, I\u2019d probably have to write an iOS app, and also run a server to sign and publish to Apple\u2019s Push Notification service, and a bunch of other hooey. Fortunately, I had recently set up a  Home Assistant server at home for some other projects I was working on. The Home Assistant iOS app supports push notifications, which can be used in automations triggered by MQTT events. All I had to do was set up an automation in Home Assistant that subscribes to the  doorbell/ding topic, and when a message a published on that topic, Home Assistant will call its own \u201cnotify\u201d service to push the notification to my phone (and do any number of other things). The seemingly infinite number of ways to extend and hack Home Assistant is the reason why I love using it so much for DIY IoT projects. All in all, I ended up writing  no code for the server-side of this project, which is pretty neat.\n  The most important part of this project for me was getting the button to notify me about doorbell dings in a way that\u2019s entirely controlled by me, and runs only on my local network. Secondarily, I did think it would be nice to have a camera attached to it as well so I can see  who is at the door before going outside to greet them. Again, since all of this is local and controlled by me, I had very little privacy concerns about adding a camera.\n The fisheye camera I had bought for the Raspberry Pi was pretty good, but it\u2019s actually missing an infrared filter on the front, so all of the images have a really purple-ish tint to them. While not very aesthetically pleasing, it does at least get the job done, and for a very low cost. Apparently this is one of the most expensive parts on a commercial-grade security camera, many of which have a mechanical IR filter that can move out of the way of the sensor at nighttime for an optimal picture in low light scenarios in addition to working well in the daylight.\n  A live camera feed is accessible via the Home Assistant interface, or I can subscribe to another MQTT topic where photos of people who pressed the doorbell are posted to. The Raspberry Pi acquires these images from the camera via a Video4Linux abstraction layer that\u2019s pretty easy to use in my program. The frames are then currently encoded as JPEGs and posted to MQTT. In the near future, I would like to have the Raspberry Pi encode a RTSP stream instead, since the Pi has a video core in its SOC specifically designed to encode video, so it would use very little power/resources.\n   Above is the final product, drilled, screwed, and installed onto the gate in front of my house. The LED ring is not really that noticeable during the daytime, but trust me, it\u2019s very bright at night! It does a cool pulsing effect when idle, and blinks when pressed to acknowledge the press and to notify the visitor that someone is coming.\n Since I have complete control over the hardware, there\u2019s a lot more fun stuff I can do with this in the future. Some ideas I had were automatic face detection (in a privacy-centric on-prem way, of course), secret button codes to do things, and maybe even a built-in microphone and speaker so I could have a conversation with the visitor. Unfortunately that box is  quite cramped as it is! At least the software is really easy to change.\n Speaking of software, the code for the doorbell is free and open-source. You can find it on my  SourceHut page.\n  Yes, I\u2019m aware of the cognitive dissonance around dissing Ring/Amazon and ordering parts from Amazon. Deal with it!\u00a0 \u21a9", "posttime": "2021-06-29 23:07:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u667a\u80fd,diy,\u95e8\u94c3", "title": "\u5efa\u7acb\u4e00\u4e2aDIY\u667a\u80fd\u95e8\u94c3 ", "title_en": "Building a DIY Smart Doorbell", "transed": 1, "url": "https://buzzert.net/posts/2021-05-09-doorbell", "via": "", "real_tags": ["\u667a\u80fd", "diy", "\u95e8\u94c3"]}, {"category": "", "categoryclass": "", "imagename": "8d479f58cb870fe04619d7cd96a723a1.png", "infoid": 1068521, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8001\u864e\u5fc5\u987b\u8ffd\u6355\uff0c\u9e1f\u98de\u5f97\u82cd\u8747; Lisper\u5f97\u5750\u4e0b\u6765\uff0c\uff08Y\uff08Y Y\uff09\uff09\uff1f\u8001\u864e\u7761\u4e86\uff0c\u9e1f\u6765\u843d\u5730; Lisper\u5f97\u544a\u8bc9\u81ea\u5df1\u4ed6\u4e86\u89e3\u3002 -  Kurt Vonnegut\uff0c\u7531Darius Bacon\u4fee\u6539\n  \u6211\u6700\u8fd1\u5199\u4e86\u4e00\u4e2a\u5173\u4e8ey\u7ec4\u5408\u8005\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u6536\u5230\u4e86\u8bb8\u591a\u6709\u7528\u7684\u8bc4\u8bba\uff0c\u6211\u8ba4\u4e3a\u5c06\u5e16\u5b50\u6269\u5c55\u5230\u66f4\u5b8c\u6574\u7684\u6587\u7ae0\u4e2d\u662f\u5408\u9002\u7684\u3002\u672c\u6587\u5c06\u5bf9\u4e3b\u9898\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u6df1\u5ea6\uff0c\u4f46\u6211\u5e0c\u671b\u5b83\u80fd\u591f\u66f4\u52a0\u53ef\u7406\u89e3\u3002\u4f60\u4e0d\u9700\u8981\u9605\u8bfb\u524d\u4e00\u7bc7\u6587\u7ae0\u4ee5\u4e86\u89e3\u8fd9\u4e00\u70b9\uff08\u5176\u5b9e\uff0c\u5982\u679c\u4f60\u6ca1\u6709\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u66f4\u597d\uff0c\u5982\u679c\u4f60verven\uff06\uff0339;\uff09\u6211\u6240\u9700\u8981\u7684\u552f\u4e00\u80cc\u666f\u77e5\u8bc6\u662f\u5bf9\u8be5\u65b9\u6848\u7684\u5fae\u5c0f\u4e86\u89e3\u7f16\u7a0b\u8bed\u8a00\u5305\u62ec\u9012\u5f52\u548c\u4e00\u6d41\u7684\u529f\u80fd\uff0c\u6211\u5c06\u5ba1\u67e5\u3002\u8bc4\u8bba\uff08\u518d\u6b21\uff09\u6b22\u8fce\u3002\n   \u5728\u6211\u8fdb\u5165y\u5b9e\u9645\u4e0a\u7684\u7ec6\u8282\u4e4b\u524d\uff0c\u6211\u60f3\u89e3\u51b3\u4e3a\u4ec0\u4e48\u4f60\u4f5c\u4e3a\u7a0b\u5e8f\u5458\u7684\u95ee\u9898\u5e94\u8be5\u70e6\u607c\u5730\u4e86\u89e3\u5b83\u3002\u8bda\u5b9e\u7684\uff0c\u90a3\u91ccan\uff06\uff0339;\u5854\u5f88\u591a\u597d\u87ba\u6bcd - \u87ba\u6813\u7684\u5b9e\u9645\u539f\u56e0\uff0c\u5373\u4f7f\u5b83\u786e\u5b9e\u5b58\u5728\u4e86\u4e00\u4e9b\u5b9e\u9645\u5e94\u7528\uff0c\u5927\u90e8\u5206\u90fd\u662f\u8ba1\u7b97\u673a\u8bed\u8a00\u7406\u8bba\u5bb6\u7684\u5174\u8da3\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u89c9\u5f97\u5b83\uff06\uff0339;\u503c\u5f97\u4f60\u7684\u867d\u7136\u662f\u5173\u4e8e\u4f60\u7684\u60f3\u6cd5\uff1a\n \u5b83\uff06\uff0339;\u5728\u6240\u6709\u7f16\u7a0b\u4e2d\u6700\u7f8e\u4e3d\u7684\u60f3\u6cd5\u4e4b\u4e00\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u7f16\u7a0b\u7f8e\u5b66\u7684\u611f\u89c9\uff0c\u5219\uff06\uff0339; Quecate\u5c06\u88abY\u6109\u5feb\u5730\u9ad8\u5174\u3002\n \u5b83\u4ee5\u4e00\u79cd\u975e\u5e38\u663e\u7740\u7684\u65b9\u5f0f\u663e\u793a\u4e86\u529f\u80fd\u6027\u7f16\u7a0b\u7684\u7b80\u5355\u601d\u60f3\u3002\n 1959\u5e74\uff0c\u82f1\u56fd\u79d1\u5b66\u5bb6C. P. Snow\u7ed9\u4e86\u4e00\u4e2a\u7740\u540d\u7684\u8bb2\u5ea7\uff0c\u79f0\u4e3a\u4e24\u79cd\u6587\u5316\uff0c\u4ed6\u8ba8\u8bba\u4e86\u8bb8\u591a\u667a\u80fd\u548c\u53d7\u8fc7\u826f\u597d\u7684\u4eba\u4eec\u7684\u65f6\u95f4\u51e0\u4e4e\u6ca1\u6709\u79d1\u5b66\u77e5\u8bc6\u3002\u4ed6\u4f7f\u7528\u4e86\u5bf9\u90a3\u4e9b\u79d1\u5b66\u8bc6\u5b57\u7684\u4eba\u4e4b\u95f4\u7684\u7b2c\u4e8c\u79cd\u70ed\u529b\u5b66\u5b9a\u5f8b\uff0c\u4ee5\u53ca\u90a3\u4e9b\u6e29\u548c\u7684\u4eba\u4e4b\u95f4\u7684\u5206\u754c\u7ebf\u548c\uff06\uff0339; t\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c\u5730\u4f7f\u7528Y\u7ec4\u5408\u8005\u7684\u77e5\u8bc6\u4f5c\u4e3a\uff06\uff0334\u7684\u7a0b\u5e8f\u5458\u4e4b\u95f4\u7684\u5206\u754c\u7ebf;\u529f\u80fd\u8bc6\u5b57\uff06\uff0334; \uff08\u5373\u5bf9\u529f\u80fd\u89c4\u5212\u7684\u5408\u7406\u77e5\u8bc6\uff09\u548c\u90a3\u4e9baren\u7684\u4eba\u548c\uff0339; t\u3002\u8fd8\u6709\u5176\u4ed6\u8bae\u9898\u53ef\u4ee5\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\uff08\u7279\u522b\u662fMONADS\uff09\uff0c\u4f46y\u4f1a\u5f88\u597d\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u6e34\u671b\u62e5\u6709\u771f\u6b63\u7684\u5170\u5e03 - \u6027\u8d28\uff0c\u8bf7\u9605\u8bfb\u3002\n \u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0cPaul Graham\uff08Lisp\u9ed1\u5ba2\uff0cLisp Book Authory\uff0cEssayist\u548c\u73b0\u5728\u98ce\u9669\u8d44\u672c\u4e3b\u4e49\uff09\u663e\u7136\u975e\u5e38\u91cd\u8981\uff0c\u4ed6\u5c06\u4ed6\u547d\u540d\u4e3a\u4ed6\u7684\u542f\u52a8\u5b75\u5316\u5668\u516c\u53f8Y Combinator\u3002\u4fdd\u7f57\u4ece\u4ed6\u7684\u60f3\u6cd5\u77e5\u8bc6\u4e2d\u5bcc\u6709\u4e30\u5bcc;\u4e5f\u8bb8\u5176\u4ed6\u4eba\u4e5f\u4f1a\u3002\u4e5f\u8bb8\u751a\u81f3\u4f60\u3002 \n\u6211\u4eec\uff06\uff0339; ll\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e9b\u51fd\u6570\u6765\u8ba1\u7b97\u9636\u6bb5\u6765\u5f00\u59cb\u63a2\u7d22Y\u7ec4\u5408\u5668\u3002\u975e\u8d1f\u6574\u6570N\u7684\u6e90\u6781\u662f\u4ece1\u5f00\u59cb\u7684\u6240\u6709\u6574\u6570\u7684\u4e58\u79ef\uff0c\u5e76\u5ef6\u957f\u5230\u548c\u5305\u62ecn\u3002\u56e0\u6b64\u6211\u4eec\u6709\uff1a\n \u56e0\u5b501 = 1\u56e0\u5b502 = 2 * 1 = 2\u56e0\u5b503 = 3 * 2 * 1 = 6\u56e0\u5b504 = 4 * 3 * 2 * 1 = 24\n \u7b49\u7b49\u3002 \uff08i\uff06\uff0339; m\u4f7f\u7528\u6ca1\u6709\u62ec\u53f7\u7684\u51fd\u6570\u8868\u793a\u6cd5\uff0c\u6240\u4ee5armential 3\u4e0e\u901a\u5e38\u5199\u5165\u7684\u56e0\u5b50\uff083\uff09\u3002\u5e7d\u9ed8\u6211\u3002\uff09\u56e0\u5b50\u8d8a\u6765\u8d8a\u591a\u5730\u589e\u52a0; 20\u7684\u56e0\u5b50\u4e3a2432902008176640000\u30020\u7684\u56e0\u5b50\u662f1;\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u4e8e\u5b9e\u9645\u7528\u4e8e\u9020\u7968\u7684\u79cd\u7c7b\u7684\u9002\u5f53\u5b9a\u4e49\uff08\u5982\u89e3\u51b3\u95ee\u9898\uff0c\u8bae\u9898\u86cb\u767d\uff09\u3002\n  \u5b83\u6613\u4e8e\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7f16\u5199\u529f\u80fd\uff0c\u4ee5\u4f7f\u7528\u67d0\u79cd\u5faa\u73af\u63a7\u5236\u6784\u9020\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u4f8b\u5982\u5faa\u73af\u6216\u5faa\u73af\uff08\u4f8b\u5982\uff0c\u5728C\u6216Java\u4e2d\uff09\u3002\u4f46\u662f\uff0c\u5b83\u4e5f\u5f88\u5bb9\u6613\u7f16\u5199\u9012\u5f52\u51fd\u6570\u6765\u8ba1\u7b97\u9636\u4e58\uff0c\u56e0\u4e3a\u9636\u4e58\u6709\u4e00\u4e2a\u975e\u5e38\u81ea\u7136\u7684\u9012\u5f52\u5b9a\u4e49\uff1a\n  \u7b2c\u4e8c\u884c\u9002\u7528\u4e8e\u5927\u4e8e\u96f6\u7684\u6240\u6709n\u3002 Infact\uff0c\u5728\u8ba1\u7b97\u673a\u8bed\u8a00Haskell\uff0c\u90a3\u5c31\u662f\u60a8\u5b9e\u9645\u5b9a\u4e49\u56e0\u5b50\u51fd\u6570\u7684\u65b9\u5f0f\u3002\u5728\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\uff06\uff0339\u7684\u8bed\u8a00; ll\u5728\u8fd9\u91cc\u4f7f\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u5199\u7c7b\u4f3c\uff1a\n  \u65b9\u6848\u4f7f\u7528\u62ec\u53f7\u524d\u7f00\u7b26\u53f7\u4e3a\u6240\u6709\u5185\u5bb9\uff0c\u56e0\u6b64\u7c7b\u4f3c\u4e8e\uff08 -  n 1\uff09\u8868\u793a\u901a\u5e38\u5728\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5199\u5165\u7684n  -  1\u3002\u8fd9\u7684\u539f\u56e0\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\uff0c\u4f46\u4e60\u60ef\u4e86\u8fd9\u4e2a\u7b26\u53f7\uff0c\u975e\u5e38\u52aa\u529b\u3002\n \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u8ff0\u65b9\u6848\u4e2d\u7684\u9636\u4e58\u51fd\u6570\u7684\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u4ee5\u7a0d\u5fae\u660e\u786e\u7684\u65b9\u5f0f\u7f16\u5199\u5982\u4e0b\uff1a \n\uff08\u5b9a\u4e49\u56e0\u5b50\uff08lambda\uff08n\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08armborial\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u5173\u952e\u5b57Lambda\u7b80\u5355\u5730\u8868\u660e\u4e86\u6211\u4eec\uff06\uff0339\u7684\u4e1c\u897f;\u91cd\u65b0\u5b9a\u4e49\uff08\u5373\uff0c\u7531\u6253\u5f00\u7684\u62ec\u53f7\u5c01\u95ed\u5230Lambda\u7684\u5de6\u4fa7\u548c\u5176\u76f8\u5e94\u7684\u8863\u670d\u5185\u90e8\uff09\u662f\u4e00\u4e2a\u529f\u80fd\u3002\u5728Lambda\u4e2d\uff0c\u5728\u62ec\u53f7\u4e2d\u7684\u8bdd\u662f\u4ec0\u4e48\u4e4b\u540e\uff0c\u662fFunction\u7684\u6b63\u5f0f\u8bba\u70b9;\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u662fn\u3002\u8be5\u51fd\u6570\u7684\u4e3b\u4f53\u5728\u6b63\u5f0f\u53c2\u6570\u4e4b\u540e\uff0c\u4ee5\u53ca\u8868\u8fbe\u5f0f\u7684\u79d8\u4e66\u4e3b\u4e49\u8005\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08armborial\uff08 -  n1\uff09\uff09\uff09\uff09\uff09\uff09\u3002\u8fd9\u79cd\u529f\u80fd\u662f\u533f\u540d\u529f\u80fd\u3002\u5728\u8fd9\u91cc\uff0c\u4f60\u7ed9\u4e86\u4f60\u533f\u540d\u51fd\u6570\u4f60\uff06\uff0339\u4e4b\u540e\u7684\u59d3\u540d\u56e0\u5b50; vedefined\u5b83\uff0c\u4f46\u4f60\u4e0d\u5fc5\uff0c\u5e76\u4e14\u7ecf\u5e38\u5b83\uff06\uff0339; s handy\u4e0d\u662f\u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u4f7f\u7528\u5b83\u4e00\u6b21\u3002\u5728\u65b9\u6848\u548c\u4e00\u4e9b\u5176\u4ed6\u8bed\u8a00\u4e2d\uff0c\u533f\u540d\u529f\u80fd\u4e5f\u79f0\u4e3aLambda\u8868\u8fbe\u5f0f\u3002\u9664\u4e86\u65b9\u6848\u4e4b\u5916\u7684\u8bb8\u591a\u7f16\u7a0b\u89c4\u7a0b\u5141\u8bb8\u60a8\u5b9a\u4e49\u533f\u540d\u51fd\u6570\uff0c\u5305\u62ecPyThon\uff0cRuby\uff0cJavaScript\uff0cOCAML\u548cHaskell\uff08\u4f46\u4e0d\u9057\u61be\u7684\u662fC\uff0cC ++\u6216Java\uff09\u3002\u6211\u4eec\uff06\uff0339; ll\u5728\u4e0b\u9762\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\u3002\n \u5728\u65b9\u6848\u8bed\u8a00\u4e2d\uff0c\u56e0\u5b50\u7684\u5b9a\u4e49\u4ec5\u4ec5\u4e0e\u4e4b\u76f8\u540c;\u65b9\u6848\u5728\u8bc4\u4f30\u4e4b\u524d\u7b80\u5355\u5730\u5c06FirstDefinition\u8f6c\u6362\u4e3a\u7b2c\u4e8c\u4e2a\u3002\u6240\u4ee5\u6240\u6709\u529f\u80fd\u672f\u8bed\u90fd\u662f\u771f\u6b63\u7684lambda\u8868\u8fbe\u3002\n \u8bf7\u6ce8\u610f\uff0c\u8be5\u51fd\u6570\u7684\u4e3b\u4f53\u5bf9\u5176\u4e2d\u7684FactorialFunction\uff08\uff06\uff0339;\u5728\u5b9a\u4e49\u8fc7\u7a0b\u4e2d\u7684\u8fc7\u7a0b\u4e2d\u7684\u8c03\u7528\uff0c\u8fd9\u4f7f\u5f97\u8be5\u9012\u5f52\u5b9a\u4e49\u3002\u6211\u4f1a\u8c03\u7528\u8fd9\u79cd\u5b9a\u4e49\uff0c\u5176\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u540d\u79f0\u7528\u4e8e\u51fd\u6570\u7684\u4e3b\u4f53\uff0c\u4e00\u4e2a\u660e\u786e\u7684\u9012\u5f52\u5b9a\u4e49\u3002 \uff08\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u4e00\u4e2a\uff06\uff0334;\u9690\u5f0f\u7684\u526f\u987e\u5fcc\uff06\uff0334;\u529f\u80fd\u662f\u3002\u6211\u4e0d\u4f1a\u4f7f\u7528\u90a3\u79cd\u8868\u8fbe\uff0c\u4f46\u6211\u60f3\u5230\u7684\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u5b83\u662f\u901a\u8fc7\u672a\u7ecf\u9012\u5f52\u624b\u6bb5\u751f\u6210\u7684\u9012\u5f52\u51fd\u6570 - \u7ee7\u7eed\u9605\u8bfb\uff01\uff09\n \u4e3a\u4e86\u53c2\u4e0e\u4e89\u8bba\uff0c\u6211\u4eec\u5c06\u5047\u8bbe\u6211\u4eec\u7684Schemedoesn\u548c\uff0339; t\u7684\u7248\u672c\u6709\u76f8\u5f53\u4e8e\u5faa\u73afInc\u6216Java\uff08\u4f46\u5b9e\u9645\u4e0a\uff0c\u5b9e\u9645\u65b9\u6848\u5b9e\u73b0\u786e\u5b9e\u6709\u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u4f46\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u540d\u79f0\uff09\uff0c\u4ee5\u4fbf\u4e3a\u4e86\u5b9a\u4e49\u51fd\u6570\u51fd\u6570\uff0c\u6211\u4eec\u51e0\u4e4e\u5fc5\u987b\u4f7f\u7528\u9012\u5f52\u3002\u8ba1\u5212\u4ee5\u5916\u7528\u4f5c\u6559\u5b66\u8bed\u8a00\u7684\u539f\u56e0\uff1a\u5b83\u8feb\u4f7f\u5b66\u751f\u5b66\u4e60\u8005\u5b66\u4f1a\u9012\u5f52\u601d\u8003\u3002\n  \u65b9\u6848\u662f\u4e00\u79cd\u5f88\u591a\u539f\u56e0\u7684\u9177\u8bed\u8a00\uff0c\u4f46\u662f\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u8bed\u8a00\u662f\u5b83\u5141\u8bb8\u60a8\u4f7f\u7528\uff06\uff0334;\u5934\u7b49\u8231\uff06\uff0334;\u6570\u636e\u5bf9\u8c61\uff08\u901a\u5e38\u901a\u8fc7\u8bf4\u65b9\u6848\u652f\u6301\u7b2c\u4e00\u7c7b\u529f\u80fd\uff09\u6765\u8868\u793a\u3002\u8fd9\u610f\u5473\u7740\u5728\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u51fd\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u529f\u80fd\u4f5c\u4e3a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u5e94\u7528\u4e8e\u5176\u53c2\u6570\u7684\u8bc4\u4f30another\u51fd\u6570\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6211\u4eec\u9700\u8981\u65f6\u521b\u5efaCombourcyOn-Fly\uff08\u4f7f\u7528lambda\u7b26\u53f7\u8868\u793a\uff09\u3002\u8fd9\u662f\u529f\u80fd\u89c4\u5212\u7684\u672c\u8d28\uff0c\u5b83\u5c06\u5728\u968f\u540e\u7684\u8ba8\u8bba\u4e2d\u62ec\u8d77\u6765\u3002\u4f7f\u7528\u5176\u4ed6\u529f\u80fd\u7684\u51fd\u6570\u548c/\u6216\u5c06\u5176\u4ed6\u51fd\u6570\u8fd4\u56de\u5176\u7ed3\u679c\uff0c\u901a\u5e38\u662f\u66f4\u9ad8\u9636\u51fd\u6570\u7684\u3002\n  \u73b0\u5728\uff0c\u8fd9\u91cc\uff06\uff0339;\u62fc\u56fe\uff1a\u5982\u679c\u8981\u6c42\u60a8\u5728\u65b9\u6848\u4e2d\u5b9a\u4e49\u9636\u4e58\u51fd\u6570\uff0c\u5219\u4f55\u65f6\u624d\u80fd\u544a\u77e5\u60a8\u53ef\u4ee5\u5728\u5b9a\u4e49\u4e2d\u901a\u77e5\u9012\u5f52\u51fd\u6570\u8c03\u7528\uff08\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7ed9\u51fa\u7684\u56e0\u5b50\u51fd\u6570\u4e2d\uff0c\u60a8\u65e0\u6cd5\u4f7f\u7528\u8bcd\u56e0\u5b50\u5728\u51fd\u6570\u7684\u8eab\u4f53\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\uff09\u3002\u4f46\u662f\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528\u4e00\u6d41\u7684\u529f\u80fd\u548c\u9ad8\u9636\u51fd\u6570\uff0c\u60a8\u8ba4\u4e3a\u60a8\u4f1a\u770b\u5230\u5408\u9002\u3002\u901a\u8fc7\u8fd9\u79cd\u77e5\u8bc6\uff0c\u60a8\u80fd\u5b9a\u4e49\u56e0\u5b50\u51fd\u6570\u5417\uff1f \n\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u5b83\u5c06\u76f4\u63a5\u5411\u6211\u4eec\u5e26\u5230Ycombinator\u3002\n   Y\u7ec4\u5408\u5668\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u3002\u5b83\u9700\u8981\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5373\u9012\u5f52\u3002\u5b83\u8fd4\u56de\u9012\u5f52\u7684\u529f\u80fd\u7248\u672c\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4f7f\u7528y\u8be6\u7ec6\u4ecb\u7ecd\u4ece\u975e\u9012\u5f52\u4eba\u751f\u6210\u9012\u5f52\u529f\u80fd\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u57fa\u672c\u60f3\u6cd5\u3002\n \u66f4\u4e00\u822c\u5730\u8bf4\uff0cY\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u83b7\u5f97\u9012\u5f52\uff0c\u652f\u6301\u4e00\u6d41\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u6ca1\u6709\u5185\u7f6e\u9012\u5f52\u3002\u6240\u4ee5\u4f60\u4eec\u8868\u660e\u6211\u4eec\u7684\u662f\u8fd9\u79cd\u8bed\u8a00\u5df2\u7ecf\u5141\u8bb8\u6211\u4eec\u5141\u8bb8\u6211\u4eec\u8fc7\u671f\u51fd\u6570\uff0c\u5373\u4f7f\u8bed\u8a00\u5b9a\u4e49\u672c\u8eab\u8868\u793a\u7f3a\u70b9\u9012\u5f52\u3002\u8fd9\u662f\u4e00\u4ef6\u7f8e\u4e3d\u7684\u4e8b\u60c5\uff1a\u5b83\u5411\u6211\u4eec\u5c55\u793a\u4e86\u5355\u72ec\u7684\u529f\u80fd\u6027\u80fd\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u671f\u671bBeable\u7684\u4e8b\u60c5\uff08\u800c\u4e14\u5b83\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u4f8b\u5b50\uff09\u3002\n  \u6211\u4eec\u5c06\u770b\u4e00\u4e0b\u4e24\u79cd\u5e7f\u6cdb\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\uff1a\u90a3\u4e9b\u4f7f\u7528\u61d2\u60f0\u8bc4\u4f30\u7684\u4eba\u548c\u4f7f\u7528\u4e25\u683c\u8bc4\u4f30\u7684\u4eba\u3002 lazyevaluation\u610f\u5473\u7740\u4e3a\u4e86\u8bc4\u4f30\u8bed\u8a00\u4e2d\u7684\u8868\u8fbe\uff0c\u60a8\u53ef\u4ee5\u8bc4\u4f30\u6700\u7ec8\u7ed3\u679c\u6240\u9700\u7684\u8868\u8fbe\u5f0f\u3002\u7b49\uff08\u4f8b\u5982\uff09\u5982\u679c\u6709\u4e00\u90e8\u5206\u8868\u8fbe\u5f0f\uff0c\u5219\u9700\u8981\u5fd8\u8bb0\u8bc4\u4f30\uff08\u56e0\u4e3a\u7ed3\u679c\u4e0d\u4f9d\u8d56\u4e8e\u5b83\uff09\u5b83\u8d62\u5f97\u4e86\uff06\uff0339; t beevalated\u3002\u76f8\u53cd\uff0c\u4e25\u683c\u7684\u8bc4\u4f30\u610f\u5473\u7740\u5728\u786e\u5b9aASA\u6574\u4f53\u7684\u8868\u8fbe\u5f0f\u7684\u4ef7\u503c\u4e4b\u524d\uff0c\u5c06\u5728\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u5177\u6709\u4e00\u4e9b\u5fc5\u8981\u7684\u4f8b\u5916\uff09\u4e4b\u524d\u5b8c\u5168\u8bc4\u4f30\u6240\u6709\u90e8\u5206\uff0c\u4f8b\u5982\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5fc5\u987b\u61d2\u5f97\u6b63\u5e38\u5de5\u4f5c\uff09\u3002\u61d2\u60f0\u8bc4\u4f30\u66f4\u4e3a\u4e00\u822c\uff0c\u4f46\u4e25\u683c\u7684\u8bc4\u4f30\u662f\u66f4\u4e3a\u9884\u6d4b\u548c\u5f80\u5f80\u66f4\u6709\u6548\u7684\u3002\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4f7f\u7528\u4e25\u683c\u7684\u8bc4\u4f30\u3002\u7f16\u7a0b\u8bed\u8a00Haskell\u4f7f\u7528\u61d2\u60f0\u7684\u8bc4\u4f30\uff0c\u8fd9\u662f\u5173\u4e8e\u8be5\u8bed\u8a00\u6700\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4f7f\u7528\u4e24\u79cd\u7c7b\u578b\u7684\u8bc4\u4f30\u3002\n  \u5c3d\u7ba1\u6211\u4eec\u7ecf\u5e38\u6307Y\u548c\uff0334;\uff06\uff0334; y\u7ec4\u5408\u5668\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u65e0\u9650\u6570\u91cf\u7684y\u7ec4\u5408\u5668\u3002\u6211\u4eec\u53ea\u4f1a\u5173\u6ce8\u4e24\u4e2a\u4eba\uff0c\u4e00\u4e2a\u61d2\u60f0\u548c\u4e00\u4e2a\u4e25\u683c\u7684\u3002\u6211\u4eec\u9700\u8981\u4e24\u4e2ay\u7ec4\u5408\u5668\uff0c\u56e0\u4e3aYcombinator\u6211\u4eec\u4e3a\u61d2\u4eba\u8bed\u8a00\u5b9a\u4e49\u4e0d\u9002\u7528\u4e8e\u4e25\u683c\u7684\u8bed\u8a00\u3002\u61d2\u60f0\u7684Y\u7ec4\u5408\u5668\u901a\u5e38\u88ab\u79f0\u4e3a\u6b63\u5e38\u9636Ycombinator\uff0c\u4e25\u683c\u7684\u7ec4\u5408\u5668\u88ab\u79f0\u4e3a\u9002\u7528\u4e8eApplicated-Order Ycombinator\u3002\u57fa\u672c\u4e0a\uff0c\u6b63\u5e38\u987a\u5e8f\u662f\u53e6\u4e00\u79cd\u8bf4\u6cd5\u7684\u65b9\u5f0f\uff06\uff0334;\u61d2\u60f0\uff06\uff0334;\u548c\u7533\u8bf7\u8ba2\u5355\u662f\u53e6\u4e00\u79cd\u8bf4\u6cd5\u7684\u65b9\u5f0f\uff06\uff0334;\u4e25\u683c\uff06\uff0334;\n  \u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u53e6\u4e00\u4e2a\u5927\u5212\u5206\u7ebf\u662f\u7edf\u8ba1\u5b66\u548c\u52a8\u6001\u952e\u5165\u4e4b\u95f4\u3002\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u6240\u6709\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u4efb\u4f55\u7c7b\u578b\u7684\u9519\u8bef\u90fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u4e0d\u4f1a\uff06\uff0339; t doany\u578b\u68c0\u67e5\u76f4\u5230\u8fd0\u884c\u65f6\u95f4\uff0c\u5e76\u4e14\u5982\u679c\u51fd\u6570\u5e94\u7528\u4e8e\u67d0\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u5c1d\u8bd5\u5c06\u6574\u6570\u548c\u5b57\u7b26\u4e32\u6dfb\u52a0\u5728\u4e00\u8d77\uff09\uff0c\u5219\u62a5\u544a\u9519\u8bef\u3002\u5728\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0cC\uff0cC ++\u548cJava\u662f\u9759\u6001\u952e\u5165\u7684\uff0c\u800cPerl\uff0cPython\u548cRuby\u662f\u52a8\u6001\u7684\u3002\u65b9\u6848\uff08\u6211\u4eec\u7684\u8bed\u8a00\u6211\u4eec\u548c\u6211\u4eec\u7684\u4f8b\u5b50\u4f7f\u7528\u7684\u8bed\u8a00\uff09\u662f\u72ec\u594f\u52a8\u529b\u5b66\u7684\u3002 \uff08\u4e5f\u6709\u8bed\u8a00\u8de8\u8d8a\u8fb9\u754c\u4e4b\u95f4\u7684\u5178\u578b\u548c\u52a8\u6001\u7c7b\u578b\uff0c\u4f46\u6211\u8d62\u5f97\u4e86\uff06\uff0339; T\u8ba8\u8bba\u4e86\u8fd9\u4ef6\u4e8b\u3002\uff09\n \u4eba\u4eec\u7ecf\u5e38\u542c\u5230\u9759\u6001\u6253\u5b57\uff0c\u79f0\u4e3a\u5f3a\u952e\u5165\u7684\u66f2\u6298\u6253\u5b57\uff0c\u8fd9\u662f\u4e00\u79cd\u5f31\u6253\u5b57\uff0c\u4f46\u8fd9\u662f\u6ee5\u7528\u7684\u3002\u5f3a\u7684\u6253\u5b57\u7b80\u5355\u610f\u5473\u7740\u8bed\u8a00\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u800c\u53ea\u6709\u4e00\u79cd\u7c7b\u578b\uff0c\u800c\u5f31\u6253\u5b57\u610f\u5473\u7740\u67d0\u4e9b\u503c\u53ef\u4ee5\u83b7\u5f97\u4efb\u4f55\u7c7b\u578b\u7684\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u52a8\u6001\u7c7b\u578b\u7684\u65b9\u6848\u4e5f\u88ab\u5f3a\u70c8\u6253\u5b57\uff0c\u800cC\u9759\u6001\u952e\u5165\u7684C\u662f\u5f31\u952e\u5165\u7684\uff08\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7269\u4f53\u6295\u5c04\u5230\u6307\u5411\u53e6\u4e00\u7c7b\u578b\u5bf9\u8c61\u7684\u6307\u9488\u4e2d\u7684\u6307\u9488\uff06\uff0339; s\u4ef7\u503c\uff09\u3002\u6211\u5c06\u53ea\u5173\u6ce8\u8fd9\u91cc\u7684\u5f3a\u70c8\u6253\u5b57\u8bed\u8a00\u3002 \n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ee5\u52a8\u6001\u7684\u8bed\u8a00\u5b9a\u4e49y\u7ec4\u5408\u5668\u66f4\u7b80\u5355\uff0c\u6240\u4ee5\uff06\uff0339; s\u6211\uff06\uff0339; ll\u505a\u3002\u53ef\u4ee5\u4ee5\u8bb8\u591a\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u5b9a\u4e49Ycombinator\uff0c\u4f46\uff08\u81f3\u5c11\u5728\u793a\u4f8b\u4e2d\u548c\uff0339; ve\u770b\u5230\uff09\u8fd9\u4e9b\u5b9a\u4e49\u901a\u5e38\u9700\u8981\u4e00\u4e9b\u975e\u660e\u663e\u7684\u7c7b\u578b\u7684\u9ed1\u63a9\u9970\uff0c\u56e0\u4e3aY\u7ec4\u5408\u5668\u672c\u8eab\u5e76\u4e0d\u662f\u76f4\u622a\u4e86\u5f53\u7684\u9759\u6001\u7c7b\u578b\u3002\u9664\u4e86\u672c\u6587\u7684\u8303\u56f4\u4e4b\u5916\uff0c\u6211\u8d62\u5f97\u4e86\uff06\uff0339;\u6211\u8fdb\u4e00\u6b65\u63d0\u5230\u5b83\u3002\n  \u7ec4\u5408\u8005\u53ea\u662f\u4e00\u4e2a\u03bb\u8868\u8fbe\u5f0f\uff0c\u6ca1\u6709\u81ea\u7531\u504f\u79bb\u3002\u6211\u4eec\u770b\u5230\u4e86\u03bb\u8868\u8fbe\u5f0f\uff08\u5b83\u4eec\uff06\uff0339; justanonymous\u51fd\u6570\uff09\uff0c\u4f46\u662f\u4e00\u4e2a\u514d\u8d39\u53d8\u91cf\uff06\uff0339;\u5b83\uff06\uff0339; s\u4e00\u4e2a\u53d8\u91cf\uff08\u5373\u8bed\u8a00\u4e2d\u7684\u540d\u79f0\u6216\u6807\u8bc6\u7b26\uff09\uff0c\u54ea\u4e2a\u662f\u59d3\u540d\u7684\u3002\u73b0\u5728\u5f00\u5fc3\uff1f\u4e0d\uff1f\u597d\u7684\uff0c\u8ba9\u6211\u89e3\u91ca\u4e00\u4e0b\u3002\n \u7ed1\u5b9a\u53d8\u91cf\u7b80\u76f4\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5305\u542b\u5728Lambda\u8868\u8fbe\u5f0f\u7684\u4e3b\u4f53\u5185\uff0c\u8be5\u03bb\u8868\u8fbe\u5f0f\u5177\u6709\u8be5\u53d8\u91cf\u540d\u79f0\u4f5c\u4e3a\u5176\u53c2\u6570\u4e4b\u4e00\u3002\n   \u8fd9\u4e9blambda\u8868\u8fbe\u5f0f\u7684\u4f53\u53d8\u91cf\u662f\u514d\u8d39\u53d8\u91cf\u8fd8\u662f\u7ed1\u5b9a\u53d8\u91cf\uff1f\u6211\u4eec\uff06\uff0339; ll\u5ffd\u7565\u4e86lambda\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u53c2\u6570\uff0c\u56e0\u4e3a\u03bb\u8868\u8fbe\u7684\u8eab\u4f53\u4e2d\u53ea\u80fd\u88ab\u89c6\u4e3a\u81ea\u7531\u6216\u7ed1\u5b9a\u7684\u53d8\u91cf\u3002\u81f3\u4e8e\u5176\u4ed6\u53d8\u91cf\uff0c\u8fd9\u91cc\u6709\u7b54\u6848\uff1a\n \u03bb\u8868\u8fbe\u4f53\u5185\u7684X\u662f\u4e00\u4e2a\u8fb9\u754c\uff0c\u56e0\u4e3a\u03bb\u8868\u8fbe\u7684\u6b63\u5f0f\u53c2\u6570\u4e5f\u662fx\u3002\u8fd9\u79cd\u03bb\u8868\u8fbe\u6ca1\u6709\u5176\u4ed6\u53d8\u91cf\uff0c\u56e0\u6b64\u6ca1\u6709\u81ea\u7531\u53d8\u91cf\uff0c\u56e0\u6b64\uff06\uff0339; s\u7ec4\u5408\u5668\u3002\n  Lambda\u8eab\u4f53\u4e2d\u7684Y\u662f\u4e00\u4e2a\u81ea\u7531\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u03bb\u8868\u8fbe\u4e0d\u662f\u7ec4\u5408\u8005\u3002\n  \u9664\u4e86Lambda\u8868\u8fbe\u7684\u5f62\u5f0f\u53c2\u6570\u4e4b\u5916\uff0c\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\uff0c\u6700\u7ec8x\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ed1\u5b9a\u53d8\u91cf\uff08\u7531\u5916\u90e8\u03bb\u8868\u8fbe\u7684\u6b63\u5f0f\u53c2\u6570\u7ed1\u5b9a\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2aLambda\u8868\u8fbe\u5f0f\u6574\u4f53\u6ca1\u6709\u81ea\u7531\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u7ec4\u5408\u8005\u3002 \n\u9664\u4e86Lambda\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u53c2\u6570\u4e4b\u5916\uff0c\u8fd8\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u6700\u7ec8x\u548cy\uff0c\u4e24\u4e2a\u7ed1\u5b9a\u53d8\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u7ec4\u5408\u8005\u3002\n  \u6574\u4e2a\u8868\u8fbe\u4e0d\u662f\u03bb\u8868\u8fbe\uff0c\u6240\u4ee5\u5b83\u6839\u636e\u5b9a\u4e49\u800c\u4e0d\u662f\u7ec4\u5408\u8005\u3002\u7136\u800c\uff0cX\u662f\u4e00\u4e2a\u81ea\u7531\u53d8\u91cf\uff0c\u6700\u7ec8y\u662f\u7ed1\u5b9a\u53d8\u91cf\u3002\n  \u518d\u6b21\uff0c\u6574\u4e2a\u8868\u8fbe\u662f\uff06\uff0339; t\u4e00\u4e2a\u03bb\u8868\u8fbe\uff08\u5b83\uff06\uff0339; s\u51fd\u6570\u5e94\u7528\u7a0b\u5e8f\uff09\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u7ec4\u5408\u8005\u3002\u7b2c\u4e8cx\u662f\u7ed1\u5b9a\u53d8\u91cf\uff0c\u800cY\u662f\u81ea\u7531\u53d8\u91cf\u3002\n  \uff08\u5b9a\u4e49\u56e0\u5b50\uff08lambda\uff08n\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08armborial\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u662f\u4e00\u4e2a\u7ec4\u5408\u8005\uff0c\u4f60\u4e0d\u8003\u8651\u5b9a\u4e49\u90e8\u5206\uff0c\u6240\u4ee5\u4f60\uff06\uff0339;\u91cd\u65b0\u8be2\u95ee\u662f\u4ec0\u4e48\n  \u662f\u4e00\u4e2a\u7ec4\u5408\u8005\u3002\u7531\u4e8e\u5728\u8be5Lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u540d\u79f0\u9636\u4e58\u4ee3\u8868\u4e00\u4e2a\u81ea\u7531\u53d8\u91cf\uff08\u540d\u79f0\u9636\u4e58\u4e0d\u662fLambda\u8868\u8fbe\u5f0f\u7684\u6b63\u5f0f\u53c2\u6570\uff09\uff0c\u8fd9\u4e0d\u662f\u7ec4\u5408\u8005\u3002\u8fd9\u5c06\u662f\u91cd\u8981\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u540d\u79f0=\uff0c*\uff0c\u548c - \u4e5f\u662f\u514d\u8d39\u53d8\u91cf\uff0c\u6240\u4ee5\u5373\u4f7f\u6ca1\u6709\u540d\u79f0\u56e0\u5b50\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u7ec4\u5408\u8005\uff08\u8bf4\u4e0d\u51fa\u6570\u5b57\uff01\uff09\u3002\n     \uff08\u5b9a\u4e49\u56e0\u5b50\uff08lambda\uff08n\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08armborial\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09 \n\u6211\u4eec\u60f3\u8981\u505a\u7684\u5c31\u662f\u63d0\u51fa\u8fd9\u4e00\u7248\u672c\uff0c\u8fd9\u662f\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u5e76\u4e0d\u662f\uff06\uff0339; t\u5728\u51fd\u6570\u4f53\u5185\u6709\u8ba8\u538c\u7684\u9012\u5f52\u8c03\u7528\u9636\u4e58\u547c\u53eb\u3002\n \u6211\u4eec\u5728\u54ea\u91cc\u5f00\u59cb\uff1f\u5982\u679c\u60a8\u53ef\u4ee5\u4fdd\u5b58\u6240\u6709\u529f\u80fd\uff0c\u9664\u4e86\u8fdd\u89c4\u9012\u5f52\u8c03\u7528\u4e4b\u5916\uff0c\u5b83\u4f1a\u5f88\u597d\uff0c\u5e76\u5728\u90a3\u91cc\u653e\u4e00\u4e9b\u4e1c\u897f\u3002\u8fd9\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a\n \uff08\u5b9a\u4e49\u5c40\u90e8\u6392\u5e8f\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08\uff06lt ;??\uff06gt;\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u8fd9\u4ecd\u7136\u8ba9\u6211\u4eec\u7559\u4e0b\u4e86\u6807\u6709\u6807\u8bb0\u7684\u5730\u65b9\u7684\u95ee\u9898\u3002\u5b83\uff06\uff0339;\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u60a8\u60f3\u8981\u5728\u4e00\u6bb5\u4ee3\u7801\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9\u7a76\u7adf\u77e5\u9053\u60a8\u60f3\u8981\u653e\u5165\u67d0\u4e2a\u4ee3\u7801\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u8bf7\u5c06\u5176\u6458\u5f55\u5e76\u4f7f\u5176\u6210\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u9a8c\u8bc1\u548c\u771f\u6b63\u7684\u529f\u80fd\u7f16\u7a0b\u539f\u5219\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a\n \uff08\u5b9a\u4e49\u51e0\u4e4e - \u56e0\u5b50\uff08Lambda\uff08F\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08f\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u6211\u4eec\u5728\u8fd9\u91cc\u5b8c\u6210\u4e86\u4ec0\u4e48\u662f\u5c06\u9012\u5f52\u8c03\u7528\u91cd\u547d\u540d\u4e3aF\u7684\u9012\u5f52\u8c03\u7528\uff0c\u5e76\u4f7fF Anargument\u4e0e\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u8c03\u7528\u8fd1\u6781\u67d0\u7684\u51fd\u6570\u3002\u5dee\u5f02\u5dee\u5f02\u4e0d\u662f\u6240\u6709\u7684\u56e0\u5b50\u51fd\u6570\u3002\u76f8\u53cd\uff0c\u5b83\uff06\uff0339;\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5b83\u91c7\u7528\u4e00\u4e2a\u53c2\u6570f\uff0c\u5b83\u66f4\u597d\u5730\u662f\u4e00\u4e2a\u51fd\u6570\uff08\u6216f\uff08 -  n1\uff09\uff09won\uff06\uff0339; t\u6709\u610f\u4e49\uff09\uff0c\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\uff08\uff08\u5982\u679c\u6211\u4eec\u4e3aF\u9009\u62e9\u5408\u9002\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\uff08\u5e0c\u671b\uff09\u5c06\u662f\u4e00\u4e2a\uff08\u5e0c\u671b\uff09\u7684\u90e8\u5206\uff09\u3002\n \u5b83\u5f88\u91cd\u8981\uff0c\u610f\u8bc6\u5230\u8fd9\u4e2a\u6280\u5de7\u4e0d\u662f\u4ee5\u4efb\u4f55\u65b9\u5f0f\u7279\u5b9a\u4e8e\u9636\u4e58\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4efb\u4f55\u9012\u5f52\u51fd\u6570\u505a\u51fa\u5b8c\u5168\u76f8\u540c\u7684\u6280\u5de7\u3002\u4f8b\u5982\uff0c\u8003\u8651\u9012\u5f52\u51fd\u6570\u6765\u8ba1\u7b97FibonAcci\u6570\u5b57\u3002 Fibonacci\u53f7\u7801\u7684\u9012\u5f52\u5b9a\u4e49\u5982\u4e0b\uff1a \nfibonacci 0 = 0 fibonacci 1 = 1 fibonacci n = fibonacci\uff08n  -  1\uff09+ fibonacci\uff08n  -  2\uff09\n \uff08\u4e8b\u5b9e\u4e0a\u200b\u200b\uff0c\uff06\uff0339;\u5728Haskell\u4e2d\u7684Fibonacci\u51fd\u6570\u7684\u5b9a\u4e49\u3002\uff09\u5728\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7f16\u5199\u529f\u80fd\uff1a\n \uff08\u5b9a\u4e49Fibonacci\uff08lambda\uff08n\uff09\uff08cond\uff08= n 0\uff090\uff09\uff08\uff08= n 1\uff091\uff09\uff08else\uff08+\uff08fibonacci\uff08 -  n 1\uff09\uff09\uff08fibonacci\uff08 -  n 2\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09 \uff09\n \uff08COND\u53ea\u662f\u5d4c\u5957\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u901f\u8bb0\u8868\u8fbe\u5f0f\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u6211\u4eec\u4e3a\u56e0\u7d20\u505a\u7684\u90a3\u6837\u5220\u9664\u663e\u5f0f\u9012\u5f52\uff1a\n \uff08\u5b9a\u4e49\u51e0\u4e4e - \u6590\u6ce2\u7eb3\uff08Lambda\uff08F\uff09\uff08Lambda\uff08n\uff09\uff08cond\uff08\uff08= n 0\uff090\uff09\uff08\uff08= n 1\uff091\uff09\uff08\u5426\u5219\uff08+\uff08f\uff08 -  n 1\uff09\uff09\uff08f\uff08 -  n 2\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u6b63\u5982\u60a8\u6240\u89c1\uff0c\u4ece\u9012\u5f52\u51fd\u6570\u5230\u975e\u9012\u5f52\u51e0\u4e4e\u7b49\u6548\u51fd\u6570\u7684\u8f6c\u6362\u662f\u7eaf\u673a\u68b0\u552f\u4e00\u7684\uff1a\u60a8\u5c06\u51fd\u6570\u51fd\u6570\u7684\u540d\u79f0\u91cd\u547d\u540d\u4e3af\u5230f\uff0c\u5e76\u4e14\u60a8\u5305\u88c5a\uff08lambda\uff08f \uff09......\uff09\u5728\u8eab\u4f53\u5468\u56f4\u3002\n \u5982\u679c\u4f60\uff06\uff0339;\u6211\u8ddf\u7740\u6211\u521a\u521a\u505a\u4e86\u4ec0\u4e48\uff08\u4ece\u4e0d\u4ecb\u610f\u4e3a\u4ec0\u4e48\u6211\u505a\u5230\u4e86;\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u90a3\u4e2a\uff09\uff0c\u7136\u540e\u795d\u8d3a\uff01\u6b63\u5982\u5c24\u8fbe\u6240\u8bf4\uff0c\u4f60\u521a\u521a\u8d70\u8fdb\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u4e16\u754c\u3002 \n\u6211\u53ef\u80fd\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u6211\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5077\u5077\u6478\u7684\u9884\u89c8\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u8fdb\u5165\u7684\u5730\u65b9\u3002\u4e00\u65e6\u6211\u4eec\u5b9a\u4e49\u4e86Y\u7ec4\u5408\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u51e0\u4e2a\u5dee\u5f02\u5b9a\u4e49\u5dee\u5f02\u51fd\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n  \u5176\u4e2dy\u662fy\u7ec4\u5408\u5668\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u56e0\u5b50\u7684\u5b9a\u4e49\u4e0d\u5177\u6709\u4efb\u4f55\u660e\u786e\u7684\u9012\u5f52\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd1\u4f3c - \u6590\u6ce2\u7eb3\u5951\u5b9a\u4e49Fibonacci\u51fd\u6570\uff1a\n  \u56e0\u6b64\uff0c\u53ea\u8981\u6211\u4eec\u62e5\u6709\u9002\u5f53\u7684\u51e0\u4e4e\u51fd\u6570\uff08\u5373\uff0c\u901a\u8fc7\u62bd\u51fa\u9012\u5f52\u51fd\u6570\u8c03\u7528\uff0c\u6211\u4eec\u5c06\u5728\u4f55\u65f6\u4f55\u65f6\u4f55\u65f6\u4f55\u5730\u63d0\u4f9b\u989d\u5916\u7684\u6b21\u6570\n   \u4e3a\u4e86\u8bba\u8ff0\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u62e5\u6709\u4e86\u4e00\u4e2a\u5de5\u4f5c\u9636\u4e58\u51fd\u6570\uff08\u9012\u5f52\u6216\u4e0d\uff0c\u6211\u4eec\u4e0d\u5c0f\u5fc3\uff09\u3002\u6211\u4eec\uff06\uff0339; ll\u81f4\u7535\u8be5\u5047\u8bbe\u7684\u9636\u4e58\u51fd\u6570\u56e0\u5b50\u3002\u73b0\u5728\u8ba9\uff06\uff0339; s\u8003\u8651\u4ee5\u4e0b\u5185\u5bb9\uff1a\n    \uff08\u5b9a\u4e49FactoriaNB\uff08\uff08\u03bb\uff08\u03bb\uff08n\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08f\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\n \u73b0\u5728\uff0c\u901a\u8fc7\u5728\u6211\u4eec\u5f97\u5230\u7684Lambda\u8868\u8fbe\u5f0f\u8eab\u4f53\u5185\u4ee3\u66fff\u7684facoriala\uff1a\n \uff08\u5b9a\u4e49FactorizerB\uff08lambda\uff08n\uff09\uff08\u5982\u679c\uff08= n 0\uff091\uff08* n\uff08factoriala\uff08 -  n 1\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09\uff09 \n\u8fd9\u770b\u8d77\u6765\u5f88\u50cf\u9012\u5f52\u9636\u6bb5\u51fd\u6570\uff0c\u4f46\u5b83\u662f\uff06\uff0339; t\uff1afactoriala\u4e0efactorizerb.so\uff06\uff0339; s\u4e00\u4e2a\u975e\u9012\u5f52\u51fd\u6570\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5047\u8bbe\u7684\u4e8b\u9879a\u51fd\u6570\u3002\u5b83\u5b9e\u9645\u4e0a\u6709\u6548\u5417\uff1f\u55ef\uff0c\u5b83\uff06\uff0339; Spretty\u663e\u7136\uff0c\u5b83\u5e94\u8be5\u4e3an = 0\u5de5\u4f5c\uff0c\u56e0\u4e3a\uff08FactorizerB 0\uff09\u5c06\u53ea\u662f\u8fd4\u56de1\uff08\u62400\u7684\u56e0\u5b50\uff09\u3002\u5982\u679c\u662fN\uff06gt; 0\uff0c\u7136\u540e\uff08FactorialBn\uff09\u7684\u503c\u5c06\u662f\uff08* n\uff08factoriala\uff08 -  n 1\uff09\uff09\uff09\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5047\u8bbe\u4e8b\u9879\u662f\u6b63\u786e\u8ba1\u7b97\u9636\u4e58\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\uff08\u56e0\u6b64\uff08 -  n 1\uff09\uff09\u662fn  -  1\u7684\u56e0\u5b50\uff0c\u56e0\u6b64\uff08* n\uff08factoriala\uff08 -  n 1\uff09\uff09\uff09\u662fn\u7684\u56e0\u5b50\uff08\u901a\u8fc7\u5b9a\u4e49\u9636\u4e58\uff09\uff0c\u4ece\u800c\u8bc1\u660e\uff0c\u53ea\u8981\u5404\u79cd\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u6b63\u786e\u8ba1\u7b97\u56e0\u5b50\u51fd\u6570\u3002\u6240\u4ee5\u8fd9\u662f\u6709\u6548\u7684\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\u6211\u4eec\u4e0d\uff06\uff0339;\u667a\u80fd\u5730\u6709\u4e00\u4e2a\u6492\u8c0e\u7684\u5c40\u52bf\u3002\n \u73b0\u5728\uff0c\u5982\u679c\u4f60\u771f\u7684\u5f88\u806a\u660e\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n  \u8fd9\u4e00\u60f3\u6cd5\u662f\uff1a\u5047\u8bbeSfaciala\u662f\u4e00\u4e2a\u6709\u6548\u7684\u56e0\u5b50\u51fd\u6570\u3002\u7136\u540e\n...... ", "note_en": "Tiger got to hunt, Bird got to fly; Lisper got to sit and wonder, (Y (Y Y))?  Tiger got to sleep, Bird got to land; Lisper got to tell himself he understand.  \u00a0\u00a0\u00a0\u00a0\u2014 Kurt Vonnegut, modified by Darius Bacon\n  I recently wrote a blog post about the Y combinator. Since then, I&#39;ve received so many useful comments that I thought it was appropriate to expand the post into a more complete article. This article will go into greater depth on the subject, but I hope it&#39;ll be more comprehensible as well. You don&#39;t need to have read the previous post to understand this one (in fact, it&#39;s probably better if you haven&#39;t.) The only background knowledge I require is a tiny knowledge of the Scheme programming language including recursion and first-class functions, which I will review. Comments are (again) welcome.\n   Before I get into the details of what Y actually is, I&#39;d like to addressthe question of why you, as a programmer, should bother to learn about it. Tobe honest, there aren&#39;t a lot of good nuts-and-bolts practical reasons forlearning about Y. Even though it does have a few practical applications, forthe most part it&#39;s mainly of interest to computer language theorists.Nevertheless, I do think it&#39;s worth your while to know something about Y forthe following reasons:\n It&#39;s one of the most beautiful ideas in all of programming. If you have any sense of programming aesthetics, you&#39;re sure to be delighted by Y.\n It shows in a very stark way how amazingly powerful the simple ideas of functional programming are.\n In 1959, the British scientist C. P. Snow gave a famous lecture called  The Two Cultures where he bemoaned the fact that many intelligent and well-educated people of the time had almost no knowledge of science. He used knowledge of the Second Law of Thermodynamics as a kind of dividing line between those who were scientifically literate and those who weren&#39;t. I think we can similarly use knowledge of the Y combinator as a dividing line between programmers who are &#34;functionally literate&#34; ( i.e. have a reasonably deep knowledge of functional programming) and those who aren&#39;t. There are other topics that could serve just as well as Y (notably monads), but Y will do nicely. So if you aspire to have the True Lambda-Nature, read on.\n By the way,  Paul Graham (the Lisp hacker, Lisp book author, essayist, and now venture capitalist) apparently thinks so highly of Y that he named his startup incubator company  Y Combinator. Paul got rich from his knowledge of ideas like these; maybe someone else will too. Maybe even you.\n    We&#39;ll start our exploration of the Y combinator by defining some functions to compute factorials. The factorial of a non-negative integer  n is the product of all integers starting from  1 and going up to and including  n. Thus we have:\n factorial 1 = 1 factorial 2 = 2 * 1 = 2 factorial 3 = 3 * 2 * 1 = 6 factorial 4 = 4 * 3 * 2 * 1 = 24\n and so on. (I&#39;m using a function notation without parentheses here, so\u00a0 factorial 3\u00a0 is the same as what is usually written as\u00a0 factorial(3).\u00a0 Humor me.) Factorials increase veryrapidly with increasing  n; the factorial of  20 is 2432902008176640000. The factorial of  0 is definedto be  1; this turns out to be the appropriate definition for the kinds of things factorials are actually used for (like solving problems incombinatorics).\n  It&#39;s easy to write a function in a programming language to compute factorials using some kind of a looping control construct like a  while or  for loop ( e.g. in C or Java). However, it&#39;s also easy to write a recursive function to compute factorials, because factorials have a very natural recursive definition:\n  where the second line applies for all  n greater than zero. Infact, in the computer language  Haskell,that&#39;s the way you actually define the factorial function. In  Scheme, the language we&#39;ll be using here,this function would be written like this:\n  Scheme uses a parenthesized prefix notation for everything, so something like  \u00a0(- n 1)\u00a0 represents what is usually written  \u00a0n - 1\u00a0 in most programming languages. The reasons for this are beyond the scope of this article, but getting used to this notation isn&#39;t very hard.\n In fact, the above definition of the factorial function in Scheme could also be written in a slightly more explicit way as follows:\n (define factorial (lambda (n) (if (= n 0) 1 (* n (factorial (- n 1))))))\n The keyword  lambda simply indicates that the thing we&#39;redefining ( i.e. whatever is enclosed by the open parenthesis to theimmediate left of the  lambda and its corresponding closeparenthesis) is a function. What comes immediately after the word lambda, in parentheses, are the  formal arguments of thefunction; here there is just one argument, which is  n. The body of the function comes after the formal arguments, and hereconsists of the expression  (if (= n 0) 1 (* n (factorial (- n1)))). This kind of function is an  anonymous function. Here youdo give the anonymous function the name  factorial after you&#39;vedefined it, but you don&#39;t have to, and often it&#39;s handy not to if you&#39;re onlygoing to be using it once. In Scheme and some other languages, anonymousfunctions are also called  lambda expressions. Many programminglanguages besides Scheme allow you to define anonymous functions, includingPython, Ruby, Javascript, Ocaml, and Haskell (but not C, C++, or Java,unfortunately). We&#39;ll be using lambda expressions a lot below.\n In the Scheme language, the definition of  factorial just givenis identical to the one before it; Scheme simply translates the firstdefinition into the second one before evaluating it. So all functions inScheme are really lambda expressions.\n Note that the body of the function has a call to the  factorialfunction (which we&#39;re in the process of defining) inside it, which makes thisa recursive definition. I will call this kind of definition, where the name ofthe function being defined is used in the body of the function, an explicitly recursive definition. (You might wonder what an &#34;implicitlyrecursive&#34; function would be. I&#39;m not going to use that expression, but thenotion I have in mind is a recursive function which is generated throughnon-recursive means \u2014 keep reading!)\n For the sake of argument, we&#39;re going to assume that our version of Schemedoesn&#39;t have the equivalent of  for or  while loops inC or Java (although in fact, real Scheme implementations do have suchconstructs, but under a different name), so that in order to define a functionlike  factorial, we pretty much have to use recursion. Scheme isoften used as a teaching language partly for this reason: it forces studentsto learn to think recursively.\n  Scheme is a cool language for many reasons, but one that is relevant to ushere is that it allows you to use functions as &#34;first class&#34; data objects(this is often expressed by saying that Scheme supports  first-classfunctions). This means that in Scheme, we can pass a function to anotherfunction as an argument, we can return a function as the result of evaluatinganother function applied to its arguments, and we can create functionson-the-fly as we need them (using the  lambda notation shownabove). This is the essence of functional programming, and it will featureprominently in the ensuing discussion. Functions which take other functions asarguments, and/or which return other functions as their results, are usuallyreferred to as  higher-order functions.\n  Now, here&#39;s the puzzle: what if you were asked to define the factorial function in Scheme, but were told that you could notuse recursive function calls in the definition (for instance, in the factorial function given above you cannot use the word factorial anywhere in the body of the function). However, you are allowed to use first-class functions and higher-order functions anyway you see fit. With this knowledge, can you define the factorial function?\n The answer to this question is yes, and it will lead us directly to the Ycombinator.\n   The Y combinator is a higher-order function. It takes a single argument,which is a function that isn&#39;t recursive. It returns a version of the functionwhich is recursive. We will walk through this process of generating recursivefunctions from non-recursive ones using Y in great detail below, but that&#39;sthe basic idea.\n More generally, Y gives us a way to get recursion in a programming languagethat supports first-class functions but that doesn&#39;t have recursion built into it. So what Y shows us is that such a language already allows us to definerecursive functions, even though the language definition itself says nothingabout recursion. This is a Beautiful Thing: it shows us that functionalprogramming alone can allow us to do things that we would never expect to beable to do (and it&#39;s not the only example of this).\n  We will be looking at two broad classes of computer languages: those that use  lazy evaluation and those that use  strict evaluation. Lazyevaluation means that in order to evaluate an expression in the language, youonly evaluate as much of the expression as is needed to get the final result.So (for instance) if there is a part of the expression that doesn&#39;t need toget evaluated (because the result will not depend on it) it won&#39;t beevaluated. In contrast, strict evaluation means that all parts of anevaluation will be evaluated completely before the value of the expression asa whole is determined (with some necessary exceptions, such as if expressions, which have to be lazy to work properly). Inpractice, lazy evaluation is more general, but strict evaluation is morepredictable and often more efficient. Most programming languages use strictevaluation. The programming language  Haskell uses lazy evaluation, and this isone of the most interesting things about that language. We will use both kindsof evaluation in what follows.\n  Even though we often refer to Y as &#34;the&#34; Y combinator, in actual fact thereare an infinite number of Y combinators. We will only be concerned with two ofthese, one lazy and one strict. We need two Y combinators because the Ycombinator we define for lazy languages will not work for strict languages.The lazy Y combinator is often referred to as the  normal-order Ycombinator and the strict one is referred to as the  applicative-order Ycombinator. Basically,  normal-order is another way of saying &#34;lazy&#34;and  applicative-order is another way of saying &#34;strict&#34;.\n  Another big dividing line in programming languages is between  statictyping and  dynamic typing. A statically-typed language is one wherethe types of all expressions are determined at compile time, and any typeerrors cause the compilation to fail. A dynamically-typed language doesn&#39;t doany type checking until run time, and if a function is applied to arguments ofinvalid types ( e.g. by trying to add together an integer and a string),then an error is reported. Among commonly-used programming languages, C, C++and Java are statically typed, and Perl, Python and Ruby are dynamicallytyped. Scheme (the language we&#39;ll be using for our examples) is alsodynamically typed. (There are also languages that straddle the border betweenstatically-typed and dynamically-typed, but I won&#39;t discuss thisfurther.)\n One often hears static typing referred to as  strong typing anddynamic typing referred to as  weak typing, but this is an abuse ofterminology. Strong typing simply means that every value in the language hasone and only one type, whereas weak typing means that some values can havemultiple types. So Scheme, which is dynamically typed, is also strongly typed,while C, which is statically typed, is weakly typed (because you can cast apointer to one kind of object into a pointer to another type of object withoutaltering the pointer&#39;s value). I will only be concerned with strongly typedlanguages here.\n It turns out to be much simpler to define the Y combinator in dynamicallytyped languages, so that&#39;s what I&#39;ll do. It is possible to define a Ycombinator in many statically typed languages, but (at least in the examplesI&#39;ve seen) such definitions usually require some non-obvious type hackery,because the Y combinator itself doesn&#39;t have a straightforward static type.That&#39;s beyond the scope of this article, so I won&#39;t mention it further.\n  A combinator is just a  lambda expression with no  freevariables. We saw above what lambda expressions are (they&#39;re justanonymous functions), but what&#39;s a free variable? It&#39;s a variable ( i.e. a name or identifier in the language) which isn&#39;t a  boundvariable. Happy now? No? OK, let me explain.\n A bound variable is simply a variable which is contained inside the body of a lambda expression that has that variable name as one of its arguments.\n   Are the variables in the body of these lambda expressions free variables or bound variables? We&#39;ll ignore the formal arguments of the lambda expressions, because only variables in the body of the lambda expression can be considered free or bound. As for the other variables, here are the answers:\n The  x in the body of the lambda expression is a boundvariable, because the formal argument of the lambda expression is also x. This lambda expression has no other variables, therefore ithas no free variables, therefore it&#39;s a combinator.\n  The  y in the lambda body is a free variable. This lambda expression is therefore not a combinator.\n  Aside from the formal arguments of the lambda expression, there is only one variable, the final  x, which is a bound variable (it&#39;s bound by the formal argument of the outer lambda expression). Therefore, this lambda expression as a whole has no free variables, so this is a combinator.\n  Aside from the formal arguments of the lambda expression, there are two variables, the final  x and  y, both bound variables. This is a combinator.\n  The entire expression is not a lambda expression, so it&#39;s by definition not a combinator. Nevertheless, the  x is a free variable and the final  y is a bound variable.\n  Again, the entire expression isn&#39;t a lambda expression (it&#39;s a function application), so this isn&#39;t a combinator either. The second  x is a bound variable while the  y is a free variable.\n  (define factorial (lambda (n) (if (= n 0) 1 (* n (factorial (- n 1))))))\n is a combinator, you don&#39;t consider the  define part, so what you&#39;re really asking is if\n  is a combinator. Since in this lambda expression, the name factorial represents a free variable (the name factorial is not a formal argument of the lambda expression), this is not a combinator. This will be important below. In fact, the names  =,  *, and  - are also free variables, so even without the name  factorial this would not be a combinator (to say nothing of the numbers!).\n     (define factorial (lambda (n) (if (= n 0) 1 (* n (factorial (- n 1))))))\n What we want to do is to come up with a version of this that does the same thing but doesn&#39;t have that pesky recursive call to  factorial in the body of the function.\n Where do we start? It would be nice if you could save all of the function except for the offending recursive call, and put something else there. That might look like this:\n (define sort-of-factorial (lambda (n) (if (= n 0) 1 (* n (&lt;???&gt; (- n 1))))))\n This still leaves us with the problem of what to put in the place marked  &lt;???&gt;. It&#39;s a tried-and-true principle of functional programming that if you don&#39;t know exactly what you want to put somewhere in a piece of code, just abstract it out and make it a parameter of a function. The easiest way to do this is as follows:\n (define almost-factorial (lambda (f) (lambda (n) (if (= n 0) 1 (* n (f (- n 1)))))))\n What we&#39;ve done here is to rename the recursive call to factorial to  f, and to make  f anargument to a function which we&#39;re calling  almost-factorial.Notice that  almost-factorial is not at all the factorialfunction. Instead, it&#39;s a higher-order function which takes a single argument f, which had better be a function (or else  (f (- n1)) won&#39;t make sense), and  returns another function (the (lambda (n) ...) part) which (hopefully) will be a factorialfunction if we choose the right value for  f.\n It&#39;s important to realize that this trick is not in any way specific to the  factorial function. We can do exactly the same trick with any recursive function. For instance, consider a recursive function to compute fibonacci numbers. The recursive definition of fibonacci numbers is as follows:\n fibonacci 0 = 0 fibonacci 1 = 1 fibonacci n = fibonacci (n - 1) + fibonacci (n - 2)\n (In fact, that&#39;s the definition of the fibonacci function in Haskell.) In Scheme, we can write the function this way:\n (define fibonacci (lambda (n) (cond ((= n 0) 0) ((= n 1) 1) (else (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))))\n (where  cond is just a shorthand expression for nested  if expressions). We can then remove the explicit recursion just like we did for  factorial:\n (define almost-fibonacci (lambda (f) (lambda (n) (cond ((= n 0) 0) ((= n 1) 1) (else (+ (f (- n 1)) (f (- n 2))))))))\n As you can see, the transformation from a recursive function to a non-recursive  almost- equivalent function is a purely mechanical one: you rename the name of the recursive function inside the body of the function to  f and you wrap a  (lambda (f) ...) around the body.\n If you&#39;ve followed what I just did (never mind  why I did it; we&#39;ll see that later), then congratulations! As Yoda says, you&#39;ve just taken the first step into a larger world.\n  I probably shouldn&#39;t do this yet, but I&#39;m going to give you a sneak preview of where we&#39;re going. Once we define the Y combinator, we&#39;ll be able to define the factorial function using  almost-factorial as follows:\n  where  Y is the Y combinator. Note that this definition of factorial doesn&#39;t have any explicit recursion in it. Similarly,we can define the  fibonacci function using almost-fibonacci in the same way:\n  So the Y combinator will give us recursion wherever we need it as long as we have the appropriate  almost- function available ( i.e. the non-recursive function derived from the recursive one by abstracting out the recursive function calls).\n   Let&#39;s assume, for the sake of argument, that we already had a working factorial function lying around (recursive or not, we don&#39;t care). We&#39;ll call that hypothetical factorial function  factorialA. Now let&#39;s consider the following:\n    (define factorialB ((lambda (f) (lambda (n) (if (= n 0) 1 (* n (f (- n 1)))))) factorialA))\n Now, by substituting  factorialA for  f inside the body of the lambda expression we get:\n (define factorialB (lambda (n) (if (= n 0) 1 (* n (factorialA (- n 1))))))\n This looks a lot like the recursive factorial function, but it isn&#39;t: factorialA is not the same function as  factorialB.So it&#39;s a non-recursive function that depends on a hypothetical factorialA function to work. Does it actually work? Well, it&#39;spretty obvious that it should work for  n = 0, since (factorialB 0) will just return  1 (the factorial of 0). If  n &gt; 0, then the value of  (factorialBn) will be  (* n (factorialA (- n 1))). Now, we assumedthat  factorialA would correctly compute factorials, so (factorialA (- n 1)) is the factorial of  n - 1, andtherefore  (* n (factorialA (- n 1))) is the factorial of n (by the definition of factorial), thus proving that factorialB computes the factorial function correctly as long as factorialA does. So this works. The only problem is that we don&#39;tactually have a  factorialA lying around.\n Now, if you&#39;re really clever, you might be asking yourself whether we can just do this:\n  The idea is this: let&#39;s assume that  factorialA is a valid factorial function. Then \n......", "posttime": "2021-06-29 23:06:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u5408,combinator,\u51fd\u6570", "title": "Y\u7ec4\u5408\u8005 ", "title_en": "The Y Combinator", "transed": 1, "url": "https://mvanier.livejournal.com/2897.html", "via": "", "real_tags": ["\u7ec4\u5408", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068520, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u72b6\u6001\uff1a\u7c97\u7cd9\u7684\u5de5\u4f5c\u7968 - \u6211\u5927\u58f0\u601d\u8003\u3002\u6295\u673a\u6027\uff0c\u53ef\u80fd\u5305\u542b\u9519\u8bef\uff0c\u8bef\u89e3\u548c\u9057\u6f0f;\u975e\u5e38\u611f\u5230\u6df1\u601d\u719f\u8651\uff0c\u77e5\u60c5\u7684\u610f\u89c1\u3002\u9002\u7528\u4e8e\u4e00\u822c\u79d1\u5b66\u597d\u5947\u7684\u53d7\u4f17\uff0c\u4e0d\u9700\u8981\u8be6\u7ec6\u7684\u8be6\u7ec6\u4e13\u5bb6\u80cc\u666f\u3002\n  \u6709\u65f6\u79f0\uff0c\u7269\u7406\u5b66\u6b63\u5728\u63a5\u8fd1\u5176\u201c\u4e00\u5207\u7406\u8bba\u201d\u7684\u7ed3\u675f - \u56e0\u4e3a\u6211\u4eec\u4e86\u89e3\u4e86\u5bf9\u5b87\u5b99\u4e2d\u7c92\u5b50\u548c\u529b\u91cf\u7684\u57fa\u672c\u89c4\u5219\u3002\u8fd9\u5c31\u50cf\u65ad\u8a00\u90a3\u4e2a\u8ba1\u7b97\u673a\u79d1\u5b66\u57281936\u5e74\u7ed3\u675f\u4e86\u56fe\u7075\u673a\uff0c\u8ba1\u7b97\uff06\uff0339;\u5173\u4e8e\u4e00\u5207\u7684\u7406\u8bba\u201c\u3002\u5f53\u7136\uff0c\u90a3\u4e2a\uff06\uff0339;\u6ca1\u6709\u53d1\u751f\u4ec0\u4e48\u3002\u800c\u662f\uff0c\u56fe\u7075\u673a\u7684\u53d1\u660e\u5f00\u8bbe\u4e86\u4e00\u4e2a\u65b0\u7684\u521b\u610f\u8fb9\u754c\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u65b0\u60f3\u6cd5\u7684\u975e\u51e1\u5212\u5206\u3002\n  \u79d1\u5b66\u4eca\u5929\u6b63\u5728\u7ecf\u5386\u7c7b\u4f3c\u4ee4\u4eba\u5174\u594b\u7684\u8fc7\u6e21\u3002\u76f4\u5230\u6700\u8fd1\u4eba\u7c7b\u7684\u5de5\u4f5c\u539f\u56e0\u5f88\u50cf\u6211\u4eec\u5728\u56fe\u7075\u4e4b\u524d\u8ba1\u7b97\uff0c\u4f7f\u7528\u5b9a\u5236\u5de5\u5177\u548c\u60f3\u6cd5\u7684\u62fc\u51d1\u800c\u6210\u3002\u4f46\u73b0\u5728\u6211\u4eec\u4e86\u89e3\u5982\u4f55\u6709\u6548\u7684\u57fa\u7840\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u68a6\u5e7b\u822c\u7684\u7406\u8bba\uff0c\u63cf\u8ff0\u4e86\u57fa\u672c\u7c92\u5b50\u548c\u529b\u91cf\uff0c\u6211\u4eec\u8d8a\u6765\u8d8a\u64c5\u957f\u64cd\u7eb5\u7269\u8d28\u3002\u6240\u4ee5\u6211\u4eec\u5f00\u59cb\u95ee\uff1a\u539f\u5219\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4ec0\u4e48\uff1f\u4e0d\u4ec5\u4ec5\u662f\u5728\u5b9e\u9645\u610f\u4e49\u4e0a\uff0c\u6070\u597d\u5728\u624b\u5934\u7684\u5de5\u5177\uff0c\u4f46\u5728\u6839\u672c\u610f\u4e49\u4e0a\uff1a\u7269\u7406\u6cd5\u5f8b\u5141\u8bb8\u7684\u662f\u4ec0\u4e48\uff1f\n  \u5f53\u7136\uff0c\u8fd9\u610f\u5473\u7740\u6574\u4e2a\u95ee\u9898\u4e16\u754c\uff1a\u6709\u53ef\u80fd\u6709\u4ec0\u4e48\u54c1\u8d28\uff1f\u6211\u4eec\u53ef\u4ee5\u4e3a\u8ba1\u7b97\u548c\u516c\u53f8\u8fdb\u884c\u54ea\u4e9b\u6765\u8ba1\u7b97\uff1f\u6211\u4eec\u53ef\u4ee5\u53d1\u660e\u65b0\u7684\u9ad8\u7ea7\u62bd\u8c61\u548c\u8bbe\u8ba1\u539f\u5219\uff0c\u7c7b\u4f3c\u4e8e\u50cf\u7ea6\u7ff0\u9ea6\u5361\u9521\u548c\u827e\u4f26\u51ef\u4e3a\u8ba1\u7b97\u7684\u4eba\uff1f\u5f53\u6211\u4eec\u63a7\u5236\u7269\u8d28\u4ee5\u53ca\u63a7\u5236\u8ba1\u7b97\u673a\u5c4f\u5e55\u4e0a\u7684\u50cf\u7d20\u65f6\uff0c\u6253\u5f00\u54ea\u4e9b\u8bbe\u8ba1\u7a7a\u95f4\uff1f\u4ec0\u4e48\u7f8e\u597d\u7684\u65b0\u8bbe\u8ba1\u7406\u5ff5\u662f\u53ef\u80fd\u7684\uff1f\n  \u6211\u4eec\u65e5\u5e38\u7ecf\u9a8c\u4e2d\u7684\u5927\u90e8\u5206\u4e8b\u60c5\u662f\u7531\u4e09\u4e2a\u9897\u7c92\u6784\u5efa\u7684\uff1a\u8d28\u5b50\uff0c\u7535\u5b50\u548c\u4e2d\u5b50\u3002\u8fd9\u4e9b\u53ef\u4ee5\u7528\u6765\u5efa\u7acb\u4e00\u4e2a\u60ca\u4eba\u7684\u4e0d\u540c\u4e1c\u897f\u9635\u5217\uff1a\u94bb\u77f3;\u4eba\u7c7b;\u661f\u7cfb;\u9ed1\u6d1e; iPhone\u3002\u62e5\u6709\u8db3\u591f\u597d\u7684\u954a\u5b50\u548c\u5f88\u591a\u8010\u5fc3\uff0c\u60a8\u53ef\u4ee5\u91cd\u65b0\u7ec4\u88c5\u4e00\u79cd\u4eba\u7c7b\u9677\u5165\u53ef\u6bd4\u8d28\u91cf\u7684\u81ea\u884c\u8f66;\u53cd\u4e4b\u4ea6\u7136\u3002\n  \u6240\u4ee5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ece\u8d28\u5b50\uff0c\u7535\u5b50\u548c\u4e2d\u5b50\u5efa\u7acb\u4ec0\u4e48* *\u9a6c\u4e01\u00b7\u91cc\u65af\u6307\u51fa\uff0c\u6211\u4eec\u7684\u4eba\u7c7b\u503e\u5411\u4e8e\u4ece\u4e8b\u7c92\u5b50\u81f4\u76f2\u75c7\uff0c\u5f80\u5f80\u8ba4\u4e3a\u6211\u4eec\u8ba4\u4e3a\u662f\u201c\u666e\u901a\u95ee\u9898\u201d\u5c31\u662f\u91cd\u8981\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4ece\u4e8b\u8fd9\u6837\u4e00\u4e2a\u76f2\u6587\u5728\u8d85\u51fa\u4e0a\u9762\u7684\u201c\u6211\u4eec\u7406\u89e3\u5982\u4f55\u8fd0\u4f5c\u7684\u57fa\u672c\u539f\u5219\u201d\u7684\u60c5\u51b5\u4e0b\u3002\u4f46\u662f\uff0c\u6839\u636e\u6211\u4eec\u76ee\u524d\u6000\u7591\u6697\u7269\u8d28\uff0c\u6240\u8c13\u7684\u201c\u666e\u901a\u7269\u8d28\u201d\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u76f8\u5f53\u4e0d\u5bfb\u5e38\u7684\uff0c\u4f46\u4f8b\u5916\u800c\u4e0d\u662f\u89c4\u5219\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5728\u6ca1\u6709\u5bf9\u6697\u7269\u8d28\u7684\u826f\u597d\u7406\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u5c06\u7ee7\u7eed\u53c2\u4e0e\u7c92\u5b50\u81f4\u529b\u89e3\uff0c\u5e76\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u9650\u5236\u81ea\u5df1\u5bf9\u666e\u901a\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u5c06\u8fdb\u4e00\u6b65\u8fdb\u4e00\u6b65\u5e76\u5c06\u8ba8\u8bba\uff08\u4e3b\u8981\uff09\u9650\u5236\u4e3a\u8d28\u5b50\uff0c\u7535\u5b50\u548c\u4e2d\u5b50\u3002 \uff1f\n  \u6211\u4eec\u4f3c\u4e4e\u6709\u53ef\u80fd\u5efa\u7acb\u4e00\u4e2a\u60ca\u4eba\u7684\u4e1c\u897f\uff0c\u751a\u81f3\u53ef\u4ee5\u8bc6\u522b\u4eca\u5929\u7684\u4e1c\u897f\uff0c\u751a\u81f3\u53ef\u4ee5\u60f3\u5230\u4eca\u5929\u7684\u4e1c\u897f\uff0c\u66f4\u5c11\u7684\u5efa\u8bbe\u3002 \n\u8003\u8651\u4e00\u5343\u4e07\u5e74\u524d\uff0c\u5730\u7403\u7f3a\u5e2d\u4e86\u610f\u8bc6\u7684\u601d\u60f3\uff0c\u9664\u4e86\u76f8\u5f53\u539f\u59cb\u7684\u5f62\u5f0f\u3002\u53ef\u80fd\u6709\u5f62\u5f0f\u7684\u7269\u8d28\u53ef\u80fd\u4e0e\u6211\u4eec\u4eca\u5929\u719f\u6089\u7684\u4e1c\u897f\u4e0d\u540c\uff0c\u56e0\u4e3a\u610f\u8bc6\u6765\u81ea\u5ca9\u77f3* *\u67d0\u4e9b\u4eba\u4e0d\u76f8\u4fe1\u610f\u8bc6\u662f\u91cd\u8981\u7684\u8d22\u4ea7\u3002\u5b58\u5728\u6709\u9650\u7684\u611f\u5b98\u662f\u5408\u7406\u7684\uff1a\u5f53\u7136\uff0c\u7269\u8d28\u662f\u4e00\u4e2a\u57fa\u677f\uff0c\u5e76\u4e14\u610f\u8bc6\u7684\u65b9\u9762\u53ef\u4ee5\u4e0e\u8be5\u57fa\u677f\u7684\u7ec6\u8282\u65e0\u5173\uff0c\u5728\u7c7b\u4f3c\u4e8e\u7b97\u6cd5\u4e0e\u5176\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\u7684\u5b58\u5728\u800c\u7c7b\u4f3c\u7684\u90a3\u79cd\u57fa\u677f\u7684\u7ec6\u8282\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4e0d\u8ba4\u4e3a\u6709\u5f88\u591a\u4e25\u91cd\u7684\u7406\u7531\u6000\u7591\u610f\u8bc6\u662f\u666e\u901a\u95ee\u9898\u51fa\u73b0\u7684\u8d22\u4ea7\u3002\n    \u63a2\u7d22\u201c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4ec0\u4e48\uff1f\u201d\u7684\u4e00\u79cd\u65b9\u6cd5\u95ee\u9898\u662f\u770b\u770b\u4e0d\u540c\u7684\u7269\u8d28\u5730\u56fe\u3002\u53ef\u80fd\u662f\u6700\u7740\u540d\u7684\u8fd9\u6837\u7684\u5730\u56fe\u662f\u5468\u671f\u6027\u8868\uff0c\u663e\u793a\u6240\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u539f\u5b50\uff0c\u8fd9\u4e9b\u539f\u5b50\u90fd\u6784\u6210\u4e86\u6211\u4eec\u5468\u56f4\u4e16\u754c\u4e0a\u7684\u5927\u90e8\u5206\u4e8b\u60c5\u3002\u4f46\u662f\u6709\u5f88\u591a\u5176\u4ed6\u7684\u7269\u8d28\u5730\u56fe\u3002\u5728\u90a3\u91cc\u7684\u7cfb\u7edf\u53d1\u80b2\u6811\uff0c\u8fd9\u8868\u660e\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u751f\u6d3b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6240\u6709\u86cb\u767d\u8d28\u7684\u4e0d\u540c\u9636\u6bb5\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u661f\u661f\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u6052\u661f\u7684\u5730\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u3002\u8fd8\u6709\u5f88\u591a\u3002\n  \u5728\u8fd9\u4e9b\u7b14\u8bb0\u4e2d\uff0c\u6211\u4eec\uff06\uff0339; ll\u901a\u8fc7\u51e0\u4e2a\u8fd9\u6837\u7684\u7269\u8d28\u5730\u56fe\u8fdb\u884c\u91ce\u751f\u52a8\u7269\u56ed\u3002\u6211\u4eec\u8d62\u5f97\u4e86\uff06\uff0339; t\u592a\u6df1\u4e86\uff0c\u8fdb\u5165\u4efb\u4f55\u4e2a\u4eba\u5730\u56fe - \u6211\u8ba8\u8bba\u7684\u4e00\u5207\u90fd\u53ef\u80fd\uff08\u901a\u5e38\u662f\uff09PHD\u8bba\u6587\u7684\u4e3b\u9898\uff0c\u751a\u81f3\u662f\u6574\u4e2a\u9886\u57df\u3002\u76f8\u53cd\uff0c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u770b\u8d77\u6765\u8fc5\u901f\u770b\u51fa\u6211\u4eec\u63a2\u7d22\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u76ee\u7684\u662f\u8fa8\u522b\u4e00\u4e9b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4ee5\u751f\u6210\u65b9\u5f0f\u63a2\u7d22\u7684\u4e00\u822c\u539f\u5219\u3002\n  \u5f53\u6211\u5f00\u59cb\u5199\u8fd9\u4e9b\u7b14\u8bb0\u65f6\uff0c\u6211\u6709\u4e00\u4e2a\u5f02\u60f3\u5929\u5f00\u7684\u95ee\u9898\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\uff0c\u7edf\u4e00\u7684\u5730\u56fe\u6211\u4eec\u53ef\u4ee5\u7528\u6765\u4e86\u89e3\u6240\u6709\u7269\u8d28\u5417\uff1f\u6211\u5e0c\u671b\u5c1d\u8bd5\u8ba9\u8fd9\u6837\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u56fe\u4f1a\u7ed9\u6211\u4e00\u4e9b\u6d1e\u5bdf\u529b\u7684\u95ee\u9898\u201c\u539f\u5219\u4e0a\u53ef\u4ee5\u5efa\u7acb\u4ec0\u4e48\uff1f\u201d\u800c\u4e14\uff0c\u6b63\u5982\u6211\u5199\u4e0b\u7684\u97f3\u7b26\uff0c\u6211\u73a9\u5f04\u4e86\u591a\u79cd\u5236\u4f5c\u7edf\u4e00\u5730\u56fe\u7684\u65b9\u5f0f\u3002\u6700\u7ec8\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u4ef6\u4e8b\u8fc7\u4e8e\u5bcc\u88d5\uff0c\u5bcc\u6709\u4e86\u4e00\u4e2a\u771f\u6b63\u826f\u597d\u7684\u7edf\u4e00\u5730\u56fe\u3002\u4ec0\u4e48\uff06\uff0339;\u66f4\u591a\uff0c\u751a\u81f3\u8981\u505a\u4e00\u4e2a\u901a\u8fc7\u7684\u5de5\u4f5c\u8fd9\u4e9b\u7b14\u8bb0\u9700\u8981\u66f4\u957f\u7684\u767e\u500d\uff01\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u53d1\u73b0\u5c1d\u8bd5\u523a\u6fc0\u3002\u56e0\u6b64\uff0c\u5728\u6ce8\u91ca\u7ed3\u675f\u65f6\uff0c\u6211\u5c55\u793a\u4e86\u4e00\u4e2a\u56fe\u8868\uff0c\u8be5\u56fe\u5c01\u88c5\u4e86\u5728\u8fd9\u4e9b\u7b14\u8bb0\u4e2d\u5f00\u53d1\u7684\u8bb8\u591a\u63a2\u7d22\u7684\u60f3\u6cd5\u3002\u5b83\uff06\uff0339;\u975e\u5e38\u4e0d\u5b8c\u6574\uff0c\u4f46\u5e0c\u671b\u6709\u8da3\u548c\u751f\u6210\u3002\n    \u7269\u7406\u5b66\u5bb6John Wheeler\u4e00\u65e6\u6307\u5bfc\u7814\u7a76\u7684\u6709\u7528\u539f\u5219\uff1a\u201c\u5728\u4efb\u4f55\u9886\u57df\uff0c\u627e\u5230\u6700\u5947\u602a\u7684\u4e8b\u60c5\u5e76\u63a2\u7d22\u5b83\u201d\u3002\u5173\u4e8e\u5730\u56fe\u7684\u4e00\u4ef6\u597d\u4e8b\u662f\u4ed6\u4eec\u5efa\u8bae\u5947\u602a\u7684\u4e8b\u60c5\u3002\u5373\u4f7f\u5730\u56fe\u672c\u8eab\u719f\u6089\uff0c\u5982\u5468\u671f\u6027\u8868\uff0c\u8fd9\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4eec\u53ef\u4ee5\u95ee\u81ea\u5df1\uff1a\u5b9a\u671f\u8868\u4e2d\u6700\u5947\u602a\u7684\u201c\u5730\u65b9\u201d\u5728\u54ea\u91cc\uff1f\u7136\u540e\u6311\u6218\u81ea\u5df1\u63a2\u7d22\u8fd9\u4e9b\u5730\u65b9\u3002\n  \u5b9a\u671f\u8868\u4e2d\u6700\u5947\u602a\u7684\u5730\u65b9\u7684\u4e00\u4e2a\u5019\u9009\u4eba\u662f\u6700\u8fd1\u53d1\u73b0\u7684\u5316\u5b66\u5143\u7d20Oganesson\u3002\u5b83\uff06\uff0339;\u662f\u6700\u4e25\u91cd\u7684\u5df2\u77e5\u5143\u7d20\uff0c\u539f\u5b50\u5e8f\u6570\u4e3a118.\u5b83\u7a81\u51fa\u663e\u793a\u4e0b\u9762\uff0c\u53f3\u4e0b\u65b9\u7684\u7ea2\u8272\u5706\u5708* *\u7531\u4e8e\u7528\u6237\u201c\u53cc\u9510\u201d\u548c\u201coffnfopt\u201d\u800c\u8c03\u6574\u7684\u56fe\u50cf\u9002\u5e94\u56fe\u50cf\u3002\u7ef4\u57fa\u767e\u79d1\uff1a\n       Oganesson\u4e8e2002\u5e74\u53d1\u73b0\uff0c\u7531Yuri Oganessian\u7684\u4e00\u652f\u7531Yuri Oganessian\u961f\u57281895\u5e74\u88abHansPeterJ\u00f8rgenJulius\u00b7\u514b\u6155\u4f26\u961f\u9884\u6d4b\u4e4b\u540e\u3002\u5b83\u662f\u901a\u8fc7\u4f7f\u7528\u9499\u79bb\u5b50\u8f70\u51fb\u52a0\u5229\u798f\u5c3c\u4e9a\u539f\u5b50\u7684\u76ee\u6807\uff0c\u975e\u5e38\u9ad8\u3002\u53ea\u6709\u5c11\u6570\u51e0\u4e2aOganesson\u539f\u5b50\u88ab\u89c2\u5bdf\u5230 - \u5927\u7ea6\u534a\u4e2a\u4eba\uff0c\u5176\u4e2d\u4e00\u4e9b\u89c2\u5bdf\u7ed3\u679c\u88ab\u89c6\u4e3a\u672a\u7ecf\u8bc1\u5b9e\u7684\u89c2\u5bdf\u7ed3\u679c\u3002 \n\u6211\u4eec\u80af\u5b9a\u4f1a\u5bf9Oganesson\u80af\u5b9a\u4f1a\u5f88\u591a\uff0c\u89c2\u5bdf\u5230\u592a\u5feb\u7684\u539f\u5b50\u8150\u70c2\u4e86\uff0c\u4ee5\u83b7\u5f97\u592a\u591a\u7684oganesson\u6240\u505a\u7684\u4e8b\u60c5\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bc6\u96c6\u7684\u7406\u8bba\u7814\u7a76\uff0c\u5e76\u8fdb\u884c\u4e86\u4e00\u4e9b\u4ee4\u4eba\u60ca\u8bb6\u7684\u9884\u6d4b\u3002 Oganesson\u4f4d\u4e8e\u5468\u671f\u8868\u7684\u6700\u7ec8\u680f\u4e2d\uff0c\u8fd9\u4e9b\u5f53\u7136\u662f\u201c\u60f0\u6027\u6c14\u4f53\u201d\uff0c\u9ad8\u53cd\u5e94\u6027\u6c14\u4f53\uff0c\u5982\u6c26\u6c14\u548c\u6c29\u6c14\u3002\n  \u81f3\u5c11\uff0c\u90a3\u4e2a\uff06\uff0339;\u6211\u4eec\u5728\u9ad8\u4e2d\u5316\u5b66\u4e2d\u5b66\u5230\u7684\u6545\u4e8b\u3002\u4e8b\u5b9e\u4e0a\uff0cOganesson\u5bf9\u8fd9\u4e9b\u671f\u671b\u56f0\u6270\u7740\u8fd9\u4e9b\u671f\u671b\u3002\u7406\u8bba\u8ba1\u7b97\u8868\u660eOganesson\u53ef\u80fd\u662f\u6807\u51c6\u6e29\u5ea6\u548c\u538b\u529b\u7684\u56fa\u4f53\u534a\u5bfc\u4f53\uff0c\u800c\u4e0d\u662f\u6c14\u4f53\u3002\u6b64\u5916\uff0c\u4e0e\u5176\u4ed6\u60f0\u6027\u6c14\u4f53* *\u514b\u6797\u987fS. NASH\uff0c\u539f\u5b50\u548c\u5206\u5b50\u7279\u6027\u4e3a\u5143\u7d20112,114\u548c118\uff082005\uff09\u7684\u4e0d\u540c\uff0c\u5b83\u53ef\u80fd\u662f\u663e\u7740\u7684\u53cd\u5e94\u6027\u3002\u6ce8\u610f\uff0c\u53e6\u4e00\u4e2a\u60f0\u6027\u6c14\u4f53\u81f3\u5c11\u6709\u70b9\u53cd\u5e94\uff08\u4e8c\u94a0Helide\uff0c\u4efb\u4f55\u4eba\uff1f\uff09 -  Wikipedia\uff06\uff0339;\u8ba8\u8bba\u662f\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u59cb - \u4f46\u662foganesson\u9884\u8ba1\u5c06\u662fMoreso\u7684\u663e\u7740\u663e\u7740\u3002\n  \u4e3a\u4ec0\u4e48\u60f0\u6027\u6c14\u4f53\u662f\u975e\u53cd\u5e94\u6c14\u4f53\u7684\u6807\u51c6\u7684\u8bba\u70b9 -  GIST\u662f\u7406\u89e3\u7535\u5b50\u8f68\u9053\u58f3\u7ed3\u6784\uff0c\u6bcf\u4e2a\u7535\u5b50\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5168\u58f3\u7279\u522b\u7a33\u5b9a\u5e76\u5bfc\u81f4\u975e\u53cd\u5e94\u6027\u5143\u4ef6\u3002\u4f60\u4eceOganesson\u4e2d\u5b66\u5230\u7684\u662f\u90a3\u4e9b\u4f9d\u636e\u7684\u4e00\u4e9b\u539f\u5219\u53ef\u4ee5\uff06\uff0339; t\u662f\u5408\u9002\u7684\u3002\u6211\u5fc5\u987b\u627f\u8ba4\uff0c\u6211\u5df2\u7ecf\u901a\u8fc7\u6807\u51c6\u53c2\u6570\u5982\u4f55\u7834\u574f\uff08\u8d85\u8d8a\u4e86\u4e0a\u8ff0\u7eb8\u5f20\uff09\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\uff06\uff0339;\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\uff06\uff0339\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u5728\u6211\u7684\u8111\u6d77\u4e2d\u6709\u4e00\u70b9\u65d7\u5e1c\u8bf4\u5173\u4e8e\u7535\u5b50\u8f68\u9053\u548c\u60f0\u6027\u6c14\u4f53\u7684\u6807\u51c6\u8bba\u70b9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e9b\u5143\u7d20\u7684\u3002\u8be5\u8bba\u70b9\u901a\u5e38\u5448\u73b0\u4e3a\u57fa\u4e8e\u666e\u904d\u539f\u5219\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u539f\u5219\u4e0d\u662f\u666e\u904d\u7684\u3002\n  \u56e0\u6b64\uff0c\u63a2\u7d22Oganesson\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5b83\u5373\u4f7f\u53ea\u662f\u901a\u8fc7\u901a\u77e5\u60a8\u5bf9\u8fd9\u79cd\u7406\u89e3\u7684\u9650\u5236\uff0c\u5b83\u5373\u4f7f\u53ea\u662f\u901a\u8fc7\u901a\u77e5\u60a8\u7684\u7406\u89e3\uff0c\u5b83\u8fd8\u6539\u5584\u4e86\u60a8\u5bf9\u7269\u8d28\u7684\u7406\u89e3\u3002\u5b83\u6233\u4f60\uff1a\u5468\u671f\u6027\u8868\u7684\u5f62\u72b6\u662f\u56e0\u4e3a\u6f5c\u5728\u7684\u539f\u5219\u6240\u505a\u7684\u5f62\u72b6\u3002\u5982\u679c\u8fd9\u4e9b\u539f\u5219\u5206\u89e3\uff0c\u662f\u5426\u5e94\u8be5\u6539\u53d8\u5468\u671f\u8868\u7684\u5f62\u72b6\uff1f\u8fd9\u53cd\u8fc7\u6765\u53c8\u8868\u660e\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u5173\u4e8e\u4eba\u7c7b\u5fc3\u7406\u5b66\u548c\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u81ea\u7136\u7684\u539f\u5219\uff1a\u53ef\u89c6\u5316\u5143\u7d20\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\u6bd4\u6807\u51c6\u5b9a\u671f\u8868\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u5417\uff1f\u53ea\u8981\u6709\u8da3\uff0c\u8ba9\u6211\u5411\u60a8\u5c55\u793aWikipedia\u7684\u5feb\u7167\uff06\uff0339;\u66ff\u4ee3\u5b9a\u671f\u8868\u7684\u9875\u9762\uff1a\n       \u6211\u6709\u4e00\u4e2a\u751f\u7269\u5b66\u5bb6\u670b\u53cb\uff0c\u52b3\u62c9\u5fb7\u660e\uff0c\u4ed6\u6307\u51fa\u4e86\u5979\u79f0\u4e4b\u4e3a\u751f\u7269\u98de\u8f6e* *\u52b3\u62c9\u5fb7\u660e\uff0c\u6392\u5e8f\u662f\u65b0\u7684\u663e\u5fae\u955c\uff082018\uff09\u3002\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u5728\u201c\u751f\u7269\u98de\u8f6e\u201d\u4e0a\u5bfb\u627e\u201c\u751f\u7269\u98de\u8f6e\u201d\uff0c\u5728\u5408\u6210\u751f\u7269\u5b66\u4e2d\uff0c\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u98de\u8f6e\u4e0a\u4ea7\u751f\u8fd9\u79cd\u523a\u6fc0\u7684\u6587\u7ae0\u3002\u98de\u8f6e\u8fd9\u6837\u7684\u98de\u8f6e\u3002\u968f\u7740\u6211\u4eec\u5728\u751f\u7269\u5b66\u4e2d\u53d8\u5f97\u66f4\u597d\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u751f\u7269\u8fc7\u7a0b - \u5404\u79cd\u4ee4\u4eba\u60ca\u5f02\u7684\u86cb\u767d\u8d28\u548c\u5176\u4ed6\u5206\u5b50\u7eb3\u7c73\u8f7d\u4f53* *\u6cbf\u7740\u5fae\u7ba1\u6cbf\u7740\u5fae\u7ba1\u6563\u6b65\u7684\u52a8\u8109\u7684\u52a8\u753b\u3002\u7531\u7ef4\u57fa\u767e\u79d1\u7528\u6237\u201cJZP706\u201d\uff1a\n       \u5f53\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u673a\u5668\u65f6\uff0c\u5e76\u5f00\u59cb\u4e86\u89e3\u5b83\u7684\u539f\u7406\uff0c\u800c\u53c8\u5c06\u6210\u4e3a\u4eba\u7c7b\u7684\u4e00\u90e8\u5206\uff06\uff0339;\u7528\u4e8e\u5236\u4f5c\u66f4\u591a\u53d1\u73b0\u7684\u5de5\u5177\u5305\u3002\u5b83\uff06\uff0339;\u4e00\u79cd\u81ea\u53d1\u6216\u98de\u8f6e\u4ea7\u751f\u66f4\u591a\u7684\u8fdb\u5c55\u3002\u5728\u8fd9\u91cc\uff06\uff0339;\u5728deming\uff06\uff0339; s\u6587\u7ae0\u4e2d\u5f15\u7528\uff1a\n  \u5982\u679c\u60a8\u572820\u4e16\u7eaa\u7684\u4e0b\u534a\u5e74\u671f\u95f4\u67e5\u770b\u751f\u7269\u5b66\u4e2d\u6700\u91cd\u8981\u7684\u6280\u672f\uff0c\u5b83\u4eec\u90fd\u662f\u7531\u751f\u7269\u5b66\u672c\u8eab\u6240\u53d1\u73b0\u7684\u5de5\u5177\u9a71\u52a8\u7684\u3002\u751f\u7269\u5b66\u5bb6\u4e0d\u4ec5\u4ec5\u662f\u5bfb\u627e\u65b0\u7684\u4e1c\u897f - \u4ed6\u4eec\u6b63\u5728\u4ece\u751f\u7269\u8bd5\u5242\u4e2d\u5236\u4f5c\u65b0\u5de5\u5177\u3002 PCR\uff08\u9664\u4e861600s\u70ed\u529b\u5b66\u7684\u52a0\u70ed\u5668/\u51b7\u5374\u5668\u5916\uff0c\u9a71\u52a8PCR\u7684\u4e00\u5207\u90fd\u662f\u81ea\u8eab\u7684DNA\u6216DNA\u5236\u6210\u7684\u4e1c\u897f\uff09\uff0cDNA\u6d4b\u5e8f\uff08\u901a\u8fc7\u5408\u6210\u6d4b\u5e8f - \u6211\u4eec\u4f7f\u7528\u6444\u50cf\u673a/\u7535\u6c14\u68c0\u6d4b/ CMOS\u82af\u7247\u4f5c\u4e3a\u8f93\u51fa\uff0c\u4f46\u662f\u52ab\u6301\u7ec6\u80de\u4f7fDNA\u86cb\u767d\u8d28\u4ecd\u7136\u5728\u6280\u672f\u7684\u5fc3\u810f\u4e0a\u7559\u4e0b\u7684\u65b9\u5f0f\uff09\uff0c\u514b\u9686\uff08\u6211\u4eec\u7528DNA\u5236\u6210\u7684\u86cb\u767d\u8d28\u5207\u5272DNA\uff0c\u5c06DNA\u7c98\u6210\u7ec6\u83cc\uff0c\u56e0\u6b64\u751f\u7269\u53ef\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u66f4\u591a\u7684\u526f\u672c\uff09\uff0c\u57fa\u56e0\u7f16\u8f91\uff08CRISPR\u663e\u7136\u662f\u7531DNA\u548cRNA\u9644\u7740\u7684RNA\uff09\uff0cELISA\uff08\u9700\u8981\u68c0\u6d4b\u8367\u5149 - \u5149\u5b66\u7684\u80fd\u529b - \u5e76\u52a0\u5de5\u4fe1\u53f7\uff0c\u4f46\u6297\u4f53\u4f4d\u4e8e\u8be5\u539f\u5219\u7684\u6838\u5fc3\uff09\uff0c\u4eb2\u548c\u5c42\u6790\uff08\u6db2\u76f8\u8272\u8c31\u53ef\u4ee5\u4f7f\u7528\u7269\u7406\u539f\u5219\u7a7a\u95f4\u969c\u788d\u6216\u6536\u8d39\uff0c\u4f46\u662f\u90a3\u4e9b\u53ef\u4ee5\u8ffd\u6eaf\u52301800\u5e74\u4ee3 - \u6297\u4f53\u548c\u514b\u9686\u5df2\u7ecf\u5f7b\u5e95\u6539\u53d8\u4e86\u8fd9\u79cd\u6280\u672f\uff09\uff0cFACS\u4f7f\u7528Western\u5370\u8ff9\u7684\u76f8\u540c\u7684\u7535\u8377\u539f\u7406\uff0c\u4f46\u968f\u7740\u6dfb\u52a0\u6297\u4f53\u3002 \n......\u5982\u679c\u4f60\u572820\u4e16\u7eaa\u521d\u95ee\u4e00\u4e2a\u7269\u7406\u5b66\u5bb6\uff0c\u6211\u4eec\u5982\u4f55\u5f04\u6e05\u695aDNA\u7684\u590d\u6742\uff0c\u7ea0\u7ed3\u7684\u7ed3\u6784\uff0c\u4ed6\u53ef\u80fd\u4f1a\u8bf4\u7528\u663e\u5fae\u955c\u770b\u5b83\u3002\u6d4b\u5e8f\u5df2\u6210\u4e3a\u65b0\u663e\u5fae\u955c\u3002\u6211\u4eec\u66f4\u5bb9\u6613\u4ea4\u53c9\u94fe\u63a5\uff0c\u7247\u6bb5\u548c\u5e8f\u5217\u4e00\u4e2a\u5b8c\u6574\u7684\u57fa\u56e0\u7ec4\uff0c\u4ee5\u5f04\u6e05\u695a\u5b83\u7684\u4e09\u7ef4\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u901a\u8fc7\u67e5\u770b\u5b83\u6765\u5f04\u6e05\u695a\u3002\u6211\u4eec\u66fe\u7ecf\u4f9d\u9760\u5149\u5b50\u548c\u7535\u5b50\u53cd\u5f39\u751f\u7269\u6837\u672c\uff0c\u544a\u8bc9\u6211\u4eec\u90a3\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u73b0\u5728\u6211\u4eec\u6b63\u5728\u76f4\u63a5\u8be2\u95ee\u751f\u7269\u5b66 - \u6211\u4eec\u6062\u590d\u7684\u4fe1\u606f\u5f80\u5f80\u901a\u8fc7\u4e00\u79cd\u81ea\u7136\u7684\u751f\u7269\u8bd5\u5242\u5982DNA\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u7531DNA\u672c\u8eab\u5236\u6210\u7684\u7535\u52a8\u673a\u8fdb\u884c\u5e8f\u5217\uff01\n  \u5728Covid-19\u7684SARS-COV-2\u75ab\u82d7\u7684\u5f00\u53d1\u4e2d\u53ef\u4ee5\u770b\u5230\u8bb8\u591a\u8be5\u751f\u7269\u98de\u8f6e\u7684\u8bb8\u591a\u4f8b\u5b50\u3002\u5728\u8fd9\u91cc\u5386\u53f2\u4e0a\uff0c\u5386\u53f2\u4e0a\uff0c\u901a\u5e38\u901a\u8fc7\u9012\u9001\u4ed6\u4eec\u4fdd\u62a4\u7684\u75c5\u6bd2\u7684\u706d\u6d3b\u7247\u6bb5\u6765\u5f00\u53d1\u75ab\u82d7\u3002\u4eba\u7c7b\u514d\u75ab\u7cfb\u7edf\u5b66\u4f1a\u8bc6\u522b\u548c\u7834\u574f\u8fd9\u4e9b\u788e\u7247\uff0c\u8fd9\u63d0\u4f9b\u4e86\u5bf9\u6f5c\u5728\u75be\u75c5\u7684\u4fdd\u62a4\u3002\u4f46SAR-COV-2\u7684\u4fe1\u4f7fRNA\uff08mRNA\uff09\u75ab\u82d7\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u53ea\u9012\u9001\u706d\u6d3b\u75c5\u6bd2\uff0c\u4ed6\u4eec\u53ea\u662f\u5728\u4f53\u5185\u9012\u9001mRNA\uff0c\u7136\u540e\u4f9d\u8d56\u4e8e\u4eba\u4f53\u7ec6\u80de\u4f7f\u7528\u4f53\u5185mRNA\u5236\u9020\u75be\u75c5\u7684\u5c16\u5cf0\u86cb\u767d\u7279\u5f81\u3002\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5b83\u4eec\uff06\uff0339;\u91cd\u65b0\u4f7f\u7528\u4eba\u4f53\u5185\u7684\u673a\u5668\u6765\u6d88\u9664\u75ab\u82d7\u5236\u9020\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u590d\u6742\u6b65\u9aa4\u3002\u8fd9\u6781\u5927\u5730\u7b80\u5316\u4e86\u75ab\u82d7\u7684\u8bbe\u8ba1\u548c\u5236\u9020\u3002\n  \u901a\u8fc7\u79d1\u5b66\u6709\u7c7b\u4f3c\u7684Flywheels\uff0c\u4ed6\u4eec\u63a8\u52a8\u4e86\u5f88\u591a\u53d1\u73b0\u3002\u63a2\u7d22\u5468\u671f\u8868\u7684\u4e00\u4e2a\u7f8e\u5fb7\u662f\u5b83\uff06\uff0339;\u662f\u8fd9\u79cd\u98de\u8f6e\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\u5f53\u60a8\u63a2\u7d22\u60a8\u89e3\u9501\u65b0\u7269\u8d28\u548c\u65b0\u7684\u7406\u89e3\uff1a\u53d1\u73b0\u94c0\u7684\u53d1\u73b0\u6709\u52a9\u4e8e\u5bfc\u81f4\u949a;\u8fd9\u6709\u52a9\u4e8e\u5bfc\u81f4\u80c6\u6c41;\u8fd9\u6709\u52a9\u4e8e\u5bfc\u81f4\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde;\u8fd9\u5728\u53d1\u73b0Oganesson\u7684\u53d1\u73b0\u4e2d\u53d1\u6325\u4e86\u4f5c\u7528\u3002\u5b83\uff06\uff0339;\u63a2\u7d22\u548c\u53d1\u73b0\u7684\u98de\u8f6e\uff1a\n       \u5b83\u4e5f\u8bb8\u6709\u70b9\u592a\u8bd9\u8c10\uff0c\u4f46\u6211\u8ba4\u4e3a\u90a3\u91cc\u7684\u4eba\u4eec\u81f3\u5c11\u662f\u4e00\u9897\u771f\u76f8\uff0c\u5728\u8bf4\u51fa\u8fd9\u4e9b\u79d1\u5b66\u7684\u5927\u90e8\u5206\u662f\u5173\u4e8e\u53d1\u73b0\u8fd9\u4e9b\u98de\u8f6e\u7684\u771f\u7406\uff0c\u8fd9\u662f\u4e00\u79cd\u98de\u8f6e\u98de\u7fd4\u3002\n    \u8ba9\uff06\uff0339;\u8fd4\u56de\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u7684\u5730\u56fe\uff0c\u5468\u671f\u6027\u8868\u3002\u8be2\u95ee\u7684\u53e6\u4e00\u4e2a\u597d\u95ee\u9898\u662f\uff1a\u201c\u6211\u4eec\u53ef\u4ee5\u5ef6\u957f\u5730\u56fe\u5417\uff1f\u201d\u751a\u81f3\u8fdb\u4e00\u6b65\u8d70\u53bb\uff1a\u201c\u5373\u4f7f\u6211\u4eec\u6269\u5c55\u5b83\uff0c\u4e5f\u6709\u6ca1\u6709\u5728\u5730\u56fe\u4e0a\u7684\u4e1c\u897f\uff1f\u201d\n  \u6211\u5c06\u4e3b\u8981\u5173\u6ce8\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u5f53\u7136\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u3002\u6709\u5f88\u591a\u4eba\u81f4\u529b\u4e8e\u5236\u4f5c\u65b0\u7684\u5143\u7d20\uff0c\u4ee5\u53ca\u8bb8\u591a\u4ee4\u4eba\u5174\u594b\u7684\u95ee\u9898\u3002\u5468\u671f\u8868\u7684\u6700\u7ec8\u9650\u5236\u662f\u4ec0\u4e48\uff1f\u539f\u5b50\u5e8f\u6570\u662f\u5426\u6709\u4e00\u4e9b\u4e0a\u9650\uff1f\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u6709\u5206\u6b67\uff1a\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u8bf4\u6cd5\uff0c\u6709\u4e9b\u5efa\u8bae\u5728\u5143\u7d20\u7f16\u53f7128,137,146,155\u548c173\u5904\u7ed3\u675f\u3002\n  \u5b83\u53ef\u80fd\u542c\u8d77\u6765\u5f88\u5947\u602a\uff0c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u5206\u6b67\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\uff06\uff0339; s\u90e8\u5206\u53cd\u6620\u4e86\u6211\u4eec\u7531\u539f\u5b50\u7684\u610f\u601d\u7684\u4e00\u4e9b\u7075\u6d3b\u6027\u3002\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5b83\u91cd\u8981\u7684\u662f\uff0c\u539f\u5b50\u662f\u4e00\u4e2a\u5408\u7406\u7a33\u5b9a\u7684\u675f\u7f1a\u7cfb\u7edf\u3002\u4f46\u7a33\u5b9a\u6027\u662f\u4e00\u4e2a\u5b66\u4f4d\u7684\u95ee\u9898\uff1a\u751a\u81f3\u94c0\u7b49\u5143\u7d20\u751a\u81f3\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u8150\u70c2\u8fdb\u5165\u5176\u4ed6\u7269\u8d28\uff0c\u5982\u948d\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u8d28\u5b50\u8870\u53d8\u53d1\u751f\uff0c\u90a3\u4e48\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u6240\u6709\u539f\u5b50\u90fd\u4e0d\u7a33\u5b9a\u3002 \n\u56e0\u6b64\uff0c\u5173\u4e8e\u53ef\u80fd\u6570\u91cf\u7684\u5143\u7d20\u7684\u5206\u6b67\u90e8\u5206\u53d6\u51b3\u4e8e\u60a8\u9700\u8981\u4e00\u4e2a\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u4ee5\u83b7\u5f97\u7b26\u5408\u539f\u5b50\u7684\u7a33\u5b9a\u6027\u3002\u5982\u679c\u5728\u8fdc\u671f\u5728\u8fdc\u671f\uff0c\u6211\u4f1a\u611f\u5230\u60ca\u8bb6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fdc\u8fdc\u8d85\u8fc7173\u4e2a\u8d28\u5b50\u5728\u4e00\u8d77\u8fdb\u5165\u6838\u5c3a\u5bf8\u7684\u533a\u57df;\u6211\u53ef\u4ee5\u60f3\u5230\u7684\u552f\u4e00\u539f\u5219\u9650\u5236\u662f\u8d39\u7c73\u538b\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u4f2a\u539f\u5b50\u8d62\u5f97\u4e86\uff06\uff0339; t\u901a\u5e38\u662f\u975e\u5e38\u7a33\u5b9a\u7684\uff08\u5c3d\u7ba1\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u7a33\u5b9a\u7684\u7a33\u5b9a\u5b83\u4eec\u7684\u65b9\u5f0f\uff09\uff01\n  \u5173\u4e8e\u6211\u4eec\u5730\u56fe\uff08\u5468\u671f\u6027\u8868\uff09\u7684\u4e8b\u60c5\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u6446\u8131\u5468\u671f\u6027\u8868\u5417\uff1f\n  \u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u3002\u5b9e\u9645\u4e0a\uff0c\u53d6\u51b3\u4e8e\u60a8\u5728\u5b87\u5b99\u4e2d\u7684\u4e0b\u843d\uff0c\u539f\u5b50\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u76f8\u5bf9\u7f55\u89c1\u7684\uff08\u6216\u4e0d\u7a33\u5b9a\u7684\uff09\u7269\u8d28\u3002\n  \u4f8b\u5982\uff0c\u9633\u5149\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u7531\u6c22\u548c\u6c26\u7ec4\u6210\uff0c\u5177\u6709\u75d5\u91cf\u7684\u5176\u4ed6\u5143\u7d20\u3002\u9760\u8fd1\u592a\u9633\u8868\u9762\u7684\u771f\u5b9e\uff0c\u8fd9\u662f\u5728\u7ea66,000\u4e2a\u5f00\u5c14\u6587\u7684\u6e29\u5ea6\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u5411\u5185\u5230\u6765\uff0c\u592a\u9633\u8d8a\u6765\u8d8a\u70ed\uff0c\u6700\u7ec8\u4e0a\u5347\u5230\u6570\u767e\u4e07\u7684\u5f00\u5c14\u6587\u3002\u589e\u52a0\u6e29\u5ea6\u6495\u88c2\u6c22\u5206\u5b50\uff0c\u751a\u81f3\u6c22\u539f\u5b50\u76f8\u9694 - \u5b83\u4eec\u7535\u79bb\uff0c\u8fd9\u610f\u5473\u7740\u5355\u7535\u5b50\u4e0e\u5355\u4e2a\u8d28\u5b50\u5206\u5f00\u3002\u6240\u4ee5\u5728\u9633\u5149\u7684\u6838\u5fc3\u5185\u90e8\uff0c\u5b83\u4e0d\u518d\u662f\u771f\u6b63\u7684\u6c22\u539f\u5b50\uff0c\u800c\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8d28\u5b50\u548c\u7535\u5b50\u6d77\u6d0b\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6ca1\u6709\u5f7c\u6b64\uff08\u52a0\u4e0a\u5927\u91cf\u7535\u79bb\u6c26\u6c14\uff09\u3002\u5728\u6838\u5fc3\u4e2d\uff0c\u5b83\u4e0d\u4f1a\u8bf4\u592a\u9633\u7531\u539f\u5b50\u5236\u6210\u3002\n  \u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u53d8\u5f97\u66f4\u52a0\u5f02\u843d\u3002\u5728\u4e00\u4e2a\u4e2d\u5b50\u4e4b\u661f\u5185\uff0c\u4f60\u8d62\u5f97\u4e86\u5927\u591a\u6570\u60c5\u51b5\uff0c\u4f60\u627e\u5230\u4e86\u4efb\u4f55\u539f\u5b50\uff08\u5c3d\u7ba1\u8868\u9762\u9644\u8fd1\u6709\u4e00\u4e9b\u7535\u79bb\u539f\u5b50\uff09\u3002\u4e2d\u5b50\u661f\u7531\u8d85\u8ff9\u8c61\u7684\u584c\u9677\u5f62\u6210 - \u5982\u6b64\u5de8\u5927\u5730\uff0c\u5f15\u529b\u529b\u5c06\u7535\u5b50\u6324\u5165\u6838\u4e2d\uff0c\u5b83\u4eec\u4e0e\u8d28\u5b50\u5408\u5e76\u5f62\u6210\u4e2d\u5b50\u3002\u800c\u4e14\u4f60\u6700\u7ec8\u6709\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4e2d\u5b50\u6d77\u548c\u5176\u4ed6\uff0c\u6f5c\u5728\u7684\u5f02\u56fd\u60c5\u8c03\uff0c\u9897\u7c92* *\u4e2d\u5b50\u6052\u661f\u53ef\u80fd\u4e0d\u4ec5\u4ec5\u542b\u6709\u4e00\u4e2a\u4e2d\u5b50\u6d77\uff0c\u800c\u4e14\u4e5f\u662f\u5176\u4ed6\u964c\u751f\u4eba\u7684\u7269\u8d28\u72b6\u6001\u3002\u8fd9\u91cc\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u523a\u6fc0\u7684\u8ba8\u8bba\u3002 - \u4e00\u5347\u4e2d\u5b50\u661f\u7684\u5927\u91cf\u5927\u7ea6\u8fbe\u5230\u6570\u5341\u4ebf\u5428\u3002\u5982\u679c\u4f60\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f4f\u5728\u4e2d\u5b50\u660e\u661f\u5185\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5728\u539f\u5b50\u65b9\u9762\u601d\u8003\u3002\u76f8\u53cd\uff0c\u4f60\u9700\u8981\u7528\u4e2d\u5b50\u5236\u6210\u7684\u56fe\u6848\u3002\u6211\u60f3\u77e5\u9053\u5b83\u662f\u5426\u53ef\u4ee5\u4ee5\u7a33\u5b9a\u7684\u65b9\u5f0f\u505a\u5230\u8fd9\u4e00\u70b9* *\u5929\u6587\u5b66\u5bb6\u5f17\u5170\u514b\u5fb7\u96f7\u514b\u663e\u7136\u63d0\u51fa\u4e861973\u5e74\u8bbf\u8c08\u7684\u6838\u201c\u5316\u5b66\u201d\uff08\u6211\u6ca1\u6709\u8bfb\uff0c\u5e76\u4e14\u6ca1\u6709\u8bfb\u53d6\uff0c\u5e76\u6ca1\u6709\u627e\u5230\u5728\u7ebf\uff09\u3002\u7f57\u4f2f\u7279\u524d\u950b\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u540e\u6765\u88ab\u7f57\u4f2f\u7279\u8fdb\u5165\u79d1\u5e7b\u5c0f\u8bf4\u201c\u9f99\uff06\uff0339; s\u9e21\u86cb\u201d\u3002\u8f83\u5c11\u7684\u6295\u673a\u6027\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5e26\u8d70\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7701\u7ea7\u89c2\u70b9\uff0c\u4e00\u79cd\u539f\u5b50\u7684\u76f2\u6587\u4e3b\u4e49\uff0c\u5c06\u539f\u5b50\u89c6\u4e3a\u5178\u578b\u7684\u539f\u5b50\uff0c\u201c\u7269\u8d28\u7684\u57fa\u672c\u6210\u5206\u201d\u5728\u6210\u957f\u65f6\u88ab\u6559\u5bfc\u3002\n    \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u4e13\u6ce8\u4e8e\u5927\u81ea\u7136\u4e2d\u7684\u7269\u8d28\u7c7b\u578b\uff0c\u5982\u4e2d\u5b50\u6052\u661f\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u8f6c\u8fc7\u8eab\u6765\uff0c\u5e76\u63d0\u51fa\u6709\u5173\u8bbe\u8ba1\u7684\u95ee\u9898\uff1a\u6211\u4eec\u539f\u5219\u4e0a\u53ef\u4ee5\u7a33\u5b9a\u54ea\u4e9b\u7269\u8d28\u914d\u7f6e\uff1f\u6362\u53e5\u8bdd\u8bf4\uff0c\u800c\u4e0d\u662f\u5bfb\u627e\u5929\u7136\u5b58\u5728\u7684\u7269\u8d28\uff0c\u8ba9\uff06\uff0339; s\u95ee\u8fd9\u4e2a\u95ee\u9898\uff1a\u7269\u7406\u5b66\u6cd5\u5f8b\u4f7f\u6211\u4eec\u80fd\u591f\u8bbe\u8ba1\u4ec0\u4e48\u7c7b\u578b\u7684\u7269\u8d28\uff1f\u5728\u8fd9\u4e2a\u8bbe\u8ba1\u5e08\uff06\uff0339;\uff06\uff0339;\u6211\u4eec\u8be2\u95ee\u5982\u4f55\u5de5\u7a0b\u5e08\u73b0\u5b9e\u5982\u4f55\u9002\u5408\u60a8\u60f3\u8981\u7684\u4e1c\u897f\u3002\u5e76\u4e14\u91cd\u70b9\u662f\u201c\u5de5\u7a0b\u5e08\u201d\u7684\u91cd\u70b9\u662f\u201c\u4f60\u60f3\u8981\u7684\u201d\u3002\u56e0\u4e3a\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5f04\u6e05\u695a\u6709\u53ef\u80fd\u9700\u8981\u5de8\u5927\u7684\u60f3\u8c61\u529b\u3002\n   \u8fd9\u4e2a\u8bbe\u8ba1\u7684\u89c2\u70b9\u4e0e\u7269\u8d28\u7684\u81ea\u7136\u4e3b\u4e49\u89c2\u70b9\u975e\u5e38\u4e0d\u540c\uff0c\u5728\u90a3\u91cc\u4f60\u4e0d\u65ad\u63a2\u7d22\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u4ee5\u76f8\u5bf9\u8f83\u5c0f\u7684\u5e72\u9884\u63aa\u65bd\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u7684\u89c2\u70b9\u5bfc\u81f4\u975e\u5e38\u6df1\u523b\u7684\u95ee\u9898\uff1a \n\u539f\u5219\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7a33\u5b9a\u54ea\u4e9b\u7269\u8d28\u6a21\u5f0f\uff1f\u4efb\u4f55\u624b\u6bb5\u90fd\u4e0d\u80fd\u7a33\u5b9a\u54ea\u4e9b\u6a21\u5f0f\uff1f\n  \u539f\u5219\u4e0a\u662f\u53ef\u80fd\u7684\u4ec0\u4e48\u6837\u7684\u7269\u8d28\u548c\u7530\u5730\uff1f\u6211\u4eec\u600e\u6837\u624d\u80fd\u521b\u5efa\u5b83\u4eec\uff1f\u4ec0\u4e48\u6837\u7684\u6a21\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684\uff1f\n  \u6211\u4eec\u662f\u5426\u53ef\u4ee5\u53d1\u660e\u91cd\u8981\u7684\u65b0\u8bbe\u8ba1\u62bd\u8c61\uff1f\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u539f\u5b50\uff08\u6216\u592a\u9633\u5185\u90e8\u7684\u7b49\u79bb\u5b50\u4f53\u6216\u6211\u4eec\u7ec6\u80de\u5185\u7684\u6838\u7cd6\u4f53\uff09\u7684\u6982\u5ff5\u662f\u81ea\u7136\u63d0\u4f9b\u7684\u8bbe\u8ba1\u62bd\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u627e\u5230\u65b0\u7684\u5417\uff1f\n  \u5373\u4f7f\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5982\u201c\u6211\u4eec\u53ef\u4ee5\u521b\u9020\u7684\u9759\u6001\u7535\u78c1\u573a\u7684\u6a21\u5f0f\uff1f\u201d\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u95ee\u9898\u3002\u7136\u540e\uff1a\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u901a\u7528\u8bbe\u5907\u6765\u521b\u5efa\u8be5\u5b57\u6bb5\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u5411\u5176\u4ed6\u7c7b\u578b\u7684\u7269\u54c1\u548c\u9886\u57df\u63d0\u51fa\u7c7b\u4f3c\u7684\u95ee\u9898\u3002\n  \u8bb8\u591a\u975e\u8bbe\u8ba1\u8005\u8ba4\u4e3a\u8bbe\u8ba1\u76f8\u5bf9\u4e0d\u91cd\u8981\u3002\u5728Twitter\u4e0a\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u548c\u7ecf\u7406\u5728\u8f6f\u4ef6\u9886\u57df\u4e2d\u7684\u8bbe\u8ba1\u8fdb\u884c\u4e86\u4ee5\u4e0b\u8bc4\u8bba\uff1a\n  \u8001\u5b9e\u8bf4\uff0c\u6211\u5f88\u96be\u4ee5\u4e25\u91cd\u7684\u4e00\u6574\u4e2a\u5de5\u4f5c\u6765\u8fce\u63a5\u201c\u8bbe\u8ba1\u5e08\u201d\u7684\u60f3\u6cd5\u3002\u5c31\u50cf\u4f60\u653e\u51fa\u6309\u94ae\u548c\u6587\u5b57\uff1f\u90a3\uff06\uff0339;\u5b83\u5417\uff1f\n   \u73b0\u5728\uff0c\u8fd9\u610f\u5473\u7740\uff08\u89c6\u89c9\uff09\u8bbe\u8ba1\u662f\u201c\u94fa\u8bbe\u51fa\u6765\u7684\u6309\u94ae\u548c\u6587\u672c\u201d\uff1f\u4f3c\u4e4e\u6709\u70b9\u50cf\u58f0\u79f0\u838e\u58eb\u6bd4\u4e9a\u53ea\u662f\u4ee5\u7279\u522b\u826f\u597d\u9009\u62e9\u7684\u65b9\u5f0f\u94fa\u8bbe\u5b57\u6bcd\u8868\u7684\u5b57\u6bcd\u3002\u6709\u4e00\u4e9b\u610f\u4e49\u7684\u662f\u90a3\u4e2a\uff06\uff0339;\u771f\u7684\u3002\u4f46\u662f\uff0c\u4e0e\u838e\u58eb\u6bd4\u4e9a\u548c\u4f1f\u5927\u7684\u5199\u4f5c\u4e00\u6837\u8bbe\u8ba1\uff0c\u662f\u53d1\u73b0\u5f3a\u5927\u7684\u9ad8\u9636\u7406\u5ff5\u3002\u90a3\u4e9b\u60f3\u6cd5 \n...... ", "note_en": "Status:  Rough working notes \u2013 me thinking aloud. Speculative, and likely contains errors, misconceptions, and omissions; thoughtful, informed comments are welcome. Intended for a general scientifically curious audience, not requiring much detailed specialist background.\n  It is sometimes said physics is nearing its end \u2013 closing in on a \u201ctheory of everything\u201d \u2013 because we understand so much about the basic rules governing the particles and forces in our universe. This is like asserting that computer science ended in 1936 with the Turing machine, computing&#39;s \u201ctheory of everything\u201d. Of course, that&#39;s not what happened. Rather, the invention of the Turing machine opened a new creative frontier, enabling an extraordinary profusion of new ideas.\n  Science is going through a similarly exciting transition today. Until recently humanity worked with matter much like we did computing prior to Turing, using a patchwork of bespoke tools and ideas. But now we understand the fundamentals of how matter works: we have a fantastic theory describing the elementary particles and forces, and we&#39;re getting increasingly good at manipulating matter. And so we&#39;re beginning to ask: what can we build,  in principle? Not just in a practical sense, with the tools that happen to be at hand, but in a fundamental sense: what is allowed by the laws of physics?\n  Of course, this implies a whole world of questions: What qualities are possible in matter? Can we do for matter what Turing and company did for computation? Can we invent new high-level abstractions and design principles for matter, similar to what people like John McCarthy and Alan Kay did for computing? What design space is opened up when we control matter as well as we control pixels on a computer screen? What beautiful new design ideas are possible?\n  Most of the matter in our everyday experience is constructed from just three particles: protons, electrons, and neutrons. These can be used to build an astonishing array of different things: diamonds; human beings; galaxies; black holes; iPhones. With sufficiently good tweezers and a lot of patience you could reassemble a human being into a bicycle of comparable mass; and vice versa.\n  So, what else can we build from protons, electrons, and neutrons* * Martin Rees has pointed out that we humans tend to engage in particle chauvinism, often assuming that what we think of as \u201cordinary matter\u201d is all there is to matter. Indeed, I&#39;ve engaged in just such a chauvinism in asserting above that \u201cwe understand the fundamentals of how matter works\u201d. However, based on what we currently suspect about dark matter, so-called \u201cordinary matter\u201d may actually be rather unusual, the exception rather than the rule. Nonetheless, in the absence of a good understanding of dark matter I shall continue to engage in particle chauvinism, and restrict myself in this essay to ordinary matter. Indeed, I shall go further and restrict the discussion (mostly) to protons, electrons, and neutrons. ?\n  It seems likely we can build things that would astonish us, things going radically beyond anything we can even conceive of today, much less build.\n  Consider that ten million years ago conscious minds were absent from the earth, except in quite primitive forms. Might there be forms of matter possible which are as different from anything familiar to us today as consciousness is from a rock* * Some people don&#39;t believe consciousness is a property of matter. There are limited senses in which that is reasonable: certainly, matter is a substrate, and aspects of consciousness may be independent of the details of that substrate, in a matter analogous to the way an algorithm has an existence independent of the computer it runs on. Nonetheless, I don&#39;t think there is much serious reason to doubt that consciousness is a property that emerges out of ordinary matter.?\n    One way to explore the \u201cwhat can we build?\u201d question is to look at different  maps of matter. Probably the best known such map is the periodic table, showing all the different types of atoms which make up most of the matter in the world around us. But there&#39;s many other maps of matter. There&#39;s phylogenetic trees, which show the relationship between different types of life. There&#39;s maps of the different types of stars, of the different phases of matter, of all the proteins we&#39;ve found. And many more.\n  In these notes we&#39;ll go on safari through several such maps of matter. We won&#39;t go too deep into any individual map \u2013 everything I discuss could be (often has been) the subject of PhD theses, or even an entire field. Instead, we&#39;re going to look rapidly at several different ways we explore matter. The purpose is to discern some general principles that can help us explore in generative ways.\n  When I began writing these notes I had a whimsical question in mind: is there a single, unified map we can use to understand all of matter? I hoped the attempt to make such a unified map would give me some insight into the question \u201cwhat can we build, in principle?\u201d And so, as I wrote the notes I toyed with multiple ways of making a unified map. Eventually, I realized matter is too rich and variegated for a really good unified map to be possible. What&#39;s more, to do even a passing job these notes would need to be a hundred times longer! Nonetheless, I found the attempt stimulating. And so at the end of the notes I show a single diagram which encapsulates many of the ideas for exploration developed in these notes. It&#39;s grossly incomplete, but hopefully interesting and generative.\n    The physicist John Wheeler once stated a useful principle to guide research: \u201cIn any field, find the strangest thing and explore it\u201d. One great thing about maps is that they suggest strange things. This is true even when the map itself is familiar, like the periodic table. We can ask ourselves: where are the strangest \u201cplaces\u201d in the periodic table? And then challenge ourselves to explore those places.\n  One candidate for the strangest place in the periodic table is the most recently discovered chemical element, oganesson. It&#39;s the heaviest known element, with an atomic number of 118. It&#39;s highlighted below with a red circle in the bottom right* * Image adapted from images due to users \u201cDouble sharp\u201d and \u201cOffnfopt\u201d on  Wikipedia.:\n       Oganesson was discovered in 2002 by a team of scientists headed by Yuri Oganessian, after being predicted in 1895 by Hans Peter J\u00f8rgen Julius Thomsen. It was made by using calcium ions to bombard a target of californium atoms, at very high speed. Only a handful of oganesson atoms have ever been observed \u2013 around a half dozen, with several of those observations regarded as unconfirmed.\n  We don&#39;t know much for sure about oganesson \u2013 the handful of atoms observed decayed too quickly to get much idea of what oganesson does. Despite this, intensive theoretical studies have been done, and some surprising predictions made. Oganesson is in the final column of the periodic table, and these are of course the \u201cnoble gases\u201d, highly non-reactive gases like helium and argon.\n  At least, that&#39;s the story we learn in high school chemistry. In fact, oganesson confounds these expectations. Theoretical calculations suggest oganesson is likely to be a solid semiconductor at standard temperature and pressure, not a gas. Furthermore, it may be significantly reactive, unlike the other noble gases* * Clinton S. Nash,  Atomic and Molecular Properties of Elements 112, 114, and 118 (2005). Note that the other noble gases  are at least somewhat reactive (disodium helide, anyone?) \u2013  Wikipedia&#39;s discussion is a good place to start \u2013 but oganesson is predicted to be significantly moreso..\n  There is a standard argument for why noble gases are non-reactive gases \u2013 the gist is to understand the electron orbital shell structure, the number of electrons in each, and why full shells are particularly stable and lead to non-reactive elements. What you learn from oganesson is that some of the principles underlying that argument can&#39;t be quite right. I must admit, I haven&#39;t worked through the details of how the standard argument breaks down (beyond quickly skimming the above paper); nonetheless, it&#39;s extremely useful to have a little flag in my head saying that the standard argument about electron orbitals and noble gases actually breaks down for some elements. That argument is often presented as being based on universal principles, but those principles are not, in fact, universal.\n  And so one benefit of exploring oganesson is that it improves other parts of your understanding of matter, even if only by informing you of limits to that understanding. And it pokes at you: the periodic table has the shape it does  because of those underlying principles. If those principles break down, should the shape of the periodic table be changed? And that in turn suggests a different question, one about human psychology and understanding rather than the principles of nature: what are the best alternative ways of visualizing the elements? Are there better ways than the standard periodic table? Just for fun, let me show you a snapshot from  Wikipedia&#39;s page of alternative periodic tables:\n       I have a biologist friend, Laura Deming, who has pointed out what she calls  the biological flywheel* * Laura Deming,  Sequencing is the new microscope (2018). Incidentally, searching on \u201cbiology flywheel\u201d also yields this  stimulating essay on a different kind of flywheel, in synthetic biology.. The flywheel works like this. As we get better at biology, we discover more and more biological processes \u2013 all sorts of amazing proteins and other molecular nanomachines* * Animation of a kinesin protein walking along a microtubule. By Wikipedia user \u201cJzp706\u201d :\n       When we discover such a machine, and start to understand the principles it operates by, that in turn becomes part of humanity&#39;s toolkit for making more discoveries. It&#39;s a kind of bootstrap or flywheel generating more progress. Here&#39;s some examples, quoted in  Deming&#39;s essay:\n  If you look at the most important techniques in biology, in the second half of the 1900s, they\u2019re all driven by tools discovered in biology itself. Biologists aren\u2019t just finding new things - they\u2019re making their new tools from biological reagents. PCR (everything that drives PCR, apart from the heater/cooler which is 1600s thermodynamics, is either itself DNA or something made by DNA), DNA sequencing (sequencing by synthesis - we use cameras/electrical detection/CMOS chips as the output, but the hijacking the way the cell makes DNA proteins remains at the heart of the technique), cloning (we cut up DNA with proteins made from DNA, stick the DNA into bacteria so living organisms can make more copies of it for us), gene editing (CRISPR is obviously made from DNA and with RNA attached), ELISA (need the ability to detect fluorescence - optics - and process the signal, but antibodies lie at the heart of this principle), affinity chromatography (liquid chromatography arguably uses physical principles like steric hindrance, or charge, but those can be traced back to the 1800s - antibodies and cloning have revolutionized this technique), FACS uses the same charge principles that western blots do, but with the addition of antibodies.\n  \u2026 If you\u2019d asked a physicist in the early 1900s how\twe\u2019d figure out the complicated, tangled structure of DNA,\the\u2019d probably say to look at it with a microscope. Sequencing\thas become the new microscope. It\u2019s easier for us to\tcross-link, fragment and sequence a full genome to figure out\tits 3-dimensional structure than it is for us to figure that\tout by looking at it head-on. We used to rely on photons and\telectrons bouncing off of biological sample to tell us what\twas going on down there. Now we\u2019re asking biology directly -\tand often the information we get back comes through a natural\tbiological reagent like DNA. Which we then sequence using\tmotors made from the DNA itself!\n  Many recent examples of this biological flywheel may be seen in the development of the SARS-CoV-2 vaccines for Covid-19. Here&#39;s one: historically, vaccines have typically been developed by delivering inactivated fragments of the virus they protect against. The human immune system learns to recognize and destroy those fragments, and this provides protection against the underlying disease. But the messenger RNA (mRNA) vaccines for SAR-CoV-2 use a different approach. Instead of delivering inactivated virus, they simply deliver mRNA inside the body, and then rely on human cells to use the mRNA  in vivo to manufacture the spike protein characteristic of the disease. In some sense, they&#39;re using the machinery inside the human body to eliminate one complex step in the vaccine manufacturing process. This greatly simplifies the design and manufacture of the vaccine.\n  There are similar flywheels all through science, and they drive a lot of discovery. One virtue of exploring the periodic table is that it&#39;s another example of such a flywheel. As you explore you unlock new substances and new understanding: the discovery of uranium helped lead to plutonium; that helped lead to curium; that helped lead to californium; which in turn played a role in the discovery of oganesson. It&#39;s a flywheel of exploration and discovery:\n       It&#39;s perhaps a little too tongue-in-cheek, but I think there&#39;s at least a grain of truth in saying much of science has really been about discovering these flywheels, a kind of flywheel flyweel.\n    Let&#39;s come back to the map we were exploring, the periodic table. Another good question to ask is: \u201ccan we extend the map?\u201d And going even further: \u201cis there stuff that could never be on the map, even if we extend it?\u201d\n  I&#39;m going to mostly focus on the second question. The first question is, of course, a great question. There&#39;s many people working on making new elements, and lots of exciting questions. What are the ultimate limits of the periodic table? Is there some upper limit on the atomic number? There&#39;s disagreement on this question: according to Wikipedia, there are proposals that it ends at element number 128, 137, 146, 155, and 173.\n  It perhaps sounds strange that we have such a disagreement. In fact, it&#39;s in part a reflection of some flexibility in what we mean by atom. In some sense it&#39;s important that an atom be a reasonably stable, bound system. But stability is a matter of degree: even relatively common elements like uranium are unstable, decaying into other substances, like thorium. Indeed, if  proton decay occurs, then in some sense  all atoms are unstable.\n  And so the disagreement about the possible number of elements depends in part on how stable you require a system to be to qualify as an atom. I wouldn&#39;t be surprised if in the far future we can cram far more than 173 protons together into a nucleus-sized region; the only in-principle limit I can think of is fermi pressure. But such pseudo-atoms won&#39;t ordinarily be very stable (though perhaps we can find clever ways of stabilizing them)!\n  What about things which aren&#39;t on our map (the periodic table) at all? Can we get entirely off the periodic table?\n  Of course, we can. Indeed, depending on whereabouts you are in the universe, atoms may actually be a relatively uncommon (or unstable) form of matter.\n  For example, the sun is often described as being made up of hydrogen and helium, with trace amounts of other elements. That&#39;s true near the surface of the sun, which is at a temperature of about 6,000 Kelvin. But as you go inward the sun gets far hotter, eventually rising to millions Kelvin. That increasing temperature rips the hydrogen molecules and even the hydrogen atoms apart \u2013 they ionize, meaning that the single electron is ripped apart from the single proton. And so inside the core of the sun it&#39;s no longer really hydrogen atoms, but rather a giant sea of protons and electrons, largely unbound to one another (together with a lot of ionized helium, as well). In the core it doesn&#39;t make sense to say the sun is made of atoms.\n  Of course, we can get far more exotic. Inside a neutron star for the most part you won&#39;t find any atoms (though there are some ionized atoms near the surface). A neutron star is formed from the collapse of a supermassive star \u2013 so massive that the gravitational forces crush the electrons into the nucleus, where they merge with the protons to form neutrons. And you end up with an incredibly dense sea of neutrons and other, potentially more exotic, particles* * Neutron stars may not just contain a sea of neutrons, but also other even stranger states of matter. A stimulating discussion may be found  here. \u2013 a liter of neutron star has a mass of on the order of a hundred billion tonnes. If you somehow lived inside a neutron star you wouldn&#39;t think in terms of atoms at all. Rather, you&#39;d need patterns made out of neutrons. I wonder if it&#39;s possible to do that in a stable way* * The astronomer Frank Drake apparently proposed a nuclear \u201cchemistry\u201d in a 1973 interview (which I haven&#39;t read, and wasn&#39;t able to find online). The idea was later fleshed out into the science fiction novel \u201cDragon&#39;s Egg\u201d by Robert Forward.? Less speculatively, we can take away that it&#39;s actually a provincial point of view, a kind of atomic chauvinism, to regard atoms as typical, \u201cthe fundamental constituents of matter\u201d as so many of us are taught when growing up.\n    So far, we&#39;ve been concentrating mostly on types of matter found in nature, like neutron stars. But we can turn this around, and ask questions about design: what kinds of matter configuration can we stabilize in principle? In other words, instead of looking for naturally occurring substances, let&#39;s ask the question: what types of matter do the laws of physics enable us to  design? In this designer&#39;s viewpoint you ask how you can engineer reality to fit what you want. And the emphasis isn&#39;t so much on the \u201cengineer\u201d as on \u201cwhat you want\u201d. Because it turns out that figuring out what is  possible requires immense imagination.\n   This design point of view is very different than the naturalistic view of matter, where you continually explore what occurs \u201cnaturally\u201d, with relatively minimal interventions. And this designerly point of view leads to very deep questions:\n  What patterns of matter can we stabilize, in principle? What\t patterns cannot be stabilized, by any means?\n  What patterns of matter and fields are possible, in\tprinciple? How can we create them? What patterns are\t impossible?\n  Are there fundamental new design abstractions we can\tinvent for matter? In some sense the notion of an atom (or the\tplasmas inside the sun, or the ribosome inside our cells) are\tdesign abstractions supplied by nature. Can we find new ones\t ourselves?\n  Even a very simple question like \u201cWhat pattern of static electromagnetic fields can we create?\u201d is actually a pretty great question. And then: can we build a universal device to create that field? And we can ask analogous questions for other types of matter and fields.\n  Many non-designers think of design as relatively unimportant. Once on Twitter an experienced programmer and manager made the following comment about design in the software realm:\n  Honestly, I have a hard time taking the idea of a \u201cDesigner\u201d as a whole job seriously. Like you lay out buttons and text? That&#39;s it?\n   Now, what does it mean that (visual) design is \u201clay[ing] out buttons and text\u201d? It seems a little like claiming that Shakespeare was merely laying out letters of the alphabet in a particularly well-chosen fashion. There is some sense in which that&#39;s true. But the point of design, as with Shakespeare and great writing, is to discover powerful higher-order ideas. Those ideas \n......", "posttime": "2021-06-29 23:05:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7269\u8d28,maps,\u539f\u5b50", "title": "\u7269\u8d28\u5730\u56fe ", "title_en": "Maps Of Matter", "transed": 1, "url": "https://futureofmatter.com/maps_of_matter.html", "via": "", "real_tags": ["\u7269\u8d28", "maps", "\u539f\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "7a53792b19d63d2ee4aeb74637d0edae.jpg", "infoid": 1068518, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u4eec\u5ba3\u5e03ARM64EC\uff08\u201c\u4eff\u771f\u517c\u5bb9\u201d\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u9014\u5f84\uff0c\u7528\u4e8e\u5728ARM\u4e0a\u6784\u5efaWindows 11\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\u9884\u89c8\u548cWindows 11 Insider SDK\u4e2d\u7684\u6700\u65b0Visual Studio\u5de5\u5177\uff0c\u60a8\u5c06\u80fd\u591f\u5229\u7528ARM64EC\u6765\u9010\u6b65\u8fc7\u6e21\uff0c\u4ee5\u4fbf\u5728ARM\u4e0a\u4f7f\u7528\u672c\u673a\u901f\u5ea6\u8fd0\u884c\uff0c\u5373\u4f7f\u60a8\u6709\u4e0d\u652f\u6301\u7684\u4f9d\u8d56\u9879\u6216\u63d2\u4ef6\u80f3\u818a\u5462\u3002\n  ARM64EC\u662f\u4e00\u4e2a\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3\uff08ABI\uff09\uff0c\u9002\u7528\u4e8e\u5177\u6709\u672c\u673a\u901f\u5ea6\u7684ARM\u4e0a\u7684Windows 11\uff0c\u5e76\u4f7f\u7528x64\u4e92\u64cd\u4f5c\u3002\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fc7\u7a0b\uff0c\u751a\u81f3\u6a21\u5757\u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u7531\u6df7\u5408\u548c\u5339\u914dARM64EC\u548cX64\u3002\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684ARM64EC\u4ee3\u7801\u5c06\u81ea\u7136\u8fd0\u884c\uff0c\u800c\u4efb\u4f55X64\u4ee3\u7801\u5c06\u5728ARM\u5185\u7f6e\u4eff\u771f\u4e0a\u4f7f\u7528Windows 11\u8fd0\u884c\u3002\n ARM64EC ABI\u4ee5\u73b0\u6709\u7684ARM64 ABI\u4e0e\u73b0\u6709\u7684ARM64 ABI\u7565\u5fae\u4e0d\u540c\uff0c\u4f7f\u5176\u4e0eX64\u4ee3\u7801\u517c\u5bb9\u3002\u5177\u4f53\u800c\u8a00\uff0cARM64EC ABI\u9075\u5faaX64\u8f6f\u4ef6\u7ea6\u5b9a\uff0c\u5305\u62ec\u547c\u53eb\u60ef\u4f8b\uff0c\u5806\u6808\u4f7f\u7528\u548c\u6570\u636e\u5bf9\u9f50\uff0c\u4f7fARM64EC\u548cX64\u53ef\u4e92\u64cd\u4f5c\u3002\u4f5c\u4e3aARM64EC\u6784\u5efa\u7684\u5e94\u7528\u53ef\u80fd\u5305\u542bX64\u4ee3\u7801\uff0c\u4f46\u4e0d\u5fc5\uff0c\u56e0\u4e3aARM64EC\u662f\u5b83\u81ea\u5df1\u7684\u5b8c\u6574\uff0cFor Windows\u7684\u4e00\u6d41ABI\u3002\n  \u4f20\u7edf\u4e0a\uff0c\u91cd\u5efaARM\u7684\u5e94\u7528\u7a0b\u5e8f\u610f\u5473\u7740\u91cd\u65b0\u7f16\u8bd1\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u7ed3\u679c\u662f\u89e3\u9501ARM\u8bbe\u5907\u7684\u5168\u529f\u7387\u7684\u5ba2\u6237\u7684\u5927\u91cf\u539f\u751f\u4f53\u9a8c\u3002\u4f46\u662f\uff0c\u4ece\u5f00\u53d1\u4eba\u5458\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u79fb\u690d\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5168\u90e8\u6216\u5168\u65e0\uff0c\u56e0\u4e3a\u5728\u5ba2\u6237\u53ef\u4ee5\u770b\u5230\u76ca\u5904\u4e4b\u524d\u9700\u8981\u91cd\u5efa\u8fc7\u7a0b\u4e2d\u7684\u6240\u6709\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\n \u4f7f\u7528ARM64EC\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u9010\u6b65\u542f\u52a8\u5c0f\u5e76\u6784\u5efa\u3002\u60a8\u53ef\u4ee5\u8bc6\u522b\u4ee3\u7801\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u5c06\u4ece\u672c\u673a\u6027\u80fd\u4e2d\u53d7\u76ca\uff0c\u5e76\u5c06\u5176\u91cd\u5efa\u4e3aARM64EC\u3002\u8be5\u5e94\u7528\u7684\u5176\u4f59\u90e8\u5206\u5c06\u4fdd\u6301\u5b8c\u5168\u6b63\u5e38\u7684X64\uff0c\u4f46\u91cd\u65b0\u7f16\u8bd1\u7684ARM64EC\u90e8\u4ef6\u73b0\u5728\u5c06\u5177\u6709\u672c\u673a\u901f\u5ea6\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u60a8\u53ef\u4ee5\u5c06\u66f4\u591a\u5e94\u7528\u7a0b\u5e8f\u91cd\u65b0\u7f16\u8bd1\u4e3aARM64EC\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u5ba2\u6237\u7684\u6027\u80fd\u5e76\u8282\u7701\u7535\u6c60\u5bff\u547d\u3002\n \u6df7\u5408\u548c\u5339\u914dX64\u548cARM64EC\u7684\u80fd\u529b\u4f7f\u5f97\u53ef\u4ee5\u5728\u624b\u81c2\u4e0a\u4e3aWindows 11\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5b83\u53d6\u51b3\u4e8e\u63a7\u5236\u4e4b\u5916\u7684X64\u4ee3\u7801\u3002\u5177\u6709\u4e0d\u652f\u6301ARM\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u9879\u7684\u9879\u76ee\u53ef\u4ee5\u5c06\u5b83\u4eec\u7559\u4e3ax64\u3002\u548cin-proc\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6784\u5efa\u4e3aARM64EC\u4ee5\u83b7\u5f97\u672c\u673a\u901f\u5ea6\uff0c\u540c\u65f6\u7ee7\u7eed\u52a0\u8f7d\u548c\u4f7f\u7528X64\u63d2\u4ef6\u3002\n  \u6211\u4eec\u53d7\u5230ARM64EC\u7684\u6f5c\u529b\u548c\u5174\u594b\u7684\u63a8\u52a8\uff0c\u4ee5\u67e5\u770b\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u8fd9\u9879\u6280\u672f\u5728ARM\u4e0a\u4e3aWindows 11\u6784\u5efa\u3002\u5728\u5185\u90e8\uff0c\u6211\u4eec\u901a\u8fc7ARM64EC\u91cd\u5efa\u4e86ARM\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u7684Windows 11\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4ee5\u4fbfX64\u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u7684\u4efb\u4f55\u7cfb\u7edf\u4ee3\u7801\u90fd\u4ee5\u672c\u673a\u901f\u5ea6\u8fd0\u884c\u3002\u6b64\u5916\uff0cOffice\u56e2\u961f\u5728\u5373\u5c06\u5230\u6765\u768464\u4f4dOffice for Arm\u4e2d\u4f7f\u7528ARM64EC\uff0c\u4ee5\u4fbf\u73b0\u6709\u7684X64\u63d2\u4ef6\u65e0\u7f1d\u5de5\u4f5c\u3002 \n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d\u6700\u65b0\u7684Windows Insider SDK\u548cVisual Studio\u9884\u89c8\uff0c\u7136\u540e\u6309\u7167Docs.microsoft.com\u4e0a\u7684\u6b65\u9aa4\u6dfb\u52a0ARM64EC\u6765\u5f00\u59cbARM64EC\u3002\u6dfb\u52a0ARM64EC\u914d\u7f6e\u3002 \u671f\u5f85\u7740\uff0c\u6211\u4eec\u5c06\u66f4\u591a\u5730\u5206\u4eab\uff0c\u56e0\u4e3a\u6211\u4eec\u66f4\u8be6\u7ec6\u5730\u901a\u8fc7\u4e86\u5982\u4f55\u5229\u7528\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684ARM64EC\u3002 ", "note_en": "Today, we\u2019re announcing ARM64EC (\u201cEmulation Compatible\u201d), a new way to build apps for Windows 11 on ARM. With the latest Visual Studio tools in preview and the Windows 11 Insider SDK, you\u2019ll be able to take advantage of ARM64EC to incrementally transition your app to running with native speed on ARM, even if you have dependencies or plugins that don\u2019t support ARM yet.\n  ARM64EC is a new application binary interface (ABI) for Windows 11 on ARM that runs with native speed and is interoperable with x64. An app, process, or even a module can freely mix and match ARM64EC and x64 as needed. The ARM64EC code in the app will run natively while any x64 code will run using Windows 11 on ARM\u2019s built-in emulation.\n The ARM64EC ABI differs slightly from the existing  ARM64 ABI in ways that make it binary compatible with x64 code. Specifically, the ARM64EC ABI follows x64 software conventions including calling convention, stack usage, and data alignment, making ARM64EC and x64 interoperable. Apps built as ARM64EC may contain x64 code but do not have to, since ARM64EC is its own complete, first-class ABI for Windows.\n  Traditionally, rebuilding an app for ARM has meant recompiling the entire app. The result is a great native experience for the customer that unlocks the full power of the ARM device. However, from a developer perspective, porting an app can be all-or-nothing, since all the binaries within a process need to be rebuilt before a customer can see the benefit.\n With ARM64EC, you can choose to start small and build incrementally. You can identify a part of your codebase that would benefit most from native performance and rebuild it as ARM64EC. The rest of the app will remain fully functional as emulated x64, but the recompiled ARM64EC parts will now have native speed.\u00a0 Over time, you can recompile more of the app as ARM64EC to further improve performance and conserve battery life for your app\u2019s customers.\n The ability to mix and match x64 and ARM64EC makes it possible to build an app for Windows 11 on ARM even if it depends on x64 code outside of your control. Projects with third-party dependencies that don\u2019t support ARM can leave them as x64.\u00a0 And apps with an in-proc plugin ecosystem can build as ARM64EC to get native speed, while continuing to load and use x64 plugins.\n  We\u2019re motivated by the potential of ARM64EC and excited to see the kinds of apps developers can build for Windows 11 on ARM using this technology.\u00a0Internally, we\u2019ve rebuilt the binaries of the Windows 11 on ARM operating system itself with ARM64EC so that any system code loaded by x64 apps runs with native speed.\u00a0 In addition, the Office team is using ARM64EC in the coming  64-bit Office for ARM so that existing x64 plugins will work seamlessly.\n You can get started with ARM64EC by downloading the latest  Windows Insider SDK and  Visual Studio Preview, then following the steps on  docs.microsoft.com to add an ARM64EC configuration.\u00a0 Looking forward, we\u2019ll have more content to share as we walk through in more detail how to take advantage of ARM64EC in your apps.", "posttime": "2021-06-29 23:04:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,windows,arm,building,arm64ec", "title": "ARM64EC\uff1a\u5728ARM\u4e0a\u4e3aWindows 11\u6784\u5efa\u672c\u673a\u548c\u53ef\u4e92\u64cd\u4f5c\u7684\u5e94\u7528\u7a0b\u5e8f ", "title_en": "ARM64EC: Building Native and Interoperable Apps for Windows 11 on ARM", "transed": 1, "url": "https://blogs.windows.com/windowsdeveloper/2021/06/28/announcing-arm64ec-building-native-and-interoperable-apps-for-windows-11-on-arm/", "via": "", "real_tags": ["\u7a0b\u5e8f", "windows", "arm", "building", "arm64ec"]}, {"category": "", "categoryclass": "", "imagename": "ec3dab0920d33aa1c2fe8e6f7a51b2f1.png", "infoid": 1068517, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u5b57\u3002\u7011\u5e03\u56fe\u663e\u793a\u4e86\u5728Covid-19\u75ab\u82d7\u63a5\u79cd\u4e4b\u524d\u548c\u4e4b\u540e\u53c2\u4e0e\u8005\u5185\u7684\u603b\u673a\u7cbe\u5b50\u6570\u91cf\u53c2\u6570\u7684\u53d8\u5316\n      1.\u5144\u5f1f\u59d0\u59b9\r PGTK\uff0c\u6258\u9a6c\u65af\r k\uff0cshah\r MD\uff0c\r \u7b49\u7b49\u3002\u7f8e\u56fd\u516c\u4f17\u83b7\u5f97Covid-19\u75ab\u82d7\u7684\u56fd\u5bb6\u8d8b\u52bf\uff1a4\u67081\u65e5\u81f312\u67088\u65e5\uff0c2020\u5e74.Jama\u3002 2020; 325\uff084\uff09\uff1a396-398\u3002 DOI\uff1a10.1001 / Jama.202020.26419 PubMed Google Scholar Crossref\n 2.\u6d46\u679c\r SD\uff0c\u7ea6\u7ff0\u900a\r ks\uff0cmyles.\r \u6211\uff0c\r \u7b49\u7b49\u3002\u4eceFrontline\u719f\u7ec3\u7684\u62a4\u7406\u8bbe\u65bd\u5458\u5de5\u72b9\u8c6b\u4e0d\u51b3\u7684\u7ecf\u9a8c\u6559\u8bad\uff0c\u5173\u4e8eCovid-19\u75ab\u82d7\u72b9\u8c6b\u4e0d\u51b3\u3002 J am Geriadr SoC\u3002 2021; 69\uff085\uff09\uff1a1140-1146\u3002 DOI\uff1a10.1111 / JGS.17136 PubMed Google Scholar Crossref\n 3.\u6700\u597d\u7684\r JC\uff0cKuchakulla.\r M\uff0cKhodamoradi\r k\uff0c\r \u7b49\u7b49\u3002\u4eba\u4f53\u7cbe\u6db2\u4e2dSARS-COV-2\u7684\u8bc4\u4ef7\u53ca\u5bf9\u603b\u7cbe\u5b50\u6570\u7684\u5f71\u54cd\uff1a\u9884\u671f\u89c2\u5bdf\u7814\u7a76\u3002\u4e16\u754cJ\u7537\u58eb\u5065\u5eb7\u3002 2021; 39\uff08E12\uff09\u3002 PubMed Google\u5b66\u8005\n 4.\u5e93\u73c0\r TG\uff0cNOONAN.\r e\uff0cvon enkardstein\r S\uff0c\r \u7b49\u7b49\u3002\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u4eba\u7c7b\u7cbe\u6db2\u7279\u5f81\u7684\u53c2\u8003\u4ef7\u503c\u3002\u55e1\u55e1\u58f0\u66f4\u65b0\u3002 2010; 16\uff083\uff09\uff1a231-245\u3002 DOI\uff1a10.1093 / Humupd / DMP048 PubMed Google Scholar CrossRef\n 5.\u9f99\u9aa8\r BA\u3002\u5728\u4e0d\u80b2\u7537\u6027\u548c\u666e\u901a\u7cbe\u6db2\u6350\u8d60\u8005\u4e2d\u7684\u7cbe\u6db2\u53c2\u6570\u548c\u4e3b\u9898\u4e4b\u95f4\u7684\u548c\u4e4b\u95f4\u7684\u5185\u5bb9\u53d8\u5316\u3002 Fertil SteTil\u3002 2006; 85\uff081\uff09\uff1a128-134\u3002 DOI\uff1a10.1016 / J.Fertnstert2005.06.048 PubMed Google Scholar CrossRef\n    \u5229\u76ca\u51b2\u7a81\u5305\u62ec\u8fc7\u53bb3\u5e74\u5185\u7684\u7ecf\u6d4e\u5229\u76ca\uff0c\u6d3b\u52a8\u548c\u5173\u7cfb\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5c31\u4e1a\uff0c\u96b6\u5c5e\u5ea6\uff0c\u62e8\u6b3e\u6216\u8d44\u91d1\uff0c\u54a8\u8be2\uff0c\u916c\u91d1\u6216\u4ed8\u6b3e\uff0c\u80a1\u7968\u4eba\uff0c\u80a1\u7968\u6240\u6709\u6743\u6216\u9009\u62e9\uff0c\u4e13\u5bb6\u8bc1\u8bcd\uff0c\u4e13\u5bb6\u8bc1\u8bcd\uff0c\u7279\u8bb8\u6743\u4f7f\u7528\u8d39\uff0c\u6350\u8d60\u533b\u7597\u8bbe\u5907\uff0c\u6216\u8ba1\u5212\uff0c\u5f85\u5b9a\u6216\u53d1\u884c\u7684\u4e13\u5229\u3002 \n\u5982\u679c\u60a8\u6ca1\u6709\u5229\u76ca\u51b2\u7a81\uff0c\u8bf7\u68c0\u67e5\uff06\uff0334;\u6ca1\u6709\u6f5c\u5728\u7684\u5229\u76ca\u51b2\u7a81\uff06\uff0334;\u5728\u4e0b\u9762\u7684\u6846\u4e2d\u3002\u4fe1\u606f\u5c06\u53d1\u5e03\u60a8\u7684\u56de\u590d\u3002\n        \u9700\u8981\u4ee5\u4e0b\u4fe1\u606f\uff0c\u5fc5\u987b\u5b8c\u6210\u624d\u80fd\u63d0\u4ea4\u8bc4\u8bba\uff1a\n  \u4eb2\u7231\u7684\u5148\u751f/\u5973\u58eb\uff1a\u51fa\u7248A\uff06\uff0334\u7684\u4ef7\u503c\u662f\u4ec0\u4e48;\u7814\u7a76\u8bba\u6587\uff06\uff0334;\u6709\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\uff1f\u75ab\u82d7\u63a5\u79cd\u7cbe\u5b50\u5206\u6790\u540e\uff0c\u4e00\u4e2a\u6837\u672c\u57fa\u7ebf\u548c\u4e00\u4e2a\u6837\u54c1\u65e0\u6cd5\u663e\u793a\u4efb\u4f55\u4e1c\u897f\u3002\n    Cite\u8fd9\u4e2aGonzalez DC\uff0cNassau de\uff0cKhodamoradi K\uff0c\u7b49\u3002 Covid-19 mRNA\u75ab\u82d7\u63a5\u79cd\u524d\u540e\u7684\u7cbe\u5b50\u53c2\u6570\u3002\u8d3e\u9a6c\u3002\u5728\u7ebf\u53d1\u5e03\u4e8e6\u670817\u65e5\uff0c2021\u5e746\u670817\u65e5\u3002Doi\uff1a10.1001 / Jama.2021.9976\n        \u4e24\u4e2amRNA\u75ab\u82d7\uff0cBNT162B2\uff08PFizer-Biontech\uff09\u548cMRNA-1273\uff08MODENA\uff09\uff0c\u4ece\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u83b7\u5f97\u7d27\u6025\u4f7f\u7528\u6388\u6743\u3002\u5c3d\u7ba1\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u53d1\u73b0\u7684\u7597\u6548\u9ad8\uff0c\u4f46\u5f88\u5c11\u6709\u4e0d\u826f\u4e8b\u4ef6\uff0c\u4f46\u7f8e\u56fd\u4ec5\u670956\uff05\u7684\u4eba\u62a5\u544a\u636e\u62a5\u9053\u60f3\u8981\u63a5\u53d7\u75ab\u82d7\u3002 1\u75ab\u82d7\u72b9\u8c6b\u4e0d\u51b3\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u5bf9\u751f\u80b2\u80fd\u529b\u7684\u6f5c\u5728\u8d1f\u9762\u5f71\u54cd\u3002 2\u56e0\u4e3a\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u672a\u8bc4\u4f30\u751f\u6b96\u6bd2\u6027\uff0c\u5e76\u4e14SARS-COV-2\u5df2\u4e0e\u7cbe\u5b50\u53c2\u6570\u7684\u964d\u4f4e\u6709\u5173\uff0c3\u6211\u4eec\u5728mRNA\u75ab\u82d7\u7ed9\u836f\u524d\u540e\u8bc4\u4f30\u7cbe\u5b50\u53c2\u6570\u3002\n          \u8fd9\u9879\u8fc8\u963f\u5bc6\u5927\u5b66\u7684\u5355\u4e00\u4e2d\u5fc3\u524d\u77bb\u6027\u7814\u7a76\u62db\u52df\u4e8618\u81f350\u5c81\u7684\u5065\u5eb7\u5fd7\u613f\u8005\uff0c\u901a\u8fc7\u4f20\u5355\u5f20\u8d34\u4e86MRNA Covid-19\u75ab\u82d7\uff0c\u5f20\u8d34\u5728\u6574\u4e2a\u5927\u5b66\u533b\u9662\u548c\u5185\u90e8\u540d\u5355\u7535\u5b50\u90ae\u4ef6\u4e2d\u3002\u8fc8\u963f\u5bc6\u5927\u5b66\u673a\u6784\u5ba1\u67e5\u59d4\u5458\u4f1a\u6279\u51c6\u4e86\u7814\u7a76\u548c\u4e66\u9762\u77e5\u60c5\u540c\u610f\uff0c\u4ece\u6240\u6709\u53c2\u4e0e\u8005\u83b7\u5f97\u3002\n    \u7537\u6027\u88ab\u9884\u5148\u7b5b\u9009\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u6ca1\u6709\u6f5c\u5728\u7684\u751f\u80b2\u95ee\u9898\u3002\u9664\u4e8690\u5929\u5185\uff0c\u6709Covid-19\u75c7\u72b6\u6216\u9633\u6027\u6d4b\u8bd5\u7ed3\u679c\u7684\u4eba\u88ab\u6392\u9664\u5728\u5916\u3002\u53c2\u4e0e\u8005\u5728\u7981\u6b322\u81f37\u5929\u540e\u63d0\u4f9b\u7cbe\u6db2\u6837\u54c1\uff0c\u5728\u63a5\u53d7\u7b2c\u4e00\u4e2a\u75ab\u82d7\u5242\u91cf\u548c\u7b2c\u4e8c\u6b21\u540e\u7ea670\u5929\u4e4b\u524d\u3002\u901a\u8fc7\u6bcf\u4e2a\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u7684\u57f9\u8bad\u8840\u6db2\u5b66\u5bb6\u8fdb\u884c\u7cbe\u6db2\u5206\u6790\uff0c\u5305\u62ec\u7cbe\u6db2\u4f53\u79ef\uff0c\u7cbe\u5b50\u6d53\u5ea6\uff0c\u7cbe\u5b50\u8fd0\u52a8\u548c\u603b\u8fd0\u52a8\u7cbe\u5b50\u6570\uff08TMSC\uff09\u3002\u5305\u62ec\u5be1\u6838\u82f7\u9178\uff08\u7cbe\u5b50\u6d53\u5ea6\uff06lt; 1500\u767e\u4e07/ ml\uff09\u76844\u4e2a\u4e2a\u4f53\u3002\u5728\u8ba1\u7b97\u6b63\u5e38\u6027\u6d4b\u8bd5\u7684\u6570\u636e\u5206\u5e03\u540e\uff0c\u62a5\u544a\u6240\u6709\u53d8\u91cf\u7684\u4e2d\u4f4d\u6570\u548c\u5c40\u90e8\u7a7a\u95f4\u8303\u56f4\uff08IQRS\uff09\u3002 Wilcoxon\u7b49\u7ea7\u548c\u6d4b\u8bd5\u7528\u4e8e\u6bd4\u8f83\u540e\u548c\u540e\u8fc7\u5ea6\u7684\u7cbe\u6db2\u53c2\u6570\u3002\u56fe\u5f62\u4e0a\u5448\u73b0TMSC\u7684\u53d8\u5316\u3002\u4f7f\u7528SPSS\u7248\u672c24\uff08IBM\uff09\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\u3002 2\u6b21\u5c3e\u7684P\u503c\u5c0f\u4e8e.05\u88ab\u8ba4\u4e3a\u662f\u7edf\u8ba1\u5b66\u610f\u4e49\u7684\u3002 \n2020\u5e7412\u670817\u65e5\u81f32021\u5e741\u670812\u65e5\uff0c45\u540d\u7537\u5b50\u81ea\u613f\uff08\u4e2d\u4f4d\u5e74\u9f84\uff0c28\u5e74[IQR\uff0c25-31]\uff09;\u5728\u7b2c\u4e8c\u5242\u540e75\u5929\uff08IQR\uff0c70-86\uff09\u4e2d\u4f4d\u6570\u83b7\u5f97\u540e\u7eed\u6837\u54c1\u3002\u8be5\u7814\u7a76\u4e8e2021\u5e744\u670824\u65e5\u7ed3\u675f\u3002\u5728\u4e2d\u4f4d\u6570\uff08IQR\uff0c2-3\uff09\u548c3\u5929\uff08IQR\uff0c3-4\uff09\u540e\u7684\u4e2d\u4f4d\u7981\u6b62\u671f\uff08IQR\uff0c2-3\uff09\u548c\u540e\u7eed\u6837\u54c1\u540e\uff0c\u83b7\u5f97\u57fa\u7ebf\u6837\u54c1\u3002\u572845\u540d\u7537\u6027\u4e2d\uff0c21\u4f8b\uff0846.7\uff05\uff09\u63a5\u53d7BNT162B2\u548c24\uff0853.3\uff05\uff09\u63a5\u53d7mRNA-1273\u3002\u57fa\u7ebf\u7cbe\u5b50\u6d53\u5ea6\u548cTMSC\u5206\u522b\u4e3a2600\u4e07/ mL\uff08IQR\uff0c19.5-34\uff09\u548c3600\u4e07\uff08IQR\uff0c18-51\uff09\u3002\u5728\u7b2c\u4e8c\u4e2a\u75ab\u82d7\u5242\u91cf\u540e\uff0c\u4e2d\u503c\u7cbe\u5b50\u6d53\u5ea6\u660e\u663e\u589e\u52a0\u81f33000\u4e07/ mL\uff08IQR\uff0c21.5-40.5; p = .02\uff09\u548c\u4e2d\u4f4dTMSC\u81f34400\u4e07\uff08IQR\uff0c27.5-98; P = .001\uff09\u3002\u7cbe\u6db2\u4f53\u79ef\u548c\u7cbe\u5b50\u8fd0\u52a8\u4e5f\u663e\u7740\u589e\u52a0\uff08\u8868\uff09\u3002\n    45\u540d\u7537\u6027\u4e2d\u7684\u516b\u4e2a\u5728\u75ab\u82d7\u4e4b\u524d\u662f\u5c11\u91cf\u8840\u75c7\uff08\u4e2d\u503c\u6d53\u5ea6\uff0c850\u4e07/ mL [IQR\uff0c5.1-12]\uff09\u3002\u5728\u8fd98,7\u4e2d\uff0c7\u540d\u7537\u6027\u5728\u968f\u8bbf\u4e2d\u589e\u52a0\u4e86\u7cbe\u5b50\u6d53\u5ea6\u81f3\u5e38\u89c4\u8840\u6db2\u6742\u79cd\u8303\u56f4\uff08\u4e2d\u503c\u6d53\u5ea6\uff0c2200\u4e07/ mL [IQR\uff0c17-25.5]\uff09\uff0c1\u540d\u7537\u5b50\u4ecd\u7136\u662f\u5c11\u91cf\u7684\u3002\u5728\u75ab\u82d7\u540e\u6ca1\u6709\u4eba\u53d8\u5f97\u6291\u5236\u75c7\u3002\n    \u7011\u5e03\u56fe\u663e\u793a\u6bcf\u4e2a\u4eba\u7684\u57fa\u7ebf\uff08\u8303\u56f4\uff0c-220\u4e07\u81f39300\u4e07\uff09\u7684TMSC\u5185\u53c2\u4e0e\u8005\u5185\u5bb9\u3002\n        \u5728\u672c\u53d1\u660e\u7684\u7cbe\u5b50\u53c2\u6570\u7684\u7814\u7a76\u4e2d\uff0c\u57282\u5242\u7684Covid-19 mRNA\u75ab\u82d7\u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u8fd9\u79cd\u5c0f\u7fa4\u4f53\u7684\u4efb\u4f55\u7cbe\u5b50\u53c2\u6570\u90fd\u6ca1\u6709\u663e\u7740\u964d\u4f4e\u3002\u56e0\u4e3a\u75ab\u82d7\u542b\u6709mRNA\u800c\u4e0d\u662f\u6d3b\u75c5\u6bd2\uff0c\u56e0\u6b64\u75ab\u82d7\u4e0d\u592a\u53ef\u80fd\u5f71\u54cd\u7cbe\u5b50\u53c2\u6570\u3002\u867d\u7136\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\u6240\u6709\u7cbe\u5b50\u53c2\u6570\u7684\u7edf\u8ba1\u5b66\u663e\u7740\u589e\u52a0\uff0c\u4f46\u662f\u53d8\u5316\u7684\u5927\u5c0f\u5728\u6b63\u5e38\u7684\u5355\u72ec\u53d8\u5316\u5185\uff0c\u5e76\u4e14\u53ef\u80fd\u53d7\u5230\u5bf9\u5e73\u5747\u503c\u7684\u56de\u5f52\u7684\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u589e\u52a0\u53ef\u80fd\u662f\u7531\u4e8e\u7b2c\u4e8c\u4e2a\u6837\u54c1\u524d\u589e\u52a0\u7684\u7981\u6b32\u65f6\u95f4\u3002\u5be1\u6838\u82f7\u9178\u7684\u7537\u6027\u6ca1\u6709\u7ecf\u5386\u8fdb\u4e00\u6b65\u4e0b\u964d\u3002\n    \u8be5\u7814\u7a76\u7684\u5c40\u9650\u6027\u5305\u62ec\u5c11\u6570\u4eba\u6ce8\u518c;\u8d85\u51fa\u5e74\u8f7b\uff0c\u5065\u5eb7\u7684\u7537\u6027\u7684\u6709\u9650\u6982\u62ec\u6027;\u77ed\u6682\u7684\u540e\u7eed\u884c\u52a8;\u7f3a\u4e4f\u5bf9\u7167\u7ec4\u3002\u6b64\u5916\uff0c\u867d\u7136\u7cbe\u6db2\u5206\u6790\u662f\u7537\u6027\u751f\u80b2\u7387\u8bc4\u4f30\u7684\u57fa\u7840\uff0c\u4f46\u5b83\u662f\u751f\u80b2\u6f5c\u529b\u7684\u4e0d\u5b8c\u7f8e\u9884\u6d4b\u56e0\u5b50\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u7814\u7a76\u7684\u65f6\u95f4\u6846\u67b6\u5305\u62ec\u7cbe\u5b50\u7684\u5168\u90e8\u751f\u547d\u5468\u671f\u3002\n                 \u91cd\u8981\u7684\u667a\u529b\u5185\u5bb9\u7a3f\u4ef6\u7684\u5173\u952e\u4fee\u8ba2\uff1aGonzalez\uff0cNassau\uff0cIbrahim\uff0cBlachman-Braun\uff0cOriy\uff0cRamasamy\u3002\n     \u989d\u5916\u7684\u8d21\u732e\uff1a\u6211\u4eec\u611f\u8c22IAKOV EFIMENKO\uff0cBSC\uff0cJustin Dubin\uff0cMD\u548cManuel Molina\uff0cMD\uff08\u8fc8\u963f\u5bc6\u5927\u5b66\u6ccc\u5c3f\u79d1\u5927\u5b66\uff09\uff0c\u63f4\u52a9\u62db\u8058\u548c\u673a\u6784\u5ba1\u67e5\u59d4\u5458\u4f1a\u7684\u51c6\u5907\uff0c\u4ee5\u53caAli Tourchi\uff0cMD\uff08\u5927\u5b66\u4f5c\u8005\uff1a\u738b\u83b9\uff0c\u79d1\u5b66\u7814\u7a76\u79d1\u5b66\u7248\u6ccc\u5c3f\u79d1\u5b66\u90e8\u6ca1\u6709\u88ab\u8d54\u507f\u4ed6\u4eec\u7684\u8d21\u732e\u3002 \n1.\u5144\u5f1f\u59d0\u59b9\r PGTK\uff0c\u6258\u9a6c\u65af\r k\uff0cshah\r MD\uff0c\r \u7b49\u7b49\u3002\u7f8e\u56fd\u516c\u4f17\u83b7\u5f97Covid-19\u75ab\u82d7\u7684\u56fd\u5bb6\u8d8b\u52bf\uff1a4\u67081\u65e5\u81f312\u67088\u65e5\uff0c2020\u5e74.Jama\u3002 2020; 325\uff084\uff09\uff1a396-398\u3002 DOI\uff1a10.1001 / Jama.202020.26419 PubMed Google Scholar Crossref\n 2.\u6d46\u679c\r SD\uff0c\u7ea6\u7ff0\u900a\r ks\uff0cmyles.\r \u6211\uff0c\r \u7b49\u7b49\u3002\u4eceFrontline\u719f\u7ec3\u7684\u62a4\u7406\u8bbe\u65bd\u5458\u5de5\u72b9\u8c6b\u4e0d\u51b3\u7684\u7ecf\u9a8c\u6559\u8bad\uff0c\u5173\u4e8eCovid-19\u75ab\u82d7\u72b9\u8c6b\u4e0d\u51b3\u3002 J am Geriadr SoC\u3002 2021; 69\uff085\uff09\uff1a1140-1146\u3002 DOI\uff1a10.1111 / JGS.17136 PubMed Google Scholar Crossref\n 3.\u6700\u597d\u7684\r JC\uff0cKuchakulla.\r M\uff0cKhodamoradi\r k\uff0c\r \u7b49\u7b49\u3002\u4eba\u4f53\u7cbe\u6db2\u4e2dSARS-COV-2\u7684\u8bc4\u4ef7\u53ca\u5bf9\u603b\u7cbe\u5b50\u6570\u7684\u5f71\u54cd\uff1a\u9884\u671f\u89c2\u5bdf\u7814\u7a76\u3002\u4e16\u754cJ\u7537\u58eb\u5065\u5eb7\u3002 2021; 39\uff08E12\uff09\u3002 PubMed Google\u5b66\u8005\n 4.\u5e93\u73c0\r TG\uff0cNOONAN.\r e\uff0cvon enkardstein\r S\uff0c\r \u7b49\u7b49\u3002\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u4eba\u7c7b\u7cbe\u6db2\u7279\u5f81\u7684\u53c2\u8003\u4ef7\u503c\u3002\u55e1\u55e1\u58f0\u66f4\u65b0\u3002 2010; 16\uff083\uff09\uff1a231-245\u3002 DOI\uff1a10.1093 / Humupd / DMP048 PubMed Google Scholar CrossRef\n 5.\u9f99\u9aa8\r BA\u3002\u5728\u4e0d\u80b2\u7537\u6027\u548c\u666e\u901a\u7cbe\u6db2\u6350\u8d60\u8005\u4e2d\u7684\u7cbe\u6db2\u53c2\u6570\u548c\u4e3b\u9898\u4e4b\u95f4\u7684\u548c\u4e4b\u95f4\u7684\u5185\u5bb9\u53d8\u5316\u3002 Fertil SteTil\u3002 2006; 85\uff081\uff09\uff1a128-134\u3002 DOI\uff1a10.1016 / J.Fertnstert2005.06.048 PubMed Google Scholar CrossRef ", "note_en": "Figure. \u00a0Waterfall Plot Showing Changes in Total Motile Sperm Count Parameters Within Participants Before and After COVID-19 Vaccination\n      1. Szilagyi\r \u00a0PGTK\ufeff, Thomas\r \u00a0K\ufeff, Shah\r \u00a0MD\ufeff, \r \u00a0et al. \u00a0National trends in the US public\u2019s likelihood of getting a COVID-19 vaccine: April 1 to December 8, 2020.\u00a0\ufeff  \u00a0JAMA. 2020;325(4):396-398. doi: 10.1001/jama.2020.26419 PubMed Google Scholar Crossref\n 2. Berry\r \u00a0SD\ufeff, Johnson\r \u00a0KS\ufeff, Myles\r \u00a0L\ufeff, \r \u00a0et al. \u00a0Lessons learned from frontline skilled nursing facility staff regarding COVID-19 vaccine hesitancy.\u00a0\ufeff  \u00a0J Am Geriatr Soc. 2021;69(5):1140-1146. doi: 10.1111/jgs.17136 PubMed Google Scholar Crossref\n 3. Best\r \u00a0JC\ufeff, Kuchakulla\r \u00a0M\ufeff, Khodamoradi\r \u00a0K\ufeff, \r \u00a0et al. \u00a0Evaluation of SARS-CoV-2 in human semen and effect on total sperm number: a prospective observational study.\u00a0\ufeff  \u00a0World J Mens Health. 2021;39(e12). PubMed Google Scholar\n 4. Cooper\r \u00a0TG\ufeff, Noonan\r \u00a0E\ufeff, von Eckardstein\r \u00a0S\ufeff, \r \u00a0et al. \u00a0World Health Organization reference values for human semen characteristics.\u00a0\ufeff  \u00a0Hum Reprod Update. 2010;16(3):231-245. doi: 10.1093/humupd/dmp048 PubMed Google Scholar Crossref\n 5. Keel\r \u00a0BA\ufeff. \u00a0Within- and between-subject variation in semen parameters in infertile men and normal semen donors.\u00a0\ufeff  \u00a0Fertil Steril. 2006;85(1):128-134. doi: 10.1016/j.fertnstert.2005.06.048 PubMed Google Scholar Crossref\n    Conflicts of interest comprise financial interests, activities, and relationships within the past 3 years including but not limited to employment, affiliation, grants or funding, consultancies, honoraria or payment, speaker&#39;s bureaus, stock ownership or options, expert testimony, royalties, donation of medical equipment, or patents planned, pending, or issued.\n  If you have no conflicts of interest, check &#34;No potential conflicts of interest&#34; in the box below. The information will be posted with your response.\n        The following information is required and must be completed in order to submit a comment:\n  Dear Sir/Madam: What is the value of publishing a &#34;research paper&#34; with predictable results? A one-sample baseline and a one-sample after vaccination sperm analysis could not have shown anything.\n    Cite  This   Gonzalez DC, Nassau DE, Khodamoradi K, et al. Sperm Parameters Before and After COVID-19 mRNA Vaccination.  JAMA. Published online June 17, 2021. doi:10.1001/jama.2021.9976\n        Two mRNA vaccines, BNT162b2 (Pfizer-BioNTech) and mRNA-1273 (Moderna), received Emergency Use Authorization from the US Food and Drug Administration. Despite high efficacy and few adverse events found in clinical trials, only 56% of individuals in the US reported wanting to receive the vaccine.  1 One of the reasons for vaccine hesitancy is the potential negative effect on fertility.  2 Because reproductive toxicity was not evaluated in the clinical trials and SARS-CoV-2 has been associated with decreases in sperm parameters,  3 we assessed sperm parameters before and after mRNA vaccine administration.\n          This single-center prospective study at the University of Miami recruited healthy volunteers aged 18 to 50 years scheduled for mRNA COVID-19 vaccine through flyers posted throughout the university hospital and internal listserve emails. The University of Miami institutional review board approved the study and written informed consent was obtained from all participants.\n    Men were prescreened to ensure they had no underlying fertility issues. Those with COVID-19 symptoms or a positive test result within 90 days were excluded. Participants provided a semen sample after 2 to 7 days of abstinence, prior to receiving the first vaccine dose and approximately 70 days after the second. Semen analyses were performed by trained andrologists per World Health Organization guidelines and included semen volume, sperm concentration, sperm motility, and total motile sperm count (TMSC).  4 Individuals with oligospermia (sperm concentration &lt;15 million/mL) were included. After calculating data distribution on normality test, medians and interquartile ranges (IQRs) were reported for all variables. Wilcoxon rank sum test was used to compare pre- and postvaccination semen parameters. Change in TMSC is presented graphically. Statistical analysis was performed with SPSS version 24 (IBM). A 2-tailed  P value less than .05 was considered statistically significant.\n        Between December 17, 2020, and January 12, 2021, 45 men volunteered (median age, 28 years [IQR, 25-31]); follow-up samples were obtained at a median of 75 days (IQR, 70-86) after the second dose. The study ended on April 24, 2021. Baseline samples were obtained after a median abstinence period of 2.8 days (IQR, 2-3) and follow-up samples after a median of 3 days (IQR, 3-4). Of the 45 men, 21 (46.7%) received BNT162b2 and 24 (53.3%) received mRNA-1273. Baseline sperm concentration and TMSC were 26 million/mL (IQR, 19.5-34) and 36 million (IQR, 18-51), respectively. After the second vaccine dose, the median sperm concentration significantly increased to 30 million/mL (IQR, 21.5-40.5;  P\u2009=\u2009.02) and the median TMSC to 44 million (IQR, 27.5-98;  P\u2009=\u2009.001). Semen volume and sperm motility also significantly increased ( Table).\n    Eight of the 45 men were oligospermic before the vaccine (median concentration, 8.5 million/mL [IQR, 5.1-12]). Of these 8, 7 men had increased sperm concentration to normozoospermic range at follow-up (median concentration, 22 million/mL [IQR, 17-25.5]), and 1 man remained oligospermic. No man became azoospermic after the vaccine.\n    The waterfall plot shows the within-participant change in TMSC from baseline (range, \u221222 million to 93 million) for each man ( Figure).\n        In this study of sperm parameters before and after 2 doses of a COVID-19 mRNA vaccine, there were no significant decreases in any sperm parameter among this small cohort of healthy men. Because the vaccines contain mRNA and not the live virus, it is unlikely that the vaccine would affect sperm parameters. While these results showed statistically significant increases in all sperm parameters, the magnitude of change is within normal individual variation and may be influenced by regression to the mean.  5 Additionally, the increase may be due to the increased abstinence time before the second sample. Men with oligospermia did not experience further decline.\n    The limitations of the study include the small number of men enrolled; limited generalizability beyond young, healthy men; short follow-up; and lack of a control group. In addition, while semen analysis is the foundation of male fertility evaluation, it is an imperfect predictor of fertility potential. Despite this, the study\u2019s time frame encompasses the full life cycle of sperm.\n                 Critical revision of the manuscript for important intellectual content: Gonzalez, Nassau, Ibrahim, Blachman-Braun, Ory, Ramasamy.\n     Additional Contributions: We thank Iakov Efimenko, BSc, Justin Dubin, MD, and Manuel Molina, MD (all with University of Miami Department of Urology), for assistance with recruitment and institutional review board preparation, as well as Ali Tourchi, MD (University of Arkansas for Medical Sciences Department of Urology), for developing the concept of the study. None were compensated for their contributions.\n      1. Szilagyi\r \u00a0PGTK\ufeff, Thomas\r \u00a0K\ufeff, Shah\r \u00a0MD\ufeff, \r \u00a0et al. \u00a0National trends in the US public\u2019s likelihood of getting a COVID-19 vaccine: April 1 to December 8, 2020.\u00a0\ufeff  \u00a0JAMA. 2020;325(4):396-398. doi: 10.1001/jama.2020.26419 PubMed Google Scholar Crossref\n 2. Berry\r \u00a0SD\ufeff, Johnson\r \u00a0KS\ufeff, Myles\r \u00a0L\ufeff, \r \u00a0et al. \u00a0Lessons learned from frontline skilled nursing facility staff regarding COVID-19 vaccine hesitancy.\u00a0\ufeff  \u00a0J Am Geriatr Soc. 2021;69(5):1140-1146. doi: 10.1111/jgs.17136 PubMed Google Scholar Crossref\n 3. Best\r \u00a0JC\ufeff, Kuchakulla\r \u00a0M\ufeff, Khodamoradi\r \u00a0K\ufeff, \r \u00a0et al. \u00a0Evaluation of SARS-CoV-2 in human semen and effect on total sperm number: a prospective observational study.\u00a0\ufeff  \u00a0World J Mens Health. 2021;39(e12). PubMed Google Scholar\n 4. Cooper\r \u00a0TG\ufeff, Noonan\r \u00a0E\ufeff, von Eckardstein\r \u00a0S\ufeff, \r \u00a0et al. \u00a0World Health Organization reference values for human semen characteristics.\u00a0\ufeff  \u00a0Hum Reprod Update. 2010;16(3):231-245. doi: 10.1093/humupd/dmp048 PubMed Google Scholar Crossref\n 5. Keel\r \u00a0BA\ufeff. \u00a0Within- and between-subject variation in semen parameters in infertile men and normal semen donors.\u00a0\ufeff  \u00a0Fertil Steril. 2006;85(1):128-134. doi: 10.1016/j.fertnstert.2005.06.048 PubMed Google Scholar Crossref", "posttime": "2021-06-29 23:04:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7cbe\u5b50,parameters", "title": "Covid-19\u75ab\u82d7\u540e\u7684\u7cbe\u5b50\u53c2\u6570 ", "title_en": "Sperm Parameters After Covid-19 Vaccine", "transed": 1, "url": "https://jamanetwork.com/journals/jama/fullarticle/2781360", "via": "", "real_tags": ["\u7cbe\u5b50"]}]
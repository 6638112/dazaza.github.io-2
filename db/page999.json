[{"category": "", "categoryclass": "", "imagename": "3418068bb1974eab76ac9e514891fabb.jpg", "infoid": 1009175, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5ba2\u6237\u6d41\u5931\u662f\u6307\u5f53\u5ba2\u6237\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u79bb\u5f00\u67d0\u9879\u670d\u52a1\u65f6\uff0c\u5bf9\u4e1a\u52a1\u4e0d\u5229\u7684\u60c5\u51b5\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6765\u9884\u6d4b\u54ea\u4e9b\u5ba2\u6237\u4f1a\u79bb\u5f00\u8be5\u670d\u52a1\uff0c\u6240\u4f7f\u7528\u7684\u6570\u636e\u96c6\u662f\u4f4d\u4e8eKaggle\u7684\u7535\u4fe1\u5ba2\u6237\u6d41\u5931\u6570\u636e\u96c6\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u63a2\u7d22\u6027\u7684\u6570\u636e\u5206\u6790\u3002\u53e6\u4e00\u9879\u5de5\u4f5c\u662f\u4f7f\u7528Deepnote\u4f5c\u4e3a\u5f00\u53d1\u73af\u5883\uff0c\u4f7f\u7528PyCaret Python\u6a21\u5757\u521b\u5efa\u5b9e\u9a8c\u6d41\u6c34\u7ebf\u3002\n##1.\u7b80\u4ecb\u5ba2\u6237\u6d41\u5931\u662f\u6307\u5ba2\u6237\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u79bb\u5f00\u67d0\u9879\u670d\u52a1\u65f6\uff0c\u5bf9\u4e1a\u52a1\u9020\u6210\u7684\u4e0d\u5229\u5f71\u54cd\u3002&lt\uff1bbr&gt\uff1b\u8fd9\u9879\u5de5\u4f5c\u7684\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6765\u9884\u6d4b\u54ea\u4e9b\u5ba2\u6237\u5c06\u79bb\u5f00\u8be5\u670d\u52a1\uff0c\u6b64\u7b14\u8bb0\u672c\u4e0a\u4f7f\u7528\u7684\u6570\u636e\u96c6\u662f\u4f4d\u4e8eKaggle\u7684[Telco Customer-Customer-Customer](https\uff1a//www.kaggle.com/blastchar/telco-Customer-Churn)\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\uff0c\u672c\u6587\u8fd8\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u63a2\u7d22\u6027\u7684\u6570\u636e\u5206\u6790\u3002\u53e6\u4e00\u70b9\u662f\u4f7f\u7528Deepnote\u4f5c\u4e3a\u5f00\u53d1\u73af\u5883\uff0c\u4f7f\u7528[PyCaret](https\uff1a//pykart.org/)Python\u6a21\u5757\u6765\u5236\u4f5c\u6240\u6709\u7684\u5b9e\u9a8c\u6d41\u6c34\u7ebf\u3002\n#1.1\u73af\u5883\u8bbe\u7f6e\u672c\u5de5\u4f5c\u4f7f\u7528\u7684\u6a21\u5757\uff0cPyCaret\u7684\u4eae\u70b9\u548c[Ploly](https\uff1a//plotly.com/)\u7684Good Plot\u3002\n#Standard import padas pd\u5bfc\u5165numpy as NP#pyaret from pyaret.\u5206\u7c7b\u5bfc\u5165*#Plotly\u4e2d\u7684\u7ed8\u56fe.Offline\u5bfc\u5165iPlot\u5bfc\u5165Plot.graph_Objects As Go Plot\u5bfc\u5165.Figure_Factory As ff from plotly.subplots\u5bfc\u5165make_subplots as SNS#SkLearning Tools from skLearning.\u9884\u5904\u7406\u4eceskLearning\u5bfc\u5165LabelEncode\u3002metrics\u5bfc\u5165*#\u6765\u81eaDatetime\u5bfc\u5165Date\u5bfc\u5165\u8b66\u544a.filterWarning(&#34\uff1b\n#\u7ed3\u6784\u5316\u6570\u636e\u5e2e\u52a9\u5668\u51fd\u6570##\u83b7\u53d6\u6570\u636e\u96c6def Dataset_info(DataSet\uff0cDataset_Name\uff1aStr)\uff1aprint(f&#34\uff1bDataSet Name\uff1a{Dataset_Name}|\u6837\u672c\u6570\uff1a{DataSet.Shape[0]}|\u5217\u6570\uff1a{DataSet.Shape[1]}&#34\uff1b)print(30*&#34\uff1b=&#34\uff1b)print(&#34\uff1b\u5217\u6570\u636e\u7c7b\u578b&#34\uff1b)Print(DataSet.dtype)Print(30*&#34\uff1b=&#34\uff1b)MISSING_DATA=DataSet.isnull()\u3002SUM()IF SUM(MISSING_DATA)&gt\uff1b0\uff1aPRINT(MISSING_DATA[MISSING_DATA.value&gt\uff1b0])ELSE\uff1aPRINT(&#34\uff1b\u6b64\u6570\u636e\u96c6\u65e0\u7f3a\u5931\u6570\u636e\uff01&#34\uff1b)PRINT(30*&#34\uff1b=&#34\uff1b)PRINT(f&#34\uff1b\u5185\u5b58\u4f7f\u7528\u91cf\uff1a{nP\u3002ROUND(\u6570\u636e\u96c6.Memory_Usage(index=True)\u3002sum()/10e5\uff0c3)}MB&#34\uff1b)##DataSet\u91c7\u6837def Data_Samping(DataSet\uff0cfrac\uff1aFloat\uff0cRandom_Seed\uff1aInt)\uff1adata_sampled_a=DataSet.sample(frac=frac\uff0cRandom_state=Random_Seed)data_sampled_b=DataSet.drop(data_sampled_a.index).Reset_index(drop=True)data_sampled_a.Reset_index(drop=True\uff0cInplace=True)return data_sampled_a\uff0cdata_sampled_b(DROP=True\uff0cInplace=True)\u8fd4\u56deDATA_SAMPLED_a\uff0cDATA_SAMPLED_b\u3002x_\u8f74\uff1a\u5b57\u7b26\u4e32\uff0cy_\u8f74\uff1a\u5b57\u7b26\u4e32)\uff1a\u989c\u8272=[&#34\uff1b#0080ff&#34\uff1b\uff0c]*len(Data)Colors[0]=&#34\uff1b#ff8000&#34\uff1btrace=go.Bar(y=data.value\uff0cx=data.index\uff0ctext=data.value\uff0cmark_color=color)Layout=go.Layout(autosize=false\uff0cHeight=600\uff0ctitle={&#34\uff1btext&#34\uff1b\uff1aPLOT_Title\uff0c&#34\uff1by&#34\uff1b\uff1a0.9\uff0c&#34\uff1bx&#34\uff1b\uff1a0.5\uff0c&#34\uff1bx\u951a\u5b9a&#34\uff1b\uff1a&#34\uff1bcenter&#34\uff1b\uff0c&#34\uff1btop&#34\uff1b}\uff0cxaxis={&#34\uff1btitle&#34\uff1b\uff1ax_axis}\uff0cyAxis={&#34\uff1btitle&#34\uff1b\uff1ay_axis}\uff0c)fig=go.Figure(data=trace\uff0clayout=layout)fig.update_layout(template=&#34\uff1bSimple_White&#34\uff1b)\u56fe.update_traces(textposition=&#34\uff1bout&#34\uff1b\uff0ctextFONT_SIZE=14\uff0cMARKER=DICT(LINE=DICT(COLOR=&#34\uff1b#000000&#34\uff1b\uff0cwidth=2)\u56fe.update_yaxes(auto argin=True)iPlot(Fig)##Pie Pie Chart def PIE_Plot(Data\uff0cPlot_Title\uff1aStr)\uff1atrace=go.Pie(labels=data.index\uff0cvalue=data.values)Layout=go.Layout(autosize=false\uff0ctitle={&#34\uff1btext&#34\uff1b\uff1alot_title\uff0c&#34\uff1by&#34\uff1b\uff1a0.9\uff0c&#34\uff1bx&#34)Layout=go.Layout(autosize=false\uff0ctitle={&#34\uff1btext&#34\uff1b\uff1alot_title\uff0c&#34\uff1by&#34\uff1b\uff1a0.9\uff0c&#34\uff1bx&#34\uff1b\uff1a0.5\uff0c&#34\uff1bx\u951a\u5b9a&#34\uff1b\uff1a&#34\uff1b\u4e2d\u5fc3&#34\uff1b\uff0c&#34\uff1by\u951a\u5b9a&#34\uff1b\uff1a&#34\uff1b\u9876\u90e8&#34\uff1b})Figure(Data=TRACE\uff0cLayout=Layout)\u56fe.update_traces(textFONT_SIZE=14\uff0cMARKER=DICT(LINE=DICT(COLOR=&#34\uff1b#000000&#34\uff1b\uff0cwidth=2)\u56feupdate_yaxes(auto argin=True)iPlot(Fig)##\u76f4\u65b9\u56fe\u5b9a\u4e49\u76f4\u65b9\u56fe_Plot(data\uff0clot_title\uff1astr\uff0cy_axis\uff1astr)\uff1atrace=go.Histgraph(x=data)Layout=go.Layout(autosize=false\uff0ctitle={&#34\uff1btext&#34\uff1b\uff1alot_title\uff0c&#34\uff1by&#34\uff1b\uff1a0.9\uff0c&#34\uff1bx&#34\uff1b\uff1a0.5\uff0c&#34\uff1bx\u951a\u5b9a&#34\uff1b\uff1a&#34\uff1b\u4e2d\u5fc3&#34\uff1b\uff0c&#34\uff1b\u9876\u90e8&#34\uff1b}\uff0cyAxis={&#34\uff1btitle&#34\uff1b\uff1ay_axis})Figure(Data=TRACE\uff0cLayout=Layout)\u56feUPDATE_TRACE(MARKER=DICT(LINE=DICT(COLOR=&#34\uff1b#000000&#34\uff1b\uff0cwidth=2)\u56fe.update_layout(template=&#34\uff1bsim\n#3.1\u6d41\u5931\u7387\u5206\u5e03\u68c0\u67e5\u5ba2\u6237\u7aef\u6d41\u5931\u7387\u5206\u5e03\u662f\u5426\u5b58\u5728\u4e0d\u5e73\u8861\uff0c\u56e0\u4e3a\u529f\u80fd\u662f\u76ee\u6807\uff0c\u6240\u4ee5\u5728\u5904\u7406\u4e0d\u5747\u8861\u7684\u7c7b\u65f6\uff0c\u9009\u62e9\u4ec0\u4e48\u7b56\u7565\u975e\u5e38\u91cd\u8981\u3002&lt\uff1bbr&gt\uff1b\u4e0b\u9762\u7684\u997c\u56fe\u663e\u793a\u4e86\u529f\u80fd\u5206\u5e03\u3002\n\u6709\u4e00\u4e9b\u6d41\u5931\u5206\u5e03\u7684\u4e0d\u5e73\u8861\uff0c26.5%\u7684\u5ba2\u6237\u6709\u8fc7\u6d41\u5931\uff0c\u4e00\u4e2a\u6807\u7b7e\u7684\u5c11\u91cf\u51fa\u73b0\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u597d\u7684\u9884\u6d4b\u3002&lt\uff1bbr&gt\uff1b\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff1a*\u8fdb\u884c\u968f\u673a\u8fc7\u91c7\u6837\uff0c\u590d\u5236\u5c11\u6570\u7c7b\u7684\u4e00\u4e9b\u6837\u672c\u4ee5\u8fbe\u5230\u5e73\u8861\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fc7\u5ea6\u62df\u5408\u7684\u6a21\u578b\u3002*\u8fdb\u884c\u968f\u673a\u4e0b\u91c7\u6837\uff0c\u4ece\u591a\u6570\u7c7b\u4e2d\u5254\u9664\u4e00\u4e9b\u6837\u672c\uff0c\u8fd9\u8fbe\u5230\u4e86\u5e73\u8861\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\uff0c\u4e0d\u4f1a\u5411\u6a21\u578b\u63d0\u4f9b\u6536\u96c6\u5230\u7684\u6837\u672c\u3002*\u8fdb\u884c\u968f\u673a\u4e0b\u91c7\u6837\uff0c\u4ece\u591a\u6570\u7c7b\u4e2d\u5254\u9664\u4e00\u4e9b\u6837\u672c\uff0c\u8fd9\u8fbe\u5230\u4e86\u5e73\u8861\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\uff0c\u4e0d\u4f1a\u5411\u6a21\u578b\u63d0\u4f9b\u6536\u96c6\u5230\u7684\u6837\u672c\u3002*\u53e6\u4e00\u79cd\u91cd\u91c7\u6837\u6280\u672f\uff0c\u5982Smote\u3002*\u9009\u62e9\u5904\u7406\u4e0d\u5e73\u8861\u6570\u636e\u96c6\u7684\u6307\u6807\uff0c\u5982F1\u5f97\u5206\u3002\u6d41\u5931\u95ee\u9898\u4e0e\u5ba2\u6237\u7aef\u7559\u5b58\u6709\u5173\uff0c\u56e0\u6b64\u503c\u5f97\u68c0\u67e5\u8bef\u62a5\uff0c\u56e0\u6b64\u7cbe\u786e\u5ea6\u548c\u53ec\u56de\u7387\u6307\u6807\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u662f\u5fc5\u987b\u7684\u3002&lt\uff1bbr&gt\uff1bF1\u5206\u6570\u7528\u4e8e\u68c0\u67e5\u6a21\u578b\u9884\u6d4b\u7684\u8d28\u91cf\uff0c\u56e0\u4e3a\u8be5\u5ea6\u91cf\u662f\u7cbe\u5ea6\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u503c\u3002\n\u5408\u540c\u7c7b\u578b\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u5206\u6790\u8be5\u670d\u52a1\u5bf9\u5ba2\u6237\u6d41\u5931\u7684\u5f71\u54cd\uff0c\u4e0b\u9762\u663e\u793a\u4e86\u672a\u6d41\u5931\u5ba2\u6237\u7684\u5408\u540c\u7c7b\u578b\u7684\u66f2\u7ebf\u56fe\u3002\nDF_AUX=DataSet.query(&#39\uff1bFLOWN==&#34\uff1b\u5426&#34\uff1b&#39\uff1b)DF_AUX=DF_AUX[&#34\uff1bContract&34\uff1b].value_Counts()bar_lot(DF_AUX\uff0c&#34\uff1b&lt\uff1bb&&gt;\uff1b\u672a\u6d41\u5931\u5ba2\u6237\u7684\u5408\u540c\u7c7b\u578b&lt\uff1b/b&&gt;\uff1b&#34\uff1b\uff0c&#34\uff1b&lt\uff1bi&gt\uff1b\u5408\u540c&lt\uff1b/i&gt\u3002&lt\uff1bi&gt\uff1b\u8ba1\u6570&lt\uff1b/i&gt\uff1b&#34\uff1b)\u3002\n\u7814\u7a76\u8868\u660e\uff0c\u4e0e\u5e74\u5ea6\u5408\u540c\u76f8\u6bd4\uff0c\u6309\u6708\u5408\u540c\u662f\u7b2c\u4e00\u6b21\uff0c\u4f46\u5408\u540c\u6570\u91cf\u76f8\u5dee\u4e0d\u5927\u3002&lt\uff1bbr&gt\uff1b\u4e3a\u4e86\u8fdb\u884c\u66f4\u597d\u7684\u6bd4\u8f83\uff0c\u540c\u6837\u7684\u66f2\u7ebf\u56fe\u663e\u793a\u5728\u88ab\u6405\u52a8\u7684\u5ba2\u6237\u7aef\u4e0a\u3002\n\u73b0\u5728\uff0c\u6708\u5ea6\u5408\u540c\u548c\u5e74\u5ea6\u5408\u540c\u4e4b\u95f4\u7684\u5dee\u5f02\u66f4\u5927\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5e74\u5ea6\u5408\u540c\u66f4\u597d\u5730\u7559\u4f4f\u5ba2\u6237\u7684\u7ed3\u8bba\uff0c\u6216\u8bb8\u5fe0\u8bda\u5ea6\u4fc3\u9500\u53ef\u80fd\u6709\u52a9\u4e8e\u964d\u4f4e\u6d41\u5931\u7387\u3002&lt\uff1bbr&gt\uff1b\u7531\u4e8e\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u68c0\u67e5\u9010\u6708\u5408\u540c\u7c7b\u578b\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u6700\u597d\u67e5\u770b\u6b64\u5408\u540c\u4e2d\u672a\u6d41\u5931\u5ba2\u6237\u7684\u6708\u8d39\u548c\u603b\u8d39\u7528\u5206\u5e03\u3002\nDF_AUX=DataSet.query(&#39\uff1b(Contract==&#34\uff1b\u9010\u6708&34\uff1b)and(CURN==&#34\uff1bNo&#34\uff1b)&#39\uff1b)STUSTGRAM_SUBPLOT(DF_AUX\uff0cDF_AUX\uff0c&#34\uff1bMonthlyCharges&#34\uff1b\uff0c&#34\uff1bTotalCharges&#34\uff1b\uff0c&lt\uff1bb&lt\uff1b\u672a\u6d41\u5931\u5ba2\u6237\u7684\u6708\u5ea6\u5408\u540c\u8d39\u7528\u5206\u914d\u3002(A)\u6bcf\u6708\u8d39\u7528\u5206\u914d&#34\uff1b\u3001&#34\uff1b\uff1b(B)\u603b\u8d39\u7528\u5206\u914d&#34\uff1b)\u3002\n\u4ece\u5730\u5757\u4e0a\u770b\uff0c\u53ef\u4ee5\u8bf4\u5f88\u591a\u5ba2\u6237\u53ea\u662f\u6536\u53d6\u4e86\u51e0\u7b14\u8d39\u7528\uff0c\u4e3b\u8981\u662f\u603b\u8d39\u7528\u3002&lt\uff1bbr&gt\uff1b\u5728\u4ee5\u4e0b\u56fe\u8868\u4e2d\uff0c\u5206\u6790\u4e86\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u9488\u5bf9\u7684\u662f\u6d41\u5931\u7684\u5ba2\u6237\u7aef\u3002\nDF_AUX=DataSet.query(&#39\uff1b(Contract==&#34\uff1b\u9010\u6708&34\uff1b)and(CURN==&#34\uff1bYes&#34\uff1b)&#39\uff1b)STUSTGRAM_SUBPLOT(DF_AUX\uff0cDF_AUX\uff0c&#34\uff1bMonthlyCharges&#34\uff1b\uff0c&#34\uff1bTotalCharges&#34\uff1b\uff0c&lt\uff1bb&lt\uff1b\u5ba2\u6237&&gt;\u6708\u5408\u540c\u7684\u8d39\u7528\u5206\u914d\u3002(A)\u6bcf\u6708\u8d39\u7528\u5206\u914d&#34\uff1b\u3001&#34\uff1b\uff1b(B)\u603b\u8d39\u7528\u5206\u914d&#34\uff1b)\u3002\n\u603b\u6536\u8d39\u4e5f\u6709\u540c\u6837\u7684\u884c\u4e3a\uff0c\u4f46\u5f88\u591a\u6d41\u5931\u5ba2\u6237\u7684\u6708\u8d39\u90fd\u5f88\u9ad8\uff0c\u4e5f\u8bb8\u53d8\u4ef7\u7684\u91d1\u989d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ba2\u6237\u79bb\u5f00\u670d\u52a1\u3002&lt\uff1bbr&gt\uff1b\u4ecd\u7136\u662f\u6309\u6708\u7b7e\u7ea6\u7684\uff0c\u73b0\u5728\u662f\u5206\u6790\u6d41\u5931\u5ba2\u6237\u6700\u5e38\u7528\u7684\u4ed8\u6b3e\u65b9\u5f0f\u7684\u65f6\u5019\u4e86\u3002\nDF_AUX=DataSet.query((&#39\uff1bContract==\u9010\u6708&#39\uff1b)and(&#39\uff1bTraffn==&#34\uff1b\u662f&#34\uff1b&#39\uff1b))DF_AUX=DF_AUX[&#34\uff1bPaymentMethod&34\uff1b].value_Counts()bar_lot(DF_AUX\uff0c&34\uff1b&lt\uff1bb&&gt;\uff1b\u6708\u5408\u540c\u7ffb\u8f6c\u5ba2\u6237&lt\uff1b/b&\u3002\uff0c&#34\uff1b&lt\uff1bi&&gt;\uff1b\u4ed8\u6b3e\u65b9\u5f0f&lt\uff1b/i&gt\uff1b&#34\uff1b\uff0c&#34\uff1b&lt\uff1bi&&gt;\uff1b\u8ba1\u6570&lt\uff1b/i&gt\uff1b&#34\uff1b)\u3002\n\u8bb8\u591a\u6d41\u5931\u7684\u5ba2\u6237\u8fc7\u53bb\u5e38\u5e38\u4f7f\u7528\u7535\u5b50\u652f\u7968\u3001\u81ea\u52a8\u652f\u4ed8\uff0c\u56e0\u4e3a\u94f6\u884c\u8f6c\u8d26\u6216\u4fe1\u7528\u5361\u4e5f\u6709\u4e00\u4e9b\u6d41\u5931\u7684\u5ba2\u6237\u3002\u4e00\u4e2a\u597d\u4e3b\u610f\u53ef\u4ee5\u5411\u4f7f\u7528\u81ea\u52a8\u652f\u4ed8\u65b9\u5f0f\u7684\u5ba2\u6237\u8fdb\u884c\u4fc3\u9500\u3002&lt\uff1bbr&gt\uff1b\u6700\u540e\uff0c\u6d41\u5931\u5ba2\u6237\u7684\u4efb\u671f\u3002\nDF_AUX=DataSet.query((&#39\uff1bContract==\u6708\u5ea6&39\uff1b)and(&#39\uff1bFUSURN==&#34\uff1b\u662f&#34\uff1b&#39\uff1b))DF_AUX=DF_AUX[&#34\uff1bTenure&34\uff1b].value_Counts().head(5)bar_lot(DF_AUX\uff0c&34\uff1b&lt\uff1bb&&gt;\uff1b\u6d41\u5931\u5ba2\u6237\u7684\u6708\u5ea6\u5408\u540c\u671f\u9650&b\uff1b/b\u3002&#34\uff1b\uff0c&lt\uff1bi&&gt;\uff1b\u4efb\u671f&lt\uff1b/i&&gt;\uff1b&#34\uff1b\uff0c&lt\uff1bi&&gt;\uff1b\u8ba1\u6570&lt\uff1b/i&gt\uff1b&#34\uff1b)\u3002\n\u5927\u591a\u6570\u5ba2\u6237\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u6708\u7684\u670d\u52a1\uff0c\u4f3c\u4e4e\u5ba2\u6237\u4e60\u60ef\u4e8e\u670d\u52a1\u68c0\u67e5\u8d28\u91cf\u6216\u4e0d\u80fd\u505c\u7559\u7684\u8d39\u7528\u91d1\u989d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5ba2\u6237\u6bcf\u6708\u7684\u8d39\u7528\u5f88\u9ad8\uff0c\u603b\u8d39\u7528\u5f88\u5c0f\uff0c\u56e0\u4e3a\u5ba2\u6237\u53ea\u505c\u7559\u4e86\u5f88\u77ed\u7684\u65f6\u95f4\u3002\n\u5728\u5efa\u7acbPyCaret\u4e4b\u524d\uff0c\u5c06\u968f\u673a\u62bd\u53d610%\u5927\u5c0f\u7684\u6570\u636e\u96c6\u6837\u672c\uff0c\u4ee5\u4fbf\u7528\u770b\u4e0d\u89c1\u7684\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u3002\nPyCaret\u7684\u8bbe\u7f6e\u4f7f\u752890%\u7684\u6570\u636e\u6837\u672c\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528\u6a21\u5757\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570(`setup`)\u3002&lt\uff1bbr&gt\uff1b\u5b83\u53ef\u4ee5\u914d\u7f6e\u591a\u79cd\u9009\u9879\uff0c\u5982\u6570\u636e\u9884\u5904\u7406\u3001\u529f\u80fd\u5de5\u7a0b\u7b49\u3002PyCaret\u7684\u7b80\u5355\u6027\u548c\u9ad8\u6548\u6027\u4e3a\u6a21\u578b\u7684\u539f\u578b\u5236\u4f5c\u8d62\u5f97\u4e86\u5927\u91cf\u65f6\u95f4\u3002&lt\uff1bbr&gt\uff1b\u6bcf\u4e2a\u8bbe\u7f6e\u90fd\u662f\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u5bf9\u4e8e\u6b64\u95ee\u9898\uff0c\u4f7f\u7528\u4ee5\u4e0b\u9009\u9879\uff1a*\u4f7f\u7528Z\u5206\u6570\u5bf9\u6570\u5b57\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\u3002*\u4f7f\u7528\u6392\u5217\u91cd\u8981\u6027\u6280\u672f\u7684\u7279\u5f81\u9009\u62e9\u3002*\u5254\u9664\u5f02\u5e38\u503c\u3002*\u57fa\u4e8e\u591a\u91cd\u5171\u7ebf\u6027\u7684\u7279\u5f81\u79fb\u9664\u3002*\u529f\u80fd\u547c\u53eb\u53d8\u6362\u3002*\u5ffd\u7565\u8981\u7d20\u7684\u4f4e\u65b9\u5dee\u3002*PCA\u7528\u4e8e\u964d\u7ef4\uff0c\u56e0\u4e3a\u6570\u636e\u96c6\u6709\u5f88\u591a\u7279\u5f81\u3002*`MonthlyCharges`\u548c`TotalCharges`\u529f\u80fd\u7684\u6570\u503c\u88c5\u7bb1\u3002*\u5217\u8f66\u6837\u672c\u536070%\uff0c\u6d4b\u8bd5\u6837\u672c\u536030%\u3002\nexp01=SETUP(DATA=DATA\uff0ctarget=&#34\uff1bFLOWN&#34\uff1b\uff0cSESSION_ID=RANDOM_SEED\uff0cIGNORE_FEATURES=[&#34\uff1bCustomerID&#34\uff1b]\uff0cNUMERIC_FEATURES=[&#34\uff1bSeniorCitizen&#34\uff1b]\uff0cNormize=True\uff0cFeature_Selection=True\uff0cRemove_Outliers=True\uff0cRemove_Multiplomlyline=True\uff0cTransform=True\uff0cIgnore_Low_Variance=True\uff0cPCA=True\uff0cbin\u3002])\u3002\nPyCaret\u9996\u5148\u663e\u793a\u662f\u5426\u6240\u6709\u7684\u7279\u5f81\u7c7b\u578b\u90fd\u4e0e\u5176\u5bf9\u5e94\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u6309\u7a7a\u767d\u680f\u4e0a\u7684Enter\u952e\uff0c\u8bbe\u7f6e\u5b8c\u6210\uff0c\u663e\u793a\u5b9e\u9a8c\u603b\u7ed3\u3002\nPyCaret\u4e0a\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u662f\u6784\u5efa\u591a\u4e2a\u6a21\u578b\u5e76\u6bd4\u8f83\u6700\u597d\u7684\u5ea6\u91cf\uff01&lt\uff1bbr&gt\uff1b\u7531\u4e8e\u76ee\u6807\u7c7b\uff0c\u6a21\u578b\u6309F1\u5206\u6570\u6392\u5e8f\u3002\nPyCaret\u5efa\u8bae\u7684\u6700\u4f73\u6a21\u578b\u662f\u4e8c\u6b21\u5224\u522b\u5206\u6790(QDA)\uff0cF1\u5f97\u5206\u57280.6\u5de6\u53f3\uff0c\u53ec\u56de\u7387\u5f88\u597d\uff0c\u57280.7\u5de6\u53f3\u3002&lt\uff1bbr&gt\uff1b\u8ba9\u6211\u4eec\u575a\u6301QDA\u5e76\u521b\u5efa\u6a21\u578b\u3002\n\u8fd9\u662f\u53ef\u80fd\u7684\u8c03\u6574\u57fa\u7840\u6a21\u578b\u548c\u4f18\u5316\u7684\u6307\u6807\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cF1\u5206\u6570\u3002\n\u6709\u4e00\u4e2a\u6539\u8fdb\u7684\u57fa\u7840\u6a21\u5f0f\u7684F1\u5f97\u5206\uff01\u73b0\u5728\uff0c\u6211\u4eec\u6765\u770b\u770b\u8c03\u6574\u540e\u7684\u6a21\u578b\u4f7f\u7528\u4e86\u54ea\u4e9b\u8d85\u53c2\u6570\u3002\n\u5728\u8c03\u4f18\u7684\u6a21\u578b\u4e0a\uff0c`reg_param`\u8f83\u9ad8\u3002&lt\uff1bbr&gt\uff1b\u4f7f\u7528QDA\u7684\u552f\u4e00\u95ee\u9898\u662f\u65e0\u6cd5\u83b7\u5f97\u6a21\u578b\u7684\u7279\u5f81\u91cd\u8981\u6027\u56fe\uff0c\u4f46\u8be5\u6a21\u578b\u7528\u4e8e\u5728EDA\u4e0a\u83b7\u5f97\u6709\u5173\u6570\u636e\u7684\u4e00\u4e9b\u5f88\u597d\u7684\u89c1\u89e3\u3002&lt\uff1bbr&gt\uff1bPyCaret\u8fd8\u5177\u6709\u5236\u4f5c\u96c6\u6210\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u6b64\u5b9e\u73b0\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u888b\u88c5\u6a21\u578b\u3002\n\u888b\u88c5\u6a21\u578b\u63d0\u9ad8\u4e86\u4e00\u70b9F1\u7684\u5206\u6570\uff0c\u5b83\u4e5f\u53ef\u4ee5\u4f7f\u6df7\u5408\u548c\u5806\u53e0\u6a21\u578b\u4e0ePyCaret\uff0c\u8fd9\u4e24\u4e2a\u6a21\u578b\u90fd\u662f\u4f7f\u7528\u8c03\u6574\u548c\u888b\u88c5\u6a21\u578b\u521b\u5efa\u7684\u8f6f\u65b9\u6cd5\u3002\n\u867d\u7136\u5806\u53e0\u6a21\u578b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u7cbe\u5ea6\uff0c\u4f46\u6df7\u5408\u540e\u7684F1\u4ecd\u7136\u83b7\u5f97\u4e86\u66f4\u597d\u7684F1\uff0c\u5e76\u88ab\u4fdd\u5b58\u4e3a\u6700\u4f73\u6a21\u578b\u3002&lt\uff1bbr&gt\uff1b\u6b64\u6a21\u578b\u5df2\u4fdd\u5b58\uff0c\u5176ROC\u66f2\u7ebf\u5982\u4e0b\u6240\u793a\u3002\n\u6d4b\u8bd5\u662f\u4f7f\u7528PyCaret\u5728\u8bbe\u7f6e\u4e2d\u83b7\u5f97\u7684\u5269\u4f5930%\u7684\u6570\u636e\u8fdb\u884c\u7684\uff0c\u91cd\u8981\u7684\u662f\u8981\u786e\u4fdd\u6a21\u578b\u4e0d\u4f1a\u8fc7\u5ea6\u62df\u5408\u3002\n\u7531\u4e8e\u6a21\u578b\u7684\u4e00\u5207\u90fd\u662f\u6b63\u786e\u7684\uff0c\u73b0\u5728\u662f\u6700\u540e\u786e\u5b9a\u5b83\u7b26\u5408\u6240\u6709\u6570\u636e\u7684\u65f6\u5019\u4e86\u3002\n\u5269\u4e0b\u768410%\u7684\u6570\u636e\u662f\u7528\u770b\u4e0d\u89c1\u7684\u6837\u672c\u8fdb\u884c\u9884\u6d4b\u7684\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u62ec\u4e00\u4e9b\u79bb\u7fa4\u503c\uff0c\u8fd9\u5c31\u662f\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002&lt\uff1bbr&gt\uff1b\u53ea\u663e\u793aKappa\u5206\u6570\uff0c\u56e0\u4e3a\u7126\u70b9\u662fF1\u5206\u6570\u3002&lt\uff1bbr&gt\uff1b\u4e0d\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u8f6c\u6362\uff0cPyCaret\u4f1a\u8fd9\u6837\u505a\u3002\nPyCaret\u5141\u8bb8\u4fdd\u5b58\u6240\u6709\u8981\u90e8\u7f72\u7684\u7ba1\u9053\u5b9e\u9a8c\u548c\u6a21\u578b\u3002&lt\uff1bbr&gt\uff1b\u5efa\u8bae\u5c06\u5176\u4e0e\u5b9e\u9a8c\u65e5\u671f\u4e00\u8d77\u4fdd\u5b58\u3002\n\u4ece\u8fd9\u91cc\u7ed9\u51fa\u7684\u7ed3\u679c\u548c\u89e3\u91ca\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e9b\u7ed3\u8bba\uff1a*\u5408\u540c\u7c7b\u578b\u4e0e\u6d41\u5931\u7684\u5ba2\u6237\u6709\u4e25\u683c\u7684\u5173\u7cfb\uff0c\u6708\u5ea6\u5408\u540c\u7684\u9ad8\u989d\u6536\u8d39\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ba2\u6237\u79bb\u5f00\u670d\u52a1\u3002*\u5bf9\u4e8e\u6a21\u578b\u505a\u51fa\u7684\u9884\u6d4b\uff0c\u57fa\u4e8e\u7cbe\u5ea6\u548c\u53ec\u56de\u5206\u6570\uff0c\u7531\u4e8eF1\u5206\u6570\u8bd5\u56fe\u663e\u793a\u8fd9\u4e24\u4e2a\u6307\u6807\u4e4b\u95f4\u7684\u5e73\u8861\uff0c\u7cbe\u5ea6\u63a5\u8fd154%\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u6a21\u578b\u6b63\u786e\u9884\u6d4b\u4e8654%\u7684\u5206\u7c7b\u5ba2\u6237\u4e3a\u6d41\u5931\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u53ec\u56de\u7387\u5f88\u597d\uff0c\u5176\u4e2d\u7ea680%\u7684\u5b9e\u9645\u6d41\u5931\u5ba2\u6237\u88ab\u6b63\u786e\u9884\u6d4b\u3002*\u5fc5\u987b\u4f7f\u7528\u6709\u5229\u4e8e\u5546\u4e1a\u5229\u76ca\u7684\u6307\u6807\uff0c\u662f\u5426\u9700\u8981\u5bf9\u6d41\u5931\u7684\u5ba2\u6237\u8fdb\u884c\u66f4\u6b63\u786e\u7684\u9884\u6d4b\uff0c\u6216\u8005\u83b7\u5f97\u66f4\u591a\u8fd9\u4e9b\u5ba2\u6237\u7684\u4e00\u90e8\u5206\uff1f*\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\u968f\u7740\u6570\u636e\u91cd\u65b0\u91c7\u6837\u800c\u5927\u5e45\u63d0\u9ad8\u7ed3\u679c\u3002\u4ece\u4f7f\u7528\u7684\u5de5\u5177\u548c\u73af\u5883\u6765\u770b\uff1a*Deepnote\u662f\u4f7f\u7528Python\u7b14\u8bb0\u672c\u7684\u6781\u597d\u5de5\u5177\uff0c\u8bbe\u8ba1\u6e05\u6670\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u53d8\u91cf\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5c06\u7b14\u8bb0\u672c\u4f5c\u4e3a\u6587\u7ae0\u53d1\u5e03\uff0c\u547d\u4ee4\u7ec8\u7aef(\u5982GIT)\u7b49\u3002*PyCaret\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u5b83\u5927\u5927\u52a0\u5feb\u4e86\u6a21\u578b\u7684\u6784\u5efa\u901f\u5ea6\uff0c\u5e76\u4e14\u9884\u5904\u7406\u975e\u5e38\u6709\u7528\uff0c\u9664\u4e86\u4fdd\u5b58\u548c\u90e8\u7f72\u6a21\u578b\u7684\u529f\u80fd\u4e4b\u5916\u3002\u8c22\u8c22\u9605\u8bfb\uff01", "note_en": "Customer Churn is when customers leave a service in a given period of time, what is bad for business.This work has as objective to build a machine learning model to predict which customers will leave the service and the dataset used is the Telco Customer Churn, hosted at Kaggle. An Exploratory Data Analysis is made to a better understand the data. Another point of this work is use of Deepnote as development enviroment and the PyCaret Python Module to create the experiment pipeline.\n ## 1. IntroductionCustomer Churn  is when customers leave a service  in a given period of time , what  is bad  for business . &lt;br &gt;This work has  as objective to build a machine learning model to predict what customers will leave the service , the dataset used on this notebook  is the  [Telco Customer Churn ] (https : //www .kaggle .com /blastchar /telco -customer -churn ) hosted at Kaggle . Also , an Exploratory Data Analysis  is made to a better understand about the data . Another point on this work  is use Deepnote  as development enviroment  and the  [PyCaret ] (https : //pycaret .org / ) Python Module to make  all the experiment pipeline .\n   ### 1.1 Enviroment SetupThe Modules used  for this work , highlights  for PyCaret  and good plots by  [Plotly ] (https : //plotly .com / ) .\n   # Standard import pandas  as pd import numpy  as np # Pycaret from pycaret .classification  import  * # Plots from plotly .offline  import iplot import plotly .graph_objects  as go import plotly .figure_factory  as ff from plotly .subplots  import make_subplots import seaborn  as sns # Sklearn tools from sklearn .preprocessing  import LabelEncoder from sklearn .metrics  import  * # Extras from datetime  import date import warningswarnings .filterwarnings ( &#34;ignore&#34; ) # Datapath and Setupdata_path  =  &#34;/datasets/telco-customer-churn/&#34;random_seed  =  142\n      # Helper functions for structured data  ## Get info about the dataset  def  dataset_info (dataset , dataset_name :  str ) :  print (  f&#34;Dataset Name:   {dataset_name }  | Number of Samples:   {dataset .shape [ 0 ] }  | Number of Columns:   {dataset .shape [ 1 ] } &#34; )  print ( 30 * &#34;=&#34; )  print ( &#34;Column Data Type&#34; )  print (dataset .dtypes )  print ( 30 * &#34;=&#34; )\r missing_data  = dataset .isnull ( ) . sum ( )  if  sum (missing_data )  &gt;  0 :  print (missing_data [missing_data .values  &gt;  0 ] )  else :  print ( &#34;No Missing Data on this Dataset!&#34; )  print ( 30 * &#34;=&#34; )  print (  f&#34;Memory Usage:   {np . round (dataset .memory_usage (index = True ) . sum ( )  /  10e5 ,  3 ) }  MB&#34; )  ## Dataset Sampling  def  data_sampling (dataset , frac :  float , random_seed :  int ) :\r data_sampled_a  = dataset .sample (frac =frac , random_state =random_seed )\r data_sampled_b  = dataset .drop (data_sampled_a .index ) .reset_index (drop = True )\r data_sampled_a .reset_index (drop = True , inplace = True )  return data_sampled_a , data_sampled_b \r ## Bar Plot  def  bar_plot (data , plot_title :  str , x_axis :  str , y_axis :  str ) :\r colors  =  [ &#34;#0080ff&#34; , ]  *  len (data )\r colors [ 0 ]  =  &#34;#ff8000&#34;\r trace  = go .Bar (y =data .values , x =data .index , text =data .values , \r marker_color =colors )\r layout  = go .Layout (autosize = False , height = 600 ,\r title = { &#34;text&#34;  : plot_title ,  &#34;y&#34;  :  0.9 ,  &#34;x&#34;  :  0.5 ,  &#34;xanchor&#34;  :  &#34;center&#34; ,  &#34;yanchor&#34;  :  &#34;top&#34; } , \r xaxis = { &#34;title&#34;  : x_axis } ,\r yaxis = { &#34;title&#34;  : y_axis } , )\r fig  = go .Figure (data =trace , layout =layout )\r fig .update_layout (template = &#34;simple_white&#34; )\r fig .update_traces (textposition = &#34;outside&#34; ,\r textfont_size = 14 ,\r marker = dict (line = dict (color = &#34;#000000&#34; , width = 2 ) ) ) \r fig .update_yaxes (automargin = True )\r iplot (fig )  ## Plot Pie Chart  def  pie_plot (data , plot_title :  str ) :\r trace  = go .Pie (labels =data .index , values =data .values )\r layout  = go .Layout (autosize = False ,\r title = { &#34;text&#34;  : plot_title ,  &#34;y&#34;  :  0.9 ,  &#34;x&#34;  :  0.5 ,  &#34;xanchor&#34;  :  &#34;center&#34; ,  &#34;yanchor&#34;  :  &#34;top&#34; } )\r fig  = go .Figure (data =trace , layout =layout )\r fig .update_traces (textfont_size = 14 ,\r marker = dict (line = dict (color = &#34;#000000&#34; , width = 2 ) ) )\r fig .update_yaxes (automargin = True ) \r iplot (fig )  ## Histogram  def  histogram_plot (data , plot_title :  str , y_axis :  str ) :\r trace  = go .Histogram (x =data )\r layout  = go .Layout (autosize = False ,\r title = { &#34;text&#34;  : plot_title ,  &#34;y&#34;  :  0.9 ,  &#34;x&#34;  :  0.5 ,  &#34;xanchor&#34;  :  &#34;center&#34; ,  &#34;yanchor&#34;  :  &#34;top&#34; } , \r yaxis = { &#34;title&#34;  : y_axis } )\r fig  = go .Figure (data =trace , layout =layout )\r fig .update_traces (marker = dict (line = dict (color = &#34;#000000&#34; , width = 2 ) ) )\r fig .update_layout (template = &#34;simple_white&#34; )\r fig .update_yaxes (automargin = True )\r iplot (fig )  # Particular case: Histogram subplot (1, 2)  def  histogram_subplot (dataset_a , dataset_b , feature_a :  str ,\r feature_b :  str , title :  str , title_a :  str , title_b :  str ) :\r fig  = make_subplots (rows = 1 , cols = 2 , subplot_titles = (\r title_a ,\r title_b\r  )  )\r fig .add_trace (go .Histogram (x =dataset_a [feature_a ] , showlegend = False ) , row = 1 , col = 1 )\r fig .add_trace (go .Histogram (x =dataset_b [feature_b ] , showlegend = False ) , row = 1 , col = 2 )\r fig .update_layout (template = &#34;simple_white&#34; )\r fig .update_layout (autosize = False ,\r title = { &#34;text&#34;  : title ,  &#34;y&#34;  :  0.9 ,  &#34;x&#34;  :  0.5 ,  &#34;xanchor&#34;  :  &#34;center&#34; ,  &#34;yanchor&#34;  :  &#34;top&#34; } , \r yaxis = { &#34;title&#34;  :  &#34;&lt;i&gt;Frequency&lt;/i&gt;&#34; } )\r fig .update_traces (marker = dict (line = dict (color = &#34;#000000&#34; , width = 2 ) ) )\r fig .update_yaxes (automargin = True )\r iplot (fig )  # Calculate scores with Test/Unseen labeled data  def  test_score_report (data_unseen , predict_unseen ) :\r le  = LabelEncoder ( )\r data_unseen [ &#34;Label&#34; ]  = le .fit_transform (data_unseen .Churn .values )\r data_unseen [ &#34;Label&#34; ]  = data_unseen [ &#34;Label&#34; ] .astype ( int )\r accuracy  = accuracy_score (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] )\r roc_auc  = roc_auc_score (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] )\r precision  = precision_score (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] )\r recall  = recall_score (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] )\r f1  = f1_score (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] )\r\r df_unseen  = pd .DataFrame ( {  &#34;Accuracy&#34;  :  [accuracy ] ,  &#34;AUC&#34;  :  [roc_auc ] ,  &#34;Recall&#34;  :  [recall ] ,  &#34;Precision&#34;  :  [precision ] ,  &#34;F1 Score&#34;  :  [f1 ]  } )  return df_unseen\r # Confusion Matrix  def  conf_mat (data_unseen , predict_unseen ) :\r unique_label  = data_unseen [ &#34;Label&#34; ] .unique ( )\r cmtx  = pd .DataFrame (\r confusion_matrix (data_unseen [ &#34;Label&#34; ] , predict_unseen [ &#34;Label&#34; ] , labels =unique_label ) , \r index = [ &#39;{:}&#39; . format (x )  for x  in unique_label ] , \r columns = [ &#39;{:}&#39; . format (x )  for x  in unique_label ]  )\r ax  = sns .heatmap (cmtx , annot = True , fmt = &#34;d&#34; , cmap = &#34;YlGnBu&#34; )\r ax .set_ylabel ( &#39;Predicted&#39; )\r ax .set_xlabel ( &#39;Target&#39; ) ;\r ax .set_title ( &#34;Predict Unseen Confusion Matrix&#34; , size = 14 ) ;\n   ## 2. Load DataThe Dataset  is load  as a Pandas dataframe  and show a gimplse of the data .A good thing about Deepnote  is that the displayed dataframes shows the column  type , helping to understand the features .\n            Is needed so more information about the dataset  as the number of samples , memory size allocation , etc . &lt;br &gt;The result  is showed on the following output  (The Data Type  is just showed  for convenience , to make this notebook useful on other enviroments ) .\n      The dataset has a small memory size allocation  ( 1.183 MB )  and  is composed  for many Categorical  ( object ) features  and only a few numeric , but one of the categorical features doesn&#39;t look right , the `TotalCharges` ,  as showed on the displayed dataframe , the festure  is numeric . &lt;br &gt;`TotalCharges`  is converted  from Object to float64 , the same of `MonthlyCharges` feature .\n         ### 3.1 Churn DistributionThe Client Churn Distribution  is checked  for  any imbalance ,  as the feature  is the target , it&#39;s important to choose what strategy to adopt when dealing  with imbalanced classes . &lt;br &gt;Below , a Pie Chart shows the feature distribution .\n      There&#39;s some imbalance on Churn Distribution ,  26.5 % of the clients have churned ,  and small occurences of a label could lead to bad predictor . &lt;br &gt;It&#39;s possible to choose some ways to work  with this case : * Make a random over -sampling , duplicating some samples of the minority  class   this reach a balance , but this could lead to an overfitted model . * Make a random down -sampling , removing some samples  from the majority  class   this reach a balance , but this leads to information loss  and  not feeding the model  with the collected samples . * Make a random down -sampling , removing some samples  from the majority  class   this reach a balance , but this leads to information loss  and  not feeding the model  with the collected samples . * Another resampling technique ,  as SMOTE . * Choosing a metric that deals  with imbalanced datasets , like F1 Score .The Churn problem  is about client retention , so  is worth to check about false positives , so precision  and recall metrics are a must  for this situtation . &lt;br &gt;F1 Score  is used to check the quality of the model predictions ,  as the metric  is an harmonic mean of precision  and recall .\n      The contract  type  is a good feature to analyze what happens to a client churn  from that service , a plot  from the contract types of  not churned clients  is showed below .\n   df_aux  = dataset .query ( &#39;Churn == &#34;No&#34;&#39; )df_aux  = df_aux [ &#34;Contract&#34; ] .value_counts ( )bar_plot (df_aux ,  &#34;&lt;b&gt;Contract Types of not Churned Clients&lt;/b&gt;&#34; ,  &#34;&lt;i&gt;Contract&lt;/i&gt;&#34; ,  &#34;&lt;i&gt;Count&lt;/i&gt;&#34; )\n   Is showed that a Month -to -month contract  is the firts when compared to annual contracts , but the difference between the number of contracts  is  not so big . &lt;br &gt;To a better comparation , the same plot  is showed  for the churned clients .\n      Now , the difference between a Month -to -month  and annual contractts  is bigger ,  and can lead to a conclusion that annual contracts are better to retain the clients , perhaps fidelity promotions could aid to  reduce the churn rate . &lt;br &gt;As the problem can be examined more deep on Month -to -month contract types , a good idea  is see the Monthly Charges  and Total Charges distribution  for the  not churned clients of this contract .\n   df_aux  = dataset .query ( &#39;(Contract == &#34;Month-to-month&#34;) and (Churn == &#34;No&#34;)&#39; )histogram_subplot (df_aux , df_aux ,  &#34;MonthlyCharges&#34; ,  &#34;TotalCharges&#34; ,  &#34;&lt;b&gt;Charges Distribution for Month-to-month contracts for not Churned Clients&lt;/b&gt;&#34; ,  &#34;(a) Monthtly Charges Distribution&#34; ,  &#34;(b) Total Charges Distribution&#34; )\n   From the plots , can be said that many clients just got charged  with a few values , principally  for the Total Charges . &lt;br &gt;On the following plots , the same features are analyzed , but  for churned clients .\n   df_aux  = dataset .query ( &#39;(Contract == &#34;Month-to-month&#34;) and (Churn == &#34;Yes&#34;)&#39; )histogram_subplot (df_aux , df_aux ,  &#34;MonthlyCharges&#34; ,  &#34;TotalCharges&#34; ,  &#34;&lt;b&gt;Charges Distribution for Month-to-month contracts for Churned Clients&lt;/b&gt;&#34; ,  &#34;(a) Monthtly Charges Distribution&#34; ,  &#34;(b) Total Charges Distribution&#34; )\n   Total Charges had the same behaviour , but the Monthly Charges  for many churned clients was high , maybe the amount of chage value could lead the client to leave the service . &lt;br &gt;Still on the Month -to -month contract , it&#39;s time to analyze the most used Payment methods of churned clients .\n   df_aux  = dataset .query ( ( &#39;Contract == Month-to-month&#39; )  and  ( &#39;Churn == &#34;Yes&#34;&#39; ) )df_aux  = df_aux [ &#34;PaymentMethod&#34; ] .value_counts ( )bar_plot (df_aux ,  &#34;&lt;b&gt;Payment Method of Month-to-month contract Churned Clients&lt;/b&gt;&#34; ,  &#34;&lt;i&gt;Payment Method&lt;/i&gt;&#34; ,  &#34;&lt;i&gt;Count&lt;/i&gt;&#34; )\n   Many Churned Clients used to pay  with electronic checks , automatic payments ,  as bank transfers  or credit card have a few churned clients . A good idea could make promotions to clients that use automatic payment methods .  &lt;br &gt;Lastly , the tenure of the churned clients .\n   df_aux  = dataset .query ( ( &#39;Contract == Month-to-month&#39; )  and  ( &#39;Churn == &#34;Yes&#34;&#39; ) )df_aux  = df_aux [ &#34;tenure&#34; ] .value_counts ( ) .head ( 5 )bar_plot (df_aux ,  &#34;&lt;b&gt;Tenure of Month-to-month contract for Churned Clients&lt;/b&gt;&#34; ,  &#34;&lt;i&gt;Tenure&lt;/i&gt;&#34; ,  &#34;&lt;i&gt;Count&lt;/i&gt;&#34; )\n   Most clients just used the service  for one month , seems like the clients used to service to check the quality  or the couldn&#39;t stay  for the amount of charges ,  as the Monthly Charges  for these clients was high  and the Total Charges was small ,  as the client just stayed a little time .\n      Before setting up PyCaret , a random sample of  10 % size of the dataset will be get to make predictions  with unseen data .\n      The PyCaret&#39;s setup  is made  with  90 % of data samples  and just use one function  (`setup` )  from the module . &lt;br &gt;It&#39;s possible configure  with variuos options ,  as data pre -processing , feature engineering , etc . The easy  and efficient of PyCaret buy a lot of time when prototyping models . &lt;br &gt;Each setup  is an experiment  and  for this problem ,  is used the following options : * Normalization of the numerical features  with Z -Score . * Feature Selection  with permutation importance techniques . * Outliers Removal . * Features Removal based on Multicollinearity . * Features Scalling Transformation . * Ignore low variance on Features . * PCA  for Dimensionality Reduction ,  as the dataset has many features . * Numeric binning on the features `MonthlyCharges`  and `TotalCharges` . *  70 % of samples  for Train  and  30 %  for test .\n   exp01  = setup (data =data , target = &#34;Churn&#34; , session_id =random_seed , ignore_features = [ &#34;customerID&#34; ] , numeric_features = [ &#34;SeniorCitizen&#34; ] , normalize = True , feature_selection = True , remove_outliers = True , remove_multicollinearity = True , transformation = True , ignore_low_variance = True , pca = True , bin_numeric_features = [ &#34;MonthlyCharges&#34; ,  &#34;TotalCharges&#34; ] )\n   PyCaret shows at first  if  all features types are  with it correspondent  type ,  if everything  is right , press enter on the blank bar  and the setup  is finished showing a summary of the experiment .\n      A great tool on PyCaret  is build many models  and compare a metric  for the bests!  &lt;br &gt;Due the target  class   , the models are  sorted by F1 Score .\n      The best model suggested by PyCaret  is the Quadratic Discriminant Analysis  (QDA ) ,  with a F1 Score around  0.6  and a good Recall , around  0.7 . &lt;br &gt;Let&#39;s stick  with QDA  and create the model .\n            It&#39;s possible to tune the base model  and optmize a metric ,  for this case , F1 Score .\n      There&#39;s an improvement  from the base model on F1 Score! Now , time to see what hyper -parameters were used by the tuned model .\n      The `reg_param` was higher on the tuned model . &lt;br &gt;The Only problem  with using QDA  is that  not possible to get the Features Importance plot of the model , but the model  is used  as some good insights about the data were got on the EDA . &lt;br &gt; PyCaret also has functions to make ensembles ,  for this implementation , a bagged model  is build .\n      The bagged model improved a bit the F1 Score , it&#39;s also possible make blended  and stacked models  with PyCaret , both models are created using the the tuned  and bagged models  with the soft method .\n         Although the stacked model had improved precision on a good amount , the blended still got a better F1  and it  is saved  as the best model . &lt;br &gt;This model  is saved  and its ROC Curves are plotted below .\n         The test  is made  with the remaining  30 % of data that PyCaret got on the setup , it&#39;s important to see that the model  is  not overfitting .\n      As everything  is right  with the model , it&#39;s time to finalize it fitting  all the data .\n         The remaining  10 % data  is used to make predictions  with unseen samples , what could include some outliers , it&#39;s how real world data works . &lt;br &gt;Just Kappa Score  is  not showed ,  as the focus  is the F1 Score . &lt;br &gt;It&#39;s  not necessary to make  any transformation on the data , PyCaret do this .\n            PyCaret allows to save  all the pipeline experiment  and the model to deploy . &lt;br &gt;It&#39;s recommended to save  with date of the experiments .\n         From the results  and explanations presented here , some conclusion can be draw : * The  type of contract has a strict relationship  with churned clients , Month -to -month contracts  with high amount of charges could lead a client to leave the service . * For the predictions made by the model  and based on the precision  and recall scores ,  as F1 Score  try to show a balance between these two metrics , the precision was near  54 % , what means that the model predict correctly  54 % of classified clients  as churned , on other hand , the recall was good , where around  80 % of the actually churned clients was predict correctly . * The metrics must be used  in favor of the business interests ,  is needed a more correct prediction of the churned clients  or get more a part of these clients? * One possible way to improve the results  is SMOTE  as data resampling .From the tools  and enviroment used : * Deepnote  is a fantastic tool to use Python Notebooks , the design  is clear , a good variable explorer , an option to publish the notebook  as an article , terminal  for commands like git , etc . * PyCaret  is incredible , it speed up the model build a lot  and the pre -processing  is very useful , beyond of the functions to save  and deploy the model .Thanks  for you reading!", "posttime": "2020-07-01 06:34:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d41\u5931,churn,\u6a21\u578b", "title": "\u5ba2\u6237\u6d41\u5931\u9884\u6d4b", "title_en": "Customer churn prediction", "transed": 1, "url": "https://beta.deepnote.com/article/customer-churn-prediction", "via": "", "real_tags": ["\u6d41\u5931", "churn", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "5253ace49345b866211ed1db864ce91a.jpg", "infoid": 1009174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5929\u6587\u5b66\u5bb6\u5bf9\u4ed6\u4eec\u4e00\u76f4\u5728\u89c2\u6d4b\u7684\u4e00\u9897\u5927\u8d28\u91cf\u6052\u661f\u7684\u6d88\u5931\u611f\u5230\u56f0\u60d1\u3002\n\u4ed6\u4eec\u73b0\u5728\u60f3\u77e5\u9053\uff0c\u8fd9\u4e2a\u9065\u8fdc\u7684\u7269\u4f53\u662f\u5426\u574d\u584c\u4e86\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u9ed1\u6d1e\uff0c\u800c\u6ca1\u6709\u5728\u8d85\u65b0\u661f\u4e2d\u7206\u70b8\u3002\n\u5982\u679c\u6b63\u786e\uff0c\u8fd9\u5c06\u662f\u7b2c\u4e00\u4e2a\u5982\u6b64\u5de8\u5927\u7684\u661f\u4f53\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8d70\u5230\u751f\u547d\u5c3d\u5934\u7684\u4f8b\u5b50\u3002\n\u4f46\u8fd8\u6709\u53e6\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u8fd9\u9879\u7814\u7a76\u53d1\u8868\u5728\u201c\u7687\u5bb6\u5929\u6587\u5b66\u4f1a\u6708\u520a\u201d(Monthly Notice Of The Royal Astronomical Society)\u4e0a\u3002\n\u5b83\u4f4d\u4e8e\u5927\u7ea67500\u4e07\u5149\u5e74\u4e4b\u5916\u7684\u91d1\u66fc\u77ee\u661f\u7cfb\u7684\u5b9d\u74f6\u5ea7\u3002\n\u8fd9\u9897\u5de8\u661f\u5c5e\u4e8e--\u6216\u8005\u8bf4\u5c5e\u4e8e--\u4e00\u79cd\u88ab\u79f0\u4e3a\u53d1\u5149\u84dd\u8272\u53d8\u661f\u7684\u7c7b\u578b\uff1b\u5b83\u7684\u4eae\u5ea6\u5927\u7ea6\u662f\u592a\u9633\u7684250\u4e07\u500d\u3002\n\u8fd9\u7c7b\u6052\u661f\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5b83\u4eec\u7684\u5149\u8c31(\u5728\u4e0d\u540c\u6ce2\u957f\u53d1\u5c04\u7684\u5149\u91cf)\u548c\u4eae\u5ea6\u5076\u5c14\u4f1a\u53d1\u751f\u620f\u5267\u6027\u7684\u53d8\u5316\u3002\n\u57282001\u52302011\u5e74\u95f4\uff0c\u4e0d\u540c\u7684\u5929\u6587\u5b66\u5bb6\u56e2\u961f\u5bf9\u8fd9\u9897\u5927\u8d28\u91cf\u6052\u661f\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\u5b83\u6b63\u5904\u4e8e\u6f14\u5316\u7684\u540e\u671f\u9636\u6bb5\u3002\u5bf9\u4e8e\u5929\u6587\u5b66\u5bb6\u6765\u8bf4\uff0c\u91d1\u66fc\u77ee\u661f\u7cfb\u592a\u8fdc\u4e86\uff0c\u770b\u4e0d\u5230\u5b83\u7684\u5355\u4e2a\u6052\u661f\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u63a2\u6d4b\u5230\u5176\u4e2d\u4e00\u4e9b\u6052\u661f\u7684\u7279\u5f81\u3002\n2019\u5e74\uff0c\u7231\u5c14\u5170\u90fd\u67cf\u6797\u4e09\u4e00\u5b66\u9662\u7684\u535a\u58eb\u751f\u5b89\u5fb7\u9c81\u00b7\u827e\u4f26(Andrew Allan)\u9886\u5bfc\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u7784\u51c6\u4e86\u8fd9\u4e2a\u94f6\u6cb3\u7cfb\uff0c\u76ee\u7684\u662f\u66f4\u591a\u5730\u4e86\u89e3\u8d85\u5927\u8d28\u91cf\u6052\u661f\u662f\u5982\u4f55\u7ed3\u675f\u751f\u547d\u7684\u3002\n\u4f46\u662f\u5f53\u4ed6\u4eec\u7528\u6b27\u6d32\u5357\u65b9\u5929\u6587\u53f0(ESO)\u7684\u751a\u5927\u671b\u8fdc\u955c(VLT)\u5bf9\u51c6\u5b83\u65f6\uff0c\u4ed6\u4eec\u518d\u4e5f\u627e\u4e0d\u5230\u8fd9\u9897\u6052\u661f\u7684\u7279\u5f81\u4e86\u3002\n\u4ed6\u8865\u5145\u8bf4\uff1a\u8fd9\u4e48\u5927\u8d28\u91cf\u7684\u6052\u661f\u6d88\u5931\u800c\u6ca1\u6709\u4ea7\u751f\u660e\u4eae\u7684\u8d85\u65b0\u661f\u7206\u70b8\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684\u3002\n\u66f4\u65e9\u7684\u89c2\u6d4b\u4f3c\u4e4e\u8868\u660e\uff0c\u8fd9\u9897\u6052\u661f\u6b63\u5728\u7ecf\u5386\u5de8\u5927\u7684\u55b7\u53d1\uff0c\u5728\u55b7\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7269\u8d28\u4ece\u6052\u661f\u4e2d\u6d88\u5931\u3002\u8fd9\u4e9b\u90fd\u88ab\u8ba4\u4e3a\u57282011\u5e74\u540e\u7684\u67d0\u4e2a\u65f6\u5019\u505c\u6b62\u4e86\u3002\n\u50cf\u8fd9\u9897\u53d1\u4eae\u7684\u84dd\u8272\u53d8\u661f\u5728\u5b83\u4eec\u7684\u4e00\u751f\u4e2d\u5f88\u5bb9\u6613\u53d1\u751f\u8fd9\u6837\u7684\u7206\u53d1\u3002\u5b83\u4eec\u4f1a\u5bfc\u81f4\u6052\u661f\u8d28\u91cf\u4e0b\u964d\uff0c\u5e76\u5bfc\u81f4\u4eae\u5ea6\u8fbe\u5230\u620f\u5267\u6027\u7684\u5cf0\u503c\u3002\n\u57fa\u4e8e\u4ed6\u4eec\u7684\u89c2\u6d4b\u548c\u6a21\u578b\uff0c\u5929\u6587\u5b66\u5bb6\u4eec\u5bf9\u8fd9\u9897\u6052\u661f\u7684\u6d88\u5931\u548c\u6ca1\u6709\u8d85\u65b0\u661f\u63d0\u51fa\u4e86\u4e24\u79cd\u89e3\u91ca\u3002\n\u7206\u53d1\u53ef\u80fd\u5bfc\u81f4\u53d1\u5149\u7684\u84dd\u8272\u53d8\u661f\u8f6c\u53d8\u4e3a\u4eae\u5ea6\u8f83\u4f4e\u7684\u6052\u661f\uff0c\u8fd9\u4e5f\u53ef\u80fd\u88ab\u5c18\u57c3\u90e8\u5206\u9690\u85cf\u3002\n\u6216\u8005\uff0c\u7814\u7a76\u5c0f\u7ec4\u8bf4\uff0c\u8fd9\u9897\u6052\u661f\u53ef\u80fd\u574d\u584c\u6210\u4e86\u4e00\u4e2a\u9ed1\u6d1e\uff0c\u6ca1\u6709\u4ea7\u751f\u8d85\u65b0\u661f\u7206\u70b8\u3002\n\u8fd9\u5c06\u662f\u4e00\u4e2a\u7f55\u89c1\u7684\u4e8b\u4ef6\uff1a\u6211\u4eec\u76ee\u524d\u5bf9\u5927\u8d28\u91cf\u6052\u661f\u5982\u4f55\u6b7b\u4ea1\u7684\u7406\u89e3\u8868\u660e\uff0c\u5b83\u4eec\u4e2d\u7684\u5927\u591a\u6570\u90fd\u4f1a\u5728\u731b\u70c8\u7684\u65b0\u661f\u4e2d\u7ed3\u675f\u3002\n\u827e\u4f26\u8bf4\uff0c\u5982\u679c\u9ed1\u6d1e\u7684\u89e3\u91ca\u662f\u6b63\u786e\u7684\uff0c\u8fd9\u5c06\u662f\u7b2c\u4e00\u6b21\u76f4\u63a5\u63a2\u6d4b\u5230\u8fd9\u6837\u4e00\u9897\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7ed3\u675f\u751f\u547d\u7684\u602a\u7269\u6052\u661f\u3002\n\u540c\u6837\u6765\u81ea\u90fd\u67cf\u6797\u4e09\u4e00\u5b66\u9662\u7684\u5408\u8457\u8005\u4f55\u585e\u00b7\u683c\u7f57(Jose Groh)\u8bc4\u8bba\u8bf4\uff1a\u6211\u4eec\u53ef\u80fd\u63a2\u6d4b\u5230\u4e86\u5f53\u5730\u5b87\u5b99\u4e2d\u8d28\u91cf\u6700\u5927\u7684\u6052\u661f\u4e4b\u4e00\uff0c\u5b83\u6e29\u548c\u5730\u8fdb\u5165\u4e86\u9ed1\u591c\u3002\n\u6b27\u6d32\u5357\u65b9\u5929\u6587\u53f0\u7684\u6781\u5927\u671b\u8fdc\u955c(ELT)--\u9884\u8ba1\u5c06\u4e8e2025\u5e74\u5f00\u59cb\u8fd0\u884c--\u5c06\u80fd\u591f\u89e3\u6790\u9065\u8fdc\u661f\u7cfb(\u5982\u91d1\u66fc\u77ee\u661f)\u4e2d\u7684\u6052\u661f\uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u66f4\u591a\u5730\u63ed\u793a\u50cf\u8fd9\u6837\u7684\u5b87\u5b99\u5965\u79d8\u3002", "note_en": "Astronomers have been baffled by the disappearance of a massive star they had been observing.\n They now wonder whether the distant object collapsed to form a black hole without exploding in a supernova.\n If correct, it would be the first example of such a huge stellar object coming to the end of its life in this manner.\n But there is another possibility,  the study in Monthly Notices of the Royal Astronomical Society reports.\n   It is located some 75 million light-years away in the Kinman Dwarf galaxy, in the constellation of Aquarius.\n The giant star belongs - or belonged - to a type known as a luminous blue variable; it is some 2.5 million times brighter than the Sun.\n Stars of this kind are unstable, showing occasional dramatic shifts in their spectra - the amount of light emitted at different wavelengths - and brightness.\n Between 2001 and 2011, various teams of astronomers studied the massive star, concluding that it was in a late stage of evolution. The Kinman Dwarf galaxy is too far away for astronomers to see its individual stars, but they can detect the signatures of some of them.\n  In 2019, a team led by PhD student Andrew Allan of Trinity College Dublin, Ireland, targeted the galaxy, with the aim of finding out more about how very massive stars end their lives.\n But when they pointed the European Southern Observatory&#39;s (Eso) Very Large Telescope (VLT) at it, they could no longer find the tell-tale signatures of the star.\n  He added: &#34;It would be highly unusual for such a massive star to disappear without producing a bright supernova explosion.&#34;\n The older observations seem to indicate that the star was experiencing giant eruptions, in which material is lost from the star. These are thought to have stopped sometime after 2011.\n Luminous blue variable stars such as this one are prone to such outbursts over the course of their life. They cause the star to lose mass and lead to a dramatic peak in brightness.\n Based on their observations and models, the astronomers suggest two explanations for the star&#39;s disappearance and lack of a supernova.\n  The outbursts may have resulted in the luminous blue variable being transformed into a less luminous star, which could also be partly hidden by dust.\n Alternatively, the team says the star may have collapsed into a black hole, without producing a supernova explosion.\n This would be a rare event: our current understanding of how massive stars die suggests most of them meet their end in a violent nova.\n If the black hole explanation is correct, says Mr Allan, &#34;this would be the first direct detection of such a monster star ending its life in this manner&#34;.\n Co-author Jose Groh, also of Trinity College Dublin, commented: &#34;We may have detected one of the most massive stars of the local Universe going gently into the night.&#34;\n  Eso&#39;s Extremely Large Telescope (ELT) - expected to begin operations in 2025 - will be capable of resolving stars in distant galaxies such as the Kinman Dwarf, helping to shed more light on cosmic mysteries such as this one.", "posttime": "2020-07-01 06:34:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u660e\u661f,monster,\u6052\u661f", "title": "\u5173\u4e8e\u602a\u7269\u660e\u661f\u6d88\u5931\u884c\u4e3a\u7684\u8c1c\u56e2", "title_en": "Mystery over monster star's vanishing act", "transed": 1, "url": "https://www.bbc.co.uk/news/science-environment-53235909", "via": "", "real_tags": ["\u660e\u661f", "monster", "\u6052\u661f"]}, {"category": "", "categoryclass": "", "imagename": "931b07068cf5b9e8023bcb3f6e736adc.png", "infoid": 1009173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6b63\u5728\u8fdb\u884c\u7684\u638c\u63e1JQ\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\u3002\u672c\u7cfb\u5217\u4e0d\u5047\u5b9a\u60a8\u4ee5\u524d\u6709\u8fc7\u4f7f\u7528JQ\u7684\u7ecf\u9a8c\uff0c\u4f46\u5b83\u786e\u5b9e\u5047\u5b9a\u60a8\u5bf9shell\u7f16\u7a0b\u6709\u57fa\u672c\u7684\u6d41\u5229\u6027\u3002\nJQ\u662f\u6bcf\u4e2a\u5feb\u901f\u7a0b\u5e8f\u5458\u7684\u5de5\u5177\u7bb1\u4e2d\u90fd\u6709\u7684\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u5de5\u5177\u3002\u5b83\u8574\u542b\u7740\u5de8\u5927\u7684\u529b\u91cf\u3002\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u57fa\u7840\u77e5\u8bc6\u5f00\u59cb\u3002\n\u5bf9\u4e8eJQ\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u793a\u4f8b\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u5c06\u8be5\u793a\u4f8b\u590d\u5236\u5e76\u7c98\u8d34\u5230\u60a8\u7684shell\u4e2d\uff0c\u4ee5\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u672c\u8282\u7684\u5176\u4f59\u90e8\u5206\u5c06\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u5e94\u7528\u7a0b\u5e8f\u3002\nJQ\u6700\u6709\u4ef7\u503c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\u4e5f\u662f\u6700\u5bb9\u6613\u4f7f\u7528\u7684\uff1a\u6f02\u4eae\u7684\u6253\u5370json\u3002\n\u5c06stdin\u4e0a\u6240\u9700\u7684json\u4f20\u9012\u7ed9jq\uff0c\u5b83\u5c06\u5728stdout\u4e0a\u8f93\u51fa\u6f02\u4eae\u7684\u6253\u5370json\u3002JQ&#39\uff1b\u6f02\u4eae\u7684\u5370\u5237\u4e3a\u6570\u636e\u589e\u6dfb\u4e86\u5f62\u72b6\u548c\u989c\u8272\u3002\u5f62\u72b6\u548c\u989c\u8272\u4f7f\u6570\u636e\u7684\u8bfb\u53d6\u548c\u8c03\u8bd5\u901f\u5ea6\u66f4\u5feb\uff0c\u5982\u4f7f\u7528\u773c\u7403\u8c03\u8bd5\u4e2d\u6240\u8ff0\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679cJQ&#39\uff1b\u7684\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u547d\u4ee4\u6216\u6587\u4ef6\u4e2d\uff0c\u5219JQ\u5c06\u4e0d\u4f1a\u5448\u73b0\u989c\u8272\u3002\u4f8b\u5982\uff1a\n\u6216\u8005\uff0c\u5982\u679cjson\u6570\u636e\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u5c06\u5176\u8f6c\u6362\u4e3a\u8f83\u5c11\u7684\u6570\u636e(\u4f7f\u7528-R\u53ef\u4ee5\u6b63\u786e\u5730\u5448\u73b0\u989c\u8272)\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u6ca1\u6709\u989c\u8272\uff01\u8981\u53d6\u56de\u989c\u8272\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528JQ\u7684-C\u6807\u5fd7\u3002\n\u6211\u4eec\u6f02\u4eae\u5730\u6253\u5370json\u6570\u636e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u9605\u8bfb\u3002\u6211\u4eec\u60f3\u518d\u8d70\u4e00\u6b65\uff0c\u53ea\u770b\u76f8\u5173\u6570\u636e\u3002JQ\u80fd\u505a\u5230\u5417\uff1f\u662f\u3002JQ\u53ef\u4ee5\u9009\u62e9json\u6570\u636e(\u5e76\u6f02\u4eae\u5730\u6253\u5370\u5b83)\u3002\u8981\u4e86\u89e3\u5982\u4f55\u9009\u62e9\u76f8\u5173\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u4e86\u89e3\u4e00\u4e0bJQ\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002JQ\u8fd0\u884c\u4ee5\u4e0b\u7b97\u6cd5\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u51fd\u6570\uff0c\u5c06\u8be5\u51fd\u6570\u5e94\u7528\u4e8e\u7ed3\u679c\uff0c\u5e76\u5c06\u8f93\u51fa\u8bbe\u7f6e\u4e3a\u4e0b\u4e00\u4e2a\u51fd\u6570\u7684\u7ed3\u679c\u3002\n\u662f\u6807\u8bc6\u9009\u62e9\u5668\uff0c\u5b83\u8fd4\u56de\u6574\u4e2a\u503c\u3002\u8fd9\u5c31\u662fJQ&#39\uff1b.&#39\uff1bPretty\u6253\u5370\u5728stdin\u4e0a\u4f20\u9012\u7684\u6574\u4e2a\u503c\u7684\u539f\u56e0\u3002\n\u5982\u679c\u5b58\u5728json\u5bf9\u8c61\u548c\u952e\uff0c\u5219\u8fd9\u5c06\u4e3a\u4f4d\u4e8e&#34\uff1bkey&#34\uff1b\u5904\u7684\u5bf9\u8c61\u8fd4\u56de\u503c\u3002\n\u5176\u4e2d\uff0cn\u548cm\u662f\u6570\u5b57\u3002\u5982\u679c\u7ed3\u679c\u4e3a\uff1al\u662f\u7ed3\u679c\u6570\u7ec4\u7684\u957f\u5ea6(\u5982\u679c\u9002\u7528)\uff1a\nEcho&#39\uff1b[{&#34\uff1bn&#34\uff1b\uff1a&#34\uff1bbob&#34\uff1b\uff0c&#34\uff1bv&#34\uff1b\uff1a100}\uff0c{&#34\uff1bn&#34\uff1b\uff1a&#34\uff1bJim&#34\uff1b\uff0c&#34\uff1bv&#34\uff1b\uff1a101}]&#39\uff1b|jq&#39\uff1bmap({name\uff1a.n\uff0cvalue\uff1a.v})&#39\uff1b\n\u6709\u65f6\uff0c\u6211\u4eec\u60f3\u8981\u67e5\u770b\u7684\u6570\u636e\u672c\u8eab\u5177\u6709\u6b21\u4f18\u7684\u67e5\u770b\u7ed3\u6784\u3002\u6211\u4eec\u60f3\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u9009\u62e9\uff0c\u6211\u4eec\u60f3\u8981\u6539\u53d8\u7ed3\u6784\u3002\u201c\u9009\u62e9\u5668\u201d\u662f\u201c\u8fc7\u6ee4\u5668\u201d\u7684\u7279\u4f8b\uff0cJQ\u62e5\u6709\u4e30\u5bcc\u800c\u5f3a\u5927\u7684\u8fc7\u6ee4\u5668\u96c6\u5408\u6765\u8f6c\u6362\u6570\u636e\u3002JQ\u624b\u518c\u4e2d\u7684\u5927\u591a\u6570\u5185\u5bb9\u90fd\u6307\u5b9a\u4e86\u53ef\u4ee5\u8f6c\u6362JSON\u6570\u636e\u7684\u4e0d\u540c\u8fc7\u6ee4\u5668\u3002\u6211\u5df2\u7ecf\u7a81\u51fa\u663e\u793a\u4e86\u6211\u8ba4\u4e3a\u6700\u6709\u7528\u7684\u51e0\u4e2a\u8fc7\u6ee4\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u53ef\u4ee5\u5728shell\u4e2d\u8fd0\u884c\u7684\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u5728JQ\u624b\u518c\u4e2d\u9605\u8bfb\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002\nFLATEN\u662f\u4ece\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u5c55\u5f00\u7684\u3002\u5b83\u5c06\u5217\u8868\u5217\u8868\u201c\u5c55\u5e73\u201d\u4e3a\u5355\u4e2a\u5217\u8868\u3002\n\u4ece\u5bf9\u8c61\u8fd4\u56de\u952e\u6570\u7ec4\u3002\u5f53\u5bf9\u8c61\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u4e0d\u80fd\u4ec5\u901a\u8fc7\u67e5\u770b\u6570\u636e\u6765\u786e\u5b9a\u5173\u952e\u5b57\u65f6\uff0c\u8fd9\u4e00\u70b9\u5c24\u5176\u6709\u7528\u3002\nFROM_ENTRIES\u4e0eTO_ENTRIES\u76f8\u53cd\uff0c\u5b83\u5c06\u952e\u503c\u5bf9\u6570\u7ec4\u8f6c\u6362\u4e3a\u5bf9\u8c61\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06JQ\u7528\u4e8ejson\u6570\u636e\u3002\u5176\u4ed6\u6570\u636e\u683c\u5f0f\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u548c\u4ed6\u4eec\u4e00\u8d77\u4f7f\u7528JQ\u5417\uff1f\u55ef\uff0cJQ\u5185\u7f6e\u4e86\u5bf9\u6362\u884c\u7b26\u5206\u9694\u6570\u636e\u7684\u652f\u6301\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4ece\u90a3\u91cc\u5f00\u59cb\u3002\n\u8981\u5c06JQ\u4e0e\u6362\u884c\u7b26\u6570\u636e\u4e00\u8d77\u4f7f\u7528\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3JQ\u662f\u5982\u4f55\u5904\u7406\u591a\u4e2a\u7ed3\u679c\u7684\u3002\n\u6211\u6492\u8c0e\u4e86\u3002\u524d\u9762\u6211\u8bf4\u8fc7\uff0cJQ\u5c06\u6bcf\u4e2a\u8fc7\u6ee4\u5668\u5e94\u7528\u4e8e\u5355\u4e2aJSON\u7ed3\u679c\u3002\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u6709\u591a\u4e2ajson\u7ed3\u679c\u3002JQ\u5c06\u7b5b\u9009\u5668\u72ec\u7acb\u5e94\u7528\u4e8e\u6bcf\u4e2a\u7ed3\u679c\uff0c\u5e76\u5c06\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u7b5b\u9009\u5668\u3002\n\u901a\u8fc7\u4f7f\u75281\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c(\u5305\u62ec\u6362\u884c\u7b26)\u5206\u9694\u8fd9\u4e9b\u503c\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u503c\u4f20\u9012\u5230JQ\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u503c\u4e4b\u95f4\u4e0d\u9700\u8981\u5206\u9694\u7b26\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u8ba8\u8bba\u3002\n\u8981\u5c06JQ\u4e0e\u6362\u884c\u7b26\u6570\u636e\u4e00\u8d77\u4f7f\u7528\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e86\u89e3\u5927\u7ea63\u4e2aJQ\u6807\u5fd7\u548c\u4e00\u4e2aJQ\u8fc7\u6ee4\u5668\u3002\njq-s\u4ecestdin\u8bfb\u53d6\uff0c\u591a\u4e2a\u503c\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u5355\u4e2a\u6570\u7ec4\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u5c06\u6362\u884c\u7b26\u5206\u9694\u7684\u7ed3\u679c\u5408\u5e76\u4e3a\u5355\u4e2a\u7ed3\u679c\u3002\n\u5e26\u5f15\u53f7\u7684f\u662fjson\u5b57\u7b26\u4e32\uff0c\u4e0d\u5e26\u5f15\u53f7\u7684f\u662f\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u3002jq-r Pretty\u5c06\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u7ed3\u679c\u6253\u5370\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u5e26\u5f15\u53f7\u7684json\u5b57\u7b26\u4e32\u3002\n\u5982\u679c\u6211\u4eec\u7684\u8f93\u5165\u662f\u6362\u884c\u7b26\u5206\u9694\u7684\u6570\u5b57\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u793a\u4f8b\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u4f7f\u7528slurp\uff1a\n\u5982\u679c\u6570\u636e\u662f\u6362\u884c\u7b26\u5206\u9694\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528&#34\uff1b\u539f\u59cb\u5b57\u7b26\u4e32\u8f93\u5165&#34\uff1b\uff1a\n\u8981\u5c06\u5b57\u7b26\u4e32\u6570\u7ec4\u8f93\u51fa\u4e3a\u6362\u884c\u7b26\u5206\u9694\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528&#34\uff1b\u539f\u59cb\u5b57\u7b26\u4e32\u8f93\u51fa&#34\uff1b\uff1a\n\u8fd9\u662f\u638c\u63e1JQ\u7684\u7b2c\u4e00\u6b65\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86JQ\u5982\u4f55\uff1a\n\u6240\u6709\u8fd9\u4e9b\u4f7f\u7528JQ\u7684\u65b9\u6cd5\u90fd\u5728JQ\u624b\u518c\u4e2d\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002\u5b83\u4eec\u5f88\u5bb9\u6613\u4e70\u5230\uff0c\u4e5f\u5f88\u5bb9\u6613\u627e\u5230\u3002\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u6df1\u5165\u5730\u6316\u6398\u5e76\u63ed\u5f00JQ\u9690\u85cf\u7684\u529b\u91cf\u3002\u624b\u518c\u4e2d\u6ca1\u6709\u8ba8\u8bba\u7684\u6743\u529b\u3002", "note_en": "This is the first part of an ongoing series on mastering jq. This series does not assume prior experience with jq, but it does assume basic fluency in shell programming.\n jq is a valuable tool that every fast coder has in their tool chest. It contains depths of immense power. In part 1, we&#39;ll start off with the basics.\n For each application of jq, we\u2019ll lead off with an example that you can copy and paste into your shell to see how it works. The rest of the section discusses the application in more detail.\n   One of the most valuable applications of jq is also the easiest to use: pretty printing json.\n Pass the desired json on stdin to jq and it will print pretty print json on stdout. jq&#39;s pretty printing adds both shape and color to the data. Shape and color make the data much faster to read and debug as discussed in  Debug With Your Eyeballs. One caveat is that jq will not render colors if jq&#39;s output is piped into another command or a file. For example:\n  Or if the json data is large, we can pipe it into less (with -R to render colors properly).\n  However, if we do this, we\u2019ll notice there are no colors! To get colors back, we can use jq\u2019s -C flag.\n    We pretty print json data to make it easier to read. We\u2019d like to go one step further and only see the relevant data. Can jq do this? Yes. jq can select json data (and pretty print it). To understand how to select the relevant data, we need to understand how jq works a little bit. jq runs the following algorithm.\n for each function, apply the function to the result, and set the output as the result for the next function.\n                 is the identity selector, it returns the whole value. This is why jq &#39;.&#39; pretty prints the whole value passed in on stdin.\n    a json object and the key is present, this returns, for the object at &#34;key&#34;, the value.\n       where n and m are numbers Let l be the length of the result array (if applicable)  If the result is:\n       echo &#39;[{&#34;n&#34;: &#34;bob&#34;, &#34;v&#34;: 100}, {&#34;n&#34;: &#34;jim&#34;, &#34;v&#34;: 101}]&#39; | jq &#39;map({name: .n, value: .v})&#39;\n Sometimes the data we want to see itself has suboptimal structure for viewing. We want to do more than select, we want to transform the structure. \u201cSelectors\u201d are special cases of \u201cfilters\u201d and jq has a rich, powerful collection of filters to transform data. Most of the jq manual specifies different filters that can transform json data. I\u2019ve highlighted a few filters I find most useful along with an example you can run in a shell. You can read about them and more in the  jq manual.\n                   Flatten is flatten from functional programming. It \u201cflattens\u201d a list of lists into a single list.\n       Returns an array of keys from an object. Especially useful when the object is very big and so the keys cannot be determined by just looking at the data.\n      from_entries is the inverse of to_entries, it turns an array of key value pairs into a object.\n      So far we\u2019ve used jq for json data. What about other data formats? Can we use jq with them? Well, jq has built in support for newline delimited data, so let\u2019s start with there.\n To use jq with newline data, we need to understand how jq handles multiple results.\n  I lied. Earlier I said jq applies each filter to a  single json result. Actually, there can be multiple json results. jq applies the filter to each result independently and passes the results to the next filter.\n  Multiple values can be passed into jq by delimiting the values by 1 or more whitespace, including newline. Technically, there are some cases where no delimiter is needed between values, but it doesn\u2019t impact our discussion.\n   To use jq with newline data, we also need to know about 3 jq flags and one jq filter.\n   jq -s reads from stdin, multiple values combines them into a single array. In practice, we use it to combine newline delimited results into a single result.\n          The quoted f is a json string and the unquoted f is a \u201craw string\u201d. jq -r pretty prints results of type string not as a quoted json string but as a raw string.\n         If our input is newline delimited numbers, as we saw in the example, we use slurp:\n  If the data is newline delimited strings, we also need to use &#34;raw string input&#34;:\n     To output an array of strings as newline delimited strings, we also need to use &#34;raw string output&#34;:\n   This concludes the first step in mastering jq. So far we\u2019ve seen how jq can:\n  All of these ways of using jq are discussed in the jq manual. They\u2019re readily available and easy to find. In future installments, we\u2019ll dig deeper and uncover the hidden powers of jq. Powers that are not discussed in the manual.", "posttime": "2020-07-01 06:33:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u638c\u63e1,jq", "title": "\u638c\u63e1JQ\uff1a\u7b2c1\u90e8\u5206", "title_en": "Mastering Jq: Part 1", "transed": 1, "url": "https://codefaster.substack.com/p/mastering-jq-part-1-59c", "via": "", "real_tags": ["\u638c\u63e1", "jq"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009172, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76f4\u5230\u6700\u8fd1\uff0c\u6211\u8fd8\u8ba4\u4e3a\u5728\u521b\u5efa\u4e2a\u4eba\u7ad9\u70b9\u65f6\uff0c\u6258\u7ba1\u53ef\u80fd\u662f\u6bd4\u524d\u7aef\u5806\u6808\u66f4\u91cd\u8981\u7684\u95ee\u9898\u3002\u4f46\u6709\u4e86\u50cfGithub Pages\u3001Netlify\u548cVercel\u8fd9\u6837\u7684\u9009\u9879\uff0c\u7b49\u5f0f\u7684\u6258\u7ba1\u90e8\u5206\u5c31\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u5982\u4eca\uff0c\u4e2a\u4eba\u7f51\u7ad9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u7528\u4ec0\u4e48\u6765\u6784\u5efa\u5b83\u3002\u6211\u8ba4\u4e3a\u516c\u5e73\u5730\u8bf4\uff0c\u5927\u591a\u6570\u5bfb\u6c42\u5efa\u7acb\u4e2a\u4eba\u7f51\u7ad9\u7684\u4eba\uff0c\u5728\u540c\u7b49\u7a0b\u5ea6\u4e0a\uff0c\u90fd\u5e0c\u671b\u5728\u7f51\u7edc\u4e0a\u83b7\u5f97\u4e13\u4e1a\u7684\u7acb\u8db3\u70b9\uff0c\u4e5f\u53ea\u662f\u60f3\u4ece\u5efa\u7acb\u65b0\u7684\u4e1c\u897f\u4e2d\u83b7\u5f97\u4e50\u8da3\u3002\u5f53\u5efa\u9020\u65b0\u7684\u4e1c\u897f\u65f6\uff0c\u5c31\u4f1a\u6709\u5f88\u591a\u65b0\u7684\u4e1c\u897f\u5728\u90a3\u91cc\u3002\u5982\u6b64\u4e4b\u591a\uff0c\u4ee5\u81f3\u4e8e\u8bb8\u591a\u4eba\u751a\u81f3\u4e0d\u80fd\u8ba9\u81ea\u5df1\u5f00\u59cb\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5bb3\u6015\u9009\u62e9\u9519\u8bef\u7684\u5806\u6808\u3002\n\u5728\u9009\u62e9\u6846\u67b6\u65f6\uff0c\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u53ef\u4ee5\u95ee\u95ee\u81ea\u5df1\uff1a\u4ee5\u4e0b\u4e24\u4e2a\u91cd\u70b9\u4e2d\u7684\u54ea\u4e00\u4e2a\u5bf9\u60a8\u6765\u8bf4\u6700\u91cd\u8981\u3002\nJavaScript\uff0c\u8fd9\u573a\u5fc5\u8981\u7684\u90aa\u6076\u53d8\u6210\u4e86\u6c38\u6052\u7684\u5730\u76d8\u4e89\u593a\u6218\uff0c\u53ef\u80fd\u662f\u5927\u591a\u6570\u5e0c\u671b\u5efa\u7acb\u4e2a\u4eba\u7f51\u7ad9\u4ee5\u73a9\u5f04\u65b0\u6280\u672f\u7684\u4eba\u7684\u5934\u7b49\u5927\u4e8b\u3002\u5982\u679c\u60a8\u786e\u5b9e\u77e5\u9053\u8981\u5728\u54ea\u4e2ajavascript\u6846\u67b6\u4e2d\u5de5\u4f5c\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u9879\u62c6\u5206\u5668\u3002\u5982\u679c\u60a8\u4ecd\u7136\u4e0d\u80fd\u51b3\u5b9a\u6846\u67b6\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u6709\u66f4\u591a\u8fd9\u7bc7\u800c\u4e0d\u662fjavascript\u6846\u67b6\u6587\u7ae0\u8981\u9605\u8bfb\u3002\n\u5982\u679c\u60a8\u5fc5\u987b\u4f7f\u7528Reaction\uff0c\u5219Gatsbyjs\u548cNextjs\u662f\u975e\u5e38\u6d41\u884c\u4e14\u529f\u80fd\u5f3a\u5927\u7684\u9009\u9879\u3002Gatsbyjs\u5728\u524d\u7aef\u548c\u540e\u7aef\u4e4b\u95f4\u91c7\u53d6\u4e86\u66f4\u5168\u9762\u7684\u65b9\u6cd5\uff0c\u800cNextjs\u66f4\u5173\u5fc3\u7684\u662f\u4e3aReaction\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u9759\u6001\u548cSSR\u73af\u5883\u3002\n\u5982\u679c\u4f60\u5fc5\u987b\u4f7f\u7528Vuejs(\u6211\u4e2a\u4eba\u6700\u559c\u6b22\u7684)\uff0cNuxtjs(formcake.com\u7684\u57fa\u7840)\uff0cGridome\u548cVuePress\u90fd\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002\u5c31\u50cf\u5728VUE\u4e16\u754c\u4e2d\u7ecf\u5e38\u53d1\u751f\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u901a\u5e38\u6700\u5bb9\u6613\u5c06\u57fa\u4e8eVUE\u7684\u9879\u76ee\u4e0e\u5b83\u4eec\u7684\u53cd\u5e94\u7b49\u4ef7\u7269\u8fdb\u884c\u6bd4\u8f83\u3002Gridome\u5c31\u50cfGatsbyjs\uff0cNuxtjs\u5c31\u50cfNextjs\u3002VuePress\u66f4\u591a\u7684\u662f\u9488\u5bf9\u90a3\u4e9b\u60f3\u8981\u521b\u5efa\u535a\u5ba2\u7f51\u7ad9\u7684\u4eba\u3002\n\u6211\u771f\u7684\u4e0d\u80fd\u60f3\u8c61\u6709\u4eba\u4f1a\u8ba9\u4e2a\u4eba\u7f51\u7ad9\u53d8\u6210\u89d2\u5ea6\u7684\uff0c\u9664\u975e\u4ed6\u4eec\u771f\u7684\u60f3\u5f3a\u8feb\u81ea\u5df1\u4e3a\u4e86\u67d0\u79cd\u5de5\u4f5c\u800c\u5b66\u4e60\u89d2\u5ea6\uff0c\u4f46\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u68f1\u89d2\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\u9879\u76ee\u53eb\u505aScully\uff0c\u6211\u4e00\u76f4\u60f3\u5c1d\u8bd5\u4e00\u4e0b\u3002\u5982\u679c\u4efb\u4f55\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u7684\u4eba\u90fd\u548c\u53f2\u9ad8\u4e3d\u73a9\u8fc7\uff0c\u8bf7\u628a\u4f60\u7684\u60f3\u6cd5\u53d1\u9001\u5230david@formcake.com\u3002\n\u4e5f\u8bb8\u60a8\u66f4\u5173\u5fc3\u7684\u662f\u521b\u5efa\u535a\u5ba2\u4ee5\u53ca\u6846\u67b6\u7684\u521b\u4f5c\u4f53\u9a8c\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u800c\u4e0d\u662f\u4ec0\u4e48\u6280\u672f\u63a8\u52a8\u4e86html\u7684\u5448\u73b0\u3002\u4e0e\u4e13\u95e8\u7528\u4e8e\u521b\u5efa\u7b80\u5355\u7ad9\u70b9\u7684\u914d\u7f6e\u76f8\u6bd4\uff0cXJS Forward\u6846\u67b6\u5f80\u5f80\u9700\u8981\u66f4\u591a\u7684\u914d\u7f6e\u3002\u5982\u679c\u8fd9\u662f\u4f60\u7684\u60c5\u51b5\uff0c\u90a3\u4f60\u5c31\u8d70\u8fd0\u4e86\u3002\u6709\u8bb8\u8bb8\u591a\u591a\u7684\u9009\u62e9\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u76ee\u7684\u6765\u8bf4\uff0c\u5b83\u4eec\u90fd\u662f\u975e\u5e38\u68d2\u7684\u3002\u6211\u5c06\u66f4\u6df1\u5165\u5730\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e00\u4e9b\u9009\u9879\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u9002\u5408\u4e8e\u5c0f\u578b\u7684Personal\u7ad9\u70b9\u3002\nJekyll\u662f\u6700\u53e4\u8001\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u4e4b\u4e00\uff0c\u5b83\u4f7f\u7528Markdown\u4f7f\u521b\u4f5c\u6210\u4e3a\u9996\u8981\u95ee\u9898\u3002Jekyll\u7531Tom Preston-Werner\u4e8e2008\u5e74\u521b\u5efa\uff0c\u662fweb\u5f00\u53d1\u7684Rails\u65f6\u4ee3\u7684\u4e00\u90e8\u5206\uff0c\u5728\u90a3\u4e2a\u65f6\u4ee3\uff0c\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\u88ab\u8ba4\u4e3a\u662f\u6700\u91cd\u8981\u7684\u3002Jekyll\u4ecd\u7136\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u5bf9\u4e8e\u8bb8\u591a\u4eba\u6765\u8bf4\u6709\u70b9\u4e0d\u592a\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u662f\u7528Ruby\u6784\u5efa\u7684\u3002\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u535a\u5ba2\u6765\u8bf4\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4f46\u662f\u60a8\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528RubyGems\u800c\u4e0d\u662fNPM\u3002\n\u96e8\u679c\u662f\u4e00\u4e2a\u6bd4\u6770\u57fa\u5c14\u66f4\u73b0\u4ee3\u7684\u6846\u67b6\u3002\u5b83\u8bd5\u56fe\u89e3\u51b3\u6bd4Jekyll\u66f4\u591a\u7684\u5f00\u7bb1\u5373\u7528\u7684\u95ee\u9898\uff0c\u66f4\u7075\u6d3b\uff0c\u5e76\u4e14\u8ba4\u4e3a\u5b83\u521b\u5efa\u9875\u9762\u7684\u901f\u5ea6\u662f\u9996\u8981\u8003\u8651\u7684\u95ee\u9898\u3002\u96e8\u679c\u53d7\u6b22\u8fce\u7684\u90e8\u5206\u539f\u56e0\u662f\u5b83\u662f\u7528\u56f4\u68cb\u5199\u7684\u3002\u8fd9\u63d0\u9ad8\u4e86\u5b83\u7684\u901f\u5ea6\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u607c\u4eba\u7684\u65b9\u9762\u3002\u56f4\u68cb\u662f\u4e00\u95e8\u6709\u8da3\u7684\u8bed\u8a00\uff0c\u4f46\u6211\u4eec\u5927\u591a\u6570\u4eba\u6ca1\u6709\u673a\u4f1a\u5728\u5de5\u4f5c\u4e2d\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u559c\u6b22\u56f4\u68cb\u5e76\u4e14\u4e0d\u4ecb\u610f\u4f7f\u7528\u56f4\u68cb\u6a21\u677f\u5e93\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u9009\u62e9\u96e8\u679c\uff0c\u4f60\u4e5f\u5fc5\u987b\u653e\u5f03NPM\u3002\n\u5341\u4e00\u5c81\u662f\u8fd9\u6761\u8857\u4e0a\u6700\u65b0\u51fa\u751f\u7684\u5b69\u5b50\u4e4b\u4e00\uff0c\u4ed6\u4ecb\u4e8e\u96e8\u679c\u548c\u6770\u57fa\u5c14\u4e4b\u95f4\u3002\u5b83\u7684\u91cd\u70b9\u662f\u7075\u6d3b\u6027\u548c\u901f\u5ea6\u3002\u5b83\u662f\u8d85\u7ea7\u6a21\u5757\u5316\u7684\uff0c\u6240\u4ee5\u5b83\u786e\u5b9e\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5b89\u88c5\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u5bfb\u6c42\u7075\u6d3b\u6027\u7684\u4eba\u6765\u8bf4\uff0cElevty\u786e\u5b9e\u6709\u5b83\u7684\u4f18\u70b9\u3002\u5b83\u652f\u630111\u79cd\u6a21\u677f\u8bed\u8a00\uff0c\u6700\u68d2\u7684\u662f\uff0c\u5b83\u662f\u4e00\u4e2a\u8282\u70b9\u5e93\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528NPM\u3002\u5982\u679c\u6211\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u535a\u5ba2\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u4e2a\u4eba\u7684\u9009\u62e9\u3002\n\u662f\u3002\u57282020\u5e74\uff0c\u6ca1\u6709\u7406\u7531\u4e3a\u4e00\u4e2a\u5c0f\u578b\u4e2a\u4eba\u7f51\u7ad9\u9009\u62e9\u4e00\u4e2a\u4e0d\u652f\u6301\u9759\u6001\u9875\u9762\u751f\u6210\u7684\u6846\u67b6\u3002\u4e0a\u9762\u5217\u51fa\u7684\u6bcf\u4e2a\u6846\u67b6\u90fd\u652f\u6301\u9759\u6001\u751f\u6210\u3002\u5982\u679c\u4f60\u9700\u8981\u76f8\u4fe1\u9759\u6001\u7f51\u7ad9\u7684\u529b\u91cf\uff0c\u90a3\u5c31\u53bbJamstack.org\u770b\u770b\uff0c\u5b83\u5f88\u597d\u5730\u53d1\u6325\u4e86\u6240\u6709\u7684\u597d\u5904\u3002\n\u53ea\u8981\u6211\u4eec\u5df2\u7ecf\u51b3\u5b9a\u4f7f\u7528\u9759\u6001\u751f\u6210\uff0c\u6258\u7ba1\u5c31\u76f8\u5f53\u5bb9\u6613\u3002\u7136\u800c\uff0c\u4ecd\u7136\u6709\u5f88\u591a\u9009\u62e9\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u70ed\u95e8\u9009\u9879\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528\u5b83\u4eec\u7684\u4e00\u4e9b\u60f3\u6cd5\u3002\nNetlify\u662fJAMStack\u8fd0\u52a8\u80cc\u540e\u7684\u6258\u7ba1\u5e73\u53f0\u3002Netlify\u6210\u7acb\u4e8e2014\u5e74\uff0c\u53d1\u5c55\u76f8\u5f53\u8fc5\u901f\uff0c\u5df2\u7ecf\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u9759\u6001\u7f51\u7ad9\u6258\u7ba1\u5e73\u53f0\u3002\u4f7f\u7528Netlify\uff0c\u60a8\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u6258\u7ba1\u9759\u6001\u7ad9\u70b9\u3001\u90e8\u7f72lambdas\u548c\u521b\u5efa\u57fa\u4e8egit\u7684\u5de5\u4f5c\u6d41\u3002\u5bf9\u4e8e\u4e2a\u4eba\u7f51\u7ad9\uff0c\u6211\u4f1a\u63a8\u8350Netlify\uff0c\u800c\u4e0d\u662f\u6240\u6709\u5176\u4ed6\u9009\u62e9\u3002\nVercel\u662f\u4e00\u4e2a\u4e0eNetlify\u975e\u5e38\u76f8\u4f3c\u7684\u6258\u7ba1\u5e73\u53f0\u3002Vercel\u6210\u7acb\u4e8e2015\u5e74\uff0c\u62e5\u6709\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u5e73\u53f0\uff0c\u7528\u4e8e\u6258\u7ba1\u9759\u6001\u7f51\u7ad9\uff0c\u5305\u62ecgit\u5de5\u4f5c\u6d41\u548clambdas\u3002\u6211\u5df2\u7ecf\u4f7f\u7528Vercel\u591a\u5e74\u4e86\uff0c\u6211\u53ef\u4ee5\u63a8\u8350\u5b83\u3002Vercel\u662f\u4e00\u4e2a\u53ef\u9760\u7684\u9009\u62e9\uff0c\u4f46\u6211\u63a8\u8350Netlify\u4f18\u4e8eVercel\u4f5c\u4e3a\u529f\u80fd\u9f50\u5168\u7684\u9759\u6001\u6258\u7ba1\u5e73\u53f0\u3002\n\u5728\u9759\u6001\u7f51\u7ad9\u6258\u7ba1\u9886\u57df\uff0cGitHub\u9875\u9762\u662f\u4e00\u4e2a\u76f8\u5f53\u53e4\u8001\u7684\u9009\u62e9\u3002Github\u9875\u9762\u4e8e2008\u5e74\u63a8\u51fa\uff0c\u6700\u521d\u53ea\u652f\u6301Jekyll\u548c\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u73b0\u5728\u901a\u8fc7\u4e00\u4e9b\u914d\u7f6e\u652f\u6301\u5176\u4ed6\u6846\u67b6\u3002GitHub Pages\u66fe\u7ecf\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u81ea\u52a8\u96c6\u6210\u5230\u4f60\u7684GitHub\u8d26\u6237\u4e2d\uff0c\u4f46\u73b0\u5728\u8fd9\u662fNetlify\u548cVercel\u7b49\u516c\u53f8\u7684\u5171\u540c\u529f\u80fd\u3002GitHub\u9875\u9762\u76ee\u524d\u529f\u80fd\u4e0d\u8db3\uff0c\u4f46\u6c38\u8fdc\u662f\u514d\u8d39\u7684\u3002\u5982\u679c\u4f60\u60f3\u6258\u7ba1\u4e00\u4e9b\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u60f3\u518d\u53bb\u60f3\u5b83\uff0cGithub Pages\u53ef\u80fd\u662f\u6b63\u786e\u7684\u9009\u62e9\u3002\nFireBase\u662f\u4e00\u4e2a\u5e73\u53f0\u5373\u670d\u52a1\u6258\u7ba1\u63d0\u4f9b\u5546\uff0c\u5b83\u6709\u4e00\u4e9b\u975e\u5e38\u5065\u58ee\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u5f97\u5230\u4e86Google\u7684\u652f\u6301\u3002FireBase\u4e0d\u662f\u4e00\u4e2a\u9759\u6001\u7684\u7f51\u7ad9\u6258\u7ba1\u63d0\u4f9b\u5546\uff0c\u5b83\u7684\u76ee\u6807\u662f\u89e3\u51b3\u5173\u4e8e\u521b\u5efa\u548c\u6258\u7ba1\u590d\u6742\u7684Web\u5e94\u7528\u7a0b\u5e8f\u7684\u66f4\u590d\u6742\u7684\u95ee\u9898\u3002\u60a8\u9009\u62e9Firebase\u7684\u552f\u4e00\u539f\u56e0\u662f\u60a8\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\u3002FireBase\u5141\u8bb8\u901a\u8fc7\u5176\u65d7\u8230\u529f\u80fdFirebase\u8eab\u4efd\u9a8c\u8bc1\u548cFirebase\u5b9e\u65f6\u6570\u636e\u5e93\u8fdb\u884c\u7b80\u5355\u7684\u8eab\u4efd\u9a8c\u8bc1\u548c\u5b58\u50a8\u3002\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5\u670d\u52a1\u5668\u6280\u672f\uff0c\u4f46\u53c8\u4e0d\u60f3\u6df1\u5165\u8fd9\u4e2a\u4e3b\u9898\uff0c\u90a3\u4e48FireBase\u4e5f\u53ef\u80fd\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\nHeroku\u57282007\u5e74\u4f7f\u6258\u7ba1Ruby on rails\u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4f7f\u7528Heroku CLI\u6572\u51fb\u51e0\u4e0b\u952e\uff0c\u5c31\u70b9\u71c3\u4e86\u5e94\u7528\u7a0b\u5e8f\u6258\u7ba1\u7684\u4e16\u754c\u3002\u548cFirebase\u4e00\u6837\uff0cHeroku\u7684\u76ee\u6807\u662f\u89e3\u51b3\u6bd4\u7b80\u5355\u7684\u9759\u6001\u7f51\u7ad9\u590d\u6742\u5f97\u591a\u7684\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u559c\u6b22\u4fee\u8865\u540e\u7aef\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u7cfb\u7edf\u3002Heroku\u662f\u4e3a\u90a3\u4e9b\u9700\u8981\u89e3\u51b3\u66f4\u590d\u6742\u7684\u95ee\u9898(\u5982\u5b58\u50a8\u6216\u8eab\u4efd\u9a8c\u8bc1)\uff0c\u4f46\u53c8\u60f3\u7528\u5f00\u6e90\u8f6f\u4ef6\u800c\u4e0d\u662f\u8c37\u6b4c\u53d1\u660e\u7684\u6280\u672f\u6765\u89e3\u51b3\u7684\u4eba\u63d0\u4f9b\u7684\u3002\u5982\u679c\u4f60\u6b63\u5728\u5efa\u7acb\u4e00\u4e2a\u5b66\u4e60\u670d\u52a1\u5668\u6280\u672f\u7684\u4e2a\u4eba\u7f51\u7ad9\uff0cHeroku\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\u5047\u8bbe\u4f60\u9009\u62e9\u4e86\u4e00\u4e2a\u4e13\u95e8\u4e3a\u7b80\u5355\u7684\u9759\u6001\u7f51\u7ad9\u8bbe\u8ba1\u7684\u6258\u7ba1\u5e73\u53f0\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u4f46\u662f\u5982\u679c\u6211\u9700\u8981\u4e00\u53f0\u7528\u4e8eX&34\uff1b\u7684\u670d\u52a1\u5668\u5462\uff1f\u4f60\u5f88\u5e78\u8fd0\uff0c\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u8d44\u6e90\u662f\u7531CSS Tricks and Codesen\u7684Chris Coyer\u521b\u5efa\u7684\uff0c\u5b83\u5217\u51fa\u4e86\u5bf9\u6ca1\u6709\u670d\u52a1\u5668\u7684\u9759\u6001\u7f51\u7ad9\u975e\u5e38\u6709\u7528\u7684\u670d\u52a1\uff0chttps://serverless.css-tricks.com/services/major.\u3002FormCake\u8fd8\u5b8c\u7f8e\u5730\u89e3\u51b3\u4e86\u5982\u4f55\u5728\u9759\u6001\u7f51\u7ad9\u4e0a\u521b\u5efa\u8054\u7cfb\u4eba\u8868\u5355\u7684\u95ee\u9898\u3002FormCake\u81f4\u529b\u4e8e\u59cb\u7ec8\u4e3a\u5177\u6709\u5c0f\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u4e2a\u6709\u7528\u7684\u81ea\u7531\u5c42\u3002\u8003\u8651\u5728\u4f60\u4e0b\u4e00\u6b21\u521b\u5efa\u4e2a\u4eba\u7f51\u7ad9\u65f6\u68c0\u67e5\u4e00\u4e0b\u3002\n\u8fd4\u56de\u535a\u5ba2(&lt\uff1b)", "note_en": "Until somewhat recently, I think that hosting was probably a more important concern for creating a personal site than the frontend stack. But with options like  Github Pages,  Netlify, and  Vercel, the hosting part of the equation has become a whole lot easier. Nowadays a personal site is all about what you build it with. I think it&#39;s fair to say most people looking to build a personal site are, in equal parts, wanting to get a professional foothold on the web and also just have fun building something new. And when building something new, there is a whole lot of new out there. So much so, that many people cannot even bring themselves to begin because they&#39;re afraid of picking the wrong stack.\n  A good question to ask yourself when picking a framework is which of the two following focuses is most important to you.\n  Javascript, the necessary evil turned eternal turf war, is probably at top of mind for most people looking to build a personal site in order to &#34;play with new tech&#34;. This is also a great splitter of options if you do know what javascript framework you want to work in. If you still cannot decide on a framework, then you probably have more this vs that javascript framework articles to read.\n  If you must work with  React,  Gatsbyjs and  Nextjs are very popular and capable options. Gatsbyjs takes a more holistic approach between the frontend and the backend whereas Nextjs is mostly concerned with creating a static and ssr environment for React apps.\n  If you must work with Vuejs (my personal favorite),  Nuxtjs (what  formcake.com is build on),  Gridsome, and  VuePress are all great options. As is often the case in the world of Vue, it is often easiest to compare Vue based project&#39;s with their React equivalents. Gridsome is like Gatsbyjs and Nuxtjs is like Nextjs. VuePress is much more targeted to those who want to create a site for blogging.\n  I cannot really imagine someone making a personal site in Angular unless they really want to force themselves to learn Angular for a job of some kind but there is an interesting  Angular static site generator project called  Scully that I have been meaning to try. If anyone reading this has played with Scully, send me your thoughts to  david@formcake.com.\n    Perhaps you are more concerned with creating a blog and how a framework&#39;s authoring experience works than what technology powers the rendering of html. X JS forward frameworks tend to require a lot more configuration than those made specifically for creating a simple site. If this is your situation, you are in luck. There are tons of options and they are all fantastic for this purpose. I will go more in depth on some of these options since they are more tailored for a small perosnal site.\n  Jekyll is the one of the oldest static site generators that made authoring a top concern with its use of Markdown. Built in 2008 by Tom Preston-Werner, Jekyll was part of the Rails era of web development where developer productivity was considered paramount to everything else. Jekyll is still very popular but is a bit of a non starter for many because it is built in Ruby. Still a great choice for a developer blog but you will have to use RubyGems instead of NPM.\n  Hugo is a more modren framework than Jekyll. It tries to solve more problems out of the box than Jekyll, is more flexible, and considers the speed at which it creates pages to be a top concern. Part of Hugo&#39;s popularity comes from the fact that it is written in Go. This contributes to its speed but also contributes to some of the annoying aspects about it. Go is an interesting language but most of us don&#39;t have the opportunity to use it in our work. It is therefore best for those who love Go and don&#39;t mind using Go&#39;s templating libraries. You will also have to give up NPM if you choose Hugo.\n  One of the newest kids on the block,  Eleventy is somewhere inbetween Hugo and Jekyll. It&#39;s focus is on flexibility and speed. It is super modular so it does take a little bit more time to get setup but for those looking for flexiblity, Eleventy has it in spades. It supports 11 templating language and best of all, it is a node library so you can use NPM for your entire project. This may be my personal choice if I were creating a new blog.\n   Yes. In 2020 there is no reason to choose a framework that does not support static generation of pages for a small personal website. Every framework listed above supports static generation. If you need to be convinced of the power of static websites, checkout  jamstack.org which does a good job of going into all the benifits.\n  As long as we have made the decision to use static generation, hosting is quite easy. There are still a lot of options however. Here are some of the top options and some of the thinking for when to use them.\n  Netlify is the hosting platform behind the  JAMStack movement. Founded in 2014, Netlify has grown rather quickly and has become the defacto hosting platform for static sites. With Netlify you can host static sites, deploy lambdas, and create git based workflows with extreme ease. I would recommend Netlify above all other options for a personal site.\n  Vercel is a very similar hosting platform as Netlify. Founded in 2015, Vercel boasts a fully featured platform for hosting static sites including git workflows and lambdas. I have used Vercel for years and I can recommend it. Vercel is a solid choice but I would recommend Netlify above Vercel for a fully featured static hosting platform.\n  Github pages is quite an old option in the space of static website hosting. Launched in 2008 Github pages originally only supported Jekyll and static files but now supports other frameworks through some configuration. Github pages was once unique in that it automatically was integreted into your github account but this is now a common feature with the likes of Netlify and Vercel. Github pages is underpowered at this point but will always be free. If you want to host something simple and never think about it again, Github pages may be just the right choice.\n  Firebase is a platform as a service hosting provider that has some seriously robust features and is backed by Google. Firebase is not a static website hosting provider and aims to solve much more complicated issues around creating and hosting a sophisticated web application. The only reason you would want to choose Firebase is if you wanted authentication for some reason. Firebase allows for simple authentication and storage via it&#39;s flagship features  Firebase Authentication and Firebase  Realtime Database. Firebase may also be a good option if you want to play with server tech but don&#39;t want to go too deep into the subject.\n  Heroku lit the world of application hosting on fire in 2007 when it made hosting a  Ruby on Rails application as simple as a couple of key strokes using the Heroku CLI. Like Firebase, Heroku aims to solve much more complex problems than a simple static website but is a great system for those who like to tinker with their backend. Heroku is for those who need to solve more complicated problems like storage or authentication, but want to do it with open source software instead of google invented technologies. If you are building a personal site to learn server tech, Heroku is a great option.\n  Assuming you went with one of the hosting platforms specifically designed for simple static websites, you may be wondering &#34;But what if I need a server for X&#34;. You are in luck, there is a great resource created by  Chris Coyer, of  CSS Tricks and  Codepen fame, that lists services that are great for static websites without a server,  https://serverless.css-tricks.com/services/major.  Formcake also perfectly solves the problem of how to create a contact form on a static website. Formcake is committed to always having a useful free tier for developers with small projects. Consider checking it out the next time you tackle building your personal site.\n  &lt; Back to Blog", "posttime": "2020-07-01 06:32:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7ad9,concerns,\u6258\u7ba1", "title": "\u4e3a\u60a8\u7684\u4e2a\u4eba\u7f51\u7ad9\u9009\u62e9\u6280\u672f\u5806\u6808\u65f6\u6700\u5173\u5fc3\u7684\u95ee\u9898", "title_en": "Top Concerns When Choosing a Tech Stack for Your Personal Website", "transed": 1, "url": "https://formcake.com/blog/top-concerns-when-choosing-a-tech-stack-for-your-personal-website", "via": "", "real_tags": ["\u7f51\u7ad9", "concerns", "\u6258\u7ba1"]}, {"category": "", "categoryclass": "", "imagename": "d05d7b7387166577ad9ab11773c1ce9a.png", "infoid": 1009171, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "MacOS Big Sur\u5f00\u53d1\u4eba\u5458\u7248\u672c\u4e2d\u5bf9Safari\u7684\u66f4\u65b0\u5e26\u6765\u4e86\u4e00\u4e2a\u957f\u671f\u7f3a\u5e2d\u3001\u5907\u53d7\u6b22\u8fce\u7684\u529f\u80fd\uff1a\u652f\u6301Netflix\u63d0\u4f9b\u76844K HDR\u6d41\u3002\u6b64\u5916\uff0cApple TV\u6b63\u5728\u83b7\u5f97\u5bf9VP9\u89c6\u9891\u7f16\u89e3\u7801\u5668\u7684\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740Apple TV 4K\u7528\u6237\u7ec8\u4e8e\u53ef\u4ee5\u5728\u8be5\u8bbe\u5907\u7684YouTube\u5e94\u7528\u7a0b\u5e8f\u4e0a\u89c2\u770b4K YouTube\u89c6\u9891\u4e86\u3002\n\u8fd9\u4e24\u4e2a\u53d8\u5316\u90fd\u89e3\u51b3\u4e86\u7528\u6237\u5728\u6d88\u8d39\u89c6\u9891\u5185\u5bb9\u65f6\u5728\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u4e2d\u9047\u5230\u7684\u632b\u6298\u3002\u82f9\u679c\u7535\u89c64K\u88ab\u5b9a\u4f4d\u4e3a\u4e16\u754c\u4e0a\u529f\u80fd\u6700\u5f3a\u7684\u6d88\u8d39\u8005\u6d41\u5a92\u4f53\u673a\u9876\u76d2\uff0c\u4f46\u5b83\u5728\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\u4e0a\u4e0d\u652f\u6301\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u3002\u867d\u7136\u8003\u8651\u5230\u5927\u591a\u6570Mac\u6ca1\u67094K\u6216\u5168HDR\u5c4f\u5e55\uff0cMac\u5bf94K HDR\u7684\u9700\u6c42\u6709\u6240\u51cf\u5c11\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u4f7f\u7528\u652f\u6301\u8fd9\u4e9b\u529f\u80fd\u7684\u5916\u90e8\u663e\u793a\u5668\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u559c\u7684\u53d8\u5316\u3002\n\u4e0d\u8fc7\uff0c\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u8b66\u544a\u3002\u4ec5\u5c11\u6570Mac\u652f\u63014K HDR Netflix\u6d41\u3002\u53ea\u67092018\u62162019\u5e74\u6b3eMacBook Pro\u548ciMac Pro\u5728\u8bbe\u5907\u81ea\u5df1\u7684\u663e\u793a\u5c4f\u4e0a\u652f\u6301HDR(\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u89c4\u683c\u4e5f\u4e0d\u7b26\u5408\u9ad8\u7aef\u7535\u89c6\u7684HDR\u4eae\u5ea6\u6807\u51c6)\u3002\u8fd9\u4e9b\u673a\u5668\u52a0\u4e0a2018\u5e74Mac mini\u548c2019\u5e74Mac Pro\u53ef\u4ee5\u5728\u5916\u90e8\u663e\u793a\u5668\u4e0a\u8fdb\u884cHDR\u3002\n\u6b64\u5916\uff0c\u867d\u7136Apple TV YouTube\u5e94\u7528\u7a0b\u5e8f\u786e\u5b9e\u5177\u59074K\u529f\u80fd\uff0c\u4f46Big Sur\uff1b\u7684Safari\u4f3c\u4e4e\u6ca1\u6709\u66f4\u65b0\uff0c\u65e0\u6cd5\u5728YouTube\u4e0a\u5b9e\u73b0\u540c\u6837\u7684\u529f\u80fd\u3002\u4e0d\u8fc7\uff0c\u4ece\u73b0\u5728\u5230Big Sur&39\uff1b\u7684\u6700\u7ec8\u53d1\u5e03\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u6539\u53d8\u3002\n\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5728Mac\u4e0a\u7684Safari\u4e2d\u6dfb\u52a0HDR\u652f\u6301\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8eNetflix\uff0c\u4f46\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u4f8b\u5b50\u3002\u63a8\u7279\u7528\u6237\u4f0a\u6851\u00b7\u963f\u52a0\u74e6\u5c14\u5206\u4eab\u4e86\u4e00\u5f20\u622a\u56fe\uff0c\u8bc1\u660e\u8fd9\u9879\u529f\u80fd\u662f\u5b58\u5728\u7684\u3002\u5f53\u4ed6\u6ce8\u610f\u5230\u4ed6\u5728Netflix\u4e0a\u89c2\u770b\u7684\u89c6\u9891\u662f\u4ee54K\u548c\u675c\u6bd4\u89c6\u89c9(Dolby Vision)\u64ad\u653e\u7684\u65f6\u5019\uff0c\u4ed6\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\u675c\u6bd4\u89c6\u89c9\u662f\u4e00\u79cd\u6d41\u884c\u7684HDR\u6807\u51c6\u30029to5Mac\u62a5\u9053\u4e86\u8fd9\u6761\u63a8\u6587\uff0c\u5c06\u8fd9\u4e2a\u6545\u4e8b\u900f\u9732\u7ed9\u4e86\u66f4\u591a\u7684\u4eba\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cAirPlay 2\u5728iOS14\u548cBig Sur\u4e2d\u65b0\u652f\u63014K\uff0c\u56e0\u6b64\u8fd9\u4f3c\u4e4e\u662f\u82f9\u679c\u5728\u5176\u5e73\u53f0\u4e0a\u534f\u540c\u63a8\u8fdb4K\u7684\u4e00\u90e8\u5206\u3002\u6b64\u5916\uff0cLG\u7535\u89c6\u4e0a\u7684Apple TV\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u652f\u6301\u675c\u6bd4\u00b7\u963f\u83ab\u65af(Dolby Atmos)\uff0c\u8fd9\u4e00\u53d1\u5c55\u53ea\u4e0e\u6b64\u65e0\u5173\u3002\niOS14\u3001twOS14\u548cMacOS Big Sur\u4ecd\u5904\u4e8e\u5f00\u53d1\u4eba\u5458\u7684\u6d4b\u8bd5\u9636\u6bb5\uff0c\u6240\u4ee5\u5728\u53d1\u5e03\u4e4b\u524d\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u4f46\u8fd9\u5c31\u662f\u73b0\u5728\u7684\u60c5\u51b5\u3002", "note_en": "An update to Safari in the macOS Big Sur developer release brings a long-absent, much-requested feature: support for 4K HDR streams from Netflix. Further, Apple TV is getting support for the VP9 video codec, meaning Apple TV 4K owners will finally be able to watch 4K YouTube videos in that device&#39;s YouTube app.\n Both changes address frustrations users have had in the Apple ecosystem when consuming video content. The Apple TV 4K is positioned as the world&#39;s most capable consumer streaming box, but it didn&#39;t support higher resolutions on one of the world&#39;s most popular apps. And while there has been less demand for 4K HDR on Macs given that most Macs don&#39;t have 4K or fully HDR screens, this is a welcome change for those who use external displays that do support those things.\n There is one important caveat, though. 4K HDR Netflix streams are  only supported on a few Macs. Only the 2018 or 2019 MacBook Pro models and the iMac Pro support HDR on the device&#39;s own display (though again, the specs don&#39;t meet the same HDR brightness standards that high-end TVs do). Those machines plus the 2018 Mac mini and the 2019 Mac Pro can do HDR on external displays.\n Also, while the Apple TV YouTube app did get 4K capability, Big Sur&#39;s Safari doesn&#39;t appear to have been updated to get the same functionality on YouTube. That could change between now and Big Sur&#39;s final release, though.\n In theory, the addition of HDR support to Safari on Macs applies to more than just Netflix, but this is the first publicly known example. Twitter user Ishan Agarwal shared a  screenshot proving the functionality is there. He made this discovery when he noticed the video he was watching on Netflix was playing in 4K and Dolby Vision, a popular HDR standard. 9to5Mac  reported on the tweet, breaking the story to more people.\n It&#39;s worth noting that AirPlay 2 newly supports 4K in iOS 14 and Big Sur, so this appears to be part of a concerted 4K push by Apple across its platforms. Also, in a development that is only tangentially related, the Apple TV app on LG TVs now  supports Dolby Atmos.\n iOS 14, tvOS 14, and macOS Big Sur are still in a testing phase with developers, so some things could change before release, but this is where things stand now.", "posttime": "2020-07-01 06:09:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "apple,youtube,\u7535\u8111,tv,hdr", "title": "Apple TV\u5c06\u62e5\u67094K YouTube\uff0cMac\u7535\u8111\u5c06\u62e5\u67094K HDR Netflix", "title_en": "The Apple TV is getting 4K YouTube, and Macs are getting 4K HDR Netflix", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/06/macs-will-finally-get-4k-hdr-netflix-streams-in-macos-big-sur/", "via": "", "real_tags": ["apple", "youtube", "\u7535\u8111", "tv", "hdr"]}, {"category": "", "categoryclass": "", "imagename": "8e1e4bf505125349976aa4da18ef0c6c.png", "infoid": 1009170, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e741\u6708\uff0c\u5b83\u6839\u672c\u6ca1\u6709\u8c08\u8bba\u533a\u5757\u94fe\uff0c\u800c\u662f\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u4e3a\u201cLinkedUp\u201d\u7684\u5f00\u653e\u793e\u4ea4\u7f51\u7edc\uff0c\u6709\u70b9\u50cfLinkedIn\u7684\u5f00\u653e\u7248\u672c\u3002\u6f14\u793a\u6ca1\u6709\u4e0a\u7ebf\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u5e76\u4e0d\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u76f4\u5230\u4f60\u610f\u8bc6\u5230\u5b83\u6ca1\u6709\u8fd0\u884c\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u670d\u52a1\u5668\uff0c\u800c\u4e14\u8fd0\u884c\u901f\u5ea6\u6bd4\u672c\u5730\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u66f4\u5feb\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0cDfinity\u5e76\u4e0d\u662f\u4e00\u5bb6\u4f20\u7edf\u7684\u533a\u5757\u94fe\u521d\u521b\u516c\u53f8\uff0c\u800c\u662f\u5728\u501f\u9274\u4e16\u754c\u5bf9\u53bb\u4e2d\u5fc3\u5316\u8fd0\u52a8\u7684\u62e5\u62a4\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u6b63\u5728\u5efa\u9020\u6240\u8c13\u7684\u201c\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u201d\uff1a\u4e00\u4e2a\u5206\u6563\u7684\u3001\u975e\u4e13\u6709\u7684\u7f51\u7edc\uff0c\u7528\u4e8e\u8fd0\u884c\u4e0b\u4e00\u4ee3\u7684\u201c\u5de8\u578b\u5e94\u7528\u7a0b\u5e8f\u201d\u3002\n\u4eca\u5929\uff0c\u8be5\u516c\u53f8\u5ba3\u5e03\uff0c\u201c\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u201d\u73b0\u5728\u5411\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u548c\u4f01\u4e1a\u5bb6\u5f00\u653e\uff0c\u8ba9\u4ed6\u4eec\u5efa\u9020\u4e0b\u4e00\u4ee3\u8ba1\u7b97\u673a\u3002\u6211\u4eec\u7684\u613f\u666f\u662f\u4ee5\u4e00\u79cd\u7834\u574fFacebook\u3001LinkedIn\u3001Instagram\u548cWhatsApp\u7b49\u865a\u62df\u5784\u65ad\u4f01\u4e1a\u7684\u80fd\u529b\u7684\u65b9\u5f0f\u201c\u91cd\u542f\u201d\u4e92\u8054\u7f51\u3002\n\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u6280\u672f\u6f14\u793a\uff0c\u5b83\u63a8\u51fa\u4e86\u201cCancan\u201d\uff0c\u8fd9\u662f\u4e00\u6b3e\u7c7b\u4f3cTikTok\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c(\u5c3d\u7ba1\u5b83\u672c\u8eab\u5e76\u4e0d\u516c\u5f00)\uff0c\u800c\u4e14\u4e0d\u5c5e\u4e8e\u4e00\u5bb6\u516c\u53f8\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5efa\u7acb\u81ea\u5df1\u7684TikTok\u3002\nDfinity\u7684\u60f3\u6cd5\u4e2d\u6700\u8bf1\u4eba\u7684\u90e8\u5206\u662f\uff0c\u7531\u4e8e\u67b6\u6784\u7684\u672c\u8d28\uff0c\u50cfCancan\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7528\u4e0d\u52301,000\u884c\u4ee3\u7801\u6765\u6784\u5efa\u3002\u4ee5Facebook\u4e3a\u4f8b\uff0c\u5b83\u5305\u542b\u8d85\u8fc76200\u4e07\u884c\u4ee3\u7801\u3002\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0cDfinity\u6b63\u5728\u5229\u7528WebAssembly\u7684\u5171\u540c\u521b\u5efa\u8005Andreas Rossberg\u7684\u5de5\u4f5c\uff0c\u4ed6\u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u4e86Motoko\uff0c\u8fd9\u662f\u4e00\u79cd\u4e3aDfinity\u7684\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u4f18\u5316\u7684\u65b0\u7f16\u7a0b\u8bed\u8a00\u3002\n\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u7684\u65e0\u670d\u52a1\u5668\u67b6\u6784\u5141\u8bb8\u4e92\u8054\u7f51\u672c\u5730\u6258\u7ba1\u8f6f\u4ef6\u548c\u670d\u52a1\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u5bf9\u4e13\u6709\u4e91\u670d\u52a1\u7684\u9700\u6c42-Dfinity\u58f0\u79f0\u3002\u6ca1\u6709Web\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u548c\u9632\u706b\u5899\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u66f4\u5feb\u5730\u521b\u5efa\u529f\u80fd\u5f3a\u5927\u7684\u8f6f\u4ef6\uff0c\u8f6f\u4ef6\u7684\u8fd0\u884c\u901f\u5ea6\u4e5f\u4f1a\u6bd4\u6b63\u5e38\u5feb\u5f97\u591a\u3002\nDFINITY\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u79d1\u5b66\u5bb6\u591a\u7c73\u5c3c\u514b\u00b7\u5a01\u5ec9\u59c6\u65af(Dominic Williams)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u6280\u672f\u9886\u57df\u51fa\u73b0\u7684\u6700\u5927\u95ee\u9898\u4e4b\u4e00\u662f\u5927\u578b\u79d1\u6280\u516c\u53f8\u5bf9\u4e92\u8054\u7f51\u7684\u5784\u65ad-\u8fd9\u4e9b\u516c\u53f8\u51e0\u4e4e\u5b8c\u5168\u63a7\u5236\u4e86\u6211\u4eec\u7684\u6280\u672f\u3002\u4ed6\u4eec\u6536\u96c6\u4e86\u5927\u91cf\u5173\u4e8e\u6211\u4eec\u7684\u4fe1\u606f\uff0c\u4ed6\u4eec\u51fa\u552e\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u83b7\u53d6\u5229\u6da6\u548c\u6760\u6746\uff0c\u4ee5\u79ef\u7d2f\u66f4\u5927\u7684\u5e02\u573a\u4efd\u989d\uff0c\u5e76\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u6536\u8d2d\u6216\u63a8\u5012\u7ade\u4e89\u5bf9\u624b\u3002\u2026\u3002\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u63d0\u4f9b\u4e86\u4e00\u79cd\u91cd\u542f\u4e92\u8054\u7f51\u7684\u65b9\u6cd5-\u521b\u5efa\u4e86\u4e13\u6709\u4e91\u57fa\u7840\u8bbe\u65bd\u7684\u516c\u5171\u66ff\u4ee3\u65b9\u6848\u3002\u5b83\u5c06\u4f7f\u4e0b\u4e00\u4ee3\u5f00\u53d1\u4eba\u5458\u548c\u4f01\u4e1a\u5bb6\u80fd\u591f\u901a\u8fc7\u5f00\u653e\u7684\u4e92\u8054\u7f51\u670d\u52a1\u4e0e\u5927\u578b\u79d1\u6280\u516c\u53f8\u7ade\u4e89\u3002\u5b83\u7684\u76ee\u6807\u662f\u5c06\u4e92\u8054\u7f51\u5e26\u56de\u5176\u81ea\u7531\u5f00\u653e\u7684\u6839\u57fa\uff0c\u800c\u4e0d\u662f\u7531\u5c11\u6570\u51e0\u5bb6\u516c\u53f8\u4e3b\u5bfc\u3002\n\u8fd9\u6b3e\u201c\u94a8\u4e1d\u201d\u4e92\u8054\u7f51\u7535\u8111\u7684\u53d1\u5e03\u610f\u5473\u7740\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u548c\u4f01\u4e1a\u5bb6\u5c06\u80fd\u591f\u5f00\u59cb\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\u8bd5\u6c34\uff0c\u5e76\u5f00\u59cb\u63a8\u51fa\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u667a\u80fd\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\u3002\n\u76ee\u524d\u6b63\u5728\u5efa\u8bbe\u7684\u9879\u76ee\u5305\u62ec\u4e00\u4e2a\u5206\u6563\u652f\u4ed8\u5e94\u7528\u7a0b\u5e8f\u548c\u4e00\u4e2a\u201c\u5962\u4f88\u54c1\u6cdb\u884c\u4e1a\u5e73\u53f0\u201d\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u3002\u6210\u529f\u548c\u6709\u524d\u9014\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u80fd\u53d7\u76ca\u4e8eBeacon Fund\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531DFINITY\u57fa\u91d1\u4f1a\u548cPolyChain Capital\u7ba1\u7406\u7684\u751f\u6001\u7cfb\u7edf\u57fa\u91d1\uff0c\u65e8\u5728\u652f\u6301\u5efa\u7acb\u5728\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u4e0a\u7684\u201cDefi\u201d\u5e94\u7528\u7a0b\u5e8f\u548c\u5f00\u653e\u7684\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\u6709\u5174\u8da3\u7684\u5f00\u53d1\u5546\u548c\u4f01\u4e1a\u53ef\u4ee5\u901a\u8fc7dfinity.org\u63d0\u4ea4\u7533\u8bf7\uff0c\u4ece2020\u5e747\u67081\u65e5\u8d77\u8bbf\u95ee\u4e92\u8054\u7f51\u8ba1\u7b97\u673a\u3002", "note_en": "In January this year it\u00a0didn\u2019t talk\u00a0about blockchain at all, but instead demonstrated\u00a0an  open social network called \u201cLinkedUp\u201d sort of open version of LinkedIn. The demonstration didn\u2019t go live and technically-speaking it was under-whelming until you realized it wasn\u2019t running or any server, and performed faster than a native mobile app. Dfinity, it turned out, wasn\u2019t a traditional blockchain startup, but was taking a leaf out of that world\u2019s championing of the move towards decentralization.\n In fact, it was building its so-called \u201cInternet Computer\u201d: a decentralized and non-proprietary network to run the next generation of \u2018mega-applications\u2019.\n  Today it announced that the \u201cInternet Computer\u201d is now open to third-party developers and entrepreneurs to build that next generation. The vision is to \u201creboot\u201d the internet in a way that destroys the ability to create virtual monopolies like Facebook, LinkedIn, Instagram, and WhatsApp.\n As its next technical demonstration, it launched \u201cCanCan\u201d, a TikTok-like app that will run in a browser (though it is not publicly available as such) and which is not owned by a company. The idea is that anyone could build their own TikTok.\n The tantalizing part of Dfinity\u2019s ideas is that because of the nature of the architecture, apps like CanCan can be built with less than 1,000 lines of code. Facebook, to take an example, contains over 62 million lines of code.\n To achieve this, Dfinity is drawing on the work of Andreas Rossberg, co-creator of WebAssembly, who has now created Motoko, a new programming language optimized for Dfinity\u2019s Internet Computer.\n The Internet Computer\u2019s serverless architecture allows the Internet to natively host software and services, eliminating \u2014 claims Dfinity \u2014 the need for proprietary cloud services. Without web servers, databases, and firewalls, developers can create powerful software much more quickly, and that software then runs far faster than normal.\n Dominic Williams, founder and Chief Scientist at  DFINITY   said in a statement: \u201cOne of the biggest problems emerging in technology is the monopolization of the internet by Big Tech \u2014 companies that have consolidated near-total control over our technologies. They collect vast amounts of information about us that they sell for profit and leverage to amass greater market share, and acquire or bulldoze rivals at an alarming rate\u2026 The Internet Computer provides a means to reboot the internet \u2014 creating a public alternative to proprietary cloud infrastructure. It will empower the next-generation of developers and entrepreneurs to take on Big Tech with open internet services. It aims to bring the internet back to its free and open roots \u2014 not dominated by a handful of corporations.\u201d\n This \u201cTungsten\u201d release of the Internet Computer means third-party developers and entrepreneurs, will be able to start kicking the tyres on this platform and start spitting out web apps and even smartphone apps.\n Projects currently being built include a decentralized payment application and a \u201cpan-industry platform for luxury goods\u201d, whatever that is. Successful and promising applications may also benefit from Beacon Fund, an ecosystem fund stewarded by the DFINITY Foundation and Polychain Capital that aims to support \u2018DeFi\u2019 apps and open internet services built on the Internet Computer.\n Interested developers and enterprises can submit an application to access the Internet Computer starting July 1, 2020 via dfinity.org.", "posttime": "2020-07-01 06:08:23", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7535\u8111,\u5f00\u53d1,\u6f14\u793a,demo,\u4e92\u8054\u7f51", "title": "\nDfinity\u6f14\u793a\u5176TikTok\u514b\u9686\uff0c\u5411\u5916\u90e8\u5f00\u53d1\u8005\u5f00\u653e\u5176\u201c\u4e92\u8054\u7f51\u7535\u8111\u201d", "title_en": "\n\t\t\t\tDfinity demo\u2019s its TikTok clone, opens up its \u2018Internet Computer\u2019 to outside developers\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/30/dfinity-demos-its-tiktok-clone-opens-up-its-internet-computer-to-outside-developers/", "via": "", "real_tags": ["\u7535\u8111", "\u5f00\u53d1", "\u6f14\u793a", "demo", "\u4e92\u8054\u7f51"]}, {"category": "", "categoryclass": "", "imagename": "19558891e67d374656dcc3d5f15129a4.jpg", "infoid": 1009169, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6709\u51e0\u6b21\u4eb2\u773c\u76ee\u7779\u4e86Skyguar\u7684\u65e0\u4eba\u673a\uff0c\u4e3b\u8981\u662f\u5728\u8bbf\u95ee\u4e9a\u6d32\u65f6\u3002\u52a0\u62ff\u5927\u56e2\u961f\u53c2\u4e0e\u4e86HAX\u7684\u9879\u76ee\uff0c\u5e76\u5728\u6df1\u5733\u529e\u4e8b\u5904\u5de5\u4f5c\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u5728\u53bb\u5e74\u5e74\u5e95\u6211\u4eec\u5728\u8fd9\u5ea7\u57ce\u5e02\u7684\u6700\u540e\u4e00\u4e2a\u786c\u4ef6\u6218\u573a\u4e0a\u8fdb\u884c\u4e86\u7ade\u4e89\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u6765\u8bf4\uff0c\u4e0e\u6211\u4ea4\u8c08\u8fc7\u7684\u6bcf\u4e2a\u4eba\u4f3c\u4e4e\u90fd\u5bf9\u8be5\u516c\u53f8\u7684\u53ef\u503e\u659c\u65cb\u7ffc\u6280\u672f\u5370\u8c61\u6df1\u523b\uff0c\u8be5\u6280\u672f\u4f7f\u5927\u578b\u5de5\u4e1a\u65e0\u4eba\u673a\u80fd\u591f\u4ee5\u66f4\u4f20\u7edf\u7684\u56db\u8f74\u98de\u884c\u5668\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b9\u5f0f\u8fdb\u884c\u673a\u52a8\u3002\u6211\u6beb\u4e0d\u6000\u7591\uff0c\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u6beb\u4e0d\u8d39\u529b\u5730\u5438\u5f15\u4e86\u5e0c\u671b\u5728\u65e0\u4eba\u673a\u9886\u57df\u5360\u636e\u4f18\u52bf\u7684\u516c\u53f8\u7684\u6ce8\u610f\uff0c\u5c31\u50cf\u5176\u4ed6\u8bb8\u591a\u673a\u5668\u4eba\u548c\u673a\u5668\u4eba/\u65e0\u4eba\u673a/\u81ea\u52a8\u5316\u516c\u53f8\u4e00\u6837\uff0c\u7531\u4e8e\u65b0\u51a0\u80ba\u708e\u7684\u5b58\u5728\uff0c\u5b83\u7684\u5174\u8da3\u5f97\u5230\u4e86\u76f8\u5f53\u5927\u7684\u63d0\u5347\u3002\n\u4eca\u5929\uff0c\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u5ba3\u5e03\uff0c\u5b83\u5df2\u7ecf\u5f00\u653e\u4e86\u65e0\u4eba\u673a\u7684\u9884\u8d2d\uff0c\u8ba1\u5212\u57282021\u5e74\u63a8\u51fa-\u5b83\u6ca1\u6709\u900f\u9732\u5b9a\u4ef7\uff0c\u4f46\u611f\u5174\u8da3\u7684\u4eba\u53ef\u4ee5\u652f\u4ed81000\u7f8e\u5143\u7684\u62bc\u91d1\uff0c\u53ef\u4ee5\u9000\u8fd8\u3002\u8be5\u516c\u53f8\u5df2\u7ecf\u5217\u51fa\u4e86\u201c100\u4e2a\u6f5c\u5728\u5ba2\u6237\u201d\uff0c\u5e76\u8ba1\u5212\u4e3a10\u5bb6\u8d22\u5bcc500\u5f3a\u516c\u53f8\u8fdb\u884c\u6f14\u793a\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5927\u6d41\u884c\u4e3a\u8fd9\u7c7b\u81ea\u52a8\u5316\u5de5\u4e1a\u68c0\u67e5\u8bbe\u5907\u6253\u5f00\u4e86\u66f4\u5927\u7684\u6f5c\u529b\u3002\u8be5\u516c\u53f8\u6307\u51fa\uff0c\u7f8e\u56fd\u8054\u90a6\u822a\u7a7a\u5c40(FAA)\u6700\u8fd1\u6682\u65f6\u514d\u9664\u4e86\u5bf9\u5fb7\u514b\u8428\u65af\u5dde\u77f3\u6cb9\u548c\u5929\u7136\u6c14\u5730\u70b9\u7684\u989d\u5916\u65e0\u4eba\u673a\u68c0\u67e5\uff0c\u56e0\u4e3a\u9884\u8ba1\u5de5\u4eba\u4eec\u5c06\u5446\u5728\u5bb6\u91cc\u3002\n\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5c3c\u57fa\u5854\u00b7\u4f0a\u67f3\u4ec0\u91d1\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u4eba\u4eec\u79bb\u5f00\u5371\u9669\u7684\u73af\u5883\uff0c\u56e0\u4e3a\u65b0\u51a0\u80ba\u708e\u7684\u5b58\u5728\uff0c\u5bf9\u8fd9\u4e00\u70b9\u7684\u9700\u6c42\u4ece\u672a\u50cf\u73b0\u5728\u8fd9\u6837\u5f3a\u70c8\u3002\u201d\nSkyGauge\u663e\u7136\u5728\u5927\u6d41\u884c\u671f\u95f4\u8fbe\u5230\u4e86\u5176\u65e9\u671f\u91c7\u7528\u8005\u8ba1\u5212\u7684\u6700\u5927\u9650\u5ea6\u3002\u6211\u5f88\u597d\u5947\uff0c\u8be5\u516c\u53f8\u7684\u6210\u529f\u6700\u7ec8\u662f\u5728\u4e8e\u751f\u4ea7\u81ea\u5df1\u7684\u65e0\u4eba\u673a\uff0c\u8fd8\u662f\u5c06\u5176\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6280\u672f\u6388\u6743\u7ed9\u7b2c\u4e09\u65b9\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5b83\u5df2\u7ecf\u7b79\u96c6\u4e8640\u4e07\u7f8e\u5143\u7684\u79cd\u5b50\u524d\u671f\u8d44\u91d1\uff0c\u5e76\u8ba1\u5212\u7b79\u96c6\u66f4\u591a\u8d44\u91d1\u3002", "note_en": "I have had a few occasions to see Skygauge\u2019s drones in-person, primarily on visits to Asia. The Canadian team is involved in HAX\u2019s program and has spent time working out of their Shenzhen offices. In fact, they competed at our last  hardware battlefield in the city late last year.\n To a person, everyone I\u2019ve spoken with seems impressed by the company\u2019s tiltable rotor technology, which allows the massive industrial drones to maneuver in ways more traditional quadcopters can\u2019t. I have little doubt the startup has had no trouble getting the attention of companies looking for an edge in the drone space, and like so many other robotics and robotics/drone/automation companies, it\u2019s gotten a pretty significant boost in interest due to COVID-19.\n  Today the startup announced that it has opened pre-orders on its drones, with plans to launch in 2021 \u2014 it\u2019s not disclosing pricing, but interested parties can plunk down a refundable $1,000 deposit. The company has already lined up \u201c100 potential customers,\u201d along with planned demos for 10 Fortune 500 companies. The pandemic, meanwhile, has opened up increased potential for these sorts of automated industrial inspection devices. The company notes a recent temporary FAA exemption for additional drone-based inspections of oil and gas sites in Texas, as workers are expected to stay home.\n \u201cOur goal is to get people out of dangerous environments and the need for this has never been greater because of COVID-19,\u201d co-founder and CEO Nikita Iliushkin says in a statement.\n Skygauge apparently maxed out its early adopter program during the pandemic. I\u2019ll be curious to see if the company\u2019s success ultimately lies in producing its own drones or licensing its impressive technology to third-parties. Meantime, it has raised $400,000 in pre-seed funding, with plans to raise more.", "posttime": "2020-07-01 06:08:03", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u521b\u65b0,innovative,\u65e0\u4eba\u673a", "title": "\nSkyguage\u7684\u521b\u65b0\u503e\u659c\u65cb\u7ffc\u65e0\u4eba\u673a\u6b63\u5728\u63a5\u53d7\u9884\u8ba2\uff0c\u5c06\u4e8e2021\u5e74\u4ea4\u4ed8", "title_en": "\n\t\t\t\tSkygauge\u2019s innovative tilting rotor drones are up for pre-order, with deliveries in 2021\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/30/skygauges-innovative-tilting-rotor-drones-are-up-for-pre-order-with-deliveries-in-2021/", "via": "", "real_tags": ["\u521b\u65b0", "\u65e0\u4eba\u673a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009168, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "--\u4e24\u4e2a\u7834\u6298\u53f7\u5f00\u59cb\u4e00\u884c\u6ce8\u91ca\u3002--[[\u6dfb\u52a0\u4e24\u4e2a\u548c]&#39\uff1bs\u4f7f\u5176\u6210\u4e3a\u591a\u884ccomment.--]]--1.\u53d8\u91cf\u548c\u6d41control.\u3002-num=42--\u6240\u6709\u6570\u5b57\u90fd\u662f\u53cc\u7cbe\u5ea6\u7684\u3002--Don&#39\uff1bt\u60ca\u614c\u5931\u63aa\uff0c64\u4f4d\u53cc\u7cbe\u5ea6\u6570\u670952\u4f4d\u7528\u4e8e--\u5b58\u50a8\u7cbe\u786e\u7684int\u503c\uff1b\u673a\u5668\u7cbe\u5ea6--\u5bf9\u4e8e\u9700\u8981&lt\uff1b52\u4f4d\u7684\u6574\u6570\u6765\u8bf4\u4e0d\u662f\u95ee\u9898\u3002s=&#39\uff1bWAlternate&#39\uff1b--\u50cfPython.t=&#34\uff1b\u8fd9\u6837\u7684\u4e0d\u53d8\u5b57\u7b26\u4e32\u4e5f\u5f88\u597d&#34\uff1bu=[[\u53cc\u62ec\u53f7\u5f00\u59cb\u548c\u7ed3\u675f\u591a\u884c\u5b57\u7b26\u4e32\u3002]]t=nil--\u672a\u5b9a\u4e49t\uff1bLua\u6709\u5783\u573e\u56de\u6536\u3002-\u5757\u8868\u793a\u4e3a\u5783\u573e\u6536\u96c6\u300250 do num=num+1--No++or+=type\u8fd0\u7b97\u7b26\u3002end--if\u5b50\u53e5\uff1aif num&gt\uff1b40\u5219print(&#39\uff1bover 40&#39\uff1b)\u5426\u5219\u5982\u679cs~=&#39\uff1bWAlternate&39\uff1b\u5219--~=\u4e0d\u7b49\u4e8e\u3002--\u7b49\u4ef7\u6027\u68c0\u67e5\u4e0ePython\u7c7b\u4f3c\uff1bSTR\u4e3aOK\u3002io.write(&#39\uff1b\u4e0d\u8d85\u8fc740\\n&#39\uff1b)--\u7f3a\u7701\u4e3astdout.Else--\u7f3a\u7701\u60c5\u51b5\u4e0b\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\u3002thisIsGlobal=5--\u9a86\u9a7c\u6848\u4f8b\u5f88\u5e38\u89c1\u3002--\u5982\u4f55\u5c06\u53d8\u91cf\u8bbe\u4e3aLOCAL\uff1aLOCAL LINE=io.read()--\u8bfb\u53d6\u4e0b\u4e00\u4e2astdin\u884c\u3002--\u5b57\u7b26\u4e32\u8fde\u63a5\u4f7f\u7528..\u3002\u64cd\u4f5c\u5458\uff1a\u6253\u5370(&#39\uff1b\u51ac\u5929\u5373\u5c06\u6765\u4e34\uff0c&#39\uff1b\u2026\u2026\u3002\u884c)end--\u672a\u5b9a\u4e49\u53d8\u91cf\u8fd4\u56denil\u3002--\u8fd9\u4e0d\u662f\u9519\u8bef\uff1afoo=anUnnownVariable--now foo=nil.aBoolValue=false--\u53ea\u6709nil\u548cfalse\u4e3afalse\uff1b0\u548c&#39\uff1b&#39\uff1b\u4e3atrue\uff01\u5982\u679c\u4e0d\u662faBoolValue\uff0c\u5219print(&#39\uff1btWAS false&#39\uff1b)end--&#39\uff1bor&#39\uff1band&#39\uff1b\u548c&#39\uff1b\u4e3a\u77ed\u8def\u3002\u6216&#39\uff1bno&#39\uff1b--&gt\uff1b&#39\uff1bno&#39\uff1bkarlSum=0\uff0c\u5bf9\u4e8ei=1,100 do--\u8303\u56f4\u5305\u62ec\u4e24\u7aef\u3002karlSum=karlSum+iend--\u4f7f\u7528&#34\uff1b100\uff0c1\uff0c-1&#34\uff1b\u4f5c\u4e3a\u5012\u8ba1\u65f6\u7684\u8303\u56f4\uff1afredSum=0 for j=100\uff0c1\uff0c-1 do fredSum=fredSum+j end--\u901a\u5e38\uff0c\u8303\u56f4\u662fBEGIN\uff0cEND[\uff0cSTEP]\u3002--\u53e6\u4e00\u4e2a\u5faa\u73af\u7ed3\u6784\uff1a\u91cd\u590d\u6253\u5370(&#39\uff1b\u672a\u6765\u7684\u65b9\u5f0f&#39\uff1b)Num=Num-1\u76f4\u5230Num==0--2.\u5982\u679cn&lt\uff0c\u5219Functions.--function fib(N)\uff1b2\u7136\u540e\u8fd4\u56de1 end return fib(n-2)+fib(n-1)end--\u95ed\u5305\u548c\u533f\u540d\u51fd\u6570\u90fd\u53ef\u4ee5\uff1a\u51fd\u6570add(X)--\u8fd4\u56de\u7684\u51fd\u6570\u662f\u5728\u8c03\u7528\u52a0\u6cd5\u5668\u65f6\u521b\u5efa\u7684\uff0c\u5e76\u4e14\u8bb0\u4f4fx\u7684\u503c\uff1a\u8fd4\u56de\u51fd\u6570(Y)return x+y enda1=add(9)a2=add(36)print(a1(16))--&gt\uff1b25print(a2(64))--&gt\uff1b100--\u8fd4\u56de\u3001\u51fd\u6570\u8c03\u7528\u548c\u8d4b\u503c\u90fd\u53ef\u4ee5\u4f7f\u7528\u957f\u5ea6\u53ef\u80fd\u4e0d\u5339\u914d\u7684\u5217\u8868\u3002--\u4e0d\u5339\u914d\u7684\u63a5\u6536\u65b9\u4e3a\u96f6\uff1b--\u4e0d\u5339\u914d\u7684\u53d1\u9001\u65b9\u88ab\u4e22\u5f03\u3002x\uff0cy\uff0cz=1\uff0c2\uff0c3\uff0c4--\u73b0\u5728x=1\uff0cy=2\uff0cz=3\uff0c4\u88ab\u4e22\u5f03\u3002\u51fd\u6570\u680f(a\uff0cb\uff0cc)print(a\uff0cb\uff0cc)\u8fd4\u56de4\uff0c8\uff0c15\uff0c16\uff0c23\uff0c42endx\uff0cy=bar(&#\u3002Zaphod nil nil&#34\uff1b--\u73b0\u5728x=4\uff0cy=8\uff0c\u503c15..42\u88ab\u4e22\u5f03\u3002--\u51fd\u6570\u662f\u4e00\u6d41\u7684\uff0c\u53ef\u4ee5\u662f\u5c40\u90e8/\u5168\u5c40\u7684\u3002--\u8fd9\u4e9b\u662f\u76f8\u540c\u7684\uff1a\u51fd\u6570f(X)return x*xendf=function(X)return x*x end--\u4e5f\u662f\u8fd9\u6837\uff1a\u5c40\u90e8\u51fd\u6570g(X)return math.sin(X)endlocal g\uff1bg=function(X)return math.sin(X)end--the&#39\uff1bDECL\u652f\u6301g-\u81ea\u5f15\u7528\u3002--\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0ctrig\u51fd\u6570\u4ee5\u5f27\u5ea6\u5f62\u5f0f\u5de5\u4f5c\u3002--\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u7684\u8c03\u7528\u4e0d\u9700\u8981\u62ec\u53f7\uff1aprint&#39\uff1bhello&#39\uff1b--Works fine.--3.Tables.--Tables=Lua\u552f\u4e00\u7684\u590d\u5408\u6570\u636e\u7ed3\u6784\uff1b--\u5b83\u4eec\u662f\u5173\u8054\u6570\u7ec4\u3002--\u7c7b\u4f3c\u4e8ephp\u6570\u7ec4\u6216js\u5bf9\u8c61\uff0c\u5b83\u4eec\u662f--\u6563\u5217\u67e5\u627e\u5b57\u5178\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u5217\u8868\u3002--\u4f7f\u7528\u8868\u683c\u4f5c\u4e3a\u5b57\u5178/\u6620\u5c04\uff1a--\u5b57\u5178\u6587\u5b57\u9ed8\u8ba4\u6709\u5b57\u7b26\u4e32\u952e\uff1at={key1=&#39\uff1bvalue1&#39\uff1b\uff0ckey2=false}--\u5b57\u7b26\u4e32\u952e\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3cjs\u7684\u70b9\u53f7\uff1aprint(t.key1)--prints&#39\uff1bvalue1&#39\uff1b.t.newKey={}--\u6dfb\u52a0\u65b0\u7684\u952e/\u503c\u5bf9\u3002t.key2=nil--\u4ece\u8868\u4e2d\u5220\u9664key2\u3002--\u4efb\u4f55(\u975enil)\u503c\u7684\u6587\u5b57\u8868\u793a\u6cd5\u4f5c\u4e3a\u952e\uff1au={[&#39\uff1b@\uff01#&#39\uff1b]=&#39\uff1bQbert&#39\uff1b\uff0c[{}]=1729\uff0c[6.28]=&#39\uff1btau&#39\uff1b}print(u[6.28])--print&#34\uff1b--\u952e\u5339\u914d\u57fa\u672c\u4e0a\u662f\u6309\u6570\u5b57\u548c\u5b57\u7b26\u4e32\u7684\u503c\u8fdb\u884c\u7684\uff0c\u4f46\u5bf9\u8868\u662f\u6309\u6807\u8bc6\u8fdb\u884c\u7684\u3002a=u[&#39\uff1b@\uff01#&#39\uff1b]--\u73b0\u5728a=&#39\uff1bqbert&39\uff1b.b=u[{}]--\u6211\u4eec\u53ef\u80fd\u671f\u671b1729\uff0c\u4f46\u7531\u4e8e\u67e5\u627e\u5931\u8d25\uff0c\u56e0\u6b64\u5b83\u4e3anil\uff1a--b=nil\u3002\u5b83\u5931\u8d25\u4e86--\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u952e\u4e0e\u7528\u4e8e\u5b58\u50a8\u539f\u59cb\u503c\u7684\u952e\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u56e0\u6b64--\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u662f\u66f4\u4fbf\u643a\u7684\u952e\u3002--\u5355\u8868\u53c2\u6570\u51fd\u6570\u8c03\u7528\u4e0d\u9700\u8981\u62ec\u53f7\uff1a\u51fd\u6570h(X)print(x.key1)Endh{key1=&#39\uff1bsonmi~451&#39\uff1b}--prints&#39\uff1bsonmi~451&#39\uff1b.for key\uff0cval in Pair(U)do--Table\u8fed\u4ee3\u3002print(key\uff0cval)end--_G\u662f\u6240\u6709\u5168\u5c40\u7684\u7279\u6b8a\u8868\u683c\u3002print(_G[&#39\uff1b_G&#39\uff1b]==_G)--\u6253\u5370&#39\uff1btrue&#39\uff1b.--\u4f7f\u7528\u8868\u683c\u4f5c\u4e3a\u5217\u8868/\u6570\u7ec4\uff1a--\u5217\u8868\u6587\u5b57\u9690\u5f0f\u8bbe\u7f6e\u6574\u578b\u952e\uff1av={&#39\uff1bvalue1&#39\uff1b\uff0c&#39\uff1bvalue2&#39\uff1b\uff0c1.21\uff0c&#39\uff1bGigawts&#39\uff1b}\u5bf9\u4e8ei=1\uff0c#v do--#v\u662f\u5217\u8868\u7684v\u7684\u5927\u5c0f\u3002Print(v[i])--\u6307\u6570\u4ece1\u5f00\u59cb\uff01\uff01\u592a\u75af\u72c2\u4e86\uff01\u7ed3\u675f--A&#39\uff1b", "note_en": "-- Two dashes start a one-line comment.--[[ Adding two [&#39;s and ]&#39;s makes it a multi-line comment.--]]------------------------------------------------------ 1. Variables and flow control.----------------------------------------------------num = 42 -- All numbers are doubles.-- Don&#39;t freak out, 64-bit doubles have 52 bits for-- storing exact int values; machine precision is-- not a problem for ints that need &lt; 52 bits.s = &#39;walternate&#39; -- Immutable strings like Python.t = &#34;double-quotes are also fine&#34;u = [[ Double brackets start and end multi-line strings.]]t = nil -- Undefines t; Lua has garbage collection.-- Blocks are denoted with keywords like do/end:while num &lt; 50 do num = num + 1 -- No ++ or += type operators.end-- If clauses:if num &gt; 40 then print(&#39;over 40&#39;)elseif s ~= &#39;walternate&#39; then -- ~= is not equals. -- Equality check is == like Python; ok for strs. io.write(&#39;not over 40\\n&#39;) -- Defaults to stdout.else -- Variables are global by default. thisIsGlobal = 5 -- Camel case is common. -- How to make a variable local: local line = io.read() -- Reads next stdin line. -- String concatenation uses the .. operator: print(&#39;Winter is coming, &#39; .. line)end-- Undefined variables return nil.-- This is not an error:foo = anUnknownVariable -- Now foo = nil.aBoolValue = false-- Only nil and false are falsy; 0 and &#39;&#39; are true!if not aBoolValue then print(&#39;twas false&#39;) end-- &#39;or&#39; and &#39;and&#39; are short-circuited.-- This is similar to the a?b:c operator in C/js:ans = aBoolValue and &#39;yes&#39; or &#39;no&#39; --&gt; &#39;no&#39;karlSum = 0for i = 1, 100 do -- The range includes both ends. karlSum = karlSum + iend-- Use &#34;100, 1, -1&#34; as the range to count down:fredSum = 0for j = 100, 1, -1 do fredSum = fredSum + j end-- In general, the range is begin, end[, step].-- Another loop construct:repeat print(&#39;the way of the future&#39;) num = num - 1until num == 0------------------------------------------------------ 2. Functions.----------------------------------------------------function fib(n) if n &lt; 2 then return 1 end return fib(n - 2) + fib(n - 1)end-- Closures and anonymous functions are ok:function adder(x) -- The returned function is created when adder is -- called, and remembers the value of x: return function (y) return x + y endenda1 = adder(9)a2 = adder(36)print(a1(16)) --&gt; 25print(a2(64)) --&gt; 100-- Returns, func calls, and assignments all work-- with lists that may be mismatched in length.-- Unmatched receivers are nil;-- unmatched senders are discarded.x, y, z = 1, 2, 3, 4-- Now x = 1, y = 2, z = 3, and 4 is thrown away.function bar(a, b, c) print(a, b, c) return 4, 8, 15, 16, 23, 42endx, y = bar(&#39;zaphod&#39;) --&gt; prints &#34;zaphod nil nil&#34;-- Now x = 4, y = 8, values 15..42 are discarded.-- Functions are first-class, may be local/global.-- These are the same:function f(x) return x * x endf = function (x) return x * x end-- And so are these:local function g(x) return math.sin(x) endlocal g; g = function (x) return math.sin(x) end-- the &#39;local g&#39; decl makes g-self-references ok.-- Trig funcs work in radians, by the way.-- Calls with one string param don&#39;t need parens:print &#39;hello&#39; -- Works fine.------------------------------------------------------ 3. Tables.------------------------------------------------------ Tables = Lua&#39;s only compound data structure;-- they are associative arrays.-- Similar to php arrays or js objects, they are-- hash-lookup dicts that can also be used as lists.-- Using tables as dictionaries / maps:-- Dict literals have string keys by default:t = {key1 = &#39;value1&#39;, key2 = false}-- String keys can use js-like dot notation:print(t.key1) -- Prints &#39;value1&#39;.t.newKey = {} -- Adds a new key/value pair.t.key2 = nil -- Removes key2 from the table.-- Literal notation for any (non-nil) value as key:u = {[&#39;@!#&#39;] = &#39;qbert&#39;, [{}] = 1729, [6.28] = &#39;tau&#39;}print(u[6.28]) -- prints &#34;tau&#34;-- Key matching is basically by value for numbers-- and strings, but by identity for tables.a = u[&#39;@!#&#39;] -- Now a = &#39;qbert&#39;.b = u[{}] -- We might expect 1729, but it&#39;s nil:-- b = nil since the lookup fails. It fails-- because the key we used is not the same object-- as the one used to store the original value. So-- strings &amp; numbers are more portable keys.-- A one-table-param function call needs no parens:function h(x) print(x.key1) endh{key1 = &#39;Sonmi~451&#39;} -- Prints &#39;Sonmi~451&#39;.for key, val in pairs(u) do -- Table iteration. print(key, val)end-- _G is a special table of all globals.print(_G[&#39;_G&#39;] == _G) -- Prints &#39;true&#39;.-- Using tables as lists / arrays:-- List literals implicitly set up int keys:v = {&#39;value1&#39;, &#39;value2&#39;, 1.21, &#39;gigawatts&#39;}for i = 1, #v do -- #v is the size of v for lists. print(v[i]) -- Indices start at 1 !! SO CRAZY!end-- A &#39;list&#39; is not a real type. v is just a table-- with consecutive integer keys, treated as a list.------------------------------------------------------ 3.1 Metatables and metamethods.------------------------------------------------------ A table can have a metatable that gives the table-- operator-overloadish behavior. Later we&#39;ll see-- how metatables support js-prototypey behavior.f1 = {a = 1, b = 2} -- Represents the fraction a/b.f2 = {a = 2, b = 3}-- This would fail:-- s = f1 + f2metafraction = {}function metafraction.__add(f1, f2) sum = {} sum.b = f1.b * f2.b sum.a = f1.a * f2.b + f2.a * f1.b return sumendsetmetatable(f1, metafraction)setmetatable(f2, metafraction)s = f1 + f2 -- call __add(f1, f2) on f1&#39;s metatable-- f1, f2 have no key for their metatable, unlike-- prototypes in js, so you must retrieve it as in-- getmetatable(f1). The metatable is a normal table-- with keys that Lua knows about, like __add.-- But the next line fails since s has no metatable:-- t = s + s-- Class-like patterns given below would fix this.-- An __index on a metatable overloads dot lookups:defaultFavs = {animal = &#39;gru&#39;, food = &#39;donuts&#39;}myFavs = {food = &#39;pizza&#39;}setmetatable(myFavs, {__index = defaultFavs})eatenBy = myFavs.animal -- works! thanks, metatable-- Direct table lookups that fail will retry using-- the metatable&#39;s __index value, and this recurses.-- An __index value can also be a function(tbl, key)-- for more customized lookups.-- Values of __index,add, .. are called metamethods.-- Full list. Here a is a table with the metamethod.-- __add(a, b) for a + b-- __sub(a, b) for a - b-- __mul(a, b) for a * b-- __div(a, b) for a / b-- __mod(a, b) for a % b-- __pow(a, b) for a ^ b-- __unm(a) for -a-- __concat(a, b) for a .. b-- __len(a) for #a-- __eq(a, b) for a == b-- __lt(a, b) for a &lt; b-- __le(a, b) for a &lt;= b-- __index(a, b) &lt;fn or a table&gt; for a.b-- __newindex(a, b, c) for a.b = c-- __call(a, ...) for a(...)------------------------------------------------------ 3.2 Class-like tables and inheritance.------------------------------------------------------ Classes aren&#39;t built in; there are different ways-- to make them using tables and metatables.-- Explanation for this example is below it.Dog = {} -- 1.function Dog:new() -- 2. newObj = {sound = &#39;woof&#39;} -- 3. self.__index = self -- 4. return setmetatable(newObj, self) -- 5.endfunction Dog:makeSound() -- 6. print(&#39;I say &#39; .. self.sound)endmrDog = Dog:new() -- 7.mrDog:makeSound() -- &#39;I say woof&#39; -- 8.-- 1. Dog acts like a class; it&#39;s really a table.-- 2. function tablename:fn(...) is the same as-- function tablename.fn(self, ...)-- The : just adds a first arg called self.-- Read 7 &amp; 8 below for how self gets its value.-- 3. newObj will be an instance of class Dog.-- 4. self = the class being instantiated. Often-- self = Dog, but inheritance can change it.-- newObj gets self&#39;s functions when we set both-- newObj&#39;s metatable and self&#39;s __index to self.-- 5. Reminder: setmetatable returns its first arg.-- 6. The : works as in 2, but this time we expect-- self to be an instance instead of a class.-- 7. Same as Dog.new(Dog), so self = Dog in new().-- 8. Same as mrDog.makeSound(mrDog); self = mrDog.------------------------------------------------------ Inheritance example:LoudDog = Dog:new() -- 1.function LoudDog:makeSound() s = self.sound .. &#39; &#39; -- 2. print(s .. s .. s)endseymour = LoudDog:new() -- 3.seymour:makeSound() -- &#39;woof woof woof&#39; -- 4.-- 1. LoudDog gets Dog&#39;s methods and variables.-- 2. self has a &#39;sound&#39; key from new(), see 3.-- 3. Same as LoudDog.new(LoudDog), and converted to-- Dog.new(LoudDog) as LoudDog has no &#39;new&#39; key,-- but does have __index = Dog on its metatable.-- Result: seymour&#39;s metatable is LoudDog, and-- LoudDog.__index = LoudDog. So seymour.key will-- = seymour.key, LoudDog.key, Dog.key, whichever-- table is the first with the given key.-- 4. The &#39;makeSound&#39; key is found in LoudDog; this-- is the same as LoudDog.makeSound(seymour).-- If needed, a subclass&#39;s new() is like the base&#39;s:function LoudDog:new() newObj = {} -- set up newObj self.__index = self return setmetatable(newObj, self)end------------------------------------------------------ 4. Modules.------------------------------------------------------[[ I&#39;m commenting out this section so the rest of-- this script remains runnable.\n  -- Suppose the file mod.lua looks like this:local M = {}local function sayMyName() print(&#39;Hrunkner&#39;)endfunction M.sayHello() print(&#39;Why hello there&#39;) sayMyName()endreturn M-- Another file can use mod.lua&#39;s functionality:local mod = require(&#39;mod&#39;) -- Run the file mod.lua.-- require is the standard way to include modules.-- require acts like: (if not cached; see below)local mod = (function () &lt;contents of mod.lua&gt;end)()-- It&#39;s like mod.lua is a function body, so that-- locals inside mod.lua are invisible outside it.-- This works because mod here = M in mod.lua:mod.sayHello() -- Says hello to Hrunkner.-- This is wrong; sayMyName only exists in mod.lua:mod.sayMyName() -- error-- require&#39;s return values are cached so a file is-- run at most once, even when require&#39;d many times.-- Suppose mod2.lua contains &#34;print(&#39;Hi!&#39;)&#34;.local a = require(&#39;mod2&#39;) -- Prints Hi!local b = require(&#39;mod2&#39;) -- Doesn&#39;t print; a=b.-- dofile is like require without caching:dofile(&#39;mod2.lua&#39;) --&gt; Hi!dofile(&#39;mod2.lua&#39;) --&gt; Hi! (runs it again)-- loadfile loads a lua file but doesn&#39;t run it yet.f = loadfile(&#39;mod2.lua&#39;) -- Call f() to run it.-- loadstring is loadfile for strings.g = loadstring(&#39;print(343)&#39;) -- Returns a function.g() -- Prints out 343; nothing printed before now.--]]------------------------------------------------------ 5. References.------------------------------------------------------[[I was excited to learn Lua so I could make gameswith the  L\u00f6ve 2D game engine. That&#39;s the why.I started with  BlackBulletIV&#39;s Lua for programmers.Next I read the official  Programming in Lua book.That&#39;s the how.It might be helpful to check out the  Lua shortreference on lua-users.org.The main topics not covered are standard libraries: *  string library *  table library *  math library *  io library *  os libraryBy the way, this entire file is valid Lua; save itas  learn.lua and run it with &#34;lua learn.lua&#34; !This was first written for tylerneylon.com. It&#39;salso available as a  github gist. Tutorials for otherlanguages, in the same style as this one, are here: http://learnxinyminutes.com/Have fun with Lua!--]]", "posttime": "2020-07-01 06:06:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learn,\u51fd\u6570", "title": "15\u5206\u949f\u540e\u5b66\u4e60Lua", "title_en": "Learn Lua in 15 Minutes", "transed": 1, "url": "http://tylerneylon.com/a/learn-lua/", "via": "", "real_tags": ["\u5b66\u4e60", "learn", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "52f56e7cd73c5c5bddcf665962247ceb.jpg", "infoid": 1009167, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9274\u4e8e\u6700\u8fd1\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u6297\u8bae\u6d3b\u52a8\u7684\u5377\u571f\u91cd\u6765\uff0c\u5173\u4e8e\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u4ee5\u53ca\u5982\u4f55\u7f29\u5c0f\u8d2b\u5bcc\u5dee\u8ddd\u7684\u8ba8\u8bba\u518d\u6b21\u5c55\u5f00(\u5c3c\u79d1\u5c14\u00b7\u6c49\u5a1c-\u743c\u65af\uff0c\u5b89\u59ae\u00b7\u52b3\u91cc)\u3002\u6211\u8fc7\u53bb\u66fe\u591a\u6b21\u5199\u8fc7\u8fd9\u4e2a\u9898\u76ee(I\u3001II\u3001III\u3001IV)\u3002\u591a\u5e74\u6765\u6211\u4e00\u76f4\u8bd5\u56fe\u5f3a\u8c03\u7684\u4e00\u4ef6\u4e8b\uff0c\u6211\u5c06\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u518d\u6b21\u5f3a\u8c03\uff0c\u7531\u4e8e\u7f8e\u56fd\u6781\u5176\u96c6\u4e2d\u7684\u8d22\u5bcc\u5206\u914d\uff0c\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u51e0\u4e4e\u5b8c\u5168\u662f\u6bcf\u4e2a\u79cd\u65cf\u7fa4\u4f53\u4e2d\u7684\u4e0a\u5c42\u9636\u7ea7\u9020\u6210\u7684\u3002\u6211\u8fd9\u6837\u8bf4\u5e76\u4e0d\u662f\u8bf4\u5b83\u4e0d\u91cd\u8981\uff0c\u800c\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u8981\u8ba4\u771f\u52aa\u529b\u7f29\u5c0f\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\uff0c\u5c31\u5fc5\u987b\u9884\u5148\u5904\u7406\u8fd9\u4e00\u4e8b\u5b9e\u3002\n\u5982\u679c\u4f60\u628a\u6240\u6709\u767d\u4eba\u5bb6\u5ead\u7684\u51c0\u8d44\u4ea7\u9664\u4ee5\u767d\u4eba\u5bb6\u5ead\u7684\u6570\u91cf\uff0c\u4f60\u4f1a\u5f97\u5230900,600\u7f8e\u5143\u3002\u5982\u679c\u4f60\u5bf9\u9ed1\u4eba\u5bb6\u5ead\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f60\u4f1a\u5f97\u523014\u4e07\u7f8e\u5143\u3002\u8fd9\u4e9b\u6570\u5b57\u4e4b\u95f4\u7684\u5dee\u989d-770,600\u7f8e\u5143-\u662f\u6574\u4f53\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u7684\u6700\u4f73\u4ee3\u8868\u3002\u8fd9\u5c31\u662f\u9ed1\u4eba\u6bcf\u6237\u9700\u8981\u591a\u5c11\u8d22\u5bcc\u624d\u80fd\u62e5\u6709\u548c\u767d\u4eba\u6bcf\u6237\u4e00\u6837\u591a\u7684\u8d22\u5bcc\u3002\n\u4f46\u603b\u4f53\u7edf\u8ba1\u6570\u636e\u53ef\u80fd\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u5982\u679c\u4f60\u628a\u8fd9\u4e24\u6761\u90fd\u5206\u89e3\u6210\u5341\u8fdb\u5236\uff0c\u4f60\u4f1a\u53d1\u73b0\u51e0\u4e4e\u6240\u6709\u7684\u767d\u4eba\u8d22\u5bcc\u90fd\u5c5e\u4e8e\u6700\u5bcc\u6709\u768410%\u7684\u767d\u4eba\u5bb6\u5ead\uff0c\u5c31\u50cf\u51e0\u4e4e\u6240\u6709\u7684\u9ed1\u4eba\u8d22\u5bcc\u90fd\u5c5e\u4e8e\u6700\u5bcc\u6709\u768410%\u7684\u9ed1\u4eba\u5bb6\u5ead\u4e00\u6837\u3002\u6bcf\u4e2a\u79cd\u65cf\u7fa4\u4f53\u7684\u4e2d\u4e0b\u7b49\u9636\u5c42\u51e0\u4e4e\u4e0d\u62e5\u6709\u4ed6\u4eec\u79cd\u65cf\u7fa4\u4f53\u7684\u4efb\u4f55\u8d22\u5bcc\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u6574\u4e2a\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\u51e0\u4e4e\u5b8c\u5168\u662f\u7531\u6700\u5bcc\u6709\u768410%\u7684\u767d\u4eba\u548c\u6700\u5bcc\u6709\u768410%\u7684\u9ed1\u4eba\u4e4b\u95f4\u7684\u5dee\u8ddd\u63a8\u52a8\u7684\u3002\n\u8bf4\u660e\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5(h/t Sam Tobin-Hochstadt)\u662f\u770b\u770b\u5982\u679c\u6211\u4eec\u5b8c\u5168\u7f29\u5c0f\u6bcf\u4e2a\u79cd\u65cf\u6700\u5e95\u5c4290%\u4e4b\u95f4\u5b58\u5728\u7684\u8d2b\u5bcc\u5dee\u8ddd\uff0c\u6574\u4e2a\u79cd\u65cf\u7684\u8d2b\u5bcc\u5dee\u8ddd\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6362\u53e5\u8bdd\u8bf4\uff1a\u5982\u679c\u6700\u5e95\u5c42\u768490%\u7684\u9ed1\u4eba\u5bb6\u5ead\u83b7\u5f97\u7684\u6bcf\u6237\u8d22\u5bcc\u4e0e\u6700\u5e95\u5c42\u768490%\u7684\u767d\u4eba\u5bb6\u5ead\u5b8c\u5168\u76f8\u540c\uff0c\u90a3\u4e48\u9ed1\u4eba\u8d22\u5bcc\u610f\u5473\u7740\u4ec0\u4e48\uff1f\n\u7b54\u6848\u662f\uff0c\u8fd9\u610f\u5473\u7740\u9ed1\u4eba\u8d22\u5bcc\u5c06\u4ece14\u4e07\u7f8e\u5143\u4e0a\u5347\u5230311,100\u7f8e\u5143\u3002\u56e0\u6b64\uff0c\u603b\u4f53\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u5c06\u4ece760,600\u7f8e\u5143\u4e0b\u964d\u5230589,500\u7f8e\u5143\uff0c\u964d\u5e45\u4e3a22.5%\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u4f60\u5b8c\u5168\u7f29\u5c0f\u4e86\u6bcf\u4e2a\u79cd\u65cf\u4e2d\u6700\u5e95\u5c4290%\u4e4b\u95f4\u7684\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\uff0c\u6574\u4e2a\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\u768477.5%\u4ecd\u7136\u5b58\u5728\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u79cd\u65cf\u4e2d\u6392\u540d\u524d\u5341\u4f4d\u4e4b\u95f4\u7684\u5dee\u8ddd\u63a8\u52a8\u4e86\u8d85\u8fc7\u56db\u5206\u4e4b\u4e09\u7684\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\u3002\n\u5728\u8bb8\u591a\u5173\u4e8e\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u7684\u6d41\u884c\u8ba8\u8bba\u4e2d\uff0c\u5f3a\u8c03\u7684\u662f\u4e2d\u7b49\u767d\u4eba\u5bb6\u5ead\u548c\u4e2d\u7b49\u9ed1\u4eba\u5bb6\u5ead\u3002\u8981\u7406\u89e3\u8fd9\u79cd\u5f3a\u8c03\u662f\u591a\u4e48\u8bef\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u6309\u7167\u4e0a\u9762\u6240\u505a\u7684\u90a3\u6837\u505a\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e00\u573a\u6bd4\u8d5b\u4e2d\u57ab\u5e9550%\u7684\u4eba\u6765\u8bf4\u3002\u5728\u5b8c\u6210\u4e86\u76ee\u524d\u6700\u5e95\u5c42\u768450%\u7684\u9ed1\u4eba\u5bb6\u5ead\uff0c\u4f7f\u4ed6\u4eec\u6bcf\u4e2a\u5bb6\u5ead\u62e5\u6709\u7684\u8d22\u5bcc\u4e0e\u76ee\u524d\u6700\u5e95\u5c42\u768450%\u7684\u767d\u4eba\u5bb6\u5ead\u4e00\u6837\u591a\u4e4b\u540e\uff0c\u8fd9\u610f\u5473\u7740\u9ed1\u4eba\u8d22\u5bcc\u589e\u52a0\u4e8623100\u7f8e\u5143\uff0c\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\u7f29\u5c0f\u4e863%\u3002\n\u8fd9\u8868\u660e\uff0c\u603b\u4f53\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u768497%\u662f\u7531\u6bcf\u4e2a\u79cd\u65cf\u7fa4\u4f53\u4e2d\u4f4d\u6570\u4ee5\u4e0a\u7684\u5bb6\u5ead\u63a8\u52a8\u7684\u3002\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4f60\u80fd\u5f97\u51fa\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u8bba\uff0c\u8868\u660e\u76f8\u5bf9\u8f83\u5c11\u7684\u94b1\u53ef\u4ee5\u6781\u5927\u5730\u7f29\u5c0f(\u4e2d\u4f4d\u6570)\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\uff1a\u8ba9\u62e5\u6709\u76f8\u5bf9\u8f83\u5c11\u7684\u4e24\u4e2a\u7fa4\u4f53\u62e5\u6709\u540c\u6837\u6570\u91cf\u7684\u76f8\u5bf9\u8f83\u5c11\u7684\u8d22\u5bcc\u5e76\u4e0d\u662f\u90a3\u4e48\u56f0\u96be\u3002\u4f46\u8fd9\u4e9b\u63aa\u65bd\u4e0d\u4f1a\u5bf9\u6574\u4e2a\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u4ea7\u751f\u592a\u5927\u5f71\u54cd\u3002\n\u5728\u6211\u770b\u6765\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u7f29\u5c0f\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u65f6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5e94\u8be5\u4f1a\u8feb\u4f7f\u6211\u4eec\u66f4\u6e05\u695a\u5730\u77e5\u9053\u6211\u4eec\u5230\u5e95\u60f3\u8981\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\u3002\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u4f7f\u9ed1\u4eba\u7684\u8d22\u5bcc\u5206\u914d\u4e0e\u767d\u4eba\u7684\u8d22\u5bcc\u5206\u914d\u76f8\u5339\u914d\uff0c\u90a3\u4e48\u4fee\u590d\u79cd\u65cf\u8d2b\u5bcc\u5dee\u8ddd\u4e3b\u8981\u6d89\u53ca\u5728\u767d\u4eba\u548c\u9ed1\u4eba\u4e0a\u5c42\u9636\u7ea7\u4e4b\u95f4\u91cd\u65b0\u5206\u914d\u5927\u91cf\u8d22\u5bcc\u3002\u8fd9\u5c31\u662f\u8d22\u5bcc\u6240\u5728\uff0c\u4e5f\u5c31\u662f\u8d2b\u5bcc\u5dee\u8ddd\u6240\u5728\u3002\n\u5982\u679c\u6211\u4eec\u53ea\u662f\u8bd5\u56fe\u8ba9\u201c\u666e\u901a\u9ed1\u4eba\u5bb6\u5ead\u201d(\u7531\u4e2d\u4f4d\u6570\u5b9a\u4e49)\u770b\u8d77\u6765\u50cf\u201c\u666e\u901a\u767d\u4eba\u5bb6\u5ead\u201d\uff0c\u90a3\u4e48\u6210\u672c\u5f88\u4f4e(\u5360\u56fd\u6c11\u8d22\u5bcc\u76840.5%)\uff0c\u56e0\u4e3a\u5b83\u5ffd\u7565\u4e86\u6240\u6709\u62e5\u6709\u53ef\u89c2\u8d22\u5bcc\u7684\u4eba\u3002\n\u8fd9\u4e24\u4e2a\u60f3\u6cd5\u5728\u4e0d\u540c\u7684\u65b9\u9762\u770b\u8d77\u6765\u6709\u70b9\u8352\u8c2c\uff0c\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u662f\u4e0a\u5c42\u9636\u7ea7\u4e4b\u95f4\u7684\u4e89\u5435\uff0c\u7b2c\u4e8c\u4e2a\u60f3\u6cd5\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u771f\u6b63\u51cf\u5c11\u603b\u4f53\u79cd\u65cf\u8d22\u5bcc\u4e0d\u5e73\u7b49\u3002\u5f53\u7136\uff0c\u514b\u670d\u8fd9\u79cd\u675f\u7f1a\u7684\u65b9\u6cd5\u662f\u627f\u8ba4\uff0c\u79cd\u65cf\u8d44\u672c\u4e3b\u4e49\u5c06\u51e0\u4e4e\u6240\u6709\u7684\u56fd\u5bb6\u8d22\u5bcc\u96c6\u4e2d\u5728\u5c11\u6570\u767d\u4eba\u5bb6\u5ead\u624b\u4e2d\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u662f\u5c06\u8fd9\u4e9b\u8d22\u5bcc\u91cd\u65b0\u5206\u914d\u7ed9\u591a\u79cd\u65cf\u7684\u4e0b\u5c42\u9636\u7ea7\u548c\u5de5\u4eba\u9636\u7ea7\uff0c\u540c\u65f6\u89e3\u51b3\u79cd\u65cf\u548c\u9636\u7ea7\u4e0d\u5e73\u7b49\u95ee\u9898\u3002", "note_en": "In light of the recent resurgence of Black Lives Matter protests, there has been renewed discussion of the racial wealth gap and how to close it ( Nikole Hannah-Jones,  Annie Lowrey). I have written on this topic many times in the past ( I,  II,  III,  IV). One thing I have tried to emphasize over the years, which I will do again here in a different way, is that due to the extremely concentrated wealth distribution in the US, the racial wealth gap is almost entirely about the upper classes in each racial group. I say this not to imply that it is unimportant but rather because this fact must be grappled with upfront if we are going to make a serious effort to close the racial wealth gap.\n If you take the net worth of all white households and divide it by the number of white households, you get $900,600. If you do the same thing for black households, you get $140,000. The difference between these figures \u2014 $770,600 \u2014 is the best representation of the overall racial wealth gap. That is how much more wealth black people would need per household to have as much wealth as white people have per household.\n   But overall statistics can be misleading. If you decompose both of these bars into deciles, what you find is that nearly all white wealth is owned by the top 10 percent of white households just as nearly all black wealth is owned by the top 10 percent of black households. The lower and middle deciles of each racial group own virtually none of their racial group\u2019s wealth.\n   What this means is that the overall racial wealth disparity is being driven almost entirely by the disparity between the wealthiest 10 percent of white people and the wealthiest 10 percent of black people.\n One way to illustrate this point (h/t  Sam Tobin-Hochstadt) is to see what would happen to the overall racial wealth gap if we entirely closed the wealth gap that exists between the bottom 90 percent of each racial group. Put differently: what would happen to mean black wealth if the bottom 90 percent of black families were given the exact same per-household wealth as the bottom 90 percent of white families?\n The answer is that mean black wealth would rise from $140,000 to $311,100. The overall racial wealth gap would thus decline from $760,600 to $589,500, a fall of 22.5 percent. This means that even after you have completely closed the racial wealth gap between the bottom 90 percent of each race, 77.5 percent of the overall racial wealth gap still remains, which is to say that the disparity between the top deciles in each race drives over three-fourths of the racial wealth gap.\n   In much of the popular discourse on the racial wealth gap, the emphasis is on the median white household and the median black household. To understand how misguided this emphasis is, we can do exactly what we did above but for the bottom 50 percent of each race. After topping off the current bottom 50 percent of black families so that they have as much wealth per household as the current bottom 50 percent of white families, mean black wealth rises by $23,100, cutting the racial wealth gap by 3 percent.\n   What this shows is that 97 percent of the overall racial wealth gap is driven by households above the median of each racial group. This explains why you can produce shocking conclusions that show a relatively small amount of money can dramatically reduce the (median) racial wealth difference: it is not that hard to get two groups who own relatively little to own the same amount of relatively little. But such measures would not make much of a dent in the overall racial wealth gap.\n In my mind, this information should force us to be more clear about what exactly we are trying to achieve when we talk about closing the racial wealth gap. If we are trying to make the black wealth distribution match the white wealth distribution, then fixing the racial wealth gap mostly involves redistributing a lot of wealth between the white and black upper classes. That\u2019s where the wealth is and so that\u2019s where the wealth gap is.\n If we are just trying to make it so the \u201ceveryday black family\u201d (defined by the median) looks like the \u201ceveryday white family,\u201d then that costs very little ( 0.5 percent of the national wealth) because it ignores all the people who own meaningful amounts of wealth.\n Both ideas seem a bit ridiculous in different ways, the first idea because it\u2019s essentially a squabble between the upper classes, the second idea because it does nothing to really cut down on overall racial wealth inequality. The way through this bind is of course to acknowledge that racial capitalism has concentrated almost all of the national wealth in the hands of a small number of white families and that the proper course of action is to redistribute that wealth to the multiracial lower and working classes, tackling both racial and class inequality simultaneously.", "posttime": "2020-07-01 05:58:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d22\u5bcc,wealth", "title": "\u79cd\u65cf\u8d22\u5bcc\u5dee\u8ddd\u662f\u5173\u4e8e\u4e0a\u5c42\u9636\u7ea7\u7684", "title_en": "The Racial Wealth Gap Is About the Upper Classes", "transed": 1, "url": "https://www.peoplespolicyproject.org/2020/06/29/the-racial-wealth-gap-is-about-the-upper-classes/", "via": "", "real_tags": ["\u8d22\u5bcc", "wealth"]}, {"category": "", "categoryclass": "", "imagename": "ee115d93452e0ba76405355bd5f18a7d.jpg", "infoid": 1009166, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u5468\u4e8c\u88c1\u5b9a\uff0c\u7f8e\u56fd\u4e13\u5229\u5546\u6807\u5c40(US Patent And Trademark Office)\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u8ba4\u4e3abooking.com\u8fd9\u4e2a\u8bcd\u592a\u666e\u901a\u4e86\uff0c\u4e0d\u9002\u5408\u5546\u6807\u4fdd\u62a4\u3002\n\u5546\u6807\u6cd5\u7981\u6b62\u4efb\u4f55\u4eba\u6ce8\u518c\u63cf\u8ff0\u67d0\u7c7b\u4ea7\u54c1\u6216\u670d\u52a1\u7684\u901a\u7528\u672f\u8bed\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5f00\u529e\u4e00\u5bb6\u540d\u4e3a\u201c\u8461\u8404\u9152\u516c\u53f8\u201d\u7684\u5546\u5e97\u516c\u53f8\uff0c\u4f46\u4ed6\u4eec\u4e0d\u80fd\u7528\u5546\u6807\u6cd5\u6765\u963b\u6b62\u5176\u4ed6\u4eba\u4f7f\u7528\u76f8\u540c\u7684\u540d\u5b57\u3002\u8fd1\u5341\u5e74\u524d\uff0c\u5f53\u5728\u7ebf\u65c5\u6e38\u5de8\u5934Bookings Holdings\u5bfb\u6c42\u5c06\u5176booking.com\u57df\u540d\u6ce8\u518c\u4e3a\u5546\u6807\u65f6\uff0c\u7f8e\u56fd\u4e13\u5229\u5546\u6807\u5c40(US Patent And Trademark Office)\u5f97\u51fa\u7ed3\u8bba\uff0c\u540c\u6837\u7684\u89c4\u5219\u4e5f\u9002\u7528\u3002\nBooking Holdings\u5728\u6cd5\u5ead\u4e0a\u5bf9\u8fd9\u4e00\u51b3\u5b9a\u63d0\u51fa\u4e86\u8d28\u7591\u3002\u8be5\u516c\u53f8\u6307\u51fa\uff0c\u8c03\u67e5\u6570\u636e\u663e\u793a\uff0c\u6d88\u8d39\u8005\u5c06Booking.com\u8fd9\u4e00\u77ed\u8bed\u4e0e\u7279\u5b9a\u7f51\u7ad9\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u4f5c\u4e3a\u65c5\u6e38\u7f51\u7ad9\u7684\u901a\u7528\u672f\u8bed\u3002\u521d\u5ba1\u548c\u4e0a\u8bc9\u6cd5\u9662\u90fd\u7ad9\u5728booking.com\u4e00\u8fb9\uff0c\u8ba4\u4e3abooking.com\u6709\u8db3\u591f\u7684\u7279\u8272\uff0c\u503c\u5f97\u62e5\u6709\u81ea\u5df1\u7684\u5546\u6807--\u5373\u4f7f\u901a\u7528\u5355\u8bcdBooking\u4e0d\u80fd\u5355\u72ec\u6ce8\u518c\u5546\u6807\u3002\n\u4e3a\u4e86\u4fc3\u8fdb\u7ade\u4e89\uff0c\u5546\u6807\u6cd5\u62d2\u7edd\u4fdd\u62a4\u901a\u7528\u672f\u8bed\u3002\u5982\u679c\u4e00\u5bb6\u516c\u53f8\u53ef\u4ee5\u6ce8\u518c\u5546\u6807\uff0c\u6bd4\u5982Booking&34\uff1b\u6216Wine\uff0c&34\uff1b\u5b83\u53ef\u80fd\u4f1a\u5e72\u6270\u90a3\u4e9b\u60f3\u8981\u5728\u5e02\u573a\u4e0a\u51c6\u786e\u63cf\u8ff0\u5176\u4ea7\u54c1\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u8fd9\u5c06\u4f7f\u6ce8\u518c\u901a\u7528\u672f\u8bed\u7684\u516c\u53f8\u83b7\u5f97\u4e0d\u516c\u5e73\u7684\u4f18\u52bf\u3002\n\u4f46\u5927\u6cd5\u5b98\u9c81\u601d\u00b7\u5df4\u5fb7\u00b7\u91d1\u65af\u4f2f\u683c(Ruth Bader Ginsburg)(\u5176\u4ed6\u4e03\u540d\u5927\u6cd5\u5b98\u4e5f\u52a0\u5165\u5176\u4e2d)\u7684\u4e00\u4efd\u610f\u89c1\u53d1\u73b0\uff0c\u8fd9\u5e76\u4e0d\u662f\u5bf9\u7f51\u7edc\u5546\u6807\u7684\u4e25\u91cd\u62c5\u5fe7\u3002\u50cfTraocity\u6216Expedia\u8fd9\u6837\u7684\u516c\u53f8\u53ef\u80fd\u4f1a\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3a\u9884\u8ba2\u7f51\u7ad9\uff0c\u4f46\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3abooking.com\u3002\u91d1\u65af\u4f2f\u683c\u6307\u51fa\uff0c\u57df\u540d\u7cfb\u7edf\u7684\u89c4\u5219\u786e\u4fdd\u53ea\u6709\u4e00\u5bb6\u516c\u53f8\u53ef\u4ee5\u4f7f\u7528booking.com\u8fd9\u6837\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u6d88\u8d39\u8005\u5f88\u53ef\u80fd\u4f1a\u7406\u89e3\uff0cbooking.com\u6307\u7684\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u7f51\u7ad9-\u5b83\u4e0d\u662f\u4e00\u822c\u9884\u8ba2\u7f51\u7ad9\u7684\u901a\u7528\u672f\u8bed\u3002\n\u4f46\u5728\u4ed6\u552f\u4e00\u7684\u5f02\u8bae\u4e2d\uff0c\u5927\u6cd5\u5b98\u65af\u8482\u82ac\u00b7\u5e03\u96f7\u8036(Stephen Breyer)\u4e3b\u5f20\u626d\u8f6c\u8fd9\u4e00\u903b\u8f91\uff1a\u57df\u540d\u7cfb\u7edf\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u50cfbooking.com\u8fd9\u6837\u7684\u57df\u540d\u6301\u6709\u8005\u7684\u6392\u4ed6\u6027\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u57df\u540d\u9996\u5148\u9700\u8981\u6ce8\u518c\u5546\u6807\u5462\uff1f\u6bd5\u7adf\uff0c\u4e00\u5bb6\u4e0d\u62e5\u6709booking.com\u57df\u540d\u7684\u516c\u53f8\u4e0d\u592a\u53ef\u80fd\u60f3\u8981\u91c7\u7528\u8fd9\u4e2a\u5546\u6807\uff0c\u56e0\u4e3a\u8fd9\u53ea\u4f1a\u628a\u4e1a\u52a1\u8f6c\u79fb\u7ed9\u57df\u540d\u6240\u6709\u8005\u3002\n\u5e03\u96f7\u8036\u6307\u51fa\uff0c\u867d\u7136Traocity\u4e0d\u4f1a\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3aBooking.com\uff0c\u8fd9\u662f\u4e8b\u5b9e\uff0c\u4f46\u5b83\u4e5f\u4e0d\u4f1a\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3aBookking Inc\u3002\u7136\u800c\uff0c\u5546\u6807\u6cd5\u7981\u6b62\u4efb\u4f55\u4eba\u5c06\u8fd9\u6837\u4e00\u4e2a\u901a\u7528\u7684\u516c\u53f8\u540d\u79f0\u6ce8\u518c\u4e3a\u5546\u6807\u3002\n\u5e03\u96f7\u8036\u8ba4\u4e3a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u771f\u6b63\u4e8b\u5173\u91cd\u5927\u7684\u662f\u6ce8\u518c\u4e0ebooking.com\u76f8\u4f3c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u57df\u540d\u7684\u80fd\u529b\u3002\u5e03\u96f7\u8036\u5199\u9053\uff0c\u591a\u4e8f\u4e86\u4eca\u5929\u7684\u88c1\u51b3\uff0cbooking.com\u53ef\u4ee5\u5a01\u80c1\u8981\u5bf9\u4f7f\u7528bookings.com\u3001eBooking.com\u3001booker.com\u6216bookit.com\u7b49\u57df\u540d\u7684\u7ade\u4e89\u5bf9\u624b\u63d0\u8d77\u5546\u6807\u8bc9\u8bbc\u3002\u5e03\u96f7\u8036\u6307\u51fa\uff0c\u867d\u7136Booking.com\u575a\u79f0\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u4f46\u5176\u4ed6\u516c\u53f8\u53ef\u80fd\u4e0d\u4f1a\u8fd9\u4e48\u514b\u5236\u3002\n\u56e0\u6b64\uff0c\u5e03\u96f7\u8036\u8b66\u544a\u8bf4\uff0c\u5141\u8bb8\u6ce8\u518c\u50cfbooking.com\u8fd9\u6837\u7684\u901a\u7528\u57df\u540d\u53ef\u80fd\u4f1a\u4f7f\u516c\u53f8\u6709\u6548\u5730\u5784\u65ad\u901a\u7528\u672f\u8bed\u4e0e\u7f51\u7edc\u57df\u540d\u7684\u7ed3\u5408\u4f7f\u7528\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u63d0\u51fa\u4e86\u4e0e\u5141\u8bb8Bookking Company\u6216Bookings Inc.\u7b49\u516c\u53f8\u540d\u79f0\u6ce8\u518c\u5546\u6807\u76f8\u540c\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ef\u80fd\u5141\u8bb8\u4e00\u5bb6\u516c\u53f8\u5784\u65ad\u63cf\u8ff0\u6574\u4e2a\u884c\u4e1a\u7684\u672f\u8bed\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u5bb6\u516c\u53f8\u3002\n\u5e03\u96f7\u8036\u8ba4\u4e3a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u771f\u6b63\u4e8b\u5173\u91cd\u5927\u7684\u662f\u6ce8\u518c\u4e0ebooking.com\u76f8\u4f3c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u57df\u540d\u7684\u80fd\u529b\u3002\u5e03\u96f7\u8036\u5199\u9053\uff0c\u591a\u4e8f\u4e86\u4eca\u5929\u7684\u88c1\u51b3\uff0cbooking.com\u53ef\u4ee5\u5a01\u80c1\u8981\u5bf9\u4f7f\u7528bookings.com\u3001eBooking.com\u3001booker.com\u6216bookit.com\u7b49\u57df\u540d\u7684\u7ade\u4e89\u5bf9\u624b\u63d0\u8d77\u5546\u6807\u8bc9\u8bbc\u3002\u5e03\u96f7\u8036\u6307\u51fa\uff0c\u867d\u7136Booking.com\u575a\u79f0\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u4f46\u5176\u4ed6\u516c\u53f8\u53ef\u80fd\u4e0d\u4f1a\u8fd9\u4e48\u514b\u5236\u3002\n\u8fd9\u4e5f\u4e0e\u6211\u6709\u5173\u3002\u5f53\u6d89\u53ca\u5230\u5546\u6807\u65f6\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u770b\u770b\u7cdf\u7cd5\u6f14\u5458\u7684\u6700\u574f\u60c5\u51b5\u662f\u602a\u7269\uff0c\u80fd\u91cf\u996e\u6599\u6df7\u86cb\u3002\u770b\u770b\u8fd9\u4e9b\u6df7\u86cb\uff1a\u602a\u7269\u80fd\u91cf\u5e76\u4e0d\u603b\u662f\u8d62\u7684\u3002\u5b83\u66fe\u8d77\u8bc9nba\u7684\u591a\u4f26\u591a\u731b\u9f99\u4f7f\u7528\u4e00\u4e2a\u7834\u635f\u7684\u7bee\u7403\u4f5c\u4e3a\u5176\u6807\u5fd7\uff0c\u4ee5\u53ca\u8fea\u58eb\u5c3c2013\u5e74\u7684\u7535\u5f71\u300a\u602a\u7269\u5927\u5b66\u300b(Monsters University)\uff0c\u4f46\u5747\u4ee5\u5931\u8d25\u544a\u7ec8\u3002\u4f46\u8be5\u516c\u53f8\u4ecd\u7ecf\u5e38\u5f97\u5230\u5b83\u60f3\u8981\u7684\u4e1c\u897f\u3002\u5bf9\u4e8e\u8d3e\u65af\u6c40\u00b7\u5fb7\u62c9\u6d25(Justin Drazin)\u6765\u8bf4\uff0c\u8bc9\u8bbc\u8d39\u7528\u592a\u9ad8\u4e86\uff0c\u4ed6\u5199\u4e86\u201c\u963f\u5c14\u4f2f\u7279\u548c\u795e\u5947\u7684\u6795\u5934\u602a\u517d\u201d(Albert And The Amaze Pillow Monsters)\uff0c\u8fd9\u662f\u4e00\u672c\u4e3a3\u81f38\u5c81\u7684\u513f\u7ae5\u51c6\u5907\u7684\u56fe\u753b\u4e66\uff0c\u65e8\u5728\u7f13\u89e3\u5bf9\u9ed1\u6697\u7684\u6050\u60e7\u3002\u201c\u6211\u4e0d\u5f97\u4e0d\u5c48\u4ece\u4e8e\u4ed6\u4eec\u7684\u8981\u6c42\uff0c\u201d\u5fb7\u62c9\u6d25\u544a\u8bc9\u6211\u3002\u201c\u6211\u5199\u4e86\u8be5\u7cfb\u5217\u7684\u7b2c\u4e8c\u672c\u548c\u7b2c\u4e09\u672c\u4e66\uff0c\u4f46\u7531\u4e8e\u201d\u602a\u517d\u201c\u7684\u5931\u8d25\uff0c\u8fd9\u4e9b\u4e66\u4ece\u672a\u51fa\u7248\u8fc7\u3002\u201dMonster\u8fa9\u79f0\uff0c\u4ed6\u7684\u4e66\u540d\u4e0e\u996e\u6599\u516c\u53f8\u7684\u540d\u5b57\u592a\u76f8\u4f3c\u4e86\u3002\n\u91cc\u9762\u6709\u602a\u7269\u4e00\u8bcd\u7684\u513f\u7ae5\u8bfb\u7269\u3002\u4e0d\u8981\u7ed9\u5546\u6807\u9738\u738b\u4efb\u4f55\u989d\u5916\u7684\u5de5\u5177\u3002", "note_en": "The US Patent and Trademark Office erred by finding the term booking.com was too generic for trademark protection, the Supreme Court  ruled on Tuesday.\n Trademark law prohibits anyone from registering generic terms that describe a class of products or services. Anyone can start a store company called &#34;The Wine Company,&#34; but they can&#39;t use trademark law to stop others from using the same name. When the online travel giant Bookings Holdings sought to trademark its booking.com domain name almost a decade ago, the US Patent and Trademark Office concluded that the same rule applied.\n Booking Holdings challenged this decision in court. The company pointed to survey data showing that consumers associated the phrase &#34;booking.com&#34; with a specific website as opposed to a generic term for travel websites. Both the trial and appeals courts sided with booking.com, finding that booking.com was sufficiently distinctive to merit its own trademark\u2014even if the generic word &#34;booking&#34; couldn&#39;t be trademarked on its own.\n Trademark law declines to protect generic terms in an effort to promote competition. If a company could trademark a word like &#34;booking&#34; or &#34;wine,&#34; it could interfere with competitors who want to accurately describe their products in the marketplace. That would give companies that trademark generic terms an unfair advantage.\n  But an opinion by Justice Ruth Bader Ginsburg (and joined by seven other justices) found that this wasn&#39;t a serious concern for dot-com trademarks. A company like Travelocity or Expedia might describe itself as &#34;a booking website,&#34; but it would never describe itself as &#34;a booking.com.&#34; Ginsburg notes that the rules of the domain-name system ensure that only one company can use a name like booking.com, so consumers are likely to understand that &#34;booking.com&#34; refers to a particular website\u2014it&#39;s not a generic term for booking websites in general.\n But in his lone dissent, Justice Stephen Breyer argued for turning this logic around: the domain-name system already guarantees exclusivity for the holder of a domain like booking.com. So why does a domain name need to be trademarked in the first place? After all, a company that doesn&#39;t own the booking.com domain is unlikely to want to adopt that trademark, since it would just be funneling business to the domain owner.\n And while it&#39;s true that Travelocity wouldn&#39;t describe itself as &#34;a booking.com,&#34; Breyer notes, it also wouldn&#39;t describe itself as &#34;a Booking Inc.&#34; Yet trademark law prohibits anyone from trademarking such a generic company name.\n Breyer argued that what&#39;s really at stake in this case is the ability to register domains that are similar but not identical to booking.com. Thanks to today&#39;s ruling, booking.com could &#34;threaten trademark lawsuits against competitors using domains such as bookings.com, eBooking.com, booker.com, or bookit.com,&#34; Breyer wrote. While Booking.com insisted that it wouldn&#39;t do that, Breyer noted, other companies might not be so restrained.\n Hence, Breyer warned, allowing the registration of generic domains like booking.com could enable companies to effectively monopolize the use of the generic term in conjunction with a dot-com domain name. In this sense, it raises the same issues as allowing trademarks for company names like &#34;The Booking Company&#34; or &#34;Bookings Inc.&#34; That is, it could allow one company to monopolize a term that describes an entire industry, not just one company.\n  Breyer argued that what&#39;s really at stake in this case is the ability to register domains that are similar but not identical to booking.com. Thanks to today&#39;s ruling, booking.com could &#34;threaten trademark lawsuits against competitors using domains such as bookings.com, eBooking.com, booker.com, or bookit.com,&#34; Breyer wrote. While Booking.com insisted that it wouldn&#39;t do that, Breyer noted, other companies might not be so restrained.\n This concerns me too.  All you need to do to look at the worst case scenario for shitty bad actors when it comes to trademarks is Monster, the energy drink assholes.   Look at these bastards:    Monster Energy doesn\u2019t always win. It unsuccessfully went after the NBA\u2019s Toronto Raptors for using a clawed-up basketball as its logo, and Disney for its 2013 film \u201cMonsters University.\u201d But the company frequently still gets what it wants. The cost of litigation was too much for Justin Drazin, author of \u201cAlbert and the Amazing Pillow Monsters,\u201d an illustrated book for kids ages 3 to 8, intended to allay fears of the dark. \u201cI had to bow to their demands,\u201d Drazin told me. \u201cI had written a second and third book in the series, but they were never published because of the Monster debacle.\u201d Monster had argued his book\u2019s title was too similar to the drink company\u2019s name.\n A children&#39;s book with the word monster in it.  Don&#39;t give trademark bullies any extra tools.", "posttime": "2020-07-01 05:34:10", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u57df\u540d,court", "title": "\u6700\u9ad8\u6cd5\u9662\u79f0Booking.com\u7b49\u901a\u7528\u57df\u540d\u53ef\u4ee5\u6ce8\u518c\u5546\u6807", "title_en": "Supreme Court says generic domains like booking.com can be trademarked", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/06/supreme-court-says-generic-domains-like-booking-com-can-be-trademarked/", "via": "", "real_tags": ["\u57df\u540d", "court"]}, {"category": "", "categoryclass": "", "imagename": "b797e8f5904acf7780bc53777845772d.jpg", "infoid": 1009165, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u201c\u88ab\u8bc5\u5492\u201d\u4e2d\uff0c\u4e00\u4f4d\u5e74\u8f7b\u7684\u88ab\u9057\u5f03\u7684\u7cbe\u7075\u5973\u5b50\u53d1\u73b0\u81ea\u5df1\u62e5\u6709\u4e00\u628a\u795e\u79d8\u7684\u5f3a\u5927\u5b9d\u5251\uff0c\u8fd9\u662f\u4ece\u5c3c\u7f2a(\u53c8\u540d\u6e56\u4e2d\u5973\u58eb)\u7684\u89d2\u5ea6\u8bb2\u8ff0\u7684\u4e9a\u745f\u738b\u4f20\u5947\u7684\u91cd\u65b0\u60f3\u8c61\u3002\nNetflix\u7684\u8fd9\u90e810\u96c6\u7535\u89c6\u5267\u6539\u7f16\u81ea\u540c\u540d\u9752\u5e74\u5c0f\u8bf4\uff0c\u7531\u6c64\u59c6\u00b7\u60e0\u52d2(Tom Wheeler)\u7f16\u5267\uff0c\u63d2\u56fe\u4e0d\u662f\u522b\u4eba\uff0c\u6b63\u662f\u4f20\u5947\u4eba\u7269\u5f17\u5170\u514b\u00b7\u7c73\u52d2(Sin City\uff0c300\uff0cThe Dark Knight Return)\u3002\u8fd9\u672c\u4e66\u53bb\u5e74\u7531\u897f\u8499&\u8212\u65af\u7279\u51fa\u7248\u793e\u51fa\u7248\uff0c\u67098\u5e45\u5168\u5f69\u63d2\u56fe\u548c30\u5e45\u9ed1\u767d\u539f\u7248\u63d2\u56fe\uff0c\u662f\u7c73\u52d2\u94c1\u6746\u7c89\u4e1d\u7684\u6536\u85cf\u54c1\uff0c\u4f46\u5728\u8be5\u4e66\u51fa\u7248\u4e4b\u524d\uff0c\u8be5\u7cfb\u5217\u5c31\u5df2\u7ecf\u5728\u5f00\u53d1\u4e2d\u4e86\u3002\u60e0\u52d2\u662f\u4e00\u4f4d\u8457\u540d\u7684\u7f16\u5267\u3001\u5236\u7247\u4eba\u548c\u5236\u7247\u4eba\uff0c\u66fe\u51ed\u501f\u300a\u5e1d\u56fd\u300b(ABC)\u548c\u300a\u597d\u671b\u89d2\u300b(NBC)\u7b49\u5f71\u7247\uff0c\u4ee5\u53ca\u5965\u65af\u5361\u63d0\u540d\u5f71\u7247\u300a\u7a7f\u9774\u5b50\u7684\u732b\u300b\u548c\u300a\u4e50\u9ad8\u5fcd\u8005\u5927\u7535\u5f71\u300b\u83b7\u5f97\u63d0\u540d\u3002\n\u51ef\u745f\u7433\u00b7\u5170\u798f\u5fb7(13\u4e2a\u539f\u56e0)\u5728\u8fd9\u90e8\u7535\u89c6\u5267\u4e2d\u9970\u6f14\u59ae\u7f2a\u3002\u8be5\u5267\u8fd8\u7531\u5fb7\u6587\u00b7\u7279\u96f7\u5c14(\u5df4\u91cc\u9970)\u9970\u6f14\u4e9a\u745f\uff1b\u53e4\u65af\u5854\u592b\u00b7\u65af\u5361\u65af\u52a0\u5fb7(\u897f\u90e8\u4e16\u754c)\u9970\u6f14\u6885\u6797\uff1b\u4e39\u5c3c\u5c14\u00b7\u6c99\u66fc(\u5bb3\u6015\u884c\u5c38)\u9970\u6f14\u54ed\u6ce3\u7684\u50e7\u4fa3\uff1b\u5f7c\u5f97\u00b7\u7a46\u5170(\u5965\u624e\u514b\u9970)\u9970\u6f14\u5361\u767b\u795e\u7236\uff1b\u8389\u8389\u00b7\u7ebd\u9a6c\u514b(\u9488\u57ab)\u9970\u6f14\u76ae\u59c6\uff1b\u6c99\u6d1b\u59c6\u00b7\u5e03\u9c81\u6069-\u5bcc\u5170\u514b\u6797(\u6211\u4eec\u7684\u5973\u5b69)\u9970\u6f14\u6469\u6839\u00b7\u52d2\u83f2\uff1b\u585e\u5df4\u65af\u8482\u5b89\u00b7\u963f\u6885\u65af\u6258(\u5927\u6559\u5802)\u9970\u6f14\u4e4c\u745f\u00b7\u5f6d\u5fb7\u62c9\u8d21\u56fd\u738b\uff1b\u9a6c\u7279\u00b7\u65af\u6258\u79d1\u514b\u3002\n\u8003\u8651\u5230\u60e0\u52d2\u548c\u7c73\u52d2\u90fd\u662f\u6267\u884c\u5236\u7247\u4eba\uff0c\u60e0\u52d2\u5728\u5f00\u53d1\u7cfb\u5217\u7684\u540c\u65f6\u5199\u4e86\u8fd9\u672c\u4e66\uff0c\u6211\u4eec\u5e94\u8be5\u9884\u8ba1\u8fd9\u4e2a\u7cfb\u5217\u4f1a\u5f88\u597d\u5730\u9075\u5faa\u8fd9\u672c\u4e66\u3002\u6211\u4eec\u4e5f\u5e94\u8be5\u9884\u6599\u5230\u4f1a\u6709\u4e0e\u6700\u719f\u6089\u7684\u4e9a\u745f\u738b\u4f20\u5947\u6709\u91cd\u5927\u4e0d\u540c\u4e4b\u5904\u3002\u6839\u636e\u5b98\u65b9\u524d\u63d0\uff1a\n\u6839\u636e\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u7545\u9500\u4e66\u6539\u7f16\u7684\u300a\u8bc5\u5492\u300b\u662f\u5bf9\u4e9a\u745f\u738b\u4f20\u5947\u7684\u91cd\u65b0\u60f3\u8c61\uff0c\u6545\u4e8b\u901a\u8fc7\u5c3c\u7f2a\u7684\u773c\u775b\u8bb2\u8ff0\uff0c\u5c3c\u7f2a\u662f\u4e00\u4f4d\u62e5\u6709\u795e\u79d8\u5929\u8d4b\u7684\u5e74\u8f7b\u5973\u5b50\uff0c\u6ce8\u5b9a\u8981\u6210\u4e3a\u5f3a\u5927\u7684(\u4e5f\u662f\u60b2\u60e8\u7684)\u6e56\u4e0a\u5973\u58eb\u3002\u5728\u5979\u6bcd\u4eb2\u6b7b\u540e\uff0c\u5979\u5728\u4e9a\u745f\u8eab\u4e0a\u627e\u5230\u4e86\u4e00\u4e2a\u610f\u60f3\u4e0d\u5230\u7684\u4f19\u4f34\uff0c\u4e00\u4e2a\u8c26\u900a\u7684\u96c7\u4f63\u5175\uff0c\u5bfb\u627e\u6885\u6797\u5e76\u4ea4\u4ed8\u4e00\u628a\u53e4\u8001\u7684\u5251\u3002\u5728\u5979\u7684\u65c5\u7a0b\u4e2d\uff0c\u59ae\u6885\u5c06\u6210\u4e3a\u5bf9\u6297\u53ef\u6015\u7684\u7ea2\u8272\u5723\u9a91\u58eb\u548c\u4ed6\u4eec\u7684\u540c\u8c0b\u4e4c\u745f\u56fd\u738b\u7684\u52c7\u6c14\u548c\u53cd\u53db\u7684\u8c61\u5f81\u3002\u201c\u88ab\u8bc5\u5492\u201d\u662f\u4e00\u4e2a\u6210\u957f\u6545\u4e8b\uff0c\u5176\u4e3b\u9898\u5bf9\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u6765\u8bf4\u662f\u8033\u719f\u80fd\u8be6\u7684\uff1a\u81ea\u7136\u754c\u7684\u6bc1\u706d\uff0c\u5b97\u6559\u6050\u6016\uff0c\u6beb\u65e0\u610f\u4e49\u7684\u6218\u4e89\uff0c\u4ee5\u53ca\u5728\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u627e\u5230\u9886\u5bfc\u7684\u52c7\u6c14\u3002\n\u9884\u544a\u7247\u4ee5\u59ae\u7f2a\u8840\u8ff9\u6591\u6591\u7684\u8138\u7684\u7279\u5199\u5f00\u573a\u3002\u4ed6\u4eec\u593a\u8d70\u4e86\u6211\u4eec\u7684\u4e00\u5207\uff0c\u56e0\u4e3a\u9b54\u6cd5\u8d2f\u7a7f\u7740\u6211\u4eec\uff0c\u5979\u5728\u753b\u5916\u97f3\u4e2d\u8bf4\u3002\u4ed6\u4eec\u662f\u7ea2\u8272\u5723\u9a91\u58eb\uff0c\u4e00\u4e2a\u5730\u72f1\u822c\u7684\u6781\u7aef\u5b97\u6559\u6d3e\u522b\uff0c\u4e00\u5fc3\u60f3\u6d88\u706d\u5f02\u6559\u5f92\uff0c\u70e7\u6bc1\u4ed6\u4eec\u7684\u6751\u5e84\uff0c\u4ece\u4e16\u754c\u4e0a\u7184\u706d\u9b54\u6cd5\u3002\u5361\u767b\u795e\u7236\u575a\u6301\u8bf4\uff0c\u8fd9\u662f\u6218\u4e89\uff0c\u6218\u4e89\u4e2d\u4e0d\u80fd\u6709\u601c\u60af\u4e4b\u5fc3\uff0c\u56e0\u4e3a\u6211\u4eec\u770b\u5230\u7684\u662f\u4e00\u4e2a\u5973\u4eba\u5728\u706b\u5211\u67f1\u4e0a\u88ab\u70e7\u6b7b\u7684\u666f\u8c61\uff0c\u4ee5\u53ca\u5176\u4ed6\u66b4\u529b\u5c60\u6740\u7684\u573a\u9762\u3002\n\u59ae\u6885\u7684\u6bcd\u4eb2\u7ed9\u4e86\u5979\u4e00\u628a\u5251\uff0c\u4e0a\u9762\u5199\u7740\u8981\u628a\u5251\u62ff\u7ed9\u6885\u6797\uff0c\u6885\u6797\u662f\u4e4c\u745f\u56fd\u738b\u7684\u987e\u95ee\uff0c\u4f46\u4ed6\u5df2\u7ecf\u79d8\u5bc6\u5730\u5931\u53bb\u4e86\u4ed6\u7684\u9b54\u6cd5(\u8fd9\u5c31\u662f\u5251\u4ece\u6211\u8eab\u4e0a\u593a\u8d70\u7684\u4e1c\u897f)\u3002\u4f46\u5c3c\u6885\u6700\u7ec8\u81ea\u5df1\u6325\u821e\u4e86\u8fd9\u628a\u5251\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u56e0\u4e3a\u6211\u4eec\u88ab\u544a\u77e5\uff0c\u8fd9\u628a\u5251\u662f\u88ab\u8bc5\u5492\u7684\uff0c\u4f1a\u8150\u8680\u6240\u6709\u4f7f\u7528\u5b83\u7684\u4eba\u3002&#34\uff1b\u6211\u4eec\u77a5\u89c1\u4e86\u4e9a\u745f\u3001\u52a0\u6587\u548c\u6469\u6839\uff0c\u4ed6\u4eec\u6566\u4fc3\u5c3c\u6885\u8ba4\u9886\u8fd9\u628a\u5251\uff0c\u5e76\u9886\u5bfc\u8fd9\u7fa4\u4eba\u3002\u201c\u4f60\u4e0d\u662f\u4ec0\u4e48\u8106\u5f31\u7684\u5973\u4f63\uff0c\u201d\u59ae\u6885\u7684\u6bcd\u4eb2(\u51ef\u745f\u7433\u00b7\u6c83\u514b\uff0c\u201c\u72af\u7f6a\u5b63\u8282\u201d)\u544a\u8bc9\u5979\u3002\u4f60\u662f\u4e00\u540d\u6218\u58eb\u3002\u4f46\u8fd9\u8db3\u4ee5\u786e\u4fdd\u5f02\u6559\u5f92\u7684\u751f\u5b58\u5417\uff1f", "note_en": "A young, outcast fey woman finds herself in possession of a mystical sword of great power in   Cursed,\u00a0a reimagining of the Arthurian legend told from the perspective of Nimue, aka the Lady of the Lake.\n The 10-episode Netflix series is an adaptation of the young adult novel of the same name, written by Tom Wheeler and illustrated by none other than the legendary  Frank Miller\u00a0( Sin City, 300, The Dark Knight Returns). It was published last year by Simon &amp; Schuster\u2014with eight full-color and 30 black-and-white original illustrations, making it a collector&#39;s item for diehard Miller fans\u2014but the series was already in development prior to the book&#39;s publication. Wheeler is a well-known screenwriter, producer, and showrunner, with such credits as  Empire (ABC) and  The Cape (NBC), as well as the Oscar-nominated\u00a0 Puss in Boots and  The Lego Ninjago Movie.\n Katherine Langford ( 13 Reasons Why) stars as Nimue in the series. The show also stars Devon Terrell ( Barry) as Arthur; Gustaf Skarsg\u00e5rd ( Westworld) as Merlin; Daniel Sharman ( Fear the Walking Dead) as the Weeping Monk; Peter Mullan ( Ozark) as Father Carden; Lily Newmark ( Pin Cushion) as Pym; Shalom Brune-Franklin ( Our Girl) as Morgan le Fay; Sebastian Armesto ( Broadchurch) as King Uther Pendragon; Matt Stokoe ( Bodyguard) as Gawain; Emily Coates ( Flack) as Iris; and Billy Jenkins ( The Crown) as Squirrel.\n    We should expect the series to pretty much follow the book, given that both Wheeler and Miller were executive producers and Wheeler wrote the book at the same time as they were developing the series. We should also expect there to be significant departures from the most familiar Arthurian legends. Per the official premise:\n Based on the New York Times bestselling book,  Cursed is a reimagining of the Arthurian legend, told through the eyes of Nimue, a young woman with a mysterious gift who is destined to become the powerful (and tragic) Lady of the Lake. After her mother&#39;s death, she finds an unexpected partner in Arthur, a humble mercenary, in a quest to find Merlin and deliver an ancient sword. Over the course of her journey, Nimue will become a symbol of courage and rebellion against the terrifying Red Paladins, and their complicit King Uther.  Cursed is a coming-of-age story whose themes are familiar to our own time: the obliteration of the natural world, religious terror, senseless war, and finding the courage to lead in the face of the impossible.\n The trailer opens with a close-up of Nimue&#39;s blood-spattered face. &#34;They took everything from us, because magic runs through us,&#34; she says in a voiceover. &#34;They&#34; are the Red Paladins, an extremist religious sect hell-bent on exterminating the fey, burning their villages, and extinguishing magic from the world. &#34;This is war, and in war there can be no mercy,&#34; Father Carden insists, as we are treated to the sight of a woman burning at the stake and other scenes of violent carnage.\n Nimue&#39;s mother gives her a sword with instructions to take it to Merlin, who is an advisor to King Uther but secretly has lost his magic (&#34;That&#39;s what the sword took from me&#34;). But Nimue ends up wielding the sword herself, which might not be a good idea, since we are told, &#34;The sword is cursed and will corrupt all who wield it.&#34; We catch glimpses of Arthur, Gawain, and Morgan, who urges Nimue to claim the sword as her own and lead the fey. &#34;You are not some fragile maid,&#34; Nimue&#39;s mother (Catherine Walker,  The Delinquent Season) tells her. &#34;You are a warrior.&#34; But will it be enough to ensure the fey&#39;s survival?", "posttime": "2020-07-01 05:33:49", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9884\u544a\u7247,trailer,\u9970\u6f14", "title": "\u88ab\u8bc5\u5492\u7684\u9884\u544a\u7247\u4ece\u201c\u6e56\u592b\u4eba\u201d\u7684\u89d2\u5ea6\u91cd\u5851\u4e9a\u745f\u738b\u4f20\u5947", "title_en": "Cursed trailer reimagines Arthurian legend from viewpoint of Lady of the Lake", "transed": 1, "url": "https://arstechnica.com/gaming/2020/06/cursed-trailer-reimagines-arthurian-legend-from-viewpoint-of-lady-of-the-lake/", "via": "", "real_tags": ["\u9884\u544a\u7247", "trailer", "\u9970\u6f14"]}, {"category": "", "categoryclass": "", "imagename": "487a2e09ba118f7dfa60c5d9066e57cc.jpg", "infoid": 1009164, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u62c9\u7ef4\u662f\u4e00\u4f4d\u6d88\u8d39\u6280\u672f\u9886\u5bfc\u8005\uff0c\u6700\u8fd1\u62c5\u4efbTinder\u7684\u9996\u5e2d\u4ea7\u54c1\u5b98\u3002\u6b64\u524d\uff0c\u4ed6\u662fFacebook\u3001TripAdvisor\u548cXbox\u7684\u4ea7\u54c1\u8d1f\u8d23\u4eba\u3002\u4ed6\u5728http://ravi-mehta.com.\u64b0\u5199\u5173\u4e8e\u6269\u5c55\u4ea7\u54c1\u548c\u56e2\u961f\u7684\u6587\u7ae0\u3002\n\u8fd9\u4e9b\u7b54\u6848\u5bf9\u4e8e\u7406\u89e3\u79d1\u6280\u7684\u672a\u6765\u975e\u5e38\u91cd\u8981\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u771f\u5b9e\u7684\u4f8b\u5b50\uff0c\u8bf4\u660eZ\u4e16\u4ee3\u5c06\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u516c\u53f8\u3002\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\u53ca\u5176\u80cc\u540e\u7684\u4eba\u53cd\u6620\u4e86\u9752\u5e74\u6587\u5316\u4e2d\u66f4\u5e7f\u6cdb\u7684\u8d8b\u52bf\u3002\n\u5176\u4ed6\u6240\u6709\u4eba\u90fd\u5e94\u8be5\u6b22\u6b23\u9f13\u821e\u3002\u5e74\u8f7b\u7684\u6280\u672f\u4e13\u5bb6\u6b63\u5728\u4e00\u5957\u65b0\u7684\u4ef7\u503c\u89c2\u4e0a\u5efa\u8bbe\u65b0\u7684\u672a\u6765\u3002\u4ed6\u4eec\u7684\u4ef7\u503c\u89c2\u662f\u4ece\u4eb2\u8eab\u7ecf\u5386\u4e2d\u6210\u957f\u8d77\u6765\u7684\uff0c\u4f34\u968f\u7740\u6628\u5929\u793e\u4ea4\u5a92\u4f53\u7684\u53cd\u5e38\u6fc0\u52b1\uff0c\u4ee5\u53ca\u521b\u9020\u4e00\u4e2a\u66f4\u7f8e\u597d\u4e16\u754c\u7684\u771f\u8bda\u613f\u671b-\u65e0\u8bba\u662f\u7ebf\u4e0a\u8fd8\u662f\u7ebf\u4e0b\u3002\n\u8fd9\u4e00\u5207\u90fd\u59cb\u4e8e\u5468\u56db\u665a\u4e0a\uff0c\u5f53\u65f6\u4e00\u7fa4\u670b\u53cb\u5f00\u59cb\u6a21\u4effTikTok\u7684\u4e00\u4e2a\u8868\u60c5\u5305\u3002\u5728\u4eca\u5929\u7684\u4e16\u754c\u91cc\uff0c\u8bed\u8a00\u5728\u4e0d\u65ad\u53d1\u5c55--\ud83d\udc41\ud83d\udc44\ud83d\udc41\u4f5c\u4e3a\u4e00\u53e5\u8bdd\u7684\u7279\u6b8a\u8bf4\u6cd5\u51fa\u73b0\u4e86\uff1a\u201c\u5b83\u5c31\u662f\u5b83\u672c\u8eab\u3002\u201d\u4e54\u4ec0\u00b7\u5eb7\u65af\u4e01\u89e3\u91ca\u8bf4\uff0c\u201c\ud83d\udc41\ud83d\udc44\ud83d\udc41\u610f\u5473\u7740\u4f60\u5728\u56f4\u7ed5\u6211\u4eec\u5c55\u5f00\u7684\u6df7\u4e71\u7684\u73b0\u5b9e\u4e2d\u611f\u5230\u65e0\u52a9\uff0c\u4f46\u4f60\u65e0\u5904\u53ef\u9003\u3002\u201d\n\u8fd9\u7fa4\u670b\u53cb\u5c06\u8868\u60c5\u7b26\u53f7\u6dfb\u52a0\u5230\u4ed6\u4eec\u7684\u63a8\u7279\u8d26\u53f7\u4e0a\uff0c\u5e76\u5f00\u59cb\u5728\u63a8\u7279\u4e0a\u8c08\u8bba\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u4ec5\u9650\u9080\u8bf7\u7684\u793e\u4ea4\u5e94\u7528\u7a0b\u5e8f\u3002\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u8fd9\u4e00\u8d8b\u52bf\u5f00\u59cb\u84c4\u52bf\u5f85\u53d1\uff0c\u5185\u90e8\u7b11\u8bdd\u5931\u63a7\u4e86\u3002\u5f53\u4ed6\u4eec\u8ba8\u8bba\u4e0b\u4e00\u6b65\u505a\u4ec0\u4e48\u65f6\uff0c\u5728\u8be5\u7ec4\u7ec7\u7684\u4e0d\u548c\u8c10\u670d\u52a1\u5668\u4e0a\u7206\u53d1\u4e86\u5bf9\u8bdd\u3002\u4ed6\u4eec\u80fd\u628a\u7092\u4f5c\u5f15\u5411\u5f71\u54cd\u5417\uff1f\n\u540c\u6b65\u793e\u4ea4\u5e94\u7528Realtime\u7684\u521b\u59cb\u4eba\u3001\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\u7684\u201c\u7092\u4f5c\u4e3b\u7ba1\u201d\u5f17\u519c\u00b7\u79d1\u5c14\u66fc(Vernon Coleman)\u53cd\u601d\u9053\uff1a\u201c\u6700\u521d\u53ea\u662f\u4e00\u4e2a\u6a21\u56e0\u7684\u4e1c\u897f\u5f88\u5feb\u5c31\u53d8\u5f97\u706b\u7206\u8d77\u6765\uff01\u6211\u4eec\u610f\u8bc6\u5230\u4e86\u673a\u9047\uff0c\u5e76\u8ba4\u4e3a\u6211\u4eec\u6709\u8d23\u4efb\u5c06\u52bf\u5934\u8f6c\u5316\u4e3a\u793e\u4f1a\u516c\u76ca\u3002\u6211\u8ba4\u4e3a\uff0c\u5f53\u6280\u672f\u5a34\u719f\u7684\u521b\u610f\u4eba\u624d\u805a\u96c6\u5728\u4e00\u8d77\u5e76\u5b9e\u65f6\u534f\u4f5c\u65f6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u8fd9\u771f\u662f\u4ee4\u4eba\u60ca\u53f9\u3002\u201c\u3002\n\u56e2\u961f\u5e94\u8be5\u5c06\u4ed6\u4eec\u7684\u52aa\u529b\u96c6\u4e2d\u5728\u54ea\u91cc\uff1f\u7b54\u6848\u5f88\u6e05\u695a\u3002\u8be5\u7ec4\u7ec7\u5728\u5468\u4e94\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\u5199\u9053\uff0c\u201c\u2026\u3002\u6211\u4eec\u4e0d\u5fc5\u60f3\u5f97\u592a\u591a\uff1a\u6b64\u65f6\u6b64\u523b\uff0c\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u6bd4\u4e16\u754c\u5927\u90e8\u5206\u5730\u533a\u521a\u521a\u5f00\u59cb\u89c9\u9192\u7684\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u548c\u53cd\u9ed1\u4eba\u66f4\u503c\u5f97\u653e\u5927\u7684\u95ee\u9898\u4e86\u3002\u201c\u3002\n\u81ea\u5468\u56db\u4ee5\u6765\uff0c\u8be5\u7ec4\u7ec7\u79ef\u7d2f\u4e86\u8d85\u8fc72\u4e07\u540d\u7535\u5b50\u90ae\u4ef6\u6ce8\u518c\uff0c\u8d85\u8fc71.1\u4e07\u540d\u63a8\u7279\u7c89\u4e1d\uff0c\u5e76\u7b79\u96c6\u4e86\u8d85\u8fc720\u4e07\u7f8e\u5143\u7684\u6350\u6b3e\u3002\n\u6124\u4e16\u5ac9\u4fd7\u7684\u4eba\u79f0\u8fd9\u662f\u4e00\u573a\u201c\u6267\u884c\u826f\u597d\u7684\u8425\u9500\u6d3b\u52a8\u201d\uff0c\u6216\u8005\u6697\u793a\u8fd9\u662f\u4e00\u4e2a\u6076\u610f\u7684\u6076\u4f5c\u5267\u3002\u5e76\u4e0d\u662f\u6bcf\u4ef6\u4e8b\u90fd\u8fdb\u884c\u5f97\u5f88\u5b8c\u7f8e\uff0c\u56e2\u961f\u5df2\u7ecf\u627f\u8ba4\u4e86\u5931\u8bef\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u8f7b\u89c6\u6216\u8fb9\u7f18\u5316\u4ed6\u4eec\u6240\u53d6\u5f97\u7684\u6210\u5c31\u548c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u3002\n\u8be5\u56e2\u961f\u4e00\u4e3e\u62a8\u51fb\u4e86\u7845\u8c37\u5c06\u6392\u4ed6\u6027\u4f5c\u4e3a\u4e00\u79cd\u8425\u9500\u7b56\u7565\u7684\u505a\u6cd5\uff0c\u62a8\u51fb\u53e3\u6e34\u7684\u98ce\u6295\u4eec\u603b\u662f\u5e0c\u671b\u5728\u4e0b\u4e00\u4ef6\u5927\u4e8b\u4e0a\u603b\u662f\u62a2\u5148\u4e00\u6b65\uff0c\u5de7\u5999\u5730\u5229\u7528Twitter\u7684\u75c5\u6bd2\u6548\u5e94\u6765\u5efa\u7acb\u77e5\u540d\u5ea6\uff0c\u5e76\u5c06\u8fd9\u79cd\u77e5\u540d\u5ea6\u8f6c\u5316\u4e3a\u6536\u5165\uff0c\u8fd9\u4e9b\u6536\u5165\u5c06\u5bf9\u7ecf\u5e38\u88ab\u5ffd\u89c6\u7684\u96c6\u56e2\u4ea7\u751f\u771f\u6b63\u7684\u5f71\u54cd\u3002\n\u8fd9\u4e2a\u753160\u540d\u5e74\u8f7b\u79d1\u6280\u9886\u8896\u7ec4\u6210\u7684\u56e2\u4f53\u5728\u53d1\u8868\u58f0\u660e\u7684\u540c\u65f6\uff0c\u5c06\u5de8\u5934\u4eec\u7684\u5de5\u5177\u638c\u63e1\u5728\u624b\u4e2d\uff0c\u4ee5\u4ea7\u751f\u5f71\u54cd\u3002\n\u4ed6\u4eec\u4e0d\u662f\u63a8\u7279\u4e0a\u4eba\u8109\u6700\u5e7f\u7684\u4eba\u3002\u56e2\u961f\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u6709\u6570\u767e\u540d\u8ffd\u968f\u8005\uff0c\u800c\u4e0d\u662f\u6570\u5341\u4e07\u4eba\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u548c\u6280\u672f\u7cbe\u82f1\u4e00\u6837\u4e86\u89e3\u8fd9\u4e9b\u5de5\u5177\u3002\n\u8fd9\u662fZ\u4e16\u4ee3\u9886\u5bfc\u4eba\u548c\u6d3b\u52a8\u5bb6\u53d1\u8d77\u7684\u4e00\u7cfb\u5217\u8fd0\u52a8\u4e2d\u7684\u6700\u65b0\u4e00\u4f8b\u3002Z\u4e16\u4ee3\u80fd\u591f\u6269\u5927\u4ed6\u4eec\u7684\u58f0\u97f3-\u5373\u4f7f\u662f\u5728Twitter\u548cFacebook\u7b49\u5e73\u53f0\u4e0a\uff0c\u8fd9\u4e9b\u5e73\u53f0\u88ab\u8ba4\u4e3a\u662f\u5343\u79a7\u4e00\u4ee3\u548cX\u4e16\u4ee3\u7684\u9886\u57df\u3002\n\u6211\u4eec\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e00\u70b9\u662f\u5728\u5e15\u514b\u5170\u6821\u56ed\u67aa\u51fb\u6848\u4e2d\uff0c\u5f53\u65f6\u9ad8\u4e2d\u751f\u63a5\u7ba1\u4e86Twitter\uff0c\u7136\u540e\u662fFacebook\uff0c\u7136\u540e\u662f\u6709\u7ebf\u65b0\u95fb\uff0c\u4e3a\u4e00\u573a\u5df2\u7ecf\u6f14\u53d8\u4e3a\u515a\u6d3e\u8c08\u8bdd\u8981\u70b9\u7684\u67aa\u652f\u8fa9\u8bba\u589e\u6dfb\u4e86\u7406\u6027\u7684\u58f0\u97f3\u3002\n\u5728\u8fc7\u53bb\u7684\u4e09\u5e74\u91cc\uff0c\u6211\u82b1\u4e86\u51e0\u5341\u4e2a\u5c0f\u65f6\u4e0e\u5e74\u8f7b\u7528\u6237\u548c\u4ea7\u54c1\u5efa\u9020\u8005\u4ea4\u8c08-\u8fd9\u662f\u6211\u4f5c\u4e3aTinder\u9996\u5e2d\u4ea7\u54c1\u5b98\u3001Facebook\u9752\u5e74\u56e2\u961f\u7684\u4ea7\u54c1\u603b\u76d1\u548c\u5929\u4f7f\u6295\u8d44\u8005\u7684\u5de5\u4f5c\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\u56e2\u961f\u8868\u8fbe\u7684\u8bb8\u591a\u89c2\u70b9\u53cd\u6620\u4e86Z\u4e16\u4ee3\u66f4\u5e7f\u6cdb\u7684\u611f\u53d7\uff1a\nZ\u4e16\u4ee3\u538c\u5026\u4e86\u5a74\u513f\u6f6e\u4e00\u4ee3\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u66f4\u4e13\u6ce8\u4e8e\u4ece\u4e16\u754c\u4e0a\u6536\u83b7\u6700\u540e\u4e00\u70b9\uff0c\u800c\u4e0d\u662f\u4ee5\u66f4\u597d\u7684\u72b6\u6001\u4f20\u627f\u4e0b\u53bb\u3002\nZ\u4e16\u4ee3\u53d7\u591f\u4e86\u72ec\u4e00\u65e0\u4e8c\u7684\u4ff1\u4e50\u90e8\u548c\u865a\u62df\u7684\u5929\u9e45\u7ed2\u7ef3\u7d22\u3002\u6700\u65b0\u7684\u4f8b\u5b50\u662fClub House\uff0c\u8fd9\u662f\u4e00\u6b3e\u4ec5\u9650\u53d7\u9080\u4f7f\u7528\u7684\u793e\u4ea4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c3d\u7ba1\u6210\u7acb\u4ec5\u51e0\u4e2a\u6708\uff0c\u800c\u4e14\u53ea\u8fce\u5408\u4e86\u6570\u5343\u540d\u7528\u6237-\u5176\u4e2d\u5305\u62ec\u5965\u666e\u62c9(Oprah)\u548c\u51ef\u6587\u00b7\u54c8\u7279(Kevin Hart)-\u4f46\u5b83\u7684\u4f30\u503c\u4ecd\u9ad8\u8fbe1\u4ebf\u7f8e\u5143\u3002\n\u5bf9\u4e8e\u79d1\u6280\u4e1a\u5185\u4eba\u58eb\u6765\u8bf4\uff0c\u4f1a\u6240\u662f\u6700\u5408\u9002\u7684\u5730\u65b9\u3002\u5bf9\u4e8eZ\u4e16\u4ee3\u7684\u5c40\u5916\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u9ed1\u4eba\u540d\u4eba\u88ab\u7528\u6765\u8ba9\u4ee5\u767d\u4eba\u4e3a\u4e3b\u7684\u521b\u59cb\u4eba\u548c\u6295\u8d44\u8005\u81f4\u5bcc\u7684\u6700\u65b0\u4f8b\u5b50\u3002\nZ\u4e16\u4ee3\u4f01\u4e1a\u5bb6\u548c\u79d1\u6280\u9886\u8896\u538c\u5026\u4e86\u79d1\u6280\u884c\u4e1a\uff0c\u4ed6\u4eec\u8c08\u8bba\u5305\u5bb9\u6027\uff0c\u4f46\u968f\u540e\u53c8\u5c06\u6392\u4ed6\u6027\u4f5c\u4e3a\u4e00\u79cd\u8425\u9500\u7b56\u7565\u3002\u8fd9\u5df2\u7ecf\u662f\u5341\u591a\u5e74\u7684\u60ef\u4f8b\u4e86\u3002\u5b83\u59cb\u4e8eGmail\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b3e\u5927\u89c4\u6a21\u4f7f\u7528\u79c1\u4eba\u9080\u8bf7\u7684\u5e94\u7528\u7a0b\u5e8f-\u8fd9\u4e00\u7b56\u7565\u88ab\u5e7f\u6cdb\u590d\u5236\u3002\n\u5982\u4eca\uff0c\u7845\u8c37\u5185\u90e8\u4eba\u58eb\u6b63\u5728\u53eb\u56a3\u7740\u8981\u9080\u8bf7\u51fd\uff0c\u8fd9\u662f\u4e00\u6b3e\u6700\u8fd1\u53d1\u5e03\u7684\u7535\u5b50\u90ae\u4ef6\u5e94\u7528\uff0c\u81ed\u540d\u662d\u8457\uff0c\u5b83\u5bf9\u4e24\u4e2a\u548c\u4e09\u4e2a\u5b57\u6bcd\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6536\u8d39(\u4e24\u4e2a\u5b57\u6bcd\u7684\u5730\u5740\u6bcf\u5e74\u6536\u8d39999\u7f8e\u5143\uff0c\u4e09\u4e2a\u5b57\u6bcd\u7684\u5730\u5740\u6536\u8d39375\u7f8e\u5143)\u3002\u7b80\u79f0Up Charge\u662f\u4e00\u5bb6\u516c\u53f8\u7684\u6124\u4e16\u5ac9\u4fd7\u7684\u8d5a\u94b1\u8ba1\u5212\uff0c\u8be5\u516c\u53f8\u7684\u521b\u59cb\u4eba\u6770\u68ee\u00b7\u5f17\u91cc\u5fb7(Jason Fry)\u548c\u5927\u536b\u00b7\u6d77\u5185\u8fc8\u5c14\u00b7\u6c49\u68ee(David Heinemeier Hansson)\u4f20\u64ad\u4e86\u4e00\u79cd\u66f4\u516c\u5e73\u3001\u66f4\u6709\u540c\u60c5\u5fc3\u7684\u6280\u672f\u65b9\u6cd5\u3002\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\uff0c\u4ed6\u4eec\u7684\u5546\u4e1a\u6a21\u5f0f\u4e0d\u516c\u5e73-\u5f88\u53ef\u80fd\u662f\u65e0\u610f\u7684-\u7784\u51c6\u4e86\u6709\u8f83\u77ed\u540d\u5b57\u4f20\u7edf\u7684\u79cd\u65cf\u7fa4\u4f53\u3002\n\u6700\u540e\uff0cZ\u4e16\u4ee3\u538c\u5026\u4e86\u4e00\u4e2a\u8c08\u8bba\u591a\u5143\u5316\u5374\u4e0d\u53bb\u5b9e\u8df5\u7684\u79d1\u6280\u884c\u4e1a\u3002\u9ed1\u4eba\u548c\u897f\u73ed\u7259\u88d4\u5728\u4e3b\u8981\u79d1\u6280\u516c\u53f8\u7684\u4ee3\u8868\u4ecd\u7136\u4e0d\u8db3\uff0c\u7279\u522b\u662f\u5728\u9886\u5bfc\u5c42\u3002\u8fd9\u79cd\u4ee3\u8868\u4e0d\u8db3\u7684\u60c5\u51b5\u5bf9\u4f01\u4e1a\u5bb6\u6765\u8bf4\u66f4\u7cdf\u7cd5\u3002\u5728\u98ce\u6295\u652f\u6301\u7684\u521b\u59cb\u4eba\u4e2d\uff0c\u53ea\u67091%\u662f\u9ed1\u4eba\u3002\n\u201c\u6211\u4eec\u4e00\u518d\u542c\u8bf4\u79d1\u6280\u98ce\u6295\u548c\u5c31\u4e1a\u2026\u5b58\u5728\u7ba1\u9053\u95ee\u9898\u3002\u90a3\u662f\u80e1\u8bf4\u516b\u9053\u3002\u6211\u4eec\u80fd\u591f\u5c06\u4e0d\u540c\u5e74\u9f84\u6bb5\u3001\u4e0d\u540c\u6587\u5316\u80cc\u666f\u3001\u4e0d\u540c\u6280\u80fd\u3001\u4e0d\u540c\u6027\u522b\u548c\u4e0d\u540c\u5730\u7406\u4f4d\u7f6e\u7684\u4eba\u805a\u96c6\u5728\u4e00\u8d77\u3002\u2026\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u57fa\u4e8e\u4eba\u4eec\u5728\u4ed6\u4eec\u7684\u4e2a\u4eba\u8d44\u6599\u2026\u4e2d\u653e\u7f6e\u6a21\u56e0\u7684\u968f\u673a\u9009\u62e9\u8fc7\u7a0b\u3002\u7845\u8c37\u5e94\u8be5\u610f\u8bc6\u5230\uff0c\u4f60\u771f\u7684\u53ef\u4ee5\u6295\u63b7\u98de\u9556\u5e76\u53d6\u5f97\u6210\u679c\uff0c\u201c\u79d1\u5c14\u66fc\u8bf4\u3002\u201c\u5982\u679c\u8fd9\u4e2a\u884c\u4e1a\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a\u884c\u52a8\uff0c\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u6240\u6709\u4eba\u4e00\u8d77\u521b\u9020\u7684\u9b54\u529b\u5427\u3002\u201d\n\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\u7684\u6545\u4e8b\u7a81\u51fa\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u4e8b\u5b9e\u3002\u5982\u679c\u79d1\u6280\u884c\u4e1a\u4e0d\u80fd\u521b\u9020Z\u4e16\u4ee3\u60f3\u8981\u7684\u672a\u6765\uff0c\u90a3\u5c31\u6ca1\u6709\u5fc5\u8981\u62c5\u5fc3\u3002\u4ed6\u4eec\u4f1a\u81ea\u5df1\u521b\u9020\u51fa\u6765\u7684\u3002\n\u53bb\u96c7\u4ed6\u5427\u3002\u628a\u7535\u62a5\u53d1\u8fc7\u6765\u3002-\u8482\u6cd5\u5c3c\u00b7\u963f\u4ec0\u5229\u00b7\u8d1d\u5c14(Tiffani Ashley Bell)\uff0c\u4eba\u7c7b\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u521b\u59cb\u6267\u884c\u8463\u4e8b\u3002\n\u5965\u514b\u62c9\u8ba1\u5212(Okra Project)-\u4e00\u4e2a\u65e8\u5728\u89e3\u51b3\u9ed1\u4eba\u8de8\u6027\u522b\u8005\u9762\u4e34\u7684\u5168\u7403\u5371\u673a\u7684\u96c6\u4f53\uff0c\u5c06\u5bb6\u5e38\u83dc\u3001\u5065\u5eb7\u548c\u7279\u5b9a\u4e8e\u6587\u5316\u7684\u98df\u7269\u548c\u8d44\u6e90\u5e26\u7ed9\u6211\u4eec\u53ef\u4ee5\u63a5\u89e6\u5230\u7684\u4efb\u4f55\u5730\u65b9\u7684\u9ed1\u4eba\u8de8\u6027\u522b\u8005\u3002\n\u6e05\u767d\u9879\u76ee--\u5176\u4f7f\u547d\u662f\u91ca\u653e\u6570\u91cf\u60ca\u4eba\u7684\u4ecd\u7136\u88ab\u76d1\u7981\u7684\u65e0\u8f9c\u8005\uff0c\u5e76\u5bf9\u5bf9\u4ed6\u4eec\u7684\u4e0d\u516c\u6b63\u76d1\u7981\u8d1f\u8d23\u7684\u5236\u5ea6\u8fdb\u884c\u6539\u9769--\u8fd9\u4e00\u56f0\u5883\u5bf9\u6709\u8272\u4eba\u79cd\u9020\u6210\u4e86\u4e0d\u6210\u6bd4\u4f8b\u7684\u5f71\u54cd\u3002\n\u7231\u4e4b\u5730\u57fa\u91d1\u4f1a--\u4f7f\u5168\u56fd\u9ed1\u4eba\u5987\u5973\u548c\u5973\u5b69\u80fd\u591f\u63a5\u53d7\u6cbb\u7597\u652f\u6301\u3002\u9ed1\u4eba\u5987\u5973\u548c\u5973\u5b69\u5e94\u8be5\u83b7\u5f97\u6cbb\u7597\uff0c\u8fd9\u79cd\u6cbb\u7597\u5c06\u5f71\u54cd\u51e0\u4ee3\u4eba\u3002", "note_en": "Ravi is a consumer tech leader who was most recently Chief Product Officer at Tinder. Previously, he was a product leader at Facebook, TripAdvisor and Xbox. He writes about scaling products and teams at  http://ravi-mehta.com.\n   The answers are important to understanding the future of tech. This is the first real example of how and why Gen Z will build companies. \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm and the people behind it reflect broader trends in youth culture.\n   Everyone else should rejoice. Young technologists are building a new future on a new set of values. Their values are informed by the first-hand experience of growing up with the perverse incentives of yesterday\u2019s social media and a genuine desire to create a better world \u2014 online and off.\n It all began on Thursday night when a group of friends started riffing on a TikTok meme. In today\u2019s world, language is constantly evolving \u2014 \ud83d\udc41\ud83d\udc44\ud83d\udc41 emerged as a particular spin on the phrase: \u201cIt is what it is.\u201d Josh Constine explains, \u201c\ud83d\udc41\ud83d\udc44\ud83d\udc41 means you feel helpless amidst the chaotic realities unfolding around us, but there is no escape.\u201d\n The group of friends added the emojis to their Twitter handles and began tweeting about \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm, a nonexistent invite-only social app. Unexpectedly, the trend started gaining momentum and the inside joke got out of hand. Conversations erupted on the group\u2019s Discord server as they discussed what to do next. Could they channel the hype into impact?\n Vernon Coleman, founder of synchronous social app Realtime and \u201cHead of Hype\u201d at \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm reflected, \u201cWhat started as a meme quickly gained steam! We realized the opportunity and felt that we had a responsibility to convert the momentum for social good. I think it\u2019s amazing what can happen when skilled creatives get together and collaborate in real-time.\u201d\n Where should the team focus their efforts? The answer was clear. The group wrote in a post on Friday, \u201d \u2026 we didn\u2019t have to think too hard: In this moment, there\u2019s pretty much no greater issue to amplify than the systemic racism and anti-Blackness much of the world is only beginning to wake up to.\u201d\n Since Thursday, the group accumulated over 20,000 email sign-ups, more than 11,000 Twitter followers and raised over $200,000 in donations.\n Cynics have called it a \u201cwell-executed marketing campaign\u201d or suggested that it was an ill-intentioned prank. Not everything went perfectly, and the team has acknowledged the missteps. But, we shouldn\u2019t trivialize or marginalize what they accomplished and why they did it.\n In one fell swoop, the team chastised Silicon Valley\u2019s use of exclusivity as a marketing tactic, trolled thirsty VCs for their desire to always be first on the next big thing, deftly leveraged the virality of Twitter to build awareness and channeled that awareness into dollars that will have a real impact on groups too often overlooked.\n This group of 60 young tech leaders took the tools of the titans into their hands to make an impact while making a statement.\n They weren\u2019t the most connected people on Twitter. Many of the team have follower counts in the hundreds, not the hundreds of thousands. But, they understand the tools as well as the tech elite.\n This is the latest in a string of movements created by Gen Z leaders and activists. Gen Z is able to amplify their voice \u2014 even on platforms, like Twitter and Facebook, considered the domain of millennials and Gen X.\n We first saw this with the Parkland school shooting when high school students took over Twitter then Facebook then cable news to add a voice of reason to a gun debate that had devolved into partisan talking points.\n Over the last three years, I\u2019ve spent dozens of hours talking with young users and product builders \u2014 this has been an important part of my job as the chief product officer at Tinder, a product director on Facebook\u2019s Youth team and an angel investor. Many of the sentiments expressed by the \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm team reflect broader feelings in Gen Z:\n Gen Z is tired of a boomer generation that seems more focused on reaping their last bit from the world than passing it on in better shape.\n Gen Z is fed up with exclusive clubs and virtual velvet ropes. The latest example is Clubhouse, an invite-only social app that raised at a $100 million valuation despite being only a few months old and catering to only a few thousand users \u2014 among them Oprah and Kevin Hart.\n For tech insiders, Clubhouse is the place to be. For Gen Z outsiders, it\u2019s the latest example of Black celebrity being used to make predominantly white founders and investors rich.\n Gen Z entrepreneurs and tech leaders are tired of a tech industry that talks about inclusivity, but then uses exclusivity as a marketing ploy. This has been a practice for more than a decade. It started with Gmail, the first app to use private invites at scale \u2014 a tactic widely copied.\n Today, Silicon Valley insiders are clamoring for invites to HEY, a recently released email app that notoriously charges for two- and three-letter email addresses ($999 per year for a two-letter address and $375 for a three-letter address). The short name up-charge is a cynical money-making scheme from a company whose founders, Jason Fried and David Heinemeier Hansson, evangelize a fairer and more empathetic approach to technology. Critics have pointed out that their business model unfairly \u2014 and likely unintentionally \u2014 targets ethnic groups who have a tradition of shorter names.\n Finally, Gen Z is tired of a tech industry that talks about diversity, but doesn\u2019t practice it. Black and Hispanic people continue to be underrepresented at major tech companies, particularly at the leadership level. This underrepresentation is even worse for entrepreneurs. Just 1% of venture-backed founders are Black.\n  \u201cWe hear repeatedly that there\u2019s a pipeline problem in tech VC and employment \u2026 that\u2019s bullshit. We were able to bring together different age groups, cultural backgrounds, skills, genders and geographies \u2026 all based on a random selection process of people putting a meme in their profile \u2026 the Valley should realize that you can literally throw darts and get results,\u201d said Coleman. \u201cIf the industry is about that action imagine the magic we\u2019d all create together.\u201d\n The story of \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm highlights an important truth. If the tech industry doesn\u2019t create the future Gen Z wants, there\u2019s no need to worry. They\u2019ll create it for themselves.\n  Make the hire. Send the wire. \u2014 Tiffani Ashley Bell, founding executive director at The Human Utility.\n  The Okra Project \u2014 a collective that seeks to address the global crisis faced by Black trans people by bringing home-cooked, healthy and culturally specific meals and resources to Black trans people wherever we can reach them.\n The Innocence Project \u2014 its mission is to free the staggering number of innocent people who remain incarcerated, and to bring reform to the system responsible for their unjust imprisonment \u2014 a plight that disproportionately affects people of color.\n The Loveland Foundation \u2014 makes it possible for Black women and girls nationally to receive therapy support. Black women and girls deserve access to healing, and that healing will impact generations.", "posttime": "2020-07-01 05:33:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7845\u8c37,means,\u4e16\u4ee3", "title": "\n\ud83d\udc41\ud83d\udc44\ud83d\udc41.fm\u5bf9\u7845\u8c37\u610f\u5473\u7740\u4ec0\u4e48", "title_en": "\n\t\t\t\tWhat \ud83d\udc41\ud83d\udc44\ud83d\udc41.fm means for Silicon Valley\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/30/what-eye-mouth-eye-fm-means-for-silicon-valley/", "via": "", "real_tags": ["\u7845\u8c37", "means", "\u4e16\u4ee3"]}, {"category": "", "categoryclass": "", "imagename": "f5a0841238bcdf45d8d0954d3ae771a3.jpg", "infoid": 1009162, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5207\u65ad\u7535\u98ce\u6247\uff1a\u6d41\u5a92\u4f53\u6709\u7ebf\u7535\u89c6\u7684\u66ff\u4ee3\u54c1\u6b63\u53d8\u5f97\u51e0\u4e4e\u4e0e\u6709\u7ebf\u7535\u89c6\u4e00\u6837\u6602\u8d35\u3002\n\u5468\u4e8c\uff0c\u8c37\u6b4c\u65d7\u4e0b\u7684YouTube TV\u5ba3\u5e03\u6bcf\u6708\u6da8\u4ef715\u7f8e\u5143\uff0c\u5c06\u5176\u6d41\u5a92\u4f53\u9891\u9053\u5957\u9910\u4ece\u6bcf\u670849.99\u7f8e\u5143\u4e0a\u8c03\u81f364.99\u7f8e\u5143\u3002\u5f53YouTube\u7535\u89c6\u57282017\u5e74\u63a8\u51fa\u65f6\uff0c\u4ef7\u683c\u662f35\u7f8e\u5143\u3002\n\u5728\u516c\u53f8\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0cYouTube\u4e3a\u81ea\u5df1\u7684\u51b3\u5b9a\u8fdb\u884c\u4e86\u8fa9\u62a4\uff0c\u5ba3\u5e03\u7ef4\u4e9a\u5eb7\u59c6\u5c06\u63d0\u4f9b\u66f4\u591a\u9891\u9053\uff0c\u5305\u62ecMTV\u548cNickelodeon\u3002\n\u8fd9\u4e00\u4e3e\u63aa\u5c06\u4e8e\u5468\u4e8c\u5bf9\u65b0\u4f1a\u5458\u751f\u6548\uff0c\u800c\u73b0\u6709\u8ba2\u6237\u7684\u8d39\u7387\u5c06\u57287\u670830\u65e5\u4e4b\u540e\u4e0a\u8c03\u3002\nYouTube\u8868\u793a\uff1a\u8fd9\u4e2a\u65b0\u4ef7\u683c\u53cd\u6620\u4e86\u5185\u5bb9\u6210\u672c\u7684\u4e0a\u6da8\uff0c\u6211\u4eec\u4e5f\u76f8\u4fe1\u5b83\u53cd\u6620\u4e86YouTube\u7535\u89c6\u7684\u5168\u90e8\u4ef7\u503c\uff0c\u4ece\u6211\u4eec\u7684\u5185\u5bb9\u5e7f\u5ea6\u5230\u6b63\u5728\u6539\u53d8\u6211\u4eec\u89c2\u770b\u76f4\u64ad\u7535\u89c6\u65b9\u5f0f\u7684\u529f\u80fd\u3002\n\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u6700\u8fd1\u5c06\u4ef7\u683c\u964d\u81f3\u6bcf\u670855\u7f8e\u5143\uff0c\u800c\u5e26Live TV\u7684Hulu\u4ef7\u683c\u4e3a54.99\u7f8e\u5143\u3002Sling TV\u662f\u6709\u7ebf\u7535\u89c6\u66ff\u4ee3\u54c1\u4e2d\u4ef7\u683c\u6700\u4f4e\u7684\uff0c\u6a59\u8272\u6216\u84dd\u8272\u5957\u9910\u6bcf\u670830\u7f8e\u5143\uff0c\u6216\u8005\u4e24\u8005\u90fd\u662f45\u7f8e\u5143\u3002\u7136\u800c\uff0cSling\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5e02\u573a\u90fd\u6709\u5f53\u5730\u7684\u5e7f\u64ad\u7535\u53f0\uff0c\u6240\u4ee5\u8bf7\u68c0\u67e5\u4e00\u4e0b\u60a8\u5f53\u5730\u7684\u5217\u8868\u3002\n\u6d88\u8d39\u8005\u62a5\u544a2019\u5e74\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u6709\u7ebf\u7535\u89c6\u7684\u5e73\u5747\u6708\u8d39\u4e3a217.42\u7f8e\u5143\u3002\n\u6709\u7ebf\u65b0\u95fb\u7684\u7f16\u8f91\u6770\u897f\u5361\u00b7\u5df4\u6069\u65af\u8bf4\uff0c\u5f53YouTube\u589e\u52a0\u989d\u5916\u7684\u9891\u9053\u65f6\uff0c\u5979\u9884\u8ba1\u4ef7\u683c\u4f1a\u4e0a\u6da8\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u8bfb\u8005\u4eec\u5e76\u4e0d\u9ad8\u5174\uff0c\u4f46\u5979\u8868\u793a\uff0cYouTube\u7684\u8ba2\u9605\u635f\u5931\u5c06\u88ab\u90a3\u4e9b\u559c\u6b22\u89c2\u770b\u7ef4\u4e9a\u5eb7\u59c6\u65b0\u9891\u9053\u7684\u4eba\u6240\u62b5\u6d88\u3002", "note_en": "Cutting the cord fans: Streaming cable TV alternatives are getting to be almost as expensive as cable TV.\n On Tuesday, Google-owned YouTube TV announced a monthly $15 price hike, bringing its streaming package of channels to $64.99\u00a0monthly, from $49.99. When YouTube TV launched in 2017, it was $35.\n In a  company blog post, YouTube defended its decision by announcing the availability of additional channels from Viacom, including\u00a0MTV and Nickelodeon.\n The move is effective Tuesday\u00a0for new members, while existing subscribers will see their rates rise after July 30.\n   &#34;This new price reflects the rising cost of content and we also believe it reflects the complete value of YouTube TV, from our breadth of content to the features that are changing how we watch live TV,&#34; YouTube said.\n   AT&amp;T Now recently lowered pricing to $55 monthly, while Hulu with Live TV is $54.99. Sling TV is the lowest priced of the cable TV alternatives, at $30 monthly for the Orange or Blue packages, or $45 for both. However, Sling doesn&#39;t carry all the local broadcast stations in each market, so check your local listings.\n   A 2019 study by  Consumer Reports found the average cable TV bill is $217.42 monthly.\n Jessica Barnes, the editor of  CordCutters News, says she expected the price hike when YouTube added the extra channels. \u00a0Readers are predictably &#34;not happy,&#34; but she says YouTube&#39;s subscription losses will be offset by those who like watching the new channels from Viacom.", "posttime": "2020-07-01 05:32:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "youtube,\u7535\u89c6,tv", "title": "YouTube\u7535\u89c6\u6da8\u4ef7\u6210\u4e3a\u6700\u6602\u8d35\u7684\u6709\u7ebf\u7535\u89c6\u66ff\u4ee3\u54c1", "title_en": "YouTube TV Jacks Up Pricing To Become Most Expensive Cable TV Alternative", "transed": 1, "url": "https://www.usatoday.com/story/tech/2020/06/30/youtube-tv-raises-price-to-65-month/5349685002/", "via": "", "real_tags": ["youtube", "\u7535\u89c6", "tv"]}, {"category": "", "categoryclass": "", "imagename": "365a49334eac3d73a8008da99e7cdefe.png", "infoid": 1009161, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u56db\uff0c\u6211\u7684\u670b\u53cb\u6bd4\u5c14\u00b7\u9999\u519c\u5728\u4e0e\u764c\u75c7\u7684\u957f\u671f\u6597\u4e89\u4e2d\u5931\u8d25\u4e86\u3002\u201c\u6c34\u661f\u65b0\u95fb\u201d\u6709\u4ed6\u7684\u8ba3\u544a\u3002\u6211\u60f3\u4e3a\u4ed6\u521b\u5efa\u4e00\u4e2a\u7ef4\u57fa\u767e\u79d1\u9875\u9762\uff0c\u5c31\u50cf\u6211\u4e3a\u6211\u7684\u670b\u53cb\u7ea6\u7ff0\u00b7\u6c83\u987f\u6240\u505a\u7684\u90a3\u6837\u3002\u4f46\u662f\uff0c\u5fe0\u4e8e\u6bd4\u5c14\u8c26\u900a\u7684\u5929\u6027\uff0c\u4ed6\u51e0\u4e4e\u6ca1\u6709\u5728\u7f51\u7edc\u4e0a\u7559\u4e0b\u4efb\u4f55\u75d5\u8ff9\u3002\u7531\u4e8e\u7f3a\u4e4f\u53ef\u9760\u7684\u6d88\u606f\u6765\u6e90\u6765\u8bc1\u660e\u4ed6\u7684\u77e5\u540d\u5ea6\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u4e00\u9875\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4e0b\u9762\u7684\u7b80\u77ed\u63cf\u8ff0\uff0c\u5728\u4ed6\u7684\u8bb8\u591a\u670b\u53cb\u7684\u5b9d\u8d35\u5e2e\u52a9\u4e0b\u6c47\u7f16\u800c\u6210\uff0c\u5c06\u4e0d\u5f97\u4e0d\u53d6\u800c\u4ee3\u4e4b\u3002\u6b22\u8fce\u53d1\u8868\u6000\u5ff5\u6bd4\u5c14\u7684\u8bc4\u8bba\u3002\u8fd9\u5f20\u7167\u7247\u662f\u6bd4\u5c14\u7684\u724c\uff0c\u51fa\u81eaUsenix\u534f\u4f1a1994\u5e74\u4e3aUnix\u64cd\u4f5c\u7cfb\u7edf25\u5468\u5e74\u800c\u5236\u4f5c\u7684\u4e00\u526f\u6251\u514b\u724c\u4e2d\u3002\u6bd4\u5c14\u5f88\u65e9\u5c31\u5f00\u59cb\u7f16\u7a0b\uff0c\u5728\u4ed6\u9ad8\u4e2d\u7684\u8ba1\u7b97\u673a\u5b9e\u9a8c\u5ba4\u91cc\u5446\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5e76\u548c\u4e00\u4e2a\u7ae5\u5b50\u519b\u5c0f\u7ec4\u4e00\u8d77\u4f7f\u7528\u7f8e\u56fd\u5b87\u822a\u5c40\u4f4d\u4e8e\u514b\u5229\u592b\u5170\u7684\u5218\u6613\u65af\u7814\u7a76\u4e2d\u5fc3\u7684\u8ba1\u7b97\u673a\u3002\u4ed6\u6bd5\u4e1a\u4e8e\u51ef\u65af\u97e6\u65af\u7279\u5927\u5b66\uff0c\u83b7\u5f97\u8ba1\u7b97\u673a\u5de5\u7a0b\u7855\u58eb\u5b66\u4f4d\u3002\u4ed61981\u5e74\u7684\u8bba\u6587\u6d89\u53ca\u5230\u76f8\u5f53\u5927\u7684\u96be\u5ea6\uff1a\u5c06Unix V7\u79fb\u690d\u5230Harris/6\u4e0a\uff0cHarris/6\u662f\u4e00\u53f0\u5177\u670918\u4f4d\u5730\u5740\u7a7a\u95f4\u548c16\u4f4d\u7a0b\u5e8f\u8ba1\u6570\u5668\u768424\u4f4d\u5b57\u5bfb\u5740\u673a\u5668\u3002\u4ed6\u4f7f\u7528\u8428\u59c6\u00b7\u83b1\u5f17\u52d2(Sam Leffler)\u6784\u5efa\u7684\u7f16\u8bd1\u5668\u548c\u7f57\u5e03\u00b7\u91d1\u683c\u5c14(Rob Gingell)\u79fb\u690d\u7684shell\u64b0\u5199\u4ed6\u7684\u914d\u5957\u8bba\u6587\u3002\u4ed6\u548c\u963f\u66fc\u591a\u00b7\u65af\u7279\u7279\u7eb3\u4e00\u8d77\u52a0\u5165\u4e86\u6570\u5b57\u8bbe\u5907\u516c\u53f8\u7684Unix\u5de5\u7a0b\u5c0f\u7ec4\u3002\u4ed6\u4eec\u81f4\u529b\u4e8e\u5728Vaxen\uff1aShannon\u548cStettner\u4e0a\u5f00\u53d1AT&amp\uff1bT\u7684UNIX/32V\u548c4BSD\uff1aShannon\u548cStettner\u6700\u521d\u81f4\u529b\u4e8eUNIX/32V\u4e0a\u7684\u4f4e\u7ea7CPU\u548c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\uff0c\u4f46\u5f88\u5feb\u5c31\u4e13\u6ce8\u4e8e\u4e0e\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(University of California\uff0cBerkeley)\u76844.0BSD\u5408\u4f5c\u3002\u4f2f\u514b\u5229\u7684Bill Joy\u6765\u5230\u65b0\u6c49\u666e\u90e1\uff0c\u4e0e\u9999\u519c\u548cStettner\u4e00\u8d77\u5b8c\u6210\u65b0\u7684BSD\u7248\u672c\uff0c\u5305\u62ecUEG CPU\u652f\u6301\u548c\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5e76\u5728\u6700\u540e\u4e00\u523b\u5bf9DEC\u8bbe\u65bd\u63d0\u4f9b\u7684\u5176\u4ed6\u914d\u7f6e\u8fdb\u884c\u5f00\u53d1\u548c\u6d4b\u8bd5\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4e09\u4e2a\u4eba\u62ff\u51fa\u4e86VMS\u5f00\u53d1\u5c0f\u7ec4\u4f7f\u7528\u7684\u4e3bVAX\u7684\u6700\u7ec8\u6d4b\u8bd5\u7248\u3002\u6ca1\u6709\u6536\u5230VMS\u5f00\u53d1\u4eba\u5458\u7684\u4efb\u4f55\u8bc4\u8bba\uff0c\u4ed6\u4eec\u7684\u7ec8\u7aef\u7b2c\u4e8c\u5929\u65e9\u4e0a\u7528Unix\u767b\u5f55\u63d0\u793a\u7b26\u5411\u4ed6\u4eec\u6253\u62db\u547c\u2026\u2026\u3002UEG&#39\uff1b\u7684\u673a\u5668\u662f\u7b2c\u4e00\u53f0\u8fd0\u884c\u6807\u8bb0\u4e3a4.5BSD\u7684\u65b0Unix\u7684\u673a\u5668\u3002\n\u8482\u59c6\u00b7\u5e03\u96f7(Tim Bray)\u5728\u90a3\u91cc\uff1aDEC Unix\u5c0f\u7ec4\u76f8\u5f53\u5c0f\uff1b\u5b83\u4ee5\u963f\u66fc\u591a\u00b7\u65af\u7279\u7279\u7eb3(Armando Stettner)\u548c\u6bd4\u5c14\u00b7\u9999\u519c(Bill Shannon)\u7684\u624d\u534e\u4e3a\u7279\u8272\u3002\u4ed6\u4eec\u8fd0\u884c\u7740\u4e00\u4e2a\u5927\u578b\u7684VAX\uff0c\u5b83\u5728UUCP\u7684\u4e92\u8054\u7f51\u4e4b\u524d\u7684\u7f51\u7edc\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u53eb\u505aDECVAX\u3002\u6bd4\u5c14\u662f\u4e00\u4f4d\u5178\u578b\u7684\u6781\u5ba2\u7ea2\u53d1\uff0c\u4ed6\u63e1\u7740\u6211\u4eec\u7684\u624b\uff0c\u5e2e\u52a9\u8c03\u8bd5\u5ba2\u6237\u5947\u602a\u7684ioctl()\u8c03\u7528\uff0c\u8ba9\u5b83\u8fd0\u884c\u8d77\u6765\u3002\nDecvax\u771f\u7684\u5f88\u91cd\u8981\uff0c\u5b83\u662fBill\u548cArmando\u7684\u5b69\u5b50\uff1a\u7ad9\u70b9\u540d\u79f0\uff1aDecvax\u7ad9\u70b9\u5185\u5bb9\uff1aDEC Unix\u5de5\u7a0b\u5c0f\u7ec4\u7684\u4e3b\u8981\u7cfb\u7edf\u7ad9\u70b9\u8054\u7cfb\u4eba\u59d3\u540d\uff1aBill Shannon\u8054\u7cfb\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff1aDecvax\uff01shannon\u7f8e\u56fd\u90ae\u4ef6\u5730\u5740\uff1aBill Shannon MK1-1/D29 Digital Equipment Corporation Continental Blvd(\u7f8e\u56fd\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff1aBill Shannon MK1-1/D29 Digital Equipment Corporation Continental Blvd)\u3002\u5bc6\u82cf\u91cc\u5dde\u6885\u91cc\u9a6c\u514b\uff0c\u90ae\u7f1603054\u3002\nDevax\u662fUUCP\u7f51\u7edc\u548cUsenet\u65b0\u95fb\u7ec4\u7206\u70b8\u7684\u5173\u952e\uff1a\u7206\u70b8\u662f\u6570\u5b57\u8bbe\u5907\u516c\u53f8\u7684Armando Stettner\u548cBill Shannon\u7684\u76f4\u63a5\u8d23\u4efb\u3002USENIX\u4f1a\u8bae\u4e0a\u7684\u4e00\u4e9b\u4eba\u62b1\u6028\u8de8\u6d32\u7535\u8bdd\u5bfc\u81f4\u7684\u7535\u8bdd\u8d39\u4e0a\u6da8\u3002\u963f\u66fc\u591a\u548c\u6bd4\u5c14\u8bf4\uff0c\u5982\u679c\u4ed6\u4eec\u80fd\u5728\u65b0\u7f55\u5e03\u4ec0\u5c14\u5dde\u5f97\u5230\u4e00\u4efd\u7535\u89c6\u8f6c\u64ad\uff0c\u4ed6\u4eec\u5c31\u4f1a\u652f\u4ed8\u4f2f\u514b\u5229\u7684\u7535\u8bdd\u8d39\u3002(Stettner\u968f\u540e\u62a5\u9053\u4e86\u524d\u5f80\u6b27\u6d32\u3001\u65e5\u672c\u548c\u6fb3\u5927\u5229\u4e9a\u7684\u65b0\u95fb\u9988\u9001\u3002)\u3002\n\u8fd9\u4e00\u5207\u5bfc\u81f4\u4e86\u7ecf\u5178\u7684\u65b0\u6c49\u666e\u90e1UNIX\u8f66\u724c\uff1a\u9999\u519c\u7684\u65b0\u6c49\u666e\u90e1\u7684Unix\u8f66\u724c\u4e0d\u4ec5\u6210\u4e3a\u6781\u5ba2\u7684\u6807\u5fd7\uff0c\u800c\u4e14\u6210\u4e3a\u90a3\u4e9b\u4e0e\u5e2e\u52a9Unix\u4f20\u64ad\u7684\u6e90\u4ee3\u7801\u5171\u4eab\u7406\u5ff5\u76f8\u5173\u7684\u4eba\u7684\u6218\u6597\u53e3\u53f7\u3002\n\u5728DEC\u5de5\u4f5c\u671f\u95f4\uff0c\u4ed6\u8ba4\u8bc6\u4e86Bill Joy\uff0c\u5e76\u6e34\u671b\u6210\u4e3aSun Microsystems\u768411\u53f7\u5458\u5de5\u3002\u5728\u5b83\u7684\u6574\u4e2a\u5386\u53f2\u4e0a\uff0c\u4ed6\u90fd\u662f\u90a3\u91cc\u7684\u56fa\u5b9a\u6210\u5458\uff0c\u5f53\u5b83\u88ab\u7532\u9aa8\u6587\u6536\u8d2d\u65f6\uff0c\u4ed6\u4e5f\u662f\u5e78\u5b58\u8005\u4e4b\u4e00\u3002\u5f53\u6bd4\u5c14\u548c\u51ef\u4f26\u642c\u5230\u65e7\u91d1\u5c71\u6e7e\u533a\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u8f66\u724cUNIX\u88ab\u62ff\u8d70\u4e86\uff0c\u6240\u4ee5\u4ed6\u5347\u7ea7\u5230\u4e86\u88c5\u9970\u5728\u4ed6\u7684M\u7cfb\u5217\u5b9d\u9a6c\u4e0a\u7684\u84dd\u8272\u52a0\u5ddeVMUNIX\u8f66\u724c\u3002\u4ece1982\u5e74\u5f00\u59cb\uff0c\u6bd4\u5c14\u00b7\u9999\u519c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8d1f\u8d23\u5c06\u6bd4\u5c14\u00b7\u4e54\u4f0a\u7279\u522b\u9884\u53d1\u76844.2BSD(\u79f0\u4e3a4.1c)\u8f6c\u5316\u4e3aSunOS\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u3002\u4ed6\u8fd8\u5bf94.2\u7248\u7684\u865a\u62df\u5185\u5b58\u4ee3\u7801\u505a\u51fa\u4e86\u91cd\u5927\u8d21\u732e\u3002\u9999\u519c\u5728\u5c06\u4e00\u53f0VAX/750\u79fb\u690d\u5230Sun/1\u4e0a\u65f6\u6709\u4e00\u53f0VAX/750\u8981\u8fd0\u884c4.1c\u3002\u6709\u4f20\u8a00\u8bf4\uff0c\u9999\u519c\u8981\u4e86\u4ed6\u4e60\u60ef\u7684VAX/780\uff0c\u4f46\u4e54\u4f0a\u8bf4\u4f60\u53ea\u80fd\u5f97\u5230/750-\u6211\u5e0c\u671b\u4f60\u80fd\u6fc0\u52b1\u4f60\u5c3d\u5feb\u8ba9\u4e00\u53f0Sun/1\u6bd4/750\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\u5f53\u6211\u52a0\u5165\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u7684\u5b89\u5fb7\u9c81\u9879\u76ee\u65f6\uff0c\u6211\u662f\u9999\u519c\u5de5\u4f5c\u7684\u65e9\u671f\u7528\u6237\u3002\u4ed6\u7684\u5de5\u4f5c\u5bfc\u81f4\u4e86\u8482\u59c6\u00b7\u5e03\u96f7(Tim Bray)\u9047\u5230\u7684\u4e0d\u673d\u7684\u5185\u6838\u6050\u614c()\uff1a\u6211\u552f\u4e00\u7684\u8054\u7cfb\u4eba\u662f1988\u5e74\u7684\u4e00\u6b21\uff0c\u5f53\u65f6\u6ed1\u94c1\u5362\u5927\u5b66(University Of Waterloo)\u7684\u592a\u9633\u76d2\u5d29\u6e83\u65f6\uff0c\u7ad9\u5728\u592a\u9633\u76d2\u524d\u7684\u63a7\u5236\u53f0\u6253\u5370\u51fa\u9999\u519c\u7684\u4fe1\u606f\uff0c\u8bf4\u8fd9\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u3002\n\u5728\u6bd4\u5c14&#39\uff1b\u7684\u8d21\u732e\u4e2d\uff0c\u6709C\u98ce\u683c\u548c\u516c\u53f8\u3002\n\u56f4\u7ed5\u7740\u5b59\u6768\u81ed\u540d\u662d\u8457\u7684\u611a\u4eba\u8282\u6076\u4f5c\u5267\u7684\u8087\u4e8b\u8005\u7684\u8eab\u4efd\uff0c\u6709\u4e00\u4e2a\u6301\u4e45\u7684\u8c1c\u56e2\uff0c\u6bd4\u5982\uff1a\u4f46\u662f\u6709\u5a92\u4f53\u62a5\u9053\u8bf4\u6bd4\u5c14\u5728\u72af\u7f6a\u73b0\u573a\u30021985\u5e749\u6708\uff0c\u5f53\u6211\u52a0\u5165Sun\u516c\u53f8\uff0c\u4e0e\u8a79\u59c6\u65af\u00b7\u9ad8\u65af\u6797(James Gosling)\u4e00\u8d77\u7814\u7a76\u7a97\u53e3\u7cfb\u7edf\u65f6\uff0c\u6211\u7acb\u5373\u5165\u804c\u53c2\u52a0\u4e86\u5468\u56db\u7684Windows\u5348\u9910\u3002\u6bd4\u5c14\u662f\u8fd9\u4e2a\u5de5\u7a0b\u5e08\u5c0f\u7ec4\u7684\u521b\u59cb\u6210\u5458\u4e4b\u4e00\uff0c\u8fd9\u4e2a\u5c0f\u7ec4\u6700\u521d\u81f4\u529b\u4e8e\u62b1\u6028(\u5e76\u8bd5\u56fe\u6539\u8fdb)Sun\u65e9\u671f\u9057\u7559\u4e0b\u6765\u7684\u7528\u6237\u754c\u9762\u3002\u5728\u65e9\u671f\uff0cWindows\u5348\u9910\u8fd8\u5728\u7ef4\u5c14\u7ec4\u7ec7\u4e86\u4e00\u5e74\u4e00\u5ea6\u7684\u6ed1\u96ea\u5468\u3002\u4eea\u5f0f\u7684\u4e00\u90e8\u5206\u662f\u4ece\u4e39\u4f5b\u5f00\u8f66\u5230\u7ef4\u5c14\uff0c\u7136\u540e\u4e58\u5750\u4e00\u5bf9\u79df\u6765\u7684\u6797\u80af\u5927\u9646\u8f66\u56de\u6765\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b83\u4eec\u662f\u5904\u7406\u51b0\u96ea\u7684\u7406\u60f3\u5de5\u5177\u3002\u8fd9\u4e9b\u65c5\u884c\u8bc1\u660e\u4e86\u6bd4\u5c14\u7684\u9a7e\u9a76\u6280\u672f\u3002\u4e09\u5206\u4e4b\u4e00\u591a\u4e16\u7eaa\u8fc7\u53bb\u4e86\uff0c\u6211\u4eec\u4e94\u4e2a\u4eba\u4ecd\u7136\u6bcf\u5468\u56db\u805a\u5728\u4e00\u8d77\u5403\u5348\u996d\uff0c\u4e0d\u518d\u8fc7\u591a\u5730\u8c08\u8bba\u7528\u6237\u754c\u9762\u7cfb\u7edf\uff0c\u73b0\u5728\u975e\u5e38\u60f3\u5ff5\u6bd4\u5c14\u3002\u6bd4\u5c14\u544a\u522b\u7535\u5b50\u90ae\u4ef6\u7684\u4e3b\u9898\u884c\u58f0\u660e\uff1a\u516c\u5171\u9759\u6001\u6700\u7ec8\u65e0\u6548\u518d\u89c1(){/**NORETURN*/}", "note_en": "Last Thursday my friend Bill Shannon lost a long battle with cancer. The  Mercury News has  his obituary. I thought to create a Wikipedia page for him as I did for my friend  John Wharton. But, true to Bill&#39;s unassuming nature, he left almost no footprint on the Web. The lack of  reliable sources attesting to his  notability made such a page impossible. The brief account below the fold, compiled with invaluable assistance from many of his friends, will have to do instead. Comments with memories of Bill are welcome.  The image is Bill&#39;s card from the deck of  playing cards the  Usenix Association created for the 25th anniversary of the  Unix operating system in 1994.   Bill started programming early, spending hours in the computer lab at his high school, and with a Boy Scout group that used computers at NASA&#39;s Lewis Research Center in Cleveland.  He graduated from Case Western with a Masters in Computer Engineering. His 1981  thesis involved a significant degree of difficulty: porting Unix V7 to the Harris/6, a 24-bit word addressed machine with a 18 bit address space and a 16 bit program counter. He used a compiler built by  Sam Leffler for his companion thesis, and the shell ported by  Rob Gingell.  He joined Digital Equipment&#39;s Unix Engineering Group with  Armando Stettner. They worked on bringing up  AT&amp;T&#39;s UNIX/32V and 4BSD on Vaxen:  Shannon and Stettner worked on low-level CPU and device driver support initially on UNIX/32V but quickly moved to concentrate on working with the University of California, Berkeley&#39;s 4.0BSD. Berkeley&#39;s Bill Joy came to New Hampshire to work with Shannon and Stettner to wrap up a new BSD release, incorporating the UEG CPU support and drivers, and to do some last minute development and testing on other configurations available at DEC&#39;s facilities. As an aside, the three brought up a final test version on the main VAX used by the VMS development group. No comments were heard from the VMS developers whose terminals greeted them the next morning with a Unix login prompt... UEG&#39;s machine was the first to run the new Unix, labeled 4.5BSD.\n Tim Bray was there:  The DEC Unix group was pretty small; it featured the talents of Armando Stettner and Bill Shannon. They ran this one big VAX that was really central in the UUCP what-came-before-the-Internet network, called  decvax. Bill, a classically geeky redhead, held our hands and helped debug the customer&#39;s weird  ioctl() calls and get the thing running,\n decvax was really important and it was Bill and Armando&#39;s baby:  Name of site: decvaxWhat the site is all about: Main system for the DEC Unix Engineering GroupName of contact person at site: Bill ShannonElectronic mail address of contact person: decvax!shannonU.S. Mail address of contact person: Bill Shannon MK1-1/D29 Digital Equipment Corporation Continental Blvd. Merrimack, NH 03054\n decvax was key to the  explosion of UUCP networking and USENET news groups:  The explosion was the direct responsibility of Armando Stettner and Bill Shannon of Digital Equipment Corporation. Someone at the USENIX meeting complained about the telephone bills run up by transcontinental calls. Armando and Bill said that if they could get a feed to decvax in New Hampshire, they&#39;d pick up the Berkeley phone bill. (Stettner subsequently covered the news feeds to Europe, Japan, and Australia.)\n  This all led to the classic  New Hampshire &#34;Live Free Or Die&#34;  UNIX license plate:  Shannon&#39;s New Hampshire &#34;Live Free or Die&#34; Unix license plate has become not only a geek icon, but a rallying cry for people who related to the source-code-sharing ideas that helped Unix spread.\nWhile working at DEC he met  Bill Joy, and was eager to become employee #11 at  Sun Microsystems. He was a fixture there through its entire history, and was one of the survivors when it was  acquired by Oracle.    When Bill and Karen moved to the Bay Area they discovered that the license plate  UNIX was taken, so he upgraded to the  blue California  VMUNIX license plate that adorned his M-series BMWs.  Starting in 1982 Bill Shannon was largely responsible for transforming Bill Joy&#39;s special pre-release of\u00a0  4.2BSD (called 4.1c) into the first version of SunOS. He also made significant contributions to the virtual memory code of 4.2. Shannon had a VAX/750 to run 4.1c on while porting it running to the  Sun/1. The rumor is that Shannon asked for the VAX/780 he was used to but Joy said a /750 is all you get - I want you incentivized to get a Sun/1 running it faster than the /750 ASAP. I was an early user of Shannon&#39;s work when I joined  Carnegie-Mellon&#39;s Andrew project.  His work led to the immortal kernel  panic() that  Tim Bray encountered:  My only contact was once in 1988, standing in front of a Sun box at the University of Waterloo when it crashed, the console printing out  Shannonsays this can&#39;t happen.\nAmong Bill&#39;s contributions was   C Style and Coding Standards for SunOS. The abstract provided an elegant justification for venturing into this often controversial area:  This document describes a set of coding standards and recommendations that are local standards for programs written in C for the SunOS product. The purpose of these standards is to facilitate sharing of each other\u2019s code, as well as to enable construction of tools (e.g., editors, formatters) that, by incorporating knowledge of these standards, can help the programmer in the preparation of programs.\nBill was perhaps the central figure in the activities at Sun that evolved Sun UNIX to SunOS and onward. He was the anchor of the culture Sun developed that led to an extremely productive and creative period in which Sun emerged from start-up to industry leader. He was the primary author of few papers, but was an author/contributor to the work many of those papers described. At the summer 1987 Usenix conference this was captured best in his public acknowledgement by Howard Chartock as the &#34;Sheriff of Kernel County&#34;, intended as a label of respect and admiration. He was a leading light of the group of SunOS Distinguished Engineers through the AT&amp;T deal that, after years of struggle, merged it with System V to create Solaris. Bill then led the effort to re-target Java to be an application server environment as  Java EE.  I have  Scott McNealy&#39;s permission to quote what he wrote to Bill:  There are 235,000 former Sun folks and countless others who partnered with us in the amazing journey we had. There are a few who were there at the beginning and created the culture that was unique and special to the Valley and to Tech. You were a defining cog and driver of that culture. Your modest, soft spoken but determined voice for what was technically right, economically right, but more importantly what was humanly right was always there at just the right time and tone.  It is no exaggeration to say your influence on the Valley and Tech is oversized and under appreciated, though us Sun folks know what you have done for us all. And no one feels more gratitude for your contributions than me. Always in awe of your tech prowess and prolific work ethic. And your loyalty to all of us.  I am proud to say I worked for you. And learned from you.  Your efforts will live beyond us all. Sun culture has spread everywhere internationally. Our technology still drives the network computing landscape. And your work and impact will outlive all of us who worked at or with Sun.\n An enduring mystery surrounds the identities of the perpetrators of Sun&#39;s notorious early  April Fool&#39;s pranks, such as:      But there are press reports placing Bill at the &#34;scenes of the crimes&#34;.  When I joined Sun in September 1985 to work on window systems with  James Gosling I was immediately inducted into the Thursday &#34;windows lunch&#34;. Bill was a founding member of this group of engineers, which was initially devoted to complaining about (and trying to improve) Sun&#39;s vestigial early user interface.   In the early days, the &#34;windows lunch&#34; also organized an annual ski week at Vail. Part of the ritual was the drive from Denver to Vail and back in a pair of rented Lincoln Continentals. Somehow we believed they were the ideal vehicles to tackle snow and ice. These trips were a testament to Bill&#39;s driving skill.  More that a third of a century later five of us are still meeting for lunch every Thursday, no longer talking much about user interface systems, and now greatly missing Bill.  The subject line of Bill&#39;s farewell email declared:  \u00a0 public static final void goodbye() { /**NORETURN*/ }", "posttime": "2020-07-01 05:30:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9999\u519c,shannon,unix", "title": "\u6bd4\u5c14\u00b7\u9999\u519c\u00b7\u91cc\u666e", "title_en": "Bill Shannon RIP", "transed": 1, "url": "https://blog.dshr.org/2020/06/bill-shannon-rip.html", "via": "", "real_tags": ["\u9999\u519c", "shannon", "unix"]}, {"category": "", "categoryclass": "", "imagename": "ac115f2374c24df9d6f048fdd26184ed.jpg", "infoid": 1009160, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u8eb2\u5728\u5bb6\u91cc\u3002\u4e0a\u4e2a\u6708\uff0c\u6211\u57cb\u5934\u5199\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u5bf9\u6211\u5728\u7eaa\u5ff5\u8bfa\u72791918\u5e74\u53d1\u8868\u5173\u4e8e\u5bf9\u79f0\u548c\u5b88\u6052\u5b9a\u5f8b\u7684\u8bba\u6587\u767e\u5e74\u7eaa\u5ff5\u5927\u4f1a\u4e0a\u7684\u8bb2\u8bdd\u8fdb\u884c\u4e86\u6269\u5c55\u3002\u8fd9\u8ba9\u6211\u7684\u7981\u95ed\u53d8\u5f97\u5bb9\u6613\u591a\u4e86\u3002\u5728\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u7814\u7a76\u5e94\u7528\u8303\u7574\u7406\u8bba\u4e4b\u540e\uff0c\u56de\u5230\u8fd9\u79cd\u6570\u5b66\u7269\u7406\u662f\u4ef6\u597d\u4e8b\u3002\u539f\u6765\u6211\u771f\u7684\u5f88\u6000\u5ff5\u5b83\u3002\n\u867d\u7136\u4f1a\u8bae\u4e0a\u7684\u6bcf\u4e2a\u4eba\u90fd\u5728\u4e0d\u65ad\u5f3a\u8c03\u8bfa\u72791918\u5e74\u7684\u8bba\u6587\u4e2d\u6709\u4e24\u4e2a\u5927\u5b9a\u7406\uff0c\u4f46\u6211\u7684\u8bba\u6587\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9a\u7406-\u7269\u7406\u5b66\u5bb6\u79f0\u4e4b\u4e3a\u8bfa\u7279\u5b9a\u7406\u7684\u90a3\u4e2a\uff1a\n\u4eba\u4eec\u5e38\u5e38\u7528\u201c\u5bf9\u79f0\u7ed9\u51fa\u5b88\u6052\u5b9a\u5f8b\u201d\u6765\u6982\u62ec\u8fd9\u4e2a\u5b9a\u7406\u3002\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u4f46\u53ea\u6709\u5728\u67d0\u4e9b\u5047\u8bbe\u4e0b\u624d\u662f\u6b63\u786e\u7684\uff1a\u4f8b\u5982\uff0c\u8fd0\u52a8\u65b9\u7a0b\u6765\u81ea\u62c9\u683c\u6717\u65e5\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u54ea\u4e9b\u7c7b\u578b\u7684\u7269\u7406\u7406\u8bba\uff0c\u5bf9\u79f0\u7ed9\u51fa\u4e86\u5b88\u6052\u5b9a\u5f8b\uff1f\u5982\u679c\u6211\u4eec\u5047\u8bbe\u4e16\u754c\u662f\u7531\u8fd9\u7c7b\u7406\u8bba\u63cf\u8ff0\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u4e16\u754c\u7684\u5047\u8bbe\u662f\u4ec0\u4e48\u5462\uff1f\u8981\u5f04\u6e05\u8fd9\u4e9b\u95ee\u9898\u7684\u771f\u76f8\u5f88\u96be\uff0c\u4f46\u503c\u5f97\u4e00\u8bd5\u3002\n\u5728\u8bb8\u591a\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4e0e\u5b88\u6052\u91cf\u6709\u5173\u7684Noether\u5b9a\u7406\u7684\u4e0d\u540c\u7248\u672c\u3002\u867d\u7136\u5fae\u5206\u51e0\u4f55\u6846\u67b6\u66f4\u7b26\u5408Noether\u7684\u539f\u59cb\u89c2\u70b9\uff0c\u4f46\u6211\u7684\u8bba\u6587\u6ca1\u6709\u63d0\u5230\u62c9\u683c\u6717\u65e5\uff0c\u800c\u662f\u4ee3\u6570\u5730\u7814\u7a76\u4e86\u8be5\u5b9a\u7406\u3002\n\u2026\u3002\u4ee3\u6570\u5bf9\u4e8e\u51e0\u4f55\u5b66\u5bb6\u6765\u8bf4\uff0c\u53ef\u80fd\u5c31\u662f\u4f60\u6240\u8bf4\u7684\u6d6e\u58eb\u5fb7\u5f0f\u7684\u62a5\u4ef7\u3002\u5982\u4f60\u6240\u77e5\uff0c\u6b4c\u5fb7\u6545\u4e8b\u4e2d\u7684\u6d6e\u58eb\u5fb7\u5f97\u5230\u4e86\u4ed6\u60f3\u8981\u7684\u4efb\u4f55\u4e1c\u897f(\u5728\u4ed6\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u4e00\u4e2a\u7f8e\u4e3d\u5973\u4eba\u7684\u7231)\uff0c\u9b54\u9b3c\u7ed9\u4e86\u4ed6\u4efb\u4f55\u4e1c\u897f\uff0c\u4ee5\u6362\u53d6\u4ed6\u51fa\u5356\u81ea\u5df1\u7684\u7075\u9b42\u3002\u4ee3\u6570\u662f\u9b54\u9b3c\u7ed9\u6570\u5b66\u5bb6\u7684\u793c\u7269\u3002\u9b54\u9b3c\u8bf4\uff1a\u6211\u4f1a\u7ed9\u4f60\u8fd9\u53f0\u5f3a\u5927\u7684\u673a\u5668\uff0c\u5b83\u4f1a\u56de\u7b54\u4f60\u559c\u6b22\u7684\u4efb\u4f55\u95ee\u9898\u3002\u4f60\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u628a\u4f60\u7684\u7075\u9b42\u7ed9\u6211\uff1a\u653e\u5f03\u51e0\u4f55\uff0c\u4f60\u5c31\u4f1a\u62e5\u6709\u8fd9\u53f0\u795e\u5947\u7684\u673a\u5668\u3002\n\u867d\u7136\u8fd9\u6709\u65f6\u662f\u6b63\u786e\u7684\uff0c\u4f46\u4ee3\u6570\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u8ba1\u7b97\u5de5\u5177\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u4ee5\u975e\u5e38\u6e05\u6670\u548c\u63d0\u70bc\u7684\u65b9\u5f0f\u8868\u8fbe\u6982\u5ff5\u3002\u6b64\u5916\uff0c\u4e3a\u7ecf\u5178\u529b\u5b66\u5f00\u53d1\u7684\u51e0\u4f55\u6846\u67b6\u5bf9\u91cf\u5b50\u529b\u5b66\u6765\u8bf4\u662f\u4e0d\u591f\u7684\u3002\u4ee3\u6570\u65b9\u6cd5\u5f3a\u8c03\u7ecf\u5178\u529b\u5b66\u548c\u91cf\u5b50\u529b\u5b66\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\uff0c\u6f84\u6e05\u5b83\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u3002\n\u5728\u8c08\u5230\u8bfa\u7279\u5b9a\u7406\u65f6\uff0c\u6211\u4e00\u76f4\u4f7f\u7528\u7528\u6765\u63cf\u8ff0\u7269\u7406\u7cfb\u7edf\u7684\u4e09\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u91cd\u8981\u6982\u5ff5\uff1a\u201c\u72b6\u6001\u201d\u3001\u201c\u53ef\u89c2\u6d4b\u6027\u201d\u548c\u201c\u4ea7\u751f\u5668\u201d\u3002\u7269\u7406\u7cfb\u7edf\u5177\u6709\u72b6\u6001\u7684\u51f8\u96c6\uff0c\u5176\u4e2d\u51f8\u7ebf\u6027\u7ec4\u5408\u4f7f\u6211\u4eec\u80fd\u591f\u63cf\u8ff0\u72b6\u6001\u7684\u6982\u7387\u6df7\u5408\u3002\u4e00\u4e2a\u53ef\u89c2\u6d4b\u7684\u91cf\u662f\u4e00\u4e2a\u5b9e\u503c\u7684\u91cf\uff0c\u5b83\u7684\u503c\u53d6\u51b3\u4e8e--\u53ef\u80fd\u5e26\u6709\u4e00\u4e9b\u968f\u673a\u6027--\u53d6\u51b3\u4e8e\u72b6\u6001\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff1a\u89c2\u5bdf\u503c\u5c06\u6bcf\u4e2a\u72b6\u6001\u6620\u5c04\u5230\u5b9e\u7ebf\u4e0a\u7684\u6982\u7387\u5ea6\u91cf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u751f\u6210\u5668\u662f\u4ea7\u751f\u4e00\u7ec4\u72b6\u6001\u7684\u5355\u53c2\u6570\u53d8\u6362\u7684\u4e1c\u897f--\u6216\u8005\u5bf9\u5076\u5730\uff0c\u5f15\u8d77\u4e00\u7ec4\u53ef\u89c2\u6d4b\u7684\u53d8\u6362\u3002\n\u5f88\u5bb9\u6613\u6df7\u6dc6\u53ef\u89c2\u6d4b\u6027\u548c\u751f\u6210\u5668\uff0c\u4f46\u6211\u60f3\u8981\u533a\u5206\u5b83\u4eec\u3002\u5f53\u6211\u4eec\u8bf4\u2018\u7cfb\u7edf\u7684\u80fd\u91cf\u662f7\u7126\u8033\u2019\u65f6\uff0c\u6211\u4eec\u628a\u80fd\u91cf\u5f53\u4f5c\u4e00\u4e2a\u53ef\u89c2\u6d4b\u7684\u4e1c\u897f\uff1a\u4f60\u53ef\u4ee5\u6d4b\u91cf\u7684\u4e1c\u897f\u3002\u5f53\u6211\u4eec\u8bf4\u201c\u54c8\u5bc6\u987f\u91cf\u4ea7\u751f\u65f6\u95f4\u5e73\u79fb\u201d\u65f6\uff0c\u6211\u4eec\u628a\u54c8\u5bc6\u987f\u91cf\u5f53\u4f5c\u4e00\u4e2a\u751f\u6210\u5668\u3002\n\u5728\u7ecf\u5178\u529b\u5b66\u548c\u666e\u901a\u590d\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8bf4\u54c8\u5bc6\u987f\u91cf\u5c31\u662f\u80fd\u91cf\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u8bc6\u522b\u5b83\u4eec\u3002\u4f46\u662f\uff0c\u53ef\u89c2\u6d4b\u6027\u548c\u751f\u6210\u5668\u626e\u6f14\u7740\u622a\u7136\u4e0d\u540c\u7684\u89d2\u8272-\u5728\u4e00\u4e9b\u7406\u8bba\u4e2d\uff0c\u4f8b\u5982\u5b9e\u6570\u6216\u56db\u5143\u6570\u91cf\u5b50\u529b\u5b66\uff0c\u5b83\u4eec\u786e\u5b9e\u662f\u4e0d\u540c\u7684\u3002\u5728\u6211\u7684\u8bba\u6587\u4e2d\u8003\u8651\u7684\u6240\u6709\u7406\u8bba\u4e2d\uff0c\u89c2\u5bdf\u5230\u7684\u96c6\u5408\u662fJordan\u4ee3\u6570\uff0c\u800c\u751f\u6210\u5143\u96c6\u5408\u662f\u674e\u4ee3\u6570\u3002(\u522b\u62c5\u5fc3\uff0c\u6211\u4f1a\u89e3\u91ca\u8fd9\u4e9b\u662f\u4ec0\u4e48\u3002)\u3002\n\u5f53\u6211\u4eec\u53ef\u4ee5\u5c06\u53ef\u89c2\u6d4b\u5bf9\u8c61\u4e0e\u4ea7\u751f\u5668\u8054\u7cfb\u8d77\u6765\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Noether\u5b9a\u7406\u8868\u8ff0\u4e3a\u4ee5\u4e0b\u7b49\u4ef7\u6027\uff1a", "note_en": "Most of us have been staying holed up at home lately. I spent the last month holed up writing a paper that expands on my talk at a conference honoring  the centennial of Noether\u2019s 1918 paper on symmetries and conservation laws. This made my confinement a lot more bearable. It was good getting back to this sort of mathematical physics after a long time spent on applied category theory. It turns out I really missed it.\n While everyone at the conference kept emphasizing that Noether\u2019s 1918 paper had  two big theorems in it, my paper is just about the easy one\u2014the one physicists call Noether\u2019s theorem:\n  People often summarize this theorem by saying \u201csymmetries give conservation laws\u201d. And that\u2019s right, but it\u2019s only true under some assumptions: for example, that the equations of motion come from a Lagrangian.\n This leads to some interesting questions.  For which types of physical theories do symmetries give conservation laws? What are we assuming about the world, if we assume it is described by a theories of this type? It\u2019s hard to get to the bottom of these questions, but it\u2019s worth trying.\n We can prove versions of Noether\u2019s theorem relating symmetries to conserved quantities in many frameworks. While a differential geometric framework is truer to Noether\u2019s original vision, my paper studies the theorem  algebraically, without mentioning Lagrangians.\n  \u2026algebra is to the geometer what you might call the Faustian offer. As you know, Faust in Goethe\u2019s story was offered whatever he wanted (in his case the love of a beautiful woman), by the devil, in return for selling his soul. Algebra is the offer made by the devil to the mathematician. The devil says: I will give you this powerful machine, it will answer any question you like. All you need to do is give me your soul: give up geometry and you will have this marvellous machine.\n While this is sometimes true, algebra is more than a computational tool: it allows us to express concepts in a very clear and distilled way. Furthermore, the geometrical framework developed for classical mechanics is not sufficient for quantum mechanics. An algebraic approach emphasizes the similarity between classical and quantum mechanics, clarifying their differences.\n In talking about Noether\u2019s theorem I keep using an interlocking trio of important concepts used to describe physical systems: \u2018states\u2019, \u2018observables\u2019 and `generators\u2019. A physical system has a convex set of states, where convex linear combinations let us describe probabilistic mixtures of states. An observable is a real-valued quantity whose value depends\u2014perhaps with some randomness\u2014on the state. More precisely: an observable maps each state to a probability measure on the real line. A generator, on the other hand, is something that gives rise to a one-parameter group of transformations of the set of states\u2014or dually, of the set of observables.\n It\u2019s easy to mix up observables and generators, but I want to distinguish them. When we say \u2018the energy of the system is 7 joules\u2019, we are treating energy as an observable: something you can measure. When we say \u2018the Hamiltonian generates time translations\u2019, we are treating the Hamiltonian as a generator.\n In both classical mechanics and ordinary complex quantum mechanics we usually say the Hamiltonian  is the energy, because we have a way to identify them. But observables and generators play distinct roles\u2014and in some theories, such as real or quaternionic quantum mechanics, they are truly different. In all the theories I consider in my paper the set of observables is a  Jordan algebra, while the set of generators is a  Lie algebra. (Don\u2019t worry, I explain what those are.)\n When we can identify observables with generators, we can state Noether\u2019s theorem as the following equivalence:", "posttime": "2020-07-01 05:29:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5165,noether,\u72b6\u6001", "title": "\u6df1\u5165\u4e86\u89e3\u8bfa\u4f0a\u7279\u5b9a\u7406", "title_en": "Getting to the Bottom of Noether\u2019s Theorem", "transed": 1, "url": "https://johncarlosbaez.wordpress.com/2020/06/29/noethers-theorem-2/", "via": "", "real_tags": ["\u6df1\u5165", "noether", "\u72b6\u6001"]}]
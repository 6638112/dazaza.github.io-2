[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074550, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00ab\u5176\u4ed6\u5de5\u5177\u52a0\u6cf0\u7f57\u5c3c\u4e9a\u8bed-\u5fb7\u8bed-\u82f1\u8bed-\u897f\u73ed\u7259\u8bed-\u6cd5\u8bed-\u5370\u5730\u8bed-\u610f\u5927\u5229\u8bed-\u8461\u8404\u7259\u8bed-\u8461\u8404\u7259\u8bed-\u8461\u8404\u7259\u8bed-\u8461\u8404\u7259\u8bed\u7b80\u4f53\u4e2d\u6587   \u6b63\u9ad4\u4e2d\u6587   \u65e5\u672c\u8a9e   \u6ce2\u5c14\u65af\u57fa\ud55c\uad6d\uc5b4   \u8377\u5170\u7f57\u9a6c\u52a0\u5c14\n\u610f\u89c1\u00bb\n\u7a81\u51fa\u663e\u793a\u535a\u5ba2\u3001\u64ad\u5ba2\u548c\u7f51\u7ad9\u662f\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u7aef\uff0c\u4f46\u4eca\u5e74\u6211\u4eec\u51b3\u5b9a\u66f4\u8fdb\u4e00\u6b65\uff0c\u771f\u6b63\u5173\u6ce8\u7ec4\u6210JavaScript\u793e\u533a\u7684\u4eba\uff01\n\u6211\u4eec\u8bf7JavaScript\u793e\u533a\u7684\u6210\u5458\u5206\u4eab\u4ed6\u4eec\u7684\u201c\u5e74\u5ea6\u7cbe\u9009\u201d\n\u9664\u4e86esbuild\u548cswc\u8fd9\u4e24\u4e2a\u63a8\u52a8\u751f\u6001\u7cfb\u7edf\u53d1\u5c55\u7684\u795e\u5947\u5de5\u5177\u4e4b\u5916\uff0cI&#39\uff1b\u6211\u5f88\u4eab\u53d7\u5723\u8bde\u8282\u3002\u5b83\u6709\u4e00\u4e2a\u4ee4\u4eba\u6109\u5feb\u7684DX\uff0c\u5b83&#39\uff1b\u5b83\u6709\u5f88\u591a\u7279\u70b9\u3002\n\u6211\u4eec\u8bf7JavaScript\u793e\u533a\u7684\u6210\u5458\u5206\u4eab\u4ed6\u4eec\u7684\u201c\u5e74\u5ea6\u7cbe\u9009\u201d\n\u4f60\u9605\u8bfb\u3001\u5173\u6ce8\u6216\u53ea\u60f3\u7a81\u51fa\u663e\u793a\u5176\u4f5c\u54c1\u7684\u4eba\uff08\u81ea\u7531\u683c\u5f0f\u5b57\u6bb5\u3001\u9017\u53f7\u5206\u9694\u7684\u540d\u79f0\uff09\u3002\n\u52a0\u5165Lee Robinson\u3001Jenn Creighton\u3001Wes Bos\u548c\uff1b\u5728\u7f8e\u56fd\u6700\u5927\u7684React\u4f1a\u8bae\u4e0a\u6709\u66f4\u591a\u4fe1\u606f\u3002\u73b0\u5728\u5728\u65e0\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u4e00\u6574\u5929\u7684\u6f14\u8bb2\uff01\u5b8c\u5168\u6237\u5916\uff0c\u5b8c\u5168\u901a\u98ce\uff0c\u5b8c\u5168\u6d4b\u8bd5\u3002\u53cd\u5e94\u8fd0\u52a8\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\n\u7528Nivo\u5236\u4f5c\u7684\u56fe\u8868\u3002\u7531Netlify\u4e3b\u6301\u3002\u95ee\u9898\uff1f\u53d1\u73b0\u4e00\u53ea\u866b\u5b50\u4e86\u5417\uff1f\u7559\u4e0b\u4e00\u4e2a\u95ee\u9898\u3002\u52a0\u5165\u6211\u4eec\u7684\u4e0d\u548c\u8c10\u3002", "note_en": "\u00ab\u00a0Other Tools Catal\u00e0   \u010cesky   Deutsch   English  Espa\u00f1ol   \u0641\u0627\u0631\u0633\u06cc   Fran\u00e7ais   Galego   Hindi   Italiano   Portugu\u00eas   \u0420\u0443\u0441\u0441\u043a\u0438\u0439   \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430   Svenska   T\u00fcrk\u00e7e   Indonesia   \u7b80\u4f53\u4e2d\u6587   \u6b63\u9ad4\u4e2d\u6587   \u65e5\u672c\u8a9e   Polski   \ud55c\uad6d\uc5b4   Nederlands   Rom\u00e2n\u0103   Magyar\n   Opinions\u00a0\u00bb\n Highlighting blogs, podcasts, and sites was a good start, but this year we decided to go one step furtherand actually feature the people who make up the JavaScript community!\n    We asked members of the JavaScript community to share their \u201cpick of the year\u201d\n In addition to esbuild and swc, fantastic tools pushing forward the ecosystem, I&#39;m enjoying Vite. It has a delightful DX, and it&#39;s rich in features.\n We asked members of the JavaScript community to share their \u201cpick of the year\u201d\n  People you read, follow, or just want to highlight for their work (freeform field, comma-separated names).\n Join Lee Robinson, Jenn Creighton, Wes Bos, &amp; more at the largest React conference in the US. Now with a full day of talks on Serverless! Fully-outdoors, fully-vaxxed, fully-tested. Reactathon.com\n Charts built with  Nivo.  Hosted by  Netlify.  Questions? Found a bug?  Leave an issue.  Join us on  Discord.", "posttime": "2022-02-22 03:48:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,state", "title": "JavaScript\u7684\u72b6\u6001\uff1a2021", "title_en": "The State of JavaScript: 2021", "transed": 1, "url": "https://2021.stateofjs.com/en-us/resources/", "via": "", "real_tags": ["java", "state"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074549, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b83&#39\uff1b\u590d\u6742\u7684Unix init\u7cfb\u7edf\u901a\u5e38\u4e5f\u662f\u67d0\u79cd\u7a0b\u5ea6\u7684\u670d\u52a1\u7ba1\u7406\u7cfb\u7edf\uff1b\u6700\u660e\u663e\u7684\u4f8b\u5b50\u662fLinux&#39\uff1b\u7cfb\u7edf\u3002\u7136\u800c\uff0c\u8bb8\u591a\u4eba\u89c2\u5bdf\u5230\u5b83\u6ca1\u6709&#39\uff1b\u4e0d\u5fc5\u5982\u6b64\uff0c\u5e76\u4e3a\u6b64\u5efa\u7acb\u4e86\u72ec\u7acb\u7684\u7cfb\u7edf\uff0c\u5982D.J.Bernstein\u548c#39\uff1b\u8fd9\u662fdaemontools\u3002\u7531\u4e8e\u670d\u52a1\u7ba1\u7406\uff08\u6216\u7f3a\u4e4f\u670d\u52a1\u7ba1\u7406\uff09\u5df2\u6210\u4e3aUnix init\u7cfb\u7edf\u7684\u91cd\u8981\u9886\u57df\u4e4b\u4e00\uff0c\u60a8\u53ef\u80fd\u4f1a\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u4eec\u4f1a&#39\uff1b\u6211\u662f\u6765\u627f\u62c5\u8fd9\u4e2a\u8d23\u4efb\u7684\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u539f\u56e0\u662f\u5386\u53f2\uff0c\u5c3d\u7ba1\u4e5f\u6709\u4e00\u4e9b\u5b9e\u7528\u4e3b\u4e49\u7684\u539f\u56e0\u3002\n\uff08\u6211\u8fd8\u8ba4\u4e3a\u8fd9\u662f\u4eba\u4eec\u60f3\u8981\u7684\u3002\u7cfb\u7edf\u7ba1\u7406\u5458\u901a\u5e38\u4e0d\u60f3\u5904\u7406\u521d\u59cb\u7cfb\u7edf\uff0c\u7136\u540e\u662f\u5355\u72ec\u7684\u670d\u52a1\u76d1\u7763\u7cfb\u7edf\uff1b\u4ed6\u4eec\u60f3\u5904\u7406\u4e00\u4ef6\u4e8b\u3002\uff09\n\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0cUnix\u6ca1\u6709&#39\uff1b\u9664\u4e86\u521d\u59cb\u5316\u91cd\u65b0\u542f\u52a8getty\u8fdb\u7a0b\u4e4b\u5916\uff0c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u7c7b\u578b\u7684\u670d\u52a1\u7ba1\u7406\u3002\u6240\u6709\u670d\u52a1\u90fd\u662f\u4f5c\u4e3a\u542f\u52a8\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u542f\u52a8\u7684\uff0c\u542f\u52a8\u65f6\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u811a\u672c\uff0c\u5728BSD Unix\u4e2d\u6709\u70b9\u8fc7\u65f6\u3002\u5982\u679c\u9700\u8981\u68c0\u67e5\u670d\u52a1\u72b6\u6001\uff0c\u53ef\u4ee5\u8fd0\u884cps\uff1b\u5982\u679c\u9700\u8981\u91cd\u65b0\u542f\u52a8\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528kill\u7ec8\u6b62\u670d\u52a1\uff0c\u5e76\u624b\u52a8\u542f\u52a8\u65b0\u7248\u672c\u3002System V init\u7cfb\u7edf\u901a\u8fc7\u521b\u5efa\u811a\u672c\uff0c\u5c06\u5982\u4f55\u542f\u52a8\u3001\u505c\u6b62\u4ee5\u53ca\u6709\u65f6\u68c0\u67e5\u6bcf\u4e2a\u670d\u52a1\u7684\u72b6\u6001\u7684\u77e5\u8bc6\u5c01\u88c5\u8d77\u6765\uff0c\u4ece\u800c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63a8\u8fdb\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u5b83\u6ca1\u6709\u5bf9\u670d\u52a1\u672c\u8eab\u8fdb\u884c\u7ba1\u7406\uff1b\u5b83\u4ecd\u7136\u53ea\u662f\u542f\u52a8\uff08\u5e76\u5173\u95ed\uff09\u7cfb\u7edf\u3002\u6ce8\u610f\u5230\u670d\u52a1&#39\uff1bs\u7684\u5b88\u62a4\u8fdb\u7a0b\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u91cd\u65b0\u542f\u52a8\u5b83\u4eec\u53d6\u51b3\u4e8e\u4f60\u3002\n\uff08\u5728SystemV init\u4e2d\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u4f7f\u7528/etc/inittab\u91cd\u65b0\u542f\u52a8\u5b88\u62a4\u8fdb\u7a0b\uff0c\u4f46\u6574\u4e2ainit\u7cfb\u7edf\u73af\u5883\u4e0d\u652f\u6301\u8fd9\u6837\u505a\u3002\uff09\n\u5728\u5386\u53f2\u4e0a\uff0c\u542f\u52a8\u670d\u52a1\u88ab\u8ba4\u4e3a\u4e0e\u542f\u52a8Unix\u7684\u8fc7\u7a0b\u4ea4\u7ec7\u5728\u4e00\u8d77\u3002\u4eceSun\u63a8\u51fa&#34\uff1b\u65e0\u76d8&#34\uff1b\u57fa\u4e8eNFS\u7684\u5de5\u4f5c\u7ad9\u548c\u5176\u4ed6\u4eba\u590d\u5236\u4e86\u5b83\u4eec\uff0c\u5728\u5b89\u88c5/usr\u4e4b\u524d\uff0c\u9700\u8981\u542f\u52a8\u5e76\u8fd0\u884c\u4e00\u4e9b\u5b88\u62a4\u7a0b\u5e8f\u3002\u4f60\u4e0d\u80fd&#39\uff1bt\u63a8\u8fdf\u542f\u52a8\u6240\u6709\u670d\u52a1\uff0c\u76f4\u5230\u7cfb\u7edf\u542f\u52a8&#39\uff1b\u5411\u4e0a&#39\uff1b\uff0c\u4f46\u540c\u65f6\u4f60\u4e0d\u80fd&#39\uff1bI don\u2019\u4e0d\u8981\u4e00\u4e0b\u5b50\u542f\u52a8\u6240\u6709\u7684\u670d\u52a1\uff0c\u4e5f\u4e0d\u8981\u7528\u5b83\u6765\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e2d\u7684\u8bb8\u591a\u90fd\u9700\u8981\u5b89\u88c5\u6587\u4ef6\u7cfb\u7edf\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u4ece20\u4e16\u7eaa80\u5e74\u4ee3\u4e2d\u671f\u5f00\u59cb\uff0c\u542f\u52a8\u5b88\u62a4\u7a0b\u5e8f\u548c\u542f\u52a8\u7cfb\u7edf\u7684\u8fd9\u79cd\u7ea0\u7ed3\u4f7f\u5f97\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u542f\u52a8\u811a\u672c\u4e2d\u6210\u4e3a\u4e00\u79cd\u81ea\u7136\u7684\u65b9\u5f0f\u3002\u4e00\u4e2a\u5927\u80c6\u7684Unix\u4f9b\u5e94\u5546\u672c\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u72ec\u7acb\u7684\u670d\u52a1\u7cfb\u7edf\uff08Sun\u6700\u7ec8\u6709\u70b9\u50cfdidin SMF\uff09\uff0c\u4f46\u5982\u679c\u5b83\u8981\u5904\u7406\u7cfb\u7edf\u4e0a\u7684\u6240\u6709\u5b88\u62a4\u8fdb\u7a0b\u548c\u670d\u52a1\uff0c\u5b83\u4ecd\u7136\u4f1a\u6df1\u6df1\u5730\u7ea0\u7f20\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u4ece\u800c\u7ea0\u7f20\u5728\u521d\u59cb\u5316\u7cfb\u7edf\u4e2d\u3002\n\uff08\u7b2c\u4e09\u65b9\u7cfb\u7edf\uff0c\u5982djb\u548c#s daemontools\uff0c\u901a\u5e38\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u88ab\u8bbe\u60f3\u4e3a\u5904\u7406\u6240\u6709\u7684\u5b88\u62a4\u7a0b\u5e8f\u548c\u670d\u52a1\uff1b\u5b83\u4eec\u53ea\u4f1a\u5904\u7406\u5176\u4e2d\u4e00\u4e9b\uff0c\u5982djb\u548c#s\u7684\u5176\u4ed6\u7a0b\u5e8f\uff0c\u5982qmail\u548ctinydns\u3002\uff09\n\u5b9e\u9645\u4e0a\uff0c20\u4e16\u7eaa90\u5e74\u4ee3\u7684Unix\u5382\u5546\u5e76\u4e0d\u5927\u80c6\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u5fd9\u4e8e\u76f8\u4e92\u4e89\u6597\uff08\u89c1OSF/1\u4e0eSystemV release 4\uff09\uff0c\u5e76\u88ab\u5ec9\u4ef7\u5546\u54c1\u7684\u5927\u884c\u5176\u9053\u538b\u5f97\u5598\u4e0d\u8fc7\u6c14\u6765\u3002\u81ea\u7531\u7edf\u4e00\u4f53\u4e5f\u6ca1\u6709\u66f4\u597d\u7684\u8868\u73b0\uff1b\u514d\u8d39\u7684BSD\u4eec\u5fd9\u7740\u5fe0\u5b9e\u4e8eUCB BSD 4\u7684\u7eaf\u5ea6\u3002x\u3001 LinuxWashard\u6b63\u5728\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u4e00\u4e2aUnix\uff08\u4e5f\u8bb8\u7531\u4e8e\u5f53\u65f6\u7684\u4e89\u8bba\uff0c\u4ed6\u4e0d\u60f3\u504f\u79bb\u5f53\u65f6\u7684\u5404\u79cd\u7248\u672c\uff09\u3002\n\uff08\u8fd9\u662f\u4e00\u4e2a\u6709\u70b9\u66b4\u8e81\u7684\u60c5\u51b5\u603b\u7ed3\uff0c\u56e0\u4e3aFreeBSD\u5728\u5b9e\u8df5\u4e2d\u786e\u5b9e\u5bf9\u5176init\u8bbe\u7f6e\u8fdb\u884c\u4e86\u91cd\u5927\u66f4\u6539\u3002\u4f46\u65e0\u8bba\u51fa\u4e8e\u4f55\u79cd\u539f\u56e0\uff0c\u5b83\u4eec\u90fd\u6ca1\u6709\u5927\u5e45\u66f4\u6539\u4e3a\u5355\u72ec\u7684\u670d\u52a1\u7ba1\u7406\u5668\u8bbe\u7f6e\uff0c\u5c3d\u7ba1daemontools\u548c\u5176\u4ed6\u5b9e\u73b0\u8868\u660e\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u80af\u5b9a\u5b58\u5728\u4e8e\u5f00\u6e90Unixcommunity.Po\u4e2d\u3002\uff09\u4e00\u4e2a\u53ef\u80fd\u7684\u95ee\u9898\u662fSolaris SMF\u6ca1\u6709&#39\uff1b\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7cfb\u7edf\u3002\uff09\nPS\uff1a\u51e0\u5e74\u524d\uff0c\u6211\u5728\u300ainit\u6700\u7ec8\u5982\u4f55\u6210\u4e3aUnix\u300b\u4e00\u4e66\u4e2d\u5199\u4e86\u4e00\u4e2a\u4e0e\u6b64\u5386\u53f2\u7a0d\u6709\u4e0d\u540c\u7684\u7248\u672c&#39\uff1bs\u5b88\u62a4\u8fdb\u7a0b\u7ba1\u7406\u5668\u3002\u91cd\u8bfb\u4e00\u904d\uff0c\u6211\u53d1\u73b0\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u5fd8\u8bb0\u4e86\u5728BSD Unix\u4e2d\u6dfb\u52a0\u7f51\u7edc\u662f\u5982\u4f55\u4f7f\u7cfb\u7edf\u542f\u52a8\u548c\u5b88\u62a4\u8fdb\u7a0b\u542f\u52a8\u590d\u6742\u5316\u7684\uff0c\u56e0\u4e3a\u73b0\u5728\u60a8\u9700\u8981\u5728\u4e00\u4e9b\u5b88\u62a4\u8fdb\u7a0b\u542f\u52a8\u4e4b\u524d\u914d\u7f6e\u7f51\u7edc\u3002", "note_en": "It&#39;s common for sophisticated Unix init systems to also be some degreeof service management systems; the most obvious example is Linux&#39;ssystemd. However, many people have observed that it doesn&#39;t haveto be this way and have created separate systems for this, such as D. J. Bernstein&#39;s daemontools.Since  service management (or lack of it) has become one of theimportant areas of Unix init systems, youmight wonder why they&#39;ve come to have this responsibility. A significantpart of the reason is history, although  there are also pragmaticreasons.\n (I also think that  it&#39;s what people want. Systemadministratorys mostly don&#39;t want to have to deal with an init systemand then a separate service supervision system; they want to deal withone thing.)\n Specifically, for a long time Unix didn&#39;t have any sort of servicemanagement as such, beyond  init restarting getty processes. All services were simply started as part ofthe boot process in what started as  a very simple script and grewonly somewhat from there in BSD Unixes. If you needed to check thestatus of services, you ran  ps; if you needed to restart a service,you terminated it with  kill and started the new version by hand.The System V init system moved this forward somewhat by creatingscripts that encapsulated the knowledge of how to start, stop, andsometimes check the status of each service, but it did nothing tomanage the services as such; it still merely booted (and shut down)the system. Noticing that a service&#39;s daemons had died and startingthem again was up to you.\n (In System V init you could theoretically use /etc/inittab forrestarting daemons, but the overall init system environment didn&#39;tsupport doing it this way.)\n Historically, starting services was considered intertwined with theprocess of booting Unix. Starting from when Sun introduced &#34;diskless&#34;NFS based workstations and other people copied them, some daemonsneeded to be started and running before  /usr could be mounted.You couldn&#39;t defer starting all services until the system was &#39;up&#39;,but at the same time you couldn&#39;t just start all services in a bunchand be done with it, because many of them required filesystem mountsand the like. This entanglement of starting daemons and booting thesystem made putting everything in boot scripts the natural wayforward from the mid 1980s onward. A daring Unix vendor could haveintroduced a separate services system (Sun eventually sort of didin  SMF),but it still would have been deeply entwined in the boot processand thus the init system if it was going to handle all daemons andservices on the system.\n (Third party systems such as djb&#39;s daemontools generally had a simplerjob because they weren&#39;t envisioned as handling all daemons and services;they were just going to handle some of them, such as djb&#39;s other programssuch as qmail and tinydns.)\n In practice, Unix vendors in the 1990s were not daring. Instead,they were busy fighting with each other (see OSF/1 versus SystemV release 4) and getting run over by  the march of the cheap. The free Unixes did no better; the free BSDswere busy being faithful to the purity of UCB BSD 4.x, and Linux washard at work building  a Unix from scratch (andperhaps was not inclined to depart from various versions of what was&#39;Unix&#39; at the time as a result of the &#39;Linux is not Unix&#39; controversiesof the time).\n (This is a somewhat grumpy summary of the situation, since the freeBSDs did make major changes in their init setups in practice. Butfor whatever reason, none of them changed drastically into a separateservices manager setup, although daemontools and other implementationsshows that the idea was definitely around in the open source Unixcommunity. Possibly one problem is that  Solaris SMF wasn&#39;t a goodsystem.)\n PS: I wrote up a somewhat different version of this historysome years ago in  How init wound up as Unix&#39;s daemon manager. Rereading that, I see that in writing thisentry I forgot how the addition of networking in BSD Unix complicatedsystem boot and daemon startup, because now you needed the networkconfigured before some daemons got started.", "posttime": "2022-02-22 03:46:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5386\u53f2,sort,\u670d\u52a1", "title": "Unix\u4e2d\u670d\u52a1\u7ba1\u7406\u7684\u5386\u53f2\uff08\u6392\u5e8f\uff09", "title_en": "The history (sort of) of service management in Unix", "transed": 1, "url": "https://utcc.utoronto.ca/~cks/space/blog/unix/ServiceManagementHistory", "via": "", "real_tags": ["\u5386\u53f2", "sort", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074548, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d1d\u62c9\u00b7\u4f0a\u4e3d\u838e\u767d\u00b7\u8003\u514b\u65af\uff08Beulah Elizabeth Cox\u201977\uff09\u662f\u4e00\u4f4d\u6280\u827a\u7cbe\u6e5b\u7684\u5c0f\u63d0\u7434\u5bb6\uff0c30\u5e74\u6765\u4e00\u76f4\u662f\u7ebd\u7ea6\u5e02\u53e4\u5178\u97f3\u4e50\u754c\u7684\u4e00\u5458\u3002\n\u8003\u514b\u65af\u66fe\u4e0e\u8331\u8389\u4e9a\u5b66\u9662\u7684\u4e00\u4f4d\u6559\u6388\u5b66\u4e60\uff0c\u62e5\u6709\u4e00\u957f\u4e32\u72ec\u594f\u3001\u5ba4\u5185\u4e50\u548c\u7ba1\u5f26\u4e50\u4f5c\u54c1\uff0c\u5305\u62ec\u5361\u5185\u57fa\u97f3\u4e50\u5385\u3001\u6797\u80af\u4e2d\u5fc3\u4ee5\u53ca\u5728\u5df4\u9ece\u548c\u4f26\u6566\u7684\u72ec\u594f\u8868\u6f14\u3002\u5979\u66fe\u5728\u767e\u8001\u6c47\u6f14\u51fa\uff0c\u5305\u62ec\u300a\u60b2\u60e8\u4e16\u754c\u300b\u548c\u300a\u897f\u8d21\u5c0f\u59d0\u300b\u4ee5\u53ca\u300a\u6211\u7231\u4f60\u3002\u4f60\u5f88\u5b8c\u7f8e\u3002\u73b0\u5728\u6539\u53d8\u5427\u300b\u4e2d\u7684\u821e\u53f0\u5c0f\u63d0\u7434\u624b\n\u5979\u662f\u5b89\u5e03\u7f57\u897f\u4e9a\u4e09\u91cd\u594f\uff08Ambrosia Trio\uff09\u7684\u521b\u59cb\u4eba\u548c\u9886\u5bfc\u8005\u3002\u5b89\u5e03\u7f57\u897f\u4e9a\u4e09\u91cd\u594f\u662f\u4e00\u4e2a\u4e13\u4e1a\u4e50\u56e2\uff0c\u5728\u5927\u6d41\u884c\u95f4\u6b47\u4e4b\u524d\uff0c\u5b9a\u671f\u5728\u7ebd\u7ea6\u5730\u533a\u53ca\u5176\u4ed6\u5730\u533a\u4e3e\u529e\u97f3\u4e50\u4f1a\u3002\n\u5728\u6210\u4e3a\u827a\u672f\u4e13\u4e1a\u4eba\u58eb\u4e4b\u524d\u7684\u51e0\u5e74\u91cc\uff0c\u6bd4\u62c9\u00b7\u4f0a\u4e3d\u838e\u767d\u00b7\u8003\u514b\u65af\uff08Beulah Elizabeth Cox\uff09\u662f\u5a01\u5ec9\u738b\u5b50\u5b66\u9662\uff08William&amp\uff1b\u739b\u4e3d\u3002\n\u5728\u5979\u804c\u4e1a\u751f\u6daf\u7684\u65e9\u671f\uff0c\u5a01\u5ec9\u592b\u5987\uff1b\u739b\u4e3d\u00b7\u8003\u514b\u65af\uff08Mary student\uff0cCox\uff09\u63d0\u4ea4\u4e86\u4e00\u4efd\u7269\u7406\u8003\u8bd5\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u79d1\u5b66\u754c\u6700\u8457\u540d\u7684\u9519\u8bef\u7b54\u6848\u4e4b\u4e00\u3002\n\u201c\u4f60\u77e5\u9053\u8fd9\u662f\u591a\u4e45\u4ee5\u524d\u7684\u4e8b\u4e86\u5417\uff1f\u201d\u8003\u514b\u65af\u95ee\uff0c\u4ec0\u4e48\u65f6\u5019\u6709\u4eba\u6253\u7535\u8bdd\u95ee\u5979\u662f\u5426\u662f\u66fe\u7ecf\u4e0e\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc\u901a\u4fe1\u7684\u8d1d\u62c9\u00b7\u4f0a\u4e3d\u838e\u767d\u00b7\u8003\u514b\u65af\u3002\n\u90a3\u662f1975\u5e748\u6708\u2014\u201445\u5e74\u524d\u3002\u4e00\u4e9b\u7ec6\u8282\u5728\u8fc7\u53bb\u7684\u5c81\u6708\u4e2d\u6d88\u5931\u4e86\uff0c\u4f46\u8fd9\u91cc\u662f\u8981\u70b9\uff1a\u8003\u514b\u65af\u770b\u5230\u5979\u5728\u4e00\u9053\u6d89\u53ca\u5e26\u7535\u7403\u4f53\u548c\u9ad8\u65af\u5b9a\u5f8b\u7684\u7269\u7406\u8003\u8bd5\u9898\u4e0a\u4e22\u4e86\u5206\u3002\u5979\u7684\u56de\u7b54\u4f3c\u4e4e\u4e0e\u5979\u5728\u300a\u8d39\u66fc\u300b\u4e2d\u8bfb\u5230\u7684\u89e3\u91ca\u4e00\u81f4\u3002\n\u4f46\u5979\u7684\u56de\u7b54\u88ab\u6807\u9519\u4e86\u3002\u5979\u611f\u5230\u56f0\u60d1\uff0c\u4e8e\u662f\u5199\u4fe1\u7ed9\u8d39\u66fc\uff0c\u4ed6\u83b7\u5f97\u4e86\u5305\u62ec1965\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\u5728\u5185\u7684\u591a\u9879\u79d1\u5b66\u8363\u8a89\u3002\u5979\u57281975\u5e748\u670822\u65e5\u7684\u4fe1\u4e2d\u5199\u9053\uff1a\n\u6211\u6700\u8fd1\u5728\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u5a01\u5ec9\u548c\u739b\u4e3d\u5b66\u9662\u4fee\u4e86\u4e00\u95e8\u57fa\u7840\u7269\u7406\u8bfe\u7a0b\u3002\u4e00\u9053\u5173\u4e8e\u9ad8\u65af\u7684\u8bd5\u9898&#39\uff1b\u5b9a\u5f8b\u548c\u5bfc\u4f53\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7a7a\u5fc3\u5bfc\u4f53\u662f\u5426\u4f1a\u5c4f\u853d\u5bfc\u4f53\u5916\u90e8\u7684\u533a\u57df\uff0c\u4f7f\u5176\u514d\u53d7\u653e\u7f6e\u5728\u7a7a\u5fc3\u5bfc\u4f53\u5185\u90e8\u4f46\u4e0d\u4e0e\u4e4b\u63a5\u89e6\u7684\u7535\u8377\u7684\u5f71\u54cd\uff1f\n\u6211\u8bfb\u4e86\u8d39\u66fc\u7269\u7406\u5b66\u8bb2\u5ea7\u7b2c\u4e8c\u5377\u7b2c\u4e94\u7ae0\uff0c\u9664\u4e86\u6700\u540e\u4e00\u6bb5\u7684\u4e0b\u4e00\u6bb5\uff0c\u6211\u7406\u89e3\u4e86\u6240\u6709\u5185\u5bb9\u3002\u5728\u6700\u540e\u4e00\u6bb5\u4e2d\uff0c\u4f60\u8bf4\uff1a\u201c\u2026\u2026\u95ed\u5408\u5bfc\u4f53\u5185\u90e8\u7535\u8377\u7684\u9759\u6001\u5206\u5e03\u4e0d\u80fd\u5728\u5916\u90e8\u4ea7\u751f\u4efb\u4f55\u573a\u3002\u201d\u8fd9\u4ee4\u4eba\u56f0\u60d1\uff0c\u56e0\u4e3a\u5b83\u4f3c\u4e4e\u4e0e\u4f60\u4e4b\u524d\u7684\u6240\u6709\u9648\u8ff0\u76f8\u77db\u76fe\u3002\u6211\u7684\u5bfc\u5e08\u5411\u6211\u5c55\u793a\u4e86\u5982\u4f55\u7b80\u5355\u5730\u5e94\u7528\u9ad8\u65af&#39\uff1b\u5b9a\u5f8b\u8868\u660e\uff0c\u5bfc\u4f53\u5916\u7684E\u77e2\u91cf\u4e0d\u4e3a\u96f6\u3002\n\u4f60\u80fd\u89e3\u91ca\u4e00\u4e0b\u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u5417\uff1f\u6211\u73b0\u5728\u5f88\u56f0\u60d1\uff0c\u975e\u5e38\u611f\u8c22\u60a8\u7684\u56de\u590d\u3002\n\u8003\u514b\u65af\u5728\u4e00\u7bc7\u540e\u8bb0\u4e2d\u544a\u8bc9\u8d39\u66fc\uff0c\u9664\u4e86\u6ee1\u8db3\u79d1\u5b66\u597d\u5947\u5fc3\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u5229\u5bb3\u5173\u7cfb\uff1a\nPS\uff1a\u6211\u5fc5\u987b\u627f\u8ba4\u6211\u5199\u4fe1\u7ed9\u4f60\u7684\u52a8\u673a\u662f\u4e0d\u6b63\u5f53\u7684\uff0c\u56e0\u4e3a\u5728\u8003\u8bd5\u4e2d\uff0c\u6211\u7528\u4f60\u7684\u4e66\u7ed9\u51fa\u7684\u89e3\u91ca\u6765\u56de\u7b54\u3002\u7136\u800c\uff0c\u6211\u7684\u8001\u5e08\u6ca1\u6709\u7ed9\u6211\u4efb\u4f55\u5206\u6570\uff0c\u751a\u81f3\u5728\u6211\u627e\u5230\u4f60\u7684\u4e66\u6765\u9a8c\u8bc1\u6211\u7684\u7b54\u6848\u4e4b\u540e\u3002\u5982\u679c\u4f60\u80fd\u4e3a\u6211\u6f84\u6e05\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u4e0d\u80dc\u611f\u6fc0\u3002\u63d0\u524d\u8c22\u8c22\u4f60\u3002\n\u4f60\u7684\u5bfc\u5e08\u6ca1\u6709\u7ed9\u4f60\u4efb\u4f55\u5206\u6570\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u4f60\u7684\u7b54\u6848\u662f\u9519\u8bef\u7684\uff0c\u6b63\u5982\u4ed6\u7528\u9ad8\u65af\u5b9a\u5f8b\u8bc1\u660e\u7684\u90a3\u6837\u3002\u5728\u79d1\u5b66\u4e0a\uff0c\u4f60\u5e94\u8be5\u76f8\u4fe1\u903b\u8f91\u548c\u8bba\u636e\uff0c\u800c\u4e0d\u662f\u6743\u5a01\u3002\u4f60\u4e5f\u6b63\u786e\u5730\u9605\u8bfb\u5e76\u7406\u89e3\u4e86\u8fd9\u672c\u4e66\u3002\u6211\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u6240\u4ee5\u8fd9\u672c\u4e66\u662f\u9519\u7684\u3002\u6211\u53ef\u80fd\u60f3\u7684\u662f\u4e00\u4e2a\u63a5\u5730\u7684\u5bfc\u7535\u7403\uff0c\u6216\u8005\u8bf4\uff0c\u5728\u5185\u90e8\u4e0d\u540c\u7684\u5730\u65b9\u79fb\u52a8\u7535\u8377\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u7684\u4e1c\u897f\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u600e\u4e48\u505a\u5230\u7684\uff0c\u4f46\u6211\u641e\u9519\u4e86\u3002\u4f60\u4e5f\u56e0\u4e3a\u76f8\u4fe1\u6211\u800c\u50bb\u4e86\u3002\n\u8003\u514b\u65af\u00b7\u8d39\u66fc\u7684\u4fe1\u4ef6\u867d\u7136\u7b80\u77ed\uff0c\u5374\u5f15\u8d77\u4e86\u4eba\u4eec\u7684\u6ce8\u610f\uff0c\u5c24\u5176\u662f\u5728\u4e92\u8054\u7f51\u65f6\u4ee3\uff1a\u8c37\u6b4c\u641c\u7d22\u4f1a\u4ea7\u751f\u4e00\u9875\u53c8\u4e00\u9875\u7684\u70b9\u51fb\u91cf\u3002\u5b83\u5728\u5370\u5237\u54c1\u4e2d\u4e5f\u88ab\u6c38\u5782\u4e0d\u673d\u3002\u9996\u5148\uff0c\u5b8c\u5168\u7684\u4ea4\u6d41\u5305\u542b\u5728\u5b8c\u5168\u5408\u7406\u7684\u504f\u79bb\u5e38\u89c4\u7684\u5730\u65b9\uff1a\u7406\u67e5\u5fb7\u00b7P\u00b7\u8d39\u66fc\u7684\u4fe1\u3002\u57fa\u666e\u00b7\u7d22\u6069\uff08Kip Thorne\uff09\u5728\u300a\u8d39\u66fc\u7269\u7406\u5b66\u8bb2\u5ea7\u300b\uff08Feynman Teaches on Physics\uff09\u7684\u591a\u4e2a\u540e\u7eed\u7248\u672c\u7684\u5e8f\u8a00\u4e2d\u4e5f\u63d0\u5230\u4e86\u8003\u514b\u65af\u00b7\u8d39\u66fc\uff08Cox-Feynman\uff09\u7684\u4e66\u4fe1\uff0c\u8fd9\u4e9b\u4e66\u4fe1\u90fd\u662f\u7ecf\u8fc7\u4fee\u6539\u7684\u7248\u672c\uff0c\u6307\u51fa\u7403\u4f53\u662f\u63a5\u5730\u7684\u3002\n\u7d22\u6069\u662f\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u8d39\u66fc\u7406\u8bba\u7269\u7406\u8363\u8a89\u6559\u6388\uff0c2017\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\u83b7\u5f97\u8005\uff0c\u4ed6\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u4ed6\u8ba4\u4e3a\u8003\u514b\u65af-\u8d39\u66fc\u7684\u4fe1\u4ef6\u5f15\u8d77\u4e86\u5171\u9e23\uff0c\u5373\u4f7f\u8fd9\u4e9b\u5e74\u8fc7\u53bb\u4e86\uff1a\u201c\u8d39\u66fc\u76f4\u622a\u4e86\u5f53\u5730\u544a\u8bc9\u6211\u4eec\uff0c\u4e0d\u8981\u4ee5\u6743\u5a01\u4e3a\u57fa\u7840\u63a5\u53d7\u4efb\u4f55\u4e1c\u897f\u2014\u2014\u5373\u4f7f\u6743\u5a01\u662f\u8d39\u66fc\u672c\u4eba\u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u800c\u975e\u5e38\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u6211\u8ba4\u4e3a\u5b83\u80fd\u5f15\u8d77\u4eba\u4eec\u5bf9\u6279\u5224\u6027\u601d\u7ef4\u80fd\u529b\u7684\u5171\u9e23\u3002\u201d\n\u751a\u81f3\u5728\u83b7\u5f97\u8bfa\u8d1d\u5c14\u5956\u4e4b\u524d\uff0c\u8d39\u66fc\u5c31\u5df2\u7ecf\u662f\u7269\u7406\u5b66\u754c\u7684\u540d\u4eba\u4e86\u3002\u4f0a\u5766\u00b7\u9a6c\u79d1\u7ef4\u83281962\u5e74\u6bd5\u4e1a\u4e8e\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u3002\u4ed6\u8bf4\uff0c\u5728\u4ed6\u4efb\u804c\u671f\u95f4\uff0c\u8d39\u66fc\u6559\u4e86\u5927\u4e00\u548c\u5927\u4e8c\u7269\u7406\u4e24\u5e74\u3002\n\u9a6c\u79d1\u7ef4\u8328\u8bf4\uff1a\u201c\u4ed6\u4eec\u5728\u6f14\u8bb2\u5385\u91cc\u4e3a\u6ce8\u518c\u5b66\u751f\u9884\u7559\u4e86\u5ea7\u4f4d\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u7269\u7406\u9ad8\u5e74\u7ea7\u5b66\u751f\u548c\u7814\u7a76\u751f\u90fd\u60f3\u542c\u542c\u4ed6\u8981\u8bf4\u4ec0\u4e48\u3002\u201d\u3002\u201c\u65e0\u8bba\u5982\u4f55\uff0c\u4e24\u5e74\u6765\uff0c\u8d39\u66fc\u6bcf\u5468\u4e00\u3001\u5468\u4e09\u548c\u5468\u4e94\u90fd\u4f1a\u6765\uff0c\u8c08\u4ed6\u60f3\u8c08\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u201d\n\u9a6c\u79d1\u7ef4\u8328\u8bf4\uff0c\u7814\u7a76\u751f\u4eec\u4e3a\u6bcf\u8282\u8bfe\u8bbe\u7f6e\u4e86\u4e00\u53f0\u5f55\u97f3\u673a\uff0c\u5e76\u4e3a\u8d39\u66fc\u4f7f\u7528\u7684\u6bcf\u4e00\u5757\u9ed1\u677f\u62cd\u7167\u3002\u8fd9\u4e9b\u539f\u6750\u6599\u88ab\u63d0\u70bc\u6210\u8d39\u66fc\u7684\u8bb2\u7a3f\u3002\u8fd9\u4e9b\u8bb2\u5ea7\u7684\u65e9\u671f\u8fed\u4ee3\u5305\u542b\u4e86\u52d8\u8bef\u8868\uff0c\u8003\u8651\u5230\u8d39\u66fc\u5927\u91cf\u5236\u4f5c\u7684\u6750\u6599\u548c\u79cd\u7c7b\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5a01\u5ec9\u5927\u5b66\u7269\u7406\u5b66\u540d\u8a89\u6559\u6388\u6c49\u65af\u00b7\u51af\u00b7\u62dc\u5c14\uff1bMary\u8bf4Feynman\u52d8\u8bef\u8868\u662f\u201c\u5bb6\u5ead\u624b\u5de5\u4e1a\u7684\u4e00\u90e8\u5206\u201d\uff0cCox-Feynman\u4fe1\u4ef6\u7ed9\u5927\u90e8\u5206\u66f4\u6b63\u3001\u68c0\u67e5\u548c\u786e\u8ba4\u589e\u52a0\u4e86\u4e00\u79cd\u975e\u5e38\u4eba\u6027\u5316\u7684\u611f\u89c9\u3002\n\u51e0\u5e74\u524d\uff0c\u9a6c\u79d1\u7ef4\u8328\u751a\u81f3\u8bd5\u56fe\u8ba9\u8003\u514b\u65af\u672c\u4eba\u5728\u8d39\u66fc\u767e\u5468\u5e74\u7eaa\u5ff5\u4e0a\u5ba2\u4e32\u4eae\u76f8\uff0c\u4f46\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\uff0c\u8fd9\u4e00\u8ba1\u5212\u6ca1\u6709\u6210\u529f\u3002\n\u8003\u514b\u65af-\u8d39\u66fc\u4ea4\u6613\u6240\uff08Cox-Feynman exchange\uff09\u7684\u6587\u672c\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u4e22\u5931\uff0c\u8fd9\u4e9b\u6587\u672c\u5728\u7f51\u4e0a\u548c\u5370\u5237\u54c1\u4e2d\u4e00\u76f4\u5b58\u5728\u3002\u8d77\u6e90\u7684\u6545\u4e8b\u66f4\u96be\u786e\u5b9a\u3002\u53ef\u4ee5\u7406\u89e3\u7684\u662f\uff0c\u8003\u514b\u65af\u6ca1\u6709\u633d\u6551\u8003\u8bd5\uff0c45\u5e74\u540e\uff0c\u4ed6\u56de\u5fc6\u4e0d\u8d77\u9ad8\u65af\u5b9a\u5f8b\u7684\u95ee\u9898\u3002\u5979\u4e5f\u5728\u8001\u5e08\u7684\u540d\u5b57\u4e0a\u753b\u4e86\u4e00\u4e2a\u7a7a\u767d\u3002\n\u5bf9\u5a01\u5ec9\u592b\u5987\u7684\u547c\u5401\uff1b\u739b\u4e3d\u00b7\u8428\u8389\u00b7\u9a6c\u5207\u6d1b\u5e26\u6765\u4e86\u7ed3\u679c\u3002Marchello\u201c\u8ba9\u6211\u5185\u5fc3\u7684Nancy Drew\u53c2\u4e0e\u8fdb\u6765\u201d\uff0c\u6f5c\u5165\u4e86\u7f29\u5fae\u80f6\u7247\uff0c\u5e76\u7ed9\u51fa\u4e86\u8bb8\u591a\u53ef\u80fd\u7684\u8bb2\u5e08\u540d\u5b57\u3002\u5979\u8fd8\u53d1\u73b0\u51af\u00b7\u8d1d\u8036\u5f53\u65f6\u662f\u7cfb\u4e3b\u4efb\u3002\u51af\u00b7\u8d1d\u8036\u77e5\u9053\u8fd9\u4e9b\u4fe1\u3002\u6b64\u5916\uff0c\u4ed6\u786e\u8ba4\u4fdd\u7f57\u00b7\u897f\u65af\u7279\u91cc\u8bfa\u662f\u8bb2\u5e08\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\n\u897f\u65af\u7279\u91cc\u8bfa\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u201c\u542c\u5230\u8fd9\u4ef6\u4e8b\u611f\u5230\u9707\u60ca\u201d\uff0c\u4ed6\u8fd8\u8bb0\u5f97\u90a3\u4ef6\u4e8b\u3002\u4ed6\u662f\u4e00\u540d\u7269\u7406\u7814\u7a76\u751f\uff0c\u6559\u6388\u4e00\u95e8\u975e\u4e13\u4e1a\u7684\u6691\u671f\u8bfe\u7a0b\u3002\u897f\u65af\u7279\u91cc\u8bfa\u8bf4\uff0c\u5927\u7ea6\u4e00\u5e74\u540e\uff0c\u4ed6\u79bb\u5f00\u5b66\u672f\u754c\uff0c\u5728\u56fd\u9632\u90e8\u4ece\u4e8b\u822a\u7a7a\u7535\u5b50\u6d4b\u8bd5\u5de5\u7a0b\u3002\n\u897f\u65af\u7279\u91cc\u8bfa\u8bf4\uff1a\u201c\u6839\u636e\u6211\u7684\u8bb0\u5fc6\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u5e26\u56de\u5bb6\u7684\u6d4b\u8bd5\uff0c\u8fd9\u8ba9\u8003\u514b\u65af\u5973\u58eb\u5f97\u4ee5\u54a8\u8be2\u8d39\u66fc\u3002\u201d\u3002\u201c\u6211\u60f3\u4e0d\u8d77\u6d4b\u8bd5\u9898\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4f46\u5b83\u6d89\u53ca\u5230\u4e00\u4e2a\u9759\u7535\u5bfc\u7535\u4f53\u4ea7\u751f\u7684\u7535\u573a\u3002\u201d\n\u4ed6\u8865\u5145\u8bf4\uff0c\u8fd9\u95e8\u8bfe\u662f\u4e3a\u975e\u4e13\u4e1a\u5b66\u751f\u5f00\u8bbe\u7684\u4e00\u95e8\u8c03\u67e5\u8bfe\u7a0b\uff0c\u56e0\u6b64\u4ed6\u53ef\u80fd\u4e0d\u9700\u8981\u4e00\u4e2a\u6570\u5b66\u96be\u5ea6\u5f88\u5927\u7684\u7b54\u6848\uff0c\u4f46\u53ef\u80fd\u662f\u5728\u5bfb\u627e\u4e00\u4e2a\u5173\u4e8e\u8be5\u9886\u57df\u7684\u4e00\u822c\u6027\u9648\u8ff0\uff0c\u63f4\u5f15\u9ad8\u65af\u5b9a\u5f8b\u3002\n\u897f\u65af\u7279\u91cc\u8bfa\u8bf4\uff1a\u201c\u5728\u6211\u4ea4\u56de\u6d4b\u8bd5\u7ed3\u679c\u540e\uff0c\u5979\u9a6c\u4e0a\u6765\u627e\u6211\uff0c\u544a\u8bc9\u6211\u5979\u7684\u7b54\u6848\u4e0e\u8d39\u66fc\u7684\u4e00\u81f4\u3002\u201d\u3002\u201c\u6211\u5bf9\u6b64\u611f\u5230\u56f0\u60d1\u3002\u56e0\u4e3a\uff0c\u8d39\u66fc\uff0c\u4f60\u77e5\u9053\u2026\u2026\u55ef\uff0c\u4ed6\u53ef\u4ee5\u5728\u7761\u68a6\u4e2d\u505a\u8fd9\u4ef6\u4e8b\u3002\u6240\u8ba8\u8bba\u7684\u539f\u5219\u662f\u57fa\u672c\u548c\u57fa\u672c\u7684\uff0c\u5f88\u96be\u60f3\u8c61\u8d39\u66fc\u4f1a\u72af\u8fd9\u6837\u7684\u9519\u8bef\u3002\u201d\n\u4f46\u8d39\u66fc\u786e\u5b9e\u72af\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002\u7d22\u6069\u5728\u524d\u8a00\u4e2d\u5199\u9053\uff0c\u201c\u8d39\u66fc\u4e0d\u5b89\u5730\u610f\u8bc6\u5230\u4e86\u8fd9\u4e2a\u9519\u8bef\uff0c\u4ee5\u53ca\u5176\u4ed6\u9519\u8bef\u3002\u201d\u8d39\u66fc\u672c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u9519\u8bef\u5f53\u6210\u6253\u5b57\u9519\u8bef\uff0c\u4f46\u4ed6\u63a5\u53d7\u4e86\u8d23\u4efb\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u5bf9\u8003\u514b\u65af\u7684\u201c\u6211\u641e\u9519\u4e86\uff0c\u4f60\u4e5f\u641e\u9519\u4e86\u201d\u56de\u7b54\u5f3a\u8c03\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u5b66\u751f\u4e5f\u6709\u8d23\u4efb\u3002\n\u201c\u8d39\u66fc\u7684\u5efa\u8bae\u5f88\u590d\u6742\uff0c\u201d\u51af\u00b7\u8d1d\u8036\u8bf4\u3002\u201c\u5728\u79d1\u5b66\u754c\uff0c\u4ed6\u7684\u89c2\u70b9\u7b80\u5355\u800c\u5b8c\u7f8e\uff1a\u9605\u8bfb\u6240\u6709\u5185\u5bb9\uff0c\u8d28\u7591\u6240\u6709\u5185\u5bb9\u3002\n\u201c\u5979\u8868\u73b0\u5f97\u65e0\u53ef\u6311\u5254\u3001\u52c7\u6562\uff0c\u201d\u51af\u00b7\u8d1d\u8036\u8865\u5145\u9053\u3002\u201c\u4f46\u5728\u5f53\u4eca\u4e16\u754c\uff0c\u6709\u5fc5\u8981\u6307\u51fa\uff0c\u8fd9\u4e2a\u6545\u4e8b\u7684\u5bd3\u610f\u5e76\u4e0d\u662f\u8377\u9a6c\u70b9\u5934\u3002\u6240\u6709\u79d1\u5b66\u5bb6\uff0c\u5305\u62ec\u6240\u6709\u8bfa\u8d1d\u5c14\u5956\u83b7\u5f97\u8005\uff0c\u90fd\u4f1a\u72af\u9519\u3002\u4f46\u8fd9\u672c\u8eab\u5e76\u4e0d\u8db3\u4ee5\u5426\u5b9a\u4ed6\u4eec\u7684\u89c2\u70b9\u3002\u201d\n\u8d39\u66fc\u7684\u56de\u590d\u5728\u6536\u5230\u540e\u4e0d\u4e45\u4ee5\u4e00\u4efd\u526f\u672c\u7684\u5f62\u5f0f\u9996\u6b21\u516c\u5f00\u66dd\u5149\uff0c\u8be5\u526f\u672c\u5f20\u8d34\u5728\u5c0f\u793c\u5802\u7684\u8d70\u5eca\u4e0a\u3002\u8003\u514b\u65af\u8bf4\uff1a\u201c\u6211\u9690\u7ea6\u8bb0\u5f97\u4e00\u4e9b\u5b66\u751f\uff0c\u4e00\u4e9b\u7269\u7406\u7cfb\u7684\u5b66\u751f\u2014\u2014\u6211\u76f8\u4fe1\u662f\u7814\u7a76\u751f\u2014\u2014\u6307\u7740\u6211\u7b11\u7740\uff0c\u54af\u54af\u7b11\u7740\uff0c\u5f7c\u6b64\u8ba8\u8bba\u7740\u3002\u201d\u3002\n\u51af\u00b7\u8d1d\u8036\u8bf4\uff0c\u4ed6\u4e0d\u8bb0\u5f97\u8003\u514b\u65af\u672c\u4eba\u6216\u6536\u5230\u8fc7\u8fd9\u5c01\u4fe1\uff0c\u51e0\u5e74\u540e\uff0c\u4ed6\u4ece\u8d39\u66fc\u7684\u4e66\u4e2d\u5f97\u77e5\u4e86\u5979\u7684\u4fe1\u4ef6\u3002\n\u897f\u65af\u7279\u91cc\u8bfa\u8bf4\uff0c\u4ed6\u548c\u8003\u514b\u65af\u4e00\u6837\uff0c\u5bf9\u8fd9\u5c01\u4fe1\u5728\u4e00\u4e2a\u5c0f\u793c\u5802\u91cc\u88ab\u516c\u5f00\u5f20\u8d34\u4e86\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff0c\u6709\u7740\u6a21\u7cca\u7684\u8bb0\u5fc6\u3002\u897f\u65af\u7279\u91cc\u8bfa\u8865\u5145\u8bf4\uff0c\u4ed6\u8ba4\u4e3a\u8003\u514b\u65af-\u8d39\u66fc\u4ea4\u6613\u6240\u7684\u6301\u7eed\u6d41\u901a\u6e90\u4e8e\u5bf9\u8d39\u66fc\u672c\u4eba\u7684\u6301\u7eed\u5174\u8da3\u3002\u8d39\u66fc\u4e8e1988\u5e74\u53bb\u4e16\uff0c\u4ed6\u662f\u4e00\u540d\u516c\u5171\u77e5\u8bc6\u5206\u5b50\uff0c\u5728\u6d41\u884c\u6587\u5316\u4e2d\u51e0\u4e4e\u548c\u5728\u7269\u7406\u5b66\u4e2d\u4e00\u6837\u6770\u51fa\u3002Cisterino\u662f\u90a3\u4e9b\u8ba4\u4e3a\u5bf9Cox\u7684\u56de\u5e94\u662f\u201c\u7ecf\u5178\u7684\u8d39\u66fc\u201d\u7684\u4eba\u3002\n\u897f\u65af\u7279\u91cc\u8bfa\u8bf4\uff1a\u201c\u4ed6\u9a6c\u4e0a\u627f\u8ba4\u81ea\u5df1\u641e\u9519\u4e86\u2014\u2014\u4ed6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u2014\u2014\u8fd9\u662f\u4ed6\u7075\u9b42\u5f7b\u5e95\u66b4\u9732\u7684\u7279\u70b9\u3002\u201d\u3002\u201c\u4ed6\u6ca1\u6709\u5174\u8da3\u4e3a\u4e86\u4fdd\u4f4f\u81ea\u5df1\u7684\u58f0\u8a89\u800c\u8bd5\u56fe\u8499\u6df7\u8fc7\u5173\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u6709\u98ce\u5ea6\u5730\u8bf4\u2018\u6253\u8d25\u6211\u4e86\uff1b\u6211\u4e0d\u77e5\u9053\u6211\u5728\u60f3\u4ec0\u4e48\u2019\u662f\u4ed6\u6027\u683c\u7684\u4e00\u4e2a\u7279\u70b9\uff0c\u6211\u7406\u89e3\u8fd9\u4e00\u70b9\u3002\u201d\n\u76f4\u52302004\u5e747\u67088\u65e5\uff0c\u8003\u514b\u65af\u672c\u4eba\u624d\u60f3\u8d77\u4e86\u8fd9\u5c01\u4fe1\uff0c\u5f53\u65f6\u4e00\u5bb6\u51fa\u7248\u793e\u9001\u6765\u4e86\u4e00\u5c01\u4fe1\u3002\u4ed6\u4eec\u6b63\u5728\u5bfb\u6c42\u8bb8\u53ef\uff0c\u5c06\u5979\u7684\u4fe1\u5199\u8fdb\u4e00\u672c\u4e66\u4e2d\uff0c\u7ed3\u679c\u8bc1\u660e\u8fd9\u672c\u4e66\u5b8c\u5168\u5408\u7406\u5730\u504f\u79bb\u4e86\u4f20\u7edf\u3002\n\u201c\u8fd9\u5f88\u4ee4\u4eba\u5174\u594b\uff0c\u201d\u5979\u8bf4\u3002\u201c\u6211\u628a\u8fd9\u4ef6\u4e8b\u544a\u8bc9\u4e86\u6211\u59d0\u59d0\u3002\u6211\u8bf4\uff0c\u2018\u6211\u75af\u4e86\u5417\uff1f\u6211\u600e\u4e48\u4e86\uff1f\u2019\u6211\u59d0\u59d0\u53ea\u662f\u8bf4\uff0c\u2018\u4e0d\u2014\u2014\u542c\u8d77\u6765\u548c\u4f60\u4e00\u6a21\u4e00\u6837\u3002\u2019\u201d\n\u4e8b\u5b9e\u4e0a\uff0c\u8003\u514b\u65af\u627f\u8ba4\uff0c\u5979\u5728\u7ed9\u4e00\u4f4d\u8bfa\u8d1d\u5c14\u5956\u83b7\u5f97\u8005\u5199\u4fe1\u65f6\u63d0\u5230\u4e86\u81ea\u5df1\u7684\u52c7\u6c14\uff0c\u8fd9\u8ba9\u5979\u6709\u70b9\u4e0d\u77e5\u6240\u63aa\u3002\u5979\u8bf4\uff0c\u5f53\u5979\u6709\u4e00\u4e9b\u4e8b\u60c5\u8981\u8ba8\u8bba\u65f6\uff0c\u5979\u4e0e\u6743\u5a01\u4eba\u58eb\u63a5\u89e6\u4ece\u6765\u6ca1\u6709\u9047\u5230\u8fc7\u4efb\u4f55\u56f0\u96be\u3002\u201c\u6211\u4eec\u90fd\u53ea\u662f\u666e\u901a\u4eba\uff0c\u201d\u5979\u8bf4\u3002\n\u5979\u5728\u6c49\u666e\u987f\u957f\u5927\uff0c\u5728\u5979\u5e74\u8f7b\u7684\u65f6\u5019\uff0c\u5bb6\u5ead\u7ecf\u6d4e\u62ee\u636e\u66fe\u4f7f\u5979\u7684\u5c0f\u63d0\u7434\u8bfe\u505c\u8bfe\u3002\u8003\u514b\u65af\u6253\u7535\u8bdd\u7ed9\u6c49\u666e\u987f\u8def\u53e4\u5178\u97f3\u4e50\u5708\u7684\u8457\u540d\u4eba\u7269\u7f57\u7eb3\u5fb7\u00b7\u9a6c\u6b47\u5c14\u3002\u5979\u8bf4\uff0c\u5979\u628a\u58f0\u97f3\u653e\u4f4e\u4e86\uff0c\u8fd9\u6837\u5bb6\u4eba\u5c31\u4e0d\u4f1a\u542c\u5230\u5979\u548c\u534a\u5c9b\u4ea4\u54cd\u4e50\u56e2\u7684\u9996\u5e2d\u5c0f\u63d0\u7434\u624b\u8c08\u5224\u5c0f\u63d0\u7434\u8bfe\u7a0b\u4e86\u3002\n\u8003\u514b\u65af\u76f8\u4fe1\u5979\u7684\u7236\u4eb2\uff0c\u5df2\u6545\u7684\u5a01\u5229\u65af\u00b7\u5bcc\u5170\u514b\u6797\u00b7\u8003\u514b\u65af\uff0c\u4e3a\u5979\u63a5\u79cd\u4e86\u5bf9\u6297\u540d\u4eba\u656c\u754f\u7684\u75ab\u82d7\u3002\u5a01\u5229\u65af\u00b7\u8003\u514b\u65af\u66fe\u62c5\u4efb\u6c49\u666e\u987f\u5e02\u526f\u5e02\u957f\uff0c\u662f\u524d\u5f17\u5409\u5c3c\u4e9a\u5dde\u5dde\u957f\u6797\u4f0d\u5fb7\u00b7\u970d\u5c14\u987f\u7684\u670b\u53cb\u3002\u970d\u5c14\u987f\u6709\u4e24\u4e2a\u5973\u513f\uff0c\u5e74\u9f84\u4e0e\u6bd4\u62c9\u548c\u5979\u7684\u59d0\u59d0\u5927\u81f4\u76f8\u540c\u3002\u8fd9\u56db\u4e2a\u5973\u5b69\u6210\u4e86\u670b\u53cb\uff0c\u5979\u4eec\u4f1a\u5f88\u9ad8\u5174\u5730\u53c2\u52a0\u5dde\u957f\u7684\u805a\u4f1a\u3002\n\u8003\u514b\u65af\u8bf4\uff1a\u201c\u8c6a\u534e\u8f7f\u8f66\u4f1a\u505c\u4e0b\u6765\uff0c\u4eba\u4eec\u4f1a\u671f\u5f85\u5dde\u957f\u4e0b\u8f66\u3002\u201d\u3002\u201c\u7136\u540e\u95e8\u4f1a\u6253\u5f00\uff0c\u56db\u4e2a\u5c0f\u5973\u5b69\u4f1a\u4ece\u91cc\u9762\u8df3\u51fa\u6765\u3002\u201d\n\u5979\u8865\u5145\u8bf4\uff0c\u5979\u5728\u8c6a\u534e\u8f7f\u8f66\u56db\u91cd\u594f\u4e2d\u7684\u4e00\u4f4d\u540c\u4e8b\u662f\u5dde\u957f\u7684\u5973\u513f\u5b89\u59ae\u00b7\u970d\u5c14\u987f\uff0c\u5979\u4ece\u5c0f\u62c5\u4efb\u5f17\u5409\u5c3c\u4e9a\u5dde\u6559\u80b2\u90e8\u957f\uff0c\u5e76\u62c5\u4efb\u4e54\u6cbb\u00b7\u6885\u68ee\u5927\u5b66\u7684\u4e34\u65f6\u6821\u957f\u3002\u6b64\u5916\uff0c\u5979\u8fd8\u4e0e\u7f8e\u56fd\u53c2\u8bae\u5458\u8482\u59c6\u00b7\u51ef\u6069\u7ed3\u5a5a\u3002\n\u8003\u514b\u65af\u5728\u4e0e\u6709\u6210\u5c31\u7684\u540d\u4eba\u6253\u4ea4\u9053\u65f6\u7684\u8212\u9002\u611f\u5bf9\u5979\u5f88\u6709\u5e2e\u52a9\u3002\u5979\u5728\u97f3\u4e50\u754c\u7684\u9ad8\u5c42\u4e2d\u5f88\u5bb9\u6613\u8d70\u6765\u8d70\u53bb\u3002\u548c\u5176\u4ed6\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u5979\u6ce8\u610f\u5230\u4e86\u97f3\u4e50\u548c\u79d1\u5b66\u4e4b\u95f4\u7684\u5bc6\u5207\u8054\u7cfb\u3002\u5979\u89c1\u8fc7\u8bb8\u591a\u533b\u751f\u548c\u79d1\u5b66\u5bb6\uff0c\u4ed6\u4eec\u4e5f\u662f\u6709\u6210\u5c31\u7684\u97f3\u4e50\u5bb6\u3002\u5979\u751a\u81f3\u5728\u7ebd\u7ea6\u5e02\u7684\u4e00\u4e2a\u533b\u751f\u7ba1\u5f26\u4e50\u961f\u5de5\u4f5c\u8fc7\u2014\u2014\u201c\u8fd9\u4e9b\u4eba\u90fd\u5f88\u597d\uff01\u201d\u8003\u514b\u65af\u8bf4\u3002\n\u51b3\u5b9a\u547d\u8fd0\u7684\u5e26\u56de\u5bb6\u8003\u8bd5\u5df2\u7ecf\u4e0d\u590d\u5b58\u5728\uff0c\u4f46\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc\u7684\u8bba\u6587\u96c6\u88ab\u4fdd\u5b58\u5728\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u7684\u4e00\u4e2a\u6863\u6848\u9986\u4e2d\u7684\u8fd1100\u4e2a\u76d2\u5b50\u91cc\u3002\u4ed6\u662f\u4e00\u4f4d\u5bcc\u6709\u6210\u6548\u7684\u79d1\u5b66\u64b0\u7a3f\u4eba\u548c\u8bc4\u8bba\u5458\uff0c\u4e5f\u662f\u4e00\u4f4d\u540c\u6837\u591a\u4ea7\u7684\u4e66\u4fe1\u4f5c\u8005\u3002Beulah-Cox\u4fe1\u4ef6\u4e0e\u5176\u4ed6\u201cC\u201d\uff08\u5305\u62ecFrancis Crick\uff09\u4e00\u8d77\u5f52\u6863\u5728\u7b2c24\u680f\u3002\n\u7b2c24\u680f\u7684\u5185\u5bb9\u5305\u542b\u4e86\u8bb8\u591a\u5173\u4e8e\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc\u8d21\u732e\u7684\u8bc1\u8bcd\uff0c\u4f46\u4e5f\u53cd\u6620\u4e86\u5979\u7684\u7269\u7406\u8001\u5e08\u548c\u6bcd\u6821\u6bd4\u62c9\u00b7\u8003\u514b\u65af\u7684\u54c1\u8d28\u3002\n\u51af\u00b7\u62dc\u8036\u8bf4\uff1a\u201c\u8fd9\u5bf9\u5a01\u5ec9\u548c\u739b\u4e3d\u6765\u8bf4\u5f88\u597d\uff0c\u4e0d\u4ec5\u56e0\u4e3a\u6bd4\u62c9\u662f\u4e00\u4e2a\u806a\u660e\u3001\u52c7\u6562\u548c\u575a\u6301\u4e0d\u61c8\u7684\u5b66\u751f\uff0c\u8fd8\u56e0\u4e3a\u6559\u5b98\u4fdd\u7f57\u8db3\u591f\u8001\u7ec3\uff0c\u80fd\u591f\u5f15\u5bfc\u4ed6\u7684\u5b66\u751f\u8d70\u5411\u8d39\u66fc\u3002\u201d\u3002\u201c\u4ed6\u4e5f\u8db3\u591f\u806a\u660e\uff0c\u901a\u8fc7\u6b63\u786e\u5730\u7ed9\u5979\u8bc4\u5206\u6765\u505a\u6b63\u786e\u548c\u8bda\u5b9e\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u5c48\u670d\u4e8e\u8d39\u66fc\u7684\u4e66\u4e2d\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6743\u5a01\u3002\u201d\n\u5979\u5bf9\u9ad8\u65af\u5b9a\u5f8b\u95ee\u9898\u7684\u9519\u8bef\u56de\u7b54\u5e76\u6ca1\u6709\u963b\u6b62\u8003\u514b\u65af\u7ee7\u7eed\u5b66\u4e60\u79d1\u5b66\u3002\u5979\u5728William&amp\uff1b\u739b\u4e3d\uff0c\u5305\u62ec\u97f3\u4e50\u7269\u7406\u5b66\uff0c\u6beb\u4e0d\u5947\u602a\u3002\n\u201c\u6211\u4e00\u76f4\u70ed\u7231\u79d1\u5b66\u3002\u6211\u4e00\u76f4\u70ed\u7231\u79d1\u5b66\u5bb6\u601d\u8003\u7684\u65b9\u5f0f\u2014\u2014\u4ed6\u4eec\u8d28\u7591\u7684\u65b9\u5f0f\uff0c\u201d\u5979\u8bf4\u3002\u201c\u6211\u559c\u6b22\u8fd9\u4e00\u70b9\u3002\u6211\u559c\u6b22\u8d39\u66fc\u5bf9\u6211\u7684\u56de\u7b54\u3002\u8fd9\u5f88\u6709\u8da3\uff0c\u6211\u4e0d\u89c9\u5f97\u5b83\u4e3a\u6211\u7684\u6559\u6388\u8fa9\u62a4\u3002\u6211\u89c9\u5f97\u5b83\u4e3a\u6211\u8fa9\u62a4\u3002\u201d", "note_en": "Beulah Elizabeth Cox \u201977 is an accomplished violinist, a part of the New York City classical music scene for 30 years.\n Cox has studied with a Juilliard professor and has a long list of solo, chamber and orchestral credits, including Carnegie Hall, Lincoln Center and solo performances in Paris and London. She\u2019s performed on Broadway, including productions of \u201cLes Mis\u00e9rables\u201d and \u201cMiss Saigon\u201d and as an on-stage violinist in \u201cI Love You. You\u2019re Perfect. Now Change.\u201d\n She is the founder and leader of the Ambrosia Trio, a professional ensemble that gave concerts regularly in the New York area and beyond before going on a pandemic hiatus.\n Years before making her mark as a professional in the arts, Beulah Elizabeth Cox was a student at William &amp; Mary.\n  Early in her career as a William &amp; Mary student, Cox turned in a physics exam that contained what became one of the most famous incorrect answers in science.\n \u201cDo you know how long ago this was?\u201d Cox asked when a caller wanted to know if she was  the Beulah Elizabeth Cox who once corresponded with Richard Feynman.\n It was August of 1975 \u2014 45 years ago. Some of the details are lost to the passing years, but here is the gist: Cox saw that she had lost points on a physics exam problem that involved an electrified sphere and Gauss\u2019 Law. Her answer seemed in accord with an explanation she read in Feynman.\n But her answer was marked wrong. Perplexed, she wrote to Feynman, holder of any number of science honors, including the 1965 Nobel Prize for Physics. The body of her  Aug. 22, 1975 letter read:\n I recently took a course in elementary physics at the College of William and Mary in Virginia. An exam question concerned Gauss&#39; Law and conductors, namely, does a hollow conductor shield the region outside the conductor from the effects of a charge placed within the hollow but not touching it?\n I read Chapter 5, Volume II of the  Feynman Lectures on Physics, and understood all except the next to the last paragraph in which you say \u201c\u2026 no static distribution of charges  inside a closed conductor can produce any fields  outside.\u201d This was confusing, as it seemed to contradict all your previous statements. My instructor showed me how a simple application of Gauss&#39; Law, with a surface of integration enclosing the entire conductor, shows that the E vector outside the conductor is not zero.\n Could you perhaps explain what the paragraph in question means? I would greatly appreciate a reply as I am now very confused.\n Cox let Feynman know in a postscript that there was more at stake than the satisfying of scientific curiosity:\n PS: I must admit I have a devious motive in writing to you because on the exam I answered with the explanation that your book gave. However my instructor did not give me any points, even after I found your book to validate my answer. If you could clarify this question for me I would be very appreciative. Thanking you in advance.\n  Your instructor was right not to give you any points, for your answer was wrong, as he demonstrated using Gauss\u2019 law. You should, in science, believe logic and arguments, carefully drawn, and not authorities. You also read the book correctly and understood it. I made a mistake, so the book is wrong. I probably was thinking of a  grounded conducting sphere, or else of the fact that moving the charges around in different places inside does not affect things on the outside. I am not sure how I did it, but I goofed. And you goofed, too, for believing me.\n The Cox-Feynman correspondence, brief as it was, garnered attention, especially in the internet age: A Google search yields pages and pages of hits. It\u2019s been immortalized in print, too. For starters, the full exchange is contained in  Perfectly Reasonable Deviations from the Beaten Track: The Letters of Richard P. Feynman. Kip Thorne also referenced the Cox-Feynman letters prominently in his preface of more than one subsequent edition of  The Feynman Lectures on Physics \u2014 corrected editions that note that the sphere is grounded.\n  Thorne, the Feynman Professor of Theoretical Physics, Emeritus, at California Institute of Technology and the holder of a 2017 Nobel Prize in Physics, said in an email what he believes makes the Cox-Feynman correspondence so resonant, even after all these years: \u201cFeynman\u2019s straightforward message about not accepting anything on the basis of authority \u2014 even if that authority is Feynman himself. It\u2019s a powerful and very important message, and I think it resonates with people who have some sense of the power of critical thinking.\u201d\n Feynman was a big name in physics even before his Nobel. Etan Markowitz graduated from Caltech in 1962. He said during his time, Feynman taught freshman and sophomore physics for two years.\n \u201cThey reserved seats in the lecture hall for enrolled students, because all the upperclass physics students and graduate students all wanted to hear what he had to say,\u201d Markowitz said. \u201cAnyway, Feynman came in every Monday, Wednesday and Friday for two years, talking about whatever he wanted to talk about.\u201d\n Markowitz said graduate students set up a tape recorder for each session, and photographed each blackboard Feynman used. This raw material was distilled into  The Feynman Lectures. Early iterations of the  Lectures contained errata, not surprising considering the volume and variety of material churned out by Feynman.\n In fact, Hans von Baeyer, Chancellor Professor of Physics Emeritus at William &amp; Mary, says that Feynman errata is \u201csomething of a cottage industry,\u201d and the Cox-Feynman correspondence adds a very human touch to what is mostly a set of corrections, checks and confirmations.\n Markowitz even sought to bring Cox herself for a cameo appearance at a Feynman centennial a few years back, but for a number of reasons it didn\u2019t work out.\n The text of the Cox-Feynman exchange, perpetuated online and in print, may never be lost. The origin story was harder to pin down. Understandably, Cox didn\u2019t save the exam and 45 years after the fact, can\u2019t recall the Gauss\u2019 Law problem. She also drew a blank on the instructor\u2019s name.\n  An appeal to William &amp; Mary Registrar Sallie Marchello brought results. Marchello, \u201cengaging my inner Nancy Drew,\u201d dove into the microfilm and emerged with a number of possible names for instructors. She also found that von Baeyer was department chair at the time. Von Baeyer knew about the letters. In addition, he confirmed that Paul Cisterino was the instructor and provided an email address.\n  Cisterino, \u201castounded to be hearing about this,\u201d said in an email that he remembered the incident. He was a graduate student in physics, teaching a summer course for non-majors. Cisterino said he left academia a year or so later for a career in avionics test engineering with the Department of Defense.\n \u201cThe way I remember it, I gave a take-home test, and that enabled Ms. Cox to consult Feynman,\u201d Cisterino said. \u201cI don&#39;t recall exactly what the test question was, but it involved the electric field resulting from a statically charged conducting body.\u201d\n He added that the class was a survey course for non-majors, and so he likely would not have required a math-heavy answer, but probably was looking for a general statement about the field, invoking Gauss\u2019 Law.\n \u201cShe came to me right after I handed back the test and told me her answer was in accord with Feynman,\u201d Cisterino said. \u201cI was baffled by that. Because, Feynman, you know\u2026well, he could do this stuff in his sleep. The principle in question was basic and fundamental, and it would be hard to imagine Feynman making a mistake like that.\u201d\n But Feynman did, indeed, make that very mistake. Thorne notes in his preface, \u201cFeynman was uncomfortably aware of this error, and others.\u201d Feynman could have passed the error off as a typo, but he accepted responsibility. More to the point, his \u201cI goofed, and so did you\u201d answer to Cox underscores the fact that students have responsibilities as well.\n \u201cFeynman&#39;s advice is complicated,\u201d von Baeyer said. \u201cInside the scientific community his opinion is simple and perfect: Read everything, question everything.\n \u201cShe acted impeccably and courageously,\u201d von Baeyer added. \u201cBut in today&#39;s world, it is essential to point out that the moral of the story is NOT that Homer nodded. All scientists, including all Nobel laureates, make mistakes. But that by itself is not enough to dismiss their opinions.\u201d\n  Feynman\u2019s reply had its first public exposure in the form of a copy posted in the corridor of Small Hall shortly after its receipt. \u201cI have a very faint memory of some students, some physics students \u2014 graduate students, I believe \u2014 pointing at me laughing and giggling and discussing among themselves,\u201d Cox said.\n Von Baeyer said that he doesn\u2019t remember Cox personally or the receipt of the letter, and learned of her correspondence years later, from Feynman\u2019s book.\n Cisterino said he, like Cox, had a faint memory of the letter being posted publicly for a short time in Small Hall. Cisterino added that he believes the continued circulation of the Cox-Feynman exchange has its roots in the continued interest in Feynman himself. Feynman died in 1988, a public intellectual nearly as prominent in popular culture as he was in physics. Cisterino is among those who consider the response to Cox as \u201cclassic Feynman.\u201d\n \u201cThe ready admission that he goofed \u2014 and he doesn\u2019t know why \u2014 is so characteristic of the utter baring of his soul,\u201d Cisterino said. \u201cHe had no interest in trying to fudge it to save his reputation. Having the grace to say, in essence, \u2018beats me; I don\u2019t know what I was thinking\u2019 is so characteristic of his personality as I understand it.\u201d\n Cox herself had put the correspondence in the back of her mind, until July 8, 2004, when a letter arrived from a firm of publishers. They were seeking permission to include her letter in a book that turned out to be  Perfectly Reasonable Deviations from the Beaten Track.\n \u201cThis was exciting,\u201d she said. \u201cI told my sister about it. And I said, \u2018Was I crazy? What was wrong with me?\u2019 My sister just said, \u2018No \u2014 that sounds exactly like you.\u2019\u201d\n  In fact, Cox confessed that she is a little nonplussed by references to her courage in writing to a Nobel Laureate. She said she never had any trouble initiating contact with authority figures when she had some business to discuss. \u201cWe\u2019re all just people,\u201d she says.\n She was raised in Hampton and at one time during her youth, family financial constraints put an end to her violin lessons. Cox called up Ronald Marshall, a prominent figure in Hampton Roads classical circles. She kept her voice low, she said, so her family wouldn\u2019t hear her negotiating for violin lessons with the concertmaster of the Peninsula Symphony.\n Cox credits her father, the late Willis Franklin Cox, with inoculating her against awe of prominent persons. Willis Cox served as vice mayor of the city of Hampton and was a friend of former Virginia Governor Linwood Holton. Holton had two daughters roughly the same age as Beulah and her sister. The four girls became friends and would happily engage in a bit of gubernatorial schtick.\n \u201cThe limousine would pull up and the people would expect the governor to get out,\u201d Cox said. \u201cThen the door would open and out would pop four little girls.\u201d\n She added that one of her fellow members of the limo quartet was the governor\u2019s daughter Anne Holton, who grew up to serve as Virginia secretary of education and to be interim president of George Mason University. In addition, she is married to U.S. Senator Tim Kaine.\n Cox\u2019s comfort in dealing with accomplished and famous people has served her well. She moves easily among the higher strata of the music world. And, like many others, she has noticed the close connection between music and science. She has met many physicians and scientists who are also accomplished musicians. She\u2019s even worked with a doctor\u2019s orchestra in New York City \u2014 \u201cAnd these guys are  good!\u201d Cox said.\n The fateful take-home exam is no more, but the collected papers of Richard Feynman are held in nearly 100 boxes in an archive at Caltech. He was a productive contributor to \u2014 and commentator on \u2014 science and he was an equally prolific letter writer. The Beulah Cox correspondence is filed with the other \u201cC\u2019s\u201d (including Francis Crick), in Box 24.\n Box 24\u2019s contents hold many testimonies to the contributions of Richard Feynman, but they also speak to the qualities of Beulah Cox, her physics instructor and her alma mater.\n \u201cIt speaks very well for William &amp; Mary, not only because Beulah was a smart, brave and persistent student, but also because Paul, the instructor, was sophisticated enough to steer his students toward Feynman,\u201d von Baeyer said. \u201cHe was also smart enough to do the right and honest thing by grading her correctly, instead of buckling under the incredible authority of Feynman&#39;s book.\u201d\n Her incorrect answer on the Gauss\u2019 Law problem did not discourage Cox from continuing studies in science. She augmented her music major with other science courses at William &amp; Mary, including Physics of Music, unsurprisingly.\n \u201cI&#39;ve always loved science. I&#39;ve always loved the way scientists think \u2014the way they question,\u201d she said. \u201cI love that. And I loved Feynman\u2019s answer to me. It&#39;s funny, I didn&#39;t feel like it vindicated my professor. I felt like it vindicated me.\u201d", "posttime": "2022-02-22 03:37:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5b66\u751f,advice,\u8d39\u66fc", "title": "\u8d39\u66fc\u5bf9W&M\u5b66\u751f\u7684\u5efa\u8bae\u572845\u5e74\u540e\uff082020\u5e74\uff09\u5f15\u8d77\u4e86\u5171\u9e23", "title_en": "Feynman\u2019s advice to W&M student resonates 45 years later (2020)", "transed": 1, "url": "https://www.wm.edu/news/stories/2020/feynmans-advice-to-wm-student-resonates-45-years-later.php", "via": "", "real_tags": ["2020", "\u5b66\u751f", "advice", "\u8d39\u66fc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074547, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "~/blog/\u4e3a\u4ec0\u4e48\u8981\u5b66\u7403\u62cdI&#39\uff1b\u6211\u662f\u7231\u8377\u534e\u5dde\u4e00\u6240\u5c0f\u578b\u6587\u79d1\u5b66\u6821\u683c\u6797\u5185\u5c14\u5b66\u9662\u7684\u5b66\u751f\u3002\u5728\u8fd9\u91cc\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u5728\u5176\u5165\u95e8\u8bfe\u7a0b\u4e2d\u4f7f\u7528Racket\uff0c\u8be5\u8bfe\u7a0b\u4fa7\u91cd\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u9762\u5411\u6240\u6709\u5b66\u751f\uff08\u4e13\u4e1a\u3001\u975e\u4e13\u4e1a\uff0c\u4ee5\u53ca\u6709\u6216\u6ca1\u6709\u7f16\u7a0b\u7ecf\u9a8c\u7684\u5b66\u751f\uff09\u53bb\u5e74\u79cb\u5929\u6211\u81ea\u5df1\u4fee\u5b8c\u8fd9\u95e8\u8bfe\u540e\uff0c\u8fd9\u5b66\u671f\u6211\u4f5c\u4e3a\u8fd9\u95e8\u8bfe\u7684\u5b66\u751f\u5bfc\u5e08\uff0c\u5728\u8bfe\u5802\u4e0a\u5e2e\u52a9\u5b66\u751f\u505a\u5b9e\u9a8c\uff0c\u5e76\u6bcf\u5468\u4e3e\u884c\u590d\u4e60\u8bfe\u3002\n\u683c\u6797\u5185\u5c14\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u9009\u62e9\u5728CS\u5165\u95e8\u8bfe\u7a0b\u4e2d\u4f7f\u7528Racket\u6216Scheme\u7684\u4eba\u3002\u4e5f\u8bb8\u6700\u8457\u540d\u7684\u8ba1\u5212\u8bfe\u7a0b\u662f\u9ebb\u7701\u7406\u5de5\u5b66\u9662&#39\uff1bs 6.001\u5f00\u59cb\u4e8e1980\u5e74\uff0c\u4f7f\u7528\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u89e3\u91ca\u300b\u4e00\u4e66\u6559\u6388\u8ba1\u7b97\u673a\u79d1\u5b66\u30022008\u5e74\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7528Python\u8bfe\u7a0b\u53d6\u4ee3\u4e86\u4ed6\u4eec\u7684Scheme\u8bfe\u7a0b\uff0c\u4f46\u5e03\u6717\u5927\u5b66\u3001\u4e1c\u5317\u5927\u5b66\u548c\u5370\u7b2c\u5b89\u7eb3\u5927\u5b66\u7b49\u5176\u4ed6\u5927\u5b66\u5728\u7b2c\u4e00\u95e8\u8bfe\u7a0b\u4e2d\u4fdd\u7559Scheme\u6216Racket\u3002\u4e0d\u8fc7\uff0c\u4e5f\u8bb8\u662f\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u4e4b\u540e&#39\uff1b\u56e0\u6b64\uff0c\u5728CS\u672c\u79d1\u751f\u9879\u76ee\u4e2d\uff0c\u5728\u5165\u95e8\u8bfe\u7a0b\u4e2d\u4f7f\u7528\u7403\u62cd\u7684\u60c5\u51b5\u4ecd\u7136\u76f8\u5bf9\u5c11\u89c1\u3002\n\u8003\u8651\u5230\u7403\u62cd\u662f&#39\uff1bGrinnell\u7684\u51e0\u540d\u5b66\u751f\uff0c\u901a\u5e38\u662f\u90a3\u4e9b\u6709\u8fc7Python\u6216Java\u7b49\u66f4\u6d41\u884c\u8bed\u8a00\u7ecf\u9a8c\u7684\u5b66\u751f\uff0c\u5728\u4e0a\u8bfe\u65f6\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u4f1a\u4f7f\u7528\u5b83&#39\uff1b\u5979\u88ab\u9009\u4e3a\u683c\u6797\u5185\u5c14&#39\uff1b\u8fd9\u662f\u7b2c\u4e00\u9053\u83dc\u3002\u6211&#39\uff1b\u6211\u4e5f\u542c\u5230\u8fc7\u6cae\u4e27\u7684\u5b66\u751f\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4ed6\u4eec&#39\uff1b\u4f60\u628a\u65f6\u95f4\u6d6a\u8d39\u5728&#34\uff1b\u65e0\u7528\u7684&#34\uff1b\u8bed\u8a00\uff0c\u5f53\u4ed6\u4eec\u53ef\u4ee5\u5b66\u4e60\u4e00\u95e8\u8bed\u8a00\uff0c\u8fd9\u5c06\u5e2e\u52a9\u4ed6\u4eec\u627e\u5230\u4e00\u4efd\u5de5\u4f5c\u3002\u6211\u4eec\u7684\u6559\u6388\u7ed9\u51fa\u4e86\u95ee\u9898\u7684\u7b54\u6848\uff0c\u6211\u8fd8\u6709\u5176\u4ed6\u8d44\u6e90&#39\uff1b\u6211\u89c1\u8fc7\u9a6c\u4fee\u00b7\u5df4\u7279\u91cc\u514b&#39\uff1b\u8fd9\u9996\u66f2\u5b50\u5f88\u68d2\uff0c\u4e3a\u4ec0\u4e48\u8981\u62cd\uff1f\u4e3a\u4ec0\u4e48\u53e3\u9f7f\u4e0d\u6e05\uff1f\uff0c\u4f46\u5728\u8fd9\u91cc\u6211&#39\uff1bI\u2019\u6211\u60f3\u5c31\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u5b66\u4e60\u7403\u62cd\u662f\u503c\u5f97\u7684\u8fd9\u4e00\u70b9\u5206\u4eab\u6211\u81ea\u5df1\u7684\u770b\u6cd5\u3002\n\u6211\u8ba4\u4e3a\u7403\u62cd\u662f\u4e00\u95e8\u5f88\u597d\u7684\u7b2c\u4e00\u8bed\u8a00\uff0c\u4f46\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211&#39\uff1bI\u2019\u6211\u60f3\u628a\u91cd\u70b9\u653e\u5728\u7a0b\u5e8f\u5458\u8eab\u4e0a\uff0c\u4e0d\u7ba1\u662f\u5927\u5b66\u6bd5\u4e1a\u8fd8\u662f\u5176\u4ed6\uff0c\u4ed6\u4eec\u5bf9Python\u3001JavaScript\u6216Java\u7b49\u4e3b\u6d41\u8bed\u8a00\u6709\u4e00\u5b9a\u7684\u7ecf\u9a8c\uff0c\u4f46\u5bf9\u5b66\u4e60Racket\u7b49\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u4ef7\u503c\u72b9\u8c6b\u4e0d\u51b3\u6216\u4e0d\u786e\u5b9a\u3002\nRacket\u548cLisp\u901a\u5e38\u88ab\u5439\u6367\u4e3a\u8bed\u6cd5\u6700\u7b80\u5355\u7684\u8bed\u8a00\u3002\u5728Racket\u4e2d\uff0c\u6bcf\u79cd\u5f62\u5f0f\u90fd\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5b83\u8981\u4e48\u662f\u4e00\u4e2a\u539f\u5b50\u503c\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u6216\u6570\u5b57\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u4ee5\u8fc7\u7a0b\u6216\u7279\u6b8a\u5f62\u5f0f\u5f00\u5934\u7684\u5217\u8868\u3002\u8fd9\u79cd\u8bed\u6cd5\u4e0ePython\u8fd9\u6837\u7684\u8bed\u8a00\u5f62\u6210\u4e86\u5bf9\u6bd4\uff0cPython\u6709\u4e25\u683c\u7684\u89c4\u5219\uff0c\u89c4\u5b9a\u54ea\u4e9b\u5f62\u5f0f\u53ef\u4ee5\u7528\u4f5c\u8868\u8fbe\u5f0f\uff0c\u54ea\u4e9b\u5f62\u5f0f\u5fc5\u987b\u662f\u8bed\u53e5\u3002\n\u6211\u8ba4\u4e3aLisp\u7231\u597d\u8005\u6709\u65f6\u5938\u5927\u4e86\u8fd9\u4e00\u4f18\u52bf\u3002\u867d\u7136\u87d2\u86c7&#39\uff1bs\u7684\u8bed\u6cd5\u53ef\u80fd\u4e0d\u90a3\u4e48\u7b80\u5355\uff0c\u4e00\u65e6\u7528\u6237\u5b66\u4f1a\u4e86\u5b83\u7684\u8bed\u6cd5\u89c4\u5219\uff0c\u5b83\u786e\u5b9e\u6709\u81ea\u5df1\u7684\u4f18\u96c5\u3002\u7136\u800c\uff0cLisp\u98ce\u683c\u8bed\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u7684\u5fc3\u7406\u8bc4\u4f30\u6a21\u578b\u3002\u5728\u8ba1\u7b97Racket\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u603b\u662f\u9996\u5148\u8ba1\u7b97\u6700\u91cc\u9762\u7684\u62ec\u53f7\uff0c\u7528\u9002\u5f53\u7684\u4e3b\u4f53\u66ff\u6362\u8fc7\u7a0b\u8c03\u7528\uff0c\u9664\u4e86\u4e00\u4e9b\u7279\u6b8a\u5f62\u5f0f\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06map\u66ff\u6362\u4e3a\u5176\u5b9a\u4e49\u7684\u4e3b\u4f53\uff0c\u66ff\u6362\u9002\u5f53\u7684\u53c2\u6570\uff0c\u7136\u540e\u7ee7\u7eed\u6b63\u5e38\u8bc4\u4f30\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8ffd\u8e2a\u4e00\u4e2a\u7f29\u5199\u7248\u672c\uff1a\n\uff08\u5730\u56fesqr\u548c#39\uff1b\uff082 4 8\uff09\uff09-&gt\uff1b\uff08\u5982\u679c\uff08\u7a7a\uff1f&#39\uff1b\uff082 4 8\uff09\uff09\u7a7a\uff08cons\uff08sqr\uff08car&#39\uff1b\uff082 4 8\uff09\uff09\uff09\uff09\uff08\u5730\u56fesqr\uff08cdr&#39\uff1b\uff082 4 8\uff09###\uff09-&gt\uff1b\uff08cons 4\uff08\u5730\u56fesqr\u548c#39\uff1b\uff084 8\uff09\uff09-&gt-&gt\uff1b\uff08cons 4\uff08cons 16\uff08cons 64 null\uff09\uff09-&gt&#39;( 4 16 64 )\n\u6cbf\u7740\u8fd9\u6761\u8f68\u8ff9\uff0c\u6211\u4eec\u770b\u5230\u5730\u56fe\u5e76\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\uff0c\u5b83&#39\uff1b\u8fd9\u53ea\u662f\u4e00\u4e2a\u50cf\u5176\u4ed6\u7a0b\u5e8f\u4e00\u6837\u8fdb\u884c\u8bc4\u4f30\u7684\u7a0b\u5e8f\u3002\u73b0\u5728\u5c06\u5176\u4e0ePython\u4e2d\u7684\u7b49\u6548\u5217\u8868\u7406\u89e3\u8fdb\u884c\u6bd4\u8f83\uff1a\n\u6211\u4eec\u5982\u4f55\u5728\u5fc3\u7406\u4e0a\u8bc4\u4f30\u8fd9\u4e00\u70b9\uff1f\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u5177\u4f53\u7684#34\uff1b\u795e\u5947\u7684&#34\uff1b\u7528\u4e8e\u8bc4\u4f30Python\u7684\u8bed\u6cd5\u548c\u8bed\u4e49&#39\uff1bs\u8868\u793a\u7406\u89e3\u8868\u8fbe\u5f0f\uff0c\u5b83\u770b\u8d77\u6765\u76f8\u4f3c\uff0c\u4f46\u4e0e\u5faa\u73af\u8bed\u53e5\u7684\u884c\u4e3a\u5b8c\u5168\u4e0d\u540c\u3002\nRacket\u4e5f\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u5f62\u5f0f\uff0c\u6bd4\u5982let\u548cif\uff0c\u5fc5\u987b\u5b66\u4e60\u5b83\u4eec\u7684\u8bc4\u4f30\u7b56\u7565\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u6bd4Python\u6216Java\u4e2d\u7684\u8bed\u6cd5\u66f4\u52a0\u6709\u9650\u548c\u76f4\u89c2\u3002\n\u53ea\u9700\u51e0\u884c\u7b80\u5355\u7684Java&#39\uff1bs\u89c4\u8303&#34\uff1b\u4f60\u597d\u4e16\u754c&#34\uff1b\u4f8b\u5982\uff0c\u6211\u4eec&#39\uff1b\u6211\u5df2\u7ecf\u7528\u7279\u6b8a\u7684\u6c42\u503c\u89c4\u5219\uff08public\u3001class\u3001static\u3001dot\u64cd\u4f5c\u7b26\u7b49\uff09\u505a\u4e86\u51e0\u4e2a\u58f0\u660e\u3002\u5728Java\u7a0b\u5e8f\u5458\u4e86\u89e3\u4ed6\u4eec\u7684\u7a0b\u5e8f\u5b9e\u9645\u6267\u884c\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4e4b\u524d\uff0c\u5fc5\u987b\u7406\u89e3\u8fd9\u4e9b\u89c4\u5219\u3002\nJava\u662f\u6211\u5b66\u4e60\u7684\u7b2c\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u6b64\u6211\u4ece\u7b2c\u4e00\u624b\u7ecf\u9a8c\u4e2d\u77e5\u9053\uff0c\u5176\u7ed3\u679c\u662f\u8be5\u8bed\u8a00\u7684\u521d\u5b66\u8005\u901a\u5e38\u53ea\u63a5\u53d7\u4ed6\u4eec\u53ef\u4ee5&#39\uff1b\u6211\u65e0\u6cd5\u5b8c\u5168\u7406\u89e3\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u662f\u5982\u4f55\u8bc4\u4f30\u7684\u3002\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u4e0d\u5f97\u4e0d\u63a5\u53d7\uff0c\u5b66\u4e60\u7f16\u7a0b\u9700\u8981\u8bb0\u4f4f\u770b\u4f3c\u4efb\u610f\u7684\u89c4\u5219\u6765\u6784\u5efa\u4ee3\u7801\u3002\u521d\u5b66\u8005Racket\u7a0b\u5e8f\u5458\u4e0d\u4f1a\u9762\u4e34\u8fd9\u6837\u7684\u538b\u529b\uff0c\u56e0\u4e3a\u5b83\u7684\u8bc4\u4f30\u66f4\u52a0\u76f4\u89c2\uff0c\u6211\u8ba4\u4e3a\u8fd9\u5728\u4f5c\u4e3a\u6559\u5b66\u8bed\u8a00\u4f7f\u7528\u65f6\u662f\u4e00\u4e2a\u660e\u663e\u7684\u4f18\u52bf\u3002\n\u5373\u4f7f\u4f60\u662f\u4e00\u4e2a\u7ecf\u9a8c\u4e30\u5bcc\u7684Python\u6216Java\u7a0b\u5e8f\u5458\uff0c\u786e\u5207\u5730\u77e5\u9053\u5982\u4f55\u8bc4\u4f30\u8bed\u8a00\u7684\u6bcf\u4e2a\u90e8\u5206\uff0c\u6211\u4ecd\u7136\u8ba4\u4e3a\u63a5\u89e6Racket#39\uff1bs\u7684\u8bc4\u4f30\u6a21\u5f0f\u662f\u503c\u5f97\u7684\u3002\u5bf9Racket\u4ee3\u7801\u7684\u8f6c\u6362\u8fdb\u884c\u5efa\u6a21\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u5458\u4e86\u89e3\u4e0d\u540c\u4ee3\u7801\u7247\u6bb5\u5982\u4f55\u4ee5\u5176\u4ed6\u8bed\u8a00\u7684\u7528\u6237\u901a\u5e38\u4e0d\u77e5\u9053\u7684\u65b9\u5f0f\u5206\u89e3\u548c\u7ec4\u5408\u5728\u4e00\u8d77\uff1bt\u76f4\u63a5\u8003\u8651\u3002\u6211\u8ba4\u4e3a\uff0c\u52a0\u5f3a\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u53ef\u4ee5\u5efa\u7acb\u76f4\u89c9\uff0c\u4ece\u800c\u5feb\u901f\u638c\u63e1\u5176\u4ed6\u8bed\u8a00\u7684\u8bc4\u4f30\u3002\n\u5b66\u4e60Racket\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6bd4\u5176\u4ed6\u8bed\u8a00\u63d0\u4f9b\u7684\u5de5\u5177\u66f4\u6709\u9650\u7684\u5de5\u5177\u3002\u4f8b\u5982\uff0c\u5faa\u73af\u548c\u53d8\u5f02\u662f\u5176\u4ed6\u8bed\u8a00\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u901a\u5e38\u662f\u4e0d\u5141\u8bb8\u7684\n\u867d\u7136\u4e00\u95e8\u4ee5\u5c0f\u6838\u5fc3\u6784\u5efa\u7684\u8bed\u8a00\u6709\u771f\u6b63\u7684\u7f8e\u5b66\u4f18\u52bf\uff0c\u5373\u5982\u4f55\u7b80\u6d01\u5730\u5b9a\u4e49\u548c\u5b9e\u73b0\u5b83\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83&#39\uff1b\u4e0e\u5c0f\u578b\u8bed\u8a00\u7684\u7269\u8d28\u4f18\u52bf\u76f8\u6bd4\uff0c\u4e0d\u8981\u5938\u5927\u8fd9\u4e9b\u4f18\u52bf\u4e5f\u5f88\u91cd\u8981\u3002\nRacket\u4e2d\u5bf9\u6781\u7b80\u4e3b\u4e49\u7684\u5173\u6ce8\u6700\u521d\u751a\u81f3\u8feb\u4f7f\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5728\u5982\u4f55\u6784\u9020\u4ee3\u7801\u4ee5\u53ca\u6700\u7ec8\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u4e0a\u8d70\u51fa\u4ed6\u4eec\u7684\u8212\u9002\u533a\u3002\u5bf9\u4e8e\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u6211\u8ba4\u4e3a\u5b66\u4e60\u89e3\u51b3\u95ee\u9898\u7684\u6839\u672c\u4e0d\u540c\u65b9\u6cd5\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u3002\u8fd9\u79cd\u7ecf\u5386\u4f7f\u4f60\u7684\u4eba\u751f\u8fbe\u5230\u4e86\u6781\u9650&#39\uff1bs\u7684\u77e5\u8bc6\uff0c\u589e\u52a0\u4e86a&#34\uff1b\u4e00\u888b\u628a\u620f&#34\uff1b\u4f7f\u4eba\u80fd\u591f\u89e3\u51b3\u66f4\u56f0\u96be\u6216\u66f4\u65b0\u5947\u7684\u95ee\u9898\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u9012\u5f52\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5b66\u4e60\u4f7f\u7528\u9012\u5f52\u4f5c\u4e3a\u4e00\u79cd\u901a\u7528\u7684\u63a7\u5236\u7ed3\u6784\u662f\u83b7\u5f97\u7403\u62cd\u6d41\u7545\u6027\u7684\u6700\u91cd\u8981\u7684\u7ed3\u679c\u4e4b\u4e00\u3002\n\u5f53\u5176\u4ed6\u8bed\u8a00\u7684\u7a0b\u5e8f\u5458\u88ab\u5f15\u5165\u9012\u5f52\u65f6\uff0c\u5b83&#39\uff1b\u8fd9\u901a\u5e38\u662f\u4e3a\u4e86\u5c55\u793a\u4e00\u4e9b\u95ee\u9898\u7684\u66ff\u4ee3\u548c\u5c0f\u4f17\u89e3\u51b3\u65b9\u6848\u3002\u7ed9\u51fa\u4e86\u8ba1\u7b97\u9636\u4e58\u6570\u6216\u7b2cn\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u7b49\u5178\u578b\u4f8b\u5b50\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u73a9\u5177\u4f8b\u5b50\u5bf9\u4e00\u822c\u7f16\u7a0b\u6765\u8bf4\u4f3c\u4e4e\u6beb\u65e0\u7528\u5904\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u5806\u6808\u6ea2\u51fa\u95ee\u9898\uff0c\u7a0b\u5e8f\u5458\u7ecf\u5e38\u88ab\u8b66\u544a\u4e0d\u8981\u4f7f\u7528\u9012\u5f52\u3002\n\u7136\u800c\uff0c\u9012\u5f52\u662f\u4e00\u4e2a\u6bd4\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u529f\u80fd\u5f3a\u5927\u5f97\u591a\u7684\u5de5\u5177\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6ca1\u6709\u5faa\u73af\u548c\u53d8\u5f02\u7684\u60c5\u51b5\u4e0b\uff0c\u9012\u5f52\u662fRacket\u4e2d\u7528\u6765\u7ba1\u7406\u91cd\u590d\u548c\u72b6\u6001\u7684\u4e3b\u8981\u5de5\u5177\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u548c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u9012\u5f52\u662f\u5b66\u4e60\u8be5\u8bed\u8a00\u6700\u5177\u6311\u6218\u6027\u7684\u65b9\u9762\u4e4b\u4e00\u3002\n\u4f7f\u7528\u9012\u5f52\u7f16\u7a0b\u7684\u5173\u952e\u5728\u4e8e&#39\uff1b\u5b83\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u9012\u5f52\u6570\u5b66\u5b9a\u4e49\uff0c\u4f46\u662f\u5b83&#39\uff1bIt\u2019\u8fd9\u662f\u628a\u4e00\u4e2a\u96be\u9898\u5206\u89e3\u6210\u51e0\u4e2a\u7b80\u5355\u95ee\u9898\u7684\u901a\u7528\u5de5\u5177\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u5206\u89e3\u6210\u5b50\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5141\u8bb8\u9012\u5f52\u5de5\u4f5c\u7684\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u8f83\u6c42\u548c\u8fc7\u7a0b\u7684\u8fed\u4ee3\u548c\u9012\u5f52\u8bbe\u8ba1\u3002\u4ee5\u4e0b\u662fPython\u4e2d\u7684\u6807\u51c6\u8fed\u4ee3\u65b9\u6cd5\uff1a\n\u8fd9\u79cd\u65b9\u6cd5\u76f4\u63a5\u6e90\u4e8e\u5927\u591a\u6570\u4eba\u4f1a\u5982\u4f55\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898#34\uff1b\u4f60\u5982\u4f55\u5bf9\u4e00\u7cfb\u5217\u6570\u5b57\u6c42\u548c&#34; \u597d\u7684\uff0c\u4ece\u96f6\u5f00\u59cb\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u503c\u52a0\u5230\u603b\u6570\u4e2d\uff0c\u76f4\u5230\u6211\u4eec\u5230\u8fbe\u7ec8\u70b9\u3002\n\u7136\u800c\uff0c\u9012\u5f52\u5730\u5b9e\u73b0sum\u9700\u8981\u4e0d\u540c\u7684\u601d\u7ef4\u65b9\u5f0f\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u7b56\u7565\u662f\u63d0\u51fa\u4e24\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e00\uff0c34\uff1b\u4ec0\u4e48&#39\uff1b\u4e00\u5f20\u7a7a\u540d\u5355\u7684\u603b\u548c\u662f\u591a\u5c11&#34; \u597d\u5427\uff0c\u663e\u7136\u662f\u96f6\u3002\u5176\u6b21\u662f&#34\uff1b\u5982\u679c\u6211\u4eec\u77e5\u9053\u5217\u8868\u4e2d\u9664\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ee5\u5916\u7684\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\uff0c\u90a3\u4e48&#39\uff1b\u603b\u6570\u662f\u591a\u5c11&#34; \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u4e0e\u5176\u4f59\u5143\u7d20\u7684\u548c\u76f8\u52a0\u6765\u627e\u5230\u8fd9\u4e00\u70b9\u3002\n\u5bf9\u4e8e\u4e0d\u719f\u6089\u9012\u5f52\u8bbe\u8ba1\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u79cd\u601d\u8def\u80af\u5b9a\u4e0d\u662f\u76f4\u89c2\u7684\u3002\u7136\u800c\uff0c\u5b83\u91cd\u8981\u5730\u8feb\u4f7f\u6211\u4eec\u5c06\u8bbe\u8ba1\u5206\u6210\u4e24\u4e2a\u5b50\u95ee\u9898\uff1a\u9996\u5148\u89e3\u51b3\u57fa\u672c\u60c5\u51b5\uff0c\u7136\u540e\u5c06\u9012\u5f52\u6b65\u9aa4\u5206\u89e3\u4e3a\u9012\u5f52\u8c03\u7528\u53ef\u4ee5\u5904\u7406\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u6211\u4eec\u5728\u6bcf\u4e2a\u9636\u6bb5\u5fc5\u987b\u505a\u7684\u4e8b\u60c5\u3002\n\u8ba4\u8bc6\u5230\u9012\u5f52\u601d\u7ef4\u7684\u4ef7\u503c\u53ef\u80fd\u5f88\u96be\uff0c\u56e0\u4e3a\u5b83&#39\uff1b\u4e3a\u4ec0\u4e48\u91c7\u7528\u4e00\u79cd\u5929\u751f\u4e0d\u90a3\u4e48\u76f4\u89c2\u7684\u7b56\u7565\u6765\u89e3\u51b3\u95ee\u9898\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u8fd9\u5e76\u4e0d\u660e\u663e\u3002\u4f46\u9012\u5f52\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u8ba9\u6211\u4eec\u80fd\u591f\u7528\u672c\u6765\u5c31\u4e0d\u90a3\u4e48\u5f3a\u5927\u7684\u5de5\u5177\uff08\u6ca1\u6709\u53d8\u5f02\u6216\u5faa\u73af\uff09\u6765\u89e3\u51b3\u96be\u9898\u548c\u7ba1\u7406\u72b6\u6001\uff0c\u4ee5\u53ca\u8fd9\u79cd\u7b80\u5355\u6027\u5982\u4f55\u5956\u52b1\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u5feb\u901f\u89e3\u51b3\u96be\u9898\u7684\u80fd\u529b\u3002\n\u9012\u5f52\u4e0d\u662f&#39\uff1b\u4e0d\u662f\u94f6\u5f39\uff0c\u4f46\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u5de5\u5177&#39\uff1b\u8fd9\u662f\u503c\u5f97\u7406\u89e3\u7684\uff0c\u5373\u4f7f\u51fd\u6570\u5f0f\u7a0b\u5e8f\u5458\u901a\u5e38\u66f4\u559c\u6b22\u4f7f\u7528\u57fa\u4e8e\u9012\u5f52\u7684\u66f4\u5177\u4f53\u3001\u66f4\u5b89\u5168\u7684\u5de5\u5177\uff0c\u6bd4\u5982\u9ad8\u9636\u8fc7\u7a0b\u6216\u7406\u89e3\u3002\n\u5373\u4f7f\u6240\u6709\u5173\u4e8e\u9012\u5f52\u7684\u8bf4\u6cd5\u90fd\u662f\u771f\u7684\uff0c\u4eba\u4eec\u53ef\u80fd\u4ecd\u7136\u60f3\u77e5\u9053\uff0c\u5f53\u9012\u5f52\u5728\u5176\u4ed6\u6240\u6709\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u53ef\u7528\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u9009\u62e9Racket\u3002\u7b54\u6848\u662f\uff0cRacket\u548c\u5927\u591a\u6570\u5176\u4ed6\u51fd\u6570\u5f0f\u8bed\u8a00\u4e00\u6837\uff0c\u65e8\u5728\u4f7f\u9012\u5f52\u8bbe\u8ba1\u66f4\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u548c\u81ea\u7136\u3002\n\u9996\u5148\uff0c\u6bcf\u4e2aRacket\u8fc7\u7a0b\u9690\u5f0f\u8fd4\u56de\u6700\u7ec8\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u7f16\u5199\u4e00\u4e2a\u4e0d&#39\uff1bt\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u6b64\u5916\uff0c\u8be5\u8bed\u8a00\u4e2d\u7684\u6838\u5fc3\u8868\u5355\u65e8\u5728\u963b\u6b62\u547d\u4ee4\u5f0f\u7f16\u7a0b\u3002\u4f8b\u5982\uff0cif\u8868\u8fbe\u5f0f\u5fc5\u987b\u5305\u542btruthy\u548cfalse\u5206\u652f\uff0c\u56e0\u6b64\u5b83&#39\uff1b\u5bf9\u4e00\u4e2a\u4eba\u6765\u8bf4\uff0c\u5fd8\u8bb0\u5305\u542b\u4e00\u4e2a\u57fa\u672c\u6848\u4f8b\u66f4\u96be\u3002\n\u7136\u800c\uff0c\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u662f\u5217\u8868\u6570\u636e\u7ed3\u6784\u7684\u6838\u5fc3\u4f4d\u7f6e\u3002\u5217\u8868\u662f\u4e00\u79cd\u56fa\u6709\u7684\u9012\u5f52\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u4eec&#39\uff1bre\u8981\u4e48\u4e3a\u7a7a\uff0c\u8981\u4e48\u4e3a\u67d0\u4e2a\u503c\u7684cons\uff0c\u518d\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5217\u8868\u3002\u5bf9cons\u5217\u8868\u8fdb\u884c\u9012\u5f52\u8bbe\u8ba1\u662f\u5f88\u81ea\u7136\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u5728\u7403\u62cd\u4e2d\u7684\u4e2d\u5fc3\u4f4d\u7f6e\u4f7f\u5f97\u4f7f\u7528\u9012\u5f52\u6210\u4e3a\u4e00\u79cd\u81ea\u7136\u9009\u62e9\u3002\n\u5c06\u5176\u4e0e\u5728Python\u7b49\u8bed\u8a00\u4e2d\u4f7f\u7528\u9012\u5f52\u8fdb\u884c\u6bd4\u8f83\u3002\u5728\u90a3\u91cc\uff0c\u4e3b\u5217\u8868\u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a\u7d22\u5f15\u52a8\u6001\u6570\u7ec4\u3002\u5c3d\u7ba1\u4eba\u4eec\u53ef\u4ee5\u5c06\u4f7f\u7528Racket\u4e2d\u7684cons\u548ccdr\u7f16\u5199\u7684\u9012\u5f52\u7b97\u6cd5\u7ffb\u8bd1\u6210Python\uff0c\u4f46\u8fd9\u6837\u505a\u4e0d\u4ec5\u4e0d\u81ea\u7136\uff0c\u800c\u4e14\u8fdd\u80ccPython\u7684\u7cbe\u795e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7ffb\u8bd1\u6210\u5176\u4ed6\u6d41\u884c\u7684\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e5f\u662f\u5982\u6b64\u3002\n\u4ece\u6027\u80fd\u7684\u89d2\u5ea6\u6765\u770b\uff0cRacket\u5bf9\u9012\u5f52\u8bbe\u8ba1\u662f\u6709\u5229\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6559\u5b66\u6cd5\u3002\u91cd\u8981\u7684\u662f\uff0cRacket\u4fdd\u8bc1\u4e86\u5c3e\u90e8\u8c03\u7528\u4f18\u5316\uff0c\u8fd9\u610f\u5473\u7740\u8bbe\u8ba1\u7528\u4e8e\u5229\u7528\u5c3e\u90e8\u9012\u5f52\u7684\u9012\u5f52\u51fd\u6570\u5c06\u8d62\u5f97&#39\uff1b\u4e0d\u8981\u50cf\u5728Python\u548cJava\u7b49\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u90a3\u6837\u5728\u5806\u6808\u4e0a\u7206\u70b8\u5185\u5b58\u3002\n\u65e2\u7136\u6211\u5df2\u7ecf\u8d5e\u626c\u4e86\u5b66\u4e60Racket\u7684\u4f18\u70b9\uff0c\u6211\u60f3\u8865\u5145\u4e00\u70b9\uff0c\u7f16\u7a0b\u8bed\u8a00\u7684\u9009\u62e9\u6ca1\u6709\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u91cd\u8981\u3002\u6211\u4ece\u540c\u5b66\u4eec\u8eab\u4e0a\u770b\u5230\u7684\u632b\u6298\u611f\u4e3b\u8981\u96c6\u4e2d\u5728\u4ee5\u4e0b\u95ee\u9898\u4e0a\uff1a&#34\uff1b\u65e2\u7136\u6211\u53ef\u4ee5\u82b1\u65f6\u95f4\u5b66\u4e60\u4e00\u95e8\u4eba\u4eec\u5b9e\u9645\u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u4e3a\u4ec0\u4e48\u6211\u8981\u5b66\u4e60Racket\u5462&#34; \u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u4e9b\u9053\u7406\u3002\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u7a00\u7f3a\u7684\u8d44\u6e90\uff0c\u5e94\u8be5\u5408\u7406\u5206\u914d\uff0c\u4f46\u6211\u8ba4\u4e3a\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u70b9\uff1a\u7f16\u7a0b\u6bd4\u7f16\u7a0b\u8bed\u8a00\u66f4\u96be\u5b66\u3002\n\u6211\u4e0d&#39\uff1bI don\u2019\u6211\u4e0d\u60f3\u8d2c\u4f4e\u5b66\u4e60\u4e00\u95e8\u65b0\u8bed\u8a00\u6240\u9700\u7684\u52aa\u529b\uff0c\u5c24\u5176\u662f\u50cfRacket\u8fd9\u6837\u770b\u8d77\u6765\u4e0e\u6d41\u884c\u7684C\u8bed\u8a00\u622a\u7136\u4e0d\u540c\u7684\u8bed\u8a00\u3002\u4f46\u662f\uff0c\u7ed9\u5b9a\u8bed\u8a00\u7684\u8bed\u6cd5\u548c\u7279\u5b9a\u529f\u80fd\u4ecd\u7136\u53ea\u662f\u638c\u63e1\u8be5\u8bed\u8a00\u6216\u4efb\u4f55\u5176\u4ed6\u8bed\u8a00\u7684\u4e00\u822c\u7f16\u7a0b\u6240\u9700\u77e5\u8bc6\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u5b66\u4e60\u4e00\u95e8\u65b0\u8bed\u8a00\u7684\u901f\u5ea6\u6bd4\u65b0\u624b\u5feb\u5f97\u591a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u77e5\u9053\u6784\u6210\u65b0\u8bed\u8a00\u57fa\u7840\u7684\u5927\u90e8\u5206\u6982\u5ff5\uff0c\u6240\u4ee5\u4ed6\u4eec\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b66\u4e60\u8bed\u6cd5\u6216\u5b66\u4e60\u7279\u5b9a\u4e8e\u8bed\u8a00\u7684\u529f\u80fd\u3002\n\u5f53Racket\u7a0b\u5e8f\u5458\u7b2c\u4e00\u6b21\u5b66\u4e60JavaScript\u65f6\uff0c\u4ed6\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u533f\u540d\u51fd\u6570\u3001\u95ed\u5305\u548c\u9ad8\u9636\u51fd\u6570\uff0c\u6240\u4ee5\u4ed6\u4eec\u53ea\u9700\u8981\u5c06\u73b0\u6709\u77e5\u8bc6\u6620\u5c04\u5230JavaScript&#39\uff1b\u5e76\u5173\u6ce8\u5176\u72ec\u7279\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u4f18\u52bf\u53ea\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u52a0\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4eba\u5b66\u4e60\u7684\u8bed\u8a00\u8d8a\u591a\uff0c\u4ed6\u5728\u5b66\u4e60\u4e00\u95e8\u65b0\u8bed\u8a00\u65f6\u9700\u8981\u5229\u7528\u7684\u77e5\u8bc6\u57fa\u7840\u5c31\u8d8a\u591a\u3002\n\u56e0\u6b64\uff0c\u662f\u7684\uff0c\u4f60\u5c06\u4e0d\u5f97\u4e0d\u6295\u5165\u65f6\u95f4\u5b66\u4e60Racket\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u4e00\u52aa\u529b\u7684\u56de\u62a5\u662f\uff0c\u5f53\u4f60\u8f6c\u5230\u5176\u4ed6\u8bed\u8a00\u65f6\uff0c\u6240\u83b7\u5f97\u7684\u5927\u90e8\u5206\u77e5\u8bc6\u5c06\u4ea7\u751f\u56de\u62a5\u3002\u800c\u4e14\uff0c\u7531\u4e8eRacket\u7684\u6838\u5fc3\u975e\u5e38\u5c0f\uff0c\u8868\u8fbe\u80fd\u529b\u4e5f\u975e\u5e38\u5f3a\uff0c\u56e0\u6b64\u5b83\u5141\u8bb8\u7528\u6237\u5feb\u901f\u6df1\u5165\u5230\u7f16\u7a0b\u4e2d\u90a3\u4e9b\u66f4\u56f0\u96be\u4f46\u6700\u7ec8\u66f4\u6709\u4ef7\u503c\u7684\u65b9\u9762\uff0c\u800c\u4e0d\u662f\u9677\u5165Java\u7b49\u8bed\u8a00\u4e2d\u7e41\u91cd\u7684\u8bed\u6cd5\u548c\u53e4\u602a\u4e4b\u5904\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u597d\u5904\u901a\u5e38\u662f\u4ece\u667a\u529b\u7684\u89d2\u5ea6\u6765\u8d5e\u7f8e\u7684\u3002\u6545\u4e8b\u662f\u8fd9\u6837\u7684\uff1a\u51fd\u6570\u5f0f\u7f16\u7a0b#39\uff1bs\u5bf9\u7eaf\u7cb9\u6027\u548c\u65e0\u72b6\u6001\u6027\u7684\u5173\u6ce8\u5c06\u7ee7\u7eed\u4e0b\u53bb\uff0c\u4ee5\u4fbf\u5728\u4e0d\u5f3a\u8c03\u8fd9\u4e9b\u65b9\u9762\u7684\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4ea7\u751f\u66f4\u597d\u7684\u7ed3\u679c\u3002\u6211\u540c\u610f\u8fd9\u79cd\u89c2\u70b9\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u5728\u4efb\u4f55\u8bed\u8a00\u4e2d\uff0c\u8fd1\u4e4e\u51fd\u6570\u5f0f\u7684\u7f16\u7a0b\u98ce\u683c\u90fd\u662f\u4e00\u79cd\u6709\u7528\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u800c\u5f53\u5b83\u4eec&#39\uff1b\u6211\u4eec\u9700\u8981\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5373\u4f7f\u5de5\u4e1a\u754c\u7684\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u548c\u5de5\u7a0b\u5e08\u4f7f\u7528\u975e\u51fd\u6570\u5f0f\u8bed\u8a00\uff0c\u8bf4\u51fd\u6570\u5f0f\u7f16\u7a0b\u672c\u8eab\u5728\u5b9e\u8df5\u4e2d\u5b8c\u5168\u65e0\u7528\u4e5f\u662f\u4e0d\u51c6\u786e\u7684\u3002\n\u4f8b\u5982\uff0c\u4eca\u5e74\u590f\u5929\uff0c\u6211\u5c06\u5728\u4e00\u5bb6\u5728\u540e\u7aef\u4f7f\u7528Clojure\u7684\u516c\u53f8\u62c5\u4efb\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5b9e\u4e60\u751f\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709\u5728Racket\u65b9\u9762\u6709\u7ecf\u9a8c\u7684\u673a\u4f1a\u3002\u6211\u8fd9\u6837\u8bf4\u4e0d\u662f\u4e3a\u4e86\u5439\u5618\uff0c\u800c\u662f\u4e3a\u4e86\u6307\u51fa\uff0c\u5982\u679c\u4f60\u60f3\u4e13\u4e1a\u5730\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u5373\u4f7f\u4f60\u7684\u7b80\u5386\u4e0a\u53ea\u6709Racket\u4e00\u79cd\u8bed\u8a00\uff0c\u4f60\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u5e94\u4ed8\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u793e\u533a\u5f53\u7136\u6bd4\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u5176\u4ed6\u793e\u533a\u5c0f\uff0c\u4f46\u8fd9&#39\uff1b\u8fd9\u4e0d\u5b8c\u5168\u662f\u4ef6\u574f\u4e8b\u3002\u6839\u636e\u6211\uff08\u5c3d\u7ba1\u6709\u9650\uff09\u7684\u7ecf\u9a8c\uff0c\u4e0e\u5438\u5f15\u5927\u91cf\u7533\u8bf7\u7684\u65d7\u8230\u5de5\u4f5c\u6216\u5b9e\u4e60\u7a0b\u5e8f\u5458\u76f8\u6bd4\uff0c\u8f83\u5c0f\u7684\u673a\u4f1a\u5f80\u5f80\u66f4\u5bb9\u6613\u83b7\u5f97\uff0c\u4e5f\u66f4\u6709\u56de\u62a5\u3002\u6700\u540e\uff0c\u6bcf\u4e2a\u7533\u8bf7\u8005\u90fd\u9700\u8981\u4e00\u4e9b\u80fd\u8ba9\u4ed6\u4eec\u8131\u9896\u800c\u51fa\u7684\u4e1c\u897f\uff0c\u5982\u679c\u51fd\u6570\u5f0f\u7f16\u7a0b\u662f\u4ed6\u4eec\u7684\u6fc0\u60c5\u6240\u5728\uff0c\u90a3\u53ef\u80fd\u5c31\u662f\u3002\n\u6b64\u5916\uff0c\u4e5f\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5373\u4f7f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u793e\u533a\u76f8\u5bf9\u8f83\u5c0f\uff0c\u4f46\u51fd\u6570\u5f0f\u5de5\u5177\u548c\u6280\u672f\u5728\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u8bed\u8a00\u4e2d\u7684\u91cd\u8981\u6027\u6700\u8fd1\u90fd\u6709\u4e86\u76f8\u5f53\u5927\u7684\u589e\u957f\u3002\n\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\uff0cJava\u548cC#\u7b49\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u5821\u5792\u589e\u52a0\u4e86\u5bf9lambda\u8868\u8fbe\u5f0f\u7684\u652f\u6301\uff0cPython\u5f15\u5165\u4e86\u7ed3\u6784\u6a21\u5f0f\u5339\u914d\u2014\u2014\u8fd9\u4e24\u79cd\u91cd\u8981\u5de5\u5177\u90fd\u662f\u4ece\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u884d\u751f\u51fa\u6765\u7684\u3002\n\u4e0d\u4ec5\u5982\u6b64\uff0cReact\u53ca\u5176\u4f7f\u7528\u94a9\u5b50\u7ba1\u7406\u72b6\u6001\u7684\u529f\u80fd\u6027\u65b9\u6cd5\u5df2\u7ecf\u6210\u4e3a\u524d\u7aefweb\u5f00\u53d1\u793e\u533a\u4e2d\u4e8b\u5b9e\u4e0a\u7684JavaScript UI\u5e93\u3002\u5373\u4f7f\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u5728\u91c7\u7528\u4e0a\u843d\u540e\u4e8e\u547d\u4ee4\u5f0f\u6216\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u5b83\u4eec\u7684\u6280\u672f\u548c\u7279\u6027\u4e5f\u8d8a\u6765\u8d8a\u4e30\u5bcc\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec&#39\uff1b\u4f60\u73b0\u5728\u4e0d\u53ef\u907f\u514d\u4e86\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0cRacket\u662f\u4e00\u79cd\u4f18\u79c0\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5728\u6211\u770b\u6765\uff0c\u5bf9\u4e8e\u65b0\u624b\u548c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\u90fd\u662f\u4e00\u79cd\u5f88\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u5de5\u5177\u3002\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u6211\u7684\u540c\u9f84\u4eba\u56e0\u4e3a\u6211\u8ba4\u4e3a\u662f\u975e\u7406\u6027\u7684\u539f\u56e0\u800c\u62b1\u6028\u8fd9\u79cd\u8bed\u8a00\u65f6\uff0c\u6211\u4f1a\u611f\u5230\u6cae\u4e27\u3002\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u559c\u6b22\u6216\u66f4\u559c\u6b22Racket\u4e2d\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u4f46\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u81f3\u5c11\u80fd\u5e2e\u52a9\u5176\u4e2d\u4e00\u4e9b\u4eba\u6b23\u8d4f\u5b83\u7684\u4ef7\u503c\u3002", "note_en": "~/blog/why-learn-racket      I&#39;m a student at Grinnell College, a small liberal arts school in Iowa. Here, the computer science department uses Racket in its intro course, which focuses on functional programming and is aimed at all students (majors, non-majors, and those with and without prior programming experience.) After taking the course myself last fall, this semester I am working as a student mentor for the course, where I help students during in-class labs and hold weekly review sessions.\n Grinnell is far from alone in its choice to use Racket or Scheme in its introductory CS course. Perhaps the most well known Scheme course is MIT&#39;s 6.001, which began in 1980 and taught computer science using the book  Structure and Interpretation of Computer Programs. MIT replaced their Scheme curriculum with a Python course in 2008, but other universities like Brown, Northeastern, and Indiana maintain Scheme or Racket in their first courses. Still, perhaps following MIT&#39;s lead, the use of Racket for an intro course is still relatively rare among CS undergraduate programs.\n Given that Racket isn&#39;t a widely popular language, several students at Grinnell, often those who enter the class with prior experience in more popular languages like Python or Java, ask why it&#39;s chosen for Grinnell&#39;s first course. I&#39;ve also heard frustrated students wonder why they&#39;re wasting their time on a &#34;useless&#34; language, when they could learn a language that will help them get a job instead. Our professor gives an answer to those who ask, and there are other resources I&#39;ve seen such as Matthew Butterick&#39;s excellent piece,  Why Racket? Why Lisp?, but here I&#39;d like to share my own opinion on why I think learning Racket is worthwhile.\n I think Racket is a great first language to learn, but in this post, I&#39;d like to concentrate on programmers, college-bound or otherwise, who have some experience in a mainstream language like Python, JavaScript, or Java, but are hesitant or unsure of the value in learning a functional programming language like Racket.\n  Racket, and Lisps more generally, are often touted as languages with the simplest syntax. In Racket, every form is an expression, which is either an atomic value like a string or number, or a list beginning with a procedure or a special form. This syntax stands in contrast to a language like Python, which has strict rules for which forms may be used as expressions and which must be statements.\n I think this advantage is sometimes overstated by Lisp enthusiasts. Although Python&#39;s syntax may not be as simple, it does have its own kind of elegance once a user learns its syntactic rules. Where Lisp-style syntax does have an advantage, however, is in the power of its mental evaluation model. When evaluating Racket code, we always evaluate the innermost parentheses first, replacing procedure calls with their appropriate body, except for a few special forms.\n   To evaluate this, we replace  map with the body of its definition, substituting the arguments in place, and then continue with normal evaluation. We can trace an abbreviated version like this:\n (map sqr &#39;( 2 4 8 ))-&gt; ( if  (null? &#39;( 2 4 8 ))  null  (cons (sqr (car &#39;( 2 4 8 ))) (map sqr (cdr &#39;( 2 4 8 )))))-&gt; (cons  4  (map sqr &#39;( 4 8 )))-&gt; ...-&gt; (cons  4  (cons  16  (cons  64 null )))-&gt; &#39;( 4 16 64 )\n Following the trace, we an see that there is nothing magical about  map, it&#39;s just a procedure that evaluates like any other. Compare that now to the equivalent list comprehension in Python:\n  How can we mentally evaluate this? For that we need remember the specific &#34;magical&#34; syntax and semantics for evaluating Python&#39;s for-comprehension expressions, which look similar yet act completely differently than for-loop statements.\n Racket has special forms too like  let and  if for which evaluation strategies must be learned, but these are generally more limited and intuitive than the syntax found in Python or Java.\n   In just a few simple lines of Java&#39;s canonical &#34;hello world&#34; example, we&#39;ve made several declarations with special rules for evaluation ( public,  class,  static, the dot operator, etc.) These all must be understood before a Java programmer can know much of anything about what their program is actually doing.\n Java was the first programming language that I learned, so I know from first-hand experience that the result is that beginners to the language usually just accept that they can&#39;t fully understand how even a simple program like this is evaluated. They&#39;re forced to accept that learning to program involves memorizing seemingly arbitrary rules for structuring their code. Beginner Racket programmers face no such imposition, as its evaluation is much more intuitive, which I see as a clear advantage in its use as a teaching language.\n Even if you are an experienced Python or Java programmer that knows exactly how every part of the language can be evaluated, I still think that exposure to Racket&#39;s evaluation model is worthwhile. Modeling how Racket code is transformed builds your intuition as a programmer for how different pieces of code decompose and fit together in a way that users of other languages usually don&#39;t directly consider. I think that strengthening these fundamentals builds intuition for quickly grasping evaluation in other languages.\n  Learning Racket often involves working with a more limited set of tools than the ones offered in other languages. Loops and mutation, for instance, which are core features in other languages, are usually off-limits to beginners in Racket\n While there are genuine aesthetic advantages to a language built with a small core, namely in how it can be concisely defined and implemented, I think it&#39;s important not to overstate these in comparison to the material advantages of a small language as well.\n The focus on minimalism in Racket initially forces even experienced programmers to step out of their comfort zone in how they structure their code, and ultimately, how they solve problems. For experienced programmers, I think there is great value in learning fundamentally different ways to approach a problem. This kind of experience pushes the bounds of one&#39;s knowledge and adds to a &#34;bag of tricks&#34; that allow one to solve more difficult or novel problems.\n  Let&#39;s talk about recursion, because I think that learning to use recursion as a general-purpose control structure is one of the most important consequences of gaining fluency in Racket.\n When programmers in other languages are introduced to recursion, it&#39;s usually to display an alternative and niche solution to some problems. Canonical examples like calculating a factorial or the nth Fibonacci number are given, even though these toy examples seem useless to programming at large. Additionally, programmers are often warned not to use recursion at all because of stack overflow concerns.\n Recursion, however, is a much more powerful tool than these beginner tutorials let on. Indeed, without loops and mutation, recursion is the main tool employed in Racket to manage repetition and state, and learning to use it as such is one of the most challenging aspects of learning the language for beginner and experienced programmers alike.\n The key to programming with recursion isn&#39;t that it can be used to implement recursive mathematical definitions, but instead that it&#39;s a general tool for breaking down a single difficult problem into several easier ones. This decomposition into sub-problems is, in fact, what allows recursion to work at all.\n Let&#39;s look at an example, comparing an iterative and recursive design of a  sum procedure. Here is a standard iterative approach in Python:\n  This approach follows directly from how most people would answer the question  &#34;how do you sum a list of numbers?&#34; Well, start with zero, then add each value to the total until we reach the end.\n Implementing  sum recursively, however, requires a different mindset. Instead, our strategy will be to ask two questions: First,  &#34;what&#39;s the sum of an empty list?&#34; Okay, obviously zero. Next,  &#34;if we know the sum of all but the first element in a list, what&#39;s the total sum?&#34; Here we can find this by adding the value of the first element to the sum of the rest.\n   This line of thinking is certainly not intuitive to someone unfamiliar with recursive design. However, it importantly forces us to split our design into two sub-problems: first solving the base case, and then breaking down the recursive step into what can be handled by the recursive call, and what we must do at each stage.\n Recognizing the value to thinking recursively can be difficult, since it&#39;s not obvious why adopting an inherently less intuitive strategy to problem solving is helpful. But the beauty of recursion lies how it allows us to solve difficult problems and manage state with inherently less powerful tools (no mutation or loops), and how that simplicity rewards experienced programmers with the ability to quickly break down difficult problems.\n Recursion isn&#39;t a silver-bullet, but it&#39;s a fundamental tool that&#39;s worth understanding, even if functional programmers usually prefer to use more specific and safer tools built on top of recursion like higher-order procedures or comprehensions.\n  Even if all this waxing about recursion is true, one may still wonder why to choose Racket when recursion is available in every other programming language as well. The answer is that Racket, like most other functional languages, is designed to make recursive design more ergonomic and natural.\n First, every Racket procedure implicitly returns the final expression, so there is no possibility of writing a foot-gun recursive procedure that doesn&#39;t return a value. Additionally, core forms in the language are designed to discourage imperative programming. For example, an  if expression must include truthy and false branches, so it&#39;s more difficult for one to forget to include a base case.\n Perhaps most important, however, is the core placement of the list data structure. Lists are an inherently recursive data structure, as they&#39;re either  null or  cons of some value and another list. Recursive design over  cons lists is natural, so their central placement in Racket makes using recursion a natural choice.\n Compare that to using recursion in a language like Python. There the primary list data structure is an indexed dynamic array. Although one can translate the same recursive algorithms one would write with  cons and  cdr in Racket to Python, doing so would not only be unnatural, but also goes against the ethos of Python. And really, the same would go for a translation to other popular imperative languages.\n Racket is advantageous for recursive design from the perspective of performance, rather than just pedagogy, too. Importantly, Racket guarantees  tail call optimization, which means that recursive functions designed to exploit tail recursion won&#39;t explode the memory on the stack as they would in imperative languages like Python and Java.\n  Now that I have extolled the virtues of learning Racket, I want to add that the choice of a programming language is less important than you might think. One of the main areas of frustration I see from fellow students essentially boils down to the following question:  &#34;Why should I learn Racket when I could spend that time learning a language that people actually use?&#34; On the surface, this question makes some sense. Time and effort are scarce resources that should be allocated wisely, but I think asking this question misses a vital point: that  programming is much more difficult to learn than a  programming language.\n I don&#39;t want to trivialize the effort needed to learn a new language, especially one like Racket that looks so different than popular C-like languages. But the syntax and specific features of a given language still only make up a small part of the knowledge required to master programming in general, in that language or any other. Indeed, experienced programmers can learn a new language much faster than novices, since they already know most of the concepts that underlie the new language, so they can focus on picking up the syntax or learning language-specific features instead.\n When a Racket programmer picks up JavaScript for the first time, they already know how to use anonymous functions, closures and higher-order functions, so they only need to map their existing knowledge onto JavaScript&#39;s syntax and focus on its distinct features. This advantage only increases over time, since the more languages that one learns, the more knowledge bases one has to draw on when picking up a new language.\n So yes, you will have to invest time into learning the specifics of Racket, but the reward for that effort is that most of the knowledge obtained will pay dividends when you do move on to other languages. And because the core of Racket is so small and so expressive, it allows users to quickly dive into those more difficult yet ultimately more valuable aspects of programming, rather than getting bogged down in the heavy syntax and quirkiness found in languages like Java.\n  The benefits of functional programming are often extolled from an intellectual point-of-view. The story goes that functional programming&#39;s focus on purity and statelessness will carry over to produce better results in imperative programming languages that de-emphasize those aspects. I agree with this sentiment, since I feel as though programming in a near-functional style is a useful default in any language, while still reaching for mutation and state when they&#39;re needed.\n That being said, even if the large majority of programmers and engineers in industry use non-functional languages, to say that functional programming by itself is entirely useless in practice is inaccurate.\n This summer, for instance, I will be working as a software engineer intern for a company that uses Clojure in its back end, an opportunity that I only could have gotten because of my experience with Racket. I say this not to brag, but to point out that if you want to work with functional programming professionally, you may be able to get by even if Racket is the only language on your resume.\n The functional programming community is certainly smaller than others in software engineering, but that&#39;s not entirely a bad thing. In my (albeit limited) experience, smaller opportunities can often be more accessible and more rewarding than flagship job or internship programmers that attract a massive amount of applications. In the end, every applicant needs something that makes them stand out, and if functional programming is their passion, that could be it.\n Additionally, and perhaps more importantly, even if the functional programming community within software engineering is relatively small, the importance of functional tools and techniques in almost every modern language has recently grown considerably.\n In the last few years, bastions of object-oriented programming like  Java and  C# have added support for lambda expressions, and  Python introduced structural pattern matching -- both important tools lifted from functional languages.\n Not only that, but  React, and its functional approach to managing state with hooks, has become the de-facto JavaScript UI library in the frontend web development community. Even if functional programming languages lag behind imperative or object-oriented ones in adoption, their techniques and features have increasingly bled over to the point that they&#39;re now unavoidable.\n  Racket is above all, an excellent programming language, and in my view, a valuable learning tool for novice and experienced programmers alike. That&#39;s why it frustrates me when my peers complain about the language for what I see as irrational reasons. Not everyone needs to love or prefer functional programming in Racket, but I hope this post at least helps some of those people appreciate its value.", "posttime": "2022-02-22 03:29:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7403\u62cd,learn,\u8bed\u8a00", "title": "\u4e3a\u4ec0\u4e48\u5b66\u7403\u62cd\uff1f\u5b66\u751f\u7684\u89c2\u70b9", "title_en": "Why learn Racket? A student's perspective", "transed": 1, "url": "https://www.micahcantor.com/blog/why-learn-racket/", "via": "", "real_tags": ["\u7403\u62cd", "learn", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074546, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52b3\u5de5\u8fd0\u52a8\u7ec8\u4e8e\u6765\u5230\u4e86\u82f9\u679c\u3002\u636e\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u62a5\u9053\uff0c\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u7684\u96f6\u552e\u4e1a\u5458\u5de5\u5f00\u59cb\u6084\u7136\u52a0\u5165\u5de5\u4f1a\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5f53\u82f9\u679c\u5229\u6da6\u7387\u98d9\u5347\u65f6\uff0c\u5c0f\u65f6\u5de5\u8d44\u4e00\u76f4\u505c\u6ede\u4e0d\u524d\u3002\n\u4e24\u4e2a\u95e8\u5e97\u6b63\u51c6\u5907\u5411\u5168\u56fd\u52b3\u52a8\u5173\u7cfb\u59d4\u5458\u4f1a\uff08NLRB\uff09\u63d0\u4ea4\u6587\u4ef6\uff0c\u53e6\u6709\u516d\u5bb6\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\uff0c\u4e0eWaPo\u8fdb\u884c\u533f\u540d\u4ea4\u8c08\u7684\u5458\u5de5\u8bf4\uff08\u5b8c\u5168\u62ab\u9732\uff1a\u8fd9\u4f4d\u8bb0\u8005\u5728\u51e0\u4e2a\u82f9\u679c\u96f6\u552e\u5e97\u5de5\u4f5c\u4e86\u51e0\u5e74\uff09\u3002\u636e\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u62a5\u9053\uff0c\u4e00\u4e2a\u7279\u522b\u6709\u8bf4\u670d\u529b\u7684\u7ec6\u8282\u662f\uff1a\u7531\u4e8e\u6000\u7591\u82f9\u679c\u7684\u7aa5\u63a2\u884c\u4e3a\uff0c\u8bb8\u591a\u7ec4\u7ec7\u8005\u5df2\u7ecf\u6539\u7528\u5b89\u5353\u624b\u673a\uff0c\u4ee5\u907f\u514d\u4efb\u4f55\u6f5c\u5728\u7684\u95f4\u8c0d\u6d3b\u52a8\u3002\n\u8fd9\u542c\u8d77\u6765\u6709\u70b9\u8038\u4eba\u542c\u95fb\uff0c\u4f46\u57282021\u82f9\u679c\u516c\u53f8\u89e3\u96c7\u4e86\u4e00\u4e2a\u540d\u53ebAshley Gj\u00b7\u7ef4\u514b\u7684\u96c7\u5458\uff0c\u4ed6\u6d89\u5acc\u6027\u9a9a\u6270\u3001\u73af\u5883\u95ee\u9898\u548c\u516c\u53f8\u7684\u76d1\u89c6\u3002\n\u5979\u5199\u9053\uff0c\u8fd9\u5bb6\u5927\u516c\u53f8\u201c\u6709\u4e00\u79cd\u76d1\u89c6\u3001\u6050\u5413\u548c\u758f\u8fdc\u7684\u5185\u90e8\u6587\u5316\u201d\u3002\u201c\u5458\u5de5\u53d7\u5230\u5bc6\u5207\u76d1\u63a7\uff0c\u6211\u4eec\u4ee5\u4fdd\u5bc6\u548c\u9ad8\u8d28\u91cf\u7684\u540d\u4e49\u56e4\u79ef\u6570\u636e\u3002\u201d\n2011\u5e74\uff0c\u300a\u8fde\u7ebf\u300b\u62a5\u9053\u79f0\uff0c\u82f9\u679c\u5458\u5de5\u6d89\u5acc\u5728\u4e00\u6b21\u516c\u5bd3\u641c\u67e5\u4e2d\u5047\u626e\u8b66\u5bdf\uff0c\u4ee5\u627e\u56deiPhone\u539f\u578b\u3002\n\u5f53\u7136\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u82f9\u679c\u662f\u5426\u771f\u7684\u5728\u76d1\u89c6\u7ec4\u7ec7\u8005\u7684iPhone\u2014\u2014\u5982\u679c\u88ab\u53d1\u73b0\u8fd9\u6837\u505a\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u76d1\u7ba1\u673a\u6784\u90a3\u91cc\u9047\u5230\u5de8\u5927\u9ebb\u70e6\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u5e0c\u671b\u4e0d\u4f1a\u3002\u5458\u5de5\u6709\u7ec4\u7ec7\u7684\u6743\u5229\uff0c\u4ed6\u4eec\u5e94\u8be5\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u516c\u53f8\u7684\u76d1\u7763\u3002\n\u5173\u5fc3\u652f\u6301\u91c7\u7528\u6e05\u6d01\u80fd\u6e90\u5417\uff1f\u770b\u770b\u6709\u591a\u5c11\u94b1\uff08\u8fd8\u6709\u661f\u7403\uff01\uff09\u4f60\u53ef\u4ee5\u5728UnderstandSolar\u4f7f\u7528\u592a\u9633\u80fd\u6765\u8282\u7ea6\u80fd\u6e90\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u901a\u8fc7\u8fd9\u4e2a\u94fe\u63a5\u6ce8\u518c\uff0c\u672a\u6765\u4e3b\u4e49\u3002com\u53ef\u80fd\u4f1a\u6536\u5230\u5c11\u91cf\u4f63\u91d1\u3002", "note_en": "The labor movement has finally made its way to Apple. According  to the  Washington Post, retail employees at the tech giant are beginning to quietly unionize, in part because hourly wages have remained stagnant while Apple\u2019s profit margins soar.\n Two store locations are preparing to file paperwork with the National Labor Relations Board\u00a0(NLRB) and a half dozen more are in earlier stages, said employees who spoke to  WaPo on the condition of anonymity (full disclosure: this reporter spent several years working at several Apple retail locations). One particularly telling detail, according to  WaPo: suspicious of snooping by Apple, many organizers have switched to Android phones to avoid any potential spying.\n  That\u00a0might sound alarmist, but in 2021  Apple fired an employee named Ashley Gj\u00f8vik\u00a0who alleged sexual harassment, environmental concerns and surveillance at the company.\n The megacorporation \u201chas an internal culture of surveillance, intimidation, and alienation,\u201d she  wrote. \u201cEmployees are closely monitored and our data hoarded in the name of secrecy and quality.\u201d\n   And in 2011,   Wired reported that Apple employees allegedly posed as fake police officers during an apartment raid in order to recover an iPhone prototype.\n Of course, it\u2019s not clear whether Apple is actually spying on organizers\u2019 iPhones \u2014 and if it got caught doing so, it would likely get in huge trouble with regulators.\n In any case, let\u2019s hope not. Employees have the right to organize, and they should be able to do so without the fear of corporate surveillance.\n     Care about supporting clean energy adoption? Find out how much money (and planet!) you could save by switching to solar power at  UnderstandSolar.com. By signing up through  this link, Futurism.com may receive a small commission.", "posttime": "2022-02-22 03:28:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,android,\u624b\u673a,apple,\u96f6\u552e", "title": "\u82f9\u679c\u96f6\u552e\u5458\u5de5\u7ec4\u7ec7\u4e86\u4e00\u4e2a\u4f7f\u7528\u5b89\u5353\u624b\u673a\u7684\u5de5\u4f1a\uff0c\u4ee5\u9632\u6b62\u95f4\u8c0d\u6d3b\u52a8", "title_en": "Apple retail employees organize a union using Android phones to prevent spying", "transed": 1, "url": "https://futurism.com/the-byte/apple-union-android", "via": "", "real_tags": ["\u82f9\u679c", "android", "\u624b\u673a", "apple", "\u96f6\u552e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074545, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\uff08CSAIL\uff09\u7684\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u521b\u9020\u4e86Twist\uff0c\u4e00\u79cd\u65b0\u7684\u91cf\u5b50\u8ba1\u7b97\u7f16\u7a0b\u8bed\u8a00\u3002Twist\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u8ba9\u5f00\u53d1\u4eba\u5458\u66f4\u5bb9\u6613\u8bc6\u522b\u54ea\u4e9b\u6570\u636e\u7247\u6bb5\u88ab\u7ea0\u7f20\uff0c\u4ece\u800c\u4f7f\u4ed6\u4eec\u80fd\u591f\u521b\u5efa\u9519\u8bef\u66f4\u5c11\u3001\u66f4\u5bb9\u6613\u8c03\u8bd5\u7684\u91cf\u5b50\u7a0b\u5e8f\u3002\nTwist\u7684\u57fa\u7840\u5728\u4e8e\u8bc6\u522b\u7ea0\u7f20\uff0c\u5373\u91cf\u5b50\u8ba1\u7b97\u673a\u4e2d\u4e24\u4e2a\u6570\u636e\u6bb5\u7684\u72b6\u6001\u76f8\u4e92\u5173\u8054\u7684\u73b0\u8c61\u3002\u201c\u6bcf\u5f53\u4f60\u5bf9\u4e00\u6bb5\u7ea0\u7f20\u7684\u6570\u636e\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u53e6\u4e00\u6bb5\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u5b9e\u73b0\u5f3a\u5927\u7684\u91cf\u5b50\u7b97\u6cd5\uff0c\u4f46\u5b83\u4e5f\u4f1a\u4f7f\u4f60\u5bf9\u81ea\u5df1\u7f16\u5199\u7684\u7a0b\u5e8f\u8fdb\u884c\u63a8\u7406\u53d8\u5f97\u4e0d\u76f4\u89c2\uff0c\u5e76\u4e14\u5bb9\u6613\u5f15\u5165\u5fae\u5999\u7684\u9519\u8bef\uff0c\u201dCharles Yuan\u8bf4\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662CSAIL\u8ba1\u7b97\u673a\u79d1\u5b66\u535a\u58eb\u751f\uff0c\u5173\u4e8eTwist\u7684\u8bba\u6587\u7684\u4e3b\u8981\u4f5c\u8005\uff0c\u53d1\u8868\u5728\u300aACM\u7f16\u7a0b\u8bed\u8a00\u5b66\u62a5\u300b\u4e0a\u3002\n\u201cTwist\u6240\u505a\u7684\u662f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8bf4\u51fa\u54ea\u4e9b\u6570\u636e\u88ab\u7ea0\u7f20\uff0c\u54ea\u4e9b\u6570\u636e\u6ca1\u6709\u88ab\u7ea0\u7f20\uff0c\u201d\u8881\u8bf4\u3002\u201c\u901a\u8fc7\u5728\u7a0b\u5e8f\u4e2d\u5305\u542b\u6709\u5173\u7ea0\u7f20\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u68c0\u67e5\u91cf\u5b50\u7b97\u6cd5\u662f\u5426\u6b63\u786e\u5b9e\u73b0\u3002\u201d\n\u8be5\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u70b9\u662f\u7c7b\u578b\u7cfb\u7edf\uff0c\u5b83\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u6307\u5b9a\u7a0b\u5e8f\u4e2d\u54ea\u4e9b\u8868\u8fbe\u5f0f\u548c\u6570\u636e\u7247\u6bb5\u662f\u7eaf\u7684\u3002\u8881\u8bf4\uff0c\u7eaf\u6570\u636e\u6ca1\u6709\u7ea0\u7f20\uff0c\u56e0\u6b64\u6ca1\u6709\u53ef\u80fd\u7684\u9519\u8bef\u548c\u7ea0\u7f20\u9020\u6210\u7684\u975e\u76f4\u89c2\u5f71\u54cd\u3002Twist\u8fd8\u5177\u6709\u7eaf\u5ea6\u65ad\u8a00\u64cd\u4f5c\u7b26\uff0c\u7528\u4e8e\u786e\u8ba4\u8868\u8fbe\u5f0f\u6ca1\u6709\u4e0e\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u7247\u6bb5\u7ea0\u7f20\uff0c\u4ee5\u53ca\u9759\u6001\u5206\u6790\u548c\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u4ee5\u9a8c\u8bc1\u8fd9\u4e9b\u65ad\u8a00\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u8fd9\u79cd\u8bed\u8a00\uff0c\u8be5\u56e2\u961f\u7528Twist\u4e3a\u4e00\u7ec4\u8457\u540d\u7684\u91cf\u5b50\u7b97\u6cd5\u7f16\u5199\u4e86\u7a0b\u5e8f\uff0c\u5e76\u5728\u91cf\u5b50\u6a21\u62df\u5668\u4e0a\u6267\u884c\u3002\u8881\u8bf4\uff1a\u201c\u6211\u4eec\u8fdb\u884c\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u8fd0\u884c\u8fd9\u4e9b\u8fd0\u884c\u65f6\u68c0\u67e5\u7684\u5f00\u9500\u6bd4\u8fd0\u884c\u57fa\u672c\u7a0b\u5e8f\u7684\u5f00\u9500\u4e0d\u8d85\u8fc73.5%\uff0c\u6211\u4eec\u8ba4\u4e3a\u57fa\u672c\u7a0b\u5e8f\u7684\u5f00\u9500\u76f8\u5f53\u4f4e\uff0c\u5728\u8bed\u8a00\u63d0\u4f9b\u7684\u5b89\u5168\u4fdd\u8bc1\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6743\u8861\u3002\u201d\u3002\n\u8be5\u56e2\u961f\u8fd8\u5411\u4e00\u4e9b\u7a0b\u5e8f\u5f15\u5165\u4e86\u5c0f\u9519\u8bef\uff0c\u5e76\u53d1\u73b0Twist\u53ef\u4ee5\u68c0\u6d4b\u5230\u8fd9\u4e9b\u9519\u8bef\u5e76\u62d2\u7edd\u9519\u8bef\u7684\u7a0b\u5e8f\u3002\u201c\u6211\u4eec\u5e0c\u671b\uff0c\u5f53\u4eba\u4eec\u4f7f\u7528\u6211\u4eec\u7684\u8bed\u8a00\u6216\u4e3a\u4ed6\u4eec\u7684\u7279\u5b9a\u7528\u4f8b\u8bbe\u8ba1\u65b0\u7684\u91cf\u5b50\u8bed\u8a00\u65f6\uff0c\u4ed6\u4eec\u5c06\u80fd\u591f\u770b\u5230\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u5e76\u8bf4\u4ed6\u4eec\u60f3\u8981\u7eaf\u51c0\u7684\u60f3\u6cd5\uff0c\u5e76\u5c06\u7ea0\u7f20\u4f5c\u4e3a\u4e00\u79cd\u529f\u80fd\uff0c\u56e0\u4e3a\u8fd9\u5c06\u8ba9\u4ed6\u4eec\u66f4\u6709\u4fe1\u5fc3\uff0c\u4ed6\u4eec\u7684\u7a0b\u5e8f\u662f\u6b63\u786e\u7684\uff0c\u800c\u4e0d\u5fc5\u8fd0\u884c\u5f88\u591a\u6602\u8d35\u7684\u7a0b\u5e8f\u201c\u6a21\u62df\u548c\u6d4b\u8bd5\uff0c\u201d\u8881\u8bf4\u3002\n\u867d\u7136\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u81f4\u529b\u4e8e\u6784\u5efa\u9ad8\u6548\u4f18\u5316\u7684\u91cf\u5b50\u786c\u4ef6\uff0c\u4f46Twist\u65e8\u5728\u586b\u8865\u91cf\u5b50\u8f6f\u4ef6\u9886\u57df\u7684\u7a7a\u767d\u3002\u201c\u4e0e\u6211\u4eec\u5728\u673a\u5668\u5b66\u4e60\u548c\u5176\u4ed6\u9ad8\u6027\u80fd\u8ba1\u7b97\u5e94\u7528\u4e2d\u770b\u5230\u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u5728\u786c\u4ef6\u5f00\u53d1\u7684\u6bcf\u4e00\u4e2a\u65b0\u9636\u6bb5\uff0c\u6211\u4eec\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u7cfb\u7edf\u548c\u6f5c\u5728\u7684\u65b0\u529f\u80fd\u2014\u2014\u901a\u8fc7\u5229\u7528\u786c\u4ef6\uff0c\u53ef\u80fd\u4f1a\u6709\u8bb8\u591a\u96be\u4ee5\u7f6e\u4fe1\u7684\u673a\u4f1a\u3002\u4f46\u51e0\u4e4e\u603b\u662f\u8f6f\u4ef6\u6218\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u526f\u6559\u6388\u3001\u5173\u4e8eTwist\u7684\u8bba\u6587\u5408\u8457\u8005\u8fc8\u514b\u5c14\u00b7\u5361\u5bbe\uff08Michael Carbin\uff09\u8bf4\uff1a\u201c\u8fd9\u963b\u788d\u4e86\u4eba\u4eec\u8bbf\u95ee\u8be5\u786c\u4ef6\uff0c\u5e76\u80fd\u591f\u90e8\u7f72\u5b83\uff0c\u5e76\u5728\u4e0d\u540c\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u5b83\u3002\u201d\u6211\u4eec\u6b63\u5728\u505a\u7684\u5927\u91cf\u5de5\u4f5c\u662f\u5960\u5b9a\u4e00\u4e9b\u57fa\u7840\uff0c\u5e76\u8bd5\u56fe\u68b3\u7406\u51fa\u4e00\u4e9b\u6838\u5fc3\u62bd\u8c61\u6982\u5ff5\uff0c\u8fd9\u4e9b\u62bd\u8c61\u6982\u5ff5\u53ef\u80fd\u4f1a\u4f7f\u8fd9\u4e9b\u7c7b\u578b\u7684\u8bbe\u5907\u66f4\u5177\u53ef\u7f16\u7a0b\u6027\u3002\"\n\u7136\u800c\uff0c\u8be5\u56e2\u961f\u5728\u6784\u5efaTwist\u65f6\u9762\u4e34\u7684\u4e00\u4e2a\u6311\u6218\u662f\uff0c\u7f3a\u4e4f\u4e00\u4e2a\u91cf\u5b50\u7a0b\u5e8f\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u6807\u51c6\u3002\u8881\u8bf4\uff1a\u201c\u591a\u5e74\u6765\uff0c\u4eba\u4eec\u5df2\u7ecf\u5f00\u53d1\u51fa\u6838\u5fc3\u7b97\u6cd5\u6765\u89e3\u51b3\u5355\u4e2a\u590d\u6742\u4efb\u52a1\uff0c\u6bd4\u5982\u6574\u6570\u5206\u89e3\uff0c\u4f46\u6211\u4eec\u5982\u4f55\u4e3a\u5176\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u8fd8\u4e0d\u592a\u6e05\u695a\u3002\u201d\u3002\u201c\u901a\u8fc7Twist\uff0c\u6211\u4eec\u80fd\u591f\u56f4\u7ed5\u6211\u4eec\u60f3\u8981\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u7684\u4efb\u52a1\u7684\u6700\u4f73\u5171\u8bc6\u6784\u5efa\u8bed\u8a00\uff0c\u5e76\u4f7f\u5176\u5c3d\u53ef\u80fd\u8868\u8fbe\u8fd9\u4e9b\u4efb\u52a1\u3002\u201d\n\u5c31\u5c40\u9650\u6027\u800c\u8a00\uff0cTwist\u53ea\u80fd\u544a\u8bc9\u4f60\u4e00\u6bb5\u6570\u636e\u662f\u5426\u4e0e\u5176\u4ed6\u6570\u636e\u7ea0\u7f20\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u80fd\u544a\u8bc9\u4f60\u5b83\u4eec\u662f\u5982\u4f55\u7ea0\u7f20\u5728\u4e00\u8d77\u7684\u3002\u8881\u8bf4\uff1a\u201c\u5b83\u4eec\u7ea0\u7f20\u7684\u786e\u5207\u65b9\u5f0f\u5c06\u51b3\u5b9a\u91cf\u5b50\u7b97\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u4f46\u6570\u636e\u7ea0\u7f20\u7684\u65b9\u5f0f\u6709\u65e0\u6570\u79cd\u3002\u201d\u3002\u201c\u80fd\u591f\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u7ec6\u8282\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6311\u6218\uff0c\u8fd9\u662f\u6211\u4eec\u672a\u6765\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002\u201d\n\u8be5\u56e2\u961f\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u53e6\u4e00\u79cd\u57fa\u4e8eTwist\u7684\u8bed\u8a00\uff0c\u4ee5\u89e3\u51b3\u76f8\u4f4d\u548c\u53e0\u52a0\u7b49\u5176\u4ed6\u91cf\u5b50\u73b0\u8c61\uff0c\u4f46\u4ed6\u4eec\u5e0c\u671bTwist\u5c06\u4e3a\u521b\u5efa\u66f4\u597d\u7684\u91cf\u5b50\u7a0b\u5e8f\u94fa\u5e73\u9053\u8def\u3002\n\u201c\u5bf9\u4e8e\u8bd5\u56fe\u5b9e\u73b0\u91cf\u5b50\u7b97\u6cd5\u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4ed6\u4eec\u9700\u8981\u8bed\u8a00\u4e2d\u5185\u7f6e\u7684\u5de5\u5177\u6765\u544a\u8bc9\u4ed6\u4eec\u7a0b\u5e8f\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u7531\u7ea0\u7f20\u5f15\u8d77\u7684\uff0c\u201d\u8881\u8bf4\u3002\u201c\u5982\u679c\u6211\u4eec\u80fd\u591f\u6784\u5efa\u6838\u5fc3\u8bed\u8a00\u539f\u5219\u548c\u529f\u80fd\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5bf9\u7ea0\u7f20\u8fdb\u884c\u63a8\u7406\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7ea0\u7f20\u51cf\u5c11\u8ba4\u77e5\u8d1f\u62c5\uff0c\u5e76\u8ba9\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u66f4\u76f4\u89c2\u7684\u7a0b\u5e8f\u3002\u201d\n\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u671d\u7740\u6210\u672c\u6548\u76ca\u548c\u8fdb\u4e00\u6b65\u6539\u8fdb\u7684\u53ef\u80fd\u6027\u8fc8\u8fdb\u7684\u4e00\u5927\u6b65\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u4e00\u5b9a\u4f1a\u4e30\u5bcc\u91cf\u5b50\u7f16\u7a0b\u3002", "note_en": "A team of researchers at MIT\u2019s  Computer Science and Artificial Intelligence Laboratory (CSAIL) have created Twist, a new programming language for quantum computing. Twist is designed to make it easier for developers to identify which pieces of data are entangled, thereby allowing them to create quantum programs that have fewer errors and are easier to debug.\n Twist\u2019s foundations lie in identifying  entanglement, a phenomenon wherein the states of two pieces of data inside a quantum computer are linked to each other. \u201cWhenever you perform an action on one piece of an entangled piece of data, it may affect the other one. You can implement powerful quantum algorithms with it, but it also makes it unintuitive to reason about the programs you write and easy to introduce subtle bugs,\u201d says  Charles Yuan, a Ph.D. student in computer science at MIT CSAIL and lead author on the  paper about Twist, published in the journal   Proceedings of the ACM on Programming Languages.\n \u201cWhat Twist does is it provides features that allow a developer to say which pieces of data are entangled and which ones aren\u2019t,\u201d Yuan says. \u201cBy including information about entanglement inside a program, you can check that a quantum algorithm is implemented correctly.\u201d\n One of the language\u2019s features is a  type system that enables developers to specify which expressions and pieces of data within their programs are pure. A pure piece of data, according to Yuan, is free from entanglement, and thereby free from possible bugs and unintuitive effects caused by entanglement. Twist also has purity assertion operators to affirm that an expression lacks entanglement with any other piece of data, as well as static analyses and run-time checks to verify these assertions.\n  To evaluate the language, the team wrote programs in Twist for a set of well-known quantum algorithms and executed them on a quantum simulator. \u201cWe performed experiments that showed the overhead of running these runtime checks is no more than 3.5 percent over running the base program, which we believe is fairly low and a good trade-off for the safety guarantees the language gives you,\u201d Yuan says.\n The team also introduced small bugs to some of the programs and found that Twist can detect those bugs and reject the erroneous programs. \u201cWe hope that when people use our language or design new quantum languages for their specific use cases, they\u2019ll be able to look at our work and say that the idea of purity and having entanglement as a feature is something they want because it will give them more confidence that their programs are correct without having to run a lot of expensive simulation and testing,\u201d says Yuan.\n While many researchers are focused on  building efficient and optimized quantum hardware, Twist aims to fill the gap in quantum software. \u201cDrawing some parallels to what we\u2019re seeing with machine learning and other high-performance computing applications\u2014where with every new phase of hardware development we get a new system and potentially new capabilities\u2014 there are perhaps many incredible opportunities to be had by harnessing the hardware. But it almost always is the software that stands in the way of people having access to that hardware and being able to deploy it and use it widely in different software systems,\u201d says  Michael Carbin, an associate professor at MIT and coauthor of the paper about Twist. \u201cA lot of the work we\u2019re doing is laying some of the foundations and trying to tease out what some of the core abstractions are that may make these types of devices more programmable.\u201d\n Yet one of the challenges the team faced in building Twist is the lack of a standard for what quantum programs should look like. \u201cOver the years, people have developed core algorithms to solve individually complex tasks like factoring integers, but it\u2019s less clear how we can build an entire ecosystem of software for it,\u201d Yuan says. \u201cWith Twist, we were able to build the language around our best consensus of the tasks we want to perform on quantum computers and make it as expressive as possible for those tasks.\u201d\n In terms of limitations, Twist can only tell you whether or not a piece of data is entangled with other pieces of data, but not how they\u2019re entangled. \u201cThe exact way they\u2019re entangled is what will determine whether a quantum algorithm is correct, but there are an infinite number of ways in which data can be entangled,\u201d says Yuan. \u201cIt\u2019s a real challenge to be able to give that finer-grained detail, and it\u2019s something we\u2019ll need to do in the future.\u201d\n  The team is now working on another language that builds upon Twist to tackle other quantum phenomena such as phase and superposition, but they hope Twist will pave the way for creating better quantum programs.\n \u201cFor a developer trying to implement a quantum algorithm, they need the tools built into the language to tell them something is happening in their program that\u2019s caused by entanglement,\u201d Yuan says. \u201cIf we can build core language principles and features that allow a developer to reason about entanglement, we can make it so entanglement is less of a cognitive burden, and allow developers to write more intuitive programs.\u201d\n  This is much of a great leap towards something which would be cost effective and with possibilities to improve it further, we can hope it would surely enrich the quantum programming.", "posttime": "2022-02-22 03:25:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u9ebb\u7701\u7406\u5de5\u5b66\u9662,mit,\u91cf\u5b50", "title": "Twist\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00", "title_en": "Twist: MIT\u2019s Quantum Programming Language", "transed": 1, "url": "https://spectrum.ieee.org/quantum-programming-language-twist", "via": "", "real_tags": ["\u7f16\u7a0b", "\u9ebb\u7701\u7406\u5de5\u5b66\u9662", "mit", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074543, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u62a5\u9053\uff0cAirTags\u88ab\u8d8a\u6765\u8d8a\u591a\u5730\u7528\u4e8e\u6076\u610f\u76ee\u7684\u540e\uff0c\u82f9\u679c\u53d1\u5e03\u4e86\u4e00\u4efd\u58f0\u660e\uff0c\u5217\u51fa\u4e86\u5176\u5f53\u524d\u548c\u672a\u6765\u9632\u6b62\u6ee5\u7528\u7684\u52aa\u529b\n\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2aAirTag\u514b\u9686\uff0c\u5b83\u7ed5\u8fc7\u4e86\u6240\u6709\u8fd9\u4e9b\u8ddf\u8e2a\u4fdd\u62a4\u529f\u80fd\uff0c\u5e76\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u5b9e\u9a8c\u4e2d\u8bc1\u5b9e\u4e86\u5b83\u7684\u6709\u6548\u6027\uff08\u8fd9\u91cc\u63d0\u4f9b\u4e86\u6e90\u4ee3\u7801\uff09\n\u6211\u4eec\u9f13\u52b1\u82f9\u679c\u5728\u8ba1\u5212\u4e0b\u4e00\u6b21\u6539\u53d8\u201c\u53d1\u73b0\u6211\u7684\u751f\u6001\u7cfb\u7edf\u201d\u65f6\uff0c\u5c06AirTag\u514b\u9686/\u4fee\u6539\u540e\u7684AirTag\u7eb3\u5165\u5176\u5a01\u80c1\u6a21\u578b\n\u6700\u8fd1\uff0c\u5173\u4e8e\u822a\u7a7a\u6807\u7b7e\u88ab\u7528\u6765\u8ffd\u8e2a\u4ed6\u4eba\u53ca\u5176\u7269\u54c1\u7684\u62a5\u9053\u8d8a\u6765\u8d8a\u9891\u7e41\u3002\n\u5728\u4e00\u8d77\u5178\u578b\u7684\u8ddf\u8e2a\u6848\u4ef6\u4e2d\uff0c\u4e00\u540d\u65f6\u5c1a\u548c\u5065\u8eab\u6a21\u7279\u5728\u6536\u5230iPhone\u53d1\u51fa\u7684\u8ddf\u8e2a\u8b66\u544a\u901a\u77e5\u540e\uff0c\u5728\u5916\u5957\u53e3\u888b\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6807\u7b7e\u3002\u8fd8\u6709\u4e00\u4e9b\u65f6\u5019\uff0c\u822a\u7a7a\u6807\u7b7e\u88ab\u653e\u7f6e\u5728\u6602\u8d35\u7684\u6c7d\u8f66\u6216\u6469\u6258\u8f66\u4e0a\uff0c\u7528\u6765\u8ffd\u8e2a\u4ed6\u4eec\u4ece\u505c\u8f66\u573a\u5230\u4e3b\u4eba\u5bb6\uff0c\u7136\u540e\u5728\u90a3\u91cc\u88ab\u76d7\u3002\n2\u670810\u65e5\uff0c\u82f9\u679c\u53d1\u5e03\u4e86\u4e00\u4efd\u540d\u4e3a\u201cAirTag\u548c\u65e0\u7528\u8ddf\u8e2a\u7684\u66f4\u65b0\u201d\u7684\u65b0\u95fb\u58f0\u660e\uff0c\u63cf\u8ff0\u4e86\u4ed6\u4eec\u76ee\u524d\u8bd5\u56fe\u9632\u6b62AirTag\u548cFind My network\u88ab\u6ee5\u7528\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u672a\u6765\u7684\u8ba1\u5212\u3002\n\u8bda\u7136\uff0c\u6211\u53ef\u80fd\u6bd4\u666e\u901a\u9ed1\u5ba2\u66f4\u719f\u6089AirTags\uff08\u5728Find My\u4e0a\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7528\u4e8e\u4efb\u610f\u6570\u636e\u4f20\u8f93\u7684\u901a\u4fe1\u534f\u8bae\uff09\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u76f8\u5f53\u60ca\u8bb6\uff0c\u5728\u9605\u8bfb\u82f9\u679c\u516c\u53f8\u7684\u58f0\u660e\u65f6\uff0c\u6211\u80fd\u591f\u7acb\u5373\u4e3a\u8fd9\u4efd\u76f8\u5bf9\u8f83\u957f\u7684\u6e05\u5355\u4e2d\u63d0\u5230\u7684\u6bcf\u4e00\u9879\u5f53\u524d\u548c\u5373\u5c06\u51fa\u53f0\u7684\u4fdd\u62a4\u63aa\u65bd\u8bbe\u8ba1\u51fa\u975e\u5e38\u660e\u663e\u7684\u7ed5\u5f00\u601d\u8def\u3002\n\u4e0b\u4e00\u8282\u5c06\u8ba8\u8bba\u6bcf\u4e2a\u53cd\u8ddf\u8e2a\u529f\u80fd\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u7406\u8bba\u4e0a\u7ed5\u8fc7\u5b83\u3002\u6b64\u540e\uff0c\u6211\u5c06\u63cf\u8ff0\u6211\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u60f3\u6cd5\uff0c\u6784\u5efa\u4e00\u4e2a\u9690\u5f62AirTag\uff0c\u5e76\u5728\u4e0d\u89e6\u53d1\u8ddf\u8e2a\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u6210\u529f\u8ddf\u8e2a\u4e00\u540diPhone\u7528\u6237\uff08\u5f53\u7136\u662f\u5728\u4ed6\u4eec\u540c\u610f\u7684\u60c5\u51b5\u4e0b\uff09\u8d85\u8fc75\u5929\u3002\n\u8fd9\u7bc7\u535a\u6587\u7684\u76ee\u7684\u662f\u63d0\u9ad8\u4eba\u4eec\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u8ba4\u8bc6\uff0c\u5e0c\u671b\u4e5f\u80fd\u6307\u5bfc\u672a\u6765\u7684\u53d8\u9769\u3002\u5c24\u5176\u662f\uff0c\u82f9\u679c\u9700\u8981\u5c06\u975e\u6b63\u7248\u7684AirTag\u7eb3\u5165\u5176\u5a01\u80c1\u6a21\u578b\uff0c\u4ece\u800c\u5728Find My\u534f\u8bae\u548c\u751f\u6001\u7cfb\u7edf\u4e2d\u5b9e\u65bd\u5b89\u5168\u548c\u53cd\u8ddf\u8e2a\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u5728AirTag\u672c\u8eab\u4e2d\uff0c\u5b83\u53ef\u4ee5\u8fd0\u884c\u7ecf\u8fc7\u4fee\u6539\u7684\u56fa\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u6839\u672c\u4e0d\u662fAirTag\uff08\u82f9\u679c\u8bbe\u5907\u76ee\u524d\u65e0\u6cd5\u901a\u8fc7\u84dd\u7259\u533a\u5206\u771f\u6b63\u7684AirTag\u548c\u514b\u9686\uff09\u3002\n--\u964d\u4ef7\u2014\u2014[\u7406\u8bba\u4e0a]\uff08#\u7406\u8bba\u4e0a\uff09-[\u5f53\u524d\u529f\u80fd]\uff08#\u5f53\u524d\u529f\u80fd\uff09-[\u5e8f\u5217\u53f7]\uff08#\u5e8f\u5217\u53f7\uff09-[\u561f\u561f\u58f0]\uff08#\u561f\u561f\u58f0\uff09-[iPhone\u901a\u77e5]\uff08#iPhone\u901a\u77e5\uff09-[Android\u901a\u77e5]\uff08#Android\u901a\u77e5\uff09-[\u65c1\u6ce8\uff1a\u67e5\u8be2\u4f4d\u7f6e\u62a5\u544a\u6240\u9700\u7684Apple ID]\uff08#\u65c1\u6ce8\u67e5\u8be2\u4f4d\u7f6e\u62a5\u544a\u6240\u9700\u7684Apple ID\uff09-[\u5373\u5c06\u63a8\u51fa\u7684\u529f\u80fd]\uff08#\u5373\u5c06\u63a8\u51fa\u7684\u529f\u80fd\uff09-[AirTag\u8bbe\u7f6e\u671f\u95f4\u7684\u65b0\u9690\u79c1\u8b66\u544a]\uff08#AirTag\u8bbe\u7f6e\u671f\u95f4\u7684\u65b0\u9690\u79c1\u8b66\u544a\uff09-[\u89e3\u51b3AirPad\u7684\u8b66\u62a5\u95ee\u9898]\uff08#\u89e3\u51b3airpods\u7684\u8b66\u62a5\u95ee\u9898\uff09\u3010\u66f4\u65b0\u7684\u652f\u6301\u6587\u6863\u3011\uff08#\u66f4\u65b0\u7684\u652f\u6301\u6587\u6863\uff09\u3010\u7cbe\u786e\u67e5\u627e\u3011\uff08#\u7cbe\u786e\u67e5\u627e\uff09\u3010\u58f0\u97f3\u663e\u793a\u8b66\u62a5\u3011\uff08#\u58f0\u97f3\u663e\u793a\u8b66\u62a5\uff09\u3010\u4f18\u5316\u4e0d\u9700\u8981\u7684\u8ddf\u8e2a\u8b66\u62a5\u903b\u8f91\u3011\uff08#\u4f18\u5316\u4e0d\u9700\u8981\u7684\u8ddf\u8e2a\u8b66\u62a5\u903b\u8f91\uff09-[Tuning AirTag's sound]\uff08#Tuning AirTag's sound\uff09-[In Practice]\uff08#In Practice\uff09-[Test setup]\uff08#Test setup\uff09-[Android detection]\uff08#Android detection\uff09-[Tracker Detect]\uff08#Tracker Detect\uff09-[AirGuard]\uff08#AirGuard\uff09-\uff08iOS detection]\uff08#iOS detection\uff09-[Closing Thinks]\uff08#\u7ed3\u675f\u601d\u8003\uff09\u2014\u2014/MARKDOWN--\n\u8ba9\u6211\u4eec\u770b\u770b\u82f9\u679c\uff08\u8ba1\u5212\u4e2d\u7684\uff09\u6240\u6709\u8ddf\u8e2a\u4fdd\u62a4\u529f\u80fd\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u901a\u8fc7\u57fa\u4e8eOpenHaystack\u7684AirTag\u514b\u9686\u7ed5\u8fc7\u5b83\u4eec\u3002\n\u201c\u6bcf\u4e2aAirTag\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5e8f\u5217\u53f7\uff0c\u6210\u5bf9\u7684AirTag\u4e0e\u4e00\u4e2aApple ID\u76f8\u5173\u8054\u3002Apple\u53ef\u4ee5\u5728\u6536\u5230\u4f20\u7968\u6216\u6267\u6cd5\u90e8\u95e8\u7684\u6709\u6548\u8bf7\u6c42\u65f6\u63d0\u4f9b\u6210\u5bf9\u7684\u5e10\u6237\u8be6\u7ec6\u4fe1\u606f\u3002\u5728\u6211\u4eec\u63d0\u4f9b\u7684\u4fe1\u606f\u88ab\u7528\u4e8e\u8ffd\u8e2aAirTag\u81f3\u72af\u7f6a\u8005\u7684\u6848\u4ef6\u4e2d\uff0c\u6211\u4eec\u4e0e\u4ed6\u4eec\u6210\u529f\u5408\u4f5c\u3002\u201d\n\u7528\u4e8e\u6784\u5efaAirTag\u514b\u9686\uff08\u4f8b\u5982ESP32\uff09\u7684\u5fae\u63a7\u5236\u5668\u6ca1\u6709AirTag\u5e8f\u5217\u53f7\uff08\u65e0\u8bba\u5728\u8f6f\u4ef6\u8fd8\u662f\u786c\u4ef6\u4e0a\uff09\u3002\n\u57fa\u4e8eOpenHaystack\u7684\u514b\u9686\u5df2\u7ecf\u6ca1\u6709\u4e0eApple ID\u914d\u5bf9\uff08\u56e0\u4e3a\u8fd9\u4e0d\u662f\u4ee5\u9690\u79c1\u4e3a\u4e2d\u5fc3\u7684\u8bbe\u8ba1\u6240\u5fc5\u9700\u7684\uff09\u3002\n\u6700\u521d\uff0c\u4e00\u4e2aAirTag\u5df2\u7ecf\u4e09\u5929\u591a\u6ca1\u6709\u8fdb\u5165\u914d\u5bf9\u7684Apple\u8bbe\u5907\u7684\u84dd\u7259\u8303\u56f4\uff0c\u5b83\u5f00\u59cb\u53d1\u51fa\u54d4\u54d4\u58f0\u3002\u968f\u77402021\u5e746\u6708\u7684\u66f4\u65b0\uff0c\u82f9\u679c\u5c06\u5176\u964d\u4f4e\u52308\u523024\u5c0f\u65f6\u4e4b\u95f4\u7684\u968f\u673a\u65f6\u95f4\u8303\u56f4\u3002\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u7684ESP32\u751a\u81f3\u6ca1\u6709\u626c\u58f0\u5668\u3002\u6b64\u5916\uff0cOpenHaystack\u56fa\u4ef6\u6ca1\u6709\u5b9e\u73b0BLE\u670d\u52a1\u6765\u8fdc\u7a0b\u89e6\u53d1\u58f0\u97f3\uff0c\u56e0\u6b64\u751a\u81f3\u6ca1\u6709\u663e\u793a\u201c\u64ad\u653e\u58f0\u97f3\u201d\u6309\u94ae\u3002\n\u4f5c\u4e3a\u8865\u5145\u8bf4\u660e\uff0c\u6240\u8c13\u7684\u201c\u65e0\u58f0\u6807\u7b7e\u201d\u5df2\u7ecf\u6709\u4e86\u5e02\u573a\uff08\u7ecf\u8fc7\u4fee\u6539\u7684\u6807\u7b7e\uff0c\u5176\u626c\u58f0\u5668\u5df2\u88ab\u79fb\u9664/\u65ad\u5f00\uff09\u3002\n\u201c\u5982\u679c\u53d1\u73b0\u4efb\u4f55AirTag\u3001AirPods\u6216\u5176\u4ed6\u53d1\u73b0\u6211\u7684\u7f51\u7edc\u914d\u4ef6\u4e0e\u5176\u6240\u6709\u8005\u5206\u79bb\u7684\u7269\u54c1\u968f\u65f6\u95f4\u79fb\u52a8\uff0c\u5c06\u901a\u77e5\u60a8&#39\uff1b\u201d\n\u5728\u8fd9\u91cc\uff0c\u4e8b\u60c5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6709\u8da3\u3002\u4ece\u4e00\u5f00\u59cb\u94fe\u63a5\u7684\u65b0\u95fb\u62a5\u9053\u6765\u770b\uff0c\u8fd9\u4f3c\u4e4e\u4e5f\u662f\u68c0\u6d4b\u4e0d\u9700\u8981\u7684\u6807\u7b7e\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u3002\n\u4e00\u65b9\u9762\uff0c\u82f9\u679c\u5e0c\u671bAirTag\u901a\u8fc7\u84dd\u7259\u5f7c\u6b64\u65e0\u6cd5\u533a\u5206\uff0c\u4ee5\u9632\u6b62\u5728\u8f83\u957f\u65f6\u95f4\u5185\u8bc6\u522b\u7279\u5b9a\u7684AirTag\uff0c\u4ece\u800c\u963b\u6b62\u901a\u8fc7\u5206\u5e03\u5f0f\u84dd\u7259\u63a5\u6536\u5668\u7f51\u7edc\u8fde\u7eed\u8ddf\u8e2a\u7279\u5b9a\u7684AirTag\uff08\u6216iPhone\u7b49\uff09\n\u53e6\u4e00\u65b9\u9762\uff0c\u82f9\u679c\u5e0c\u671b\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u8bc6\u522b\u7279\u5b9a\u7684AirTag\uff0c\u4ee5\u533a\u5206\u4e00\u4e2a\u4e0e\u7528\u6237\u540c\u884c\u7684AirTag\uff08\u5b83\u5e94\u8be5\u5728\u90a3\u91cc\u53d1\u9001\u901a\u77e5\uff09\uff0c\u4ee5\u53ca\u5728\u7e41\u5fd9\u533a\u57df\u884c\u8d70\u7684\u7528\u6237\u4e0d\u65ad\u6536\u5230\u6765\u81ea\u9644\u8fd1\u4e0d\u540cAirTag\u7684ping\uff08\u5b83\u4e0d\u5e94\u8be5\u63d0\u9192\u7528\u6237\uff09\n\u901a\u8fc7\u7f16\u7a0b\u4e00\u4e2aAirTag\uff08\u514b\u9686\uff09\u6765\u8fde\u7eed\u64ad\u653e\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u65b0\u516c\u94a5\uff08\u6bcf\u4e2a\u516c\u94a5\u53ea\u64ad\u653e\u4e00\u6b21\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u53f0\u8bbe\u5907\u6a21\u62df\u7b2c\u4e8c\u4e2a\u573a\u666f\u3002\n\u5728\u4e0b\u9762\u7684PoC/\u5b9e\u9a8c\u4e2d\uff0cAirTag\u514b\u9686\u8fed\u4ee3\u4e862000\u4e2a\u9884\u52a0\u8f7d\u516c\u94a5\u7684\u5217\u8868\uff0c\u5e76\u6bcf30\u79d2\u53d1\u9001\u4e00\u4e2a\u516c\u94a5\u4fe1\u6807\uff08\u66f4\u591a\u7ec6\u8282\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\uff09\u3002\n\u968f\u7740AirTags\u7684\u9996\u6b21\u53d1\u5e03\uff0c\u9664\u4e86\u561f\u561f\u58f0\u4e4b\u5916\uff0cAndroid\u7528\u6237\u6ca1\u6709\u529e\u6cd5\u6536\u5230\u4e0d\u9700\u8981\u7684\u8ddf\u8e2a\u8bbe\u5907\u7684\u901a\u77e5\u30022021\u5e7412\u6708\uff0c\u82f9\u679c\u53d1\u5e03\u4e86\u4e00\u6b3eAndroid\u5e94\u7528\u7a0b\u5e8f\u79f0\u4e3a\u8ddf\u8e2a\u5668\u68c0\u6d4b\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4e3b\u52a8\u626b\u63cf\u9644\u8fd1\u7684\u8ddf\u8e2a\u8bbe\u5907\u3002\n\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5728\u540e\u53f0\u8fd0\u884c\uff1b\u5f53Android\u7528\u6237\u9760\u8fd1AirTag\u65f6\uff0c\u4ed6\u4eec\u9700\u8981\u6267\u884c\u4e3b\u52a8\u626b\u63cf\n\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u9632\u6b62\u6765\u81ea\u8fc7\u5f80Find My\u8bbe\u5907\u7684\u5355\u4e2a\u63a5\u6536\u4fe1\u6807\u51fa\u73b0\u8bef\u62a5\uff0c\u5219\u8be5\u5e94\u7528\u7a0b\u5e8f\u5bb9\u6613\u53d7\u5230\u4e0a\u8ff0\u201c\u6bcf\u516c\u94a51\u4fe1\u6807\u653b\u51fb\u201d\n\uff08OpenHaystack\u56e2\u961f\u8fd8\u6709\u4e00\u6b3e\u540d\u4e3aAirGuard\u7684\uff08\u66f4\u597d\u7684\uff09\u66ff\u4ee3\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u4e5f\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u8ba8\u8bba\uff09\n\u867d\u7136\u57fa\u4e8eOpenHaystack\u7684AirTag\u514b\u9686\u6ca1\u6709\u4e0eApple ID\u914d\u5bf9\uff0c\u4f46\u4f4d\u7f6e\u62a5\u544a\u7684\u68c0\u7d22\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u533f\u540d\u521b\u5efa\u6b64\u7c7b\u5e10\u6237\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u8eab\u4efd/KYC\u9a8c\u8bc1\u3002\nOpenHaystack\u56e2\u961f\u76ee\u524d\u751a\u81f3\u8003\u8651\u8fd0\u884c\u4e00\u4e2a\u670d\u52a1\u5668\u6765\u4ee3\u7406\u8fd9\u4e9b\u4f4d\u7f6e\u62a5\u544a\u8bf7\u6c42\uff0c\u8fd9\u5728\u672a\u6765\u53ef\u80fd\u4f1a\u51cf\u5c11\u81ea\u5df1\u521b\u5efa\u5e10\u6237\u7684\u9700\u8981\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u65b0\u95fb\u58f0\u660e\u201c\u5373\u5c06\u5230\u6765\u7684\u8fdb\u6b65\u201d\u90e8\u5206\u5217\u51fa\u7684\u6bcf\u4e00\u9879\uff1a\n\u4e0d\u76f8\u5173\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u963b\u6b62\u7f6a\u72af\uff0c\u5728\u4f7f\u7528OpenHaystack\u65f6\u4e5f\u4e0d\u4f1a\u88ab\u770b\u5230\u3002\n\u4e0d\u76f8\u5173\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u5728AirPods\u89e6\u53d1\u8b66\u62a5\u65f6\u66f4\u6539\u8b66\u544a\u6d88\u606f\u5185\u5bb9\u3002\n\u7cbe\u786e\u5b9a\u4f4d\u8981\u6c42\u6807\u7b7e\u4e2d\u6709\u82f9\u679c\u7684U1\u8d85\u5bbd\u5e26\u82af\u7247\u3002\u7531\u4e8eAirTag clone\u5fae\u63a7\u5236\u5668\u4e0d\u5305\u542b\u8fd9\u6837\u7684UWB\u82af\u7247\uff0c\u56e0\u6b64\u65e0\u6cd5\u901a\u8fc7\u7cbe\u786e\u67e5\u627e\u627e\u5230\u8fd9\u4e9b\u82af\u7247\u3002\n\u201c\u5f53AirTag\u81ea\u52a8\u53d1\u51fa\u58f0\u97f3\u63d0\u9192\u9644\u8fd1\u7684\u4efb\u4f55\u4eba\u5b83\u7684\u5b58\u5728\uff0c\u5e76\u88ab\u68c0\u6d4b\u5230\u4e0eiPhone\u3001iPad\u6216iPod touch\u4e00\u8d77\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u8fd8\u4f1a\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u663e\u793a\u4e00\u4e2a\u8b66\u62a5\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u5bf9\u5176\u91c7\u53d6\u884c\u52a8\uff0c\u5982\u64ad\u653e\u58f0\u97f3\u6216\u4f7f\u7528\u7cbe\u786e\u67e5\u627e\uff08\u5982\u679c\u53ef\u7528\uff09\u3002\u8fd9\u5c06\u6709\u52a9\u4e8eAirTag\u53ef\u80fd\u4f4d\u4e8e\u4ee5\u4e0b\u4f4d\u7f6e\uff1a\u5426\u5219\u5f88\u96be\u542c\u5230\uff0c\u6216\u8005\u5982\u679cAirTag\u626c\u58f0\u5668\u88ab\u7be1\u6539\u3002\"\n\u5728\u514b\u9686\u5b9e\u73b0\u4e2d\u53ef\u4ee5\u8df3\u8fc7\u6b64\u901a\u77e5\uff08\u5c31\u50cfOpenHaystack\u5f53\u524d\u7684\u60c5\u51b5\u4e00\u6837\uff09\u3002\n\u201c\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u8ddf\u8e2a\u8b66\u62a5\u7cfb\u7edf\u4f7f\u7528\u590d\u6742\u7684\u903b\u8f91\u6765\u786e\u5b9a\u6211\u4eec\u5982\u4f55\u63d0\u9192\u7528\u6237\u3002\u6211\u4eec\u8ba1\u5212\u66f4\u65b0\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u8ddf\u8e2a\u8b66\u62a5\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u63d0\u524d\u901a\u77e5\u7528\u6237\uff0c\u672a\u77e5\u7684\u6807\u7b7e\u6216\u67e5\u627e\u6211\u7684\u7f51\u7edc\u9644\u4ef6\u53ef\u80fd\u4e0e\u4ed6\u4eec\u540c\u884c\u3002\u201d\n\u8fd9\u662f\u975e\u5e38\u6a21\u7cca\u7684\uff0c\u4f46\u6700\u76f8\u5173\u7684\u4e00\u70b9\u3002\u8fdb\u9000\u4e24\u96be\uff1a\u5982\u679c\u4ed6\u4eec\u4e0d\u60f3\u5728\u8bbe\u5907\u6bcf\u6b21\u5411\u82f9\u679c\u53d1\u9001\u4f4d\u7f6e\u62a5\u544a\u65f6\u901a\u77e5\u7528\u6237\uff0c\u90a3\u4e48\u5c31\u5f88\u96be\u62b5\u5fa1\u4e0d\u65ad\u65cb\u8f6c\u7684\u516c\u94a5\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u8fdb\u884c\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u76ee\u524d\u53ef\u4ee5\u7ed5\u8fc7\u8ddf\u8e2a\u8b66\u62a5\u903b\u8f91\uff0c\u540c\u65f6\u4ecd\u7136\u80fd\u591f\u8ddf\u8e2aiPhone\u7528\u6237\u3002\n\u201c\u76ee\u524d\uff0c\u6536\u5230\u4e0d\u9700\u8981\u7684\u8ddf\u8e2a\u8b66\u62a5\u7684iOS\u7528\u6237\u53ef\u4ee5\u64ad\u653e\u58f0\u97f3\u6765\u5e2e\u52a9\u4ed6\u4eec\u627e\u5230\u672a\u77e5\u7684AirTag\u3002\u6211\u4eec\u5c06\u8c03\u6574\u97f3\u8c03\u5e8f\u5217\uff0c\u4ee5\u4f7f\u7528\u66f4\u591a\u6700\u54cd\u4eae\u7684\u97f3\u8c03\uff0c\u4f7f\u672a\u77e5\u7684AirTag\u66f4\u5bb9\u6613\u627e\u5230\u3002\u201d\n\u8fd9\u53ea\u6709\u5728\u5df2\u7ecf\u6536\u5230\u8ddf\u8e2a\u8b66\u62a5\u4e14\u4e0d\u9002\u7528\u4e8e\u6ca1\u6709\u626c\u58f0\u5668\u7684AirTag\u514b\u9686\u65f6\u624d\u6709\u7528\u3002\n&#34;\u7406\u8bba\u4e0a\uff0c\u7406\u8bba\u548c\u5b9e\u8df5\u6ca1\u6709\u533a\u522b\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u662f\u6709\u5fc5\u8981\u7684&#34;  -\u672c\u6770\u660e\u00b7\u5e03\u9c81\u65af\u7279\n\u6211\u51b3\u5b9a\u901a\u8fc7\u6784\u5efa\u8fd9\u6837\u4e00\u4e2a\u9690\u5f62\u6807\u7b7e\u5e76\u8fdb\u884c\u4e00\u4e2a\u771f\u5b9e\u7684\u5b9e\u9a8c\u6765\u6d4b\u8bd5\u6211\u7684\u5047\u8bbe\uff08\u4e3b\u8981\u662f\u4e00\u6b21\u6027\u516c\u94a5\uff09\u3002\n\u4e00\u79cd\u68c0\u7d22\u548c\u663e\u793a\u6bcf\u4e2a\u5e7f\u64ad\u516c\u94a5\u7684\u89e3\u5bc6\u4f4d\u7f6e\u62a5\u544a\u7684\u65b9\u6cd5\n\u4e3a\u4e86\u8fdb\u884c\u5b9e\u9a8c\uff0c\u6211\u51b3\u5b9a\u5728\u6b63\u786e\u7684\u692d\u5706\u66f2\u7ebf\u4e0a\u9884\u751f\u6210\u968f\u673a\u5bc6\u94a5\u5bf9\uff0c\u5e76\u5728\u8981\u5237\u65b0\u7684\u56fa\u4ef6\u4e2d\u5305\u542b\u516c\u94a5\u3002\u76f8\u5e94\u7684\u79c1\u94a5\u5c06\u5b58\u50a8\u5728\u517c\u5bb9\u7684OpenHaystack\u4e2d\u3002plist\u6587\u4ef6\u3002\u7406\u8bba\u4e0a\uff0c\u8fd9\u5141\u8bb8\u4f7f\u7528\u666e\u901a\uff08\u751a\u81f3\u662f\u9884\u7f16\u8bd1\u7684\uff09OpenHaystack macOS\u5ba2\u6237\u7aef\u5c06\u6bcf\u4e2a\u53ef\u80fd\u7684\u516c\u94a5\u4f5c\u4e3a\u81ea\u5df1\u7684\u6807\u8bb0\u5bfc\u5165\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u5ba2\u6237\u673a\u7684\u8bbe\u8ba1\u4e0d\u662f\u4e3a\u4e86\u5904\u7406\u6570\u5343\u4e2a\u6807\u7b7e\uff08\u6ce8\u610f\uff0c\u82f9\u679c\u5b98\u65b9\u53ea\u5141\u8bb816\u4e2a\uff01\uff09\uff0c\u56e0\u6b64\uff0c\u6211\u505a\u4e86\u4e00\u4e9b\u66f4\u6539\u6765\u9488\u5bf9\u8be5\u7528\u4f8b\u8fdb\u884c\u4f18\u5316\uff08\u5c06\u4e0d\u540c\u8bbe\u5907\u7684\u4f4d\u7f6e\u62a5\u544a\u8bf7\u6c42\u5408\u5e76\u5230\u5355\u4e2aHTTP\u8bf7\u6c42\u4e2d\uff0c\u8df3\u8fc7\u5bc6\u94a5\u94fe\u64cd\u4f5c\uff0c\u7a0d\u5fae\u4f18\u5316\u4e8c\u6b21\u590d\u6742\u5ea6\u64cd\u4f5c\uff09\u3002\n\u4fee\u6539\u540e\u7684\u56fa\u4ef6\u548cmacOS\u68c0\u7d22\u5e94\u7528\u7a0b\u5e8f\u53ef\u5728https://github.com/positive-security/find-you.\u6709\u610f\u7701\u7565\u4e86\u7528\u4e8e\u4ee5\u6b63\u786e\u683c\u5f0f\u751f\u6210\u5bc6\u94a5\u5bf9\u7684python\u811a\u672c\u3002\n\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u9009\u62e9\u8fed\u4ee32000\u4e2a\u5bc6\u94a5\u5bf9\uff0c\u6bcf30\u79d2\u53d1\u9001\u4e00\u4e2a\u4fe1\u6807\uff08\u56e0\u6b64\u6bcf17\u5c0f\u65f6\u91cd\u590d\u4e00\u6b21\u516c\u94a5\uff09\n\u4e0e\u6709\u9650\u7684\u5bc6\u94a5\u5bf9\u5217\u8868\u4e0d\u540c\uff0c\u53ef\u4ee5\u5728AirTag\u514b\u9686\u548cMac\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u901a\u7528\u7684\u79cd\u5b50\u548c\u6d3e\u751f\u7b97\u6cd5\u6765\u751f\u6210\u51e0\u4e4e\u4ece\u4e0d\u91cd\u590d\u7684\u5bc6\u94a5\u6d41\n\u5f53\u4f7f\u7528\u4e0d\u53ef\u9006\u7684\u6d3e\u751f\u51fd\u6570\u5e76\u603b\u662f\u7528\u4e0b\u4e00\u8f6e\u7684\u8f93\u51fa\u8986\u76d6\u79cd\u5b50\u65f6\uff0c\u82f9\u679c\u6216\u6267\u6cd5\u90e8\u95e8\u65e0\u6cd5\u68c0\u7d22\u6807\u7b7e\u4e4b\u524d\u5e7f\u64ad\u7684\u516c\u94a5\u6216\u53d1\u73b0\u7684\u4f4d\u7f6e\uff0c\u5373\u4f7f\u5728\u8bbe\u5907\u88ab\u53d1\u73b0\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7269\u7406\u8bbf\u95ee\n\u88ab\u8ffd\u8e2a\u7684\u4eba\u4f7f\u7528\u7684\u662fiOS 15.3.1\u7248iPhone\uff0c\u6240\u6709\u76f8\u5173\u8bbe\u7f6e\u90fd\u914d\u7f6e\u4e3a\u63a5\u6536\u201c\u67e5\u627e\u6211\u7684\u5b89\u5168\u201d\u8b66\u62a5\n\u8fd9\u540d\u9690\u5f62\u822a\u7a7a\u6807\u7b7e\u514b\u9686\u4eba\u4e0e\u88ab\u8ffd\u8e2a\u8005\u5728\u4e00\u8d77\u8d85\u8fc75\u5929\uff0c\u4e5f\u662f\u5728\u79bb\u5f00\u4ed6\u4eec\u5bb6\u65f6\n\u8fd0\u884cApple\u7684Tracker Detect\u7684\u6d3b\u52a8\u626b\u63cf\u6765\u641c\u7d22Find My devices\u5c06\u6839\u672c\u4e0d\u4f1a\u663e\u793a\u9690\u5f62AirTag\uff0c\u800c\u5e7f\u64ad\u516c\u94a5\u7684\u4f4d\u7f6e\u62a5\u544a\u4e00\u76f4\u5728\u4e0a\u4f20\uff0c\u53ef\u4ee5\u68c0\u7d22\u3002\n\u867d\u7136\u6ca1\u6709\u5bf9\u6b64\u8fdb\u884c\u66f4\u591a\u8c03\u67e5\uff0c\u4f46\u53ef\u80fd\u7684\u539f\u56e0\u662f\uff0c\u5728\u6807\u7b7e\u663e\u793a\u5728UI\u4e2d\u4e4b\u524d\uff0c\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u7b49\u5f85\u5177\u6709\u76f8\u540c\u516c\u94a5\u7684\u591a\u4e2a\u4fe1\u6807\u3002\n\u9996\u6b21\u57282021\u5e748\u6708\u53d1\u5e03\uff08StEfter\u68c0\u6d4b\u524d4\u4e2a\u6708\uff09\uff0cSeEMOO\uff0cTU\u8fbe\u59c6\u65bd\u5854\u7279\u5b9e\u9a8c\u5ba4\u4e5f\u5728OpenHaSACK\u4e4b\u540e\uff0cAcGuoor\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u626b\u63cf\u9644\u8fd1\u627e\u5230\u6211\u7684\u8bbe\u5907\u7684\u65b9\u6cd5\u3002\n\u5176\u4f18\u70b9\u662f\uff0c\u4e0e\u82f9\u679c\u7684iOS\u5e94\u7528\u7a0b\u5e8f\u7c7b\u4f3c\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u8fd8\u652f\u6301\u5728\u540e\u53f0\u8fdb\u884c\u8fde\u7eed\u626b\u63cf\u3002\u7136\u800c\uff0c\u8be5\u529f\u80fd\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u8981\u6c42\u4f7f\u7528\u76f8\u540c\u516c\u94a5\u7684\u591a\u4e2a\u4fe1\u6807\u6765\u89e6\u53d1\u8b66\u62a5\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u4f7f\u7528\u201c\u6bcf\u516c\u94a51\u4fe1\u6807\u201d\u6807\u7b7e\u7ed5\u8fc7\uff1a\n\u201c\u6bcf\u5f53\u4e00\u4e2a\u8ddf\u8e2a\u5668\u88ab\u591a\u6b21\u68c0\u6d4b\u5230\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u4f1a\u8bc6\u522b\u51fa\u8fd9\u4e00\u70b9\u3002\u5b83\u4f1a\u6bd4\u8f83\u68c0\u6d4b\u5230\u8ddf\u8e2a\u5668\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u8e2a\u5668\u88ab\u68c0\u6d4b\u5230\u81f3\u5c113\u6b21\uff0c\u5e76\u4e14\u4f4d\u7f6e\u53d1\u751f\u4e86\u53d8\u5316\uff08\u4ee5\u786e\u4fdd[It&#39\uff1bs]\u4e0d\u662f\u4f60\u7684\u90bb\u5c45\uff09\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5411\u4f60\u53d1\u9001\u901a\u77e5\u3002\u201d\n\u4e0e\u8ddf\u8e2a\u5668\u68c0\u6d4b\u76f8\u6bd4\uff0cAirGuard\u548c#39\uff1bs\u7684\u201c\u624b\u52a8\u626b\u63cf\u201d\u529f\u80fd\u5c06\u663e\u793a\u9690\u5f62AirTag\u514b\u9686\uff08\u6bcf\u4e2a\u63a5\u6536\u5230\u7684\u4fe1\u6807\u4e00\u4e2a\u65b0\u8bbe\u5907\uff09\uff1a\n2\u670816\u65e5\uff0c\u8be5\u9690\u5f62\u6807\u7b7e\u514b\u9686\u4eba\u88ab\u4f20\u9012\u7ed9\u88ab\u8ffd\u8e2a\u8005\uff0c\u5e76\u4e00\u76f4\u4e0e\u4ed6\u4eec\u5728\u4e00\u8d77\uff0c\u76f4\u52302\u670821\u65e5\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u6b64\u4eba\u5728\u5bb6\u91cc\u5f85\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ddf\u8e2a\u51e0\u6b21\u5916\u51fa\u65c5\u884c\uff08\u51fa\u4e8e\u9690\u79c1\u539f\u56e0\uff0c\u4ee5\u4e0b\u672a\u663e\u793a\uff09\u3002\n\u9664\u4e86\u88ab\u8ffd\u8e2a\u7684iPhone\u7528\u6237\u548c\u4ed6\u4eec\u4f7f\u7528iPhone\u7684\u5ba4\u53cb\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u90fd\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u8ffd\u8e2a\u8b66\u62a5\u4e4b\u5916\uff0c\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u4ed6\u4eec\u7684iPhone\u90fd\u5728\u5c06\u4ed6\u4eec\u7684\u4f4d\u7f6e\u8f6c\u53d1\u5230\u82f9\u679c\u7684\u670d\u52a1\u5668\uff0c\u8ba9\u6211\u80fd\u591f\u68c0\u7d22\u548c\u89e3\u5bc6\u5b83\u4eec\u3002\n&#34;\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u521b\u65b0\u4e86\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u4e2a\u4e3b\u52a8\u7cfb\u7edf\u6765\u63d0\u9192\u60a8\u4e0d\u5fc5\u8981\u7684\u8ddf\u8e2a\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4f1a\u5f00\u542f\u4e00\u79cd\u884c\u4e1a\u8d8b\u52bf\uff0c\u8ba9\u5176\u4ed6\u516c\u53f8\u4e5f\u80fd\u5728\u5176\u4ea7\u54c1\u4e2d\u63d0\u4f9b\u6b64\u7c7b\u4e3b\u52a8\u8b66\u544a\u3002\"\n\u6211\u89c9\u5f97\u5f88\u6709\u8da3\u7684\u662f\uff0c\u4ed6\u4eec\u4e00\u5f00\u59cb\u5c31\u63d0\u5021\u4e3a\u8ddf\u8e2a\u7cfb\u7edf\u63d0\u4f9b\u8ddf\u8e2a\u8b66\u62a5\uff0c\u5e76\u5c06\u5176\u4ed8\u8bf8\u5b9e\u65bd\u3002\u4ed6\u4eec\u5c06\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u4e2a\u7b80\u5355\u3001\u5ec9\u4ef7\u7684\u5168\u7403\u8ddf\u8e2a\u7cfb\u7edf\u5f15\u5165\u4e86\u4e00\u4e2a\u201c\u4e0d\u5fc5\u8981\u7684\u8ddf\u8e2a\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u662f\u4e00\u4e2a\u793e\u4f1a\u95ee\u9898\u201d\u7684\u4e16\u754c\uff0c\u4e3a\u81ea\u5df1\u5b9e\u65bd\u4e86\u7834\u574f\u6027\u7684\u53cd\u8ddf\u8e2a\u529f\u80fd\u800c\u559d\u5f69\uff0c\u73b0\u5728\u8fd8\u5f3a\u8feb\u5176\u4ed6\u4eba\u4e5f\u5b9e\u65bd\u9488\u5bf9\u4ed6\u4eec\u63a8\u51fa\u7684\u8ddf\u8e2a\u7f51\u7edc\u7684\u4fdd\u62a4\u3002\n\u4e3b\u8981\u7684\u98ce\u9669\u4e0d\u5728\u4e8e\u5f15\u5165AirTags\uff0c\u800c\u5728\u4e8e\u5f15\u5165Find My\u751f\u6001\u7cfb\u7edf\uff0c\u8be5\u751f\u6001\u7cfb\u7edf\u5229\u7528\u5ba2\u6237\u7684\u8bbe\u5907\u63d0\u4f9b\u8fd9\u9879\u82f9\u679c\u670d\u52a1\u3002\u7531\u4e8e\u82f9\u679c\u5728\u5f53\u524d\u7684Find My\u8bbe\u8ba1\u4e2d\u65e0\u6cd5\u5c06\u5176\u4f7f\u7528\u4ec5\u9650\u4e8e\u6b63\u7248AirTags\uff08\u4ee5\u53ca\u5b98\u65b9\u5408\u4f5c\u4f19\u4f34\u7684\u8bbe\u5907\uff09\uff0c\u56e0\u6b64\u4ed6\u4eec\u9700\u8981\u8003\u8651\u5b9e\u73b0Find My\u534f\u8bae\u7684\u5b9a\u5236\u3001\u6f5c\u5728\u6076\u610f\u4fe1\u6807\uff08\u6216\u5e26\u6709\u4fee\u6539\u56fa\u4ef6\u7684AirTags\uff09\u7684\u5a01\u80c1\u3002\u7531\u4e8epower bank+ESP32\u6bd4AirTag\u4fbf\u5b9c\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e9b\u4eba\u81ea\u5df1\u6784\u5efa\u514b\u9686\u7684\u53e6\u4e00\u4e2a\u52a8\u673a\u3002\n\u6839\u636e\u8be5\u7cfb\u7edf\u76ee\u524d\u7684\u8bbe\u8ba1\uff0c\u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u4f3c\u4e4e\u5f88\u96be\u533a\u5206\u4e00\u4e2a\u6301\u7eed\u516c\u94a5\u65cb\u8f6c\u7684\u6076\u610fAirTag\u514b\u9686\u4e0e\u4f60\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u8def\u8fc7\u51e0\u4e2a\u771f\u6b63\u7684AirTag\u3002\n\u867d\u7136\u6bcf\u6b21\u4ece\u770b\u4f3c\u4e0d\u540c\u7684\u8bbe\u5907\u4e0d\u65ad\u63a5\u6536Find My Beacon\u7684\u5f02\u5e38\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u66f4\u591a\u7684\u903b\u8f91\u6765\u68c0\u6d4b\uff0c\u4f46\u5f53AirTag\u514b\u9686\u4ee5\u968f\u673a\u95f4\u9694\u53d1\u9001\u6570\u636e\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u5982\u679c\u9700\u8981\u6b3a\u9a97\u884c\u4e3a\u5206\u6790\uff0c\u5219\u53ef\u80fd\u4f1a\u591a\u6b21\u53d1\u9001\u51e0\u4e2a\u4fe1\u6807\u3002\n\u5728\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ea\u6709\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8fAirGuard\u7684\u6d3b\u52a8\u626b\u63cf\u6a21\u5f0f\u68c0\u6d4b\u5230\u9690\u5f62AirTag\u514b\u9686\u3002\u867d\u7136\u6211\u4eec\u4e0d\u9f13\u52b1\u6ee5\u7528\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u5206\u4eab\u8fd9\u4e2a\u5b9e\u9a8c\u5c06\u5bf9Find My\u751f\u6001\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u9690\u79c1\u4ea7\u751f\u79ef\u6781\u7684\u6539\u53d8\u3002", "note_en": "After AirTags are reportedly used more and more frequently for malicious purposes, Apple has published a statement that lists its current and future efforts to prevent misuse\n We built an AirTag clone that bypasses all those tracking protection features and confirmed it working in a real-world experiment (source code available  here)\n We encourage Apple to include AirTag clones/modified AirTags into their threat model when planning the next changes to the Find My ecosystem\n   Recently, reports about AirTags being used to track other people and their belongings were  becoming  much  more  frequent.\n In one exemplary stalking case, a fashion and fitness model discovered an AirTag in her coat pocket after having received a tracking warning notification from her iPhone.  Other times, AirTags were placed in expensive cars or motorbikes to track them from parking spots to their owner\u2019s home, where they were then stolen.\n On February 10, Apple addressed this by publishing  a news statement titled \u201cAn update on AirTag and unwanted tracking\u201d in which they describe the way they are currently trying to prevent AirTags and the Find My network from being misused and what they have planned for the future.\n Admittedly, I might be slightly more familiar with AirTags than the average hacker (having  designed and  implemented a communication protocol on top of Find My for arbitrary data transmission), but even so I was quite surprised, that when reading Apple\u2019s statement I was able to immediately devise quite obvious bypass ideas for every current and upcoming protection measure mentioned in that relatively long list.\n The following section will discuss each anti-stalking feature and how it can be bypassed in theory. Thereafter I will describe how I implemented those ideas to build a stealth AirTag and successfully tracked an iPhone user (with their consent of course) for over 5 days without triggering a tracking notification.\n The goal of this blog post is to raise awareness of these issues to hopefully also guide future changes. In particular, Apple needs to incorporate non-genuine AirTags into their threat model, thus implementing security and anti-stalking features into the Find My protocol and ecosystem instead of in the AirTag itself, which  can run modified firmware or not be an AirTag at all (Apple devices currently have no way to distinguish genuine AirTags from clones via Bluetooth).\n   -- MARKDOWN -- - [In Theory](#in-theory) \u00a0\u00a0\u00a0\u00a0- [Current Features](#current-features) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Serial number](#serial-number) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Beeping](#beeping) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [iPhone notifications](#iphone-notifications) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Android notifications](#android-notifications) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Side note: Apple-ID for querying location reports](#side-note-apple-id-needed-to-query-location-reports) \u00a0\u00a0\u00a0\u00a0- [Upcoming Features](#upcoming-features) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [New privacy warnings during AirTag setup](#new-privacy-warnings-during-airtag-setup) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Addressing alert issues for AirPods](#addressing-alert-issues-for-airpods) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Updated support documentation](#updated-support-documentation) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Precision Finding](#precision-finding) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Display alert with sound](#display-alert-with-sound) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Refining unwanted tracking alert logic](#refining-unwanted-tracking-alert-logic) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Tuning AirTag\u2019s sound](#tuning-airtag\u2019s-sound) - [In Practice](#in-practice) \u00a0\u00a0\u00a0\u00a0- [Test setup](#test-setup) \u00a0\u00a0\u00a0\u00a0- [Android detection](#android-detection) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [Tracker Detect](#tracker-detect) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- [AirGuard](#airguard) \u00a0\u00a0\u00a0\u00a0- [iOS detection](#ios-detection) - [Closing Thoughts](#closing-thoughts) -- /MARKDOWN --\n  Let\u2019s take a look at all of Apple\u2019s (planned) tracking protection features and how we could bypass them with an  OpenHaystack-based AirTag clone.\n    \u201cEvery AirTag has a unique serial number, and paired AirTags are associated with an Apple ID. Apple can provide the paired account details in response to a subpoena or valid request from law enforcement. We have successfully partnered with them on cases where information we provided has been used to trace an AirTag back to the perpetrator\u201d\n  The microcontroller used to build the AirTag clone (e.g. an ESP32) does not have an AirTag serial number (neither in software nor on the hardware).\n OpenHaystack-based clones are already not paired with an Apple ID (as this is not necessary as a result of the privacy-focused design).\n  Initially, an AirTag that has not been in Bluetooth reach of its paired Apple device for over 3 days started to beep. With an update in June 2021, Apple decreased this to a random time frame between 8 and 24 hours.\n This one is easy: Our ESP32 does not even have a speaker. Furthermore the OpenHaystack firmware does not implement  the BLE service to remotely trigger the sound, so the \u201cPlay Sound\u201d-button is not even shown.\n As a side note, there is already a market for so-called \u201cSilent AirTags\u201d (modified AirTags that had their speaker removed/disconnected).\n    \u201cIf any AirTag, AirPods, or other Find My network accessory separated from its owner is seen moving with you over time, you&#39;ll be notified\u201d\n Here, things are becoming more interesting. From the news reports linked in the beginning, this also seems to be the most common way unwanted AirTags are detected.\n  On the one hand, Apple wants AirTags to be indistinguishable from each other via Bluetooth to prevent identification of a specific AirTag over a longer period of time to thwart continuous tracking of specific AirTags (or iPhones, etc.) via a network of distributed Bluetooth receivers\n On the other hand, Apple wants to identify specific AirTags over some period of time to distinguish between one AirTag traveling with the user (where it should send a notification), and the user walking through a busy area constantly receiving pings from different nearby AirTags (where it should not alert the user)\n By programming an AirTag (clone) to continuously broadcast new, never-seen-before public keys (just once per public key), we can simulate the second scenario with a single device.\n For the below PoC/experiment, the AirTag clone was iterating over a list of 2000 preloaded public keys and sending 1 beacon per public key every 30s (more details in the next section).\n  With the initial launch of AirTags, besides the beeping there was no way for Android users to be notified of unwanted tracking devices traveling with them. In December 2021, Apple released an Android app called  Tracker Detect that could be used to actively scan for nearby tracking devices.\n   The app does not run in the background; an Android user would need to perform an active scan when they are close to the AirTag\n In case the app tries to prevent false positives from a single received beacon from a passing Find My device, it is vulnerable to the same \u201c1-beacon-per-public-key-attack\u201d described above\n (There is also a (better) alternative app by the OpenHaystack team called AirGuard, which we will also discuss shortly in the next section)\n  While OpenHaystack-based AirTag clones are not paired with an Apple ID, the retrieval of location reports requires authentication. Such an account however can be created anonymously using an email address without any identity/KYC-verification.\n The OpenHaystack team currently  even considers running a server that proxies those location report requests, which in the future might take away the need to create an account oneself.\n  Let\u2019s take a look at each item listed in the news statement\u2019s \u201cAdvancements Coming\u201d section:\n  Irrelevant as it won\u2019t deter criminals and is not seen when using OpenHaystack.\n  Irrelevant as it just changes the warning message content in case an alert is triggered by AirPods.\n    Precision Finding requires Apple\u2019s U1 Ultra Wideband chip in the tag. As the AirTag clone microcontroller does not include such an UWB chip, those simply can\u2019t be found using Precision Finding.\n  \u201dWhen AirTag automatically emits a sound to alert anyone nearby of its presence and is detected\u00a0moving with your iPhone, iPad, or iPod touch, we will also display an alert on your device that you can then take action on, like playing a sound or using Precision Finding, if available. This will help in cases where the AirTag may be in a location where it is hard to hear, or if the AirTag speaker has been tampered with.\u201d\n This notification can simply be skipped in a clone implementation (as it\u2019s currently the case with OpenHaystack).\n  \u201cOur unwanted tracking alert system uses sophisticated logic to determine how we alert users. We plan to update our unwanted tracking alert system to notify users earlier that an unknown AirTag or Find My network accessory may be traveling with them.\u201d\n This is very vague, but the most relevant point. The dilemma: if they don\u2019t want to notify users every single time a location report is sent to Apple by their device, it will be hard to defend against constantly rotating public keys.\n In any case, the conducted experiment shows that currently the tracking alert logic can be bypassed while still being able to track iPhone users.\n  \u201cCurrently, iOS users receiving an unwanted tracking alert can play a sound to help them find the unknown AirTag. We will be adjusting the tone sequence to use more of the loudest tones to make an unknown AirTag more easily findable.\u201d\n This will only be helpful if already having received a tracking alert and does not apply to AirTag clones without a speaker.\n  &#34;In theory there is no difference between theory and practice. In practice there is.&#34;  \u00a0 \u00a0- Benjamin Brewster\n I decided to test my hypotheses (mainly on the single-use public keys) by building such a stealth AirTag and performing a real-world experiment.\n     A way to retrieve and display the decrypted location reports for each broadcasted public key\n For the experiment, I decided to pre-generate random key pairs on the correct elliptic curve and include the public keys in the firmware to be flashed. The corresponding private keys will be stored in an OpenHaystack-compatible .plist file. In theory, this allows using the vanilla (and even pre-compiled) OpenHaystack macOS client to import each possible public key as its own tag.\n In practice, the client is not designed to handle thousands of tags (note that Apple is officially only allowing 16!), so I made a few changes to optimize for that use case (combining location report requests for different devices into a single HTTP request, skipping keychain operations, slightly optimizing a quadratic complexity operation).\n The modified firmware and macOS retrieval application can be found at  https://github.com/positive-security/find-you. The python script used for generating key pairs in the correct format has purposefully been omitted.\n  For the experiment, I chose to iterate through 2000 key pairs and send one beacon every 30 seconds (a public key will therefore be repeated every ~17 hours)\n Instead of a finite list of keypairs, a common seed and derivation algorithm could be used on the AirTag clone and in the Mac application to generate a virtually never-repeating stream of keys\n When using a irreversible derivation function and always overwriting the seed with the next round\u2019s output, Apple or law enforcement could not retrieve the tag\u2019s previously broadcasted public keys or discovered locations, even with physical access in case the device is discovered\n The tracked person was using an iPhone with iOS 15.3.1 with  all relevant settings configured to receive Find My Safety Alerts\n The stealth AirTag clone was with the tracked person for over 5 days, also when leaving their house\n    Running Apple\u2019s Tracker Detect\u2019s active scan to search for Find My devices will not show the stealth AirTag at all, all the while location reports for the broadcasted public keys were uploaded and could be retrieved.\n  While not having investigated this more, the likely reason is that the app is waiting for multiple beacons with the same public key before the tag is shown in the UI.\n  First released in August 2021 (&gt;4 months before Tracker Detect) by SEEMOO, the TU Darmstadt lab also behind OpenHaystack,  AirGuard provides an alternative way to scan for nearby Find My devices.\n The advantage is that, similar to Apple\u2019s iOS implementation, the app also supports continuous scanning in background. However, this feature is also implemented in a way that requires multiple beacons with the same public key to trigger an alert, and therefore can also be bypassed with a \u201c1-beacon-per-public-key\u201d-AirTag:\n \u201cWhenever a tracker gets detected multiple times the app will recognize this. It compares the locations where the tracker has been detected. If a tracker is detected at least 3 times and the locations have changed (to make sure [it&#39;s] not your neighbour) the app sends you a notification.\u201d\n In contrast to Tracker Detect, AirGuard&#39;s \u201cManual Scan\u201d feature however will show the stealth AirTag clone (as one new device per received beacon):\n   The stealth AirTag clone was passed to the tracked person on February 16 and continuously stayed with them until February 21. During this time frame, the person spent a lot of time at their home, but we could also track several trips outside (not shown below for privacy reasons).\n  There is not much to say except that neither the tracked iPhone user, nor their iPhone-using roommate received any tracking alerts throughout that period. All the while, their iPhones were forwarding their location to Apple\u2019s servers in a way that allowed me to retrieve and decrypt them.\n    &#34;It\u2019s why we innovated with the first-ever proactive system to alert you of unwanted tracking. We hope this starts an industry trend for others to also provide these sorts of proactive warnings in their products.\u201d\n I find it quite funny how they promote having tracking alerts for a tracking system that they have brought to life in the first place. They introduced the first-ever system for easy, cheap, worldwide tracking into a world where \u201cunwanted tracking has long been a societal problem\u201d, applaud themselves for implementing broken anti-stalking features, and now coerce others into also implementing protection against the tracking network they have rolled out.\n The main risk does not lie in the introduction of AirTags, but in the introduction of the Find My ecosystem that utilizes the customer\u2019s devices to provide this Apple service. Since Apple in the current Find My design can\u2019t limit its usage to only genuine AirTags (and official partner\u2019s devices), they need to take into account the threats of custom-made, potentially malicious beacons that implement the Find My protocol (or AirTags with a modified firmware). With a power bank + ESP32 being cheaper than an AirTag, this might be an additional motivation for some to build a clone themselves instead.\n With the system\u2019s current design, it seems very difficult to technically distinguish one malicious AirTag clone with constant public key rotations continuously traveling with you from you passing by a few genuine AirTags in your day-to-day life.\n While the unusual behavior of constantly receiving Find My beacons from seemingly different devices every time could be detected by implementing some more logic, this probably falls down when the AirTag clone is then sending data in random intervals and, in case it\u2019s needed to trick the behavioral analysis, a few beacons multiple times.\n When performing the tests, only the active scan mode of the 3rd-party app AirGuard was detecting the stealth AirTag clone. While we don\u2019t encourage misuse, we hope that sharing this experiment will yield positive changes to the security and privacy of the Find My ecosystem.", "posttime": "2022-02-22 03:08:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5efa\u9020,building,airtag", "title": "\u627e\u5230\u4f60\uff1a\u5efa\u9020\u9690\u5f62\u822a\u7a7a\u6807\u7b7e\u514b\u9686", "title_en": "Find You: Building a stealth AirTag clone", "transed": 1, "url": "https://positive.security/blog/find-you", "via": "", "real_tags": ["\u5efa\u9020", "building", "airtag"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074542, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u4ece4\u4f4d\u5fae\u63a7\u5236\u5668\u5230\u623f\u95f4\u5927\u5c0f\u7684\u5927\u578b\u673a\u7684\u65c5\u7a0b\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5c06C\u79fb\u690d\u5230\u6bcf\u4e00\u4e2a\u5927\u578b\u673a\u4e0a\uff0c\u5e2e\u52a9\u4eba\u4eec\u5c06\u8bed\u8a00\u7684\u672c\u8d28\u4e0e\u5176\u8bde\u751f\u7684\u73af\u5883\u533a\u5206\u5f00\u6765\u3002\u6211\u627e\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u6280\u672f\u624b\u518c\u548c\u89c6\u9891\uff0c\u5e2e\u52a9\u6bcf\u53f0\u7535\u8111\u7115\u7136\u4e00\u65b0\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u901a\u8fc7\u4ed4\u7ec6\u7f16\u5199\u53ef\u79fb\u690d\u7684ANSI C\u4ee3\u7801\u5e76\u575a\u6301\u4f7f\u7528\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5728\u51e0\u4e4e\u6240\u6709\u8fd9\u4e9b\u5947\u602a\u7684\u7cfb\u7edf\u4e0a\u7f16\u8bd1\u548c\u5de5\u4f5c\uff0c\u800c\u65e0\u9700\u4fee\u6539\u3002\n\u6211\u5e0c\u671b\u63a5\u89e6\u5230\u8fd9\u4e9b\u4f8b\u5b50\u5c06\u6709\u52a9\u4e8e\u60a8\u66f4\u65b9\u4fbf\u5730\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u6d88\u9664\u8fd9\u6837\u7684\u4fe1\u5ff5\uff0c\u5373\u5177\u6709\u591a\u6838\u3001\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u548c\u6d41\u6c34\u7ebf\u7684\u5f53\u524d\u8ba1\u7b97\u673a\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5bf9C\u6765\u8bf4\u592a\u964c\u751f\u4e86\u3002\u4e00\u79cd\u8db3\u4ee5\u5904\u7406\u65e7\u8ba1\u7b97\u673a\u591a\u6837\u6027\u7684\u8bed\u8a00\uff0c\u8db3\u4ee5\u5904\u7406\u5f53\u4eca\u76f8\u5bf9\u540c\u8d28\u7684CPU\u3002\n\u4e3a\u4e86\u51c6\u5907\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u4ece\u4ea8\u5229\u00b7\u62c9\u6bd4\u8bfa\u7ef4\u8328\uff08Henry Rabinowitz\uff09\u7684\u300a\u4fbf\u643a\u5f0fC\u300b\uff08Portable C\uff09\u4e00\u4e66\u4e2d\u56de\u987e\uff0c\u5bfb\u627e\u80fd\u591f\u8bf4\u660e\u4ed6\u6307\u51fa\u7684\u6bcf\u4e00\u4e2a\u7f3a\u9677\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u4f60\u5e94\u8be5\u9605\u8bfb\u8fd9\u672c\u4e66\uff0c\u4e86\u89e3\u4f5c\u8005\u6240\u8bf4\u7684\u201cC-World\u201d\uff0c\u4e00\u4e2aC\u7a0b\u5e8f\u6267\u884c\u7684\u8bed\u4e49\u6a21\u578b\u3002\n\u867d\u7136\u8fd9\u6bb5\u89c6\u9891\u6ca1\u6709\u663e\u793a\u8fd0\u884c\u4e2d\u7684\u771f\u5b9e\u8ba1\u7b97\u673a\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u4e00\u4e2a\u63a7\u5236\u9762\u677f\u7684\u5f62\u72b6\u3002\u89c6\u9891\u4e2d\u7684\u8fd9\u4f4d\u7ec5\u58eb\u5bf9\u5b83\u6709\u7740\u4e0d\u5207\u5b9e\u9645\u7684\u9b45\u529b\u3002\n\u8be5\u5efa\u7b51\u7684\u7b2c\u4e00\u4e2a\u4e0d\u5bfb\u5e38\u4e4b\u5904\u662f\u5b83\u7684\u5b57\u6570\u3002\u60a8\u53ef\u80fd\u719f\u6089\u5177\u6709\u4e24\u4f4d\u5927\u5c0f\u5e42\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u8fd9\u4e9bUnisys\u7cfb\u5217\u4f7f\u7528\u7684\u662f9\u7684\u500d\u6570\uff01\u5b57\u957f\u4e3a18\u4f4d\uff0c\u5e73\u53f0\u7684C\u7f16\u8bd1\u5668\u4f7f\u7528\uff1a\n\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u6709\u8da3\uff0c\u5947\u602a\u5927\u5c0f\u7684\u6574\u6570\u4f7f\u75281\u7684\u8865\u7801\u4e8c\u8fdb\u5236\u7b97\u6cd5\u3002\u6ca1\u9519\uff0c\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6b63\u96f6\u548c\u8d1f\u96f6\u6709\u4e0d\u540c\u7684\u503c\u3002\uff08CDC\u7684\u8ba1\u7b97\u673a\u4e5f\u4f7f\u7528\u4e86\u4e00\u4e2a\u7684\u8865\u5145\u3002\uff09\n36\u4f4d\u6574\u6570\u53ef\u4ee5\u4fdd\u5b58\u5f88\u591a\u6570\u636e\uff0c\u4f46\u662f\u731c\u731c\u5728\u8fd9\u4e2a\u4f53\u7cfb\u7ed3\u6784\u4e2d\u5b83\u4eec\u4e0d\u80fd\u4fdd\u5b58\u4ec0\u4e48\uff1f\u6307\u9488\u503c\u3002Unisys 2200\u7684C manaul\u7b2c8.6.1\u8282\u89c4\u5b9a\uff1a\nUC\u4e2d\u7684\u6307\u9488\u4e0d\u80fd\u89c6\u4e3a\u6574\u6570\u3002UC\u6307\u9488\u662f\u4e24\u4e2a\u5b57\u7684\u7ed3\u6784\uff0c\u7b2c\u4e00\u4e2a\u5b57\u662f\u94f6\u884c\u7684\u57fa\u865a\u62df\u5730\u5740\uff08VA\uff09\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u662f\u4f4d\u5b57\u6307\u9488\u3002\u7531\u4e8e2200\u786c\u4ef6\u6ca1\u6709\u5b57\u8282\u6307\u9488\uff0c\u6240\u4ee5\u4f4d\u5b57\u6307\u9488\u662f\u5fc5\u9700\u7684\uff1b2200\u786c\u4ef6\u4e2d\u7684\u57fa\u672c\u6307\u9488\u662f\u4e00\u4e2a\u5b57\uff0836\u4f4d\uff09VA\u6307\u9488\uff0c\u53ea\u80fd\u6307\u5411\u5b57\u3002UC\u6307\u9488\u7684\u4f4d\u5b57\u90e8\u5206\u5728\u5b57\u7684\u524d6\u4f4d\u6709\u4f4d\u504f\u79fb\uff0c\u5728\u5b57\u7684\u4e0b24\u4f4d\u6709\u5b57\u504f\u79fb\u3002\u5982\u679c\u5c06UC\u6307\u9488\u8f6c\u6362\uff08\u5f3a\u5236\u8f6c\u6362\uff09\u4e3a36\u4f4d\u6574\u6570\uff08int\u3001long\u6216unsigned\uff09\uff0c\u5219\u4f4d\u504f\u79fb\u91cf\u5c06\u4e22\u5931\u3002\u5c06\u5176\u8f6c\u6362\u56deC\u6307\u9488\u4f1a\u5bfc\u81f4\u5b83\u6307\u5411\u5355\u8bcd\u8fb9\u754c\u3002\u5982\u679c\u5728\u5c06\u6574\u6570\u8f6c\u6362\u56de\u6307\u9488\u4e4b\u524d\u5c06\u5176\u52a01\uff0c\u6307\u9488\u5c06\u6307\u5411\u4e0b\u4e00\u4e2a\u5355\u8bcd\uff0c\u800c\u4e0d\u662f\u4e0b\u4e00\u4e2a\u5b57\u8282\u300236\u4f4d\u6574\u6570\u4e0d\u80fd\u4fdd\u5b58UC\u6307\u9488\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002\n\u5982\u679c\u60a8\u8ba4\u4e3a\u5e38\u89c4\u6307\u9488\u8981\u6c42\u5f88\u9ad8\uff0c\u90a3\u4e48\u7b2c8.6.2\u8282\u8bf4\u51fd\u6570\u6307\u9488\u9700\u8981\u6574\u6574\u516b\u4e2a\u5355\u8bcd\uff01\n\u51fd\u6570\u6307\u9488\u7684\u957f\u5ea6\u4e3a8\u4e2a\u5b57\uff0c\u683c\u5f0f\u5b8c\u5168\u4e0d\u540c\u3002UC\u751f\u6210\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\uff08\u5f53\u524d\uff09\u53ea\u4f7f\u7528\u4e868\u5b57\u51fd\u6570\u6307\u9488\u4e2d\u7684\u4e24\u4e2a\u5b57\u3002\uff08\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4e2a\u8bcd\u3002\uff09\uff08\u5176\u4ed6UCS\u8bed\u8a00\u5982FORTRAN\u548cCOBOL\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u5355\u8bcd\u3002\uff09\u53ef\u4ee5\u5c06UC\u6570\u636e\u6307\u9488\u8f6c\u6362\u4e3a\u51fd\u6570\u6307\u9488\uff0c\u5c06\u51fd\u6570\u6307\u9488\u8f6c\u6362\u4e3a\u6570\u636e\u6307\u9488\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u4fe1\u606f\u3002\u5305\u542b\u4fe1\u606f\u7684\u4e24\u4e2a\u5355\u8bcd\u53ea\u662f\u6765\u56de\u79fb\u52a8\u3002\n\u6700\u540e\uff0c\u5982\u679c\u4f60\u8ba4\u4e3aUnisys\u4ec5\u9650\u4e8e\u5386\u53f2\uff0c\u4f60\u57fa\u672c\u4e0a\u662f\u5bf9\u7684\uff0c\u4f46\u5e76\u975e\u5b8c\u5168\u6b63\u786e\u3002\u4ed6\u4eec\u4ecd\u5728\u5236\u9020\u548c\u9500\u552e\u4f7f\u75282200\u4f53\u7cfb\u7ed3\u6784\u7684\u201cClearPath Dorado\u201d\u3002\n\u4e0e\u4e4b\u524d\u7684Unisys\u673a\u5668\u4e00\u6837\uff0cClearPath\u5177\u6709\u4e0d\u540c\u5bfb\u5e38\u7684\u5b57\u957f\u3002\u4ee5\u4e0b\u662fClearPath C\u7f16\u8bd1\u5668\u7684\u6574\u6570\u6570\u636e\u7c7b\u578b\u5927\u5c0f\uff1a\n\u8fd9\u53f0\u673a\u5668\u65e2\u4e0d\u4f7f\u75282\u7684\u8865\u7801\uff0c\u4e5f\u4e0d\u4f7f\u75281\u7684\u8865\u7801\u6709\u7b26\u53f7\u7b97\u672f\uff0c\u800c\u662f\u4f7f\u7528\u7b26\u53f7\u5927\u5c0f\u5f62\u5f0f\u3002\n\u4e00\u53f0\u53ef\u9760\u7684\u65e7\u673a\u5668\uff0c\u62e5\u6709\u4e00\u4e2a\u5fe0\u8bda\u7684\u793e\u533a\u3002\u4e0e\u5f53\u4eca\u5927\u591a\u6570\u8ba1\u7b97\u673a\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u79cd\u76f8\u5f53\u666e\u901a\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cchar\u6570\u636e\u7c7b\u578b\u662f\u65e0\u7b26\u53f7\u7684\u3002\u6700\u540e\uff0c\u8fd9\u79cd\u4f53\u7cfb\u7ed3\u6784\u7684\u6807\u51c6\u7f16\u8bd1\u5668\u4fdd\u8bc1\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\u51fd\u6570\u53c2\u6570\u3002\nC\u7684\u53ef\u79fb\u690d\u6027\u5982\u6b64\u4e4b\u5f3a\uff0c\u4ee5\u81f3\u4e8e\u6709\u4eba\u4e3a\u4e00\u53f0\u672c\u673a\u8fd0\u884cLisp\u7684\u8ba1\u7b97\u673a\u7f16\u5199\u4e86\u4e00\u4e2a\u7f16\u8bd1\u5668\u2014\u2014Symbolics C\u3002\u7784\u51c6Symbolics Lisp\u673a\u5668\u9700\u8981\u4e00\u4e9b\u521b\u9020\u529b\u3002\u4f8b\u5982\uff0c\u6307\u9488\u88ab\u8868\u793a\u4e3a\u4e00\u5bf9\uff0c\u7531\u5bf9\u5217\u8868\u7684\u5f15\u7528\u548c\u5217\u8868\u4e2d\u7684\u6570\u5b57\u504f\u79fb\u7ec4\u6210\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7a7a\u6307\u9488\u662f&lt\uff1b\u96f6\uff0c0&gt\uff1b\uff0c\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u6ca1\u6709\u504f\u79fb\u91cf\u7684\u96f6\u5217\u8868\u3002\u5f53\u7136\u4e0d\u662f\u6309\u4f4d\u96f6\u6574\u6570\u503c\u3002\n\u5b57\u957f\u4e3a16\u4f4d\u3002\u867d\u7136\u6307\u4ee4\u5fc5\u987b\u4f4d\u4e8e16\u4f4d\u8fb9\u754c\u4e0a\uff0c\u4f46\u5bf9\u6570\u636e\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002\u4ee5\u4e0b\u662f\u8ba1\u7b97\u673a\u4e0a\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u6574\u6570\u7c7b\u578b\u7684\u5927\u5c0f\uff1a\n\u8fd9\u79cd\u5904\u7406\u5668\u88ab\u5e94\u7528\u5230\u8bb8\u591a\u6e38\u620f\u673a\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u6253\u5370\u673a\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6b63\u5e38\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u5c3d\u7ba1big-endian\u7684\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4e3a\u65e0\u7b26\u53f7\u5b57\u7b26\u3002\u6307\u9488\uff0832\u4f4d\uff09\u7684\u5927\u5c0f\u4e5f\u4e0d\u540c\u4e8e\u6574\u6570\uff0816\u4f4d\uff09\u3002\n\u4e00\u4e2a\u91cd\u8981\u7684\u602a\u7656\u662f\u673a\u5668\u5bf9\u6570\u636e\u5bf9\u9f50\u975e\u5e38\u654f\u611f\u3002\u5904\u7406\u5668\u6709\u4e24\u4e2a\u5b57\u8282\u7684\u7c92\u5ea6\uff0c\u7f3a\u4e4f\u5904\u7406\u672a\u5bf9\u9f50\u5730\u5740\u7684\u7535\u8def\u3002\u5f53\u51fa\u73b0\u8fd9\u6837\u4e00\u4e2a\u5730\u5740\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u6700\u521d\u7684Mac\uff08\u4e5f\u57fa\u4e8e68000\uff09\u901a\u5e38\u4f1a\u8981\u6c42\u7528\u6237\u5728\u6821\u51c6\u9519\u8bef\u540e\u91cd\u65b0\u542f\u52a8\u673a\u5668\u3002\uff08\u7c7b\u4f3c\u5730\uff0c\u4e00\u4e9bSparc\u673a\u5668\u4f1a\u56e0\u5bf9\u9f50\u95ee\u9898\u5f15\u53d1SIGBUS\u5f02\u5e38\u3002\uff09\n\u8fd9\u53f0\u673a\u5668\u5bf9\u5b57\u7b26\u548c\u6574\u6570\u6307\u9488\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u53f7\u65b9\u6848\u3002\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4f4d\u7f6e\u5fc5\u987b\u7531\u4e0d\u540c\u7684\u5730\u5740\u5f15\u7528\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6307\u9488\u7c7b\u578b\u3002char*\u548cint*\u4e4b\u95f4\u7684\u8f6c\u6362\u5b9e\u9645\u4e0a\u4f1a\u6539\u53d8\u6307\u9488\u5185\u7684\u5730\u5740\u3002\u514b\u91cc\u65af\u00b7\u6258\u96f7\u514b\u8bb2\u8ff0\u4e86\u7ec6\u8282\u3002\n\u8fd9\u53f0\u673a\u5668\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u8b66\u544a\u6545\u4e8b\uff0c\u5173\u4e8e\u8bd5\u56fe\u50cf\u5904\u7406\u6574\u6570\u4e00\u6837\u5904\u7406\u6307\u9488\u503c\u3002\u5728\u8fd9\u79cd\u67b6\u6784\u4e2d\uff0cchar*\u6216void*\u662f\u79d8\u5bc6\u7684\u5b57\u6307\u9488\uff0c\u5176\u504f\u79fb\u91cf\u5b58\u50a8\u5728\u4e09\u4e2a\u672a\u4f7f\u7528\u7684\u9ad8\u9636\u4f4d\u4e2d\u3002\u56e0\u6b64\uff0c\u5c06char*\u4f5c\u4e3a\u6574\u6570\u503c\u9012\u589e\u5c06\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f46\u4fdd\u6301\u76f8\u540c\u7684\u504f\u79fb\u91cf\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u4f7f\u7528\u4e86\u975e\u4f4d\u96f6\u7684\u7a7a\u6307\u9488\u5730\u5740\u3002\u7279\u522b\u662f\uff0c\u5b83\u4f7f\u7528\u6bb507777\uff0c\u7a7a\u6307\u9488\u7684\u504f\u79fb\u91cf\u4e3a0\u3002\uff08\u4e00\u4e9b\u970d\u5c3c\u97e6\u5c14\u516c\u725b\u5927\u578b\u673a\u4f7f\u752806000\u4f5c\u4e3aNULL\u6307\u9488\u503c\uff0c\u8fd9\u662f\u975e\u96f6NULL\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\uff09\nDECstation\u4f7f\u7528R3000\u5904\u7406\u5668\u3002\u5b83\u53ef\u4ee5\u7531\u7a0b\u5e8f\u5458\u81ea\u884c\u51b3\u5b9a\u5207\u6362\u5230\u5c0f\u7aef\u6216\u5927\u7aef\u6a21\u5f0f\u3002\u4e00\u4e2a\u602a\u7656\u662f\uff0c\u5904\u7406\u5668\u4f1a\u5f15\u53d1\u6709\u7b26\u53f7\u6574\u6570\u6ea2\u51fa\u5f02\u5e38\uff0c\u8fd9\u4e0e\u8bb8\u591a\u5176\u4ed6\u5904\u7406\u5668\u4e0d\u540c\uff0c\u5b83\u4eec\u4f1a\u81ea\u52a8\u6362\u884c\u4e3a\u8d1f\u503c\u3002\u56e0\u6b64\uff0c\u5141\u8bb8\u6709\u7b26\u53f7\u6574\u6570\u6ea2\u51fa\uff08\u4f8b\u5982\u5728\u5faa\u73af\u4e2d\uff09\u662f\u4e0d\u53ef\u79fb\u690d\u7684\u3002\n\u8fd9\u53f0\u8ba1\u7b97\u673a\u5b9e\u9645\u4e0a\u662fARM\u67b6\u6784\u7684\u8d77\u6e90\uff0c\u6211\u4eec\u901a\u5e38\u5728\u624b\u673a\u548cArduinos\u4e2d\u627e\u5230\u8fd9\u79cd\u67b6\u6784\u3002Acorn\u7279\u522b\u4f7f\u7528ARM2\uff0c\u5177\u670932\u4f4d\u6570\u636e\u603b\u7ebf\u548c26\u4f4d\u5730\u5740\u7a7a\u95f4\u3002\u4e0e\u6469\u6258\u7f57\u62c968000\u4e00\u6837\uff0cARM2\u4e3a\u672a\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u5f15\u53d1\u4e86SIGBUS\u5f02\u5e38\u3002\uff08\u8bf7\u6ce8\u610f\uff0cArduino\u662f\u4ecd\u7136\u4f7f\u752816\u4f4d\u6574\u6570\u7684\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\uff09\n\u6bcf\u4e00\u4f4d\u5199\u82f1\u7279\u5c14286\u7f16\u7a0b\u7684\u4eba\u90fd\u8bf4\u5b83\u7684\u5206\u6bb5\u5185\u5b58\u67b6\u6784\u662f\u591a\u4e48\u75db\u82e6\u3002\u6bcf\u4e2a\u5185\u5b58\u6bb5\u7684\u5730\u5740\u53ef\u8fbe64KB\uff0c\u8fd9\u662fC\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u6570\u636e\u5bf9\u8c61\u5206\u914d\u7684\u6700\u5927\u8fde\u7eed\u5185\u5b58\u533a\u57df\u3002\uff08\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0csize_t\u5c0f\u4e8eunsigned int\u3002\uff09\n\u56e0\u4e3a\u5185\u5b58\u4e2d\u4efb\u4f55\u5355\u8bcd\u7684\u5b8c\u6574\u5730\u5740\u90fd\u662f\u7531\u4e00\u4e2a\u6bb5\u548c\u504f\u79fb\u91cf\u6307\u5b9a\u7684\uff0c\u6240\u4ee5\u67094096\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e24\u8005\u7684\u67d0\u79cd\u7ec4\u5408\u6765\u5f15\u7528\u5b83\u3002\uff08\u4f8b\u5982\uff0c\u5730\u57400x1234\u53ef\u4ee5\u5f15\u7528\u4e3a0123:0004\u30010122:0014\u7b49\uff09\u53e6\u5916\uff0c\u76f8\u90bb\u58f0\u660e\u7684\u53d8\u91cf\u53ef\u80fd\u4f4d\u4e8e\u4e0d\u540c\u7684\u6bb5\u4e2d\uff0c\u5728\u5185\u5b58\u4e2d\u76f8\u8ddd\u5f88\u8fdc\u3002\u8fd9\u6253\u7834\u4e86\u4eba\u4eec\u4f7f\u7528\u7684\u4e00\u4e9b\u975e\u5e38\u4e0d\u53ef\u53d6\u7684\u4f0e\u4fe9\uff0c\u6bd4\u5982\u901a\u8fc7\u8bb0\u5fc6\u8bbe\u7f6e\u5730\u5740\u4e4b\u95f4\u7684\u6574\u4e2a\u5185\u5b58\u8303\u56f4\u6765\u5c06\u591a\u4e2a\u53d8\u91cf\u5757\u5f52\u96f6\u3002\n\u5c3d\u7ba1\u6709\u8fd9\u79cd\u5c34\u5c2c\uff0c\u4e2a\u4eba\u7535\u8111\u8fd8\u662f\u5f88\u70ed\uff0c\u52301983\u5e74\u5b57\u8282\u6742\u5fd7\uff08\u7b2c8\u5377\uff0c\u7b2c8\u671f\uff09\u53d1\u73b0IBM PC\u6709\u4e5d\u79cd\u4e0d\u540c\u7684C\u7f16\u8bd1\u5668\uff01\u6211\u627e\u5230\u4e86\u5176\u4e2d\u4e00\u6b3e\u4ea7\u54c1Lattice C\u7684\u624b\u518c\u3002\u5b83\u4e0eIBM\u5176\u4ed6\u4ea7\u54c1\uff08\u5982System 370\uff09\u4e0a\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u76f8\u540c\u3002\n\u5728\u6676\u683cC\u4e2d\uff0cshort\u548cint\u90fd\u662f16\u4f4d\uff0c\u4f46long\u662f32\u4f4d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cChar\u662f\u6709\u7b26\u53f7\u7684\uff0c\u5f53\u7136x86\u662flittle endian\u3002\n\u6309\u7167\u8bb0\u5fc6\u5e76\u53d1\u75c7\u7684\u4e3b\u9898\uff0c\u8fdb\u51658051\u3002\u5b83\u662f\u4e00\u4e2a\u5fae\u63a7\u5236\u5668\uff0c\u91c7\u7528\u201c\u54c8\u4f5b\u4f53\u7cfb\u7ed3\u6784\u201d\u8fd9\u610f\u5473\u7740\u5b83\u4e0e\u8fde\u63a5\u5230\u540c\u4e00\u7cfb\u7edf\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u5185\u5b58\u8fdb\u884c\u901a\u4fe1\u3002\u5b83\u5bf9ROM\u7a7a\u95f4\u4f7f\u7528\u9762\u5411\u5b57\u7684\u5bfb\u5740\uff0c\u5bf9RAM\u7a7a\u95f4\u4f7f\u7528\u9762\u5411\u5b57\u8282\u7684\u5bfb\u5740\u3002\u5b83\u9700\u8981\u4e0d\u540c\u5927\u5c0f\u7684\u6307\u9488\u3002\n\u8bb8\u591a\u5730\u5740\u6a21\u68f1\u4e24\u53ef\uff0c\u53ef\u80fd\u6709\u610f\u4e49\u5730\u6307\u5411RAM\u6216ROM\u5e93\u3002Crossware\u7b498051\u7f16\u8bd1\u5668\u4f7f\u7528\u7a0d\u5927\u7684\u201c\u901a\u7528\u201d\u6307\u9488\uff0c\u5c06\u5185\u5b58\u7c7b\u6807\u8bb0\u4e3a\u9ad8\u4f4d\u5b57\u8282\uff0c\u4ee5\u89e3\u51b3\u6b67\u4e49\u3002\nSaturn\u7cfb\u5217\u662fHewlett-Packard\u572820\u4e16\u7eaa80\u5e74\u4ee3\u4e3a\u53ef\u7f16\u7a0b\u79d1\u5b66\u8ba1\u7b97\u5668\u548c\u5fae\u578b\u8ba1\u7b97\u673a\u5f00\u53d1\u76844\u4f4d\u5fae\u5904\u7406\u5668\u3002\u4e0a\u9762\u7684\u89c6\u9891\u663e\u793a\u4e86HP-71B\u8ba1\u7b97\u5668\uff0c\u5b83\u5b9e\u9645\u4e0a\u66f4\u50cf\u662f\u4e00\u53f0\u5305\u88c5\u5947\u7279\u7684\u901a\u7528\u8ba1\u7b97\u673a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u8bfb\u5361\u5668\u63d2\u69fd\u538b\u7f29\u4e00\u6761\u78c1\u6761\uff0c\u5c06\u5927\u91cf\u6570\u636e\u52a0\u8f7d\u5230\u5176\u4e2d\u3002\n\u571f\u661f\u5904\u7406\u5668\u6ca1\u6709\u786c\u4ef6\u6307\u4ee4\u6765\u6267\u884c\u6709\u7b26\u53f7\u7b97\u672f\u3002\u5fc5\u987b\u4f7f\u7528\u5176\u4ed6\u6c47\u7f16\u6307\u4ee4\u7684\u7ec4\u5408\u6765\u6a21\u62df\u3002\u56e0\u6b64\uff0c\u65e0\u7b26\u53f7\u6570\u8fd0\u7b97\u66f4\u6709\u6548\u3002char\u9ed8\u8ba4\u4e3a\u672a\u7b7e\u540d\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\n\u8bb0\u5fc6\u5f88\u6709\u8da3\u3002\u5b83\u7684\u5730\u5740\u662f\u57fa\u4e8e\u534a\u5b57\u8282\u7684\uff0c\u53ef\u4ee5\u5bfb\u57401M\u534a\u5b57\u8282=512Kb\u3002\u6307\u9488\u4e3a20\u4f4d\uff0c\u4f46\u5b58\u50a8\u4e3a32\u4f4d\u3002\u571f\u661fC\u6570\u636e\u7c7b\u578b\u975e\u5e38\u6b63\u5e38\uff1a\n\u8fd9\u662f\u6700\u65e9\u7684\u4f4e\u6210\u672c8\u4f4d\u5fae\u5904\u7406\u5668\u4e4b\u4e00\uff0c\u5b83\u88ab\u7528\u4e8e\u5404\u79cd\u7cfb\u7edf\uff0c\u5305\u62ec\u82f9\u679cII\u3001Commodore 64\u548c\u4efb\u5929\u5802\u5a31\u4e50\u7cfb\u7edf\u3002\u8fd9\u4e2a\u5904\u7406\u5668\u5b8c\u5168\u4e0d\u9002\u5408C\u7f16\u8bd1\u5668\u3002\u67e5\u770bCC65\u7f16\u8bd1\u5668\u7684\u75af\u72c2\u4f18\u5316\u5efa\u8bae\u3002\n\u7a0b\u5e8f\u96c6\u4e2d\u6ca1\u6709\u4e58\u6cd5\u6216\u9664\u6cd5\u64cd\u4f5c\uff0c\u5fc5\u987b\u4e0e\u5176\u4ed6\u6307\u4ee4\u4e00\u8d77\u6a21\u62df\u3002\n\u8bbf\u95ee\u4efb\u4f55\u9ad8\u4e8e\u201c\u96f6\u9875\u201d\uff080x0\u52300xFF\uff09\u7684\u5730\u5740\u90fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\n\u7136\u800c\uff0c\u5b83\u5728\u4e00\u4e2a\u5468\u671f\u5185\u8bbf\u95ee\u5185\u5b58\uff0c\u56e0\u6b64\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4f7f\u7528\u96f6\u9875\u4f5c\u4e3a256\u4e2a8\u4f4d\u5bc4\u5b58\u5668\u7684\u6c60\u3002\n6502\u6709\u52a9\u4e8e\u63ed\u793a\u4fbf\u643a\u6027\u7684\u4f18\u52bf\uff0c\u5373C\u7684\u201c\u5962\u4f88\u54c1\u201d\u8fc7\u4e8e\u6602\u8d35\u7684\u5730\u65b9\u3002\nC\u661f\u7403\u7684\u5bb6\u56ed\u3002\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u56e0\u4e3a\u4e8b\u60c5\u8fdb\u5c55\u987a\u5229\u3002\u771f\u6b63\u7684\u60ca\u559c\u53d1\u751f\u5728\u5c06PDP\u4ee3\u7801\u79fb\u690d\u5230\u5176\u4ed6\u673a\u5668\u4e0a\u65f6\u3002\u6240\u6709\u7c7b\u578b\u548c\u6574\u6570\u7684\u6307\u9488\u90fd\u53ef\u4ee5\u5728\u4e0d\u5f3a\u5236\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u4e92\u6362\u3002\n\u8fd9\u53f0\u673a\u5668\u7684\u4e00\u4e2a\u5947\u602a\u4e4b\u5904\u662f\uff0c\u867d\u713616\u4f4d\u7684\u5b57\u662f\u4ee5\u5c0f\u5c3e\u7aef\u5b58\u50a8\u7684\uff0c\u4f4632\u4f4d\u957f\u7684\u6574\u6570\u4f7f\u7528\u5947\u602a\u7684\u6df7\u5408\u5c3e\u7aef\u683c\u5f0f\u3002\u5f53\u5b58\u50a8\u5728PDP-11\u4e2d\u65f6\uff0c\u5b57\u7b26\u4e32\u201cUnix\u201d\u4e2d\u7684\u56db\u4e2a\u5b57\u8282\u5982\u679c\u88ab\u89e3\u91ca\u4e3abig-endian\uff0c\u5219\u88ab\u5b89\u6392\u4e3a\u201cnUxi\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u5c06\u4ee3\u7801\u4ecePDP\u79fb\u690d\u5230big-endian\u673a\u5668\u65f6\uff0c\u4f1a\u4ea7\u751f\u52a0\u6270\u5b57\u7b26\u4e32\u672c\u8eab\u3002\nVAX\u5c31\u50cf\u4e00\u4e2a32\u4f4d\u7684PDP\u3002\u8fd9\u662fPDP\u8fdb\u5316\u4e2d\u7684\u4e0b\u4e00\u53f0\u673a\u5668\u3002\u4eba\u4eec\u559c\u6b22\u4e3aVAX\u7f16\u5199\u4ee3\u7801\uff0c\u56e0\u4e3a\u5b83\u6709\u6f02\u4eae\u7684\u6241\u5e73\u5185\u5b58\u548c\u5404\u79cd\u7c7b\u578b\u7684\u7edf\u4e00\u6307\u9488\u3002\u4eba\u4eec\u975e\u5e38\u559c\u6b22\u5b83\uff0c\u4ee5\u81f3\u4e8e\u201cVAXocentric\u201d\u4e00\u8bcd\u6307\u7684\u662f\u90a3\u4e9b\u5bf9\u4f53\u7cfb\u7ed3\u6784\u592a\u8fc7\u719f\u6089\uff0c\u53c8\u61d2\u5f97\u53bb\u4e86\u89e3\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u4e0d\u540c\u4e4b\u5904\u7684\u4eba\u7684\u8349\u7387\u7f16\u7801\u3002\nx86-64\u7684\u6c47\u7f16\u5728\u5916\u89c2\u4e0a\u4e0eVAX\u76f8\u4f3c\uff0c\u4eba\u4eec\u6700\u521d\u8ba4\u4e3aVAX\u4f1a\u6bd4\u82f1\u7279\u5c14\u66f4\u6301\u4e45\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u201c\u5fae\u578b\u8ba1\u7b97\u673a\u653b\u51fb\u201d\u6467\u6bc1\u4e86\u5927\u578b\u673a\u548c\u5c0f\u578b\u8ba1\u7b97\u673a\u5e02\u573a\u3002\n\u4e0eIBM 360\u3001PDP-11\u3001Interdata 8/32\u7b49\u4ee5\u524d\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0d\u540c\uff0c\u7a0b\u5e8f\u5728\u6b63\u786e\u5bf9\u9f50\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u4f46\u6ca1\u6709\u4e25\u683c\u7684\u5bf9\u9f50\u8981\u6c42\u3002\u5927\u5c0f\u548c\u5bf9\u9f50\u5c5e\u6027\u5728\u903b\u8f91\u4e0a\u662f\u72ec\u7acb\u7684\u3002VAX-11 C\u7f16\u8bd1\u5668\u5c06\u5730\u5740\u8fb9\u754c\u4e0a\u7684\u6240\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5bf9\u9f50\uff0c\u5730\u5740\u8fb9\u754c\u662f\u6bcf\u79cd\u7c7b\u578b\u5927\u5c0f\u7684\u500d\u6570\u3002\n\u5176\u4ed6\u4e8b\u5b9e\uff1aVAX C\u7f16\u8bd1\u5668\u4e0d\u80fd\u4fdd\u8bc1\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\u51fd\u6570\u53c2\u6570\u3002\u5b57\u7b26\u662f\u9ed8\u8ba4\u7b7e\u540d\u7684\u3002PDP\u63a5\u53d7\u96f6\u9664\u6cd5\u5e76\u8fd4\u56de\u80a1\u606f\uff0c\u4f46VAX\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u63a9\u76d6\u7684\u9677\u9631\u3002\n\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5c06\u7a0b\u5e8f\u4ecePDP\u79fb\u690d\u5230VAX\u7684\u6709\u8da3\u62a5\u544a\uff0c\u4ed6\u4eec\u7684\u4e00\u4e9b\u5efa\u8bae\u88abANSI C\u91c7\u7eb3\u3002\n\u5982\u679c\u8fd9\u4e9b\u6570\u5b57\u5316\u7684\u4e50\u8da3\u8ba9\u4f60\u60f3\u5b66\u4e60\u66f4\u591a\u5173\u4e8e\u7f16\u5199\u53ef\u79fb\u690d\u4ee3\u7801\u7684\u77e5\u8bc6\uff0c\u90a3\u4e48\u6700\u597d\u7684\u5b66\u4e60\u5730\u70b9\u5c31\u662f\u5173\u4e8e\u8fd9\u4e00\u4e3b\u9898\u7684\u4f18\u79c0\u4e66\u7c4d\u4e4b\u4e00\u3002\u524d\u9762\u63d0\u5230\u7684\u4ea8\u5229\u00b7\u62c9\u6bd4\u8bfa\u7ef4\u8328\uff08Henry Rabinowitz\uff09\u7684\u4f5c\u54c1\u5f88\u68d2\uff0c\u9a6c\u514b\u00b7\u970d\u987f\uff08Mark Horton\uff09\u7684\u4f5c\u54c1\u4e5f\u662f\u5982\u6b64\u3002\u597d\u4e66\u662fC\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u4f18\u52bf\u3002\u4e0e\u65b0\u7684\u6d41\u884c\u8bed\u8a00\u4e0d\u540c\uff0cC\u8bed\u8a00\u5df2\u7ecf\u5b58\u5728\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u79ef\u7d2f\u4e86\u4e13\u4e1a\u7684\u3001\u5e7f\u53d7\u597d\u8bc4\u7684\u6587\u732e\u3002", "note_en": "In this article we\u2019ll go on a journey from 4-bit microcontrollers to room-sized mainframes and learn how porting C to each of them helped people separate the essence of the language from the environment of its birth. I\u2019ve found technical manuals and videos for this article to help bring each computer to life.\n It\u2019s amazing that, by carefully writing portable ANSI C code and sticking to standard library functions, you can create a program that will compile and work without modification on almost any of these weird systems.\n  I hope that being exposed to these examples will help you write code more portably, and dispel the belief that current computers with their multiple cores, cache hierarchy, and pipelining, are somehow too alien for C. A language tough enough to handle the diversity of old machines is tough enough to handle today\u2019s relatively homogeneous CPUs.\n To prepare this article I worked backward from the book \u201cPortable C\u201d (by Henry Rabinowitz), searching for architectures that illustrate each of the pitfalls he points out. You should read the book for a great explanation of what the author calls \u201cC-World,\u201d a semantic model of the execution of a C program.\n  While this video doesn\u2019t show the true computer in operation, you can still see the shape of one of the control panels. The gentleman in the video has quixotic fascination with it.\n   The first unusual thing about the architecture is its word size. You may be familiar with datatypes having powers-of-two bit sizes, but these Unisys series went with multiples of 9! The word size is 18 bits, and the C compiler for the platform uses:\n   Just to make matters more interesting, the oddly sized integers use ones\u2019 complement binary arithmetic. That\u2019s right, in this system there are distinct values for positive and negative zero. (CDC computers also used ones\u2019 complement.)\n The thirty-six bits integers can hold a lot, but guess what they can\u2019t hold on this architecture? Pointer values. Section 8.6.1 of the  C manaul for the Unisys 2200 says:\n A pointer in UC cannot be treated as an integer. A UC pointer is a two-word structure with the base virtual address (VA) of a bank in the first word and a bit-word pointer in the second word. The bit-word pointer is necessary since the 2200 hardware does not have byte pointers; the basic pointer in the 2200 hardware is a word (36-bit) VA pointer that can only point to words. The bit-word portion of the UC pointer has a bit offset in the first 6 bits of the word and a word offset in the lower 24 bits of the word. If you convert (cast) a UC pointer to a 36-bit integer (int, long, or unsigned), the bit offset is lost. Converting it back to a C pointer results in it pointing to a word boundary. If you add 1 to the integer before converting it back to a pointer, the pointer points to the next word, not the next byte. A 36-bit integer is not capable of holding all the information in a UC pointer.\n If you think regular pointers are demanding, section 8.6.2 says that function pointer requires a full eight words!\n A function pointer is 8 words long and has a completely different format. Only two words out of the 8-word function pointer are actually (currently) used by UC-generated code. (The second and third words.) (More of the words are used by other UCS languages such as FORTRAN and COBOL.) You can cast UC data pointers to function pointers and function pointers to data pointers and not lose any information. The two words that hold information are simply moved back and forth.\n Finally, if you think the Unisys is confined to the pages of history, you\u2019re mostly right, but not entirely. They still manufacture and sell the \u201cClearPath Dorado\u201d which uses the 2200 architecture.\n    Like the previous Unisys machine, the ClearPath has an unusual word size. Here are the integral data type sizes for the ClearPath  C compiler:\n  This machine uses neither twos\u2019 complement nor ones\u2019 complement signed arithmetic \u2013 it uses sign-magnitude form instead.\n   A reliable old machine that had a devoted community. Fairly normal architecture, except it is big endian, unlike most computers nowadays. The char datatype is unsigned by default. Finally, the standard compiler for this architecture guarantees that function arguments are evaluated from left to right.\n    C is so portable that someone wrote a compiler \u2013  Symbolics C \u2013 for a computer running Lisp natively. Targeting the Symbolics Lisp machine required some creativity. For instance, a pointer is represented as a pair consisting of a reference to a list and a numerical offset into the list. In particular, the NULL pointer is  &lt;NIL, 0&gt;, basically a NIL list with no offset. Certainly  not a bitwise zero integral value.\n The word size is 16 bits. There are no alignment requirements for data, although instructions must be on a 16-bit boundary. Here are the sizes of integer types defined by the compiler on the machine:\n     This processor found its way into many game consoles, embedded systems, and printers. It\u2019s a pretty normal architecture, though big endian with a compiler default of unsigned chars. Also pointers (32 bits) are a different size than ints (16 bits).\n One significant quirk is that the machine is very sensitive to data alignment. The processor had two-byte granularity and lacked the circuitry to cope with unaligned addresses. When presented with such an address, the processor would throw an exception. The original Mac (also based on the 68000) would usually demand the user restart the machine after an alignment error. (Similarly, some Sparc machines would raise a SIGBUS exception for alignment problems.)\n    This machine uses a different numbering scheme for character- and integer-pointers. The same location in memory must be referred to by different addresses depending on the pointer type. A cast between  char* and  int* actually changes the address inside the pointer. Chris Torek  recounts the details.\n  This machine provides another cautionary tale about trying to manipulate pointer values as if they were integers. On this architecture char* or void* are secretly word pointers with an offset stored in the three unused higher-order bits. Thus incrementing char* as an integer value would move to the next word but keep the same offset.\n    Notable for using a NULL pointer address that is not bitwise zero. In particular it uses segment 07777, offset 0 for the null pointer. (Some Honeywell-Bull mainframes use 06000 for the NULL pointer value, which is another example of non-zero NULL.)\n    The DECstation uses the R3000 processor. It could be switched into either little- or big-endian mode at the programmer\u2019s discretion. One quirk is that the processor raises an exception for signed integer overflow, unlike many other processors which silently wrap to negative values. Allowing a signed integer to overflow (in a loop for instance), is thus not portable.\n    This computer is actually the origin of the ARM architecture which we commonly find in mobile phones and Arduinos. The Acorn in particular uses ARM2, and has a 32-bit data bus and a 26-bit address space. Like the Motorola 68000, the ARM2 raises a SIGBUS exception for unaligned memory access. (Note that the Arduino is an instance of a compiler still using 16-bit ints.)\n    Everyone who writes about programming the Intel 286 says what a pain its segmented memory architecture was. Each memory segment can address up to 64 Kb, which is the largest contiguous region of memory that C could allocate per data object. (Thus size_t is smaller than unsigned int in this architecture.)\n Because the full address of any word in memory was specified by a segment and offset, there are 4096 ways of referring to it by some combination of the two. (For instance address 0x1234 can be referenced as 0123:0004, 0122:0014, etc.) Also variables declared next to one another may live in different segments, far apart in memory. This breaks some highly inadvisable tricks people used, like zeroing out a block of several variables by memset\u2019ing the whole memory range between their addresses.\n Despite this awkwardness, the personal computer was hot, and as of 1983 Byte Magazine (Vol 8, Issue 8) identified that there were nine different C compilers for the IBM PC! I found the  manual for one of them, Lattice C. It\u2019s the same compiler used on other IBM products such as the System 370.\n In Lattice C both short and int are 16 bits, but long is 32. Char is signed by default, and of course the x86 is little endian.\n  Sticking with the theme of memory complications, enter the 8051. It\u2019s a microcontroller that uses a \u201cHarvard architecture.\u201d This means it communicates with different types of memory attached to the same system. It uses word-oriented addressing for the ROM space and byte-oriented addressing for the RAM space. It needs differently sized pointers for each.\n Many addresses are ambiguous, and could meaningfully point to either the RAM or ROM bank. 8051 compilers such as  Crossware use a slightly larger \u201cgeneric\u201d pointer which tags the memory class in its high byte to resolve the ambiguity.\n    The Saturn family are  4-bit microprocessors developed by Hewlett-Packard in the 1980s for programmable scientific calculators and microcomputers. The video above shows the HP-71B calculator, which is really more of a general purpose computer in strange packaging. You load bulk data into it by zipping a magnetic band through some kind of a reader slot.\n The Saturn processor doesn\u2019t have hardware instructions to do signed arithmetic. That has to be emulated using combinations of other assembly instructions. Thus unsigned number operations are more efficient. No surprise that char defaults to being unsigned.\n The memory is interesting. Its addresses are nibble-based, and can address 1M nibbles = 512Kb. Pointers are 20-bits, but stored as 32-bits.  Saturn C datatypes are pretty normal:\n     This was one of the first low-cost 8-bit microprocessors, and it found its way into all kinds of systems including the Apple II, Commodore 64, and Nintendo Entertainment System. This processor is downright hostile to C compilers. Check out the crazy  optimization suggestions for the CC65 compiler.\n  There is no multiply or divide operation in the assembly, it has to be emulated with other instructions.\n Accessing any address higher than the \u201czero page\u201d (0x0 to 0xFF) causes a performance penalty.\n   However it accesses its memory in one cycle, so a programmer can use the zero page as a pool of 256 8-bit registers.\n The 6502 helps reveal the edge of portability, the place where C\u2019s \u201cluxuries\u201d are too costly.\n    The C home planet. Not much to say about it, because things work smoothly. The real surprises happened when porting PDP code to other machines. Pointers of all types and integers can be interchanged without casting.\n One strange thing about this machine is that whereas 16-bit words are stored in little endian, 32-bit long ints use a weird mixed endian format. The four bytes in the string \u201cUnix\u201d when stored in the PDP-11 are arranged as \u201cnUxi\u201d if interpreted as big endian. In fact that scrambled string itself resulted when porting code from the PDP to a big endian machine.\n    The VAX is like a 32-bit PDP. It\u2019s the next machine in PDP evolution. People enjoyed coding for the VAX with its nice flat memory and uniform pointers of all types. People liked it so much that the term \u201cVAXocentric\u201d referred to sloppy coding by those who got too comfortable with the architecture and who didn\u2019t bother to learn how other computers differed.\n The assembly for x86-64 looks externally similar to VAX, and people originally believed VAX would outlast Intel. This proved incorrect, as the \u201cattack of the micros\u201d destroyed the mainframe and minicomputer markets.\n   Programs run faster with data aligned properly, but there is no strict alignment requirement, unlike previous architectures such as the IBM 360, PDP-11, Interdata 8/32 etc. Size and alignment attributes are logically independent. The VAX-11 C compiler aligns all the basic data types on address boundaries which are multiples of the size of each type.\n Other facts: the VAX C compiler doesn\u2019t guarantee left-to-right evaluation of function arguments. Chars are signed by default. The PDP was OK with division by zero and returned the dividend, but VAX causes an unmaskable trap.\n Bell Labs wrote an interesting  report about porting programs from the PDP to VAX, and some of their recommendations were adopted by ANSI C.\n  If these digital delectations make you want to learn more about writing portable code, then the best place to learn is in one of the excellent books on the topic. The one by Henry Rabinowitz mentioned earlier is great, as is another by Mark Horton. Good books are another strength of the C language. Unlike new trendy languages, C has been around long enough to accumulate professional and well regarded literature.", "posttime": "2022-02-22 02:59:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u79fb\u690d\u6027,lessons,\u6307\u9488", "title": "C\u4ece\u602a\u5f02\u673a\u5668\u4e0a\u83b7\u5f97\u7684\u53ef\u79fb\u690d\u6027\u6559\u8bad", "title_en": "C Portability Lessons from Weird Machines", "transed": 1, "url": "https://begriffs.com/posts/2018-11-15-c-portability.html", "via": "", "real_tags": ["\u53ef\u79fb\u690d\u6027", "lessons", "\u6307\u9488"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074541, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\u518c\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u63a5\u6536\u4e2a\u6027\u5316\u7814\u7a76\u548c\u8d44\u6e90", "note_en": "Register to receive personalised research and resources by email", "posttime": "2022-02-22 02:59:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7edf\u8ba1,statistical,\u7535\u5b50\u90ae\u4ef6", "title": "\u8fc7\u53bb50\u5e74\u4e2d\u6700\u91cd\u8981\u7684\u7edf\u8ba1\u601d\u60f3\u662f\u4ec0\u4e48\uff1f", "title_en": "What are the most important statistical ideas of the past 50 years?", "transed": 1, "url": "https://www.tandfonline.com/doi/full/10.1080/01621459.2021.1938081", "via": "", "real_tags": ["\u7edf\u8ba1", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074540, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2009\u5e7411\u6708\u6211\u6ca1\u6709&#39\uff1b\u6211\u8ba4\u4e3a\u82f9\u679c\u6ca1\u6709\u610f\u8bc6\u5230\u5e94\u7528\u5546\u5e97\u7684\u5ba1\u6279\u6d41\u7a0b\u88ab\u7834\u574f\u5f97\u6709\u591a\u4e25\u91cd\u3002\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u8ba4\u4e3a\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u6709\u591a\u91cd\u8981\uff1b\u5b83\u574f\u4e86\u3002\u82f9\u679c\u8fd0\u8425\u5e94\u7528\u5546\u5e97\u7684\u65b9\u5f0f\u635f\u5bb3\u4e86\u4ed6\u4eec\u5728\u7a0b\u5e8f\u5458\u4e2d\u7684\u58f0\u8a89\uff0c\u6bd4\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u90fd\u8981\u4e25\u91cd\uff1b\u6211\u505a\u8fc7\u3002\u4ed6\u4eec\u5728\u7a0b\u5e8f\u5458\u4e2d\u7684\u58f0\u8a89\u8fc7\u53bb\u5f88\u597d\u3002\u8fc7\u53bb\uff0c\u4f60\u542c\u5230\u7684\u82f9\u679c\u6700\u5e38\u89c1\u7684\u62b1\u6028\u662f\uff0c\u4ed6\u4eec\u7684\u7c89\u4e1d\u5bf9\u4ed6\u4eec\u7684\u5d07\u62dc\u592a\u8fc7\u4e0d\u52a0\u6279\u5224\u3002\u5e94\u7528\u5546\u5e97\u5df2\u7ecf\u6539\u53d8\u4e86\u8fd9\u4e00\u70b9\u3002\u73b0\u5728\u5f88\u591a\u7a0b\u5e8f\u5458\u5f00\u59cb\u628a\u82f9\u679c\u89c6\u4e3a\u90aa\u6076\u3002\u82f9\u679c\u66fe\u7ecf\u4e0e\u7a0b\u5e8f\u5458\u4e4b\u95f4\u7684\u53cb\u597d\u5173\u7cfb\u5728\u5e94\u7528\u5546\u5e97\u4e2d\u5360\u4e86\u591a\u5c11\u4efd\u989d\uff1f\u7b2c\u4e09\u4e2a\uff1f\u4e00\u534a\u90a3&#39\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\u3002\u5e94\u7528\u5546\u5e97\u6b63\u5728\u8fdb\u884c\u56e0\u679c\u62a5\u5e94\u6cc4\u6f0f\u3002***\u82f9\u679c\u662f\u5982\u4f55\u9677\u5165\u8fd9\u79cd\u6df7\u4e71\u7684\uff1f\u4ed6\u4eec\u7684\u6839\u672c\u95ee\u9898\u662f\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u61c2\u8f6f\u4ef6\u3002\u4ed6\u4eec\u5bf9\u5f85iPhone\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u5f0f\u5c31\u50cf\u5bf9\u5f85\u901a\u8fc7iTunes\u9500\u552e\u7684\u97f3\u4e50\u4e00\u6837\u3002\u82f9\u679c\u662f\u6e20\u9053\uff1b\u4ed6\u4eec\u62e5\u6709\u7528\u6237\uff1b\u5982\u679c\u4f60\u60f3\u8bbf\u95ee\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u7684\u6761\u4ef6\u6765\u505a\u3002\u5531\u7247\u516c\u53f8\u52c9\u5f3a\u540c\u610f\u4e86\u3002\u4f46\u662f\u8fd9\u4e2a\u6a21\u578b\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u4e3a\u8f6f\u4ef6\u5de5\u4f5c\u3002\u5b83\u6ca1\u6709&#39\uff1b\u8ba9\u4e2d\u95f4\u4eba\u62e5\u6709\u7528\u6237\u3002\u8f6f\u4ef6\u4e1a\u4eba\u58eb\u4e86\u89e3\u5230\uff0c\u572820\u4e16\u7eaa80\u5e74\u4ee3\u521d\uff0cVisiCorp\u7b49\u516c\u53f8\u5c55\u793a\u51fa\uff0c\u5c3d\u7ba1&#34\uff1b\u8f6f\u4ef6&#34\uff1b\u548c&#34\uff1b\u51fa\u7248\u5546&#34\uff1b\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u57fa\u672c\u6982\u5ff5\u4e0d&#39\uff1bt\u3001 \u8f6f\u4ef6\u4e0d\u662f&#39\uff1b\u6211\u4e0d\u559c\u6b22\u97f3\u4e50\u6216\u4e66\u3002\u5b83&#39\uff1b\u8fd9\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u6765\u8bf4\u592a\u590d\u6742\u4e86\uff0c\u65e0\u6cd5\u5145\u5f53\u5f00\u53d1\u8005\u548c\u7528\u6237\u4e4b\u95f4\u7684\u4e2d\u4ecb\u3002\u7136\u800c&#39\uff1b\u8fd9\u5c31\u662f\u82f9\u679c\u5728App Store\u4e2d\u8bd5\u56fe\u505a\u5230\u7684\uff1a\u8f6f\u4ef6\u53d1\u884c\u5546\u3002\u8fd9\u662f\u4e00\u4e2a\u7279\u522b\u7684\u8d85\u73b0\u5b9e\u4e3b\u4e49\u8005\uff0c\u6709\u7740\u6311\u5254\u7684\u54c1\u5473\u548c\u4e25\u683c\u7684\u4f4f\u5b85\u98ce\u683c\u3002\u5982\u679c\u8f6f\u4ef6\u53d1\u5e03\u6ca1\u6709&#39\uff1b20\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u8f6f\u4ef6\u5f00\u53d1\u5df2\u7ecf\u4ece\u5c11\u91cf\u7684\u5927\u7248\u672c\u53d1\u5c55\u5230\u4e86\u6e90\u6e90\u4e0d\u65ad\u7684\u5c0f\u7248\u672c\uff0c\u5b83\u7684\u6548\u679c\u5c31\u66f4\u5dee\u4e86\u3002\u4f46\u82f9\u679c\u6ca1\u6709&#39\uff1b\u6211\u4e5f\u4e0d\u660e\u767d\u3002\u4ed6\u4eec\u7684\u4ea7\u54c1\u5f00\u53d1\u6a21\u5f0f\u6e90\u81ea\u786c\u4ef6\u3002\u4ed6\u4eec\u4e00\u76f4\u5728\u505a\u67d0\u4ef6\u4e8b\uff0c\u76f4\u5230\u4ed6\u4eec\u8ba4\u4e3a\u5b83\u662f#39\uff1b\u4ed6\u5b8c\u6210\u4e86\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u53d1\u5e03\u4e86\u3002\u4f60\u5fc5\u987b\u7528\u786c\u4ef6\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u56e0\u4e3a\u8f6f\u4ef6\u5f88\u5bb9\u6613\u6539\u53d8\uff0c\u5b83\u7684\u8bbe\u8ba1\u53ef\u4ee5\u4ece\u8fdb\u5316\u4e2d\u53d7\u76ca\u3002\u73b0\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u6807\u51c6\u65b9\u6cd5\u662f\u542f\u52a8fast\u548cINTERATE\u3002\u4e5f\u5c31\u662f\u8bf4&#39\uff1b\u6bcf\u6b21\u53d1\u5e03\u65b0\u7248\u672c\u65f6\uff0c\u90fd\u4f1a\u6709\u957f\u65f6\u95f4\u7684\u968f\u673a\u5ef6\u8fdf\uff0c\u8fd9\u662f\u4e00\u573a\u707e\u96be\u3002\u663e\u7136\u662f\u82f9\u679c&#39\uff1b\u5fae\u8f6f\u7684\u6001\u5ea6\u662f\uff0c\u5f00\u53d1\u8005\u5728\u5411\u5e94\u7528\u5546\u5e97\u63d0\u4ea4\u65b0\u7248\u672c\u65f6\u5e94\u8be5\u66f4\u52a0\u5c0f\u5fc3\u3002\u4ed6\u4eec\u4f1a\u8fd9\u4e48\u8bf4\u3002\u4f46\u5c3d\u7ba1\u4ed6\u4eec\u5f88\u5f3a\u5927\uff0c\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u7684\u529b\u91cf\u8fd8\u4e0d\u8db3\u4ee5\u9006\u8f6c\u6280\u672f\u7684\u53d1\u5c55\u3002\u7a0b\u5e8f\u5458\u4e0d&#39\uff1b\u4e0d\u8981\u56e0\u4e3a\u61d2\u60f0\u800c\u5feb\u901f\u542f\u52a8\u548c\u8fed\u4ee3\u3002\u4ed6\u4eec\u4f7f\u7528\u5b83\u662f\u56e0\u4e3a\u5b83\u80fd\u4ea7\u751f\u6700\u597d\u7684\u7ed3\u679c\u3002\u901a\u8fc7\u963b\u788d\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u82f9\u679c\u6b63\u5728\u8ba9\u4ed6\u4eec\u505a\u7cdf\u7cd5\u7684\u5de5\u4f5c\uff0c\u7a0b\u5e8f\u5458\u4eec\u548cAppleWold\u4e00\u6837\u8ba8\u538c\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u82f9\u679c\u53d1\u73b0inOS X\u5b58\u5728\u4e25\u91cd\u6f0f\u6d1e\u65f6\uff0c\u4ed6\u4eec\u6ca1\u6709\u7acb\u5373\u53d1\u5e03\u8f6f\u4ef6\u66f4\u65b0\uff0c\u800c\u662f\u5fc5\u987b\u5411\u4e2d\u95f4\u4eba\u63d0\u4ea4\u4ee3\u7801\uff0c\u4e2d\u95f4\u4eba\u5728\u4e0a\u9762\u5750\u4e86\u4e00\u4e2a\u6708\uff0c\u7136\u540e\u62d2\u7edd\u4e86\u5b83\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u4ed6\u4eec\u6ca1\u6709\u770b\u5230\u7684\u56fe\u6807&#39\uff1b\u4f60\u4e0d\u559c\u6b22\u5417\uff1f\u901a\u8fc7\u6253\u7834\u8f6f\u4ef6\u5f00\u53d1\uff0c\u82f9\u679c\u5f97\u5230\u4e86\u4e0e\u4ed6\u4eec\u7684\u610f\u56fe\u76f8\u53cd\u7684\u7ed3\u679c\uff1aAppStore\u4e2d\u5f53\u524d\u53ef\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u5f80\u5f80\u662f\u65e7\u7684\u3001\u6709\u7f3a\u9677\u7684\u3002\u4e00\u4f4d\u5f00\u53d1\u4eba\u5458\u544a\u8bc9\u6211\uff1a\u7531\u4e8e\u4ed6\u4eec\u7684\u6d41\u7a0b\uff0c\u5e94\u7528\u5546\u5e97\u91cc\u5145\u65a5\u7740\u534a\u751f\u4e0d\u719f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u51e0\u4e4e\u6bcf\u5929\u90fd\u4f1a\u5411\u6d4b\u8bd5\u7248\u7528\u6237\u53d1\u5e03\u4e00\u4e2a\u65b0\u7248\u672c\u3002App Store\u4e0a\u7684\u7248\u672c\u611f\u89c9\u53c8\u65e7\u53c8\u70c2\u3002\u6211&#39\uff1b\u6211\u76f8\u4fe1\u5f88\u591a\u5f00\u53d1\u8005\u90fd\u6709\u8fd9\u79cd\u611f\u89c9\uff1a\u4e00\u79cd\u60c5\u7eea\u662f&#34\uff1b\u6211&#39\uff1b\u6211\u5bf9\u4ec0\u4e48\u5e76\u4e0d\u611f\u5230\u9a84\u50b2&#39\uff1b\u5728\u5e94\u7528\u5546\u5e97&#34\uff1b\uff0c\u5b83&#39\uff1bs\u4e0e\u60c5\u611f\u7ed3\u5408#34\uff1b\u771f\u7684\u5417&#39\uff1b\u82f9\u679c\u516c\u53f8&#39\uff1b\u8fd9\u662f\u4ed6\u7684\u9519&#34;\n\u53e6\u4e00\u4f4d\u5199\u9053\uff1a\u6211\u76f8\u4fe1\u4ed6\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u7684\u5ba1\u6279\u6d41\u7a0b\u901a\u8fc7\u786e\u4fdd\u8d28\u91cf\u5e2e\u52a9\u7528\u6237\u3002\u4e8b\u5b9e\u4e0a\uff0c\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u6f0f\u6d1e\u4e00\u76f4\u5b58\u5728\uff0c\u7136\u540e\u53ef\u80fd\u9700\u89814\u52308\u5468\u7684\u65f6\u95f4\u624d\u80fd\u83b7\u5f97\u6f0f\u6d1e\u4fee\u590d\u7684\u6279\u51c6\uff0c\u8fd9\u8ba9\u7528\u6237\u8ba4\u4e3aiPhone\u5e94\u7528\u7a0b\u5e8f\u6709\u65f6\u5c31\u662f\u4e0d&#39\uff1b\u4e0d\u884c\u3002\u5bf9\u82f9\u679c\u6765\u8bf4\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u5176\u4ed6\u5177\u6709\u5373\u65f6\u5ba1\u6279\u6d41\u7a0b\u7684\u5e73\u53f0\u4e0a\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u82f9\u679c\u8fd8\u6709\u7b2c\u4e09\u4e2a\u8bef\u89e3\uff1a\u6240\u6709\u5173\u4e8eAppStore\u6279\u51c6\u7684\u62b1\u6028\u90fd\u4e0d\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u4e00\u5b9a\u542c\u5230\u4e86\u5f00\u53d1\u5546\u7684\u62b1\u6028\u3002\u4f46\u5408\u4f5c\u4f19\u4f34\u548c\u4f9b\u5e94\u5546\u603b\u662f\u62b1\u6028\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u662f&#39\uff1bT\u8fd9\u610f\u5473\u7740\u4f60\u5bf9\u4ed6\u4eec\u592a\u5bb9\u6613\u4e86\u3002\u4e0e\u6b64\u540c\u65f6\uff0ciPhone\u7684\u9500\u91cf\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u597d\u3002\u90a3\u4e48\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u4fee\u590d\u4efb\u4f55\u4e1c\u897f\u5462\uff1f\u77ed\u671f\u5185\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u8650\u5f85\u5f00\u53d1\u8005\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5236\u9020\u4e86\u5982\u6b64\u4f18\u79c0\u7684\u786c\u4ef6\u3002\u6211\u521a\u4e70\u4e86\u4e00\u8f86\u65b0\u768427&#34\uff1b\u51e0\u5929\u524d\u7684iMac\u3002\u5b83&#39\uff1b\u592a\u68d2\u4e86\u3002\u5c4f\u5e55&#39\uff1b\u5b83\u592a\u4eae\u4e86\uff0c\u78c1\u76d8\u7684\u58f0\u97f3\u51fa\u4eba\u610f\u6599\u5730\u5927\uff0c\u4f46\u662f\u5b83&#39\uff1bIt\u2019\u592a\u7f8e\u4e86\uff0c\u4f60\u53ef\u4ee5&#39\uff1bt\u8ba9\u4f60\u81ea\u5df1\u5173\u5fc3\u3002\u6240\u4ee5\u6211\u4e70\u4e86\u5b83\uff0c\u4f46\u6211\u7b2c\u4e00\u6b21\u5e26\u7740\u7591\u8651\u4e70\u4e86\u5b83\u3002\u6211\u7684\u611f\u89c9\u662f&#39\uff1b\u6211\u60f3\u4e70\u4e00\u4e2a\u6709\u7740abad\u4eba\u6743\u8bb0\u5f55\u7684\u56fd\u5bb6\u5236\u9020\u7684\u4e1c\u897f\u3002\u8fd9\u662f\u65b0\u7684\u3002\u8fc7\u53bb\uff0c\u5f53\u6211\u4ece\u82f9\u679c\u516c\u53f8\u4e70\u4e1c\u897f\u65f6\uff0c\u90a3\u662f\u4e00\u79cd\u7eaf\u7cb9\u7684\u5feb\u4e50\u3002\u5929\u54ea\uff01\u4ed6\u4eec\u505a\u7684\u4e1c\u897f\u592a\u68d2\u4e86\u3002\u8fd9\u4e00\u6b21\u611f\u89c9\u50cf\u662f\u6d6e\u58eb\u5fb7\u5f0f\u7684\u8ba8\u4ef7\u8fd8\u4ef7\u3002\u4ed6\u4eec\u505a\u4e86\u8fd9\u4e48\u597d\u7684\u4e1c\u897f\uff0c\u4f46\u4ed6\u4eec&#39\uff1b\u4f60\u771f\u662f\u4e2a\u6df7\u86cb\u3002\u6211\u771f\u7684\u60f3\u652f\u6301\u8fd9\u5bb6\u516c\u53f8\u5417\uff1f***\u82f9\u679c\u5e94\u8be5\u5173\u5fc3\u50cf\u6211\u8fd9\u6837\u7684\u4eba\u7684\u60f3\u6cd5\u5417\uff1f\u5982\u679c\u4ed6\u4eec\u758f\u8fdc\u4e86\u4e00\u5c0f\u90e8\u5206\u7528\u6237\uff0c\u53c8\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u4ed6\u4eec\u5e94\u8be5\u5173\u5fc3\u4ee5\u4e0b\u51e0\u4e2a\u539f\u56e0\u3002\u4e00\u662f\u8fd9\u4e9b\u7528\u6237\u662f\u4ed6\u4eec\u60f3\u8981\u7684\u5458\u5de5\u3002\u5982\u679c\u4f60\u7684\u516c\u53f8\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u90a3\u4e48\u6700\u597d\u7684\u7a0b\u5e8f\u5458\u5c31\u8d62\u4e86&#39\uff1b\u6211\u4e0d\u4e3a\u4f60\u5de5\u4f5c\u3002\u4ece90\u5e74\u4ee3\u5f00\u59cb\uff0c\u8fd9\u5bf9\u5fae\u8f6f\u9020\u6210\u4e86\u5f88\u5927\u7684\u4f24\u5bb3\u3002\u5728\u90a3\u91cc\u5de5\u4f5c\u7684\u7a0b\u5e8f\u5458\u5f00\u59cb\u611f\u5230\u7f9e\u602f\u3002\u770b\u8d77\u6765\u597d\u50cf\u5356\u5149\u4e86\u3002\u5f53\u5fae\u8f6f\u7684\u4eba\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u5458\u4ea4\u8c08\uff0c\u63d0\u5230\u4ed6\u4eec\u5728\u54ea\u91cc\u5de5\u4f5c\u65f6\uff0c\u6709\u5f88\u591a\u81ea\u5632\u7684\u7b11\u8bdd\u8bf4\u4ed6\u4eec\u5df2\u7ecf\u8d70\u5230\u4e86\u9ed1\u6697\u7684\u4e00\u9762\u3002\u4f46\u5fae\u8f6f\u771f\u6b63\u7684\u95ee\u9898\u4e0d\u5728\u4e8e&#39\uff1b\u8fd9\u4e0d\u662f\u4ed6\u4eec\u96c7\u4f63\u7684\u4eba\u7684\u5c34\u5c2c\u3002\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u9047\u5230\u8fc7\u8fd9\u6837\u7684\u4eba\u3002\u4f60\u77e5\u9053\u662f\u8c01\u5f04\u7684\u5417\uff1f\u8c37\u6b4c\u548c\u82f9\u679c\u3002\u5982\u679c\u5fae\u8f6f\u662f\u5e1d\u56fd\uff0c\u4ed6\u4eec\u5c31\u662f\u53db\u519b\u8054\u76df\u3002\u5b83&#39\uff1b\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u4ed6\u4eec\u6709\u66f4\u591a\u7684\u4f18\u79c0\u4eba\u624d\uff0c\u6240\u4ee5\u8c37\u6b4c\u548c\u82f9\u679c\u4eca\u5929\u6bd4\u5fae\u8f6f\u505a\u5f97\u597d\u5f97\u591a\u3002\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u5458\u5bf9\u4ed6\u4eec\u7684\u96c7\u4e3b\u5982\u6b64\u6311\u5254#39\uff1b\u9053\u5fb7\u90e8\u5206\u539f\u56e0\u662f\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u8d1f\u62c5\u5f97\u8d77\u3002\u6700\u597d\u7684\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u5de5\u4f5c\u3002\u4ed6\u4eec\u6ca1\u6709&#39\uff1bI don\u2019\u6211\u4e0d\u5fc5\u4e3a\u4e00\u5bb6\u4ed6\u4eec\u611f\u5230\u4e0d\u5b89\u7684\u516c\u53f8\u5de5\u4f5c\u3002\u4f46\u6211\u8ba4\u4e3a\uff0c\u7a0b\u5e8f\u5458\u6311\u5254\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u90aa\u6076\u4f1a\u5bfc\u81f4\u611a\u8822\u3002\u4e00\u4e2a\u901a\u8fc7\u4f7f\u7528powerstarts\u6765\u8d62\u5f97\u80dc\u5229\u7684\u7ec4\u7ec7\uff0c\u5931\u53bb\u4e86\u901a\u8fc7\u505a\u66f4\u597d\u7684\u5de5\u4f5c\u6765\u8d62\u5f97\u80dc\u5229\u7684\u80fd\u529b\u3002\u5b83&#39\uff1b\u5bf9\u4e8e\u4e00\u4e2a\u806a\u660e\u4eba\u6765\u8bf4\uff0c\u5728\u4e00\u4e2a\u6700\u597d\u7684\u5730\u65b9\u5de5\u4f5c\u5e76\u4e0d\u6709\u8da3\uff1b\u4e0d\u662f\u90a3\u4e9b\u83b7\u80dc\u7684\u4eba\u3002\u6211\u8ba4\u4e3a\u8c37\u6b4c\u4e4b\u6240\u4ee5\u63a5\u53d7&#34\uff1b\u5510&#39\uff1b\u90aa\u6076&#34\uff1b\u4e0e\u5176\u8bf4\u662f\u4e3a\u4e86\u7ed9\u5916\u754c\u7559\u4e0b\u6df1\u523b\u5370\u8c61\uff0c\u4e0d\u5982\u8bf4\u662f\u4e3a\u4e86\u7ed9\u81ea\u5df1\u63a5\u79cd\u9884\u9632\u50b2\u6162\u7684\u75ab\u82d7\u3002[1]\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5bf9\u8c37\u6b4c\u662f\u6709\u6548\u7684\u3002\u4ed6\u4eec&#39\uff1b\u4ed6\u4eec\u53d8\u5f97\u66f4\u52a0\u5b98\u50da\u4e3b\u4e49\uff0c\u4f46\u5728\u5176\u4ed6\u65b9\u9762\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u5fe0\u4e8e\u81ea\u5df1\u7684\u539f\u59cb\u539f\u5219\u3002\u5bf9\u4e8e\u82f9\u679c\u6765\u8bf4\uff0c\u60c5\u51b5\u4f3c\u4e4e\u5e76\u975e\u5982\u6b64\u3002\u73b0\u5728\u770b\u770b1984\u5e74\u7684\u8457\u540d\u5e7f\u544a\uff0c\u5b83\u662f&#39\uff1bIt\u2019\u628a\u82f9\u679c\u60f3\u8c61\u6210\u5c4f\u5e55\u4e0a\u7684\u9b54\u672f\u5e08\uff0c\u6bd4\u60f3\u8c61\u62ff\u7740\u9524\u5b50\u7684\u5973\u4eba\u66f4\u5bb9\u6613\u3002[2]\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u8bfb\u300a\u72ec\u88c1\u8005\u300b&#39\uff1b\u8fd9\u542c\u8d77\u6765\u4e0d\u53ef\u601d\u8bae\u5730\u50cf\u662f\u5e94\u7528\u5546\u5e97\u7684\u4e00\u79cd\u8bf4\u6cd5\u3002\u6211\u4eec\u6218\u80dc\u4e86\u65e0\u539f\u5219\u5730\u6563\u5e03\u4e8b\u5b9e\u3002\u6211\u4eec\u5728\u5386\u53f2\u4e0a\u7b2c\u4e00\u6b21\u521b\u9020\u4e86\u4e00\u4e2a\u7eaf\u610f\u8bc6\u5f62\u6001\u7684\u82b1\u56ed\uff0c\u5728\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u5de5\u4eba\u90fd\u53ef\u4ee5\u514d\u53d7\u77db\u76fe\u548c\u6df7\u4e71\u7684\u4e8b\u5b9e\u7684\u4f24\u5bb3\u3002\n\u82f9\u679c\u516c\u53f8\u5e94\u8be5\u5173\u5fc3\u7a0b\u5e8f\u5458\u5bf9\u4ed6\u4eec\u7684\u770b\u6cd5\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5f53\u4f60\u51fa\u552e\u4e00\u4e2a\u5e73\u53f0\u65f6\uff0c\u5f00\u53d1\u8005\u51b3\u5b9a\u4f60\u7684\u6210\u8d25\u3002\u5982\u679c\u4efb\u4f55\u4eba\u90fd\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u82f9\u679c\u4e5f\u5e94\u8be5\u77e5\u9053\u3002VisiCalc\u5236\u4f5c\u4e86\u82f9\u679cII\u3002\u7a0b\u5e8f\u5458\u4e3a\u4ed6\u4eec\u4f7f\u7528\u7684\u5e73\u53f0\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3002\u5927\u591a\u6570\u5e94\u7528\u5927\u591a\u6570\u521d\u521b\u516c\u53f8\u53ef\u80fd\u90fd\u662f\u4ece\u4e2a\u4eba\u9879\u76ee\u53d1\u5c55\u800c\u6765\u3002\u82f9\u679c\u81ea\u5df1\u505a\u5230\u4e86\u3002\u82f9\u679c\u5236\u9020\u5fae\u578b\u8ba1\u7b97\u673a\u662f\u56e0\u4e3a&#39\uff1b\u8fd9\u5c31\u662f\u6c83\u5179\u5c3c\u4e9a\u514b\u60f3\u8981\u7684\u3002\u4ed6\u4e0d\u80fd&#39\uff1b\u6211\u4e70\u4e0d\u8d77\u8ba1\u7b97\u673a\u3002[3]\u540c\u6837\uff0c\u5fae\u8f6f\u4e5f\u5f00\u59cb\u4e3a\u5c0f\u578b\u5fae\u578b\u8ba1\u7b97\u673a\u5236\u4f5c\u53e3\u8bd1\u5458\uff0c\u56e0\u4e3a\u6bd4\u5c14\u00b7\u76d6\u8328\u548c\u4fdd\u7f57\u00b7\u827e\u4f26\u5bf9\u4f7f\u7528\u5b83\u4eec\u611f\u5174\u8da3\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u5bb6\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u5efa\u9020\u521b\u59cb\u4eba\u4f7f\u7528\u7684\u4e1c\u897f\u3002\u6709\u8fd9\u4e48\u591aiPhone\u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u6709\u8fd9\u4e48\u591a\u7f16\u7a0b\u4eba\u5458\u4f7f\u7528iPhone\u3002\u4ed6\u4eec\u53ef\u80fd\u77e5\u9053\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8bfb\u5230\uff0c\u9ed1\u8393\u6709\u8fd9\u6837\u90a3\u6837\u7684\u5e02\u573a\u4efd\u989d\u3002\u4f46\u5728\u5b9e\u8df5\u4e2d&#39\uff1b\u597d\u50cfRIM\u6ca1\u6709&#39\uff1b\u4e0d\u5b58\u5728\u3002\u5982\u679c\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u5c06\u8981\u6784\u5efa\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ed6\u4eec\u5e0c\u671b\u80fd\u591f\u81ea\u5df1\u4f7f\u7528\u5b83\uff0c\u8fd9\u610f\u5473\u7740\u6784\u5efa\u4e00\u4e2aiPhone\u5e94\u7528\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u7a0b\u5e8f\u5458\u7ee7\u7eed\u5f00\u53d1iPhone\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c3d\u7ba1Applecontinues\u4f1a\u8650\u5f85\u4ed6\u4eec\u3002\u4ed6\u4eec&#39\uff1b\u4f60\u5c31\u50cf\u4e00\u4e2a\u9677\u5165\u8650\u5f85\u5173\u7cfb\u7684\u4eba\u3002\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u5bf9iPhone\u5982\u6b64\u7740\u8ff7\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u53ef\u4ee5&#39\uff1b\u7279\u83b1\u592b\u3002\u4f46\u662f\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u51fa\u8def\u3002\u5176\u4e2d\u4e00\u4f4d\u5199\u9053\uff1a\u867d\u7136\u6211\u786e\u5b9e\u559c\u6b22\u4e3aiPhone\u5f00\u53d1\uff0c\u4f46\u4ed6\u4eec\u5bf9App Store\u7684\u63a7\u5236\u5e76\u6ca1\u6709\u7ed9\u6211\u5f00\u53d1\u6211\u60f3\u8981\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u52a8\u529b\u3002\u4e8b\u5b9e\u4e0a\u6211\u4e0d&#39\uff1b\u9664\u975e\u7edd\u5bf9\u5fc5\u8981\uff0c\u5426\u5219\u6211\u4e0d\u6253\u7b97\u518d\u5f00\u53d1iPhone\u5e94\u7528\u7a0b\u5e8f\u3002[  4]\n\u6709\u4ec0\u4e48\u80fd\u6253\u7834\u8fd9\u4e2a\u5faa\u73af\u5417\uff1f\u65e0\u8bbe\u5907I&#39\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u5b83\u7684\u5b58\u5728\u3002\u68d5\u6988\u5c9b\u548c\u8fb9\u7f18\u6e2f&#39\uff1b\u8fd9\u4e0d\u662f\u5e0c\u671b\u3002\u552f\u4e00\u53ef\u9760\u7684\u7ade\u4e89\u8005\u662f\u5b89\u5353\u3002\u4f46\u5b89\u5353\u662f\u4e2a\u5b64\u513f\uff1b\u8c37\u6b4c\u6ca1\u6709&#39\uff1b\u6211\u771f\u7684\u4e0d\u5728\u4e4e\u5b83\uff0c\u4e0d\u50cf\u82f9\u679c\u90a3\u6837\u5728\u4e4eiPhone\u3002\u82f9\u679c\u5173\u5fc3iPhone\u5c31\u50cf\u8c37\u6b4c\u5173\u5fc3\u641c\u7d22\u4e00\u6837\u3002***\u624b\u6301\u8bbe\u5907\u7684\u672a\u6765\u4f1a\u88ab\u82f9\u679c\u9501\u5b9a\u5417\uff1f\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u524d\u666f\u3002\u5982\u679c\u6709\u53e6\u4e00\u4e2a\u50cf20\u4e16\u7eaa90\u5e74\u4ee3\u90a3\u6837\u7684\u683c\u91cc\u59c6\u6587\u5316\uff0c\u90a3\u5c06\u662f\u4e00\u4ef6\u4ee4\u4eba\u6cae\u4e27\u7684\u4e8b\u30021995\u5e74\uff0c\u4e3a\u6700\u7ec8\u7528\u6237\u7f16\u5199\u8f6f\u4ef6\u5b9e\u9645\u4e0a\u4e0e\u7f16\u5199Windows\u5e94\u7528\u7a0b\u5e8f\u5b8c\u5168\u76f8\u540c\u3002\u6211\u4eec\u5bf9\u8fd9\u79cd\u524d\u666f\u7684\u6050\u60e7\u662f\u4fc3\u4f7f\u6211\u4eec\u5f00\u59cb\u6784\u5efa\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u5927\u539f\u56e0\u3002\u81f3\u5c11\u6211\u4eec\u73b0\u5728\u77e5\u9053\u6253\u7834\u82f9\u679c\u9700\u8981\u4ec0\u4e48#39\uff1b\u8fd9\u662f\u9501\u3002\u4f60&#39\uff1b\u6211\u5fc5\u987b\u628aiPhone\u4ece\u7a0b\u5e8f\u5458\u624b\u91cc\u62ff\u51fa\u6765&#39\uff1b\u624b\u3002\u5982\u679c\u7a0b\u5e8f\u5458\u4f7f\u7528\u5176\u4ed6\u8bbe\u5907\u8fdb\u884c\u79fb\u52a8\u7f51\u7edc\u8bbf\u95ee\uff0c\u4ed6\u4eec&#39\uff1b\u6211\u4f1a\u5f00\u59cb\u4e3a\u6b64\u800c\u52aa\u529b\u3002\u4f60\u600e\u4e48\u80fd\u8ba9\u4e00\u6b3e\u8bbe\u5907\u6bd4iPhone\u66f4\u53d7\u7a0b\u5e8f\u5458\u7684\u559c\u7231\u5462\uff1f\u5b83&#39\uff1bIt\u2019\u4f60\u4e0d\u592a\u53ef\u80fd\u505a\u51fa\u66f4\u597d\u7684\u8bbe\u8ba1\u3002\u963f\u666e\u5c14\u5728\u90a3\u91cc\u6ca1\u6709\u7a7a\u4f4d\u3002\u6240\u4ee5\u8fd9\u4e2a\u66ff\u4ee3\u8bbe\u5907\u53ef\u80fd\u65e0\u6cd5&#39\uff1b\u666e\u901a\u4e0a\u8bc9\u7684\u5b6a\u751f\u5144\u5f1f\u3002\u5b83\u5fc5\u987b\u51ed\u501f\u5bf9\u7a0b\u5e8f\u5458\u7684\u67d0\u79cd\u5438\u5f15\u529b\u800c\u83b7\u80dc\u3002\u5438\u5f15\u7a0b\u5e8f\u5458\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u8f6f\u4ef6\u3002\u5982\u679c\u4f60\u80fd\u60f3\u5230\u4e00\u4e2a\u7a0b\u5e8f\u5458\u5fc5\u987b\u62e5\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u5728iPhone\u8fd9\u4e2a\u53d7\u9650\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u90a3\u4e48\u4f60\u5927\u6982\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u5207\u6362\u3002\u5982\u679c\u7a0b\u5e8f\u5458\u5f00\u59cb\u4f7f\u7528\u638c\u4e0a\u7535\u8111\u4f5c\u4e3a\u5f00\u53d1\u673a\u5668\uff0c\u5982\u679c\u638c\u4e0a\u7535\u8111\u53d6\u4ee3\u4e86\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5c31\u50cf\u7b14\u8bb0\u672c\u7535\u8111\u53d6\u4ee3\u53f0\u5f0f\u7535\u8111\u4e00\u6837\uff0c\u8fd9\u79cd\u60c5\u51b5\u80af\u5b9a\u4f1a\u53d1\u751f\u3002\u4f60\u9700\u8981\u66f4\u591a\u5730\u63a7\u5236\u5f00\u53d1\u673a\u5668\uff0c\u800c\u4e0d\u662f\u82f9\u679c\u8ba9\u4f60\u63a7\u5236iPhone\u3002\u6709\u4eba\u80fd\u505a\u4e00\u4e2a\u4f60\u559c\u6b22\u7684\u8bbe\u5907\u5417&#39\uff1bd\u50cf\u624b\u673a\u4e00\u6837\u653e\u5728\u53e3\u888b\u91cc\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u5f00\u53d1\u673a\u5668\u5417\uff1f\u5b83&#39\uff1b\u5f88\u96be\u60f3\u8c61\u5b83\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4f46\u6211&#39\uff1bI\u2019\u6211\u5b66\u4f1a\u4e86\u6c38\u8fdc\u4e0d\u8981\u8c08\u8bba\u6280\u672f\u3002\u4ee5\u76ee\u524d\u7684\u6807\u51c6\u6765\u770b\uff0c\u4e00\u53f0\u624b\u673a\u5927\u5c0f\u7684\u8bbe\u5907\u53ef\u4ee5\u4f5c\u4e3a\u5f00\u53d1\u673a\u5668\uff0c\u5e76\u4e0d\u6bd4iPhone\u672c\u8eab\u57281995\u5e74\u7684\u6807\u51c6\u770b\u6765\u66f4\u795e\u5947\u3002\u6211\u76ee\u524d\u7684\u5f00\u53d1\u673a\u5668\u662fMacBook Air\uff0c\u6211\u5728\u529e\u516c\u5ba4\u91cc\u4f7f\u7528\u5b83\uff0c\u5e76\u914d\u6709\u5916\u90e8\u663e\u793a\u5668\u548c\u952e\u76d8\uff0c\u5728\u65c5\u9014\u4e2d\u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\u3002\u5982\u679c\u6709\u4e00\u4e2a\u7248\u672c\u7684\u5927\u5c0f\u662f\u6211\u7684\u4e00\u534a&#39\uff1b\u6211\u66f4\u559c\u6b22\u3002\u8fd9\u4ecd\u7136\u4e0d\u4f1a&#39\uff1b\u6211\u4eec\u4e0d\u80fd\u50cf\u624b\u673a\u4e00\u6837\u968f\u8eab\u643a\u5e26\uff0c\u4f46\u6211\u4eec&#39\uff1bre\u57284\u500d\u5de6\u53f3\u7684\u8303\u56f4\u5185\u3002\u5f53\u7136\uff0c\u8fd9\u4e00\u5dee\u8ddd\u662f\u53ef\u4ee5\u5f25\u5408\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u505a\u4e00\u4e2aRFS\u3002\u901a\u7f09\uff1a\u6234\u9524\u5b50\u7684\u5973\u4eba\u3002\u6ce8[1]\u8c37\u6b4c\u91c7\u7528&#34\uff1b\u5510&#39\uff1b\u4e0d\u8981\u4f5c\u6076&#34\uff1b\u5b83\u4eec\u4ecd\u7136\u5f88\u5c0f\uff0c\u6ca1\u6709\u4eba\u4f1a\u60f3\u5230\u5b83\u4eec\u4f1a\u8fd9\u4e48\u5c0f\u3002[2]1984\u5e74\u5e7f\u544a\u4e2d\u7684\u72ec\u88c1\u8005\u4e0d\u662f&#39\uff1b\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5fae\u8f6f\uff1b\u5b83&#39\uff1b\u8fd9\u662fIBM\u3002\u5728\u90a3\u4e9b\u65e5\u5b50\u91cc\uff0cIBM\u4f3c\u4e4e\u66f4\u53ef\u6015\uff0c\u4f46\u4ed6\u4eec\u5bf9\u5f00\u53d1\u8005\u6bd4\u82f9\u679c\u73b0\u5728\u66f4\u53cb\u597d\u3002[3]\u4ed6\u4e0d\u80fd&#39\uff1b\u6211\u751a\u81f3\u4e70\u4e0d\u8d77\u663e\u793a\u5668\u3002\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u82f9\u679c\u4f7f\u7528\u7535\u89c6\u4f5c\u4e3a\u663e\u793a\u5668\u3002[4]\u4e0e\u6211\u4ea4\u8c08\u8fc7\u7684\u51e0\u4e2a\u4eba\u63d0\u5230\u4ed6\u4eec\u975e\u5e38\u559c\u6b22\u4ed6\u4eec\u7684\u624b\u673aSDK\u3002\u95ee\u9898\u4e0d\u5728\u4e8e\u82f9\u679c&#39\uff1b\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u4f46\u4ed6\u4eec\u7684\u653f\u7b56\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u653f\u7b56\u662f\u8f6f\u4ef6\uff1b\u5982\u679c\u4ed6\u4eec\u613f\u610f\uff0c\u82f9\u679c\u53ef\u4ee5\u7acb\u5373\u6539\u53d8\u5b83\u4eec\u3002\u5f88\u65b9\u4fbf\uff0c\u4e0d\u662f\u5417&#39\uff1b\u4e0d\u662f\u5417\uff1f\u611f\u8c22\u8428\u59c6\u00b7\u5965\u5c14\u7279\u66fc\u3001\u7279\u96f7\u5f17\u00b7\u5e03\u83b1\u514b\u5a01\u5c14\u3001\u7f57\u65af\u00b7\u9c8d\u5f7b\u3001\u8a79\u59c6\u65af\u00b7\u5e03\u96f7\u897f\u3001\u52a0\u535a\u00b7\u585e\u52d2\u3001\u5e15\u7279\u91cc\u514b\u00b7\u79d1\u5229\u68ee\u3001\u6770\u68ee\u00b7\u5f17\u91cc\u5fb7\u66fc\u3001\u7ea6\u7ff0\u00b7\u683c\u9c81\u4f2f\u3001\u4e54\u00b7\u4f11\u4f0a\u7279\u3001\u6770\u897f\u5361\u00b7\u5229\u6587\u65af\u987f\u3001\u7f57\u4f2f\u7279\u00b7\u83ab\u91cc\u65af\u3001\u6ed5\u76f8\u516c\u3001\u5c3c\u5e0c\u5c14\u00b7\u6f58\u4f1f\u8fea\u3001\u8428\u592b\u62c9\u5409\u00b7\u8f9b\u683c\u548c\u8d3e\u91cc\u5fb7\u00b7\u5854\u59c6\u9605\u8bfb\u4e86\u672c\u4e66\u7684\u8349\u7a3f\u3002", "note_en": "November 2009  I don&#39;t think Apple realizes how badly the App Store approval processis broken. Or rather, I don&#39;t think they realize how much it mattersthat it&#39;s broken.  The way Apple runs the App Store has harmed their reputation withprogrammers more than anything else they&#39;ve ever done. Their reputation with programmers used to be great.It used to be the most common complaint you heardabout Apple was that their fans admired them too uncritically.The App Store has changed that. Now a lot of programmershave started to see Apple as evil.  How much of the goodwill Apple once had with programmers have theylost over the App Store? A third? Half? And that&#39;s just so far.The App Store is an ongoing karma leak.   * * *  How did Apple get into this mess? Their fundamental problem isthat they don&#39;t understand software.  They treat iPhone apps the way they treat the music they sell throughiTunes. Apple is the channel; they own the user; if you want toreach users, you do it on their terms. The record labels agreed,reluctantly. But this model doesn&#39;t work for software. It doesn&#39;twork for an intermediary to own the user. The software businesslearned that in the early 1980s, when companies like VisiCorp showedthat although the words &#34;software&#34; and &#34;publisher&#34; fit together,the underlying concepts don&#39;t. Software isn&#39;t like music or books.It&#39;s too complicated for a third party to act as an intermediarybetween developer and user. And yet that&#39;s what Apple is tryingto be with the App Store: a software publisher. And a particularlyoverreaching one at that, with fussy tastes and a rigidly enforcedhouse style.  If software publishing didn&#39;t work in 1980, it works even less nowthat software development has evolved from a small number of bigreleases to a constant stream of small ones. But Apple doesn&#39;tunderstand that either. Their model of product development derivesfrom hardware. They work on something till they think it&#39;s finished,then they release it. You have to do that with hardware, but becausesoftware is so easy to change, its design can benefit from evolution.The standard way to develop applications now is to launch fast anditerate. Which means it&#39;s a disaster to have long, random delayseach time you release a new version.  Apparently Apple&#39;s attitude is that developers should be more carefulwhen they submit a new version to the App Store. They would saythat. But powerful as they are, they&#39;re not powerful enough toturn back the evolution of technology. Programmers don&#39;t uselaunch-fast-and-iterate out of laziness. They use it because ityields the best results. By obstructing that process, Apple ismaking them do bad work, and programmers hate that as much as Applewould.  How would Apple like it if when they discovered a serious bug inOS\u00a0X, instead of releasing a software update immediately, they hadto submit their code to an intermediary who sat on it for a monthand then rejected it because it contained an icon they didn&#39;t like?  By breaking software development, Apple gets the opposite of whatthey intended: the version of an app currently available in the AppStore tends to be an old and buggy one. One developer told me: As a result of their process, the App Store is full of half-baked applications. I make a new version almost every day that I release to beta users. The version on the App Store feels old and crappy. I&#39;m sure that a lot of developers feel this way: One emotion is &#34;I&#39;m not really proud about what&#39;s in the App Store&#34;, and it&#39;s combined with the emotion &#34;Really, it&#39;s Apple&#39;s fault.&#34;\nAnother wrote: I believe that they think their approval process helps users by ensuring quality. In reality, bugs like ours get through all the time and then it can take 4-8 weeks to get that bug fix approved, leaving users to think that iPhone apps sometimes just don&#39;t work. Worse for Apple, these apps work just fine on other platforms that have immediate approval processes.\nActually I suppose Apple has a third misconception: that all thecomplaints about App Store approvals are not a serious problem.They must hear developers complaining. But partners and suppliersare always complaining. It would be a bad sign if they weren&#39;t;it would mean you were being too easy on them. Meanwhile the iPhoneis selling better than ever. So why do they need to fix anything?  They get away with maltreating developers, in the short term, becausethey make such great hardware. I just bought a new 27&#34; iMac acouple days ago. It&#39;s fabulous. The screen&#39;s too shiny, and thedisk is surprisingly loud, but it&#39;s so beautiful that you can&#39;tmake yourself care.  So I bought it, but I bought it, for the first time, with misgivings.I felt the way I&#39;d feel buying something made in a country with abad human rights record. That was new. In the past when I boughtthings from Apple it was an unalloyed pleasure. Oh boy! They makesuch great stuff. This time it felt like a Faustian bargain. Theymake such great stuff, but they&#39;re such assholes. Do I really wantto support this company?   * * *  Should Apple care what people like me think? What difference doesit make if they alienate a small minority of their users?  There are a couple reasons they should care. One is that theseusers are the people they want as employees. If your company seemsevil, the best programmers won&#39;t work for you. That hurt Microsofta lot starting in the 90s. Programmers started to feel sheepishabout working there. It seemed like selling out. When people fromMicrosoft were talking to other programmers and they mentioned wherethey worked, there were a lot of self-deprecating jokes about havinggone over to the dark side. But the real problem for Microsoftwasn&#39;t the embarrassment of the people they hired. It was thepeople they never got. And you know who got them? Google andApple. If Microsoft was the Empire, they were the Rebel Alliance.And it&#39;s largely because they got more of the best people thatGoogle and Apple are doing so much better than Microsoft today.  Why are programmers so fussy about their employers&#39; morals? Partlybecause they can afford to be. The best programmers can workwherever they want. They don&#39;t have to work for a company theyhave qualms about.  But the other reason programmers are fussy, I think, is that evilbegets stupidity. An organization that wins by exercising powerstarts to lose the ability to win by doing better work. And it&#39;snot fun for a smart person to work in a place where the best ideasaren&#39;t the ones that win. I think the reason Google embraced &#34;Don&#39;tbe evil&#34; so eagerly was not so much to impress the outside worldas to inoculate themselves against arrogance. [  1]  That has worked for Google so far. They&#39;ve become morebureaucratic, but otherwise they seem to have held true to theiroriginal principles. With Apple that seems less the case. When youlook at the famous  1984 ad now, it&#39;s easier to imagine Apple as thedictator on the screen than the woman with the hammer. [  2]In fact, if you read the dictator&#39;s speech it sounds uncannily like aprophecy of the App Store. We have triumphed over the unprincipled dissemination of facts.  We have created, for the first time in all history, a garden of pure ideology, where each worker may bloom secure from the pests of contradictory and confusing truths.\nThe other reason Apple should care what programmers think of themis that when you sell a platform, developers make or break you. Ifanyone should know this, Apple should. VisiCalc made the Apple II.  And programmers build applications for the platforms they use. Mostapplications\u2014most startups, probably\u2014grow out of personal projects.Apple itself did. Apple made microcomputers because that&#39;s whatSteve Wozniak wanted for himself. He couldn&#39;t have afforded aminicomputer.  [  3] Microsoft likewise started out making interpretersfor little microcomputers becauseBill Gates and Paul Allen were interested in using them. It&#39;s arare startup that doesn&#39;t build something the founders use.  The main reason there are so many iPhone apps is that so many programmershave iPhones. They may know, because they read it in an article,that Blackberry has such and such market share. But in practiceit&#39;s as if RIM didn&#39;t exist. If they&#39;re going to build something,they want to be able to use it themselves, and that means buildingan iPhone app.  So programmers continue to develop iPhone apps, even though Applecontinues to maltreat them. They&#39;re like someone stuck in an abusiverelationship. They&#39;re so attracted to the iPhone that they can&#39;tleave. But they&#39;re looking for a way out. One wrote: While I did enjoy developing for the iPhone, the control they place on the App Store does not give me the drive to develop applications as I would like. In fact I don&#39;t intend to make any more iPhone applications unless absolutely necessary. [  4]\nCan anything break this cycle? No device I&#39;ve seen so far could.Palm and RIM haven&#39;t a hope. The only credible contender is Android.But Android is an orphan; Google doesn&#39;t really care about it, notthe way Apple cares about the iPhone. Apple cares about the iPhonethe way Google cares about search.   * * *  Is the future of handheld devices one locked down by Apple? It&#39;sa worrying prospect. It would be a bummer to have another grimmonoculture like we had in the 1990s. In 1995, writing softwarefor end users was effectively identical with writing Windowsapplications. Our horror at that prospect was the single biggestthing that drove us to start building  web apps.  At least we know now what it would take to break Apple&#39;s lock.You&#39;d have to get iPhones out of programmers&#39; hands. If programmersused some other device for mobile web access, they&#39;d start to developapps for that instead.  How could you make a device programmers liked better than the iPhone?It&#39;s unlikely you could make something better designed. Appleleaves no room there. So this alternative device probably couldn&#39;twin on general appeal. It would have to win by virtue of someappeal it had to programmers specifically.  One way to appeal to programmers is with software. If youcould think of an application programmers had to have, but thatwould be impossible in the circumscribed world of the iPhone, you could presumably get them to switch.  That would definitely happen if programmers started to use handheldsas development machines\u2014if handhelds displaced laptops theway laptops displaced desktops. You need more control of a developmentmachine than Apple will let you have over an iPhone.  Could anyone make a device that you&#39;d carry around in your pocketlike a phone, and yet would also work as a development machine?It&#39;s hard to imagine what it would look like. But I&#39;ve learnednever to say never about technology. A phone-sized device thatwould work as a development machine is no more miraculous by presentstandards than the iPhone itself would have seemed by the standardsof 1995.  My current development machine is a MacBook Air, which I use withan external monitor and keyboard in my office, and by itself whentraveling. If there was a version half the size I&#39;d prefer it.That still wouldn&#39;t be small enough to carry around everywhere likea phone, but we&#39;re within a factor of 4 or so. Surely that gap isbridgeable. In fact, let&#39;s make it an RFS. Wanted: Woman with hammer.         Notes  [  1]When Google adopted &#34;Don&#39;t be evil,&#34; they were still so smallthat no one would have expected them to be, yet.  [  2]The dictator in the 1984 ad isn&#39;t Microsoft, incidentally;it&#39;s IBM. IBM seemed a lot more frightening in those days, butthey were friendlier to developers than Apple is now.  [  3]He couldn&#39;t even afford a  monitor. That&#39;s why the AppleI used a TV as a monitor.  [  4]Several people I talked to mentioned how much they liked theiPhone SDK. The problem is not Apple&#39;s products but their policies.Fortunately policies are software; Apple can change them instantlyif they want to. Handy that, isn&#39;t it?   Thanks to Sam Altman, Trevor Blackwell, Ross Boucher, James Bracy, Gabor Cselle,Patrick Collison, Jason Freedman, John Gruber, Joe Hewitt, Jessica Livingston,Robert Morris, Teng Siong Ong, Nikhil Pandit, Savraj Singh, and Jared Tame for reading drafts of this.", "posttime": "2022-02-22 02:57:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,apple", "title": "\u82f9\u679c\u7684\u9519\u8bef\uff082009\uff09", "title_en": "Apple\u2019s Mistake (2009)", "transed": 1, "url": "http://www.paulgraham.com/apple.html", "via": "", "real_tags": ["\u82f9\u679c", "apple"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074539, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53f8\u6cd5\u90e8\u8fd8\u6210\u7acb\u4e86\u4e24\u4e2a\u56e2\u961f\u6765\u9632\u6b62\u52a0\u5bc6\u8d27\u5e01\u7684\u6ee5\u7528\u2014\u2014\u8c01\u77e5\u9053\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1f\n\u7f8e\u56fd\u53f8\u6cd5\u90e8\uff08DoJ\uff09\u516c\u5e03\u4e86\u65b0\u7684\u653f\u7b56\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u5b83\u5bf9\u7f51\u7edc\u5a01\u80c1\u91c7\u53d6\u5148\u53d1\u5236\u4eba\u7684\u884c\u52a8\u3002\n\u526f\u53f8\u6cd5\u90e8\u957f\u4e3d\u838e\u00b7O\u00b7\u6469\u7eb3\u54e5\u4e0a\u5468\u5728\u6155\u5c3c\u9ed1\u7f51\u7edc\u5b89\u5168\u4f1a\u8bae\u4e0a\u7684\u4e00\u6b21\u8bb2\u8bdd\u4e2d\u900f\u9732\uff0c\u8fd9\u9879\u653f\u7b56\u5c06\u7531\u68c0\u5bdf\u5b98\u3001\u7279\u5de5\u548c\u5206\u6790\u4eba\u5458\u8bc4\u4f30&#34\uff1b\u662f\u5426\u5bf9\u7f51\u7edc\u5a01\u80c1\u91c7\u53d6\u7834\u574f\u6027\u884c\u52a8\uff0c\u5373\u4f7f\u5b83\u4eec\u53ef\u80fd\u4f1a\u4e3e\u62a5\u7f51\u7edc\u72af\u7f6a\u5206\u5b50\uff0c\u5e76\u5371\u53ca\u6307\u63a7\u548c\u902e\u6355\u7684\u53ef\u80fd\u6027&#34;\n\u5982\u679c\u53f8\u6cd5\u90e8\u8ba4\u4e3a\u8fd9\u6837\u505a\u53ef\u4ee5\u964d\u4f4e\u53d7\u5bb3\u8005\u7684\u98ce\u9669\uff0c\u5c31\u4f1a\u91c7\u53d6\u8fd9\u6837\u7684\u884c\u52a8\u3002\u6469\u7eb3\u54e5\u63d0\u5230&#34\uff1b\u63d0\u4f9b\u89e3\u5bc6\u5bc6\u94a5\u6216\u593a\u53d6\u7528\u4e8e\u8fdb\u4e00\u6b65\u7f51\u7edc\u653b\u51fb\u7684\u670d\u52a1\u5668#34\uff1b\u5c3d\u53ef\u80fd\u7684\u5e72\u9884\u3002\n\u6469\u7eb3\u54e5\u8fd8\u5e0c\u671b\u5728\u9002\u5f53\u7684\u65f6\u5019\u4f7f\u7528\u5236\u88c1\u548c\u51fa\u53e3\u7ba1\u5236\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53f8\u6cd5\u90e8\u751a\u81f3\u7f8e\u56fd\u53ef\u4ee5\u4f7f\u7528\u7684\u5236\u88c1\u548c\u51fa\u53e3\u7ba1\u5236\u3002\u5979\u5e0c\u671b&#34\uff1b\u6211\u4eec\u7684\u56fd\u9645\u548c\u79c1\u8425\u90e8\u95e8\u5408\u4f5c\u4f19\u4f34&#34\uff1b\u4e5f\u80fd\u53c2\u4e0e\u8fdb\u6765\uff0c\u8fd8\u5e0c\u671b\u53f8\u6cd5\u90e8\u7684\u4eba\u5de5\u4f5c&#34\uff1b\u5728\u7f8e\u56fd\u7f51\u7edc\u53f8\u4ee4\u90e8\u548c\u5176\u4ed6\u5730\u65b9\uff0c\u5b9e\u73b0\u76ee\u6807\u548c\u884c\u52a8\u7684\u7edf\u4e00&#34;\n\u526f\u53f8\u6cd5\u90e8\u957f\u8865\u5145\u8bf4\uff0c\u6307\u63a7\u548c\u902e\u6355\u7f51\u7edc\u7f6a\u72af#34\uff1b\u4ecd\u5c06\u662f\u7f51\u7edc\u72af\u7f6a\u6848\u4ef6\u7684\u4f18\u5148\u4e8b\u9879#34\uff1b\u4f46\u9700\u8981\u4e0d\u540c\u7684\u7b56\u7565&#34\uff1b\u5f53\u5a01\u80c1\u884c\u4e3a\u8005\u5728\u6d41\u6c13\u56fd\u5bb6\u5bfb\u6c42\u5e87\u62a4\u6216\u4ee3\u8868\u5916\u56fd\u653f\u5e9c\u5de5\u4f5c\u65f6&#34;\n&#34;\u5b83&#39\uff1b\u8fd9\u662f\u7f55\u89c1\u7684\u7f51\u7edc\u8c03\u67e5\uff0c\u6ca1\u6709&#39\uff1b\u6ca1\u6709\u56fd\u9645\u5316\u7684\u7ef4\u5ea6\uff0c&#34\uff1b\u6469\u7eb3\u54e5\u5ba3\u5e03\uff0c\u5904\u7406\u91cd\u5927\u7f51\u7edc\u8c03\u67e5\u7684\u68c0\u5bdf\u5b98\u4eca\u540e\u5c06\u88ab\u8981\u6c42\u4e0e\u53f8\u6cd5\u90e8\u534f\u5546\uff1bs\u56fd\u9645\u548c\u7f51\u7edc\u72af\u7f6a\u4e13\u5bb6#34\uff1b\u786e\u5b9a\u53ef\u80fd\u6709\u52a9\u4e8e\u963b\u6b62\u5a01\u80c1\u7684\u56fd\u9645\u884c\u52a8&#34;\n\u56e0\u6b64\uff0c\u4e00\u9879\u65b0\u7684\u56fd\u9645\u865a\u62df\u8d27\u5e01\u5021\u8bae\u5c06\u4fc3\u8fdb\u6469\u7eb3\u54e5\u6240\u8bf4\u7684&#34\uff1b\u66f4\u591a\u7684\u8054\u5408\u56fd\u9645\u6267\u6cd5\u884c\u52a8\u2014\u2014\u6765\u81ea\u4e16\u754c\u5404\u5730\u591a\u4e2a\u6267\u6cd5\u673a\u6784\u7684\u66f4\u591a\u773c\u775b\u2014\u2014\u901a\u8fc7\u533a\u5757\u94fe\u8ffd\u8e2a\u8d44\u91d1&#34; \u5021\u8bae&#39\uff1bs\u7684\u5458\u5de5\u8fd8\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e9b\u6709\u5173\u91d1\u878d\u6cd5\u89c4\u548c\u53cd\u6d17\u94b1\u8981\u6c42\u7684\u6559\u80b2\uff0c\u5e0c\u671b\u6f5c\u5728\u7684\u6ee5\u7528\u8005\u9075\u5b88\u6cd5\u5f8b\u3002\n\u6469\u7eb3\u54e5\u8fd8\u5ba3\u5e03\u6210\u7acb\u4e00\u4e2a\u865a\u62df\u8d44\u4ea7\u5f00\u53d1\u90e8\u95e8\uff08VAXU\uff09\uff0c\u8be5\u90e8\u95e8\u4e3a&#34\uff1b\u5c06\u52a0\u5bc6\u8d27\u5e01\u4e13\u5bb6\u6574\u5408\u6210\u4e00\u4e2a\u795e\u7ecf\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u4e3aFBI\u7684\u5176\u4ed6\u4eba\u5458\u63d0\u4f9b\u8bbe\u5907\u3001\u533a\u5757\u94fe\u5206\u6790\u3001\u865a\u62df\u8d44\u4ea7\u6263\u62bc\u548c\u57f9\u8bad&#34; \u8be5\u90e8\u95e8\u5c06\u4e0e\u8054\u90a6\u8c03\u67e5\u5c40&#39\uff1b\u73b0\u6709\u7684\u56fd\u5bb6\u9690\u5bc6\u7801\u6267\u6cd5\u5c0f\u7ec4\u81ea2021\u5e74\u5e95\u6210\u7acb\u4ee5\u6765\uff0c\u5df2\u53d1\u5c55\u5230\u96c7\u4f6312\u540d\u68c0\u5bdf\u5b98\uff0c\u5e76\u4e8e\u4e0a\u5468\u5f00\u59cb\u4e86\u5176\u7b2c\u4e00\u5e2d\u4e3b\u4efb\u2014\u2014Eun Young Choi\uff0c\u6469\u7eb3\u54e5\u88ab\u63cf\u8ff0\u4e3a\u201c34\u201d\uff1b\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u8ba1\u7b97\u673a\u72af\u7f6a\u68c0\u5bdf\u5b98\u548c\u8be5\u9886\u57df\u7684\u9886\u5bfc\u8005&#34;\nVAXU\u662f\u57282\u67088\u65e5\u902e\u6355&#34\uff1b\u79d1\u6280\u4f01\u4e1a\u5bb6&#34\uff1b34\u5c81\u7684Ilya Lichtenstein\u548c31\u5c81\u7684Heather Morgan\uff08\u80e1\uff09\uff0c\u88ab\u63a7\u5bc6\u8c0b\u5077\u7a8345\u4ebf\u7f8e\u5143\u7684\u592b\u59bb\u5e2d\uff0c\u636e\u79f0\u57282016\u5e74\u4ece\u9999\u6e2f\u5bc6\u7801\u4ea4\u6613\u516c\u53f8BITFEX\u4e2d\u89e3\u8131\u51fa\u6765\u3002\n\u6469\u7eb3\u54e5\u8868\u793a\uff0c\u902e\u6355\u8fd9\u4e24\u4eba\u7684\u52aa\u529b\u662f\u5bf9\u4e00\u79cd\u975e\u5e38\u53e4\u8001\u7684\u6267\u6cd5\u624b\u6bb5\u7684\u73b0\u4ee3\u6539\u7f16\uff1a\u8ddf\u8e2a\u91d1\u94b1\u3002\u5979\u5411\u89c2\u4f17\u4fdd\u8bc1\uff0cVAXU&#39\uff1b\u7f8e\u56fd\u53f8\u6cd5\u90e8\u7684\u7ec4\u6210\u8868\u660e\uff0c\u53f8\u6cd5\u90e8\u53ca\u5176\u76d1\u7ba1\u7684\u673a\u6784\u6b63\u5728\u6f14\u53d8\u4e3a\u4eca\u5929\u7684\u4f1a\u8bae#39\uff1b\u8fd9\u662f\u5a01\u80c1\u3002\u00ae", "note_en": "DoJ also creates two teams to prevent abuse of cryptocurrency \u2013 who knew that happens?\n  The United States Department of Justice (DoJ) has revealed new policies that may see it undertake pre-emptive action against cyber threats.\n Revealed last week by deputy attorney general Lisa O. Monaco, in a  speech at the Munich Cyber Security Conference, the policy will see prosecutors, agents and analysts assess &#34;whether to use disruptive actions against cyber threats, even if they might otherwise tip the cybercriminals off and jeopardize the potential for charges and arrests.&#34;\n Such actions will be undertaken if the DoJ feels that action can reduce risks for victims. Monaco mentioned &#34;providing decryptor keys or seizing servers used to further cyberattacks&#34; as possible interventions.\n  Monaco also wants sanctions and export controls used when appropriate \u2013 and not just those the DoJ or even the US can wield. She hopes &#34;our international and private sector partners&#34; can weigh in, too, and also wants DoJ people to work &#34;at US Cyber Command and elsewhere, to achieve unity of purpose and unity of action.&#34;\n The deputy attorney general added that charging and apprehending cybercriminals &#34;will still be a priority in cybercrime cases&#34; but that different tactics are needed &#34;when threat actors seek safe haven in rogue countries or work on behalf of a foreign government.&#34;\n        &#34;It&#39;s the rare cyber investigation that doesn&#39;t have an international dimension,&#34; Monaco said, announcing that prosecutors handling significant cyber investigations will henceforth be required to consult with DoJ&#39;s international and cybercrime specialists &#34;to identify international actions that might be able to help stop a threat.&#34;\n  A new International Virtual Currency Initiative will therefore facilitate what Monaco described as &#34;more joint international law enforcement operations \u2013 more eyes from multiple law enforcement agencies around the world \u2013 to track money through the blockchain.&#34; The Initiative&#39;s staff also get to do some education about financial regulations and anti-money laundering requirements, in the hope would-be abusers stay on the right side of the law.\n Monaco also announced a Virtual Asset Exploitation Unit (VAXU) that &#34;will combine cryptocurrency experts into one nerve center that can provide equipment, blockchain analysis, virtual asset seizure and training to the rest of the FBI.&#34; The Unit will work alongside the FBI&#39;s existing National Cryptocurrency Enforcement Team which, since its formation in late 2021, has grown to employ a dozen prosecutors and, as of last week, its first director \u2013 Eun Young Choi, who Monaco described as &#34;a seasoned computer crimes prosecutor and a leader in the field.&#34;\n VAXU was announced in the context of the February 8  arrest of &#34;tech entrepreneurs&#34; Ilya Lichtenstein, 34, and Heather Morgan, 31 \u2013 a husband and wife team accused of conspiring to launder $4.5 billion in cryptocurrency allegedly lifted from Hong Kong crypto exchange Bitfinex in 2016.\n   Monaco said the effort to arrest the pair was a modern adaptation of a very old law enforcement technique: following the money. She assured her audience that VAXU&#39;s formation shows the DoJ and the agencies it oversees are evolving to meet today&#39;s threats. \u00ae", "posttime": "2022-02-22 02:55:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u5148\u53d1\u5236\u4eba,preemptively,\u7f51\u7edc", "title": "\u7f8e\u56fd\u5c06\u5148\u53d1\u5236\u4eba\u6253\u51fb\u4e0d\u826f\u7f51\u7edc\u884c\u4e3a\u8005", "title_en": "USA to preemptively attack bad cyber actors", "transed": 1, "url": "https://www.theregister.com/2022/02/21/doj_cyber_offensive_policy/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u5148\u53d1\u5236\u4eba", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074537, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u4eec\u901a\u8fc7\u5728\u4e00\u4e2a\u6269\u5c55\u5e95\u5ea7\u4e0a\u5207\u6362\u5f7c\u6b64\u76f8\u90bb\u7684\u4e24\u8f86\u81ea\u884c\u8f66\u7684\u4e8c\u7ef4\u7801\u626b\u63cf\u7801\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u4e2a\u6beb\u65e0\u6212\u5907\u7684\u9a91\u8f66\u4eba\u5c1d\u8bd5\u7528\u667a\u80fd\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\u89e3\u9501\u4e00\u8f86\u81ea\u884c\u8f66\uff0c\u4ece\u800c\u7a83\u53d6\u82b1\u65d7\u7684\u81ea\u884c\u8f66\u3002\n\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9002\u7528\u4e8e\u9a91\u624b\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u5207\u6362\u4ee3\u7801\u91ca\u653e\u9644\u8fd1\u7684\u82b1\u65d7\u81ea\u884c\u8f66\uff0c\u5c0f\u5077\u5728\u90a3\u91cc\u7b49\u5f85\uff0c\u8df3\u4e0a\u81ea\u884c\u8f66\uff0c\u7136\u540e\u9a91\u8d70\u3002\n\u4ed6\u4eec\u5927\u6982\u662f\u7528\u76f8\u673a\u3001\u6253\u5370\u673a\u548c\u8d34\u7eb8\u6765\u4ea4\u6362\u81ea\u884c\u8f66\u4e0a\u7684\u4ee3\u7801\u3002\u636e\u63a8\u6d4b\uff0c\u53d7\u5bb3\u4eba\u56e0\u672a\u5f52\u8fd8\u88ab\u76d7\u81ea\u884c\u8f66\u800c\u88ab\u8d77\u8bc9\u3002\n\u8fd9\u4e2a\u6545\u4e8b\u662f\u53bb\u5e74\u7684\uff0c\u4f46\u6211\u4ee5\u524d\u6ca1\u770b\u8fc7\u3002\u94fe\u63a5\u4e0a\u6709\u4e00\u6bb5\u76d7\u7a83\u89c6\u9891\u3002", "note_en": "They\u2019re stealing Citi Bikes by switching the QR scan codes on two bicycles near each other at a docking station, then waiting for an unsuspecting cyclist to try to unlock a bike with his or her smartphone app.\n The app doesn\u2019t work for the rider but does free up the nearby Citi Bike with the switched code, where a thief is waiting, jumps on the bicycle and rides off.\n Presumably they\u2019re using camera, printers, and stickers to swap the codes on the bikes. And presumably the victim is charged for not returning the stolen bicycle.\n This story is from last year, but I hadn\u2019t seen it before. There\u2019s a video of one theft at the link.", "posttime": "2022-02-22 02:46:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8c\u7ef4\u7801,bicycles,\u81ea\u884c\u8f66", "title": "\u901a\u8fc7\u4ea4\u6362\u4e8c\u7ef4\u7801\u5077\u81ea\u884c\u8f66", "title_en": "Stealing Bicycles by Swapping QR Codes", "transed": 1, "url": "https://www.schneier.com/blog/archives/2022/02/stealing-bicycles-by-swapping-qr-codes.html", "via": "", "real_tags": ["\u4e8c\u7ef4\u7801", "bicycles", "\u81ea\u884c\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074536, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u6e90\u8f6f\u4ef6\u65e0\u5904\u4e0d\u5728\u3002\u5b83\u5df2\u7ecf\u6210\u4e3a\u6280\u672f\u521b\u65b0\u65e0\u4e0e\u4f26\u6bd4\u7684\u9a71\u52a8\u529b\uff0c\u56e0\u4e3a\u4f7f\u7528\u5b83\u7684\u7ec4\u7ec7\u6ca1\u6709&#39\uff1b\u6211\u4eec\u4e0d\u5fc5\u91cd\u65b0\u53d1\u660e\u901a\u7528\u8f6f\u4ef6\u7ec4\u4ef6\u3002\n\u7136\u800c\uff0c\u5f00\u6e90\u8f6f\u4ef6\u7684\u65e0\u5904\u4e0d\u5728\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a\u5b83\u4e3a\uff08\u6709\u610f\u6216\u65e0\u610f\u5730\uff09\u5411\u5f00\u6e90\u8f6f\u4ef6\u4ea7\u54c1\u7684\u6d88\u8d39\u8005\u5f15\u5165\u6f0f\u6d1e\u6253\u5f00\u4e86\u5927\u95e8\u3002\u6700\u8fd1\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684Log4j\u4ee3\u7801\u5e93\u4e2d\u89e3\u51b3\u4e3b\u8981\u6f0f\u6d1e\u7684\u7ade\u8d5b\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u5fc5\u987b\u89e3\u51b3\u5f00\u6e90\u8f6f\u4ef6\u73af\u5883\u4e2d\u7684\u98ce\u9669\u3002\n\u5bf9\u7f51\u7edc\u7f6a\u72af\u7684\u5f00\u6e90\u547c\u5401\u5f00\u6e90\u653b\u51fb\u65b9\u6cd5\u5bf9\u574f\u4eba\u5f88\u6709\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e7f\u6cdb\u4e14\u9ad8\u6548\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u6765\u6df7\u6dc6\u5bf9\u5f00\u653e\u6e90\u4ee3\u7801\u9879\u76ee\u6240\u505a\u7684\u6076\u610f\u66f4\u6539\uff0c\u5e76\u4e14\u5ba1\u67e5\u4ee3\u7801\u7684\u5b89\u5168\u6027\u5f71\u54cd\u7684\u4e25\u683c\u7a0b\u5ea6\u5728\u5404\u4e2a\u9879\u76ee\u4e2d\u53ef\u80fd\u5b58\u5728\u5f88\u5927\u5dee\u5f02\u3002\u5982\u679c\u6ca1\u6709\u4e25\u683c\u7684\u63a7\u5236\u63aa\u65bd\u6765\u68c0\u6d4b\u8fd9\u4e9b\u6076\u610f\u66f4\u6539\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5728&#39\uff1b\u6211\u4eec\u5df2\u7ecf\u5728\u591a\u5bb6\u516c\u53f8\u7684\u8f6f\u4ef6\u4e2d\u53d1\u5e03\u548c\u4f7f\u7528\u3002\n\u5bf9\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u653b\u51fb\u53ef\u80fd\u5728\u5927\u5c0f\u548c\u5f71\u54cd\u7684\u5b9e\u4f53\u4e0a\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u53bb\u5e747\u6708\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u4e5d\u4e2a\u5f71\u54cd\u4e09\u4e2a\u5f00\u6e90\u9879\u76ee\u7684\u6f0f\u6d1e\u2014\u2014EspoCRM\u3001Pimcore\u548cAkaunting\u2014\u2014\u4e2d\u5c0f\u578b\u4f01\u4e1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u3002\u4ec0\u4e48&#39\uff1b\u6b64\u5916\uff0c2017\u5e74Equifax\u6570\u636e\u6cc4\u9732\u4e8b\u4ef6\u5f71\u54cd\u4e861.47\u4ebf\u4eba\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u539f\u56e0\u662f\u8be5\u7ec4\u7ec7\u5b58\u5728\u6f0f\u6d1e#39\uff1bs\u7684\u5f00\u6e90\u4ee3\u7801\u662f\u4e00\u4e2a\u660e\u786e\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u6f0f\u6d1e\u5982\u4f55\u88ab\u574f\u4eba\u5229\u7528\uff0c\u5e76\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7834\u574f\u6027\u5f71\u54cd\u3002\n\u6c38\u4e0d\u653e\u5f03CISA\u66fe\u8868\u793a\uff0c\u6570\u4ebf\u53f0\u8bbe\u5907\u53ef\u80fd\u53d7\u5230Log4j\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002\u9274\u4e8e\u8fd9\u8d77\u4e8b\u4ef6\u7684\u4e25\u91cd\u6027\uff0c\u8bb8\u591a\u4f01\u4e1a\u53ef\u80fd\u6b63\u5728\u5206\u6790\u662f\u5426\u5728\u672a\u6765\u7684\u5f00\u53d1\u4e2d\u5229\u7528\u5f00\u653e\u6e90\u4ee3\u7801\u3002\u7136\u800c\uff0c\u5b8c\u5168\u653e\u5f03\u5f00\u6e90\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u73b0\u5b9e\u3002\u6240\u6709\u73b0\u4ee3\u8f6f\u4ef6\u90fd\u662f\u7528\u5f00\u6e90\u7ec4\u4ef6\u6784\u5efa\u7684\uff0c\u800c\u5728\u6ca1\u6709\u5f00\u6e90\u7684\u60c5\u51b5\u4e0b\u91cd\u5efa\u8fd9\u4e9b\u7ec4\u4ef6\u5c06\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u6295\u8d44\uff0c\u4ee5\u751f\u4ea7\u54ea\u6015\u662f\u8f83\u5c0f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5168\u740360%\u4ee5\u4e0a\u7684\u7f51\u7ad9\u8fd0\u884c\u5728Apache\u548cNginx\u670d\u52a1\u5668\u4e0a\uff0c\u636e\u62a5\u9053\uff0c90%\u7684IT\u9886\u5bfc\u8005\u5b9a\u671f\u4f7f\u7528\u4f01\u4e1a\u5f00\u6e90\u4ee3\u7801\u3002\n\u6d4b\u8bd5\u548c\u4fdd\u62a4\u60a8\u7684\u8f6f\u4ef6\uff0c\u800c\u4e0d\u662f\u907f\u514d\u5f00\u6e90\uff0c\u4e00\u4e2a\u66f4\u73b0\u5b9e\u7684\u65b9\u6cd5\u662f\u5b89\u5168\u548c\u8f6f\u4ef6\u56e2\u961f\u5171\u540c\u5f00\u53d1\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u548c\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u7b56\u7565\u548c\u6d41\u7a0b\u3002\u7ec4\u7ec7\u5e94\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u7531\u4e09\u90e8\u5206\u7ec4\u6210\u7684\u8fc7\u7a0b\u3002\u5b83\u9700\u8981\u626b\u63cf\u548c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5efa\u7acb\u4e00\u4e2a\u660e\u786e\u7684\u6d41\u7a0b\uff0c\u5728\u6f0f\u6d1e\u51fa\u73b0\u65f6\u89e3\u51b3\u548c\u4fee\u590d\u6f0f\u6d1e\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u653f\u7b56\uff0c\u5728\u5176\u4e2d\u4e3a\u89e3\u51b3\u5b89\u5168\u95ee\u9898\u5236\u5b9a\u89c4\u5219\u3002\n\u5f53\u6d89\u53ca\u5230\u4f7f\u7528\u5de5\u5177\u6d4b\u8bd5\u5f00\u6e90\u73af\u5883\u7684\u5f39\u6027\u65f6\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u662f\u5f88\u597d\u7684\u7b2c\u4e00\u6b65\u3002\u4e0d\u8fc7\uff0c\u7ec4\u7ec7\u5fc5\u987b\u8bb0\u4f4f\uff0c\u8fd9\u53ea\u662f\u6d4b\u8bd5\u7684\u7b2c\u4e00\u5c42\u3002\u9759\u6001\u5206\u6790\u662f\u6307\u5728\u5b9e\u9645\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u6216\u7a0b\u5e8f\u4e0a\u7ebf\u4e4b\u524d\u5206\u6790\u6e90\u4ee3\u7801\uff0c\u5e76\u89e3\u51b3\u4efb\u4f55\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u7136\u800c\uff0c\u9759\u6001\u5206\u6790\u65e0\u6cd5\u68c0\u6d4b\u5230\u6240\u6709\u53ef\u80fd\u5d4c\u5165\u5230\u5f00\u6e90\u4ee3\u7801\u4e2d\u7684\u6076\u610f\u5a01\u80c1\u3002\u4e0b\u4e00\u6b65\u5e94\u8be5\u662f\u5728\u6c99\u7bb1\u73af\u5883\u4e2d\u8fdb\u884c\u989d\u5916\u7684\u6d4b\u8bd5\u3002\u4e25\u683c\u7684\u4ee3\u7801\u5ba1\u67e5\u3001\u52a8\u6001\u4ee3\u7801\u5206\u6790\u548c\u5355\u5143\u6d4b\u8bd5\u662f\u53ef\u4ee5\u5229\u7528\u7684\u5176\u4ed6\u65b9\u6cd5\u3002\uff08\u52a8\u6001\u5206\u6790\u662f\u6307\u5728\u8f6f\u4ef6\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u65f6\u5bf9\u5176\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u8bc6\u522b\u6f0f\u6d1e\u3002\uff09\n\u626b\u63cf\u5b8c\u6210\u540e\uff0c\u7ec4\u7ec7\u5fc5\u987b\u6709\u4e00\u4e2a\u660e\u786e\u7684\u6d41\u7a0b\u6765\u89e3\u51b3\u4efb\u4f55\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u6b63\u8d76\u4e0a\u53d1\u5e03\u622a\u6b62\u65e5\u671f\uff0c\u6216\u8005\u8f6f\u4ef6\u8865\u4e01\u53ef\u80fd\u9700\u8981\u91cd\u6784\u6574\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u5bf9\u65f6\u95f4\u7ebf\u9020\u6210\u538b\u529b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5e94\u8be5\u5e2e\u52a9\u5f00\u53d1\u8005\u89e3\u51b3\u4fdd\u62a4\u7ec4\u7ec7\u7684\u8270\u96be\u9009\u62e9#39\uff1b\u901a\u8fc7\u7ed9\u51fa\u89e3\u51b3\u6f0f\u6d1e\u548c\u7f13\u89e3\u95ee\u9898\u7684\u660e\u786e\u4e0b\u4e00\u6b65\u63aa\u65bd\uff0c\u63d0\u5347\u5b89\u5168\u6027\u3002\n\u653f\u7b56\u53d8\u66f4\u6b65\u9aa4\u5e94\u521b\u5efa\u4e00\u4e2a\u8bb0\u5f55\u5728\u6848\u7684\u8ba1\u5212\uff0c\u8bf4\u660e\u5982\u4f55\u5236\u5b9a\u6240\u6709\u51b3\u7b56\uff0c\u4ee5\u53ca\u54ea\u4e9b\u5229\u76ca\u76f8\u5173\u8005\u5e94\u53c2\u4e0e\u6574\u4e2a\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u7ec4\u7ec7\u53ef\u4ee5\u5bf9\u5176\u5f00\u6e90\u7ec4\u4ef6\u5b9e\u65bd\u591a\u79cd\u63a7\u5236\uff0c\u4f8b\u5982\u8ba4\u8bc1\u548c\u8ba4\u53ef\u8ba1\u5212\u3002\u7136\u800c\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u5c06\u589e\u52a0\u989d\u5916\u7684\u95f4\u63a5\u6210\u672c\uff0c\u5e76\u51cf\u7f13\u5f00\u6e90\u9879\u76ee\u7684\u5f00\u53d1\u3002\n\u4fdd\u62a4\u5f00\u653e\u6e90\u4ee3\u7801\u514d\u53d7\u672a\u6765\u7684\u653b\u51fb\u6574\u4e2a\u884c\u4e1a\u90fd\u6ce8\u610f\u5230\u9700\u8981\u8fdb\u4e00\u6b65\u4fdd\u62a4\u5f00\u653e\u6e90\u4ee3\u7801\u3002Linux\u57fa\u91d1\u4f1a\u4e8e\u5341\u6708\u5ba3\u5e03\uff0c\u5b83\u4e0e\u5176\u4ed6\u884c\u4e1a\u9886\u8896\u4e00\u8d77\u52df\u96c6\u4e861000\u4e07\u7f8e\u5143\uff0c\u4ee5\u8bc6\u522b\u548c\u4fee\u590d\u5f00\u6e90\u8f6f\u4ef6\u4e2d\u7684\u7f51\u7edc\u5b89\u5168\u6f0f\u6d1e\uff0c\u5e76\u5f00\u53d1\u6539\u8fdb\u7684\u5de5\u5177\u3001\u57f9\u8bad\u3001\u7814\u7a76\u548c\u6f0f\u6d1e\u62ab\u9732\u5b9e\u8df5\u3002\u9664\u4e86\u5728\u5168\u884c\u4e1a\u8303\u56f4\u5185\u52aa\u529b\u4fdd\u62a4\u57fa\u4e8e\u5f00\u653e\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u8f6f\u4ef6\u514d\u53d7\u7f51\u7edc\u5a01\u80c1\u4e4b\u5916\uff0c\u5404\u7ec4\u7ec7\u8fd8\u5fc5\u987b\u5bf9\u5176\u9632\u5fa1\u6218\u7565\u91c7\u53d6\u5185\u90e8\u79ef\u6781\u4e3b\u52a8\u7684\u65b9\u6cd5\u3002\u8fd9\u5e94\u8be5\u5305\u62ec\u4e3a\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\u548c\u4ed6\u4eec\u6240\u4f9d\u8d56\u7684\u5f00\u6e90\u4ee3\u7801\u5b9e\u73b0\u6d4b\u8bd5\u548c\u63a7\u5236\u8fc7\u7a0b\u3002\u7ec4\u7ec7\u8fd8\u5fc5\u987b\u5236\u5b9a\u5185\u90e8\u653f\u7b56\u548c\u6307\u5bfc\u65b9\u9488\uff0c\u8bc6\u522b\u4f7f\u7528\u5f00\u6e90\u8f6f\u4ef6\u7684\u98ce\u9669\uff0c\u5e76\u786e\u5b9a\u7528\u4e8e\u7ba1\u7406\u8be5\u98ce\u9669\u7684\u63a7\u5236\u63aa\u65bd\u3002\u8fd9\u6837\u505a\u5c06\u4f7f\u4ed6\u4eec\u80fd\u591f\u7ee7\u7eed\u5229\u7528\u5f00\u6e90\u4ee3\u7801\u7684\u597d\u5904\uff0c\u540c\u65f6\u521b\u9020\u4e00\u4e2a\u80fd\u591f\u62b5\u5fa1\u672a\u6765\u653b\u51fb\u7684\u73af\u5883\u3002\n\u4e86\u89e3\u6700\u65b0\u7684\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u3001\u65b0\u53d1\u73b0\u7684\u6f0f\u6d1e\u3001\u6570\u636e\u6cc4\u9732\u4fe1\u606f\u548c\u65b0\u5174\u8d8b\u52bf\u3002\u6bcf\u5929\u6216\u6bcf\u5468\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\u3002\n\u8ba2\u9605", "note_en": "Open source software is ubiquitous. It has become an unequaled driver of technological innovation because organizations that use it don&#39;t have to reinvent the wheel for common software components.\n  However, the ubiquity of  open source software also presents a significant security risk, as it opens the door for vulnerabilities to be introduced (intentionally or inadvertently) to the consumers of open source software products. The recent race to address major vulnerabilities in the widely used Log4j code library is the biggest sign yet that risks within the open source software environment must be addressed.\n The Open Source Appeal for Cybercriminals The open source attack method is appealing to bad actors because it can be widespread and highly effective. Attackers can use various methods to obfuscate malicious changes contributed to open source projects, and the rigor in reviewing code for security implications can vary widely across projects. Without stringent controls in place to detect these malicious changes, they may go unnoticed until after they&#39;ve been distributed and included in software across numerous companies.\n Attacks on open source code can vary in size and the entities they affect. For example, last July, researchers found  nine vulnerabilities affecting three open source projects \u2014 EspoCRM, Pimcore, and Akaunting \u2014 which are frequently leveraged by small and midsize businesses. What&#39;s more, the 2017 Equifax data breach, which affected the personal data of  147 million people as a result of a vulnerability in the organization&#39;s open source code, is a clear example of how vulnerabilities can be exploited by bad actors and create damaging effects throughout.\n   Never Going to Give You Up  CISA has said that hundreds of millions of devices were likely  affected by the Log4j vulnerability. Given the magnitude of this incident, many enterprises are likely analyzing whether to leverage open source code for future developments. However, forgoing open source altogether isn&#39;t realistic. All modern software is built from open source components, and rebuilding those components without open source would require massive investments in time and money to produce even minor applications. Over  60% of websites worldwide run on Apache and Nginx servers, and  90% of IT leaders reportedly use enterprise open source code regularly.\n Testing and Protecting Your Software Instead of avoiding open source, a more realistic approach is for security and software teams to work together to develop policies and a process for testing applications and software components. Organizations should think about this as a three-part process. It requires scanning and testing code, establishing a clear-cut process for addressing and fixing vulnerabilities as they arise, and creating an internal policy in which rules are set for addressing security issues.\n When it comes to testing the resilience of your open source environment with tools, static code analysis is a good first step. Still, organizations must remember that this is only the first layer of testing. Static analysis refers to analyzing the source code before the actual software application or program goes live and addressing any discovered vulnerabilities. However, static analysis cannot detect all malicious threats that could be embedded in open source code. Additional testing in a sandbox environment should be the next step. Stringent code reviews, dynamic code analysis, and unit testing are other methods that can be leveraged. (Dynamic analysis refers to examining the software program while it&#39;s currently running to identify vulnerabilities.)\n  After scanning is complete, organizations must have a clear process to address any discovered vulnerabilities. Developers may be finding themselves against a release deadline, or the software patch may require refactoring the entire program and put a strain on timelines. This process should help developers address tough choices to protect the organization&#39;s security by giving clear next steps for addressing vulnerabilities and mitigating issues.\n The policy-change step should create a documented plan for how all decisions will be made moving forward and which stakeholders should be involved throughout the process. Additionally, organizations can implement multiple controls for their open source components, such as certification and accreditation programs. However, remember that this will add additional overhead costs and slow down the development of open source projects.\n  Defending Open Source Against Future Attacks The industry at large is taking note of the need to further protect open source code. The Linux Foundation announced in October it  raised $10 million alongside other industry leaders to identify and fix cybersecurity vulnerabilities in open source software and develop improved tooling, training, research, and vulnerability disclosure practices. In addition to industrywide efforts to protect software built on open source code against cyber threats, organizations must also take an internal proactive approach to their defense strategy. This should include implementing testing and control procedures for both their own code and the open source code on which they rely. Organizations must also develop internal policies and guidelines that recognize the risks from using open source software and identify the controls to be used to manage that risk. Doing so will allow them to continue leveraging the benefits of open source code while creating an environment that is resilient against future attacks.\n  Keep up with the latest cybersecurity threats, newly-discovered vulnerabilities, data breach information, and emerging trends. Delivered daily or weekly right to your email inbox.\n Subscribe", "posttime": "2022-02-22 02:44:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u4ee3\u7801,\u6e90\u4ee3\u7801,source,\u6f0f\u6d1e", "title": "\u5f00\u6e90\u4ee3\u7801\uff1a\u4e0b\u4e00\u6ce2\u4e3b\u8981\u7684\u7f51\u7edc\u653b\u51fb", "title_en": "Open Source Code: The Next Major Wave of Cyberattacks", "transed": 1, "url": "https://www.darkreading.com/vulnerabilities-threats/open-source-code-the-next-major-wave-of-cyberattacks", "via": "", "real_tags": ["\u5f00\u6e90", "\u4ee3\u7801", "\u6e90\u4ee3\u7801", "source", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Nix\u662f\u4e00\u4e2a\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u8ba9\u60a8\u5bf9\u8f6f\u4ef6\u4f9d\u8d56\u5173\u7cfb\u548c\u6784\u5efa\u8fc7\u7a0b\u6709\u4e00\u4e2a\u66f4\u786e\u5b9a\u7684\u89c6\u56fe\u3002\u5176\u6700\u5927\u7684\u7f3a\u70b9\u4e4b\u4e00\u662f\uff0c\u5173\u4e8e\u4f7f\u7528Nix\u7684\u9879\u76ee\u5e94\u8be5\u5982\u4f55\u534f\u540c\u5de5\u4f5c\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea6\u5b9a\u3002\u5b83&#39\uff1b\u8fd9\u5c31\u50cf\u6709\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4f46\u4e5f\u5fc5\u987b\u914d\u7f6e\u7cfb\u7edf\u6765\u8fd0\u884c\u81ea\u5df1\u7684\u8f6f\u4ef6\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u4ece\u9879\u76ee\u4e2d\u590d\u5236\u4e00\u4e2aNixOS\u6a21\u5757#39\uff1bs git repo\uff0c\u7f16\u5199\u81ea\u5df1\u7684\u6216\u66f4\u591a\u3002\u4e0e\u6b64\u76f8\u53cd\uff0cNixflakes\u5b9a\u4e49\u4e86\u4e00\u7ec4\u7ea6\u5b9a\uff0c\u7528\u4e8e\u5982\u4f55\u6784\u5efa\u3001\u8fd0\u884c\u3001\u96c6\u6210\u548c\u90e8\u7f72\u8f6f\u4ef6\uff0c\u800c\u65e0\u9700\u4f9d\u8d56\u5916\u90e8\u5de5\u5177\uff08\u5982Niv\u6216Lorri\uff09\u6765\u5e2e\u52a9\u60a8\u4ee5\u8f7b\u677e\u7684\u65b9\u5f0f\u5b8c\u6210\u57fa\u672c\u4efb\u52a1\u3002\n\u8fd9\u5c06\u662f\u4e00\u7cfb\u5217\u7684\u5e16\u5b50\uff0c\u5b83\u4eec\u5c06\u5efa\u7acb\u5728\u5f7c\u6b64\u7684\u57fa\u7840\u4e0a\u3002\u8fd9\u7bc7\u5e16\u5b50\u5c06\u4ecb\u7ecdNix flakes\uff0c\u5e76\u4f5c\u4e3a&#34\uff1b\u6211\u4e3a\u4ec0\u4e48\u8981\u5728\u4e4e&#34; Style\u6982\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u8584\u7247\uff0c\u800c\u65e0\u9700\u592a\u591a\u7ec6\u8282\u3002\u5176\u4e2d\u5927\u591a\u6570\u4eba\u4f1a\u5f97\u5230\u5355\u72ec\u7684\u5e16\u5b50\uff08\u6709\u4e9b\u5e16\u5b50\u4e0d\u6b62\u4e00\u4e2a\uff09\u3002\n\u5728\u6211\u770b\u6765\uff0c\u4ee5\u4e0b\u662f\u4f60\u5e94\u8be5\u5173\u5fc3\u5c3c\u514b\u65af\u7684\u4e00\u4e9b\u91cd\u8981\u539f\u56e0\uff1a\n\u8fdb\u5165Nix\u6700\u8ba9\u4eba\u607c\u706b\u7684\u5730\u65b9\u4e4b\u4e00\u662f\u8bbe\u7f6e\u9879\u76ee\uff1b\u8fd9\u4e0d\u5b8c\u5168\u662f\u4e00\u95e8\u6709\u5b9a\u4e49\u7684\u79d1\u5b66\u3002Nix\u914d\u7f6e\u5f80\u5f80\u4f1a\u6709\u673a\u5730\u589e\u957f\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u80fd\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee\u3002Nix flakes\u901a\u8fc7\u505a\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\u6765\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\u5b9a\u4e49\u4e00\u7247\u96ea\u82b1\u3002\u4ee5\u5c3c\u514b\u65af\u4e3a\u4e2d\u5fc3&#34\uff1b\u67a2\u7ebd\u548c#34\uff1b\u4e3a\u4e86\u4f60\u7684\u9879\u76ee&#39\uff1b\u7684\u4f9d\u8d56\u9879\u3001\u516c\u5f00\u7684\u8f6f\u4ef6\u5305\u3001NixOS\u914d\u7f6e\u6a21\u5757\u7b49\u7b49\u3002\n\u63d0\u4f9b\u4e00\u7ec4\u6a21\u677f\uff0c\u4ee5\u4fbf\u8f7b\u677e\u542f\u52a8\u9879\u76ee\u3002\u60f3\u8c61\u4e00\u4e0b\u7c7b\u4f3c\u4e8e\u7ea6\u66fc\u7684\u4e1c\u897f\uff0c\u4f46\u5b83\u76f4\u63a5\u5185\u7f6e\u4e8e\u5c3c\u514b\u65af\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728flake\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u6a21\u677f\u3002\u5c3c\u514b\u65af\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u7528\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u6765\u5e2e\u52a9\u89e3\u91ca\u5b83\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u7528Go\u6a21\u677f\u505a\u4e00\u4e2aGo\u9879\u76ee\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u673a\u5668\u4e0a\u542f\u7528Blenix\u8584\u7247\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fNixOS\uff0c\u8bf7\u5c06\u5176\u6dfb\u52a0\u5230\u60a8\u7684\u914d\u7f6e\u4e2d\u3002nix\u6587\u4ef6\uff1a\n\u5982\u679c\u4f60\u4e0d\u5728NixOS\u4e0a\uff0c\u4f60\u9700\u8981\u7f16\u8f91~/\u3002config/nix/nix\u3002Conver/etc/nix/nix\u3002conf\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a\n&lt\uff1b\u739b\u62c9&gt\uff1b\u60a8\u53ef\u80fd\u9700\u8981\u5728\u6b64\u5904\u91cd\u65b0\u542f\u52a8Nix\u5b88\u62a4\u8fdb\u7a0b\uff0c\u4f46\u5982\u679c\u60a8\u4e0d\u786e\u5b9aNix\u662f\u5982\u4f55\u5728\u975eNixOS\u673a\u5668\u4e0a\u8bbe\u7f6e\u7684\uff0c\u8bf7\u968f\u65f6\u5b8c\u5168\u91cd\u65b0\u542f\u52a8\u8ba1\u7b97\u673a\u3002\n\u73b0\u5728\u8f6c\u5230\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u4ece\u6a21\u677f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8584\u7247\uff1a\n{description=&#34\uff1b\u4e00\u4e2a\u7b80\u5355\u7684Go\u5305&#34\uff1b#Nixpkgs/NixOS\u7248\u672c\u8981\u4f7f\u7528\u3002inputs.Nixpkgs.url=&#34\uff1bNixpkgs/NixOS-21.11&#34\uff1b#outputs={self\uff0cNixpkgs}\uff1a\u8ba9#\u751f\u6210\u4e00\u4e2a\u7528\u6237\u53cb\u597d\u7684\u7248\u672c\u53f7\u3002\u7248\u672c=\u5185\u7f6e\u3002\u5b50\u5b57\u7b26\u4e320 8 self\u3002\u6700\u540e\u4fee\u6539\u65e5\u671f\u8981\u652f\u6301\u7684\u7cfb\u7edf\u7c7b\u578b\u3002supportedSystems=[&#34\uff1bx86_64-linux&#34\uff1b&#34\uff1bx86_64-darwin&#34\uff1b&#34\uff1baarch64-linux&#34\uff1b&#34\uff1baarch64-darwin&#34\uff1b]\u5e2e\u52a9\u51fd\u6570\u751f\u6210\u5c5e\u6027\u96c6#39\uff1b{x86_64-linux=f&#34\uff1bx86_64-linux&#34\uff1b\u2026}&#39;.  forAllSystems=nixpkgs\u3002lib\u3002genAttrs\u652f\u6301\u7684\u7cfb\u7edf\u5df2\u4e3a\u53d7\u652f\u6301\u7684\u7cfb\u7edf\u7c7b\u578b\u5b9e\u4f8b\u5316NIXPKG\u3002nixpkgsFor=forAllSystems\uff08\u7cfb\u7edf\uff1aimport nixpkgs{inherit system\uff1b}\uff09\uff1b\u5728{#\u4e2d\u4e3a\u6240\u9009\u7cfb\u7edf\u7c7b\u578b\u63d0\u4f9b\u4e00\u4e9b\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\u3002\u8f6f\u4ef6\u5305=forAllSystems\uff08\u7cfb\u7edf\uff1alet pkgs=nixpkgsFor.${system}\uff1b\u5728{go hello=pkgs.buildGoModule{pname=&#34\uff1bgo hello&#34\uff1b#inherit version\uff1b#\u5728&#39\uff1bnix develop&#39\uff1b\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981nix store\u4e2d\u7684\u6e90\u4ee3\u7801\u6811\u7684\u526f\u672c\u3002src=./.#\u6b64\u54c8\u5e0c\u9501\u5b9a\u6b64\u5305\u7684\u4f9d\u8d56\u9879\u3002\u8fd9\u662f#\u5fc5\u8981\u7684\uff0c\u56e0\u4e3ago\u9700\u8981\u7f51\u7edc\u8bbf\u95ee\u624d\u80fd\u89e3\u51b3#VCS\u3002\u8bf7\u53c2\u9605https://www.tweag.io/blog/2021-03-04-gomod2nix/\u5173\u4e8e#\u7ec6\u8282\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5047sha256\u6784\u5efa\uff0c\u5e76\u4f9d\u8d56\u539f\u751fGo#\u673a\u5236\u6765\u544a\u8bc9\u60a8\u54c8\u5e0c\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u786e\u5b9a\u5b83\u5e94\u8be5\u662f\u4ec0\u4e48#34\uff1b\u5e26\u5916&#34\uff1b\u4f7f\u7528\u5176\u4ed6\u5de5\u5177\uff08\u5982gomod2nix\uff09\u3002#\u9996\u5148\uff0c\u5efa\u8bae\u8bbe\u7f6e\u6b64\u503c\uff0c\u4f46\u5fc5\u987b\u8bb0\u4f4f\uff0c\u5f53\u4f9d\u8d56\u9879\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8981\u4f7f\u7528\u6b64\u54c8\u5e0c\u503c#vendorSha256=pkgs\u3002lib\u3002\u5047\u836f256\uff1b\u4f9b\u5e94\u5546HA256=#34\uff1bsha256-pQpattmS9VmO3ZIQUFn66az8GSmB4IvYhTTCFn6SUmo=&&#39\uff1bnix build&#39\uff1b\u3002\u5982\u679c#flake\u53ea\u63d0\u4f9b\u4e00\u4e2a\u5305\uff0c\u6216\u8005\u6709\u4e00\u4e2a\u6e05\u6670\u7684#34\uff1b\u4e3b\u8981\u7684&#34\uff1b#\u5305\u88f9defaultPackage=forAllSystems\uff08system:self.packages.${system}.go hello\uff09\uff1b}\uff1b}\n\u8fd9\u5b9a\u4e49\u4e86macOS\u548cLinux\u4e0a\u652f\u6301\u7684\u7528\u4e8e64\u4f4dx86\u5904\u7406\u5668\u548c64\u4f4dARM\u5904\u7406\u5668\u7684\u5355Go\u5305\u3002\n&lt\uff1b\u739b\u62c9&gt\uff1b\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e2a\u4ef7\u5dee\u5e94\u8be5\u8986\u76d6\u6240\u6709\u7684\u4e3b\u8981\u76ee\u6807&#39\uff1b\u6211\u4eec\u9700\u8981\u5173\u6ce8\u672c\u5730\u5f00\u53d1\u548c\u4e91\u90e8\u7f72\u3002\n{description=&#34\uff1b\u4e00\u4e2a\u7b80\u5355\u7684Go\u5305&#34\uff1binputs.nixpkgs.url=&#34\uff1bnixpkgs/nixos-21.11&#34\uff1boutputs={self\uff0cnixpkgs}:{packages={\u2026}\uff1bdefaultPackage={\u2026}\uff1b}\uff1b}\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6ce8\u610f\uff1a\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\uff08\u4ee5\u53ca\u7cfb\u5217\u6587\u7ae0\uff09\u4e2d\uff0c\u5f53\u6211\u63d0\u5230A&#34\uff1b\u8584\u7247\u8f93\u51fa&#34\uff1b\uff0c\u6211\u6307\u7684\u662f\u4f60\u7684\u96ea\u82b1\u7684\u8f93\u51fa\u5c5e\u6027\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u3002\u5c3c\u514b\u65af\u3002\u4e0e#34\u76f8\u540c\uff1b\u8584\u7247\u8f93\u5165&#34\uff1b\u53c2\u8003\u96ea\u82b1\u7684\u8f93\u5165\u5c5e\u6027\u3002\u5c3c\u514b\u65af\u3002\n\u5f53\u60a8\u65e9\u4e9b\u65f6\u5019\u8fd0\u884cnix build\u65f6\uff0c\u5b83\u9ed8\u8ba4\u4e3a\u5728defaultPackage\u4e2d\u6784\u5efa\u5305\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u6784\u5efago hello\u5305\uff1a\n\u6807\u51c6\u7684\u9ed8\u8ba4\u8f6f\u4ef6\u5305\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6784\u5efa\u8f6f\u4ef6\uff0c\u800c\u65e0\u9700\u9605\u8bfb\u8981\u6784\u5efa\u7684\u6587\u4ef6\u7684\u6587\u6863\u3002nix build\u53ea\u4f1a\u8d77\u4f5c\u7528\u2122\ufe0f.\n\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5305\u516c\u5f00\u4e3a\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0nix\u6784\u5efa\u548c\u6d4b\u8bd5/result/bin/go hello\u5faa\u73af\u5230\u4e00\u4e2anix run\u547d\u4ee4\u4e2d\u3002\u6253\u5f00\u8584\u7247\u3002\u5173\u95ed\u4f60\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u8ba9&#39\uff1bs\u5c06go hello\u914d\u7f6e\u4e3a\u9ed8\u8ba4\u5e94\u7528\u7a0b\u5e8f\uff1a\n&lt\uff1b\u739b\u62c9&gt\uff1bURL\u8def\u5f84\u7684\u989d\u5916\u90e8\u5206\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\uff1f\u90a3\u662fgitbranch\u5417\uff1f\n&lt\uff1b\u5361\u8fea&gt\uff1b\u662f\u7684\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u8bed\u6cd5\u8bbe\u7f6eNix\u5e94\u8be5\u4ece\u4e2d\u6784\u5efa\u7684git\u5206\u652f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u4f7f\u7528\u9ed8\u8ba4\u5206\u652f\uff08\u901a\u5e38\u4e3amain\uff09\uff0c\u4f46\u6709\u65f6\u9700\u8981\u6307\u5b9a\u5206\u652f\u6216\u76f4\u63a5\u63d0\u4ea4\u3002\n\u5c3c\u514b\u65af\u548c#39\uff1bs\u7684\u8d85\u80fd\u529b\u662f\u4ee5\u58f0\u660e\u65b9\u5f0f\u7ba1\u7406\u9879\u76ee\u7684\u5f00\u53d1\u73af\u5883\u7684\u80fd\u529b\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u786e\u4fdd\u9879\u76ee\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u5728\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u3002\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6211\u5728\u6211\u6240\u6709\u7684\u9879\u76ee\u4e2d\u90fd\u4f7f\u7528\u4e86\u5b83\uff0c\u4ee5\u81f3\u4e8e\u5f53\u6211\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e4b\u5916\u65f6\uff0c\u6211\u6ca1\u6709\u4efb\u4f55\u53ef\u7528\u7684\u5f00\u53d1\u5de5\u5177\u3002\nFlakes\u80fd\u591f\u4f7f\u7528devShell flake\u8f93\u51fa\u6307\u5b9a\u8fd9\u4e00\u70b9\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u52a0\u5230\u4f60\u7684\u8584\u7247\u4e0a\u3002\u5c3c\u514b\u65af\uff1a\u7528\u8fd9\u4e2a\uff1a\n#defaultApp devShell=forAllSystems\uff08\u7cfb\u7edf\uff1alet pkgs=nixpkgsFor.${system}\uff1b\u5728pkgs.mkShell\u4e2d{buildInputs=with pkgs\uff1b[go gopls goimports go tools]\uff1b}\uff09\uff1b\n&lt\uff1b\u739b\u62c9&gt\uff1b\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u7684GO\u5f00\u53d1\u73af\u5883\u3002\u5b83\u5305\u62ec\u6807\u51c6\u5de5\u5177\uff0c\u5982\u8bed\u8a00\u670d\u52a1\u5668\u3001\u7528\u4e8e\u66f4\u597d\u683c\u5f0f\u5316\u7684goimports\u548c\u7c7b\u4f3cstaticcheck\u7684\u5de5\u5177\u3002\u5982\u679c\u4f60\u5728\u5de5\u4f5c\u4e2d\u5b9a\u671f\u4f7f\u7528\u9759\u6001\u68c0\u67e5\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u591a\u7c73\u5c3c\u514b\u6709\u7528\u7684\u8bdd\uff0c\u8bf7\u8003\u8651\u628a\u5b83\u6254\u6389\u51e0\u4e2a\u6708\u3002\u8fd9\u6709\u52a9\u4e8e\u9879\u76ee\u66f4\u52a0\u81ea\u6211\u7ef4\u6301\u3002\n\u7136\u540e\u968f\u5fc3\u6240\u6b32\u5730\u653b\u51fb\u4f60\u7684\u9879\u76ee\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e2agit\u56de\u8d2d\u53d1\u9001\u7ed9\u670b\u53cb\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u6709\u76f8\u540c\u7684\u8bbe\u7f6e\u3002\n\u73b0\u5728\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u6295\u5165\u3002\u7247\u72b6\u8f93\u5165\u5141\u8bb8\u60a8\u5c06\u5916\u90e8\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002\u4f8b\u5982\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u770b\u770bnixpkgs\u8f93\u5165\uff1a\n\u8fd9\u5b9a\u4e49\u4e86\u5e94\u7528\u4e8e\u9879\u76ee\u7684NIXPKG\u7684\u7248\u672c\u3002\u8be5\u6a21\u677f\u9ed8\u8ba4\u4e3aNixOS 21.11&#39\uff1bs\u7248\u672c\u7684nixpkgs\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5347\u7ea7\u4e3anixos\u4e0d\u7a33\u5b9a\uff0c\u65b9\u6cd5\u662f\u5c06\u5176\u66f4\u6539\u4e3a\uff1a\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fd0\u884cnix flake update\uff0c\u7136\u540e\u8fd0\u884cnix develope\uff0c\u770b\u770b\u6211\u4eec\u8fd0\u884c\u7684\u662f\u4e00\u4e2a\u66f4\u65b0\u7248\u672c\u7684Go\uff1a\n$nix flake update\u8b66\u544a\uff1a\u6b63\u5728\u66f4\u65b0\u9501\u6587\u4ef6&#39/home/cadey/tmp/gohello/flake\u3002\u9501&#39\uff1b\uff1a\u2022\u66f4\u65b0\u8f93\u5165&#39\uff1b\u5c3c\u514b\u65af\u5e15\u514b\u65af&#39\uff1b\uff1a&#39;github:NixOS/nixpkgs/77aa71f66fd05d9e7b7d1c084865d703a8008ab7\u548c#39\uff1b(2022-01-19)  \u2192 &#39;github:NixOS/nixpkgs/2128d0aa28edef51fd8fef38b132ffc0155595df&#39\uff1b\uff082022-02-16\uff09$nix\u5f00\u53d1[[\u53d7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\uff1a~/tmp/gohello]$go\u7248\u672cgo\u7248\u672cgo1\u300217.7 linux/amd64\n\u8fd9\u8fd8\u5141\u8bb8\u60a8\u5f15\u5165\u5176\u4ed6Nix flakes\u9879\u76ee\uff0c\u4f8b\u5982my CSS framework Xess\uff1a\n&lt\uff1b\u5361\u8fea&gt\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u60a8\u4f7f\u7528Nix flakes\u62c9\u5165\u53e6\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u5b83\u5c06\u8be5\u9879\u76ee\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u5b87\u5b99\uff0c\u5e76\u4e14\u53ea\u4e0e\u8be5flake\u7684\u8f93\u51fa\u4ea4\u4e92\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u62c9\u5165\u81ea\u5df1\u7248\u672c\u7684nixpkgs\uff0c\u5b83\u62e5\u6709\u7684\u6bcf\u4e2a\u4f9d\u8d56\u9879\u90fd\u53ef\u4ee5\u62c9\u5165\u81ea\u5df1\u7248\u672c\u7684nixpkgs\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u901a\u8fc7\u5236\u4f5cXess\u548c#39\uff1bnixpkgs\u7684\u8f93\u5165\u9075\u5faa\u6211\u4eec\u81ea\u5df1\u7684\u8f93\u5165\uff0c\u6211\u4eec\u8bf4&#34\uff1b\u6211\u77e5\u9053\u8fd9\u53ef\u80fd\u4e0d\u517c\u5bb9\uff0c\u4f46\u8bf7\u6539\u7528\u8fd9\u4e2a\u7248\u672c\u7684nixpkgs&#34\uff1b\u3002\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6709\u5f88\u591a\u6295\u5165\u7684\u5927\u578b\u9879\u76ee\uff08\u4f8b\u5982\uff0c\u6709\u592a\u591a\u4e00\u6b21\u6027\u9879\u76ee\u7684\u4eba\u8fdb\u884c\u7684nixos configs\u56de\u8d2d\uff09\u66f4\u5feb\u5730\u8bc4\u4f30\u548c\u6784\u5efa\u3002Nixflakes\u786e\u5b9e\u6709\u4e00\u4e2a\u7f13\u5b58\u7684\u8ba1\u7b97\u5668\uff0c\u4f46\u5b83\u4ecd\u7136\u6709\u52a9\u4e8e\u4ece\u4e00\u5f00\u59cb\u5c31\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6216\u8005\u4efb\u4f55\u4f60\u60f3\u8981\u7684\uff01\u4e00\u4e2a\u6709\u7528\u7684\u5e93\u662fflake utils\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7b80\u5316flake\u3002nix\u548c\u6446\u8131\u90a3\u4e9b\u4e11\u964b\u7684forAllSystems\u548cnixpkgsFor flake\u4e2d\u7684\u51fd\u6570\u3002\u7981\u6b62\u9ed8\u8ba4\u4f7f\u7528\u6b64\u5e16\u5b50\u3002\u6709\u5173\u4f7f\u7528\u6b64\u5e93\u7684\u8584\u7247\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u6b64\u8584\u7247\u3002\u4f4f\u5728#xeserv\u7684IRCbot\u7684nix\u3002\n\u901a\u5e38\uff0c\u60a8\u9700\u8981\u5728Nix\u5b88\u62a4\u8fdb\u7a0b\u4e2d\u542f\u7528Nix\u8584\u7247\u6765\u5229\u7528\u5b83\u4eec\u3002\u5f53\u4f60\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u65f6\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u6709\u65f6\u4f60&#39\uff1b\u6211\u4eec\u9700\u8981\u5728\u4e0d\u542f\u7528\u96ea\u82b1\u7684\u60c5\u51b5\u4e0b\u4e3a\u4eba\u4eec\u63d0\u4f9b\u670d\u52a1\u3002\u5f53\u9700\u8981\u5c06Nix flakes\u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u9879\u76ee\u8f6c\u6362\u4e3a\u672a\u542f\u7528flakes\u7684\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u6709\u4e00\u4e2a\u540d\u4e3aflake compat\u7684\u56fe\u4e66\u9986\u53ef\u4ee5\u8ba9\u8fd9\u4e00\u5207\u53d8\u5f97\u7b80\u5355\u3002\n\uff08\u5bfc\u5165\uff08\u8ba9lock=builtins.fromJSON\uff08builtins.readFile./flake.lock\uff09\uff1b\u5728fetchTarball{url=&#34\uff1bhttps://github.com/edolstra/flake-compat/archive/${lock.nodes.flake compat.locked.rev}\u3002\u7126\u6cb9gz&#34\uff1b\uff1bsha256=\u9501\u3002\u8282\u70b9\u3002\u7247\u72b6\u540c\u80de\u3002\u9501\u4e0a\u4e86\u3002narHash\uff1b}\uff09{src=./\uff1b}\uff09\u3002defaultNix\n\uff08\u5bfc\u5165\uff08\u8ba9lock=builtins.fromJSON\uff08builtins.readFile./flake.lock\uff09\uff1b\u5728fetchTarball{url=&#34\uff1bhttps://github.com/edolstra/flake-compat/archive/${lock.nodes.flake compat.locked.rev}\u3002\u7126\u6cb9gz&#34\uff1b\uff1bsha256=\u9501\u3002\u8282\u70b9\u3002\u7247\u72b6\u540c\u80de\u3002\u9501\u4e0a\u4e86\u3002narHash\uff1b}\uff09{src=./\uff1b}\uff09\u3002shellNix\nNix flakes\u672c\u673a\u652f\u6301\u5c06\u79c1\u6709git\u5b58\u50a8\u5e93\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u5728\u5c1d\u8bd5\u6784\u5efa\u4f60\u4e0d\u9700\u8981\u7684\u8f6f\u4ef6\u65f6\u5f88\u6709\u7528\uff1bI don\u2019\u6211\u4e0d\u60f3\u5bf9\u5916\u5f00\u653e\u3002\u8981\u4f7f\u7528\u79c1\u4eba\u56de\u8d2d\uff0c\u60a8\u7684flake\u8f93\u5165URL\u5e94\u8be5\u5982\u4e0b\u6240\u793a\uff1a\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6211&#39\uff1b\u6211\u5f88\u786e\u5b9a\u4f60\u53ef\u4ee5\u5728flakes\u4e4b\u5916\u4f7f\u7528\u79c1\u4ebagit\u56de\u8d2d\u534f\u8bae\uff0c\u4f46\u6211\u4e00\u76f4\u4e0d\u6e05\u695a\u4f60\u6700\u7ec8\u4f1a\u600e\u4e48\u505a\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u6700\u5927\u7684\u95ee\u9898\u662f\u5b83\u53ef\u4ee5\u8ba9\u4f60\u628aNixOS\u6a21\u5757\u5d4c\u5165\u5230\u8584\u7247\u4e2d\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5728\u5b9a\u4e49\u8f6f\u4ef6\u7684\u4f4d\u7f6e\u65c1\u8fb9\u5b9a\u4e49\u8f6f\u4ef6\u7684\u7cfb\u7edf\u914d\u7f6e\uff0c\u4ece\u800c\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u53d1\u8d27\u3002\u4f7f\u7528\u5b83\uff0c\u4f60\u53ef\u4ee5\u628a\u5b89\u88c5\u8f6f\u4ef6\u53d8\u6210\u5c06\u5176\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\u7684\u4e00\u4ef6\u4e8b&#39\uff1bs flake\uff0c\u6dfb\u52a0\u6a21\u5757\uff0c\u7136\u540e\u542f\u7528\u8981\u542f\u7528\u7684\u8bbe\u7f6e\u3002\n\u5c3c\u514b\u677e\u6a21\u5757\u3002bot={config\uff0clib\uff0c\u2026}{options.within.services.mara-bot.enable=lib.mkEnableOption&#34\uff1benable-mara-bot&#34\uff1bconfig=lib.mkIf-config.within.services.mara-bot.enable{users.groups.mara-bot={}\uff1b\u7528\u6237\u3002\u7528\u6237\u3002mara bot={createHome=true\uff1bisSystemUser=true\uff1bhome=&#34\uff1b/var/lib/mara bot&#34\uff1bgroup=&#34\uff1bmara bot&#34\uff1b}\uff1b\u7cfb\u7edf\u5316\u3002\u670d\u52a1\u3002mara bot={wantedBy=[&#34\uff1b\u591a\u7528\u6237\u3002target&#34\uff1b]\uff1b\u73af\u5883RUST_LOG=&#34\uff1b\u5854http=debug\uff0cinfo&#34\uff1b\uff1bunitConfig\u3002ConditionPathExists=&#34/var/lib/mara bot/config\u3002\u4e9a\u9a6c\u5c14&#34\uff1b\uff1bserviceConfig={User=&#34\uff1bmara bot&#34\uff1bGroup=&#34\uff1bmara bot&#34\uff1bRestart=&#34\uff1balways&#34\uff1bWorkingDirectory=&#34\uff1b/var/lib/mara bot&#34\uff1bExecStart=&#34\uff1b${self.defaultPackage.&#/\u5bbe/\u9a6c\u62c9&#34\uff1b}\uff1b}\uff1b}\uff1b}\uff1b}\uff1b\n\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u8d77\u70b9\u3002\u5b83\u6307\u5411\u6e56\u5916&#39\uff1bs\u7684\u9ed8\u8ba4\u5305\uff08\u5e0c\u671b\u5728\u5176\u4e2d\u5b9a\u4e49bot&#39\uff1b\u7684\u4ee3\u7801\uff09\uff0c\u7136\u540e\u7531systemd\u7ba1\u7406\u3002\n\u6211\u8ba1\u5212\u7528\u5b83\u6765\u5f7b\u5e95\u7b80\u5316\u6211\u7684nixos\u914d\u7f6e\u56de\u8d2d\u534f\u8bae\u3002\u73b0\u5728\uff0c\u5b83\u6709\u5f88\u591a\u7279\u5b9a\u4e8e\u9879\u76ee\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6211\u80fd\u5c06\u8fd9\u4e9b\u4ee3\u7801\u8f6c\u79fb\u5230\u76f8\u5173\u7684\u9879\u76ee\u4e2d\uff0c\u6211\u53ef\u4ee5\u4ecemyconfigs repo\u7684\u6838\u5fc3\u4e2d\u5220\u9664\u5f88\u591a\u4ee3\u7801\u3002\n\u6700\u540e\uff0cNix flakes\u901a\u8fc7\u5728\u6784\u5efa\u6b65\u9aa4\u5d4c\u5165\u7cfb\u7edf\uff0c\u8ba9\u60a8\u53ef\u4ee5\u770b\u5230\u7cfb\u7edf\u7684\u914d\u7f6e\u7248\u672c\u3002\u901a\u5e38\uff0cNixOS\u5141\u8bb8\u60a8\u901a\u8fc7NixOS\u7248\u672c\u2014\u2014json\u67e5\u770b\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\u60a8\u6709NixOS\u7248\u672c\u548cnixpkgs\u54c8\u5e0c\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740&#39\uff1b\u4f46\u662f\uff0c\u6211\u4e0d\u80fd\u544a\u8bc9\u4f60\u6b63\u5728\u8fd0\u884c\u4ec0\u4e48\u914d\u7f6e\u6216\u5173\u4e8e\u5b83\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u4f7f\u7528flakesyou\u53ef\u4ee5\u5c06\u914d\u7f6e\u7684git\u54c8\u5e0c\u5d4c\u5165\u5230\u7cfb\u7edf\u914d\u7f6e\u4e2d\uff1a\n\u4ee5\u4e0a\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u5f88\u591a\u5185\u5bb9\u8981\u8ba8\u8bba\u3002\u6211&#39\uff1b\u6211\u53ea\u662f\u5bf9\u5b83\u4eec\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u9ad8\u5c42\u6b21\u7684\u6982\u8ff0\uff0c\u540c\u65f6\u6211\u4e86\u89e3\u4e86\u66f4\u591a\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7myNixOS\u914d\u7f6e\u96f6\u788e\u5730\u8fc1\u79fb\u5230\u4e86\u8584\u7247\u4e0a\u3002\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4e00\u4e2a\u673a\u4f1a\u6765\u6e05\u7406\u4e1c\u897f\uff0c\u4ece\u6211\u7684\u5c3c\u514b\u677e\u914d\u7f6e\u4e2d\u5480\u56bc\u51fa\u5f88\u591a\u8102\u80aa\u3002\u51c6\u5907\u597d\u540e\u4f1a\u6709\u66f4\u591a\u3002\n\u672c\u6587\u53d1\u5e03\u5728M02 21 2022\u4e0a\u3002\u81ea\u516c\u5e03\u4ee5\u6765\uff0c\u4e8b\u5b9e\u548c\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u4e86\u53d8\u5316\u3002\u5982\u679c\u6709\u95ee\u9898\u6216\u4e0d\u6e05\u695a\u7684\u5730\u65b9\uff0c\u8bf7\u5728\u4e0b\u7ed3\u8bba\u4e4b\u524d\u8054\u7cfb\u6211\u3002", "note_en": "Nix is a package manager that lets you have a more deterministic view of yoursoftware dependencies and build processes. One if its biggest weaknesses out ofthe box is that there are very few conventions on how projects using Nix shouldwork together. It&#39;s like having a build system but also having to configuresystems to run software yourself. This could mean copying a NixOS module out ofthe project&#39;s git repo, writing your own or more. In contrast to this,  Nixflakes define a set of conventions for howsoftware can be build, run, integrated and deployed without having to rely onexternal tools such as  Niv or Lorri to help you do basic tasks in atimely manner.\n This is going to be a series of posts that will build on eachother. This postwill be an introduction to Nix flakes and serve as a &#34;why should I care?&#34; styleoverview of what you can do with flakes without going into too much detail. Mostof these will get separate posts (some more than one post).\n In my opinion, here are some of the big reasons you should care about Nixflakes:\n   One of the big annoying parts about getting into Nix is that setting up projectsisn&#39;t totally a defined science. Nix configurations just tend to groworganically and can easily become weird or difficult to understand for peoplethat didn&#39;t start the project. Nix flakes helps fix this by doing a few things:\n Defining a  flake.nix as the central &#34;hub&#34; for your project&#39;s dependencies,exposed packages, NixOS configuration modules  andmore.\n Shipping a  set of templates so that youcan get projects started easily. Think something like Yeoman but built directly into Nix. You can also defineyour own templates in your  flake.nix.\n As an example that we will use for the rest of this post to help explain it,let&#39;s make a Go project with their Go template. First you will need to enableNix flakes on your machine. If you are using NixOS, add this to your configuration.nix file:\n   If you are not on NixOS, you will need to either edit  ~/.config/nix/nix.confor  /etc/nix/nix.conf and add the following line to it:\n  &lt; Mara&gt; You may need to restart the Nix daemon here, but if you are unsure how Nix wasset up on that non-NixOS machine feel free to totally restart yourcomputer.\n Now go to a temporary folder and run these commands to make a folder and createa new flake from a template:\n     {  description = &#34;A simple Go package&#34;;   # Nixpkgs / NixOS version to use.  inputs.nixpkgs.url = &#34;nixpkgs/nixos-21.11&#34;;   outputs = { self, nixpkgs }:  let   # Generate a user-friendly version number.  version = builtins.substring 0 8 self.lastModifiedDate;   # System types to support.  supportedSystems = [ &#34;x86_64-linux&#34; &#34;x86_64-darwin&#34; &#34;aarch64-linux&#34; &#34;aarch64-darwin&#34; ];   # Helper function to generate an attrset &#39;{ x86_64-linux = f &#34;x86_64-linux&#34;; ... }&#39;.  forAllSystems = nixpkgs.lib.genAttrs supportedSystems;   # Nixpkgs instantiated for supported system types.  nixpkgsFor = forAllSystems (system: import nixpkgs { inherit system; });   in  {   # Provide some binary packages for selected system types.  packages = forAllSystems (system:  let  pkgs = nixpkgsFor.${system};  in  {  go-hello = pkgs.buildGoModule {  pname = &#34;go-hello&#34;;  inherit version;  # In &#39;nix develop&#39;, we don&#39;t need a copy of the source tree  # in the Nix store.  src = ./.;   # This hash locks the dependencies of this package. It is  # necessary because of how Go requires network access to resolve  # VCS. See https://www.tweag.io/blog/2021-03-04-gomod2nix/ for  # details. Normally one can build with a fake sha256 and rely on native Go  # mechanisms to tell you what the hash should be or determine what  # it should be &#34;out-of-band&#34; with other tooling (eg. gomod2nix).  # To begin with it is recommended to set this, but one must  # remeber to bump this hash when your dependencies change.  #vendorSha256 = pkgs.lib.fakeSha256;   vendorSha256 = &#34;sha256-pQpattmS9VmO3ZIQUFn66az8GSmB4IvYhTTCFn6SUmo=&#34;;  };  });   # The default package for &#39;nix build&#39;. This makes sense if the  # flake provides only one package or there is a clear &#34;main&#34;  # package.  defaultPackage = forAllSystems (system: self.packages.${system}.go-hello);  }; }\n This defines a single Go package that is supported on macOS and Linux for 64 bitx86 processors and 64 bit ARM processors.\n &lt; Mara&gt; In practice this spread should cover all of the main targets you&#39;ll need tocare about for local development and clouddeployment.\n       {  description = &#34;A simple Go package&#34;;    inputs.nixpkgs.url = &#34;nixpkgs/nixos-21.11&#34;;    outputs = { self, nixpkgs }: {  packages = { ... };  defaultPackage = { ... };  }; }\n &lt; Cadey&gt; A note: in the rest of this article (and series of articles), when I refer to a&#34;flake output&#34;, I am referring to an attribute in the  outputs attribute ofyour  flake.nix. Ditto with &#34;flake input&#34; referring to the  inputs attributeof your  flake.nix.\n When you ran  nix build earlier, it defaulted to building the package in defaultPackage. You can also build the  go-hello package by running thiscommand:\n    A standard default package means that you can more easily build software withouthaving to read documentation on what file to build.  nix build will Just Work\u2122\ufe0f.\n  Additionally, you can expose a package as an application. This allows you tosimplify that above  nix build and  ./result/bin/go-hello cycle into a single nix run command. Open  flake.nix in your favorite editor and let&#39;s configure go-hello to be the default app:\n      &lt; Mara&gt; What is that extra part of the URL path for? Is that a gitbranch?\n &lt; Cadey&gt; Yes, you can use that syntax to set the git branch that Nix should build from.By default it will use the default branch (typically  main), but sometimes youneed to specify a branch or commit directly.\n  One of Nix&#39;s superpowers is the ability to declaratively manage the developmentenvironment for a project so that you can be sure that everyone working on theproject is using the same tools.\n &lt; Cadey&gt; I use this with all of my projects to the point that when I am outside of aproject folder I do not have any development toolsavailable.\n Flakes has the ability to specify this using the  devShell flake output. Youcan add it to your  flake.nix using this:\n # after defaultApp  devShell = forAllSystems (system:  let pkgs = nixpkgsFor.${system};  in pkgs.mkShell {  buildInputs = with pkgs; [ go gopls goimports go-tools ];  });\n &lt; Mara&gt; I consider this to be a basic Go development environment. It includes standardtools such as the language server,  goimports for better formatting and toolslike  staticcheck. If you use staticcheckregularly at work, please consider throwing  Dominik a couple bucksa month if you find it useful. It helps the project be moreself-sustaining.\n   And then hack at your project all you want. You can send this git repo to afriend and they will have the same setup.\n  Now let&#39;s talk about inputs. Flake inputs let you add external dependencies to aproject. As an example, let&#39;s look at the  nixpkgs input:\n  This defines the release of nixpkgs that should be used for the project. Thistemplate defaults to NixOS 21.11&#39;s version of nixpkgs, however we can upgrade itto nixos-unstable by changing it to this:\n  Then we can run  nix flake update and then  nix develop and see that we arerunning a newer version of Go:\n $ nix flake update warning: updating lock file &#39;/home/cadey/tmp/gohello/flake.lock&#39;: \u2022 Updated input &#39;nixpkgs&#39;:  &#39;github:NixOS/nixpkgs/77aa71f66fd05d9e7b7d1c084865d703a8008ab7&#39; (2022-01-19)  \u2192 &#39;github:NixOS/nixpkgs/2128d0aa28edef51fd8fef38b132ffc0155595df&#39; (2022-02-16)   $ nix develop  [ [email\u00a0protected]:~/tmp/gohello]$ go version go version go1.17.7 linux/amd64\n This also lets you pull in other Nix flakes projects, such as my CSS framework Xess:\n   &lt; Cadey&gt; By default when you pull in another project with Nix flakes, it treats thatproject as an entirely separate universe and only interacts with the outputs ofthat flake. This means it pulls in its own version of nixpkgs, each dependencyit has can pull in that own version of nixpkgs and vice versa ad infinitum. Bymaking Xess&#39; nixpkgs input follows our own one, we are saying &#34;I understand thismay be incompatible, but please use this version of nixpkgs instead&#34;. This canhelp larger projects with many inputs (such as a nixos configs repo made bysomeone with too many throwaway side projects) evaluate and build faster. Nixflakes does have a cached evaluator, but still it helps to avoid the problem inthe first place.\n Or anything you want! A useful library to pull in is flake-utils, that can help yousimplify your  flake.nix and get rid of those ugly  forAllSystems and nixpkgsFor functions in the  flake.nix that this post used by default. For anexample of a flake that uses this library, see  this flake.nix from the IRCbot that lives in   #xeserv.\n   Normally you need to enable Nix flakes in your Nix daemon to take advantage ofthem. This is great for when you can do that, but sometimes you&#39;ll need to makethings work for people without flakes enabled. This could happen when needing tograft in a Nix flakes project to one without flakes enabled. There is a librarycalled  flake-compat that makes thiseasy.\n    (import (  let  lock = builtins.fromJSON (builtins.readFile ./flake.lock);  in fetchTarball {  url = &#34;https://github.com/edolstra/flake-compat/archive/${lock.nodes.flake-compat.locked.rev}.tar.gz&#34;;  sha256 = lock.nodes.flake-compat.locked.narHash; } ) {  src = ./.; }).defaultNix\n  (import (  let  lock = builtins.fromJSON (builtins.readFile ./flake.lock);  in fetchTarball {  url = &#34;https://github.com/edolstra/flake-compat/archive/${lock.nodes.flake-compat.locked.rev}.tar.gz&#34;;  sha256 = lock.nodes.flake-compat.locked.narHash; } ) {  src = ./.; }).shellNix\n   Nix flakes has native support for private git repositories as inputs. This canbe useful when trying to build software you don&#39;t want to release as open to theworld. To use a private repo, your flake input URL should look something likethis:\n  &lt; Cadey&gt; I&#39;m pretty sure you could use private git repos outside of flakes, however itwas never really clear to me  how you end up doingit.\n  The biggest ticket item for me is that it lets you embed NixOS modules in flakesthemselves. This lets you define the system configuration for software rightnext to where the software is defined, thus shipping it as a unit. Using thisyou can make installing software a matter of adding it to your system&#39;s flake,adding the module and then enabling the settings you want to enable.\n  nixosModules.bot = { config, lib, ... }: {  options.within.services.mara-bot.enable =  lib.mkEnableOption &#34;enable Mara bot&#34;;   config = lib.mkIf config.within.services.mara-bot.enable {  users.groups.mara-bot = { };   users.users.mara-bot = {  createHome = true;  isSystemUser = true;  home = &#34;/var/lib/mara-bot&#34;;  group = &#34;mara-bot&#34;;  };   systemd.services.mara-bot = {  wantedBy = [ &#34;multi-user.target&#34; ];  environment.RUST_LOG = &#34;tower_http=debug,info&#34;;  unitConfig.ConditionPathExists = &#34;/var/lib/mara-bot/config.yaml&#34;;  serviceConfig = {  User = &#34;mara-bot&#34;;  Group = &#34;mara-bot&#34;;  Restart = &#34;always&#34;;  WorkingDirectory = &#34;/var/lib/mara-bot&#34;;  ExecStart = &#34;${self.defaultPackage.&#34;${system}&#34;}/bin/mara&#34;;  };  };  }; };\n The key important part here is the  ExecStart line. It points back to theflake&#39;s default package (which is hopefully where the bot&#39;s code is defined),and then has systemd manage that.\n I plan to use this to radically simplify my nixos-configs repo. Right now it hasa lot of code that is very project-specific and if I can move that into theprojects in question, I can eliminate a lot of code out of the core of myconfigs repo.\n  Finally, Nix flakes lets you see the configuration version of a system byembedding it at the build step. Normally NixOS lets you see the followinginformation with  nixos-version --json:\n  You have the NixOS version and the nixpkgs hash. That doesn&#39;t tell you whatconfiguration you are running or anything about it though. However with flakesyou can embed the git hash of your configuration into the system config:\n       There is a lot more to get into with each of these topics. I&#39;m only reallygiving a very high level overview on them while I learn more and migrate over myNixOS configurations to flakes piecemeal. This has also given me theopportunity to clean things up and chew out a lot of the fat from my NixOSconfigurations. More to come when it is ready.\n   This article was posted on M02 21 2022. Facts and circumstances may have changed since publication. Please  contact me before jumping to conclusions if something seems wrong or unclear.", "posttime": "2022-02-22 02:35:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c3c\u514b\u65af,flakes,nix", "title": "\u5c3c\u514b\u65af\u00b7\u5f17\u83b1\u514b\u65af\uff1a\u5bfc\u8a00", "title_en": "Nix Flakes: An Introduction", "transed": 1, "url": "https://christine.website/blog/nix-flakes-1-2022-02-21", "via": "", "real_tags": ["\u5c3c\u514b\u65af", "flakes", "nix"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7b2c\u4e00\u6b21\u82b1\u4e86\u51e0\u5929\u65f6\u95f4\u73a9Bootloader\u3002\u8fd9\u7bc7\u6587\u7ae0\u6784\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709\u51e0\u4e2a\u952e\u76d8\u5feb\u6377\u952e\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002\u6211&#39\uff1b\u6211\u5c06\u4e8e1\u670827\u65e5\u5728HackerNights\u8fdb\u884c\u4e00\u6b21\u57fa\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u865a\u62df\u6f14\u8bb2\u3002\n\u80af\u5b9a\u6709\u5f88\u591a\u6f0f\u6d1e\u3002\u4f46\u5b83&#39\uff1bIt\u2019\u5f88\u96be\u627e\u5230\u5f15\u5bfc\u7a0b\u5e8f\u7f16\u7a0b\u7684\u4e2d\u95f4\u8d44\u6e90\uff0c\u6240\u4ee5\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u53ef\u80fd\u4f1a\u6709\u7528\u3002\n\u5982\u679c\u4f60\u5df2\u7ecf\u4e86\u89e3\u4e86\u57fa\u7840\u77e5\u8bc6\u548c\u4e2d\u7ea7\u8bfe\u7a0b\uff0c\u5e76\u4e14\u53ea\u60f3\u8981\u4e00\u4e2a\u4e2d\u7ea7+\u6559\u7a0b\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u4e2a\u3002\u975e\u5e38\u597d\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u4e0a\u7684\u4ee3\u7801\u53ef\u4ee5\u5728Github\u4e0a\u627e\u5230\uff0c\u4f46\u662f\u5b83&#39\uff1b\u8fd9\u6bd4\u6211\u5e73\u5e38\u7684\u8ba1\u5212\u66f4\u50cf\u827e\u59c6\u65af\u3002\n\u5b89\u88c5qemu\uff08\u5728macOS\u6216Linux\u4e0a\uff09\u3001nasm\u5e76\u590d\u5236snake\u3002\u4ece\u90a3\u7bc7\u535a\u6587\u4e2d\u4e0b\u8f7d\u6e90\u4ee3\u7801\u5230\u78c1\u76d8\u3002\n$cat snake\u3002asm[\u4f4d16]\uff1bPragma\uff0c\u544a\u8bc9\u6c47\u7f16\u7a0b\u5e8f\u6211\u4eec\uff1b\u5904\u4e8e16\u4f4d\u6a21\u5f0f\uff08\u8fd9\u662f\u4ece\u8f6f\u76d8\u5f15\u5bfc\u65f6\u7684x86\u72b6\u6001\uff09\u3002[org 0x7C00]\uff1b\u5e03\u62c9\u683c\u9a6c\uff0c\u544a\u8bc9\u88c5\u914d\u5de5\uff1b\u4ee3\u7801\u5c06\u88ab\u52a0\u8f7d\u3002mov bl\uff0c1\uff1b\u8815\u866b\u7684\u8d77\u59cb\u65b9\u5411\u3002\u63090xa000\uff1b\u5c06VRAM\u7684\u5730\u5740\u52a0\u8f7d\u5230es\u4e2d\u3002\u6d41\u884c\u97f3\u4e50\u6e38\u620f\uff1amov si\uff0c320*100+160\uff1b\u8815\u866b&#39\uff1bs\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e2d\u5fc3\u4f4d\u7f6e\uff1b\u5c4f\u5e55\u8bbe\u7f6e\u89c6\u9891\u6a21\u5f0f\u3002\u6a21\u5f0f13h\u662fVGA\uff08\u6bcf\u50cf\u7d201\u5b57\u8282\uff0c\u5b9e\u9645\u989c\u8272\u5b58\u50a8\u5728\u8c03\u8272\u677f\u4e2d\uff09\uff0c\u603b\u5927\u5c0f\u4e3a320x200\u3002\u91cd\u65b0\u542f\u52a8\u65f6\uff1b\u8fd9\u4e5f\u4f1a\u6e05\u9664\u5c4f\u5e55\u3002mov ax\uff0c0x0013 int 0x10\uff1b\u753b\u8fb9\u754c\u3002\u6211\u4eec\u5047\u8bbe\u9ed8\u8ba4\u8c03\u8272\u677f\u5bf9\u6211\u4eec\u6709\u7528\uff1b\u6211\u4eec\u8fd8\u5047\u8bbe\u4ece\u5e95\u90e8\u5f00\u59cb\u7ed8\u52362176\u4e2a\u50cf\u7d20\uff1b\u73af\u7ed5\u5e76\u6700\u7ec8\u7ed8\u5236\u4e0a\u4e0b\u8fb9\u6846\u3002mov di\uff0c320*199 mov cx\uff0c2176 repdraw_\u5faa\u73af\uff1astosb\uff1b\u7ed9\u67d0\u4eba\u753b\u53f3\u8fb9\u6846\uff1b\u7ed8\u5236\u5de6\u8fb9\u6846\u6dfb\u52a0di\uff0c318 jnc\u7ed8\u5236_\u5faa\u73af\uff1b\u6ce8\u610f\u5728\u4e2d\u95f4\u7684\u8df3\u8dc3\uff1b\u7ed9\u67d0\u4eba\u6307\u793a\u3002\u6e38\u620f_\u5faa\u73af\uff1a\uff1b\u6211\u4eec\u4ece\u7aef\u53e30x60\u8bfb\u53d6\u952e\u76d8\u8f93\u5165\u3002\u8fd9\u4e5f\u4f1a\u4ece\u4e2d\u8bfb\u53d6\u5b57\u8282\uff1b\u9f20\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728al\u4e2d\u5904\u7406[up\uff080x48\uff09\u3001left\uff080x4b\uff09\u3001right\uff080x4d\uff09\u3001down\uff080x50\uff09]\u30010x60 cmp al\u30010x48 jb kb_handle_end cmp al\u30010x50 ja kb_handle_end\uff1b\u5728\u672b\u7aef\uff0cbx\u5305\u542b\u504f\u79fb\u4f4d\u79fb\uff08+1\uff0c-1\uff0c+320\uff0c-320\uff09\uff1b\u57fa\u4e8e\u6309\u4e0b/\u91ca\u653e\u7684\u952e\u76d8\u952e\u3002\u6211\u6253\u8d4c\u6709\u51e0\u4e2a\u5b57\u8282\uff1b\u6839\u636e\u4e0a\u9762\u7684\u8fb9\u754c\u68c0\u67e5\uff0c\u5728\u8fd9\u91cc\u522e\u80e1\u5b50\u3002aaa cbw dec ax dec ax jc kb_handle sub al\uff0c2 imul ax\uff0cax\uff0cbyte-0x50kb_handle:mov bx\uff0caxkb_handle_end:add si\uff0cbx\uff1b\u539f\u59cb\u4ee3\u7801\u4f7f\u7528set PALLTE\u547d\u4ee4\uff0810h/0bh\uff09\u7b49\u5f85\uff1b\u5782\u76f4\u56de\u7a0b\u3002\u4eca\u5929&#39\uff1b\u7136\u800c\uff0c\u7f8e\u56fd\u7684\u8ba1\u7b97\u673a\u901f\u5ea6\u592a\u5feb\uff0c\u6240\u4ee5\uff1b\u6211\u4eec\u7528int 15h 86h\u4ee3\u66ff\u3002\u8fd9\u4e5f\u4f1a\u51cf\u5c11\u51e0\u4e2a\u5b57\u8282\uff1b\u6ce8\uff1a\u4f60&#39\uff1b\u5982\u679c\u4f60\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\uff0c\u4f60\u5fc5\u987b\u8c03\u6574cx+dx\uff1b\u673a\u5668vs\u771f\u6b63\u7684\u786c\u4ef6\u3002\u968f\u610f\u7684\u6d4b\u8bd5\u4f3c\u4e4e\u8868\u660e\u865a\u62df\u673a\uff1b\u7b49\u5f85\u65f6\u95f4\u6bd4\u7269\u7406\u786c\u4ef6\u957f\u7ea63-4\u500d\u3002mov ah\uff0c0x86 mov dh\uff0c0xef int 0x15\uff1b\u7ed8\u5236\u8717\u6746\u5e76\u68c0\u67e5\u662f\u5426\u4e0e\u5947\u5076\u6821\u9a8c\u76f8\u51b2\u7a81\uff1b\uff08\u5076\u6570\u5947\u5076=\u78b0\u649e\uff09\u3002mov-ah\uff0c0x45-xor[es:si]\uff0cah\uff1b\u56de\u5230\u6e38\u620f\u4e3b\u5faa\u73af\u3002jpo game_loop\uff1b\u6211\u4eec\u649e\u5230\u4e86\u5899\u6216\u866b\u5b50\u3002\u91cd\u65b0\u5f00\u59cb\u6e38\u620f\u3002jmp\u91cd\u542f\u6e38\u620f\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u75280dw 0xaa55\u586b\u5145\u6247\u533a\u7684\u5176\u4f59\u90e8\u5206\uff1b\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u672b\u5c3e\u7684\u5f15\u5bfc\u7b7e\u540d\n\u6211&#39\uff1b\u6211\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8fbe\u5230\u90a3\u79cd\u590d\u6742\u7a0b\u5ea6\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83&#39\uff1b\u8fd9\u662f\u5de8\u5927\u7684\u52a8\u529b\u3002\n\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u662f\u6c47\u7f16\u7f16\u7a0b\u548cBIOS API\u7684\u6df7\u5408\u4f53\uff0c\u7528\u4e8eI/O\uff1b\u6211\u4eec\u6b63\u5728\u8003\u8651\u4f60\u5df2\u7ecf\u77e5\u9053\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u3002\u73b0\u5728\u4f60\u8981\u505a\u7684\u5c31\u662f\u5b66\u4e60API\u3002\nhello world\u5f15\u5bfc\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u8be6\u7ec6\u89e3\u91ca\u8fc7\uff08\u53c2\u89c1\u8fd9\u91cc\u3001\u8fd9\u91cc\u548c\u8fd9\u91cc\uff09soI won&#39\uff1b\u4e0d\u8981\u9010\u884c\u6df1\u5165\u592a\u591a\u3002\n\u4f60\u597d\u300216\u4f4d\uff1b\u544a\u8bc9NASM\u8fd9\u662f16\u4f4d\u4ee3\u7801\u7ec4\u7ec70x7c00\uff1b\u544a\u8bc9NASM\u5f00\u59cb\u8f93\u51fa\u504f\u79fb\u91cf0x7c00boot\u5904\u7684\u5185\u5bb9\uff1amov si\uff0c\u60a8\u597d\uff1b\u5c06si\u5bc4\u5b58\u5668\u6307\u5411hello\u6807\u7b7e\u5185\u5b58\u4f4d\u7f6emov ah\uff0c0x0e\uff1b0x0e\u8868\u793a&#39\uff1b\u4ee5TTY\u6a21\u5f0f\u5199\u5165\u5b57\u7b26&#39\uff1b\u3002\u56de\u8def\uff1alodsb\u6216al\uff0cal\uff1bal=0\u5417\uff1fjz\u6682\u505c\uff1b\u5982\u679c\uff08al==0\uff09\u8df3\u8f6c\u5230\u505c\u6b62\u6807\u7b7eint 0x10\uff1b\u8fd0\u884cBIOS\u4e2d\u65ad0x10-\u89c6\u9891\u670d\u52a1jmp\u3002loophalt:cli\uff1b\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7hlt\uff1b\u505c\u6b62\u6267\u884c\u4f60\u597d\uff1adb&#34\uff1b\u4f60\u597d\uff0c\u4e16\u754c&#34;,0\u6b21510-\uff08$-$$\uff09\u5206\u8d1d0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u4f46\u9664\u4e86\u6587\u4e66\u8bbe\u7f6e\uff0816\u4f4d\u6c47\u7f16\uff0c\u7a0b\u5e8f\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u586b\u5145\u5230512\u5b57\u8282\uff09\u4e4b\u5916\uff0c\u552f\u4e00\u771f\u6b63\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8fymagic\u662fint 0x10\uff0c\u4e00\u4e2aBIOS\u4e2d\u65ad\u3002\nBIOS\u4e2d\u65ad\u662fAPI\u8c03\u7528\u3002\u5c31\u50cfuserland\u7a0b\u5e8f\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\u4e00\u6837\uff0c\u5b83\u4eec\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u7ea6\u5b9a\u548c\u7f16\u53f7\u6765\u8c03\u7528API\u5bb6\u65cf\u3002\n\u5f53\u4f60\u7f16\u5199\u5f15\u5bfc\u7a0b\u5e8f\u65f6\uff0c\u4f60&#39\uff1b\u9996\u5148\uff0c\u6211\u4f1a\u82b1\u5927\u90e8\u5206\u65f6\u95f4\u6765\u7406\u89e3\u5404\u79cdBIOS API\u7684\u884c\u4e3a\u3002\n\u6211\u4eec&#39\uff1b\u672c\u6587\u5c06\u8ba8\u8bba\u952e\u76d8\u7cfb\u5217\uff08\u6b64\u5904\u4e3a\u6587\u6863\uff09\u548c\u663e\u793a\u5668\u7cfb\u5217\uff08\u6b64\u5904\u4e3a\u6587\u6863\uff09\u3002\n\u6211\u4eec\u5728\u4e0a\u9762\u8c03\u7528\u7684\u5c06\u5b57\u7b26\u5199\u5165\u663e\u793a\u7684\u7279\u5b9a\u51fd\u6570\u662fINT10\uff0c\u4f8b\u59820x10\u662f\u8c03\u7528int\u5173\u952e\u5b57\u7684\u53c2\u6570\uff08\u4f8b\u5982int 0x10\uff09\u3002E\u662f0x10\u7cfb\u5217\u4e2d\u7684\u7279\u5b9a\u529f\u80fd\u3002\u5728\u8c03\u7528int\u4e4b\u524d\uff0cE\u88ab\u5199\u5165AH\u5bc4\u5b58\u5668\u3002\u8981\u5199\u5165\u7684ASCII\u7801\u88ab\u653e\u5165AL\u5bc4\u5b58\u5668\u3002\n\u65e2\u7136\u8f93\u51fa\u6709\u4e86\u4e00\u4e9b\u610f\u4e49\uff0c\u90a3\u5c31\u8ba9&#39\uff1b\u6211\u4eec\u505a\u8f93\u5165\u3002\u5728\u952e\u76d8\u670d\u52a1\u6587\u6863\u4e2d\uff0c\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230INT 16,0\u63d0\u4f9b\u4e86\u4e00\u79cd\u963b\u6b62\u7528\u6237\u8f93\u5165\u7684\u65b9\u6cd5\u3002\u6839\u636e\u8be5\u9875\u9762\uff0c\u5f53\u4e2d\u65ad\u8fd4\u56de\u65f6\uff0cASCI\u5b57\u7b26\u5c06\u5728AL\u4e2d\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u663e\u793a\u4e00\u4e9b\u6587\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528INT0x10,0\u6e05\u9664\u5c4f\u5e55\u3002\n\u7531\u4e8edisplay\u51fd\u6570\u4eceinputfunction\u8f93\u51fa\u5230\u7684\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u4e2d\u65ad\u4e4b\u540e\u8c03\u7528\u5b83\u4eec\u3002\u628a\u8fd9\u4e2a\u5faa\u73af\u8d77\u6765\uff0c\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u8fd9\u4e2a\u4e16\u754c#39\uff1b\u4ed6\u662f\u6700\u5dee\u7684\u7f16\u8f91\u3002\n$cat ioloop\u3002asmbits 16org 0x7c00main:\uff1b\uff1b\u6e05\u9664\u5c4f\u5e55mov ah\uff0c0x00 mov al\uff0c0x03 int 0x10\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u91cc\u7684\u4e3b\u6807\u7b7e\uff08\u5982hello.asm\u4e2d\u7684\u5f15\u5bfc\u6807\u7b7e\uff09\u53ea\u662f\u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u3002\u8fd9\u4e0d\u662fBIOS\u4f7f\u7528\u7684\u4e1c\u897f\u3002\nbits 16org 0x7c00jmp\u4e3b\u6e05\u9664\u5c4f\u5e55\uff1a\uff1b\uff1b\u6e05\u9664\u5c4f\u5e55mov ah\u30010x00 mov al\u30010x03 int 0x10 retmain\uff1a\u8c03\u7528\u6e05\u9664\u5c4f\u5e55\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u4f4d16org 0x7c00jmp main%\u5b8fcls 0\uff1b\u96f6\u662f\u53c2\u6570mov-ah\u30010x00-mov-al\u30010x03-int\u30010x10%endmacromain:cls\u7684\u6570\u91cf\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\nnasm\u5b8f\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5728\u5b83\u4eec\u524d\u9762\u52a0%%\u6765\u7f16\u5199\u5b8f\u5b89\u5168\u6807\u7b7e\uff0c\u5982\u679c\u5b8f\u4e2d\u6709\u6761\u4ef6\u6216\u5faa\u73af\uff0c\u8fd9\u5f88\u6709\u7528\u3002\n\u6211\u731c\u5b8f\u7684\u597d\u5904\u662f\u4f60&#39\uff1bWe\u2019\u6211\u4eec\u6ca1\u6709\u7528\u5b8c\u978b\u9489\u3002\u51fd\u6570\u8c03\u7528\u7684\u597d\u5904\u662f&#39\uff1b\u4e0d\u8981\u5728\u4f7f\u7528\u5b8f\u7684\u6bcf\u4e2a\u5730\u65b9\u91cd\u590d\u4ee3\u7801\u3002\u751f\u6210\u7684\u4ee3\u7801\u91cf\u6700\u7ec8\u5728\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u4e2d\u53d8\u5f97\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u4ee3\u7801\u5fc5\u987b\u9002\u5408512\u5b57\u8282\u3002\n\u8bfb\u53d6ASCII\u5b57\u7b26\u5e76\u4e0d\u50cf\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u90a3\u6837\u590d\u6742\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u6784\u5efa\u50cfctrl-a\u8fd9\u6837\u7684\u8bfb\u7ebf\u5f0f\u5feb\u6377\u952e\uff0c\u4ee5\u4fbf\u8df3\u5230\u884c\u7684\u5f00\u5934\uff0c\u90a3\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\n\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0a\u9762\u90a3\u6837\u4f7f\u7528INT 16,0\u3002\u4f46\u662f\uff0c\u5185\u5b58\u4e2d\u6709\u4e00\u90e8\u5206\u5305\u542b\u6309\u4e0b\u7684\u5b57\u7b26\u548c\u6309\u4e0b\u7684\u63a7\u5236\u5b57\u7b26\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u53d6\u8be5\u51fd\u6570\u8c03\u7528\u7684\u7ed3\u679c\u3002\n\u6839\u636e\u8be5\u5b58\u50a8\u533a\u57df\uff08\u6b64\u5904\u6216\u6b64\u5904\uff09\u7684\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5b8f\u6765\u8bfb\u53d6\u6309\u4e0b\u7684\u5b57\u7b26\uff1a\n%\u5b8fmov_\u5c06\u5b57\u7b26_\u8bfb\u51651 mov eax\uff0c[0x041a]\u6dfb\u52a0eax\uff0c0x03fe\uff1b\u4ece0x0400\u5230sizeof\uff08uint16\uff09\u7684\u504f\u79fb\u91cf\uff08\u56e0\u4e3a\u78c1\u5934\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u63d2\u69fd\uff0c\u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a/\u5f53\u524d\u63d2\u69fd\uff09\u548ceax\u30010xFFFF mov%1\u3001[eax]\u548c%1\u30010xFF%endmacro\n%\u5b8fmov_\u5c06\\u ctrl_flag_\u8bfb\u51651 mov%1\u3001[0x0417]\u548c%1\u30010x04\uff1b\u83b7\u53d6\u7b2c\u4e09\u4f4d\uff1a%1&amp\uff1b0b0100%endmacro\n\u6700\u540e\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e9b\u6e38\u6807API\uff0c\u8fd9\u4e9bAPI\u5141\u8bb8\u6211\u4eec\u5904\u7406\u65b0\u7684\u884c\u3001\u884c\u7684\u7b2c\u4e00\u5217\u4e0a\u7684\u9000\u683c\u548cctrl-a\uff08\u8df3\u8f6c\u5230\u884c\u7684\u5f00\u59cb\uff09\u3002\n%\u5b8f\u83b7\u53d6\u4f4d\u7f6e0 mov ah\uff0c0x03 int 0x10%endmacro%\u5b8f\u8bbe\u7f6e\u4f4d\u7f6e0 mov ah\uff0c0x02 int 0x10%endmacro\n\u4f46\u662f\u6709&#39\uff1b\u6211\u7684goto_end of_line\u51fd\u6570\u6709\u70b9\u95ee\u9898\u3002\u6709\u65f6\u5b83\u53ef\u4ee5\u5de5\u4f5c\uff0c\u6709\u65f6\u5b83\u53ea\u662f\u5728\u5c4f\u5e55\u4e0a\u65e0\u9650\u5faa\u73af\u5730\u8df3\u8f6c\u3002\u90e8\u5206\u95ee\u9898\u5728\u4e8e\u7f16\u8f91\u8bb0\u5fc6\u5c31\u662f\u89c6\u9891\u5361\u3002\u5149\u6807\u4f4d\u7f6e\u53ea\u5b58\u50a8\u5728\u90a3\u91cc\uff0c\u800c\u4e0d\u662f\u50cf\u5728\u9ad8\u7ea7\u73af\u5883/\u8bed\u8a00\u4e2d\u90a3\u6837\u4ee5\u67d0\u79cd\u7a0b\u5e8f\u72b6\u6001\u5b58\u50a8\u3002\n\u8f6c\u5230\u7b2c\u4e8c\u884c\uff1a\uff1b\uff1b\u83b7\u53d6\u5f53\u524d\u5b57\u7b26mov-ah\uff0c0x08 int 0x10\uff1b\uff1b\u8fed\u4ee3\uff0c\u76f4\u5230\u5b57\u7b26\u4e3anull cmp al\uff0c0 jz\u3002done inc dl set_position jmp goto_end_\u7ebf\u3002\u5b8c\u6210\uff1aret\n%\u5b8f\u8bfb\u53d6_\u5b57\u7b260\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16%endmacro%macro print_\u5b57\u7b261 mov ax\uff0c%1 mov ah\uff0c0x0e int 0x10%endmacro\n%\u5b8f\u83b7\u53d6\u4f4d\u7f6e0 mov ah\uff0c0x03 int 0x10%endmacro%\u5b8f\u8bbe\u7f6e\u4f4d\u7f6e0 mov ah\uff0c0x02 int 0x10%endmacrogoto_end_\u7ebf\uff1a\uff1b\uff1b\u83b7\u53d6\u5f53\u524d\u5b57\u7b26mov-ah\uff0c0x08 int 0x10\uff1b\uff1b\u8fed\u4ee3\uff0c\u76f4\u5230\u5b57\u7b26\u4e3anull cmp al\uff0c0 jz\u3002done inc dl set_position jmp goto_end_\u7ebf\u3002\u5b8c\u6210\uff1aret\n%\u5b8fmov_\u5c06\\u ctrl_flag_\u8bfb\u51651 mov%1\u3001[0x0417]\u548c%1\u30010x04\uff1b\u83b7\u53d6\u7b2c\u4e09\u4f4d\uff1a%1&amp\uff1b0b0100%endmacro%macro mov_read_character_\u4e3a1 mov eax\uff0c[0x041a]add eax\uff0c0x03fe\uff1b\u4ece0x0400\u5230sizeof\uff08uint16\uff09\u7684\u504f\u79fb\u91cf\uff08\u56e0\u4e3a\u78c1\u5934\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u63d2\u69fd\uff0c\u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a/\u5f53\u524d\u63d2\u69fd\uff09\u548ceax\u30010xFFFF mov%1\u3001[eax]\u548c%1\u30010xFF%endmacro\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u542f\u52a8\u7f16\u8f91\u5668\u5faa\u73af\uff0c\u5728\u90a3\u91cc\u7b49\u5f85\u6309\u952e\u5e76\u5904\u7406\u5b83\u3002\n\u5510&#39\uff1b\u5982\u679c\u6309\u4e0b\u7684\u952e\u662f\u7bad\u5934\u952e\uff0c\u5219\u4e0d\u80fd\u6253\u5370ASCII\u5783\u573e\u3002\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\uff08\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7f16\u8f91\u884c\u4e3a\uff0c\u4f46\u6211\u4eec\u7684\u7f16\u8f91\u884c\u4e3a\u5f88\u597d\u3002\uff09\n;; \u5ffd\u7565\u7bad\u5934\u952ecmp ah\uff0c0x4b\uff1b\u5de6jz\u3002\u5b8c\u6210cmp ah\uff0c0x50\uff1b\u4e0bjz\u3002\u5b8c\u6210cmp ah\uff0c0x4d\uff1b\u5bf9\uff0cjz\u3002\u5b8c\u6210cmp\u554a\uff0c0x48\uff1b\u4e0ajz\u3002\u5b8c\u6210\n;; \u624b\u67c4\u9000\u683ccmp al\uff0c0x08 jz\u3002is_backspace cmp al\uff0c0x7F\uff1b\u9002\u7528\u4e8emac\u952e\u76d8jnz\u3002\u9000\u683c\u5b8c\u6210\u3002\u662f\u9000\u683c\uff1a\u83b7\u5f97\u4f4d\u7f6e\n\u5426\u5219\uff0c\u5982\u679c\u4e0d\u662f\u5728\u884c\u9996\u6309backspace\uff0c\u53ea\u9700\u7528ASCII 0\u8986\u76d6\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff08\u4ee3\u78010\u800c\u4e0d\u662f\u6570\u5b570\uff09\u3002\n\u5426\u5219\u4f60&#39\uff1byou\u2019\u4f60\u5728\u961f\u4f0d\u7684\u5f00\u5934\uff0c\u4f60\u9700\u8981\u8df3\u5230\u524d\u4e00\u884c\u7684\u672b\u5c3e\u3002\n.\u5728_\u884c\u7684_\u5f00\u59cb_\u5904\u9000\u683c_:\uff1b\u9012\u51cf\u884c\u8bbe\u7f6e\u4f4d\u7f6e\u8c03\u7528\u8f6c\u5230\u884c\u7684\u7ed3\u675f\u3002\u8986\u76d6\u5b57\u7b26\uff1amov al\uff0c0 mov ah\uff0c0x0a int 0x10 jmp\u3002\u5b8c\u6210\u3002\u5b8c\u6210\\u\u9000\u683c\uff1a\n\u63a5\u4e0b\u6765\u6211\u4eec\u5904\u7406\u56de\u8f66\u952e\u3002\u8fd9\u4f1a\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u5e76\u5c06\u5217\u8bbe\u7f6e\u56de\u96f6\u3002\n;; \u53e5\u67c4\u5c06mov_read_character_\u8f93\u5165ax cmp al\uff0c0x0d jnz\u3002\u5b8c\u6210\u8f93\u5165\u83b7\u53d6\u4f4d\u7f6e\u6709\u9650\u516c\u53f8dh\uff1b\u589e\u91cf\u884cmov dl\uff0c0\uff1b\u91cd\u7f6e\u5217\u8bbe\u7f6e\u4f4d\u7f6ejmp\u3002\u5b8c\u6210\u3002\u5b8c\u6210\u8f93\u5165\uff1a\n;; \u63a7\u5236ctrl-\u5feb\u6377\u952e\uff1b\uff1b\u9009\u4e2dctrl\u952emov_read_ctrl_flag_\u8fdb\u5165ax jz\u3002ctrl_not_set\uff1b\uff1b\u53e5\u67c4ctrl\u2014\u2014\u5c06\u5b57\u7b26\u79fb\u52a8\u5230ax cmp al\u4e2d\u7684\u5feb\u6377\u65b9\u5f0f\uff0c1\uff1b\u7531\u4e8ectlr\u7684\u67d0\u4e9b\u539f\u56e0\uff0c\u8fd9\u4e9b\u662f\u4ecea-z jnz\u504f\u79fb\u7684\u3002\u800c\u4e0d\u662f\uff1b\uff1b\u91cd\u7f6e\u5217mov dl\uff0c0\u8bbe\u7f6e\u4f4d\u7f6ejmp\u3002\u5b8c\u6210\u3002\u975e\u63a7\u5236a\uff1a\n;; \u5c06ctrl-e\u5feb\u6377\u952emov_read_character_\u79fb\u52a8\u5230ax cmp al\uff0c5 jnz\u4e2d\u3002\u4e0d\u6309ctrl\u952e\u8c03\u7528jmp\u884c\u7684goto_end_\u3002\u5b8c\u6210\u3002\u4e0d\u662f\uff1ajmp\u3002\u5b8c\u6210\u3002ctrl\\u\u672a\u8bbe\u7f6e\uff1a\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u4e9b\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\uff0c\u53ea\u9700\u6253\u5370\u6309\u4e0b\u7684\u5b57\u7b26\u5e76\u8fd4\u56de\u5373\u53ef\u3002\n\u4e3b\u64ad\uff1acls\u3002\u5faa\u73af\uff1a\u8c03\u7528\u7f16\u8f91\u5668_action jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u6211\u7b2c\u4e00\u6b21\u63a2\u7d22bootloader\u57fa\u7840\u77e5\u8bc6\u7684\u65b0\u5e16\u5b50\uff01\u53d1\u73b0BIOS API\u5e76\u82b1\u4e00\u4e9b\u65f6\u95f4\u5728\u6c47\u7f16\u4e2d\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u751f\u6210\u6216\u6a21\u62df\u5b83\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002https://t.co/7iP6Nib620\u7167\u7247\u3002\u5541\u557ecom/xSyG1IXgEB\n-\u83f2\u5c14\u00b7\u4f0a\u987f\uff08@Phil_Eaton\uff092022\u5e741\u670823\u65e5", "note_en": "I spent a few days playing around with bootloaders for the firsttime. This post builds up to a text editor with a few keyboardshortcuts. I&#39;ll be giving a virtual talk based on this work at  HackerNights on Jan 27.\n There are a definitely bugs. But it&#39;s hard to find intermediateresources for bootloader programming so maybe parts of this will beuseful.\n If you already know the basics and the intermediates and just want afantastic intermediate+ tutorial, maybe try this. Itis very good.\n The code on this post is available on Github, but it&#39;s more of amess than my usual project.\n   Install qemu (on macOS or Linux), nasm, and copy the  snake.asmsource code to disk from that blog post.\n $ cat snake.asm [bits 16] ; Pragma, tells the assembler that we ; are in 16 bit mode (which is the state ; of x86 when booting from a floppy). [org 0x7C00] ; Pragma, tell the assembler where the ; code will be loaded. mov bl, 1 ; Starting direction for the worm. push 0xa000 ; Load address of VRAM into es. pop esrestart_game: mov si, 320*100+160 ; worm&#39;s starting position, center of ; screen ; Set video mode. Mode 13h is VGA (1 byte per pixel with the actual ; color stored in a palette), 320x200 total size. When restarting, ; this also clears the screen. mov ax, 0x0013 int 0x10 ; Draw borders. We assume the default palette will work for us. ; We also assume that starting at the bottom and drawing 2176 pixels ; wraps around and ends up drawing the top + bottom borders. mov di, 320*199 mov cx, 2176 repdraw_loop: stosb ; draw right border stosb ; draw left border add di, 318 jnc draw_loop ; notice the jump in the middle of the ; rep stosb instruction.game_loop: ; We read the keyboard input from port 0x60. This also reads bytes from ; the mouse, so we need to only handle [up (0x48), left (0x4b), ; right (0x4d), down (0x50)] in al, 0x60 cmp al, 0x48 jb kb_handle_end cmp al, 0x50 ja kb_handle_end ; At the end bx contains offset displacement (+1, -1, +320, -320) ; based on pressed/released keypad key. I bet there are a few bytes ; to shave around here given the bounds check above. aaa cbw dec ax dec ax jc kb_handle sub al, 2 imul ax, ax, byte -0x50kb_handle: mov bx, axkb_handle_end: add si, bx ; The original code used set pallete command (10h/0bh) to wait for ; the vertical retrace. Today&#39;s computers are however too fast, so ; we use int 15h 86h instead. This also shaves a few bytes. ; Note: you&#39;ll have to tweak cx+dx if you are running this on a virtual ; machine vs real hardware. Casual testing seems to show that virtual machines ; wait ~3-4x longer than physical hardware. mov ah, 0x86 mov dh, 0xef int 0x15 ; Draw worm and check for collision with parity ; (even parity=collision). mov ah, 0x45 xor [es:si], ah ; Go back to the main game loop. jpo game_loop ; We hit a wall or the worm. Restart the game. jmp restart_gameTIMES 510 - ($ - $$) db 0 ; Fill the rest of sector with 0dw 0xaa55 ; Boot signature at the end of bootloader\n     I&#39;m not going to get anywhere near that level of sophistication inthis post but I think it&#39;s great motivation.\n  Bootloaders are a mix of assembly programming and BIOS APIs forI/O. Since you&#39;re thinking about bootloaders you already know assemblybasics. Now all you have to do is learn the APIs.\n The hello world bootloader has been explained in detail (see here, here,and  here) soI won&#39;t go into too much line-by-line depth.\n  $ cat hello.asmbits 16 ; tell NASM this is 16 bit codeorg 0x7c00 ; tell NASM to start outputting stuff at offset 0x7c00boot: mov si,hello ; point si register to hello label memory location mov ah,0x0e ; 0x0e means &#39;Write Character in TTY mode&#39;.loop: lodsb or al,al ; is al == 0 ? jz halt ; if (al == 0) jump to halt label int 0x10 ; runs BIOS interrupt 0x10 - Video Services jmp .loophalt: cli ; clear interrupt flag hlt ; halt executionhello: db &#34;Hello world!&#34;,0times 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n  But aside from clerical settings (16-bit assembly, where the programexists in memory, padding to 512 bytes) the only real bootloader-ymagic in there is  int 0x10, a BIOS interrupt.\n  BIOS interrupts are API calls. Just like syscalls in userland programsthey have a specific register convention and number to call for thefamily of APIs.\n When you write bootloader programs you&#39;ll spend most of your time atfirst trying to understand the behavior of the various BIOS APIs.\n The two families we&#39;ll deal with in this post are the keyboard family(documentation  here) andthe display family (documentation here).\n       The specific function we called above to write a character to thedisplay is  INT10,E. The  0x10is the argument that you call the  int keyword with(e.g.  int 0x10). And the  E is the specificfunction within the  0x10 family. The  E iswritten into the  AH register beforecalling  int. The ASCII code to be written is placed inthe  AL register.\n Now that output makes some sense, let&#39;s do input. In the  keyboard servicesdocumentation you maynotice that  INT 16,0provides a way to block for user input. According to that page theASCII character will be in  AL when the interrupt returns.\n  You may have noticed some text gets displayed before our programruns. We can use  INT0x10,0 to clear thescreen.\n   Since the display function reads from the same register the inputfunction outputs to, we can just call both interrupts after eachother. Wrap this in a loop and we have the world&#39;s worst editor.\n $ cat ioloop.asmbits 16org 0x7c00main: ;; Clear screen mov ah, 0x00 mov al, 0x03 int 0x10.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n By the way, the  main label here (like the  boot label above in  hello.asm) is only to help the reader. It is not something the BIOS uses.\n         bits 16org 0x7c00jmp mainclear_screen: ;; Clear screen mov ah, 0x00 mov al, 0x03 int 0x10 retmain: call clear_screen.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n  bits 16org 0x7c00jmp main%macro cls 0 ; Zero is the number of arguments mov ah, 0x00 mov al, 0x03 int 0x10%endmacromain: cls.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n And nasm macros even have a way to write macro-safe labels byprefixing them with  %% which is useful if you haveconditions or loops within a macro.\n The benefit of a macro I guess is that you&#39;re not using up thestack. The benefit of a function call is that you&#39;re not duplicatingcode every place you use a macro. The amount of generated codeeventually becomes important in bootloaders because the code mustfit into 512 bytes.\n   Reading ASCII characters is not complicated as we saw above. But whatif we want to build Readline style shortcuts like ctrl-a for jumpingto the start of the line?\n Using INT 16,0 as we do above is fine. But rather than solely readingfrom the result of that function call, there is a section of memorythat contains both the character pressed and control characterspressed.\n Based on documentation for this memory area (found here or here),we can build a macro for reading the pressed character:\n %macro mov_read_character_into 1 mov eax, [0x041a] add eax, 0x03fe ; Offset from 0x0400 - sizeof(uint16) (since head points to next free slot, not last/current slot) and eax, 0xFFFF mov %1, [eax] and %1, 0xFF%endmacro\n  %macro mov_read_ctrl_flag_into 1 mov %1, [0x0417] and %1, 0x04 ; Grab 3rd bit: %1 &amp; 0b0100%endmacro\n  Lastly we&#39;ll use some cursor APIs that that allow us to handlenewlines, backspace on the first column of a line, and ctrl-a (jump tobeginning of line).\n %macro get_position 0 mov ah, 0x03 int 0x10%endmacro%macro set_position 0 mov ah, 0x02 int 0x10%endmacro\n But there&#39;s something buggy about my  goto_end_of_linefunction. Sometimes it works and sometimes it just jumps all over thescreen in an infinite loop. Part of the problem is that the editormemory is the video card. The cursor location is only stored there andnot in some program state like you might do in a high-levelenvironment/language.\n goto_end_of_line:;; Get current character mov ah, 0x08 int 0x10;; Iterate until the character is null cmp al, 0 jz .done inc dl set_position jmp goto_end_of_line.done: ret\n        %macro read_character 0 ;; Read character mov ah, 0 int 0x16%endmacro%macro print_character 1 mov ax, %1 mov ah, 0x0e int 0x10%endmacro\n  %macro get_position 0 mov ah, 0x03 int 0x10%endmacro%macro set_position 0 mov ah, 0x02 int 0x10%endmacrogoto_end_of_line:;; Get current character mov ah, 0x08 int 0x10;; Iterate until the character is null cmp al, 0 jz .done inc dl set_position jmp goto_end_of_line.done: ret\n  %macro mov_read_ctrl_flag_into 1 mov %1, [0x0417] and %1, 0x04 ; Grab 3rd bit: %1 &amp; 0b0100%endmacro%macro mov_read_character_into 1 mov eax, [0x041a] add eax, 0x03fe ; Offset from 0x0400 - sizeof(uint16) (since head points to next free slot, not last/current slot) and eax, 0xFFFF mov %1, [eax] and %1, 0xFF%endmacro\n Now we can start the editor loop where we wait for a keypress andhandle it.\n  Don&#39;t print ASCII garbage if the key pressed is an arrow key. Just donothing. (This isn&#39;t good editor behavior in general but ours is alimited one.)\n ;; Ignore arrow keys cmp ah, 0x4b ; Left jz .done cmp ah, 0x50 ; Down jz .done cmp ah, 0x4d ; Right jz .done cmp ah, 0x48 ; Up jz .done\n  ;; Handle backspace cmp al, 0x08 jz .is_backspace cmp al, 0x7F ; For mac keyboards jnz .done_backspace.is_backspace: get_position\n   Otherwise if backspace is pressed not at the beginning of the line,just overwrite the last character with the ASCII 0 (the code 0 not thedigit 0).\n  Otherwise you&#39;re at the beginning of the line and you need to jump tothe end of the previous line.\n .backspace_at_start_of_line: dec dh ; Decrement row set_position call goto_end_of_line.overwrite_character: mov al, 0 mov ah, 0x0a int 0x10 jmp .done.done_backspace:\n Next we handle the Enter key. This should move the cursor onto thenext line and set the column back to zero.\n ;; Handle enter mov_read_character_into ax cmp al, 0x0d jnz .done_enter get_position inc dh ; Increment line mov dl, 0 ; Reset column set_position jmp .done.done_enter:\n  ;; Handle ctrl- shortcuts;; Check ctrl key mov_read_ctrl_flag_into ax jz .ctrl_not_set;; Handle ctrl-a shortcut mov_read_character_into ax cmp al, 1 ; For some reason with ctlr, these are offset from a-z jnz .not_ctrl_a;; Reset column mov dl, 0 set_position jmp .done.not_ctrl_a:\n  ;; Handle ctrl-e shortcut mov_read_character_into ax cmp al, 5 jnz .not_ctrl_e call goto_end_of_line jmp .done.not_ctrl_e: jmp .done.ctrl_not_set:\n Finally if none of these cases are met, just print the pressed character and return.\n   main: cls.loop: call editor_action jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n     I wrote a new post on my first time exploring bootloader basics! Neat to discover the BIOS APIs and spend some time actually coding in assembly versus just generating or emulating it. https://t.co/7iP6Nib620  pic.twitter.com/xSyG1IXgEB\n\u2014 Phil Eaton (@phil_eaton)  January 23, 2022", "posttime": "2022-02-22 02:26:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,bootloader,mov", "title": "\u5f15\u5bfc\u7a0b\u5e8f\u57fa\u7840", "title_en": "Bootloader Basics", "transed": 1, "url": "https://notes.eatonphil.com/bootloader-basics.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "mov"]}]
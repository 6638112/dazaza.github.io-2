[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074299, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636ePolygon\u83b7\u5f97\u7684\u6cd5\u5ead\u6587\u4ef6\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5965\u514b\u5170\u7684\u4e00\u5bb6\u6cd5\u9662\u5df2\u4e0b\u4ee4Roblox YouTube\u521b\u59cb\u4eba\u9c81\u672c\u00b7\u897f\u59c6\uff08Ruben Sim\uff09\u8fdc\u79bb\u8fd9\u4e00\u5e7f\u53d7\u6b22\u8fce\u7684\u6e38\u620f\u5e73\u53f0\uff0c\u4ed6\u5df2\u88ab\u7981\u6b62\u4f7f\u7528\u8be5\u5e73\u53f0\u591a\u5e74\u3002\nRoblox\u516c\u53f8\u4e8e11\u6708\u5bf9Sim\u63d0\u8d77\u8bc9\u8bbc\uff0c\u6307\u63a7YouTuber\u9886\u5bfc\u4e86\u4e00\u4e2a\u6050\u5413\u8be5\u5e73\u53f0\u7684\u201c\u7f51\u7edc\u66b4\u5f92\u201d\u3002\u8be5\u516c\u53f8\u6700\u521d\u5e0c\u671b\u83b7\u5f97160\u4e07\u7f8e\u5143\u7684\u8d54\u507f\uff0c\u4f46\u5728\u4e00\u9879\u7ecf\u53cc\u65b9\u540c\u610f\u7684\u89c4\u5b9a\u547d\u4ee4\u548c\u6cd5\u9662\u7684\u6700\u7ec8\u5224\u51b3\u4e2d\uff0c\u8be5\u91d1\u989d\u964d\u81f315\u4e07\u7f8e\u5143\u3002\nSim\u5728Roblox\u5e73\u53f0\u4e0a\u6709\u7740\u6f2b\u957f\u800c\u52a8\u8361\u7684\u5386\u53f2\uff0c\u4eba\u4eec\uff08\u4e3b\u8981\u662f\u513f\u7ae5\uff09\u5728\u8be5\u5e73\u53f0\u4e0a\u6784\u5efa\u6e38\u620f\u548c\u6570\u5b57\u4e16\u754c\u3002\u8be5\u5e73\u53f0\u4f30\u8ba1\u4ef7\u503c450\u4ebf\u7f8e\u5143\uff0c\u5e73\u53f0\u548c\u5e97\u9762\u4e0a\u6709\u6570\u5343\u6b3e\u6e38\u620f\u3002\nRoblox\u5e73\u53f0\u662f\u4e00\u4e2a\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u8d26\u6237\u88ab\u7981\u6b62\u65f6\uff0c\u5f88\u5bb9\u6613\u521b\u5efa\u53e6\u4e00\u4e2a\u8d26\u6237\u3002\u7136\u800c\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0cRoblox\u516c\u53f8\u5c06\u7981\u6b62IP\u5e10\u6237\u8bbf\u95ee\u670d\u52a1\u5668\u3002Roblox\u6295\u8bc9\u79f0\uff0c\u5c3d\u7ba1Sim\u6700\u521d\u7981\u6b62\u201c\u9ed1\u5ba2\u201d\u548c\u4f7f\u7528\u4ed6\u4eba\u521b\u5efa\u7684\u8d26\u6237\uff0c\u4f46\u4ed6\u4ecd\u7ee7\u7eed\u8bbf\u95ee\u8be5\u5e73\u53f0\u3002\u636e\u7f57\u5e03\u7f57\u514b\u65af\u7684\u5f8b\u5e08\u79f0\uff0c\u6700\u521d\u7684\u7981\u4ee4\u662f\u5728\u8fd9\u4f4dYouTube\u521b\u59cb\u4eba\u4f7f\u7528\u79cd\u65cf\u4e3b\u4e49\u548c\u6050\u540c\u7684\u8bfd\u8c24\u9a9a\u6270\u5176\u4ed6\u73a9\u5bb6\u3001\u636e\u79f0\u5bf9\u7528\u6237\u8fdb\u884c\u6027\u9a9a\u6270\uff0c\u5e76\u5c06\u963f\u9053\u592b\u00b7\u5e0c\u7279\u52d2\u7684\u7167\u7247\u4e0a\u4f20\u7ed9\u7f57\u5e03\u7f57\u514b\u65af\u4e4b\u540e\u53d1\u5e03\u7684\u3002Sim\u5728\u4e0a\u5468\u4e0a\u4f20\u7684YouTube\u89c6\u9891\u4e2d\u5bf9\u8fd9\u4e00\u63cf\u8ff0\u63d0\u51fa\u4e86\u8d28\u7591\u3002\n\u9664\u4e86\u6cd5\u9662\u4e0b\u4ee4\u7684\u7981\u4ee4\u548c15\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\u5916\uff0cSim\u8fd8\u540c\u610f\u4e0d\u5236\u4f5c\u3001\u53d1\u5e03\u6216\u91cd\u65b0\u53d1\u5e03\u201c\u4e0eRoblox\u6709\u5173\u7684\u865a\u5047\u6050\u6016\u6d3b\u52a8\u5a01\u80c1\u201d\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u6307\u63a7\uff0c\u5728\u6700\u521d\u7684\u8bc9\u8bbc\u4e2d\uff0c\u5728Youtubor\u636e\u79f0\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u6761\u6d88\u606f\uff0c\u6697\u793a\u6050\u6016\u88ad\u51fb\u5c06\u57282021\u5e7410\u6708\u5728\u65e7\u91d1\u5c71\u7684RoBrxx\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\u53d1\u751f\u3002\u8bc9\u8bbc\u79f0\uff0c\u6d3b\u52a8\u88ab\u63a8\u8fdf\uff0c\u5e76\u201c\u5728\u5f53\u5730\u8b66\u65b9\u548c\u79c1\u4eba\u5b89\u5168\u90e8\u95e8\u8fdb\u884c\u641c\u67e5\u4ee5\u786e\u4fdd\u8bbe\u65bd\u5b89\u5168\u7684\u540c\u65f6\uff0c\u88ab\u8feb\u6682\u65f6\u5c01\u9501\u201d\u3002\nSim\u8fd8\u540c\u610f\u4e0d\u53d1\u8868\u5173\u4e8eRoblox\u7684\u865a\u5047\u58f0\u660e\uff0c\u4e0d\u9f13\u52b1\u5bf9Roblox\u6216\u5176\u5458\u5de5\u548c\u529e\u516c\u5ba4\u7684\u66b4\u529b\u884c\u4e3a\uff0c\u4e0d\u9760\u8fd1Roblox\u529e\u516c\u5ba4\uff0c\u4e5f\u4e0d\u5236\u4f5c\u9f13\u52b1\u6216\u7f8e\u5316\u8fdd\u53cdRoblox\u89c4\u5219\u6216\u5728\u88ab\u7981\u6b62\u540e\u8fdb\u5165\u5e73\u53f0\u7684\u89c6\u9891\u3002\n\u4ed6\u8fd8\u9700\u8981\u5220\u9664\u4e4b\u524d\u4efb\u4f55\u8fdd\u53cd\u8fd9\u4e9b\u6761\u6b3e\u7684YouTube\u89c6\u9891\u3002\n\u9c81\u672c\u00b7\u8f9b\u62d2\u7edd\u5c31\u8fd9\u8d77\u8bc9\u8bbc\u7f6e\u8bc4\uff0c\u4f46\u6307\u51fa\u4ed6\u5bf9\u6295\u8bc9\u7684\u56de\u5e94\u5c06\u5728\u201c\u672a\u6765\u51e0\u4e2a\u6708\u201d\u4e0a\u4f20\u5230\u4ed6\u7684YouTube\u9891\u9053Roblox\u516c\u53f8\u5c1a\u672a\u56de\u5e94Polygon\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002", "note_en": "An Oakland, California court has ordered   Roblox YouTube creator Ruben Sim to stay off the popular gaming platform from which he\u2019s been banned for several years, according to court documents obtained by Polygon.\n The Roblox Corporation  filed a lawsuit against Sim in November, accusing the YouTuber of leading a \u201ccybermob\u201d that terrorized the platform. The company was originally looking for $1.6 million in damages, but decreased that amount to $150,000 in a dually agreed-upon stipulated order and final judgment by the court.\n Sim has had a long and turbulent history with the  Roblox platform, where people \u2014 largely children \u2014 build games and digital worlds.  The platform is estimated to be worth $45 billion, with thousands of games on the platform and storefront.\n The  Roblox platform is a free app, so when one account is banned, it\u2019s easy to simply make another. However, in certain cases, the Roblox Corporation will ban an IP account from accessing the servers. Sim has continued to access the platform despite his original ban by \u201chacking\u201d and using accounts created by other people, Roblox complaint says. The original ban, according to Roblox\u2019s lawyers, was issued after the YouTube creator harassed other players using racist and homophobic slurs, allegedly sexually harassed users, and uploaded photos of Adolph Hitler to  Roblox. Sim disputed this characterization in a YouTube video uploaded last week.\n Alongside the court-ordered ban and $150,000 in fines, Sim has also agreed not to make, publish, or republish \u201cfalse threats of terrorist activity relating to  Roblox.\u201d This was one major accusation levied in the initial lawsuit, after the YouTuber allegedly posted a message on Twitter suggesting a terrorist attack would happen at the Roblox Developers Conference in San Francisco in October 2021. The event was delayed and \u201cforced into a temporary lockdown while local police and private security conducted a search to secure the facility,\u201d according to the lawsuit.\n Sim also agreed not to make false statements about  Roblox, encourage violence against  Roblox or its employees and offices, go near the  Roblox office, or create videos that encourage or glamorize violating  Roblox\u2019s rules or gaining access to the platform after being banned.\n He\u2019ll also need to remove any previous YouTube videos that violate these terms.\n Ruben Sim declined to comment on the lawsuit, but noted that his response to the complaint will be uploaded to his YouTube channel in the \u201cnext couple months.\u201d The Roblox Corporation has not responded to Polygon\u2019s request for comment.", "posttime": "2022-02-20 21:27:09", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8fbe\u6210,year,roblox", "title": "Roblox 160\u4e07\u7f8e\u5143\u7684\u60b2\u4f24\u8bc9\u8bbc\u4e0eMutli\u4e00\u5e74\u7981\u4ee4\u8fbe\u6210\u548c\u89e3\uff0c15\u4e07\u7f8e\u5143\u7f5a\u6b3e", "title_en": "Roblox $1.6M Griefer Suit Settled With Mutli-Year Ban, $150,000 Fine", "transed": 1, "url": "https://www.polygon.com/22894120/roblox-ruben-sim-lawsuit-banned", "via": "", "real_tags": ["\u8fbe\u6210", "year", "roblox"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074297, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Rust\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f5c\u4e3a\u4e00\u7ec4\u5f00\u6e90\u9879\u76ee\u5b9e\u73b0\u3002\u5b83\u5c06C\u7b49\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\u7684\u6027\u80fd\u548c\u8d44\u6e90\u6548\u7387\u4e0eJava\u7b49\u8bed\u8a00\u7684\u5185\u5b58\u5b89\u5168\u7ed3\u5408\u8d77\u6765\u3002Rust\u4e8e2010\u5e74\u4f5c\u4e3aMozilla\u7684\u4e00\u4e2a\u7814\u7a76\u9879\u76ee\u542f\u52a8\uff0c2015\u5e74\u63a8\u51faRust 1.0\u3002\u57282020\uff0c\u652f\u6301\u9508\u4eceMozilla\u8f6c\u79fb\u5230\u9508\u57fa\u91d1\u4f1a\uff0c\u4e00\u4e2a\u975e\u76c8\u5229\u7ec4\u7ec7\uff0c\u4f5c\u4e3a\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u516c\u53f8\uff08AWS\uff09\u3001\u8c37\u6b4c\u3001\u534e\u4e3a\u3001\u5fae\u8f6f\u548cMozilla\u4e4b\u95f4\u7684\u4f19\u4f34\u5173\u7cfb\u800c\u521b\u5efa\u3002\u8be5\u57fa\u91d1\u4f1a\u7684\u4f7f\u547d\u662f\u652f\u6301\u9508\u83cc\u7684\u751f\u957f\u548c\u521b\u65b0\uff0c\u4f1a\u5458\u516c\u53f8\u5728\u7b2c\u4e00\u5e74\u4ece5\u5bb6\u516c\u53f8\u53d1\u5c55\u523027\u5bb6\u516c\u53f8\u3002\n\u5728AWS\uff0c\u9508\u8680\u5f88\u5feb\u6210\u4e3a\u5927\u89c4\u6a21\u5efa\u8bbe\u57fa\u7840\u8bbe\u65bd\u7684\u5173\u952e\u3002\u97ad\u70ae\u662f\u4e00\u79cd\u5f00\u6e90\u865a\u62df\u5316\u6280\u672f\uff0c\u4e3aAWS Lambda\u548c\u5176\u4ed6\u65e0\u670d\u52a1\u5668\u4ea7\u54c1\u63d0\u4f9b\u4e86\u652f\u6301\u30022018\u5e74\uff0c\u5b83\u4f5c\u4e3a\u6211\u4eec\u5728Rust\u5b9e\u65bd\u7684\u7b2c\u4e00\u6b3e\u8457\u540d\u4ea7\u54c1\u516c\u5f00\u53d1\u5e03\u3002\u6211\u4eec\u4f7f\u7528Rust\u6765\u63d0\u4f9b\u670d\u52a1\uff0c\u6bd4\u5982\u4e9a\u9a6c\u900a\u7b80\u5355\u5b58\u50a8\u670d\u52a1\uff08Amazon S3\uff09\u3001\u4e9a\u9a6c\u900a\u5f39\u6027\u8ba1\u7b97\u4e91\uff08Amazon EC2\uff09\u3001\u4e9a\u9a6c\u900aCloudFront\u7b49\u7b49\u30022020\u5e74\uff0c\u6211\u4eec\u63a8\u51fa\u4e86\u57fa\u4e8eLinux\u7684\u5bb9\u5668\u64cd\u4f5c\u7cfb\u7edfBottlerocket\uff0c\u5b83\u662f\u7528Rust\u7f16\u5199\u7684\uff0c\u6211\u4eec\u7684\u4e9a\u9a6c\u900aEC2\u56e2\u961f\u4f7f\u7528Rust\u4f5c\u4e3a\u65b0\u7684AWS Nitro\u7cfb\u7edf\u7ec4\u4ef6\u7684\u9996\u9009\u8bed\u8a00\uff0c\u5305\u62ec\u654f\u611f\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982Nitro Enclaves\u3002\n\u5728AWS\uff0c\u6211\u4eec\u76f8\u4fe1\u9886\u5bfc\u8005\u521b\u9020\u7684\u6bd4\u4ed6\u4eec\u6d88\u8d39\u7684\u66f4\u591a\uff0c\u5e76\u4e14\u603b\u662f\u6bd4\u4ed6\u4eec\u53d1\u73b0\u7684\u66f4\u597d\u30022019\u5e74\uff0cAWS\u81ea\u8c6a\u5730\u6210\u4e3aRust\u9879\u76ee\u7684\u8d5e\u52a9\u5546\u3002\u57282020\uff0c\u6211\u4eec\u5f00\u59cb\u96c7\u7528\u9508\u75c5\u7ef4\u62a4\u8005\u548c\u8d21\u732e\u8005\uff0c\u6211\u4eec\u4e0e\u8c37\u6b4c\u3001\u534e\u4e3a\u3001\u5fae\u8f6f\u548cMozilla\u5408\u4f5c\u521b\u5efa\u9508\u83cc\u57fa\u91d1\u4f1a\uff0c\u4ee5\u652f\u6301\u9508\u75c5\u3002AWS\u6b63\u5728\u6295\u8d44\u9508\u83cc\u7684\u53ef\u6301\u7eed\u6027\uff0c\u6211\u4eec\u8ba4\u4e3a\u5e94\u8be5\u4f7f\u7528\u8fd9\u79cd\u8bed\u8a00\u6765\u6784\u5efa\u53ef\u6301\u7eed\u548c\u5b89\u5168\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u8d44\u6599\u6765\u6e90\uff1aIEA\uff082021\u5e74\uff09\uff0c\u6309\u6570\u636e\u4e2d\u5fc3\u7c7b\u578b\u5212\u5206\u7684\u5168\u7403\u6570\u636e\u4e2d\u5fc3\u80fd\u6e90\u9700\u6c42\uff0c2010-2022\u5e74\uff0chttps://www.iea.org/data-and-statistics/charts/global-data-centre-energy-demand-by-data-centre-type-2010-2022.\u7248\u6743\u6240\u6709\u3002\n\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u6570\u636e\u4e2d\u5fc3\u6bcf\u5e74\u6d88\u8017\u7ea6200\u592a\u74e6\u65f6\u3002\u8fd9\u5927\u7ea6\u662f\u6211\u4eec\u661f\u7403\u4e0a\u6240\u6709\u80fd\u6e90\u6d88\u8017\u76841%\u3002\u5173\u4e8e\u80fd\u6e90\u4f7f\u7528\u7684\u7ec6\u8282\uff0c\u6709\u51e0\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u770b\u4e00\u770b\u80fd\u6e90\u6d88\u8017\u7684\u56fe\u8868\uff0c\u53ef\u4ee5\u8ffd\u6eaf\u52302010\u5e74\uff0c\u9876\u7ebf\u57fa\u672c\u4e0a\u662f\u5e73\u7684\u3002\u8fd9\u4e0e\u6211\u4eec\u7684\u884c\u4e1a\u5728\u540c\u4e00\u65f6\u671f\u7ecf\u5386\u7684\u5927\u6570\u636e\u3001\u673a\u5668\u5b66\u4e60\u548c\u8fb9\u7f18\u8bbe\u5907\u7684\u5de8\u5927\u589e\u957f\u6781\u4e3a\u8fdd\u80cc\u76f4\u89c9\u3002\n\u7b2c\u4e8c\u4e2a\u6709\u8da3\u7684\u7ec6\u8282\u662f\uff0c\u867d\u7136\u56fe\u7684\u9876\u7ebf\u662f\u5e73\u7684\uff0c\u4f46\u5728\u56fe\u4e2d\uff0c\u4f20\u7edf\u3001\u4e91\u548c\u8d85\u89c4\u6a21\u6570\u636e\u4e2d\u5fc3\u7684\u5206\u5e03\u5728\u540c\u4e00\u65f6\u671f\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\u3002\u8fd9\u4e9b\u4e91\u8ba1\u7b97\u548c\u8d85\u89c4\u6a21\u6570\u636e\u4e2d\u5fc3\u4e00\u76f4\u5728\u5b9e\u65bd\u5de8\u5927\u7684\u80fd\u6548\u6539\u8fdb\uff0c\u800c\u5411\u4e91\u8ba1\u7b97\u57fa\u7840\u8bbe\u65bd\u7684\u8fc1\u79fb\u4e00\u76f4\u5728\u4fdd\u6301\u6570\u636e\u4e2d\u5fc3\u7684\u603b\u80fd\u6e90\u4f7f\u7528\u5e73\u8861\uff0c\u5c3d\u7ba1\u5b58\u50a8\u548c\u8ba1\u7b97\u5728\u5341\u591a\u5e74\u6765\u51fa\u73b0\u4e86\u5de8\u5927\u589e\u957f\u3002\n\u6709\u592a\u591a\u7684\u6570\u636e\u4e2d\u5fc3\u6548\u7387\u6539\u8fdb\u9700\u8981\u5217\u51fa\uff0c\u4f46\u8fd9\u91cc\u6709\u51e0\u4e2a\u4f8b\u5b50\u3002\u5728\u8ba1\u7b97\u65b9\u9762\uff0c\u6211\u4eec\u5728\u786c\u4ef6\u65b9\u9762\u8fdb\u884c\u4e86\u6548\u7387\u6539\u8fdb\uff0c\u5e76\u5b9e\u73b0\u4e86\u66f4\u667a\u80fd\u7684\u8d44\u6e90\u5229\u7528\uff0c\u4ee5\u51cf\u5c11\u7a7a\u95f2\u65f6\u95f4\u3002\u901a\u8fc7\u652f\u6301\u591a\u5b9e\u4f8b\u548c\u591a\u79df\u6237\uff0c\u6211\u4eec\u51cf\u7f13\u4e86\u670d\u52a1\u5668\u7684\u589e\u957f\uff0c\u63d0\u9ad8\u4e86\u5b58\u50a8\u7684\u9a71\u52a8\u5668\u5bc6\u5ea6\u548c\u6548\u7387\u3002\u6211\u4eec\u8fd8\u91c7\u7528\u4e86\u66f4\u8282\u80fd\u7684\u5efa\u7b51\u6750\u6599\u548c\u51b7\u5374\u7cfb\u7edf\u3002\n\u5c3d\u7ba1\u8fd9\u4e2a\u6210\u529f\u6545\u4e8b\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u4f46\u5b83\u63d0\u51fa\u4e86\u4e24\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u73b0\u72b6\u591f\u597d\u5417\uff1f\u5c06\u6570\u636e\u4e2d\u5fc3\u80fd\u8017\u4fdd\u6301\u5728\u5168\u7403\u80fd\u8017\u76841%\u662f\u5426\u8db3\u591f\uff1f\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u672a\u6765\u80fd\u6e90\u6548\u7387\u7684\u521b\u65b0\u662f\u5426\u4f1a\u7ee7\u7eed\u8ddf\u4e0a\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u589e\u957f\uff1f\u8003\u8651\u5230\u6211\u4eec\u6240\u77e5\u9053\u7684\u65e0\u4eba\u9a7e\u9a76\u98de\u673a\u3001\u8fd0\u8f7d\u673a\u5668\u4eba\u548c\u8f66\u8f86\u7684\u7206\u70b8\u6027\u589e\u957f\uff0c\u4ee5\u53ca\u652f\u6301\u8fd9\u4e9b\u6280\u672f\u6240\u9700\u7684\u96be\u4ee5\u7f6e\u4fe1\u7684\u6570\u636e\u6d88\u8017\u3001\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\u57f9\u8bad\u548c\u63a8\u7406\uff0c\u80fd\u6548\u521b\u65b0\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u8ddf\u4e0a\u9700\u6c42\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u80fd\u6548\u6539\u8fdb\u662fAWS\u7684\u8d23\u4efb\uff0c\u4f46\u5c31\u50cf\u5b89\u5168\u4e00\u6837\uff0c\u53ef\u6301\u7eed\u6027\u4e5f\u662f\u4e00\u9879\u5171\u540c\u7684\u8d23\u4efb\u3002AWS\u5ba2\u6237\u8d1f\u8d23\u5728\u5b58\u50a8\u7b56\u7565\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u548c\u8ba1\u7b97\u5229\u7528\u7387\u65b9\u9762\u8fdb\u884c\u8282\u80fd\u9009\u62e9\uff0c\u800cAWS\u5728\u786c\u4ef6\u3001\u5229\u7528\u7387\u529f\u80fd\u548c\u51b7\u5374\u7cfb\u7edf\u65b9\u9762\u62e5\u6709\u6548\u7387\u3002\u6211\u4eec\u8fd8\u5728\u53ef\u518d\u751f\u80fd\u6e90\u65b9\u9762\u8fdb\u884c\u5de8\u989d\u6295\u8d44\u3002\nAWS\u6709\u671b\u57282025\u5e74\u524d\u8ba9\u6211\u4eec\u7684\u6570\u636e\u4e2d\u5fc3100%\u4f7f\u7528\u53ef\u518d\u751f\u80fd\u6e90\uff0c\u4f46\u5373\u4f7f\u662f\u53ef\u518d\u751f\u80fd\u6e90\u4e5f\u4f1a\u5bf9\u73af\u5883\u9020\u6210\u5f71\u54cd\u3002\u76ee\u524d\u6570\u636e\u4e2d\u5fc3\u4f7f\u7528\u7684200\u592a\u74e6\u65f6\u7684\u80fd\u6e90\u5c06\u9700\u8981\u5927\u7ea650\u4e07\u82f1\u4ea9\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\u3002\u8bb8\u591a\u592a\u9633\u80fd\u7535\u6c60\u677f\u7684\u5f00\u91c7\u3001\u5236\u9020\u548c\u7ba1\u7406\u90fd\u4f1a\u5bf9\u73af\u5883\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\u56e0\u6b64\uff0c\u6b63\u5982AWS\u9ad8\u7ea7\u526f\u603b\u88c1\u5f7c\u5f97\u00b7\u5fb7\u6851\u8482\u65af\uff08Peter DeSantis\uff09\u5728re:Invent2020\u4e0a\u6240\u8bf4\uff0c\u867d\u7136\u6211\u4eec\u5bf9\u53ef\u518d\u751f\u80fd\u6e90\u7684\u6210\u529f\u611f\u5230\u975e\u5e38\u81ea\u8c6a\uff0c\u201c\u6700\u7eff\u8272\u7684\u80fd\u6e90\u662f\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u80fd\u6e90\u3002\u201d\n\u53ef\u518d\u751f\u80fd\u6e90\u4e0d\u5e94\u53d6\u4ee3\u80fd\u6e90\u6548\u7387\u4f5c\u4e3a\u8bbe\u8ba1\u539f\u5219\u3002\u6b63\u5982\u5353\u8d8a\u64cd\u4f5c\u3001\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u4e00\u76f4\u662f\u4f20\u7edf\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u539f\u5219\u4e00\u6837\uff0c\u53ef\u6301\u7eed\u6027\u4e5f\u5fc5\u987b\u662f\u73b0\u4ee3\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u539f\u5219\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48AWS\u5ba3\u5e03\u4e86AWS\u826f\u597d\u67b6\u6784\u6846\u67b6\u7684\u7b2c\u516d\u4e2a\u53ef\u6301\u7eed\u6027\u652f\u67f1\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u653e\u677e\u975e\u5173\u952e\u529f\u80fd\u7684SLA\uff0c\u5e76\u4f18\u5148\u8003\u8651\u8d44\u6e90\u4f7f\u7528\u6548\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u865a\u62df\u5316\uff0c\u5e76\u5141\u8bb8\u66f4\u957f\u7684\u8bbe\u5907\u5347\u7ea7\u5468\u671f\u3002\u6211\u4eec\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5229\u7528\u7f13\u5b58\u548c\u66f4\u957f\u7684TTL\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u5b9e\u65bd\u81ea\u52a8\u5316\u7684\u751f\u547d\u5468\u671f\u7b56\u7565\uff0c\u4ee5\u5c3d\u5feb\u5220\u9664\u6570\u636e\u3002\u5f53\u6211\u4eec\u9009\u62e9\u52a0\u5bc6\u548c\u538b\u7f29\u7b97\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6548\u7387\u7eb3\u5165\u51b3\u7b56\u6807\u51c6\u3002\u6700\u540e\uff0c\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7528\u8282\u80fd\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u6211\u4eec\u7684\u8f6f\u4ef6\u3002\n\u51e0\u5e74\u524d\u6709\u4e00\u9879\u975e\u5e38\u6709\u8da3\u7684\u7814\u7a76\uff0c\u7814\u7a76\u4e86\u80fd\u91cf\u6d88\u8017\u3001\u6027\u80fd\u548c\u8bb0\u5fc6\u4f7f\u7528\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u8fd9\u662f\u53ef\u6301\u7eed\u53d1\u5c55\u9886\u57df\u7684\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u8bdd\u9898\u3002\u9274\u4e8e\u6211\u4eec\u5bf9\u670d\u52a1\u4e1a\u7684\u80fd\u6e90\u6216\u78b3\u4f7f\u7528\u4e86\u89e3\u751a\u5c11\uff0c\u6709\u6ca1\u6709\u4e00\u4e2a\u6307\u6807\u53ef\u4ee5\u4f5c\u4e3a\u66ff\u4ee3\u6307\u6807\uff1f\u6211\u662f\u5426\u53ef\u4ee5\u67e5\u770b\u73b0\u6709\u7684\u670d\u52a1\u4eea\u8868\u76d8\uff0c\u4e86\u89e3\u57fa\u7840\u8bbe\u65bd\u6210\u672c\u3001\u6027\u80fd\u3001\u5185\u5b58\u7b49\uff0c\u5e76\u4f7f\u7528\u6211\u770b\u5230\u7684\u8d8b\u52bf\u6765\u63a8\u65ad\u670d\u52a1\u80fd\u8017\u7684\u8d8b\u52bf\uff1f\n\u8fd9\u9879\u7814\u7a76\u6240\u505a\u7684\u662f\u752827\u79cd\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b010\u4e2a\u57fa\u51c6\u95ee\u9898\uff0c\u5e76\u6d4b\u91cf\u6267\u884c\u65f6\u95f4\u3001\u80fd\u8017\u548c\u5cf0\u503c\u5185\u5b58\u4f7f\u7528\u3002C\u548cRust\u5728\u80fd\u6e90\u6548\u7387\u65b9\u9762\u660e\u663e\u4f18\u4e8e\u5176\u4ed6\u8bed\u8a00\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u7684\u6548\u7387\u5927\u7ea6\u6bd4Java\u9ad850%\uff0c\u6bd4Python\u9ad898%\u3002\nC\u548cRust\u6bd4\u5176\u4ed6\u8bed\u8a00\u6548\u7387\u66f4\u9ad8\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\u3002\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u5dee\u5f02\u4e4b\u5927\u3002\u5e7f\u6cdb\u91c7\u7528C\u548cRust\u53ef\u4ee5\u5c06compute\u7684\u80fd\u8017\u964d\u4f4e50%\u2014\u2014\u5373\u4f7f\u4fdd\u5b88\u4f30\u8ba1\u4e5f\u662f\u5982\u6b64\u3002\n\u6240\u4ee5\u95ee\u9898\u662f\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u66f4\u591a\u7684C\uff1f\u8bed\u8a00\u548c\u5f00\u53d1\u5de5\u5177\u975e\u5e38\u6210\u719f\uff0c\u5f00\u53d1\u4eba\u5458\u793e\u533a\u7684\u89c4\u6a21\u6bd4Rust\u5927\u5f97\u591a\u3002\u57282021\u7684\u5f00\u6e90\u5cf0\u4f1a\u4e0a\uff0cLinux\u7684\u521b\u5efa\u8005Linus Torvalds\u627f\u8ba4\u5728C\u4e2d\u5b9e\u73b0\u4ee3\u7801\u53ef\u4ee5\u50cf\u73a9\u94fe\u952f\u4e00\u6837\u3002\u4f5c\u4e3a\u4e00\u540d\u7ec8\u8eab\u7684C\u7a0b\u5e8f\u5458\uff0c\u6258\u74e6\u5c14\u5179\u77e5\u9053\uff0c\u201c[C\u7684\u5fae\u5999\u7c7b\u578b\u4ea4\u4e92]\u5e76\u4e0d\u603b\u662f\u5408\u4e4e\u903b\u8f91\u7684\uff0c\u800c\u4e14\u5bf9\u51e0\u4e4e\u6240\u6709\u4eba\u6765\u8bf4\u90fd\u662f\u9677\u9631\u3002\u201d\n\u6258\u74e6\u5c14\u5179\u79f0\u751f\u9508\u662f\u4ed6\u89c1\u8fc7\u7684\u7b2c\u4e00\u79cd\u8bed\u8a00\uff0c\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002Rust\u63d0\u4f9b\u4e86C\u7684\u80fd\u91cf\u6548\u7387\uff0c\u800c\u6ca1\u6709\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u98ce\u9669\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u5931\u53bb\u8bb0\u5fc6\u5b89\u5168\u597d\u5904\u7684\u60c5\u51b5\u4e0b\u5c06\u80fd\u6e90\u6d88\u8017\u51cf\u534a\u3002\n\u51e0\u9879\u5206\u6790\u5f97\u51fa\u7ed3\u8bba\uff0c\u5728C/C++\u4e2d\u53d1\u751f\u7684\u9ad8\u4e25\u91cd\u6027CVE\u4e2d\uff0c70%\u4ee5\u4e0a\u53ef\u4ee5\u901a\u8fc7\u5728Rust\u4e2d\u5b9e\u65bd\u76f8\u540c\u7684\u89e3\u51b3\u65b9\u6848\u6765\u9884\u9632\u3002\u4e8b\u5b9e\u4e0a\uff0c\u652f\u6301Let\u2019s Encrypt\u9879\u76ee\uff082.6\u4ebf\u4e2a\u7f51\u7ad9\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\uff09\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u4e92\u8054\u7f51\u5b89\u5168\u7814\u7a76\u5c0f\u7ec4\uff08ISRG\uff09\u7684\u76ee\u6807\u662f\u8ba9\u6240\u6709\u5bf9\u4e92\u8054\u7f51\u5b89\u5168\u654f\u611f\u7684\u57fa\u7840\u8bbe\u65bd\u751f\u9508\u3002\u6b63\u5728\u8fdb\u884c\u7684\u9879\u76ee\u5305\u62ec\u5728Linux\u5185\u6838\u4e2d\u652f\u6301Rust\uff0c\u4ee5\u53ca\u5c06curl\u8fc1\u79fb\u5230TLS\u548cHTTP\u7684Rust\u5b9e\u73b0\u3002\n\u518d\u770b\u770b\u90a3\u9879\u5173\u4e8e\u76f8\u5173\u6027\u7684\u7814\u7a76\uff0c\u6211\u4eec\u5f97\u5230\u7684\u4e0d\u4ec5\u4ec5\u662f\u80fd\u6e90\u6d88\u8017\u7684\u6d4b\u91cf\u7ed3\u679c\u3002\u4e2d\u95f4\u4e00\u5217\u663e\u793a\u4e86\u6267\u884c\u65f6\u95f4\u7684\u7ed3\u679c\uff0cRust\u548cC\u7684\u65f6\u95f4\u975e\u5e38\u76f8\u4f3c\u3002\u8fd9\u4e24\u79cd\u8bed\u8a00\u7684\u6267\u884c\u901f\u5ea6\u90fd\u6bd4\u5176\u4ed6\u8bed\u8a00\u5feb\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u60a8\u9009\u62e9\u5728Rust\u4e2d\u5b9e\u73b0\u8f6f\u4ef6\u4ee5\u5b9e\u73b0\u53ef\u6301\u7eed\u6027\u548c\u5b89\u5168\u6027\u4f18\u52bf\u65f6\uff0c\u60a8\u8fd8\u53ef\u4ee5\u83b7\u5f97C\u7684\u4f18\u5316\u6027\u80fd\u3002\nTenable\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u66dd\u5149\u53ef\u89c1\u6027\u5de5\u5177\u7684\u7f51\u7edc\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u5546\uff0c\u4ed6\u4eec\u6709\u4e00\u4e2asidecar\u4ee3\u7406\uff0c\u53ef\u4ee5\u8fc7\u6ee4\u6389\u4e0d\u5fc5\u8981\u7684\u6307\u6807\u3002\u5b83\u662f\u7528JavaScript\u7f16\u5199\u7684\uff0c\u5df2\u7ecf\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5de5\u4f5c\u4e86\u51e0\u4e2a\u6708\uff0c\u4f46\u7531\u4e8e\u6269\u5c55\uff0c\u6027\u80fd\u5f00\u59cb\u4e0b\u964d\u3002Tenable\u51b3\u5b9a\u7528\u66f4\u9ad8\u6548\u7684\u8bed\u8a00\u91cd\u5199\u8fc7\u6ee4\u5668\uff0c\u4ed6\u4eec\u9009\u62e9Rust\u662f\u56e0\u4e3a\u5b83\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002\u7ed3\u679c\u662f\uff0c\u4e2d\u4f4d\u6570\u548cP95\u7684\u6f5c\u4f0f\u671f\u90fd\u63d0\u9ad8\u4e86\u7ea650%\u3002\n50%\u7684\u6027\u80fd\u6539\u8fdb\u662f\u5f88\u597d\u7684\uff0c\u4f46\u4e0b\u9762\u662f\u8be5\u8fc1\u79fb\u7684\u4e00\u4e9b\u5176\u4ed6\u56fe\u8868\u3002Tenable\u7684CPU\u4f7f\u7528\u7387\u548c\u5185\u5b58\u4f7f\u7528\u7387\u5206\u522b\u964d\u4f4e\u4e8675%\u548c95%\u3002\u8fd9\u662f\u5de8\u5927\u7684\u8282\u7ea6\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u8282\u7ea6\u4e86\u7f8e\u5143\uff0c\u800c\u662f\u8282\u7ea6\u4e86\u80fd\u6e90\u3002\u4ee5\u4e0b\u662f\u8282\u80fd\u3001\u53ef\u6301\u7eed\u5b9e\u65bd\u7684\u56fe\u8868\u3002\n\u5982\u4eca\uff0cRust\u6b63\u88ab\u7528\u4e8e\u8fd0\u9001\u771f\u5b9e\u4e16\u754c\u7684\u751f\u4ea7\u8f6f\u4ef6\uff0c\u4f46\u5f00\u53d1\u8005\u5e76\u4e0d\u662f\u4e3a\u4e86\u51cf\u5c11\u78b3\u6392\u653e\u800c\u9009\u62e9Rust\u3002\u5f53\u6211\u4eec\u95eeRust\u5f00\u53d1\u4eba\u5458\u4e3a\u4ec0\u4e48\u5f00\u59cb\u4f7f\u7528Rust\u65f6\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6700\u5e38\u89c1\u7684\u7b54\u6848\u662f\u8fd0\u884c\u65f6\u6027\u80fd\u7684\u4e00\u4e9b\u53d8\u5316\uff0c\u65e0\u8bba\u662f\u56e0\u4e3aRust\u66f4\u5feb\uff0c\u8fd8\u662f\u56e0\u4e3aRust\u5177\u6709\u66f4\u53ef\u9760\u7684\u5c3e\u90e8\u5ef6\u8fdf\u3002\u5b83\u51e0\u4e4e\u603b\u662f\u5173\u4e8e\u6027\u80fd\u3002\nDiscord\u6700\u521d\u662f\u4e00\u5bb6\u4ee5Python\u3001Go\u548cElixir\u4e3a\u4e3b\u7684\u5546\u5e97\uff0c\u4ed6\u4eec\u7684\u4e00\u9879\u5173\u952eGo\u670d\u52a1\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u670d\u52a1\uff0c\u4f46\u5c3e\u90e8\u5ef6\u8fdf\u5f88\u6162\u3002\u56e0\u4e3aGo\u662f\u4e00\u79cd\u5783\u573e\u6536\u96c6\uff08GC\uff09\u8bed\u8a00\uff0c\u5f53\u5bf9\u8c61\u88ab\u521b\u5efa\u548c\u91ca\u653e\u65f6\uff0c\u5783\u573e\u6536\u96c6\u5668\u7ecf\u5e38\u9700\u8981\u505c\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\u5e76\u8fd0\u884c\u5783\u573e\u6536\u96c6\u8fc7\u7a0b\u3002\u5f53GC\u8fd0\u884c\u65f6\uff0c\u8fdb\u7a0b\u65e0\u6cd5\u54cd\u5e94\u8bf7\u6c42\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u770b\u5230CPU\u4e0a\u7684\u5cf0\u503c\u548c\u54cd\u5e94\u65f6\u95f4\u56fe\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cDiscord\u51b3\u5b9a\u5c1d\u8bd5\u5728Rust\u4e2d\u91cd\u5199\u670d\u52a1\uff0c\u7ed3\u679c\u5982\u4e0b\u3002Go\u5b9e\u73b0\u5728\u5de6\u8fb9\uff0cRust\u5b9e\u73b0\u5728\u53f3\u8fb9\u3002\u867d\u7136GC\u5c16\u5cf0\u6a21\u5f0f\u5728\u9508\u8ff9\u56fe\u4e0a\u6d88\u5931\u4e86\uff0c\u4f46\u771f\u6b63\u60ca\u4eba\u7684\u533a\u522b\u662f\u53d8\u5316\u7684\u5e45\u5ea6\u3002Go\u548cRust\u56fe\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u5355\u4f4d\u3002\n\u751f\u9508\u7248\u672c\u7684\u901f\u5ea6\u662f\u6240\u6709\u7248\u672c\u768410\u500d\u4ee5\u4e0a\uff0c\u6700\u7cdf\u7cd5\u7684\u5c3e\u90e8\u5ef6\u8fdf\u51cf\u5c11\u4e86100\u500d\u3002\u8fd9\u4e9b\u90fd\u662f\u96be\u4ee5\u7f6e\u4fe1\u7684\u6539\u8fdb\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u54cd\u5e94\u8bf7\u6c42\uff0c\u6240\u4ee5\u9700\u8981\u7684\u670d\u52a1\u5668\u66f4\u5c11\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528\u7684\u80fd\u6e90\u66f4\u5c11\u3002\u867d\u7136Discord\u6ca1\u6709\u51b3\u5b9a\u5f00\u59cb\u4f7f\u7528\u751f\u9508\u6765\u51cf\u5c11\u80fd\u6e90\u6d88\u8017\uff0c\u4f46\u8fd9\u5c31\u662f\u5f71\u54cd\u3002\n\u518d\u8bf4\u4e00\u6b21\uff0cRust\u5e76\u4e0d\u662f\u7b2c\u4e00\u79cd\u9ad8\u6548\u7684\u8bed\u8a00\u3002C\u8bed\u8a00\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4f46Rust\u662f\u7b2c\u4e00\u79cd\u9ad8\u6548\u4e14\u4e0d\u727a\u7272\u5b89\u5168\u6027\u7684\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u3002\u5728C\u548cC++\u4e2d\u5199\u7684\u6240\u6709\u4e25\u91cd\u7684\u5b89\u5168\u6f0f\u6d1e\u4e2d\uff0c\u670970%\u662f\u7531\u4e8e\u5185\u5b58\u4e0d\u5b89\u5168\uff0c\u800c\u751f\u9508\u4f1a\u7ed9\u4f60\u5e26\u6765\u6548\u7387\uff0c\u800c\u4e0d\u4f1a\u611f\u89c9\u5230\u4f60\u5728\u73a9\u706b\u3002\n\u5927\u591a\u6570\u8bed\u8a00\u901a\u8fc7\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u5783\u573e\u6536\u96c6\u5668\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u6765\u5b9e\u73b0\u5185\u5b58\u5b89\u5168\u3002\u5783\u573e\u6536\u96c6\u5668\u8ddf\u8e2a\u5bf9\u5185\u5b58\u5757\u7684\u672a\u5b8c\u6210\u5f15\u7528\uff0c\u5f53\u6240\u6709\u5f15\u7528\u90fd\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u53ef\u4ee5\u91ca\u653e\u5173\u8054\u7684\u5185\u5b58\u3002\nRust\u6ca1\u6709\u4f7f\u7528\u5783\u573e\u6536\u96c6\u5668\u6765\u7ef4\u62a4\u5b89\u5168\uff0c\u800c\u662f\u4f7f\u7528\u6240\u6709\u6743\u548c\u501f\u9605\u68c0\u67e5\u3002\u6240\u6709\u6743\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u5bf9Rust\u7f16\u7a0b\u8bed\u8a00\u7684\u5176\u4ed6\u90e8\u5206\u6709\u7740\u6df1\u523b\u7684\u5f71\u54cd\u3002\u5728Rust\u4e2d\uff0c\u6240\u6709\u5185\u5b58\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u53d8\u91cf\u3002\u8be5\u53d8\u91cf\u79f0\u4e3a\u5176\u6240\u6709\u8005\u3002\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\u6240\u6709\u8005\uff0c\u4f46\u6570\u636e\u7684\u6240\u6709\u6743\u53ef\u4ee5\u4f20\u9012\u3002\n\u9996\u5148\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u4f7f\u7528Go\u4f20\u9012\u6d88\u606f\u7684\u793a\u4f8b\u3002\u5728\u5de6\u4fa7\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4efd\u793c\u7269\uff0c\u7136\u540e\u901a\u8fc7\u901a\u9053\u53d1\u9001\u3002\u5728\u53f3\u8fb9\u7684\u5176\u4ed6\u56f4\u68cb\u7a0b\u5e8f\u4e2d\uff0c\u793c\u7269\u4f1a\u88ab\u6536\u5230\u5e76\u6253\u5f00\u3002Go\u7684\u5783\u573e\u6536\u96c6\u5668\u5c06\u4e3a\u6211\u4eec\u7ba1\u7406\u5185\u5b58\u3002\u7136\u800c\uff0c\u5728\u5de6\u8fb9\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5728\u5c06\u793c\u7269\u53d1\u9001\u5230\u9891\u9053\u540e\u610f\u5916\u6253\u5f00\u4e86\u5b83\u3002\u793c\u7269\u5c06\u88ab\u6253\u5f00\u4e24\u6b21\uff0c\u5bfc\u81f4\u4e00\u4e2a\u9519\u8bef\u3002\n\u4e0b\u9762\u662f\u4e0eRust\u76f8\u540c\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b\u3002\u793c\u7269\u88ab\u521b\u9020\u548c\u5206\u914d\u3002\u6211\u4eec\u8bf4'gift'\u53d8\u91cf\u62e5\u6709\u6570\u636e\u3002\u793c\u7269\u7684\u6240\u6709\u6743\u88ab\u8f6c\u79fb\u5230\u6e20\u9053\u4e2d\u3002\u6e20\u9053\u6d88\u8d39\u8005\u6536\u5230\u793c\u7269\uff0c\u83b7\u5f97\u6240\u6709\u6743\uff0c\u5e76\u80fd\u591f\u6253\u5f00\u793c\u7269\u3002\u5982\u679c\u6211\u4eec\u5728\u5c06\u793c\u7269\u53d1\u9001\u5230\u9891\u9053\u540e\u8bd5\u56fe\u6253\u5f00\u5b83\uff0c\u7f16\u8bd1\u5668\u4f1a\u5bf9\u6211\u4eec\u5927\u558a\u5927\u53eb\uff0c\u56e0\u4e3a\u6211\u4eec\u8fdd\u53cd\u4e86\u6240\u6709\u6743\u89c4\u5219\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u9508\u83cc\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u9884\u9632\u866b\u5b50\u3002\n\u56e0\u4e3aRust\u5f3a\u5236\u6267\u884c\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\u62e5\u6709\u6570\u636e\u7684\u89c4\u5219\uff0c\u6240\u4ee5\u5f53\u8be5\u53d8\u91cf\u8d85\u51fa\u8303\u56f4\u800c\u4e0d\u5192\u5145\u6240\u6709\u6743\u65f6\uff0c\u5c31\u4e0d\u53ef\u80fd\u8bbf\u95ee\u6570\u636e\u3002Rust\u5229\u7528\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u5c06\u5728\u8be5\u70b9\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u3002\u65e0\u9700\u624b\u52a8\u91ca\u653e\u5185\u5b58\u3002\nRust\u7684\u6240\u6709\u6743\u6a21\u578b\u662f\u7c7b\u578b\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u57fa\u4e8e\u4e00\u4e2a\u79f0\u4e3a\u4eff\u5c04\u7c7b\u578b\u7684\u6982\u5ff5\u3002\u4eff\u5c04\u7c7b\u578b\u89c4\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u6700\u591a\u4f7f\u7528\u4e00\u6b21\u3002\u5173\u952e\u662f\u5b9a\u4e49\u201c\u4f7f\u7528\u201d\u7684\u542b\u4e49\u3002\u5728\u751f\u9508\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u8981\u4e48\u79fb\u52a8\u6570\u636e\uff0c\u8981\u4e48\u4e22\u5f03\u6570\u636e\u3002\u901a\u8fc7\u4f7f\u7528\u4eff\u5c04\u7c7b\u578b\uff0cRust\u7f16\u8bd1\u5668\u80fd\u591f\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u63a8\u7406\u5e76\u6267\u884c\u5176\u6240\u6709\u6743\u89c4\u5219\u3002\nRust\u4f7f\u7528\u7684\u4eff\u5c04\u7c7b\u578b\u7cfb\u7edf\u57fa\u4e8e\u4e0a\u4e16\u7eaa90\u5e74\u4ee3\u521d\u7684\u5de5\u4f5c\uff0c\u5f53\u65f6\u4e00\u4e9b\u4eba\u8bd5\u56fe\u8bbe\u8ba1\u4e00\u4e2a\u65e0\u5783\u573e\u6536\u96c6\u5668\u7684lisp\u3002\u867d\u7136\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u4f46\u4ed6\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u65e0\u6cd5\u5bf9\u540c\u4e00\u6570\u636e\u6bb5\u8fdb\u884c\u591a\u4e2a\u5f15\u7528\u800c\u5f15\u5165\u7684\u8fc7\u5ea6\u590d\u5236\uff0c\u4ed6\u4eec\u5931\u53bb\u4e86\u5f88\u591a\u8fd0\u884c\u65f6\u6027\u80fd\u3002\n\u8fd9\u5c31\u8ba9\u6211\u4eec\u770b\u5230\u4e86\u7b2c\u4e8c\u4e2a\u8ba9\u9508\u8ff9\u5f97\u4ee5\u5b58\u5728\u7684\u521b\u65b0\uff1a\u501f\u9605\u68c0\u67e5\u5668\u3002\u5728\u7f16\u5199\u5927\u578b\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u4f7f\u7528\u62bd\u8c61\u6765\u5e2e\u52a9\u7ec4\u7ec7\u60f3\u6cd5\u3002\u4f60\u53ef\u80fd\u719f\u6089\u7684\u4e00\u79cd\u62bd\u8c61\u662f\u51fd\u6570\u3002\u51fd\u6570\u901a\u5e38\u9700\u8981\u53c2\u6570\u3002\u5982\u679c\u53ea\u6709\u6240\u6709\u6743\uff0c\u8981\u8c03\u7528\u51fd\u6570\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u7684\u6240\u6709\u6743\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u51fd\u6570\u9700\u8981\u5728\u8fd4\u56de\u65f6\u5c06\u6570\u636e\u7684\u6240\u6709\u6743\u4f20\u9012\u56de\u3002\u8fd9\u9700\u8981\u590d\u5236\u5468\u56f4\u7684\u5185\u5b58\uff0c\u5e76\u4e14\u662f\u65e0\u5783\u573e\u6536\u96c6\u5668lisp\u6027\u80fd\u6311\u6218\u7684\u6839\u6e90\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cRust\u5141\u8bb8\u60a8\u501f\u7528\u6570\u636e\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u6709\u5929\u8d4b\uff0c\u6211\u4eec\u5c31\u62e5\u6709\u5b83\u3002\u8fd9\u662f\u6211\u4eec\u7684\u3002\u5982\u679c\u6211\u4eec\u7684\u670b\u53cb\u60f3\u6b23\u8d4f\u5b83\uff0c\u5979\u53ef\u4ee5\u501f\u4e00\u4f1a\u513f\uff0c\u4f46\u5979\u5fc5\u987b\u628a\u5b83\u8fd8\u7ed9\u6211\u4eec\u3002\u6b64\u5916\uff0c\u5f53\u6211\u4eec\u7684\u670b\u53cb\u501f\u793c\u7269\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u5c06\u793c\u7269\u7684\u6240\u6709\u6743\u79fb\u4ea4\u7ed9\u5176\u4ed6\u4efb\u4f55\u4eba\uff0c\u56e0\u4e3a\u793c\u7269\u76ee\u524d\u6b63\u5728\u88ab\u501f\u3002\u6700\u5173\u952e\u7684\u662f\uff0cRust\u7f16\u8bd1\u5668\u6267\u884c\u8fd9\u4e9b\u89c4\u5219\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u670b\u53cb\u4e0d\u80fd\u5e26\u7740\u793c\u7269\u8dd1\u4e86\u3002\u7531\u4e8eRust\u7f16\u8bd1\u5668\u5f3a\u5236\u6267\u884c\u8fd9\u4e00\u4fdd\u8bc1\uff0c\u56e0\u6b64\u5728\u501f\u7528\u6570\u636e\u65f6\uff0c\u4e0d\u5fc5\u590d\u5236\u5185\u5b58\u3002\u5185\u5b58\u4fdd\u6301\u5728\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u5e76\u4f20\u9012\u6307\u9488\u3002\u6307\u9488\u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002\u5f53\u4f60\u628a\u5b83\u4eec\u653e\u5728\u4e00\u8d77\uff0c\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u9ad8\u6548\u7684\u7cfb\u7edf\uff0c\u53ef\u4ee5\u9632\u6b62\u9519\u8bef\uff0c\u5373\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u66f4\u5927\u3001\u66f4\u590d\u6742\u3002\n\u9632\u6b62\u5185\u5b58\u4e0d\u5b89\u5168\u7684\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u9632\u6b62\u6570\u636e\u7ade\u4e89\uff0c\u8fd9\u662f\u4e00\u79cd\u5e76\u53d1\u9519\u8bef\u3002\u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u6570\u636e\uff0c\u4e14\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u8bbf\u95ee\u662f\u53d8\u5f02\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6570\u636e\u7ade\u4e89\u3002\u5bf9\u6240\u6709\u6743\u548c\u501f\u7528\u8fdb\u884c\u5efa\u6a21\u7684\u7c7b\u578b\u7cfb\u7edf\u80fd\u591f\u8de8\u591a\u4e2a\u7ebf\u7a0b\u7ef4\u62a4\u76f8\u540c\u7684\u4fdd\u8bc1\uff0c\u4ece\u800c\u66f4\u79ef\u6781\u5730\u4f7f\u7528\u5e76\u53d1\u6027\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u5411Rust\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u5730\u6dfb\u52a0\u5e76\u53d1\u6027\u662f\u591a\u4e48\u5bb9\u6613\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u904d\u5386\u4e00\u4e2a\u6570\u5b57\u6570\u7ec4\uff0c\u5e76\u5bf9\u6240\u6709\u5076\u6570\u6c42\u548c\u3002\u8fd9\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u5e76\u884c\u5316\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u975e\u5e38\u5927\u7684\u9635\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u6dfb\u52a0\u5e76\u53d1\u6027\uff0c\u51fd\u6570\u7684\u901f\u5ea6\u663e\u8457\u52a0\u5feb\u3002\n\u5de6\u4fa7\u663e\u793a\u5355\u7ebf\u7a0b\u7248\u672c\uff0c\u53f3\u4fa7\u663e\u793a\u4f7f\u7528\u4eba\u9020\u4e1d\u5e93\u7684\u5e76\u884c\u7248\u672c\u3002\u770b\u770b\u8fd9\u4e9b\u529f\u80fd\u6709\u591a\u76f8\u4f3c\u3002\u901a\u8fc7\u57fa\u672c\u4e0a\u7f16\u5199\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u5728\u6ca1\u6709\u5371\u9669\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u5e76\u53d1\u7684\u6240\u6709\u529f\u80fd\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\u6211\u4eec\u4f7f\u7528par_iter\uff08\uff09\u65b9\u6cd5\u800c\u4e0d\u662fiter\uff08\uff09\u3002\n\u5e76\u884c\u7248\u672c\u5c06\u628a\u8ba1\u7b97\u6269\u5c55\u5230\u591a\u4e2a\u7ebf\u7a0b\uff0c\u540c\u65f6\u907f\u514d\u590d\u5236\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u6570\u5b57\u6570\u7ec4\u3002\u7531\u4e8eRust\u7684\u6240\u6709\u6743\u548c\u501f\u9605\u68c0\u67e5\u7cfb\u7edf\uff0c\u4eba\u9020\u4e1d\u80fd\u591f\u5b89\u5168\u5730\u63d0\u4f9b\u8fd9\u79cdAPI\u3002\u6240\u6709\u4fdd\u8bc1\u5b89\u5168\u7684\u68c0\u67e5\u90fd\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\u3002\n\u5e0c\u671b\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba9\u4f60\u4eec\u5bf9\u9508\u8ff9\u611f\u5174\u8da3\uff0c\u5e76\u5f00\u59cb\u4f60\u4eec\u5728\u4e91\u7aef\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u4e4b\u65c5\u3002\u90a3\u4e48\u4ece\u54ea\u91cc\u5f00\u59cb\u5462\uff1f\u597d\u6d88\u606f\u662f\uff0c\u4f60\u9700\u8981\u7684\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u5728\u7f51\u4e0a\u83b7\u5f97\uff0c\u4f60\u53ef\u4ee5\u53bb\u4e00\u4e9b\u5730\u65b9\u5f00\u59cb\u3002\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u5b66\u4e60Rust\u7f16\u7a0b\u8bed\u8a00\u3002\u94c1\u9508\u4e66\u662f\u5f00\u59cb\u5b66\u4e60\u8bed\u8a00\u7684\u7edd\u4f73\u8d44\u6e90\u3002\u5b83\u5c06\u5e2e\u52a9\u4f60\u5b89\u88c5Rust\u5de5\u5177\u94fe\uff0c\u5e76\u6559\u4f60\u8be5\u8bed\u8a00\u3002\u8be5\u7f51\u7ad9\u8fd8\u63d0\u4f9b\u7ec3\u4e60\u548c\u5927\u91cf\u4ee3\u7801\u793a\u4f8b\u4f9b\u9605\u8bfb\u3002\u5982\u679c\u4f60\u5728\u4efb\u4f55\u65f6\u5019\u9047\u5230\u56f0\u96be\u3001\u6709\u95ee\u9898\u6216\u9700\u8981\u6f84\u6e05\uff0c\u4f60\u53ef\u4ee5\u5728\u7528\u6237\u8bba\u575b\u4e0a\u53d1\u5e16\u6216\u76f4\u63a5\u5728\u793e\u533aDiscord\u670d\u52a1\u5668\u4e0a\u804a\u5929\u3002Discord\u670d\u52a1\u5668\u901a\u5e38\u662f\u83b7\u5f97\u5e2e\u52a9\u7684\u6700\u5feb\u65b9\u5f0f\u3002\u90a3\u91cc\u603b\u662f\u6709\u6d3b\u8dc3\u7684\u4eba\u53ef\u4ee5\u5b9e\u65f6\u56de\u7b54\u95ee\u9898\u3002\n\u4e00\u65e6\u4f60\u6d4f\u89c8\u4e86Rust\u7f51\u7ad9\uff0c\u4f60\u5e94\u8be5\u4f1a\u5f88\u8212\u670d\u5730\u5f00\u59cb\u5efa\u9020\u4e1c\u897f\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u8d44\u6e90\u6765\u6df1\u5165\u6316\u6398\u3002\u300a\u9508\u58f3\u300b\u662fJon Gjenset\u7684youtube\u9891\u9053\u3002\u4ed6\u786e\u5b9e\u6df1\u5165\u7814\u7a76\u4e86\u5404\u79cd\u4e0e\u751f\u9508\u6709\u5173\u7684\u8bdd\u9898\uff0c\u63ed\u5f00\u4e86\u5f15\u64ce\u76d6\uff0c\u89e3\u91ca\u4e86\u4e8b\u60c5\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u4ed6\u7684\u89c6\u9891\u957f\u8fbe\u6570\u5c0f\u65f6\uff0c\u4f46\u6211\u4eec\u4e0d\u65ad\u542c\u5230\u4eba\u4eec\u8bf4\u8fd9\u4e9b\u89c6\u9891\u5bf9\u5b66\u4e60\u9508\u83cc\u6709\u591a\u4e48\u91cd\u8981\u3002\n\u94c1\u9508\u5f88\u96be\u5b66\u3002\u5728\u5bf92020\u5e74Rust\u7528\u6237\u8c03\u67e5\u505a\u51fa\u56de\u5e94\u76848000\u591a\u540d\u5f00\u53d1\u8005\u4e2d\uff0c\u53ea\u6709\u5927\u7ea6100\u4eba\u88ab\u8ba4\u5b9a\u4e3a\u201c\u4e13\u5bb6\u201d\uff0c\u5728\u8868\u793a\u4e0d\u518d\u4f7f\u7528Rust\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c55%\u7684\u4eba\u8ba4\u4e3a\u5b66\u4e60\u6216\u751f\u4ea7\u529b\u662f\u4ed6\u4eec\u653e\u5f03\u8be5\u8bed\u8a00\u7684\u539f\u56e0\u3002\n\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5de5\u7a0b\u5e08\u9700\u89813-6\u4e2a\u6708\u7684\u7814\u7a76\uff0c\u5e76\u83b7\u5f97\u4e3b\u9898\u4e13\u5bb6\u7684\u652f\u6301\uff0c\u624d\u80fd\u5728\u751f\u9508\u95ee\u9898\u4e0a\u53d6\u5f97\u6210\u6548\u3002\u4e00\u4e9b\u5de5\u7a0b\u5e08\u5c06\u5b66\u4e60\u9508\u75c5\u6bd4\u4f5c\u5b66\u4e60\u5403\u852c\u83dc\uff0c\u867d\u7136\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4e00\u65e6\u6709\u4e86\u751f\u4ea7\u529b\u5c31\u559c\u6b22\u9508\u75c5\uff0c\u4f46\u8bb8\u591a\u5de5\u7a0b\u5e08\u51b3\u5b9a\u4e0d\u5b66\u4e60\u9508\u75c5\uff0c\u6216\u8005\u5728\u4ed6\u4eec\u53d8\u5f97\u6709\u751f\u4ea7\u529b\u4e4b\u524d\u653e\u5f03\u52aa\u529b\u3002\u9508\u75c5\u5bf9\u53ef\u6301\u7eed\u6027\u548c\u5b89\u5168\u6027\u7684\u6f5c\u5728\u5f71\u54cd\u53ea\u6709\u5728\u6211\u4eec\u628a\u897f\u5170\u82b1\u53d8\u6210\u5de7\u514b\u529b\u997c\u65f6\u624d\u4f1a\u663e\u73b0\u51fa\u6765\u3002\n\u6ca1\u6709\u4e00\u5bb6\u5f00\u53d1\u5546\u3001\u670d\u52a1\u6216\u516c\u53f8\u80fd\u591f\u5bf9\u53ef\u6301\u7eed\u6027\u4ea7\u751f\u5b9e\u8d28\u6027\u5f71\u54cd\u3002\u91c7\u7528\u9508\u8ff9\u5c31\u50cf\u56de\u6536\uff1b\u53ea\u6709\u6211\u4eec\u90fd\u53c2\u4e0e\uff0c\u5b83\u624d\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u4e3a\u4e86\u5b9e\u73b0\u5e7f\u6cdb\u7684\u91c7\u7528\uff0c\u6211\u4eec\u5fc5\u987b\u53d1\u5c55\u5f00\u53d1\u8005\u793e\u533a\u3002\nRust\u5f00\u53d1\u8005\u793e\u533a\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u589e\u957f\u6700\u5feb\uff0c\u4f46\u6839\u636e\u5386\u53f2\u8d8b\u52bf\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728\u8fc7\u53bb12\u4e2a\u6708\u52a0\u5165Rust\u793e\u533a\u768450\u4e07\u5f00\u53d1\u8005\u4e2d\uff0c\u5927\u591a\u6570\u4eba\u8fd8\u4e0d\u7cbe\u901a\u8be5\u8bed\u8a00\u3002\u6211\u4eec\u5728Rust developer\u4f53\u9a8c\u65b9\u9762\u8fd8\u6709\u4e00\u4e9b\u5de5\u4f5c\u8981\u505a\u3002\n\u63d0\u51fa\u7684\u95ee\u9898\u662f\u54ea\u79cd\u5f00\u53d1\u8005\u4f53\u9a8c\uff1f\u4e0e\u6784\u5efa\u6570\u636e\u5e93\u670d\u52a1\u7684\u5de5\u7a0b\u5e08\u6216\u63d0\u4f9b\u96f6\u552e\u7f51\u7ad9\u7684\u5de5\u7a0b\u5e08\u76f8\u6bd4\uff0c\u5f00\u53d1Linux\u5185\u6838\u7684\u5de5\u7a0b\u5e08\u6709\u7740\u622a\u7136\u4e0d\u540c\u7684\u7406\u60f3\u5f00\u53d1\u4f53\u9a8c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5916\u89c2\u8bc6\u522b\u7528\u6237\u89d2\u8272\n......", "note_en": "Rust is a programming language implemented as a set of open source projects. It combines the performance and resource efficiency of systems programming languages like C with the memory safety of languages like Java. Rust started as a research project at Mozilla in 2010, and Rust 1.0 launched in 2015. In 2020, support for Rust moved from Mozilla to the  Rust Foundation, a non-profit organization created as a partnership between Amazon Web Services, Inc (AWS), Google, Huawei, Microsoft, and Mozilla. The Foundation\u2019s mission is to support the growth and innovation of Rust, and the member companies have grown from the founding 5 to 27 companies in the first year.\n  At AWS, Rust has quickly become critical to building infrastructure at scale.  Firecracker is an open source virtualization technology that powers  AWS Lambda and other serverless offerings. It launched publicly in 2018 as our first notable product implemented in Rust. We use Rust to deliver services such as  Amazon Simple Storage Service (Amazon S3),  Amazon Elastic Compute Cloud (Amazon EC2),  Amazon CloudFront, and more. In 2020, we launched  Bottlerocket, a Linux-based container operating system written in Rust, and our Amazon EC2 team uses Rust as the language of choice for new  AWS Nitro System components, including sensitive applications, such as  Nitro Enclaves.\n  At AWS, we believe leaders create more than they consume and always leave things better than they found them. In 2019,  AWS was proud to become a sponsor of the Rust project. In 2020,  we started hiring Rust maintainers and contributors, and  we partnered with Google, Huawei, Microsoft, and Mozilla to create the Rust Foundation with a mission to support Rust. AWS is investing in the sustainability of Rust, a language we believe should be used to build sustainable and secure solutions.\n      Source: IEA (2021),  Global data centre energy demand by data centre type, 2010-2022, https://www.iea.org/data-and-statistics/charts/global-data-centre-energy-demand-by-data-centre-type-2010-2022. All rights reserved.\n  Worldwide,  data centers consume about 200 terawatt hours per year. That\u2019s roughly 1% of all energy consumed on our planet. There are a couple of really interesting things about the details of that energy use. If you look at the graph of energy consumption, the top line is basically flat going back as far as 2010. That\u2019s incredibly counter-intuitive give the tremendous growth of big data, machine learning, and edge devices our industry has experienced over that same period of time.\n  The second interesting detail is that while the top line of the graph is flat, inside the graph, the distribution over traditional, cloud, and hyperscale data centers has changed dramatically in the same period. Those cloud and hyperscale data centers have been implementing huge energy efficiency improvements, and the migration to that cloud infrastructure has been keeping the total energy use of data centers in balance despite massive growth in storage and compute for more than a decade.\n  There have been too many data center efficiency improvements to list, but here are a few examples. In compute, we\u2019ve made efficiency improvements in hardware and implemented smarter utilization of resources to reduce idle time. We\u2019ve slowed the growth of our servers with support for multi-instance and multi-tenant, and we\u2019ve improved drive density and efficiency for storage. We\u2019ve also adopted more energy efficient building materials and cooling systems.\n  As incredible as that success story is, there are two questions it raises. First, is the status quo good enough? Is keeping data center energy use to 1% of worldwide energy consumption adequate? The second question is whether innovations in energy efficiency will continue to keep pace with growth in storage and compute in the future? Given the explosion we know is coming in autonomous drones, delivery robots, and vehicles, and the incredible amount of data consumption, processing, and machine learning training and inference required to support those technologies, it seems unlikely that energy efficiency innovations will be able to keep pace with demand.\n    The energy efficiency improvements we\u2019ve talked about so far have been the responsibility of AWS, but just like security, sustainability is a shared responsibility. AWS customers are responsible for energy efficient choices in storage policies, software design, and compute utilization, while AWS owns efficiencies in hardware, utilization features, and cooling systems. We are also making huge investments in renewable energy.\n  AWS is on a path to have 100% of our data centers powered with renewable energy by 2025, but even renewables have an environmental impact. It will take about half a million acres of solar panels to generate the 200 terawatt hours of energy used by data centers today. The mining, manufacturing, and management of that many solar panels has substantial environmental impact. So, while we\u2019re really proud of our success with renewable energy, as Peter DeSantis, SVP, AWS said at re:Invent 2020, \u201cThe greenest energy is the energy we don\u2019t use.\u201d\n  Renewables should not replace energy efficiency as a design principle. In the same way that operational excellence, security, and reliability have been principles of traditional software design, sustainability must be a principle in modern software design. That\u2019s why  AWS announced a sixth pillar for sustainability to the AWS Well-Architected Framework.\n  What that looks like in practice is choices like relaxing SLAs for non-critical functions and prioritizing resource use efficiency. We can take advantage of virtualization and allow for longer device upgrade cycles. We can leverage caching and longer TTLs whenever possible. We can classify our data and implement automated lifecycle policies that delete data as soon as possible. When we choose algorithms for cryptography and compression, we can include efficiency in our decision criteria. Last, but not least, we can choose to implement our software in energy efficient programming languages.\n    There was a really interesting study a few years ago that looked at the correlation between energy consumption, performance, and memory use. This is a really common conversation in sustainability. Given how little visibility we have into energy or carbon use by our services, is there a metric that can serve as a proxy? Can I look at my existing service dashboards with infrastructure costs, performance, memory, etc and use the trends I see to infer something about the trends in my service\u2019s energy consumption?\n  What the study did is implement 10 benchmark problems in 27 different programming languages and measure execution time, energy consumption, and peak memory use. C and Rust significantly outperformed other languages in energy efficiency. In fact, they were roughly 50% more efficient than Java and 98% more efficient than Python.\n    It\u2019s not a surprise that C and Rust are more efficient than other languages. What is shocking is the magnitude of the difference. Broad adoption of C and Rust could reduce energy consumption of compute by 50% \u2013 even with a conservative estimate.\n  So the question is why not use more C? The language and developer tools are extremely mature, and the size of the developer community is much bigger than Rust. During his keynote at Open Source Summit in 2021,  Linus Torvalds, the creator of Linux, acknowledged that implementing code in C can be like juggling chainsaws. As a lifelong C programmer, Torvalds knows that, \u201c[C\u2019s subtle type interactions] are not always logical [and] are pitfalls for pretty much anybody.\u201d\n  Torvalds called Rust the first language he\u2019s seen that might actually be a solution. Rust delivers the energy efficiency of C without the risk of undefined behavior. We can cut energy use in half without losing the benefits of memory safety.\n  Several analyses have concluded that more than 70% of the high severity CVEs that occur in C/C++ would be prevented by implementing those same solutions in Rust. In fact, the Internet Security Research Group (ISRG), the nonprofit that supports the Let\u2019s Encrypt project, the Certificate Authority for 260 million websites, has a  goal to move all internet security sensitive infrastructure to Rust. The projects underway include support for Rust in the Linux kernel and migrating curl to Rust implementations of TLS and HTTP.\n      Looking again at that study about correlation, we have measurements for more than just energy consumption. The middle column shows the results for execution time, and the times for Rust and C are really similar. Both languages are executing faster than other languages. That means, when you choose to implement your software in Rust for the sustainability and security benefits, you also get the optimized performance of C.\n            Tenable is a cyber security solutions provider focused on exposure visibility tools, and they had a sidecar agent that filtered out unnecessary metrics. It was written in JavaScript and had been working in production for a few months when the performance started to degrade due to scaling. Tenable decided to rewrite the filter in a more efficient language, and they chose Rust for its performance and safety. The result was about a 50% improvement in latency at both the median and the P95.\n        50% performance improvements are great, but here are some other graphs from that migration. Tenable also saw a 75% reduction in CPU usage and a 95% reduction in memory usage. That is substantial savings, and that\u2019s not just dollars saved \u2013 that\u2019s energy saved. These are the graphs of an energy efficient, sustainable implementation.\n  Rust is being used today to ship real world production software, but developers aren\u2019t choosing Rust to reduce carbon emissions. When we ask Rust developers why they started using Rust, by far the most common answer is some variant of runtime performance, whether it is because Rust is faster or because Rust has more reliable tail latencies. It\u2019s almost always about performance.\n        Discord started as a mostly Python, Go, and Elixir shop, and they had a problem with one of their key Go services. It was a pretty simple service, but it had slow tail latencies. Because Go is a garbage collection (GC) language, as objects are created and released, every so often, the garbage collector needs to stop execution of the program and run a garbage collection pass. While the GC is running, the process is unable to respond to requests, and you can see the spikes on the CPU and response time graphs when it\u2019s running.\n      To fix the issue, Discord decided to try rewriting the service in Rust, and these are the results. The Go implementation is on the left and the Rust implementation is on the right. While the GC spike pattern is gone on the Rust graph, the really amazing difference is the magnitude of the change. The Go and Rust graphs are actually using different units.\n  The Rust version is more than 10 times faster over all with the worst tail latencies reduced 100 times. These are incredible improvements, and because the server is able to respond to requests far more efficiently, fewer servers are needed, which means that less energy is used. While Discord didn\u2019t decide to start using Rust to reduce energy consumption, that\u2019s the impact.\n  Again, Rust isn\u2019t the first efficient language. C has been around for a long time, but Rust is the first mainstream programming language that is efficient without sacrificing safety. 70% of all high severity security vulnerabilities written with C and C++ are due to memory unsafety, and Rust gives you efficiency without feeling like you\u2019re playing with fire.\n    Most languages achieve memory safety by automatically managing memory at runtime with a garbage collector. Garbage collectors track outstanding references to a piece of memory and when all references go out of scope, the associated memory can be freed.\n  Instead of using a garbage collector to maintain safety, Rust uses ownership and borrow checking. Ownership is fairly simple but has deep implications for the rest of the Rust programming language. In Rust, all memory is owned by a single variable. That variable is called its owner. There can be only one owner at a time, but ownership of the data can be passed around.\n    First, here is an example of message passing with Go. On the left side, we create a gift, then send it via the channel. On some other go routine on the right side, the gift is received and opened. The Go\u2019s garbage collector is going to manage the memory for us. However, in the code on the left side, we accidentally opened the gift after sending it into the channel. The gift is going to be opened twice, resulting in a bug.\n    Here is the same message passing example with Rust. The gift is created and assigned. We say that the `gift` variable owns the data. Ownership of the gift is passed into the channel. The channel consumer receives the gift, taking ownership, and is able to open it. If we try to open the gift after sending it into the channel, the compiler will shout at us, because we are violating the ownership rules. Already, we are seeing how Rust helps us prevent bugs.\n    Because Rust enforces the rule that only one variable owns data, when that variable goes out of scope  without passing off ownership, there is no possible way for the data to be accessed. Rust takes advantage of that and will automatically free the memory at that point. There is no need to manually free the memory.\n  Rust\u2019s ownership model is part of the type system and based on a concept called  affine types. An affine type imposes a rule that every variable is used at most once. The key is to define what \u201cused\u201d means. In the context of Rust, a use is either moving the data or dropping it. By using affine types, the Rust compiler is able to reason about a program and enforce its ownership rules.\n  The affine type system used by Rust is based on the work done in the early 1990s, when some folks attempted to design a garbage collector free lisp. While successful, they found that they lost a lot of runtime performance due to the excessive copying introduced by not being able to have multiple references to the same piece of data.\n    And this gets us to the second innovation that has enabled Rust: the borrow checker. When writing larger programs we tend to use abstractions to help organize ideas. One abstraction that you\u2019re probably familiar with is a function. Functions often require arguments. With only ownership, to call a function, we would need to pass ownership of the data into the function and the function would need to pass ownership of the data back when returning. This requires copying memory around and was the source of garbage collector-less lisp performance challenges.\n    To solve this, Rust lets you borrow data. So, if we have a gift, we own it it. It is ours. If our friend wants to admire it, she can borrow it for a moment, but then she has to give it back to us. Also, while our friend is borrowing the gift, we cannot hand off ownership of the gift to anyone else, because it is currently being borrowed. Most crucially, the Rust compiler enforces these rules, so our friend can\u2019t just run off with the gift. And because the Rust compiler enforces that guarantee, when borrowing data, memory doesn\u2019t have to be copied. The memory stays where it is, and a pointer is passed around. The pointer is guaranteed to be valid. When you put it all together, you have a system that is efficient and prevents bugs, even as the program gets larger and more complex.\n  And the same system that prevents memory unsafety can also prevent data races, a category of concurrency bug. A data race happens when two or more threads are concurrently accessing the same data and at least one of those accesses is a mutation. The type system that models ownership and borrowing is able to uphold the same guarantee across multiple threads, enabling more aggressive use of concurrency.\n      Here is an example of how easy it can be to safely add concurrency to a Rust application. We have a function that iterates through an array of numbers and sums all even numbers. This is a highly parallelizable operation and for very large arrays, we could see the function getting significantly faster by adding concurrency.\n  The left side shows a single threaded version and the right side shows you the parallel version using the rayon library. And look at how similar the functions are. You get all the power of concurrency, without the hazards, by basically writing the same code. The only difference is that we use the par_iter() method instead of iter().\n  The parallel version will spread the computation across many threads, all while avoiding copying the array of numbers being passed as the argument. Rayon is able to provide this API safely thanks to Rust\u2019s ownership and borrow checking system. All the checks to guarantee safety happen at compile time.\n    Hopefully, by now we have gotten you interested in Rust and starting your journey of sustainability in the cloud. So where to start? The good news is, all the content you need is available online and there are places you can go to get started.\n  First, you will need to learn the Rust programming language.  The Rust book is an excellent resource to get started learning the language. It will help you get the Rust toolchain installed and teach you the language. The website also has exercises and lots of code examples to read. If you get stuck at any point, have questions, or need clarification, you can post on the user forum or talk directly on the community Discord server. The Discord server is usually the fastest way to get help. There are always people active there who can answer questions in real time.\n  Once you have gone through the Rust website, you should be comfortable enough to start building things, but there is another resource we want to call out for diving deeper. The  Crust of Rust is a great youtube channel by Jon Gjenset. He does really deep dives on various Rust related topics, popping the hood and explaining how things work. His videos are multiple hours long, but we keep hearing from people how valuable they are for learning Rust.\n            Rust is challenging to learn. Of the more than 8,000 developers responding to the 2020 Rust user survey, only about 100 identified as \u201cexpert\u201d, and of the respondents that said they were no longer using Rust, 55% cited learning or productivity as their reason for abandoning the language.\n  It takes experienced engineers 3-6 months of study, supported by access to subject matter experts, to become productive with Rust. Some engineers have likened learning Rust to learning to eat your vegetables, and while many of them love it once they are productive, a lot of engineers are deciding against learning it or abandoning the effort before they become productive. The potential impact of Rust on sustainability and security will only materialize if we turn the broccoli into a brownie.\n        No one developer, service, or corporation can deliver substantial impact on sustainability. Adoption of Rust is like recycling; it only has impact if we all participate. To achieve broad adoption, we are going to have to grow the developer community.\n  The Rust developer community has been the fastest growing over the last two years, but based on historical trends, we know that of the half million developers that joined the Rust community in the last 12 months, most of them are not yet proficient with the language. We have some work to do on the Rust developer experience.\n  The question that raises is which developer experience? Engineers working on the Linux kernel have a very different ideal developer experience than an engineer building a database service or an engineer delivering a retail website. We can identify the Rust user personas by look\n......", "posttime": "2022-02-20 21:14:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f16\u7a0b,rust,efficient", "title": "\u5728\u9508\u8ff9\u4e2d\u7f16\u7a0b\u662f\u5426\u66f4\u8282\u80fd\uff1f", "title_en": "Is It More Energy-Efficient to Program in Rust?", "transed": 1, "url": "https://aws.amazon.com/blogs/opensource/sustainability-with-rust/", "via": "", "real_tags": ["\u7f16\u7a0b", "rust", "efficient"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074296, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u603b\u90e8\u4f4d\u4e8e\u5df4\u9ece\u7684InterCloud\u5728D\u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e861\u4ebf\u6b27\u5143\uff0c\u4ee5\u786e\u4fdd\u4f01\u4e1a\u5ba2\u6237\u4f18\u5316\u3001\u81ea\u52a8\u5316\u548c\u5b89\u5168\u5730\u8bbf\u95ee\u4e91\u6258\u7ba1\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u3002\u65b0\u8d44\u672c\u5c06\u7528\u4e8e\u901a\u8fc7\u6536\u8d2d\u63a8\u52a8\u56fd\u9645\u6269\u5f20\u8ba1\u5212\uff0c\u5e76\u652f\u6301\u5176\u670d\u52a1\u63d0\u4f9b\u3002\u81ea2013\u5e74\u4ee5\u6765\uff0cInterCloud\u5171\u7b79\u96c6\u4e861.38\u4ebf\u6b27\u5143\u3002\n\u6839\u636e\u52a0\u7279\u7eb3\u7684\u62a5\u544a\uff0c\u201c\u52302025\uff0c\u4f7f\u7528\u8f6f\u4ef6\u5b9a\u4e49\u7684\u4e91\u4e92\u8fde\uff08SDCI\uff09\u670d\u52a1\u7684\u4f01\u4e1a\u8fde\u63a5\u5230\u516c\u5171\u4e91\u670d\u52a1\u5c06\u4ece2021\u7684\u4e0d\u523010%\u4e0a\u5347\u523030%\u201d\u3002\u8fd9\u4e00\u6570\u5b57\u4e00\u76f4\u662fInterCloud\u7684\u4e3b\u8981\u9a71\u52a8\u56e0\u7d20\u3002\nInterCloud\u7684SDCI\u670d\u52a1\u662f\u5305\u62ecAWS\u3001Microsoft\u3001IBM\u548cGoogle cloud\u5728\u5185\u7684\u6240\u6709\u4e3b\u8981\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u5408\u4f5c\u4f19\u4f34\uff0c\u5b83\u4e3a\u4f01\u4e1a\u7f51\u7edc\u56e2\u961f\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u7075\u6d3b\u548c\u5b89\u5168\u7684\u4e13\u7528\u7f51\u7edc\uff0c\u5e76\u5141\u8bb8\u4ed6\u4eec\u4ece\u4e16\u754c\u4efb\u4f55\u5730\u65b9\u5feb\u901f\u3001\u5b89\u5168\u5730\u90e8\u7f72\u64cd\u4f5c\u3002\nInterCloud\u76841\u4ebf\u6b27\u5143D\u8f6e\u878d\u8d44\u7531Aleph Capital\u7275\u5934\uff0c\u73b0\u6709\u6295\u8d44\u8005Ventech\u548cOpen CNP\u53c2\u4e0e\u3002\nInterCloud\u9996\u5e2d\u6267\u884c\u5b98\u6770\u7f57\u59c6\u00b7\u8fea\u5362\u4e9a\uff08J\u00e9r\u00f4me Dilouya\uff09\u8bc4\u8bba\u9053\uff1a\u201cSDCI\u5e73\u53f0\u5728\u5168\u7403\u8303\u56f4\u5185\u6709\u7740\u5de8\u5927\u7684\u589e\u957f\u673a\u4f1a\uff0c\u5728Aleph Capital\uff0c\u6211\u5f88\u9ad8\u5174\u6709\u6770\u51fa\u7684\u5408\u4f5c\u4f19\u4f34\u7ee7\u7eed\u62d3\u5c55\u4e1a\u52a1\u3002\u201d\u3002\u201c\u6df7\u5408\u4e91\u5e73\u53f0\u548c\u670d\u52a1\u662f\u5168\u7403\u4f01\u4e1a\u5feb\u901f\u589e\u957f\u7684\u4f18\u5148\u4e8b\u9879\uff0cInterCloud\u7684\u72ec\u7279\u5b9a\u4f4d\u662f\u5feb\u901f\u6269\u5927\u5176\u5e02\u573a\u4efd\u989d\u3002\u201d", "note_en": "Guaranteeing enterprise clients optimised, automated and secure access to cloud-hosted applications and data, Paris-based  InterCloud has raised \u20ac100 million in a Series D funding round. The new capital will be used to drive international expansion plans through acquisitions as well as bolster its services offer. Since 2013, InterCloud has raised a total of \u20ac138 million.\n According to a Gartner  report, \u201cBy 2025, enterprises using Software-Defined Cloud Interconnect (SDCI) services to connect to public cloud services will rise from less than 10% in 2021 to 30%\u201d. It\u2019s the figure which has been a primary driver for InterCloud.\n A partner to all major cloud service providers including AWS, Microsoft, IBM, and Google Cloud, InterCloud\u2019 SDCI service provides enterprise network teams with a highly agile and secure private network and allows them to deploy operations quickly and securely from anywhere in the world.\n InterCloud\u2019s \u20ac100 million Series D round was led by  Aleph Capital, with participation from existing investors  Ventech and  Open CNP.\n \u201cThere is a significant growth opportunity in SDCI platforms worldwide, and, in Aleph Capital, I am thrilled to have exceptional partners to continue to expand the business,\u201d commented InterCloud CEO,  J\u00e9r\u00f4me Dilouya. \u201cHybrid cloud platforms and services are a fast-growing priority for enterprises worldwide, with InterCloud uniquely positioned to expand its market share quickly.\u201d", "posttime": "2022-02-20 21:11:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,\u4f4d\u4e8e,led,\u4f01\u4e1a", "title": "\u603b\u90e8\u4f4d\u4e8e\u5df4\u9ece\u7684InterCloud\u5e2e\u52a9\u4f01\u4e1a\u4ece\u591a\u4e2a\u4e91\u670d\u52a1\u4e2d\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\uff0c\u5b83\u7b79\u96c6\u4e86\u7531Aleph Capital\u7275\u5934\u76841\u4ebf\u6b27\u5143D\u7cfb\u5217", "title_en": "Paris-based InterCloud, which helps companies access applications and data from multiple cloud services, raises a \u20ac100M Series D led by Aleph Capital", "transed": 1, "url": "https://tech.eu/2022/02/15/cloud-connectivity-platform-intercloud-connects-to-eur100-million-keeps-enterprise-networks-safe-and-secure", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u4f4d\u4e8e", "led", "\u4f01\u4e1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074293, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6050\u614c\u7684NFT\u4ea4\u6613\u5458\u53d1\u5e03\u4e86\u4e00\u7cfb\u5217\u75c5\u6bd2\u6027\u63a8\u6587\u4e4b\u540e\uff0c\u9886\u5148\u7684\u5e02\u573aOpenSea\u8868\u793a\uff0c\u5b83\u6b63\u5728\u8c03\u67e5\u4e0e\u5176\u5e73\u53f0\u76f8\u8fde\u7684\u667a\u80fd\u5408\u7ea6\u6709\u5173\u7684\u201c\u5229\u7528\u6f0f\u6d1e\u7684\u8c23\u8a00\u201d\u2014\u2014\u8fd9\u4e00\u6f0f\u6d1e\u53ef\u80fd\u8ba9\u4ea4\u6613\u5458\u635f\u5931\u4e86\u5b9d\u8d35\u7684\u4ee3\u5e01\u3002\n\u201c\u6211\u4eec\u6b63\u5728\u79ef\u6781\u8c03\u67e5\u4e0eOpenSea\u76f8\u5173\u7684\u667a\u80fd\u5408\u7ea6\u76f8\u5173\u7684\u6f0f\u6d1e\u653b\u51fb\u4f20\u95fb\uff0c\u201dOpenSea\u5728\u7f8e\u56fd\u65f6\u95f4\u5468\u516d\u665a\u53d1\u5e03\u5230Twitter\u4e0a\u3002\u201c\u8fd9\u4f3c\u4e4e\u662f\u6e90\u81eaOpenSea&#39\uff1b\u7f51\u7ad9\u4e4b\u5916\u7684\u9493\u9c7c\u653b\u51fb\u3002\u8bf7\u52ff\u5355\u51fbOpenSea.io\u4e4b\u5916\u7684\u94fe\u63a5\u3002\u201d\n\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4\u665a\u4e0a10\u70b950\u5206\u5de6\u53f3\uff0cOpenSea\u9996\u5e2d\u6267\u884c\u5b98\u5fb7\u6587\u00b7\u82ac\u6cfd\u5c14\u5728\u63a8\u6587\u4e2d\u8868\u793a\uff0c\u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u670932\u540d\u7528\u6237\u7b7e\u7f72\u4e86\u6765\u81ea\u653b\u51fb\u8005\u7684\u6076\u610f\u6709\u6548\u8d1f\u8f7d\uff0c\u5176\u4e2d\u4e00\u4e9bNFT\u88ab\u76d7\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u201c\u4e0d\u77e5\u9053\u6700\u8fd1\u6709\u4efb\u4f55\u5411\u7528\u6237\u53d1\u9001\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u5e76\u8868\u793a\u53ef\u80fd\u662f\u6b3a\u8bc8\u7f51\u7ad9\u9020\u6210\u7684\u3002\nOpenSea\u8ba1\u5212\u5728\u5468\u4e94\u53d1\u5e03\u4e00\u4efd\u5168\u65b0\u7684\u5408\u540c\uff0c\u4ee5\u4fee\u6539\u5176\u667a\u80fd\u5408\u540c\uff08\u672c\u8d28\u4e0a\u662f\u7ba1\u7406\u5176\u4ea4\u6613\u5e73\u53f0\u7684\u4ee3\u7801\uff09\u3002\u5347\u7ea7\u540e\u7684\u5408\u540c\u65e8\u5728\u786e\u4fdd\u5e73\u53f0\u4e0a\u7684\u65e7\u7684\u3001\u4e0d\u6d3b\u8dc3\u7684\u7269\u54c1\u6700\u7ec8\u5230\u671f\u3002\n\u5728Twitter\u4e0a\uff0c\u4ea4\u6613\u5458\u4eec\u5206\u4eab\u4e86\u4ed6\u4eec\u6700\u521d\u8ba4\u4e3a\u662fOpenSea\u7684\u5b98\u65b9\u7535\u5b50\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\u5173\u4e8e\u4ece\u5408\u540cA\u5230\u5408\u540cB\u7684\u8fc1\u79fb\u8fc7\u7a0b\u3002\n\u5ba1\u8ba1\u667a\u80fd\u5408\u7ea6\u7684\u533a\u5757\u94fe\u5b89\u5168\u516c\u53f8PeckShield\u8868\u793a\uff0c\u8c23\u4f20\u7684\u653b\u51fb\u201c\u5f88\u53ef\u80fd\u662f\u9493\u9c7c\u201d\u2014\u2014\u9690\u85cf\u5728\u4f2a\u88c5\u94fe\u63a5\u4e2d\u7684\u6076\u610f\u5408\u7ea6\u3002\u8be5\u516c\u53f8\u5f15\u7528\u4e86\u540c\u4e00\u5c01\u5173\u4e8e\u8fc1\u79fb\u8fc7\u7a0b\u7684\u5927\u91cf\u7535\u5b50\u90ae\u4ef6\u4f5c\u4e3a\u94fe\u63a5\u7684\u53ef\u80fd\u6765\u6e90\u4e4b\u4e00\u3002\n\u663e\u7136\u662f\u653b\u51fb\u8005\u7684\u5730\u5740\uff08\u533a\u5757\u94fe\u6d4f\u89c8\u5668\u7f51\u7ad9Etherscan\u5df2\u7ecf\u8d34\u4e0a\u4e86\u201c\u9493\u9c7c/\u9ed1\u5ba2\u201d\u8b66\u544a\u5fbd\u7ae0\uff09\u6301\u6709\u4ef7\u503c\u7ea6170\u4e07\u7f8e\u5143\u7684ETH\uff0c\u4ee5\u53ca\u6765\u81ea\u65e0\u804a\u733f\u6e38\u8247\u4ff1\u4e50\u90e8\u7684\u4e09\u679a\u4ee3\u5e01\u3001\u4e24\u53ea\u9177\u732b\u3001\u4e00\u53ea\u6d82\u9e26\u548c\u4e00\u53eaAzuki\u3002\nCointdesk\u662f\u5173\u4e8e\u52a0\u5bc6\u8d27\u5e01\u3001\u6570\u5b57\u8d44\u4ea7\u548c\u8d27\u5e01\u672a\u6765\u7684\u65b0\u95fb\u548c\u4fe1\u606f\u9886\u57df\u7684\u9886\u5bfc\u8005\uff0c\u662f\u4e00\u5bb6\u81f4\u529b\u4e8e\u6700\u9ad8\u65b0\u95fb\u6807\u51c6\u5e76\u9075\u5b88\u4e25\u683c\u7f16\u8f91\u653f\u7b56\u7684\u5a92\u4f53\u673a\u6784\u3002Cointdesk\u662f\u6570\u5b57\u8d27\u5e01\u96c6\u56e2\u7684\u72ec\u7acb\u8fd0\u8425\u5b50\u516c\u53f8\uff0c\u8be5\u96c6\u56e2\u6295\u8d44\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u521d\u521b\u516c\u53f8\u3002\u4f5c\u4e3a\u5176\u85aa\u916c\u7684\u4e00\u90e8\u5206\uff0c\u5305\u62ec\u7f16\u8f91\u90e8\u5458\u5de5\u5728\u5185\u7684\u67d0\u4e9bCointdesk\u5458\u5de5\u53ef\u80fd\u4f1a\u4ee5\u80a1\u7968\u589e\u503c\u6743\u7684\u5f62\u5f0f\u83b7\u5f97DCG\u80a1\u6743\u7684\u98ce\u9669\u655e\u53e3\uff0c\u8be5\u7b49\u80a1\u7968\u589e\u503c\u6743\u5c06\u5728\u591a\u5e74\u671f\u5185\u6388\u4e88\u3002Cointdesk\u8bb0\u8005\u4e0d\u5141\u8bb8\u76f4\u63a5\u8d2d\u4e70DCG\u7684\u80a1\u7968\u3002\n\u901a\u8fc7\u6ce8\u518c\uff0c\u60a8\u5c06\u6536\u5230\u6709\u5173Cointdesk\u4ea7\u54c1\u66f4\u65b0\u3001\u6d3b\u52a8\u548c\u8425\u9500\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u4e14\u60a8\u540c\u610f\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002", "note_en": "In the wake of a  series of  viral  tweets from panicked NFT traders, leading marketplace OpenSea says it\u2019s investigating \u201crumors of an exploit\u201d regarding smart contracts connected to its platform \u2013 a vulnerability that may have cost traders valuable tokens.\n \u201cWe are actively investigating rumors of an exploit associated with OpenSea related smart contracts,\u201d OpenSea  posted to Twitter Saturday night U.S. hours. \u201cThis appears to be a phishing attack originating outside of OpenSea&#39;s website. Do not click links outside of  opensea.io.\u201d\n Around 10:50 p.m. ET, OpenSea CEO Devin Finzer followed up in a  tweet that \u201c32 users thus far have signed a malicious payload from an attacker, and some of their NFTs were stolen.\u201d He  added that the company is \u201cnot aware of any recent phishing emails that have been sent to users,\u201d and suggested a fraudulent website may be to blame.\n  OpenSea had  planned to  revise its smart contract (the code governing its trading platform, essentially) by  releasing a brand-new contract on Friday. The upgraded contract was intended to ensure  old, inactive listings on the platform would eventually expire.\n On Twitter, traders shared what they\u2019d initially thought were official OpenSea  emails about the  migration process from contract A to contract B.\n PeckShield, a blockchain security company that audits smart contracts,  stated that the rumored exploit was \u201cmost likely phishing\u201d \u2013 a malicious contract hidden in a disguised link. The company cited that same mass email about the migration process as one of the possible sources of the link.\n The apparent attacker\u2019s  address (which the blockchain explorer website Etherscan has already slapped with a \u201cphish/hack\u201d warning badge) holds about $1.7 million worth of ETH, as well as three tokens from the Bored Ape Yacht Club, two Cool Cats, one Doodle and one Azuki.\n The leader in news and information on cryptocurrency, digital assets and the future of money, CoinDesk is a media outlet that strives for the highest journalistic standards and abides by a  strict set of editorial policies. CoinDesk is an independent operating subsidiary of  Digital Currency Group, which invests in  cryptocurrencies and blockchain  startups. As part of their compensation, certain CoinDesk employees, including editorial employees, may receive exposure to DCG equity in the form of  stock appreciation rights, which vest over a multi-year period. CoinDesk journalists are not allowed to purchase stock outright in DCG.\n  By signing up, you will receive emails about CoinDesk product updates, events and marketing and you agree to our  terms of services and  privacy policy.", "posttime": "2022-02-20 21:06:16", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8868\u793a,investigating,opensea", "title": "OpenSea\u8868\u793a\u6b63\u5728\u8c03\u67e5\u667a\u80fd\u5408\u7ea6\u7684\u201c\u5229\u7528\u8c23\u8a00\u201d\uff1b\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u8868\u793a\uff0c\u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u670932\u540d\u7528\u6237\u7b7e\u7f72\u4e86\u6076\u610f\u6709\u6548\u8f7d\u8377\u201d\uff0c\u5176\u4e2d\u4e00\u4e9b\u7528\u6237\u7684NFT\u88ab\u76d7", "title_en": "OpenSea says it's investigating \u201crumors of an exploit\u201d of smart contracts; CEO says \u201c32 users thus far have signed a malicious payload\u201d and some had NFTs stolen", "transed": 1, "url": "https://www.coindesk.com/business/2022/02/20/opensea-investigating-exploit-rumors-as-users-complain-of-missing-nfts/", "via": "", "real_tags": ["\u8868\u793a", "opensea"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074292, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u6211\u4eec\u964d\u4f4e\u7f8e\u56fd\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u5408\u4f5c\u4f19\u4f34\u4ee5\u53ca\u5dde\u3001\u5730\u65b9\u3001\u90e8\u843d\u548c\u5730\u533a\u653f\u5e9c\u7f51\u7edc\u5b89\u5168\u98ce\u9669\u7684\u6301\u7eed\u4efb\u52a1\u7684\u4e00\u90e8\u5206\uff0cCISA\u7f16\u5236\u4e86\u4e00\u4efd\u514d\u8d39\u7f51\u7edc\u5b89\u5168\u5de5\u5177\u548c\u670d\u52a1\u6e05\u5355\uff0c\u4ee5\u5e2e\u52a9\u7ec4\u7ec7\u8fdb\u4e00\u6b65\u63d0\u5347\u5176\u5b89\u5168\u80fd\u529b\u3002\u8fd9\u4e2a\u6d3b\u751f\u751f\u7684\u5b58\u50a8\u5e93\u5305\u62ecCISA\u63d0\u4f9b\u7684\u7f51\u7edc\u5b89\u5168\u670d\u52a1\u3001\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f00\u6e90\u5de5\u5177\uff0c\u4ee5\u53ca\u7f51\u7edc\u5b89\u5168\u793e\u533a\u4e2d\u79c1\u8425\u548c\u516c\u5171\u90e8\u95e8\u7ec4\u7ec7\u63d0\u4f9b\u7684\u514d\u8d39\u5de5\u5177\u548c\u670d\u52a1\u3002CISA\u5c06\u5b9e\u65bd\u4e00\u4e2a\u6d41\u7a0b\uff0c\u8ba9\u7ec4\u7ec7\u63d0\u4ea4\u989d\u5916\u7684\u514d\u8d39\u5de5\u5177\u548c\u670d\u52a1\uff0c\u4ee5\u4fbf\u5728\u672a\u6765\u5217\u5165\u8be5\u6e05\u5355\u3002\n\u8be5\u6e05\u5355\u5e76\u4e0d\u5168\u9762\uff0c\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u6dfb\u52a0\u4e4b\u524d\u8fdb\u884c\u66f4\u6539\u3002CISA\u91c7\u7528\u4e2d\u7acb\u7684\u539f\u5219\u548c\u6807\u51c6\u6765\u6dfb\u52a0\u9879\u76ee\uff0c\u5e76\u5bf9\u6240\u5305\u542b\u9879\u76ee\u7684\u786e\u5b9a\u4fdd\u6301\u552f\u4e00\u4e14\u4e0d\u53ef\u64a4\u9500\u7684\u81ea\u7531\u88c1\u91cf\u6743\u3002CISA\u4e0d\u8bc1\u660e\u8fd9\u4e9b\u670d\u52a1\u548c\u5de5\u5177\u5bf9\u4efb\u4f55\u7279\u5b9a\u7528\u4f8b\u7684\u9002\u7528\u6027\u6216\u6709\u6548\u6027\u3002CISA\u4e0d\u8ba4\u53ef\u4efb\u4f55\u5546\u4e1a\u4ea7\u54c1\u6216\u670d\u52a1\u3002\u901a\u8fc7\u670d\u52a1\u5546\u6807\u3001\u5546\u6807\u3001\u5236\u9020\u5546\u6216\u5176\u4ed6\u65b9\u5f0f\u63d0\u53ca\u7279\u5b9a\u5546\u4e1a\u4ea7\u54c1\u3001\u5de5\u827a\u6216\u670d\u52a1\uff0c\u5e76\u4e0d\u6784\u6210\u6216\u6697\u793aCISA\u5bf9\u5176\u7684\u8ba4\u53ef\u3001\u63a8\u8350\u6216\u652f\u6301\u3002\n\u4fee\u590d\u8f6f\u4ef6\u4e2d\u5df2\u77e5\u7684\u5b89\u5168\u7f3a\u9677\u3002\u68c0\u67e5\u8d35\u516c\u53f8\u4f7f\u7528\u7684\u8f6f\u4ef6\u7684CISA\u5df2\u77e5\u6f0f\u6d1e\uff08KEV\uff09\u76ee\u5f55\uff0c\u5982\u679c\u5217\u51fa\uff0c\u8bf7\u6839\u636e\u4f9b\u5e94\u5546\u7684\u8bf4\u660e\u5c06\u8f6f\u4ef6\u66f4\u65b0\u81f3\u6700\u65b0\u7248\u672c\u3002\u6ce8\u610f\uff1aCISA\u4e0d\u65ad\u66f4\u65b0KEV\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u5df2\u77e5\u7684\u88ab\u5229\u7528\u6f0f\u6d1e\u3002\n\u5b9e\u73b0\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\uff08MFA\uff09\u3002\u5c3d\u53ef\u80fd\u4f7f\u7528\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\u3002MFA\u662f\u4e00\u79cd\u5206\u5c42\u65b9\u6cd5\uff0c\u7528\u4e8e\u4fdd\u62a4\u60a8\u7684\u5728\u7ebf\u5e10\u6237\u53ca\u5176\u5305\u542b\u7684\u6570\u636e\u3002\u5f53\u60a8\u5728\u5728\u7ebf\u670d\u52a1\uff08\u5982\u7535\u5b50\u90ae\u4ef6\uff09\u4e2d\u542f\u7528MFA\u65f6\uff0c\u60a8\u5fc5\u987b\u63d0\u4f9b\u4e24\u4e2a\u6216\u591a\u4e2a\u8eab\u4efd\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u7ec4\u5408\uff0c\u4ee5\u5728\u670d\u52a1\u6388\u4e88\u60a8\u8bbf\u95ee\u6743\u9650\u4e4b\u524d\u9a8c\u8bc1\u60a8\u7684\u8eab\u4efd\u3002\u4f7f\u7528MFA\u4fdd\u62a4\u60a8\u7684\u5e10\u6237\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5373\u4f7f\u4e00\u4e2a\u56e0\u7d20\uff08\u6bd4\u5982\u4f60\u7684\u5bc6\u7801\uff09\u88ab\u6cc4\u9732\uff0c\u672a\u7ecf\u6388\u6743\u7684\u7528\u6237\u4e5f\u5c06\u65e0\u6cd5\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u8eab\u4efd\u9a8c\u8bc1\u8981\u6c42\uff0c\u6700\u7ec8\u963b\u6b62\u4ed6\u4eec\u8bbf\u95ee\u4f60\u7684\u5e10\u6237\u3002\n\u505c\u6b62\u4e0d\u826f\u884c\u4e3a\u3002\u7acb\u5373\u91c7\u53d6\u63aa\u65bd\uff1a\uff081\uff09\u66f4\u6362\u4e0d\u518d\u63a5\u6536\u8f6f\u4ef6\u66f4\u65b0\u7684\u62a5\u5e9f\u8f6f\u4ef6\u4ea7\u54c1\uff1b\uff082\uff09 \u66f4\u6362\u4f9d\u8d56\u5df2\u77e5/\u9ed8\u8ba4/\u4e0d\u53ef\u66f4\u6539\u5bc6\u7801\u7684\u4efb\u4f55\u7cfb\u7edf\u6216\u4ea7\u54c1\uff1b\uff083\uff09\u91c7\u7528MFA\uff08\u89c1\u4e0a\u6587\uff09\u5bf9\u91cd\u8981\u7cfb\u7edf\u3001\u8d44\u6e90\u6216\u6570\u636e\u5e93\u8fdb\u884c\u8fdc\u7a0b\u6216\u7ba1\u7406\u8bbf\u95ee\u3002\n\u6ce8\u518cCISA\u7684\u7f51\u7edc\u536b\u751f\u6f0f\u6d1e\u626b\u63cf\u3002\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6ce8\u518c\u6b64\u670d\u52a1vulnerability@cisa.dhs.gov.\u4e00\u65e6\u542f\u52a8\uff0c\u8be5\u670d\u52a1\u5927\u90e8\u5206\u662f\u81ea\u52a8\u5316\u7684\uff0c\u51e0\u4e4e\u4e0d\u9700\u8981\u76f4\u63a5\u4ea4\u4e92\u3002CISA\u6267\u884c\u6f0f\u6d1e\u626b\u63cf\u5e76\u63d0\u4ea4\u6bcf\u5468\u62a5\u544a\u3002CISA\u6536\u5230\u6240\u9700\u6587\u4ef6\u540e\uff0c\u626b\u63cf\u5c06\u572872\u5c0f\u65f6\u5185\u5f00\u59cb\uff0c\u7ec4\u7ec7\u5c06\u5728\u4e24\u5468\u5185\u5f00\u59cb\u63a5\u6536\u62a5\u544a\u3002\u6ce8\u610f\uff1a\u6f0f\u6d1e\u626b\u63cf\u6709\u52a9\u4e8e\u4fdd\u62a4\u9762\u5411internet\u7684\u7cfb\u7edf\u514d\u53d7\u8584\u5f31\u914d\u7f6e\u548c\u5df2\u77e5\u6f0f\u6d1e\u7684\u5f71\u54cd\uff0c\u5e76\u9f13\u52b1\u91c7\u7528\u6700\u4f73\u505a\u6cd5\u3002\n\u628a\u4f60\u7684\u4e1c\u897f\u4ece\u641c\u7d22\uff08S.O.S.\uff09\u4e0a\u62ff\u4e0b\u6765\u3002\u867d\u7136\u96f6\u65e5\u653b\u51fb\u6700\u53d7\u5173\u6ce8\uff0c\u4f46\u5f80\u5f80\u5ffd\u7565\u4e86\u5bf9\u7f51\u7edc\u548c\u7269\u7406\u5b89\u5168\u7684\u4e0d\u592a\u590d\u6742\u7684\u66b4\u9732\u3002\u8ba9\u4f60\u7684\u4e1c\u897f\u8fdc\u79bb\u641c\u7d22\u2014\u2014S.O.S.\uff0c\u51cf\u5c11\u7f51\u7edc\u641c\u7d22\u5e73\u53f0\u4e0a\u4efb\u4f55\u4eba\u90fd\u80fd\u770b\u5230\u7684\u7f51\u7edc\u653b\u51fb\u9762\u3002\n\u5728\u4e0a\u8ff0\u63aa\u65bd\u53d6\u5f97\u8fdb\u5c55\u540e\uff0c\u7ec4\u7ec7\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u5217\u51fa\u7684\u514d\u8d39\u670d\u52a1\u548c\u5de5\u5177\u6765\u5b8c\u5584\u5176\u7f51\u7edc\u5b89\u5168\u98ce\u9669\u7ba1\u7406\u3002\u8fd9\u4e9b\u8d44\u6e90\u6839\u636eCISA Insights\u4e2d\u6982\u8ff0\u7684\u56db\u4e2a\u76ee\u6807\u8fdb\u884c\u5206\u7c7b\uff1a\u7acb\u5373\u5b9e\u65bd\u7f51\u7edc\u5b89\u5168\u63aa\u65bd\uff0c\u4ee5\u9632\u8303\u91cd\u5927\u5a01\u80c1\uff1a\nCISA\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u3001RSS\u6e90\u548c\u793e\u4ea4\u5a92\u4f53\u5411\u8ba2\u9605\u8005\u63d0\u4f9b\u81ea\u52a8\u66f4\u65b0\u3002\u8ba2\u9605CISA\u51fa\u7248\u7269\u53d1\u5e03\u540e\u7684\u901a\u77e5\u3002\n\u8be5\u670d\u52a1\u901a\u8fc7\u5bf9\u516c\u5171\u9759\u6001IP\u8fdb\u884c\u8fde\u7eed\u626b\u63cf\uff0c\u4ee5\u8bc4\u4f30\u5916\u90e8\u7f51\u7edc\u7684\u5b58\u5728\u6027\uff0c\u4ece\u800c\u67e5\u627e\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u548c\u6f0f\u6d1e\u3002\u5b83\u6bcf\u5468\u63d0\u4f9b\u6f0f\u6d1e\u62a5\u544a\u548c\u7279\u522b\u8b66\u62a5\u3002\u770b\u89c1https://www.cisa.gov/cyber-resource-hub\u8be6\u7ec6\u4fe1\u606f\u3002\n\u8be5\u670d\u52a1\u8bc4\u4f30\u5df2\u77e5\u548c\u53d1\u73b0\u7684\u53ef\u516c\u5f00\u8bbf\u95ee\u7f51\u7ad9\u7684\u6f5c\u5728\u6f0f\u6d1e\u548c\u8584\u5f31\u914d\u7f6e\uff0c\u4ee5\u63d0\u4f9b\u964d\u4f4eweb\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u98ce\u9669\u7684\u5efa\u8bae\u3002\u770b\u5230\u4e86\u5417https://www.cisa.gov/cyber-resource-hub\u8be6\u7ec6\u4fe1\u606f\u3002\n\u8fd9\u9879\u670d\u52a1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u786e\u5b9a\u4eba\u5458\u5bf9\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u7684\u6f5c\u5728\u654f\u611f\u6027\u7684\u673a\u4f1a\u3002\u8fd9\u662f\u4e00\u4e2a\u5b9e\u8df5\u7ec3\u4e60\uff0c\u65e8\u5728\u652f\u6301\u548c\u8861\u91cf\u5b89\u5168\u610f\u8bc6\u57f9\u8bad\u7684\u6709\u6548\u6027\u3002\u770b\u89c1https://www.cisa.gov/cyber-resource-hub\u8be6\u7ec6\u4fe1\u606f\u3002\n\u8be5\u6d4b\u8bd5\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u5bf9\u624b\u7684\u6218\u672f\u548c\u6280\u672f\uff0c\u4ee5\u8bc6\u522b\u548c\u9a8c\u8bc1\u53ef\u5229\u7528\u7684\u8def\u5f84\u3002\u6b64\u670d\u52a1\u975e\u5e38\u9002\u5408\u6d4b\u8bd5\u5916\u56f4\u9632\u5fa1\u3001\u5916\u90e8\u53ef\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u53ca\u5229\u7528\u5f00\u653e\u6e90\u4ee3\u7801\u4fe1\u606f\u7684\u53ef\u80fd\u6027\u3002\u770b\u89c1https://www.cisa.gov/cyber-resource-hub\u8be6\u7ec6\u4fe1\u606f\u3002\nImmunet\u662f\u9488\u5bf9Microsoft Windows\u7684\u6076\u610f\u8f6f\u4ef6\u548c\u9632\u75c5\u6bd2\u4fdd\u62a4\u7cfb\u7edf\uff0c\u5b83\u5229\u7528\u4e91\u8ba1\u7b97\u63d0\u4f9b\u589e\u5f3a\u7684\u57fa\u4e8e\u793e\u533a\u7684\u5b89\u5168\u6027\u3002\nCloudflare DDoS\u9632\u62a4\u4fdd\u62a4\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u6574\u4e2a\u7f51\u7edc\u7684\u5b89\u5168\uff0c\u540c\u65f6\u786e\u4fdd\u5408\u6cd5\u6d41\u91cf\u7684\u6027\u80fd\u4e0d\u53d7\u635f\u5bb3\u3002\nSSL\uff08\u5b89\u5168\u5957\u63a5\u5b57\u5c42\uff09\u662f\u5728web\u670d\u52a1\u5668\u548c\u6d4f\u89c8\u5668\u4e4b\u95f4\u5efa\u7acb\u52a0\u5bc6\u94fe\u63a5\u7684\u6807\u51c6\u5b89\u5168\u6280\u672f\u3002Cloudflare\u5141\u8bb8\u4efb\u4f55internet\u5c5e\u6027\u901a\u8fc7\u5355\u51fb\u6309\u94ae\u4f7f\u7528SSL\u3002\n\u6b64\u529f\u80fd\u901a\u8fc7\u5728\u9694\u79bb\u6d4f\u89c8\u73af\u5883\u4e2d\u6253\u5f00Microsoft Edge\u6765\u63d0\u4f9b\u9694\u79bb\u6d4f\u89c8\uff0c\u4ece\u800c\u66f4\u597d\u5730\u4fdd\u62a4\u8bbe\u5907\u548c\u6570\u636e\u514d\u53d7\u6076\u610f\u8f6f\u4ef6\u7684\u653b\u51fb\u3002\nWindows\u4e2d\u7684\u53d7\u63a7\u6587\u4ef6\u5939\u8bbf\u95ee\u901a\u8fc7\u4fdd\u62a4\u8bbe\u5907\u4e0a\u7684\u6587\u4ef6\u5939\u3001\u6587\u4ef6\u548c\u5185\u5b58\u533a\u57df\u4e0d\u53d7\u4e0d\u53cb\u597d\u5e94\u7528\u7a0b\u5e8f\u672a\u7ecf\u6388\u6743\u7684\u66f4\u6539\uff0c\u5e2e\u52a9\u62b5\u5fa1\u52d2\u7d22\u8f6f\u4ef6\u7b49\u5a01\u80c1\u3002\n\u6b64\u5de5\u5177\u7528\u4e8e\u4fdd\u62a4\u548c\u68c0\u6d4b\u7aef\u70b9\u5a01\u80c1\uff0c\u5305\u62ec\u57fa\u4e8e\u6587\u4ef6\u548c\u65e0\u6587\u4ef6\u7684\u6076\u610f\u8f6f\u4ef6\u3002\u5185\u7f6e\u4e8eWindows 10\u548c11\u4ee5\u53caWindows Server\u7248\u672c\u4e2d\u3002\n\u8be5\u5de5\u5177\u5e2e\u52a9\u7ec4\u7ec7\u4fdd\u62a4\u5176\u5173\u952e\u7684\u56fd\u5bb6\u7f51\u7edc\u8d44\u4ea7\u3002\u8be5\u5de5\u5177\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u79cd\u7cfb\u7edf\u4e14\u53ef\u91cd\u590d\u7684\u65b9\u6cd5\u6765\u8bc4\u4f30\u5176\u7f51\u7edc\u7cfb\u7edf\u548c\u7f51\u7edc\u7684\u5b89\u5168\u6001\u52bf\u3002\u5b83\u5305\u62ec\u4e0e\u6240\u6709\u5de5\u4e1a\u63a7\u5236\u548cIt\u7cfb\u7edf\u76f8\u5173\u7684\u9ad8\u7ea7\u548c\u8be6\u7ec6\u95ee\u9898\u3002\n\u6b64\u5de5\u5177\u65e8\u5728\u5e2e\u52a9\u8bc6\u522b\u8bbe\u5907\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\u7535\u5b50\u8868\u683c\u53ef\u7528\u4e8e\u8ddf\u8e2a\u786c\u4ef6\u3001\u8f6f\u4ef6\u548c\u654f\u611f\u4fe1\u606f\u3002\n\u8fd9\u4e2a\u9488\u5bf9Android\u8bbe\u5907\u7684\u5de5\u5177\u65e8\u5728\u5e2e\u52a9\u963b\u6b62\u7528\u6237\u8bbf\u95ee\u5e26\u6709\u75c5\u6bd2\u6216\u5176\u4ed6\u6076\u610f\u8f6f\u4ef6\u7684\u5df2\u77e5\u7f51\u7ad9\u3002\n\u6b64\u5de5\u5177\u65e8\u5728\u9632\u6b62\u8ba1\u7b97\u673a\u548c\u8bbe\u5907\u8fde\u63a5\u5230\u6076\u610f\u8f6f\u4ef6\u6216\u9493\u9c7c\u7f51\u7ad9\u3002\n\u6b64\u5de5\u5177\u96c6\u53ef\u8bc6\u522b\u7f51\u7edc\u4e0a\u5df2\u77e5\u7684\u9493\u9c7c\u548c\u6076\u610f\u8f6f\u4ef6\uff0c\u5e76\u5e2e\u52a9\u901a\u77e5\u7528\u6237\u548c\u7f51\u7ad9\u6240\u6709\u8005\u6f5c\u5728\u7684\u5371\u5bb3\u3002\u5b83\u88ab\u96c6\u6210\u5230\u8bb8\u591a\u4e3b\u8981\u4ea7\u54c1\u4e2d\uff0c\u5e76\u4e3a\u7f51\u7ad9\u7ba1\u7406\u5458\u63d0\u4f9b\u5de5\u5177\u3002\nProject Shield\u662f\u4e00\u9879\u514d\u8d39\u670d\u52a1\uff0c\u7528\u4e8e\u4fdd\u62a4\u65b0\u95fb\u3001\u4eba\u6743\u548c\u9009\u4e3e\u76d1\u63a7\u7f51\u7ad9\u514d\u53d7DDoS\u653b\u51fb\nreCAPTCHA\u4f7f\u7528\u5148\u8fdb\u7684\u98ce\u9669\u5206\u6790\u5f15\u64ce\u548c\u9002\u5e94\u6027\u6311\u6218\u6765\u9632\u6b62\u6076\u610f\u8f6f\u4ef6\u5bf9\u7528\u6237\u8fdb\u884c\u6ee5\u7528\u6d3b\u52a8&#39\uff1bs\u7684\u7f51\u7ad9\u3002\nWeb Risk API\u662f\u8c37\u6b4c\u4e91\u7684\u7528\u6237\u4fdd\u62a4\u670d\u52a1\uff0c\u65e8\u5728\u964d\u4f4e\u9488\u5bf9\u7528\u6237\u751f\u6210\u5185\u5bb9\u7684\u5a01\u80c1\u98ce\u9669\u3002Web Risk API\u5141\u8bb8\u7ec4\u7ec7\u5c06\u5176\u73af\u5883\u4e2d\u7684URL\u4e0e\u8d85\u8fc7100\u4e07\u4e2a\u4e0d\u5b89\u5168URL\u7684\u5b58\u50a8\u5e93\u8fdb\u884c\u6bd4\u8f83\u3002\n\u8be5\u5de5\u5177\u901a\u8fc7\u8bc4\u4f30\u7528\u6237\u7684\u5b89\u5168\u6027\u548c\u6570\u636e\u653b\u51fb\u9762\uff0c\u5e2e\u52a9\u7528\u6237\u52a0\u5f3a\u5b89\u5168\u6001\u52bf\uff1b\u63d0\u4f9b\u8d44\u4ea7\u6e05\u67e5\u548c\u53d1\u73b0\uff1b\u8bc6\u522b\u9519\u8bef\u914d\u7f6e\u3001\u6f0f\u6d1e\u548c\u5a01\u80c1\uff1b\u5e2e\u52a9\u4ed6\u4eec\u7f13\u89e3\u548c\u8865\u6551\u98ce\u9669\u3002\nOSS Fuzz\u65e8\u5728\u901a\u8fc7\u5c06\u73b0\u4ee3\u6a21\u7cca\u6280\u672f\u4e0e\u53ef\u4f38\u7f29\u7684\u5206\u5e03\u5f0f\u6267\u884c\u76f8\u7ed3\u5408\uff0c\u4f7f\u901a\u7528\u5f00\u6e90\u8f6f\u4ef6\u66f4\u52a0\u5b89\u5168\u548c\u7a33\u5b9a\u3002\nGo-Safe Web\u662f\u4e00\u4e2a\u5e93\u96c6\u5408\uff0c\u7528\u4e8e\u5728Go\u4e2d\u7f16\u5199\u9ed8\u8ba4\u5b89\u5168\u7684HTTP\u670d\u52a1\u5668\u3002\nOSV\u662f\u4e00\u4e2a\u6f0f\u6d1e\u6570\u636e\u5e93\u548c\u5206\u7c7b\u57fa\u7840\u8bbe\u65bd\uff0c\u7528\u4e8e\u5f00\u6e90\u9879\u76ee\uff0c\u65e8\u5728\u5e2e\u52a9\u5f00\u6e90\u7ef4\u62a4\u8005\u548c\u5f00\u6e90\u7528\u6237\u3002\n\u5b89\u5168\u8bb0\u5206\u5361\u662f\u5f00\u653e\u6e90\u4ee3\u7801\u5b89\u5168\u5065\u5eb7\u6307\u6807\u7684\u96c6\u5408\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4f7f\u7528\u524d\u8bc4\u4f30\u5f00\u653e\u6e90\u4ee3\u7801\u5305\u7684\u5b89\u5168\u5b9e\u8df5\u3002\u7ed3\u679c\u4f5c\u4e3a\u8c37\u6b4c\u4e91\u5927\u67e5\u8be2\u6570\u636e\u96c6\u516c\u5f00\u3002\nTink\u662f\u4e00\u4e2a\u591a\u8bed\u8a00\u3001\u8de8\u5e73\u53f0\u3001\u5f00\u6e90\u7684\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u5b89\u5168\u3001\u6613\u4e8e\u6b63\u786e\u4f7f\u7528\u4e14\u4e0d\u6613\u8bef\u7528\u7684\u52a0\u5bc6API\u3002\n\u8be5\u670d\u52a1\u63d0\u4f9b\u5927\u91cf\u5b89\u5168\u8d44\u6e90\uff0c\u5305\u62ec\u5b89\u5168\u84dd\u56fe\u3001\u767d\u76ae\u4e66\u3001\u5a01\u80c1\u62a5\u544a\u548c\u6709\u5173\u6700\u8fd1\u6f0f\u6d1e\u7684\u4fe1\u606f\u3002\nTsunami\u662f\u4e00\u6b3e\u901a\u7528\u7f51\u7edc\u5b89\u5168\u626b\u63cf\u4eea\uff0c\u5e26\u6709\u53ef\u6269\u5c55\u63d2\u4ef6\u7cfb\u7edf\uff0c\u7528\u4e8e\u68c0\u6d4b\u9ad8\u5ea6\u673a\u5bc6\u7684\u9ad8\u4e25\u91cd\u6027\u6f0f\u6d1e\u3002\nOpenDNS\u963b\u6b62\u90a3\u4e9b\u8bd5\u56fe\u901a\u8fc7\u5047\u88c5\u662f\u5408\u6cd5\u7f51\u7ad9\u6765\u7a83\u53d6\u4f60\u7684\u8eab\u4efd\u548c\u767b\u5f55\u4fe1\u606f\u7684\u9493\u9c7c\u7f51\u7ad9\u3002\nCRT\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u793e\u533a\u5de5\u5177\uff0c\u65e8\u5728\u5e2e\u52a9\u7ec4\u7ec7\u5feb\u901f\u3001\u8f7b\u677e\u5730\u5ba1\u67e5Azure\u5e7f\u544a\u73af\u5883\u4e2d\u7684\u8fc7\u5ea6\u6743\u9650\u3002CRT\u6709\u52a9\u4e8e\u786e\u5b9a\u914d\u7f6e\u5f31\u70b9\uff0c\u5e76\u63d0\u4f9b\u5efa\u8bae\u4ee5\u964d\u4f4e\u6b64\u98ce\u9669\u3002\n\u8fd9\u4e2a\u514d\u8d39\u7248\u672c\u7684\u6f0f\u6d1e\u8bc4\u4f30\u89e3\u51b3\u65b9\u6848\u5305\u62ec\u8fdc\u7a0b\u548c\u672c\u5730\uff08\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\uff09\u5b89\u5168\u68c0\u67e5\u3001\u5177\u6709\u57fa\u4e8eweb\u7684\u754c\u9762\u7684\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u4f53\u7cfb\u7ed3\u6784\uff0c\u4ee5\u53ca\u7528\u4e8e\u7f16\u5199\u81ea\u5df1\u7684\u63d2\u4ef6\u6216\u7406\u89e3\u73b0\u6709\u63d2\u4ef6\u7684\u5d4c\u5165\u5f0f\u811a\u672c\u8bed\u8a00\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u9650\u5236\u4e3a16\u53f0\u4e3b\u673a\u3002\n\u8be5\u5de5\u5177\u5229\u7528\u5916\u661f\u4eba\u5b9e\u9a8c\u5ba4OTX\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u5e2e\u52a9\u786e\u5b9a\u7aef\u70b9\u662f\u5426\u5728\u91cd\u5927\u7f51\u7edc\u653b\u51fb\u4e2d\u53d7\u635f\u3002\u901a\u8fc7\u4f7f\u7528OTX\u626b\u63cfIOC\uff0c\u5feb\u901f\u67e5\u770b\u6240\u6709\u7aef\u70b9\u4e0a\u7684\u5a01\u80c1\u3002\nOTX\u4e3a\u5a01\u80c1\u7814\u7a76\u4eba\u5458\u548c\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u7684\u5168\u7403\u793e\u533a\u63d0\u4f9b\u4e86\u5f00\u653e\u8bbf\u95ee\u3002\u5b83\u63d0\u4f9b\u793e\u533a\u751f\u6210\u7684\u5a01\u80c1\u6570\u636e\uff0c\u652f\u6301\u534f\u4f5c\u7814\u7a76\uff0c\u5e76\u4f7f\u7528\u6765\u81ea\u4efb\u4f55\u6765\u6e90\u7684\u5a01\u80c1\u6570\u636e\u81ea\u52a8\u66f4\u65b0\u5b89\u5168\u57fa\u7840\u8bbe\u65bd\u3002OTX\u4f7f\u5b89\u5168\u793e\u533a\u4e2d\u7684\u4efb\u4f55\u4eba\u90fd\u80fd\u591f\u79ef\u6781\u8ba8\u8bba\u3001\u7814\u7a76\u3001\u9a8c\u8bc1\u548c\u5171\u4eab\u6700\u65b0\u7684\u5a01\u80c1\u6570\u636e\u3001\u8d8b\u52bf\u548c\u6280\u672f\u3002\nClamAV\u662f\u4e00\u4e2a\u5f00\u6e90\uff08\u901a\u7528\u516c\u5171\u8bb8\u53ef[GPL]\uff09\u9632\u75c5\u6bd2\u5f15\u64ce\uff0c\u7528\u4e8e\u5404\u79cd\u60c5\u51b5\uff0c\u5305\u62ec\u7535\u5b50\u90ae\u4ef6\u548cweb\u626b\u63cf\uff0c\u4ee5\u53ca\u7aef\u70b9\u5b89\u5168\u3002\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u8bb8\u591a\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\u4e00\u4e2a\u7075\u6d3b\u4e14\u53ef\u6269\u5c55\u7684\u591a\u7ebf\u7a0b\u5b88\u62a4\u7a0b\u5e8f\u3001\u4e00\u4e2a\u547d\u4ee4\u884c\u626b\u63cf\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7528\u4e8e\u81ea\u52a8\u66f4\u65b0\u6570\u636e\u5e93\u7684\u9ad8\u7ea7\u5de5\u5177\u3002\nKali Linux\u5305\u542b\u6570\u767e\u4e2a\u9488\u5bf9\u5404\u79cd\u4fe1\u606f\u5b89\u5168\u4efb\u52a1\u7684\u5de5\u5177\uff0c\u5982\u6e17\u900f\u6d4b\u8bd5\u3001\u5b89\u5168\u7814\u7a76\u3001\u8ba1\u7b97\u673a\u53d6\u8bc1\u548c\u9006\u5411\u5de5\u7a0b\u3002\nCloudflare Zero Trust\u670d\u52a1\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u5b89\u5168\u63a7\u5236\u63aa\u65bd\uff0c\u53ef\u4f7f\u5458\u5de5\u548c\u5e94\u7528\u7a0b\u5e8f\u57283\u4e2a\u7f51\u7edc\u4f4d\u7f6e\u548c\u6700\u591a50\u4e2a\u7528\u6237\u4e4b\u95f4\u4fdd\u6301\u5728\u7ebf\u4fdd\u62a4\u3002\u670d\u52a1\u5305\u62ec\uff1a\u96f6\u4fe1\u4efb\u7f51\u7edc\u8bbf\u95ee\uff1b\u5b89\u5168\u7684\u7f51\u7edc\u7f51\u5173\uff0c\u5230IP/\u4e3b\u673a\u7684\u4e13\u7528\u8def\u7531\uff1bHTTP/S\u68c0\u67e5\u548c\u8fc7\u6ee4\u5668\uff1b\u7f51\u7edc\u9632\u706b\u5899\u5373\u670d\u52a1\uff1bDNS\u89e3\u6790\u548c\u8fc7\u6ee4\u5668\uff1b\u4ee5\u53ca\u4e91\u8bbf\u95ee\u5b89\u5168\u4ee3\u7406\u3002\nSysinternals Security Utilities\u662f\u7528\u4e8e\u8bca\u65ad\u3001\u6545\u969c\u6392\u9664\u548c\u6df1\u5165\u4e86\u89e3Windows\u5e73\u53f0\u7684\u514d\u8d39\u53ef\u4e0b\u8f7d\u5de5\u5177\u3002\nWindows\u4e2d\u7684\u5185\u5b58\u5b8c\u6574\u6027\u4e5f\u88ab\u79f0\u4e3aHypervisor protected code integrity\uff08HVCI\uff09\u2014\u2014\u662fWindows\u7684\u4e00\u79cd\u5b89\u5168\u529f\u80fd\uff0c\u4f7f\u5f97\u6076\u610f\u7a0b\u5e8f\u96be\u4ee5\u4f7f\u7528\u4f4e\u7ea7\u9a71\u52a8\u7a0b\u5e8f\u52ab\u6301\u8ba1\u7b97\u673a\u3002\nRiskIQ\u793e\u533a\u63d0\u4f9b\u5bf9\u4e92\u8054\u7f51\u60c5\u62a5\u7684\u514d\u8d39\u8bbf\u95ee\uff0c\u5305\u62ec\u6570\u5343\u7bc7OSIT\u6587\u7ae0\u548c\u5de5\u4ef6\u3002\u793e\u533a\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u653b\u51fb\u8005\u7684\u57fa\u7840\u8bbe\u65bd\u6570\u636e\u6765\u8c03\u67e5\u5a01\u80c1\uff0c\u4e86\u89e3\u4e92\u8054\u7f51\u4e0a\u66b4\u9732\u7684\u6570\u5b57\u8d44\u4ea7\uff0c\u5e76\u7ed8\u5236\u548c\u76d1\u63a7\u5176\u5916\u90e8\u653b\u51fb\u9762\u3002\nIBM X-Force Exchange\u662f\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u5a01\u80c1\u60c5\u62a5\u5e73\u53f0\uff0c\u5141\u8bb8\u7528\u6237\u4f7f\u7528\u3001\u5171\u4eab\u5a01\u80c1\u60c5\u62a5\uff0c\u5e76\u5bf9\u5176\u91c7\u53d6\u884c\u52a8\u3002\u5b83\u4f7f\u7528\u6237\u80fd\u591f\u5bf9\u6700\u65b0\u7684\u5168\u7403\u5b89\u5168\u5a01\u80c1\u8fdb\u884c\u5feb\u901f\u7814\u7a76\uff0c\u805a\u5408\u53ef\u91c7\u53d6\u884c\u52a8\u7684\u60c5\u62a5\uff0c\u54a8\u8be2\u4e13\u5bb6\uff0c\u5e76\u4e0e\u540c\u884c\u534f\u4f5c\u3002\n\u8be5\u4fe1\u606f\u5b89\u5168\u9884\u8b66\u7cfb\u7edf\u5141\u8bb8\u60a8\uff1a\u901a\u8fc7\u57fa\u4e8e\u56fe\u5f62\u7684\u6620\u5c04\u521b\u5efa\u5168\u9762\u7684\u53ef\u89c1\u6027\uff1b\u77e5\u9053\u8d44\u4ea7\u4f55\u65f6\u53d8\u5316\uff0c\u4ee5\u4fdd\u6301\u9886\u5148\u4e8e\u5a01\u80c1\uff1b\u5e76\u8d4b\u4e88\u5b89\u5168\u884c\u52a8\u4ee5\u51cf\u8f7b\u73b0\u5b9e\u4e16\u754c\u7684\u5a01\u80c1\u3002\n\u514d\u8d39\u8bbf\u95eeMandiant\u5a01\u80c1\u60c5\u62a5\u95e8\u6237\u53ef\u5e2e\u52a9\u7528\u6237\u4e86\u89e3\u6700\u65b0\u7684\u5b89\u5168\u8d8b\u52bf\uff0c\u4e3b\u52a8\u641c\u5bfb\u5a01\u80c1\u53c2\u4e0e\u8005\uff0c\u5e76\u786e\u5b9a\u54cd\u5e94\u6d3b\u52a8\u7684\u4f18\u5148\u7ea7\u3002\nSALO\u662f\u4e00\u4e2a\u751f\u6210\u5408\u6210\u65e5\u5fd7\u4e8b\u4ef6\u7684\u6846\u67b6\uff0c\u65e0\u9700\u57fa\u7840\u8bbe\u65bd\u6216\u64cd\u4f5c\u6765\u542f\u52a8\u5bfc\u81f4\u65e5\u5fd7\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u3002\n\u8be5\u5de5\u5177\u7b80\u5316\u4e86\u6536\u96c6\u659c\u63a5ATT&amp\uff1b\u6765\u81ea\u535a\u5ba2\u6216PDF\u7684CK\u00ae\u6280\u672f\u548c\u6620\u5c04ATT&amp\uff1bCK TTPs\u4ee5\u663e\u793a\u68c0\u6d4b\u5185\u5bb9\u3002\n\u8be5\u5de5\u5177\u53ef\u4ee5\u5728\u53ef\u91cd\u590d\u7684\u4e91\u652f\u6301\uff08\u6216\u5185\u90e8\u90e8\u7f72\uff09\u5b9e\u9a8c\u5ba4\u4e2d\u8fdb\u884c\u6a21\u62df\u653b\u51fb\uff0c\u91cd\u70b9\u662f\u539f\u5b50\u7ea2\u8272\u56e2\u961f\u96c6\u6210\u3002\nSplunk Training\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u6258\u7ba1\u5e73\u53f0\uff0c\u7528\u4e8e\u6309\u9700\u57f9\u8bad\uff0c\u63d0\u4f9b\u9488\u5bf9\u7279\u5b9a\u653b\u51fb\u548c\u73b0\u5b9e\u573a\u666f\u7684\u52a8\u624b\u7ec3\u4e60\u3002\n\u70ad\u9ed1\u7528\u6237\u4ea4\u6362\u63d0\u4f9b\u4e86\u5bf9\u5168\u7403\u5b89\u5168\u4e13\u4e1a\u4eba\u58eb\u793e\u533a\u5171\u4eab\u7684\u5b9e\u65f6\u5a01\u80c1\u7814\u7a76\u6570\u636e\u7684\u8bbf\u95ee\u3002\n\u6b64\u57fa\u4e8eJava\u7684\u5de5\u5177\u7528\u4e8e\u67e5\u627eweb\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6f0f\u6d1e\u3002\u5b83\u5305\u62ec\u4e00\u4e2aweb\u6d41\u91cf\u8bb0\u5f55\u5668\u3001web spider\u3001\u54c8\u5e0c\u8ba1\u7b97\u5668\u548c\u4e00\u4e2a\u626b\u63cf\u4eea\uff0c\u7528\u4e8e\u6d4b\u8bd5\u5e38\u89c1\u7684web\u5e94\u7528\u7a0b\u5e8f\u653b\u51fb\uff0c\u5982SQL\u6ce8\u5165\u548c\u8de8\u7ad9\u70b9\u811a\u672c\u3002\nWMI\u547d\u4ee4\u884c\uff08WMIC\uff09\u5b9e\u7528\u7a0b\u5e8f\u4e3aWindows Management Instrumentation\uff08WMI\uff09\u63d0\u4f9b\u547d\u4ee4\u884c\u754c\u9762\u3002WMIC\u4e0e\u73b0\u6709Shell\u548c\u5b9e\u7528\u7a0b\u5e8f\u547d\u4ee4\u517c\u5bb9\u3002\n\u6b64\u5de5\u5177\u7ec4\u88c5\u5e76\u53d1\u9001\u81ea\u5b9a\u4e49ICMP\u3001UDP\u6216TCP\u6570\u636e\u5305\uff0c\u7136\u540e\u663e\u793a\u4efb\u4f55\u56de\u590d\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u5b89\u5168\u8bc4\u4f30\u3002\nAircrack\u662f\u4e00\u5957\u7528\u4e8e\u6d4b\u8bd5\u65e0\u7ebf\u7f51\u7edc\u5bc6\u7801\u5f3a\u5ea6\u7684\u5de5\u5177\u3002\nNikto\u662f\u4e00\u6b3e\u5f00\u6e90\uff08GPL\uff09web\u670d\u52a1\u5668\u626b\u63cf\u4eea\uff0c\u53ef\u4ee5\u9488\u5bf9\u591a\u4e2a\u9879\u76ee\u5bf9web\u670d\u52a1\u5668\u6267\u884c\u6f0f\u6d1e\u626b\u63cf\uff0c\u5305\u62ec\u5371\u9669\u6587\u4ef6\u548c\u7a0b\u5e8f\u3002Nitko\u68c0\u67e5web\u670d\u52a1\u5668\u8f6f\u4ef6\u7684\u8fc7\u65f6\u7248\u672c\u3002\u5b83\u8fd8\u68c0\u67e5\u670d\u52a1\u5668\u914d\u7f6e\u9519\u8bef\u4ee5\u53ca\u5b83\u4eec\u53ef\u80fd\u5f15\u5165\u7684\u4efb\u4f55\u6f0f\u6d1e\u3002\nW3af\u662f\u4e00\u4e2a\u7528\u4e8e\u67e5\u627e\u548c\u5229\u7528web\u5e94\u7528\u7a0b\u5e8f\u6f0f\u6d1e\u7684\u7075\u6d3b\u6846\u67b6\uff0c\u5177\u6709\u6570\u5341\u4e2aweb\u8bc4\u4f30\u548c\u5229\u7528\u63d2\u4ef6\u3002\n\u8be5\u5de5\u5177\u5141\u8bb8Mac\u7528\u6237\u5728\u865a\u62df\u673a\u4e2d\u8fd0\u884cWindows\u3001Linux\u3001\u5bb9\u5668\u3001Kubernetes\u7b49\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u3002\nPhishInSuits\uff08pis.py\uff09\u5de5\u5177\u9488\u5bf9BEC\u653b\u51fb\u7b49\u573a\u666f\u8fdb\u884c\u5b89\u5168\u8bc4\u4f30\u548c\u6d4b\u8bd5\u63a7\u5236\u6846\u67b6\u3002\u5b83\u5c06\u8fd9\u79cd\u975e\u6cd5\u540c\u610f\u653b\u51fb\u4e0e\u57fa\u4e8e\u77ed\u4fe1\u7684\u7f51\u7edc\u9493\u9c7c\u76f8\u7ed3\u5408\uff0c\u4ee5\u6a21\u62dfBEC\u6d3b\u52a8\uff0c\u5e76\u5305\u62ec\u81ea\u52a8\u6570\u636e\u8fc7\u6ee4\u529f\u80fd\u3002\nWhiskySaML\u5de5\u5177\u81ea\u52a8\u8fdc\u7a0b\u63d0\u53d6ADFS\u7b7e\u540d\u8bc1\u4e66\u3002\u7136\u540e\uff0cWhiskySaml\u4f7f\u7528\u8be5\u7b7e\u540d\u8bc1\u4e66\u53d1\u8d77Golden SAML\u653b\u51fb\uff0c\u5e76\u6a21\u62df\u76ee\u6807\u7ec4\u7ec7\u5185\u7684\u4efb\u4f55\u7528\u6237\u3002\n\u8be5\u5de5\u5177\u65e8\u5728\u901a\u8fc7Burp Collaborator\u901a\u8fc7DNS\u8fc7\u6ee4\u76f2\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u3002\n\u6b64\u5de5\u5177\u662f\u9488\u5bf9Microsoft Office 365\u7684\u7528\u6237\u540d\u679a\u4e3e\u548c\u5bc6\u7801\u55b7\u6d12\u5de5\u5177\u3002\nTachyon\u662f\u4e00\u79cd\u5feb\u901f\u7684web\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u4fa6\u5bdf\u5de5\u5177\u3002\u5b83\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u5bf9web\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u722c\u7f51\uff0c\u5e76\u901a\u8fc7\u6dfb\u52a0\u62a5\u544a\u9875\u9762\u6216\u6cc4\u6f0f\u5185\u90e8\u6570\u636e\u7684\u811a\u672c\uff08\u4e5f\u79f0\u4e3a\u76f2\u722c\u7f51\uff09\u6765\u67e5\u627e\u9057\u7559\u6587\u4ef6\u6216\u672a\u7f16\u5236\u7d22\u5f15\u7684\u6587\u4ef6\u3002\u5b83\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\uff0c\u5e76\u9488\u5bf9\u7279\u5b9a\u7684\u57df\u3002Tachyon\u4f7f\u7528\u5185\u90e8\u6570\u636e\u5e93\u5feb\u901f\u6784\u5efa\u8fd9\u4e9b\u76f2\u67e5\u8be2\u3002\nVane2\u662fWordPress\u7f51\u7ad9\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\u3002\u5b83\u65e8\u5728\u9488\u5bf9WordPress\u7f51\u7ad9\uff0c\u8bc6\u522b\u76f8\u5e94\u7684WordPress\u7248\u672c\u53ca\u5176\u5b89\u88c5\u7684\u63d2\u4ef6\uff0c\u4ee5\u4fbf\u62a5\u544a\u6bcf\u4e2a\u7f51\u7ad9\u4e0a\u7684\u5df2\u77e5\u6f0f\u6d1e\u3002\nBatea\u662f\u673a\u5668\u5b66\u4e60\u5728\u6d4b\u8bd5\u548c\u7f51\u7edc\u4fa6\u5bdf\u4e2d\u7684\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u3002\u5b83\u4f7f\u7528\u5730\u56fe\u62a5\u544a\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5f02\u5e38\u68c0\u6d4b\u7cfb\u5217\u7684\u4e0a\u4e0b\u6587\u9a71\u52a8\u7f51\u7edc\u8bbe\u5907\u6392\u540d\u6846\u67b6\u3002Batea\u7684\u76ee\u6807\u662f\u5141\u8bb8\u5b89\u5168\u56e2\u961f\u4f7f\u7528nmap\u626b\u63cf\u62a5\u544a\u81ea\u52a8\u8fc7\u6ee4\u5927\u578b\u7f51\u7edc\u4e2d\u611f\u5174\u8da3\u7684\u7f51\u7edc\u8d44\u4ea7\u3002\n\u8be5\u5de5\u5177\u626b\u63cf\u57fa\u7840\u8bbe\u65bd\uff0c\u5982\u4ee3\u7801\uff08IaC\uff09\u3001\u5bb9\u5668\u6620\u50cf\u3001\u5f00\u653e\u6e90\u4ee3\u7801\u5305\u548c\u7ba1\u9053\u914d\u7f6e\uff0c\u4ee5\u67e5\u627e\u5b89\u5168\u9519\u8bef\u3002\u901a\u8fc7\u6570\u767e\u4e2a\u5185\u7f6e\u7b56\u7565\uff0cCheckov\u53ef\u4ee5\u5728\u5f00\u53d1\u4eba\u5458\u5de5\u5177\uff08CLI\u3001IDE\uff09\u548c\u5de5\u4f5c\u6d41\uff08CI/CD\u7ba1\u9053\uff09\u4e2d\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u914d\u7f6e\u548c\u6f0f\u6d1e\u3002\nATOMs\u662f\u51e0\u4e2a\u5e38\u89c1\u5a01\u80c1\u5bf9\u624b\u89c2\u5bdf\u5230\u7684\u884c\u4e3a\u7684\u514d\u8d39\u5b58\u50a8\u5e93\uff0c\u6620\u5c04\u5230MITRE ATT&amp\uff1bCK\u6846\u67b6\u3002\u539f\u5b50\u53ef\u4ee5\u901a\u8fc7\u76ee\u6807\u6247\u533a\u3001\u533a\u57df\u6216\u6076\u610f\u8f6f\u4ef6\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4ee5\u4fbf\u4e8e\u4fe1\u606f\u5171\u4eab\u548c\u90e8\u7f72\u63a8\u8350\u7684\u5b89\u5168\u7f13\u89e3\u63aa\u65bd\u3002\nClusterFuzz\u662f\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u6a21\u7cca\u57fa\u7840\u8bbe\u65bd\uff0c\u53ef\u4ee5\u53d1\u73b0\u8f6f\u4ef6\u4e2d\u7684\u5b89\u5168\u6027\u548c\u7a33\u5b9a\u6027\u95ee\u9898\u3002\u5b83\u4e5f\u662fGoogle OSS Fuzz\u7684fuzzing\u540e\u7aef\u3002ClusterFuzz Lite\u662f\u57fa\u4e8eClusterFuzz\u7684\u7b80\u5355CI\u96c6\u6210\u6a21\u7cca\u5316\u3002\n\u6b64\u5de5\u5177\u53ef\u4fdd\u62a4\u548c\u68c0\u6d4b\u7aef\u70b9\u5a01\u80c1\uff0c\u5305\u62ec\u57fa\u4e8e\u6587\u4ef6\u548c\u65e0\u6587\u4ef6\u7684\u6076\u610f\u8f6f\u4ef6\u3002\u5185\u7f6e\u4e8eWindows 10\u548c11\u4ee5\u53caWindows Server\u7248\u672c\u4e2d\u3002\nMicrosoft Safety Scanner\u662f\u4e00\u6b3e\u626b\u63cf\u5de5\u5177\uff0c\u65e8\u5728\u67e5\u627e\u548c\u5220\u9664Windows\u8ba1\u7b97\u673a\u4e0a\u7684\u6076\u610f\u8f6f\u4ef6\u3002\u5b83\u53ef\u4ee5\u8fd0\u884c\u626b\u63cf\u4ee5\u67e5\u627e\u6076\u610f\u8f6f\u4ef6\uff0c\u5e76\u5c1d\u8bd5\u9006\u8f6c\u5df2\u8bc6\u522b\u5a01\u80c1\u6240\u505a\u7684\u66f4\u6539\u3002\n\u8be5\u5de5\u5177\u7531\u5fae\u8f6f\u6bcf\u6708\u5b9a\u671f\u53d1\u5e03\uff0c\u4f5c\u4e3aWindows Update\u7684\u4e00\u90e8\u5206\u6216\u4f5c\u4e3a\u72ec\u7acb\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u53d1\u73b0\u548c\u6d88\u9664\u7279\u5b9a\u7684\u666e\u904d\u5a01\u80c1\uff0c\u5e76\u626d\u8f6c\u4ed6\u4eec\u6240\u505a\u7684\u6539\u53d8\u3002\nMSTICPy\u662f\u4e00\u4e2a\u4e0d\u53d7SIEM\u5f71\u54cd\u7684Python\u5de5\u5177\u5305\uff0c\u4f9b\u5b89\u5168\u5206\u6790\u5e08\u534f\u52a9\u8c03\u67e5\u548c\u5bfb\u627e\u5a01\u80c1\u3002\u5b83\u4e3b\u8981\u8bbe\u8ba1\u7528\u4e8eJupyter\u7b14\u8bb0\u672c\u7535\u8111\u3002\n\u8be5\u670d\u52a1\u53ef\u8bc6\u522b\u7f51\u7edc\u4e0a\u5df2\u77e5\u7684\u9493\u9c7c\u548c\u6076\u610f\u8f6f\u4ef6\uff0c\u5e76\u5e2e\u52a9\u901a\u77e5\u7528\u6237\u548c\u7f51\u7ad9\u6240\u6709\u8005\u6f5c\u5728\u7684\u5371\u5bb3\u3002\u5b83\u88ab\u96c6\u6210\u5230\u8bb8\u591a\u4e3b\u8981\u4ea7\u54c1\u4e2d\uff0c\u5e76\u4e3a\u7f51\u7ad9\u7ba1\u7406\u5458\u63d0\u4f9b\u5de5\u5177\u3002\n\u8be5\u5de5\u5177\u7528\u4e8e\u5c06\u57fa\u4e8esyslog\u7684\u6570\u636e\u83b7\u53d6\u5230Splunk\u4e2d\uff0c\u5305\u62ec\u7528\u4e8e\u6570\u636e\u8fc7\u6ee4\u548c\u89e3\u6790\u7684\u51fd\u6570\u3002\n\u4f01\u4e1a\u65e5\u5fd7\u641c\u7d22\u548c\u5f52\u6863\uff08ELSA\uff09\u662f\u4e00\u4e2a\u4e09\u5c42\u65e5\u5fd7\u63a5\u6536\u5668\u3001\u5f52\u6863\u5668\u3001\u7d22\u5f15\u5668\u548cweb\u524d\u7aef\uff0c\u7528\u4e8e\u63a5\u6536\u7cfb\u7edf\u65e5\u5fd7\u3002\n\u8be5\u5b58\u50a8\u5e93\u5305\u542b\u4e00\u4e2aPowerShell\u6a21\u5757\uff0c\u7528\u4e8e\u68c0\u6d4b\u53ef\u80fd\u662fUNC2452\u548c\u5176\u4ed6\u5a01\u80c1\u53c2\u4e0e\u8005\u6d3b\u52a8\u6307\u6807\u7684\u5de5\u4ef6\u3002\u4e00\u4e9b\u6307\u6807\u662f&#34\uff1b\u9ad8\u4fdd\u771f\u5ea6&#34\uff1b\u59a5\u534f\u6307\u6807\uff1b\u5176\u4ed6\u4eba\u5de5\u5236\u54c1\u662f\u6240\u8c13\u7684&#34\uff1b\u4e24\u7528&#34\uff1b\u4eba\u5de5\u5236\u54c1\u4e24\u7528\u5de5\u4ef6\u53ef\u80fd\u4e0e\u5a01\u80c1\u53c2\u4e0e\u8005\u7684\u6d3b\u52a8\u6709\u5173\uff0c\u4f46\u4e5f\u53ef\u80fd\u4e0e\u5408\u6cd5\u529f\u80fd\u6709\u5173\u3002\nVirusTotal\u4f7f\u752870\u591a\u4e2a\u9632\u75c5\u6bd2\u626b\u63cf\u7a0b\u5e8f\u548cURL/domain blocklisting\u670d\u52a1\u4ee5\u53ca\u5404\u79cd\u5de5\u5177\u68c0\u67e5\u9879\u76ee\uff0c\u4ece\u7814\u7a76\u5185\u5bb9\u4e2d\u63d0\u53d6\u4fe1\u53f7\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u4ece\u8ba1\u7b97\u673a\u4e2d\u9009\u62e9\u6587\u4ef6\u5e76\u5c06\u5176\u53d1\u9001\u5230VirusTotal\u3002\u63d0\u4ea4\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8eHTTP\u7684\u516c\u5171API\u4ee5\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u811a\u672c\u3002\nNetfilter\u662f\u5728\u6807\u51c6Linux\u5185\u6838\u4e2d\u5b9e\u73b0\u7684\u6570\u636e\u5305\u8fc7\u6ee4\u5668\u3002\u7528\u6237\u7a7a\u95f4iptables\u5de5\u5177\u7528\u4e8e\u914d\u7f6e\u3002\u5b83\u652f\u6301\u5305\u8fc7\u6ee4\uff08\u65e0\u72b6\u6001\u6216\u6709\u72b6\u6001\uff09\u3001\u591a\u79cd\u7f51\u7edc\u5730\u5740\u548c\u7aef\u53e3\u8f6c\u6362\uff08NAT/NAPT\uff09\u4ee5\u53ca\u7528\u4e8e\u7b2c\u4e09\u65b9\u6269\u5c55\u7684\u591a\u4e2aAPI\u5c42\u3002\u5b83\u5305\u62ec\u8bb8\u591a\u4e0d\u540c\u7684\u6a21\u5757\uff0c\u7528\u4e8e\u5904\u7406\u4e0d\u89c4\u5219\u7684\u534f\u8bae\uff0c\u4f8b\u5982FTP\u3002\nWireshark\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u591a\u5e73\u53f0\u7f51\u7edc\u534f\u8bae\u5206\u6790\u5668\uff0c\u5141\u8bb8\u7528\u6237\u68c0\u67e5\u6765\u81ea\u5b9e\u65f6\u7f51\u7edc\u6216\u78c1\u76d8\u4e0a\u6355\u83b7\u6587\u4ef6\u7684\u6570\u636e\u3002\u8be5\u5de5\u5177\u53ef\u4ee5\u4ea4\u4e92\u6d4f\u89c8\u6355\u83b7\u6570\u636e\uff0c\u6df1\u5165\u5230\u6240\u9700\u7684\u6570\u636e\u5305\u7ec6\u8282\u7ea7\u522b\u3002Wireshark\u5177\u6709\u591a\u79cd\u529f\u80fd\uff0c\u5305\u62ec\u4e30\u5bcc\u7684\u663e\u793a\u8fc7\u6ee4\u8bed\u8a00\u548c\u67e5\u770bTCP\u4f1a\u8bdd\u91cd\u5efa\u6d41\u7684\u80fd\u529b\u3002\u5b83\u8fd8\u652f\u6301\u6570\u767e\u79cd\u534f\u8bae\u548c\u5a92\u4f53\u7c7b\u578b\u3002\neTerCap\u662f\u4e00\u5957\u9488\u5bf9\u5c40\u57df\u7f51\u4e0a\u4e2d\u95f4\u5bf9\u624b\u653b\u51fb\u7684\u5957\u4ef6\uff0c\u5305\u62ec\u76d1\u542c\u5b9e\u65f6\u8fde\u63a5\u3001\u52a8\u6001\u5185\u5bb9\u8fc7\u6ee4\u548c\u8bb8\u591a\u5176\u4ed6\u529f\u80fd\u3002\u5b83\u652f\u6301\u591a\u79cd\u534f\u8bae\u7684\u4e3b\u52a8\u548c\u88ab\u52a8\u89e3\u5256\uff08\u5305\u62ec\n......", "note_en": "As part of our continuing mission to reduce cybersecurity risk across U.S. critical infrastructure partners and state, local, tribal, and territorial governments, CISA has compiled a list of free cybersecurity tools and services to help organizations further advance their security capabilities. This living repository includes cybersecurity services provided by CISA, widely used open source tools, and free tools and services offered by private and public sector organizations across the cybersecurity community. CISA will implement a process for organizations to submit additional free tools and services for inclusion on this list in the future.\n The list is not comprehensive and is subject to change pending future additions. CISA applies neutral principles and criteria to add items and maintains sole and unreviewable discretion over the determination of items included. CISA does not attest to the suitability or effectiveness of these services and tools for any particular use case. CISA does not endorse any commercial product or service. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation, or favoring by CISA.\n   Fix the known security flaws in software. Check the  CISA Known Exploited Vulnerabilities (KEV) Catalog for software used by your organization and, if listed, update the software to the latest version according to the vendor\u2019s instructions.  Note: CISA continually updates the KEV catalog with known exploited vulnerabilities.\n  Implement multifactor authentication (MFA). Use  multifactor authentication where possible. MFA is a layered approach to securing\u00a0your online accounts and the data they contain. When you enable MFA in your online services (like email),\u00a0you must provide a combination of two or more authenticators to verify\u00a0your identity before\u00a0the service grants you\u00a0access. Using MFA protects your account more than just using a username\u00a0and password. Why? Because even if one factor\u00a0(like your password)\u00a0becomes compromised, unauthorized users will be unable to meet the second authentication requirement, ultimately stopping them from gaining access to your\u00a0accounts.\n  Halt  bad practices. Take immediate steps to: (1) replace end-of-life software products that no longer receive software updates; (2) replace any system or products that rely on known/default/unchangeable passwords; and (3) adopt MFA (see above) for remote or administrative access to important systems, resources, or databases.\n  Sign up for CISA\u2019s Cyber Hygiene Vulnerability Scanning. Register for this service by emailing  vulnerability@cisa.dhs.gov. Once initiated, this service is mostly automated and requires little direct interaction.\u00a0CISA performs the vulnerability scans and delivers a weekly report. After CISA receives the required paperwork, scanning will start within 72 hours and organizations will begin receiving reports within two weeks.  Note: vulnerability scanning helps secure internet-facing systems from weak configurations and known vulnerabilities and encourages the adoption of best practices.\n  Get your Stuff Off Search (S.O.S.). While zero-day attacks draw the most attention, frequently, less complex exposures to both cyber and physical security are missed. Get your  Stuff Off Search\u2013S.O.S.\u2013and reduce internet attack surfaces that are visible to anyone on web-based search platforms.\n  After making progress on the measures above, organizations can use the free services and tools listed below to mature their cybersecurity risk management. These resources are categorized according to the four goals outlined in  CISA Insights: Implement Cybersecurity Measures Now to Protect Against Critical Threats:\n   CISA provides automatic updates to subscribers via email, RSS feeds, and social media. Subscribe to be notified of CISA publications upon release.\n This service evaluates external network presence by executing continuous scans of public, static IPs for accessible services and vulnerabilities. It provides weekly vulnerability reports and ad-hoc alerts. See  https://www.cisa.gov/cyber-resource-hub for details.\n This service evaluates known and discovered publicly accessible websites for potential bugs and weak configuration\u00a0to\u00a0provide recommendations for mitigating web application security risks.\u00a0See  https://www.cisa.gov/cyber-resource-hub for details.\n This service provides\u00a0an opportunity\u00a0for determining the potential susceptibility of personnel to phishing attacks. This is a practical exercise intended to support and measure the effectiveness of security awareness training. See  https://www.cisa.gov/cyber-resource-hub for details.\n This test simulates the tactics and techniques of real-world adversaries to identify and validate exploitable pathways. This service is ideal for testing perimeter defenses, the security of externally available applications, and the potential for exploitation of open source information. See  https://www.cisa.gov/cyber-resource-hub for details.\n Immunet is a malware and antivirus protection system for Microsoft Windows that utilizes cloud computing to provide enhanced community-based security.\n Cloudflare DDoS protection secures websites, applications, and entire networks while ensuring the performance of legitimate traffic is not compromised.\n SSL (Secure Socket Layer) is the standard security technology for establishing an encrypted link between a web server and a browser. Cloudflare allows any internet property to use SSL with the click of a button.\n This capability offers isolated browsing by opening Microsoft Edge in an isolated browsing environment to better protect the device and data from malware.\n Controlled folder access in Windows helps protect against threats like ransomware by protecting folders, files, and memory areas on the device from unauthorized changes by unfriendly applications.\n This tool is used to protect and detect endpoint threats including file-based and fileless malware. Built into Windows 10 and 11 and in versions of Windows Server.\n This tool assists organizations in protecting their key national cyber assets. The tool provides users with a systematic and repeatable approach to assessing the security posture of their cyber systems and networks. It includes both high-level and detailed questions related to all industrial control and IT systems.\n This tool is designed to help identify devices and applications. The spreadsheet can be used to track hardware, software, and sensitive information.\n    This tool for Android devices is designed to help block users from accessing known sites that have viruses or other malware.\n This tool is designed to prevent computers and devices from connecting to malware or phishing sites.\n This toolset identifies known phishing and malware across the web and helps notify users and website owners of potential harm. It is integrated into many major products and provides tools to webmasters.\n Project Shield is a free service that defends news, human rights, and election monitoring sites from DDoS attacks\n reCAPTCHA uses an advanced risk analysis engine and adaptive challenges to keep malicious software from engaging in abusive activities on a user&#39;s website.\n Web Risk API is a User Protection Service from Google Cloud designed to reduce the risk of threats targeting user generated content. Web Risk API lets organizations compare URLs in their environment against a repository of over 1 million unsafe URLs.\n This tool helps users strengthen their security posture by evaluating their security and data attack surface; providing asset inventory and discovery; identifying misconfigurations, vulnerabilities and threats; and helping them mitigate and remediate risks.\n OSS-Fuzz aims to make common open source software more secure and stable by combining modern fuzzing techniques with scalable, distributed execution.\n  Go Safe Web is a collection of libraries for writing secure-by-default HTTP servers in Go.\n OSV is a vulnerability database and triage infrastructure for open source projects aimed at helping both open source maintainers and consumers of open source.\n   Security Scorecards is a collection of security health metrics for open source, allowing users to evaluate the security practices of an open source package before use. Results available publicly as a Google Cloud Big Query Dataset.\n Tink is a multi-language, cross-platform, open-source library that provides cryptographic APIs that are secure, easy to use correctly, and hard(er) to misuse.\n This service provides a number of security resources including security blueprints, whitepapers, threat reports, and information regarding recent vulnerabilities.\n Tsunami is a general purpose network security scanner with an extensible plugin system for detecting high severity vulnerabilities with high confidence.\n OpenDNS blocks phishing websites that try to steal your identity and login information by pretending to be a legitimate website.\n CRT is a free community tool designed to help organizations quickly and easily review excessive permissions in their Azure AD environments. CRT helps determine configuration weaknesses and provides advice to mitigate this risk.\n This free version of a vulnerability assessment solution includes remote and local (authenticated) security checks, a client/server architecture with a web-based interface, and an embedded scripting language for writing your own plugins or understanding existing ones. Limited by default to 16 hosts.\n This tool leverages data from Alien Labs OTX to help identify if endpoints have been compromised in major cyberattacks. Provides quick visibility into threats on all endpoints by scanning IOCs using OTX.\n OTX provides open access to a global community of threat researchers and security professionals. It delivers community-generated threat data, enables collaborative research, and automates the process of updating security infrastructure with threat data from any source. OTX enables anyone in the security community to actively discuss, research, validate, and share the latest threat data, trends, and techniques.\n ClamAV is an open-source (general public license [GPL]) antivirus engine used in a variety of situations, including email and web scanning, and endpoint security. It provides many utilities for users, including a flexible and scalable multi-threaded daemon, a command-line scanner, and an advanced tool for automatic database updates.\n Kali Linux contains several hundred tools targeted toward various information security tasks, such as penetration testing, security research, computer forensics, and reverse engineering.\n Cloudflare Zero Trust Services are essential security controls to keep employees and apps protected online across 3 network locations and up to 50 users. Services include: Zero Trust Network Access; Secure Web Gateway, Private Routing to IP/Hosts; HTTP/S Inspection and Filters; Network Firewall as a Service; DNS Resolution and Filters; and Cloud Access Security Broker.\n Sysinternals Security Utilities are free, downloadable tools for diagnosing, troubleshooting, and deeply understanding the Windows platform.\n Memory integrity in Windows\u2014also known as Hypervisor-protected code integrity (HVCI)\u2014is a Windows security feature that makes it difficult for malicious programs to use low-level drivers to hijack computers.\n The RiskIQ community offers free access to internet intelligence, including thousands of OSINT articles and artifacts. Community users can investigate threats by pivoting through attacker infrastructure data, understand what digital assets are internet-exposed, and map and monitor their external attack surface.\n IBM X-Force Exchange is a cloud-based threat intelligence platform that allows users to consume, share, and act on threat intelligence. It enables users to conduct rapid research of the latest global security threats, aggregate actionable intelligence, consult with experts, and collaborate with peers.\n This early warning system for information security allows you to: create comprehensive visibility through graph-based mapping; know when assets change to stay ahead of the threat; and empower security operations to mitigate real-world threats.\n Free access to the Mandiant Threat Intelligence Portal helps users understand recent security trends, proactively hunt threat actors, and prioritize response activities.\n SALO is a framework for generating synthetic log events without the need for infrastructure or actions to initiate the event that causes a log event.\n This tool simplifies the process of collecting MITRE ATT&amp;CK \u00ae techniques from blogs or PDFs and mapping ATT&amp;CK TTPs to Splunk detection content.\n This tool enables simulated attacks in a repeatable cloud-enabled (or on-premises) lab with a focus on Atomic Red Team integration.\n Splunk Training is a free, hosted platform for on-demand training with hands-on practice addressing specific attacks and realistic scenarios.\n Carbon Black User Exchange provides access to real-time threat research data shared by a global community of security professionals.\n  This Java-based tool is used to find vulnerabilities in web applications. It includes a web traffic recorder, web spider, hash calculator, and a scanner for testing common web application attacks, such as SQL injection and cross-site scripting.\n  The WMI command-line (WMIC) utility provides a command-line interface for Windows Management Instrumentation (WMI). WMIC is compatible with existing shells and utility commands.\n  This tool assembles and sends custom ICMP, UDP, or TCP packets and then displays any replies. It can be useful for performing security assessments.\n Aircrack is a suite of tools for testing the strength of passwords used for wireless networks.\n Nikto is an open source (GPL) web server scanner that performs vulnerability scanning against web servers for multiple items, including dangerous files and programs. Nitko checks for outdated versions of web server software. It also checks for server configuration errors and any possible vulnerabilities they might have introduced.\n W3af is a flexible framework for finding and exploiting web application vulnerabilities, featuring dozens of web assessment and exploitation plugins.\n This tool allows Mac users to run Windows, Linux, containers, Kubernetes, and more in virtual machines without rebooting.\n The PhishInSuits (pis.py) tool conducts security assessments and tests control frameworks against scenarios, such as BEC attacks. It combines this variation of illicit consent attacks with SMS-based phishing to emulate BEC campaigns and includes automated data-exfiltration capabilities.\n The WhiskeySAML tool automates the remote extraction of an ADFS signing certificate.\u00a0WhiskeySAML then uses this signing certificate to launch a Golden SAML attack and impersonate any user within the target organization.\n This tool is designed to exfiltrate blind remote code execution output over DNS via Burp Collaborator.\n This tool is a username enumeration and password spraying tool aimed at Microsoft Office 365.\n Tachyon is a rapid web application security reconnaissance tool. It is designed to crawl a web application and look for leftover or non-indexed files with the addition of reporting pages or scripts leaking internal data (a.k.a &#34;blind&#34; crawling). It is used from the command line and targeted at a specific domain. Tachyon uses an internal database to construct these blind queries swiftly.\n Vane2 is a WordPress site vulnerability scanner. It is meant to be targeted at WordPress websites and identifies the corresponding WordPress version as well as its installed plugins in order to report known vulnerabilities on each.\n Batea is a practical application of machine learning for pentesting and network reconnaissance. It consumes map reports and uses a context-driven network device ranking framework based on the anomaly detection family of machine learning algorithms. The goal of Batea is to allow security teams to automatically filter interesting network assets in large networks using nmap scan reports.\n This tool scans Infrastructure as Code (IaC), container images, open-source packages, and pipeline configuration for security errors. With hundreds of built-in policies, Checkov surfaces misconfigurations and vulnerabilities in code across developer tools (CLI, IDE) and workflows (CI/CD pipelines).\n ATOMs is a free repository of observed behaviors of several common threat adversaries, mapped to the MITRE ATT&amp;CK framework. ATOMs can be filtered by targeted sector, region, or malware used for ease of information sharing and deployment of recommended security mitigations.\n ClusterFuzz is a scalable fuzzing infrastructure that finds security and stability issues in software. It is also the fuzzing backend for Google OSS-Fuzz. ClusterFuzz Lite is simple CI-integrated fuzzing based on ClusterFuzz.\n  This tool protects and detects endpoint threats, including file-based and fileless malware. Built into Windows 10 and 11 and in versions of Windows Server.\n Microsoft Safety Scanner is a scan tool designed to find and remove malware from Windows computers. It can run scans to find malware and try to reverse changes made by identified threats.\n This tool is released by Microsoft on a monthly cadence as part of Windows Update or as a standalone tool. It can be used to find and remove specific prevalent threats and reverse the changes they have made.\n MSTICPy is a SIEM-agnostic package of Python tools for security analysts to assist in investigations and threat hunting. It is primarily designed for use in Jupyter notebooks.\n This service identifies known phishing and malware across the web and helps notify users and website owners of potential harm. It is integrated into many major products and provides tools to webmasters.\n  This tool is used for getting syslog-based data into Splunk, including functions for data filtering and parsing.\n Enterprise Log Search and Archive (ELSA) is a three-tier log receiver, archiver, indexer, and web front end for incoming syslog.\n This repository contains a PowerShell module for detecting artifacts that may be indicators of UNC2452 and other threat actor activity. Some indicators are &#34;high-fidelity&#34; indicators of compromise; other artifacts are so-called &#34;dual-use&#34; artifacts. Dual-use artifacts may be related to threat actor activity, but also may be related to legitimate functionality.\n VirusTotal inspects items with over 70 antivirus scanners and URL/domain blocklisting services, in addition to a variety of tools, to extract signals from the studied content. Users can select a file from a computer via the browser and send it to VirusTotal. Submissions may be scripted in any programming language using the HTTP-based public API.\n Netfilter is a packet filter implemented in the standard Linux kernel. The user space iptables tool is used for configuration. It supports packet filtering (stateless or stateful), many kinds of network address and port translation (NAT/NAPT), and multiple API layers for third-party extensions. It includes many different modules for handling unruly protocols, such as FTP.\n Wireshark is an open-source multi-platform network protocol analyzer that allows users to examine data from a live network or from a capture file on disk. The tool can interactively browse capture data, delving down into just the level of packet detail needed. Wireshark has multiple features, including a rich display filter language and the ability to view the reconstructed stream of a TCP session. It also supports hundreds of protocols and media types.\n Ettercap is a suite for adversary-in-the-middle attacks on LAN that includes sniffing of live connections, content filtering on the fly, and many other features. It supports active and passive dissection of many protocols (includ\n......", "posttime": "2022-02-20 20:48:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u514d\u8d39,cisa,free,\u5b89\u5168", "title": "\u7f8e\u56fdCISA\u63d0\u4f9b\u7684\u514d\u8d39\u7f51\u7edc\u5b89\u5168\u670d\u52a1\u548c\u5de5\u5177\u6e05\u5355", "title_en": "List of free cybersecurity services and tools from US CISA", "transed": 1, "url": "https://www.cisa.gov/free-cybersecurity-services-and-tools", "via": "", "real_tags": ["\u7f8e\u56fd", "\u514d\u8d39", "cisa", "free", "\u5b89\u5168"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074289, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662f\u65f6\u5019\u627f\u8ba4\u81ea\u5df1\u7684\u7f3a\u70b9\u4e86\u3002env\u6587\u4ef6\uff0c\u4ee5\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u548c\u673a\u5bc6\u7ba1\u7406\u7684\u4e0b\u4e00\u4e2a\u8fdb\u5316\u6b65\u9aa4\u3002\n\u867d\u7136env\u6587\u4ef6\u4ecd\u7136\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u4e14\u662f\u5728\u6e90\u4ee3\u7801\u4e2d\u5b58\u50a8\u673a\u5bc6\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u5b89\u5168\u98ce\u9669\u548c\u5bf9\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u7684\u5f71\u54cd\u76f4\u5230\u73b0\u5728\u624d\u5b8c\u5168\u610f\u8bc6\u5230\u3002\n\u4e3a\u4e86\u7406\u89e3\u662f\u4ec0\u4e48\u63a8\u52a8\u4e86\u79d8\u5bc6\u7ba1\u7406\u7684\u4e0b\u4e00\u6b21\u8fdb\u5316\u8f6c\u53d8\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u56de\u987e\u4e00\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u5386\u53f2\u4ee5\u53ca\u539f\u56e0\u3002env\u6587\u4ef6\u5728\u7406\u8bba\u4e0a\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u4f46\u4ea7\u751f\u7684\u95ee\u9898\u6bd4\u89e3\u51b3\u7684\u95ee\u9898\u8fd8\u591a\u3002\n12\u56e0\u7d20\u5e94\u7528\u7a0b\u5e8f\u65b9\u6cd5\u8bba\u6709\u52a9\u4e8e\u5b9a\u4e49\u5f00\u53d1\u548c\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u7684\u73b0\u4ee3\u6700\u4f73\u5b9e\u8df5\u3002\u53ef\u4ee5\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u201c\u56e0\u7d20\u201d\u662f\u7528\u73af\u5883\u53d8\u91cf\u52a0\u8f7d\u7684\u52a8\u6001\u503c\u66ff\u6362\u6e90\u4ee3\u7801\u4e2d\u7684\u786c\u7f16\u7801\u914d\u7f6e\u548c\u673a\u5bc6\u3002\n\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u5bf9\u5b89\u5168\u6027\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u80dc\u5229\uff0c\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u4efb\u4f55\u6709\u6743\u8bbf\u95ee\u4ee3\u7801\u7684\u4eba\u90fd\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e9b\u79d8\u5bc6\u3002\u56e0\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u73af\u5883\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u7279\u6b8a\u4ee3\u7801\u6216\u7b2c\u4e09\u65b9\u5e93\u6765\u8bbf\u95ee\u5b83\u4eec\u3002\n\u201c\u6d4b\u8bd5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u5730\u5c06\u6240\u6709\u914d\u7f6e\u4ece\u4ee3\u7801\u4e2d\u5206\u79bb\u51fa\u6765\u7684\u8bd5\u91d1\u77f3\u662f\uff0c\u4ee3\u7801\u5e93\u662f\u5426\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u800c\u4e0d\u635f\u5bb3\u4efb\u4f55\u51ed\u636e\u3002\u201d-12\u56e0\u7d20\u5e94\u7528III-\u914d\u7f6e\n\u6b64\u5916\uff0c\u7531\u4e8e\u914d\u7f6e\u73b0\u5728\u662f\u52a8\u6001\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u73af\u5883\u4e2d\u8fd0\u884c\uff0c\u4ece\u672c\u5730\u5f00\u53d1\u5230\u751f\u4ea7\uff0c\u65e0\u9700\u66f4\u6539\u4ee3\u7801\u3002\u200d \u867d\u7136\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u7684\u5b89\u5168\u6027\u548c\u90e8\u7f72\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u7f3a\u5c11\u4e86\u4e00\u4e9b\u4e1c\u897f\uff1a\u5982\u4f55\u5728\u73af\u5883\u4e4b\u95f4\u7ba1\u7406\u3001\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u548c\u540c\u6b65\u73af\u5883\u53d8\u91cf\uff1f\u8c01\u5c06\u8d1f\u8d23\u7ba1\u7406\u5b83\u4eec\uff1f\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u88ab\u9519\u8bef\u914d\u7f6e\uff0c\u771f\u76f8\u7684\u6765\u6e90\u662f\u4ec0\u4e48\uff1f\n\u8ba9\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u7ba1\u7406\u7684\u5386\u53f2\uff0c\u4e86\u89e3\u5982\u4f55\u8fdb\u884c\u7ba1\u7406\u3002env\u6587\u4ef6\u8bd5\u56fe\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u3002\n12\u56e0\u7d20\u5e94\u7528\u7a0b\u5e8f\u6700\u521d\u7531Heroku\u7684\u5f00\u53d1\u8005\u57282012\u5e74\u8d77\u8349\uff0c\u4ed6\u4eec\u5728\u5e94\u7528\u7a0b\u5e8f\u4eea\u8868\u677f\u4e2d\u6784\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aConfig Vars\u7684\u529f\u80fd\u3002\u7136\u540e\u5728\u90e8\u7f72\u671f\u95f4\u5c06\u8fd9\u4e9b\u952e/\u503c\u5bf9\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\u6ce8\u5165\uff0c\u4f7fHeroku\u652f\u6301\u7684\u4efb\u4f55\u8bed\u8a00\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\n\u8fd9\u8bc1\u660e\u4e86\u73af\u5883\u53d8\u91cf\u662fapp config\u548csecrets\u7684\u7406\u60f3\u4ea4\u4ed8\u683c\u5f0f\uff0c\u5177\u6709\u7b80\u5355\u660e\u4e86\u7684\u7f16\u8f91\u7528\u6237\u754c\u9762\u3002Heroku\u751a\u81f3\u8fd8\u589e\u52a0\u4e86\u6bcf\u5f53\u914d\u7f6e\u53d8\u91cf\u6539\u53d8\u65f6\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002\n\u6240\u4ee5Heroku\u5df2\u7ecf\u4e3a\u4ed6\u4eec\u7684\u5ba2\u6237\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5176\u4ed6\u4f17\u591a\u7684\u4e3b\u673a\u63d0\u4f9b\u5546\u548c\u5e73\u53f0\u5462\uff1f\n\u53ef\u4ee5\u7f16\u5199Shell\u811a\u672c\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\u7684\u90e8\u7f72\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u662f\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u548c\u5e73\u53f0\u7684\uff0cLinux\u548cWindows\u9700\u8981\u4e0d\u540c\u7684Shell\u8bed\u6cd5\u3002\n\u5c31\u5728\u90a3\u91cc\u3002\u73af\u5883\u6587\u4ef6\u8fdb\u6765\u4e86\u3002\u952e/\u503c\u5bf9\u7684\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5b9a\u4e49\u53d8\u91cf\u7684\u6709\u6548Linux shell\u8bed\u6cd5\u3002\n\u6b64\u7b80\u5355\u683c\u5f0f\uff08\u9650\u5236\u4e3a\u6709\u6548\u7684Linux shell\u8bed\u6cd5\uff09\u5df2\u542f\u7528\u3002env\uff08dotenv\uff09\u6587\u4ef6\u89e3\u6790\u5e93\uff0c\u4e3a\u6bcf\u79cd\u4e3b\u8981\u7f16\u7a0b\u8bed\u8a00\uff08\u5982Python dotenv\u548cNode dotenv\uff09\u521b\u5efa\u3002\n\u7136\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u7528dotenv\u5e93\u89e3\u6790\u3002env\u6587\u4ef6\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u81ea\u52a8\u586b\u5145\u8be5\u7f16\u7a0b\u8bed\u8a00\u7684\u73af\u5883\u53d8\u91cf\u5bf9\u8c61\u3002\n\u5b83\u63d0\u4f9b\u4e86\u8bed\u6cd5\u3001\u6253\u5305\u548c\u8de8\u5e73\u53f0\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u6982\u5ff5\u6a21\u578b\u4e0eHeroku\u7684Config Vars\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u4e2d\u3002\u591a\u4e8f\u4e86\u5f00\u6e90\u793e\u533a\uff0c\u6bcf\u79cd\u4e3b\u8981\u8bed\u8a00\u7684dotenv\u5305\u90fd\u53d8\u5f97\u553e\u624b\u53ef\u5f97\u3002\n\u7684\u7528\u6cd5\u3002env\u6587\u4ef6\u4f7f\u6bcf\u79cd\u8bed\u8a00\u548c\u6846\u67b6\u90fd\u80fd\u591f\u91c7\u7528\u5c06\u73af\u5883\u53d8\u91cf\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u548c\u673a\u5bc6\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4e0d\u5e78\u5730env\u6587\u4ef6\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u65b0\u7684\u5b89\u5168\u6027\u548c\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u95ee\u9898\uff0c\u76f4\u5230\u6700\u8fd1\u624d\u5f00\u59cb\u5e7f\u4e3a\u5ba3\u4f20\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u63a2\u7a76\u539f\u56e0\u3002env\u6587\u4ef6\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u94f6\u5f39\u3002\n\u867d\u7136\u5b83\u4eec\u662f\u786c\u7f16\u7801\u79d8\u5bc6\u7684\u4e00\u4e2a\u8fdb\u6b65\uff0c\u4f46\u8d8a\u6765\u8d8a\u591a\u7684\u5b89\u5168\u98ce\u9669\u548c\u4e0e\u624b\u52a8\u7ba1\u7406\u6709\u5173\u7684\u95ee\u9898\u3002\u8de8\u4e0d\u540c\u73af\u5883\u548c\u4e91\u63d0\u4f9b\u5546\u7684env\u6587\u4ef6\u5f15\u8d77\u4e86\u5de5\u7a0b\u9886\u5bfc\u7684\u6ce8\u610f\u3002\n\u5206\u4eab\u672a\u52a0\u5bc6\u7684\u79d8\u5bc6\u3002\u5f53\u6dfb\u52a0\u6216\u66f4\u6539\u65b0\u673a\u5bc6\u65f6\uff0c\u5982\u679c\u673a\u5bc6\u66b4\u9732\u7ed9\u672a\u7ecf\u6388\u6743\u67e5\u770b\u5b83\u4eec\u7684\u7528\u6237\uff0c\u5219env\u6587\u4ef6\u8fc7\u5ea6\u677e\u5f1b\u8fdd\u53cd\u4e86\u6700\u5c0f\u7279\u6743\u539f\u5219\u3002\n\u5f53\u9700\u8981\u66f4\u65b0\u65f6\uff0c\u672c\u5730\u5f00\u53d1\u73af\u5883\u4f1a\u4e0d\u65ad\u4e2d\u65ad\u3002\u73af\u5883\u6587\u4ef6\u662f&#39\uff1bt\u4e3b\u52a8\u6c9f\u901a\uff0c\u4f8b\u5982\u5408\u5e76\u62c9\u53d6\u8bf7\u6c42\u540e\u9700\u8981\u7684\u65b0\u79d8\u5bc6\u3002\n\u4eba\u5de5\u7ba1\u7406\u4e2d\u7684\u4eba\u4e3a\u56e0\u7d20\u3002\u8de8\u73af\u5883\u548c\u4e0d\u540c\u4e91\u63d0\u4f9b\u5546\u7684env\u6587\u4ef6\u5f88\u5bb9\u6613\u5bfc\u81f4\u8f93\u5165\u9519\u8bef\u548c\u914d\u7f6e\u9519\u8bef\uff0c\u4ece\u800c\u5bf9\u751f\u4ea7\u7a33\u5b9a\u6027\u9020\u6210\u98ce\u9669\u3002\n\u8bed\u8a00\u548c\u5e73\u53f0\u4e4b\u95f4\u4e0d\u4e00\u81f4\u7684\u73af\u5883\u53d8\u91cf\u8bed\u6cd5\u5f88\u5bb9\u6613\u5bfc\u81f4\u95ee\u9898\uff0c\u4f8b\u5982Docker\u548cGitHub\u8981\u6c42\u503c\u4e0d\u5e26\u5f15\u53f7\uff0c\u800cPython\u548cNode\u5219\u8981\u6c42\u503c\u4e0d\u5e26\u5f15\u53f7\u3002js dotenv\u5305\u4f7f\u7528\u5e26\u5f15\u53f7\u6216\u4e0d\u5e26\u5f15\u53f7\u7684\u503c\u3002\u8fd9\u4e00\u95ee\u9898\u5982\u6b64\u666e\u904d\uff0c\u4ee5\u81f3\u4e8e\u8bb8\u591a\u56e2\u961f\u4e0d\u5f97\u4e0d\u91c7\u7528\u4e00\u79cd\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002env file linter\u6765\u89e3\u51b3\u8fd9\u4e9b\u8bed\u6cd5\u95ee\u9898\u3002\n\u50cfenv\u6587\u4ef6\u4ee5\u7eaf\u6587\u672c\u5f62\u5f0f\u5b58\u50a8\uff08\u4e0d\u4ec5\u4ec5\u662f\u5185\u5b58\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff09\uff0c\u5b83\u4eec\u6709\u88ab\u672a\u7ecf\u6388\u6743\u7684\u7528\u6237\u8bfb\u53d6\u7684\u98ce\u9669\uff0c\u5e76\u4e14\u5728\u8bbf\u95ee\u548c\u66f4\u6539\u65b9\u9762\u6ca1\u6709\u5ba1\u8ba1\u8ddf\u8e2a\u3002\n\u66f4\u4e0d\u7528\u8bf4\u4e0d\u65ad\u6709\u673a\u5668\u4eba\u626b\u63cf\u7f51\u7edc\uff0c\u5bfb\u627e\u610f\u5916\u66b4\u9732\u7684\u4fe1\u606f\u3002\u516c\u5171webroot\u6587\u4ef6\u5939\u548cS3\u5b58\u50a8\u6876\u4e2d\u7684env\u6587\u4ef6\u3002\n\u5b83&#39\uff1b\u5f88\u6e05\u695a\u3002env\u6587\u4ef6\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u6709\u7740\u4e25\u91cd\u7684\u5f71\u54cd\uff0c\u4f46\u5b83\u4eec\u5bf9\u5f00\u53d1\u901f\u5ea6\u7684\u5f71\u54cd\u53c8\u5982\u4f55\u5462\uff1f\n\u624b\u5de5\u7ba1\u7406\u5e26\u6765\u7684\u6301\u7eed\u526a\u7eb8\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u56e2\u961f\u6765\u8bf4\uff0cenv\u6587\u4ef6\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u89c4\u8303\u5316\uff0c\u4e0d\u518d\u88ab\u89c6\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u53ea\u662f\u4e0e\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u76f8\u5173\u7684\u7ed9\u5b9a\u5b9e\u8df5\u6210\u672c\u3002\n\u65e0\u6cd5\u91cf\u5316\u7ba1\u7406\u6210\u672c\u7684\u56e2\u961f\u3002\u5982\u679c\u4f7f\u7528\u96c6\u4e2d\u5f0f\u673a\u5bc6\u7ba1\u7406\u5668\u8de8\u73af\u5883\u81ea\u52a8\u540c\u6b65\u673a\u5bc6\uff0cenv\u6587\u4ef6\u5c06\u5931\u53bb\u5b9d\u8d35\u7684\u65f6\u95f4\u548c\u91d1\u94b1\uff0c\u800c\u8fd9\u4e9b\u65f6\u95f4\u548c\u91d1\u94b1\u672c\u53ef\u4ee5\u8282\u7701\u3002\n\u7531\u2026\u5f15\u8d77\u7684\u4e2d\u65ad\u3002\u4e0eenv\u6587\u4ef6\u76f8\u5173\u7684\u95ee\u9898\u4e5f\u4f1a\u5e26\u6765\u91cd\u5927\u4e14\u96be\u4ee5\u91cf\u5316\u7684\u6210\u672c\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6253\u7834\u5f00\u53d1\u4eba\u5458\u5728\u6d41\u7a0b\u6216\u6df1\u5ea6\u5de5\u4f5c\u72b6\u6001\u4e0b\u7684\u96c6\u4e2d\u5ea6\u3002\u5047\u8bbe\u8fd9\u9879\u7814\u7a76\u4f30\u8ba1\u6bcf\u4e00\u6b21\u4e25\u91cd\u4e2d\u65ad\u5e73\u5747\u635f\u593123\u5206\u949f\u662f\u6b63\u786e\u7684\uff0c\u90a3\u4e48\u65f6\u95f4\u548c\u52a8\u91cf\u7684\u635f\u5931\u662f\u7531\u4ee5\u4e0b\u539f\u56e0\u9020\u6210\u7684\u3002\u4e0eenv\u6587\u4ef6\u76f8\u5173\u7684\u4e2d\u65ad\u6bd4\u4e4b\u524d\u8ba4\u4e3a\u7684\u66f4\u4e25\u91cd\u3002\n\u9ad8\u7ee9\u6548\u7684\u56e2\u961f\u5f00\u59cb\u610f\u8bc6\u5230\u4f9d\u9760\u6280\u672f\u7684\u771f\u6b63\u6210\u672c\u3002\u7528\u4e8e\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u548c\u673a\u5bc6\u7684env\u6587\u4ef6\u3002\n\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u4e00\u79cd\u65b0\u578b\u7684\u79d8\u5bc6\u7ba1\u7406\u5e73\u53f0\uff0c\u65e8\u5728\u4e3a\u6bcf\u4e2a\u4e91\u3001\u5e73\u53f0\u548c\u6258\u7ba1\u73af\u5883\u7684\u73af\u5883\u53d8\u91cf\u7ba1\u7406\u5e26\u6765\u81ea\u52a8\u5316\u3002\n\u6211\u4eec\u6c38\u8fdc\u90fd\u6709\u3002\u611f\u8c22env\u6587\u4ef6\u5c06\u73af\u5883\u53d8\u91cf\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u548c\u673a\u5bc6\u5f15\u5165\u4e3b\u6d41\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u660e\u4e86\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u89e3\u51b3\u4e86\u5982\u4f55\u5c06\u786c\u7f16\u7801\u7684\u79d8\u5bc6\u4ece\u6e90\u4ee3\u7801\u4e2d\u8f6c\u79fb\u5230\u9002\u7528\u4e8e\u6bcf\u79cd\u8bed\u8a00\u7684\u901a\u7528\u683c\u5f0f\u7684\u7d27\u8feb\u95ee\u9898\u3002\n\u867d\u7136\u5b83\u4eec\u5728\u8fc7\u53bb\u53ef\u80fd\u5bf9\u6211\u4eec\u5f88\u6709\u5e2e\u52a9\uff0c\u4f46\u73b0\u5728\u662f\u65f6\u5019\u627f\u8ba4\u5b83\u4eec\u7684\u4e25\u91cd\u7f3a\u70b9\u4e86\u3002env\u6587\u4ef6\uff0c\u4ee5\u8fce\u63a5\u4e0b\u4e00\u4e2a\u8fdb\u5316\u6b65\u9aa4\uff1a\u4f7f\u7528\u673a\u5bc6\u7ba1\u7406\u5668\u4e3a\u673a\u5bc6\u63d0\u4f9b\u96c6\u4e2d\u4e14\u5b89\u5168\u7684\u5b58\u50a8\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5efa\u9020\u591a\u666e\u52d2\u6d88\u9664\u4e86\u5bf9\u3002env\u6587\u4ef6\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4eea\u8868\u677f\uff0c\u7528\u4e8e\u7ba1\u7406\u4e0e\u6bcf\u4e2a\u4e91\u63d0\u4f9b\u5546\u548c\u5e73\u53f0\u4e00\u8d77\u4f7f\u7528\u7684\u73af\u5883\u53d8\u91cf\u3002", "note_en": "It\u2019s time to acknowledge the shortcomings of .env files in order to embrace the next evolutionary step in application config and secrets management.\n While  .env files are still commonly used and were an improvement upon storing secrets in source code, the security risks and impact on developer productivity are only now being fully realized.\n To understand what\u2019s driving the next evolutionary shift in secrets management, let\u2019s first revisit the history of environment variables and why .env files were a good idea in theory, but created more problems than they solved.\n  The  Twelve-Factor App methodology was instrumental in defining modern best practices for developing and deploying applications. Arguably the most important \u201cfactor\u201d, was replacing hard-coded config and secrets from source code with dynamic values loaded from  environment variables.\n The usage of environment variables was a huge win for security as previously, anyone that had access to the code could view the secrets as well. Because environment variables are supported in every operating system and programming language, no special code or third-party libraries were needed to access them.\n \u201cA litmus test for whether an app has all config correctly factored out of the code is whether the codebase could be made open source at any moment, without compromising any credentials.\u201d - Twelve-Factor App III - Config\n In addition, because configuration was now supplied dynamically, applications could be run in any environment, from local development through to production with no code changes necessary. \u200d While the security and deployment benefits of using environment variables was clear, something was missing\u2014How would environment variables be managed, created, updated, removed, and synced between environments? Who would be responsible for managing them? And what was the source of truth should an application be misconfigured?\n Let\u2019s delve into the history of environment variable management to how .env files tried to answer these questions.\n  The Twelve-Factor App was originally drafted by developers at Heroku in 2012 who built a feature called  Config Vars into their application dashboard. These Key/Value pairs were then injected during deployment as environment variables, enabling any language supported by Heroku to consume them.\n  This proved environment variables were the ideal delivery format for app config and secrets with a simple and straightforward UI for editing. Heroku even added the feature of automatically reloading the application whenever the Config Vars changed.\n So Heroku had solved this problem for their customers, but what about the multitude of other hosting providers and platforms?\n Shell scripts could be written to set an application\u2019s environment variables during deployment before the app runs, but this approach is application and platform specific, with different shell syntax required for Linux and Windows.\n That\u2019s where .env files come in. A plain text file of key/value pairs that is actually just valid Linux shell syntax for defining variables.\n  This simple format (restricted to be valid Linux shell syntax) enabled .env (dotenv) file parsing libraries to be created for every major programming language such as  Python dotenv and  Node dotenv.\n An application would then use the dotenv library to parse the contents of a .env file and automatically populate the environment variables object for that programming language prior to the application starting up.\n  It provided the syntax, packaging, and a cross-platform solution with a similar conceptual model to Heroku\u2019s Config Vars, just in a plain-text file on a server. And thanks to the open source community, dotenv packages for every major language became readily available.\n The usage of .env files is what made it possible for every language and framework to adopt the best practice of using environment variables for application config and secrets. It seemed like a perfect solution.\n Unfortunately, .env files created a new set of security and developer productivity issues that only recently, have started to become well publicized.\n Let\u2019s now explore why .env files weren\u2019t the silver bullet we all wanted them to be.\n  While they were a step up from hard-coded secrets, the growing number of security risks and issues related to the manual management of .env files across different environments and cloud providers are causing engineering leaders to take notice.\n  Sharing of unencrypted secrets in .env files over Slack when new secrets are added or changed breaks the principle of least privilege if secrets are exposed to users unauthorized to view them.\n Local development environments constantly break when required updates to an .env file aren&#39;t proactively communicated, e.g. a new secret required after merging a pull request.\n The human element in manually managing .env files across environments and different cloud providers can easily lead to typos and misconfiguration errors, posing a risk to production stability.\n The inconsistent environment variable syntax between languages and platforms can easily cause issues, e.g. Docker and GitHub require values to be unquoted while Python and Node.js dotenv packages work with quoted or unquoted values. The issue is so prevalent that many teams have been forced to adopt an  .env file linter to combat these syntactical issues.\n As .env files are stored in plain-text (not just environment variables in memory), they are at risk of being read by unauthorized users with no audit trail in terms of access and changes made.\n Not to mention there is a constant stream of  bots scanning the web for accidentally exposed .env files in public webroot folders and  S3 buckets.\n It&#39;s clear .env files have serious implications for application security, but what about their impact on development velocity?\n The constant papercuts experienced from manually managing .env files has for most teams become so normalized, it\u2019s no longer seen as an issue. Just a given cost of practices associated with modern application development.\n Teams that fail to quantify the costs of managing .env files are losing valuable time and money that could be saved if a centralized secrets manager was employed to automate secrets syncing across environments.\n Interruptions caused by .env file related issues also have the significant and harder to quantify cost of breaking the concentration of a developer in a flow or deep work state. Assuming the research estimating an  average of 23 minutes is lost per serious interruption is correct, the time and momentum lost due to .env file related interruptions is more serious than previously thought.\n High performing teams are beginning to realize the true cost of relying on .env files for managing application config and secrets.\n They&#39;re looking to a new breed of secret management platforms, designed to bring automation to the management of environment variables for every cloud, platform, and hosting environment.\n  We\u2019ll always have .env files to thank for bringing the use of environment variables for application config and secrets to the mainstream. It was a simple and straightforward solution and solved the immediate problem of how to move hard-coded secrets out of source code and into a universal format that works for every language.\n While they may have served us well in the past, it\u2019s time to acknowledge the serious shortcomings of .env files in order to embrace the next evolutionary step: Using a secrets manager to provide centralized and secure storage for secrets.\n That\u2019s why we built Doppler\u2014Removing the need for .env files by providing a dashboard for managing environment variables that works with every cloud provider and platform.", "posttime": "2022-02-20 20:28:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u80dc\u5229,triumph,\u5e94\u7528\u7a0b\u5e8f", "title": "\u7f8e\u56fd\u7684\u80dc\u5229\u548c\u60b2\u5267\u3002\u73af\u5883\u6587\u4ef6", "title_en": "The Triumph and Tragedy of .env Files", "transed": 1, "url": "https://blog.doppler.com/the-triumph-and-tragedy-of-env-files", "via": "", "real_tags": ["\u7f8e\u56fd", "\u80dc\u5229", "triumph", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u5199\u653f\u7b56\u548c\u6d41\u7a0b\u6307\u5357\u5f88\u96be\u3002\u4f60\u82b1\u4e86\u6570\u5468\u65f6\u95f4\u6536\u96c6\u6bcf\u4e2a\u4eba\u7684\u53cd\u9988\uff0c\u8c03\u6574\u63aa\u8f9e\u4ee5\u907f\u514d\u5404\u79cd\u53cd\u6a21\u5f0f\uff0c\u7136\u540e\u4f60\u4ecd\u7136\u4e0d\u5f97\u4e0d\u770b\u7740\u4eba\u4eec\u628a\u5b83\u5f53\u4f5c\u4e00\u79cd\u949d\u5668\uff0c\u7528\u4ee5\u6bb4\u6253\u540c\u4e8b\u3002\u6ca1\u6709\u4e0d\u80fd\u88ab\u6ee5\u7528\u7684\u9632\u5f39\u653f\u7b56\u3002\u8bbe\u8ba1\u8fc7\u7a0b\u662f\u6ca1\u6709\u8bc0\u7a8d\u7684\u2026", "note_en": "Writing policy and process guidelines is hard. You work for weeks collecting everyone\u2019s feedback, tweaking the wording to avoid all kinds of anti-patterns, and then still you have to watch people use it as a blunt instrument to bludgeon colleagues with anyway. There is no bulletproof policy that can\u2019t be misused. There\u2019s no trick to designing process\u2026", "posttime": "2022-02-20 20:28:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fc7\u7a0b,death,\u653f\u7b56", "title": "\u8fc7\u7a0b\u7684\u6b7b\u4ea1", "title_en": "The Death of Process", "transed": 1, "url": "https://bellmar.medium.com/the-death-of-process-cdb0151a41fe", "via": "", "real_tags": ["\u8fc7\u7a0b", "death", "\u653f\u7b56"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074287, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u8c03\u67e5Narro\u4e0a\u7684\u5783\u573e\u90ae\u4ef6\u8d26\u6237\u884c\u4e3a\u65f6\u6389\u8fdb\u4e86\u8fd9\u4e2a\u5154\u5b50\u6d1e\u3002\u6211&#39\uff1b\u6211\u5df2\u7ecf\u628aNarro\u4f5c\u4e3a\u4e00\u4e2aSAAS\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u4e86\u597d\u51e0\u5e74\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u6211\u5df2\u7ecf\u5904\u7406\u4e86\u5f88\u591a\u5783\u573e\u5e10\u53f7\u7684\u521b\u5efa\u3002\n\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u5f53\u6211\u6ce8\u610f\u5230\u4e00\u4e2a\u65b0\u7684\u5783\u573e\u90ae\u4ef6\u6a21\u5f0f\u5f62\u6210\u65f6\uff0c\u6211\u5c31\u4f1a\u6df1\u5165\u4e86\u89e3\u4ed6\u4eec\u7684\u76ee\u6807\u3002\u968f\u7740\u6211\u5bf9\u6700\u8fd1\u8fd9\u79cd\u8d26\u6237\u7c7b\u578b\u80cc\u540e\u7684\u5b9e\u9645\u76ee\u6807\u8d8a\u6765\u8d8a\u597d\u5947\uff0c\u6211\u5f00\u59cb\u628a\u5b83\u5199\u4e0b\u6765\uff0c\u4f5c\u4e3a2022\u5e74\u4e00\u4e2a\uff08\u4f3c\u4e4e\uff09\u6d41\u884c\u7684\u5783\u573e\u90ae\u4ef6\u8d26\u6237\u539f\u578b\u7684\u5feb\u7167\u3002\u5f53\u7136\uff0c\u5b83\u4e0e\u52a0\u5bc6\u8d27\u5e01\u6709\u5173\u3002\u6240\u4ee5\u6211\u60f3\u4ed6\u4eec\u53ef\u80fd\u5728\u505a\u4e00\u4e9b\u65b0\u7684\u548c\u7279\u522b\u7684\u4e8b\u60c5\u3002\n\u8fc8\u514b\u5c14\u00b7\u6885\u68ee\u4ecb\u7ecd\u4e86\u7eb3\u7f57\u3002\u4ed6\u4eec\u7acb\u5373\u751f\u6210\u4e86\u8db3\u591f\u7684\u97f3\u9891\u8bfb\u6570\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u514d\u8d39\u7ea7\u522b\uff0c\u6240\u6709\u8fd9\u4e9b\u6587\u7ae0\u90fd\u6765\u81ea\u540c\u4e00\u4e2a\u57df/\u535a\u5ba2\uff1amichaelmason0\u3002blogspot\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u6240\u4ee5\uff0c\u5b83\u88ab\u6807\u8bb0\u4e86\uff0c\u6211\u770b\u4e86\u770b\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7531\u5192\u724c\u4eba\u7ecf\u8425\u7684\u535a\u5ba2\u3002\u770b\u770b\u90a3\u4e2a\u7f51\u7ad9\u548c\u8fc8\u514b\u5c14&#39\uff1b\u8fd9\u4e9b\u94fe\u63a5\u7684\u535a\u4e3b\u4e2a\u4eba\u8d44\u6599\u4f3c\u4e4e\u5305\u62ec\uff1a\n\u7531\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u7684\u4e2a\u4eba\u8d44\u6599\u56fe\u7247\u2014\u2014\u5f88\u53ef\u80fd\u6b64\u4eba\u4e0d\u5b58\u5728\n\u4e00\u79cd\u7531\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u7684\u751f\u7269\u2014\u2014\u53ef\u80fd\u662fGPT-3\uff0c\u4f46\u53ef\u80fd\u66f4\u7b80\u5355\n\u8fc8\u514b\u5c14\u00b7\u6885\u68ee&#39\uff1bs profile/site\u670920\u4e2a\u4e0d\u540cSAAS\u5de5\u5177\u7684\u94fe\u63a5\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u514d\u8d39\u7684tier\u5e10\u6237\uff08Narro\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\uff09\u3002\u4ed6\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u8d26\u6237\u3002\u5982\u679c\u4f60\u628a\u535a\u5ba2\u8d26\u53f7\u548cGmail\u8d26\u53f7\u90fd\u7b97\u8fdb\u53bb\uff0c\u6211\u731c\u662f22\u3002\u6bcf\u4e00\u7bc7\u90fd\u53ea\u5305\u542b\u6765\u81ea\u8fd9\u4e2a\u535a\u5ba2\u7684\u5e16\u5b50\u3002\n\u51e0\u4e4e\u6240\u6709\u8fd9\u4e9b\u8d26\u6237\u76ee\u524d\u90fd\u5728\u8fd0\u884c\uff0c\u90fd\u662f\u5728\u4e00\u4e24\u5929\u5185\u5b8c\u6210\u7684\uff0c\u90fd\u6709\u51e0\u5468\u7684\u5386\u53f2\u3002\u6211\u8ba4\u4e3a\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u771f\u5b9e\u7684\u4eba\u7ecf\u5386\u4e86\u5236\u4f5c\u5e76\u6fc0\u6d3b\u5b83\u4eec\u7684\u8fc7\u7a0b\u2014\u2014\u5373\u4f7f\u4ed6\u4eec\u73b0\u5728\u662f\u81ea\u52a8\u53d1\u5e03\u7684\u3002YouTube\u8d26\u6237\u201c\u56e0\u591a\u6b21\u6216\u4e25\u91cd\u8fdd\u53cdYouTube\u7684\u53cd\u5783\u573e\u90ae\u4ef6\u653f\u7b56[\u2026]\u800c\u7ec8\u6b62\u201d\u5f88\u597dYouTube\u3002\n\u4f46\u662f\u8ba9\u6211\u4eec&#39\uff1b\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u535a\u5ba2\u4e0a\u7684\u6587\u7ae0\uff01\u6bcf\u7bc7\u5e16\u5b50\u90fd\u662ftopcryptonews\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u91cd\u64ad\uff08\u5e26\u6709\u94fe\u63a5\uff09\u3002net\u2014\u2014\u4e00\u4e2a\u8fd0\u884c\u5728WordPress\u4e0a\u7684\u72ec\u7acb\u535a\u5ba2\u2014\u2014\u4ee5\u53ca\u53e6\u4e00\u4e2a\u8fd0\u884c\u5728Weebly\u4e0a\u7684\u955c\u50cf\u7f51\u7ad9\u3002\u901a\u8fc7\u4fa7\u8fb9\u680f\uff0c\u5b83\u8fd8\u94fe\u63a5\u5230WordPress\u7f51\u7ad9\uff0c\u7b2c\u4e09\u6b21\u955c\u50cf\u76f8\u540c\u7684\u5e16\u5b50\u3002\n\u6bcf\u7bc7\u6587\u7ae0\u90fd\u6709\u4e00\u4e2a\u52a0\u5bc6\u8d27\u5e01\u6807\u9898\u2014\u2014\u53d6\u81ea\u5b83\u94fe\u63a5\u7684\u6e90\u6587\u7ae0\u2014\u2014\u4ee5\u53ca\u7531GPT-3\u6216\u5176\u4ed6\u4e00\u4e9bML\u6587\u672c\u751f\u6210\u5668\u81ea\u52a8\u751f\u6210\u7684\u6587\u672c\u5185\u5bb9\u3002\u6bcf\u7bc7\u6587\u7ae0\u7684\u5b9e\u9645\u5185\u5bb9\u4e0e\u6807\u9898\u4e3b\u9898\u5b8c\u5168\u65e0\u5173\u3002\u4f8b\u5982\uff0c\u8fd9\u7bc7\u6587\u7ae0\u7684\u6807\u9898\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u52a0\u5bc6\u6295\u8d44\u8005\u7ed9\u6bd4\u7279\u5e01\u63d0\u4f9b\u4e86\u4eca\u5e74\u6700\u91cd\u8981\u7684\u65e5\u671f\uff01\u5305\u62ec\u5b9d\u77f3&#34\uff1b\u65e5\u672c\u70db\u53f0\u5448\u73b0\u7279\u5b9a\u65f6\u671f\u7684\u901f\u7387\u6d3b\u52a8&#34; \u8fd9\u91cc&#39\uff1b\u8fd9\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\u968f\u7740\u53c8\u4e00\u4e2a7\u67084\u65e5\u7684\u8fc7\u53bb\uff0c\u8fd9\u662f\u6211\u4eec\u5b66\u672f\u4f53\u7cfb\u7684\u4e00\u6b21\u8d77\u98de\uff0c\u65e0\u6570\u7f8e\u56fd\u4eba\u4ecd\u7136\u65e0\u6cd5\u7406\u89e3\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5728\u6700\u521d\u7684\u5730\u533a\u7eaa\u5ff57\u67084\u65e5\u3002\u5fc5\u987b\u6307\u51fa\u7684\u662f\uff0c\u6211\u4eec\u7684\u673a\u6784\u5e94\u8be5\u8ba9\u6240\u6709\u5c0f\u5b66\u548c\u4e2d\u5b66\u7684\u53d7\u8bad\u4eba\u5458\u4e0d\u4ec5\u5ba1\u67e5\u8054\u90a6\u515a\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u8fd8\u88ab\u8981\u6c42\u64b0\u5199\u4ed6\u4eec\u81ea\u5df1\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u6587\u4ef6\u5bf9\u7f8e\u56fd\u5982\u6b64\u91cd\u8981\uff0c\u5bf9\u4eca\u5929\u4e5f\u5f88\u91cd\u8981\u3002\u4eca\u5929\uff0c\u8bb8\u591a\u4eba\u5fd8\u8bb0\u4e86\u8fd9\u4e2a\u5047\u671f\u5982\u6b64\u91cd\u8981\u7684\u5b9e\u9645\u56e0\u7d20\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u6e90\u535a\u5ba2\uff0c\u9876\u7ea7\u52a0\u5bc6\u65b0\u95fb\u3002\u8be5\u7f51\u7ad9\u4e0a\u7684\u6bcf\u4e00\u7bc7\u5e16\u5b50\u90fd\u53ea\u662f\u4e00\u6bb5YouTube\u89c6\u9891\u7684\u91cd\u64ad\uff0c\u8fd9\u4e9b\u89c6\u9891\u6765\u81ea\u4e0d\u540c\u7684\u52a0\u5bc6\u8d27\u5e01\u6e20\u9053\u3002\u751a\u81f3\u90a3\u4e9b\u6587\u7ae0\u8981\u4e48\u662f\u7a7a\u7684\uff08\u53ea\u662fYouTube\u89c6\u9891\u7684\u5d4c\u5165\uff09\uff0c\u8981\u4e48\u5305\u542b\u4e0e\u4e3b\u9898\u65e0\u5173\u7684\u81ea\u52a8\u751f\u6210\u6587\u672c\uff08\u4e0eBlogger\u3001WordPress\u548cWeebly\u7f51\u7ad9\u4e0a\u7684\u6587\u672c\u76f8\u540c\uff09\u3002\n\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u7684\u6bcf\u4e00\u7bc7\u5e16\u5b50\u90fd\u662f\u7531\u4e00\u4e2a\u540d\u53eb\u201c\u54c8\u91cc\u201d\u7684\u4eba\u5199\u7684\u3002\u4ed6\u4eec\u7684\u751f\u7269\u56fe\u50cf\u662f\u4f11\u00b7\u6770\u514b\u66fc\u7684\u7167\u7247\uff0c\u4f46\u662f\u6709&#39\uff1b\u6ca1\u6709\u5176\u4ed6\u7684\u4e86\u3002\n\u54e6\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u6709\u5f88\u591a\u5e7f\u544a\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5730\u65b9\uff1a\u52a0\u5bc6\u6700\u540e\u901a\u7252\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\nCrypto Ultimatum\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9500\u552e\u7f51\u7ad9\uff0c\u5b83\u8bd5\u56fe\u5411\u4f60\u51fa\u552e\u4e00\u4e2a\u540d\u4e3aCrypto Ultimatum\u7684\u7535\u5b50\u4e66/\u7528\u4e8e\u4ea4\u6613\u52a0\u5bc6\u8d27\u5e01\u7684\u57f9\u8bad\u7cfb\u7edf\u2014\u2014\u8ba9\u81ea\u5df1\u6210\u4e3a\u4f7f\u7528Ethan W\u7f16\u5199\u7684\u52a0\u5bc6\u8d27\u5e01\u7684\u8d85\u7ea7\u5bcc\u8c6a\u4e4b\u4e00\u3002\u5b83\u4e5f\u6709\u81ea\u5df1\u7684YouTube\u9891\u9053\uff0c\u4f46\u8fd9\u53ea\u6709\u4e24\u4e2a\u89c6\u9891\uff08\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3a\u7f51\u7ad9\u89e3\u8bf4\u5458\u5d4c\u5165\uff09\u3002\n\u8be5\u6307\u5357\u6700\u521d\u6536\u8d39200\u7f8e\u5143\uff0c\u4f46\u8be5\u7f51\u7ad9\u63d0\u4f9b50\u7f8e\u5143\u7684\u6298\u6263\u3002\u5982\u679c\u4f60\u53bb\u8d2d\u4e70\u8be5\u6307\u5357\uff0c\u5b83\u5c06\u63d0\u4f9b\u6bcf\u5b63\u5ea677\u7f8e\u5143\u7684\u8ffd\u52a0\u8ba2\u9605\uff0c\u7528\u4e8e\u6301\u7eed\u7684\u8865\u5145\u6307\u5357\u3002\n\u6709\u4eba\u5236\u4f5c\u4e86\u4e00\u4e2a\uff08\u771f\u5b9e\u7684\u6216\u9a97\u5c40\u7684\uff09\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6307\u5357\uff08\u52a0\u5bc6\u6700\u540e\u901a\u7252\uff09\uff0c\u5e76\u4ee550\u7f8e\u5143\u4e00\u5f20\u7684\u4ef7\u683c\u51fa\u552e\u3002\u4ed6\u4eec\u6b63\u5728\u4e3a\u8be5\u4ea7\u54c1\u7684\u8425\u9500\u548c\u5e7f\u544a\u4ed8\u8d39\u3002Crypto Ultimatum\u7684\u6240\u6709\u8005\u4f1a\u7ed9\u4f6060%\u7684\u4ee3\u9500\u4f63\u91d1\uff0c\u5e76\u6566\u4fc3\u4f60\u4ee3\u9500\u4ed6\u4eec\u5176\u4ed6\u5173\u4e8e\u4f53\u80b2\u535a\u5f69\u548c\u51cf\u80a5\u7684\u7535\u5b50\u4e66\u3002\n\u8fd9\u4e9b\u9644\u5c5e\u516c\u53f8\uff08\u672c\u4f8b\u4e2d\u4e3aHarry\uff09\u6b63\u5728\u901a\u8fc7\u6784\u5efa\u7f51\u7ad9\u6765\u8425\u9500\u8be5\u4ea7\u54c1\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u6bcf\u5c0f\u65f6\u90fd\u4f1a\u6293\u53d6\u9876\u7ea7\u52a0\u5bc6\u8d27\u5e01YouTube\u89c6\u9891\uff0c\u5e76\u5c06\u6bcf\u4e00\u4e2a\u89c6\u9891\u5d4c\u5165\u8fd9\u4e9b\u535a\u5ba2\u7f51\u7ad9\u4e0a\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5176\u4e2d\u5305\u542b\u7ea61000\u4e2a\u5355\u8bcd\u7684\u968f\u673a\u751f\u6210\u6587\u672c\u3002\u8fd9\u7bc7\u5e16\u5b50\u662f\u6309\u987a\u5e8f\u53d1\u5e03\u7684\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4ece\u4e00\u7bc7\u5e16\u5b50\u94fe\u63a5\u5230\u53e6\u4e00\u7bc7\u5e16\u5b50\uff0c\u56de\u5230\u6700\u65b0\u7684\u52a0\u5bc6\u65b0\u95fb\u3002\u8fd9\u4e9b\u535a\u5ba2\u90fd\u662f\u7531\u76f8\u540c\u7684\u3001\u7531ML\u751f\u6210\u7684\u89d2\u8272\uff08\u672c\u4f8b\u4e2d\u662f\u8fc8\u514b\u5c14\u00b7\u6885\u68ee\uff09\u6765\u201c\u64cd\u4f5c\u201d\u7684\uff0c\u8be5\u89d2\u8272\u88ab\u521b\u5efa\u4e3a\u8fd9\u4e9b\u4e0d\u540c\u7684\u514d\u8d39\u5e10\u6237\u7684\u8fde\u63a5\u70b9\u3002\n\u8fc8\u514b\u5c14\u00b7\u6885\u68ee\uff08Michael Mason\uff09\u548c\u4ed6\u7684\u535a\u5ba2\u7684\u76ee\u6807\u53ea\u662f\u94fe\u63a5\u56de\u5e7f\u544a\u7f51\u7ad9\uff0c\u4ee5\u4f18\u5316\u641c\u7d22\u5f15\u64ce\uff0c\u5e76\u4e3a\u8c37\u6b4c\u7684\u9875\u9762\u6392\u540d\u7b97\u6cd5\u63d0\u4f9b\u5408\u6cd5\u6027\u3002\nTop Crypto News\u7684\u76ee\u6807\u662f\u5728\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u4e0a\u505a\u5e7f\u544a\uff0c\u5e76\u4fc3\u4f7f\u4e70\u5bb6\u70b9\u51fb\u5173\u8054\u5e7f\u544a\u3002\n\u5728\u6240\u6709\u8fd9\u4e9b\u5e73\u53f0\u4e0a\u521b\u5efa20\u591a\u4e2a\u5e10\u6237\u4f3c\u4e4e\u9700\u8981\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u4f46\u5728\u8fd9\u4e4b\u540e\uff0c\u7f16\u5199\u4e00\u4e2a\u811a\u672c\u6765\u8f6e\u8be2YouTube RSS\u63d0\u8981\u5e76\u521b\u5efa\u4e00\u7bc7\u5d4c\u5165\u751f\u6210\u6587\u672c\u7684\u535a\u5ba2\u5e16\u5b50\u5c31\u76f8\u5bf9\u7b80\u5355\u4e86\u3002\u5bf9\u4e8e\u8be5\u5206\u652f\u673a\u6784\u6765\u8bf4\uff0c\u6bcf\u7b14\u552e\u4ef728\u7f8e\u5143\uff0c\u8fd9\u53ef\u80fd\u662f\u6709\u5229\u53ef\u56fe\u7684\uff0c\u800c\u4e14\u5728\u51cf\u80a5\u548c\u4f53\u80b2\u535a\u5f69\u7b49\u5176\u4ed6\u4e3b\u9898\u4e0a\u4e5f\u5f88\u5bb9\u6613\u91cd\u590d\u3002\n\u6211\u4e00\u5f00\u59cb\u8ba4\u4e3a\u8fd9\u662f\u65b0\u9020\u51fa\u7684\u52a0\u5bc6\u8d27\u5e01\u9a97\u5b50\u4f7f\u7528\u7684\u4e00\u79cd\u65b0\u7b56\u7565\uff0c\u4f46\u4f3c\u4e4e\u8fd9\u53ea\u662f\u4ece\u8d4c\u535a\u548c\u65f6\u5c1a\u996e\u98df\u4e2d\u91c7\u53d6\u7684\u65e7\u7b56\u7565\uff0c\u76f4\u63a5\u5e94\u7528\u4e8e\u52a0\u5bc6\u8d27\u5e01\u65f6\u523b\u3002\u8be5\u8054\u76df\u8425\u9500\u4eba\u5458\u521a\u521a\u5c06Narro\u6dfb\u52a0\u5230\u4ed6\u4eec\u7684SEO\u5783\u573e\u90ae\u4ef6\u5305\u4e2d\uff0c\u52a0\u5bc6\u8d27\u5e01\u6b63\u662f\u63a8\u52a8\u7535\u5b50\u4e66\u9500\u552e\u7684\u4e3b\u9898\u3002", "note_en": "I fell down this rabbit hole while trying to investigate some spammy account behavior on  Narro. I&#39;ve been running Narro as a SAAS application with a free trial for several years now, which means I have dealt with a lot of spam account creation.\n Every once in a while, when I notice a new spam pattern take shape, I dig in to understand their goal. As I got more curious about the actual goal behind this recent account type, I started to write it down, as a snapshot of a (seemingly) popular spam account archetype in 2022. Of course, it related to cryptocurrencies. So I figured they might be doing something new and special.\n  Michael Mason made an account on Narro. They immediately generated enough audio readings to max out the free tier, all of them articles with similar structure from the same domain/blog:  michaelmason0.blogspot.com. So, it got flagged and I took a look.\n This is a blog operated by a fake person. Looking at that site and Michael&#39;s linked Blogger profile, they seem to consist of:\n a profile picture generated by a neural net - likely  This Person Does Not Exist\n a bio generated by a neural net - likely  GPT-3, though it could be something simpler\n Michael Mason&#39;s profile/site has links to  twenty different SAAS tools where you can make a free-tier account (Narro being only one of them). They have an account on each one. I guess it\u2019s 22 if you include the Blogger account and the Gmail account that hosts the email address. Every one contains only posts originating from this blog.\n Almost all of these accounts are currently operating, all a couple weeks old, made within a day or two of each other. I think this means that an actual person went through the process of making these and activating them - even if they are auto-posting now. The YouTube account  was \u2018terminated due to multiple or severe violations of YouTube\u2019s policy against spam[...]\u2019 Good on you, YouTube.\n But let&#39;s take a look at the articles on this blog! Every post is a reblog (with links) to an article on  topcryptonews.net - a separate blog running on WordPress - as well as  another  mirror site run on Weebly. Through the sidebar, it also links to  a WordPress site that mirrors the same posts a third time.\n Each article has a cryptocurrency headline - taken from the source article it is linking - and text content auto-generated by GPT-3 or some other ML text generator. The actual content of each article is  entirely unrelated to the headline topic. For example, the post headlined  WORLDS BIGGEST CRYPTO INVESTOR GIVES BITCOINS MOST IMPORTANT DATE THIS YEAR! includes the gem &#34;Japanese candle holders present the rate activity over a specific period.&#34; Here&#39;s another sample:\n With the passing of an additional fourth of July it is a takeoff for our academic system where countless Americans still can\u2019t equate why we commemorate the fourth of July in the initial area. It must be noted that our institutions should make it necessary for all elementary and also secondary school trainees to not just review the Federalist Documents yet be called for to compose their very own run-through of why they are so crucial for America and also relevant also today. Many today are oblivious to the actual factor this vacation is so vital.\n    Let&#39;s look at this source blog,  Top Crypto News.  Every post on  this site is just a reblog of a YouTube video, pulled from various channels about cryptocurrencies. Even those articles are either empty (just an embed of the YouTube video) or contain auto-generated text unrelated to the topic (the same text found on the Blogger and WordPress and Weebly sites).\n Every post on this site is authored by someone named \u2018Harry\u2019. Their bio image is a photo of Hugh Jackman, but there&#39;s not much else there.\n Oh, and  this site has ads - a  lot of them - all pointing to the same place:  cryptoultimatum.com.\n Crypto Ultimatum is a simple sales site trying to sell you an ebook / training system for trading cryptocurrencies called  Crypto Ultimatum - Catapult Yourself to Become One of the Extremely Rich People Using Cryptocurrencies written by Ethan W. It has its own YouTube channel as well, but that only has two videos (one of which is embedded as the site explainer).\n The guide is originally billed at $200, but the website offers a discount at $50. If you go to buy the guide, it will offer an upsell subscription of $77 per quarter for ongoing, supplemental guides.\n   Someone made a (real or scam) cryptocurrency trading guide ( Crypto Ultimatum) and is selling it for $50 a pop. They are paying for affiliates to market and advertise this product. The owner of  Crypto Ultimatum gives  60% commission on affiliate sales, and urges you to affiliate-market their other ebooks on  sports betting and  weight loss.\n These affiliates (Harry, in this case) are marketing the product by building sites that scrape the top cryptocurrency YouTube videos every hour and embed each one into a post on these blog sites with about 1000 words of randomly-generated text. This posting is done sequentially, so that they can link from one post to the other, back to the original on  Top Crypto News. The blogs are all \u2018operated\u2019 by the same, ML-generated persona (Michael Mason, in this case) which has been created to serve as a nexus for these various free accounts.\n The goal of Michael Mason and his blogs is just to link back to the advertising site for search engine optimization and legitimacy for Google\u2019s Page Rank algorithm.\n The goal of  Top Crypto News is to advertise and drive buyers to click the affiliate-linked ads into the ecommerce site.\n It seems like a  lot of work to make over twenty accounts across all these platforms, but after that it\u2019s relatively simple to write a script that will poll a YouTube RSS feed and create a blog post embedding it with generated text. And at $28 per sale, to the affiliate, it\u2019s probably lucrative, and readily repeatable across other topics like weight loss and sports betting.\n  I started down this track thinking that this was a new tactic used by newly-minted cryptocurrency scammers, but it seems like this is just the same old tactics taken from gambling and fad diets, directly applied to the cryptocurrency moment. The affiliate marketer just added Narro to their SEO spam bag of tricks, and cryptocurrency is just the topic driving ebook sales right now.", "posttime": "2022-02-20 20:24:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5783\u573e\u90ae\u4ef6,spam,\u7f51\u7ad9", "title": "2022\u5e74\u7684\u5783\u573e\u90ae\u4ef6\u8d26\u6237", "title_en": "Spam accounts in 2022", "transed": 1, "url": "https://www.joshbeckman.org/what-spam-accounts-look-like-in-2022/", "via": "", "real_tags": ["\u5783\u573e\u90ae\u4ef6", "spam", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u770b\u7535\u89c6\u5267\u300a\u82b1\u82b1\u516c\u5b50\u300b\uff08Maison Ikkoku\uff09\u65f6\u770b\u5230\u4e86\u6d41\u884c\u7684\u72ec\u7acb\u52a8\u753b\u5e08Kouji Nanke\u7684\u5f00\u573a\u767d\uff08\u8fd9\u662f\u8be5\u7535\u89c6\u5267\u7684\u7b2c\u4e94\u90e8\u4e5f\u662f\u6700\u540e\u4e00\u90e8\uff09\uff0c\u8fd9\u8ba9\u6211\u67e5\u9605\u4e86\u5f88\u591a\u5173\u4e8e\u65e7\u52a8\u753b\u6444\u5f71\u7684\u7ec6\u8282\uff0c\u6211\u5c06\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5199\u9053\u3002\u7a0d\u540e\u6211\u4f1a\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6240\u4ee5\u8bf7\u5148\u770b\u3002\n\u7a0d\u540e\u6211\u4f1a\u56de\u5230\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f46cel\u65f6\u4ee3\u52a8\u753b\u4e2d\u7684\u6444\u5f71\u4e4b\u6240\u4ee5\u6709\u8da3\uff0c\u662f\u56e0\u4e3a\u6240\u6709\u4e1c\u897f\u90fd\u662f\u5b8c\u5168\u7269\u7406\u7684\uff0c\u4f7f\u7528\u771f\u5b9e\u7684\u76f8\u673a\uff0c\u62cd\u6444\u771f\u5b9e\u7684\u56fe\u753b\u7b49\u7b49\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u6211\u4eec\u770b\u770b2D\u52a8\u753b\u7684\u5386\u53f2\uff0c\u5c24\u5176\u662f\u5b83\u6700\u5e38\u89c1\u7684\u5f62\u5f0f\uff08cel\u52a8\u753b\uff09\uff0c\u76f8\u673a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u90fd\u662f\u6807\u51c6\u7684\uff0c\u800c\u8ba1\u7b97\u673a\u6444\u5f71\u662f\u8fd9\u4e00\u5a92\u4ecb\u6700\u8fd1\u7684\u53d1\u5c55\u3002\u8fea\u58eb\u5c3c\u81f3\u5c11\u4ece30\u5e74\u4ee3\u5c31\u5f00\u59cb\u4f7f\u7528\u5854\u5f0f\u5f55\u97f3\u673a\uff0c\u56e0\u4e3a\u8981\u8bb0\u4f4f\uff0c\u6bcf\u4e2acel\u90fd\u662f\u4e00\u4e2a\u5fc5\u987b\u5728\u80cc\u666f\u4e0a\u72ec\u7acb\u79fb\u52a8\u7684\u5c42\u3002\n\u663e\u7136\uff0c\u8003\u8651\u5230\u66f4\u4e25\u683c\u7684\u7ecf\u6d4e\u548c\u65f6\u95f4\u9650\u5236\uff0c\u8fd9\u5bf9\u5927\u591a\u6570\u52a8\u753b\u6765\u8bf4\u6709\u70b9\u8fc7\u4e8e\u590d\u6742\u3002\u6211\u76f8\u4fe1Toei Douga\u81f3\u5c11\u5728\u5176\u7535\u5f71\u4e2d\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f46\u4e00\u822c\u6765\u8bf4\uff0c\u5c06\u6240\u6709\u7ec6\u80de\uff08\u5305\u62ec\u80cc\u666f\uff09\u653e\u5728\u5f7c\u6b64\u7684\u9876\u90e8\uff0c\u53ef\u4ee5\u66f4\u5feb\u3001\u66f4\u5bb9\u6613\u5730\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u5c3d\u7ba1\u6ca1\u6709\u90a3\u4e48\u4f18\u96c5\uff0c\u5982\u679c\u6709\u5f88\u591a\u5c42\u540c\u65f6\u79fb\u52a8\uff0c\u751a\u81f3\u53ef\u80fd\u4ee5\u4e0d\u540c\u7684\u901f\u5ea6\u79fb\u52a8\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u573a\u5669\u68a6\u3002\n\u6bcb\u5eb8\u7f6e\u7591\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u9700\u8981\u719f\u7ec3\u7684\u5de5\u4f5c\u4eba\u5458\u624d\u80fd\u987a\u5229\u5b8c\u6210\uff0c\u5c3d\u7ba1\u5982\u4eca\u6444\u5f71\u4ecd\u7136\u9700\u8981\u5927\u91cf\u7684\u6280\u80fd\u548c\u7ecf\u9a8c\uff0c\u4f46\u5728\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u8f6f\u4ef6\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002\u6211\u66fe\u7ecf\u8bfb\u5230\uff0c\u6444\u5f71\u867d\u7136\u662f\u73b0\u4ee3\u52a8\u753b\u4e2d\u89c6\u89c9\u4e0a\u7684\u4e00\u4e2a\u51b3\u5b9a\u6027\u6b65\u9aa4\uff0c\u4f46\u5e76\u4e0d\u50cfcel\u65f6\u4ee3\u90a3\u6837\u53d7\u5230\u9ad8\u5ea6\u91cd\u89c6\uff0c\u56e0\u4e3a\u5b83\u6210\u672c\u66f4\u4f4e\uff0c\u800c\u4e14\u662f\u5168\u6570\u5b57\u7684\u3002\u5c3d\u7ba1\u6444\u5f71\u6280\u672f\u5df2\u7ecf\u5b8c\u5168\u6570\u5b57\u5316\uff0c\u4f46\u636e\u8bf4\u7531\u4e8e\u5bf9\u8d28\u91cf\u7684\u8981\u6c42\u8d8a\u6765\u8d8a\u9ad8\uff0c\u800c\u4e14\u6709\u66f4\u591a\u7684\u4e1c\u897f\u88ab\u6570\u5b57\u5316\u5730\u6dfb\u52a0\u548c\u8c03\u6574\uff0c\u5de5\u4f5c\u91cf\u4e5f\u5728\u589e\u52a0\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u9898\u3002\n\u8fd9\u5f20\u7167\u7247\u53ef\u80fd\u662f\u5f53\u65f6\u5e38\u89c1\u7684\u6444\u5f71\u8bbe\u7f6e\u3002\u66f4\u7b80\u5355\u7684\u8bbe\u7f6e\u4e5f\u5b58\u5728\u3002cel\u901a\u5e38\u653e\u5728\u900f\u660e\u73bb\u7483\u4e0a\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5149\u6e90\u3002\u8bf7\u6ce8\u610f\u53ef\u7528\u4e8e\u79fb\u52a8cel\u7684\u7269\u7406\u7a7a\u95f4\uff0c\u8fd9\u5bf9\u4e8e\u521b\u5efa\u5404\u79cd\u6548\u679c\u975e\u5e38\u91cd\u8981\uff0c\u6211\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u65f6\u6444\u5f71\u9700\u8981\u771f\u6b63\u7684\u6444\u5f71\u6280\u672f\uff0c\u800c\u4f60\u60f3\u8981\u521b\u9020\u7684\u4efb\u4f55\u6548\u679c\u90fd\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u901a\u8fc7\u8eab\u4f53\u6765\u5b9e\u73b0\u3002\u5f88\u591a\u8fd9\u6837\u7684\u6548\u679c\u90fd\u53ef\u4ee5\u4f7f\u7528\u6240\u8c13\u7684\u5149\u5b66\u6253\u5370\u673a\u521b\u5efa\uff0c\u8fd9\u662f\u7535\u5f71\u4e2d\u975e\u5e38\u5e38\u89c1\u7684\u4e00\u79cd\u8bbe\u5907\uff0c\u7528\u4e8e\u521b\u5efa\u7279\u6b8a\u6548\u679c\uff0c\u4f8b\u5982\u900f\u660e\u5ea6\uff08\u4ee5\u53ca\u5ef6\u4f38\u5230\u6de1\u5165\u7b49\uff09\u3002\u5b83\u7684\u57fa\u672c\u529f\u80fd\u662f\u62cd\u6444\u4e24\u5377\u80f6\u5377\uff0c\u5e76\u5c06\u5176\u6295\u5f71\u5230\u5f7c\u6b64\u7684\u9876\u90e8\uff0c\u6839\u636e\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u540c\u65f6\u6444\u50cf\u673a\u5728\u7b2c\u4e09\u5377\u80f6\u5377\u4e0a\u91cd\u65b0\u6355\u83b7\u6700\u540e\u7684\u955c\u5934\u3002\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c3\u5377\u80f6\u5377\uff08\u6709\u65f6\u751a\u81f3\u66f4\u591a\uff09\u4e5f\u4e0d\u4fbf\u5b9c\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u5f97\u8fd9\u4e2a\u8bbe\u5907\u5728\u52a8\u753b\u4e2d\u53d8\u5f97\u65e0\u5173\u7d27\u8981\u3002\n\u4f60\u4ecd\u7136\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u5927\u591a\u6570\u89c6\u89c9\u6548\u679c\uff0c\u8fd9\u5c31\u662f\u52a8\u753b\u521b\u4f5c\u8005\u6240\u505a\u7684\u3002\u5982\u679c\u6211\u4eec\u56de\u5230\u900f\u660e\uff0c\u5047\u8bbe\u4f60\u60f3\u8ba9\u4e00\u4e2a\u89d2\u8272\u770b\u8d77\u6765\u900f\u660e\uff0c\u8fd9\u5fc5\u987b\u901a\u8fc7\u5728\u4e0d\u540c\u4e8e\u80cc\u666f\u7684\u66dd\u5149\u4e0b\u62cd\u6444\u7ec6\u80de\u6765\u5b8c\u6210\u3002\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u5f20\u80f6\u7247\uff0c\u6240\u4ee5\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u5148\u7528\u5168\u66dd\u5149\u62cd\u6444\u80cc\u666f\uff0c\u7136\u540e\u5012\u5e26\u80f6\u7247\uff0c\u53ea\u5728\u66dd\u5149\u8f83\u4f4e\u7684\u60c5\u51b5\u4e0b\u62cd\u6444\u89d2\u8272\uff0c\u8fd9\u6837\u5728\u5b8c\u5168\u53ef\u89c1\u7684\u80cc\u666f\u4e0a\u5b83\u5c31\u4f1a\u770b\u8d77\u6765\u900f\u660e\u3002\u6211\u76f8\u4fe1\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f46\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u3002\u8fd9\u5bf9\u4e8e\u9634\u5f71\u3001\u53cd\u5c04\u6216\u7a97\u53e3\u540e\u9762\u7684\u5bf9\u8c61\u7b49\u7279\u522b\u6709\u7528\u3002\u5f53\u5c4f\u5e55\u4e0a\u6709\u4e0d\u540c\u66dd\u5149\u7684\u7269\u4f53\u65f6\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5fc5\u987b\u91cd\u590d\u591a\u6b21\uff0c\u5012\u5e26\u80f6\u7247\u4f1a\u9020\u6210\u635f\u574f\u7684\u98ce\u9669\uff0c\u5fc5\u987b\u518d\u6b21\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u5f88\u9ebb\u70e6\u3002\n\u8fd9\u5c31\u662f\u6444\u5f71\u4e2d\u6240\u8c13\u7684\u201c\u53cc\u91cd\u66dd\u5149\u201d\uff0c\u5728\u52a8\u6f2b\u4ea7\u4e1a\u4e2d\u6709\u5f88\u591a\u672f\u8bed\u7528\u6765\u6307\u7531\u6b64\u884d\u751f\u51fa\u6765\u7684\u66dd\u5149\u3002\u8fbe\u5e03\u00b7\u62c9\u5e0c(\u30c0\u30d6\u30e9\u30b7, W\u30e9\u30b7) WXP\u662f\u6700\u5e38\u89c1\u7684\uff0c\u81f3\u4eca\u4ecd\u5728\u4f7f\u7528\u3002\n\u6211\u60f3\u8bf4\u7684\u4e0b\u4e00\u4e2a\u6548\u679c\u662f\u7167\u660e\u3002\u6211\u6307\u7684\u662f\u80cc\u666f\u6216\u5176\u4e00\u90e8\u5206\u53d1\u51fa\u5f3a\u5149\uff08\u4f8b\u5982\u9633\u5149\uff09\u65f6\u7684\u6548\u679c\u3002\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7\u73bb\u7483\u4e0b\u9762\u7684\u5149\u6e90\u5417\uff1f\u8fd9\u90fd\u662f\u5173\u4e8e\u5149\u6e90\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u79cd\u5149\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e5f\u8bb8\u5b83\u53ea\u662f\u7528\u6765\u521b\u9020\u90a3\u4e9b\u6548\u679c\u3002\u7531\u4e8e\u7ec6\u80de\u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u4ece\u7ec6\u80de\u4e0b\u9762\u53d1\u51fa\u5149\u7ebf\uff0c\u5149\u7ebf\u5c31\u4f1a\u7a7f\u900f\u7ec6\u80de\u3002\u8981\u5c06\u5149\u7ebf\u805a\u7126\u5230\u5c4f\u5e55\u7684\u67d0\u4e9b\u533a\u57df\uff0c\u53ea\u9700\u4f7f\u7528\u5e26\u6709\u6240\u9700\u533a\u57df\u7684\u9ed1\u8272\u7eb8\u5f20\uff0c\u6216\u5c06\u80cc\u666f\u80cc\u9762\u6d82\u6210\u9ed1\u8272\uff08\u6240\u9700\u533a\u57df\u9664\u5916\uff09\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u900f\u904e\u5149 \uff08\u5927\u81f4\u7ffb\u8bd1\u4e3a\u201c\u7a7f\u900f\u5149\u201d\uff09\u3002\n\u6211\u5fc5\u987b\u6307\u51fa\uff0c\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u662f\u5b83\u4e00\u76f4\u4ee5\u6765\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5176\u4ed6\u65b9\u6cd5\u4e5f\u5b58\u5728\uff0c\u6280\u672f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6539\u53d8\uff0c\u4e0d\u540c\u7684\u4eba\u505a\u5f97\u4e0d\u540c\u7b49\u7b49\u3002\u6211\u8bd5\u56fe\u5728\u8fd9\u91cc\u89e3\u91ca\u8fd9\u4e9b\u6280\u672f\u80cc\u540e\u7684\u4e00\u822c\u6982\u5ff5\u3002\u53e6\u5916\uff0c\u6b63\u56e0\u4e3a\u6211\u89c9\u5f97\u8fd9\u5f88\u6709\u8da3\uff0c\u6211\u60f3\u63d0\u4e00\u63d0\u7ec6\u80de\u4e0d\u662f\u5b8c\u5168\u900f\u660e\u7684\uff0c\u8fd9\u5bfc\u81f4\u4e86\u590d\u6742\u7684\u5207\u5272\uff0c\u591a\u4e2a\u7ec6\u80de\u76f8\u4e92\u91cd\u53e0\uff0c\u6709\u65f6\u5728\u5176\u4ed6\u4e0d\u9700\u8981\u7684\u4eba\u5de5\u5236\u54c1\u4e2d\u80cc\u666f\u6a21\u7cca\u3002\n\u8fd9\u9879\u6280\u672f\u5728\u521b\u9020\u661f\u7a7a\u6216\u673a\u7532\u52a8\u753b\u7684\u661f\u7a7a\u80cc\u666f\u65f6\u7279\u522b\u6709\u7528\uff0c\u4f60\u6240\u9700\u8981\u7684\u53ea\u662f\u4e00\u4e2a\u6709\u6d1e\u7684\u9ed1\u6d1e\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u7c7b\u4f3c\u7684\u539f\u7406\u505a\u53e6\u4e00\u4e2a\u628a\u620f\uff0c\u4e00\u4e2a\u53eb\u505a\u63a9\u853d\u7684\u628a\u620f(\u30de\u30b9\u30af\u5408\u6210 - \u8499\u7248\u6784\u56fe\uff09\uff0c\u4f7f\u7528\u4e00\u5f20\u79f0\u4e3a\u201c\u8499\u7248\u201d\u7684\u9ed1\u7eb8\u6765\u9690\u85cf\u4e0d\u60f3\u663e\u793a\u7684\u90e8\u5206\u56fe\u5f62\u3002\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4f8b\u5b50\u662f\u5728\u80cc\u666f\u4e0a\u7684\u4e00\u4e2a\u77e9\u5f62\u5185\u6846\u5b9a\u4e00\u4e2a\u89d2\u8272\u3002\n\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6d89\u53ca\u5230\u67d0\u79cd\u65b9\u5f0f\u7684\u7269\u7406\u64cd\u4f5c\u3002\u5728\u76f8\u673a\u955c\u5934\u6216\u56fe\u7eb8\u4e0a\u6dfb\u52a0\u6ee4\u955c\u4f1a\u589e\u52a0\u53e6\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u4f46\u6211\u76f8\u4fe1\u8fd9\u662f\u6700\u7b80\u5355\u7684\u6280\u5de7\uff0c\u56e0\u6b64\u65e0\u9700\u8fdb\u4e00\u6b65\u6df1\u5165\u3002\u4f60\u8fd8\u53ef\u4ee5\u64cd\u7eb5CEL\u540e\u9762\u7684\u73bb\u7483\uff0c\u5982\u300a\u88ab\u8c03\u7528\u7684\u89c6\u9891\u300b\u4e2d\u7684\u4f8b\u5b50\u6240\u793a\uff0c\u8fd9\u662f\u8be5\u7247\u6700\u96be\u5fd8\u7684\u573a\u666f\u4e4b\u4e00\u3002\n\u4f60\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230cel\u80cc\u540e\u662f\u73bb\u7483\uff0c\u4f46\u4e0d\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002\n\u6211\u60f3\u63d0\u5230\u7684\u6700\u540e\u4e00\u9879\u6280\u672f\u662f\u5728\u62cd\u6444\u8fc7\u7a0b\u4e2d\u5b9e\u9645\u79fb\u52a8cel\u3002\u79fb\u52a8CEL\u6240\u4ea7\u751f\u7684\u6548\u679c\u6b63\u662f\u4f60\u6240\u671f\u671b\u7684\uff0c\u6211\u6562\u6253\u8d4c\u4f60\u81ea\u5df1\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528\u5b83\uff0c\u4f46\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u8d85\u51fa\u4e86\u521b\u9020\u7b80\u5355\u7684\u89c6\u89c9\u6548\u679c\u3002\n\u80cc\u666f\u901a\u5e38\u7ed8\u5236\u5728\u6bd4CEL\u5927\u7684\u7eb8\u4e0a\uff0c\u7136\u540e\u5c06CEL\u76f8\u5e94\u5730\u653e\u7f6e\u5728\u5176\u4e0a\u3002\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u80cc\u666f\u8db3\u591f\u5927\uff0c\u4f60\u53ef\u4ee5\u505a\u4e00\u4e2a\u201c\u8ddf\u968f\u5e73\u79fb\u201d\uff0c\u5982\u679c\u4f60\u6cbf\u7740\u4e00\u6761\u6c34\u5e73\u7ebf\u79fb\u52a8\u80cc\u666f\u4e0a\u7684cel\u3002\u4eba\u7269\u5728\u57ce\u5e02\u4e2d\u884c\u8d70\uff0c\u5728\u68ee\u6797\u4e2d\u5954\u8dd1\uff0c\u5728\u4e91\u5c42\u4e2d\u98de\u7fd4\uff0c\u4f60\u53ef\u4ee5\u8bf4\u3002\u6b64\u5916\uff0c\u80cc\u666f\u53ef\u4ee5\u7531\u591a\u4e2a\u5c42\u7ec4\u6210\uff0c\u6839\u636e\u5b83\u4eec\u4e0e\u89d2\u8272\u4e4b\u95f4\u7684\u8ddd\u79bb\u4ee5\u4e0d\u540c\u7684\u901f\u5ea6\u79fb\u52a8\u3002\u8fd9\u662f\u5728\u52a8\u753b\u4e2d\u521b\u9020\u4e09\u7ef4\u7a7a\u95f4\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u4e5f\u662f\u8bb8\u591a\u89c6\u89c9\u6280\u5de7\u7684\u57fa\u7840\u3002\u8fd9\u4e3b\u8981\u88ab\u79f0\u4e3a\u201c\u591a\u91cd\u201d(\u30de\u30eb\u30c1).\n\u7136\u800c\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u6b64\u4fdd\u6301\u8c28\u614e\uff0c\u56e0\u4e3a\u5177\u6709\u79fb\u52a8\u80cc\u666f\u548c\u89d2\u8272\u7684\u573a\u666f\u4e00\u76f4\u90fd\u662f\u52a8\u753b\u4e2d\u6700\u68d8\u624b\u7684\u573a\u666f\u3002\u5982\u679c\u89d2\u8272\u548c\u80cc\u666f\u4e4b\u95f4\u7684\u79fb\u52a8\u901f\u5ea6\u5dee\u5f02\u5f88\u660e\u663e\uff0c\u6bd4\u5982\u8bf4\u89d2\u8272\u57283s\u4e0a\u8bbe\u7f6e\u52a8\u753b\uff0c\u80cc\u666f\u57281s\u4e0a\u8bbe\u7f6e\u52a8\u753b\uff0c\u90a3\u4e48\u89d2\u8272\u5c06\u4ee5\u4e00\u79cd\u65ad\u65ad\u7eed\u7eed\u7684\u65b9\u5f0f\u79fb\u52a8\uff0c\u5c31\u50cf\u8bd5\u56fe\u8ddf\u4e0a\u80cc\u666f\u4e00\u6837\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u95ea\u70c1\u201d(\u30d5\u30ea\u30c3\u30ab\u30fc) \u5728\u52a8\u753b\u4e2d\u3002\u8fd9\u662f\u73b0\u4ee3\u52a8\u753b\u4ecd\u7136\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u8fd9\u6bb5\u89c6\u9891\u6216\u7ed3\u5c3e\u5904\u7684Urusei Yatsura\u7684\u8fd9\u4e00\u573a\u666f\u4e2d\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u4f8b\u5b50\u3002\n\u4eceOP\u7684\u524d\u51e0\u5e27\u5f00\u59cb\uff0c\u4f60\u53ef\u4ee5\u5728\u4e00\u6b21\u62cd\u6444\u4e2d\u770b\u5230\u906e\u7f69\u3001\u7167\u660e\u548c\u900f\u660e\u5ea6\u3002Kouji Nanke\u4e0d\u4ec5\u660e\u663e\u5730\u753b\u51fa\u4e86Kyoko\uff08\u89d2\u8272\uff09\u7684\u773c\u775b\uff0c\u4f60\u8fd8\u53ef\u4ee5\u770b\u5230\u5979\u7684\u5934\u53d1\u66f4\u591a\u5730\u51fa\u73b0\u5728\u5b57\u6bcd\u548c\u4fa7\u9762\u3002\u6211\u8ba4\u4e3a\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\u8fd9\u4e0d\u662f\u6545\u610f\u7684\uff0c\u56e0\u4e3a\u63a9\u853d\u5f88\u96be\u5b8c\u7f8e\u5730\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5149\u4ece\u53f3\u8fb9\u7f18\u6d41\u51fa\u3002\u6211\u76f8\u4fe1\u8fd9\u4e9b\u4fe1\u662f\u526a\u4e0b\u6765\u7684\u3002\u81f3\u4e8e\u9634\u5f71\uff0c\u6211\u76f8\u4fe1\u4ed6\u5728\u5b57\u6bcd/\u5355\u5143\u683c\u4e4b\u95f4\u7559\u4e86\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5e76\u5728\u62cd\u6444\u65f6\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u7167\u5c04\u5149\u7ebf\u3002\n\u7ee7\u7eed\u524d\u884c\uff0c\u6211\u4eec\u770b\u5230\u82b1\u74e3\u3002\u6211\u4e0d\u592a\u6e05\u695a\u4ed6\u662f\u600e\u4e48\u505a\u5230\u7684\uff0c\u4f46\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u7684\u5f62\u72b6\u662f\u6052\u5b9a\u7684\uff0c\u5b83\u4eec\u53ea\u662f\u5728\u5c4f\u5e55\u4e0a\u201c\u6ed1\u52a8\u201d\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\u5b83\u662f\u67d0\u79cd\u5f62\u72b6\u7684\u5e8a\u5355\uff0c\u4e0a\u9762\u7684\u5f62\u72b6\u4e0e\u5149\u7ebf\u4e00\u8d77\u4f7f\u7528\u3002\u800c\u4e14\u6211\u89c9\u5f97\u5b83\u4eec\u4e0d\u4f1a\u4e0e\u5b57\u6bcd\u7684\u9634\u5f71\u76f8\u4e92\u4f5c\u7528\uff0c\u6240\u4ee5\u4ed6\u53ef\u80fd\u5148\u7528\u80cc\u666f\u62cd\u6444\u5b83\u4eec\uff0c\u7136\u540e\u518d\u5728\u9876\u90e8\u62cd\u6444\u5b57\u6bcd\u3002\n\u8fd9\u5f88\u5bb9\u6613\u6210\u4e3a\u4f5c\u54c1\u4e2d\u6700\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u526a\u8f91\u3002\u4f60\u6709\u4e24\u4e2a\u534a\u900f\u660e\u7684\u89d2\u8272\uff08\u53cc\u91cd\u66dd\u5149\uff09\uff0c\u5e26\u7167\u660e\u80cc\u666f\uff08\u906e\u7f69\u548c\u7167\u660e\uff09\u7684Kyoko\u6846\u67b6\uff0c\u4e00\u4e2a\u5207\u6389\u7684\u82b1\u74e3\uff0c\u4ee5\u53ca\u79fb\u51fa\u5c4f\u5e55\u7684\u89d2\u8272\uff08\u591a\u91cd\uff09\u3002\u62cd\u6444\u6240\u6709\u8fd9\u4e9b\u9700\u8981\u5f88\u9ad8\u7684\u6444\u5f71\u6280\u5de7\uff0c\u5e76\u663e\u793a\u51fa\u52a8\u753b\u521b\u4f5c\u8005Kouji Nanke\u7684\u591a\u624d\u591a\u827a\u3002\n\u8fd9\u4e2aOP\u6700\u521d\u770b\u8d77\u6765\u7b80\u5355\u660e\u4e86\uff0c\u4f46\u662f\u5f53\u4f60\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u8003\u8651\u521b\u9020\u5b83\u6240\u6d89\u53ca\u7684\u6240\u6709\u6280\u672f\u65f6\uff0c\u4f60\u5c31\u4e0d\u5f97\u4e0d\u8d5e\u7f8e\u521b\u9020\u5b83\u6240\u9700\u8981\u7684\u6280\u5de7\u3002\u901a\u8fc7\u8fd9\u4e9b\u89c6\u89c9\u6280\u5de7\uff0c\u5b83\u62e5\u6709\u5f3a\u70c8\u7684\u4e09\u7ef4\u611f\u3002\u52a8\u753b\u5f53\u7136\u4e0d\u9519\uff0c\u5357\u79d1\u7684\u753b\u4e5f\u5f88\u53ef\u7231\uff0c\u4f46\u4ed6\u7684\u91cd\u70b9\u663e\u7136\u662f\u9634\u5f71/\u706f\u5149\u3001\u5c42\u6b21\u3001\u6846\u67b6\u548c\u900f\u660e\u5ea6\u521b\u9020\u7684\u72ec\u7279\u611f\u89c9\u3002\u51e0\u4e4e\u6240\u6709\u5e38\u89c1\u7684\u6444\u5f71\u6280\u672f\u90fd\u5b8c\u7f8e\u5730\u878d\u5165\u4e86\u8fd9\u90e8\u4f5c\u54c1\u4e2d\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u6211\u975e\u5e38\u7740\u8ff7\u7684\u52a8\u753b\u4f5c\u54c1\u3002\n\u55ef\uff0c\u8fd9\u7bc7\u6587\u7ae0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u73b0\u5728\u90fd\u65e0\u5173\u7d27\u8981\u4e86\uff0c\u56e0\u4e3a\u4e00\u5207\u90fd\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u7535\u8111\u6765\u5b8c\u6210\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u6280\u672f\u548c\u77e5\u8bc6\u662f\u6211\u4eec\u4eca\u5929\u6240\u62e5\u6709\u7684\u4e1c\u897f\u7684\u57fa\u7840\uff0c\u5e76\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u65b9\u5f0f\u6301\u7eed\u5230\u73b0\u4ee3\u52a8\u753b\u4e2d\u3002\u8fd9\u7bc7\u6587\u7ae0\u65e8\u5728\u4ecb\u7ecdcel\u65f6\u4ee3\u7684\u6444\u5f71\uff0c\u6240\u4ee5\u6211\u5c06\u5728\u4e0b\u9762\u94fe\u63a5\u4e00\u4e9b\u53c2\u8003\u8d44\u6599\u548c\u989d\u5916\u9605\u8bfb\u3002", "note_en": "I came across this opening by the popular indie animator Kouji Nanke while watching Maison Ikkoku (it was the 5th and last in the TV series), and it made me look up a lot of details on photography in old animes that I\u2019ll write in this post. I\u2019ll be referring to this OP later so watch it first.\n  I\u2019ll come back to that OP in a moment, but what makes photography in cel era anime interesting is the fact that everything was completely physical, using a real camera and shooting real drawings and so on. I mean, if we look at the history of 2D animation, especially its most common form (cel animation), cameras were the standard for a long time and computer photography is a pretty recent development in the medium. Disney had used tower-style recording machines since the 30s at least, because remember that every cel is a layer that has to move on its own on top of the background.\n  Obviously this is a bit too sophisticated for most anime, considering the tighter economical and time-related constraints. I believe Toei Douga used something similar in its movies at least, but generally speaking laying all the cels on top of each other, including the background, does the job faster and easier, albeit not as elegantly, and this could become a nightmare if you have a lot of layers moving at the same time, maybe even at different speeds.\n Needless to say this process required skilled staff to pull it off well, and while photography still requires a lot of skill and experience nowadays, using software on a computer is totally different. I once read that photography, although a visually defining step in modern anime even now, isn\u2019t regarded as highly as it was back in the cel era, simply because it costs less and is all digital. And although photography became all digital, the workload is said to have increased since higher quality is demanded and more things are added in and tuned digitally. That\u2019s not our topic today anyway.\n  Photo of what was probably a common photography setup of the day. Simpler setups also existed. The cel is usually placed on transparent glass, underneath which there is a light source. Notice the physical space available for moving the cel, which is important for creating various effects I\u2019ll talk about later.\n That\u2019s why photography required actual photography know-how back then, and any effect you wanted to create had to be done physically somehow. A lot of these effects could be created using what is called an  Optical Printer, which was a very common device in cinema for creating special effects such as transparency (and by extension fade ins and such). What it basically does is taking two film rolls and projecting them on top of each other, manipulating them as necessary, while a camera recaptures the final footage on a third film. Sounds simple but it really wasn\u2019t, and 3 rolls of film (sometimes even more) weren\u2019t cheap. All that made this device irrelevant when it came to anime.\n You could still create most visual effects yourself, and that\u2019s what anime creators did. If we go back to transparency, say you wanted to make a character look transparent, this had to be done by photographing the cels at different exposure than the background. It\u2019s possible to use the same film multiple times, so all you had to do was shoot the background alone first with full exposure, rewind the film, and shoot the character only at lower exposure and it will look transparent on top of the fully visible background. I believe other methods existed but this was the most common. This is especially useful for shadows, reflections, or objects behind windows and so on. The process had to be repeated as many times as there were objects with different exposures on screen, and rewinding the film posed the risk of damaging it and having to repeat the whole process again, in other words it was troublesome.\n  This is what is called a \u201cDouble Exposure\u201d in photography, and a lot of terms are used in the anime industry to refer to it derived from that. Dabu-Rashi (\u30c0\u30d6\u30e9\u30b7, W\u30e9\u30b7) and WXP are the most common and are still in use today.\n The next effect I want to talk about is illumination. I mean the effects when the background or a part of it shines a bright light (e.g. sunlight). Remember what I said about the light source underneath the glass? It\u2019s all about that light source. I think that this light isn\u2019t necessary most of the time, and maybe it\u2019s only used to create those effects. Since cels are transparent, all you have to do is shine light from underneath them and this light will shine through. And to focus light on certain areas of the screen just use a black paper sheet with the desired area cut-out or color the back-side of the background black except for the desired area. This is what is called \u900f\u904e\u5149 (roughly translated \u201cPenetrating Light\u201d).\n   I have to note that this isn\u2019t necessarily the way it was always implemented. Other methods existed, techniques changed with time, different people did it differently etc. I\u2019m trying to explain the general concept behind those techniques here. Also, just because I think this is interesting, I\u2019d like to mention that cels aren\u2019t completely transparent, which resulted in complex cuts with multiple cels on top of each other sometimes having blurry backgrounds among other undesired artifacts.\n This technique is especially useful in creating starry skies or the starry backdrops of mecha animes, all you needed was a black sheet with holes in it. You could do another trick based on a similar principle, a trick called Masking (\u30de\u30b9\u30af\u5408\u6210 - Mask Composition), using sheets of black paper called \u201cMasks\u201d to hide parts of the drawings you didn\u2019t want to show. A very simple example of this would be framing a character inside a rectangle on top of a background.\n As you can see, all that involves some physical manipulation in one way or another. Adding filters to the camera lens or on top of the drawings adds another whole desminsion of possibilities, but I believe that\u2019s the most straightforward trick of the bunch so no need to go further into that. You could also manipulate the glass behind the cels, as seen in this example from Ideon: Be Invoked movie, which was one of its most memorable scenes.\n  You can clearly see that what\u2019s behind the cel is glass, not completely transparent though.\n The last technique I want to mention is physically moving the cel during filming. The effect resulting from moving cels is what you expect, and I bet you can easily come with a few uses for this yourself, but the use of this extends beyond creating simple visual effects.\n Backgrounds are usually drawn on sheets larger than cels, and then cels are placed on them accordingly. Here\u2019s the thing: If the background is large enough, you can do a \u201cfollowing pan\u201d if you move the cel on the background along a horizontal line. Characters walking in a city, running in a forest, flying through clouds, you name it. Moreover, the background can consist of multiple layers moved at different speeds based on the distance between them and the character. This is essential in creating 3-dimensionality in anime and is the basis for a lot of visual tricks. This is mainly called \u201cMulti\u201d (\u30de\u30eb\u30c1).\n  One has to be cautious with this, however, since scenes with both moving backgrounds and characters are and have always been some of the trickiest scenes in animation. If the disparity in the speed of movement between the character and the background is clear, say the character is animated on 3s and the background on 1s, then the character would move in a stuttery way, as if trying to catch up to the background, in what is called \u201cFlicker\u201d (\u30d5\u30ea\u30c3\u30ab\u30fc) in anime. This is a problem modern anime still runs into. Examples can be seen in  this video or in  this scene from Urusei Yatsura near the end.\n   Starting with the first few frames of the OP, you could see masking, illumination and transparency in a single shot. Kouji Nanke didn\u2019t only draw Kyoko\u2019s (the character) eyes obviously, and you can see how more parts of her hair show up on the letter and to the sides. I think it\u2019s safe to assume this wasn\u2019t intentional, since masking was hard to implement perfectly, and we can see light bleeding from the right edge. I believe the letters are cut-outs. As for the shadows, I believe he left a distance between the letters/cels and applied light on an angle while shooting.\n  Moving on we see the flower petals. I\u2019m not quite sure how he did that, but if you look closely you can see that their shapes are constant, they just \u201cglide\u201d on screen, so it\u2019s safe to assume it\u2019s some kind of sheet with shapes on it used with light some way or another. Also I feel like they don\u2019t interact with the shadows of the letters, so maybe he filmed them with the background first and then filmed the letters on top.\n  This is easily the most impressive cut in the OP. You have two characters half transparent (double exposure), Kyoko framed with illuminating background (masking and illumination), a cut-out petal, and characters moving out of the screen (multi). Filming all that together requires high photography skills and shows just how versatile of an animation creator Kouji Nanke is.\n   This OP seems simple and plain at first, but when you take a moment to consider all the techniques involved in creating it you can\u2019t but admire the level of craftsmanship it takes to create something like it. It boasts a strong sense of 3-dimensionality through all these visual tricks. The animation is of course nice and Nanke\u2019s drawings are lovely, but his focus was obviously the unique feel created by the shadows/lights, the layering, framing and transparency. Almost all common photography techniques were beautifully incorporated in this OP, which made it a very fascinating piece of animation to me.\n Well, most of this post is irrelevant now that everything can be done with a click on computers. Nonetheless, these techniques and knowledge are the basis for what we have today, and persisted in one way or another into modern anime. This post was intended as an introduction to cel era photography, so I\u2019ll link a few resources and extra reads below.", "posttime": "2022-02-20 20:20:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u6444\u5f71,\u65f6\u4ee3,photography,\u80cc\u666f", "title": "Cel\u65f6\u4ee3\u7684\u52a8\u6f2b\u6444\u5f71\uff082020\uff09", "title_en": "Anime Photography in the Cel Era (2020)", "transed": 1, "url": "https://alexswak.tumblr.com/post/630061631289835520/cel-anime-photography", "via": "", "real_tags": ["2020", "\u6444\u5f71", "\u65f6\u4ee3", "\u80cc\u666f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074285, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u5370\u5ea6\u6d88\u8d39\u8005\u5728\u53e3\u5473\u4e0a\u53d8\u5f97\u66f4\u52a0\u5b9e\u9a8c\u5316\uff0c\u4e00\u573a\u7fbd\u7ffc\u672a\u4e30\u7684\u624b\u5de5\u5de7\u514b\u529b\u8fd0\u52a8\u6b63\u5728\u5168\u56fd\u5404\u5730\u84ec\u52c3\u53d1\u5c55\u3002\n\u5c06\u6709\u673a\u6210\u5206\u3001\u975e\u4f20\u7edf\u98ce\u5473\u548cInstagram\u5305\u88c5\u76f8\u7ed3\u5408\uff0c\u5c11\u6570\u672c\u571f\u5c0f\u54c1\u724c\u6b63\u5728\u4e0e\u5409\u767e\u5229\u725b\u5976\u548c\u8292\u5947\u7b49\u751c\u5473\u3001\u4e73\u767d\u8272\u7684\u5927\u4f17\u5e02\u573a\u70ed\u95e8\u4ea7\u54c1\u8131\u9896\u800c\u51fa\uff0c\u540e\u8005\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u4e3b\u5bfc\u7740\u5370\u5ea6\u84ec\u52c3\u53d1\u5c55\u7684\u5de7\u514b\u529b\u5e02\u573a\u3002\n\u5e02\u573a\u7814\u7a76\u516c\u53f8Mintel\u7684\u6570\u636e\u663e\u793a\uff0c2016\u5e74\uff0c\u5370\u5ea6\u4eba\u4f30\u8ba1\u6d88\u8d39\u4e8622.8\u4e07\u5428\u5de7\u514b\u529b\u7cd6\u679c\uff0c\u6bd42011\u5e74\u589e\u957f\u4e8650%\u3002\u5927\u4f17\u5e02\u573a\u9152\u5427\u88ab\u89c6\u4e3a\u4e00\u79cd\u65b9\u4fbf\u4e14\u4ef7\u683c\u5408\u7406\u7684\u5c0f\u5403\uff0c\u4ef7\u683c\u6709\u65f6\u4f4e\u81f3Rs5\uff0c\u5360\u5168\u56fd\u603b\u9500\u552e\u989d\u768485%\u3002\u660e\u7279\u5c14\u8bf4\uff0c\u5de7\u514b\u529b\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4f7f\u5370\u5ea6\u6210\u4e3a\u4e16\u754c\u4e0a\u589e\u957f\u6700\u5feb\u7684\u5de7\u514b\u529b\u5e02\u573a\u4e4b\u4e00\uff0c\u9884\u8ba1\u52302020\u5e74\uff0c\u5370\u5ea6\u7684\u5de7\u514b\u529b\u4ef7\u503c\u5c06\u8fbe\u52303.2\u4ebf\u5362\u6bd4\uff08\u7ea6\u540849.7\u4ebf\u7f8e\u5143\uff09\uff0c\u6bd42015\u5e74\u589e\u957f160%\u3002\n\u5728\u8fd9\u4e00\u589e\u957f\u8fc7\u7a0b\u4e2d\uff0c\u5370\u5ea6\u5357\u90e8\u5404\u5dde\u7684\u5916\u7c4d\u4f01\u4e1a\u5bb6\u53d1\u8d77\u4e86\u5370\u5ea6\u81ea\u5df1\u7684\u201c\u8c46\u5b50\u5230\u9152\u5427\u201d\u8fd0\u52a8\uff0c\u7784\u51c6\u4e86\u6709\u773c\u5149\u3001\u6709\u73b0\u91d1\u53ef\u82b1\u7684\u6d88\u8d39\u8005\u3002\u4ed6\u4eec\u53c2\u4e0e\u5de7\u514b\u529b\u5236\u4f5c\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u9636\u6bb5\uff0c\u4ece\u79cd\u690d\u53ef\u53ef\u8c46\u5230\u5236\u4f5c\u5de7\u514b\u529b\u68d2\u3002\n2011\u5e74\uff0c\u4e3a\u4e86\u6539\u53d8\u751f\u6d3b\u65b9\u5f0f\uff08\u548c\u5929\u6c14\uff09\uff0c\u6234\u7ef4\u00b7\u8d1d\u6d1b\u4ece\u82f1\u56fd\u642c\u5230\u4e86\u5361\u7eb3\u5854\u514b\u90a6\u7684\u8fc8\u82cf\u9c81\uff0c\u6b64\u524d\u4ed6\u66fe\u62c5\u4efb\u8fc7\u5404\u79cd\u8c03\u9152\u5e08\u3001\u9762\u5305\u5e08\u5085\u548c\u7cd5\u70b9\u53a8\u5e08\u3002\u4ed6\u4e4b\u524d\u66fe\u4e0e\u751f\u5de7\u514b\u529b\u6253\u8fc7\u4ea4\u9053\uff0c\u4ed6\u5bf9\u5370\u5ea6\u5c0f\u578b\u53ef\u53ef\u79cd\u690d\u56ed\u7684\u6f5c\u529b\u611f\u5230\u9707\u60ca\uff0c\u8fd9\u4e9b\u79cd\u690d\u56ed\u7684\u53ef\u53ef\u8c46\u4e00\u76f4\u88ab\u8c61\u7259\u6d77\u5cb8\u3001\u52a0\u7eb3\u3001\u5370\u5ea6\u5c3c\u897f\u4e9a\u548c\u5384\u74dc\u591a\u5c14\u7b49\u4e16\u754c\u6700\u5927\u751f\u4ea7\u5546\u7684\u53ef\u53ef\u8c46\u6240\u63a9\u76d6\u3002\n\u56e0\u6b64\uff0c2012\u5e74\uff0c\u8d1d\u6d1b\u4e0e\u5408\u4f5c\u4f19\u4f34\u5b89\u5409\u4e3d\u5361\u00b7\u963f\u5357\u8bfa\u65af\u6258\uff08Angelika Anangnostou\uff09\u4e00\u8d77\u63a8\u51fa\u4e86Earth Loaf\uff0c\u8fd9\u662f\u4e00\u4e2a\u624b\u5de5\u5236\u4f5c\u7684\u5355\u4e00\u4ea7\u5730\u5de7\u514b\u529b\u54c1\u724c\uff0c\u4f7f\u7528\u5361\u7eb3\u5854\u514b\u90a6\u6709\u673a\u79cd\u690d\u56ed\u7684\u53ef\u53ef\u8c46\u5236\u4f5c\u800c\u6210\u3002\u4ed6\u8bf4\uff0c\u76ee\u6807\u662f\u8ba9\u5370\u5ea6\u5728\u624b\u5de5\u5de7\u514b\u529b\u65b9\u9762\u767b\u4e0a\u5730\u56fe\u3002\n\u8d1d\u6d1b\u544a\u8bc9Quartz\uff1a\u201c\u4e9a\u6d32\u53ef\u53ef\uff0c\u5c24\u5176\u662f\u5370\u5ea6\u53ef\u53ef\u7684\u98ce\u5473\u4e0e\u4e2d\u7f8e\u6d32\u548c\u897f\u975e\u622a\u7136\u4e0d\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u6709\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u4e1c\u897f\u3002\u201d\u3002\u4ed6\u628a\u5370\u5ea6\u548c\u5176\u4ed6\u4e9a\u6d32\u53ef\u53ef\u8c46\u751f\u4ea7\u5546\u6bd4\u4f5c\u8461\u8404\u9152\u7684\u65b0\u4e16\u754c\uff0c\u5728\u90a3\u91cc\uff0c\u6fb3\u5927\u5229\u4e9a\u548c\u5357\u975e\u7b49\u975e\u4f20\u7edf\u751f\u4ea7\u5546\u5728\u4e00\u4e2a\u66fe\u7ecf\u7531\u6cd5\u56fd\u548c\u610f\u5927\u5229\u7b49\u65e7\u4e16\u754c\u53c2\u4e0e\u8005\u4e3b\u5bfc\u7684\u884c\u4e1a\u4e2d\u58f0\u540d\u9e4a\u8d77\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u81ea20\u4e16\u7eaa60\u5e74\u4ee3\u4ee5\u6765\uff0c\u5370\u5ea6\u5728\u5580\u62c9\u62c9\u90a6\u3001\u5361\u7eb3\u5854\u514b\u90a6\u3001\u5b89\u5f97\u62c9\u90a6\u548c\u6cf0\u7c73\u5c14\u7eb3\u5fb7\u90a6\u5df2\u7ecf\u5f00\u59cb\u5546\u4e1a\u5316\u751f\u4ea7\u53ef\u53ef\uff0c\u4f46\u53ef\u53ef\u7684\u4ea7\u91cf\u4ecd\u7136\u76f8\u5f53\u6709\u9650\u3002\u6839\u636e\u8170\u679c\u548c\u53ef\u53ef\u53d1\u5c55\u5c40\u7684\u6570\u636e\uff0c2015-2016\u5e74\uff0c\u5370\u5ea6\u53ef\u53ef\u4ea7\u91cf\u4e3a17200\u516c\u5428\u3002\u8fd9\u662f\u540c\u671f\u8c61\u7259\u6d77\u5cb8\u4ea7\u91cf\u76841%\u591a\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u5370\u5ea6\u7684\u7cd6\u679c\u548c\u5de7\u514b\u529b\u884c\u4e1a\u8fdb\u53e3\u5927\u90e8\u5206\u539f\u6750\u6599\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8d1d\u6d1b\u548c\u4ed6\u7684\u516b\u540d\u5458\u5de5\u56e2\u961f\u5f00\u59cb\u7528\u5370\u5ea6\u53ef\u53ef\u5236\u4f5c\u5de7\u514b\u529b\u68d2\u548c\u68d2\u68d2\u7cd6\uff0c\u4e0e\u751f\u4ea7\u53ef\u53ef\u8c46\u7684\u519c\u6c11\u5bc6\u5207\u5408\u4f5c\uff0c\u7136\u540e\u52a0\u5165\u6930\u5b50\u3001\u751f\u59dc\u548c\u8d21\u591a\u62c9\u9178\u6a59\u7b49\u914d\u6599\uff1b\u83e0\u841d\u871c\u548c\u9ed1\u80e1\u6912\uff0c\u751a\u81f3\u8292\u679c\u3001\u7ea2\u8fa3\u6912\u548c\u8fa3\u6912\u3002\n\u5982\u4eca\uff0c\u8fd9\u5bb6\u81ea\u8d1f\u76c8\u4e8f\u7684\u516c\u53f8\u6bcf\u5468\u6700\u591a\u751f\u4ea7\u7ea6150\u516c\u65a4\u5de7\u514b\u529b\uff0c\u76f8\u5f53\u4e8e2400\u5757\u5de6\u53f3\uff0c\u6bcf72\u514b\u552e\u4ef7335\u5362\u6bd4\u3002\u8fd9\u8fdc\u9ad8\u4e8e\u5927\u4f17\u5e02\u573a\u5de7\u514b\u529b\u7684\u4ef7\u683c\uff0c\u4f46\u4ecd\u6bd4\u745e\u58eb\u54c1\u724cLindt\u4fbf\u5b9c\u3002Lindt\u5728\u5370\u5ea6\u7684100\u514b\u5de7\u514b\u529b\u552e\u4ef7\u8d85\u8fc7500\u5362\u6bd4\u3002\nEarth Loaf\u5de7\u514b\u529b\u5728\u5168\u56fd\u5404\u5730\u7684\u6709\u673a\u4e13\u5356\u5e97\u548c\u9910\u5385\u51fa\u552e\u3002\u9664\u4e86\u82f1\u56fd\u3001\u7f8e\u56fd\u548c\u8461\u8404\u7259\u7b49\u56fd\u7684\u51e0\u5bb6\u5546\u5e97\u5916\uff0c\u5b83\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8be5\u516c\u53f8\u81ea\u5df1\u7684\u7f51\u7ad9\u548c\u5176\u4ed6\u5728\u7ebf\u96f6\u552e\u5546\u83b7\u5f97\u3002\u8d1d\u6d1b\u8bf4\uff0cEarth Loaf\u53bb\u5e74\u7684\u9500\u552e\u989d\u589e\u957f\u4e8645%\uff0c\u4eca\u5e74\u9884\u8ba1\u5c06\u589e\u957f50-100%\u3002\u8be5\u516c\u53f8\u7684\u76ee\u6807\u662f\u5728\u672c\u8d22\u5e74\u7ed3\u675f\u524d\u5c06\u4ea7\u91cf\u63d0\u9ad8\u8fd1\u4e09\u500d\uff0c\u5e76\u6b63\u5728\u4e0e\u6295\u8d44\u8005\u5546\u8ba8\u878d\u8d44\u4e8b\u5b9c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u666e\u675c\u5207\u91cc\uff0c\u6885\u68ee\uff1b\u89c4\u6a21\u8f83\u5c0f\u7684\u516c\u53f8Co\u4e5f\u5728\u751f\u4ea7\u7eaf\u7d20\u5de7\u514b\u529b\uff0c\u8fd9\u662f\u6fb3\u5927\u5229\u4e9a\u8054\u5408\u521b\u59cb\u4eba\u7b80\u00b7\u6885\u68ee\uff08Jane Mason\uff09\u57282011\u5e74\u642c\u5230\u5370\u5ea6\u540e\u5bfb\u627e\u53ef\u4ee5\u5403\u7684\u5de7\u514b\u529b\u5931\u8d25\u7684\u7ed3\u679c\u3002\n\u5979\u8bf4\uff1a\u201c\u6211\u7684\u80cc\u666f\u662f\u5403\u9ed1\u8272\u6709\u673a\u5de7\u514b\u529b\uff0c\u4e0d\u542b\u9632\u8150\u5242\uff0c\u51e0\u4e4e\u4e0d\u542b\u7cd6\u3002\u5f53\u6211\u6765\u5230\u8fd9\u91cc\u65f6\uff0c\u6211\u80fd\u627e\u5230\u7684\u5f88\u591a\u54c1\u724c\u90fd\u662f\u5927\u4f17\u5e02\u573a\u7684\u516c\u53f8\uff0c\u5b83\u4eec\u7684\u7cd6\u548c\u725b\u5976\u542b\u91cf\u5f88\u9ad8\u3002\u201d\u3002\n\u5979\u548c\u4e08\u592b\u6cd5\u6bd4\u6069\u6700\u521d\u662f\u5728\u5bb6\u91cc\u505a\u7684\u70f9\u996a\u5b9e\u9a8c\uff0c\u6700\u7ec8\u57282013\u5e74\u53d1\u5c55\u6210\u4e86\u4e00\u5bb6\u4f01\u4e1a\uff0c\u8be5\u5730\u533a\u7684\u4e00\u5c0f\u90e8\u5206\u5973\u6027\u52b3\u52a8\u529b\u751f\u4ea7\u5de7\u514b\u529b\uff0c\u8fd9\u662f\u4e00\u4e2a\u8fdc\u79bb\u5927\u89c4\u6a21\u751f\u4ea7\u7684\u5de7\u514b\u529b\u7684\u4e16\u754c\u3002\n\u5bf9\u6885\u68ee\u6765\u8bf4\uff0c\u76ee\u6807\u662f\u907f\u514d\u4f7f\u7528\u7cbe\u5236\u7cd6\u548c\u4e73\u5316\u5242\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u63d0\u4f9b\u66f4\u5e73\u6ed1\u7684\u8d28\u5730\uff0c\u5e76\u52a0\u5165\u66f4\u591a\u53ef\u53ef\uff0c\u8fd9\u79cd\u6210\u5206\u5728\u8d85\u5e02\u53d1\u73b0\u7684\u5de7\u514b\u529b\u4e2d\u5f88\u5c11\u4f7f\u7528\u3002\n\u6885\u68ee\u89e3\u91ca\u8bf4\uff1a\u201c\u5728\u4e00\u4e2a\u666e\u901a\u7684\u725b\u5976\u9152\u5427\u91cc\uff0c\u53ef\u80fd\u53ea\u670910%\u7684\u53ef\u53ef\u8c46\uff0c\u8fd9\u662f\u6700\u6602\u8d35\u7684\u539f\u6599\u3002\u800c\u5728\u6211\u4eec\u7684\u6807\u51c6\u9152\u5427\u91cc\uff0c\u670975%\u7684\u53ef\u53ef\u8c46\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u53ef\u9ec4\u6cb9\u3002\u201d\u3002\n\u5409\u767e\u5229\u4e73\u5236\u54c1\u9152\u5427\u7684\u914d\u6599\u8868\u4ee5\u7cd6\u5f00\u5934\uff0c\u8868\u660e\u5b83\u662f\u6700\u5927\u7684\u6210\u5206\uff0c\u5176\u6b21\u662f\u4e73\u56fa\u4f53\uff0822%\uff09\uff1b\u5b83\u8fd8\u6709\u4e24\u79cd\u5316\u5b66\u4e73\u5316\u5242\u548c\u4eba\u5de5\u9999\u6599\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6885\u68ee\uff1bCo\u7684\u9152\u5427\u4f7f\u7528\u5168\u53ef\u53ef\u8c46\u548c\u8517\u7cd6\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u8fd9\u6837\uff0c\u9664\u4e86\u6709\u673a\u82b1\u751f\u9171\u6216\u8584\u8377\u7b49\u5176\u4ed6\u8c03\u5473\u54c1\u3002\u6885\u68ee\u8bf4\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u7684\u5de7\u514b\u529b\u4ef7\u683c\u4e3a\u6bcf\u68d2295\u5362\u6bd4\u3002\n\u201c\u6709\u51e0\u4e2a\u4eba\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u75af\u4e86\u3002\u4ed6\u4eec\u8bf4\uff0c\u5728\u5370\u5ea6\uff0c\u7eaf\u7d20\u9ed1\u5de7\u514b\u529b\u6c38\u8fdc\u884c\u4e0d\u901a\uff0c\u201d\u5979\u8865\u5145\u8bf4\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5979\u8bf4\uff0c\u8be5\u516c\u53f890%\u7684\u6d88\u8d39\u8005\u662f\u5370\u5ea6\u4eba\uff0c\u8fd9\u53cd\u6620\u4e86\u6574\u4e2a\u56fd\u5bb6\u54c1\u5473\u7684\u66f4\u5927\u8f6c\u53d8\u3002\u867d\u7136\u5979\u62d2\u7edd\u900f\u9732\u9500\u552e\u548c\u751f\u4ea7\u6570\u636e\uff0c\u4f46\u5979\u8868\u793a\uff0c\u8be5\u516c\u53f8\u5df2\u7b2c\u4e09\u6b21\u8fbe\u5230\u4ea7\u80fd\uff0c\u76ee\u524d\u6b63\u5728\u5efa\u8bbe\u53e6\u4e00\u5bb6\u5de5\u5382\u4ee5\u6ee1\u8db3\u9700\u6c42\u3002\u6885\u68ee\uff1bCo\u2019s\u5de7\u514b\u529b\u5728\u7f51\u4e0a\u4ee5\u53ca\u5168\u56fd\u5404\u5730\u7684\u7f8e\u98df\u6742\u8d27\u5e97\u548c\u5496\u5561\u9986\u5747\u6709\u552e\u3002\n\u7136\u800c\uff0c\u5c3d\u7ba1\u6709\u8fd9\u4e9b\u79ef\u6781\u7684\u53d1\u5c55\uff0c\u5370\u5ea6\u7684\u624b\u5de5\u54c1\u724c\u771f\u7684\u80fd\u751f\u4ea7\u51fa\u597d\u7684\u5de7\u514b\u529b\u5417\uff1f\n2015\u5e74\uff0c\u603b\u90e8\u4f4d\u4e8e\u5e03\u9c81\u514b\u6797\u7684\u624b\u5de5\u5de7\u514b\u529b\u54c1\u724cMast Brothers\u56e0\u6709\u62a5\u9053\u8d28\u7591\u5176\u4ece\u8c46\u5230\u6761\u7684\u505a\u6cd5\u7684\u771f\u5b9e\u6027\u800c\u906d\u5230\u62a8\u51fb\u3002\u9a6c\u65af\u7279\u5144\u5f1f\u516c\u53f8\uff08Mast Brothers\uff09\u56e0\u5176\u4e0d\u7a33\u5b9a\u7684\u5305\u88c5\u800c\u95fb\u540d\u5168\u7403\uff0c\u4f46\u4e5f\u53d7\u5230\u4e86\u884c\u4e1a\u4e13\u5bb6\u7684\u4e25\u5389\u6279\u8bc4\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8be5\u516c\u53f8\u7684\u5de7\u514b\u529b\u4e0d\u503c10\u7f8e\u5143\u7684\u4ef7\u683c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u5e76\u4e0d\u597d\u5403\u3002\n\u5bf9\u4e8e\u98df\u54c1\u4f5c\u5bb6\u3001Real food\u64ad\u5ba2\u4e3b\u6301\u4eba\u7ef4\u514b\u62c9\u59c6\u00b7\u591a\u514b\u7279\uff08Vikram Doctor\uff09\u6765\u8bf4\uff0c\u5370\u5ea6\u7684\u4e00\u4e9b\u624b\u5de5\u5de7\u514b\u529b\u54c1\u724c\u4e5f\u6709\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u81f3\u5c11\u5728\u8d28\u5730\u65b9\u9762\u662f\u5982\u6b64\u3002\n\u4ed6\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff1a\u201c\u6211\u771f\u7684\u5f88\u60f3\u5403\uff0c\u4e5f\u5f88\u559c\u6b22\u3002\u201d\u3002\u201c\u4ed6\u4eec\u662f\u90a3\u79cd\u6211\u8ba4\u4e3a\u5f88\u91cd\u8981\u7684\u751f\u4ea7\u5546\uff0c\u4ed6\u4eec\u975e\u5e38\u70ed\u60c5\uff0c\u613f\u610f\u5728\u539f\u6599\u7684\u91c7\u8d2d\u548c\u52a0\u5de5\u65b9\u9762\u8d39\u4e8b\uff0c\u613f\u610f\u5728\u914d\u65b9\u4e0a\u8fdb\u884c\u8bd5\u9a8c\uff0c\u540c\u65f6\u4e5f\u5c0a\u91cd\u5f53\u5730\u7684\u53e3\u5473\u3002\u6240\u4ee5\u6211\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u4e70\u4e86\u4ed6\u4eec\uff0c\u800c\u4e14\u2026\u2026\u8fd9\u5bf9\u6211\u6765\u8bf4\u6839\u672c\u4e0d\u53ef\u80fd\u2026\u2026\u201d\n\u4ed6\u8865\u5145\u9053\uff1a\u201c\u6211\u53d1\u73b0\u4ed6\u4eec\u7684\u5de7\u514b\u529b\u592a\u5e72\u3001\u592a\u786c\u3001\u592a\u82e6\uff0c\u5982\u679c\u82e6\u5473\u8ba9\u4f4d\u4e8e\u5f88\u597d\u7684\u56de\u5473\uff0c\u8fd9\u5e94\u8be5\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\uff0c\u4f46\u6211\u4e0d\u559c\u6b22\u8fd9\u4e9b\u5de7\u514b\u529b\u3002\u201d\u3002\n\u8fd9\u53ef\u80fd\u4e0e\u5370\u5ea6\u53ef\u53ef\u8c46\u672c\u8eab\u6709\u5173\u3002\u5b5f\u4e70Theobroma patisserie and Chocolate\u8fde\u9501\u5e97\u7684\u521b\u59cb\u4eba\u51ef\u7eb3\u5179\u00b7\u6885\u65af\u66fc\uff08Kainaz Messman\uff09\u8868\u793a\uff0c\u5370\u5ea6\u53ef\u53ef\u8c46\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5b83\u7684\u9178\u6027\u5f88\u5f3a\uff0c\u8fd8\u65e0\u6cd5\u4e0e\u4e16\u754c\u9876\u7ea7\u53ef\u53ef\u8c46\u751f\u4ea7\u5546\u751f\u4ea7\u7684\u53ef\u53ef\u8c46\u76f8\u6bd4\u3002\u8fd9\u7ed9\u90a3\u4e9b\u8bd5\u56fe\u5728\u5370\u5ea6\u63a8\u5e7f\u8c46\u5b50\u9152\u5427\u8fd0\u52a8\u7684\u516c\u53f8\u5e26\u6765\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\n\u6885\u65af\u66fc\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff1a\u201c\u867d\u7136\u4ed6\u4eec\u4e0d\u8f9e\u8f9b\u52b3\u5730\u7528\u5f3a\u5927\u7684\u5de5\u827a\u5236\u4f5c\u771f\u6b63\u7684\u5de7\u514b\u529b\uff0c\u4f46\u4ed6\u4eec\u548c\u6211\u4eec\u6240\u6709\u4eba\u4e00\u6837\uff0c\u90fd\u88ab\u4e00\u79cd\u56fa\u6709\u7684\u52a3\u8d28\u53ef\u53ef\u8c46\u6240\u56f0\u6270\u3002\u201d\u3002\n\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u552f\u4e00\u7684\u89e3\u51b3\u529e\u6cd5\u4f3c\u4e4e\u662f\u4ece\u6700\u4e86\u89e3\u5de7\u514b\u529b\u7684\u4eba\u90a3\u91cc\u8fdb\u53e3\u5de7\u514b\u529b\u3002\n\u5f53\u5e93\u80e1\u00b7\u79d1\u67e5\u5c14\u548c\u7279\u8d3e\u65af\u7ef4\u00b7\u94b1\u5fb7\u62c9\u5728\u5206\u522b\u62c5\u4efb\u5e73\u9762\u8bbe\u8ba1\u5e08\u548c\u7cd5\u70b9\u53a8\u5e08\u591a\u5e74\u540e\u51b3\u5b9a\u505a\u70b9\u65b0\u7684\u4e8b\u60c5\u65f6\uff0c\u4ed6\u4eec\u7a81\u7136\u60f3\u5230\uff0c\u8981\u628a\u81ea\u5df1\u7684\u624d\u80fd\u7ed3\u5408\u8d77\u6765\uff0c\u4e3a\u5370\u5ea6\u5de7\u514b\u529b\u5e02\u573a\u5e26\u6765\u65b0\u7684\u4e1c\u897f\u3002\nChandela\u544a\u8bc9Quartz\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\u5de7\u514b\u529b\u662f\u6bcf\u4e2a\u4eba\u90fd\u559c\u6b22\u7684\u4e1c\u897f\uff0c\u9664\u4e86\u5370\u5ea6\u5e76\u6ca1\u6709\u81ea\u5df1\u7684\u5de7\u514b\u529b\u54c1\u724c\uff0c\u5b83\u7684\u5305\u88c5\u5f88\u597d\uff0c\u8d28\u91cf\u5f88\u597d\uff0c\u53e3\u611f\u5f88\u597d\uff0c\u5e26\u6709\u5b9e\u9a8c\u5473\u9053\u3002\u201d\u3002\n\u56e0\u6b64\uff0c2015\u5e7411\u6708\uff0c\u4e24\u4eba\u63a8\u51fa\u4e86\u57fa\u4e8e\u658b\u6d66\u5c14\u7684All Things\uff0c\u624b\u5de5\u5236\u4f5c\u5de7\u514b\u529b\u68d2\u548c\u5757\u83cc\uff0c\u8fd9\u4e9b\u5de7\u514b\u529b\u6765\u81ea\u6bd4\u5229\u65f6\u7684\u4f9b\u5e94\u5546\uff0c\u4ed6\u4eec\u4f7f\u7528\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u53ef\u53ef\u8c46\u3002\u8fd9\u4e9b\u9152\u5427\u7528Kochar\u8bbe\u8ba1\u7684\u5f69\u8272\u5305\u88c5\u5305\u88f9\u8d77\u6765\u3002\n\u94b1\u5fb7\u62c9\u8bf4\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4e3a\u4e86\u7ed9\u6bcf\u4e00\u5757\u5de7\u514b\u529b\u8bb2\u4e00\u4e2a\u6545\u4e8b\u3002\u4f8b\u5982\uff0cAll Things Monday bar\u65e8\u5728\u8ba9\u6bcf\u4e2a\u4eba\u4e00\u5468\u4e2d\u6700\u4e0d\u559c\u6b22\u7684\u4e00\u5929\u5145\u6ee1\u6d3b\u529b\uff0c\u5b83\u7684\u7279\u8272\u662f\u9ed1\u5de7\u514b\u529b\u52a0\u683c\u5170\u8bfa\u62c9\u9ea6\u7247\uff0c\u5305\u88c5\u5728\u4e00\u4e2a\u770b\u8d77\u6765\u50cf\u886c\u886b\u7684\u76d2\u5b50\u91cc\uff0c\u5e76\u9644\u6709\u6bcf\u4f4d\u987e\u5ba2\u7684\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7ae5\u5e74\u7684\u4e00\u5207\u90fd\u88ab\u60f3\u8c61\u6210\u662f\u5bf9\u7ae5\u5e74\u6700\u559c\u6b22\u7684\u9999\u8549\u548c\u592a\u5983\u7cd6\u53e3\u5473\u7684\u81f4\u656c\u3002\n\u867d\u7136\u4e24\u4eba\u6700\u521d\u4e0d\u786e\u5b9a\u5370\u5ea6\u6d88\u8d39\u8005\u5bf9\u767d\u5de7\u514b\u529b\u914d\u9999\u69df\u548c\u8349\u8393\uff0c\u6216\u6851\u683c\u91cc\u4e9a\u4e2d\u5fc3\u7684\u9152\u5427\u4f1a\u6709\u4ec0\u4e48\u53cd\u5e94\uff0c\u4f46\u4ed6\u4eec\u7684\u53cd\u5e94\u4ee4\u4eba\u60ca\u8bb6\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u5e74\u8f7b\u7684\u57ce\u5e02\u5370\u5ea6\u4eba\u524d\u6240\u672a\u6709\u5730\u51fa\u56fd\u65c5\u884c\uff0c\u5e76\u63a5\u89e6\u5230\u5404\u79cd\u65b0\u53e3\u5473\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u5e2e\u52a9\u4e86\u4ed6\u4eec\u3002Chandela\u8bf4\uff0c\u5982\u4eca\uff0c\u8be5\u516c\u53f8\u8fd8\u4e3a\u5ba2\u6237\u5b9a\u5236\u5de7\u514b\u529b\uff0c\u8fd9\u4e9b\u5ba2\u6237\u73b0\u5728\u6b63\u5728\u5bfb\u627e\u66f4\u4e0d\u5bfb\u5e38\u7684\u53e3\u5473\uff0c\u5305\u62ec\u65e5\u672c\u914d\u6599\uff0c\u5982yuzu\u548cmiso\u3002\nAll Things\u7684\u5de7\u514b\u529b\u68d2\u5728\u9ad8\u7aef\u7f8e\u98df\u6742\u8d27\u5e97\u548c\u8be5\u516c\u53f8\u7f51\u7ad9\u4e0a\u51fa\u552e\u3002\u5b83\u4eec\u7684\u4ef7\u683c\u5728\u6bcf\u5757350\u5362\u6bd4\u5230383\u5362\u6bd4\u4e4b\u95f4\uff0c\u6bd4Earth Loaf\u548cMason&amp\uff1bChandela\u8868\u793a\uff0c\u9ad8\u6602\u7684\u6210\u672c\u53cd\u6620\u4e86\u539f\u6599\u548c\u5305\u88c5\u7684\u4ef7\u683c\uff0c\u4f46\u5979\u8865\u5145\u8bf4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u516c\u53f8\u7684\u5ba2\u6237\u90fd\u6ca1\u6709\u62b1\u6028\u8fc7\u30022016\u5e74\u672b\u7684\u8282\u65e5\u548c\u5a5a\u793c\u671f\u95f4\uff0cAll Things\u6bcf\u6708\u751f\u4ea7\u7ea68000\u5757\u5de7\u514b\u529b\uff0c\u5927\u90e8\u5206\u8ba2\u5355\u6765\u81ea\u65b0\u5fb7\u91cc\uff0c\u4ee5\u53ca\u5b5f\u4e70\u3001\u73ed\u52a0\u7f57\u5c14\u548c\u52a0\u5c14\u5404\u7b54\u7b49\u57ce\u5e02\u3002\n\u5728\u5370\u5ea6\u708e\u70ed\u6f6e\u6e7f\u7684\u6c14\u5019\u4e2d\uff0c\u6700\u5927\u7684\u6311\u6218\u662f\u5982\u4f55\u5904\u7406\u559c\u6012\u65e0\u5e38\u7684\u5de7\u514b\u529b\u3002\u9664\u4e86\u4ea4\u4ed8\u65f6\u5de7\u514b\u529b\u878d\u5316\u7684\u98ce\u9669\u5916\uff0c\u6c34\u5206\u4e5f\u4f1a\u5f71\u54cd\u5de7\u514b\u529b\u7684\u8d28\u91cf\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u516c\u53f8\u5fc5\u987b\u5728\u53a8\u623f\u4fdd\u6301\u5408\u9002\u7684\u6e29\u5ea6\u3002\u4f46\u5728\u7279\u522b\u6f6e\u6e7f\u7684\u65e5\u5b50\u91cc\uff0c\u5c24\u5176\u662f\u5728\u5b63\u98ce\u5b63\u8282\uff0c\u751f\u4ea7\u5fc5\u987b\u505c\u6b62\u3002\n\u7136\u800c\uff0c\u5c31\u50cf\u571f\u9762\u5305\u548c\u6885\u68ee\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u5370\u5ea6\u6d88\u8d39\u8005\u8981\u60f3\u771f\u6b63\u54c1\u5c1d\u5230\u4e0d\u90a3\u4e48\u751c\u7684\u5de7\u514b\u529b\uff0c\u82b1\u5927\u94b1\u8d2d\u4e70\u5b83\uff0c\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\nTheobroma\u7684Messman\u8bf4\uff1a\u201c\u867d\u7136\u4ed6\u4eec\u53ef\u80fd\u4f1a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u4f46\u5927\u591a\u6570\u4eba\u65e0\u6cd5\u5206\u8fa8\u771f\u5de7\u514b\u529b\u548c\u4eff\u5de7\u514b\u529b\u4e4b\u95f4\u7684\u533a\u522b\u3002\u4ed6\u4eec\u4ecd\u7136\u4f1a\u8fd4\u56de\u5230\u66f4\u751c\u3001\u66f4\u6df1\uff08\u4ec5\u989c\u8272\uff09\u548c\u5145\u6ee1\u7cbe\u534e\u7684\u5de7\u514b\u529b\u3002\u201d\u3002\n\u6b64\u5916\uff0c\u5305\u62ec\u5409\u767e\u5229\uff08Cadbury\uff09\u548c\u963f\u7a46\u5c14\uff08Amul\uff09\u5728\u5185\u7684\u5916\u56fd\u548c\u672c\u5730\u5927\u4f17\u5e02\u573a\u54c1\u724c\u90fd\u9762\u4e34\u7740\u6fc0\u70c8\u7684\u7ade\u4e89\uff0c\u5b83\u4eec\u6ce8\u610f\u5230\u4eba\u4eec\u5bf9\u9ad8\u6863\u98ce\u5473\u9ed1\u5de7\u514b\u529b\u7684\u5174\u8da3\u8d8a\u6765\u8d8a\u5927\uff0c\u5e76\u4ee5\u66f4\u5b9e\u60e0\u7684\u4ef7\u683c\u63a8\u51fa\u4e86\u81ea\u5df1\u7684\u7248\u672c\u3002\u5bf9\u4e8e\u666e\u901a\u7684\u5370\u5ea6\u5ba2\u6237\u6765\u8bf4\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u66f4\u5bb9\u6613\u83b7\u5f97\uff0c\u4e5f\u66f4\u5bb9\u6613\u83b7\u5f97\u3002\u8bf4\u670d\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5c0f\u4f17\u7fa4\u4f53\u8f6c\u5411\u6602\u8d35\u7684\u624b\u5de5\u54c1\u724c\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u548c\u6559\u80b2\u3002\n\u4f46\u6b63\u5982\u533b\u751f\u6240\u8bf4\uff0c\u5728\u5370\u5ea6\u8fd9\u6837\u4e00\u4e2a\u4eba\u53e3\u4f17\u591a\u7684\u56fd\u5bb6\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u76f8\u5bf9\u8f83\u5c0f\u7684\u5229\u57fa\u5e02\u573a\uff0c\u76ee\u524d\u4e5f\u8db3\u4ee5\u7ef4\u6301\u4e00\u4e2a\u5c0f\u578b\u624b\u672f\u3002", "note_en": "As Indian consumers become more experimental in their tastes, a fledgling artisanal chocolate movement is blossoming across the country.\n Combining organic ingredients, unconventional flavours, and made-for-Instagram packaging, a handful of small, homegrown brands are setting themselves apart from the sweet, milky, mass-market favourites, such as Cadbury Dairy Milk and Munch, which have  dominated India\u2019s booming chocolate market for decades.\n Indians consumed an estimated  228 thousand tonnes of chocolate confectionary in 2016, up 50% from 2011, according to market research firm Mintel. Viewed as a convenient and affordable snack, and sometimes priced as low as Rs5, mass-market bars account for 85% of the total sales in the country. Their popularity has made India one of the world\u2019s fastest-growing markets for chocolate, expected to be worth around Rs32,000 crore ($4.97 billion) by 2020, a 160% jump from 2015, Mintel says.\n  In the midst of this growth, expat entrepreneurs in India\u2019s southern states are targeting discerning consumers with cash to spend by kicking off India\u2019s own bean-to-bar movement. They\u2019re getting involved in every stage of the chocolate-making process, from the farming of cacao beans to the crafting of bars.\n  In 2011, looking for a change of lifestyle (and weather), David Belo moved from the UK to Mysuru in Karnataka after various stints as a bartender, bread baker, and pastry chef. Having worked with raw chocolate before, he was struck by the potential of India\u2019s small cacao plantations, whose beans have always been overshadowed by those from the world\u2019s largest producers, such as Ivory Coast, Ghana, Indonesia, and Ecuador.\n  So, in 2012, along with partner Angelika Anangnostou, Belo launched  Earth Loaf, a brand of handcrafted, single-origin chocolates made using cacao beans from organic plantations in Karnataka. The goal, he says, was to put India on the map in terms of artisanal chocolate.\n \u201cThe flavour profile of Asian cacao, and Indian cacao in particular, is quite different from central America and west Africa, so we have something very interesting here,\u201d Belo told Quartz. He likened India and other Asian cacao producers to the New World in wine, where non-traditional producers such as Australia and South Africa have made a name for themselves in a business once dominated by old world-players such as France and Italy.\n But while cacao has been commercially produced in India since the 1960s, in the states of Kerala, Karnataka, Andhra Pradesh, and Tamil Nadu, its output has remained fairly limited. In 2015-16, India recorded cacao production of  17,200 metric tonnes, according to the directorate of cashew and cocoa development. That\u2019s a  little over 1% of what Ivory Coast produced in the same period. It\u2019s no wonder, then, that India\u2019s confectionary and chocolate industries import most of their raw material.\n  Nevertheless, Belo and his team of eight employees set out to create chocolate bars and bon-bons with Indian cacao, working closely with farmers who produce the beans, and then incoporating ingredients such as coconut, ginger, and  gondhoraj limes; jackfruit and black pepper, or even mango, red capsicum, and chili.\n Today, the self-funded company produces a maximum of about 150kg of chocolate a week, which translates to around 2,400 bars, priced at Rs335 for 72g. That\u2019s much higher than the cost of mass-market chocolates but still cheaper than Swiss brand Lindt, which is priced at over Rs500 for a 100g bar in India.\n  Earth Loaf\u2019s chocolates are sold at organic specialty shops and restaurants across the country. They are also available through the company\u2019s own website and other online retailers, besides a handful of stores in countries such as the UK, US, and Portugal. Belo says Earth Loaf recorded sales growth of 45% last year and is set to grow by 50-100% this year. It aims to almost triple its production by the end of the financial year and is in talks with investors for funding.\n Meanwhile, in Puducherry,  Mason &amp; Co, a smaller operation, is also making vegan chocolates, the result of Australian co-founder Jane Mason\u2019s unsuccessful quest to find chocolate that she could eat after moving to India in 2011.\n \u201cI came from a background of eating dark, organic chocolate (with) no preservatives (and) little to no sugar. And when I came here, a lot of the brands that I could find were the mass-market companies, which were high in sugar and milk,\u201d she said.\n  What started out as a home-cooking experiment with her husband, Fabien, eventually evolved into a business in 2013, with a small, all-female workforce from the region making chocolate that is a world away from mass-produced bars.\n For Mason, the goal was to avoid including refined sugar and emulsifiers,\u00a0used to provide a smoother texture,\u00a0and to incorporate more cacao, an ingredient  used sparingly in chocolates found at supermarkets.\n  \u201cIn an average Dairy Milk bar, there\u2019s probably only 10% cacao, which is the most expensive ingredient. Whereas in our standard bars there would be 75% cacao, and that includes cacao butter,\u201d Mason explained.\n The ingredients list of a Cadbury Dairy Milk bar begins with sugar, suggesting that it\u2019s the largest component, followed by milk solids (22%); it also features two kinds of chemical emuslifiers and artificial flavourings. In comparison, Mason &amp; Co\u2019s bars use whole cacao beans and cane sugar, and that\u2019s pretty much it, barring other flavourings such as organic peanut butter or peppermint. This is why its chocolate is priced at Rs295 a bar, Mason says.\n \u201cA few people told us we were crazy. They said a dark, vegan chocolate\u2019s never going to work in India,\u201d she added. Nevertheless, 90% of the company\u2019s consumers are Indian, she says, and that reflects a larger shift in tastes across the country. While she declined to share sales and production figures, she said the company has hit its capacity for the third time, and is now building another factory to cater to the demand. Mason &amp; Co\u2019s chocolates are sold both online and at gourmet grocery stores and cafes across the country.\n However, despite these positive developments, do India\u2019s artisanal brands actually make good chocolate?\n  In 2015, the Brooklyn-based artisanal chocolate brand Mast Brothers came under fire after reports questioned the authenticity of its bean-to-bar approach. Arguably best-known around the world for its Instagrammable packaging, Mast Brothers also received heavy criticism from industry experts, who argued that the company\u2019s chocolates were unworthy of their $10 price tag, given that they  weren\u2019t actually that good to eat.\n  For Vikram Doctor, a food writer and the host of The Real Food podcast, some of India\u2019s artisanal chocolate brands have a similar problem, at least when it comes to texture.\n \u201cI\u2019ve really tried to eat and like them,\u201d he said in an email. \u201cThey are the sort of producer I think is important\u2014really passionate and willing to take trouble in sourcing and processing ingredients, willing to be experimental in their formulations yet also respectful of local tastes. So I\u2019ve bought them, again and again, and\u2026 it\u2019s just not happening for me\u2026\u201d\n \u201cI find their chocolates too dry and gritty and bitter, which shouldn\u2019t be a bad thing if the bitterness gives way to a great aftertaste, but I\u2019m not getting it with these chocolates,\u201d he added.\n  That could have something to do with India\u2019s cacao beans themselves. According to Kainaz Messman, founder of Mumbai\u2019s Theobroma patisserie and chocolaterie chain, the problem with Indian cacao is that it\u2019s quite acidic in nature, and can\u2019t yet compare to the beans sourced from the world\u2019s top cacao producers. And that poses a problem for companies attempting to promote a bean-to-bar movement in India.\n \u201cWhile they are taking the trouble to make real chocolate with strong processes, they, like all of us, are getting stuck with an inherent cocoa bean which is of inferior quality,\u201d Messman said in an email.\n For this, the only solution seems to be to import chocolate from those who know it best.\n  When Kuhu Kochar and Tejasvi Chandela decided it was time to do something new after years of working as graphic designer and a pastry chef, respectively, they hit upon the idea of combining their talents to bring something new to India\u2019s chocolate market.\n  \u201cWe thought that chocolate is something that everybody likes, except India does not really have its own chocolate brand that has great packaging and good-quality, good-tasting chocolate with experimental flavours,\u201d Chandela told Quartz.\n So, in November 2015, the duo launched Jaipur-based  All Things, handcrafting bars and truffles with chocolate sourced from suppliers in Belgium who use cacao beans from around the world. These bars are wrapped up in colourful packaging designed by Kochar.\n The idea was to tell a story with each chocolate, Chandela says. So, for instance, the All Things Monday bar, designed to liven up everybody\u2019s least favourite day of the week, featured dark chocolate topped with granola, packaged in a box designed to look like a shirt, and accompanied by a to-do list for every customer. Meanwhile, All Things Childhood was envisioned as a nod to the childhood-favourite flavours of banana and toffee.\n And while the pair was initially uncertain about how Indian consumers would react to white chocolate with champagne and strawberries, or Sangria-centred bars, the response was surprising, helped no doubt by the fact that young, urban Indians are travelling abroad like never before, and are being exposed to all sorts of new flavours. Today, the company also creates customised chocolate for clients who, Chandela says, are now looking out for even more unusual flavours, including Japanese ingredients like yuzu and miso.\n  All Things\u2019 chocolate bars are sold at high-end, gourmet grocery stores and through the company\u2019s website. Priced at between Rs350 and Rs383 a bar, they\u2019re more expensive than Earth Loaf and Mason &amp; Co. According to Chandela, the high cost reflects the price of ingredients and packaging, but so far, she added, none of the company\u2019s customers have complained. During the festival and wedding season of late 2016, All Things made around 8,000 chocolate bars a month, with most of its orders coming from New Delhi, as well cities such as Mumbai, Bengaluru, and Kolkata.\n For All Things, the big challenge is handling temperamental chocolate in India\u2019s hot and humid climate. Besides the risk of the chocolate melting on delivery, moisture can also compromise its quality, meaning that the company has to maintain just the right temperature in its kitchen. But on particularly humid days, especially during the monsoon season, production simply has to stop.\n However, like Earth Loaf and Mason &amp; Co, All Things also has to contend with the fact that most Indian consumers still have a long way to go before they can really appreciate chocolate that\u2019s not so sweet, and fork over the big bucks required to buy it.\n \u201cWhile they may experiment, most people cannot tell the difference (between) real and imitation chocolate. They still always come back to a sweeter, darker (in colour only), and essence-filled chocolate,\u201d Theobroma\u2019s Messman said.\n Moreover, there\u2019s stiff competition from both foreign and local mass-market brands, including Cadbury and Amul, which have noticed the growing interest in premium, flavoured dark chocolates, and launched their own versions at much more affordable prices. For the average Indian customer, these are more within reach and widely available. It may take a lot more time and education to convince more than just a niche group to switch to expensive artisanal brands.\n But in a country as populous as India, as Doctor says, even a relatively tiny niche could be enough to sustain a small operation for now.", "posttime": "2022-02-20 20:13:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5409\u767e\u5229,create,\u5de7\u514b\u529b", "title": "\u4e3a\u4e00\u4e2a\u75f4\u8ff7\u5409\u767e\u5229\u7684\u56fd\u5bb6\u521b\u9020\u4f18\u8d28\u5de7\u514b\u529b\u7684\u63a2\u7d22\uff082017\uff09", "title_en": "The quest to create quality chocolate for a country obsessed with Cadbury (2017)", "transed": 1, "url": "https://qz.com/india/1036502/the-quest-to-create-quality-chocolate-for-a-country-obsessed-with-cadbury/", "via": "", "real_tags": ["\u5409\u767e\u5229", "create", "\u5de7\u514b\u529b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074284, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u592a\u957f\u4e86\uff0c\u8bfb\u4e0d\u4e0b\u53bb\u4e86\uff0c\u5982\u679c\u4f60\u53ea\u662f\u5728\u5bfb\u627e\u9ad8\u6c34\u5e73\u7684\u70b9\uff0c\u8bf7\u53c2\u9605\u672c\u5e16\u7684\u201cTL\uff1bDR\u6458\u8981\u548c\u9ad8\u6c34\u5e73\u70b9\u201d\u90e8\u5206\u3002\n\u6700\u8fd1\uff0c\u6211\u5bf9npmregistry\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u5b83\u5728\u7ba1\u7406\u6240\u6709JavaScript\u548cNode\u7684\u5305\u7684\u5b89\u5168\u6027\u65b9\u9762\u8d77\u7740\u5173\u952e\u4f5c\u7528\u3002\u5728\u6ce8\u518c\u4e86\u4e00\u4e2a\u5e10\u6237\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u793a\u4f8b\u5305\u4e4b\u540e\uff0c\u6211\u5f00\u59cb\u67e5\u770b\u5404\u79cdweb\u7aef\u70b9\uff0c\u4ee5\u4e86\u89e3\u6211\u6b63\u5728\u5904\u7406\u7684\u662f\u54ea\u79cd\u7cfb\u7edf\u3002\n\u5728\u6d4f\u89c8\u5404\u79cd\u6d41\u884c\u8f6f\u4ef6\u5305\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u6ce8\u518c\u8868\u4e2d\u6709\u4e00\u4e2a\u76f8\u5f53\u72ec\u7279\u7684\u4e1c\u897f\uff1a\u6240\u6709\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u90fd\u662f\u516c\u5f00\u7684\u3002\u4f8b\u5982\uff0c\u8bf7\u6c42\u6211\u81ea\u5df1\u7684\u4e2a\u4eba\u8d44\u6599\u9875\u9762\u4f1a\u8fd4\u56de\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff1a\n\u629b\u5f00\u5783\u573e\u90ae\u4ef6\u95ee\u9898\u4e0d\u8c08\uff0c\u8fd9\u5bf9\u4e8e\u6ce8\u518c\u4e2d\u5fc3\u6765\u8bf4\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u516c\u5f00\u4e86\u6240\u6709NPMPackage\u7684\u7ef4\u62a4\u8005\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u4f8b\u5982\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u6b64\u529f\u80fd\u679a\u4e3enpm\u5305\u7684\u6240\u6709\u7ef4\u62a4\u8005\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u6709\u9488\u5bf9\u6027\u7684\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u7c7b\u7f51\u7edc\u9493\u9c7c\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u5bf9\u7814\u7a76\u6765\u8bf4\u5e76\u4e0d\u662f\u7279\u522b\u611f\u5174\u8da3\u3002\u7136\u800c\uff0c\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u65b0\u60f3\u6cd5\u8981\u8003\u8651\u2026\n\u5f53\u770b\u5230\u66f4\u591a\u7684\u8f6f\u4ef6\u5305\u548c\u7ef4\u62a4\u4eba\u5458\u65f6\uff0c\u53e6\u4e00\u79cd\u6a21\u5f0f\u5f00\u59cb\u878d\u5408\uff1a\u5728\u5f00\u53d1\u4eba\u5458\u62e5\u6709\u7684\u57df\u4e2d\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6b63\u5982\u8bb8\u591a\u5f00\u53d1\u8005\u4f1a\u544a\u8bc9\u4f60\u7684\u90a3\u6837\uff0c\u5728\u81ea\u5df1\u7684\u57df\u540d\u4e0a\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u662fpeak nerd street\u7684\u4fe1\u6761\u3002\u6211\u4e0d\u60f3\u627f\u8ba4\u8fd9\u4e00\u70b9\uff0c\u4f46\u5f53\u6709\u4eba\u7ed9\u6211\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u5b83\u6709\u4e00\u4e2aacustom\u57df\uff0c\u6211\u4e0b\u610f\u8bc6\u5730\u8ba4\u4e3a\u201c\u8fd9\u4e2a\u4eba\u53ef\u80fd\u5bf9\u8ba1\u7b97\u673a\u4e86\u89e3\u4e00\u4e24\u4ef6\u4e8b\u201d\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e9b\u5b9a\u5236\u7535\u5b50\u90ae\u4ef6\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u793e\u4ea4\u4ea4\u6d41\u3002\u5b83\u4eec\u7528\u4e8e\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u7684\u6240\u6709\u5404\u79cd\u5e10\u6237\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u7684\uff0c\u5176\u4e2d\u4e00\u4e2a\u5728\u7ebf\u5e10\u6237\u5f88\u53ef\u80fd\u662fnpm\u6ce8\u518c\u8868\u4e0a\u7684\u5f00\u53d1\u4eba\u5458\u5e10\u6237\u3002\n\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u6211\u4e0d\u8ba4\u4e3a\u5f88\u591a\u5f00\u53d1\u8005\u8ba4\u4e3a\u7684\u89c2\u70b9\u3002\u901a\u8fc7\u6ce8\u518c\u5e76\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u4f5c\u4e3a\u4ed6\u4eec\u7684\u4e3b\u8981\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u8ba9\u8be5\u57df\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u5927\u591a\u6570\u5728\u7ebf\u5e10\u6237\u7684\u5b8c\u5168\u63a7\u5236\u3002\u867d\u7136\u5e76\u975e\u666e\u904d\u5982\u6b64\uff0c\u4f46\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4f60\u63a7\u5236\u4e86\u67d0\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\u5e10\u6237\uff0c\u4f60\u53ea\u9700\u542f\u52a8\u5e76\u5b8c\u6210\u6bcf\u4e2a\u7f51\u7ad9\u7684\u5bc6\u7801\u91cd\u7f6e\u8fc7\u7a0b\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4ed6\u4eec\u7684\u5728\u7ebf\u5e10\u6237\u3002\u540c\u6837\uff0cnpmregistry\u4e5f\u4e0d\u4f8b\u5916\u3002\u5982\u679c\u4f60\u63a7\u5236\u4e86\u67d0\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4f60\u53ef\u4ee5\u91cd\u7f6enpm\u5e10\u6237\u7684\u5bc6\u7801\u5e76\u63a5\u7ba1\u8be5\u5e10\u6237\u3002\n\u57df\u540d\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u9700\u8981\u6301\u7eed\u4ed8\u8d39\u624d\u80fd\u8ba9\u5b83\u4eec\u5728\u4f60\u7684\u63a7\u5236\u4e4b\u4e0b\u3002\u5728\u8db3\u591f\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u57df\u540d\u901a\u5e38\u4f1a\u8fc7\u671f\uff0c\u5e76\u53ef\u4f9b\u5176\u4ed6\u4eba\u6ce8\u518c\u3002\u65e9\u57282015\u5e74\uff0c\u6211\u5c31\u5199\u8fc7\u5173\u4e8e\u8fd9\u4e00\u95ee\u9898\u9020\u6210\u7684\u6f0f\u6d1e\u7684\u6587\u7ae0\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u53ea\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u5229\u7528\u8fd9\u4e00\u95ee\u9898\u8fdb\u884c\u653b\u51fb\u7684\u53ef\u80fd\u6027\u3002\n\u6211\u5f88\u597d\u5947\uff0c\u6d41\u884c\u7684npm\u8f6f\u4ef6\u5305\u7684\u7ef4\u62a4\u8005\u4e2d\u662f\u5426\u6709\u4eba\u5728\u8fc7\u671f\u7684\u57df\u540d\u4e0a\u53d1\u8fc7\u7535\u5b50\u90ae\u4ef6\u3002\u6839\u636e\u8fc7\u53bb\u7684\u7ecf\u9a8c\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u5e76\u4e14\u4f60\u6295\u4e0b\u4e86\u4e00\u5f20\u8db3\u591f\u5927\u7684\u7f51\uff0c\u90a3\u4e48\u4f60\u5f88\u53ef\u80fd\u4f1a\u5f97\u5230\u7ed3\u679c\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u7f16\u5199\u4e86acustom\u811a\u672c\uff0c\u4ee5\u4fbf\u4e3a\u524d1000\u4e2anpm\u8f6f\u4ef6\u5305\u53ca\u5176\u4f9d\u8d56\u7684\u4f9d\u8d56\u9879\u5bfb\u627e\u7ef4\u62a4\u4eba\u5458\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5305\uff0c\u6211\u63d0\u53d6\u4e86\u5f00\u53d1\u4eba\u5458\u7535\u5b50\u90ae\u4ef6\u7684\u5b8c\u6574\u5217\u8868\uff0c\u63d0\u53d6\u4e86\u7535\u5b50\u90ae\u4ef6\u57fa\u672c\u57df\uff0c\u5e76\u68c0\u67e5\u8fd9\u4e9b\u57df\u662f\u5426\u8fd4\u56de\u4e86\u9664\u65e0\u9519\u8bef\u4e4b\u5916\u7684\u72b6\u6001\uff08RCODE\uff09\u3002\u5176\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u57df\u5728\u67e5\u8be2\u65f6\u8fd4\u56de\u975e\u6807\u51c6\u9519\u8bef\u4ee3\u7801\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u8fc7\u671f\u6216\u88ab\u5229\u7528\u800c\u914d\u7f6e\u9519\u8bef\u3002\n\u7ed3\u679c\u7b26\u5408\u9884\u671f\uff1a\u4ece\u7ef4\u62a4\u4eba\u5458\u7535\u5b50\u90ae\u4ef6\u4e2d\u63d0\u53d6\u7684\u57df\u4e2d\u5b58\u5728\u5927\u91cfNXDOMAIN\uff08\u672a\u627e\u5230\u57df\uff09\u548c\u5176\u4ed6DNS\u9519\u8bef\u3002\u8fd9\u4e9b\u57df\u540d\u4e2d\u6709\u8bb8\u591a\u662f\u9488\u5bf9\u8f83\u5c0f\u7684\u8f6f\u4ef6\u5305\u7684\uff0c\u6ca1\u6709\u5f88\u591a\u6bcf\u5468\u7684\u5b89\u88c5\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u662f\u6765\u81ea\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8f6f\u4ef6\u5305\u3002\n\u4f8b\u5982\uff0cajv Formats\u5305\u662f\u4e00\u4e2a\u7ef4\u62a4\u4eba\u5458AdditiveMateur\uff0c\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e3acarlo[@]machina[dot]bio\u3002\u8be5\u8f6f\u4ef6\u5305\u76f8\u5f53\u53d7\u6b22\u8fce\uff0c\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0cnpm\u6bcf\u5468\u5b89\u88c5\u7ea6500\u4e07\u6b21\uff1a\n\u6b64\u57df\u540d\u8fd4\u56de\u4e86\u4e00\u4e2aNXDOMAIN\u9519\u8bef\uff0c\u53ef\u4ee5\u6ce8\u518c\u3002\u4e3a\u4e86\u786e\u8ba4\u5b9e\u9645\u4e0a\u6709\u53ef\u80fd\u7528\u8fd9\u4e2a\u8fc7\u671f\u7684\u57df\u540d\u63a5\u7ba1ajv formatspackage\uff0c\u6211\u5f00\u59cb\u6ce8\u518c\u5b83\uff1a\n\u6ce8\u518c\u57df\u540d\u540e\uff0c\u6211\u5c06\u57df\u540d\u7684DNS\u914d\u7f6e\u4e3a\u5c06\u90ae\u4ef6\u4ececarlo[@]machina[dot]bio\u8def\u7531\u5230\u6211\u7684\u4e2a\u4eba\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\u3002\u901a\u8fc7\u5bf9\u8be5\u5730\u5740\u7684\u7535\u5b50\u90ae\u4ef6\u8def\u7531\uff0c\u6211\u4e3aAdditiveeamateurnPM\u7528\u6237\u542f\u52a8\u4e86\u5bc6\u7801\u91cd\u7f6e\u8fc7\u7a0b\uff1a\n\u8fd9\u6b63\u662f\u4e3a\u4ec0\u4e48\u5bf9\u7406\u8bba\u6f0f\u6d1e\u8fdb\u884c\u7aef\u5230\u7aef\u786e\u8ba4\u5982\u6b64\u91cd\u8981\u7684\u539f\u56e0\u3002\u5f15\u7528\u672c\u6770\u660e\u00b7\u5e03\u9c81\u65af\u7279\uff08Benjamin Brewster\uff09\u7684\u8bdd\uff1a\u201c\u7406\u8bba\u4e0a\uff0c\u7406\u8bba\u548c\u5b9e\u8df5\u6ca1\u6709\u533a\u522b\u3002\u5b9e\u9645\u4e0a\uff0c\u7406\u8bba\u548c\u5b9e\u8df5\u662f\u6709\u533a\u522b\u7684\u3002\u201d\u3002\n\u662f\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u8be5\u5e10\u6237\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6807\u8bb0\uff1f\u662f\u5426\u521b\u5efa\u4e86\u4e00\u4e9bNPM\u5b89\u5168\u68c0\u67e5\u6765\u9501\u5b9a\u6240\u6709\u8fc7\u671f\u57df\u540d\u4e0a\u7684\u7535\u5b50\u90ae\u4ef6\u5e10\u6237\uff1f\u8fd9\u5c06\u662f\u4e00\u4e2a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u7eb5\u6df1\u9632\u5b88\u6c34\u5e73\uff0c\u4f46\u4e5f\u8bb8\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u89e3\u91ca\u3002\n\u6211\u60f3\u770b\u770b\u8054\u7cfb\u652f\u6301\u90e8\u95e8\u662f\u5426\u771f\u7684\u662f\u5f00\u53d1\u8fd9\u4e9b\u8d26\u6237\u7684\u771f\u6b63\u969c\u788d\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u63d0\u4ea4\u4e86\u4e00\u4efd\u652f\u6301\u7968\uff0c\u6709\u610f\u5199\u5f97\u5c3d\u53ef\u80fd\u57fa\u672c\uff1a\n\u6211\u4e0d\u60f3\u901a\u8fc7\u4f7f\u7528\u4efb\u4f55\u6709\u8bf4\u670d\u529b\u7684\u8bed\u8a00\u6216\u793e\u4f1a\u5de5\u7a0b\u6765\u5f71\u54cd\u8003\u8bd5\uff0c\u6240\u4ee5\u6211\u628a\u7f5a\u5355\u4e0a\u7684\u4fe1\u606f\u8bf4\u5f97\u5f88\u6e05\u695a\u3002\u6211\u53ea\u662f\u6ce8\u610f\u5230\uff0c\u6211\u5728\u91cd\u7f6e\u5e10\u6237\u5bc6\u7801\u65f6\u51fa\u9519\uff0c\u6211\u5e0c\u671b\u5b83\u88ab\u89e3\u9501\u3002\u5982\u679c\u652f\u6301\u9700\u8981\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6216\u8005\u5b58\u5728\u5176\u4ed6\u969c\u788d\uff0c\u90a3\u4e48\u8ba1\u5212\u5c31\u662f\u5728\u90a3\u91cc\u5b8c\u6210\u7814\u7a76\u3002\n\u652f\u6301\u4eba\u5458\u786e\u8ba4\uff0c\u4ed6\u4eec\u5df2\u91cd\u65b0\u542f\u7528\u91cd\u7f6e\u5e10\u6237\u5bc6\u7801\u7684\u529f\u80fd\u3002\u4ed6\u4eec\u7684\u56de\u590d\u4f3c\u4e4e\u8868\u660e\uff0c\u7531\u4e8e\u4e4b\u524d\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u95ee\u9898\uff0c\u8be5\u5e10\u6237\u88ab\u6807\u8bb0\uff0c\u8fd9\u5728\u57df\u540d\u5df2\u8fc7\u671f\u7684\u60c5\u51b5\u4e0b\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002\n\u5bf9\u4e8e\u8fd9\u4e00\u9650\u5236\uff0c\u53ef\u80fd\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u89e3\u91ca\uff0c\u90a3\u5c31\u662f\u4ed6\u4eec\u4e4b\u524d\u5728\u53d1\u9001\u5230\u6587\u4ef6\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65f6\u9047\u5230\u4e86\u95ee\u9898\uff0c\u56e0\u6b64\u8be5\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u529f\u80fd\u88ab\u7981\u7528\u3002\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u8df3\u8f6c\u7684\u7535\u5b50\u90ae\u4ef6\u53ef\u80fd\u4f1a\u4f24\u5bb3\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u53d1\u4ef6\u4eba\uff0c\u5e76\u5c06\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u6807\u8bb0\u4e3a\u5783\u573e\u90ae\u4ef6\u3002\n\u7136\u540e\uff0c\u6211\u518d\u6b21\u5c1d\u8bd5\u91cd\u7f6eAdditiveMateuraAccount\u7684\u5bc6\u7801\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u6536\u5230\u4e86\u4e00\u5c01\u786e\u8ba4\u4fe1\uff0c\u786e\u8ba4\u91cd\u7f6e\u6210\u529f\uff0c\u5e76\u5411\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u53d1\u9001\u4e86\u4e00\u4e2a\u91cd\u7f6e\u94fe\u63a5\uff1a\n\u679c\u7136\uff0c\u6211\u6536\u5230\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u94fe\u63a5\uff0c\u53ef\u4ee5\u5728\u6211\u7684\u6536\u4ef6\u7bb1\u4e2d\u91cd\u7f6e\u8be5\u5e10\u6237\u7684\u5e10\u6237\u5bc6\u7801\uff1a\n\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u4e0e\u60a8\u9884\u671f\u7684\u5dee\u4e0d\u591a\uff0c\u6211\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u65b0\u5bc6\u7801\uff0c\u7136\u540e\u80fd\u591f\u4ee5AdditiveMateur\u5e10\u6237\u7684\u8eab\u4efd\u6210\u529f\u767b\u5f55\uff1a\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u611f\u5230\u6ee1\u610f\u7684\u662f\uff0c\u5f71\u54cd\u5df2\u7ecf\u88ab\u8bc1\u660e\uff0c\u6211\u505c\u6b62\u4e86\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u6d4b\u8bd5\u3002\u6211\u6ca1\u6709\u5bf9\u8f6f\u4ef6\u5305\u8fdb\u884c\u4efb\u4f55\u66f4\u65b0\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5f71\u54cd\u5f00\u53d1\u8005\u7684\u98ce\u9669\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u63d0\u4f9b\u6574\u4e2a\u653b\u51fb\u94fe\u7684\u597d\u5904\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u6211\u76f8\u4fe1\u91c7\u53d6\u8fd9\u989d\u5916\u7684\u6b65\u9aa4\u662f\u4e0d\u5fc5\u8981\u7684\uff08\u800c\u4e14\u53ef\u80fd\u662f\u9c81\u83bd\u7684\uff09\u3002\n\u7136\u800c\uff0c\u6709\u4e00\u4ef6\u4e8b\u4ecd\u7136\u56f0\u6270\u7740\u6211\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u5b89\u88c5\u5f97\u5982\u6b64\u9891\u7e41\uff1f\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u770b\u8d77\u6765\u5f53\u7136\u6709\u7528\uff0c\u4f46\u6bcf\u5468\u5b89\u88c5\u7ea6500\u4e07\u6b21\uff08\u800c\u4e14\u8fd8\u5728\u589e\u52a0\uff09\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\u3002\u8fd9\u4e0d\u7b26\u5408\u903b\u8f91\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u66f4\u591a\u7684\u6316\u6398\u3002\u6211\u8d1f\u8d23\u5730\u5411\u4f9b\u5e94\u5546\u62a5\u544a\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5b83\u88ab\u6807\u8bb0\u4e3a\u4fe1\u606f\u6027\u7684\uff0c\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u89c1\u62ab\u9732\u65f6\u95f4\u8868\u3002\nnpm\u6ce8\u518c\u7f51\u7ad9\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u529f\u80fd\uff0c\u5141\u8bb8\u60a8\u67e5\u770b\u4f9d\u8d56\u4e8e\u7ed9\u5b9anpm\u5305\u7684\u5305\u3002\u4f7f\u7528\u8fd9\u4e2a\uff0c\u6211\u67e5\u770b\u4e86\u5b89\u88c5ajv\u683c\u5f0f\u65f6\u4f5c\u4e3a\u4f9d\u8d56\u9879\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff1a\n\u8be5\u5305\u662f@angular devkit/core\u548cschema utils\u7684\u4f9d\u8d56\u9879\u3002\u5f53\u6211\u4eec\u6df1\u5165\u4e00\u4e2a\u5c42\u6b21\u5e76\u627e\u5230\u8fd9\u4e9b\u5305\u7684\u4f9d\u8d56\u5173\u7cfb\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0cajv formatspackage\u5bf9Angular CLI\u548cwebpack\u90fd\u662f\u4e00\u4e2a\u53ef\u4f20\u9012\u7684\u4f9d\u8d56\u9879\uff01\u5feb\u901f\u68c0\u67e5\u786e\u8ba4\uff0c\u5f53\u6211\u5b89\u88c5Angular CLI\u65f6\uff0c\u6211\u4e5f\u5728\u5b89\u88c5ajv formatspackage\uff1a\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u592a\u719f\u6089Angular\u7684\u7528\u6237\uff0cAngular CLI\u57fa\u672c\u4e0a\u662f\u6784\u5efa\u548c\u90e8\u7f72AngularApp\u6240\u5fc5\u9700\u7684\uff08\u9664\u975e\u60a8\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u65b9\u6784\u5efa\u5668\uff09\u3002\n\u8fd9\u4e00\u7ed3\u679c\u4f3c\u4e4e\u6e05\u695a\u5730\u8bc1\u5b9e\u4e86\u8be5\u6f0f\u6d1e\u7684\u73b0\u5b9e\u5f71\u54cd\uff0c\u524d\u63d0\u662f\u5b83\u88ab\u771f\u6b63\u7684\u6076\u610f\u653b\u51fb\u8005\u5229\u7528\u4e86\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6d41\u884c\u7684\u8f6f\u4ef6\u5305\u4e5f\u662f\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u88ab\u5229\u7528\u7684\uff08\u6ce8\u518c\u5f00\u53d1\u8005\u7535\u5b50\u90ae\u4ef6\u57df\uff09\uff0c\u4f46\u4e3a\u4e86\u4fdd\u6301\u672c\u6587\u7684\u7b80\u6d01\uff0c\u6211\u51b3\u5b9a\u4e0d\u5728\u672c\u6587\u4e2d\u5305\u542b\u5b83\u4eec\u3002\n\u6ce8\u610f\uff1a\u622a\u81f3\u672c\u6587\u64b0\u5199\u4e4b\u65f6\uff0cwebpackpackage\u88ab\u56fa\u5b9a\u5230schema utilsversion 3.1.1\uff0c\u8be5\u7248\u672c\u4e0d\u5305\u62ecajv\u683c\u5f0f\u3002\u56e0\u6b64\uff0c\u5728Webpack\u66f4\u65b0\u5176\u6240\u4f9d\u8d56\u7684schema UTILST\u7248\u672c\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u4ee5\u8fc7\u6e21\u65b9\u5f0f\u5b89\u88c5\u3002\u5728\u6240\u6709\u540e\u95e8npm\u5305\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u90fd\u662f\u4e00\u4e2a\u81ea\u7136\u7684\u8981\u6c42\uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u66f4\u5fae\u5999\u7684\u89c6\u89d2\u3002\n\u8fd9\u9879\u7814\u7a76\u56f4\u7ed5npmdependencies\u63d0\u51fa\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u654f\u611f\u4f9d\u8d56\u7684\u59a5\u534f\u4f1a\u4ea7\u751f\u591a\u5927\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u5305\u7684\u5305\uff0c\u5e76\u4e14\u8be5\u5b50\u5305\u88ab\u6cc4\u9732\uff0c\u90a3\u4e48\u4e3b\u5305\u4e5f\u88ab\u6cc4\u9732\u4e86\u5417\uff1f\n\u4e3a\u4e86\u4ecb\u7ecd\u66f4\u6709\u8da3\u7684\u4f9d\u8d56\u5b89\u5168\u6027\uff0c\u9700\u8981\u63d0\u5230\u51e0\u4e2a\u5173\u4e8e\u5305\u5728npm\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u8981\u70b9\u3002\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\n\u4e0d\u80fd\u201c\u8986\u76d6\u201d\u5df2\u53d1\u5e03\u7684\u8f6f\u4ef6\u5305\u7248\u672c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u53d1\u5e03\u4e86\u4e00\u4e2a[\u53d7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4\u7684]\u7248\u672c\uff0c\u4f60\u5c31\u4e0d\u80fd\u7a81\u7136\u5c06\u4e00\u4e2a\u540e\u95e8\u8f6f\u4ef6\u5305\u63a8\u5230\u540c\u4e00\u4e2a\u7248\u672c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u60c5\u51b5\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\n\u53ea\u6709\u5f53\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\u65f6\u95f4\u5c0f\u4e8e72\u5c0f\u65f6\u4e14\u6ca1\u6709\u5176\u4ed6\u8f6f\u4ef6\u5305\u4f9d\u8d56\u5b83\u65f6\uff0c\u624d\u80fd\u53d6\u6d88\u53d1\u5e03\u8be5\u8f6f\u4ef6\u5305\u7248\u672c\u3002\uff08\u6240\u4ee5\uff0c\u4e0d\uff0c\u4f60\u4e0d\u80fd\u806a\u660e\u5730\u5220\u9664\u4e00\u4e2a\u7248\u672c\uff0c\u53ea\u4e3a\u4e86\u91cd\u65b0\u53d1\u5e03\u4e00\u4e2a\u540e\u95e8\u7248\u672c\u3002\uff09\n\u8fd9\u5c31\u6d88\u9664\u4e86\u6700\u76f4\u63a5\u7684\u9014\u5f84\uff0c\u8ba9\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u9009\u62e9\uff0c\u90a3\u5c31\u662f\u63a8\u51fa\u4e00\u4e2a\u65b0\u7684\u540e\u95e8\u7248\u672c\u3002\u6bd5\u7adf\uff0c\u66f4\u65b0\u5305\u4f9d\u8d56\u5173\u7cfb\u662f\u5305\u7ef4\u62a4\u7684\u4e00\u4e2a\u5e38\u89c4\u90e8\u5206\uff0c\u5b83\u5728npm\u751f\u6001\u7cfb\u7edf\u4e2d\u5b9a\u671f\u53d1\u751f\u3002\n\u719f\u6089\u4f9d\u8d56\u5173\u7cfb\u5b89\u5168\u7684\u4eba\u4e5f\u4f1a\u719f\u6089\u201c\u9501\u5b9a\u4f9d\u8d56\u5173\u7cfb\u201d\u7684\u7b2c22\u6761\u519b\u89c4\u3002\u5728npm\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u6709\u4e00\u4e2a\u5305\u9501\u3002jsonfile\uff0c\u6307\u5b9a\u9879\u76ee\u7684\u6574\u4e2a\u4f9d\u8d56\u5173\u7cfb\u6811\u3002\u7531\u4e8e\u8be5\u6587\u4ef6\u4f4d\u4e8e\u6839\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\uff0cnpm\u5b89\u88c5\u547d\u4ee4\u5c06\u59cb\u7ec8\u6309\u7167\u8fd0\u884cnpm\u5b89\u88c5\u751f\u6210\u8be5\u6587\u4ef6\u65f6\u7684\u72b6\u6001\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\u9879\u7248\u672c\u3002\u6d41\u6c13\u8f6f\u4ef6\u5305\u66f4\u65b0\u4e0d\u518d\u662f\u4f60\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u66f4\u65b0\uff01\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u5bf9\u5417\uff1f\n\u7136\u800c\uff0c\u8fd9\u7559\u4e0b\u4e86\u53e6\u4e00\u4e2a\u53ef\u80fd\u66f4\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u6613\u53d7\u653b\u51fb\u7684\u5e93\u4e0d\u518d\u88ab\u66f4\u65b0\u3002\u5982\u679c\u4f60\u9501\u5b9a\u4e86\u6240\u6709\u7684\u4f9d\u8d56\u9879\uff08\u4ee5\u53ca\u5b83\u4eec\u7684\u4f9d\u8d56\u9879\uff09\uff0c\u90a3\u4e48\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u6536\u5230bug\u4fee\u590d\u548c\u5173\u952e\u8865\u4e01\u3002\u5728log4jvulnerability\u4e4b\u540e\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u4e00\u6761\u7406\u60f3\u7684\u8def\u7ebf\u3002\u5c31\u50cf\u5927\u591a\u6570\u4e8b\u60c5\u4e00\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u98ce\u9669\u6743\u8861\u7684\u51b3\u5b9a\u3002\u4f60\u6743\u8861\u6bcf\u79cd\u65b9\u6cd5\u7684\u5229\u5f0a\uff0c\u5e76\u636e\u6b64\u8fdb\u884c\u3002\n\u5982\u679c\u653b\u51fb\u8005\u6545\u610f\u5c06\u5176\u53d7\u635f\u8f6f\u4ef6\u5305\u6807\u8bb0\u4e3a\u201c\u6613\u53d7\u653b\u51fb\u201d\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u4f1a\u628a\u4f9d\u8d56\u7684\u5305\u7559\u5728\u54ea\u91cc\uff1f\u4f9d\u8d56\u653b\u51fb\u8005\u8f6f\u4ef6\u5305\u7684\u8f6f\u4ef6\u5305\u7684\u4f5c\u8005\u73b0\u5728\u5fc5\u987b\u5bf9\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u7b2c22\u6761\u519b\u89c4\u505a\u51fa\u51b3\u5b9a\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u66f4\u65b0\u4ed6\u4eec\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ed6\u4eec\u5c31\u6709\u53ef\u80fd\u8ba9\u6240\u6709\u4f7f\u7528\u4ed6\u4eec\u8f6f\u4ef6\u5305\u7684\u4eba\u5904\u4e8e\u201c\u6613\u53d7\u653b\u51fb\u201d\u7684\u98ce\u9669\u3002\u7136\u800c\uff0c\u5982\u679c\u4ed6\u4eec\u66f4\u65b0\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ed6\u4eec\u5c31\u6709\u53ef\u80fd\u4f1a\u6709\u5927\u91cf\u65b0\u4ee3\u7801\u88ab\u5408\u5e76\u5230\u4ed6\u4eec\u7684\u5305\u4e2d\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u96be\u9053\u7ef4\u62a4\u4eba\u5458\u548c\u5f00\u53d1\u4eba\u5458\u4e0d\u80fd\u5728\u5305\u542b\u66f4\u65b0\u7684\u7248\u672c\u4e4b\u524d\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f9d\u8d56\u9879\u4e2d\u7684\u6240\u6709\u65b0\u4ee3\u7801\u5417\uff1f\n\u5bf9\u8fd9\u4e00\u89c2\u70b9\u6700\u660e\u663e\u7684\u53cd\u9a73\u53ef\u80fd\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff1a\u8fd9\u662f\u4e00\u79cd\u5de5\u4f5c\u3002\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u5173\u4e8e\u4f9d\u8d56\u8005\u81ea\u8eab\u7684\u5dee\u5f02\uff0c\u4ed6\u4eec\u7684\u4f9d\u8d56\u6027\uff0c\u7b49\u7b49\u3002\u65e0\u8bba\u4e25\u683c\u7a0b\u5ea6\u5982\u4f55\uff0c\u8fd9\u6837\u505a\u90fd\u662f\u4e00\u9879\u8017\u8d39\u5927\u91cf\u65f6\u95f4\u7684\u5de5\u4f5c\u3002\u7edd\u5927\u591a\u6570\u5168\u804c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5e76\u6ca1\u6709\u5ba1\u67e5\u4ed6\u4eec\u9700\u6c42\u7684\u6bcf\u4e00\u4e2a\u53d8\u5316\uff0c\u66f4\u4e0d\u7528\u8bf4\u5728\u81ea\u5df1\u7684\u79c1\u4eba\u65f6\u95f4\u7ef4\u62a4\u8f6f\u4ef6\u5305\u7684\u5fd7\u613f\u8005\u4e86\u3002\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c\u8981\u6c42\u8fd9\u4e9b\u5fd7\u613f\u8005\u5b8c\u6210\u8fd9\u9879\u8270\u5de8\u7684\u4efb\u52a1\u4f3c\u4e4e\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\n\u5f53\u60a8\u8003\u8651\u5230\u5728\u5305\u4e2d\u6307\u5b9a\u7248\u672c\u8303\u56f4\u7684\u80fd\u529b\u65f6\uff0c\u95ee\u9898\u53ea\u4f1a\u53d8\u5f97\u66f4\u52a0\u6a21\u7cca\u3002json\u3002\u5982\u679c\u60a8\u7684\u4f9d\u8d56\u9879\u5141\u8bb8\u5176\u4f9d\u8d56\u9879\u5177\u6709\u7075\u6d3b\u6027\uff08\u4f8b\u5982\uff1a&gt\uff1b=package_name\uff09\uff0c\u90a3\u4e48\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7a0d\u540e\u5c06\u66f4\u65b0\u53d1\u5e03\u5230\u65b0\u7248\u672c\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728\u65b0\u5b89\u88c5\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u53d1\u73b0\u4efb\u4f55\u6076\u610f\u5185\u5bb9\uff0c\u7136\u540e\u5728\u4ee5\u540e\u88ab\u65e0\u7f1d\u5730\u540e\u95e8\u653b\u51fb\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u5bf9\u81ea\u5df1\u505a\u4e00\u4e9b\u5b66\u4e60\u548c\u7814\u7a76\u611f\u5174\u8da3\u7684\u4eba\u6765\u8bf4\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e00\u4e0b\u66f4\u65b0\u89c4\u5219\u4e2d\u4f9d\u8d56\u9879\u7684\u8fc7\u7a0b\u3002\u5728\u6211\u770b\u6765\uff0c\u8c37\u6b4c\u5b9e\u9645\u4e0a\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u76f8\u5f53\u597d\uff08\u4ece\u5404\u65b9\u9762\u8003\u8651\uff09\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u62c9\u52a8\u8bf7\u6c42\uff0c\u8ba9\u60a8\u5f00\u59cb\uff1ahttps://github.com/angular/angular/pull/45013\n\u5982\u679c\u4e0d\u662fAngular\uff0c\u8bf7\u9009\u62e9\u5728JavaScriptdevelopment\u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u6d41\u884c\u5305\u3002\u5f53\u4f60\u7814\u7a76\u8fd9\u4e2a\u8fc7\u7a0b\u65f6\uff0c\u95ee\u95ee\u81ea\u5df1\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\n\u201c\u5b83\u662f\u5426\u963b\u6b62\u6307\u5b9a\u7248\u672c\u8303\u56f4\u800c\u4e0d\u662f\u7279\u5b9a\u5355\u4e00\u7248\u672c\u7684\u4f9d\u8d56\u5173\u7cfb\uff1f\u201d\n\u8fd9\u4e0d\u662f\u6d4b\u9a8c\uff0c\u4e5f\u6ca1\u6709\u7b54\u6848\u6216\u7b80\u5355\u7684\u7b54\u6848\uff0c\u8fd9\u610f\u5473\u7740\u8ba9\u4f60\u8ba4\u771f\u601d\u8003\u72ec\u7acb\u5b89\u5168\u9762\u4e34\u7684\u95ee\u9898\u3002\u73b0\u5b9e\u4e16\u754c\u5145\u6ee1\u4e86\u7ec6\u5fae\u5dee\u522b\u548c\u96be\u9898\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4e5f\u4e0d\u4f8b\u5916\uff01\n\u663e\u7136\uff0c\u4f9d\u8d56\u5173\u7cfb\u5b89\u5168\u662f\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5173\u6ce8\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff1a\u5e10\u6237\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u8fc7\u671f\u57df\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\u81ea\u5b9a\u4e49\u57df\u662f\u5f00\u53d1\u4eba\u5458\u6587\u5316\u4e2d\u5e38\u89c1\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u4e0d\u592a\u53ef\u80fd\u6d88\u5931\u3002\u5f53\u8fd9\u4e9b\u57df\u8fc7\u671f\u65f6\uff0c\u5b83\u4eec\u786e\u5b9e\u5b58\u5728\u88ab\u5229\u7528\u7684\u98ce\u9669\uff0c\u5f00\u53d1\u4eba\u5458\u5728\u5c06\u5b83\u4eec\u7528\u4e8e\u91cd\u8981\u5e10\u6237\u65f6\u5e94\u8be5\u8ba4\u771f\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0cnpm\u8d26\u6237\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u5728\u6ce8\u518c\u8fc7\u671f\u57df\u540d\u65f6\u7a81\u7136\u88ab\u52ab\u6301\u7684\u8d26\u6237\u3002Github\u3001Slack\u7b49\u5404\u79cd\u91cd\u8981\u7f51\u7ad9\u4e0a\u7684\u8d26\u6237\u4e5f\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u4efb\u4f55\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u5bc6\u7801\u91cd\u7f6e\u4f5c\u4e3a\u5e10\u6237\u8bbf\u95ee\u5355\u4e00\u56e0\u7d20\u7684\u7f51\u7ad9\u90fd\u5b58\u5728\u6b64\u95ee\u9898\u3002\n\u7f51\u7ad9\u53ef\u80fd\u5e0c\u671b\u5728\u5176\u7535\u5b50\u90ae\u4ef6\u57df\u8fc7\u671f\u6216\u65e0\u6cd5\u8def\u7531\u65f6\u4e3b\u52a8\u7981\u7528\u5e10\u6237\u3002\u4ed6\u4eec\u8fd8\u53ef\u80fd\u9700\u8981\u6709\u4e00\u4e2a\u66ff\u4ee3\u8def\u5f84\u6765\u91cd\u7f6e\u5e10\u6237\u7684\u5bc6\u7801\uff0c\u4ee5\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u5f3a\u70c8\u9a8c\u8bc1\u6b64\u4eba\u662f\u5e10\u6237\u6240\u6709\u8005\uff0c\u5e76\u4e14\u539f\u59cb\u5e10\u6237\u6240\u6709\u8005\u9700\u8981\u518d\u6b21\u8bbf\u95ee\u4ed6\u4eec\u7684\u5e10\u6237\u3002\n\u5728npm\u7684\u6848\u4f8b\u4e2d\uff0c\u6211\u901a\u8fc7HackerOne\u5411\u4ed6\u4eec\uff08Github\u5b89\u5168\u56e2\u961f\uff09\u62a5\u544a\u4e86\u95ee\u9898\uff0c\u4ed6\u4eec\u9700\u8981\u8fd9\u4e9b\u6f0f\u6d1e\u62a5\u544a\u3002\u4ed6\u4eec\u5c06\u8be5\u62a5\u544a\u79f0\u4e3a\u201c\u4fe1\u606f\u6027\u201d\u62a5\u544a\uff0c\u5e76\u6307\u51fa\u201c\u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u5185\u90e8\u8ddf\u8e2a\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5df2\u7ecf\u91c7\u53d6\u4e86\u76f8\u5e94\u7684\u7f13\u89e3\u63aa\u65bd\u201d\u3002\u4ed6\u4eec\u662f\u5426\u5b9e\u65bd\u4e86\u4efb\u4f55\u65b0\u7684\u6539\u53d8\u5c1a\u4e0d\u6e05\u695a\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u62ab\u9732\u65f6\u95f4\u8868\uff0c\u6216\u672c\u54c8\u514b\u9f99\u62a5\u544a\u6863\u6848\u3002\u6211\u53ef\u80fd\u4f1a\u5efa\u8baenpm\u7528\u6237\u7ee7\u7eed\u5047\u8bbe\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u53ef\u4ee5\u5229\u7528\u7684\u95ee\u9898\u3002\n\u9ad8\u5ea6\u5b89\u88c5\u7684npm\u8f6f\u4ef6\u5305\u7684\u5f00\u53d1\u4eba\u5458\u5c06\u5176npm\u5e10\u6237\u6ce8\u518c\u5230\u8fc7\u671f\u57df\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\n\u6ce8\u518c\u8fd9\u4e9b\u8fc7\u671f\u7684\u57df\u540d\u53ef\u4ee5\u63a5\u7ba1\u91cd\u8981\u7684npm\u8f6f\u4ef6\u5305\uff0c\u6bd4\u5982ajv\u683c\u5f0f\uff0c\u76ee\u524d\u6bcf\u5468\u7ea6\u6709500\u4e07\u6b21\u5b89\u88c5\u3002\najv\u683c\u5f0f\u5305\u4f9d\u8d56\u4e8eangular\u7684\u6838\u5fc3\u5b9e\u7528\u7a0b\u5e8f\u5e93@angular devkit/core@angular devkit/core\u662f@angular/cli\u7684\u4f9d\u8d56\u9879\uff0c\u540e\u8005\u662f\u7528\u4e8e\u7f16\u8bd1angular\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\u3002\n\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u5f00\u53d1\u8005\u5e94\u8be5\u8ba4\u771f\u8003\u8651\u4ed6\u4eec\u4f7f\u7528\u5728\u7ebf\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u6240\u627f\u62c5\u7684\u98ce\u9669\u3002\u5982\u679c\u8fd9\u4e2a\u57df\u540d\u8fc7\u671f\u6216\u88ab\u52ab\u6301\uff0c\u4ed6\u4eec\u4f1a\u53bb\u54ea\u91cc\uff1f\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695anpm\u662f\u5426\u56e0\u6211\u5411\u4ed6\u4eec\u63d0\u4ea4\u7684\u62a5\u544a\u800c\u6709\u6240\u6539\u53d8\uff0cnpm\u7528\u6237\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u5728\u672a\u6765\u4ecd\u6709\u53ef\u80fd\u88ab\u5229\u7528\u3002\n2022\u5e741\u670810\u65e5\uff1a\u8054\u7cfbmachina\u7684\u6240\u6709\u8005\u3002bio domain\u901a\u8fc7LinkedIn\u62ab\u9732\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\n2022\u5e741\u670815\u65e5\uff1a\u610f\u8bc6\u5230\u6211\u9519\u8fc7\u4e86LinkedIn\u56de\u590d\u5f00\u53d1\u8005\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5df2\u5c06\u62ab\u9732\u7684\u8be6\u7ec6\u4fe1\u606f\u53d1\u9001\u5230\u63d0\u4f9b\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\n2022\u5e741\u670822\u65e5\uff1a\u8ddf\u8fdbnpm\u8d26\u6237\u548cmachina\u7684\u51ed\u8bc1\u3002\u5b8c\u6210\u79fb\u4ea4\u7684\u751f\u7269\u57df\u8f6c\u79fb\u4ee3\u7801\u3002\n2022\u5e741\u670817\u65e5\uff1a\u7531\u4e8enpm\u7684\u7f51\u7ad9\u8981\u6c42\u901a\u8fc7\u6b64\u9014\u5f84\u63d0\u4ea4\u6f0f\u6d1e\uff0c\u56e0\u6b64\u5411Github\u7684\u6f0f\u6d1e\u5956\u52b1\u8ba1\u5212\u63d0\u4ea4\u4e86HackerOne\u6f0f\u6d1e\u3002\u62a5\u544a\u7f16\u53f7#1452186\u3002\n2022\u5e741\u670825\u65e5\uff1aGITHUB\u5b89\u5168\u56e2\u961f\u5173\u95edbug\u4f5c\u4e3a\u65e0\u6548\u7684\u201c\u56e0\u4e3a\u653b\u51fb\u5411\u91cf\u5305\u62ec\u63d0\u4ea4\u4e00\u4e2a\u652f\u6301\u8bf7\u6c42\u6765\u91cd\u65b0\u542f\u7528\u7981\u7528\u5e10\u6237\u7684\u5bc6\u7801\u91cd\u7f6e\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u793e\u4f1a\u5de5\u7a0b\uff0c\u56e0\u6b64\u4e0d\u7b26\u5408B\u8d4f\u91d1\u8ba1\u5212\u4e0b\u7684\u5956\u52b1\u3002\u201d\u4ed6\u4eec\u8fd8\u8ba4\u4e3a\u8fd9\u4e00\u95ee\u9898\u6709\u6240\u7f13\u89e3\u3002\u201d\u200b\u200b\u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u5185\u90e8\u8ddf\u8e2a\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5df2\u7ecf\u91c7\u53d6\u4e86\u76f8\u5e94\u7684\u7f13\u89e3\u63aa\u65bd\u3002\"\n2022\u5e741\u670825\u65e5\uff1a\u8bf7\u6c42\u516c\u5f00\u62ab\u9732\uff0c\u56e0\u4e3a\u8be5\u6f0f\u6d1e\u660e\u663e\u5f97\u5230\u4e86\u7f13\u89e3\uff0c\u800c\u4e14\u8be5\u62a5\u544a\u56e0\u4fe1\u606f\u4e30\u5bcc\u800c\u5173\u95ed\u3002\n2022\u5e742\u67082\u65e5\uff1aGithub\u62d2\u7edd\u62ab\u9732\u8bf7\u6c42\uff0c\u56e0\u4e3abug\u88ab\u5173\u95ed\u4e3a\u4fe1\u606f\u6027\u7684\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u8868\u793a\uff0c\u53d1\u8868\u4e00\u7bc7\u8bc4\u8bba\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u5b8c\u6574\u7684HackerOne\u62a5\u544a\uff1ahttps://imgur.com/a/7TQs3vx\n\u7279\u522b\u611f\u8c22Michael Xu\uff08@michaelxproxy\uff09\u5c31\u8fd9\u4e2a\u8bdd\u9898\u5411\u6211\u63d0\u4f9b\u54a8\u8be2\u3002\u4ed6\u7684\u53cd\u9988\u5bf9\u4e8e\u8fd9\u4e9b\u5173\u4e8e\u5305\u88f9\u56fa\u5b9a\u7684\u7ec6\u5fae\u5dee\u522b\u7684\u8ba8\u8bba\u81f3\u5173\u91cd\u8981\u3002", "note_en": "NOTE:  If you\u2019re just looking for the high level points, see the\u201c The TL;DR Summary &amp; High-LevelPoints\u201d section of thispost.\n Recently I took an interest in the  npmregistry due to it\u2019s critical role inthe security of managing packages for all of JavaScript and Node. Afterregistering an account and creating an example package, I began lookingthrough various web endpoints to understand what sort of system I wasdealing with.\n While browsing various popular packages, I noticed one fairly uniquething to the registry: email addresses for all users are public. Forexample, requesting my own  profilepage returned my emailaddress:\n   Spam concerns aside, this is an interesting choice for a registry as itpublicly discloses the email addresses for maintainers of all npmpackages. An attacker could use this to enumerate the emails of allmaintainers for an npm package and utilize them in a targeted spearphishing campaign, for example. In any case, these sorts of phishingattacks are well-known and not of particular interest for research.However, there may be more novel ideas to consider\u2026\n  Upon viewing more packages and maintainers, another pattern began toemerge: emails at developer-owned domains. As many developers will tellyou, having an email at your own domain is peak nerd street cred. I hateto admit it, but when someone gives me their email and I notice it has acustom domain, I subconsciously think \u201cthis person may know a thing ortwo about computers\u201d.\n   Of course, these custom emails are not just used for socialcommunication. They are used for all of the various accounts thatdevelopers utilize. As you may have guessed, one of those onlineaccounts could very well be a developer\u2019s account on the npm registry.\n This raises a point that I don\u2019t think many developers consider. Byregistering and using a custom domain as their main email address, theyimplicitly give that domain  and theirTLDcomplete control over most of their online accounts. While notuniversally true, often if you have control of someone\u2019s email accountyou can get access to their online accounts by simply initiating andcompleting the password reset process for each site. Again, the npmregistry is no exception to this. If you have control of someone\u2019s emailyou can reset the npm account\u2019s password and take over the account.\n  Domains for the most part are not free, and require continually paying afee to keep them under your control. Over a long enough time period thiscan prove problematic, because often these domains can end up expiringand becoming available for registration by other people. I\u2019ve writtenabout vulnerabilities caused by this  as farback as2015, andovertime I\u2019ve only seen more and more potential for attacks utilizingthis issue.\n I was curious if any of the maintainers of popular npm packages hademails which were hosted on expired domain names. From past experience,if you have a somewhat probable event and you cast a wide-enough net, itreasons that you\u2019re likely to get results. With this in mind, I wrote acustom script to scrape the maintainers for the top 1,000 npm packagesand the dependencies they depend upon. For each package I pulled thefull list of developer emails, extracted the email base domains, andchecked if these domains returned a  status( RCODE)other than   NOERROR.The idea being that if the domains returned a non-standard error codewhen queried, they might be expired or exploitably-misconfigured.\n  The results met expectations: lots of   NXDOMAIN(domain not found) and other DNS errors in the domains extracted frommaintainer emails. Many of these domains were for smaller packageswithout many weekly installs, but a few were from packages that werequite popular.\n For example, the package   ajv-formatshas a maintainer   additiveamateurwith an email address of  carlo[@]machina[dot]bio. The package isquite popular, with ~5 million installs a week on npm at the time ofthis writing:\n   This domain name returned an  NXDOMAIN error and was available forregistration. In order to confirm that it was actually possible to takeover the   ajv-formatspackage with this expired domain, I proceeded to register it:\n   Once the domain was registered, I configured the domain\u2019s DNS to routeemail from  carlo[@]machina[dot]bio to my personal email inbox.With emails routing for this address, I then initiated thepassword-reset process for the   additiveamateurnpm user:\n         This type of thing is exactly why doing end-to-end confirmation fortheoretical vulnerabilities is so important. To quote Benjamin Brewster:  \u201cIn theory there is no difference betweentheory and practice. In practice thereis.\u201d.\n What caused this account to be flagged in this way? Was there some npmsecurity check created to lock all accounts with emails at expireddomains? That would be an impressive level of defense-in-depth, butperhaps there is a more simple explanation at play.\n  I wanted to see if contacting support was actually a real barrier toexploitation of these accounts. In order to do this, I submitted asupport ticket intentionally written to be as basic as possible:\n   I didn\u2019t want to bias the test by using any persuasive language orsocial engineering, so I kept the ticket message plain. I simply notedthat I\u2019m getting an error when resetting the password for the accountand I\u2019d like it to be unblocked. If support required furtherverification to do this, or if there was some other hurdle, then theplan was to conclude the research there.\n    Support confirmed that they had re-enabled the ability to resetpasswords for the account. Their response seemed to indicate that theaccount was flagged due to previous issues sending emails, which wouldbe expected with the domain having expired.\n Perhaps a much more simple explanation for the restriction was that theyhad issues delivering to the email address on file previously, and as aresult email-sending features were disable for the account. This wouldmake sense, as  bouncing emails can hurt youremail senderreputationand get your emails marked as spam.\n   I then again attempted to reset the password for the  additiveamateuraccount. This time I was greeted with a confirmation that the reset hadsucceeded and that a reset link was sent to the email address for theaccount:\n   Sure enough, I received an email with a link to reset the accountpassword for the account in my inbox:\n   The next steps were about what you\u2019d expect, I set a new password andwas then able to successfully log in as the  additiveamateur account:\n      At this point, I was satisfied that the impact was proven and I ceasedtesting on the issue. I didn\u2019t push any updates to the package because Ibelieved the risk of affecting developers far out-weighed the benefit ofproving the entire attack chain. Clearly this was possible, so Ibelieved that taking this extra step would be unnecessary (andpotentially reckless).\n However, there was something that was still bothering me:  why was thispackage being installed so frequently? The package seemed useful ofcourse, but ~5 million installs a week (and rising) is a huge amount.This was not adding up, so I did a bit more digging. I reported theissue responsibly to the vendor but it was marked as Informative, seethe disclosure timeline for more details.\n  The npm registry website has a nice feature which allows you to see thepackages that depend on a given npm package. Using this, I took a lookat  the packages which would install ajv-formats as a dependency when theywereinstalled:\n   The package was a dependency of both   @angular-devkit/coreand   schema-utils.What happens when we go one level deeper and find the dependencies ofthese packages?\n     Shockingly, the   ajv-formatspackage was a transitive dependency for both the Angular CLI and for webpack! A quick sanity check confirmed that when I installed theAngular CLI, I was also installing the   ajv-formatspackage:\n   For those not as familiar with Angular,  theAngular CLI is essentially required for building and deploying Angularapps (unless you\u2019re using athird-party builder).\n This result seemed to clearly confirm the real-world impact of thisvulnerability, had it been exploited by an actual malicious attacker.Notably there were a few other popular packages which were exploitablein this same fashion (registration of developer email domains), but inthe spirit of keeping this writeup succinct I\u2019ve decided not to includethem in this post.\n NOTE: As of the time of this writing, the   webpackpackage is pinned to   schema-utilsversion  3.1.1which does  not include   ajv-formats.As such, it would not be transitively installed until   webpackupdated the version of   schema-utilsthat it depends upon. This would be a natural requirement in all casesof backdoored npm packages, and a more nuanced perspective is includedbelow.\n  This research raises a number of interesting questions around npmdependencies, and just how serious the impact the compromise of atransitive dependency is. For example, if you have a package which has adependency on another package and that sub-package is compromised, isthe main package compromised as well?\n   To introduce the more interesting pieces of dependency security, a fewkey points need to be mentioned about how packages work in npm.Specifically it\u2019s important to note that:\n You cannot \u201coverwrite\u201d an already-published version of a package. If you\u2019ve published a   [email\u00a0protected] version, for example, you can\u2019t suddenly push a backdoored package to that same exact version. Notably  this was not always the case.\n You can only unpublish a package version if it\u2019s less than 72 hours old and no other packages depend on it. (So no, you can\u2019t get clever and delete a version only to republish a backdoored version.)\n This removes the most immediate path for compromising downstreampackages, leaving us with the obvious alternative of pushing a new andbackdoored version instead. Updating package dependencies is a regularpart of package maintenance after all, and it happens regularly acrossthe npm ecosystem.\n  Those familiar with the world of dependency security will also befamiliar with the catch-22 of \u201cpinning your dependencies\u201d. In the caseof npm, this usually means to have a   package-lock.jsonfile which specifies the entire dependency tree for your project. Withthis file sitting in your root project folder,  npm install commandswill now always install all of your dependency versions as they werewhen you ran  npm install to generate the file. Rogue packagesupdates are no longer your concern since you\u2019re not updating! Problemsolved,  right?\n However, this leaves another potentially more serious problem:vulnerable libraries are no longer being updated. If you\u2019re pinning allyour dependencies (and their dependencies), then you\u2019ll never receivebug fixes and critical patches. In the  wake ofthe log4jvulnerability,this is clearly not an ideal route to take. Like most things insecurity, it\u2019s a risk tradeoff decision. You weigh the pros and cons ofeach and proceed accordingly.\n  What if an attacker were to intentionally flag their compromised packageas \u201cvulnerable\u201d? Where would that leave dependent packages? Authors ofpackages which depend on the attacker\u2019s package now have to make adecision on the exact catch-22 we mentioned before. If they  don\u2019tupdate their dependencies, they risk putting all those who utilizetheir package at risk of being \u201cvulnerable\u201d. However, if they  doupdate their dependencies, they risk a whole slew of new code beingincorporated into their package.\n  That raises another question,  can\u2019t maintainers and developers justreview all of the new code in each dependency before including theupdated versions?\n The most obvious rebuttal to this idea is probably self-evident:  it\u2019s aton of work. We\u2019re talking about going over diffs for the dependenciesthemselves, their dependencies, and so on. Doing so with any seriouslevel of rigor is a large time-consuming effort. A vast majority of fulltime software developers aren\u2019t reviewing every change in theirdependencies, let alone volunteers who maintain packages in their ownpersonal time. Asking these volunteers to do this daunting task seemsunrealistic, to say the very least.\n The problem only becomes more murky when you factor in the ability tospecify  version ranges in yourpackage.json.If you have a dependency that allows for flexibility in its dependencies(e.g:  &gt;=package_name) then a developer could later publish anupdate to a new version, and they would be included in fresh installs.This means that you could review all of your dependencies, find nothingmalicious, and then be seamlessly backdoored later.\n  For those interested in doing a bit of learning and research themselves,take a stab at looking at the process for updating dependencies inAngular. In my opinion Google actually does a fairly good job of it (allthings considered). Here\u2019s an example pull request to get you started: https://github.com/angular/angular/pull/45013\n If not Angular, pick any popular package that you use in your JavaScriptdevelopment. When you research the process, ask yourself some of thesequestions:\n \u201cDoes it prevent dependencies that specify a version range instead of a specific singular version?\u201d\n This is not a quiz and there are no gotchas or simple answers, this ismeant to have you seriously think about the problems being faced independency security. The real world is filled with nuance and hardproblems and software development is no exception!\n  Clearly dependency security is a complex issue, so let\u2019s focus on themore simple issue here: expired domains in account emails. In this case,there are a few important pieces to consider:\n Custom domains are a common part of developer culture, and they are unlikely to go away. They carry a real risk of being exploitable when these domains expire, and developers should give serious consideration of this problem when using them for their important accounts.\n During this research the npm accounts weren\u2019t the only accounts which were suddenly hijackable upon registering the expired domains. Accounts on all sorts of important websites such as Github, Slack, etc were also in jeopardy. Any website which uses emailed password resets as a single-factor for account access has this problem.\n Sites may want to proactively disable accounts when their email domains expire or become non-routable. They will also likely need to have an alternative path to reset the account\u2019s password that strongly verifies the person is the owner of the account when this happens and the original account owner needs to get access to their account again.\n In the npm case, I reported the problem to them (the Github securityteam) via HackerOne which they require for vulnerability reports. Theyclosed the report as \u201cInformative\u201d and noted that \u201c This is somethingwe\u2019ve been tracking internally and have mitigations in place for\u201d.Whether or not they implemented any new changes is unclear. See thedisclosure timeline below, or  this archive ofthe HackerOne report for more info.I would probably advise npm users to proceed with the assumption thatthis is still a problem that could be exploited.\n  Developers for highly-installed npm packages had their npm accounts registered to email addresses at expired domains.\n Registering these expired domain names allowed for the takeover of important npm packages such as   ajv-formats which currently has ~5 million installs a week.\n The   ajv-formats package is a dependency of   @angular-devkit/core, Angular\u2019s core utility library.   @angular-devkit/core is a dependency of   @angular/cli, which is the tooling  used to compile Angular apps.\n  Developers using custom domains for their email address should seriously consider the risks they are taking on by using the email for their online accounts. If this domain expires or is hijacked, where does that leave them?\n It\u2019s unclear if npm has changed anything as a result of my report to them and npm users should likely assume that this issue could still be exploited in the future.\n   Jan 10, 2022: Reached out to the owner of  machina.bio domain via LinkedIn to disclose the issue.\n Jan 15, 2022: Realized I had missed a reply to the LinkedIn reachout with the developer\u2019s email. Sent details of disclosure to the email address provided.\n  Jan 22, 2022: Followed up with credentials for npm account and  machina.bio domain transfer code to complete handover.\n  Jan 17, 2022: Submitted HackerOne bug to Github\u2019s bug bounty program, due to  npm\u2019s site requesting bugs be submitted via this avenue.  Report ID #1452186.\n Jan 25, 2022: Github security team closes the bug as invalid  \u201cBecause this attack vector included submitting a support request to re-enable password resets for a disabled account, this is considered social engineering and is therefore ineligible for a reward under the Bug Bounty program.\u201d. They also considered the issue mitigated  \u201c\u200b\u200bThis is something we\u2019ve been tracking internally and have mitigations in place for.\u201d\n Jan 25, 2022: Requested public disclosure due to the bug being apparently mitigated and because the report was closed as Informative.\n Feb 2, 2022: Github denies disclosure request due to bug being closed as Informational. However, they state that publishing a write up is completely fine. You can see the full HackerOne report as an image here:  https://imgur.com/a/7TQs3vx\n  Special thanks to  Michael Xu(@michaelxproxy) forconsulting with me on this topic. His feedback was essential for thesections on the nuances of package-pinning.", "posttime": "2022-02-20 20:01:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,npm,angular,\u7535\u5b50\u90ae\u4ef6", "title": "\u901a\u8fc7\u8fc7\u671f\u7684NPM\u53d1\u5e03\u8005\u7535\u5b50\u90ae\u4ef6\u57df\u8fdb\u884c\u59a5\u534f", "title_en": "Compromising Angular via expired NPM publisher email domains", "transed": 1, "url": "https://thehackerblog.com/zero-days-without-incident-compromising-angular-via-expired-npm-publisher-email-domains-7kZplW4x/", "via": "", "real_tags": ["\u53d1\u5e03", "npm", "angular", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074283, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "orange\u7f51\u7ad9\u76ee\u524d\u6b63\u5728\u8ba8\u8bba\u4e00\u7bc7\u5173\u4e8e\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u7684\u6587\u7ae0\uff0c\u5c24\u5176\u662f\u4e0eWebSocket\uff08\u4ee5\u53ca\u65b0\u5174\u7684WebTransport\uff09\u7684\u6bd4\u8f83\u3002\u8fd9\u7bc7\u6587\u7ae0\u548c\u8ba8\u8bba\u90fd\u5f88\u6709\u89c1\u5730\uff0c\u4f46\u6211\u8ba4\u4e3a\u4ed6\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u5177\u6709\u76f8\u5f53\u6df1\u523b\u5f71\u54cd\u7684\u65b9\u9762\u3002\n\u8bb8\u591a\u5e74\u524d\uff0c\u6211\u5728\u4e00\u4e2a\u5927\u578b\u7f51\u7ad9\u7684\u57fa\u7840\u8bbe\u65bd\u56e2\u961f\u5de5\u4f5c\u65f6\uff0cWebSocket\u5f00\u59cb\u5728\u6d4f\u89c8\u5668\u4e2d\u5f97\u5230\u652f\u6301\uff0c\u8be5\u7f51\u7ad9\u4e0a\u7684\u5404\u79cd\u5c5e\u6027\uff08\u65b0\u95fb\u3001\u4f53\u80b2\u3001\u5a31\u4e50\u7b49\uff09\u5bf9\u5b83\u63d0\u4f9b\u7684\u53ef\u80fd\u6027\u611f\u5230\u5174\u594b\u3002\u4ed6\u4eec\u9700\u8981\u6269\u5c55WebSocket\uff0c\u6211\u4eec\u60f3\u652f\u6301\u4ed6\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u95ee\u4ed6\u4eec\u5e0c\u671b\u6211\u4eec\u5b9e\u73b0\u54ea\u4e2a\u5e93\u2014\u2014\u6709\u6548\u7684\uff0c\u54ea\u4e2a\u534f\u8bae\u3002\n\u8ba9\u6211\u4eec\u62ff\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u5047\u8bbe\u6211\u4eec\u95ee\u4e8620\u5904\u623f\u4ea7\u3002\u95ee\u9898\u662f\u6211\u4eec\u53ef\u80fd\u4ece\u4ed6\u4eec\u90a3\u91cc\u5f97\u5230\u4e8612\u4e2a\u4e0d\u540c\u7684\u7b54\u6848\uff1b\u4ed6\u4eec\u4e0d\u540c\u610f\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528WebSocket\u3002\n\u867d\u7136\u5176\u4e2d\u4e00\u4e9b\u7528\u9014\u662f\u771f\u6b63\u72ec\u7279\u7684\uff0c\u4f46\u8bb8\u591a\u5c5e\u6027\u53ea\u662f\u60f3\u8981\u4e00\u79cd\u9ad8\u6548\u3001\u53ef\u9760\u7684\u53d1\u5e03/\u8ba2\u9605\u673a\u5236\uff0c\u5c06\u4e8b\u4ef6\u6d41\u5f0f\u4f20\u8f93\u5230\u6d4f\u89c8\u5668\u3002\u4ed6\u4eec\u5bf9\u6b64\u4f7f\u7528\u4e86\u957f\u65f6\u95f4\u7684\u8f6e\u8be2\uff0c\u5e76\u53d1\u73b0\u5b83\u4e0d\u592a\u7406\u60f3\u2014\u2014\u7279\u522b\u662f\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u5360\u7528\u4e86\u6574\u4e2aHTTP\u8fde\u63a5\uff0c\u800c\u5230\u90a3\u65f6\uff0c\u6d4f\u89c8\u5668\u5f00\u59cb\u66f4\u4e25\u683c\u5730\u9650\u5236\u6bcf\u4e2a\u6765\u6e90\u7684\u53ef\u7528\u8fde\u63a5\u6570\u3002\nWebSockets\u4f3c\u4e4e\u662f\u7b54\u6848\uff0c\u4f46WebSockets\u6ca1\u6709\u6807\u51c6\u7684\u9152\u5427/\u9152\u5427\uff1b\u76f8\u53cd\uff0c\u60a8\u53ef\u4ee5\u4e3a\u9996\u9009\u8bed\u8a00\u9009\u62e9\u4e00\u4e2a\u5e93\uff0c\u90e8\u7f72\u5176\u670d\u52a1\u5668\u7aef\u7ec4\u4ef6\uff0c\u5e76\u5c06\u76f8\u5e94\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002\n\u8003\u8651\u5230\u975e\u5e38\u5927\u7684\u7f51\u7ad9\u6ca1\u6709\u5355\u4e00\u7684\u8bed\u8a00\u7ea6\u5b9a\uff0c\u800c\u4e14WebSockets\u5e93\u7684\u89c4\u6a21\u751a\u81f3\u5728\u4e00\u79cd\u8bed\u8a00\u4e2d\u4e5f\u662f\u76f8\u5f53\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u2014\u2014\u5728\u57fa\u7840\u8bbe\u65bd\u4e2d\u9009\u62e9\u652f\u6301\u54ea\u79cd\u8bed\u8a00\u3002\n\u5bf9\u4e8eCDN\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u4e58\u4ee5\u4ed6\u4eec\u62e5\u6709\u7684\u5ba2\u6237\u6570\u91cf\u3002\u4e2d\u4ecb\u673a\u6784\u65e0\u6cd5\u7406\u89e3\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u8bed\u4e49\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u505a\u4e00\u4e9b\u5927\u7684\u5047\u8bbe\uff0c\u5c31\u65e0\u6cd5\u4e3a\u5b83\u4eec\u589e\u52a0\u592a\u591a\u7684\u4ef7\u503c\u3002\n\u6211\u6000\u7591\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5927\u591a\u6570CDN WebSockets\u4ea7\u54c1\u5b9e\u9645\u4e0a\u662fTCP\u5c42\u4ee3\u7406\uff1b\u5b83\u4eec\u4ee51:1\u7684\u6bd4\u4f8b\u5c06WebSocket\u8fde\u63a5\u4f20\u9012\u56de\u914d\u7f6e\u7684\u6e90\u7ad9\uff0c\u5e76\u53ef\u80fd\u63d0\u4f9b\u4e00\u4e9bDDoS\u4fdd\u62a4\u548cHTTP/2\u8fde\u63a5\u5408\u5e76\uff08\u5982\u679c\u5b83\u4eec\u559c\u6b22\u7684\u8bdd\uff09\u3002\n\u9057\u6f0f\u7684\u662f\u57fa\u4e8e\u4e2d\u4ecb\u4f53\u5bf9\u5e94\u7528\u7a0b\u5e8f\u66f4\u9ad8\u7ea7\u8bed\u4e49\u7684\u7406\u89e3\u6765\u6269\u5c55\u534f\u8bae\u7684\u80fd\u529b\u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u6267\u884cpub/sub\u7684\u60c5\u51b5\u4e0b\uff0c\u4e2d\u4ecb\u673a\u6784\u4e0d\u80fd\u5bf9WebSocket\u505a\u592a\u591a\u4e8b\u60c5\uff0c\u5c3d\u7ba1\u5982\u679c\u4ed6\u4eec\u80fd\u591f\u201c\u6293\u4f4f\u201d\u8fd9\u4e9b\u8bed\u4e49\uff0c\u90a3\u4e48\u8fd9\u6837\u505a\u76f8\u5bf9\u7b80\u5355\u3002\n\u867d\u7136\u90e8\u7f72\u53d1\u5e03/\u8ba2\u9605\u4e0d\u9700\u8981\u4e2d\u4ecb\uff0c\u4f46\u5b83\u5c06\u6781\u5927\u5730\u5e2e\u52a9\u6269\u5c55\u3001\u53ef\u9760\u6027\u548c\u51cf\u5c11\u5ef6\u8fdf\u3002\u5c31\u50cf\u4e2d\u95f4\u7f13\u5b58\u7528\u4e8e\u201c\u666e\u901a\u201dHTTP\u4e00\u6837\u3002\n\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u4e2a\u534f\u8c03\u95ee\u9898\u3002\u62e5\u6709\u5927\u91cf\u4e0d\u540c\u7684\u3001\u6709\u6548\u7684\u4e13\u6709\uff08\u5373\u4f7f\u662f\u5f00\u6e90\u7684\uff09\u5c0f\u534f\u8bae\u4f1a\u8ba9\u4e2d\u4ecb\u673a\u6784\u65e0\u6cd5\u4e3aWebSockets\u534f\u8bae\u589e\u52a0\u4ef7\u503c\u3002\n\u90a3\u4e48\uff0c\u95ee\u9898\u662f\u6211\u4eec\u5982\u4f55\u4e3apub/sub\u5b9e\u73b0\u4e2d\u4ecb\u2014\u2014\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u8bb8\u4f1a\u8ba9pub/sub\u6210\u4e3aWeb\u4e2d\u6807\u51c6\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\uff1f\n\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u662f\u4e00\u79cd\u53ef\u80fd\u6027\u3002Fastly\u5df2\u7ecf\u5141\u8bb8SSE\u4f7f\u7528HTTP\u7f13\u5b58\u7684\u6298\u53e0\u8f6c\u53d1\u201c\u5c55\u5f00\u201d\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u79cd\u652f\u6301\u4e2d\u4ecb\u7684Web pub/sub\u5f62\u5f0f\u2014\u2014\u53ea\u662f\u8fd8\u6ca1\u6709\u6d41\u884c\u8d77\u6765\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5462\uff1f\n\u6709\u51e0\u4e2a\u6f5c\u5728\u7684\u539f\u56e0\u3002\u4e00\u662fHTTP/1.1\u8fde\u63a5\u9650\u5236\u4f7fSSE\u53d8\u5f97\u68d8\u624b\uff08\u5230\u4e86\u4e0d\u53ef\u884c\u7684\u5730\u6b65\uff09\uff1b\u5b9e\u9645\u4e0a\uff0cSSE\u81f3\u5c11\u9700\u8981HTTP/2\u3002\u5bf9\u4e8e\u8bb8\u591aWeb\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0cHTTP/2\u662f\u76f8\u5bf9\u8f83\u65b0\u7684\u3002\n\u5373\u4f7f\u4f7f\u7528HTTP/2\uff0c\u5f53\u6570\u636e\u5305\u4e22\u5931\u65f6\uff0cTCP\u884c\u9996\u963b\u585e\u4e5f\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u9700\u8981\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff08\u4f8b\u5982\uff0c\u60a8\u9700\u8981\u5c3d\u53ef\u80fd\u63a5\u8fd1\u201c\u5b9e\u65f6\u201d\uff09\uff0c\u60a8\u5c06\u9700\u8981HTTP/3\uff0c\u8fd9\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u66f4\u65b0\u3001\u66f4\u964c\u751f\u3002\n\u6b64\u5916\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\u6ca1\u6709\u4f7f\u7528SSE\u7684\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6ID\u673a\u5236\uff0c\u8fd9\u610f\u5473\u7740\u4e8b\u4ef6\u53ef\u80fd\u4f1a\u5728\u91cd\u65b0\u8fde\u63a5\u671f\u95f4\u4e22\u5931\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u4e2d\u95f4\u5c42\uff08\u53cd\u5411\u4ee3\u7406\u6216CDN\uff09\u5fc5\u987b\u7406\u89e3\u4e8b\u4ef6\u6d41\u5e76\u9002\u5f53\u8c03\u6574\u5176\u54cd\u5e94\u3002\u7136\u800c\uff0c\u8fd9\u66f4\u591a\u7684\u662f\u4e00\u4e2a\u5b9e\u73b0\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u534f\u8bae\u95ee\u9898\u3002\n\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5f97\u5230\u89e3\u51b3\uff0c\u56e0\u4e3a\u8f83\u65b0\u7684HTTP\u7248\u672c\u5f97\u5230\u4e86\u66f4\u5e7f\u6cdb\u7684\u90e8\u7f72\uff0c\u800c\u4e14\uff08\u4e5f\u8bb8\uff09\u4e2d\u95f4\u5c42\u5bf9SSE\u7684\u652f\u6301\u66f4\u6df1\u5165\u3002\u7136\u800c\uff0c\u4e00\u4e9b\u9057\u7559\u95ee\u9898\u66f4\u4e3a\u6839\u672c\u3002\n\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\uff08\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff09\u662f\uff0cSSE\u76ee\u524d\u53ea\u5141\u8bb8\u4e8b\u4ef6\u4e2d\u7684\u6587\u672c\u5185\u5bb9\u3002Base64\u662f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u4e0d\u662f\u5f88\u597d\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u6d4f\u89c8\u5668\u4f9b\u5e94\u5546\u53ef\u4ee5\u589e\u52a0\u5bf9\u4e8c\u8fdb\u5236\u4e8b\u4ef6\u7684\u652f\u6301\uff0c\u4f46\u8fd9\u662f\u503c\u5f97\u6000\u7591\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u76ee\u524d\u7684\u6240\u6709\u91cd\u70b9\u90fd\u662fWebTransport\u3002\n\u6b64\u5916\uff0c\u5373\u4f7f\u4f7f\u7528TLS\uff0cSSE\u4e5f\u53ef\u80fd\u9047\u5230\u53cd\u75c5\u6bd2\u4ee3\u7406\u548c\u4f01\u4e1a\u9632\u706b\u5899\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u4ee3\u7406\u548c\u9632\u706b\u5899\u6709\u65f6\u4f1a\u5728\u53d1\u9001\u6574\u4e2aHTTP\u54cd\u5e94\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u7f13\u51b2\u3002\u6a59\u8272\u7f51\u7ad9\u5e16\u5b50\u4e2d\u7684\u4e00\u4e9b\u8bc4\u8bba\u8005\u63d0\u5230\u4e86\u4e00\u4e9b\u7f13\u89e3\u8fd9\u79cd\u60c5\u51b5\u7684\u7b56\u7565\uff0c\u663e\u7136\u6548\u679c\u5f88\u597d\u3002\u586b\u5145\u54cd\u5e94\u4f3c\u4e4e\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5982\u679c\u53cd\u75c5\u6bd2\u8f6f\u4ef6\u5728\u8bc6\u522bSSE\u65b9\u9762\u53d8\u5f97\u8d8a\u6765\u8d8a\u667a\u80fd\uff0c\u8fd9\u53ef\u80fd\u5c31\u8db3\u591f\u4e86\u3002\u4e0d\u8fc7\uff0c\u8fd9\u6697\u793a\u4e86\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u95ee\u9898\u3002\nSSE\u7684\u9ad8\u7ea7\u522b\u95ee\u9898\u662f\uff0c\u5b83\u662f\u4e00\u79cd\u9690\u5f0f\u89e3\u51b3\u65b9\u6848\uff1b\u534f\u8bae\u4e2d\u7684pub/sub\u8bed\u4e49\u4e0d\u662f\u5f88\u660e\u786e\uff1b\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ea\u51fa\u73b0\u5728\u6587\u672c/\u4e8b\u4ef6\u6d41\u54cd\u5e94\u5a92\u4f53\u7c7b\u578b\u4e2d\u3002\n\u56e0\u6b64\uff0c\u60a8\u9700\u8981\u4f9d\u9760\u4e2d\u95f4\u5c42\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u5b9e\u73b0\u7f13\u5b58\uff0c\u4ee5\u8fbe\u5230\u9884\u671f\u7684\u6548\u679c\u3002\u8fd9\u53ef\u80fd\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u56e0\u4e3aCDN\u548c\u53cd\u5411\u4ee3\u7406\u901a\u5e38\u4e0e\u6e90\u7ad9\u534f\u8c03\u5f97\u5f88\u597d\uff0c\u4f46\u8fd9\u4e0d\u662f\u6700\u4f73\u7684\u534f\u8bae\u8bbe\u8ba1\u3002\n\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u90fd\u4e0d\u6392\u9664SSE\u9002\u7528\u4e8e\u6240\u6709\u7528\u4f8b\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u4f1a\u5bf9\u5176\u91c7\u7528\u4ea7\u751f\u6469\u64e6\u3002\n\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u4e3apub/sub\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684WebSockets\u5b50\u534f\u8bae\uff1b\u8be5\u534f\u8bae\u5c06\u5728\u8fde\u63a5\u8bbe\u7f6e\u671f\u95f4\u660e\u786e\u58f0\u660e\uff1a\n\u2026\u7136\u540e\u60a8\u53ea\u9700\u8981\u5728WebSockets\u8fde\u63a5\u4e0a\u5b9a\u4e49\u201cpub\u201d\u548c\u201csub\u201d\u6d88\u606f\u3002\n\u8fd9\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u60f3\u6cd5\u2014\u2014\u5b83\u5df2\u7ecf\u88ab\u63d0\u51fa\u8fc7\u5f88\u591a\u6b21\u3002\u7531\u4e8eWebSockets\u5b9e\u9645\u4e0a\u662f\u4e00\u5757\u7a7a\u767d\u753b\u5e03\uff0c\u56e0\u6b64\u5728\u5176\u4e0a\u8bbe\u8ba1\u534f\u8bae\u65f6\u9700\u8981\u505a\u51fa\u5f88\u591a\u9009\u62e9\uff0c\u800c\u4e14\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\u3002\n\u6211\u8ba4\u4e3a\u8fd9\u4f1a\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b\u63d0\u8bae\u90fd\u662f\u5728\u521b\u5efa\u5b8c\u5168\u72ec\u7acb\u4e8eHTTP\u7684\u4e1c\u897f\u2014\u2014\u5b83\u4eec\u4e0d\u662f\u5728\u4e0a\u9762\u6784\u5efa\u7684\uff0c\u800c\u662f\u8981\u6c42\u60a8\u8d2d\u4e70\u65b0\u7684\u534f\u8bae\u3002\n\u6240\u4ee5\uff0c\u8fd9\u53c8\u662f\u4e00\u4e2a\u534f\u8c03\u95ee\u9898\uff1b\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u540c\u610f\u7528\u4e00\u79cd\u65b9\u5f0f\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u5b83\u5e94\u8be5\u4f1a\u8d77\u4f5c\u7528\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u79cd\u60c5\u51b5\u8fd8\u6ca1\u6709\u53d1\u751f\u3002\n\u6211\u6000\u7591\u90e8\u5206\u539f\u56e0\u662f\u4e2d\u4ecb\u673a\u6784\u4e0d\u80fd\u4ec5\u4ec5\u6539\u53d8\u4ed6\u4eec\u5b9e\u73b0\u534f\u8bae\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u53ef\u80fd\u7834\u574f\u8bb8\u591a\u4f9d\u8d56\u4ed6\u4eec\u7684\u7ad9\u70b9\uff0c\u56e0\u6b64\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u4e00\u4e2a\u975e\u5e38\u7a33\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5f00\u653e\u6e90\u7801\u5e93\u6ca1\u6709\u611f\u53d7\u5230\u8fd9\u4e9b\u9650\u5236\uff0c\u5e0c\u671b\u80fd\u591f\u7075\u6d3b\u5730\u6539\u8fdb\u5b83\u4eec\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\n\u7b2c\u4e09\u79cd\u9009\u62e9\u662f\u6269\u5c55HTTP\u7684\u6838\u5fc3\u8bed\u4e49\uff0c\u4ee5\u5305\u62ec\u53d1\u5e03/\u8ba2\u9605\u3002\u8fd9\u5177\u6709\u4f7f\u8fd9\u4e9b\u8bed\u4e49\u5bf9\u534f\u8bae\u548c\u4e2d\u4ecb\u66f4\u660e\u786e\u7684\u4f18\u70b9\u3002\n\u5f53\u6211\u8c08\u5230\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u901a\u5e38\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u540d\u4e3aSUB\u7684\u65b0HTTP\u65b9\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e2a\u540d\u4e3aPUB\u7684\u65b0\u7684\u975e\u6700\u7ec8\uff08\u53731xx\uff09\u72b6\u6001\u4ee3\u7801\u3002\u56e0\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u53ef\u4ee5\u6709\u8bb8\u591a\u975e\u6700\u7ec8\u54cd\u5e94\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e8b\u4ef6\u6620\u5c04\u5230\u6bcf\u4e2a\u975e\u6700\u7ec8\u54cd\u5e94\uff0c\u5982\u4e0b\u6240\u793a\uff1a\nHTTP/2 105 PUBDate:Sun\uff0c2022\u5e742\u670820\u65e504:36:53 GMTMy\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\uff1a54\u4e0a\u6b21\u4e8b\u4ef6ID:1HTTP/2 105 PUBDate:Sun\uff0c2022\u5e742\u670820\u65e504:37:05 GMTMy\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\uff1a42\u4e0a\u6b21\u4e8b\u4ef6ID:2HTTP/2 105 PUBDate:Sun\uff0c2022\u5e742\u670820\u65e504:38:31 GMTMy\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\uff1a36\u4e0a\u6b21\u4e8b\u4ef6ID:3\n\u5728\u8fd9\u91cc\uff0c\u5b50to/foo/stream\u4f1a\u5bfc\u81f4\u4e09\u4e2a\u4e8b\u4ef6\uff0c\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u5728My App data HTTP\u5934\u4e2d\u643a\u5e26\u5b83\u4eec\u7684\u6570\u636e\u3002\u4f7f\u7528\u6807\u9898\u662f\u56e0\u4e3a1xx\u54cd\u5e94\u4e0d\u80fd\u5305\u542b\u6b63\u6587\u5185\u5bb9\u3002\n\u8fd9\u91cc\u7684\u5f00\u9500\u975e\u5e38\u5c0f\uff08\u5c24\u5176\u662f\u5728HTTP/2\u548cHTTP/3\u4e2d\uff09\u3002\u4e0e\u5176\u4ed6\u65b9\u6cd5\u4e00\u6837\uff0c\u5ba2\u6237\u5c06\u8d1f\u8d23\u7ef4\u62a4\u8fde\u63a5\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4e3a\u201ckeepalive\u201d\u4e8b\u4ef6\u6807\u51c6\u5316HTTP\u72b6\u6001\u4ee3\u7801\uff0c\u4ee5\u5e2e\u52a9\uff1a\n\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u62c5\u5fc31xx\u4e0d\u53ef\u4e92\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u8c37\u6b4c\u5728103\uff08\u65e9\u671f\u63d0\u793a\uff09\u4e0a\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u53ea\u8981\u8fde\u63a5\u662f\u52a0\u5bc6\u7684\uff0c\u5b83\u4eec\u662f\u7f51\u7edc\u517c\u5bb9\u7684\u3002\n\u53e6\u4e00\u4e2a\u6f5c\u5728\u7684\u53cd\u5bf9\u610f\u89c1\u662f\uff0cHTTP\u5934\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u6587\u672c\u7684\uff0c\u8fd9\u5bfc\u81f4\u4e86\u4e0eSSE\u76f8\u540c\u7684\u5185\u5bb9\u9650\u5236\u3002\u7136\u800c\uff0cHTTP\u5934\u53ef\u4ee5\u662f\u4e8c\u8fdb\u5236\u7684\uff08\u5c3d\u7ba1\u8fd9\u53ef\u80fd\u4e0d\u5177\u6709\u5e7f\u6cdb\u7684\u4e92\u64cd\u4f5c\u6027\uff09\u3002\u7136\u800c\uff0c\u7ed3\u6784\u5316\u5b57\u6bb5\u53ef\u80fd\u4f1a\u63d0\u4f9b\u4e00\u6761\u51fa\u8def\u2014\u2014\u6709\u4eba\u8ba8\u8bba\u8fc7\u5982\u4f55\u4e3a\u5b83\u4eec\u521b\u5efa\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAPI\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u76f4\u63a5\u8bbf\u95ee\u3002\u6700\u540e\n\u5bf9\u4e8e\u975e\u6700\u7ec8\u54cd\u5e94\u5982\u4f55\u4e0e\u8d44\u6e90\u72b6\u6001\u76f8\u5173\uff0c\u4e5f\u5b58\u5728\u4e00\u4e9b\u5efa\u7b51/\u54f2\u5b66\u65b9\u9762\u7684\u62c5\u5fe7\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5b9a\u4e49\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b83\u4e0d\u5fc5\u8fd9\u6837\u505a\uff0c\u6240\u4ee5\u8fd9\u4e0d\u5e94\u8be5\u6210\u4e3a\u4e00\u4e2a\u963b\u788d\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u4e0eSSE\u975e\u5e38\u76f8\u4f3c\u2014\u2014\u5b9e\u9645\u4e0a\uff0c\u53ea\u9700\u7a0d\u52a0\u8c03\u6574\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7EventSource API\u8bbf\u95ee\u5b83\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u8bed\u4e49\u5728\u7f51\u7edc\u4e0a\u975e\u5e38\u660e\u786e\uff0c\u56e0\u6b64HTTP\u4e2d\u4ecb\u673a\u6784\u5982\u679c\u613f\u610f\uff0c\u5c06\u80fd\u591f\u7406\u89e3\u548c\u652f\u6301\u5b83\u4eec\u3002\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u7f51\u7edc\u7684\u201c\u8fb9\u7f18\u201d\u8fd0\u884c\u4ee3\u7801\uff0c\u7c7b\u4f3c\u4e8e\u5927\u591a\u6570WebSocket\u534f\u8bae\u7684\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684\u65b9\u5f0f\u3002\n\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u65b0\u7684\u80fd\u529b\uff1b\u76f4\u5230\u6700\u8fd1\uff0cCDN\u8fd8\u53ea\u5728\u8fb9\u7f18\u63d0\u4f9b\u7f13\u5b58\u548c\u5934\u5b57\u6bb5\u64cd\u4f5c\u7b49\u670d\u52a1\u3002\u7136\u800c\u73b0\u5728\uff0c\u50cfFastly\u8fd9\u6837\u7684\u89e3\u51b3\u65b9\u6848Compute@EdgeCloudFlare Workers\u548cAkamai EdgeWorkers\u5141\u8bb8\u60a8\u5728\u5176\u4e2d\u4ecb\u4e2d\u7f16\u5199\u5904\u7406\u534f\u8bae\u7684\u4ee3\u7801\u3002\n\u8fd9\u4ee3\u8868\u7740\u6211\u4eec\u5bf9\u534f\u8bae\u529f\u80fd\u7684\u770b\u6cd5\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\u3002\u7136\u800c\uff0c\u5b83\u4eec\u662f\u975e\u5e38\u65b0\u7684\uff0c\u8fd8\u4e0d\u80fd\u4e92\u64cd\u4f5c\uff1b\u5982\u679c\u4f60\u4e3a\u5176\u4e2d\u4e00\u4e2a\u7f16\u5199\u4ee3\u7801\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u81f3\u5c11\u4e00\u4e9b\u91cd\u5199\uff0c\u5b83\u5c31\u4e0d\u4e00\u5b9a\u80fd\u5728\u53e6\u4e00\u4e2a\u4e0a\u5de5\u4f5c\u3002\n\u6b64\u5916\uff0c\u8fd9\u4e9b\u7f51\u7edc\u5bf9\u5176\u5185\u90e8\u62d3\u6251\u7ed3\u6784\u548c\u72b6\u6001\u6709\u7740\u6df1\u523b\u7684\u7406\u89e3\uff0c\u5e76\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u7cbe\u786e\u5730\u901a\u77e5\u534f\u8bae\u7ea7\u522b\u7684\u51b3\u7b56\u3002\u8fd9\u8ba9\u6211\u6000\u7591\uff0c\u5982\u679c\u53ef\u4ee5\u66f4\u597d\u5730\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5e7f\u6cdb\u6709\u7528\u7684\u90e8\u5206\u63d0\u4f9b\uff0c\u90a3\u4e48\u5728\u8fd9\u4e9b\u5e73\u53f0\u4e4b\u4e0a\u7f16\u5199\u4ee3\u7801\u6765\u6267\u884c\u6b64\u529f\u80fd\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\n\u4f5c\u4e3a\u4e00\u4e2aHTTP\u4eba\uff0c\u6211\u6709\u504f\u89c1\uff1a\u6211\u7684\u4e3b\u8981\u5174\u8da3\u662f\u786e\u4fddHTTP\u534f\u8bae\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u4ef7\u503c\uff0c\u4ee5\u4fdd\u6301\u5b83\u7684\u76f8\u5173\u6027\uff0c\u5e76\u4fdd\u7559\u793e\u533a\u5728\u5b83\u65b9\u9762\u7684\u5927\u91cf\u6295\u8d44\u3002\u8fd9\u610f\u5473\u7740\u786e\u4fdd\u8be5\u534f\u8bae\u57fa\u4e8e\u901a\u5e38\u5b9e\u65bd\u7684\u6807\u51c6\u63d0\u4f9b\u4e30\u5bcc\u7684\u529f\u80fd\u3001\u826f\u597d\u7684\u6548\u7387\u548c\u826f\u597d\u7684\u4e92\u64cd\u4f5c\u6027\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0cWebSockets\u63d0\u4f9b\u534f\u8bae\u529f\u80fd\u7684\u65b9\u6cd5\u662f\u8ba9\u5b83\u4eec\u51fa\u73b0\u5728\u5f00\u6e90\u5b9e\u73b0\u4e2d\uff0c\u800c\u4e0d\u662f\u5728\u5f00\u653e\u6807\u51c6\u4e2d\u6307\u5b9a\u3002\u56e0\u4e3a\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u5ba2\u6237\u673a\u4e0a\u90e8\u7f72\u4ee3\u7801\uff0c\u6240\u4ee5\u6548\u679c\u975e\u5e38\u597d\u2014\u2014\u60a8\u53ef\u4ee5\u9009\u62e9\u7c7b\u4f3c\u4e8esocket\u7684\u5e93\u3002io\uff0c\u90e8\u7f72\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u7ec4\u4ef6\uff0c\u5b83\u5c31\u53ef\u4ee5\u5de5\u4f5c\u4e86\u2014\u2014\u4f46\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u534f\u8bae\u672c\u8d28\u4e0a\u662f\u4e13\u6709\u7684\u3002\n\u8fd9\u662f\u56e0\u4e3a\u5728\u5176\u6838\u5fc3\uff0cWebSockets\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u4f4e\u7684\u62bd\u8c61\uff1a\u6709\u6548\u5730\u201cTCP for the Web\u201d\uff08WS\u652f\u6301\u8005\u81ea\u5df1\u4f7f\u7528\u7684\u8bcd\uff09\u3002\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u60a8\u4f7f\u7528\u7684\u62bd\u8c61\u4e0d\u518d\u662fWebSocket\uff0c\u800c\u662f\u7531\u60a8\u9009\u62e9\u7684\u5e93\u63d0\u4f9b\u7684\u62bd\u8c61\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u5728HTTP\u4e2d\u4e3a\u53d1\u5e03/\u8ba2\u9605\u5b9a\u4e49\u57fa\u4e8e\u6807\u51c6\u7684\u51fd\u6570\u6bd4WebSockets\uff08\u6216WebTransport\uff09\u66f4\u6709\u610f\u4e49\u3002\n\u7136\u800c\uff0c\u6211\u8fd8\u8fdc\u4e0d\u80fd\u786e\u5b9a\u8fd9\u4f1a\u53d1\u751f\uff0c\u6240\u4ee5\u6700\u597d\u7684\u524d\u8fdb\u9053\u8def\u8fd8\u4e0d\u786e\u5b9a\u3002\u6211\u4eec\u662f\u5426\u5e94\u8be5\u6269\u5c55\u548c\u5b8c\u5584SSE\uff08\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u6d4f\u89c8\u5668\u52a0\u5165\u7684\u8bdd\uff09\uff1f\u56e0\u4e3aWebSockets\u5b50\u534f\u8bae\u4e0d\u9700\u8981\u6d4f\u89c8\u5668\u8d2d\u4e70\uff0c\u6240\u4ee5\u8fd9\u6761\u8def\u53ef\u80fd\u66f4\u5b9e\u7528\u2014\u2014\u4f46\u6211\u4eec\u80fd\u5728\u4e00\u4e2a\u63d0\u6848\u80cc\u540e\u83b7\u5f97\u8db3\u591f\u7684\u52a8\u529b\u5417\uff1f\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u6d4f\u89c8\u5668\u5b9e\u73b0\u4e00\u4e2a\u65b0\u7684PUB-HTTP\u65b9\u6cd5\u5417\uff1f\u6216\u8005\u8fb9\u7f18\u8ba1\u7b97\u5e73\u53f0\u4f1a\u805a\u5728\u4e00\u8d77\uff0c\u4f7f\u6240\u6709\u8fd9\u4e9b\u90fd\u53d8\u5f97\u4e0d\u5fc5\u8981\uff1f\n\u6211\u8ba4\u4e3a\u7b54\u6848\u5f88\u91cd\u8981\uff0c\u4e0d\u4ec5\u56e0\u4e3apub/sub\u662f\u4e00\u79cd\u5e7f\u6cdb\u6709\u7528\u7684\u6a21\u5f0f\uff0c\u8fd8\u56e0\u4e3a\u5b83\u53ef\u80fd\u4e3a\u6211\u4eec\u5728Web\u4e0a\u5f15\u5165\u5176\u4ed6\u53ef\u4ee5\u4ece\u5176\u4f53\u7cfb\u7ed3\u6784\uff08\u5305\u62ec\u4e2d\u4ecb\uff09\u4e2d\u53d7\u76ca\u7684\u9ad8\u7ea7\u534f\u8bae\u529f\u80fd\u63d0\u4f9b\u4e86\u4e00\u6761\u9014\u5f84\u3002", "note_en": "The orange site is currently  discussing an  article about Server-Sent Events, especially as compared with WebSockets (and the emerging  WebTransport). Both the article and discussion are well-informed, but I think they miss out on one aspect that has fairly deep implications.\n  Many years back when I worked on the infrastructure team of a Very Large Website, WebSockets was beginning to be supported in browsers, and the various properties on that site (news, sports, entertainment, and so on) were excited about the possibilities it offered. They needed to scale WebSockets out and we wanted to support them, so we asked them which library \u2013 effectively, which protocol \u2013 they wanted us to implement.\n Let\u2019s pull a number out of the air and say we asked twenty properties. The problem is that we got probably twelve different answers from them; they couldn\u2019t agree, because there are a lot of different ways you can use WebSockets.\n While some of those uses are truly unique, many of the properties just wanted an efficient, reliable publish/subscribe mechanism to stream events to browsers. They\u2019d used long polling for this and found it to be less than optimal \u2013 especially because it effectively consumes an entire HTTP connection, and by that time browsers were starting to more strictly limit the number of connections available to each origin.\n WebSockets seemed like the answer, but there is no standard pub/sub for WebSockets; instead, you choose a library for your preferred language, deploy its server-side component and ship the corresponding client-side code to the browser.\n Given that Very Big Website didn\u2019t have a single language convention, and that the landscape of WebSockets libraries is pretty large even in  one language, it\u2019s not surprising that we were left with a problem \u2013 choosing which one to support in infrastructure.\n For CDNs, this problem is multiplied by the number of customers they have. Intermediaries can\u2019t understand application-specific semantics, so they can\u2019t add much value to them without making some big assumptions.\n I suspect this is why most CDN WebSockets products are effectively TCP-layer proxies; they pass WebSockets connections 1:1 back to the configured origin, and perhaps provide some DDoS protection and HTTP/2 connection coalescing (if they\u2019re fancy).\n What\u2019s left out is the ability to scale the protocol based upon intermediaries\u2019 understanding of the higher-level semantics of the application. In cases where the application is doing pub/sub, intermediaries can\u2019t do much with WebSockets, even though it would be relatively straightforward for them to do so if they could \u201cgrab onto\u201d those semantics.\n And while intermediation isn\u2019t  required for deploying pub/sub, it\u2019s going to be a massive aid to scaling, reliability, and reducing latency. Just like intermediary caching is for \u201cnormal\u201d HTTP.\n At heart, this is a coordination problem. Having lots of different, effectively proprietary (even if Open Source) little protocols shuts intermediaries out of adding value to the WebSockets protocol.\n The question, then, is how we enable intermediation for pub/sub \u2013 in the process, perhaps making pub/sub a standards-defined part of the Web?\n  Server-Sent Events is one possibility.  Fastly already allows SSE to be \u201cfanned out\u201d using HTTP caching\u2019s  collapsed forwarding, so really we  already have a form of Web pub/sub with support for intermediation \u2013 it just hasn\u2019t caught on. Why not?\n There are a few potential reasons. One is that the  HTTP/1.1 connection limit makes SSE tricky (to the point of unworkable); effectively, SSE requires at least HTTP/2. For many Web developers, HTTP/2 is relatively new.\n Even with HTTP/2, TCP head-of-line blocking is possible when packets are lost, so if you need to avoid that (e.g., you need as close to \u201creal-time\u201d as possible), you\u2019ll need HTTP/3, which is even newer and more unfamiliar to most.\n Also, SSE\u2019s  Last-Event-ID mechanism isn\u2019t used in this approach, which means that events could be lost during a reconnection. To support this, the intermediary (reverse proxy or CDN) would have to  understand the event stream and tailor its responses appropriately. That\u2019s more of an implementation issue than a protocol issue, however.\n Those issues can be resolved over time, as the newer HTTP versions are more widely deployed and (perhaps) as intermediaries support SSE more deeply. However, some remaining issues are more fundamental.\n One such issue (for some) is that SSE currently only allows textual content in events. Base64 is a workaround here, but not great. In theory, browser vendors could add support for binary events, but this is doubtful, since all of their current focus is on WebTransport.\n Also, even when TLS is used, SSE can encounter issues with anti-virus proxies and enterprise firewalls, who sometimes buffer the entire HTTP response before sending it. Some commenters in the orange site threads mention some strategies for mitigating this, apparently with good results. Padding responses does\u2019t seem like a great solution, but if anti-virus is becoming smarter about recognising SSE, that might be enough. This hints at a broader issue, though.\n The high-level issue with SSE-with-collapsed-forwarding is that it\u2019s an implicit solution; the pub/sub semantics are not very explicit in the protocol; they\u2019re really only surfaced in the  text/event-stream response media type.\n As a result, you\u2019re relying on the intermediary to implement caching in a particular way to achieve the desired effect. This might not be a big deal, in that CDNs and reverse proxies are typically well-coordinated with the origin, but it\u2019s not optimal protocol design.\n None of these issues rules out SSE for all use cases, but they do create friction against its adoption.\n  Another option is defining a new WebSockets  sub-protocol for pub/sub. Technically, that\u2019s pretty straightforward; the protocol would be explicitly declared during connection setup:\n   \u2026 and then you\u2019d just need to define the \u2018pub\u2019 and \u2018sub\u2019 messages on that WebSockets connection.\n This is not a new idea \u2013 it has been  proposed  many  times. Because WebSockets is effectively a blank canvas, there are a lot of choices to be made when designing a protocol on top of it, and no one way of doing it has yet gained momentum.\n I\u2019d suggest that\u2019s made more difficult because all of these proposals are creating something completely separate to HTTP \u2013 they\u2019re not building on top, they\u2019re requiring you to buy into a new protocol.\n So, again, this is a coordination problem; if we can get everyone to agree to do it in one way, it should work. So far, that hasn\u2019t happened.\n I suspect part of the reason is that intermediaries can\u2019t just change how they implement a protocol without potentially breaking many sites that depends on them, and as a result are looking for a very stable solution. At the same time, Open Source libraries don\u2019t feel those constraints and want the flexibility of refining how they operate.\n  The third option is to extend the  core semantics of HTTP to include pub/sub. This has the merits of making those semantics more explicit to the protocol \u2013 and intermediaries.\n When I\u2019ve noodled on this, I\u2019ve generally thought of it as a new HTTP method called  SUB, and a new non-final (i.e.,  1xx) status code called  PUB. Because a single request can have many non-final responses, it\u2019s possible to map events to each of the non-final responses, like this:\n  HTTP/2 105 PUBDate: Sun, 20 Feb 2022 04:36:53 GMTMy-App-Data: 54Last-Event-ID: 1HTTP/2 105 PUBDate: Sun, 20 Feb 2022 04:37:05 GMTMy-App-Data: 42Last-Event-ID: 2HTTP/2 105 PUBDate: Sun, 20 Feb 2022 04:38:31 GMTMy-App-Data: 36Last-Event-ID: 3\n Here, a  SUB to  /foo/stream results in three events, each carrying their data in the  My-App-Data HTTP header. Headers are used because  1xx responses can\u2019t contain body content.\n The overhead here is very small (especially in HTTP/2 and HTTP/3). As in other approaches, the client would be responsible for maintaining the connection and re-establishing it when necessary. We could even standardise a HTTP status code for a \u2018keepalive\u2019 event to help that:\n  Some might be concerned that  1xx isn\u2019t interoperable. However, Google\u2019s work on  103 (Early Hints) has  shown that they\u2019re web-compatible, provided that the connection is encrypted.\n Another potential objection is that HTTP headers are generally thought of as textual, leading to the same content limitation as SSE. However, HTTP headers  can be binary (although that  might not be widely interoperable). However,  Structured Fields might offer a way out \u2013 there has been discussion of creating a  binary encoding of them, in which case APIs could offer direct access to binary data. Eventually.\n There are also some architectural/philosophical concerns about how non-final responses relate to the state of the resource. However, since we\u2019re defining a new method, it does\u2019t have to, so this shouldn\u2019t be a showstopper.\n This approach is very similar to SSE \u2013 indeed, it could be accessed through the  EventSource API with some minor tweaks. The difference is that the semantics are very explicit on the wire, and so HTTP intermediaries will be able to understand and support them if they wish to.\n  One more way to do this would be to run code at the \u2018edge\u2019 of the network, in a way similar to how code is run in the browser for most WebSockets protocols.\n This is a very new capability; until recently, CDNs only provided services like caching and manipulation of header fields at the edge. Now, however, solutions like  Fastly Compute@Edge,  CloudFlare Workers, and  Akamai EdgeWorkers allow you to write code for processing protocols in their intermediaries.\n This represents a huge shift in how we think about protocol functions. However, they are very new, and not yet interoperable; if you write code for one of them, it won\u2019t necessarily work on one of the others without at least some rewrites.\n Also, these networks have deep understanding of their internal topology and state, and can use that to inform protocol-level decisions at a fine grain. That leaves me questioning whether it\u2019s a good idea for anyone to write code to perform this function on  top of one of these platforms when it could be better provided as a broadly useful  part of it.\n  As an HTTP person, I\u2019m biased: my primary interest is making sure that the HTTP protocol provides as much value as possible, to keep it relevant and preserve the considerable investments the community has made in it. That means making sure that the protocol provides rich functionality, good efficiency, and good interoperability, based upon commonly implemented standards.\n In contrast, the WebSockets approach to providing protocol functions is to let them emerge in open source implementations, rather than be specified in open standards. Because the server gets to deploy code on the client, that works pretty well \u2013 you choose a library like  socket.io, deploy the server and client components, and it just works \u2013 but the protocol between the client and server is essentially proprietary.\n That\u2019s because at its heart, WebSockets provides a very low abstraction: effectively \u201cTCP for the Web\u201d (words that WS proponents have themselves used). The abstraction you\u2019re working with as a developer is no longer WebSockets, it\u2019s that which is provided by the library you choose.\n With that in mind, to me it makes more sense to define a standards-based function for pub/sub in HTTP, rather than WebSockets (or WebTransport).\n However, I\u2019m far from certain that will happen, and so the best path forward is uncertain. Should we just extend and refine SSE (if we can get browsers on board)? Because a WebSockets sub-protocol wouldn\u2019t require browser buy-in, that path might be more practical \u2013 but will we be able to get enough momentum behind a single proposal? Alternatively, can we get the browsers to implement a new  PUB HTTP method? Or will edge compute platforms converge and make all of this unnecessary?\n I think the answer is important not just because pub/sub is a broadly useful pattern, but because it might give us a path for introducing other, high-level protocol functions on the Web that can benefit from its architecture (including intermediation).", "posttime": "2022-02-20 19:52:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u4ef6,events,http", "title": "\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u3001WebSocket\u548cHTTP", "title_en": "Server-Sent Events, WebSockets, and HTTP", "transed": 1, "url": "https://www.mnot.net/blog/2022/02/20/websockets", "via": "", "real_tags": ["\u4e8b\u4ef6", "events", "http"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074282, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Fengari\uff08\u5e0c\u814a\u8bed\u4e2d\u7684Moon\uff09\u662f\u7528JavaScript\u7f16\u5199\u7684Lua\u865a\u62df\u673a\u3002\u5b83\u4f7f\u7528JavaScript&#39\uff1bs\u5783\u573e\u6536\u96c6\u5668\uff0c\u8fd9\u6837\u4e0eDOM\u7684\u4e92\u64cd\u4f5c\u6027\u5c31\u4e0d\u4f1a\u6cc4\u6f0f\u3002\n\u5b83\u9644\u5e26\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u5757\uff0c\u53ef\u4ee5\u900f\u660e\u5730\u5448\u73b0\u4e0eJavaScript\u548cDOM\u7684\u4efb\u4f55\u4ea4\u4e92\uff1a\n\u672c\u5730js=require&#34\uff1bjs&#34\uff1b\u672c\u5730\u7a97\u53e3=js\u3002\u5168\u5c40\u672c\u5730\u6587\u6863=\u7a97\u53e3\u3002\u6587\u6863\u6253\u5370\uff08&#34\uff1b\u6587\u6863\u7684\u6807\u9898\uff1a&#34\uff1b.document.title\uff09\n\u8bd5\u8bd5\u770b\uff1a\u25b6  \u672c\u5730js=require&#34\uff1bjs&#34\uff1b\u672c\u5730\u7a97\u53e3=js\u3002\u5168\u5c40\u672c\u5730\u6587\u6863=\u7a97\u53e3\u3002\u6587\u6863\u6253\u5370\uff08&#34\uff1b\u6587\u6863\u7684\u6807\u9898\uff1a&#34\uff1b.document.title\uff09\n\u672c\u5730js=require&#34\uff1bjs&#34\uff1b\u672c\u5730\u7a97\u53e3=js\u3002\u5168\u5c40\u5c40\u90e8\u51fd\u6570\uff08delay\uff09local co=assert\uff08coroutine.running\uff08\uff09\uff0c&#34\uff1b\u5e94\u8be5\u5728\u534f\u540c\u7a0b\u5e8f\u4e2d\u8fd0\u884c\uff08#34\uff1b\uff09\u7a97\u53e3\uff1asetTimeout\uff08\u51fd\u6570\uff08\uff09\u65ad\u8a00\uff08coroutine.resume\uff08co\uff09\uff09\u7ed3\u675f\uff0c\u5ef6\u8fdf*1000\uff09coroutine\u3002\u7ed3\u675f\u534f\u540c\u7a0b\u5e8f\u3002\u5305\u88c5\uff08\u51fd\u6570\uff08\uff09\u6253\u5370\u548c#34\uff1b\u73b0\u5728\u8981\u7761\u89c9\u4e86&#34; \u7761\u7720\uff083\uff09\u6253\u5370\u548c#34\uff1b\u7761\u5f97\u597d\u5417&#34; (\u5b8c)\n\u8bd5\u8bd5\u770b\uff1a\u25b6  \u672c\u5730js=require&#34\uff1bjs&#34\uff1b\u672c\u5730\u7a97\u53e3=js\u3002\u5168\u5c40\u5c40\u90e8\u51fd\u6570sleep\uff08delay\uff09local co=assert\uff08coroutine.running\uff08\uff09\uff0c&#34\uff1b\u5e94\u8be5\u5728\u534f\u540c\u7a0b\u5e8f\u4e2d\u8fd0\u884c\uff08#34\uff1b\uff09\u7a97\u53e3\uff1asetTimeout\uff08function\uff08\uff09assert\uff08coroutine.resume\uff08co\uff09\uff09end\uff0cdelay*1000\uff09coroutine\u3002yield\uff08\uff09\u7ed3\u675f\u672c\u5730\u6253\u5370=_G.\u6253\u5370\u534f\u540c\u7a0b\u5e8f\u3002\u5305\u88c5\uff08\u51fd\u6570\uff08\uff09\u6253\u5370#34\uff1b\u73b0\u5728\u8981\u7761\u89c9\u4e86&#34; \u7761\u7720\uff083\uff09\u6253\u5370\u548c#34\uff1b\u7761\u5f97\u597d\u5417&#34; (\u5b8c)\n\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528Fengari\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528Fengari web\u3002\u6b64\u6a21\u5757\u5c06\u76d1\u89c6DOM\u4e2d\u7684\u4efb\u4f55&lt\uff1b\u811a\u672c\u7c7b\u578b=&#34\uff1b\u7533\u8bf7/lua\u548c#34\uff1bsrc=&#34&#34;&gt\uff1b\u548cFengari\u4e00\u8d77\u8fd0\u884c\u3002\nfengari interop\uff1a\u4e00\u4e2alua\u5e93\uff0c\u53ef\u4ee5\u7b80\u5316\u4e0eJavaScript\u5bf9\u8c61\u7684\u4e92\u64cd\u4f5c\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u5728fengari web\u4e2d", "note_en": "Fengari ( Moon in greek) is the Lua VM written in JavaScript. It uses JavaScript&#39;s garbage collector so that interoperability with the DOM is non-leaky.\n  It comes with a  simple module, that renders any interaction with JavaScript and the DOM transparent:\n  local js =  require  &#34;js&#34; local window = js.global local document = window.document print( &#34;Document&#39;s title: &#34; .. document.title)\n     Try it:  \u25b6  local js = require &#34;js&#34; local window = js.global local document = window.document print(&#34;Document&#39;s title: &#34; .. document.title)\n    local js =  require  &#34;js&#34; local window = js.global local   function   (delay)  local co =  assert( coroutine.running(),  &#34;Should be run in a coroutine&#34;) window:setTimeout(  function ()  assert( coroutine.resume(co))  end, delay*1000)  coroutine.yield() end coroutine.wrap(  function ()  print  &#34;Going to sleep now...&#34; sleep( 3)  print  &#34;Sleep well?&#34; end)()\n     Try it:  \u25b6  local js = require &#34;js&#34; local window = js.global local function sleep(delay) local co = assert(coroutine.running(), &#34;Should be run in a coroutine&#34;) window:setTimeout(function() assert(coroutine.resume(co)) end, delay*1000) coroutine.yield() end local print = _G.print coroutine.wrap(function() print &#34;Going to sleep now...&#34; sleep(3) print &#34;Sleep well?&#34; end)()\n    The easiest way to get started with Fengari in the browser is to use  fengari-web. This module will watch the DOM for any  &lt;script type=&#34;application/lua&#34; src=&#34;...&#34;&gt; and run them with Fengari.\n  fengari-interop: a lua library that makes interoperating with JavaScript objects simple, it is already included in fengari-web", "posttime": "2022-02-20 19:50:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4f\u89c8\u5668,lua,\u51fd\u6570", "title": "Fengari\u2013\u6d4f\u89c8\u5668\u7684Lua", "title_en": "Fengari \u2013 Lua for the Browser", "transed": 1, "url": "https://fengari.io/", "via": "", "real_tags": ["\u6d4f\u89c8\u5668", "lua", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074281, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e00\u76f4\u5728\u73a9Cardboard\uff0cLinux\u7684\u53ef\u6eda\u52a8\u5e73\u94fa\u7a97\u53e3\u7ba1\u7406\u5668\uff08WM\uff09\uff08STWM\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684WM\uff0c\u800c\u4e14\u5b83\u5b9e\u9645\u4e0a\u53ea\u662f\u5728\u539f\u578b\u9636\u6bb5\u3002\u5728\u6700\u521d\u7684\u5b66\u4e60\u66f2\u7ebf\u4e4b\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u5e2e\u52a9\u6211\u4e13\u6ce8\u4e8e\u4e00\u9879\u4efb\u52a1\uff0c\u5e76\u5927\u5927\u51cf\u5c11\u4e86\u6211\u91cd\u65b0\u6392\u5217\u7a97\u53e3\u7684\u65f6\u95f4\u3002\n\u4f60\u53ef\u80fd\u6700\u719f\u6089\u7684\u662f\u4e00\u4e2a\u5de5\u4f5c\u73af\u5883\uff1b\u5728\u8fd9\u79cd\u73af\u5883\u4e2d\uff0c\u4f60[\u4e3b\u8981\u662f\u624b\u52a8]\u5c06\u7a97\u53e3\u6392\u5217\u5728\u5f7c\u6b64\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0a\u3002\u8fd9\u662f\u60a8\u5728Windows\u548cMacOS\u4e0a\u719f\u6089\u7684\u3002\n\u786c\u7eb8\u677f\u81ea\u52a8\u5728\u8fde\u7eed\u6eda\u52a8\u7684\u6c34\u5e73\u9762\u4e0a\u5e76\u6392\u6392\u5217\u6240\u6709\u7a97\u53e3\u3002\u5f53\u4f60\u901a\u8fc7\u952e\u76d8\u5feb\u6377\u952e\u6216\u6eda\u52a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u7a97\u53e3\u7684\u6eda\u52a8\u5e73\u9762\u4e0a\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u3002\u8fd9\u6709\u70b9\u96be\u4ee5\u63cf\u8ff0\uff0c\u6240\u4ee5\u6211\u5236\u4f5c\u4e86\u4e00\u4e2a\u5c0f\u6f14\u793a\u89c6\u9891\uff1a\nWM\u4e0d\u9002\u5408\u5927\u591a\u6570\u7528\u6237\u7684\u65e5\u5e38\u4f7f\u7528\u3002\u5b83\u4e0d\u652f\u6301\u62d6\u62fd\u548c\u5176\u4ed6\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u662f\u5fc5\u9700\u54c1\u7684\u7279\u6027\u3002\u5b83\u6ca1\u6709\u4efb\u4f55\u9ed8\u8ba4\u7684\u952e\u76d8\u5feb\u6377\u952e\u6216\u5e26\u6709\u65f6\u949f\u548c\u7cfb\u7edf\u7535\u6e90\u63a7\u5236\u7b49\u7ec6\u8282\u7684\u5168\u5c40\u5de5\u5177\u680f\u3002\n\u786c\u7eb8\u677f\u7ed9\u4e86\u4f60\u4e00\u5f20\u767d\u7eb8\uff0c\u4f60\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u914d\u7f6e\u4ee5\u83b7\u5f97\u6709\u7528\u7684\u4f53\u9a8c\u3002\u5982\u679c\u4f60\u8fd8\u60f3\u8bd5\u4e00\u8bd5\u7684\u8bdd\uff0c\u6211\u4e3a\u8fd9\u4e2a\u9879\u76ee\u7684\u6587\u6863\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u901f\u5165\u95e8\u6307\u5357\u3002\n\u786c\u7eb8\u677f\u4e5f\u6709\u5b83\u7684\u4e00\u4e9b\u602a\u7656\uff0c\u5b83\u7ecf\u5e38\u4f1a\u5d29\u6e83\u3002\u5c3d\u7ba1\u6211\u6709\u5f88\u9ad8\u7684\u52a8\u529b\u548c\u5174\u8da3\uff0c\u4f46\u6211\u65e0\u6cd5\u7ee7\u7eed\u4f7f\u7528\u5b83\u3002\u73b0\u5728\uff0c\u6211\u53c8\u5f00\u59cb\u4f7f\u7528\u4e00\u79cd\u7ecf\u8fc7\u66f4\u591a\u6218\u6597\u8003\u9a8c\u7684\u4f20\u7edf\u5806\u53e0WM\u3002\n\u7eb8\u677f\u6700\u5438\u5f15\u6211\u7684\u662f\u5176STWM\u7684\u6838\u5fc3\u673a\u5236\u3002\u5b83\u5bf9\u6211\u5728\u7535\u8111\u4e0a\u7684\u5de5\u4f5c\u65b9\u5f0f\u8fdb\u884c\u4e86\u8d85\u7ea7\u4f18\u5316\u3002\u6211\u901a\u5e38\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u6392\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5b83\u4eec\u653e\u5728\u666e\u901a\u7b14\u8bb0\u672c\u7535\u8111\u5c4f\u5e55\u7684\u5c3a\u5bf8\u8303\u56f4\u5185\u3002\n\u7136\u800c\uff0c\u6211\u7ecf\u5e38\u9700\u8981\u4e09\u4ef6\u4e1c\u897f\u5e76\u6392\u5728\u4e00\u8d77\uff0c\u6211\u901a\u5e38\u4e0d\u9700\u8981\u4e09\u4ef6\u4e1c\u897f\u4e2d\u7684\u4e24\u4ef6\u5e76\u6392\u5728\u4e00\u8d77\uff0c\u800c\u662f\u9700\u8981\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u5b83\u4eec\u4e4b\u95f4\u5207\u6362\u3002\u6211\u4e5f\u6709\u76f8\u90bb\u7684\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\uff0c\u5b83\u4eec\u5728\u6211\u4f7f\u7528\u7684\u4e3b\u8981\u5e94\u7528\u7a0b\u5e8f\u65c1\u8fb9\u3002\nSTWM\u4f7f\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\u6211\u53ea\u662f\u628a\u6211\u7684\u7a97\u53e3\u6309\u6211\u9700\u8981\u8bbf\u95ee\u5b83\u4eec\u7684\u9891\u7387\u6392\u5217\uff0c\u5e76\u968f\u7740\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u66f4\u6539\u800c\u5de6\u53f3\u6eda\u52a8\u3002\u6211\u89c9\u5f97\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u4e4b\u95f4\u5207\u6362\u4f1a\u51cf\u5c11\u5f00\u9500\uff0c\u51cf\u5c11\u5e72\u6270\u3002\u6211\u4e5f\u6ca1\u6709\u53d1\u73b0\u81ea\u5df1\u4e0d\u5c0f\u5fc3\u770b\u9519\u4e86\u7a97\u6237\uff0c\u5206\u5fc3\u4e86\u3002\n\u5176\u4ed6STWM\u5305\u62ecPaperWM\u3001\u7eb8\u677f\u7684\u7075\u611f\u548cEndlessWM\u3002\u8fd9\u4e2a\u6982\u5ff5\u4e5f\u6709\u4e00\u4e9b\u65e9\u671f\u7684\u5b9e\u73b0\uff0c\u4f46\u8981\u8ba9\u5b83\u4eec\u5728\u73b0\u4ee3Linux\u4e0a\u8fd0\u884c\uff0c\u9700\u8981\u505a\u5f88\u591a\u5de5\u4f5c\u3002\nPaperWM\u662fGNOME\u684c\u9762\u7684\u6269\u5c55\uff1b\u901a\u8fc7\u5f15\u5165STWM\u7684\u884c\u4e3a\uff0c\u5728\u9879\u76ee\u7684\u51fa\u8272\u5de5\u4f5c\u548c\u7528\u6237\u4f53\u9a8c\u7684\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u53d1\u5c55\u3002\u7136\u800c\uff0c\u5b83\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u4f60\u7684GNOME\u7248\u672c\u3002\u8be5\u9879\u76ee\u5f88\u96be\u8ddf\u4e0a\u4e0a\u6e38GNOME\u9879\u76ee\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u3002\nEndlessWM\u662f\u53e6\u4e00\u4e2a\u4e0e\u7eb8\u677f\u975e\u5e38\u76f8\u4f3c\u7684\u6982\u5ff5\u9a8c\u8bc1WM\u3002\u7136\u800c\uff0c\u8be5\u9879\u76ee\u5728\u65e9\u671f\u505a\u51fa\u4e86\u4e00\u4e2a\u4e0d\u5e78\u7684\u5f00\u53d1\u51b3\u7b56\uff0c\u5e76\u5728\u4e00\u4e2a\u4f9d\u8d56\u4e0a\u6e38\u7684\u9879\u76ee\u7ed3\u675f\u652f\u6301\u540e\u505c\u6ede\u4e0d\u524d\u3002", "note_en": "I\u2019ve been having a lot of fun with  Cardboard, the scrollable tiling window manager (WM) (STWM) for Linux. It\u2019s quite an unusual WM, and it\u2019s really only at the prototype stage. After the initial learning curve, I found that it helped me stay focused on one task, and it greatly reduced how much time I spent rearranging my windows.\n    You\u2019re probably most familiar with a stacking WM; an environment where you [mostly manually] arrange windows next to \u2013 or on top of each other. This is what you\u2019ll be familiar with from Windows and MacOS.\n  Cardboard automatically arranges all windows side-by-side on a continuous scrolling horizontal plane. As you switch between apps, either by keyboard shortcuts or by scrolling, you move left or right through the scrolling plane of windows. It\u2019s a bit hard to describe, so I made a little demo video:\n    The WM isn\u2019t suitable for day-to-day use by most users. It doesn\u2019t support drag-and-drop and other features most people would consider being necessities. It doesn\u2019t have any default keyboard shortcuts or a global toolbar with niceties like a clock and system power controls.\n  Cardboard gives you a blank slate, and you need to configure it to get a useful experience. I contributed a  quick start guide to the project\u2019s documentation if you still want to give it a go.\n  Cardboard has its fair share of quirks and it crashes every so often. I couldn\u2019t keep using it even though I was highly motivated and interested. I\u2019ve moved back to using a more battle-tested traditional stacking WM for now.\n  What fascinated me about Cardboard was the core mechanics of its STWM. It\u2019s super optimized for the way I work on a computer. I usually have two different apps side-by-side, something you can comfortably fit within the dimensions of a regular laptop screen.\n  However, I often need three things side by side, and I frequently don\u2019t need more than two-out-of-three things side by side but with an easy way to switch between them. I also have adjacent app windows that live kind of to the side of the main apps I use.\n    An STWM makes this workflow a breeze. I just put my windows in order of how frequently I need to access them, and scroll side to side as my app needs changes. I feel like there\u2019s less overhead and less distracting to switching between tasks. I also don\u2019t find myself accidentally ending up looking at the wrong window and getting distracted.\n  Other STWMs include  PaperWM, the inspiration for Cardboard, and  EndlessWM. There are also some earlier implementations of this concept, but it would require a lot of work to get them running on modern-day Linux.\n  PaperWM is an extension to the GNOME Desktop; building on the project\u2019s great work and user experience by introducing the behavior of an STWM. It might not work with your version of GNOME, however. The project has trouble keeping up with the changing environment from the upstream GNOME project.\n  EndlessWM is another proof-of-concept WM that closely resembles Cardboard. However, the project made an unfortunate early development decision and stagnated after an upstream dependent project ended support.", "posttime": "2022-02-20 19:48:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6eda\u52a8,tiling,\u9879\u76ee", "title": "\u786c\u7eb8\u677f\u53ef\u6eda\u52a8\u7684\u5e73\u94fa\u7a97\u53e3\u7ba1\u7406\u5668", "title_en": "Cardboard; a scrollable tiling window manager", "transed": 1, "url": "https://www.ctrl.blog/entry/cardboardwm.html", "via": "", "real_tags": ["\u6eda\u52a8", "tiling", "\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074280, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b80\u5355\u6613\u7528\u3002npm\u5b89\u88c5caxa\u5e76\u4ece\u547d\u4ee4\u884c\u8c03\u7528caxa\u3002\u65e0\u9700\u58f0\u660e\u8981\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1b\u65e0\u9700\u5c06\u5e94\u7528\u7a0b\u5e8f\u6346\u7ed1\u5230\u5355\u4e2a\u6587\u4ef6\u4e2d\u3002\n\u652f\u6301\u4efb\u4f55\u7c7b\u578b\u7684\u8282\u70b9\u3002js\u9879\u76ee\uff0c\u5305\u62ec\u90a3\u4e9b\u5e26\u6709\u672c\u673a\u6a21\u5757\u7684\u9879\u76ee\uff08\u4f8b\u5982\uff0csharp\u3001@leafac/sqlite\uff08\u65e0\u803b\u7684\u63d2\u4ef6\uff01\uff09\uff0c\u548c\u5176\u4ed6\u4eba\uff09\u3002\n\u76f8\u5bf9\u8f83\u5c0f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u201c\u4f60\u597d\uff0c\u4e16\u754c\uff01\u201d\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u91cf\u7ea6\u4e3a30MB\uff0c\u4e0eGo\u76842MB\u76f8\u6bd4\u975e\u5e38\u7cdf\u7cd5\uff0c\u4e0eC\u768450KB\u76f8\u6bd4\u66f4\u7cdf\u7cd5\uff0c\u4f46\u4e0eNode\u7684\u5176\u4ed6\u6253\u5305\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u5b83\u662f\u540c\u7c7b\u4e2d\u6700\u597d\u7684\u3002js\u3002\n\u6ca1\u6709\u9b54\u6cd5\u3002\u4e0d\u9700\u8981\u904d\u5386require\uff08\uff09\u4ee5\u67e5\u627e\u8981\u5305\u542b\u7684\u6587\u4ef6\uff1b\u8282\u70b9\u6ca1\u6709\u8865\u4e01\u3002js\u6765\u6e90\u3002\n\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\uff08\u4f8b\u5982\uff0c\u4ecemacOS\u5f00\u53d1\u673a\u5668\u6784\u5efaWindows\u53ef\u6267\u884c\u6587\u4ef6\uff09\u3002\n\u4e0d\u652f\u6301\u4f7f\u7528\u8282\u70b9\u6253\u5305\u3002js\u7248\u672c\u4e0e\u8fd0\u884ccaxa\u7684\u7248\u672c\u4e0d\u540c\uff08\u4f8b\u5982\uff0c\u5c06Node.js 15\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u540c\u65f6\u5c06caxa\u4e0eNode.js 14\u6346\u7ed1\u5728\u4e00\u8d77\uff09\u3002\n\u5efa\u7b51\u4f8b\u5982\uff0c\u7528tsc\u7f16\u8bd1TypeScript\uff0c\u7528webpack\u6253\u5305\uff0c\u4ee5\u53ca\u4efb\u4f55\u4f60\u9700\u8981\u7684\u4e1c\u897f\u6765\u8ba9\u9879\u76ee\u51c6\u5907\u597d\u5f00\u59cb\u3002\u901a\u5e38\uff0c\u8fd9\u662fnpm\u51c6\u5907\u811a\u672c\u4e2d\u8981\u7528\u5230\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u524d\u4e00\u70b9\u4e2d\u7684npm ci\u53ef\u80fd\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e00\u70b9\u3002\n\u5982\u679c\u5305\u4e2d\u6709\u4e0d\u5e94\u5305\u542b\u7684\u6587\u4ef6\uff0c\u8bf7\u5c06\u5176\u4ece\u76ee\u5f55\u4e2d\u5220\u9664\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5220\u9664\u3002git\u76ee\u5f55\u3002\n\u60a8\u4e0d\u9700\u8981npm\u91cd\u590d\u6570\u636e\u6d88\u9664\u2014\u2014\u751f\u4ea7\uff0c\u56e0\u4e3acaxa\u5c06\u5728\u6784\u5efa\u76ee\u5f55\u4e2d\u4e3a\u60a8\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\uff08\u5426\u5219\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5npm\u91cd\u590d\u6570\u636e\u6d88\u9664--\u751f\u4ea7\uff0c\u60a8\u5c06\u5378\u8f7dcaxa\uff0c\u5b83\u53ef\u80fd\u5e94\u8be5\u5728devdependences\u4e2d\u3002\uff09\n\u5efa\u8bae\u60a8\u5728\u6301\u7eed\u96c6\u6210\u670d\u52a1\u5668\u4e0a\u8fd0\u884ccaxa\u3002\uff08\u4f8b\u5982\uff0cGitHub\u64cd\u4f5c\u5bf9\u5b58\u50a8\u5e93\u8fdb\u884c\u6d45\u5c42\u83b7\u53d6\uff0c\u56e0\u6b64\u5220\u9664.git\u76ee\u5f55\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\uff0c\u4f46\u60a8\u59cb\u7ec8\u53ef\u4ee5\u4f7f\u7528--exclude advanced\u9009\u9879\u6765\u5b8c\u6210\u8fd9\u9879\u64cd\u4f5c\u3002\uff09\n$npx caxa\u2014\u2014\u5e2e\u52a9\u7528\u6cd5\uff1acaxa[\u9009\u9879]&lt\uff1b\u547d\u4ee4&gt\uff1b\u5305\u8282\u70b9\u3002\u5c06js\u5e94\u7528\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u53c2\u6570\uff1a\u6bcf\u6b21\u8c03\u7528\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u547d\u4ee4\u5c06\u8fd0\u884c\u8be5\u547d\u4ee4\uff0c\u5e76\u5c06\u53ef\u9009\u53c2\u6570\u4f20\u9012\u7ed9\u8be5\u547d\u4ee4\u3002\u8def\u5f84\u5fc5\u987b\u662f\u7edd\u5bf9\u7684\u3002\u201c{caxa}}\u201d\u5360\u4f4d\u7b26\u5c06\u66ff\u6362\u8fd0\u884c\u5305\u7684\u6587\u4ef6\u5939\u3002\u201cnode\u201d\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u5728\u201c{caxa}}/node_modules/\u201d\u4e0a\u627e\u5230\u3002bin/\u8282\u70b9'\u3002\u4f7f\u7528\u53cc\u5f15\u53f7\u5206\u9694\u547d\u4ee4\u548c\u6bcf\u4e2a\u53c2\u6570\u3002\u9009\u9879\uff1a-V\uff0c--version\u8f93\u51fa\u7248\u672c\u53f7-i\uff0c--input&lt\uff1b\u8f93\u5165&gt\uff1b\u8981\u6253\u5305\u7684\u8f93\u5165\u76ee\u5f55-o\u3001 --\u8f93\u51fa&lt\uff1b\u4ea7\u91cf&gt\uff1b\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3002\u5728Windows\u4e0a\u5fc5\u987b\u4ee5\u201c\u201d\u7ed3\u5c3e\u3002exe'\u3002\u5728macOS\u4e2d\u53ef\u80fd\u4f1a\u4ee5'\u7ed3\u5c3e\u3002\u201c\u5e94\u7528\u7a0b\u5e8f\u201d\u751f\u6210macOS\u5e94\u7528\u7a0b\u5e8f\u5305\u3002\u5728macOS\u548cLinux\u4e2d\uff0c\u53ef\u80fd\u4ee5'\u7ed3\u5c3e\u3002sh\u2019\u4f7f\u7528Shell Stub\uff0c\u5360\u7528\u7684\u7a7a\u95f4\u8f83\u5c0f\uff0c\u4f46\u53d6\u51b3\u4e8e\u6700\u7ec8\u7528\u6237\u673a\u5668\u4e0a\u5b89\u88c5\u7684\u4e00\u4e9b\u5de5\u5177\uff0c\u4f8b\u5982\u201ctar\u201d\u3001\u201ctail\u201d\u7b49\u7b49-f\u3001 --\u5f3a\u5236[\u9ad8\u7ea7]\u8986\u76d6\u8f93\u51fa\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\uff08\u9ed8\u8ba4\u503c\uff1atrue\uff09-F\uff0c-no force-e\uff0c--exclude&lt\uff1b\u8def\u5f84&gt\uff1b[\u9ad8\u7ea7]\u4ece\u751f\u6210\u4e2d\u6392\u9664\u7684\u8def\u5f84\u3002\u8def\u5f84\u88ab\u4f20\u9012\u5230https://github.com/sindresorhus/globby\u5339\u914d\u7684\u8def\u5f84\u5c06\u88ab\u6392\u9664\u3002[\u8d85\u7ea7\u9ad8\u7ea7\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528]\u5982\u679c\u4f60\u60f3\u6a21\u4eff'-include'\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528'-exclude&#34*&#34; &#34;.*&#34;  &#34;!\u5305\u542b&#34\uff1b\u2026'\u7684\u8def\u5f84\u3002\u201c--include\u201d\u7684\u95ee\u9898\u662f\uff0c\u5982\u679c\u60a8\u66f4\u6539\u4e86\u9879\u76ee\u7ed3\u6784\uff0c\u4f46\u5fd8\u8bb0\u4e86\u66f4\u6539caxa\u8c03\u7528\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u6253\u5305\u7684\u7248\u672c\u4e2d\uff0c\u4e8b\u60c5\u624d\u4f1a\u5fae\u5999\u5730\u5931\u8d25-d\u3001 --\u91cd\u590d\u6570\u636e\u6d88\u9664[\u9ad8\u7ea7]\u5728\u751f\u6210\u76ee\u5f55\u4e0a\u8fd0\u884c\u201cnpm dedupe--production\u201d\u3002\uff08\u9ed8\u8ba4\u503c\uff1atrue\uff09-D\uff0c--\u65e0\u91cd\u590d\u6570\u636e\u6d88\u9664-p\uff0c--prepare\u547d\u4ee4&lt\uff1b\u6307\u6325\u90e8&gt\uff1b\u6253\u5305\u65f6\u5728\u751f\u6210\u76ee\u5f55\u4e0a\u8fd0\u884c\u7684[Advanced]\u547d\u4ee4-n\u3001 --\u5305\u542b\u8282\u70b9[\u9ad8\u7ea7]\u590d\u5236\u8282\u70b9\u3002js\u53ef\u6267\u884c\u6587\u4ef6\u5230{caxa}/node_modules/\u3002bin/\u8282\u70b9'\u3002\uff08\u9ed8\u8ba4\u503c\uff1atrue\uff09-N\uff0c--no include\u8282\u70b9-s\uff0c--stub&lt\uff1b\u8def\u5f84&gt\uff1b[Advanced]\u6307\u5411\u5b58\u6839\u7684\u8def\u5f84--\u6807\u8bc6\u7b26&lt\uff1b\u6807\u8bc6\u7b26&gt\uff1b[Advanced]\u6784\u5efa\u6807\u8bc6\u7b26\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u89e3\u5305\u7684\u8def\u5f84-b\u3001 --\u5220\u9664\u751f\u6210\u76ee\u5f55[Advanced]\u5728\u751f\u6210\u540e\u5220\u9664\u751f\u6210\u76ee\u5f55\u3002\uff08\u9ed8\u8ba4\u503c\uff1atrue\uff09-B\uff0c-no remove build directory-m\uff0c--uncompression message&lt\uff1b\u4fe1\u606f&gt\uff1b[\u9ad8\u7ea7]\u89e3\u538b\u65f6\u663e\u793a\u7684\u6d88\u606f\uff0c\u4f8b\u5982\uff0c\u201c\u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u8bf7\u7a0d\u5019\u2026\u2026\u201d-h\u3001 --\u5e2e\u52a9\u663e\u793a\u547d\u4ee4\u793a\u4f8b\u7684\u5e2e\u52a9\uff1aWindows:&gt\uff1bcaxa\u2014\u2014\u8f93\u5165\u548c#34\uff1b\u793a\u4f8b/echo\u547d\u4ee4\u884c\u53c2\u6570&#34--\u8f93\u51fa&#34\uff1becho\u547d\u4ee4\u884c\u53c2\u6570\u3002exe&#34\uff1b\u2014\u2014&#34;{{caxa}}/node_modules/\u3002bin/node&#34&#34;{{caxa}}/index\u3002js&#34&#34;\u6709\u4e9b&#34&#34;\u5d4c\u5165\u53c2\u6570&#34&#34;--\u8fd9\u662f\u547d\u4ee4\u7684\u4e00\u90e8\u5206#34\uff1bmacOS/Linux:$caxa\u2014\u2014\u8f93\u5165\u548c#34\uff1b\u793a\u4f8b/echo\u547d\u4ee4\u884c\u53c2\u6570&#34--\u8f93\u51fa&#34\uff1becho\u547d\u4ee4\u884c\u53c2\u6570&#34\uff1b\u2014\u2014&#34;{{caxa}}/node_modules/\u3002bin/node&#34&#34;{{caxa}}/index\u3002js&#34&#34;\u6709\u4e9b&#34&#34;\u5d4c\u5165\u53c2\u6570&#34&#34;--\u8fd9\u662f\u547d\u4ee4\u7684\u4e00\u90e8\u5206#34\uff1bmacOS\uff08\u5e94\u7528\u7a0b\u5e8f\u5305\uff09\uff1a$caxa\u2014\u2014\u8f93\u5165\u548c#34\uff1b\u793a\u4f8b/echo\u547d\u4ee4\u884c\u53c2\u6570&#34--\u8f93\u51fa&#34\uff1bEcho\u547d\u4ee4\u884c\u53c2\u6570\u3002\u5e94\u7528\u7a0b\u5e8f&#34\uff1b\u2014\u2014&#34;{{caxa}}/node_modules/\u3002bin/node&#34&#34;{{caxa}}/index\u3002js&#34&#34;\u6709\u4e9b&#34&#34;\u5d4c\u5165\u53c2\u6570&#34&#34;--\u8fd9\u662f\u547d\u4ee4\u7684\u4e00\u90e8\u5206#34\uff1bmacOS/Linux\uff08Shell\u5b58\u6839\uff09\uff1a$caxa\u2014\u2014\u8f93\u5165\u548c#34\uff1b\u793a\u4f8b/echo\u547d\u4ee4\u884c\u53c2\u6570&#34--\u8f93\u51fa&#34\uff1becho\u547d\u4ee4\u884c\u53c2\u6570\u3002sh&#34\uff1b\u2014\u2014&#34;{{caxa}}/node_modules/\u3002bin/node&#34&#34;{{caxa}}/index\u3002js&#34&#34;\u6709\u4e9b&#34&#34;\u5d4c\u5165\u53c2\u6570&#34&#34;--\u8fd9\u662f\u547d\u4ee4\u7684\u4e00\u90e8\u5206#34\uff1b\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528caxa\u7684\u771f\u5b9e\u4f8b\u5b50\u3002\u8fd9\u4e2a\u4f8b\u5b50\u5305\u62ecWindows\u3001macOS\u548cLinux\u7684\u6253\u5305\uff1b\u4f7f\u7528GitHub\u53d1\u5e03\u6807\u7b7e\u91ca\u653e\u8d44\u4ea7\uff1b\u901a\u8fc7GitHub Actions\u5de5\u4ef6\uff0c\u4e3a\u6bcf\u4e00\u6b21\u63a8\u9001\u5206\u53d1\u5185\u90e8\u4eba\u5458\u6784\u5efa\uff1b\u4ee5\u53ca\u4f7f\u7528rsync\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u90e8\u7f72\u5230\u670d\u52a1\u5668\uff08\u4ee5\u53ca\u53d1\u5e03npm\u5305\uff0c\u4f46\u8fd9\u8d85\u51fa\u4e86caxa\u7684\u8303\u56f4\uff09\u3002\n\u4e0e\u5176\u4ece\u547d\u4ee4\u884c\u8c03\u7528caxa\uff0c\u4e0d\u5982\u7f16\u5199\u4e00\u4e2a\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff1a\n\u4ece&#34\u8fdb\u53e3caxa\uff1b\u5361\u8428&#34\uff1b\uff08\u5f02\u6b65\uff08\uff09=&gt\uff1b{wait caxa\uff08{input:&#34\uff1bexamples/echo\u547d\u4ee4\u884c\u53c2\u6570&#34\uff1b\uff0coutput:&#34\uff1becho\u547d\u4ee4\u884c\u53c2\u6570&#34\uff1b{caxa}/node_modules/.bin/node#34\uff1b&#34\uff1b{caxa 34}/index.js 34\uff1b\uff0c&#34\uff1b&#34\uff1b\u4e00\u4e9b&##\u5d4c\u5165\u53c2\u6570&#( ) ;\n\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u6d41\u7a0b\u3002\u5e73\u53f0\u6765\u786e\u5b9a\u60a8\u6b63\u5728\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u63d0\u4f9b\u9002\u5f53\u7684\u53c2\u6570\u3002\n\u5982\u679c\u5e0c\u671b\u8fd0\u884c\u975enode\u7684\u547d\u4ee4\uff0c\u4f8b\u5982ts node\uff0c\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u8def\u5f84\u6765\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728macOS/Linux\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8fd9\u53ea\u662fmacOS/Linux\u4e0a\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5fc5\u987b\u542f\u7528\u53ef\u6267\u884c\u6a21\u5f0f\u624d\u80fd\u8fd0\u884c\u3002\u60a8\u53ef\u4ee5\u5728\u7c7b\u4f3c\u4e8e-rwxr-xr-x[\u2026]\u7684\u8f93\u51fa\u4e0a\u4f7f\u7528ls-l:\u4ece\u547d\u4ee4\u884c\u68c0\u67e5\u6a21\u5f0f/bin/node\uff0cxs\u8868\u793a\u8be5\u6587\u4ef6\u662f\u53ef\u6267\u884c\u7684\u3002\n\u4ee5\u4e0b\u662f\u5206\u53d1\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u4ee5\u786e\u4fdd\u4fdd\u7559\u6587\u4ef6\u6a21\u5f0f\uff1a\n\u5236\u4f5c\u4e00\u4e2a\u9632\u6c34\u5e03\u6216\u62c9\u94fe\u3002\u6587\u4ef6\u6a21\u5f0f\u662f\u901a\u8fc7\u538b\u7f29/\u89e3\u538b\u6765\u4fdd\u6301\u7684\uff0cmacOS/Linux\uff08\u65e0\u8bba\u5982\u4f55\uff0c\u5927\u591a\u6570\u53d1\u884c\u7248\uff09\u81ea\u5e26\u4e86\u89e3\u538btarball\u548czips\u7684\u8f6f\u4ef6\uff0c\u7528\u6237\u53ea\u9700\u53cc\u51fb\u6587\u4ef6\u5373\u53ef\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1aWindows 10\u8fd8\u9644\u5e26\u4e86tar\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u547d\u4ee4\u4e5f\u9002\u7528\u4e8eWindows\u3002\u4e0d\u5e78\u7684\u662f\uff0cWindows\u4e0a\u7684\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u4e0d\u652f\u6301\u89e3\u538b\u7f29\u6587\u4ef6\u3002\u53cc\u51fbtgz\uff08\u4f46\u5b83\u652f\u6301\u89e3\u538b\u7f29.zip\uff09\u3002\u5e78\u8fd0\u7684\u662f\uff0cWindows\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u6587\u4ef6\u6a21\u5f0f\u7684\u95ee\u9898\uff08\u5b83\u53ea\u662f\u67e5\u627e.exe\u6269\u5c55\u540d\uff09\uff0c\u56e0\u6b64\u76f4\u63a5\u5206\u53d1caxa\u8f93\u51fa\u662f\u5408\u9002\u7684\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53ef\u80fd\u66f4\u6709\u610f\u4e49\uff0c\u4f46\u5b83\u9700\u8981\u7528\u6237\u4f7f\u7528\u547d\u4ee4\u884c\u3002\ncaxa\u4e0d\u4f1a\u5bf9\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u4efb\u4f55\u7279\u6b8a\u64cd\u4f5c\uff0c\u56e0\u6b64\u6ca1\u6709\u5185\u7f6e\u7684\u65b9\u6cd5\u6765\u5224\u65ad\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u4ece\u6253\u5305\u7248\u672c\u8fd0\u884c\u3002\u8fd9\u662fcaxa\u5c3d\u53ef\u80fd\u8fdc\u79bb\u5c18\u56a3\u7684\u7cbe\u795e\u6c14\u8d28\u7684\u4e00\u90e8\u5206\u3002\u6b64\u5916\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u505a\u6cd5\uff1a\u4e00\u4e2a\u81ea\u6211\u610f\u8bc6\u5f88\u5f3a\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u96be\u63a8\u7406\u548c\u6d4b\u8bd5\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u771f\u7684\u9700\u8981\u77e5\u9053\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u662f\u4ece\u6253\u5305\u7684\u7248\u672c\u8fd0\u884c\u7684\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u4e0d\u826f\u7a0b\u5ea6\uff1a\n\u63a5\u6536\u4e00\u4e2a\u5d4c\u5165\u5230\u6253\u5305\u8fc7\u7a0b\u4e2d\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4f8b\u5982\uff0c&#34\uff1b{{caxa}}/node_modules/\u3002bin/node&#34&#34;\u5e94\u7528js&#34&#34;--caxa&#34\uff1b\u3002\n\u5373\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u4f4d\u4e8e\u4e34\u65f6\u76ee\u5f55\u4e2d\uff0c\u8c03\u7528\u6253\u5305\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e5f\u4f1a\u88ab\u4fdd\u7559\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fdb\u7a0b\u6765\u68c0\u67e5\u5b83\u3002cwd\uff08\uff09\u3002\u8fd9\u53ef\u80fd\u4e0d\u662f\u4f60\u5fc5\u987b\u8003\u8651\u7684caxa\u95ee\u9898\uff0c\u53ea\u8981\u628a\u5b83\u505a\u597d\u5c31\u884c\u4e86\u3002\n\u636e\u6211\u6240\u77e5\uff0c\u4e3aNode\u521b\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u95ee\u9898\u7684\u6839\u6e90\u3002js\u9879\u76ee\u662f\u672c\u673a\u6a21\u5757\u3002\u672c\u673a\u6a21\u5757\u662f\u81f3\u5c11\u90e8\u5206\u7528C/C++\u7f16\u5199\u7684\u5e93\uff0c\u4f8b\u5982sharp\u3001@leafac/sqlite\uff08\u65e0\u803b\u7684\u63d2\u4ef6\uff01\uff09\uff0c\u7b49\u7b49\u3002\u672c\u673a\u6a21\u5757\u81f3\u5c11\u6709\u4e09\u4e2a\u95ee\u9898\u4e0e\u6b64\u76f8\u5173\uff1a\n\u8981\u5b89\u88c5\u8fd9\u4e9b\u5e93\uff08C/C++\u7f16\u8bd1\u5668\u3001make\u3001Python\u7b49\u7b49\uff09\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u8fd0\u884c\u6b63\u5e38\u7684C/C++\u6784\u5efa\u7cfb\u7edf\u3002\u5728Windows\u4e0a\uff0c\u5fc5\u987b\u5b89\u88c5Windows\u751f\u6210\u5de5\u5177\u3002\u5728macOS\u4e0a\uff0c\u5fc5\u987b\u4f7f\u7528xcode select--install\u5b89\u88c5\u547d\u4ee4\u884c\u5de5\u5177\uff08CLT\uff09\u3002\u5728Linux\u4e0a\uff0c\u8fd9\u53d6\u51b3\u4e8e\u53d1\u884c\u7248\uff0c\u4f46\u5728Ubuntu sudo\u4e0a\uff0capt install build essential\u5c31\u8db3\u591f\u4e86\u3002\n\u672c\u673a\u6a21\u5757\u7684\u5b89\u88c5\u4e0d\u662f\u8de8\u5e73\u53f0\u7684\u3002JavaScript\u4f9d\u8d56\u9879\u53ef\u4ee5\u4ece\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0e\u6b64\u4e0d\u540c\uff0c\u672c\u673a\u6a21\u5757\u751f\u6210\u7279\u5b9a\u4e8e\u5b89\u88c5\u4f9d\u8d56\u9879\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u7f16\u8bd1C/C++\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u4ee5\u7684\u5f62\u5f0f\u51fa\u73b0\u5728node_modules\u76ee\u5f55\u4e2d\u3002\u8282\u70b9\u6587\u4ef6\u3002\n\u636e\u6211\u6240\u77e5\uff0c\u8bfa\u5fb7\u3002js\u575a\u6301\u4ece\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u52a0\u8f7d\u672c\u673a\u6a21\u5757\u3002\u53e6\u4e00\u4e2a\u8282\u70b9\u3002js\u6253\u5305\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\uff1a\u8981\u4e48\u4fee\u8865\u8282\u70b9\u3002js\u6b3a\u9a97\u5b83\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u52a0\u8f7d\u672c\u673a\u6a21\u5757\uff1b\u6216\u8005\u4ed6\u4eec\u628a\u3002\u5728\u542f\u52a8\u7a0b\u5e8f\u4e4b\u524d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u521b\u5efa\u8282\u70b9\u6587\u4ef6\u3002\ncaxa\u5efa\u7acb\u5728\u63a8\u6746\u7684\u7406\u5ff5\u4e4b\u4e0a\u3002\u8282\u70b9\u6587\u4ef6\u4f4d\u4e8e\u4e34\u65f6\u4f4d\u7f6e\uff0c\u4f46\u6700\u7ec8\u7684\u7ed3\u679c\u662f\uff1acaxa\u53ef\u6267\u884c\u6587\u4ef6\u662f\u4e00\u79cd\u81ea\u89e3\u538b\u5b58\u6863\u5f62\u5f0f\uff0c\u5305\u542b\u6574\u4e2a\u9879\u76ee\u548c\u8282\u70b9\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5f53\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884ccaxa\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c\u5b83\u4f1a\u5c06\u6574\u4e2a\u9879\u76ee\uff08\u4ee5\u53ca\u6346\u7ed1\u7684\u8282\u70b9\u53ef\u6267\u884c\u6587\u4ef6\uff09\u7684\u6e90\u6587\u4ef6\u63d0\u53d6\u5230\u4e00\u4e2a\u4e34\u65f6\u4f4d\u7f6e\u3002\u4ece\u90a3\u91cc\uff0c\u5b83\u53ea\u9700\u8c03\u7528\u6253\u5305\u9879\u76ee\u65f6\u8ba9\u5b83\u8fd0\u884c\u7684\u4efb\u4f55\u547d\u4ee4\u3002\n\u4e00\u5f00\u59cb\uff0c\u8fd9\u4f3c\u4e4e\u6210\u672c\u592a\u9ad8\uff0c\u4f46\u5b9e\u9645\u4e0a\u57fa\u672c\u4e0a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff1a\u9996\u5148\u89e3\u538b\u7f29\u9879\u76ee\u4e0d\u4f1a\u82b1\u8d39\u592a\u957f\u65f6\u95f4\uff0c\u800c\u4e14\u8fd0\u884c\u7a0b\u5e8f\u540ecaxa\u4e0d\u4f1a\u6e05\u7406\u4e34\u65f6\u76ee\u5f55\uff0c\u56e0\u6b64\u540e\u7eed\u8c03\u7528\u4f1a\u88ab\u6709\u6548\u7f13\u5b58\u5e76\u5728\u6ca1\u6709\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u8d85\u7ea7\u5f3a\u5927\uff01caxa\u652f\u6301\u4efb\u4f55\u7c7b\u578b\u7684\u9879\u76ee\uff0c\u5305\u62ec\u90a3\u4e9b\u5177\u6709\u672c\u673a\u4f9d\u8d56\u9879\u7684\u9879\u76ee\uff0c\u56e0\u4e3a\u8fd0\u884ccaxa\u53ef\u6267\u884c\u6587\u4ef6\u7b49\u540c\u4e8e\u5b89\u88c5\u8282\u70b9\u3002\u7528\u6237\u673a\u5668\u4e0a\u7684js\u3002caxa\u751f\u6210\u5305\u7684\u901f\u5ea6\u5f88\u5feb\uff0c\u56e0\u4e3a\u751f\u6210\u81ea\u89e3\u538b\u5f52\u6863\u6587\u4ef6\u53ea\u9700\u8fde\u63a5\u4e00\u4e9b\u6587\u4ef6\u3002caxa\u652f\u6301\u4efb\u4f55\u7248\u672c\u7684\u8282\u70b9\u3002js\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u5c06\u8c03\u7528\u5b83\u7684\u8282\u70b9\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230\u81ea\u89e3\u538b\u5f52\u6863\u6587\u4ef6\u4e2d\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\u901a\u8fc7\u538b\u7f29\u5f52\u6863\u6587\u4ef6\uff0ccaxa\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0e\u5176\u4ed6\u6253\u5305\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\u81ea\u7136\u66f4\u5c0f\u3002\u663e\u7136\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u538b\u7f29\u8fd9\u4e9b\u5176\u4ed6\u5de5\u5177\u7684\u8f93\u51fa\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u80fd\u65e0\u8bba\u5982\u4f55\u90fd\u60f3\u4fdd\u7559\u6587\u4ef6\u6a21\u5f0f\uff08\u8bf7\u53c2\u89c1\u00a7\u4fdd\u7559\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u53ef\u6267\u884c\u6a21\u5f0f\uff09\u3002\n\u4f60\u77e5\u9053\u5417\uff0c\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u4e1c\u897f\u9644\u52a0\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5b83\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u5417\uff1f\u9002\u7528\u4e8eWindows\u3001macOS\u548cLinux\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u662f\u5982\u6b64\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5728macOS/Linux\u4e0a\u8bd5\u7528\u7684\u793a\u4f8b\uff1a\n$cp$\uff08\u8fd9\u662fls\uff09/ls#\u5c06\u201cls\u201d\u4e8c\u8fdb\u5236\u6587\u4ef6\u590d\u5236\u5230\u5f53\u524d\u76ee\u5f55\u4e2d\uff0c\u4ee5\u4f7f\u7528\u5b83$/ls#\u5217\u51fa\u6587\u4ef6\uff0c\u8bc1\u660e\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u8fd0\u884c$echo ANYTHING&gt&gt\uff1bls#\u5728\u4e8c\u8fdb\u5236$tail\u4e2d\u6dfb\u52a0\u6750\u6599/ls#\u4f60\u5e94\u8be5\u5728\u8f93\u51fa$\u7684\u672b\u5c3e\u770b\u5230'ANYTHING'/ls#\u8f93\u51fa\u5e94\u4e0e\u4e4b\u524d\u76f8\u540c\uff01$\u597d\u4e86\uff0c\u8003\u8bd5\u7ed3\u675f\u4e86\ncaxa\u81ea\u89e3\u538b\u6863\u6848\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a1\u3002\u5b58\u6839\uff1b2.\u6863\u6848\uff1b\u4e09,\u3002\u9875\u811a\u3002\u8fd9\u662fcaxa\u751f\u4ea7\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8fd9\u4e9b\u90e8\u4ef6\u7684\u5e03\u5c40\uff1a\n\u5b58\u6839\u548c\u5b58\u6863\u7531caxacaxa\u5b57\u7b26\u4e32\u5206\u9694\u3002\u6863\u6848\u548c\u9875\u811a\u4e4b\u95f4\u7528\u65b0\u884c\u9694\u5f00\u3002\u8fd9\u79cd\u5e03\u5c40\u5141\u8bb8caxa\u53ea\u9700\u4ece\u6587\u4ef6\u672b\u5c3e\u5411\u540e\u770b\uff0c\u76f4\u5230\u5230\u8fbe\u6362\u884c\u7b26\u5373\u53ef\u627e\u5230\u9875\u811a\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884ccaxa\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u5f52\u6863\u6587\u4ef6\u9700\u8981\u89e3\u538b\u7f29\uff0c\u90a3\u4e48caxa\u53ef\u4ee5\u901a\u8fc7\u4ece\u5f00\u59cb\u5411\u524d\u770b\uff0c\u76f4\u5230\u5230\u8fbecaxa\u5206\u9694\u7b26\uff0c\u6765\u627e\u5230\u5f52\u6863\u6587\u4ef6\u7684\u5f00\u59cb\u3002\n\u4f7f\u7528caxa\u6784\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5e76\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u4eb2\u81ea\u68c0\u67e5\uff08Visual Studio\u4ee3\u7801\u8981\u6c42\u60a8\u786e\u8ba4\u662f\u5426\u8981\u6253\u5f00\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u5728\u8fd9\u4e4b\u540e\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff09\u3002\u60a8\u5e94\u8be5\u80fd\u591f\u5728\u5b58\u6839\u548c\u5f52\u6863\u6587\u4ef6\u4e4b\u95f4\u627e\u5230caxacaxa\u5206\u9694\u7b26\uff0c\u4ee5\u53ca\u672b\u5c3e\u7684\u9875\u811a\u3002\n\u60a8\u53ef\u4ee5\u5728stubs/stub\u4e2d\u627e\u5230\u5b58\u6839\u7684\u6e90\u4ee3\u7801\u3002\u53bb\u60a8\u53ef\u4ee5\u4f7f\u7528npm run build:stubs\u6784\u5efa\u5b58\u6839\u3002\u60a8\u5c06\u9700\u8981\u4e00\u4e2aGo\u7f16\u8bd1\u5668\uff0c\u4f46\u5b58\u6839\u9664\u4e86Go\u6807\u51c6\u5e93\u4e4b\u5916\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u9879\uff0c\u56e0\u6b64\u65e0\u9700\u8bbe\u7f6eGo\u6a21\u5757\u6216\u914d\u7f6e$GOPATH\u3002npm\u5305\u4e2d\u6709\u9488\u5bf9\u4e3b\u8981\u5e73\u53f0\u7684\u9884\u7f16\u8bd1\u5b58\u6839\u3002\u5982\u679c\u60a8\u5e0c\u671b\u9a8c\u8bc1\u5b58\u6839\u662f\u5426\u771f\u7684\u662f\u4ece\u5b58\u6839/\u5b58\u6839\u7f16\u8bd1\u800c\u6765\u3002go\uff0c\u60a8\u53ef\u4ee5\u81ea\u5df1\u91cd\u65b0\u7f16\u8bd1\u5b83\uff0c\u56e0\u4e3ago\u7f16\u8bd1\u5668\u4f3c\u4e4e\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u4e14\u603b\u662f\u5728\u7ed9\u5b9a\u76f8\u540c\u6e90\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u81f3\u5c11\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\u662f\u8fd9\u6837\uff09\u3002\n\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5f88\u6f02\u4eae\uff1a\u6211\u4eec\u4f7f\u7528Go\u7684\u80fd\u529b\u6765\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u5f15\u5bfc\u8282\u70b9\u3002js\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u80fd\u529b\u3002\n\u8fd9\u662f\u4e00\u4e2aJSON\uff0c\u5305\u542bcaxa\u8fd0\u884c\u9879\u76ee\u6240\u9700\u7684\u989d\u5916\u4fe1\u606f\uff1a\u6700\u91cd\u8981\u7684\u662f\uff0c\u60a8\u8981\u8fd0\u884c\u7684\u547d\u4ee4\uff0c\u8fd8\u6709\u4e00\u4e2a\u7528\u4e8e\u89e3\u538b\u7f29\u5f52\u6863\u6587\u4ef6\u7684\u6807\u8bc6\u7b26\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\u6ca1\u6709\u8282\u70b9\u3002\u5173\u4e8e\u5b58\u6839\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u89e3\u538b\u7f29\u4efb\u4f55\u7c7b\u578b\u7684\u5b58\u6863\uff0c\u5e76\u5bf9\u8f93\u51fa\u8fd0\u884c\u4efb\u610f\u547d\u4ee4\uff01\u4ece\u96f6\u5f00\u59cb\u6784\u5efa\u81ea\u89e3\u538b\u5f52\u6863\u76f8\u5bf9\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728macOS\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n$cp\u5b58\u6839\u548cls caxa$tar-czf-README\u3002md&gt&gt\uff1bls caxa$printf&#34\uff1b\\n{&#34\uff1b\u6807\u8bc6\u7b26\\&#34\uff1b\uff1a\\&#34\uff1b\u4e00\u4e2als-caxa/an-arbitative-STRING-THAT-SHOULD-BE-DIFFERENT-TIME \\&#34\uff1b\\&#34\uff1b\u547d\u4ee4\\&#34\uff1b[\\&#34\uff1bls\\&&#34\uff1b\uff0c\\&#34\uff1b{caxa 34\uff1b]&#34;  &gt&gt\uff1b\u4e00\u4e2als caxa$/ls caxa\u81ea\u8ff0\u6587\u4ef6\u3002\u533b\u5b66\u535a\u58eb\n\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5728\u7cfb\u7edf\u4e0a\u627e\u5230\u4f4d\u7f6e\uff1a\n\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4ea4\u53c9\u7f16\u8bd1\uff1f\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4e0d\u540c\u7248\u672c\u7684\u8282\u70b9\u3002\u9664\u4e86\u8c03\u7528caxa\u7684\u7248\u672c\u4e4b\u5916\uff0c\u8fd8\u6709js\u5417\uff1f\n\u6211\u76f8\u4fe1\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a\u53ef\u4ee5\u4e0e\u4f60\u8ba1\u5212\u652f\u6301\u7684\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u534f\u540c\u5de5\u4f5c\u7684\u73af\u5883\u3002\u5b83\u4eec\u53ef\u80fd\u4e0d\u662f\u60a8\u7684\u4e3b\u8981\u5f00\u53d1\u73af\u5883\uff0c\u4f46\u5b83\u4eec\u5e94\u8be5\u80fd\u591f\u6784\u5efa\u60a8\u7684\u9879\u76ee\u5e76\u8ba9\u60a8\u8fdb\u884c\u6d4b\u8bd5\u3002\u81f3\u5c11\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528\u50cfGitHub Actions\u8fd9\u6837\u7684\u670d\u52a1\uff0c\u5b83\u5141\u8bb8\u60a8\u5728Windows\u3001macOS\u548cLinux\u4e0a\u8fd0\u884c\u6784\u5efa\u4efb\u52a1\u548c\u6d4b\u8bd5\u3002\n\uff08\u6bd4\u5982\uff0c\u6211\u4e70\u4e86\u4e00\u53f0\u7535\u8111\u5728caxa\u4e0a\u5de5\u4f5c\u3002\u8fd9\u662f\u652f\u6301\u6211\u5de5\u4f5c\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\uff01\uff09\n\u6700\u5c0f\u60ca\u559c\u539f\u5219\u3002\u4ea4\u53c9\u7f16\u8bd1\u65f6\uff08\u4f8b\u5982\uff0c\u4ecemacOS\u5f00\u53d1\u673a\u5668\u6784\u5efaWindows\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff0c\u6216\u7ed1\u5b9a\u4e0d\u540c\u7248\u672c\u7684\u8282\u70b9\u65f6\u3002js\uff08\u4f8b\u5982\uff0c\u5728\u8fd0\u884ccaxa\u548cNode.js 14\u65f6\u7ed1\u5b9aNode.js 15\uff09\uff0c\u6ca1\u6709\u76f4\u63a5\u7684\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6253\u5305\u7684\u9879\u76ee\u5c06\u4e0e\u672a\u6253\u5305\u7684\u7248\u672c\u8fd0\u884c\u76f8\u540c\u3002\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u672c\u673a\u6a21\u5757\uff0c\u90a3\u4e48\u4e8b\u60c5\u53ef\u80fd\u4f1a\u6210\u529f\uff0c\u4f46\u4e00\u65e6\u5f15\u5165\u4e86\u4e00\u4e2a\u60a8\u4e0d\u77e5\u9053\u662f\u672c\u673a\u7684\u65b0\u4f9d\u8d56\u9879\uff0c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5d29\u6e83\u3002\u672c\u673a\u4f9d\u8d56\u9879\u4e0d\u4ec5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4e0d\u540c\uff0c\u800c\u4e14\u5728\u4e0d\u540c\u7248\u672c\u7684\u8282\u70b9\u4e4b\u95f4\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002js\uff0c\u5982\u679c\u8fd9\u4e9b\u7248\u672c\u4e0d\u517c\u5bb9ABI\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6709\u65f6\u5728\u66f4\u65b0Node.js\u65f6\u5fc5\u987b\u518d\u6b21\u8fd0\u884cnpm\u5b89\u88c5\uff09\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\u5982\u4eca\uff0c\u6613\u4e8e\u4ea4\u53c9\u7f16\u8bd1\u7684\u9ec4\u91d1\u6807\u51c6\u662fGo\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5728Go\u4e2d\uff0c\u53ea\u8981\u5f15\u5165C\u4f9d\u8d56\u9879\uff08\u79f0\u4e3aCGO\uff09\uff0c\u4ea4\u53c9\u7f16\u8bd1\u4e5f\u4f1a\u6d88\u5931\u3002Go\u793e\u533a\u4e2d\u7684\u8bb8\u591a\u4eba\u4f3c\u4e4e\u90fd\u8bd5\u56fe\u901a\u8fc7\u907f\u514dCGO\u4f9d\u8d56\u6027\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u65f6\u4ed6\u4eec\u4f1a\u4e0d\u9057\u4f59\u529b\u5730\u5728\u7eafGo\u4e2d\u91cd\u65b0\u521b\u9020\u4e00\u5207\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u6709\u8da3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u975e\u53d1\u660e\u4e8e\u6b64\u7efc\u5408\u5f81\u75c5\u4f8b\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u672c\u673a\u6a21\u5757\u4f3c\u4e4e\u5728Node\u4e2d\u66f4\u4e3a\u666e\u904d\u3002js\u800c\u4e0d\u662fCGO\u6b63\u5728\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u5728caxa\u4e2d\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u662f\u4e00\u4ef6\u611a\u8822\u7684\u4e8b\u60c5\u3002\n\u5982\u679c\u60a8\u4ecd\u7136\u575a\u6301\u4ea4\u53c9\u7f16\u8bd1\u6216\u7f16\u8bd1\u4e0d\u540c\u7248\u672c\u7684Node\u3002js\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u5b58\u6839\u624b\u52a8\u6784\u5efa\u81ea\u89e3\u538b\u5b58\u6863\uff08\u8bf7\u53c2\u9605\u00a7\u4f7f\u7528\u4e0d\u5e26caxa\u7684\u81ea\u89e3\u538b\u5b58\u6863\uff09\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528https://www.npmjs.com/package/node\u4ee5\u66f4\u8f7b\u677e\u5730\u6346\u7ed1\u4e0d\u540c\u7248\u672c\u7684\u8282\u70b9\u3002js\u3002\nmacOS\u5e94\u7528\u7a0b\u5e8f\u5305\u53ea\u662f\u4e00\u4e2a\u5177\u6709\u7279\u5b9a\u7ed3\u6784\u7684\u6587\u4ef6\u5939\uff0c\u4ee5\u53ca\u4f4d\u4e8e\u7279\u5b9a\u4f4d\u7f6e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u521b\u5efamacOS\u5e94\u7528\u7a0b\u5e8f\u5305\u65f6\uff0ccaxa\u4e0d\u4f1a\u6784\u5efa\u81ea\u89e3\u538b\u5f52\u6863\uff0c\u800c\u662f\u5c06\u5e94\u7528\u7a0b\u5e8f\u590d\u5236\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u7684bash\u811a\u672c\u6765\u542f\u52a8\u8be5\u8fc7\u7a0b\u3002\nmacOS\u5e94\u7528\u7a0b\u5e8f\u5305\u53ef\u4ee5\u901a\u8fc7\u5728Finder\u4e2d\u53cc\u51fb\u6765\u8fd0\u884c\u3002\u5b83\u6253\u5f00\u4e86\u4e00\u4e2a\u7ec8\u7aef\u3002\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u5728\u60a8\u7684\u673a\u5668\u4e0a\u6784\u5efa\u7684\uff08\u8fd9\u5f88\u53ef\u80fd\u662f\u60a8\u7684\u7528\u6237\u7684\u60c5\u51b5\uff0c\u4ed6\u4eec\u53ef\u80fd\u4eceinternet\u4e0b\u8f7d\u4e86\u8be5\u5e94\u7528\u7a0b\u5e8f\uff09\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u8fd0\u884c\u5b83\u65f6\uff0cmacOS\u53ef\u80fd\u4f1a\u62b1\u6028\u7f3a\u5c11\u7b7e\u540d\u3002\u89e3\u51b3\u65b9\u6848\u662f\u8f6c\u5230\u7cfb\u7edf\u9996\u9009\u9879&gt\uff1b\u4fdd\u5b89\u53ca\uff1b\u9690\u79c1&gt\uff1b\u5e38\u89c4\uff0c\u7136\u540e\u5355\u51fb\u5141\u8bb8\u3002\u4f60\u5fc5\u987b\u6307\u5bfc\u4f60\u7684\u7528\u6237\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5b83\u76f8\u5f53\u4e8eGo\u5b58\u6839\uff0c\u53ea\u662f\u5b83\u66f4\u5c0f\uff0c\u56e0\u4e3a\u5b83\u53ea\u6709\u5341\u51e0\u884cBash\uff0c\u4f46\u5b83\u53d6\u51b3\u4e8e\u6700\u7ec8\u7528\u6237\u673a\u5668\u4e0a\u5b89\u88c5\u7684\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f8b\u5982tar\u3001tail\u7b49\u7b49\u3002\n\u5982\u679c\u60a8\u5bf9\u5176\u4e2d\u4e00\u4e2a\u529f\u80fd\u611f\u5174\u8da3\uff0c\u8bf7\u5c3d\u53ef\u80fd\u53d1\u9001\u8bf7\u6c42\uff0c\u6216\u8005\u81f3\u5c11\u8054\u7cfb\u6211\u5e76\u8bf4\u660e\u60a8\u7684\u5174\u8da3\uff0c\u6211\u53ef\u80fd\u4f1a\u627e\u5230\u5b83\u4eec\u3002\n\u5176\u4ed6\u538b\u7f29\u7b97\u6cd5\u3002\u76ee\u524d\uff0ccaxa\u4f7f\u7528tarball\uff0c\u5b83\u65e0\u5904\u4e0d\u5728\uff0c\u5728\u538b\u7f29/\u89e3\u538b\u7f29\u65f6\u95f4\u548c\u5f52\u6863\u5927\u5c0f\u65b9\u9762\u76f8\u5f53\u6709\u6548\u3002\u4f46\u662f\u8fd8\u6709\u66f4\u597d\u7684\u7b97\u6cd5\u2026\uff08\u53c2\u89c1https://github.com/leafac/caxa/issues/1.)\n\u6dfb\u52a0\u5bf9\u53ef\u6267\u884c\u6587\u4ef6\u7b7e\u540d\u7684\u652f\u6301\u3002\u53ef\u7b7e\u540d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u79cd\u7c7b\u6709\u9650\u5236\uff0c\u800ccaxa\u751f\u6210\u7684\u90a3\u79cd\u81ea\u89e3\u538b\u5f52\u6863\u6587\u4ef6\u53ef\u80fd\u662f\u4e0d\u53ef\u7b7e\u540d\u7684\uff08\u6211\u5bf9\u6b64\u77e5\u4e4b\u751a\u5c11\u2026\u2026\uff09\u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528Go\u7684\u652f\u6301\uff0c\u5c06\u6570\u636e\u5d4c\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff08\u8be5\u6587\u4ef6\u5728Go 1.16\u4e2d\u53d1\u5e03\uff09\u3002\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u6253\u5305\u9879\u76ee\u7684\u4eba\u6709\u4e00\u4e2a\u8fd0\u884c\u7684Go-build\u7cfb\u7edf\u3002\u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5728\u672b\u5c3e\u6dfb\u52a0\u5185\u5bb9\u3002Go\u5728\u6807\u51c6\u5e93\u4e2d\u6709\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u5de5\u5177\uff0c\u4f46\u662f\u6253\u5305\u7a0b\u5e8f\u672c\u8eab\uff08\u4e0d\u4ec5\u662f\u5b58\u6839\uff09\u5fc5\u987b\u7528Go\u7f16\u5199\uff0c\u5e76\u4e14\u5728\u547d\u4ee4\u884c\u4e0a\u901a\u8fc7\u7b80\u5355\u5730\u8fde\u63a5\u6587\u4ef6\u6765\u521b\u5efa\u5305\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u6dfb\u52a0\u5bf9\u81ea\u5b9a\u4e49\u56fe\u6807\u548c\u5176\u4ed6\u5305\u5143\u6570\u636e\u7684\u652f\u6301\u3002\u901a\u8fc7\u4f7f\u7528rcedit for\uff0c\u8fd9\u5e94\u8be5\u76f8\u5bf9\u7b80\u5355\u3002\u52a0\u4e0a\u3002plist\u6587\u4ef6\u5230\u3002\u5e94\u7528\u7a0b\u5e8f\uff08\u6211\u4eec\u4e5f\u53ef\u4ee5\u590d\u5236Electron\u5728\u8fd9\u91cc\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\uff09\u3002\n\u4e0b\u9762\u662f\u6211\u5728\u6784\u5efacaxa\u7684\u8fc7\u7a0b\u4e2d\u5b66\u5230\u7684\u6240\u6709\u77e5\u8bc6\u7684\u6269\u5c55\u7248\u672c\u3002\nDeno\u63d0\u4f9b\u4e86\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5b9e\u9a8c\u652f\u6301\u3002\u6211\u81ea\u5df1\u4e5f\u6ca1\u8bd5\u8fc7\uff0c\u4f46\u4e5f\u8bb8\u6709\u4e00\u5929\u5b83\u6d41\u884c\u8d77\u6765\uff0ccaxa\u5c31\u8fc7\u65f6\u4e86\u3002\u5e0c\u671b\u5982\u6b64\uff01\npkg\u5f88\u68d2\uff0c\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u4e86\u89e3\u5230\u4f60\u53ef\u4ee5\n......", "note_en": "Simple to use.  npm install caxa and call  caxa from the command line. No need to declare which files to include; no need to bundle the application into a single file.\n Supports any kind of Node.js project, including those with native modules (for example,  sharp,  @leafac/sqlite (shameless plug!),  and others).\n   Relatively small binaries. A \u201cHello World!\u201d application is ~30MB, which is terrible if compared to Go\u2019s ~2MB, and worse still if compared to C\u2019s ~50KB, but best-in-class if compared to other packaging solutions for Node.js.\n   No magic. No traversal of  require()s trying to find which files to include; no patches to Node.js source.\n  Doesn\u2019t support cross-compilation (for example, building a Windows executable from a macOS development machine).\n Doesn\u2019t support packaging with a Node.js version different from the one that\u2019s running caxa (for example, bundling Node.js 15 while running caxa with Node.js 14).\n     Build. For example, compile TypeScript with  tsc, bundle with webpack, and whatever else you need to get the project ready to start. Typically this is the kind of thing that goes into an  npm  prepare script, so the  npm ci from the previous point may already have taken care of this.\n If there are files that shouldn\u2019t be in the package, remove them from the directory. For example, you may wish to remove the  .git directory.\n You don\u2019t need to  npm dedupe --production, because caxa will do that for you from within the build directory. (Otherwise, if you tried to  npm dedupe --production you\u2019d uninstall caxa, which should probably be in  devDependencies.)\n It\u2019s recommended that you run caxa on a Continuous Integration server. (GitHub Actions, for example, does a shallow fetch of the repository, so removing the  .git directory becomes negligible\u2014but you can always do that with the  --exclude advanced option.)\n  $  npx caxa --help Usage: caxa [options] &lt;command...&gt; Package Node.js applications into executable binaries. Arguments:  command The command to run and optional arguments to pass to the command every time the executable is called. Paths must be absolute.  The \u2018{{caxa}}\u2019 placeholder is substituted for the folder from which the package runs. The \u2018node\u2019 executable is available at  \u2018{{caxa}}/node_modules/.bin/node\u2019. Use double quotes to delimit the command and each argument. Options:  -V, --version output the version number  -i, --input &lt;input&gt; The input directory to package.  -o, --output &lt;output&gt; The path where the executable will be produced. On Windows must end in \u2018.exe\u2019. In macOS may end in \u2018.app\u2019 to generate a macOS  Application Bundle. In macOS and Linux, may end in \u2018.sh\u2019 to use the Shell Stub, which takes less space, but depends on some  tools being installed on the end-user machine, for example, \u2018tar\u2019, \u2018tail\u2019, and so forth.  -f, --force [Advanced] Overwrite output if it exists. (default: true)  -F, --no-force  -e, --exclude &lt;path...&gt; [Advanced] Paths to exclude from the build. The paths are passed to https://github.com/sindresorhus/globby and paths that match  will be excluded. [Super-Advanced, Please don\u2019t use] If you wish to emulate \u2018--include\u2019, you may use \u2018--exclude &#34;*&#34; &#34;.*&#34;  &#34;!path-to-include&#34; ...\u2019. The problem with \u2018--include\u2019 is that if you change your project structure but forget to change the caxa  invocation, then things will subtly fail only in the packaged version.  -d, --dedupe [Advanced] Run \u2018npm dedupe --production\u2019 on the build directory. (default: true)  -D, --no-dedupe  -p, --prepare-command &lt;command&gt; [Advanced] Command to run on the build directory while packaging.  -n, --include-node [Advanced] Copy the Node.js executable to \u2018{{caxa}}/node_modules/.bin/node\u2019. (default: true)  -N, --no-include-node  -s, --stub &lt;path&gt; [Advanced] Path to the stub.  --identifier &lt;identifier&gt; [Advanced] Build identifier, which is the path in which the application will be unpacked.  -b, --remove-build-directory [Advanced] Remove the build directory after the build. (default: true)  -B, --no-remove-build-directory  -m, --uncompression-message &lt;message&gt; [Advanced] A message to show when uncompressing, for example, \u2018This may take a while to run the first time, please wait...\u2019.  -h, --help display help for command Examples:  Windows:  &gt; caxa --input &#34;examples/echo-command-line-parameters&#34; --output &#34;echo-command-line-parameters.exe&#34; -- &#34;{{caxa}}/node_modules/.bin/node&#34; &#34;{{caxa}}/index.js&#34; &#34;some&#34; &#34;embedded arguments&#34; &#34;--an-option-thats-part-of-the-command&#34;  macOS/Linux:  $ caxa --input &#34;examples/echo-command-line-parameters&#34; --output &#34;echo-command-line-parameters&#34; -- &#34;{{caxa}}/node_modules/.bin/node&#34; &#34;{{caxa}}/index.js&#34; &#34;some&#34; &#34;embedded arguments&#34; &#34;--an-option-thats-part-of-the-command&#34;  macOS (Application Bundle):  $ caxa --input &#34;examples/echo-command-line-parameters&#34; --output &#34;Echo Command Line Parameters.app&#34; -- &#34;{{caxa}}/node_modules/.bin/node&#34; &#34;{{caxa}}/index.js&#34; &#34;some&#34; &#34;embedded arguments&#34; &#34;--an-option-thats-part-of-the-command&#34;  macOS/Linux (Shell Stub):  $ caxa --input &#34;examples/echo-command-line-parameters&#34; --output &#34;echo-command-line-parameters.sh&#34; -- &#34;{{caxa}}/node_modules/.bin/node&#34; &#34;{{caxa}}/index.js&#34; &#34;some&#34; &#34;embedded arguments&#34; &#34;--an-option-thats-part-of-the-command&#34;\n Here\u2019s  a real-world example of using caxa. This example includes packaging for Windows, macOS, and Linux; distributing tags with GitHub Releases Assets; distributing Insiders Builds for every push with GitHub Actions Artifacts; and deploying a binary to a server with  rsync (and publishing an npm package as well, but that\u2019s beyond the scope of caxa).\n  Instead of calling caxa from the command line, you may prefer to write a program that builds your application, for example:\n import  caxa  from  &#34;caxa&#34; ; ( async  ( )  =&gt;  {  await  caxa ( {  input:  &#34;examples/echo-command-line-parameters&#34; ,  output:  &#34;echo-command-line-parameters&#34; ,  command:  [  &#34;{{caxa}}/node_modules/.bin/node&#34; ,  &#34;{{caxa}}/index.js&#34; ,  &#34;some&#34; ,  &#34;embedded arguments&#34; ,  ] ,  } ) ; } ) ( ) ;\n You may need to inspect  process.platform to determine in which operating system you\u2019re running and come up with the appropriate parameters.\n   If you wish to run a command that isn\u2019t  node, for example,  ts-node, you may do so by extending the  PATH. For example, you may run the following on macOS/Linux:\n   This is only an issue on macOS/Linux. In these operating systems a binary must have the executable mode enabled in order to run. You may check the mode from the command line with  ls -l: on an output that reads like  -rwxr-xr-x [...]/bin/node, the  xs represent that the file is executable.\n Here\u2019s what you may do when you distribute the binary to ensure that the file mode is preserved:\n Create a tarball or zip. The file mode is preserved through compression/decompression, and macOS/Linux (most distributions, anyway) come out of the box with software to uncompress tarballs and zips\u2014the user can just double-click on the file.\n   Fun fact: Windows 10 also comes with the  tar executable, so the command above works on Windows as well. Unfortunately the File Explorer on Windows doesn\u2019t support uncompressing the  .tgz with a double-click (it supports uncompressing  .zip, however). Fortunately, Windows doesn\u2019t have issues with file modes to begin with (it simply looks for the  .exe extension) so distributing the caxa output directly is appropriate.\n In some contexts this may make more sense, but it requires your users to use the command line.\n  caxa doesn\u2019t do anything special to your application, so there\u2019s no built-in way of telling whether the application is running from the packaged version. It\u2019s part of caxa\u2019s ethos of being as out of the way as possible. Also, I consider it to be a bad practice: an application that is so self-aware is more difficult to reason about and test.\n That said, if you really need to know whether the application is running from the packaged versions, here are some possible workarounds in increasing levels of badness:\n Receive a command-line argument that you embed in the packaging process, for example,  &#34;{{caxa}}/node_modules/.bin/node&#34; &#34;application.js&#34; &#34;--caxa&#34;.\n  Even though the code for the application is in a temporary directory, the current working directory when calling the packaged application is preserved, and you may inspect it with  process.cwd(). This is probably not something you have to think about\u2014caxa just gets it right.\n   As far as I can understand, the root of the problem with creating binaries for Node.js projects is native modules. Native modules are libraries written at least partly in C/C++, for example,  sharp,  @leafac/sqlite (shameless plug!),  and others. There are at least three issues with native modules that are relevant here:\n You must have a working C/C++ build system to install these libraries (C/C++ compiler,  make, Python, and so forth). On Windows, you must install  windows-build-tools. On macOS, you must install the Command-Line Tools (CLT) with  xcode-select --install. On Linux, it depends on the distribution, but on Ubuntu  sudo apt install build-essential is enough.\n The installation of native modules isn\u2019t cross-platform. Unlike JavaScript dependencies, which you may copy from an operating system to another, native modules produce compiled C/C++ code that\u2019s specific to the operating system on which the dependency is installed. This compiled code appears in your  node_modules directory in the form of  .node files.\n As far as I understand,  Node.js insists on loading native modules from files in the disk. Other Node.js packaging solutions get around this limitation in one of two ways: They either patch Node.js to trick it into loading native modules differently; or they put  .node files somewhere before starting your program.\n  caxa builds on the idea of putting  .node files in a temporary location, but takes it to ultimate consequence: a caxa executable is a form of  self-extracting archive containing your whole project along with the  node executable. When you first run a binary produced by caxa, it  extracts the source the whole project (and the bundled  node executable) into a temporary location. From there, it simply calls whatever command you told it to run when you packaged the project.\n At first, this may seem too costly, but in practice it\u2019s mostly okay: It doesn\u2019t take too long to uncompress a project in the first place, and caxa doesn\u2019t clean the temporary directory after running your program, so subsequent calls are effectively cached and run without overhead.\n This idea is simple, but it\u2019s super powerful! caxa supports any kind of project, including those with native dependencies, because running a caxa executable amounts to the same as installing Node.js on the user\u2019s machine. caxa produces packages fast, because generating a self-extracting archive is a simple matter of concatenating some files. caxa supports any version of Node.js, because it simply copies the  node executable with which it was called into the self-extracting archive.\n Fun fact: By virtue of compressing the archive, caxa produces binaries that are naturally smaller when compared to other packaging solutions. Obviously, you could achieve the same outcome by compressing the output of these other tools, which may want to do anyway to preserve the file mode (see  \u00a7\u00a0Preserving the Executable Mode of the Binary).\n  Did you know that you may append anything to a binary and it\u2019ll continue to work? This is true of binaries for Windows, macOS, and Linux. Here\u2019s an example to try out on macOS/Linux:\n $  cp   $(which ls ) ./ls   # Copy the \u2018ls\u2019 binary into the current directory to play with it$  ./ls   # List the files, proving the that the binary works$   echo ANYTHING  &gt;&gt; ls   # Append material to the binary$  tail ./ls   # You should see \u2018ANYTHING\u2019 at the end of the output$  ./ls   # The output should be same as before!$  rm ls   # Okay, the test is over\n The caxa self-extracting archives work by putting together three parts: 1. a stub; 2. an archive; and 3. a footer. This is the layout of these parts in the binary produced by caxa:\n  The  STUB and the  ARCHIVE are separated by the  CAXACAXACAXA string. And the  ARCHIVE and the  FOOTER are separated by a newline. This layout allows caxa to find the footer by simply looking backward from the end of the file until it reaches a newline. And if this is the first time you\u2019re running the caxa executable and the archive needs to be uncompressed, then caxa may find the beginning of the  ARCHIVE by looking forward from the beginning until it reaches the  CAXACAXACAXA separator.\n Build a binary with caxa and inspect it yourself in a text editor (Visual Studio Code asks you to confirm that you want to open a binary, but works fine after that). You should be able to find the  CAXACAXACAXA separator between the  STUB and the  ARCHIVE, as well as the  FOOTER at the end.\n     You may find the source code for the stub in  stubs/stub.go. You may build the stub with  npm run build:stubs. You will need a Go compiler, but the stub has no dependencies beyond the Go standard library, so there\u2019s no need to setup Go modules or configure a  $GOPATH. There are pre-compiled stubs for the major platforms in the npm package. If you wish to verify that the stubs really were compiled from  stubs/stub.go, you may recompile it yourself, because the Go compiler appears to be deterministic and always produce the same binaries given the same source (at least that\u2019s what happened in my tests).\n This is beautiful in a way: We\u2019re using Go\u2019s ability to produce binaries to bootstrap Node.js\u2019s ability to produce binaries.\n    This is JSON containing the extra information that caxa needs to run your project: Most importantly, the command that you want to run, but also an identifier for where to uncompress the archive.\n  Fun fact: There\u2019s nothing Node.js-specific about the stubs. You may use them to uncompress any kind of archive and run any arbitrary command on the output! And it\u2019s relatively straightforward to build a self-extracting archive from scratch. For example, you may run the following in macOS:\n $  cp stub an-ls-caxa$  tar -czf - README.md  &gt;&gt; an-ls-caxa$   printf   &#34;\\n{  \\&#34;identifier \\&#34;:  \\&#34;an-ls-caxa/AN-ARBITRARY-STRING-THAT-SHOULD-BE-DIFFERENT-EVERY-TIME \\&#34;,  \\&#34;command \\&#34;: [ \\&#34;ls \\&#34;,  \\&#34;{{caxa}} \\&#34;] } &#34;  &gt;&gt; an-ls-caxa$  ./an-ls-caxa README.md\n  It depends on the operating system. You may find the location on your system with:\n   Why No Cross-Compilation? Why No Different Versions of Node.js besides the Version with Which caxa Was Called?\n  I believe you should have environments to work with all the operating systems you plan on supporting. They may not be your main development environment, but they should be able to build your project and let you test things. At the very least, you should use a service like GitHub Actions which lets you run build tasks and tests on Windows, macOS, and Linux.\n (I, for one, bought a PC to work on caxa. Yet another reason to  support my work!)\n The principle of least surprise. When cross-compiling (for example, building a Windows executable from a macOS development machine), or when bundling different versions of Node.js (for example, bundling Node.js 15 while running caxa with Node.js 14), there\u2019s no straightforward way to guarantee that the packaged project will run the same as the unpackaged version. If you aren\u2019t using any native modules then things  may work, but as soon as you introduce a new dependency that you didn\u2019t know was native your application may break. Not only are native dependencies different on the operating systems, but they may also be different between different versions of Node.js if these versions aren\u2019t ABI-compatible (which is why sometimes when you update Node.js you must run  npm install again).\n Fun fact: The gold-standard for easy cross-compilation these days is Go. But even in Go cross-compilation goes out the window as soon as you introduce C dependencies (something called CGO). It appears that many people in the Go community try to solve the issue by avoiding CGO dependencies, sometimes going to great lengths to reinvent everything in pure Go. On the one hand, this sounds like fun when it works out. On the other hand, it\u2019s a huge case of not-invented-here syndrome. In any case, native modules seem to be much more prevalent in Node.js than CGO is in Go, so I think that cross-compilation in caxa would be a fool\u2019s errand.\n If you still insist on cross-compiling or compiling for different versions of Node.js, you can still use the stub to build a self-extracting archive by hand (see  \u00a7\u00a0Using the Self-Extracting Archive without caxa). You may even use  https://www.npmjs.com/package/node to more easily bundle different versions of Node.js.\n  An macOS Application Bundle is just a folder with a particular structure and an executable at a particular place. When creating a macOS Application Bundle caxa doesn\u2019t build a self-extracting archive, instead it just copies the application to the right place and creates an executable bash script to start the process.\n The macOS Application Bundle may be run by simply double-clicking on it from Finder. It opens a Terminal.app window with your application. If you\u2019re running an application that wasn\u2019t built on your machine (which is most likely the case for your users, who probably downloaded the application from the internet), then the first time you run it macOS will probably complain about the lack of a signature. The solution is to go to  System Preferences &gt; Security &amp; Privacy &gt; General and click on  Allow. You must instruct your users on how to do this.\n  It\u2019s equivalent to the Go stub, except that it is smaller, because it\u2019s just a dozen lines of Bash, but it depends on some things being installed on the end-user machine, for example,  tar,  tail, and so forth.\n  If you\u2019re interested in one of these features, please send a Pull Request if you can, or at least reach out to me and mention your interest, and I may get to them.\n Other compression algorithms. Currently caxa uses tarballs, which are ubiquitous and reasonably efficient in terms of compression/uncompression times and archive size. But there are better algorithms out there\u2026 (See  https://github.com/leafac/caxa/issues/1.)\n Add support for signing the executables. There are limitations on the kinds of executables that are signable, and a self-extracting archive of the kind that caxa produces may be unsignable (I know very little about this\u2026). A solution could be use Go\u2019s support for embedding data in the binary (which landed in Go 1.16). Of course this would require the person packaging a project to have a working Go build system. Another solution would be to manipulate the executables as data structures, instead of just appending stuff at the end. Go has facilities for this in the standard library, but then the packager itself (not only the stubs) would have to be written in Go, and creating packages on the command line by simply concatenating files would be impossible.\n Add support for custom icons and other package metadata. This should be relatively straightforward by using  rcedit for  .exes and by adding  .plist files to  .apps (we may copy whatever Electron is doing here as well).\n   Below follows the extended version with everything I learned along the way of building caxa.\n  Deno has experimental support for producing binaries. I haven\u2019t tried it myself, but maybe one day it catches on and caxa becomes obsolete. Let\u2019s hope for that!\n  pkg is great, and it\u2019s where I first learned that you coul\n......", "posttime": "2022-02-20 19:37:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5e94\u7528,package,caxa", "title": "Caxa\uff1a\u5305\u8282\u70b9\u3002\u5c06js\u5e94\u7528\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6", "title_en": "Caxa: Package Node.js applications into executable binaries", "transed": 1, "url": "https://github.com/leafac/caxa", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5e94\u7528", "package", "caxa"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072937, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL\uff1bDR\uff1a\u57284\u5929\u5185\uff0c\u57286\u6838AMD Ryzen 5 3600\uff0864GB\u5185\u5b58\uff09\u4e0a\u5206\u89e3512\u4f4d\uff08\u590d\u5408\uff09\u6570\u5b57\u3002\n%openssl rsa-noout-text-in\u5bc6\u94a5\u5bf9\u3002\uff1aadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvn\uff09\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\uff09\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570d1:4c:2e:6a:a7:6b:bd:cb:da:3d:6c:\u4f8b\u5982\uff1aadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad552:00:fd:3a:c0:67:27:b5:25:ab:72:10:a3:77:8c:b7:adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvv\uff09adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\u7cfb\u6570\uff1a7b:be:00:7a:51:cd:5c:b0:ac:f7:be:67:2d:0c:ce:a1:34:cc:ab:7e:06:d4:88:cf:97:b0:b4:43:d9:96:bd:9c%openssl rsa-noout-text-Notify PEM-pubin-in pubkey\u3002\u516c\u94a5\uff1a\uff08512\u4f4d\uff09\u6a21\u6570\uff1a00:fd:1a:2f:5a:b9:01:4f:85:f7:72:a4:c2:6f:58:43:c8:6a:4c:dc:2b:3f:96:08:8e:e9:ed:4e:c2:92:e4:3c:02:c8:2e:09:63:23:ad:45:6b:92:fa:a7:88:3a:0c:4b:08:cf:aa:fd:b5:64:cd:28:5e:c8:c8:c8:c8:5e:c8:c8:c8:e8:5a8:e8:e8:e8:5a:e8:e8:e8:5a:e8:e8:e8:e8:e8:5\n\u6682\u65f6\u5fd8\u8bb0\u79c1\u94a5\u3002\u53ea\u53d6\u516c\u94a5\u3002\u5c06&#39\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff1b\u6a21\u6570&#39\uff1b\uff0c\u5ffd\u7565\u5192\u53f7\uff08&#39\uff1b\uff1a&#39\uff1b\uff09\u8c61\u5f81\u5c06\u5176\u8f6c\u6362\u4e3aWolfram Mathematica\u4e2d\u7684\u5341\u8fdb\u5236\u6570\uff1a\n\u73b0\u5728\u7b494\u5929\u3002\u6216\u8005\u66f4\u591a\uff0c\u5982\u679c\u4f60\u7684\u786c\u4ef6\u901f\u5ea6\u8f83\u6162\u3002\u6216\u8005\u66f4\u5c11\uff0c\u5982\u679c\u66f4\u5feb\u7684\u8bdd\u3002\n...\u4fe1\u606f\uff1a\u8fc7\u6ee4-\u91cd\u590d\u5220\u9664\uff0c\u5220\u9664\u8fc7\u7a0b\uff1adup2\u7684CPU\u65f6\u95f4\uff1a802.59999999SINFO\uff1a\u7ebf\u6027\u4ee3\u6570\uff1abwc\u7684\u603bCPU/\u5b9e\u65f6\uff1a162309/30174\u4fe1\u606f\uff1a\u7ebf\u6027\u4ee3\u6570\uff1a\u805a\u5408\u7edf\u8ba1\u4fe1\u606f\uff1a\u7ebf\u6027\u4ee3\u6570\uff1aKrylov:CPU\u65f6\u95f4104154.41\uff0cWCT\u65f6\u95f419350.89\uff0c\u8fed\u4ee3CPU\u65f6\u95f40.14\uff0c\u901a\u4fe10.01\uff0cCPU\u7b49\u5f850.01\uff0c\u901a\u4fe1\u7b49\u5f850.0\uff08118784\u6b21\u8fed\u4ee3\uff09\u4fe1\u606f\uff1a\u7ebf\u6027\u4ee3\u6570\uff1a\u6797\u6839CPU\u65f6\u95f41233.97\uff0cWCT\u65f6\u95f4107.94\u4fe1\u606f\uff1a\u7ebf\u6027\u4ee3\u6570\uff1aMksol:CPU\u65f6\u95f455810.1\uff0cWCT\u65f6\u95f410470.62\uff0c\u8fed\u4ee3CPU\u65f6\u95f40.15\uff0c\u901a\u4fe10.01\uff0cCPU\u7b49\u5f850.01\uff0ccomm wait 0.0\uff0859392\u6b21\u8fed\u4ee3\uff09\u4fe1\u606f\uff1a\u751f\u6210\u81ea\u7531\u5173\u7cfb\uff1afreerel\u7684\u603bcpu/\u5b9e\u65f6\uff1a480.9/42.4643\u4fe1\u606f\uff1a\u751f\u6210\u56e0\u5b50\u5e93\uff1amakefb\u7684\u603bcpu/\u5b9e\u65f6\uff1a28.51/3.17731\u4fe1\u606f\uff1a\u5e73\u65b9\u6839\uff1asqrt\u7684\u603bcpu/\u5b9e\u65f6\uff1a6552.17/687.81\u4fe1\u606f\uff1a\u591a\u9879\u5f0f\u9009\u62e9\uff08\u6839\u4f18\u5316\uff09\uff1a\u805a\u5408\u7edf\u8ba1\u4fe1\u606f\uff1a\u591a\u9879\u5f0f\u9009\u62e9\uff08\u6839\u4f18\u5316\uff09\uff1a\u603b\u65f6\u95f4\uff1a9368.04\u4fe1\u606f\uff1a\u591a\u9879\u5f0f\u9009\u62e9\uff08\u6839\u4f18\u5316\uff09\uff1a\u6839\u7b5b\u9009\u65f6\u95f4\uff1a9366.28\u4fe1\u606f\uff1a\u7b5b\u9009-\u5355\u4f8b\u5220\u9664\uff1a\u6e05\u9664\u7684\u603bcpu/\u5b9e\u65f6\uff1a883.34/900.631\u4fe1\u606f\uff1aHTTP\u670d\u52a1\u5668\uff1a\u5173\u95edHTTP\u670d\u52a1\u5668\u4fe1\u606f\uff1a\u5b8c\u6210\u56e0\u5f0f\u5206\u89e3/\u79bb\u6563\u5bf9\u6570\uff1a\u6574\u4e2a\u56e0\u5f0f\u5206\u89e3\u7684\u603bcpu/\u8fd0\u884c\u65f6\u95f4\uff1a3.55505e+06/549.64211453895573767833204351134448177200907101690028206764172540480084319013256187 11573391951427310712358932610501838699964100906320600963295194448416597\n\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\u5b83\u91cd\u5efaRFC 2437\u4e2d\u6240\u8ff0\u7684\u6240\u6709\u989d\u5916\uff08\u9884\u8ba1\u7b97\uff09\u5e38\u91cf\uff0c\u5e76\u4e3aRSA\u79c1\u94a5\u751f\u6210\u4e00\u4e2a\u65b0\u7684PEM\u6587\u4ef6\u3002\n\u6211&#39\uff1b\u6211\u5728IRC#crypto\uff08Libera\uff09\u4e0a\u627e\u5230\u4e86\u5b83\uff0c\u5b83\u662fWulf\u5199\u7684\uff0c\u975e\u5e38\u611f\u8c22\u4ed6\u3002\u6211\u53ea\u662f\u901a\u8fc7\u653e\u5f03LCM\u64cd\u4f5c\u7b80\u5316\u4e86\u4e00\u70b9\u3002\n#!/usr/bin/python3#\u4e0b\u9762\u7684\u4ee3\u7801\u662fWulf\u5728#crypto\uff08Libera\uff09\u4e0a\u7f16\u5199\u7684\uff0c\u6765\u81eamath import gcdfrom cryptography\u3002\u5371\u9669\u54c1\u3002\u540e\u7aef\u4ece\u52a0\u5bc6\u4e2d\u5bfc\u5165\u9ed8\u8ba4\u503c\u3002\u5371\u9669\u54c1\u3002\u539f\u8bed\u3002\u4e0d\u5bf9\u79f0rsa\u4ece\u5bc6\u7801\u5b66\u5bfc\u5165\uff08rsPublicNumbers\u3001rsPrivateNumbers\u3001rsa_crt_iqmp\u3001rsa_crt_dmp1\u3001rsa_crt_dmq1\u7b49\uff09\u3002\u5371\u9669\u54c1\u3002\u539f\u8bed\u3002\u5e8f\u5217\u5316\u5bfc\u5165\u7f16\u7801\uff0cPrivateFormat\uff0cNoEncryptiondef gcdext\uff08a\uff0cb\uff09\uff1ax0\uff0cx1\uff0cy0\uff0cy1=1\uff0c0\uff0c0\uff0c1\uff0c\u800cb:q\uff0ca\uff0cb=a//b\uff0cb\uff0ca%bx0\uff0cx1=x1\uff0cx0-q*x1-y0\uff0cy1=y1\uff0cy0-q*y1\u8fd4\u56dea\uff0cx0\uff0cy0def\u53cd\u8f6c\uff08a\uff0cn\uff09\uff1ag\uff0cx\uff0cu=gcdext\uff08a\uff0cn\uff09\u5982\u679cg\uff01=1:raise ValueError\uff08&#34\uff1b\u53c2\u6570\u4e0d\u662f\u4e92\u8d28&#34\uff1b\uff09\u8fd4\u56dex%ne=65537#\u8ba2\u5355\u4e0d&#39\uff1b\u91cd\u8981\u4e8b\u9879\uff1ap=1157339195142731071235843932610501578386997964100906320600963295194448416597Q=1145389557378332043511344817720090710169002820676417254048084319013256187N=p*qpub_num=RSAPublicNumbers\uff08e\uff0cn\uff09d=ateinvert\uff08e\uff0c\uff08p-1\uff09*\uff08q-1\uff09\uff09iq=rsa_crt_iqmp\uff08p\uff0cq\uff09dp=rsa_crt_DMU\uff08d\uff0cp\uff09dq=rsa_crt_crt_-DMU\uff08d\uff0cdq=RSAU\uff09PRSU\uff08p\uff0cq\uff0cd\uff0cdp\uff0cdq\uff0ciq\uff0cpub_num\uff09prv=prv_num.private_key\uff08\u9ed8\u8ba4_backend\uff08\uff09\uff09#\u8df3\u8fc7\u6700\u65b0\u7248\u672c\u4e2d\u7684arg\u6253\u5370\uff08prv.private_\u5b57\u8282\uff08Encoding.PEM\uff0cPrivateFormat.PKCS8\uff0cNoEncryption\uff08\uff09\uff09\u3002\u89e3\u7801\uff08\uff09\uff09\n%openssl rsa-noout-text-in new_priv_\u5bc6\u94a5\u3002\uff1aadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvn\uff09\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\uff09\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570\u6307\u6570d1:4c:2e:6a:a7:6b:bd:cb:da:3d:6c:\u4f8b\u5982\uff1aadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad552:00:fd:3a:c0:67:27:b5:25:ab:72:10:a3:77:8c:b7:adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvv\uff09adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\u7cfb\u6570\uff1a7b:be:00:7a:51:cd:5c:b0:ac:f7:be:67:2d:0c:ce:a1:34:cc:ab:7e:06:d4:88:cf:97:b0:b4:43:d9:96:bd:9c\n%xxd-G1HW\u3002txt\u3002\u7b7e\u540d00000000:9d 30 22 87 12 c1 bf bb 87 e0 54 76 a0 fb a5 cd.0&#34\uff1b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u7535\u89c600000010:F051 fc 44 e3 52 8f ba dc 82 b7 ca 0a 6a bd 64\u3002Q.D.R\u3002\u3002\u3002\u3002\u3002\u3002\u3002j\u3001 d00000020:48 c9 30 8a 83 0a 5c 43 7d d6 5a 4a e8 cb d1 cd H.0\u3002\u3002\u3002\\C} \u3002ZJ\u3002\u3002\u3002\u300200000030:c6 a3 37 ac 49 8f a7 f8 d8 32 76 45 6e 0a bc 95\u3002\u30027.\u6211\u3002\u3002\u3002\u3002\u5373\u4f7f\u3002\u3002\u3002\n%openssl dgst-\u7b7e\u7f72\u65b0\u7684\u79c1\u94a5\u3002pem-keyform pem-sha256-out hw\u3002txt\u3002\u7b26\u53f7-\u4e8c\u8fdb\u5236\u786c\u4ef6\u3002txt%xxd-G1 hw\u3002txt\u3002\u7b7e\u540d00000000:9d 30 22 87 12 c1 bf bb 87 e0 54 76 a0 fb a5 cd.0&#34\uff1b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u7535\u89c600000010:F051 fc 44 e3 52 8f ba dc 82 b7 ca 0a 6a bd 64\u3002Q.D.R\u3002\u3002\u3002\u3002\u3002\u3002\u3002j\u3001 d00000020:48 c9 30 8a 83 0a 5c 43 7d d6 5a 4a e8 cb d1 cd H.0\u3002\u3002\u3002\\C} \u3002ZJ\u3002\u3002\u3002\u300200000030:c6 a3 37 ac 49 8f a7 f8 d8 32 76 45 6e 0a bc 95\u3002\u30027.\u6211\u3002\u3002\u3002\u3002\u5373\u4f7f\u3002\u3002\u3002\n\u65e9\u5728\u5927\u7ea620\u5e74\u524d\u76841999\u5e74\uff0cRSA-512\u5c31\u5df2\u88ab\u8003\u8651\u5728\u5185\u3002\u4f46\u4ed6\u4eec\u9700\u89816\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u5510&#39\uff1b\u6211\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u786c\u4ef6\u3002\nCADO-NFS\u662f\u5f53\u4eca\u7528\u4e8e\u56e0\u5b50\u5206\u89e3\u7684\u5f3a\u5927\u5de5\u5177\u3002\u622a\u81f32022\u5e742\u6708\uff0c\u5b83\u4fdd\u6301\u7740\u76ee\u524d\u7684RSA factoring\u4e16\u754c\u8bb0\u5f55\uff1a829\u4f4d\uff08\u4f46\u8fd0\u884c\u5728\u4e00\u4e2a\u5927\u96c6\u7fa4\u4e0a\uff09\u3002\n\u5b83&#39\uff1b\u5982\u4eca\uff0c\u4eba\u4eec\u666e\u904d\u8ba4\u4e3aRSA-1024\u5df2\u7ecf\u4e0d\u591f\u4e86\u3002\u8003\u8651\u81f3\u5c11\u4f7f\u7528RSA-1536\u6216RSA-2048\u3002\nCADO-NFS\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u6253\u5370\u6570\u5b57\u3002\u8ba2\u5355\u6ca1\u6709&#39\uff1b\u91cd\u8981\u7684\u662f\uff1aPython\u4e2d\u7684\u91cd\u6784\u5de5\u5177\u53ef\u4ee5\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u83b7\u53d6\u8fd9\u4e9b\u6570\u5b57\u3002\u4f46\u6587\u672c\u8f6c\u50a8\u5c06\u7565\u6709\u4e0d\u540c\uff08\u6570\u5b57\u987a\u5e8f\uff09\u3002\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c\u5b83\u90fd\u4f1a\u8d77\u4f5c\u7528\u3002", "note_en": "TL;DR: factoring a 512-bit (composite) number on a 6-core AMD Ryzen 5 3600 (64GB of RAM) in 4 days.\n       % openssl rsa -noout -text -in keypair.pemRSA Private-Key: (512 bit, 2 primes)modulus: 00:fd:1a:2f:5a:b9:01:4f:85:f7:72:a4:c2:6f:58: 43:c8:6a:4c:dc:2b:3f:96:08:8e:e9:ed:4e:c2:92: e4:3c:02:c8:2e:09:63:23:ad:45:6b:92:fa:a7:88: 3a:0c:4b:08:cf:aa:fd:b5:64:cd:28:5e:3a:6a:53: 20:7c:e9:35:d7publicExponent: 65537 (0x10001)privateExponent: 49:b5:ac:80:d1:4c:2e:6a:a7:6b:bd:cb:da:3d:6c: 50:1b:95:12:b1:8d:ad:16:04:f8:df:61:86:8c:dc: e7:14:9c:0f:e0:89:d9:20:fe:9c:6d:9a:be:0c:aa: a3:90:d1:88:7d:85:38:08:19:3d:f0:d0:3f:f0:6a: 88:8f:f8:71prime1: 00:ff:df:13:bd:0e:17:9f:05:41:92:8a:86:53:91: 34:fc:51:f2:c2:59:a7:ec:9b:f5:37:74:95:f0:eb: c6:17:55prime2: 00:fd:3a:c0:67:27:b5:25:ab:72:10:a3:77:8c:b7: d3:cd:00:db:89:e9:25:82:11:24:ec:bc:e9:a8:29: cc:00:7bexponent1: 00:8d:e4:30:36:fb:f4:9f:6b:b3:c4:46:eb:5c:b6: 3e:92:da:02:ec:41:f9:bc:5d:74:2b:af:8c:62:d0: ec:c6:0dexponent2: 00:f4:2d:24:bd:d3:42:0f:32:c4:68:5a:d7:ba:2e: bf:e2:9b:83:15:f6:64:9e:88:9d:8c:51:95:14:fc: 48:a3:e5coefficient: 7b:be:00:7a:51:cd:5c:b0:ac:f7:be:67:2d:0c:ce: a1:34:cc:ab:7e:06:d4:88:cf:97:b0:b4:43:d9:96: bd:9c % openssl rsa -noout -text -inform PEM -pubin -in pubkey.pubRSA Public-Key: (512 bit)Modulus: 00:fd:1a:2f:5a:b9:01:4f:85:f7:72:a4:c2:6f:58: 43:c8:6a:4c:dc:2b:3f:96:08:8e:e9:ed:4e:c2:92: e4:3c:02:c8:2e:09:63:23:ad:45:6b:92:fa:a7:88: 3a:0c:4b:08:cf:aa:fd:b5:64:cd:28:5e:3a:6a:53: 20:7c:e9:35:d7Exponent: 65537 (0x10001)\n Forget the private key for a moment.Take only the public key.Join hexadecimal numbers of &#39;Modulus&#39;, ignoring colon (&#39;:&#39;) symbol.Convert it to decimal number in Wolfram Mathematica:\n       Now wait ~4 days. Or more, if your hardware is slower. Or less, if faster.\n  ...Info:Filtering - Duplicate Removal, removal pass: CPU time for dup2: 802.5999999999999sInfo:Linear Algebra: Total cpu/real time for bwc: 162309/30174Info:Linear Algebra: Aggregate statistics:Info:Linear Algebra: Krylov: CPU time 104154.41, WCT time 19350.89, iteration CPU time 0.14, COMM 0.01, cpu-wait 0.01, comm-wait 0.0 (118784 iterations)Info:Linear Algebra: Lingen CPU time 1233.97, WCT time 107.94Info:Linear Algebra: Mksol: CPU time 55810.1, WCT time 10470.62, iteration CPU time 0.15, COMM 0.01, cpu-wait 0.01, comm-wait 0.0 (59392 iterations)Info:Generate Free Relations: Total cpu/real time for freerel: 480.9/42.4643Info:Generate Factor Base: Total cpu/real time for makefb: 28.51/3.17731Info:Square Root: Total cpu/real time for sqrt: 6552.17/687.81Info:Polynomial Selection (root optimized): Aggregate statistics:Info:Polynomial Selection (root optimized): Total time: 9368.04Info:Polynomial Selection (root optimized): Rootsieve time: 9366.28Info:Filtering - Singleton removal: Total cpu/real time for purge: 883.34/900.631Info:HTTP server: Shutting down HTTP serverInfo:Complete Factorization / Discrete logarithm: Total cpu/elapsed time for entire factorization: 3.55505e+06/549.642114538955737678332043511344817720090710169002820676417254048008431901325656187 115733919514273107123584393261050157838699796410090632060096329519444848416597\n      The following piece of code do this: it reconstructs all the additional (precomputed) constants as stated in RFC 2437and generate a new PEM file for RSA private key.\n I&#39;ve found it on IRC #crypto (Libera), it was written by Wulf, so many thanks to him.I only simplified it a bit by dropping the LCM operation.\n #!/usr/bin/python3# The following code was written by Wulf on #crypto (Libera)from math import gcdfrom cryptography.hazmat.backends import default_backendfrom cryptography.hazmat.primitives.asymmetric.rsa import ( RSAPublicNumbers, RSAPrivateNumbers, rsa_crt_iqmp, rsa_crt_dmp1, rsa_crt_dmq1,)from cryptography.hazmat.primitives.serialization import Encoding, PrivateFormat, NoEncryptiondef gcdext(a, b): x0, x1, y0, y1 = 1, 0, 0, 1 while b: q, a, b = a // b, b, a % b x0, x1 = x1, x0 - q * x1 y0, y1 = y1, y0 - q * y1 return a, x0, y0def invert(a, n): g, x, __ = gcdext(a, n) if g != 1: raise ValueError(&#34;Arguments are not coprime&#34;) return x % ne = 65537# order doesn&#39;t matter:p = 115733919514273107123584393261050157838699796410090632060096329519444848416597q = 114538955737678332043511344817720090710169002820676417254048008431901325656187n = p * qpub_num = RSAPublicNumbers(e, n)d = invert(e, (p - 1) * (q - 1))iq = rsa_crt_iqmp(p, q)dp = rsa_crt_dmp1(d, p)dq = rsa_crt_dmq1(d, q)prv_num = RSAPrivateNumbers(p, q, d, dp, dq, iq, pub_num)prv = prv_num.private_key(default_backend()) # skip arg in recent versionsprint(prv.private_bytes(Encoding.PEM, PrivateFormat.PKCS8, NoEncryption()).decode())\n    % openssl rsa -noout -text -in new_priv_key.pemRSA Private-Key: (512 bit, 2 primes)modulus: 00:fd:1a:2f:5a:b9:01:4f:85:f7:72:a4:c2:6f:58: 43:c8:6a:4c:dc:2b:3f:96:08:8e:e9:ed:4e:c2:92: e4:3c:02:c8:2e:09:63:23:ad:45:6b:92:fa:a7:88: 3a:0c:4b:08:cf:aa:fd:b5:64:cd:28:5e:3a:6a:53: 20:7c:e9:35:d7publicExponent: 65537 (0x10001)privateExponent: 49:b5:ac:80:d1:4c:2e:6a:a7:6b:bd:cb:da:3d:6c: 50:1b:95:12:b1:8d:ad:16:04:f8:df:61:86:8c:dc: e7:14:9c:0f:e0:89:d9:20:fe:9c:6d:9a:be:0c:aa: a3:90:d1:88:7d:85:38:08:19:3d:f0:d0:3f:f0:6a: 88:8f:f8:71prime1: 00:ff:df:13:bd:0e:17:9f:05:41:92:8a:86:53:91: 34:fc:51:f2:c2:59:a7:ec:9b:f5:37:74:95:f0:eb: c6:17:55prime2: 00:fd:3a:c0:67:27:b5:25:ab:72:10:a3:77:8c:b7: d3:cd:00:db:89:e9:25:82:11:24:ec:bc:e9:a8:29: cc:00:7bexponent1: 00:8d:e4:30:36:fb:f4:9f:6b:b3:c4:46:eb:5c:b6: 3e:92:da:02:ec:41:f9:bc:5d:74:2b:af:8c:62:d0: ec:c6:0dexponent2: 00:f4:2d:24:bd:d3:42:0f:32:c4:68:5a:d7:ba:2e: bf:e2:9b:83:15:f6:64:9e:88:9d:8c:51:95:14:fc: 48:a3:e5coefficient: 7b:be:00:7a:51:cd:5c:b0:ac:f7:be:67:2d:0c:ce: a1:34:cc:ab:7e:06:d4:88:cf:97:b0:b4:43:d9:96: bd:9c\n         % xxd -g 1 hw.txt.sign00000000: 9d 30 22 87 12 c1 bf bb 87 e0 54 76 a0 fb a5 cd .0&#34;.......Tv....00000010: f0 51 fc 44 e3 52 8f ba dc 82 b7 ca 0a 6a bd 64 .Q.D.R.......j.d00000020: 48 c9 30 8a 83 0a 5c 43 7d d6 5a 4a e8 cb d1 cd H.0...\\C}.ZJ....00000030: c6 a3 37 ac 49 8f a7 f8 d8 32 76 45 6e 0a bc 95 ..7.I....2vEn...\n    % openssl dgst -sign new_priv_key.pem -keyform PEM -sha256 -out hw.txt.sign -binary hw.txt % xxd -g 1 hw.txt.sign00000000: 9d 30 22 87 12 c1 bf bb 87 e0 54 76 a0 fb a5 cd .0&#34;.......Tv....00000010: f0 51 fc 44 e3 52 8f ba dc 82 b7 ca 0a 6a bd 64 .Q.D.R.......j.d00000020: 48 c9 30 8a 83 0a 5c 43 7d d6 5a 4a e8 cb d1 cd H.0...\\C}.ZJ....00000030: c6 a3 37 ac 49 8f a7 f8 d8 32 76 45 6e 0a bc 95 ..7.I....2vEn...\n   RSA-512 has been  factored as early, as ~20 years ago, in 1999.But they needed 6 months and don&#39;t know how many hardware.\n  CADO-NFS is the powerful tool today for factoring.As of Feb-2022, it holds the current RSA factoring world record:  829 bits(but running on a big cluster).\n It&#39;s widely considered today that RSA-1024 is not enough anymore.Think about using at least RSA-1536 or RSA-2048.\n  CADO-NFS can print numbers in either order.Order doesn&#39;t matter: a reconstructing tool in Python can take these numbers in reverse order.But text dump will differ slightly (order of numbers again).But it will work anyway.", "posttime": "2022-02-13 19:01:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u7834\u89e3,hardware,rsa", "title": "\u5982\u4f55\u57284\u5929\u5185\u7834\u89e3\u73b0\u6709\u786c\u4ef6\u4e0a\u7684RSA-512", "title_en": "How to crack RSA-512 on off-the-shelf hardware in 4 days", "transed": 1, "url": "https://yurichev.com/news/20220210_RSA/", "via": "", "real_tags": ["\u786c\u4ef6", "\u7834\u89e3", "hardware", "rsa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072936, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u8bba\u662f\u4f5c\u4e3a\u6700\u7ec8\u7528\u6237\u8fd8\u662f\u4f5c\u4e3a\u7a0b\u5e8f\u5458\uff0c\u6700\u4ee4\u4eba\u6cae\u4e27\u7684\u7ecf\u5386\u4e4b\u4e00\u5c31\u662f\u8bd5\u56fe\u8fd0\u884c\u4e00\u4e2a\u4e0d\u4e45\u524d\u8fd8\u53ef\u4ee5\u5b8c\u7f8e\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u7ed3\u679c\u5374\u53d1\u73b0\u5b83\u73b0\u5728\u574f\u4e86\uff0c\u8f6f\u4ef6\u4e0d\u518d\u8fd0\u884c\u4e86\uff0c\u539f\u56e0\u4e5f\u4e0d\u6e05\u695a\u3002\u8f6f\u4ef6\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u6709\u4e9b\u4e1c\u897f\u574f\u4e86\uff0c\u4f3c\u4e4e\u662f\u65e0\u7f18\u65e0\u6545\u7684\u3002\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u88ab\u79f0\u4e3a\u201c\u4ee3\u7801\u8150\u70c2\u201d\u6216\u201c\u4f4d\u8150\u70c2\u201d\u7684\u73b0\u8c61\u3002\n\u6211\u66fe\u7ecf\u5728\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u7814\u7a76\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\uff0c\u6211\u89c1\u8fc7\u4e00\u4e9b\u6848\u4f8b\uff0c\u7814\u7a76\u4eba\u5458\u5728\u516d\u4e2a\u6708\u524d\u521a\u521a\u53d1\u5e03\u4e86\u4ee3\u7801\uff0c\u4f46\u4ed6\u4eec\u6240\u4f9d\u8d56\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f9d\u8d56\u9879\u540e\u6765\u53d1\u751f\u4e86\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\u8fd9\u8ba9\u6211\u4eec\u9677\u5165\u4e86\u4e0d\u5e78\u7684\u5883\u5730\uff0c\u4e0d\u5f97\u4e0d\u5bf9\u5176\u4ed6\u4eba\u7684\u4ee3\u7801\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002\u6709\u65f6\u5019\u4f60\u662f\u5e78\u8fd0\u7684\uff0c\u95ee\u9898\u53ea\u662f\u4ed6\u4eec\u7684\u4ee3\u7801\u6240\u9700\u7684Python\u5305\u4e2d\u6709\u4e00\u4e2a\u505a\u4e86\u7834\u574f\u6027\u7684\u66f4\u6539\uff0c\u800c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u7f16\u8f91\u9879\u76ee\u6e05\u5355\u6765\u89e3\u51b3\u3002\u6709\u65f6\u4eba\u4eec\u4f1a\u5bfc\u5165\u4e00\u4e9b\u4ed6\u4eec\u5e76\u4e0d\u771f\u6b63\u4f7f\u7528\u7684\u8f6f\u4ef6\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664\u4f9d\u8d56\u6027\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u89e3\u51b3\u53ef\u4ee5\u5b89\u88c5\u5728\u7ed9\u5b9a\u7cfb\u7edf\uff08pip2\u3001pip3\u3001Conda\u548cUbuntu\u7684apt\uff09\u4e0a\u7684\u591a\u4e2aPython\u5305\u7ba1\u7406\u5668\u4e4b\u95f4\u7684\u51b2\u7a81\u3002\n\u7f16\u8f91\u4e0e\u5305\u7ba1\u7406\u5668\u76f8\u5173\u7684\u4f9d\u8d56\u5217\u8868\u6216\u4e89\u5435\u5e76\u4e0d\u592a\u574f\uff0c\u4f46\u662fPyTrink\u662f\u4e00\u4e2a\u4ee4\u4eba\u607c\u706b\u7684\u7279\u6027\uff0c\u5b83\u662f\u4e00\u4e2a\u4ee4\u4eba\u607c\u706b\u7684\u7279\u6027\uff0c\u6bcf\u4e2a\u7248\u672c\u9700\u8981\u82f1\u4f1f\u8fbeGPU\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e00\u4e2a\u7279\u5b9a\u7248\u672c\u6765\u8fd0\u884c\u3002\u5b89\u88c5\u8f83\u65e7\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981\u6839\u8bbf\u95ee\u6743\u9650\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u8fdc\u7a0b\u8ba1\u7b97\u96c6\u7fa4\u4e0a\u5de5\u4f5c\u65f6\u901a\u5e38\u6ca1\u6709\u7684\u3002\u5373\u4f7f\u4f60\u662f\u5728\u4e00\u53f0\u672c\u5730\u673a\u5668\u4e0a\u505a\u8fd9\u4ef6\u4e8b\uff0c\u5728\u90a3\u91cc\u4f60\u786e\u5b9e\u6709\u6839\u8bbf\u95ee\u6743\u9650\uff0c\u5b89\u88c5\u4e00\u4e2a\u65b0\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u662f\u975e\u5e38\u7f13\u6162\u548c\u4e4f\u5473\u7684\u3002\u591a\u4e8f\u4e86Nvidia\u4e0d\u53cb\u597d\u7684\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u65e0\u6cd5\u81ea\u52a8\u5316\uff0c\u4e00\u65e6\u5b8c\u6210\uff0c\u4f60\u53ef\u80fd\u4f1a\u6210\u529f\u5730\u83b7\u5f97Pytork\u7684\u7279\u5b9a\u7248\u672c\uff0c\u4f46\u4f60\u7684\u5176\u4ed6\u9879\u76ee\u65e0\u6cd5\u518d\u8fd0\u884c\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u6700\u65b0\u7248\u672c\u3002\n\u4e3a\u4e86\u53ef\u590d\u5236\u6027\uff0c\u7814\u7a76\u4eba\u5458\u88ab\u9f13\u52b1\u53d1\u5e03\u4ed6\u4eec\u7684\u4ee3\u7801\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u4eba\u80fd\u591f\u5728\u51e0\u4e2a\u6708\u540e\u8fd0\u884c\u8fd9\u4e9b\u4ee3\u7801\uff0c\u90a3\u5c31\u6ca1\u6709\u591a\u5927\u610f\u4e49\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f00\u59cb\u9f13\u52b1\u90a3\u4e9b\u5e0c\u671b\u53d1\u5e03\u4ee3\u7801\u7684\u4eba\u4f7f\u7528Docker\u6216Singularity\u8fdb\u884c\u96c6\u88c5\u7bb1\u5316\u3002\u8fd9\u4fee\u590d\u4e86\u8bf8\u5982Python\u8f6f\u4ef6\u5305\u635f\u574f\u3001PyTorch\u6216TensorFlow\u7248\u672c\u4e0d\u517c\u5bb9\u4ee5\u53ca\u4e3b\u673a\u7cfb\u7edf\u4e0a\u7f3a\u5c11\u5e93\u7b49\u95ee\u9898\u3002\u7136\u800c\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u5f88\u591a\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\u4e0d\u80fd\u5728CPU\u4e0a\u8fd0\u884c\u5f97\u8db3\u591f\u5feb\uff0c\u65e0\u6cd5\u4f7f\u7528\u3002\u6211\u4eec\u770b\u5230\u7684\u5927\u591a\u6570\u4ee3\u7801\u90fd\u9700\u8981GPU\u52a0\u901f\u3002\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528nvidia docker\uff0c\u8fd9\u662fdocker\u7684\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\uff0c\u5141\u8bb8\u4ee3\u7801\u8bbf\u95ee\u4e3b\u673a\u7684nvidia GPU\u9a71\u52a8\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u8fd9\u518d\u6b21\u5f15\u53d1\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u9700\u8981\u5728\u4e3b\u673a\u4e0a\u5b89\u88c5\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\u624d\u80fd\u6b63\u786e\u8fd0\u884c\u3002Nvidia\u8ba9\u4eba\u4eec\u80fd\u591f\u8bbf\u95eeDocker\u5bb9\u5668\u5185\u7684GPU\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7834\u574f\u5bb9\u5668\uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u66b4\u9732\u4e3b\u673a\u7cfb\u7edf\u7684\u7ec6\u8282\u3002\n\u6211\u4eec\u6bcf\u5e74\u96c6\u4f53\u6d6a\u8d39\u591a\u5c11\u65f6\u95f4\u6765\u4fee\u590d\u56e0\u4f9d\u8d56\u5173\u7cfb\u4e2d\u65ad\u800c\u5bfc\u81f4\u7684\u9519\u8bef\uff1f\u6bcf\u5929\u635f\u5931\u4e86\u591a\u5c11\u767e\u4e07\u5c0f\u65f6\u7684\u751f\u4ea7\u529b\uff1f\u6211\u4eec\u82b1\u4e86\u591a\u5c11\u65f6\u95f4\u91cd\u5199\u90a3\u4e9b\u5728\u8f6f\u4ef6\u5d29\u6e83\u524d\u8fd0\u884c\u826f\u597d\u7684\u8f6f\u4ef6\uff1f\u5728\u6211\u770b\u6765\uff0c\u4ee3\u7801\u8150\u8d25\u662f\u4e00\u4e2a\u6211\u4eec\u5e94\u8be5\u52aa\u529b\u89e3\u51b3\u6216\u81f3\u5c11\u7f13\u89e3\u7684\u95ee\u9898\u3002\u7531\u4e8e\u6211\u5c06\u5728\u672c\u6587\u540e\u9762\u8ba8\u8bba\u7684\u57fa\u672c\u539f\u56e0\uff0c\u4ee3\u7801\u8150\u8d25\u53ef\u80fd\u6c38\u8fdc\u65e0\u6cd5\u5b8c\u5168\u6d88\u9664\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u901a\u8fc7\u66f4\u5177\u539f\u5219\u6027\u548c\u524d\u77bb\u6027\u7684\u8f6f\u4ef6\u5de5\u7a0b\uff0c\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\u81f3\u5c11\uff0c\u5982\u679c\u6211\u4eec\u627f\u8ba4\u4ee3\u7801\u8150\u70c2\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u4e14\u9996\u5148\u7406\u89e3\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u5b83\u7684\u53d1\u751f\uff0c\u60c5\u51b5\u5c31\u4f1a\u6709\u6240\u6539\u5584\u3002\n\u6211\u4eec\u5982\u4f55\u907f\u514d\u4ee3\u7801\u7834\u574f\uff1fLinus Torvalds\u4f3c\u4e4e\u8ba4\u4e3a\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u7f16\u8bd1\u8f6f\u4ef6\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u6700\u597d\u662f\u9759\u6001\u94fe\u63a5\u5e93\uff0c\u56e0\u4e3a\u5f88\u5c11\u6709\u5171\u4eab\u5e93\u5b9e\u9645\u4e0a\u662f\u7248\u672c\u5b89\u5168\u7684\uff0c\u800c\u4e14\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\uff0c\u4f60\u603b\u662f\u5728\u589e\u52a0\u590d\u6742\u6027\uff0c\u8ba9\u81ea\u5df1\u9762\u4e34\u8fd9\u6837\u7684\u98ce\u9669\uff1a\u4f60\u7684\u8f6f\u4ef6\u5c06\u8981\u5b89\u88c5\u5230\u7684\u7cfb\u7edf\u6ca1\u6709\u4e0e\u4f60\u9700\u8981\u7684\u5e93\u517c\u5bb9\u7684\u7248\u672c\u3002\n\u5728\u6211\u770b\u6765\uff0c\u5bf9\u4e8e\u4f9d\u8d56\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u7684\u8f6f\u4ef6\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u6700\u597d\u4fee\u590d\u8f6f\u4ef6\u5305\u7248\u672c\u53f7\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u63a5\u5728\u5305\u7684\u6e05\u5355\u4e2d\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u6bcf\u4e2a\u4f9d\u8d56\u9879\u7684\u7248\u672c\u3002\u539f\u56e0\u662f\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u60a8\u4e0d\u80fd\u4fe1\u4efb\u66f4\u65b0\u7248\u672c\u7684\u4f9d\u8d56\u9879\u4e0d\u8fdb\u884c\u7834\u574f\u6027\u66f4\u6539\uff0c\u800c\u4e14\u901a\u5e38\uff0c\u4e00\u4e2a\u7834\u574f\u7684\u4f9d\u8d56\u9879\u5c31\u662f\u5bfc\u81f4\u8f6f\u4ef6\u7834\u574f\u7684\u5168\u90e8\u6761\u4ef6\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u907f\u514d\u6307\u5b9a\u56fa\u5b9a\u7684\u7248\u672c\u53f7\uff0c\u56e0\u4e3aPython\u7684pip\u7b49\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u4e0d\u652f\u6301\u540c\u65f6\u5b89\u88c5\u7ed9\u5b9a\u8f6f\u4ef6\u5305\u7684\u591a\u4e2a\u7248\u672c\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u60a8\u8bf7\u6c42\u7684\u8f6f\u4ef6\u5305\u7248\u672c\u53ef\u80fd\u4f1a\u4e0e\u5df2\u5b89\u88c5\u5728\u7ed9\u5b9a\u7cfb\u7edf\u4e0a\u7684\u5176\u4ed6\u8f6f\u4ef6\u51b2\u7a81\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u6784\u5efa\u53ef\u9760\u7684\u8f6f\u4ef6\uff0c\u5305\u7ba1\u7406\u5668\u9700\u8981\u89e3\u51b3\u8fd9\u4e2a\u7f3a\u70b9\u3002\n\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u3002Python\u7684\u90e8\u5206\u5438\u5f15\u529b\u5728\u4e8e\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5176\u5916\u90e8\u51fd\u6570\u63a5\u53e3\uff08FFI\uff09\u8f7b\u677e\u5730\u4e0eC\u4ee3\u7801\u94fe\u63a5\u3002\u8fd9\u662fPython\u5982\u6b64\u53d7\u6b22\u8fce\u7684\u539f\u56e0\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u4f7f\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8f7b\u677e\u7f16\u5199\u4e00\u4e2a\u5305\uff0c\u4e0e\u5e38\u7528\u7684C\u5e93\u8fdb\u884c\u63a5\u53e3\uff0c\u5e76\u4eceC\u751f\u6001\u7cfb\u7edf\u7684\u4f18\u52bf\u4e2d\u83b7\u76ca\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4fbf\u5229\u662f\u6709\u4ee3\u4ef7\u7684\u3002FFI\u672c\u8d28\u4e0a\u662f\u4e00\u6247\u9677\u9631\u95e8\uff0c\u901a\u8fc7\u5b83\uff0c\u8f6f\u4ef6\u53ef\u4ee5\u8bbf\u95ee\u5305\u7ba1\u7406\u5668\u65e0\u6cd5\u63a7\u5236\u7684\u5916\u90e8\u4f9d\u8d56\u9879\uff0c\u8fd9\u5927\u5927\u589e\u52a0\u4e86\u4ee3\u7801\u7834\u574f\u7684\u98ce\u9669\u3002\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff08\u5982Conda\uff09\u8bd5\u56fe\u901a\u8fc7\u7ba1\u7406\u5916\u90e8\u5e93\u548cPython\u4ee3\u7801\u7684\u5b89\u88c5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u4e0e\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u5b89\u88c5\u7684Python\u8f6f\u4ef6\u5305\u4ea7\u751f\u51b2\u7a81\u3002\n\u5728\u6211\u770b\u6765\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u7684\u6700\u5b9e\u9645\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5bf9\u8f6f\u4ef6\u8bbe\u8ba1\u91c7\u53d6\u4fdd\u5b88\u548c\u6700\u4f4e\u9650\u5ea6\u7684\u65b9\u6cd5\u3002\u5982\u679c\u53ef\u80fd\uff0c\u6709\u76ee\u7684\u5730\u6700\u5c0f\u5316\u4f9d\u8d56\u5173\u7cfb\u3002\u4e0d\u8981\u6dfb\u52a0\u65b0\u7684\u4f9d\u8d56\u9879\uff0c\u9664\u975e\u589e\u52a0\u7684\u4ef7\u503c\u771f\u7684\u503c\u5f97\u6f5c\u5728\u4ee3\u7801\u7834\u574f\u7684\u989d\u5916\u6210\u672c\u3002\u5c3d\u53ef\u80fd\u907f\u514d\u5916\u90e8\u4f9d\u8d56\uff0c\u5982\u679c\u9009\u62e9\u4f9d\u8d56\u5916\u90e8\u8f6f\u4ef6\u5305\u548c\u5e93\uff0c\u8bf7\u9009\u62e9\u7a33\u5b9a\u3001\u7ef4\u62a4\u826f\u597d\u3001\u5411\u540e\u517c\u5bb9\u4e14\u6613\u4e8e\u5b89\u88c5\u7684\u5e93\u3002\u8bb0\u4f4f\uff0c\u4f60\u7684\u8f6f\u4ef6\u53ef\u80fd\u53ea\u9700\u8981\u4e00\u4e2a\u574f\u6389\u7684\u4f9d\u8d56\u9879\u5c31\u65e0\u6cd5\u5728\u7528\u6237\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u5982\u679c\u4f60\u7684\u8f6f\u4ef6\u574f\u4e86\uff0c\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5b83\u574f\u4e86\u3002\n\u826f\u597d\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4ee3\u7801\u8150\u70c2\u7684\u98ce\u9669\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u9996\u5148\u95ee\u95ee\u81ea\u5df1\u4ee3\u7801\u8150\u70c2\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u4e5f\u662f\u5f88\u6709\u4ef7\u503c\u7684\u3002\u6211\u4eec\u80fd\u4e0d\u80fd\u5f00\u53d1\u51fa\u4e0d\u4f1a\u8150\u70c2\u7684\u8f6f\u4ef6\uff1f\u4e00\u4e2a\u6709\u8da3\u7684\u89c2\u5bdf\u7ed3\u679c\u662f\uff0c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u8fd9\u6837\u7684\u8f6f\u4ef6\u786e\u5b9e\u5b58\u5728\u3002\u4eba\u4eec\u4ecd\u5728\u4e3aSuper NES\u548cAtari 2600\u7b49\u590d\u53e4\u6e38\u620f\u5e73\u53f0\u7f16\u5199\u8f6f\u4ef6\u3002\u8fd9\u4e9b\u5e73\u53f0\u57fa\u672c\u4e0a\u662f\u65f6\u95f4\u51bb\u7ed3\u7684\uff0c\u8bbe\u5907\u56fa\u5b9a\uff0cI/O\u80fd\u529b\u6709\u9650\u3002\u5e73\u53f0\u7684\u56fa\u5b9a\u6027\u3001\u7b80\u5355\u6027\u4ee5\u53ca\u4e0d\u53ef\u80fd\u4f9d\u8d56\u5916\u90e8\u8f6f\u4ef6\u5305\u610f\u5473\u7740\u4e3a\u5176\u7f16\u5199\u7684\u4efb\u4f55\u8f6f\u4ef6\u90fd\u4e0d\u592a\u53ef\u80fd\u88ab\u5e73\u53f0\u672c\u8eab\u7684\u53d8\u5316\u7834\u574f\u3002\n\u4ee3\u7801\u8150\u70c2\u7684\u6839\u672c\u539f\u56e0\u662f\u53d8\u5316\u3002\u4e16\u754c\u672c\u8eab\u5728\u53d8\u5316\uff0c\u8f6f\u4ef6\u4e5f\u5728\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u8981\u5b8c\u5168\u9632\u6b62\u4ee3\u7801\u8150\u70c2\uff0c\u552f\u4e00\u7684\u65b9\u6cd5\u5c31\u662f\u9488\u5bf9\u4e00\u4e2a\u6c38\u4e0d\u6539\u53d8\u7684\u5e73\u53f0\u3002\u4e0d\u4ec5\u662f\u5e73\u53f0\u672c\u8eab\uff0c\u8fd8\u6709\u5e73\u53f0\u4e0e\u5916\u90e8\u7684\u6bcf\u4e2a\u63a5\u53e3\u3001\u6bcf\u4e2a\u8bbe\u5907\u3001\u6587\u4ef6\u683c\u5f0f\u548c\u7f51\u7edc\u534f\u8bae\u3002\u6211\u4eec\u65e0\u6cd5\u963b\u6b62\u4e16\u754c\u7684\u53d8\u5316\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5728\u66f4\u7a33\u5b9a\u7684\u57fa\u7840\u4e0a\u6784\u5efa\u8f6f\u4ef6\u3002\u5c31\u50cf\u65e7\u91d1\u5c71\u7684\u5343\u79a7\u5927\u53a6\u4e00\u6837\uff0c\u73b0\u4ee3\u8f6f\u4ef6\u662f\u5efa\u7acb\u5728\u6211\u4eec\u811a\u4e0b\u4e0d\u65ad\u79fb\u52a8\u7684\u8f6f\u571f\u4e0a\u7684\uff0c\u4f46\u5b83\u4e0d\u4e00\u5b9a\u662f\u8fd9\u6837\u7684\u3002\n\u5c3d\u7ba1\u4e16\u754c\u786e\u5b9e\u5728\u53d8\u5316\uff0c\u4f46\u8ba1\u7b97\u4e16\u754c\u7684\u8bb8\u591a\u5143\u7d20\u4ecd\u7136\u76f8\u5f53\u7a33\u5b9a\u3002\u7535\u8111\u952e\u76d8\u4ece20\u4e16\u7eaa50\u5e74\u4ee3\u5c31\u5f00\u59cb\u51fa\u73b0\u4e86\u3002\u81ea20\u4e16\u7eaa80\u5e74\u4ee3\u4ee5\u6765\uff0c\u5f69\u8272\u663e\u793a\u5668\u5c31\u5df2\u7ecf\u51fa\u73b0\u4e86\u3002\u5341\u591a\u5e74\u6765\uff0c\u89e6\u6478\u8bbe\u5907\u5df2\u7ecf\u53f8\u7a7a\u89c1\u60ef\u3002IPv4\u4e8e1981\u5e74\u63a8\u51fa\uff0cIPv6\u4e8e1995\u5e74\u63a8\u51fa\u3002\u5982\u679c\u6211\u5199\u7684\u7a0b\u5e8f\u53ea\u9700\u8981\u8bfb\u53d6\u952e\u76d8\u548c\u6307\u9488\u8bbe\u5907\u7684\u8f93\u5165\uff0c\u5e76\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u50cf\u7d20\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u6ca1\u6709\u771f\u6b63\u7684\u7406\u7531\u9700\u8981\u4e2d\u65ad\u3002\u7528\u4e8e\u4ece\u952e\u76d8\u83b7\u53d6\u8f93\u5165\u548c\u5c06\u5e27\u6e32\u67d3\u5230\u663e\u793a\u5668\u7684API\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u3002\u4e16\u754c\u5c06\u4e0d\u65ad\u53d8\u5316\uff0c\u65b0\u7684I/O\u8bbe\u5907\u5c06\u88ab\u53d1\u660e\uff0c\u4f46\u5373\u4f7f\u5728200\u5e74\u540e\uff0c\u952e\u76d8\u548c\u5f69\u8272\u663e\u793a\u5668\u7684\u6982\u5ff5\u4e5f\u5e94\u8be5\u6613\u4e8e\u7406\u89e3\u548c\u4f7f\u7528\u3002\n\u6700\u8fd1\uff0c\u6211\u4e00\u76f4\u5728\u8003\u8651\u865a\u62df\u673a\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u6211\u4eec\u60f3\u521b\u9020\u51fa\u4e0d\u4f1a\u5d29\u6e83\u7684\u8f6f\u4ef6\uff0c\u4e5f\u8bb8\u6211\u4eec\u9700\u8981\u7684\u662f\u67d0\u79cd\u53ef\u6267\u884c\u4ee3\u7801\u5b58\u6863\u683c\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u6781\u7b80\u7684\u865a\u62df\u673a\uff0c\u5e26\u6709\u4e00\u5c0f\u7ec4I/O\u8bbe\u5907\uff0c\u8fd9\u4e9b\u8bbe\u5907\u901a\u8fc7\u4e00\u4e2a\u5c0f\u7684API\u754c\u9762\u3001\u4e00\u4e2a\u5c0f\u7684RISC\u6307\u4ee4\u96c6\u8fde\u63a5\uff0c\u603b\u4f53\u8bbe\u8ba1\u5c3d\u53ef\u80fd\u7b80\u5355\u548c\u7a33\u5b9a\u3002\u6709\u70b9\u50cf\u73b0\u4ee3\u7248\u7684Commodore 64\uff0c\u5177\u6709\u9ad8\u5206\u8fa8\u7387\u5f69\u8272\u663e\u793a\u5c4f\u548c\u73b0\u4ee3\u673a\u5668\u7684\u6027\u80fd\u3002\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u6837\u7684\u4e1c\u897f\u9002\u7528\u4e8e\u6bcf\u4e00\u4e2a\u7528\u4f8b\uff0c\u4f46\u6211\u731c\u6d4b\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u8bb8\u591a\u8f6f\u4ef6\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4ee5\u76f8\u5f53\u7b80\u5355\u7684\u65b9\u5f0f\u4e0e\u5916\u90e8\u4e16\u754c\u8fdb\u884c\u4ea4\u4e92\u3002\u4f8b\u5982\uff0c\u5b83\u9700\u8981\u4ece\u7528\u6237\u90a3\u91cc\u83b7\u53d6\u9f20\u6807\u70b9\u51fb\u6216\u89e6\u6478\u8bbe\u5907\u65b9\u9762\u7684\u8f93\u5165\uff0c\u9700\u8981\u7ed8\u5236\u50cf\u7d20\u6765\u663e\u793a\u7528\u6237\u754c\u9762\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u8bbf\u95ee\u7f51\u7edc\u3002\u8be5\u8f6f\u4ef6\u57fa\u672c\u4e0a\u4e0d\u9700\u8981\u94fe\u63a5\u5230\u4efb\u4f55\u5916\u90e8\u5e93\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u53ef\u4ee5\u9759\u6001\u94fe\u63a5\uff0c\u5b83\u53ea\u9700\u8981\u7b80\u5355\u3001\u7a33\u5b9a\u7684\u754c\u9762\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u4e16\u754c\u3002\n\u865a\u62df\u673a\uff08VM\uff09\u7684\u6982\u5ff5\u5e76\u4e0d\u65b0\u9c9c\u3002Java\u865a\u62df\u673a\u8bd5\u56fe\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u57fa\u672c\u4e0a\u5931\u8d25\u4e86\u3002Sun Microsystems\u521b\u9020\u4e86\u8457\u540d\u7684\u201c\u5199\u4e00\u6b21\uff0c\u5230\u5904\u8fd0\u884c\u201d\u53e3\u53f7\uff0c\u4eba\u4eec\u5f00\u59cb\u5f00\u73a9\u7b11\u5730\u5632\u7b11\u5b83\u4e3a\u201c\u5199\u4e00\u6b21\uff0c\u5230\u5904\u8c03\u8bd5\u201d\u3002\u5728\u6211\u770b\u6765\uff0c\u5927\u591a\u6570\u865a\u62df\u673a\u8bbe\u8ba1\u4eba\u5458\u51fa\u9519\u7684\u5730\u65b9\u662f\uff0c\u4ed6\u4eec\u503e\u5411\u4e8e\u66b4\u9732\u592a\u591a\u7684API\uff0c\u800c\u4e14\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u592a\u5927\u7684API\u8868\u9762\u3002\u5f53\u4e00\u4e2aAPI\u6709\u4e00\u4e2a\u5927\u7684\u8868\u9762\u65f6\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u7ec6\u5fae\u7684bug\u548c\u5c0f\u95ee\u9898\u3002\u60a8\u51e0\u4e4e\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u4e0d\u540c\u7684API\u5b9e\u73b0\u3002Web Audio\u548cCanvas HTML API\u5c31\u662f\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u521b\u5efa\u5177\u6709\u5927\u8868\u9762\u79ef\u7684API\u662f\u56e0\u4e3aVM\u8bbe\u8ba1\u8005\u8ba4\u4e3a\u8fd9\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u66f4\u65b9\u4fbf\uff0c\u5e76\u4e14\u4f1a\u4ea7\u751f\u66f4\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4fbf\u5229\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u56e0\u4e3a\u5b83\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u7834\u574f\u3002\u57fa\u672c\u4e0a\uff0c\u8981\u8f93\u51fa\u97f3\u9891\uff0c\u5e94\u8be5\u80fd\u591f\u8f93\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u6d6e\u70b9\u91c7\u6837\u5217\u8868\uff0c\u8981\u7ed8\u5236\u50cf\u7d20\uff0c\u5e94\u8be5\u80fd\u591f\u8f93\u51fa\u4e00\u4e2a\u50cf\u7d20\u7f51\u683c\u3002\u5b83\u4e0d\u5fc5\u6bd4\u8fd9\u590d\u6742\u5f97\u591a\uff0c\u5982\u679cAPI\u4fdd\u6301\u7b80\u5355\uff0c\u5b83\u4eec\u5c31\u4e0d\u592a\u53ef\u80fd\u5d29\u6e83\u3002\n\u4e3a\u4e86\u5c06\u4ee3\u7801\u7834\u574f\u7684\u98ce\u9669\u964d\u5230\u6700\u4f4e\uff0cAPI\u8fb9\u754c\u5e76\u4e0d\u662f\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u7684\u8f6f\u4ef6\u4e0e\u5916\u754c\u8fde\u63a5\uff0c\u4f60\u8fd8\u9700\u8981\u8003\u8651\u6587\u4ef6\u683c\u5f0f\u548c\u7f51\u7edc\u534f\u8bae\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u9009\u62e9\u6210\u719f\u3001\u7a33\u5b9a\u3001\u5f00\u653e\u7684\u6807\u51c6\u901a\u5e38\u662f\u53ef\u53d6\u7684\u3002\u6211\u4e0d\u77e5\u9053\u6211\u5bf9\u4ee3\u7801\u5f52\u6863\u683c\u5f0f\u7684\u60f3\u6cd5\uff0c\u6216\u662f\u4e3a\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8API\u7a33\u5b9a\u6027\u800c\u8bbe\u8ba1\u7684\u865a\u62df\u673a\uff0c\u662f\u5426\u4f1a\u5927\u884c\u5176\u9053\u3002\u76ee\u524d\uff0c\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u601d\u60f3\u5b9e\u9a8c\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u9f13\u52b1\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u8003\u8651\u6709\u76ee\u7684\u5730\u6700\u5c0f\u5316\u4f9d\u8d56\u6027\uff0c\u8bbe\u8ba1\u66f4\u5c0f\u3001\u66f4\u7a33\u5b9a\u7684API\uff0c\u4ee5\u53ca\u4ee5\u4e00\u79cd\u80fd\u591f\u6700\u5927\u9650\u5ea6\u5730\u5ef6\u957f\u5176\u6709\u6548\u4fdd\u8d28\u671f\u7684\u65b9\u5f0f\u5305\u88c5\u4ed6\u4eec\u7684\u8f6f\u4ef6\u3002\u8bbe\u8ba1\u66f4\u5065\u58ee\u3001\u66f4\u8010\u7528\u7684\u8f6f\u4ef6\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4ee5\u8f83\u5c0f\u7684\u65b9\u5f0f\u6539\u5584\u5927\u91cf\u4eba\u7684\u751f\u6d3b\uff0c\u5e76\u5e2e\u52a9\u51cf\u5c11\u7535\u5b50\u5783\u573e\u3002", "note_en": "One of the most frustrating experiences, both as an end user and as a programmer, is to try to run a piece of software that used to work perfectly not that long ago, only to find out that it\u2019s now broken, the software won\u2019t run anymore, and it\u2019s not clear why. The software didn\u2019t change, but something broke, seemingly for no reason. This is often due to the phenomenon known as \u201ccode rot\u201d, or \u201cbit rot\u201d.\n I used to work in a deep learning research lab, and I\u2019ve seen cases where researchers had published code just six months ago, but one or more of the dependencies on which they relied had since made breaking changes. That put us in the unfortunate position of having to troubleshoot someone else\u2019s code. Sometimes you were lucky, and the problem was just that one of the Python packages which their code needed had made breaking changes, and the problem could be fixed by simply editing the project manifest. Sometimes people imported packages which they didn\u2019t really use, and we could completely remove the dependency. Other times we had to resolve conflicts between the multiple Python package managers that could be installed on a given system (pip2, pip3, Conda, and Ubuntu\u2019s apt).\n Editing a list of dependencies or wrangling with package managers doesn\u2019t sound too bad, but PyTorch, the deep learning framework which was key to a lot of this work, had this irritating feature that each release needed a specific version of the Nvidia GPU driver to run. Installing an older GPU driver required root access, which we often didn\u2019t have when working on remote compute clusters. Even if you were doing this on a local machine where you did have root access, the process of installing a new GPU driver was quite slow and tedious. Thanks to Nvidia\u2019s unfriendly driver installers, this process couldn\u2019t be automated, and once you were done, you might succeed in getting a specific release of PyTorch to work, but your other projects couldn\u2019t run anymore, because they needed the latest release instead.\n Researchers are encouraged to publish their code for the sake of replicability, but there\u2019s not much point if nobody else is able to run said code a few months down the line. As such, we started to encourage those wishing to publish their code to rely on containerization using either Docker or Singularity. That fixed issues such as broken Python packages, incompatible versions of PyTorch or TensorFlow and missing libraries on the host system. However, there was another problem, which is that much deep learning code can\u2019t really run fast enough on a CPU alone to be usable. Most of the code we saw required GPU acceleration. The solution to enable that was to use  nvidia-docker, a special version of Docker which allowed code access to the host\u2019s Nvidia GPU drivers. This, however, reintroduced the problem that the code running inside the container needed a special version of the GPU drivers to be installed on the host machine to run correctly. Nvidia\u2019s solution to give people access to GPUs inside a Docker container was to breach the container and expose details of the host system in the process.\n How much time do we collectively waste, every year, fixing bugs due to broken dependencies? How many millions of hours of productivity are lost every single day? How much time do we spend rewriting software that worked just fine before it was broken? In my opinion, code rot is a problem that we ought to try to fix, or at least alleviate. Because of fundamental reasons I\u2019ll discuss later in this post, code rot probably can\u2019t ever be fully eliminated, but I think the situation could be made a lot better through more principled and forward-thinking software engineering. At the very least, the situation would be improved if we acknowledged that code rot is a problem, and understood what causes it to happen in the first place.\n How can we avoid code breakage? Linus Torvalds seems to think that in general, when compiling software, it\u2019s  better to statically link libraries if you can, because very few shared libraries are actually version safe, and with dynamic linking, you\u2019re always adding complexity and exposing yourself to the risk that the system your software is going to get installed on won\u2019t have a compatible version of the libraries you need.\n In my opinion, for software that relies on a package manager, it\u2019s better to fix package version numbers if possible. That is, to specify directly in the manifest of your package which version of each dependency to use. The reason for this is that you unfortunately can\u2019t trust newer version of your dependencies not to make breaking changes, and often, one broken dependency is all it takes to render your software broken. In some cases, programmers may avoid specifying fixed version numbers because package managers such as Python\u2019s pip don\u2019t support having multiple versions of a given package installed at the same time, which could mean that the version of a package you request could clash with other software already installed on a given system. This is a shortcoming that needs to be addressed by package manager if we want to build reliable software.\n There\u2019s another problem though. Part of Python\u2019s appeal is that it makes it easy to link with C code through its Foreign Function Interface (FFI). This is part of what made Python so popular, because it makes it easy for anyone to write a package to interface with commonly available C libraries and benefit from the strength of the C ecosystem. However, this convenience comes at a cost. The FFI is essentially a trap door through which software gets access to external dependencies that can\u2019t be controlled by the package manager, which vastly increases the risk of code breakage. Third party package managers such as Conda try to address this by managing the installation of external libraries as well as Python code, but this can potentially introduce conflicts with Python packages installed through other means.\n In my opinion, the most practical solution to manage with these problems in the real world is to take a conservative and  minimalistic approach to software design. Purposefully minimize dependencies if possible. Don\u2019t add new dependencies unless the value added is really worth the added cost of potential code breakage down the line.  Avoid external dependencies as much as it\u2019s reasonable to do so, and when you do choose to rely on external packages and libraries, pick libraries that have a long history of being stable, well-maintained, backwards compatible and easy to install. Remember that it can take just one broken dependency for your software to fail to run on a user\u2019s system, and if your software breaks, they  might not even tell you it\u2019s broken.\n Good software engineering practices can go a long way towards minimizing the risk of code rot, but I think it\u2019s also valuable to ask ourselves what is the cause of code rot in the first place. Could we possibly build software that doesn\u2019t rot? One interesting observation is that such software does exist, in a sense. People still write software for retro gaming platforms such as the Super NES and the Atari 2600. These platforms are essentially frozen in time, with a fixed set of devices and limited I/O capabilities.  The fixedness of the platform, its simplicity, and the impossibility of relying on external software packages means that any software you write for it is unlikely to be broken by changes in the platform itself.\n The root cause of code rot is change. The world itself is changing, and so is software. As such, the only way to be completely protected from code rot is to target a platform that never changes. Not just the platform itself, but every interface the platform has to the outside, every device, file format and networking protocol. We can\u2019t stop the world from changing, but we can try to build software on more stable foundations.\u00a0Like San Francisco\u2019s  Millennium Tower, modern software is build on soft soil that keeps shifting under our feet, but it doesn\u2019t have to be that way.\n Although the world does change, many elements of the computing world remain fairly stable. Computer keyboards have been around since the 1950s. Color displays have been around since the 1980s. Touch devices have been commonplace for over a decade. IPv4 was introduced in 1981 and IPv6 in 1995. If I\u2019m writing a program that only needs to read input from a keyboard and pointer device, and display pixels on a screen, there\u2019s no real reason why that program ever needs to break. The APIs for getting input from a keyboard and rendering frames to a display can be extremely simple. The world will keep changing and new I/O devices will be invented, but even 200 years from now, the concept of a keyboard and a color display should be easy to understand and interface with.\n Recently, I\u2019ve been thinking about the design of virtual machines. If we want to create software that doesn\u2019t break, maybe what we need is some kind of executable code archival format. A minimalistic virtual machine with a small set of I/O devices that are interfaced through a small API surface, a small RISC instruction set, and an overall design that\u2019s generally kept as simple and stable as possible. Something like the modern equivalent of a Commodore 64, with a high-resolution color display and the performance of a modern machine. I don\u2019t think something like that would be applicable for every use cases, but I surmise that much of the software we use only really needs to interface with the outside world in fairly simple ways. For example, it needs to get input from the user in terms of mouse clicks or touch devices, it needs to draw pixels to display a user interface, and it might also need to read and write files, and maybe access the network. That software doesn\u2019t fundamentally need to link to any external libraries, everything can be statically linked, it just needs simple, stable interfaces to access the outside world.\n The idea of a  Virtual Machine (VM) isn\u2019t new. The Java VM tried to achieve this but largely failed. Sun Microsystems coined the famous  \u201cwrite once, run anywhere\u201d slogan, which people began to jokingly mock as \u201cwrite once, debug everywhere\u201d. In my opinion, the area where most VM designers go wrong is that they tend to expose too many APIs, and each of them has an API surface that is much too large. When an API has a large surface, it\u2019s very easy for subtle bugs and corner cases to creep in. You almost inevitably end up with different implementations of the API behaving in different ways. The Web Audio and Canvas HTML APIs are good examples of this. APIs with a large surface are created because VM designers believe this is more convenient for programmers, and will yield better performance. However, this convenience has a cost, in that it makes code breakage much more likely. Fundamentally, to output audio, one should be able to output a simple list of floating-point samples, and to draw pixels, one should be able to output a grid of pixels. It doesn\u2019t have to be much more complex than that, and if the APIs were kept simpler, they would be much less likely to break.\n In order to minimize the risk of code breakage, API boundaries are not the only thing one has to think about. If your software interfaces with the outside world, you also need to think about file formats and networking protocols. In this area, choosing mature, stable, open standards is generally preferable. I don\u2019t know if my idea of a code archival format, or a virtual machine designed for maximum API stability will see the light of day. For the moment, it remains a thought experiment, but in the meantime, I encourage every developer to think about purposefully minimizing dependencies, about designing smaller, more stable APIs and about packaging their software in a way that will maximize its useful shelf life. Engineering more robust and durable software is one way in which you can improve the lives of a large number of people in small ways and help reduce electronic waste.", "posttime": "2022-02-13 18:57:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u4e0d\u4f1a,doesn", "title": "\u4e0d\u4f1a\u8150\u70c2\u7684\u4ee3\u7801", "title_en": "Code That Doesn\u2019t Rot", "transed": 1, "url": "https://pointersgonewild.com/2022/02/11/code-that-doesnt-rot/", "via": "", "real_tags": ["\u4ee3\u7801", "\u4e0d\u4f1a", "doesn"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072935, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Western Digital\u8868\u793a\uff0c\u7531\u4e8eNAND\u751f\u4ea7\u8bbe\u65bd\u7684\u6c61\u67d3\u95ee\u9898\uff0c\u5176\u95ea\u5b58\u5b58\u50a8\u81f3\u5c11\u635f\u5931\u4e866.5 EB\uff0865\u4ebfGB\uff09\u3002\u636e\u5e02\u573a\u7814\u7a76\u516c\u53f8TrendForce\u79f0\uff0c\u6c61\u67d3\u53ef\u80fd\u5bfc\u81f4\u56fa\u6001\u786c\u76d8\u7684\u4e3b\u8981\u7ec4\u4ef6NAND\u7684\u4ef7\u683c\u98d9\u534710%\u3002\u4efb\u4f55\u6f5c\u5728\u7684NAND\u77ed\u7f3a\u6216\u4ef7\u683c\u6ce2\u52a8\u53ef\u80fd\u4f1a\u5f71\u54cdPC\u5e02\u573a\u5728\u672a\u6765\u51e0\u4e2a\u6708\uff0c\u8fd9\u662f\u53e6\u4e00\u4e2a\u5927\u7684\u4e00\u5e74\uff0c\u57282021\uff0c\u5c3d\u7ba1\u5168\u7403\u82af\u7247\u77ed\u7f3a\u548c\u5bf9GPU\u7684\u9700\u6c42\u3002\n\u5236\u9020\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u6750\u6599\u6c61\u67d3\u4f3c\u4e4e\u5df2\u4e8e1\u6708\u4e0b\u65ec\u5728\u65e5\u672c\u7684\u4e24\u5bb6\u5de5\u5382\u68c0\u6d4b\u5230\uff0cWestern Digital\u7684\u5408\u8d44\u4f19\u4f34Kioxia\uff08\u524d\u4e1c\u829d\uff09\u900f\u9732\uff0c\u5b83\u5df2\u5f71\u54cd\u5230BiCS 3D NAND\u95ea\u5b58\u3002\n\u6839\u636eTrendForce\u7684\u6570\u636e\uff0cWestern Digital\u548cKioxia\u7684\u5408\u4f5c\u5173\u7cfb\u7ea6\u5360NAND\u95ea\u5b58\u5e02\u573a\u768430%\u3002Western Digital\u548cKioxia\u4e3b\u8981\u4e3aPC\u63d0\u4f9bSSD\u548ceMMC\u5b58\u50a8\u9a71\u52a8\u5668\uff0cWestern Digital\u662f\u8be5\u884c\u4e1a\u7684\u9886\u5148\u4f9b\u5e94\u5546\u4e4b\u4e00\u3002\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u662f\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u4e86\u6c61\u67d3\uff0c\u5e02\u573a\u4e0a\u7684\u4ea7\u54c1\u662f\u5426\u9700\u8981\u53ec\u56de\uff0c\u6216\u8005\u4f55\u65f6\u6062\u590d\u751f\u4ea7\u3002Western Digital\u8868\u793a\uff0c\u5b83\u6b63\u5728\u201c\u4e0e\u5408\u8d44\u4f19\u4f34Kioxia\u5bc6\u5207\u5408\u4f5c\uff0c\u5b9e\u65bd\u5fc5\u8981\u7684\u63aa\u65bd\uff0c\u5c3d\u5feb\u5c06\u8bbe\u65bd\u6062\u590d\u5230\u6b63\u5e38\u8fd0\u884c\u72b6\u6001\u3002\u201d", "note_en": "Western Digital says it has lost at least 6.5 exabytes (6.5 billion gigabytes) of flash storage due to contamination issues at its NAND production facilities. The contamination could see the price of NAND \u2014 the main component of SSDs \u2014 spike up to 10 percent, according to  market research firm TrendForce. Any potential NAND shortages or price fluctuations could affect the PC market over the next few months, which had  another big year in 2021 despite global chip shortages and demand for GPUs.\n The contamination of materials used in the manufacturing processes appears to have been detected in late January at two plants in Japan, with Western Digital\u2019s joint venture partner, Kioxia (previously Toshiba),  revealing it has affected BiCS 3D NAND flash memory.\n Western Digital and Kioxia\u2019s partnership amounts to around 30 percent of the NAND flash market, according to TrendForce. Both Western Digital and Kioxia primarily supply SSD and eMMC storage drives for PCs, and Western Digital is one of the leading suppliers in the industry.\n It\u2019s not clear what caused the contamination, whether products on the market will need to be recalled, or when production will resume.  Western Digital says it\u2019s \u201cworking closely with its joint venture partner, Kioxia, to implement necessary measures that will restore the facilities to normal operational status as quickly as possible.\u201d", "posttime": "2022-02-13 18:56:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82af\u7247,nand", "title": "WD\u635f\u5931650\u4ebfGB NAND\u82af\u7247\u540e\uff0cSSD\u4ef7\u683c\u53ef\u80fd\u4f1a\u98d9\u5347", "title_en": "SSD prices could spike after WD loses 6.5 bln gigabytes of NAND chips", "transed": 1, "url": "https://www.theverge.com/2022/2/11/22928867/western-digital-nand-flash-storage-contamination", "via": "", "real_tags": ["\u82af\u7247", "nand"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072933, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d1\u5e03\uff1a\u4eca\u5929\uff0c\u6211\u60f3\u5c31\u6211\u4eec\u6700\u8fd1\u5728Datadog\u4e0a\u53d1\u5e03\u7684\u4e00\u4e9b\u65b0\u7684\u8bc4\u6d4b\u529f\u80fd\u5206\u4eab\u4e00\u4e9b\u60f3\u6cd5\u3002\u6211\u5c06\u89e3\u91ca\u4ed6\u4eec\u505a\u4ec0\u4e48\uff0c\u5982\u4f55\u5de5\u4f5c\uff0c\u4ee5\u53ca\u54ea\u4e9bGo 1.18\u6350\u6b3e\u662f\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u987a\u5229\u8fdb\u884c\u3002\n\u8ba9\u6211\u4eec\u4ece\u6700\u7ec8\u7ed3\u679c\u5f00\u59cb\u3002\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a100\u6beb\u79d2\u7684\u8ddf\u8e2a\uff0c\u5176\u4e2d10\u6beb\u79d2\u7528\u4e8e\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u4f4690\u6beb\u79d2\u4ecd\u7136\u65e0\u6cd5\u89e3\u91ca\u3002\n\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u901a\u5e38\u9700\u8981\u7814\u7a76\u4ee3\u7801\u4ee5\u5bfb\u627e\u7ebf\u7d22\u3002\u4f60\u5fd8\u4e86\u4e00\u4e9b\u8ffd\u8e2a\u4eea\u5668\u4e86\u5417\uff1f\u662f\u65f6\u5019\u6dfb\u52a0\u3001\u91cd\u65b0\u90e8\u7f72\u5e76\u7b49\u5f85\u4e86\u3002\u6216\u8005\u4f60\u9700\u8981\u4f18\u5316\u4f60\u7684\u56f4\u68cb\u4ee3\u7801\uff1f\u5982\u679c\u662f\uff0c\u600e\u4e48\u505a\uff1f\n\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u662f\u53ef\u7ba1\u7406\u7684\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u2014\u2014\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5206\u6790\u6570\u636e\u6765\u586b\u8865\u7a7a\u767d\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u65b0\u7684\u4ee3\u7801\u70ed\u70b9\u529f\u80fd\u6240\u505a\u7684\u3002\u5982\u4e0b\u6240\u793a\uff0c\u6211\u4eec\u7684\u8bf7\u6c42\u5360\u7528\u4e8690\u6beb\u79d2\u7684CPU\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u4fe1\u53f7\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u6392\u9664\u975eCPU\u6d3b\u52a8\uff0c\u5982\u672a\u6307\u4ee4\u7684\u670d\u52a1\u8c03\u7528\u3001\u4e92\u65a5\u51b2\u7a81\u3001\u901a\u9053\u7b49\u5f85\u3001\u7761\u7720\u7b49\u3002\n\u66f4\u68d2\u7684\u662f\uff0c\u5f53\u70b9\u51fb\u201c\u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u201d\u6309\u94ae\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728CPU\u65f6\u95f4\u4e0a\u67e5\u770b\u6bcf\u4e2a\u8bf7\u6c42\u7684\u706b\u7130\u56fe\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u90fd\u82b1\u5728\u4e86JSON\u7f16\u7801\u4e0a\u3002\n\u7531\u4e8e\u6211\u4eec\u7684HTTP\u5904\u7406\u51fd\u6570\u6ca1\u6709\u51fa\u73b0\u5728\u5806\u6808\u8ddf\u8e2a\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u95f4\u63a5\u63a8\u65ad\uff0c\u8fd9\u9879\u5de5\u4f5c\u662f\u5728\u5904\u7406\u8bf7\u6c42\u7684goroutine\u751f\u6210\u7684\u540e\u53f0goroutine\u4e2d\u5b8c\u6210\u7684\u3002\n\u9664\u4e86\u4f7f\u7528\u6982\u8981\u6587\u4ef6\u5206\u89e3\u8ddf\u8e2a\u4fe1\u606f\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u505a\u76f8\u53cd\u7684\u4e8b\u60c5\uff0c\u6309\u7aef\u70b9\u5206\u89e3\u6982\u8981\u6587\u4ef6\u7684CPU\u65f6\u95f4\uff0c\u5982\u4e0b\u6240\u793a\u3002\u590d\u9009\u6846\u53ef\u7528\u4e8e\u6309\u7aef\u70b9\u8fc7\u6ee4\u914d\u7f6e\u6587\u4ef6\u3002\n\u4e3a\u4e86\u66f4\u5bb9\u6613\u7406\u89e3\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u4f8b\u5982\u90e8\u7f72\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6570\u636e\u7ed8\u5236\u6210\u56fe\u8868\u3002\n\u8fd9\u4e9b\u529f\u80fd\u5efa\u7acb\u5728\u4e00\u4e2a\u540d\u4e3approf\u6807\u7b7e\u7684\u73b0\u6709Go\u529f\u80fd\u4e4b\u4e0a\uff0c\u8be5\u529f\u80fd\u5141\u8bb8\u6211\u4eec\u5c06\u4efb\u610f\u952e/\u503c\u5bf9\u9644\u52a0\u5230\u5f53\u524d\u8fd0\u884c\u7684goroutine\u3002\u5f53\u751f\u6210\u65b0\u7684goroutine\u65f6\uff0c\u8fd9\u4e9b\u6807\u7b7e\u4f1a\u81ea\u52a8\u7ee7\u627f\uff0c\u56e0\u6b64\u5b83\u4eec\u4f1a\u8986\u76d6\u5230\u4ee3\u7801\u7684\u6240\u6709\u89d2\u843d\u3002\u5173\u952e\u7684\u662f\uff0c\u8fd9\u4e9b\u6807\u7b7e\u4e5f\u96c6\u6210\u5230\u4e86CPU\u6863\u6848\u5668\u4e2d\uff0c\u56e0\u6b64\u5b83\u4eec\u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u5b83\u751f\u6210\u7684CPU\u6863\u6848\u4e2d\u3002\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u4fee\u6539\u4e86dd trace go\u5e93\u4e2d\u7684\u8ddf\u8e2a\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728\u521b\u5efa\u65b0\u7684span\u65f6\u81ea\u52a8\u5e94\u7528\u8bf8\u5982span id\u548c\u7aef\u70b9\u4e4b\u7c7b\u7684\u6807\u7b7e\u3002\u6b64\u5916\uff0c\u5f53\u8de8\u5ea6\u5b8c\u6210\u65f6\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u79fb\u9664\u6807\u7b7e\u3002\u8fd9\u79cd\u5b9e\u73b0\u7684\u7b80\u5316\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a\nfunc StartSpan\uff08ctx context.context\uff0c\u7aef\u70b9\u5b57\u7b26\u4e32\uff09*span{span:=&span{id:rand.Uint64\uff08\uff09\uff0crestoreCX:ctx}\u6807\u7b7e\uff1a=pprof\u3002\u6807\u7b7e\uff08&#34\uff1bspan#u id&#34\uff1b\uff0cfmt.Sprintf\uff08&#34\uff1b%d&#34\uff1b\uff0cspan.id\uff09\uff0c&#34\uff1b\u7ec8\u70b9&#34\uff1b\uff0c\u7ec8\u70b9\uff0c\uff09pprof\u3002SetGoroutineLabels\uff08pprof.WithLabels\uff08ctx\uff0clabels\uff09\uff09\u8fd4\u56despan}type span\u7ed3\u6784{id uint64 restoreCtx context.context}func\uff08s*span\uff09Finish\uff08\uff09{pprof.SetGoroutineLabels\uff08s.restoreCtx\uff09}\n\u6211\u4eec\u7684\u5b9e\u9645\u5b9e\u73b0\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u8fd8\u964d\u4f4e\u4e86\u6cc4\u9732PII\uff08\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f\uff09\u7684\u98ce\u9669\u3002\u5b83\u4f1a\u81ea\u52a8\u8986\u76d6contrib\u5305\u4e2d\u7684HTTP\u548cgRPC\u5305\u88c5\uff0c\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5b9e\u73b0\u7684\u4efb\u4f55\u81ea\u5b9a\u4e49\u8ddf\u8e2a\u3002\n\u4e00\u65e6\u6211\u4eec\u7684\u540e\u7aef\u63a5\u6536\u5230\u8ddf\u8e2a\u548c\u5206\u6790\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u6267\u884c\u4e3a\u672c\u6587\u524d\u9762\u5c55\u793a\u7684\u529f\u80fd\u63d0\u4f9b\u52a8\u529b\u6240\u9700\u7684\u67e5\u627e\u3002\n\u4f5c\u4e3a\u5b9e\u73b0\u8fd9\u4e9b\u65b0\u7279\u6027\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u505a\u4e86\u5f88\u591a\u6d4b\u8bd5\uff0c\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\u3001\u5fae\u89c2\u57fa\u51c6\u6d4b\u8bd5\u3001\u5b8f\u89c2\u57fa\u51c6\u6d4b\u8bd5\u7b49\u7b49\u3002\u6b63\u5982\u6240\u6599\uff0c\u8fd9\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u66b4\u9732\u4e86\u95ee\u9898\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u5feb\u901f\u4fee\u590d\u5b83\u4eec\u3002\n\u7a0d\u5fae\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u5728Go\u8fd0\u884c\u65f6\u4e2d\u53d1\u73b0\u4e86\u51e0\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5f71\u54cd\u4e86pprof\u6807\u7b7e\u7684\u51c6\u786e\u6027\uff0c\u4ee5\u53ca\u603b\u4f53\u4e0a\u7684CPU\u914d\u7f6e\u3002\u597d\u6d88\u606f\u662f\uff0c\u5728\u793e\u533a\u7684\u5e2e\u52a9\u4e0b\uff0cGo\u7ef4\u62a4\u4eba\u5458\u548c\u6211\u4eec\u8fd9\u8fb9\u7684\u8d21\u732e\u2014\u2014\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u90fd\u5728\u5373\u5c06\u53d1\u5e03\u7684Go 1.18\u7248\u672c\u4e2d\u5f97\u5230\u4e86\u89e3\u51b3\u3002\n\u5982\u679c\u60a8\u5bf9\u8fd9\u65b9\u9762\u7684\u5168\u90e8\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u8bf7\u67e5\u770b\u9644\u5e26\u7684\u5e16\u5b50\uff1aGo 1.18\u4e2d\u7684\u8bc4\u6d4b\u6539\u8fdb\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9664\u975e\u4f60\u4f7f\u7528\u5927\u91cfcgo\uff0c\u5426\u5219Go 1.17\u4e2d\u7684\u65b0\u529f\u80fd\u5e94\u8be5\u5df2\u7ecf\u975e\u5e38\u9002\u5408\u4f60\u4e86\u3002\n\u6211\u76ee\u524d\u6b63\u5728\u5bfb\u627e\u5bf9\u8fd9\u4e9b\u65b0\u529f\u80fd\u611f\u5174\u8da3\u7684\u4eba\uff0c\u4ee5\u4fbf\u83b7\u5f97\u53cd\u9988\u3002\n\u65e0\u8bba\u4f60\u662f\u73b0\u6709\u5ba2\u6237\u8fd8\u662f\u6f5c\u5728\u5ba2\u6237\uff0c\u53ea\u8981\u7ed9\u6211\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e30\u5206\u949f\u7684\u7f29\u653e\u3002\u4e3a\u4e86\u8ba9\u4ea4\u6613\u66f4\u751c\u871c\uff0c\u6211\u4e5f\u5f88\u4e50\u610f\u56de\u7b54\u4e00\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\uff1a\uff09\u3002\n\u5982\u679c\u60f3\u5feb\u901f\u5165\u95e8\uff0c\u53ea\u9700\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5373\u53ef\u3002\n\u6b64\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a\u5b8c\u6574\u5de5\u4f5c\u7684dd trace go\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u663e\u793a\u4e86\u4e00\u4e2a\u5305\u62ecHTTP\u548cPostgreSQL\u7684\u96c6\u6210\u3002\n\u5305\u4e3b\u8981\u5bfc\u5165\uff08&#34\uff1btime&#34\uff1b&#34\uff1bgopkg.in/DataDog/dd trace go.v1/ddtrace/tracer&#34\uff1b&#34\uff1bgopkg.in/DataDog/dd trace go.v1/profiler&#34\uff1b\uff09func main\uff08\uff09{const\uff08env=&#34\uff1bdev&#34\uff1bservice=&#34\uff1bexample&#34\uff1bversion=&#34\uff1b0.1&#34\uff1b\uff09tracer.Start\uff08tracer.WithEnv\uff08env\uff09\u3001tracer.WithService\uff08service\uff09\u3001tracer.WithService\uff08version\uff09\u3001tracer.withprofilercodehospots\uff08true\uff09\u3001tracer.WithProfilerEndpoints\uff08true\uff09\u3001defer\uff08\uff09\uff09tracer.Stop err:=profiler.Start\uff08profiler.with\u670d\u52a1\uff08service\uff09\uff0cprofiler\u3002WithEnv\uff08env\uff09\uff0c\u63a2\u67e5\u5668\u3002WithVersion\uff08version\uff09\uff0c//\u5728\u6240\u6709\u8303\u56f4\u5185\uff0c100%\u7684\u65f6\u95f4\u5185\u542f\u7528CPU\u5206\u6790\u4ee5\u6355\u83b7\u70ed\u70b9\u4fe1\u606f//\u7684\u529f\u80fd\u3002\u76ee\u524d\u9ed8\u8ba4\u503c\u4e3a25%\uff0c\u4f46\u5728//\u4e0b\u4e00\u4e2add trace go\u53d1\u884c\u7248\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u63a2\u67e5\u5668\u3002CPUDuration\uff0860*time.s\uff09\uff0c\u5206\u6790\u5668\u3002WithPeriod\uff0860*\u65f6\u95f4\u79d2\uff09\uff0c\u5982\u679c\u51fa\u9519\u65e0{panic\uff08err\uff09}\u5ef6\u8fdf\u5206\u6790\u5668\u3002\u505c\u6b62\uff08\uff09/&lt\uff1b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801&gt\uff1b}\n--Felix Geisend\u00f6rfer\u901a\u8fc7RSS\u6216\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605\u6b64\u535a\u5ba2\uff0c\u6216\u901a\u8fc7Twitter\u4ece\u6211\u90a3\u91cc\u83b7\u53d6\u5c0f\u7684\u66f4\u65b0\u3002", "note_en": "Published:   Today I\u2019d like to share a few thoughts on a few new  profiling features we recently shipped at Datadog. I\u2019ll explain what they do, how they work, and which Go 1.18 contributions were needed in order for things to work well.\n  Let\u2019s start with the end result. Imagine you have a 100ms trace where 10ms are spent on a database query, but 90ms remain unexplained.\n  When this happens, you usually need to study your code for clues. Did you forget some tracing instrumentation? Time to add it, redeploy and wait. Or perhaps you need to optimize your Go code? If yes, how?\n This workflow is manageable, but it turns out there is a better way \u2013 we can use profiling data to fill in the gaps. And that\u2019s exactly what our new  Code Hotspots feature does. As you can see below, our request used 90ms On-CPU time. This is a strong signal that lets us rule out Off-CPU activity such as uninstrumented service calls, mutex contentions, channel waits, sleeping, etc.\n  Even better, when clicking the \u201cView Profile\u201d button, we can view this On-CPU time as a per-request flame graph. Here we can see that our time was spent on JSON encoding.\n  And since our HTTP handler functions don\u2019t show up in the stack traces, we can also indirectly infer that this work was done in a background goroutine spawned by the goroutine handling the request.\n In addition to breaking down tracing information using profiling, we can also do the opposite and break down a profile\u2019s  CPU Time by Endpoint as shown below. The checkboxes can be used to filter the profile by endpoint.\n  And to make it easier to understand changes over time, e.g. after a deployment, we can graph this data.\n   The features are built on-top of an existing Go feature called  pprof labels which allows us to attach arbitrary key/value pairs to the currently running goroutine. These labels are automatically inherited when a new goroutine is spawned, so they reach into all corners of your code. Crucially these labels are also integrated into the CPU profiler, so they automatically end up in the CPU profiles it produces.\n So to implement this feature, we modified the tracing code in our  dd-trace-go library to automatically apply labels such as  span id and  endpoint whenever a new span is created. Additionally we take care of removing the labels when the span is finished. A simplified example of this implementation can be seen below:\n func  StartSpan(ctx context.Context, endpoint  string)  *span {\tspan  :=  &amp;span{id: rand. Uint64(), restoreCtx: ctx}\tlabels  := pprof. Labels(\t\t &#34;span_id&#34;, fmt. Sprintf( &#34;%d&#34;, span.id),\t\t &#34;endpoint&#34;, endpoint,\t)\tpprof. SetGoroutineLabels(pprof. WithLabels(ctx, labels))\t return span} type span  struct {\tid  uint64\trestoreCtx context.Context} func (s  *span)  Finish() {\tpprof. SetGoroutineLabels(s.restoreCtx)}\n Our actual implementation is a bit more complex and also reduces the risk of leaking PII (Personally Identifiable Information). It automatically covers the HTTP and gRPC wrappers in our contrib package, as well as any custom traces your application may implement.\n Once our backend receives the tracing and profiling information, we\u2019re able to perform the lookups needed to power the features showcased earlier in this post.\n  As part of implementing these new features, we did a lot of testing, including unit tests, micro-benchmarks, macro-benchmarks and more. As expected, this surfaced problems in our code and allowed us to quickly fix them.\n Somewhat less expected, we also discovered several issues in the Go runtime that were impacting the accuracy of pprof labels, as well as CPU profiling in general. The good news is that with the help of the community, the Go maintainers and contributions from our end \u2013 all of these issues have been fixed in the upcoming Go 1.18 release.\n If you\u2019re interested in the full details on this, check out the companion post:  Profiling Improvements in Go 1.18.\n That being said, unless you use a lot of cgo, the new features should already work great for you in Go 1.17.\n  I\u2019m currently looking for people who are interested in taking these new features for a spin in order to get feedback.\n It doesn\u2019t matter if you\u2019re an existing or potential customer, just  send me an email and we can set up a 30 min zoom. To sweeten the deal, I\u2019m also happy to answer general Go profiling questions along the way :).\n  If you want to get started quickly, you can simply copy the code below into your application.\n Additionally you can check out this fully working  dd-trace-go-demo application that shows an integration including HTTP and PostgreSQL.\n package main import (\t &#34;time&#34;\t &#34;gopkg.in/DataDog/dd-trace-go.v1/ddtrace/tracer&#34;\t &#34;gopkg.in/DataDog/dd-trace-go.v1/profiler&#34;) func  main() {\t const (\t\tenv =  &#34;dev&#34;\t\tservice =  &#34;example&#34;\t\tversion =  &#34;0.1&#34;\t)\ttracer. Start(\t\ttracer. WithEnv(env),\t\ttracer. WithService(service),\t\ttracer. WithServiceVersion(version),\t\ttracer. WithProfilerCodeHotspots( true),\t\ttracer. WithProfilerEndpoints( true),\t)\t defer tracer. Stop()\terr  := profiler. Start(\t\tprofiler. WithService(service),\t\tprofiler. WithEnv(env),\t\tprofiler. WithVersion(version),\t\t // Enables CPU profiling 100% of the time to capture hotspot information \t\t // for all spans. Default is 25% right now, but this might change in the \t\t // next dd-trace-go release. \t\tprofiler. CPUDuration( 60 *time.Second),\t\tprofiler. WithPeriod( 60 *time.Second),\t)\t if err  !=  nil {\t\t panic(err)\t}\t defer profiler. Stop()\t // &lt;your application code&gt; }\n -- Felix Geisend\u00f6rfer Subscribe to this blog via  RSS or  E-Mail or get small updates from me via  Twitter.", "posttime": "2022-02-13 18:48:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ddf\u8e2a,profiling,\u529f\u80fd", "title": "\u5c06Go\u5206\u6790\u4e0e\u8ddf\u8e2a\u8fde\u63a5\u8d77\u6765", "title_en": "Connecting Go Profiling with Tracing", "transed": 1, "url": "https://felixge.de/2022/02/11/connecting-go-profiling-with-tracing/", "via": "", "real_tags": ["\u8ddf\u8e2a", "profiling", "\u529f\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072932, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u6211\u4eec\u7684\u5ba2\u6237&#39\uff1b\u4fdd\u62a4\uff0c\u82f9\u679c\u6ca1\u6709&#39\uff1b\u5728\u8c03\u67e5\u5b8c\u6210\u3001\u8865\u4e01\u6216\u53d1\u5e03\u53ef\u7528\u4e4b\u524d\uff0c\u4e0d\u8981\u62ab\u9732\u3001\u8ba8\u8bba\u6216\u786e\u8ba4\u5b89\u5168\u95ee\u9898\u3002\u82f9\u679c\u5b89\u5168\u66f4\u65b0\u9875\u9762\u4e0a\u5217\u51fa\u4e86\u6700\u65b0\u7248\u672c\u3002\n\u9002\u7528\u4e8e\uff1aiPhone 6s\u53ca\u66f4\u9ad8\u7248\u672c\u3001iPad Pro\uff08\u6240\u6709\u578b\u53f7\uff09\u3001iPad Air 2\u53ca\u66f4\u9ad8\u7248\u672c\u3001iPad\u7b2c\u4e94\u4ee3\u53ca\u66f4\u9ad8\u7248\u672c\u3001iPad mini 4\u53ca\u66f4\u9ad8\u7248\u672c\u548ciPod touch\uff08\u7b2c\u4e03\u4ee3\uff09\n\u5f71\u54cd\uff1a\u5904\u7406\u6076\u610f\u5236\u4f5c\u7684web\u5185\u5bb9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u82f9\u679c\u77e5\u9053\u4e00\u4efd\u62a5\u544a\u79f0\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u5df2\u88ab\u79ef\u6781\u5229\u7528\u3002\n\u6709\u5173\u975e\u82f9\u679c\u5236\u9020\u7684\u4ea7\u54c1\u6216\u975e\u82f9\u679c\u63a7\u5236\u6216\u6d4b\u8bd5\u7684\u72ec\u7acb\u7f51\u7ad9\u7684\u4fe1\u606f\u672a\u7ecf\u63a8\u8350\u6216\u8ba4\u53ef\u3002\u82f9\u679c\u5bf9\u7b2c\u4e09\u65b9\u7f51\u7ad9\u6216\u4ea7\u54c1\u7684\u9009\u62e9\u3001\u6027\u80fd\u6216\u4f7f\u7528\u4e0d\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\u3002\u82f9\u679c\u4e0d\u5bf9\u7b2c\u4e09\u65b9\u7f51\u7ad9\u7684\u51c6\u786e\u6027\u6216\u53ef\u9760\u6027\u505a\u51fa\u4efb\u4f55\u58f0\u660e\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8054\u7cfb\u4f9b\u5e94\u5546\u3002", "note_en": "For our customers&#39; protection, Apple doesn&#39;t disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the\u00a0 Apple security updates\u00a0page.\n    Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation)\n Impact: Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited.\n  Information about products not manufactured by Apple, or independent websites not controlled or tested by Apple, is provided without recommendation or endorsement. Apple assumes no responsibility with regard to the selection, performance, or use of third-party websites or products. Apple makes no representations regarding third-party website accuracy or reliability.  Contact the vendor for additional information.", "posttime": "2022-02-13 18:47:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,\u5b89\u5168,content,\u82f9\u679c", "title": "\u5173\u4e8eiOS 15.3.1\u548ciPadOS 15.3.1\u7684\u5b89\u5168\u5185\u5bb9", "title_en": "About the security content of iOS 15.3.1 and iPadOS 15.3.1", "transed": 1, "url": "https://support.apple.com/en-us/HT213093", "via": "", "real_tags": ["ios", "\u5b89\u5168", "content", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072930, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7edc\u5fc5\u987b\u4e3a\u5404\u79cd\u89c4\u6a21\u7684\u7528\u6237\u3001\u5e7f\u544a\u5546\u548c\u51fa\u7248\u5546\u670d\u52a1\u2014\u2014\u4f46\u7528\u6237\u4f18\u5148\u3002\u7406\u7531\u5f88\u5145\u5206\uff1a\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u4f7f\u7528\u4e92\u8054\u7f51\u6765\u6ee1\u8db3\u66f4\u591a\u7684\u65e5\u5e38\u9700\u6c42\u3002\u4ed6\u4eec\u4e0d\u60f3\u4e8b\u540e\u518d\u8003\u8651\u9690\u79c1\u95ee\u9898\uff1b\u4ed6\u4eec\u60f3\u8981\u8bbe\u8ba1\u9690\u79c1\u3002\n\u7406\u89e3\u8fd9\u4e00\u70b9\u662f\u6211\u4eec\u601d\u8003\u5982\u4f55\u6784\u5efa\u8c37\u6b4c\u5206\u6790\u7684\u6838\u5fc3\uff0c\u8c37\u6b4c\u5206\u6790\u662f\u4e00\u5957\u65e5\u5e38\u5de5\u5177\uff0c\u5e2e\u52a9\u5546\u4e1a\u3001\u516c\u5171\u548c\u975e\u8425\u5229\u90e8\u95e8\u7684\u7ec4\u7ec7\u4e86\u89e3\u8bbf\u95ee\u8005\u5982\u4f55\u4f7f\u7528\u4ed6\u4eec\u7684\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u7edd\u4e0d\u662f\u901a\u8fc7\u8bc6\u522b\u4e2a\u4eba\u6216\u8de8\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u8ddf\u8e2a\u4ed6\u4eec\u3002\n\u7531\u4e8e\u8fd9\u4e9b\u7ec4\u7ec7\u4e2d\u7684\u4e00\u4e9b\u6700\u8fd1\u9762\u4e34\u7740\u5206\u6790\u670d\u52a1\u662f\u5426\u80fd\u4e0e\u7528\u6237\u9690\u79c1\u548c\u4e2a\u4eba\u6570\u636e\u56fd\u9645\u4f20\u8f93\u89c4\u5219\u517c\u5bb9\u7684\u95ee\u9898\uff0c\u6211\u4eec\u60f3\u89e3\u91ca\u4e00\u4e0b\u8c37\u6b4c\u5206\u6790\u505a\u4e86\u4ec0\u4e48\uff0c\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u5b83\u6ca1\u6709\u505a\u4ec0\u4e48\u3002\n\u4e8b\u5b9e\uff1a\u8c37\u6b4c\u5206\u6790\uff08Google Analytics\uff09\u662f\u4e00\u9879\u7531\u7ec4\u7ec7\u4f7f\u7528\u7684\u670d\u52a1\uff0c\u7528\u4e8e\u4e86\u89e3\u5176\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u4ece\u800c\u4f7f\u5176\u66f4\u597d\u5730\u5de5\u4f5c\u3002\u5b83\u4e0d\u4f1a\u5728\u4e92\u8054\u7f51\u4e0a\u8ffd\u8e2a\u4eba\u6216\u5206\u6790\u4eba\u3002\n\u8c37\u6b4c\u5206\u6790\u65e0\u6cd5\u7528\u4e8e\u8ffd\u8e2a\u7f51\u7edc\u6216\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u7528\u6237\u3002\u5b83\u4e0d\u4f1a\u521b\u5efa\u7528\u6237\u914d\u7f6e\u6587\u4ef6\u3002\nGoogle Analytics\u5e2e\u52a9\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u7684\u6240\u6709\u8005\u4e86\u89e3\u4ed6\u4eec\u7684\u7528\u6237\u5982\u4f55\u53c2\u4e0e\u4ed6\u4eec\u7684\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\uff08\u5e76\u4e14\u4ec5\u9650\u4e8e\u4ed6\u4eec\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\uff09\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u4e86\u89e3\u5728\u7ebf\u62a5\u7eb8\u7684\u54ea\u4e9b\u90e8\u5206\u8bfb\u8005\u6700\u591a\uff0c\u6216\u8005\u8d2d\u7269\u8f66\u88ab\u7f51\u4e0a\u5546\u5e97\u629b\u5f03\u7684\u9891\u7387\u3002\u8fd9\u6709\u52a9\u4e8e\u4ed6\u4eec\u901a\u8fc7\u66f4\u597d\u5730\u4e86\u89e3\u54ea\u4e9b\u6709\u6548\u6216\u54ea\u4e9b\u65e0\u6548\u6765\u6539\u5584\u5ba2\u6237\u4f53\u9a8c\u3002\n\u8fd9\u7c7b\u4fe1\u606f\u8fd8\u5305\u62ec\u6240\u7528\u8bbe\u5907\u6216\u6d4f\u89c8\u5668\u7684\u7c7b\u578b\uff1b\u8bbf\u95ee\u8005\u5728\u5176\u7f51\u7ad9\u6216\u5e94\u7528\u4e0a\u7684\u5e73\u5747\u82b1\u8d39\u65f6\u95f4\uff1b\u6216\u8005\u5927\u6982\u662f\u4ed6\u4eec\u7684\u8bbf\u5ba2\u6765\u81ea\u4e16\u754c\u7684\u54ea\u4e2a\u5730\u65b9\u3002\u8fd9\u4e9b\u6570\u636e\u70b9\u4ece\u672a\u7528\u4e8e\u8bc6\u522b\u8bbf\u5ba2\u6216\u8c37\u6b4c\u5206\u6790\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u4eba\u3002\nGoogle Analytics\u7981\u6b62\u7528\u6237\u4e0a\u4f20\u53ef\u80fd\u88abGoogle\u7528\u6765\u8bc6\u522b\u67d0\u4eba\u7684\u4fe1\u606f\u3002\u6211\u4eec\u4e3a\u5ba2\u6237\u63d0\u4f9b\u6570\u636e\u5220\u9664\u5de5\u5177\uff0c\u5e2e\u52a9\u4ed6\u4eec\u5728\u65e0\u610f\u4e2d\u5220\u9664\u670d\u52a1\u5668\u4e0a\u7684\u6570\u636e\u3002\n\u7ec4\u7ec7\u4f7f\u7528\u8c37\u6b4c\u5206\u6790\u662f\u56e0\u4e3a\u4ed6\u4eec\u9009\u62e9\u8fd9\u6837\u505a\u3002\u4ed6\u4eec\uff0c\u800c\u4e0d\u662f\u8c37\u6b4c\uff0c\u63a7\u5236\u7740\u6536\u96c6\u4ec0\u4e48\u6837\u7684\u6570\u636e\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u3002\n\u4ed6\u4eec\u4fdd\u7559\u4f7f\u7528Google Analytics\u6536\u96c6\u7684\u6570\u636e\u7684\u6240\u6709\u6743\uff0cGoogle\u53ea\u6309\u7167\u4ed6\u4eec\u7684\u6307\u793a\u5b58\u50a8\u548c\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u2014\u2014\u4f8b\u5982\uff0c\u5411\u4ed6\u4eec\u63d0\u4f9b\u5173\u4e8e\u8bbf\u95ee\u8005\u5982\u4f55\u4f7f\u7528\u5176\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u62a5\u544a\u3002\n\u8fd9\u4e9b\u7ec4\u7ec7\u53ef\u4ee5\u5355\u72ec\u9009\u62e9\u4e0e\u8c37\u6b4c\u5171\u4eab\u5176\u5206\u6790\u6570\u636e\uff0c\u4ee5\u5b9e\u73b0\u6280\u672f\u652f\u6301\u3001\u57fa\u51c6\u6d4b\u8bd5\u548c\u9500\u552e\u652f\u6301\u7b49\u7279\u5b9a\u76ee\u7684\u4e4b\u4e00\u3002\n\u7ec4\u7ec7\u5fc5\u987b\u91c7\u53d6\u660e\u786e\u884c\u52a8\uff0c\u5141\u8bb8\u8c37\u6b4c\u4f7f\u7528\u5176\u5206\u6790\u6570\u636e\u6765\u6539\u8fdb\u6216\u521b\u5efa\u65b0\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u5b8c\u5168\u662f\u53ef\u9009\u7684\uff0c\u9700\u8981\u660e\u786e\u7684\u9009\u62e9\u52a0\u5165\u3002\n\u4e8b\u5b9e\uff1aGoogle Analytics\u901a\u8fc7\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4e00\u7cfb\u5217\u63a7\u5236\u548c\u8d44\u6e90\uff0c\u5e2e\u52a9\u4ed6\u4eec\u5b9e\u73b0\u6cd5\u89c4\u9075\u4ece\u6027\u3002\n\u5f53\u7ec4\u7ec7\u4f7f\u7528\u8c37\u6b4c\u5206\u6790\u4ece\u4ed6\u4eec\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u6536\u96c6\u6570\u636e\u65f6\uff0c\u4ed6\u4eec\u4f1a\u63a7\u5236\u8fd9\u4e9b\u6570\u636e\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\uff1a\u53ef\u4ee5\u5728\u5176\u7f51\u7ad9\u4e0a\u542f\u7528IP\u533f\u540d\uff08\u6216IP\u5c4f\u853d\uff09\uff0c\u8fd9\u610f\u5473\u7740\u6c38\u8fdc\u4e0d\u4f1a\u5904\u7406\u6216\u8bb0\u5f55\u5b8c\u6574\u7684IP\u5730\u5740\u3002\n\u53ef\u4ee5\u9009\u62e9Analytics\u5b58\u50a8\u7528\u6237\u7ea7\u548c\u4e8b\u4ef6\u7ea7\u6570\u636e\u7684\u65f6\u95f4\uff0c\u7136\u540e\u518d\u5c06\u5176\u4eceAnalytics\u5e10\u6237\u548c\u8c37\u6b4c\u670d\u52a1\u5668\u4e2d\u81ea\u52a8\u5220\u9664\u3002\n\u53ef\u4ee5\u901a\u8fc7\u63d0\u4ea4\u5220\u9664\u8bf7\u6c42\u4ece\u5206\u6790\u670d\u52a1\u5668\u4e2d\u5220\u9664\u6570\u636e\uff0c\u5305\u62ec\u901a\u8fc7\u7528\u6237\u5220\u9664API\u3001\u7528\u6237\u6d4f\u89c8\u5668\u62a5\u544a\u6216\u7528\u6237\u63a2\u7d22\u6280\u672f\u4ece\u5206\u6790\u5e10\u6237\u4e2d\u5220\u9664\u5355\u4e2a\u7528\u6237\u7684\u6570\u636e\u3002\n\u8c37\u6b4c\u751f\u4ea7\u7684\u4ea7\u54c1\u548c\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5b89\u5168\u7684\uff0c\u5728\u8bbe\u8ba1\u4e0a\u662f\u79c1\u6709\u7684\uff0c\u5e76\u8ba9\u7528\u6237\u63a7\u5236\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u63d0\u4f9b\u4e00\u4e2a\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4ed6\u4eec\u8bbf\u95ee\u7684\u4efb\u4f55\u7f51\u7ad9\u4e0a\u7981\u7528Google Analytics\u7684\u6d4b\u91cf\u529f\u80fd\u3002\n\u9664\u4e86\u63d0\u4f9b\u5f3a\u5927\u7684\u9ed8\u8ba4\u4fdd\u62a4\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u4eba\u4eec\u63d0\u4f9b\u53ef\u8bbf\u95ee\u3001\u76f4\u89c2\u548c\u6709\u7528\u7684\u63a7\u5236\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u80fd\u591f\u505a\u51fa\u9002\u5408\u81ea\u5df1\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u8bbf\u95ee\u8005\u53ef\u4ee5\u9009\u62e9\u4ed6\u4eec\u8bbf\u95ee\u7684\u7f51\u7ad9\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5206\u6790cookie\uff0c\u6216\u8005\u963b\u6b62\u6240\u6709\u6216\u90e8\u5206\u7f51\u7ad9\u4e0a\u7684\u6240\u6709cookie\u3002\n\u6b64\u5916\uff0c\u7ec4\u7ec7\u8fd8\u9700\u8981\u5411\u8bbf\u95ee\u8005\u53d1\u51fa\u9002\u5f53\u7684\u901a\u77e5\uff0c\u544a\u77e5\u4ed6\u4eec\u4f7f\u7528\u7684\u8c37\u6b4c\u5206\u6790\u7684\u5b9e\u73b0\u548c\u529f\u80fd\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6570\u636e\u662f\u5426\u53ef\u4ee5\u8fde\u63a5\u5230\u4ed6\u4eec\u62e5\u6709\u7684\u5173\u4e8e\u4ed6\u4eec\u7684\u5176\u4ed6\u6570\u636e\u3002\n\u6839\u636e\u5176\u6240\u5728\u56fd\u5bb6\u7684\u9002\u7528\u6cd5\u5f8b\u8981\u6c42\uff0c\u8fd9\u4e9b\u5ba2\u6237\u6bcf\u6b21\u8bbf\u95ee\u90fd\u5fc5\u987b\u83b7\u5f97\u7528\u6237\u7684\u540c\u610f\u3002\n\u4e8b\u5b9e\uff1a\u8c37\u6b4c\u5206\u6790\u4e0d\u80fd\u7528\u4e8e\u5411\u4eba\u4eec\u5c55\u793a\u57fa\u4e8e\u5065\u5eb7\u3001\u79cd\u65cf\u3001\u6027\u53d6\u5411\u7b49\u654f\u611f\u4fe1\u606f\u7684\u5e7f\u544a\u3002\n\u8c37\u6b4c\u5206\u6790\u6839\u672c\u4e0d\u63d0\u4f9b\u5e7f\u544a\u670d\u52a1\u3002\u5b83\u662f\u4e00\u4e2a\u7f51\u7edc\u548c\u5e94\u7528\u5206\u6790\u5de5\u5177\u3002\uff08\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u9605\u8bfb\u5168\u90e8\u5185\u5bb9\u3002\uff09\n\u4e00\u4e9b\u7ec4\u7ec7\u786e\u5b9e\u4f1a\u5229\u7528\u901a\u8fc7\u8c37\u6b4c\u5206\u6790\u83b7\u5f97\u7684\u5173\u4e8e\u81ea\u5df1\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u89c1\u89e3\uff0c\u4e3a\u81ea\u5df1\u7684\u5e7f\u544a\u6d3b\u52a8\u63d0\u4f9b\u4fe1\u606f\u3002\n\u5982\u679c\u4e00\u5bb6\u4f01\u4e1a\u4e5f\u4f7f\u7528\u8c37\u6b4c\u7684\u5e7f\u544a\u5e73\u53f0\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u4e25\u683c\u9075\u5b88\u8c37\u6b4c\u7684\u5e7f\u544a\u6307\u5357\uff0c\u9632\u6b62\u4f7f\u7528\u654f\u611f\u4fe1\u606f\u6765\u4e2a\u6027\u5316\u5e7f\u544a\u2014\u2014\u6bd4\u5982\u5065\u5eb7\u3001\u79cd\u65cf\u3001\u5b97\u6559\u6216\u6027\u53d6\u5411\u3002\u6211\u4eec\u7edd\u4e0d\u5141\u8bb8\u654f\u611f\u4fe1\u606f\u7528\u4e8e\u4e2a\u6027\u5316\u5e7f\u544a\u3002\u8fd9\u662f\u7edd\u5bf9\u7981\u6b62\u7684\u3002\n\u4e8b\u5b9e\uff1a\u4e00\u4e2a\u7ec4\u7ec7\u7684\u8c37\u6b4c\u5206\u6790\u6570\u636e\u53ea\u6709\u5728\u6ee1\u8db3\u7279\u5b9a\u548c\u4e25\u683c\u7684\u9690\u79c1\u6761\u4ef6\u65f6\u624d\u80fd\u4f20\u8f93\u3002\n\u8c37\u6b4c\u5206\u6790\uff08Google Analytics\uff09\u5728\u5168\u7403\uff08\u5305\u62ec\u7f8e\u56fd\uff09\u8fd0\u8425\u6570\u636e\u4e2d\u5fc3\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u670d\u52a1\u901f\u5ea6\u548c\u53ef\u9760\u6027\u3002\u5728\u5c06\u6570\u636e\u4f20\u8f93\u5230\u7f8e\u56fd\u7684\u4efb\u4f55\u670d\u52a1\u5668\u4e4b\u524d\uff0c\u6570\u636e\u4f1a\u5728\u672c\u5730\u670d\u52a1\u5668\u4e2d\u6536\u96c6\uff0c\u7528\u6237\u7684IP\u5730\u5740\u4f1a\u533f\u540d\uff08\u5f53\u5ba2\u6237\u542f\u7528\u8be5\u529f\u80fd\u65f6\uff09\u3002\nGDPR\u548c\u6b27\u6d32\u6cd5\u9662\u8868\u793a\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u51fa\u4e8e\u8fd9\u79cd\u539f\u56e0\u5c06\u6570\u636e\u8f6c\u79fb\u5230\u6b27\u76df\u4e4b\u5916\u3002\n\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u8bb8\u591a\u63aa\u65bd\uff0c\u5305\u62ec\uff1a\u4f7f\u7528\u6b27\u76df\u6807\u51c6\u5408\u540c\u6761\u6b3e\u7b49\u6570\u636e\u4f20\u8f93\u534f\u8bae\uff0c\u8fd9\u4e9b\u534f\u8bae\u5df2\u88ab\u786e\u8ba4\u4e3a\u5411\u7f8e\u56fd\u4f20\u8f93\u6570\u636e\u7684\u6709\u6548\u673a\u5236\uff0c\u4ee5\u53ca\u4fdd\u6301\u6570\u636e\u5b89\u5168\u7684\u5176\u4ed6\u4fdd\u969c\u63aa\u65bd\uff1a\u884c\u4e1a\u9886\u5148\u7684\u6570\u636e\u52a0\u5bc6\uff0c\u6211\u4eec\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u7269\u7406\u5b89\u5168\uff0c\u4ee5\u53ca\u5904\u7406\u653f\u5e9c\u7528\u6237\u4fe1\u606f\u8bf7\u6c42\u7684\u7a33\u5065\u653f\u7b56\u3002\n\u7ef4\u62a4\u56fd\u9645\u516c\u8ba4\u7684\u72ec\u7acb\u5b89\u5168\u6807\u51c6\uff0c\u5982ISO 27001\uff0c\u8be5\u6807\u51c6\u4e3a\u6211\u4eec\u7684\u7cfb\u7edf\u3001\u5e94\u7528\u7a0b\u5e8f\u3001\u4eba\u5458\u3001\u6280\u672f\u3001\u6d41\u7a0b\u548c\u6570\u636e\u4e2d\u5fc3\u63d0\u4f9b\u72ec\u7acb\u8ba4\u8bc1\u3002\n\u4e3a\u7f51\u7ad9\u6240\u6709\u8005\u63d0\u4f9b\u5e7f\u6cdb\u7684\u63a7\u5236\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u63a7\u5236\u6765\u786e\u4fdd\u7f51\u7ad9\u8bbf\u95ee\u8005\u6570\u636e\u7684\u5b89\u5168\u3002\n\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u52a0\u5bc6\u65e8\u5728\u4fdd\u62a4\u6570\u636e\uff0c\u5e76\u4fdd\u62a4\u5176\u514d\u53d7\u4efb\u4f55\u653f\u5e9c\u8bbf\u95ee\u3002\n\u6211\u4eec\u8fd8\u4f7f\u7528\u5f3a\u5927\u7684\u6280\u672f\u63aa\u65bd\uff08\u5982\u5e94\u7528\u5c42\u4f20\u8f93\u5b89\u5168\u548cHTTPS\u52a0\u5bc6\uff09\u6765\u9632\u6b62\u8c37\u6b4c\u57fa\u7840\u8bbe\u65bd\u5185\u90e8\u3001\u6570\u636e\u4e2d\u5fc3\u4e4b\u95f4\u4ee5\u53ca\u7528\u6237\u548c\u7f51\u7ad9\u4e4b\u95f4\u7684\u4f20\u8f93\u62e6\u622a\uff0c\u5305\u62ec\u4e16\u754c\u5404\u5730\u653f\u5e9c\u5f53\u5c40\u7684\u76d1\u89c6\u5c1d\u8bd5\u3002", "note_en": "The web has to work for users, advertisers, and publishers of all sizes \u2014 but users first. And with good reason: people are using the internet in larger numbers for more daily needs than ever. They don\u2019t want privacy as an afterthought; they want privacy by design.\n Understanding this is core to how we think about building  Google Analytics, a set of everyday tools that help organizations in the commercial, public, and nonprofit sectors understand how visitors use their sites and apps \u2014 but never by identifying individuals or tracking them across sites or apps.\n Because some of these organizations lately have faced questions about whether an analytics service can be compatible with user privacy and the rules for international transfers of personal data, we wanted to explain what Google Analytics does, and just as important, what it does not do.\n  Fact: Google Analytics is a service used by organizations to understand how their sites and apps are used, so that they can make them work better. It does not track people or profile people across the internet.\n Google Analytics cannot be used to track people across the web or apps. It does not create user profiles.\n Google Analytics helps owners of apps and websites understand how their users are engaging with their sites and apps (and only  their site or app). For example, it can help them understand which sections of an online newspaper have the most readers, or how often shopping carts are abandoned for an online store. This is what helps them improve the experience for their customers by better understanding what\u2019s working or not working.\n This kind of information also includes things like the type of device or browser used; how long, on average, visitors spend on their site or app; or roughly where in the world their visitors are coming from. These data points are never used to identify the visitor or anyone else in Google Analytics.\n Google Analytics customers are  prohibited from uploading information that could be used by Google to identify a person. We provide our customers with data deletion tools to help them promptly remove data from our servers if they inadvertently do so.\n  Organizations use Google Analytics because they choose to do so. They, not Google, control what data is collected and how it is used.\n They retain ownership of the data they collect using Google Analytics, and Google only stores and processes this data per their instructions \u2014 for example, to provide them with reports about how visitors use their sites and apps.\n These organizations can, separately, elect to share their Analytics data with Google for one of a few specific purposes, including technical support, benchmarking, and sales support.\n Organizations must take explicit action to allow Google to use their analytics data to improve or create new products and services. Such settings are entirely optional and require explicit opt-in.\n  Fact: Google Analytics helps customers with compliance by providing them with a range of controls and resources.\n When organizations use Google Analytics to collect data from their websites or apps, they  control that data. For example, they: Can enable  IP Anonymization (or IP masking) on their websites, meaning that full IP addresses are never processed or logged.\n  Can  select how long user-level and event-level data is stored by Analytics before it\u2019s scheduled for automatic deletion from the Analytics account and Google\u2019s servers.\n Can delete data from the Analytics servers by  submitting a request for its removal \u2014 including the ability to delete a single user\u2019s data from their Analytics account via the  User Deletion API, the  User Explorer report, or the  User Exploration technique.\n  Google makes products and features that are secure by default, private by design, and put users in control. That\u2019s why we have long offered a  browser add-on that enables users to disable measurement by Google Analytics on any site they visit.\n Along with providing strong default protections, we aim to give people accessible, intuitive and useful controls so they can make choices that are right for them. For example, visitors can choose if and how Analytics cookies are used by websites they visit, or block all cookies on all or some websites.\n In addition, organizations are required to give visitors proper notice about the implementations and features of Google Analytics that they use, and whether this data can be connected to other data they have about them.\n These customers are also required to obtain consent from users for each visit, as required by applicable laws in their country.\n  Fact: Google Analytics cannot be used to show advertisements to people based on sensitive information like health, ethnicity, sexual orientation, etc.\n Google Analytics does not serve ads at all. It is a web and app analytics tool. (You can read all about it  here.)\n Some organizations do use insights they\u2019ve garnered via Google Analytics about their own sites and apps to inform their own advertising campaigns.\n If a business also uses Google\u2019s advertising platforms, it\u2019s strictly required to follow Google\u2019s advertising guidelines preventing the use of sensitive information to personalize ads \u2014 like health, race, religion, or sexual orientation. We never allow sensitive information to be used for personalized advertising. It\u2019s simply off limits.\n  Fact: An organization\u2019s Google Analytics data can only be transferred when specific and rigorous privacy conditions are met.\n Google Analytics operates data centers globally, including in the United States, to maximize service speed and reliability. Before data is transferred to any servers in the United States, it is collected in local servers, where users\u2019 IP addresses are anonymized (when the feature is enabled by customers).\n The GDPR and European Court of Justice say that data can be transferred outside of the European Union for just this sort of reason, provided  conditions are met.\n In order to meet those conditions, we apply numerous measures, including: Using data transfer agreements like EU Standard Contractual Clauses, which have been affirmed as a valid mechanism for transferring data to the United States, together with additional safeguards that keep data secure: industry-leading  data encryption,  physical security in our data centers and robust  policies for handling government requests for user information.\n Maintaining widely recognized, internationally accepted independent security standards like  ISO 27001, which provides independent accreditation of our systems, applications, people, technology, processes and data centers.\n Offering website owners a  wide range of controls that they can use to keep their website visitors\u2019 data safe and secure.\n Our infrastructure and encryption is designed to protect data, and safeguard it from any government access.\n And we use robust technical measures (such as  Application Layer Transport Security and HTTPS encryption) to protect against interception in transit within Google\u2019s infrastructure, between data centers, and between users and websites, including surveillance attempts by government authorities around the world.", "posttime": "2022-02-13 18:39:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u5206\u6790,\u6570\u636e", "title": "\u5173\u4e8e\u8c37\u6b4c\u5206\u6790\u6570\u636e\u9690\u79c1\u7684\u4e00\u4e9b\u4e8b\u5b9e", "title_en": "Some facts about Google Analytics data privacy", "transed": 1, "url": "https://blog.google/around-the-globe/google-europe/google-analytics-facts/", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u5206\u6790", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072928, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u4e8e2014\u5e745\u670826\u65e5\uff0c\u66f4\u65b0\u4e8e2014\u5e748\u6708\u30012016\u5e742\u6708\u30012016\u5e746\u6708\u30012020\u5e746\u6708\u3002\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u60f3\u627e\u5230\u4ece\u4e00\u4e2a\u5730\u70b9\u5230\u53e6\u4e00\u4e2a\u5730\u70b9\u7684\u8def\u5f84\u3002\u6211\u4eec\u4e0d\u4ec5\u5728\u52aa\u529b\u5bfb\u627e\u6700\u77ed\u7684\u8ddd\u79bb\uff1b\u6211\u4eec\u8fd8\u8981\u8003\u8651\u65c5\u884c\u65f6\u95f4\u3002\u79fb\u52a8blob\uff08\u8d77\u70b9\uff09\u548ccross\uff08\u7ec8\u70b9\uff09\u4ee5\u67e5\u770b\u6700\u77ed\u8def\u5f84\u3002\n\u4e3a\u4e86\u627e\u5230\u8fd9\u6761\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u56fe\u641c\u7d22\u7b97\u6cd5\uff0c\u5f53\u5730\u56fe\u88ab\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe\u65f6\uff0c\u8be5\u7b97\u6cd5\u5c31\u4f1a\u8d77\u4f5c\u7528\u3002A*\u662f\u56fe\u5f62\u641c\u7d22\u7684\u5e38\u7528\u9009\u62e9\u3002\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u662f\u6700\u7b80\u5355\u7684\u56fe\u641c\u7d22\u7b97\u6cd5\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u9010\u6b65\u53d1\u5c55\u5230A*\u3002\n\u5b66\u4e60\u7b97\u6cd5\u65f6\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7406\u89e3\u6570\u636e\u3002\u8f93\u5165\u662f\u4ec0\u4e48\uff1f\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f\n\u8f93\u5165\uff1a\u56fe\u5f62\u641c\u7d22\u7b97\u6cd5\uff0c\u5305\u62ecA*\uff0c\u4ee5\u201c\u56fe\u5f62\u201d\u4f5c\u4e3a\u8f93\u5165\u3002\u56fe\u662f\u4e00\u7ec4\u4f4d\u7f6e\uff08\u201c\u8282\u70b9\u201d\uff09\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\uff08\u201c\u8fb9\u201d\uff09\u3002\u8fd9\u662f\u6211\u7ed9A*\u7684\u56fe\u8868\uff1a\nA*\u770b\u4e0d\u5230\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u3002\u5b83\u53ea\u770b\u5230\u56fe\u8868\u3002\u5b83\u4e0d\u77e5\u9053\u67d0\u7269\u662f\u5ba4\u5185\u8fd8\u662f\u5ba4\u5916\uff0c\u6216\u8005\u662f\u623f\u95f4\u8fd8\u662f\u95e8\u53e3\uff0c\u6216\u8005\u4e00\u4e2a\u533a\u57df\u6709\u591a\u5927\u3002\u5b83\u53ea\u770b\u5230\u56fe\u8868\uff01\u5b83\u4e0d\u77e5\u9053\u8fd9\u5f20\u5730\u56fe\u548c\u5176\u4ed6\u5730\u56fe\u7684\u533a\u522b\u3002\n\u8f93\u51fa\uff1aA*\u627e\u5230\u7684\u8def\u5f84\u4e3a\u3002\u8fb9\u662f\u62bd\u8c61\u7684\u6570\u5b66\u6982\u5ff5\u3002A*\u4f1a\u544a\u8bc9\u4f60\u4ece\u4e00\u4e2a\u5730\u65b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u4f46\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u79fb\u52a8\u3002\u8bb0\u4f4f\uff0c\u5b83\u5bf9\u623f\u95f4\u6216\u95e8\u4e00\u65e0\u6240\u77e5\uff1b\u5b83\u770b\u5230\u7684\u53ea\u662f\u56fe\u8868\u3002\u60a8\u5fc5\u987b\u786e\u5b9a\u7531*\u8fd4\u56de\u7684\u56fe\u5f62\u8fb9\u662f\u5426\u610f\u5473\u7740\u4ece\u4e00\u4e2a\u56fe\u5757\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u56fe\u5757\uff0c\u6216\u662f\u76f4\u7ebf\u884c\u8d70\uff0c\u6216\u662f\u5f00\u95e8\uff0c\u6216\u662f\u6e38\u6cf3\uff0c\u6216\u662f\u6cbf\u7740\u5f2f\u66f2\u7684\u8def\u5f84\u8dd1\u6b65\u3002\n\u6743\u8861\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u6e38\u620f\u5730\u56fe\uff0c\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5236\u4f5c\u4e00\u4e2a\u8def\u5f84\u67e5\u627e\u56fe\uff0c\u4ee5\u63d0\u4f9b\u7ed9*\u3002\u4e0a\u9762\u7684\u5730\u56fe\u5c06\u5927\u591a\u6570\u95e8\u53e3\u53d8\u6210\u4e86\u8282\u70b9\uff1b\u5982\u679c\u6211\u4eec\u6210\u529f\u4e86\u5462\uff1f\u5982\u679c\u6211\u4eec\u4f7f\u7528\uff1f\n\u5bfb\u8def\u56fe\u4e0d\u5fc5\u4e0e\u6e38\u620f\u5730\u56fe\u4f7f\u7528\u7684\u76f8\u540c\u3002\u7f51\u683c\u6e38\u620f\u5730\u56fe\u53ef\u4ee5\u4f7f\u7528\u975e\u7f51\u683c\u5bfb\u8def\u56fe\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002A*\u8fd0\u884c\u6700\u5feb\uff0c\u56fe\u5f62\u8282\u70b9\u6700\u5c11\uff1b\u7f51\u683c\u901a\u5e38\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u4f46\u4f1a\u4ea7\u751f\u5927\u91cf\u8282\u70b9\u3002\u672c\u9875\u4ecb\u7ecdA*\u7b97\u6cd5\uff0c\u4f46\u4e0d\u5305\u62ec\u56fe\u5f62\u8bbe\u8ba1\uff1b\u6709\u5173\u56fe\u8868\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6211\u7684\u53e6\u4e00\u9875[1]\u3002\u5bf9\u4e8e\u672c\u9875\u5176\u4f59\u90e8\u5206\u7684\u89e3\u91ca\uff0c\u6211\u5c06\u4f7f\u7528\u7f51\u683c\uff0c\u56e0\u4e3a\u66f4\u5bb9\u6613\u5c06\u6982\u5ff5\u53ef\u89c6\u5316\u3002\n\u6709\u5f88\u591a\u7b97\u6cd5\u5728\u56fe\u5f62\u4e0a\u8fd0\u884c\u3002\u6211\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u5728\u6240\u6709\u65b9\u5411\u4e0a\u90fd\u8fdb\u884c\u4e86\u540c\u7b49\u7684\u63a2\u7d22\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7b97\u6cd5\uff0c\u4e0d\u4ec5\u9002\u7528\u4e8e\u5e38\u89c4\u8def\u5f84\u67e5\u627e\uff0c\u8fd8\u9002\u7528\u4e8e\u7a0b\u5e8f\u5730\u56fe\u751f\u6210\u3001\u6d41\u573a\u8def\u5f84\u67e5\u627e\u3001\u8ddd\u79bb\u5730\u56fe\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u5730\u56fe\u5206\u6790\u3002\nDijkstra\u7684\u7b97\u6cd5\uff08\u4e5f\u79f0\u4e3a\u7edf\u4e00\u6210\u672c\u641c\u7d22\uff09\u8ba9\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u8981\u63a2\u7d22\u7684\u8def\u5f84\u3002\u4e0e\u5176\u5e73\u7b49\u5730\u63a2\u7d22\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u5b83\u66f4\u503e\u5411\u4e8e\u4f4e\u6210\u672c\u7684\u8def\u5f84\u3002\u6211\u4eec\u53ef\u4ee5\u5206\u914d\u66f4\u4f4e\u7684\u6210\u672c\u6765\u9f13\u52b1\u5728\u9053\u8def\u4e0a\u79fb\u52a8\uff0c\u66f4\u9ad8\u7684\u6210\u672c\u6765\u907f\u514d\u68ee\u6797\uff0c\u66f4\u9ad8\u7684\u6210\u672c\u6765\u963b\u6b62\u63a5\u8fd1\u654c\u4eba\uff0c\u7b49\u7b49\u3002\u5f53\u79fb\u52a8\u6210\u672c\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\nA*\u662f\u5bf9Dijkstra\u7b97\u6cd5\u7684\u4fee\u6539\uff0c\u8be5\u7b97\u6cd5\u9488\u5bf9\u5355\u4e2a\u76ee\u7684\u5730\u8fdb\u884c\u4e86\u4f18\u5316\u3002Dijkstra\u7b97\u6cd5\u53ef\u4ee5\u627e\u5230\u6240\u6709\u4f4d\u7f6e\u7684\u8def\u5f84\uff1bA*\u67e5\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e\u6216\u51e0\u4e2a\u4f4d\u7f6e\u4e2d\u6700\u8fd1\u4f4d\u7f6e\u7684\u8def\u5f84\u3002\u5b83\u4f18\u5148\u8003\u8651\u90a3\u4e9b\u4f3c\u4e4e\u66f4\u63a5\u8fd1\u76ee\u6807\u7684\u8def\u5f84\u3002\n\u6211\u5c06\u4ece\u6700\u7b80\u5355\u7684\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u5f00\u59cb\uff0c\u4e00\u6b21\u6dfb\u52a0\u4e00\u4e2a\u529f\u80fd\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a*\u3002\n\u6240\u6709\u8fd9\u4e9b\u7b97\u6cd5\u7684\u5173\u952e\u601d\u60f3\u662f\uff0c\u6211\u4eec\u8ddf\u8e2a\u4e00\u4e2a\u79f0\u4e3a\u201c\u524d\u6cbf\u201d\u7684\u4e0d\u65ad\u6269\u5927\u7684\u73af\u3002\u5728\u7f51\u683c\u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u6d2a\u6c34\u586b\u5145\u201d\uff0c\u4f46\u540c\u6837\u7684\u6280\u672f\u4e5f\u9002\u7528\u4e8e\u975e\u7f51\u683c\u3002\u542f\u52a8\u52a8\u753b\u4ee5\u67e5\u770b\u8fb9\u754c\u662f\u5982\u4f55\u6269\u5c55\u7684\u2192 \u00a0\u2192\n\u901a\u8fc7\u89c2\u5bdf\u5b83\u7684\u90bb\u5c45\u6765\u6269\u5c55\u5b83\u3002\u8df3\u8fc7\u5899\u58c1\u3002\u4efb\u4f55\u672a\u5230\u8fbe\u7684\u90bb\u5c45\uff0c\u6211\u4eec\u90fd\u4f1a\u6dfb\u52a0\u5230\u8fb9\u754c\u548c\u5230\u8fbe\u7684\u96c6\u5408\u4e2d\u2192 \u00a0 \u00a0.\n\u8ba9\u6211\u4eec\u8fd1\u8ddd\u79bb\u770b\u770b\u3002\u74f7\u7816\u6309\u6211\u4eec\u53c2\u89c2\u7684\u987a\u5e8f\u7f16\u53f7\u3002\u9010\u6b65\u67e5\u770b\u6269\u5c55\u8fc7\u7a0b\uff1a\n\u8fb9\u7586\u3002put\uff08start\uff09reach=set\uff08\uff09reach\u3002\u6dfb\u52a0\uff08\u5f00\u59cb\uff09\u800c\u4e0d\u662f\u8fb9\u754c\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u8868\u793a\u56fe\u5f62\u4e2d\u7684\u4e0b\u4e00\u4e2a\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u5982\u679c\u672a\u5230\u8fbe\u4e0b\u4e00\u4e2a\uff1a\u8fb9\u754c\u3002\u653e\uff08\u4e0b\u4e00\u4e2a\uff09\u5230\u3002\u6dfb\u52a0\uff08\u4e0b\u4e00\u6b65\uff09\n\u8fd9\u4e2a\u5faa\u73af\u662f\u672c\u9875\u4e0a\u56fe\u5f62\u641c\u7d22\u7b97\u6cd5\u7684\u7cbe\u9ad3\uff0c\u5305\u62ec*\u3002\u4f46\u662f\u6211\u4eec\u5982\u4f55\u627e\u5230\u6700\u77ed\u7684\u8def\u5f84\u5462\uff1f\u5faa\u73af\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6784\u6210\u8def\u5f84\uff1b\u5b83\u53ea\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u53c2\u89c2\u5730\u56fe\u4e0a\u7684\u4e00\u5207\u3002\u8fd9\u662f\u56e0\u4e3a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u7528\u9014\u8fdc\u8fdc\u4e0d\u6b62\u4e8e\u5bfb\u627e\u8def\u5f84\uff1b\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u5c55\u793a\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u5854\u9632\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ddd\u79bb\u8d34\u56fe\u3001\u7a0b\u5e8f\u8d34\u56fe\u751f\u6210\uff0c\u4ee5\u53ca\u5176\u4ed6\u8bb8\u591a\u4e8b\u60c5\u3002\u5728\u8fd9\u91cc\uff0c\u867d\u7136\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u5b83\u6765\u67e5\u627e\u8def\u5f84\uff0c\u4f46\u8ba9\u6211\u4eec\u4fee\u6539\u5faa\u73af\uff0c\u4ee5\u8ddf\u8e2a\u6bcf\u4e2a\u5230\u8fbe\u7684\u4f4d\u7f6e\u7684\u6765\u6e90\uff0c\u5e76\u5c06\u5230\u8fbe\u96c6\u91cd\u547d\u540d\u4e3acome_from table\uff08\u8868\u7684\u952e\u662f\u5230\u8fbe\u96c6\uff09\uff1a\n\u8fb9\u7586\u3002put\uff08\u5f00\u59cb\uff09comed_from=dict\uff08\uff09comed_from[start]=none\u800c\u975efront\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u8868\u793a\u56fe\u5f62\u4e2d\u7684\u4e0b\u4e00\u4e2a\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u5982\u679c\u4e0b\u4e00\u4e2a\u4e0d\u5728\uff0c\u6765\u81ea\u8fb9\u5883\u3002put\uff08next\uff09come_from\uff08next\uff09=\u5f53\u524d\n\u73b0\u5728\u4ece\u6bcf\u4e2a\u5730\u70b9\u5230\u6211\u4eec\u6765\u7684\u5730\u65b9\u3002\u8fd9\u4e9b\u5c31\u50cf\u201c\u9762\u5305\u5c51\u201d\u3002\u5b83\u4eec\u8db3\u4ee5\u91cd\u5efa\u6574\u6761\u8def\u3002\u79fb\u52a8\u5341\u5b57\u67b6\uff0c\u67e5\u770b\u8ddf\u968f\u7bad\u5934\u5982\u4f55\u4e3a\u60a8\u63d0\u4f9b\u8fd4\u56de\u8d77\u59cb\u4f4d\u7f6e\u7684\u53cd\u5411\u8def\u5f84\u3002\n\u91cd\u5efa\u8def\u5f84\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff1a\u4ece\u76ee\u6807\u5230\u5f00\u59cb\uff0c\u6cbf\u7740\u7bad\u5934\u5411\u540e\u8d70\u3002\u8def\u5f84\u662f\u4e00\u7cfb\u5217\u8fb9\uff0c\u4f46\u901a\u5e38\u66f4\u5bb9\u6613\u5b58\u50a8\u8282\u70b9\uff1a\n\u5f53\u524d=\u76ee\u6807\u8def\u5f84=[]\u5f53\u524d\uff01=\u5f00\u59cb\uff1a\u8def\u5f84\u3002append\uff08current\uff09current=\u6765\u81ea[current]\u8def\u5f84\u3002\u9644\u52a0\uff08\u5f00\u59cb\uff09#\u53ef\u9009\u8def\u5f84\u3002\u53cd\u8f6c\uff08\uff09#\u53ef\u9009\n\u8fd9\u662f\u6700\u7b80\u5355\u7684\u5bfb\u8def\u7b97\u6cd5\u3002\u5b83\u4e0d\u4ec5\u9002\u7528\u4e8e\u5982\u56fe\u6240\u793a\u7684\u7f51\u683c\uff0c\u800c\u4e14\u9002\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u56fe\u5f62\u7ed3\u6784\u3002\u5728\u5730\u7262\u4e2d\uff0c\u56fe\u5f62\u4f4d\u7f6e\u53ef\u4ee5\u662f\u623f\u95f4\uff0c\u4e5f\u53ef\u4ee5\u662f\u623f\u95f4\u4e4b\u95f4\u7684\u95e8\u53e3\u3002\u5728platformer\u4e2d\uff0c\u56fe\u5f62\u4f4d\u7f6e\u53ef\u4ee5\u662f\u4f4d\u7f6e\u548c\u56fe\u5f62\u8fb9\u7f18\uff0c\u5305\u62ec\u53ef\u80fd\u7684\u52a8\u4f5c\uff0c\u5982\u5411\u5de6\u79fb\u52a8\u3001\u5411\u53f3\u79fb\u52a8\u3001\u5411\u4e0a\u8df3\u3001\u5411\u4e0b\u8df3\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5c06\u56fe\u5f62\u89c6\u4e3a\u6539\u53d8\u72b6\u6001\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u3002\u6211\u5728\u8fd9\u91cc\u5199\u4e86\u66f4\u591a\u5173\u4e8e\u5730\u56fe\u8868\u793a\u7684\u6587\u7ae0[2]\u3002\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u5c06\u7ee7\u7eed\u4f7f\u7528\u7f51\u683c\u793a\u4f8b\uff0c\u5e76\u63a2\u7d22\u4e3a\u4ec0\u4e48\u53ef\u80fd\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u53d8\u4f53\u3002\n\u6211\u4eec\u627e\u5230\u4e86\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u5230\u6240\u6709\u5176\u4ed6\u4f4d\u7f6e\u7684\u8def\u5f84\u3002\u901a\u5e38\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u8def\u5f84\uff1b\u6211\u4eec\u53ea\u9700\u8981\u4e00\u6761\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8def\u5f84\u3002\u4e00\u65e6\u627e\u5230\u76ee\u6807\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u505c\u6b62\u6269\u5f20\u8fb9\u5883\u3002\u62d6\u52a8\u9f20\u6807\uff0c\u67e5\u770b\u8fb9\u7586\u5728\u5230\u8fbe\u76ee\u6807\u540e\u5982\u4f55\u505c\u6b62\u6269\u5f20\u3002\n\u8fb9\u7586\u3002put\uff08\u5f00\u59cb\uff09comed_from=dict\uff08\uff09comed_from[start]=none\u800c\u975efront\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u5982\u679c\u5f53\u524d==\u76ee\u6807\uff1a\u5728\u56fe\u4e2d\u4e3a\u4e0b\u4e00\u4e2a\u4e2d\u65ad\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u5982\u679c\u4e0b\u4e00\u4e2a\u4e0d\u5728\uff0c\u6765\u81ea\u8fb9\u5883\u3002put\uff08next\uff09come_from\uff08next\uff09=\u5f53\u524d\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u91c7\u53d6\u4e86\u540c\u6837\u7684\u201c\u6210\u672c\u201d\u63aa\u65bd\u3002\u5728\u67d0\u4e9b\u5bfb\u8def\u573a\u666f\u4e2d\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u79fb\u52a8\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u6210\u672c\u3002\u4f8b\u5982\uff0c\u5728\u6587\u660e\u4e2d\uff0c\u7a7f\u8d8a\u5e73\u539f\u6216\u6c99\u6f20\u53ef\u80fd\u9700\u89811\u4e2a\u79fb\u52a8\u70b9\uff0c\u4f46\u7a7f\u8d8a\u68ee\u6797\u6216\u4e18\u9675\u53ef\u80fd\u9700\u89815\u4e2a\u79fb\u52a8\u70b9\u3002\u5728\u9875\u9762\u9876\u90e8\u7684\u5730\u56fe\u4e0a\uff0c\u5728\u6c34\u4e2d\u884c\u8d70\u7684\u8d39\u7528\u662f\u5728\u8349\u5730\u4e0a\u884c\u8d70\u768410\u500d\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u7f51\u683c\u4e0a\u7684\u5bf9\u89d2\u7ebf\u79fb\u52a8\uff0c\u5176\u6210\u672c\u9ad8\u4e8e\u8f74\u5411\u79fb\u52a8\u3002\u6211\u4eec\u5e0c\u671b\u63a2\u8def\u8005\u8003\u8651\u5230\u8fd9\u4e9b\u6210\u672c\u3002\u8ba9\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0b\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6b65\u6570\u548c\u8ddd\u79bb\uff1a\n\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981Dijkstra\u7b97\u6cd5\uff08\u6216\u7edf\u4e00\u6210\u672c\u641c\u7d22\uff09\u3002\u5b83\u4e0e\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6709\u4f55\u4e0d\u540c\uff1f\u6211\u4eec\u9700\u8981\u8ddf\u8e2a\u79fb\u52a8\u6210\u672c\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u65b0\u53d8\u91cfcost_so_far\uff0c\u4ee5\u8ddf\u8e2a\u4ece\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u7684\u603b\u79fb\u52a8\u6210\u672c\u3002\u5728\u51b3\u5b9a\u5982\u4f55\u8bc4\u4f30\u5730\u70b9\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u79fb\u52a8\u6210\u672c\u8003\u8651\u5728\u5185\uff1b\u8ba9\u6211\u4eec\u628a\u961f\u5217\u53d8\u6210\u4f18\u5148\u961f\u5217\u3002\u4e0d\u592a\u660e\u663e\u7684\u662f\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u591a\u6b21\u8bbf\u95ee\u4e00\u4e2a\u5730\u70b9\uff0c\u82b1\u8d39\u4e0d\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b\u903b\u8f91\u3002\u5982\u679c\u4ece\u672a\u5230\u8fbe\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e0d\u4f1a\u5411\u8fb9\u754c\u6dfb\u52a0\u4f4d\u7f6e\uff0c\u800c\u662f\u5728\u8be5\u4f4d\u7f6e\u7684\u65b0\u8def\u5f84\u4f18\u4e8e\u4e4b\u524d\u7684\u6700\u4f73\u8def\u5f84\u65f6\u6dfb\u52a0\u8be5\u4f4d\u7f6e\u3002\n\u8fb9\u7586=\u4f18\u5148\u961f\u5217\uff08\uff09\u8fb9\u7586\u3002put\uff08start\uff0c0\uff09come_from=dict\uff08\uff09cost_so_far=dict\uff08\uff09come_from[start]=Nonecost_so_far[start]=0\u800c\u4e0d\u662ffrontier\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u5982\u679c\u5f53\u524d==\u76ee\u6807\uff1a\u5728\u56fe\u4e2d\u4e3a\u4e0b\u4e00\u4e2a\u4e2d\u65ad\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u65b0\u6210\u672c=\u6210\u672c\u8fc4\u4eca\u4e3a\u6b62[\u5f53\u524d]+\u56fe\u8868\u3002\u6210\u672c\uff08\u5f53\u524d\u3001\u4e0b\u4e00\u4e2a\uff09\u5982\u679c\u4e0b\u4e00\u4e2a\u4e0d\u5728\u6210\u672c\u4e2d\uff0c\u5219\u5f53\u524d\u6216\u65b0\u6210\u672c&lt\uff1b\u6210\u672c\u8fc4\u4eca[\u4e0b\u4e00\u6b65]\uff1a\u6210\u672c\u8fc4\u4eca[\u4e0b\u4e00\u6b65]=\u65b0\u6210\u672c\u4f18\u5148\u7ea7=\u65b0\u6210\u672c\u524d\u6cbf\u3002put\uff08next\uff0cpriority\uff09\u6765\u81ea[next]=\u5f53\u524d\n\u4f7f\u7528\u4f18\u5148\u7ea7\u961f\u5217\u800c\u4e0d\u662f\u5e38\u89c4\u961f\u5217\u4f1a\u6539\u53d8\u8fb9\u754c\u6269\u5c55\u7684\u65b9\u5f0f\u3002\u8f6e\u5ed3\u7ebf\u662f\u89c2\u5bdf\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u542f\u52a8\u52a8\u753b\uff0c\u67e5\u770b\u8fb9\u754c\u5982\u4f55\u5728\u68ee\u6797\u4e2d\u7f13\u6162\u6269\u5c55\uff0c\u627e\u5230\u56f4\u7ed5\u4e2d\u5fc3\u68ee\u6797\u7684\u6700\u77ed\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u7a7f\u8fc7\u68ee\u6797\uff1a\n\u96641\u4ee5\u5916\u7684\u79fb\u52a8\u6210\u672c\u4f7f\u6211\u4eec\u80fd\u591f\u63a2\u7d22\u66f4\u6709\u8da3\u7684\u56fe\u5f62\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7f51\u683c\u3002\u5728\u9875\u9762\u9876\u90e8\u7684\u5730\u56fe\u4e2d\uff0c\u79fb\u52a8\u6210\u672c\u57fa\u4e8e\u623f\u95f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u79fb\u52a8\u6210\u672c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u907f\u5f00\u6216\u9009\u62e9\u57fa\u4e8e\u63a5\u8fd1\u654c\u4eba\u6216\u76df\u53cb\u7684\u533a\u57df\u3002\n\u5b9e\u73b0\u8bf4\u660e\uff1a\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u4f18\u5148\u7ea7\u961f\u5217\u9996\u5148\u8fd4\u56de\u6700\u4f4e\u503c\u3002\u5728\u5b9e\u73b0\u9875\u9762\u4e0a\uff0c\u6211\u7528Python\u663e\u793aPrimeRealQuey\uff0c\u4f7f\u7528HeAPQ\u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c\uff0c\u5728C++\u4e2d\u4f7f\u7528STD\uff1a\uff1aPrimRythyQueQue2\u88ab\u914d\u7f6e\u4e3a\u9996\u5148\u8fd4\u56de\u6700\u4f4e\u503c\u3002\u6b64\u5916\uff0cDijkstra\u7b97\u6cd5\u7684\u7248\u672c\u548c\u6211\u5728\u8fd9\u4e00\u9875\u4e0a\u5c55\u793a\u7684A*\u4e0e\u7b97\u6cd5\u6559\u79d1\u4e66\u4e2d\u7684\u4e0d\u540c\u3002\u5b83\u66f4\u63a5\u8fd1\u4e8e\u6240\u8c13\u7684\u7edf\u4e00\u6210\u672c\u641c\u7d22\u3002\u6211\u5728\u5b9e\u73b0\u9875\u9762\u4e0a\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u5dee\u5f02\u3002\n\u901a\u8fc7\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u548cDijkstra\u7b97\u6cd5\uff0c\u524d\u6cbf\u5411\u5404\u4e2a\u65b9\u5411\u6269\u5c55\u3002\u5982\u679c\u4f60\u60f3\u627e\u5230\u4e00\u6761\u901a\u5f80\u6240\u6709\u5730\u70b9\u6216\u591a\u4e2a\u5730\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9009\u62e9\u3002\u7136\u800c\uff0c\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u53ea\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8def\u5f84\u3002\u8ba9\u6211\u4eec\u8ba9\u524d\u6cbf\u671d\u7740\u76ee\u6807\u6269\u5c55\uff0c\u800c\u4e0d\u662f\u5411\u5176\u4ed6\u65b9\u5411\u6269\u5c55\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u542f\u53d1\u5f0f\u51fd\u6570\uff0c\u544a\u8bc9\u6211\u4eec\u79bb\u76ee\u6807\u6709\u591a\u8fd1\uff1a\ndef\u542f\u53d1\u5f0f\uff08a\uff0cb\uff09\uff1a#\u6b63\u65b9\u5f62\u7f51\u683c\u4e0a\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u8fd4\u56deabs\uff08a.x-b.x\uff09+abs\uff08a.y-b.y\uff09\n\u5728Dijkstra\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4ece\u8d77\u70b9\u5230\u4f18\u5148\u7ea7\u961f\u5217\u6392\u5e8f\u7684\u5b9e\u9645\u8ddd\u79bb\u3002\u76f8\u53cd\uff0c\u5728\u8d2a\u5a6a\u7684\u6700\u4f73\u4f18\u5148\u641c\u7d22\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5230\u4f18\u5148\u7ea7\u961f\u5217\u6392\u5e8f\u76ee\u6807\u7684\u4f30\u8ba1\u8ddd\u79bb\u3002\u9996\u5148\u63a2\u7d22\u8ddd\u79bb\u76ee\u6807\u6700\u8fd1\u7684\u4f4d\u7f6e\u3002\u4ee3\u7801\u4f7f\u7528Dijkstra\u7b97\u6cd5\u4e2d\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u4f46\u8fc4\u4eca\u4e3a\u6b62\u6ca1\u6709\u6210\u672c\uff1a\n\u8fb9\u7586=\u4f18\u5148\u961f\u5217\uff08\uff09\u8fb9\u7586\u3002put\uff08start\uff0c0\uff09come_from=dict\uff08\uff09come_from[start]=none\u800c\u975efrontier\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u5982\u679c\u5f53\u524d==\u76ee\u6807\uff1a\u5728\u56fe\u4e2d\u4e3a\u4e0b\u4e00\u4e2a\u4e2d\u65ad\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u5982\u679c\u4e0b\u4e00\u4e2a\u4e0d\u5728\uff0c\u6765\u81ea\uff1a\u4f18\u5148\u7ea7=\u542f\u53d1\u5f0f\uff08\u76ee\u6807\uff0c\u4e0b\u4e00\u4e2a\uff09\u8fb9\u754c\u3002put\uff08next\uff0cpriority\uff09\u6765\u81ea[next]=\u5f53\u524d\n\u8fd9\u4e9b\u8def\u5f84\u4e0d\u662f\u6700\u77ed\u7684\u3002\u56e0\u6b64\uff0c\u5f53\u6ca1\u6709\u592a\u591a\u969c\u788d\u7269\u65f6\uff0c\u8be5\u7b97\u6cd5\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u4f46\u8def\u5f84\u6ca1\u6709\u90a3\u4e48\u597d\u3002\u6211\u4eec\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\u5bf9\nDijkstra\u7684\u7b97\u6cd5\u53ef\u4ee5\u5f88\u597d\u5730\u627e\u5230\u6700\u77ed\u8def\u5f84\uff0c\u4f46\u5b83\u4f1a\u6d6a\u8d39\u65f6\u95f4\u53bb\u63a2\u7d22\u90a3\u4e9b\u6ca1\u6709\u524d\u9014\u7684\u65b9\u5411\u3002\u8d2a\u5a6a\u7684\u201c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d\uff08Best First Search\uff09\u671d\u7740\u6709\u5e0c\u671b\u7684\u65b9\u5411\u63a2\u7d22\uff0c\u4f46\u5b83\u53ef\u80fd\u627e\u4e0d\u5230\u6700\u77ed\u7684\u8def\u5f84\u3002A*\u7b97\u6cd5\u4f7f\u7528\u4ece\u8d77\u70b9\u5230\u76ee\u6807\u7684\u5b9e\u9645\u8ddd\u79bb\u548c\u4f30\u8ba1\u8ddd\u79bb\u3002\n\u8fb9\u7586=\u4f18\u5148\u961f\u5217\uff08\uff09\u8fb9\u7586\u3002put\uff08start\uff0c0\uff09come_from=dict\uff08\uff09cost_so_far=dict\uff08\uff09come_from[start]=Nonecost_so_far[start]=0\u800c\u4e0d\u662ffrontier\u3002\u7a7a\uff08\uff09\uff1a\u5f53\u524d=\u524d\u6cbf\u3002get\uff08\uff09\u5982\u679c\u5f53\u524d==\u76ee\u6807\uff1a\u5728\u56fe\u4e2d\u4e3a\u4e0b\u4e00\u4e2a\u4e2d\u65ad\u3002\u90bb\u5c45\uff08\u5f53\u524d\uff09\uff1a\u65b0\u6210\u672c=\u6210\u672c\u8fc4\u4eca\u4e3a\u6b62[\u5f53\u524d]+\u56fe\u8868\u3002\u6210\u672c\uff08\u5f53\u524d\u3001\u4e0b\u4e00\u4e2a\uff09\u5982\u679c\u4e0b\u4e00\u4e2a\u4e0d\u5728\u6210\u672c\u4e2d\uff0c\u5219\u5f53\u524d\u6216\u65b0\u6210\u672c&lt\uff1bcost_so_far[\u4e0b\u4e00\u6b65]\uff1acost_so_far[\u4e0b\u4e00\u6b65]=\u65b0\u6210\u672c\u4f18\u5148\u7ea7=\u65b0\u6210\u672c+\u542f\u53d1\u5f0f\uff08\u76ee\u6807\uff0c\u4e0b\u4e00\u6b65\uff09\u524d\u6cbf\u3002put\uff08next\uff0cpriority\uff09\u6765\u81ea[next]=\u5f53\u524d\n\u6bd4\u8f83\u7b97\u6cd5\uff1aDijkstra\u7684\u7b97\u6cd5\u8ba1\u7b97\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u3002\u8d2a\u5a6a\u7684\u6700\u4f73\u4f18\u5148\u641c\u7d22\u4f30\u8ba1\u5230\u76ee\u6807\u70b9\u7684\u8ddd\u79bb\u3002A*\u662f\u8fd9\u4e24\u4e2a\u8ddd\u79bb\u7684\u603b\u548c\u3002\n\u8bd5\u7740\u5728\u5899\u4e0a\u4e0d\u540c\u7684\u5730\u65b9\u5f00\u4e2a\u6d1e\u3002\u4f60\u4f1a\u53d1\u73b0\uff0c\u5f53\u8d2a\u5a6a\u7684Best First Search\u627e\u5230\u6b63\u786e\u7b54\u6848\u65f6\uff0cA*\u4e5f\u4f1a\u627e\u5230\u5b83\uff0c\u63a2\u7d22\u540c\u4e00\u4e2a\u533a\u57df\u3002\u5f53\u8d2a\u5a6a\u7684Best First\u641c\u7d22\u627e\u5230\u9519\u8bef\u7684\u7b54\u6848\uff08\u8def\u5f84\u66f4\u957f\uff09\u65f6\uff0cA*\u4f1a\u50cfDijkstra\u7684\u7b97\u6cd5\u4e00\u6837\u627e\u5230\u6b63\u786e\u7684\u7b54\u6848\uff0c\u4f46\u4ecd\u7136\u6bd4Dijkstra\u7684\u7b97\u6cd5\u63a2\u7d22\u5f97\u66f4\u5c11\u3002\nA*\u662f\u4e24\u4e2a\u4e16\u754c\u4e2d\u6700\u597d\u7684\u3002\u53ea\u8981\u542f\u53d1\u5f0f\u7b97\u6cd5\u4e0d\u4f1a\u9ad8\u4f30\u8ddd\u79bb\uff0cA*\u5c31\u4f1a\u50cfDijkstra\u7b97\u6cd5\u4e00\u6837\u627e\u5230\u4e00\u6761\u6700\u4f18\u8def\u5f84\u3002A*\u4f7f\u7528\u542f\u53d1\u5f0f\u5bf9\u8282\u70b9\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u4ee5\u4fbf\u66f4\u6709\u53ef\u80fd\u66f4\u5feb\u5730\u9047\u5230\u76ee\u6807\u8282\u70b9\u3002\n\u4f60\u51c6\u5907\u597d\u5b9e\u65bd\u4e86\u5417\uff1f\u8003\u8651\u4f7f\u7528\u73b0\u6709\u7684\u5e93\u3002\u5982\u679c\u4f60\u81ea\u5df1\u5b9e\u73b0\u5b83\uff0c\u6211\u6709\u540c\u4f34\u6307\u5357\uff0c\u5b83\u4e00\u6b65\u4e00\u6b65\u5730\u5c55\u793a\u5982\u4f55\u5728Python\u3001C++\u548cC\u8bed\u8a00\u4e2d\u5b9e\u73b0\u56fe\u3001\u961f\u5217\u548c\u5bfb\u8def\u7b97\u6cd5\u3002\n\u5982\u679c\u4f60\u60f3\u627e\u5230\u6240\u6709\u4f4d\u7f6e\u4e4b\u95f4\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6216Dijkstra\u7b97\u6cd5\u3002\u5982\u679c\u79fb\u52a8\u6210\u672c\u76f8\u540c\uff0c\u5219\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff1b\u5982\u679c\u79fb\u52a8\u6210\u672c\u4e0d\u540c\uff0c\u8bf7\u4f7f\u7528Dijkstra\u7b97\u6cd5\u3002\n\u5982\u679c\u4f60\u60f3\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8def\u5f84\uff0c\u6216\u8005\u51e0\u4e2a\u76ee\u6807\u4e2d\u6700\u8fd1\u7684\u4e00\u4e2a\uff0c\u4f7f\u7528\u8d2a\u5a6a\u7684\u6700\u4f73\u4f18\u5148\u641c\u7d22\u6216A*\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u66f4\u559c\u6b22A\u3002\u5f53\u4f60\u60f3\u4f7f\u7528\u8d2a\u5a6a\u7684\u7b2c\u4e00\u6b21\u641c\u7d22\u65f6\uff0c\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u5e26\u6709\u201c\u4e0d\u5141\u8bb8\u201d\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5* [3 ]\u3002\n\u6700\u4f18\u8def\u5f84\u5462\uff1f\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u548cDijkstra\u7b97\u6cd5\u4fdd\u8bc1\u5728\u7ed9\u5b9a\u8f93\u5165\u56fe\u7684\u60c5\u51b5\u4e0b\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002\u8d2a\u5a6a\u7684\u6700\u597d\u7684\u7b2c\u4e00\u6b21\u641c\u7d22\u4e0d\u662f\u3002\u5982\u679c\u542f\u53d1\u5f0f\u6c38\u8fdc\u4e0d\u8d85\u8fc7\u771f\u5b9e\u8ddd\u79bb\uff0c\u5219A*\u4fdd\u8bc1\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002\u968f\u7740\u542f\u53d1\u5f0f\u53d8\u5f97\u66f4\u5c0f\uff0cA*\u53d8\u6210\u4e86Dijkstra\u7b97\u6cd5\u3002\u968f\u7740\u542f\u53d1\u5f0f\u53d8\u5f97\u66f4\u5927\uff0cA*\u53d8\u6210\u8d2a\u5a6a\u7684\u6700\u4f73\u4f18\u5148\u641c\u7d22\u3002\n\u8868\u73b0\u5982\u4f55\uff1f\u6700\u597d\u7684\u529e\u6cd5\u662f\u6d88\u9664\u56fe\u8868\u4e2d\u4e0d\u5fc5\u8981\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4f7f\u7528\u7f51\u683c\uff0c\u8bf7\u53c2\u89c1\u6b64\u3002\u7f29\u5c0f\u56fe\u7684\u5927\u5c0f\u6709\u52a9\u4e8e\u6240\u6709\u7684\u56fe\u641c\u7d22\u7b97\u6cd5\u3002\u4e4b\u540e\uff0c\u4f7f\u7528\u6700\u7b80\u5355\u7684\u7b97\u6cd5\uff1b\u7b80\u5355\u7684\u961f\u5217\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\u8d2a\u5a6a\u7684\u6700\u4f73\u4f18\u5148\u641c\u7d22\u901a\u5e38\u6bd4Dijkstra\u7b97\u6cd5\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u4f46\u4e0d\u4f1a\u4ea7\u751f\u6700\u4f18\u8def\u5f84\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5bfb\u8def\u9700\u6c42\u6765\u8bf4\uff0cA*\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\u975e\u5730\u56fe\u5462\uff1f\u6211\u5728\u8fd9\u91cc\u5c55\u793a\u5730\u56fe\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u4f7f\u7528\u5730\u56fe\u66f4\u5bb9\u6613\u7406\u89e3\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u56fe\u5f62\u641c\u7d22\u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6e38\u620f\u5730\u56fe\uff0c\u6211\u8bd5\u56fe\u4ee5\u4e00\u79cd\u72ec\u7acb\u4e8e2d\u7f51\u683c\u7684\u65b9\u5f0f\u5448\u73b0\u7b97\u6cd5\u4ee3\u7801\u3002\u5730\u56fe\u4e0a\u7684\u79fb\u52a8\u6210\u672c\u53d8\u6210\u4e86\u56fe\u8fb9\u4e0a\u7684\u4efb\u610f\u6743\u91cd\u3002\u542f\u53d1\u5f0f\u7b97\u6cd5\u4e0d\u5bb9\u6613\u8f6c\u5316\u4e3a\u4efb\u610f\u7684\u5730\u56fe\uff1b\u4f60\u5fc5\u987b\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u56fe\u8bbe\u8ba1\u4e00\u4e2a\u542f\u53d1\u5f0f\u3002\u5bf9\u4e8e\u5e73\u9762\u5730\u56fe\uff0c\u8ddd\u79bb\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u3002\n\u6211\u5728\u8fd9\u91cc\u6709\u66f4\u591a\u5173\u4e8e\u5bfb\u8def\u7684\u6587\u7ae0[4]\u3002\u8bb0\u4f4f\uff0c\u56fe\u5f62\u641c\u7d22\u53ea\u662f\u4f60\u9700\u8981\u7684\u4e00\u90e8\u5206\u3002A*\u672c\u8eab\u4e0d\u4f1a\u5904\u7406\u8bf8\u5982\u534f\u540c\u79fb\u52a8\u3001\u79fb\u52a8\u969c\u788d\u7269\u3001\u5730\u56fe\u66f4\u6539\u3001\u5371\u9669\u533a\u57df\u8bc4\u4f30\u3001\u7f16\u961f\u3001\u8f6c\u5f2f\u534a\u5f84\u3001\u5bf9\u8c61\u5927\u5c0f\u3001\u52a8\u753b\u3001\u8def\u5f84\u5e73\u6ed1\u7b49\u95ee\u9898\u3002\n\u7248\u6743\u6240\u6709\u00a92022 Red Blob Games RSS\u6e90\u5f15\u7528\uff1aPatel\u3001Amit\u548c#34\uff1bA*\u7b97\u6cd5\u7b80\u4ecb&#34\uff1b\uff0c\u7ea2\u70b9\u6e38\u620f\uff0c2014\uff0chttps://www.redblobgames.com/pathfinding/a-star/introduction.html@\u6587\u7ae0{article\uff0cauthor={Patel\uff0cAmit}\uff0ctitle={A*\u7b97\u6cd5\u7b80\u4ecb}\uff0c\u5e74\u4efd={2014}\uff0c\u6ce8={https://www.redblobgames.com/pathfinding/a-star/introduction.html}}\n\u5728conrec\u7684\u5e2e\u52a9\u4e0b\u4e8e2014\u5e745\u670826\u65e5\u521b\u5efa\u3002js\uff1b\u65af\u5854\u62c9\u6587\u7684\u8349\u56fe\u7ed8\u5236\u753b\u7b14\u4e2d\u7684\u5730\u56fe\u7cbe\u7075\uff1b\u6700\u540e\u4fee\u6539\uff1a25 DEC 2021", "note_en": "Created 26 May 2014, updated Aug 2014, Feb 2016, Jun 2016, Jun 2020 In games we often want to find paths from one location to another. We\u2019re not only trying to find the shortest distance; we also want to take into account travel time. Move the blob    (start point) and cross    (end point) to see the shortest path.\n  To find this path we can use a  graph search algorithm, which works when the map is represented as a graph.  A* is a popular choice for graph search.  Breadth First Search is the simplest of the graph search algorithms, so let\u2019s start there, and we\u2019ll work our way up to A*.\n The first thing to do when studying an algorithm is to understand the  data. What is the input? What is the output?\n Input: Graph search algorithms, including A*, take a \u201cgraph\u201d as input. A graph is a set of  locations   (\u201cnodes\u201d) and the  connections   (\u201cedges\u201d) between them. Here\u2019s the graph I gave to A*:\n  A* doesn\u2019t see anything else. It only sees the graph. It doesn\u2019t know whether something is indoors or outdoors, or if it\u2019s a room or a doorway, or how big an area is.  It only sees the graph! It doesn\u2019t know the difference between this map and  .\n Output: The path found by A* is  . The edges are abstract mathematical concepts. A* will tell you to move from one location to another  but it won\u2019t tell you how. Remember that it doesn\u2019t know anything about rooms or doors; all it sees is the graph. You\u2019ll have to decide whether a graph edge returned by A* means moving from tile to tile or walking in a straight line or opening a door or swimming or running along a curved path.\n Tradeoffs: For any given game map, there are many different ways of making a pathfinding graph to give to A*. The above map makes most doorways into nodes; what if we made  ? What if we used  ?\n  The pathfinding graph doesn\u2019t have to be the same as what your game map uses. A grid game map can use a non-grid pathfinding graph, or vice versa. A* runs fastest with the fewest graph nodes; grids are often easier to work with but result in lots of nodes. This page covers the A* algorithm but not graph design; see  my other page [1] for more about graphs. For the explanations on the rest of the page,  I\u2019m going to use grids because it\u2019s easier to visualize the concepts.\n There are lots of algorithms that run on graphs. I\u2019m going to cover these:\n Breadth First Search explores equally in all directions. This is an incredibly useful algorithm, not only for regular path finding, but also for procedural map generation, flow field pathfinding, distance maps, and other types of map analysis.\n Dijkstra\u2019s Algorithm (also called Uniform Cost Search) lets us prioritize which paths to explore. Instead of exploring all possible paths equally, it favors lower cost paths. We can assign lower costs to encourage moving on roads, higher costs to avoid forests, higher costs to discourage going near enemies, and more. When movement costs vary, we use this instead of Breadth First Search.\n A* is a modification of Dijkstra\u2019s Algorithm that is optimized for a single destination. Dijkstra\u2019s Algorithm can find paths to all locations; A* finds paths to one location, or the closest of several locations. It prioritizes paths that seem to be leading closer to a goal.\n I\u2019ll start with the simplest, Breadth First Search, and add one feature at a time to turn it into A*.\n The key idea for all of these algorithms is that we keep track of an expanding ring called the  frontier. On a grid, this process is sometimes called \u201cflood fill\u201d, but the same technique also works for non-grids.  Start the animation to see how the frontier expands  \u00a0\u2192 \u00a0\u2192\n   Expand it by looking at its  neighbors\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0. Skip walls. Any unreached neighbors we add to  both the  frontier and the  reached set \u00a0 \u00a0\u2192 \u00a0 \u00a0.\n Let\u2019s see this up close. The tile are numbered in the order we visit them.  Step through to see the expansion process:\n   frontier = Queue()frontier.put(start   )reached = set()reached.add(start)while not frontier.empty(): current = frontier.get() for next in graph.neighbors(current): if next not in reached: frontier.put(next) reached.add(next)\n This loop is the essence of the graph search algorithms on this page, including A*. But how do we find the shortest path? The loop doesn\u2019t actually construct the paths; it only tells us how to visit everything on the map. That\u2019s because Breadth First Search can be used for a lot more than just finding paths; in  this article I show how it\u2019s used for tower defense, but it can also be used for distance maps, procedural map generation, and lots of other things. Here though we want to use it for finding paths, so let\u2019s modify the loop to keep track of  where we came from for every location that\u2019s been reached, and rename the  reached set to a  came_from table (the keys of the table are the reached set):\n frontier = Queue()frontier.put(start   ) came_from = dict() came_from[start] =  Nonewhile not frontier.empty(): current = frontier.get() for next in graph.neighbors(current): if next not in  came_from: frontier.put(next)  came_from[next] =  current\n Now  came_from for each location points to the place where we came from. These are like \u201cbreadcrumbs\u201d. They\u2019re enough to reconstruct the entire path. Move the cross    to see how following the arrows gives you a reverse path back to the start position.\n  The code to reconstruct paths is simple:  follow the arrows backwards  from the goal  to the start. A path is a  sequence of edges, but often it\u2019s easier to store the nodes:\n current = goal   path = []while current != start:    path.append(current) current = came_from[current]path.append(start) # optionalpath.reverse() # optional\n That\u2019s the simplest pathfinding algorithm. It works not only on grids as shown here but on any sort of graph structure. In a dungeon, graph locations could be rooms and graph edges the doorways between them. In a platformer, graph locations could be locations and graph edges the possible actions such as move left, move right, jump up, jump down. In general, think of the graph as states and actions that change state. I have more written about map representation  here [2]. In the rest of the article I\u2019ll continue using examples with grids, and explore why you might use variants of breadth first search.\n We\u2019ve found paths from  one location to  all other locations. Often we don\u2019t need all the paths; we only need a path from one location to  one other location. We can stop expanding the frontier as soon as we\u2019ve found our goal. Drag the    around see how the frontier stops expanding as soon as it reaches the goal.\n   frontier = Queue()frontier.put(start   )came_from = dict()came_from[start] = Nonewhile not frontier.empty(): current = frontier.get()  if current == goal:      break  for next in graph.neighbors(current): if next not in came_from: frontier.put(next) came_from[next] = current\n So far we\u2019ve made step have the same \u201ccost\u201d. In some pathfinding scenarios there are different costs for different types of movement. For example in Civilization, moving through plains or desert might cost 1 move-point but moving through forest or hills might cost 5 move-points. In the map at the top of the page, walking through water cost 10 times as much as walking through grass. Another example is diagonal movement on a grid that costs more than axial movement. We\u2019d like the pathfinder to take these costs into account. Let\u2019s compare the  number of steps from the start with the  distance from the start:\n  For this we want  Dijkstra\u2019s Algorithm (or Uniform Cost Search). How does it differ from Breadth First Search? We need to track movement costs, so let\u2019s add a new variable,  cost_so_far, to keep track of the total movement cost from the start location. We want to take the movement costs into account when deciding how to evaluate locations; let\u2019s turn our queue into a priority queue. Less obviously, we may end up visiting a location multiple times, with different costs, so we need to alter the logic a little bit. Instead of adding a location to the frontier if the location has never been reached, we\u2019ll add it if the new path to the location is better than the best previous path.\n frontier =  PriorityQueue()frontier.put(start , 0)came_from = dict()cost_so_far = dict()came_from[start] = Nonecost_so_far[start] = 0while not frontier.empty(): current = frontier.get() if current == goal: break for next in graph.neighbors(current):  new_cost = cost_so_far[current] + graph.cost(current, next)  if next not in cost_so_far or new_cost &lt; cost_so_far[next]: cost_so_far[next] =  new_cost  priority = new_cost frontier.put(next , priority) came_from[next] = current\n Using a priority queue instead of a regular queue  changes the way the frontier expands. Contour lines are one way to see this.  Start the animation to see how the frontier expands more slowly through the forests, finding the shortest path around the central forest instead of through it:\n  Movement costs other than 1 allow us to explore more interesting graphs, not only grids. In the map at the top of the page, movement costs were based on the distance from room to room. Movement costs can also be used to avoid or prefer areas based on proximity to enemies or allies.\n Implementation notes: We want this priority queue to return the  lowest value first. On the implementation page I show  PriorityQueue\u00a0  in Python using  heapq to return the lowest value first and also  in C++ using  std::priority_queue configured to return the lowest value first. Also, the version of Dijkstra\u2019s Algorithm and A* I present on this page differs from what\u2019s in algorithms textbooks. It\u2019s much closer to what\u2019s called Uniform Cost Search. I describe the differences  on the implementation page.\n With Breadth First Search and Dijkstra\u2019s Algorithm, the frontier expands in all directions. This is a reasonable choice if you\u2019re trying to find a path to all locations or to many locations. However, a common case is to find a path to only one location. Let\u2019s make the frontier expand towards the goal more than it expands in other directions. First, we\u2019ll define a  heuristic function that tells us how close we are to the goal:\n def heuristic(a, b): # Manhattan distance on a square grid return abs(a.x - b.x) + abs(a.y - b.y)\n In Dijkstra\u2019s Algorithm we used the actual distance from the  start for the priority queue ordering. Here instead, in  Greedy Best First Search, we\u2019ll use the estimated distance to the  goal for the priority queue ordering. The location closest to the goal will be explored first. The code uses the priority queue from Dijkstra\u2019s Algorithm but without  cost_so_far:\n frontier = PriorityQueue()frontier.put(start, 0)came_from = dict()came_from[start] = Nonewhile not frontier.empty(): current = frontier.get() if current == goal: break for next in graph.neighbors(current): if next not in came_from:  priority = heuristic(goal, next) frontier.put(next, priority) came_from[next] = current\n     Those paths aren\u2019t the shortest. So this algorithm runs  faster when there aren\u2019t a lot of obstacles, but the paths aren\u2019t as  good. Can we fix this? Yes!\n Dijkstra\u2019s Algorithm works well to find the shortest path, but it wastes time exploring in directions that aren\u2019t promising. Greedy Best First Search explores in promising directions but it may not find the shortest path. The A* algorithm uses  both the actual distance from the start and the estimated distance to the goal.\n  frontier = PriorityQueue()frontier.put(start, 0)came_from = dict()cost_so_far = dict()came_from[start] = Nonecost_so_far[start] = 0while not frontier.empty(): current = frontier.get() if current == goal: break for next in graph.neighbors(current): new_cost = cost_so_far[current] + graph.cost(current, next) if next not in cost_so_far or new_cost &lt; cost_so_far[next]: cost_so_far[next] = new_cost priority = new_cost  + heuristic(goal, next) frontier.put(next, priority) came_from[next] = current\n Compare the algorithms: Dijkstra\u2019s Algorithm calculates the distance from the start point. Greedy Best-First Search estimates the distance to the goal point. A* is using the sum of those two distances.\n  Try opening a hole in the wall in various places. You\u2019ll find that when Greedy Best-First Search finds the right answer, A* finds it too, exploring the same area. When Greedy Best-First Search finds the wrong answer (longer path), A* finds the right answer, like Dijkstra\u2019s Algorithm does, but still explores less than Dijkstra\u2019s Algorithm does.\n A* is the best of both worlds. As long as the heuristic does not overestimate distances, A* finds an optimal path, like Dijkstra\u2019s Algorithm does. A* uses the heuristic to reorder the nodes so that it\u2019s  more likely that the goal node will be encountered sooner.\n Are you ready to implement this? Consider using an existing library. If you\u2019re implementing it yourself, I have  companion guide that shows step by step how to implement graphs, queues, and pathfinding algorithms in Python, C++, and C#.\n  If you want to find paths from or to  all all locations, use Breadth First Search or Dijkstra\u2019s Algorithm. Use Breadth First Search if movement costs are all the same; use Dijkstra\u2019s Algorithm if movement costs vary.\n If you want to find paths to  one location, or the closest of several goals, use Greedy Best First Search or A*. Prefer A* in most cases. When you\u2019re tempted to use Greedy Best First Search, consider using A* with an  \u201cinadmissible\u201d heuristic [3].\n What about optimal paths? Breadth First Search and Dijkstra\u2019s Algorithm are guaranteed to find the shortest path given the input graph. Greedy Best First Search is not. A* is guaranteed to find the shortest path if the heuristic is never larger than the true distance. As the heuristic becomes smaller, A* turns into Dijkstra\u2019s Algorithm. As the heuristic becomes larger, A* turns into Greedy Best First Search.\n What about performance? The best thing to do is to eliminate unnecessary locations in your graph. If using a grid,  see this. Reducing the size of the graph helps all the graph search algorithms. After that, use the simplest algorithm you can; simpler queues run faster. Greedy Best First Search typically runs faster than Dijkstra\u2019s Algorithm but doesn\u2019t produce optimal paths. A* is a good choice for most pathfinding needs.\n What about non-maps? I show maps here because I think it\u2019s easier to understand how the algorithms work by using a map. However, these graph search algorithms can be used on any sort of graph, not only game maps, and I\u2019ve tried to present the algorithm code in a way that\u2019s independent of 2d grids. Movement costs on the maps become arbitrary weights on graph edges. The heuristics don\u2019t translate as easily to arbitrary maps; you have to design a heuristic for each type of graph. For planar maps, distances are a good choice, so that\u2019s what I\u2019ve used here.\n I have lots more written about pathfinding  here [4]. Keep in mind that graph search is only one part of what you will need. A* doesn\u2019t itself handle things like cooperative movement, moving obstacles, map changes, evaluation of dangerous areas, formations, turn radius, object sizes, animation, path smoothing, or lots of other topics.\n  Copyright \u00a9 2022  Red Blob Games      RSS Feed Citations:Patel, Amit, &#34;Introduction to the A* Algorithm&#34;, Red Blob Games, 2014, https://www.redblobgames.com/pathfinding/a-star/introduction.html@article{article, author = {Patel, Amit}, title = {Introduction to the A* Algorithm}, year = {2014}, note = {https://www.redblobgames.com/pathfinding/a-star/introduction.html}}\n Created 26 May 2014 with the help of  conrec.js; map sprites from StarRaven\u2019s  Sketchy Cartography Brushes; \u00a0Last modified: 25 Dec 2021", "posttime": "2022-02-13 18:27:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,introduction", "title": "A*\u7b97\u6cd5\u7b80\u4ecb\uff082014\uff09", "title_en": "Introduction to the A* Algorithm (2014)", "transed": 1, "url": "https://www.redblobgames.com/pathfinding/a-star/introduction.html", "via": "", "real_tags": ["\u7b97\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072927, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u4e3a\u60a8\u5904\u7406\u8282\u70b9VM\u4e0a\u4e0b\u6587\u7684\u8bbe\u7f6e\uff0c\u8be5\u8f6f\u4ef6\u5305\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u8bbe\u7f6eweb\u7ec4\u4ef6\u7684\u670d\u52a1\u5668\u7aef\u5448\u73b0\u3002\n\u4e00\u4e2a\u5168\u5c40\u6ce8\u518cHappy DOM\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u8282\u70b9\u73af\u5883\u4e2d\u4f7f\u7528Happy DOM\u8fdb\u884c\u6d4b\u8bd5\u3002", "note_en": "This package makes it easier to setup servering side rendering of web components by handling the setup of the Node  VM Context for you.\n   A utility that registers Happy DOM globally, which makes it possible to use Happy DOM for testing in a Node environment.", "posttime": "2022-02-13 18:27:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dom,\u8282\u70b9", "title": "Happy DOM\uff1a\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u7aef\u5448\u73b0web\u7ec4\u4ef6\u7684jsdom\u66ff\u4ee3\u65b9\u6848", "title_en": "Happy-DOM: a jsdom alternative that can server side render web components", "transed": 1, "url": "https://github.com/capricorn86/happy-dom", "via": "", "real_tags": ["dom", "\u8282\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072926, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u82f1\u56fd\u536b\u751f\u5b89\u5168\u5c40\uff08UK Health Security Agency\uff09\u4e3a\u82f1\u683c\u5170\u63d0\u4f9b\u7684\u6700\u65b0\u6570\u636e\uff0c\u5341\u5e74\u6765\uff0c\u5f02\u6027\u604b\u8005\u4e2d\u65b0\u8bca\u65ad\u7684\u827e\u6ecb\u75c5\u75c5\u6bd2\u6570\u91cf\u9996\u6b21\u9ad8\u4e8e\u7537\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u8005\u3002\n2020\u5e74\uff0c\u82f1\u56fd\u65b0\u8bca\u65ad\u7684\u827e\u6ecb\u75c5\u6bd2\u611f\u67d3\u8005\u4e2d\u6709\u4e00\u534a\u662f\u5f02\u6027\u604b\u8005\uff0849%\uff09\uff0c\u800c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u6bd4\u4f8b\u4e3a45%\u3002\n\u8fd9\u662f\u56e0\u4e3a\u4eca\u5929\u5f00\u59cb\u7684\u5168\u56fd\u827e\u6ecb\u75c5\u6bd2\u68c0\u6d4b\u5468\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u827e\u6ecb\u75c5\u6bd2\u68c0\u6d4b\u8bd5\u5242\u76d2\u3002\u9f13\u52b1\u4efb\u4f55\u6027\u6d3b\u8dc3\u7684\u4eba\u68c0\u6d4b\u5e76\u4e86\u89e3\u81ea\u5df1\u7684HIV\u72b6\u51b5\u3002\n\u5c3d\u7ba12019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u6d41\u884c\uff0c\u4f46\u68c0\u6d4b\u7ed3\u679c\u6709\u6240\u4e0b\u964d\uff0c\u4f46\u8fd9\u4e00\u6d88\u606f\u7a81\u663e\u4e86\u56fd\u5185\u827e\u6ecb\u75c5\u6bd2\u6d41\u884c\u7684\u53d8\u5316\u30022020\u5e74\uff0c\u5f02\u6027\u604b\u8005\u901a\u8fc7\u6027\u5065\u5eb7\u670d\u52a1\u8fdb\u884c\u7684\u827e\u6ecb\u75c5\u6bd2\u68c0\u6d4b\u4e0b\u964d\u4e86\u4e09\u5206\u4e4b\u4e00\uff0833%\uff09\uff0c\u800c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u68c0\u6d4b\u4e0b\u964d\u4e867%\u3002\u8fd9\u4f7f\u5f97\u5f02\u6027\u604b\u8005\u4e2d\u8d85\u8fc7\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u8bca\u65ad\u4eba\u6570\u66f4\u52a0\u663e\u8457\u3002\n\u5f02\u6027\u604b\u8005\u88ab\u8bca\u65ad\u665a\u7684\u53ef\u80fd\u6027\u4e5f\u5927\u5f97\u591a\uff0c\u8fd9\u610f\u5473\u7740\u514d\u75ab\u7cfb\u7edf\u5df2\u7ecf\u5f00\u59cb\u53d7\u5230\u635f\u5bb3\u30022020\u5e74\uff0c\u8d85\u8fc7\u4e00\u534a\uff0851%\uff09\u7684\u5973\u6027\u300155%\u7684\u5f02\u6027\u604b\u7537\u6027\u548c66%\u768465\u5c81\u53ca\u4ee5\u4e0a\u88ab\u8bca\u65ad\u4e3aHIV\u611f\u67d3\u8005\u662f\u5728\u665a\u671f\u8bca\u65ad\u7684\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u6bd4\u4f8b\u53ea\u670929%\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u4eec\u76f8\u4fe1\u81ea\u5df1\u6ca1\u6709\u611f\u67d3\u827e\u6ecb\u75c5\u6bd2\u7684\u98ce\u9669\uff0c\u8fd9\u4e00\u70b9\u5f80\u5f80\u5f97\u5230\u533b\u7597\u4e13\u4e1a\u4eba\u5458\u7684\u652f\u6301\u3002\n\u6770\u57fa\u662f\u4e00\u540d\u611f\u67d3\u827e\u6ecb\u75c5\u6bd2\u7684\u5f02\u6027\u604b\u5973\u6027\uff0c\u5979\u8bf4\uff1a&#39\uff1b\u6211\u4e0d\u4ec5\u6ca1\u60f3\u8fc7\u6211\u80fd\u611f\u67d3\u827e\u6ecb\u75c5\uff0c\u6211\u7684\u533b\u751f\u4e5f\u6ca1\u6709\u3002\u5728\u6211\u68c0\u6d4b\u5448\u9633\u6027\u4e4b\u524d\uff0c\u6211\u4e0d\u77e5\u9053\u5973\u6027\u4f1a\u611f\u67d3HIV\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u6709\u8fc7\u6027\u884c\u4e3a\uff0c\u4f60\u5e94\u8be5\u5b9a\u671f\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u4e0d\u53d7\u4fdd\u62a4\u7684\u6d4b\u8bd5\u3002\u4e86\u89e3\u81ea\u5df1\u7684\u8eab\u4efd\u5bf9\u4f60\u548c\u4f60\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4eba\u90fd\u662f\u6700\u597d\u7684\u3002\n&#39;\u6700\u8fd1\u7684\u53d1\u5c55\u610f\u5473\u7740HIV\u68c0\u6d4b\u662f\u514d\u8d39\u3001\u5feb\u901f\u548c\u7b80\u5355\u7684\uff0cHIV\u6cbb\u7597\u5728\u63a7\u5236\u75c5\u6bd2\u65b9\u9762\u662f\u6709\u6548\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6211\u53ef\u4ee5&#39\uff1b\u4e0d\u8981\u628a\u75c5\u6bd2\u4f20\u67d3\u7ed9\u522b\u4eba\u3002HIV\u53ef\u4ee5\u5f71\u54cd\u4efb\u4f55\u4eba\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u8fdb\u884c\u68c0\u6d4b&#39;\n\u76f8\u5bf9\u4e8e\u4eba\u53e3\u89c4\u6a21\u800c\u8a00\uff0c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u4ecd\u7136\u66f4\u5bb9\u6613\u53d7\u5230\u827e\u6ecb\u75c5\u6bd2\u7684\u5f71\u54cd\uff0c\u4f46\u9488\u5bf9\u8fd9\u4e00\u7fa4\u4f53\u7684\u6709\u9488\u5bf9\u6027\u7684\u5e72\u9884\u63aa\u65bd\u5df2\u7ecf\u5bfc\u81f4\u4e86\u8fd9\u4e00\u6d41\u884c\u75c5\u7684\u91cd\u5927\u6210\u529f\u6848\u4f8b\u4e4b\u4e00\u30022014\u5e74\uff0c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u4e2d\u65b0\u7684\u827e\u6ecb\u75c5\u6bd2\u8bca\u65ad\u5f00\u59cb\u4e0b\u964d\uff0c\u6b64\u540e\u6bcf\u5e74\u90fd\u5728\u4e0b\u964d\uff0c2014\u5e74\u81f32020\u5e74\u95f4\u4e0b\u964d\u4e8670%\u3002\u8fd9\u79cd\u4e0b\u964d\u5728\u767d\u4eba\u548c\u4f26\u6566\u4eba\u4e2d\u6700\u4e3a\u660e\u663e\u3002\n\u7537\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u786e\u8bca\u7387\u4e0b\u964d\u662f\u56e0\u4e3a\u8d8a\u6765\u8d8a\u591a\u7684HIV\u9884\u9632\u836f\u7247\u5236\u5242\u548c\u6709\u9488\u5bf9\u6027\u5730\u63a8\u5e7f\u5e38\u89c4HIV\u68c0\u6d4b\uff0c\u7136\u540e\u8fc5\u901f\u5f00\u59cb\u5bf9\u786e\u8bca\u8005\u8fdb\u884cHIV\u6cbb\u7597\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u4f1a\u66f4\u5feb\u5730\u53d7\u5230\u75c5\u6bd2\u6291\u5236\uff0c\u65e0\u6cd5\u4f20\u64adHIV\u3002\n\u6211\u4eec\u5e0c\u671b\uff0c\u901a\u8fc7\u63d0\u9ad8\u8ba4\u8bc6\u3001\u589e\u52a0\u6d4b\u8bd5\u548c\u66f4\u597d\u5730\u4e3a\u5f02\u6027\u604b\u8005\u63d0\u4f9b\u51c6\u5907\uff0c\u8fd9\u53ef\u4ee5\u5728\u66f4\u5e7f\u6cdb\u7684\u4eba\u7fa4\u4e2d\u63a8\u5e7f\u3002\u6211\u4eec\u8981\u4f20\u8fbe\u7684\u4fe1\u606f\u662f\uff0c\u827e\u6ecb\u75c5\u6bd2\u53ef\u4ee5\u5f71\u54cd\u4efb\u4f55\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u77e5\u9053\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u827e\u6ecb\u75c5\u6bd2\u611f\u67d3\u2014\u2014\u65e0\u8bba\u6027\u522b\u3001\u79cd\u65cf\u6216\u5e74\u9f84\u3002\n\u589e\u52a0HIV\u68c0\u6d4b\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u636e\u4f30\u8ba1\uff0c\u82f1\u56fd\u67095%\u7684HIV\u611f\u67d3\u8005\uff084660\u4eba\uff09\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u4ed6\u4eec\u7684\u5065\u5eb7\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\uff0c\u5e76\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u80fd\u4f1a\u4f20\u64adHIV\u3002\u82f1\u56fd\u7684\u76ee\u6807\u662f\u52302030\u5e74\u7ed3\u675f\u65b0\u7684\u827e\u6ecb\u75c5\u6bd2\u75c5\u4f8b\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u5c31\u5fc5\u987b\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u6bcf\u4e00\u6b21\u827e\u6ecb\u75c5\u6bd2\u68c0\u6d4b\u673a\u4f1a\u3002\n\u5728\u5168\u56fdHIV\u68c0\u6d4b\u5468\u671f\u95f4\uff0c\u4f60\u53ef\u4ee5\u5728\u5bb6\u91cc\u8ba2\u8d2d\u514d\u8d39\u7684HIV\u68c0\u6d4b\u8bd5\u5242\u76d2\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5f53\u5730\u7684\u6027\u5065\u5eb7\u8bca\u6240\u3002\n\u536b\u751f\u548c\u793e\u4f1a\u4fdd\u969c\u90e8\u957f\u8428\u5409\u5fb7\u00b7\u8d3e\u7ef4\u5fb7\u8bf4&#39\uff1b\u7531\u4e8e\u68c0\u6d4b\u548cPrEP\u7684\u5e38\u89c4\u8c03\u8bd5\uff0c\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u7537\u6027\u7684\u827e\u6ecb\u75c5\u6bd2\u8bca\u65ad\u7387\u8fdb\u4e00\u6b65\u4e0b\u964d\uff0c\u8fd9\u662f\u975e\u5e38\u7f8e\u5999\u7684\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u8fd9\u4e00\u8d8b\u52bf\u5728\u6240\u6709\u7fa4\u4f53\u4e2d\u90fd\u5f97\u5230\u53cd\u6620\u3002\n&#39;\u6211\u81f4\u529b\u4e8e\u6211\u4eec\u7684\u76ee\u6807\uff0c\u5373\u52302030\u5e74\u4e0d\u518d\u6709\u65b0\u7684\u827e\u6ecb\u75c5\u6bd2\u4f20\u64ad\uff0c\u4f46\u6211\u4eec\u65e0\u6cd5\u5355\u72ec\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002\u6211\u4eec\u90fd\u6709\u81ea\u5df1\u7684\u8d23\u4efb\u2014\u2014\u827e\u6ecb\u75c5\u6bd2\u68c0\u6d4b\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u662f\u514d\u8d39\u548c\u4fdd\u5bc6\u7684\uff0c\u4e86\u89e3\u81ea\u5df1\u7684\u72b6\u51b5\u5c06\u4f7f\u4f60\u80fd\u591f\u83b7\u5f97\u9002\u5f53\u7684\u9884\u9632\u6216\u6cbb\u7597&#39;\n\u536b\u751f\u9879\u76ee\u8d1f\u8d23\u4ebaTaku Mukiwa\u8bf4\uff1a&#39\uff1b\u5341\u5e74\u6765\uff0c\u88ab\u8bca\u65ad\u611f\u67d3\u827e\u6ecb\u75c5\u6bd2\u7684\u5f02\u6027\u604b\u8005\u9996\u6b21\u8d85\u8fc7\u7537\u540c\u6027\u604b\u548c\u53cc\u6027\u604b\u8005\u3002\u5f02\u6027\u604b\u8005\u57282019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u7b5b\u67e5\u4e2d\u53d1\u73b0HIV\u68c0\u6d4b\u7684\u4e0b\u964d\u5e45\u5ea6\u66f4\u5927\uff0c\u8bca\u65ad\u7684\u53ef\u80fd\u6027\u66f4\u5927\u3002\n&#39;\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u770b\u5230\u66f4\u591a\u7684\u5f02\u6027\u604b\u8005\u63a5\u53d7\u68c0\u6d4b\uff0c\u4ee5\u907f\u514d\u957f\u671f\u611f\u67d3\u672a\u786e\u8bca\u7684\u827e\u6ecb\u75c5\u6bd2\u3002\u8fd9\u5bf9\u4ed6\u4eec\u81ea\u5df1\u7684\u5065\u5eb7\u4ee5\u53ca\u963b\u6b62\u827e\u6ecb\u75c5\u6bd2\u4f20\u64ad\u7684\u52aa\u529b\u90fd\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u4eba\u90fd\u662f\u4ece\u4e0d\u77e5\u9053\u81ea\u5df1\u611f\u67d3\u4e86\u827e\u6ecb\u75c5\u6bd2\u7684\u4eba\u90a3\u91cc\u611f\u67d3\u7684&#39;\nKate Folkard\u662f\u82f1\u56fd\u536b\u751f\u5b89\u5168\u5c40HIV\u90e8\u95e8\u7684\u4e34\u65f6\u526f\u4e3b\u4efb\uff0c\u8bf4\uff1a\u201c\u6211\u4eec\u5fc5\u987b\u89e3\u51b3\u4e0d\u5e73\u7b49\u95ee\u9898\uff0c\u627e\u5230\u521b\u9020\u6027\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u6240\u6709\u4eba\u7fa4\u4e2d\u7684\u4f20\u64ad\u3002\u8981\u7ed3\u675f\u827e\u6ecb\u75c5\u6bd2\u4f20\u64ad\uff0c\u6211\u4eec\u9700\u8981\u53ca\u65e9\u8bca\u65ad\uff0c\u53ca\u65f6\u5f00\u59cb\u6cbb\u7597\uff0c\u5e76\u652f\u6301\u4eba\u4eec\u7ee7\u7eed\u6cbb\u7597\u3002\u53ca\u65e9\u68c0\u6d4b\u827e\u6ecb\u75c5\u6bd2\u53ef\u4ee5\u8ba9\u6709\u6548\u7684\u6cbb\u7597\u66f4\u65e9\u5f00\u59cb\uff0c\u800c\u88ab\u8bca\u65ad\u7684\u4eba\u53ef\u4ee5\u671f\u5f85o\u6709\u6b63\u5e38\u7684\u9884\u671f\u5bff\u547d\u3002\n&#39;\u6b64\u5916\uff0c\u827e\u6ecb\u75c5\u6bd2\u643a\u5e26\u8005\u5982\u679c\u63a5\u53d7\u6cbb\u7597\u5e76\u4fdd\u6301\u4e0d\u53ef\u68c0\u6d4b\u7684\u75c5\u6bd2\u6c34\u5e73\uff0c\u5c31\u4e0d\u80fd\u901a\u8fc7\u827e\u6ecb\u75c5\u6bd2\uff0c\u5373\u4e0d\u53ef\u68c0\u6d4b=\u4e0d\u53ef\u4f20\u64ad\uff08U=U\uff09\u3002\u6211\u4eec\u9f13\u52b1\u6bcf\u4e2a\u4eba\u63a5\u53d7\u514d\u8d39\u68c0\u6d4b\uff0c\u53ea\u6709\u4e86\u89e3\u81ea\u5df1\u7684HIV\u72b6\u51b5\uff0c\u4f60\u624d\u80fd\u6709\u6743\u91c7\u53d6\u884c\u52a8\u3002\u901a\u8fc7\u300a\u827e\u6ecb\u75c5\u6bd2\u884c\u52a8\u8ba1\u5212\u300b\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u4e0e\u6574\u4e2a\u536b\u751f\u7cfb\u7edf\u7684\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\uff0c\u4ee5\u5b9e\u73b0\u52302030\u5e74\u7ed3\u675f\u827e\u6ecb\u75c5\u6bd2\u4f20\u64ad\u7684\u76ee\u6807&#39;\n\u7248\u6743\u6240\u67092022\u00a9Terrence Higgins Trust\u662f\u82f1\u683c\u5170\u548c\u5a01\u5c14\u58eb\u6ce8\u518c\u7684\u6148\u5584\u673a\u6784\uff08\u6ce8\u518c\u53f7288527\uff09\u516c\u53f8\u6ce8\u518c\u53f7\u30021778149\u53f7\u548c\u82cf\u683c\u5170\u6ce8\u518c\u6148\u5584\u673a\u6784\uff08\u6ce8\u518c\u53f7SC039986\uff09\u3002\u6ce8\u518c\u529e\u4e8b\u5904\uff1a437&amp\uff1b\u4f26\u6566\u5580\u91cc\u591a\u5c3c\u4e9a\u8def439\u53f7\uff0cN7 9BG\u3002", "note_en": "For the first time in a decade, the number of new HIV diagnoses among heterosexuals is higher than for gay and bisexual men, according to new figures for England from the UK Health Security Agency.\n Half of all new HIV diagnoses were in heterosexuals (49%) in England in 2020, compared to 45% in gay and bisexual men.\n This comes as  free HIV test kits are made available for National HIV Testing Week, which launches today. Anyone who\u2019s sexually active is encouraged to test and know their HIV status.\n The news highlights the changing shape of the domestic HIV epidemic despite a drop in testing caused by the COVID-19 pandemic. HIV testing by sexual health services among heterosexuals during 2020 fell by a third (33%), compared to a 7% decrease among gay and bisexual men. This makes the number of diagnoses among heterosexuals passing gay and bisexual men even more significant.\n Heterosexuals were also far more likely to be diagnosed late, meaning damage to the immune system has already begun. More than half (51%) of women, 55% of heterosexual men and 66% of those aged 65 and over diagnosed with HIV in 2020 were diagnosed at a late stage. This compares to just 29% of gay and bisexual men. This is likely driven by a belief that they are not at risk of HIV, which is often reinforced by healthcare professionals.\n Jackie, a heterosexual woman living with HIV, said: &#39;Not only did I never consider I could be living with HIV, neither did my doctor. I had no idea that women could get HIV until I tested positive. If you have ever been sexually active you should test regularly, it only takes once unprotected. Knowing your status is best for you and everyone else in your life.\n &#39;Recent developments mean HIV testing is free, quick and easy and HIV treatment is effective at controlling the virus and means I can&#39;t pass on the virus to anyone else. HIV can affect anyone, so everyone should test.&#39;\n Gay and bisexual men are still more impacted by HIV relative to population size, but targeted interventions for this group have led to one of the big success stories of the epidemic. New HIV diagnoses among gay and bisexual men began to fall in 2014 and that has continued every year since, with a fall of 70% between 2014 and 2020. The drop is most pronounced among white men and among those living in London.\n The fall in diagnoses among gay and bisexual men is a result of the growing availability of HIV prevention pill  PrEP and targeted promotion of routine HIV testing followed by the rapid initiation of HIV treatment for those diagnosed, meaning they are more quickly virally suppressed and cannot pass on HIV.\n We hope that, with greater awareness, increased testing and better access to PrEP for heterosexuals, this can be replicated across the wider population. Our message is that HIV can affect anyone and everyone needs to know how to protect themselves against HIV \u2013 regardless of sexuality, gender, ethnicity or age.\n Increased HIV testing is crucial, because an estimated 5% of people living with HIV in the UK (4,660) are unaware, which can adversely affect their health and means they may pass HIV on. The UK is aiming to end new HIV cases by 2030, which is why maximising every opportunity for HIV testing is necessary for achieving that aim.\n You can order a  free HIV test kit to do at home during National HIV Testing Week, or you can visit your local sexual health clinic.\n Health and Social Care Secretary Sajid Javid said: &#39;It is fantastic to see the diagnosis rate of HIV fall further among gay and bisexual men as a result of testing and the routine commissioning of PrEP, but we must make sure this trend is reflected in all groups.\n &#39;I am committed to our goal of no new HIV transmissions by 2030, but we cannot achieve it alone. We all have a part to play \u2013 HIV testing is free and confidential for everyone, and knowing your status will allow you to access appropriate prevention or treatment.&#39;\n Taku Mukiwa, Head of Health Programmes, said: &#39;For the first time in a decade there are more heterosexuals than gay and bisexual men being diagnosed with HIV. Heterosexuals also saw a far steeper drop in testing for HIV during COVID-19 lockdown and are far more likely to be diagnosed late.\n &#39;That\u2019s why we need to see more heterosexuals getting tested to avoid anyone living with undiagnosed HIV for a long time. This is important for their own health as well as for efforts to stop HIV being passed on as the vast majority of people get HIV from someone who is unaware they have it.&#39;\n Kate Folkard, Interim Deputy Director of the HIV Division at the UK Health Security Agency, said: \u201cWe must address inequalities and find creative ways to achieve a reduction in transmission across all populations. To end HIV transmission, we need to diagnose people early, start treatment promptly and support people to continue with their treatment. Detecting HIV early allows effective treatment to start sooner and people diagnosed can expect to have a normal life expectancy.\n &#39;In addition, people living with HIV who are treated and maintain an undetectable level of virus cannot pass HIV, known as Undetectable = Untransmittable (U=U). We encourage everyone to take up the offer of a free test, only by knowing your HIV status can you be empowered to take action. Through the HIV Action Plan, we will continue to work together with our partners across the health system to reach our goal of ending HIV transmission by 2030.&#39;\n    Copyright 2022 \u00a9 Terrence Higgins Trust is a registered charity in England and Wales (reg. no. 288527) Company reg. no. 1778149 and a registered charity in Scotland (reg. no. SC039986). Registered office: 437 &amp; 439 Caledonian Road, London, N7 9BG.", "posttime": "2022-02-13 18:23:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "hiv,\u827e\u6ecb\u75c5\u6bd2", "title": "\u5341\u5e74\u6765\uff0c\u5f02\u6027\u604bHIV\u8bca\u65ad\u9996\u6b21\u8d85\u8fc7\u7537\u540c\u6027\u604b", "title_en": "Heterosexual HIV diagnoses overtake those in gay men for first time in a decade", "transed": 1, "url": "https://www.tht.org.uk/news/heterosexual-hiv-diagnoses-overtake-those-gay-men-first-time-decade", "via": "", "real_tags": ["hiv", "\u827e\u6ecb\u75c5\u6bd2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072925, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Universal Viewer\u662f\u4e00\u4e2a\u793e\u533a\u5f00\u53d1\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5176\u4f7f\u547d\u662f\u5e2e\u52a9\u60a8\u4e0e\u4e16\u754c\u5171\u4eab\u60a8\u7684\u5185\u5bb9", "note_en": "The Universal Viewer is a community-developed open source project on a mission to help you share your content with the world", "posttime": "2022-02-13 18:22:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6587\u4ef6,universal,\u5171\u4eab", "title": "\u6587\u4ef6\u7ba1\u7406\u5668", "title_en": "Universal Viewer", "transed": 1, "url": "https://universalviewer.io/", "via": "", "real_tags": ["\u6587\u4ef6", "universal", "\u5171\u4eab"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072924, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u767d\u624b\u8d77\u5bb6\u5efa\u9020\u4e00\u5ea7\u65b0\u57ce\u65f6\uff0c\u5510&#39\uff1bt\u89c4\u5212\u9ad8\u5c42\u5efa\u7b51\u3001\u590d\u6742\u7684\u9ad8\u901f\u516c\u8def\u7acb\u4ea4\u548c\u5730\u4e0b\u516c\u5171\u4ea4\u901a\u7ebf\u8def\u3002\u4ece\u5438\u5f15\u4eba\u4eec\u6765\u5230\u4f60\u7684\u65b0\u57ce\u9547\u7684\u5efa\u7b51\u3001\u9053\u8def\u548c\u505c\u8f66\u573a\u5f00\u59cb\u3002\n\u82b1\u8d392-3\u500d\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u6765\u62c6\u9664\u548c\u91cd\u5efa\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u652f\u6301\u57ce\u9547\u7684\u53d1\u5c55\n\u82b120\u500d\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u6765\u5efa\u8bbe\u4e00\u5ea7\u80fd\u591f\u652f\u6301\u6570\u5343\u4eba\u7e41\u8363\u793e\u533a\u7684\u57ce\u5e02\uff0c\u4f46\u6ca1\u6709\u4eba\u5230\u573a\n\u5510&#39\uff1b\u6211\u4e0d\u5728\u4e4e\u5b83\u8d62\u4e86&#39\uff1b\u5982\u679c\u4f60\u8fbe\u5230Facebook\u7684\u6d3b\u52a8\u6c34\u5e73\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5de5\u4f5c\u3002\u8fd9\u79cd\u7a0b\u5ea6\u7684\u6d3b\u52a8\u51e0\u4e4e\u4e0d\u4f1a\u5728\u4e00\u591c\u4e4b\u95f4\u51fa\u73b0\u3002\n\u5b83\u8ba9\u4f60\u53ef\u4ee5\u82b1\u66f4\u591a\u7684\u65f6\u95f4\uff08\u5929\u771f\u5730\uff09\u5efa\u7acb\u66f4\u591a\u7684\u65b0\u60f3\u6cd5\u3002\u4f60\u5efa\u7acb\u7684\u8d8a\u591a\uff0c\u5176\u4e2d\u4e00\u4e2a\u60f3\u6cd5\u5c31\u8d8a\u6709\u53ef\u80fd\u83b7\u5f97\u6210\u529f\u3002\n\u6240\u4ee5\u628a\u5b83\u653e\u5728\u5de8\u77f3\u4e0a\u3002\u4f7f\u7528\u6613\u4e8e\u5b9e\u73b0\u7684\u7b97\u6cd5\u3002\u907f\u514d\u590d\u6742\u7684\u5de5\u4f5c\u6d41\uff0c\u5982\u6d88\u606f\u961f\u5217\u548c\u670d\u52a1\u603b\u7ebf\u3002\n\u67e5\u770b\u6d3b\u52a8\u65e5\u5fd7\u3002\u8861\u91cf\u7ee9\u6548\u3002\u53ea\u6709\u5f53\u4f60&#39\uff1b\u4fee\u590dbug\u548c\u6dfb\u52a0\u529f\u80fd\u7684\u65f6\u95f4\u6bd4\u4fdd\u5b58\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u95f4\u8981\u5c11#39\uff1b\u8ba9it\u90e8\u95e8\u80fd\u591f\u5b8c\u6210\u8ba1\u7b97\u6210\u672c\u9ad8\u6602\u7684\u6d41\u7a0b\uff0c\u548c/\u6216\u5f53\u8fd9\u4e9b\u6d41\u7a0b\u6210\u4e3a\u4f01\u4e1a\u6210\u529f\u7684\u5173\u952e\u8def\u5f84\u65f6\uff0c\u5373&#39\uff1b\u5f53\u4f60\u6295\u5165\u65f6\u95f4\u548c\u91d1\u94b1\u6765\u589e\u52a0\u590d\u6742\u6027\u548c\u652f\u6301\u4e0d\u65ad\u589e\u957f\u7684\u9700\u6c42\u65f6\u3002", "note_en": "When building a new town from scratch, don&#39;t plan for hi-rise buildings, complex freeway interchanges and underground mass transit lines. Start with the buildings and roads and parking lots that will attract people to your new town.\n  Spending 2x-3x the initial investment of time and money to demolish and rebuild infrastructure to support the town as it grows\n Spending 20x the minimal investment of time and money to build a city that could support a thriving community of thousands, but nobody shows up\n   Don&#39;t care that it won&#39;t work if you achieve Facebook-activity-level scale. That level of activity almost never shows up overnight.\n   It freed you up to spend more time building more new ideas (na\u00efvely). The more you build, the more likely one of those ideas is to find success.\n So put it in the monolith. Use algorithms that are easy to implement. Avoid complex workflows like message queues service busses.\n Watch activity logs. Measure performance. When,   and only when you&#39;re spending less time fixing bugs and adding features than you are on holding the application&#39;s hand so that it can finish the computationally-expensive processes, and/or when those processes become critical-path to the success of your business, that&#39;s when you invest time and money in them to add complexity and support the increased demand.", "posttime": "2022-02-13 18:21:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u5929\u771f,design,\u65f6\u95f4", "title": "\u5929\u771f\u5730\u8bbe\u8ba1", "title_en": "Design Naively", "transed": 1, "url": "https://adamtuttle.codes/blog/2022/design-naively/", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u5929\u771f", "design", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072923, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566\uff0c2\u670811\u65e5\uff08\u8def\u900f\u793e\uff09-\u51fa\u552e\u6770\u514b\u00b7\u591a\u5c14\u897f\uff08Jack Dorsey&#39\uff09NFT\u7684\u5e73\u53f0\uff1b\u8be5\u516c\u53f8\u521b\u59cb\u4eba\u79f0\uff0c\u8be5\u516c\u53f8\u7b2c\u4e00\u6761\u4ef7\u503c290\u4e07\u7f8e\u5143\u7684\u63a8\u6587\u6682\u505c\u4e86\u5927\u591a\u6570\u4ea4\u6613\uff0c\u56e0\u4e3a\u4eba\u4eec\u51fa\u552e\u7684\u5185\u5bb9\u4e2d\u5305\u542b\u4e0d\u5c5e\u4e8e\u81ea\u5df1\u7684\u4ee3\u5e01\uff0c\u79f0\u4e4b\u4e3aa&#34\uff1b\u57fa\u672c\u95ee\u9898&#34\uff1b\u5728\u5feb\u901f\u589e\u957f\u7684\u6570\u5b57\u8d44\u4ea7\u5e02\u573a\u3002\nNFTS\u7684\u9500\u552e\uff0c\u6216\u4e0d\u53ef\u66ff\u4ee3\u7684\u4ee3\u5e01\uff0c\u57282021\u98d9\u5347\u5230250\u4ebf\u7f8e\u5143\u5de6\u53f3\uff0c\u8fd9\u8ba9\u8bb8\u591a\u4eba\u611f\u5230\u56f0\u60d1\uff0c\u4e3a\u4ec0\u4e48\u8981\u82b1\u8fd9\u4e48\u591a\u94b1\u5728\u90a3\u4e9b\u6ca1\u6709\u5b9e\u4f53\u5b58\u5728\u7684\u9879\u76ee\u4e0a\uff0c\u54ea\u4e9b\u4eba\u53ef\u4ee5\u514d\u8d39\u5728\u7ebf\u89c2\u770b\u3002\nNFT\u662f\u8bb0\u5f55\u6570\u5b57\u6587\u4ef6\uff08\u5982\u56fe\u50cf\u3001\u89c6\u9891\u6216\u6587\u672c\uff09\u6240\u6709\u6743\u7684\u52a0\u5bc6\u8d44\u4ea7\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u521b\u9020\uff0c\u6216&#34\uff1b\u9020\u5e01\u5382\uff1b\uff0cNFT\uff0c\u5e76\u4e14\u4ee4\u724c\u7684\u6240\u6709\u6743\u901a\u5e38\u4e0d\u4f1a\u6388\u4e88\u57fa\u7840\u9879\u7684\u6240\u6709\u6743\u3002\u9605\u8bfb\u66f4\u591a\n\u603b\u90e8\u4f4d\u4e8e\u7f8e\u56fd\u7684Cent\u5728\u51fa\u552e\u524dTwitter\u9996\u5e2d\u6267\u884c\u5b9839\uff1bs\u53bb\u5e743\u6708\u4ee5NFT\u7684\u8eab\u4efd\u53d1\u63a8\u7279\u3002\u4f46\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba\u5361\u6885\u4f26\u00b7\u8d6b\u8d3e\u9f50\uff08Cameron Hejazi\uff09\u544a\u8bc9\u8def\u900f\u793e\uff0c\u622a\u81f32\u67086\u65e5\uff0c\u8be5\u516c\u53f8\u5df2\u505c\u6b62\u5141\u8bb8\u4e70\u5356\u3002\n&#34;\u90a3\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u7cfb\u5217\u57fa\u672c\u4e0a\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u6d3b\u52a8&#39\uff1b\u4e0d\u53ef\u80fd\u53d1\u751f\u2014\u2014\u6bd4\u5982\uff0c\u6cd5\u5f8b\u4e0a&#34\uff1b\u8d6b\u8d3e\u9f50\u8bf4\u3002\n\u800c\u5206\u5e02\u573a&#34\uff1b\u8d1d\u5854\u3002\u520634\u5c81\uff1b\u6682\u505c\u4e86NFT\u9500\u552e\uff0c\u8be5\u90e8\u5206\u4e13\u95e8\u7528\u4e8e\u9500\u552e\u63a8\u7279\u7684NFT\uff0c\u79f0\u4e3a&#34\uff1b\u8d35\u91cd\u7269\u54c1\uff1b\uff0c\u4ecd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002\nHejazi\u5f3a\u8c03\u4e86\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a\u51fa\u552e\u672a\u7ecf\u6388\u6743\u7684\u5176\u4ed6NFT\u526f\u672c\u7684\u4eba\uff0c\u5236\u9020\u4e0d\u5c5e\u4e8e\u4ed6\u4eec\u7684\u5185\u5bb9\u7684NFT\u7684\u4eba\uff0c\u4ee5\u53ca\u51fa\u552e\u7c7b\u4f3c\u8bc1\u5238\u7684NFT\u96c6\u7684\u4eba\u3002\n\u4ed6\u8bf4\u8fd9\u4e9b\u95ee\u9898\u662f&#34\uff1b\u7316\u7357&#34\uff1b\uff0c\u4e0e\u7528\u6237&#34\uff1b\u9020\u5047\u548c\u9020\u5047\u4ee5\u53ca\u9020\u5047\u6570\u5b57\u8d44\u4ea7&#34\uff1b\u3002\n&#34;\u5b83\u4e00\u76f4\u5728\u53d1\u751f\u3002\u6211\u4eec\u4f1a\u7981\u6b62\u8fdd\u89c4\u8d26\u6237\uff0c\u4f46\u5c31\u50cf\u6211\u4eec&#39\uff1b\u6211\u4eec\u5728\u73a9\u6253\u9f39\u9f20\u7684\u6e38\u620f\u3002\u3002\u3002\u6bcf\u6b21\u6211\u4eec\u7981\u6b62\u4e00\u4e2a\uff0c\u5c31\u4f1a\u51fa\u73b0\u53e6\u4e00\u4e2a\uff0c\u6216\u8005\u8fd8\u4f1a\u51fa\u73b0\u4e09\u4e2a&#34;\n\u968f\u7740\u5404\u5927\u54c1\u724c\u7eb7\u7eb7\u52a0\u5165\u5230\u6240\u8c13\u7684&#34\uff1bmetaverse&#34\uff1b\uff0c\u6216\u8005Web3\u3002\u53ef\u53e3\u53ef\u4e50\uff08Coca-Cola\uff09\u548c\u5962\u4f88\u54c1\u724c\u53e4\u9a70\uff08Gucci\uff09\u90fd\u662f\u9500\u552eNFT\u7684\u516c\u53f8\u4e4b\u4e00\uff0c\u800cYouTube\u5219\u8868\u793a\u5c06\u63a2\u7d22NFT\u529f\u80fd\u3002\n15\u4e07\u7528\u6237\u548c\u6536\u5165#34\uff1b\u4ee5\u767e\u4e07\u8ba1&#34\uff1b\uff0cHejazi\u8868\u793a\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u8f83\u5c0f\u7684NFT\u5e73\u53f0\uff0c\u6574\u4e2a\u884c\u4e1a\u90fd\u5b58\u5728\u5047\u5192\u548c\u975e\u6cd5\u5185\u5bb9\u7684\u95ee\u9898\u3002\n\u6700\u5927\u7684NFT\u5e02\u573aOpenSea\u5728\u5176\u6700\u65b0\u4e00\u8f6e\u98ce\u9669\u878d\u8d44\u540e\u4f30\u503c\u4e3a133\u4ebf\u7f8e\u5143\uff0c\u4e0a\u4e2a\u6708\u8868\u793a\uff0c\u5728\u5176\u5e73\u53f0\u4e0a\u514d\u8d39\u5236\u4f5c\u7684NFT\u4e2d\uff0c\u8d85\u8fc780%\u662f&#34\uff1b\u527d\u7a83\u4f5c\u54c1\u3001\u5047\u85cf\u54c1\u548c\u5783\u573e\u90ae\u4ef6&#34\uff1b\u3002\nOpenSea\u5728\u63a8\u7279\u5e16\u5b50\u4e2d\u8868\u793a\uff0c\u8be5\u516c\u53f8\u66fe\u8bd5\u56fe\u9650\u5236\u7528\u6237\u53ef\u4ee5\u514d\u8d39\u521b\u5efa\u7684NFT\u6570\u91cf\uff0c\u4f46\u5728\u7528\u6237\u7684\u5f3a\u70c8\u53cd\u5bf9\u4e0b\uff0c\u8be5\u516c\u53f8\u63a8\u7ffb\u4e86\u8fd9\u4e00\u51b3\u5b9a\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u5b83\u662f&#34\uff1b\u901a\u8fc7\u4e00\u7cfb\u5217\u89e3\u51b3\u65b9\u6848&#34\uff1b\u963b\u6b62&#34\uff1b\u574f\u6f14\u5458&#34\uff1b\u540c\u65f6\u652f\u6301\u521b\u4f5c\u8005\u3002\n&#34;\u4f7f\u7528\u527d\u7a83\u5185\u5bb9\u9500\u552eNFT\u662f\u8fdd\u53cd\u6211\u4eec\u7684\u653f\u7b56\u7684\uff1b\u4e00\u4f4dOpenSea\u53d1\u8a00\u4eba\u8bf4\u3002\n&#34;\u6211\u4eec\u65e5\u4ee5\u7ee7\u591c\u5730\u5de5\u4f5c\uff0c\u63a8\u51fa\u4ea7\u54c1\uff0c\u589e\u52a0\u529f\u80fd\uff0c\u6539\u8fdb\u6d41\u7a0b\uff0c\u4ee5\u6ee1\u8db3\u5f53\u524d\u7684\u9700\u6c42&#34;\n\u5bf9\u8bb8\u591aNFT\u7231\u597d\u8005\u6765\u8bf4\uff0c\u533a\u5757\u94fe\u6280\u672f\u7684\u5206\u6563\u6027\u5f88\u6709\u5438\u5f15\u529b\uff0c\u5141\u8bb8\u7528\u6237\u5728\u6ca1\u6709\u4e2d\u592e\u673a\u6784\u63a7\u5236\u6d3b\u52a8\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u548c\u4ea4\u6613\u6570\u5b57\u8d44\u4ea7\u3002\n\u4f46Hejazi\u8868\u793a\uff0c\u4ed6\u7684\u516c\u53f8\u70ed\u8877\u4e8e\u4fdd\u62a4\u5185\u5bb9\u521b\u4f5c\u8005\uff0c\u5728\u63a2\u7d22\u5206\u6563\u89e3\u51b3\u65b9\u6848\u4e4b\u524d\uff0c\u53ef\u80fd\u4f1a\u5f15\u5165\u96c6\u4e2d\u63a7\u5236\u4f5c\u4e3a\u77ed\u671f\u63aa\u65bd\uff0c\u4ee5\u91cd\u65b0\u5f00\u653e\u5e02\u573a\u3002\n\u5728\u591a\u897fNFT\u9500\u552e\u4e4b\u540e\uff0c\u68ee\u7279\u5f00\u59cb\u4e86\u89e3NFT\u5e02\u573a\u7684\u60c5\u51b5\u3002", "note_en": "LONDON, Feb 11 (Reuters) - The platform which sold an NFT of Jack Dorsey&#39;s first tweet for $2.9 million has halted most transactions because people were selling tokens of content that did not belong to them, its founder said, calling this a &#34;fundamental problem&#34; in the fast-growing digital assets market.\n Sales of NFTs, or non-fungible tokens, soared to around  $25 billion in 2021, leaving many baffled as to why so much money is being spent on items that do not physically exist and which anyone can view online for free.\n NFTs are crypto assets that record the ownership of a digital file such as an image, video or text. Anyone can create, or &#34;mint&#34;, an NFT, and ownership of the token does not usually confer ownership of the underlying item.   read more\n   The U.S.-based Cent executed one of the first known million-dollar NFT sales when it sold the former  Twitter CEO&#39;s tweet as an NFT last March. But as of Feb. 6, it has stopped allowing buying and selling, CEO and co-founder Cameron Hejazi told Reuters.\n &#34;There&#39;s a spectrum of activity that is happening that basically shouldn&#39;t be happening - like, legally&#34; Hejazi said.\n While the Cent marketplace &#34;beta.cent.co&#34; has paused NFT sales, the part specifically for selling NFTs of tweets, which is called &#34;Valuables&#34;, is still active.\n Hejazi highlighted three main problems: people selling unauthorised copies of other NFTs, people making NFTs of content which does not belong to them, and people selling sets of NFTs which resemble a security.\n He said these issues were &#34;rampant&#34;, with users &#34;minting and minting and minting counterfeit digital assets&#34;.\n &#34;It kept happening. We would ban offending accounts but it was like we&#39;re playing a game of whack-a-mole... Every time we would ban one, another one would come up, or three more would come up.&#34;\n  Such problems may come into greater focus as major brands join the rush towards the so-called &#34;metaverse&#34;, or  Web3. Coca-Cola  (KO.N) and luxury brand Gucci are among companies to have sold NFTs, while  YouTube said it will explore NFT features.\n While Cent, with 150,000 users and revenue &#34;in the millions&#34;, is a relatively small NFT platform, Hejazi said the issue of fake and illegal content exists across the industry.\n  The biggest NFT marketplace, OpenSea, valued at $13.3 billion after its latest round of venture funding,  said last month more than 80% of the NFTs minted for free on its platform were &#34;plagiarized works, fake collections and spam&#34;.\n OpenSea tried limiting the number of NFTs a user could mint for free, but then reversed this decision following a backlash from users, the company said in a Twitter thread, adding that it was &#34;working through a number of solutions&#34; to deter &#34;bad actors&#34; while supporting creators.\n &#34;It is against our policy to sell NFTs using plagiarized content,&#34; an OpenSea spokesperson said.\n &#34;We are working around the clock to ship products, add features, and refine our processes to meet the moment.&#34;\n To many NFT-enthusiasts, the decentralised nature of  blockchain technology is appealing, allowing users to create and trade digital assets without a central authority controlling the activity.\n But Hejazi said his company was keen on protecting content-creators, and may introduce centralised controls as a short-term measure in order to re-open the marketplace, before exploring decentralised solutions.\n It was after the Dorsey NFT sale that Cent started to get a sense of what was going on in NFT markets.", "posttime": "2022-02-13 18:17:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u527d\u7a83,marketplace,nft", "title": "NFT\u5e02\u573a\u5173\u95ed\uff0c\u7406\u7531\u662f\u201c\u7316\u7357\u201d\u7684\u5047\u8d27\u3001\u527d\u7a83\u95ee\u9898", "title_en": "NFT marketplace shuts, citing 'rampant' fakes, plagiarism problem", "transed": 1, "url": "https://www.reuters.com/business/finance/nft-marketplace-shuts-citing-rampant-fakes-plagiarism-problem-2022-02-11/", "via": "", "real_tags": ["\u527d\u7a83", "nft"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072922, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u60f3\u771f\u6b63\u64c5\u957f\u67d0\u4ef6\u4e8b\uff0c\u4f60\u5c31\u8981\u5c3d\u53ef\u80fd\u9891\u7e41\u5730\u505a\uff0c\u5c3d\u53ef\u80fd\u957f\u65f6\u95f4\u5730\u505a\uff0c\u4e00\u70b9\u4e00\u70b9\u5730\u53d6\u5f97\u8fdb\u5c55\uff0c\u76f4\u5230\u8fbe\u5230\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u3002\u8bad\u7ec3\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u5e76\u6ca1\u6709\u592a\u5927\u7684\u4e0d\u540c\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u79d1\u6280\u5de8\u5934\u7d22\u5c3c\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u90e8\u95e8\u7684\u4e00\u4e2a\u56e2\u961f\u5728Gran Turismo\u6559\u5176\u4ee3\u7406\u4ebaSophy\u6210\u4e3a\u4e16\u754c\u4e0a\u901f\u5ea6\u6700\u5feb\u7684\u4eba\u7684\u65b9\u5f0f\u3002\u548c\u4eba\u7c7b\u4e00\u6837\uff0c\u7d22\u83f2\u5728GT\u7684\u8868\u73b0\u8d8a\u597d\uff0c\u5b83\u5c31\u8d8a\u662f\u4e00\u4e2a\u6df7\u86cb\u3002\nSophy\u662fPlayStation\u4eba\u7d22\u5c3c\uff08Sony\uff09\u548cGran Turismo\u5f00\u53d1\u8005Polyphony Digital\u7684\u5408\u4f5c\u9879\u76ee\u3002\uff08\u201c\u90a3\u4e48phy\u201d-\u660e\u767d\u4e86\u5417\uff1f\uff09Sophy\u771f\u7684\u5f88\u5feb\uff0c\u4f46\u4e0d\u50cf\u9a6c\u91cc\u5965\u5361\u4e01\u8f66\u4e2d\u7684\u201cAI\u201d\uff0c\u5b83\u4e0d\u5feb\u662f\u56e0\u4e3a\u5b83\u4f5c\u5f0a\u3002\u5b83\u7684\u6e38\u620f\u89c4\u5219\u4e0e\u4eba\u7c7b\u73a9\u5bb6\u76f8\u540c\uff0c\u4f7f\u7528\u7684\u5de5\u5177\u4e5f\u76f8\u540c\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u901a\u8fc7\u5728\u7d22\u5c3c\u4e91\u8ba1\u7b97\u7684PS4\u7f51\u7edc\u4e0a\u8fd0\u884c\u6570\u5343\u6b21\u800c\u53d8\u5f97\u4f18\u79c0\uff0c\u540c\u65f6\u6839\u636e\u5176\u884c\u4e3a\u7684\u7ed3\u679c\u5f97\u5230\u79ef\u6781\u6216\u6d88\u6781\u7684\u5f3a\u5316\u3002\nSophy\u7684\u6280\u80fd\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u5c55\uff0c\u6b63\u5982\u4f60\u5728\u4e0b\u9762\u5d4c\u5165\u7684\u89c6\u9891\u5236\u4f5c\u4e2d\u6240\u770b\u5230\u7684\u90a3\u6837\u3002\u6211\u5411\u4f60\u4fdd\u8bc1\uff0c\u8fd9\u771f\u7684\u5f88\u6709\u8da3\u3002\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\uff0c\u6bcf\u5f53\u6709\u4eba\u5728\u8033\u8fb9\u63d0\u5230\u201c\u4eba\u5de5\u667a\u80fd\u201d\u6216\u201c\u673a\u5668\u5b66\u4e60\u201d\u8fd9\u4e2a\u8bcd\u65f6\uff0c\u4f60\u7684\u773c\u775b\u5c31\u4f1a\u53d8\u5f97\u5446\u6ede\uff0c\u4f60\u4f1a\u611f\u5230\u5934\u6655\u3002\u4f46\u7d22\u83f2\u7684\u6848\u4f8b\u771f\u7684\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u662f\u5982\u4f55\u53d1\u5c55\u5230\u4eca\u5929\u7684\u3002\n\u4f8b\u5982\uff0cPolyphony Digital\u7684\u4e00\u4f4d\u5de5\u7a0b\u5e08\u8bf4\uff0c\u7d22\u5c3c\u4eba\u5de5\u667a\u80fd\u56e2\u961f\u7b2c\u4e00\u6b21\u628aSophy\u5e26\u5230\u5de5\u4f5c\u5ba4\u4e0e\u771f\u4eba\u6bd4\u8d5b\u65f6\uff0c\u867d\u7136\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u786e\u5b9e\u5f88\u6df7\u4e71\u3002\u5b83\u4e0d\u80fd\u76f4\u7ebf\u884c\u9a76\u3002\n\u7136\u540e\uff0c\u5b83\u53c8\u56de\u5230\u4e86\u7ed8\u56fe\u677f\u4e0a\uff0c\u53d1\u5c55\u6838\u5fc3\u7ade\u4e89\u529b\uff0c\u76f4\u5230\u5b83\u6bd4\u4e16\u754c\u9876\u7ea7FIA Gran Turismo\u9526\u6807\u8d5b\u9009\u624b\u66f4\u5feb\uff0c\u5c3d\u7ba1\u53ea\u662f\u5728\u70ed\u8eab\u5708\u3002\u7814\u7a76\u4eba\u5458\u5c06Sophy\u5e26\u56de\u590d\u8c03\uff0c\u5e76\u8ba9\u4e00\u4e2a\u7531\u56db\u8f86Sophy\u63a7\u5236\u7684\u6c7d\u8f66\u7ec4\u6210\u7684\u56e2\u961f\u4e0e\u56db\u540d\u4e13\u4e1a\u7684\u4eba\u7c7b\u9a7e\u9a76\u5458\u8fdb\u884c\u5bf9\u51b3\u3002\u7d22\u83f2\u961f\u5728\u4e09\u573a\u6bd4\u8d5b\u4e2d\u7684\u4e24\u573a\u6bd4\u8d5b\u4e2d\u83b7\u5f97\u7b2c\u4e00\u540d\uff0c\u4f46\u603b\u4f53\u5f97\u5206\u4f4e\u4e8e\u8eab\u4f53\u6e29\u6696\u7684\u961f\u4f0d\uff0c\u56e0\u6b64\u653e\u5f03\u4e86\u6bd4\u8d5b\u3002\n\u95ee\u9898\u662f\uff0c\u7d22\u83f2\u5b66\u4f1a\u4e86\u5982\u4f55\u5feb\u901f\u9a7e\u9a76\uff0c\u4f46\u5b83\u4e0d\u77e5\u9053\u5982\u4f55\u5feb\u901f\u9a7e\u9a76\u800c\u4e0d\u50cf\u4e2a\u5341\u8db3\u7684\u50bb\u74dc\u3002\u7d22\u5c3c\u4eba\u5de5\u667a\u80fd\uff08Sony AI\uff09\u8463\u4e8b\u517c\u9879\u76ee\u8d1f\u8d23\u4eba\u5f7c\u5f97\u00b7\u6c83\u5c14\u66fc\uff08Peter Wurman\uff09\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\u6211\u4eec\u90fd\u4f4e\u4f30\u4e86\u6b63\u786e\u5bf9\u5f85\u4f53\u80b2\u9053\u5fb7\u7684\u96be\u5ea6\uff0c[\u6559Sophy]\u5728\u9762\u5bf9\u7ade\u4e89\u5bf9\u624b\u65f6\u4e0d\u8981\u8fc7\u4e8e\u5484\u903c\u4eba\u6216\u8fc7\u4e8e\u80c6\u5c0f\u3002\u201d\u5207\u6362\u5230Sophy\u5728\u9f99\u5f84\u6d77\u6ee8\u7684\u7b2c\u4e00\u4e2a\u5f2f\u9053\u4e0a\uff0c\u4e00\u5bf9\u5bf9\u624b\u5239\u8f66\u592a\u8fdf\uff0c\u5728\u8d5b\u9053\u4e0a\u7528\u53cc\u8f6e\u6ed1\u884c\u7684\u7247\u6bb5\u3002\n\u4e00\u65e6\u7d22\u83f2\u4e0d\u518d\u505a\u90a3\u4e9b\u8ba9\u5b83\u770b\u8d77\u6765\u5f88\u7cdf\u7cd5\u7684\u4e8b\u60c5\uff0c\u5b83\u5728\u4ea4\u901a\u4e2d\u7684\u901f\u5ea6\u51e0\u4e4e\u548c\u5b83\u72ec\u81ea\u4f7f\u7528\u6ca5\u9752\u65f6\u4e00\u6837\u5feb\u3002\u4ece\u8fd9\u79cd\u65b0\u53d1\u73b0\u7684\u8d85\u4eba\u76f4\u89c9\u4e2d\uff0c\u5b83\u6240\u4f7f\u7528\u7684\u4e00\u4e9b\u975e\u5e38\u89c4\u6280\u672f\u53d8\u5f97\u663e\u800c\u6613\u89c1\u3002Gran Turismo\u5236\u4f5c\u4eba\u517c\u590d\u8c03\u6570\u5b57\u603b\u76d1\u5c71\u5185\u548c\u5f18\uff08Kazunori Yamauchi\uff09\u4ecb\u7ecd\u4e86Sophy\u5728GTPlanet\u4e0a\u72ec\u7279\u9a7e\u9a76\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\u201c\u6211\u662f\u4e00\u540d\u8d5b\u8f66\u624b\uff0c\u5b66\u4f1a\u4e86\u5982\u4f55\u5feb\u901f\u9a7e\u9a76\u7684\u6280\u5de7\uff0c\u6bd4\u5982\u6162\u8fdb\u5feb\u51fa\uff0c\u201dGran Turismo\u7684\u521b\u59cb\u4eba\u5c71\u5185\u548c\u5f18\uff08Kazunori Yamauchi\uff09\u8bf4\u3002\u201cGran Turismo Sophy\u4e0d\u662f\u8fd9\u6837\u5b66\u4e60\u7684\u3002\u6211\u8ba4\u4e3aSophy\u8fdb\u5165\u4e16\u754c\u540e\uff0c\u5173\u4e8e\u9a7e\u9a76\u7684\u6559\u79d1\u4e66\u5c06\u4e0d\u5f97\u4e0d\u6539\u53d8\u3002\u4f8b\u5982\uff0c\u5f53Sophy\u8fdb\u5165\u5f2f\u9053\u65f6\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f1a\u8f6c\u5f2f\u5e76\u5239\u8f66\u3002\u901a\u5e38\uff0c\u5f53\u4f60\u8fdb\u5165\u5f2f\u9053\u65f6\uff0c\u8d1f\u8f7d\u53ea\u5728\u4e24\u4e2a\u524d\u8f6e\u80ce\u4e0a\uff0c\u4f46Sophy\u7684\u8d1f\u8f7d\u5728\u4e09\u4e2a\u8f6e\u80ce\u4e0a\uff1a\u4e24\u4e2a\u5728\u524d\u8f6e\u80ce\u4e0ant\u548c\u4e00\u4e2a\u5728\u540e\u9762\u3002\u5b83\u5141\u8bb8\u6c7d\u8f66\u5728\u8f6c\u5f2f\u65f6\u53d1\u751f\u65ad\u88c2\uff0c\u800c\u6309\u7167\u60ef\u4f8b\uff0c\u4eba\u7c7b\u662f\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u6700\u7ec8\u4f1a\u53d1\u751f\u7684\u662f\uff0c\u5b83\u6b63\u5728\u5feb\u901f\u8fdb\u5165\uff0c\u5feb\u901f\u79bb\u5f00\u3002\"\n\u6211\u8ba4\u4e3a\uff0c\u5728Gran Turismo\u4e2d\uff0cSophy\u7684\u4e00\u4e9b\u6280\u5de7\u53ef\u80fd\u4e0d\u4f1a\u5728\u4e00\u8f86\u771f\u6b63\u7684\u6c7d\u8f66\u4e0a\u5f97\u5230\u5f88\u597d\u7684\u6548\u679c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cSophy\u5bf9\u8fd9\u9879\u8fd0\u52a8\u7684\u7406\u89e3\u548c\u7406\u5ff5\u4e0e\u4e16\u754c\u4e0a\u6700\u597d\u7684\u7403\u5458\u4e0d\u540c\uff0c\u56e0\u6b64\uff0c\u4ed6\u8bb0\u5f55\u7684\u5708\u6570\u6bd4\u4ed6\u4eec\u5feb\u534a\u79d2\u52301.5\u79d2\u3002\u4f8b\u5982\uff0c\u5b83\u5728\u9f99\u5f84\u81ed\u540d\u662d\u8457\u7684\u201c\u6b7b\u4ea1\u5947\u5361\u201d\u4e0a\u7a7f\u9488\u7684\u65b9\u5f0f\uff0c\u9700\u8981\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7cbe\u786e\u6027\u548c\u52c7\u6c14\u2014\u2014\u9664\u4e86\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8f66\u624b\u4e4b\u5916\uff0c\u5176\u4ed6\u8f66\u624b\u90fd\u80fd\u505a\u5230\u2014\u2014\u5373\u4f7f\u662f\u4ed6\u4eec\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u59cb\u7ec8\u5982\u4e00\u5730\u6210\u529f\u3002\n\u636e\u63a8\u6d4b\uff0c\u590d\u8c03\u6570\u5b57\u5c06\u5728\u53d1\u5e03\u540e\u7684\u66f4\u65b0\u4e2d\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06Sophy\u5e26\u5230Gran Turismo 7\u4e0a\u2014\u2014\u4e0d\u4ec5\u4f5c\u4e3a\u7ade\u4e89\u5bf9\u624b\uff0c\u8fd8\u53ef\u80fd\u4f5c\u4e3a\u4e00\u540d\u9a7e\u9a76\u6559\u7ec3\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u8ba4\u4e3aGT7\u53ef\u4ee5\u4f7f\u7528\u5177\u6709\u5feb\u901f\u53cc\u624b\u548c\u4f53\u9762\u8d5b\u8f66\u7684\u4eba\u5de5\u667a\u80fd\uff0c\u56e0\u4e3a\u8fd9\u662fGT\u7684\u8ba1\u7b97\u673a\u63a7\u5236\u5bf9\u624b\u4ece\u672a\u62e5\u6709\u8fc7\u7684\u4e1c\u897f\u3002\u6211\u4f1a\u5f88\u9ad8\u5174\u6709\u4e00\u4e2a\u6de1\u5316\u7248\uff0c\u53ea\u662f\u666e\u901a\u7684\u5feb\u901f\uff1b\u5c06galaxy brain fast\u7248\u672c\u7559\u7ed9\u4e13\u4e1a\u4eba\u58eb\u3002", "note_en": "If you want to be really good at something, you pretty much do it as frequently as possible for as long as possible, making headway little by little until you achieve the desired result. Training an artificial intelligence model isn\u2019t terribly different, and that\u2019s basically how a team at Sony AI \u2014 the tech giant\u2019s research division \u2014 taught its agent   Sophy to be the fastest in the world at  Gran Turismo. Also much like humans, the better Sophy got at  GT, the more it was kind of a jerk about it.\n  Sophy is a collaboration between Sony \u2014 the PlayStation people \u2014 and Polyphony Digital, the developers of  Gran Turismo. ( \u201cSo-phy\u201d \u2014 get it?) Sophy is really fast, but unlike, say, the \u201cAI\u201d in  Mario Kart, it\u2019s not fast because it cheats. It plays by the same rules as human players, with the same tools. The difference is it learned to be good by running thousands of times on a network of PS4s in Sony\u2019s cloud, while being reinforced positively or negatively depending on the outcomes of its behaviors.\n Sophy\u2019s skill developed over time, as you can see in the fascinating making-of video embedded below. And I promise you, it really is interesting. If you\u2019re anything like me, your eyes glaze over and you feel a head cold coming on whenever somebody mentions the words \u201cAI\u201d or \u201cmachine learning\u201d within earshot, but Sophy\u2019s case is really intriguing because of  how it got  where it got.\n  For example, one engineer at Polyphony Digital says that when the Sony AI team first brought Sophy to the studio to race against real people, it was occasionally quick but really messy. It couldn\u2019t drive in a straight line.\n      Then it went back to the drawing board to develop core competencies, until it became faster than the world\u2019s top   FIA Gran Turismo Championship players, albeit  only on hot laps. The researchers brought Sophy back to Polyphony and pitted a team of four Sophy-controlled cars against four expert human drivers. The Sophy team took first place in two of the three, but totaled fewer points overall than the warm-bodied contingent and dropped the set.\n The trouble is that Sophy learned how to be fast, but it didn\u2019t know how to be fast without driving like a complete jackass. \u201cI think we all underestimated how hard it would be to get the sportsmanship side of it right,\u201d Peter Wurman, director and project lead at Sony AI said, \u201cand [teach Sophy] to do that without being overly aggressive or overly timid in the face of competitors.\u201d Cut to a clip of Sophy punting a pair of rivals braking  way too late into the first chicane at Dragon Trail Seaside.\n   Once Sophy   stopped doing things that made it look bad, it was almost as rapid in traffic as when it had the asphalt all to itself. Out of this newfound superhuman intuition, a few unconventional techniques it was employing became apparent.  Gran Turismo producer and Polyphony Digital chief Kazunori Yamauchi shed light on one example of Sophy\u2019s unique driving with   GTPlanet:\n \u201cI am a racer and learned techniques on how to drive fast, like slow-in-fast-out,\u201d Gran Turismo creator Kazunori Yamauchi said. \u201cGran Turismo Sophy does not learn that way. I think that after Sophy launches into the world, the textbooks about driving will have to be changed. For example, when Sophy goes into a curve it actually turns and brakes. Usually, when you go into a curve, the load is only on the two front tires, but Sophy has the load on three tires: two in the front and one in the rear as well. It allows the car to break as it is turning and is not something human beings would be able to do, conventionally. What ultimately happens is that it is driving fast-in, fast-out.\u201d\n  I\u2019d hedge that some of Sophy\u2019s tricks that work in  Gran Turismo likely wouldn\u2019t pan out as well in an actual car. Nevertheless, Sophy is playing the game with a deeper understanding and a different philosophy than the best players in the world, and recording laps anywhere from half a second to 1.5 seconds faster than them as a result of it. The way it threads the needle at Dragon Trail\u2019s infamous \u201cdeath chicane,\u201d for example, requires a level of precision and bravery all but the best drivers in the world could muster \u2014 and even they likely wouldn\u2019t pull it off as consistently.\n   Supposedly Polyphony Digital will bring Sophy to    Gran Turismo 7 in some fashion in a post-launch update \u2014 not just as a competitor but also, potentially, a driving coach. Personally, I think  GT7 could use an AI with fast hands and decent racecraft, because that\u2019s something  GT\u2019s computer-controlled adversaries have never had. I\u2019d be happy enough with a watered-down version that\u2019s just ordinary quick though; leave the galaxy-brain fast version to the professionals.", "posttime": "2022-02-13 18:15:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,trained,sophy", "title": "\u7d22\u5c3c\u628a\u4eba\u5de5\u667a\u80fd\u8bad\u7ec3\u5f97\u5982\u6b64\u64c5\u957fGran Turismo\uff0c\u4ee5\u81f3\u4e8e\u5b83\u5f00\u59cb\u50cf\u4e2a\u6df7\u86cb\u4e00\u6837\u5f00\u8f66", "title_en": "Sony Trained an AI to Be So Good at Gran Turismo It Started Driving Like a Jerk", "transed": 1, "url": "https://jalopnik.com/sony-trained-an-ai-to-be-so-good-at-gran-turismo-it-sta-1848516258", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "trained", "sophy"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072921, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Firefox\uff1a\u88abMozilla\u63d2\u4ef6\u56e2\u961f\u62d2\u7edd\u3002\u539f\u56e0\u662f\u6211\u6ca1\u6709\u63d0\u4f9b\u4e0ehsluv-0.1.0\u8d77\u6e90\u7684\u786e\u5207\u94fe\u63a5\u3002uBO\u4f7f\u7528min.js\u5e93\u6765\u5b9e\u73b0\u6697\u4e3b\u9898\uff08uBO&#39\uff1bs About page\u786e\u5b9e\u5f52\u529f\u4e8e\u5e93\u7684\u4f5c\u8005\uff09\u30021.41.2\u4e2d\u6dfb\u52a0\u4e86\u81ea\u8ff0\u6587\u4ef6\uff0c\u4ee5\u62ab\u9732\u8be5\u5e93\u7684\u786e\u5207\u6765\u6e90\u3002\n\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u65b0\u8bbe\u7f6e\u7528\u4e8e\u63a7\u5236uBO\u5728\u5176\u6574\u4e2a\u7528\u6237\u754c\u9762\u4e2d\u4f7f\u7528\u7684\u5f3a\u8c03\u8272\uff1a\n\u5728&#34\uff1b\u8fc7\u6ee4\u5217\u8868&#34\uff1b\u7a97\u683c\uff0c\u4ee5\u63a7\u5236uBO\u662f\u5426\u5e94\u5728\u53d6\u6d88\u6302\u8d77\u7684\u7f51\u7edc\u6d3b\u52a8\u4e4b\u524d\u7b49\u5f85\u52a0\u8f7d\u6240\u6709\u7b5b\u9009\u5668\u5217\u8868\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u6d4f\u89c8\u5668\u542f\u52a8\u65f6\uff0cuBO\u4f1a\u5728\u53d6\u6d88\u6302\u8d77\u7f51\u7edc\u6d3b\u52a8\u4e4b\u524d\u7b49\u5f85\u52a0\u8f7d\u6240\u6709\u7b5b\u9009\u5217\u8868\uff0c\u4ee5\u786e\u4fdd\u5728\u542f\u52a8\u65f6\u6b63\u786e\u7b5b\u9009\u7f51\u9875\u3002\n\u65b0\u8bbe\u7f6e\u5141\u8bb8\u5728\u542f\u52a8\u65f6\u9009\u62e9\u9000\u51fa\u7f51\u7edc\u6d3b\u52a8\u6682\u505c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5141\u8bb8\u5728\u4e0d\u7b49\u5f85\u8fc7\u6ee4\u5668\u5217\u8868\u5b8c\u5168\u52a0\u8f7d\u7684\u60c5\u51b5\u4e0b\u52a0\u8f7d\u7f51\u9875\uff0c\u5f53\u7136\u4ee3\u4ef7\u662f\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u8fc7\u6ee4\u8fd9\u4e9b\u7f51\u9875\u3002", "note_en": "Firefox: Rejected by Mozilla Add-ons Team. The reason is that I did not provide an exact link to the origin of the  hsluv-0.1.0.min.js library used by uBO to implement dark theme (uBO&#39;s  About page does credit the author of the library). A  README has been added to 1.41.2 to disclose the exact origin of the library.\n          In addition, there is a new setting to control the accent color used by uBO throughout its user interface:\n     A new setting in  &#34;Filter lists&#34; pane to control whether uBO should wait for all filter lists to be loaded before unsuspending network activity.\n  By default, at browser launch uBO waits for all filter lists to be loaded before unsuspending network activity so as to ensure web pages are properly filtered at launch.\n The new setting allows to opt out of network activity suspension at launch, i.e. allowing web pages to load without waiting for filter lists to be fully loaded, of course at the cost of potentially not filtering properly those web pages.", "posttime": "2022-02-13 18:14:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ublock,ubo", "title": "uBlock Origin 1.41", "title_en": "uBlock Origin 1.41", "transed": 1, "url": "https://github.com/gorhill/uBlock/releases/tag/1.41.0", "via": "", "real_tags": ["ublock", "ubo"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072919, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2016\u5e74\uff0c\u6211\u4eec\u63a8\u51fa\u4e86AlphaGo\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5728\u53e4\u8001\u7684\u56f4\u68cb\u6e38\u620f\u4e2d\u51fb\u8d25\u4eba\u7c7b\u7684\u4eba\u5de5\u667a\u80fd\u9879\u76ee\u3002\u5b83\u7684\u7ee7\u4efb\u8005AlphaZero\u548cMuZero\u90fd\u4ee3\u8868\u7740\u5728\u8ffd\u6c42\u901a\u7528\u7b97\u6cd5\u65b9\u9762\u8fc8\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u7528\u66f4\u5c11\u7684\u9884\u5b9a\u4e49\u77e5\u8bc6\u638c\u63e1\u4e86\u66f4\u591a\u7684\u6e38\u620f\u3002\u4f8b\u5982\uff0c\u7a46\u6cfd\u7f57\u5728\u4e0d\u9700\u8981\u88ab\u544a\u77e5\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u5c31\u638c\u63e1\u4e86\u56fd\u9645\u8c61\u68cb\u3001\u56f4\u68cb\u3001Shogi\u548cAtari\u3002\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u7279\u5de5\u4e00\u76f4\u4e13\u6ce8\u4e8e\u89e3\u51b3\u6e38\u620f\u3002\u73b0\u5728\uff0c\u4e3a\u4e86\u8ffd\u6c42DeepMind\u89e3\u51b3\u667a\u80fd\u95ee\u9898\u7684\u4f7f\u547d\uff0cMuZero\u901a\u8fc7\u4f18\u5316YouTube\u4e0a\u7684\u89c6\u9891\uff0c\u5411\u638c\u63e1\u73b0\u5b9e\u4e16\u754c\u4efb\u52a1\u8fc8\u51fa\u4e86\u7b2c\u4e00\u6b65\u3002\n\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u4efd\u9884\u5370\u672c\u4e2d\uff0c\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4eec\u4e0eYouTube\u7684\u5408\u4f5c\uff0c\u4ee5\u63a2\u7d22MuZero\u6539\u5584\u89c6\u9891\u538b\u7f29\u7684\u6f5c\u529b\u3002\u5206\u6790\u5bb6\u9884\u6d4b\u6d41\u5a92\u4f53\u89c6\u9891\u5c06\u53602021\u4e92\u8054\u7f51\u6d41\u91cf\u7684\u7edd\u5927\u90e8\u5206\u3002\u968f\u7740CVID2019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u7684\u6d41\u884c\u548c\u672a\u6765\u4e92\u8054\u7f51\u6d41\u91cf\u7684\u589e\u957f\uff0c\u89c6\u9891\u538b\u7f29\u662f\u4e00\u4e2a\u65e5\u76ca\u91cd\u8981\u7684\u95ee\u9898\uff0c\u4e5f\u662f\u5e94\u7528\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u6765\u6539\u5584\u6311\u6218\u6027\u9886\u57df\u7684\u6700\u65b0\u9886\u57df\u7684\u81ea\u7136\u9886\u57df\u3002\u81ea\u4eceYouTube\u7684\u4e00\u90e8\u5206\u5b9e\u65f6\u6d41\u91cf\u6295\u5165\u751f\u4ea7\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u5c55\u793a\u4e86\u4e00\u7ec4\u5927\u578b\u3001\u591a\u6837\u5316\u7684\u89c6\u9891\u7684\u5e73\u5747\u6bd4\u7279\u7387\u964d\u4f4e\u4e864%\u3002\n\u5927\u591a\u6570\u5728\u7ebf\u89c6\u9891\u90fd\u4f9d\u8d56\u4e00\u4e2a\u540d\u4e3a\u7f16\u89e3\u7801\u5668\u7684\u7a0b\u5e8f\u6765\u538b\u7f29\u6216\u7f16\u7801\u89c6\u9891\u6e90\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u5c06\u5176\u4f20\u8f93\u7ed9\u89c2\u770b\u8005\uff0c\u7136\u540e\u89e3\u538b\u7f29\u6216\u89e3\u7801\u64ad\u653e\u3002\u8fd9\u4e9b\u7f16\u89e3\u7801\u5668\u4e3a\u89c6\u9891\u4e2d\u7684\u6bcf\u4e00\u5e27\u505a\u51fa\u591a\u4e2a\u51b3\u7b56\u3002\u51e0\u5341\u5e74\u7684\u624b\u5de5\u5de5\u7a0b\u5df2\u7ecf\u7528\u4e8e\u4f18\u5316\u8fd9\u4e9b\u7f16\u89e3\u7801\u5668\uff0c\u8fd9\u4e9b\u7f16\u89e3\u7801\u5668\u8d1f\u8d23\u5b9e\u73b0\u73b0\u5728\u4e92\u8054\u7f51\u4e0a\u53ef\u80fd\u7684\u8bb8\u591a\u89c6\u9891\u4f53\u9a8c\uff0c\u5305\u62ec\u89c6\u9891\u70b9\u64ad\u3001\u89c6\u9891\u901a\u8bdd\u3001\u89c6\u9891\u6e38\u620f\u548c\u865a\u62df\u73b0\u5b9e\u3002\u7136\u800c\uff0c\u7531\u4e8eRL\u7279\u522b\u9002\u5408\u4e8e\u7f16\u89e3\u7801\u5668\u4e2d\u7684\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\uff0c\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u5b66\u4e60RL\u7684\u7b97\u6cd5\u53ef\u4ee5\u5982\u4f55\u63d0\u4f9b\u5e2e\u52a9\u3002\n\u6211\u4eec\u6700\u521d\u7684\u91cd\u70b9\u662fVP9\u7f16\u89e3\u7801\u5668\uff08\u7279\u522b\u662f\u5f00\u6e90\u7248\u672clibvpx\uff09\uff0c\u56e0\u4e3a\u5b83\u88abYouTube\u548c\u5176\u4ed6\u6d41\u5a92\u4f53\u670d\u52a1\u5e7f\u6cdb\u4f7f\u7528\u3002\u4e0e\u5176\u4ed6\u7f16\u89e3\u7801\u5668\u4e00\u6837\uff0c\u4f7f\u7528VP9\u7684\u670d\u52a1\u63d0\u4f9b\u5546\u9700\u8981\u8003\u8651\u6bd4\u7279\u7387\u2014\u2014\u53d1\u9001\u89c6\u9891\u6bcf\u5e27\u6240\u9700\u76841\u548c0\u7684\u6570\u91cf\u3002\u6bd4\u7279\u7387\u662f\u670d\u52a1\u548c\u5b58\u50a8\u89c6\u9891\u6240\u9700\u7684\u8ba1\u7b97\u91cf\u548c\u5e26\u5bbd\u7684\u4e3b\u8981\u51b3\u5b9a\u56e0\u7d20\uff0c\u5b83\u5f71\u54cd\u4ece\u52a0\u8f7d\u89c6\u9891\u6240\u9700\u7684\u65f6\u95f4\u5230\u89c6\u9891\u7684\u5206\u8fa8\u7387\u3001\u7f13\u51b2\u548c\u6570\u636e\u4f7f\u7528\u7b49\u5404\u4e2a\u65b9\u9762\u3002\n\u5728VP9\u4e2d\uff0c\u901a\u8fc7\u901f\u7387\u63a7\u5236\u6a21\u5757\u4e2d\u7684\u91cf\u5316\u53c2\u6570\uff08QP\uff09\u6700\u76f4\u63a5\u5730\u4f18\u5316\u6bd4\u7279\u7387\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5e27\uff0c\u6b64\u53c2\u6570\u786e\u5b9a\u8981\u5e94\u7528\u7684\u538b\u7f29\u7ea7\u522b\u3002\u7ed9\u5b9a\u4e00\u4e2a\u76ee\u6807\u6bd4\u7279\u7387\uff0c\u89c6\u9891\u5e27\u7684QP\u5c06\u6309\u987a\u5e8f\u51b3\u5b9a\uff0c\u4ee5\u6700\u5927\u5316\u6574\u4f53\u89c6\u9891\u8d28\u91cf\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u5e94\u8be5\u4e3a\u590d\u6742\u573a\u666f\u5206\u914d\u8f83\u9ad8\u7684\u6bd4\u7279\u7387\uff08\u8f83\u4f4e\u7684QP\uff09\uff0c\u4e3a\u9759\u6001\u573a\u666f\u5206\u914d\u8f83\u4f4e\u7684\u6bd4\u7279\u7387\uff08\u8f83\u9ad8\u7684QP\uff09\u3002QP\u9009\u62e9\u7b97\u6cd5\u89e3\u91ca\u89c6\u9891\u5e27\u7684QP\u503c\u5982\u4f55\u5f71\u54cd\u5176\u4f59\u89c6\u9891\u5e27\u7684\u6bd4\u7279\u7387\u5206\u914d\u548c\u6574\u4f53\u89c6\u9891\u8d28\u91cf\u3002RL\u5728\u89e3\u51b3\u8fd9\u6837\u4e00\u4e2a\u8fde\u7eed\u7684\u51b3\u7b56\u95ee\u9898\u65f6\u5c24\u5176\u6709\u7528\u3002\nMuZero\u901a\u8fc7\u5c06\u641c\u7d22\u80fd\u529b\u4e0e\u5b66\u4e60\u73af\u5883\u6a21\u578b\u548c\u76f8\u5e94\u8ba1\u5212\u7684\u80fd\u529b\u76f8\u7ed3\u5408\uff0c\u5728\u5404\u79cd\u4efb\u52a1\u4e2d\u5b9e\u73b0\u8d85\u4eba\u7684\u6027\u80fd\u3002\u8fd9\u5728\u5927\u578b\u7ec4\u5408\u52a8\u4f5c\u7a7a\u95f4\u4e2d\u5c24\u5176\u6709\u6548\uff0c\u4f7f\u5176\u6210\u4e3a\u89c6\u9891\u538b\u7f29\u4e2d\u901f\u7387\u63a7\u5236\u95ee\u9898\u7684\u7406\u60f3\u5019\u9009\u89e3\u51b3\u65b9\u6848\u3002\u7136\u800c\uff0c\u8981\u8ba9MuZero\u5728\u8fd9\u4e2a\u73b0\u5b9e\u4e16\u754c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u5de5\u4f5c\uff0c\u9700\u8981\u89e3\u51b3\u4e00\u7ec4\u5168\u65b0\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4e0a\u4f20\u5230YouTube\u7b49\u5e73\u53f0\u7684\u4e00\u7ec4\u89c6\u9891\u5728\u5185\u5bb9\u548c\u8d28\u91cf\u4e0a\u5404\u4e0d\u76f8\u540c\uff0c\u4efb\u4f55\u4ee3\u7406\u90fd\u9700\u8981\u5bf9\u6240\u6709\u89c6\u9891\u8fdb\u884c\u6982\u62ec\uff0c\u5305\u62ec\u90e8\u7f72\u540e\u7684\u5168\u65b0\u89c6\u9891\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u68cb\u76d8\u6e38\u620f\u5f80\u5f80\u53ea\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u73af\u5883\u3002\u8bb8\u591a\u5176\u4ed6\u6307\u6807\u548c\u7ea6\u675f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7528\u6237\u4f53\u9a8c\u548c\u6bd4\u7279\u7387\u8282\u7701\uff0c\u4f8b\u5982PSNR\uff08\u5cf0\u503c\u4fe1\u566a\u6bd4\uff09\u548c\u6bd4\u7279\u7387\u7ea6\u675f\u3002\n\u4e3a\u4e86\u5229\u7528MuZero\u89e3\u51b3\u8fd9\u4e9b\u6311\u6218\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u79cd\u79f0\u4e3a\u201c\u81ea\u6211\u7ade\u4e89\u201d\u7684\u673a\u5236\uff0c\u901a\u8fc7\u6bd4\u8f83\u4ee3\u7406\u7684\u5f53\u524d\u6027\u80fd\u548c\u5386\u53f2\u6027\u80fd\uff0c\u5c06\u89c6\u9891\u538b\u7f29\u7684\u590d\u6742\u76ee\u6807\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u8d62\u5bb6/\u8f93\u5bb6\u4fe1\u53f7\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5c06\u4e00\u7ec4\u4e30\u5bcc\u7684\u7f16\u89e3\u7801\u5668\u8981\u6c42\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4fe1\u53f7\uff0c\u8be5\u4fe1\u53f7\u53ef\u4ee5\u7531\u6211\u4eec\u7684\u4ee3\u7406\u8fdb\u884c\u4f18\u5316\u3002\n\u901a\u8fc7\u5b66\u4e60\u89c6\u9891\u7f16\u7801\u7684\u52a8\u6001\u5e76\u786e\u5b9a\u5982\u4f55\u6700\u597d\u5730\u5206\u914d\u6bd4\u7279\uff0c\u6211\u4eec\u7684MuZero\u901f\u7387\u63a7\u5236\u5668\uff08MuZero RC\uff09\u80fd\u591f\u5728\u4e0d\u964d\u4f4e\u8d28\u91cf\u7684\u60c5\u51b5\u4e0b\u964d\u4f4e\u6bd4\u7279\u7387\u3002QP\u9009\u62e9\u53ea\u662f\u7f16\u7801\u8fc7\u7a0b\u4e2d\u4f17\u591a\u7f16\u7801\u51b3\u7b56\u4e4b\u4e00\u3002\u867d\u7136\u51e0\u5341\u5e74\u7684\u7814\u7a76\u548c\u5de5\u7a0b\u5df2\u7ecf\u4ea7\u751f\u4e86\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u6211\u4eec\u8bbe\u60f3\u4e86\u4e00\u79cd\u80fd\u591f\u81ea\u52a8\u5b66\u4e60\u505a\u51fa\u8fd9\u4e9b\u7f16\u7801\u51b3\u7b56\u4ee5\u83b7\u5f97\u6700\u4f73\u7387\u5931\u771f\u6743\u8861\u7684\u7b97\u6cd5\u3002\n\u9664\u4e86\u89c6\u9891\u538b\u7f29\uff0c\u5728\u7814\u7a76\u73af\u5883\u4e4b\u5916\u5e94\u7528MuZero\u7684\u7b2c\u4e00\u6b65\u662f\u6211\u4eec\u7684RL\u4ee3\u7406\u5982\u4f55\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u901a\u8fc7\u521b\u5efa\u5177\u6709\u4e00\u7cfb\u5217\u65b0\u529f\u80fd\u7684\u4ee3\u7406\u6765\u6539\u8fdb\u8de8\u9886\u57df\u7684\u4ea7\u54c1\uff0c\u6211\u4eec\u53ef\u4ee5\u5e2e\u52a9\u5404\u79cd\u8ba1\u7b97\u673a\u7cfb\u7edf\u53d8\u5f97\u66f4\u5feb\u3001\u66f4\u4e0d\u5bc6\u96c6\u3001\u66f4\u81ea\u52a8\u5316\u3002\u6211\u4eec\u7684\u957f\u671f\u613f\u666f\u662f\u5f00\u53d1\u4e00\u79cd\u5355\u4e00\u7b97\u6cd5\uff0c\u80fd\u591f\u5728\u4e0d\u540c\u9886\u57df\u4f18\u5316\u6570\u5343\u4e2a\u771f\u5b9e\u4e16\u754c\u7684\u7cfb\u7edf\u3002\n\u4e0e\u64b0\u7a3f\u4eba\u5408\u4f5c\u5b8c\u6210\u7684\u5de5\u4f5c\uff1a\u987e\u627f\u6770\u3001\u5b89\u4e1c\u00b7\u70ed\u5c14\u8bfa\u592b\u3001\u963f\u83ab\u5c14\u00b7\u66fc\u8fbe\u6069\u3001\u739b\u4e3d\u8d1d\u601d\u00b7\u52b3\u8d6b\u3001\u738b\u5999\u68ee\u3001\u859b\u82b1\u62c9\u3001\u5c1a\u6587\u8fea\u3001\u5f6d\u5fb7\u745e\u514b\u3001\u96f7\u5185\u00b7\u514b\u52b3\u65af\u3001\u6c5f\u6e05\u6c49\u3001\u9648\u6210\u3001\u97e9\u666f\u5b81\u3001\u9648\u5b89\u742a\u3001\u4e39\u5c3c\u5c14\u00b7J\u00b7\u66fc\u79d1\u7ef4\u8328\u3001\u6731\u5229\u5b89\u00b7\u65bd\u91cc\u7279\u7ef4\u6cfd\u3001\u6258\u9a6c\u65af\u00b7\u4f11\u4f2f\u7279\u3001\u5965\u5229\u5965\u00b7\u7ef4\u4e9a\u5c14\u65af\u3001\u6770\u514b\u900a\u00b7\u5e03\u7f57\u8c22\u3001\u8482\u83ab\u897f\u00b7\u66fc\u3001\u7f57\u4f2f\u7279\u00b7\u8463\u3001\uff0c\u53f2\u8482\u592b\u00b7\u52a0\u592b\u5c3c", "note_en": "In 2016, we introduced  AlphaGo, the first artificial intelligence program to defeat humans at the ancient game of Go. Its successors,  AlphaZero and then  MuZero, each represented a significant step forward in the pursuit of general-purpose algorithms, mastering a greater number of games with even less predefined knowledge. MuZero, for example, mastered Chess, Go, Shogi, and Atari without needing to be told the rules. But so far these agents have focused on solving games. Now, in pursuit of DeepMind\u2019s mission to solve intelligence, MuZero has taken a first step towards mastering a real-world task by optimising video on YouTube.\n  In a  preprint published today, we detail our collaboration with YouTube to explore the potential for MuZero to improve video compression.  Analysts predicted that streaming video will have accounted for the vast majority of internet traffic in 2021. With video surging during the COVID-19 pandemic and the total amount of internet traffic expected to grow in the future, video compression is an increasingly important problem \u2014 and a natural area to apply Reinforcement Learning (RL) to improve upon the state of the art in a challenging domain. Since launching to production on a portion of YouTube\u2019s live traffic, we\u2019ve demonstrated an average 4% bitrate reduction across a large, diverse set of videos.\n  Most online videos rely on a program called a codec to compress or encode the video at its source, transmit it over the internet to the viewer, and then decompress or decode it for playback. These codecs make multiple decisions for each frame in a video. Decades of hand engineering have gone into optimising these codecs, which are responsible for many of the video experiences now possible on the internet, including video on demand, video calls, video games, and virtual reality. However, because RL is particularly well-suited to sequential decision-making problems like those in codecs, we\u2019re exploring how an RL-learned algorithm can help.\n  Our initial focus is on the VP9 codec (specifically the open source version  libvpx), since it\u2019s widely used by YouTube and other streaming services. As with other codecs, service providers using VP9 need to think about bitrate \u2014 the number of ones and zeros required to send each frame of a video. Bitrate is a major determinant in how much compute and bandwidth is required to serve and store videos, affecting everything from how long a video takes to load to its resolution, buffering, and data usage.\n      In VP9, bitrate is optimised most directly through the Quantisation Parameter (QP) in the rate control module. For each frame, this parameter determines the level of compression to apply. Given a target bitrate, QPs for video frames are decided sequentially to maximize overall video quality. Intuitively, higher bitrates (lower QP) should be allocated for complex scenes and lower bitrates (higher QP) should be allocated for static scenes. The QP selection algorithm reasons how the QP value of a video frame affects the bitrate allocation of the rest of the video frames and the overall video quality. RL is especially helpful in solving such a sequential decision-making problem.\n      MuZero achieves superhuman performance across various tasks by combining the power of search with its ability to learn a model of the environment and plan accordingly. This works especially well in large, combinatorial action spaces, making it an ideal candidate solution for the problem of rate control in video compression. However, to get MuZero to work on this real-world application requires solving a whole new set of problems. For instance, the set of videos uploaded to platforms like YouTube varies in content and quality, and any agent needs to generalise across videos, including completely new videos after deployment. By comparison, board games tend to have a single known environment. Many other metrics and constraints affect the final user experience and bitrate savings, such as the PSNR (Peak Signal-to-Noise Ratio) and bitrate constraint.\n  To address these challenges with MuZero, we create a mechanism called self-competition, which converts the complex objective of video compression into a simple WIN/LOSS signal by comparing the agent\u2019s current performance against its historical performance. This allows us to convert a rich set of codec requirements into a simple signal that can be optimised by our agent.\n            By learning the dynamics of video encoding and determining how best to allocate bits, our MuZero Rate-Controller (MuZero-RC) is able to reduce bitrate without quality degradation. QP selection is just one of numerous encoding decisions in the encoding process. While decades of research and engineering have resulted in efficient algorithms, we envision a single algorithm that can automatically learn to make these encoding decisions to obtain the optimal rate-distortion tradeoff.\n  Beyond video compression, this first step in applying MuZero beyond research environments serves as an example of how our RL agents can solve real-world problems. By creating agents equipped with a range of new abilities to improve products across domains, we can help various computer systems become faster, less intensive, and more automated. Our long-term vision is to develop a single algorithm capable of optimising thousands of real-world systems across a variety of domains.\n       Work done as a collaboration with contributors: Chenjie Gu, Anton Zhernov, Amol Mandhane, Maribeth Rauh, Miaosen Wang, Flora Xue, Wendy Shang, Derek Pang, Rene Claus, Ching-Han Chiang, Cheng Chen, Jingning Han, Angie Chen, Daniel J. Mankowitz, Julian Schrittwieser, Thomas Hubert, Oriol Vinyals, Jackson Broshear, Timothy Mann, Robert Tung, Steve Gaffney", "posttime": "2022-02-13 18:09:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7814\u7a76,step,\u89c6\u9891", "title": "MuZero\u7814\u7a76\u73b0\u5b9e\u4e16\u754c\u7684\u7b2c\u4e00\u6b65", "title_en": "MuZero\u2019s first step from research into the real world", "transed": 1, "url": "https://deepmind.com/blog/article/MuZeros-first-step-from-research-into-the-real-world", "via": "", "real_tags": ["\u7814\u7a76", "step", "\u89c6\u9891"]}]
[{"category": "", "categoryclass": "", "imagename": "ba840fe7883739053f05b90e0809377d.jpg", "infoid": 1034125, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\uff0c\u8fd9\u548c\u5728\u53e6\u4e00\u4e2a\u623f\u95f4\u91cc\u6709\u53e6\u4e00\u53f0PS5\u4e0d\u592a\u4e00\u6837\uff1b\u8fdc\u7a0b\u6e38\u620f\u5f80\u5f80\u4f1a\u5728\u6df7\u5408\u4e2d\u5f15\u5165\u4e00\u70b9\u6ede\u540e\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u4e0d\u60f3\u5728\u7d27\u5f20\u7684\u6e38\u620f\u4e2d\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6beb\u79d2\u90fd\u5f88\u91cd\u8981\u3002\u4f46\u8003\u8651\u5230\u4e0a\u4e00\u4ee3\u7684\u6e38\u620f\u673a\u6700\u7ec8\u5f80\u5f80\u4f1a\u53d1\u73b0\u81ea\u5df1\u79ef\u6ee1\u4e86\u7070\u5c18\uff0c\u6216\u8005\u88ab\u585e\u8fdb\u4e86\u53e6\u4e00\u4e2a\u623f\u95f4\uff0c\u6210\u4e3a\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u84dd\u5149/Netflix\u64ad\u653e\u5668\uff0c\u8fd9\u662f\u5ef6\u957fPS4\u5bff\u547d\u7684\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u65b9\u5f0f\u3002IGN\u4eca\u65e9\u53d1\u73b0\u4e86\u8fd9\u6b3e\u5e94\u7528\uff0c\u5b83\u4f3c\u4e4e\u6b63\u5728\u5206\u6279\u5411\u7528\u6237\u63a8\u51fa\u3002\n\u7d22\u5c3c\u6ca1\u6709\u592a\u591a\u5730\u8bf4\u660e\u5b83\u5c06\u5982\u4f55\u5de5\u4f5c\uff0c\u6240\u4ee5\u5173\u4e8e\u517c\u5bb9\u6027\u4ecd\u7136\u6709\u5f88\u591a\u95ee\u9898-\u6240\u6709\u7684\u6e38\u620f\u90fd\u80fd\u8fd0\u884c\uff0c\u8fd8\u662f\u53ea\u6709\u4e00\u4e9b\uff1fPS4\u63a7\u5236\u5668\u80fd\u5426\u901a\u8fc7\u8fdc\u7a0b\u64ad\u653e\u5728PS5\u6e38\u620f\u4e0a\u8fd0\u884c\uff0c\u800c\u7d22\u5c3c\u5219\u8868\u793a\uff0c\u53ea\u6709\u5728\u64ad\u653e\u5411\u540e\u517c\u5bb9\u7684PS4\u6e38\u620f\u65f6\uff0c\u5b83\u4eec\u624d\u80fd\u5728PS5\u4e0a\u8fd0\u884c\uff1fPlayStation\u535a\u5ba2\u4e0a\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u786e\u5b9e\u8bc1\u5b9e\u4e86\u5b83\u662f\u4e3a\u5728PS4\u4e0a\u73a9PS5\u6e38\u620f\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u4ec5\u6b64\u800c\u5df2\uff1a\n\u6211\u4eec\u6b63\u5728\u66f4\u65b0PS4\u7684\u8fdc\u7a0b\u64ad\u653e\u529f\u80fd\u3002\u73b0\u5728\uff0c\u9664\u4e86\u53ef\u4ee5\u4ecePC\u6216\u79fb\u52a8\u8bbe\u5907\u8bbf\u95eePS4\u4e4b\u5916\uff0c\u60a8\u7684PS4\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u64ad\u653e\u8bbf\u95ee\u5176\u4ed6\u63a7\u5236\u53f0\uff0c\u5c31\u5728\u60a8\u7684\u7535\u89c6\u4e0a\u3002\u8fd9\u5305\u62ec\u8fde\u63a5\u5230PS5\u5e76\u5c06PS5\u6e38\u620f\u6d41\u4f20\u8f93\u5230PS4\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5728PS4\u4e0a\u73a9\u6e38\u620f\u4e86\u3002\n\u7d22\u5c3c\u8fd8\u6307\u51fa\uff0cPS5\u5c06\u540c\u65f6\u652f\u6301\u591a\u4e2a\u8fdc\u7a0b\u6e38\u620f\u7528\u6237\uff0c\u8ba9\u4f60\u53ef\u4ee5\u4e0e\u4e0d\u662f\u672c\u5730\u4eba\u7684\u670b\u53cb\u4e00\u8d77\u73a9\u672c\u5730\u591a\u4eba\u6e38\u620f\u3002", "note_en": "Now, that\u2019s not quite the same as actually having another PS5 in that other room; Remote Play tends to introduce a little bit of lag into the mix, so you probably won\u2019t want to turn to it for twitchy games where every millisecond counts. But given that last gen\u2019s console tends to eventually find itself gathering dust or tucked into another room as a wildly overpowered BluRay/Netflix player, this is a pretty great way to extend the PS4\u2019s lifespan. IGN  spotted the app this morning, and it appears to be rolling out to users in batches\n Sony   hasn\u2019t said much about how it\u2019ll all work, so there are still plenty of questions to be had about compatibility \u2014 will  all games work, or just some? Will PS4 controllers work on PS5 games via Remote Play, whereas Sony has otherwise said they\u2019ll  only work on the PS5 when playing backwards compatible PS4 titles? An  FAQ on the PlayStation blog does confirm that it\u2019s meant for playing PS5 games on the PS4, but doesn\u2019t go any deeper than that:\n  We\u2019re updating PS4\u2019s Remote Play feature. Now, in addition to being able to access your PS4 from a PC or a mobile device, your PS4 can access other consoles via Remote Play too, right on your TV. This includes the ability to connect to your PS5 and stream a PS5 game to your PS4 so you can play it there.\n Sony also notes the PS5 will support multiple remote play users simultaneously, allowing you to play local multiplayer games with friends who aren\u2019t actually, you know, local.", "posttime": "2020-11-10 04:03:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6e38\u620f,\u80fd\u591f,playstation,ps4", "title": "\nPlayStation4\u5c06\u80fd\u591f\u8fdc\u7a0b\u73a9PlayStation5\u6e38\u620f", "title_en": "\n\t\t\t\tThe PlayStation 4 will be able to play PlayStation 5 games remotely\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/11/09/ps5-remote-play-app-ps4/", "via": "", "real_tags": ["\u6e38\u620f", "\u80fd\u591f", "ps4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034123, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u60f3\u652f\u6301\u77ed\u9014\u65c5\u884c\uff0c\u6b22\u8fce(\u4f46\u6ca1\u6709\u4e49\u52a1)\u5728\u8fd9\u91cc\u505a\u51fa\u8d21\u732e\u3002", "note_en": "If you would like to support Short Trip, you&#39;re welcome (but not obliged) to make a contribution here.", "posttime": "2020-11-10 03:58:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a8\u753b,drawn,\u652f\u6301", "title": "\u624b\u7ed8\u52a8\u753b\u6709\u8f68\u7535\u8f66(\u7f51\u7edc\u5b9e\u9a8c)", "title_en": "Hand-drawn animated tram ride (web experiment)", "transed": 1, "url": "https://alexanderperrin.com.au/paper/shorttrip/", "via": "", "real_tags": ["\u52a8\u753b", "drawn", "\u652f\u6301"]}, {"category": "", "categoryclass": "", "imagename": "f9bace08f3008dcd1f2aed463a9ca70c.jpg", "infoid": 1034119, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u591a\u6708\u524d\uff0c\u6211\u4eec\u5c06\u4e09\u661f980Pro 1TB\u7684\u95ea\u5b58\u56fa\u6001\u786c\u76d8\u8bc4\u4e3a\u6211\u4eec\u6d4b\u8bd5\u8fc7\u7684\u6027\u80fd\u6700\u597d\u7684\u56fa\u6001\u786c\u76d8\u3002\u548c\u51e0\u4e4e\u6240\u6709\u4eba\u4e00\u6837\uff0c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u5c06\u770b\u5230Phison\u3001\u4e09\u661f\u4ee5\u53caSMI\u5728Gen4 SSD\u6027\u80fd\u6842\u51a0\u4e0a\u5373\u5c06\u5c55\u5f00\u7684\u5bf9\u51b3\u3002\u597d\u4e86\uff0c\u505c\u6b62\u5370\u5237\u5427\uff0c\u56e0\u4e3a\uff0c\u4e0a\u5468\u4e94\uff0c\u4e00\u4e2a\u610f\u60f3\u4e0d\u5230\u7684\u5305\u88f9\u51fa\u73b0\u5728\u5b9e\u9a8c\u5ba4\uff0c\u5b83\u6539\u53d8\u4e86\u6211\u4eec\u7684\u5047\u8bbe\u3002\n\u5f53\u6bcf\u4e2a\u4eba\u90fd\u5728\u8c08\u8bba\u4e09\u661f\u3001Phison\u548cSMI\u7684Gen4\u56fa\u6001\u786c\u76d8\u65f6\uff0cWD\u4e00\u76f4\u5728\u6084\u6084\u5730\u5b8c\u5584\u81ea\u5df1\u7684Gen4\u7ade\u4e89\u8005\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u662f\u7684\uff0c\u6211\u4eec\u90fd\u542c\u8bf4\u8fc7\uff0c\u4f46\u897f\u90e8\u6570\u636e\u5373\u5c06\u63a8\u51fa\u7684Black SN850 Gen4\u56fa\u6001\u786c\u76d8\u4f3c\u4e4e\u5e76\u6ca1\u6709\u5f15\u8d77\u592a\u591a\u5173\u6ce8\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684Gen3\u65d7\u8230SSD\uff0cWD Black SN750\uff0c\u5728\u6027\u80fd\u9636\u68af\u4e0a\u5904\u4e8e\u6700\u5e95\u5c42\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u6392\u540d\u897f\u90e8\u6570\u636e\u81ea\u5df1\u7684WD Blue SN550 4\u901a\u9053\u65e0DAM\u503c\u56fa\u6001\u786c\u76d8\u5728\u5b9e\u9645\u6027\u80fd(\u7528\u6237\u4f53\u9a8c)\u65b9\u9762\u8fdc\u8fdc\u8d85\u8fc7WD Black SN750\u3002\n\u6211\u4eec\u8ba4\u4e3aWD Black SN850\u53ef\u80fd\u4f1a\u662f\u53e6\u4e00\u6b3e\u6027\u80fd\u8f83\u4f4e\u7684\u786c\u76d8\uff0c\u5e8f\u5217\u53f7\u4ece\u597d\u5230\u5927\uff0c\u5c31\u50cf\u5b83\u7684\u524d\u8eab\u4e00\u6837\u3002\u5929\u54ea\uff0c\u6211\u4eec\u771f\u662f\u9519\u4e86\u3002\u6211\u4eec\u5e94\u8be5\u518d\u6b21\u6307\u51fa\uff0c\u4e0e\u6d41\u884c\u7684\u795e\u8bdd\u76f8\u53cd\uff0c\u5e8f\u5217\u53f7\u4e0eSSD\u7684\u901f\u5ea6\u6ca1\u6709\u591a\u5927\u5173\u7cfb\u3002\u4f60\u9700\u8981\u8bc1\u636e\u5417\uff1f\u8bd5\u60f3\u4e00\u4e0b\uff0c\u82f1\u7279\u5c14\u7684905P\u56fa\u6001\u786c\u76d8\u662f\u6709\u53f2\u4ee5\u6765\u901f\u5ea6\u6700\u5feb\u7684\u6d88\u8d39\u578b\u56fa\u6001\u786c\u76d8\uff0c\u5176\u8fde\u7eed\u901f\u5ea6\u53ea\u67092700/2300MB/s\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8bd5\u56fe\u4f20\u8fbe\u7684\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u83b7\u5f97\u6027\u80fd\u51a0\u519b\uff0c\u4f60\u6700\u597d\u5e26\u4e0a\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u4ee4\u4eba\u77a0\u76ee\u7ed3\u820c\u7684\u5e8f\u5217\u53f7\u3002\u5982\u679c\u4f60\u60f3\u5728\u8c08\u8bdd\u4e2d\u88ab\u63d0\u53ca\uff0c\u4f60\u6700\u597d\u5e26\u6765\u7684\u662f\u4f4e\u961f\u5217\u6df1\u5ea6\u7684\u968f\u673a\u6027\u80fd\u3002\u897f\u90e8\u6570\u636e\u7684WD Black SN850\u5e26\u6765\u4e86\u4e00\u5207\u3002\u8fd9\u662f\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u4f53\u9a8c\u5230\u7684\u6700\u5f3a\u5927\u7684\u7ec4\u5408\uff0c\u8ba9\u95ea\u5b58\u56fa\u6001\u786c\u76d8\u53d8\u5f97\u66f4\u5feb\u3002\n\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u4e3a\u4ec0\u4e48\u6211\u4eec(\u76ee\u524d)\u5c061TB WD Black SN850\u8bc4\u4e3a\u6027\u80fd\u6700\u4f73\u7684\u95ea\u5b58\u56fa\u6001\u786c\u76d8\u3002\n*\u4ef7\u683c\u6700\u540e\u4e00\u6b21\u626b\u63cf\u662f\u57282020\u5e7411\u67089\u65e5CST\u4e0a\u534812\uff1a23-\u4ef7\u683c\u53ef\u80fd\u4e0d\u51c6\u786e\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u7684\u94fe\u63a5\u67e5\u770b\u6700\u65b0\u4ef7\u683c\u3002\u6211\u4eec\u53ef\u4ee5\u8d5a\u53d6\u4ee3\u9500\u5546\u4f63\u91d1\u3002\nWD\u4eea\u8868\u76d8\u662f\u56fa\u6001\u786c\u76d8\u5de5\u5177\u7bb1\u7684\u6700\u4f73\u9009\u62e9\u3002\u5b83\u62e5\u6709\u4e00\u5207\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\uff0c\u4ece\u6700\u7ec8\u7528\u6237\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4f60\u53ef\u80fd\u60f3\u8981\u7684\u4e00\u5207\u3002WD\u8fd8\u63d0\u4f9b\u4e86\u514d\u8d39\u7684Acronis\u514b\u9686\u8f6f\u4ef6\uff0c\u53ea\u9700\u70b9\u51fbTools(\u5de5\u5177)\u9009\u9879\u5361\u5373\u53ef\u83b7\u5f97\u3002\n\u8bf7\u6ce8\u610f\u6e38\u620f\u6a21\u5f0f\uff0c\u56e0\u4e3a\u60a8\u5e0c\u671b\u542f\u7528\u8be5\u6a21\u5f0f\u4ee5\u83b7\u5f97\u6700\u4f73\u6027\u80fd\u3002\u6b64\u5916\uff0c\u8bf7\u786e\u4fdd\u542f\u7528\u5199\u7f13\u5b58\uff0c\u91cd\u8981\u7684\u662f\uff0c\u5bf9\u4e8e\u6240\u6709SSD\uff0c\u8bf7\u7981\u7528\u5199\u7f13\u5b58\u7f13\u51b2\u533a\u5237\u65b0\u4ee5\u83b7\u5f97\u6700\u4f73\u6027\u80fd\u3002\n\u6211\u4eec\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u8fbe\u5230WD\u51fa\u5382\u65f67000MB/s\u7684\u987a\u5e8f\u8bfb\u53d6\u901f\u5ea6\u3002\u6211\u4eec\u6ca1\u6709\u8fbe\u52305300MB/s\u7684\u987a\u5e8f\u5199\u5165\u901f\u5ea6(\u56e0\u4e3a\u6211\u4eec\u7684\u7528\u6237\u72b6\u6001\u8981\u6c42\u66f4\u9ad8--\u64cd\u4f5c\u7cfb\u7edf\u78c1\u76d8\u5df2\u6ee150%)\uff0c\u4f46\u5df2\u7ecf\u8db3\u591f\u63a5\u8fd1\u4e86\u30021TB WD Black SN850\u8f7b\u677e\u51fb\u8d25\u4e86\u6211\u4eec\u4e4b\u524d\u7684\u8fde\u7eed\u51a0\u519b980 Pro\u3002\u8fd9\u662f\u4f1f\u5927\u7684\uff0c\u4f46\u6211\u4eec\u66f4\u559c\u6b22\u6211\u4eec\u770b\u5230\u7684\u4e0eQ1T1\u968f\u673a\u3002(3-\u5b9e\u9a8c\u5ba4\u8bb0\u5f55)\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\n\u9605\u8bfb\u603b\u5206\u4e3a10K\uff0c\u4e0e\u4e09\u661f\u7684980 Pro\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u5e76\u5728\u57fa\u4e8eFlash\u7684\u7ade\u4e89\u4e2d\u5360\u636e\u7edd\u5bf9\u4e3b\u5bfc\u5730\u4f4d\u3002\u5b83\u7684\u603b\u5199\u5165\u5f97\u5206\u662f\u6211\u4eec\u89c1\u8fc7\u7684\u6700\u597d\u7684\uff0c\u603b\u5f97\u5206\u8d85\u8fc726K\uff0c\u6210\u4e3a\u7b2c\u4e00\u4e2a\u8d85\u8d8a\u5f3a\u5927\u7684Optane 905P\u7684\u56fa\u6001\u786c\u76d8\u3002(2-\u5b9e\u9a8c\u5ba4\u8bb0\u5f55)\u3002\n980 Pro\u901a\u8fc7\u63d0\u4f9b\u66f4\u597d\u7684\u5199\u4f5c\u5206\u6570\u6765\u8fdb\u884c\u4e00\u70b9\u6297\u4e89\uff0c\u4f46\u8fd9\u624d\u662f\u6211\u4eec\u73b0\u5728\u611f\u5174\u8da3\u7684\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u603b\u7684\u8bfb\u53d6\u5206\u6570\uff0cSN850\u63d0\u4f9b\u4e86\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u6240\u89c1\u8fc7\u76841TB\u56fa\u6001\u786c\u76d8\u7684\u6700\u4f73\u6027\u80fd\u3002(1-\u5b9e\u9a8c\u5ba4\u8bb0\u5f55)\u3002\nSN850\u57fa\u672c\u4e0a\u4e0e980 Pro\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u8fd9\u4e00\u6b21\u662f\u5728128K\u4e0b\u6309\u987a\u5e8f\u7f16\u7a0b\u6570\u636e\u65f6\u3002\u4e0d\u8fc7\uff0c\u540c\u6837\uff0c\u6211\u4eec\u5bf9\u5199\u5165\u6027\u80fd\u7684\u5173\u6ce8\u8fdc\u4e0d\u53ca\u5bf9\u8bfb\u53d6\u6027\u80fd\u7684\u5173\u6ce8\uff0c\u5728\u8bfb\u53d6\u6027\u80fd\u65b9\u9762\uff0cSN850\u63d0\u4f9b\u4e86\u53e6\u4e00\u9879\u5b9e\u9a8c\u5ba4\u8bb0\u5f55\u3002\n\u4e09\u661f\u7684980 Pro\u4ecd\u7136\u662f\u5b9e\u9a8c\u5ba4\u7684\u51a0\u519b\uff0c\u901f\u5ea6\u53ea\u670951MB/s\u3002\u7136\u800c\uff0c\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4eec\u66f4\u611f\u5174\u8da3\u7684\u662f\u6570\u636e\u80fd\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u4f20\u5230\u4e3b\u673a\u4e0a\u3002\n\u670d\u52a1\u6570\u636e\u6bd4\u5728\u6d88\u8d39\u8005\u7a7a\u95f4\u7f16\u7a0b\u66f4\u91cd\u8981\uff0cSN850\u5728\u505a\u91cd\u8981\u4e8b\u60c5\u7684\u540c\u65f6\u63d0\u4f9b\u4e86\u53c8\u4e00\u9879\u5b9e\u9a8c\u5ba4\u8bb0\u5f55\u3002(\u6d88\u8d39\u8005\u4efb\u52a1\u4e3a80%\u8bfb20%\u5199)\u3002\n\u897f\u90e8\u6570\u636e\u5c06WD Black SN850\u4f5c\u4e3a\u6e38\u620f\u63a8\u5e7f\u6d3b\u52a8\u8fdb\u884c\u8425\u9500\u3002\u867d\u7136\u5b83\u4e0d\u662f\u7edd\u5bf9\u6700\u597d\u7684\uff0c\u4f46\u5b83\u53ea\u6bd4\u6211\u4eec\u6240\u89c1\u8fc7\u7684\u95ea\u5b58\u56fa\u6001\u786c\u76d8\u7684\u6700\u597d\u6027\u80fd\u4f4e\u4e86\u51e0\u5206\u4e4b\u4e00\u79d2\uff0c\u7565\u597d\u4e8e980 Pro\u3002\nPCMark 10\u5b58\u50a8\u6d4b\u8bd5\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5148\u8fdb\u3001\u6700\u51c6\u786e\u7684\u6d88\u8d39\u5b58\u50a8\u6d4b\u8bd5\u3002\u6709\u56db\u79cd\u4e0d\u540c\u7684\u6d4b\u8bd5\u53ef\u4f9b\u9009\u62e9\uff1b\u6211\u4eec\u8fd0\u884c\u5176\u4e2d\u7684\u4e24\u79cd\u3002\n\u5168\u7cfb\u7edf\u9a71\u52a8\u5668\u57fa\u51c6\u548c\u5feb\u901f\u7cfb\u7edf\u9a71\u52a8\u5668\u57fa\u51c6\u3002\u5168\u7cfb\u7edf\u9a71\u52a8\u5668\u57fa\u51c6\u6d4b\u8bd5\u5728\u6d4b\u8bd5\u671f\u95f4\u5199\u5165204 GB\u6570\u636e\u3002Quick System Drive\u57fa\u51c6\u6d4b\u8bd5\u5728\u6d4b\u8bd5\u671f\u95f4\u5199\u516523 GB\u6570\u636e\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u4e0e\u7528\u6237\u4f53\u9a8c\u76f4\u63a5\u76f8\u5173\u3002\u5728\u8fd9\u4e24\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3aQuick System Drive Test\u6700\u51c6\u786e\u5730\u590d\u5236\u4e86\u5178\u578b\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\u6211\u4eec\u5f00\u59cb\u5427\uff01\u7edd\u5bf9\u4ee4\u4eba\u60ca\u53f9\u7684\u7e41\u91cd\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd\u3002\u6d88\u8d39\u8005\u9700\u8981\u6ce8\u610f\uff0c\u56e0\u4e3aWD Black SN850\u6b63\u662f\u60a8\u6240\u9700\u8981\u7684\u3002\u5b83\u751a\u81f3\u6bd4980 Pro\u8fd8\u8981\u597d\u3002(\u5b9e\u9a8c\u5ba4\u7eaa\u5f55)\u3002\n\u5728\u6211\u4eec\u8fd0\u884c\u7684\u6240\u6709\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u8fd9\u662f\u6211\u4eec\u6700\u5e0c\u671b\u770b\u5230\u5353\u8d8a\u6027\u80fd\u7684\u5730\u65b9\u3002\u563f\uff0c\u770b\uff0c\u6240\u6709\u95ea\u5b58\u56fa\u6001\u786c\u76d8\u7684\u53e6\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u8bb0\u5f55\u3002\u8fd9\u5c31\u51b3\u5b9a\u4e86\u4ea4\u6613\u7684\u6210\u8d25\u3002\u897f\u90e8\u6570\u636e(Western Digital)\u7684WD Black SN850\u662f\u622a\u81f32020\u5e7411\u67089\u65e5\u6027\u80fd\u6700\u597d\u7684\u95ea\u5b58\u6d88\u8d39\u578b\u56fa\u6001\u786c\u76d8\u3002\u6211\u4eec\u503e\u5411\u4e8e\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u72b6\u51b5\u5c06\u6301\u7eed\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u7b49\u7740\u77a7\u5427\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u897f\u90e8\u6570\u636e\u6b63\u5728\u70ae\u5236\u4e00\u6b3eSSD\uff0c\u8fd9\u6b3eSSD\u5c06\u88ab\u8bc1\u660e\u662f\u8fc4\u4eca\u4e3a\u6b62\u8868\u73b0\u6700\u597d\u7684\u6d88\u8d39\u7c7bSSD\u3002\u4ed6\u4eec\u4ee5\u524d\u4ece\u672a\u505a\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u8fd9\u4e00\u76f4\u662f\u5176\u4ed6\u5927\u724c\u516c\u53f8\u7684\u9886\u5730\u3002\u73b0\u5728\u4e0d\u662f\u4e86\uff0c\u897f\u90e8\u6570\u636e\uff1b\u4f60\u6709\u4e1a\u7ee9\u6842\u51a0--\u8fd9\u662f\u4f60\u5e94\u5f97\u7684\u3002\n\u5e8f\u5217\u53f7\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u8fd9\u624d\u662f\u771f\u6b63\u91cd\u8981\u7684\uff0c\u7528\u6237\u4f53\u9a8c\u3002\u9664\u4e86Optane\u4e4b\u5916\uff0cSN850\u8fd8\u5c06\u63d0\u4f9b\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u6240\u89c1\u8fc7\u7684\u6700\u4ee4\u4eba\u6ee1\u610f\u7684PC\u4f53\u9a8c\u3002\u800c\u4e14\u4e0d\u662f\u4e00\u70b9\u70b9\uff0c\u800c\u662f\u5f88\u591a\u3002\n\u56de\u987e\u6211\u4eec\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0cWD Black SN850 1TB\u5c31\u50cf\u4e00\u4e2a\u4e0d\u95f4\u65ad\u7684\u4eae\u70b9\u5377\u8f74\uff0c\u4f46\u6709\u51e0\u4e2a\u7ed3\u679c\u751a\u81f3\u6bd4\u5176\u4ed6\u7684\u66f4\u7a81\u51fa\u3002\u94c1\u7827\u572826K\u65f6\u7684\u8868\u73b0\u662f\u4ee4\u4eba\u8d39\u89e3\u7684\uff0c\u751a\u81f3\u8d85\u8fc7\u4e86Optane\u3002\u6b63\u5982\u6211\u4eec\u7684\u4f20\u8f93\u6d4b\u8bd5\u6240\u8868\u660e\u7684\u90a3\u6837\uff0c\u4ee5\u8d85\u8fc73,500 MB/s\u7684\u901f\u5ea6\u5411\u4e3b\u673a\u63d0\u4f9b\u6570\u636e\u662f\u4efb\u4f55\u56fa\u6001\u786c\u76d8\u7684\u53e6\u4e00\u4e2a\u9996\u521b\u3002\u6e38\u620f\u6027\u80fd\u662f\u6211\u4eec\u89c1\u8fc7\u7684\u6700\u597d\u7684\u6e38\u620f\u4e4b\u4e00\u3002\u6700\u540e\uff0c\u5728\u6700\u91cd\u8981\u7684\u5730\u65b9\uff0c\u897f\u90e8\u6570\u636e\u7684WD Black SN850 1TB\u65e0\u8bba\u5de5\u4f5c\u8d1f\u8377\u5982\u4f55\u90fd\u80fd\u63d0\u4f9b\u7834\u7eaa\u5f55\u7684\u6027\u80fd\u3002\n\u6309\u7167\u4eca\u5929\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u4fe1\u5730\u8bf4\uff0cWD Black SN850\u662f\u94b1\u80fd\u4e70\u5230\u7684\u6027\u80fd\u6700\u597d\u7684\u95ea\u5b58\u6d88\u8d39\u578b\u56fa\u6001\u786c\u76d8\u3002\n*\u4ef7\u683c\u6700\u540e\u4e00\u6b21\u626b\u63cf\u662f\u57282020\u5e7411\u67089\u65e5CST\u4e0a\u534812\uff1a23-\u4ef7\u683c\u53ef\u80fd\u4e0d\u51c6\u786e\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u7684\u94fe\u63a5\u67e5\u770b\u6700\u65b0\u4ef7\u683c\u3002\u6211\u4eec\u53ef\u4ee5\u8d5a\u53d6\u4ee3\u9500\u5546\u4f63\u91d1\u3002\n\u7b54\u8fa9\u6743\u6211\u4eec\u516c\u5f00\u9080\u8bf7\u5411\u6211\u4eec\u63d0\u4f9b\u8bc4\u8bba\u6837\u672c/\u88ab\u63d0\u53ca\u6216\u8ba8\u8bba\u7684\u516c\u53f8\u53d1\u8868\u610f\u89c1\u3002\u5982\u679c\u4efb\u4f55\u516c\u53f8\u4ee3\u8868\u5e0c\u671b\u4f5c\u51fa\u56de\u5e94\uff0c\u6211\u4eec\u4f1a\u5728\u6b64\u516c\u5e03\u56de\u5e94\u3002\u5982\u679c\u60a8\u60f3\u8981\u56de\u590d\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\u3002", "note_en": "A little over a month ago, we crowned Samsung&#39;s 980 Pro 1TB as the best performing flash-based SSD we&#39;ve ever tested. Like almost everyone else, we figured we would be looking at an upcoming showdown between Phison, Samsung, and maybe SMI for the Gen4 SSD performance crown. Well, stop the presses because, on Friday of last week, an unexpected package showed up at the lab that changes everything we assumed.\n While everyone has been talking about Gen4 SSDs by Samsung, Phison, and SMI, WD has been quietly perfecting a Gen4 contender of their own. I mean, yeah, we all heard about it, but Western Digital&#39;s incoming Black SN850 Gen4 SSD did not seem to garner much attention. This is probably because their Gen3 flagship SSD, the WD Black SN750, made its living at the bottom of the performance ladder. In fact, we rank Western Digital&#39;s own WD Blue SN550 4-channel DRAMless value SSD far above the WD Black SN750 in terms of real performance (user experience).\n We assumed the WD Black SN850 would likely be another low-performance drive with good to great sequential numbers, much like its predecessor. Man were we ever wrong. We should again point out for the millionth time that contrary to popular mythology, sequential numbers have little to do with what makes an SSD fast. Do you need proof? Consider for a moment the fastest consumer SSD ever made, Intel&#39;s 905P, only reaches sequential speeds of 2,700/2300 MB/s.\n In a nutshell, we are trying to convey that if you want the performance crown, you better bring a lot more than eye-popping sequential numbers to the table. What you better be bringing if you even want to be mentioned in the conversation is random performance at low queue depths. Western Digital&#39;s WD Black SN850 brings it all. It is the most potent mix of everything that makes a flash-based SSD fast that we&#39;ve experienced to date.\n Let&#39;s take a close look at why we have crowned (for now) the 1TB WD Black SN850 the best performing flash-based SSD by the numbers.\n                  * Prices last scanned on 11/9/2020 at 12:23 am CST - prices may not be accurate, click links above for the latest price. We may earn an affiliate commission.\n              The WD dashboard is as good as it gets for an SSD Toolbox. It has everything, and we mean everything you could ever want from an end-user perspective. WD also offers free Acronis cloning software that you can get with just a click of the tools tab.\n Take note of &#34;Gaming Mode&#34; because you will want that enabled for best performance. Additionally, be sure to enable write caching and, importantly, for all SSDs, disable write-cache buffer flushing for best performance.\n                We have no issues hitting WD&#39;s factory sequential read spec of 7,000 MB/s. We don&#39;t quite get to 5,300 MB/s sequential writes (because of our more demanding user state - OS Disk 50% filled) but close enough. The 1TB WD Black SN850 trounces our previous sequential champion, the 980 Pro, easily. That&#39;s great, but we like what we see with Q1T1 randoms even better. (3-lab records) Impressive.\n            A total read score of 10K is on par with Samsung&#39;s 980 Pro and absolute domination of the rest of the flash-based competition. The total write score is the best we&#39;ve ever seen, as is an overall score of over 26K where it becomes the first SSD to ever best the mighty Optane 905p. (2-lab records)\n                      The 980 Pro manages to put up a little bit of a fight by delivering a better write score, but that&#39;s now what we are interested in at all. We care about the total read score, and the SN850 delivers the best we&#39;ve seen from a 1TB SSD to date. (1-lab record)\n          The SN850 essentially ties the 980 Pro, this time when programming data sequentially at 128K. However, again, we do not care about write performance nearly as much as read performance, where the SN850 delivers another lab record.\n          Samsung&#39;s 980 Pro remains lab champ by a mere 51 MB/s. However, as always, we are far more interested in how fast data can be served to the host.\n      Serving data is more important than programming it in the consumer space, and the SN850 delivers yet another lab record while doing important things. (Consumer tasks are 80% read 20% write)\n        Western Digital is marketing the WD Black SN850 as a gaming drive. While not the absolute best, it is just a fraction of a second off the best we&#39;ve seen from a flash-based SSD and slightly better than the 980 Pro.\n    PCMark 10 Storage Test is the most advanced and most accurate real-world consumer storage test ever made. There are four different tests you can choose from; we run two of them.\n The Full System Drive Benchmark and the Quick System Drive Benchmark. The Full System Drive Benchmark writes 204 GB of data over the duration of the test. The Quick System Drive Benchmark writes 23 GB of data over the duration of the test. These tests directly correlate with user experience. Of the two tests, we feel that the Quick System Drive Test most accurately replicates a typical user experience.\n            Here we go! Absolutely stunning heavy workload performance. Prosumers pay attention because the WD Black SN850 is exactly what you need. It is even better than the 980 Pro. (Lab record)\n            Of all the benchmarks we run, this is where we want to see exceptional performance most. Hey, look, another lab record for all flash-based SSDs. This seals the deal. Western Digital&#39;s WD Black SN850 is by far the best performing flash-based consumer SSD as of 11-9-2020. We are inclined to think that it will remain so for a good while. We shall see.\n    We had no idea that Western Digital was cooking up an SSD that would prove to be the best performing consumer SSD to date. They have never done anything like that before. That&#39;s always been the realm of other big names. Well, not anymore, Western Digital; you have the performance crown - you earned it.\n        Sequential numbers don&#39;t mean a thing. This is what actually matters, user experience. The SN850 will, other than Optane, deliver overall the most gratifying PC experience we&#39;ve seen to date. And not by a little bit, but by a lot.\n    Looking back at our test results, the WD Black SN850 1TB is like a nonstop highlight reel, but a few results stand out even more than the rest. Anvil&#39;s at 26K is mind-bending performance that even bests Optane. As demonstrated by our transfer testing, serving data to the host at over 3,500 MB/s is another first for any SSD. Gaming performance is among the best we&#39;ve ever seen. And finally, where it matters most, Western Digital&#39;s WD Black SN850 1TB delivers record-breaking performance no matter the workload.\n As it stands today, we can confidently say the WD Black SN850 is the best performing flash-based consumer SSD money can buy.\n * Prices last scanned on 11/9/2020 at 12:23 am CST - prices may not be accurate, click links above for the latest price. We may earn an affiliate commission.\n     Right of Reply We openly invite the companies who provide us with review samples / who are mentioned or discussed to express their opinion. If any company representative wishes to respond, we will publish the response here. Please contact us if you wish to respond.", "posttime": "2020-11-10 03:36:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u786c\u76d8,\u56fa\u6001\u786c\u76d8,sn850", "title": "WD SN850\u63d0\u4f9b\u4e86\u6211\u4eec\u6d4b\u8bd5\u8fc7\u7684\u6027\u80fd\u6700\u4f73\u7684\u56fa\u6001\u786c\u76d8", "title_en": "WD SN850 delivers the best performing SSD we've ever tested", "transed": 1, "url": "https://www.tweaktown.com/reviews/9664/wd-black-sn850-1tb-nvme-2-ssd/index.html", "via": "", "real_tags": ["\u6027\u80fd", "\u786c\u76d8", "\u56fa\u6001\u786c\u76d8", "sn850"]}, {"category": "", "categoryclass": "", "imagename": "4a045a2dad9629dc558178669f7f9106.png", "infoid": 1034118, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u4e24\u4e2a\u6708\u91cc\uff0c\u6211\u8bfb\u5230\u7684\u5173\u4e8e\u804c\u573a\u4e66\u9762\u4ea4\u6d41\u7684\u6587\u7ae0\u53ef\u80fd\u6bd4\u8fc7\u53bb10\u5e74\u8fd8\u8981\u591a\u3002\n\u6211\u60c5\u4e0d\u81ea\u7981\u5730\u6ce8\u610f\u5230\uff0c\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba(\u5982\u679c\u4e0d\u662f\u5168\u90e8\u7684\u8bdd)\u90fd\u5bf9\u540c\u4e00\u4ef6\u4e8b\u63d0\u51fa\u4e86\u8d28\u7591\uff1a\u6563\u6587\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u5efa\u8bae\u53e5\u5b50\u8981\u7b80\u77ed\uff0c\u5207\u4e2d\u8981\u5bb3\uff0c\u4f7f\u7528\u4e3b\u52a8\u8bed\u6001\u800c\u4e0d\u662f\u88ab\u52a8\u8bed\u6001\uff0c\u5c11\u7528\u9017\u53f7\uff0c\u591a\u7528\u53e5\u53f7\uff0c\u907f\u514d\u4f7f\u7528\u7f29\u7565\u8bed\u7b49\u3002\n\u8ba9\u6211\u4eec\u628a\u8bdd\u8bf4\u6e05\u695a\uff1a\u8fd9\u4e9b\u90fd\u4e0d\u662f\u9519\u7684\uff0c\u4e5f\u4e0d\u662f\u9519\u7684\u3002\u4f46\u8fd9\u8ba9\u6211\u610f\u8bc6\u5230\uff0c\u5bf9\u4e8e\u597d\u7684\u5546\u52a1\u5199\u4f5c\u5230\u5e95\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4eba\u4eec\u7684\u8bef\u89e3\u662f\u591a\u4e48\u4e25\u91cd\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u4eba\u4e0e\u4f18\u79c0\u5199\u4f5c\u7684\u533a\u522b\u4e0e\u6587\u4f53\u3001\u8bed\u6cd5\u3001\u5f53\u5730\u7684\u53e5\u5b50\u7ed3\u6784\u3001\u9009\u8bcd\uff0c\u751a\u81f3\u5185\u5bb9\u672c\u8eab\u6ca1\u6709\u591a\u5927\u5173\u7cfb\u3002\n\u5927\u591a\u6570\u4eba\u4e0d\u80fd\u5f88\u597d\u5730\u5199\u4f5c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u63a7\u5236\u4ed6\u4eec\u8868\u8fbe\u60f3\u6cd5\u7684\u903b\u8f91\u987a\u5e8f\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u63a2\u8ba8\u5982\u4f55\u6709\u6548\u5730\u4e0e\u4ed6\u4eba\u5206\u4eab\u4e66\u9762\u60f3\u6cd5\uff0c\u4ece\u800c\u4e3a\u4ed6\u4eba\u8282\u7701\u65f6\u95f4\u548c\u7cbe\u529b\u3002\n\u5199\u4e00\u4e2a\u60f3\u6cd5\u603b\u662f\u4e24\u4e2a\u5b8f\u89c2\u6b65\u9aa4\u7684\u7ed3\u679c\u3002\u9996\u5148\uff0c\u786e\u5b9a\u6211\u4eec\u60f3\u8981\u8868\u8fbe\u7684\u89c2\u70b9\uff0c\u7136\u540e\u7528\u8bed\u8a00\u8868\u8fbe\u51fa\u6765\u3002\n\u4e3a\u4e86\u7406\u89e3\u6211\u4eec\u5982\u4f55\u6709\u6548\u5730\u5206\u4eab\u4e66\u9762\u60f3\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e86\u89e3\u6211\u4eec\u662f\u5982\u4f55\u8868\u8fbe\u8fd9\u4e9b\u60f3\u6cd5\u7684\u3002\n\u6bcf\u4e00\u4e2a\u60f3\u6cd5\u90fd\u59cb\u4e8e\u4e00\u4e2a\u62c6\u5206\u8fc7\u7a0b\u3002\u62c6\u5206\u662f\u4e00\u79cd\u63a2\u7d22\u884c\u4e3a\uff0c\u5b83\u5bfc\u81f4\u67d0\u4e00\u4e3b\u9898\u7684\u6240\u6709\u5355\u72ec\u9879\u76ee\u7684\u5206\u79bb\u3002\n\u628a\u67d0\u6837\u4e1c\u897f\u62c6\u5f00\u5e76\u4e0d\u610f\u5473\u7740\u5bf9\u5b83\u6709\u6df1\u523b\u7684\u7406\u89e3\u3002\u8fd9\u66f4\u591a\u7684\u662f\u4e00\u79cd\u5b8c\u5168\u89c9\u5bdf\u7684\u611f\u89c9\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u53ef\u80fd\u751a\u81f3\u4e0d\u77e5\u9053\u6bcf\u4e00\u4ef6\u4f5c\u54c1\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u4f60\u77e5\u9053\u5b83\u4eec\u90fd\u4ee5\u4e0d\u540c\u7684\u5f62\u5f0f\u5b58\u5728\u3002\u6ca1\u6709\u9690\u85cf\u7684\u90e8\u5206\u3002\n\u5206\u95e8\u522b\u7c7b\u53ef\u4ee5\u589e\u5f3a\u6211\u4eec\u7684\u89c2\u5bdf\u80fd\u529b\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u8fd9\u53ef\u4ee5\u662f\u4e00\u79cd\u6a21\u5f0f\uff0c\u4e00\u79cd\u6d1e\u5bdf\u529b\uff0c\u4e00\u79cd\u65b0\u5947\uff0c\u751a\u81f3\u662f\u4e00\u4e2a\u6b21\u8981\u7684\u7ec6\u8282\u3002\n\u53ea\u6709\u5f53\u6211\u4eec\u6ce8\u610f\u5230\u67d0\u4ef6\u4e8b\u65f6\uff0c\u6211\u4eec\u624d\u80fd\u5f00\u59cb\u53d1\u5c55\u4e00\u4e2a\u60f3\u6cd5\u3002\u8fd9\u5c31\u662f\u521b\u9020\u6027\u90e8\u5206\u7684\u5f00\u59cb\u3002\u8fd9\u5c31\u662f\u4f60\u8bd5\u7740\u628a\u6700\u521d\u7684\u7ebf\u7d22\u53d1\u5c55\u6210\u4e00\u4e2a\u5b8c\u5168\u6210\u578b\u7684\u60f3\u6cd5\u7684\u5730\u65b9\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6ce8\u610f\u5230\u67d0\u4e9b\u4e8b\u60c5\u662f\u4e0d\u5fc5\u8981\u7684\u6216\u8fc7\u4e8e\u590d\u6742\uff0c\u60a8\u53ef\u80fd\u4f1a\u8fd0\u884c\u7b80\u5316\u6d41\u7a0b\u3002\u5982\u679c\u4f60\u53d1\u73b0\u9057\u6f0f\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u6216\u52a0\u56fa\u8fc7\u7a0b\u6765\u5b8c\u6210\u3002\n\u4e00\u65e6\u4f60\u5b8c\u6210\u4e86\u4f60\u7684\u60f3\u6cd5\uff0c\u4f60\u5c31\u9700\u8981\u91cd\u65b0\u6346\u7ed1\u3002\u8fd9\u662f\u4e00\u4e2a\u91cd\u5efa\u8fc7\u7a0b\u3002\u8fd9\u662f\u4f60\u8bd5\u56fe\u91cd\u7ec4\u4e00\u4e2a\u4e16\u754c\u7684\u5730\u65b9\uff0c\u8fd9\u4e2a\u4e16\u754c\u73b0\u5728\u6b63\u5728\u601d\u8003\u4f60\u65b0\u63d2\u5165\u7684\u60f3\u6cd5\u3002\n\u6346\u7ed1\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u662f\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4f60\u7684\u65b0\u4e16\u754c\u662f\u5426\u4ecd\u7136\u5b58\u5728\u7684\u5730\u65b9\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8fd9\u662f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u8868\u660e\u4f60\u9700\u8981\u5728\u8868\u8fbe\u9636\u6bb5\u6295\u5165\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u5426\u5219\u4f60\u6ce8\u610f\u5230\u7684\u4e1c\u897f\u6839\u672c\u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u6709\u610f\u4e49\u7684\u4e1c\u897f\u3002\n\u5982\u679c\u5728\u91cd\u65b0\u6346\u7ed1\u7684\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u4f60\u7684\u4e16\u754c\u8fd8\u4e0d\u9519\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u7ecf\u5386\u4e00\u4e2a\u91cd\u65b0\u7ec4\u5408\u7684\u8fc7\u7a0b\u3002\n\u4ece\u7406\u8bba\u4e0a\u770b\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u5408\u4e4e\u903b\u8f91\u548c\u6e05\u6670\u7684\u8fc7\u7a0b\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e9b\u6b65\u9aa4\uff1a\u62c6\u5206\u3001\u7f16\u8f91\u4f60\u7684\u60f3\u6cd5\uff0c\u518d\u91cd\u65b0\u7ed1\u5b9a\uff0c\u76f4\u5230\u4f60\u627e\u5230\u4e00\u6761\u53ef\u884c\u7684\u9053\u8def\u3002\n\u73b0\u5728\u4f60\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u5982\u4f55\u5c06\u5b83\u8f6c\u5316\u4e3a\u4f60\u53ef\u4ee5\u4e0e\u4ed6\u4eba\u5206\u4eab\u7684\u8bed\u8a00\u3002\n\u4ece\u66f4\u5e7f\u6cdb\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5199\u4f5c\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u8ba9\u67d0\u4eba\u5934\u8111\u4e2d\u4e86\u89e3\u4e00\u4e9b\u4fe1\u606f\u3002\n\u4f60\u9700\u8981\u7528\u4f60\u7684\u5927\u8111\u91cd\u73b0\u8bfb\u8005\u7684\u601d\u7ef4\u8fc7\u7a0b\u3002\u5e76\u4e14\u77e5\u9053\u5982\u4f55\u4ee5\u4e00\u79cd\u5bf9\u4ed6\u4eec\u6765\u8bf4\u5408\u4e4e\u903b\u8f91\u548c\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u5efa\u7acb\u4f60\u7684\u4fe1\u606f\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u4e0e\u4f60\u6700\u521d\u60f3\u51fa\u8fd9\u4e2a\u4e3b\u610f\u65f6\u6240\u7ecf\u5386\u7684\u4e8b\u60c5\u6ca1\u6709\u591a\u5927\u5173\u7cfb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f3a\u8feb\u8bfb\u8005\u8d70\u4f60\u539f\u6765\u8d70\u7684\u90a3\u6761\u8def\u4f1a\u4ea7\u751f\u76f8\u53cd\u7684\u6548\u679c\uff0c\u9020\u6210\u66f4\u591a\u7684\u56f0\u60d1\u3002\n\u56e0\u4e3a\u5148\u524d\u7684\u53d9\u8ff0\u5f15\u5bfc\u4f60\u4ea7\u751f\u4e86\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u4f60\u4f1a\u8054\u60f3\u5230m&gt\uff1bx\n\u5f53\u4f60\u6821\u5bf9\u7684\u65f6\u5019\uff0c\u4f60\u5fc3\u91cc\u5c31\u660e\u767d\u4e86\u3002\u4e0d\u662f\u56e0\u4e3am&gt\uff1bx\uff0c\u800c\u662f\u56e0\u4e3a\u6240\u6709\u9884\u5148\u5b58\u5728\u7684\u8054\u7cfb\u3002\n\u8fd9\u4e0d\u662f\u56e0\u4e3a\u4ed6\u4eec\u4f7f\u7528\u4e86\u592a\u591a\u7684\u88ab\u52a8\u5f62\u5f0f\u6216\u5f31\u52a8\u8bcd(\u8fd9\u4e5f\u65e0\u6d4e\u4e8e\u4e8b)\uff0c\u800c\u662f\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u80fd\u4ece\u8bfb\u8005\u7684\u89d2\u5ea6\u6765\u5199\u4f5c\u3002\u5927\u591a\u6570\u4f5c\u54c1\u7f3a\u4e4f\u57fa\u672c\u7684\u903b\u8f91\u987a\u5e8f\u548c\u7ed3\u6784\u3002\n\u4e0a\u4e0b\u6587\u662f\u4f60\u53ef\u4ee5\u5728\u51e0\u4e4e\u6240\u6709\u5730\u56fe\u4e0a\u770b\u5230\u7684\u4f60\u5728\u8fd9\u91cc\u7684\u7ea2\u8272\u7bad\u5934\u3002\u826f\u597d\u7684\u4fe1\u606f\u80cc\u666f\u6709\u52a9\u4e8e\u8bfb\u8005\u8bbe\u5b9a\u6846\u67b6\uff0c\u7406\u89e3\u4ed6\u4eec\u4e0b\u4e00\u6b65\u8981\u8bfb\u7684\u5185\u5bb9\u3002\n\u5bf9\u57fa\u672c\u539f\u5219\u7f3a\u4e4f\u5171\u8bc6\u5f88\u5bb9\u6613\u5bfc\u81f4\u5bf9\u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u4ea7\u751f\u7247\u9762\u7406\u89e3\u6216\u51b2\u7a81\u3002\n70\u5e74\u4ee3\u7684\u9ea6\u80af\u9521\u987e\u95ee\u82ad\u82ad\u62c9\u00b7\u660e\u6258(Barbara Minto)\u7528\u5979\u6240\u8c13\u7684SCQA\u6846\u67b6\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5979\u5c06\u8fd9\u4e2a\u6846\u67b6\u547d\u540d\u4e3a\u60c5\u5883-\u590d\u6742-\u95ee\u7b54\u6846\u67b6\u3002\u4f60\u53ef\u4ee5\u5728\u5979\u7684\u4e66\u300a\u91d1\u5b57\u5854\u539f\u7406\u300b\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u5185\u5bb9\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u4f60\u77e5\u9053\u8bfb\u8005\u4f1a\u540c\u610f\u7684\u4e3b\u9898\uff0c\u60c5\u51b5\u662f\u4e00\u4e2a\u6ca1\u6709\u4e89\u8bae\u7684\u9648\u8ff0\uff0c\u56e0\u4e3a\u8fd9\u662f\u4ed6\u5df2\u7ecf\u77e5\u9053\u7684\u4e8b\u60c5\u3002\u901a\u8fc7\u603b\u7ed3\u4ed6\u5df2\u7ecf\u77e5\u9053\u7684\u5185\u5bb9\uff0c\u60c5\u51b5\u786e\u5b9a\u4e86\u60a8\u7684\u6587\u6863\u8981\u56de\u7b54\u7684\u95ee\u9898\u7684\u76f8\u5173\u6027\u3002\n\u8fd9\u4e00\u590d\u6742\u60c5\u51b5\u63cf\u8ff0\u4e86\u4e00\u79cd\u7a33\u5b9a\u5f62\u52bf\u7684\u53d8\u5316\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u79cd\u6539\u53d8\u7eaf\u7cb9\u662f\u57fa\u4e8e\u4e8b\u5b9e\u7684\u3002\u60c5\u5883\u548c\u590d\u6742\u6027\u7684\u7ed3\u5408\u5e94\u8be5\u4f1a\u628a\u8bfb\u8005\u5f15\u5411\u4e00\u4e2a\u8feb\u5728\u7709\u776b\u7684\u95ee\u9898\u3002\n\u8fd9\u4e2a\u95ee\u9898\u4ee3\u8868\u4e86\u5bf9\u590d\u6742\u60c5\u51b5\u7684\u76f4\u89c2\u53cd\u5e94\u3002\u6700\u597d\u7684\u60c5\u666f\u590d\u6742\u5316\u60c5\u666f\u4f1a\u8ba9\u8fd9\u4e2a\u95ee\u9898\u542c\u8d77\u6765\u5b8c\u5168\u662f\u591a\u4f59\u7684\u3002\u6700\u597d\u7684\u95ee\u9898\u4e0d\u662f\u63d0\u51fa\u7684\uff0c\u800c\u662f\u6d6e\u73b0\u51fa\u6765\u7684\u3002\n\u7b54\u6848\u662f\u5bf9\u4f60\u7684\u4e3b\u8981\u601d\u60f3\u7684\u6982\u62ec\u3002\u5f53\u5fc3\uff0c\u8fd9\u662f\u89e3\u51b3\u4e4b\u9053\uff0c\u800c\u4e0d\u662f\u89e3\u91ca\u4e4b\u9053\u3002\u597d\u7684\u7b54\u6848\u901a\u5e38\u6709\u56db\u5206\u4e4b\u4e09\u7684\u8981\u70b9\u3002\u4e0d\u518d\u3002\n\u5982\u679c\u60a8\u659c\u89c6\u5b83\uff0c\u60a8\u4f1a\u610f\u8bc6\u5230SCQA\u6846\u67b6\u7684\u521d\u59cb\u6a21\u5f0f\u98a0\u5012\u4e86\u3002\n\u4f7f\u7528SCQA\u6846\u67b6\u6784\u5efa\u4fe1\u606f\u73af\u5883\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u597d\u5904\u662f\uff0c\u4e00\u65e6\u4f60\u6392\u9664\u4e86\u6700\u521d\u7684\u969c\u788d\uff0c\u4f60\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u7cbe\u529b\u96c6\u4e2d\u5728\u9610\u8ff0\u548c\u652f\u6301\u4e3a\u4ec0\u4e48\u5b83\u662f\u6b63\u786e\u7684\u7406\u7531\u4e0a\u3002\n\u786e\u4fdd\u4f60\u548c\u4f60\u7684\u8bfb\u8005\u5728\u4f60\u5f15\u5bfc\u4ed6\u601d\u8003\u4e4b\u524d\u5904\u4e8e\u540c\u4e00\u4f4d\u7f6e\u662f\u4e00\u4e2a\u5fc5\u8981\u6761\u4ef6\uff0c\u4f46\u4e0d\u662f\u5145\u5206\u6761\u4ef6\u3002\n\u4e00\u65e6\u4ed6\u610f\u8bc6\u5230\u4f60\u7684\u4e3b\u8981\u60f3\u6cd5(\u7b54\u6848)\u7684\u8981\u65e8\uff0c\u4f60\u5c31\u9700\u8981\u4e89\u8fa9\u5e76\u652f\u6301\u5b83\u3002\u8fd9\u5c31\u662f\u4f60\u9700\u8981\u4e13\u6ce8\u4e8e\u4fe1\u606f\u89e3\u6790\u7684\u65f6\u5019\u3002\n\u628a\u4fe1\u606f\u5206\u8fa8\u7387\u770b\u4f5c\u662f\u4f60\u80fd\u591f\u63d0\u4f9b\u7ed9\u8bfb\u8005\u7684\u7ec6\u8282\u7684\u5bc6\u5ea6\u6c34\u5e73\u3002\u7b54\u6848\u8d8a\u5927\u80c6\uff0c\u5bf9\u5206\u8fa8\u7387\u7684\u8981\u6c42\u5c31\u8d8a\u9ad8\u3002\n\u5982\u679c\u4f60\u7c89\u9970\u5173\u952e\u7684\u91cd\u8981\u6bb5\u843d\uff0c\u4eba\u4eec\u4e0d\u4f1a\u8ddf\u968f\u4f60\u7684\u60f3\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4fe1\u606f\u6709\u90e8\u5206\u7406\u89e3\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e3a\u4ec0\u4e48/\u5982\u4f55\u5bf9\u8bdd\u7684\u5f62\u5f0f\u6765\u652f\u6301\u60a8\u7684\u521d\u59cb\u7b54\u6848\u3002\u53d1\u8868\u8bfb\u8005\u4e0d\u77e5\u9053\u7684\u5f00\u573a\u767d\uff0c\u4f1a\u81ea\u52a8\u5728\u4ed6\u7684\u8111\u6d77\u4e2d\u63d0\u51fa\u4e00\u4e2a\u903b\u8f91\u95ee\u9898\u3002\u90a3\u4ef6\u4e8b\u600e\u4e48\u53ef\u80fd\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bf4\u6211\uff1f\u5728\u4f60\u63a5\u4e0b\u6765\u7684\u56de\u7b54\u4e2d\uff0c\u4f60\u5f88\u53ef\u80fd\u4f1a\u544a\u8bc9\u4ed6\u5176\u4ed6\u4ed6\u4e0d\u77e5\u9053\u7684\u7ec6\u8282\uff0c\u8fd9\u4f1a\u5f15\u53d1\u4f60\u8981\u56de\u7b54\u7684\u66f4\u591a\u95ee\u9898\u3002\u8bf8\u82e5\u6b64\u7c7b\u3002\n\u4f5c\u8005\u5c06\u7ee7\u7eed\u5199\u4f5c\uff0c\u63d0\u51fa\u548c\u56de\u7b54\u95ee\u9898\uff0c\u76f4\u5230\u4ed6\u5224\u65ad\u8bfb\u8005\u5c06\u6ca1\u6709\u66f4\u591a\u7684\u903b\u8f91\u95ee\u9898\u3002\n\u4e3a\u4ec0\u4e48/\u5982\u4f55\u5bf9\u8bdd\u7684\u7eb5\u5411\u5173\u7cfb\u6709\u52a9\u4e8e\u5438\u5f15\u8bfb\u8005\u7684\u6ce8\u610f\u529b\u3002\u4f5c\u4e3a\u4e00\u540d\u4f5c\u5bb6\uff0c\u5b83\u5141\u8bb8\u4f60\u5efa\u7acb\u4e00\u79cd\u5185\u5fc3\u7684\u5bf9\u8bdd\uff0c\u8fd9\u4f1a\u8ba9\u4ed6\u5bf9\u4f60\u7684\u63a8\u7406\u4ea7\u751f\u6781\u5927\u7684\u5174\u8da3\u3002\u8bfb\u8005\u5c06\u88ab\u8feb\u5bf9\u4f60\u7684\u60f3\u6cd5\u505a\u51fa\u5408\u4e4e\u903b\u8f91\u7684\u56de\u5e94\u3002\n\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u7ed5\u6ee1\u4e00\u5708\u3002\u6211\u4eec\u73b0\u5728\u5904\u4e8e(\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684)\u62c6\u5206\u9636\u6bb5\u3002\n\u6709\u4e86\u6211\u4eec\u7684SCQA\u6846\u67b6\u548c\u4e3a\u4ec0\u4e48/\u5982\u4f55\u5782\u76f4\u5f00\u53d1\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e9b\u771f\u5b9e\u4f8b\u5b50\u7684\u6846\u67b6\u3002\n\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u4e4b\u4e00\u3002\u5e38\u89c1\u7684\u4f8b\u5b50\u3002\u9500\u552e\u4eba\u5458\u5728\u4e0e\u5ba2\u6237\u4ea4\u8c08\u540e\uff0c\u5728#PRODUCT\u6216#ENGING SLACK\u9891\u9053\u4e2d\u6253\u65ad\uff0c\u8981\u6c42\u5b9e\u73b0\u7ed9\u5b9a\u7684\u529f\u80fd\u3002\n\u5982\u679c\u60a8\u66fe\u62c5\u4efb\u8fc7\u6b64\u804c\u4f4d\uff0c\u4ee5\u4e0b\u662f\u5982\u4f55\u5c06\u4ea7\u54c1\u7684\u5185\u90e8\u529f\u80fd\u8bf7\u6c42\u7f29\u5c0f\u5316\u7684\u65b9\u6cd5\uff1a\n\u590d\u6742\uff1a\u7136\u800c\uff0c\u7ade\u4e89\u5bf9\u624bX\u73b0\u5728\u5df2\u7ecf\u63a8\u51fa\u4e86\u8fd9\u6837\u7684\u5b9a\u5236\u529f\u80fd\uff0c\u800c\u6211\u4eec\u4e5f\u56e0\u6b64\u5931\u53bb\u4e86\u4ea4\u6613\u3002\n\u95ee\u9898\uff1a\u6211\u4eec\u73b0\u5728\u9700\u8981\u51b3\u5b9a\u662f\u5426\u4e5f\u5141\u8bb8\u67d0\u79cd\u5b9a\u5236\u3002\n\u6307\u4ee4\u662f\u6700\u5e38\u89c1\u7684\u5185\u90e8\u5907\u5fd8\u5f55\u3002\u9ad8\u7ba1\u4eec\u5199\u8fd9\u4e9b\u4fe1\u662f\u4e3a\u4e86\u5411\u67d0\u4eba\u63d0\u51fa\u8981\u6c42\u3002\n\u60c5\u51b5\uff1a\u5982\u60a8\u6240\u77e5\uff0c\u6211\u4eec\u6b63\u5728\u4e3a\u4e2d\u578b\u4f01\u4e1a\u91cd\u65b0\u5b9a\u4f4d\u4ea7\u54c1x\u3002\u6211\u4eec\u9700\u8981\u6559\u4f60\u5982\u4f55\u8ba1\u7b97100\u5230200\u540d\u5458\u5de5\u4e4b\u95f4\u7684\u7ec4\u7ec7\u7684x\u3002\n\u590d\u6742\u6027\uff1a\u6211\u4eec\u4ee5\u524d\u4ece\u672a\u5411\u8fd9\u7c7b\u5ba2\u6237\u9500\u552e\u8fc7\u4ea7\u54c1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u65b0\u7684\u5ba2\u6237\u914d\u7f6e\u6587\u4ef6\u3002\n\u60c5\u51b5\uff1a\u5728\u8fc7\u53bb\u7684\u4e24\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u7684\u6d41\u5931\u7387\u6709\u6240\u4e0a\u5347\u3002\u4e0e\u53bb\u5e74\u76f8\u540c(\u8c03\u6574\u540e)\u7684\u6c34\u5e73\u76f8\u6bd4\uff0c\u6211\u4eec\u6b63\u5728\u6d4b\u91cf\u5e74\u5ea6\u8ba1\u5212+21%\u7684\u6d41\u5931\u7387\u3002\n\u590d\u6742\u6027\uff1a\u5728\u8fd9\u4e2a\u7279\u6b8a\u7684\u65f6\u95f4\u7a97\u53e3\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u4ea7\u54c1\u66f4\u6539\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u5f88\u96be\u4ece\u91cf\u5316\u7684\u89d2\u5ea6\u6765\u7406\u89e3\u8fd9\u4e9b\u6570\u636e\u3002\n\u5728\u6211\u4eec\u5141\u8bb8\u4ed6\u4eec\u53d6\u6d88\u670d\u52a1\u4e4b\u524d\uff0c\u8981\u6c42\u4ed6\u4eec\u660e\u786e\u8bf4\u660e\u53d6\u6d88\u670d\u52a1\u7684\u539f\u56e0\u3002\n\u60c5\u5883\uff1a\u6211\u6b63\u5728\u8fdb\u884c\u6211\u4eec\u7684\u6ce8\u518c\u6d41\u7a0b\uff0c\u6211\u610f\u8bc6\u5230\u6211\u4eec\u8981\u6c42\u63d0\u4f9b\u4eba\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u751f\u65e5\u3002\n\u590d\u6742\u6027\uff1a\u4f46\u6211\u4eec\u4e0d\u4f1a\u5411\u4ed6\u4eec\u8bf4\u660e\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6c42\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\uff0c\u7528\u6237\u4f1a\u89c9\u5f97\u81ea\u5df1\u88ab\u629b\u5f03\u4e86\u3002\n\u7b54\uff1a\u5728\u8f93\u5165\u5b57\u6bb5\u4e0a\u65b9\u6dfb\u52a0\u4e00\u884c\u6587\u672c\uff0c\u8ba9\u4eba\u4eec\u77e5\u9053\u6211\u4eec\u6536\u96c6\u6b64\u4fe1\u606f\u7684\u539f\u56e0\u3002\n\u60c5\u5883\uff1a\u6211\u6ce8\u610f\u5230\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u4f7f\u7528git\u63a8\u9001\u6765\u89e3\u51b3\u5408\u5e76\u51b2\u7a81\u3002\n\u590d\u6742\u6027\uff1a\u7136\u800c\uff0c\u5982\u679c\u60a8\u4e0d\u5c0f\u5fc3\u5c06git ush-f\u8bbe\u7f6e\u4e3amaster\u5e76\u66f4\u6539\u4e86\u8fdc\u7a0b\u4e2d\u5df2\u6709\u7684\u63d0\u4ea4\uff0c\u90a3\u4e48git ush-f\u53ef\u80fd\u4f1a\u4ea7\u751f\u5f88\u591a\u95ee\u9898\u3002\n\u7b54\uff1a\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u4f7f\u7528git ush-f\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff1a\n\u6700\u7ec8\u7ed3\u679c\u4e0e\u60a8\u6267\u884cgit\u62c9\u5165\u76f8\u540c--rebase Origin/master\u548cgit ush-f\uff0c\u4f46\u6ca1\u6709\u5f3a\u5236\u63a8\u5165\u7684\u7f3a\u70b9(\u60a8\u53ef\u4ee5\u8ffd\u6eaf\u5730\u66f4\u6539\u5386\u53f2)\u3002\n\u4f1a\u9762\u53ef\u80fd\u662f\u597d\u4e8b\uff0c\u4e5f\u53ef\u80fd\u662f\u574f\u4e8b\u3002\u4e0d\u7ba1\u4f60\u7684\u516c\u53f8\u5bf9\u4f1a\u8bae\u91c7\u53d6\u4f55\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u4f60\u4e0e\u4ed6\u4eec\u5206\u4eab\u9700\u8981\u53ec\u5f00\u8fd9\u6b21\u4f1a\u8bae\u7684\u539f\u56e0\uff0c\u4ed6\u4eec\u4f1a\u89c9\u5f97\u66f4\u6709\u6548\u7387\u3002\n\u60c5\u5883\uff1a\u5e02\u573a\u8425\u9500\u548c\u8bbe\u8ba1\u56e2\u961f\u6b63\u5728\u4e3a\u65b0\u7684\u4efb\u52a1\u63a7\u5236\u9879\u76ee\u5de5\u4f5c\u3002\u8425\u9500\u56e2\u961f\u5df2\u7ecf\u4e3a\u8425\u9500\u9875\u9762\u5b9a\u7a3f\u4e86\u65b0\u7248\u672c\u7684\u526f\u672c\u3002\n\u7b54\uff1a\u4e24\u4e2a\u56e2\u961f(\u5e02\u573a\u90e8\u548c\u8bbe\u8ba1\u90e8)\u53ef\u4ee5\u5728\u4e0b\u5468\u4e2d\u665a\u4e9b\u65f6\u5019\u53ec\u5f00\u4e00\u6b21\u5ba1\u67e5\u4f1a\u8bae\uff0c\u5171\u540c\u5ba1\u67e5\u526f\u672c\u4e0a\u7684\u66f4\u6539\uff0c\u5e76\u5c06\u65b0\u7248\u672c\u5d4c\u5165\u5230\u65b0\u8bbe\u8ba1\u4e2d\u3002\n\u73b0\u5728\u6211\u4eec\u5bf9\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u6846\u67b6\u6765\u7f16\u5199\u4ee3\u7801\u6709\u4e86\u66f4\u6e05\u6670\u7684\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e9b\u57fa\u672c\u7684\u7269\u6d41\uff1a\n\u53ea\u8981\u6709\u53ef\u80fd\uff0c\u4f60\u5e94\u8be5\u5c1d\u8bd5\u5e94\u7528Minto\u7684SCQA\u3002\u8fd9\u662f\u4e0e\u4ed6\u4eba\u6c9f\u901a\u548c\u5206\u4eab\u60f3\u6cd5\u7684\u6700\u6709\u6548\u65b9\u5f0f\u3002\nPULSE\u662f\u4e00\u4e2a\u4e13\u4e3a\u957f\u65f6\u95f4\u5f02\u6b65\u5bf9\u8bdd\u800c\u8bbe\u8ba1\u7684\u5e73\u53f0\u3002\u60a8\u5728Pulse\u4e2d\u7f16\u5199\u7684\u51e0\u4e4e\u6240\u6709\u5185\u5bb9\u90fd\u5e94\u8be5\u9075\u5faa\u4e0a\u9762\u7684\u6a21\u5f0f\u3002\n\u4f8b\u5982\uff0cPulse Stream Feature-Request(\u8109\u51b2\u6d41\u7279\u5f81\u8bf7\u6c42)\u662f\u5171\u4eab\u5173\u4e8e\u65b0\u7279\u5f81\u8bf7\u6c42\u7684\u60f3\u6cd5\u7684\u516c\u5171\u6d41\u3002\n\u5b83\u5e94\u8be5\u901a\u8fc7\u8be5\u5e73\u53f0\u5f3a\u5236\u6267\u884c\u4e00\u79cd\u6807\u51c6\u65b9\u5f0f\uff0c\u4ee5\u8bf7\u6c42\u5728SCQA\u91d1\u5b57\u5854\u6846\u67b6\u4e0a\u5851\u9020\u7684\u65b0\u529f\u80fd\u3002\n\u4f7f\u7528Pulse\u8fd9\u6837\u7684\u5e73\u53f0(\u5171\u4eab\u957f\u683c\u5f0f\u7684\u5f02\u6b65\u901a\u4fe1)\u7684\u597d\u5904\u4e4b\u4e00\u662f\uff0c\u60a8\u7f16\u5199\u7684\u6240\u6709\u5185\u5bb9\u90fd\u662f\u6301\u4e45\u7684\u3002\u60a8\u5f53\u524d\u7684\u56e2\u961f\u751a\u81f3\u53ef\u4ee5\u5728\u60a8\u53d1\u5e03\u5e16\u5b50\u6570\u5e74\u540e\u53c2\u8003\u60a8\u7684\u5185\u90e8\u66f4\u65b0\u6216\u5907\u5fd8\u5f55\u3002\u5373\u5c06\u52a0\u5165\u4f60\u7684\u516c\u53f8\u6216\u56e2\u961f\u7684\u4eba\u4ece\u7b2c\u4e00\u5929\u8d77\u5c31\u53ef\u4ee5\u8fc5\u901f\u63d0\u5347\uff0c\u5e76\u6c89\u6d78\u5728\u516c\u53f8\u7684\u8bed\u6c14\u548c\u6c9f\u901a\u65b9\u5f0f\u4e2d\u3002\n\u5982\u679c\u4f60\u4f9d\u9760\u7535\u5b50\u90ae\u4ef6\u8fdb\u884c\u5185\u90e8\u6216\u5916\u90e8\u7684\u5f02\u6b65\u4ea4\u6d41\uff0c\u4f60\u5e94\u8be5\u5728\u4f60\u5199\u7684\u6bcf\u4e00\u4e2a\u95ee\u9898\u4e0a\u5b9e\u8df5\u4e0a\u9762\u7684\u6846\u67b6\u3002\n\u4f5c\u4e3a\u4e00\u540d\u804a\u5929\u5de5\u5177\uff0cSlake\u66f4\u9002\u5408\u968f\u610f\u800c\u5feb\u901f\u7684\u4ea4\u8c08\u3002\u8fd9\u5e76\u4e0d\u80fd\u4f7f\u5b83\u6210\u4e3a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0Minto\u6846\u67b6\u7684\u901a\u4fe1\u7c7b\u578b\u7684\u7406\u60f3\u5a92\u4ecb\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u7ec3\u4e60\u5b83\u7684\u7cbe\u7b80\u7248\u672c\u3002\n\u6253\u5b57\u662f\u4e00\u9879\u523b\u677f\u7684\u7ec3\u4e60\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u5f53\u4f60\u8111\u6d77\u4e2d\u6d6e\u73b0\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u771f\u5b9e\u7684\u8bcd\u8bed\u3002\n\u4f46\u50cf\u5927\u591a\u6570\u4eba\u4e00\u6837\uff0c\u5f53\u4f60\u5750\u4e0b\u6765\u65f6\uff0c\u4f60\u5bf9\u81ea\u5df1\u7684\u60f3\u6cd5\u53ea\u6709\u4e00\u4e2a\u6a21\u7cca\u7684\u6982\u5ff5\u3002\u6ca1\u6709\u4eba\u771f\u6b63\u77e5\u9053\u4ed6\u5230\u5e95\u5728\u60f3\u4ec0\u4e48\uff0c\u76f4\u5230\u4ed6\u88ab\u8feb\u5c06\u5176\u4f5c\u4e3a\u8c61\u5f81\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5199\u4f5c\u7684\u539f\u56e0\u3002\n\u5199\u4f5c\u662f\u4e00\u9879\u6d41\u7545\u7684\u7ec3\u4e60\u3002\u5b83\u662f\u4e00\u79cd\u5c06\u4f60\u7684\u60f3\u6cd5\u8c61\u5f81\u5316\u6210\u6587\u5b57\u3001\u5f62\u72b6\u6216\u4efb\u4f55\u4e1c\u897f\u7684\u65b9\u5f0f\uff0c\u8fd9\u6709\u52a9\u4e8e\u4f60\u5728\u5c06\u60f3\u6cd5\u5199\u6210\u6587\u5b57\u4e4b\u524d\u66f4\u597d\u5730\u63d0\u70bc\u5b83\u3002\n\u5728\u5f00\u59cb\u9010\u53e5\u7f16\u8f91\u6563\u6587\u4e4b\u524d\uff0c\u5148\u89e3\u51b3\u4e0e\u903b\u8f91\u987a\u5e8f\u3001\u987a\u5e8f\u548c\u9ad8\u5c42\u7ed3\u6784\u6709\u5173\u7684\u95ee\u9898\u3002\n\u5f53\u4f60\u7528\u8bed\u8a00\u8868\u8fbe\u4f60\u4e0d\u6210\u719f\u7684\u60f3\u6cd5\u7684\u90a3\u4e00\u523b\uff0c\u5b83\u5f80\u5f80\u4f1a\u5e26\u6765\u6700\u975e\u51e1\u7684\u7f8e\uff0c\u8ba9\u4f60\u5373\u4f7f\u6709\u5fc5\u8981\u4e5f\u4e0d\u613f\u4fee\u6539\u3002\u6c38\u8fdc\u4e0d\u8981\u4ece\u6253\u5b57\u5f00\u59cb\uff0c\u66f4\u4e0d\u8981\u4ece\u7f16\u8f91\u5f00\u59cb\u3002\u4e00\u65e6\u4f60\u770b\u5230\u5b83\u6253\u5370\u51fa\u6765\uff0c\u4f60\u5c31\u4f1a\u7231\u4e0a\u5b83\uff0c\u4e0d\u7ba1\u5b83\u662f\u591a\u4e48\u7684\u6742\u4e71\u65e0\u7ae0\u3002\n\u5c3d\u53ef\u80fd\u5730\u5b9e\u8df5Minto\u6846\u67b6\u3002\u6b63\u5982\u4f60\u521a\u521a\u770b\u5230\u7684\uff0c\u5b83\u4e0d\u4ec5\u9002\u7528\u4e8e\u6b63\u5f0f\u7684\u5185\u90e8\u5907\u5fd8\u5f55\u3002\u4f60\u53ef\u4ee5\u7533\u8bf7\u4efb\u4f55\u5f62\u5f0f\u7684\u4e66\u9762\u6c9f\u901a\u3002\u4ece\u60a8\u4e0a\u6b21\u7684\u4f1a\u8bae\u7b14\u8bb0\u6587\u6863\u3001\u6700\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u7535\u5b50\u90ae\u4ef6\uff0c\u751a\u81f3\u662f\u60a8\u7684\u677e\u5f1b\u6d88\u606f\u3002\n\u5e2e\u52a9\u4f60\u7ec3\u4e60SCQA\u7684\u4e00\u672c\u597d\u4e66\u662f\u300a\u4e3b\u5e2d\u5907\u5fd8\u5f55\u300b\u3002\u9605\u8bfb\u827e\u4f26\u00b7\u683c\u6797\u4f2f\u683c(Alan Greenberg)\u7684\u6240\u6709\u5907\u5fd8\u5f55\uff0c\u8bd5\u7740\u7528\u4e0a\u9762\u7684\u6846\u67b6\u91cd\u5199\u5b83\u4eec(\u5373\u4f7f\u53ea\u662f\u5728\u5fc3\u7406\u4e0a)\u3002\nSCQA\u5728\u65af\u5229\u666e\u5168\u9762\u751f\u6548\u3002\u6211\u5df2\u7ecf\u62db\u5f85\u4e86150\u591a\u4e2a\u4eba\u6765\u53c2\u52a0\u4e00\u4e2a\u6e05\u6670\u7684\u5199\u4f5c\u7814\u8ba8\u4f1a\u3002\u540d\u8a00\uff1a\u4e00\u65e6\u4f60\u770b\u8fc7SCQA\uff0c\u4f60\u5c31\u4e0d\u53ef\u80fd\u770b\u4e0d\u5230\u5b83#restructuresallemailures#\u6211\u73b0\u5728\u5230\u5904\u90fd\u770b\u5230(\u800c\u4e0d\u662f\u770b\u5230)\u5b83\uff0c\u6211\u76f8\u4fe1\u8fd9\u662f\u89e3\u51b3\u4eba\u7c7b\u6240\u6709\u95ee\u9898\u7684\u826f\u65b9\u3002#34\uff1bpic.twitter.com/gDwNU01UCY\u3002\n-\u6770\u592b\u00b7\u6e29\u65af\u5766(@Jeff_Weinstein)2019\u5e746\u670828\u65e5\u3002\n\u5f88\u9ad8\u5174\u770b\u5230\u8fd9\u4e00\u6c9f\u901a\u539f\u5219\u5f00\u59cb\u5728\u73b0\u4ee3\u7ec4\u7ec7\u4e2d\u88ab\u91c7\u7528\u3002\u6b63\u5982\u6770\u592b\u00b7\u6e29\u65af\u5766(Jeff Weinstein)\u6307\u51fa\u7684\u90a3\u6837\uff0c\u4e00\u65e6\u4f60\u770b\u5230\u8fd9\u4e2a\u6846\u67b6\u5728\u8868\u8fbe\u6e05\u6670\u65b9\u9762\u6709\u591a\u4e48\u5f3a\u5927\uff0c\u4f60\u5c31\u65e0\u6cd5\u5ffd\u89c6\u5b83\u3002", "note_en": "I&#39;ve probably read more articles on written communication in the workplace in the last two months than over the last 10 years.\n  I couldn&#39;t help but notice that many (if not all) of them questioned the same thing: the prose.\n Everyone advised to keep sentences short and to the point, use active voice and not passive\u00a0voice, use fewer commas and more periods, avoid acronyms, etc.\n Let&#39;s be clear: none of these are mistaken or wrong by any means. But this made me realize how huge the misconceptions are on what good business writing actually means.\n In fact, what separates most people from good writing has very little to do with style, grammar, local sentences structure, word selection, or even content per se.\n Most people can&#39;t write well because they don&#39;t know how to control the logical sequence in which they present their ideas.\n  In this essay we&#39;re going to dig into how you can effectively share written ideas in a way that value time and effort for others.\n   Writing an idea is always the result of two macro-steps. First, decide the point that we want want to make, and then put into words.\n To understand how we can effectively share written ideas, we need to understand first how we formulate them in the first place.\n     Every idea begins with an unbundling process. Unbundling is an act of exploration that leads to the decoupling of all the individual items of a certain subject.\n Unbundling something doesn&#39;t imply a deep understanding of it. It&#39;s more a perception of full awareness.\n In fact, you might not even know how every individual piece works, but you know they all exist in separate forms. No hidden parts.\n  Unbundling enhances our ability to observe, and this can lead us to noticing something. This can be a pattern, an insight, a novelty, or even a minor detail.\n   Only when we notice something can we start developing an idea. That&#39;s where the creative part begins. That&#39;s where you try to develop your initial cue into a fully formed idea.\n For instance, if you noticed that something was unnecessary or too complicated, you might run a simplification process. If you noticed something was missing, you go through an addition or reinforcement process.\n  Once you finish including your idea, you go through re-bundling. This is a reconstruction process. This is where you try to recompose a world that now contemplates your newly inserted idea.\n Bundling is a fundamental part because it&#39;s where you can verify if the your new world still holds up. If not, that&#39;s a signal you need to put more work in the articulation phase or what you noticed didn&#39;t lead to anything meaningful at all.\n If at the end of the re-bundling process your world does hold up, you go through a reframing process.\n On paper, this seems to be a very logical and clear process, but in reality it&#39;s much more complicated as you constantly repeat these steps of of unbundling, editing your idea, and re-bundling until you find a viable path.\n  Now that you have an idea, you need to decide how to put it into words that you can share with others.\n  From a broader point, the single goal of writing is to get some information into someone&#39;s head.\n  You need to reproduce your reader&#39;s thinking process using your brain. And know how to build up your information in a way that feels logical and makes sense to them.\n This process has very little to do with what you went through when you came up with the idea in the first place. In fact, forcing the reader through the exact same original path you took will have the opposite effect and create more confusion.\n  Because of the pre-existing narrative that led you to the idea, you associate  m -&gt; x\n When you proofread it, you mentally get it. Not because  m -&gt; x but because of all the pre-existing associations.\n  Not because they use too many passive forms or weak verbs (that doesn&#39;t help either), but because they aren&#39;t able to write from the reader&#39;s perspective. Most writings lacks the basic logical order and structure.\n     Context is the &#34; you&#39;re here&#34; red arrow that you can see on almost any maps. Good information context helps the reader set the frame to understand what they&#39;re about to read next.\n  A lack of a shared understanding on the basic principles can easily result in a partial understanding or conflict on what follows.\n  Barbara Minto, a McKinsey consultant in the 70s, solved this problem with what she called the  SCQA framework.\n She named this framework the  Situation \u2014 Complication \u2014 Question \u2014 Answer framework. You can unpack more on this topic in her book \u201cThe Pyramid Principle\u201d.\n   The  Situation is a non-controversial statement on a subject that you know the reader will agree because it&#39;s something he already knows. By summarizing what he already knows, the situation establishes the relevance of the questions that your document is going to answer.\n The  Complication describes an alteration of a stable situation. Keep in mind, this alteration is purely fact-based. The Situation-Complication combination should lead the reader to an immediate question.\n The  Question represents an intuitive response to the complication. The best Situation-Complication scenario makes the question sound totally superfluous to state. The best questions aren&#39;t posed, they emerge.\n The  Answer is the summary of your main idea. Beware, it&#39;s the solution, not the explanation of it. Good answers are typically represented by 3/4 bullet points. No more.\n If you squint at it, you realise that the SCQA framework turned out initial schema upside down.\n    Another interesting benefit of building information context using the SCQA framework is that once you&#39;ve gotten the initial part out of the way, you can focus all your energy on making and supporting the case for why it&#39;s true.\n  Ensuring you and your reader are in the same place before you lead him through your thinking is a necessary but non-sufficient condition.\n Once he&#39;s aware of the gist of your main idea (Answer), you need to argue and support it. That&#39;s when you need to focus on information resolution.\n Think of  information resolution as the density level of details that you&#39;re able to provide to the reader. The bolder the answer, the higher resolution levels it requires.\n If you gloss over key important passages, people will not follow your thinking and might have a partial understanding of the message.\n  You support your initial  Answer using the form of Why/How dialogues. Making an initial statement that the reader doesn&#39;t know will automatically raise a logical question in his mind.  How is that possible?  Why do you say that? In your following answers, you&#39;re likely to tell him other details he doesn&#39;t know and this will raise further questions that you&#39;re going to answer. And so on.\n The author will continue to write, raising and answering questions, until he reaches a point at which he judges the reader will have no more logical questions.\n The vertical relationship of a why/how dialogue helps capture the reader&#39;s attention. It permits you, as an author, to establish an inner dialog that will pull him with great interest through your reasoning. The reader will be forced to respond logically to your ideas.\n As you can see we&#39;ve not made a full circle. We&#39;re now in the (previously discussed) unbundling part.\n  Armed with our SCQA framework and the Why/How vertical development, let&#39;s look at the skeleton of some real examples.\n  It&#39;s one of the most common examples. common examples. A salesperson, after speaking with a customers, irrupts in the #product or #engineering Slack channels requesting the implementation of a given feature.\n If you&#39;ve been in this position, here&#39;s how you can Minto-ize an internal feature request for your product:\n Complication:However, competitor X has now shipped such a customization feature, and we\u2019ve been losing deals because of that.\n Questions:We now need to decide whether we want to allow some kind of customization as well.\n  Directives are the most common internal memo. Executives write them to request something of someone.\n Situation:\u00a0As you know we&#39;re repositioning product  x for mid-sized enterprise. We need to teach you how to see  x for organizations between 100 and 200 employees.\n Complication:We&#39;ve never sold to this type of customer before. Hence, we need to construct a new customer profile from scratch\n   Situation:\u00a0Our churn rates have increased in the last two months. We&#39;re measuring +21% churn for Yearly Plan compared to the same (adjusted) level last year.\n Complication:We&#39;ve made lots of product changes in this particular time window. This makes it hard to make sense of the data from a quantitive stand point.\n   Request explicit reasons for why they&#39;re canceling from our service before we let them cancel\n  Situation:\u00a0I was going through our sign-up flow and I realized that we ask for people\u2019s email address and birthday.\n Complication:But we don&#39;t give them context about why we\u2019re asking for this information, and the user can feel he has been throw off.\n  Answer:Add a line of text above the entry fields to let people know why we collect this information\n   Situation:\u00a0I&#39;ve noticed that some of you use &#34;git push -f&#34; to resolve a merge conflict.\n Complication:However, git push -f can create a lot of problems if you accidentally do it to master and change commits that are already in remote.\n  Answer:We should try to avoid using git push -f as much as possible. Here&#39;s what we can do instead:\n  The end result is the same as if you had done a git pull --rebase origin/master and git push -f, but without the downsides of a force push (you retroactively change history).\n  Meetings can be a blessing and a curse. Regardless of your company&#39;s approach to meetings, people will feel more productive if you share with them the reason why this meeting needs to take place.\n  Situation:\u00a0The Marketing and Design Teams are working on the new Mission Control project. The Marketing Team has finalized a new version of the copy for the marketing pages.\n   Answer:The two teams (Marketing and Design) can have a review meeting mid-to-late next week to review together the changes on the copy and embed the new version in the new design.\n  Now that we have a much clearer way of how to use this framework for writing, let&#39;s look at some basic logistics:\n      Whenever possible, you should try to apply Minto&#39;s SCQA. That&#39;s the most effective way to communicate and share ideas with others.\n   Pulse is a platform designed for long-form asynchronous conversations. Nearly everything you write in Pulse should follow the above schemas.\n For instance, the Pulse Stream Feature-Request is a common Stream to share ideas about new feature requests.\n It should enforce, through the platform, a standard way to request new feature that are moulded on the SCQA pyramidal framework.\n One of the nice upside of using a platform like Pulse (to share long-form async communication) is that everything you write is persistent. Your current team can reference your internal update or memo even years after you posted. People who will join your company or team can quickly ramp-up and immerse themselves into the company tone and communication style from day one.\n  If you&#39;re relying on email for internal or external asynchronous communication, you should practice the framework above on every single issue you write.\n  By virtue of being a chat, Slack is more for casual and quick conversation. This doesn&#39;t make it the ideal medium for the type of communication where we can use the above Minto framework. That being said, you can still practice a lite version of it.\n    Typing is a rigid exercise. Essentially, you translate an abstract idea into real words as they occur to your mind.\n But like most people, when you sit down you only have a hazy notion of your idea. No one really knows precisely what he thinks until he&#39;s forced to symbolize it. That&#39;s why we write.\n Writing is a fluid exercise. It&#39;s a way to symbolize your thinking into words, shapes or anything that helps you better refine your ideas before you put it into written words.\n    Solve problems related to logical sequence, ordering and high-level structure before you start editing your prose sentence by sentence.\n The minute you express your unripe idea in words it tends to take the most extraordinary beauty, making you reluctant to revise even if necessary. Never begin by typing, and even less by editing. You&#39;ll love it once you see it typed, no matter how disjointed it really is.\n  Practice the Minto framework whenever possible. As you just saw, it doesn&#39;t only apply to formal internal memos. You can apply to any form of written communication. From your last meeting notes doc, your latest status update email, or even your Slack messages.\n A great book to help you practice your SCQA is the  Chairman Memorandum. Read all of Alan Greenberg&#39;s memos and try to rewrite them (even only mentally) using the above framework.\n SCQA is in full force at Stripe. I&#39;ve hosted 150+ of us for a clear writing workshop. Quotes:  - &#34;Once you&#39;ve seen SCQA, you can&#39;t unsee it  #restructuresallemails&#34; - &#34;I&#39;m seeing (and not seeing) it everywhere now&#34; - &#34;I am convinced this is the cure for all issues in human kind&#34;  pic.twitter.com/gDwNU01UCy\n\u2014 Jeff Weinstein (@jeff_weinstein)  June 28, 2019\n It&#39;s great to start seeing this communication principle being adapted in modern organizations. As Jeff Weinstein, pointed out &#34;once you see how powerful this framework is to express clarity, you can&#39;t unsee it.&#34;", "posttime": "2020-11-10 03:35:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5199\u4f5c,writing,\u60f3\u6cd5", "title": "\u597d\u7684\u5199\u4f5c\u662f\u5173\u4e8e\u903b\u8f91\u7684\uff0c\u800c\u4e0d\u662f\u5173\u4e8e\u6587\u5b57\u7684", "title_en": "Good Writing Is About Logic, Not Words", "transed": 1, "url": "https://pulseasync.com/operators/share-written-ideas/", "via": "", "real_tags": ["\u5199\u4f5c", "writing", "\u60f3\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "67b914ad3a5c543a9084131f8482bc3d.png", "infoid": 1034117, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63d0\u4f9b\u57fa\u672c\u670d\u52a1\u5f80\u5f80\u5e94\u8be5\u6bd4\u57fa\u672c\u6536\u5165\u66f4\u6709\u6548\u7387\u3002\u56fd\u5bb6\u53ef\u4ee5\u5229\u7528\u5176\u96c6\u4e2d\u7684\u8c08\u5224\u80fd\u529b\u5728\u6807\u51c6\u5316\u5957\u9910\u4e0a\u83b7\u5f97\u66f4\u4f4e\u7684\u4ef7\u683c\uff0c\u56e0\u6b64\uff0c\u798f\u5229\u7684\u4e0b\u9650\u53ef\u4ee5\u6bd4\u4ec5\u4ec5\u91cd\u65b0\u5206\u914d\u6536\u5165\u7684\u6210\u672c\u66f4\u4f4e\uff0c\u540e\u8005\u867d\u7136\u7ed9\u4e86\u4eba\u4eec\u66f4\u591a\u7684\u4ee3\u7406\uff0c\u4f46\u66f4\u5bb9\u6613\u62ac\u9ad8\u603b\u4f53\u4ef7\u683c\uff0c\u8ba9\u4eba\u4eec\u66f4\u5bb9\u6613\u51b2\u52a8\u6d88\u8d39\u3002\u4e3a\u4e86\u4fdd\u6301\u8fd9\u6837\u4e00\u4e2a\u7cfb\u7edf\u7684\u6548\u7387\uff0c\u8fd9\u4e9b\u9879\u76ee\u5fc5\u987b\u627f\u53d7\u5065\u5eb7\u538b\u529b\uff0c\u8fd9\u4f3c\u4e4e\u662f\u901a\u8fc7\u76f8\u4e92\u7ade\u4e89\u7684\u670d\u52a1(\u4f8b\u5982\uff0c\u60f3\u60f3\u7279\u8bb8\u5b66\u6821)\u6765\u5b9e\u73b0\u7684\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u5c06\u8be5\u7cfb\u7edf\u4e0eGDP\u6216\u81ea\u7136\u8d44\u6e90\u79df\u91d1\u7684\u4e00\u5b9a\u6bd4\u4f8b\u6302\u94a9\uff0c\u4ee5\u9632\u6b62\u5931\u63a7\u7684\u589e\u957f\u548c\u503a\u52a1\u3002\u5982\u679c\u6ca1\u6709\u9489\u4f4f\u6c47\u7387\u5236\uff0c\u8d1f\u8d23\u4efb\u7684\u9009\u6c11\u53ef\u80fd\u4f1a\u8ba9\u8fd9\u4e00\u4f53\u7cfb\u4fdd\u6301\u53ef\u6301\u7eed\u53d1\u5c55\uff0c\u4f46\u65b0\u6269\u5927\u7684\u653f\u7b56\u7a97\u53e3\u603b\u662f\u5b58\u5728\u8fd9\u6837\u7684\u98ce\u9669\uff0c\u5373\u6fc0\u52b1\u653f\u5ba2\u7528\u522b\u4eba\u7684\u94b1\u8d3f\u8d42\u9009\u6c11\u3002\u867d\u7136\u518d\u5206\u914d\u53ef\u4ee5\u7acb\u5373\u4ea7\u751f\u66f4\u591a\u7684\u6548\u7528\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7a77\u4eba\u6765\u8bf4\uff0c\u4e00\u7f8e\u5143\u6bd4\u5bcc\u4eba\u66f4\u6709\u4ef7\u503c\uff0c\u4f46\u5982\u679c\u653f\u5e9c\u771f\u7684\u901a\u8fc7\u5e2e\u52a9\u6d88\u8d39\u8005\u89e3\u51b3\u534f\u8c03\u95ee\u9898\u6765\u589e\u52a0\u4ef7\u503c\uff0c\u90a3\u4e48\u518d\u5206\u914d\u5c31\u4f1a\u66f4\u6709\u6548\u7387\u3002\u5728\u4e00\u4e9b\u5730\u533a\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u964d\u4f4e\u4eba\u4eec\u5e76\u4e0d\u592a\u5728\u610f\u7684\u7ef4\u5ea6\u7684\u6807\u51c6\uff0c\u4f46\u8fd9\u4e9b\u6807\u51c6\u4ee5\u524d\u53d7\u5230\u90a3\u4e9b\u8bd5\u56fe\u201c\u53d6\u7f14\u201d\u8d2b\u56f0\u7684\u4eba\u7684\u9ad8\u5ea6\u76d1\u7ba1\uff0c\u76ee\u7684\u662f\u8ba9\u72af\u7f6a\u8fdc\u79bb\u81ea\u5df1(\u4f8b\u5982\uff0c\u6700\u5c0f\u623f\u95f4\u5927\u5c0f\uff0c\u5206\u533a\u7b49\u7b49)\u3002\u670d\u52a1\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7ade\u4e89\uff0c\u670d\u52a1\u5957\u9910\u4e5f\u53ef\u80fd\u5b58\u5728\u7ade\u4e89\u3002\u5728\u4e00\u4e2a\u6781\u7aef\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u9ad8\u5ea6\u5bb6\u957f\u5f0f\u7684\u798f\u5229\u4f53\u7cfb\uff0c\u5728\u8fd9\u4e2a\u4f53\u7cfb\u4e2d\uff0c\u56fd\u5bb6\u63d0\u4f9b\u7565\u5fae\u4f18\u5316\u7684\u996e\u98df\u3001\u533b\u7597\u4fdd\u5065\u3001\u4f4f\u623f\u7b49\uff0c\u800c\u5728\u53e6\u4e00\u4e2a\u6781\u7aef\uff0c\u56fd\u5bb6\u53ea\u4f1a\u4ee5\u4e0e\u63d0\u4f9b\u5176\u4ed6\u670d\u52a1\u76f8\u540c\u7684\u6210\u672c\u6c34\u5e73\u53d1\u653e\u57fa\u672c\u6536\u5165\u3002\u7ade\u4e89\u65b9\u9762\u6709\u52a9\u4e8e\u7f13\u89e3\u653f\u5e9c\u62bc\u6ce8\u5931\u8bef\u7684\u95ee\u9898\uff0c\u5c3d\u7ba1\u5982\u679c\u653f\u5e9c\u771f\u7684\u505a\u5f97\u5f88\u7cdf\u7cd5\uff0c\u57fa\u672c\u6536\u5165\u8ba1\u5212\u603b\u662f\u4f1a\u8d62\u7684\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u4eba\u4eec\u5c06\u5728\u7528\u5f88\u5c11\u7684\u9884\u7b97\u5f97\u5230\u4ed6\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u548c\u7528\u66f4\u5c11\u7684\u9009\u62e9\u83b7\u5f97\u66f4\u591a\u4e1c\u897f\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\u6807\u51c6\u5316\u751f\u4ea7\u6709\u5de8\u5927\u7684\u89c4\u6a21\u7ecf\u6d4e\uff0c\u6211\u4eec\u4ece\u672a\u770b\u5230\u5b83\u7684\u597d\u5904\uff0c\u56e0\u4e3a\u6d88\u8d39\u8005\u65e0\u6cd5\u7ec4\u7ec7\u8d77\u6765\u534f\u8c03\u4ed6\u4eec\u7684\u504f\u597d\uff1a\u901a\u8fc7\u51cf\u5c11\u57fa\u672c\u5fc5\u9700\u54c1\u4f9b\u5e94\u7684\u591a\u6837\u6027\uff0c\u4ed6\u4eec\u7684\u6210\u672c\u53ef\u4ee5\u88ab\u5927\u5e45\u538b\u4f4e\uff0c\u4f46\u7ecf\u6d4e\u4ecd\u7136\u53ef\u4ee5\u6709\u8bb8\u591a\u5730\u4f4d\u7ade\u4e89\u7684\u51fa\u8def\uff0c\u5728\u5176\u4ed6\u9886\u57df\u4e5f\u53ef\u4ee5\u591a\u6837\u5316\uff0c\u800c\u4e0d\u4f1a\u56fa\u6709\u5730\u63d0\u9ad8\u751f\u6d3b\u6210\u672c\u3002\u6211\u8111\u6d77\u4e2d\u6d6e\u73b0\u7684\u4e00\u4e2a\u76f8\u5173\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u6ca1\u6709\u9ad8\u5ea6\u5bb6\u957f\u5f0f\u7684\u670d\u52a1\u6765\u5e2e\u52a9\u7a77\u4eba\u83b7\u5f97\u826f\u597d\u7684\u57fa\u7840\u5e76\u6446\u8131\u8d2b\u56f0\u3002\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5982\u679c\u4eba\u4eec\u4e0d\u5f97\u4e0d\u534f\u8c03\u4e00\u81f4\u6765\u538b\u4f4e\u4ef7\u683c\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4e0d\u8d2b\u7a77\u7684\u4eba\u5728\u8fd9\u7c7b\u6d3b\u52a8\u4e2d\u603b\u662f\u6709\u4f18\u52bf(\u4f8b\u5982\uff0c\u96c7\u4e3b\u534f\u5546\u7684\u533b\u7597\u8ba1\u5212)\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u4fe1\u606f\u4e0d\u5bf9\u79f0\uff0c\u5728\u6536\u5165\u6d41\u52a8\u6027\u548c\u7f8e\u56fd\u4e00\u6837\u5927\u7684\u81ea\u7531\u5e02\u573a\u4f53\u7cfb\u4e2d(\u8d85\u8fc7\u4e00\u534a\u7684\u4eba\u53e3\u81f3\u5c11\u5728\u4e00\u5e74\u5185\u8fbe\u5230\u6536\u5165\u6700\u9ad8\u768410%)\uff0c\u806a\u660e\u7684\u6d88\u606f\u7075\u901a\u7684\u4eba\u5df2\u7ecf\u6709\u5f88\u591a\u673a\u4f1a\u6446\u8131\u8d2b\u56f0\uff1a\u90a3\u4e9b\u4ecd\u7136\u5904\u4e8e\u8d2b\u56f0\u4e2d\u7684\u4eba\u66f4\u6709\u53ef\u80fd\u88ab\u5265\u524a\uff0c\u6ca1\u6709\u90a3\u4e48\u597d\u7684\u7f51\u7edc\uff0c\u603b\u4f53\u4e0a\u5173\u4e8e\u673a\u4f1a\u7684\u4fe1\u606f\u4e5f\u4e0d\u90a3\u4e48\u597d\u3002\u53e6\u4e00\u4e2a\u76f8\u5173\u539f\u56e0\u662f\u9006\u5411\u9009\u62e9\uff1a\u53ef\u4ee5\u6295\u8d44\u4e8e\u8d2b\u56f0\u8005\u7684\u4f53\u7cfb\u901a\u5e38\u4e0d\u4f1a\u671f\u5f85\u9ad8\u56de\u62a5\uff0c\u9664\u975e\u5b83\u4eec\u6536\u53d6\u975e\u5e38\u9ad8\u7684\u5229\u7387\uff0c\u6700\u7ec8\u5bfc\u81f4\u4eba\u4eec\u9677\u5165\u8d2b\u56f0\u3002\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u8bb8\u591a\u76d1\u7ba1\u673a\u6784\u4f1a\u963b\u6b62\u4fdd\u969c\u6027\u4f4f\u623f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f80\u5f80\u4f1a\u51cf\u5c11\u5730\u533a\u6295\u8d44\uff0c\u589e\u52a0\u72af\u7f6a\u7387\u7b49\u3002\u8003\u8651\u5230\u8fd9\u4e00\u5207\uff0c\u7f8e\u56fd\u7684\u8bb8\u591a\u798f\u5229\u653f\u7b56\u53ef\u80fd\u6bd4\u57fa\u672c\u6536\u5165\u66f4\u53ef\u53d6\uff0c\u4f46\u589e\u52a0\u57fa\u672c\u6536\u5165\u4f5c\u4e3a\u9000\u51fa\u7684\u7ade\u4e89\u6027\u9009\u62e9\uff0c\u4ee5\u53ca\u5176\u4ed6\u5f62\u5f0f\u7684\u798f\u5229\u65b9\u6848\uff0c\u4f3c\u4e4e\u4f1a\u5728\u76f8\u540c\u6216\u66f4\u4f4e\u7684\u6210\u672c\u4e0b\u4ea7\u751f\u826f\u597d\u7684\u6548\u679c\u3002\u5982\u679c\u8fd9\u4e9b\u9879\u76ee\u5fc5\u987b\u4e89\u593a\u76f8\u540c\u7684\u9884\u7b97\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u6b7b\u4ea1\uff0c\u800c\u4e0d\u662f\u88ab\u5141\u8bb8\u65e0\u9650\u671f\u5730\u7ee7\u7eed\u4e0b\u53bb\u3002\u6240\u9700\u7684\u4e3b\u8981\u6539\u9769\u5c06\u662f\u786e\u4fdd\u5e7f\u6cdb\u7684\u8d44\u683c\uff0c\u5e76\u6d88\u9664\u76ee\u524d\u5b58\u5728\u7684\u798f\u5229\u60ac\u5d16\u5e76\u963b\u788d\u5de5\u4f5c(\u8fd9\u4e9b\u5c06\u589e\u52a0\u6210\u672c)\u3002\u6709\u4e86\u8fd9\u79cd\u7ec4\u5408\uff0c\u6210\u672c\u5c31\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u964d\u4f4e\u3002", "note_en": "Providing basic services should often be more efficient than basic income. The state can use its centralized negotiating power to get lower prices on standardized packages, and accordingly a floor for welfare could be provided at a lower cost than just redistributing income, which, though it gives people more agency, can more easily just inflate prices generally and leave people more liable to impulse spending. To keep such a system efficient, there must be fitness pressure on the programs, plausibly via competing services (e.g. think of charter schools) and you probably want to peg the system to some percentage of GDP or natural resource rents to prevent uncontrolled growth and debt. Without a peg, responsible voters may keep the system sustainable, but there will always be the risk of the newly expanded policy window incentivizing politicians to bribe voters with other\u2019s money. While redistribution can generate more utility right away since a dollar is worth more to a poor person than a rich person, it is more efficient yet if the government actually adds value by helping consumers solve their coordination problems.  In some areas, that probably means lowering standards on dimensions that people don\u2019t care about too much, but that have previously been highly regulated by those trying to \u201coutlaw\u201d poverty in order to keep crime away from themselves (e.g. room size minimums, zoning, etc.) There could be competition between services, and also packages of services. At one extreme, there could be a highly paternalistic welfare system, where the state is providing a somewhat optimized diet, healthcare, housing, etc. while at the other extreme the state would just grant basic income at the same cost level it could have provided the other services. The competition aspect helps mitigate the problems of government placing bad bets, though if the government does a really bad job the basic income plan would always win. Essentially, people would be choosing between getting exactly what they want on a small budget, vs. getting more stuff with less choice. There are  massive economies of scale to standardized production that we never see the benefits of because consumers can\u2019t organize to coordinate their preferences: by reducing variety in the provision of basic necessities their cost can be driven down massively, but the economy can still have many outlets for status competition, and variety in other areas without inherently raising the cost of living.  A related question that comes to mind is why there aren\u2019t already highly paternalistic services that help the poor get a good foundation and get out of poverty. One reason is that if people have to coordinate to drive down prices, it is pretty likely that people who aren\u2019t poor will always have an advantage at such activities (e.g. employer negotiated healthcare plans). Another reason is information asymmetry, in free market system with as much income mobility as the U.S. ( more than half the population reaches the top 10% of income earners for at least a year) smart well informed people already have lots of opportunities to escape poverty: those remaining in poverty are more likely to be exploitable, have less good networks, and less good information on opportunities generally. Adverse selection is another related reason: systems that could invest in those in poverty often won\u2019t anticipate high returns unless they charge very high interest rates which end up keeping people in poverty, and as mentioned before, many regulators will block affordable housing units since they will tend to decrease regional investment, increase crime, etc.   With all this in mind, a lot of U.S. welfare policies are probably preferable to basic income, but adding basic income as an opt-out competing choice, as well as other forms of welfare packages seems like it would have a good effect, AT THE SAME OR LOWER COST, if the programs must compete for the same budget and can actually die rather than being allowed to continue indefinitely. The main changes required would be ensuring eligibility is broad, and getting rid of the welfare cliffs that currently exist and discourage work (these would increase costs). With the combination, costs are driven down over time.", "posttime": "2020-11-10 03:35:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u672c,basic,\u53ef\u80fd", "title": "\u63d0\u4f9b\u57fa\u672c\u670d\u52a1\u5e94\u8be5\u6bd4\u5168\u6c11\u57fa\u672c\u6536\u5165\u66f4\u6709\u6548\u7387", "title_en": "Providing basic services should be more efficient than universal basic income", "transed": 1, "url": "https://theconsequentialist.wordpress.com/2020/11/09/competitive-universal-basic-services/", "via": "", "real_tags": ["\u57fa\u672c", "basic", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "b262b7b6a459572d5a601a48d6be2990.jpg", "infoid": 1034116, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5b98\u65b9\u9009\u4e3e\u7ed3\u679c\u516c\u5e03\u540e\u7684\u51e0\u5929\u91cc\uff0c\u5e15\u52d2\u5728\u82f9\u679c\u5e94\u7528\u5546\u5e97\u548c\u8c37\u6b4cPlay\u5546\u5e97\u7684\u6392\u884c\u699c\u4e0a\u4e00\u98de\u51b2\u5929\u3002\u5468\u4e00\uff0c\u4e00\u6b3e\u540d\u4e3a\u201c\u5e15\u6d1b\u5c14\u201d\u7684\u5b89\u5353\u5e94\u7528\u7a0b\u5e8f\u4e5f\u8d70\u7ea2\uff0c\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u5bf9\u5e15\u52d2\u5c14\u7684\u641c\u7d22\u51fa\u73b0\u4e86\u62fc\u5199\u9519\u8bef\u3002\n\u4e54\u00b7\u62dc\u767b(Joe Biden)\u5728\u5468\u516d\u83b7\u80dc\uff0c\u62ff\u4e0b\u5173\u952e\u7684\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde(Pennsylvania)\uff0c\u6210\u4e3a\u5f53\u9009\u603b\u7edf\u3002\u5728\u62dc\u767b\u83b7\u80dc\u4e4b\u524d\uff0c\u7531\u4e8e\u7279\u6717\u666e\u4e00\u518d\u62a8\u51fb\u7f8e\u56fd\u5927\u9009\u8fdb\u7a0b\uff0c\u4e3a\u671f\u4e94\u5929\u7684\u7d27\u5f20\u8ba1\u7968\u5de5\u4f5c\u521a\u521a\u7ed3\u675f\u3002\n\u6839\u636e\u4f20\u611f\u5668\u5854\u7684\u79fb\u52a8\u5e94\u7528\u5e02\u573a\u5206\u6790\uff0c11\u67087\u65e5(\u661f\u671f\u516d)\uff0c\u5e15\u52d2\u5728\u5e94\u7528\u5546\u5e97\u6392\u540d\u7b2c\u4e03\u3002\u5230\u4e86\u7b2c\u4e8c\u5929\uff0c\u5b83\u98d9\u5347\u5230\u4e86\u7b2c\u4e00\u540d--\u8fd9\u662f\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u7b2c\u4e00\u6b21\u3002\u5b83\u73b0\u5728\u4ecd\u7136\u4f4d\u5c45\u699c\u9996\uff0c\u800c\u4e00\u5468\u524d\uff0c\u5b83\u5728\u4e0b\u8f7d\u91cf\u6392\u540d1023\u4f4d\u3002\n\u8c37\u6b4c\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u5e02\u573a\u7684\u60c5\u51b5\u4e5f\u7c7b\u4f3c\uff0cparler\u4ece\u5468\u516d\u7684\u7b2c51\u4f4d\u6500\u5347\u81f3\u5468\u65e5\u7684\u7b2c5\u4f4d\uff0c\u5728\u4eca\u5929\u7684\u6392\u540d\u4e2d\u9ad8\u5c45\u699c\u9996\u3002\u798f\u514b\u65af\u65b0\u95fb(Fox News)\u7684\u7ade\u4e89\u5bf9\u624bNewsmax TV\u548c\u81ea\u79f0\u201c\u4e0b\u4e00\u4ee3\u793e\u4ea4\u7f51\u7edc\u201d\u7684Mewe\u4e5f\u8dfb\u8eab\u8c37\u6b4c\u524d\u4e94\u540d\u3002\n\u5e15\u52d2\u7684\u4e0a\u5347\u662f\u503c\u5f97\u6ce8\u610f\u7684\uff0c\u4f46\u5e76\u4e0d\u662f\u5168\u65b0\u7684\u3002\u968f\u7740Twitter\u548cFacebook\u505a\u51fa\u7684\u6bcf\u4e00\u9879\u65b0\u5e73\u53f0\u653f\u7b56\u53d8\u5316\uff0c\u9884\u8ba1\u7981\u4ee4\u4f1a\u88ab\u7981\u6b62\u7684\u8d26\u6237\u4e00\u76f4\u5728\u5c06\u4ed6\u4eec\u7684\u8ffd\u968f\u8005\u5f15\u5411Parler\u548c\u5176\u4ed6\u6781\u53f3\u7ffc\u907f\u98ce\u6e2f\u3002\u81ea\u79f0\u201c\u8a00\u8bba\u81ea\u7531\u793e\u4ea4\u7f51\u7edc\u201d\u7684Facebook Gab\u4e5f\u5728\u4e89\u593a\u7279\u6717\u666e\u7684\u5fe0\u8bda\u8005\u3002\nGab\u9996\u5e2d\u6267\u884c\u5b98\u5b89\u5fb7\u9c81\u00b7\u6258\u5c14\u5df4\u5468\u65e5\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff1a\u201c\u76f8\u4fe1\u53ea\u6709\u5c11\u6570\u51e0\u5bb6\u7845\u8c37\u516c\u53f8\u5c06\u6c38\u8fdc\u5b8c\u5168\u63a7\u5236\u4fe1\u606f\u3001\u901a\u4fe1\u548c\u65b0\u95fb\u7684\u6d41\u52a8\uff0c\u8fd9\u7b80\u76f4\u662f\u75af\u4e86\u3002\u201d\u6258\u5c14\u5df4\u57282016\u5e74\u5927\u9009\u540e\u4e0d\u4e45\u5c31\u56e0\u5a01\u80c1\u8a00\u8bba\u548c\u9a9a\u6270\u800c\u88abY Combinator\u7684\u6821\u53cb\u7f51\u7edc\u5f00\u9664\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u6709\u4eba\u547c\u5401\u5927\u89c4\u6a21\u64a4\u79bb\uff0c\u4f46\u8bb8\u591a\u6307\u8d23Twitter\u548cFacebook\u5ba1\u67e5\u5236\u5ea6\u7684\u77e5\u540d\u4fdd\u5b88\u6d3e\u4eba\u58eb\u4ecd\u4fdd\u7559\u4e86\u4ed6\u4eec\u5728\u8fd9\u4e9b\u5e73\u53f0\u4e0a\u7684\u5b58\u5728\uff0c\u56e0\u4e3a\u4ed6\u4eec\u77e5\u9053\uff0c\u4ed6\u4eec\u5728\u66ff\u4ee3\u793e\u4ea4\u7f51\u7edc\u4e0a\u7684\u89e6\u89d2\u5c06\u53d7\u5230\u6781\u5927\u9650\u5236\u3002\n\u798f\u514b\u65af\u65b0\u95fb\u64b0\u7a3f\u4eba\u3001\u7279\u6717\u666e\u7684\u72c2\u70ed\u62e5\u8db8\u4e39\u00b7\u90a6\u5409\u8bfa\u4e0a\u5468\u547c\u5401\u4ed6\u81ea\u5df1\u7684\u652f\u6301\u8005\u642c\u5230\u8c08\u5224\u53f0\u4e0a\uff0c\u8b66\u544a\u8bf4\u201cFAKBOOK\u201d\u53ef\u80fd\u4f1a\u5bf9\u4ed6\u7684\u4e3b\u9875\u4e0d\u5229\u3002\u5728Facebook\u4e0a\uff0c\u535a\u5409\u8bfa\u7684\u5185\u5bb9\u7ecf\u5e38\u4f4d\u5c45\u8be5\u5e73\u53f0\u4e0a\u8868\u73b0\u6700\u597d\u7684\u5e16\u5b50\u4e4b\u5217\uff0c\u4ed6\u7684\u9875\u9762\u62e5\u6709\u8fd1400\u4e07\u7c89\u4e1d\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u535a\u5409\u8bfa\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\u4e86\u5bf9Parler\u7684\u6240\u6709\u6743\u5165\u80a1\u3002\n\u6253\u7834\ud83d\udea8\uff0c\u5b83\u6b63\u5728\u4e0b\u964d\u3002FAKBOOK\u6628\u5929\u8ffd\u67e5\u9a6c\u514b\u00b7\u83b1\u6587\u7684\u9875\u9762\uff0c\u4eca\u665a\u4ed6\u4eec\u8ffd\u67e5\u6211\u7684\u9875\u9762\u3002\u5982\u679c\u6211\u7684\u9875\u9762\u4eca\u665a\u6216\u672a\u6765\u51e0\u5929\u88ab\u5220\u9664\uff0c\u8bf7\u5728\u201cdbongino\u201d\u4e0a\u627e\u5230\u6211\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u7279\u6717\u666e\u7ade\u9009\u56e2\u961f\u6b63\u5728\u4e3a\u4e00\u4e2a\u201c\u9009\u4e3e\u9632\u5fa1\u7279\u522b\u5de5\u4f5c\u7ec4\u201d\u7b79\u96c6\u6350\u6b3e\uff0c\u4f46\u6839\u636e\u7ec6\u5219\uff0c\u6bcf\u7b14\u6350\u6b3e\u7684\u4e00\u534a\u5c06\u7528\u4e8e\u73b0\u6709\u503a\u52a1\u3002\u8fd9\u573a\u8fd0\u52a8\u6700\u8fd1\u4f3c\u4e4e\u6ca1\u6709\u5728\u8fd9\u4e2a\u5229\u57fa\u793e\u4ea4\u7f51\u7edc\u4e0a\u521b\u9020\u591a\u5c11\u539f\u521b\u5185\u5bb9\uff0c\u800c\u662f\u4e00\u904d\u53c8\u4e00\u904d\u5730\u8f6c\u53d1\u975e\u5e38\u76f8\u4f3c\u7684\u4fe1\u606f\u3002\n\u5bf9\u4e8e\u8bb8\u591a\u7279\u6717\u666e\u7684\u652f\u6301\u8005\u6765\u8bf4\uff0c\u4ed6\u4eec\u6b63\u5728\u63a8\u52a8\u6709\u5173\u5927\u9009\u7684\u5371\u9669\u865a\u5047\u8a00\u8bba\uff0c\u8fd9\u662f\u4e0d\u7965\u4e4b\u5146\u3002\u5728\u5927\u9009\u524d\u7684\u51e0\u4e2a\u6708\u91cc\uff0cFacebook\u8fc5\u901f\u505a\u51fa\u4e86\u4e00\u7cfb\u5217\u653f\u7b56\u8c03\u6574\uff0c\u53d6\u7f14\u4e86Qanon\uff0c\u6253\u51fb\u66b4\u529b\u6c11\u5175\u7ec4\u7ec7\uff0c\u5e76\u5f15\u5165\u4e86\u65b0\u7684\u5de5\u5177\u6765\u51cf\u7f13\u865a\u5047\u4fe1\u606f\u7684\u4f20\u64ad\u3002\u8fc7\u53bb\u56db\u5e74\uff0c\u865a\u5047\u4fe1\u606f\u5728\u8fd9\u5bb6\u793e\u4ea4\u7f51\u7edc\u4e0a\u4e0d\u65ad\u4f20\u64ad\u3002\n\u968f\u7740\u7279\u6717\u666e\u4f7f\u5927\u9009\u5408\u6cd5\u5316\u7684\u52aa\u529b\u53d8\u5f97\u8d8a\u6765\u8d8a\u660e\u663e\uff0cFacebook\u8fdb\u884c\u4e86\u6253\u51fb\u3002\u8be5\u516c\u53f8\u5f00\u59cb\u9690\u85cf#StopTheSteal\u6807\u7b7e\u7684\u641c\u7d22\u7ed3\u679c\uff0c\u5e76\u5220\u9664\u4e86\u5176\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u7fa4\u7ec4\uff0c\u539f\u56e0\u662f\u4e00\u4e9b\u6210\u5458\u53d1\u51fa\u4e86\u201c\u547c\u5401\u66b4\u529b\u201d\u7684\u547c\u5401\u3002\n\u5c3d\u7ba1\u8d25\u9009\uff0c\u4f46\u7279\u6717\u666e\u603b\u7edf\u62d2\u7edd\u5728\u9009\u4e3e\u4e2d\u8ba9\u6b65\u3002\u4f46\u5230\u4e86\u5468\u4e00\uff0c\u62dc\u767b\u7684\u8fc7\u6e21\u56e2\u961f\u5df2\u7ecf\u8fdb\u5165\u9ad8\u6f6e\uff0c\u5ba3\u5e03\u4e86\u4e00\u4e2a\u51a0\u72b6\u75c5\u6bd2\u7279\u522b\u5de5\u4f5c\u7ec4\u7684\u6210\u5458\uff0c\u8be5\u5de5\u4f5c\u7ec4\u5c06\u5bfb\u6c42\u63a7\u5236\u7279\u6717\u666e\u5931\u8d25\u7684\u81f4\u547d\u75c5\u6bd2\u3002\n\u968f\u7740\u9009\u4e3e\u7ed3\u679c\u7684\u786e\u5b9a\uff0c\u7f8e\u56fd\u653f\u5e9c\u7684\u5e9e\u5927\u673a\u5668\u7a33\u6b65\u8fc8\u54111\u6708\u4efd\u7684\u6743\u529b\u4ea4\u63a5\uff0c\u5c31\u50cf\u5b83\u5728\u6bcf\u4e00\u6b21\u9009\u4e3e\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002", "note_en": "Parler shot up the charts across Apple\u2019s App Store and the Google Play Store in the days following official election results. An Android app called \u201cParlor\u201d was also trending Monday, likely due to misspelled searches for Parler.\n Joe Biden  prevailed on Saturday, picking up the critical state of Pennsylvania to become president-elect. Biden\u2019s win followed a tense five days of vote tallying, as Trump repeatedly attacked the U.S. election process.\n   Parler sat at #7 in the App Store on Saturday, November 7, according to mobile app market analysis from Sensor Tower. By the next day, it shot up to #1 \u2014 a first for the app. It remains in the top slot now, in contrast to its position a week ago as the 1023th most downloaded app.\n The story is similar in Google\u2019s own app marketplace, where Parler climbed from #51 on Saturday to #5 on Sunday, topping out in the #1 slot today. The Fox News competitor Newsmax TV and the self-described \u201cnext-gen social network\u201d MeWe also sat in Google\u2019s top 5.\n Parler\u2019s ascent is notable but not totally new. Accounts anticipating a ban have been pointing their followers toward Parler and other far-right havens with every new platform policy change that Twitter and Facebook make.\u00a0Gab, which describes itself as \u201cthe free speech social network\u201d is also vying for Trump loyalists.\n \u201cIt\u2019s crazy to believe that only a handful of Silicon Valley companies will have complete control over the flow of information, communication, and news forever,\u201d Gab CEO Andrew Torba wrote in a blog post Sunday.\u00a0 Torba was  booted from Y Combinator\u2019s alumni network for threatening comments and harassment shortly after the 2016 election.\n But in spite of calls for a mass exodus, many prominent conservative figures accusing Twitter and Facebook of censorship have maintained their presences on the platforms, knowing that their reach would be dramatically limited on the alternative social networks.\n Fox News contributor and Trump enthusiast Dan Bongino called for his own supporters to move to Parler last week, warning that \u201cFakebook\u201d might act against his page. On Facebook, Bongino\u2019s content regularly ranks in the top performing posts on the platform and his page has nearly four million followers. Notably, Bongino announced an  ownership stake in Parler earlier this year.\n BREAKING \ud83d\udea8 It\u2019s going down.  Fakebook went after Mark Levin\u2019s page yesterday and tonight they\u2019re going after my page. If my page is taken down tonight, or in the coming days, find me on Parler at \u201cdbongino.\u201d\n Over on Parler, the Trump campaign is raising donations for an \u201celection defense task force,\u201d but according to the fine print half of every donation will go  toward existing debt. The campaign doesn\u2019t appear to have made much original content on the niche social network lately, instead reposting very similar messages over and over.\n  For the many Trump supporters pushing dangerous false claims about the election, the writing was on the wall. Facebook made a rapid-fire series of policy changes in the months preceding the election,  banning QAnon,  cracking down on violent militias and introducing new tools to  slow the spread of misinformation, which metastasized on the social network over the last four years.\n As it became clear that Trump\u2019s effort to delegitimize the election was picking up steam, Facebook cracked down. The company began hiding search results for the  #StopTheSteal hashtag and removed  one of its popular groups over \u201ccalls for violence\u201d made by some members.\n In spite of his loss, President Trump has refused to concede the election. But by Monday, Biden\u2019s transition team had already kicked into high gear, announcing members of a  coronavirus task force that will seek to rein in the deadly virus where Trump has failed.\n With election results settled, the vast machinery of the U.S. government moved steadily toward January\u2019s transfer of power, as it has in every other election.", "posttime": "2020-11-10 03:19:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f51\u7edc,speech,\u7279\u6717\u666e", "title": "\n\u62dc\u767b\u80dc\u9009\u540e\uff0c\u793e\u4ea4\u7f51\u7edc\u8c08\u5224\u8005\u201c\u8a00\u8bba\u81ea\u7531\u201d\u8363\u767b\u5e94\u7528\u5546\u5e97\u6392\u884c\u699c\u699c\u9996", "title_en": "\n\t\t\t\t\u2018Free speech\u2019 social network Parler tops app store rankings following Biden\u2019s election win\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/11/09/parler-app-store-facebook/", "via": "", "real_tags": ["\u7f51\u7edc", "speech", "\u7279\u6717\u666e"]}, {"category": "", "categoryclass": "", "imagename": "cd7e7002bc66aa3a7fb0d64b81ffe34a.jpg", "infoid": 1034115, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6770\u68ee\u00b7\u5e03\u52d2(Jason Buhle)\u662f\u5357\u52a0\u5dde\u5927\u5b66(University Of Southern California)\u5e94\u7528\u5fc3\u7406\u5b66\u9879\u76ee\u5728\u7ebf\u7406\u5b66\u7855\u58eb\u7684\u6559\u6388\uff0c\u4e5f\u662f\u4e13\u6ce8\u4e8e\u7528\u6237\u4f53\u9a8c\u7814\u7a76\u7684\u6700\u5927\u72ec\u7acb\u54a8\u8be2\u516c\u53f8AnswerLab\u7684\u7528\u6237\u4f53\u9a8c\u7b56\u7565\u603b\u76d1\u3002\n\u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u516c\u53f8\u72af\u4e0b\u7684\u4e00\u4e9b\u6700\u5927\u7684\u7528\u6237\u4f53\u9a8c\u7814\u7a76\u9519\u8bef\uff0c\u4ee5\u53ca\u6211\u5e0c\u671b\u81ea\u5df1\u5728\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5c31\u77e5\u9053\u7684\u4e00\u4e9b\u9519\u8bef\u3002\n\u5728\u8003\u8651\u4efb\u4f55\u6f5c\u5728\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u65f6\uff0c\u6700\u597d\u5c3d\u5feb\u5f97\u5230\u67d0\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u3002\u5bf9\u4e8e\u76ee\u6807\u7528\u6237\u548c\u4ed6\u4eec\u7684\u7ec4\u7ec7\u6765\u8bf4\uff0c\u8fd9\u771f\u7684\u662f\u6709\u7528\u548c\u53ef\u884c\u7684\u5417\uff1f\u4f60\u6700\u521d\u7684\u5047\u8bbe\u662f\u6b63\u786e\u7684\u5417\uff1f\u8d77\u521d\u770b\u8d77\u6765\u4e0d\u9519\u7684\u60f3\u6cd5\u5728\u7814\u7a76\u540e\u53ef\u80fd\u5e76\u4e0d\u662f\u90a3\u4e48\u597d\uff0c\u8bb8\u591a\u4eba\u666e\u904d\u6279\u8bc4\u7684\u5931\u8d25\u5f88\u53ef\u80fd\u662f\u7814\u7a76\u4e0d\u8db3\u7684\u7ed3\u679c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u4ea7\u54c1\u5f00\u53d1\u5f00\u59cb\u4e4b\u524d\u5c31\u5f00\u59cb\u7528\u6237\u7814\u7a76\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\n\u867d\u7136\u5728\u65e9\u671f\u8fdb\u884c\u57fa\u7840\u7814\u7a76\u5f88\u91cd\u8981\uff0c\u4f46\u60a8\u4e5f\u5e0c\u671b\u901a\u8fc7\u5728\u6784\u5efa\u6216\u5347\u7ea7\u4ea7\u54c1\u7684\u8fc7\u7a0b\u4e2d\u6301\u7eed\u6d4b\u8bd5\u4ea7\u54c1\u6765\u786e\u4fdd\u8fdb\u884c\u8bc4\u4ef7\u6027\u7814\u7a76\u3002\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u50cfGmail\u6216YouTube\u8fd9\u6837\u7684\u8c37\u6b4c\u4ea7\u54c1\u76f8\u5bf9\u5bb9\u6613\u4f7f\u7528\u7684\u539f\u56e0\u4e4b\u4e00\u662f\uff0c\u8c37\u6b4c\u6709\u56e2\u961f\u4e0d\u65ad\u5730\u6d4b\u8bd5\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u786e\u4fdd\u4ed6\u4eec\u7684\u7528\u6237\u77e5\u9053\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u4ed6\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u6211\u770b\u5230\u8bb8\u591a\u521d\u521b\u4f01\u4e1a\u548c\u521b\u4e1a\u8005\u72af\u4e0b\u7684\u9519\u8bef\u4e4b\u4e00(\u6211\u81ea\u5df1\u4e5f\u65e9\u4e9b\u65f6\u5019\u4e5f\u72af\u4e86\u8fd9\u4e2a\u9519\u8bef)\u5c31\u662f\u81ea\u5df1\u505a\u6240\u6709\u7684\u7528\u6237\u4f53\u9a8c\u7814\u7a76\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u50cf\u300a\u7cbe\u76ca\u521b\u4e1a\u300b(Lean Startup)\u8fd9\u6837\u7684\u4e66\u7c4d\u5f3a\u8c03\u4e86\u201c\u8d70\u51fa\u5927\u697c\u201d\u548c\u4e86\u89e3\u7528\u6237\u7684\u5fc5\u8981\u6027\uff0c\u4ece\u800c\u652f\u6301\u4e86\u8fd9\u4e00\u8d8b\u52bf\u3002\u8fd9\u672c\u8eab\u5c31\u4e0d\u662f\u4e00\u4e2a\u574f\u4e3b\u610f--\u77e5\u9053\u4f60\u7684\u7528\u6237\u662f\u8c01\uff0c\u5e76\u4e3a\u4ed6\u4eec\u7684\u4f53\u9a8c\u5efa\u7acb\u5171\u9e23\u662f\u4ef6\u597d\u4e8b\u3002\u540c\u6837\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u4f60\u4eec\u4e0d\u5e94\u8be5\u81ea\u5df1\u505a\u4efb\u4f55\u7814\u7a76\u3002\n\u7136\u800c\uff0c\u4f60\u4e5f\u5e0c\u671b\u901a\u8fc7\u8ba9\u4e13\u4e1a\u7684\u7b2c\u4e09\u65b9\u7528\u6237\u4f53\u9a8c\u7814\u7a76\u4eba\u5458\u4e3a\u4f60\u505a\u7814\u7a76\u6765\u8865\u5145\u8fd9\u4e00\u70b9\u3002\u5f53\u4f60\u5728\u4f60\u7684\u7814\u7a76\u4e0a\u6295\u5165\u4e86\u5927\u91cf\u8d44\u91d1--\u5982\u679c\u5b83\u662f\u4f60\u81ea\u5df1\u7684\u4ea7\u54c1\uff0c\u4f60\u603b\u662f\u4f1a\u8fd9\u6837--\u5f88\u96be\u4e0d\u504f\u4e0d\u501a\u5730\u8fdb\u884c\u7814\u7a76\u3002\u5f53\u4f60\u7684\u7814\u7a76\u53c2\u4e0e\u8005\u77e5\u9053\u4f60\u5728\u95ee\u4ed6\u4eec\u5173\u4e8e\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u65f6\uff0c\u4ed6\u4eec\u4e0d\u592a\u53ef\u80fd\u7ed9\u4f60\u63d0\u4f9b\u771f\u6b63\u80fd\u5e2e\u52a9\u4f60\u6539\u8fdb\u4ea7\u54c1\u7684\u597d\u4fe1\u53f7\u3002", "note_en": "Jason Buhle is a professor in the  online Master of Science in the Applied Psychology program at the University of Southern California and Director of UX Strategy at AnswerLab, the largest independent consultancy exclusively focused on  UX   research.\n  Let\u2019s look, then, at some of the biggest UX research mistakes companies make and what I wish I had known when I first started.\n  When considering any potential product or service, it\u2019s best to get certain questions answered as soon as possible. Is it actually going to be something useful and feasible for the target users and their organizations? Are your initial; assumptions correct? Ideas that seem good at first may not seem so great after research, and many  commonly criticized failures were likely results of insufficient research. This is why it\u2019s vital to begin user research early before product development has even begun.\n While it is important to conduct foundational research early on, you also want to make sure to conduct evaluative research by continuously testing your product as you build or upgrade it. One of the reasons why Google products product like Gmail or YouTube are relatively easy to use for most people is that Google has teams continuously testing their products, making sure that their users know where to find what they\u2019re looking for.\n  One of the mistakes I see many startups and entrepreneurs make (and that I myself made early on) is doing all of the UX research themselves. In some ways, books like  \u201cLean Startup\u201d\u00a0have bolstered this tendency by stressing the need to \u201cget out of the building\u201d and get to know your users. In itself this isn\u2019t a bad idea\u2014it\u2019s good to know who your users are and to build empathy for their experiences. Likewise, this isn\u2019t to say that you should not do  any research yourselves.\n However, you also want to be sure to complement that by having professional, third party UX researchers do research for you as well. When you are heavily invested in your research, as you invariably would be if it is your own product, it is difficult to conduct it in an unbiased way. And when your research participants know that you are asking them about your own project, they are not likely to provide you with good signal that can actually help you improve your product.", "posttime": "2020-11-10 03:18:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7528\u6237\u4f53\u9a8c,\u8bbe\u8ba1,\u505c\u6b62,design,\u7814\u7a76", "title": "\n5\u4e2a\u4f60\u4eca\u5929\u53ef\u4ee5\u505c\u6b62\u72af\u7684\u7528\u6237\u4f53\u9a8c\u8bbe\u8ba1\u7814\u7a76\u9519\u8bef", "title_en": "\n\t\t\t\t5 UX design research mistakes you can stop making today\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/11/09/5-ux-design-research-mistakes-you-can-stop-making-today/", "via": "", "real_tags": ["\u7528\u6237\u4f53\u9a8c", "\u8bbe\u8ba1", "\u505c\u6b62", "design", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "51ceb0d21ed58a42aee76585b13d5465.png", "infoid": 1034114, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5341\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u4f7f\u7528Net Applications\u7684NetMarketShare\u5de5\u5177\u6765\u8ddf\u8e2a\u684c\u9762\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u5e02\u573a\u3002\u6708\u5ea6\u62a5\u544a\u5728\u8861\u91cf\u54ea\u4e9b\u6d4f\u89c8\u5668\u548c\u65b0\u7248\u672c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6b63\u5728\u83b7\u5f97\u6216\u5931\u53bb\u5e02\u573a\u4efd\u989d\u65b9\u9762\u8d77\u5230\u4e86\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u672c\u5468\uff0cNet Applications\u53d1\u5e03\u4e86\u5176\u6700\u7ec8\u7684NetMarketShare\u62a5\u544a\u3002\u8fd9\u4e00\u635f\u5931\u6765\u5f97\u518d\u7cdf\u7cd5\u4e0d\u8fc7\u4e86\u3002\n\u5728Chrome\u5de9\u56fa\u4e86\u5b83\u4f5c\u4e3a\u4e16\u754c\u4e0a\u4e8b\u5b9e\u4e0a\u7684\u6d4f\u89c8\u5668\u7684\u5730\u4f4d\u4e4b\u540e\uff0c\u5e76\u6ca1\u6709\u592a\u591a\u7684\u52a8\u9759\u3002\u4f46\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5373\u5c06\u6539\u53d8\u3002Chrome\u7684\u521b\u9020\u8005\u8c37\u6b4c(Google)\u6b63\u9762\u4e34\u7f8e\u56fd\u4e00\u4ee3\u4eba\u4ee5\u6765\u6700\u5927\u7684\u53cd\u5784\u65ad\u6848\u3002Mozilla\u51e0\u4e4e\u6240\u6709\u7684\u6536\u5165\u90fd\u4f9d\u8d56\u4e8e\u8c37\u6b4c\uff0c\u5b83\u6709\u7406\u7531\u62c5\u5fc3\u4f1a\u6210\u4e3a\u201c\u9644\u5e26\u635f\u5bb3\u201d\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u706b\u72d0\u7684\u5e02\u573a\u4efd\u989d\u4f3c\u4e4e\u90fd\u5728\u4e0d\u65ad\u6d41\u5931\u3002\u76f8\u53cd\uff0c\u5f97\u76ca\u4e8e\u65b0\u7684Chromium Edge\u6d4f\u89c8\u5668\uff0c\u5fae\u8f6f\u7684\u5e02\u573a\u4efd\u989d\u6b63\u5728\u7a33\u6b65\u589e\u52a0\uff0c\u8fd9\u751a\u81f3\u5728\u5b83\u88ab\u7eb3\u5165Windows 10\u4e4b\u524d\u5c31\u5df2\u7ecf\u5f00\u59cb\u4e86\u3002\u50cfBrave\u8fd9\u6837\u7684\u65b0\u6d4f\u89c8\u5668\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u53d7\u6b22\u8fce\u3002\u54e6\uff0c\u82f9\u679c\u641c\u7d22\u5f15\u64ce\u7684\u731c\u6d4b\u518d\u6b21\u6d6e\u51fa\u6c34\u9762\uff0c\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u8c37\u6b4c\u652f\u4ed8\u7ed9\u82f9\u679c\u6210\u4e3aSafari\u9ed8\u8ba4\u641c\u7d22\u9009\u9879\u7684\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u8d28\u7591\u3002\n\u8fdd\u7ea6\u5f88\u91cd\u8981\u3002\u4ece\u7956\u6bcd\u5230\u5728\u5bb6\u5de5\u4f5c\u7684\u540c\u4e8b\uff0c\u666e\u901a\u7528\u6237\u51e0\u4e4e\u4ece\u4e0d\u66f4\u6539\u9ed8\u8ba4\u6d4f\u89c8\u5668\u6216\u641c\u7d22\u5f15\u64ce\u3002\u8fd9\u53cd\u8fc7\u6765\u5f71\u54cd\u4e86\u8c37\u6b4c\u3001\u5fae\u8f6f\u548c\u82f9\u679c\u7b49\u79d1\u6280\u5de8\u5934\u7684\u5229\u6da6\uff0c\u66f4\u4e0d\u7528\u8bf4\u5a01\u80c1\u5230\u4e86Mozilla\u8fd9\u6837\u7684\u5c0f\u516c\u53f8\u7684\u751f\u5b58\u3002\u6b64\u5916\uff0c\u6d4f\u89c8\u5668\u7684\u53d8\u5316\u7ecf\u5e38\u4f1a\u5bfc\u81f4\u6570\u767e\u4e07\u4f9d\u8d56\u5176\u7f51\u7ad9\u63d0\u4f9b\u670d\u52a1\u548c\u9500\u552e\u4ea7\u54c1\u7684\u4f01\u4e1a\u4e89\u5148\u6050\u540e\u3002\n\u6d4f\u89c8\u5668\u5e02\u573a\u4efd\u989d\u6570\u5b57\u5728\u5546\u4e1a\u51b3\u7b56\u4e2d\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u6ca1\u6709\u4eba\u4f1a\u5728\u4e0d\u786e\u4fdd\u5176\u5728Chrome\u4e2d\u5b8c\u7f8e\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u6210\u529f\u542f\u52a8Web\u670d\u52a1\u3002\u4e00\u5bb6\u4f01\u4e1a\u4e5f\u4e0d\u4f1a\u63a8\u51fa\u4e00\u9879\u65b0\u529f\u80fd\uff0c\u76f4\u5230\u5b83\u5728\u4e34\u754c\u6570\u91cf\u7684\u6d4f\u89c8\u5668\u4e2d\u8fbe\u5230\u9884\u671f\u6548\u679c\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u627c\u6740NetMarketShare\u5462\uff1f\u5f53\u6211\u544a\u8bc9\u4f60\u65e0\u53ef\u4e89\u8fa9\u7684\u5e02\u573a\u9886\u5148\u8005\u4e0e\u6b64\u6709\u5173\u65f6\uff0c\u4e0d\u8981\u8868\u73b0\u51fa\u60ca\u8bb6\u7684\u6837\u5b50\u3002\n\u4eca\u5e741\u6708\uff0c\u8c37\u6b4c\u63d0\u8bae\u5f03\u7528User-Agent\u5b57\u7b26\u4e32(\u7528\u4e8e\u8bc6\u522b\u6b63\u5728\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf)\uff0c\u4f5c\u4e3a\u5176\u6307\u7eb9\u8bc6\u522b\u4e4b\u6218\u7684\u4e00\u90e8\u5206\u3002Net Applications\u8868\u793a\uff0c\u8fd9\u4e00\u53d8\u5316\u5c06\u7834\u574fNetMarketShare\u7684\u8bbe\u5907\u68c0\u6d4b\u6280\u672f\uff0c\u5e76\u201c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u9020\u6210\u4e0d\u51c6\u786e\u201d\u3002\u518d\u52a0\u4e0a\u8fc7\u6ee4\u6389\u673a\u5668\u4eba\u4ee5\u9632\u6b62\u7ed3\u679c\u626d\u66f2\u7684\u6301\u7eed\u95ee\u9898\uff0c\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u51b3\u5b9a\u572814\u5e74\u540e\u8ba4\u8f93\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\nNet Applications\u57fa\u4e8e\u6bcf\u6708\u4ece\u6570\u5343\u4e2a\u7f51\u7ad9\u4e0a\u76841\u4ebf\u6b21\u4f1a\u8bdd\u4e2d\u6355\u83b7\u7684\u6570\u636e\u63d0\u4f9b\u62a5\u544a\u3002\u56e0\u4e3a\u5b83\u7684\u6570\u636e\u662f\u5168\u7403\u6027\u7684\uff0c\u800c\u4e14\u8be5\u516c\u53f8\u4e0d\u4f9d\u8d56\u8c03\u67e5\u6216\u8ddf\u8e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u5b83\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u4e00\u4e2a\u51c6\u786e\u7684\u6765\u6e90\u3002\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u62a5\u544a\u4e86\u6211\u6240\u8bf4\u7684\u7528\u6237\u5e02\u573a\u4efd\u989d--\u5b83\u8ddf\u8e2a\u6bcf\u4e2a\u7528\u6237\u7684\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd8\u6709\u4f7f\u7528\u5e02\u573a\u4efd\u989d--StatCounter\u6bcf\u6708\u67e5\u770b200\u4ebf\u6b21\u9875\u9762\u6d4f\u89c8\u91cf\uff0c\u4ee5\u786e\u5b9a\u4f7f\u7528\u6700\u591a\u7684\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u3002\u8bbf\u95ee\u66f4\u591a\u9875\u9762\u7684\u7528\u6237\u4ecd\u7136\u88ab\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u89c6\u4e3a\u5355\u4e2a\u7528\u6237\uff0c\u800cStatCounter\u5728\u5176\u603b\u6570\u4e2d\u7ed9\u4e88\u8be5\u7528\u6237\u66f4\u591a\u7684\u6743\u91cd\u3002\n\u6211\u66f4\u559c\u6b22\u8ddf\u8e2a\u7528\u6237\u5e02\u573a\u4efd\u989d\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5e02\u573a\u4efd\u989d\uff0c\u4f46\u4ece\u4e24\u4e2a\u8d44\u6e90\u53d8\u6210\u4e00\u4e2a\u8d44\u6e90\uff0c\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\u90fd\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6253\u51fb\u3002\n\u91cd\u8981\u63d0\u793a\uff1a\u5728\u670d\u52a1\u4e8614\u5e74\u5e76\u88ab\u7528\u4f5c\u6570\u4e07\u7bc7\u6587\u7ae0\u548c\u51fa\u7248\u7269\u7684\u4e3b\u8981\u6765\u6e90\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u4ee5\u76ee\u524d\u7684\u5f62\u5f0f\u505c\u6b62\u4f7f\u7528NetMarketShare\u30022020\u5e7410\u6708\u662f\u6570\u636e\u7684\u6700\u540e\u4e00\u4e2a\u6708\u3002\u5df2\u505c\u6b62\u5bf9\u73b0\u6709\u5e10\u6237\u7684\u6240\u6709\u8ba1\u8d39\u3002\u6240\u6709\u672a\u507f\u8fd8\u7684\u4f59\u989d\u90fd\u5c06\u9000\u8fd8\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u5373\u5c06\u5230\u6765\u7684\u6d4f\u89c8\u5668\u53d8\u5316(https://github.com/WICG/ua-client-hints))\u5c06\u7834\u574f\u6211\u4eec\u7684\u8bbe\u5907\u68c0\u6d4b\u6280\u672f\uff0c\u5e76\u5c06\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u5bfc\u81f4\u4e0d\u51c6\u786e\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5c06BOT\u68c0\u6d4b\u548c\u6e05\u9664\u4f5c\u4e3a\u8d28\u91cf\u63a7\u5236\u8fc7\u7a0b\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u3002\u8fd9\u662f\u6211\u4eec\u4ee3\u7801\u5e93\u4e2d\u6700\u590d\u6742\u7684\u90e8\u5206\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7ba1\u7406\u8fd9\u4e00\u8fc7\u7a0b\u53d8\u5f97\u8d8a\u6765\u8d8a\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7ed3\u675f\u7684\u597d\u65f6\u673a\uff0c\u800c\u4e0d\u662f\u63a5\u53d7\u8d8a\u6765\u8d8a\u591a\u7684\u4e0d\u51c6\u786e\u7a0b\u5ea6\u3002\n\u672a\u6765\u7684NetMarketShare\u5c06\u5728\u67d0\u4e2a\u65f6\u5019\u91cd\u65b0\u51fa\u73b0\uff0c\u91cd\u70b9\u653e\u5728\u7535\u5b50\u5546\u52a1\u8d8b\u52bf\u548c\u53ef\u6838\u5b9e\u7684\u7528\u6237\u6570\u636e\u4e0a\u3002\n\u6211\u4eec\u8981\u611f\u8c22\u591a\u5e74\u6765\u4f7f\u7528NetMarketShare\u7684\u6bcf\u4e00\u4f4d\u7528\u6237\u3002\u8fd9\u6bb5\u65c5\u7a0b\u59cb\u4e8e\u5bf9\u6d4f\u89c8\u5668\u4e4b\u6218\u7684\u62a5\u9053\uff0c\u662f\u4efb\u4f55\u4eba\u90fd\u5e0c\u671b\u4ece\u4e8b\u7684\u6700\u5438\u5f15\u4eba\u548c\u6700\u6709\u8da3\u7684\u4ea7\u54c1\u4e4b\u4e00\u3002\n\u6211\u5f88\u9ad8\u5174\u770b\u5230NetMarketShare\u6709\u4e00\u5929\u4f1a\u56de\u5f52\u3002\u4f46\u5982\u679c\u6ca1\u6709\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u6570\u636e\uff0c\u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\n\u521d\u521b\u4f01\u4e1a\u5982\u4f55\u6269\u5c55\u6c9f\u901a\uff1a\r\r\u8fd9\u573a\u6d41\u884c\u75c5\u8ba9\u521d\u521b\u4f01\u4e1a\u5f00\u59cb\u5bc6\u5207\u5173\u6ce8\u5982\u4f55\u63d0\u5347\u4ed6\u4eec\u7684\u6c9f\u901a\u89e3\u51b3\u65b9\u6848\u3002\u5b66\u4e60\u5982\u4f55", "note_en": "For more than a decade, I\u2019ve used Net Applications\u2019  NetMarketShare tool to track the desktop browser and operating system markets. The monthly reports have been critical in gauging  which browsers and  new versions of operating systems are gaining or losing market share. This week, Net Applications released its final NetMarketShare report. The loss could not come at a worse time.\n After Chrome cemented its spot as the world\u2019s de facto browser, there hasn\u2019t been a lot of movement. But that might be about to change. Chrome\u2019s creator, Google, is facing  the biggest U.S. antitrust case in a generation. Mozilla, which depends on Google for almost all its revenue, is  rightly worried about becoming \u201ccollateral damage\u201d. All the while, Firefox can\u2019t seem to stop  bleeding market share. Conversely, Microsoft is steadily gaining market share thanks to its new  Chromium Edge browser, and that\u2019s even before  including it in Windows 10. New browsers like  Brave are more popular than ever. Oh, and Apple  search engine speculation has resurfaced  again, leading to questions about  the billions of dollars Google pays Apple to be the default search option in Safari.\n  Defaults matter. The average user, from your grandmother to your colleague working from home, almost never changes their default browser nor their search engine. That in turn affects the bottom lines of tech giants like Google, Microsoft, and Apple, not to mention threatening the very existence of smaller companies like Mozilla. Additionally, browser changes regularly cause scrambles at the millions of businesses that rely on their websites to provide services and sell products.\n  Browser market share numbers play a critical role in making business decisions. Nobody successfully launches a web service without making sure it works perfectly in Chrome. Nor does a business roll out a new feature until it works as desired in a critical mass of browsers.\n So why is Net Applications killing off NetMarketShare? Don\u2019t act surprised when I tell you the undisputed market leader has something to do with it.\n In January, Google  proposed deprecating the User-Agent string (used to identify which browser and operating system is being used) as part of  its war on fingerprinting. Net Applications says the change will break NetMarketShare\u2019s device detection technology and \u201ccause inaccuracies for a long period of time.\u201d Add the ongoing problem of filtering out bots to prevent skewing of the result, and Net Applications decided it was best to throw in the towel after 14 years.\n Net Applications provided its reports based on data captured from 100 million sessions each month over thousands of websites. Because its data was global, and the company didn\u2019t rely on surveys or tracking components, it was widely considered an accurate source. Net Applications reported what I call  user market share \u2014 it tracked the browser and operating system of each user. There\u2019s also  usage market share \u2014  StatCounter looks at 20 billion pageviews every month to determine what browsers and operating systems are used most. A user who visits more pages is still counted as a single user by Net Applications, while StatCounter gives that user more weight in its totals.\n I prefer tracking user market share to usage market share, but going from two resources to one is a big blow either way.\n        IMPORTANT NOTICE: After 14 years of service and being used as a primary source in tens of thousands of articles and publications, we are retiring NetMarketShare in its current form. October, 2020 is the last month of data. All billing for existing accounts has been stopped. All outstanding balances are being refunded.\n Why? An upcoming change in browsers (https://github.com/WICG/ua-client-hints) will break our device detection technology and will cause inaccuracies for a long period of time.\n In addition, we have focused on bot detection and removal as a key part of the quality control process. It is the most complex part of our codebase. As time has gone on, it has become increasingly difficult to manage this process. So, instead of accepting increasing levels of inaccuracy, we thought it would be a good time to call it a day.\n The Future NetMarketShare will re-emerge at some point with a focus on ecommerce trends and verifiable user data.\n We want to thank everyone who used NetMarketShare over the years. This journey began with reporting on the browser wars, and was one of the most fascinating and fun products anyone could hope to work on.\n I\u2019m glad to see that NetMarketShare will one day return. But without browser and OS data, it won\u2019t be the same.\n  How startups are scaling communication:\r\rThe pandemic is making startups take a close look at ramping up their communication solutions.  Learn how", "posttime": "2020-11-10 03:18:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,\u6d4f\u89c8\u5668,applications", "title": "\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e0d\u518d\u8ddf\u8e2a\u6d4f\u89c8\u5668\u5927\u6218", "title_en": "Net Applications Will No Longer Track the Browser Wars", "transed": 1, "url": "https://venturebeat.com/2020/11/06/probeat-net-applications-will-no-longer-track-the-browser-wars/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u6d4f\u89c8\u5668"]}, {"category": "", "categoryclass": "", "imagename": "92d2d50cb8ca7e7a1dd2a1c1d3bdb3a3.png", "infoid": 1034113, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u65b0\u624b\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u770b\u5230\u6e38\u620f\u673a\u5236\u9020\u5546\u6295\u5165\u6570\u5341\u4ebf\u7f8e\u5143\u4e89\u593a\u8d85\u9ad8\u6280\u672f\u89c4\u683c\uff0c\u800c\u300a\u6211\u7684\u4e16\u754c\u300b\u53ca\u5176\u7c97\u7cd9\u7684\u50cf\u7d20\u5316\u79ef\u6728\u5374\u5360\u636e\u7740\u7545\u9500\u6e38\u620f\u7684\u5934\u8854\uff0c\u8fd9\u4e00\u5b9a\u4ee4\u4eba\u8d39\u89e3\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5927\u50cf\u7d20\u4ece\u672a\u5982\u6b64\u6d41\u884c\u8fc7\uff0c\u6e38\u620f\u73a9\u5bb6\u548c\u7a0b\u5e8f\u5458\u90fd\u8981\u4e3a\u8fd9\u4e00\u575a\u5b9a\u4e0d\u79fb\u7684\u8d8b\u52bf\u8d1f\u8d23\u3002\u7684\u786e\uff0c\u73a9\u590d\u53e4\u6e38\u620f\u5f88\u53ef\u7231\uff0c\u5f88\u6000\u65e7\uff0c\u4f46\u5b83\u4eec\u5236\u4f5c\u8d77\u6765\u4e5f\u5f88\u6709\u8da3\uff0c\u800c\u4e14\u6709\u5f88\u591a\u4f18\u70b9\u3002\u5b83\u51cf\u8f7b\u4e86\u8bbe\u8ba1\u8fc7\u7a0b\u7684\u5de8\u5927\u538b\u529b\uff0c\u5e76\u6709\u52a9\u4e8e\u4e13\u6ce8\u4e8e\u6982\u5ff5\uff0c\u8fd9\u5bf9\u4e1a\u4f59\u7231\u597d\u8005\u548c\u6e38\u620f\u521b\u4f5c\u8005\u6765\u8bf4\u662f\u6709\u4ef7\u503c\u7684\u3002\n\u5f53\u6d89\u53ca\u5230\u7f16\u7a0b\u4e00\u4e2a\u590d\u53e4\u6e38\u620f\u65f6\uff0c\u6839\u636e\u4f60\u7684\u76ee\u6807\u3001\u6280\u80fd\u548c\u627f\u8bfa\uff0c\u6709\u5f88\u591a\u9009\u62e9\u53ef\u4f9b\u9009\u62e9\u3002\n\u6700\u6838\u5fc3\u7684\u9014\u5f84\u5c31\u662f\u6309\u7167\u539f\u6765\u7684\u65b9\u5f0f\u5efa\u9020\u5b83\uff0c\u4e0d\u8981\u4f5c\u5f0a\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e3a80\u5e74\u4ee3\u7684\u73b0\u6709\u6e38\u620f\u7cfb\u7edf\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u653e\u5165\u517640K\u5185\u5b58\u4e2d\u3002\u4f46\u662f\uff0c\u8ba9\u6211\u4eec\u9762\u5bf9\u73b0\u5b9e\u5427\uff1a\u4e3a1983\u5e74\u7684\u4efb\u5929\u5802(Nintendo)\u7f16\u5199\u6e38\u620f\u662f\u4e00\u79cd\u6280\u5de7\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u80fd\u505a\u5230\u3002\n\u6216\u8005\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u73b0\u4ee3\u5f15\u64ce(\u5982Unity)\u521b\u5efa\u4e00\u6b3e\u590d\u53e4\u98ce\u683c\u7684\u6e38\u620f\u3002\u8fd9\u5f88\u5bb9\u6613\uff0c\u4e5f\u5f88\u6709\u8da3\uff0c\u7ed3\u679c\u53ef\u80fd\u4f1a\u4ee4\u4eba\u60ca\u53f9\uff0c\u4f46\u9650\u5236\u56e0\u7d20\u662f\u60f3\u8c61\u529b\u548c\u81ea\u5f8b\u3002\u8fd9\u7b80\u76f4\u5c31\u50cf\u662f\u4f7f\u7528Photoshop\uff0c\u51b3\u5b9a\u5728\u4e00\u5f2016x16\u76844\u8272\u753b\u5e03\u4e0a\u5de5\u4f5c\u3002\u968f\u65f6\u968f\u5730\u6539\u53d8\u89c4\u5219\u662f\u5f88\u6709\u8bf1\u60d1\u529b\u7684\u3002\n\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u662f\u7531Zep\u5f00\u53d1\u7684\u201c\u68a6\u5e7b\u6e38\u620f\u673a\u201dPico-8\u3002Pico-8\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u9650\u5236\u548c\u76f4\u622a\u4e86\u5f53\u7684\u521b\u4f5c\uff0c\u8ba9\u4f60\u53ef\u4ee5\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u8f7b\u677e\u5730\u5236\u4f5c\u51fa\u4ee4\u4eba\u60ca\u53f9\u7684\u53ef\u73a9\u7684\u521b\u4f5c\u3002\u9664\u4e86\u4e00\u4f53\u5f0f\u5957\u88c5\uff0cPico-8\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u793e\u533a\u5206\u4eab\u60a8\u7684\u521b\u4f5c\u7684\u5e73\u53f0\u548c\u4e00\u4e2a\u4e0e\u5176\u4ed6Pico-8\u7231\u597d\u8005\u89c1\u9762\u7684\u8bba\u575b\u3002\u6b63\u5982\u4f60\u6240\u6599\uff0c\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u6280\u80fd\u8d85\u7fa4\u3002\n\u5728\u767d\u5929\uff0c\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u82cf\u695a(Fr\u00e9d\u00e9ric Souchu)\u88ab\u79f0\u4e3a\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u82cf\u695a(Fr\u00e9d\u00e9ric Souchu)\u3002\u4ed6\u7684\u7528\u6237\u540d\u6697\u793a\u4e86\u4ed6\u7684\u751f\u65e5\u3002\u4ed6\u662f\u4e00\u540d\u8d44\u6df1\u8f6f\u4ef6\u67b6\u6784\u5e08\uff0c\u5728\u4e00\u5bb6\u652f\u4ed8\u89e3\u51b3\u65b9\u6848\u516c\u53f8\u5de5\u4f5c\u3002\u4ed6\u559c\u6b22\u81ea\u5df1\u7684\u5de5\u4f5c\uff0c\u4e0e\u59bb\u5b50\u548c\u5b69\u5b50(15\u5c81\u300119\u5c81\u548c21\u5c81)\u5728\u5df4\u9ece\u5730\u533a\u8fc7\u7740\u5e73\u9759\u7684\u751f\u6d3b\u3002\n\u5728\u5c06\u8fd150\u5c81\u7684\u65f6\u5019\uff0c\u5f17\u96f7\u5fb7\u5728\u6cd5\u56fd\u7ecf\u5386\u4e86\u4e00\u4e2a\u5145\u6ee1\u6d3b\u529b\u548c\u6df7\u4e71\u7684\u65e9\u671f\u8ba1\u7b97\u673a\u65f6\u4ee3\uff0c\u90a3\u65f6\u4e2a\u4eba\u7535\u8111\u8fd8\u6ca1\u6709\u6210\u4e3a\u552f\u4e00\u53ef\u7528\u7684\u9009\u62e9\u3002\u201c\u6211\u6709\u4e00\u8f86AMSTRAD CPC\uff0c\u7136\u540e\u662f\u4e00\u8f86\u96c5\u8fbe\u5229(Atari St)\uff0c\u5f88\u5feb\u5c31\u5356\u6389\u4e70\u4e86\u4e00\u8f86Amiga\u3002\u6211\u548c\u6211\u7684\u670b\u53cb\u90fd\u4e0d\u559c\u6b22\u6e38\u620f\u673a\u3002\u5f53\u65f6\uff0c\u51e0\u5341\u53f0\u7535\u8111\u4ee5\u4e0d\u540c\u7684\u5f62\u72b6\u3001\u7cfb\u7edf\u3001\u4f18\u52bf\u548c\u5f31\u70b9\u5c55\u5f00\u7ade\u4e89\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u70b9\uff1a\u5b83\u4eec\u662f\u4e13\u6709\u7684\uff0c\u5f88\u5c11\u53ef\u5b9a\u5236\u3002\n\u81f4\u529b\u4e8e\u8fd9\u4e00\u6d3b\u52a8\u7684\u6700\u8457\u540d\u7684\u6742\u5fd7\u662fTilt-Microloisirs(\u201c\u5fae\u4f11\u95f2\u201d)\uff0c\u5b83\u4e13\u6ce8\u4e8e\u4efb\u4f55\u53ef\u4ee5\u7528\u8ba1\u7b97\u673a\u5b8c\u6210\u7684\u4e8b\u60c5\uff1a\u6587\u5b57\u3001\u56fe\u5f62\u548c\u58f0\u97f3\u7684\u5de5\u5177\uff0c\u5f53\u7136\u8fd8\u6709\u6e38\u620f\u548c\u7f16\u7a0b\u3002\n\u201c\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u5c31\u6ce8\u610f\u5230\u4e86\u8fd9\u4e9b\u7535\u8111\u7684\u521b\u9020\u65b9\u9762\u3002\u6211\u7acb\u523b\u5c31\u88ab\u5b83\u5438\u5f15\u4f4f\u4e86\u3002\u8fd9\u5c31\u662f\u6211\u8bd5\u56fe\u7528\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0c\u4ece\u6742\u5fd7\u4e0a\u590d\u5236\u6574\u9875\u4ee3\u7801\u7684\u65f6\u5019\u3002\u4f46\u6211\u8fd9\u6837\u505a\u4ece\u6765\u6ca1\u6709\u8d70\u5f97\u592a\u8fdc\u3002\u6211\u73b0\u5728\u610f\u8bc6\u5230\u6536\u96c6\u4fe1\u606f\u662f\u591a\u4e48\u56f0\u96be\u3002\u6211\u53ea\u6709\u6211\u670b\u53cb\u7684\u786c\u4ef6\u6307\u5357\u3002\u201c\u5f17\u96f7\u5fb7\u8bf4\u3002\n\u5728\u524d\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u5f53\u4f60\u4e0d\u77e5\u9053\u4e00\u4e9b\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u4f60\u57fa\u672c\u4e0a\u4e0d\u5f97\u4e0d\u5fcd\u53d7\u4f60\u7684\u65e0\u77e5\u3002\u5c24\u5176\u662f\u5728\u52d2\u8292\u957f\u5927\uff0c\u52d2\u8292\u662f\u6cd5\u56fd\u4e00\u5ea7\u62e5\u670915\u4e07\u7075\u9b42\u7684\u57ce\u5e02\u3002\n\u5f53\u4f60\u77e5\u9053\u5f53\u65f6\u6709\u4e9b\u5b69\u5b50\uff0c\u6bd4\u5982Eric Chahi\uff0c\u5728ZX Spectrum\u6216Amstrad\u4e0a\u53d1\u5e03\u4e86\u5b8c\u6574\u7684\u6e38\u620f\u65f6\uff0c\u4f60\u4f1a\u611f\u5230\u975e\u5e38\u7f9e\u6127\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u9065\u4e0d\u53ef\u53ca\u7684\u3002\u6211\u65e0\u6cd5\u60f3\u8c61\u5b9e\u73b0\u4ed6\u4eec\u7684\u76ee\u6807\u6240\u9700\u8981\u7684\u5949\u732e\u7cbe\u795e\u3002\u6211\u4e0d\u60f3\u7528\u8fd9\u79cd\u8bdd\u6765\u6279\u8bc4\u73b0\u5728\u7684\u6e38\u620f\u5f00\u53d1\u5546\uff0c\u4f46\u8fd9\u4e9b\u4eba\u662f\u771f\u6b63\u7684\u5148\u9a71\uff0c\u90a3\u65f6\u5019\u7684\u60c5\u51b5\u8981\u96be\u5f97\u591a\u3002\n\u5f17\u96f7\u5fb7\u8fd8\u8bd5\u56fe\u5229\u7528\u4ed6\u7684Amiga\u7684\u56fe\u5f62\u529f\u80fd\u3002\u201c\u6211\u4e0d\u662f\u4e00\u4e2a\u6709\u5929\u8d4b\u7684\u8bbe\u8ba1\u5e08\uff0c\u4f46\u6211\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u7528Sculpt 4D\u4e3a\u7269\u4f53\u5efa\u6a21\uff0c\u8ba9\u6211\u7684\u7535\u8111\u6574\u591c\u6e32\u67d3[\u8ba1\u7b97]\uff0c\u6709\u65f6\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4e11\u964b\u7684\u3001\u7cdf\u7cd5\u7684\u3001\u5149\u7ebf\u4e0d\u4f73\u7684\u50cf\u7d20\uff0c\u201d\u4ed6\u4e00\u8fb9\u56de\u5fc6\u7740\u4e00\u8fb9\u7b11\u7740\u8bf4\u3002\n\u5f17\u96f7\u5fb7\u80af\u5b9a\u5bf9\u7535\u8111\u60c5\u6709\u72ec\u949f\uff0c\u4f46\u4ed6\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u628a\u6bd5\u751f\u7cbe\u529b\u90fd\u7528\u6765\u5236\u4f5c\u7535\u5b50\u6e38\u620f\u300219\u5c81\u65f6\uff0c\u4ed6\u79fb\u5c45\u5df4\u9ece\uff0c\u5728\u6cd5\u56fd\u4e00\u6240\u975e\u5e38\u8d1f\u76db\u540d\u7684\u5927\u5b66\u591a\u82ac\u5927\u5b66(Dauphine)\u5b66\u4e60\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u3002\u51e0\u5e74\u8fc7\u53bb\u4e86\uff0c\u4f46\u5f17\u96f7\u5fb7\u4ece\u672a\u5b8c\u5168\u5931\u53bb\u5bf9\u6e38\u620f\u521b\u4f5c\u7684\u80c3\u53e3\uff1a\u201c\u6211\u73a9\u8fc7\u4e00\u4e9bUnity\u548c\u865a\u5e7b\u5f15\u64ce\uff0c\u4f46\u6ca1\u6709\u53d1\u5e03\uff0c\u4e5f\u6ca1\u6709\u53d1\u5e03\u3002\u201d\n\u8df3\u52302017\u5e74\u672b\u3002\u5f17\u96f7\u5fb7\u8bfb\u4e86\u4e00\u7bc7\u63d0\u5230Pico-8\u7684\u6587\u7ae0\uff0c\u7acb\u5373\u7231\u4e0a\u4e86\u6781\u7b80\u4e3b\u4e49\u7684\u6982\u5ff5\u548c\u865a\u62df\u7684\u4e25\u683c\u9650\u5236\u3002\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4e60\u60ef\u4e8e\u5904\u7406\u5305\u542b\u6570\u767e\u4e07\u884c\u4ee3\u7801\u7684\u8f6f\u4ef6\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u5728\u5bb6\u91cc\u5236\u4f5c\u6e38\u620f\u65f6\uff0c\u6211\u975e\u5e38\u9700\u8981\u8fb9\u754c\uff0c\u5426\u5219\u6211\u503e\u5411\u4e8e\u4fdd\u6301\u6211\u7684\u804c\u4e1a\u4e60\u60ef\uff1a\u6bcf\u6b21\u6211\u5f00\u59cb\u6784\u5efa\u6846\u67b6\uff0c\u7136\u540e\u662f\u5e93\uff0c\u7b49\u7b49\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u610f\u8bc6\u5230\u6211\u662f\u4e00\u4e2a\u4eba\u5de5\u4f5c\uff0c\u6ca1\u6709\u529e\u6cd5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5b8c\u6210\u4e00\u573a\u6e38\u620f\uff0c\u6240\u4ee5\u6211\u653e\u5f03\u4e86\uff01\u6709\u4e86Pico-8\uff0c\u6bcf\u573a\u6bd4\u8d5b\u5df2\u7ecf\u9700\u89814\u52306\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4e0d\u80fd\u82b1\u592a\u591a\u65f6\u95f4\u5728\u8fd9\u9879\u6d3b\u52a8\u4e0a--\u4e00\u5929\u6700\u591a\u4e24\u4e2a\u5c0f\u65f6--\u4f46\u4e5f\u56e0\u4e3a\u6211\u559c\u6b22\u628a\u65f6\u95f4\u82b1\u5728\u4f18\u5316\u4e0a\uff0c\u201c\u4ed6\u8bf4\uff0c\u610f\u8bc6\u5230\u81ea\u5df1\u7f3a\u4e4f\u7eaa\u5f8b\u3002\nPico-8\u5c06\u60a8\u7684\u4ee3\u7801\u9650\u5236\u5728Lua(\u4e00\u79cd\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\uff0c\u975e\u5e38\u5bb9\u6613\u5b66\u4e60)\u7684\u5b50\u96c6\u4e2d\uff0c\u6700\u591a\u53ea\u80fd\u5305\u542b65.536\u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u64cd\u4f5c\u7684\u6570\u91cf\u4e5f\u662f\u6709\u4e0a\u9650\u7684\u3002\u6ca1\u6709\u8fc7\u5ea6\u8bbe\u8ba1\u7684\u4f59\u5730\uff0c\u6bcf\u4e00\u6bb5\u4ee3\u7801\u90fd\u5fc5\u987b\u662f\u6709\u7528\u7684\u3002\u5b83\u7684\u56fe\u50cf\u5206\u8fa8\u7387\u662f\u4f60\u80fd\u60f3\u5230\u7684\u6700\u4f4e\u7684(128x128)\uff0c\u8c03\u8272\u677f\u662f\u6b63\u5f0f\u768416\u8272\uff0c\u58f0\u97f3\u80fd\u529b\u4e5f\u975e\u5e38\u6709\u9650\u3002\n\u201c\u8fd9\u4e9bPico-8\u6e38\u620f\u4e4d\u4e00\u770b\u50cf\u662f8\u4f4d\u6e38\u620f\uff0c\u4f46\u5b83\u5177\u6709\u6b3a\u9a97\u6027\u3002\u201d\u5c31CPU\u800c\u8a00\uff0c\u4f60\u80fd\u521b\u9020\u7684\u4e1c\u897f\u6bd4Amiga\u80fd\u521b\u9020\u7684\u8981\u5f3a\u5927\u5f97\u591a\u3002\n\u5f17\u96f7\u5fb7\u7684\u786e\u662f\u76ae\u79d1-8\u7ea7\u7684\u9b54\u672f\u5e08\u3002\u5927\u591a\u6570Pico-8\u6e38\u620f\u90fd\u662f2D\u7684\uff0c\u6b63\u5982\u4f60\u6240\u671f\u5f85\u76848\u4f4d\u5927\u5c0f\u7684\u6e38\u620f\u673a\u3002\u4f46\u5f17\u96f7\u5fb7\u5df2\u7ecf\u51b3\u5b9a\u63a2\u7d22\u865a\u62df\u673a\u76843D\u529f\u80fd\uff0c\u8fd9\u8ba9\u4ed6\u5efa\u7acb\u4e86\u81ea\u5df1\u76843D\u5f15\u64ce\u3002\n\u201c\u6211\u4e00\u5207\u90fd\u662f\u767d\u624b\u8d77\u5bb6\u7684\u3002\u597d\u5904\u662f\u6211\u4e86\u89e3\u6bcf\u4e2a\u50cf\u7d20\u662f\u5982\u4f55\u663e\u793a\u7684\u3002\u6211\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u4e00\u4ef6\u4e1c\u897f\u5728\u90a3\u91cc\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u7f16\u7a0b\u7684\u3002\u201c\u3002\u5e74\u8f7b\u7684\u5f17\u96f7\u5fb7\u5728Amiga\u4e0a\u6ca1\u6709\u8db3\u591f\u7684\u6c47\u7f16\u7f16\u7a0b\u6280\u80fd\uff0c\u4ed6\u5728Pico-8\u4e0a\u627e\u5230\u4e86\u81ea\u5df1\u7684\u62a5\u590d\u3002\n\u4ed6\u7684\u524d\u4e24\u573a\u6bd4\u8d5b\u662f\u4e24\u573a\u901f\u5ea6\u5feb\u4f46\u96be\u80fd\u53ef\u8d35\u7684\u5fb7\u6885\u514b\u65af(\u5373\u3002\u90e8\u5206\u7ffb\u62cd)\u8457\u540d\u76842D\u6e38\u620f\uff1a\u96f7\u9706\u4e4b\u5203\u548c\u6838\u738b\u5ea7(\u66f4\u540d\u4e3aNuklear Klone)\u3002\u5f17\u96f7\u5fb7\u5bf9\u4ed6\u4eec\u4e0d\u662f\u5f88\u5065\u8c08\u3002\u201c\u56fe\u5f62\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u654f\u611f\u7684\u8bdd\u9898\u3002\u6211\u5bf9\u6b64\u5f88\u4e0d\u5728\u884c\u3002\u8fd9\u5c31\u662f\u6211\u66f4\u559c\u6b223D\u7684\u539f\u56e0\uff0c\u591a\u4e8f\u4e86Pico-8\u8c03\u8272\u677f\u7684\u6f02\u4eae\u548c\u5e73\u8861\u7684\u8272\u5f69\uff0c\u6211\u53ef\u4ee5\u8d85\u8d8a\u6211\u6709\u9650\u7684\u8bbe\u8ba1\u6280\u80fd\u3002\u201c\u3002\n\u51fa\u4e8e\u6cae\u4e27\uff0c\u4ed6\u51b3\u5b9a\u5728\u63a5\u4e0b\u6765\u7684\u6bd4\u8d5b\u4e2d\u53ea\u4e13\u6ce8\u4e8e3D\uff0c\u6210\u7ee9\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u5e76\u4e0d\u65ad\u63d0\u9ad8\u81ea\u5df1\u7684\u5236\u4f5c\u8d28\u91cf\u6c34\u5e73\u3002\n1991\u5e74\uff0c\u4e00\u6b3eX\u7ffc\u6a21\u62df\u5668\u5728\u65e5\u672c\u72ec\u5bb6\u53d1\u5e03\u3002\u5728\u300a\u6b7b\u661f\u300b(The Death Star)\u7684\u88ad\u51fb\u4e2d\uff0c\u5f17\u96f7\u5fb7\u5df2\u7ecf\u8868\u73b0\u51fa\u4e86\u4e00\u4e9b\u4e25\u8083\u7684\u80fd\u529b\uff0c\u5c3d\u7ba1\u8fd9\u6b3e3D\u6e38\u620f\u57fa\u672c\u4e0a\u662f\u7ebf\u6846\u7684\uff0c\u89c6\u89c9\u4e0a\u548c\u6700\u521d\u7684\u89c6\u9891\u6e38\u620f\u8bbe\u8ba1\u7684\u4e00\u6837\u4e4f\u5473\u3002\u7136\u540e\uff0c\u4ed6\u5e2e\u52a9\u6258\u9a6c\u65af\u00b7\u594e\u5c3c(\u53c8\u540d\u9ec4\u5df4\u4f26)--\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4e00\u540d\u98de\u884c\u5458--\u5728Pico-8\u7684\u98de\u884c\u6a21\u62df\u5668Tiny Sim\u4e0a\u6dfb\u52a03D\u89c6\u666f\u3002\n\u4e0b\u96ea!\u3002\u662f\u5f17\u96f7\u5fb7\u7684\u7b2c\u4e00\u4e2a\u539f\u521b\u6e38\u620f\uff0c\u6ed1\u96ea\u6a21\u62df\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u539f\u59cb\u7684\u6982\u5ff5\uff0c\u8fd9\u662fFred\u7b2c\u4e00\u6b21\u4e0d\u5f97\u4e0d\u8003\u8651\u4ed6\u7684\u6e38\u620f\u4f53\u9a8c\uff0c\u5e76\u610f\u8bc6\u5230\u5229\u7528Pico-8\u8bba\u575b\u8fdb\u884c\u201c\u6e38\u620f\u6d4b\u8bd5\u201d\u7684\u91cd\u8981\u6027\u3002\u6e38\u620f\u6d4b\u8bd5\u57fa\u672c\u4e0a\u662f\u6307\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6536\u96c6\u73a9\u5bb6\u7684\u53cd\u9988\uff0c\u4ee5\u6539\u8fdb\u6e38\u620f\u3002\u4ed6\u4ece\u4ed6\u7684itch.io\u9875\u9762(\u4e00\u4e2a\u72ec\u7acb\u89c6\u9891\u6e38\u620f\u521b\u4f5c\u8005\u7684\u5e02\u573a)\u4e0a\u5220\u9664\u4e86\u4ed6\u7684\u7b2c\u4e00\u6b3e\u6e38\u620f(\u96f7\u9706\u4e4b\u5203)\uff0c\u56e0\u4e3a\u201c\u8fd9\u6b3e\u6e38\u620f\u592a\u77ed\u4e86\uff0c\u6e38\u620f\u7f3a\u4e4f\u5e73\u8861\u201d\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u201c\u8fd9\u662f\u6211\u4e09\u5e74\u524d\u5f00\u59cb\u73a9\u7684\u65f6\u5019\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u3002\u201d\u6211\u5e0c\u671b\u6211\u7684\u6e38\u620f\u5f88\u6709\u8da3\uff0c\u56e0\u6b64\u9700\u8981\u5176\u4ed6\u73a9\u5bb6\u6765\u6d4b\u8bd5\u3002\u5426\u5219\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u6280\u672f\u6f14\u793a\u3002\u5bf9\u4e8e\u4e13\u4e1a\u6e38\u620f\u5f00\u53d1\u5546\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u5f88\u5766\u7387\uff0c\u4f46\u6e38\u620f\u6d4b\u8bd5\u624d\u662f\u5173\u952e\u3002\n\u4ece\u89c6\u89c9\u4e0a\u770b\uff0c\u5e27\u901f\u7387\u662f\u5b8c\u7f8e\u7684\uff0c\u6e38\u620f\u662f\u4e30\u5bcc\u591a\u5f69\u7684\uff0c\u5f53\u7136\u73a9\u8d77\u6765\u4e5f\u5f88\u6709\u8da3\u3002\u591a\u4e8f\u4e86\u751f\u6210\u5761\u5ea6\u7684\u7b97\u6cd5\uff0c\u767d\u96ea\uff01\u67093\u4e2a\u96be\u5ea6\u7ea7\u522b\uff0c\u6bcf\u8282\u8bfe\u90fd\u4f1a\u6709\u65b0\u9c9c\u7684\u4f53\u9a8c\u3002\u6b64\u5916\uff0c\u8ba9\u7535\u8111\u968f\u673a\u751f\u6210\u5185\u5bb9\u662f\u7ed5\u8fc7Pico-8\u5b98\u65b9\u5c3a\u5bf8\u9650\u5236\u7684\u552f\u4e00\u9014\u5f84\u3002\n\u5f17\u96f7\u5fb7\u51b3\u5b9a\u514b\u670d\u7684\u9650\u5236\uff0c\u4e3aVirtua\u8d5b\u8f66Demake\uff0c\u4e00\u4e2a\u975e\u5e38\u51c6\u786e\u7684\u79fb\u690d\u4ece\u4e16\u5609\u8d77\u6e90\u8003\u8651\u5230Pico-8\u7684\u89c6\u89c9\u80fd\u529b\u3002\u4ece\u76f4\u5347\u673a\u89c6\u89d2\u770b\uff0c\u753b\u9762\u901f\u7387\u53ef\u80fd\u6709\u4e9b\u8d77\u4f0f\u4e0d\u5b9a\uff0c\u4f46\u5b83\u662f\u4f60\u80fd\u5f97\u5230\u7684\u6700\u63a5\u8fd1\u7684\u753b\u9762\uff0c\u800c\u4e14\u6e38\u620f\u6548\u679c\u4ee4\u4eba\u4fe1\u670d\uff0c\u5373\u4f7f\u5728\u9a7e\u9a76\u5ea7\u6a21\u5f0f\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\u4e00\u7ea7\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u662f\u552f\u4e00\u53ef\u7528\u7684\u8d5b\u8f66\uff0c\u4f46\u5f17\u96f7\u5fb7\u4ece\u6e38\u620f\u4e2d\u5f15\u8fdb\u4e863\u6761\u539f\u521b\u8d5b\u9053\uff0c\u4f7f\u5f97\u5185\u5bb9\u592a\u5927\uff0c\u65e0\u6cd5\u9002\u5e94\u865a\u62df\u58a8\u76d2\u7684\u5b98\u65b9\u5c3a\u5bf8\uff0c\u56e0\u6b64\u5c06Virtua Racing\u6392\u9664\u5728Pico-8\u6e38\u620f\u5217\u8868\u754c\u9762\u4e4b\u5916\u3002\u201c\u8fd9\u80af\u5b9a\u4f1a\u8ba9\u5b83\u66f4\u96be\u8bbf\u95ee\uff0c\u4f46\u5b83\u4ecd\u7136\u5b8c\u5168\u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u64ad\u653e\uff0c\u6216\u8005\u4f5c\u4e3a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u64ad\u653e\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u8986\u76c6\u5b50\u4e0a\u4e0b\u8f7d\u3002\u201d\u6211\u7684\u9996\u8981\u4efb\u52a1\u662f\u80fd\u591f\u5728\u6211\u7684\u6e38\u620f\u4e2d\u6dfb\u52a0\u5185\u5bb9\uff0c\u5373\u4f7f\u8fd9\u610f\u5473\u7740\u5931\u53bb\u66dd\u5149\u7387\u3002\nVirtua\u8d5b\u8f66Demake\u5438\u5f15\u4e86\u5f88\u591a\u5173\u6ce8\uff0c\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662f\u5728Pico-8\u793e\u533a\u3002\u8fd9\u5f88\u597d\uff0c\u4f46\u5f17\u96f7\u5fb7\u5e0c\u671b\u4e16\u5609\u4e0d\u8981\u56e0\u4e3a\u4ed6\u7684\u6e2f\u53e3\u4fb5\u72af\u7248\u6743\u3002\u201c\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u544a\u8bc9\u81ea\u5df1\uff1a\u73b0\u5728\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5230\u76ee\u524d\u4e00\u5207\u5c1a\u597d\u3002\u6211\u4e00\u76f4\u5728\u7948\u7977\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u8fd9\u6b3e\u6e38\u620f\u53ef\u4ee5\u5728\u7f51\u4e0a\u514d\u8d39\u73a9\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6309\u9700\u4ed8\u8d39\u7684\u6a21\u5f0f\u4e0b\u8f7d\u3002\u5230\u4eca\u5929\u4e3a\u6b62\uff0c\u6211\u8fd9\u573a\u6bd4\u8d5b\u7684\u6536\u5165\u53ea\u670980\u6b27\u5143\uff01\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u8981\u8d77\u8bc9\u6211\uff1f\u201c\u3002\n\u8fd9\u79cd\u5371\u9669\u4e5f\u53ef\u80fd\u6765\u81eaBethesda(\u6700\u8fd1\u88ab\u5fae\u8f6f\u6536\u8d2d)\uff0c\u56e0\u4e3aFred\u4e0eSimon Hulsinga(\u53c8\u540d\u504f\u6267\u7684\u4ed9\u4eba\u638c)\u5408\u4f5c\uff0c\u4ee5Poom\u7684\u540d\u5b57\u79fb\u690dDoom\u3002\u201c\u5bc6\u7801\u662f100%\u81ea\u5236\u7684\uff0c\u4ed9\u4eba\u638c\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u753b\u4e86\u6240\u6709\u7684\u827a\u672f\u54c1\u3002\u4ed6\u505a\u4e86\u4e00\u4ef6\u4e86\u4e0d\u8d77\u7684\u4e8b\uff01\u201c\u4ed6\u8bf4\uff0c\u5bf9\u897f\u8499\u7684\u6280\u672f\u5370\u8c61\u6df1\u523b\u3002\u201c\u4ed6\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u80fd\u591f\u521b\u9020\u51fa\u771f\u6b63\u4f18\u79c0\u6e38\u620f\u7684\u4eba\u4e4b\u4e00\uff0c\u4f46\u4ed6\u4e5f\u6709\u4e00\u79cd\u6709\u8da3\u7684\u827a\u672f\u654f\u611f\u5ea6\u3002\u201d\u56e0\u6b64\uff0c\u6211\u57283\u6708\u4efd\u5f00\u59cb\u521b\u5efa\u6211\u76843D\u5f15\u64ce\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u5408\u4f5c\u9080\u8bf7\u53d1\u9001\u7ed9\u4ed6\u3002\u4ed6\u7ed9\u6211\u53d1\u56de\u4e86\u7b2c\u4e00\u4e2a\u5c4f\u5e55\uff0c\u6211\u5f53\u65f6\u7684\u53cd\u5e94\u662f\uff1a\u89c1\u9b3c\uff01\u201c\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6700\u8fd1\u5c55\u793a\u5f15\u64ce\u7684\u63a8\u7279\u7edd\u5bf9\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\uff0c\u8fd9\u5bf9\u4e8c\u4eba\u7ec4\u975e\u5e38\u6709\u524d\u9014\u3002Fred\u8d1f\u8d233D\u5f15\u64ce\uff0cSimon\u8d1f\u8d23\u56fe\u5f62\u548c\u5173\u5361\u8bbe\u8ba1\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u4e00\u5f00\u59cb\u5c31\u51b3\u5b9a\uff0c\u6211\u4eec\u4e0d\u60f3\u7528\u539f\u6765\u7684\u6c34\u5e73\u3002\u5c31\u6027\u80fd\u800c\u8a00\uff0c\u6211\u4eec\u5bf9\u7ed3\u679c\u5e76\u4e0d\u786e\u5b9a\uff0c\u4f46\u6211\u4eec\u5bf9\u6b64\u4e5f\u4e0d\u662f\u5f88\u611f\u5174\u8da3\u3002\u6211\u4eec\u77e5\u9053\u6211\u4eec\u4e0d\u4f1a\u6bd4\u771f\u6b63\u7684\u672b\u65e5\u505a\u5f97\u66f4\u597d\uff0c\u4f46\u8fd9\u662f\u6211\u4eec\u5c55\u793a\u81ea\u5df1\u80fd\u529b\u7684\u673a\u4f1a\u3002\u201c\u3002Fred\u5bf9\u5373\u5c06\u53d1\u5e03\u7684\u7248\u672c\u975e\u5e38\u611f\u5174\u8da3\uff0c\u4f46\u7531\u4e8e\u5b9e\u9645\u7684\u63a7\u5236\u53f0\u5bb9\u91cf\uff0c\u5b83\u5c06\u4f1a\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\uff1a\u201c\u8fd9\u592a\u7cdf\u7cd5\u4e86\uff0cPico-8\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u5408\u9002\u7684\u5c40\u57df\u7f51[\u672c\u5730\u7f51\u7edc]\u591a\u4eba\u89e3\u51b3\u65b9\u6848\u3002\u201d\n\u770b\u5230\u5f17\u96f7\u5fb7\u5bf9Pico-8\u7684\u4e00\u4e9b\u7f3a\u70b9\u611f\u5230\u6cae\u4e27\uff0c\u5e76\u5bf9\u539f\u521b\u5185\u5bb9\u91c7\u53d6\u4e86\u66f4\u591a\u7684\u81ea\u7531\uff0c\u5f88\u81ea\u7136\u5730\u4f1a\u8ba4\u4e3a\u4ed6\u6b63\u5728\u8d70\u4e00\u6761\u8ba9\u4ed6\u6210\u4e3a\u4e00\u540d\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005\u7684\u9053\u8def\u3002\u4ed6\u8c26\u865a\u5730\u8bf4\uff1a\u201c\u4f5c\u4e3a\u4e00\u540d\u6e38\u620f\u521b\u4f5c\u8005\uff0c\u6211\u5176\u5b9e\u662f\u76f8\u5f53\u7cdf\u7cd5\u7684\u3002\u201d\u7136\u540e\uff0c\u4ed6\u53cd\u601d\u4e86\u662f\u4ec0\u4e48\u8ba9\u4ed6\u72b9\u8c6b\u662f\u5426\u8981\u6210\u4e3a\u804c\u4e1a\u9009\u624b\uff1a\u201c\u5f53\u7136\uff0c\u7ecf\u6d4e\u98ce\u9669\u4e5f\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u56e0\u7d20\u3002\u201d\u8001\u5b9e\u8bf4\u6211\u4e0d\u77e5\u9053\u3002\u6211\u4e0d\u4f1a\u79ef\u6781\u5730\u53bb\u5bfb\u627e\u5b83\u3002\u505a\u51fa\u8fd9\u79cd\u6539\u53d8\u7684\u4eba\u80fd\u591f\u505a\u51fa\u4fe1\u5ff5\u4e0a\u7684\u98de\u8dc3\uff0c\u8fd9\u662f\u6211\u73b0\u5728\u4e0d\u613f\u610f\u505a\u7684\u3002\u6211\u53ef\u4ee5\u82b110\u5e74\u7684\u65f6\u95f4\u6765\u5c1d\u8bd5\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u5e73\u5e73\u3002\u4f46\u8fd9\u80af\u5b9a\u662f\u4e00\u4e2a\u68a6\u60f3\uff1a\u8c01\u4f1a\u62d2\u7edd\u4e3a\u4ed6\u7684\u6fc0\u60c5\u800c\u6d3b\u5462\uff1f", "note_en": "From a neophyte perspective, it must be quite puzzling to observe the console manufacturers investin g billions of dollars to battle over super high tech specs while Minecraft and its rough pixelated blocks are holding the best-selling game title. Surprisingly, the big pixels have never been so popular and both gamers and programmers are responsible for that unwavering trend. Indeed retro-looking games are cute and nostalgic to play with, but they also are fun to make and they offer plenty of advantages. It takes a huge weight off the designing process and helps focus on the concept, which is valuable for hobbyists game creators.\n  When it comes to program a retroish game, there are many options available depending on your goals, skills and commitment.\n The hardcore path is to build it the way it was done, no cheating. You could code directly for an existing game system from the 80s and fit in its tiny 40k memory. But, let\u2019s face it: writing a  game for the 1983 Nintendo is a trick that not everyone can pull off.\n Alternatively, you could create a retro-looking game using a modern engine (like  Unity). It\u2019s easy and fun, the  result can be amazing but the constraints are imagination and self-discipline. It\u2019s literally like using Photoshop and deciding to work on a 16x16 canvas with 4 colors. It\u2019s very tempting to change the rules as you go.\n  Between the two, sits  Pico-8, a \u201cfantasy console\u201d created by  Zep. Pico-8 provides both strict limitations and straight forward creation allowing you to easily make amazing playable creations in a few hours. Alongside the all-in-one suite, Pico-8 also provides a platform to share your creations with the community and a forum to meet other Pico-8 enthusiasts. As you would expect, some of them are insanely skilled.\n   Freds72 goes by the name of Fr\u00e9d\u00e9ric Souchu during the daytime. His username gives a hint about his birthdate. He\u2019s a senior software architect working in a payment solutions company. He likes his job and lives a peaceful life in the Paris region with his wife and kids (15, 19 and 21).\n At almost 50 year old, Fred has lived through the very dynamic and messy early computer era in France, before the PC became the only option available. \u201c I owned an   Amstrad CPC  then an   Atari ST,  quickly sold to buy an   Amiga . Neither I nor my friends were into game consoles.\u201d At that time, dozens of computers competed with different shapes, systems, strengths and weaknesses, but all shared the same trait: they were proprietary and seldom customizable.\n  The most famous magazine dedicated to this activity was  TILT \u2014 Microloisirs (\u201c micro-leisures\u201d), it focused on anything that could be done with a computer: tools for text, graphics and sounds, games of course and also programming.\n \u201c From the very beginning I took notice of the creation aspects of those computers. I was attracted to it right away. This is when I tried to program in assembly, copying entire pages of code from magazines. But I never got very far doing so. I realize now how difficult it was to gather information. All I had was the hardware guide for my Amiga,\u201d said Fred.\n In the pre-internet era, when you didn\u2019t know something, you basically had to live with your ignorance. Especially being raised in Le Mans, a 150,000-soul city in France.\n \u201c It\u2019s very humbling when you know that some kids at the time, such as   Eric Chahi , released complete games on   ZX Spectrum  or Amstrad. That was out of reach for me. I can\u2019t imagine the dedication required to achieve their goal. I don\u2019t want to diss present game developers by saying that, but these guys were real pioneers, it was way harder back then.\u201d\n  Fred also tried to take advantage of the graphical capabilities of his Amiga. \u201c I was not a talented designer, but I spent hours modeling objects with Sculpt 4D, letting my computer render [calculate] for whole nights, sometimes resulting in an ugly bad poorly lighted pixel,\u201d he said laughing while remembering it.\n Fred definitely had a thing for computers, but he was not ready to dedicate his whole life to create video games. At 19, he moved to Paris to study math and computer science at Dauphine \u2014 a very reputed French university. Years have passed, but Fred never totally lost his appetite towards gaming creation: \u201c I played a little bit with Unity and Unreal Engine, but nothing released nor releasable.\u201d\n  Jump forward to late 2017. Fred reads an article mentioning Pico-8 and falls immediately in love with the minimalist concept and the virtual strict limitations. \u201c As a software engineer, I am used to dealing with software containing millions of lines of code. Thus I desperately need boundaries when I make my games at home, otherwise I tend to keep my professional habits: everytime I start to build a framework, then libraries, etc. Several months later I realize that I work alone and there is no way I can finish a single game this way so I give up!  With Pico-8,  each game already takes 4 to 6 months. Mainly because I can\u2019t devote a lot of time to this activity \u2014 2 hours a day at most \u2014 but also because I love spending time on optimization,\u201d he said, aware of his lack of discipline.\n  Pico-8 limits your code to only 65.536 characters in a  subset of Lua (a modern programming language, very easy to learn), and the number of operations is also capped. There is no room to over-engineer and every bit of code must be useful. The image resolution is the lowest you could think of (128x128), the palette is officially 16 colors, and the sound capabilities are very limited as well.\n \u201c The Pico-8 creations look like 8-bit games at first sight, but it\u2019s deceiving. What you can actually create is way more powerful than what an Amiga could pull out in terms of CPU.\u201d\n Fred is indeed a Pico-8 magician. Most Pico-8 games are 2D as you would expect for an 8bit-ish console. But Fred has decided to explore the 3D capabilities of the virtual machine, leading him to build his own 3D engine.\n \u201c I\u2019ve built everything from scratch. The benefit is that I understand how each pixel is displayed. I know why an item is there because I programmed it.\u201d The young Fred, who was not skilled enough for assembly programming on Amiga, found his revenge on Pico-8.\n  His first two games are two quick yet-estimable demakes (ie.  partial remakes) of well known 2D games:  Thunder Blade and Nuclear Throne (renamed  Nuklear Klone). Fred is not very talkative about them. \u201c The graphics are a sensitive topic for me. I am pretty bad at it. This is why I prefer 3D, and thanks to the pretty and well balanced colors from the Pico-8 palette, I can go beyond my limited designer skill.\u201d\n Out of frustration, he decides to focus exclusively on 3D for his next games with an impressive track record and continually improves his level of production quality.\n  With  The Attack of the Death Star, a demake of an X-Wing simulator released exclusively in Japan in 1991, Fred already shows some serious ability even though the 3D is mostly wireframe and visually as dull as the original video game was designed. He then helps Thomas Cueni (aka Yellowbaron) \u2014 a pilot in real life \u2014 to add the 3D view to  Tiny Sim, a Flight Simulator for Pico-8.\n Snow! is Fred\u2019s first original game, a ski simulator. Being an original concept, this is the first time that Fred had to think about his gameplay and realized the importance of \u201cplaytesting,\u201d leveraging the Pico-8 forum. Playtesting means basically collecting players\u2019 feedback during the development to improve a game. He removed his first game (Thunder Blade) from his  itch.io page (a marketplace for independent video game creators) because \u201c the game is too short and the gameplay lacks balance\u201d and adds  \u201cthis is something I wasn\u2019t aware of when I started 3 years ago. I want my games to be fun, therefore they need to be tested by other players. Otherwise it\u2019s just a technical demo. It might seem candid to professional game developers, but playtesting is key.\u201d\n  Visually the frame rate is flawless, the game is colorful and of course pretty fun to play. Thanks to the algorithm that generates the slopes, Snow! has 3 difficulty levels and a fresh experience with each session. Also, letting the computer randomly generate the content is the only way to circumvent the official size limitation of the Pico-8.\n  A limitation that Fred decides to overcome for  Virtua Racing Demake, a very accurate porting from the Sega Genesis considering the Pico-8 visual capacities. The frame rate can be a bit choppy from the helicopter view, but it\u2019s as close as you can get and the gameplay is convincing, even in the driver\u2019s seat mode. The Formula 1 is the only car available, but Fred has imported the 3 original circuits from the game, making the content way too big to fit the virtual cartridge official size and therefore excludes Virtua Racing from the Pico-8 game listing interface. \u201c It makes it less accessible for sure, but it is still totally playable within a web page or as a standalone binary, or even downloading it on a Raspberry. My priority was to be able to add content to my game even if it means losing exposure\u201d.\n  The Virtua Racing Demake drew a lot of attention and not only in the Pico-8 community. Which is good, but Fred hopes that Sega will not claim a copyright infringement for his port. \u201c It\u2019s the first time I told myself: what\u2019s going to happen now? So far so good. I keep my fingers crossed. I mean the game is playable online for free, or you can download it via a pay-as-you-want model. My revenues for that game are barely \u20ac80 as of today! Why would they sue me?\u201d\n  That danger might also come from Bethesda (recently acquired by Microsoft), since Fred teamed up with Simon Hulsinga (aka Paranoid Cactus) to port Doom under the name  Poom. \u201c The code is 100% homemade, and Cactus redrew all the artworks from scratch. He did a colossal job!\u201d, he said, impressed by Simon\u2019s skills. \u201c He\u2019s one the few capable of creating really good games but also with an interesting artistic sensibility.  So I started the foundation of my 3D engine in March and sent it to him as an invitation for a collaboration. He sent me back a first screen and I was like: damned!\u201d\n  Indeed, the  recent tweets showing off the engine are absolutely stunning and the duo is quite promising. Fred handles the 3D engine while Simon deals with the graphics and the level design. \u201c We decided at the very beginning that we didn\u2019t want to use the original levels. Performance-wise, we weren\u2019t sure of the outcome, but also, it wasn\u2019t very interesting to us. We know that we won\u2019t do better than the real Doom, but it is our chance to show what we can do.\u201d Fred is very enthusiastic about the upcoming release but something will be missing due to the actual console capacities: \u201c It\u2019s too bad Pico-8 doesn\u2019t provide a proper LAN [local network] multiplayer solution.\u201d\n   Seeing Fred being frustrated by some of Pico-8\u2019s shortcomings and taking more liberty with the original content, it would be natural to think that he is taking a path that would lead him to become an independent game developer. \u201c As a game creator, I am pretty bad actually\u201d he said humbly, then reflecting on what made him hesitate to become professional: \u201c Of course, the economical risk is a huge factor also. Honestly I don\u2019t know. I wouldn\u2019t actively seek it. People making that change are able to take a leap of faith I am not willing to take right now. I could spend 10 years trying with a mediocre result at the end. But it would be a dream for sure: who would refuse to live out of his passion?\u201d", "posttime": "2020-11-10 03:14:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u5947\u5e7b,story", "title": "\u76ae\u79d18\u7684\u6545\u4e8b\uff1a\u5947\u5e7b\u6e38\u620f\u673a\u5982\u4f55\u89e3\u9501\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u82cf\u695a\u7684\u68a6\u60f3", "title_en": "A Pico-8 story: How the fantasy console unlocked Fr\u00e9d\u00e9ric Souchu\u2019s dreams", "transed": 1, "url": "https://nanark.medium.com/a-pico-8-story-how-the-fantasy-console-unlocked-fr\u00e9d\u00e9ric-souchus-dreams-56bce77bcdc5", "via": "", "real_tags": ["\u6e38\u620f", "\u5947\u5e7b", "story"]}, {"category": "", "categoryclass": "", "imagename": "67c628924b0ab8c110a0d178d6cd2c2f.jpg", "infoid": 1034112, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u5e15\u5947\u00b7\u5361\u592b\u5361\u662f\u4e00\u4e2a\u7f8e\u4e3d\u7684\u7cfb\u7edf\u3002\u5b83\u5177\u6709\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u3001\u7a33\u5b9a\u6027\u548c\u60ca\u4eba\u7684\u7cfb\u7edf\u67b6\u6784\u7075\u6d3b\u6027\u3002\u5728\u8fd0\u884c\u4e865\u5e74\u7684\u751f\u4ea7Kafka\u96c6\u7fa4\u540e\uff0c\u6211\u6536\u96c6\u4e86\u4e00\u7cfb\u5217\u63d0\u793a\u548c\u9677\u9631\u3002\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u5c06\u5361\u592b\u5361\u6295\u5165\u751f\u4ea7\u7684\u5c0f\u56e2\u961f\u4e2d\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u662f\u6709\u7528\u7684\u3002\u8fd9\u7bc7\u6587\u7ae0\u5047\u8bbe\u4f60\u719f\u6089\u5361\u592b\u5361\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5982\u7ecf\u7eaa\u4eba\u3001\u4e3b\u9898\u3001\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ee5\u4e0b\u51e0\u70b9\u5bf9\u4e8e\u5361\u592b\u53612.0\u7248\u5e94\u8be5\u662f\u6709\u6548\u7684\uff0c\u4e0d\u9700\u8981\u66f4\u591a\u7684\u9ebb\u70e6\u3002\nKafka\u4e3b\u9898\u7531\u4e00\u4e2a(\u53ef\u914d\u7f6e\u7684)\u5206\u533a\u6570\u7ec4\u6210\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u63d0\u4f9b\u5206\u533a\u53f7\uff0cKafkaProducer\u5c06\u4f7f\u7528\u4f20\u9012\u7ed9\u5b83\u7684ProducerRecord\u5b9e\u4f8b\u4e2d\u7684\u952e\u4e3a\u6d88\u606f\u9009\u62e9\u5206\u533a\u3002\n\u67e5\u770b\u9ed8\u8ba4\u5b9e\u73b0\uff1a\u5b83\u68c0\u67e5\u5bc6\u94a5\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba1\u7b97\u4ee5\u5206\u533a\u6570\u4e3a\u6a21\u7684Murmu2\u6563\u5217\u3002\u8fd9\u662f\u4e00\u81f4\u7684\uff1b\u5bf9\u4e8e\u5171\u4eab\u76f8\u540c\u5bc6\u94a5\u7684\u6d88\u606f\uff0c\u5b83\u5c06\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5bc6\u94a5\u4e3a\u7a7a\uff0c\u5b83\u5c06\u4f7f\u7528\u7c98\u6027\u5206\u533a\uff0c\u8be5\u5206\u533a\u5728\u6bcf\u6279\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5206\u533a\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u9012\u5bc6\u94a5\uff0c\u5219\u751f\u4ea7\u8005\u5c06\u968f\u673a\u9009\u62e9\u5206\u533a\u3002\n\u8fd9\u5177\u6709\u91cd\u8981\u7684\u610f\u4e49\uff0c\u56e0\u4e3aKafka\u53ea\u63d0\u4f9b\u5206\u533a\u5185\u7684\u9012\u9001\u987a\u5e8f\u4fdd\u8bc1\u3002\u540c\u4e00\u5206\u533a\u4e2d\u7684\u6d88\u606f\u5c06\u6309\u7167\u63d0\u4ea4\u7684\u987a\u5e8f\u9012\u9001\u3002\u4e0d\u540c\u5206\u533a\u4e2d\u7684\u6d88\u606f\u5c06\u4ee5\u4e0d\u786e\u5b9a\u7684\u987a\u5e8f\u9012\u9001\u3002\u5982\u679c\u6d88\u606f\u4e4b\u95f4\u6709\u4efb\u4f55\u5f62\u5f0f\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u5e76\u4e14\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u5206\u533a\u4e2d\uff0c\u90a3\u4e48\u4efb\u4f55\u4e0b\u6e38\u6d88\u8d39\u8005\u5728\u5904\u7406\u5b83\u4eec\u4e4b\u524d\u90fd\u5fc5\u987b\u6536\u96c6\u5173\u952e\u5b57\u7684\u6240\u6709\u6d88\u606f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8fdd\u53cd\u56e0\u679c\u4e00\u81f4\u6027\uff1b\u65e0\u8bba\u5728\u65e0\u9650\u6d41\u7684\u4e0a\u4e0b\u6587\u4e2d\u610f\u5473\u7740\u4ec0\u4e48\u3002\n\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u60f3\u8c61\u4e00\u4e0b\u5982\u4e0b\u6240\u793a\u7684\u7b80\u5355\u4e8b\u4ef6\uff1a\n\u4f46\u662f\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u7535\u5b50\u90ae\u4ef6\u7684\u56e0\u679c\u987a\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u6301\u8db3\u591f\u7684\u72b6\u6001\u6765\u77e5\u9053\u6211\u4eec\u770b\u5230\u7684\u4e8b\u4ef6\u662f\u5426\u771f\u7684\u662f\u6700\u65b0\u7684\u3002\u5426\u5219\uff0c\u5982\u679c\u987a\u5e8f\u98a0\u5012\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5411\u5df2\u53d6\u6d88\u8ba2\u9605\u7684\u7528\u6237\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u4f8b\u5982\uff1a\n\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u90ae\u4ef6\uff0c\u90a3\u4e48Kafka\u5c06\u6309\u7167\u90ae\u4ef6\u63d2\u5165\u7684\u987a\u5e8f\u53d1\u9001\u5355\u4e2a\u7535\u5b50\u90ae\u4ef6\u7684\u6240\u6709\u90ae\u4ef6\u3002\u6211\u4eec\u7684\u6d88\u8d39\u8005\u53ef\u4ee5\u662f\u5b8c\u5168\u65e0\u72b6\u6001\u7684\uff1b\u5b83\u53ef\u4ee5\u4eceKafka\u83b7\u53d6\u90ae\u4ef6\u5e76\u5c06\u5176\u5b58\u50a8\u5230\u6570\u636e\u5b58\u50a8\u4e2d\u3002\u5982\u679c\u5bc6\u94a5\u4e3a\u7a7a(\u672a\u63d0\u4f9b)\uff0c\u6211\u4eec\u7684\u65e0\u56fd\u7c4d\u54a8\u8be2\u4eba\u5458\u5c06\u5f88\u4e50\u610f\u5b58\u50a8\u6765\u81ea\u8fc7\u53bb\u7684\u90ae\u4ef6\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u4e3a\u6bcf\u5c01\u7535\u5b50\u90ae\u4ef6\u7ef4\u62a4\u6700\u65b0\u7684Created On Date\u3002\u4f9d\u8d56\u6302\u949f\u5224\u65ad\u56e0\u679c\u5173\u7cfb\u662f\u4e00\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u4e3b\u610f\u3002\n\u5047\u8bbe\u6bcf\u4e2a\u952e\u7684\u6392\u5e8f\u662f\u6709\u4fdd\u8bc1\u7684\uff0c\u90a3\u4e48\u4e0b\u6e38\u7684\u7ea6\u7b80\u7684\u754c\u53ef\u4ee5\u4ece\u534a\u683c\u964d\u4e3a\u534a\u7fa4\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5229\u7528\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u53bb\u4ea4\u6362\u6027\u7684\u8981\u6c42\uff0c\u4ece\u800c\u89e3\u9501\u66f4\u5bb9\u6613\u7684\u5b9e\u73b0\u3002\u5982\u679c\u4e3a\u5361\u592b\u5361\u6d88\u8d39\u8005\u8bbe\u8ba1\u7ea6\u7b80\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u8ba9\u6211\u77e5\u9053\uff0c\u6211\u4f1a\u5199\u4e0b\u6765\u3002\n\u4ec5\u63d0\u4f9b\u5bc6\u94a5\u662f\u4e0d\u591f\u7684\u3002\u5206\u533a(\u5373\u51fd\u6570f\uff1a(Key)=&gt\uff1bPartition)\u662f\u53ef\u914d\u7f6e\u7684\u3002Kafka\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5206\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u63a8\u51fa\u81ea\u5df1\u7684\u5206\u533a\u3002\u4e0d\u8981\u5047\u8bbe\u6240\u6709\u7684\u5236\u4f5c\u4eba\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u5206\u533a\u7a0b\u5e8f\u3002\n\u5728\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u4e2d\uff0c\u56f4\u68cb\u670d\u52a1\u3001Python\u670d\u52a1\u3001Spark\u548c\u5176\u4ed6\u91ce\u751f\u52a8\u7269\u90fd\u5171\u4eab\u540c\u4e00\u4e2aKafka\u96c6\u7fa4\uff0c\u53ef\u80fd\u5b58\u5728\u5404\u79cd\u4e0d\u540c\u7684\u5b9e\u73b0\u3002\u5982\u679c\u4e0d\u540c\u7684\u670d\u52a1\u5c06\u6570\u636e\u63a8\u9001\u5230\u76f8\u540c\u7684\u4e3b\u9898\uff0c\u96c6\u6210\u6d4b\u8bd5\u5c06\u975e\u5e38\u6709\u7528\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u4ea4\u4ed8\u7ed9\u6d88\u8d39\u8005\u7684\u5c06\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u8c03\u8bd5\u53ef\u80fd\u662f\u7eaf\u7cb9\u7684\u5730\u72f1\u3002\n\u5361\u592b\u5361\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u6570\u636e\u53ef\u4ee5\u6839\u636e\u9700\u8981\u591a\u6b21\u91cd\u65b0\u5904\u7406\uff0c\u8fd9\u53ef\u4ee5\u539f\u8c05\u5f88\u591a\u9519\u8bef\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u540c\u6837\u7684\u865a\u62df\u6a21\u578b\uff1a\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u6d88\u606f\u5728\u88ab\u63a8\u9001\u5230Kafka\u4e4b\u524d\u88ab\u5e8f\u5217\u5316\u4e3aJSON\u3002\u7531\u4e8eJSON\u5e8f\u5217\u5316\u9519\u8bef\uff0c\u4ee5\u4e0b\u5185\u5bb9\u88ab\u63a8\u9001\u5230\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605\u4e3b\u9898\uff1a\n\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u4e3a\u90a3\u4e9b\u6709\u7f3a\u9677\u7684\u5b9e\u4f8b\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u53cd\u5e8f\u5217\u5316\u7a0b\u5e8f\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6240\u6709\u4f7f\u7528\u8005\u3002\u8fd9\u4e0d\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u5bb9\u6613\u51fa\u9519\u7684\u4ee3\u7801\uff1b\u5b83\u53ea\u5bf9\u8fd9\u4e2a\u5b9e\u4f8b\u6709\u7528\u3002\n\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5b9e\u73b0\u4e00\u4e2a\u4ece\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-1\u8bfb\u53d6\u3001\u4fee\u590d\u95ee\u9898\u5e76\u5199\u5165\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-2\u7684\u4f7f\u7528\u8005\u3002\u4e00\u65e6\u4e24\u4e2a\u4e3b\u9898\u7684\u504f\u79fb\u91cf\u76f8\u540c\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u5c31\u53ef\u4ee5\u4ece\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-1\u5207\u6362\u5230\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-2\uff0c\u800c\u65e0\u9700\u66f4\u65b0\u4efb\u4f55\u4ee3\u7801\u3002\u8fd9\u6837\u505a\u7684\u4f1f\u5927\u4e4b\u5904\u5728\u4e8e\uff0c\u8fd9\u4e9b\u8fc1\u79fb\u53ef\u80fd\u4f1a\u5931\u8d25\u800c\u4e0d\u4f1a\u4ea7\u751f\u91cd\u5927\u540e\u679c\u3002\u5982\u679c\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-2\u4e0d\u8d77\u4f5c\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u8fd0\u884c\u5e76\u751f\u6210\u7535\u5b50\u90ae\u4ef6\u8ba2\u9605-3\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u6b64\u6280\u5de7\u4e5f\u9002\u7528\u4e8e\u91cd\u8981\u7684\u67b6\u6784\u66f4\u6539\u3001\u8fc1\u79fb\u548c\u5176\u4ed6\u6570\u636e\u4e30\u5bcc\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0cAvro\u548cProfobuf\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4f46\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u9700\u6c42\u4f1a\u4ee5\u4e0d\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u53d1\u5c55\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u901a\u8fc7\u8bfb\u53d6\u4e3b\u9898\u7684\u6570\u636e\u5e76\u5c06\u5176\u53d1\u5e03\u5230\u4e3b\u9898\u6765\u4fee\u590d\u8be5\u4e3b\u9898\u7684\u6570\u636e\u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u4e3b\u9898\u5e94\u8be5\u662f\u4e0d\u53ef\u53d8\u7684\u548c\u771f\u5b9e\u7684\u3002\n\u81f3\u5c11\u57282.6.0\u4e4b\u524d\uff0c\u5361\u592b\u5361\u90fd\u4f9d\u8d56ZooKeeeper\u3002\u5931\u53bb\u4e0eZooKeeper\u7684\u8fde\u63a5\u610f\u5473\u7740\u6ca1\u6709ISR(\u540c\u6b65\u590d\u5236\uff0c\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd)\uff0c\u6ca1\u6709\u5206\u533a\u9886\u5bfc\u9009\u4e3e\uff0c\u6700\u7ec8\u4f1a\u6709\u7ecf\u7eaa\u4eba\u5173\u95e8\u3002\u8c22\u5929\u8c22\u5730\uff0c@fpjuqueira\u548c\u4ed6\u521b\u5efaZooKeeper\u7684\u56e2\u961f\u662f\u771f\u6b63\u7684\u4e13\u4e1a\u4eba\u58eb\uff0c\u8fd9\u4e0d\u4f1a\u65e0\u7f18\u65e0\u6545\u53d1\u751f\u3002\u4e8b\u5b9e\u4e0a\uff0cZooKeeper\u662f\u6700\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e4b\u4e00(\u81f3\u5c11\u6211\u89c1\u8fc7)\u3002\n\u7531\u4e8eProvisioning Ansible\u811a\u672c\u4e2d\u7684\u9519\u8bef\uff0c\u4e00\u4e2a\u96c6\u7fa4\u76842/3\u4e2aRD\u6700\u7ec8\u4f4d\u4e8e\u540c\u4e00\u53ef\u7528\u533a\uff0c\u5177\u6709\u8fde\u7eed\u7684IP(\u901a\u5e38\u610f\u5473\u7740\u5728AWS\u4e0a\u7684\u540c\u4e00\u673a\u67b6\u4e2d)\u3002\u5b83\u4eec\u540c\u65f6\u6d88\u5931\u3002\u6ca1\u6709\u5171\u8bc6\uff0c\u5730\u72f1\u7206\u53d1\u4e86\u3002\nQA\u73af\u5883\u8fd0\u884c\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u4ee5\u81f3\u4e8e\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u8017\u5c3d\u78c1\u76d8\u7a7a\u95f4(ZooKeeper\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u521b\u5efa\u4e8b\u52a1\u65e5\u5fd7\u7684\u5907\u4efd\u5feb\u7167\uff0c\u800c\u5916\u90e8\u4eba\u5458\u5fc5\u987b\u5904\u7406\u5220\u9664\u8fd9\u4e9b\u5feb\u7167\u7684\u95ee\u9898)\u3002\u540c\u65f6\u3002\u8981\u8ba9\u8fd9\u4e2aenv\u6062\u590d\u751f\u673a\uff0c\u9700\u8981\u624b\u52a8\u7f16\u8f91znode\uff0c\u5e76\u4e14\u9759\u6001\u6570\u636e\u4f1a\u4e22\u5931\u3002\n\u4e3a\u4e86\u6e05\u7406ZooKeeper 3.4.x\u4e2d\u8f83\u65e7\u7684\u4e8b\u52a1\u65e5\u5fd7\u5feb\u7167\uff0cZooKeeper\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5de5\u5177\uff1a\n\u8fd9\u53ea\u662f\u4e24\u4e2a\u4f8b\u5b50\u3002\u53ef\u80fd\u4f1a\u51fa\u66f4\u591a\u7684\u5dee\u9519\u3002\u7531\u4e8e\u6545\u969c\u7684\u540e\u679c\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u9002\u5f53\u7684JMX\u5ea6\u91cf\u76d1\u63a7\u548c\u5b9e\u65f6\u65e5\u5fd7\u805a\u5408\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0ePagerDuty\u7684\u5f62\u5f0f\u6302\u94a9\u3002\n\u8fd9\u672c\u8d28\u4e0a\u662f\u53ef\u7528\u6027\u548c\u8010\u7528\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u8ba9\u6211\u4eec\u4ece\u4e0d\u5e72\u51c0\u7684\u9009\u4e3e\u5f00\u59cb\u5427\u3002\n\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u5206\u533a\u548c\u4e00\u4e2a\u526f\u672c\u7684\u4e3b\u9898\u3002\u6570\u636e\u6b63\u5728\u6109\u5feb\u5730\u6d41\u5165\u3002\u5982\u679c\u526f\u672c\u662f\u540c\u6b65\u7684(\u4e5f\u5c31\u662f\u4e0e\u5f15\u5bfc\u5668\u548cZooKeeper\u4e2d\u7684ISR\u96c6\u76f8\u540c)\uff0c\u5219\u5982\u679c\u5f15\u5bfc\u5668\u5206\u533a\u53d8\u5f97\u4e0d\u53ef\u7528(\u4f8b\u5982\u4ee3\u7406\u5d29\u6e83)\uff0c\u5219\u526f\u672c\u53ef\u4ee5\u62fe\u53d6\u3001\u63a5\u53d7\u5199\u5165\u5e76\u7ee7\u7eed\uff0c\u800c\u4e0d\u4f1a\u505c\u673a\u3002\u4f46\u5982\u679c\u526f\u672c\u6ede\u540e\uff0c\u5219\u5f15\u5bfc\u5668\u5c06\u4eceZooKeeper\u4e2d\u7684ISR\u4e2d\u5220\u9664\u5b83\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5012\u53f0\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\u6ede\u540e\u7684\u590d\u5236\u526f\u672c\u62fe\u53d6\u5e76\u63a5\u53d7\u5199\u5165\uff0c\u65e7\u9886\u5bfc\u8005\u7684\u4efb\u4f55\u591a\u4f59\u5199\u5165\u90fd\u4f1a\u4e22\u5931\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u526f\u672c\u5728\u6ca1\u6709\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u8005\u3002\u8fd9\u662f\u4e0d\u5e72\u51c0\u7684\u90e8\u5206\u3002\n\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4e3b\u9898\u6240\u5305\u542b\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u4e3b\u9898\u5305\u542b\u7cfb\u7edf\u6307\u6807\uff0c\u5219\u6700\u65b0\u7684\u6570\u636e\u53ef\u80fd\u66f4\u6709\u4ef7\u503c\uff0c\u56e0\u6b64\u4e22\u5931\u4e00\u4e9b\u8f83\u65e7\u7684\u5199\u5165\u53ef\u80fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u5982\u679c\u4e3b\u9898\u5305\u542b\u94f6\u884c\u4ea4\u6613\uff0c\u5219\u4e0b\u964d\u5230\u4eba\u5de5\u5e72\u9884\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u8fd9\u662f\u53ef\u4ee5\u8986\u76d6\u6bcf\u4e2a\u4e3b\u9898\u7684\u4ee3\u7406\u7ea7\u914d\u7f6e\u3002\n\u6b64\u7b49\u5f0f\u7684\u7b2c\u4e8c\u90e8\u5206\u662fmin.insync.plicas\uff0c\u5b83\u8868\u793a\u4e3a\u5b8c\u6210\u5199\u5165\u800c\u5fc5\u987b\u540c\u6b65\u7684\u6700\u5c0f\u526f\u672c\u6570\u3002\u8fd9\u53ef\u4ee5\u5728\u4ee3\u7406\u7ea7\u3001\u4e3b\u9898\u7ea7\u751a\u81f3\u5728\u751f\u4ea7\u8005\u7ea7(\u5373ACK)\u8fdb\u884c\u914d\u7f6e\u3002\u4e0e\u4e0a\u9762\u76f8\u540c\u7684\u8003\u8651\u56e0\u7d20\u662f\uff0c\u5982\u679c\u4e3b\u9898\u5305\u542b\u4ed8\u6b3e\uff0c\u90a3\u4e48\u53ea\u6709\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6570\u636e\u7684\u526f\u672c\u53ef\u80fd\u4f1a\u6709\u98ce\u9669\u3002\n\u4f20\u5947\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7814\u7a76\u5458\u51ef\u5c14\u00b7\u91d1\u65af\u4f2f\u91cc\uff0c\u53c8\u540d\u963f\u83f2\uff0c\u5728\u5927\u7ea67\u5e74\u524d\u5bf9\u5361\u592b\u5361\u7684\u590d\u5236\u673a\u5236\u505a\u4e86\u4e00\u6b21\u51fa\u8272\u7684\u5206\u6790\u3002\u5982\u679c\u4f60\u60f3\u66f4\u6df1\u5165\u5730\u7814\u7a76\u8fd9\u79cd\u6743\u8861\uff0c\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb\u963f\u83f2\u7684\u8fd9\u7bc7\u6587\u7ae0\u3002\u636e\u6211\u6240\u77e5\uff0c\u8ba8\u8bba\u7684\u57fa\u672c\u6743\u8861\u5728\u4eca\u5929\u4ecd\u7136\u9002\u7528\u3002\n\u5361\u592b\u5361\u7528\u4e86\u5f88\u591a\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u8017\u5c3d\u8fd9\u4e9b\u5206\u533a\u4f1a\u5bfc\u81f4\u81f4\u547d\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u4ece\u800c\u6740\u6b7b\u4ee3\u7406\u3002\u5982\u679c\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7f3a\u7701\u503c\uff0c\u5219\u6781\u6709\u53ef\u80fd\u5728\u7fa4\u96c6\u7684\u6bcf\u4e2a\u4ee3\u7406\u5305\u542b\u6570\u4e07\u4e2a\u5206\u533a\u65f6\u5c31\u4f1a\u8fbe\u5230\u8fd9\u4e9b\u7f3a\u7701\u503c\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5728\u4e00\u4e2a\u5747\u8861\u7684\u96c6\u7fa4\u4e2d\uff0c\u4ee3\u7406\u62e5\u6709\u76f8\u4f3c\u6570\u91cf\u7684\u5206\u533a\uff0c\u8fd9\u4e9b\u6545\u969c\u5c06\u5927\u81f4\u540c\u65f6\u53d1\u751f\u3002\u8ba9\u6211\u4eec\u66f4\u4ed4\u7ec6\u5730\u4e86\u89e3\u4e00\u4e0b\uff1a\nMAX_MAP_COUNT\uff1a\u8be5\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u62e5\u6709\u7684\u6700\u5927\u5185\u5b58\u6620\u5c04\u533a\u6570\u91cf\u3002\u5185\u5b58\u6620\u5c04\u533a\u88ab\u7528\u4f5c\u8c03\u7528Malloc\u7684\u526f\u4f5c\u7528\uff0c\u76f4\u63a5\u7531mmap\u3001mProtection\u548cmise\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u52a0\u8f7d\u5171\u4eab\u5e93\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u867d\u7136\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u8981\u4e0d\u5230\u4e00\u5343\u4e2a\u6620\u5c04\u8868\uff0c\u4f46\u67d0\u4e9b\u7a0b\u5e8f\uff0c\u7279\u522b\u662fMalloc\u8c03\u8bd5\u5668\uff0c\u53ef\u80fd\u4f1a\u6d88\u8017\u5927\u91cf\u7684\u6620\u5c04\u8868\uff0c\u4f8b\u5982\uff0c\u6bcf\u6b21\u5206\u914d\u6700\u591a\u4e00\u4e2a\u6216\u4e24\u4e2a\u6620\u5c04\u8868\u3002\u9ed8\u8ba4\u503c\u4e3a65536\u3002\n\u6bcf\u4e2a\u65e5\u5fd7\u6bb5\u9700\u8981\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u548c\u4e00\u4e2a\u65f6\u95f4\u7d22\u5f15\u6587\u4ef6\uff1b\u6bcf\u4e2a\u6587\u4ef6\u90fd\u9700\u8981\u4e00\u4e2a\u6620\u5c04\u533a\u3002\u6bcf\u4e2a\u5206\u533a\u5305\u542b\u591a\u4e2a\u65e5\u5fd7\u6bb5\u3002Kafka\u5173\u95ed\u4e00\u4e2a\u6bb5\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u6bb5\u7684\u9891\u7387\u53d6\u51b3\u4e8eSegment.bytes\u548cSegment.ms\uff0c\u9ed8\u8ba4\u4e3a1 GB\u548c7\u5929\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4fdd\u7559\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u4e00\u5e74\uff0c\u6570\u636e\u6bb5\u8bbe\u7f6e\u4e3a\u6bcf\u5929\u6eda\u52a8\uff0c\u5219\u4e00\u4e2a\u5206\u533a\u4e00\u5e74\u540e\u53ef\u80fd\u6709365\u4e2a\u65e5\u5fd7\u6570\u636e\u6bb5\u3002\u6bcf\u4e2a\u5206\u533a\u90fd\u9700\u89812\u4e2a\u6620\u5c04\u533a\u3002\u5982\u679c\u4e00\u4e2a\u4ee3\u7406\u67091,000\u4e2a\u8fd9\u6837\u7684\u5206\u533a\uff0c\u5b83\u5c06\u9700\u8981365x2x1000=730000\u4e2a\u6620\u5c04\u533a\u57df\u3002\n\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u5f88\u9ad8\uff0c\u4f46\u5982\u679c\u5361\u592b\u5361\u5145\u5f53\u4e00\u4e2a\u79d1\u6280\u7ec4\u7ec7\u7684\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\uff0c\u62e5\u6709\u6570\u5343\u4e2a\u5206\u533a\u548c\u6570\u4e07\u4e2a\u65e5\u5fd7\u6bb5\u5e76\u4e0d\u5c11\u89c1\u3002\u8003\u8651\u5230\u5361\u592b\u5361\u7684PID\uff0c\u8981\u67e5\u770b\u4e00\u4e2a\u7ecf\u7eaa\u4eba\u76ee\u524d\u6b63\u5728\u6d88\u8d39\u591a\u5c11\u5730\u56fe\uff1a\n\u6ce8\u610f\uff1a\u8fd9\u53ef\u80fd\u4e0d\u662f\u542f\u52a8\u8fdb\u7a0b\u7684\u9650\u5236\u3002\u8981\u589e\u52a0\u5f53\u524d\u4f1a\u8bdd\u7684\u9650\u5236\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u5feb\u901f\u89e3\u51b3\u65b9\u6848\u662f\u589e\u52a0\u6700\u5927\u6620\u5c04\u533a\u57df\u5e76\u91cd\u65b0\u542f\u52a8\u4ee3\u7406\u3002\u5b9e\u9645\u89e3\u51b3\u65b9\u6848\u662f\u68c0\u67e5\u6570\u636e\u6bb5\u5927\u5c0f\u3001\u4fdd\u7559\u7b56\u7565\u548c\u6570\u636e\u6bb5\u6eda\u52a8\u8ba1\u5212\uff0c\u4ee5\u53d1\u73b0\u6548\u7387\u4f4e\u4e0b\u7684\u5730\u65b9\u3002\n\u6587\u4ef6\u63cf\u8ff0\u7b26\u9650\u5236\uff1aKafka\u5bf9\u65e5\u5fd7\u6bb5\u548c\u5f00\u653e\u8fde\u63a5\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5982\u679c\u4e00\u4e2a\u4ee3\u7406\u6258\u7ba1\u4e86\u8bb8\u591a\u5206\u533a\uff0c\u8003\u8651\u5230\u8be5\u4ee3\u7406\u9664\u4e86\u8ddf\u8e2a\u4ee3\u7406\u5efa\u7acb\u7684\u8fde\u63a5\u6570\u91cf\u5916\uff0c\u81f3\u5c11\u9700\u8981\u8ddf\u8e2a\u6240\u6709\u65e5\u5fd7\u6bb5\u3002\u6211\u4eec\u5efa\u8bae\u81f3\u5c11100000\u4e2a\u5141\u8bb8\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f5c\u4e3a\u4ee3\u7406\u8fdb\u7a0b\u7684\u8d77\u70b9\u3002\n\u6211\u89c1\u8fc7\u7684\u751f\u4ea7\u7ecf\u7eaa\u4eba\u6d88\u8017\u4e86\u5927\u7ea640\u4e07\u53f0\u8fd9\u6837\u7684\u8bbe\u5907\u3002\u5728\u6709\u5927\u91cf\u6d88\u8d39\u8005\u548c\u7ec6\u5206\u5e02\u573a\u7684\u60c5\u51b5\u4e0b\uff0c100K\u53ef\u80fd\u662f\u4e0d\u591f\u7684\u3002\u65e0\u8bba\u5982\u4f55\uff1a\n\u6ce8\u610f\uff1a\u6620\u5c04\u533a\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\uff0c\u5e76\u4e14\u6839\u636eKafka\u8fd0\u884c\u7684\u4f4d\u7f6e\u800c\u6709\u6240\u4e0d\u540c\u3002\u5982\u679cKafka\u90e8\u7f72\u5728Kubernetes\u6216Mesos\u4e0a\uff0c\u5bb9\u5668\u7f16\u6392\u5c42\u53ef\u80fd\u4f1a\u5f15\u5165\u989d\u5916\u7684\u7ea6\u675f\u3002\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u662f\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u5c06Segment.bytes\u548cSegment.ms\u8bbe\u7f6e\u4e3a\u5c0f\u503c\uff0c\u7136\u540e\u901a\u8fc7\u7f16\u7a0b\u521b\u5efa\u4e3b\u9898\u548c\u6d88\u8d39\u8005\uff0c\u76f4\u5230Kafka\u5d29\u6e83\u3002\n\u65e5\u5fd7\u538b\u7f29\u7684\u76ee\u7684\u662f\u4fdd\u7559\u5206\u533a\u4e2d\u6bcf\u4e2a\u952e\u7684\u6700\u540e\u5df2\u77e5\u503c\u3002\u6b64\u8fc7\u7a0b\u4fdd\u7559\u4e86\u6700\u6709\u4ef7\u503c\u7684\u6570\u636e\uff0c\u8282\u7701\u4e86\u7a7a\u95f4\uff0c\u5e76\u52a0\u5feb\u4e86\u4e3b\u9898\u7684\u91cd\u65b0\u5904\u7406\u3002\u8981\u4f7f\u65e5\u5fd7\u538b\u7f29\u6b63\u5e38\u5de5\u4f5c\uff0c\u9700\u8981\u914d\u7f6e\u952e\u548c\u5206\u533a(\u8bf7\u53c2\u89c1(1))\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5bf9\u4e8ea)\u6211\u4eec\u9700\u8981\u6c38\u4e45\u4fdd\u7559\u4e00\u4e2a\u5b9e\u4f53\u5e76\u4e14b)\u6b64\u5b9e\u4f53\u7ecf\u5e38\u66f4\u65b0\u7684\u7528\u4f8b\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4ece\u7528\u6237\u914d\u7f6e\u6587\u4ef6\u5230\u5e10\u6237\u4f59\u989d\u518d\u5230\u7edf\u8ba1\u6570\u636e\u805a\u5408\u3002\u8981\u4f7f\u65e5\u5fd7\u538b\u7f29\u8d77\u4f5c\u7528\uff0c\u9996\u5148\u8981\u786e\u4fdd\u5728server.properties\u4e0a\u542f\u7528\u4e86\u5b83(\u8fd9\u662f0.9.0\u4ee5\u540e\u7684\u9ed8\u8ba4\u8bbe\u7f6e)\uff1a\n\u6839\u636e\u7ecf\u9a8c\uff0c\u5982\u679c\u8fc7\u5ea6\u4f7f\u7528\u538b\u7f29\uff0c128MB\u7684\u5927\u5c0f\u6709\u70b9\u592a\u5c0f\u3002\u6700\u91cd\u8981\u7684\u662f\uff0cLog Cleaner\u7ba1\u7406\u5668\u7ebf\u7a0b\u53ef\u4ee5\u5728\u4e0d\u6740\u6b7b\u4ee3\u7406\u7684\u60c5\u51b5\u4e0b\u7ec8\u6b62\u3002\u5982\u679c\u4ee3\u7406\u4f9d\u8d56Log\u538b\u7f29\uff0c\u5219\u786e\u4fdd\u76d1\u89c6log-leaner.log\u7684\u9519\u8bef\u3002\u5982\u679c\u8fd9\u4e9b\u7ebf\u7a0b\u6b7b\u4e86\uff0c\u90a3\u4e48\u4ee3\u7406\u53ef\u80fd\u4f1a\u5750\u5728\u4e00\u4e2a\u5b9a\u65f6\u5668\u78c1\u76d8\u70b8\u5f39\u4e0a\u3002\n\u5982\u679c\u4e0a\u9762\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u7684\u5730\u65b9\uff0c\u8bf7\u8ba9\u6211\u77e5\u9053\u3002\u540c\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u822c\u7684\u53cd\u9988\uff0c\u6216\u8005\u8981\u6c42\u5bf9\u4efb\u4f55\u4e8b\u60c5\u8fdb\u884c\u6269\u5c55\u3002", "note_en": "Apache Kafka is a beautiful system. It scales well, it is stable and it provides phenomenal system architecture flexibility.After 5 years of running production Kafka clusters, I have collected a list of tips and pitfalls. Some of them were learnt the hard way.If you work in a small team rolling out Kafka to production, those might prove useful.The article assume familiarity with basic Kafka concepts, such as brokers, topics, producers and consumers.What is more, the following points should be valid for up to Kafka 2.6.0.Without further ado.\n  Kafka topics consist of a (configurable) number of partitions.If the partition number is not provided by the user,  KafkaProducerchooses the partition for the message using the  key in the  ProducerRecord instance passed to it.\n Check out the default  implementation:It checks if the key is  null, and if it isn&#39;t it, computes a  murmur2 hash modulo the number of partitions.This is consistent; it will yield the same result for messages sharing the same key.If the key is  null though, it uses a  sticky partitionerthat chooses a partition randomly at every batch.In practical terms, if no key is passed, the producer will choose the partition randomly.\n This has important implications because  Kafka only provides delivery ordering guarantees within a partition.Messages in the same partition will be delivered in the order they were committed.Messages in different partitions will be delivered in non-deterministic order.If the messages have any form of  causal relationship between them, and they are  not in the same partition,then any downstream consumer will have to collect all messages for a key before processing them, else causal consistency might be violated; whatever  all means in the context ofan infinite stream.\n As a simple example to illustrate the above, think of a simple event like the following:\n    If per-email causal order is not guaranteed though, we need to maintain enough state to knowif the event we see is indeed the latest. Else if the order is reversed, we might send an email to a user whohas unsubscribed.For example:\n  If we key messages using  email, then Kafka will deliver all messages for a single email in the order they were inserted.Our consumer can be completely stateless; it can fetch messages from Kafka and store them to a datastore.If the key is  null (none provided), our stateless consuer will happily store a message from the past.To mitigate that, at the very minimum we need to maintain the latest  createdOn date for every email.Relying on wall clocks for causality  is a very bad idea.\n Assuming per key ordering can be guaranteed, downstream reducer bounds can be reduced from a  Semilattice to a  Semigroup.In practical terms, by taking advantage of this property we can drop the commutativity requirement which unlocks easier implementations.If designing reducers for Kafka consumers sounds interesting, let me know and I will write about it.\n  Providing a key is not enough. Partitioners (ie the function f: (key) =&gt; partition) are configurable.Kafka provides a few and users can roll out their own. Do  NOT assume all producers are using the same partitioner.\n In a complex system where Go services, Python services, Spark and other wild animals all share the same Kafka cluster, all sorts of different implementations might exist.If different services are pushing data to the same topics, an integration test would be very useful.If things go wrong, delivery to consumers will be non-deterministic and debugging it can be pure hell.\n  The beauty of Kafka is that data can be reprocessed as many times as needed.This forgives a lot of errors. To illustrate this one, let&#39;s assume the same dummy model:\n  Let&#39;s now assume messages are serialized to  json before being pushed to Kafka.Due to a json serialization bug, the following is pushed to the  emailsubscriptions topic:\n     One solution would be to create a custom deserializer for those buggy instances and to add it to all the consumers.That&#39;s non trivial and error prone code; useful just for this instance.\n Another solution would be to implement a consumer that would read from  emailsubscriptions-1, fix the issue, and write to  emailsubscriptions-2.Once the offsets of the two topics are identical, producers and consumers can switch from  emailsubscriptions-1 to  emailsubscriptions-2 without having to update any code.What&#39;s great about this is that those migrations can fail with no major consequences. If  emailsubscriptions-2 is no good, we can run again and produce  emailsubscriptions-3 and so on.This trick also works for non-trivial schema changes, migrations and other data enrichments.Avro and Profobuf can help in some cases, but bugs will occur and requirements will evolve in unpredictable ways.In any case, &#34;fixing&#34; a topic&#39;s data by reading from it and publishing to it is rarely a good idea.Topics should be immutable and versioning them can help in many situations where a topic&#39;s content have been corrupted.\n  Up until at least 2.6.0, Kafka relies on ZooKeeper.Losing connection to ZooKeeper means no ISRs (In-Sync-Replicas, more on that later), no partition leader election and eventually the brokers shut down.Thankfully  @fpjunqueira and his team who created ZooKeeper are real pros, and that won&#39;t happen without reason.In fact, ZooKeeper is one of the most reliable distributed systems (that I have seen at least).\n  Due to a bug in the provisioning Ansible script, 2/3rds of a cluster ended up in the same availability zone, with sequential IPs (that usually means in the same rack on AWS).They all disappeared at the same time. No consensus, hell broke loose.\n A QA environment ran for long enough for all nodes to run out of disk space (ZooKeeper creates backup snapshots of the transaction log over time and someone/something external has to deal with deleting them).At the same time. Bringing this env back to life required editing znodes manually, and still data was lost.\n To clean up older transaction log snapshots in ZooKeeper 3.4.x, ZooKeeper provides the following tool:\n   Those are just two examples. A lot more can go wrong. Because of the consequences of failure, proper JMX metric monitoring and real time log aggregation,all hooked up to a form of PagerDuty, are very highly recommended.\n  This is essentially a trade off between availability and durability. Let&#39;s start with unclean elections.\n Let&#39;s assume we have a topic with a single partition and a single replica. Data is happily flowing in.If the replica is &#34;in-sync&#34; (aka identical to the leader and in the ISR set in ZooKeeper),then if the leader partition becomes unavailable (eg the broker crashes) then the replica can pick up, accept writes and continue with no downtime.If the replica lags behind though, the leader will remove it from the ISRs in ZooKeeper. If then the leader goes down, there are two options:\n The lagging replica picks up, accepts writes and whatever excess writes the old leader had are  lost. Essentially, the replica gets elected as leader without being in-sync. This is the &#34;unclean&#34; part.\n It entirely depends on the kind of data the topic holds. If the topic holds system metrics,then maybe the most recent data is more valuable and thus losing some older writes might be acceptable.If the topic contains bank transactions, going down until a human intervenes might be a better option.This is a broker level config that can be overridden per topic.\n The second part of this equation is  min.insync.replicas, which represents the minimum number of replicas that have to be in-sync for a write to go through.This is configurable at the broker level, topic level and even at the producer level (ie  acks). Same considerations as above,if the topic holds payments, having just 1 replica with all the data might be risky.\n Legendary distributed systems researcher Kyle Kingsbury, aka Aphyr, did an  excellent analysis on Kafka&#39;s replication mechanism some 7 years ago.If you wish to dig deeper into this trade off, reading Aphyr&#39;s piece is very highly recommeneded. As far as I understand, the basic trade offs discussed still hold true today.\n  Kafka uses a LOT of those. Running out of them leads to a fatal runtime exception that will kill the broker.If the OS defaults are used, it is extremely likely that those will be reached as soon as the cluster has a few tens of thousand segments per broker.What&#39;s worse is that in a well balanced cluster where brokers hold similar numbers of partitions, those failures will occur roughly at the same time.Let&#39;s look a bit closer:\n   max_map_count: This file contains the maximum number of memory map areas a processmay have. Memory map areas are used as a side-effect of callingmalloc, directly by mmap, mprotect, and madvise, and also when loadingshared libraries.While most applications need less than a thousand maps, certainprograms, particularly malloc debuggers, may consume lots of them,e.g., up to one or two maps per allocation. The default value is 65536.\n Each log segment requires an  index file and a  timeindex file; each of those require 1 map area.Each partition contains a number of log segments. How often Kafka closes a segment and opens a new one depends on  segment.bytes and  segment.ms.The defaults are 1GB and 7 days. If for example retention is set to a year, and the segments are set to roll daily then 1 partition might have 365 log segments a year later.Each of those will require 2 map areas. If a broker has 1000 partitions like this one it will require 365 x 2 x 1000 = 730000 map areas.\n This might sound high, but if Kafka serves as the central nervous system of a tech organisation, having thousands of partitions and tens of thousands of log segments is not uncommon.To see how many maps a broker is currently consuming, given the  pid of Kafka:\n      Note: this might not be the limit with which the process was started.To increase the limit for the current session:\n         The quick solution is to increase the maximum map areas and restart the broker.The actual solution is to review segment sizes, retention policies and segment rolling schedules to spot inefficiencies.\n   File descriptor limits: Kafka uses file descriptors for log segments and open connections.If a broker hosts many partitions, consider that the broker needsat least (number_of_partitions)*(partition_size/segment_size)to track all log segments in addition to the number of connections the broker makes.We recommend at least 100000 allowedfile descriptors for the broker processes as a starting point.\n   Production brokers I have seen consume roughly 400K of those. 100K might not be enough in cases where a large number of consumers and segments are in play.In any case:\n   Note: Both map areas and file descriptors are OS dependent and vary depending on where Kafka is running.In cases where Kafka is deployed on Kubernetes or Mesos, the container orchestration layer might introduce additional constraints.A good approach would be to set  segment.bytes and  segment.ms to tiny values on a test environment and then create topics and consumers programmatically until Kafka breaks.\n  The purpose of Log Compaction is to retain the last known value for every key in a partition. This process retains the most valuable data, saves space and speeds up reprocessing the topics. For Log Compaction to work properly,keys and partitioning needs to be configured (see (1.)). In practice, it is a good candidate for use cases wherea) we need to retain an entity forever andb) this entity is updated often.Examples can range from user profiles, to account balances to stats aggregations.For log compaction to work, first make sure it is enabled on  server.properties (this is the default since 0.9.0):\n    Empirically, the 128MB is a bit too little if compaction is used aggressively.Most importantly, the Log Cleaner manager thread can die without killing the broker.If the broker relies on Log Compaction, then make sure  log-cleaner.log is monitored for errors.If those threads die, then the broker might sit on a ticking disk bomb.\n  If something isn&#39;t right in the above, please let me know.Ditto for general feedback, or requests to expand on anything.", "posttime": "2020-11-10 03:13:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5361\u592b\u5361,kafka,\u5206\u533a", "title": "\u963f\u5e15\u5947\u00b7\u5361\u592b\u5361-\u4e0a\u7ebf\u524d\u9700\u8981\u68c0\u67e5\u76848\u4ef6\u4e8b", "title_en": "Apache Kafka \u2013 8 things to check before going live", "transed": 1, "url": "https://ariskk.com/kafka-8-things", "via": "", "real_tags": ["\u5361\u592b\u5361", "kafka", "\u5206\u533a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034110, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b54\uff1aSlingbox\u670d\u52a1\u5668\u5c06\u5728\u5ba3\u5e03\u505c\u6b62\u8fd0\u884c24\u4e2a\u6708\u540e\u6c38\u4e45\u79bb\u7ebf\r\u65e5\u671f(2020\u5e7411\u67089\u65e5)\uff0c\u5c4a\u65f6\u6240\u6709Slingbox\u8bbe\u5907\u548c\u670d\u52a1\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\r\r\u5728\u6b64\u4e4b\u524d\uff0c\u5927\u591a\u6570Slingbox\u578b\u53f7\u5c06\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u652f\u6301\u7684\u8bbe\u5907\u6570\u91cf\r\u968f\u7740SlingPlayer\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\u8fc7\u65f6\u548c/\u6216\u4e22\u5931\uff0c\u89c2\u770b\u6b21\u6570\u5c06\u7a33\u6b65\u51cf\u5c11\r\u517c\u5bb9\u6027\u3002\r\r\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u8f6f\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u90e8\u5206\u3002\nA\uff1a\u6211\u4eec\u4e0d\u5f97\u4e0d\u4e3a\u65b0\u7684\u521b\u65b0\u4ea7\u54c1\u817e\u51fa\u7a7a\u95f4\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u7ee7\u7eed\u4e3a\u5ba2\u6237\u670d\u52a1\r\u6700\u597d\u7684\u529e\u6cd5\u3002\n\u7b54\uff1a\u4e00\u4e9b\u7248\u672c\u7684SlingPlayer\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u6536\u5230\u7ef4\u62a4\u66f4\u65b0\uff0c\u4f46\u4e0d\u4f1a\u6709\u65b0\u7684\u66f4\u65b0\r\u5f00\u53d1\u5de5\u4f5c\u3002\u8fc7\u65f6\u6216\u4f20\u7edf\u7248\u672c\u7684SlingPlayer\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u4ece\u5e94\u7528\u7a0b\u5e8f\u5546\u5e97\u4e2d\u5220\u9664\r\u5728\u6ca1\u6709\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u3002\n\u7b54\uff1a\u81ea2020\u5e7411\u67089\u65e5\u8d77\uff0c\u4ee5\u4e0b\u5e94\u7528\u7a0b\u5e8f\u4e0d\u518d\u53d7\u652f\u6301\u548c/\u6216\u4e0d\u518d\u63d0\u4f9b\r\u4e0b\u8f7d\uff1a\r\r\u5982\u679c\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86\u5176\u4e2d\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u7ee7\u7eed\u5728\u8be5\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0c\u4f46\u60a8\u4e0d\u4f1a\r\u53ef\u4ee5\u91cd\u65b0\u5b89\u88c5\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5728\u67d0\u4e00\u65f6\u523b\u505c\u6b62\u8fd0\u884c\u3002\n\u95ee\uff1a\u6211\u82b1\u4e86\u94b1\u4e70\u4e86\u4e00\u6b3eSlingbox\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u6211\u518d\u4e5f\u65e0\u6cd5\u4e0b\u8f7d/\u5b89\u88c5\u5b83\u4e86\u3002\n\u7b54\uff1a\u5e94\u7528\u5546\u5e97\u4e0d\u518d\u63d0\u4f9b\u4e00\u4e9b\u4ed8\u8d39\u7248\u672c\u7684SlingPlayer\u5e94\u7528\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\r\u5982\u679c\u5b89\u88c5\u4e86\u4ed8\u8d39\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u7ee7\u7eed\u8fd0\u884c\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff0c\u6211\u4eec\u5c06\u4e0d\u4e88\u9000\u6b3e\u3002\r\u4efb\u4f55\u4ed8\u8d39\u5e94\u7528\u7a0b\u5e8f\u8d2d\u4e70\u3002\nA\uff1aSlingbox\u4fdd\u4fee\u671f\u4e3a1\u5e74\u3002\u5982\u679c\u60a8\u662f\u4ece\u6388\u6743\u7ecf\u9500\u5546\u90a3\u91cc\u8d2d\u4e70\u7684\u5f39\u7c27\u76d2\uff0c\r\u7f8e\u56fd\u6216\u52a0\u62ff\u5927\uff0c\u5e76\u6709\u4e00\u4efd\u6536\u636e\u7684\u590d\u5370\u4ef6\uff0c\u60a8\u7684\u4fdd\u4fee\u5c06\u5728\u6b63\u672c\u4e0b\u8fdb\u884c\u3002\r\u6761\u6b3e\u548c\u6761\u4ef6\u3002\n\u95ee\uff1a\u6211\u7684\u624b\u673a\u574f\u4e86\uff0c\u4f46\u6211\u5df2\u7ecf\u8d85\u51fa\u4e86\u4fdd\u4fee\u671f\u3002\u6211\u53ef\u4ee5\u628a\u6211\u7684\u8bbe\u5907\u5bc4\u7ed9\u4f60\u5417\uff1f\r\u6709\u507f\u7ef4\u4fee\u670d\u52a1\uff1f\n\u7b54\uff1aSlingbox\u4e0d\u4f1a\u53d1\u8d27\u4efb\u4f55\u65b0\u4ea7\u54c1\uff0c\u800c\u4e14\u5927\u591a\u6570\u6388\u6743\u7ecf\u9500\u5546\u5df2\u7ecf\u7f3a\u8d27\u4e00\u6bb5\u65f6\u95f4\u4e86\r\u51e0\u5e74\u4e86\u3002\u62e8\u6253\u5ba2\u670d\u7535\u8bdd\u53ef\u4ee5\u83b7\u5f97\u7535\u6e90\u9002\u914d\u5668\u3002\n\u7b54\uff1a\u82e5\u8981\u7acb\u5373\u83b7\u5f97\u652f\u6301\uff0c\u4ecd\u5728\u4fdd\u4fee\u671f\u5185\u7684\u5ba2\u6237\u5e94\u62e8\u6253\u6211\u4eec\u7684\u5e38\u89c4\u652f\u6301\u7535\u8bdd\uff1a\r\u7535\u8bdd\uff1a1-866-974-2570\u3002\u8bf7\u51c6\u5907\u597d\u60a8\u7684\u8bbe\u5907\u5e8f\u5217\u53f7\u3002\r\r\u6709\u5173\u6240\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u5728slingbox.com\u4e0a\u7684\u5e2e\u52a9\u90e8\u5206", "note_en": "A: Slingbox servers will be permanently taken offline 24 months after the discontinued announcement\r date (November 9, 2020), at which point ALL Slingbox devices and services will become inoperable.\r   \r Until then, most Slingbox models will continue to work normally, but the number of supported devices\r for viewing will steadily decrease as versions of the SlingPlayer apps become outdated and/or lose\r compatibility.\r   \r See SOFTWARE &amp; APPS section below for additional details.\n  A: We\u2019ve had to make room for new innovative products so that we can continue to serve our customers in\r the best way possible.\n    A: Some versions of the SlingPlayer app may receive maintenance updates, but there will be no new\r development work. Outdated or legacy versions of the SlingPlayer apps may be removed from the app stores\r without notice.\n    A: As of NOVEMBER 9, 2020, the following apps are no longer supported and/or no longer available for\r download: \r  \r If you already have one of these apps installed, the app may continue to work on that device, but you won\u2019t\r be able to reinstall or it may stop functioning at some point.\n  Q. I paid for a Slingbox app, but I can\u2019t download/install it any more.\n  A. Some paid versions of the SlingPlayer apps are no longer available in the app stores. If you already have\r a paid app installed, it may continue to function for a limited time. However, no refunds will be issued for\r any paid app purchases.\n  A: The Slingbox warranty is for 1 year. If you purchased your Slingbox from an authorized dealer in the\r United States or Canada and have a copy of the receipt, your warranty will be covered under the original\r terms and conditions.\n  Q: My device is broken but I\u2019m outside my warranty period. Can I send in my device for\r paid repair service?\n  A: Slingbox is not shipping any new product, and most authorized resellers have been out of stock for a\r couple years. Power adapters may be available by calling customer service.\n  A: For immediate support, customers still under warranty should call our regular support number at\r 1-866-974-2570. Please have your device serial number ready.\r   \r For all other issues, please take a look at our help section at slingbox.com", "posttime": "2020-11-10 02:54:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u505c\u4ea7,discontinued,\u5e94\u7528\u7a0b\u5e8f", "title": "Slingbox\u505c\u4ea7\u516c\u544a\u548c\u5e38\u89c1\u95ee\u9898\u89e3\u7b54(FAQ)", "title_en": "Slingbox Discontinued Announcement and Frequently Asked Questions (FAQ)", "transed": 1, "url": "https://www.slingbox.com/discontinued", "via": "", "real_tags": ["\u505c\u4ea7", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "832fc0a64d230261d86c6005ac8567b6.jpg", "infoid": 1034108, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Kubernetes\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u96c6\u7fa4\u7ba1\u7406\u7cfb\u7edf\u3002\u6709\u8bb8\u591a\u53ef\u63d2\u62d4\u7684\u6280\u672f\u53ef\u4f9b\u9009\u62e9\uff0c\u8fd9\u662f\u4f60\u60f3\u8981\u7684\u529f\u80fd\uff0c\u8fd9\u5f88\u68d2\uff0c\u56e0\u4e3a\u4f60\u6709\u9009\u62e9-\u4f46\u4e5f\u6709\u4e0d\u5229\u7684\u4e00\u9762\uff0c\u5176\u4ed6\u4eba\u5df2\u7ecf\u505a\u4e86\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002\u6700\u7ec8\uff0c\u968f\u7740\u5f00\u53d1\u4eba\u5458\u805a\u96c6\u5728\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5468\u56f4\uff0c\u5c06\u4f1a\u6709\u4e00\u4e9b\u6574\u5408\uff0c\u4f46\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u6709\u5f88\u591a\u6709\u8da3\u7684\u9879\u76ee\u53ef\u4f9b\u9009\u62e9(\u5bf9\u4e8e\u67d0\u4e9b\u914d\u7f6e\u6765\u8bf4\uff0c\u6ca1\u6709\u592a\u591a\u5f88\u597d\u7684\u4f8b\u5b50)\u3002\u4eca\u5929\uff0c\u6211\u8981\u5206\u4eab\u4e00\u4e2a\u7565\u5177\u6311\u6218\u6027\u7684\u8bbe\u7f6e\uff0c\u5e0c\u671b\u5b83\u80fd\u5e2e\u52a9\u793e\u533a\u3002\n\u6211\u4f7f\u7528Istio\u4f5c\u4e3a\u6211\u7684L7\u5165\u53e3\u548c\u8def\u7531\u63a7\u5236\u5668\uff0c\u5b83\u57fa\u4e8e\u7279\u4f7f\u3002\u5b83\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684L7\u4ee3\u7406\uff0c\u5177\u6709\u51fa\u8272\u7684\u6027\u80fd\u7279\u6027\u548c\u76f8\u5bf9\u6210\u719f\u7684\u529f\u80fd\u96c6\u3002\u5230\u4e86\u5728\u9879\u76ee\u4e2d\u5b9e\u73b0\u57fa\u672c/\u7ba1\u7406\u8def\u7ebf\u7684\u65f6\u5019\uff0c\u6211\u5217\u51fa\u4e86\u6211\u60f3\u8981\u5b9e\u73b0\u7684\u7279\u6027\u5217\u8868\u3002\u5728\u6211\u60f3\u8981\u7684\u914d\u7f6e\u4e2d\uff1a\n\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5e94\u91cd\u65b0\u5b9e\u73b0\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(RBAC)\u5b89\u5168\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u9700\u8981\u5b83\u3002\n\u7528\u6237\u5e94\u8be5\u80fd\u591f\u5728\u4e0d\u521b\u5efa\u53e6\u4e00\u4e2a\u7528\u6237\u540d/\u5bc6\u7801\u7684\u60c5\u51b5\u4e0b\u767b\u5f55\u4ee5\u8bb0\u4f4f\uff0c\u4f46\u662f\u5982\u679c\u4ed6\u4eec\u613f\u610f\u7684\u8bdd\uff0c\u53ef\u4ee5\u652f\u6301\u5b83\u3002\n\u7528\u6237\u5e94\u8be5\u80fd\u591f\u5728\u4e0d\u9700\u8981\u652f\u6301\u7684\u60c5\u51b5\u4e0b\u81ea\u884c\u6ce8\u518c\u3001\u91cd\u7f6e\u5bc6\u7801\uff0c\u4ee5\u53ca\u7ba1\u7406\u4e0e\u5176\u5e10\u6237\u5173\u8054\u7684\u8fdc\u7a0b\u8eab\u4efd\u9a8c\u8bc1(Google Keyword CIAM)\u3002\n\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5458\u5e94\u8be5\u80fd\u591f\u4ee5\u663e\u5f0f\u6216\u6309\u7ec4\u6743\u9650\u7f16\u8f91\u7528\u6237\u7684\u89d2\u8272\uff0c\u5e76\u4e3a\u975e\u6280\u672f\u4eba\u5458\u63d0\u4f9b\u63a7\u5236\u8bbf\u95ee\u7684\u53ef\u89c6\u754c\u9762\u3002\nK8S Ops\u5e94\u8be5\u80fd\u591f\u66f4\u6539RBAC\u89c4\u5219\u4fdd\u62a4\u5e94\u7528\u7a0b\u5e8f\u7684\u5404\u4e2a\u8def\u7531\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u90e8\u7f72\u3002\n\u6700\u7b80\u5355\u7684\u5165\u95e8\u65b9\u6cd5\u662f\u9075\u5faaJetstack.io\u4e0a\u7684\u51fa\u8272\u6f14\u7ec3\uff0c\u8be5\u6f14\u7ec3\u76f8\u5f53\u8be6\u7ec6\u5730\u89e3\u91ca\u4e86\u5982\u4f55\u4f7f\u7528JWT\u5904\u7406\u8986\u76d6\u6574\u4e2a\u5165\u53e3\u3002\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8be6\u8ff0\u6240\u6709\u7684\u7ec6\u8282\u3002\u76f8\u53cd\uff0c\u6211\u5c06\u63d0\u4f9b\u76f4\u63a5\u90e8\u7f72\u5de5\u4f5c\u914d\u7f6e\u6240\u9700\u7684\u786e\u5207YAML\u6e05\u5355\uff0c\u5e76\u663e\u793aFusionAuth\u4e2d\u6709\u5173\u5982\u4f55\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u4ee5\u4f7f\u5176\u4e0e\u8fd9\u4e9b\u6e05\u5355\u6b63\u786e\u901a\u4fe1\u7684\u5c4f\u5e55\u622a\u56fe\u3002\n\u6211\u901a\u5e38\u4f1a\u5c1d\u8bd5\u4e24\u5230\u4e09\u79cd\u66ff\u4ee3\u6280\u672f\uff0c\u7136\u540e\u624d\u4f1a\u9009\u62e9\u6211\u559c\u6b22\u7684\u4e00\u79cd\u3002\u867d\u7136\u6211\u4eceKeyCloak\u5f00\u59cb\uff0c\u4f46\u5b83\u611f\u89c9\u6709\u70b9\u4e0d\u5b8c\u5584\uff0c\u5728\u89e3\u91ca\u5982\u4f55\u5728\u672f\u8bed\u4e0d\u719f\u6089\u7684\u60c5\u51b5\u4e0b\u914d\u7f6e\u5b83\u65f6\uff0c\u8fd8\u6709\u5f88\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9(\u4f8b\u5982\u3002\u4e0d\u662f\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u7684\u4eba)\u3002\u6211\u7814\u7a76\u4e86\u5176\u4ed6\u51e0\u79cd\u9009\u62e9\uff0c\u6700\u540e\u5f52\u7ed3\u4e3aGluu\u6216FusionAuth\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u652f\u6301FusionAuth\u7684\u4e3b\u8981\u51b3\u5b9a\u56e0\u7d20\u662f\u5927\u91cf\u7684\u6587\u6863\u548c\u6559\u7a0b(\u5e26\u6709\u5f88\u597d\u7684\u5e7d\u9ed8\u610f\u5473)\u3002\u5f00\u53d1\u5546\u4e5f\u505a\u51fa\u4e86\u660e\u663e\u7684\u52aa\u529b\uff0c\u63d0\u4f9b\u4e86\u5b98\u65b9\u7684\u7801\u5934\u56fe\u7247\u548cKubernetes\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u73b0\u5b9e\u4e16\u754c\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u6211\u5bf9\u8fd9\u4e00\u51b3\u5b9a\u975e\u5e38\u6ee1\u610f\u3002\n\u597d\u7684\uff0c\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u8fd9\u4e24\u8005\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u7684\u67b6\u6784\u3002\u4e0e\u4f7f\u7528Istio\u7684\u4efb\u4f55\u5176\u4ed6\u6d41\u91cf\u4e00\u6837\uff0c\u8bf7\u6c42\u5c06\u6309\u7167VirtualService\u5230\u670d\u52a1\u7684\u8def\u7531\u89c4\u5219\u8fdb\u5165\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u5230\u8fbe\u90e8\u7f72\u7684Pod\u3002\u8981\u4f7f\u7528Istio\u5b89\u5168\u529f\u80fd\uff0c\u6b64Pod\u9700\u8981\u8fd0\u884cSidecar\u4ee3\u7406\uff0c\u5426\u5219\u89c4\u5219\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002(\u8fd9\u662f\u4e0d\u5e78\u7684\uff0c\u56e0\u4e3a\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0cSidecar\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fde\u63a5\u95ee\u9898\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u5b83\u53ef\u80fd\u4f1a\u9020\u6210\u526f\u4f5c\u7528\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4e3a\u6b64\u547d\u540d\u7a7a\u95f4\u663e\u5f0f\u521b\u5efa\u548c\u914d\u7f6eSidecar)\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u4e0a\u542f\u7528\u81ea\u52a8SideCar\u4ee3\u7406\u6ce8\u5165\uff0c\u5e76\u5728\u90a3\u91cc\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002\u901a\u8fc7\u58f0\u660eRequestAuthentication\u89c4\u5219\uff0c\u6211\u4eec\u5c06Istio\u914d\u7f6e\u4e3a\u62d2\u7edd\u4efb\u4f55\u6ca1\u6709\u6709\u6548\u7b7e\u540d\u7684Json Web\u4ee4\u724c(JWT)\u7684\u6d41\u91cf\u3002\u901a\u8fc7\u58f0\u660eAuthorizationPolicy\u89c4\u5219\uff0c\u6211\u4eec\u5c06Istio\u914d\u7f6e\u4e3a\u901a\u8fc7\u5339\u914d\u7279\u5b9a\u7684HTTP\u8def\u5f84\u6216\u7528\u6237\u89d2\u8272\u7b49\u6765\u63a5\u53d7\u6216\u62d2\u7edd\u6d41\u91cf\u3002\u8fd9\u5f88\u68d2\uff0c\u5bf9\u5427\uff1f\n\u55ef\uff0cIstio\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u4e0d\u80fd\u8bf4Open ID Connect\u3002\u4f46\u5b83\u53ea\u6709\u8db3\u591f\u806a\u660e\uff0c\u624d\u80fd\u671f\u5f85\u4e00\u4e2a\u7ecf\u8fc7\u6709\u6548\u89e3\u7801\u7684JWT\uff0c\u5e76\u6839\u636e\u5176\u5185\u5bb9\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u6a21\u5f0f\u5339\u914d\u3002\u5f53\u8fd9\u4e9b\u89c4\u5219\u5931\u8d25\u65f6\uff0c\u4f60\u53ea\u4f1a\u5f97\u5230RBAC\uff1a\u4f5c\u4e3a\u5bf9\u4f60\u8bf7\u6c42\u7684\u56de\u5e94\uff0c\u8bbf\u95ee\u88ab\u62d2\u7edd\u3002\u6ca1\u6709\u91cd\u5b9a\u5411\u903b\u8f91\u5c06\u6d4f\u89c8\u5668\u53d1\u9001\u5230\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u767b\u5f55\u9875\u9762\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u5728Sidecar_Inbound\u4e0a\u6ce8\u5165\u4e00\u4e2a\u7b80\u5355\u7684EnvoyFilter\u89c4\u5219\u6765\u6559\u5b83\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u9488\u5bf9\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ec5\u4fdd\u62a4\u6211\u4eec\u5173\u5fc3\u7684\u8def\u7531\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4efb\u4f55\u5185\u5bb9\u3002\n\u51e0\u4e2a\u5173\u952e\u7ec6\u8282\uff1aRequestAuthentication\u53ea\u63a5\u53d7\u4f7f\u7528RSA\u5bc6\u94a5\u7b7e\u540d\u7684JWT\uff0c\u56e0\u4e3aHMAC\u662f\u5bf9\u79f0\u5bc6\u94a5\uff0c\u4efb\u4f55\u80fd\u591f\u89e3\u7801\u5b83\u7684\u4eba\u4e5f\u53ef\u4ee5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u5b83\u9700\u8981\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u5f97\u516c\u5171RSA\u5bc6\u94a5\uff0c\u8be5\u5bc6\u94a5\u5728\u9881\u53d1\u8005\u5b57\u6bb5\u4e2d\u63d0\u4f9b\u3002\u5047\u8bbe\u6b64\u60c5\u51b5\u5c5e\u5b9e\uff0cIstio\u968f\u540e\u4f1a\u67e5\u770b\u4efb\u4f55AuthorizationPolicy\u89c4\u5219\uff0c\u5e76\u6839\u636e\u5339\u914d\u6216\u4e0d\u5339\u914d\u7684\u8be6\u7ec6\u4fe1\u606f\u5141\u8bb8\u6216\u62d2\u7edd\u6d41\u91cf\u3002*\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u89c4\u5219\uff0c\u5141\u8bb8\u4efb\u4f55\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u4eba\u62e5\u6709\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u5e10\u6237\uff0c\u5e76\u8fdb\u4e00\u6b65\u5c06/admin/\u8def\u5f84\u9650\u5236\u4e3a\u5177\u6709admin\u89d2\u8272\u7684\u5e10\u6237\u3002\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff0cIstio\u53ea\u4f1a\u8bf4RBAC\uff1a\u8bbf\u95ee\u88ab\u62d2\u7edd\u3002\u8981\u8fdb\u884c\u8bca\u65ad\uff0c\u53ea\u9700\u5220\u9664\u8fd9\u4e9b\u89c4\u5219\u5e76\u5c1d\u8bd5\u70b9\u51fb\u7ec8\u7ed3\u70b9\uff0c\u770b\u770b\u4f1a\u5f39\u51fa\u4ec0\u4e48\u9519\u8bef\u3002\u5982\u679c\u8fd9\u4e9b\u89c4\u5219\u88ab\u5220\u9664\uff0c\u800c\u4f60\u4ecd\u7136\u6536\u5230\u672a\u7ecf\u6388\u6743\u7684\u6d88\u606f\uff0c\u5b83\u7684OAuth2-Proxy\u62d2\u7edd\u7528\u6237--\u68c0\u67e5\u914d\u7f6e\u548c\u8bb0\u5f55\u4ee5\u4e86\u89e3\u539f\u56e0\u3002\n\u8fd9\u5c31\u662f\u6211\u4eec\u671f\u76fc\u5df2\u4e45\u7684YAML\u3002\u8fd9\u5b8c\u5168\u63cf\u8ff0\u4e86\u4e00\u79cd\u5de5\u4f5c\u914d\u7f6e\uff0c\u5176\u4e2dVirtualService\u4f4d\u4e8e\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4f46\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u90fd\u5728\u8eab\u4efd\u9a8c\u8bc1\u4e2d\uff0c\u8fd9\u53ea\u662f\u4e3a\u4e86\u8ba9\u5b83\u8fdc\u79bb\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u3002*\u5e94\u7528\u7a0b\u5e8f\u6258\u7ba1\u5728https://auth-example.reachablegames.com.\u4e0a\u3002\u4e0b\u9762\u8bc4\u8bba\u4e86\u5982\u679c\u914d\u7f6e\u4e0d\u6b63\u786e\u4f1a\u5bfc\u81f4\u95ee\u9898\u7684\u67d0\u4e9b\u56f0\u96be\u548c\u672a\u8bb0\u5f55\u7684\u7ec6\u8282--\u8bf7\u5728\u66f4\u6539\u6216\u7b80\u5316\u4e4b\u524d\u6ce8\u610f\u3002\n#\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5177\u6709SideCar\u6ce8\u5165\u7684\u547d\u540d\u7a7a\u95f4apiVersion\uff1av1Kind\uff1aNamespacemetadata\uff1aLabels\uff1aapp\uff1aAuth istio-Injection\uff1aEnable Name\uff1aAuth-#\u6b64\u89c4\u5219\u786e\u4fddJWT\u88ab\u89e3\u7801\uff0c\u5e76\u4f5c\u4e3aHTTP_payload Base64\u7f16\u7801\u4f20\u9012\u5230Web\u670d\u52a1\u5668\u3002apiVersion\uff1asecurity.istio.io/v1beta1ind\uff1aRequestAuthenticationMetadata\uff1aName\uff1aAuth-Example Nample Namespace\uff1aAuth.apiVersion\uff1asecurity.istio.io/v1beta1ind\uff1aRequestAuthenticationMetadata\uff1aName\uff1aAuth-Example Namespace\uff1aAuth.\u3002Header ForwardOriginalToken\uff1atrue#\u8fd9\u53ea\u4f1a\u5c06\u89e3\u7801\u540e\u7684JWT\u4f5c\u4e3a&#34\uff1bpayload&#34\uff1bHeader outputPayloadToHeader\uff1a&#34\uff1bpayload&#34\uff1b-#\u6b64\u89c4\u5219\u9a8c\u8bc1\u7528\u6237\u662f\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237(\u8bf7\u6c42\u4e3b\u4f53)\u548c\u6388\u6743\u7528\u6237(request.auth.Claims)apiVersion\uff1asecurity.istio.io/v1beta1Kind\uff1aAuthorizationPolicyMetadata\uff1aName\uff1aAuth-Example\u3002]\u81f3\uff1a-operation\uff1a\u8def\u5f84\uff1a[&#34\uff1b/admin/*&#34\uff1b]\u65f6\u95f4\uff1a-key\uff1arequest.auth.Claims[r\nApiVersion\uff1anetworking.istio.io/v1alpha3ind\uff1aVirtualServicemetadata\uff1aname\uff1afusionauth labels\uff1aapp\uff1afusionauthspec\uff1ahosts\uff1a-&#34\uff1bfusionauth.reachablegames.com&#34\uff1b\u7f51\u5173\uff1a-istio-gw http\uff1a-Match\uff1a-uri\uff1aPrefix\uff1a/Route\uff1a-Destination\uff1ahost\uff1aFusionauth port\uff1aNumber\uff1a80-apiVersion\uff1av1Kind\uff1aServicemetadata\uff1aName\uff1aFusionauth Labels\uff1aapp\uff1aFusionAuthSpec\uff1aports\uff1a-port\uff1a80 name\uff1ahttp-web protocol\uff1aTCP targetPort\uff1ahttp-web\u9009\u62e9\u5668\uff1aapp\uff1afusionauth\u4f1a\u8bdd\u4eb2\u548c\u6027\uff1a\u65e0\u7c7b\u578b\uff1aClusterIP-apiapi.\u3002Fusionauth-db\u7fa4\u96c6IP\uff1aNone-#FusionauthapiVersion\uff1aapp/v1ind\uff1aStatefulSetMetadata\uff1a\u540d\u79f0\uff1aFusionauth-db\u6807\u7b7e\uff1aapp\uff1afusionauth-db\u6807\u7b7e\uff1aserviceName\uff1afusionauth-db\u526f\u672c\uff1a1\u9009\u62e9\u5668\uff1amatchLabels\uff1aapp\uff1afusionauth-db updateStrategy\uff1atype\uff1aRollingUpdate Template\uff1aMetadata\uff1aAnnotation\uff1asidecar.istio.io/indateStrategy\uff1atype\uff1aRollingUpdate Template\uff1aMetadata\uff1aAnnotation\uff1asidecar.istio.io/indateStrategy\uff1aRollingUpdate Template\uff1aMetadata\uff1aAnnotation\uff1asidecar.istio.io/indateStrategy\u3002FALSE&#34\uff1b\u6807\u7b7e\uff1aapp\uff1afusionauth-db Version\uff1a1.0.0\u89c4\u8303\uff1aContainers\uff1a-Image\uff1aPostgres\uff1a11.9-\u963f\u5c14\u5351\u65af\u5c71\u540d\u79f0\uff1aPostgres env\uff1a-name\uff1aPGDATA\u503c\uff1a/var/lib/PostgreSQL/data/pgdata-name\uff1apostgres_user\u503c\uff1apguser-name\uff1apostgres_password\u503c\uff1apgpass-name\uff1apostgres_DB value\uff1aFusionauth ports\uff1a-tainerPort\uff1a5432 name\u3002\u8bf7\u6c42\uff1aCPU\uff1a&#34\uff1b0.25&#34\uff1b\u5185\u5b58\uff1a&#34\uff1b250Mi&#34\uff1b\u5377\u88c5\u8f7d\uff1a-\u540d\u79f0\uff1aFusionauth-storage\u88c5\u8f7d\u8def\u5f84\uff1a/var/lib/postgreSQL/Data Voluments\uff1a-name\uff1aFusionauth-storage PersistentVolumeClaim\uff1aClaim Name\uff1aFusionauth-storage VolumeClaimTemplates\uff1a-Metadata\uff1aName\uff1aFusionauth-storage Spec\uff1aaccess Modes\uff1a[&#34\uff1bReadWriteSpec\uff1aAccess Modes\uff1a[&#34\uff1bReadWrite34\uff1b#\u66f4\u6539\u4ee5\u5339\u914d\u60a8\u7684\u5b58\u50a8\u7cfb\u7edf\u8d44\u6e90\uff1a\u8bf7\u6c42\uff1a\u5b58\u50a8\uff1a10Gi-apiVersion\uff1aapp/v1ind\uff1aDeploymentMetadata\uff1aName\uff1aFusionauth Labels\uff1aapp\uff1aFusionAuthSpec\uff1aReplicas\uff1a1 Strategy\uff1atype\uff1arereate selector\uff1amatchLabels\uff1aapp\uff1aFusionauth Template\uff1aMetadata\uff1aAnnotation\uff1asidecar.istio.io/Inject\uff1a&#34\uff1bFalse&#34\uff1bLabels\uff1aapp\uff1aFusionauth Version\uff1a1.0.0\u89c4\u8303\u3002\u5bb9\u5668\uff1a-Name\uff1aFusionauth\u56fe\u50cf\uff1aFusionauth/Fusionauth-app\uff1a\u6700\u65b0\u56fe\u50cfPullPolicy\uff1aAlways env\uff1a-Name\uff1aDatabase_URL\u503c\uff1ajdbc:postgresql://fusionauth-db:5432/fusionauth-Name\uff1aDatabase_Root_Username\u503c\uff1aPG\u7528\u6237\u540d\uff1aDatabase_Root_Password\u503c\uff1aPG Pass-Name\uff1aDatabase_Username\u503c\uff1aPG\u7528\u6237\u540d\uff1aDatabase_Password\u503c\uff1aPG Pass-Name\uff1aFUSIONAUTH_APP_MEMORY\u503c\uff1a512M-Name\uff1aFUSIO\u3002/fusionauth.reachablegames.com/-\u540d\u79f0\uff1a\u641c\u7d22\u7c7b\u578b\u503c\uff1a\u6570\u636e\u5e93\u540d\u79f0\uff1aES_JAVA_OPTS\u503c\uff1a&#34\uff1b-Xms256M-Xmx512M&#34\uff1b\u7aef\u53e3\uff1a-tainerPort\uff1a9011\u540d\u79f0\uff1ahttp-web livenessProbe\uff1aInitialDelaySecond\uff1a10\u8d85\u65f6\u79d2\uff1a10\u5468\u671f\u79d2\uff1a30\u6545\u969c\u9608\u503c\uff1a5 httpGet\uff1apath\uff1a/port\uff1ahttp-web readinessProbe\uff1aInitialDelaySecond\uff1a10\u8d85\u65f6\u79d2\uff1a10\u5468\u671f\u79d2\uff1a30\u6545\u969c\u9608\u503c\uff1a5 httpGet\uff1apath\uff1a/port\uff1ahttp-web readinessProbe\uff1aInitialDelaySecond\uff1a10 Period Second\uff1a30 ailureThreshold\uff1a5 httpGet\uff1apath\uff1a/port\uff1ahttp-web readinessProbe\uff1aInitialDelaySecond\uff1a10 timeureThreshold\uff1a5 httpGet\uff1apath\uff1a/port\uff1ahttp\u3002\u5377\u88c5\u8f7d\uff1a-name\uff1afusionauth-pvc\u88c5\u8f7d\u8def\u5f84\uff1a/usr/local/fusionauth/config subPath\uff1a\u914d\u7f6e\u5377\uff1a-name\uff1afusionauth-pvc sistentVolumeClaim\uff1aClaim Name\uff1afusionauth-pvc#\u5c06\u5176\u66f4\u6539\u4e3a\u4e0e\u60a8\u73af\u5883\u4e2d\u7684PVC\u5339\u914d\u3002\n\u4e0a\u9762\u7684YAML\u90e8\u7f72\u4e86Postgres DB\u548cFusionAuth\u90e8\u7f72\uff0c\u5b83\u4eec\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\u3002\u5f88\u660e\u663e\uff0c\u6211\u7684\u5b58\u50a8\u7cfb\u7edf\u5c06\u4e0e\u60a8\u7684\u5b58\u50a8\u7cfb\u7edf\u4e0d\u540c\uff0c\u56e0\u6b64\u8bf7\u66f4\u6539PersistentVolumeClaim\u548cstorageClassName\u4e0e\u60a8\u7684\u5b58\u50a8\u73af\u5883\u5339\u914d\u7684\u4e24\u4e2a\u4f4d\u7f6e\u3002*\u542f\u52a8\u540e\uff0c\u8bf7\u8f6c\u5230\u6258\u7ba1\u6f14\u7ec3\u4ee5\u914d\u7f6eFusionAuth\u3002\u5b83\u4e0d\u4f1a\u82b1\u5f88\u957f\u65f6\u95f4\uff0c\u56e0\u6b64\u4f1a\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u8d85\u7ea7\u7ba1\u7406\u5458\u7528\u6237\u3002\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u662f\u5982\u4f55\u6b63\u786e\u914d\u7f6eFusionAuth\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\u7684\u53ef\u89c6\u5316\u6f14\u7ec3\uff1a\n\u6b64\u5904\u672a\u663e\u793a\u7684\u6b65\u9aa4\u5305\u62ec\uff1a\u521b\u5efa\u5b50\u57df\u3001\u914d\u7f6e\u5165\u53e3\u7f51\u5173\u4ee5\u4f7f\u7528HTTPS\u8bc1\u4e66\u7b49\u3002\u5982\u679c\u786e\u5b9a\uff0c\u8bf7\u7acb\u5373\u90e8\u7f72FUSIONAUTH\u3002*kubectl Apply-f fusionauth.yaml\u3002\nFusionAuth\u662f\u4e00\u4e2a\u591a\u79df\u6237\u7cfb\u7edf\uff0c\u5176\u4e2d\u4e00\u4e2a\u79df\u6237\u53ef\u80fd\u6709\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002*FusionAuth\u5c06\u81ea\u8eab\u89c6\u4e3a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528\u4e0e\u7ba1\u7406\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u76f8\u540c\u7684\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u7cfb\u7edf\u6765\u7ba1\u7406\u81ea\u8eab\u3002\u6240\u4ee5\u4e0d\u8981\u5220\u9664\u4f60\u7684\u6743\u9650\uff0c\u5426\u5219\u4f60\u4f1a\u88ab\u9501\u5728\u95e8\u5916\uff01\n\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u521b\u5efa\u4e24\u4e2aRSA\u5bc6\u94a5\uff0c\u8fd9\u4e24\u4e2a\u5bc6\u94a5\u5c06\u7528\u4e8e\u5bf9JWT\u8fdb\u884c\u975e\u5bf9\u79f0\u7b7e\u540d\uff0c\u56e0\u6b64Istio\u5c06\u63a5\u53d7\u5b83\u4eec\u3002\u9ed8\u8ba4\u7684\u662fHMAC\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u914d\u7f6e\u79df\u6237\u4f7f\u7528\u8fd9\u4e9b\u5bc6\u94a5\u3002\u8fd9\u4f7f\u5f97\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u90fd\u9ed8\u8ba4\u4f7f\u7528\u5b83\u4eec\uff0c\u8fd9\u6837\u4ee5\u540e\u6dfb\u52a0\u65b0\u5e94\u7528\u7a0b\u5e8f\u65f6\u9700\u8981\u8bb0\u4f4f\u7684\u6b65\u9aa4\u5c31\u5c11\u4e86\u4e00\u6b65\u3002(\u53ef\u4ee5\uff0c\u60a8\u53ef\u4ee5\u5bf9\u8bb8\u591a\u4e0d\u540c\u7684\u57df\u3001\u5e94\u7528\u7a0b\u5e8f\u3001\u8def\u7ebf\u7b49\u4f7f\u7528FusionAuth\uff0c\u5982\u679c\u60a8\u613f\u610f\uff0c\u8fd8\u53ef\u4ee5\u5728\u7528\u6237\u6570\u636e\u5e93\u4e2d\u5c06\u5b83\u4eec\u5728\u903b\u8f91\u4e0a\u5206\u5f00\u3002\u4e0d\u8981\u5c1d\u8bd5\n\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0\u7eaf\u7cb9\u662f\u4e3a\u4e86\u663e\u793a\u76ee\u7684\u3002\u5728\u8fd9\u91cc\u6dfb\u52a0\u4e24\u4e2a\u89d2\u8272\uff0c\u4ed4\u7ec6\u547d\u540d\u4e3auser\u548cadmin\u3002\u786e\u4fdd\u590d\u9009\u6846\u5982\u56fe\u6240\u793a\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4eba\u5728\u6ce8\u518c(\u9996\u6b21\u767b\u5f55)\u65f6\u90fd\u83b7\u5f97\u7528\u6237\u89d2\u8272\uff0c\u5e76\u4e14\u7ba1\u7406\u5458\u62e5\u6709\u5b8c\u5168\u6743\u9650\u3002\n\u5728OAuth\u9009\u9879\u5361\u4e0a\uff0cClientID\u5c06\u4e3a\u7a7a\uff0c\u76f4\u5230\u60a8\u70b9\u51fb\u4fdd\u5b58\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8fd4\u56de\u5e76\u7acb\u5373\u83b7\u53d6\u5b83\u3002\u8bf7\u786e\u4fdd\u60a8\u5df2\u914d\u7f6e\u6307\u5411\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u57df...\u3002\u6211\u4e0d\u77e5\u9053\u60a8\u53ef\u80fd\u8fd8\u9700\u8981\u5728\u54ea\u4e9b\u5730\u65b9\u914d\u7f6e\u4e0d\u540c\u7684URL(\u5982\u679c\u60a8\u9700\u8981\u7ba1\u7406\uff0c\u8bf7\u7ed9\u6211\u53d1\u4e2a\u4fbf\u6761\u3002\n.", "note_en": "Kubernetes is a tremendously powerful cluster management system. \u00a0There are many pluggable technologies to choose from that exhibit the features you desire, which is great because you have options--but also comes with the down-side that the likelihood someone else has done exactly what you are trying to do is slim. \u00a0Eventually, there will be some consolidation as developers gather around the best solutions, but for the moment, there are lots of interesting projects to choose from (and not a ton of great examples for certain configs). Today, I&#39;m sharing a slightly challenging setup and hoping it helps the community.\n I am using Istio as my L7 ingress and routing controller, which is based on Envoy. \u00a0It is a highly scalable L7 proxy with excellent performance characteristics and relatively mature feature set. When it came time to implement a basic  /admin route on a project, I came up with the list of features that I wanted to achieve. \u00a0My desired config:\n Applications should not re-implement role-based access control (RBAC) security, as every application will need it\n Users should be able to login without creating yet another username/password to remember, but support it if they prefer\n Users should be able to self-register, password reset if necessary, and manage what remote authentications are associated with their account without needing support (Google keyword CIAM)\n Application Admins should be able to edit the role of users, either explicitly or by group permissions, with a visual interface for non-technical people to control access\n K8s Ops should be able to change what RBAC rules protect individual routes to applications without a redeploy\n The simplest way to get started is to follow the excellent walkthrough on  Jetstack.io that explains in reasonably good detail how to cover your whole ingress with JWT handling. \u00a0I won&#39;t go over all that detail here. \u00a0Instead, I will present the exact YAML manifests necessary to directly deploy a working config, as well as show screenshots of relevant bits in FusionAuth of exactly how to configure the application so it communicates properly with these manifests.\n  I usually try out two or three alternative technologies before settling into one I like. Although I did start with KeyCloak, it felt a little unpolished and left a lot to be desired when it came to explaining how to configure it if the terminology wasn&#39;t familiar (eg. people who aren&#39;t security professionals). \u00a0I studied several other options and it came down to Gluu or FusionAuth. \u00a0The main deciding factor for me in favor of FusionAuth was the amount of documentation and tutorials (with much appreciated touches of humor). \u00a0There is also a clear effort made by the developers to provide official docker images and Kubernetes examples that show real world use. \u00a0I have been remarkably satisfied with this decision.\n  Ok, so let&#39;s talk about the architecture of how this works together. \u00a0Like any other traffic using Istio, a request will come into an application by following the routing rules of a  VirtualService to a  Service, then to a Deployment&#39;s  Pod. \u00a0To use the Istio security features, this pod needs to have the Sidecar Proxy running, otherwise the rules don&#39;t do anything. (This is unfortunate, as it has been my experience that the sidecar can cause connectivity issues with certain workloads, so just be aware it can cause side effects and you may need to explicitly create and configure the  Sidecar for this namespace). The easiest way to get this working is to enable automatic sidecar proxy injection on a new  Namespace and deploy the application there. \u00a0By declaring a  RequestAuthentication rule, we configure Istio to refuse any traffic that doesn&#39;t have a validly signed Json Web Token (JWT). \u00a0And by declaring an  AuthorizationPolicy rule, we configure Istio to accept or deny traffic by matching specific HTTP paths or user roles, etc. \u00a0That&#39;s great! \u00a0Right?\n Well, Istio isn&#39;t quite mature enough to speak Open ID Connect. \u00a0It&#39;s only smart enough to expect a validly decoded JWT and do some simple pattern matching against its contents. \u00a0When those rules fail, you just get  RBAC: access denied as a response to your request. \u00a0There&#39;s no redirection logic to send the browser to the auth server login page. \u00a0So, let&#39;s teach it to do that with a simple  EnvoyFilter rule that is injected on  SIDECAR_INBOUND. This lets us target specific applications to protect only the routes we care about without impacting anything else.\n A few critical details:  RequestAuthentication only accepts a \u00a0JWT that is signed with an RSA key, because HMAC is a symmetrical key and anyone who can decode it can also sign it. \u00a0This means it needs to know where to get the public RSA key, which is supplied in the  issuer field. \u00a0Assuming this checks out, Istio then looks at any  AuthorizationPolicy rules and either  ALLOW or  DENY traffic based on matching or non-matching details. \u00a0In this case, I have provided a basic rule that allows anyone who has been verified to have an account with this application, and further restrict the  /admin/ path to accounts that have the  admin role. \u00a0Should anything go wrong, Istio just says  RBAC: access denied . \u00a0To diagnose, just delete these rules and try hitting the endpoint to see what errors pop up. \u00a0If these rules are removed and you are still getting Unauthorized messages, it&#39;s oauth2-proxy refusing the user--check the config and logging to see why.\n Here&#39;s the YAML we&#39;ve all been waiting for. \u00a0This fully describes a working config where the  VirtualService is in the default namespace but everything else is in  auth just to keep it away from everything else. \u00a0The application is hosted at  https://auth-example.reachablegames.com. \u00a0Certain difficult and undocumented details that cause problems if not configured properly have been commented below--please pay attention before changing or simplifying things.\n # create namespace where applications can have sidecar injectionapiVersion: v1kind: Namespacemetadata: labels: app: auth istio-injection: enabled name: auth---# This rule makes sure the JWT is decoded and passed through to the web server as HTTP_PAYLOAD base64 encoded.apiVersion: security.istio.io/v1beta1kind: RequestAuthenticationmetadata: name: auth-example namespace: authspec: selector: matchLabels: app: auth-example jwtRules: - issuer: &#34;https://fusionauth.reachablegames.com&#34; # this passes the full bearer token as the &#34;authorization&#34; header forwardOriginalToken: true # this passes just the decoded JWT as &#34;payload&#34; header outputPayloadToHeader: &#34;payload&#34; ---# This rule verifies the user is an authenticated user (requestPrincipals) and also authorized (request.auth.claims)apiVersion: security.istio.io/v1beta1kind: AuthorizationPolicymetadata: name: auth-example namespace: authspec: selector: matchLabels: app: auth-example action: ALLOW rules: - from: # limit admin path to users with admin role - source: requestPrincipals: [&#34;*&#34;] to: - operation: paths: [&#34;/admin/*&#34;] when: - key: request.auth.claims[roles] values: [&#34;admin&#34;] - from: # allow anyone who is authorized to access the site to access anything other than /admin - source: requestPrincipals: [&#34;*&#34;] to: - operation: notPaths: [&#34;/admin/*&#34;]---# This intercepts and sends the traffic directly to the oauth2-proxy if there isn&#39;t a JWT cookie in the header.apiVersion: networking.istio.io/v1alpha3kind: EnvoyFiltermetadata: name: auth-example namespace: authspec: workloadSelector: labels: app: auth-example configPatches: - applyTo: HTTP_FILTER match: context: SIDECAR_INBOUND listener: portNumber: 80 filterChain: filter: name: envoy.http_connection_manager subFilter: name: envoy.filters.http.jwt_authn patch: operation: INSERT_BEFORE value: name: envoy.filters.http.ext_authz typed_config: &#34;@type&#34;: type.googleapis.com/envoy.config.filter.http.ext_authz.v2.ExtAuthz http_service: server_uri: # Note, this absolutely must be the FQDN for the service. Does not work as a shortname. uri: http://auth-example-oauthproxy.auth.svc.cluster.local:8081 cluster: outbound|8081||auth-example-oauthproxy.auth.svc.cluster.local timeout: 10s authorizationRequest: allowedHeaders: patterns: - exact: cookie authorizationResponse: allowedUpstreamHeaders: patterns: - exact: authorization---# Critical: spell out the FQDN because this VirtualService is in &#34;default&#34; but the Service is in &#34;auth&#34;apiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata: name: auth-example namespace: default labels: app: auth-examplespec: hosts: - &#34;auth-example.reachablegames.com&#34; gateways: - istio-gw http: - route: - destination: host: auth-example.auth.svc.cluster.local # this refers to a Service with name=&#34;auth-example&#34; port: number: 80---# Sends traffic to the auth-example deployment pods, which is our application we are trying to secureapiVersion: v1kind: Servicemetadata: name: auth-example namespace: auth labels: app: auth-examplespec: ports: - port: 80 name: http-web targetPort: http-web protocol: TCP selector: app: auth-example # send traffic to the auth-example pods sessionAffinity: None type: ClusterIP---# Sends traffic to the oauth2-proxy deployment pods, which is only called if a JWT is missing.apiVersion: v1kind: Servicemetadata: name: auth-example-oauthproxy namespace: auth labels: app: auth-example-oauthproxyspec: ports: - port: 8081 name: http-oauthproxy targetPort: http-oauthproxy protocol: TCP selector: app: auth-example-oauthproxy # send traffic to the auth-example-oauthproxy pods sessionAffinity: None type: ClusterIP---# This is the deployment for your application workload you want to secure.# Configured so the index page shows PHP info, so you can check out the cookies easily.apiVersion: apps/v1kind: Deploymentmetadata: name: auth-example namespace: auth labels: app: auth-examplespec: selector: matchLabels: app: auth-example strategy: type: Recreate template: metadata: annotations: # The namespace must be annotated to allow sidecar injection for this to work. sidecar.istio.io/inject: &#34;true&#34; labels: app: auth-example version: 1.0.0 spec: containers: - image: php:7-apache name: www ports: - containerPort: 80 name: http-web volumeMounts: - name: www-configmap mountPath: /var/www/html/index.php subPath: index.php - name: www-configmap mountPath: /var/www/html/admin/index.html subPath: admin.html resources: limits: cpu: &#34;1.0&#34; memory: &#34;1Gi&#34; requests: cpu: &#34;0.25&#34; memory: &#34;250Mi&#34; volumes: - name: www-configmap configMap: name: www-configmap items: - key: index.php path: index.php - key: admin.html path: admin.html---# This handles the OIDC redirects when the ExtAuthz filter sends them.apiVersion: apps/v1kind: Deploymentmetadata: name: auth-example-oauthproxy namespace: auth labels: app: auth-example-oauthproxyspec: selector: matchLabels: app: auth-example-oauthproxy strategy: type: Recreate template: metadata: annotations: sidecar.istio.io/inject: &#34;false&#34; labels: app: auth-example-oauthproxy version: 1.0.0 spec: containers: - image: quay.io/oauth2-proxy/oauth2-proxy:v6.1.1-amd64 name: oauth2-proxy args: [&#34;--config=/etc/oauth2-config.conf&#34;] ports: - containerPort: 8081 name: http-oauthproxy volumeMounts: - name: www-configmap mountPath: /etc/oauth2-config.conf subPath: oauth2-config.conf livenessProbe: initialDelaySeconds: 10 timeoutSeconds: 10 periodSeconds: 30 failureThreshold: 5 httpGet: path: /ping port: http-oauthproxy readinessProbe: initialDelaySeconds: 20 timeoutSeconds: 10 periodSeconds: 30 failureThreshold: 5 httpGet: path: /ping port: http-oauthproxy resources: limits: cpu: &#34;0.300&#34; memory: &#34;200Mi&#34; requests: cpu: &#34;0.100&#34; memory: &#34;100Mi&#34; volumes: - name: www-configmap configMap: name: www-configmap items: - key: oauth2-config.conf path: oauth2-config.conf---# random config files---apiVersion: v1kind: ConfigMapmetadata: name: www-configmap namespace: auth labels: app: auth-exampledata: index.php: | &lt;?php phpinfo(); admin.html: | &lt;html&gt;&lt;body&gt;This is the admin page.&lt;/body&gt;&lt;/html&gt; oauth2-config.conf: | provider = &#34;oidc&#34; cookie_secure = true cookie_samesite = &#34;lax&#34; cookie_refresh = &#34;1h&#34; cookie_expire = &#34;4h&#34; cookie_name = &#34;_auth_example_reachablegames_com&#34; set_authorization_header = true email_domains = [ &#34;*&#34; ] http_address = &#34;0.0.0.0:8081&#34; upstreams = [ &#34;static://200&#34; ] skip_provider_button = true oidc_issuer_url = &#34;https://fusionauth.reachablegames.com&#34; insecure_oidc_allow_unverified_email = true client_id = &#34;3404cf81-1797-49d8-af75-dad5ad7455b9&#34; client_secret = &#34;pmwlc2vTt60vZiq4w0dKAO363nIqIuYdpsN6Ms-5NU4&#34; cookie_secret = &#34;*ThisCanBeAny32LettersYouChoose*&#34;---\n The above has some critical details, each of which has been called out in the YAML as comments. \u00a0It is important to also mention that the very bottom shows a  client_id and  client_secret that matches details that are generated by FusionAuth. \u00a0Your ids will be different. \u00a0Obviously, you&#39;ll want to change the  cookie_secret as well, but note it must be exactly 32 characters long or the oauth2-proxy pod will fail to start. \u00a0Finally, if you configure the  Application in FusionAuth to send emails to validate users before letting them in, you can remove the  insecure_oidc_allow_unverified_email = true line. \u00a0I&#39;ve included it here just to make testing easier, because setting up email config is just another step or two and this blog is long enough!\n  Great, now there&#39;s a YAML on the page, everyone stopped reading! \u00a0Not so fast. \u00a0You need FusionAuth to actually handle the OIDC redirects and serve login pages, as well as generate the JWT that Istio will use to validate your users. \u00a0Here&#39;s the YAML for it, too:\n apiVersion: networking.istio.io/v1alpha3kind: VirtualServicemetadata: name: fusionauth labels: app: fusionauthspec: hosts: - &#34;fusionauth.reachablegames.com&#34; gateways: - istio-gw http: - match: - uri: prefix: / route: - destination: host: fusionauth port: number: 80---apiVersion: v1kind: Servicemetadata: name: fusionauth labels: app: fusionauthspec: ports: - port: 80 name: http-web protocol: TCP targetPort: http-web selector: app: fusionauth sessionAffinity: None type: ClusterIP---apiVersion: v1kind: Servicemetadata: name: fusionauth-db labels: app: fusionauth-dbspec: ports: - port: 5432 targetPort: postgres selector: app: fusionauth-db clusterIP: None---# user database for fusionauthapiVersion: apps/v1kind: StatefulSetmetadata: name: fusionauth-db labels: app: fusionauth-dbspec: serviceName: fusionauth-db replicas: 1 selector: matchLabels: app: fusionauth-db updateStrategy: type: RollingUpdate template: metadata: annotations: sidecar.istio.io/inject: &#34;false&#34; labels: app: fusionauth-db version: 1.0.0 spec: containers: - image: postgres:11.9-alpine name: postgres env: - name: PGDATA value: /var/lib/postgresql/data/pgdata - name: POSTGRES_USER value: pguser - name: POSTGRES_PASSWORD value: pgpass - name: POSTGRES_DB value: fusionauth ports: - containerPort: 5432 name: postgres resources: limits: cpu: &#34;3.0&#34; memory: &#34;3Gi&#34; requests: cpu: &#34;0.25&#34; memory: &#34;250Mi&#34; volumeMounts: - name: fusionauth-storage mountPath: /var/lib/postgresql/data volumes: - name: fusionauth-storage persistentVolumeClaim: claimName: fusionauth-storage volumeClaimTemplates: - metadata: name: fusionauth-storage spec: accessModes: [ &#34;ReadWriteOnce&#34; ] storageClassName: &#34;freenas-keep&#34; ### Change to match your storage system resources: requests: storage: 10Gi---apiVersion: apps/v1kind: Deploymentmetadata: name: fusionauth labels: app: fusionauthspec: replicas: 1 strategy: type: Recreate selector: matchLabels: app: fusionauth template: metadata: annotations: sidecar.istio.io/inject: &#34;false&#34; labels: app: fusionauth version: 1.0.0 spec: securityContext: runAsUser: 1000 runAsGroup: 1000 fsGroup: 1000 fsGroupChangePolicy: &#34;Always&#34; containers: - name: fusionauth image: fusionauth/fusionauth-app:latest imagePullPolicy: Always env: - name: DATABASE_URL value: jdbc:postgresql://fusionauth-db:5432/fusionauth - name: DATABASE_ROOT_USERNAME value: pguser - name: DATABASE_ROOT_PASSWORD value: pgpass - name: DATABASE_USERNAME value: pguser - name: DATABASE_PASSWORD value: pgpass - name: FUSIONAUTH_APP_MEMORY value: 512M - name: FUSIONAUTH_APP_RUNTIME_MODE value: development - name: FUSIONAUTH_APP_URL value: https://fusionauth.reachablegames.com/ - name: SEARCH_TYPE value: database - name: ES_JAVA_OPTS value: &#34;-Xms256m -Xmx512m&#34; ports: - containerPort: 9011 name: http-web livenessProbe: initialDelaySeconds: 10 timeoutSeconds: 10 periodSeconds: 30 failureThreshold: 5 httpGet: path: / port: http-web readinessProbe: initialDelaySeconds: 10 timeoutSeconds: 10 periodSeconds: 30 failureThreshold: 5 httpGet: path: / port: http-web resources: limits: cpu: &#34;1.0&#34; memory: &#34;1G&#34; requests: cpu: &#34;0.25&#34; memory: &#34;250M&#34; volumeMounts: - name: fusionauth-pvc mountPath: /usr/local/fusionauth/config subPath: config volumes: - name: fusionauth-pvc persistentVolumeClaim: claimName: fusionauth-pvc ### Change this to match a PVC in your environment\n The above YAML deploys both a Postgres DB and a FusionAuth deployment that can be scaled independently of each other. \u00a0Obviously, my storage system will be different from yours, so change the two places where the  PersistentVolumeClaim and  storageClassName match your storage environment. \u00a0Once you launch, go to the  hosted walkthrough to configure FusionAuth. \u00a0It doesn&#39;t take long, and as a consequence creates your first superadmin user. \u00a0The rest of this post is a visual walkthrough of how to configure FusionAuth correctly to:\n  Steps not shown here: Creating a subdomain, configuing your ingressgateway to use https certs, etc. \u00a0Ok,  DEPLOY FUSIONAUTH NOW. \u00a0 kubectl apply -f fusionauth.yaml\n  FusionAuth is a multi-tenant system, where a single tenant may have multiple applications. \u00a0FusionAuth considers itself an application, and uses the same authentication and authorization system for managing itself as it does for external applications. \u00a0So don&#39;t delete your permissions, or you get locked out!\n The very first thing we want to do is create  two RSA keys that will be used to asymmetrically sign the JWTs, so Istio will accept them. \u00a0The default is HMAC, so let&#39;s change that.\n  Next, let&#39;s configure the Tenant to use these keys. \u00a0That makes all applications use them by default, which is one less step to remember when you add new applications in the future. \u00a0(Yes, you can use FusionAuth for many different domains, apps, routes, etc, and keep them logically separate at the user DB if you like. \u00a0Don&#39;t try to reuse the oauth2-proxy, just deploy another, since the  client_secret will be different per application.)\n  The Issuer field must exactly match the  RequestAuthentication issuer field  and the  oidc_issuer_url field in the oauth2-proxy config.\n  Select the default Token and Id signing keys and select the RSA keys you generated above. \u00a0Make sure you click the blue  SAVE button or it won&#39;t take. \u00a0That&#39;s common throughout their UI, and I point it out on most of the images.\n    The name of the application is purely for display purposes. \u00a0Add two roles here, carefully naming them  user and  admin. \u00a0Make sure the checkboxes are configured as shown, so everyone gets the user role upon registration (first login), and admins have full permissions.\n  On the OAuth tab, the ClientId will be empty until you hit  Save, so we swing back and get it in a minute. \u00a0Make sure you have a domain configured that points to your app... I have no idea what other places you might need to configure the URL to be different (send me a note if you mana\n......", "posttime": "2020-11-10 02:53:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u7a0b\u5e8f,\u6388\u6743,user", "title": "\u4f7f\u7528Istio\u548cFusionAuth\u5c06\u7528\u6237\u6570\u636e\u5e93\u548c\u6388\u6743\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5206\u79bb\u51fa\u6765", "title_en": "Separating User Database and Authorization from Apps with Istio and FusionAuth", "transed": 1, "url": "https://reachablegames.com/oidc-fusionauth-istio/", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u7a0b\u5e8f", "\u6388\u6743", "user"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034107, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u9ad8\u6548\u7f51\u7edc(EfficientNets)\u662f\u4e00\u7cfb\u5217\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\uff0c\u57fa\u4e8e\u9ad8\u6548\u7f29\u653e\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u76ee\u524d\uff0cEfficientNet\u53ef\u4ee5\u82b1\u8d39\u6570\u5929\u7684\u65f6\u95f4\u8fdb\u884c\u57f9\u8bad\uff1b\u4f8b\u5982\uff0c\u5728Cloud TPU v2-8\u8282\u70b9\u4e0a\u57f9\u8bad\u4e00\u4e2aEfficientNet-B0\u6a21\u578b\u9700\u898123\u4e2a\u5c0f\u65f6\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u5728\u5177\u67092048\u4e2a\u6838\u5fc3\u7684TPU-v3\u540a\u8231\u4e0a\u6269\u5927\u9ad8\u6548\u7f51\u7edc\u8bad\u7ec3\u7684\u6280\u672f\uff0c\u5176\u52a8\u673a\u662f\u5728\u8fd9\u6837\u7684\u89c4\u6a21\u4e0a\u8bad\u7ec3\u53ef\u4ee5\u8fbe\u5230\u7684\u52a0\u901f\u6bd4\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u57281024TPU-v3\u6838\u4e0a\u5c06\u8bad\u7ec3\u89c4\u6a21\u6269\u5927\u523065536\u6279\u6240\u9700\u7684\u4f18\u5316\uff0c\u4f8b\u5982\u9009\u62e9\u5927\u6279\u91cf\u4f18\u5316\u5668\u548c\u5b66\u4e60\u901f\u7387\u65f6\u95f4\u8868\uff0c\u4ee5\u53ca\u5229\u7528\u5206\u5e03\u5f0f\u8bc4\u4f30\u548c\u6279\u91cf\u5f52\u4e00\u5316\u6280\u672f\u3002\u6b64\u5916\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u5728ImageNet\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u7684\u9ad8\u6548\u7f51\u6a21\u578b\u7684\u65f6\u5e8f\u548c\u6027\u80fd\u57fa\u51c6\uff0c\u4ee5\u4fbf\u5728\u89c4\u6a21\u4e0a\u5206\u6790\u9ad8\u6548\u7f51\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u6211\u4eec\u7684\u4f18\u5316\uff0c\u6211\u4eec\u80fd\u591f\u5728ImageNet\u4e0a\u8bad\u7ec3EfficientNet\uff0c\u57281\u5c0f\u65f640\u5206\u949f\u5185\u8fbe\u523083%\u7684\u51c6\u786e\u7387\u3002", "note_en": "Download PDF  Abstract: EfficientNets are a family of state-of-the-art image classification modelsbased on efficiently scaled convolutional neural networks. Currently,EfficientNets can take on the order of days to train; for example, training anEfficientNet-B0 model takes 23 hours on a Cloud TPU v2-8 node. In this paper,we explore techniques to scale up the training of EfficientNets on TPU-v3 Podswith 2048 cores, motivated by speedups that can be achieved when training atsuch scales. We discuss optimizations required to scale training to a batchsize of 65536 on 1024 TPU-v3 cores, such as selecting large batch optimizersand learning rate schedules as well as utilizing distributed evaluation andbatch normalization techniques. Additionally, we present timing and performancebenchmarks for EfficientNet models trained on the ImageNet dataset in order toanalyze the behavior of EfficientNets at scale. With our optimizations, we areable to train EfficientNet on ImageNet to an accuracy of 83% in 1 hour and 4minutes.", "posttime": "2020-11-10 02:53:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "top,efficientnets,\u8bad\u7ec3", "title": "\u57f9\u8bad\u6548\u7387\u89c4\u6a21\uff1a\u4e00\u5c0f\u65f6\u5185\u8fbe\u523083%\u7684ImageNet Top-1\u51c6\u786e\u7387", "title_en": "Training EfficientNets at Scale: 83% ImageNet Top-1 Accuracy in One Hour", "transed": 1, "url": "https://arxiv.org/abs/2011.00071", "via": "", "real_tags": ["top", "\u8bad\u7ec3"]}, {"category": "", "categoryclass": "", "imagename": "345a3617e3c9f0d360a256f078a61f81.jpg", "infoid": 1034106, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u53d1\u4eba\u5458\u662f\u4e00\u7fa4\u6311\u5254\u7684\u4eba\u3002\u5c31\u50cf\u4e00\u53ea\u72d7\u62d2\u7edd\u5728\u6f6e\u6e7f\u7684\u8349\u5730\u4e0a\u884c\u8d70\u4e00\u6837\uff0c\u4f3c\u4e4e\u603b\u662f\u6709\u4e00\u4e9b\u963b\u529b\u8981\u6539\u53d8\u5e38\u89c4\u3002\u65e0\u8bba\u662f\u300a\u661f\u9645\u8ff7\u822a\u300b\u4e2d\u7684\u7b11\u8bdd\u3001Vim\u8fd8\u662fEmacs\uff0c\u6211\u4eec\u90fd\u559c\u6b22\u548c\u6211\u4eec\u4e00\u8d77\u957f\u5927\u7684\u4e1c\u897f\u3002\n\u8fd9\u573a\u6218\u4e89\u7684\u8d77\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u523020\u4e16\u7eaa80\u5e74\u4ee3\u7684Usenet\u7ec4\u7ec7\uff0c\u5f53\u65f6Vim\u548cEmacs\u662f\u4e3b\u8981\u7684\u7f16\u7801\u5de5\u5177\u3002\u4f17\u6240\u5468\u77e5\uff0cEmacs\u662f\u4e00\u4e2a\u201c\u66f2\u6298\u7684\u5c0f\u6bb5\u843d\u8ff7\u5bab\uff0c\u5168\u7136\u4e0d\u540c\u201d(\u8fd9\u662f\u4e00\u4e2a\u8001\u7a0b\u5e8f\u5458\u7684\u7b11\u8bdd\uff0c\u51fa\u81ea\u6e38\u620f\u201c\u5de8\u578b\u6d1e\u7a74\u5386\u9669\u8bb0\u201d)\uff0c\u800cVim\u5219\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7531\u7bad\u5934\u63a7\u5236\u7684\u952e\u76d8\u5feb\u6377\u952e\u3002\u4e24\u8005\u90fd\u7528\u4e8e\u7f16\u7801\u3001\u7f16\u8f91\u548c\u7ba1\u7406\u7cfb\u7edf\u3002\u800c\u4e14\uff0c\u5c3d\u7ba1\u6211\u4eec\u90fd\u4e0d\u60f3\u8fd9\u4e48\u8bf4\uff0c\u4f46\u53cc\u65b9\u4f3c\u4e4e\u90fd\u4e0d\u60f3\u5728\u5915\u9633\u4e2d\u6d88\u9000\u3002\n\u591a\u5e74\u6765\uff0cVim\u548cEmacs\u7528\u6237\u4e4b\u95f4\u65e0\u4f11\u6b62\u7684\u6218\u4e89\u4e00\u76f4\u4ee4\u4eba\u4f5c\u5455\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4e0e\u5176\u8bf4\u8fd9\u662f\u4e00\u573a\u6218\u4e89\uff0c\u4e0d\u5982\u8bf4\u662f\u5bf9\u6839\u6df1\u8482\u56fa\u7684\u4e60\u60ef\u548c\u5bf9\u53d8\u9769\u7684\u987d\u56fa\u62b5\u5236\u7684\u7262\u9a9a\u6ee1\u8179\u7684\u6d17\u724c\u3002VIM\u548cEmacs\u7684\u7528\u6237\u5728\u4e92\u76f8\u653b\u51fb\u4e4b\u540e\uff0c\u4f3c\u4e4e\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5f7c\u6b64\u7684\u952e\u7ed1\u5b9a(\u8fd9\u662f\u4ed6\u4eec\u5b9e\u9645\u505a\u7684\u4e8b\u60c5)\uff0c\u4ee5\u5bf9\u6297\u4e00\u4e2a\u5171\u540c\u7684\u654c\u4eba--\u4efb\u4f55\u73b0\u4ee3\u7684IDE\u3002\n\u8bb8\u591aVim/Emacs\u7528\u6237\u7684\u5171\u8bc6\u521b\u9020\u4e86\u4e00\u5e45\u7279\u5b9a\u65f6\u4ee3\u7684\u8bb8\u591a\u79d1\u6280\u7528\u6237\u90fd\u4f1a\u719f\u6089\u7684\u56fe\u666f\u3002\u6b63\u5982\u6211\u7236\u4eb2\u6240\u8bc1\u660e\u7684\u90a3\u6837\uff0c\u5728\u5fae\u8f6fZune\u7684\u652f\u6301\u8017\u5c3d\u5f88\u4e45\u4e4b\u540e\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u7834\u574f\u2026\uff0c\u6211\u4ecd\u7136\u5728\u4f7f\u7528\u5b83\u3002\u867d\u7136\u5e02\u573a\u4e0a\u6709\u5f88\u591aIDE\uff0c\u4f46\u5982\u679c\u4f60\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u4e00\u4e2a\uff0c\u90a3\u5c31\u6ca1\u6709\u7406\u7531\u4f7f\u7528\u4e00\u4e2a\u3002\u8fd9\u4e5f\u662f\u6211\u4ecd\u5728\u4f7f\u7528\u8bb0\u4e8b\u672c\u5199\u4f5c\u7684\u539f\u56e0\uff0c\u800c\u4e0d\u662f\u4ec0\u4e48\u82b1\u54e8\u7684\u6587\u672c\u7f16\u8f91\u5668\u6216CMS\u5de5\u5177\u3002\u53ea\u662f\u8d77\u4f5c\u7528\u4e86\u3002\nVim\u7528\u6237\u7ea6\u7ff0\u00b7\u5361\u7279(\u4e0d\u662f\u6765\u81ea\u706b\u661f\u7684)\u8bf4\uff1a\u201c\u6211\u907f\u514d\u4f7f\u7528IDE\u7684\u539f\u56e0\u662f\uff0c\u5927\u7ea6\u5341\u5e74\u524d\uff0c\u5f53\u6211\u521a\u8fdb\u5165Vim\u7684\u65f6\u5019\uff0c\u5b83\u662f\u4e00\u4e2a\u989d\u5916\u7684\u8bb8\u53ef\u8bc1\u3002\u201d\u201c\u4ece\u90a3\u65f6\u8d77\uff0c\u8fd9\u5c31\u6210\u4e86\u4e00\u4e2a\u2018\u4ee3\u7801\u901f\u5ea6\u2019\u7684\u95ee\u9898\u3002\u201d\u5982\u679c\u6211\u4ece\u4e00\u4e2a\u65b0\u7684IDE\u5f00\u59cb\uff0c\u6216\u8005\u751a\u81f3\u5207\u6362\u5230\u50cfEmacs\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u6211\u5c31\u4f1a\u6162\u4e0b\u6765\u3002\u5728\u60c5\u611f\u548c\u804c\u4e1a\u5c42\u9762\u4e0a\uff0c\u6211\u771f\u7684\u8d1f\u62c5\u4e0d\u8d77\u3002\u8f6c\u5411\u4e00\u4f4d\u65b0\u7f16\u8f91\u662f\u9700\u8981\u7cbe\u529b\u7684\u3002\u6211\u6ca1\u6709\u90a3\u6837\u7684\u7cbe\u529b\u3002\u6211\u5f97\u5230\u4e86\u5de5\u4f5c\u3001\u5bb6\u5ead\u548c\u526f\u4e1a\u3002\u8fd9\u770b\u8d77\u6765\u5f88\u611a\u8822\uff0c\u4f46\u8fd9\u79cd\u8f6c\u5411\u9700\u8981\u7cbe\u529b\u3002\nVim\u59cb\u7ec8\u53ef\u7528\u3002\u4efb\u4f55Linux\u673a\u5668\u90fd\u6709\u5b83\u3002Vim\u5360\u7528\u7a7a\u95f4\u5c0f\uff0c\u5ef6\u8fdf\u4f4e\uff0c\u542f\u52a8\u901f\u5ea6\u5feb\uff0c\u5141\u8bb8\u66f4\u5927\u7684\u5c4f\u5e55\u7a7a\u95f4\uff0c\u53ef\u5b9a\u5236\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u4e00\u65e6\u808c\u8089\u8bb0\u5fc6\u6839\u6df1\u8482\u56fa\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u5207\u6362\u5230\u5176\u4ed6\u4e1c\u897f\u3002\n\u5361\u7279\u63a5\u7740\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u624b\u6307\u5f80\u5f80\u662f\u6784\u601d\u4ee3\u7801\u548c\u628a\u4ee3\u7801\u653e\u5165\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u74f6\u9888\uff0c\u6240\u4ee5\u4eba\u4eec\u5e0c\u671b\u4f18\u5316\u5feb\u6377\u65b9\u5f0f\u3002\u201d\n\u4ee5Atom\u4e3a\u4f8b\uff0c\u5b83\u662f\u6bd4\u8f83\u6d41\u884c\u7684IDE/\u7f16\u8f91\u5668\u4e4b\u4e00\u3002Atom\u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5b83\u6807\u699c\u81ea\u5df1\u662f\u201c\u53ef\u4fb5\u5165\u6838\u5fc3\u7684\u201d\uff0c\u5141\u8bb8\u591a\u79cd\u5b9a\u5236\u3002\u5b83\u5177\u6709\u8de8\u5e73\u53f0\u7f16\u8f91\u30014\u4e2a\u7528\u6237\u754c\u9762\u30018\u4e2a\u8bed\u6cd5\u4e3b\u9898\uff0c\u5e76\u96c6\u6210\u4e86HTML\u3001Javascript\u3001CSS\u548cNode.js\u3002\u5bf9\u4e8e\u8fc7\u53bb\u4e94\u5e74\u6ca1\u6709\u5f00\u59cb\u7f16\u7a0b\u7684\u7528\u6237\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u662f\u6709Vim\u6a21\u5f0f\u5305\u3002\u8fd9\u5bfc\u81f4\u7528\u6237\u5c06Atom\u53d8\u6210Vim\uff0c\u65e0\u6cd5\u653e\u4e0b\u8fc7\u53bb\uff0c\u4e0d\u613f\u5b8c\u5168\u62e5\u62b1\u4ee3\u7801\u7f16\u8f91\u7684\u672a\u6765\u3002\n\u5927\u591a\u6570IDE\u521b\u5efa\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u521b\u5efa\u7684\u6574\u4e2a\u4e16\u754c\uff0c\u4f46\u521b\u5efa\u9700\u8981\u914d\u7f6e\u3002\u8981\u8c03\u6574\u8fd9\u4e2a\u4e16\u754c\uff0c\u626e\u6f14\u4e0a\u5e1d\uff0c\u521b\u5efa\u5feb\u6377\u952e\u548c\u5feb\u6377\u952e\uff0c\u9002\u5e94\u4e0d\u540c\u7684\u547d\u4ee4\u7ed3\u6784\u548c\u7528\u6237\u754c\u9762\uff0c\u90fd\u9700\u8981\u65f6\u95f4\u3002\u867d\u7136\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5750\u5728\u4efb\u4f55\u7ec8\u7aef\u4e0a\u5f00\u59cb\u5728Vim\u4e2d\u5de5\u4f5c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u9002\u7528\u4e8e\u4efb\u4f55IDE\u3002\u6b64\u5916\uff0cIDE\u5bf9\u4e8e\u8fd9\u9879\u5de5\u4f5c\u6765\u8bf4\u5f80\u5f80\u662f\u592a\u591a\u7684\u5de5\u5177\u3002\u4e0e\u5e9e\u5927\u7684\u7f16\u7a0b\u5de8\u4eba\u76f8\u6bd4\uff0c\u7b80\u5355\u7684\u6587\u672c\u7f16\u8f91\u5668\u66f4\u80fd\u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u670d\u52a1\u3002\n\u7531\u4e8e\u7a0b\u5e8f\u5458\u7684\u804c\u4e1a\u751f\u6daf\u4e0e\u5176\u8bf4\u662f\u901a\u8fc7\u4ed6\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u53d1\u5c55\u8d77\u6765\u7684\uff0c\u4e0d\u5982\u8bf4\u662f\u7531\u8c01\u5728\u7b7e\u7f72\u4ed6\u4eec\u7684\u85aa\u6c34\u652f\u7968\uff0c\u6240\u4ee5\u65e0\u8bba\u516c\u53f8\u559c\u6b22\u54ea\u79cdIDE\uff0c\u603b\u6709\u4e00\u4e2a\u6052\u5b9a\u7684\u4ee3\u7801\u7f16\u8f91\u5668\u53ef\u4f9b\u4ed6\u4eec\u4f7f\u7528\u3002\u8fd9\u53ef\u80fd\u88ab\u89c6\u4e3a\u4e00\u79cd\u6545\u610f\u6311\u8845\u7684\u884c\u4e3a\uff0c\u6216\u8005\u53ea\u662f\u4e2a\u4eba\u504f\u597d\uff0c\u4f46\u6587\u672c\u7f16\u8f91\u603b\u662f\u5728\u90a3\u91cc\u3002\nBSD\u8dd1\u6b65\u8005\u8482\u59c6\u00b7\u8521\u65af(Tim Chase)\u8bf4\uff1a\u201c\u9996\u5148\uff0c\u8fd9\u662f\u5173\u4e8e\u65e0\u5904\u4e0d\u5728\u7684\u3002\u201d\u201c\u6211\u53ef\u4ee5\u5750\u5728\u4efb\u4f55\u7c7b\u4f3cUnix\u7684\u7ec8\u7aef\u4e0a(Linux\u3001BSD\u3001Solaris\u7b49\u7b49)\uff0c\u8f93\u5165\u2018vi\u2019(\u6216\u2018ed\u2019)\uff0c\u62e5\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u7f16\u8f91\u5668\uff0c\u5373\u4f7f\u6211\u7684\u7ec8\u7aef\u914d\u7f6e\u4e0d\u662f\u5f88\u6b63\u786e(\u4f8b\u5982\uff0c\u53d1\u9001\u67d0\u4e9b\u952e\u6216\u7ec4\u5408\u952e)\uff0c\u4e5f\u4e0d\u9700\u8981\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\u3002\u201d\n\u6b63\u662f\u8fd9\u79cd\u8212\u9002\u6027\u4f7f\u5f97\u90a3\u4e9b\u4ecd\u5728\u4f7f\u7528Vim\u6216Emacs\u7684\u7528\u6237\u548c\u4f7f\u7528IDE\u7684\u4eba\u4e4b\u95f4\u7684\u6218\u4e89\u4e00\u76f4\u6301\u7eed\u5230\u73b0\u5728\u3002\u8fd9\u662f\u7cbe\u795e\u5988\u5988\u505a\u7684\u610f\u5927\u5229\u9762(\u6216\u8005\u5728\u8fd9\u91cc\u63d2\u5165\u4f60\u7684\u5b89\u6170\u98df\u7269)\u3002VIM\u548cEmacs\u603b\u662f\u5728\u90a3\u91cc\u7b49\u7740\u4f60\uff0c\u8212\u9002\u3001\u5e73\u9759\u548c\u4e50\u4e8e\u63a5\u53d7\u3002\u800cIDE\u662f\u4e00\u79cd\u602a\u5f02\u7684\u65b0\u98df\u7269\uff0c\u542b\u6709\u5404\u79cd\u5f02\u56fd\u60c5\u8c03\u7684\u98df\u6750\uff0c\u9700\u8981\u575a\u97e7\u800c\u975e\u7406\u6027\u7684\u53c9\u5b50\u6765\u6311\u9009\uff0c\u624d\u80fd\u5f97\u5230\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u3002\u8fd9\u79cd\u8131\u8282\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e5f\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\n\u4e0d\u8fc7\uff0c\u5f00\u53d1\u4eba\u5458\u4e5f\u610f\u8bc6\u5230\uff0c\u4e5f\u8bb8\u5207\u6362\u5230\u5b8c\u6574\u7684IDE\u5e76\u4e0d\u50cf\u542c\u8d77\u6765\u90a3\u4e48\u96be\u4ee5\u5fcd\u53d7\u3002\u5f53\u4f60\u6700\u7ec8\u610f\u8bc6\u5230\u4e3a\u4e86\u5b8c\u6210\u5de5\u4f5c\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u53ef\u7528\u7684\u5de5\u5177\u6765\u5b8c\u6210\u5de5\u4f5c\uff0c\u800c\u4e0d\u7ba1\u8fd9\u4e9b\u5de5\u5177\u662f\u4ec0\u4e48\uff0c\u8fd9\u662f\u4e00\u79cd\u65e0\u53ef\u5948\u4f55\u7684\u611f\u89c9\u3002\n\u6c64\u59c6\u00b7\u6c49\u514b\u65af\u5e76\u4e0d\u662f\u8fd9\u4e48\u8bf4\u7684\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u8bf4\uff0c\u53ea\u8981\u80fd\u5e2e\u4f60\u5b8c\u6210\u5de5\u4f5c\uff0c\u5c31\u7528\u5b83\u3002\u201d\u201c\u6709\u65f6\u73b0\u4ee3\u7684IDE\u8d8a\u591a\uff0c\u5c31\u8d8a\u6709\u53ef\u80fd\u6210\u4e3a\u969c\u788d\uff0c\u800c\u6709\u4e9b\u65f6\u5019\uff0c\u5b83\u4eec\u5219\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u201d\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5173\u8054\u7684\u6587\u4ef6\u592a\u591a\u65f6\uff0cVisual Studio\u5c31\u4f1a\u51fa\u73b0\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\u3002\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u975e\u5e38\u7f13\u6162\u3002\u51e0\u5e74\u524d\uff0c\u5f53\u6211\u4f7f\u7528PyCharm\u8fdb\u884cPython\u5f00\u53d1\u65f6\uff0c\u5b83\u6709\u65f6\u4f1a\u53d8\u5f97\u201c\u6df7\u4e71\u201d\uff0c\u5e76\u5728\u8bed\u6cd5\u5206\u6790\u65b9\u9762\u7ed9\u51fa\u4e0d\u597d\u7684\u53cd\u9988\u3002\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u8fd9\u8ba9\u4f60\u89c9\u5f97\u81ea\u5df1\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u5b9e\u9645\u4e0a\u4e00\u5207\u90fd\u5f88\u2018\u597d\u2019\u3002\u201c\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u662f\u7f16\u7a0b\u65b0\u624b\uff0c\u73b0\u4ee3\u7684IDE\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u51ed\u501f\u4ee3\u7801\u5b8c\u6210\u3001Git\u63a7\u5236\u751a\u81f3\u81ea\u52a8\u90e8\u7f72\u7cfb\u7edf\uff0c\u73b0\u4ee3IDE\u662f\u4e00\u628a\u745e\u58eb\u519b\u5200\u3002\u800c\u4e14\uff0c\u5c31\u50cf\u5927\u591a\u6570\u745e\u58eb\u519b\u5200\u4e00\u6837\uff0c\u4f60\u4e0d\u5fc5\u4f7f\u7528\u6240\u6709\u7684\u529f\u80fd\u624d\u80fd\u53d1\u73b0\u5b83\u4eec\u662f\u6709\u7528\u7684\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u521a\u521a\u5f00\u59cb\u4f7f\u7528\u7684\u8bdd\u3002\u6bd4\u65b9\u8bf4\uff0c\u6211\u4eec\u5f88\u591a\u4eba\u90fd\u4e0d\u4f1a\u4f7f\u7528\u6253\u5b54\u673a\u6216\u7259\u7b7e\uff0c\u4f46\u77e5\u9053\u5b83\u5c31\u5728\u90a3\u91cc\u662f\u4ef6\u597d\u4e8b\u3002\n\u65e0\u8bbaVim\u3001Emacs\u548cIDES\u4e4b\u95f4\u5728\u7f16\u7801\u8005\u7684\u5c4f\u5e55\u540e\u9762\u53ef\u80fd\u4f1a\u7206\u53d1\u4ec0\u4e48\u6218\u4e89\uff0c\u8fd9\u90fd\u65e0\u5173\u7d27\u8981\u3002VIM\u548cEmacs\u5728\u77ed\u671f\u5185\u4e0d\u4f1a\u6709\u4efb\u4f55\u8fdb\u5c55\uff0c\u65e0\u8bba\u5b83\u4eec\u5728\u73b0\u4ee3\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u8fc7\u65f6\u5730\u4f4d\u5982\u4f55\u3002IDE\u5c06\u4e0d\u65ad\u6539\u8fdb\uff0c\u4e0d\u65ad\u63a8\u51fa\uff0c\u5e76\u670d\u52a1\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u5e74\u8f7b\u5f00\u53d1\u4eba\u5458\uff0c\u4ed6\u4eec\u4ece\u672a\u88ab\u8feb\u5728Vim\u6216Emacs\u73af\u5883\u4e2d\u8301\u58ee\u6210\u957f\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6b63\u5728\u4e3a\u9009\u62e9\u9996\u9009\u7a0b\u5e8f\u800c\u82e6\u82e6\u6323\u624e\u7684\u4eba\u6765\u8bf4\uff0c\u6700\u597d\u7684\u5efa\u8bae\u662f\u53ea\u4f7f\u7528\u53ef\u7528\u7684\u5de5\u5177\u6765\u5b8c\u6210\u5de5\u4f5c\u3002\u6216\u8005\uff0c\u5c31\u50cf20\u4e16\u7eaa\u6d41\u884c\u8bd7\u4ebaTLC\u5de7\u5999\u5730\u5ba3\u79f0\u7684\u90a3\u6837\uff0c\u201c\u4e0d\u8981\u53bb\u8ffd\u9010\u7011\u5e03\uff0c\u8bf7\u575a\u6301\u4f60\u4e60\u60ef\u7684VIMS\u548cEmacs\u3002\u201d\n\u6807\u7b7e\uff1aEmacs\u3001ide\u3001vim", "note_en": "Developers are a finicky bunch. Like a dog refusing to walk on wet grass, there always seemed to be a bit of resistance to changing up a routine. We love what we grew up with, be it Star Trek jokes,  Vim, or  Emacs.\n The origins of  this war harken back to Usenet groups in the 1980s, a time when Vim and Emacs were the primary tools used for coding. Emacs, as we well know, is a \u201cmaze of twisty little passages, all different,\u201d (an old programmer\u2019s joke that came from the game  Colossal Cave Adventure) while Vim offers an arrow-controlled universe of keyboard shortcuts. Both are used in coding, editing, and administering systems. And, though we hate to say it, both have reached a point where neither seems to really want to fade off into the sunset.\n The  endless war between Vim and Emacs users has continued ad nauseam over the  years. It\u2019s less a war at this point than a grumbling shuffle of ingrained habit and stubborn resistance to change. Vim and Emacs users, once at each other\u2019s throats, seem to have implemented each other\u2019s keybindings (a thing they actually do) to take on a common enemy \u2014 any modern IDE.\n  The consensus among many Vim/Emacs users creates a picture many tech users from a  certain generation would be familiar with. As my father would attest, using his Microsoft Zune long after its support ran out, if it ain\u2019t broke\u2026 While there are  many IDEs on the market, there\u2019s no reason to use one if you don\u2019t have to use one. It\u2019s the same reason I am still using Notepad to compose and not some fancy text editor or CMS tool. It just works.\n \u201cThe reason I avoided IDEs to begin with was that back when I was getting into Vim, like a decade ago, it was an extra license to look into,\u201d says Vim user  John Carter (not of Mars). \u201cSince then it\u2019s become a question of \u2018code speed.\u2019 If I start with a new IDE or even switch to something like Emacs, I\u2019ll slow down. On an emotional and professional level, I can\u2019t really afford that. It takes energy to pivot to a new editor. I don\u2019t have that energy. I got the job, a family, and side projects. It seems silly but that kind of pivot takes energy.\u201d\n Vim is always available. Any Linux machine has it. Vim has a small footprint, low latency, fast startup, allows for more screen space, customizable and most importantly, once the muscle-memory has been ingrained, it\u2019s nearly impossible to switch to something else.\n Continues Carter: \u201cOur fingers are often the bottleneck between thinking up code and getting it in the app, so that\u2019s where folks look to optimize shortcuts.\u201d\n Take  Atom, one of the more popular IDEs/editors. Atom is a free, open-source text editor that bills itself as being \u201chackable to the core,\u201d allowing for multiple customizations. It has cross-platform editing, four UIs, eight syntax themes and integrates with HTML, Javascript, CSS, and Node.js. Most importantly for users who didn\u2019t start coding in the last five years, there is a  Vim Mode package. This has led users to literally  turn Atom into Vim, unable to let go of the past, unwilling to fully embrace the future of code editing.\n Most IDEs create entire worlds where developers can create, but creating requires configuration. It takes time to adjust that world, to play god, to create shortcuts and hotkeys, to get used to different command structures and UI. While a coder could sit down at any terminal and begin working in Vim, that isn\u2019t true for any IDE. Further, IDEs are often too much tool for the job. Beginning programmers are much better served by simple text editors vs. massive programming behemoths.\n As coders\u2019 careers evolve less through their expertise than who is signing their paychecks, there is always a constant code editor available to them regardless of which IDE the company prefers. It could be seen as an act of willful defiance or just personal preference, but text editors are always there.\n \u201cPrimarily it\u2019s about ubiquity,\u201d says  BSD runner Tim Chase. \u201cI can sit at any Unix-like terminal (Linux, BSD, Solaris, whatever), type \u2018vi\u2019 (or \u2018ed\u2019) and have a powerful editor that works even if my terminal isn\u2019t configured quite right (e.g. sending certain keys or key combos) and without needing to install anything.\u201d\n  It\u2019s this type of comfort that has kept whatever perceived war between those still using Vim or Emacs and the prospect of using IDEs going for as long as it has. It\u2019s mental  mom\u2019s spaghetti (or insert your comfort food here). Vim and Emacs are always there for you, cozy, calm and willing. While an IDE is some weird new food with all kinds of exotic ingredients that requires tenacious and irrational picking with the fork to get it just the way you want it. The disconnect is apparent and, at this point, understandable.\n There is some shiver of recognition among developers though that perhaps switching to a full IDE is not as unbearable as it sounds. There is a resignation in finally realizing that in order to do the job, you use the tools available to do the job, no matter what those tools may be.\n \u201cI say, whatever helps you get your job done, use that,\u201d says  not that  Tom Hanks. \u201cSometimes the more modern IDEs can get in the way, other times they are indispensable.  Visual Studio, for example, has massive performance issues when there are too many files associated with a project file. The entire application becomes very sluggish. A few years ago when I used PyCharm for Python development, it would sometimes become \u2018confused\u2019 and give bad feedback on its syntax analysis. Basically, it was making you think you had made a mistake when in fact everything was \u2018fine.\u2019\u201d\n That said, if you\u2019re new to programming, a modern IDE could be helpful. With code completion, Git control, and even automatic deployment systems, modern IDEs are a Swiss Army Knife of features. And, like most Swiss Army Knives, you don\u2019t have to use all the features to find them useful, especially if you\u2019re just starting out. Many of us won\u2019t use, say, the hole punch or the toothpick, but it\u2019s nice to know it\u2019s there.\n Whatever war might be raging behind the screens of coders between Vim, Emacs, and IDEs really doesn\u2019t matter. Vim and Emacs aren\u2019t going anywhere anytime soon, no matter their antiquated status in modern development environments. IDEs will keep improving, keep launching, and serve an ever-growing segment of young developers who were never forced to thrive in Vim or Emacs environments. The best advice to anyone struggling with choosing a preferred program is to just use the tools available to get the job done. Or, as the popular 20th century poets TLC so deftly declared, \u201cDon\u2019t go chasing waterfalls, please stick to the Vims and Emacs that you\u2019re used to.\u201d\n Tags:  emacs,  ide,  vim", "posttime": "2020-11-10 02:53:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "emacs,\u7a0b\u5e8f,vim", "title": "\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u7a0b\u5e8f\u5458\u8fd8\u5728\u4f7f\u7528Vim\u548cEmacs\uff1f", "title_en": "Why are so many coders still using Vim and Emacs?", "transed": 1, "url": "https://stackoverflow.blog/2020/11/09/modern-ide-vs-vim-emacs/", "via": "", "real_tags": ["emacs", "\u7a0b\u5e8f", "vim"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034105, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7cfb\u5217\u6587\u7ae0\u9996\u5148\u6982\u8ff0\u4e86CPython VM\u3002\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u8981\u8fd0\u884c\u4e00\u4e2aPython\u7a0b\u5e8f\uff0cCPython\u9996\u5148\u5c06\u5176\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff0c\u6211\u4eec\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\u7814\u7a76\u4e86\u8be5\u7f16\u8bd1\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4e0a\u4e00\u6b21\u6211\u4eec\u5355\u6b65\u6267\u884c\u4e86CPython\u6e90\u4ee3\u7801\uff0c\u4ecemain()\u51fd\u6570\u5f00\u59cb\uff0c\u4e00\u76f4\u5230\u8ba1\u7b97\u5faa\u73af\uff0c\u8fd9\u662f\u6267\u884cPython\u5b57\u8282\u7801\u7684\u5730\u65b9\u3002\u6211\u4eec\u82b1\u65f6\u95f4\u7814\u7a76\u8fd9\u4e9b\u4e1c\u897f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4e3a\u4eca\u5929\u5f00\u59cb\u7684\u8ba8\u8bba\u505a\u51c6\u5907\u3002\u8ba8\u8bba\u7684\u76ee\u6807\u662f\u7406\u89e3CPython\u5982\u4f55\u6267\u884c\u6211\u4eec\u544a\u8bc9\u5b83\u505a\u7684\u4e8b\u60c5\uff0c\u5373\u5b83\u5982\u4f55\u6267\u884c\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u7f16\u8bd1\u5230\u7684\u5b57\u8282\u7801\u3002\n\u6ce8\uff1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u6307\u7684\u662fCPython3.9\u3002\u968f\u7740CPython\u7684\u53d1\u5c55\uff0c\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u80af\u5b9a\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6211\u5c06\u5c1d\u8bd5\u8ddf\u8e2a\u91cd\u8981\u66f4\u6539\u5e76\u6dfb\u52a0\u66f4\u65b0\u7b14\u8bb0\u3002\n\u8ba9\u6211\u4eec\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u5728\u524d\u51e0\u90e8\u5206\u4e2d\u5b66\u5230\u7684\u4e1c\u897f\u3002\u6211\u4eec\u901a\u8fc7\u7f16\u5199Python\u4ee3\u7801\u544a\u8bc9CPython\u8981\u505a\u4ec0\u4e48\u3002\u7136\u800c\uff0cCPython VM\u53ea\u7406\u89e3Python\u5b57\u8282\u7801\u3002\u8fd9\u662f\u7f16\u8bd1\u5668\u5c06Python\u4ee3\u7801\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u7684\u5de5\u4f5c\u3002\u7f16\u8bd1\u5668\u5c06\u5b57\u8282\u7801\u5b58\u50a8\u5728\u4ee3\u7801\u5bf9\u8c61\u4e2d\uff0c\u4ee3\u7801\u5bf9\u8c61\u662f\u4e00\u79cd\u5b8c\u5168\u63cf\u8ff0\u4ee3\u7801\u5757(\u5982\u6a21\u5757\u6216\u51fd\u6570)\u529f\u80fd\u7684\u7ed3\u6784\u3002\u8981\u6267\u884c\u4ee3\u7801\u5bf9\u8c61\uff0cCPython\u9996\u5148\u8981\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u79f0\u4e3aFrame\u5bf9\u8c61\u7684\u6267\u884c\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u5c06\u5e27\u5bf9\u8c61\u4f20\u9012\u7ed9\u5e27\u6c42\u503c\u51fd\u6570\u4ee5\u6267\u884c\u5b9e\u9645\u8ba1\u7b97\u3002\u9ed8\u8ba4\u5e27\u6c42\u503c\u51fd\u6570\u4e3a_PyEval_EvalFrameDefault()\uff0c\u8be5\u51fd\u6570\u5728Python/ceval.c\u4e2d\u5b9a\u4e49\u3002\u8be5\u51fd\u6570\u5b9e\u73b0\u4e86CPython VM\u7684\u6838\u5fc3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5b9e\u73b0\u4e86\u6267\u884cPython\u5b57\u8282\u7801\u7684\u903b\u8f91\u3002\u6240\u4ee5\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u6211\u4eec\u4eca\u5929\u8981\u5b66\u4e60\u7684\u3002\n\u8981\u7406\u89e3_PyEval_EvalFrameDefault()\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5173\u952e\u662f\u8981\u4e86\u89e3\u5b83\u7684\u8f93\u5165(Frame\u5bf9\u8c61)\u662f\u4ec0\u4e48\u3002Frame\u5bf9\u8c61\u662f\u7531\u4ee5\u4e0bC\u7ed3\u6784\u5b9a\u4e49\u7684Python\u5bf9\u8c61\uff1a\n//tyfinf struct_Frame PyFrameObject\uff1b\u5728\u5176\u4ed6\u5730\u65b9Struct_Frame{PyObject_VAR_Head Struct_Frame*f_back\uff1b/*\u4e0a\u4e00\u5e27\u6216\u7a7a*/PyCodeObject*f_code\uff1b/*\u4ee3\u7801\u6bb5*/PyObject*f_Builtins\uff1b/*\u5185\u7f6e\u7b26\u53f7\u8868(PyDictObject)*/PyObject*f_Globals\uff1b/*\u5168\u5c40\u7b26\u53f7\u8868(PyDictObject)*/PyObject*f\u3002/*\u5728f_valuestack\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u672c\u5730*//*\u4e0b\u4e00\u4e2a\u53ef\u7528\u69fd\u4e4b\u540e\u7684\u70b9\u6570\u3002\u5e27\u521b\u5efa\u8bbe\u7f6e\u4e3af_valuestack\u3002\u6846\u67b6\u6c42\u503c\u901a\u5e38\u4e3a\u7a7a\uff0c\u4f46\u751f\u6210\u7684\u6846\u67b6\u4f1a\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f53\u524d\u5806\u6808\u9876\u90e8\u3002*/PyObject**f_stacktop\uff1bPyObject*f_trace\uff1b/*\u8ddf\u8e2a\u51fd\u6570*/char f_TRACE_LINES\uff1b/*\u53d1\u51fa\u9010\u884c\u8ddf\u8e2a\u4e8b\u4ef6\uff1f*/char f_trace_opcodes\uff1b/*\u53d1\u51fa\u6bcf\u64cd\u4f5c\u7801\u8ddf\u8e2a\u4e8b\u4ef6\uff1f*//*\u501f\u7528\u5bf9\u751f\u6210\u5668\u7684\u5f15\u7528*/PyObject*f_gen\uff1bint f_lasti\uff1b/*\u8c03\u7528\u6700\u540e\u4e00\u6761\u6307\u4ee4*/int f_lineno\uff1b/*\u5f53\u524d\u884c\u53f7*/int\u3002/*\u7d22\u5f15\u5728f_block STACK\u4e2d*/char f_Executing\uff1b/*\u5e27\u662f\u5426\u8fd8\u5728\u6267\u884c*/PyTryBlock f_block STACK[CO_MAXBLOCKS]\uff1b/*for try and loop\u5757*/PyObject*f_localplus[1]\uff1b/*LOCALS+STACK\uff0c\u52a8\u6001\u8c03\u6574\u5927\u5c0f*/}\uff1b\n\u5e27\u5bf9\u8c61\u7684f_code\u5b57\u6bb5\u6307\u5411\u4ee3\u7801\u5bf9\u8c61\u3002\u4ee3\u7801\u5bf9\u8c61\u4e5f\u662fPython\u5bf9\u8c61\u3002\u4ee5\u4e0b\u662f\u5b83\u7684\u5b9a\u4e49\uff1a\nStruct PyCodeObject{PyObject_head int co_argcount\uff1b/*#\u53c2\u6570\uff0c\u9664*args*/int co_posonlyargcount\uff1b/*#\u4ec5\u4f4d\u7f6e\u53c2\u6570*/int co_kwan lyargcount\uff1b/*#\u4ec5\u5173\u952e\u5b57\u53c2\u6570*/int co_nlocals\uff1b/*#\u5c40\u90e8\u53d8\u91cf*/int co_stacksize\uff1b/*#\u6c42\u503c\u5806\u6808\u6240\u9700\u7684\u6761\u76ee*/int co_flag\uff1b/*CO_...\uff0c\u89c1\u4e0b\u6587*/int co_firstlineno\u3002/*\u6307\u4ee4\u64cd\u4f5c\u7801*/PyObject*co_consts\uff1b/*List(\u4f7f\u7528\u7684\u5e38\u91cf)*/PyObject*co_names\uff1b/*\u5b57\u7b26\u4e32\u5217\u8868(\u4f7f\u7528\u7684\u540d\u79f0)*/PyObject*co_varname\uff1b/*\u5b57\u7b26\u4e32\u6570\u7ec4(\u5c40\u90e8\u53d8\u91cf\u540d\u79f0)*/PyObject*co_freevars\uff1b/*\u5b57\u7b26\u4e32\u6570\u7ec4(\u81ea\u7531\u53d8\u91cf\u540d\u79f0)*/PyObject*co_cellvars\uff1b/*\u5b57\u7b26\u4e32\u6570\u7ec4(\u5355\u5143\u683c\u53d8\u91cf\u540d\u79f0)*//*\u5176\u4f59\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a&#\u3002T\u5728\u6563\u5217\u6216\u6bd4\u8f83\u4e2d\u4f7f\u7528\uff0c\u4f46co_name\u9664\u5916\uff0c\u5728\u4e24\u8005\u4e2d\u90fd\u4f7f\u7528\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fdd\u7559\u7528\u4e8e\u56de\u6eaf\u548c\u8c03\u8bd5\u5668\u7684\u540d\u79f0\u548c\u884c\u53f7\uff1b\u5426\u5219\uff0c\u6301\u7eed\u7684\u91cd\u590d\u6570\u636e\u5220\u9664\u5c06\u5bfc\u81f4\u5728\u4e0d\u540c\u884c\u4e0a\u5b9a\u4e49\u7684\u76f8\u540c\u51fd\u6570/lambda\u5d29\u6e83\u3002*/py_ssize_t*co_cell2arg\uff1b/*\u6620\u5c04\u4f5c\u4e3a\u53c2\u6570\u7684\u5355\u5143\u683c\u53d8\u91cf\u3002*/PyObject*co_filename\uff1b/*unicode(\u4ece\u4e2d\u52a0\u8f7d)*/PyObject*co_name\uff1b/*unicode(\u540d\u79f0\uff0c\u4ec5\u4f9b\u53c2\u8003)*/PyObject*co_lnotab\uff1b/*string(\u7f16\u7801\u5730\u5740&lt\uff1b-&gt\uff1blineno\u6620\u5c04)\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Objects/lnotab_notes.txt\u3002*/void*co_zombieframe\uff1b/*\u4ec5\u7528\u4e8e\u4f18\u5316(\u8bf7\u53c2\u9605framework object.c)*/PyObject*co_neware refirist\uff1b/*\u652f\u6301\u5bf9\u4ee3\u7801\u5bf9\u8c61\u7684\u5f31\u5f15\u7528*//*\u6682\u5b58\u7a7a\u95f4\u7528\u4e8e\u4e0e\u4ee3\u7801\u5bf9\u8c61\u76f8\u5173\u7684\u989d\u5916\u6570\u636e\u3002Type\u662f\u4e00\u4e2a\u7a7a*\uff0c\u8868\u793a\u5728codeobject.c\u4e2d\u4fdd\u6301\u683c\u5f0f\u79c1\u6709\uff0c\u4ece\u800c\u5f3a\u5236\u4eba\u4eec\u901a\u8fc7\u6b63\u786e\u7684API\u3002*/\u65e0\u6548*\n\u5982\u679c\u4e0a\u8ff0\u7ed3\u6784\u4e2d\u7684\u4e00\u4e9b\u6210\u5458\u5bf9\u4f60\u6765\u8bf4\u4ecd\u7136\u662f\u4e2a\u8c1c\uff0c\u8bf7\u4e0d\u8981\u62c5\u5fc3\u3002\u968f\u7740\u6211\u4eec\u7ee7\u7eed\u5c1d\u8bd5\u7406\u89e3CPythonVM\u662f\u5982\u4f55\u6267\u884c\u5b57\u8282\u7801\u7684\uff0c\u6211\u4eec\u5c06\u4e86\u89e3\u5b83\u4eec\u7684\u7528\u9014\u3002\n\u6267\u884cPython\u5b57\u8282\u7801\u7684\u95ee\u9898\u5bf9\u60a8\u6765\u8bf4\u53ef\u80fd\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u3002\u5b9e\u9645\u4e0a\uff0cVM\u6240\u8981\u505a\u7684\u5c31\u662f\u8fed\u4ee3\u8fd9\u4e9b\u6307\u4ee4\u5e76\u6839\u636e\u5b83\u4eec\u6267\u884c\u64cd\u4f5c\u3002\u8fd9\u5c31\u662f\u672c\u8d28\u4e0a_PyEval_EvalFrameDefault()\u6240\u505a\u7684\u4e8b\u60c5\u3002\u5b83\u5305\u542b\u4e00\u4e2a\u65e0\u9650\u7684for(\uff1b\uff1b)\u5faa\u73af\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6c42\u503c\u5faa\u73af\u3002\u5728\u8be5\u5faa\u73af\u4e2d\uff0c\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u7801\u90fd\u6709\u4e00\u4e2a\u5de8\u5927\u7684switch\u8bed\u53e5\u3002\u6bcf\u4e2a\u64cd\u4f5c\u7801\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684CASE\u5757\uff0c\u5176\u4e2d\u5305\u542b\u7528\u4e8e\u6267\u884c\u8be5\u64cd\u4f5c\u7801\u7684\u4ee3\u7801\u3002\u5b57\u8282\u7801\u753116\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u6570\u7ec4\u8868\u793a\uff0c\u6bcf\u6761\u6307\u4ee4\u4e00\u4e2a\u6574\u6570\u3002VM\u4f7f\u7528Next_instr\u53d8\u91cf\u8ddf\u8e2a\u8981\u6267\u884c\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u8be5\u53d8\u91cf\u662f\u6307\u5411\u6307\u4ee4\u6570\u7ec4\u7684\u6307\u9488\u3002\u5728\u8bc4\u4f30\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0cVM\u901a\u8fc7\u5206\u522b\u53d6\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u6700\u4f4e\u6709\u6548\u5b57\u8282\u548c\u6700\u9ad8\u6709\u6548\u5b57\u8282\u6765\u8ba1\u7b97\u4e0b\u4e00\u64cd\u4f5c\u7801\u53ca\u5176\u53c2\u6570\uff0c\u5e76\u9012\u589eNext_instr\u3002_PyEval_EvalFrameDefault()\u51fd\u6570\u5c06\u8fd13000\u884c\uff0c\u4f46\u5176\u7cbe\u9ad3\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7b80\u5316\u7248\u672c\u83b7\u53d6\uff1a\nPyObject*_PyEval_EvalFrameDefault(PyThreadState*tState\uff0cPyFrameObject*f\uff0cint throwflag){//...\u3002\u5c40\u90e8\u53d8\u91cf\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316//...\u3002\u5b8f\u5b9a\u4e49//...\u3002\u547c\u53eb\u6df1\u5ea6\u5904\u7406//...\u3002\u7528\u4e8e\u8ddf\u8e2a\u548c\u5206\u6790(\uff1b\uff1b){//...\u3002\u68c0\u67e5\u662f\u5426\u5fc5\u987b\u6302\u8d77\u5b57\u8282\u7801\u6267\u884c\uff0c//\u4f8b\u5982\uff0c\u5176\u4ed6\u7ebf\u7a0b\u8bf7\u6c42GIL//NEXTOPARG()MACRO_Py_CODEUNIT WORD=*NEXT_INSTR\uff1b//_Py_CODEUNIT\u662fuint16_t opcode=_Py_OPCODE(Word)\uff1boparg=_Py_OPARG(Word)\uff1bNext_instr++\uff1bSwitch(Opcode){CASE TARGET(NOP){FAST_TARE(FAST_)\u7684\u7c7b\u578b\u5b9a\u4e49\u3002//\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd}\u6848\u4f8b\u76ee\u6807(LOAD_FAST){//...\u3002\u7528\u4e8e\u52a0\u8f7d\u5c40\u90e8\u53d8\u91cf\u7684\u4ee3\u7801}//...\u6bcf\u4e2a\u53ef\u80fd\u7684\u64cd\u4f5c\u7801\u589e\u52a0117\u4e2a\u6848\u4f8b}//...\u3002\u9519\u8bef\u5904\u7406}//...\u3002\u7ec8\u6b62}\u3002\n\u4e3a\u4e86\u83b7\u5f97\u66f4\u771f\u5b9e\u7684\u753b\u9762\uff0c\u8ba9\u6211\u4eec\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u4e00\u4e9b\u7701\u7565\u7684\u90e8\u5206\u3002\n\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u4f1a\u4e0d\u65f6\u5730\u505c\u6b62\u6267\u884c\u5b57\u8282\u7801\uff0c\u4ee5\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u6216\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u6709\u56db\u79cd\uff1a\n\u6709\u4e00\u4e9b\u4fe1\u53f7\u9700\u8981\u5904\u7406\u3002\u5f53\u60a8\u4f7f\u7528signal.ignal()\u5c06\u51fd\u6570\u6ce8\u518c\u4e3a\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u65f6\uff0cCPython\u4f1a\u5c06\u8be5\u51fd\u6570\u5b58\u50a8\u5728\u5904\u7406\u7a0b\u5e8f\u6570\u7ec4\u4e2d\u3002\u5f53\u7ebf\u7a0b\u6536\u5230\u4fe1\u53f7\u65f6\uff0c\u5b9e\u9645\u8c03\u7528\u7684\u51fd\u6570\u662fSignal_Handler()(\u5728\u7c7bUnix\u7cfb\u7edf\u4e0a\uff0c\u5b83\u88ab\u4f20\u9012\u7ed9sigaction()\u5e93\u51fd\u6570)\u3002\u5f53\u88ab\u8c03\u7528\u65f6\uff0cSignal_Handler()\u8bbe\u7f6e\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\uff0c\u544a\u77e5\u5fc5\u987b\u8c03\u7528\u4e0e\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u5bf9\u5e94\u7684\u5904\u7406\u7a0b\u5e8f\u6570\u7ec4\u4e2d\u7684\u51fd\u6570\u3002\u4e3b\u89e3\u8bd1\u5668\u7684\u4e3b\u7ebf\u7a0b\u4f1a\u5b9a\u671f\u8c03\u7528\u88ab\u89e6\u53d1\u7684\u5904\u7406\u7a0b\u5e8f\u3002\n\u6709\u6302\u8d77\u7684\u547c\u53eb\u8981\u547c\u53eb\u3002\u6302\u8d77\u8c03\u7528\u662f\u4e00\u79cd\u5141\u8bb8\u4ece\u4e3b\u7ebf\u7a0b\u8c03\u5ea6\u8981\u6267\u884c\u7684\u51fd\u6570\u7684\u673a\u5236\u3002\u6b64\u673a\u5236\u7531Python/C API\u901a\u8fc7Py_AddPendingCall()\u51fd\u6570\u516c\u5f00\u3002\n\u5c06\u5f15\u53d1\u5f02\u6b65\u5f02\u5e38\u3002\u5f02\u6b65\u5f02\u5e38\u662f\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8bbe\u7f6e\u7684\u6765\u81ea\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5f02\u5e38\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528\u7531Python/C API\u63d0\u4f9b\u7684PyThreadState_SetAsyncExc()\u51fd\u6570\u6765\u5b8c\u6210\u3002\n\u8bf7\u6c42\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u4e22\u5f03GIL\u3002\u5f53\u5b83\u770b\u5230\u8fd9\u6837\u7684\u8bf7\u6c42\u65f6\uff0c\u5b83\u4e22\u5f03GIL\u5e76\u7b49\u5f85\uff0c\u76f4\u5230\u5b83\u518d\u6b21\u83b7\u5f97GIL\u3002\nCPython\u4e3a\u8fd9\u4e9b\u4e8b\u4ef6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u63d0\u4f9b\u4e86\u6307\u793a\u5668\u3002\u6307\u793a\u5b58\u5728\u8981\u8c03\u7528\u7684\u5904\u7406\u7a0b\u5e8f\u7684\u53d8\u91cf\u662fRuntime-&gt\uff1bCval\u7684\u6210\u5458\uff0c\u5b83\u662f_Cval_Runtime_State\u7ed3\u6784\uff1a\nSTRUT_CAVAL_RUNTIME_STATE{/*\u68c0\u67e5\u4fe1\u53f7\u7684\u8bf7\u6c42\u3002\u5b83\u7531\u6240\u6709\u53e3\u8bd1\u5458\u5171\u4eab(\u89c1BPO-40513)\u3002\u4efb\u4f55\u89e3\u91ca\u5668\u7684\u4efb\u4f55\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u63a5\u6536\u4fe1\u53f7\uff0c\u4f46\u53ea\u6709\u4e3b\u89e3\u91ca\u5668\u7684\u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u5904\u7406\u4fe1\u53f7\uff1a\u8bf7\u53c2\u89c1_Py_ThreadCanHandleSignals()\u3002*/_Py_ATOM_INT Signals_Pending\uff1bStruct_Gil_Runtime_State Gil\uff1b}\uff1b\nSTRUT_CAVAL_STATE{int RECURSION_LIMIT\uff1b/*\u8bb0\u5f55\u662f\u5426\u5bf9\u4efb\u4f55\u7ebf\u7a0b\u542f\u7528\u8ddf\u8e2a\u3002\u7edf\u8ba1tstate-&gt\uff1bc_tracefunc\u4e3a\u975e\u7a7a\u7684\u7ebf\u7a0b\u6570\uff0c\u56e0\u6b64\u5982\u679c\u503c\u4e3a0\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u4e0d\u5fc5\u68c0\u67e5\u8be5\u7ebf\u7a0b\u7684c_tracefunc\u3002\u8fd9\u52a0\u5feb\u4e86FAST_NEXT_OPCODE\u4e4b\u540e\u7684_PyEval_EvalFrameDefault()\u4e2d\u7684if\u8bed\u53e5\u7684\u8fd0\u884c\u901f\u5ea6\u3002*/int Tracing_Possible\uff1b/*\u8fd9\u4e2a\u5355\u4e00\u53d8\u91cf\u5408\u5e76\u4e86\u6240\u6709\u8bf7\u6c42\uff0c\u4ee5\u4fbf\u5728val\u5faa\u73af\u4e2d\u8df3\u51fa\u5feb\u901f\u8def\u5f84\u3002*/_Py_ATOM_INT EVAL_BREAKER\uff1b/*\u4e22\u5f03GIL\u8bf7\u6c42*/_Py_ATOM_INT GIL_DROP_REQUEST\uff1bSTRUT_PENDING_CALLES PENDING\uff1b}\uff1b\n\u5bf9\u6240\u6709\u6307\u793a\u7b26\u8fdb\u884cOR\u8fd0\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u5728eval_Breaker\u53d8\u91cf\u4e2d\u3002\u5b83\u544a\u8bc9\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u662f\u5426\u6709\u4efb\u4f55\u7406\u7531\u505c\u6b62\u5176\u6b63\u5e38\u7684\u5b57\u8282\u7801\u6267\u884c\u3002\u8bc4\u4f30\u5faa\u73af\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3\u90fd\u4ee5\u68c0\u67e5eval_Breaker\u662f\u5426\u4e3a\u771f\u5f00\u59cb\u3002\u5982\u679c\u662f\u771f\u7684\uff0c\u7ebf\u7a0b\u68c0\u67e5\u6307\u793a\u7b26\u4ee5\u786e\u5b9a\u5b83\u5230\u5e95\u88ab\u8981\u6c42\u505a\u4ec0\u4e48\uff0c\u8fd9\u6837\u505a\u5e76\u7ee7\u7eed\u6267\u884c\u5b57\u8282\u7801\u3002\n\u6c42\u503c\u5faa\u73af\u7684\u4ee3\u7801\u5145\u6ee1\u4e86\u76ee\u6807()\u548c\u8c03\u5ea6()\u7b49\u5b8f\u3002\u8fd9\u4e9b\u4e0d\u662f\u4f7f\u4ee3\u7801\u66f4\u7d27\u51d1\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u53ef\u4ee5\u6269\u5c55\u5230\u4e0d\u540c\u7684\u4ee3\u7801\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u7279\u5b9a\u7684\u4f18\u5316\u662f\u5426\u8ba1\u7b97\u4e86Gotos(\u4e5f\u5c31\u662f\u3002\u4f7f\u7528&#34\uff1b\u7ebf\u7a0b\u4ee3\u7801&#34\uff1b)\u3002\u8fd9\u79cd\u4f18\u5316\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u6765\u52a0\u901f\u5b57\u8282\u7801\u7684\u6267\u884c\uff0c\u4ee5\u4fbfCPU\u53ef\u4ee5\u4f7f\u7528\u5176\u5206\u652f\u9884\u6d4b\u673a\u5236\u6765\u9884\u6d4b\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u7801\u3002\n\u5b83\u4ece\u6c42\u503c\u51fd\u6570\u8fd4\u56de\u3002\u8fd9\u5728VM\u6267\u884cRETURN_VALUE\u3001YIELD_VALUE\u6216YIELD_FROM\u6307\u4ee4\u65f6\u53d1\u751f\u3002\n\u5b83\u5904\u7406\u9519\u8bef\u5e76\u7ee7\u7eed\u6267\u884c\uff0c\u6216\u8005\u4ece\u5177\u6709\u5f02\u5e38\u96c6\u7684\u6c42\u503c\u51fd\u6570\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u5f53VM\u6267\u884cBINARY_ADD\u6307\u4ee4\uff0c\u800c\u8981\u6dfb\u52a0\u7684\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0__add__\u548c__radd__\u65b9\u6cd5\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8be5\u9519\u8bef\u3002\n\u5b83\u4f1a\u7ee7\u7eed\u6267\u884c\u6b7b\u5211\u3002\u5982\u4f55\u8ba9\u865a\u62df\u673a\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\uff1f\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7528Continue\u8bed\u53e5\u7ed3\u675f\u6bcf\u4e2a\u4e0d\u8fd4\u56de\u7684CASE\u5757\u3002\u771f\u6b63\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8270\u96be\u7684\uff0c\u8981\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u3002\n\u8981\u67e5\u770b\u7b80\u5355\u7684Continue\u8bed\u53e5\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3Switch\u7f16\u8bd1\u6210\u4ec0\u4e48\u3002\u64cd\u4f5c\u7801\u662f\u4ecb\u4e8e0\u548c255\u4e4b\u95f4\u7684\u6574\u6570\u3002\u56e0\u4e3a\u8303\u56f4\u5f88\u5bc6\u96c6\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8df3\u8f6c\u8868\u6765\u5b58\u50a8CASE\u5757\u7684\u5730\u5740\uff0c\u5e76\u4f7f\u7528\u64cd\u4f5c\u7801\u4f5c\u4e3a\u8be5\u8868\u7684\u7d22\u5f15\u3002\u73b0\u4ee3\u7684\u7f16\u8bd1\u5668\u786e\u5b9e\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\u7528\u4f8b\u7684\u5206\u6d3e\u88ab\u6709\u6548\u5730\u5b9e\u73b0\u4e3a\u5355\u4e2a\u95f4\u63a5\u8df3\u8f6c\u3002\u8fd9\u662f\u5b9e\u73b0\u4ea4\u6362\u673a\u7684\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u5c06Switch\u653e\u5728\u5faa\u73af\u4e2d\u5e76\u6dfb\u52a0Continue\u8bed\u53e5\u4f1a\u4ea7\u751f\u4e24\u4e2a\u6548\u7387\u4f4e\u4e0b\u7684\u95ee\u9898\uff1a\nCASE\u5757\u672b\u5c3e\u7684Continue\u8bed\u53e5\u6dfb\u52a0\u4e86\u53e6\u4e00\u4e2a\u8df3\u8f6c\u3002\u56e0\u6b64\uff0c\u8981\u6267\u884c\u64cd\u4f5c\u7801\uff0cVM\u5fc5\u987b\u8df3\u8f6c\u4e24\u6b21\uff1a\u8df3\u5230\u5faa\u73af\u7684\u5f00\u5934\uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e00\u4e2aCASE\u5757\u3002\n\u7531\u4e8e\u6240\u6709\u64cd\u4f5c\u7801\u90fd\u662f\u7531\u4e00\u6b21\u8df3\u8f6c\u8c03\u5ea6\u7684\uff0c\u56e0\u6b64CPU\u9884\u6d4b\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u7801\u7684\u673a\u4f1a\u5f88\u5c0f\u3002\u5b83\u6700\u591a\u53ea\u80fd\u9009\u62e9\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u7801\uff0c\u6216\u8005\u53ef\u80fd\u662f\u6700\u9891\u7e41\u7684\u64cd\u4f5c\u7801\u3002\n\u4f18\u5316\u7684\u60f3\u6cd5\u662f\u5728\u6bcf\u4e2a\u4e0d\u8fd4\u56de\u7684CASE\u5757\u7684\u672b\u5c3e\u653e\u7f6e\u4e00\u4e2a\u5355\u72ec\u7684\u5206\u6d3e\u8df3\u8f6c\u3002\u9996\u5148\uff0c\u5b83\u7701\u53bb\u4e86\u4e00\u6b21\u8df3\u8dc3\u3002\u5176\u6b21\uff0cCPU\u53ef\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u7801\u4f5c\u4e3a\u5f53\u524d\u64cd\u4f5c\u7801\u4e4b\u540e\u6700\u53ef\u80fd\u7684\u64cd\u4f5c\u7801\u3002\n\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u4f18\u5316\u3002\u8fd9\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u662f\u5426\u652f\u6301\u540d\u4e3a\u503c\u7684GCC C\u6269\u5c55\u6807\u7b7e\u3002\u542f\u7528\u4f18\u5316\u7684\u6548\u679c\u662f\uff0c\u67d0\u4e9b\u5b8f(\u5982Target()\u3001Dispatch()\u548cFAST_DISPATCH())\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c55\u5f00\u3002\u8fd9\u4e9b\u5b8f\u5728\u6c42\u503c\u5faa\u73af\u7684\u6574\u4e2a\u4ee3\u7801\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u3002\u6bcf\u4e2acase\u8868\u8fbe\u5f0f\u90fd\u6709\u4e00\u4e2a\u8868\u5355\u76ee\u6807(Op)\uff0c\u5176\u4e2dop\u662f\u8868\u793a\u64cd\u4f5c\u7801\u7684\u6574\u578b\u6587\u5b57\u7684\u5b8f\u3002\u6bcf\u4e2a\u4e0d\u8fd4\u56de\u7684\u6848\u4f8b\u5757\u90fd\u4ee5DISPATCH()\u6216FAST_DISPATCH()\u5b8f\u7ed3\u5c3e\u3002\u8ba9\u6211\u4eec\u5148\u6765\u770b\u770b\u5728\u7981\u7528\u4f18\u5316\u65f6\u8fd9\u4e9b\u5b8f\u5c06\u6269\u5c55\u5230\u54ea\u4e9b\u5730\u65b9\uff1a\n\u5bf9\u4e8e(\uff1b\uff1b){//...\u3002\u68c0\u67e5\u5b57\u8282\u7801\u6267\u884c\u662f\u5426\u5fc5\u987b\u6302\u8d77FAST_NEXT_OPCODE\uff1a//NEXTOPARG()MACRO_Py_CODEUNIT WORD=*NEXT_INSTR\uff1bOPCODE=_Py_OPCODE(Word)\uff1boparg=_Py_OPARG(Word)\uff1bNext_instr++\uff1bSwitch(OPCODE){//\u76ee\u6807(NOP)\u6269\u5c55\u4e3aNOP\u6848\u4f8bNOP\uff1a{GOTO FAST_NEXT_OPCODE\uff1b//FAST_DISPATCH()\u3002\u5927\u5c0f\u5199BINARY_MULPLY\uff1a{//...\u3002\u4e8c\u8fdb\u5236\u4e58\u6cd5\u4ee3\u7801\u7ee7\u7eed\uff1b//Dispatch()\u5b8f}//...}//...\u3002\u9519\u8bef\u5904\u7406}\u3002\n\u5f53\u4e0d\u5e0c\u671b\u5728\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7801\u540e\u6302\u8d77\u6c42\u503c\u5faa\u73af\u65f6\uff0cFAST_DISPATCH()\u5b8f\u7528\u4e8e\u8be5\u64cd\u4f5c\u7801\u3002\u5426\u5219\uff0c\u5b9e\u73b0\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002\n\u5982\u679c\u7f16\u8bd1\u5668\u652f\u6301\u5c06&#34\uff1b\u6807\u7b7e\u4f5c\u4e3a\u503c\u6269\u5c55\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6807\u7b7e\u4e0a\u4f7f\u7528\u4e00\u5143&amp\uff1b\u8fd0\u7b97\u7b26\u6765\u83b7\u53d6\u5176\u5730\u5740\u3002\u5b83\u7684\u503c\u7c7b\u578b\u4e3avoid*\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5b58\u50a8\u5728\u6307\u9488\u4e2d\uff1a\n\u6b64\u6269\u5c55\u5141\u8bb8\u5728C\u4e2d\u5c06\u8df3\u8f6c\u8868\u5b9e\u73b0\u4e3a\u6807\u7b7e\u6307\u9488\u6570\u7ec4\u3002\u8fd9\u5c31\u662fCPython\u6240\u505a\u7684\uff1a\n\u9759\u6001\u65e0\u6548*\u64cd\u4f5c\u7801_\u76ee\u6807[256]={&amp\uff1b&amp\uff1b_UNKNOWN_OPCODE\uff0c&amp\uff1b&amp\uff1bTARGET_POP_TOP\uff0c&amp\uff1b&amp\uff1bTARGET_ROT_Two\uff0c&amp\uff1b&amp\uff1bTARGET_ROT_Three\uff0c&amp\uff1bTARGET_DUP_TOP_TABLE\uff0c&amp\uff1b&amp\uff1bTARGET_ROT_Four\uff0c&amp\uff1b&amp\uff1b_UNKNOWN_OPCODE\uff0c&amp\uff1b&amp\uff1b_UNKNOWN_OPCODE\u3001&amp\uff1b&amp\uff1bTARGET_NOP\u3001&amp\uff1b&amp\uff1bTARGET_UNARY_PERIAL\u3001&amp\uff1b&TARGET_UNARY_NECTIVE\u3001&amp\uff1b&amp\uff1bTARGET_UNARY_NOT\u3001//...\u3002\u591a\u4e86\u51e0\u4e2a\u4eba\uff0c{##**$$}\u3002\n\u5bf9\u4e8e(\uff1b\uff1b){//...\u3002\u68c0\u67e5\u662f\u5426\u5fc5\u987b\u6302\u8d77\u5b57\u8282\u7801\u6267\u884cFAST_NEXT_OPCODE\uff1a//NEXTOPARG()MACRO_Py_CODEUNIT WORD=*NEXT_INSTR\uff1bOPCODE=_Py_OPCODE(Word)\uff1boparg=_Py_OPARG(Word)\uff1bNext_instr++\uff1bSwitch(OPCODE){//TARGET(NOP)Expand to NOP\uff1aTARGET_NOP\uff1a//TARGET_NOP\u662f\u6807\u7b7e\u6848\u4f8bNOP\uff1aTARGET_NOP\uff1a//TARGET_NOP\u3002F_LASTI=INSTR_OFFSET()\uff1bNEXTOPARG()\uff1bGOTO*OPCODE_TARGETS[\u64cd\u4f5c\u7801]\uff1b}//...\u3002CASE BINARY_MULPLY\uff1aTARGET_BINARY_MULPLY\uff1a{//...\u3002\u4e8c\u8fdb\u5236\u4e58\u6cd5//Dispatch()\u5b8f\u7684\u4ee3\u7801\uff0c\u5982\u679c(\uff01_Py_ATOM_LOAD_RELAX(Val_Breaker)){Fast_Dispatch()\uff1b}Continue\uff1b}//...}//...\u3002\u9519\u8bef\u5904\u7406}\u3002\n\u8be5\u6269\u5c55\u7531GCC\u548cClang\u7f16\u8bd1\u5668\u652f\u6301\u3002\u56e0\u6b64\uff0c\u5f53\u60a8\u8fd0\u884cpython\u65f6\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u542f\u7528\u4e86\u4f18\u5316\u3002\u5f53\u7136\uff0c\u95ee\u9898\u662f\u5b83\u5982\u4f55\u5f71\u54cd\u8868\u73b0\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u4f9d\u9760\u6e90\u4ee3\u7801\u4e2d\u7684\u8bc4\u8bba\uff1a\n\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u7ebf\u7a0b\u4ee3\u7801\u7248\u672c\u6bd4\u6b63\u5e38\u7684Switch\u7248\u672c\u5feb15%-20%\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u548cCPU\u67b6\u6784\u3002\n\u8fd9\u4e00\u8282\u5e94\u8be5\u8ba9\u6211\u4eec\u4e86\u89e3CPython VM\u5982\u4f55\u4ece\u4e00\u6761\u6307\u4ee4\u8f6c\u5230\u53e6\u4e00\u6761\u6307\u4ee4\uff0c\u4ee5\u53ca\u5b83\u5728\u8fd9\u4e24\u6761\u6307\u4ee4\u4e4b\u95f4\u53ef\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002\u4e0b\u4e00\u4e2a\u5408\u4e4e\u903b\u8f91\u7684\u6b65\u9aa4\u662f\u66f4\u6df1\u5165\u5730\u7814\u7a76VM\u5982\u4f55\u6267\u884c\u5355\u4e2a\u6307\u4ee4\u3002CPython3.9\u6709119\u4e2a\u4e0d\u540c\u7684\u64cd\u4f5c\u7801\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u7814\u7a76\u6bcf\u4e2a\u64cd\u4f5c\u7801\u7684\u5b9e\u73b0\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecdVM\u7528\u6765\u6267\u884c\u5b83\u4eec\u7684\u4e00\u822c\u539f\u5219\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5173\u4e8eCPython VM\u6700\u91cd\u8981\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e8b\u5b9e\u662f\u5b83\u662f\u57fa\u4e8e\u5806\u6808\u7684\u3002\u8fd9\u610f\u5473\u7740\u8981\u8fdb\u884c\u8ba1\u7b97\uff0cVM\u4f1a\u4ece\u5806\u6808\u4e2d\u5f39\u51fa(\u6216\u5077\u770b)\u503c\uff0c\u5bf9\u5b83\u4eec\u6267\u884c\u8ba1\u7b97\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u63a8\u56de\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a\nGET_ITER\u64cd\u4f5c\u7801\u4ece\u5806\u6808\u4e2d\u5f39\u51fa\u503c\uff0c\u5bf9\u5176\u8c03\u7528ITER()\u5e76\u63a8\u9001\u7ed3\u679c\u3002\nBINARY_ADD\u64cd\u4f5c\u7801\u4ece\u5806\u6808\u4e2d\u5f39\u51fa\u503c\uff0c\u4ece\u9876\u90e8\u67e5\u770b\u53e6\u4e00\u4e2a\u503c\uff0c\u5c06\u7b2c\u4e00\u4e2a\u503c\u4e0e\u7b2c\u4e8c\u4e2a\u503c\u76f8\u52a0\uff0c\u7136\u540e\u7528\u7ed3\u679c\u66ff\u6362\u9876\u90e8\u7684\u503c\u3002\n\u503c\u5806\u6808\u9a7b\u7559\u5728Frame\u5bf9\u8c61\u4e2d\u3002\u5b83\u662f\u4f5c\u4e3a\u540d\u4e3af_localplus\u7684\u6570\u7ec4\u7684\u4e00\u90e8\u5206\u5b9e\u73b0\u7684\u3002\u6570\u7ec4\u88ab\u5206\u6210\u51e0\u4e2a\u90e8\u5206\u6765\u5b58\u50a8\u4e0d\u540c\u7684\u5185\u5bb9\uff0c\u4f46\u53ea\u6709\u6700\u540e\u4e00\u90e8\u5206\u7528\u4e8e\u503c\u5806\u6808\u3002\u6b64\u90e8\u5206\u7684\u5f00\u59cb\u662f\u5806\u6808\u7684\u5e95\u90e8\u3002Frame\u5bf9\u8c61\u7684f_valuestack\u5b57\u6bb5\u6307\u5411\u5b83\u3002\u4e3a\u4e86\u5b9a\u4f4d\u5806\u6808\u9876\u90e8\uff0cCPython\u4fdd\u7559STACK_POINTER\u5c40\u90e8\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u6307\u5411\u5806\u6808\u9876\u90e8\u4e4b\u540e\u7684\u4e0b\u4e00\u4e2a\u69fd\u3002F_localplus\u6570\u7ec4\u7684\u5143\u7d20\u662f\u6307\u5411Python\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u800c\u6307\u5411Python\u5bf9\u8c61\u7684\u6307\u9488\u662fCPythonVM\u5b9e\u9645\u4f7f\u7528\u7684\u5bf9\u8c61\u3002\n\u5e76\u975e\u6240\u6709\u7531VM\u6267\u884c\u7684\u8ba1\u7b97\u90fd\u662f\u6210\u529f\u7684\u3002\u5047\u8bbe\u6211\u4eec\u5c1d\u8bd5\u5c06\u4e00\u4e2a\u6570\u5b57\u6dfb\u52a0\u5230\u4e00\u4e2a\u7c7b\u4f3c1+&#39\uff1b41&#39\uff1b\u7684\u5b57\u7b26\u4e32\u4e2d\u3002\u7f16\u8bd1\u5668\u751f\u6210BINARY_ADD\u64cd\u4f5c\u7801\u6765\u6dfb\u52a0\u4e24\u4e2a\u5bf9\u8c61\u3002\u5f53VM\u6267\u884c\u6b64\u64cd\u4f5c\u7801\u65f6\uff0c\u5b83\u4f1a\u8c03\u7528PyNumber_add()\u6765\u8ba1\u7b97\u7ed3\u679c\uff1a\n\u6848\u4f8b\u76ee\u6807(BINARY_ADD)\uff1a{PyObject*right=POP()\uff1bPyObject*Left=top()\uff1bPyObject*sum\uff1b//...\u3002\u5b57\u7b26\u4e32\u52a0\u6cd5SUM=PyNumber_ADD(\u5de6\u3001\u53f3)\uff1bPy_DECREF(\u5de6)\uff1bPy_DECREF(\u53f3)\uff1bSET_TOP(SUM)\uff1bIF(SUM==NULL)\u8f6c\u5230\u9519\u8bef\uff1bDispatch()\uff1b}\u3002\n\u73b0\u5728\u5bf9\u6211\u4eec\u6765\u8bf4\u91cd\u8981\u7684\u4e0d\u662f\u5982\u4f55\u5b9e\u73b0PyNumber_add()\uff0c\u800c\u662f\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\u8be5\u9519\u8bef\u610f\u5473\u7740\u4e24\u4ef6\u4e8b\uff1a\nPyNumber_add()\u5c06\u5f53\u524d\u5f02\u5e38\u8bbe\u7f6e\u4e3aTypeError\u5f02\u5e38\u3002\u8fd9\u6d89\u53ca\u5230\u8bbe\u7f6etstate-&gt\uff1bcurexc_type\u3001tstate-&gt\uff1bcurexc_value\u548ctstate-&gt\uff1bcurexc_traceback\u3002\nNULL\u662f\u9519\u8bef\u7684\u6307\u793a\u7b26\u3002\u865a\u62df\u673a\u770b\u5230\u5b83\u5e76\u8f6c\u5230\u8bc4\u4f30\u5faa\u73af\u672b\u5c3e\u7684\u9519\u8bef\u6807\u7b7e\u3002\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d6\u51b3\u4e8e\u6211\u4eec\u662f\u5426\u8bbe\u7f6e\u4e86\u4efb\u4f55\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219VM\u5230\u8fbeBreak\u8bed\u53e5\uff0c\u6c42\u503c\u51fd\u6570\u8fd4\u56deNULL\uff0c\u5e76\u5728\u7ebf\u7a0b\u72b6\u6001\u4e0a\u8bbe\u7f6e\u5f02\u5e38\u3002CPython\u6253\u5370\u5f02\u5e38\u7684\u8be6\u7ec6\u4fe1\u606f\u5e76\u9000\u51fa\u3002\u6211\u4eec\u5f97\u5230\u4e86\u9884\u671f\u7684\u7ed3\u679c\uff1a\n$python-c&#34\uff1b1+&#39\uff1b42&#39\uff1b&#34\uff1b\u56de\u6eaf(\u6700\u8fd1\u4e00\u6b21\u8c03\u7528)\uff1a\u6587\u4ef6&#34\uff1b&lt\uff1b\u5b57\u7b26\u4e32&&gt;#34\uff1b\uff0c\u7b2c1\u884c\uff0c&lt\uff1b\u6a21\u5757&&gt;\u7c7b\u578b\u9519\u8bef\uff1a+\uff1a&#39\uff1bint&#39\uff1b\u548c&#39\uff1bstr&#39\uff1b\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u3002\n\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u5c06\u76f8\u540c\u7684\u4ee3\u7801\u653e\u5728try-Finally\u8bed\u53e5\u7684try\u5b50\u53e5\u4e2d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cFinally\u5b50\u53e5\u4e2d\u7684\u4ee3\u7801\u4e5f\u4f1a\u88ab\u6267\u884c\uff1a\n$python-q&gt\uff1b&gt\uff1b\u5c1d\u8bd5\uff1a...1+#39\uff1b41&39\uff1b...\u3002\u6700\u540e\uff1a\u2026\u2026\u3002\u6253\u5370(&#39\uff1b\u563f\uff01&#39\uff1b)...\u3002\u563f\uff01\u56de\u6eaf(\u6700\u65b0\u547c\u53eb\u3002\n.", "note_en": "We started this series with  an overview of the CPython VM. We learned that to run a Python program, CPython first compiles it to bytecode, and we studied how the compiler works in  part two.  Last time we stepped through the CPython source code starting with the  main() function until we reached the evaluation loop, a place where Python bytecode gets executed. The main reason why we spent time studying these things was to prepare for the discussion that we start today. The goal of this discussion is to understand how CPython does what we tell it to do, that is, how it executes the bytecode to which the code we write compiles.\n Note: In this post I&#39;m referring to CPython 3.9. Some implementation details will certainly change as CPython evolves. I&#39;ll try to keep track of important changes and add update notes.\n  Let&#39;s briefly recall what we learned in the previous parts. We tell CPython what to do by writing Python code. The CPython VM, however, understands only Python bytecode. This is the job of the compiler to translate Python code to bytecode. The compiler stores bytecode in a code object, which is a structure that fully describes what a code block, like a module or a function, does. To execute a code object, CPython first creates a state of execution for it called a frame object. Then it passes a frame object to a frame evaluation function to perform the actual computation. The default frame evaluation function is  _PyEval_EvalFrameDefault() defined in  Python/ceval.c. This function implements the core of the CPython VM. Namely, it implements the logic for the execution of Python bytecode. So, this function is what we&#39;re going to study today.\n To understand how  _PyEval_EvalFrameDefault() works, it is crucial to have an idea of what its input, a frame object, is. A frame object is a Python object defined by the following C struct:\n // typedef struct _frame PyFrameObject; in other place struct  _frame  {  PyObject_VAR_HEAD  struct  _frame  * f_back ;  /* previous frame, or NULL */  PyCodeObject  * f_code ;  /* code segment */  PyObject  * f_builtins ;  /* builtin symbol table (PyDictObject) */  PyObject  * f_globals ;  /* global symbol table (PyDictObject) */  PyObject  * f_locals ;  /* local symbol table (any mapping) */  PyObject  ** f_valuestack ;  /* points after the last local */  /* Next free slot in f_valuestack. Frame creation sets to f_valuestack.  Frame evaluation usually NULLs it, but a frame that yields sets it  to the current stack top. */  PyObject  ** f_stacktop ;  PyObject  * f_trace ;  /* Trace function */  char  f_trace_lines ;  /* Emit per-line trace events? */  char  f_trace_opcodes ;  /* Emit per-opcode trace events? */  /* Borrowed reference to a generator, or NULL */  PyObject  * f_gen ;  int  f_lasti ;  /* Last instruction if called */  int  f_lineno ;  /* Current line number */  int  f_iblock ;  /* index in f_blockstack */  char  f_executing ;  /* whether the frame is still executing */  PyTryBlock  f_blockstack [ CO_MAXBLOCKS ];  /* for try and loop blocks */  PyObject  * f_localsplus [ 1 ];  /* locals+stack, dynamically sized */ };\n The  f_code field of a frame object points to a code object. A code object is also a Python object. Here&#39;s its definition:\n struct  PyCodeObject  {  PyObject_HEAD  int  co_argcount ;  /* #arguments, except *args */  int  co_posonlyargcount ;  /* #positional only arguments */  int  co_kwonlyargcount ;  /* #keyword only arguments */  int  co_nlocals ;  /* #local variables */  int  co_stacksize ;  /* #entries needed for evaluation stack */  int  co_flags ;  /* CO_..., see below */  int  co_firstlineno ;  /* first source line number */  PyObject  * co_code ;  /* instruction opcodes */  PyObject  * co_consts ;  /* list (constants used) */  PyObject  * co_names ;  /* list of strings (names used) */  PyObject  * co_varnames ;  /* tuple of strings (local variable names) */  PyObject  * co_freevars ;  /* tuple of strings (free variable names) */  PyObject  * co_cellvars ;  /* tuple of strings (cell variable names) */  /* The rest aren&#39;t used in either hash or comparisons, except for co_name,  used in both. This is done to preserve the name and line number  for tracebacks and debuggers; otherwise, constant de-duplication  would collapse identical functions/lambdas defined on different lines.  */  Py_ssize_t  * co_cell2arg ;  /* Maps cell vars which are arguments. */  PyObject  * co_filename ;  /* unicode (where it was loaded from) */  PyObject  * co_name ;  /* unicode (name, for reference) */  PyObject  * co_lnotab ;  /* string (encoding addr&lt;-&gt;lineno mapping) See  Objects/lnotab_notes.txt for details. */  void  * co_zombieframe ;  /* for optimization only (see frameobject.c) */  PyObject  * co_weakreflist ;  /* to support weakrefs to code objects */  /* Scratch space for extra data relating to the code object.  Type is a void* to keep the format private in codeobject.c to force  people to go through the proper APIs. */  void  * co_extra ;  /* Per opcodes just-in-time cache  *  * To reduce cache size, we use indirect mapping from opcode index to  * cache object:  * cache = co_opcache[co_opcache_map[next_instr - first_instr] - 1]  */  // co_opcache_map is indexed by (next_instr - first_instr).  // * 0 means there is no cache for this opcode.  // * n &gt; 0 means there is cache in co_opcache[n-1].  unsigned  char  * co_opcache_map ;  _PyOpcache  * co_opcache ;  int  co_opcache_flag ;  // used to determine when create a cache.  unsigned  char  co_opcache_size ;  // length of co_opcache. };\n The most important field of a code object is  co_code. It&#39;s a pointer to a Python bytes object representing the bytecode. The bytecode is a sequence of two-byte instructions: one byte for an opcode and one byte for an argument.\n Don&#39;t worry if some members of the above structures are still a mystery to you. We&#39;ll see what they are used for as we move forward in our attempt to understand how the CPython VM executes the bytecode.\n  The problem of executing Python bytecode may seem a no-brainer to you. Indeed, all the VM has to do is to iterate over the instructions and to act according to them. And this is what essentially  _PyEval_EvalFrameDefault() does. It contains an infinite  for (;;) loop that we refer to as the evaluation loop. Inside that loop there is a giant  switch statement over all possible opcodes. Each opcode has a corresponding  case block containing the code for executing that opcode. The bytecode is represented by an array of 16-bit unsigned integers, one integer per instruction. The VM keeps track of the next instruction to be executed using the  next_instr variable, which is a pointer to the array of instructions. At the start of each iteration of the evaluation loop, the VM calculates the next opcode and its argument by taking the least significant and the most significant byte of the next instruction respectively and increments  next_instr. The  _PyEval_EvalFrameDefault() function is nearly 3000 lines long, but its essence can be captured by the following simplified version:\n PyObject * _PyEval_EvalFrameDefault ( PyThreadState  * tstate ,  PyFrameObject  * f ,  int  throwflag ) {  // ... declarations and initialization of local variables  // ... macros definitions  // ... call depth handling  // ... code for tracing and profiling  for  (;;)  {  // ... check if the bytecode execution must be suspended,  // e.g. other thread requested the GIL  // NEXTOPARG() macro  _Py_CODEUNIT  word  =  * next_instr ;  // _Py_CODEUNIT is a typedef for uint16_t  opcode  =  _Py_OPCODE ( word );  oparg  =  _Py_OPARG ( word );  next_instr ++ ;  switch  ( opcode )  {  case  TARGET ( NOP )  {  FAST_DISPATCH ();  // more on this later  }  case  TARGET ( LOAD_FAST )  {  // ... code for loading local variable  }  // ... 117 more cases for every possible opcode  }  // ... error handling  }  // ... termination }\n To get a more realistic picture, let&#39;s discuss some of the omitted pieces in more detail.\n  From time to time, the currently running thread stops executing the bytecode to do something else or to do nothing. This can happen due to one of the four reasons:\n There are signals to handle. When you register a function as a signal handler using   signal.signal(), CPython stores this function in the array of handlers. The function that will actually be called when a thread receives a signal is  signal_handler() (it&#39;s passed to the   sigaction() library function on Unix-like systems). When called,  signal_handler() sets a boolean variable telling that the function in the array of handlers corresponding to the received signal has to be called. Periodically, the main thread of the main interpreter calls the tripped handlers.\n There are pending calls to call. Pending calls is a mechanism that allows to schedule a function to be executed from the main thread. This mechanism is exposed by the Python/C API via the   Py_AddPendingCall() function.\n The asynchronous exception is raised. The asynchronous exception is an exception set in one thread from another. This can be done using the   PyThreadState_SetAsyncExc() function provided by the Python/C API.\n The currently running thread is requested to drop the GIL. When it sees such a request, it drops the GIL and waits until it acquires the GIL again.\n CPython has indicators for each of these events. The variable indicating that there are handlers to call is a member of  runtime-&gt;ceval, which is a  _ceval_runtime_state struct:\n struct  _ceval_runtime_state  {  /* Request for checking signals. It is shared by all interpreters (see  bpo-40513). Any thread of any interpreter can receive a signal, but only  the main thread of the main interpreter can handle signals: see  _Py_ThreadCanHandleSignals(). */  _Py_atomic_int  signals_pending ;  struct  _gil_runtime_state  gil ; };\n  struct  _ceval_state  {  int  recursion_limit ;  /* Records whether tracing is on for any thread. Counts the number  of threads for which tstate-&gt;c_tracefunc is non-NULL, so if the  value is 0, we know we don&#39;t have to check this thread&#39;s  c_tracefunc. This speeds up the if statement in  _PyEval_EvalFrameDefault() after fast_next_opcode. */  int  tracing_possible ;  /* This single variable consolidates all requests to break out of  the fast path in the eval loop. */  _Py_atomic_int  eval_breaker ;  /* Request for dropping the GIL */  _Py_atomic_int  gil_drop_request ;  struct  _pending_calls  pending ; };\n The result of ORing all indicators together is stored in the  eval_breaker variable. It tells whether there is any reason for the currently running thread to stop its normal bytecode execution. Each iteration of the evaluation loop starts with the check whether  eval_breaker is true. If it is true, the thread checks the indicators to determine what exactly it is asked to do, does that and continues to execute the bytecode.\n  The code for the evaluation loop is full of macros such as  TARGET() and  DISPATCH(). These are not the means to make the code more compact. They expand to different code depending on whether the certain optimization, referred to as &#34;computed GOTOs&#34; (a.k.a. &#34;threaded code&#34;), is used. They goal of this optimization is to speed up the bytecode execution by writing code in such a way, so that a CPU can use its  branch prediction mechanism to predict the next opcode.\n  It returns from the evaluation function. This happens when the VM executes  RETURN_VALUE,  YIELD_VALUE or  YIELD_FROM instruction.\n It handles the error and either continues the execution or returns from the evaluation function with the exception set. The error can occur when, for example, the VM executes the  BINARY_ADD instruction and the objects to be added do not implement  __add__ and  __radd__ methods.\n It continues the execution. How to make the VM execute the next instruction? The simplest solution would be to end each non-returning  case block with the  continue statement. The real solution, tough, is a little bit more complicated.\n To see the problem with the simple  continue statement, we need to understand what  switch compiles to. An opcode is an integer between 0 and 255. Because the range is dense, the compiler can create a jump table that stores addresses of the  case blocks and use opcodes as indices into that table. The modern compilers indeed do that, so the dispatching of cases is effectively implemented as a single indirect jump. This is an efficient way to implement  switch. However, placing  switch inside the loop and adding  continue statements creates two inefficiencies:\n The  continue statement in the end of a  case block adds another jump. Thus, to execute an opcode, the VM has to jump twice: to the start of the loop and then to the next  case block.\n Since all opcodes are dispatched by a single jump, a CPU has a little chance of predicting the next opcode. The best it can do is to choose the last opcode or, possibly, the most frequent one.\n The idea of the optimization is to place a separate dispatch jump in the end of each non-returning  case block. First, it saves a jump. Second, a CPU can predict the next opcode as the most probable opcode following the current one.\n The optimization can be enabled or disabled. It depends on whether the compiler supports the GCC C extension called  &#34;labels as values&#34; or not. The effect of enabling the optimization is that the certain macros, such as  TARGET(),  DISPATCH() and  FAST_DISPATCH(), expand in different way. These macros are used extensively throughout the code of the evaluation loop. Every case expression has a form  TARGET(op), where  op is a macro for the integer literal representing an opcode. And every non-returning  case block ends with  DISPATCH() or  FAST_DISPATCH() macro. Let&#39;s first look at what these macros expand to when the optimization is disabled:\n for  (;;)  {  // ... check if the bytecode execution must be suspended fast_next_opcode :  // NEXTOPARG() macro  _Py_CODEUNIT  word  =  * next_instr ;  opcode  =  _Py_OPCODE ( word );  oparg  =  _Py_OPARG ( word );  next_instr ++ ;  switch  ( opcode )  {  // TARGET(NOP) expands to NOP  case  NOP :  {  goto  fast_next_opcode ;  // FAST_DISPATCH() macro  }  // ...  case  BINARY_MULTIPLY :  {  // ... code for binary multiplication  continue ;  // DISPATCH() macro  }  // ...  }  // ... error handling }\n The  FAST_DISPATCH() macro is used for some opcode when it&#39;s undesirable to suspend the evaluation loop after executing that opcode. Otherwise, the implementation is very straightforward.\n If the compiler supports &#34;labels as values&#34; extension, we can use the unary  &amp;&amp; operator on a label to get its address. It has a value of type  void *, so we can store it in a pointer:\n    This extension allows to implement a jump table in C as an array of label pointers. And that&#39;s what CPython does:\n static  void  * opcode_targets [ 256 ]  =  {  &amp;&amp; _unknown_opcode ,  &amp;&amp; TARGET_POP_TOP ,  &amp;&amp; TARGET_ROT_TWO ,  &amp;&amp; TARGET_ROT_THREE ,  &amp;&amp; TARGET_DUP_TOP ,  &amp;&amp; TARGET_DUP_TOP_TWO ,  &amp;&amp; TARGET_ROT_FOUR ,  &amp;&amp; _unknown_opcode ,  &amp;&amp; _unknown_opcode ,  &amp;&amp; TARGET_NOP ,  &amp;&amp; TARGET_UNARY_POSITIVE ,  &amp;&amp; TARGET_UNARY_NEGATIVE ,  &amp;&amp; TARGET_UNARY_NOT ,  // ... quite a few more };\n  for  (;;)  {  // ... check if the bytecode execution must be suspended fast_next_opcode :  // NEXTOPARG() macro  _Py_CODEUNIT  word  =  * next_instr ;  opcode  =  _Py_OPCODE ( word );  oparg  =  _Py_OPARG ( word );  next_instr ++ ;  switch  ( opcode )  {  // TARGET(NOP) expands to NOP: TARGET_NOP:  // TARGET_NOP is a label  case  NOP :  TARGET_NOP :  {  // FAST_DISPATCH() macro  // when tracing is disabled  f -&gt; f_lasti  =  INSTR_OFFSET ();  NEXTOPARG ();  goto  * opcode_targets [ opcode ];  }  // ...  case  BINARY_MULTIPLY :  TARGET_BINARY_MULTIPLY :  {  // ... code for binary multiplication  // DISPATCH() macro  if  ( ! _Py_atomic_load_relaxed ( eval_breaker ))  {  FAST_DISPATCH ();  }  continue ;  }  // ...  }  // ... error handling }\n The extension is supported by the GCC and Clang compilers. So, when you run  python, you probably have the optimization enabled. The question, of course, is how it affects the performance. Here, I&#39;ll rely on the comment from the source code:\n At the time of this writing, the &#34;threaded code&#34; version is up to 15-20% faster than the normal &#34;switch&#34; version, depending on the compiler and the CPU architecture.\n This section should give us an idea of how the CPython VM goes from one instruction to the next and what it may do in between. The next logical step is to study in more depth how the VM executes a single instruction. CPython 3.9 has  119 different opcodes. Of course, we&#39;re not going to study the implementation of each opcode in this post. Instead, we&#39;ll focus on the general principles that the VM uses to execute them.\n  The most important and, fortunately, very simple fact about the CPython VM is that it&#39;s stack-based. This means that to compute things, the VM pops (or peeks) values from the stack, performs the computation on them and pushes the result back. Here&#39;s some examples:\n The  GET_ITER opcode pops value from the stack, calls  iter() on it and pushes the result.\n The  BINARY_ADD opcode pops value from the stack, peeks another value from the top, adds the first value to the second and replaces the top value with the result.\n The value stack resides in a frame object. It&#39;s implemented as a part of the array called  f_localsplus. The array is split into several parts to store different things, but only the last part is used for the value stack. The start of this part is the bottom of the stack. The  f_valuestack field of a frame object points to it. To locate the top of the stack, CPython keeps the  stack_pointer local variable, which points to the next slot after the top of the stack. The elements of the  f_localsplus array are pointers to Python objects, and pointers to Python objects is what the CPython VM actually works with.\n  Not all computations performed by the VM are successful. Suppose we try to add a number to a string like  1 + &#39;41&#39;. The compiler produces the  BINARY_ADD opcode to add two objects. When the VM executes this opcode, it calls  PyNumber_Add() to calculate the result:\n case  TARGET ( BINARY_ADD ) :  {  PyObject  * right  =  POP ();  PyObject  * left  =  TOP ();  PyObject  * sum ;  // ... special case of string addition  sum  =  PyNumber_Add ( left ,  right );  Py_DECREF ( left );  Py_DECREF ( right );  SET_TOP ( sum );  if  ( sum  ==  NULL )  goto  error ;  DISPATCH (); }\n What&#39;s important for us now is not how  PyNumber_Add() is implemented, but that the call to it results in an error. The error means two things:\n PyNumber_Add() sets the current exception to the  TypeError exception. This involves setting  tstate-&gt;curexc_type,  tstate-&gt;curexc_value and  tstate-&gt;curexc_traceback.\n NULL is an indicator for an error. The VM sees it and goes to the  error label at the end of the evaluation loop. What happens next depends on whether we&#39;ve set up any exception handlers or not. If we haven&#39;t, the VM reaches the  break statement and the evaluation function returns  NULL with the exception set on the thread state. CPython prints the details of the exception and exits. We get the expected result:\n $ python -c &#34;1 + &#39;42&#39;&#34;Traceback (most recent call last): File &#34;&lt;string&gt;&#34;, line 1, in &lt;module&gt;TypeError: unsupported operand type(s) for +: &#39;int&#39; and &#39;str&#39;\n But suppose that we place the same code inside the  try clause of the  try-finally statement. In this case, the code inside the  finally clause is executed as well:\n $ python -q&gt;&gt;&gt; try:... 1 + &#39;41&#39;... finally:... print(&#39;Hey!&#39;)... Hey!Traceback (most recent cal\n......", "posttime": "2020-11-10 02:33:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,bytecode,pyobject", "title": "\u5982\u4f55\u6267\u884cPython\u5b57\u8282\u7801", "title_en": "How Python bytecode is executed", "transed": 1, "url": "https://tenthousandmeters.com/blog/python-behind-the-scenes-4-how-python-bytecode-is-executed/", "via": "", "real_tags": ["python", "bytecode", "pyobject"]}]
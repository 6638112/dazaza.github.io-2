[{"category": "", "categoryclass": "", "imagename": "f9a9a8495c0f13edc7cff2a3e45409e4.jpg", "infoid": 1066976, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6269\u5c55\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u6027\u80fd\u548c\u4ef7\u683c\u7684\u6700\u4f73\u7ec4\u5408\uff0c\u4ee5\u964d\u4f4e\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u7684\u6210\u672c\uff0c\u540c\u65f6\u63d0\u4f9b\u51fa\u8272\u7684\u7528\u6237\u4f53\u9a8c\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u5ba3\u5e03\u65b0\u7684\u865a\u62df\u673a\uff08VM\uff09Taug VMS\uff0c\u5373\u5c06\u5230\u6765\u8c37\u6b4c\u4e91\u3002 TAU VMS\u6269\u5c55Compute Engine\u7684VM\u4ea7\u54c1\uff0c\u5e76\u901a\u8fc7\u65b0\u7684\u9009\u9879\u8fdb\u884c\u4e86\u4f18\u5316\u7684\uff0c\u4ee5\u5b9e\u73b0\u7f29\u653e\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ecf\u6d4e\u9ad8\u6548\u6027\u80fd\u3002\n T2D\u662fTIAD VM\u7cfb\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u7c7b\u578b\uff0c\u662f\u57fa\u4e8e3RD Gen AMD EPYC TM\u5904\u7406\u5668\uff0c\u5e76\u5728\u7ee9\u6548\u548c\u5de5\u4f5c\u91cf\u603b\u4f53\u62e5\u6709\u6210\u672c\u65b9\u9762\u8de8\u8d8aVMS\u7684\u7f29\u653e\u5de5\u4f5c\u8d1f\u8f7d\u3002 \uff08TCO\uff09\u3002\u57fa\u4e8eAMD EPYC\u5904\u7406\u5668\u7684VM\u63d0\u4f9b\u7684X86\u517c\u5bb9\u6027\u4e3a\u60a8\u63d0\u4f9b\u5e02\u573a\u9886\u5148\u7684\u6027\u80fd\u6539\u8fdb\u548c\u6210\u672c\u8282\u7701\uff0c\u800c\u65e0\u9700\u5c06\u5e94\u7528\u7a0b\u5e8f\u79fb\u690d\u5230\u65b0\u7684\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\u3002\n \u5982\u4e0b\u6240\u793a\uff0cTAU VMS\u63d0\u4f9b56\uff05\u7684\u7edd\u5bf9\u6027\u80fd\u548c42\uff05\u7684\u4ef7\u683c - \u6027\u80fd\uff08EST.Spectrate2017_Int_Base\uff09\u4e0e\u6765\u81ea\u4efb\u4f55\u9886\u5148\u7684\u516c\u5171\u4e91\u4f9b\u5e94\u5546\u7684\u901a\u7528VM\u76f8\u6bd4\u3002\n    Snap\u201c\u5728Snap\u4e2d\uff0c\u6211\u4eec\u7684\u4f01\u4e1a\u5c06\u7ee7\u7eed\u6539\u8fdb\u6211\u4eec\u7684\u7f29\u653e\u8ba1\u7b97\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u83b7\u5f97AR\uff0c\u955c\u5934\uff0c\u805a\u5149\u706f\u548c\u5730\u56fe\u7b49\u5173\u952eSnapchat\u529f\u80fd\uff0c\u201dCody Powell\uff0cSnap Inc.\u201c\u6211\u4eec\u88ab\u5370\u8c61\u6df1\u523b\u6211\u4eec\u7528Google Kubernetes\u5f15\u64ce\u6d4b\u8bd5\u4e86Google Cloud\u7684\u65b0Tau VM\u3002\u867d\u7136\u5b83\uff06\uff0339;\u65e9\u671f\uff0c\u6211\u4eec\u76f8\u4fe1\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u57fa\u7840\u8bbe\u65bd\u6027\u80fd\u6539\u8fdb\u7684\u4e24\u4f4d\u6570\uff0c\u4ee5\u4fbf\u6211\u4eec\u901a\u8fc7\u8f83\u5c11\uff0c\u4e3a\u6211\u4eec\u7684\u60ca\u4eba\u7684Snapchat\u793e\u533a\u63d0\u4f9b\u66f4\u591a\u7684\u65b0\u529f\u80fd\u3002\uff06\uff0334;\n Twitter\uff06\uff0334;\u5728\u6b63\u786e\u7684\u4ef7\u683c\u70b9\u7684\u9ad8\u6027\u80fd\u662f\u6211\u4eec\u52aa\u529b\u670d\u52a1\u5168\u7403\u516c\u5171\u4ea4\u8c08\u7684\u5173\u952e\u8003\u8651\u56e0\u7d20\uff0c\u800c\uff0334;\u8bf4\u5c3c\u514b\u00b7\u6cf0\u8bfa\uff0c\u5e73\u53f0\u94c5\uff0c\u63a8\u7279\u3002 \u201c\u6211\u4eec\u88ab\u521d\u59cb\u6d4b\u8bd5\u5174\u594b\uff0c\u663e\u793a\u4e86\u4e24\u4f4d\u6570\u6027\u80fd\u6539\u8fdb\u7684\u6f5c\u529b\u3002\u6211\u4eec\u6b63\u5728\u4e0eGoogle Cloud\u8fdb\u884c\u5408\u4f5c\uff0c\u66f4\u6df1\u5165\u5730\u8bc4\u4f30\u4ef7\u683c\u548c\u6027\u80fd\u7684\u4f18\u60e0\uff0c\u4ee5\u4fbf\u901a\u8fc7\u4f7f\u7528\u65b0\u7684Tau VM\u7cfb\u5217\u6765\u5b9e\u73b0\u3002\u201c\n DOIT\uff06\uff0334; DOIT International yoav Toussia-Cohen\u8bf4\uff0c\u4e0e\u4e3b\u8981\u4e91\u4f9b\u5e94\u5546\u7684\u5a5a\u793c\u4f9b\u5e94\u5546\u8fdb\u884c\u4e86\u878d\u5408\u7684\u4e91\u5382\u5546\u3002\u201c \u201c\u5728\u6211\u4eec\u5bf9\u5e26\u6709Coremark\u57fa\u51c6\u7684\u8c37\u6b4c\u7684\u65b0TAU VMS\u521d\u6b65\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5f88\u6fc0\u70c8\u5730\u770b\u5230\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\uff0c\u6bd4\u53e6\u4e00\u4e2a\u9886\u5148\u7684\u516c\u5171\u4e91\u7684\u6bd4\u8f83\u96c4\u6027\u7684\u53d1\u552e\u66f4\u597d\u5730\u770b\u5230\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\u3002\u4f7f\u7528TAU VMS\uff0cGoogle Cloud\u5df2\u4e3a\u4ef7\u683c\u6027\u80fd\u8bbe\u7f6e\u65b0\u680f\uff0c\u4f7f\u4e91\u66f4\u80fd\u8bbf\u95ee\u6570\u5b57\u6bcd\u8bed\u516c\u53f8\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u591f\u5c06\u8c37\u6b4c\u7684Tau VM\u5e26\u5230\u6211\u4eec\u7684\u8054\u5408\u5ba2\u6237\u3002\uff06\uff0334;\n  TAU VMS\u4e3a\u8c37\u6b4c\u7684\u957f\u671f\u4f53\u9a8c\u5de5\u7a0b\u5e73\u53f0\u5e26\u6765\u4e86\u5bbd\u5bb9\u6027\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7ed9\u6211\u4eec\u7684\u5ba2\u6237\u3002\u5b83\u4eec\u4ee5\u591a\u79cd\u9884\u5b9a\u4e49\u7684VM\u5f62\u72b6\uff0c\u6bcfVM\u6700\u591a60Vcpus\uff0c\u6bcf\u4e2aVCPU\u4e3a4GB\u5185\u5b58\u3002\u5b83\u4eec\u63d0\u4f9b\u9ad8\u8fbe32 Gbps\u7684\u7f51\u7edc\u5e26\u5bbd\u548c\u5404\u79cd\u7f51\u7edc\u8fde\u63a5\u5b58\u50a8\u9009\u9879\uff0c\u4f7fTAU VMS\u9002\u7528\u4e8e\u6269\u5c55\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5305\u62ecWeb\u670d\u52a1\u5668\uff0c\u96c6\u88c5\u7bb1\u5fae\u670d\u52a1\uff0c\u6570\u636e\u8bb0\u5f55\u5904\u7406\uff0c\u5a92\u4f53\u8f6c\u7801\u548c\u5927\u578bJava\u5e94\u7528\u7a0b\u5e8f\u3002 \nGoogle Kubernetes Engine\uff08GKE\uff09\u662f\u5bfb\u627e\u9ad8\u7ea7\u5bb9\u5668\u7f16\u6392\u7684\u7ec4\u7ec7\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u63d0\u4f9b\u6700\u9ad8\u7ea7\u522b\u7684\u53ef\u9760\u6027\uff0c\u5b89\u5168\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 GKE\u5728\u7b2c1\u5929\u652f\u6301TAU VM\uff0c\u5e2e\u52a9\u60a8\u4f18\u5316\u6ee1\u8db3\u60a8\u7684Containized\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4ef7\u683c\u6027\u80fd\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u5728GKE\u8282\u70b9\u6c60\u4e2d\u6307\u5b9aT2D\u673a\u5668\u7c7b\u578b\u5c06TAU VM\u6dfb\u52a0\u5230GKE\u7fa4\u96c6\u3002  TAU VMS\u5c06\u88ab\u5b9a\u4ef7\uff0c\u4ee5\u652f\u6301\u4e91\u5e94\u7528\u7a0b\u5e8f\u7684\u663e\u7740TCO\u548c\u4ef7\u683c\u6027\u80fd\u6539\u8fdb\u3002 32VCPU VM\uff0c\u5e26128GB RAM\u768432VCPU VM\u5c06\u4ee51.3520\u7f8e\u5143\u7684\u4ef7\u683c\u4e3a\u6bcf\u5c0f\u65f6$ 1.3520\uff0c\u4ee5\u4fbf\u5728US-Central1\u4e2d\u6309\u9700\u4f7f\u7528\u3002  \u5982\u679c\u60a8\u6709\u5174\u8da3\u5728Q3 2021\u5728Q3 2021\u83b7\u5f97\u65f6\u5c1d\u8bd5T2D VM\uff0c\u8bf7\u5728\u6b64\u5904\u6ce8\u518c\u3002 ", "note_en": "Scale-out workloads demand the best combination of performance and price to bring down the cost of delivering applications, all while providing an excellent user experience. We are excited to announce a new virtual machine (VM) family,  Tau VMs, coming to Google Cloud. Tau VMs extend  Compute Engine\u2019s VM offerings with a new option optimized for cost-effective performance of scale-out workloads.\n T2D, the first instance type in the Tau VM family, is based on 3rd Gen AMD EPYC TM processors and leapfrogs the VMs for scale-out workloads of any leading public cloud provider available today, both in terms of performance and workload total cost of ownership (TCO). The x86 compatibility provided by these AMD EPYC processor-based VMs gives you market-leading performance improvements and cost savings, without having to port your applications to a new processor architecture.\n As illustrated below, Tau VMs offer 56% higher absolute performance and 42% higher price-performance (est. SPECrate2017_int_base) compared to general-purpose VMs from any of the leading public cloud vendors.\n    Snap \u201cAt Snap, it is critical for our business to continue improving our scale-out compute infrastructure for key Snapchat capabilities like AR, Lenses, Spotlight and Maps,\u201d said Cody Powell, Senior Engineering Manager, Snap Inc. \u201cWe were impressed when we tested Google Cloud\u2019s new Tau VMs with Google Kubernetes Engine. While it&#39;s early days, we believe we can gain double digits in infrastructure performance improvements for key workloads\u2014enabling us to do more with less and invest even more in new features for our amazing Snapchat community.&#34;\n Twitter &#34;High performance at the right price point is a critical consideration as we work to serve the global public conversation,&#34; said Nick Tornow, Platform Lead, Twitter. \u201cWe are excited by initial tests that show potential for double digit performance improvement. We are collaborating with Google Cloud to more deeply evaluate benefits on price and performance for specific compute workloads that we can realize through use of the new Tau VM family.\u201d\n DoiT &#34;DoiT partners with leading cloud vendors who are focused on growth and cost optimization,\u201d said Yoav Toussia-Cohen, CEO,  DoiT International. \u201cIn our preliminary testing of Google\u2019s new Tau VMs with the Coremark benchmark, we were thrilled to see the incredible performance at 50% better than a comparable ARM-based offering from another leading public cloud. With Tau VMs, Google Cloud has set a new bar for price-performance, making the cloud even more accessible to digital-native companies. We are excited to bring Google\u2019s Tau VMs to our joint customers.&#34;\n  Tau VMs bring the benefit of Google\u2019s long-standing experience engineering platforms for scale-out workloads to our customers. They come in multiple predefined VM shapes, with up to 60vCPUs per VM, and 4GB of memory per vCPU. They offer up to 32 Gbps networking bandwidth and a wide range of network attached storage options, making Tau VMs ideal for scale-out workloads including web servers, containerized microservices, data-logging processing, media transcoding, and large-scale Java applications.\n  Google Kubernetes Engine (GKE) is the de facto standard for organizations looking for advanced container orchestration, delivering the highest levels of reliability, security, and scalability. GKE supports Tau VMs on day 1, helping you optimize price-performance for your containerized workloads. You can add Tau VMs to your GKE clusters by specifying the T2D machine type in your  GKE node-pools.\n  Tau VMs will be priced to support significant TCO and price-performance improvements for your cloud applications. A 32vCPU VM with 128GB RAM will be priced at $1.3520 per hour for on-demand usage in us-central1.\n  If you are interested in trying out T2D VMs when they become available in Q3 2021 please sign-up  here.", "posttime": "2021-06-20 12:28:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,vms,vm", "title": "\u65b0\u7684TAU VMS\u4e3a\u6269\u5c55\u5de5\u4f5c\u8d1f\u8f7d\u63d0\u4f9b\u524d\u77bb\u6027\u6027\u80fd ", "title_en": "New Tau VMs deliver leading price-performance for scale-out workloads", "transed": 1, "url": "https://cloud.google.com/blog/products/compute/google-cloud-introduces-tau-vms", "via": "", "real_tags": ["\u6027\u80fd", "vms", "vm"]}, {"category": "", "categoryclass": "", "imagename": "04c7085958dc06d2dbdcb891a42d2694.jpg", "infoid": 1066975, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684SQLite-Utils Memory\u547d\u4ee4\u53ef\u4ee5\u5c06CSV\u548cJSON\u6570\u636e\u76f4\u63a5\u5bfc\u5165\u5185\u5b58\u7684SQLite Datbase\uff0c\u4f7f\u7528SQL\u7ec4\u5408\u548c\u67e5\u8be2\u5b83\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u4e3aCSV\uff0cJSON\u6216\u5404\u79cd\u5176\u4ed6\u683c\u5f0f\u7684\u7eaf\u6587\u672c\u8868\u3002\n   \u6211\u5f55\u5236\u4e86\u8fd9\u4e2a\u89c6\u9891\u6f14\u793a\u4e86\u65b0\u529f\u80fd - \u5728\u4e0b\u9762\u7684\u5b8c\u6574\u4f34\u594f\u7b14\u8bb0\u3002\n SQLite-utils\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06CSV\u548cJSON\u6570\u636e\u5bfc\u5165SQLite-Utils Insert\u547d\u4ee4\u7684SQLite\u6570\u636e\u5e93\u6587\u4ef6\u7684\u673a\u5236\u3002\u4f7f\u7528\u6b64\u5904\u7406\u6570\u636e\u6d89\u53ca\u4e24\u4e2a\u6b65\u9aa4\uff1a\u9996\u5148\u5c06\u5176\u5bfc\u5165TEMP.DB\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528SQLite-Utils\u67e5\u8be2\u8fd0\u884c\u67e5\u8be2\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\n \u4f7f\u7528SQL\u91cd\u65b0\u5f62\u72b6\u6570\u636e\u771f\u5b9e\u6709\u7528 - \u7531\u4e8eSQLite-Utils\u53ef\u4ee5\u4ee5\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\u8f93\u51fa\uff0c\u6211\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u5728CSV\u6587\u4ef6\u4e2d\u52a0\u8f7d\u5e76\u5c06\u5176\u9000\u56de\u4e3aJSON\uff0c\u6216\u53cd\u4e4b\u4ea6\u7136\u3002\n \u672c\u5468\u6211\u610f\u8bc6\u5230\u6211\u6709\u5927\u90e8\u5206\u7684\u4f5c\u54c1\u6765\u51cf\u5c11\u8fd9\u4e00\u6b65\u3002\u65b0\u7684SQLite-utils Memory\u547d\u4ee4\uff08\u6b64\u5904\u5b8c\u6574\u6587\u6863\uff09\u9488\u5bf9\u4e34\u65f6\u5185\u5b58\u7684SQLite\u6570\u636e\u5e93\u8fd0\u884c\u3002\u5b83\u53ef\u4ee5\u5bfc\u5165\u6570\u636e\uff0c\u6267\u884cSQL\u5e76\u8f93\u51fa\u4e00\u4e2a\u886c\u57ab\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u9700\u8981\u6cbf\u9014\u7684\u4efb\u4f55\u4e34\u65f6\u6570\u636e\u5e93\u6587\u4ef6\u3002\n \u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u6211\u7684dogsheep github\u7ec4\u7ec7\u6709\u5f88\u591a\u5b58\u50a8\u5e93\u3002 github\u901a\u8fc7https://api.github.com/users/dogshep/repos at authentication-\u53ef\u9009\u7684api\u7aef\u70b9\u6765\u5236\u4f5c\u90a3\u4e9b\u53ef\u7528\u7684\u90a3\u4e9b\uff0c\u5b83\u8fd4\u56de\u770b\u8d77\u6765\u50cf\u8fd9\u6837\u7684json\uff08\u7b80\u4f53\uff09\uff1a\n [{\uff06\uff0334; id\uff06\uff0334 ;: 197431109\uff0c\uff06\uff0334;\u540d\u79f0\uff06\uff0334 ;:\uff06\uff0334; dogsheep-beta\uff06\uff0334 ;,\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; Dogsheep / Dogsheep-beta\uff06\uff0334 ;,\uff06\uff0334; size\uff06\uff0334 ;:61\uff0c\uff06\uff0334; stargazers_count\uff06\uff0334 ;:79\uff0c\uff06\uff0334; thepers_count\uff06\uff0334 ;:79\uff0c\uff06\uff0334;\u53c9\u5b50\uff06\uff0334 ;: 0\uff0c\uff06\uff0334; open_issues\uff06\uff0334 ;:11}\uff0c{\uff06\uff0334; id\uff06\uff0334 ;: 256834907\uff0c\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; dogsheep-\u7167\u7247\uff06\uff0334;\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / dogsheep-photos\uff06\uff0334 ;,\uff06\uff0334; size\uff06\uff0334 ;: 64\uff0c\uff06\uff0334; stargazers_count\uff06\uff0334 ; 116\uff0c\uff06\uff0334;\u770b\u770b\u8005_Count\uff06\uff0334 ;:116\uff0c\uff06\uff0334;\u53c9\u5b50\uff06\uff0334 ;: 5\uff0c\uff06\uff0334; Open_issues\uff06\uff0334 ;:18}] \n\u4f7f\u7528SQLite-Utils Memory\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd93\u4e2a\u6700\u53d7\u6b22\u8fce\u7684Repos\u6309\u50cf\u8fd9\u6837\u7684\u661f\u661f\u6570\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; -tifull_name forks_count stars ------------------------------------- Dogsheep / Twitter-to-sqlite 12 225dogsheep / github-to-sqlite 14 139dogsheep / dogsheep-photos 5 116\n \u6211\u4eec\u6b63\u5728\u4f7f\u7528CURL\u5c06JSON\u83b7\u53d6\uff0c\u5e76\u5c06\u5176\u7ba1\u9053\u8fdb\u5165SQLite-Utils Memory-The-Meary\u201c\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u201d\u3002\u7136\u540e\u6211\u4eec\u901a\u8fc7\u4ee5\u4e0bSQL\u67e5\u8be2\uff1a\n  STDIN\u662f\u4e3a\u5de5\u5177\u4e2d\u7684\u6570\u636e\u63d0\u4f9b\u7684\u6570\u636e\u521b\u5efa\u7684\u4e34\u65f6\u8868\u3002\u67e5\u8be2\u9009\u62e9\u4e86\u4e09\u4e2aJSON\u5c5e\u6027\uff0c\u5c06Stargazers_Count\u91cd\u65b0\u521b\u5efa\u5230\u660e\u661f\uff0c\u6309\u661f\u7ea7\u6392\u5e8f\u5e76\u8fd4\u56de\u524d\u4e09\u4e2a\u3002\n \u8fd9\u91cc\u7684-t\u9009\u9879\u610f\u5473\u7740\u201c\u4f5c\u4e3a\u683c\u5f0f\u5316\u8868\u7684\u8f93\u51fa\u201d - \u6211\u4eec\u83b7\u53d6json\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; [{\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / twitter-to-sqlite\uff06\uff0334;\uff06\uff0334; forks_count\uff06\uff0334 ;: 12\uff0c\uff06\uff0334;\u661f\u661f\uff06\uff0334;\uff1a225}\uff0c{ \uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / github-to-sqlite\uff06\uff0334 ;,\uff06\uff0334; forks_count\uff06\uff0334 ;:14\uff0c\uff0334;\u661f\u661f\uff06\uff0334;\uff1a139}\uff0c{\uff06\uff03 34; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / dogsheep-photos\uff06\uff0334;\uff06\uff0334; forks_count\uff06\uff0334 ;: 5\uff0c\uff06\uff0334;\u661f\u661f\uff06\uff0334;\uff1a116}]\n  $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; --csvfull_name\uff0cforks_count\uff0cstarsdogsheep / twitter-to-sqlite\uff0c12,225dogsheep / github-to-sqlite\uff0c14,139dogsheep / dogsheep-photos\uff0c5,116 \n-t\u9009\u9879\u652f\u6301\u4f7f\u7528--fmt\u6307\u5b9a\u7684\u8bb8\u591a\u4e0d\u540c\u683c\u5f0f\u3002\u5982\u679c\u6211\u60f3\u901a\u8fc7\u661f\u661f\u751f\u6210\u9876\u90e8Reos\u7684\u4e73\u80f6\u8868\uff0c\u6211\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; -t --fmt = laTex \\ begin {\u8868\u683c} {lrr} \\ hline full \\ _name\uff06amp; forks \\ _count\uff06amp;\u661f\u661f\\\\\\ hine dogsheep / twitter-to-sqlite\uff06amp; 12\uff06amp; 225 \\\\ dogsheep / github-to-sqlite\uff06amp; 14\uff06amp; 139 \\\\ dogsheep / dogsheep-photos\uff06amp; 5\uff06amp; 116 \\\\\\ hline \\\u7ed3\u675f{\u8868\u683c}\n \u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd0\u884c\u805a\u5408\u67e5\u8be2 - \u8ba9\u6211\u4eec\u5728\u6240\u6709\u5b58\u50a8\u5e93\u4e2d\u6dfb\u52a0\u603b\u4f53\u5927\u5c0f\u548c\u661f\u6570\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u4eceStdin\uff06\uff0339\u9009\u62e9sum\uff08size\uff09\uff0csum\uff08stargazers_count\uff09; -t sum\uff08size\uff09sum\uff08stargazers_count\uff09----------- ---------------------843 934\n \uff08\u6211\u8ba4\u4e3a\u8fd9\u91cc\u7684\u5c3a\u5bf8\u662f\u4ee5\u5343\u5b57\u8282\u6d4b\u91cf\u7684\uff1aGitHub API\u6587\u6863\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e0d\u6e05\u695a\u3002\uff09\n  \u6240\u6709\u8fd9\u4e9b\u793a\u4f8b\u90fd\u4f7f\u7528JSON\u6570\u636e\u5904\u7406\u5230\u5de5\u5177\u4e2d - \u4f46\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5141\u8bb8\u60a8\u5bf9\u5176\u6267\u884c\u8fde\u63a5\u7684\u65b9\u5f0f\u4f20\u9012\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u683c\u5f0f\u7684\u6587\u4ef6\u3002\n  \u7ebd\u7ea6\u65f6\u62a5\u901a\u8fc7\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5728Covid\u6848\u4ef6\u548c\u6b7b\u4ea1\u4e2d\u53d1\u5e03\u4e86\u7f8e\u56fd\u7684\u7f8e\u56fd\u9648\u8ff0\u3002 \nCDC\u6709\u4e00\u4e2a\u672a\u8bb0\u5f55\u7684JSON\u7aef\u70b9\uff08\u6211\u5728\u8fd9\u91cc\u5f52\u6863\uff09\u8ddf\u8e2a\u4e0d\u540c\u72b6\u6001\u75ab\u82d7\u63a5\u79cd\u7684\u8fdb\u5c55\u60c5\u51b5\u3002\n \u6211\u4eec\u5c06\u4ece\u8be5CSV\u6570\u636e\u5230\u8be5JSON\u6570\u636e\u8fd0\u884c\u52a0\u5165\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u8868\u3002\n \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u6587\u4ef6\u3002\u4e3a\u4e86\u6211\u4eec\u7684\u76ee\u7684\uff0cCDC JSON\u6570\u636e\u5e76\u4e0d\u662f\u6b63\u786e\u7684\u5f62\u72b6\uff1a\n  sqlite-utils\u9884\u671f\u4e00\u4e2a\u5e73\u5766\u7684json armet\u5bf9\u8c61 - \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528JQ\u91cd\u65b0\u5851\u9020\u6570\u636e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n    \u65e2\u7136\u6211\u4eec\u5728\u672c\u5730\u62e5\u6709\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c\u8fde\u63a5\u4ee5\u5c06\u5176\u7ec4\u5408\uff1a\n $ sqlite-utils memory us-solual.csv vaccination_data.json\uff06\uff0334;\u4eceT1\u52a0\u5165T2\u4e0a\u9009\u62e9max\uff08t1.date\uff09\uff0ct1.state\uff0ct1.cases\uff0ct1.dearts\uff0ct2.census2019\uff0ct2.dist_per_100k\u5728t1.state = replace\uff08t2.longname\uff0c\uff06\uff0339;\u7ebd\u7ea6\u5dde\uff06\uff0339; 39;\uff0c\uff06\uff0339;\u7ebd\u7ea6\uff06\uff0339;\uff09\u7531t1\u7ec4\u7ec4.State Order by dist_per_100k desc\uff06\uff0334; -tmax\uff08t1.date\uff09\u5dde\u75c5\u4f8b\u6b7b\u4ea1\u4eba\u53e3\u666e\u67e52019 dist_per_100k ----------------------------------- ------- -------- ------------------------2021-06-18\u54e5\u4f26\u6bd4\u4e9a49243 1141 705749 1492482021-06-18\u4f5b\u8499\u7279\u5dde24360 256 623989 1462572021-06-18\u7f57\u5fb7\u5c9b152383 2724\u4e2a1059361\u4e2a1412912021-06-18\u9a6c\u8428\u8bf8\u585e709263 17960 6892503 1396922021-06-18\u9a6c\u91cc\u5170461852 9703 6045680 1381932021-06-18\u7f05\u56e0\u5dde68753 854 1344212 1368942021 -06-18\u590f\u5a01\u593735903 507 1415872 136024 ...\n \u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u81ea\u52a8\u521b\u5efa\u6570\u5b57\u522b\u540dT1\u548cT2\uff0c\u4f46\u6211\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u7684\u5b8c\u6574\u8868\u59d3\u540d\u548c\uff0334;\u7f8e\u56fd\u56fd\u5bb6\uff06\uff0334; \uff08\u7531\u4e8e\u8fde\u5b57\u7b26\u6240\u9700\u7684\u5f15\u53f7\uff09\u548cVaccination_data\u4ee3\u66ff\u3002 \nreplace\uff08\uff09\u64cd\u4f5c\u9700\u8981\uff0c\u56e0\u4e3avaccination_data.json\u6587\u4ef6\u8c03\u7528\u7ebd\u7ea6\u201c\u7ebd\u7ea6\u72b6\u6001\u201d\uff0c\u800c\u7f8e\u56fd\u9648\u8ff0.CSV\u6587\u4ef6\u53ea\u9700\u79f0\u4e4b\u4e3a\u201c\u7ebd\u7ea6\u201d\u3002\n max\uff08t1.date\uff09\u548ct1\u7ec4.state\u662f\u4e00\u4e2a\u6709\u7528\u7684sqlite\u6280\u5de7\uff1a\u5982\u679c\u6267\u884c\u4e00\u4e2a\u7ec4\uff0c\u7136\u540e\u8be2\u95ee\u503c\u7684max\uff08\uff09\uff0c\u5219\u4ece\u8be5\u8868\u8fd4\u56de\u7684\u5176\u4ed6\u5217\u5c06\u662f\u5217\u7684\u5217\u5305\u542b\u6700\u5927\u503c\u7684\u884c\u3002\n \u8fd9\u4e2a\u6f14\u793a\u662f\u4e00\u4e2a\u5ef6\u4f38\u7684\u4e00\u70b9 - \u4e00\u65e6\u6211\u8fbe\u5230\u8fd9\u79cd\u590d\u6742\u7a0b\u5ea6\uff0c\u6211\u66f4\u6709\u53ef\u80fd\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230\u78c1\u76d8\u4e0a\u7684SQLite\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\uff0c\u5e76\u5728\u6570\u636e\u7f29\u653e\u4e2d\u6253\u5f00\u5b83\u4eec - \u4f46\u8fd9\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u52a0\u5165\u7684\u6709\u8da3\u793a\u4f8b\u884c\u52a8\u3002\n  SQLite-utils Memred\u547d\u4ee4\u5177\u6709\u53e6\u4e00\u4e2a\u65b0\u6ce1\u6cab\u7684\u5957\u7b52\uff1a\u5b83\u4f1a\u81ea\u52a8\u68c0\u6d4bCSV\u6216TSV\u6587\u4ef6\u4e2d\u7684\u54ea\u4e2a\u5217\u5305\u542b\u6574\u6570\u6216\u6d6e\u70b9\u503c\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u7c7b\u578b\u521b\u5efa\u76f8\u5e94\u7684\u5185\u5b58\u4e2d\u7684SQLite\u8868\u3002\u8fd9\u53ef\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u786e\u4fddMax\uff08\uff09\u548cSum\uff08\uff09\u5e76\u6309\u5de5\u4f5c\u987a\u5e8f\uff0c\u800c\u4e0d\u4f1a\u610f\u5916\u5730\u5c061\u6392\u5e8f\u4e3a\u9ad8\u4e8e11\u3002\n \u6211\u4e0d\u60f3\u6253\u7834sqlite-utils\u63d2\u5165\u547d\u4ee4\u7684\u73b0\u6709\u7528\u6237\u7684\u5411\u540e\u517c\u5bb9\u6027\uff0c\u6240\u4ee5\u6211\u6dfb\u52a0\u4e86\u90a3\u91cc\u7684\u7c7b\u578b\u68c0\u6d4b\uff0c\u4f5c\u4e3a\u65b0\u7684\u9009\u9879\uff0c--detect-types\u6216-d for short\uff1a\n $ sqlite-utils\u63d2\u5165my.db us_states us-solues.csv --csv -d [############################# ######] 100\uff05$ sqlite-utils\u67b6\u6784my.dbcreate\u8868\uff06\uff0334; us_states\uff06\uff0334; \uff08[\u65e5\u671f]\u6587\u672c\uff0c[\u72b6\u6001]\u6587\u672c\uff0c[FIPS]\u6574\u6570\uff0c[\u6848\u4f8b]\u6574\u6570\uff0c[Deaths] Integer\uff09;\n   Sqlite-utils\uff1a3.10-\uff08\u603b\u517178\u4e2a\u7248\u672c\uff09-2021-06-19 Python CLI\u5b9e\u7528\u7a0b\u5e8f\u548c\u7528\u4e8e\u64cd\u7eb5SQLite\u6570\u636e\u5e93\u7684\u5e93 \ndogsheep-beta\uff1a0.10.2-\uff0820\u7248\u672c\u603b\u8ba1\uff09-2021-06-13\u4ece\u591a\u4e2aSQLite\u6570\u636e\u5e93\u8868\u4e2d\u6784\u5efa\u4e86\u5185\u5bb9\u7684\u641c\u7d22\u7d22\u5f15\uff0c\u5e76\u4f7f\u7528Databette\u5bf9\u5176\u8fd0\u884c\u523b\u9762\u641c\u7d22  Markdown-to-sqlite\uff1a1.0-\uff082\u7248\u672c\u603b\u8ba1\uff09-2021-06-13 CLI\u5de5\u5177\uff0c\u7528\u4e8e\u5c06\u6807\u8bb0\u6587\u4ef6\u52a0\u8f7d\u5230SQLite\u6570\u636e\u5e93\u4e2d ", "note_en": "The new  sqlite-utils memory command can import CSV and JSON data directly into an in-memory SQLite datbase, combine and query it using SQL and output the results as CSV, JSON or various other formats of plain text tables.\n   I\u2019ve recorded  this video demonstrating the new feature\u2014with full accompanying notes below.\n sqlite-utils already offers a mechanism for importing CSV and JSON data into a SQLite database file, in the form of the  sqlite-utils insert command. Processing data with this involves two steps: first import it into a  temp.db file, then use  sqlite-utils query to run queries and output the results.\n Using SQL to re-shape data is really useful\u2014since  sqlite-utils can output in multiple different formats, I frequently find myself loading in a CSV file and exporting it back out as JSON, or vice-versa.\n This week I realized that I had most of the pieces in place to reduce this to a single step. The new  sqlite-utils memory command ( full documentation here) operates against a temporary, in-memory SQLite database. It can import data, execute SQL and output the result in a one-liner, without needing any temporary database files along the way.\n Here\u2019s an example. My  Dogsheep GitHub organization has a number of repositories. GitHub make those available via an authentication-optional API endpoint at  https://api.github.com/users/dogsheep/repos\u2014which returns JSON that looks like this (simplified):\n [ {   &#34;id &#34;:  197431109,   &#34;name &#34;:   &#34;dogsheep-beta &#34;,   &#34;full_name &#34;:   &#34;dogsheep/dogsheep-beta &#34;,   &#34;size &#34;:  61,   &#34;stargazers_count &#34;:  79,   &#34;watchers_count &#34;:  79,   &#34;forks &#34;:  0,   &#34;open_issues &#34;:  11 }, {   &#34;id &#34;:  256834907,   &#34;name &#34;:   &#34;dogsheep-photos &#34;,   &#34;full_name &#34;:   &#34;dogsheep/dogsheep-photos &#34;,   &#34;size &#34;:  64,   &#34;stargazers_count &#34;:  116,   &#34;watchers_count &#34;:  116,   &#34;forks &#34;:  5,   &#34;open_issues &#34;:  18 }]\n With  sqlite-utils memory we can see the 3 most popular repos by number of stars like this:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; -tfull_name forks_count stars-------------------------- ------------- -------dogsheep/twitter-to-sqlite 12 225dogsheep/github-to-sqlite 14 139dogsheep/dogsheep-photos 5 116\n We\u2019re using  curl to fetch the JSON and pipe it into  sqlite-utils memory\u2014the  - means \u201cread from standard input\u201d. Then we pass the following SQL query:\n  stdin is the temporary table created for the data piped in to the tool. The query selects three of the JSON properties, renames  stargazers_count to  stars, sorts by stars and return the first three.\n The  -t option here means \u201coutput as a formatted table\u201d\u2014without that option we get JSON:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; [{&#34;full_name&#34;: &#34;dogsheep/twitter-to-sqlite&#34;, &#34;forks_count&#34;: 12, &#34;stars&#34;: 225}, {&#34;full_name&#34;: &#34;dogsheep/github-to-sqlite&#34;, &#34;forks_count&#34;: 14, &#34;stars&#34;: 139}, {&#34;full_name&#34;: &#34;dogsheep/dogsheep-photos&#34;, &#34;forks_count&#34;: 5, &#34;stars&#34;: 116}]\n  $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; --csvfull_name,forks_count,starsdogsheep/twitter-to-sqlite,12,225dogsheep/github-to-sqlite,14,139dogsheep/dogsheep-photos,5,116\n The  -t option supports a number of different formats, specified using  --fmt. If I wanted to generate a LaTeX table of the top reos by stars I could do this:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; -t --fmt=latex\\begin{tabular}{lrr}\\hline full\\_name &amp; forks\\_count &amp; stars \\\\\\hline dogsheep/twitter-to-sqlite &amp; 12 &amp; 225 \\\\ dogsheep/github-to-sqlite &amp; 14 &amp; 139 \\\\ dogsheep/dogsheep-photos &amp; 5 &amp; 116 \\\\\\hline\\end{tabular}\n We can run aggregate queries too\u2014let\u2019s add up the total size and total number of stars across all of those repositories:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\| sqlite-utils memory - &#39; select sum(size), sum(stargazers_count) from stdin&#39; -t sum(size) sum(stargazers_count)----------- ----------------------- 843 934\n (I believe size here is measured in kilobytes: the GitHub API documentation isn\u2019t clear on this point.)\n  All of these examples have worked with JSON data piped into the tool\u2014but you can also pass one or more files, of different formats, in a way that lets you execute joins against them.\n  The New York Times publish a  us-states.csv file with Covid cases and deaths by state over time.\n The CDC have an  undocumented JSON endpoint (which I\u2019ve been  archiving here) tracking the progress of vaccination across different states.\n We\u2019re going to run a join from that CSV data to that JSON data, and output a table of results.\n First, we need to download the files. The  CDC JSON data isn\u2019t quite in the right shape for our purposes:\n  sqlite-utils expects a flat JSON array of objects\u2014we can use  jq to re-shape the data like so:\n    Now that we have the data locally, we can run a join to combine it using the following command:\n $ sqlite-utils memory us-states.csv vaccination_data.json &#34; select max(t1.date), t1.state, t1.cases, t1.deaths, t2.Census2019, t2.Dist_Per_100K from t1 join t2 on t1.state = replace(t2.LongName, &#39;New York State&#39;, &#39;New York&#39;) group by t1.state order by Dist_Per_100K desc&#34; -tmax(t1.date) state cases deaths Census2019 Dist_Per_100K-------------- ------------------------ ------- -------- ------------ ---------------2021-06-18 District of Columbia 49243 1141 705749 1492482021-06-18 Vermont 24360 256 623989 1462572021-06-18 Rhode Island 152383 2724 1059361 1412912021-06-18 Massachusetts 709263 17960 6892503 1396922021-06-18 Maryland 461852 9703 6045680 1381932021-06-18 Maine 68753 854 1344212 1368942021-06-18 Hawaii 35903 507 1415872 136024...\n I\u2019m using automatically created numeric aliases  t1 and  t2 for the files here, but I can also use their full table names  &#34;us-states&#34; (quotes needed due to the hyphen) and  vaccination_data instead.\n The  replace() operation there is needed because the  vaccination_data.json file calls New York \u201cNew York State\u201d while the  us-states.csv file just calls it \u201cNew York\u201d.\n The  max(t1.date) and  group by t1.state is  a useful SQLite trick: if you perform a  group by and then ask for the  max() of a value, the other columns returned from that table will be the columns for the row that contains that maximum value.\n This demo is a bit of a stretch\u2014once I reach this level of complexity I\u2019m more likely to load the files into a SQLite database file on disk and open them up in  Datasette\u2014but it\u2019s a fun example of a more complex join in action.\n  The  sqlite-utils memory command has another new trick up its sleeve: it automatically detects which columns in a CSV or TSV file contain integer or float values and creates the corresponding in-memory SQLite table with the correct types. This ensures  max() and  sum() and  order by work in a predictable manner, without accidentally sorting  1 as higher than  11.\n I didn\u2019t want to break backwards compatibility for existing users of the  sqlite-utils insert command so I\u2019ve added type detection there as a new option,  --detect-types or  -d for short:\n $ sqlite-utils insert my.db us_states us-states.csv --csv -d [####################################] 100%$ sqlite-utils schema my.dbCREATE TABLE &#34;us_states&#34; ( [date] TEXT, [state] TEXT, [fips] INTEGER, [cases] INTEGER, [deaths] INTEGER);\n   sqlite-utils:  3.10\u2014( 78 releases total)\u20142021-06-19 Python CLI utility and library for manipulating SQLite databases\n dogsheep-beta:  0.10.2\u2014( 20 releases total)\u20142021-06-13 Build a search index across content from multiple SQLite database tables and run faceted searches against it using Datasette\n  markdown-to-sqlite:  1.0\u2014( 2 releases total)\u20142021-06-13 CLI tool for loading markdown files into a SQLite database", "posttime": "2021-06-20 11:45:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sqlite,\u6570\u636e\u5e93,database,\u5185\u5b58,csv", "title": "\u4f7f\u7528\u5185\u5b58\u4e2d\u7684SQLite\u6570\u636e\u5e93\u52a0\u5165CSV\u548cJSON\u6570\u636e ", "title_en": "Joining CSV and JSON data with an in-memory SQLite database", "transed": 1, "url": "https://simonwillison.net/2021/Jun/19/sqlite-utils-memory/", "via": "", "real_tags": ["sqlite", "\u6570\u636e\u5e93", "database", "\u5185\u5b58", "csv"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066974, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f\u5927\u5b66\u3002 \u7814\u7a76\u5174\u8da3\uff1a\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\uff0c\u4f18\u5316\uff0c\u7edf\u8ba1 ", "note_en": "University of Washington.  Research interests: Machine Learning, Artificial     Intelligence, Optimization, Statistics", "posttime": "2021-06-20 11:45:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,algorithms,\u5b66\u4e60,learning,\u4f18\u5316", "title": "\u5f3a\u5316\u5b66\u4e60\uff1a\u7406\u8bba\u4e0e\u7b97\u6cd5 ", "title_en": "Reinforcement Learning: Theory and Algorithms", "transed": 1, "url": "https://rltheorybook.github.io/", "via": "", "real_tags": ["\u7b97\u6cd5", "\u5b66\u4e60", "learning", "\u4f18\u5316"]}, {"category": "", "categoryclass": "", "imagename": "6e301536cc1f6cb87ca267c459c893bd.jpg", "infoid": 1066973, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90fd\u67cf\u6797\uff0c\u7231\u5c14\u5170 - \u7231\u5c14\u5170\u5171\u540c\u521b\u7acb\u7684\u6570\u636e\u5206\u6790\u516c\u53f8\u662f\u5728\u7231\u5c14\u5170\u5efa\u7acb\u4e00\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\u3002\n \u8981\u4f4d\u4e8e\u9996\u90fd\uff0c\u90fd\u67cf\u6797\u662f\u7531Moonshot\u5efa\u7acb\u7684\u4e2d\u5fc3\uff0c\u5c06\u5728\u672a\u67653\u5e74\u5185\u521b\u902037\u4e2a\u65b0\u89d2\u8272\u3002\n Moonshot\u5f00\u53d1\u8f6f\u4ef6\u4ee5\u8bc6\u522b\uff0c\u76d1\u63a7\u548c\u51cf\u8f7b\u5728\u7ebf\u5371\u5bb3\uff0c\u4f8b\u5982\u6050\u6016\u4e3b\u4e49\u548c\u6709\u7ec4\u7ec7\u7684\u72af\u7f6a\u3002\n  \u8be5\u516c\u53f8\u4e8e2015\u5e74\u7531\u7231\u5c14\u5170\u4f01\u4e1a\u5bb6Ross Fross Froneett\u548c\u6765\u81ea\u7f8e\u56fd\u7684Vidhya Ramalingam\u6210\u7acb\u4e8e2015\u5e74\u3002\u8be5\u516c\u53f8\u8bbe\u8ba1\u4e86\u65b0\u7684\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u5176\u5408\u4f5c\u4f19\u4f34\u7684\u80fd\u529b\uff0c\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u66b4\u529b\u6781\u7aef\u4e3b\u4e49\uff0c\u865a\u5047\u4fe1\u606f\uff0c\u57fa\u4e8e\u6027\u522b\u7684\u66b4\u529b\u548c\u6709\u7ec4\u7ec7\u72af\u7f6a\u7b49\u5371\u5bb3\u7684\u6311\u6218\u3002\n \u5b83\u63d0\u4f9b\u4e86\u5a01\u80c1\u76d1\u6d4b\u548c\u5206\u6790\uff0c\u6570\u5b57\u8fd0\u52a8\uff0c\u91cf\u8eab\u5b9a\u5236\u7684\u5e72\u9884\u63aa\u65bd\uff0c\u4ee5\u53ca57\u591a\u4e2a\u56fd\u5bb6\u548c\u4e09\u5341\u4e09\u79cd\u8bed\u8a00\u7684\u4e00\u7cfb\u5217\u5176\u4ed6\u670d\u52a1\uff0c\u9002\u7528\u4e8e\u653f\u5e9c\uff0c\u79d1\u6280\u516c\u53f8\u548c\u56fd\u9645\u7ec4\u7ec7\u3002 Moonshot\uff06\uff0339;\u5ba2\u6237\u5305\u62ec\u56fd\u571f\u5b89\u5168\u90e8\uff0cUSAID\uff0c\u7f8e\u56fd\u56fd\u52a1\u9662\uff0c\u82f1\u56fd\u5bb6\u5ead\u529e\u516c\u5ba4\uff0c\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u548c\u641c\u7d22\u5f15\u64ce\uff0c\u5982Facebook\u548cGoogle\u3002\n \uff06\uff0334;\u6211\u771f\u7684\u5f88\u9ad8\u5174Moonshot\u5c06\u5728\u90fd\u67cf\u6797\u5efa\u7acb\u65b0\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\uff0c\u8fd9\u5c06\u5728\u672a\u6765\u4e09\u5e74\u5185\u521b\u5efa37\u4e2a\u65b0\u5de5\u4f5c\u3002\u6570\u636e\u5206\u6790\u516c\u53f8\u572857\u591a\u4e2a\u56fd\u5bb6\u8fd0\u8425\uff0c\u8fd9\u662f\u5bf9\u516c\u53f8\u7684\u8bc1\u660e\uff0c\u8fc4\u4eca\u4e3a\u6b62\u7684\u6210\u529f\uff0c\uff06\uff0334; Tanaiste\u548c\u4f01\u4e1a\u90e8\u957fLeo Varadkar\u8868\u793a\u3002\n  \uff06\uff0334;\u5f53\u6211\u5728\u5927\u7ecf\u6d4e\u8870\u9000\u671f\u95f4\u79bb\u5f00\u7231\u5c14\u5170\u65f6\uff0c\u601d\u60f3\u5e26\u6765\u4e86\u8fd9\u4e48\u591a\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u542c\u8d77\u6765\u592a\u597d\u4e86\u3002\u4f46\u8fd9\u4e3e\u529e\u4e86\u516c\u53f8\uff0c\u57fa\u4e8e\u60c5\u611f\uff0c\u5f53\u6211\u4eec\u770b\u7740\u4eba\u624d\u548c\u5e02\u573a\uff0c\u7231\u5c14\u5170\u662f\u660e\u663e\u7684\u9009\u62e9\u3002 \n\uff06\uff0334;\u6211\u4eec\u5728\u8fc7\u53bb\u7684\u4e94\u5e74\u91cc\u5ea6\u8fc7\u4e86\u6211\u4eec\u7684\u80fd\u529b\uff0c\u56e2\u961f\u548c\u5ba2\u6237\u7fa4\uff0c\u4ee5\u5e94\u5bf9\u9700\u6c42\u7684\u6301\u7eed\u589e\u52a0\uff0c\u4e5f\u662f\u6781\u7aef\u5206\u5b50\uff0c\u9634\u8c0b\u7406\u8bba\u5bb6\u548c\u6709\u7ec4\u7ec7\u72af\u7f6a\u6240\u6784\u6210\u7684\u5a01\u80c1\u7684\u6301\u7eed\u6f14\u53d8\u3002\uff06\uff0334;\n  \uff06\uff0334;\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6269\u5927\u6211\u4eec\u7684\u8db3\u8ff9\u5e76\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u4eec\u7684\u56e2\u961f\u4f1a\u8fce\u63a5\u4e16\u754c\u4e0a\u4e00\u4e9b\u7b56\u7565\u7684\u6311\u6218\u3002\u5728\u90fd\u67cf\u6797\u5efa\u7acb\u81ea\u5df1\u662f\u8be5\u8fc7\u7a0b\u7684\u5173\u952e\u90e8\u5206\uff0c\u6211\u4eec\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u613f\u666f\u6240\u9700\u7684\u4eba\u624d\u548c\u6280\u80fd\u3002\u4e3a\u6211\u4eec\u6269\u5c55\u6211\u4eec\u7684\u4f7f\u547d\uff0c\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u65f6\u523b\uff0c\u6211\u4eec\u90fd\u67cf\u6797\u56e2\u961f\u5c06\u8ba9\u6211\u4eec\u5728\u90a3\u91cc\u3002\uff06\uff0334;\n  \uff06\uff0334;\u7231\u5c14\u5170\u63d0\u4f9b\u5b89\u5168\u7a33\u5b9a\u7684\u6295\u8d44\u5730\u70b9\uff0c\u53ef\u901a\u5f80\u6b27\u76df\u5e02\u573a\uff0c\u53d7\u8fc7\u6559\u80b2\u548c\u719f\u7ec3\u7684\u52b3\u52a8\u529b\u4ee5\u53ca\u4eba\u4eec\u60f3\u8981\u751f\u6d3b\u548c\u5de5\u4f5c\u7684\u6709\u5438\u5f15\u529b\u7684\u73af\u5883\u3002\u5728\u8fd9\u91cc\u5efa\u7acb\u7684Moonshot\uff06\uff0339\u662f\u975e\u5e38\u53d7\u6b22\u8fce\u7684\uff0c\u662f\u7231\u5c14\u5170\u7684\u8fdb\u4e00\u6b65\u8ba4\u540c\uff0c\u4f5c\u4e3a\u6b27\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u5730\u4f4d\uff0c\u5176\u6301\u7eed\u7684\u9ad8\u589e\u957f\u516c\u53f8\u6295\u8d44\u7684\u6301\u7eed\u5438\u5f15\u529b\u3002\uff06\uff0334;\n \u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0cMoonshot\u5ba3\u5e03\u5b83\u5df2\u7ecf\u5c06700\u4e07\u7f8e\u5143\uff08\u82f1\u56fd500\u4e07\u82f1\u9551\uff09\u7eb3\u5165\u4e86Beringea\uff0cTranstallantuft Capiture Capiture Compand\u548c\u82f1\u56fdMercia\u7684\u8d44\u91d1\u3002 ", "note_en": "DUBLIN, Ireland - An Irish co-founded data analytics company is to set up a software development centre in Ireland.\n To be located in the capital, Dublin, the centre being established by  Moonshot, will create 37 new roles over the next 3 years.\n Moonshot develops software to identify, monitor, and mitigate online harms such as terrorisim and organised crime.\n  The company was founded in London in 2015 by Irish entrepreneur Ross Frenett, and Vidhya Ramalingam from the United States. The company designs new methodologies to enhance the capacity of its partners to respond effectively to the challenges of harms such as violent extremism, disinformation, gender-based violence, and organised crime.\n It has delivered threat monitoring and analysis, digital campaigns, tailored interventions, and a range of other services in over 57 countries and thirty three languages, for governments, tech companies, and international organisations. Moonshot&#39;s clients include the Department of Homeland Security, USAID, the U.S. Department of State, the UK Home Office, social media platforms and search engines, such as Facebook and Google.\n &#34;I&#39;m really pleased that Moonshot will be establishing its new Software Development Centre in Dublin, which will create 37 new jobs over the next three years. The data analytics firm operates in over 57 countries, which is a testament to the company&#39;s success to date,&#34; Tanaiste and Minister for Enterprise, Trade and Employment Leo Varadkar said.\n  &#34;When I left Ireland during the great recession the thought of bringing so many jobs home would have sounded too good to be true. But this move for our company isn&#39;t based on emotion, when we looked at talent and market access Ireland was the obvious choice.\n &#34;We&#39;ve spent the last five years growing our capabilities, team and client base, in response to both a continual increase in demand, but also the continued evolution of the threats posed by extremists, conspiracy theorists and organised crime.&#34;\n  &#34;We&#39;re expanding our footprint and growing our team to meet some of the world&#39;s toughest challenges head on. Establishing ourselves in Dublin is a key part of that process and our Software Development Centre will allow us to access the talent and skills we need to realise our vision. There has never been a more important moment for us to scale our mission, and our Dublin team will get us there.&#34;\n  &#34;Ireland offers a safe and stable investment location with access to the EU market, an educated and skilled workforce and an attractive environment where people want to live and work. Moonshot&#39;s decision to set up here is very welcome and is a further endorsement of Ireland&#39;s position as a tech hub in Europe and its continued attractiveness for investments from high growth companies.&#34;\n Earlier this month Moonshot announced that it has raised US $7million (UK \u00a35 million) in Series A funding from Beringea, the transatlantic venture capital firm, and UK-based Mercia.", "posttime": "2021-06-20 11:45:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u8f6f\u4ef6,\u8f6f\u4ef6\u5f00\u53d1,establish", "title": "Moonshot\u5728\u7231\u5c14\u5170\u9996\u90fd\u5efa\u7acb\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3 ", "title_en": "Moonshot to establish software development centre in Irish capital", "transed": 1, "url": "https://www.bignewsnetwork.com/news/269958729/moonshot-to-establish-software-development-centre-in-irish-capital", "via": "", "real_tags": ["\u5f00\u53d1", "\u8f6f\u4ef6", "\u8f6f\u4ef6\u5f00\u53d1", "establish"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066972, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u79d1\u5e7b\u5c0f\u8bf4/\u559c\u5267/\u5b8c\u5168\u4e25\u8083\u7684\u8c08\u8bdd\u8ffd\u6eaf\u4e86JavaScript\u7684\u5386\u53f2\uff0c\u5e76\u4e00\u822c\u7f16\u7a0b\uff0c\u4ece1995\u5e74\u52302035\u5e74\u3002\u5b83\u6ca1\u6709\u4eb2\u6216\u53cdJavaScript; \u5766\u7387\u5730\u8ba8\u8bba\u4e86\u8bed\u8a00\uff06\uff0339; S\u7f3a\u9677\uff0c\u4f46\u5b83\u5bf9\u4e1a\u754c\u7684\u6700\u7ec8\u5f71\u54cd\u975e\u5e38\u79ef\u6781\u3002 \u5bf9\u4e8e\u52a0\u91cc\uff06\uff0339;\u5728\u7f16\u7a0b\u7684\u66f4\u4e25\u91cd\uff08\u548c\u66f4\u5c11\u7684\u672a\u6765\u6d3e\uff09\u601d\u60f3\u4e2d\uff0c\u5c1d\u8bd5\u4e00\u4e9b\u6467\u6bc1\u6240\u6709\u8f6f\u4ef6\u622a\u56fe\u3002  \u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e00\u70b9\uff0c\u60a8\u4e5f\u53ef\u80fd\u559c\u6b22\u6267\u884c\u7a0b\u5e8f\uff1a\u5728\u7c7b\u578b\uff0c\u73b0\u4ee3JavaScript\uff0cSQL\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u4e2d\u4ea4\u4e92\u5f0f\u8bfe\u7a0b\u3002 \u6bcf\u4e2a\u8bfe\u7a0b\u7531\u6570\u767e\u4e2a\u4ea4\u4e92\u5f0f\u4ee3\u7801\u793a\u4f8b\u7ec4\u6210\uff0c\u8be5\u793a\u4f8b\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002 ", "note_en": "This science fiction / comedy / completely serious talk traces the history of JavaScript, and programming in general, from 1995 until 2035. It&#39;s not pro- or anti-JavaScript; the language&#39;s flaws are discussed frankly, but its ultimate impact on the industry is tremendously positive. For Gary&#39;s more serious (and less futuristic) thoughts on programming, try some  Destroy All Software screencasts.\n  If you liked this, you might also like  Execute Program: interactive courses on TypeScript, Modern JavaScript, SQL, regular expressions, and more. Each course is made up of hundreds of interactive code examples running live in your browser.", "posttime": "2021-06-20 11:03:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u51fa\u751f,death", "title": "JavaScript\u7684\u51fa\u751f\u548c\u6b7b\u4ea1\uff082014\uff09[\u89c6\u9891] ", "title_en": "The Birth and Death of JavaScript (2014) [video]", "transed": 1, "url": "https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript", "via": "", "real_tags": ["java", "\u51fa\u751f", "death"]}]
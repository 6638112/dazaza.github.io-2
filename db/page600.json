[{"category": "", "categoryclass": "", "imagename": "a4c7aa51ef4c82b34eeaf1885eec5ae4.jpg", "infoid": 1016865, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd1\u5e74\u6765\uff0c\u4e00\u4e9b\u6c7d\u8f66\u516c\u53f8-\u6bd4\u5982\u7279\u65af\u62c9-\u5df2\u7ecf\u5f00\u59cb\u63d0\u4f9b\u9a7e\u9a76\u5458\u8f85\u52a9\u7cfb\u7edf\uff0c\u63d0\u4f9b\u8f66\u9053\u4fdd\u6301\u548c\u81ea\u9002\u5e94\u5de1\u822a\u63a7\u5236\u3002\u8fd9\u4f3c\u4e4e\u662f\u8fc8\u5411\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u4e00\u5927\u6b65\uff0c\u56e0\u4e3a\u50cf\u8fd9\u6837\u7684\u7cfb\u7edf\u53ef\u4ee5\u5728\u6ca1\u6709\u4eba\u5e72\u9884\u7684\u60c5\u51b5\u4e0b\u5728\u9ad8\u901f\u516c\u8def\u4e0a\u884c\u9a76\u6570\u82f1\u91cc\u3002\u4f46\u7f8e\u56fd\u6c7d\u8f66\u534f\u4f1a\u7684\u4e00\u4efd\u65b0\u62a5\u544a\u5f3a\u8c03\u4e86\u8fd9\u4e9b\u7cfb\u7edf\u7684\u5c40\u9650\u6027\u3002\n\u5b83\u6700\u620f\u5267\u6027\u7684\u53d1\u73b0\uff1a\u6700\u65b0\u6b3e\u6c7d\u8f66\u4e0a\u7684\u5148\u8fdb\u9a7e\u9a76\u5458\u8f85\u52a9\u7cfb\u7edf(ADA)\u4ecd\u7136\u96be\u4ee5\u907f\u514d\u4e0e\u505c\u653e\u7684\u8f66\u8f86\u76f8\u649e\u3002\u5c3d\u7ba1\u4ed6\u4eec\u6d4b\u8bd5\u4e86\u6765\u81ea\u5b9d\u9a6c\u3001\u8d77\u4e9a\u548c\u65af\u5df4\u9c81\u7684\u6c7d\u8f66\uff0c\u4f46\u6ca1\u6709\u4e00\u8f86\u8f66\u59cb\u7ec8\u907f\u514d\u649e\u4e0a\u90e8\u5206\u5835\u585e\u884c\u8f66\u9053\u7684\u5047\u8f66\u3002\n\u7814\u7a76\u4eba\u5458\u8fd8\u68c0\u67e5\u4e86\u51ef\u8fea\u62c9\u514bCT6\u548c\u798f\u7279Edge\u7684\u81ea\u52a8\u9a7e\u9a76\u8f85\u52a9\u7cfb\u7edf\uff0c\u4f46\u8fd9\u4e9b\u6c7d\u8f66\u7684\u9a7e\u9a76\u8f85\u52a9\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165AAA\u7684\u5c01\u95ed\u8def\u7ebf\uff0c\u56e0\u6b64\u4e0d\u5305\u62ec\u5728\u505c\u653e\u8f66\u8f86\u6d4b\u8bd5\u4e2d\u3002\u4ed6\u4eec\u4e5f\u88ab\u5305\u62ec\u5728\u516c\u5171\u9ad8\u901f\u516c\u8def\u4e0a\u8fdb\u884c\u7684\u5176\u4ed6\u6d4b\u8bd5\u4e2d\u3002\n\u62a5\u544a\u79f0\uff0c\u6240\u6709\u6d4b\u8bd5\u53f8\u673a\u90fd\u8fbe\u6210\u4e86\u4e00\u4e2a\u666e\u904d\u5171\u8bc6\uff0c\u5373\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7ed3\u5408\u81ea\u9002\u5e94\u5de1\u822a\u548c\u8f66\u9053\u4fdd\u6301\u529f\u80fd\u5e76\u4e0d\u80fd\u59cb\u7ec8\u5982\u4e00\u5730\u63d0\u5347\u9a7e\u9a76\u4f53\u9a8c\u3002\u8fd9\u4e9b\u8f66\u8f86\u7ecf\u5e38\u51fa\u9519\uff0c\u4ee5\u81f3\u4e8e\u53f8\u673a\u4eec\u7ecf\u5e38\u53d1\u73b0\u8fd9\u79cd\u7ecf\u5386\u8ba9\u4eba\u4f24\u8111\u7b4b\uff0c\u800c\u4e0d\u662f\u653e\u677e\u3002\nAAA\u62a5\u544a\u7684\u5408\u8457\u8005\u4e4b\u4e00\u683c\u96f7\u683c\u00b7\u5e03\u5170\u519c(Greg Brannon)\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u7cfb\u7edf\u7684\u4e00\u4e2a\u6839\u672c\u6311\u6218\u662f\u9700\u8981\u4fdd\u6301\u8b66\u60d5\u3002\u4eba\u7c7b\u5728\u9a7e\u9a76\u4e00\u8f86\u4e3b\u8981\u662f\u81ea\u52a8\u9a7e\u9a76\u7684\u6c7d\u8f66\u7684\u65b9\u5411\u76d8\u540e\u6301\u7eed\u5173\u6ce8\u65b9\u9762\u975e\u5e38\u7cdf\u7cd5\u3002\u56e0\u6b64\uff0c\u5f53\u8fd9\u4e9b\u8f66\u8f86\u51fa\u9519\u65f6(\u800c\u4e0d\u662f\u5982\u679c)\uff0c\u53f8\u673a\u6ca1\u6709\u8db3\u591f\u5bc6\u5207\u5730\u6ce8\u610f\u5230\u5b89\u5168\u6062\u590d\u7684\u98ce\u9669\u5c31\u4f1a\u589e\u52a0\u3002\n\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u5177\u6709\u81ea\u9002\u5e94\u5de1\u822a\u63a7\u5236\u6216\u7d27\u6025\u5239\u8f66\u80fd\u529b\u7684\u6c7d\u8f66\u5c06\u80fd\u591f\u5728\u9053\u8def\u4e0a\u505c\u653e\u7684\u6c7d\u8f66\u548c\u5176\u4ed6\u969c\u788d\u7269\u524d\u505c\u8f66\u3002\u4f46\u4ed6\u4eec\u5f80\u5f80\u672a\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8981\u4e86\u89e3\u5176\u4e2d\u7684\u539f\u56e0\uff0c\u7a0d\u5fae\u4e86\u89e3\u4e00\u4e0b\u8fd9\u4e9b\u7cfb\u7edf\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\n10\u523020\u5e74\u524d\u9500\u552e\u7684\u65e9\u671f\u81ea\u9002\u5e94\u5de1\u822a\u63a7\u5236\u7cfb\u7edf\u5927\u591a\u662f\u57fa\u4e8e\u96f7\u8fbe\u7684\u3002\u6b63\u5982\u6211\u4eec\u4e24\u5e74\u524d\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u96f7\u8fbe\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u5c40\u9650\u6027\uff1a\n\u96f7\u8fbe\u7684\u89d2\u5ea6\u5206\u8fa8\u7387\u5f88\u4f4e\uff0c\u56e0\u6b64\u5b83\u5bf9\u8f66\u8f86\u5468\u56f4\u7684\u73af\u5883\u53ea\u80fd\u6709\u4e00\u4e2a\u7c97\u7565\u7684\u4e86\u89e3\u3002\u7136\u800c\uff0c\u96f7\u8fbe\u975e\u5e38\u64c5\u957f\u7684\u662f\u8ba1\u7b97\u51fa\u7269\u4f53\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u56e0\u6b64\uff0c\u8ba9\u8fd9\u9879\u6280\u672f\u53d1\u6325\u4f5c\u7528\u7684\u4e00\u4e2a\u5173\u952e\u7b56\u7565\u662f\u5ffd\u7565\u4efb\u4f55\u4e0d\u4f1a\u79fb\u52a8\u7684\u4e1c\u897f\u3002\u6c7d\u8f66\u7684\u96f7\u8fbe\u4f1a\u63a2\u6d4b\u5230\u4f4d\u4e8e\u6c7d\u8f66\u524d\u65b9\u67d0\u5904\u7684\u8bb8\u591a\u9759\u6b62\u7269\u4f53\uff1a\u8fd9\u4e9b\u53ef\u80fd\u662f\u6811\u6728\u3001\u505c\u653e\u7684\u6c7d\u8f66\u3001\u6865\u6881\u3001\u5934\u9876\u6807\u724c\u7b49\u7b49\u3002\n\u8fd9\u4e9b\u7cfb\u7edf\u88ab\u8bbe\u8ba1\u6210\u5728\u53d7\u63a7\u8fdb\u51fa\u7684\u9ad8\u901f\u516c\u8def\u4e0a\u5de5\u4f5c\uff0c\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u9ad8\u901f\u516c\u8def\u9644\u8fd1\u7684\u9759\u6b62\u7269\u4f53\u4f1a\u653e\u5728\u8def\u8fb9(\u6216\u60ac\u6302\u5728\u4e0a\u9762)\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728\u6c7d\u8f66\u7684\u884c\u8fdb\u8def\u7ebf\u4e0a\u3002\u65e9\u671f\u7684\u81ea\u9002\u5e94\u5de1\u822a\u63a7\u5236\u7cfb\u7edf\u6839\u672c\u6ca1\u6709\u80fd\u529b\u533a\u5206\u7edd\u5927\u591a\u6570\u505c\u5728\u8def\u8fb9\u7684\u7269\u4f53\u548c\u6781\u5c11\u6570\u505c\u5728\u8def\u4e0a\u7684\u7269\u4f53\u3002\n\u56e0\u6b64\uff0c\u6c7d\u8f66\u88ab\u7f16\u7a0b\u4e3a\u4e13\u6ce8\u4e8e\u4e0e\u5176\u4ed6\u79fb\u52a8\u7269\u4f53-\u6c7d\u8f66-\u4fdd\u6301\u5b89\u5168\u8ddd\u79bb\uff0c\u800c\u5ffd\u7565\u9759\u6b62\u7684\u7269\u4f53\u3002\u8bbe\u8ba1\u8005\u8ba4\u4e3a\uff0c\u5982\u679c\u9053\u8def\u4e0a\u76f4\u63a5\u5b58\u5728\u969c\u788d\u7269\uff0c\u5173\u6ce8\u9053\u8def\u5e76\u8fdb\u884c\u5e72\u9884\u4ecd\u5c06\u662f\u4eba\u7c7b\u53f8\u673a\u7684\u5de5\u4f5c\u3002\n\u4eca\u5929\u7684\u9a7e\u9a76\u5458\u8f85\u52a9\u7cfb\u7edf\u6bd410\u621620\u5e74\u524d\u4e0a\u5e02\u7684\u65e9\u671f\u7cfb\u7edf\u66f4\u590d\u6742\u3002\u4ed6\u4eec\u4e0d\u518d\u4ec5\u4ec5\u662f\u57fa\u4e8e\u96f7\u8fbe\u7684\uff1b\u5927\u591a\u6570\u4eba\u90fd\u6709\u76f8\u673a\uff0c\u800c\u4e14\u636e\u63a8\u6d4b\uff0c\u4ed6\u4eec\u8bd5\u56fe\u540c\u65f6\u4f7f\u7528\u96f7\u8fbe\u548c\u76f8\u673a\u6765\u8bc6\u522b\u524d\u65b9\u9053\u8def\u4e0a\u7684\u6f5c\u5728\u7269\u4f53\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6700\u65b0\u7684\u6c7d\u8f66\u4f3c\u4e4e\u786e\u5b9e\u6bd4\u8fc7\u53bb\u7684\u7cfb\u7edf\u505a\u5f97\u66f4\u597d\u3002\u5728\u8fd9\u65b9\u9762\u6d4b\u8bd5\u7684\u6700\u597d\u7684AAA\u7cfb\u7edf\u662f2020\u6b3e\u65af\u5df4\u9c81\u5185\u9646\u3002AAA\u5728\u5185\u9646\u8fdb\u884c\u4e86\u4e09\u6b21\u8bd5\u8fd0\u884c\uff0c\u8d77\u8dd1\u901f\u5ea6\u4e3a\u6bcf\u5c0f\u65f630\u82f1\u91cc\u3002\u8fd9\u8f86\u8f66\u5728\u4e09\u6b21\u8bd5\u8dd1\u4e2d\u6709\u4e24\u6b21\u505c\u4e86\u4e0b\u6765\u3002\u5728\u7b2c\u4e09\u6b21\u5954\u8dd1\u4e2d\uff0c\u8f66\u8f86\u5728\u649e\u4e0a\u5047\u4eba\u8f66\u4e4b\u524d\u81f3\u5c11\u653e\u6162\u4e86\u901f\u5ea6\u3002\n\u5728\u540c\u4e00\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u4e00\u8f862019\u5e74\u7684\u5b9d\u9a6cX7\u5728\u6bcf\u4e09\u6b21\u8dd1\u6b65\u4e2d\u5c31\u6709\u4e00\u6b21\u505c\u4e86\u4e0b\u6765\uff0c\u800c\u4e00\u8f862020\u5e74\u7684\u8d77\u4e9aTelluride\u5728\u6240\u6709\u4e09\u6b2130\u82f1\u91cc\u6bcf\u5c0f\u65f6\u7684\u8dd1\u6b65\u4e2d\u90fd\u649e\u4e0a\u4e86\u5047\u4eba\u8f66\u3002\u4e24\u8f86\u8f66\u5728\u5176\u4ed6\u8d5b\u9053\u76f8\u649e\u4e4b\u524d\u90fd\u6709\u4e00\u4e9b\u51cf\u901f\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u8fd9\u4e09\u8f86\u8f66\u90fd\u6709\u4e00\u5b9a\u7684\u80fd\u529b\u6765\u68c0\u6d4b\u5373\u5c06\u53d1\u751f\u7684\u78b0\u649e\uff0c\u5e76\u81f3\u5c11\u51cf\u8f7b\u5b83\u4eec-\u8fd9\u4ee3\u8868\u7740\u5bf9\u65e9\u671f\u57fa\u4e8e\u96f7\u8fbe\u7684\u7cfb\u7edf\u7684\u6539\u8fdb\u3002\u4f46\u5b83\u4eec\u4e2d\u6ca1\u6709\u4e00\u4e2a\u8db3\u591f\u590d\u6742\uff0c\u80fd\u591f\u59cb\u7ec8\u5982\u4e00\u5730\u9632\u6b62\u4e0e\u505c\u653e\u7684\u6c7d\u8f66\u76f8\u649e\u3002\n\u8fd9\u4e3a\u7279\u65af\u62c9\u7684\u7c89\u4e1d\u4eec\u63d0\u4f9b\u4e86\u4e00\u70b9\u4f50\u8bc1\uff0c\u7279\u65af\u62c9\u56e0\u8fd9\u79cdADAS\u6545\u969c\u800c\u83b7\u5f97\u4e86\u6700\u591a\u7684\u5a92\u4f53\u5173\u6ce8\u3002Autopilot\u649e\u4e0a\u6df7\u51dd\u571f\u8f66\u9053\u5206\u9694\u7269(\u4e00\u8d77)\u6216\u4e00\u8f86\u534a\u8fc7\u9a6c\u8def(\u53e6\u5916\u4e24\u8d77)\uff0c\u81f3\u5c11\u6709\u4e09\u540d\u7279\u65af\u62c9\u8f66\u4e3b\u6b7b\u4ea1\u3002\u5176\u4ed6\u51e0\u8f86\u7279\u65af\u62c9\u6c7d\u8f66\u4e5f\u66fe\u4e0e\u505c\u653e\u7684\u8b66\u8f66\u6216\u6d88\u9632\u8f66\u53d1\u751f\u975e\u81f4\u547d\u78b0\u649e\u3002AAA\u7684\u6d4b\u8bd5\u6e05\u695a\u5730\u8868\u660e\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u4ec5\u9650\u4e8e\u7279\u65af\u62c9\u6c7d\u8f66\u7684\u95ee\u9898\u3002\n\u6211\u95ee\u7f8e\u56fd\u6c7d\u8f66\u534f\u4f1a(AAA&39\uff1b)\u9996\u5e2d\u6267\u884c\u5b98\u683c\u96f7\u683c\u00b7\u5e03\u5170\u519c(Greg Brannon)\uff0c\u4ed6\u662f\u5426\u77e5\u9053\u6d89\u53ca\u5176\u4ed6\u6c7d\u8f66\u54c1\u724c\u7684\u4e0eADAS\u76f8\u5173\u7684\u649e\u8f66\u4e8b\u6545\uff1b\u4ed6\u8bf4\u4ed6\u4e0d\u77e5\u9053\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u539f\u56e0\u3002\u4e5f\u8bb8Autopilot\u53ea\u662f\u5728\u5e02\u573a\u4e0a\u51fa\u73b0\u7684\u65f6\u95f4\u66f4\u957f\u3002\u6216\u8005\uff0c\u4e5f\u8bb8\u7279\u65af\u62c9\u7684\u649e\u8f66\u4e8b\u6545\u5f97\u5230\u4e86\u66f4\u591a\u7684\u5a92\u4f53\u62a5\u9053\uff0c\u800c\u6d89\u53ca\u5176\u4ed6\u6c7d\u8f66\u5236\u9020\u5546\u7684\u649e\u8f66\u4e8b\u6545\u4e5f\u6ca1\u6709\u5f15\u8d77\u6ce8\u610f\u3002\u5e03\u5170\u519c\u6307\u51fa\uff0c\u7f8e\u56fd\u56fd\u5bb6\u8fd0\u8f93\u5b89\u5168\u59d4\u5458\u4f1a(National Transportation Safety Board)\u5df2\u7ecf\u8c03\u67e5\u4e86\u51e0\u8d77\u6d89\u53ca\u7279\u65af\u62c9\u6c7d\u8f66\u4f7f\u7528\u81ea\u52a8\u9a7e\u9a76\u7684\u81f4\u547d\u649e\u8f66\u4e8b\u6545\u3002\u8be5\u673a\u6784\u4f3c\u4e4e\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u6d89\u53ca\u5176\u4ed6\u6c7d\u8f66\u5236\u9020\u5546ADAS\u6280\u672f\u7684\u8c03\u67e5\u3002\n\u672a\u6765\u51e0\u5e74\uff0c\u968f\u7740\u5176\u4ed6\u516c\u53f8\u9500\u552e\u8d8a\u6765\u8d8a\u591a\u5177\u6709\u81ea\u52a8\u9a7e\u9a76\u529f\u80fd\u7684\u6c7d\u8f66\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u6539\u53d8--\u56e0\u4e3a\u5176\u4ed6\u8f66\u578b\u4f3c\u4e4e\u4e0e\u7279\u65af\u62c9\u7684Autopilot\u6709\u7740\u76f8\u540c\u7684\u57fa\u672c\u9650\u5236\u3002\n\u505c\u8f66\u6d4b\u8bd5\u662f\u8fd9\u4e9bADAS\u7cfb\u7edf\u4e2d\u6700\u660e\u663e\u7684\u6545\u969c\u3002\u4f46AAA&39\uff1b\u7684\u6d4b\u8bd5\u8fdc\u8fdc\u8d85\u51fa\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u5728\u5c01\u95ed\u7684\u8d5b\u9053\u4e0a\uff0cAAA\u6d4b\u8bd5\u4e86\u65af\u5df4\u9c81\u3001\u5b9d\u9a6c\u548c\u8d77\u4e9a\u7684\u8f66\u8f86\u662f\u5426\u53ef\u4ee5\u7559\u5728\u81ea\u5df1\u7684\u8f66\u9053\u4e0a\uff0c\u5e76\u5728\u524d\u9762\u7684\u8f66\u8f86\u8e29\u5239\u8f66\u65f6\u505a\u51fa\u53cd\u5e94\u3002\u8fd9\u4e09\u8f86\u8f66\u90fd\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u4e86\u8fd9\u4e9b\u60c5\u51b5\u3002(\u540c\u6837\uff0c\u901a\u7528\u6c7d\u8f66\u548c\u798f\u7279\u6c7d\u8f66\u7684\u5730\u6805\u680f\u963b\u6b62\u4e86ADAS\u7684\u4ea4\u706b\u3002)\u3002\n\u7814\u7a76\u4eba\u5458\u8fd8\u5bf9\u8fd9\u4e94\u8f86\u6c7d\u8f66\u5728\u516c\u5171\u9ad8\u901f\u516c\u8def\u4e0a\u7684\u6027\u80fd\u8fdb\u884c\u4e86\u5b9a\u6027\u6d4b\u8bd5\u3002\u5728\u8d85\u8fc7800\u82f1\u91cc\u7684\u6d4b\u8bd5\u4e2d\uff0c\u5b9d\u9a6c\u3001\u798f\u7279\u3001\u8d77\u4e9a\u548c\u65af\u5df4\u9c81\u6c7d\u8f66\u7684\u53f8\u673a\u8fdb\u884c\u4e86\u6570\u5341\u6b21\u5e72\u9884-\u6700\u5e38\u89c1\u7684\u539f\u56e0\u662f\u8f66\u8f86\u4f3c\u4e4e\u504f\u79bb\u4e86\u8f66\u9053\u3002\n\u51ef\u8fea\u62c9\u514b\u7684\u8d85\u7ea7\u5de1\u6d0b\u8230\u5219\u4e0d\u540c\u3002\u5b83\u7684\u53f8\u673a\u5728800\u82f1\u91cc\u7684\u884c\u9a76\u4e2d\u53ea\u5e72\u9884\u4e868\u6b21\uff0c\u56e0\u4e3a\u4ed6\u4eec\u62c5\u5fc3\u8f66\u8f86\u6ca1\u6709\u6b63\u786e\u5730\u7559\u5728\u8f66\u9053\u4e0a\u3002\u7136\u800c\uff0c\u8be5\u7cfb\u7edf\u4f3c\u4e4e\u5bf9\u79ef\u6781\u4e3b\u52a8\u7684\u8131\u79bb\u8fc7\u4e8e\u4fdd\u5b88\u3002\u8d85\u7ea7\u5de1\u6d0b\u8230\u670937\u6b21\u610f\u5916\u6216\u9519\u8bef\u7684\u7cfb\u7edf\u8131\u79bb\u3002\nAAA\u7684\u62a5\u544a\u79f0\uff0c\u8bd5\u9a7e\u53f8\u673a\u6709\u65f6\u4f1a\u51fa\u5176\u4e0d\u610f\uff0c\u5728\u5371\u6025\u60c5\u51b5\u4e0b\u88ab\u8981\u6c42\u5728\u51e0\u4e4e\u6ca1\u6709\u63d0\u524d\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u91cd\u65b0\u83b7\u5f97\u5b8c\u5168\u63a7\u5236\u6743\u3002\n\u8d85\u7ea7\u5de1\u822a\u4e0e\u5927\u591a\u6570\u5176\u4ed6\u9a7e\u9a76\u8f85\u52a9\u7cfb\u7edf\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u9762\u5411\u7528\u6237\u7684\u6444\u50cf\u5934\u6765\u786e\u4fdd\u53f8\u673a\u4e13\u5fc3\u3002(\u65af\u5df4\u9c81\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7cfb\u7edf\uff0c\u540d\u4e3aDriverFocus\uff0c\u4f46\u5e03\u5170\u519c\u8868\u793a\uff0c\u53f8\u673a\u51e0\u4e4e\u6ca1\u6709\u770b\u5230\u6444\u50cf\u5934\u88ab\u4f7f\u7528\u7684\u8ff9\u8c61\u3002)\u3002\u51ef\u8fea\u62c9\u514b\u7684\u6444\u50cf\u5934\u76d1\u89c6\u53f8\u673a\u7684\u773c\u775b\uff0c\u5e76\u8bd5\u56fe\u4f30\u8ba1\u53f8\u673a\u662f\u5426\u5728\u6ce8\u610f\u9053\u8def\u3002AAA\u53d1\u73b0\u8fd9\u4e2a\u7cfb\u7edf\u8fdc\u4e0d\u5b8c\u7f8e\uff1b\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8d85\u7ea7\u5de1\u6d0b\u8230\u5f3a\u8feb\u53f8\u673a\u63a5\u624b\uff0c\u56e0\u4e3a\u5b83\u9519\u8bef\u5730\u8ba4\u4e3a\u53f8\u673a\u6ca1\u6709\u6ce8\u610f\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u51ef\u8fea\u62c9\u514b\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u53ef\u8bf4\u7684\uff0c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u79f0\u8d5e\u8fc7\u4e86\u3002\u8d85\u7ea7\u5de1\u6d0b\u8230\u5bf9\u81ea\u5df1\u7684\u80fd\u529b\u6301\u4fdd\u5b88\u6001\u5ea6\uff0c\u4e00\u6709\u9ebb\u70e6\u7684\u8ff9\u8c61\u5c31\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u53f8\u673a\u3002\u8fd9\u4e0d\u4ec5\u5c06\u7cfb\u7edf\u672c\u8eab\u51fa\u9519\u7684\u53ef\u80fd\u6027\u964d\u81f3\u6700\u4f4e\uff0c\u8fd8\u53ef\u80fd\u4fc3\u4f7f\u53f8\u673a\u66f4\u5bc6\u5207\u5730\u5173\u6ce8\u8f66\u8f86\u5728\u505a\u4ec0\u4e48\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0cAAA\u53d1\u73b0\u8d77\u4e9aTelluride\u5141\u8bb8\u7528\u6237\u5728\u4e0d\u63a5\u89e6\u65b9\u5411\u76d8\u7684\u60c5\u51b5\u4e0b\u884c\u9a76\u957f\u8fbe\u4e24\u5206\u949f\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4eea\u8868\u76d8\u6307\u793a\u5668\u5f88\u5bb9\u6613\u56e0\u4e3a\u56fe\u6807\u4e0d\u663e\u773c\u800c\u9057\u6f0f\uff0c\u8fd9\u9020\u6210\u4e86\u53f8\u673a\u53ef\u80fd\u4f1a\u5bf9ADAS\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u611f\u5230\u56f0\u60d1\u7684\u98ce\u9669\u3002\n\u65af\u5df4\u9c81\u5185\u9646\u8f7f\u8f66\u5728\u8131\u79bb\u8f66\u9053\u7684\u540c\u65f6\u4f1a\u9891\u7e41\u53d1\u51fa\u504f\u79bb\u8f66\u9053\u7684\u8b66\u544a\u3002\u8fd9\u79cd\u60c5\u51b5\u6709\u65f6\u4f1a\u53d1\u751f\u5728\u6025\u8f6c\u5f2f\u4e0a\uff0c\u5982\u679c\u53f8\u673a\u6ca1\u6709\u8fc5\u901f\u63a7\u5236\uff0c\u5c31\u4f1a\u589e\u52a0\u649e\u8f66\u7684\u98ce\u9669\u3002\n\u6700\u7ec8\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u90fd\u6ca1\u6709\u8d62\u5f97AAA\u8f66\u624b\u7684\u597d\u8bc4\u3002\u53f8\u673a\u62a5\u544a\u8bf4\uff0c\u7cfb\u7edf\u6709\u65f6\u4f1a\u589e\u52a0\u53f8\u673a\u7684\u5de5\u4f5c\u91cf\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u9700\u8981\u6301\u7eed\u7684\u76d1\u63a7\u548c\u5e72\u9884\u3002\n\u8fd9\u53ef\u80fd\u662f\u8fd9\u79cd\u9a7e\u9a76\u5458\u8f85\u52a9\u6280\u672f\u7684\u4e00\u4e2a\u57fa\u672c\u95ee\u9898\u3002ADAS\u5e94\u8be5\u5b8c\u6210\u5927\u90e8\u5206\u9a7e\u9a76\uff0c\u4f46\u4eba\u7c7b\u9a7e\u9a76\u5458\u5e94\u8be5\u4ecd\u7136\u76d1\u63a7\u7cfb\u7edf\uff0c\u5e76\u786e\u4fdd\u5b83\u4e0d\u4f1a\u51fa\u9519\u3002\u4f46\u662f\u6211\u4eec\u7684\u5927\u8111\u5e76\u4e0d\u9002\u5408\u8fd9\u79cd\u7a0b\u5ea6\u7684\u5355\u8c03\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u76d1\u6d4b\u4e00\u4e2a99%\u7684\u65f6\u95f4\u90fd\u6b63\u5e38\u5de5\u4f5c\u7684\u7cfb\u7edf\u6bd4\u81ea\u5df1\u5f00\u8f66\u66f4\u96be-\u800c\u4e0d\u662f\u66f4\u5bb9\u6613\u3002\u800c\u76d1\u6d4b\u4e00\u4e2a99.9%\u7684\u65f6\u95f4\u90fd\u6b63\u5e38\u5de5\u4f5c\u7684\u7cfb\u7edf\u5c31\u66f4\u96be\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5927\u8111\u66f4\u5bb9\u6613\u88ab\u5176\u4ed6\u4e8b\u60c5\u5206\u5fc3\u3002\n\u6211\u4e70\u4e86\u4e00\u8f862019\u5e74\u7684Bev\uff0c\u914d\u5907\u4e86\u5168\u5957\u9a7e\u9a76\u5458\u8f85\u52a9\u529f\u80fd\u3002\u6211\u7edd\u5bf9\u559c\u6b22\u5728\u9ad8\u901f\u516c\u8def\u4e0a\u957f\u9014\u884c\u9a76\u7684\u90a3\u79cd\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u51cf\u8f7b\u53f8\u673a\u7684\u75b2\u52b3\u3002\u4f46\u6211\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5728\u9047\u5230\u4ea4\u901a\u5835\u585e\u65f6\u5bc6\u5207\u6ce8\u610f\uff0c\u5e76\u5c06\u811a\u8e29\u5728\u5239\u8f66\u8e0f\u677f\u4e0a\uff0c\u56e0\u4e3a\u6c7d\u8f66\u6709\u65f6\u4f3c\u4e4e\u5bf9\u6211\u524d\u9762\u51cf\u901f/\u505c\u6b62\u7684\u4ea4\u901a\u53cd\u5e94\u8fdf\u7f13\u3002\u6211\u7528\u8fd9\u9879\u6280\u672f\u5f00\u8fc7\u7684\u6bcf\u4e00\u8f86\u8f66\u90fd\u662f\u8fd9\u6837\u3002\u4f60\u5fc5\u987b\u65f6\u523b\u4fdd\u6301\u8b66\u60d5\u3002\n\u6211\u5f00\u7684\u662f\u4e00\u8f862020\u6b3e\u5177\u6709\u8f66\u9053\u4fdd\u6301\u548c\u81ea\u9002\u5e94\u5de1\u822a\u529f\u80fd\u7684Escape\u6df7\u5408\u52a8\u529b\u8f66\uff0c\u8fd9\u5b8c\u5168\u53cd\u6620\u4e86\u6211\u7684\u7ecf\u5386\u3002\u8fd9\u4e2a\u7cfb\u7edf\u65e2\u5947\u602a\u5730\u4fdd\u5b88-\u9700\u8981\u5bf9\u65b9\u5411\u76d8\u65bd\u52a0\u592a\u5927\u7684\u538b\u529b\u624d\u80fd\u677e\u6563\u5730\u63e1\u4f4f\u5b83(\u5c31\u50cf\u4f60\u5728\u957f\u65f6\u95f4\u7684\u9ad8\u901f\u516c\u8def\u5ef6\u4f38\u4e0a\u6240\u505a\u7684\u90a3\u6837)-\u4f46\u5982\u679c\u9053\u8def\u7ebf\u610f\u5916\u6d88\u5931\uff0c\u6216\u8005\u5982\u679c\u80a9\u90e8\u9010\u6e10\u53d8\u7ec6\u5230\u783e\u77f3\uff0c\u4e5f\u6709\u51fa\u9519\u7684\u503e\u5411\u3002\u4e5f\u8bb8\u4e0d\u53ef\u9760\u662f\u4e00\u79cd\u5b89\u5168\u7279\u5f81\uff0c\u56e0\u4e3a\u6211\u4ece\u6765\u6ca1\u6709\u8db3\u591f\u4fe1\u4efb\u5b83\uff0c\u4e0d\u4f1a\u5728\u7cbe\u795e\u4e0a\u771f\u6b63\u4ece\u9a7e\u9a76\u4e2d\u89e3\u8131\u51fa\u6765\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4ecd\u7136\u4e00\u76f4\u5728\u9ad8\u901f\u516c\u8def\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\uff0c\u6ca1\u6709\u5b83\u4eec\u6211\u662f\u4e0d\u4f1a\u4e70\u8f66\u7684\u3002\n\u770b\u8d77\u6765\u8fd9\u4e9b\u539f\u59cb\u7684\u7cfb\u7edf\u5f88\u4e0d\u65b9\u4fbf\uff0c\u800c\u4e14\u6709\u4e9b\u5371\u9669\u3002\u4f46\u662f\uff0c\u6211\u771f\u6b63\u60f3\u77e5\u9053\u7684\u662f\uff0c\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\uff1a\u901a\u7528\u6c7d\u8f66\u548c\u798f\u7279\u6c7d\u8f66\u7684\u571f\u5de5\u6805\u680f\u963b\u6b62\u4e86ADAS\u7684\u63a5\u89e6\u2026\u2026\uff1f\n\u51ef\u8fea\u62c9\u514b/\u901a\u7528\u6c7d\u8f66\u5df2\u7ecf\u9884\u5148\u7ed8\u5236\u4e86\u5168\u7f8e20\u4e07\u82f1\u91cc\u7684\u9ad8\u901f\u516c\u8def\u5730\u56fe\u3002\u8d85\u7ea7\u90ae\u8f6e\u53ea\u5728\u8fd9\u4e9b\u9884\u5148\u7ed8\u5236\u597d\u5730\u56fe\u7684\u9053\u8def\u4e0a\u884c\u9a76\u3002\u8fd9\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7cfb\u7edf\u4e0d\u592a\u53ef\u80fd\u88ab\u4ee5\u524d\u4ece\u672a\u9047\u5230\u8fc7\u7684\u65b0\u60c5\u51b5\u641e\u7cca\u6d82\u3002\u6211\u5bf9\u798f\u7279\u7cfb\u7edf\u4e86\u89e3\u8f83\u5c11\uff0c\u4f46\u6211\u60f3\u90a3\u91cc\u7684\u60c5\u51b5\u4e5f\u5dee\u4e0d\u591a\u3002", "note_en": "In recent years, a number of car companies have\u2014like Tesla\u2014begun offering driver assistance systems that offer lane-keeping as well as adaptive cruise control. This might seem like a big step toward a &#34;self-driving car,&#34; since a system like this can travel down the freeway for miles without human intervention.\u00a0But a  new report\u00a0from AAA underscores the limitations of these systems.\n Its most dramatic finding: the advanced driver-assistance systems (ADAS) on the latest cars still struggle to avoid collisions with parked vehicles.\u00a0They tested cars from BMW, Kia, and Subaru; none consistently avoided running into a fake car partially blocking the travel lane.\n The researchers also examined the ADAS in the Cadillac CT6 and the Ford Edge, but\u00a0these cars&#39; systems weren&#39;t included in the parked-vehicle test because their driver assistance systems wouldn&#39;t engage on AAA&#39;s closed course. They were included in other tests conducted on public highways.\n &#34;All test drivers reached a general consensus that combining adaptive cruise and lane-keeping functionalities in a single system did not consistently enhance the driving experience,&#34; the report said. The vehicles made mistakes often enough that drivers often found the experience nerve-wracking rather than relaxing.\n Greg Brannon, a co-author of the AAA report, argues that a fundamental challenge with this kind of system is the need to maintain alertness. Human beings are terrible at paying continued attention behind the wheel of a car that mostly drives itself. So when (not if) these vehicles make a mistake, there&#39;s a heightened risk that the driver won&#39;t be paying close enough attention to recover safely.\n   You might think that cars with adaptive cruise control or emergency braking capabilities would be able to stop for parked cars and other obstacles in the roadway. But often they fail to do so. To see why, it&#39;s helpful to understand a bit about how these systems work.\n Most of the early adaptive cruise control systems sold 10 to 20 years ago were based on radar. And as we  explained two years ago, radar has some important limitations:\n Radar has low angular resolution, so it had only a crude idea of the environment around the vehicle. What radar is quite good at, however, is figuring out how fast objects are moving. And so a key strategy for making the technology work was to ignore anything that wasn&#39;t moving. A car&#39;s radar will detect a lot of stationary objects located somewhere ahead of the car: these might be trees, parked cars, bridges, overhead signs, and so forth.\n These systems were designed to work on controlled-access freeways, and, in the vast majority of cases, stationary objects near a freeway would be on the side of the road (or suspended above it) rather than directly in the car&#39;s path. Early adaptive cruise control systems simply didn&#39;t have the capability to distinguish the vast majority of objects that were\u00a0 near\u00a0the road from the tiny minority that were\u00a0 on\u00a0the road.\n So cars were programmed to focus on maintaining a safe distance from other moving objects\u2014cars\u2014and to ignore stationary objects. Designers assumed it would still be the job of the human driver to pay attention to the road and intervene if there was an obstacle directly in the roadway.\n Today&#39;s driver assistance systems are more sophisticated than early systems that came on the market 10 or 20 years ago. They&#39;re no longer just radar-based; most have cameras, and, presumably, they try to use both radar and cameras to identify potential objects in the road ahead.\n And indeed, the newest cars do seem to do better on this score than past systems. The best system AAA tested in this respect was a 2020 Subaru Outback. AAA performed three test runs on the Outback with a starting speed of 30 miles per hour. The vehicle stopped in two out of three test runs. In the third run, the vehicle at least slowed down before striking the dummy car.\n On the same test, a 2019 BMW X7 stopped in one out of three runs, while a 2020 Kia Telluride hit the dummy vehicle in all three 30mph runs. Both cars decelerated somewhat prior to impact in the other runs.\n In other words, all three vehicles have  some capacity to detect imminent collisions and at least mitigate them\u2014which represents an improvement over early radar-based systems. But none of them was sophisticated enough to consistently prevent crashes with parked cars.\n   This provides a bit of vindication for fans of Tesla, which has gotten the most media attention for this kind of ADAS failure. At least three Tesla owners have  died when Autopilot crashed into a concrete lane divider (in one case) or a  semi crossing the road (in two others). Several other Tesla cars have had non-fatal crashes into parked police cars or fire trucks. AAA&#39;s tests make it clear that this isn&#39;t a problem that&#39;s limited only to Tesla vehicles.\n I asked AAA&#39;s\u00a0Greg Brannon if he knew of ADAS-related crashes involving other car brands; he said he didn&#39;t. It&#39;s not clear why. Perhaps Autopilot has simply been on the market longer. Or maybe Tesla crashes get more media coverage, and crashes involving other automakers have flown under the radar. Brannon noted that the National Transportation Safety Board has investigated several fatal crashes involving Tesla vehicles using Autopilot. The agency doesn&#39;t seem to have conducted any investigations involving other carmakers&#39; ADAS technology.\n That may change in the coming years as other companies sell more and more cars with Autopilot-like capabilities\u2014since other car models seem to have the same basic limitation as Tesla&#39;s Autopilot.\n   The parked car test was the most clear-cut failure of these ADAS systems. But AAA&#39;s testing went far beyond that scenario. On its closed course, AAA tested whether the Subaru, BMW, and Kia vehicles could stay in their lanes and respond when a vehicle ahead hit the brakes. All three cars handled these situations with little difficulty. (Again, cars from GM and Ford had geofences that prevented the ADAS from engaging.)\n The researchers also performed qualitative testing of the five cars&#39; performance on public highways. Over 800 miles of testing, drivers in the BMW, Ford, Kia, and Subaru cars intervened dozens of times\u2014most often because the vehicle seemed to be drifting out of its lane.\n Cadillac&#39;s Super Cruise was different. Its drivers intervened only eight times in 800 miles of driving over concerns that the vehicle wasn&#39;t staying in its lane properly. However, the system seemed overly conservative about proactive disengagement. There were 37 times when Super Cruise had &#34;unexpected or erroneous system disengagements.&#34;\n &#34;Test drivers were sometimes taken by surprise and were required to retake full control in the middle of critical situations with little to no advance notice,&#34; the AAA report says.\n Super Cruise is different from most other driver assistance systems because it uses a user-facing camera to ensure drivers are paying attention. (Subaru has a similar system called  DriverFocus, but\u00a0Brannon said drivers saw little indication the camera was being used.) The Cadillac&#39;s camera monitored the driver&#39;s eyes and tried to estimate whether the driver was paying attention to the road. AAA found that this system was far from perfect; on a number of occasions, Super Cruise forced the driver to take over because it wrongly thought the driver wasn&#39;t paying attention.\n All that said, there&#39;s a lot to be said for Cadillac&#39;s approach, which we&#39;ve  praised before. Super Cruise is conservative about its own capabilities, handing back control to the driver at the first sign of trouble. This not only minimizes the chances that the system itself will make a mistake, it may also prompt drivers to pay closer attention to what the vehicle is doing.\n   By contrast, AAA found the Kia Telluride allowed users to go as long as two minutes without touching the steering wheel. Even worse, dashboard indicators were &#34;easy to miss due to inconspicuous icons,&#34; creating the risk that drivers could become confused about whether the ADAS was active.\n The Subaru Outback would &#34;frequently issue a lane departure warning while disengaging simultaneously.&#34; This would sometimes occur on a sharp curve, creating a heightened risk of a crash if the driver didn&#39;t take control quickly.\n Ultimately, none of these systems earned rave reviews from AAA&#39;s drivers. Drivers reported that the systems &#34;could sometimes increase perceived driver workload because constant monitoring and intervention in many cases was required.&#34;\n This may be a fundamental problem with this approach to driver assistance technology. The ADAS is supposed to do most of the driving, but the human driver is supposed to still monitor the system and make sure it doesn&#39;t make mistakes. But our brains aren&#39;t wired for this level of monotony. Monitoring a system that works correctly 99 percent of the time is in some ways harder\u2014not easier\u2014than just driving the car yourself. And monitoring a system that works correctly 99.9 percent of the time is even harder, because it&#39;s that much easier for our brains to get distracted by something else.\n  I&#39;ve got a 2019 BEV with the full suite of driver assist. I absolutely love that stuff for long highway drives, as it reduces driver fatigue. But I have learned to play close attention when coming up on a traffic jam and have my foot on the brake pedal, as the car sometimes seems slow to react to slowed/stopped traffic in front me. That&#39;s been the case with every car I&#39;ve driven with that tech.   You must always remain vigilant.\n  I drive a 2020 Escape hybrid with lane keeping and adaptive cruise, and this mirrors my experience completely. The system is both weirdly conservative - needing too much pressure on the wheel to just loosely hold it (like you would on long highway stretches) - but also has a tendency to make mistakes if road lines disappear unexpectedly or if the shoulder tapers off to gravel.   Maybe being unreliable is a safety feature, since I never trust it enough to really disengage mentally from driving.   All of that said though, I still use those features all the time for highway driving and wouldn&#39;t buy a car without them.\n  Seems like these primitive systems are inconvenient and somewhat dangerous.   But, what I want to really know is, what does this mean precisely and exactly:  &#34;...cars from GM and Ford had geofences that prevented the ADAS from engaging...&#34;?\n  Cadillac/GM has pre-mapped 200,000 miles of roads of highways around the US. Super Cruise only engages on these pre-mapped roads. This improves safety because it makes it less likely the system will get confused by a new situation it hasn&#39;t encountered before. I know less about the Ford system but I assume the situation is similar there.", "posttime": "2020-08-07 21:56:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u505c\u7559,cars,\u7cfb\u7edf", "title": "\u65b0\u8f66\u53ef\u4ee5\u505c\u7559\u5728\u81ea\u5df1\u7684\u8f66\u9053\u4e0a-\u4f46\u53ef\u80fd\u4e0d\u4f1a\u4e3a\u505c\u653e\u7684\u6c7d\u8f66\u505c\u8f66", "title_en": "New cars can stay in their lane\u2013but might not stop for parked cars", "transed": 1, "url": "https://arstechnica.com/cars/2020/08/new-cars-can-stay-in-their-lane-but-might-not-stop-for-parked-cars/", "via": "", "real_tags": ["\u505c\u7559", "cars", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "1d57025fe377ace6828a057cce423dc3.jpg", "infoid": 1016864, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f17\u91cc\u8499\u7279(KPIX)-\u5f17\u91cc\u8499\u7279\u7684\u4e00\u540d\u623f\u4e1c\u6700\u8fd1\u53d1\u73b0\uff0c\u4ed6\u7684\u623f\u4ea7\u5728Airbnb\u4e0a\u88ab\u975e\u6cd5\u51fa\u79df\uff0c\u4f46\u5dde\u548c\u5730\u65b9\u6682\u505c\u9a71\u9010\u4ee4\u963b\u6b62\u4ed6\u62ff\u56de\u81ea\u5df1\u7684\u623f\u5b50\u3002\n\u201c\u6211\u5f88\u751f\u6c14\uff0c\u201d\u623f\u4e3b\u963f\u7ef4\u7eb3\u4ec0\u00b7\u8d3e(Avinash Jha)\u8bf4\uff0c\u4ed6\u4ece\u90bb\u5c45\u90a3\u91cc\u53d1\u73b0\uff0c\u4ed6\u7684\u623f\u5b50\u5728\u672a\u7ecf\u4ed6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5728Airbnb\u4e0a\u88ab\u51fa\u79df\u3002\nJha\u548c\u4ed6\u7684\u59bb\u5b50Ami Shah\u5728\u5f17\u91cc\u8499\u7279\u7684Gable Drive\u4e0a\u62e5\u6709\u4e00\u5957\u623f\u5b50\u3002\u4ed6\u4eec\u7684\u623f\u5ba2\u7433\u8fbe(Linda)\u5141\u8bb8\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4eba\u540c\u65f6\u4f4f\u5728\u90a3\u91cc\uff0c\u8fdd\u53cd\u4e86\u5f17\u91cc\u8499\u7279\u5e02\u7684\u6cd5\u5f8b\u3002\u56e0\u4e3a\u65b0\u51a0\u80ba\u708e\u9020\u6210\u7684\u56f0\u96be\uff0c\u5979\u57283\u6708\u4efd\u8981\u6c42\u4ed6\u4eec\u6bcf\u6708\u51cf\u5c11\u5979500\u7f8e\u5143\u7684\u623f\u79df\uff0c\u4ed6\u4eec\u540c\u610f\u964d\u4f4e\u623f\u79df\uff0c\u73b0\u5728\u540e\u6094\u4e86\u3002\n\u6c99\u963f\u8bf4\uff1a\u201c\u4ed6\u4eec\u4ece\u6211\u4eec\u7684\u623f\u5b50\u91cc\u8d5a\u94b1\uff0c\u5374\u4e0d\u7ed9\u6211\u4eec\u4ed8\u623f\u79df\uff0c\u65e0\u8bba\u4ece\u54ea\u4e2a\u89d2\u5ea6\u770b\uff0c\u8fd9\u90fd\u6709\u70b9\u75af\u72c2\u3002\u201d\nJha\u8bf4\uff1a\u201c\u4e0d\u662f\u6709\u4eba\u53d7\u5230COVID\u7684\u5f71\u54cd\uff0c\u800c\u662f\u6709\u4eba\u5728\u5229\u7528\u8fd9\u79cd\u60c5\u51b5\u3002\u201d\n\u5c71\u5899\u5927\u9053\u4e0d\u662f\u7433\u8fbe\u552f\u4e00\u7684\u8d22\u4ea7\u3002KPIX 5\u8bc1\u5b9e\uff0c\u5979\u5728\u9644\u8fd1\u7684Via San Carlos\u4e0a\u8fd8\u6709\u53e6\u4e00\u4e2a\u623f\u6e90\u3002\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u7684\u578b\u53f7\u3002\u6bcf\u4e2a\u623f\u95f4\u90fd\u662f\u5355\u72ec\u79df\u7684\uff0c\u6bcf\u665a\u5927\u7ea650\u7f8e\u5143\u3002\u90bb\u5c45\u4eec\u5bf9\u8fd9\u4e48\u591a\u4eba\u5728\u8fd9\u6bb5\u4e0d\u786e\u5b9a\u7684\u65f6\u95f4\u91cc\u6765\u6765\u53bb\u53bb\u611f\u5230\u4e0d\u6ee1\u3002\n\u201c\u6709200\u6b21\u5ba1\u67e5\uff0c\u5728\u6574\u4e2a\u5927\u6d41\u884c\u671f\u95f4\uff0c\u6709\u6570\u767e\u4eba\u8fdb\u8fdb\u51fa\u51fa\uff0c\u8fd9\u5bf9\u793e\u533a\u6765\u8bf4\u4e0d\u5b89\u5168\uff0c\u201dJha\u8bf4\u3002\n\u7433\u8fbe\u8f6c\u79df\u4e86\u5c71\u5899\u5927\u9053\u7684\u5bb6\uff0c\u8fd9\u8fdd\u53cd\u4e86\u5979\u7684\u79df\u7ea6\uff0c\u8fd9\u662f\u9a71\u9010\u7684\u7406\u7531\uff0c\u4f46\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u5f17\u91cc\u8499\u7279\u5b9e\u65bd\u4e86\u6682\u505c\u9a71\u9010\u7684\u89c4\u5b9a\u3002\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u4e5f\u662f\u5982\u6b64\u3002\n\u6cd5\u9662\u6ca1\u6709\u5ba1\u7406\u4efb\u4f55\u975e\u6cd5\u62d8\u7559\u7684\u6848\u4ef6\uff0c\u5373\u4f7f\u662f\u623f\u4e1c\u53ef\u4ee5\u8bc1\u660e\u79df\u6237\u6ca1\u6709\u53d7\u5230\u75c5\u6bd2\u5f71\u54cd\u7684\u6848\u4ef6\u3002\n\u6258\u5fb7\u00b7\u7f57\u65af\u5df4\u5fb7(Todd Rothbard)\u8bf4\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4ed3\u4fc3\u5236\u5b9a\u7684\u7acb\u6cd5\u662f\u5982\u4f55\u4ea7\u751f\u610f\u60f3\u4e0d\u5230\u7684\u3001\u786e\u5b9e\u4e0d\u53ef\u63a5\u53d7\u7684\u7ed3\u679c\u7684\u3002\u201d\n\u7f57\u65af\u5df4\u5fb7\u662f\u4e00\u540d\u5f8b\u5e08\uff0c\u5e2e\u52a9\u623f\u4e1c\u5b8c\u6210\u9a71\u9010\u8fc7\u7a0b\u3002\u4ed6\u8bf4\uff0c\u8fd9\u6837\u7684\u6848\u4ef6\u5728\u5168\u5dde\u5404\u5730\u90fd\u5728\u53d1\u751f\u3002\n\u7f57\u65af\u5df4\u5fb7\u8bf4\uff1a\u201c\u6211\u6bcf\u5929\u90fd\u4f1a\u6536\u5230\u5341\u51e0\u4e2a\u8fd9\u6837\u7684\u6545\u4e8b\uff0c\u800c\u4e14\u8fd8\u4f1a\u66f4\u7cdf\u3002\u201d\n\u4ed6\u62c5\u5fc3\u6682\u505c\u9a71\u9010\u4f1a\u5bf9\u6574\u4e2a\u623f\u5730\u4ea7\u5e02\u573a\u4ea7\u751f\u957f\u671f\u7684\u3001\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\u3002\n\u201c\u6700\u574f\u7684\u60c5\u51b5\u662f\u4e1a\u4e3b\u4f1a\u653e\u5f03\u4ed6\u4eec\u7684\u7269\u4e1a\u3002\u4ed6\u4eec\u8d1f\u62c5\u4e0d\u8d77\uff0c\u4ed6\u4eec\u4e0d\u80fd\u7ef4\u6301\uff0c\u4ed6\u4eec\u4e0d\u80fd\u652f\u4ed8\u8d22\u4ea7\u7a0e\uff0c\u6240\u4ee5\u653f\u5e9c\u7684\u8d44\u91d1\u5c06\u88ab\u5265\u593a\uff0c\u6240\u6709\u8fd9\u4e9b\u5f71\u54cd\u90fd\u4f1a\u53d1\u751f\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u201c\u7f57\u65af\u5df4\u5fb7\u8bf4\u3002\n\u4ed6\u8bf4\uff0c\u6c99\u963f\u548c\u8d3e\u54c8\u8981\u60f3\u56de\u5bb6\u5c06\u662f\u201c\u5728\u8fd9\u4e2a\u65f6\u671f\u975e\u5e38\u975e\u5e38\u56f0\u96be\u7684\u3002\u201d\nKPIX5\u5728\u5c4b\u5916\u9047\u5230\u4e86\u7433\u8fbe\uff0c\u5979\u62d2\u7edd\u4e86\u6211\u4eec\u7684\u91c7\u8bbf\u8bf7\u6c42\u3002\u5979\u8bc1\u5b9e\uff0c\u5979\u6ca1\u6709\u83b7\u5f97\u5728Airbnb\u4e0a\u51fa\u79df\u8fd9\u4e24\u5957\u623f\u5b50\u7684\u8bb8\u53ef\uff0c\u4f46\u5979\u8bf4\uff0c\u5979\u548c\u5979\u7684\u4e08\u592b\u5728\u5927\u6d41\u884c\u671f\u95f4\u8fc7\u5f97\u5f88\u8270\u96be\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u5979\u5df2\u7ecf\u5220\u9664\u4e86\u623f\u6e90\uff0c\u4f46Airbnb\u7684\u79df\u6237\u4ecd\u7136\u4f4f\u5728\u90a3\u91cc\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8d3e\u54c8\u548c\u6c99\u963f\u6b63\u88ab\u8feb\u7f29\u51cf\u89c4\u6a21\u3002\u7531\u4e8e\u8981\u7ef4\u6301\u6602\u8d35\u7684\u62b5\u62bc\u8d37\u6b3e\uff0c\u4ed6\u4eec\u5c06\u4e00\u5bb6\u56db\u53e3\u642c\u5230\u9644\u8fd1\u7684\u4e00\u5957\u4e24\u5c45\u5ba4\u516c\u5bd3\u91cc\uff0c\u5e0c\u671b\u6709\u4e00\u5929\u4ed6\u4eec\u5f88\u5feb\u5c31\u80fd\u83b7\u51c6\u642c\u8fdb\u81ea\u5df1\u7684\u623f\u5b50\u3002\n\u6c99\u963f\u8bf4\uff1a\u201c\u6211\u4eec\u6bcf\u665a\u90fd\u9192\u7740\uff0c\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u4f60\u77e5\u9053\uff0c\u8fd9\u80af\u5b9a\u4f1a\u9020\u6210\u5f88\u5927\u7684\u60c5\u7eea\u538b\u529b\u3002\u201d\n\u5728Airbnb\u4e0a\u6ce8\u518c\u4e3b\u673a\u65f6\uff0c\u623f\u4e1c\u540c\u610f\u9075\u5b88Airbnb\u7684\u793e\u533a\u6807\u51c6\uff0c\u8be5\u6807\u51c6\u7981\u6b62\u672a\u7ecf\u5141\u8bb8\u4f7f\u7528\u67d0\u4eba\u7684\u8d22\u4ea7\uff0c\u6211\u4eec\u975e\u5e38\u8ba4\u771f\u5730\u5bf9\u5f85\u8fd9\u4e9b\u6295\u8bc9\u3002", "note_en": "FREMONT (KPIX) \u2014 A Fremont landlord recently found out his property was being illegally rented out on Airbnb but state and local eviction moratoriums are preventing him from getting his house back.\n \u201cI was furious,\u201d said Avinash Jha, the homeowner about finding out from a neighbor that his home was being rented out on Airbnb without his permission.\n Jha and his wife Ami Shah own a home on Gable Drive in Fremont. Their tenant, Linda, is violating Fremont city law by allowing more than two people to stay there at a time. She asked them to reduce her rent back in March by $500 a month because of hardships caused by COVID-19, they agreed to lower the rent and now regret it.\n \u201cThey\u2019re making money off our house and not paying us the rent, it\u2019s kind of like crazy in every which way you look at,\u201d Shah said.\n \u201cIt\u2019s not somebody who is impacted by COVID, but somebody who is taking advantage of the situation,\u201d Jha said.\n Gable Drive isn\u2019t isn\u2019t Linda\u2019s only property. KPIX 5 confirmed she has another listing nearby on Via San Carlos. It\u2019s a similar model. Each room is rented individually and goes for about $50 a night. Neighbors are unhappy that so many people have been coming and going during this uncertain time.\n \u201cThere were 200 reviews and throughout the pandemic there are hundreds of people moving in and out, it\u2019s not safe for the community,\u201d Jha said.\n By subletting the Gable Drive home Linda is in violation of her lease which is grounds for eviction, but because of the pandemic, Fremont put in place an eviction moratorium. So did the state of California.\n The courts are not hearing any unlawful detainer cases, even ones where the landlord can prove the tenant is not impacted by the virus.\n \u201cThis is a classic example of how hastily thought out legislation produces unintended and really unacceptable results,\u201d Todd Rothbard said.\n Rothbard is an attorney who helps landlords through the eviction process. He says cases like this are happening all across the state.\n \u201cI get more than a dozen stories like this every day and a lot worse,\u201d Rothbard said.\n He\u2019s worried the eviction moratorium will have long term, unintended consequences for the housing market as a whole.\n \u201cThe worst case scenario is that property owners will abandon their properties. They can\u2019t afford them, they can\u2019t maintain them, they can\u2019t pay the property taxes so the government will be deprived of funds, all of these impacts will occur the longer this goes on,\u201d Rothbard said.\n He says for Shah and Jha to get their home back will be, \u201cvery, very difficult in these times.\u201d\n KPIX 5 ran into Linda outside the home and she declined our request for an interview. She confirmed that she didn\u2019t have permission to rent out either home on Airbnb but says she and her husband are having a hard time during the pandemic. She has since taken the listings down, but Airbnb renters are still staying there.\n Meanwhile Jha and Shah are being forced to downsize. With an expensive mortgage to maintain they\u2019re moving their family of four to a two bedroom condo nearby hoping someday soon they\u2019ll be allowed to move into their own home.\n \u201cAll nights that we are awake, it\u2019s because of this, you know, it\u2019s causing a lot of emotional stress for sure,\u201d Shah said.\n  When signing up to host on Airbnb, hosts agree to abide by Airbnb\u2019s Community Standards, which prohibits the use of someone\u2019s property without their permission, and we take these complaints very seriously.", "posttime": "2020-08-07 19:27:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5669\u68a6\u822c,moratorium,airbnb", "title": "\u6682\u505c\u9a71\u9010\u7ed9\u5c0f\u623f\u4e1c\u5e26\u6765\u4e86\u5669\u68a6\u822c\u7684\u573a\u666f", "title_en": "Eviction Moratorium Poses Nightmare Scenario for Small Landlord", "transed": 1, "url": "https://sanfrancisco.cbslocal.com/2020/08/06/eviction-moratorium-poses-nightmare-scenario-for-small-landlord/", "via": "", "real_tags": ["\u5669\u68a6\u822c", "airbnb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016862, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece2020\u5e748\u670813\u65e5\u5f00\u59cb\uff0c\u65b0\u7684\u8c37\u6b4c\u7f51\u7ad9\u5c06\u6210\u4e3a\u7f51\u7ad9\u521b\u5efa\u7684\u9ed8\u8ba4\u7f51\u7ad9\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u8fd9\u6837\u505a\uff0c\u4f5c\u4e3a\u4f20\u7edf\u7ad9\u70b9\u8fc7\u6e21\u7684\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4e3a\u60a8\u7684\u9876\u7ea7\u7ec4\u7ec7\u4e2d\u5c1a\u672a\u62e5\u6709\u8bbf\u95ee\u6743\u9650\u7684\u6240\u6709\u7528\u6237\u7ec4\u542f\u7528\u65b0\u7ad9\u70b9\u3002\n\u60a8\u7684\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u5207\u6362\u56de\u7ecf\u5178\u7ad9\u70b9\u3002\u4f7f\u7528\u65e8\u5728\u652f\u6301\u7ba1\u7406\u5458\u548c\u7528\u6237\u7b80\u5316\u8fc1\u79fb\u5230\u65b0Google\u7ad9\u70b9\u7684\u6d41\u7a0b\u7684\u63a7\u5236\u53f0\uff1aClassic Sites Manager\uff0c\u57282021\u5e7412\u6708\u4e4b\u524d\u5c06\u73b0\u6709\u7684\u7ecf\u5178\u7ad9\u70b9\u8fc1\u79fb\u5230\u65b0\u7ad9\u70b9\u3002\n\u9664\u4e86\u57282021\u5e7412\u6708\u4e4b\u524d\u8fc1\u79fb\u73b0\u6709\u4f20\u7edf\u7ad9\u70b9\u4e4b\u5916\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u5173\u952e\u65e5\u671f\u6765\u89c4\u5212\u548c\u7ba1\u7406\u60a8\u7684\u7ec4\u7ec7\u4ece\u4f20\u7edf\u7ad9\u70b9\u7684\u8fc1\u79fb\u3002\n2020\u5e748\u6708\uff1a\u4ece2021\u5e745\u6708\u5f00\u59cb\uff0c\u65b0\u7f51\u7ad9\u6210\u4e3a\u7f51\u7ad9\u521b\u5efa\u7684\u9ed8\u8ba4\u9009\u9879\uff1a\u4e0d\u80fd\u5728\u7ecf\u5178\u7f51\u7ad9\u4e2d\u521b\u5efa\u7f51\u7ad9\u65b0\u7f51\u7ad9\u53ea\u80fd\u5728\u65b0\u7f51\u7ad9\u4e2d\u521b\u5efa\u3002\u6b64\u9650\u5236\u5305\u62ec\u590d\u5236\u73b0\u6709\u7ad9\u70b9\u3001\u4f7f\u7528\u7ad9\u70b9API\u521b\u5efa\u7ad9\u70b9\u6216\u5728\u4f20\u7edf\u7ad9\u70b9\u4e2d\u521b\u5efa\u4efb\u4f55\u5176\u4ed6\u5f62\u5f0f\u7684\u7ad9\u70b9\u3002\n\u8981\u786e\u4fdd\u60a8\u7684\u7ec4\u7ec7\u5e73\u7a33\u8fc7\u6e21\uff0c\u8bf7\u5c3d\u5feb\u5728Google\u7ba1\u7406\u63a7\u5236\u53f0\u4e2d\u5173\u95ed\u521b\u5efa\u7ecf\u5178\u7ad9\u70b9\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c11\u60a8\u7684\u7ec4\u7ec7\u5fc5\u987b\u8fc1\u79fb\u7684\u4f20\u7edf\u7ad9\u70b9\u6570\u91cf\u3002\n\u4ece2021\u5e7410\u6708\u5f00\u59cb\uff1a\u5176\u4f59\u7ecf\u5178\u7f51\u7ad9\u7684\u7f16\u8f91\u5c06\u88ab\u7981\u7528\uff0c\u7f51\u7ad9\u7f16\u8f91\u4e0d\u80fd\u5bf9\u5176\u7ecf\u5178\u7f51\u7ad9\u8fdb\u884c\u66f4\u6539\u3002\u89c2\u4f17\u4ecd\u7136\u53ef\u4ee5\u6d4f\u89c8\u7ecf\u5178\u7f51\u7ad9\u3002\n2020\u5e74\u665a\u4e9b\u65f6\u5019\uff0c\u7ecf\u5178\u7f51\u7ad9\u7ba1\u7406\u5668(Classic Sites Manager)\u5c06\u63d0\u4f9b\u4e00\u9879\u529f\u80fd\uff0c\u5e2e\u52a9\u7ba1\u7406\u5458\u7981\u6b62\u7f16\u8f91\u7ecf\u5178\u7f51\u7ad9\u3002\u4e00\u65e6\u8be5\u529f\u80fd\u53ef\u7528\uff0c\u5c31\u7acb\u5373\u4f7f\u7528\u5b83\u6765\u786e\u4fdd\u7528\u6237\u4ece\u7ecf\u5178\u7ad9\u70b9\u5e73\u7a33\u8fc7\u6e21\u3002\n\u4ece2021\u5e7412\u6708\u5f00\u59cb\uff1a\u7ecf\u5178\u7f51\u7ad9\u8fc7\u6e21\u5f53\u7528\u6237\u8bd5\u56fe\u8bbf\u95ee\u7ecf\u5178\u7f51\u7ad9\u65f6\uff0c\u4ed6\u4eec\u5c06\u770b\u4e0d\u5230\u7f51\u7ad9\u5185\u5bb9\u3002\u5176\u4f59\u7684\u7ecf\u5178\u7ad9\u70b9\u5c06\u81ea\u52a8\u4e0b\u8f7d\u4e3aHTML\u6587\u4ef6\uff0c\u4fdd\u5b58\u5230\u7ad9\u70b9\u6240\u6709\u8005\u7684\u9a71\u52a8\u5668(\u5728Google Drive\u4e2d)\uff0c\u5e76\u66ff\u6362\u4e3a\u4f9b\u7ad9\u70b9\u6240\u6709\u8005\u67e5\u770b\u548c\u53d1\u5e03\u7684\u65b0\u7ad9\u70b9\u8349\u7a3f\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u8be5\u7ad9\u70b9\u5bf9\u67e5\u770b\u8005\u53ef\u7528\uff0c\u8bf7\u57282021\u5e7412\u6708\u4e4b\u524d\u4f7f\u7528\u7ecf\u5178\u7ad9\u70b9\u7ba1\u7406\u5668\u6216\u7ad9\u70b9\u8bbe\u7f6e\u5c06\u5176\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u3002\u4f7f\u7528\u6b64\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u5c06\u65b0\u7ad9\u70b9\u53d1\u5e03\u5230\u4e0e\u65e7\u7ad9\u70b9\u76f8\u540c\u7684URL\uff0c\u4ee5\u907f\u514d\u4e2d\u65ad\u67e5\u770b\u8005\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5c06\u4f20\u7edf\u7ad9\u70b9\u79fb\u690d\u5230\u65b0\u7ad9\u70b9\u3002\n\u5f00\u59cb\u89c4\u5212\u53d8\u66f4\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u7ec4\u7ec7\u5e73\u7a33\u8fc7\u6e21\u3002\u8bf7\u67e5\u770b\u4e0b\u9762\u7684\u65e5\u671f\u4ee5\u53ca\u60a8\u4f5c\u4e3a\u7ba1\u7406\u5458\u5e94\u5728\u8fd9\u4e9b\u65e5\u671f\u4e4b\u524d\u91c7\u53d6\u7684\u5efa\u8bae\u64cd\u4f5c\u3002\n2020\u5e748\u6708\uff1a\u5728\u7ba1\u7406\u63a7\u5236\u53f0\u4e2d\u4e3a\u6bcf\u4e2a\u4eba\u542f\u7528\u5728\u65b0\u7ad9\u70b9\u4e2d\u521b\u5efa\u7ad9\u70b9\u3001\u67e5\u770b\u65e7\u7ad9\u70b9\u548c\u8ba1\u5212\u8fc1\u79fb\u4ee5\u53ca\u5728\u65b0\u7ad9\u70b9\u4e2d\u521b\u5efa\u7ad9\u70b9\u3002\u7528\u6237\u53ef\u4ee5\u57282021\u5e7412\u6708\u4e4b\u524d\u5207\u6362\u56de\u7ecf\u5178\u7f51\u7ad9\u3002\n\u4f7f\u7528\u4f20\u7edf\u7ad9\u70b9\u7ba1\u7406\u5668\uff0c\u68c0\u67e5\u60a8\u7684\u7ec4\u7ec7\u4e2d\u6709\u591a\u5c11\u4f20\u7edf\u7ad9\u70b9\uff0c\u5e76\u5236\u5b9a\u8fc1\u79fb\u8ba1\u5212\u3002\u4f7f\u7528\u6b64\u5de5\u5177\u53ef\u4ee5\u67e5\u770b\u60a8\u57df\u4e2d\u7684\u6240\u6709\u7ecf\u5178\u7ad9\u70b9\uff1b\u5c06\u6458\u8981\u5bfc\u51fa\u5230Google Sheet\u4ee5\u8fdb\u884c\u9879\u76ee\u7ba1\u7406\uff1b\u4ee5\u53ca\u6267\u884c\u6279\u91cf\u64cd\u4f5c\u4ee5\u5220\u9664\u3001\u5b58\u6863\u6216\u8f6c\u6362\u60a8\u7684\u7ad9\u70b9\u3002\u6709\u5173\u7ba1\u7406\u5458\u7684\u7ad9\u70b9\u8fc7\u6e21\u6700\u4f73\u5b9e\u8df5\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u5185\u5bb9\u3002\n2021\u5e745\u6708\u4e4b\u524d\uff1a\u57282021\u5e7410\u6708\u4e4b\u524d\u5173\u95ed\u4f7f\u7528\u7ecf\u5178\u7f51\u7ad9\u521b\u5efa\u7f51\u7ad9&amp\uff1b\u8f6c\u6362\u65e7\u7f51\u7ad9\uff1a\u5173\u95ed\u7f16\u8f91\u7ecf\u5178\u7f51\u7ad9\u4e2d\u7684\u7f51\u7ad9\u52302020\u5e74\u5e95\uff0c\u60a8\u4f5c\u4e3a\u7ba1\u7406\u5458\u5c06\u53ef\u4ee5\u4f7f\u7528\u7981\u7528\u7f16\u8f91\u7ecf\u5178\u7f51\u7ad9\u7684\u6743\u9650\u3002\n2021\u5e7412\u6708\u4e4b\u524d\uff1a\u7981\u7528\u67e5\u770b\u7ecf\u5178\u7f51\u7ad9\u52302020\u5e74\u5e95\uff0c\u4f5c\u4e3a\u7ba1\u7406\u5458\uff0c\u60a8\u5c06\u53ef\u4ee5\u4f7f\u7528\u7981\u7528\u67e5\u770b\u5728\u7ecf\u5178\u7f51\u7ad9\u4e2d\u521b\u5efa\u7684\u7f51\u7ad9\u7684\u6743\u9650\u3002\n\u5982\u679c\u672a\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e0a\u8ff0\u66f4\u6539\u5c06\u81ea\u52a8\u5e94\u7528\u4e8e\u60a8\u7684\u57df\u3002\n\u9996\u5148\uff0c\u786e\u4fdd\u6240\u6709\u7528\u6237\u7ec4\u90fd\u53ef\u4ee5\u8bbf\u95ee\u65b0\u7684Google\u7ad9\u70b9\uff0c\u5e76\u5c3d\u5feb\u5173\u95ed\u5728\u7ecf\u5178\u7ad9\u70b9\u4e2d\u521b\u5efa\u7ad9\u70b9\u3002\n\u63a5\u4e0b\u6765\uff0c\u51b3\u5b9a\u60a8\u7684\u8fc7\u6e21\u65b9\u6cd5\u3002\u60a8\u662f\u5e0c\u671b\u5355\u4e2a\u7ad9\u70b9\u6240\u6709\u8005\u8fc1\u79fb\u5176\u7ad9\u70b9\uff0c\u8fd8\u662f\u5e0c\u671b\u60a8\u4f5c\u4e3a\u7ba1\u7406\u5458\u7ba1\u7406\u6574\u4e2a\u8fc1\u79fb\u8fc7\u7a0b\uff1f\n\u5982\u679c\u60a8\u5e0c\u671b\u5355\u4e2a\u7ad9\u70b9\u6240\u6709\u8005\u8fc1\u79fb\u5176\u7ad9\u70b9\uff0c\u8bf7\u6307\u793a\u4ed6\u4eec\u5c06\u60a8\u7684\u4f20\u7edf\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u3002\n\u5982\u679c\u60a8\u4f5c\u4e3a\u7ba1\u7406\u5458\u60f3\u8981\u8fc1\u79fb\u60a8\u7684\u7ad9\u70b9\uff0c\u8bf7\u4f7f\u7528\u7ecf\u5178\u7ad9\u70b9\u7ba1\u7406\u5668\u3002\n\u901a\u8fc7\u5220\u9664\u6216\u5b58\u6863\u975e\u6d3b\u52a8\u7ad9\u70b9\u6765\u8fc1\u79fb\u5b83\u4eec\u3002\u9009\u62e9\u4e00\u4e2a\u9009\u9879\uff1a\u8be5\u7ad9\u70b9\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5220\u9664\u5019\u9009\u7ad9\u70b9\u7684\u8ff9\u8c61\u662f\uff0c\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u4e2d\u6ca1\u6709\u4eba\u7f16\u8f91\u6216\u67e5\u770b\u5b83\u3002\n\u901a\u8fc7\u5728\u65b0\u7ad9\u70b9\u4e2d\u8f6c\u6362\u6216\u91cd\u5efa\u6d3b\u52a8\u7ad9\u70b9\u5f00\u59cb\u8fc1\u79fb\uff1a\u5c06\u6d4f\u89c8\u91cf\u6700\u5927\u6216\u7f16\u8f91\u9891\u7387\u6700\u9ad8\u7684\u7ad9\u70b9\u4ece\u4f20\u7edf\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u3002\n\u5f53\u60a8\u6709\u4e86\u65b0\u7ad9\u70b9\u7684\u8349\u7a3f\u540e\uff0c\u6bd4\u8f83\u8fd9\u4e9b\u7ad9\u70b9\uff0c\u5e76\u5bf9\u65b0\u7ad9\u70b9\u53ef\u80fd\u9700\u8981\u7684\u4efb\u4f55\u624b\u52a8\u8c03\u6574\u6216\u66f4\u6539\u8fdb\u884c\u8c03\u6574\u3002\n\u5bf9\u4e8e\u67d0\u4e9b\u7ad9\u70b9\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u53ef\u7528\u7684\u7ad9\u70b9\u6a21\u677f\u5728\u65b0\u7ad9\u70b9\u4e2d\u4ece\u5934\u5f00\u59cb\u91cd\u5efa\u7ad9\u70b9\u3002\u4e00\u4e9b\u4eba\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f6c\u6362\u548c\u624b\u52a8\u8c03\u6574\u7ad9\u70b9\u66f4\u5bb9\u6613\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5177\u6709\u8bb8\u591a\u65b0\u7ad9\u70b9\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7684\u7ad9\u70b9\u3002\n\u6211\u600e\u4e48\u77e5\u9053\u6211\u662f\u5426\u53d7\u5230\u4e86\u5f71\u54cd\uff1f\u8981\u67e5\u770b\u60a8\u7684\u7ec4\u7ec7\u662f\u5426\u6709\u4efb\u4f55\u9700\u8981\u8fc1\u79fb\u7684\u7ecf\u5178\u7ad9\u70b9\uff0c\u8bf7\u8bbf\u95ee\u7ecf\u5178\u7ad9\u70b9\u7ba1\u7406\u5668\u3002\n\u6211\u5728\u7528\u6237\u5e2e\u52a9\u6587\u7ae0\u6216\u8bba\u575b\u4e2d\u770b\u5230\u4e86\u4e0d\u540c\u7684\u8fc7\u6e21\u65f6\u95f4\u7ebf\u3002\u6d88\u8d39\u8005\u548cG Suite\u7528\u6237\u7684\u5173\u952e\u65e5\u671f\u662f\u4e0d\u540c\u7684\u3002\u672c\u6587\u4e2d\u7684\u65e5\u671f\u5bf9\u4e8eG Suite\u5ba2\u6237\u6765\u8bf4\u662f\u51c6\u786e\u7684\u3002\u5982\u679c\u60a8\u662f\u4f7f\u7528\u7ecf\u5178\u7ad9\u70b9\u7684Gmail\u7528\u6237\uff0c\u8bf7\u53c2\u9605\u5c06\u7ecf\u5178\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u3002\n\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u53d8\u5316\uff1f\u6211\u4eec\u8bbe\u8ba1\u4e86\u65b0\u7684\u7f51\u7ad9\uff0c\u5e2e\u52a9\u60a8\u548c\u60a8\u7684\u7528\u6237\u5728\u6ca1\u6709\u7f16\u7a0b\u7ecf\u9a8c\u7684\u60c5\u51b5\u4e0b\uff0c\u8de8\u79fb\u52a8\u548c\u684c\u9762\u521b\u5efa\u7f51\u7ad9\uff0c\u5e76\u8fdb\u884c\u5b9e\u65f6\u534f\u4f5c\u3002\u65b0\u7f51\u7ad9\u662f\u4f20\u7edf\u7f51\u7ad9\u7684\u66ff\u4ee3\u54c1\uff0c\u5efa\u7acb\u5728\u8c37\u6b4c\u6700\u65b0\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e0a\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173\u7684G Suite\u535a\u5ba2\u6761\u76ee\u3002\n\u6211\u5982\u4f55\u77e5\u9053\u6211\u662f\u5426\u6b63\u786e\u542f\u7528\u4e86\u65b0\u7ad9\u70b9\uff1f\u5728\u7ba1\u7406\u63a7\u5236\u53f0\u4e2d\u542f\u7528\u65b0\u7ad9\u70b9\u540e\uff0csites.google.com\u4f1a\u91cd\u5b9a\u5411\u5230sites.google.com/new\uff0c\u800c\u4e0d\u662fsites.google.com/classic\u3002\n\u6211\u6ca1\u6709\u8bbf\u95ee\u7ba1\u7406\u63a7\u5236\u53f0\u7684\u6743\u9650\u3002\u6211\u5e94\u8be5\u91c7\u53d6\u4ec0\u4e48\u6b65\u9aa4\u5462\uff1f\u7ecf\u5178\u7f51\u7ad9\u548c\u65b0\u7f51\u7ad9\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528\u989d\u5916\u7684\u7ba1\u7406\u63a7\u4ef6\u6765\u7ba1\u7406\u7ecf\u5178\u7ad9\u70b9\uff1f\u52302020\u5e74\u5e95\uff0c\u7ba1\u7406\u5458\u5c06\u53ef\u4ee5\u5728\u7ecf\u5178\u7ad9\u70b9\u7ba1\u7406\u5668\u4e2d\u4f7f\u7528\u7981\u7528\u7f16\u8f91\u548c\u67e5\u770b\u7ecf\u5178\u7ad9\u70b9\u7684\u6743\u9650\u3002\n\u5c06\u4f20\u7edf\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u540e\uff0c\u8c01\u5c06\u6210\u4e3a\u7ad9\u70b9\u6240\u6709\u8005\uff1f\u5c06\u7ad9\u70b9\u4ece\u4f20\u7edf\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u7684\u4eba\u6210\u4e3a\u7ad9\u70b9\u6240\u6709\u8005\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u7ba1\u7406\u5458\u8f6c\u6362\u7ad9\u70b9\uff0c\u4ed6\u4eec\u5c06\u6210\u4e3a\u65b0\u7ad9\u70b9\u7684\u6240\u6709\u8005\uff0c\u5e76\u4e14\uff1a\n\u6709\u5173\u7528\u6237\u4f53\u9a8c\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5c06\u7ecf\u5178\u7ad9\u70b9\u8f6c\u6362\u4e3a\u65b0\u7ad9\u70b9\u4e2d\u5173\u4e8e\u5728\u7ecf\u5178\u7ad9\u70b9\u8bbe\u7f6e\u4e2d\u8f6c\u6362\u7ad9\u70b9\u7684\u90e8\u5206\u3002", "note_en": "Starting August 13, 2020, the new Google Sites becomes the default for website creation. If you haven\u2019t already done so, as the next step in your classic Sites transition, we recommend that you enable new Sites for all user groups that don\u2019t already have access within your top-level organization.\n Your users can still switch back to classic Sites. Migrate existing classic Sites to new Sites by December 2021 using the console built to support administrators and users in streamlining the migration process to new Google Sites:  Classic Sites Manager.\n     Besides migrating existing classic Sites by December 2021, use the key dates below to plan and manage your organization\u2019s migration from classic Sites.\n August 2020: New Sites becomes the default for website creation   Starting May 2021: No websites can be created in classic Sites New websites can only be created in new Sites. This limit includes copying existing sites, creating sites using the Sites API, or any other form of site creation in classic Sites.\n  To ensure a smooth transition for your organization, turn off the creation of classic Sites in the Google Admin console as soon as you can. Doing so decreases the number of classic Sites your organization must migrate.\n Starting October 2021: Editing of remaining classic sites will be disabled Site editors can\u2019t make changes to their classic Sites. Viewers can still view classic Sites.\n  Later in 2020, a feature is scheduled to arrive in the Classic Sites Manager, which helps admins disable editing classic Sites. Use this feature as soon as it\u2019s available to ensure a smooth transition from classic Sites for your users.\n Starting December 2021: Classic Sites transition When users try to visit a classic site, they won\u2019t see the website content. Remaining classic sites are automatically downloaded as an HTML file, saved to the site owner\u2019s drive (in Google Drive), and replaced with a draft new site for site owners to review and publish.\n    If you want the site to be available to viewers, convert it to new Sites using the Classic Sites Manager or Sites settings before December 2021. Using this tool, you can publish your new site at the same URL as the old site to avoid disruption to viewers. For details, see  Migrate classic Sites to new Sites.\n  Start planning for the change to ensure a smooth transition for your organization. See the dates below and recommended actions you as the admin should take by those dates.\n August 2020: Enable sites creation in new Sites, review old sites &amp; plan migration\u00a0 Enable site creation in new Sites in your Admin console for everyone. Users can switch back to classic Sites until December 2021.\n  Using the  Classic Sites Manager, review how many classic Sites are in your organization and develop a migration plan. Use this tool to view all classic Sites in your domain; export a summary to Google Sheets for project management; and take bulk actions to delete, archive, or convert your sites. See below, for the  Sites transition best practices for admins.\n Before May 2021: Turn off sites creation with classic Sites &amp; convert old websites  Before October 2021: Turn off editing of sites in classic Sites\u00a0 Permissions to disable editing of classic sites will be available to you, as an admin, by the end of 2020.\n Before December 2021: Disable viewing of classic sites\u00a0 Permissions to disable viewing of sites created in classic Sites will be available to you, as an admin, by the end of 2020.\n If no action is taken, the changes outlined above will automatically be applied to your domain.\n   First, ensure all user groups have access to new Google Sites and to turn off creation of sites in classic Sites as soon as possible.\n Next, decide on your approach for the transition. Do you want individual site owners to migrate their sites, or do you as the admin want to manage the entire migration?\n If you want individual site owners to migrate their sites, point them to\u00a0 Convert your classic Sites to new Sites.\n  If you as the admin want to migrate your site, use the  Classic Sites Manager.\n  Migrate inactive sites by deleting or archiving them. Choose an option:   A sign that the site might be a good candidate to delete is that no one edited or viewed it in the past year.\n      Start migrating active sites by converting them or rebuilding them in new Sites:  Convert the most viewed or most frequently edited sites from classic Sites to new Sites.\n  When you have a draft of the new site, compare the sites and make any manual adjustments or changes the new Site might need.\n For certain sites, you might consider rebuilding the site from scratch in new Sites using the site templates available. Some find this approach easier than converting and manually adjusting sites, especially for sites with a number of features that are unsupported in new Sites.\n   How do I know if I\u2019m affected? To see if your organization has any classic sites that need to be migrated, visit the  Classic Sites Manager.\n I\u2019ve seen different transition timelines in user help articles or forums. The key dates for consumers and G Suite users are different. The dates in this article are accurate for G Suite customers. If you\u2019re a Gmail user using classic Sites, see  Convert your classic Site to new Sites.\n Why is this change happening? We designed new Sites to help you and your users create websites without programming experience, across mobile and desktop, and with real-time collaboration. New Sites is a replacement for classic Sites, built on Google\u2019s latest infrastructure. For more information, see the related  G Suite blog entry.\n How do I know if I\u2019ve correctly enabled new Sites? After you enable new Sites in the Admin console, sites.google.com redirects to sites.google.com/new, instead of sites.google.com/classic.\n I don\u2019t have access to an Admin console. What steps should I take?  What are the differences between classic Sites and new Sites?  When will additional admin controls be available for managing classic sites? Permissions to disable editing and viewing of classic sites will be available to admins by the end of 2020 in the Classic Sites Manager.\n Who becomes the site owner after converting a classic Site to new Sites? The person who converts the site from classic Sites to new Sites becomes the site owner.\n  For example, if an admin converts the site, they become the owner of the new site, and:\n      For more information about the experience for users, see the section about converting your site in classic Sites settings\u00a0in  Convert your classic Site to new Sites.", "posttime": "2020-08-07 19:25:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,\u7ad9\u70b9", "title": "\u7ecf\u5178\u8c37\u6b4c\u7f51\u7ad9\u5c06\u4e8e2021\u5e749\u6708\u5173\u95ed", "title_en": "Classic Google Sites shutting down by September 2021", "transed": 1, "url": "https://support.google.com/a/answer/9958187", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u7ad9\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "1e7c033375048d1b25f957258cb40836.png", "infoid": 1016861, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u662f\u5426\u4e00\u76f4\u5728\u5bfb\u627e\u4e00\u6b3e\u597d\u7684\u5728\u7ebf\u591a\u4eba\u6e38\u620f\uff0c\u4efb\u4f55\u4f1a\u4f7f\u7528\u64cd\u7eb5\u6746\u548c\u4e09\u4e2a\u6309\u94ae\u7684\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5b83\uff1f\u66ff\u7f6a\u7f8a\uff1a\u7ec8\u6781\u6dd8\u6c70\u8d5b\u5c31\u662f\u90a3\u573a\u6bd4\u8d5b\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u201c\u9a6c\u91cc\u5965\u6d3e\u5bf9\u201d\u7684\u8ff7\u4f60\u641e\u7b11\u4e0e\u201c\u9ed1\u5e2e\u91ce\u517d\u201d\u7b80\u5355\u3001\u67d4\u6ed1\u7684\u63a7\u5236\u76f8\u7ed3\u5408\uff0c\u7136\u540e\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u5e26\u6765\u7684\u4e50\u8da3\u4e0d\u4f1a\u8ba9\u4f60\u5728\u7eaf\u7cb9\u6124\u6012\u7684\u60c5\u51b5\u4e0b\u5bf9\u4f60\u7684\u670b\u53cb\u5927\u558a\u5927\u53eb\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bd4\u9a6c\u91cc\u5965\u6d3e\u5bf9\u8981\u597d\u5f97\u591a\u3002)", "note_en": "Have you been looking for a good online multiplayer game that&#39;s accessible to anyone who can use a joystick and three buttons?  Fall Guys: Ultimate Knockout is that game. Imagine the minigame zaniness of  Mario Party combined with the simple, squishy controls of  Gang Beasts, then remixed to deliver the kind of fun that won&#39;t have you screaming in sheer anger at your friends. (Meaning, much better than  Mario Party.)", "posttime": "2020-08-07 19:02:47", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "guys,\u7ec8\u6781", "title": "Fall Guys\u8bc4\u8bba\uff1a\u4e0e\u7f51\u53cb\u4e00\u8d77\u4eab\u53d7\u5b8c\u7f8e\u7684\u5ec9\u4ef7\u3001\u611a\u8822\u7684\u4e50\u8da3", "title_en": "Fall Guys review: A perfect amount of cheap, stupid fun with online friends", "transed": 1, "url": "https://arstechnica.com/gaming/2020/08/fall-guys-review-a-perfect-amount-of-cheap-stupid-fun-with-online-friends/", "via": "", "real_tags": ["guys", "\u7ec8\u6781"]}, {"category": "", "categoryclass": "", "imagename": "b09b9bea58137685e696f3b60ea31108.jpg", "infoid": 1016858, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u79d1\u5b66\u5bb6\u4eec\u7b2c\u4e00\u6b21\u63a2\u6d4b\u5230\u6765\u81ea\u592a\u9633\u6838\u5fc3\u7684\u4e2d\u5fae\u5b50\uff0c\u8fd9\u4e9b\u4e2d\u5fae\u5b50\u662f\u901a\u8fc7CNO\u8fc7\u7a0b\u5f00\u59cb\u7684\uff0cCNO\u8fc7\u7a0b\u662f\u4e00\u79cd\u81f3\u4eca\u4ecd\u88ab\u7406\u8bba\u5316\u7684\u6052\u661f\u6838\u805a\u53d8\u7c7b\u578b\u3002\n\u4e2d\u5fae\u5b50\u662f\u4e9a\u539f\u5b50\u7c92\u5b50\u3002\u4e0e\u4f60\u66f4\u719f\u6089\u7684\u8d28\u5b50\u548c\u7535\u5b50\u4e0d\u540c\uff0c\u4e2d\u5fae\u5b50\u4e0d\u5e26\u7535\u8377\uff0c\u8d28\u91cf\u975e\u5e38\u4f4e\uff0c\u5b83\u4eec\u771f\u7684\u4e0d\u559c\u6b22\u4e0e\u6b63\u5e38\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\u3002\u4e2d\u5fae\u5b50\u53ef\u4ee5\u76f4\u63a5\u7a7f\u8fc7\u5730\u7403\uff0c\u5c31\u597d\u50cf\u5b83\u4e0d\u5728\u90a3\u91cc\u4e00\u6837\u3002\n\u8bb8\u591a\u4e0d\u540c\u7684\u4e9a\u539f\u5b50\u76f8\u4e92\u4f5c\u7528\u53ef\u4ee5\u5f62\u6210\u4e2d\u5fae\u5b50\uff0c\u5305\u62ec\u5404\u79cd\u7c7b\u578b\u7684\u6838\u805a\u53d8\u3002\u6211\u4eec\u5468\u56f4\u6700\u5927\u7684\u6765\u6e90\u662f\u592a\u9633\uff0c\u56e0\u4e3a\u5b83\u5728\u6838\u5fc3\u5c06\u6c22\u805a\u53d8\u6210\u6c26\uff0c\u6bcf\u79d2\u4ea7\u751f\u5927\u7ea61025\u4e2a\u4e2d\u5fae\u5b50(10000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000)\u4e2a\u4e2d\u5fae\u5b50\u3002\u5b83\u4eec\u5411\u56db\u9762\u516b\u65b9\u5c04\u51fa\uff0c\u5f53\u5b83\u4eec\u5230\u8fbe\u5730\u7403\u65f6\uff0c\u6bcf\u5e73\u65b9\u5398\u7c73\u5927\u7ea6\u6709600\u4ebf\u9897\u884c\u661f\u901a\u8fc7\u3002\u770b\u770b\u4f60\u7684\u7f29\u7565\u56fe\u3002\u7830\u7684\u4e00\u58f0\u3002\u5f53\u4f60\u8bfb\u5230\u8fd9\u53e5\u8bdd\u65f6\uff0c\u5927\u7ea6\u6709\u4e00\u5343\u4ebf\u4e2a\u4e2d\u5fae\u5b50\u521a\u521a\u901a\u8fc7\u5b83\u3002\n\u6211\u4eec\u8ba4\u4e3a\u5728\u592a\u9633\u4e0a\u6709\u4e24\u79cd\u805a\u53d8\u6b63\u5728\u8fdb\u884c\u3002\u5176\u4e2d99%\u6765\u81ea\u6240\u8c13\u7684\u8d28\u5b50-\u8d28\u5b50\u94fe\u3002\u5b83\u5305\u62ec\u51e0\u4e2a\u6b65\u9aa4\uff0c\u4f46\u6700\u7ec8\u56db\u4e2a\u6c22\u6838(\u5b9e\u9645\u4e0a\u53ea\u662f\u8d28\u5b50)\u878d\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u6c26\u6838\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u91ca\u653e\u51fa\u4e2d\u5fae\u5b50\u548c\u5927\u91cf\u7684\u80fd\u91cf-\u4e8b\u5b9e\u4e0a\uff0c\u8db3\u591f\u4e3a\u4e00\u9897\u6052\u661f\u63d0\u4f9b\u52a8\u529b\u3002\n\u53e6\u59161%\u7684\u805a\u53d8\u6765\u81eaCNO\u5faa\u73af\uff0c\u5373\u78b3-\u6c2e-\u6c27\u5faa\u73af\u3002\u8fd9\u4e5f\u9700\u8981\u4e00\u7cfb\u5217\u7684\u6b65\u9aa4\uff0c\u4f46\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\u8fd9\u4e09\u4e2a\u5143\u7d20\uff0c\u6700\u7ec8\u505a\u7684\u662f\u540c\u6837\u7684\u4e8b\u60c5\uff1a\u56db\u4e2a\u8d28\u5b50\u878d\u5408\u6210\u6c26\uff0c\u6c26\u4e5f\u4f1a\u91ca\u653e\u80fd\u91cf\uff0c\u5e76\u5c06\u4e00\u675f\u4e2d\u5fae\u5b50\u9001\u5230\u8def\u4e0a\u3002\n\u592a\u9633\u6bcf\u79d2\u5c06\u5927\u7ea67\u4ebf\u5428\u6c22\u8f6c\u5316\u4e3a6.95\u4ebf\u5428\u6c26\uff1b\u5269\u4f59\u7684\u8d28\u91cf\u88ab\u8f6c\u5316\u4e3a\u80fd\u91cf\uff0c\u7167\u4eae\u592a\u9633\u3002\u8fd9\u662f\u5927\u91cf\u7684\u805a\u53d8\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u592a\u9633\u4f1a\u4ea7\u751f\u5982\u6b64\u591a\u7684\u4e2d\u5fae\u5b50\u3002\u4e00\u65e6\u88ab\u521b\u9020\u51fa\u6765\uff0c\u5b83\u4eec\u5c31\u4f1a\u4ee5\u975e\u5e38\u63a5\u8fd1\u5149\u901f\u7684\u901f\u5ea6\u98de\u51fa\u592a\u9633\u3002\n\u6709\u4e9b\u4eba\u6765\u5230\u5730\u7403\u3002\u5927\u591a\u6570\u90fd\u76f4\u63a5\u901a\u8fc7\u6211\u4eec\uff0c\u56e0\u4e3a\uff0c\u518d\u8bf4\u4e00\u6b21\uff0c\u4ed6\u4eec\u4e0d\u559c\u6b22\u4e0e\u7269\u8d28\u4e92\u52a8\u3002\n\u8fd9\u4f7f\u5f97\u4ed6\u4eec\u5f88\u96be\u88ab\u53d1\u73b0\uff0c\u4f46\u8fd8\u662f\u6709\u529e\u6cd5\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4e2d\u5fae\u5b50\u78b0\u5de7\u649e\u4e0a\u4e86\u4e00\u4e2a\u542b\u67091\uff0c2\uff0c4-\u4e09\u7532\u82ef\u7684\u5206\u5b50-\u4e5f\u88ab\u79f0\u4e3a\u4f2a\u7532\u82ef\uff0c\u4e00\u79cd\u73af\u72b6\u7684\u78b3\u57fa\u5206\u5b50-\u5b83\u4f1a\u5c04\u51fa\u4e00\u4e2a\u7535\u5b50\uff0c\u5728\u5b83\u505a\u4e86\u4e00\u4e9b\u7269\u7406\u64cd\u4f5c\u540e\uff0c\u5c31\u4f1a\u53d1\u51fa\u5149\u5b50\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u88c5\u6ee1\u8fd9\u79cd\u7269\u8d28\u7684\u6c34\u7bb1\uff0c\u5e76\u5728\u5b83\u5468\u56f4\u5b89\u88c5\u975e\u5e38\u7075\u654f\u7684\u5149\u63a2\u6d4b\u5668\uff0c\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u4e2d\u5fae\u5b50\u4e8b\u4ef6\u5076\u5c14\u4ea7\u751f\u7684\u95ea\u5149\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u7684\u3002\u5f88\u5c11\u6709\u4e2d\u5fae\u5b50\u4f1a\u4e0e\u5047\u5fae\u7c73\u76f8\u4e92\u4f5c\u7528\u3002\u6240\u4ee5\u4f60\u9700\u8981\u4e00\u4e2a\u5927\u7684\u6c34\u7bb1\uff0c\u4f60\u9700\u8981\u5728\u5730\u4e0b\u5efa\u9020\u5b83\uff0c\u56e0\u4e3a\u5b87\u5b99\u5c04\u7ebf\u51fb\u4e2d\u6211\u4eec\u7684\u5927\u6c14\u5c42\u4f1a\u4ea7\u751f\u00b5\u5b50\uff0c\u8fd9\u4e5f\u4f1a\u4ea7\u751f\u5e72\u6270\u4f60\u7684\u7ed3\u679c\u7684\u95ea\u5149\uff0c\u4f60\u9700\u8981\u5728\u5b83\u5468\u56f4\u653e\u4e00\u4e2a\u66f4\u5927\u7684\u6c34\u7bb1\u6765\u5438\u6536\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u7684\u00b5\u5b50\u3002\n\u65af\u5c14\uff0c\u8fd9\u6b63\u662f\u56fd\u9645\u79d1\u5b66\u5bb6\u5408\u4f5c\u6240\u505a\u7684\u3002Borexino\u4e2d\u5fae\u5b50\u5929\u6587\u53f0\u4f4d\u4e8e\u610f\u5927\u5229Gran Sasso\u5c71\u4e0b\u5ca9\u77f3\u4e0b1400\u7c73\u5904\u3002\u5b83\u6709\u4e00\u4e2a8.5\u7c73\u5bbd\u7684\u5c3c\u9f99\u6c14\u7403\uff0c\u91cc\u9762\u88c5\u6ee1\u4e86280\u5428\u7684\u5047\u5f02\u4e19\u82ef\uff0c\u5468\u56f4\u6709\u4e00\u4e2a\u6c34\u7bb1\uff0c\u5468\u56f4\u67092200\u591a\u4e2a\u975e\u5e38\u7075\u654f\u7684\u5149\u5b50\u63a2\u6d4b\u5668\u3002\n\u4ed6\u4eec\u628a\u6240\u6709\u4e1c\u897f\u90fd\u6253\u5f00\uff0c\u7136\u540e\u7b49\u7740\u3002\u57282016\u5e747\u6708\u81f32020\u5e742\u6708(1072\u5929)\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ed6\u4eec\u715e\u8d39\u82e6\u5fc3\u5730\u8bb0\u5f55\u4e86\u6240\u6709\u7684\u4e8b\u4ef6\uff0c\u5e76\u4e0d\u5f97\u4e0d\u505a\u51fa\u82f1\u52c7\u7684\u52aa\u529b\uff0c\u4ee5\u9632\u6b62\u6240\u6709\u5176\u4ed6\u4e5f\u4f1a\u4ea7\u751f\u5c11\u91cf\u95ea\u5149\u7684\u53cd\u5e94\u65b9\u5f0f\u5e72\u6270\u4ed6\u4eec\u7684\u5b9e\u9a8c\u3002\u4ed6\u4eec\u8fd8\u5fc5\u987b\u533a\u5206\u8d28\u5b50-\u8d28\u5b50\u94fe\u4e2d\u5fae\u5b50\u548c\u5728CNO\u5faa\u73af\u4e2d\u4ea7\u751f\u7684\u4e2d\u5fae\u5b50\uff0c\u4f46\u8fd9\u4e9b\u4e2d\u5fae\u5b50\u7684\u80fd\u91cf\u4e0d\u540c\uff0c\u8fd9\u4f7f\u5f97\u5c06\u5b83\u4eec\u5206\u79bb\u51fa\u6765\u6210\u4e3a\u53ef\u80fd\u3002\n\u4ed6\u4eec\u521a\u521a\u5ba3\u5e03\u4e86\u4ed6\u4eec\u7684\u7ed3\u679c\uff1a\u4ed6\u4eec\u63a2\u6d4b\u5230\u4e86CNO\u4e2d\u5fae\u5b50\uff01\u6bcf\u5929\u5927\u7ea6\u670920\u6b21\u4e0e\u5047\u6027\u5fae\u7c73\u76f8\u4e92\u4f5c\u7528--\u6bcf\u5929\u670920\u6b21\uff0c\u5f53\u65f6\u6709\u516d\u4ebf\u5206\u4e4b\u4e00\u7684\u5047\u5fae\u7c73\u5df2\u7ecf\u901a\u8fc7\u4e86\uff01--\u5927\u6982\u662f\u4f60\u4ece\u7406\u8bba\u4e2d\u671f\u5f85\u7684\u7ed3\u679c\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u91cd\u8981\u7684\u662f\u8981\u77e5\u9053\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u6709\u7406\u8bba\u544a\u8bc9\u6211\u4eec\u6b63\u5728\u53d1\u751fCNO\u5faa\u73af\u3002\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u6d4b\u91cf\u57cb\u85cf\u5728\u51e0\u5341\u4e07\u516c\u91cc\u6df1\u7684\u592a\u9633\u2026\u4e0b\u9762\u7684\u592a\u9633\u6838\u5fc3\u3002\u9664\u4e86\u901a\u8fc7\u4e2d\u5fae\u5b50\u3002CNO\u5faa\u73af\u6700\u65e9\u662f\u572820\u4e16\u7eaa30\u5e74\u4ee3\u63d0\u51fa\u7684\uff0c\u82b1\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u624d\u6700\u7ec8\u53d1\u73b0\u5b83\u4eec\u3002\n\u6d4b\u91cf\u4e2d\u5b58\u5728\u4e00\u4e9b\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u4ed6\u4eec\u53d1\u73b0\uff0c\u4ed6\u4eec\u53ef\u4ee599%\u7684\u786e\u5b9a\u6027\u6392\u9664\u8fd9\u4e9b\u4e2d\u5fae\u5b50\u4e0d\u662f\u6765\u81eaCNO\u5faa\u73af\u7684\u53ef\u80fd\u6027\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4eec\u4e0d\u592a\u53ef\u80fd\u6765\u81ea\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u3002\n\u8fd9\u662f\u4e00\u9879\u91cd\u8981\u7684\u53d1\u73b0\uff0c\u539f\u56e0\u5f88\u591a\u3002\u9996\u5148\uff0c\u867d\u7136\u8d28\u5b50-\u8d28\u5b50\u94fe\u5728\u592a\u9633\u4e2d\u5360\u4e3b\u5bfc\u5730\u4f4d\uff0c\u4f46\u5728\u8d28\u91cf\u8d85\u8fc7\u592a\u96331.3\u500d\u7684\u6052\u661f\u4e2d\uff0cCNO\u5468\u671f\u5360\u4e3b\u5bfc\u5730\u4f4d(\u5b83\u5728\u8f83\u9ad8\u7684\u6e29\u5ea6\u4e0b\u4f1a\u5f3a\u70c8\u53d1\u6325\u4f5c\u7528)\uff0c\u6240\u4ee5\u4e86\u89e3\u5b83\u5728\u592a\u9633\u4e2d\u7684\u5de5\u4f5c\u65b9\u5f0f\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u5176\u4ed6\u6052\u661f\u7684\u60c5\u51b5\u3002\n\u6b64\u5916\uff0c\u8f83\u91cd\u5143\u7d20(\u5929\u6587\u5b66\u5bb6\u5c06\u5176\u79f0\u4e3a\u91d1\u5c5e\uff0c\u610f\u601d\u662f\u4efb\u4f55\u6bd4\u6c22\u548c\u6c26\u66f4\u91cd\u7684\u5143\u7d20)\u7684\u5b58\u5728\u90fd\u4f1a\u5f71\u54cd\u592a\u9633CNO\u5faa\u73af\u4e2d\u7684\u805a\u53d8\u7387\uff0c\u8fd9\u4e9b\u91d1\u5c5e\u7684\u6570\u91cf\u5e76\u4e0d\u5b8c\u5168\u4e3a\u4eba\u6240\u77e5\uff1b\u4e0d\u540c\u7684\u6d4b\u91cf\u65b9\u6cd5\u4ea7\u751f\u7684\u91cf\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u8db3\u4ee5\u6270\u4e71\u6211\u4eec\u5bf9\u6838\u5fc3\u805a\u53d8\u7684\u4e86\u89e3\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u4e0e\u53d1\u73b0\u91d1\u5c5e\u542b\u91cf\u8f83\u4f4e\u7684\u5b9e\u9a8c\u662f\u4e00\u81f4\u7684\u3002\u8fd9\u5bf9\u5176\u4ed6\u8bb8\u591a\u60f3\u6cd5\u90fd\u6709\u8fde\u9501\u53cd\u5e94\uff0c\u5305\u62ec\u6211\u4eec\u8ba4\u4e3a\u592a\u9633\u548c\u884c\u661f\u662f\u5982\u4f55\u5f62\u6210\u7684\uff0c\u592a\u9633\u662f\u5982\u4f55\u8001\u5316\u7684\uff0c\u4ee5\u53ca\u5b83\u5c06\u5982\u4f55\u6d88\u4ea1\u7684\u7ec6\u8282\u3002\n\u6240\u6709\u8fd9\u4e9b\uff0c\u6bcf\u5929\u4e0d\u523024\u4e2a\u4e2d\u5fae\u5b50\uff0c\u800c\u65e0\u6570\u66f4\u591a\u7684\u4e2d\u5fae\u5b50\u6ca1\u6709\u88ab\u53d1\u73b0\u3002\u5b83\u4ece\u672a\u505c\u6b62\u8fc7\u8ba9\u6211\u60ca\u8bb6\uff0c\u6211\u4eec\u4eba\u7c7b\u662f\u591a\u4e48\u806a\u660e\uff0c\u80fd\u591f\u627e\u5230\u4e00\u79cd\u770b\u4e0d\u89c1\u7684\u65b9\u5f0f\uff0c\u5e76\u5728\u5b87\u5b99\u4ece\u6211\u4eec\u8eab\u8fb9\u7ecf\u8fc7\u7684\u65f6\u5019\uff0c\u771f\u6b63\u5730\u5bf9\u5b83\u8fdb\u884c\u91c7\u6837\u3002\n\u63d0\u4ea4\u60a8\u7684\u4fe1\u606f\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u3001\u6761\u6b3e\u548c\u6761\u4ef6\uff0c\u5e76\u63a5\u53d7\u6765\u81eaNBC\u73af\u7403\u7684\u8425\u9500\u4fe1\u606f\u3002", "note_en": "For the first time, scientists have detected neutrinos coming from the Sun\u2019s core that got their start via the CNO process, an until-now theorized type of stellar nuclear fusion.\n   Neutrinos are subatomic particles. Unlike the ones you\u2019re more familiar with like protons and electrons, neutrinos don\u2019t have a charge and have very low mass, and they  really don\u2019t like to interact with normal matter. A neutrino can pass right through the Earth as if it isn\u2019t there.\n Lots of different subatomic interactions can make neutrinos, including various types of nuclear fusion. The biggest source around us is the Sun, because it\u2019s fusing hydrogen into helium in its core, making something like 10 25 (10,000,000,000,000,000,000,000,000) neutrinos every  second. They shoot out in all directions, and by the time they reach Earth about 60 billion pass through every square centimeter. Look at your thumbnail. Boom. About a hundred billion neutrinos just  passed through it as you read this sentence.\n  We think there are two kinds of fusion going on in the Sun. 99% of it is from what\u2019s called  the proton-proton chain. It involves several steps, but in the end four hydrogen nuclei (really, just protons) fuse to form a single helium nucleus, and in the process releases neutrinos and a lot of energy \u2014 enough energy, in fact, to power a star.\n The other 1% of fusion is from  the CNO cycle, or the carbon-nitrogen-oxygen cycle. It too takes a bunch of steps, but involves those three elements in the process, and in the end does the same thing: four protons fuse to become helium, which also releases energy and sends a bunch of neutrinos on their way.\n  The Sun converts about 700 million tons of hydrogen into 695 million tons of helium every second; the leftover mass is converted to energy and lights up the Sun. That\u2019s a lot of fusion, which is why the Sun makes so many neutrinos. Once created, they fly out of the Sun at very nearly the speed of light.\n Some come to Earth. Most pass right through us because, again, they don\u2019t like to interact with matter.\n That makes them very hard to detect, but there are ways. For example, if a neutrino happens to slam into a molecule of 1,2,4-Trimethylbenzene \u2014 also called pseudocumene, a ring shaped carbon-based molecule \u2014 it\u2019ll eject an electron, and after it does some physics a photon of light gets emitted. So if you have a tank full of this stuff, and surround it with very sensitive light detectors, the occasional flash from a neutrino event can be recorded.\n It\u2019s not that easy, of course. Very few neutrinos will interact with the pseudocumene. So you need a big tank, and you need to build it underground because cosmic rays hitting our atmosphere create muons which can  also create flashes which interfere with your results, and you need to surround it with an even bigger tank of water to absorb the muons that still get through.\n  Sill, that\u2019s exactly what an international collaboration of scientists did.  The Borexino neutrino observatory is 1400 meters under the rock below the Gran Sasso mountain in Italy. It has an 8.5 meter wide nylon balloon filled with 280 tons of pseudocumene, surrounded by a tank of water, surrounded by over 2200 very sensitive photon detectors.\n They turned everything on, then waited. Over the course of July 2016\u2013February 2020 (1072 days), they painstakingly recorded all the events, and had to go through heroic efforts to prevent all manners of other reactions that also create little light flashes from interfering with their experiment. They also had to distinguish proton-proton chain neutrinos from ones made in the CNO cycle, but the neutrinos have different energies, which makes it possible to separate them out.\n They just announced their results: They detected the CNO neutrinos! About 20 per day interacted with the pseudocumene \u2014 20 per day, when sextillions of them had passed through! \u2014 about what you\u2019d expect from theory.\n In fact, it\u2019s important to know that until now, we only had theory telling us the CNO cycle was occurring. There\u2019s no way to get direct measurements of the Sun\u2019s core, buried under hundreds of thousands of kilometers of, well,  Sun\u2026 except through neutrinos. The CNO cycle was first theorized in the 1930s, and it\u2019s taken this long to finally detect them.\n  There is some uncertainty in the measurements, but they found that they can rule out these neutrinos not being from the CNO cycle at 99% certainty. In other words, they are very unlikely to be from anything else.\n This is an important discovery for a lot of reasons. For one thing, while the proton-proton chain dominates in the Sun, in stars with more than about 1.3 times the Sun\u2019s mass the CNO cycle dominates (it kicks in strongly at higher temperatures), so knowing how it works in the Sun tells us about other stars.\n Also, the presence of heavier elements (what astronomers misleadingly call  metals, meaning any element heavier than hydrogen and helium) can affect the fusion rate in the Sun\u2019s CNO cycle, and the amount of these metals isn\u2019t perfectly well known; different methods to measure them yield slightly different amounts, but enough to mess up what we know about the fusion in the core. This experiment agrees with ones that find a lower metal content.  That has a ripple effect on a lot of other ideas, including details on how we think the Sun and planets formed, how the Sun ages, and how it will die.\n All that, from less than two dozen neutrinos a day, while countless more go undetected. It never stops amazing me how clever we humans can be, able to figure out a way to see the invisible, and literally sampling the Universe as it passes right through us.\n      By submitting your information, you agree to our  Privacy Policy,  Terms and Conditions and to receive marketing messages from NBCUniversal.", "posttime": "2020-08-07 18:50:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u592a\u9633,neutrinos,\u4e2d\u5fae\u5b50", "title": "\u6765\u81ea\u592a\u9633\u7684CNO\u4e2d\u5fae\u5b50\u7ec8\u4e8e\u88ab\u63a2\u6d4b\u5230\u4e86", "title_en": "CNO neutrinos from the Sun are finally detected", "transed": 1, "url": "https://www.syfy.com/syfywire/after-nearly-a-century-elusive-cno-neutrinos-are-finally-seen-from-the-sun", "via": "", "real_tags": ["\u592a\u9633", "neutrinos", "\u4e2d\u5fae\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016857, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u653eRISC-V\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784(ISA)\u4e2d\u6700\u6709\u8da3\u7684\u90e8\u5206\u53ef\u80fd\u662f\u77e2\u91cf\u6269\u5c55(RISC-V&34\uff1bV&34\uff1b)\u3002\u4e0e\u4e00\u822c\u7684\u5355\u6307\u4ee4\u591a\u6570\u636e(SIMD)\u6307\u4ee4\u96c6\u76f8\u6bd4\uff0cRISC-V\u77e2\u91cf\u6307\u4ee4\u662f\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5\u7684(VLA)\u3002\u56e0\u6b64\uff0cRISC-V&34\uff1bV&34\uff1bCPU\u53ef\u4ee5\u7075\u6d3b\u5730\u9009\u62e9\u77e2\u91cf\u5bc4\u5b58\u5668\u5927\u5c0f\uff0c\u800cRISC-V&34\uff1bV&34\uff1b\n\u672c\u6587\u6bd4\u8f83\u4e86\u4e24\u79cd\u4e3b\u8981\u7684\u5411\u91cfISA\u98ce\u683c\uff0c\u8ba8\u8bba\u4e86\u4f7f\u7528RISC-V&34\uff1bV&#34\uff1bDraft Version 0.8(\u622a\u81f32020\u5e74\u521d\u7684\u5f53\u524d\u7248\u672c)\u5411\u91cf\u6307\u4ee4\u5b9e\u73b0\u7684\u5b57\u7b26\u4e32\u5904\u7406\u793a\u4f8b\uff0c\u5e76\u8be6\u7ec6\u8bf4\u660e\u4e86\u5982\u4f55\u5728Linux\u4e0b\u8bbe\u7f6eRISC-V&34\uff1bV&#34\uff1b\u5f00\u53d1\u73af\u5883\u3002\n\u5bf9\u4e8e\u7279\u5b9a\u4e8e\u5411\u91cf\u957f\u5ea6(VLS)\u7684SIMD\u6307\u4ee4\u96c6\uff0c\u4e3b\u8981\u95ee\u9898\u662f\u9009\u62e9\u6b63\u786e\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u5927\u5c0f\u3002\u5f53\u7136\uff0c\u5728\u6570\u636e\u7ea7\u5e76\u884c\u5ea6\u548c\u786c\u4ef6\u6210\u672c\u4e4b\u95f4\u5b58\u5728\u6743\u8861\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u7528\u6237\u5bf9\u5177\u6709\u66f4\u5bbd\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u5f3a\u5927CPU\u611f\u5174\u8da3\uff0c\u800c\u666e\u901a\u7528\u6237\u5bf9\u4e2d\u7b49\u5927\u5c0f\u7684\u5bc4\u5b58\u5668\u662f\u6ca1\u95ee\u9898\u7684\u3002\u8fd9\u4ee5x86\u4e3a\u4f8b\u8bf4\u660e\uff0c\u5176\u4e2d\u7684\u7b54\u6848\u662f\u63d0\u4f9b\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684VLS ISA\uff0c\u8bf8\u5982MMX(64\u4f4d\u5bc4\u5b58\u5668)\u3001SSE(128\u4f4d)\u3001AVX(256\u4f4d)\u548cAVX512(512\u4f4d)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8ex86\uff0c\u7b54\u6848\u662f\u63d0\u4f9b\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684VLS ISA\uff0c\u8bf8\u5982MMX(64\u4f4d\u5bc4\u5b58\u5668)\u3001SSE(128\u4f4d)\u3001AVX(256\u4f4d)\u548cAVX512(512\u4f4d)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8ex86\uff0c\u7b54\u6848\u662f\u63d0\u4f9b\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684VLS ISA\uff0c\u4f8b\u5982MMX(64\u4f4d\u5bc4\u5b58\u5668)\u3001SSE(128\u4f4d)\u3001AVX(256\u4f4d\u3002\n\u7531\u4e8e\u5411\u540e\u517c\u5bb9\uff0c\u6bcf\u4e2a\u6dfb\u52a0\u65b0\u7684VLS ISA\u7684CPU\u8fd8\u5fc5\u987b\u652f\u6301\u6240\u6709\u73b0\u6709\u7684VLS ISA\u3002\u8fd9\u4f1a\u5bfc\u81f4\u64cd\u4f5c\u7801\u7a7a\u95f4\u7684\u6d6a\u8d39\uff0c\u5e76\u589e\u52a0CPU\u6307\u4ee4\u89e3\u7801\u5668\u7684\u590d\u6742\u5ea6\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u589e\u52a0\u4e86\u7a0b\u5e8f\u5458\u7684\u590d\u6742\u5ea6\uff0c\u4ed6\u4eec\u968f\u540e\u4f1a\u8bb0\u4f4f(\u6216\u4e00\u76f4\u67e5\u627e)\u6240\u6709VLS ISA\u4e4b\u95f4\u7684\u53e5\u6cd5\u548c\u529f\u80fd\u5dee\u5f02\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u867d\u7136\u4e3a\u8f83\u5c0f\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u7f16\u5199\u7684VLS\u4ee3\u7801\u5728\u8f83\u65b0\u7684CPU\u4e0a\u8fd0\u884c\uff0c\u4f46\u5b83\u4e0d\u80fd\u5229\u7528\u8f83\u5bbd\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u91cd\u65b0\u5b9e\u73b0\u73b0\u6709\u4ee3\u7801\u624d\u80fd\u4f7f\u7528\u65b0\u7684VLS ISA\u3002\u7c7b\u4f3c\u5730\uff0c\u4e3a\u9ad8\u7aefCPU\u7f16\u5199\u7684\u4ee3\u7801\u4e0d\u80fd\u5728\u4e2d\u7aefCPU\u4e0a\u8fd0\u884c(\u56e0\u4e3a\u5b83\u9700\u8981\u5177\u6709\u66f4\u5bbd\u5411\u91cf\u5bc4\u5b58\u5668\u7684VLS-ISA)\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u8981\u4e48\u5fc5\u987b\u7784\u51c6\u4e00\u4e9b\u8f83\u65e7\u7684(\u5e0c\u671b\u5e7f\u6cdb\u4f7f\u7528\u7684)VSL-ISA\uff0c\u8981\u4e48\u5df2\u7ecf\u5c06\u76ee\u6807\u5bf9\u51c6\u4e86\u4e00\u4e9b\u8f83\u8001\u7684(\u5e0c\u671b\u5e7f\u6cdb\u4f7f\u7528\u7684)VSL-ISA\u3002\n\u6240\u6709\u8fd9\u4e00\u5207\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8bbe\u8ba1\u4e00\u4e2a\u53ef\u53d8\u957f\u5ea6\u7684\u5411\u91cf\u6307\u4ee4\u96c6\uff0c\u8fd9\u6837\u6307\u4ee4\u5c31\u4e0e\u5177\u4f53CPU\u5b9e\u73b0\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u5927\u5c0f\u65e0\u5173\uff0c\u56e0\u6b64\u4e8c\u8fdb\u5236\u4ee3\u7801\u53ef\u4ee5\u5728\u4f4e\u7aef\u3001\u4e2d\u7aef\u548c\u9ad8\u7aefCPU\u4e4b\u95f4\u79fb\u690d\uff0c\u5e76\u81ea\u52a8\u5229\u7528\u8f83\u65b0CPU\u4e2d\u66f4\u5bbd\u7684\u5bc4\u5b58\u5668\u3002\nRISC-V\u77e2\u91cf\u6269\u5c55&#34\uff1bV&34\uff1b\u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u77e2\u91cf\u6307\u4ee4\u96c6\u3002\u4ece2020\u5e74\u521d\u5f00\u59cb\uff0cRISC-V&34\uff1bV&34\uff1b\u89c4\u8303\u7684\u7248\u672c\u4e3a0.8\uff0c\u5904\u4e8e\u8349\u7a3f\u72b6\u6001\u3002\nRISC-V&34\uff1bV&34\uff1b\u589e\u52a032\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u53ef\u7528\u4f5c\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c\u6700\u591a\u53ef\u5c068\u4e2a\u5bc4\u5b58\u5668\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u5411\u91cf\u6307\u4ee4(\u5982vadd.vv)\u7684\u64cd\u4f5c\u6570\u662f\u5355\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u6216\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u3002\n\u7531\u4e8e\u77e2\u91cf\u5bc4\u5b58\u5668\u7684\u957f\u5ea6\u53ef\u53d8\uff0c\u56e0\u6b64RISC-V&34\uff1bV&34\uff1b\u4ee3\u7801\u5fc5\u987b\u6307\u793a\u5176\u60f3\u8981\u4f7f\u7528\u7684\u6700\u5927\u77e2\u91cf\u957f\u5ea6\uff0c\u4f8b\u5982\uff1a\n\u8fd9\u610f\u5473\u7740\u5f53\u6307\u4ee4\u5728\u5bc4\u5b58\u5668t0\u4e2d\u8fd4\u56de\u7ed3\u679c\u957f\u5ea6\u65f6\uff0c\u8bf7\u6c42\u9ad8\u8fbea2\u4e2a8\u4f4d\u5bbd(E8)\u5143\u7d20\u7684\u5411\u91cf\u957f\u5ea6(VL)\u3002\u56e0\u6b64\uff0c\u5982\u679cA2\u5bc4\u5b58\u5668\u88ab\u8bbe\u7f6e\u4e3a-\u6bd4\u65b9\u8bf4-4096\uff0c\u5219\u5728\u5177\u6709128\u4f4d\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u957f\u5ea6(Vlen)\u7684CPU\u4e0a\uff0c\u4ee5\u4e0b\u5411\u91cf\u6307\u4ee4\u5bf916\u4e2a\u5143\u7d20\u5bbd\u7684\u5411\u91cf\u8d77\u4f5c\u7528\uff0c\u56e0\u6b64t0\u88ab\u8bbe\u7f6e\u4e3a16\uff0c\u800c\u5728\u5177\u6709512\u4f4d\u5bc4\u5b58\u5668\u7684CPU\u4e0a\uff0c\u5411\u91cf\u88ab\u914d\u7f6e\u4e3a64\u4e2a\u5143\u7d20\u5bbd\uff0c\u5e76\u4e14t0\u88ab\u8bbe\u7f6e\u4e3a64\u3002\n\u6b64\u65b9\u6cd5\u8fd8\u7b80\u5316\u4e86\u4ee5\u5411\u91cf\u957f\u5ea6\u5757\u8fed\u4ee3\u8f93\u5165\u6570\u7ec4\u7684\u5faa\u73af\u3002\u4f8b\u5982(\u5176\u4e2da1\u5305\u542b2\u4e58\u4ee54\u5b57\u8282\u7684\u6570\u7ec4\u7684\u5730\u5740)\uff1a\n.Loop\uff1a#\u7531\u4e8e.L\u524d\u7f00vsetvli t0\uff0ca2\uff0ce32\u7684\u672c\u5730\u7b26\u53f7\u540d\u79f0#\u914d\u7f6e32\u4f4d\u5143\u7d20vlw.v4\u7684\u5411\u91cf\uff0c(A1)#\u5c06t0\u4e2a\u5143\u7d20\u52a0\u8f7d\u5230v4\u4e2d\uff0c#\u4ece\u5b58\u50a8\u5728a1\u4e2d\u7684\u5730\u5740\u5f00\u59cb...#\u4f7f\u7528\u8be5\u5757slli t1\uff0ct0\uff0c2#\u5de6\u79fb\u903b\u8f91\uff0c\u5373\u65f6\u95f44\u6dfb\u52a0a1\uff0ca1\uff0ct1#\u901a\u8fc7\u8bfb\u53d6\u5143\u7d20suba2\uff0ca2\uff0ct0\u9012\u589esrc#\u9012\u51cfn bnez a2\uff0c.Loop#\u5982\u679c\u4e0d\u7b49\u4e8e\u96f6\uff0c\u5219\u5206\u652f\u5230\u5faa\u73af\u5934...#\u7ee7\u7eed\u3002\n\u5982\u679ca2\u4e0d\u662f\u6700\u5927\u5411\u91cf\u957f\u5ea6\u7684\u500d\u6570\uff0c\u5219\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\u4f1a\u5c06\u5411\u91cf\u957f\u5ea6\u8bbe\u7f6e\u4e3a\u8f83\u5c0f\u7684\u503c\uff0c\u968f\u540e\u7684\u5411\u91cf\u6307\u4ee4\u4f1a\u5ffd\u7565\u672a\u4f7f\u7528\u7684\u5c3e\u968f\u5143\u7d20\u3002\u8fd9\u79cd\u9690\u5f0f\u63a9\u7801\u673a\u5236\u4e0e\u5927\u591a\u6570RISC-V\u5411\u91cf\u6307\u4ee4\u652f\u6301\u7684\u53ef\u9009\u63a9\u7801\u64cd\u4f5c\u6570\u6b63\u4ea4\u3002\n\u4e0e\u6b64\u5f62\u6210\u5bf9\u6bd4\u7684\u662f\uff0c\u5bf9\u4e8e\u5411\u91cf\u957f\u5ea6\u7279\u5b9a\u7684ISA\uff0c\u4e3b\u5faa\u73af\u4e4b\u540e\u901a\u5e38\u5fc5\u987b\u8ddf\u968f\u4e00\u4e9b\u7ec8\u7ed3\u4ee3\u7801\u5757\uff0c\u4ee5\u663e\u5f0f\u5904\u7406\u672a\u586b\u6ee1\u5b8c\u6574\u5bc4\u5b58\u5668\u7684\u6700\u540e\u5143\u7d20\uff0c\u4f8b\u5982\uff1a\nConst unsign char*p=inp\uff1bsize_t l=n/(Vector_length*element_bytes)\uff1bfor(size_t i=0\uff1bi&lt\uff1bl\uff1b++i\uff0cp+=Vector_length*element_bytes){...//\u5c06p\u52a0\u8f7d\u5230\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d...//\u6267\u884c\u4e00\u4e9b\u5411\u91cf\u6307\u4ee4}//\u5904\u7406\u4e00\u4e9b\u5269\u4f59\u5b57\u8282//\u4f8b\u5982\u901a\u8fc7\u4e3a(size_t i=l\uff1bI&lt\uff1bn\uff1b++i\uff0cp+=ELEMENT_BYTES){...//\u5904\u7406\u4f4d\u4e8ep}\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\n\u4e3a\u4e86\u7528\u4e00\u4e2a\u771f\u5b9e\u7684\u4f8b\u5b50\u6765\u8bf4\u660eRISC-V&V#34\uff1b\u8fd9\u4e00\u8282\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u5c06\u4e8c\u8fdb\u5236\u7f16\u7801\u5c0f\u6570(BCD)\u5b57\u7b26\u4e32\u8f6c\u6362\u6210ASCII\u5b57\u7b26\u4e32\u7684\u77e2\u91cf\u5316\u51fd\u6570\u3002\u4e3a\u4ec0\u4e48\u8981\u5c06BCD\u8f6c\u6362\u6210ASCII\u5b57\u7b26\u4e32\uff1f\u8fd9\u9879\u4efb\u52a1\u975e\u5e38\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u4f7f\u7528\u4e86\u5927\u591a\u6570\u4e0d\u540c\u7684\u5411\u91cf\u6307\u4ee4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u8db3\u591f\u7b80\u5355\uff0c\u53ef\u4ee5\u653e\u5165\u4e00\u7bc7\u5c0f\u6587\u7ae0\u4e2d\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u7279\u5b9a\u9886\u57df\u7684\u77e5\u8bc6\u3002\u5b83\u8fd8\u6f14\u793a\u4e86\u4e00\u4e9b\u53ef\u80fd\u4e0d\u662f\u5f88\u660e\u663e\u7684\u5185\u5bb9\n\u4f7f\u7528BCD\uff0c\u4e00\u4e2a\u5b57\u8282(8\u4f4d)\u88ab\u5206\u6210\u4e24\u4e2a\u534a\u5b57\u8282(4\u4f4d)\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u534a\u5b57\u8282\u5b58\u50a8\u4e00\u4e2a(\u5341\u516d\u8fdb\u5236)\u5341\u8fdb\u5236\u6570\u5b57\u3002\u8bf7\u6ce8\u610f\uff0c4\u4f4d\u5141\u8bb8\u5bf924\u4e2a\u503c\u8fdb\u884c\u7cbe\u786e\u7f16\u7801\uff0c\u56e0\u6b64\u5f53\u5b83\u4ec5\u7528\u4e8e\u5b58\u50a8\u5341\u8fdb\u5236\u6570\u5b57\u65f6\uff0c\u5b83\u4e0d\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u7f16\u7801\u3002\n\u5c31\u6211\u4eec\u7684\u793a\u4f8b\u800c\u8a00\uff0c\u7ec3\u4e60\u662f\u7f16\u5199\u77e2\u91cf\u4ee3\u7801\uff0c\u5c06\u8bf8\u5982{0x12\uff0c0x34\uff0c...\uff0c0xcd\uff0c0xef}\u4e4b\u7c7b\u7684BCD\u5b57\u7b26\u4e32\u6709\u6548\u5730\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684ASCII\u5b57\u7b26\u4e32(\u4f8b\u5982\uff0c{&#39\uff1b1&#39\uff1b\uff0c&#39\uff1b2&#39\uff1b\uff0c&#39\uff1b3&#39\uff1b\uff0c&#39\uff1b4&#39\uff1b\uff0c...\uff0c&#39\uff1bc&#39\uff1b\uff0c&#39\uff1bd&#39\uff1b\uff0c&#39\uff1b\uff0c&#39\uff1bf&#39\uff1b})\u3002\u5728\u8f83\u9ad8\u7ea7\u522b\u4e0a\uff0c\u89e3\u51b3\u65b9\u6848\u5305\u62ec\u5c06\u534a\u5b57\u8282\u5206\u79bb\u4e3a\u5355\u4e2a\u5b57\u8282\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u5b57\u8282\u8f6c\u6362\u4e3a\u5339\u914d\u7684ASCII\u503c\u3002\n\u8fd9\u610f\u5473\u7740\u4ecesrc\u8bfb\u53d6n\u4e2a\u8f93\u5165\u5b57\u8282\uff0c\u5e76\u4e14\u8f6c\u6362\u5c062*n\u4e2a\u5b57\u8282\u5199\u5165dst\u8f93\u51fa\u7f13\u51b2\u5668\u3002\u5728RISC-V\u8c03\u7528\u7ea6\u5b9a\u4e0b\uff0cdst\u88ab\u4f20\u9012\u5230\u5bc4\u5b58\u5668a0\u4e2d\uff0csrc\u88ab\u4f20\u9012\u5230\u5bc4\u5b58\u5668a1\u4e2d\uff0c\u800cn\u88ab\u4f20\u9012\u5230\u5bc4\u5b58\u5668a2\u4e2d\u3002\n.Loop\uff1a#\u672c\u5730\u7b26\u53f7\u540d\u79f0\uff0c\u56e0\u4e3a.L\u524d\u7f00vsetvli a3\uff0ca2\uff0ce16\uff0cm8#\u5207\u6362\u523016\u4f4d\u5143\u7d20\u5927\u5c0f\uff0c#4\u7ec48\u4e2a\u5bc4\u5b58\u5668#--&gt\uff1ba3=min(a2\uff0c8*vlenb/2)vlbu.v v16\uff0c(A1)#\u52a0\u8f7da3\u65e0\u7b26\u53f7\u5b57\u8282\uff0c#\u6bcf16\u4f4d\u5143\u7d20\u4e00\u4e2a\u5b57\u8282\uff0c\u96f6\u6269\u5c55\uff0c#\u4ece\u5b58\u50a8\u5728a1\u4e2d\u7684addr\u5f00\u59cb#--&gt\uff1bV16=|0\uff0ca1[vlenb/2-1]\uff0c...\uff0c0\uff0ca1[1]\uff0c0\uff0ca1[0]|\uff0c...\uff0c#v23=|0\uff0ca1[a3-1]\uff0c...\uff0c0\uff0ca1[7*vlenb/2]|#--&gt\uff1bv16=|...00MN 00kl 00ij 00gh|\u6dfb\u52a0a1\uff0ca1\uff0ca3#\u901a\u8fc7\u8bfb\u53d6\u5143\u4ef6suba2\uff0ca2\uff0ca3#\u9012\u589esrc\u3002\n\u4e3b\u5faa\u73af\u9996\u5148\u914d\u7f6e16\u4f4d\u7684\u5411\u91cf\u5143\u7d20\u5927\u5c0f(E16)\uff0c\u5c068\u4e2a\u5bc4\u5b58\u5668\u5206\u7ec4\u5728\u4e00\u8d77(M8)\uff0c\u5e76\u8bf7\u6c42\u7b49\u4e8e\u5269\u4f59\u6e90\u5b57\u8282\u6570\u6216CPU\u6700\u5927\u503c\u7684\u5411\u91cf\u957f\u5ea6\u3002\u5728\u6b64\u5206\u7ec4\u4e2d\uff0c\u901a\u8fc7\u4f7f\u7528\u53ef\u88ab8\u6574\u9664\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u6765\u8bbf\u95ee\u6bcf\u4e2a\u5bc4\u5b58\u5668\u7ec4\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cV0\u6807\u8bc6\u7531V0\u3001V1\u3001...\u3001V7\u7ec4\u6210\u7684\u7ec4\uff0cV8\u6807\u8bc6V8\u3001...\u3001V15\u7b49\u3002\nVL*.v LOAD\u6307\u4ee4\u6709\u4e0d\u540c\u7684\u53d8\u4f53\u3002\u8fd9\u91cc\uff0cvlbu.v\u53d8\u91cf\u4e3a\u6bcf\u4e2a16\u4f4d\u5143\u7d20\u6269\u5c55\u6bcf\u4e2a\u8f93\u5165\u5b57\u8282\uff0c\u8fd9\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u8fd9\u76f4\u63a5\u4e3a\u534a\u5b57\u8282\u7684\u6df7\u6d17\u7559\u51fa\u4e86\u7a7a\u95f4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u52a0\u5bbd\u52a0\u8f7d\uff0c\u4ece\u800c\u8282\u7701\u4e86\u5355\u72ec\u7684\u52a0\u5bbd\u64cd\u4f5c\uff0c\u5982vwaddu.vx\u3002\n\u8fd9\u610f\u5473\u7740\u5728\u5177\u6709256\u4f4d\u77e2\u91cf\u5bc4\u5b58\u5668\u7684CPU\u4e0a\uff0c\u6b64\u4ee3\u7801\u5c06\u6700\u591a128\u4e2a\u8f93\u5165\u5b57\u8282\u52a0\u8f7d\u5230v16\u5bc4\u5b58\u5668\u7ec4\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6ce8\u91ca\u4e2d\u7684\u5bc4\u5b58\u5668\u5185\u5bb9\u62ec\u5728||\u4e2d\uff0c\u4ece\u6700\u4f4e\u6709\u6548\u5143\u7d20\u5f00\u59cb\u4ece\u53f3\u5411\u5de6\u4e66\u5199\u3002\u4efb\u610f\u534a\u5b57\u8282\u6709\u65f6\u7531\u5360\u4f4d\u7b26\u53d8\u91cf(\u5982g\u3001h\u3001...)\u8868\u793a\u3002\nVsll.vi v24\u3001v16\u30018#\u5c06\u6bcf\u4e2a\u5143\u7d20\u5411\u5de6\u79fb\u4f4d8\u4f4d\u903b\u8f91#--&gt\uff1bv24=|...\u3002Mn00 kl00 ij00 gh00|vsrl.vi v16\uff0cv16\uff0c4#\u79fb\u4f4d-\u53f3\u79fb-\u903b\u8f91\u6bcf\u4e2a\u5143\u7d204\u4f4d#--&gt\uff1bV16=|...000m 000k 000i 000g|slli A3\uff0cA3\uff0c1#\u6309\u7acb\u5373\u6570\u5de6\u79fb\u903b\u8f91\uff0c#\u5373\u5c06\u77e2\u91cf\u5143\u7d20vsetvli T4\uff0cA3\uff0cE8\uff0cM8#\u7684\u6570\u91cf\u7ffb\u500d\uff0c\u5207\u6362\u52308\u4f4d\u5143\u7d20\u5927\u5c0f\uff0c#4\u7ec48\u4e2a\u5bc4\u5b58\u5668vand.vx v24\uff0cv24\uff0cT2#\uff0c\u6bcf\u4e2a\u5143\u7d20\u5177\u67090x0f\uff0c#\uff0c\u5373\u5c06\u9ad8\u4f4d\u5b57\u8282#--&gt\u7f6e\u96f6\uff1bV24=|...0n 00 0l 00 0j 00 0h 00|vor.vv v16\u3001v16\u3001v24#\u6216\u6bcf\u4e2a\u5143\u7d20#--&gt\uff1bv16=|...0n 0m 0l 0k 0j 0i 0h 0g|\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u793a\u4f8b\u663e\u793a\u4e86ISA\u7684\u5927\u591a\u6570\u8bed\u6cd5\u7ea6\u5b9a\u3002\u5411\u91cf\u6307\u4ee4\u4ee5v\u5f00\u5934\uff0c\u540e\u7f00(\u5982.vi\u3001.vx\u548c.vv)\u63cf\u8ff0\u6e90\u64cd\u4f5c\u6570\u7c7b\u578b\uff0c\u5373\u5411\u91cf\u7acb\u5373\u6570\u3001\u5411\u91cf\u6807\u91cf\u548c\u5411\u91cf\u5411\u91cf\u3002\n\u4f4d\u79fb\u4f4d\u6307\u4ee4\u4e0d\u4f1a\u8de8\u8d8a\u5143\u7d20\u8fb9\u754c\uff0c\u56e0\u6b64\uff0c\u53ea\u9700\u5bf9\u5411\u91cf\u7ec4v24\u8fdb\u884c\u96f6\u63a9\u7801\uff0c\u800c\u4e0d\u9700\u8981\u5bf9v16\u8fdb\u884c\u63a9\u7801\u3002\u63a9\u7801\u4f4d\u4e8e\u5faa\u73af\u5f00\u59cb\u524d\u8bbe\u7f6e\u7684\u5bc4\u5b58\u5668T2\u4e2d\u3002\n\u6b64\u65f6\u5c06\u77e2\u91cf\u5bc4\u5b58\u5668\u914d\u7f6e\u5207\u6362\u52308\u4f4d\u5143\u7d20(E8)\u5141\u8bb8\u4f7f\u75280xf\u4f5c\u4e3a\u63a9\u7801\u503c\uff0c\u800c\u4e0d\u662f\u8f83\u5927\u76840xf00\u3002\u56e0\u6b64\uff0c\u5b83\u9002\u5408\u52a0\u8f7d\u7acb\u5373\u6307\u4ee4\u7684\u7acb\u5373\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982\u4fdd\u5b58\u4e00\u6761\u9644\u52a0\u6307\u4ee4(\u5373addi t2\u30010\u300115)\u3002\u5b83\u751a\u81f3\u9002\u5408\u538b\u7f29\u52a0\u8f7d\u7acb\u5373\u6307\u4ee4\u7684\u7acb\u5373\u64cd\u4f5c\u6570\uff0c\u5b83\u53ea\u7f16\u7801\u6210\u4e24\u4e2a\u5b57\u8282(\u5373c.li)\uff0c\u800c\u4e0d\u662f\u5e38\u89c4\u7684\u56db\u4e2a\u5b57\u8282\u3002\n\u8fd9\u91cc\uff0c\u5411\u91cf\u7ec4V8\u7528\u4f5c\u67e5\u627eASCII\u503c\u7684\u8868\u3002\u8fd9\u610f\u5473\u7740V8\u67e5\u627e\u8868\u5c06\u6574\u6570{0\uff0c1\uff0c2\uff0c...\uff0c0xd\uff0c0xe\uff0c0xf}\u6620\u5c04\u5230ASCII\u5b57\u7b26{&#39\uff1b0&#39\uff1b\uff0c&#39\uff1b1&#39\uff1b\uff0c&#39\uff1b2&#39\uff1b\uff0c...\uff0c&#39\uff1bd&#39\uff1be&#39\uff1b\uff0c&#39\uff1bf&#39\u3002\nLi a6\uff0c16#\u52a0\u8f7d\u7acb\u5373\u6570(\u4f2a\u6307\u4ee4)vsetvli t0\uff0ca6\uff0ce8\uff0cm8#\u5207\u6362\u52308\u4f4d\u5143\u7d20\u5927\u5c0f\uff0c#\u53734\u7ec48\u4e2a\u5bc4\u5b58\u5668\u3002v v8#\u5b58\u50a8\u5411\u91cf\u5143\u7d20\u7d22\u5f15\uff0c#\u5373v8=|16\uff0c...\uff0c2\uff0c1\uff0c0|vmsgtu.vi v0\uff0cv8\uff0c9#\u5982\u679c\u5927\u4e8e\u65e0\u7b26\u53f7\u7acb\u5373\u6570#--&gt\uff0c\u5219\u8bbe\u7f6e\u63a9\u7801\u4f4d\uff1bV0=|1\uff0c1\uff0c1\uff0c1\uff0c1\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c48#\u7acb\u5373\u52a0\u8f7d\uff0c\u5373vadd.vx v8\uff0cv8\uff0cA7#\u5c06\u6807\u91cf\u6dfb\u52a0\u5230\u6bcf\u4e2a\u5143\u7d20addi A7\uff0cA7\uff0c-9#\u6dfb\u52a0\u7acb\u5373\u6570\uff0c\u5373\u8bbe\u7f6e\u4e3a39==#39\uff1ba&#39\uff1b-&#39\uff1b0&#39\uff1b-10\uff0c#\u5373\u5230\u8fbea&39\uff1ba&#39\uff1b\uff0cb&#39\uff1b\uff0c\u2026\u2026\u3002Vadd.vx v8\u3001v8\u3001A7\u3001v0.t#\u7528\u4e8e\u9644\u52a0\u504f\u79fb\u91cf\u7684\u5c4f\u853d\u6dfb\u52a0\u3002\n\u4e3a16\u4e2a\u5143\u7d20\u7684\u5411\u91cf\u914d\u7f6e8\u4e2a\u5bc4\u5b58\u5668\u7684\u5206\u7ec4\u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u77eb\u6789\u8fc7\u6b63\uff0c\u56e0\u4e3a128\u4f4d\u5411\u91cf\u5bc4\u5b58\u5668\u5c31\u8db3\u591f\u4e86\uff0c\u5e94\u8be5\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53ef\u80fd\u6709\u4e00\u4e2aCPU\u53ea\u652f\u6301\u5b9e\u73b064\u4f4d\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u800c\u6211\u4eec\u9700\u8981\u5bf92\u4e2a\u5bc4\u5b58\u5668\u8fdb\u884c\u5206\u7ec4\u3002\u7531\u4e8e\u53ef\u80fd\u9700\u8981\u8fd9\u6837\u7684\u5206\u7ec4\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u914d\u7f6e\u6700\u5927\u503c\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u574f\u5904\u3002\nV0.t\u8bed\u6cd5\u53ea\u662f\u5c06V0\u7528\u4f5c\u63a9\u7801\u7684\u6807\u8bb0\u3002\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u914d\u7f6e\u4e86\u5bc4\u5b58\u5668\u7ec4\uff0c\u63a9\u7801\u4e5f\u59cb\u7ec8\u53ea\u7531\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u6210\u3002\u5bf9\u4e8e\u5f53\u524d\u7684&#34\uff1bV&#34\uff1b0.8\u8349\u7a3f\uff0cV0\u5bc4\u5b58\u5668\u662f\u63a9\u7801\u64cd\u4f5c\u6570\u7684\u552f\u4e00\u6709\u6548\u9009\u62e9\u3002\n\u4e0e\u524d\u9762\u7c7b\u4f3c\uff0c\u503c39\u662f\u7528addi\u6784\u9020\u7684\uff0c\u800c\u4e0d\u662f\u7528\u4f2a\u6307\u4ee4li\u76f4\u63a5\u5c06\u5176\u52a0\u8f7d\u5230\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u56e0\u4e3a-9\u9002\u5408\u4e8e\u538b\u7f29\u7684c.addi\u6307\u4ee4\u7684\u7acb\u5373\u64cd\u4f5c\u6570\u3002\nVsb.v v24\uff0c(A0)#\u5c06\u7ed3\u679c\u5199\u5165dst#--&gt\uff1ba0[0]=v24[0]\uff0ca0[1]=v24[1]\uff0c...\uff0ca0[vl-1]=v24[vlenb-1]\uff0c...\uff0c#a0[vlenb*7]=v31[0]\uff0c...\uff0ca0[t0-1]=v31[vlenb-1]#--&gt\uff1bat\u3002\uff0c&#39\uff1bh&#39\uff1b\uff0c&#39\uff1bi&#39\uff1b\uff0c&#39\uff1bj&#39\uff1b\uff0c&#39\uff1bk&#39\uff1b\uff0c&#39\uff1bl&#39\uff1b\uff0c&#39\uff1bm&#39\uff1b\uff0c&#39\uff1bn&#39\uff1b]\u5982\u679c\u4e0d\u7b49\u4e8e\u96f6ret\uff0c\u5219\u6dfb\u52a0a0\uff0ca0\uff0ct3#\u589e\u91cfDST bnez a2\uff0c.Loop#\u5206\u652f\u5230\u5faa\u73af\u5934\u3002\n\u5982\u679c\u5904\u7406\u5b8c\u6574\u4e2a\u8f93\u5165\u7f13\u51b2\u533a\uff0c\u5219\u4f1a\u7559\u4e0b\u5faa\u73af\u4e0e\u51fd\u6570\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u5927\u591a\u6570RISC-V\u6307\u4ee4\u7684\u8bed\u6cd5\u9075\u5faa\u76ee\u6807-\u6e90\u987a\u5e8f\uff0c\u4f46\u5b58\u50a8\u6307\u4ee4\u7684\u987a\u5e8f\u662f\u98a0\u5012\u7684\u3002\nRISC-V&34\uff1bV&34\uff1b\u77e2\u91cf\u6269\u5c55ISA\u5177\u6709\u8db3\u591f\u7684\u591a\u6837\u6027\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u6709\u7528\u7684\u4f4d\u548c\u5b57\u8282\u6d17\u724c\u6307\u4ee4\u3001\u5141\u8bb8\u5c4f\u853d\u5143\u7d20\u7684\u6307\u4ee4\u4ee5\u53ca\u5b9e\u73b0\u5bf9\u5b57\u7b26\u4e32\u5904\u7406(\u5982\u5143\u7d20\u6536\u96c6\u548c\u52a0\u5bbd)\u6709\u7528\u7684\u64cd\u4f5c\u7684\u6307\u4ee4\u3002\n\u53ef\u7528\u7684\u6307\u4ee4\u4e0e\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5(VLA)\u8bbe\u8ba1\u76f8\u7ed3\u5408\u4ea7\u751f\u4e86\u7d27\u51d1\u7684\u4ee3\u7801\uff0c\u4f8b\u5982\uff0c\u4e3b\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u53ea\u6267\u884c14\u6761\u6307\u4ee4\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ee3\u7801\u6765\u5904\u7406\u5c3e\u90e8\u5b57\u8282\u3002\n\u8fd9\u6837\u5b9e\u73b0\u7684\u541e\u5410\u91cf\u975e\u5e38\u597d\uff0c\u5373\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u81ea\u52a8\u5229\u7528\u6bcf\u4e2aCPU\u4e0a\u5b8c\u6574\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u5927\u5c0f\uff0c\u65e0\u8bba\u662f\u4f4e\u7aef\u8fd8\u662f\u9ad8\u7aef\u3002\u6b64\u5916\uff0c\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u5206\u7ec4\u5141\u8bb8\u589e\u52a0\u541e\u5410\u91cf\uff0c\u56e0\u4e3a\u6709\u8bb8\u591a\u53ef\u7528\u7684\u5bc4\u5b58\u5668\u3002\u4f8b\u5982\uff0c\u5728\u5177\u6709128\u4f4d\u5411\u91cf\u5bc4\u5b58\u5668\u7684CPU\u4e0a\uff0c\u6bcf\u4e2a\u6307\u4ee4\u7684\u5faa\u73af\u541e\u5410\u91cf\u4e3a9\u4f4d\u3002\n\u4f8b\u5982\uff0c\u6240\u5448\u73b0\u7684bcd2ascii\u51fd\u6570\u5177\u670996\u5b57\u8282\u7684\u5927\u5c0f\u3002\u5f53\u5728\u6c47\u7f16\u671f\u95f4\u542f\u7528\u538b\u7f29\u6307\u4ee4\u6269\u5c55(\u4f7f\u5f97\u67d0\u4e9b\u6307\u4ee4\u53ef\u4ee5\u88ab\u538b\u7f29\u76842\u5b57\u8282\u7248\u672c\u53d6\u4ee3)\u65f6\uff0c\u5927\u5c0f\u4e0b\u964d20%\u81f376\u5b57\u8282\u3002\u8fd9\u5f88\u597d\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u8be5\u51fd\u6570\u7684\u5927\u591a\u6570\u6307\u4ee4\u662f\u5411\u91cf\u6307\u4ee4\u5e76\u4e14\u6ca1\u6709\u538b\u7f29\u53d8\u4f53\u3002\n\u8fd9\u53ef\u4ee5\u4e0ex86-64\u5f62\u6210\u5bf9\u6bd4\uff0c\u4f8b\u5982\uff0c\u5728x86-64\u4e2d\uff0cSSSE 3\u968f\u673a\u6307\u4ee4\u7f16\u7801\u4e3a5\u5b57\u8282\uff0c\u4e00\u4e9b\u79fb\u52a8\u7f16\u7801\u4e3a7\u5b57\u8282\u3002\u5f53\u7136\uff0c\u5f53\u4f7f\u7528SSSE 3\u4f5c\u4e3a\u6700\u4f4e\u516c\u5206\u6bcdSIMD ISA\u65f6\uff0c\u77e2\u91cf\u957f\u5ea6\u56fa\u5b9a\u4e3a128\u4f4d\u3002\n\u53d1\u51fa\u538b\u7f29\u7684RISC-V\u6307\u4ee4\u5bf9\u6c47\u7f16\u5668\u7a0b\u5e8f\u5458\u6765\u8bf4\u662f\u67d0\u79cd\u900f\u660e\u7684\uff0c\u4eba\u4eec\u53ea\u9700\u8bbe\u7f6e\u6c47\u7f16\u5668\u547d\u4ee4\u884c\u9009\u9879\u3002\u4f46\u662f\uff0c\u5f53\u7136\uff0c\u7531\u4e8e\u538b\u7f29\u6307\u4ee4\u5b9e\u73b0\u4e86\u6298\u8877(\u5426\u5219\u4e3a\u4ec0\u4e48\u4e0d\u662f\u6240\u6709\u6307\u4ee4\u90fd\u88ab\u538b\u7f29\uff1f\uff01)\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u6ce8\u610f\u4ee5\u53ef\u538b\u7f29\u7684\u65b9\u5f0f\u5199\u5165\u6307\u4ee4\uff0c\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u538b\u7f29\u6307\u4ee4\u4ec5\u5728\u5bc4\u5b58\u5668\u5b50\u96c6(\u4f8b\u5982\uff0cs0..s1\uff0ca0..5)\u4e0a\u5de5\u4f5c\uff0c\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\u662f\u9690\u5f0f\u7684\uff0c\u5728\u8be5\u5bc4\u5b58\u5668\u5b50\u96c6(\u4f8b\u5982\uff0cs0..s1\uff0ca0..5)\u4e0a\u6709\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\u662f\u9690\u542b\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u67d0\u4e9b\u538b\u7f29\u6307\u4ee4\u4ec5\u5728\u5bc4\u5b58\u5668\u5b50\u96c6(\u4f8b\u5982s0..s1\uff0ca0..5)\u4e0a\u5de5\u4f5c\uff0c\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\u662f\u9690\u542b\u7684\u3002\n\u7531\u4e8e\u622a\u81f32020\u5e74\u521d\uff0c\u77e2\u91cf\u6269\u5c55\u4ecd\u5904\u4e8e\u8349\u6848\u72b6\u6001\uff0c\u5e76\u4e14\u6700\u8fd1\u521a\u521a\u53d1\u5e030.8\u7248\uff0c\u56e0\u6b64\u5bf9\u5b83\u652f\u6301\u5e76\u4e0d\u5e7f\u6cdb\u3002\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u914d\u5907RISC-V&34\uff1bV&34\uff1bCPU\u7684\u786c\u4ef6\u53ef\u7528\uff0c\u4f46\u4e00\u4e9b\u77e5\u540d\u7684RISC-V\u6a21\u62df\u5668(\u5982QEMU)\u4e0d\u652f\u6301&#34\uff1bV&34\uff1b\u6269\u5c55\u6216\u4ec5\u652f\u6301\u8f83\u65e7\u7248\u672c\u7684&#34\uff1bV&#\u3002\u6807\u51c6\u5f00\u53d1\u5de5\u5177\u94fe(binutils\uff0cGCC)\u7684\u7b2c0.8\u7248\u5df2\u7ecf\u53ef\u7528\uff0c\u4f46\u8fd8\u6ca1\u6709\u4e0a\u884c\uff0c\u8fd9\u610f\u5473\u7740\u4eba\u4eec\u5fc5\u987b\u67e5\u627e\u5b58\u50a8\u5e93\uff0c\u8bc6\u522b\u6b63\u786e\u7684\u5206\u652f\uff0c\u5e76\u4f7f\u7528\u6b63\u786e\u7684\u6807\u5fd7\u7f16\u8bd1\u8fd9\u4e9b\u5206\u652f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u80fd\u591f\u4f7f\u7528\u53d1\u884c\u7248\u8f6f\u4ef6\u5305\u3002\n\u53e6\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u5fc5\u987b\u901a\u8fc7\u8bbe\u7f6e\u72b6\u6001\u5bc4\u5b58\u5668\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\u4e2d\u542f\u7528&#34\uff1bV&34\uff1b\u6269\u5c55(\u7c7b\u4f3c\u4e8e&#34\uff1bF&#34\uff1b\u548c&#34\uff1bD&#34\uff1b\u6d6e\u70b9\u6269\u5c55)\u3002\u56e0\u4e3a\u72b6\u6001\u5bc4\u5b58\u5668\u53ea\u80fd\u5728\u673a\u5668/\u7cfb\u7edf\u6a21\u5f0f\u4e0b\u8bbf\u95ee\uff0c\u8fd9\u610f\u5473\u7740\u8fd8\u9700\u8981\u5185\u6838\u652f\u6301&#34\uff1bV&34\uff1b\u6269\u5c55\u3002\n\u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u6784\u5efaRISC-V&34\uff1bV&34\uff1b0.8\u5de5\u5177\u94fe\u548c\u4eff\u771f\u5668\u6240\u9700\u7684\u4e0d\u540c\u7ec4\u4ef6\u3002\nSpike RISC-V\u4eff\u771f\u5668\u786e\u5b9e\u652f\u63010.8\u7248\u3002\u622a\u81f32020\u5e74\u521d\uff0c\u8fd8\u6709\u4e00\u4e2a\u4eff\u771f\u5668\u652f\u63010.8\u7248\uff0c\u4f46\u5b83\u4e0d\u662f\u5f00\u6e90\u7684\u3002\nSudo DNF install Dtc#\u5373\u8bbe\u5907\u6811\u7f16\u8bd1\u5668\u514b\u9686https://github.com/riscv/riscv-isa-sim.git--\u6df1\u5ea61 cd riscv-isa-simmkdir build CD build../CONFIGURE--PREFIX=$HOME/LOCAL/riscvv08/Spikemakemake install\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSPEKE\u542f\u7528RV64IMAFDC ISA\uff0c\u4f46\u6b64\u9ed8\u8ba4\u503c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u66f4\u6539(\u751a\u81f3\u53ef\u4ee5\u5728\u914d\u7f6e\u65f6\u66f4\u6539)\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u8fd9\u6837\u8c03\u7528Spike\u65f6\uff1a\n\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5177\u6709\u6269\u5c55\u652f\u6301\u7684binutils\u8db3\u4ee5\u7ec4\u88c5\u6211\u4eec\u7684\u793a\u4f8b\uff0c\u4f46\u662f\uff0c\u6784\u5efa\u4ee3\u7406\u5185\u6838\u9700\u8981\u5b8c\u6574\u7684GNU\u5de5\u5177\u94fe\u3002\nGit\u514b\u9686https://github.com/riscv/riscv-gnu-toolchain.git--\u5206\u652frvv-0.8.x\\--\u5355\u5206\u652f-\u6df1\u5ea61 riscv-gnu-toolchain_rvv-0.8.x cd riscv-gnu-toolchain_rvv-0.8.xgit\u5b50\u6a21\u5757\u66f4\u65b0--\u521d\u59cb\u5316--\u9012\u5f52--\u6df1\u5ea61 riscv-binutils riscv-GCC\\riscv-glibc riscv-dejagnu riscv-newlib riscv-gdbm\u3002\n\u663e\u5f0f\u7684\u5b50\u6a21\u5757\u66f4\u65b0\u662f\u8fd9\u6837\u505a\u7684\uff0c\u4ee5\u8df3\u8fc7\u53ef\u9009\u7684QEMU\u6a21\u5757\u3002\u9664\u4e86QEMU\u4e0d\u652f\u6301&#34\uff1bV&34\uff1b\u6269\u5c55\u4e4b\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u66f4\u6df1\u7684\u514b\u9686\uff0c\u4f1a\u5360\u7528\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u5e76\u6d6a\u8d39\u4e00\u4e9b\u7f16\u8bd1\u65f6\u95f4\u3002\n\u8bf7\u6ce8\u610f\uff0cmake install\u6b65\u9aa4\u662f\u591a\u4f59\u7684\uff0c\u56e0\u4e3a\u524d\u9762\u7684make\u8c03\u7528\u5df2\u7ecf\u5b89\u88c5\u4e86\u6240\u6709\u5185\u5bb9\u3002\nRISC-V Proxy-Kernel(PK)\u5b9e\u73b0\u4e86\u8db3\u4ee5\u8ba9\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u5728Spike\u4e2d\u8fd0\u884c\u7684\u529f\u80fd\uff0c\u5305\u62ec\u5728\u673a\u5668\u6a21\u5f0f\u4e0b\u8bbe\u7f6e\u4e00\u4e9b\u72b6\u6001\u5bc4\u5b58\u5668\u3001\u5207\u6362\u5230\u7528\u6237\u6a21\u5f0f\u4ee5\u53ca\u5b9e\u73b0\u4e00\u4e9bsyscall\uff0c\u8fd9\u610f\u5473\u7740\u8c03\u7528write syscall\u6765\u5199\u5165stdout\uff0c\u7136\u540e\u5728Spike\u4e2d\u5de5\u4f5c\uff0c\u5e76\u5c06\u6587\u672c\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002\nGIT\u514b\u9686-\u6df1\u5ea61 https://github.com/riscv/riscv-pk.git cd riscv-pkmkdir build CD build path=$HOME/LOCAL/riscvv08/gnu/bin\uff1a$PATH../CONFIGURE--PREFIX=$HOME/LOCAL/riscvv08/pk\\--HOST=riscv64-UNKNOWN-ELF PATH=$HOME/LOCAL/riscvv08/gnu/bin\uff1a$PATH make path=$HOME/local/riscvv08/gnu/bin\uff1a$path make install\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u62e5\u6709GNU\u5de5\u5177\u94fe\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u6b64\u6b65\u9aa4(\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5305\u542b\u5177\u6709\u652f\u6301\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6)\u3002\u5982\u679c\u60a8\u5df2\u83b7\u5f97\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684Proxy-Kernel\u652f\u6301\uff0c\u5e76\u4e14\u5e0c\u671b\u8df3\u8fc7\u6784\u5efaGNU\u5de5\u5177\u94fe\uff0c\u5219\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\nGit\u514b\u9686https://github.com/riscv/riscv-binutils-gdb.git--\u5206\u652frvv-0.8.x\\--\u5355\u5206\u652f--\u6df1\u5ea61 risv-binutils-gdb_rvv-0.8.xmkdir build CD build../CONFIGURE--PREFIX=$HOME/local/riscvv08/binutils--target riscv64-UNKNOWN-ELF\\--ENABLE-multilibmakemake install\u3002\n\u6700\u540e\uff0c\u8981\u5b9e\u9645\u6267\u884c\u6211\u4eec\u7684\u793a\u4f8b\uff0c\u9700\u8981\u4e00\u4e2a\u5c0f\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u5b83\u4f7f\u7528\u4e00\u4e9b\u6837\u672c\u8f93\u5165\u8c03\u7528bcd2ascii()\u51fd\u6570\u5e76\u6253\u5370\u7ed3\u679c\u3002\u5982\u679c\u6709\u5b8c\u6574\u7684GNU\u5de5\u5177\u94fe\uff0c\u6700\u7b80\u5355\u7684\u4e8b\u60c5\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u8be5\u90e8\u5206\uff0c\u4f8b\u5982\uff1a\n#include&lt\uff1bstddef.h&gt\uff1bvoid bcd2ascii(void*dst\uff0cconst void*src\uff0csize_t n)\uff1b\u9759\u6001\u5e38\u91cf\u65e0\u7b26\u53f7\u5b57\u7b26INP[]={0x01\uff0c0x23\uff0c0x45\uff0c0x67\uff0c0x89\uff0c0xab\uff0c0xcd\uff0c0xef\uff0c0xfe\uff0c0xdc\uff0c0xba\uff0c0x98\uff0c0x76\uff0c0x54\uff0c0x32\uff0c0x10\uff0c0x01\uff0c0x23\uff0c0x45\uff0c0x67\uff0c0x89\uff0c0xab\uff0c0xcd\uff0c0xef\uff0c0xfe\uff0c0xdc\u3002Int main(){char out[sizeof INP*2+1]={0}\uff1b//\u9884\u671f\u8f93\u51fa\uff1a//out={&#39\uff1b0&#39\uff1b\uff0c&#39\uff1b1&#39\uff1b\uff0c&#39\uff1b2&#39\uff1b\uff0c&#39\uff1b3&#39\uff1b\uff0c...}bcd2ascii(out\uff0cinp\uff0csizeof INP)\uff1bput(Out)\uff1breturn 0\uff1b}\u3002\n\u6216\u8005\uff0c\u5728\u6ca1\u6709C\u4ea4\u53c9\u7f16\u8bd1\u5668\u4f46\u4ea4\u53c9\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6c47\u7f16\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff1a\n.text#start text\u6bb5.balign 4#\u63094\u5b57\u8282\u5bf9\u9f504\u5b57\u8282\u6307\u4ee4.global_start#global_start\uff1a#\u68c0\u67e5\u662f\u5426\u542f\u7528\u4e86\u5411\u91cf\u6269\u5c55#user-m\u3002\n.", "note_en": "Perhaps the most interesting part of the open  RISC-V  instruction set architecture (ISA) is the vector extension (RISC-V &#34;V&#34;).In contrast to the average  single-instruction multipe-data (SIMD) instruction set, RISC-V vector instructions are vector length agnostic (VLA).Thus, a RISC-V &#34;V&#34; CPU is flexible in choosing a vector register size while RISC-V &#34;V&#34; binary code is portable between different CPU implementations.\n This articles compares the two main different styles of vector ISAs, discusses a string processing example that is implemented using  RISC-V &#34;V&#34; draft version 0.8 (current as of early 2020) vector instructions and details how to set up a RISC-V &#34;V&#34; development environment under Linux.\n  With a vector length specific (VLS)  SIMD instruction set the main problem is to pick the right vector register size.Of course there is a trade-off between the amount of data-level parallelism and hardware costs.Due to  Moore&#39;s law, vector register sizes can be increased over time without making the CPU chip more expensive.Also, some users are interested in powerful CPUs with wider vector registers while the average user is fine with averagely sized register.Thus, there is no one right vector register size.This shows for example with x86, where the answer is to provide one VLS ISA after the other, such as  MMX (64 bit registers),  SSE (128 bit),  AVX (256 bit) and  AVX512 (512 bit).\n Because of  backward compatibility, each CPU that adds a new VLS ISA also has to support all existing ones.This leads to a waste of  opcode space and increases the complexity of the CPU&#39;s  instruction decoder.Of course this also increases the complexity for the programmer who has then remember (or look up all the time) syntactic and functional differences between all the VLS ISAs.\n That means that while VLS code written for smaller vector registers runs on newer CPUs, it can&#39;t make use of the wider vector registers.Thus, existing code has to be reimplemented again and again to make use of new VLS ISAs.Similarly, code written for high-end CPUs doesn&#39;t run on middle-end CPUs (because it requires the VLS-ISA with wider vector registers).Thus one either has to target some older (hopefully widely available) VSL-ISA or has to provide multiple implementations for different VSL-ISAs.\n The solution to all this is to design a variable length vector instruction set.In that way the instructions are then agnostic to the vector register size of a concrete CPU implementation.Thus, the binary code is portable between low, middle and high-end CPUs, and automatically makes use of wider registers in newer CPUs.\n The  RISC-V vector extension &#34;V&#34; implements such vector instruction set.As of early 2020, the  RISC-V &#34;V&#34; specification is at version 0.8 and has draft status.\n RISC-V &#34;V&#34; adds 32 vector registers, where the first register can be used as mask register and up to 8 registers can be grouped together.The operands of a vector instruction such as  vadd.vv are single vector registers or vector register groups.\n Since vector registers are of variable length, RISC-V &#34;V&#34; code has to indicate the maximum vector length it wants to work with, e.g.:\n  Meaning that a vector length (vl) of up to  a2 8 bit wide ( e8) elements is requested while the instruction returns the resulting length in register  t0.Thus, if the  a2 register is set to - say -  4096, on a CPU with a vector register length (VLEN) of 128 bits, the following vector instructions work on 16 element wide vectors and  t0 is thus set to  16, while on a CPU with 512 bit registers the vectors are configured to be 64 elements wide and  t0 is set to  64.\n This approach also simplifies loops that iterate over an input array in vector length chunks.For example (where  a1 contains the address of an array of  a2 times 4 bytes):\n .Loop:  # local symbol name because of .L prefix  vsetvli  t0 ,  a2 ,  e32  # configure vectors of 32 bit elements  vlw.v  v4 ,  ( a1 )  # Load t0 elements into v4,  # starting at the address stored in a1  ...  # work with that chunk  slli  t1 ,  t0 ,  2  # shift-left logical, i.e. times 4  add  a1 ,  a1 ,  t1  # increment src by read elements  sub  a2 ,  a2 ,  t0  # decrement n  bnez  a2 ,  .Loop  # branch to loop head if not equal to zero  ...  # continue\n In cases where  a2 isn&#39;t a multiple of the maximum vector length, the last iterationsets the vector length to a smaller value and the following vector instructions ignorethe unused trailing elements.This implicit masking mechanism is orthogonal to the optional mask operand that is supported by most RISC-V vector instructions.\n In contrast to that, with a vector length specific ISA, the main loop usually has to be followed by some finalization code block to explicitly deal with the last elements that don&#39;t fill a complete register, e.g.:\n const  unsigned  char  * p  =  inp ; size_t  l  =  n  /  ( VECTOR_LENGTH  *  ELEMENT_BYTES ); for  ( size_t  i  =  0 ;  i  &lt;  l ;  ++ i ,  p  +=  VECTOR_LENGTH  *  ELEMENT_BYTES )  {  ...  // load p into a vector register  ...  // execute some vector instructions } // deal with some remaining bytes // e.g. by setting up a mask or work on single elements for  ( size_t  i  =  l ;  i  &lt;  n ;  ++ i ,  p  +=  ELEMENT_BYTES )  {  ...  // work on the next element located at p }\n To illustrate RISC-V &#34;V&#34; with a real example, this section shows how to implement a vectorized function that converts a string of  binary coded decimals (BCD) into an  ASCII string.Why BCD to ASCII conversion?The task is complex enough such that most of the different vector instructions are used.On the other hand, it&#39;s simple enough to fit into a small article and doesn&#39;t require domain specific knowledge.It also demonstrates some perhaps not entirely obvious ways how vector instructions are used for string processing where those instruction could be assumed to only be useful for calculations.\n With BCD, a byte (8 bits) is divided into two  nibbles (4 bits) such that each nibble stores a (hexa-)decimal digit.Note that 4 bits allow to exactly encode  2 4 values, thus when using it just for storing decimal digits it&#39;s not a very efficient encoding.\n For the purpose of our example, the exercise is to write vector code that efficiently converts a BCD string such as  { 0x12, 0x34, ..., 0xcd, 0xef } to a corresponding ASCII string (e.g.  { &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, ..., &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39; }). On a high-level, a solution involves separating the nibbles into single bytes and then converting each byte to the matching ASCII value.\n  Meaning that  n input bytes are read from  src and the conversion writes  2*n bytes into the  dst output buffer.Under the RISC-V calling conventions,  dst is passed in register  a0,  src in register  a1 and  n in register  a2.\n .Loop:  # local symbol name because of .L prefix  vsetvli  a3 ,  a2 ,  e16 ,  m8  # switch to 16 bit element size,  # 4 groups of 8 registers  # --&gt; a3 = min(a2, 8*vlenb/2)  vlbu.v  v16 ,  ( a1 )  # Load a3 unsigned bytes,  # one byte per 16 bit element, zero-extend,  # starting at addr stored in a1  # --&gt; v16 = | 0, a1[vlenb/2-1], ..., 0, a1[1], 0, a1[0] |, ...,  # v23 = | 0, a1[a3-1], ..., 0, a1[7*vlenb/2] |  # --&gt; v16 = | ... 00mn 00kl 00ij 00gh |  add  a1 ,  a1 ,  a3  # increment src by read elements  sub  a2 ,  a2 ,  a3  # decrement n\n The main loop starts with configuring a vector element size of 16 bit ( e16), grouping 8 registers together ( m8) and requesting a vector length that equals the number of remaining source bytes or the CPU maximum.With this grouping, each register group is accessed by using a vector register with a number that is dividable by 8.That means  v0 identifies the group consisting of  v0, v1, ..., v7,  v8 identifies  v8, ..., v15, etc.\n The  vl*.v load instruction comes in different variants.Here, the  vlbu.v variant zero extends each input byte per 16 bit element which is useful in our example because this directly leaves room for shuffling the nibbles.In other words, it&#39;s a widening load and thus saves a separate widening operation such as  vwaddu.vx.\n That means on CPUs with 256 bit vector registers, this code loads up to 128 input bytes into the  v16 register group.\n Note that register content in the comments is enclosed in  | | and written right to left, starting with the least significant element.Arbitrary nibbles are denoted sometimes by placeholder variables such as  g, h, ....\n  vsll.vi  v24 ,  v16 ,  8  # shift-left-logical each element by 8 bits # --&gt; v24 = | ... mn00 kl00 ij00 gh00 | vsrl.vi  v16 ,  v16 ,  4  # shift-right-logical each element by 4 bits # --&gt; v16 = | ... 000m 000k 000i 000g | slli  a3 ,  a3 ,  1  # shift left logical by immediate,  # i.e. to double the number of vector elements vsetvli  t4 ,  a3 ,  e8 ,  m8  # switch to 8 bit element size,  # 4 groups of 8 registers vand.vx  v24 ,  v24 ,  t2  # and each element with 0x0f,  # i.e. zero-out the high nibbles # --&gt; v24 = | ... 0n 00 0l 00 0j 00 0h 00 | vor.vv  v16 ,  v16 ,  v24  # or each element # --&gt; v16 = | ... 0n 0m 0l 0k 0j 0i 0h 0g |\n So far the example shows most of the syntactic conventions of the &#34;V&#34; ISA.Vector instructions start with  v and a suffix such as  .vi,  .vx and  .vv describe the source operand types, i.e. vector-immediate, vector-scalar and vector-vector.\n The bit-shift instructions don&#39;t cross element boundaries.Thus, just vector group  v24 has to be zero-masked and not  v16.The mask is located in register  t2 which is set before the loop start.\n Switching the vector register configuration to 8 bit elements ( e8) at thispoint allows to use  0xf as mask value instead of the larger  0xf00.Thus, it fits into the immediate operand of the load immediate instruction suchthat one additional instruction is saved (i.e.  addi t2,zero,15). It evenfits into the immediate operand of the compressed load immediate instruction,which just encodes into two bytes (i.e.  c.li) instead of the regular four.\n Here, vector group  v8 is used as table to look up the  ASCII values.That means the  v8 lookup table maps the integers  {0, 1, 2, ..., 0xd, 0xe, 0xf } to the ASCII characters  { &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, ..., &#39;d&#39;, &#39;e&#39;, &#39;f&#39; }.\n  li  a6 ,  16  # load immediate (pseudo instruction) vsetvli  t0 ,  a6 ,  e8 ,  m8  # switch to 8 bit element size,  # i.e. 4 groups of 8 registers vid.v  v8  # store Vector Element Indices,  # i.e. v8 = | 16, ..., 2, 1, 0 | vmsgtu.vi  v0 ,  v8 ,  9  # set mask-bit if greater than unsigned immediate # --&gt; v0 = | 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 | li  a7 ,  48  # load immediate, i.e. &#39;0&#39; vadd.vx  v8 ,  v8 ,  a7  # add that scalar to each element addi  a7 ,  a7 ,  - 9  # add immediate, i.e. set to 39 == &#39;a&#39;-&#39;0&#39;-10,  # i.e. to arrive at &#39;a&#39;, &#39;b&#39;, ... vadd.vx  v8 ,  v8 ,  a7 ,  v0.t  # masked add for the additional offset\n Configuring a grouping of 8 registers for a vector of 16 elements might look like overkill because 128 bit vector registers are sufficient and should be widely available.On the other hand, there might be a CPU with &#34;V&#34; support that just implements - say - 64 bit vector registers where we would need to group 2 registers.Since a grouping thus may be needed it really doesn&#39;t hurt to configure the maximum here.\n The  v0.t syntax is just a marker that  v0 is used as mask.Note that masks always just consist of one vector register, even if register groups are configured.With the current &#34;V&#34; 0.8 draft, the  v0 register is the only valid choice for a mask operand.\n Similar to before, the value  39 is constructed with  addi instead of directly loading it with the pseudo-instruction  li into another register because  -9 fits into the immediate operand of the compressed  c.addi instruction.\n vsb.v  v24 ,  ( a0 )  # write result to dst # --&gt; a0[0] = v24[0], a0[1] = v24[1], ..., a0[vl-1] = v24[vlenb-1], ..., # a0[vlenb*7] = v31[0], ..., a0[t0-1] = v31[vlenb-1] # --&gt; a0[0..t0-1] = [ &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39; ] add  a0 ,  a0 ,  t3  # increment dst bnez  a2 ,  .Loop  # branch to loop head if not equal to zero ret\n The loop and function is left if the complete input buffer is processed.Note that while the syntax of most RISC-V instructions follows the destination-source order, store instructions  have this order inverted.\n The  RISC-V &#34;V&#34; vector extension ISA is sufficiently diverse as it contain useful bit and byte-shuffling instructions, instructions that allow the masking of elements and instructions implementing operations that are useful for string processing such as element gathering and widening.\n The available instructions in combination with the vector length agnostic (VLA) design leads to compact code.For example, each iteration of the main loop just executes 14 instructions and there is no extra code necessary to deal with trailing bytes.\n The thus realized throughput is excellent, i.e. the resulting binary code automatically utilizes the complete vector register size on each CPU, be it low or high-end.In addition, the grouping of vector registers allows to increase the throughput since there are many registers available.For example, on a CPU with 128 bit vector registers, the loop has a throughput of 9 digits per instruction.\n Since each regular RISC-V instruction encodes into 4 bytes, the density of the assembled binary code is also good.For example, the presented  bcd2ascii function has a size of 96 bytes.When enabling the &#34;C&#34; compressed instructions extension during assembling (such that certain instructions can be replaces by compressed 2 byte versions), the size drops by 20 per cent down to 76 bytes.Which is fine, especially given that most instructions of that function are vector ones and there are no compressed variants of the vector instructions.\n This can be contrasted by x86-64, where for example the SSSE 3 shuffle instruction encodes into 5 bytes and some moves encode into 7 bytes. Plus of course, the vector length is fixed to 128 bit when using SSSE 3 as lowest common denominator SIMD ISA.\n Emitting compressed RISC-V instruction is kind of transparent to the assembly programmer, one has just to set a assembler command line option.But of course, since compressed instructions implement compromises (otherwise why wouldn&#39;t be all instructions compressed?!), the programmer has to take care to write instructions in a way such that they are compressible, where possible.For example, some compressed instructions only work on a register subset (e.g.  s0..s1, a0..5), one source operand is implicit, there are less bits for an immediate operand, there is just one variant that sign-extends the immediate etc.\n Since as of early 2020, the &#34;V&#34; vector extension still has draft status and  version 0.8 was just released recently, support for it isn&#39;t widely available.That means there is no hardware with a RISC-V &#34;V&#34; CPU available, but also some well-known RISC-V emulators such as Qemu don&#39;t support the &#34;V&#34; extension or just support an older version of the &#34;V&#34; extension.Similarly, support for &#34;V&#34; version 0.8 for the standard development toolchain (binutils, gcc) is available, but not yet upstreamed.Meaning that one has to hunt down repositories, identify the right branches and compile those with the right flags, instead of just being able to use distro packages.\n Another pitfall is that the &#34;V&#34; extension (similar to &#34;F&#34; and &#34;D&#34; floating point extensions) has to be enabled in the running system by setting a status register.Since the status register can only be accessed in machine-/system-mode that means that one also needs kernel support for the &#34;V&#34; extension.\n This section details how to build the different components required for a RISC-V &#34;V&#34; 0.8 toolchain and an emulator.\n The  Spike RISC-V emulator does have &#34;V&#34; version 0.8 support.As of early 2020, there is one other emulator with &#34;V&#34; 0.8 support but it isn&#39;t open source.\n  sudo dnf install dtc  # i.e. device-tree-compilergit clone https://github.com/riscv/riscv-isa-sim.git --depth  1 cd riscv-isa-simmkdir build cd build../configure --prefix = $HOME/local/riscvv08/spikemakemake install\n   By default Spike enables the  RV64IMAFDC ISAs, but this default can be changed at runtime (or even configure time). For example when we call spike like this:\n Technically, binutils with &#34;V&#34; extension support is sufficient to assemble our example.However, building the Proxy-Kernel requires the full  GNU toolchain.\n git clone https://github.com/riscv/riscv-gnu-toolchain.git --branch rvv-0.8.x  \\ --single-branch --depth  1 riscv-gnu-toolchain_rvv-0.8.x cd riscv-gnu-toolchain_rvv-0.8.xgit submodule update --init --recursive --depth  1 riscv-binutils riscv-gcc  \\ riscv-glibc riscv-dejagnu riscv-newlib riscv-gdbmkdir build cd build../configure --prefix = $HOME/local/riscvv08/gnu --enable-multilibmakemake install\n The explicit submodule update is done like this to skip the optional Qemu module.Besides Qemu doesn&#39;t supporting the &#34;V&#34; extension, it would also require a deeper clone and take up some disk space and waste some compile time.\n Note that the  make install step is superfluous because the previous  make call already installs everything.\n The  RISC-V Proxy-Kernel (pk) implements enough to get a user-space program in Spike running, i.e. including setting up some status registers in machine-mode, switching to user-mode and implementing some syscalls.That means that calling the write syscall to write to stdout then just works in Spike and the text is printed to the console.\n  git clone --depth  1 https://github.com/riscv/riscv-pk.git cd riscv-pkmkdir build cd build PATH = $HOME/local/riscvv08/gnu/bin: $PATH ../configure --prefix = $HOME/local/riscvv08/pk  \\ --host =riscv64-unknown-elf PATH = $HOME/local/riscvv08/gnu/bin: $PATH make PATH = $HOME/local/riscvv08/gnu/bin: $PATH make install\n If you already have the GNU Toolchain you can skip this (as it already contains the  binutils with &#34;V&#34; support).This is just relevant if you have obtained the Proxy-Kernel with &#34;V&#34; support in binary form and want to skip building the GNU Toolchain.\n git clone https://github.com/riscv/riscv-binutils-gdb.git --branch rvv-0.8.x  \\ --single-branch --depth  1 risv-binutils-gdb_rvv-0.8.xmkdir build cd build../configure --prefix = $HOME/local/riscvv08/binutils --target riscv64-unknown-elf  \\ --enable-multilibmakemake install\n Finally, to actually execute our example, a small test program is needed that calls the  bcd2ascii() function with some sample input and prints the results.If the complete GNU toolchain is available the simplest thing is to write that part in C, e.g.:\n #include  &lt;stddef.h&gt;  void  bcd2ascii ( void *  dst ,  const  void *  src ,  size_t  n ); static  const  unsigned  char  inp []  =  {  0x01 ,  0x23 ,  0x45 ,  0x67 ,  0x89 ,  0xab ,  0xcd ,  0xef ,  0xfe ,  0xdc ,  0xba ,  0x98 ,  0x76 ,  0x54 ,  0x32 ,  0x10 ,  0x01 ,  0x23 ,  0x45 ,  0x67 ,  0x89 ,  0xab ,  0xcd ,  0xef ,  0xfe ,  0xdc ,  0xba ,  0x98 ,  0x76 ,  0x54 ,  0x32 ,  0x10 }; #include  &lt;stdio.h&gt;  int  main () {  char  out [ sizeof  inp  *  2  +  1 ]  =  { 0 };  // expected output:  // out = { &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, ... }  bcd2ascii ( out ,  inp ,  sizeof  inp );  puts ( out );  return  0 ; }\n    Alternatively, without a C cross compiler but cross binutils, we need an assembly test program such as:\n .text  # Start text section  .balign  4  # align 4 byte instructions by 4 bytes  .global  _start  # global _start:  # check if vector extension is enabled  # user-m\n......", "posttime": "2020-08-07 18:48:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u77e2\u91cf,risc,\u5bc4\u5b58\u5668", "title": "\u7528RISC-V\u77e2\u91cf\u6307\u4ee4\u7f16\u7a0b", "title_en": "Programming with RISC-V Vector Instructions", "transed": 1, "url": "https://gms.tf/riscv-vector.html", "via": "", "real_tags": ["\u7f16\u7a0b", "\u77e2\u91cf", "risc", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "75f7e595f71d97f6b4d9fb84904395bb.jpg", "infoid": 1016856, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba9\u6211\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\uff1a\u6211\u5c06\u628aHave I be Pwned\u4ee3\u7801\u5e93\u5f00\u6e90\u3002\u8fd9\u4e00\u51b3\u5b9a\u5df2\u7ecf\u505a\u51fa\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u7ecf\u8fc7\u5931\u8d25\u7684\u5e76\u8d2d\u8fc7\u7a0b\u624d\u6765\u5230\u8fd9\u91cc\uff0c\u4f46\u4ee3\u7801\u5c06\u88ab\u63d0\u4ea4\u7ed9\u516c\u4f17\uff0c\u4ee5\u6539\u5584\u9879\u76ee\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u4e5f\u662f\u4e3a\u4e86\u6539\u5584\u6240\u6709\u4f7f\u7528\u5b83\u7684\u4eba\u3002\u8ba9\u6211\u89e3\u91ca\u4e00\u4e0b\u539f\u56e0\u548c\u65b9\u6cd5\u3002\n\u6211\u6700\u8fd1\u4e00\u76f4\u5728\u601d\u8003\u6211\u5e0c\u671b\u8fd9\u4e2a\u9879\u76ee\u5982\u4f55\u53d1\u5c55\uff0c\u7279\u522b\u662f\u5728\u5e76\u8d2d\u8fc7\u7a0b\u4e8e\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7ed3\u675f\u4e4b\u540e\uff0c\u5c31\u5728\u6211\u5f00\u59cb\u7684\u65f6\u5019\uff1a\u4e00\u5207\u90fd\u7531\u6211\u72ec\u81ea\u8d1f\u8d23\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u76ee\u6807\u662f\u4e3aHIBP\u5bfb\u6c42\u4e00\u4e2a\u66f4\u53ef\u6301\u7eed\u7684\u672a\u6765\uff0c\u8fd9\u4e2a\u613f\u671b\u5e76\u6ca1\u6709\u6539\u53d8\uff1b\u8fd9\u4e2a\u9879\u76ee\u4e0d\u80fd\u5b8c\u5168\u4f9d\u8d56\u6211\u3002\u7136\u800c\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4eca\u5929\u7684\u72b6\u51b5\uff0c\u5982\u679c\u6211\u6d88\u5931\u4e86\uff0cHIBP\u5f88\u5feb\u5c31\u4f1a\u67af\u840e\u548c\u6b7b\u4ea1\u3002\n\u81ea\u4ece\u5e76\u8d2d\u8fc7\u7a0b\u4ee5\u6765\uff0c\u6211\u5bf9\u672a\u6765\u8fdb\u884c\u4e86\u66f4\u6df1\u5165\u7684\u601d\u8003\uff0c\u793e\u533a\u8d21\u732e\u7684\u91cd\u8981\u6027\u786e\u5b9e\u51fb\u4e2d\u4e86\u8981\u5bb3\u3002\u6700\u8fd1\u51e0\u5e74\u52a0\u8f7d\u5230\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\u90fd\u6765\u81ea\u4e8e\u67d0\u4e2a\u4e3a\u4e86\u6539\u5584\u6bcf\u4e2a\u4eba\u7684\u5b89\u5168\u73af\u5883\u800c\u514d\u8d39\u63d0\u4f9b\u8fd9\u4e9b\u6570\u636e\u7684\u4eba\u3002HIBP\u8fd0\u884c\u7684\u8bb8\u591a\u670d\u52a1\u90fd\u662f\u7531Cloudflare\u7b49\u516c\u53f8\u514d\u8d39\u63d0\u4f9b\u7684\u3002\u7f16\u5199\u7684\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u5229\u7528\u4e86\u793e\u533a\u8d21\u732e\uff0c\u8981\u4e48\u662f\u4eba\u4eec\u516c\u5f00\u53d1\u5e03\u7684\u5185\u5bb9\uff0c\u8981\u4e48\u662f\u76f4\u63a5\u63d0\u4f9b\u7ed9\u6211\u7684\u652f\u6301\u3002\n\u5c31\u5728\u6628\u5929\uff0c\u5f53\u6211\u6765\u81eaCloudflare\u7684\u670b\u53cb\u6731\u7eb3\u5fb7\u00b7\u963f\u91cc(Junade Ali)\u53d1\u5e03\u4e86\u8fd9\u7bc7\u5e16\u5b50\u65f6\uff0c\u6211\u60f3\u8d77\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u73b0\u5728@LastPass\u5df2\u7ecf\u4f7f\u7528\u6211\u548c@TroyHunt\u8bbe\u8ba1\u7684k-\u533f\u540dAPI\u6dfb\u52a0\u4e86\u88ab\u653b\u7834\u7684\u5bc6\u7801\u901a\u77e5\uff0c\u52a0\u5165\u4e86@1Password\u3001Okta PassProtect\u3001\u82f9\u679c\u3001\u8c37\u6b4c\u7b49https://t.co/fyOKbZWNNF\u3002\n-Junade Ali(@Icy4\u67085\u65e5)2020\u5e748\u67085\u65e5\u3002\n\u8fd9\u6761\u63a8\u6587\u5e76\u4e0d\u5b8c\u5168\u51c6\u786e\uff1b\u8fd9\u90fd\u662f\u6731\u7eb3\u5fb7\u7684\u4e3b\u610f\uff0c\u4ed6\u4e3aHIBP\u7684Pwned\u5bc6\u7801\u8bbe\u8ba1\u4e86k-\u533f\u540d\u6027\u5b9e\u73b0\u3002\u514d\u8d39\u7684\uff0c\u56e0\u4e3a\u4ed6\u662f\u4e2a\u597d\u4eba\uff0c\u514b\u52b3\u5fb7\u5f17\u83b1\u5c14\u652f\u6301\u4ed6\u3002LastPass\u73b0\u5728\u4e5f\u91c7\u7528\u4e86\u540c\u6837\u7684\u6a21\u5f0f\uff0c\u4ed6\u4eec\u6548\u4eff\u4e86\u6731\u7eb3\u5fb7\u63d0\u5230\u7684\u5176\u4ed6\u77e5\u540d\u516c\u53f8\u3002\u6211\u76f8\u4fe1\u6211\u4e5f\u4ee3\u8868\u4ed6\u8bf4\uff0c\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u5176\u4ed6\u516c\u53f8\u4e5f\u91c7\u7528\u4e86\u6211\u4eec\u9996\u521b\u7684\u6a21\u5f0f\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u5230\u81ea\u5df1\u7684\u670d\u52a1\u4e2d\uff0c\u56e0\u4e3a\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u7b26\u5408\u6bcf\u4e2a\u4eba\u7684\u6700\u5927\u5229\u76ca\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u5176\u4ed6\u516c\u53f8\u4e5f\u91c7\u7528\u4e86\u6211\u4eec\u9996\u521b\u7684\u6a21\u5f0f\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u5230\u81ea\u5df1\u7684\u670d\u52a1\u4e2d\uff0c\u56e0\u4e3a\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u7b26\u5408\u6bcf\u4e2a\u4eba\u7684\u6700\u4f73\u5229\u76ca\u3002\nHIBP\u7684\u7406\u5ff5\u4e00\u76f4\u662f\u652f\u6301\u793e\u533a\uff0c\u73b0\u5728\u6211\u5e0c\u671b\u793e\u533a\u5e2e\u52a9\u652f\u6301HIBP\u3002\n\u5f00\u6e90\u4ee3\u7801\u5e93\u662f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6700\u660e\u663e\u7684\u65b9\u5f0f\u3002\u5b83\u5c06HIBP\u7684\u5177\u4f53\u7ec6\u8282\u4ea4\u7ed9\u90a3\u4e9b\u80fd\u591f\u5e2e\u52a9\u7ef4\u6301\u8fd9\u9879\u670d\u52a1\u7684\u4eba\u624b\u4e2d\uff0c\u65e0\u8bba\u6211\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4f46\u8fd9\u4e0d\u53ea\u662f\u4e00\u4e2a\u57fa\u4e8e\u60f3\u8981\u5378\u6389\u5de5\u4f5c\u7684\u54f2\u5b66\u51b3\u5b9a\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5e38\u8bc6\uff0c\u539f\u56e0\u6709\u5f88\u591a\u3002\u8ba9\u6211\u89e3\u91ca\u4e00\u4e0b\uff1a\n\u6211\u5df2\u7ecf\u5728\u4e4b\u524d128\u7bc7\u88ab\u6807\u8bb0\u4e3a\u201c\u6211\u5df2\u7ecf\u88ab\u6253\u4e86Pwned\u201d\u7684\u535a\u5ba2\u5e16\u5b50\u4e2d\uff0c\u5199\u4e86\u5f88\u591a\u5173\u4e8e\u7cfb\u7edf\u67b6\u6784\u7684\u6587\u7ae0\u3002\u5173\u4e8e\u8fd9\u4e2a\u6807\u7b7e\u7684\u7b2c\u4e8c\u7bc7\u535a\u5ba2\u6587\u7ae0\u662f\u5173\u4e8e\u6211\u5982\u4f55\u4f7f\u7528Azure Table Storage\u8ba9\u5b83\u53d8\u5f97\u5982\u6b64\u5feb\u901f\u548c\u5ec9\u4ef7\u3002\u4e00\u65e6\u5b83\u53d8\u5f97\u6d41\u884c\u8d77\u6765\uff0c\u6211\u5c31\u5199\u4e0b\u4e86\u6211\u662f\u5982\u4f55\u4f18\u5316\u5b83\u7684\u6027\u80fd\u7684\u3002\u5f53\u6211\u5f00\u59cb\u4f7f\u7528Azure\u51fd\u6570\u65f6\uff0c\u6211\u5199\u4e86\u5173\u4e8e\u65e0\u670d\u52a1\u5668\u8ba1\u7b97\u7684\u4e50\u8da3\uff0c\u4ee5\u53ca\u6211\u662f\u5982\u4f55\u5728HIBP\u4e2d\u5b9e\u73b0\u5b83\u7684\u3002\u5f53\u6211\u5199\u5230\u4f7f\u7528Cloudflare Workers\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\u548c\u964d\u4f4e\u6210\u672c\u65f6\uff0c\u6211\u751a\u81f3\u66f4\u4e0a\u4e00\u5c42\u697c\u3002\n\u91cd\u70b9\u662f\uff0cHIBP\u7684\u8bbe\u8ba1\u4e00\u76f4\u90fd\u662f\u5b8c\u5168\u516c\u5f00\u7684\uff0c\u8fd9\u4e0d\u50cf\u662f\u6211\u4e00\u76f4\u8bd5\u56fe\u5728\u8fd9\u91cc\u4fdd\u62a4\u7684\u4efb\u4f55\u4e13\u6709\u7684\u79d8\u5bc6\u9171\u6c41\u3002\n\u73b0\u5728\u6709\u4e00\u5927\u5806\u975e\u5e38\u68d2\u7684\u9879\u76ee\u90fd\u662f\u5f00\u6e90\u7684\u3002\u4f8b\u5982\uff0cvisual Studio\u4ee3\u7801\u5c31\u662f\u5f00\u6e90\u7684\u3002\u8fd9\u4e2a\u535a\u5ba2\u8fd0\u884c\u7684\u5e73\u53f0Ghost\u662f\u5f00\u6e90\u7684\u3002HIBP\u4f7f\u7528\u7684\u5927\u591a\u6570\u5e93\u90fd\u662f\u5f00\u6e90\u7684\u3002\u6211\u4e0d\u4ec5\u5728\u8c08\u8bba\u5f00\u6e90\u9886\u57df\u7684\u5f00\u6e90\uff0c\u5176\u4ed6\u4eba\u4e5f\u53ef\u4ee5\u81ea\u7531\u9605\u8bfb\u5b83\uff0c\u800c\u4e14\u6211\u4e5f\u5728\u8c08\u8bba\u5f00\u6e90\uff0c\u5c31\u662f\u4ece\u83b7\u53d6\u8d21\u732e\u7684\u89d2\u5ea6\u6765\u8003\u8651\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u6211\u4e0d\u4ec5\u5728\u8c08\u8bba\u5f00\u6e90\uff0c\u4e5f\u5728\u8c08\u8bba\u5176\u4ed6\u4eba\u53ef\u4ee5\u81ea\u7531\u9605\u8bfb\u7684\u90a3\u79cd\u65b9\u5f0f\uff0c\u800c\u4e14\u6211\u4e5f\u5728\u8c08\u8bba\u5f00\u6e90\uff0c\u5c31\u662f\u4ece\u63a5\u53d7\u8d21\u732e\u7684\u89d2\u5ea6\u6765\u770b\u3002\n\u8fd9\u5b9e\u9645\u4e0a\u8ba9\u6211\u601d\u8003--\u6211\u6bcf\u5929\u4f7f\u7528\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u4e2d\u6709\u591a\u5c11\u662f\u5f00\u6e90\u7684\uff1f\u4eca\u5929\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u5728\u63a8\u7279\u4e0a\u95ee\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7b54\u6848\u662f\uff0c\u55ef\uff0c\u6d89\u53ca\u9762\u5f88\u5e7f\uff1a\n\u6211\u4e5f\u559c\u6b22\u5fae\u8f6f\u4ecd\u7136\u662f\u5f00\u653e\u6e90\u7801\u6700\u5927\u7684\u4f01\u4e1a\u8d21\u732e\u8005\u4e4b\u4e00\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u6700\u5927\u7684\u8d21\u732e\u8005\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u60f3\u8981\u5982\u4f55\u5b9a\u4e49\u5ea6\u91cf\u6807\u51c6\u3002\u5f00\u6e90\u5b58\u5728\u4e8eHIBP\u8d56\u4ee5\u5efa\u7acb\u7684\u4e00\u5207\u4e8b\u7269\u7684DNA\u4e2d\u3002\n\u5c06\u4ee3\u7801\u516c\u4e4b\u4e8e\u4f17\uff0c\u5bf9\u4e8e\u89e3\u51b3\u4eba\u4eec\u5bf9\u670d\u52a1\u8fd0\u8425\u65b9\u5f0f\u7684\u62c5\u5fe7\u5927\u6709\u88e8\u76ca\u3002\u4f8b\u5982\uff0c\u4eba\u4eec\u7ecf\u5e38\u8d28\u7591\u6211\u8bb0\u5f55\u641c\u7d22\u662f\u5426\u662f\u4e3a\u4e86\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5217\u8868\u3002\u4e0d\uff0c\u6211\u4e0d\u662f\uff0c\u4f46\u76ee\u524d\u8fd9\u4e00\u65ad\u8a00\u5b9e\u9645\u4e0a\u53ea\u662f\u5f52\u7ed3\u4e3a\u76f8\u4fe1\u6211\u3002\u663e\u793a\u4ee3\u7801--\u5b9e\u9645\u7684\u4ee3\u7801--\u548c\u8bc1\u660e\u6ca1\u6709\u8bb0\u5f55\u7684\u4e1c\u897f\u662f\u975e\u5e38\u4e0d\u540c\u7684\u4e3b\u5f20\u3002\n\u4ee3\u7801\u7684\u900f\u660e\u6027\u53cd\u6620\u4e86\u6211\u4e00\u6b21\u53c8\u4e00\u6b21\u5e94\u7528\u4e8eHIBP\u8fd0\u884c\u65b9\u5f0f\u7684\u7cbe\u795e\u3002\u6211\u5bf9\u5982\u4f55\u9a8c\u8bc1\u6570\u636e\u662f\u900f\u660e\u7684\u3002\u6211\u5bf9\u653f\u5e9c\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u7684\u60c5\u51b5\u662f\u900f\u660e\u7684\u3002\u5f53\u6211\u641e\u7838\u548c\u7cfb\u7edf\u4e2d\u65ad\u65f6\uff0c\u6211\u662f\u900f\u660e\u7684\u3002\u4ee3\u7801\u900f\u660e\u5316\u611f\u89c9\u662f\u6709\u53f2\u4ee5\u6765\u6700\u81ea\u7136\u7684\u4e8b\u60c5\uff01\n\u5f00\u6e90\u7684HIBP\u4ee3\u7801\u5e93\u8ba9\u6211\u6709\u673a\u4f1a\u89e3\u51b3\u6211\u6700\u521d\u6253\u7b97\u7528\u5e76\u8d2d\u6d41\u7a0b\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u5bfb\u627e\u5176\u4ed6\u53ef\u4ee5\u5e2e\u52a9\u7ef4\u6301\u9879\u76ee\u7684\u4eba\u3002\u5982\u679c\u793e\u533a\u613f\u610f\uff0c\u6240\u6709\u90a3\u4e9b\u79ef\u538b\u7684\u5de5\u4f5c\u3001\u6240\u6709\u7684\u9519\u8bef\u3001\u4eba\u4eec\u62e5\u6709\u7684\u6240\u6709\u4f1f\u5927\u7684\u65b0\u60f3\u6cd5\uff0c\u4f46\u6211\u6839\u672c\u65e0\u6cd5\u5b9e\u73b0\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6700\u7ec8\u90fd\u53ef\u4ee5\u91cd\u65b0\u6295\u5165\u5230\u8fd9\u4e2a\u9879\u76ee\u4e2d\u3002\n\u8fd9\u662f\u6211\u575a\u5b9a\u4e0d\u79fb\u7684\uff1b\u8fd9\u91cc\u7684\u76ee\u6807\u4e0d\u4ec5\u4ec5\u662f\u8bf4\uff0c\u563f\uff0c\u770b\u770b\u4ee3\u7801\uff0c\u5b83\u4e0d\u662f\u5728\u8bb0\u5f55\u4f60\u7684\u641c\u7d22\uff0c\u5b83\u7684\u6839\u672c\u76ee\u7684\u662f\u8ba9HIBP\u6210\u4e3a\u4e00\u9879\u66f4\u53ef\u6301\u7eed\u3001\u66f4\u5177\u7279\u8272\u7684\u793e\u533a\u670d\u52a1\u3002\u5766\u7387\u5730\u8bf4\uff0c\u6211\u60f3\u4e0d\u51fa\u4e00\u4e2a\u597d\u7684\u7406\u7531\u6765\u89e3\u91ca\u6211\u4e3a\u4ec0\u4e48\u4e0d\u505a\u8fd9\u4ef6\u4e8b\u3002\u4f46\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4e5f\u4e0d\u50cf\u542c\u8d77\u6765\u90a3\u4e48\u5fae\u4e0d\u8db3\u9053\uff0c\u6240\u4ee5\u8ba9\u6211\u6765\u8c08\u8c08\u6574\u4e2a\u4e8b\u60c5\u7684\u5b9e\u7528\u6027\u3002\n2013\u5e74\uff0c\u6211\u5f00\u59cb\u5728\u98de\u5f80\u83f2\u5f8b\u5bbe\u7684\u98de\u673a\u4e0a\u5199HIBP\uff0c\u964d\u843d\u540e\u5728\u9152\u5e97\u623f\u95f4\u91cc\u5199\u5b8c\u4e86\u4e00\u5927\u5806\u3002\u5728\u90a3\u4e4b\u540e\u7684\u8fd17\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u96f6\u661f\u5730\u5403\u4e1c\u897f\uff0c\u7ecf\u5e38\u662f\u5728\u65c5\u884c\u3001\u5012\u65f6\u5dee\u548c\u5168\u795e\u8d2f\u6ce8\u7684\u65f6\u5019\u4ece\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u62ff\u51fa\u6765\u7684\u3002\u6211\u5df2\u7ecf\u6284\u8fd1\u8def\u4e86\u3002\u6211\u5df2\u7ecf\u7834\u89e3\u4e86\u4e00\u4e9b\u76f8\u5f53\u6742\u4e71\u7684\u4e1c\u897f\u3002\u6211\u4ee5\u524d\u53ef\u80fd\u5df2\u7ecf\u767b\u8bb0\u8fc7\u79d8\u5bc6\uff0c\u5f53\u4f60\u662f\u552f\u4e00\u4e00\u4e2a\u63a5\u89e6\u5230\u9879\u76ee\u7684\u4eba\u65f6\uff0c\u4f60\u53ef\u4ee5\u9003\u8131\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4f46\u4e00\u65e6\u4f60\u5f00\u59cb\u5f00\u6e90\uff0c\u5c31\u4e0d\u4f1a\u4e86\u3002\nHIBP\u8fd8\u4e0d\u80fd\u7b80\u5355\u5730\u5728GitHub\u4e2d\u5c55\u793a\u5b83\u7684\u53ef\u89c1\u6027\uff0c\u4f46\u5b83\u9700\u8981\u8fbe\u5230\u8fd9\u4e00\u70b9\u3002\u76f8\u53cd\uff0c\u6211\u9700\u8981\u9009\u62e9\u9879\u76ee\u7684\u6b63\u786e\u90e8\u5206\uff0c\u4ee5\u4fbf\u5728\u6b63\u786e\u7684\u65f6\u95f4\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u5f00\u653e\u3002\u4ec5\u8fd9\u4e00\u9879\u7ec3\u4e60\u5c31\u9700\u8981\u5e2e\u52a9\uff0c\u73b0\u5728\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4e00\u76f4\u5728\u548c\u8fd9\u4e2a\u9886\u57df\u91cc\u6211\u8ba4\u8bc6\u7684\u4e00\u4e9b\u6700\u806a\u660e\u7684\u4eba\u4ea4\u8c08\u3002\u751f\u6d3b\u548c\u547c\u5438\u5f00\u6e90\u7684\u4eba\uff0c\u5bf9.NET\u548cAzure\u4e86\u5982\u6307\u638c\u7684\u4eba\uff0c\u5bf9HIBP\u975e\u5e38\u4e86\u89e3\u7684\u4eba\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4fe1\u4efb\u7684\u4eba\u4f1a\u63ed\u9732\u6211\u81ea\u5df1\u7684\u7f3a\u70b9\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4f7f\u8fd9\u4ef6\u4e8b\u66f4\u5177\u53ef\u6301\u7eed\u6027\u3002\u5728\u4ed6\u4eec\u7684\u652f\u6301\u4e0b\uff0c\u4ece\u5b8c\u5168\u5c01\u95ed\u5230\u5b8c\u5168\u5f00\u653e\u7684\u8f6c\u53d8\u5c06\u4ee5\u4e00\u79cd\u65e2\u53ef\u7ba1\u7406\u53c8\u8d1f\u8d23\u4efb\u7684\u65b9\u5f0f\u9010\u6b65\u8fdb\u884c\u3002\u8ba9\u6211\u6f84\u6e05\u4e00\u4e0b\uff1a\u6211\u8fd8\u6ca1\u6709\u4e00\u6b65\u4e00\u6b65\u7684\u65f6\u95f4\u8868\uff0c\u56e0\u4e3aHIBP\u4ecd\u7136\u662f\u6211\u5728\u4e1a\u4f59\u65f6\u95f4\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u6211\u603b\u662f\u6709\u4e00\u5806\u5176\u4ed6\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u5df2\u7ecf\u5f00\u59cb\u4e86\uff0c\u6211\u4f1a\u5c3d\u5feb\u5206\u4eab\u66f4\u591a\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u4fe1\u606f\u3002\n\u6211\u60f3\u8981\u8fbe\u5230\u8fd9\u6837\u4e00\u4e2a\u5730\u6b65\uff0c\u90a3\u5c31\u662f\u6240\u6709\u53ef\u80fd\u7684\u4e8b\u60c5\u90fd\u662f\u5f00\u653e\u7684\u3002\u6211\u5e0c\u671b\u57fa\u7840\u8bbe\u65bd\u914d\u7f6e\u4e5f\u662f\u5f00\u653e\u7684\uff0c\u6211\u5e0c\u671b\u6574\u4e2a\u793e\u533a\u80fd\u591f\u81ea\u6211\u7ef4\u6301\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u8ba9\u81ea\u5df1\u53d8\u5f97\u591a\u4f59\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6211\u6b63\u8ba1\u5212\u9000\u51fa(\u8fdc\u975e\u5982\u6b64)\uff0c\u4f46\u6211\u73b0\u5728\u4e0d\u80fd\u9000\u51fa\u5bf9HIBP\u6ca1\u6709\u597d\u5904\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u5bf9\u6211\u4e5f\u6ca1\u6709\u597d\u5904\u3002\n\u5173\u952e\u662f\uff0c\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u6982\u8ff0\u7684\u76ee\u6807\u9700\u8981\u65f6\u95f4\u624d\u80fd\u5b9e\u73b0\uff0c\u800c\u4e14\u5b83\u4eec\u5e76\u4e0d\u50cf\u8868\u9762\u4e0a\u542c\u8d77\u6765\u90a3\u4e48\u5fae\u4e0d\u8db3\u9053\u3002\u5f53\u6211\u6709\u673a\u4f1a\u7684\u65f6\u5019\uff0cHIBP\u4ecd\u7136\u662f\u6211\u949f\u7231\u7684\u9879\u76ee\uff0c\u5728\u90a3\u91cc\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u9700\u8981\u505a\u51fa\u627f\u8bfa\uff0c\u8ba9\u5b83\u8fbe\u5230\u6211\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u7684\u76ee\u6807\u3002\n\u6211\u771f\u7684\u9700\u8981\u6e05\u695a\u5730\u628a\u8fd9\u4e00\u90e8\u5206\u7684\u8ba8\u8bba\u5206\u5f00\uff0c\u56e0\u4e3a\u867d\u7136\u5f00\u6e90\u4ee3\u7801\u5e93\u662f\u4e00\u56de\u4e8b\uff0c\u4f46\u5982\u4f55\u5904\u7406\u6570\u636e\u5219\u5b8c\u5168\u662f\u53e6\u4e00\u56de\u4e8b\u3002\u6ca1\u6709\u529e\u6cd5\u7c89\u9970\u8fd9\u4ef6\u4e8b\uff0c\u6240\u4ee5\u6211\u5c31\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\uff1aHIBP\u7684\u5b58\u5728\u53ea\u662f\u56e0\u4e3a\u4e00\u5927\u5806\u72af\u7f6a\u6d3b\u52a8\uff0c\u5bfc\u81f4\u6570\u636e\u6700\u7ec8\u843d\u5165\u6211\u624b\u4e2d\u3002\u5f53\u7136\uff0c\u60c5\u51b5\u6bd4HIBP\u4e2d\u7684\u5927\u91cf\u6570\u636e\u5df2\u7ecf\u5728\u5e7f\u6cdb\u516c\u5f00\u4f20\u64ad\u5e76\u901a\u8fc7\u8bb8\u591a\u4eba\u624b\u4e2d\u7684\u60c5\u51b5\u7565\u6709\u5fae\u5999\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u5373\u4f7f\u62e5\u6709\u5b83\u7684\u5408\u6cd5\u6027\u4e5f\u4ecd\u7136\u662f\u7070\u8272\u7684\uff0c\u867d\u7136\u6709\u8bb8\u591a\u4e92\u8054\u7f51\u7eb8\u4e0a\u8c08\u5175\u7684\u4e13\u5bb6\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u53d1\u8868\u4e86\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u4f46\u4ee5\u4e0b\u662f\u6211\u4e00\u76f4\u88ab\u7ed9\u4e88\u7684\u6cd5\u5f8b\u6307\u5bfc\uff0c\u5f52\u6839\u7ed3\u5e95\u662f\uff1a\n\u592a\u597d\u4e86\uff0c\u4e0d\u9519\u7684\u5f8b\u5e08\u5728\u90a3\u91cc\u8bb2\u8bdd\u3002(\u4e25\u8083\u5730\u8bf4\uff0c\u662f\u7684\uff0c\u8fd9\u6b63\u662f\u6bd5\u9a6c\u5a01\u5728\u5e76\u8d2d\u8fc7\u7a0b\u4e2d\u4e3a\u6211\u652f\u4ed8\u4e86\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u91d1\u989d\u7684\u5f8b\u5e08\u4eec\u63d0\u4f9b\u7684\u5efa\u8bae\u3002)\u3002\u7136\u800c\uff0c\u663e\u7136\uff0c\u4e16\u754c\u4e0a\u8bb8\u591a\u6700\u5927\u7684\u516c\u53f8\u786e\u5b9e\u770b\u5230\u4e86\u5b83\u7684\u4ef7\u503c\uff0c\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u6301\u6709\u8fd9\u4e9b\u6570\u636e\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u4f8b\u5982\uff0c\u5927\u578b\u79d1\u6280\u516c\u53f8\u622a\u83b7\u4e86\u4e0eHIBP\u5b8c\u5168\u76f8\u540c\u7684\u6f0f\u6d1e\uff0c\u5e76\u5229\u7528\u5b83\u4eec\u6765\u8bc6\u522b\u8de8\u81ea\u5df1\u5e73\u53f0\u7684\u51ed\u636e\u91cd\u7528\uff1a\n\u770b\u8d77\u6765@Amazon\u6b63\u5728\u91cd\u7f6e\u6765\u81eaLinkedIn etc@troyHunt pic.twitter.com/NIP5aOfr7W\u7684\u53ef\u80fd\u6cc4\u9732\u6216\u56de\u9000\u7684\u5e10\u6237\u3002\n-Ryan Yates(MBCS MVP)#mhasl(@ryanyates1990)2016\u5e746\u670823\u65e5\u3002\n\u7136\u540e\u8fd8\u6709\u9690\u79c1\u65b9\u9762\u7684\u95ee\u9898\uff1a\u6211\u81ea\u5df1\u7684\u4e2a\u4eba\u6570\u636e\u90fd\u5728\u8fd9\u4e9b\u4fe1\u606f\u6cc4\u9732\u4e2d\uff0c\u4f60\u7684\u6570\u636e\u51e0\u4e4e\u80af\u5b9a\u4e5f\u662f\u5982\u6b64\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u6709\u6570\u5341\u4ebf\u4eba\u53d7\u5230\u4e86\u6570\u636e\u6cc4\u9732\u7684\u5f71\u54cd\u3002\u65e0\u8bba\u8fd9\u4e9b\u4fe1\u606f\u7684\u4f20\u64ad\u8303\u56f4\u6709\u591a\u5e7f\uff0c\u6211\u4ecd\u7136\u9700\u8981\u786e\u4fdd\u5728\u4ee3\u7801\u57fa\u7840\u53d8\u5f97\u66f4\u52a0\u900f\u660e\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u8fdd\u89c4\u6570\u636e\u672c\u8eab\u5b9e\u65bd\u76f8\u540c\u7684\u9690\u79c1\u63a7\u5236\u3002\u8fd9\u53ef\u4e0d\u662f\u5c0f\u4e8b\u3002\u53ef\u884c\uff0c\u4f46\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u8fd9\u662f\u6211\u60f3\u4e86\u5f88\u4e45\u7684\u4e8b\u60c5\u3002\u5f00\u6e90HIBP\u7684\u6982\u5ff5\u88ab\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u63d0\u51fa\uff0c\u5b83\u7ecf\u5386\u4e86\u4e00\u6b21\u5931\u8d25\u7684\u5e76\u8d2d\u8fc7\u7a0b\uff0c\u5e2e\u52a9\u6211\u610f\u8bc6\u5230\u8fd9\u662f\u6700\u597d\u7684\u524d\u8fdb\u9053\u8def\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u6765\u5230\u4e86\u8fd9\u91cc\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u7ecf\u5e38\u4f7f\u7528\u201c\u793e\u533a\u201d\u8fd9\u4e2a\u8bcd\uff0c\u6211\u4e0d\u80fd\u4f4e\u4f30\u5176\u4ed6\u4eba\u5728\u8fd9\u4e2a\u9879\u76ee\u6210\u529f\u4e2d\u6240\u626e\u6f14\u7684\u89d2\u8272\u7684\u91cd\u8981\u6027\u3002\u4e3a\u4e86\u771f\u6b63\u9610\u660e\u8fd9\u4e00\u70b9\uff0c\u770b\u770b\u8fc7\u53bb\u4e24\u5468HIBP\u53d1\u751f\u4e86\u591a\u5c11\u6b21\u8fdd\u89c4\u4e8b\u4ef6\u3002\u5728\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8fd916\u6b21\u6cc4\u9732\u6d89\u53ca95,850,490\u6761\u8bb0\u5f55\uff0c\u5176\u4e2d\u6bcf\u4e00\u6761\u90fd\u662f\u5bf9\u793e\u533a\u7684\u8d21\u732e\uff1b\u6709\u4eba\u65e0\u79c1\u5730\u7ad9\u51fa\u6765\uff0c\u76f8\u4fe1\u6211\u4f1a\u4ee5\u4ed6\u4eba\u7684\u6700\u4f73\u5229\u76ca\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002\u6211\u5728\u8fd9\u91cc\u7279\u522b\u5173\u6ce8\u8fd9\u4e00\u77ed\u65f6\u95f4\u8303\u56f4\uff0c\u56e0\u4e3a\u5b83\u8fd8\u5c55\u793a\u4e86\u4e0d\u65ad\u6d8c\u5165\u7684\u6570\u636e\u4ee5\u53ca\u66f4\u6709\u6548\u5730\u6269\u5c55\u81ea\u5df1\u7684\u9700\u8981\u3002\n\u56e0\u6b64\uff0c\u8fd9\u5c31\u662fHIBP\u7684\u53d1\u5c55\u65b9\u5411\u3002\u6211\u77e5\u9053\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4f1a\u5f15\u8d77\u5f88\u5927\u7684\u70ed\u60c5\uff0c\u56e0\u4e3a\u8fd9\u662f\u4f60\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u544a\u8bc9\u6211\u8981\u505a\u7684\u3002\u6211\u542c\u8fc7\u4e86\uff0c\u73b0\u5728\u662f\u65f6\u5019\u628a\u5b83\u53d8\u6210\u73b0\u5b9e\ud83d\ude0a\u4e86", "note_en": "Let me just cut straight to it: I&#39;m going to open source the Have I Been Pwned code base. The decision has been a while coming and it took a failed M&amp;A process to get here, but the code will be turned over to the public for the betterment of the project and frankly, for the betterment of everyone who uses it. Let me explain why and how.\n  I&#39;ve been giving a great deal of thought to how I want this project to evolve lately, especially in the wake of  the M&amp;A process that ended earlier this year right back where I&#39;d started: with me being solely responsible for everything. The single most important objective of that process was to seek a more sustainable future for HIBP and that desire hasn&#39;t changed; the project cannot be solely dependent on me. Yet that&#39;s where we are today and if I disappear, HIBP quickly withers and dies.\n As I&#39;ve given further thought to the future since the M&amp;A process, the significance of community contributions has really hit home. Every single byte of data that&#39;s been loaded into the system in recent years has come from someone who freely offered it in order to improve the security landscape for everyone. Many of the services that HIBP runs on are provided free by the likes of Cloudflare. Much of the code that&#39;s been written has drawn on community contributions either by virtue of content people have published publicly or support that&#39;s been provided to me directly.\n I was reminded of this just yesterday when my friend from Cloudflare, Junade Ali, posted this:\n Now  @LastPass has added breached password notifications using the k-Anonymity API design by me and  @troyhunt - joining  @1Password, Okta PassProtect, Apple, Google, etc.  https://t.co/fyOKbZWNNF\n\u2014 Junade Ali (@IcyApril)  August 5, 2020\n  This tweet isn&#39;t entirely accurate; it was all Junade&#39;s idea and he designed the k-anonymity implementation for HIBP&#39;s Pwned Passwords. For free, because he&#39;s a good bloke and Cloudflare supported him. LastPass has now employed that same model and they follow the other notable names Junade mentioned. I&#39;m sure I speak for him as well when I say we couldn&#39;t be happier that other companies have taken the model we pioneered and applied it to their own services too because at the end of the day, that&#39;s in everyone&#39;s best interests.\n The philosophy of HIBP has always been to support the community, now I want the community to help support HIBP.\n Open sourcing the code base is the most obvious way to do this. It takes the nuts and bolts of HIBP and puts them in the hands of people who can help sustain the service regardless of what happens to me. But this isn&#39;t just a philosophical decision based on a desire to offload work, it&#39;s also common sense for a number of reasons. Let me explain:\n  I&#39;ve already written extensively about the architecture of the system across many of  the 128 previous blog posts tagged as Have I Been Pwned. The very second blog post on that tag was about  how I used Azure Table Storage to make it so fast and so cheap. As soon as it got popular,  I wrote about how I optimised it for performance. When I started using Azure Functions,  I wrote about the joy of serverless computing and how I&#39;d implemented it in HIBP. I levelled that up even further when  I wrote about using Cloudflare Workers to further optimise performance and drive down cost.\n The point is that it was always the intention to be completely open about the design of HIBP, it&#39;s not like there&#39;s any proprietary secret sauce I&#39;ve been trying to protect here.\n  A heap of really amazing projects are open source these days. Visual Studio Code, for example, is open source. The platform this very blog runs on, Ghost, is open source. Most of the libraries HIBP uses are open source. And I&#39;m not just talking open source in the &#34;source open&#34; kind of way where other people are free to read it, but I&#39;m talking open source in terms of taking contributions as well.\n It actually got me thinking - how many of the products and services I use every day are open source? I asked on Twitter earlier today, and it&#39;s, well, extensive:\n               I love also that  Microsoft remains one of the largest corporate contributors to open source, maybe even the largest depending on how you want to define the metric. Open source is in the DNA of everything that HIBP is built on.\n  Putting the code out there in public goes a long way to addressing concerns people have about the way the service operates. For example, people have often questioned whether I&#39;m logging searches in order to build up a new list of email addresses. No, I&#39;m not, but at present that assertion effectively just boils down to &#34;trust me&#34;. Showing the code - the actual code - and demonstrating that things aren&#39;t logged is a very different proposition.\n Transparency of code mirrors the ethos I&#39;ve applied time and time again to the way I run HIBP.  I&#39;m transparent about how I verify data.  I&#39;m transparent about government usage of the service.  I&#39;m transparent when I screw up and have system outages. Being transparent with the code feels like the most natural thing ever!\n  Open sourcing the HIBP code base gives me the opportunity to address that original problem I set out to solve with the M&amp;A process: finding other people that can help sustain the project. All that backlog, all those bugs, all the great new ideas people have but I simply can&#39;t implement myself can, if the community is willing, finally be contributed back into the project.\n And that&#39;s something that I&#39;m adamant about; the goal here isn&#39;t just to say &#34;hey, look at the code, it&#39;s not logging your searches&#34;, it&#39;s fundamentally about making HIBP a more sustainable, more robustly featured community service. Frankly, I can&#39;t think of a single good reason why I wouldn&#39;t do this. But that said, it&#39;s also not as trivial as it sounds so let me talk about the practicalities of the whole thing.\n  I started writing HIBP on a plane to the Philippines in 2013 and finished up a bunch of it in a hotel room once I landed. In the near 7 years since then, I&#39;ve chipped away at it in little bits and pieces, frequently from a laptop while travelling, jet lagged and preoccupied. I&#39;ve taken shortcuts. I&#39;ve hacked together some pretty messy stuff. I&#39;ve probably checked in secrets before and when you&#39;re the only person touching a project you can get away with all that stuff, but not once you start opening up source.\n HIBP isn&#39;t in a state to simply flick the visibility of it in GitHub, but it needs to get to that point. Instead, I need to choose the right parts of the project to open up in the right way at the right time. That exercise alone requires help and for a while now, I&#39;ve been talking to some of the smartest people I know in this space. People who live and breathe open source, people who understand .NET and Azure inside and out, people who know HIBP well and above all, people I trust to expose my own shortcomings so that they can help me make this thing more sustainable. With their support, the transition from completely closed to completely open will happen incrementally, bit by bit and in a fashion that&#39;s both manageable and responsible. Let me be clear: I don&#39;t have a timeline for each step along the way yet as HIBP remains something I do in my spare time and I&#39;ve always got a bunch of other stuff on my plate, but the process has already begun and I&#39;ll be sharing more on that as soon as I can.\n I want to get to a point where everything possible is open. I want the infrastructure configuration to be open too and I want the whole thing to be self-sustaining by the community such that I make myself redundant. That&#39;s not to say I&#39;m planning an exit (far from it), but it&#39;s not good for HIBP that I  can&#39;t exit right now and frankly, it&#39;s not good for me either.\n The point is that the goals outlined in this blog post will take time to reach and they&#39;re not as trivial as they may sound at face value. HIBP remains a pet project run when I have the chance and somewhere within there I need to make the commitment to get it to the point I&#39;m aiming for in this blog post.\n  I need to really clearly break this part of the discussion out because whilst open sourcing the code base is one thing, how the data is handled is quite another. There&#39;s no way to sugar coat this so I&#39;ll just lay it out bluntly: HIBP only exists due to a whole bunch of criminal activity resulting in data that&#39;s ultimately ended up in my possession. Of course, the situation is a bit more nuanced than that with the vast bulk of data in HIBP already being in broad public circulation and passing through many hands. But be that as it may, even the legality of possessing it remains grey and whilst there are many internet armchair experts chiming in with their own opinions on the topic, here&#39;s what the legal guidance I&#39;ve consistently been given boils down to:\n  Great, nice lawyer speak there guys. (And seriously, yes, that&#39;s what the KPMG lawyers from the M&amp;A process I paid an eye-watering amount to advised.) Yet clearly, many of the world&#39;s largest companies do see value in it and conclude that holding the data is acceptable. Big tech companies, for example, pull down precisely the same breaches that go into HIBP and use them to identify credential reuse across their own platforms:\n Looks like  @amazon are resetting accounts possible breach or fallback from LinkedIn etc  @troyhunt  pic.twitter.com/NIP5aOfr7W\n\u2014 Ryan Yates (MVP, MBCS) #mhasl (@ryanyates1990)  June 23, 2016\n  Then there&#39;s the privacy side of it all: my own personal data is in those breaches and your data almost certainly is too because there are  literally billions of people that have been impacted by data breaches. Regardless of how broadly that information is circling, I still need to ensure the same privacy controls prevail across the breach data itself even as the code base becomes more transparent. That&#39;s non-trivial. Doable, but non-trivial.\n  This is something I&#39;ve given a lot of thought to for a long time now. The concept of open sourcing HIBP has been floated over and over again and it&#39;s taken a failed M&amp;A process to help me realise that this was the best path forward, but now here we are.\n I&#39;ve used the word &#34;community&#34; a lot throughout this post and I can&#39;t understate the importance of the role other people have played in the project&#39;s success. Just to really drive that point home,  look at how many breaches have gone into HIBP in the last two weeks. At the time of writing, that&#39;s 16 breaches encompassing 95,850,490 records and every single one of those has been a community contribution; someone selflessly standing up and trusting me to handle the data in the best interest of others. I focus on that short time frame in particular here because it also demonstrates the constant flood of data and the need to scale myself more efficiently.\n So that&#39;s where HIBP is heading. I know this blog post will be met with much enthusiasm because that&#39;s what many of you have been telling me to do for a long time. I&#39;ve listened, now it&#39;s time to make it a reality \ud83d\ude0a", "posttime": "2020-08-07 18:47:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,pwned,sourcing,hibp", "title": "\u6211\u5728\u5f00\u6e90Have I be Pwned Code Base", "title_en": "I'm Open Sourcing the Have I Been Pwned Code Base", "transed": 1, "url": "https://www.troyhunt.com/im-open-sourcing-the-have-i-been-pwned-code-base/", "via": "", "real_tags": ["\u5f00\u6e90", "pwned", "sourcing", "hibp"]}, {"category": "", "categoryclass": "", "imagename": "c5f3c3019c070da950e70dcf52d14b26.jpg", "infoid": 1016855, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "T-Mobile\u5728\u7b2c\u4e8c\u5b63\u5ea6\u5b8c\u6210\u4e86\u4e0eSprint\u7684\u5408\u5e76\uff0c\u5e76\u5b9e\u73b0\u4e86\u7a33\u5b9a\u7684\u5ba2\u6237\u589e\u957f\u3002\u5468\u56db\uff0cT-Mobile\u8868\u793a\uff0c\u5b83\u5df2\u6b63\u5f0f\u8d85\u8fc7\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\uff0c\u6210\u4e3a\u7b2c\u4e8c\u5927\u65e0\u7ebf\u8fd0\u8425\u5546\u3002T-Mobile\u5728\u7b2c\u4e8c\u5b63\u5ea6\u51c0\u589e124.5\u4e07\u5ba2\u6237\uff0c\u4f7f\u5176\u5ba2\u6237\u603b\u6570\u8fbe\u52309830\u4e07\u3002\u8be5\u516c\u53f8\u516c\u5e03\u7684\u672c\u5b63\u5ea6\u8425\u6536\u7565\u9ad8\u4e8e\u5e02\u573a\u9884\u671f\u3002\n\u51c0\u6536\u76ca\u4e3a1.1\u4ebf\u7f8e\u5143\uff0c\u7a00\u91ca\u540e\u6bcf\u80a1\u6536\u76ca\u4e3a9\u7f8e\u5206\u3002\u603b\u6536\u5165\u4e3a177\u4ebf\u7f8e\u5143\u3002\n\u5206\u6790\u5e08\u6b64\u524d\u9884\u8ba1\uff0c\u975eGAAP\u6bcf\u80a1\u6536\u76ca\u4e3a7\u7f8e\u5206\uff0c\u8425\u6536\u4e3a176.1\u4ebf\u7f8e\u5143\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u8fc8\u514b\u00b7\u897f\u5f17\u7279\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff0c\u8d85\u8d8a\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u6210\u4e3a\u7b2c\u4e8c\u5b63\u5ea6\u7684\u7b2c\u4e8c\u540d\u662f\u5f00\u542f\u7b2c\u4e8c\u5b63\u5ea6\u7684\u4e00\u4e2a\u5de8\u5927\u91cc\u7a0b\u7891\uff0c\u4f46\u8fd9\u53ea\u662f\u4e2a\u5f00\u59cb\uff01\u5728\u5408\u5e76\u540e\u7684\u7b2c\u4e00\u5b63\u5ea6\uff0c\u5373\u4f7f\u5728\u5145\u6ee1\u6311\u6218\u7684\u73af\u5883\u4e2d\uff0cT-Mobile\u7684\u54c1\u724c\u5ba2\u6237\u589e\u957f\u603b\u91cf\u4e5f\u9886\u5148\u4e8e\u884c\u4e1a\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u6211\u4eec\u662f\u65e0\u7ebf\u9886\u57df\u589e\u957f\u6700\u5feb\u7684\u516c\u53f8\u3002\n\u5728Sprint\u5408\u5e76\u548cT-Mobile\u5ba2\u6237\u6301\u7eed\u589e\u957f\u7684\u63a8\u52a8\u4e0b\uff0c\u8be5\u5b63\u5ea6\u7684\u603b\u670d\u52a1\u6536\u5165\u6bd4\u53bb\u5e74\u540c\u671f\u589e\u52a0\u4e86132\u4ebf\u7f8e\u5143\u3002\u603b\u670d\u52a1\u6536\u5165\u4e0d\u5305\u62ec\u5927\u7ea610\u4ebf\u7f8e\u5143\u7684\u589e\u52a0\u6536\u5165\uff0c\u8fd9\u4e9b\u6536\u5165\u53cd\u6620\u5728\u975e\u6301\u7eed\u8fd0\u8425\u4e2d\u3002\n\u5c31\u7b2c\u4e8c\u5b63\u5ea6\u5ba2\u6237\u589e\u52a0\u800c\u8a00\uff0c1112,000\u662f\u540e\u4ed8\u8d39\u5ba2\u6237\u51c0\u589e\u52a0\u3002T-Mobile\u516c\u5e03\u540e\u4ed8\u8d39\u7535\u8bdd\u51c0\u5ba2\u6237\u589e\u52a025.3\u4e07\u4eba\uff0c\u540e\u4ed8\u8d39\u7535\u8bdd\u6d41\u5931\u7387\u4e3a0.80%\u3002\u540e\u4ed8\u8d39\u7535\u8bdd\u7528\u6237\u603b\u6570\u589e\u81f36510\u4e07\uff0c\u8d85\u8fc7\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&T\uff1b)\u3002\n\u540e\u4ed8\u8d39\u5176\u4ed6\u5ba2\u6237\u51c0\u589e\u52a0\u8fbe\u5230859,000\u4eba\uff0c\u53cd\u6620\u4e86T-Mobile\u4e1a\u52a1\u7684\u65b0\u673a\u9047\uff0c\u8fd9\u4e3b\u8981\u5f52\u529f\u4e8e\u65b0\u51a0\u80ba\u708e\u3002\n\u7b2c\u4e8c\u5b63\u5ea6\u9884\u4ed8\u8d39\u5ba2\u6237\u51c0\u589e\u52a0\u4e3a13.3\u4e07\u4eba\uff0c\u9884\u4ed8\u8d39\u6d41\u5931\u7387\u4e3a2.81%\u3002", "note_en": "After finalizing its merger with Sprint in the  second quarter and posting solid customer growth, T-Mobile on Thursday said it has officially surpassed AT&amp;T to become the No. 2 wireless carrier. T-Mobile added a net 1,245,000 customers in Q2, bringing its total customer count to 98.3 million. The company reported revenue for the quarter slightly above market estimates.\n Net income came to $110 million, with diluted earnings per share of 9 cents. Total revenues were $17.7 billion.\n  Analysts were expecting non-GAAP earnings of 7 cents per share on revenue of $17.61 billion.\n &#34;Surpassing AT&amp;T to become #2 was a huge milestone to kick off Q2, but that was only the beginning!&#34; CEO Mike Sievert said in a statement. &#34;In our first quarter as a combined company, T-Mobile led the industry in total branded customer adds \u2013 even in a challenging environment \u2013 and there is no doubt that we are THE leading growth company in wireless.&#34;\n Total service revenues for the quarter increased year-over-year to $13.2 billion, driven by the Sprint merger and continued customer growth at T-Mobile. Total service revenues exclude approximately $1 billion of Boost revenues that are reflected in discontinued operations.\n In terms of Q2 customer additions, 1,112,000 were postpaid net customer additions. T-Mobile posted 253,000 postpaid phone net customer additions with a postpaid phone churn rate of 0.80 percent. The total postpaid phone customer count increased to 65.1 million, overtaking AT&amp;T in total postpaid phone customers.\n Postpaid other net customer additions came to 859,000, reflecting new opportunities in T-Mobile for Business developed primarily due to COVID-19.\n   Prepaid net customer additions in Q2 were 133,000, with a prepaid churn rate of 2.81 percent.", "posttime": "2020-08-07 18:11:01", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u603b\u6570,total,\u5ba2\u6237", "title": "T-Mobile\u62a5\u544a\u7b2c\u4e8c\u5b63\u5ea6\u603b\u6536\u5165\u4e3a177\u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f30.5%\uff0c\u5ba2\u6237\u603b\u6570\u589e\u52a0125\u4e07\uff0c\u8fbe\u52309830\u4e07\uff0c\u53f7\u79f0\u662f\u7f8e\u56fd\u7b2c\u4e8c\u5927\u65e0\u7ebf\u63d0\u4f9b\u5546", "title_en": "T-Mobile reports total Q2 revenue of $17.7B, up 30.5% YoY, adding 1.25M customers to reach 98.3M total, claims to be the second largest US wireless provider", "transed": 1, "url": "https://www.zdnet.com/article/t-mobile-surpasses-at-t-as-no-2-wireless-provider/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u603b\u6570", "total", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "1f90e55b63a673873023fa12205a573f.jpg", "infoid": 1016854, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u6709\u6570\u4ee5\u4e07\u8ba1\u7684\u57fa\u56e0\uff1a\u5fae\u5c0f\u7684DNA\u548cRNA\u626d\u66f2\uff0c\u5b83\u4eec\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8868\u8fbe\u4e86\u4f7f\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u72ec\u4e00\u65e0\u4e8c\u7684\u6240\u6709\u7279\u5f81\u548c\u7279\u5f81\u3002\u6bcf\u4e2a\u57fa\u56e0\u90fd\u6709\u4e00\u4e2a\u540d\u79f0\u548c\u5b57\u6bcd\u6570\u5b57\u4ee3\u7801\uff0c\u79f0\u4e3a\u7b26\u53f7\uff0c\u79d1\u5b66\u5bb6\u4eec\u7528\u5b83\u6765\u534f\u8c03\u7814\u7a76\u3002\u4f46\u5728\u8fc7\u53bb\u4e00\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u5927\u7ea6\u670927\u4e2a\u4eba\u7c7b\u57fa\u56e0\u88ab\u91cd\u65b0\u547d\u540d\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u56e0\u4e3a\u5fae\u8f6fExcel\u4e00\u76f4\u5c06\u5b83\u4eec\u7684\u7b26\u53f7\u8bef\u8bfb\u4e3a\u65e5\u671f\u3002\n\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u50cf\u7b2c\u4e00\u6b21\u542c\u8d77\u6765\u90a3\u4e48\u51fa\u4e4e\u610f\u6599\u3002Excel\u662f\u7535\u5b50\u8868\u683c\u4e16\u754c\u4e2d\u7684\u5e9e\u7136\u5927\u7269\uff0c\u79d1\u5b66\u5bb6\u7ecf\u5e38\u4f7f\u7528\u5b83\u6765\u8ddf\u8e2a\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u751a\u81f3\u8fdb\u884c\u4e34\u5e8a\u8bd5\u9a8c\u3002\u4f46\u5b83\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u662f\u8003\u8651\u5230\u66f4\u666e\u901a\u7684\u5e94\u7528\u7a0b\u5e8f\u800c\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u5f53\u7528\u6237\u5728\u7535\u5b50\u8868\u683c\u4e2d\u8f93\u5165\u57fa\u56e0\u7684\u5b57\u6bcd\u6570\u5b57\u7b26\u53f7\u65f6\uff0c\u6bd4\u5982March1-\u201c\u819c\u8054\u73af-CH-Type Finger 1\u201d\u7684\u7f29\u5199-Excel\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u65e5\u671f\uff1a1-Mar1\u3002\n\u8fd9\u662f\u6781\u5176\u4ee4\u4eba\u6cae\u4e27\u7684\uff0c\u751a\u81f3\u662f\u5371\u9669\u7684\uff0c\u7834\u574f\u7684\u6570\u636e\uff0c\u79d1\u5b66\u5bb6\u4eec\u5fc5\u987b\u624b\u5de5\u6574\u7406\u624d\u80fd\u6062\u590d\u3002\u5b83\u4e5f\u51fa\u4eba\u610f\u6599\u5730\u5e7f\u6cdb\uff0c\u751a\u81f3\u5f71\u54cd\u5230\u540c\u884c\u8bc4\u8bae\u7684\u79d1\u5b66\u5de5\u4f5c\u30022016\u5e74\u7684\u4e00\u9879\u7814\u7a76\u68c0\u67e5\u4e86\u4e0e3597\u7bc7\u53d1\u8868\u7684\u8bba\u6587\u4e00\u8d77\u5206\u4eab\u7684\u57fa\u56e0\u6570\u636e\uff0c\u53d1\u73b0\u5927\u7ea6\u4e94\u5206\u4e4b\u4e00\u7684\u8bba\u6587\u53d7\u5230Excel\u9519\u8bef\u7684\u5f71\u54cd\u3002\n\u201c\u8fd9\u771f\u7684\uff0c\u771f\u7684\u5f88\u70e6\u4eba\uff0c\u201d\u82f1\u56fd\u5938\u5fb7\u62c9\u59c6\u7814\u7a76\u6240\u7684\u7cfb\u7edf\u751f\u7269\u5b66\u5bb6Dezs\u0151M\u00f3dos\u544a\u8bc9The Verge\u3002\u83ab\u591a\u65af\u7684\u5de5\u4f5c\u5305\u62ec\u5206\u6790\u65b0\u6d4b\u5e8f\u7684\u57fa\u56e0\u6570\u636e\uff0c\u4ed6\u8bf4Excel\u9519\u8bef\u4e00\u76f4\u90fd\u5728\u53d1\u751f\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5f53\u79d1\u5b66\u5bb6\u5904\u7406\u6570\u5b57\u6570\u636e\u65f6\uff0c\u8f6f\u4ef6\u5f80\u5f80\u662f\u7b2c\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\u60c5\u3002\u4ed6\u8bf4\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u5de5\u5177\uff0c\u5982\u679c\u4f60\u4e0d\u61c2\u8ba1\u7b97\uff0c\u4f60\u5c31\u4f1a\u7528\u5230\u5b83\u3002\u201d\u201c\u5728\u653b\u8bfb\u535a\u58eb\u671f\u95f4\uff0c\u6211\u4e5f\u662f\u8fd9\u6837\u505a\u7684\uff01\u201d\n\u89e3\u51b3\u95ee\u9898\u4e5f\u4e0d\u5bb9\u6613\u3002Excel\u4e0d\u63d0\u4f9b\u5173\u95ed\u6b64\u81ea\u52a8\u683c\u5f0f\u8bbe\u7f6e\u7684\u9009\u9879\uff0c\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u66f4\u6539\u5355\u4e2a\u5217\u7684\u6570\u636e\u7c7b\u578b\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u79d1\u5b66\u5bb6\u53ef\u80fd\u4f1a\u4fee\u590d\u81ea\u5df1\u7684\u6570\u636e\uff0c\u4f46\u4e00\u65e6\u5176\u4ed6\u4eba\u4e0d\u5047\u601d\u7d22\u5730\u5728Excel\u4e2d\u6253\u5f00\u76f8\u540c\u7684\u7535\u5b50\u8868\u683c\uff0c\u9519\u8bef\u5c31\u4f1a\u518d\u6b21\u51fa\u73b0\u3002\n\u7136\u800c\uff0c\u4ee5\u8d1f\u8d23\u57fa\u56e0\u540d\u79f0\u6807\u51c6\u5316\u7684\u79d1\u5b66\u673a\u6784\u96e8\u679c\u57fa\u56e0\u547d\u540d\u59d4\u5458\u4f1a(HGNC)\u7684\u5f62\u5f0f\u63d0\u4f9b\u4e86\u5e2e\u52a9\u3002\u672c\u5468\uff0cHGNC\u53d1\u5e03\u4e86\u65b0\u7684\u57fa\u56e0\u547d\u540d\u6307\u5357\uff0c\u5305\u62ec\u201c\u5f71\u54cd\u6570\u636e\u5904\u7406\u548c\u68c0\u7d22\u7684\u7b26\u53f7\u201d\u3002\u4ed6\u4eec\u8bf4\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u4eba\u7c7b\u57fa\u56e0\u53ca\u5176\u8868\u8fbe\u7684\u86cb\u767d\u8d28\u7684\u547d\u540d\u5c06\u7740\u773c\u4e8eExcel\u7684\u81ea\u52a8\u683c\u5f0f\u5316\u3002\u8fd9\u610f\u5473\u7740\u7b26\u53f7March1\u73b0\u5728\u53d8\u6210\u4e86MARCHF1\uff0c\u800cSEPT1\u53d8\u6210\u4e86SEPTIN1\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002HGNC\u5c06\u5b58\u50a8\u65e7\u7b26\u53f7\u548c\u540d\u79f0\u7684\u8bb0\u5f55\uff0c\u4ee5\u907f\u514d\u5c06\u6765\u51fa\u73b0\u6df7\u6dc6\u3002\nHGNC\u7684\u534f\u8c03\u5458Elspeth Bruford\u544a\u8bc9The Verge\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u5927\u7ea627\u4e2a\u57fa\u56e0\u7684\u540d\u79f0\u5df2\u7ecf\u50cf\u8fd9\u6837\u6539\u53d8\u4e86\uff0c\u4f46\u6307\u5357\u672c\u8eab\u76f4\u5230\u672c\u5468\u624d\u6b63\u5f0f\u516c\u5e03\u3002\u5e03\u9c81\u798f\u5fb7\u8bf4\uff1a\u201c\u6211\u4eec\u54a8\u8be2\u4e86\u5404\u81ea\u7684\u7814\u7a76\u56e2\u4f53\uff0c\u8ba8\u8bba\u4e86\u62df\u8bae\u7684\u66f4\u65b0\uff0c\u6211\u4eec\u8fd8\u901a\u77e5\u4e86\u90a3\u4e9b\u53d1\u8868\u4e86\u8fd9\u4e9b\u57fa\u56e0\u7684\u7814\u7a76\u4eba\u5458\uff0c\u8fd9\u4e9b\u57fa\u56e0\u5177\u4f53\u662f\u5728\u8fd9\u4e9b\u53d8\u5316\u4ed8\u8bf8\u5b9e\u65bd\u7684\u65f6\u5019\u53d1\u8868\u7684\u3002\u201d\n\u6b63\u5982\u5e03\u9c81\u798f\u5fb7\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u57fa\u56e0\u547d\u540d\u7684\u827a\u672f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u5171\u8bc6\u9a71\u52a8\u7684\u3002\u5c31\u50cf\u8d1f\u8d23\u66f4\u65b0\u8bcd\u5178\u7684\u8bcd\u5178\u7f16\u7e82\u8005\u4e00\u6837\uff0c\u57fa\u56e0\u547d\u540d\u59d4\u5458\u4f1a\u5fc5\u987b\u5bf9\u90a3\u4e9b\u53d7\u5176\u5de5\u4f5c\u5f71\u54cd\u6700\u5927\u7684\u4eba\u7684\u9700\u6c42\u4fdd\u6301\u654f\u611f\u3002\n\u6ce8\u610f\uff0c\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u8fd9\u6837\u7684\u3002\u5728\u9057\u4f20\u5b66\u7684\u65e9\u671f\u524d\u6cbf\uff0c\u57fa\u56e0\u547d\u540d\u5f80\u5f80\u662f\u5bcc\u6709\u521b\u9020\u529b\u7684\u79d1\u5b66\u5bb6\u7684\u6e38\u4e50\u573a\uff0c\u5bfc\u81f4\u4e86\u81ed\u540d\u662d\u8457\u7684\u57fa\u56e0\uff0c\u5982\u201cSonic Hedgehog\u201d(\u662f\u7684\uff0c\u4ee5\u90a3\u4e2aSonic\u547d\u540d)\u548c\u201cIndy\u201d(\u201c\u6211\u8fd8\u6ca1\u6709\u6b7b\u201d\u7684\u7f29\u5199\uff1b\u6307\u7684\u662f\u57fa\u56e0\u7684\u529f\u80fd\uff0c\u5f53\u679c\u8747\u53d1\u751f\u7a81\u53d8\u65f6\uff0c\u5b83\u53ef\u4ee5\u4f7f\u679c\u8747\u7684\u5bff\u547d\u7ffb\u4e00\u756a)\u3002\n\u7136\u800c\uff0c\u73b0\u5728\uff0cHGNC\u5df2\u7ecf\u7262\u7262\u5730\u63a7\u5236\u4f4f\u4e86\u4e8b\u60c5\uff0c\u76ee\u524d\u7684\u6307\u5bfc\u65b9\u9488\u5e76\u6ca1\u6709\u5411\u5f02\u60f3\u5929\u5f00\u6216\u81ea\u8d1f\u8ba9\u6b65\u592a\u591a\u3002\u91cd\u70b9\u653e\u5728\u5b9e\u9645\u95ee\u9898\u4e0a\uff1a\u6211\u4eec\u5982\u4f55\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u6df7\u4e71\uff1f\u8be5\u59d4\u5458\u4f1a\u8bf4\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u57fa\u56e0\u7b26\u53f7\u5e94\u8be5\u662f\u552f\u4e00\u7684\uff0c\u57fa\u56e0\u540d\u79f0\u5e94\u8be5\u7b80\u77ed\u800c\u5177\u4f53\u3002\u5b83\u4eec\u4e0d\u80fd\u4f7f\u7528\u4e0b\u6807\u6216\u4e0a\u6807\uff1b\u53ea\u80fd\u5305\u542b\u62c9\u4e01\u5b57\u6bcd\u548c\u963f\u62c9\u4f2f\u6570\u5b57\uff1b\u4e0d\u5e94\u8be5\u62fc\u5199\u540d\u79f0\u6216\u5355\u8bcd\uff0c\u7279\u522b\u662f\u653b\u51fb\u6027\u7684\u540d\u79f0\u6216\u5355\u8bcd(\u8fd9\u4e00\u89c4\u5219\u5e94\u8be5\u9002\u7528\u4e8e\u201c\u4efb\u4f55\u8bed\u8a00\u7684\u7406\u60f3\u60c5\u51b5\u201d)\u3002\n\u5e03\u9c81\u798f\u5fb7\u8bf4\uff0c\u867d\u7136\u91cd\u65b0\u547d\u540d\u57fa\u56e0\u7684\u51b3\u5b9a\u5e76\u4e0d\u662f\u8f7b\u7387\u7684\uff0c\u4f46\u8fd9\u5e76\u4e0d\u7f55\u89c1\u3002\u4f8b\u5982\uff0c\u8bb8\u591a\u53ef\u4ee5\u8bfb\u4f5c\u540d\u8bcd\u7684\u57fa\u56e0\u7b26\u53f7\u5df2\u7ecf\u88ab\u91cd\u65b0\u547d\u540d\uff0c\u4ee5\u907f\u514d\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5047\u9633\u6027\u3002\u5728\u8fc7\u53bb\uff0c\u6c7d\u8f66\u53d8\u6210\u4e86CARS1\uff0c\u6218\u4e89\u53d8\u6210\u4e86\u6218\u4e89\uff0c\u706b\u661f\u53d8\u6210\u4e86MARS1\u3002\u4e3a\u4e86\u907f\u514d\u4fae\u8fb1\uff0c\u8fd8\u505a\u4e86\u5176\u4ed6\u4e00\u4e9b\u6539\u53d8\u3002\n\u201c\u6211\u4eec\u603b\u662f\u8981\u60f3\u8c61\u4e00\u4e2a\u4e34\u5e8a\u533b\u751f\u5fc5\u987b\u5411\u7236\u6bcd\u89e3\u91ca\u4ed6\u4eec\u7684\u5b69\u5b50\u6709\u4e00\u4e2a\u7279\u5b9a\u57fa\u56e0\u7684\u7a81\u53d8\uff0c\u201dBruford\u8bf4\u3002\u201c\u4f8b\u5982\uff0cHECA\u8fc7\u53bb\u7684\u57fa\u56e0\u540d\u79f0\u662f\u2018Headcase Homolog(\u679c\u8747)\u2019\uff0c\u8fd9\u662f\u4ee5\u679c\u8747\u4e2d\u7684\u7c7b\u4f3c\u57fa\u56e0\u547d\u540d\u7684\uff0c\u4f46\u6211\u4eec\u5c06\u5176\u6539\u4e3a\u2018HDC\u540c\u6e90\u57fa\u56e0\uff0c\u7ec6\u80de\u5468\u671f\u8c03\u8282\u56e0\u5b50\u2019\uff0c\u4ee5\u907f\u514d\u6f5c\u5728\u7684\u5192\u72af\u3002\u201d\n\u4f46\u5e03\u9c81\u798f\u5fb7\u8bf4\uff0c\u8fd9\u662f\u8be5\u6307\u5357\u9996\u6b21\u88ab\u4e13\u95e8\u6539\u5199\uff0c\u4ee5\u5e94\u5bf9\u8f6f\u4ef6\u9020\u6210\u7684\u95ee\u9898\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eba\u4eec\u7684\u53cd\u5e94\u4f3c\u4e4e\u975e\u5e38\u79ef\u6781-\u4e00\u4e9b\u4eba\u751a\u81f3\u4f1a\u8bf4\u9ad8\u5174\u3002\n\u9057\u4f20\u5b66\u5bb6Janna Hutz\u5728\u63a8\u7279\u4e0a\u5206\u4eab\u4e86HGNC\u65b0\u6307\u5357\u7684\u76f8\u5173\u90e8\u5206\u540e\uff0c\u793e\u533a\u7684\u53cd\u5e94\u662f\u6b22\u6b23\u9f13\u821e\u7684\u3002\u8d6b\u8328\u672c\u4eba\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u4eba\u7c7b\u57fa\u56e0\u547d\u540d\u59d4\u5458\u4f1a\u5ba3\u5e03\u4e86\u8fd9\u4e00\u6d88\u606f\uff0c\u611f\u5230\u975e\u5e38\u5174\u594b\u3002\u201d\u201c\u7ec8\u4e8e\uff01\u201d\u9a6c\u8428\u8bf8\u585e\u5dde\u5e03\u7f57\u5fb7\u7814\u7a76\u6240\u7684\u8ba1\u7b97\u751f\u7269\u5b66\u5bb6\u7a46\u5fb7\u62c9\u00b7\u9ed1\u683c\u5fb7\u56de\u7b54\u8bf4\u3002\u201c\u4eca\u5929\u6700\u68d2\u7684\u65b0\u95fb\uff01\u201d\u4e00\u4f4d\u5316\u540d\u7684\u63a8\u7279\u7528\u6237\u8bf4\u3002\n\u5e03\u9c81\u798f\u5fb7\u6307\u51fa\uff0c\u5bf9\u8fd9\u4e00\u51b3\u5b9a\u5b58\u5728\u4e00\u4e9b\u5f02\u8bae\uff0c\u4f46\u5b83\u4f3c\u4e4e\u4e3b\u8981\u96c6\u4e2d\u5728\u4e00\u4e2a\u95ee\u9898\u4e0a\uff1a\u4e3a\u4ec0\u4e48\u91cd\u547d\u540d\u4eba\u7c7b\u57fa\u56e0\u6bd4\u6539\u53d8Excel\u7684\u5de5\u4f5c\u65b9\u5f0f\u66f4\u5bb9\u6613\uff1f\u7a76\u7adf\u4e3a\u4ec0\u4e48\u5728\u5fae\u8f6f\u548c\u6574\u4e2a\u57fa\u56e0\u5b66\u754c\u4e4b\u95f4\u7684\u6597\u4e89\u4e2d\uff0c\u662f\u79d1\u5b66\u5bb6\u4eec\u4e0d\u5f97\u4e0d\u8ba9\u6b65\u5462\uff1f\n\u5fae\u8f6f\u6ca1\u6709\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\uff0c\u4f46\u5e03\u9c81\u798f\u5fb7\u7684\u7406\u8bba\u662f\uff0c\u6839\u672c\u4e0d\u503c\u5f97\u9ebb\u70e6\u53bb\u6539\u53d8\u3002\u201c\u8fd9\u662fExcel\u8f6f\u4ef6\u7684\u4e00\u4e2a\u76f8\u5f53\u6709\u9650\u7684\u4f7f\u7528\u6848\u4f8b\uff0c\u201d\u5979\u8bf4\u3002\u201c\u5bf9\u4e8e\u5fae\u8f6f\u6765\u8bf4\uff0c\u51e0\u4e4e\u6ca1\u6709\u52a8\u529b\u5bf9Excel\u5e9e\u5927\u7528\u6237\u793e\u533a\u7684\u5176\u4ed6\u7528\u6237\u975e\u5e38\u5e7f\u6cdb\u5730\u4f7f\u7528\u7684\u529f\u80fd\u8fdb\u884c\u91cd\u5927\u6539\u53d8\u3002\u201d\n\u4e0d\u8fc7\uff0c\u5e03\u9c81\u798f\u5fb7\u4f3c\u4e4e\u5bf9\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u6000\u6068\u5728\u5fc3\u3002\u5979\u8bf4\uff0c\u6bd5\u7adf\uff0c\u5f53\u79d1\u5b66\u5bb6\u53ef\u4ee5\u81ea\u5df1\u63d0\u51fa\u957f\u671f\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u7b49\u5f85\u5047\u60f3\u7684Excel\u66f4\u65b0\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u662f\u884c\u4e0d\u901a\u7684\u3002Microsoft Excel\u53ef\u80fd\u8f6c\u77ac\u5373\u901d\uff0c\u4f46\u4eba\u7c7b\u57fa\u56e0\u5c06\u548c\u6211\u4eec\u4e00\u6837\u957f\u4e45\u5b58\u5728\u3002\u6700\u597d\u7ed9\u5b83\u4eec\u8d77\u4e2a\u5408\u9002\u7684\u540d\u5b57\u3002", "note_en": "There are tens of thousands of genes in the human genome: minuscule twists of DNA and RNA that combine to express all of the traits and characteristics that make each of us unique. Each gene is given a name and alphanumeric code, known as a symbol, which scientists use to coordinate research. But over the past year or so, some 27 human genes have been renamed, all because Microsoft Excel kept misreading their symbols as dates.\n The problem isn\u2019t as unexpected as it first sounds. Excel is a behemoth in the spreadsheet world and is regularly used by scientists to track their work and even conduct clinical trials. But its default settings were designed with more mundane applications in mind, so when a user inputs a gene\u2019s alphanumeric symbol into a spreadsheet, like MARCH1 \u2014 short for \u201c Membrane Associated Ring-CH-Type Finger 1\u201d \u2014 Excel converts that into a date: 1-Mar.\n  This is extremely frustrating, even dangerous, corrupting data that scientists have to sort through by hand to restore. It\u2019s also surprisingly widespread and affects even peer-reviewed scientific work. One study  from 2016 examined genetic data shared alongside 3,597 published papers and found that roughly one-fifth had been affected by Excel errors.\n \u201cIt\u2019s really, really annoying,\u201d Dezs\u0151 M\u00f3dos, a systems biologist at the Quadram Institute in the UK, told  The Verge. M\u00f3dos, whose job involves analyzing freshly sequenced genetic data, says Excel errors happen all the time, simply because the software is often the first thing to hand when scientists process numerical data. \u201cIt\u2019s a widespread tool and if you are a bit computationally illiterate you will use it,\u201d he says. \u201cDuring my PhD studies I did as well!\u201d\n   There\u2019s no easy fix, either. Excel doesn\u2019t offer the option to turn off this auto-formatting, and the only way to avoid it is to  change the data type for individual columns. Even then, a scientist might fix their own data, but as soon as someone else opens the same spreadsheet in Excel without thinking, errors will be introduced all over again.\n Help has arrived, though, in the form of the scientific body in charge of standardizing the names of genes, the HUGO Gene Nomenclature Committee, or HGNC. This week, the HGNC published new  guidelines for gene naming, including for \u201csymbols that affect data handling and retrieval.\u201d From now on, they say, human genes and the proteins they expressed will be named with one eye on Excel\u2019s auto-formatting. That means the symbol MARCH1 has now become MARCHF1, while SEPT1 has become SEPTIN1, and so on. A record of old symbols and names will be stored by HGNC to avoid confusion in the future.\n So far, the names of some 27 genes have been changed like this over the past year, Elspeth Bruford, the coordinator of HGNC, tells  The Verge, but the guidelines themselves weren\u2019t formally announced until this week. \u201cWe consulted the respective research communities to discuss the proposed updates, and we also notified researchers who had published on these genes specifically when the changes were being put into effect,\u201d says Bruford.\n As Bruford makes clear, the art of naming genes is very much driven by consensus. Like the lexicographers charged with updating dictionaries, the Gene Nomenclature Committee has to be sensitive to the needs of those individuals who will be most affected by their work.\n  This wasn\u2019t always the case, mind. In the early, frontier days of genetics, gene naming was often a  playground for creative scientists, leading to notorious genes like \u201csonic hedgehog\u201d (yes, named for  that Sonic) and \u201cIndy\u201d (short for \u201cI\u2019m not dead yet\u201d; a reference to the gene\u2019s function, which can double the life span of fruit flies when mutated).\n Now, though, the HGNC has taken matters firmly in hand, and current guidelines don\u2019t cede much ground to whimsy or ego. The focus is on practical concerns: how do we minimize confusion? For that reason, gene symbols should be unique, and gene names should be brief and specific, says the committee. They cannot use subscript or superscript; can only contain Latin letters and Arabic numerals; and should not spell out names or words, particularly offensive ones (a rule that should hold true \u201cideally in any language\u201d).\n  And while the decision to rename genes is not taken lightly, it\u2019s not unusual, says Bruford. Many gene symbols that can be read as nouns have been renamed to avoid false positives during searches, for example. In the past, CARS has become CARS1, WARS changed to WARS1, and MARS tweaked to MARS1. Other changes have been made to avoid insult.\n \u201cWe always have to imagine a clinician having to explain to a parent that their child has a mutation in a particular gene,\u201d says Bruford. \u201cFor example, HECA used to have the gene name \u2018headcase homolog (Drosophila),\u2019 named after the equivalent gene in fruit fly, but we changed it to \u2018hdc homolog, cell cycle regulator\u2019 to avoid potential offense.\u201d\n But Bruford says this is the first time that the guidelines have been rewritten specifically to counter the problems caused by software. So far, the reactions seem to be extremely positive \u2014 some would even say joyous.\n After geneticist Janna Hutz shared the relevant section of HGNC\u2019s new guidelines on Twitter, the response from the community was jubilant. \u201cTHRILLED by this announcement by the Human Gene Nomenclature Committee,\u201d  tweeted Hutz herself. \u201cFinally!!!\u201d  responded Mudra Hegde, a computational biologist at the Broad Institute in Massachusetts. \u201cGreatest news of the day!\u201d  said a pseudonymous Twitter user.\n  Bruford notes that there has been some dissent about the decision, but it mostly seems to be focused on a single question: why was it easier to rename human genes than it was to change how Excel works? Why, exactly, in a fight between Microsoft and the entire genetics community, was it the scientists who had to back down?\n Microsoft did not respond to a request for comment, but Bruford\u2019s theory is that it\u2019s simply not worth the trouble to change. \u201cThis is quite a limited use case of the Excel software,\u201d she says. \u201cThere is very little incentive for Microsoft to make a significant change to features that are used extremely widely by the rest of the massive community of Excel users.\u201d\n Bruford doesn\u2019t seem bitter about the situation, though. After all, she says, it wouldn\u2019t do to wait on a hypothetical Excel update to fix these problems when a long-term solution can be introduced by scientists themselves. Microsoft Excel may be fleeting, but human genes will be around for as long as we are. It\u2019s best to give them names that work.", "posttime": "2020-08-07 18:08:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5fae\u8f6f,\u79d1\u5b66\u5bb6,microsoft,\u540d\u79f0,scientists", "title": "\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u91cd\u65b0\u547d\u540d\u4e8627\u4e2a\u4eba\u7c7b\u57fa\u56e0\uff0c\u56e0\u4e3a\u5fae\u8f6f\u7684Excel\u5c06\u5b83\u4eec\u7684\u540d\u79f0\u8bef\u8bfb\u4e3a\u65e5\u671f\uff0c\u5e76\u66f4\u6539\u4e86\u683c\u5f0f", "title_en": "Over the past year, scientists have renamed 27 human genes because Microsoft's Excel misread their names as dates and changed the formatting", "transed": 1, "url": "https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u5fae\u8f6f", "\u79d1\u5b66\u5bb6", "microsoft", "\u540d\u79f0"]}, {"category": "", "categoryclass": "", "imagename": "f8a9f00cfc5aee25a95e2ad1b4ee2f13.jpg", "infoid": 1016852, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u673a\u5bc6\u8ba1\u7b97\u662f\u4e00\u9879\u53d8\u9769\u6027\u6280\u672f\uff0c\u5e94\u8be5\u6210\u4e3a\u6bcf\u4e2a\u4f01\u4e1a\u4e91\u90e8\u7f72\u7684\u4e00\u90e8\u5206\u3002\u73b0\u5728\u662f\u5f00\u59cb\u4e00\u8d77\u91ca\u653e\u53ef\u80fd\u6027\u7684\u65f6\u5019\u4e86\u3002\u5f53\u4e92\u8054\u7f51\u6700\u521d\u5efa\u6210\u65f6\uff0c\u5de5\u7a0b\u5e08\u4eec\u4e13\u6ce8\u4e8e\u4f7f\u5176\u542f\u52a8\u548c\u8fd0\u884c\uff0c\u529f\u80fd\u4f18\u5148\u4e8e\u4fdd\u62a4\u3002\u4f46\u5f53\u90aa\u6076\u7684\u6f14\u5458\u5f00\u59cb\u51fa\u73b0\u65f6\uff0c\u6574\u4e2a\u884c\u4e1a\u7684\u8bb8\u591a\u5148\u9a71\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u589e\u52a0\u4e86\u66f4\u591a\u7684\u9632\u5fa1\u3002\u52a0\u5bc6\u6280\u672f\u5f97\u5230\u4e86\u66f4\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4e92\u8054\u7f51\u53d8\u5f97\u66f4\u52a0\u5b89\u5168\u3002\n\u81ea\u4ece\u7535\u5b50\u90ae\u4ef6\u4f5c\u4e3aARPANET\u9879\u76ee\u51fa\u73b0\u5728\u4e92\u8054\u7f51\u65e9\u671f\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u8d70\u8fc7\u4e86\u5f88\u957f\u4e00\u6bb5\u8def\u3002\u5b83\u6253\u5f00\u4e86\u65b0\u7684\u53ef\u80fd\u6027\uff1b\u521b\u5efa\u4e86\u79d1\u5e7b\u60c5\u4eba\u548c\u767e\u80dc\u9910\u996e\u8bc4\u8bba\u7b49\u90ae\u4ef6\u5217\u8868\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u5f53\u6570\u5b57\u8bbe\u5907\u516c\u53f8(Digital Equipment Corporation)\u7684\u67d0\u4eba\u53d1\u51fa\u62db\u8058\u4fe1\u606f\u65f6\uff0c\u5783\u573e\u90ae\u4ef6\u63a5\u8e35\u800c\u81f3\u3002\u7535\u5b50\u90ae\u4ef6\u73b0\u5728\u65e0\u5904\u4e0d\u5728\uff0c\u7ec4\u7ec7\u73b0\u5728\u6b63\u5728\u62e5\u62b1\u7269\u8054\u7f51\u548c\u4eba\u5de5\u667a\u80fd\u7b49\u6280\u672f\u3002\u968f\u7740\u7ec4\u7ec7\u5bf9\u5176\u6280\u672f\u57fa\u7840\u8bbe\u65bd\u8fdb\u884c\u73b0\u4ee3\u5316\u6539\u9020\uff0c\u4e91\u8ba1\u7b97\u5df2\u8fdb\u5165\u4e3b\u6d41\uff0c\u4f7f\u7528\u4e91\u5b9e\u73b0\u5feb\u901f\u53d8\u9769\u3001\u4f18\u5316\u6210\u672c\u5e76\u4e3a\u672a\u6765\u505a\u597d\u51c6\u5907\u3002\u7136\u800c\uff0c\u968f\u7740\u4e91\u4f7f\u7528\u91cf\u7684\u7206\u70b8\u5f0f\u589e\u957f\uff0c\u5b89\u5168\u6027\u4e0d\u80fd\u662f\u4e8b\u540e\u624d\u60f3\u5230\u7684\u3002\u5b89\u5168\u6027\u5fc5\u987b\u878d\u5165\u4e91\u8ba1\u7b97\u4ea4\u6362\u77e9\u9635\u3002\n\u6570\u636e\u4fdd\u62a4\u7684\u4e0b\u4e00\u4e2a\u524d\u6cbf\u6211\u76f8\u4fe1\u4e91\u8ba1\u7b97\u5c06\u8d8a\u6765\u8d8a\u591a\u5730\u8f6c\u5411\u79c1\u6709\u7684\u52a0\u5bc6\u670d\u52a1\uff0c\u5728\u8fd9\u79cd\u670d\u52a1\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u786e\u4fe1\u4ed6\u4eec\u7684\u8f6f\u4ef6\u548c\u6570\u636e\u4e0d\u4f1a\u66b4\u9732\u7ed9\u4e91\u63d0\u4f9b\u5546\u6216\u7ec4\u7ec7\u5185\u90e8\u672a\u7ecf\u6388\u6743\u7684\u53c2\u4e0e\u8005\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c06\u4fc3\u8fdb\u521b\u65b0\uff0c\u4f7f\u7ec4\u7ec7\u80fd\u591f\u91c7\u7528\u6700\u65b0\u7684\u4e91\u6280\u672f\uff0c\u5e76\u7f13\u89e3\u5bf9\u6570\u636e\u9690\u79c1\u548c\u5408\u89c4\u6027\u7684\u62c5\u5fe7\u3002\n\u5f53\u7ec4\u7ec7(\u5c24\u5176\u662f\u53d7\u76d1\u7ba1\u884c\u4e1a\u7684\u7ec4\u7ec7)\u51c6\u5907\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u8f6c\u79fb\u5230\u4e91\u65f6\uff0c\u6700\u5927\u7684\u6311\u6218\u4e4b\u4e00\u662f\u5982\u4f55\u5728\u5904\u7406\u654f\u611f\u6570\u636e\u7684\u540c\u65f6\u4fdd\u6301\u5176\u79c1\u5bc6\u6027\u3002\u7136\u800c\uff0c\u5f53\u6570\u636e\u88ab\u5904\u7406\u65f6\uff0c\u4e00\u76f4\u6ca1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u6765\u4fdd\u6301\u5b83\u7684\u52a0\u5bc6\u3002\u73b0\u5728\u6709\u4e86\u3002\u673a\u5bc6\u8ba1\u7b97\u662f\u4e00\u9879\u7a81\u7834\u6027\u6280\u672f\uff0c\u5b83\u5728\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u5bf9\u6b63\u5728\u4f7f\u7528\u7684\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u3002\n\u5728\u5e55\u540e\uff0c\u673a\u5bc6\u8ba1\u7b97\u73af\u5883\u5c06\u6570\u636e\u52a0\u5bc6\u4fdd\u5b58\u5728\u5185\u5b58\u548cCPU\u4e4b\u5916\u7684\u5176\u4ed6\u5730\u65b9\u3002\u5185\u5b58\u63a7\u5236\u5668\u4f7f\u7528\u4e91\u63d0\u4f9b\u5546\u65e0\u6743\u8bbf\u95ee\u7684\u5d4c\u5165\u5f0f\u786c\u4ef6\u5bc6\u94a5\u5728CPU\u8fb9\u754c\u5185\u89e3\u5bc6\u6570\u636e\u3002\u8fd9\u662f\u7ec4\u7ec7\u5728\u4fdd\u62a4\u673a\u5bc6\u6027\u7684\u540c\u65f6\u5728\u4e91\u4e2d\u5904\u7406\u6570\u636e\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u51e0\u5468\u524d\uff0c\u8c37\u6b4c\u4e91\u63a8\u51fa\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u6b3e\u673a\u5bc6\u8ba1\u7b97\u4ea7\u54c1\uff0c\u540d\u4e3a\u673a\u5bc6\u865a\u62df\u673a(Confidential VM)\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u63d0\u4f9b\u8fd9\u79cd\u7ea7\u522b\u7684\u5b89\u5168\u6027\u548c\u9694\u79bb\u6027\uff0c\u540c\u65f6\u4e3a\u5ba2\u6237\u63d0\u4f9b\u7b80\u5355\u3001\u6613\u7528\u4e14\u4e0d\u4f1a\u5f71\u54cd\u6027\u80fd\u7684\u9009\u9879\u3002\n\u56e2\u7ed3\u4e00\u81f4\u4f5c\u4e3a\u4e00\u540d\u6280\u672f\u4e13\u5bb6\uff0c\u6211\u7684\u804c\u8d23\u662f\u5c3d\u529b\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4e3a\u65b0\u5174\u6280\u672f\u5982\u4f55\u8fd0\u4f5c\u63d0\u4f9b\u660e\u786e\u7684\u89e3\u91ca\uff0c\u8d1f\u8d23\u4efb\u5730\u544a\u77e5\u653f\u7b56\u5236\u5b9a\u8005\uff0c\u5e76\u786e\u4fdd\u4ed6\u4eec\u7684\u653f\u7b56\u662f\u53ef\u5b9e\u65bd\u7684\u3002\u6211\u4e86\u89e3\u5230\uff0c\u5f53\u52a1\u4e4b\u6025\u662f\u6211\u4eec\u5171\u540c\u52aa\u529b\uff0c\u52a0\u901f\u91c7\u7528\u548c\u63a5\u53d7\u63a8\u52a8\u6211\u4eec\u6574\u4e2a\u793e\u4f1a\u5411\u524d\u53d1\u5c55\u7684\u6280\u672f\u3002\n\u4e91\u63d0\u4f9b\u5546\u3001\u786c\u4ef6\u5236\u9020\u5546\u548c\u8f6f\u4ef6\u4f9b\u5e94\u5546\u90fd\u9700\u8981\u5171\u540c\u5b9a\u4e49\u6807\u51c6\uff0c\u4ee5\u63a8\u8fdb\u673a\u5bc6\u8ba1\u7b97\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8c37\u6b4c\u662f\u673a\u5bc6\u8ba1\u7b97\u8054\u76df\u7684\u521b\u59cb\u6210\u5458\u4e4b\u4e00\uff0c\u8be5\u8054\u76df\u5728Linux\u57fa\u91d1\u4f1a\u7684\u4fdd\u62a4\u4f1e\u4e0b\u8fd0\u4f5c\uff0c\u4ee5\u4fc3\u8fdb\u673a\u5bc6\u8ba1\u7b97\u7684\u91c7\u7528\u3002\u6211\u4eec\u5df2\u7ecf\u4e0e\u82f1\u7279\u5c14\u3001\u5fae\u8f6f\u3001RedHat\u3001VMware\u548c\u5176\u4ed6\u516c\u53f8\u8054\u624b\u5236\u5b9a\u6280\u672f\u548c\u6cd5\u89c4\u6807\u51c6\uff0c\u5e76\u652f\u6301\u5f00\u6e90\u5de5\u5177\u7684\u5f00\u53d1\u548c\u91c7\u7528\u3002\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u9f13\u821e\u7684\u5f00\u59cb\u3002\u53ea\u6709\u901a\u8fc7\u6301\u7eed\u7684\u884c\u4e1a\u534f\u4f5c\uff0c\u673a\u5bc6\u8ba1\u7b97\u7684\u771f\u6b63\u6f5c\u529b\u624d\u80fd\u5b9e\u73b0\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u80fd\u591f\u5728\u4e91\u4e2d\u8de8\u5730\u57df\u3001\u8de8\u7ade\u4e89\u5bf9\u624b\u534f\u4f5c\u8fdb\u884c\u57fa\u56e0\u7ec4\u7814\u7a76\uff0c\u540c\u65f6\u4fdd\u62a4\u673a\u5bc6\u5065\u5eb7\u8bb0\u5f55\u7684\u9690\u79c1\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u7531\u4e8e\u5b89\u5168\u534f\u4f5c\uff0c\u80fd\u591f\u66f4\u5feb\u5730\u8bbe\u8ba1\u6216\u53d1\u73b0\u75ab\u82d7\u5e76\u6cbb\u6108\u75be\u75c5\u3002\u53ef\u80fd\u6027\u662f\u65e0\u9650\u7684\u3002\u53d8\u9769\u6027\u6280\u672f\u5c06\u771f\u6b63\u89e3\u51b3\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u66f4\u7f8e\u597d\u7684\u95ee\u9898\u3002\u6211\u76f8\u4fe1\u673a\u5bc6\u8ba1\u7b97\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5b83\u5c06\u4f1a\u4e5f\u5e94\u8be5\u6210\u4e3a\u6bcf\u4e2a\u4f01\u4e1a\u4e91\u90e8\u7f72\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u76ee\u6807\uff0c\u9700\u8981\u5171\u540c\u52aa\u529b\u6765\u63a8\u52a8\u6280\u672f\u7684\u53d1\u5c55\u3002\u73b0\u5728\uff0c\u662f\u65f6\u5019\u5f00\u59cb\u4e00\u8d77\u89e3\u9501\u5404\u79cd\u53ef\u80fd\u6027\u4e86\u3002\n\u73b0\u5728\u5c31\u6ce8\u518c\u4eca\u5e74\u7684\u5168\u865a\u62df\u9ed1\u5e3d\u7f8e\u56fd\uff0c\u5b9a\u4e8e8\u67081\u65e5\u81f36\u65e5\u4e3e\u884c\uff0c\u5e76\u5728\u9ed1\u5e3d\u7f51\u7ad9\u4e0a\u83b7\u5f97\u66f4\u591a\u5173\u4e8e\u8fd9\u4e00\u6d3b\u52a8\u7684\u4fe1\u606f\u3002\u5355\u51fb\u67e5\u770b\u4f1a\u8bae\u4fe1\u606f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u6ce8\u518c\u3002", "note_en": "Confidential Computing is a transformational technology that should be part of every enterprise cloud deployment. It&#39;s time to start unlocking the possibilities together.  When the Internet was first built, engineers were focused on getting it up and running, and functionality took precedence over protection. But when nefarious actors started to emerge, many pioneers across the industry came together to add more layers of defense. Encryption was used more widely, and the Internet became more secure.\n We&#39;ve come a long way since those early days of the Internet when email showed up as an ARPANET project. It opened up new possibilities; mailing lists such as Sci-Fi Lovers and Yum Yum for restaurant reviews were created. Spam followed not very long after when someone from Digital Equipment Corporation sent out a job posting. Email is now ubiquitous, and organizations are now embracing technologies such as the Internet of Things and artificial intelligence. Cloud computing has entered the mainstream as organizations modernize their technology infrastructure, using the cloud to make fast changes, optimize costs, and get ready for the future. However, as cloud usage explodes, security can&#39;t be an afterthought. Security must be woven into the cloud computing fabric.\n The Next Frontier of Data Protection  I believe that cloud computing will increasingly shift to private, encrypted services where users can be confident that their software and data are not being exposed to cloud providers or unauthorized actors inside their own organizations. This approach will foster innovation, allowing organizations to adopt the latest cloud technologies and alleviate concerns when it comes to data privacy and compliance.\n When organizations, especially those in regulated industries, are ready to move workloads to the cloud, one of the biggest challenges is how to process sensitive data while still keeping it private. However, when data is being processed, there hasn&#39;t been an easy solution to keep it encrypted. Now there is. Confidential Computing is a breakthrough technology that encrypts data in use, while it is being processed.\n Under the hood, Confidential Computing environments keep data encrypted in memory, and elsewhere outside the CPU. Data is decrypted within the CPU boundary by memory controllers using embedded hardware keys that a cloud provider does not have access to. It is a way for organizations to process data in the cloud while preserving confidentiality. A few weeks back, Google Cloud introduced our first Confidential Computing product called Confidential VMs. We are excited to offer this level of security and isolation while giving customers a simple, easy-to-use option that doesn&#39;t compromise on performance.\n A United Approach  My role as a technologist is to try to be helpful, to provide clear explanations for how emerging technologies work, to responsibly inform policy developers and ensure their policies are implementable. I have learned that it&#39;s imperative that we work together to accelerate the adoption and acceptance of technology that moves us forward as a society.\n Cloud providers, hardware manufacturers, and software vendors all need to work together to define standards to advance Confidential Computing. This is why Google was among the founding members of the Confidential Computing Consortium, operating under the umbrella of the Linux Foundation to facilitate adoption of Confidential Computing. We&#39;ve joined forces with Intel, Microsoft, Red Hat, VMware, and others to shape technical and regulatory standards and support the development and adoption of open source tools. This is an encouraging start. It is only through sustained industry collaboration that the true potential of Confidential Computing will be realized.\n Imagine being able to collaborate on genomic research in the cloud across geographies, across competitors, all while preserving privacy of confidential health records. Imagine being able to more quickly design or discover vaccines and to cure diseases as a result of secure collaboration. The possibilities are endless. Transformational technologies will truly solve problems that will make our lives better. I believe Confidential Computing is one of them. It will and should be a part of every enterprise cloud deployment. This is an ambitious goal that requires collaborative efforts to advance the technology. Now, it&#39;s time to start unlocking the possibilities together.\n   Register now for this year&#39;s fully virtual Black Hat USA, scheduled to take place August 1\u20136, and get more information about the event on the Black Hat website. Click for details on  conference information\u00a0and  to register.", "posttime": "2020-08-07 18:03:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u8ba1\u7b97,computing,\u6280\u672f", "title": "\u4e3a\u4ec0\u4e48\u4fdd\u5bc6\u8ba1\u7b97\u4f1a\u6539\u53d8\u6e38\u620f\u89c4\u5219", "title_en": "Why Confidential Computing Is a Game Changer", "transed": 1, "url": "https://www.darkreading.com/cloud/why-confidential-computing-is-a-game-changer/a/d-id/1338510", "via": "", "real_tags": ["\u6e38\u620f", "\u8ba1\u7b97", "computing", "\u6280\u672f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016850, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7ae0\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528REBOL Shell\u63a5\u53e3\u6267\u884c\u7a0b\u5e8f\u548cShell\u547d\u4ee4\uff0c\u4ee5\u53ca\u91cd\u5b9a\u5411\u547d\u4ee4\u8f93\u5165\u548c\u8f93\u51fa\u3002\nShell\u662f\u4e00\u4e2a\u64cd\u4f5c\u73af\u5883\u3002\u5b83\u4f7f\u7528\u6237\u80fd\u591f\u4e0e\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u3001\u6267\u884c\u548c\u63a7\u5236\u7a0b\u5e8f\u3002\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e0d\u540c\uff0cshell\u5dee\u522b\u5f88\u5927\u3002\n\u5916\u58f3\u754c\u9762\u4f7fREBOL\u80fd\u591f\u4e0e\u5916\u58f3\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u901a\u4fe1\u3002Shell\u63a5\u53e3\u4f7f\u7528\u8c03\u7528\u51fd\u6570\u6765\u6267\u884c\u5185\u7f6e\u547d\u4ee4\u6216\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5185\u7f6e\u547d\u4ee4\u548c\u7a0b\u5e8f\u4e5f\u79f0\u4e3ashell\u547d\u4ee4\u3002(\u5728\u672c\u7ae0\u4e2d\uff0c\u672f\u8bedshell\u547d\u4ee4\u6307\u7684\u662f\u5185\u7f6e\u547d\u4ee4\u548c\u7a0b\u5e8f\u3002)\u3002\n\u5728Unix\u548cWindows\u4e2d\uff0c\u4f7f\u7528Shell\u754c\u9762\uff0c\u53ef\u4ee5\u4ece\u6587\u4ef6\u3001URL\u3001\u7aef\u53e3\u3001\u5b57\u7b26\u4e32\u503c\u6216REBOL\u63a7\u5236\u53f0\u91cd\u5b9a\u5411\u5230Shell\u547d\u4ee4\u7684\u8f93\u5165\u3002Shell\u547d\u4ee4\u7684\u6b63\u5e38\u548c\u9519\u8bef\u8f93\u51fa\u90fd\u53ef\u4ee5\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u3001URL\u3001\u7aef\u53e3\u3001\u5b57\u7b26\u4e32\u503c\u6216REBOL\u63a7\u5236\u53f0\u3002\n\u4f7f\u7528CALL\u51fd\u6570\u6267\u884cshell\u547d\u4ee4\u3002\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86CALL\u51fd\u6570\u7684\u8bed\u6cd5\uff1a\nCALL\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9ashell\u547d\u4ee4\u53ca\u5176\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u6216\u5757\u3002\n\u5728\u672c\u4f8b\u4e2d\uff0ccall\u6267\u884cUnix\u6587\u4ef6\u590d\u5236\u547d\u4ee4cp\uff0c\u5e76\u4f20\u9012\u4e24\u4e2a\u6587\u4ef6\u53c2\u6570\uff1aSoure.txt\u548cdest.txt\u3002\u5728\u8ba1\u7b97call\u65f6\uff0c\u5b57\u7b26\u4e32\u88ab\u8f6c\u6362\u4e3ashell\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u8c03\u7528cp\u5e76\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\u3002\u7ed3\u679c\u662f\u5c06Soure.txt\u6587\u4ef6\u590d\u5236\u5230dest.txt\u6587\u4ef6\u3002\n\u5982\u679c\u8981\u5728\u5bf9shell\u547d\u4ee4\u7684\u8c03\u7528\u4e2d\u5305\u62ecREBOL\u503c\uff0c\u8bf7\u5c06\u5757\u53c2\u6570\u4e0eCALL\u4e00\u8d77\u4f7f\u7528\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff1a\n\u5728\u672c\u4f8b\u4e2d\uff0c\u4f7f\u7528\u5757\u503c\u8c03\u7528cp\u547d\u4ee4\u6765\u4f20\u9012\u53c2\u6570Soure.txt\u548cdest.txt\u3002\u5fc5\u987b\u51cf\u5c11\u5757\uff0c\u8c03\u7528\u51fd\u6570\u624d\u80fd\u83b7\u5f97source\u548cdest\u53d8\u91cf\u5f15\u7528\u7684\u6587\u4ef6\u540d\u3002\nCALL\u51fd\u6570\u5c06\u5757\u4e2d\u7684\u6587\u4ef6\u540d\u8f6c\u6362\u4e3ashell\u4f7f\u7528\u7684\u8868\u793a\u6cd5\u3002\u4f8b\u5982\uff0c\u53c2\u6570\u3002\n\u4f7f\u8c03\u7528\u7b49\u5f85shell\u547d\u4ee4\u7684\u8fd4\u56de\u7801\u3002\u7136\u540e\uff0c\u8c03\u7528\u51fd\u6570\u5c06shell\u547d\u4ee4\u7684\u8fd4\u56de\u7801\u8fd4\u56de\u7ed9REBOL\u7a0b\u5e8f\u3002\n\u4ec5\u9650Windows\u548cUnix\uff1a\u5c06\u5b57\u7b26\u4e32\u3001\u6587\u4ef6\u3001\u7aef\u53e3\u548cURL\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u91cd\u5b9a\u5411\u5230shell\u547d\u4ee4\u3002\n\u4ec5\u9650Windows\u548cUnix\uff1a\u5c06shell\u547d\u4ee4\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u5b57\u7b26\u4e32\u3001\u6587\u4ef6\u3001\u7aef\u53e3\u6216URL\u3002\n\u4ec5\u9650Windows\uff1a\u5f3a\u5236\u4f7f\u7528\u5916\u58f3\u3002(\u56e0\u4e3a\u5728Windows\u4e2d\uff0c\u4f7f\u7528CALL\u542f\u52a8\u7684\u7a0b\u5e8f\u901a\u5e38\u4e0d\u4f1a\u4eceshell\u8fd0\u884c\uff0c\u800c\u662f\u76f4\u63a5\u4ece\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u3002)\u3002\n\u4ec5\u9650Windows\u548cUnix\uff1a\u5c06shell\u547d\u4ee4\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u5b57\u7b26\u4e32\u3001\u6587\u4ef6\u3001\u7aef\u53e3\u6216URL\u3002\u770b\u89c1\u3002\n\u4ec5\u9650Windows\u548cUnix\uff1a\u5c06shell\u547d\u4ee4\u7684\u6240\u6709\u8f93\u5165\u548c\u8f93\u51fa\u91cd\u5b9a\u5411\u5230REBOL\u63a7\u5236\u53f0\u3002\u8fd9\u4f7f\u63a7\u5236\u53f0\u80fd\u591f\u76f4\u63a5\u4e0eshell\u547d\u4ee4\u4ea4\u4e92\u3002\u770b\u89c1\n\u5f53REBOL\u4f7f\u7528shell\u6267\u884cshell\u547d\u4ee4\u65f6\uff0c\u53ef\u4ee5\u5728call\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\u4e2d\u4f7f\u7528shell\u7279\u6027\u3002\u5916\u58f3\u529f\u80fd\u5305\u62ec\u91cd\u5b9a\u5411\u548c\u6269\u5c55\u7b26\u53f7\u3002\u8fd9\u4e9b\u7b26\u53f7\u662f\u6700\u5e38\u89c1\u7684\uff1a\n&lt\uff1b\u6807\u51c6\u8f93\u5165(Stdin)&gt\uff1b\u6807\u51c6\u8f93\u51fa(Stdout)|\u7ba1\u9053\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u547d\u4ee4*\u901a\u914d\u7b26\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff1f\u5339\u914d\u4efb\u4f55\u5355\u4e2a\u5b57\u7b26\u3002\n\u5728Unix\u4e2d\uff0cREBOL\u8bed\u8a00\u4f7f\u7528shell\u8c03\u7528\u6240\u6709\u547d\u4ee4\u3002\u6700\u5e38\u89c1\u7684Unix shell\u6709bsh(Bourne Shell)\u3001csh(C Shell)\u3001ksh(Korn Shell)\u548cbash\u3002\nUnix shell\u73af\u5883\u53d8\u91cf\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2ashell rebol\u6765\u6267\u884c\u547d\u4ee4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5f53\u524d\u4f7f\u7528\u7684shell\u7684\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5982\u679cREBOL\u662f\u4eceC shell\u542f\u52a8\u7684\uff0c\u5219shell\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4e3aC shell\u7684\u8def\u5f84\u3002\u56e0\u4e3a\u6240\u6709Unix shell\u90fd\u652f\u6301-c\u9009\u9879\uff0c\u8be5\u9009\u9879\u4f1a\u5bfc\u81f4shell\u5728\u547d\u4ee4\u6267\u884c\u540e\u9000\u51fa\uff0c\u6240\u4ee5REBOL\u5728\u8c03\u7528Unix\u7a0b\u5e8f\u65f6\u4f1a\u81ea\u52a8\u4f7f\u7528\u8be5\u9009\u9879\u3002\nREBOL\u901a\u5e38\u7ed5\u8fc7shell\u76f4\u63a5\u8c03\u7528Windows\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u5728CALL\u547d\u4ee4\u4f20\u9012\u7684\u53c2\u6570\u4e2d\u4f7f\u7528Windows\u5916\u58f3\u529f\u80fd(\u5982\u91cd\u5b9a\u5411\u548c\u6269\u5c55\u7b26\u53f7)\u3002\u4f46\u662f\uff0c\u5f53\u6267\u884c\u5185\u7f6e\u7684Windows shell\u547d\u4ee4\u6216DOS\u7a0b\u5e8f\u65f6\uff0cREBOL\u4f7f\u7528shell\u3002\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0cREBOL\u8c03\u7528\u547d\u4ee4shell\u547d\u4ee4.com(Windows)\u6216cmd.exe(Windows NT)\u3002\u8c03\u7528Windows shell\u547d\u4ee4\u65f6\uff0crebol\u4f1a\u81ea\u52a8\u4f7f\u7528/c\u5f00\u5173\uff0c\u8be5\u5f00\u5173\u4f1a\u5bfc\u81f4shell\u5728\u6267\u884c\u547d\u4ee4\u540e\u9000\u51fa\u3002\n\u5f53\u8c03\u7528shell\u547d\u4ee4\u65f6\uff0c\u5b83\u4eec\u901a\u5e38\u4f5c\u4e3a\u5355\u72ec\u7684\u8fdb\u7a0b\u4e0eREBOL\u5e76\u884c\u8fd0\u884c\u3002\u5b83\u4eec\u4e0eREBOL\u662f\u5f02\u6b65\u7684\u3002\n\u4f46\u662f\uff0c\u6709\u65f6\u60a8\u9700\u8981\u7b49\u5f85shell\u547d\u4ee4\u5b8c\u6210\uff0c\u4f8b\u5982\u5f53\u60a8\u6267\u884c\u591a\u4e2ashell\u547d\u4ee4\u65f6\u3002\u6b64\u5916\uff0c\u6bcf\u4e2ashell\u547d\u4ee4\u90fd\u6709\u4e00\u4e2a\u8fd4\u56de\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u901a\u5e38\u6307\u793a\u547d\u4ee4\u7684\u6210\u529f\u6216\u5931\u8d25\u3002\u901a\u5e38\uff0cshell\u547d\u4ee4\u5728\u6210\u529f\u65f6\u8fd4\u56de\u96f6\uff0c\u5728\u4e0d\u6210\u529f\u65f6\u8fd4\u56de\u975e\u96f6\u503c\u3002\n/WAIT\u7ec6\u5316\u5bfc\u81f4\u8c03\u7528\u51fd\u6570\u7b49\u5f85\u547d\u4ee4\u7684\u8fd4\u56de\u7801\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9REBOL\u7a0b\u5e8f\u3002\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u4ee3\u7801\u9a8c\u8bc1\u547d\u4ee4\u662f\u5426\u6210\u529f\u6267\u884c\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff1a\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cCall\u6210\u529f\u6267\u884c\u4e86Windows dir\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u7531\u96f6\u8fd4\u56de\u503c\u8868\u793a\u3002\u4f46\u662f\uff0c\u5728\u4e0b\u4e00\u4e2a\u793a\u4f8b\u4e2d\uff0ccall\u5728\u6267\u884cxcopy\u547d\u4ee4\u65f6\u5931\u8d25\uff0c\u8fd4\u56de\u503c\u4e0d\u662f\u96f6\u3002\n\u5f53\u60a8\u4f7f\u7528/INPUT\u3001/OUTPUT\u3001/ERROR\u6216/CONSOLE\u4f18\u5316\u65f6\uff0c\u60a8\u4f1a\u81ea\u52a8\u8bbe\u7f6e/WAIT\u4f18\u5316\u3002", "note_en": "This chapter describes how to use the  REBOL Shell Interface to execute programs and shell commands and redirect command input and output.\n A shell is an operating environment. It enables users to communicate with, execute, and control programs and the operating system. Shells vary widely depending on the operating system.\n The Shell Interface enables REBOL to communicate with shell programs and the operating system. The Shell Interface uses the CALL function to execute built-in commands or programs. These built-in commands and programs are also known as shell commands. (In this chapter, the term shell command refers to both built-in commands and programs.)\n With the Shell Interface, in Unix and Windows, input to a shell command can be redirected from a file, URL, port, string value, or the REBOL console. Both normal and error output from a shell command can be redirected to a file, URL, port, string value, or the REBOL console.\n   Use the CALL function to execute a shell command. The syntax of the CALL function is shown in the following example:\n  The CALL function accepts one argument, which can be a string or a block specifying a shell command and its arguments.\n   In this example, CALL executes the Unix file copy command, cp, and passes two file arguments, source.txt and dest.txt. When CALL is evaluated, the string is translated into a shell command that calls cp and passes the two arguments. The result is the source.txt file being copied to the dest.txt file.\n Use a block argument with CALL when you want to include REBOL values in the call to a shell command, as shown in the following example:\n  In this example, the cp command is called using a block value to pass the arguments source.txt and dest.txt. The block must be reduced for the CALL function to obtain the file names referred to by the source and dest varaibles.\n The CALL function translates the file names in a block to the notation used by the shell. For example, the argument\n       Causes CALL to wait for a shell command&#39;s return code. The CALL function then returns the shell command&#39;s return code to the REBOL program.\n Windows and Unix only: redirects string, file, port, and URL data as input to a shell command.\n Windows and Unix only: redirects shell command output to a string, file, port, or URL.\n Windows Only: Forces the use of a shell. (Because in Windows, programs started with CALL are not normally run from a shell, but are launched directly from the operating system.)\n Windows and Unix only: redirects shell command errors to a string, file, port, or URL. See\n Windows and Unix only: redirects all input and output of a shell command to the REBOL console. This enables the console to directly interact with a shell command. See\n  When REBOL uses a shell to execute a shell command, shell features can be used in the arguments passed by the CALL function. Shell features include redirection and expansion symbols. These symbols are the most common:\n &lt; standard input (stdin)&gt; standard output (stdout)| pipe output to another command* wildcard to match zero or more characters? match any single character\n In Unix, the REBOL language calls all commands using a shell. The most common Unix shells are bsh (Bourne Shell), csh (C Shell), ksh (Korn Shell), and bash.\n The Unix SHELL environment variable determines which shell REBOL uses to execute a command. By default, the environment variable is set to the path of the shell currently in use. For example, if REBOL is started from the C shell, the SHELL environment variable is set to the path for the C shell. Because all Unix shells support the -c option, which causes the shell to exit after a command executes, REBOL automatically uses this option when calling a Unix program.\n REBOL normally calls Windows programs directly, bypassing the shell. Consequently, Windows shell features, such as redirection and expansion symbols, cannot be used in the arguments passed by the CALL command. However, when executing built-in Windows shell commands or DOS programs, REBOL uses the shell. When this happens, REBOL calls the command shell command.com (Windows) or cmd.exe (Windows NT). When calling a Windows shell command, REBOL automatically uses the /c switch, which causes the shell to exit after executing a command.\n  When shell commands are called, they normally run as a separate process in parallel with REBOL. They are asynchronous to REBOL.\n However, there are times when you want to wait for a shell command to finish, such as when you are executing multiple shell commands. In addition, every shell command has a return code, which normally indicates the success or failure of the command. Typically, a shell command returns zero when it is successful and a non-zero value when it is unsuccessful.\n The /wait refinement causes the CALL function to wait for a command&#39;s return code and return it to the REBOL program. You can then use the return code to verify that a command executed successfully, as shown in the following example:\n  In the above example, CALL successfully executes the Windows dir command, which is indicated by the zero return value. However, in the next example, CALL is unsuccessful at executing the xcopy command, which is indicated by the return value other than zero.\n  When you use the /input, /output, /error, or /console refinements you automatically set the /wait refinement.", "posttime": "2020-08-07 18:01:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5916\u58f3,shell", "title": "REBOL\u5916\u58f3\u754c\u9762", "title_en": "REBOL Shell Interface", "transed": 1, "url": "http://www.rebol.com/docs/shell.html", "via": "", "real_tags": ["\u5916\u58f3", "shell"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016849, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f\u6211\u5df2\u7ecf\u5de5\u4f5c\u4e86\u51e0\u5e74\u7684\u96f6\u7801\u5934\u9879\u76ee\u7684\u53e6\u4e00\u4e2a\u8fed\u4ee3\u3002\u5bf9\u4e8e\u90a3\u4e9b\u8fd8\u6ca1\u6709\u89c1\u8fc7\u5b83\u4eec\u7684\u4eba\uff0c\u6211\u4e00\u76f4\u5728\u52aa\u529b\u8bbe\u8ba1\u4e00\u53f0\u6700\u5b9e\u7528\u7684PI Zero\u8ba1\u7b97\u673a\u3002\n\u8fd9\u4e2a\u7248\u672c\u4e0e\u4ee5\u524d\u7684\u7248\u672c\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u66f4\u6ce8\u91cd\u6a21\u5757\u5316\uff0c\u5e76\u4e14\u653e\u5f03\u4e86\u6807\u51c6\u952e\u76d8\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\uff0c\u7a0d\u540e\u6211\u5c06\u5411\u60a8\u5c55\u793a\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u521b\u9020\u4e00\u4e9b\u975e\u5e38\u591a\u624d\u591a\u827a\u7684\u4e1c\u897f\uff0c\u5141\u8bb8\u5404\u79cd\u7528\u4f8b\u6765\u91ca\u653eZero\u7684\u6f5c\u529b\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5427\u3002\n\u4f60\u9996\u5148\u4f1a\u6ce8\u610f\u5230\u7684\u662f\uff0c\u8fd9\u6b3e\u8bbe\u5907\u770b\u8d77\u6765\u6709\u70b9\u50cf\u4e00\u90e8\u80d6\u4e4e\u4e4e\u7684\u667a\u80fd\u624b\u673a\u3002\u8fd9\u662f\u56e0\u4e3a\u6574\u4e2a\u4ea7\u54c1\u57fa\u672c\u4e0a\u90fd\u662f\u56f4\u7ed5WaveShare AMOLED5.5&1080p\u89e6\u6478\u5c4f(https://www.waveshare.com/5.5inch-HDMI-AMOLED.htm).\u8bbe\u8ba1\u7684\u3002\n\u8fd9\u4e2a\u4e1c\u897f\u6700\u521d\u662f\u4e3a\u8986\u76c6\u5b50Pi&#4\u76843\u548c4\u8bbe\u8ba1\u7684\uff0c\u4f46\u6211\u521b\u5efa\u4e86\u4e00\u5806\u5b9a\u5236\u7684\u9002\u914d\u5668\uff0c\u53ef\u4ee5\u8ba9\u4f60\u8f6c\u800c\u8fde\u63a5Pi Zero\u3002\u66f4\u591a\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u6d88\u606f\u9a6c\u4e0a\u5c31\u4f1a\u516c\u5e03\u3002\n\u5728\u5916\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u5404\u79cd\u5404\u6837\u7684\u7aef\u53e3\u548c\u6309\u94ae\uff0c\u5305\u62ec\u4e00\u4e2a\u5168\u5c3a\u5bf8\u7684USB2.0\u7aef\u53e3\uff0c\u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684Micro SD\u63d2\u5ea7\uff0c\u7528\u4e8e\u5145\u7535\u7684\u5fae\u578bUSB\u548c\u4e00\u4e2a\u7535\u6e90\u5f00\u5173\u3002\n\u4fa7\u9762\u6709\u4e00\u4e2a\u8033\u673a\u63d2\u5b54\uff0c3\u4e2a\u53ef\u7f16\u7a0b\u6309\u94ae\u8fde\u63a5\u5230Zeros GPIO\u5f15\u811a\u4e0a\u3002\u4f60\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u8bbe\u7f6e\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u65cb\u8f6c\u5c4f\u5e55\uff0c\u4e0a\u4e0b\u97f3\u91cf\uff0c\u6216\u8005\u4e00\u6b21\u6309\u4e0b\u5c31\u542f\u52a8\u5176\u4ed6\u81ea\u5b9a\u4e49\u811a\u672c\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5728\u9876\u7aef\u6709\u53e6\u4e00\u4e2a\u6309\u94ae\uff0c\u53ef\u4ee5\u5173\u95ed\u548c\u6253\u5f00\u663e\u793a\u5c4f\uff0c\u5e2e\u52a9\u5ef6\u957f1200mAh\u7684Lipoo\u7535\u6c60\u5bff\u547d\uff0c\u540e\u9762\u8fd8\u6709\u4e00\u4e2a\u9690\u85cf\u7740\u5c0f\u626c\u58f0\u5668\u7684\u70e4\u67b6\u3002\n\u8bbe\u5907\u7684\u80cc\u9762\u662f\u6240\u6709\u6f5c\u529b\u6240\u5728\u7684\u5730\u65b9\u3002\u8fd9\u5305\u62ec2\u4e2a\u8fde\u63a5\u5230GPIO\u5f15\u811a\u3001\u89c6\u9891\u8f93\u51fa\u3001\u6444\u50cf\u5934\u8fde\u63a5\u5668\u30012x USB\u7aef\u53e3\u3001\u7535\u6e90\u6307\u793a\u706f\u7b49\u768440\u9488\u63d2\u5ea7\u3002\u5176\u60f3\u6cd5\u662f\u5141\u8bb8\u4eba\u4eec\u521b\u5efa\u548c\u6dfb\u52a0\u81ea\u5b9a\u4e49\u80cc\u5305\uff0c\u4ee5\u6839\u636e\u4ed6\u4eec\u7684\u9700\u8981\u66f4\u6539\u529f\u80fd\u3002\n\u4e3a\u4e86\u5728\u5c3d\u53ef\u80fd\u5c0f\u7684\u7a7a\u95f4\u5185\u5c06Zero\u8fde\u63a5\u5230\u663e\u793a\u5668\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3bPCB\u548c\u4e00\u4e9b\u8f83\u5c0f\u7684\u9002\u914d\u5668PCB\u3002\nZero\u672c\u8eab\u88ab\u62e7\u5230\u7535\u8def\u677f\u4e0a\uff0c\u5e76\u901a\u8fc7GPIO\u5f15\u811a\u76f4\u63a5\u710a\u63a5\u5230\u7535\u8def\u677f\u4e0a\u3002\u8be5\u4e3b\u677f\u5305\u542b\u4e00\u4e2aUSB\u96c6\u7ebf\u5668\u3001\u7535\u6e90\u7535\u8def\u3001\u97f3\u9891\u653e\u5927\u5668\u3001\u626c\u58f0\u5668\u3001\u6309\u94ae\u3001\u8033\u673a\u63d2\u5b54\uff0c\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u7528\u4e8e\u81ea\u5b9a\u4e49\u901a\u77e5\u7684\u632f\u52a8\u9a6c\u8fbe\u3002\n\u6709\u4e00\u4e2a\u63d2\u5165Zero\u7684\u5fae\u578bSD\u5361\u63d2\u677f\uff0c\u5b83\u6269\u5c55\u4e86\u5361\u63d2\u5ea7\uff0c\u540c\u65f6\u4e5f\u4e3a\u8bbe\u5907\u5e95\u90e8\u7684\u5176\u4ed6\u7aef\u53e3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6846\u67b6\u3002\nWaveshare\u663e\u793a\u5c4f\u5df2\u7ecf\u6709\u4e00\u4e9b\u5b89\u88c5\u87ba\u9489\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u56fa\u5b9a\u4e3b\u677f\u3002\u6709\u4e00\u4e2a\u8fde\u63a5\u663e\u793a\u5668\u548c\u4e3b\u677f\u7684\u5c0f\u6807\u9898\u90e8\u5206\uff0c\u60a8\u53ea\u9700\u5c06\u6240\u6709\u4e1c\u897f\u62e7\u5728\u4e00\u8d77\u5373\u53ef\u3002\u6211\u5728\u8fd9\u5757\u677f\u4e0a\u52a0\u4e866\u4e2a\u87ba\u7eb9\u63d2\u5165\u7269\uff0c\u4f7f\u4e0d\u540c\u7684\u7bb1\u5b50\u8fde\u63a5\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\u3002\nZero\u6807\u51c6\u53ea\u67091\u4e2aUSB\u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u5728\u4e3b\u677f\u4e0a\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5c0f\u578bUSB\u96c6\u7ebf\u5668\u7535\u8def\uff0c\u4f7f\u7528\u7b80\u5355\u7684FE1.1S\u82af\u7247\u3002\u8fd9\u5c06USB\u7aef\u53e3\u5206\u62104\u4e2a\u5355\u72ec\u7684\u6d41\uff0c\u5bf9\u4e8e\u9f20\u6807\u548c\u952e\u76d8\u7b49\u529f\u8017\u8f83\u4f4e\u7684\u8bbe\u5907\u4ee5\u53ca\u663e\u793a\u5668\u7684\u89e6\u6478\u5c4f\u529f\u80fd\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\u60a8\u53ef\u80fd\u9700\u8981\u8fde\u63a5\u5916\u90e85V\u7ebf\uff0c\u4ee5\u83b7\u5f97\u66f4\u8017\u7535\u7684\u5916\u56f4\u8bbe\u5907\u3002\n\u6211\u7279\u522b\u559c\u6b22HDMI\u9002\u914d\u5668\uff0c\u5b83\u5c06\u663e\u793a\u5668\u4e0a\u7684\u5168\u5c3a\u5bf8HDMI\u7aef\u53e3\u8fde\u63a5\u5230Zero\u7684\u8ff7\u4f60HDMI\u7aef\u53e3\u3002\u6211\u7ede\u5c3d\u8111\u6c41\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6765\u7814\u7a76\u5982\u4f55\u4ee5\u5c3d\u53ef\u80fd\u5c0f\u7684\u65b9\u5f0f\u8fde\u63a5\u8fd9\u4e9b\u7ec4\u4ef6\uff0c\u7ed3\u679c\u53d1\u73b0\uff0c\u4f7f\u7528\u4e24\u4e2a\u5939\u5728\u4e00\u8d77\u7684\u8584PCB\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u710a\u63a5\u5230HDMI-A\u63d2\u5934\u7ec4\u4ef6\u548c\u8f83\u5c0f\u7684\u8ff7\u4f60HDMI\u63d2\u5934\uff0cHDMI-A\u63d2\u5934\u7ec4\u4ef6\u9700\u89811.6 mm\u7684PCB\uff0c\u800c\u8f83\u5c0f\u7684\u8ff7\u4f60HDMI\u63d2\u5934\u53ea\u9700\u89811 mm\u7684\u7535\u8def\u677f\u3002\n\u52a8\u529b\u90e8\u5206\u662f\u6211\u9047\u5230\u9ebb\u70e6\u7684\u5730\u65b9\u3002\u5b83\u662f\u57fa\u4e8ePowerBoost 1000C\u7684\u8bbe\u8ba1\uff0c\u5e94\u8be5\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5\u5728\u4e3b\u677f\u4e0a\uff0c\u4f46\u6709\u51e0\u4e2a\u5c0fIC\u592a\u9ebb\u70e6\u4e86\uff0c\u6211\u65e0\u6cd5\u624b\u5de5\u710a\u63a5\uff0c\u5728\u5236\u4f5c\u8fd9\u6bb5\u89c6\u9891\u4e4b\u524d\uff0c\u6211\u628a\u5b83\u4eec\u5f04\u574f\u4e86\u3002\u6211\u672c\u6765\u53ea\u4f1a\u5305\u62ecPowerBoost\u8463\u4e8b\u4f1a\u672c\u8eab\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u90a3\u91cc\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u4fbf\u5b9c\u7684\u901a\u7528\u5145\u7535\u5347\u538b\u677f\uff0c\u8fd9\u5bf9\u8fd9\u4e2a\u539f\u578b\u6765\u8bf4\u5f88\u597d\uff0c\u4f46\u6ca1\u6709\u6240\u6709\u7684\u989d\u5916\u529f\u80fd\uff0c\u6bd4\u5982\u7535\u6c60\u7535\u91cf\u4e0d\u8db3\u6307\u793a\u5668\uff0c\u4ee5\u53ca\u66f4\u597d\u7684\u7535\u6e90\u5f00\u5173\u7535\u8def\u3002\u8fd9\u5c06\u7528\u4e8e\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002\nZero\u6ca1\u6709\u6807\u914d\u97f3\u9891\uff0c\u4f46\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0cWaveshare\u663e\u793a\u5c4f\u786e\u5b9e\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u8033\u673a\u63d2\u5b54\uff0c\u53ef\u4ee5\u901a\u8fc7HDMI\u8fdb\u884c\u97f3\u9891\u3002\u6240\u4ee5\u6211\u60f3\u77e5\u9053\u6211\u662f\u5426\u5728\u8033\u673a\u63d2\u5b54\u7684\u5f15\u811a\u4e0a\u52a0\u4e86\u4e00\u4e2a\u97f3\u9891\u653e\u5927\u5668\u7535\u8def\uff0c\u6211\u662f\u5426\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u5c0f\u626c\u58f0\u5668\u4f9b\u7535\uff0c\u662f\u7684\uff0c\u5b83\u8d77\u4f5c\u7528\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u867d\u7136\u4e0d\u662f\u5f88\u597d\uff0c\u4f46\u662f\u5bf9\u4e8e\u50cf\u561f\u561f\u58f0\u548c\u901a\u77e5\u58f0\u97f3\u8fd9\u6837\u7684\u4e1c\u897f\u6765\u8bf4\uff0c\u5b83\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u867d\u7136\u901a\u8fc7\u8033\u673a\u542c\u8d77\u6765\u5f88\u68d2\uff0c\u800c\u4e14\u6211\u5728\u91cc\u9762\u52a0\u4e86\u6211\u81ea\u5df1\u7684\u63d2\u5b54\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u8868\u58f3\u5916\u9762\u63a5\u89e6\u5230\u4e86\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u63d2\u5b54\u6709\u4e00\u4e2a\u673a\u68b0\u5f00\u5173\uff0c\u9ed8\u8ba4\u4e3a\u626c\u58f0\u5668\uff0c\u6bcf\u5f53\u63d2\u51653.5 mm\u63d2\u5934\u65f6\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5207\u6362\u5230\u8033\u673a\u3002\n\u6b63\u5982\u6211\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u6211\u8ba4\u4e3a\u8fd9\u6b3e\u8bbe\u5907\u7684\u80cc\u5305\u529f\u80fd\u624d\u662f\u4f60\u771f\u6b63\u770b\u5230\u8fd9\u6b3e\u8bbe\u5907\u6f5c\u529b\u7684\u5730\u65b9\u3002\n\u6211\u53ef\u4ee5\u60f3\u8c61\u5404\u79cd\u4e0d\u540c\u7684\u80cc\u5305\u53ef\u4ee5\u6539\u53d8\u5b83\u7684\u529f\u80fd\u3002\u65e0\u7ebf\u7535\u6536\u53d1\u5668\u3001\u989d\u5916\u7684\u7f51\u7edc\u63a5\u53e3\u3001\u6e38\u620f\u63a7\u5236\u5668\u3001\u7535\u89c6\u8c03\u8c10\u5668\u3001\u592a\u9633\u80fd\u7535\u6c60\u677f\u548c\u7b80\u5355\u7684\u652f\u67b6\u90fd\u5f88\u5bb9\u6613\u505a\u5230\u3002\n\u6700\u9177\u7684\u662f\uff0c\u56e0\u4e3a\u5b83\u662f\u6a21\u5757\u5316\u7684\uff0c\u4f60\u53ef\u4ee5\u968f\u65f6\u66f4\u6362\u5b83\u4eec\u6765\u6539\u53d8\u529f\u80fd\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u628a\u952e\u76d8\u548c\u653e\u5927\u5668\u65e0\u7ebf\u7535\u6536\u53d1\u5668\u7ec4\u5408\u6362\u6210\u5206\u7ec4\u65e0\u7ebf\u7535\u4fe1\u4f7f\uff0c\u7136\u540e\u628a\u5b83\u6362\u6210microSD\u5361\u4e0a\u7684\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u6e38\u620f\u63a7\u5236\u5668\uff0c\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u4fbf\u643a\u7684\u4eff\u771f\u5668\u3002\n\u6211\u5236\u4f5c\u7684\u7b2c\u4e00\u4e2a\u539f\u578b\u80cc\u5305\u662f\u6ed1\u51fa\u5f0f\u952e\u76d8\u3002\u5f53\u60a8\u5c06\u5176\u4e0ei3\u7a97\u53e3\u7ba1\u7406\u5668\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u60a8\u5c31\u62e5\u6709\u4e86\u975e\u5e38\u9ad8\u6548\u7684\u624b\u6301\u5f0fLinux\u673a\u5668\u3002\u5373\u4f7fZero\u4e0d\u662f\u6700\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u7ec8\u7aef\u505a\u5f88\u591a\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5b83\u53ea\u5360\u7528\u4e86GUI\u7684\u4e00\u5c0f\u90e8\u5206\u8d44\u6e90\u3002\n\u8be5\u8bbe\u8ba1\u57fa\u4e8eBobricius\u5728Hackaday(hackaday.io/project/158454)\u63a8\u51fa\u7684\u5927\u8ff7\u4f60QWERTY\u952e\u76d8\uff0c\u5e76\u4f7f\u7528SAMD21\u82af\u7247\u5c06\u5176\u8f6c\u6362\u4e3aUSB\u8f93\u5165\u8bbe\u5907\u3002\n\u5b83\u662f\u75283\u4e2aPCB\u5c42\u5236\u4f5c\u7684\u3002\u9996\u5148\u662f\u5e95\u90e8\uff0c\u5b83\u5305\u542b\u7535\u5b50\u5143\u4ef6\u548c\u94a5\u5319\uff0c\u7136\u540e\u662f\u663e\u793a\u94a5\u5319\u6807\u7b7e\u7684\u76d6\u677f\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u8fde\u63a5\u5230\u7ec8\u7aef\u7684\u7535\u8def\u677f\u3002\u6ed1\u52a8\u673a\u6784\u75313D\u6253\u5370\u652f\u67b6\u548c\u5fae\u578b\u87ba\u9489\u7ec4\u6210\uff0c\u867d\u7136\u5b83\u786e\u5b9e\u53ef\u4ee5\u6ed1\u52a8\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\u624d\u80fd\u4f7f\u5176\u66f4\u575a\u56fa\u3002\u5e95\u5c42\u4f7f\u7528\u5c0f\u5f39\u7c27\u52a0\u8f7d\u9500\u8fde\u63a5\u5230\u9876\u90e8\u3002\u6211\u8fd8\u589e\u52a0\u4e86\u51e0\u4e2aLED\uff0c\u5f53\u4f60\u5904\u4e8e\u660f\u6697\u7684\u5149\u7ebf\u4e0b\u65f6\uff0c\u4f60\u53ef\u4ee5\u5f00\u5173\u5b83\u4eec\u3002\u6700\u540e\u4e00\u4e2a\u4e1c\u897f\u51fa\u4eba\u610f\u6599\u5730\u8584\uff0c\u53ea\u6709\u51e0\u6beb\u7c73\u6df1\u3002\n\u867d\u7136\u6211\u8ba4\u4e3a\u5b83\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u4f46\u6211\u8fd8\u6ca1\u6709\u8ba9\u5b83\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u548c\u9c8d\u52c3\u8c08\u8fc7\u8fd9\u4e2a\u8bbe\u8ba1\uff0c\u6211\u8ba4\u4e3a\u5b83\u5f88\u53ef\u9760\u3002\u95ee\u9898\u4f3c\u4e4e\u51fa\u5728\u6211\u7528\u6765\u5b89\u88c5\u56fa\u4ef6\u7684\u82af\u7247\u7f16\u7a0b\u5668\u4e0a\u3002\u8fd9\u662f\u4e00\u4e2a\u4fbf\u5b9c\u7684\uff0c\u4f3c\u4e4e\u7ed9\u6211\u9519\u8bef\u7684\u9a8c\u8bc1\u4fe1\u606f\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u4f1a\u660e\u767d\u5b83\u662f\u5982\u4f55\u8ba9\u96f6\u70b9\u7ec8\u7aef\u6210\u4e3a\u4e00\u4e2a\u76f8\u5f53\u65b9\u4fbf\u7684\u5c0f\u8bbe\u5907\u7684\u3002\n\u6211\u8fd8\u5236\u4f5c\u4e86\u53e6\u4e00\u4e2a\u5b9a\u5236\u7684\u8ff7\u4f60\u952e\u76d8\u652f\u67b6\uff0c\u8fd9\u4e00\u6b21\u4f7f\u7528\u7684\u662f\u56de\u6536\u7684Psion5MX\u952e\u76d8\uff0c\u5b83\u53ef\u80fd\u4ecd\u7136\u662f\u6709\u53f2\u4ee5\u6765\u8bbe\u8ba1\u7684\u6700\u597d\u7684\u5c0f\u952e\u76d8\u4e4b\u4e00\u3002\u6211\u7528\u4e86\u4e00\u4e2a\u9884\u5236\u7684Psion\u952e\u76d8\u6765\u8fde\u63a5USB\u9002\u914d\u5668\uff0c\u4f60\u53ef\u4ee5\u5728TIndie\u4e0a\u627e\u5230\uff0c\u800c\u4e14\u8fd9\u4e2a\u4e1c\u897f\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u4f60\u4e5f\u53ef\u4ee5\u8ba9\u4f60\u62e5\u6709\u5b83\u3002\n\u8fdb\u4e00\u6b65\u5f00\u53d1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6c\u63a5\u76d2\uff0c\u8ba9\u5b83\u53d8\u6210\u4e00\u53f0\u638c\u4e0a\u7535\u8111\uff0c\u5e26\u5de5\u4f5c\u94f0\u94fe\uff0c\u4e5f\u8bb8\u8fd8\u4f1a\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u4e8c\u6b21\u7535\u6c60\u548cUSB\u96c6\u7ebf\u5668\uff0c\u8fd9\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u7275\u5f3a\u3002\n\u6211\u5df2\u7ecf\u6ce8\u518c\u4e86ZeroTerminal.org\uff0c\u5b83\u76ee\u524d\u6b63\u91cd\u5b9a\u5411\u5230\u8fd9\u4e2a\u9875\u9762\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0c\u968f\u7740\u6211\u66f4\u65b0\u8bbe\u8ba1\uff0c\u6211\u60f3\u505a\u4e00\u4e2a\u7f51\u7ad9\u6765\u5e2e\u52a9\u5efa\u7acb\u8fd9\u4e2a\u5e73\u53f0\uff0c\u5411\u4eba\u4eec\u5c55\u793a\u5982\u4f55\u5236\u4f5c\u8fd9\u4e9b\u4e1c\u897f\uff0c\u5e76\u5c55\u793a\u5176\u4ed6\u7528\u6237\u521b\u5efa\u7684\u6240\u6709\u80cc\u5305\u548c\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u60f3\u91cd\u505a\u4e3bPCB\uff0c\u66f4\u6362\u4e00\u4e9b\u90e8\u4ef6\uff0c\u5982\u5783\u573e\u626c\u58f0\u5668\uff0c\u91cd\u65b0\u8bbe\u8ba1\u7535\u6e90\u7535\u8def\u7b49\uff0c\u751a\u81f3\u53ef\u80fd\u5c1d\u8bd5\u4f7f\u7528\u6811\u8393PI\u8ba1\u7b97\u6a21\u5757\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8bbe\u8ba1\u4e00\u5757\u5b9a\u5236\u7684\u663e\u793a\u677f\u4f1a\u8ba9\u4eba\u60ca\u53f9\u4e0d\u5df2\uff0c\u8fd9\u6837\u6574\u4e2a\u8bbe\u5907\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7f29\u5c0f\uff0c\u63a5\u8fd1\u667a\u80fd\u624b\u673a\u7684\u5927\u5c0f\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u5e0c\u671b\u4f60\u4f1a\u89c9\u5f97\u8fd9\u5f88\u6709\u8da3\u3002\u6211\u77e5\u9053\u6211\u5728\u8fd9\u65b9\u9762\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\uff0c\u6240\u4ee5\u6b22\u8fce\u4e13\u5bb6\u7684\u4efb\u4f55\u5efa\u8bae\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u5176\u4ed6\u4eba\u4f1a\u559c\u6b22\uff0c\u8bf7\u5206\u4eab\u8fd9\u4e2a\u89c6\u9891\u3002\u8c22\u8c22\uff0c\u6211\u4f1a\u5728\u4e0b\u4e00\u4e2a\u89c6\u9891\u4e2d\u89c1\u5230\u4f60\u3002\n\u8fd9\u4e2a\u9879\u76ee\u6700\u65e9\u51fa\u73b0\u5728Node Vol 02\u4e2d\uff0c\u8fd9\u662f\u6211\u4eec\u65b0\u7684\u72ec\u7acb\u7684180\u9875\u6742\u5fd7\uff0c\u91cc\u9762\u6324\u6ee1\u4e86\u5404\u79cd\u5f00\u653e\u7684\u786c\u4ef6\u548c\u5206\u6563\u7684\u8f6f\u4ef6\u9879\u76ee\u3002\u62ff\u4e00\u4efd\u786c\u62f7\u8d1d\uff0c\u6216\u4ece\u6742\u5fd7\u9875\u9762\u514d\u8d39\u4e0b\u8f7d\u3002", "note_en": "Here&#39;s another iteration on the Zero Terminal projects I&#39;ve been working on for a few years. For those of you who haven&#39;t seen them, I&#39;ve been trying to design the most usable all in one Pi Zero computer out there.\n  This version departs a little from the previous ones, as it is more focused on modularity, and forgoes a keyboard as standard, though it is possible to add one, as I&#39;ll show you in a bit. The goal here was to create something very versatile, allowing for all sorts of use cases to unlock the Zero&#39;s potential. Anyways, let&#39;s take a look at it.\n        The first thing you&#39;ll notice is that the device looks a little like a fat smartphone. That&#39;s because the entire thing is basically designed around the Waveshare AMOLED 5.5&#34; 1080p touchscreen (https://www.waveshare.com/5.5inch-HDMI-AMOLED.htm).\n  This thing was originally designed for the Raspberry Pi&#39;s 3 and 4, but I created a bunch of custom adaptors that let you hook up a Pi Zero instead. More on that in a minute.\n  Around the outside, you&#39;ll see various ports and buttons, including a full size USB 2.0 port, micro SD socket for the operating system, micro USB for charging and a power switch.\n  On the side there is a headphone jack, and 3 programmable buttons hooked up to the Zeros GPIO pins. You could set up all sorts of functions for these, like rotating the screen, volume up and down, or launching other custom scripts and applications with a single press.\n  On the top end is another button which turns the display off and on, helping stretch out the 1200mAh lipo battery life, and also a grill hiding a little speaker behind it.\n  The back of the device is where all the potential lies. This includes 2 40pin sockets which connect to both the GPIO pins, video out, camera connector, 2x USB ports, power indicators and more. The idea is to allow people to create and add custom backpacks to change the functionality, depending on their needs.\n    In order to connect the Zero to the display in the smallest possible space, I created a main PCB, and a few smaller adaptor PCBs.\n  The Zero itself is screwed onto the board and soldered directly to it via the GPIO pins. This main board contains a USB hub, power circuit, audio amp, speaker, buttons, headphone jack, and even a vibration motor for custom notifications.\n  There&#39;s a micro SD card board plugged into the Zero which extends the card socket, and also doubles as a frame for the other ports at the bottom of the device.\n  The Waveshare display already has some mounting screws, so securing the main board is easy. There&#39;s a little header section to connect the display to the main board, and you simply screw everything together. I included 6 threaded inserts onto this board to make attaching different cases simple too.\n  The Zero only has 1 USB port as standard, so I designed a little USB hub circuit on the main board, using the simple FE1.1S chip. This splits the USB port into 4 separate streams, and is good enough for lower consumption stuff like mice and keyboards, as well as the displays touchscreen capability. You&#39;d probably need to hook up external 5v lines for more power hungry peripherals.\n  I&#39;m particularly pleased with the HDMI adaptor, which connects the full size HDMI port on the display to the mini HDMI port of the Zero. I was wracking my brains for a long time on how to connect these in the smallest possible way, and it turns out using two thin PCBs sandwiched together allows this, since you can solder to both the HDMI-A plug component which takes a 1.6mm PCB, and the smaller Mini HDMI plug, which only takes up to 1mm boards.\n  The power section is something I had trouble with. It&#39;s based on the Powerboost 1000c design, and was supposed to fit directly onto the main board, but a couple of the small ICs where too fiddly for me to hand solder and I damaged them before making this video. I would have just included the Powerboost board itself, but unfortunately there&#39;s not enough room. Instead I used a cheap generic charge boost board, which is fine for this prototype, but doesn&#39;t have all the extra features such as low battery indicators, and a better power switch circuit. That&#39;ll be for the next iteration.\n  The Zero doesn&#39;t come with audio as standard, but thankfully the Waveshare display does have a built in headphone jack for audio through HDMI. So I wondered if I added an audio amp circuit to the pins on the headphone jack, whether I could power a small speaker, and yes it works. Unfortunately, not very well though, but it&#39;s good enough for stuff like bleeps and bloops for notification sounds.\n  Audio through the headphones sounds great though, and I added my own jack in there so it&#39;s accessible from the outside of the case. This particular jack has a mechanical switch which defaults to the speakers, and automatically switches to headphones whenever the 3.5mm plug is inserted.\n    As I previously mentioned, I think the backpack feature of this is where you really see the potential of the device.\n  I can imagine all sorts of different backpacks that could transform the functionality of this. Things like radio transceivers, extra network interfaces, games controllers, TV tuners, solar panels, and simple stands are all easily doable.\n  The cool thing is that since it&#39;s modular you can swap these on the fly to change the functionality, so say you could change between a keyboard &amp; radio transceiver combo for a packet radio messenger, then replace that with a different operating system on the micro SD card, and add a game controller to turn it into a portable emulator.\n  The first prototype backpack I have created is a slide-out keyboard. When you combine that with i3 window manager, you have quite the productive handheld Linux machine. Even though the Zero isn&#39;t the most powerful computer, you can still get a lot done through the terminal since it uses up a fraction of the resources that a GUI does.\n  The design is based on the great mini (Pi)QWERTY keyboard by Bobricius on Hackaday (hackaday.io/project/158454), and uses a SAMD21 chip to turn it into a USB input device.\n  It&#39;s made using 3 PCB layers. Firstly, the bottom, which contains the electronic components and keys, then a cover PCB which displays the key labels, then another board that connects all that to the terminal. The slide mechanism is made up of 3D printed supports and tiny screws, and while it does slide, it needs extra work to make it more robust. The bottom layer connects to the top using little spring loaded pins. I&#39;ve also added a couple of LEDs you can toggle on and off when you&#39;re in low light. The final thing is surprisingly thin, at only a few millimetres deep.\n  Although I think it looks good, I haven&#39;t gotten it working properly yet. I&#39;ve talked to Bob about the design, and I think it&#39;s solid. The problem appears to be with the chip programmer I&#39;m using to get the firmware onto it. It&#39;s one of the cheap ones, and seems to be giving me false verification messages. Anyways, you get the idea of how it could make the Zero Terminal a pretty handy little device.\n  I also created another custom mini keyboard stand, this time using a salvaged Psion 5MX keyboard, which is still probably one of the best small keyboards ever designed. I used a premade PSION keyboard to USB adaptor that you can find on Tindie, and the thing is open source so you can make you&#39;re own too.\n  It wouldn&#39;t be much of a stretch to go even further to develop a full adaptor case which would turn it into a Palmtop computer, with working hinge, and maybe a bigger secondary battery and USB hub.\n    I have registered ZeroTerminal.org, which is currently redirecting to this page. Over the next year, as I update the design, I want to make a website to help build up the platform, showing people exactly how to make these, and showcasing all the backpacks and custom apps other users create.\n  In the meantime I want to redo the main PCB, change up some components like the rubbish speaker, redesign the power circuit etc, maybe even experiment with using the Raspberry Pi Compute Module instead. Long term it&#39;d be amazing to design a custom display board, then the entire device could be shrunken further, closer to smartphone size.\n  Anyways, I hope you found this interesting. I know I have a lot to learn about all this kind of stuff, so any advice from experts is welcome. Please share this video around if you think others will like it. Thanks and I&#39;ll see you in the next video.\n   This project first appeared in NODE Vol 02, our new indepedent 180 page zine, packed with all sorts of open hardware and decentralized software projects. Pick up a hard copy, or download for free from the zine page.", "posttime": "2020-08-07 18:00:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,\u6253\u9020,ultimate,\u952e\u76d8", "title": "\u8bd5\u56fe\u6253\u9020\u7ec8\u6781\u6811\u8393\u6d3e\u8ba1\u7b97\u673a-\u96f6\u7ec8\u7aefV3", "title_en": "Trying to build the ultimate Raspberry Pi computer \u2013 Zero Terminal V3", "transed": 1, "url": "https://n-o-d-e.net/zeroterminal3.html", "via": "", "real_tags": ["\u6253\u9020", "ultimate", "\u952e\u76d8"]}, {"category": "", "categoryclass": "", "imagename": "88e4ef2507f6a5b7e7d457e0f390ec06.jpeg", "infoid": 1016848, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Crush\u662f\u4e00\u79cd\u5c1d\u8bd5\uff0c\u5b83\u8bd5\u56fe\u4f7f\u4f20\u7edf\u7684\u547d\u4ee4\u884cshell\u4e5f\u662f\u4e00\u79cd\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u5177\u6709\u4eba\u4eec\u671f\u671b\u4ece\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\u83b7\u5f97\u7684\u7279\u6027\uff0c\u5982\u7c7b\u578b\u7cfb\u7edf\u3001\u95ed\u5305\u548c\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u4f46\u5176\u8bed\u6cd5\u540c\u65f6\u9002\u7528\u4e8e\u6279\u5904\u7406\u548c\u4ea4\u4e92\u5f0fshell\u4f7f\u7528\u3002\n\u5982\u4f55\u8c03\u7528\u547d\u4ee4\u3001\u4f20\u9012\u53c2\u6570\u548c\u8bbe\u7f6e\u7ba1\u9053\u6ca1\u6709\u6539\u53d8\uff0c\u8fd9\u662f\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u6838\u5fc3\u6982\u5ff5\u3002\u8fd9\u610f\u5473\u7740\u7410\u788e\u7684\u8c03\u7528\uff0c\u5982ls\u6216find..\u3002|\u4f2f\u7235\u770b\u8d77\u6765\u4e00\u6837\uff0c\u4f46\u5728\u515c\u5e3d\u4e0b\u4ed6\u4eec\u5f88\u4e0d\u4e00\u6837\uff0c\u9664\u6b64\u4e4b\u5916\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u4e0d\u540c\u7684\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e24\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u5f00\u59cb\uff1b\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u5e76\u68c0\u67e5\u5f53\u524d\u76ee\u5f55\u4e2d\u6709\u591a\u5c11\u4e2a\u6587\u4ef6\uff1a\nCrush&gt\uff1blsuser size Modified type fileliljencrantz 2279 2020-03-07 13\uff1a00\uff1a33+0100\u6587\u4ef6\u7406\u60f3liljencrantz 4096 2019-11-22 21\uff1a56\uff1a30+0100\u76ee\u5f55\u76ee\u6807...crush&gt\uff1bls|count14\u3002\n\u8fd9\u4e9b\u770b\u8d77\u6765\u90fd\u5f88\u773c\u719f\u3002\u4f46\u5916\u8868\u662f\u6709\u6b3a\u9a97\u6027\u7684\u3002\u88ab\u8c03\u7528\u7684ls\u547d\u4ee4\u662f\u4e00\u4e2aCrush\u5185\u7f6e\u547d\u4ee4\uff0c\u8f93\u51fa\u4e0d\u662f\u901a\u8fc7Unix\u7ba1\u9053\u53d1\u9001\u7684\uff0c\u800c\u662f\u901a\u8fc7Rush\u901a\u9053\u53d1\u9001\u7684\u3002\u8be5\u547d\u4ee4\u4e0d\u4f1a\u5c06\u5176\u7406\u89e3\u4e3a\u4e00\u7cfb\u5217\u5b57\u8282\uff0c\u800c\u662f\u4e00\u79cd\u884c\u8868\uff0c\u800cCrush\u4e3a\u60a8\u63d0\u4f9b\u4e86\u7c7b\u4f3cSQL\u7684\u547d\u4ee4\u6765\u5bf9\u6570\u636e\u884c\u8fdb\u884c\u6392\u5e8f\u3001\u7b5b\u9009\u3001\u805a\u5408\u548c\u5206\u7ec4\u3002\nCrush&gt\uff1bls|sor^sizeuser size Modified type fileliljencrantz 31 2019-10-03 13\uff1a43\uff1a12+0200\u6587\u4ef6.gitignoreliljencrantz 75 2020-03-07 17\uff1a09\uff1a15+0100\u6587\u4ef6\u751f\u6210\u3002rsliljencrantz 491 2020-03-07 23\uff1a50\uff1a08+0100\u6587\u4ef6\u8d27\u7269.tomlliljencrantz 711 2019-10-03 14\uff1a19\uff1a46+0200\u3002}User Size Modified type fileliljencrantz 4096 2019-11-22 21\uff1a56\uff1a30+0100\u76ee\u5f55targetliljencrantz 4096 2020-02-22 11\uff1a50\uff1a12+0100\u76ee\u5f55testsliljencrantz 4096 2020-03-16 14\uff1a11\uff1a39+0100\u76ee\u5f55.idealiljencrantz 4096 2020-02-15 00\uff1a12\uff1a18+0100\u76ee\u5f55\u793a\u4f8b_dataliljencrantz 4096 2020-03-14\u3002\n\u56e0\u4e3aCrush Output\u662f\u4e00\u4e2a\u5e26\u6709\u5217\u7684\u884c\u6d41\uff0c\u6240\u4ee5\u50cf\u6309\u4efb\u610f\u5217\u6392\u5e8f\u6216\u57fa\u4e8e\u4efb\u610f\u903b\u8f91\u8868\u8fbe\u5f0f\u5bf9\u8fd9\u4e9b\u5217\u8fdb\u884c\u8fc7\u6ee4\u8fd9\u6837\u7684\u64cd\u4f5c\u5f88\u5bb9\u6613\uff0c\u800c\u4e14\u56e0\u4e3a\u7528\u6765\u505a\u8fd9\u4ef6\u4e8b\u7684\u7ec4\u4ef6\u662f\u901a\u7528\u7684\u548c\u53ef\u91cd\u7528\u7684\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u5bf9\u6765\u81ea\u4efb\u4f55\u6e90\u7684\u6570\u636e\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982JSON\u6587\u4ef6\uff0chttp\u8bf7\u6c42\u7b49\u3002\n\u5728\u4f20\u7edf\u7684shell\u4e2d\uff0cI/O\u662f\u4ee5\u4e8c\u8fdb\u5236\u6d41\u7684\u5f62\u5f0f\u5b8c\u6210\u7684\u3002\u56e0\u4e3aCrush\u6d41\u662f\u7c7b\u578b\u5316\u7684\uff0c\u6240\u4ee5I/O\u53d1\u751f\u7684\u65b9\u5f0f\u4e0d\u540c\u3002Crush\u5177\u6709\u7528\u4e8e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5404\u79cd\u6587\u4ef6\u683c\u5f0f\u7684\u547d\u4ee4\u5bf9\u3002\u4f8b\u5982\uff0c\u4f7f\u7528json\uff1afrom\u548cjson\uff1ato\u5206\u522b\u53cd\u5e8f\u5217\u5316\u548c\u5e8f\u5217\u5316json\u6570\u636e\u3002\u8fd9\u4e9b\u7ecf\u7406\u90fd\u50cf\u4f60\u4e00\u6837\u5de5\u4f5c\uff0c\u6211\u671f\u671b\uff1a\n#\u5c06ls\u547d\u4ee4\u7684\u8f93\u51fa\u8f6c\u50a8\u5230json\u683c\u5f0f\u7684listing.json\u6587\u4ef6(json\u683c\u5f0f)crush&gt\uff1bls|json\uff1ato./listing.json#\u5c06cargo.toml\u6587\u4ef6\u8bfb\u53d6\u4e3atoml\u6587\u4ef6\uff0c\u63d0\u53d6\u4f9d\u8d56\u9879-fieldcrush&gt\uff1b(toml\uff1afrom cargo.toml)\uff1a\u4f9d\u8d56\u9879#\u83b7\u53d6\u7f51\u9875\u5e76\u5c06\u5176\u5199\u5165\u6587\u4ef6(http&#34\uff1bhttps://isitchristmas.com/&#34\uff1b)\uff1aBody|bin\uff1ato./isitchristmas.\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u5411\u4efb\u4f55\u53cd\u5e8f\u5217\u5316\u7a0b\u5e8f\u547d\u4ee4\u63d0\u4f9b\u8f93\u5165\u6587\u4ef6\uff0c\u8be5\u547d\u4ee4\u5c06\u4ece\u8f93\u5165\u8bfb\u53d6\uff0c\u8be5\u8f93\u5165\u5fc5\u987b\u662f\u4e8c\u8fdb\u5236\u6d41\u6216\u4e8c\u8fdb\u5236\u6d41\uff0c\u4f8b\u5982(http&#34\uff1bhttps://jsonplaceholder.typicode.com/posts/1&#34\uff1b)\uff1abody|json\uff1afrom\u3002\n\u5982\u679c\u60a8\u4e0d\u5411\u5176\u4e2d\u4e00\u4e2a\u5e8f\u5217\u5316\u7a0b\u5e8f\u547d\u4ee4\u63d0\u4f9b\u8f93\u51fa\u6587\u4ef6\uff0c\u5219\u8be5\u547d\u4ee4\u4f1a\u5c06\u8f93\u51fa\u5e8f\u5217\u5316\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff0c\u4f5c\u4e3a\u7ba1\u9053\u8f93\u51fa\uff1a\nCrush\u5e8f\u5217\u5316\u7a0b\u5e8f\u4e4b\u4e00Pup\u662fCrush\u7684\u539f\u751f\u6587\u4ef6\u683c\u5f0f\u3002Pup-format\u662f\u57fa\u4e8e\u534f\u8bae\u7684\uff0c\u5b83\u7684\u6a21\u5f0f\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002Pup\u7684\u4f18\u70b9\u662f\u6240\u6709\u7684crush\u7c7b\u578b\uff0c\u5305\u62ec\u7c7b\u548c\u95ed\u5305\uff0c\u90fd\u53ef\u4ee5\u65e0\u635f\u5730\u5e8f\u5217\u5316\u6210\u8fd9\u79cd\u683c\u5f0f\uff0c\u4f46\u662f\u56e0\u4e3aPup\u662f\u7279\u5b9a\u4e8ecrush\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e0e\u5176\u4ed6\u8bed\u8a00\u5171\u4eab\u6570\u636e\u662f\u6ca1\u6709\u7528\u7684\u3002\nCrush\u5141\u8bb8\u60a8\u76f4\u63a5\u5728shell\u4e2d\u5bf9\u6574\u6570\u548c\u6d6e\u70b9\u6570\u6267\u884c\u6570\u5b66\u8ba1\u7b97\uff0c\u4e3b\u8981\u4f7f\u7528\u51e0\u4e4e\u4efb\u4f55\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u6570\u5b66\u8fd0\u7b97\u7b26\u3002\n\u552f\u4e00\u7684\u4f8b\u5916\u662f/\u8fd0\u7b97\u7b26\u7528\u4e8e\u6784\u5efa\u6587\u4ef6\u548c\u8def\u5f84(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\uff0c\u56e0\u6b64\u9664\u6cd5\u662f\u4f7f\u7528//\u8fd0\u7b97\u7b26\u5b8c\u6210\u7684\u3002\n\u4e0e\u5927\u591a\u6570\u8bed\u8a00\u4e00\u6837\uff0c\u503c\u4e4b\u95f4\u7684\u6bd4\u8f83\u4f7f\u7528&gt\uff1b\u3001&lt\uff1b\u3001&lt\uff1b=\u3001&gt\uff1b=\u3001==\u548c\uff01=\u8fdb\u884c\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u4e4b\u95f4\u7684\u6240\u6709\u6bd4\u8f83\u90fd\u662f\u5047\u7684\u3002\nCrush\u4e5f\u6709\u4e0e\u6a21\u5f0f\u548c\u5339\u914d\u76f8\u5173\u7684\u8fd0\u7b97\u7b26\u3002=~\u548c\uff01~\u7528\u4e8e\u68c0\u67e5\u6a21\u5f0f\u662f\u5426\u4e0e\u8f93\u5165\u5339\u914d\uff1a\n#%\u5b57\u7b26\u662fglobscush&gt\uff1b%.txt=~foo.txttrue#\u4e2d\u7684\u901a\u914d\u7b26#\u8fd9\u662f\u6784\u9020\u548c\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0fcrush&gt\uff1bre&#34\uff1bab+c&#34\uff1b=~&#34\uff1babbbbc&#34\uff1btrue\u7684\u65b9\u5f0f\u3002\n\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd8\u652f\u6301\u4f7f\u7528~(REPLACE ONCE)\u548c~~(Replaceall)\u8fd0\u7b97\u7b26\u8fdb\u884c\u66ff\u6362\uff0c\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u662f\u4e09\u8fdb\u5236\u8fd0\u7b97\u7b26\uff1a\n\u5982\u524d\u6240\u8ff0\uff0c\u8bb8\u591aCrush\u547d\u4ee4\u5bf9\u8868\u683c\u6570\u636e\u6d41\u8fdb\u884c\u64cd\u4f5c\u3002\u8be5\u8868\u6d41\u4e2d\u7684\u5355\u4e2a\u5355\u5143\u683c\u53ef\u4ee5\u662f\u5404\u79cd\u7c7b\u578b\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3001\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5217\u8868\u3001\u4e8c\u8fdb\u5236\u6570\u636e\u6216\u53e6\u4e00\u4e2a\u8868\u6d41\u3002\nCrush&gt\uff1bps|head 5pid PPID\u72b6\u6001\u7528\u6237CPU\u540d\u79f01 0\u4f11\u7720\u68394.73/sbin/init 2 0\u4f11\u7720\u68390[kthreadd]3 2\u7a7a\u95f2\u68390[RCU_GP]4 2\u7a7a\u95f2\u68390[RCU_PAR_GP]6 2\u7a7a\u95f2\u68390[kworker/0\uff1a0h-kblock]\u3002\n\u5f53\u7136\uff0c\u6709\u4e9b\u547d\u4ee4\u8f93\u51fa\u5355\u4e2a\u503c\uff0c\u4f8b\u5982pwd\uff0c\u5b83\u5c06\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8f93\u51fa\u4e3a\u6587\u4ef6\u7c7b\u578b\u7684\u5355\u4e2a\u5143\u7d20\u3002\nCRUSH&gT\uff1bSOME_NUMBER\uff1a=4#the\uff1a=\u8fd0\u7b97\u7b26\u58f0\u660e\u4e00\u4e2a\u65b0\u53d8\u91cf&gt\uff1bSOME_NUMBER*520\u3002\n\u4e0e\u4efb\u4f55\u6b63\u5e38\u7684\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0c\u53d8\u91cf\u53ef\u4ee5\u662f\u7c7b\u578b\u7cfb\u7edf\u652f\u6301\u7684\u4efb\u4f55\u7c7b\u578b\u3002\u6ca1\u6709\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002\u8bf7\u6ce8\u610f\uff0c\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\u7b26\u662f\u5728\u7c7b\u578b\u4e4b\u95f4\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5c06\u6574\u6570\u4e0e\u6d6e\u70b9\u6570\u76f8\u4e58\u5f97\u5230\u6d6e\u70b9\u6570\u3002\nCrush\u652f\u6301\u547d\u540d\u53c2\u6570\u548c\u672a\u547d\u540d\u53c2\u6570\u3002\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u3001\u53e6\u4e00\u79cd\u6216\u4e24\u8005\u7684\u7ec4\u5408\u3002\u4ee5\u4e0b\u4e09\u4e2a\u8c03\u7528\u662f\u7b49\u6548\u7684\u3002\n\u5c06\u5e03\u5c14\u53c2\u6570\u4f20\u9012\u7ed9\u547d\u4ee4\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48Crush\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u7b80\u5199\u8bed\u6cd5\u3002\u4f20\u5165--foo\u7b49\u6548\u4e8e\u4f20\u5165foo=true\u3002\n\u6709\u65f6\uff0c\u60a8\u5e0c\u671b\u5c06\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u7528\u4f5c\u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u5c31\u50cfbash\u4e2d\u7684\u5b50shell\u4e00\u6837\u3002\u8fd9\u4e0e\u4f7f\u7528\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u4e0d\u540c\uff0c\u5b83\u662f\u4f7f\u7528()\u5b8c\u6210\u7684\uff1a\n\u5728Crush\u4e2d\uff0c\u5927\u62ec\u53f7({})\u7528\u4e8e\u521b\u5efa\u95ed\u5408\u3002\u5c06\u95ed\u5305\u5206\u914d\u7ed9avariable\u662f\u521b\u5efa\u51fd\u6570\u7684\u65b9\u5f0f\u3002\n\u8c03\u7528\u95ed\u5305\u65f6\u4f20\u9012\u5e76\u6dfb\u52a0\u5230\u8c03\u7528\u7684\u672c\u5730\u4f5c\u7528\u57df\u7684\u4efb\u4f55\u547d\u540d\u53c2\u6570\uff1a\n\u4e3a\u4e86\u589e\u52a0\u7c7b\u578b\u5b89\u5168\uff0c\u60a8\u53ef\u4ee5\u5728\u95ed\u5305\u5f00\u59cb\u65f6\u58f0\u660e\u95ed\u5305\u9700\u8981\u54ea\u4e9b\u53c2\u6570\u3002\n\u4e0b\u9762\u7684\u95ed\u5305\u8981\u6c42\u8c03\u7528\u65b9\u63d0\u4f9b\u53c2\u6570a\uff0c\u5e76\u5141\u8bb8\u8c03\u7528\u65b9\u6307\u5b9a\u53c2\u6570b\uff0c\u8be5\u53c2\u6570\u5fc5\u987b\u4e3a\u6574\u6570\u7c7b\u578b\u3002\u5982\u679c\u8c03\u7528\u65b9\u6ca1\u6709\u6307\u5b9a\u5b83\uff0c\u5b83\u5c06\u56de\u9000\u5230\u9ed8\u8ba4\u503c7\u3002\n\u6b64\u5916\uff0c@\u8fd0\u7b97\u7b26\u53ef\u7528\u4e8e\u521b\u5efa\u6240\u6709\u672a\u547d\u540d\u53c2\u6570\u7684\u5217\u8868\uff0c@@\u8fd0\u7b97\u7b26\u53ef\u7528\u4e8e\u521b\u5efa\u53c2\u6570\u5217\u8868\u4e2d\u672a\u63d0\u53ca\u7684\u6240\u6709\u547d\u540d\u53c2\u6570\u7684\u5217\u8868\u3002\n\u5728\u547d\u4ee4\u8c03\u7528\u671f\u95f4\u8fd8\u4f7f\u7528@\u548c@@\u8fd0\u7b97\u7b26\u6765\u6267\u884c\u955c\u50cf\u64cd\u4f5c\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e00\u4e2alss\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8c03\u7528ls\u547d\u4ee4\u5e76\u5c06\u6240\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\uff0c\u5e76\u901a\u8fc7SELECT\u547d\u4ee4\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u8f93\u51fa\uff0c\u4ee5\u4ec5\u663e\u793a\u8f93\u51fa\u4e2d\u7684\u4e00\u5217\u3002\n\u4efb\u610f\u7c7b\u578b\u7c7b\u578b\u5bf9\u7684\u5b57\u5178(\u6709\u4e9b\u7c7b\u578b\u4e0d\u80fd\u7528\u4f5c\u952e\uff01)\u3002\n\u5728\u4f7f\u7528Crush\u65f6\uff0chelp\u548cdir\u547d\u4ee4\u975e\u5e38\u6709\u7528\u3002\u524d\u8005\u663e\u793a\u5e2e\u52a9\u6d88\u606f\uff0c\u540e\u8005\u5217\u51fa\u4e00\u4e2a\u503c\u7684\u5185\u5bb9\u3002\nCrush\uff1bhelp sorte\u5217\uff1a\u57fa\u4e8e\u5217\u7684\u5b57\u6bb5\u6392\u5e8f\u8f93\u5165\u793a\u4f8b\uff1aps|sor^cpucush&gt\uff1bdir list[TYPE\uff0cTRUNCATE\uff0cREMOVE\uff0cCLONE\uff0cOF\uff0c__CALL_TYPE__\uff0c__SETITEM__\uff0cPOP\uff0cPUSH\uff0cEMPTY\uff0cLEN\uff0cPEEK\uff0cNEW\uff0cCLEAR]\u3002\n\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u90fd\u662f\u672c\u5730\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\u3002\u662f\u6307\u5411\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u6587\u4ef6\u5bf9\u8c61\u3002\u5728Crush\u4e2d\u4f7f\u7528/\u8fd0\u7b97\u7b26\u5c06\u4e24\u4e2a\u6587\u4ef6\u76ee\u5f55\u5143\u7d20\u8fde\u63a5\u5728\u4e00\u8d77\u3002\n\u8fd9\u610f\u5473\u7740\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u5728Crush\u4e2d\u4f7f\u7528\u6587\u4ef6\u662f\u975e\u5e38\u7b80\u5355\u548c\u65b9\u4fbf\u7684\u3002\n\u538b\u7f29\u5149\u76d8(&&gt;\uff1bCD)..\u3002#\u8fd9\u505a\u4e86\u60a8\u8ba4\u4e3a\u7684\u4e8b\u60c5&&gt;cd/#\u5c31\u50cf\u8fd9\u4ef6\u4e8b\u4e00\u6837\u3002\n\u8fd0\u7b97\u7b26\u7684\u53f3\u4fa7\u662f\u6807\u7b7e\uff0c\u800c\u4e0d\u662f\u503c\uff0c\u56e0\u6b64./foo\u5f15\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u540d\u4e3afoo\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0e\u540d\u4e3afoo\u7684\u4efb\u4f55\u53d8\u91cf\u7684\u5185\u5bb9\u65e0\u5173\u3002\n\u53ef\u4ee5\u4f7f\u7528\uff1a\u8fd0\u7b97\u7b26\u8bbf\u95ee\u6210\u5458\u3002\u5927\u591a\u6570\u5176\u4ed6\u8bed\u8a00\u503e\u5411\u4e8e\u4f7f\u7528.\uff0c\u4f46\u8fd9\u662f\u6587\u4ef6\u540d\u4e2d\u975e\u5e38\u5e38\u89c1\u7684\u5b57\u7b26\uff0c\u6240\u4ee5Crush\u9700\u8981\u627e\u5230\u5176\u4ed6\u5b57\u7b26\u3002\n\u5927\u591a\u6570\u7c7b\u578b\u90fd\u6709\u51e0\u79cd\u6709\u7528\u7684\u65b9\u6cd5\u3002\u6587\u4ef6\u6709EXISTS\u548cSTAT\uff0c\u8fd9\u7b26\u5408\u60a8\u7684\u9884\u671f\u3002\nCrush&gt\uff1b.\uff1aExiststrucechash.\uff1aSTAT{IS_DIRECTORY\uff1aTRUE\uff0cIS_FILE\uff1aFALSE\uff0cIS_SYMBLINK\uff1aFALSE\uff0c\u4fe1\u606f\u8282\u70b9\uff1a50856186\uff0cNLINK\uff1a8\uff0cMODE\uff1a16877\uff0cLEN\uff1a4096}CRUSH&GT\uff1b(.\uff1aSTAT)\uff1aIS_FILEFALSE\u3002\n\u5b9e\u9645\u4e0a\u5c06\u5b58\u50a8\u5728all_the_files\u53d8\u91cf\u4e2d\u7684\u53ea\u662f\u4e00\u4e2a\u6d41\u3002\u5728\u6267\u884cfind\u547d\u4ee4\u7684\u4e09\u4e2a\u7ebf\u7a0b\u5f00\u59cb\u963b\u585e\u4e4b\u524d\uff0c\u5c06\u6025\u5207\u5730\u8bc4\u4f30\u5c11\u91cf\u7684\u8f93\u51fa\u884c\u3002\u5982\u679c\u6d41\u88ab\u4f7f\u7528\uff0c\u4f8b\u5982\u901a\u8fc7\u5199\u5165\u3002\n\u7136\u540e\u6240\u6709\u7684\u5730\u72f1\u90fd\u4f1a\u5728\u4f60\u7684\u5c4f\u5e55\u4e0a\u7206\u53d1\uff0c\u56e0\u4e3a\u6210\u5343\u4e0a\u4e07\u7684\u7ebf\u6761\u88ab\u6253\u5370\u5230\u4f60\u7684\u5c4f\u5e55\u4e0a\u3002\n\u8fd9\u5c06\u6d88\u8017\u6765\u81ea\u6d41\u7684\u4e00\u884c\u8f93\u51fa\u3002\u6b64\u547d\u4ee4\u53ef\u4ee5\u91cd\u65b0\u6267\u884c\uff0c\u76f4\u5230\u6d41\u4e3a\u7a7a\u3002\nCrush\u63d0\u4f9b\u4e86\u8bb8\u591a\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3cSQL\u7684\u8bed\u6cd5\u5bf9\u4efb\u610f\u6570\u636e\u6d41\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u4e9b\u547d\u4ee4\u4f7f\u7528^foo\u7b49\u5b57\u6bb5\u8bf4\u660e\u7b26\u6307\u5b9a\u5b83\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u6d41\u4e2d\u7684\u5217\uff1a\n\u4e0eSQL\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u547d\u4ee4\u90fd\u5728\u8f93\u5165\u6d41\u4e0a\u64cd\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u7ec4\u5408\uff0c\u8f93\u5165\u6e90\u53ef\u4ee5\u662f\u5404\u79cd\u683c\u5f0f\u7684\u6587\u4ef6/http\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u662fps\u3001find\u7b49\u547d\u4ee4\u7684\u8f93\u51fa\u3002\n*\u8fd0\u7b97\u7b26\u7528\u4e8e\u4e58\u6cd5\uff0c\u56e0\u6b64Crush\u4f7f\u7528%\u4f5c\u4e3a\u901a\u914d\u7b26\u3002\uff1f\u4ecd\u7528\u4e8e\u5355\u5b57\u7b26\u901a\u914d\u7b26\u3002\n\u538b\u7f29&&gt;ls%.txt\u7528\u6237\u5927\u5c0f\u4fee\u6539\u7c7b\u578bfileliljencrantz 21303 2020-03-30 13\uff1a40\uff1a37+0200file/home/liljencrantz/src/crush/README.mdcrush&gt\uff1bls\uff1f\u7528\u6237\u5927\u5c0f\u4fee\u6539\u7c7b\u578bfileliljencrantz 752020-03-07 17\uff1a09\uff1a15+0100file/home/liljencrantz/src/crush/build.rs\u3002\n\u8fd0\u7b97\u7b26%%\u7528\u4e8e\u9012\u5f52\u6267\u884c\u5b50\u76ee\u5f55\u4e2d\u7684\u5168\u5c40\u64cd\u4f5c\u3002\u53e6\u4e00\u79cd\u67e5\u770b\u76f8\u540c\u8bed\u6cd5\u7684\u65b9\u5f0f\u662f\u8bf4%and\uff1f\u5339\u914d\u9664/\u4e4b\u5916\u7684\u4efb\u4f55\u5b57\u7b26\uff0c\u800c%%\u4e5f\u5339\u914d/\u3002\n#\u7edf\u8ba1\u7c89\u788e\u6e90\u7801\u884c\u6570src/%%.rs|count\u3002\n\u901a\u914d\u7b26\u4e0d\u4f1a\u81ea\u52a8\u5c55\u5f00\uff0c\u5b83\u4eec\u4f5c\u4e3aglobobject\u4f20\u9012\u7ed9\u547d\u4ee4\uff0c\u547d\u4ee4\u9009\u62e9\u4e0eglob\u5339\u914d\u7684\u5bf9\u8c61\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5728\u672c\u8eab\u4e0d\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u547d\u4ee4\u4e2d\u6267\u884cGLOB\u6269\u5c55\uff0c\u8bf7\u4f7f\u7528GLOB\u5bf9\u8c61\u7684\uff1afilesmethod\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\nCrush&gt\uff1bl\uff1a=(\u5217\u8868\uff1a\u51711 2 3)crush&gt\uff1bl[1\uff0c2\uff0c3]crush&gt\uff1bl\uff1apeek3crush&gt\uff1bl\uff1apop3crush&gt\uff1bl\uff1alen2crush&gt\uff1bl[1]2crush&gt\uff1bl[1]=7crush&gt\uff1bl[1\uff0c7]crush&gt\uff1bHelp ltype\u5217\u8868\u6574\u6570\u53ef\u53d8\u9879\u76ee\u5217\u8868\uff0c\u901a\u5e38\u4e3a\u540c\u4e00\u7c7b\u578b*__CALL_TYPE_\u8fd4\u56de\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u7684\u5217\u8868\u7c7b\u578b*__getitem__\u8fd4\u56de\u6307\u5b9a\u57fa\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u6216\u5b50\u76ee\u5f55*__setitem__\u4e3a\u6307\u5b9a\u7d22\u5f15\u5904\u7684\u5143\u7d20\u8d4b\u503c*\u6e05\u9664\u4ece\u5217\u8868\u4e2d\u79fb\u9664\u6240\u6709\u5143\u7d20*clone\u521b\u5efa\u5217\u8868\u7684\u526f\u672c*\u7a7aTrue\u5982\u679c\u5217\u8868\u4e2d\u6ca1\u6709\u5143\u7d20*len\u5217\u8868\u4e2d\u7684\u5143\u7d20\u6570*new\u521b\u5efa\u5177\u6709\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u7684\u65b0\u5217\u8868*\u521b\u5efa\u5305\u542b\u6240\u63d0\u4f9b\u5143\u7d20\u7684\u65b0\u5217\u8868*\u3002\u5217\u8868\u4e2d\u7684\u5143\u7d20*\u5f39\u51fa\u5220\u9664\u5217\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20*\u63a8\u9001\u5c06\u5143\u7d20\u63a8\u9001\u5230\u5217\u8868\u672b\u5c3e*\u5220\u9664\u6307\u5b9a\u7d22\u5f15\u5904\u7684\u5143\u7d20*\u622a\u65ad\u5220\u9664\u8d85\u8fc7\u6307\u5b9a\u7d22\u5f15\u7684\u6240\u6709\u5143\u7d20\u3002\nCrush&gt\uff1bd\uff1a=(dict\u5b57\u7b26\u4e32\u6574\u6570)\uff1anewcrush&gt\uff1bd[&#34\uff1bfoo&34\uff1b]=42crush&gt\uff1bd[&#34\uff1bfoo&#34\uff1b]42crush&gt\uff1bHelp dtype dict\u5b57\u7b26\u4e32\u6574\u6570\u4ece\u4e00\u7ec4\u503c\u5230\u53e6\u4e00\u7ec4\u503c\u7684\u53ef\u53d8\u6620\u5c04*__CALL_TYPE_\u8fd4\u56de\u5177\u6709\u6307\u5b9a\u952e\u548c\u503c\u7c7b\u578b\u7684DICT\u7c7b\u578b*__getitem__\u8fd4\u56de\u6307\u5b9a\u952e\u6620\u5c04\u5230\u7684\u503c*__setitem__\u521b\u5efa\u65b0\u6620\u5c04\u6216\u66ff\u6362\u73b0\u6709\u6620\u5c04*\u6e05\u9664\u5220\u9664\u6b64DICT\u4e2d\u7684\u6240\u6709\u6620\u5c04*CLONE\u521b\u5efa\u6620\u5c04ST\u4e0e\u6b64\u76f8\u540c\u7684\u65b0DICT*\u5982\u679cDICT*LEN\u4e2d\u6ca1\u6709\u6620\u5c04\uff0c\u5219\u4e3a\u7a7aTrue\u3002\n\u538b\u7f29&&gt;\u5f00\u59cb\uff1a=\u65f6\u95f4\uff1a\u7acb\u5373\u538b\u7f29&&gt;\u67d0\u4ef6\u9700\u8981\u5927\u91cf\u65f6\u95f4\u7684\u4e1c\u897f&&gt;\u7ed3\u675f\uff1a=\u65f6\u95f4\uff1a\u7acb\u5373\u538b\u7f29&&gt;\u56de\u663e(&#34\uff1b\u6211\u4eec\u5728\u7269\u54c1\u4e0a\u82b1\u8d39\u4e86{})&#34\uff1b\uff1a\u683c\u5f0f\u7ed3\u675f-\u5f00\u59cb)4\uff1a06\u3002\n\u6709\u610f\u4e49\u7684\u6570\u5b66\u8fd0\u7b97\u7b26\u662f\u4e3a\u65f6\u95f4\u548c\u6301\u7eed\u65f6\u95f4\u5b9a\u4e49\u7684\u3002\u4ece\u4e00\u4e2a\u65f6\u95f4\u51cf\u53bb\u53e6\u4e00\u4e2a\u65f6\u95f4\u4f1a\u5f97\u5230\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u3002\u5c06\u4e24\u4e2a\u6301\u7eed\u65f6\u95f4\u76f8\u52a0\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u3002\u5c06\u6301\u7eed\u65f6\u95f4\u4e58\u4ee5\u6574\u6570\u6216\u9664\u4ee5\u6574\u6570\u5f97\u5230\u6301\u7eed\u65f6\u95f4\u3002\n\u8bb8\u591a\u547d\u4ee4\u7684\u8f93\u51fa\u662f\u8868\u6d41\uff0c\u5373\u7531\u5177\u6709\u76f8\u540c\u7ed3\u6784\u7684\u884c\u7ec4\u6210\u7684\u6d41\u6570\u636e\u7ed3\u6784\u3002\u6709\u4e9b\u547d\u4ee4\uff0c\u5982cat\uff0c\u5219\u8f93\u51fa\u4e8c\u8fdb\u5236\u6d41\u3002\n\u8fd9\u4e9b\u6d41\u4e0d\u80fd\u5012\u5e26\uff0c\u53ea\u80fd\u6d88\u8d39\u4e00\u6b21\u3002\u8fd9\u6709\u65f6\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4eba\u4eec\u53ef\u4ee5\u5904\u7406\u6bd4\u8ba1\u7b97\u673a\u5185\u5b58\u66f4\u5927\u7684\u6570\u636e\u96c6\uff0c\u751a\u81f3\u53ef\u4ee5\u5904\u7406\u65e0\u9650\u7684\u6570\u636e\u96c6\u3002\n\u4f46\u6709\u65f6\uff0c\u6d41\u5f0f\u6570\u636e\u96c6\u662f\u4e0d\u65b9\u4fbf\u7684\uff0c\u7279\u522b\u662f\u5f53\u4e00\u4e2a\u4eba\u60f3\u8981\u4e24\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u7684\u65f6\u5019\u3002\n\u538b\u7f29\u6587\u4ef6\uff1a=lscush&gt\uff1b\u6587\u4ef6\u7528\u6237\u5927\u5c0f\u4fee\u6539\u7c7b\u578b\u6587\u4ef6liljencrantz 13072020-03-26 01\uff1a08\uff1a45+0100\u6587\u4ef6\u7406\u60f3liljencrantz 40962019-11-22 21\uff1a56\uff1a30+0100\u76ee\u5f55\u76ee\u6807liljencrantz 40962020-03-27 09\uff1a18\uff1a25+0100\u76ee\u5f55\u6d4b\u8bd5sliljencrantz 13072020-03-24 17\uff1a20\uff1a00+0100file cargo.lockiljencrantz 40962020-02-\u300225+0100\u76ee\u5f55srcliljencrantz 479 2020-03-24 17\uff1a20\uff1a00+0100\u6587\u4ef6\u8d27\u67b6.tomlliljencrantz 4096 2020-03-29 01\uff1a29+0100\u76ee\u5f55.gitliljencrantz 8382 2020-03-29 00\uff1a54\uff1a13+0100\u6587\u4ef6\u81f3todoliljencrantz 75 2020-03-07 17\uff1a09\uff1a15+0100\u6587\u4ef6\u6784\u5efa.rsliljencrantz 711 201\u3002\u6863\u6848\u3002\n\u8bf7\u6ce8\u610f\uff0c\u7b2c\u4e8c\u6b21\u663e\u793a\u6587\u4ef6\u65f6\u6ca1\u6709\u8f93\u51fa\uff0c\u56e0\u4e3a\u5df2\u7ecf\u4f7f\u7528\u4e86etable_stream\u3002\n\u8f93\u5165MATERIALIZE\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u63a5\u53d7\u4efb\u4f55\u503c\uff0c\u5e76\u9012\u5f52\u5730\u5c06\u6240\u6709\u77ac\u6001\u7ec4\u4ef6\u8f6c\u6362\u4e3a\u7b49\u4ef7\u4f46\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\u7684\u5f62\u5f0f\u3002\nCRUSH&gT\uff1bMATERIALIZED_FILES\uff1a=(ls|MATERIALIZE)CRUSH&gT\uff1bMaterialized_filesuser size Modified type fileliljencrantz 1307 2020-03-26 01\uff1a08\uff1a45+0100\u6587\u4ef6\u7406\u60f3liljencrantz 40962019-11-22 21\uff1a56\uff1a30+0100\u76ee\u5f55target liljencrantz 40962020-03-27 09\uff1a18\uff1a25+0100\u76ee\u5f55testsliljencrantz 13072020-03-24 17\uff1a20\uff1a00+0100\u6587\u4ef6\u8d27\u7269.lockliljencrantz 40962020\u300235\uff1a25+0100\u76ee\u5f55srcliljencrantz 479 2020-03-24 17\uff1a20\uff1a00+0100\u6587\u4ef6\u8d27\u7269.tomlliljencrantz 4096 2020-03-29 01\uff1a29\uff1a52+0100\u76ee\u5f55.gitliljencrantz 8382 2020-03-29 00\uff1a54\uff1a13+0100\u6587\u4ef6\u5230doiljencrantz 75 2020-03-07 17\uff1a09\uff1a15+0100\u6587\u4ef6\u751f\u6210\u3002rsliljencrantz 7\u3002Materialized_filesuser size Modified type fileliljencrantz 1307 2020-03-26 01\uff1a08\uff1a45+0100\u6587\u4ef6\u7406\u60f3liljencrantz 40962019-11-22 21\uff1a56\uff1a30+0100\u76ee\u5f55target liljencrantz 40962020-03-27 09\uff1a18\uff1a25+0100\u76ee\u5f55testsliljencrantz 13072020-03-24 17\uff1a20\uff1a00+0100\u6587\u4ef6\u8d27\u7269.lockliljencrantz 40962020\u300235\uff1a25+0100\u76ee\u5f55srcliljencrantz 479 2020-03-24 17\uff1a20\uff1a00+0100\u6587\u4ef6\u8d27\u7269.tomlliljencrantz 4096 2020-03-29 01\uff1a29\uff1a52+0100\u76ee\u5f55.gitliljencrantz 8382 2020-03-29 00\uff1a54\uff1a13+0100\u6587\u4ef6\u5230doiljencrantz 75 2020-03-07 17\uff1a09\uff1a15+0100\u6587\u4ef6\u751f\u6210\u3002rsliljencrantz 7\u3002\n\u5f53\u7136\uff0cCrush\u6709\u4e00\u4e2aIF\u547d\u4ee4\uff0c\u4ee5\u53caFor\u3001WHILE\u548cLOOP\u5faa\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528Break\u548cContinue\u6765\u63a7\u5236\u3002\nCRUSH&&gt;HELP IFIF\u6761\u4ef6\uff1a\u5e03\u5c14IF-\u5b50\u53e5\uff1aCOMMAND[ELSE-\u5b50\u53e5\uff1aCOMMAND]\u6709\u6761\u4ef6\u5730\u6267\u884c\u4e00\u4e2a\u547d\u4ee4\u4e00\u6b21\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6267\u884cif\u5b50\u53e5\u3002\u5426\u5219\uff0c\u5c06\u6267\u884cElse-\u5b50\u53e5(\u5982\u679c\u6307\u5b9a)\u3002\u793a\u4f8b\uff1a\u5982\u679c(./SOME_FILE\uff1aSTAT)\uff1aIS_FILE{ECHO&#34\uff1b\u5b83\u662f\u4e00\u4e2a\u6587\u4ef6\uff01&#34\uff1b}{ECHO&#34\uff1b\u5b83\u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff01&#34\uff1b}\u5bf9\u4e8e[name=]iterable\uff1a(table_stream|table|dict|list)Body\uff1a\u547d\u4ee4\u5bf9Iterable\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u4e00\u6b21Body\u3002\u793a\u4f8b\uff1afor(Seq){echo(&#34\uff1bLap{}&#34\uff1b\uff1a\u683c\u5f0f\u503c)}\u3002\n\u663e\u7136\uff0c\u4eba\u4eec\u6709\u65f6\u9700\u8981\u547c\u5524\u5916\u90e8\u547d\u4ee4\u3002\u76ee\u524d\uff0c\u5728Crush\u4e2d\u8fd9\u6837\u505a\u7684\u529f\u80fd\u6709\u70b9\u539f\u59cb\u3002\u5982\u679c\u7ed9\u5b9a\u540d\u79f0\u7684\u5185\u90e8\u547d\u4ee4\u4e0d\u5b58\u5728\uff0cCrush\u5c06\u67e5\u627e\u5916\u90e8\u547d\u4ee4\uff0c\u5982\u679c\u627e\u5230\u5916\u90e8\u547d\u4ee4\uff0c\u5219\u4f7f\u7528\u8be5\u547d\u4ee4\u3002\u4f46Crush\u4e0d\u79fb\u4ea4tty\u6216\u6a21\u62dfAtty\uff0c\u56e0\u6b64\u4ea4\u4e92\u5f0f\u7ec8\u7aef\u7a0b\u5e8f\u65e0\u6cd5\u5de5\u4f5c\uff0c\u7528\u8f6c\u4e49\u5e8f\u5217\u7f8e\u5316\u5176\u8f93\u51fa\u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\nCrush\u7684\u8fd9\u4e00\u90e8\u5206\u5e94\u8be5\u88ab\u89c6\u4e3a\u6982\u5ff5\u8bc1\u660e\uff0c\u4f46\u5927\u591a\u6570\u975e\u4ea4\u4e92\u547d\u4ee4\u4ecd\u6309\u9884\u671f\u5de5\u4f5c\uff1a\n\u9996\u5148\uff0c\u50cfgit status\u8fd9\u6837\u7684\u5b50\u547d\u4ee4\u88ab\u6620\u5c04\u5230\u50cfgit\uff1astatus\u8fd9\u6837\u7684\u65b9\u6cd5\u8c03\u7528\u3002\u8fd9\u6837\u60a8\u5c31\u4e0d\u5fc5\u5f15\u8d77\u5b50\u547d\u4ee4\u540d\uff0c\u4f8b\u5982git&#34\uff1bstatus&#34\uff1b\u3002\n\u5176\u6b21\uff0c\u547d\u540d\u53c2\u6570\u88ab\u900f\u660e\u5730\u8f6c\u6362\u4e3a\u9009\u9879\u3002\u5355\u5b57\u7b26\u53c2\u6570\u540d\u79f0\u88ab\u8f6c\u6362\u4e3a\u5e26\u6709\u5355\u4e2a\u8fde\u5b57\u7b26\u7684\u9009\u9879\uff0c\u591a\u5b57\u7b26\u53c2\u6570\u540d\u79f0\u88ab\u8f6c\u6362\u4e3a\u5e26\u6709\u4e24\u4e2a\u8fde\u5b57\u7b26\u7684GNU\u6837\u5f0f\u7684\u957f\u9009\u9879\uff0c\u4f8b\u5982\uff0cgit\uff1aCommit m=&#34\uff1bhello&#34\uff1b\u88ab\u8f6c\u6362\u4e3agit Commit-m&m&#34\uff1bhello&#34\uff1b\u548cgit\uff1aCommit message=&#34\uff1bhello&#34\uff1b\u88ab\u8f6c\u6362\u4e3agit Commit--message&#34\uff1bhello&#34\uff1b\u3002\n\u7b2c\u4e09\uff0c\u5e03\u5c14\u503c\u4e3atrue\u7684\u547d\u540d\u53c2\u6570\u88ab\u7b80\u5355\u5730\u8f6c\u6362\u4e3a\u4e0d\u5e26\u503c\u7684options\uff0c\u56e0\u6b64\u4f8b\u5982git\uff1aCommit--a--append(\u6216git\uff1aCommit a=true append=true)\u88ab\u8f6c\u6362\u4e3agit Commit-a--append\u3002\n\u5f53\u6d89\u53ca\u5230\u4f5c\u4e1a\u63a7\u5236\u3001\u7ec8\u7aef\u4eff\u771f\u548c\u5176\u4ed6\u96c6\u6210\u70b9\u65f6\uff0c\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5de5\u4f5c\u3002\n\u95ed\u5305\u5c06\u88ab\u5e8f\u5217\u5316\u3001\u4f7f\u7528ssh\u4f20\u8f93\u5230\u8fdc\u7a0b\u4e3b\u673a\u3001\u53cd\u5e8f\u5217\u5316\u5e76\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c(\u7c89\u788e\u5916\u58f3\u5fc5\u987b\u4f4d\u4e8e\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u7684\u9ed8\u8ba4\u8def\u5f84\u4e2d)\u3002\u4e00\u65e6\u547d\u4ee4\u5df2\u7ecf\u6267\u884c\uff0c\u5e76\u4e14\u95ed\u5305\u7684\u8f93\u51fa\u5728\u672c\u5730\u673a\u5668\u4e0a\u88ab\u5e8f\u5217\u5316\u3001\u4f20\u8f93\u3001\u53cd\u5e8f\u5217\u5316\u5e76\u7528\u4f5cRemote\uff1aEXEC\u547d\u4ee4\u7684\u8f93\u51fa\u3002\nPoint\uff1a=(\u7c7b)Point\uff1a__init__={|x\uff1aFloat y\uff1aFloat|this\uff1ax=x this\uff1ay=y}Point\uff1aLEN={||\u6570\u5b66\uff1asqrt this\uff1ax*this\uff1ax+this\uff1ay*this\uff1ay}Point\uff1a__add__={|Other|Point\uff1anew x=(this\uff1ax+ther\uff1ax)y=(this\uff1ay+y+ther\uff1ay)}p\uff1a=(Point\uff1anew x=1.0 y=2.0)p\uff1aLEN\u3002\nCrush\u652f\u6301\u5355\u4e00\u7ee7\u627f(\u901a\u8fc7\u5c06\u7236\u7ea7\u4f20\u9012\u7ed9classcommand)\u3002Class\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b\u540d\u4e3anew\u7684\u65b9\u6cd5\u3002\u8c03\u7528new\u65f6\uff0c\u5c06\u521b\u5efa\u8be5\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002\u5982\u679c\u5b9a\u4e49\u4e86__init__\u65b9\u6cd5\uff0cnew\u5c06\u8c03\u7528\u5b83\uff0c\u5e76\u5c06\u6240\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u3002\n\u901a\u8fc7\u5c06\u65b9\u6cd5\u6dfb\u52a0\u5230\u7c7b\u6765\u6dfb\u52a0\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u6210\u5458\u53d8\u91cf\u6dfb\u52a0\u5230__init__\u4e2d\u7684\u5b9e\u4f8b(This)\u6765\u6dfb\u52a0\u6210\u5458\u53d8\u91cf\u3002\nCrush\u4e0ePowerShell\u5171\u4eab\u5176\u5927\u90e8\u5206\u8bbe\u8ba1\u76ee\u6807\u3002\u6211\u8ba4\u4e3aPowerShell\u662f\u5fae\u8f6f\u6709\u53f2\u4ee5\u6765\u6700\u9177\u3001\u6700\u6709\u8da3\u7684\u521b\u65b0\u4e4b\u4e00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u53d1\u73b0\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528PowerShell\u7ecf\u5e38\u611f\u89c9\u7b28\u91cd\u548c\u607c\u4eba\uff0c\u7279\u522b\u662f\u5728\u4ea4\u4e92\u4f7f\u7528\u65f6\u3002\u6211\u8fd8\u89c9\u5f97\u5c06ashell\u4e0eCOM\u5bf9\u8c61\u6346\u7ed1\u5728\u4e00\u8d77\u4e0d\u592a\u5408\u9002\u3002\n\u6211\u60f3\u505a\u4e00\u4e9b\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u8bed\u6cd5\u66f4\u7cbe\u7b80\uff0c\u5e76\u4e14\u6211\u89c9\u5f97\u7c7b\u578b\u7cfb\u7edf\u66f4\u5408\u9002\u3002\n\u4ece\u8868\u9762\u4e0a\u770b\uff0cCrush\u770b\u8d77\u6765\u4e0eNushell\u76f8\u540c\uff0c\u4f46\u6ca1\u6709\u90a3\u4e48\u7cbe\u81f4\u3002Crush lash\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3001\u5236\u8868\u7b26\u5b8c\u6210\uff0c\u5e76\u4e14\u5c4f\u5e55\u5448\u73b0\u6548\u679c\u8f83\u5dee\u3002\u4f46\u8fd9\u662f\u56e0\u4e3aCrush\u73b0\u5728\u7684\u91cd\u70b9\u662f\u521b\u5efa\u4e00\u79cd\u5b9a\u4e49\u826f\u597d\u3001\u529f\u80fd\u5f3a\u5927\u4e14\u65b9\u4fbf\u7684\u8bed\u8a00\uff0c\u652f\u6301\u7b97\u672f\u8fd0\u7b97\u7b26\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\n.", "note_en": "Crush is an attempt to make a traditional command line shell that is also amodern programming language. It has the features one would expect from a modernprogramming language like a type system, closures and lexical scoping, but witha syntax geared toward both batch and interactive shell usage.\n   How to invoke commands, pass arguments and set up pipelines are unchanged, as isthe central concept of a current working directory. This means that trivialinvocations, like  ls or  find .. | count look the same, but under the hoodthey are quite different, and nearly everything beyond that is different.\n   Let&#39;s start with two trivial commands; listing files in the current directory,and checking how many files are in the current directory:\n crush&gt; lsuser size modified type fileliljencrantz 2279 2020-03-07 13:00:33 +0100 file ideasliljencrantz 4096 2019-11-22 21:56:30 +0100 directory target...crush&gt; ls | count14\n This all looks familiar. But appearances are deceiving. The  ls command beingcalled is a Crush builtin, and the output is not sent over a unix pipe but overa Rush channel. It is not understood by the command as a series of bytes, but asa table of rows, and Crush provides you with SQL-like commands to sort, filter,aggregate and group rows of data.\n crush&gt; ls | sort ^sizeuser size modified type fileliljencrantz 31 2019-10-03 13:43:12 +0200 file .gitignoreliljencrantz 75 2020-03-07 17:09:15 +0100 file build.rsliljencrantz 491 2020-03-07 23:50:08 +0100 file Cargo.tomlliljencrantz 711 2019-10-03 14:19:46 +0200 file crush.iml...crush&gt; ls | where {type == &#34;directory&#34;}user size modified type fileliljencrantz 4096 2019-11-22 21:56:30 +0100 directory targetliljencrantz 4096 2020-02-22 11:50:12 +0100 directory testsliljencrantz 4096 2020-03-16 14:11:39 +0100 directory .idealiljencrantz 4096 2020-02-15 00:12:18 +0100 directory example_dataliljencrantz 4096 2020-03-14 17:34:39 +0100 directory srcliljencrantz 4096 2020-03-14 19:44:54 +0100 directory .git\n Because Crush output is a stream of rows with columns, actions like sorting byan arbitrary column or filtering data based on arbitrary logical expressionsoperating on these columns is easy, and because the components used to do thisare generic and reusable, you can trivially do the same to data from any source,such as json files, http requests, etc.\n  In traditional shells, I/O is done as binary streams. Because Crush streamsare typed, I/O happens differently. Crush has command pairs usedfor serializing and deserializing various file formats. Use e.g.  json:fromand  json:to to deserialize and serialize json data, respectively. Thesecommands all work like you&#39;d expect:\n  # Dump the output of the ls command to the file listing.json in json formatcrush &gt; ls  | json:to ./listing.json  # Read the file Cargo.toml as a toml file, and extract the dependencies-fieldcrush &gt; (toml:from Cargo.toml):dependencies  # Fetch a web page and write it to a file(http   &#34;https://isitchristmas.com/ &#34;):body  | bin:to ./isitchristmas.html\n If you don&#39;t supply an input file to any of the deserializer commands,the command will read from the input, which must be a binary or binarystream, e.g.  (http &#34;https://jsonplaceholder.typicode.com/posts/1&#34;):body | json:from.\n If you don&#39;t supply an output file to one of the serializer commands,the command will serialize the output to a binary stream as the pipelineoutput:\n  One of the Crush serializers, Pup, is a native file format for Crush. ThePup-format is protobuf-based, and it&#39;s schema is available here. The advantage of Pup is that all crush types,including classes and closures, can be losslessly serialized into this format.But because Pup is Crush-specific, it&#39;s useless for data sharing toother languages.\n  Crush allows you to perform mathematical calculations on integer and floatingpoint numbers directly in the shell, mostly using the same mathematical operatorsused in almost any other programming language.\n  The only exception is that the  / operator is used for constructing files andpaths (more on that later), so division is done using the  // operator.\n  Comparisons between values are done using  &gt;,  &lt;,  &lt;=,  &gt;=,  == and  !=,just like in most languages. All comparisons between values of different typesare false.\n    Crush also has operators related to patterns and matching.  =~ and  !~ areused to check if a pattern matches an input:\n # The % character is the wildcard operator in globscrush&gt; %.txt =~ foo.txttrue# This is how you construct and match a regular expressioncrush&gt; re&#34;ab+c&#34; =~ &#34;abbbbbc&#34;true\n Regexps also support replacement using the  ~ (replace once) and  ~~ (replaceall) operators, which are trinary operators:\n   As already mentioned, many Crush commands operate on streams of tabular data.The individual cells in this table stream can be any of a variety of types,including strings, integers, floating point numbers, lists, binary data oranother table stream.\n crush&gt; ps | head 5pid ppid status user cpu name 1 0 Sleeping root 4.73 /sbin/init 2 0 Sleeping root 0 [kthreadd] 3 2 Idle root 0 [rcu_gp] 4 2 Idle root 0 [rcu_par_gp] 6 2 Idle root 0 [kworker/0:0H-kblockd]\n Some commands of course output a single value, such as pwd, which outputs thecurrent working directory as a single element of the  file type.\n   crush&gt; some_number := 4 # The := operator declares a new variablecrush&gt; some_number * 520\n   Like in any sane programming language, variables can be of any type supported bythe type system. There is no implicit type conversion. Do note that somemathematical operators are defined between types, so multiplying an integerwith a floating point number results in a floating point number, for example.\n   Crush supports named and unnamed arguments. It is often possible to use one,the other or a combination of both. The following three invocations are equivalent.\n  It is quite common to want to pass boolean arguments to commands, which is whyCrush has a special shorthand syntax for it. Passing in  --foo is equivalentto passing in  foo=true.\n  Sometimes you want to use the output of one command as an  argument to anothercommand, just like a subshell in e.g. bash. This is different from using theoutput as the  input, and is done using  ():\n   In Crush, braces ( {}) are used to create a closure. Assigning a closure to avariable is how you create a function.\n  Any named arguments passed when calling a closure and added to the local scopeof the invocation:\n  For added type safety, you can declare what parameters a closure expects at thestart of a closure.\n The following closure requires the caller to supply the argument  a, and allowsthe caller to specify the argument  b, which must by of type integer. If thecaller does not specify it, it falls back to a default value of 7.\n  Additionally, the  @ operator can be used to create a list of all unnamedarguments, and the  @@ operator can be used to create a list of all namedarguments not mentioned elsewhere in the parameter list.\n  The  @ and  @@ operators are also used during command invocation to performthe mirrored operation. The following code creates an  lss function that callsthe  ls command and passes on any arguments to it, and pipes the output throughthe  select command to only show one column from the output.\n    dicts of any pair of types type, (Some types can not be used as keys!)\n   When playing around with Crush, the  help and  dircommands are useful. Theformer displays a help messages, the latter lists the content of a value.\n crush&gt; helpsort column:field Sort input based on column Example: ps | sort ^cpucrush&gt; dir list[type, truncate, remove, clone, of, __call_type__, __setitem__, pop, push, empty, len, peek, new, clear]\n  All the files in the current working directory are part of the local namespace.This means that e.g.  . is a file object that points to the current workingdirectory. The  / operator is used in Crush to join two file directory elementtogether.\n This means that for the most part, using files in Crush is extremely simple andconvenient.\n crush&gt; cd .. # This does what you&#39;d thinkcrush&gt; cd / # As does this\n The right hand side of the / operator is a label, not a value, so  ./foo refersto a file named foo in the current working directory, and is unrelated to thecontents of any variable named  foo.\n  Members are accessed using the  : operator. Most other languages tend to use ., but that is a very common character in file names, so Crush needed to findsomething else.\n Most types have several useful methods. Files have  exists and  stat, which dowhat you&#39;d expect.\n crush&gt; .:existstruecrush&gt; .:stat{is_directory: true, is_file: false, is_symlink: false, inode: 50856186, nlink: 8, mode: 16877, len: 4096}crush&gt; (.:stat):is_filefalse\n    What will really be stored in the  all_the_files variable is simply a stream. Asmall number of lines of output will be eagerly evaluated, before the threadexecuting the find command will start blocking. If the stream is consumed, forexample by writing\n  then all hell will break loose on your screen as tens of thousands of lines areprinted to your screen.\n   Which will consume one line of output from the stream. This command can bere-executed until the stream is empty.\n  Crush features many commands to operate om arbitrary streams of data using aSQL-like syntax. These commands use field-specifiers like  ^foo to specifycolumns in the data stream that they operate on:\n   Unlike in SQL, these commands all operate on input streams, meaning they can becombined in any order, and the input source can be file/http resources in avariety of formats or output of commands like  ps,  find.\n  The  * operator is used for multiplication, so Crush uses  % as the wildcardoperator instead.  ? is still used for single character wildcards.\n crush&gt; ls %.txtuser size modified type fileliljencrantz 21303 2020-03-30 13:40:37 +0200 file /home/liljencrantz/src/crush/README.mdcrush&gt; ls ????????user size modified type fileliljencrantz 75 2020-03-07 17:09:15 +0100 file /home/liljencrantz/src/crush/build.rs\n The operator  %% is used for performing globbing recursively into subdirectories.Another way of looking ath the same syntax is to say that  % and  ? match anycharacter except  /, whereas  %% also matches  /.\n # Count the number of lines of rust code in the crush source codecrush&gt; lines src/%%.rs|count\n Wildcards are not automatically expanded, they are passed in to commands as globobjects, and the command chooses what to match the glob against. If you want toperform glob expansion in a command that doesn&#39;t do so itself, use the  :filesmethod of the glob object to do so:\n       crush&gt; l := (list:of 1 2 3)crush&gt; l[1, 2, 3]crush&gt; l:peek3crush&gt; l:pop3crush&gt; l:len2crush&gt; l[1]2crush&gt; l[1] = 7crush&gt; l[1, 7]crush&gt; help ltype list integer A mutable list of items, usually of the same type * __call_type__ Return a list type for the specified element type * __getitem__ Return a file or subdirectory in the specified base directory * __setitem__ Assign a new value to the element at the specified index * clear Remove all elments from the list * clone Create a duplicate of the list * empty True if there are no elements in the list * len The number of elements in the list * new Create a new list with the specified element type * of Create a new list containing the supplied elements * peek Return the last element from the list * pop Remove the last element from the list * push Push an element to the end of the list * remove Remove the element at the specified index * truncate Remove all elements past the specified index\n  crush&gt; d := (dict string integer):newcrush&gt; d[&#34;foo&#34;] = 42crush&gt; d[&#34;foo&#34;]42crush&gt; help dtype dict string integer A mutable mapping from one set of values to another * __call_type__ Returns a dict type with the specifiec key and value types * __getitem__ Return the value the specified key is mapped to * __setitem__ Create a new mapping or replace an existing one * clear Remove all mappings from this dict * clone Create a new dict with the same st of mappings as this one * empty True if there are no mappings in the dict * len The number of mappings in the dict * new Construct a new dict * remove Remove a mapping from the dict\n   crush&gt; start := time:nowcrush&gt; something_that_takes_a_lot_of_timecrush&gt; end := time:nowcrush&gt; echo (&#34;We spent {} on the thing&#34;:format end - start)4:06\n The mathematical operators that make sense are defined for  time and duration. Subtracting one  time from another results in a  duration. Addingtwo  duration results in a  duration. Multiplying or dividing a  duration bya  integer results in a  duration.\n  The output of many commands is a table stream, i.e. a streaming data structureconsisting of rows with identical structure. Some commands, like  cat insteadoutput a binary stream.\n These streams can not be rewound and can only be consumed once. This issometimes vital, as it means that one can work on data sets larger than yourcomputers memory, and even infinite data sets.\n But sometimes, streaming data sets are inconvenient, especially if one wants touse the same dataset twice.\n crush&gt; files := lscrush&gt; filesuser size modified type fileliljencrantz 1307 2020-03-26 01:08:45 +0100 file ideasliljencrantz 4096 2019-11-22 21:56:30 +0100 directory targetliljencrantz 4096 2020-03-27 09:18:25 +0100 directory testsliljencrantz 95328 2020-03-24 17:20:00 +0100 file Cargo.lockliljencrantz 4096 2020-02-15 00:12:18 +0100 directory example_dataliljencrantz 31 2019-10-03 13:43:12 +0200 file .gitignoreliljencrantz 13355 2020-03-29 03:05:16 +0200 file README.mdliljencrantz 4096 2020-03-27 11:35:25 +0100 directory srcliljencrantz 479 2020-03-24 17:20:00 +0100 file Cargo.tomlliljencrantz 4096 2020-03-29 01:29:52 +0100 directory .gitliljencrantz 8382 2020-03-29 00:54:13 +0100 file todoliljencrantz 75 2020-03-07 17:09:15 +0100 file build.rsliljencrantz 711 2019-10-03 14:19:46 +0200 file crush.imlcrush&gt; files\n Notice how there is no output the second time  files is displayed, because thetable_stream has already been consumed.\n Enter the materialize command, which takes any value and recursively convertsall transient components into an equivalent but fully in-memory form.\n crush&gt; materialized_files := (ls|materialize)crush&gt; materialized_filesuser size modified type fileliljencrantz 1307 2020-03-26 01:08:45 +0100 file ideasliljencrantz 4096 2019-11-22 21:56:30 +0100 directory targetliljencrantz 4096 2020-03-27 09:18:25 +0100 directory testsliljencrantz 95328 2020-03-24 17:20:00 +0100 file Cargo.lockliljencrantz 4096 2020-02-15 00:12:18 +0100 directory example_dataliljencrantz 31 2019-10-03 13:43:12 +0200 file .gitignoreliljencrantz 14420 2020-03-29 03:06:02 +0200 file README.mdliljencrantz 4096 2020-03-27 11:35:25 +0100 directory srcliljencrantz 479 2020-03-24 17:20:00 +0100 file Cargo.tomlliljencrantz 4096 2020-03-29 01:29:52 +0100 directory .gitliljencrantz 8382 2020-03-29 00:54:13 +0100 file todoliljencrantz 75 2020-03-07 17:09:15 +0100 file build.rsliljencrantz 711 2019-10-03 14:19:46 +0200 file crush.imlcrush&gt; materialized_filesuser size modified type fileliljencrantz 1307 2020-03-26 01:08:45 +0100 file ideasliljencrantz 4096 2019-11-22 21:56:30 +0100 directory targetliljencrantz 4096 2020-03-27 09:18:25 +0100 directory testsliljencrantz 95328 2020-03-24 17:20:00 +0100 file Cargo.lockliljencrantz 4096 2020-02-15 00:12:18 +0100 directory example_dataliljencrantz 31 2019-10-03 13:43:12 +0200 file .gitignoreliljencrantz 14420 2020-03-29 03:06:02 +0200 file README.mdliljencrantz 4096 2020-03-27 11:35:25 +0100 directory srcliljencrantz 479 2020-03-24 17:20:00 +0100 file Cargo.tomlliljencrantz 4096 2020-03-29 01:29:52 +0100 directory .gitliljencrantz 8382 2020-03-29 00:54:13 +0100 file todoliljencrantz 75 2020-03-07 17:09:15 +0100 file build.rsliljencrantz 711 2019-10-03 14:19:46 +0200 file crush.iml\n   Of course Crush has an  if command, as well as  for,  while and  loop loops,that can be controlled using  break and  continue.\n crush&gt; help ifif condition:bool if-clause:command [else-clause:command] Conditionally execute a command once. If the condition is true, the if-clause is executed. Otherwise, the else-clause (if specified) is executed. Example: if (./some_file:stat):is_file {echo &#34;It&#39;s a file!&#34;} {echo &#34;It&#39;s not a file!&#34;}for [name=]iterable:(table_stream|table|dict|list) body:command Execute body once for every element in iterable. Example: for (seq) { echo (&#34;Lap {}&#34;:format value) }\n  Obviously, one needs to sometimes call out to external commands. Currently, thefunctionality for doing so in Crush is somewhat primitive. If an internalcommand of a given name does not exist, Crush looks for external commands, andif one is found, it is used. But Crush does not hand over the tty or emulate atty, so interactive terminal programs do not work, and commands that prettifytheir output with escape sequences may fail.\n This part of Crush should be considered a proof of concept, but still, mostnon-interactive commands work as expected:\n   Firstly, subcommands like  git status are mapped into method calls like git:status. That way you do not have to quote the subcommand name, e.g. git &#34;status&#34;.\n Secondly, named arguments are transparently translated into options. Singlecharacter argument names are turned into options with a single hyphen, andmulti-character argument names are turned into GNU style long options withtwo hyphens, e.g.  git:commit m=&#34;hello&#34; is converted into git commit -m &#34;hello&#34; and  git:commit message=&#34;hello&#34; is converted into git commit --message &#34;hello&#34;.\n Thirdly, named arguments with a value of boolean true are simply turned intooptions without a value, so for example  git:commit --a --append (or git:commit a=true append=true for that matter) is converted into git commit -a --append.\n Further work is required when it comes to job control, terminal emulation and variousother integration points.\n    The closure will be serialized, transferred to the remote host usingssh, deserialized, and executed on the remote host (the crush shellmust be in the default path on the remote host). Once the command hasbeen executed and the output of the closure is serialized, transferred,deserialized on the local machine and used as the output of the remote:exec command.\n    Point := (class)Point:__init__ = { |x:float y:float| this:x = x this:y = y}Point:len = { || math:sqrt this:x*this:x + this:y*this:y}Point:__add__ = { |other| Point:new x=(this:x + other:x) y=(this:y + other:y) }p := (Point:new x=1.0 y=2.0)p:len\n Crush supports single inheritance (by passing in the parent to the classcommand). The class command will create a new struct, that contains a methodnamed  new. When called,  new will create a new instance of the class. If the __init__ method is defined,  new will call it, and pass on any parameters toit.\n Add methods by adding them to the class, add member variables by adding them tothe instance ( this) in  __init__.\n  Crush shares the majority of its design goals with PowerShell. I considerPowerShell one of the coolest and most interesting innovations to ever come outof Microsoft. That said, I&#39;ve found using PowerShell in practice to often feelclunky and annoying, especially for interactive use. I also feel that tying ashell to COM objects is a poor fit.\n I wanted to do something similar but with a more streamlined syntax, and withwhat I felt was a more suitable type system.\n  On the surface, Crush looks identical to nushell, but less polished. Crush lackssyntax highlighting, tab completion and has a worse screen rendering. But thatis because the focus of Crush right now is to create a well defined, powerfuland convenient language that supports things like arithmetic operat\n......", "posttime": "2020-08-07 17:58:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u7f16\u7a0b\u8bed\u8a00,command,\u547d\u4ee4", "title": "Crush\uff1a\u540c\u65f6\u4e5f\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u7684\u547d\u4ee4\u884cshell", "title_en": "Crush: A command line shell that is also a powerful modern programming language", "transed": 1, "url": "https://github.com/liljencrantz/crush", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "command", "\u547d\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "4ac609c4612fb4e9e30f3f796e652fbe.jpeg", "infoid": 1016845, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u626b\u63cf\u5230\u540e\u5229\u7528\uff0c\u6709\u8bb8\u591a\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b9e\u73b0\u4f5c\u4e3a\u6e17\u900f\u6d4b\u8bd5\u5458\u7684\u76ee\u6807\u3002\u5982\u679c\u4f60\u5bf9\u7f51\u7edc\u5b89\u5168\u611f\u5174\u8da3\uff0c\u8fd9\u91cc\u6709\u5341\u4e2a\u4f60\u5fc5\u987b\u77e5\u9053\u7684\u5de5\u5177\u3002\n\u4f5c\u4e3a\u4e00\u540d\u7f51\u7edc\u5b89\u5168\u5de5\u7a0b\u5e08\u610f\u5473\u7740\u8981\u5bf9\u6574\u4e2a\u7f51\u7edc\u8d1f\u8d23\u3002\u8fd9\u4e2a\u7f51\u7edc\u5305\u62ec\u8ba1\u7b97\u673a\u3001\u8def\u7531\u5668\u3001\u624b\u673a\u548c\u6240\u6709\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u7684\u8bbe\u5907\u3002\n\u591a\u4e8f\u4e86\u7269\u8054\u7f51\u7684\u5174\u8d77\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u80fd\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u8bbe\u5907\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002\u50cfShodan\u8fd9\u6837\u7684\u670d\u52a1\u8bc1\u660e\u4e86\u5728\u6ca1\u6709\u8db3\u591f\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\u8fde\u63a5\u4e92\u8054\u7f51\u7684\u8bbe\u5907\u662f\u591a\u4e48\u5371\u9669\u3002\n\u8003\u8651\u5230\u4eca\u5929\u7684\u9ed1\u5ba2\u662f\u591a\u4e48\u8001\u7ec3\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u4f9d\u8d56\u6740\u6bd2\u8f6f\u4ef6\u3002\u6b64\u5916\uff0c\u73b0\u5728\u7684\u5927\u591a\u6570\u653b\u51fb\u90fd\u662f\u4ee5\u793e\u4f1a\u5de5\u7a0b\u4e3a\u5207\u5165\u70b9\u3002\u8fd9\u4f7f\u5f97\u7f51\u7edc\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u66f4\u96be\u68c0\u6d4b\u548c\u7f13\u89e3\u8fd9\u4e9b\u653b\u51fb\u3002\n\u65b0\u51a0\u80ba\u708e\u5df2\u7ecf\u6210\u4e3a\u7f51\u7edc\u653b\u51fb\u4e0d\u65ad\u589e\u52a0\u7684\u53e6\u4e00\u4e2a\u4e3b\u8981\u50ac\u5316\u5242\u3002\u5728\u5bb6\u529e\u516c\u7684\u5458\u5de5\u65e0\u6cd5\u8bbf\u95ee\u5de5\u4f5c\u573a\u6240\u4e2d\u76f8\u540c\u7684\u4f01\u4e1a\u7ea7\u5b89\u5168\u67b6\u6784\u3002\n\u8d8a\u6765\u8d8a\u591a\u7684\u7f51\u7edc\u653b\u51fb\u4e5f\u589e\u52a0\u4e86\u4e16\u754c\u5404\u5730\u5bf9\u7f51\u7edc\u5b89\u5168\u4e13\u4e1a\u4eba\u5458\u7684\u9700\u6c42\u3002\u7531\u4e8e\u8fd9\u79cd\u4e0d\u65ad\u589e\u957f\u7684\u9700\u6c42\uff0c\u7f51\u7edc\u5b89\u5168\u5438\u5f15\u4e86\u8bb8\u591a\u4e13\u5bb6\u548c\u521d\u5b66\u8005\u3002\n\u5bf9\u4e8e\u4f60\u4eec\u8fd9\u4e9b\u521a\u63a5\u89e6\u7f51\u7edc\u5b89\u5168\u7684\u4eba\u6765\u8bf4\uff0c\u9ed1\u5ba2\u653b\u51fb\u5e76\u4e0d\u50cf\u7535\u89c6\u4e0a\u770b\u8d77\u6765\u7684\u90a3\u4e48\u9177\u3002\u4f60\u5f88\u6709\u53ef\u80fd\u6700\u7ec8\u4f1a\u88ab\u5173\u8fdb\u76d1\u72f1\u3002\n\u7136\u800c\uff0c\u4f5c\u4e3a\u4e00\u540d\u6e17\u900f\u6d4b\u8bd5\u5458\u6216\u767d\u5e3d\u9ed1\u5ba2\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u662f\u6709\u76ca\u7684\uff0c\u56e0\u4e3a\u4f60\u5c06\u4f7f\u7528\u9ed1\u5e3d\u9ed1\u5ba2(\u574f\u7684)\u73a9\u7684\u76f8\u540c\u7684\u5de5\u5177\u3002\u9664\u4e86\u8fd9\u4e00\u6b21\uff0c\u8fd9\u662f\u5408\u6cd5\u7684\uff0c\u4f60\u7684\u76ee\u6807\u662f\u5e2e\u52a9\u516c\u53f8\u53d1\u73b0\u5b89\u5168\u6f0f\u6d1e\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4fee\u590d\u5b83\u4eec\u3002\n\u5728\u4efb\u4f55\u9886\u57df\u90fd\u5f88\u96be\u627e\u5230\u5408\u9002\u7684\u5de5\u5177\u6765\u5165\u95e8\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u662f\u521d\u5b66\u8005\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u670910\u4e2a\u5de5\u5177\u53ef\u4ee5\u8ba9\u60a8\u5f00\u59cb\u6210\u4e3a\u4e00\u540d\u7f51\u7edc\u5b89\u5168\u5de5\u7a0b\u5e08\u3002\n\u8981\u60f3\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u6e17\u900f\u6d4b\u8bd5\u5458\uff0c\u624e\u5b9e\u7684\u7f51\u7edc\u57fa\u7840\u81f3\u5173\u91cd\u8981\u3002\u6bd5\u7adf\uff0c\u4e92\u8054\u7f51\u662f\u4e00\u5806\u76f8\u4e92\u901a\u4fe1\u7684\u590d\u6742\u7f51\u7edc\u3002\u5982\u679c\u60a8\u662f\u7f51\u7edc\u65b9\u9762\u7684\u65b0\u624b\uff0c\u6211\u63a8\u8350\u8fd9\u4e2a\u6309\u7f51\u7edc\u65b9\u5411\u6392\u5217\u7684\u64ad\u653e\u5217\u8868\u3002\nWireshark\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u7f51\u7edc\u5206\u6790\u5de5\u5177\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u8f6f\u4ef6\uff0c\u4f7f\u60a8\u80fd\u591f\u68c0\u67e5\u5b9e\u65f6\u7f51\u7edc\u4e0a\u7684\u5b9e\u65f6\u6570\u636e\u3002\nWireshark\u53ef\u4ee5\u5c06\u6570\u636e\u5305\u5206\u89e3\u4e3a\u5e27\u548c\u6570\u636e\u6bb5\uff0c\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u6570\u636e\u5305\u4e2d\u4f4d\u548c\u5b57\u8282\u7684\u8be6\u7ec6\u4fe1\u606f\u3002Wireshark\u652f\u6301\u6240\u6709\u4e3b\u8981\u7f51\u7edc\u534f\u8bae\u548c\u5a92\u4f53\u7c7b\u578b\u3002\u5982\u679c\u60a8\u5728\u516c\u5171\u7f51\u7edc\u4e2d\uff0cWireshark\u8fd8\u53ef\u4ee5\u7528\u4f5c\u6570\u636e\u5305\u55c5\u63a2\u5de5\u5177\u3002Wireshark\u53ef\u4ee5\u8bbf\u95ee\u8fde\u63a5\u5230\u8def\u7531\u5668\u7684\u6574\u4e2a\u7f51\u7edc\u3002\n\u591a\u4e8f\u4e86https\uff0cFacebook\u548cTwitter\u7b49\u7f51\u7ad9\u73b0\u5728\u90fd\u88ab\u52a0\u5bc6\u4e86\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u60a8\u53ef\u4ee5\u6355\u83b7\u4ece\u53d7\u5bb3\u8005\u8ba1\u7b97\u673a\u4f20\u8f93\u5230Facebook\u7684\u6570\u636e\u5305\uff0c\u8fd9\u4e9b\u6570\u636e\u5305\u4e5f\u4f1a\u88ab\u52a0\u5bc6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u80fd\u591f\u5b9e\u65f6\u6355\u83b7\u6570\u636e\u5305\u5bf9\u4e8e\u6e17\u900f\u6d4b\u8bd5\u4eea\u6765\u8bf4\u4ecd\u7136\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u5b9e\u7528\u5de5\u5177\u3002\nNmap\u662f\u60a8\u4f5c\u4e3a\u6e17\u900f\u6d4b\u8bd5\u5458\u5f00\u59cb\u804c\u4e1a\u751f\u6daf\u65f6\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u5de5\u5177\u3002Nmap\u662f\u4e00\u6b3e\u975e\u5e38\u68d2\u7684\u7f51\u7edc\u626b\u63cf\u5de5\u5177\uff0c\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u76ee\u6807\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u8fd9\u5305\u62ec\u53d7\u5bb3\u8005\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u5f00\u653e\u7aef\u53e3\u3001\u670d\u52a1\u548c\u64cd\u4f5c\u7cfb\u7edf\u3002\nNMAP\u5728\u6e17\u900f\u6d4b\u8bd5\u4eea\u4e2d\u5f88\u53d7\u6b22\u8fce\uff0c\u539f\u56e0\u6709\u5f88\u591a\u3002\u5b83\u7b80\u5355\u3001\u7075\u6d3b\u3001\u53ef\u6269\u5c55\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u754c\u9762\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u6807\u5fd7\u6765\u9009\u62e9\u4e0d\u540c\u7c7b\u578b\u7684\u626b\u63cf\u3002NMAP\u4e3a\u4e3b\u52a8\u626b\u63cf\u63d0\u4f9b\u7b80\u5355\u7684ping\u626b\u63cf\uff0c\u4ece\u800c\u63d0\u4f9b\u8be6\u7ec6\u7684\u7aef\u53e3\u548c\u670d\u52a1\u4fe1\u606f\u3002\nNmap\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3aZenmap\u7684GUI\u5de5\u5177\uff0c\u5e26\u6709\u9644\u52a0\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u6784\u5efa\u53ef\u89c6\u5316\u7f51\u7edc\u5730\u56fe\uff0c\u5e76\u901a\u8fc7\u4e0b\u62c9\u83dc\u5355\u9009\u62e9\u626b\u63cf\u3002\u5982\u679c\u60a8\u662f\u521d\u5b66\u8005\uff0cZenmap\u662f\u5f00\u59cb\u4f7f\u7528Nmap\u547d\u4ee4\u7684\u597d\u5730\u65b9\u3002\nNetcat\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u67e5\u770b\u548c\u8bb0\u5f55TCP\u6216UDP\u7f51\u7edc\u8fde\u63a5\u4e0a\u7684\u6570\u636e\u3002Netcat\u5145\u5f53\u5141\u8bb8\u7aef\u53e3\u626b\u63cf\u548c\u7aef\u53e3\u4fa6\u542c\u7684\u540e\u7aef\u4fa6\u542c\u7a0b\u5e8f\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7Netcat\u4f20\u8f93\u6587\u4ef6\u6216\u5c06\u5176\u7528\u4f5c\u53d7\u5bb3\u8005\u8ba1\u7b97\u673a\u7684\u540e\u95e8\u3002\u8fd9\u662f\u4e00\u79cd\u6d41\u884c\u7684\u653b\u51fb\u540e\u5229\u7528\u5de5\u5177\uff0c\u7528\u4e8e\u5728\u653b\u51fb\u6210\u529f\u540e\u5efa\u7acb\u8fde\u63a5\u3002Netcat\u4e5f\u662f\u53ef\u6269\u5c55\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u80fd\u529b\u4e3a\u66f4\u5927\u6216\u5197\u4f59\u7684\u4efb\u52a1\u6dfb\u52a0\u811a\u672c\u3002\n\u5c3d\u7ba1Netcat\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u5b83\u7684\u793e\u533a\u5e76\u6ca1\u6709\u79ef\u6781\u7ef4\u62a4\u5b83\u3002Nmap\u56e2\u961f\u6784\u5efa\u4e86\u540d\u4e3aNCAT\u7684\u66f4\u65b0\u7248Netcat\uff0c\u5176\u529f\u80fd\u5305\u62ec\u5bf9SSL\u3001IPv6\u3001SOCKS\u548cHTTP\u4ee3\u7406\u7684\u652f\u6301\u3002\n\u5982\u679c\u6709\u4e00\u79cd\u5de5\u5177\u662f\u6211\u559c\u6b22\u7684\uff0c\u90a3\u5c31\u662fMetasploit\u3002Metasploit\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6846\u67b6\uff0c\u60a8\u53ef\u4ee5\u5728\u6574\u4e2a\u6e17\u900f\u6d4b\u8bd5\u751f\u547d\u5468\u671f\u4e2d\u4f7f\u7528\u5b83\u3002\nMetasploit\u5305\u542b\u5bf9\u5e38\u89c1\u6f0f\u6d1e\u548c\u66b4\u9732\u6570\u636e\u5e93\u4e2d\u7684\u5927\u591a\u6570\u6f0f\u6d1e\u7684\u5229\u7528\u3002\u4f7f\u7528Metasploit\uff0c\u60a8\u53ef\u4ee5\u5c06\u6709\u6548\u8d1f\u8f7d\u53d1\u9001\u5230\u76ee\u6807\u7cfb\u7edf\uff0c\u5e76\u901a\u8fc7\u547d\u4ee4\u884c\u754c\u9762\u8bbf\u95ee\u5b83\u3002\nMetasploit\u975e\u5e38\u5148\u8fdb\uff0c\u9664\u4e86\u5229\u7528\u6f0f\u6d1e\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u7aef\u53e3\u626b\u63cf\u3001\u679a\u4e3e\u548c\u811a\u672c\u7b49\u4efb\u52a1\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528Ruby\u7f16\u7a0b\u8bed\u8a00\u6784\u5efa\u548c\u6d4b\u8bd5\u60a8\u81ea\u5df1\u7684\u6f0f\u6d1e\u3002\nMetasploit\u57282009\u5e74\u4e4b\u524d\u4e00\u76f4\u662f\u5f00\u6e90\u7684\uff0c\u4e4b\u540eRapid7\u6536\u8d2d\u4e86\u8be5\u4ea7\u54c1\u3002\u60a8\u4ecd\u7136\u53ef\u4ee5\u514d\u8d39\u8bbf\u95ee\u793e\u533a\u7248\uff0c\u5e76\u4f7f\u7528\u5176\u6240\u6709\u529f\u80fd\u3002\nMetasploit\u66fe\u7ecf\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u540d\u4e3aArmitage\u7684\u57fa\u4e8eJava\u7684GUI\u4e8e2013\u5e74\u53d1\u5e03\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u653b\u51fb\u6027\u5b89\u5168\u6709\u4e00\u4e2a\u5173\u4e8eMetasploit\u7684\u6df1\u5165\u6559\u7a0b\u3002\nNikto\u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u80fd\u591f\u6267\u884c\u5e7f\u6cdb\u7684Web\u670d\u52a1\u5668\u626b\u63cf\u3002Nikto\u53ef\u4ee5\u5e2e\u52a9\u60a8\u626b\u63cf\u6709\u5bb3\u6587\u4ef6\u3001\u9519\u8bef\u914d\u7f6e\u3001\u8fc7\u65f6\u7684\u8f6f\u4ef6\u5b89\u88c5\u7b49\u3002\n\u5b83\u8fd8\u68c0\u67e5\u662f\u5426\u5b58\u5728\u591a\u4e2a\u7d22\u5f15\u6587\u4ef6\u3001HTTP\u670d\u52a1\u5668\u914d\u7f6e\u548c\u5b89\u88c5\u7684Web\u670d\u52a1\u5668\u8f6f\u4ef6\u3002\nNikto\u662f\u4e00\u822cWeb\u670d\u52a1\u5668\u5b89\u5168\u5ba1\u8ba1\u7684\u9996\u9009\u5de5\u5177\u3002\u5c3c\u514b\u6258\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u4e0d\u5b89\u9759\u3002\u60a8\u53ef\u4ee5\u76f8\u5f53\u5feb\u5730\u626b\u63cf\u5927\u578bWeb\u670d\u52a1\u5668\uff0c\u4f46\u662f\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u4f1a\u5f88\u5bb9\u6613\u5730\u53d1\u73b0\u8fd9\u4e9b\u626b\u63cf\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u6267\u884c\u9690\u853d\u626b\u63cf\uff0c\u53ef\u4ee5\u652f\u6301\u53cdIDS\u63d2\u4ef6\u3002\n\u5f53\u8c08\u5230\u7b14\u6d4b\u8bd5Web\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cBurpSuite\u4e3a\u60a8\u63d0\u4f9b\u4e86\u6240\u6709\u7684\u7b54\u6848\u3002BurpSuite\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u5957\u9002\u7528\u4e8e\u5404\u79cdWeb\u5e94\u7528\u7a0b\u5e8f\u7b14\u8bd5\u7528\u4f8b\u7684\u4e00\u4f53\u5316\u5de5\u5177\u3002\u5b83\u4e5f\u662f\u4e13\u4e1a\u7f51\u7edc\u5e94\u7528\u5b89\u5168\u7814\u7a76\u4eba\u5458\u548c\u6f0f\u6d1e\u8d4f\u91d1\u730e\u4eba\u7684\u70ed\u95e8\u5de5\u5177\u3002\nBurpSuite\u7684\u5de5\u5177\u534f\u540c\u5de5\u4f5c\uff0c\u652f\u6301\u6574\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\u6d4b\u8bd5\u751f\u547d\u5468\u671f\u3002\u4ece\u626b\u63cf\u5230\u653b\u51fb\uff0cBurpSuite\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5165\u4fb5Web\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6240\u6709\u5de5\u5177\u3002\nBurp Suite\u7684\u4e3b\u8981\u529f\u80fd\u4e4b\u4e00\u662f\u5176\u62e6\u622aHTTP\u8bf7\u6c42\u7684\u80fd\u529b\u3002HTTP\u8bf7\u6c42\u901a\u5e38\u4ece\u60a8\u7684\u6d4f\u89c8\u5668\u4f20\u5230Web\u670d\u52a1\u5668\uff0c\u7136\u540eWeb\u670d\u52a1\u5668\u53d1\u56de\u54cd\u5e94\u3002\u4f7f\u7528Burp Suite\uff0c\u60a8\u53ef\u4ee5\u6267\u884c\u4e2d\u95f4\u4eba\u64cd\u4f5c\u6765\u64cd\u4f5c\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\nBurpusite\u62e5\u6709\u51fa\u8272\u7684\u7528\u6237\u754c\u9762\u3002BurpSuite\u8fd8\u63d0\u4f9b\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u8ba9\u60a8\u7684\u5de5\u4f5c\u66f4\u5feb\u3001\u66f4\u9ad8\u6548\u3002\n\u5728\u5927\u591a\u6570\u7cfb\u7edf\u4e2d\uff0c\u5bc6\u7801\u4ecd\u7136\u662f\u8eab\u4efd\u9a8c\u8bc1\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u5373\u4f7f\u60a8\u6210\u529f\u8fdb\u5165\u670d\u52a1\u5668\u6216\u6570\u636e\u5e93\uff0c\u4e5f\u5fc5\u987b\u89e3\u5bc6\u5bc6\u7801\u624d\u80fd\u83b7\u5f97\u6743\u9650\u63d0\u5347\u3002\n\u5f00\u819b\u624b\u7ea6\u7ff0\u662f\u4e00\u4e2a\u7528\u4e8e\u7834\u89e3\u5bc6\u7801\u7684\u7b80\u5355\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u8d85\u5feb\u7684\u5bc6\u7801\u7834\u89e3\u7a0b\u5e8f\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u8bcd\u8868\u3002\u5b83\u53ef\u4ee5\u9488\u5bf9\u5927\u591a\u6570\u7c7b\u578b\u7684\u52a0\u5bc6\u65b9\u6cd5\u8fd0\u884c\uff0c\u5982MD5\u548cSHA\u3002\nAircrack-ng\u662f\u4e00\u7ec4\u5e2e\u52a9\u60a8\u4f7f\u7528\u65e0\u7ebf\u7f51\u7edc\u7684\u5de5\u5177\u3002AirCrack\u7531\u53ef\u4ee5\u6355\u83b7\u65e0\u7ebf\u7f51\u7edc\u3001\u7834\u89e3WPA\u5bc6\u94a5\u3001\u6ce8\u5165\u6570\u636e\u5305\u7b49\u5de5\u5177\u7ec4\u6210\u3002\nAirCrack\u5305\u542b\u7834\u89e3WiFi\u5bc6\u7801\u548c\u6355\u83b7\u65e0\u7ebf\u6d41\u91cf\u7684\u4f18\u79c0\u7b97\u6cd5\u3002\u5b83\u8fd8\u53ef\u4ee5\u89e3\u5bc6\u52a0\u5bc6\u7684\u6570\u636e\u5305\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u5957\u5b8c\u6574\u7684\u65e0\u7ebf\u6e17\u900f\u6d4b\u8bd5\u5de5\u5177\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528AirCrack\u6765\u76d1\u89c6\u3001\u653b\u51fb\u548c\u8c03\u8bd5\u6240\u6709\u7c7b\u578b\u7684\u65e0\u7ebf\u7f51\u7edc\u3002\nNessus\u662f\u6d41\u884c\u7684\u4f01\u4e1a\u6f0f\u6d1e\u626b\u63cf\u7a0b\u5e8f\u3002Nessus\u88ab\u6784\u5efa\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u6f0f\u6d1e\u5206\u6790\u548c\u62a5\u544a\u5de5\u5177\u3002\u867d\u7136\u60a8\u53ef\u4ee5\u4f7f\u7528Nmap\u626b\u63cf\u548c\u67e5\u627e\u7aef\u53e3\u6216\u670d\u52a1\uff0c\u4f46Nessus\u4f1a\u544a\u8bc9\u60a8\u6f0f\u6d1e\u5217\u8868\u4ee5\u53ca\u5982\u4f55\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u3002\nNessus\u62e5\u6709\u51fa\u8272\u7684\u7528\u6237\u754c\u9762\u3001\u6570\u4ee5\u4e07\u8ba1\u7684\u63d2\u4ef6\uff0c\u5e76\u652f\u6301\u5d4c\u5165\u5f0f\u811a\u672c\u3002Nessus\u53d7\u5230\u4f01\u4e1a\u7684\u9752\u7750\uff0c\u56e0\u4e3a\u5b83\u5e2e\u52a9\u516c\u53f8\u5ba1\u6838\u5404\u79cd\u5408\u89c4\u6027\uff0c\u5982PCI\u548cHIPPA\u3002Nessus\u8fd8\u4f1a\u544a\u8bc9\u60a8\u6f0f\u6d1e\u7684\u4e25\u91cd\u7a0b\u5ea6\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u76f8\u5e94\u5730\u5173\u6ce8\u8fd9\u4e9b\u5a01\u80c1\u3002\nNessus\u4e0d\u662f\u514d\u8d39\u8f6f\u4ef6\uff0c\u4f46\u63d0\u4f9b\u6709\u9650\u7684\u514d\u8d39\u5bb6\u5ead\u7248\u3002Nessus\u6709\u4e00\u4e2a\u540d\u4e3aOpen-Vas\u7684\u5f00\u6e90\u66ff\u4ee3\u65b9\u6848\uff0c\u5b83\u63d0\u4f9b\u4e0eNessus\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\nSnort\u662f\u4e00\u6b3e\u7528\u4e8e\u68c0\u6d4b\u548c\u9632\u6b62\u7f51\u7edc\u5165\u4fb5\u7684\u5f00\u6e90\u8f6f\u4ef6\u3002\u5b83\u53ef\u4ee5\u6267\u884c\u5b9e\u65f6\u901a\u4fe1\u91cf\u5206\u6790\u5e76\u8bb0\u5f55\u4f20\u5165\u7684\u6570\u636e\u5305\uff0c\u4ee5\u68c0\u6d4b\u7aef\u53e3\u626b\u63cf\u3001\u8815\u866b\u548c\u5176\u4ed6\u53ef\u7591\u884c\u4e3a\u3002\n\u4e0e\u6b64\u5217\u8868\u4e2d\u7684\u5927\u591a\u6570\u5176\u4ed6\u5de5\u5177\u76f8\u6bd4\uff0cSnort\u7528\u4e8e\u9632\u5fa1\u3002\u4f46\u662f\uff0cSnort\u901a\u8fc7\u8bb0\u5f55\u653b\u51fb\u8005\u7684\u6d3b\u52a8\u6765\u5e2e\u52a9\u60a8\u4e86\u89e3\u653b\u51fb\u8005\u7684\u65b9\u6cd5\u3002\u60a8\u8fd8\u53ef\u4ee5\u6784\u5efaDNS\u5929\u5751\u6765\u91cd\u5b9a\u5411\u653b\u51fb\u8005\u6d41\u91cf\uff0c\u540c\u65f6\u901a\u8fc7Snort\u67e5\u627e\u653b\u51fb\u8f7d\u4f53\u3002\nSnort\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8eWeb\u7684GUI\uff0c\u79f0\u4e3aBASE(\u57fa\u672c\u5206\u6790\u548c\u5b89\u5168\u5f15\u64ce)\u3002Base\u63d0\u4f9b\u4e86\u4e00\u4e2aWeb\u524d\u7aef\u6765\u67e5\u8be2\u548c\u5206\u6790\u6765\u81eaSnort\u7684\u8b66\u62a5\u3002\n\u5728\u4eca\u5929\u7684\u7f51\u7edc\u4e16\u754c\u4e2d\uff0c\u4ece\u653f\u5e9c\u673a\u6784\u5230\u94f6\u884c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5c06\u5173\u952e\u4fe1\u606f\u5b58\u50a8\u5728\u4e91\u4e2d\u3002\u7f51\u7edc\u653b\u51fb\u751a\u81f3\u6709\u53ef\u80fd\u4f7f\u6574\u4e2a\u56fd\u5bb6\u9677\u5165\u762b\u75ea\u3002\u56e0\u6b64\uff0c\u4fdd\u62a4\u8fd9\u4e9b\u7f51\u7edc\u4e0d\u662f\u53ef\u9009\u7684\u9009\u62e9\uff0c\u800c\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\n\u65e0\u8bba\u60a8\u662f\u521d\u5b66\u8005\u8fd8\u662f\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7f51\u7edc\u5b89\u5168\u5de5\u7a0b\u5e08\uff0c\u60a8\u90fd\u4f1a\u53d1\u73b0\u8fd9\u5341\u4e2a\u5de5\u5177\u662f\u65e0\u4ef7\u7684\u3002\u795d\u4f60\u5728\u6210\u4e3a\u4e00\u540d\u6210\u529f\u7684\u6e17\u900f\u6d4b\u8bd5\u5458\u7684\u65c5\u9014\u4e2d\u597d\u8fd0\u3002\u4ece\u5b89\u5168\u5de5\u5177\u76ee\u5f55\u4e86\u89e3\u66f4\u591a\u5de5\u5177\u3002", "note_en": "From scanning to post-exploitation, there are numerous tools that help you accomplish your goal as a penetration tester. Here are ten tools you must know if you are into cybersecurity.\n  Being a cybersecurity engineer means being responsible for an entire network. This network includes computers, routers, mobiles, and everything that connects to the internet.\n Thanks to the rise of  Internet of Things, we see more and more devices connecting to the internet every day. Services like  Shodan are proof of how dangerous it is to have an internet-connected device without adequate security.\n We cannot rely on Antivirus software either, given how sophisticated today\u2019s hackers are. Besides, most attacks nowadays use  social engineering as their entry point. This makes it even harder for cybersecurity professionals to detect and mitigate these attacks.\n Covid-19 has become another major catalyst for growing cyber-attacks. Employees working from home don\u2019t have access to the same enterprise-level security architectures in their workplace.\n Growing cyber-attacks have also increased the demand for cybersecurity professionals around the world. Due to this increasing demand, Cybersecurity has been attracting a lot of experts as well as beginners.\n For those of you who are new to Cybersecurity, hacking is not as cool as it looks on TV. And there is a high probability that you will end up in jail.\n However, being a penetration tester or a white hat hacker is different \u2014 and beneficial \u2014 since you will be playing with the same tools black hat hackers (the bad ones) play with. Except for this time, it\u2019s legal, and your goal is to help companies discover security vulnerabilities so they can fix them.\n  It is always hard to find the right tools to get started in any domain, especially if you are a beginner. So here are 10 tools to get you started as a cybersecurity engineer.\n    Having a solid foundation in Networking is essential to becoming a good penetration tester. After all, the internet is a bunch of complex networks that communicate with each other. If you are new to Networking, I recommend  this playlist by Network Direction.\n Wireshark is the world\u2019s best network analyzer tool. It is an open-source software that enables you to inspect real-time data on a live network.\n Wireshark can dissect packets of data into frames and segments giving you detailed information about the bits and bytes in a packet. Wireshark supports all major network protocols and media types. Wireshark can also be used as a packet sniffing tool if you are in a public network. Wireshark will have access to the entire network connected to a router.\n  Sites like Facebook and Twitter are encrypted now, thanks to https. This means that even though you can capture packets from a victim computer in transit to Facebook, those packets will be encrypted. Still, being able to capture data packets in realtime is an important utility for a penetration tester.\n   Nmap is the first tool you will come across when you begin your career as a penetration tester. Nmap is a fantastic network scanning tool that can give you detailed information about a target. This includes open ports, services, and the operating system running on the victim\u2019s computer.\n Nmap is popular among penetration testers for many reasons. It is simple, flexible, and extensible. It offers a simple command-line interface where you can add a few flags to choose different types of scans. Nmap offers simple ping scans to aggressive scans that provide detailed ports and service information.\n  Nmap also provides a GUI tool called Zenmap with added utilities. You can build visual network maps and choose scans via dropdowns. Zenmap is a great place to start playing with Nmap commands if you are a beginner.\n     Netcat is a simple but powerful tool that can view and record data on a TCP or UDP network connections. Netcat functions as a back-end listener that allows for port scanning and port listening.\n You can also transfer files through Netcat or use it as a  backdoor to your victim machine. This makes is a popular post-exploitation tool to establish connections after successful attacks. Netcat is also extensible given its capability to add scripting for larger or redundant tasks.\n In spite of the popularity of Netcat, it was not maintained actively by its community. The Nmap team built an updated version of Netcat called  Ncat with features including support for SSL, IPv6, SOCKS, and HTTP proxies.\n   If there is one tool I love, its Metasploit. Metasploit is not just a tool, but a complete framework that you can use during an entire penetration testing lifecycle.\n Metasploit contains exploits for most of the vulnerabilities in the  Common Vulnerabilities and Exposure database. Using Metasploit, you can send payloads to the target system and gain access to it through a command-line interface.\n Metasploit is very advanced with the ability to do tasks such as port scanning, enumeration, and scripting in addition to exploitation. You can also build and test your own exploit using the Ruby programming language.\n Metasploit was open-source till 2009 after which Rapid7 acquired the product. You can still access free community edition for free and use all its features.\n  Metasploit used to be a purely command-line tool. A Java-based GUI called Armitage was released in 2013. Offensive Security has an  in-depth tutorial on Metasploit if you are interested.\n   Nikto is an open-source tool that is capable of performing extensive web server scans. Nikto can help you scan for harmful files, misconfigurations, outdated software installations, etc.\n It also checks for the presence of multiple index files, HTTP server configurations, and the installed web server software.\n Nikto is the preferred tool for general web server security audits. Nikto is fast, but not quiet. You can scan a large web server pretty quickly but intrusion detection systems will easily pick up these scans. However, there is support for anti-IDS plugins in case you want to perform stealthy scans.\n   When it comes to pen-testing web applications, Burpsuite has all the answers for you. BurpSuite aims to be an all in one set of tools for a variety of web application pen-testing use cases. It is also a popular tool among professional web app security researchers and bug bounty hunters.\n Burpsuite\u2019s tools work together to support the entire web application testing lifecycle. From scanning to exploitation, Burpsuite offers all the tools you need for breaking into web applications.\n One of Burp Suite\u2019s main features is its ability to intercept HTTP requests. HTTP requests usually go from your browser to a web server and then the web server sends a response back. With Burp Suite, you can perform Man-in-the-middle operations to manipulate the request and response.\n Burpusite has an excellent user interface. Burpsuite also has tools for automation to make your work faster and more efficient.\n    Passwords are still the de-facto standard of authentication in most systems. Even if you successfully get into a server or a database you will have to decrypt the password to gain  privilege escalation.\n John the Ripper is a simple tool used for cracking passwords. It is a super-fast password cracker with support for custom wordlists. It can run against most types of encryption methods like MD5 and SHA.\n   Aircrack-ng is a set of tools that help you to work with wireless networks. Aircrack comprises of tools that can capture wireless networks, crack WPA keys, inject packets, etc.\n   Aircrack contains excellent algorithms for cracking WiFi passwords and to capture wireless traffic. It can also decrypt encrypted packets, making it a complete suite of tools for wireless penetration testing. In short, you can use Aircrack for monitoring, attacking, and debugging all types of wireless networks.\n   Nessus is a popular enterprise vulnerability scanner. Nessus is built to be a complete vulnerability analysis and reporting tool. While you can scan and find ports or services using Nmap, Nessus will tell you the list of vulnerabilities and how they can be exploited.\n Nessus has an excellent user interface, tens of thousands of plugins, and supports embedded scripting. Nessus is favored by enterprises since it helps companies audit for various compliances like PCI and HIPPA. Nessus will also tell you the severity of the vulnerabilities so that you can focus on those threats accordingly.\n  Nessus is not a free software but offers a limited free home edition. Nessus has an open-source alternative called  Open-Vas that offers similar features to Nessus.\n   Snort is an open-source software for detecting and preventing intrusions in a network. It can perform live traffic analysis and log incoming packets to detect port scans, worms, and other suspicious behavior.\n Snort is used for defense compared to most of the other tools in this list. However, snort helps you understand the attacker\u2019s methods by logging their activity. You can also build  DNS sinkholes to redirect attacker traffic while finding attack vectors through Snort.\n Snort also has a web-based GUI called BASE (Basic Analysis and Security Engine). BASE provides a web front-end to query and analyze the alerts coming from Snort.\n  In today\u2019s networked world, everyone from government agencies to banks stores critical information in the cloud. Cyber-attacks even have the potential to cripple an entire nation. Hence, protecting these networks is not an optional choice, but an absolute necessity.\n Whether you are a beginner or an experienced cybersecurity engineer, you will find these ten tools invaluable. Good luck on your journey to becoming a successful penetration tester. Learn more tools from the  Security Tools Directory.", "posttime": "2020-08-07 15:20:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5de5\u7a0b\u5e08,cybersecurity,\u5de5\u5177", "title": "\u4f5c\u4e3a\u7f51\u7edc\u5b89\u5168\u5de5\u7a0b\u5e08\u5e94\u8be5\u77e5\u9053\u7684\u5de5\u5177", "title_en": "Tools You Should Know as a Cybersecurity Engineer", "transed": 1, "url": "https://medium.com/manishmshiva/10-tools-you-should-know-as-a-cybersecurity-engineer-3b9809c7bbc2", "via": "", "real_tags": ["\u5de5\u7a0b\u5e08", "\u5de5\u5177"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1016844, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00b7NetBSD FriendlyARM\u7684NanoPI NEO2\u81ea2018\u5e74\u4ee5\u6765\u4e00\u76f4\u670d\u52a1\u826f\u597d\uff0c\u662f\u6211\u6d4b\u8bd5OpenBSD/arm64\u76f8\u5173\u4e8b\u7269\u7684\u673a\u5668\u3002\n\u5f53NetBSD/evbarm\u7ec8\u4e8e\u57282\u6708\u4efd\u53d1\u5e03\u7684NetBSD 9.0\u4e2d\u83b7\u5f97\u4e86\u5bf9AArch64\u7684\u652f\u6301\u65f6\uff0c\u6211\u51b3\u5b9a\u5728\u8fd9\u4e2a\u8bbe\u5907\u4e0a\u8bd5\u4e00\u8bd5\u3002\u4e3b\u677f\u53ea\u6709512MB\u7684RAM\uff0c\u8fd9\u624d\u662fNetBSD\u771f\u6b63\u7684\u4eae\u70b9\u3002\u81ea\u4ecejmcneill@\u73b0\u5728\u4e3a\u5305\u62ecNanoPI NEO2\u5728\u5185\u7684\u5404\u79cd\u8bbe\u5907\u63d0\u4f9b\u53ef\u5f15\u5bfc\u7684\u624b\u81c2\u56fe\u50cf\u4ee5\u6765\uff0c\u4e8b\u60c5\u53d8\u5f97\u5bb9\u6613\u591a\u4e86\u3002\n\u7b2c\u4e00\u6b21\u5f15\u5bfc\u65f6\uff0c\u7cfb\u7edf\u5c06\u8c03\u6574\u6587\u4ef6\u7cfb\u7edf\u7684\u5927\u5c0f\u4ee5\u81ea\u52a8\u6269\u5c55\u5230SD\u5361\u7684\u5927\u5c0f\u3002\n\u6b63\u5728\u589e\u957fld0 MBR\u5206\u533a#1(1052MB-&gt\uff1b60810MB)\u6b63\u5728\u589e\u957fld0\u78c1\u76d8\u6807\u7b7e(1148MB-&gt\uff1b60906MB)\u8c03\u6574\u5927\u5c0f//dev/rld0a\uff1a\u589e\u957fCG|*|69%\u3002\n\u7cfb\u7edf\u542f\u52a8\u5e76\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8f6e\u7ec4\u4e2d\u6dfb\u52a0\u5e38\u89c4\u7528\u6237\uff1a\n\u4ece\u90a3\u91cc\u6211\u4eec\u4e0d\u518d\u9700\u8981\u4e32\u884c\u63a7\u5236\u53f0\uff0c\u53ef\u4ee5\u4f7f\u7528SSH\u8fde\u63a5\u5230\u8bbe\u5907\u3002\nNetBSD\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u6b64\u67b6\u6784\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\uff0c\u5b89\u88c5\u548c\u914d\u7f6epkgin\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n\u57fa\u672c\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528sysupgrade\u4fdd\u6301\u6700\u65b0\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7pkgin\u5b89\u88c5\uff1a\n\u6700\u540e\uff0c\u8be5\u8bbe\u5907\u6709\u4e24\u4e2a\u7528\u6237\u53ef\u63a7\u7684LED\uff0c\u53ef\u4ee5\u4f7f\u7528sysctl\u5f00\u5173\u3002\n[1.000000]\u7248\u6743\u6240\u6709(C)1996\u5e74\u30011997\u5e74\u30011998\u5e74\u30011999\u5e74\u30012000\u5e74\u30012001\u5e74\u30012002\u5e74\u30012003\u5e74\u30012004\u5e74\u30012005\u5e74\u3001[1.000000]2006\u5e74\u30012007\u5e74\u30012008\u5e74\u30012009\u5e74\u30012010\u5e74\u30012011\u5e74\u30012012\u5e74\u30012013\u5e74\u30012014\u5e74\u30012015\u5e74\u30012016\u5e74\u30012017\u5e74\u3001[1.000000]2018\u5e74\u30012019\u5e74\u30012020\u5e74\u3002\u7248\u6743\u6240\u6709\u3002[1.000000]\u7248\u6743\u6240\u6709(C)1982\u5e74\u30011986\u5e74\u30011989\u5e74\u30011991\u5e74\u30011993\u5e74[1.000000]\u52a0\u5dde\u5927\u5b66\u8463\u4e8b\u4f1a\u3002\u7248\u6743\u6240\u6709\u3002[1.000000]NetBSD9.0_STRATE(GENERIC64)#0\uff1aWed Aug 5 15\uff1a20\uff1a21UTC 2020[1.000000]mkrepro@mkrepro.NetBSD.org:/usr/src/sys/arch/evbarm/compile/GENERIC64[1.000000]\u603b\u5185\u5b58=497MB[1.000000]\u53ef\u7528\u5185\u5b58=479MB[1.000000]\u65f6\u95f4\u8ba1\u6570\u5668\uff1a\u65f6\u95f4\u8ba1\u6570\u5668\u6bcf10.000\u6beb\u79d2\u6ef4\u7b54\u4e00\u6b21[1.000000]armfdt0(\u6839)[1.000000]armfdt0\u5904\u7684simplebus0\uff1aFriendlyARM NanoPi neo 2[1.000000]simplebus1\u3002\u5728simplebus0[1.000000]simplebus2\u5728simplebus0[1.000000]cpus0\u5728simplebus0[1.000000]simplebus3\u5728simplebus0[1.000000]psc0\u5728simplebus0\uff1aPSCI1.1[1.000000]cpu0\u5728cpus0\uff1acortex-A53r0p4(Cortex V8-A\u6838)[1.000000]cpu0\uff1a\u5c01\u88c50\uff0c\u6838\u5fc30\uff0cSMT0[1.000000]CPU0\uff1aIC\u4f7f\u80fd\uff0cDC\u4f7f\u80fd\uff0cEL0/EL1\u5806\u6808\u5bf9\u51c6\u68c0\u67e5\u4f7f\u80fd[1.000000]CPU0\uff1a\u9ad8\u901f\u7f13\u5b58\u5199\u56de\u533a\u7ec416B\uff0c\u72ec\u5360\u4fdd\u7559\u533a\u7ec416B[1.000000]CPU0\uff1aDCACHE\u884c64\uff0cICache\u7ebf64[1.000000]CPU0\uff1aL1 32KB/64B\u53cc\u5411\u8bfb\u5206\u914dVipt\u6307\u4ee4\u9ad8\u901f\u7f13\u5b58[1.000000]CPU0\uff1aL1 32KB/64B 4\u8def\u56de\u5199\u8bfb-\u5206\u914d\u5199-\u5206\u914dPIPT\u6570\u636e\u9ad8\u901f\u7f13\u5b58[1.000000]CPU0\uff1aL2 512KB/64B 16\u8def\u56de\u5199\u8bfb-\u5206\u914d\u5199-\u5206\u914dPIPT\u7edf\u4e00\u9ad8\u901f\u7f13\u5b58[1.000000]CPU0\uff1aRevit ID=0x180\uff0cPMCv3\uff0c4k\u8868\uff0c64k\u8868\uff0c16K\u8868\u3002\u878d\u5408\u76f8\u4e58-\u5c06[1.000000]CPU1\u76f8\u52a0\u5230CPU0\uff1aCORCEL-A53 r0p4(Cortex V8-A\u6838\u5fc3)[1.000000]CPU1\uff1aPackage 0\uff0cCore 1\uff0cSMT 0[1.000000]CPU2\u5728CPU0\uff1aCorest-A53 R0p4(Cortex V8-A\u6838\u5fc3)[1.000000]CPU2\uff1aPackage 0\uff0cCore 2\uff0cSMT 0[1.000000]CPU3\u5728CPU0\uff1aCorest-A53 R0p4(Cortex V8-A\u6838\u5fc3)[1.000000]CPU2\uff1aPackage 0\uff0cCore 2\uff0cSMT 0[1.000000]CPU3\u5728CPU0\uff1aCorest-A53 R0p4(Cortex V4\u3002SIME\u603b\u7ebf1\u5904\u7684SMT0[1.000000]GIC0\uff1aGIC0\u5904\u7684GIC[1.000000]ARMIC0\uff1a\u901a\u7528\u4e2d\u65ad\u63a7\u5236\u5668\uff0c224\u6e90(\u6709\u6548)[1.000000]ARGIC0\uff1a16\u4f18\u5148\u7ea7\uff0c192SPI\uff0c7 PPI\uff0c\u7b80\u5355\u603b\u7ebf2\uff1a24000000 Hz\u56fa\u5b9a\u65f6\u949f(Os24M)[1.000000]sunxisramc0\u7b80\u5355\u603b\u7ebf2\uff1a32768 Hz\u56fa\u5b9a\u65f6\u949f(EXT_OSC32K)[1.000000]gtmr0\u7b80\u5355\u603b\u7ebf0\uff1a\u901a\u7528\u5b9a\u65f6\u5668[1.000000]gtmr0\uff1a\u4e2d\u65adgic irq 27[1.000000]armgtmr0\u7b80\u5355\u603b\u7ebf0\uff1a\u901a\u7528\u5b9a\u65f6\u5668[1.000000]gtmr0\uff1a\u4e2d\u65adgic irq 27[1.000000]armgtmr0\u7b80\u5355\u603b\u7ebf0\uff1a\u901a\u7528\u5b9a\u65f6\u5668[1.000000]gtmr0\uff1a\u4e2d\u65adgic irq 27[1.000000]armgtmr0 at gtmr0\uff1a\u901a\u7528\u8ba1\u65f6\u56680\uff1a\u901a\u7528\u5b9a\u65f6\u5668[1.000000]gtmr0\uff1a\u4e2d\u65adgic irq 27[1.000000]armgtmr0\u3002\u80f3\u818atmr0&#34\uff1b\u7b80\u5355\u603b\u7ebf1\u7684\u9891\u738724000000 Hz\u8d28\u91cf500[1.000010]sun8ih3ccu0\uff1ah3 ccu[1.000010]sun8ih3rccu0\u7b80\u5355\u603b\u7ebf1\uff1ah3 prcm ccu[1.000010]sunxide2ccu0\u7b80\u5355\u603b\u7ebf1\uff1ade2 cu[1.000010]sunxigpio0\u7b80\u5355\u603b\u7ebf1\uff1apio[1.000010]gpio0 sunxigpio0\uff1a94\u5f15\u811a[1.000010]sunxigpio0\uff1a\u4e2d\u65ad\u3002\u7b80\u5355\u603b\u7ebf0\u5904\u7684\u8c03\u8282\u56681\uff1ausb0-vbus[1.000010]\u7b80\u5355\u603b\u7ebf0\u5904\u7684\u8c03\u8282\u56682\uff1agmac-3v3[1.000010]sun6idma0\u5904\u7684\u7b80\u5355\u603b\u7ebf1\uff1aDMA\u63a7\u5236\u5668(12\u4e2a\u901a\u9053)[1.000010]sun6idma0\uff1a\u7b80\u5355\u603b\u7ebf1\u5904\u7684GICIRQ82[1.000010]com0\u4e0a\u7684\u4e2d\u65ad\uff1ans16550a\uff0cWorking FIFO[1.000010]com0\uff1aConsole[1.000010]com0\uff1a\u5728Simplebus1\u4e0a\u4e2d\u65adGICirq 32[1.000010]sunxiusbphy0\uff1aUSBphy[1.000010]simplebus1\u4e0a\u7684sunxihdmiphy0\uff1aHDMIPHY[1.000010]simplebus1\u4e0a\u7684sunximixer0\uff1a\u663e\u793a\u5f15\u64ce\u6df7\u5408\u5668[1.000010]simplebus1\u4e0a\u7684sunxilcdc0\uff1aSimplebus1\u4e0a\u7684sunxilcdc0\uff1aGIC\u4e0a\u7684\u4e2d\u65ad\uff1atcon1[1.000010]sunxilcdc0\uff1a\u4e2d\u65ad\u3002.000010]emac0\uff1a\u5728eMAC0 PHY 7\uff1aRTL8211E 1000BASE-T\u5a92\u4f53\u63a5\u53e3[1.000010]rgephy0\uff1a10baseT\u7684GIC irq114[1.000010]rgephy0\u4e0a\u4e2d\u65ad\uff0c10baseT-fdx\uff0c100baseTx\uff0c100baseTx-fdx\uff0c1000baseT\uff0c1000baseT-fdx\uff0csimplebus1\uff1ah3\u97f3\u9891\u7f16\u89e3\u7801\u5668(\u6a21\u62df\u90e8\u5206)[1.000010]sunximmc0\u5728simplebus1\uff1asd/mmc\u63a7\u5236\u5668[1.000010]sunximmc0\uff1a\u5728simplebus1\uff1a&#39\u4e2d\u65adGIC irq 92[1.000010]motg0\uff1bOTG&#39\uff1b\u6a21\u5f0f\u4e0d\u53d7\u652f\u6301[1.000010]ehci0 at simplebus1\uff1aehci[1.000010]ehci0\uff1a\u4e2d\u65adGIC irq104[1.000010]ehci0\uff1aehci version1.0[1.000010]ehci0\uff1a1\u914d\u5957\u63a7\u5236\u5668\uff0c1\u7aef\u53e3[1.000010]usb0\u5728ehci0\uff1ausb\u4fee\u8ba2\u72482.0[1.000010]ohci0\u5728simplebus1\uff1ahoci[1.000010]ohci0\uff1a\u5728GIC irq105\u4e0a\u4e2d\u65ad[1.000010]ohci0\uff1ahoci\u7248\u672c1.0[1.000010]usb1\u5728ohci0\uff1ausb\u4fee\u8ba2\u72481.0[1.000010]ehci1\u5728simplebus1\uff1aehci[1.000010]ehci1\uff1a\u5728GIC irq110[1.000010]ehci1\uff1aehci\u4e0a\u4e2d\u65ad", "note_en": "\u00b7  NetBSD The  NanoPi NEO2 from FriendlyARM has been serving me well since 2018,being my test machine for OpenBSD/arm64 related things.\n As NetBSD/evbarm finally gained support for AArch64 in NetBSD 9.0, releasedback in February, I decided to give it a try on this device. The board onlyhas 512MB of RAM, and this is where NetBSD really shines. Things have becomea lot easier since jmcneill@ now provides  bootable ARM images for avariety of devices, including the NanoPi NEO2.\n On first boot, the system will resize the filesystem to automatically expandto the size of the SD card.\n Growing ld0 MBR partition  #1 (1052MB -&gt; 60810MB)Growing ld0 disklabel  (1148MB -&gt; 60906MB )Resizing //dev/rld0a: grow cg | ************************************ | 69%\n Once the system is up and running, we can add a regular user in the wheel group:\n    From there we do not need the serial console anymore and can connect tothe device using SSH.\n NetBSD has binary packages available for this architecture, and installingand configuring pkgin can be done as follow:\n  The base system can be kept up to date using  sysupgrade, which can beinstalled via  pkgin:\n    Lastly, the device has two user controllable LEDs which can be toggledon and off using  sysctl.\n      [ 1.000000] Copyright  (c ) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, [ 1.000000] 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, [ 1.000000] 2018, 2019, 2020 The NetBSD Foundation, Inc. All rights reserved. [ 1.000000] Copyright  (c ) 1982, 1986, 1989, 1991, 1993 [ 1.000000] The Regents of the University of California. All rights reserved. [ 1.000000] NetBSD 9.0_STABLE  (GENERIC64 )  #0: Wed Aug 5 15:20:21 UTC 2020 [ 1.000000] \tmkrepro@mkrepro.NetBSD.org:/usr/src/sys/arch/evbarm/compile/GENERIC64 [ 1.000000] total memory  = 497 MB [ 1.000000] avail memory  = 479 MB [ 1.000000] timecounter: Timecounters tick every 10.000 msec [ 1.000000] armfdt0  (root ) [ 1.000000] simplebus0 at armfdt0: FriendlyARM NanoPi NEO 2 [ 1.000000] simplebus1 at simplebus0 [ 1.000000] simplebus2 at simplebus0 [ 1.000000] cpus0 at simplebus0 [ 1.000000] simplebus3 at simplebus0 [ 1.000000] psci0 at simplebus0: PSCI 1.1 [ 1.000000] cpu0 at cpus0: Cortex-A53 r0p4  (Cortex V8-A core ) [ 1.000000] cpu0: package 0, core 0, smt 0 [ 1.000000] cpu0: IC enabled, DC enabled, EL0/EL1 stack Alignment check enabled [ 1.000000] cpu0: Cache Writeback Granule 16B, Exclusives Reservation Granule 16B [ 1.000000] cpu0: Dcache line 64, Icache line 64 [ 1.000000] cpu0: L1 32KB/64B 2-way read-allocate VIPT Instruction cache [ 1.000000] cpu0: L1 32KB/64B 4-way write-back read-allocate write-allocate PIPT Data cache [ 1.000000] cpu0: L2 512KB/64B 16-way write-back read-allocate write-allocate PIPT Unified cache [ 1.000000] cpu0:  revID =0x180, PMCv3, 4k table, 64k table, 16bit ASID [ 1.000000] cpu0:  auxID =0x11120, FP, CRC32, SHA1, SHA256, AES+PMULL, NEON, rounding, NaN propagation, denormals, 32x64bitRegs, Fused Multiply-Add [ 1.000000] cpu1 at cpus0: Cortex-A53 r0p4  (Cortex V8-A core ) [ 1.000000] cpu1: package 0, core 1, smt 0 [ 1.000000] cpu2 at cpus0: Cortex-A53 r0p4  (Cortex V8-A core ) [ 1.000000] cpu2: package 0, core 2, smt 0 [ 1.000000] cpu3 at cpus0: Cortex-A53 r0p4  (Cortex V8-A core ) [ 1.000000] cpu3: package 0, core 3, smt 0 [ 1.000000] gic0 at simplebus1: GIC [ 1.000000] armgic0 at gic0: Generic Interrupt Controller, 224 sources  (215 valid ) [ 1.000000] armgic0: 16 Priorities, 192 SPIs, 7 PPIs, 16 SGIs [ 1.000000] fclock0 at simplebus2: 24000000 Hz fixed clock  (osc24M ) [ 1.000000] sunxisramc0 at simplebus1: SRAM Controller [ 1.000000] fclock1 at simplebus2: 32768 Hz fixed clock  (ext_osc32k ) [ 1.000000] gtmr0 at simplebus0: Generic Timer [ 1.000000] gtmr0: interrupting on GIC irq 27 [ 1.000000] armgtmr0 at gtmr0: Generic Timer  (24000 kHz, virtual ) [ 1.000000] timecounter: Timecounter  &#34;armgtmr0&#34; frequency 24000000 Hz quality 500 [ 1.000010] sun8ih3ccu0 at simplebus1: H3 CCU [ 1.000010] sun8ih3rccu0 at simplebus1: H3 PRCM CCU [ 1.000010] sunxide2ccu0 at simplebus1: DE2 CCU [ 1.000010] sunxigpio0 at simplebus1: PIO [ 1.000010] gpio0 at sunxigpio0: 94 pins [ 1.000010] sunxigpio0: interrupting on GIC irq 43 [ 1.000010] sunxigpio1 at simplebus1: PIO [ 1.000010] gpio1 at sunxigpio1: 12 pins [ 1.000010] sunxigpio1: interrupting on GIC irq 77 [ 1.000010] fregulator0 at simplebus0: vcc3v3 [ 1.000010] fregulator1 at simplebus0: usb0-vbus [ 1.000010] fregulator2 at simplebus0: gmac-3v3 [ 1.000010] sun6idma0 at simplebus1: DMA controller  (12 channels ) [ 1.000010] sun6idma0: interrupting on GIC irq 82 [ 1.000010] com0 at simplebus1: ns16550a, working fifo [ 1.000010] com0: console [ 1.000010] com0: interrupting on GIC irq 32 [ 1.000010] sunxiusbphy0 at simplebus1: USB PHY [ 1.000010] sunxihdmiphy0 at simplebus1: HDMI PHY [ 1.000010] sunximixer0 at simplebus1: Display Engine Mixer [ 1.000010] sunxilcdc0 at simplebus1: TCON1 [ 1.000010] sunxilcdc0: interrupting on GIC irq 118 [ 1.000010] sunxirtc0 at simplebus1: RTC [ 1.000010] emac0 at simplebus1: EMAC [ 1.000010] emac0: Ethernet address 02:01:f7:f9:2f:67 [ 1.000010] emac0: interrupting on GIC irq 114 [ 1.000010] rgephy0 at emac0 phy 7: RTL8211E 1000BASE-T media interface [ 1.000010] rgephy0: 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-FDX, auto [ 1.000010] h3codec0 at simplebus1: H3 Audio Codec  (analog part ) [ 1.000010] sunximmc0 at simplebus1: SD/MMC controller [ 1.000010] sunximmc0: interrupting on GIC irq 92 [ 1.000010] motg0 at simplebus1:  &#39;otg&#39; mode not supported [ 1.000010] ehci0 at simplebus1: EHCI [ 1.000010] ehci0: interrupting on GIC irq 104 [ 1.000010] ehci0: EHCI version 1.0 [ 1.000010] ehci0: 1 companion controller, 1 port [ 1.000010] usb0 at ehci0: USB revision 2.0 [ 1.000010] ohci0 at simplebus1: OHCI [ 1.000010] ohci0: interrupting on GIC irq 105 [ 1.000010] ohci0: OHCI version 1.0 [ 1.000010] usb1 at ohci0: USB revision 1.0 [ 1.000010] ehci1 at simplebus1: EHCI [ 1.000010] ehci1: interrupting on GIC irq 110 [ 1.000010] ehci1: EHCI version 1.0 [ 1.000010] ehci1: 1 companion controller, 1 port [ 1.000010] usb2 at ehci1: USB revision 2.0 [ 1.000010] ohci1 at simplebus1: OHCI [ 1.000010] ohci1: interrupting on GIC irq 111 [ 1.000010] ohci1: OHCI version 1.0 [ 1.000010] usb3 at ohci1: USB revision 1.0 [ 1.000010] sunxiwdt0 at simplebus1: Watchdog [ 1.000010] sunxiwdt0: default watchdog period is 16 seconds [ 1.000010] /soc/gpu@1e80000 at simplebus1 not configured [ 1.000010] gpioleds0 at simplebus0: nanopi:green:pwr nanopi:blue:status [ 1.000010] /soc/timer@1c20c00 at simplebus1 not configured [ 1.000010] /soc/video-codec@1c0e000 at simplebus1 not configured [ 1.000010] timecounter: Timecounter  &#34;clockinterrupt&#34; frequency 100 Hz quality 0 [ 1.000010] cpu2: IC enabled, DC enabled, EL0/EL1 stack Alignment check enabled [ 1.000010] cpu2: Cache Writeback Granule 16B, Exclusives Reservation Granule 16B [ 1.040229] cpu2: Dcache line 64, Icache line 64 [ 1.040229] cpu2: L1 32KB/64B 2-way read-allocate VIPT Instruction cache [ 1.050220] cpu2: L1 32KB/64B 4-way write-back read-allocate write-allocate PIPT Data cache [ 1.060220] cpu2: L2 512KB/64B 16-way write-back read-allocate write-allocate PIPT Unified cache [ 1.070220] cpu2:  revID =0x180, PMCv3, 4k table, 64k table, 16bit ASID [ 1.070220] cpu2:  auxID =0x11120, FP, CRC32, SHA1, SHA256, AES+PMULL, NEON, rounding, NaN propagation, denormals, 32x64bitRegs, Fused Multiply-Add [ 1.090221] cpu1: IC enabled, DC enabled, EL0/EL1 stack Alignment check enabled [ 1.090221] cpu1: Cache Writeback Granule 16B, Exclusives Reservation Granule 16B [ 1.100222] cpu1: Dcache line 64, Icache line 64 [ 1.110221] cpu1: L1 32KB/64B 2-way read-allocate VIPT Instruction cache [ 1.110221] cpu1: L1 32KB/64B 4-way write-back read-allocate write-allocate PIPT Data cache [ 1.120222] cpu1: L2 512KB/64B 16-way write-back read-allocate write-allocate PIPT Unified cache [ 1.130222] cpu1:  revID =0x180, PMCv3, 4k table, 64k table, 16bit ASID [ 1.140223] cpu1:  auxID =0x11120, FP, CRC32, SHA1, SHA256, AES+PMULL, NEON, rounding, NaN propagation, denormals, 32x64bitRegs, Fused Multiply-Add [ 1.150222] cpu3: IC enabled, DC enabled, EL0/EL1 stack Alignment check enabled [ 1.160223] cpu3: Cache Writeback Granule 16B, Exclusives Reservation Granule 16B [ 1.160223] cpu3: Dcache line 64, Icache line 64 [ 1.170223] cpu3: L1 32KB/64B 2-way read-allocate VIPT Instruction cache [ 1.180223] cpu3: L1 32KB/64B 4-way write-back read-allocate write-allocate PIPT Data cache [ 1.180223] cpu3: L2 512KB/64B 16-way write-back read-allocate write-allocate PIPT Unified cache [ 1.190223] cpu3:  revID =0x180, PMCv3, 4k table, 64k table, 16bit ASID [ 1.200224] cpu3:  auxID =0x11120, FP, CRC32, SHA1, SHA256, AES+PMULL, NEON, rounding, NaN propagation, denormals, 32x64bitRegs, Fused Multiply-Add [ 1.210224] sdmmc0 at sunximmc0 [ 1.240225] uhub0 at usb0: NetBSD  (0000 ) EHCI root hub  (0000 ), class 9/0, rev 2.00/1.00, addr 1 [ 1.240225] uhub0: 1 port with 1 removable, self powered [ 1.240225] uhub1 at usb2: NetBSD  (0000 ) EHCI root hub  (0000 ), class 9/0, rev 2.00/1.00, addr 1 [ 1.250226] uhub1: 1 port with 1 removable, self powered [ 1.250226] uhub2 at usb1: NetBSD  (0000 ) OHCI root hub  (0000 ), class 9/0, rev 1.00/1.00, addr 1 [ 1.260226] uhub2: 1 port with 1 removable, self powered [ 1.260226] uhub3 at usb3: NetBSD  (0000 ) OHCI root hub  (0000 ), class 9/0, rev 1.00/1.00, addr 1 [ 1.275641] uhub3: 1 port with 1 removable, self powered [ 1.275641] IPsec: Initialized Security Association Processing. [ 1.350228] sdmmc0: SD card status: 4-bit, C10, U1, A1 [ 1.350228] ld0 at sdmmc0: &lt;0x03:0x5344:SC64G:0x80:0x0cd9141d:0x122&gt; [ 1.360690] ld0: 60906 MB, 7764 cyl, 255  head, 63 sec, 512 bytes/sect x 124735488 sectors [ 1.370228] ld0: 4-bit width, High-Speed/SDR25, 50.000 MHz [ 1.990242] boot device: ld0 [ 1.990242] root on ld0a dumps on ld0b [ 2.000243] root file system  type: ffs [ 2.010242] kern.module.path =/stand/evbarm/9.0/modules", "posttime": "2020-08-07 15:08:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pi,nanopi,cpu0", "title": "\u7eb3\u7c73PI NEO2\u4e0a\u7684NetBSD", "title_en": "NetBSD on the NanoPi NEO2", "transed": 1, "url": "https://www.cambus.net/netbsd-on-the-nanopi-neo2/", "via": "", "real_tags": ["pi", "nanopi", "cpu0"]}]
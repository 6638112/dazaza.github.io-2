[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1009761, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c\u4e09\u58f3\u5c42(n=3)\u53ef\u4ee5\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4e9a\u58f3\u5c42(l=0\uff0c#34\uff1bs&34\uff1b\uff0cl=1\uff0c&#34\uff1bp&#34\uff1b\u548cl=2\uff0c&#34\uff1bd&#34\uff1b\u8f68\u9053)\u3002\u7b2c\u56db\u58f3\u5c42(n=4)\u53ef\u4ee5\u5177\u6709\u56db\u79cd\u7c7b\u578b\u7684\u5b50\u58f3\u5c42(l=0\uff0c#34\uff1bs#34\uff1b\uff0cl=1\uff0c&#34\uff1bp&#34\uff1b\uff0cl=2\uff0c&#34\uff1bd&#34\uff1b\u548cl=3\uff0c&#34\uff1bf&#34\uff1b\u8f68\u9053)\u3002\u5982\u679cl=0\uff0cm\u7684\u503c\u53ea\u80fd\u662f0\uff1b\u6709\u4e00\u4e2as\u8f68\u9053\u3002\u5982\u679cl=1\uff0cm\u7684\u503c\u53ef\u4ee5\u662f-1\uff0c0\uff0c1\uff1b\u6709\u4e09\u4e2ap\u8f68\u9053\u3002", "note_en": "The third shell ( n=3) can have three types of subshell ( l=0, &#34;s&#34;,  l=1, &#34;p&#34; and  l=2, &#34;d&#34; orbitals).  The fourth shell ( n=4) can have four types of subshell ( l=0, &#34;s&#34;,  l=1, &#34;p&#34;,  l=2, &#34;d&#34; and  l=3, &#34;f&#34; orbitals). If  l=0,  m can only have the value 0; there is  one s orbital.\t If  l=1,  m can have the values -1,0,1; there are  three p orbitals.", "posttime": "2020-07-04 09:57:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5b50,shells,\u7c7b\u578b", "title": "\u4e3a\u4ec0\u4e48\u7535\u5b50\u58f3\u5c42\u6709\u4e00\u5b9a\u7684\u9650\u5236\uff1f", "title_en": "Why do electron shells have set limits?", "transed": 1, "url": "http://www.madsci.org/posts/archives/1999-03/921736624.Ch.r.html", "via": "", "real_tags": ["\u7535\u5b50", "shells", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u591a\u5e16\u5b50\u5728\u7f16\u5199\u63a5\u53d7TCP\u8fde\u63a5\u7684\u670d\u52a1\u65f6\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u8ba4\u4e3a\u6211\u4eec\u7684\u5de5\u4f5c\u662f\u4ece\u670d\u52a1\u63a5\u53d7\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u5f00\u59cb\uff0c\u5230\u5b8c\u6210\u8bf7\u6c42\u5e76\u5173\u95ed\u5957\u63a5\u5b57\u65f6\u7ed3\u675f\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u7684\u670d\u52a1\uff0c\u64cd\u4f5c\u53ef\u80fd\u4f1a\u4ee5\u5982\u6b64\u9ad8\u7684\u901f\u5ea6\u53d1\u751f\uff0c\u4ee5\u81f3\u4e8eLinux\u5185\u6838\u7684\u4e00\u4e9b\u9ed8\u8ba4\u8d44\u6e90\u9650\u5236\u53ef\u80fd\u4f1a\u6253\u7834\u8fd9\u79cd\u62bd\u8c61\uff0c\u5e76\u5f00\u59cb\u5bf9\u8be5\u8fde\u63a5\u751f\u547d\u5468\u671f\u4e4b\u5916\u7684\u4f20\u5165\u8fde\u63a5\u9020\u6210\u5f71\u54cd\u3002\u672c\u6587\u5173\u6ce8\u7684\u662f\u5728\u5c06\u5ba2\u6237\u7aef\u5957\u63a5\u5b57\u4ea4\u7ed9\u5e94\u7528\u7a0b\u5e8f\u4e4b\u524d\u5b58\u5728\u7684\u4e00\u4e9b\u6807\u51c6\u8d44\u6e90\u9650\u5236-\u6240\u6709\u8fd9\u4e9b\u9650\u5236\u90fd\u662f\u5728\u6211\u4f5c\u4e3aGitHub\u7684\u4e00\u90e8\u5206\u8c03\u67e5\u751f\u4ea7\u7cfb\u7edf\u4e0a\u7684\u9519\u8bef\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684(\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5728\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u591a\u6b21\u51fa\u73b0)\u3002\n\u5728\u5176\u6700\u57fa\u672c\u7684\u5f62\u5f0f(\u5ffd\u7565\u975e\u963b\u585e\u53d8\u4f53)\u4e2d\uff0c\u4fa6\u542cTCP\u8fde\u63a5\u9700\u8981\u8c03\u7528Listen()\u4ee5\u5b9e\u9645\u5f00\u59cb\u5141\u8bb8\u4f20\u5165\u8fde\u63a5\uff0c\u7136\u540e\u91cd\u590d\u8c03\u7528Accept()\u4ee5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6302\u8d77\u7684\u8fde\u63a5\u5e76\u8fd4\u56de\u7528\u4e8e\u8be5\u7279\u5b9a\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5728C\u4e2d\uff0c\u6b64\u6a21\u5f0f\u7c7b\u4f3c\u4e8e\uff1a\nINT SERVER_FD=SOCKET(AF_INET\uff0cSOCK_STREAM\uff0c0)\uff1bBIND(SERVER_FD\uff0c/*.*/)\uff1b//\u5f00\u59cb\u76d1\u542c\u8fde\u63a5\u4fa6\u542c(SERVER_FD\uff0c512)\uff1b\u540c\u65f6(\u8fd0\u884c){//\u963b\u585e\u76f4\u5230\u8fde\u63a5\u5230\u8fbe\uff0c\u7136\u540e\u63a5\u53d7INT CLIENT_FD=Accept(SERVER_FD\uff0cNULL\uff0cNULL)\uff1b//.\u3002\u5904\u7406client_fd.}Close(Server_Fd)\uff1b\n\u8fd9\u901a\u5e38\u9690\u85cf\u5728\u66f4\u6df1\u7684\u62bd\u8c61\u5c42\u540e\u9762\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u9690\u85cf\u63a5\u53d7\u8fde\u63a5\u7684\u6240\u6709\u5b9e\u73b0\u7ec6\u8282\uff0c\u5e76\u5c06\u5176\u89c6\u4e3a\u6211\u4eec\u62fe\u53d6\u7136\u540e\u5e76\u884c\u5904\u7406\u7684\u65b0\u8fde\u63a5\u6d41\u3002\u4f46\u662f\uff0c\u5f53\u6784\u5efa\u4ee5\u4e00\u5b9a\u89c4\u6a21\u8fd0\u884c\u7684\u7cfb\u7edf\u65f6\uff0c\u8fd9\u79cd\u62bd\u8c61\u5f80\u5f80\u4f1a\u5931\u6548\uff0c\u56e0\u4e3a\u5728\u5efa\u7acb\u8fde\u63a5\u4f46Accept()\u5c1a\u672a\u8fd4\u56de\u7684\u671f\u95f4\u5f15\u5165\u4e86\u8d44\u6e90\u9650\u5236\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u8fde\u63a5\u88ab\u89c6\u4e3a\u670d\u52a1\u5668/\u4fa6\u542c\u5957\u63a5\u5b57\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u516c\u5f00\u7ed9\u5e94\u7528\u7a0b\u5e8f\u7684\u72ec\u7acb\u8d44\u6e90\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u793a\u4f8b\u5c06\u5728\u5b9e\u9a8c\u5ba4\u4e2d\u91cd\u73b0\uff0c\u53ef\u4ee5\u4ecetheojulienne/blog-lab-scaling-Accept-clone\u8fd9\u4e2a\u5b58\u50a8\u5e93\u542f\u52a8\u5b9e\u9a8c\u5ba4\uff0c\u7136\u540e\u5728\u771f\u5b9e\u7cfb\u7edf\u4e2d\u67e5\u770b\u8fd9\u4e9b\u793a\u4f8b\uff1a\nLinux\u5185\u6838\u7ef4\u62a4\u4e24\u4e2a\u8fde\u63a5\u961f\u5217\uff0c\u7528\u4e8e\u7ef4\u62a4\u5e94\u7528\u7a0b\u5e8f\u5c1a\u672a\u63a5\u53d7()\u7684\u79ef\u538b\u8fde\u63a5\uff1a\n\u5f53\u63a5\u6536\u5230SYN\u5206\u7ec4\u4ee5\u53d1\u8d77\u5230\u4fa6\u542c\u5957\u63a5\u5b57\u7684\u65b0\u8fde\u63a5\u65f6\uff0cSYN-ACK\u88ab\u53d1\u9001\u5230\u5ba2\u6237\u7aef\uff0c\u5e76\u4e14\u534a\u5b8c\u6210\u7684\u8fde\u63a5\u72b6\u6001\u88ab\u5b58\u50a8\u5728\u201cSYN Backlog\u201d\u6216\u201cRequest Socket Queue\u201d\u4e2d\u3002\u8fd9\u8868\u793a\u5c1a\u672a\u5b8c\u5168\u9a8c\u8bc1\u4e3a\u4e3b\u673a\u4e4b\u95f4\u5177\u6709\u53cc\u5411\u901a\u4fe1\u7684\u8fde\u63a5\uff0c\u56e0\u4e3a\u6211\u4eec\u5c1a\u672a\u9a8c\u8bc1\u8fdc\u7a0b\u7ec8\u7aef\u662f\u5426\u5df2\u6536\u5230\u6765\u81ea\u6211\u4eec\u7684\u6570\u636e\u5305(SYN\u53ef\u80fd\u6765\u81ea\u53e6\u4e00\u53f0\u6b3a\u9a97\u6e90IP\u7684\u4e3b\u673a)\u3002\n\u4e00\u65e6\u5ba2\u6237\u7aef\u4f7f\u7528ACK\u54cd\u5e94\u670d\u52a1\u5668\u7684SYN-ACK\uff0c\u8fde\u63a5\u5c31\u5b8c\u6210\u4e86\u5b8c\u6574\u7684TCP 3\u6b21\u63e1\u624b\uff0c\u670d\u52a1\u5668\u77e5\u9053\u5df2\u7ecf\u5efa\u7acb\u4e86\u53cc\u5411\u901a\u4fe1\u3002\u6b64\u65f6\uff0c\u5ba2\u6237\u7aef\u8fde\u63a5\u5df2\u51c6\u5907\u597d\u5728\u5c06\u6765\u8c03\u7528Accept()\u65f6\u63d0\u4f9b\u7ed9\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u88ab\u6dfb\u52a0\u5230\u9002\u5f53\u547d\u540d\u7684\u201cAccept Queue\u201d\u4e2d\u3002\nSYN Backlog\u4e2d\u7684\u8fde\u63a5\u76f8\u5bf9\u4e8e\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u5f80\u8fd4\u65f6\u95f4\u4fdd\u7559\u4e00\u6bb5\u65f6\u95f4\u3002\u5982\u679cBacklog\u4e2d\u6709N\u4e2a\u63d2\u69fd\uff0c\u5219\u6bcf\u4e2a\u5e73\u5747RTT\u5728\u6b64Backlog\u4e2d\u6700\u591a\u53ef\u4ee5\u6709N\u4e2a\u8fde\u63a5\uff0c\u4e4b\u540eBacklog\u4f1a\u6ea2\u51fa\u3002\n\u5728Linux\u4e0a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u5bfc\u81f4\u7f3a\u7701\u8fde\u63a5\u5931\u8d25\uff0c\u800c\u662f\u4f1a\u5bfc\u81f4\u53d1\u9001SYN cookie\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u4ec5\u6536\u5230SYN\u6570\u636e\u5305\u65f6\uff0c\u670d\u52a1\u5668\u5c1a\u672a\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u5982\u5176\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u4f1a\u6b3a\u9a97\u6765\u81ea\u4e0d\u540cIP\u7684\u6570\u636e\u5305\u3002\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u79f0\u4e3aSYN\u6cdb\u6d2a\u3002\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u975e\u5e38\u5e38\u89c1\uff0c\u6240\u4ee5\u5f53SYN backlog\u4e2d\u6ca1\u6709\u7a7a\u95f4\u5bb9\u7eb3\u65b0\u8fde\u63a5\u65f6\uff0cLinux\u5185\u6838\u901a\u8fc7\u53d1\u9001SYN cookie\u6765\u7f13\u89e3SYN\u6d2a\u6d41\u3002\n\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u5728\u6ca1\u6709DoS\u653b\u51fb\u7684\u6b63\u5e38\u60c5\u51b5\u4e0bSYN backlog\u6ea2\u51fa\uff0c\u5185\u6838\u4e5f\u4f1a\u5141\u8bb8\u8fde\u63a5\u5728\u63e1\u624b\u8fc7\u7a0b\u4e2d\u7ee7\u7eed\u524d\u8fdb\uff0c\u5e76\u4e14\u5728ACK\u5b8c\u6210\u63e1\u624b\u4e4b\u524d\u4e0d\u4f1a\u4e3a\u8fde\u63a5\u5b58\u50a8\u4efb\u4f55\u8d44\u6e90\u3002\u4f46\u662f\uff0c\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\u53d1\u9001SYN Cookie\u786e\u5b9e\u8868\u660e\u8fde\u63a5\u901f\u7387\u53ef\u80fd\u592a\u9ad8\uff0c\u8d85\u51fa\u4e86\u9ed8\u8ba4\u9650\u5236-SYN Cookie\u5b9e\u9645\u4e0a\u4ec5\u7528\u4e8e\u7f13\u89e3SYN\u6cdb\u6d2a\u3002\n\u662f\u5426\u542f\u7528SYN cookie\u662f\u901a\u8fc7sysctl net.ipv4.tcp_syncookies\u63a7\u5236\u7684\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e3a1\uff0c\u8868\u793a\u5728SYN Backlog\u6ea2\u51fa\u65f6\u5e94\u53d1\u9001SYN cookie\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u4ee5\u5b8c\u5168\u7981\u7528\u6216\u8bbe\u7f6e\u4e3a2\u4ee5\u5f3a\u5236100%\u53d1\u9001SYN cookie\u3002\n\u5f53\u6839\u636e\u9700\u8981\u542f\u7528SYN cookie\u65f6(\u9ed8\u8ba4\u8bbe\u7f6e)\uff0c\u5f53SYN backlog\u4e2d\u7684\u6302\u8d77\u8fde\u63a5\u6570\u8d85\u8fc7\u4e3a\u5957\u63a5\u5b57\u914d\u7f6e\u7684\u63a5\u53d7\u961f\u5217backlog\u5927\u5c0f\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1SYN cookie-\u8fd9\u91cc\u7684\u903b\u8f91\u662f\u8fd9\u6837\u7684\u3002\u5b8c\u5168\u7981\u7528SYN cookie\u65f6\uff0cnet.ipv4.tcp_max_syn_backlog\u5c06\u5355\u72ec\u914d\u7f6eSYN backlog\u4e2d\u5141\u8bb8\u7684\u8fde\u63a5\u6570-\u672c\u4f8b\u7684\u903b\u8f91\u5982\u4e0b\u3002\n\u5728Backlog\u6ea2\u51fa\u548c\u53d1\u9001SYN Cookie\u7684\u9ed8\u8ba4\u914d\u7f6e\u4e2d\uff0c\u5185\u6838\u9012\u589eTCPReqQFullDoCookies\u8ba1\u6570\u5668\u5e76\u5c06\u6b64\u884c\u8bb0\u5f55\u5230\u5185\u6838\u65e5\u5fd7\u4e2d\uff0c\u5373\u4f7f\u53ea\u662f\u56e0\u4e3a\u5408\u6cd5\u8fde\u63a5\u8fdb\u5165\u5f97\u592a\u5feb\uff0c\u5185\u6838\u65e5\u5fd7\u901a\u5e38\u4e5f\u4f1a\u5c06\u5176\u6df7\u6dc6\u4e3a\u5b9e\u9645SYN\u6cdb\u6ee5\u7684\u6307\u793a\u5668\uff1a\n\u5982\u679c\u660e\u786e\u7981\u7528SYN cookie\uff0c\u5219\u5185\u6838\u4f1a\u9012\u589eTCPReqQFullDrop\u8ba1\u6570\u5668\uff0c\u5e76\u6539\u4e3a\u8bb0\u5f55\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u5982\u679c\u60a8\u5728\u5185\u90e8\u670d\u52a1\u5230\u670d\u52a1\u8fde\u63a5\u4e2d\u770b\u5230\u6b64\u6d88\u606f\uff0c\u5219\u5f88\u53ef\u80fd\u60a8\u6b63\u5728\u5904\u7406\u7684\u662f\u4f38\u7f29\u6027\u95ee\u9898\u6216\u96f7\u9e23\u822c\u7684\u7f8a\u7fa4\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684SYN\u6d2a\u6d41\u6216\u6545\u610f\u7684\u4e0d\u826f\u884c\u4e3a\u3002\n\u5185\u6838\u63d0\u5230\u7684\u90a3\u4e9b\u201cSNMP\u8ba1\u6570\u5668\u201d\u5728\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u7684nstat\u4e2d\u53ef\u7528\uff1a\n\u8981\u67e5\u770bSYN Backlog\u5728\u5b9e\u9a8c\u4e2d\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5185\u5bb9\u6a21\u62df\u672c\u5730\u8fde\u63a5\u4e0a\u7684\u5ef6\u8fdf\uff1a\nVRANGRANT@BLOG-LAB-Scaling-Accept\uff1a~$sudo/vagrant/reset-lab.shvagrant@blog-lab-scaling-accept\uff1a~$sudo TC qdisk add dev lo root netem delay 200msvolant@Blog-lab-scaling-Accept\uff1a~$ping 127.0.0.1 PING 127.0.0.1(127.0.0.1)56(84)\u5b57\u8282\u6570\u636e\u3002127.0.0.1\u4e2d\u768464\u5b57\u8282\uff1aicmp_seq=1ttl=64 time=127.0.0.1\u4e2d\u7684401 ms64\u5b57\u8282\uff1aicmp_seq=2 ttl=64 time=\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6a21\u62dfSYN backlog\u6ea2\u51fa\u3002\u8981\u4f7f\u5176\u66f4\u5bb9\u6613\u91cd\u73b0\uff0c\u8bf7\u901a\u8fc7\u51cf\u5c11net.core.Somaxconn(\u56e0\u4e3a\u542f\u7528\u4e86SYN cookie)\u5c06SYN backlog\u7684\u5927\u5c0f\u4ece\u9ed8\u8ba4\u503c128\u51cf\u5c11\uff1a\nvovant@blog-lab-scaling-Accept\uff1a~$sudo sysctl net.core.SomaxConnnet.core.Somaxconn=128van ant@blog-lab-scaling-Accept\uff1a~$sudo sysctl-w net.core.Somaxconn=10net.core.Somaxconn=10volant@blog-lab-scaling-Accept\uff1a~$sudo systemctl start nginxvaant@blog-lab-scaling-Accept\uff1a~$$sudo sysctl reart nginxvtl@blog-lab-scaling-Accept\uff1a~$\u3002\n\u6b64\u65f6\uff0c\u5982\u679c\u8d85\u8fc710\u4e2a\u8fde\u63a5\u5728400ms\u5185\u5230\u8fbe(\u5728SYN-ACK\u548cACK\u63e1\u624b\u5b8c\u6210\u4e4b\u524d)\uff0c\u5219SYN Backlog\u4e2d\u5c06\u670910\u4e2a\u8fde\u63a5\uff0c\u8fd9\u662f\u914d\u7f6e\u7684\u6700\u5927\u503c\u3002\u8fd9\u5c06\u89e6\u53d1\u8981\u53d1\u9001\u7684SYN cookie\uff0c\u4ece\u800c\u89e6\u53d1\u4e0a\u9762\u7684\u6d88\u606f\u548c\u8ba1\u6570\u5668\u3002\u8ba9\u6211\u4eec\u6d4b\u8bd5\u4e00\u4e0b\u8fd9\u662f\u5426\u6709\u6548\uff0c\u8fd0\u884c\u4e00\u4e2a\u6a21\u62df\u6765\u6253\u5f00N\u4e2a\u5e76\u53d1\u8fde\u63a5\uff1a\nVagant@Blog-lab-scaling-Accept\uff1a~$sudo dmesg-c[2571.784749]tcp\uff1aREQUEST_SOCK_tcp\uff1a\u7aef\u53e380\u4e0a\u53ef\u80fd\u5b58\u5728SYN\u6cdb\u6d2a\u3002\u53d1\u9001\u997c\u5e72\u3002\u68c0\u67e5SNMP\u8ba1\u6570\u5668\u3002Vagant@blog-lab-scaling-Accept\uff1a~$sudo nstat|grep ReqQTcpExtTCPReqQFullDoCookies 10 0.0volant@blog-lab-scaling-Accept\uff1a~$\u3002\n\u5c1d\u8bd5\u4f7f\u7528sudo tc qdisk del dev lo root\u7981\u7528\u6a21\u62df\u5ef6\u8fdf\uff0c\u7136\u540e\u91cd\u65b0\u8fd0\u884c\u76f8\u540c\u7684\u6d4b\u8bd5\uff0c\u73b0\u5728\u8fde\u63a5\u8fd0\u884c\u5f97\u8db3\u591f\u5feb\uff0c\u4e0d\u4f1a\u53d1\u9001SYN cookie\u3002\n\u8fd9\u8fd8\u6f14\u793a\u4e86\u5f80\u8fd4\u65f6\u95f4\u5f71\u54cd\u53ef\u4ee5\u7a81\u5165\u4fa6\u542c\u5957\u63a5\u5b57\u7684\u8fde\u63a5\u91cf\u7684\u65b9\u5f0f-test_send_current_connections.py\u5b9e\u9645\u4e0a\u4f1a\u5c1d\u8bd5\u542f\u52a8\u5b8c\u6574\u7684\u8fde\u63a5\uff0c\u5e76\u4e14\u53e6\u4e00\u7aef\u7684nginx\u4f1a\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u968f\u65f6\u8c03\u7528Accept()\uff0c\u4f46\u662f\u56e0\u4e3a\u4e00\u6b21\u542f\u52a820\u4e2a\u8fde\u63a5\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u63e1\u624b\u53ef\u4ee5\u7ee7\u7eed\u4e4b\u524d\u5c31\u670920\u4e2aSYN\u6570\u636e\u5305\u5230\u8fbe\uff0cSYN Backlog\u6ea2\u51fa\u3002\u60a8\u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u7531\u4e8e\u5176\u4e2d\u4e00\u4e9b\u503c\u901a\u5e38\u7f3a\u7701\u4e3a128\uff0c\u5e76\u4e14\u7528\u6237\u7ecf\u5e38\u8fdc\u79bb\u670d\u52a1\u5668(\u5728\u4e16\u754c\u7684\u53e6\u4e00\u7aef)\uff0c\u5728\u6ca1\u6709\u771f\u6b63\u7684SYN\u6cdb\u6ee5\u7684\u60c5\u51b5\u4e0b\u5f88\u5bb9\u6613\u610f\u5916\u89e6\u53d1\u6b64\u573a\u666f\u3002\n\u4e00\u65e6\u6536\u5230\u5e76\u9a8c\u8bc1\u4e86ACK\u6570\u636e\u5305\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u5904\u7406\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u4e86\u3002\u6b64\u8fde\u63a5\u88ab\u79fb\u5165\u63a5\u53d7\u961f\u5217\uff0c\u7b49\u5f85\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528Accept()\u5e76\u63a5\u6536\u5b83\u3002\n\u4e0eSYN Backlog\u4e0d\u540c\uff0cAccept\u961f\u5217\u6ca1\u6709\u5173\u4e8e\u4f55\u65f6\u6ea2\u51fa\u7684\u5907\u4efd\u8ba1\u5212\u3002\u56de\u5230\u6700\u521d\u8c03\u7528listen()\u65f6\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2abacklog\u53c2\u6570\uff0c\u5b83\u6307\u793a\u6709\u591a\u5c11\u8fde\u63a5\u53ef\u80fd\u5df2\u7ecf\u5b8c\u6210\u4e863\u6b21\u63e1\u624b\u5e76\u5728\u5185\u6838\u4e2d\u7b49\u5f85\u5e94\u7528\u7a0b\u5e8f\u63a5\u53d7\u3002\n\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff1a\u5982\u679c\u63d0\u4f9b\u7ed9listen()\u7684\u5f85\u529e\u4e8b\u9879\u6570\u91cf\u4e0d\u8db3\u4ee5\u5305\u542b\u4efb\u4f55\u6570\u91cf\u7684\u8fde\u63a5\uff0c\u8fd9\u4e9b\u8fde\u63a5\u53ef\u4ee5\u57282\u4e2aAccept()\u8c03\u7528\u4e4b\u95f4\u5408\u7406\u5730\u5b8c\u6210\u63e1\u624b\uff0c\u90a3\u4e48\u8fde\u63a5\u5c06\u88ab\u4e22\u5f03\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u751a\u81f3\u4e0d\u4f1a\u6ce8\u610f\u5230-Accept()\u7684\u4e0b\u4e00\u6b21\u8c03\u7528\u5c06\u6210\u529f\uff0c\u800c\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e22\u5931\u8fde\u63a5\u7684\u8ff9\u8c61\uff01\u5f53\u5728Accept()\u8c03\u7528\u4e4b\u95f4\u53ef\u80fd\u4f1a\u53d1\u751f\u4e00\u4e9b\u5408\u7406\u7684\u5de5\u4f5c\u91cf\u65f6\uff0c\u6216\u8005\u5f53\u4f20\u5165\u8fde\u63a5\u5f80\u5f80\u540c\u65f6\u5230\u8fbe\u65f6(\u4f8b\u5982\uff0c\u4f7f\u7528cron\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u4f5c\u4e1a\uff0c\u6216\u8005\u5927\u91cf\u7684\u91cd\u65b0\u8fde\u63a5\u5c1d\u8bd5)\uff0c\u5c31\u7279\u522b\u53ef\u80fd\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u4f46\u662f\uff0c\u5373\u4f7f\u60a8\u6307\u5b9a\u4e86\u8db3\u591f\u9ad8\u7684backlog\u503c\u6765\u4fa6\u542c()\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4f1a\u9ed8\u9ed8\u5730\u9650\u5236\u6b64\u503c\u3002Somaxconn sysctl\u4e3a\u4efb\u4f55\u5957\u63a5\u5b57\u7684\u79ef\u538b\u6307\u5b9a\u4e86\u7f51\u7edc\u7cfb\u7edf\u8303\u56f4\u7684\u6700\u5927\u503c\u3002\u5f53\u63d0\u4f9b\u4e86\u66f4\u5927\u7684backlog\u503c\u65f6\uff0c\u5185\u6838\u4f1a\u9ed8\u9ed8\u5730\u5c06\u5176\u9650\u5236\u4e3anet.core.Somaxconn\u7684\u503c\u3002\u8fd9\u662f\u4e0b\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u95ee\u9898\uff1anet.core.Somaxconn\u548clisten()\u7684backlog\u53c2\u6570\u90fd\u9700\u8981\u9002\u5f53\u8c03\u6574\uff0c\u4ee5\u4fbf\u5b9e\u9645\u8c03\u6574backlog\u3002\n\u66f4\u590d\u6742\u7684\u662f\uff0cnet.core.Somaxconn sysctl\u4e0d\u662f\u7cfb\u7edf\u5168\u5c40\u7684\uff0c\u800c\u662fLinux\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u7684\u5168\u5c40\u7684\u3002\u5bf9\u4e8e\u65b0\u7684\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4(\u5982\u5927\u591a\u6570\u542f\u52a8\u7684Docker\u5bb9\u5668\u4f7f\u7528\u7684\u540d\u79f0\u7a7a\u95f4)\uff0c\u9ed8\u8ba4\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u7684\u503c\u4e0d\u4f1a\u7ee7\u627f\uff0c\u800c\u662f\u8bbe\u7f6e\u4e3a\u5185\u7f6e\u7684\u5185\u6838\u9ed8\u8ba4\u503c\uff1a\nVRAGRANT@BLOG-LAB-Scaling-Accept\uff1a~$sudo/vagrant/reset-lab.shvagrant@blog-lab-scaling-accept\uff1a~$sudo sysctl net.core.SomaxConnnet.core.Somaxconn=128van ant@Blog-Lab-Scaling-Accept\uff1a~$sudo docker run-it ubuntu sysctl net.core.core.Somaxconn=128volant@Blog-lab-scaling-Accept\uff1a~$sudo sysctl-w net.core.Somaxconn=128volant@Blog-lab-scaling-Accept\uff1a~$sudo sysctl-w net.core.Somaxconn=\u3002.Somaxconn=128van ant@blog-lab-scaling-Accept\uff1a~$\u3002\n\u8fd9\u5c31\u662f\u7b2c\u4e09\u4e2a\u5e38\u89c1\u95ee\u9898\uff1a\u5728\u5177\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u7684\u5bb9\u5668\u4e2d\u8fd0\u884c(\u5176\u4e2d\u5927\u591a\u6570\u540d\u79f0\u7a7a\u95f4\u662f\u7531Kubernetes/Docker\u542f\u52a8\u7684)\uff0c\u5373\u4f7f\u7cfb\u7edf\u6b63\u786e\u8c03\u6574\u4e86net.core.Somaxconn\uff0c\u8be5\u503c\u4e5f\u4f1a\u88ab\u5ffd\u7565\uff0c\u56e0\u6b64\u5bb9\u5668\u8fd8\u5fc5\u987b\u8c03\u6574net.core.Somaxconn\u4ee5\u5339\u914d\u5728\u5176\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5982\u679c\u8fd9\u4e9b\u60c5\u51b5\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u53d1\u751f\u5e76\u9020\u6210\u5f71\u54cd\uff0c\u5219\u5b83\u4eec\u5728ListenOverflow\u8ba1\u6570\u5668\u4e2d\u53ef\u89c1\uff1a\n\u8981\u67e5\u770bAccept\u961f\u5217\u5728\u5b9e\u9a8c\u4e2d\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u4e0d\u5584\u4e8e\u63a5\u53d7\u8fde\u63a5\u7684\u670d\u52a1\u5668(\u5b83\u4f11\u7720\u5f88\u591a)\uff0c\u79ef\u538b\u4e3a10\uff1a\nVRAGRANT@BLOG-LAB-Scaling-Accept\uff1a~$sudo/vagrant/reset-lab.shvagrant@blog-lab-scaling-accept\uff1a~$sudo sysctl-wnet.core.Somaxconn=1024net.core.Somaxconn=1024volant@Blog-lab-scaling-Accept\uff1a~$python/vavant/laggy_server.py 10\u6536\u542c\u5f85\u529e\u4e8b\u987910\u3002\n\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u4e2d\uff0c\u5c06\u4e00\u7cfb\u5217\u8fde\u63a5\u53d1\u9001\u5230\u6ede\u540e\u670d\u52a1\u5668\uff0c\u7136\u540e\u5728\u51e0\u79d2\u949f\u540e\u9000\u51fa\uff1a\nvovant@blog-lab-scaling-Accept\uff1a~$python/vavant/test_send_current_connections.py 127.0.0.1\uff1a8080 20\u6b63\u5728\u7b49\u5f85\uff0c\u6309Ctrl+C\u9000\u51fa\u3002(\u8bf7\u7a0d\u7b49\u51e0\u79d2\u949f)^cvolant@blog-lab-scaling-Accept\uff1a~$sudo nstat|grep ListenOverflowsTcpExtListenOverflow 44 0.0van ant@blog-lab-scaling-Accept\uff1a~$\u3002\n\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230listen()\u7684backlog\u53c2\u6570\u6709\u591a\u91cd\u8981\u3002\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0bSomaxconn\u662f\u5982\u4f55\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u5177\u6709\u66f4\u957f\u79ef\u538b\u7684\u670d\u52a1\u5668\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\uff0c\u6211\u4eec\u9884\u8ba1\u8be5\u670d\u52a1\u5668\u4f1a\u88ab\u5c01\u9876\uff1a\nVagant@Blog-Lab-Scaling-Accept\uff1a~$sudo/vagrant/reset-lab.shvagrant@blog-lab-scaling-accept\uff1a~$sudo sysctl-wnet.core.Somaxconn=10net.core.Somaxconn=10volant@Blog-lab-scaling-Accept\uff1a~$python/vavant/laggy_server.py 1024\u6536\u542c\u5f85\u529e\u4e8b\u98791024\u3002\n\u4e00\u5207\u770b\u8d77\u6765\u90fd\u5f88\u597d-\u8bf7\u6ce8\u610f\u6211\u4eec\u662f\u5982\u4f55\u6709\u6548\u5730\u8c03\u7528LISTEN(1024)\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u51fa\u9519\u3002\u8fd0\u884c\u4e0e\u6211\u4eec\u63d0\u4f9b\u8f83\u5c0fbacklog\u503c\u65f6\u76f8\u540c\u7684\u547d\u4ee4\uff0c\u5f53\u5185\u6838\u9759\u9ed8\u622a\u65adbacklog\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u76f8\u540c\u7684\u95ee\u9898\uff1a\nvovant@blog-lab-scaling-Accept\uff1a~$python/volant/test_send_current_connections.py 127.0.0.1\uff1a8080 20\u6b63\u5728\u7b49\u5f85\uff0c\u6309Ctrl+C\u9000\u51fa\u3002(\u8bf7\u7a0d\u7b49\u51e0\u79d2\u949f)^cvolant@blog-lab-scaling-Accept\uff1a~$sudo nstat|grep ListenOTcpExtListenOverflow 77 0.0van ant@blog-lab-scaling-Accept\uff1a~$\u3002\nTcpExtTCPReqQFullDoCookies-\u68c0\u6d4bSYN cookie\u7528\u4e8e\u7f13\u89e3SYN\u79ef\u538b\u7a7a\u95f4\u4e0d\u8db3\u7684\u4f4d\u7f6e\u3002\nTcpExtTCPReqQFullDrop-\u68c0\u6d4b\u7531\u4e8eSYN cookie\u88ab\u7981\u7528\u4e14SYN Backlog\u5df2\u6ee1\u800c\u4e22\u5f03SYN\u7684\u4f4d\u7f6e\u3002\nTcpExtListenOverflow-\u68c0\u6d4bTCP\u8fde\u63a5\u4f55\u65f6\u5b8c\u62103\u6b21\u63e1\u624b\u4f46\u63a5\u53d7\u961f\u5217\u5df2\u6ee1\uff0c\u6216\u8005\u4f55\u65f6\u5728\u63a5\u53d7\u961f\u5217\u5df2\u6ee1\u65f6\u6536\u5230SYN\u3002\n\u56e0\u4e3a\u8fd9\u4e9b\u8ba1\u6570\u5668\u90fd\u662f\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5728\u547d\u540d\u7a7a\u95f4\u4e2d\u662f\u5168\u5c40\u7684\uff0c\u6240\u4ee5\u6709\u5173\u54ea\u4e2a\u5957\u63a5\u5b57\u6216\u5e94\u7528\u7a0b\u5e8f\u5bfc\u81f4\u95ee\u9898\u7684\u4fe1\u606f\u5c06\u4e0d\u53ef\u89c1\uff0c\u5982\u679c\u8fdb\u7a0b\u4f4d\u4e8e\u5bb9\u5668\u4e2d\uff0c\u5219\u5728\u57fa\u672c\u7cfb\u7edf\u8ba1\u6570\u5668(\u5728\u9ed8\u8ba4\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d)\u4e2d\u5c06\u4e0d\u53ef\u89c1\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6bcf\u4e2a\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u90fd\u9700\u8981\u68c0\u67e5/\u76d1\u89c6\u8fd9\u4e9b\u8ba1\u6570\u5668\uff0c\u7136\u540e\u9700\u8981\u505a\u989d\u5916\u7684\u5de5\u4f5c\u6765\u8ffd\u6eaf\u5230\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728SYN backlog\u53d8\u4f53\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u4f7f\u7528\u5185\u6838\u65e5\u5fd7\u884c\u4f5c\u4e3a\u63d0\u793a\u3002\n\u4e0a\u9762\u8ba1\u6570\u5668\u63d0\u4f9b\u7684\u5ea6\u91cf\u63d0\u4f9b\u4e86\u79ef\u538b\u6ea2\u51fa\u548c\u4e22\u5931\u8fde\u63a5\u7684\u6700\u5c0f\u60c5\u51b5\uff0c\u4f46\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u80fd\u591f\u5728\u7cfb\u7edf\u8303\u56f4\u5185\u68c0\u67e5\u8fd9\u79cd\u60c5\u51b5\uff0c\u67e5\u770b\u4efb\u4f55\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\uff0c\u5e76\u80fd\u591f\u5c06\u5176\u94fe\u63a5\u56de\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u5957\u63a5\u5b57/\u7aef\u53e3\u3002\n\u8fd9\u53ef\u4ee5\u4f7f\u7528\u4f7f\u7528BCC\u7684kProbe\u548ceBPF\u8ddf\u8e2a\uff0c\u65b9\u6cd5\u662f\u6302\u94a9\u5904\u7406\u8fd9\u4e9b\u6545\u969c\u60c5\u51b5\u7684\u5185\u6838\u51fd\u6570\u5e76\u68c0\u67e5\u8be5\u65f6\u95f4\u70b9\u7684\u4e0a\u4e0b\u6587\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u4ece\u751f\u4ea7\u4e2d\u7684\u7cfb\u7edf\u4e2d\u63d0\u53d6\u5b9e\u65f6\u6570\u636e\uff0c\u800c\u4e0d\u50cf\u8ba1\u6570\u5668\u90a3\u6837\u5145\u5176\u91cf\u662f\u7cfb\u7edf\u4e0a\u67d0\u4e2a\u5730\u65b9\u5b58\u5728\u7684\u6f5c\u5728\u95ee\u9898\u7684\u6a21\u7cca\u6307\u793a\u5668\u3002\n\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981Accept Backlog\u6ea2\u51fa\uff0cListenOverflow\u8ba1\u6570\u5668\u5c31\u4f1a\u9012\u589e-\u6211\u4eec\u53ef\u4ee5\u4ece\u90a3\u91cc\u5f00\u59cb\uff0c\u7136\u540e\u91cd\u65b0\u6784\u5efa\u8ddf\u8e2a\u7a0b\u5e8f\u3002\n\u5728Linux\u6e90\u4ee3\u7801\u4e2d\u641c\u7d22ListenOverflow\u4f1a\u663e\u793a\u6b64\u8ba1\u6570\u5668\u5728\u5185\u90e8\u79f0\u4e3a\u4ec0\u4e48-LINUX_MIB_LISTENOVERFLOWS\u3002\u641c\u7d22\u5185\u6838\u6e90\u4ee3\u7801\u6811\u4f1a\u663e\u793a\u5185\u6838\u4e2d\u9012\u589e\u8be5\u8ba1\u6570\u5668\u7684\u6240\u6709\u4f4d\u7f6e-\u5728\u672c\u4f8b\u4e2d\uff0c\u6700\u4f73\u5019\u9009\u4f4d\u7f6e\u662fnet/ipv4/tcp_input.c\u4e2d\u7684tcp_conn_request\u548cnet/ipv4/tcp_ipv4.c\u4e2d\u7684tcp_v4_syn_recv_sock\u3002\u5b83\u4eec\u5728\u8fde\u63a5\u751f\u547d\u5468\u671f\u4e2d\u5904\u7406\u7684\u70b9\u7565\u6709\u4e0d\u540c\uff1a\ntcp_conn_request\u5904\u7406\u9488\u5bf9\u4fa6\u542c\u5957\u63a5\u5b57\u542f\u52a8\u65b0\u8fde\u63a5\u7684SYN\u6570\u636e\u5305\uff0c\u5e76\u5c06\u5176\u653e\u5165SYN Backlog\u4e2d\u3002\ntcp_v4_syn_recv_sock\u5904\u7406\u5b8c\u6210\u8fde\u63a5\u7684ACK\u6570\u636e\u5305\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u63a5\u53d7\u961f\u5217\u3002\n\u4f5c\u4e3a\u4e00\u79cd\u5b89\u5168\u673a\u5236\uff0c\u5982\u679c\u63a5\u53d7\u961f\u5217\u5df2\u6ee1\uff0c\u5219tcp_conn_request\u4f1a\u4e22\u5f03\u8fde\u63a5\uff0c\u5373\u4f7f\u5b83\u8fd8\u6ca1\u6709\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u3002\u5982\u679c\u63a5\u53d7\u961f\u5217\u5df2\u6ee1\uff0ctcp_v4_syn_recv_sock\u4e5f\u4f1a\u4e22\u5f03\u8fde\u63a5\uff0c\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u3002\u5982\u679cSYN\u6570\u636e\u5305\u5df2\u88ab\u63a5\u53d7\u5e76\u6dfb\u52a0\u5230SYN Backlog\u4e2d\uff0c\u800c\u63a5\u53d7\u961f\u5217\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u4f46\u5728ACK\u5230\u8fbe\u65f6\u5df2\u6ee1\uff0c\u5219\u5728\u6536\u5230ACK\u65f6\u5c06\u5728tcp_v4_syn_recv_sock\u4e2d\u8fdb\u884c\u4e22\u5f03\u3002\u5982\u679c\u5728\u63a5\u53d7\u961f\u5217\u5df2\u6ee1\u65f6\u65b0SYN\u5230\u8fbe\uff0c\u5219TCP_CONN_REQUEST\u5c06\u6539\u4e3a\u4e22\u5f03\u3002\u5bf9\u4e8eVM\u4e2d\u7684\u672c\u5730\u6d4b\u8bd5\uff0cTCP_CONN_REQUEST\u66f4\u5bb9\u6613\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u5728SYN\u548cACK\u4e4b\u95f4\u4ed4\u7ec6\u8ba1\u65f6\u5373\u53ef\u91cd\u73b0\u3002\n\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u9012\u589eListenOverflow\u8ba1\u6570\u5668\u7684\u4ee3\u7801\u8def\u5f84\u5982\u4e0b\u6240\u793a\uff1a\nint TCP_CONN_REQUEST(struct request_sock_ops*rsk_ops\uff0cconst struct tcp_request_sock_ops*af_ops\uff0cstruct sock*sk\uff0cstruct SK_buff*SKB){/*.*/if(SK_ACCEPTQ_IS_FULL(SK)){NET_INC_STATS(SOCK_NET(SK)\uff0cLinux_MIB_LISTENOVERFLOWS)\uff1bGOTO DROP\uff1b}/*.*/\u3002}struct sock*tcp_v4_syn_recv_sock(const struct sock*sk\uff0cstruct SK_buff*skb\uff0cstruct request_sock*req\uff0cstruct dst_entry*dst\uff0cstruct request_sock*req_unhash\uff0cbool*own_req){/*.*/if(sk_ceptq_is_full(Sk))go to exit_overflow\uff1b/*.*/EXIT_OVERFLOW\uff1aNET_INC_STATS(SOCK_NET(SK)\uff0cLinux_MIB_LISTENOVERFLOWS)\uff1b/*.*/}\u3002\n\u5f53\u8ddf\u8e2a\u50cf\u8fd9\u6837\u5185\u8054\u7684\u51fd\u6570\u65f6\uff0c\u6302\u63a5\u6761\u4ef6\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u9644\u52a0\u5230\u8c03\u7528\u51fd\u6570(\u5728\u672c\u4f8b\u4e2d\u662ftcp_conn_request\u548ctcp_v4_syn_recv_sock)\u7684\u5f00\u5934\uff0c\u7136\u540e\u5728\u6211\u4eec\u7684eBPF\u4ee3\u7801\u4e2d\u6267\u884c\u76f8\u540c\u7684\u6761\u4ef6\u68c0\u67e5\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528kProbe\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\n/*\u901a\u7528\u5904\u7406\u7a0b\u5e8f*/\u9759\u6001\u5185\u8054void handle_sk_Potential_overflow(struct pt_regs*ctx\uff0cint syn_recv\uff0cconst struct sock*sk){/*\u9700\u8981\u4f7f\u7528bpf_probe_read\u8bfb\u53d6\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u786e\u4fdd\u8bfb\u53d6\u5b89\u5168*/u32 sk_ack_backlog=0\uff1bu32 sk_max_ack_backlog=0\uff1bbpf_probe_read(&amp\uff1bsk_ack_backlog\uff0csizeof(Sk_Ack_Backlog))\u3002sk_ack_backlog)\uff1bbpf_probe_read(&amp\uff1bsk_max_ack_backlog\uff0csizeof(Sk_Max_Ack_Backlog)\uff0c(void*)&amp\uff1bsk-&gt\uff1bsk_max_ack_backlog)\uff1bif(sk_ack_backlog&gt\uff1bsk_max_ack_backlog){/*\u5904\u7406\u6761\u4ef6*/}}/*\u5f53SYN\u5230\u8fbe\u65f6*/struct tcp_request_sock_ops\uff1bvoid kprobe__tcp_conn_request(struct pt_regs*ctx\uff0cstruct request_sock_ops*rsk_ops\uff0cconst struct tcp_request_sock_ops*af_ops\uff0cconst struct sock*sk\uff0cstruct SK_buff*skb){handt_sk_Potential_overflow(ctx\uff0c0\uff0csk)\uff1b}/*\u5f53SYN_RECV\u5957\u63a5\u5b57\u7684ACK\u5230\u8fbe\u65f6*/void kprobe__tcp_v4_syn_recv_sock(struct pt_regs*ctx\uff0cconst struct sock*sk)/*\u4e0d\u9700\u8981\u5269\u4f59\u7684\u672a\u4f7f\u7528\u53c2\u6570*/{Handle_SK_Potential_overflow(ctx\uff0c1\uff0csk)\uff1b}\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\u6709\u4e00\u4e2a\u94a9\u5b50\uff0c\u5b83\u5c06\u89e6\u53d1\u9012\u589eIPv4\u4e0a\u7684TCP\u4e2d\u7684ListenOverflow\u8ba1\u6570\u5668\u3002\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5145\u5b9e\uff0c\u4ee5\u8bfb\u53d6\u6709\u5173\u5957\u63a5\u5b57\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9\u7528\u6237\u7a7a\u95f4\u8ddf\u8e2a\u7a0b\u5e8f\u3002\n\u5b9e\u9a8c\u5ba4\u4e2d\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u7a0b\u5e8f\uff0c\u8ba9\u6211\u4eec\u91cd\u65b0\u542f\u52a8\u6211\u4eec\u7684\u6ede\u540e\u670d\u52a1\u5668\uff1a\n\u7ed3\u679c\u5c06\u662f\u663e\u793a\u79ef\u538b\u6ea2\u51fa\u914d\u7f6e\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u7684\u8ddf\u8e2a\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\u4ee5\u53ca\u5b83\u662f\u5728SYN\u671f\u95f4\u8fd8\u662f\u5728ACK\u671f\u95f4\u53d1\u751f\u7684\uff1a\nVagant@Blog-Lab-Scaling-Accept\uff1a~$sudo python/vagrant/trace_backlog_overflow.pyCONTAINER/HOST PID Process NETNSID BIND PKT BL MAXblog-Lab-Scaling-acc 14742 python/vranant/lagg 4026531992 127.0.0.1\uff1a8080SYN 11 10blog-lab-scaling-acc 14742 python/vavant/lagg 4026531992 127.0.0.1\uff1a8080SYN 11 10blog-lab-scaling-acc 14742 python/vavant/lagg 4026531992 127.0.0.1\uff1a8080SYN 11\u3002127.0.0.1\uff1a8080SYN 11 10\u535a\u5ba2-\u5b9e\u9a8c\u5ba4-\u7f29\u653e-Acc 14742 Python/\u6d41\u6d6a/LAG 4026531992 127.0.0.1\uff1a8080SYN 11 10\u535a\u5ba2-\u5b9e\u9a8c\u5ba4\u7f29\u653e-Acc 14742 Python/\u6d41\u6d6a/LAG 4026531992 127.0.0.1\uff1a8080SYN 11 10\u535a\u5ba2-\u5b9e\u9a8c\u5ba4-\u7f29\u653e-Acc 14742 Python/\u6d41\u6d6a/LAG 4026531992 127.0.0.1\uff1a8080 SYN 11 10BLO\u3002\n..", "note_en": "More posts    When writing services that accept TCP connections, we tend to think of our work as starting from the point where our service accepts a new client connection and finishing when we complete the request and close the socket. For services at scale, operations can happen at such a high rate that some of the default resource limits of the Linux kernel can break this abstraction and start causing impact to incoming connections outside of that connection lifecycle. This post focuses on some standard resource limitations that exist before the client socket is handed to the application - all of which came up during the course of investigating errors on production systems as part of my role at GitHub (in some cases, multiple times across different applications).\n In its most basic form (ignoring non-blocking variants), listening for TCP connections requires a call to  listen() to actually start allowing incoming connections, followed by repeated calls to  accept() to take the next pending connection and return a file descriptor that is for that particular client. In C this pattern looks something like:\n int  server_fd  =  socket ( AF_INET ,  SOCK_STREAM ,  0 ); bind ( server_fd ,  /* ... */ ); // start listening for connections listen ( server_fd ,  512 ); while  ( running )  {  // block until a connection arrives and then accept it  int  client_fd  =  accept ( server_fd ,  NULL ,  NULL );  // ... handle client_fd ... } close ( server_fd );\n This is often hidden behind further layers of abstraction, and we tend to hide away all the implementation details of accepting connections and view it as a stream of new connections that we pick up and then process in parallel. However, when building a system that runs at a certain scale, this abstraction tends to break down because there are resource limitations introduced in the period where connections are being established but are not yet returned by  accept(). Before that point, those client connections are considered as being part of the server/listen socket and not as independent resources exposed to the application.\n The examples mentioned in this blog post will be reproducible in the lab from    theojulienne/blog-lab-scaling-accept - clone this repository bring up the lab, then poke around at these examples in a real system:\n   The Linux kernel maintains 2 queues of connections that maintain the backlog of connections that are not yet  accept()ed by the application:\n  When a SYN packet is received to initiate a new connection to a listen socket, a SYN-ACK is sent to the client and the half-completed connection state is stored in the \u201cSYN backlog\u201d or \u201cRequest Socket Queue\u201d. This represents connections that have not yet been fully validated as having two-way communication between the hosts, because we haven\u2019t yet validated that the remote end has received a packet from us (the SYN could have come from another host spoofing the source IP).\n Once the client responds to the server\u2019s SYN-ACK with an ACK, the connection has then completed the full  TCP 3-way handshake, and the server knows that two-way communication has been established. At this point, the client connection is ready to be provided to the application at a future call to  accept(), and is added to the appropriately named \u201caccept queue\u201d.\n  Connections in the SYN backlog remain there for a period of time relative to the Round Trip Time between the server and the client. If there are N slots in the backlog then you can have at most N connections in this backlog per average RTT, after which the backlog overflows.\n This won\u2019t actually cause the connections to fail by default on Linux, but cause  SYN cookies to be sent instead. This is because when only a SYN packet has been received, the server hasn\u2019t yet validated that the client is who they say they are, so they could be spoofing packets as coming from a different IP. This is a common Denial of Service attack called a  SYN Flood. Because this is so common, the Linux kernel has built in mitigation to SYN floods by sending a SYN cookie when there is no room in the SYN backlog for the new connection.\n This means that even if the SYN backlog overflows under normal circumstances with no DoS attack, the kernel allows the connection to move further along in the handshake, and won\u2019t store any resources for the connection until an ACK completes the handshake. Sending SYN cookies during normal circumstances does however indicate that the rate of connections is probably too high for the default limits - SYN cookies are really only meant for mitigating SYN floods.\n Whether SYN cookies are enabled is controlled via the sysctl  net.ipv4.tcp_syncookies, by default this is set to  1 which indicates that SYN cookies should be sent when the SYN backlog overflows, but can also be set to  0 to disable entirely or  2 to force SYN cookies to be sent 100% of the time.\n When SYN cookies are enabled as needed (the default), they are triggered when the number of pending connections in the SYN backlog is more than the configured accept queue backlog size for the socket - the logic for this is  here. When SYN cookies are fully disabled,  net.ipv4.tcp_max_syn_backlog configures the number of connections allowed in the SYN backlog separately - the logic for this case is  here.\n In the default configuration where the backlog overflows and SYN cookies are sent, the kernel increments the  TCPReqQFullDoCookies counter and logs this line to the kernel log, which is often confused for an indicator of a real SYN flood even when it\u2019s just due to legitimate connections coming in too fast:\n  If SYN cookies are explicitly disabled, the kernel increments the  TCPReqQFullDrop counter and the following would be logged instead:\n  If you see this message for internal service-to-service connections, chances are you\u2019re dealing with a scaling problem or a  thundering herd problem, and not an actual SYN flood or intentional bad actor.\n Those \u201cSNMP Counters\u201d that the kernel mentions are available in  nstat in the network namespace:\n   To see how the SYN backlog behaves in the lab, we can simulate latency on local connections with the following:\n vagrant@blog-lab-scaling-accept:~$ sudo /vagrant/reset-lab.shvagrant@blog-lab-scaling-accept:~$ sudo tc qdisc add dev lo root netem delay 200msvagrant@blog-lab-scaling-accept:~$ ping 127.0.0.1PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=401 ms64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=400 ms\n This means we can now simulate overflowing the SYN backlog. To make it a bit easier to reproduce, reduce the size of the SYN backlog from the default of  128 by reducing  net.core.somaxconn (because SYN cookies are enabled):\n vagrant@blog-lab-scaling-accept:~$ sudo sysctl net.core.somaxconnnet.core.somaxconn = 128vagrant@blog-lab-scaling-accept:~$ sudo sysctl -w net.core.somaxconn=10net.core.somaxconn = 10vagrant@blog-lab-scaling-accept:~$ sudo systemctl restart nginxvagrant@blog-lab-scaling-accept:~$\n At this point, if more than 10 connections arrive within 400ms (before the SYN-ACK and ACK handshake complete), then 10 connections will be in the SYN backlog, which is the maximum configured. This will trigger SYN cookies to be sent, triggering the message and counters above. Let\u2019s test out if this works, run a simulation that opens N concurrent connections:\n   vagrant@blog-lab-scaling-accept:~$ sudo dmesg -c[ 2571.784749] TCP: request_sock_TCP: Possible SYN flooding on port 80. Sending cookies. Check SNMP counters.vagrant@blog-lab-scaling-accept:~$ sudo nstat | grep ReqQTcpExtTCPReqQFullDoCookies 10 0.0vagrant@blog-lab-scaling-accept:~$\n Try disabling the simulated latency with  sudo tc qdisc del dev lo root and re-run the same test, now connections move through fast enough that SYN cookies are not sent.\n This also demonstrates the way the Round Trip Time effects the amount of connections that can burst into a LISTEN socket -  test_send_concurrent_connections.py does actually attempt to initiate complete connections and  nginx on the other end is readily calling  accept() as fast as it can, but because 20 connections are initiated at once, 20 SYN packets arrive before any handshake can continue, and the SYN backlog overflows. You can imagine that in the real world, with some of these values often defaulting to  128, and users often being far away from servers (on the other side of the world), it\u2019s pretty easy to accidentally trigger this scenario without a true SYN flood.\n  Once an ACK packet is received and validated, a new client connection is ready for the application to process. This connection is moved into the accept queue, waiting for the application to call  accept() and receive it.\n Unlike the SYN backlog, the accept queue has no backup plan for when it overflows. Back in the original call to  listen(), a  backlog argument was provided, which indicates how many connections can have completed the 3-way handshake and be waiting in the kernel for the application to accept.\n This is the first common issue: If the  backlog number provided to  listen() is not large enough to contain any number of connections that could reasonably complete their handshake between 2 calls to  accept(), then a connection will be dropped on the floor, and the application generally won\u2019t even notice - the next call to  accept() will succeed without any indication of a dropped connection! This is particularly likely to happen when some reasonable amount of work can happen between calls to  accept() or when the incoming connections tend to arrive at the same time (such as jobs running on many servers with cron, or a thundering herd of reconnection attempts).\n However, even when you specify a high enough  backlog value to  listen(), there\u2019s another location that silently limits this value. The  net.core.somaxconn sysctl specifies a network-system-wide maximum for the  backlog of any socket. When a larger  backlog value is provided, the kernel silently caps it at the value of  net.core.somaxconn. This is the next most common issue: Both  net.core.somaxconn and the  backlog argument to  listen() need to be adjusted appropriately so that the backlog is actually adjusted as expected.\n As an added complexity, the  net.core.somaxconn sysctl is not system global, but is global to a Linux network namespace. For new network namespaces, such as used by most Docker containers launched, the values from the default network namespace are not inherited, but instead set to the built-in kernel default:\n vagrant@blog-lab-scaling-accept:~$ sudo /vagrant/reset-lab.shvagrant@blog-lab-scaling-accept:~$ sudo sysctl net.core.somaxconnnet.core.somaxconn = 128vagrant@blog-lab-scaling-accept:~$ sudo docker run -it ubuntu sysctl net.core.somaxconnnet.core.somaxconn = 128vagrant@blog-lab-scaling-accept:~$ sudo sysctl -w net.core.somaxconn=1024net.core.somaxconn = 1024vagrant@blog-lab-scaling-accept:~$ sudo docker run -it ubuntu sysctl net.core.somaxconnnet.core.somaxconn = 128vagrant@blog-lab-scaling-accept:~$\n Therein lies the third common issue: Running in containers that have their own network namespace (which is most of them launched by Kubernetes/Docker), even if the system has  net.core.somaxconn correctly tweaked, that value will be ignored, and so the container must also have  net.core.somaxconn tweaked to match the application running inside of it.\n If any of these situations occurs and causes impact, they are visible in the  ListenOverflows counter:\n   To see how the accept queue behaves in the lab, we can run a server that is bad at accepting connections (it sleeps a lot) with a backlog of 10:\n vagrant@blog-lab-scaling-accept:~$ sudo /vagrant/reset-lab.shvagrant@blog-lab-scaling-accept:~$ sudo sysctl -w net.core.somaxconn=1024net.core.somaxconn = 1024vagrant@blog-lab-scaling-accept:~$ python /vagrant/laggy_server.py 10Listening with backlog 10\n In another window, send a bunch of connections to the laggy server, then exit after a few seconds:\n vagrant@blog-lab-scaling-accept:~$ python /vagrant/test_send_concurrent_connections.py 127.0.0.1:8080 20Waiting, Ctrl+C to exit.(wait a few seconds)^Cvagrant@blog-lab-scaling-accept:~$ sudo nstat | grep ListenOverflowsTcpExtListenOverflows 44 0.0vagrant@blog-lab-scaling-accept:~$\n At this point, we can see how important the backlog argument to  listen() is. Next, let\u2019s review how  somaxconn caps this by setting up a server with a longer backlog, that we expect to be capped:\n vagrant@blog-lab-scaling-accept:~$ sudo /vagrant/reset-lab.shvagrant@blog-lab-scaling-accept:~$ sudo sysctl -w net.core.somaxconn=10net.core.somaxconn = 10vagrant@blog-lab-scaling-accept:~$ python /vagrant/laggy_server.py 1024Listening with backlog 1024\n All looks good - notice how we effectively called  listen(1024) and nothing went wrong. Running the same commands as we did when we provided the small  backlog value, we can observe the same problem when the backlog is silently truncated by the kernel:\n vagrant@blog-lab-scaling-accept:~$ python /vagrant/test_send_concurrent_connections.py 127.0.0.1:8080 20Waiting, Ctrl+C to exit.(wait a few seconds)^Cvagrant@blog-lab-scaling-accept:~$ sudo nstat | grep ListenOTcpExtListenOverflows 77 0.0vagrant@blog-lab-scaling-accept:~$\n   TcpExtTCPReqQFullDoCookies - detecting where SYN cookies were used to mitigate a lack of SYN backlog space\n  TcpExtTCPReqQFullDrop - detecting where SYNs were dropped because SYN cookies were disabled and the SYN backlog was full\n  TcpExtListenOverflows - detecting when a TCP connection completed the 3-way handshake but the accept queue was full or when a SYN was received while the accept queue was full\n Because these counters are all part of the network namespace and are global within a namespace, no information about which socket or application caused the issue will be visible, and if the process is in a container, it will not be visible in the base system counters (in the default network namespace). Because of this, every network namespace will need to be inspected/monitored for these counters, and then additional work needs to be done to trace this back to the application, potentially using the kernel log lines as a hint in the case of the SYN backlog variant.\n  The metrics available from the counters above provide a minimal picture of backlog overflows and dropped connections, but ideally we would be able to inspect this situation system-wide, seeing through any network namespaces, and be able to link it back to an application and even socket/port.\n This is possible using kprobes and eBPF tracing using  bcc, by hooking kernel functions that handle these failure cases and inspecting the context at that point in time. This allows us to extract realtime data from systems in production, unlike the counters which are at best vague indicators of an underlying issue existing somewhere on the system.\n We know that the  ListenOverflows counter is incremented any time the accept backlog overflows - we can start there and work back to building a tracing program.\n Searching the Linux source code for  ListenOverflows shows what this counter is called internally -  LINUX_MIB_LISTENOVERFLOWS. Searching the  kernel source tree shows all the places in the kernel that increment that counter - in this case, the best candidates are  tcp_conn_request in  net/ipv4/tcp_input.c and  tcp_v4_syn_recv_sock in  net/ipv4/tcp_ipv4.c. They handle slightly different points in the connection lifecycle:\n tcp_conn_request handles a SYN packet that initiates a new connection against a LISTEN socket and places it in the SYN backlog\n  tcp_v4_syn_recv_sock handles an ACK packet that completes a connection and adds it to the accept queue\n   tcp_conn_request drops connections if the accept queue is full as a safety mechanism, even though it wouldn\u2019t be adding to it yet.  tcp_v4_syn_recv_sock also drops connections if the accept queue is full, and rightly so, since it would be adding to it. If a SYN packet has already been accepted and added to the SYN backlog while the accept queue had available space, but was full by the point the ACK arrived, drops will occur in  tcp_v4_syn_recv_sock when the ACK is received. If a new SYN arrives while the accept queue is full, then  tcp_conn_request will drop instead. For local testing in a VM,  tcp_conn_request is the easier one to test since it doesn\u2019t require careful timing between SYN and ACK to reproduce.\n The code path that increments the  ListenOverflows counter in each of those functions looks like the following:\n int  tcp_conn_request ( struct  request_sock_ops  * rsk_ops ,  const  struct  tcp_request_sock_ops  * af_ops ,  struct  sock  * sk ,  struct  sk_buff  * skb ) {  /* ... */  if  ( sk_acceptq_is_full ( sk ))  {  NET_INC_STATS ( sock_net ( sk ),  LINUX_MIB_LISTENOVERFLOWS );  goto  drop ;  }  /* ... */ drop:  tcp_listendrop ( sk );  return  0 ; } struct  sock  * tcp_v4_syn_recv_sock ( const  struct  sock  * sk ,  struct  sk_buff  * skb ,  struct  request_sock  * req ,  struct  dst_entry  * dst ,  struct  request_sock  * req_unhash ,  bool  * own_req ) {  /* ... */  if  ( sk_acceptq_is_full ( sk ))  goto  exit_overflow ;  /* ... */ exit_overflow:  NET_INC_STATS ( sock_net ( sk ),  LINUX_MIB_LISTENOVERFLOWS );  /* ... */ }\n   When looking to trace functions that are inlined like this, the easiest way to hook the condition is to attach to the start of the calling function (in this case  tcp_conn_request and  tcp_v4_syn_recv_sock) which is not inlined, and perform the same conditional check in our eBPF code. We can do this with kprobes:\n /* generic handler */ static  inline  void  handle_sk_potential_overflow ( struct  pt_regs  * ctx ,  int  syn_recv ,  const  struct  sock  * sk ) {  /* we need to read these using bpf_probe_read to ensure the read is safe */  u32  sk_ack_backlog  =  0 ;  u32  sk_max_ack_backlog  =  0 ;  bpf_probe_read ( &amp; sk_ack_backlog ,  sizeof ( sk_ack_backlog ),  ( void  * ) &amp; sk -&gt; sk_ack_backlog );  bpf_probe_read ( &amp; sk_max_ack_backlog ,  sizeof ( sk_max_ack_backlog ),  ( void  * ) &amp; sk -&gt; sk_max_ack_backlog );  if  ( sk_ack_backlog  &gt;  sk_max_ack_backlog )  {  /* handle the condition */  } } /* when a SYN arrives */ struct  tcp_request_sock_ops ; void  kprobe__tcp_conn_request ( struct  pt_regs  * ctx ,  struct  request_sock_ops  * rsk_ops ,  const  struct  tcp_request_sock_ops  * af_ops ,  const  struct  sock  * sk ,  struct  sk_buff  * skb ) {  handle_sk_potential_overflow ( ctx ,  0 ,  sk ); } /* when an ACK arrives for a SYN_RECV socket */ void  kprobe__tcp_v4_syn_recv_sock ( struct  pt_regs  * ctx ,  const  struct  sock  * sk )  /* no need for the remaining unused args */ {  handle_sk_potential_overflow ( ctx ,  1 ,  sk ); }\n At this point, we have a hook on the same condition that would trigger incrementing the  ListenOverflows counter in TCP over IPv4. This can be fleshed out to read detailed information about the socket and return it to the userspace tracing program.\n  One such program is included in the lab, let\u2019s start up our laggy server again:\n      The result will be traces showing where the backlog overflowed the configured maximum, along with details of the process and whether it occured during SYN or ACK:\n vagrant@blog-lab-scaling-accept:~$ sudo python /vagrant/trace_backlog_overflow.pyCONTAINER/HOST PID PROCESS NETNSID BIND PKT BL MAXblog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blog-lab-scaling-acc 14742 python /vagrant/lagg 4026531992 127.0.0.1:8080 SYN 11 10blo\n......", "posttime": "2020-07-04 09:38:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u8fde\u63a5", "title": "\u6269\u5c55Linux\u670d\u52a1\uff1a\u5728\u63a5\u53d7\u8fde\u63a5\u4e4b\u524d", "title_en": "Scaling Linux Services: Before accepting connections", "transed": 1, "url": "https://theojulienne.io/2020/07/03/scaling-linux-services-before-accepting-connections.html", "via": "", "real_tags": ["linux", "\u8fde\u63a5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4efd\u62a5\u7eb8\u6863\u6848\u4e2d\u7684\u4e00\u9879\u5076\u7136\u53d1\u73b0\u8ba9\u52a0\u62ff\u5927\u7684\u996e\u9152\u8005\u5782\u6d8e\u4e8e-\u6700\u7ec8-\u62ff\u5230\u4e00\u4e9b\u514b\u6717\u514b\u9152\u7684\u524d\u666f\u3002\n\u5728\u4e0a\u6b21\u996e\u7528\u4e00\u4e2a\u591a\u4e16\u7eaa\u540e\uff0c\u5728\u4e92\u8054\u7f51\u4fa6\u63a2\u548c\u73b0\u5b9e\u4e16\u754c\u7684\u917f\u9152\u5546\u627e\u56de\u4e86\u4e00\u79cd\u66fe\u7ecf\u5728\u5317\u7f8e\u5e7f\u53d7\u6b22\u8fce\u4f46\u9ed8\u9ed8\u65e0\u95fb\u7684\u996e\u6599\u540e\uff0c\u996e\u6599\u9274\u8d4f\u5bb6\u4eec\u5f88\u5feb\u5c31\u53ef\u4ee5\u54c1\u5c1d\u5230Cronk\u535a\u58eb\u7684\u590d\u5408Sarsparilla\u5564\u9152\u4e86\u3002\n2020\u5e74\u514b\u9686\u514b\u7684\u590d\u5174\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5927\u5b66\u7814\u7a76\u5458\u4fdd\u7f57\u00b7\u8d39\u91cc(Paul Fairie)\uff0c\u4ed6\u6700\u8fd1\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff0c\u4ed6\u57281882\u5e74\u51fa\u7248\u7684\u300a\u5361\u5c14\u52a0\u91cc\u5148\u9a71\u62a5\u300b(Calgary Herald)\u4e0a\u53d1\u73b0\u4e86\u4e00\u7cfb\u5217\u79bb\u5947\u7684\u5e7f\u544a\u3002\n\u201c\u5b83\u770b\u8d77\u6765\u592a\u73b0\u4ee3\u4e86\uff0c\u201d\u8d39\u91cc\u8bf4\u3002\u201c\u4e0e\u5f53\u65f6\u5176\u4ed6\u57ce\u5e02\u7684\u5e7f\u544a\u5b8c\u5168\u4e0d\u540c\uff0c\u5b83\u4eec\u7684\u6587\u5b57\u8981\u591a\u5f97\u591a\uff0c\u5bf9\u4ea7\u54c1\u7684\u63cf\u8ff0\u4e5f\u8981\u591a\u5f97\u591a\u3002\u201d\nFairie\u5c06\u8fd9\u4e9b\u7167\u7247\u53d1\u5e03\u5230\u4ed6\u7684Twitter\u8d26\u6237\u4e0a\uff0c\u4e0d\u4e45\uff0c\u201cCronk\u201d\u8fd9\u4e2a\u8bcd\u5c31\u5f00\u59cb\u5728\u52a0\u62ff\u5927\u7684Twitter\u4e0a\u6d41\u884c\u8d77\u6765\u3002\n(@paulisci)1883\u5e74\uff0c\u4e00\u79cd\u540d\u4e3aCronk&34\uff1b\u7684\u996e\u6599\u5f00\u59cb\u5728\u201c\u5361\u5c14\u52a0\u91cc\u5148\u9a71\u62a5\u201d\u4e0a\u505a\u5e7f\u544a\u3002\u770b\u770b\u4f60\u80fd\u4e0d\u80fd\u8ba4\u51fa\u4ed6\u4eec\u7684\u5e7f\u544a\u3002pic.twitter.com/yg3dMRDkY6\u3002\n\u5176\u4ed6\u4eba\u53d1\u73b0\u4e86\u66f4\u591a\u7684\u5e7f\u544a\uff0c\u4ee5\u53ca\u51fa\u552e\u5b83\u7684\u534e\u4e3d\u74f6\u5b50\u7684\u56fe\u7247-\u6700\u7ec8\u8fd8\u53d1\u73b0\u4e86\u4e00\u672c1860\u5e74\u7684\u4f5c\u54c1\u300a\u5b9e\u7528\u6536\u636e\u624b\u518c\u300b(The Handbook Of Practice Receipt)\u7684\u5728\u7ebf\u526f\u672c\uff0c\u5176\u4e2d\u5305\u62ec\u514b\u6717\u514b\u98df\u8c31\u3002\n\u8fd9\u80a1\u70ed\u6f6e\u73b0\u5728\u5df2\u7ecf\u4fc3\u4f7f\u5361\u5c14\u52a0\u91cc\u7684\u4e00\u5bb6\u5564\u9152\u5382\u917f\u9020\u4e86120\u591a\u5e74\u6765\u7684\u7b2c\u4e00\u6279\u514b\u6717\u514b\u3002\n\u201c\u66fe\u51e0\u4f55\u65f6\uff0c\u6211\u5e0c\u671b\u6211\u6709\u80fd\u529b\u8ba9\u514b\u6717\u514b\u8d77\u6b7b\u56de\u751f\uff0c\u201d\u51b7\u82d1\u5564\u9152\u917f\u9020\u5546\u5e03\u83b1\u514b\u00b7\u8d1d\u5c14\u4e01(Blake Belding)\u8bf4\u3002\u201c\u4f46\u540e\u6765\u6211\u610f\u8bc6\u5230\uff0c\u6211\u786e\u5b9e\u6709\u80fd\u529b\u8ba9\u514b\u6717\u514b\u8d77\u6b7b\u56de\u751f\u3002\u6240\u4ee5\u6211\u5c31\u53bb\u8ba2\u4e86\u98df\u6750\u3002\u201c\u3002\n\u8d1d\u5c14\u4e01\u8bf4\uff0c\u98df\u8c31\u8981\u6c42\u4f7f\u7528\u9ec4\u6a80\u3001\u838e\u838e\u8349\u3001\u5564\u9152\u82b1\u3001\u6d0b\u7518\u83ca\u3001\u8089\u6842\u3001\u751f\u59dc\u3001\u7eff\u8336\u548c\u7cd6\u871c\u3002\u201c\u6211\u60f3\u5b83\u5c1d\u8d77\u6765\u4f1a\u50cf\u8f9b\u8fa3\u7684\u6839\u6c41\u5564\u9152\u3002\u6211\u4ece\u6765\u6ca1\u6709\u771f\u6b63\u7528\u8fc7\u7cd6\u871c\uff0c\u800c\u4e14\u91cc\u9762\u6709\u5f88\u591a\u751f\u59dc\uff0c\u6240\u4ee5\u5b83\u4f1a\u8d77\u4f5c\u7528\u7684\u3002\u201c\u3002\n\u7b2c\u4e00\u6279800\u5347(211\u52a0\u4ed1)\u5e94\u8be5\u5728\u4e24\u5468\u5185\u51c6\u5907\u597d-\u540c\u6837\u5982\u6b64\uff0c\u56e0\u4e3a\u8d1d\u5c14\u4e01\u5df2\u7ecf\u88ab\u8ba2\u5355\u6df9\u6ca1\uff0c\u5305\u62ec\u6765\u81ea\u82f1\u56fd\u548c\u7f8e\u56fd\u7684\u8bf7\u6c42\u3002\n\u4eba\u4eec\u6240\u77e5\u7684\u7b2c\u4e00\u6b21\u63d0\u5230\u8fd9\u79cd\u996e\u6599\u662f\u57281840\u5e74\u7ebd\u7ea6\u5dde\u9521\u62c9\u4e18\u5179\u7684\u4e00\u5219\u5e7f\u544a\u4e2d\uff0c\u5e7f\u544a\u5c06\u8fd9\u79cd\u996e\u6599\u7684\u53d1\u660e\u5f52\u529f\u4e8e25\u5c81\u7684\u6c83\u4f26\u00b7\u514b\u7f57\u514b(Warren Cronk)\u3002\n\u5b83\u663e\u7136\u5f88\u6d41\u884c\u3002\u516d\u5e74\u540e\uff0c\u4e00\u4f4d\u533b\u751f\u5728\u201c\u9521\u62c9\u4e18\u5179\u6bcf\u65e5\u661f\u62a5\u201d(Syracuse Daily Star)\u4e0a\u64b0\u6587\u79f0\u8d5e\u5b83\u201c\u6709\u76ca\u5065\u5eb7\uff0c\u5c31\u50cf\u7981\u9152\u4e00\u6837\u4ee4\u4eba\u5411\u5f80\u201d\u3002\n\u4f46\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u201c\u5c0f\u5564\u9152\u201d--\u800c\u4e14\u53ef\u80fd\u6709\u8f7b\u5fae\u7684\u9152\u7cbe\u542b\u91cf\u3002\u8d1d\u5c14\u4e01\u4f30\u8ba1\uff0c\u73b0\u4ee3\u514b\u6717\u514b\u7684\u9152\u7cbe\u542b\u91cf\u5c06\u57283-4%\u5de6\u53f3\u3002\n\u514b\u6717\u514b\u5f00\u59cb\u7279\u8bb8\u7ecf\u8425\u751f\u4ea7\uff0c\u523019\u4e16\u7eaa80\u5e74\u4ee3\u672b\uff0c\u8fd9\u79cd\u996e\u6599\u5728\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\u90fd\u53ef\u4ee5\u4e70\u5230\u3002\n\u6258\u9a6c\u65af\u00b7\u5361\u7eb3\u5229(Thomas Kanley)\u5728\u5386\u53f2\u74f6\u5b50\u6536\u85cf\u5bb6\u8054\u5408\u4f1a(Federation Of History Bottle Collectors)\u7684\u6708\u520a2010\u5e7412\u6708\u53f7\u4e0a\u5199\u9053\uff1a\u201c\u6211\u4e0d\u77e5\u9053\u662f\u5426\u6709\u53ef\u80fd\u8ffd\u8e2a\u6c83\u4f26\u00b7\u514b\u6717\u514b(Warren Cronk)\u7528\u4ed6\u7684\u2018\u590d\u5408\u838e\u838e\u5e15\u91cc\u62c9\u5564\u9152\u2019(Compound Sarsparilla Beer)\u4ea7\u751f\u7684\u6240\u6709\u57ce\u5e02\u548c\u5f71\u54cd\u529b\u3002\u201d(\u74f6\u5b50\u6536\u85cf\u5bb6\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u5bfb\u627e\u66fe\u7ecf\u51fa\u552e\u5b83\u7684\u624b\u5439\u5bb9\u5668\u3002)\n\u5c1a\u4e0d\u6e05\u695a\u514b\u6717\u514b\u5e1d\u56fd\u5d29\u6e83\u7684\u539f\u56e0\uff0c\u4f46\u5361\u7eb3\u5229\u6000\u7591\u4ed6\u662f19\u4e16\u7eaa\u672b\u88ad\u51fb\u5317\u7f8e\u7684\u4e00\u573a\u5927\u8427\u6761\u7684\u53d7\u5bb3\u8005\u3002\u201c\u6c7d\u6c34\u8d38\u6613\u5f88\u5bb9\u6613\u53d7\u5230\u7ecf\u6d4e\u4e0b\u6ed1\u7684\u5f71\u54cd\uff0c\u8fd9\u79cd\u60c5\u51b5\u7ecf\u5e38\u53d1\u751f\u3002\u5927\u591a\u6570\u4eba\u6ca1\u6709\u94b1\u4e70\u5962\u4f88\u54c1\u3002\u6c7d\u6c34\u751f\u610f\u5f88\u5bb9\u6613\u9677\u5165\u8d22\u52a1\u56f0\u5883\uff0c\u201c\u4ed6\u5199\u9053\u3002\n\u5982\u679c\u5386\u53f2\u6709\u4efb\u4f55\u542f\u793a\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u6b3e\u996e\u6599\u7684\u5230\u6765\u6070\u597d\u662f\u590f\u5929\u7684\u6700\u4f73\u65f6\u673a\u3002\n1848\u5e74\uff0c\u514b\u5229\u592b\u5170\u4e00\u5bb6\u62a5\u7eb8\u7684\u4e00\u5219\u5e7f\u544a\u8bf4\uff1a\u201c\u9884\u8ba1\u8fd9\u51e0\u5929\u5929\u6c14\u4f1a\u53d8\u6696\uff0c\u514b\u6717\u514b\u535a\u58eb\u7f8e\u5473\u5065\u5eb7\u7684\u996e\u6599\u9700\u6c42\u91cf\u4f1a\u5f88\u5927\u3002\u201d\n\u867d\u7136\u591a\u5e74\u6765\u4eba\u4eec\u7684\u53e3\u5473\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5305\u62ec\u5728\u708e\u70ed\u7684\u5929\u6c14\u4e0b\u504f\u7231\u66f4\u6e05\u6de1\u3001\u66f4\u82b3\u9999\u7684\u996e\u6599\uff0c\u4f46\u8d1d\u5c14\u4e01\u5e76\u4e0d\u62c5\u5fc3\u3002\n\u201c\u6211\u8ba4\u4e3a\u4efb\u4f55\u4eba\u90fd\u4e0d\u4f1a\u5931\u671b\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u514b\u6717\u514b\u535a\u58eb\u77e5\u9053\u81ea\u5df1\u5728\u505a\u4ec0\u4e48\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167\u6307\u793a\u53bb\u505a\uff0c\u6211\u4eec\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u83b7\u80dc\u8005\u3002\u201d", "note_en": "A chance discovery in a newspaper archive has left drinkers in  Canada and beyond salivating at the prospect of \u2013 finally \u2013 getting their hands on some Cronk.\n More than a century after it was last consumed, beverage connoisseurs will soon be able to enjoy Dr Cronk\u2019s Compound Sarsaparilla Beer, after internet sleuths and real-world brewers recovered a drink that was once wildly popular across North America but vanished into obscurity.\n The 2020 Cronk revival can be traced back to the university researcher Paul Fairie, who recently tweeted about a series of bizarre adverts he had found in an 1882 copy of the Calgary Herald.\n      \u201cIt just seemed so modern,\u201d said Fairie. \u201cNot at all like ads in other cities at the time, that are a lot wordier and a lot more descriptive of the product.\u201d\n Fairie  posted the images to his Twitter account and before long, the word \u201cCronk\u201d began trending on Canadian Twitter.\n (@paulisci) In 1883, a drink called &#34;Cronk&#34; started advertising in the Calgary Herald. See if you can spot their ads.  pic.twitter.com/yg3dMRDkY6\n Others found more adverts, as well as images as the ornate  bottles it was sold in \u2013 and eventually an online copy of  The Handbook of Practical Receipts, an 1860 work that included the Cronk recipe.\n  The flurry of interest has now prompted a Calgary brewery to make the first batch of Cronk in more than 120 years.\n \u201cOnce upon a time, I would have wished that I had the power to bring Cronk back to life,\u201d said Blake Belding, head brewer at Cold Garden. \u201cBut then I realized that I  did have the power to bring Cronk back to life. So I went ahead and ordered the ingredients.\u201d\n The recipe calls for sassafras, sarsaparilla, hops, chamomile, cinnamon, ginger, green tea and molasses, said Belding. \u201cI think it\u2019s going to taste like a spicy root beer. I\u2019ve never really used molasses and there\u2019s a lot of ginger in there, so it\u2019ll kick.\u201d\n The first 800-litre (211-gallon) batch should be ready in two weeks \u2013 just as well, because Belding has been inundated with orders, including requests from the UK and US.\n  The first known mention of the drink was in an 1840 advert from Syracuse, New York, which credits its invention to one Warren Cronk, 25.\n It clearly caught on. Writing in the Syracuse Daily Star six years later, a doctor praised it \u201cas healthful, and very desirable as a Temperance drink\u201d.\n But it was considered a \u201csmall beer\u201d \u2013 and was probably mildly alcoholic. Belding estimates that modern Cronk will have around 3-4% alcohol content.\n Cronk began franchising out production, and by the late 1880s, the drink was available throughout the United States and Canada.\n \u201cI don\u2019t know if it will ever be possible to trace all the cities and the influence that Warren Cronk has had with his \u2018Compound Sarsaparilla Beer\u2019,\u201d wrote Thomas Kanalley in the  December 2010 issue of the Federation of Historical Bottle Collectors\u2019s monthly newsletter. (Bottle collectors have long sought out the hand-blown vessels in which it was once sold.)\n It is not clear why Cronk\u2019s empire crumbled, but Kanalley suspects he fell victim to one of the depressions that hit North America in the late 19th century. \u201cThe soda trade was very vulnerable to downturns in the economy, which happened frequently. Most people did not have money for luxuries. A soda business could easily get in financial trouble,\u201d he wrote.\n  If history is any indication, the drink\u2019s arrival is perfectly timed for the summer.\n \u201cWarm weather is expected about these days, and Dr. Cronk\u2019s delicious and healthful beverage will be in great demand,\u201d said one  advertisement from a Cleveland newspaper in 1848.\n While tastes have changed over the years, including a shift in preference to lighter, more aromatic drinks in the heat, Belding isn\u2019t worried.\n \u201cI don\u2019t think anyone\u2019s going to be disappointed,\u201d he said. \u201cDr Cronk knew what he was doing and if we follow the instructions, we\u2019re going to come up with a winner.\u201d", "posttime": "2020-07-04 09:38:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5931\u843d,rules,\u996e\u6599", "title": "\u201c\u514b\u6717\u514b\u7edf\u6cbb\u6211\u8eab\u8fb9\u7684\u4e00\u5207\u201d\uff1a\u5931\u843d\u7684\u996e\u6599\u5728120\u5e74\u540e\u590d\u6d3b", "title_en": "'Cronk rules everything around me': lost beverage resurrected after 120 years", "transed": 1, "url": "https://www.theguardian.com/world/2020/jul/03/dr-cronk-drink-canada-brewery", "via": "", "real_tags": ["\u5931\u843d", "rules", "\u996e\u6599"]}, {"category": "", "categoryclass": "", "imagename": "18276fba114ad2555d2c185ff1424ddd.png", "infoid": 1009756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728MacOS11(\u4e5f\u79f0\u4e3aBig Sur)\u4e2d\uff0c\u82f9\u679c\u53d6\u6d88\u4e86\u4ece\u547d\u4ee4\u884c\u5b89\u88c5MacOS\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd\u3002\n\u6b64\u529f\u80fd\u4ee5\u524d\u662fMacOS&#39\uff1b\u4f01\u4e1a\u8f6f\u4ef6\u5305\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5141\u8bb8\u7cfb\u7edf\u7ba1\u7406\u5458\u901a\u8fc7\u81ea\u52a8\u5316\u811a\u672c\u5728\u516c\u53f8\u8303\u56f4\u5185\u90e8\u7f72\u65b0\u914d\u7f6e\u3002\n\u7136\u800c\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u90e8\u7f72\u65b0\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd\u4e5f\u88ab\u6076\u610f\u8f6f\u4ef6\u5e2e\u6d3e\u6216\u5e7f\u544a\u8f6f\u4ef6\u83cc\u682a\u6ee5\u7528\uff0c\u4ed6\u4eec\u4f7f\u7528\u5b83\u662f\u56e0\u4e3a\u5b83\u662f\u9759\u9ed8\u7684\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u7c7b\u578b\u7684\u7528\u6237\u4ea4\u4e92\u3002\n\u83b7\u5f97Mac\u90e8\u7f72\u670d\u52a1\u5668\u8bbf\u95ee\u6743\u9650\u6216\u4ec5\u611f\u67d3\u4e00\u53f0Mac\u7684\u9ed1\u5ba2\u6216\u6076\u610f\u8f6f\u4ef6\u4f5c\u8005\u6ee5\u7528\u547d\u4ee4\u884c\u90e8\u7f72\u81ea\u5df1\u7684\u6076\u610f\u914d\u7f6e\uff0c\u4ee5\u52ab\u6301\u4ee3\u7406\u8bbe\u7f6e\u3001\u66f4\u6539\u9ed8\u8ba4\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002\n\u4f46\u662f\uff0c\u5728MacOS11\u53ca\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u5b89\u88c5\u65b0\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd\u5df2\u88ab\u4fee\u6539\uff0c\u4ee5\u6d88\u9664\u9759\u9ed8\u5b89\u88c5\u7684\u6f0f\u6d1e\u3002\n\u4e0a\u5468\uff0c\u82f9\u679c\u516c\u53f8\u754c\u9762\u8bbe\u8ba1\u5e08\u51ef\u6587\u00b7\u7c73\u5c14\u767b\u5728WWDC 2020\u5927\u4f1a\u4e0a\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u5ba3\u5e03\uff0c\u4eceMacOS Big Sur\u5f00\u59cb\uff0c\u4f60\u5c06\u4e0d\u80fd\u518d\u5b8c\u5168\u4f7f\u7528\u7ec8\u7aef\u5b89\u88c5\u914d\u7f6e\u6587\u4ef6\u3002\n\u5f53\u60a8\u5c1d\u8bd5\u901a\u8fc7\u547d\u4ee4\u884c\u5b89\u88c5\u914d\u7f6e\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u89c6\u4e3a\u4e0b\u8f7d\u7684\u914d\u7f6e\u5f0f\uff0c\u60a8\u5fc5\u987b\u5728\u914d\u7f6e\u5f0f\u7cfb\u7edf\u9996\u9009\u9879\u7a97\u683c\u4e2d\u624b\u52a8\u5b8c\u6210\u5b89\u88c5\uff0c&#34\uff1bMilden\u8865\u5145\u9053\u3002\n\u8fd9\u610f\u5473\u7740\u9700\u8981\u7528\u6237\u4ea4\u4e92\u548c\u5bf9\u7cfb\u7edf\u7684\u7269\u7406\u8bbf\u95ee\u624d\u80fd\u5b8c\u6210\u64cd\u4f5c\u3002\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4f1a\u5c06\u88ab\u6076\u610f\u8f6f\u4ef6/\u5e7f\u544a\u8f6f\u4ef6\u6ee5\u7528\u7684\u9759\u9ed8\u6280\u672f\u8f6c\u53d8\u4e3a\u9700\u8981\u67d0\u79cd\u793e\u4f1a\u5de5\u7a0b\u7684\u653b\u51fb\u5a92\u4ecb\uff0c\u4ece\u800c\u4f7f\u5176\u6548\u7387\u964d\u4f4e\u8bb8\u591a\u500d\u3002\n\u82f9\u679c\u516c\u53f8(Apple)\u5728\u5e94\u5bf9\u5b89\u88c5\u6076\u610f\u914d\u7f6e\u6587\u4ef6\u7684\u5e7f\u544a\u8f6f\u4ef6\u7684\u761f\u75ab\u65b9\u9762\u6240\u505a\u7684\u6b63\u662f\u6211\u5e0c\u671b\u4ed6\u4eec\u505a\u7684\uff0cMalwarebytes\u7684Mac&amp\uff1bMobile\u4e3b\u7ba1\u6258\u9a6c\u65af\u00b7\u91cc\u5fb7(Thomas Reed)\u4e0a\u5468\u5728\u4e00\u6761\u63a8\u6587\u4e2d\u8868\u793a\u3002\n\u82f9\u679c\u5df2\u7ecf\u505a\u4e86\u6211\u5e0c\u671b\u4ed6\u4eec\u505a\u7684\u4e8b\u60c5\uff0c\u4ee5\u5e94\u5bf9\u5b89\u88c5\u6076\u610f\u914d\u7f6e\u6587\u4ef6\u7684\u5e7f\u544a\u8f6f\u4ef6\u7684\u761f\u75ab\uff01\u5728\u5927\u82cf\u5c14\uff0c\u5982\u679c\u6ca1\u6709\u660e\u786e\u7684\u7528\u6237\u540c\u610f\uff0c\u5c06\u65e0\u6cd5\u518d\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5b89\u88c5\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\uff01\ud83e\udd29pic.twitter.com/di3xfutozs\u3002\n-\u6258\u9a6c\u65af\u00b7\u91cc\u5fb7(@thomasareed)2020\u5e746\u670823\u65e5", "note_en": "With macOS 11, also known as Big Sur, Apple has removed the ability to install macOS profile configurations from the command-line.\n This ability was previously a core feature of macOS&#39; enterprise package, which allows system administrators to deploy new configurations company-wide via automated scripts.\n However, the ability to deploy a new profile config via the command-line has also been abused by malware gangs or adware strains, who used it because it was silent and didn&#39;t require any type of user interaction.\n Hackers or malware authors who gained access to Mac Deployment servers or who infected just one Mac, abused the command-line to deploy their own malicious configurations to hijack proxy settings, change default apps, and more.\n  However, with macOS 11, and going forward, the ability to use the command-line to install a new profile has been modified to remove the &#34;silent installation&#34; loophole.\n   &#34;As of macOS Big Sur, you will no longer be able to completely install profiles using Terminal,&#34; Kevin Milden, Interface Designer at Apple, announced in  a talk at the WWDC 2020 conference last week.\n &#34;When you attempt to install a profile via the command-line, it would treat it as it was &#39;downloaded&#39; and you will have to complete the install in the profile system preferences pane manually,&#34; Milden added.\n   This means that user interaction and physical access to a system will be needed to complete the operation.\n Effectively, this turns a &#34;silent&#34; technique abused by malware/adware into an attack vector that will require some sort of &#34;social engineering,&#34; making it many times less effective.\n  &#34;Apple has done EXACTLY what I was hoping they would do to cope with the plague of adware installing malicious configuration profiles,&#34; Thomas Reed, Director of Mac &amp; Mobile at Malwarebytes, said in a tweet last week.\n Apple has done EXACTLY what I was hoping they would do to cope with the plague of adware installing malicious configuration profiles! In Big Sur, it will no longer be possible to install these profiles via the command line, or in any way without explicit user consent! \ud83e\udd29  pic.twitter.com/di3xFutozs\n\u2014 Thomas Reed (@thomasareed)  June 23, 2020", "posttime": "2020-07-04 09:02:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u5e7f\u544a,apple,big,macos", "title": "Apple MacOS Big Sur\u65b0\u529f\u80fd\u963b\u788d\u5e7f\u544a\u8f6f\u4ef6\u64cd\u4f5c", "title_en": "New Apple macOS Big Sur Feature To Hamper Adware Operations", "transed": 1, "url": "https://www.zdnet.com/article/new-apple-macos-big-sur-feature-to-hamper-adware-operations/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u5e7f\u544a", "apple", "big", "macos"]}, {"category": "", "categoryclass": "", "imagename": "a1fe3a60ccc6bcfdde05ce0aba89586c.jpg", "infoid": 1009755, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u540d\u660e\u661f\u9ad8\u4e2d\u8fd0\u52a8\u5458\u88ab\u62db\u52df\u4e3a\u5eb7\u5948\u5c14\u5927\u5b66\u8e22\u8db3\u7403\uff0c\u5728Snapchat\u4e0a\u4e00\u6bb5\u4ed6\u4f7f\u7528\u79cd\u65cf\u8bfd\u8c24\u7684\u89c6\u9891\u5728\u7f51\u4e0a\u75af\u4f20\u540e\uff0c\u4ed6\u5c06\u4e0d\u518d\u5c31\u8bfb\u4e8e\u8be5\u6821\u3002\n\u7531\u4e8eSnapchat\u4e0a\u6709\u4e00\u7bc7\u5632\u8bbd\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u4e4b\u6b7b\u7684\u5e16\u5b50\uff0c\u9a6c\u51ef\u7279\u5927\u5b66\u53d6\u6d88\u4e86\u4e00\u540d\u65b0\u751f\u7684\u5f55\u53d6\u901a\u77e5\u3002\n\u4e00\u540d\u524d\u5f80\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u7684\u4f18\u7b49\u751f\u5728\u5f97\u77e5Instagram\u4e0a\u7684\u4e00\u7bc7\u5e16\u5b50\u79f0\u81ea\u5df1\u201c\u7edd\u5bf9\u201d\u662f\u79cd\u65cf\u4e3b\u4e49\u8005\u540e\uff0c\u73b0\u5728\u4e0d\u5f97\u4e0d\u5236\u5b9a\u5176\u4ed6\u7684\u5927\u5b66\u8ba1\u5212\u3002\n\u5728\u5f17\u6d1b\u4f0a\u5fb7\u5728\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u88ab\u8b66\u65b9\u62d8\u7559\u671f\u95f4\u6b7b\u4ea1\u540e\uff0c\u5168\u56fd\u90fd\u5728\u5bf9\u6839\u6df1\u8482\u56fa\u7684\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u8fdb\u884c\u8c03\u67e5\uff0c\u81f3\u5c11\u670912\u6240\u5b66\u6821\u5df2\u7ecf\u53d6\u6d88\u4e86\u5bf9\u65b0\u751f\u7684\u5f55\u53d6\u901a\u77e5\uff0c\u539f\u56e0\u662f\u7f51\u4e0a\u5e7f\u6cdb\u6d41\u4f20\u7684\u79cd\u65cf\u4e3b\u4e49\u4e8b\u4ef6\uff0c\u5f80\u5f80\u662f\u5728\u6124\u6012\u7684\u5b66\u751f\u548c\u5927\u5b66\u6821\u53cb\u8981\u6c42\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\u4e4b\u540e\u3002\n\u5728\u8fd9\u4e2a\u6570\u5b57\u65f6\u4ee3\uff0c\u5f53\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u4ee5\u75af\u72c2\u7684\u901f\u5ea6\u53cd\u5f39\u65f6\uff0c\u8fd9\u4e9b\u5927\u5b66\u7ed9\u88ab\u6293\u5230\u5728\u7f51\u4e0a\u53d1\u5e03\u79cd\u65cf\u4e3b\u4e49\u60c5\u7eea\u7684\u5b66\u751f\u53d1\u51fa\u7684\u4fe1\u606f\u4e00\u76f4\u662f\u6beb\u4e0d\u59a5\u534f\u7684\uff1a\u8fd9\u91cc\u4e0d\u518d\u6b22\u8fce\u4f60\u3002\n\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u9a6c\u91cc\u6069\u00b7B\u00b7\u5e03\u83b1\u4ec0\u7eb3\u7b2c\u4e00\u4fee\u6b63\u6848\u9879\u76ee(Marion B.Brechner First Amendment Project)\u4e3b\u4efb\u514b\u83b1\u00b7\u5361\u5c14\u5f17\u7279(Clay Calvert)\u8bf4\uff0c\u867d\u7136\u79c1\u7acb\u5b66\u6821\u4e0d\u53d7\u7b2c\u4e00\u4fee\u6b63\u6848\u53ca\u5176\u5bf9\u8a00\u8bba\u7684\u4fdd\u62a4\uff0c\u4f46\u516c\u7acb\u5927\u5b66\u4f5c\u4e3a\u653f\u5e9c\u673a\u6784\uff0c\u5fc5\u987b\u5e94\u5bf9\u4ee5\u79cd\u65cf\u4e3b\u4e49\u6216\u6027\u522b\u6b67\u89c6\u8bed\u8a00\u60e9\u7f5a\u5b66\u751f\u7684\u6f5c\u5728\u6cd5\u5f8b\u540e\u679c\u3002\n\u4f46\u5361\u5c14\u5f17\u7279\u8bf4\uff0c\u7b2c\u4e00\u4fee\u6b63\u6848\u5e76\u4e0d\u4fdd\u8bc1\u6709\u6743\u88ab\u5dde\u7acb\u5927\u5b66\u5f55\u53d6\uff0c\u5f55\u53d6\u8fc7\u7a0b\u8003\u8651\u7684\u4e0d\u4ec5\u4ec5\u662f\u6210\u7ee9\u548c\u8003\u8bd5\u6210\u7ee9\uff0c\u800c\u662f\u201c\u6574\u4e2a\u4eba\u201d\u3002\n\u4ed6\u8bf4\uff1a\u201c\u516c\u7acb\u5927\u5b66\u53d6\u6d88\u5f55\u53d6\u901a\u77e5\u8981\u6bd4\u771f\u6b63\u5f00\u9664\u6b63\u5728\u4e0a\u8bfe\u5e76\u8bf4\u5192\u72af\u6027\u8a00\u8bba\u7684\u5b66\u751f\u5bb9\u6613\u5f97\u591a\u3002\u201d\n\u5f53\u9762\u5bf9\u6700\u8fd1\u5165\u5b66\u7684\u5b66\u751f\u4f7f\u7528\u79cd\u65cf\u4e3b\u4e49\u8bed\u8a00\u7684\u5728\u7ebf\u89c6\u9891\u65f6\uff0c\u8def\u6613\u65af\u5b89\u90a3\u5dde\u7acb\u5927\u5b66(Louisiana State University)\u548c\u5bc6\u82cf\u91cc\u5dde\u7acb\u5927\u5b66(Missouri State University)\u5728\u51b3\u5b9a\u4e0d\u64a4\u9500\u62db\u751f\u65f6\u90fd\u63d0\u5230\u4e86\u8a00\u8bba\u81ea\u7531\u4fdd\u62a4\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u5b66\u751f\u662f\u81ea\u613f\u9000\u5b66\u7684\u3002\n\u5bc6\u82cf\u91cc\u5dde\u7acb\u5927\u5b66\u6821\u957f\u514b\u91cc\u592b\u00b7\u65af\u9a6c\u7279(Clif Smart)\u5728\u4e00\u4efd\u516c\u5f00\u58f0\u660e\u4e2d\u5199\u9053\uff0c\u201c\u4f5c\u4e3a\u4e00\u6240\u516c\u7acb\u5927\u5b66\uff0c\u6211\u4eec\u5728\u6cd5\u5f8b\u4e0a\u5fc5\u987b\u7ef4\u62a4\u5baa\u6cd5\u7b2c\u4e00\u4fee\u6b63\u6848\u4e2d\u4f53\u73b0\u7684\u8a00\u8bba\u81ea\u7531\u539f\u5219\u3002\u201d\u201c\u8fd9\u6bb5\u89c6\u9891--\u5c3d\u7ba1\u4f24\u4eba\u3001\u9ebb\u6728\u4e0d\u4ec1\u3001\u5177\u6709\u653b\u51fb\u6027--\u53d7\u5230\u7b2c\u4e00\u4fee\u6b63\u6848\u7684\u4fdd\u62a4\uff0c\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u4e2d\u7684\u63aa\u8f9e\u4e5f\u662f\u5982\u6b64\u3002\u201d\n\u6700\u8fd1\u9762\u4e34\u540e\u679c\u7684\u5b66\u751f\u662f18\u5c81\u7684\u5185\u7279\u00b7\u6f58\u624e(Nate Panza)\uff0c\u4ed6\u662f\u5eb7\u5948\u5c14\u5927\u5b66(Cornell University)\u7684\u8db3\u7403\u65b0\u5175\uff0c\u6765\u81ea\u65b0\u6cfd\u897f\u5dde\u6c83\u51b2\u30026\u6708\u5e95\uff0cSnapchat\u7684\u4e00\u6bb5\u89c6\u9891\u8bb0\u5f55\u4e86\u4ed6\u4f7f\u7528\u79cd\u65cf\u8bfd\u8c24\u7684\u89c6\u9891\u3002\u201c\u54e6\uff0c\u7b49\u7b49\uff0c\u4f60\u4e0d\u80fd\u628a\u90a3\u4e2a\u6302\u8d77\u6765\uff0c\u201d\u4ed6\u5728\u5f55\u97f3\u4e2d\u8bf4\u3002\n\u636e\u300a\u5eb7\u5948\u5c14\u6bcf\u65e5\u592a\u9633\u62a5\u300b(Cornell Daily Sun)\u62a5\u9053\uff0c\u8fd9\u6bb5\u89c6\u9891\u5728Twitter\u4e0a\u8fc5\u901f\u4f20\u64ad\uff0c\u5c3d\u7ba1\u6f58\u624e\u53d1\u8868\u4e86\u9053\u6b49\u58f0\u660e\uff0c\u4f46\u4ed6\u5728\u7b2c\u4e8c\u5929\u5c31\u5931\u53bb\u4e86\u5728\u8db3\u7403\u961f\u7684\u4f4d\u7f6e\u3002\u4f46\u6b64\u4e3e\u672a\u80fd\u5e73\u606f\u8981\u6c42\u64a4\u9500\u4ed6\u7684\u5165\u5b66\u9080\u8bf7\u7684\u547c\u58f0\uff0c\u5305\u62ec\u4e00\u4efd\u7531400\u591a\u4eba\u7b7e\u540d\u7684\u5728\u7ebf\u8bf7\u613f\u4e66\u3002\n\u5468\u4e8c\uff0c\u5b66\u751f\u62a5\u7eb8\u62a5\u9053\uff0c\u6f58\u624e\u5c06\u4e0d\u518d\u5c31\u8bfb\u5eb7\u5948\u5c14\u5927\u5b66\uff0c\u4f46\u5177\u4f53\u539f\u56e0\u5c1a\u4e0d\u6e05\u695a\u3002\n\u5728\u8bb8\u591a\u7f8e\u56fd\u673a\u6784\u76f4\u8a00\u4e0d\u8bb3\u5730\u53cd\u5bf9\u79cd\u65cf\u4e3b\u4e49\u4e4b\u9645\uff0c\u5eb7\u5948\u5c14\u5927\u5b66\u7684\u6c89\u9ed8\u4e0e\u5176\u4ed6\u51e0\u6240\u5927\u5b66\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\uff0c\u5305\u62ec\u91cc\u58eb\u6ee1\u5927\u5b66(University Of Richmond)\u3002\u91cc\u58eb\u6ee1\u5927\u5b66\u4e0a\u5468\u5ba3\u5e03\uff0c\u5df2\u7ecf\u53d6\u6d88\u4e86\u5bf9\u4e3a\u6f58\u8428\u5f55\u5236\u89c6\u9891\u7684\u5b66\u751f\u7684\u5f55\u53d6\u9080\u8bf7\uff0c\u5728\u63d0\u5230\u5f17\u6d1b\u4f0a\u5fb7\u65f6\uff0c\u4e5f\u53ef\u4ee5\u542c\u5230\u8fd9\u540d\u5b66\u751f\u4f7f\u7528\u79cd\u65cf\u8bfd\u8c24\u3002\n\u6839\u636e\u8be5\u5927\u5b66\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u8fd9\u6bb5\u89c6\u9891\u201c\u6ca1\u6709\u53cd\u6620\u51fa\u8be5\u5927\u5b66\u7684\u4ef7\u503c\u89c2\uff0c\u4e5f\u6ca1\u6709\u53cd\u6620\u51fa\u5b83\u5bf9\u4e00\u4e2a\u84ec\u52c3\u53d1\u5c55\u548c\u5305\u5bb9\u7684\u793e\u533a\u7684\u627f\u8bfa\u201d\uff0c\u58f0\u660e\u79f0\uff0c\u8fd9\u540d\u5b66\u751f\u7684\u884c\u4e3a\u8fdd\u53cd\u4e86\u62db\u751f\u6807\u51c6\u3002\n\u9762\u5bf9\u6700\u8fd1\u53d1\u751f\u7684\u4e8b\u4ef6\u4e0d\u65ad\u589e\u52a0\u7684\u516c\u4f17\u538b\u529b\uff0c\u8bb8\u591a\u5176\u4ed6\u5927\u5b66\u4e5f\u91c7\u53d6\u4e86\u7c7b\u4f3c\u7684\u505a\u6cd5\u30026\u6708\u521d\uff0c\u5bc6\u5c14\u6c83\u57fa\u7684\u4e00\u6240\u79c1\u7acb\u5929\u4e3b\u6559\u5b66\u6821\u9a6c\u594e\u7279\u5927\u5b66(Marquette University)\u5ba3\u5e03\uff0c\u5b83\u5df2\u7ecf\u53d6\u6d88\u4e86\u5bf9\u4e00\u540d\u767d\u4eba\u5b66\u751f\u7684\u62db\u751f\u9080\u8bf7\u548c\u4f53\u80b2\u5956\u5b66\u91d1\uff0c\u8fd9\u540d\u5b66\u751f\u5728Snapchat\u4e0a\u5ba3\u79f0\uff0c\u201c\u8dea\u5728\u522b\u4eba\u7684\u5934\u4e0a\u662f\u53ef\u4ee5\u7684\u201d\uff0c\u56e0\u4e3a\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u5728\u56fd\u6b4c\u4e2d\u8dea\u4e0b\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\u8f9b\u8f9b\u90a3\u63d0\u7684\u6cfd\u7ef4\u5c14\u5927\u5b66(Xavier University)\u64a4\u9500\u4e86\u4e00\u540d\u5373\u5c06\u4e0a\u4efb\u7684\u5b66\u751f\u8fd0\u52a8\u5458\u7684\u5165\u5b66\u8d44\u683c\uff0c\u56e0\u4e3a\u4ed6\u5728\u63a8\u7279\u4e0a\u53d1\u4e86\u4e00\u6761\u5305\u542b\u79cd\u65cf\u8bfd\u8c24\u7684\u63a8\u6587\uff0c\u5e76\u79f0\u6297\u8bae\u8005\u4e3a\u201c\u66b4\u5f92\u201d\u3002\u6821\u53cb\u4eec\u8981\u6c42\u91cd\u65b0\u8003\u8651\u4ed6\u7684\u5f55\u53d6\u63d0\u8bae\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u88ab\u64a4\u9500\u7684\u62db\u751f\u63d0\u8bae\u662f\u9752\u5c11\u5e74\u9f50\u5fc3\u534f\u529b\u7684\u7ed3\u679c\uff0c\u4ed6\u4eec\u5229\u7528\u5927\u91cf\u793e\u4ea4\u5a92\u4f53\u7c89\u4e1d\uff0c\u521b\u5efa\u8c37\u6b4c\u7535\u5b50\u8868\u683c\uff0c\u901a\u8fc7\u5c4f\u5e55\u622a\u56fe\u3001\u89c6\u9891\u548c\u53c2\u4e0e\u8005\u7684\u540d\u5b57\u6765\u6536\u96c6\u548c\u8bb0\u5f55\u79cd\u65cf\u4e3b\u4e49\u548c\u653b\u51fb\u6027\u884c\u4e3a\u3002\n\u5bf9\u4e00\u4e9b\u5b66\u751f\u6765\u8bf4\uff0c\u8ba9\u4ed6\u4eec\u5931\u53bb\u5165\u5b66\u8d44\u683c\u7684\u653b\u51fb\u6027\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u662f\u51e0\u5e74\u524d\u53d1\u5e03\u7684\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5e15\u514b\u5170\u6821\u56ed\u67aa\u51fb\u6848\u7684\u5e78\u5b58\u8005\u51ef\u5c14\u00b7\u5361\u8212\u592b(Kyle Kashuv)\u5c31\u662f\u8fd9\u6837\uff0c\u4ed6\u76f4\u8a00\u4e0d\u8bb3\u5730\u634d\u536b\u4e86\u7b2c\u4e8c\u4fee\u6b63\u6848\uff0c\u540e\u6765\u88ab\u54c8\u4f5b\u5927\u5b66\u5f55\u53d6\u3002\u53bb\u5e746\u6708\uff0c\u4ed6\u5ba3\u5e03\uff0c\u7531\u4e8e\u5361\u8212\u592b16\u5c81\u65f6\u5199\u7684\u4e00\u7cfb\u5217\u8d2c\u635f\u548c\u79cd\u65cf\u4e3b\u4e49\u7684\u6587\u7ae0\uff0c\u54c8\u4f5b\u5df2\u7ecf\u53d6\u6d88\u4e86\u5f55\u53d6\u901a\u77e5\u3002\n\u6700\u8fd1\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u73ca\u745a\u89d217\u5c81\u7684\u5229\u4f2f\u8482\u00b7\u4f0d\u5fb7\u5229(Liberty Woodley)\u63a5\u53d7\u4e86\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u7684\u9080\u8bf7\uff0c\u57282020\u5e74\u5979\u5728\u4f5b\u7f57\u91cc\u8fbe\u5dde\u73ca\u745a\u89d2\u9ad8\u4e2d\u7684\u73ed\u7ea7\u4e0a\u81f4\u544a\u522b\u8f9e\u3002\u4f46\u5979\u4e0d\u4f1a\u5728\u79cb\u5b63\u5165\u5b66\u3002\u4e0a\u4e2a\u6708\uff0c\u4e00\u540d\u5973\u6f14\u5458\u547c\u5401\u5979\u5728Twitter\u4e0a\u768450\u591a\u4e07\u7c89\u4e1d\u53d1\u9001\u4ee4\u4eba\u618e\u6068\u7684\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u7684\u622a\u56fe\uff0c\u4f0d\u5fb7\u5229\u5728Instagram\u4e0a\u7684\u4e00\u6761\u65e7\u5e16\u5b50\u6d6e\u51fa\u6c34\u9762\u540e\uff0c\u8fd9\u4e00\u7a81\u7136\u7684\u53d8\u5316\u5c31\u53d1\u751f\u4e86\u3002\n\u201c\u6211\u771f\u7684\u5f88\u52aa\u529b\u4e0d\u60f3\u6210\u4e3a\u4e00\u4e2a\u79cd\u65cf\u4e3b\u4e49\u8005\uff0c\u4f46\u6211\u7edd\u5bf9\u662f\uff0c\u8fd9\u4e00\u70b9\u662f\u4e0d\u53ef\u5426\u8ba4\u7684\uff0c\u201d\u4f0d\u5fb7\u5229\u572816\u5c81\u65f6\u5199\u4e0b\u7684\u622a\u56fe\u8bf4\u660e\u5199\u9053\u3002\u5728\u5e16\u5b50\u4e2d\uff0c\u5979\u8fd8\u7528\u8d2c\u4e49\u6027\u7684\u8bed\u8a00\u63d0\u5230\u4e86\u5979\u73ed\u4e0a\u7684\u4e24\u540d\u9ed1\u4eba\u5b66\u751f\u3002\n\u8bb0\u8005\u65e0\u6cd5\u8054\u7cfb\u5230\u4f0d\u5fb7\u5229\u548c\u5979\u7684\u7236\u6bcd\u7f6e\u8bc4\uff0c\u4f46\u5979\u5728\u63a5\u53d7\u76d6\u6069\u65af\u7ef4\u5c14\u592a\u9633\u62a5(Gainesville Sun)\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u5979\u5df2\u7ecf\u9053\u6b49\uff0c\u5728\u5979\u4e0d\u65ad\u53d7\u5230\u6b3a\u51cc\u4e4b\u9645\uff0c\u51fa\u4e8e\u6124\u6012\u624d\u5199\u4e0b\u4e86\u8fd9\u7bc7\u5e16\u5b50\u3002\u8fd9\u7bc7\u5e16\u5b50\u53bb\u5e74\u9996\u6b21\u6d6e\u51fa\u6c34\u9762\uff0c\u5f15\u53d1\u4e86\u6b7b\u4ea1\u5a01\u80c1\u3002\u636e\u8be5\u62a5\u62a5\u9053\uff0c\u5979\u8bf4\uff1a\u201c\u6211\u6839\u672c\u4e0d\u662f\u79cd\u65cf\u4e3b\u4e49\u8005\uff0c\u6211\u4e5f\u4e0d\u5145\u6ee1\u4ec7\u6068\u3002\u201d\n\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u53d1\u8a00\u4eba\u53f2\u8482\u592b\u00b7\u5965\u5170\u591a(Steve Orlando)\u4ee5\u4fdd\u5bc6\u89c4\u5b9a\u4e3a\u7531\u62d2\u7edd\u5bf9\u4f0d\u5fb7\u5229\u53d1\u8868\u8bc4\u8bba\uff0c\u4f46\u8868\u793a\u201c\u6709\u4e00\u540d\u51c6\u5b66\u751f\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u53d1\u8868\u79cd\u65cf\u4e3b\u4e49\u8a00\u8bba\uff0c\u8fd9\u540d\u51c6\u5b66\u751f\u5c06\u4e0d\u518d\u6765\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u3002\u201d\n\u867d\u7136\u5728\u5f17\u6d1b\u4f0a\u5fb7\u88ab\u6740\u540e\u7684\u51e0\u5468\u91cc\uff0c\u6765\u81ea\u5927\u5b66\u7684\u62b5\u5236\u4f3c\u4e4e\u6709\u6240\u589e\u52a0\uff0c\u4f46\u8fd9\u4e9b\u62b5\u5236\u5e76\u4e0d\u5c40\u9650\u4e8e\u5373\u5c06\u5165\u5b66\u7684\u65b0\u751f\u30026\u6708\u521d\uff0c\u514b\u83b1\u59c6\u68ee\u5927\u5b66(Clemson University)\u7684\u4e00\u540d\u5b66\u751f\u88ab\u5305\u62ec\u5728\u4e00\u4e2a\u5728\u7ebf\u7535\u5b50\u8868\u683c\u4e2d\uff0c\u8be5\u8868\u683c\u5217\u51fa\u4e86\u636e\u62a5\u9053\u5728\u7f51\u4e0a\u53d1\u5e03\u79cd\u65cf\u4e3b\u4e49\u5185\u5bb9\u7684\u5e74\u8f7b\u4eba\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\n\u201c\u63a8\u7279\uff0c\u505a\u4f60\u81ea\u5df1\u7684\u4e8b\uff0c\u201d\u4e00\u540d\u7528\u6237\u5728\u4e00\u7bc7\u5e16\u5b50\u4e2d\u58f0\u660e\uff0c\u8be5\u5e16\u5b50\u7a81\u51fa\u663e\u793a\u4e86\u8fd9\u540d\u5b66\u751f\u5728\u79cd\u65cf\u4e3b\u4e49\u6d82\u9e26\u65c1\u8fb9\u5fae\u7b11\u7684\u7167\u7247\uff0c\u4ee5\u53ca\u8be5\u5b66\u751fInstagram\u9875\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u548c\u514b\u83b1\u59c6\u68ee\u7684\u7535\u8bdd\u53f7\u7801\u3002\n\u5f53\u88ab\u95ee\u53ca\u8be5\u5927\u5b66\u662f\u5426\u5bf9\u8fd9\u4e00\u804c\u4f4d\u91c7\u53d6\u4e86\u4efb\u4f55\u884c\u52a8\u65f6\uff0c\u4e00\u4f4d\u53d1\u8a00\u4eba\u5468\u4e09\u8868\u793a\uff0c\u8fd9\u540d\u5b66\u751f\u201c\u5df2\u7ecf\u4e0d\u518d\u5728\u514b\u83b1\u59c6\u68ee\u5c31\u8bfb\u201d\u3002", "note_en": "A star high school athlete recruited to play football for Cornell University will no longer be attending the school after a Snapchat video of him using a racial slur went viral.\n Marquette University revoked an incoming freshman\u2019s admission offer because of a Snapchat post mocking the death of  George Floyd.\n And an honors student bound for the University of Florida now has to make other college plans after the university learned of an Instagram post in which the student declared she was \u201cmost definitely\u201d a racist.\n Amid  a national accounting over entrenched and systemic racism after Mr. Floyd\u2019s death in police custody on Memorial Day, at least a dozen schools have rescinded admissions offers to incoming students over instances of racism that circulated widely online, often after outraged  students and university alumni demanded swift action.\n In this digital age, when social media posts can ricochet across the internet at furious speed, the message from those universities to the students caught posting racist sentiments online has been uncompromising: You are no longer welcome here.\n While private schools are not bound by the First Amendment and its protection of speech, public universities, as government institutions, must contend with the potential legal consequences of penalizing students for racist or sexist language, said Clay Calvert, the director of the Marion B. Brechner First Amendment Project at the University of Florida.\n But the First Amendment does not guarantee the right to be admitted to a state university with an admissions process that considers \u201cthe whole person,\u201d beyond just grades and test scores, Mr. Calvert said.\n \u201cA public university is going to have an easier time rescinding an offer of admission than actually expelling a student who is taking classes and says something offensive,\u201d he said.\n When confronted with recent online videos of incoming students using racist language, Louisiana State University and Missouri State University both cited free speech protections in their decisions not to revoke their admissions, though the students withdrew on their own from the schools.\n \u201cAs a public university, we are legally required to uphold the principles of free speech embodied in the First Amendment to the Constitution,\u201d Clif Smart, the Missouri State University president,  wrote in a public statement. \u201cThe video \u2014 as hurtful, insensitive and offensive as it is \u2014 is protected by the First Amendment, as was the language in the social media posts.\u201d\n The most recent student to face consequences is Nate Panza, 18, a football recruit for Cornell University from Watchung, N.J., who was recorded using a racial slur in a Snapchat video in late June. \u201cOh wait, you can\u2019t put that one up,\u201d he says in the recording.\n The video spread quickly on Twitter, and though he issued an apology, Mr. Panza lost his spot on the football team the next day,  according to The Cornell Daily Sun. But the move failed to quell calls to revoke his admission offer, including in an online petition signed by more than 400 people.\n On Tuesday, the student newspaper reported that  Mr. Panza would no longer be attending Cornell, though the exact reason remains unclear.\n  At a time when many American institutions have been outspoken about their opposition to racism, Cornell\u2019s silence stands in marked contrast to several other universities, including the University of Richmond, which announced last week that it had rescinded its admissions offer to the student who recorded the video of Mr. Panza and who can also be heard using a racial slur while mentioning Mr. Floyd.\n The video \u201cdid not reflect the University\u2019s values or its commitment to a thriving and inclusive community,\u201d  according to a statement the university posted on Twitter, which said the student\u2019s actions violated admissions standards.\n Faced with mounting public pressure over recent episodes, many other universities have taken a similar approach. In early June, Marquette University, a private Catholic school in Milwaukee,  announced that it had rescinded both its admissions offer and an athletics scholarship to a white student who had proclaimed on Snapchat that \u201cit\u2019s OK to kneel on someone\u2019s head\u201d because some people think kneeling during the national anthem is acceptable.\n Xavier University in Cincinnati  revoked the admission of an incoming student athlete over tweets that included a racial slur and called protesters \u201cthugs.\u201d Alumni had demanded his admissions offer be reconsidered.\n In some cases, the revoked admissions offers are the results of  concerted efforts by teenagers who have leveraged large social media followings and created Google spreadsheets to collect and document racist and offensive behavior with screenshots, videos and the names of those involved.\n  For some students, the offensive social media posts that cost them their admission were made years earlier, as was the case for Kyle Kashuv, a survivor of the school shooting in Parkland, Fla., who became an outspoken defender of the Second Amendment and was later accepted into Harvard University. Last June, he announced that  Harvard had rescinded its admission offer over a trail of derogatory and racist screeds that Mr. Kashuv wrote as a 16-year-old.\n More recently, Liberty Woodley, 17, the 2020 valedictorian of her high school class in Cape Coral, Fla., had accepted an offer to attend the University of Florida. But she will not be enrolling in the fall. The sudden change came after an actress last month called on her  more than 500,000 Twitter followers to send her screenshots of hateful social media posts, and one of Ms. Woodley\u2019s old Instagram posts was surfaced.\n \u201cI really try so hard not to be a racist person, but I most definitely am, there\u2019s no denying it,\u201d read the screenshot caption, which Ms. Woodley wrote when she was 16. In the post, she also used derogatory language to refer to two Black students in her class.\n Ms. Woodley and her parents could not be reached for comment, but she  said in an interview with The Gainesville Sun that she had apologized and had written the post out of anger at a time when she was being constantly bullied. The post first resurfaced last year, prompting death threats. \u201cI am not racist at all, and I am not full of hate,\u201d she said, according to the newspaper.\n Steve Orlando, a spokesman for the University of Florida, declined to comment about Ms. Woodley, citing confidentiality rules, but said \u201cthere\u2019s a prospective student who made racist comments on social media and that prospective student will no longer be coming to the University of Florida.\u201d\n While the pushback from universities appears to have spiked in the weeks since Mr. Floyd\u2019s killing, they are not limited to incoming freshmen. In early June, a student at Clemson University was included in an online spreadsheet that listed the personal information of young people who had reportedly posted racist content online.\n \u201cTwitter, do your thing,\u201d a user declared in a post that highlighted a photo of the student smiling beside racist graffiti, along with a screenshot of the student\u2019s Instagram page and Clemson\u2019s phone number.\n Asked whether the university had taken any action over the post, a spokesman on Wednesday said the student was \u201cno longer enrolled at Clemson.\u201d", "posttime": "2020-07-04 09:01:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u6d8c\u73b0,\u793e\u4ea4,rescinding", "title": "\u79cd\u65cf\u4e3b\u4e49\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u6d8c\u73b0\uff0c\u5927\u5b66\u53d6\u6d88\u62db\u751f\u901a\u77e5", "title_en": "Colleges Rescinding Admissions Offers as Racist Social Media Posts Emerge", "transed": 1, "url": "https://www.nytimes.com/2020/07/02/us/racism-social-media-college-admissions.html", "via": "", "real_tags": ["\u5927\u5b66", "\u6d8c\u73b0", "\u793e\u4ea4"]}, {"category": "", "categoryclass": "", "imagename": "267f06c68354c18a29bcbea5f21d4341.jpg", "infoid": 1009754, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "16\u4e16\u7eaa\u7684\u610f\u5927\u5229\u519b\u4e8b\u5de5\u7a0b\u5e08\u963f\u6208\u65af\u8482\u8bfa\u00b7\u62c9\u6885\u5229(Agostino Ramelli)\u4e3a\u4e0d\u65ad\u53d8\u5316\u7684\u6587\u827a\u590d\u5174\u65f6\u671f\u7684\u666f\u89c2\u8bbe\u8ba1\u4e86\u8bb8\u591a\u5947\u5999\u7684\u88c5\u7f6e\uff0c\u5305\u62ec\u8d77\u91cd\u673a\u3001\u8c37\u7269\u78e8\u574a\u548c\u6c34\u6cf5\u3002\u4f46\u4ed6\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u8bbe\u5907\u662f\u4e00\u79cd\u7528\u6765\u57f9\u517b\u5927\u8111\u7684\u8bbe\u5907\uff1a\u4e00\u4e2a\u65cb\u8f6c\u7684\u6728\u8f6e\uff0c\u5e26\u6709\u503e\u659c\u7684\u4e66\u67b6\uff0c\u5141\u8bb8\u7528\u6237\u4e00\u6b21\u9605\u8bfb\u591a\u672c\u4e66\u3002\u62c9\u6885\u5229\u5728\u4ed6\u7684\u673a\u68b0\u89e3\u51b3\u65b9\u6848\u56fe\u6587\u5e76\u8302\u7684\u5de8\u8457Le Distributed et Artifiose Machine\u4e2d\u5199\u9053\uff1a\u201c\u8fd9\u662f\u4e00\u53f0\u6f02\u4eae\u800c\u5de7\u5999\u7684\u673a\u5668\uff0c\u5bf9\u4e8e\u4efb\u4f55\u559c\u6b22\u5b66\u4e60\u7684\u4eba\u6765\u8bf4\u90fd\u975e\u5e38\u6709\u7528\u548c\u65b9\u4fbf\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u611f\u5230\u4e0d\u9002\u548c\u53d7\u75db\u98ce\u6298\u78e8\u7684\u4eba\u3002\u201d\u6b64\u5916\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4fbf\u5229\u6027\uff0c\u90a3\u5c31\u662f\u5b83\u5728\u653e\u7f6e\u7684\u5730\u65b9\u5360\u7528\u7684\u7a7a\u95f4\u5f88\u5c0f\u3002\n\u62c9\u6885\u5229\u6700\u7ec8\u4ece\u672a\u5efa\u9020\u8fc7\u8fd9\u4e2a\u88c5\u7f6e\uff0c\u4f46\u4e66\u8f6e\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5438\u5f15\u7740\u90a3\u4e9b\u7814\u7a76\u8fd9\u672c\u4e66\u5386\u53f2\u7684\u4eba-2018\u5e74\uff0c\u7f57\u5207\u65af\u7279\u7406\u5de5\u5b66\u9662(Rochester Institute Of Technology)\u7684\u4e00\u7fa4\u672c\u79d1\u751f\u5f00\u59cb\u5efa\u9020\u4e24\u4e2a\u4e66\u8f6e\u3002\u4ed6\u4eec\u9996\u5148\u52e4\u594b\u5730\u7814\u7a76\u8fd9\u4f4d\u610f\u5927\u5229\u5de5\u7a0b\u5e08\u7684\u63d2\u56fe\uff0c\u7136\u540e\u83b7\u5f97\u4e86\u5386\u53f2\u4e0a\u51c6\u786e\u7684\u6750\u6599\uff0c\u5982\u6b27\u6d32\u5c71\u6bdb\u6989\u548c\u767d\u6a61\u6728\u3002\u5728\u73b0\u4ee3\u7535\u52a8\u5de5\u5177\u548c\u5de5\u827a\u7684\u5e2e\u52a9\u4e0b\uff0c\u5982\u8ba1\u7b97\u673a\u5efa\u6a21\u548cCNC\u5e03\u7ebf\uff0c\u4ed6\u4eec\u4f7f\u5176\u53d8\u5f97\u6829\u6829\u5982\u751f\u3002RIT\u6bd5\u4e1a\u751f\u4f0a\u6069\u00b7\u5e93\u5c14\u8328(Ian Kurtz)\u8bf4\uff1a\u201c\u624b\u5de5\u5207\u5272\u9f7f\u8f6e\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u3002\u201d\u201c\u752816\u4e16\u7eaa\u7684\u6280\u672f\u2026\uff0c\u5b9e\u9645\u7684\u5efa\u9020\u53ef\u80fd\u4e0d\u503c\u5f97\u82b1\u65f6\u95f4\u3002\u6211\u8ba4\u4e3a\u963f\u6208\u65af\u8482\u8bfa\u66f4\u591a\u7684\u662f\u5728\u5c55\u793a\u4ed6\u5bf9\u9f7f\u8f6e\u7cfb\u7edf\u5de5\u4f5c\u539f\u7406\u7684\u7406\u89e3\u3002\u201c\u3002\n\u4eca\u5929\uff0c\u6709\u4e00\u4e2a\u8f6e\u5b50\u505c\u5728\u5c0f\u6885\u5c14\u4f2f\u7279\u00b7B\u00b7\u51ef\u91cc\u9152\u5e97\u3002\u7248\u753b\u6536\u85cf\u5728RIT\u7684\u534e\u83b1\u58eb\u56fe\u4e66\u9986\uff0c\u53e6\u4e00\u4e2a\u5728\u7f57\u5207\u65af\u7279\u5927\u5b66\u7684\u7f57\u585e\u5c14\u00b7\u970d\u666e\u00b7\u7f57\u5bbe\u65af\u56fe\u4e66\u9986\u3002\u6bcf\u4e2a\u91cd\u7ea6600\u78c5\uff0c\u53ef\u5bb9\u7eb38\u672c\u4e66\uff1b\u7528\u6237\u53ef\u4ee5\u5750\u4e0b\u6765\u65cb\u8f6c\u6728\u7bb1\uff0c\u6728\u7bb1\u7ecf\u8fc7\u4ed4\u7ec6\u79f0\u91cd\uff0c\u4ee5\u907f\u514d\u610f\u5916\u79fb\u52a8\u3002\u540c\u6837\u503c\u5f97\u8fd1\u8ddd\u79bb\u89c2\u5bdf\u7684\u662f\u6838\u5fc3\u673a\u5236\uff1a\u4e00\u4e2a\u590d\u6742\u7684\u5468\u8f6c\u9f7f\u8f6e\u7cfb\u7edf\uff0c\u7531\u56f4\u7ed5\u4e2d\u5fc3\u9f7f\u8f6e\u65cb\u8f6c\u7684\u5916\u90e8\u9f7f\u8f6e\u7ec4\u6210\uff0c\u5f88\u50cf\u884c\u661f\u56f4\u7ed5\u592a\u9633\u8fd0\u884c\u3002\n\u62c9\u6885\u5229\u7684\u8bbe\u8ba1\u53ef\u80fd\u6fc0\u53d1\u4e8617\u548c18\u4e16\u7eaa\u5efa\u9020\u7684\u7c7b\u4f3c\u8f6e\u5b50\u7684\u7075\u611f\uff0c\u5176\u4e2d\u51e0\u4e2a\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5b83\u53ef\u80fd\u6bd4\u9700\u8981\u7684\u66f4\u590d\u6742\u3002\u5236\u9020\u8f6e\u5b50\u7684\u53e6\u4e00\u540d\u5b66\u751f\u9a6c\u7279\u00b7\u5c3c\u683c\u4f26(Matt Nygren)\u8bf4\uff1a\u201c\u4f60\u53ef\u4ee5\u5236\u9020\u66f4\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u5b9e\u73b0\u5927\u81f4\u76f8\u540c\u7684\u76ee\u6807\u3002\u201d\u201c\u8fd9\u6bd4\u5b8c\u5168\u5b9e\u9645\u8981\u5962\u4f88\u5f97\u591a\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u66f4\u6709\u6548\u7684\u4e66\u8f6e\u5e94\u8be5\u662f\u50cf\u6469\u5929\u8f6e\u4e00\u6837\u7684\u7ed3\u6784\uff0c\u6709\u60ac\u6302\u7684\u3001\u6709\u91cd\u91cf\u7684\u6447\u7bee\uff0c\u800c\u4e0d\u662f\u6cbf\u7740\u9f7f\u8f6e\u7cfb\u7edf\u79fb\u52a8\u7684\u8d27\u67b6\u3002\n\u5728\u62c9\u6885\u5229\u7684\u65cb\u8f6c\u8bb2\u53f0\u4e4b\u524d\u786e\u5b9e\u6709\u66f4\u7b80\u5355\u7684\u4e66\u8f6e\u3002\u4e2d\u4e16\u7eaa\u665a\u671f\u7684\u8bfb\u8005\u53ef\u4ee5\u5750\u5728\u56fe\u4e66\u65cb\u8f6c\u6728\u9a6c\u65c1\u8fb9\uff0c\u65cb\u8f6c\u6728\u9a6c\u53ef\u4ee5\u50cf\u61d2\u60f0\u7684\u82cf\u73ca\u4e00\u6837\u6cbf\u7740\u6c34\u5e73\u9762\u65cb\u8f6c\u6253\u5f00\u7684\u4e66\u7c4d\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u4fa7\u9762\u652f\u6491\u3002\u5361\u91cc\u85cf\u4e66\u9986\u9986\u957f\u53f2\u8482\u6587\u00b7\u52a0\u5c14\u5e03\u96f7\u65af(Steven Galbraith)\u6000\u7591\uff0c\u8fd9\u4f4d\u610f\u5927\u5229\u5de5\u7a0b\u5e08\u8bd5\u56fe\u6539\u8fdb\u8fd9\u79cd\u8bbe\u8ba1\uff0c\u4ee5\u8fce\u5408\u8d8a\u6765\u8d8a\u591a\u7684\u4ea4\u53c9\u53c2\u8003\u4e66\u7684\u9700\u6c42\uff0c\u8fd9\u4e9b\u4e66\u5f80\u5f80\u53c8\u5927\u53c8\u91cd\u3002\u4ed6\u8bf4\uff1a\u201c\u5728\u6574\u4e2a16\u4e16\u7eaa\uff0c\u4e66\u7c4d\u4e4b\u95f4\u7684\u4ea4\u6d41\u5f00\u59cb\u53d8\u5f97\u66f4\u52a0\u9891\u7e41--\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u53c2\u8003\u53e6\u4e00\u672c\u4e66--\u6240\u4ee5\u4e00\u4e2a\u4e66\u8f6e\u53ef\u80fd\u4f1a\u5f88\u65b9\u4fbf\u3002\u201d\u201c\u4e00\u4e9b\u5b66\u8005\u8bf4\uff0c\u8fd9\u662f\u8d85\u6587\u672c\u6982\u5ff5\u7684\u5f00\u7aef\uff0c\u5373\u8bfb\u8005\u53ef\u4ee5\u5750\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u540c\u65f6\u8bbf\u95ee\u591a\u4e2a\u6587\u672c\u3002\u201d(\u5728\u8d85\u94fe\u63a5\u3001\u641c\u7d22\u5f15\u64ce\u548c\u6d4f\u89c8\u5668\u9009\u9879\u5361\u7684\u65f6\u4ee3\uff0c\u8fd9\u4e2a\u6982\u5ff5\u5728\u4eca\u5929\u518d\u719f\u6089\u4e0d\u8fc7\u4e86\u3002)\u3002\n\u5361\u91cc\u6536\u85cf\u7684\u8f6e\u5b50\u53ef\u4ee5\u7528\u4e8e\u4e2a\u4eba\u9605\u8bfb\u7814\u7a76\uff0c\u4f46\u5b83\u4e5f\u7ecf\u5e38\u88ab\u7528\u4f5c\u6559\u5b66\u5de5\u5177\u3002\u5728RIT\uff0c\u535a\u7269\u9986\u7814\u7a76\u526f\u6559\u6388\u6731\u8389\u00b7\u5fb7\u514b\u5c14(Juilee Decker)\u8ba9\u5979\u7684\u8bfe\u7a0b\u56f4\u7ed5\u4e66\u8f6e\u8bbe\u8ba1\u6e38\u5ba2\u4f53\u9a8c\u3002\u5b66\u751f\u4eec\u5236\u4f5c\u4e86\u5173\u4e8e\u8be5\u8bbe\u5907\u7684\u89c6\u9891\u3001\u6e38\u620f\u548c\u6559\u5b66\u6750\u6599\uff0c\u540c\u65f6\u57f9\u517b\u4e0e\u6570\u5b57\u5185\u5bb9\u7ba1\u7406\u548c\u89c2\u4f17\u53c2\u4e0e\u76f8\u5173\u7684\u6280\u80fd\u3002\u535a\u7269\u9986\u4e5f\u8868\u8fbe\u4e86\u5bf9\u65b9\u5411\u76d8\u7684\u5174\u8da3\uff1a\u5728\u4fc4\u7f57\u65af\uff0c\u4e16\u754c\u8bed\u8a00\u535a\u7269\u9986(Museum Of The World Languages Of The World Languages)\u6839\u636eRIT\u56e2\u961f\u7684\u8ba1\u5212\u5efa\u9020\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u5e76\u5728\u7f51\u4e0a\u53d1\u5e03\u3002\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u592a\u5e73\u6d0b\u5927\u5b66\u4e5f\u8868\u793a\u6709\u5174\u8da3\u6536\u8d2d\u4e00\u53f0\u3002\n\u7231\u4e66\u7684\u4eba\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u80fd\u4e0e\u4e4b\u4ea7\u751f\u5171\u9e23\u7684\u4eba-\u65e5\u8bed\u672f\u8bed\uff0c\u63cf\u8ff0\u4e86\u4e0d\u770b\u4e66\u5c31\u53bb\u4e70\u4e66\u7684\u4e60\u60ef-\u53ef\u80fd\u4e5f\u60f3\u62e5\u6709\u62c9\u6885\u5229\u7684\u4e66\u8f6e\u3002\u4f46\u662f\uff0c\u867d\u7136\u5e93\u5c14\u8328\u548c\u5c3c\u683c\u4f26\u627f\u8ba4\u8be5\u88c5\u7f6e\u5177\u6709\u91cd\u8981\u7684\u5386\u53f2\u610f\u4e49\uff0c\u4f46\u4ed6\u4eec\u90fd\u8ba4\u4e3a\uff0c\u4ece\u5de5\u7a0b\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u5e76\u6ca1\u6709\u592a\u591a\u7684\u5b9e\u9645\u7528\u9014\u3002Nygren\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u4f60\u5e94\u8be5\u8d2d\u4e70\u5e76\u8bd5\u7740\u653e\u5728\u5ba2\u5385\u91cc\u7684\u4e1c\u897f--\u73b0\u5728\u6709\u66f4\u597d\u7684\u5de5\u5177\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\u3002\u201d\u201c\u4f46\u8fd9\u80af\u5b9a\u662f\u4e00\u4ef6\u5f88\u5438\u5f15\u773c\u7403\u7684\u4e8b\u60c5\uff0c\u4e5f\u662f\u6211\u80fd\u60f3\u5230\u7684\u6700\u5947\u7279\u7684\u85cf\u4e66\u65b9\u5f0f\u4e4b\u4e00\u3002\u201d", "note_en": "Agostino Ramelli, the 16th-century Italian military engineer, designed many contraptions for the changing Renaissance landscape, including cranes, grain mills, and water pumps. But his most compelling apparatus was one meant to nurture the mind: a revolving wooden wheel with angled shelves, which allowed users to read multiple books at one time. \u201cThis is a beautiful and ingenious machine, very useful and convenient for anyone who takes pleasure in study, especially those who are indisposed and tormented by gout,\u201d Ramelli wrote in   Le diverse et artificiose machine, his illustrated magnum opus of mechanical solutions . \u201cMoveover, it has another fine convenience in that it occupies very little space in the place where it is set.\u201d\n Ramelli never ended up building this device, but the bookwheel has long intrigued those who study the history of the book\u2014and in 2018, a group of undergraduate engineering students at the Rochester Institute of Technology set out to build two. They began by diligently studying the Italian engineer\u2019s illustration, then procured historically accurate materials, such as European beech and white oak. With the help of modern power tools and processes, such as computer modeling and CNC routing, they brought it to life. \u201cCutting the gears by hand would have taken a considerate amount of time,\u201d says RIT graduate Ian Kurtz. \u201cThe actual construction may not have been worth the time with 16th-century techniques \u2026 I think Agostino was more so showing his understanding of how gear systems worked.\u201d\n  Today, one wheel resides at the  Melbert B. Cary Jr. Graphic Arts Collection at RIT\u2019s Wallace Library, and the other at the University of Rochester\u2019s Rossell Hope Robbins Library. Each weighs about 600 pounds and has room for eight books; users can take a seat and spin the wooden cases, which are carefully weighted to avoid unintended movements. It\u2019s also worth getting close to observe the core mechanism: a complex, epicyclic gearing system that consists of outer gears rotating around a central gear, much like planets moving around the sun.\n Ramelli\u2019s design likely inspired similar wheels that were built in the 17th and 18th centuries, several of which still exist, but it was probably more complicated than it needed to be. \u201cThere are simpler objects you could build that would accomplish mostly the same goals,\u201d says Matt Nygren, another former student who built the wheels. \u201cThis is more extravagant than it is entirely practical.\u201d A more efficient bookwheel, he adds, would be one structured like a Ferris wheel, with hanging, weighted cradles rather than shelves that move along a gear system.\n Simpler bookwheels did precede Ramelli\u2019s rotating lectern. Readers in the late Medieval Period could sit by a book carousel, which rotated open books along a horizontal plane, like a Lazy Susan, and didn\u2019t require side supports. Steven Galbraith, curator of the Cary Collection, suspects that the Italian engineer was trying to improve this design and cater to an increasing need to cross-reference books, which were often large and heavy. \u201cThrough the 16th century, books are beginning to talk to each other a lot more\u2014one might reference another\u2014so a bookwheel could have been convenient,\u201d he says. \u201cSome scholars say it\u2019s the beginning of the idea of hypertext, the idea that a reader can sit in one spot and have access to multiple texts at once.\u201d (That concept is all too familiar today, in the age of hyperlinks, search engines, and browser tabs.)\n  The Cary Collection\u2019s wheel can be used for individual reading research, but it is also often used as a teaching tool. At RIT, Juilee Decker, an associate professor of museum studies, has had her classes design visitor experiences around the bookwheel. Students have  created videos, games, and instructional material about the device, along the way developing skills related to digital content curation and audience engagement. Museums have also expressed interest in the wheel: In Russia, the Museum of Languages of the World built its own version according to the RIT team\u2019s plans, which are  published online. The University of the Pacific in California has also expressed interest in acquiring one.\n Bibliophiles, particularly those who can  relate to  tsundoku\u2014the Japanese term describing the habit of acquiring books without reading them\u2014might want to own Ramelli\u2019s bookwheel, too. But while Kurtz and Nygren acknowledge that the apparatus is historically significant, they both believe it doesn\u2019t serve much of a practical purpose, from an engineering perspective. \u201cI dont think it\u2019s something you should buy and try and keep in your living room\u2014nowadays there are better tools for the job,\u201d Nygren says. \u201cBut it\u2019s certainly an eye-catching thing, and one of the fanciest ways I can think of for storing books.\u201d", "posttime": "2020-07-04 08:42:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5de5\u7a0b\u5e08,engineer,\u65cb\u8f6c", "title": "\u5b66\u751f\u4eec\u5efa\u9020\u4e86\u4e00\u53f016\u4e16\u7eaa\u5de5\u7a0b\u5e08\u7684\u9605\u8bfb\u673a", "title_en": "Students Built a 16th-Century Engineer\u2019s Book-Reading Machine", "transed": 1, "url": "https://www.atlasobscura.com/articles/behold-the-renaissance-bookwheel", "via": "", "real_tags": ["\u5de5\u7a0b\u5e08", "engineer", "\u65cb\u8f6c"]}, {"category": "", "categoryclass": "", "imagename": "4dc40a6063e8062db7cbb969da061229.jpg", "infoid": 1009753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8eTwitter\u7684\u9ed1\u4eba\u7a0b\u5e8f\u5458\u96f7\u91d1\u7eb3\u5fb7\u00b7\u5965\u53e4\u65af\u4e01(Regynald Augustin)\u6765\u8bf4\uff0c\u53d8\u9769\u7684\u52a8\u529b\u6765\u81ea\u53bb\u5e74\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u90ae\u4ef6\u4e2d\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd\uff1a\u81ea\u52a8\u91cd\u65b0\u8e22\u5974\u96b6\u3002\n\u8fd9\u4e9b\u8bdd\u53ea\u662f\u5173\u4e8e\u91cd\u65b0\u542f\u52a8\u4e8c\u7ea7\u7a0b\u5e8f\u7684\u5de5\u7a0b\u8ba8\u8bba\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u4fc3\u4f7f\u5965\u53e4\u65af\u4e01\u5f00\u59cb\u5c1d\u8bd5\u6539\u53d8Twitter\u5bf9\u5e26\u6709\u79cd\u65cf\u4e3b\u4e49\u8054\u7cfb\u7684\u8bcd\u8bed\u7684\u4f7f\u7528\u3002\u5965\u53e4\u65af\u4e01\u4e60\u60ef\u4e8e\u5728\u6280\u672f\u4e0a\u4e0b\u6587\u4e2d\u770b\u5230\u201c\u5974\u96b6\u201d\u8fd9\u4e2a\u8bcd\u3002\u4ed6\u8bf4\uff0c\u4f46\u6709\u4e86\u590d\u51fa\uff0c\u6211\u6bd4\u6211\u60f3\u8c61\u4e2d\u7684\u5de5\u4f5c\u573a\u6240\u66f4\u75af\u72c2\u3002\n\u4ed6\u5148\u662f\u72ec\u81ea\u4e00\u4eba\uff0c\u7136\u540e\u4e0e\u53e6\u4e00\u4f4d\u5de5\u7a0b\u5e08\u51ef\u6587\u00b7\u5965\u5229\u5f17(Kevin Oliver)\u8054\u624b\uff0c\u5e2e\u52a9\u5e26\u5934\u7528\u90a3\u4e9b\u4e0d\u4f1a\u8ba9\u4eba\u56de\u60f3\u8d77\u7f8e\u56fd\u5386\u53f2\u548c\u6587\u5316\u4e2d\u4ee4\u4eba\u538b\u6291\u7684\u90e8\u5206\u7684\u8bcd\u8bed\u6765\u53d6\u4ee3\u50cf\u4e3b\u4eba\u3001\u5974\u96b6\u3001\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u8fd9\u6837\u7684\u8bcd\u8bed\u3002\u4ed6\u8be6\u8ff0\u4e86\u4ed6\u5f53\u65f6\u7684\u60f3\u6cd5\uff1a\u8fd9\u5fc5\u987b\u505c\u6b62\u3002\u8fd9\u4e00\u70b9\u4e5f\u4e0d\u9177\u3002\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\n\u6ca1\u6709\u4eba\u671f\u671b\u6280\u672f\u672f\u8bed\u7684\u6539\u53d8\u4f1a\u7ed3\u675f\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\u7684\u79cd\u65cf\u4e0d\u516c\u6b63\u3002\u4f46\u79d1\u6280\u516c\u53f8\u7684\u4e00\u4e9b\u4eba\uff0c\u5305\u62ecTwitter\u7684\u5965\u5229\u5f17(Oliver)\u548c\u5965\u53e4\u65af\u6c40(Augustin)\uff0c\u6b63\u5728\u6566\u4fc3\u8fdb\u884c\u4ed6\u4eec\u529b\u6240\u80fd\u53ca\u7684\u6539\u9769\u3002\u8fd9\u5305\u62ec\u52aa\u529b\u53d6\u4ee3\u5e26\u6709\u79cd\u65cf\u8272\u5f69\u7684\u6280\u672f\u672f\u8bed\uff0c\u5982\u63cf\u8ff0\u6570\u636e\u5e93\u3001\u8f6f\u4ef6\u9879\u76ee\u3001\u76f8\u673a\u95ea\u5149\u706f\u548c\u786c\u76d8\u9a71\u52a8\u5668\u7684\u4e3b\u6280\u672f\u672f\u8bed\u548c\u4ece\u6280\u672f\u672f\u8bed\u3002\n\u8fd9\u5bb6\u793e\u4ea4\u7f51\u7edc\u7684\u7ecf\u7406\u4eec\u57281\u6708\u4efd\u5c06\u8fd9\u4e24\u540d\u5de5\u7a0b\u5e08\u7684\u5de5\u4f5c\u6b63\u89c4\u5316\uff0c\u8ba4\u53ef\u5728\u6574\u4e2a\u5de5\u7a0b\u90e8\u95e8\u7cfb\u7edf\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u5de5\u4f5c\uff0c\u5e76\u5c06\u5176\u6269\u5c55\u5230\u4e0e\u6027\u522b\u3001\u5e74\u9f84\u548c\u6b8b\u75be\u76f8\u5173\u7684\u6761\u6b3e--\u4f8b\u5982\uff0c\u53d6\u4ee3\u5de5\u65f6\u548c\u5065\u5eb7\u68c0\u67e5\u3002\u5965\u5229\u5f17\u548c\u5965\u53e4\u65af\u4e01\u5728\u63a5\u53d7CNET\u7684\u72ec\u5bb6\u91c7\u8bbf\u65f6\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u52aa\u529b\u3002\n\u968f\u7740\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u7684\u6b7b\u4ea1\u5f15\u53d1\u4e86\u7f8e\u56fd\u53cd\u5bf9\u79cd\u65cf\u4e0d\u5e73\u7b49\u7684\u65b0\u52aa\u529b\uff0c\u8fd9\u4e9b\u52aa\u529b\u5177\u6709\u4e86\u65b0\u7684\u91cd\u8981\u6027\u3002\u4eca\u5e745\u6708\uff0c46\u5c81\u7684\u660e\u5c3c\u82cf\u8fbe\u5dde\u7537\u5b50\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u88ab\u4e00\u540d\u8b66\u5bdf\u7528\u819d\u76d6\u6309\u4f4f\u4ed6\u7684\u8116\u5b50\u6309\u5728\u5730\u4e0a\u3002\u8fd9\u4e00\u4e8b\u4ef6\u5f15\u53d1\u4e86\u5168\u56fd\u5404\u5730\u7684\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u6297\u8bae\u6d3b\u52a8\uff0c\u7acb\u6cd5\u548c\u653f\u7b56\u7684\u6539\u53d8\uff0c\u4ee5\u53ca\u516c\u53f8\u5185\u90e8\u7684\u8f6c\u53d8\u3002\n\u65b0\u7684\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u80fd\u91cf\u63a8\u52a8\u4e86\u63a8\u7279\u4e0a\u7684\u8bcd\u6c47\u53d8\u5316\u3002\u5965\u53e4\u65af\u4e01\u8bf4\uff0c\u6700\u8fd1\u53d1\u751f\u7684\u6bcf\u4ef6\u4e8b\u90fd\u8ba9\u77e5\u540d\u5ea6\u5728\u6574\u4e2a\u516c\u53f8\u8fc5\u901f\u4f20\u64ad\u5f00\u6765\u3002\n\u5fae\u8f6f\u7684Github\u548cLinkedIn\u90e8\u95e8\u3001\u82f9\u679c\u548c\u8c37\u6b4c\u7684Chrome\u90fd\u5728\u8fdb\u884c\u76f8\u5173\u52aa\u529b\uff0c\u901a\u5e38\u662f\u4f5c\u4e3a\u81ea\u4e0b\u800c\u4e0a\u7684\u6539\u53d8\uff0c\u800c\u4e0d\u662f\u5b98\u65b9\u7acb\u573a\u3002\n\u65e9\u4e9b\u65f6\u5019\uff0c2018\u5e74\uff0c\u5e7f\u6cdb\u4f7f\u7528\u7684Python\u7f16\u7a0b\u8bed\u8a00\u7684\u5f00\u53d1\u8005\u653e\u5f03\u4e86\u4e3b/\u4ece\u30022014\u5e74\uff0cDrupal\u5728\u7ebf\u53d1\u5e03\u8f6f\u4ef6\u80cc\u540e\u7684\u56e2\u961f\u7528\u4e3b/\u526f\u672c\u53d6\u4ee3\u4e86\u8fd9\u4e9b\u672f\u8bed\u30022003\u5e74\uff0c\u6d1b\u6749\u77f6\u53bf\u8981\u6c42\u4f9b\u5e94\u5546\u548c\u627f\u5305\u5546\u505c\u6b62\u5728\u8ba1\u7b97\u673a\u8bbe\u5907\u4e0a\u4f7f\u7528\u4e3b/\u4ece\u3002\n\u8981\u6839\u9664\u6587\u6863\u3001\u65e5\u5e38\u8bed\u97f3\u4ee5\u53ca\u76f8\u4e92\u94fe\u63a5\u7684\u7f16\u7a0b\u4ee3\u7801\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u5d4c\u5165\u7684\u672f\u8bed\u662f\u5f88\u590d\u6742\u7684\u3002Twitter\u7684\u76ee\u6807\u662f\u57282021\u5e74\u5e95\u4e4b\u524d\u5b8c\u6210Twitter\u7684\u5de5\u7a0b\u9879\u76ee\uff0c\u5e76\u5411\u5176\u4ed6\u8bd5\u56fe\u505a\u51fa\u540c\u6837\u6539\u53d8\u7684\u4eba\u516c\u5e03\u5b83\u6240\u5b66\u5230\u7684\u7ec6\u8282\u3002\n\u6539\u53d8\u8bed\u8a00\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u6539\u53d8\u57fa\u672c\u7684\u6982\u5ff5--\u4f8b\u5982\uff0c\u5728\u6444\u5f71\u9886\u57df\uff0c\u4e00\u4e9b\u516c\u53f8\u4ecd\u7136\u79f0\u4e4b\u4e3a\u4e3b\u95ea\u5149\u706f\u7684\u95ea\u5149\u706f\u4ecd\u7136\u63a7\u5236\u7740\u4ece\u5c5e\u95ea\u5149\u706f\u3002\u6709\u65f6\uff0c\u4eba\u4eec\u9009\u62e9\u65b0\u8bcd\uff0c\u8bd5\u56fe\u7528\u4e2d\u6027\u8bcd\u6c47\u91cd\u65b0\u5f00\u59cb\uff0c\u5374\u53d1\u73b0\u65b0\u8bcd\u80cc\u8d77\u4e86\u65e7\u8bcd\u7684\u5305\u88b1\u3002\u5395\u6240\u53d8\u6210\u4e86\u5395\u6240\uff0c\u53d8\u6210\u4e86\u6d74\u5ba4\uff0c\u53d8\u6210\u4e86\u6d17\u624b\u95f4\u3002\n\u4f46\u662f\uff0c\u6c11\u6743\u7ec4\u7ec7\u5357\u65b9\u8d2b\u56f0\u6cd5\u5f8b\u4e2d\u5fc3(Southern\u8d2b\u56f0Law Center)\u7684\u5916\u5c55\u4e3b\u4efb\u83b1\u897f\u4e9a\u00b7\u5e03\u9c81\u514b\u65af(Lecia Brooks)\u8ba4\u4e3a\uff0c\u5728\u907f\u514d\u88ab\u79f0\u4e3a\u5fae\u4fb5\u72af\u7684\u5fae\u5999\u6216\u65e0\u610f\u8bc6\u7684\u6b67\u89c6\u884c\u4e3a\u65f6\uff0c\u8c28\u614e\u9009\u8bcd\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u3002\n\u5e03\u9c81\u514b\u65af\u8bf4\uff0c\u6587\u5b57\u5bf9\u53d1\u9001\u8005\u53ef\u80fd\u6beb\u65e0\u610f\u4e49\uff0c\u4f46\u5bf9\u63a5\u6536\u8005\u53ef\u80fd\u6709\u610f\u4e49\u3002\u5979\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u66f4\u591a\u5730\u6ce8\u610f\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u8bcd\u8bed\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u52aa\u529b\u51cf\u8f7b\u5fae\u4fb5\u6270\u3002\n\u6539\u53d8\u8bcd\u6c47\u672f\u8bed\u7684\u4e00\u4e2a\u5e38\u89c1\u53cd\u5bf9\u610f\u89c1\u662f\uff0c\u5b83\u4e0d\u8db3\u4ee5\u63a8\u52a8\u771f\u6b63\u7684\u6539\u53d8\u3002\u5728Twitter\uff0c\u8fd9\u662f\u63d0\u9ad8\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u7684\u5176\u4ed6\u4e3e\u63aa\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u4e9b\u52aa\u529b\u5305\u62ec\u5411\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d(Black Lives Matter)\u4e8b\u4e1a\u6350\u6b3e\uff0c\u4e3a\u90a3\u4e9b\u60f3\u8981\u5e2e\u52a9\u7684\u4eba\u63d0\u4f9b\u5173\u4e8e\u8054\u8c0a\u7684\u5efa\u8bae\uff0c\u5c066\u670819\u65e5\u4f5c\u4e3a\u7f8e\u56fd\u5458\u5de5\u7684\u5047\u671f\uff0c\u8be6\u7ec6\u8bf4\u660e\u5176\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u7684\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u52aa\u529b\uff0c\u63d0\u4f9b\u63a8\u8350\u8bfb\u7269\uff0c\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u7f8e\u56fd\u7684\u9ed1\u4eba\u7ecf\u5386\uff0c\u4ee5\u53ca\u4e3a\u516c\u53f8\u63d0\u4f9b\u5173\u4e8e\u79cd\u65cf\u4e3b\u4e49\u7684\u8a00\u8bba\u548c\u63a8\u6587\u5efa\u8bae\u3002\n\u5e03\u9c81\u514b\u65af\u5e0c\u671b\u770b\u5230Twitter\u51fa\u73b0\u66f4\u591a\u53d8\u5316\uff0c\u6bd4\u5982\u5c06\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u8005\u9a71\u9010\u51fa\u5176\u7f51\u7ad9\u3002\u5979\u8bf4\uff0c\u5982\u679c\u4f60\u60f3\u5220\u9664\u4f24\u5bb3\u6027\u7684\u3001\u6709\u5bb3\u7684\u3001\u4ee4\u4eba\u618e\u6068\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u5220\u9664\u90a3\u4e9b\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u4f60\u7684\u5e73\u53f0\u7684\u4eba\u3002\n\u4f5c\u4e3a\u56de\u5e94\uff0c\u63a8\u7279\u8868\u793a\uff0c\u63a8\u7279\u4e0a\u6ca1\u6709\u4ec7\u6068\u884c\u4e3a\u3001\u6050\u6016\u7ec4\u7ec7\u6216\u66b4\u529b\u6781\u7aef\u7ec4\u7ec7\u7684\u4f4d\u7f6e\u3002\u7531\u4e8e\u8fd9\u4e9b\u89c4\u5b9a\uff0c\u6211\u4eec\u5df2\u7ecf\u6c38\u4e45\u6682\u505c\u4e86\u6570\u767e\u4e2a\u8d26\u53f7\uff0c\u5176\u4e2d\u8bb8\u591a\u8d26\u53f7\u4e3b\u5f20\u5bf9\u5e73\u6c11\u4f7f\u7528\u66b4\u529b\uff0c\u540c\u65f6\u8fd8\u9f13\u5439\u67d0\u79cd\u5f62\u5f0f\u7684\u6781\u7aef\u4e3b\u4e49\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u610f\u8bc6\u5f62\u6001\u3002\nTwitter\u5df2\u7ecf\u5c4f\u853d\u4e86\u4e00\u4e9b\u8d26\u6237\uff0c\u6bd4\u5982\u4e00\u4e2a\u5192\u5145\u5de6\u7ffc\u53cd\u6cd5\u7ec4\u7ec7\u717d\u52a8\u66b4\u529b\u7684\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u56e2\u4f53\uff0c\u4f46\u5176\u9488\u5bf9\u4ec7\u6068\u884c\u4e3a\u7684\u89c4\u5b9a\u53ea\u7981\u6b62\u90a3\u4e9b\u4e3b\u8981\u76ee\u7684\u662f\u717d\u52a8\u4f24\u5bb3\u4ed6\u4eba\u7684\u8d26\u6237\u3002\u8c37\u6b4c(Google)\u65d7\u4e0b\u7684YouTube\u672c\u5468\u7981\u6b62\u4e86\u4e09K\u515a(Ku Klux Klan)\u524d\u9886\u5bfc\u4eba\u5927\u536b\u00b7\u675c\u514b(David Duke)\u548c\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u8005\u7406\u67e5\u5fb7\u00b7\u65af\u5bbe\u585e(Richard Spencer)\u7684\u8d26\u6237\u3002\n\u5965\u5229\u5f17\u8bf4\uff0cTwitter\u7684\u5de5\u7a0b\u56e2\u961f\u6b63\u5728\u52aa\u529b\u6539\u53d8\u6d89\u53ca\u79cd\u65cf\u3001\u6027\u522b\u548c\u80fd\u529b\u7684\u672f\u8bed\u3002\u6761\u6b3e\u548c\u5efa\u8bae\u7684\u66f4\u6362\u5305\u62ec\uff1a\n\u63a8\u7279\u5de5\u7a0b\u603b\u76d1\u8fc8\u514b\u5c14\u00b7\u8499\u5854\u8bfa\u57286\u670825\u65e5\u53d1\u7ed9\u6240\u6709\u63a8\u7279\u5458\u5de5\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\uff0c\u5305\u5bb9\u6027\u8bed\u8a00\u65e8\u5728\u4ee5\u5c0a\u91cd\u3001\u5c0a\u4e25\u548c\u516c\u6b63\u7684\u6001\u5ea6\u5bf9\u5f85\u6240\u6709\u4eba\u3002\u5b83\u7684\u6784\u5efa\u662f\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u52a0\u5165\u8fd9\u4e2a\u56e2\u961f\uff0c\u4e0d\u6392\u65a5\u4efb\u4f55\u4eba\uff0c\u8fd9\u5bf9\u4e8e\u521b\u9020\u4e00\u4e2a\u6bcf\u4e2a\u4eba\u90fd\u611f\u5230\u53d7\u6b22\u8fce\u7684\u73af\u5883\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u9ed1\u4eba\u7684\u751f\u547d\u5f88\u91cd\u8981\u3002\u8bbf\u95eeBlacklivesmatter.carrd.co\u4e86\u89e3\u5982\u4f55\u5b89\u5168\u5730\u6350\u6b3e\u3001\u7b7e\u7f72\u8bf7\u613f\u4e66\u548c\u6297\u8bae\u3002\n\u5c0a\u91cd\u4ed6\u4eba\uff0c\u4fdd\u6301\u6587\u660e\u793c\u8c8c\uff0c\u4e0d\u79bb\u9898\u3002\u6211\u4eec\u5220\u9664\u8fdd\u53cd\u6211\u4eec\u653f\u7b56\u7684\u8bc4\u8bba\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u9605\u8bfb\u8fd9\u4e9b\u8bc4\u8bba\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u65f6\u5173\u95ed\u8ba8\u8bba\u7ebf\u7a0b\u3002", "note_en": "For Regynald Augustin, a Black programmer at  Twitter, the impetus for change arrived in an email last year with the phrase &#34;automatic slave rekick.&#34;\n The words were just part of an engineering discussion about restarting a secondary process, but they prompted Augustin to start trying to change Twitter&#39;s use of words with racist connections. Augustin was used to seeing the term &#34;slave&#34; in technical contexts. &#34;But with &#39;rekick&#39; -- I was madder than I ever thought I&#39;d be in the workplace,&#34; he said.\n First on his own and then joining forces with another engineer, Kevin Oliver, he helped spearhead an effort to replace terms like &#34;master,&#34; &#34;slave,&#34; &#34;whitelist&#34; and &#34;blacklist&#34; with words that didn&#39;t hearken back to oppressive parts of United States history and culture. He recounted his thoughts at the time: &#34;This has to stop. This isn&#39;t cool. We have to change this now.&#34;\n  No one expects that changing technical terms will end centuries of racial injustice. But some people at technology companies, including Oliver and Augustin at Twitter, are pressing for the changes that are within their reach. That includes the effort to  replace racially fraught technology terms like &#34;master&#34; and &#34;slave&#34; that describe things like databases, software projects, camera flashes and hard drives.\n Managers at the social network formalized the two engineers&#39; effort in January, endorsing work to address the issue systematically across the engineering division and expanding it to terms linked to discrimination on the basis of sex, age and disabilities -- replacing &#34;man hours&#34; and &#34;sanity check,&#34; for example. Oliver and Augustin detailed the effort in an exclusive interview with CNET.\n  Such efforts have taken on new importance with the new push against racial inequality in the United States triggered by the  death of George Floyd, a 46-year-old Minnesota man killed in May by a  policeman pinning him to the ground with a knee on his neck. The event triggered  Black Lives Matter protests  around the country, legislative and policy changes, and shifts within companies.\n The new Black Lives Matter energy boosted the vocabulary change at Twitter. &#34;Everything that&#39;s happened recently has made awareness spread blisteringly fast around the company,&#34; Augustin said.\n  Related efforts are occurring at  Microsoft&#39;s Github and LinkedIn divisions,  Apple, and  Google&#39;s Chrome, often as bottom-up changes rather than official positions.\n Earlier, in 2018, developers of the widely used  Python programming language dropped &#34;master/slave.&#34; In 2014, the team behind the\u00a0 Drupal online publishing software replaced the terms with &#34;primary/replica.&#34; In 2003,  Los Angeles County asked suppliers and contractors to stop using &#34;master&#34; and &#34;slave&#34; on computer equipment.\n It&#39;s complex to root out terms embedded in documentation, everyday speech and interlinked programming code and configuration files. Twitter&#39;s goal is to finish its Twitter engineering project by the end of 2021, and to publish details about what it&#39;s learned for others trying to make the same changes.\n   Changing words doesn&#39;t necessarily change the underlying concepts -- for example, in photography, what some companies still call a &#34;master&#34; flash still controls a &#34;slave&#34; flash. And sometimes people pick new words in an attempt to start fresh with neutral vocabulary, only to find the new term picks up the baggage of the old. &#34;Water closet&#34; becomes &#34;toilet,&#34; which becomes &#34;bathroom,&#34; which becomes &#34;restroom.&#34;\n But picking words carefully can make a difference when avoiding subtle or unconscious acts of discrimination called  microaggressions, argues  Lecia Brooks, outreach director for the  Southern Poverty Law Center, a civil rights group.\n &#34;Words may mean nothing to the sender, but to the receiver it may mean something,&#34; Brooks said. &#34;If we can become more mindful about the words that we&#39;re using, we can work to mitigate microaggressions,&#34; she said.\n                                             One common objection to changing vocabulary terms is that it&#39;s insufficient to drive real change. At Twitter, it&#39;s part of other moves to improve diversity and inclusion.\n  Those efforts include  donations to Black Lives Matter causes, offering  advice on allyship for those who want to help, making Juneteenth a holiday for US employees, detailing its  diversity and inclusion efforts during   the coronavirus pandemic, offering  recommended reading to better understand the Black experience in America, and  advising companies about what to say and tweet about racism.\n Brooks would like to see more changes at Twitter, like banishing white supremacists from its website. &#34;If you want to remove hurtful, harmful, hateful words, you might look at removing people who use your platform in that way,&#34; she said.\n In response, Twitter said, &#34;There is no place on Twitter for  hateful conduct, terrorist organizations or  violent extremist groups. Because of these rules, we&#39;ve permanently suspended hundreds of accounts, many of which advocate violence against civilians alongside some form of extremist white supremacist ideology.&#34;\n Twitter has banned some accounts, like that of a  white supremacist group posing as a left-wing antifa group inciting violence, but its  rules against hateful conduct only ban accounts whose &#34;primary purpose is inciting harm towards others.&#34;  Google&#39;s  YouTube banned former Ku Klux Klan leader David Duke and white supremacist Richard Spencer this week.\n  Twitter&#39;s engineering teams are working to change terms that touch on race, sex and ability, Oliver said. Terms and recommended replacements include:\n   &#34;Inclusive language seeks to treat all people with respect, dignity, and impartiality,&#34; said Twitter engineering chief Michael Montano in a June 25 email to all Twitter employees. &#34;It is constructed to bring everyone into the group and exclude no one, and it is essential for creating an environment where everyone feels welcome.&#34;\n Black Lives Matter. Visit   blacklivesmatter.carrd.co  to learn how to donate, sign petitions and protest safely.\n  Be respectful, keep it civil and stay on topic. We delete comments that violate  our policy, which we encourage you to read. Discussion threads can be closed at any time at our discretion.", "posttime": "2020-07-04 08:24:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u63a8\u7279,\u79d1\u6280,engineers,twitter", "title": "\u63a8\u7279\u5de5\u7a0b\u5e08\u53d6\u4ee3\u4e86\u201c\u4e3b\u4eba\u201d\u3001\u201c\u5974\u96b6\u201d\u7b49\u5e26\u6709\u79cd\u65cf\u8272\u5f69\u7684\u79d1\u6280\u672f\u8bed", "title_en": "Twitter Engineers Replacing Racially Loaded Tech Terms Like 'Master,' 'Slave'", "transed": 1, "url": "https://www.cnet.com/news/twitter-engineers-replace-racially-loaded-tech-terms-like-master-slave/", "via": "", "real_tags": ["\u63a8\u7279", "\u79d1\u6280", "engineers", "twitter"]}, {"category": "", "categoryclass": "", "imagename": "99194f67e5542018f2c1c325832cade0.png", "infoid": 1009752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8981\u4e3a\u8fd9\u4ef6\u4e8b\u627f\u62c5\u5168\u90e8\u8d23\u4efb--\u8fd9\u662f\u6211\u641e\u7838\u7684\u5730\u65b9\uff0c\u5982\u679c\u6211\u4e0d\u4ed6\u5988\u7684\u641e\u7838\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002\n\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u4e5f\u6709\u6765\u81ea\u4e0d\u540c\u4f9b\u5e94\u5546\u7684\u4e00\u7cfb\u5217\u8bbe\u8ba1\u51b3\u5b9a\u5408\u5e76\u6210\u5b8c\u7f8e\u98ce\u66b4\u7684\u90e8\u5206\u3002\n\u56e0\u6b64\uff0c\u6211\u4ece\u4e3a\u6570\u4e0d\u591a\u7684\u51e0\u5bb6\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u4e2d\u7684\u4e00\u5bb6\u79df\u4e86\u4e00\u53f0\uff0c\u56e0\u4e3a\u8fd9\u662f\u4f60\u5728\u4e0d\u5b9e\u9645\u62e5\u6709\u82f9\u679c\u8bbe\u5907\u7684\u60c5\u51b5\u4e0b\u8fd0\u884cMacOS\u7684\u552f\u4e00\u65b9\u5f0f\u3002\n\u90a3\u4e9b\u4e91MacOS\u673a\u5668\u901a\u5e38\u90fd\u542f\u7528\u4e86\u8fdc\u7a0b\u684c\u9762\uff0c\u5bf9MacOS\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740VNC\u3002\u4ed6\u4eec\u4f1a\u4e3a\u4f60\u751f\u6210\u5bc6\u7801\u3002\n\u4f46\u662fVNC\uff0c\u7279\u522b\u662f\u5728MacOS\u4e0a\uff0c\u901f\u5ea6\u5f88\u6162\u3002\u73b0\u5728\u662f2020\u5e74\uff0c\u8fd8\u6709\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6848\u3002Windows RDP\u548cNoMachine\u90fd\u5229\u7528\u4e86\u534a\u73b0\u4ee3\u7684\u89c6\u9891\u7f16\u89e3\u7801\u5668(H264)\uff0c\u5e76\u4e14\u505a\u4e86\u5f88\u591a\u5176\u4ed6\u5b8c\u5168\u8d85\u51fa\u672c\u6587\u8ba8\u8bba\u8303\u56f4\u7684\u667a\u80fd\u4e8b\u60c5\u3002\n\u7136\u540e\u6211\u505a\u4e86\u7b2c\u4e8c\u4ef6\u8822\u4e8b\uff0c\u4e5f\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u7cdf\u7cd5\u7684\u4e00\u4ef6\u4e8b--\u6211\u4eceSafari\u767b\u5f55\u4e86\u4e00\u4e2aGoogle\u8d26\u6237\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u7b2c\u4e09\u4ef6\u8822\u4e8b\u53d1\u751f\u4e86\uff1a\u6211\u8ba9Safari\u4fdd\u5b58\u5bc6\u7801\u3002\n\u6211\u8bf4\u8ba9\u6211\u4eec\u4e00\u8d77\u53bb\u5427\uff0c\u56e0\u4e3a\u6211\u7edd\u5bf9\u4e0d\u8bb0\u5f97\u505a\u8fc7\u90a3\u4ef6\u4e8b\u3002\u8fd9\u5c06\u662f\u6709\u610f\u4e49\u7684-\u8fd9\u4e00\u8fc7\u7a0b(\u8bb0\u4f4f\u5bc6\u7801)\u5bf9\u7528\u6237\u6765\u8bf4\u5c3d\u53ef\u80fd\u65e0\u6469\u64e6\u662f\u6709\u610f\u4e49\u7684\uff0c\u8fd9\u6837\u5c31\u95f4\u63a5\u5730\u9f13\u52b1\u4ed6\u4eec\u4f7f\u7528\u5f3a\u5bc6\u7801\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u6d4f\u89c8\u5668\u53ef\u4ee5\u4e3a\u4ed6\u4eec\u8bb0\u4f4f\u5bc6\u7801\u3002\n\u6240\u4ee5\u5c31\u662f\u8fd9\u6837\uff0c\u5bf9\u5427--\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5f88\u660e\u663e\u8fd9\u662f\u4f60\u7684\u8d23\u4efb\uff0c\u7b49\u7b49--\u73b0\u5728\u5c31\u628a\u4f60\u7684\u7cfb\u7edf\u5168\u90e8\u62ff\u51fa\u6765\uff0c\u8fd9\u662f\u6211\u627f\u8ba4\u7684\u3002\u6211\u641e\u7838\u4e86\uff0c\u6211\u4e0d\u5e94\u8be5\u505a\u8fd9\u4e9b\u4e8b\u3002\n\u6211\u4e0d\u662f\u5728\u5f00\u73a9\u7b11--\u53ea\u8981\u82b1\u4e00\u5206\u949f\u5bf9\u81ea\u5df1\u8bf4\uff0c\u554a\uff0c\u6211\u771f\u4e0d\u6562\u76f8\u4fe1\u6709\u4eba\u4f1a\u505a\u8fd9\u4e48\u611a\u8822\u7684\u4e8b\uff0c\u7136\u540e\u4e0a\u7f51\u62b1\u6028\u522b\u7684\u4e8b\u60c5\u3002\n\u4f60\u77e5\u9053\u5417\uff0c\u6211\u540c\u610f\u3002\u6211\u5f88\u751f\u81ea\u5df1\u7684\u6c14\u3002\u6211\u5bf9\u81ea\u5df1\u8fdb\u884c\u4e86\u4e25\u5389\u7684\u8bad\u65a5\uff0c\u5e76\u5efa\u7acb\u4e86\u65b0\u7684\u5b89\u5168\u505a\u6cd5\uff0c\u5305\u62ec\u7ecf\u5e38\u63a5\u53d7\u57f9\u8bad\u3002\n\u6240\u4ee5\u6709\u4eba\u5728\u4e92\u8054\u7f51\u4e0a\u626b\u63cf\u7aef\u53e3\uff0c\u53d1\u73b0\u5728\u90a3\u4e2a\u7279\u5b9a\u7684IP\u4e0a\uff0cTCP\u7aef\u53e34000\u662f\u6253\u5f00\u7684\u3002\u8fd9\u662fNoMachine\u7684\u9ed8\u8ba4\u7aef\u53e3\u3002\n\u7136\u540e\uff0c\u4ed6\u4eec\u7ee7\u7eed\u731c\u6d4b\u6216\u66b4\u529b\u5f3a\u5236\u672c\u5730\u7528\u6237\u5bc6\u7801\uff0c\u8fd9\u662fNoMachine\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u7684\u5bc6\u7801\u3002\u8fd9\u90e8\u5206\u662f\u5982\u4f55\u53d1\u751f\u7684\u6211\u8fd8\u4e0d\u662f\u5f88\u786e\u5b9a\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u7279\u522b\u5f3a\u70c8\uff0c\u6240\u4ee5\uff0c\u5947\u602a\u7684\u4e8b\u60c5\u5df2\u7ecf\u53d1\u751f\u4e86\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u603b\u662f\u7981\u7528sshd\u7684\u5bc6\u7801\u767b\u5f55\uff0c\u5e76\u8bbe\u7f6eail2ban\u7b49-\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u90fd\u6ca1\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\uff0c\u563f\uff0cNoMachine\uff01\u7b2c\u4e09\u65b9\u8f6f\u4ef6\uff0c\u6ca1\u6709\u771f\u6b63\u4e0e\u7cfb\u7edf\u96c6\u6210\uff01\u4f1a\u51fa\u4ec0\u4e48\u5dee\u9519\u3002\n\u6240\u4ee5\u4ed6\u4eec\u8fdb\u5165\u4e86MacOS\u673a\u5668\u3002\u8fd9\u5c31\u662f\u9501\u5b9a\u5c4f\u5e55\u7684\u7528\u6b66\u4e4b\u5730\uff0c\u9664\u4e86MacOS\u9501\u5b9a\u5c4f\u5e55\u53ea\u5728VNC\u4f1a\u8bdd(\u6216\u8005\uff0c\u4f60\u77e5\u9053\uff0c\u7269\u7406\u4f1a\u8bdd)\u4e0a\u663e\u793a\uff0c\u800c\u4e0d\u662f\u5728NoMachine\u4f1a\u8bdd\u4e0a\uff0c\u56e0\u4e3aNoMachine\u4f7f\u7528\u4e0e\u7cfb\u7edf\u9501\u5b9a\u5c4f\u5e55\u76f8\u540c\u7684\u51ed\u636e\u3002\n\u5728\u56db\u5904\u91cd\u7f6e\u51ed\u8bc1\u548c\u8bc4\u4f30\u635f\u5931\u540e\uff0c\u6211\u80fd\u591f\u91cd\u5efa\u4ed6\u4eec\u6240\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\u7684\u5927\u81f4\u65f6\u95f4\u7ebf\u3002\n\u9996\u5148\uff0c\u4ed6\u4eec\u68c0\u67e5\u4e86/etc/dow-\u8fd9\u5c31\u662fMacOS Catalina\uff0c\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u7136\u540e\u4ed6\u4eec\u5c1d\u8bd5\u4e86\u4e00\u5927\u5806sudo-l\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u968f\u673a\u7684\u4e1c\u897f\u3002\n\u4ed6\u4eec\u4e0d\u77e5\u4f55\u6545\u4f7f\u7528\u4e86XCode\u7f16\u8f91\u4e86\u4e00\u4e2aPython\u6587\u4ef6\uff0c\u6211\u4e3a\u65b9\u4fbf\u60a8\u91cd\u65b0\u8f93\u5165\u4e86\u8be5\u6587\u4ef6--\u4e0d\u8981\u6267\u884c\u5b83\u3002\u4ed6\u4eec\u751a\u81f3\u4e0b\u8f7d\u4e86\u4e00\u4efdxmr-stak-cpu\u526f\u672c\uff0c\u4ee5\u9632\u4ee5\u540e\u9700\u8981\u8fdb\u884c\u6316\u6398\u3002\n\u7136\u540e\u4ed6\u4eec\u6ce8\u610f\u5230\u90a3\u91cc\u6709\u4e00\u4e2a\u672a\u5230\u671f\u7684Google\u4f1a\u8bdd(\u8fd9\u4e5f\u662f\u6211\u641e\u7838\u7684)\u3002\u4ed6\u4eec\u901a\u8fc7Drive\uff0c\u770b\u4e86\u51e0\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5207\u6362\u5230Gmail\u3002\n\u56e0\u4e3a\u5b83\u662f\u8fc7\u671f\u7684\u4f1a\u8bdd\u767b\u5f55\uff0c\u800c\u4e0d\u662f\u8bbe\u7f6e\u65b0\u8bbe\u5907\u767b\u5f55-\u5728\u8c37\u6b4c\u5f53\u524d\u7684\u5b89\u5168\u6a21\u578b\u4e2d\uff0c\u5b83\u88ab\u79f0\u4e3a\u5237\u65b0\u53d7\u795d\u798f\u7684\u4f1a\u8bdd\uff0c\u6ca1\u6709\u4e24\u6b65\u9a8c\u8bc1(\u6ca1\u67092FA\u63d0\u793a)\u3002\n\u6240\u4ee5\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u5207\u90fd\u662f100%\u7531\u6211\u627f\u62c5\u3002\u4e0d\u5e94\u8be5\u5b89\u88c5NoMachine\uff0c\u5e94\u8be5\u7528\u66f4\u5f3a\u7684\u5bc6\u7801\u66ff\u6362\u5bc6\u7801\uff0c\u4ece\u4e00\u5f00\u59cb\u5c31\u4e0d\u5e94\u8be5\u767b\u5f55\u5230\u8fd9\u53f0\u673a\u5668\u4e0a\u7684Google\u5e10\u6237\uff0c\u800c\u4e14\u7edd\u5bf9\u4e0d\u5e94\u8be5\u4fdd\u5b58\u5bc6\u7801\u800c\u4e0d\u662f\u6ce8\u9500\u3002\n\u4f46\u6211\u4e4b\u6240\u4ee5\u5199\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u8ba9\u4e92\u8054\u7f51\u53ef\u4ee5\u8bc4\u5224\u6211\u5728\u4e0eCI\u5efa\u7acb\u6597\u4e89\u4e86\u4e00\u6574\u5929\u540e\u505a\u51fa\u7684\u7cdf\u7cd5\u51b3\u5b9a\u3002\u8fd9\u662f\u68c0\u67e5\u8c37\u6b4c\u505a\u51fa\u7684\u5173\u4e8e\u5bc6\u7801\u7ba1\u7406\u5668\u7684\u51b3\u5b9a\u3002\n\u73b0\u5728\uff0c\u6211\u662f\u4e00\u4e2a\u5feb\u4e50\u76841Password\u7528\u6237\u3002\u6211\u6240\u6709\u7684\u5bc6\u7801\u90fd\u5728\u4e00\u4e2a\u79c1\u4eba\u4fdd\u9669\u5e93\u91cc\uff0c\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u5f3a\u58ee\u7684\u4e3b\u5bc6\u7801\uff0c\u53ea\u6709\u6211\u77e5\u9053\u3002\u6211\u5728\u6240\u6709\u5bf9\u6211\u5f88\u91cd\u8981\u7684\u7f51\u7ad9\u4e0a\u542f\u7528\u4e862FA--\u5176\u4e2d\u53ef\u80fd\u670912\u4e2a\u3002\n\u5728\u6211\u8ba4\u771f\u5bf9\u5f85\u5bc6\u7801\u7ba1\u7406\u4e4b\u524d(\u55ef\uff0c\u9664\u4e86\u6211\u4eec\u73b0\u5728\u518d\u8ba8\u8bba\u7684\u4e00\u4ef6\u4e8b)\uff0c\u6211\u53ea\u662f\u4f7f\u7528\u4e86Google Chrome\u5185\u7f6e\u7684\u5bc6\u7801\u7ba1\u7406\u3002\u6253\u5f00\u4e00\u4e2a\u7f51\u7ad9\uff0c\u8f93\u5165\u4f60\u7684\u5bc6\u7801\uff0cChrome\u4f1a\u63d0\u4f9b\u4fdd\u5b58\uff0c\u5f53\u7136\uff0c\u8fd9\u5f88\u65b9\u4fbf\u3002\n\u5f53\u7136\uff0cGoogle Chrome\u4f1a\u5c06\u8fd9\u4e9b\u5bc6\u7801\u540c\u6b65\u5230\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4ece\u53e6\u4e00\u53f0\u8bbe\u5907\u767b\u5f55Chrome\uff0c\u4f60\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u8fd9\u4e9b\u5bc6\u7801\u3002\n\u6211\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684\u8c37\u6b4c\u8d26\u6237\u51ed\u8bc1\u662f\u7528\u6765\u52a0\u5bc6\u8fd9\u4e9b\u5bc6\u7801\u7684\u3002\u8fd9\u610f\u5473\u7740\u8c37\u6b4c\u80fd\u591f\u89e3\u5bc6\u8fd9\u4e9b\u5bc6\u7801\u3002\n\u6211\u5e94\u8be5\u66f4\u65e9\u5730\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9--\u50cf\u5bc6\u7801\u68c0\u67e5\u8fd9\u6837\u7684\u529f\u80fd\u8fd8\u80fd\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\u6b64\u5916\uff0c\u540c\u6837\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u9ed8\u8ba4\u52a0\u5bc6\u6a21\u5f0f\uff0c\u5219\u4f1a\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u5728\u7ebf\u5bc6\u7801\u7ba1\u7406\u5668\u3002\n\u6240\u4ee5\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u88ad\u51fb\u5df2\u7ecf\u76f8\u5f53\u4e25\u91cd\u4e86\u3002\u8c37\u6b4c\u8d26\u6237\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u76ee\u6807\u3002\n\u4f46\u4f7f\u7528\u5bc6\u7801\u7ba1\u7406\u5668\u548cSafari\u7684\u5bc6\u7801\u81ea\u52a8\u586b\u5145\u529f\u80fd\uff0c\u4ed6\u4eec\u7ee7\u7eed\u9010\u4e00\u68c0\u67e5\u6211\u7684\u65e7\u5bc6\u7801-\u7136\u540e\u6700\u7ec8\u901a\u8fc7\u65b9\u4fbf\u7684CSV\u5bfc\u51fa\u529f\u80fd\u6293\u53d6\u6574\u4e2a\u5bc6\u7801\u3002\n\u73b0\u5728\uff0c\u5927\u591a\u6570\u5bc6\u7801\u90fd\u8fc7\u65f6\u4e86\uff0c\u56e0\u4e3a\u6211\u73b0\u5728\u53ea\u628a\u4e1c\u897f\u4fdd\u5b58\u52301Password\uff0c\u800c\u4e14\u4ece\u90a3\u65f6\u8d77\u6211\u5c31\u8f6e\u6362\u4e86\u91cd\u8981\u7684\u5bc6\u7801\u3002\u73b0\u5728\u7684\u5bc6\u7801\u5927\u90e8\u5206\u8fd8\u662f\u6ca1\u7528\u7684--\u5c31\u50cf\u6211\u5728\u91cd\u8981\u7f51\u7ad9\u4e0a\u542f\u7528\u76842FA\u4e00\u6837--\u91cc\u9762\u6709\u4efb\u4f55\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002\n\u9664\u4e86OVH\uff0c\u6211\u53ea\u7528\u5b83\u6765\u8d2d\u4e70\u57df\u540d\uff0c\u6240\u4ee5\uff0c\u6211\u6bcf\u5e74\u90fd\u4f1a\u548c\u4e00\u5bf9\u592b\u5987\u4e92\u52a8\u3002\u6211\u538c\u5026\u4e86\u624b\u5de5\u652f\u4ed8\u8d26\u5355\uff0c\u56e0\u4e3a\u6211\u53ef\u80fd\u6709\u51e0\u5341\u4e2a\u5ba2\u6237\uff0c\u6240\u4ee5\u6211\u8fde\u63a5\u4e86\u6211\u7684Paypal\u8d26\u6237\uff0c\u63a5\u4e0b\u6765\uff0c\u4f60\u77e5\u9053\uff0c\u653b\u51fb\u8005\u7ed9\u81ea\u5df1\u8ba2\u8d2d\u4e86\u4e00\u53f0\u95ea\u4eae\u7684\u65b0\u4e13\u7528\u670d\u52a1\u5668\u3002\n(\u653b\u51fb\u8005\u5f88\u53cb\u5584\u5730\u9009\u62e9\u4e86\u4e00\u4e2a\u5927\u5c0f\u5408\u7406\u7684\u5b9e\u4f8b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66f4\u7cdf)\u3002\n\u7136\u540e\u88ad\u51fb\u8005\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\u3002\u4e0d\u7ba1\u51fa\u4e8e\u4ec0\u4e48\u539f\u56e0\uff0c\u4ed6\u4eec\u8bd5\u56fe\u4f7f\u7528\u6211\u7684\u5bc6\u7801\u4ece\u5e03\u5b9c\u8bfa\u65af\u827e\u5229\u65af\u7684\u4e00\u4e2aIP\u5730\u5740\u767b\u5f55\u6211\u7684Google\u5e10\u6237\u3002\u53ef\u80fd\u4ed6\u4eec\u60f3\u8981\u83b7\u53d6\u4ed6\u4eec\u5168\u65b0\u670d\u52a1\u5668\u7684\u51ed\u636e\uff0c\u800c\u4ed6\u4eec\u4e0d\u77e5\u9053NoMachine\u5177\u6709\u526a\u8d34\u677f\u540c\u6b65\u529f\u80fd\uff1f\n\u8c37\u6b4c\u7684\u9632\u5fa1\u5347\u7ea7\u4e86\uff1a\u5ea6\u5047\uff1f\u90a3\u4e48\u8fdc\u5417\uff1f\u5728\u7f3a\u94c1\u6027\u8d2b\u8840\u7684\u65f6\u5019\uff1f\u6211\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u3002\u767b\u5f55\u5c1d\u8bd5\u88ab\u963b\u6b62\u4e86\uff0c\u8c37\u6b4c\u5728\u6211\u7684\u624b\u673a\u4e0a\u7ed9\u6211\u53d1\u4e86\u4e00\u6761\u901a\u77e5\u3002\n\u8fd9\u5c31\u662f\u6211\u9192\u6765\u65f6\u6536\u5230\u7684\u901a\u77e5\u3002\u540c\u65f6\u8fd8\u6709\u4e00\u6761\u6765\u81ea\u65af\u5229\u666e\u76842FA\u77ed\u4fe1\u606f\u3002\n(\u5c31\u7cdf\u7cd5\u7684\u5524\u9192\u65b9\u5f0f\u800c\u8a00\uff0c\u8fd9\u4e00\u70b9\u6392\u540d\u76f8\u5f53\u9760\u524d\u3002\u6b64\u5916\uff0c\u6211\u540e\u6765\u53d1\u73b0\u653b\u51fb\u8005\u770b\u5230\u4e86\u6765\u81ea\u53d7\u635f\u673a\u5668\u7684\u5b89\u5168\u901a\u77e5--\u4e4b\u540e\u4ed6\u4eec\u5f88\u5feb\u5c31\u8df3\u4f1e\u4e86)\u3002\n\u76f4\u5230\u540e\u6765\uff0c\u6211\u624d\u610f\u8bc6\u5230\u4ed6\u4eec\u5bf9\u6211\u7684\u8c37\u6b4c\u8d26\u6237\u7981\u7528\u4e862FA\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u68c0\u67e5\u6211\u7684\u5b89\u5168\u8bbe\u7f6e\u65f6\u3002\n\u6211\u8fd8\u6ca1\u6709\u6536\u5230\u90a3\u4ef6\u4e8b\u7684\u901a\u77e5\u5462\uff01\u4e0d\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0d\u662f\u901a\u8fc7\u7535\u8bdd\uff0c\u6700\u7cdf\u7cd5\u7684\u662f\u4ed6\u4eec\u4e0d\u9700\u8981\u6211\u76842FA\u51ed\u8bc1\u6765\u7981\u75282FA\u3002\n\u5728\u505a\u4e86\u5927\u91cf\u7684\u51ed\u636e\u6e05\u7406\u4e4b\u540e\uff0c\u6211\u6700\u7ec8\u5728Twitter\u4e0a\u53d1\u5e16\uff1a\u563f\uff0c\u55ef\uff0cPSA\uff0c\u4f60\u4e0d\u518d\u9700\u89812FA\u51ed\u636e\u5c31\u53ef\u4ee5\u4e3a\u4f60\u7684\u8c37\u6b4c\u8d26\u6237\u7981\u75282FA\u4e86\uff0c\u800c\u4e14\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u5f97\u5230\u901a\u77e5\u3002\n\u6211\u9047\u5230\u7684\u5927\u591a\u6570\u4eba\u90fd\u6301\u6000\u7591\u6001\u5ea6\uff0c\u5f53\u7136\u4f60\u9700\u89812FA\u624d\u80fd\u7981\u75282FA\uff0c\u90a3\u5c31\u662f\u8bc1\u660e\u5b83\u6709\u6548\uff0c\u7136\u540e\u662f\u54e6\uff0c\u5929\u54ea\uff0c\u4f60\u8bf4\u5f97\u5bf9\uff0c\u4f60\u4e0d\u9700\u8981\u3002\n\u60a8\u7684Google\u5b58\u50a8\u7684\u5bc6\u7801\u8fd8\u6709\u53e6\u4e00\u79cd\u52a0\u5bc6\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u663e\u793a\u4e3a\u201c\u9009\u62e9\u5bc6\u7801\u201d(&#34\uff1bChoose as Passphrase&#34\uff1b)\u3002\u8fd9\u4f1a\u963b\u6b62\u60a8\u7684\u7535\u5b50\u4ed3\u5e93\u5728\u670d\u52a1\u5668\u7aef\u89e3\u5bc6\uff0c\u4ece\u800c\u7981\u7528\u5bc6\u7801\u68c0\u67e5\u529f\u80fd\u3002\n\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u53ef\u80fd\u6709\u5e2e\u52a9--\u5b83\u53ef\u80fd\u4f1a\u5728\u8bbf\u95ee\u8c37\u6b4c\u5bc6\u7801\u7ba1\u7406\u5668\u9875\u9762\u65f6\u8981\u6c42\u5bc6\u7801\u77ed\u8bed\uff0c\u7136\u540e\u653b\u51fb\u8005\u5c31\u4f1a\u5728\u90a3\u91cc\u88ab\u963b\u6b62\u3002\n\u8fd9\u4e0d\u4f1a\u6709\u4efb\u4f55\u5e2e\u52a9\uff0c\u56e0\u4e3a\u5373\u4f7f\u542f\u7528\u4e86\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u6240\u9700\u8981\u7684\u4e5f\u53ea\u662f\u4e00\u4e2a\u795e\u5723\u7684\u4f1a\u8bdd(\u5373\u4f7f\u662f\u8fc7\u671f\u7684)\u548c\u4e00\u4e2a\u5bc6\u7801\u6765\u7981\u75282FA\u3002\n\u9996\u5148\uff0c\u4ed6\u4eec\u6b63\u5728\u52aa\u529b\u51cf\u5c112FA\u63d0\u793a\u7684\u6570\u91cf\uff0c\u4ee5\u907f\u514d\u8ba9\u7528\u6237\u5bf9\u6b64\u5931\u53bb\u654f\u611f\u6027\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u7528\u6237\u88ab\u5de6\u53f3\u63d0\u793a\u8f93\u5165\u4ed6\u4eec\u76842FA\u51ed\u8bc1\uff0c\u4ed6\u4eec\u5c06\u4e0d\u518d\u8fc7\u591a\u5730\u8003\u8651\u4e3a\u4ec0\u4e48\u8981\u91cd\u65b0\u8f93\u5165\u8fd9\u4e9b\u51ed\u8bc1\uff0c\u8fd9\u4f1a\u4f7f\u6574\u4e2a\u65b9\u6848\u53d8\u5f97\u4e0d\u90a3\u4e48\u5b89\u5168\u3002\n\u7b2c\u4e8c\u6761\u4fe1\u606f\u662f\uff0c\u5728\u653b\u51fb\u8005\u7269\u7406(\u6216\u50cf\u6211\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u8fdc\u7a0b)\u8bbf\u95ee\u60a8\u4e4b\u524d\u767b\u5f55\u7684\u8bbe\u5907\u7684\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u56e0\u7d20\u662f\u5bc6\u7801\uff0c\u4f46\u7b2c\u4e8c\u4e2a\u56e0\u7d20\u662f\u8bbe\u5907\u7684\u9501\u5c4f/\u5bc6\u7801\u3002\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u90fd\u5f88\u5feb\u5c31\u5931\u8d25\u4e86\uff1aSafari\u81ea\u52a8\u586b\u5199\u5bc6\u7801\uff0cNoMachine\u8df3\u8fc7\u9501\u5c4f\u3002\u6211\u95ee\u4ed6\u4eec\u600e\u4e48\u77e5\u9053\u9501\u5c4f\u771f\u7684\u8bbe\u7f6e\u4e86\uff0c\u66f4\u4e0d\u7528\u8bf4\u6700\u8fd1\u89e3\u51b3\u4e86\uff0c\u7b54\u6848\u662f\uff1a\u5728Android\u4e0a\uff0c\u6211\u4eec\u77e5\u9053--\u5bf9\u4e8eWindows&amp\uff1bMacOS\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6d4f\u89c8\u5668\u6269\u5c55\u3002\n\u73b0\u5728\uff0c\u6211\u4e0d\u77e5\u9053\u4f60\u600e\u4e48\u6837--\u6211\u8fd8\u5728\u4e3a\u6211\u7684\u4e13\u4e1a\u4ed6\u5988\u7684\u641e\u7838\u800c\u76f8\u5f53\u751f\u6c14\uff0c\u4f46\u8fd9\u4f3c\u4e4e\u662f\u66f4\u91cd\u8981\u7684\u4e8b\u60c5\u3002\n\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u8bf7\u6c422FA\u51ed\u636e\uff0c\u60a8\u4e5f\u4e0d\u9700\u8981\u8fd9\u4e9b\u51ed\u636e\u6765\u7981\u75282FA\u3002\n\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u6700\u540e\uff0c\u5728\u51e0\u4e2a\u6f84\u6e05\u4e4b\u540e\uff0c\u8c37\u6b4c\u5de5\u7a0b\u5e08\u540c\u610f\u8fd9\u4e00\u7279\u6b8a\u60c5\u51b5\u662f\u4e00\u4e2a\u5b89\u5168\u6545\u969c\uff0c\u4ed6\u5c06\u63a8\u52a8\u505a\u51fa\u6539\u53d8\u3002\n\u9996\u5148\uff0c\u5982\u679c\u4f60\u6b63\u5728\u684c\u9762\u4e0a\u4f7f\u7528\u7b2c\u4e09\u65b9\u5bc6\u7801\u7ba1\u7406\u5668-1Password\uff0cKeePassXC\uff0c\u4e00\u4e2a.txt\u6587\u4ef6\uff0c\u53bb\u64e6\u6d17\u4f60\u7684\u8c37\u6b4c\u5bc6\u7801\u7ba1\u7406\u5668\u3002\n\u5373\u4f7f\u662f\u6211\u4eec\u8fd9\u4e9b\u8f6c\u5411\u53e6\u4e00\u79cd\u6d4f\u89c8\u5668\u3001\u6ce8\u91cd\u9690\u79c1\u7684\u4eba\uff0c\u4ed6\u4eec\u7684\u8c37\u6b4c\u8d26\u6237\u4e2d\u4e5f\u53ef\u80fd\u9690\u85cf\u7740\u4ed6\u4eec\u65e0\u6cd5\u5b8c\u5168\u6446\u8131\u7684\u9ab7\u9ac5\uff0c\u56e0\u4e3a\u73b0\u5728\u662f2020\u5e74\uff0c\u4f60\u53ef\u4ee5\u8dd1\uff0c\u4f46\u4f60\u4e0d\u80fd\u85cf\u8d77\u6765\u3002\n(\u6b64\u5916\uff0c\u5982\u679c\u60a8\u5728\u7b2c\u4e09\u65b9\u5bc6\u7801\u7ba1\u7406\u516c\u53f8\u5de5\u4f5c\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u8be5\u6b65\u9aa4\u6dfb\u52a0\u5230\u5165\u804c\u6d41\u7a0b\u4e2d\uff0c\u4ee5\u8b66\u544a\u7528\u6237\u3002)\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528\u7b2c\u4e09\u65b9\u5bc6\u7801\u7ba1\u7406\u5668\uff0c\u8bf7\u9009\u62e9\u5bc6\u7801\u77ed\u8bed\u3002\u8fd9\u5c06\u4f7f\u4f60\u7684\u751f\u6d3b\u4e0d\u90a3\u4e48\u65b9\u4fbf\uff0c\u4f46\u5b83\u5c06\u663e\u8457\u51cf\u8f7b\u635f\u5bb3\uff0c\u4ee5\u9632\u4f60\u50cf\u6211\u4e00\u6837\u6700\u7ec8\u975e\u5e38\u75b2\u60eb\uff0c\u5e76\u505a\u51fa\u4e00\u8fde\u4e32\u7cdf\u7cd5\u7684\u51b3\u5b9a\u3002\n\u6211\u4e0d\u77e5\u9053APP\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u6240\u4ee5\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u4e5f\u4e0d\u4f1a-\u5982\u679c\u4f60\u4eec\u5bf9\u4e00\u4e9b\u989d\u5916\u7684\u5b89\u5168\u6027\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u4f60\u4eec\u53ef\u80fd\u4f1a\u60f3\u770b\u770b\u8fd9\u4e2a\u3002\n\u6700\u540e\uff0c\u7167\u987e\u597d\u4f60\u4eec\u81ea\u5df1\u3002\u5982\u679c\u6211\u6ca1\u6709\u90a3\u4e48\u7d2f\uff0c\u6211\u5f88\u53ef\u80fd\u4e0d\u4f1a\u5728\u90a3\u5929\u8fd9\u4e48\u7c97\u5fc3\u5927\u610f\uff0c\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002", "note_en": "I&#39;m taking entire responsibility for this - there&#39;s the part where I fuckedup, and if I didn&#39;t fuck up, then none of this would&#39;ve happened.\n But there&#39;s also the part where a series of design decisions from variousvendors combined into the perfect storm for me.\n    So I rented one from one of the handful of cloud providers that do that.Because that&#39;s the only way you can run macOS without actually physicallyowning an Apple device.\n Those cloud macOS machines usually come with Remote Desktop enabled, whichfor macOS means VNC. And they generate a password for you.\n But VNC, especially on macOS, is slow. This is 2020, and much fasteralternatives exist. Both Windows RDP and NoMachine take advantage ofsemi-contemporary video codecs (H264), and do a lot of other smart stuff thatis completely beyond the scope of this article.\n  Then I did the second dumb thing, by far the worst - I logged into a Googleaccount from Safari. And shortly thereafter, the third dumb thing: I letSafari save the password.\n I say &#34;let&#34;, because I absolutely don&#39;t remember doing that. And that wouldmake sense - it  would make sense for this process (remembering a password)to be as frictionless as possible for a user, so that it indirectly encouragesthem to have strong passwords, since their browser can remember it for them.\n So that&#39;s it, right - why does this article exist, clearly this is on you,etc. - get it all of your system now, this is me admitting that. I fucked up,and I should have done none of these things.\n I&#39;m not joking - just take a minute to say to yourself &#34;ahh I can&#39;tbelieve someone would do something so dumb and then go on the internetand complain about  something else&#34;.\n  And you know, I agree. I&#39;m very mad at myself. I gave myself a stern talkingto, and established new security practices, including frequent training.\n    So someone was port scanning around the internet, and figured out that, onthat particular IP, TCP port 4000 was open. Which is the default port forNoMachine.\n They then proceeded to either guess or bruteforce the local user password,which is the one NoMachine uses for authentication. How that part happenedI&#39;m still not exactly sure, but it wasn&#39;t spectacularly strong, so, weirderthings have happened.\n This is why I  always disable password login for sshd, and set up fail2ban,etc. - none of which were helpful in this particular case, because, hey,NoMachine! Third-party software, not really integrated with the system! Whatcould go wrong.\n So they got access to the macOS machine. And that&#39;s where the lock screenwould come in, except the macOS lock screen  only shows up on VNC sessions(or, you know, physical sessions), not on NoMachine sessions, since NoMachineuses the same credentials as the system&#39;s lock screen.\n After going around resetting credentials and assessing the damage, I was ableto reconstruct a rough timeline of some things they did.\n First they checked  /etc/shadow - which, well, this is macOS Catalina, so,why? Then they tried  sudo -l a bunch, and some other random stuff.\n They somehow used XCode to edit a python file,  which I&#39;ve retyped for yourviewingpleasure - don&#39;t execute it. They even downloaded a copy of  xmr-stak-cpu, in case they needed to do some mining later.\n Then they noticed there was a non-expired Google session there (that, too, ismy fuckup). They went through Drive, looked at a couple of files, thenswitched to GMail.\n  Since it was an &#34;expired session&#34; login, not a &#34;set up a new device&#34; login -in Google&#39;s current security model, it&#39;s called refreshing a &#34;blessed session&#34;,there was no two-step verification (no  2FA prompt).\n So everything up until now is 100% on me. Shouldn&#39;t have installed NoMachine,should have replaced the password with a stronger one, should never havelogged onto a Google account on this machine in the first place, anddefinitely, definitely shouldn&#39;t have saved that password and not logged out.\n But the reason I&#39;m doing this write up is not just so the internet can judgepoor decisions I made after a long day of fighting against CI builds. It&#39;s toexamine the decisions made by Google about their password manager.\n Right now, I&#39;m a happy  1Password user. All my passwordsare in a private vault, with a nice beefy master password that only I know. I&#39;veenabled 2FA on all the sites that are important to me - that&#39;s maybe 12 of them.\n  Before I got serious about password management (well, except that one thing we&#39;rediscussing now), I just used Google Chrome&#39;s built-in password management. Goto a website, type your password, Chrome offers to save, sure, that&#39;s convenient.\n And of course, Google Chrome synchronizes these passwords to their servers.So that if you log into Chrome from another device, you have access to all ofthese.\n What I  didn&#39;t realize, was that by default, your Google Account credentialsare used to encrypt those passwords. Which means Google is able to decrypt thosepasswords.\n And I should&#39;ve realized that sooner - how else is a feature like  Password Checkup supposed to work?\n  Furthermore, again, if you are on that default encryption model, there&#39;s a whole online password manager.\n   So by this point the attack is already pretty bad. A Google account is apretty high value target.\n But using the Password Manager, and Safari&#39;s password auto-filling, theyproceeded to go through my old passwords, one by one - and then eventuallyjust grab the whole thing with the handy CSV export feature.\n  Now, most of those passwords were outdated, since I only save things to1Password nowadays, and I&#39;ve rotated the important ones since then. Andthe current passwords were still mostly useless - as I have 2FA enabledon, again, the important websites - that have anything of value in them.\n Except for OVH, which I only use to buy domains, so, I interact with a coupletimes a year. I was tired of paying bills manually, because I own maybe a dozendomains, so I connected my Paypal account, and next thing you know, theattacker has ordered themselves a shiny new dedicated server.\n (The attacker was kind enough to choose a reasonably-sized instance, thiscould&#39;ve been much, much worse).\n Then the attacker made a mistake. For whatever reason, they tried usingmy password to log into my Google account from a Buenos Aires IP address.Possibly they wanted to grab the credentials for their brand new server,and they didn&#39;t know NoMachine had clipboard sync?\n Google&#39;s defenses went up: &#34;A vacation? That far away? In the middle of apandemic? I don&#39;t think so&#34;. The login attempt was blocked, and Google sentme a notification about it on my phone.\n Which is the notification I woke up to. Along with a 2FA SMS from Stripe.\n (As far as &#34;bad ways to wake up&#34; go, this one ranks pretty high. Also, Ilater found out that the attacker saw the security notification from thecompromised machine - they bailed out quickly thereafter).\n It&#39;s only later that I realized they had disabled 2FA for my Google account.Accidentally, while reviewing my security settings.\n I hadn&#39;t gotten a notification for that! Not by e-mail, not by phone, and theworst thing is  they didn&#39;t need my 2FA credentials to disable 2FA.\n After doing a significant amount of credential scrubbing, I eventually postedon Twitter: hey, uh, PSA, you don&#39;t need 2FA credentials to disable 2FAfor your Google account anymore,  and you don&#39;t get notified when it happens.\n I was met mostly with skepticism, &#34;of course you need 2FA to disable 2FA, that&#39;show it works&#34;, followed by &#34;oh god, you&#39;re right, you don&#39;t&#34;.\n    There is  another encryption scheme for your Google-stored passwords, whichis presented as &#34;choose as passphrase&#34;. This stops your vault from being decryptableserver-side, and it follows that this disables the Password Checkup feature.\n I  think this one may have helped - it probably would&#39;ve asked for mypassphrase when visiting the Google Password Manager page, and then theattacker would&#39;ve been stopped right there.\n   That one wouldn&#39;t have helped at all, since  even with APP enabled, all you needis a &#34;blessed session&#34; (even expired) and a password to disable 2FA.\n  First off, they&#39;re trying to reduce the amount of 2FA prompts to avoiddesensitizing users to it. The idea is that if users are prompted for their2FA credentials left and right, they&#39;ll stop thinking hard enough about  whythey&#39;re entering them, which renders the overall scheme less secure.\n  The second piece of information was that, in those particular cases where theattacker has physical (or, as was my case, remote) access to a device you&#39;vepreviously signed onto, the first factor is the password, but the second factoris the device&#39;s lock screen / password.\n In my case, both were quickly defeated: Safari autofilled the password, andNoMachine skipped the lock screen. I enquired how did they know a lock screenwas actually set up, let alone solved recently, and the answer was: &#34;on Android,we know - for Windows &amp; macOS, we&#39;d probably need browser extensions&#34;.\n Now, I don&#39;t know about you - I&#39;m still pretty mad about my major fuck up, butthis seems like the bigger story here.\n  At no point are 2FA credentials requested,  and you don&#39;tneed those either to disable 2FA.\n At the end of our discussion, and after a few clarifications, the Googleengineer agreed that this particular scenario was a security failure, andthat he would push for changes to be made.\n   First off, if you&#39;re using a third-party password manager - 1Password,KeePassXC, a .txt file on your desktop,   go scrub your Google Password Manager.\n Even the privacy-oriented ones of us, who have switched to another browser,may have skeletons hiding in their Google account, that they can&#39;t quite getrid of completely, because, this is 2020, you can run but you can&#39;t hide.\n (Furthermore, if you work at a third-party password manager company, youmay want to add that step to your onboarding process, to warn users.)\n If you&#39;re  not using a third-party password manager,  go pick apassphrase. This will make your life less convenient, but it willsignificantly mitigate the damage in case you, like me, end up very tired andhit a nuclear streak of bad decisions.\n I didn&#39;t know  APP was athing, so some of you probably won&#39;t either - you may want to look intothat, if you&#39;re interested in some additional safety.\n Finally, take care of yourselves. If I hadn&#39;t been that tired, I probablywouldn&#39;t have been so careless that particular day, and none of this would&#39;vehappened.", "posttime": "2020-07-04 08:23:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u5bc6\u7801", "title": "\u5c0f\u5fc3Google Password Manager", "title_en": "Beware the Google Password Manager", "transed": 1, "url": "https://fasterthanli.me/articles/beware-the-google-password-manager", "via": "", "real_tags": ["google", "\u5bc6\u7801"]}, {"category": "", "categoryclass": "", "imagename": "62ef0976b660bbd037d79877ed058338.jpeg", "infoid": 1009751, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u65e6\u6211\u653e\u624b\uff0c\u6211\u91cd\u65b0\u53d1\u73b0\u4e86\u9605\u8bfb\u200a-\u200a\u7684\u4e50\u8da3\uff0c\u8fd9\u662f\u6211\u4ece\u5341\u51e0\u5c81\u8d77\u5c31\u6ca1\u6709\u7684\u611f\u89c9\uff0c\u6211\u9003\u8bfe\u53bb\u8bfb\u5c3c\u91c7\u6216\u963f\u5c14\u4f2f\u7279\u00b7\u52a0\u7f2a\u3002\n\u8fd9\u4e00\u5207\u90fd\u59cb\u4e8e\u4e00\u4e2a\u64ad\u5ba2\u3002\u8fd9\u751a\u81f3\u4e0d\u662f\u6211\u7684\u6d1e\u5bdf\u529b\u3002\u8fd9\u662f\u4e00\u4e2a\u7f55\u89c1\u7684\u573a\u5408\uff0c\u4f60\u91c7\u7eb3\u4e86\u522b\u4eba\u7684\u5efa\u8bae\uff0c\u628a\u5b83\u5e94\u7528\u5230\u4f60\u7684\u751f\u6d3b\u200a-\u200a\u4e0a\uff0c\u7ed3\u679c\u7acb\u7aff\u89c1\u5f71\uff0c\u52bf\u4e0d\u53ef\u6321\u3002\n\u5609\u5bbe\u662f\u6d77\u519b\u62c9\u7ef4\u574e\u7279\u3002\u8fd9\u4e00\u96c6\u6211\u5df2\u7ecf\u542c\u4e86\u5f88\u591a\u904d\u4e86\uff0c\u4f46\u8fd9\u4e00\u6b21\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u9886\u4f1a\u5176\u4e2d\u7684\u610f\u601d\u4e86\u3002\n\u4eca\u5929\uff0c\u6211\u60f3\u5411\u4f60\u4eec\u4f20\u8fbe\u8fd9\u4e00\u4fe1\u606f\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u5bf9\u7eb3\u74e6\u5c14\u9605\u8bfb\u975e\u865a\u6784\u7c7b\u6587\u5b66\u4f5c\u54c1\u7684\u4e00\u79cd\u63a2\u7d22\u3002\n\u201c\u6211\u8ba4\u8bc6\u7684\u6bcf\u4e2a\u4eba\u90fd\u88ab\u67d0\u672c\u4e66\u56f0\u4f4f\u4e86\u3002\u6211\u80af\u5b9a\u4f60\u73b0\u5728\u6b63\u5fd9\u7740\u770b\u67d0\u672c\u4e66\u3002\u5df2\u7ecf\u662f\u7b2c332\u9875\u4e86\uff0c\u4f60\u4e0d\u80fd\u518d\u5f80\u4e0b\u8bfb\u4e86\uff0c\u4f46\u662f\u4f60\u77e5\u9053\u4f60\u5e94\u8be5\u8bfb\u5b8c\u8fd9\u672c\u4e66\uff0c\u90a3\u4f60\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4f60\u6709\u4e00\u6bb5\u65f6\u95f4\u4e0d\u770b\u4e66\u4e86\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u573a\u60b2\u5267\uff0c\u56e0\u4e3a\u6211\u662f\u5728\u4e66\u672c\u4e0a\u957f\u5927\u7684\uff0c\u7136\u540e\u6211\u8f6c\u5230\u535a\u5ba2\uff0c\u7136\u540e\u6211\u8f6c\u5230Twitter\u548cFacebook\uff0c\u7136\u540e\u6211\u610f\u8bc6\u5230\u6211\u5e76\u6ca1\u6709\u771f\u6b63\u5b66\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u6211\u53ea\u662f\u6574\u5929\u5403\u4e00\u70b9\u591a\u5df4\u80fa\u96f6\u98df\u3002\u201c\u3002\n\u4e5f\u8bb8\u5427\u3002\u4e5f\u8bb8\u4e0d\u4f1a\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u90fd\u77e5\u9053\u90a3\u79cd\u611f\u89c9\uff0c\u56e0\u4e3a\u4f60\u4ee5\u524d\u53bb\u8fc7\u90a3\u91cc\u3002\u6211\u4eec\u90fd\u662f\u3002\n\u6709\u65f6\u8fd9\u672c\u4e66\u5e76\u4e0d\u574f\uff0c\u4f60\u53ea\u662f\u4ece\u6765\u4e0d\u60f3\u8bfb\u800c\u5df2\u3002\u200a-\u200a\u3002\u666e\u904d\u7684\u667a\u6167\u662f\u5f3a\u884c\u901a\u8fc7\uff0c\u4f46\u8fd9\u662f\u4e2a\u7cdf\u7cd5\u7684\u5efa\u8bae\u3002\n\u4f60\u5df2\u7ecf\u4e0d\u5728\u5b66\u6821\u4e86\uff0c\u9605\u8bfb\u200a-\u200a\u5e94\u8be5\u662f\u4e00\u79cd\u4e50\u8da3\u3002\n\u653e\u5f03\u4e00\u672c\u4e66\u51e0\u4e4e\u5c31\u50cf\u7ed3\u675f\u4e86\u4e00\u6bb5\u604b\u60c5\u3002\u60c5\u7eea\u6ca1\u6709\u90a3\u4e48\u5f3a\u70c8\uff0c\u4f46\u8fc7\u7a0b\u662f\u76f8\u4f3c\u7684\u3002\n\u6211\u4eec\u51e0\u5468\u6765\u4e00\u76f4\u56de\u907f\u8fd9\u4e2a\u51b3\u5b9a\uff0c\u79ef\u7d2f\u8d1f\u7f6a\u611f\uff0c\u5e76\u5e0c\u671b\u60c5\u51b5\u4f1a\u6709\u6240\u6539\u5584\u3002\u5728\u5185\u5fc3\u6df1\u5904\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5728\u62d6\u5ef6\u4e0d\u53ef\u907f\u514d\u7684\u4e8b\u60c5\u3002\n\u201c\u6211\u4eec\u4ece\u5c0f\u5c31\u88ab\u6559\u5bfc\uff0c\u4e66\u662f\u4f60\u5b8c\u6210\u7684\u4e1c\u897f\uff0c\u4e66\u662f\u795e\u5723\u7684\u3002\u5f53\u4f60\u53bb\u5b66\u6821\u65f6\uff0c\u4f60\u88ab\u5206\u914d\u53bb\u8bfb\u4e00\u672c\u4e66\uff0c\u4f60\u5fc5\u987b\u8bfb\u5b8c\u8fd9\u672c\u4e66\u2026\u3002\n\u800c\u5f53\u8fd9\u672c\u4e66\u53d7\u5230\u8bc4\u8bba\u754c\u7684\u597d\u8bc4\u65f6\uff0c\u5c31\u66f4\u96be\u4e86\u3002\u4e39\u5c3c\u5c14\u00b7\u5361\u7eb3\u66fc\u7684\u201c\u601d\u8003\u5feb\u4e0e\u6162\u201d\u8ba9\u6211\u6709\u4e86\u8fd9\u6837\u7684\u4f53\u9a8c\u3002\n\u5927\u7ea6\u4e09\u5206\u4e4b\u4e00\u7684\u8def\u7a0b\u6211\u649e\u5230\u4e86\u5899\u4e0a\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u4f46\u6211\u4ece\u6765\u4e0d\u60f3\u770b\u3002\u6700\u70e6\u4eba\u7684\u90e8\u5206\u662f\u4ec0\u4e48\uff1f\u8fd9\u672c\u4e66\u5176\u5b9e\u5f88\u4e0d\u9519\u3002\n\u6bcf\u5f53\u6211\u542c\u8bf4\u4e00\u672c\u6709\u8da3\u7684\u4e66\u201c\u200a-\u200a\u200a-\u200a\u201d(\u6bcf\u5468\u81f3\u5c11\u53d1\u751f\u4e00\u6b21)\u65f6\uff0c\u6211\u4f1a\u5174\u594b\u4e00\u4f1a\u513f\uff0c\u4f46\u7136\u540e\u63d0\u9192\u81ea\u5df1\uff0c\u6211\u5fc5\u987b\u5b8c\u6210\u201c\u601d\u8003\u5feb\u6162\u201d\uff0c\u7136\u540e\u6211\u7684\u5174\u594b\u5c31\u4f1a\u6d88\u9000\uff0c\u53d8\u6210\u8d1f\u7f6a\u611f\u3002\n\u5f53\u6211\u4eec\u8bfb\u5b8c\u4e00\u672c\u4e66\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5df2\u7ecf\u6295\u5165\u4e86\u51e0\u4e2a\u5c0f\u65f6\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8bfb\u5b8c\u8fd9\u672c\u4e66\u611f\u89c9\u662f\u8d4e\u56de\u6211\u4eec\u6295\u8d44\u7684\u552f\u4e00\u9014\u5f84\u3002\u8fd9\u5c31\u597d\u50cf\u6211\u4eec\u5230\u73b0\u5728\u4e3a\u6b62\u8bfb\u5230\u7684\u6240\u6709\u4e1c\u897f\u90fd\u4f1a\u4ece\u8bb0\u5fc6\u4e2d\u62b9\u53bb\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u8bfb\u5230\u6700\u540e\u7684\u8bdd\u3002\n\u4ece\u6765\u6ca1\u6709\u4eba80%\u5730\u653e\u5f03\u4e00\u672c\u5c0f\u8bf4\u3002\u5982\u679c\u4f60\u8d70\u5f97\u90a3\u4e48\u8fdc\uff0c\u4f60\u4f1a\u60f3\u77e5\u9053\u7ed3\u5c40\u7684\u3002\u8fd9\u662f\u7406\u6027\u7684\uff1a\u4e00\u672c\u5c0f\u8bf4\u7684\u6700\u540e20%\u901a\u5e38\u662f\u6700\u6fc0\u70c8\u548c\u6700\u60ca\u9669\u7684\u3002\n\u89c1\u9b3c\uff0c\u201c\u6c38\u522b\u4e86\uff0c\u6b66\u5668\u201d\u7684\u6700\u540e3\u9875\u7ed9\u4e86\u6211\u6c89\u91cd\u7684\u6253\u51fb\uff0c\u6211\u6c38\u8fdc\u4e0d\u4f1a\u5fd8\u8bb0\u5b83\u7684\u7ed3\u5c3e\u573a\u666f\uff0c\u5c3d\u7ba1\u6211\u51e0\u4e4e\u4e0d\u8bb0\u5f97\u4e66\u7684\u5176\u4f59\u90e8\u5206\u4e86\u3002\n\u975e\u865a\u6784\u7c7b\u6587\u5b66\u4f5c\u54c1\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u3002\u6ca1\u6709Deus ex Machina\uff0c\u6ca1\u6709\u7ed3\u5c3e\u7684\u60c5\u8282\u8f6c\u6298\u3002\u5927\u591a\u6570\u975e\u865a\u6784\u7c7b\u4e66\u7c4d\u9075\u5faa\u4ee5\u4e0b\u6a21\u5f0f\u4e4b\u4e00\uff1a\n\u4ef7\u503c\u5e73\u5747\u5206\u5e03\u5728\u6574\u672c\u4e66\u4e2d\u3002\u8fd9\u4e9b\u901a\u5e38\u90fd\u662f\u597d\u7684\uff0c\u6bd4\u5982\u7eb3\u897f\u59c6\u00b7\u5854\u52d2\u5e03\u7684\u201c\u53cd\u8106\u5f31\u201d(\u200a-\u200a)\u3002\n\u8be5\u503c\u662f\u524d\u7f6e\u52a0\u8f7d\u7684\u3002\u90a3\u4e9b\u901a\u5e38\u6ca1\u6709\u90a3\u4e48\u597d\u3002\u4f5c\u8005\u4e00\u5f00\u59cb\u5c31\u8bbe\u5b9a\u4e86\u524d\u63d0\uff0c\u5269\u4e0b\u7684\u5927\u591a\u662f\u91cd\u590d\u548c\u8f76\u4e8b\u3002\n\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u4e2d\u9014\u9000\u51fa\uff0c\u4f60\u90fd\u53ef\u4ee5\u4ece\u4e66\u4e2d\u83b7\u5f97\u516c\u5e73\u7684\u4efd\u989d\u3002\u4f60\u4e0d\u9700\u8981\u8bfb\u5230\u6700\u540e\u4e00\u9875\u6765\u8865\u507f\u4f60\u6295\u5165\u7684\u65f6\u95f4\u3002\n\u4f46\u662f\u8fd8\u6709\u94b1\u3002\u6211\u4eec\u90fd\u559c\u6b22\u7269\u6709\u6240\u503c\u3002\u6211\u4eec\u4ed8\u4e86\u8fd9\u672c\u4e66\u7684\u94b1\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u628a\u5b83\u5168\u90e8\u8bfb\u5b8c\u3002\u5728\u8d2d\u4e70\u65b0\u4e66\u4e4b\u524d\u8d2d\u4e70\u4e00\u672c\u65b0\u4e66\u4f3c\u4e4e\u662f\u4e00\u79cd\u4e0d\u597d\u7684\u6d88\u8d39\u8005\u884c\u4e3a\u3002\n\u6211\u4eec\u7f3a\u5c11\u7684\u662f\u673a\u4f1a\u6210\u672c\u3002\u5b83\u4e0d\u50cf\u4f60\u4ed8\u7ed9\u4e9a\u9a6c\u900a\u768412\u7f8e\u5143\u90a3\u6837\u6709\u5f62\uff0c\u4f46\u5b83\u662f\u771f\u5b9e\u7684\uff0c\u800c\u4e14\u662f\u5de8\u5927\u7684\u3002\n\u4f60\u88ab\u56f0\u4f4f\u6216\u52c9\u5f3a\u8bfb\u4e00\u672c\u5e73\u5eb8\u7684\u4e66\u7684\u6bcf\u4e00\u5929\uff0c\u90fd\u662f\u4f60\u672c\u53ef\u4ee5\u6295\u5165\u5230\u5f15\u4eba\u5165\u80dc\u548c\u6709\u5f71\u54cd\u529b\u7684\u4f5c\u54c1\u4e2d\u53bb\u7684\u4e00\u5929\u3002\n\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u4fe1\u606f\u4e30\u5bcc\u7684\u4e16\u754c\u3002\u6ca1\u6709\u7a00\u7f3a\u5fc3\u6001\u7684\u4f59\u5730\uff0c\u6ca1\u6709\u5185\u759a\u7684\u4f59\u5730\u3002\u9677\u5165\u5b66\u4e60\u7684\u673a\u4f1a\u6210\u672c\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u4e00\u672c\u65b0\u4e66\u7684\u4ef7\u683c\u3002\n\u201c\u4e00\u672c\u771f\u6b63\u597d\u7684\u4e66\u552e\u4ef710\u7f8e\u5143\u621620\u7f8e\u5143\uff0c\u80fd\u4ee5\u4e00\u79cd\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u6539\u53d8\u4f60\u7684\u751f\u6d3b\u3002\u8fd9\u4e0d\u662f\u6211\u8ba4\u4e3a\u53ef\u4ee5\u7701\u94b1\u7684\u4e8b\u60c5\u3002\u8fd9\u751a\u81f3\u662f\u5728\u6211\u7834\u4ea7\u7684\u65f6\u5019\uff0c\u6211\u6ca1\u6709\u94b1\u7684\u65f6\u5019\u3002\u6211\u603b\u662f\u82b1\u94b1\u4e70\u4e66\u3002\u6211\u4ece\u6765\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u7b14\u5f00\u9500\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u9879\u6295\u8d44\u3002\u6211\u82b1\u5728\u4e70\u4e66\u4e0a\u7684\u94b1\u53ef\u80fd\u662f\u6211\u5b9e\u9645\u4e70\u5230\u7684\u94b1\u768410\u500d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u6bcf\u4e70\u4e00\u672c\u4ef7\u503c200\u7f8e\u5143\u7684\u4e66\uff0c\u5b9e\u9645\u4e0a\u5c31\u670910%\u7684\u6536\u76ca\u3002\u6211\u4f1a\u8bfb\u4ef7\u503c20\u7f8e\u5143\u7684\u4e66\uff0c\u4f46\u4ecd\u7136\u7edd\u5bf9\u503c\u5f97\u3002\u201c\u3002\n\u4e24\u5468\u524d\uff0c\u6211\u53c8\u5b66\u4e86\u4e00\u904d\u201c\u5feb\u6162\u601d\u8003\u201d\uff0c\u6211\u771f\u7684\u88ab\u5b83\u9707\u64bc\u4e86\u3002\n\u4e8b\u540e\u770b\u6765\uff0c\u6211\u53ea\u662f\u5728\u5f53\u65f6\u5e7f\u6cdb\u9605\u8bfb\u4e86\u5173\u4e8e\u8ba4\u77e5\u504f\u5dee\u7684\u8bdd\u9898\u540e\uff0c\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u611f\u5230\u7cbe\u75b2\u529b\u7aed\u3002\u5b83\u7ed9\u6211\u4e0a\u4e86\u5b9d\u8d35\u7684\u4e00\u8bfe\uff1a\n\u7ed9\u5408\u9002\u7684\u4eba\u914d\u4e00\u672c\u5408\u9002\u7684\u4e66\u662f\u4e0d\u591f\u7684\u3002\u5b83\u9700\u8981\u662f\u4e00\u672c\u6b63\u786e\u7684\u4e66\uff0c\u5728\u6b63\u786e\u7684\u65f6\u95f4\u7ed9\u6b63\u786e\u7684\u4eba\u3002\n\u6709\u65f6\u5019\uff0c\u5728\u4f60\u51c6\u5907\u597d\u9605\u8bfb\u8fd9\u672c\u4e66\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u7ed5\u9053\u4e00\u5c0f\u6bb5\u8def\u3002\n\u4e66\u200a-\u200a\u7684\u597d\u5904\u662f\u5b83\u4eec\u603b\u662f\u5728\u4f60\u653e\u7684\u5730\u65b9\u7b49\u7740\u3002\n\u8ba9\u6211\u5370\u8c61\u6700\u6df1\u7684\u662f\u6d77\u519b\u8bf4\u4ed6\u4e00\u6b21\u8bfb10\u523020\u672c\u4e66\u3002\n\u540e\u6765\u6211\u610f\u8bc6\u5230\uff0c\u6211\u5728\u5b66\u6821\u65f6\u5df2\u7ecf\u505a\u8fc7\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u6211\u6709\u5927\u7ea615\u4e2a\u4e0d\u540c\u7684\u73ed\u7ea7\uff0c\u6bcf\u4e2a\u73ed\u7ea7\u90fd\u6709\u81ea\u5df1\u7684\u6559\u79d1\u4e66\uff0c\u8ddf\u4e0a\u8fdb\u5ea6\u4ece\u6765\u6ca1\u6709\u95ee\u9898\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\u6211\u4e0d\u559c\u6b22\u5b83\u4eec\u4e2d\u7684\u5927\u591a\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u662f\u6211\u81ea\u5df1\u6458\u7684\u3002\n\u5173\u952e\u662f\u8981\u6709\u771f\u6b63\u7684\u591a\u6837\u6027\u3002\u4e0d\u540c\u4e3b\u9898\u7684\u4e66\u7c4d\uff0c\u9875\u6570\u4e0d\u540c\uff0c\u98ce\u683c\u4e0d\u540c\u3002\u4e00\u4e9b\u66f4\u597d\u73a9\u3001\u66f4\u8f7b\u76c8\uff0c\u53e6\u4e00\u4e9b\u5219\u66f4\u5bc6\u96c6\u3001\u8981\u6c42\u66f4\u9ad8\u3002\u6211\u4e5f\u559c\u6b22\u6709\u5404\u79cd\u683c\u5f0f\u7684\u200a-\u200aKindle\uff0c\u7269\u7406\u7684\u548c\u97f3\u9891\u7684\u3002\n\u201c\u6211\u6253\u5f00\u6211\u7684Kindle\uff0c\u6211\u770b\u8fc7\u53bb\u3002\u6839\u636e\u6211\u7684\u5fc3\u60c5\uff0c\u6211\u4f1a\u7ffb\u9605\u4efb\u4f55\u4e0e\u6211\u7684\u5fc3\u60c5\u2026\u76f8\u5339\u914d\u7684\u4e66\u3002\u5bf9\u6211\u6765\u8bf4\u6700\u91cd\u8981\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5b83\u8ba9\u6211\u53ef\u4ee5\u5b9a\u671f\u9605\u8bfb\u3002\u201c\u3002\n\u5728\u4e0d\u540c\u7684\u65e5\u5b50\u91cc\uff0c\u4f60\u4f1a\u5bf9\u4e0d\u540c\u7684\u60f3\u6cd5\u611f\u5174\u8da3\u3002\u5373\u4f7f\u5728\u540c\u4e00\u5929\uff0c\u4f60\u7684\u80fd\u91cf\u4e5f\u4f1a\u8d77\u4f0f\u4e0d\u5b9a\u3002\u4e0d\u8981\u4e0e\u4e4b\u6297\u4e89\uff0c\u62e5\u62b1\u5b83\u3002\n\u591a\u6837\u5316\u610f\u5473\u7740\u6211\u4e0d\u5fc5\u7b49\u5f85\u9002\u5408\u6211\u6b63\u5728\u9605\u8bfb\u7684\u4e66\u7684\u5fc3\u60c5\u3002\u6211\u6709\u9002\u5408\u6bcf\u79cd\u60c5\u51b5\u7684\u4e1c\u897f\uff1a\n\u6211\u7cbe\u529b\u5145\u6c9b\uff0c\u60f3\u6f5c\u5165\u4e00\u4e2a\u9700\u8981\u96c6\u4e2d\u6ce8\u610f\u529b\u7684\u590d\u6742\u8bdd\u9898\u3002\n\u6211\u60f3\u7528\u4e00\u672c\u539a\u539a\u7684\u3001\u8282\u594f\u7f13\u6162\u7684\u4f20\u8bb0\u8ba9\u6211\u5b89\u5fc3\u5165\u7761\u3002\n\u5982\u679c\u8fd9\u5f20\u6e05\u5355\u4e0a\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u4e0d\u5438\u5f15\u6211\uff0c\u6211\u77e5\u9053\u6211\u6ca1\u6709\u5fc3\u60c5\u770b\u4e66\uff0c\u6240\u4ee5\u6211\u5c31\u505a\u70b9\u522b\u7684\u3002\n\u6709\u6548\u5b66\u4e60\u7684\u57fa\u672c\u505a\u6cd5\u4e4b\u4e00\u662f\u95f4\u9694\u91cd\u590d\u3002\u6982\u5ff5\u5f88\u7b80\u5355\uff1a\u4e0e\u4e00\u5929\u5b66\u4e60\u5341\u4e2a\u5c0f\u65f6\u76f8\u6bd4\uff0c\u6bcf\u5929\u5b66\u4e60\u4e00\u4e2a\u5c0f\u65f6\u5341\u5929\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\u3002\n\u7814\u7a76\u8868\u660e\uff0c\u5f53\u6d89\u53ca\u5230\u957f\u671f\u8bb0\u5fc6\u548c\u8bb0\u5fc6\u65f6\uff0c\u8fd9\u4e00\u70b9\u5c24\u5176\u6b63\u786e\u3002\u56e0\u4e3a\u4f60\u4e0d\u662f\u4e3a\u4e86\u901a\u8fc7\u8003\u8bd5\u800c\u8bfb\u4e66\uff0c\u6240\u4ee5\u957f\u671f\u4fdd\u6301\u9605\u8bfb\u80fd\u529b\u624d\u662f\u6700\u7ec8\u76ee\u6807\u3002\n\u5f53\u4f60\u4e00\u6b21\u8bfb\u4e00\u672c\u4e66\u65f6\uff0c\u4f60\u7684\u5b66\u4e60\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\u5982\u679c\u4f60\u9605\u8bfb\u591a\u672c\u4e66(\u6765\u81ea\u591a\u4e2a\u5b66\u79d1)\uff0c\u5b83\u770b\u8d77\u6765\u4f1a\u66f4\u50cf\u8fd9\u6837\uff1a\n\u4f60\u5c06\u5728\u66f4\u957f\u7684\u65f6\u95f4\u5185\u9605\u8bfb\u6bcf\u672c\u4e66\uff0c\u8fd9\u4f1a\u8ba9\u4f60\u7684\u5927\u8111\u5efa\u7acb\u66f4\u5f3a\u5927\u7684\u795e\u7ecf\u8fde\u63a5\uff0c\u5e76\u5c06\u60f3\u6cd5\u8f93\u5165\u4f60\u7684\u957f\u671f\u8bb0\u5fc6\u3002\n\u5b66\u4e60\u80cc\u666f\u4e0b\u7684\u4ea4\u9519\u662f\u540c\u65f6\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u95ee\u9898\u7684\u5b9e\u8df5\u3002\u5b83\u53ef\u4ee5\u8ba9\u5b66\u4e60\u8005\u770b\u5230\u4e0d\u540c\u9886\u57df\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u4ece\u800c\u6df1\u5316\u4ed6\u7684\u6574\u4f53\u5b66\u4e60\u3002\n\u77e5\u8bc6\u4e0d\u662f\u4e00\u6761\u4eceA\u5230B\u518d\u5230C\u7684\u7ebf\u6027\u8def\u5f84\u3002\u77e5\u8bc6\u662f\u4e00\u4e2a\u65e0\u9650\u7684\u7f51\u7edc\uff0c\u4e8b\u7269\u4e4b\u95f4\u7684\u8054\u7cfb\u65b9\u5f0f\u53ef\u80fd\u5e76\u4e0d\u660e\u663e\u3002\n\u4e00\u672c\u535a\u5f08\u8bba\u4e66\u7c4d\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u6df1\u5165\u5730\u7406\u89e3\u51b7\u6218\uff0c\u4e00\u672c\u8425\u9500\u4e66\u7c4d\u53ef\u4ee5\u63ed\u793a\u5e0c\u7279\u52d2\u662f\u5982\u4f55\u8ff7\u4f4f\u6574\u4e2a\u56fd\u5bb6\u7684\u3002\u800c\u4e14\u8fd9\u4e0d\u662f\u5355\u5411\u7684\uff1a\u8fd9\u672c\u5386\u53f2\u4e66\u5c06\u52a0\u6df1\u4f60\u5bf9\u5176\u4ed6\u4e24\u4e2a\u9886\u57df\u7684\u7406\u89e3\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u5206\u6790\u4e86\u90a3\u4e9b\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\u3002\n\u4ea4\u9519\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u9694\u5929\u800c\u4e0d\u662f\u51e0\u5e74\u5730\u7814\u7a76\u8fd9\u4e9b\u4e3b\u9898\uff0c\u6211\u4eec\u66f4\u6709\u53ef\u80fd\u770b\u5230\u8fd9\u4e9b\u8054\u7cfb\u3002\n\u6211\u6700\u559c\u6b22\u7eb3\u74e6\u5c14\u7684\u505a\u6cd5\u662f\uff0c\u73b0\u5728\uff0c\u6bcf\u5f53\u6211\u542c\u5230\u4e00\u672c\u6709\u8da3\u7684\u4e66\u200a-\u200a\uff0c\u6211\u5c31\u53ef\u4ee5\u9a6c\u4e0a\u5f00\u59cb\u5199\u3002\n\u4e0d\u8981\u518d\u628a\u5b83\u653e\u5728\u6211\u7684\u613f\u671b\u6e05\u5355\u4e0a\uff0c\u4e0e\u5176\u4ed6200\u672c\u4e66\u4e00\u8d77\u57cb\u846c\uff0c\u76f4\u5230\u6211\u5fd8\u8bb0\u4e3a\u4ec0\u4e48\u6211\u4f1a\u5bf9\u5b83\u611f\u5230\u5174\u594b\uff0c\u6216\u8005\u662f\u8c01\u63a8\u8350\u4e86\u5b83\u3002\n\u8fd9\u4e9b\u5929\uff0c\u5f53\u6211\u5bf9\u5b66\u4e60\u4efb\u4f55\u4e1c\u897f\u611f\u5230\u5174\u594b\u65f6\uff0c\u6211\u4f1a\u5229\u7528\u6211\u7684\u5174\u594b\u548c\u597d\u5947\u5fc3\uff0c\u76f4\u63a5\u5f00\u59cb\u5b66\u4e60\u3002\n\u5982\u679c\u8fd9\u672c\u4e66\u53d8\u5f97\u6709\u70b9\u67af\u71e5\uff0c\u6211\u5c31\u8df3\u8fc7\u3002\u6709\u65f6\u6211\u4f1a\u4ece\u4e2d\u95f4\u5f00\u59cb\u8bfb\u4e00\u672c\u4e66\uff0c\u56e0\u4e3a\u6709\u4e00\u6bb5\u8bdd\u5438\u5f15\u4e86\u6211\u7684\u6ce8\u610f\u529b\uff0c\u6211\u5c31\u4ece\u90a3\u91cc\u7ee7\u7eed\u8bfb\u4e0b\u53bb\uff0c\u6211\u89c9\u5f97\u6ca1\u6709\u4efb\u4f55\u4e49\u52a1\u8bfb\u5b8c\u8fd9\u672c\u4e66\u3002\n\u8fd9\u79cd\u5fc3\u6001\u8f6c\u53d8\u662f\u6700\u96be\u63a5\u53d7\u7684\uff0c\u6211\u9884\u8ba1\u4f1a\u6709\u5f88\u591a\u4eba\u53cd\u5bf9\u3002\n\u8df3\u8fc7\u7ae0\u8282\uff0c\u4ece\u4e2d\u95f4\u5f00\u59cb\u8bfb\u200a-\u200a\u8fd9\u4e9b\u4e8b\u60c5\u4ecd\u7136\u8ba9\u6211\u4e0d\u8212\u670d\u3002\u51e0\u4e4e\u611f\u89c9\u50cf\u662f\u4f5c\u5f0a\u3002\n\u8fd8\u6709\u4e00\u79cd\u62c5\u5fc3\u4f1a\u9519\u8fc7\u200a-\u200a\uff0c\u5982\u679c\u6211\u4eec\u8df3\u8fc7\u4e00\u53e5\u7cbe\u5f69\u7684\u53e5\u5b50\u5462\uff1f\u6216\u8005\u7a0d\u540e\u9700\u8981\u7684\u5173\u952e\u4fe1\u606f\uff1f\n\u8fd9\u79cd\u7c7b\u578b\u7684\u601d\u8003\u53ef\u80fd\u4f1a\u8017\u8d39\u4f60\u5b9d\u8d35\u7684\u65f6\u95f4\uff0c\u6211\u6700\u8fd1\u5728\u201c\u795e\u7ecf\u53ef\u5851\u6027\u7684\u529b\u91cf\u201d\u4e2d\u4f53\u9a8c\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\n\u6211\u4e70\u4e86\u8fd9\u672c\u4e66\uff0c\u4f5c\u4e3a\u6211\u6700\u8fd1\u6df1\u5165\u7814\u7a76\u795e\u7ecf\u79d1\u5b66\u7684\u4e00\u90e8\u5206\u3002\u5f00\u59cb\u7684\u65f6\u5019\u5f88\u6162\uff0c\u5b83\u770b\u8d77\u6765\u66f4\u50cf\u662f\u4e00\u672c\u8f7b\u677e\u7684\u81ea\u52a9\u4e66\u7c4d\uff0c\u800c\u4e0d\u662f\u4e00\u672c\u4e25\u8083\u7684\u795e\u7ecf\u79d1\u5b66\u4e66\u7c4d\u3002\n\u5f53\u6211\u8003\u8651\u8f9e\u804c\u65f6\uff0c\u6211\u770b\u4e86\u770b\u76ee\u5f55\uff0c\u60f3\u5bf9\u5373\u5c06\u53d1\u751f\u7684\u4e8b\u60c5\u7565\u77e5\u4e00\u4e8c\u3002\u540e\u9762\u7684\u4e00\u4e9b\u7ae0\u8282\u6709\u5f88\u6709\u524d\u9014\u7684\u6807\u9898\uff0c\u7279\u522b\u662f\u7b2c26\u7ae0\uff1a\u201c\u51a5\u60f3\u3001\u795e\u7ecf\u53ef\u5851\u6027\u548c\u5927\u8111\u201d\u3002\n\u4e00\u65e6\u6211\u6000\u7591\u4e86\u8fd9\u672c\u4e66\u7684\u4ef7\u503c\uff0c\u6211\u5c31\u5e94\u8be5\u8df3\u5230\u7b2c26\u7ae0\uff0c\u8fd9\u6837\u5c31\u6709\u673a\u4f1a\u7ed9\u5b83\u6253\u51fa\u6700\u597d\u7684\u4e00\u62f3\u3002\u5982\u679c\u5b83\u662f\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u51b3\u5b9a\u4ece\u90a3\u91cc\u53bb\u54ea\u91cc\u3002\u4f46\u5982\u679c\u4e0d\u662f\uff0c\u6211\u4f1a\u77e5\u9053\u662f\u65f6\u5019\u7ee7\u7eed\u524d\u8fdb\u4e86\u3002\n\u610f\u8bc6\u5230\u6211\u53ea\u662f\u4e3a\u4e86\u9075\u5b88\u5173\u4e8e\u5982\u4f55\u9605\u8bfb\u4e66\u7c4d\u7684\u6f5c\u89c4\u5219\u800c\u901a\u8bfb\u4e8625\u7ae0\u2026\u3002\n\u6211\u7ec8\u4e8e\u51c6\u5907\u597d\u6446\u8131\u62d6\u7d2f\u6211\u7684\u6700\u540e\u4e00\u4e2a\u5305\u88b1\u4e86\uff0c\u200a-\u200a\uff0c\u6211\u5bf9\u987a\u5e8f\u9605\u8bfb\u7684\u575a\u5b9a\u4fe1\u5ff5\u3002\n\u5982\u679c\u4f60\u9605\u8bfb\u975e\u865a\u6784\u7c7b\u4e66\u7c4d\uff0c\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u4f5c\u54c1\uff0c\u6bd4\u5982\u201c\u795e\u7ecf\u53ef\u5851\u6027\u7684\u529b\u91cf\u201d(The Power Of NeuroPlastic)\u200a-\u200aLow-Effect\u4e66\u7c4d\uff0c\u5b83\u4eec\u7684\u4e66\u540d\u5f88\u6709\u524d\u9014\uff0c\u5927\u591a\u91cd\u590d\u4e86\u76f8\u540c\u7684\u89c2\u70b9\u3002\n\u201c\u4e66\u7c4d\u7684\u95ee\u9898\u662f\uff0c\u8981\u5199\u4e00\u672c\u4e66\uff0c\u51fa\u7248\u4e00\u672c\u5b9e\u4f53\u7684\u67af\u6811\u4e66\uff0c\u9700\u8981\u5927\u91cf\u7684\u5de5\u4f5c\u3001\u7cbe\u529b\u548c\u91d1\u94b1\u3002\u6709\u65f6\uff0c\u4eba\u4eec\u5f00\u59cb\u628a\u7b80\u5355\u7684\u60f3\u6cd5\u5305\u88c5\u6210\u957f\u957f\u7684\u4e66\u3002\u90a3\u4e9b\u53ef\u80fd\u662f\u6211\u6700\u4e0d\u559c\u6b22\u7684\u4e66\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u907f\u5f00\u6574\u4e2a\u5546\u4e1a\u548c\u81ea\u52a9\u7c7b\u522b\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u4f60\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u5b83\u9690\u85cf\u5728\u6210\u767e\u4e0a\u5343\u9875\u7684\u9875\u9762\u548c\u5927\u91cf\u8f76\u4e8b\u4e2d\u3002\n\u4e0b\u6b21\u5f53\u4f60\u6000\u7591\u4e00\u672c\u4e66\u7b26\u5408\u8fd9\u4e00\u7c7b\u522b\u65f6\uff0c\u4e0d\u8981\u6000\u7591\u5b83\u7684\u597d\u5904\u3002\u770b\u770b\u76ee\u5f55\uff0c\u9009\u62e9\u4e00\u4e2a\u7ae0\u8282\uff0c\u8ba9\u5b83\u7ed9\u4f60\u6700\u597d\u7684\u5370\u8c61\u3002\n\u6709\u5f88\u591a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4e66\u4f60\u8fd8\u6ca1\u6709\u8bfb\u8fc7\u3002\u9605\u8bfb\u4f4e\u4e8e\u6807\u51c6\u7684\u5185\u5bb9\u662f\u4e00\u79cd\u5de8\u5927\u7684\u6d6a\u8d39\u3002\n\u7eb3\u74e6\u5c14\u7684\u975e\u987a\u5e8f\u9605\u8bfb\u65b9\u6cd5\u751a\u81f3\u6bd4\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u6240\u4ecb\u7ecd\u7684\u66f4\u81ea\u7531\u3002\u4ee5\u4e0b\u662f\u4ed6\u5bf9\u81ea\u5df1\u5e9e\u5927\u7684\u4e66\u5e93\u7684\u770b\u6cd5\uff1a\n\u201c\u6211\u53ea\u662f\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u535a\u5ba2\u6863\u6848\u3002\u4e00\u4e2a\u535a\u5ba2\u53ef\u80fd\u6709300\u7bc7\u5e16\u5b50\uff0c\u4f60\u53ef\u4ee5\u53ea\u8bfb\u5230\u4f60\u73b0\u5728\u9700\u8981\u76842\uff0c3\uff0c5\u7bc7\u3002\u6211\u60f3\u4f60\u4e5f\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u5f0f\u53bb\u60f3\u4e00\u672c\u4e66\u3002\u201c\u3002\n\u8fd9\u8ba9\u6211\u60f3\u8d77\u4e86\u201c\u53ca\u65f6\u201d\u4e0e\u201c\u4ee5\u9632\u4e07\u4e00\u201d\u7684\u6982\u5ff5\uff0c\u5b83\u6765\u81ea\u5e93\u5b58\u7ba1\u7406\uff0c\u4f46\u53ef\u4ee5\u7528\u4e8e\u5b66\u4e60\uff1a\u9605\u8bfb\u4f60\u73b0\u5728\u6700\u9700\u8981\u7684\u4e66\uff0c\u800c\u4e0d\u662f\u4ee5\u540e\u53ef\u80fd\u6709\u7528\u7684\u4e66\u3002\n\u6d77\u519b\u53ea\u662f\u66f4\u8fdb\u4e00\u6b65\uff1a\u9605\u8bfb\u4f60\u73b0\u5728\u6700\u9700\u8981\u7684\u7ae0\u8282\u3002\n\u6709\u4e9b\u4eba\u4f1a\u58f0\u79f0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c06\u4e66\u7c4d\u6846\u5b9a\u4e3a\u4e00\u79cd\u53ef\u4ee5\u8f7b\u89c6\u7684\u5546\u54c1\u3002\n\u867d\u7136\u6211\u786e\u5b9e\u8ba4\u4e3a\u6211\u4eec\u9700\u8981\u8ba9\u9605\u8bfb\u53d8\u5f97\u66f4\u52a0\u6d41\u7545\u548c\u677e\u6563(\u5b83\u5e94\u8be5\u8ba9\u4eba\u611f\u89c9\u50cf\u662f\u5728\u73a9\u800d)\uff0c\u4f46\u6211\u4e5f\u76f8\u4fe1\uff0c\u7edd\u5927\u591a\u6570\u7684\u4ef7\u503c\u5c06\u6765\u81ea\u5bf9\u51e0\u672c\u4f1f\u5927\u4e66\u7c4d\u7684\u6df1\u5165\u7814\u7a76\uff0c\u800c\u4e00\u672c\u4f1f\u5927\u7684\u4e66\u7c4d\u662f\u79bb\u5546\u54c1\u6700\u8fdc\u7684\u4e1c\u897f\u3002\n\u95ee\u9898\u662f\uff0c\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u4e8b\u5148\u77e5\u9053\u5b83\u4eec\u662f\u4ec0\u4e48\u3002\u4f60\u4e0d\u80fd\u590d\u5236\u522b\u4eba\u7684\u540d\u5355\u3002\u8fd9\u662f\u4e00\u4efd\u5f88\u68d2\u7684\u793c\u7269\uff0c\u56e0\u4e3a\u5b83\u7ed9\u4e86\u4f60\u53d1\u73b0\u81ea\u5df1\u7684\u5feb\u4e50\u3002\n\u6d77\u519b\u7684\u505a\u6cd5\u662f\u8ba9\u8fd9\u6bb5\u65c5\u7a0b\u53d8\u5f97\u66f4\u6709\u5438\u5f15\u529b\u548c\u66f4\u6709\u4ef7\u503c\u3002\u4e00\u65e6\u4f60\u771f\u7684\u53d1\u73b0\u4e86\u4e00\u4e2a\u5b9d\u7bb1\uff0c\u4e00\u672c\u6539\u53d8\u751f\u6d3b\u7684\u4e66\u200a-\u200a\u5c31\u4f1a\u628a\u6240\u6709\u8fd9\u4e9b\u90fd\u6254\u51fa\u7a97\u5916\u3002\u5c3d\u4f60\u6240\u80fd\u5438\u6536\u5b83\u3002\n\u201c\u4f60\u4f1a\u975e\u5e38\u8fc5\u901f\u5730\u6d4f\u89c8\uff0c\u627e\u5230\u90a3\u4e9b\u6293\u4f4f\u4f60\u7684\u3001\u5bf9\u4f60\u6765\u8bf4\u91cd\u8981\u548c\u6709\u8da3\u7684\u4e1c\u897f\uff0c\u7136\u540e\u4f60\u4f1a\u575a\u6301\u4e0b\u53bb\uff0c\u6df1\u5165\u5230\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4e1c\u897f\u3002\u201d\u6709\u63a2\u7d22\uff0c\u4e5f\u6709\u5265\u524a\u3002\u6240\u4ee5\u4f60\u6d4f\u89c8\u4e86\u5f88\u591a\u4e66\uff0c\u76f4\u5230\u4f60\u51b3\u5b9a\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u5f00\u53d1\u3002\u201c\u3002\n\u5728\u9075\u5faa\u8fd9\u79cd\u65b9\u6cd5\u4e00\u5e74\u540e\uff0c\u5982\u679c\u6211\u5fc5\u987b\u5c06\u597d\u5904\u63d0\u70bc\u4e3a3\u4e2a\u8981\u70b9\uff1a\n\u4f60\u4f1a\u8bfb\u5f97\u66f4\u591a\uff0c\u56e0\u4e3a\u4f60\u603b\u4f1a\u6709\u4f60\u60f3\u8bfb\u7684\u4e1c\u897f\u3002\n\u4f60\u4f1a\u66f4\u6295\u5165\u5230\u4f60\u6240\u9605\u8bfb\u7684\u5185\u5bb9\u4e2d\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u591a\u7684\u4e50\u8da3\u548c\u66f4\u597d\u7684\u8bb0\u5fc6\u529b\u3002\n\u4f60\u6bcf\u4e2a\u5b57\u90fd\u4f1a\u83b7\u5f97\u66f4\u591a\u7684\u4ef7\u503c\uff0c\u56e0\u4e3a\u4f60\u4f1a\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u5e9f\u8bdd\uff0c\u63d0\u65e9\u4e22\u5f03\u5e73\u5eb8\u7684\u4e66\u7c4d\u3002\n\u5982\u679c\u4f60\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8bfb\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u4f60\u8db3\u591f\u5173\u5fc3\u4e66\u7c4d\uff0c\u6240\u4ee5\u6211\u5047\u8bbe\u4f60\u8ba1\u5212\u5728\u4f60\u7684\u4f59\u751f\u4e2d\u9605\u8bfb\u5b83\u4eec\uff0c\u8fd9\u4e00\u70b9\u6211\u5f88\u653e\u5fc3\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u200a-\u200a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u4e2d\u952e\u5e2e\u52a9\u5176\u4ed6\u4eba\u627e\u5230\u5b83\u3002\u8fd9\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u4e0d\u540c\u3002\u2764\ufe0f\u3002\n\u5982\u679c\u4f60\u60f3\u770b\u5230\u66f4\u591a\u6211\u7684\u4f5c\u54c1\uff0c\u8bf7\u5728Medium\u548cTwitter\u4e0a\u5173\u6ce8\u6211\u3002", "note_en": "Once I let go, I rediscovered the joy in reading\u200a\u2014\u200asomething I haven\u2019t felt since I was a teenager, skipping classes to read Nietzsche or Albert Camus.\n It all started with a podcast. It wasn\u2019t even my insight. It was one of those rare occasions where you take someone\u2019s advice, apply it to your life\u200a\u2014\u200aand the results are instant and overwhelming.\n The guest was Naval Ravikant. I\u2019ve listened to this  episode multiple times, but this time I was ready to get the message.\n Today I want to offer that message to you. This essay is an exploration of Naval\u2019s approach to reading non-fiction.\n   \u201cEveryone I know is stuck on some book. I\u2019m sure you\u2019re stuck on some book right now. It\u2019s page 332, you can\u2019t go on any further but you know you should finish the book, so what do you do? You give up reading books for a while. That for me was a tragedy, because I grew up on books, and then I switched to blogs and then I switched to Twitter and Facebook, and then I realized I wasn\u2019t really learning anything, I was just taking little dopamine snacks all day\u00a0long.\u201d\n   Maybe. Maybe not. Either way, you know that feeling because you\u2019ve been there before. We all did.\n Sometimes the book isn\u2019t bad\u200a\u2014\u200ayou just never feel like reading it. The prevailing wisdom is to power through, but that is terrible advice.\n You\u2019re not in school anymore\u200a\u2014\u200areading should be a joy.\n   Quitting a book is almost like ending a relationship. The emotions are not as intense, but the process is similar.\n We avoid the decision for weeks, accumulate guilt, and hope that things will improve. Deep inside we know that we\u2019re delaying the inevitable.\n  \u201cwe\u2019re taught from a young age that books are something you finish, books are sacred. When you go to school and you\u2019re assigned to read a book, you have to finish the\u00a0book\u2026\u201d\n  And when the book is critically-acclaimed, it\u2019s even harder. I had this experience with \u201c Thinking Fast and Slow\u201d by Daniel Kahneman.\n      About a third of the way in I hit a wall. I couldn\u2019t figure out why, but I never felt like reading it. And the most annoying part? The book was actually good.\n   Whenever I heard about an interesting book\u200a\u2014\u200awhich happens at least once a week\u200a\u2014\u200aI would get excited for a second, but then remind myself that I have to finish \u201cThinking Fast and Slow\u201d, and my excitement will fade and turn into guilt.\n   When we\u2019re midway through a book, we\u2019ve invested hours into it. At that point, finishing the book feels like the only way to redeem our investment. It\u2019s as if everything we read up to this point will be wiped from memory if we don\u2019t get to the end.\n  No one has ever quit a fiction book 80% into it. If you get that far, you want to know the ending. And it\u2019s rational: the last 20% of a fiction book are usually the most intense and thrilling.\n  Heck, the last 3 pages of \u201cA Farewell to Arms\u201d hit me so hard that I\u2019ll never forget its ending scene, even though I barely remember the rest of the book.\n That\u2019s not the case with non-fiction. There is no Deus ex machina, no plot twist at the end. Most non-fiction books follow one of the following patterns:\n The value is spread evenly throughout the book. Those are usually the good ones\u200a\u2014\u200alike \u201cAntifragile\u201d by Nassim Taleb.\n The value is front-loaded. Those are usually not as good. The author lays the premise at the start, and the rest is mostly repetition and anecdotes.\n   In either case, you get a fair share of what the book has to offer if you quit midway through. You don\u2019t need to get to the last page to redeem the time you\u2019ve put in.\n But then there\u2019s the money. We all like getting our money\u2019s worth. We paid for the book, so we want to read all of it. Buying a new book before doing so seems like bad consumer behavior.\n What we\u2019re missing is the opportunity cost. It\u2019s not as tangible as the 12$ you paid to Amazon, but it\u2019s real, and it\u2019s huge.\n Every day that you spend being stuck or reluctantly reading a mediocre book, is a day you could have spent engaged with fascinating and impactful works.\n We are living in a world of information abundance. There\u2019s no room for scarcity mindset, no room for guilt. The opportunity cost of being stuck in your learning is way beyond the price of a new book.\n \u201cA really good book costs $10 or $20 and can change your life in a meaningful way. It\u2019s not something I believe in saving money on. This was even back when I was broke and I had no money. I always spent money on books. I never viewed that as an expense. That\u2019s an investment to me. I probably spend 10 times as much money on books as I actually get through. In other words, for every $200 worth of books I buy, I actually end up making it through 10%. I\u2019ll read $20 worth of books, but it\u2019s still absolutely worth\u00a0it.\u201d\n   two weeks ago I picked up \u201cThinking Fast and Slow\u201d again, and I\u2019m actually blown away by it.\n In hindsight, I was just burned out on the topic of cognitive biases after reading about it extensively at the time. It taught me a valuable lesson:\n The right book for the right person is not enough. It needs to be the right book, for the right person at the right time.\n sometimes you need to go on a little detour before you\u2019re ready for what the book has to give you.\n The nice thing about books\u200a\u2014\u200athey always wait where you leave them.\n  What struck me the most was when Naval said he\u2019s reading 10 to 20 books at a time.\n   I later realized that I\u2019ve already done something similar back in school. I had about 15 different classes, each with its own textbook, and I never had a problem keeping up. The only issue was I didn\u2019t like most of them because I haven\u2019t picked them myself.\n  The key is to have real variety. Books on different subjects, with different page counts and different styles. some more playful and light, others more dense and demanding. I also like having a variety of formats\u200a\u2014\u200aKindle, physical and Audio.\n \u201cI open up my kindle, I look through. Based on my mood, I\u2019ll flip through to whatever book matches my mood\u2026The most important thing that does for me is it lets me read on a regular basis.\u00a0\u201c\n  On different days you\u2019ll be interested in different ideas. Even on the same day, your energy fluctuates. Don\u2019t fight it, embrace it.\n Having variety means I don\u2019t have to wait for the mood that fits the book I\u2019m reading. I have something for every situation:\n I have lots of energy and want to dive into a complex topic that demands concentration.\n I want to ease my mind into sleep with a thick physical copy of a slow-paced biography.\n   If nothing on this list appeals to me, I know I\u2019m not in the mood for reading, so I do something else.\n   One of the fundamental practices in effective learning is spaced repetition. The concept is simple: you\u2019ll get much better results by studying one hour a day for ten days, compared to studying ten hours in a one day.\n Research is showing that this is especially true when it comes to long-term memory and retention. Since you\u2019re not reading to pass an exam, long-term retention is the ultimate goal.\n When you\u2019re reading one book at a time, your learning process looks something like this:\n  Where if you read multiple books (from multiple disciplines), it will look more like this:\n  You&#39;ll be reading each book over a longer period of time, which allows your brain to create stronger neural connections and wire the ideas into your long-term memory.\n  Interleaving in the context of learning is the practice of working on different types of problems at the same time. It allows the learner to see connections between different fields and thus deepen his overall learning.\n Knowledge is not a linear path where you go from A to B to C. Knowledge is an infinite network, and things are connected in ways that may not be obvious.\n  A game theory book can help you gain a deeper understanding of the cold war, and a marketing book can reveal how Hitler captivated an entire nation. And it\u2019s not one-way: the history book will deepen your understanding of the two other fields because you\u2019ve analyzed those real-life examples.\n Interleaving is effective because we\u2019re more likely to see those connections if we study the topics days apart and not years apart.\n  What I enjoy most about Naval\u2019s approach is that now, whenever I hear about an interesting book\u200a\u2014\u200aI can start it right away.\n No more putting it on my wishlist, buried with 200 other books until I forget why I got excited about it or who recommended it.\n When I get fired up about learning anything these days, I leverage my excitement and curiosity and just start.\n   If the book is getting a little boring, I\u2019ll skip ahead. Sometimes I\u2019ll start reading a book in the middle because some paragraph caught my eye and I\u2019ll just continue from there, and I feel no obligation whatsoever to finish the\u00a0book.\n  This mindshift is the hardest to accept, and I expect a lot of people to object it.\n Skipping chapters, starting books in the middle\u200a\u2014\u200athese things still make me uncomfortable. It almost feels like cheating.\n  And there\u2019s the fear of missing out\u200a\u2014\u200awhat if we skip a brilliant sentence? Or key information that\u2019s needed later on?\n This type of thinking can cost you precious time, something I recently experienced it with \u201c The Power of Neuroplasticity\u201d.\n  I bought this book as part of my recent deep dive into neuroscience. The beginning was slow, and it seemed more like a light self-help book than a serious book on neuroscience.\n As I contemplated quitting, I looked at the table of contents to get a glimpse of what\u2019s coming. Some of the later chapters had promising titles, especially chapter 26: \u201cMeditation, Neuroplasticity, and the Brain\u201d.\n  Once I suspected the value of the book, I should have skipped to chapter 26, thus giving it a chance to throw its best punch. If it was good, I could decide where to go from there. But if it wasn\u2019t, I would know that it\u2019s time to move on.\n    Realizing that I just read through 25 chapters just to comply with unwritten rules about how books should be read\u2026\n  I was finally ready to get rid of the last baggage holding me back\u200a\u2014\u200amy unquestioned faith in sequential reading.\n  If you read non-fiction, you\u2019ll run into many works like \u201cThe Power of Neuroplasticity\u201d\u200a\u2014\u200alow-effort books with a promising title that mostly repeat the same points.\n \u201cThe problem with books is that, to write a book, to publish a physical, dead tree book, takes a lot of work and effort and money. Sometimes people start wrapping long books around simple ideas. Those are probably my least favorite books. That\u2019s why I avoid the whole business and self-help category because you generally have one good idea and it\u2019s buried in hundreds or thousands of pages and lots of anecdotes.\u201d\n  Next time you suspect that a book fits this category, don\u2019t give it the benefit of the doubt. Look at the table of contents, choose a chapter, and let it give you its best shot.\n There are many incredible books you haven\u2019t read yet. Reading subpar content is an enormous waste.\n   Naval\u2019s approach of non-sequential reading is even more liberal than what I\u2019ve presented so far. Here\u2019s how he thinks about his huge library of books:\n \u201cI just view it as a blog archive. A blog might have 300 posts on it and you could read just the two, three, five that you need right now. I think you can think of a book the same\u00a0way.\u201d\n  This reminds me of the concept of \u201cjust in time\u201d versus \u201cjust in case\u201d, which comes from inventory management but can be applied to learning: read the book you need most right now, not the one that could be useful later.\n Naval just took it a step further: read the chapter you need most right now.\n  Some people will claim that this approach frames books as a commodity to be treated lightly.\n While I do think we need to make reading more fluid and loose (it should feel like play), I also believe the vast majority of value will come from a deep study of a few great books, and a great book is the furthest thing from a commodity.\n The thing is, you never know what they are in advance. You can\u2019t copy someone else\u2019s list. And this is a great gift because it gives you the joy of discovering for yourself.\n   Naval\u2019s approach is about making that journey more engaging and rewarding. Once you do come across a treasure chest, a life-changing book\u200a\u2014\u200athrow all of this out the window. Do whatever you can to absorb it.\n  \u201cYou skim very very quickly to find the ones that grab you, that are important and interesting for you, and then you stick to those and go really deep. There\u2019s exploration, and there\u2019s exploitation. So you explore a lot of books until you decide that there\u2019s something there to exploit.\u201d\n   After following this approach for a year, if I had to distill the benefits into 3 bullet points:\n You\u2019ll be reading more because you\u2019ll always have something that you want to read.\n You\u2019ll be more engaged with what you read, leading to more enjoyment and better retention.\n You\u2019ll get more value per word because you\u2019ll skip the unnecessary fluff and drop mediocre books early.\n If you got this far in this essay, you care enough about books that I\u2019m comfortable assuming you plan to read them for the rest of your life.\n      If you\u2019ve enjoyed this essay\u200a\u2014\u200ayou can help others find it by using the Medium clap button. It makes a big difference. \u2764\ufe0f\n If you want to see more of my writing, follow me on  Medium and\u00a0 Twitter.", "posttime": "2020-07-04 08:22:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96f7\u4e01,reading,\u9605\u8bfb", "title": "\u6211\u6240\u77e5\u9053\u7684\u5173\u4e8e\u96f7\u4e01\u7684\u4e00\u5207\u90fd\u662f\u9519\u7684", "title_en": "Everything I Knew about Reading was Wrong", "transed": 1, "url": "https://hackernoon.com/everything-i-knew-about-reading-was-wrong-bde7e57fbfdc", "via": "", "real_tags": ["\u96f7\u4e01", "reading", "\u9605\u8bfb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009749, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7406\u89e3\u6bd4\u7279\u5e01\u7684\u57fa\u672c\u6784\u5efa\u5757(\ud83d\ude09)\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u671b\u800c\u5374\u6b65\u3002\u5982\u679c\u4e0d\u77e5\u9053\u6240\u6709\u4e1c\u897f\u662f\u5982\u4f55\u7ec4\u5408\u5728\u4e00\u8d77\u7684\uff0c\u6211\u53d1\u73b0\u5f88\u96be\u6709\u610f\u4e49\u5730\u7406\u89e3\u4e00\u4e2a\u7cfb\u7edf\u3002\n\u5b8c\u6210\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4e00\u4e2a\u597d\u65b9\u6cd5\u662f\u5236\u5b9a\u4e00\u5957\u7cfb\u7edf\u8fd0\u884c\u7684\u8fc7\u7a0b\uff0c\u5c3d\u7ba1\u8fd9\u662f\u5f88\u521d\u7ea7\u7684\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u672c\u6307\u5357\u7684\u76ee\u7684\u662f\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u7801\u7247\u6bb5\u6765\u89e3\u91ca\u6bd4\u7279\u5e01\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u6ce8\uff1a\u76ee\u7684\u4e0d\u662f\u521b\u5efa\u6bd4\u7279\u5e01\u534f\u8bae\u7684\u771f\u6b63\u5b9e\u73b0\u3002\u5b83\u7684\u76ee\u7684\u4e5f\u4e0d\u662f\u89e3\u91ca\u6bcf\u4e00\u4e2a\u6982\u5ff5\u3002\u5982\u679c\u60a8\u53d1\u73b0\u4e00\u4e2a\u6982\u5ff5\u9700\u8981\u6d4f\u89c8\uff0c\u8bf7\u67e5\u627e\u5d4c\u5165\u7684\u94fe\u63a5\u3002\n\u5e0c\u671b\u5728\u672c\u7cfb\u5217\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u6709\u4e00\u4e2a\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8fd0\u884c\u7684\u7c7b\u4f3c\u6bd4\u7279\u5e01\u7684\u534f\u8bae\u3002\n\u8ba9keypair=crypto\uff1a\uff1aKeyPair\uff1a\uff1aNew()\uff1b\u8ba9keypair2=crypto\uff1a\uff1aKeyPair\uff1a\uff1aNew()\uff1b\u8ba9tx1=create_sign_tx(&amp\uff1bkeypair\uff0ckeypair2.public_key\uff0c123)\uff1b\u8ba9tx2=create_sign_tx(&amp\uff1bkeypair2\uff0ckeypair.public_key\uff0c75)\uff1b\u8ba9txs=vec\uff01[TX1\uff0cTX2]\uff1b\u8ba9PROVED_BLOCK=BLOCK\u3002\u8bbeblock=proposed_block.mine(3)\uff1b//\u96be\u5ea63\uff0c\u5373hash\u5fc5\u987b\u4ee5&#34\uff1b000&#34\uff1bprintln\uff01(&#34\uff1b\u6316\u6398\u5757\uff1a{\uff1a#\uff1f}&#34\uff1b\uff0cblock)\uff1b\n\u9700\u8981\u5bc6\u94a5\u4f5c\u4e3a\u5b9e\u73b0\u6240\u6709\u6743\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6d88\u8d39\u4e00\u5b9a\u6570\u91cf\u7684\u6bd4\u7279\u5e01\u9700\u8981\u6709\u94a5\u5319\u3002\n\u4f60\u7684\u94a5\u5319\u5b9e\u9645\u4e0a\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u79c1\u94a5\u548c\u516c\u94a5\u3002\u516c\u94a5\u53ef\u4ee5\u4e0e\u4e16\u754c\u5171\u4eab\uff0c\u5e76\u7528\u4e8e\u63a5\u6536\u6bd4\u7279\u5e01\uff0c\u800c\u79c1\u94a5\u662f\u60a8\u4fdd\u6301\u5b89\u5168\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u6765\u82b1\u8d39\u60a8\u7684\u6bd4\u7279\u5e01\u3002\u6709\u5173\u516c\u94a5\u5bc6\u7801\u672f\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5728\u6bd4\u7279\u5e01\u4e2d\uff0c\u692d\u5706\u66f2\u7ebf\u7528\u4e8e\u516c\u94a5\u52a0\u5bc6-\u5177\u4f53\u5730\u8bf4\u662fsecp256k1\u3002\u5728Esense\u4e2d\uff0c\u4f7f\u7528(Psuedo)\u968f\u673a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u5bf9\u5bc6\u94a5\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u7528\u6237\u7684\u94b1\u5305\u3002\n\u8ba9mut rand=rand\uff1a\uff1aOsRng\uff1a\uff1anew().unwire()\uff1b\u8ba9SECP=Secp256k1\uff1a\uff1anew()\uff1blet(private_key\uff0cpublic_key)=secp.Generate_keypair(&amp\uff1bmut rand)\uff1bKeyPair{SECP\uff0cpublic_key\uff0cprivate_key\uff0c}\u3002\n\u4ea4\u6613\u662f\u6bd4\u7279\u5e01\u7cfb\u7edf\u4e2d\u6700\u5c0f\u7684\u5355\u4f4d\u3002\u4ea4\u6613\u662f\u5bf9\u4eceA\u5230B\u7684x\u4e2a\u6bd4\u7279\u5e01\u7684\u652f\u4ed8\u8fdb\u884c\u7f16\u7801\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u90a3\u4e48\uff0c\u662f\u4ec0\u4e48\u963b\u6b62\u4e86\u4efb\u4f55\u4eba\u4ee3\u8868\u4ed6\u4eba\u8fdb\u884c\u8f6c\u79fb\u5462\uff1f\u516c\u94a5\u5bc6\u7801\u672f\u3002\u8981\u6210\u4e3a\u6709\u6548\u7684\u4ea4\u6613\u5e76\u88ab\u5176\u4ed6\u4eba\u63a5\u53d7\u8fdb\u5165\u7f51\u7edc\uff0c\u4ea4\u6613\u9700\u8981\u7528`from`\u516c\u94a5\u8fdb\u884c&#34\uff1b\u7b7e\u540d&#34\uff1b\u3002\n\u5b9e\u65bd\u5bc6\u94a5\u5bf9{pub FN sign(&amp\uff1bself\uff0cmessage\uff1a&amp\uff1b[U8])-&gt\uff1b\u7b7e\u540d{.\u3002self.secp.sign(&amp\uff1bMessage\uff0c&amp\uff1bself.private_key)\uff1b}}\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u79c1\u94a5\u5bf9\u591a\u4e2a\u6bd4\u7279\u5e01\u8fdb\u884c\u63a7\u5236\u3002A&#39\uff1b\u7684\u79c1\u94a5\u7528\u4e8e\u7b7e\u7f72\u4ea4\u6613\uff0c\u8fd9\u6837\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u9a8c\u8bc1\u4eceA\u5230B\u7684\u4ea4\u6613\u5b9e\u9645\u4e0a\u662f\u7531A\u6388\u6743\u7684\u3002\n\u8ba9tx=Transaction\uff1a\uff1aTransaction{From\uff1akeypair.public_key\uff0cTo\uff0cAmount\uff0c}\uff1b\u8ba9sig=keypair.sign(&amp\uff1btx.hash())\uff1bReturn Transaction\uff1a\uff1aSignedTransaction{Transaction\uff1atx\uff0csig\uff1asig.to_string()\uff0c}\uff1b\n\u5757\u662f\u4e8b\u52a1\u7684\u96c6\u5408\u3002\u8fd9\u4e9b\u4ea4\u6613\u5e94\u8be5\u7b7e\u5b57\uff0c\u56e0\u6b64\u662f\u6709\u6548\u7684\u3002\n\u8ba9TX1=CREATE_SIGNED_TX(&amp\uff1bkeypair\uff0ckeypair2.public_key\uff0c123)\uff1b\u8ba9TX2=CREATE_SIGNED_TX(&amp\uff1bkeypair2\uff0ckeypair.public_key\uff0c75)\uff1b\u8ba9txs=vec\uff01[TX1\uff0cTX2]\uff1b\u8ba9PROVED_BLOCK=BLOCK\uff1a\uff1aProposedBlock{Transaction\uff1atxs\uff0c}\uff1b\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e0a\uff0c\u552f\u4e00\u53ef\u4ee5\u8de8\u5757\u590d\u5236\u7684\u6570\u636e\u3002\u8be5\u5757\u7684\u76ee\u7684\u662f\u6709\u6548\u5730\u5c06\u5176\u5305\u542b\u7684\u4e8b\u52a1\u5199\u5165\u5386\u53f2\u3002\u5b83\u901a\u8fc7\u91c7\u77ff\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u6316\u6398\u7684\u8fc7\u7a0b\u5c31\u662f\u505a\u4e00\u4e2a\u8ba1\u7b97\uff0c\u4ee5\u786e\u4fdd\u6709\u4e00\u4e9b\u4e1c\u897f\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u77ff\u5de5\u5fc5\u987b\u8bc1\u660e\u4ed6\u4eec\u505a\u4e86\u4e00\u4e9b\u5de5\u4f5c--\u5de5\u4f5c\u8bc1\u660e\u3002\n\u5982\u679c\u6563\u5217\u4ee5\u7279\u5b9a\u6570\u91cf\u76840\u5f00\u59cb\uff0c\u5219POW\u5c31\u8db3\u591f\u4e86\u3002\u6240\u9700\u76840\u5206\u79f0\u4e3a\u96be\u5ea6\u3002\u96be\u5ea6\u8d8a\u5927-\u9700\u8981\u76840\u8d8a\u591a\u3002\n\u8ba9mut\u968f\u673a\u6570\uff1au32=0\uff1b\u8ba9mut BLOCK_HASH\uff1aSTRING=String\uff1a\uff1aNEW()\uff1b\u8ba9BLOCK_STRING=self.Serialize()\uff1b\u800c\uff01block_hash.starts_with(&amp\uff1b&#34\uff1b0&#34\uff1b.repeat(difficulty)){LET BLOCK=FORMAT\uff01(&#34\uff1b{}{}&#34\uff1b\uff0cBLOCK_STRING\uff0cNONCE)\uff1bBLOCK_HASH=\u5341\u516d\u8fdb\u5236\uff1a\uff1aEncode(Crypto\uff1a\uff1asha256(block.clone()\uff1bNONCE+=1\uff1b}\u8fd4\u56de\u5757{hash\uff1ablock_hash\uff0cNonce\uff0cTransaction\uff1aself.Transaction}\u3002\n\u4f60\u73b0\u5728\u5e94\u8be5\u6709\u5e0c\u671b\u770b\u5230\u8fd9\u4e00\u5207\u662f\u5982\u4f55\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u3002\u6982\u62ec\u4e00\u4e0b\u6700\u521d\u4ecb\u7ecd\u7684\u9ad8\u7ea7\u4ee3\u7801\uff1a\n\u6700\u540e\uff0c\u8fd0\u884c\u6b64\u7a0b\u5e8f\u5c06\u751f\u6210\u4e00\u4e2a\u5305\u542b\u7b7e\u540d\u4e8b\u52a1\u7684\u5757\u3002\u8bb0\u4e0b\u6563\u5217\u3002\u5b83\u4ee5&#34\uff1b000&#34\uff1b\u5f00\u5934\uff0c\u56e0\u6b64\u5f53\u96be\u5ea6\u8bbe\u7f6e\u4e3a3\u65f6\uff0c\u5b83\u662f\u6709\u6548\u7684\u5757\u3002\n\u6316\u6398\u5757\uff1a\u5757{HASH\uff1a&#34\uff1b000cc7b72695c1ab8b7969cb400f73d763bce1cafa866b0aab59fe762eb7fbed&#34\uff1b\uff0cNonce\uff1a96\uff0c\u4e8b\u52a1\uff1a[\u7b7e\u540d\u4e8b\u52a1{Transaction{From\uff1aPublicKey(bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324\uff0c)\uff0cTo\uff1aPublicKey(c1c6bd81ff1a657ae4053149682502c749fbc4b638e047d36c4bdf637ebcd0e93d0f987638c248c099deef8ec76199c1818f3b387e232a2d8da5de5ca91cf13b\uff0c)\uff0cAmount\uff1a123\uff0c}\uff0csig\uff1a&#34\uff1b304402206fb0e6ab4a6acfcc0725f048c7fbfed734accc0a4bad864ac161302410ed3f94022035ef86194f8de575658b7e4b3bae2aee193c507d78fe8ba4e43e22bce948271a&#34\uff1b\uff0c}\uff0cSignedTransaction{Transaction\uff1aTransaction{From\uff1aPublicKey(c1c6bd81ff1a657ae4053149682502c749fbc4b638e047d36c4bdf637ebcd0e93d0f987638c248c099deef8ec76199c1818f3b387e232a2d8da5de5ca91cf13b\uff0c)\uff0cTo\uff1aPublicKey(bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324\uff0c)\uff0cAmount\uff1a75\uff0c}\uff0cSignedTransaction{Transaction{From\uff1aPublicKey(bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324\uff0c)\uff0cAmount\uff1a75\uff0c}\uff0cSignedTransaction{Transaction{From\uff1aPublicKey(bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324\uff0c)\uff0cAmount\uff1a75\uff0c}\uff0cSignedTransaction\uff1a&#34\uff1b30440220752b3ea25bd2ab2b29d44659af665caddd7ce9b54144c41e6adcdfde7ef807fa022066682bdb49666a91fd28e14c05cf8229d668c061f404f218bb62619e4604eb59&#34\uff1b\uff0c}\uff0c]\uff0c}", "note_en": "Understanding the fundamental building blocks(\ud83d\ude09) of Bitcoin can be daunting for some developers. I find it difficult to meaningfully understand a system without knowing how everything fits together.\n  A good way to go through this process is to lay down, however rudimentary, a set of processes by which the system operates. Hence the purpose of this guide is to explain through simple pieces of code, how Bitcoin works.\n  Note: The intention is not to create a real implementation of the Bitcoin protocol. It also does not aim to explain every concept. Look for the embedded links if you find a concept you need to go over.\n  Hopefully by the end of this series, we should have a bitcoin-like protocol anyone can run.\n      let keypair = crypto::KeyPair::new();let keypair2 = crypto::KeyPair::new();let tx1 = create_signed_tx(&amp;keypair, keypair2.public_key, 123);let tx2 = create_signed_tx(&amp;keypair2, keypair.public_key, 75);let txs = vec![tx1, tx2];let proposed_block = block::ProposedBlock { transactions: txs,};println!(&#34;Mining block with {} txs.&#34;, proposed_block.transactions.len());let block = proposed_block.mine(3); // Difficulty 3 i.e. hash must begin with &#34;000&#34;println!(&#34;Mined block: {:#?}&#34;, block);\n        Keys are required as a means to achieve ownership. In other words, you need to have the key to spend a certain amount of bitcoin.\n    Your keys actually consist of 2 parts. The private key and the public key. The public key can be shared with the world and is used to receive bitcoin, whereas the private key is something you keep secure as it can be used to spend your bitcoin.  More on public key cryptography.\n    In bitcoin,  eliptic curves are used for public key cryptography - specifically secp256k1. In essense, using a (psuedo)random number we can generate a pair of keys that can be thought of as a user&#39;s wallet.\n  let mut rand = rand::OsRng::new().unwrap();let secp = Secp256k1::new();let (private_key, public_key) = secp.generate_keypair(&amp;mut rand);KeyPair { secp, public_key, private_key,}\n    Transactions are the smallest unit of the Bitcoin system. A transaction is a data structure which encodes a payment of x bitcoins from a to b.\n      What then prevents anyone from transferring on behalf of others? Public key cryptography. To be a valid transaction and be accepted into the network by others, the transaction needs to be &#34;Signed&#34; by the `from` public key.\n  impl KeyPair { pub fn sign(&amp;self, message: &amp;[u8]) -&gt; Signature { ... self.secp.sign(&amp;message, &amp;self.private_key); }}\n    As mentioned previously, private keys exercise control over a number of bitcoins. A&#39;s private key is used to sign a transaction so that anyone can verify that the transaction from A to B was in fact authorised by A.\n  let tx = transaction::Transaction { from: keypair.public_key, to, amount,};let sig = keypair.sign(&amp;tx.hash());return transaction::SignedTransaction{ transaction: tx, sig: sig.to_string(),};\n    A block is a collection of transactions. These transactions should be signed and therefore valid.\n  let tx1 = create_signed_tx(&amp;keypair, keypair2.public_key, 123);let tx2 = create_signed_tx(&amp;keypair2, keypair.public_key, 75);let txs = vec![tx1, tx2];let proposed_block = block::ProposedBlock { transactions: txs,};\n  In fact, on the bitcoin network, the only data which is replicated across are the blocks. The purpose of the block is to effectively write it&#39;s containing transactions into history. It achieves this by mining.\n    The process of  mining is to do a computation to ensure that there is something at stake. In other words, the miner has to prove they have done some work -  &#34;Proof of Work&#34;\n      The PoW is suffice if the hash begins with a certain number of 0s. The number of 0s required is called  difficulty. The more difficulty - the more 0s are required.\n  let mut nonce: u32 = 0;let mut block_hash: String = String::new();let block_string = self.serialize();while !block_hash.starts_with(&amp;&#34;0&#34;.repeat(difficulty)) { let block = format!(&#34;{}{}&#34;, block_string, nonce); block_hash = hex::encode(crypto::sha256(block.clone())); nonce += 1;}return Block { hash: block_hash, nonce, transactions: self.transactions}\n  You should hopefully now see how this all fits together. To recap the high level code  initially presented:\n    Finally running this program will produce a block including the signed transactions. Take note of the hash. It begins with &#34;000&#34;, therefore it is a valid block when difficulty is set to 3.\n  Mining block with 2 txs.Mined block: Block { hash: &#34;000cc7b72695c1ab8b7969cb400f73d763bce1cafa866b0aab59fe762eb7fbed&#34;, nonce: 96, transactions: [ SignedTransaction { transaction: Transaction { from: PublicKey( bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324, ), to: PublicKey( c1c6bd81ff1a657ae4053149682502c749fbc4b638e047d36c4bdf637ebcd0e93d0f987638c248c099deef8ec76199c1818f3b387e232a2d8da5de5ca91cf13b, ), amount: 123, }, sig: &#34;304402206fb0e6ab4a6acfcc0725f048c7fbfed734accc0a4bad864ac161302410ed3f94022035ef86194f8de575658b7e4b3bae2aee193c507d78fe8ba4e43e22bce948271a&#34;, }, SignedTransaction { transaction: Transaction { from: PublicKey( c1c6bd81ff1a657ae4053149682502c749fbc4b638e047d36c4bdf637ebcd0e93d0f987638c248c099deef8ec76199c1818f3b387e232a2d8da5de5ca91cf13b, ), to: PublicKey( bf9d4f6c8142956ac683f73ef009369b43aec7d765e18c6ac3b48341bf14ebd9e0a06bec8897e392725dae273eaa51400320130cba64143e61c1f61b3bc4f324, ), amount: 75, }, sig: &#34;30440220752b3ea25bd2ab2b29d44659af665caddd7ce9b54144c41e6adcdfde7ef807fa022066682bdb49666a91fd28e14c05cf8229d668c061f404f218bb62619e4604eb59&#34;, }, ],}", "posttime": "2020-07-04 07:44:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bd4\u7279\u5e01,\u4ece\u65e0\u5230\u6709,scratch,block", "title": "\u6bd4\u7279\u5e01\u4ece\u65e0\u5230\u6709--\u7b2c1\u90e8\u5206", "title_en": "Bitcoin From Scratch \u2013 Part 1", "transed": 1, "url": "https://monokh.com/posts/bitcoin-from-scratch-part-1", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "\u4ece\u65e0\u5230\u6709", "scratch", "block"]}, {"category": "", "categoryclass": "", "imagename": "e1586bc5912a61dcc0e60e2cd79f9749.jpeg", "infoid": 1009747, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5176ConnectedDrive\u5546\u5e97\u7684\u6269\u5c55\u4e2d\uff0c\u5b9d\u9a6c\u5e0c\u671b\u8ba9\u8f66\u4e3b\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7\u8ba2\u9605(\u901a\u8fc7Autoblog)\u8bbf\u95ee\u7279\u5b9a\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u529f\u80fd\u3002\u5b9d\u9a6c\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u8fd9\u9879\u670d\u52a1\u5c06\u5982\u4f55\u8fd0\u4f5c\uff0c\u4f46\u7b80\u77ed\u7684\u8bf4\u6cd5\u662f\uff0c\u5b9d\u9a6c\u5c06\u63d0\u4f9b\u7cbe\u9009\u7684\u9a7e\u9a76\u5458\u8f85\u52a9\u548c\u8212\u9002\u6027\u529f\u80fd\uff0c\u4ee5\u6362\u53d6\u91cd\u590d\u6536\u53d6\u7684\u8d39\u7528\u3002\u6c7d\u8f66\u5236\u9020\u5546\u60f3\u8981\u8d5a\u94b1\u7684\u6240\u6709\u529f\u80fd\u5728\u4f60\u4e70\u8f66\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5185\u7f6e\u5728\u8f66\u91cc\u4e86\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8be5\u516c\u53f8\u7684ConnectedDrive\u5546\u5e97\u4ed8\u6b3e\u3002\n\u5728\u5b9d\u9a6c\u770b\u6765\uff0c\u8ba9\u4e00\u4e9b\u786c\u4ef6\u548c\u8f6f\u4ef6\u7ec4\u4ef6\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4ee5\u6362\u53d6\u53ef\u9009\u7684\u8d39\u7528\uff0c\u8fd9\u7ed9\u4e86\u5ba2\u6237\u8d22\u52a1\u7075\u6d3b\u6027\u3002\u6bd4\u65b9\u8bf4\u4f60\u4e70\u4e86\u4e00\u4e2a\u6709\u52a0\u70ed\u5ea7\u6905\u7684\u6a21\u578b\u3002\u4f60\u53ea\u80fd\u5728\u4e00\u5e74\u4e2d\u5bd2\u51b7\u7684\u6708\u4efd\u652f\u4ed8\u8fd9\u9879\u529f\u80fd\u7684\u8d39\u7528\u3002\u540c\u6837\uff0c\u5982\u679c\u4f60\u540e\u6765\u628a\u5b9d\u9a6c\u5356\u7ed9\u522b\u4eba\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5b9a\u5236\u6c7d\u8f66\uff0c\u53ea\u5305\u62ec\u4ed6\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u5f53\u7136\uff0c\u4e0d\u592a\u4ec1\u6148\u7684\u65b9\u5f0f\u6765\u6846\u5b9a\u6574\u4e2a\u60f3\u6cd5\u662f\uff0c\u5b9d\u9a6c\u60f3\u8981\u5728\u5176\u5df2\u7ecf\u5f88\u6602\u8d35\u7684\u6c7d\u8f66\u4e0a\u8d5a\u66f4\u591a\u7684\u94b1\u3002\u5373\u4f7f\u662f\u5b83\u7684\u4e00\u6b3e\u66f4\u5b9e\u60e0\u7684\u8f66\u578b\u4e5f\u4f1a\u82b1\u6389\u4f60\u5927\u7ea63.6\u4e07\u7f8e\u5143\u3002\u4e5f\u8bb8\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u8fd9\u662f\u5927\u591a\u6570\u4eba\u4e0d\u613f\u610f\u4e3a\u4ed6\u4eec\u7684\u6c7d\u8f66\u5df2\u7ecf\u5305\u542b\u7684\u529f\u80fd\u652f\u4ed8\u6708\u8d39\u7684\u4ef7\u683c\u3002\n\u5f88\u5bb9\u6613\u770b\u51fa\u4e3a\u4ec0\u4e48\u50cf\u8fd9\u6837\u7684\u670d\u52a1\u4f1a\u5438\u5f15\u6c7d\u8f66\u5236\u9020\u5546\u3002\u5b83\u5c06\u5141\u8bb8\u5b9d\u9a6c\u7ee7\u7eed\u5728\u5df2\u7ecf\u8fdb\u5165\u4e8c\u624b\u8f66\u5e02\u573a\u7684\u6c7d\u8f66\u4e0a\u8d5a\u94b1\u3002\u6b64\u5916\uff0c\u8fd9\u5e76\u4e0d\u662f\u8be5\u516c\u53f8\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u8fd9\u6837\u7684\u4e8b\u60c5\u30022019\u5e74\uff0c\u5b9d\u9a6c\u63a8\u51fa\u4e86\u6bcf\u5e7480\u7f8e\u5143\u7684\u8d39\u7528\uff0c\u4f9b\u4eba\u4eec\u5728\u5176\u6c7d\u8f66\u4e2d\u4f7f\u7528Apple CarPlay\u3002\u5728\u5b9d\u9a6c\u8f66\u4e3b\u6295\u8bc9\u540e\uff0c\u8be5\u516c\u53f8\u540e\u6765\u53d6\u6d88\u4e86\u8ba2\u9605\u3002\n\u8be5\u8ba1\u5212\u4e5f\u7b26\u5408\u6c7d\u8f66\u5236\u9020\u5546\u8bd5\u56fe\u8d85\u8d8a\u4e00\u6b21\u6027\u8d2d\u4e70\u7684\u66f4\u5e7f\u6cdb\u8d8b\u52bf\u3002\u51ef\u8fea\u62c9\u514b(Cadillac)\u548c\u4fdd\u65f6\u6377(Porsche)\u7b49\u516c\u53f8\u5df2\u7ecf\u8bd5\u9a8c\u4e86\u5141\u8bb8\u4eba\u4eec\u6309\u9700\u66f4\u6362\u6c7d\u8f66\u7684\u8ba2\u9605\u670d\u52a1\u3002\u4f46\u5b9d\u9a6c\u6700\u8fd1\u5bf9\u8fd9\u6b3e\u8f66\u578b\u7684\u91c7\u7528\u4f3c\u4e4e\u4ee4\u4eba\u4e0d\u5feb\uff0c\u800c\u8fd9\u4e9b\u670d\u52a1\u5e76\u975e\u5982\u6b64\u3002", "note_en": "In an  expansion of its ConnectedDrive Store, BMW wants to give owners of its cars the option to access specific hardware and software features through a subscription (via   Autoblog). BMW hasn&#39;t detailed exactly how the service will work, but the short version is that the automaker would offer select driver-assistance and comfort features in exchange for a reoccurring fee. All of the features the automaker wants to monetize would already be built into the car when you buy it, and you would pay for them through the company&#39;s ConnectedDrive Store.\n The way BMW sees it, making some hardware and software components accessible in exchange for an optional fee gives its customers financial flexibility. Say you buy a model with heated seats. You could pay for that feature only during the cold months of the year. Similarly, if you later sell your BMW to someone, they can customize the car to include only the things they want.\n  Of course, the less charitable way to frame the entire idea is that BMW wants to make more money on its already expensive cars. Even one of its more affordable models will set you back about\u00a0 $36,000. It&#39;s probably safe to say that&#39;s a price at which most people don&#39;t want to pay a monthly fee for features their car already includes.\n It&#39;s easy to see why a service like this would be appealing to an automaker. It will allow BMW to continue making money on cars that have entered the used market. Moreover, this isn&#39;t the first time the company has tried something like this. In 2019, BMW\u00a0 introduced\u00a0an $80 per year fee for people to use Apple CarPlay in its cars. The company later scrapped the subscription after BMW owners complained about it.\n The plan also fits into a broader trend of automakers trying to move beyond one-time purchases. Companies like  Cadillac and  Porsche\u00a0have experimented with subscriptions that allow people to swap cars on demand. But BMW\u2019s latest take on the model seems unsavory in a way those services did not.", "posttime": "2020-07-04 07:43:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e0c\u671b,sell,\u5b9d\u9a6c", "title": "\u5b9d\u9a6c\u5e0c\u671b\u51fa\u552e\u8f66\u8f7d\u529f\u80fd\u7684\u8ba2\u9605", "title_en": "BMW wants to sell subscriptions to in-car features", "transed": 1, "url": "https://www.engadget.com/bmw-connected-drive-store-subscriptions-193746962.html", "via": "", "real_tags": ["\u5e0c\u671b", "sell", "\u5b9d\u9a6c"]}, {"category": "", "categoryclass": "", "imagename": "5138ba034dfa3368bb234bca1aff1001.jpg", "infoid": 1009746, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u5728\u77ed\u77ed\u51e0\u4e2a\u6708\u524d\uff0c\u5bf9\u4e8e\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u65e5\u5e38\u5de5\u4f5c\u5305\u62ec\u53bb\u529e\u516c\u5ba4\u64cd\u4f5c\u516c\u53f8\u7684\u8ba1\u7b97\u673a\uff0c\u6216\u8005\u76f4\u63a5\u5c06\u7b14\u8bb0\u672c\u7535\u8111\u63d2\u5165\u516c\u53f8\u7f51\u7edc\u3002\u6709\u65f6\uff0c\u6211\u4eec\u5728\u8fdc\u7a0b\u5de5\u4f5c\u65f6\u9700\u8981\u7279\u6b8a\u7684\u7f51\u7edc\u8bbf\u95ee\u6743\u9650\uff0c\u65e0\u8bba\u662f\u901a\u8fc7VPN\u8fd8\u662f\u4f7f\u7528\u4f17\u591a\u8fdc\u7a0b\u8fde\u63a5\u5de5\u5177\u4e2d\u7684\u4e00\u79cd\u3002\n\u4f46\u4f17\u6240\u5468\u77e5\uff0c\u6211\u4eec\u73b0\u5728\u6b63\u5904\u4e8e\u540e\u65b0\u51a0\u80ba\u708e\u65f6\u4ee3\u7684\u201c\u65b0\u5e38\u6001\u201d\uff0c\u8bb8\u591a\u4eba\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728\u5bb6\u91cc\u5b8c\u6210\u7684\u3002Check Point\u4e5f\u4e0d\u4f8b\u5916\u3002\n\u5c06\u6211\u4eec\u76845000\u591a\u540d\u5458\u5de5\u8f6c\u79fb\u5230\u8fdc\u7a0b\u5de5\u4f5c\u7684\u521d\u6b65\u51c6\u5907\u5de5\u4f5c\u59cb\u4e8e2020\u5e742\u6708\u4e2d\u65ec\uff0c\u5728\u75c5\u6bd2\u5f00\u59cb\u5728\u5168\u7403\u4f20\u64ad\u7684\u65e9\u671f\u8ff9\u8c61\u671f\u95f4\u3002Check Point\u52a0\u62ff\u5927\u5206\u90e8\u7684CISO Jonathan Fischbein\u89e3\u91ca\u8bf4\uff0c\u5728\u8fd9\u4e2a\u51c6\u5907\u8fc7\u7a0b\u4e2d\uff0c\u7b2c\u4e00\u6b65\u662f\u91cd\u65b0\u8bc4\u4f30\u65e8\u5728\u5141\u8bb8\u5458\u5de5\u5b89\u5168\u3001\u540c\u65f6\u3001\u65e0\u7f1d\u5730\u5c06\u4ed6\u4eec\u8fdc\u7a0b\u8fde\u63a5\u5230\u516c\u53f8\u7f51\u7edc\u7684IT\u89e3\u51b3\u65b9\u6848\u3002\u91cd\u8981\u7684\u662f\uff0c\u542f\u7528\u5927\u89c4\u6a21\u8fdc\u7a0b\u5de5\u4f5c\u4e0d\u4f1a\u5f15\u5165\u4efb\u4f55\u65b0\u7684\u6f0f\u6d1e\uff0c\u4e5f\u4e0d\u4f1a\u589e\u52a0Check Point\u7684\u6574\u4f53\u7f51\u7edc\u653b\u51fb\u9762\u3002\nFischbein\u8bf4\uff1a\u201c\u6211\u4eec\u9009\u62e9\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u8fdc\u7a0b\u8bbf\u95ee\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64\u5728\u5176\u4e2d\u4e00\u4e2a\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u6709\u5197\u4f59\u548c\u66ff\u4ee3\u65b9\u6848\u6765\u7ee7\u7eed\u5de5\u4f5c\uff0c\u5176\u4e2d\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u57fa\u4e8e\u5f00\u6e90Apache Guacamole\uff0c\u8fd9\u662f\u4e00\u6b3e\u6d41\u884c\u7684\u65e0\u5ba2\u6237\u7aef\u8fdc\u7a0b\u684c\u9762\u7f51\u5173\uff0c\u652f\u6301VNC\u3001RDP\u548cSSH\u7b49\u6807\u51c6\u534f\u8bae\uff0c\u4ee5\u53caMFA(\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1)\u3001\u81ea\u5e26\u8bbe\u5907\u7aef\u7684\u5408\u89c4\u6027\u68c0\u67e5\uff0c\u4ee5\u53caIPS\u3001SOC\u5f02\u5e38\u68c0\u6d4b\u7b49\u591a\u79cd\u5b89\u5168\u63a7\u5236\u3002\n\u201c\u7136\u800c\uff0c\u89e3\u51b3\u65b9\u6848\u4e2d\u6211\u5e76\u4e0d\u786e\u5b9a\u7684\u5173\u952e\u90e8\u5206\u662f\u5f00\u6e90\u7684\u74dc\u5361\u83ab\u5c14\u670d\u52a1\u5668(Guacamole Server)\u3002\u6211\u9700\u8981\u786e\u4fdd\u8fd9\u4e2a\u5f00\u653e\u6e90\u7801\u89e3\u51b3\u65b9\u6848\u7684\u5b89\u5168\u6027\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u5b89\u5168\u8981\u6c42\u548c\u6807\u51c6\uff0c\u540c\u65f6\u4f7f\u5458\u5de5\u80fd\u591f\u6709\u6548\u5730\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u63a8\u51fa\u89e3\u51b3\u65b9\u6848\u4e4b\u524d\uff0c\u6211\u4eec\u5f00\u59cb\u8c03\u67e5\u5176\u5b89\u5168\u6027\u3002\u201c\u3002\n\u867d\u7136Apache Guacamole\u5f88\u53d7\u6b22\u8fce\uff0c\u5176docker\u5728\u5168\u7403\u7684\u4e0b\u8f7d\u91cf\u8d85\u8fc71000\u4e07\u6b21\uff0c\u4f46Check Point\u7684\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0cGuacamole\u7684\u4e00\u4e9b\u6210\u5206\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u5b89\u5168\u6807\u51c6\u3002\u7279\u522b\u662f\uff0c\u5b83\u88ab\u8ba4\u4e3a\u5bb9\u6613\u53d7\u5230\u51e0\u4e2a\u5173\u952e\u7684\u53cd\u5411RDP\u6f0f\u6d1e\u7684\u653b\u51fb\uff0c\u5e76\u53d7\u5230FreeRDP\u4e2d\u53d1\u73b0\u7684\u591a\u4e2a\u65b0\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002\u5c24\u5176\u662f\uff0c2020\u5e741\u6708\u4e4b\u524d\u53d1\u5e03\u7684\u6240\u6709\u7248\u672c\u7684Guacamole\u90fd\u5728\u4f7f\u7528\u6613\u53d7\u653b\u51fb\u7684FreeRDP\u7248\u672c\u3002\n\u8fd9\u4e9b\u6f0f\u6d1e\u5c06\u5141\u8bb8\u653b\u51fb\u8005\u6216\u4efb\u4f55\u6210\u529f\u4fb5\u5165\u7ec4\u7ec7\u5185\u90e8\u8ba1\u7b97\u673a\u7684\u5a01\u80c1\u884c\u4e3a\u8005\uff0c\u5728\u6beb\u65e0\u6212\u5907\u7684\u5458\u5de5\u8fde\u63a5\u5230\u53d7\u611f\u67d3\u7684\u8ba1\u7b97\u673a\u65f6\uff0c\u901a\u8fc7\u74dc\u5361\u83ab\u5c14\u7f51\u5173\u8fdb\u884c\u53cd\u51fb\u3002\u8fd9\u4f7f\u5f97\u6076\u610f\u653b\u51fb\u8005\u80fd\u591f\u5b9e\u73b0\u5bf9Guacamole\u7f51\u7edc\u670d\u52a1\u5668\u7684\u5b8c\u5168\u63a7\u5236\uff0c\u5e76\u62e6\u622a\u548c\u63a7\u5236\u6240\u6709\u5176\u4ed6\u8fde\u63a5\u7684\u4f1a\u8bdd\u3002\n\u53cd\u5411\u653b\u51fb\u573a\u666f\uff1a\u4f01\u4e1a\u7f51\u7edc\u5185\u7684\u53d7\u635f\u673a\u5668\u5c06\u5229\u7528\u4f20\u5165\u7684\u826f\u6027\u8fde\u63a5\uff0c\u5e76\u901a\u8fc7\u7f51\u5173\u8fdb\u884c\u53cd\u51fb\uff0c\u76ee\u6807\u662f\u63a5\u7ba1\u8be5\u8fde\u63a5\u3002\n\u6076\u610f\u5458\u5de5\u573a\u666f\uff1a\u6076\u610f\u5458\u5de5\u8fde\u540c\u4ed6\u5728\u7f51\u7edc\u4e2d\u7684\u6076\u610f\u8ba1\u7b97\u673a\u53ef\u4ee5\u5229\u7528\u4ed6\u5bf9\u8fde\u63a5\u4e24\u7aef\u7684\u63a7\u5236\u6765\u63a5\u7ba1\u7f51\u5173\u3002\n\u201c\u5728\u6211\u4eec\u7684\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u8be5\u6f0f\u6d1e\u5e76\u901a\u77e5\u6211\u548cApache\u56e2\u961f\u4e4b\u540e\uff0c\u201dFischbein\u8bf4\uff0c\u201c\u6211\u4eec\u5728\u6211\u4eec\u7684\u4e34\u65f6\u73af\u5883\u4e2d\u534f\u4f5c\u5e76\u6a21\u62df\u4e86\u4e00\u4e2aPOC\u6765\u5e94\u7528\u8865\u4e01\u3002\u5728\u53d1\u73b0\u548c\u6d4b\u8bd5\u540e\u768424\u5c0f\u65f6\u5185\uff0c\u6211\u4eec\u5b9e\u65bd\u4e86\u5b89\u5168\u4fee\u590d\uff0c\u6210\u4e3a\u7b2c\u4e00\u4e2a\u9488\u5bf9\u6b64\u5b89\u5168\u6f0f\u6d1e\u8fdb\u884c\u5b89\u5168\u4fdd\u62a4\u7684\u751f\u4ea7\u73af\u5883\uff0c\u4ece\u800c\u786e\u4fdd\u6211\u4eec\u7684\u5458\u5de5\u53ef\u4ee5\u5b89\u5168\u5730\u8fdc\u7a0b\u8fde\u63a5\u3002\u201c\u3002\n\u867d\u7136\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u8270\u96be\u65f6\u671f\uff0c\u5168\u7403\u5411\u8fdc\u7a0b\u5de5\u4f5c\u7684\u8fc7\u6e21\u662f\u5fc5\u8981\u7684\uff0c\u800c\u4e14\u968f\u7740\u6211\u4eec\u8fdb\u5165\u540e\u79d1\u7f57\u7eb3\u65f6\u4ee3\uff0c\u8fd9\u79cd\u8fc7\u6e21\u5c06\u7ee7\u7eed\u5b58\u5728\uff0c\u4f46\u6211\u4eec\u4e0d\u5e94\u5ffd\u89c6\u8fd9\u79cd\u8fdc\u7a0b\u8fde\u63a5\u7684\u5b89\u5168\u5f71\u54cd\u3002\u4f7f\u7528Apache Guacamole\u4f5c\u4e3a\u672c\u6b21\u7814\u7a76\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u80fd\u591f\u6210\u529f\u5730\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7ec4\u7ec7\u5185\u7684\u4e00\u53f0\u53d7\u635f\u8ba1\u7b97\u673a\u6765\u63a5\u7ba1\u7f51\u5173\uff0c\u8be5\u7f51\u5173\u8d1f\u8d23\u5904\u7406\u6240\u6709\u8fdb\u5165\u7f51\u7edc\u7684\u8fdc\u7a0b\u4f1a\u8bdd\u3002\u4e00\u65e6\u63a7\u5236\u4e86\u7f51\u5173\uff0c\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u7a83\u542c\u6240\u6709\u4f20\u5165\u7684\u4f1a\u8bdd\uff0c\u8bb0\u5f55\u6240\u6709\u62e5\u6709\u5176\u51ed\u636e\u7684\u7528\u6237\uff0c\u751a\u81f3\u53ef\u4ee5\u542f\u52a8\u65b0\u4f1a\u8bdd\u6765\u63a7\u5236\u7ec4\u7ec7\u5185\u7684\u5176\u4f59\u8ba1\u7b97\u673a\u3002\u5f53\u5927\u591a\u6570\u7ec4\u7ec7\u90fd\u5728\u8fdc\u7a0b\u5de5\u4f5c\u65f6\uff0c\u6b64\u7acb\u8db3\u70b9\u76f8\u5f53\u4e8e\u5bf9\u6574\u4e2a\u7ec4\u7ec7\u7f51\u7edc\u7684\u5b8c\u5168\u63a7\u5236\u3002\n\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u7ec4\u7ec7\u786e\u4fdd\u5176\u670d\u52a1\u5668\u662f\u6700\u65b0\u7684\uff0c\u5e76\u786e\u4fdd\u4ed6\u4eec\u7528\u4e8e\u8fdc\u7a0b\u5de5\u4f5c\u7684\u6280\u672f\u5b8c\u5168\u914d\u5907\u4e86\u963b\u6b62\u6b64\u7c7b\u653b\u51fb\u4f01\u56fe\u7684\u9002\u5f53\u6280\u672f\u3002", "note_en": "Just a few short months ago, for most of us the daily working routine involved going to the office and working on the corporate computers, or plugging our laptops directly into the corporate network. Once in a while, we\u2019d need special access to the network while working remotely, either via a VPN or using one of the many tools for remote connectivity.\n But as we all know, we\u2019re now in the \u2018new normal\u2019 post-Covid-19, with many doing the majority of their work from home. And Check Point is no exception.\n The initial preparation for transferring our 5000-plus employees to remote work began mid-February 2020, during the early signs that the virus was starting to spread globally.\u00a0 During this preparation process, explains Jonathan Fischbein, CISO at Check Point\u00a0\u00a0\u00a0\u00a0 , the first step was to reassess the IT solutions that were intended to allow employees to safely connect\u00a0\u00a0\u00a0\u00a0 \u00a0to the corporate network remotely, simultaneously and seamlessly. It was critical that enabling mass remote working did not introduce any new vulnerabilities or increase Check Point\u2019s overall network attack surface.\n \u201cWe chose two different remote access solutions, so in the event of one failing, we would have redundancy and an alternative to enable work to continue,\u201d says Fischbein, \u201cOne of the solutions was based on open-source Apache Guacamole, the popular clientless remote desktop gateway that supports standard protocols like VNC, RDP, and SSH, together with MFA (Multi Factor Authentication), compliance checks on the BYOD side, and several security controls like IPS, SOC anomaly detections and many more.\n \u201cHowever, the critical part \u00a0of the solution which I was not certain about was the open-\u00a0\u00a0\u00a0\u00a0 source Guacamole Server. I needed to make sure that this open source solution\u00a0\u00a0\u00a0\u00a0 \u00a0was secure enough to meet our security requirements and standards while enabling staff to work effectively. So before we rolled the solution out, we started to investigate its security..\u201d\n While Apache Guacamole is popular, with over 10 million of its  docker downloads worldwide, Check Point\u2019s researchers found that some of Guacamole\u2019s ingredients didn\u2019t meet the required security standards. In particular, it was\u00a0\u00a0\u00a0\u00a0 \u00a0vulnerable to several critical  Reverse RDP Vulnerabilities, and affected by multiple new vulnerabilities found in  FreeRDP.\u00a0 In particular,  all versions of Guacamole that were released  before January 2020 are using  vulnerable versions of FreeRDP.\n These vulnerabilities would allow an attacker, or any threat actor who\u00a0\u00a0\u00a0\u00a0 \u00a0successfully compromises a computer inside the organization, to attack back via the Guacamole gateway when an unsuspecting worker connect to his infected machine. This allows a malicious actor to achieve full control over the Guacamole \u00a0\u00a0\u00a0\u00a0\u00a0server, and to intercept and control all other connected sessions.\n  Reverse Attack Scenario: A compromised machine inside the corporate network will leverage the incoming benign connection and attack back via the gateway, aiming to take it over .\n Malicious Worker Scenario: A malicious employee, together with his malicious computer inside the network, can leverage his hold on both ends of the connection in order to take over the gateway\n \u201cAfter our researchers discovered the vulnerability and notified me and the Apache team,\u201d says Fischbein, \u201cWe collaborated and simulated a POC on our staging environment to apply the patch. Within 24 hours from the finding and testing, we implemented the security fix and became the first production environment to be secured against this security vulnerability thus ensuring that our employees can safely connect remotely\u201d.\n     While the global transition to remote work is a necessity in these tough times of the coronavirus pandemic, and will continue to be present as we move to the  post -c orona world, we should not neglect the security implications of such remote connections. Using Apache Guacamole as our subject for this research, we were able to successfully demonstrate how a compromised computer inside the organization could be used to take over the gateway that handles all of the remote sessions into the network. Once in control of the gateway, an attacker can eavesdrop all incoming sessions, record all the user\u00a0\u00a0\u00a0\u00a0 \u00a0credentials, and even start new sessions to control the rest of the computers within the organization. When most of the organization is working remotely, this foothold is equivalent to a full control over the entire organizational network.\n We strongly recommend organizations to make sure that their servers are up-to-date, and\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 that the technology they use for remote working is fully equipped with the appropriate technology to  block such attack attempts.", "posttime": "2020-07-04 07:33:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f0f\u6d1e,apache,critical,\u5b89\u5168", "title": "\u4fee\u590dApache\u8fdc\u7a0b\u684c\u9762\u4e2d\u7684\u4e25\u91cd\u6f0f\u6d1e", "title_en": "Fixing critical vulnerabilities in Apache's remote desktop", "transed": 1, "url": "https://blog.checkpoint.com/2020/07/02/hole-y-guacamole-fixing-critical-vulnerabilities-in-apaches-popular-remote-desktop-gateway/", "via": "", "real_tags": ["\u6f0f\u6d1e", "apache", "critical", "\u5b89\u5168"]}, {"category": "", "categoryclass": "", "imagename": "297be0db6f2dcc9f5d7b42160cba89df.jpg", "infoid": 1009745, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8fd9\u5c31\u662f\u5168\u90e8\u4e86\u3002\u4f60\u77e5\u9053\u54ea\u4e2a\u7f51\u7ad9\u5e94\u8be5\u5728\u8fd9\u4e2a\u540d\u5355\u4e0a\u5417\uff1f\n\u63d0\u4ea4\u5427\uff01", "note_en": "That&#39;s all of them - for now. Know a site that should be on this list?\n Submit it!", "posttime": "2020-07-04 07:33:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7ad9,website", "title": "\u5f02\u60f3\u5929\u5f00\u7684\u7f51\u7ad9\u4ff1\u4e50\u90e8", "title_en": "The Whimsical Website Club", "transed": 1, "url": "https://whimsical.club/", "via": "", "real_tags": ["\u7f51\u7ad9", "website"]}, {"category": "", "categoryclass": "", "imagename": "40e54b947e49397d1e2df6ec72b805aa.jpg", "infoid": 1009744, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52d2\u7d22\u8f6f\u4ef6\u7684\u5a01\u80c1\u53ef\u80fd\u770b\u8d77\u6765\u65e0\u5904\u4e0d\u5728\uff0c\u4f46\u81ea\u4ece4\u5e74\u524d\u7b2c\u4e00\u6b3e\u6210\u719f\u7684Mac\u52d2\u7d22\u8f6f\u4ef6\u6d6e\u51fa\u6c34\u9762\u4ee5\u6765\uff0c\u8fd8\u6ca1\u6709\u592a\u591a\u4e13\u95e8\u4e3a\u611f\u67d3\u82f9\u679cMac\u7535\u8111\u800c\u91cf\u8eab\u5b9a\u505a\u7684\u75c5\u6bd2\u3002\u56e0\u6b64\uff0c\u5f53K7\u5b9e\u9a8c\u5ba4(K7 Lab)\u7684\u6076\u610f\u8f6f\u4ef6\u7814\u7a76\u5458\u8fea\u5185\u4ec0\u00b7\u5fb7\u74e6\u591a\u65af(Dinesh Devadoss)\u5468\u4e8c\u53d1\u5e03\u5173\u4e8eMac\u52d2\u7d22\u8f6f\u4ef6\u65b0\u793a\u4f8b\u7684\u53d1\u73b0\u65f6\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u672c\u8eab\u5c31\u610f\u4e49\u91cd\u5927\u3002\u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u7814\u7a76\u4eba\u5458\u73b0\u5728\u79f0\u4e4b\u4e3aThiefQuest\u7684\u6076\u610f\u8f6f\u4ef6\u4ece\u90a3\u91cc\u53d8\u5f97\u66f4\u6709\u8da3\u4e86\u3002(\u7814\u7a76\u4eba\u5458\u6700\u521d\u5c06\u5176\u547d\u540d\u4e3aEvilQuest\uff0c\u76f4\u5230\u4ed6\u4eec\u53d1\u73b0\u4e86\u540c\u540d\u7684\u84b8\u6c7d\u6e38\u620f\u7cfb\u5217\u3002)\u3002\n\u9664\u4e86\u52d2\u7d22\u8f6f\u4ef6\uff0cThiefQuest\u8fd8\u6709\u4e00\u6574\u5957\u95f4\u8c0d\u8f6f\u4ef6\u529f\u80fd\uff0c\u5141\u8bb8\u5b83\u4ece\u53d7\u611f\u67d3\u7684\u8ba1\u7b97\u673a\u4e2d\u6e17\u51fa\u6587\u4ef6\uff0c\u5728\u7cfb\u7edf\u4e2d\u641c\u7d22\u5bc6\u7801\u548c\u52a0\u5bc6\u8d27\u5e01\u94b1\u5305\u6570\u636e\uff0c\u5e76\u5728\u7528\u6237\u952e\u5165\u5bc6\u7801\u3001\u4fe1\u7528\u5361\u53f7\u7801\u6216\u5176\u4ed6\u8d22\u52a1\u4fe1\u606f\u65f6\u8fd0\u884c\u5f3a\u5927\u7684\u952e\u76d8\u8bb0\u5f55\u7a0b\u5e8f\u6765\u83b7\u53d6\u5bc6\u7801\u3001\u4fe1\u7528\u5361\u53f7\u7801\u6216\u5176\u4ed6\u8d22\u52a1\u4fe1\u606f\u3002\u95f4\u8c0d\u8f6f\u4ef6\u7ec4\u4ef6\u8fd8\u4e00\u76f4\u6f5c\u4f0f\u5728\u53d7\u611f\u67d3\u8bbe\u5907\u4e0a\u4f5c\u4e3a\u540e\u95e8\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u5728\u8ba1\u7b97\u673a\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u5b83\u4e5f\u4f1a\u7ee7\u7eed\u5b58\u5728\uff0c\u5e76\u53ef\u80fd\u88ab\u7528\u4f5c\u989d\u5916\u6216\u7b2c\u4e8c\u9636\u6bb5\u653b\u51fb\u7684\u53d1\u5c04\u53f0\u3002\u8003\u8651\u5230\u52d2\u7d22\u8f6f\u4ef6\u5728Mac\u7535\u8111\u4e0a\u975e\u5e38\u7f55\u89c1\uff0c\u8fd9\u4e00\u53cc\u91cd\u6253\u51fb\u5c24\u5176\u503c\u5f97\u6ce8\u610f\u3002\n\u770b\u4e00\u4e0b\u4ee3\u7801\uff0c\u5982\u679c\u60a8\u5c06\u52d2\u7d22\u8f6f\u4ef6\u903b\u8f91\u4ece\u6240\u6709\u5176\u4ed6\u540e\u95e8\u903b\u8f91\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u90a3\u4e48\u8fd9\u4e24\u90e8\u5206\u4f5c\u4e3a\u5355\u72ec\u7684\u6076\u610f\u8f6f\u4ef6\u662f\u5b8c\u5168\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\u628a\u5b83\u4eec\u6c47\u603b\u5728\u4e00\u8d77\uff0c\u4f60\u4f1a\u89c9\u5f97\u600e\u4e48\u6837\u5462\uff1fMac\u7ba1\u7406\u516c\u53f8JAMF\u7684\u9996\u5e2d\u5b89\u5168\u7814\u7a76\u5458\u5e15\u7279\u91cc\u514b\u00b7\u6c83\u5fb7\u5c14(Patrick Wardle)\u8bf4\u3002\u6211\u76ee\u524d\u5bf9\u8fd9\u4e00\u5207\u7684\u76f4\u89c9\u662f\uff0c\u57fa\u672c\u4e0a\u6709\u4eba\u5728\u8bbe\u8ba1\u4e00\u6b3eMac\u6076\u610f\u8f6f\u4ef6\uff0c\u8ba9\u4ed6\u4eec\u80fd\u591f\u5b8c\u5168\u8fdc\u7a0b\u63a7\u5236\u53d7\u611f\u67d3\u7684\u7cfb\u7edf\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4e00\u4e9b\u52d2\u7d22\u8f6f\u4ef6\u529f\u80fd\uff0c\u4f5c\u4e3a\u8d5a\u53d6\u989d\u5916\u6536\u5165\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n\u5c3d\u7ba1ThiefQuest\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u9664\u975e\u4f60\u4e0b\u8f7d\u76d7\u7248\u3001\u672a\u7ecf\u5ba1\u67e5\u7684\u8f6f\u4ef6\uff0c\u5426\u5219\u5b83\u4e0d\u592a\u53ef\u80fd\u5728\u77ed\u671f\u5185\u611f\u67d3\u4f60\u7684Mac\u7535\u8111\u3002\u5b89\u5168\u516c\u53f8Malwarebytes\u7684Mac\u548c\u79fb\u52a8\u5e73\u53f0\u603b\u76d1\u6258\u9a6c\u65af\u00b7\u91cc\u5fb7(Thomas Reed)\u53d1\u73b0\uff0cThiefQuest\u6b63\u5728\u6346\u7ed1\u4e86\u540d\u724c\u8f6f\u4ef6\u7684Torrent\u7f51\u7ad9\u4e0a\u5206\u53d1\uff0c\u6bd4\u5982\u5b89\u5168\u5e94\u7528\u7a0b\u5e8fLittle Snitch\u3001DJ\u8f6f\u4ef6Mixed in Key\u548c\u97f3\u4e50\u5236\u4f5c\u5e73\u53f0Ableton\u3002K7&39\uff1b\u7684Devadoss\u6307\u51fa\uff0c\u6076\u610f\u8f6f\u4ef6\u672c\u8eab\u88ab\u8bbe\u8ba1\u6210\u770b\u8d77\u6765\u50cf\u8c37\u6b4c\u8f6f\u4ef6\u66f4\u65b0\u7a0b\u5e8f\u3002\u4e0d\u8fc7\uff0c\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u7684\u4e0b\u8f7d\u91cf\u4f3c\u4e4e\u5e76\u4e0d\u9ad8\uff0c\u4e5f\u6ca1\u6709\u4eba\u4e3a\u653b\u51fb\u8005\u63d0\u4f9b\u7684\u6bd4\u7279\u5e01\u5730\u5740\u652f\u4ed8\u8d4e\u91d1\u3002\n\u8981\u60f3\u8ba9\u4f60\u7684Mac\u53d7\u5230\u611f\u67d3\uff0c\u4f60\u9700\u8981\u7834\u89e3\u4e00\u4e2a\u88ab\u653b\u7834\u7684\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7136\u540e\u65e0\u89c6\u82f9\u679c\u53d1\u51fa\u7684\u4e00\u7cfb\u5217\u8b66\u544a\u624d\u80fd\u8fd0\u884c\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u63d0\u9192\uff0c\u8981\u4ece\u503c\u5f97\u4fe1\u8d56\u7684\u6765\u6e90\u83b7\u5f97\u4f60\u7684\u8f6f\u4ef6\uff0c\u6bd4\u5982\u90a3\u4e9b\u4ee3\u7801\u7531\u82f9\u679c\u7b7e\u7f72\u4ee5\u8bc1\u660e\u5176\u5408\u6cd5\u6027\u7684\u5f00\u53d1\u8005\uff0c\u6216\u8005\u4ece\u82f9\u679c\u7684App Store\u672c\u8eab\u83b7\u5f97\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5df2\u7ecf\u6cdb\u6ee5\u7a0b\u5e8f\u7684\u4eba\uff0c\u5e76\u4e14\u4e60\u60ef\u4e86\u5ffd\u89c6\u82f9\u679c\u7684\u65d7\u5e1c\uff0c\u90a3\u4e48ThiefQuest\u5c31\u8bf4\u660e\u4e86\u8fd9\u79cd\u65b9\u6cd5\u7684\u98ce\u9669\u3002\n\u5c3d\u7ba1ThiefQuest\u62e5\u6709\u4e00\u5957\u5e7f\u6cdb\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u52d2\u7d22\u8f6f\u4ef6\u4e0e\u95f4\u8c0d\u8f6f\u4ef6\u878d\u5408\u5728\u4e00\u8d77\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u5982\u4f55\u5c1a\u4e0d\u6e05\u695a\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u52d2\u7d22\u8f6f\u4ef6\u7ec4\u4ef6\u4f3c\u4e4e\u4e0d\u5b8c\u6574\u3002\u6076\u610f\u8f6f\u4ef6\u663e\u793a\u4e86\u4e00\u5f20\u8981\u6c42\u4ed8\u6b3e\u7684\u8d4e\u91d1\u7eb8\u6761\uff0c\u4f46\u5b83\u53ea\u5217\u51fa\u4e86\u53d7\u5bb3\u8005\u53ef\u4ee5\u6c47\u6b3e\u7684\u9759\u6001\u6bd4\u7279\u5e01\u5730\u5740\u3002\u9274\u4e8e\u6bd4\u7279\u5e01\u7684\u533f\u540d\u7279\u6027\uff0c\u6253\u7b97\u5728\u6536\u5230\u4ed8\u6b3e\u540e\u89e3\u5bc6\u53d7\u5bb3\u8005\u7cfb\u7edf\u7684\u653b\u51fb\u8005\u5c06\u65e0\u6cd5\u5206\u8fa8\u8c01\u5df2\u7ecf\u4ed8\u6b3e\uff0c\u8c01\u6ca1\u6709\u4ed8\u6b3e\u3002\u6b64\u5916\uff0c\u8fd9\u5f20\u4fbf\u6761\u6ca1\u6709\u5217\u51fa\u53d7\u5bb3\u8005\u53ef\u4ee5\u7528\u6765\u4e0e\u653b\u51fb\u8005\u5c31\u6536\u5230\u89e3\u5bc6\u5bc6\u94a5\u8fdb\u884c\u901a\u4fe1\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u8fd9\u662f\u6076\u610f\u8f6f\u4ef6\u53ef\u80fd\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6253\u7b97\u7528\u4f5c\u52d2\u7d22\u8f6f\u4ef6\u7684\u53e6\u4e00\u4e2a\u8ff9\u8c61\u3002JAMF\u7684Wardle\u5728\u4ed6\u7684\u5206\u6790\u4e2d\u8fd8\u53d1\u73b0\uff0c\u867d\u7136\u6076\u610f\u8f6f\u4ef6\u62e5\u6709\u89e3\u5bc6\u6587\u4ef6\u6240\u9700\u7684\u6240\u6709\u7ec4\u4ef6\uff0c\u4f46\u5b83\u4eec\u4f3c\u4e4e\u6ca1\u6709\u8bbe\u7f6e\u4e3a\u5728\u91ce\u5916\u5b9e\u9645\u8fd0\u884c\u3002\n\u7814\u7a76\u4eba\u5458\u8fd8\u5f3a\u8c03\uff0c\u5e0c\u671b\u7528\u95f4\u8c0d\u8f6f\u4ef6\u8fdb\u884c\u79d8\u5bc6\u4fa6\u5bdf\u7684\u653b\u51fb\u8005\u901a\u5e38\u5e0c\u671b\u5c3d\u53ef\u80fd\u5730\u5206\u6563\u548c\u4e0d\u5f15\u4eba\u6ce8\u76ee\u3002\u5c06\u52d2\u7d22\u8f6f\u4ef6\u6dfb\u52a0\u5230\u6df7\u642d\u4e2d\u53ea\u4f1a\u5ba3\u5e03\u6076\u610f\u8f6f\u4ef6\u7684\u5b58\u5728\uff0c\u5e76\u53ef\u80fd\u4f1a\u6539\u53d8\u7528\u6237\u5728\u8bbe\u5907\u4e0a\u7684\u884c\u4e3a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u6240\u6709\u6587\u4ef6\u90fd\u88ab\u52a0\u5bc6\u4e86\uff0c\u800c\u4e14\u4ed6\u4eec\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u4e86\u620f\u5267\u6027\u7684\u8d4e\u91d1\u5b57\u6761\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e0d\u53ef\u80fd\u968f\u4fbf\u7f51\u8d2d\u6216\u767b\u5f55\u4f60\u7684\u94f6\u884c\u8d26\u6237\u3002\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u52d2\u7d22\u8f6f\u4ef6\u901a\u5e38\u4e0d\u9700\u8981\u5728\u8bbe\u5907\u4e0a\u5efa\u7acb\u6301\u4e45\u6027\u5e76\u6301\u7eed\u5230\u91cd\u65b0\u542f\u52a8\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u542f\u52a8\u52a0\u5bc6\u8fc7\u7a0b\u3002\u5f53\u7a0b\u5e8f\u5ba3\u5e03\u81ea\u5df1\u4e3a\u6076\u610f\u8f6f\u4ef6\u5e76\u6301\u7eed\u5b58\u5728\u65f6\uff0c\u8fd9\u53ea\u4f1a\u4f7f\u5b89\u5168\u793e\u533a\u66f4\u6709\u53ef\u80fd\u5728\u5c06\u6765\u6807\u8bb0\u548c\u5206\u6790\u8be5\u8f6f\u4ef6\u4ee5\u963b\u6b62\u5b83\u3002\n\u6211\u60f3\uff0c\u5982\u679c\u4f60\u7684\u4e3b\u8981\u76ee\u6807\u662f\u6570\u636e\u5916\u6cc4\uff0c\u4f60\u4f1a\u60f3\u7559\u5728\u540e\u53f0\u3002\n\u8be5\u6076\u610f\u8f6f\u4ef6\u786e\u5b9e\u5305\u62ec\u4e00\u4e9b\u6a21\u7cca\u529f\u80fd\uff0c\u4ee5\u5e2e\u52a9\u5176\u9690\u85cf\u8d77\u6765\u3002\u5982\u679c\u68c0\u6d4b\u5230\u67d0\u4e9b\u5b89\u5168\u5de5\u5177\uff0c\u5982Norton Antivirus\uff0c\u6076\u610f\u8f6f\u4ef6\u5c06\u4e0d\u4f1a\u8fd0\u884c\u3002\u5982\u679c\u5b83\u662f\u5728\u7ecf\u5e38\u7528\u4e8e\u5b89\u5168\u6d4b\u8bd5\u7684\u6570\u5b57\u73af\u5883(\u5982\u6c99\u76d2\u6216\u865a\u62df\u673a)\u4e2d\u6253\u5f00\uff0c\u4e5f\u4f1a\u663e\u5f97\u5f88\u4f4e\u8c03\u3002\u5728\u5206\u6790\u4ee3\u7801\u672c\u8eab\u65f6\uff0c\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u6709\u4e9b\u7ec4\u4ef6\u88ab\u5c0f\u5fc3\u5730\u906e\u853d\u4e86\uff0c\u56e0\u6b64\u5f88\u96be\u7406\u89e3\u5b83\u4eec\u7684\u4f5c\u7528\u3002\u7136\u800c\uff0c\u5947\u602a\u7684\u662f\uff0c\u5176\u4ed6\u4eba\u5374\u88ab\u9057\u6f0f\u5728\u5f00\u653e\u7684\u5730\u65b9\uff0c\u8ba9\u4efb\u4f55\u4eba\u90fd\u80fd\u770b\u5230\u3002\n\u6c83\u5fb7\u5c14\u63a8\u6d4b\uff0c\u6076\u610f\u8f6f\u4ef6\u53ef\u80fd\u662f\u4e3a\u4e86\u5148\u6084\u6084\u8fd0\u884c\u5176\u95f4\u8c0d\u8f6f\u4ef6\u6a21\u5757\uff0c\u6536\u96c6\u6709\u4ef7\u503c\u7684\u6570\u636e\uff0c\u7136\u540e\u624d\u542f\u52a8\u5608\u6742\u7684\u52d2\u7d22\u8f6f\u4ef6\uff0c\u4f5c\u4e3a\u5728\u7ee7\u7eed\u524d\u8fdb\u4e4b\u524d\u4ece\u53d7\u5bb3\u8005\u90a3\u91cc\u6536\u96c6\u4e00\u4e9b\u8d44\u91d1\u7684\u6700\u540e\u52aa\u529b\u3002\u5728\u6d4b\u8bd5\u4e2d\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u6bd4\u5176\u4ed6\u4eba\u66f4\u96be\u8bf1\u5bfc\u6076\u610f\u8f6f\u4ef6\u5f00\u59cb\u52a0\u5bc6\u6587\u4ef6\u4f5c\u4e3a\u5176\u52d2\u7d22\u8f6f\u4ef6\u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u53ef\u80fd\u652f\u6301\u6c83\u5fb7\u5c14\u7684\u7406\u8bba\u3002\u4f46\u8be5\u6076\u610f\u8f6f\u4ef6\u6709\u6f0f\u6d1e\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5f00\u53d1\u8005\u7684\u771f\u6b63\u610f\u56fe\u662f\u4ec0\u4e48\u3002\n\u9274\u4e8e\u6076\u610f\u8f6f\u4ef6\u662f\u901a\u8fc7\u6d2a\u6d41\u4f20\u64ad\u7684\uff0c\u4f3c\u4e4e\u4e13\u6ce8\u4e8e\u5077\u94b1\uff0c\u800c\u4e14\u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u6f0f\u6d1e\uff0c\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u5b83\u5f88\u53ef\u80fd\u662f\u7531\u72af\u7f6a\u9ed1\u5ba2\u521b\u5efa\u7684\uff0c\u800c\u4e0d\u662f\u5bfb\u6c42\u8fdb\u884c\u95f4\u8c0d\u6d3b\u52a8\u7684\u6c11\u65cf\u56fd\u5bb6\u95f4\u8c0d\u3002\u5728Windows\u6076\u610f\u8f6f\u4ef6\u9886\u57df\uff0c\u5c06\u52d2\u7d22\u8f6f\u4ef6\u4f2a\u88c5\u6210\u5206\u6563\u6ce8\u610f\u529b\u6216\u865a\u5047\u6807\u5fd7\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\u3002NotPetya\u6076\u610f\u8f6f\u4ef6\u9020\u6210\u4e86\u5386\u53f2\u4e0a\u5f71\u54cd\u6700\u5927\u3001\u4ee3\u4ef7\u6700\u9ad8\u7684\u7f51\u7edc\u653b\u51fb\uff0c\u6bd5\u7adf\u5b83\u4f2a\u88c5\u6210\u4e86\u52d2\u7d22\u8f6f\u4ef6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8003\u8651\u5230Mac\u52d2\u7d22\u8f6f\u4ef6\u662f\u5982\u6b64\u7f55\u89c1\uff0c\u770b\u5230ThiefQuest\u91c7\u53d6\u5982\u6b64\u6666\u6da9\u7684\u65b9\u6cd5\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\n\u4e5f\u8bb8\u6076\u610f\u8f6f\u4ef6\u6b63\u5728\u4f7f\u7528\u52d2\u7d22\u8f6f\u4ef6\u7684\u6807\u5fd7\u6027\u6587\u4ef6\u52a0\u5bc6\u4f5c\u4e3a\u7834\u574f\u6027\u5de5\u5177\uff0c\u8bd5\u56fe\u6c38\u4e45\u5730\u5c06\u7528\u6237\u9501\u5b9a\u5728\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a\u4e4b\u5916\u3002\u6216\u8005\uff0c\u4e5f\u8bb8ThiefQuest\u53ea\u662f\u5e0c\u671b\u4ece\u53d7\u5bb3\u8005\u90a3\u91cc\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u94b1\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0cMac\u52d2\u7d22\u8f6f\u4ef6\u7684\u771f\u6b63\u95ee\u9898\u662f\uff0c\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u60f3\u8981\u6700\u597d\u7684\u5065\u5eb7\u5de5\u5177\u5417\uff1f\u770b\u770b\u6211\u4eecGear\u56e2\u961f\u6311\u9009\u7684\u6700\u597d\u7684\u5065\u8eab\u8ddf\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907(\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50)\u548c\u6700\u597d\u7684\u8033\u673a", "note_en": "The threat of ransomware may seem ubiquitous, but there haven&#39;t been too many strains tailored specifically to infect Apple&#39;s Mac computers since the  first full-fledged Mac ransomware surfaced only four years ago. So when Dinesh Devadoss, a malware researcher at the firm K7 Lab,  published findings on Tuesday about a new example of Mac ransomware, that fact alone was significant. It turns out, though, that the malware, which researchers are now calling ThiefQuest, gets more interesting from there. (Researchers originally dubbed it EvilQuest, until they discovered the Steam game series of the same name.)\n In addition to ransomware, ThiefQuest has a whole other set of spyware capabilities that allow it to exfiltrate files from an infected computer, search the system for passwords and cryptocurrency wallet data, and run a robust keylogger to grab passwords, credit card numbers, or other financial information as a user types it in. The spyware component also lurks persistently as a backdoor on infected devices, meaning it sticks around even after a computer reboots, and could be used as a launchpad for additional, or &#34;second stage,&#34; attacks. Given that ransomware is so rare on Macs to begin with, this one-two punch is especially noteworthy.\n &#34;Looking at the code, if you split the ransomware logic from all the other backdoor logic the two pieces completely make sense as individual malware. But compiling them together you\u2019re kind of like what?&#34; says Patrick Wardle, principal security researcher at the Mac management firm Jamf. &#34;My current gut feeling about all of this is that someone basically was designing a piece of Mac malware that would give them the ability to completely remotely control an infected system. And then they also added some ransomware capability as a way to make extra money.&#34;\n  Though ThiefQuest is packed with menacing features, it&#39;s unlikely to infect your Mac anytime soon unless you download pirated, unvetted software. Thomas Reed, director of Mac and mobile platforms at the security firm Malwarebytes,  found that ThiefQuest is being distributed on torrent sites bundled with name-brand software, like the security application Little Snitch, DJ software Mixed In Key, and music production platform Ableton. K7&#39;s Devadoss notes that the malware itself is designed to look like a &#34;Google Software Update program.&#34; So far, though, the researchers say that it doesn&#39;t seem to have a significant number of downloads, and no one has paid a ransom to the Bitcoin address the attackers provide.\n  For your Mac to become infected, you would need to torrent a compromised installer and then dismiss a series of warnings from Apple in order to run it. It&#39;s a good reminder to get your software from trustworthy sources, like developers whose code is &#34;signed&#34; by Apple to prove its legitimacy, or from Apple&#39;s App Store itself. But if you&#39;re someone who already torrents programs and is used to ignoring Apple&#39;s flags, ThiefQuest illustrates the risks of that approach.\n   Though ThiefQuest has an extensive suite of capabilities in fusing ransomware with spyware, it&#39;s unclear for what ends, particularly because the ransomware component seems incomplete. The malware shows a ransom note that demands payment, but it only lists a static Bitcoin address where victims can send money. Given Bitcoin&#39;s anonymity features, attackers who intended to decrypt a victim&#39;s systems upon receiving payment would have no way to tell who had paid already and who hadn&#39;t. Additionally, the note doesn&#39;t list an email address that victims can use to correspond with the attackers about receiving a decryption key\u2014another sign that the malware may not actually be intended as ransomware. Jamf&#39;s Wardle also found in  his analysis that while the malware has all the components it would need to decrypt the files, they don&#39;t seem to be set up to actually function in the wild.\n  The researchers also emphasize that attackers looking to conduct clandestine reconnaissance with spyware usually want to be as discrete and inconspicuous as possible. Adding ransomware into the mix simply announces the malware&#39;s presence and would likely change a user&#39;s behavior on the device, because all of their files are being encrypted and they&#39;re seeing a dramatic ransom note on their screen. It&#39;s not a situation where you would be likely to do some casual online shopping or log into your bank account. By the same token, ransomware doesn&#39;t usually need to establish persistence on a device and endure through reboots, because it simply needs to initiate the encryption process. When a program announces itself as malware and then persists, it simply makes it more likely that the security community will flag and analyze the software to block it in the future.\n &#34;I would think if your main goal was data exfiltration you would want to stay in the background, do that as silently as possible, and have the best chance of going undetected,&#34; Malwarebytes&#39; Reed says. &#34;So I don\u2019t really understand the point of this very noisy ransomware. When I installed it for testing, every 30 seconds the computer was screaming at me, beeping at me all the time. It&#39;s really noisy in both the literal and digital sense.&#34;\n The malware does include some obfuscation features to help it hide out. The malware won&#39;t run if it detects certain security tools like Norton Antivirus. It also lays low if it&#39;s being opened in a digital environment that&#39;s often used for security testing, like a sandbox or virtual machine. And when analyzing the code itself, the researchers say that some components were carefully obscured so it would be difficult to understand what they do. Strangely, though, others were left out in the open for anyone to see.\n Wardle theorizes that the malware may have been intended to quietly run its spyware module first, collect valuable data, and only launch the noisy ransomware as a last-ditch effort to gather some funds from a victim before moving on. In testing, some researchers found it harder than others to induce the malware to start encrypting files as part of its ransomware functionality, which may support Wardle&#39;s theory. But the malware is buggy and for now it&#39;s unclear what the developers&#39; true intent is.\n Given that the malware is being distributed through torrents, seems to focus on stealing money, and still has some kinks, the researchers say it was likely created by criminal hackers rather than nation state spies looking to conduct espionage. It&#39;s not entirely uncommon in the realm of Windows malware to don a ransomware guise as a distraction or false flag. The NotPetya malware, which caused the  most impactful and costly cyberattack in history, pretended to be ransomware, after all. Still, given how rare Mac ransomware is, it&#39;s surprising to see ThiefQuest take such a murky approach.\n Perhaps the malware is using ransomware&#39;s hallmark file encryption as a destructive tool in an attempt to permanently lock users out of their computers. Or maybe ThiefQuest is just looking to get as much money out of victims as possible. The real question with Mac ransomware, as always, is what will come next?\n   \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2020-07-04 07:32:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,ransomware,\u6076\u610f\u8f6f\u4ef6", "title": "\u65b0\u7684Mac\u52d2\u7d22\u8f6f\u4ef6\u6bd4\u770b\u8d77\u6765\u66f4\u9669\u6076", "title_en": "New Mac Ransomware Is Even More Sinister Than It Appears", "transed": 1, "url": "https://www.wired.com/story/new-mac-ransomware-thiefquest-evilquest/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u6076\u610f\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009743, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u5408\u6210\u6570\u636e\u662f\u4e00\u79cd\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u8bad\u7ec3\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u7279\u522b\u662f\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u65b9\u9762\uff0c\u4f46\u4e5f\u5728\u5176\u4ed6\u9886\u57df\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8bd5\u56fe\u5bf9\u5408\u6210\u6570\u636e\u7684\u53d1\u5c55\u548c\u5e94\u7528\u7684\u5404\u4e2a\u65b9\u5411\u8fdb\u884c\u5168\u9762\u7684\u7efc\u8ff0\u3002\u9996\u5148\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u57fa\u672c\u8ba1\u7b97\u673a\u89c6\u89c9\u95ee\u9898\u7684\u5408\u6210\u6570\u636e\u96c6\uff0c\u5305\u62ec\u4f4e\u7ea7(\u4f8b\u5982\u5149\u6d41\u4f30\u8ba1)\u548c\u9ad8\u5c42(\u4f8b\u5982\u8bed\u4e49\u5206\u5272)\uff0c\u5ba4\u5916\u548c\u57ce\u5e02\u573a\u666f\u7684\u5408\u6210\u73af\u5883\u548c\u6570\u636e\u96c6(\u81ea\u52a8\u9a7e\u9a76)\uff0c\u5ba4\u5185\u573a\u666f(\u5ba4\u5185\u5bfc\u822a)\uff0c\u7a7a\u4e2d\u5bfc\u822a\uff0c\u673a\u5668\u4eba\u7684\u4eff\u771f\u73af\u5883\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u4e4b\u5916\u7684\u5408\u6210\u6570\u636e\u7684\u5e94\u7528(\u5728\u795e\u7ecf\u7f16\u7a0b\uff0c\u751f\u7269\u4fe1\u606f\u5b66\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u65b9\u9762)\uff1b\u6211\u4eec\u8fd8\u7efc\u8ff0\u4e86\u6539\u8fdb\u5408\u6210\u6570\u636e\u5f00\u53d1\u7684\u5de5\u4f5c\u548c\u4ea7\u751f\u5408\u6210\u6570\u636e\u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u5982GANS\u3002\u5176\u6b21\uff0c\u6211\u4eec\u8be6\u7ec6\u8ba8\u8bba\u4e86\u5408\u6210\u6570\u636e\u5e94\u7528\u4e2d\u4e0d\u53ef\u907f\u514d\u7684\u9886\u57df\u81ea\u9002\u5e94\u95ee\u9898\uff0c\u5305\u62ec\u57fa\u4e8eGaN\u6a21\u578b\u7684\u5408\u6210\u5230\u771f\u5b9e\u7684\u7cbe\u5316\u548c\u6ca1\u6709\u663e\u5f0f\u6570\u636e\u8f6c\u6362\u7684\u7279\u5f81/\u6a21\u578b\u7ea7\u7684\u9886\u57df\u81ea\u9002\u5e94\u3002\u7b2c\u4e09\uff0c\u6211\u4eec\u8f6c\u5411\u4e0e\u7ade\u4e89\u76f8\u5173\u7684\u5408\u6210\u6570\u636e\u5e94\u7528\uff0c\u5e76\u56de\u987e\u4e86\u751f\u6210\u5177\u6709\u4e0d\u540c\u9690\u79c1\u4fdd\u969c\u7684\u5408\u6210\u6570\u636e\u96c6\u7684\u5de5\u4f5c\u3002\u6700\u540e\uff0c\u6211\u4eec\u5f3a\u8c03\u4e86\u5728\u5408\u6210\u6570\u636e\u7814\u7a76\u4e2d\u8fdb\u4e00\u6b65\u5de5\u4f5c\u7684\u6700\u6709\u524d\u9014\u7684\u65b9\u5411\u3002", "note_en": "Download PDF  Abstract: Synthetic data is an increasingly popular tool for training deep learningmodels, especially in computer vision but also in other areas. In this work, weattempt to provide a comprehensive survey of the various directions in thedevelopment and application of synthetic data. First, we discuss syntheticdatasets for basic computer vision problems, both low-level (e.g., optical flowestimation) and high-level (e.g., semantic segmentation), syntheticenvironments and datasets for outdoor and urban scenes (autonomous driving),indoor scenes (indoor navigation), aerial navigation, simulation environmentsfor robotics, applications of synthetic data outside computer vision (in neuralprogramming, bioinformatics, NLP, and more); we also survey the work onimproving synthetic data development and alternative ways to produce it such asGANs. Second, we discuss in detail the synthetic-to-real domain adaptationproblem that inevitably arises in applications of synthetic data, includingsynthetic-to-real refinement with GAN-based models and domain adaptation at thefeature/model level without explicit data transformations. Third, we turn toprivacy-related applications of synthetic data and review the work ongenerating synthetic datasets with differential privacy guarantees. We concludeby highlighting the most promising directions for further work in syntheticdata studies.", "posttime": "2020-07-04 07:32:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u5b66\u4e60,data,\u5408\u6210", "title": "\u6df1\u5ea6\u5b66\u4e60\u7684\u5408\u6210\u6570\u636e(2019\u5e74)", "title_en": "Synthetic Data for Deep Learning (2019)", "transed": 1, "url": "https://arxiv.org/abs/1909.11512", "via": "", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u5b66\u4e60", "data", "\u5408\u6210"]}]